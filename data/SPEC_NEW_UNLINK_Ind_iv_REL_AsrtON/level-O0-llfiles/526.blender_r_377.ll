; ModuleID = 'blender/source/blender/windowmanager/intern/wm_keymap.c'
source_filename = "blender/source/blender/windowmanager/intern/wm_keymap.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.UserDef = type { i32, i32, i32, i32, i32, [768 x i8], [768 x i8], [1024 x i8], [768 x i8], [768 x i8], [768 x i8], [768 x i8], [768 x i8], [1024 x i8], [1024 x i8], i32, i16, i16, i16, i16, i16, i16, i32, i32, i32, i16, i16, i32, i32, i32, i32, i32, i32, i32, i16, i16, i16, i16, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, [64 x i8], i16, i16, i16, i16, i16, i16, i16, i16, [3 x %struct.SolidLight], i16, i16, i16, i16, i16, i16, i16, i16, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i8, i8, i8, i8, i16, i16, i16, i16, i16, i16, float, float, i32, i16, i16, float, i16, i16, i16, i16, %struct.ColorBand, [3 x float], [4 x float], i16, i8, i8, [80 x i8], [1024 x i8], i32, i32, float, float, i32, i16, i16, i16, i16, i16, i16, %struct.WalkNavigation }
%struct.ListBase = type { i8*, i8* }
%struct.SolidLight = type { i32, i32, [4 x float], [4 x float], [4 x float] }
%struct.ColorBand = type { i16, i16, i8, i8, i8, [1 x i8], [32 x %struct.CBData] }
%struct.CBData = type { float, float, float, float, float, i32 }
%struct.WalkNavigation = type { float, float, float, float, float, float, i16, [3 x i16] }
%struct.Global = type { %struct.Main*, [1024 x i8], [1024 x i8], i8, i8, i8, %struct.ListBase, i8, i8, i8, i16, i16, i16, i8, i16, i32, i32, i8, i32, i32, [200 x i8] }
%struct.Main = type { %struct.Main*, %struct.Main*, [1024 x i8], i16, i16, i16, i16, i64, [16 x i8], i16, %struct.Library*, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, [256 x i8], %struct.EvaluationContext*, %struct.MainLock* }
%struct.Library = type { %struct.ID, %struct.ID*, %struct.FileData*, [1024 x i8], [1024 x i8], %struct.Library*, %struct.PackedFile* }
%struct.ID = type { i8*, i8*, %struct.ID*, %struct.Library*, [66 x i8], i16, i32, i32, i32, %struct.IDProperty* }
%struct.IDProperty = type { %struct.IDProperty*, %struct.IDProperty*, i8, i8, i16, [64 x i8], i32, %struct.IDPropertyData, i32, i32 }
%struct.IDPropertyData = type { i8*, %struct.ListBase, i32, i32 }
%struct.FileData = type opaque
%struct.PackedFile = type opaque
%struct.EvaluationContext = type opaque
%struct.MainLock = type opaque
%struct.EnumPropertyItem = type { i32, i8*, i32, i8*, i8* }
%struct.wmKeyMapItem = type { %struct.wmKeyMapItem*, %struct.wmKeyMapItem*, [64 x i8], %struct.IDProperty*, [64 x i8], i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, %struct.PointerRNA* }
%struct.PointerRNA = type { %struct.anon, %struct.StructRNA*, i8* }
%struct.anon = type { i8* }
%struct.StructRNA = type opaque
%struct.wmKeyConfig = type { %struct.wmKeyConfig*, %struct.wmKeyConfig*, [64 x i8], [64 x i8], %struct.ListBase, i32, i32 }
%struct.wmWindowManager = type { %struct.ID, %struct.wmWindow*, %struct.wmWindow*, %struct.ListBase, i32, i16, i16, %struct.ListBase, %struct.ListBase, %struct.ReportList, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.wmKeyConfig*, %struct.wmKeyConfig*, %struct.wmKeyConfig*, %struct.ListBase, %struct.wmTimer*, i8, [7 x i8] }
%struct.wmWindow = type { %struct.wmWindow*, %struct.wmWindow*, i8*, %struct.bScreen*, %struct.bScreen*, [64 x i8], i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i32, i16, i16, %struct.wmEvent*, %struct.wmSubWindow*, %struct.wmGesture*, i32, i32, i8*, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase }
%struct.bScreen = type { %struct.ID, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.Scene*, %struct.Scene*, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, %struct.wmTimer*, i8* }
%struct.Scene = type { %struct.ID, %struct.AnimData*, %struct.Object*, %struct.World*, %struct.Scene*, %struct.ListBase, %struct.Base*, %struct.Object*, [3 x float], [3 x float], [3 x float], [3 x float], i32, i32, i32, i16, i8, [1 x i8], %struct.bNodeTree*, %struct.Editing*, %struct.ToolSettings*, %struct.SceneStats*, %struct.RenderData, %struct.AudioData, %struct.ListBase, %struct.ListBase, i8*, i8*, i8*, i8*, i8*, %struct.DagForest*, i16, i16, i32, %struct.ListBase, %struct.GameFraming, %struct.GameData, %struct.UnitSettings, %struct.bGPdata*, %struct.PhysicsSettings, %struct.MovieClip*, i64, i64, %struct.ColorManagedViewSettings, %struct.ColorManagedDisplaySettings, %struct.ColorManagedColorspaceSettings, %struct.RigidBodyWorld* }
%struct.AnimData = type opaque
%struct.World = type opaque
%struct.Base = type { %struct.Base*, %struct.Base*, i32, i32, i32, i16, i16, %struct.Object* }
%struct.Object = type { %struct.ID, %struct.AnimData*, %struct.SculptSession*, i16, i16, i32, i32, i32, [64 x i8], %struct.Object*, %struct.Object*, %struct.Object*, %struct.Object*, %struct.Object*, %struct.Ipo*, %struct.BoundBox*, %struct.bAction*, %struct.bAction*, %struct.bPose*, i8*, %struct.bGPdata*, %struct.bAnimVizSettings, %struct.bMotionPath*, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, i32, i32, %struct.Material**, i8*, i32, i32, [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [4 x float], [4 x float], [3 x float], [3 x float], float, float, [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i8, i8, i32, i32, i32, i32, i32, float, float, float, float, float, float, float, float, float, float, float, float, i16, i16, i16, i8, i8, i16, i8, i8, float, float, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, float, i16, i16, [4 x float], i32, i32, %struct.BulletSoftBody*, i8, i8, i16, [3 x float], %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.PartDeflect*, %struct.SoftBody*, %struct.Group*, i8, i8, i16, float, %struct.FluidsimSettings*, %struct.CurveCache*, %struct.DerivedMesh*, %struct.DerivedMesh*, i64, i64, i32, i32, %struct.ListBase, %struct.ListBase, %struct.ListBase*, %struct.RigidBodyOb*, %struct.RigidBodyCon*, [2 x float], %struct.ImageUser*, %struct.ListBase, %struct.LodLevel* }
%struct.SculptSession = type opaque
%struct.Ipo = type opaque
%struct.BoundBox = type { [8 x [3 x float]], i32, i32 }
%struct.bAction = type { %struct.ID, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, i32, i32, i32, i32 }
%struct.bPose = type { %struct.ListBase, %struct.GHash*, i16, i16, i32, i32, float, [3 x float], [3 x float], %struct.ListBase, i32, i32, i8*, i8*, %struct.bAnimVizSettings, [64 x i8] }
%struct.GHash = type opaque
%struct.bAnimVizSettings = type { i32, i32, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, i32, i32, i32, i32 }
%struct.bMotionPath = type { %struct.bMotionPathVert*, i32, i32, i32, i32 }
%struct.bMotionPathVert = type { [3 x float], i32 }
%struct.Material = type opaque
%struct.BulletSoftBody = type opaque
%struct.PartDeflect = type opaque
%struct.SoftBody = type opaque
%struct.Group = type opaque
%struct.FluidsimSettings = type opaque
%struct.CurveCache = type opaque
%struct.DerivedMesh = type opaque
%struct.RigidBodyOb = type opaque
%struct.RigidBodyCon = type opaque
%struct.ImageUser = type { %struct.Scene*, i32, i32, i32, i32, i8, i8, i8, i8, i16, i16, i16, i16, i32 }
%struct.LodLevel = type { %struct.LodLevel*, %struct.LodLevel*, %struct.Object*, i32, float }
%struct.bNodeTree = type { %struct.ID, %struct.AnimData*, %struct.bNodeTreeType*, [64 x i8], %struct.StructRNA*, %struct.bGPdata*, [2 x float], %struct.ListBase, %struct.ListBase, i32, i32, i32, i32, i32, i16, i16, i32, i32, i16, i16, i32, %struct.rctf, %struct.ListBase, %struct.ListBase, %struct.bNodeInstanceHash*, %struct.bNodeInstanceKey, i32, %struct.bNodeTreeExec*, void (i8*, float)*, void (i8*, i8*)*, i32 (i8*)*, void (i8*)*, i8*, i8*, i8*, i8* }
%struct.bNodeTreeType = type opaque
%struct.rctf = type { float, float, float, float }
%struct.bNodeInstanceHash = type opaque
%struct.bNodeInstanceKey = type { i32 }
%struct.bNodeTreeExec = type opaque
%struct.Editing = type { %struct.ListBase*, %struct.ListBase, %struct.ListBase, %struct.Sequence*, [1024 x i8], [1024 x i8], i32, i32, i32, i32, %struct.rctf }
%struct.Sequence = type { %struct.Sequence*, %struct.Sequence*, i8*, i8*, [64 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, float, float, i16, i16, i32, i32, %struct.Strip*, %struct.Ipo*, %struct.Scene*, %struct.Object*, %struct.MovieClip*, %struct.Mask*, %struct.anim*, float, float, %struct.Sequence*, %struct.Sequence*, %struct.Sequence*, %struct.ListBase, %struct.bSound*, i8*, float, float, float, float, i8*, i32, i32, i32, float, i32, i8, [3 x i8], %struct.ListBase }
%struct.Strip = type { %struct.Strip*, %struct.Strip*, i32, i32, i32, i32, %struct.StripElem*, [768 x i8], %struct.StripProxy*, %struct.StripCrop*, %struct.StripTransform*, %struct.StripColorBalance*, %struct.ColorManagedColorspaceSettings }
%struct.StripElem = type { [256 x i8], i32, i32 }
%struct.StripProxy = type { [768 x i8], [256 x i8], %struct.anim*, i16, i16, i16, i16 }
%struct.StripCrop = type { i32, i32, i32, i32 }
%struct.StripTransform = type { i32, i32 }
%struct.StripColorBalance = type { [3 x float], [3 x float], [3 x float], i32, i32 }
%struct.Mask = type opaque
%struct.anim = type opaque
%struct.bSound = type opaque
%struct.ToolSettings = type { %struct.VPaint*, %struct.VPaint*, %struct.Sculpt*, %struct.UvSculpt*, float, float, float, i16, i16, i8, i8, i8, i8, float, i16, i8, [5 x i8], %struct.ImagePaintSettings, %struct.ParticleEditSettings, float, float, i16, i16, i8, [1 x i8], i16, float, float, float, float, float, float, float, float, float, float, i16, i8, i8, [3 x i8], i8, %struct.Object*, i8, i8, i8, i8, i8, [8 x i8], [8 x i8], i8, i8, i8, i8, i8, i16, i16, i16, i16, i8, i8, i8, i8, i8, i8, i32, i32, i32, i32, i16, i16, i32, float, float, %struct.UnifiedPaintSettings, %struct.MeshStatVis }
%struct.VPaint = type { %struct.Paint, i16, i16, i32, i32*, %struct.MDeformVert*, i8* }
%struct.Paint = type { %struct.Brush*, %struct.Palette*, i8*, [4 x i8], i32, i32, i32 }
%struct.Brush = type opaque
%struct.Palette = type opaque
%struct.MDeformVert = type opaque
%struct.Sculpt = type { %struct.Paint, i32, [3 x i32], float, i32, float, float, %struct.Object*, i8* }
%struct.UvSculpt = type { %struct.Paint }
%struct.ImagePaintSettings = type { %struct.Paint, i16, i16, i16, i16, [2 x i16], i32, i8*, %struct.Image*, %struct.Image*, %struct.Image*, [3 x float], float }
%struct.Image = type { %struct.ID, [1024 x i8], %struct.MovieCache*, %struct.GPUTexture*, %struct.anim*, %struct.RenderResult*, [8 x %struct.RenderResult*], i16, i16, i16, i16, i16, i16, i32, i16, i16, i16, i16, i16, i16, i32, i32*, %struct.PackedFile*, %struct.PreviewImage*, float, i32, i16, i16, i32, i32, i8, i8, i16, [4 x float], float, float, %struct.ColorManagedColorspaceSettings, i8, [7 x i8], [8 x %struct.RenderSlot] }
%struct.MovieCache = type opaque
%struct.GPUTexture = type opaque
%struct.RenderResult = type opaque
%struct.PreviewImage = type { [2 x i32], [2 x i32], [2 x i16], [2 x i16], [2 x i32*], [2 x %struct.GPUTexture*] }
%struct.RenderSlot = type { [64 x i8] }
%struct.ParticleEditSettings = type { i16, i16, i16, i16, [7 x %struct.ParticleBrushData], i8*, float, float, i32, i32, i32, i32, %struct.Scene*, %struct.Object* }
%struct.ParticleBrushData = type { i16, i16, i16, i16, i32, float }
%struct.UnifiedPaintSettings = type { i32, float, float, float, [3 x float], [3 x float], i32, [2 x float], float, i32, i32, i8, [7 x i8], float, [2 x float], i32, float, [2 x float], [2 x float], i32, %struct.ColorSpace*, float, i32 }
%struct.ColorSpace = type opaque
%struct.MeshStatVis = type { i8, [2 x i8], i8, float, float, float, float, i8, [3 x i8], float, float, float, float }
%struct.SceneStats = type opaque
%struct.RenderData = type { %struct.ImageFormatData, %struct.AviCodecData*, %struct.QuicktimeCodecData*, %struct.QuicktimeCodecSettings, %struct.FFMpegCodecData, i32, i32, i32, float, i32, i32, i32, i32, i16, i16, float, float, float, float, float, i16, i16, i16, i16, i16, i16, i32, i16, i16, i16, i16, i16, i16, i32, i32, i16, i16, i32, i32, i16, i16, i16, i16, i16, i8, i8, i32, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, %struct.rctf, %struct.rctf, %struct.rcti, %struct.ListBase, i16, i16, float, float, float, float, i32, float, float, float, float, i16, i16, i16, i16, i16, i16, float, float, i16, i16, float, float, [1024 x i8], i32, i16, i16, [768 x i8], [4 x float], [4 x float], i8, i8, i8, [5 x i8], i32, i16, i16, float, float, i16, i16, float, i16, i16, i32, i16, i16, i16, i16, float, float, %struct.Text*, i32, float, [32 x i8], %struct.BakeData, i32, i32 }
%struct.ImageFormatData = type { i8, i8, i8, i8, i8, i8, i8, i8, i16, i16, float, i8, i8, [6 x i8], %struct.ColorManagedViewSettings, %struct.ColorManagedDisplaySettings }
%struct.AviCodecData = type { i8*, i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [128 x i8] }
%struct.QuicktimeCodecData = type { i8*, i8*, i32, i32, [128 x i8] }
%struct.QuicktimeCodecSettings = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32, i32 }
%struct.FFMpegCodecData = type { i32, i32, i32, i32, i32, i32, i32, i32, float, i32, i32, i32, i32, i32, i32, i32, %struct.IDProperty* }
%struct.rcti = type { i32, i32, i32, i32 }
%struct.Text = type opaque
%struct.BakeData = type { %struct.ImageFormatData, [1024 x i8], i16, i16, i16, i16, float, float, [3 x i8], i8, i8, [3 x i8], [64 x i8] }
%struct.AudioData = type { i32, float, float, float, i32, i16, i16, float, float }
%struct.DagForest = type opaque
%struct.GameFraming = type { [3 x float], i8, i8, i8, i8 }
%struct.GameData = type { %struct.GameFraming, i16, i16, i16, i16, i16, i16, i16, i16, i16, [3 x i16], %struct.GameDome, i16, i16, float, %struct.RecastData, float, float, i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, float, float, float, float, float }
%struct.GameDome = type { i16, i16, i16, i16, float, float, %struct.Text* }
%struct.RecastData = type { float, float, float, float, float, float, float, float, float, float, i32, float, float, i16, i16 }
%struct.UnitSettings = type { float, i8, i8, i16 }
%struct.bGPdata = type opaque
%struct.PhysicsSettings = type { [3 x float], i32, i32, i32 }
%struct.MovieClip = type { %struct.ID, %struct.AnimData*, [1024 x i8], i32, i32, [2 x i32], float, float, %struct.anim*, %struct.MovieClipCache*, %struct.bGPdata*, %struct.MovieTracking, i8*, %struct.MovieClipProxy, i32, i32, i32, i32, %struct.ColorManagedColorspaceSettings }
%struct.MovieClipCache = type opaque
%struct.MovieTracking = type { %struct.MovieTrackingSettings, %struct.MovieTrackingCamera, %struct.ListBase, %struct.ListBase, %struct.MovieTrackingReconstruction, %struct.MovieTrackingStabilization, %struct.MovieTrackingTrack*, %struct.MovieTrackingPlaneTrack*, %struct.ListBase, i32, i32, %struct.MovieTrackingStats*, %struct.MovieTrackingDopesheet }
%struct.MovieTrackingSettings = type { i32, i16, i16, float, i16, i16, i16, i16, i16, i16, float, i16, i16, i32, i32, i32, i16, i16, float, i32, i32, float, float, i32 }
%struct.MovieTrackingCamera = type { i8*, i16, i16, float, float, float, i16, i16, [2 x float], float, float, float, float, float }
%struct.MovieTrackingReconstruction = type { i32, float, i32, i32, %struct.MovieReconstructedCamera* }
%struct.MovieReconstructedCamera = type { i32, float, [4 x [4 x float]] }
%struct.MovieTrackingStabilization = type { i32, i32, i32, float, %struct.MovieTrackingTrack*, float, float, float, i32, i32, float }
%struct.MovieTrackingTrack = type { %struct.MovieTrackingTrack*, %struct.MovieTrackingTrack*, [64 x i8], [2 x float], [2 x float], [2 x float], [2 x float], [2 x float], i32, i32, %struct.MovieTrackingMarker*, [3 x float], float, i32, i32, i32, [3 x float], i16, i16, i16, i16, i32, float, %struct.bGPdata*, float, float }
%struct.MovieTrackingMarker = type { [2 x float], [4 x [2 x float]], [2 x float], [2 x float], i32, i32 }
%struct.MovieTrackingPlaneTrack = type { %struct.MovieTrackingPlaneTrack*, %struct.MovieTrackingPlaneTrack*, [64 x i8], %struct.MovieTrackingTrack**, i32, i32, %struct.MovieTrackingPlaneMarker*, i32, i32, %struct.Image*, float, i32 }
%struct.MovieTrackingPlaneMarker = type { [4 x [2 x float]], i32, i32 }
%struct.MovieTrackingStats = type { [256 x i8] }
%struct.MovieTrackingDopesheet = type { i32, i16, i16, %struct.ListBase, %struct.ListBase, i32, i32 }
%struct.MovieClipProxy = type { [768 x i8], i16, i16, i16, i16 }
%struct.ColorManagedViewSettings = type { i32, i32, [64 x i8], [64 x i8], float, float, %struct.CurveMapping*, i8* }
%struct.CurveMapping = type { i32, i32, i32, i32, %struct.rctf, %struct.rctf, [4 x %struct.CurveMap], [3 x float], [3 x float], [3 x float], [3 x float] }
%struct.CurveMap = type { i16, i16, float, float, float, [2 x float], [2 x float], %struct.CurveMapPoint*, %struct.CurveMapPoint*, %struct.CurveMapPoint*, [2 x float], [2 x float] }
%struct.CurveMapPoint = type { float, float, i16, i16 }
%struct.ColorManagedDisplaySettings = type { [64 x i8] }
%struct.ColorManagedColorspaceSettings = type { [64 x i8] }
%struct.RigidBodyWorld = type opaque
%struct.wmEvent = type { %struct.wmEvent*, %struct.wmEvent*, i16, i16, i32, i32, [2 x i32], [6 x i8], i8, i8, i16, i16, i32, i32, double, i32, i32, i16, i16, i16, i16, i16, i16, i8*, %struct.wmTabletData*, i16, i16, i32, i8* }
%struct.wmTabletData = type { i32, float, float, float }
%struct.wmSubWindow = type opaque
%struct.wmGesture = type { %struct.wmGesture*, %struct.wmGesture*, i32, i32, i32, i32, i32, i32, i8*, i8* }
%struct.ReportList = type { %struct.ListBase, i32, i32, i32, i32, %struct.wmTimer* }
%struct.wmTimer = type { %struct.wmTimer*, %struct.wmTimer*, %struct.wmWindow*, double, i32, i8*, double, double, double, double, double, i32 }
%struct.wmKeyMap = type { %struct.wmKeyMap*, %struct.wmKeyMap*, %struct.ListBase, %struct.ListBase, [64 x i8], i16, i16, i16, i16, i32 (%struct.bContext*)*, i8* }
%struct.bContext = type opaque
%struct.wmKeyMapDiffItem = type { %struct.wmKeyMapDiffItem*, %struct.wmKeyMapDiffItem*, %struct.wmKeyMapItem*, %struct.wmKeyMapItem* }
%struct.wmOperatorType = type { i8*, i8*, i8*, i8*, i32 (%struct.bContext*, %struct.wmOperator*)*, i8 (%struct.bContext*, %struct.wmOperator*)*, i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)*, void (%struct.bContext*, %struct.wmOperator*)*, i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)*, i32 (%struct.bContext*)*, void (%struct.bContext*, %struct.wmOperator*)*, %struct.StructRNA*, %struct.IDProperty*, %struct.PropertyRNA*, %struct.ListBase, %struct.wmKeyMap*, i8*, i32 (%struct.bContext*, %struct.wmOperatorType*)*, %struct.ExtensionRNA, i16 }
%struct.wmOperator = type { %struct.wmOperator*, %struct.wmOperator*, [64 x i8], %struct.IDProperty*, %struct.wmOperatorType*, i8*, i8*, %struct.PointerRNA*, %struct.ReportList*, %struct.ListBase, %struct.wmOperator*, %struct.uiLayout*, i16, [3 x i16] }
%struct.uiLayout = type opaque
%struct.PropertyRNA = type opaque
%struct.ExtensionRNA = type { i8*, %struct.StructRNA*, i32 (%struct.bContext*, %struct.PointerRNA*, %struct.FunctionRNA*, %struct.ParameterList*)*, void (i8*)* }
%struct.FunctionRNA = type opaque
%struct.ParameterList = type { i8*, %struct.FunctionRNA*, i32, i32, i32 }
%struct.SpaceLink = type { %struct.SpaceLink*, %struct.SpaceLink*, %struct.ListBase, i32, float, [8 x i16] }
%struct.ScrArea = type { %struct.ScrArea*, %struct.ScrArea*, %struct.ScrVert*, %struct.ScrVert*, %struct.ScrVert*, %struct.ScrVert*, %struct.bScreen*, %struct.rcti, i8, i8, i16, i16, i16, i16, i16, i16, i8, i8, %struct.SpaceType*, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase }
%struct.ScrVert = type { %struct.ScrVert*, %struct.ScrVert*, %struct.ScrVert*, %struct.vec2s, i16, i16 }
%struct.vec2s = type { i16, i16 }
%struct.SpaceType = type { %struct.SpaceType*, %struct.SpaceType*, [64 x i8], i32, i32, %struct.SpaceLink* (%struct.bContext*)*, void (%struct.SpaceLink*)*, void (%struct.wmWindowManager*, %struct.ScrArea*)*, void (%struct.wmWindowManager*, %struct.ScrArea*)*, void (%struct.bScreen*, %struct.ScrArea*, %struct.wmNotifier*)*, void (%struct.bContext*, %struct.ScrArea*)*, %struct.SpaceLink* (%struct.SpaceLink*)*, void ()*, void (%struct.wmKeyConfig*)*, void ()*, i32 (%struct.bContext*, i8*, %struct.bContextDataResult*)*, %struct.ListBase, %struct.ListBase, i32 }
%struct.wmNotifier = type { %struct.wmNotifier*, %struct.wmNotifier*, %struct.wmWindowManager*, %struct.wmWindow*, i32, i32, i32, i32, i32, i8* }
%struct.bContextDataResult = type opaque
%struct.ARegion = type { %struct.ARegion*, %struct.ARegion*, %struct.View2D, %struct.rcti, %struct.rcti, i16, i16, i16, i16, i16, i16, float, i16, i16, i16, i16, i16, i16, i16, i16, %struct.ARegionType*, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.wmTimer*, i8*, i8* }
%struct.View2D = type { %struct.rctf, %struct.rctf, %struct.rcti, %struct.rcti, %struct.rcti, [2 x float], [2 x float], float, float, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, float*, i32, i32, %struct.SmoothView2DStore*, %struct.wmTimer* }
%struct.SmoothView2DStore = type opaque
%struct.ARegionType = type { %struct.ARegionType*, %struct.ARegionType*, i32, void (%struct.wmWindowManager*, %struct.ARegion*)*, void (%struct.wmWindowManager*, %struct.ARegion*)*, void (%struct.bContext*, %struct.ARegion*)*, void (%struct.bScreen*, %struct.ScrArea*, %struct.ARegion*, %struct.wmNotifier*)*, void (%struct.ARegion*)*, i8* (i8*)*, void ()*, void (%struct.wmKeyConfig*)*, void (%struct.wmWindow*, %struct.ScrArea*, %struct.ARegion*)*, i32 (%struct.bContext*, i8*, %struct.bContextDataResult*)*, %struct.ListBase, %struct.ListBase, %struct.ListBase, i32, i32, i32, i32, i32, i16, i16, i16 }
%struct.wmEventHandler = type { %struct.wmEventHandler*, %struct.wmEventHandler*, i32, i32, %struct.wmKeyMap*, %struct.rcti*, %struct.rcti*, %struct.wmOperator*, %struct.ScrArea*, %struct.ARegion*, i32 (%struct.bContext*, %struct.wmEvent*, i8*)*, void (%struct.bContext*, i8*)*, i8*, %struct.ScrArea*, %struct.ARegion*, %struct.ARegion*, %struct.bScreen*, %struct.ListBase* }

@MEM_freeN = external dso_local global void (i8*)*, align 8
@MEM_callocN = external dso_local global i8* (i64, i8*)*, align 8
@.str = private unnamed_addr constant [12 x i8] c"wmKeyConfig\00", align 1
@U = external dso_local global %struct.UserDef, align 8
@.str.1 = private unnamed_addr constant [13 x i8] c"keymap entry\00", align 1
@.str.2 = private unnamed_addr constant [16 x i8] c"WM_OT_call_menu\00", align 1
@.str.3 = private unnamed_addr constant [5 x i8] c"name\00", align 1
@.str.4 = private unnamed_addr constant [20 x i8] c"WM_OT_call_menu_pie\00", align 1
@G = external dso_local global %struct.Global, align 8
@.str.5 = private unnamed_addr constant [48 x i8] c"error: modalkeymap_assign, unknown operator %s\0A\00", align 1
@event_type_items = external dso_local global [0 x %struct.EnumPropertyItem], align 8
@.str.6 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.7 = private unnamed_addr constant [5 x i8] c"Any \00", align 1
@.str.8 = private unnamed_addr constant [7 x i8] c"Shift \00", align 1
@.str.9 = private unnamed_addr constant [6 x i8] c"Ctrl \00", align 1
@.str.10 = private unnamed_addr constant [5 x i8] c"Alt \00", align 1
@.str.11 = private unnamed_addr constant [5 x i8] c"Cmd \00", align 1
@.str.12 = private unnamed_addr constant [2 x i8] c" \00", align 1
@wm_keymap_update_flag = internal global i8 0, align 1, !dbg !0
@.str.13 = private unnamed_addr constant [6 x i8] c"WM_OT\00", align 1
@.str.14 = private unnamed_addr constant [7 x i8] c"Window\00", align 1
@.str.15 = private unnamed_addr constant [10 x i8] c"SCREEN_OT\00", align 1
@.str.16 = private unnamed_addr constant [10 x i8] c"RENDER_OT\00", align 1
@.str.17 = private unnamed_addr constant [9 x i8] c"SOUND_OT\00", align 1
@.str.18 = private unnamed_addr constant [9 x i8] c"SCENE_OT\00", align 1
@.str.19 = private unnamed_addr constant [7 x i8] c"Screen\00", align 1
@.str.20 = private unnamed_addr constant [11 x i8] c"GPENCIL_OT\00", align 1
@.str.21 = private unnamed_addr constant [14 x i8] c"Grease Pencil\00", align 1
@.str.22 = private unnamed_addr constant [10 x i8] c"MARKER_OT\00", align 1
@.str.23 = private unnamed_addr constant [8 x i8] c"Markers\00", align 1
@.str.24 = private unnamed_addr constant [8 x i8] c"IMPORT_\00", align 1
@.str.25 = private unnamed_addr constant [8 x i8] c"EXPORT_\00", align 1
@.str.26 = private unnamed_addr constant [10 x i8] c"VIEW3D_OT\00", align 1
@.str.27 = private unnamed_addr constant [8 x i8] c"3D View\00", align 1
@.str.28 = private unnamed_addr constant [10 x i8] c"OBJECT_OT\00", align 1
@.str.29 = private unnamed_addr constant [19 x i8] c"OBJECT_OT_mode_set\00", align 1
@.str.30 = private unnamed_addr constant [17 x i8] c"Object Non-modal\00", align 1
@.str.31 = private unnamed_addr constant [12 x i8] c"Object Mode\00", align 1
@.str.32 = private unnamed_addr constant [9 x i8] c"GROUP_OT\00", align 1
@.str.33 = private unnamed_addr constant [12 x i8] c"MATERIAL_OT\00", align 1
@.str.34 = private unnamed_addr constant [11 x i8] c"PTCACHE_OT\00", align 1
@.str.35 = private unnamed_addr constant [13 x i8] c"RIGIDBODY_OT\00", align 1
@.str.36 = private unnamed_addr constant [8 x i8] c"MESH_OT\00", align 1
@.str.37 = private unnamed_addr constant [5 x i8] c"Mesh\00", align 1
@.str.38 = private unnamed_addr constant [9 x i8] c"CURVE_OT\00", align 1
@.str.39 = private unnamed_addr constant [11 x i8] c"SURFACE_OT\00", align 1
@.str.40 = private unnamed_addr constant [6 x i8] c"Curve\00", align 1
@.str.41 = private unnamed_addr constant [12 x i8] c"ARMATURE_OT\00", align 1
@.str.42 = private unnamed_addr constant [10 x i8] c"SKETCH_OT\00", align 1
@.str.43 = private unnamed_addr constant [9 x i8] c"Armature\00", align 1
@.str.44 = private unnamed_addr constant [8 x i8] c"POSE_OT\00", align 1
@.str.45 = private unnamed_addr constant [11 x i8] c"POSELIB_OT\00", align 1
@.str.46 = private unnamed_addr constant [5 x i8] c"Pose\00", align 1
@.str.47 = private unnamed_addr constant [10 x i8] c"SCULPT_OT\00", align 1
@.str.48 = private unnamed_addr constant [7 x i8] c"Sculpt\00", align 1
@.str.49 = private unnamed_addr constant [10 x i8] c"UV Sculpt\00", align 1
@.str.50 = private unnamed_addr constant [9 x i8] c"MBALL_OT\00", align 1
@.str.51 = private unnamed_addr constant [9 x i8] c"Metaball\00", align 1
@.str.52 = private unnamed_addr constant [11 x i8] c"LATTICE_OT\00", align 1
@.str.53 = private unnamed_addr constant [8 x i8] c"Lattice\00", align 1
@.str.54 = private unnamed_addr constant [12 x i8] c"PARTICLE_OT\00", align 1
@.str.55 = private unnamed_addr constant [9 x i8] c"Particle\00", align 1
@.str.56 = private unnamed_addr constant [8 x i8] c"FONT_OT\00", align 1
@.str.57 = private unnamed_addr constant [5 x i8] c"Font\00", align 1
@.str.58 = private unnamed_addr constant [21 x i8] c"PAINT_OT_face_select\00", align 1
@.str.59 = private unnamed_addr constant [10 x i8] c"Face Mask\00", align 1
@.str.60 = private unnamed_addr constant [9 x i8] c"PAINT_OT\00", align 1
@.str.61 = private unnamed_addr constant [13 x i8] c"Weight Paint\00", align 1
@.str.62 = private unnamed_addr constant [13 x i8] c"Vertex Paint\00", align 1
@.str.63 = private unnamed_addr constant [12 x i8] c"Image Paint\00", align 1
@.str.64 = private unnamed_addr constant [8 x i8] c"TIME_OT\00", align 1
@.str.65 = private unnamed_addr constant [9 x i8] c"Timeline\00", align 1
@.str.66 = private unnamed_addr constant [9 x i8] c"IMAGE_OT\00", align 1
@.str.67 = private unnamed_addr constant [6 x i8] c"Image\00", align 1
@.str.68 = private unnamed_addr constant [8 x i8] c"CLIP_OT\00", align 1
@.str.69 = private unnamed_addr constant [5 x i8] c"Clip\00", align 1
@.str.70 = private unnamed_addr constant [8 x i8] c"MASK_OT\00", align 1
@.str.71 = private unnamed_addr constant [13 x i8] c"Mask Editing\00", align 1
@.str.72 = private unnamed_addr constant [6 x i8] c"UV_OT\00", align 1
@.str.73 = private unnamed_addr constant [10 x i8] c"UV Editor\00", align 1
@.str.74 = private unnamed_addr constant [8 x i8] c"NODE_OT\00", align 1
@.str.75 = private unnamed_addr constant [12 x i8] c"Node Editor\00", align 1
@.str.76 = private unnamed_addr constant [17 x i8] c"ANIM_OT_channels\00", align 1
@.str.77 = private unnamed_addr constant [19 x i8] c"Animation Channels\00", align 1
@.str.78 = private unnamed_addr constant [8 x i8] c"ANIM_OT\00", align 1
@.str.79 = private unnamed_addr constant [10 x i8] c"Animation\00", align 1
@.str.80 = private unnamed_addr constant [9 x i8] c"GRAPH_OT\00", align 1
@.str.81 = private unnamed_addr constant [13 x i8] c"Graph Editor\00", align 1
@.str.82 = private unnamed_addr constant [10 x i8] c"ACTION_OT\00", align 1
@.str.83 = private unnamed_addr constant [10 x i8] c"Dopesheet\00", align 1
@.str.84 = private unnamed_addr constant [7 x i8] c"NLA_OT\00", align 1
@.str.85 = private unnamed_addr constant [11 x i8] c"NLA Editor\00", align 1
@.str.86 = private unnamed_addr constant [10 x i8] c"SCRIPT_OT\00", align 1
@.str.87 = private unnamed_addr constant [7 x i8] c"Script\00", align 1
@.str.88 = private unnamed_addr constant [8 x i8] c"TEXT_OT\00", align 1
@.str.89 = private unnamed_addr constant [5 x i8] c"Text\00", align 1
@.str.90 = private unnamed_addr constant [13 x i8] c"SEQUENCER_OT\00", align 1
@.str.91 = private unnamed_addr constant [10 x i8] c"Sequencer\00", align 1
@.str.92 = private unnamed_addr constant [11 x i8] c"CONSOLE_OT\00", align 1
@.str.93 = private unnamed_addr constant [8 x i8] c"Console\00", align 1
@.str.94 = private unnamed_addr constant [8 x i8] c"INFO_OT\00", align 1
@.str.95 = private unnamed_addr constant [5 x i8] c"Info\00", align 1
@.str.96 = private unnamed_addr constant [8 x i8] c"FILE_OT\00", align 1
@.str.97 = private unnamed_addr constant [13 x i8] c"File Browser\00", align 1
@.str.98 = private unnamed_addr constant [9 x i8] c"LOGIC_OT\00", align 1
@.str.99 = private unnamed_addr constant [13 x i8] c"Logic Editor\00", align 1
@.str.100 = private unnamed_addr constant [12 x i8] c"OUTLINER_OT\00", align 1
@.str.101 = private unnamed_addr constant [9 x i8] c"Outliner\00", align 1
@.str.102 = private unnamed_addr constant [13 x i8] c"TRANSFORM_OT\00", align 1
@.str.103 = private unnamed_addr constant [3 x i8] c"ON\00", align 1
@.str.104 = private unnamed_addr constant [4 x i8] c"OFF\00", align 1
@.str.105 = private unnamed_addr constant [12 x i8] c"keymap list\00", align 1
@.str.106 = private unnamed_addr constant [17 x i8] c"wmKeyMapDiffItem\00", align 1
@MEM_dupallocN = external dso_local global i8* (i8*)*, align 8
@.str.107 = private unnamed_addr constant [18 x i8] c"UserKeyMapItemPtr\00", align 1

; Function Attrs: noinline nounwind uwtable
define dso_local void @WM_keymap_properties_reset(%struct.wmKeyMapItem* %kmi, %struct.IDProperty* %properties) #0 !dbg !284 {
entry:
  %kmi.addr = alloca %struct.wmKeyMapItem*, align 8
  %properties.addr = alloca %struct.IDProperty*, align 8
  store %struct.wmKeyMapItem* %kmi, %struct.wmKeyMapItem** %kmi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmKeyMapItem** %kmi.addr, metadata !357, metadata !DIExpression()), !dbg !358
  store %struct.IDProperty* %properties, %struct.IDProperty** %properties.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.IDProperty** %properties.addr, metadata !359, metadata !DIExpression()), !dbg !360
  %0 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi.addr, align 8, !dbg !361
  %ptr = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %0, i32 0, i32 17, !dbg !361
  %1 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !361
  %tobool = icmp ne %struct.PointerRNA* %1, null, !dbg !361
  br i1 %tobool, label %if.then, label %if.end, !dbg !363

if.then:                                          ; preds = %entry
  %2 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi.addr, align 8, !dbg !364
  %ptr1 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %2, i32 0, i32 17, !dbg !366
  %3 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr1, align 8, !dbg !366
  call void @WM_operator_properties_free(%struct.PointerRNA* %3), !dbg !367
  %4 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !368
  %5 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi.addr, align 8, !dbg !369
  %ptr2 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %5, i32 0, i32 17, !dbg !370
  %6 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr2, align 8, !dbg !370
  %7 = bitcast %struct.PointerRNA* %6 to i8*, !dbg !369
  call void %4(i8* %7), !dbg !368
  %8 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi.addr, align 8, !dbg !371
  %ptr3 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %8, i32 0, i32 17, !dbg !372
  store %struct.PointerRNA* null, %struct.PointerRNA** %ptr3, align 8, !dbg !373
  br label %if.end, !dbg !374

if.end:                                           ; preds = %if.then, %entry
  %9 = load %struct.IDProperty*, %struct.IDProperty** %properties.addr, align 8, !dbg !375
  %10 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi.addr, align 8, !dbg !376
  %properties4 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %10, i32 0, i32 3, !dbg !377
  store %struct.IDProperty* %9, %struct.IDProperty** %properties4, align 8, !dbg !378
  %11 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi.addr, align 8, !dbg !379
  call void @wm_keymap_item_properties_set(%struct.wmKeyMapItem* %11), !dbg !380
  ret void, !dbg !381
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

declare dso_local void @WM_operator_properties_free(%struct.PointerRNA*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @wm_keymap_item_properties_set(%struct.wmKeyMapItem* %kmi) #0 !dbg !382 {
entry:
  %kmi.addr = alloca %struct.wmKeyMapItem*, align 8
  store %struct.wmKeyMapItem* %kmi, %struct.wmKeyMapItem** %kmi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmKeyMapItem** %kmi.addr, metadata !385, metadata !DIExpression()), !dbg !386
  %0 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi.addr, align 8, !dbg !387
  %ptr = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %0, i32 0, i32 17, !dbg !388
  %1 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi.addr, align 8, !dbg !389
  %properties = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %1, i32 0, i32 3, !dbg !390
  %2 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi.addr, align 8, !dbg !391
  %idname = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %2, i32 0, i32 2, !dbg !392
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %idname, i64 0, i64 0, !dbg !391
  call void @WM_operator_properties_alloc(%struct.PointerRNA** %ptr, %struct.IDProperty** %properties, i8* %arraydecay), !dbg !393
  %3 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi.addr, align 8, !dbg !394
  %ptr1 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %3, i32 0, i32 17, !dbg !395
  %4 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr1, align 8, !dbg !395
  call void @WM_operator_properties_sanitize(%struct.PointerRNA* %4, i8 zeroext 1), !dbg !396
  ret void, !dbg !397
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @WM_keymap_map_type_get(%struct.wmKeyMapItem* %kmi) #0 !dbg !398 {
entry:
  %retval = alloca i32, align 4
  %kmi.addr = alloca %struct.wmKeyMapItem*, align 8
  store %struct.wmKeyMapItem* %kmi, %struct.wmKeyMapItem** %kmi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmKeyMapItem** %kmi.addr, metadata !401, metadata !DIExpression()), !dbg !402
  %0 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi.addr, align 8, !dbg !403
  %type = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %0, i32 0, i32 6, !dbg !403
  %1 = load i16, i16* %type, align 2, !dbg !403
  %conv = sext i16 %1 to i32, !dbg !403
  %cmp = icmp sge i32 %conv, 272, !dbg !403
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !403

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi.addr, align 8, !dbg !403
  %type2 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %2, i32 0, i32 6, !dbg !403
  %3 = load i16, i16* %type2, align 2, !dbg !403
  %conv3 = sext i16 %3 to i32, !dbg !403
  %cmp4 = icmp sle i32 %conv3, 287, !dbg !403
  br i1 %cmp4, label %if.then, label %if.end, !dbg !405

if.then:                                          ; preds = %land.lhs.true
  store i32 4, i32* %retval, align 4, !dbg !406
  br label %return, !dbg !406

if.end:                                           ; preds = %land.lhs.true, %entry
  %4 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi.addr, align 8, !dbg !408
  %type6 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %4, i32 0, i32 6, !dbg !408
  %5 = load i16, i16* %type6, align 2, !dbg !408
  %conv7 = sext i16 %5 to i32, !dbg !408
  %cmp8 = icmp sge i32 %conv7, 32, !dbg !408
  br i1 %cmp8, label %land.lhs.true10, label %lor.lhs.false, !dbg !408

land.lhs.true10:                                  ; preds = %if.end
  %6 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi.addr, align 8, !dbg !408
  %type11 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %6, i32 0, i32 6, !dbg !408
  %7 = load i16, i16* %type11, align 2, !dbg !408
  %conv12 = sext i16 %7 to i32, !dbg !408
  %cmp13 = icmp sle i32 %conv12, 255, !dbg !408
  br i1 %cmp13, label %if.then24, label %lor.lhs.false, !dbg !408

lor.lhs.false:                                    ; preds = %land.lhs.true10, %if.end
  %8 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi.addr, align 8, !dbg !408
  %type15 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %8, i32 0, i32 6, !dbg !408
  %9 = load i16, i16* %type15, align 2, !dbg !408
  %conv16 = sext i16 %9 to i32, !dbg !408
  %cmp17 = icmp sge i32 %conv16, 300, !dbg !408
  br i1 %cmp17, label %land.lhs.true19, label %if.end25, !dbg !408

land.lhs.true19:                                  ; preds = %lor.lhs.false
  %10 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi.addr, align 8, !dbg !408
  %type20 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %10, i32 0, i32 6, !dbg !408
  %11 = load i16, i16* %type20, align 2, !dbg !408
  %conv21 = sext i16 %11 to i32, !dbg !408
  %cmp22 = icmp sle i32 %conv21, 319, !dbg !408
  br i1 %cmp22, label %if.then24, label %if.end25, !dbg !410

if.then24:                                        ; preds = %land.lhs.true19, %land.lhs.true10
  store i32 0, i32* %retval, align 4, !dbg !411
  br label %return, !dbg !411

if.end25:                                         ; preds = %land.lhs.true19, %lor.lhs.false
  %12 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi.addr, align 8, !dbg !413
  %type26 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %12, i32 0, i32 6, !dbg !413
  %13 = load i16, i16* %type26, align 2, !dbg !413
  %conv27 = sext i16 %13 to i32, !dbg !413
  %cmp28 = icmp sge i32 %conv27, 20483, !dbg !413
  br i1 %cmp28, label %land.lhs.true30, label %if.end36, !dbg !413

land.lhs.true30:                                  ; preds = %if.end25
  %14 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi.addr, align 8, !dbg !413
  %type31 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %14, i32 0, i32 6, !dbg !413
  %15 = load i16, i16* %type31, align 2, !dbg !413
  %conv32 = sext i16 %15 to i32, !dbg !413
  %cmp33 = icmp sle i32 %conv32, 20496, !dbg !413
  br i1 %cmp33, label %if.then35, label %if.end36, !dbg !415

if.then35:                                        ; preds = %land.lhs.true30
  store i32 2, i32* %retval, align 4, !dbg !416
  br label %return, !dbg !416

if.end36:                                         ; preds = %land.lhs.true30, %if.end25
  %16 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi.addr, align 8, !dbg !418
  %type37 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %16, i32 0, i32 6, !dbg !418
  %17 = load i16, i16* %type37, align 2, !dbg !418
  %conv38 = sext i16 %17 to i32, !dbg !418
  %cmp39 = icmp sge i32 %conv38, 1, !dbg !418
  br i1 %cmp39, label %land.lhs.true41, label %if.end47, !dbg !418

land.lhs.true41:                                  ; preds = %if.end36
  %18 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi.addr, align 8, !dbg !418
  %type42 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %18, i32 0, i32 6, !dbg !418
  %19 = load i16, i16* %type42, align 2, !dbg !418
  %conv43 = sext i16 %19 to i32, !dbg !418
  %cmp44 = icmp sle i32 %conv43, 19, !dbg !418
  br i1 %cmp44, label %if.then46, label %if.end47, !dbg !420

if.then46:                                        ; preds = %land.lhs.true41
  store i32 1, i32* %retval, align 4, !dbg !421
  br label %return, !dbg !421

if.end47:                                         ; preds = %land.lhs.true41, %if.end36
  %20 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi.addr, align 8, !dbg !423
  %type48 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %20, i32 0, i32 6, !dbg !423
  %21 = load i16, i16* %type48, align 2, !dbg !423
  %conv49 = sext i16 %21 to i32, !dbg !423
  %cmp50 = icmp sge i32 %conv49, 400, !dbg !423
  br i1 %cmp50, label %land.lhs.true52, label %if.end58, !dbg !423

land.lhs.true52:                                  ; preds = %if.end47
  %22 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi.addr, align 8, !dbg !423
  %type53 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %22, i32 0, i32 6, !dbg !423
  %23 = load i16, i16* %type53, align 2, !dbg !423
  %conv54 = sext i16 %23 to i32, !dbg !423
  %cmp55 = icmp slt i32 %conv54, 439, !dbg !423
  br i1 %cmp55, label %if.then57, label %if.end58, !dbg !425

if.then57:                                        ; preds = %land.lhs.true52
  store i32 5, i32* %retval, align 4, !dbg !426
  br label %return, !dbg !426

if.end58:                                         ; preds = %land.lhs.true52, %if.end47
  %24 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi.addr, align 8, !dbg !428
  %type59 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %24, i32 0, i32 6, !dbg !430
  %25 = load i16, i16* %type59, align 2, !dbg !430
  %conv60 = sext i16 %25 to i32, !dbg !428
  %cmp61 = icmp eq i32 %conv60, -2, !dbg !431
  br i1 %cmp61, label %if.then63, label %if.end64, !dbg !432

if.then63:                                        ; preds = %if.end58
  store i32 3, i32* %retval, align 4, !dbg !433
  br label %return, !dbg !433

if.end64:                                         ; preds = %if.end58
  store i32 0, i32* %retval, align 4, !dbg !435
  br label %return, !dbg !435

return:                                           ; preds = %if.end64, %if.then63, %if.then57, %if.then46, %if.then35, %if.then24, %if.then
  %26 = load i32, i32* %retval, align 4, !dbg !436
  ret i32 %26, !dbg !436
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.wmKeyConfig* @WM_keyconfig_new(%struct.wmWindowManager* %wm, i8* %idname) #0 !dbg !437 {
entry:
  %wm.addr = alloca %struct.wmWindowManager*, align 8
  %idname.addr = alloca i8*, align 8
  %keyconf = alloca %struct.wmKeyConfig*, align 8
  store %struct.wmWindowManager* %wm, %struct.wmWindowManager** %wm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmWindowManager** %wm.addr, metadata !2114, metadata !DIExpression()), !dbg !2115
  store i8* %idname, i8** %idname.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %idname.addr, metadata !2116, metadata !DIExpression()), !dbg !2117
  call void @llvm.dbg.declare(metadata %struct.wmKeyConfig** %keyconf, metadata !2118, metadata !DIExpression()), !dbg !2119
  %0 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !2120
  %call = call i8* %0(i64 168, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0)), !dbg !2120
  %1 = bitcast i8* %call to %struct.wmKeyConfig*, !dbg !2120
  store %struct.wmKeyConfig* %1, %struct.wmKeyConfig** %keyconf, align 8, !dbg !2121
  %2 = load %struct.wmKeyConfig*, %struct.wmKeyConfig** %keyconf, align 8, !dbg !2122
  %idname1 = getelementptr inbounds %struct.wmKeyConfig, %struct.wmKeyConfig* %2, i32 0, i32 2, !dbg !2123
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %idname1, i64 0, i64 0, !dbg !2122
  %3 = load i8*, i8** %idname.addr, align 8, !dbg !2124
  %call2 = call i8* @BLI_strncpy(i8* %arraydecay, i8* %3, i64 64), !dbg !2125
  %4 = load %struct.wmWindowManager*, %struct.wmWindowManager** %wm.addr, align 8, !dbg !2126
  %keyconfigs = getelementptr inbounds %struct.wmWindowManager, %struct.wmWindowManager* %4, i32 0, i32 13, !dbg !2127
  %5 = load %struct.wmKeyConfig*, %struct.wmKeyConfig** %keyconf, align 8, !dbg !2128
  %6 = bitcast %struct.wmKeyConfig* %5 to i8*, !dbg !2128
  call void @BLI_addtail(%struct.ListBase* %keyconfigs, i8* %6), !dbg !2129
  %7 = load %struct.wmKeyConfig*, %struct.wmKeyConfig** %keyconf, align 8, !dbg !2130
  ret %struct.wmKeyConfig* %7, !dbg !2131
}

declare dso_local i8* @BLI_strncpy(i8*, i8*, i64) #2

declare dso_local void @BLI_addtail(%struct.ListBase*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.wmKeyConfig* @WM_keyconfig_new_user(%struct.wmWindowManager* %wm, i8* %idname) #0 !dbg !2132 {
entry:
  %wm.addr = alloca %struct.wmWindowManager*, align 8
  %idname.addr = alloca i8*, align 8
  %keyconf = alloca %struct.wmKeyConfig*, align 8
  store %struct.wmWindowManager* %wm, %struct.wmWindowManager** %wm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmWindowManager** %wm.addr, metadata !2133, metadata !DIExpression()), !dbg !2134
  store i8* %idname, i8** %idname.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %idname.addr, metadata !2135, metadata !DIExpression()), !dbg !2136
  call void @llvm.dbg.declare(metadata %struct.wmKeyConfig** %keyconf, metadata !2137, metadata !DIExpression()), !dbg !2138
  %0 = load %struct.wmWindowManager*, %struct.wmWindowManager** %wm.addr, align 8, !dbg !2139
  %1 = load i8*, i8** %idname.addr, align 8, !dbg !2140
  %call = call %struct.wmKeyConfig* @WM_keyconfig_new(%struct.wmWindowManager* %0, i8* %1), !dbg !2141
  store %struct.wmKeyConfig* %call, %struct.wmKeyConfig** %keyconf, align 8, !dbg !2138
  %2 = load %struct.wmKeyConfig*, %struct.wmKeyConfig** %keyconf, align 8, !dbg !2142
  %flag = getelementptr inbounds %struct.wmKeyConfig, %struct.wmKeyConfig* %2, i32 0, i32 6, !dbg !2143
  %3 = load i32, i32* %flag, align 4, !dbg !2144
  %or = or i32 %3, 2, !dbg !2144
  store i32 %or, i32* %flag, align 4, !dbg !2144
  %4 = load %struct.wmKeyConfig*, %struct.wmKeyConfig** %keyconf, align 8, !dbg !2145
  ret %struct.wmKeyConfig* %4, !dbg !2146
}

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @WM_keyconfig_remove(%struct.wmWindowManager* %wm, %struct.wmKeyConfig* %keyconf) #0 !dbg !2147 {
entry:
  %retval = alloca i8, align 1
  %wm.addr = alloca %struct.wmWindowManager*, align 8
  %keyconf.addr = alloca %struct.wmKeyConfig*, align 8
  store %struct.wmWindowManager* %wm, %struct.wmWindowManager** %wm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmWindowManager** %wm.addr, metadata !2150, metadata !DIExpression()), !dbg !2151
  store %struct.wmKeyConfig* %keyconf, %struct.wmKeyConfig** %keyconf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmKeyConfig** %keyconf.addr, metadata !2152, metadata !DIExpression()), !dbg !2153
  %0 = load %struct.wmWindowManager*, %struct.wmWindowManager** %wm.addr, align 8, !dbg !2154
  %keyconfigs = getelementptr inbounds %struct.wmWindowManager, %struct.wmWindowManager* %0, i32 0, i32 13, !dbg !2156
  %1 = load %struct.wmKeyConfig*, %struct.wmKeyConfig** %keyconf.addr, align 8, !dbg !2157
  %2 = bitcast %struct.wmKeyConfig* %1 to i8*, !dbg !2157
  %call = call i32 @BLI_findindex(%struct.ListBase* %keyconfigs, i8* %2), !dbg !2158
  %cmp = icmp ne i32 %call, -1, !dbg !2159
  br i1 %cmp, label %if.then, label %if.else, !dbg !2160

if.then:                                          ; preds = %entry
  %3 = load %struct.wmKeyConfig*, %struct.wmKeyConfig** %keyconf.addr, align 8, !dbg !2161
  %idname = getelementptr inbounds %struct.wmKeyConfig, %struct.wmKeyConfig* %3, i32 0, i32 2, !dbg !2164
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %idname, i64 0, i64 0, !dbg !2161
  %call1 = call i32 @strncmp(i8* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 45, i64 0), i8* %arraydecay, i64 64) #4, !dbg !2165
  %cmp2 = icmp eq i32 %call1, 0, !dbg !2166
  br i1 %cmp2, label %if.then3, label %if.end, !dbg !2167

if.then3:                                         ; preds = %if.then
  %4 = load %struct.wmWindowManager*, %struct.wmWindowManager** %wm.addr, align 8, !dbg !2168
  %defaultconf = getelementptr inbounds %struct.wmWindowManager, %struct.wmWindowManager* %4, i32 0, i32 14, !dbg !2170
  %5 = load %struct.wmKeyConfig*, %struct.wmKeyConfig** %defaultconf, align 8, !dbg !2170
  %idname4 = getelementptr inbounds %struct.wmKeyConfig, %struct.wmKeyConfig* %5, i32 0, i32 2, !dbg !2171
  %arraydecay5 = getelementptr inbounds [64 x i8], [64 x i8]* %idname4, i64 0, i64 0, !dbg !2168
  %call6 = call i8* @BLI_strncpy(i8* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 45, i64 0), i8* %arraydecay5, i64 64), !dbg !2172
  call void @WM_keyconfig_update_tag(%struct.wmKeyMap* null, %struct.wmKeyMapItem* null), !dbg !2173
  br label %if.end, !dbg !2174

if.end:                                           ; preds = %if.then3, %if.then
  %6 = load %struct.wmWindowManager*, %struct.wmWindowManager** %wm.addr, align 8, !dbg !2175
  %keyconfigs7 = getelementptr inbounds %struct.wmWindowManager, %struct.wmWindowManager* %6, i32 0, i32 13, !dbg !2176
  %7 = load %struct.wmKeyConfig*, %struct.wmKeyConfig** %keyconf.addr, align 8, !dbg !2177
  %8 = bitcast %struct.wmKeyConfig* %7 to i8*, !dbg !2177
  call void @BLI_remlink(%struct.ListBase* %keyconfigs7, i8* %8), !dbg !2178
  %9 = load %struct.wmKeyConfig*, %struct.wmKeyConfig** %keyconf.addr, align 8, !dbg !2179
  call void @WM_keyconfig_free(%struct.wmKeyConfig* %9), !dbg !2180
  store i8 1, i8* %retval, align 1, !dbg !2181
  br label %return, !dbg !2181

if.else:                                          ; preds = %entry
  store i8 0, i8* %retval, align 1, !dbg !2182
  br label %return, !dbg !2182

return:                                           ; preds = %if.else, %if.end
  %10 = load i8, i8* %retval, align 1, !dbg !2184
  ret i8 %10, !dbg !2184
}

declare dso_local i32 @BLI_findindex(%struct.ListBase*, i8*) #2

; Function Attrs: nounwind readonly
declare dso_local i32 @strncmp(i8*, i8*, i64) #3

; Function Attrs: noinline nounwind uwtable
define dso_local void @WM_keyconfig_update_tag(%struct.wmKeyMap* %km, %struct.wmKeyMapItem* %kmi) #0 !dbg !2185 {
entry:
  %km.addr = alloca %struct.wmKeyMap*, align 8
  %kmi.addr = alloca %struct.wmKeyMapItem*, align 8
  store %struct.wmKeyMap* %km, %struct.wmKeyMap** %km.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmKeyMap** %km.addr, metadata !2208, metadata !DIExpression()), !dbg !2209
  store %struct.wmKeyMapItem* %kmi, %struct.wmKeyMapItem** %kmi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmKeyMapItem** %kmi.addr, metadata !2210, metadata !DIExpression()), !dbg !2211
  %0 = load i8, i8* @wm_keymap_update_flag, align 1, !dbg !2212
  %conv = zext i8 %0 to i32, !dbg !2212
  %or = or i32 %conv, 1, !dbg !2212
  %conv1 = trunc i32 %or to i8, !dbg !2212
  store i8 %conv1, i8* @wm_keymap_update_flag, align 1, !dbg !2212
  %1 = load %struct.wmKeyMap*, %struct.wmKeyMap** %km.addr, align 8, !dbg !2213
  %tobool = icmp ne %struct.wmKeyMap* %1, null, !dbg !2213
  br i1 %tobool, label %if.then, label %if.end, !dbg !2215

if.then:                                          ; preds = %entry
  %2 = load %struct.wmKeyMap*, %struct.wmKeyMap** %km.addr, align 8, !dbg !2216
  %flag = getelementptr inbounds %struct.wmKeyMap, %struct.wmKeyMap* %2, i32 0, i32 7, !dbg !2217
  %3 = load i16, i16* %flag, align 4, !dbg !2218
  %conv2 = sext i16 %3 to i32, !dbg !2218
  %or3 = or i32 %conv2, 64, !dbg !2218
  %conv4 = trunc i32 %or3 to i16, !dbg !2218
  store i16 %conv4, i16* %flag, align 4, !dbg !2218
  br label %if.end, !dbg !2216

if.end:                                           ; preds = %if.then, %entry
  %4 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi.addr, align 8, !dbg !2219
  %tobool5 = icmp ne %struct.wmKeyMapItem* %4, null, !dbg !2219
  br i1 %tobool5, label %if.then6, label %if.end11, !dbg !2221

if.then6:                                         ; preds = %if.end
  %5 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi.addr, align 8, !dbg !2222
  %flag7 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %5, i32 0, i32 13, !dbg !2223
  %6 = load i16, i16* %flag7, align 8, !dbg !2224
  %conv8 = sext i16 %6 to i32, !dbg !2224
  %or9 = or i32 %conv8, 8, !dbg !2224
  %conv10 = trunc i32 %or9 to i16, !dbg !2224
  store i16 %conv10, i16* %flag7, align 8, !dbg !2224
  br label %if.end11, !dbg !2222

if.end11:                                         ; preds = %if.then6, %if.end
  ret void, !dbg !2225
}

declare dso_local void @BLI_remlink(%struct.ListBase*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @WM_keyconfig_free(%struct.wmKeyConfig* %keyconf) #0 !dbg !2226 {
entry:
  %keyconf.addr = alloca %struct.wmKeyConfig*, align 8
  %km = alloca %struct.wmKeyMap*, align 8
  store %struct.wmKeyConfig* %keyconf, %struct.wmKeyConfig** %keyconf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmKeyConfig** %keyconf.addr, metadata !2229, metadata !DIExpression()), !dbg !2230
  call void @llvm.dbg.declare(metadata %struct.wmKeyMap** %km, metadata !2231, metadata !DIExpression()), !dbg !2232
  br label %while.cond, !dbg !2233

while.cond:                                       ; preds = %while.body, %entry
  %0 = load %struct.wmKeyConfig*, %struct.wmKeyConfig** %keyconf.addr, align 8, !dbg !2234
  %keymaps = getelementptr inbounds %struct.wmKeyConfig, %struct.wmKeyConfig* %0, i32 0, i32 4, !dbg !2235
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %keymaps, i32 0, i32 0, !dbg !2236
  %1 = load i8*, i8** %first, align 8, !dbg !2236
  %2 = bitcast i8* %1 to %struct.wmKeyMap*, !dbg !2234
  store %struct.wmKeyMap* %2, %struct.wmKeyMap** %km, align 8, !dbg !2237
  %tobool = icmp ne %struct.wmKeyMap* %2, null, !dbg !2233
  br i1 %tobool, label %while.body, label %while.end, !dbg !2233

while.body:                                       ; preds = %while.cond
  %3 = load %struct.wmKeyMap*, %struct.wmKeyMap** %km, align 8, !dbg !2238
  call void @WM_keymap_free(%struct.wmKeyMap* %3), !dbg !2240
  %4 = load %struct.wmKeyConfig*, %struct.wmKeyConfig** %keyconf.addr, align 8, !dbg !2241
  %keymaps1 = getelementptr inbounds %struct.wmKeyConfig, %struct.wmKeyConfig* %4, i32 0, i32 4, !dbg !2242
  %5 = load %struct.wmKeyMap*, %struct.wmKeyMap** %km, align 8, !dbg !2243
  %6 = bitcast %struct.wmKeyMap* %5 to i8*, !dbg !2243
  call void @BLI_freelinkN(%struct.ListBase* %keymaps1, i8* %6), !dbg !2244
  br label %while.cond, !dbg !2233, !llvm.loop !2245

while.end:                                        ; preds = %while.cond
  %7 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !2247
  %8 = load %struct.wmKeyConfig*, %struct.wmKeyConfig** %keyconf.addr, align 8, !dbg !2248
  %9 = bitcast %struct.wmKeyConfig* %8 to i8*, !dbg !2248
  call void %7(i8* %9), !dbg !2247
  ret void, !dbg !2249
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @WM_keymap_free(%struct.wmKeyMap* %keymap) #0 !dbg !2250 {
entry:
  %keymap.addr = alloca %struct.wmKeyMap*, align 8
  %kmi = alloca %struct.wmKeyMapItem*, align 8
  %kmdi = alloca %struct.wmKeyMapDiffItem*, align 8
  store %struct.wmKeyMap* %keymap, %struct.wmKeyMap** %keymap.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmKeyMap** %keymap.addr, metadata !2253, metadata !DIExpression()), !dbg !2254
  call void @llvm.dbg.declare(metadata %struct.wmKeyMapItem** %kmi, metadata !2255, metadata !DIExpression()), !dbg !2256
  call void @llvm.dbg.declare(metadata %struct.wmKeyMapDiffItem** %kmdi, metadata !2257, metadata !DIExpression()), !dbg !2267
  %0 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap.addr, align 8, !dbg !2268
  %diff_items = getelementptr inbounds %struct.wmKeyMap, %struct.wmKeyMap* %0, i32 0, i32 3, !dbg !2270
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %diff_items, i32 0, i32 0, !dbg !2271
  %1 = load i8*, i8** %first, align 8, !dbg !2271
  %2 = bitcast i8* %1 to %struct.wmKeyMapDiffItem*, !dbg !2268
  store %struct.wmKeyMapDiffItem* %2, %struct.wmKeyMapDiffItem** %kmdi, align 8, !dbg !2272
  br label %for.cond, !dbg !2273

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load %struct.wmKeyMapDiffItem*, %struct.wmKeyMapDiffItem** %kmdi, align 8, !dbg !2274
  %tobool = icmp ne %struct.wmKeyMapDiffItem* %3, null, !dbg !2276
  br i1 %tobool, label %for.body, label %for.end, !dbg !2276

for.body:                                         ; preds = %for.cond
  %4 = load %struct.wmKeyMapDiffItem*, %struct.wmKeyMapDiffItem** %kmdi, align 8, !dbg !2277
  call void @wm_keymap_diff_item_free(%struct.wmKeyMapDiffItem* %4), !dbg !2278
  br label %for.inc, !dbg !2278

for.inc:                                          ; preds = %for.body
  %5 = load %struct.wmKeyMapDiffItem*, %struct.wmKeyMapDiffItem** %kmdi, align 8, !dbg !2279
  %next = getelementptr inbounds %struct.wmKeyMapDiffItem, %struct.wmKeyMapDiffItem* %5, i32 0, i32 0, !dbg !2280
  %6 = load %struct.wmKeyMapDiffItem*, %struct.wmKeyMapDiffItem** %next, align 8, !dbg !2280
  store %struct.wmKeyMapDiffItem* %6, %struct.wmKeyMapDiffItem** %kmdi, align 8, !dbg !2281
  br label %for.cond, !dbg !2282, !llvm.loop !2283

for.end:                                          ; preds = %for.cond
  %7 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap.addr, align 8, !dbg !2285
  %items = getelementptr inbounds %struct.wmKeyMap, %struct.wmKeyMap* %7, i32 0, i32 2, !dbg !2287
  %first1 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %items, i32 0, i32 0, !dbg !2288
  %8 = load i8*, i8** %first1, align 8, !dbg !2288
  %9 = bitcast i8* %8 to %struct.wmKeyMapItem*, !dbg !2285
  store %struct.wmKeyMapItem* %9, %struct.wmKeyMapItem** %kmi, align 8, !dbg !2289
  br label %for.cond2, !dbg !2290

for.cond2:                                        ; preds = %for.inc5, %for.end
  %10 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi, align 8, !dbg !2291
  %tobool3 = icmp ne %struct.wmKeyMapItem* %10, null, !dbg !2293
  br i1 %tobool3, label %for.body4, label %for.end7, !dbg !2293

for.body4:                                        ; preds = %for.cond2
  %11 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi, align 8, !dbg !2294
  call void @wm_keymap_item_free(%struct.wmKeyMapItem* %11), !dbg !2295
  br label %for.inc5, !dbg !2295

for.inc5:                                         ; preds = %for.body4
  %12 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi, align 8, !dbg !2296
  %next6 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %12, i32 0, i32 0, !dbg !2297
  %13 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %next6, align 8, !dbg !2297
  store %struct.wmKeyMapItem* %13, %struct.wmKeyMapItem** %kmi, align 8, !dbg !2298
  br label %for.cond2, !dbg !2299, !llvm.loop !2300

for.end7:                                         ; preds = %for.cond2
  %14 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap.addr, align 8, !dbg !2302
  %diff_items8 = getelementptr inbounds %struct.wmKeyMap, %struct.wmKeyMap* %14, i32 0, i32 3, !dbg !2303
  call void @BLI_freelistN(%struct.ListBase* %diff_items8), !dbg !2304
  %15 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap.addr, align 8, !dbg !2305
  %items9 = getelementptr inbounds %struct.wmKeyMap, %struct.wmKeyMap* %15, i32 0, i32 2, !dbg !2306
  call void @BLI_freelistN(%struct.ListBase* %items9), !dbg !2307
  ret void, !dbg !2308
}

declare dso_local void @BLI_freelinkN(%struct.ListBase*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @WM_keyconfig_set_active(%struct.wmWindowManager* %wm, i8* %idname) #0 !dbg !2309 {
entry:
  %wm.addr = alloca %struct.wmWindowManager*, align 8
  %idname.addr = alloca i8*, align 8
  store %struct.wmWindowManager* %wm, %struct.wmWindowManager** %wm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmWindowManager** %wm.addr, metadata !2312, metadata !DIExpression()), !dbg !2313
  store i8* %idname, i8** %idname.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %idname.addr, metadata !2314, metadata !DIExpression()), !dbg !2315
  %0 = load %struct.wmWindowManager*, %struct.wmWindowManager** %wm.addr, align 8, !dbg !2316
  call void @WM_keyconfig_update(%struct.wmWindowManager* %0), !dbg !2317
  %1 = load i8*, i8** %idname.addr, align 8, !dbg !2318
  %call = call i8* @BLI_strncpy(i8* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 45, i64 0), i8* %1, i64 64), !dbg !2319
  call void @WM_keyconfig_update_tag(%struct.wmKeyMap* null, %struct.wmKeyMapItem* null), !dbg !2320
  %2 = load %struct.wmWindowManager*, %struct.wmWindowManager** %wm.addr, align 8, !dbg !2321
  call void @WM_keyconfig_update(%struct.wmWindowManager* %2), !dbg !2322
  ret void, !dbg !2323
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @WM_keyconfig_update(%struct.wmWindowManager* %wm) #0 !dbg !2324 {
entry:
  %wm.addr = alloca %struct.wmWindowManager*, align 8
  %km = alloca %struct.wmKeyMap*, align 8
  %defaultmap = alloca %struct.wmKeyMap*, align 8
  %addonmap = alloca %struct.wmKeyMap*, align 8
  %usermap = alloca %struct.wmKeyMap*, align 8
  %kmn = alloca %struct.wmKeyMap*, align 8
  %kmi = alloca %struct.wmKeyMapItem*, align 8
  %kmdi = alloca %struct.wmKeyMapDiffItem*, align 8
  %compat_update = alloca i8, align 1
  %kc = alloca %struct.wmKeyConfig*, align 8
  %keymaps_lb = alloca [5 x %struct.ListBase*], align 16
  %i = alloca i32, align 4
  store %struct.wmWindowManager* %wm, %struct.wmWindowManager** %wm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmWindowManager** %wm.addr, metadata !2327, metadata !DIExpression()), !dbg !2328
  call void @llvm.dbg.declare(metadata %struct.wmKeyMap** %km, metadata !2329, metadata !DIExpression()), !dbg !2330
  call void @llvm.dbg.declare(metadata %struct.wmKeyMap** %defaultmap, metadata !2331, metadata !DIExpression()), !dbg !2332
  call void @llvm.dbg.declare(metadata %struct.wmKeyMap** %addonmap, metadata !2333, metadata !DIExpression()), !dbg !2334
  call void @llvm.dbg.declare(metadata %struct.wmKeyMap** %usermap, metadata !2335, metadata !DIExpression()), !dbg !2336
  call void @llvm.dbg.declare(metadata %struct.wmKeyMap** %kmn, metadata !2337, metadata !DIExpression()), !dbg !2338
  call void @llvm.dbg.declare(metadata %struct.wmKeyMapItem** %kmi, metadata !2339, metadata !DIExpression()), !dbg !2340
  call void @llvm.dbg.declare(metadata %struct.wmKeyMapDiffItem** %kmdi, metadata !2341, metadata !DIExpression()), !dbg !2342
  call void @llvm.dbg.declare(metadata i8* %compat_update, metadata !2343, metadata !DIExpression()), !dbg !2344
  store i8 0, i8* %compat_update, align 1, !dbg !2344
  %0 = load i8, i8* getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 8), align 1, !dbg !2345
  %tobool = icmp ne i8 %0, 0, !dbg !2347
  br i1 %tobool, label %if.then, label %if.end, !dbg !2348

if.then:                                          ; preds = %entry
  br label %if.end132, !dbg !2349

if.end:                                           ; preds = %entry
  %1 = load i8, i8* @wm_keymap_update_flag, align 1, !dbg !2350
  %conv = zext i8 %1 to i32, !dbg !2350
  %cmp = icmp eq i32 %conv, 0, !dbg !2352
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !2353

if.then2:                                         ; preds = %if.end
  br label %if.end132, !dbg !2354

if.end3:                                          ; preds = %if.end
  %2 = load i8, i8* @wm_keymap_update_flag, align 1, !dbg !2355
  %conv4 = zext i8 %2 to i32, !dbg !2355
  %and = and i32 %conv4, 2, !dbg !2357
  %tobool5 = icmp ne i32 %and, 0, !dbg !2357
  br i1 %tobool5, label %if.then6, label %if.end24, !dbg !2358

if.then6:                                         ; preds = %if.end3
  call void @llvm.dbg.declare(metadata %struct.wmKeyConfig** %kc, metadata !2359, metadata !DIExpression()), !dbg !2361
  call void @llvm.dbg.declare(metadata [5 x %struct.ListBase*]* %keymaps_lb, metadata !2362, metadata !DIExpression()), !dbg !2364
  %arrayinit.begin = getelementptr inbounds [5 x %struct.ListBase*], [5 x %struct.ListBase*]* %keymaps_lb, i64 0, i64 0, !dbg !2365
  store %struct.ListBase* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 42), %struct.ListBase** %arrayinit.begin, align 8, !dbg !2365
  %arrayinit.element = getelementptr inbounds %struct.ListBase*, %struct.ListBase** %arrayinit.begin, i64 1, !dbg !2365
  %3 = load %struct.wmWindowManager*, %struct.wmWindowManager** %wm.addr, align 8, !dbg !2366
  %userconf = getelementptr inbounds %struct.wmWindowManager, %struct.wmWindowManager* %3, i32 0, i32 16, !dbg !2367
  %4 = load %struct.wmKeyConfig*, %struct.wmKeyConfig** %userconf, align 8, !dbg !2367
  %keymaps = getelementptr inbounds %struct.wmKeyConfig, %struct.wmKeyConfig* %4, i32 0, i32 4, !dbg !2368
  store %struct.ListBase* %keymaps, %struct.ListBase** %arrayinit.element, align 8, !dbg !2365
  %arrayinit.element7 = getelementptr inbounds %struct.ListBase*, %struct.ListBase** %arrayinit.element, i64 1, !dbg !2365
  %5 = load %struct.wmWindowManager*, %struct.wmWindowManager** %wm.addr, align 8, !dbg !2369
  %defaultconf = getelementptr inbounds %struct.wmWindowManager, %struct.wmWindowManager* %5, i32 0, i32 14, !dbg !2370
  %6 = load %struct.wmKeyConfig*, %struct.wmKeyConfig** %defaultconf, align 8, !dbg !2370
  %keymaps8 = getelementptr inbounds %struct.wmKeyConfig, %struct.wmKeyConfig* %6, i32 0, i32 4, !dbg !2371
  store %struct.ListBase* %keymaps8, %struct.ListBase** %arrayinit.element7, align 8, !dbg !2365
  %arrayinit.element9 = getelementptr inbounds %struct.ListBase*, %struct.ListBase** %arrayinit.element7, i64 1, !dbg !2365
  %7 = load %struct.wmWindowManager*, %struct.wmWindowManager** %wm.addr, align 8, !dbg !2372
  %addonconf = getelementptr inbounds %struct.wmWindowManager, %struct.wmWindowManager* %7, i32 0, i32 15, !dbg !2373
  %8 = load %struct.wmKeyConfig*, %struct.wmKeyConfig** %addonconf, align 8, !dbg !2373
  %keymaps10 = getelementptr inbounds %struct.wmKeyConfig, %struct.wmKeyConfig* %8, i32 0, i32 4, !dbg !2374
  store %struct.ListBase* %keymaps10, %struct.ListBase** %arrayinit.element9, align 8, !dbg !2365
  %arrayinit.element11 = getelementptr inbounds %struct.ListBase*, %struct.ListBase** %arrayinit.element9, i64 1, !dbg !2365
  store %struct.ListBase* null, %struct.ListBase** %arrayinit.element11, align 8, !dbg !2365
  call void @llvm.dbg.declare(metadata i32* %i, metadata !2375, metadata !DIExpression()), !dbg !2376
  store i32 0, i32* %i, align 4, !dbg !2377
  br label %for.cond, !dbg !2379

for.cond:                                         ; preds = %for.inc, %if.then6
  %9 = load i32, i32* %i, align 4, !dbg !2380
  %idxprom = sext i32 %9 to i64, !dbg !2382
  %arrayidx = getelementptr inbounds [5 x %struct.ListBase*], [5 x %struct.ListBase*]* %keymaps_lb, i64 0, i64 %idxprom, !dbg !2382
  %10 = load %struct.ListBase*, %struct.ListBase** %arrayidx, align 8, !dbg !2382
  %tobool12 = icmp ne %struct.ListBase* %10, null, !dbg !2383
  br i1 %tobool12, label %for.body, label %for.end, !dbg !2383

for.body:                                         ; preds = %for.cond
  %11 = load i32, i32* %i, align 4, !dbg !2384
  %idxprom13 = sext i32 %11 to i64, !dbg !2386
  %arrayidx14 = getelementptr inbounds [5 x %struct.ListBase*], [5 x %struct.ListBase*]* %keymaps_lb, i64 0, i64 %idxprom13, !dbg !2386
  %12 = load %struct.ListBase*, %struct.ListBase** %arrayidx14, align 8, !dbg !2386
  call void @wm_keyconfig_properties_update_ot(%struct.ListBase* %12), !dbg !2387
  br label %for.inc, !dbg !2388

for.inc:                                          ; preds = %for.body
  %13 = load i32, i32* %i, align 4, !dbg !2389
  %inc = add nsw i32 %13, 1, !dbg !2389
  store i32 %inc, i32* %i, align 4, !dbg !2389
  br label %for.cond, !dbg !2390, !llvm.loop !2391

for.end:                                          ; preds = %for.cond
  %14 = load %struct.wmWindowManager*, %struct.wmWindowManager** %wm.addr, align 8, !dbg !2393
  %keyconfigs = getelementptr inbounds %struct.wmWindowManager, %struct.wmWindowManager* %14, i32 0, i32 13, !dbg !2395
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %keyconfigs, i32 0, i32 0, !dbg !2396
  %15 = load i8*, i8** %first, align 8, !dbg !2396
  %16 = bitcast i8* %15 to %struct.wmKeyConfig*, !dbg !2393
  store %struct.wmKeyConfig* %16, %struct.wmKeyConfig** %kc, align 8, !dbg !2397
  br label %for.cond15, !dbg !2398

for.cond15:                                       ; preds = %for.inc19, %for.end
  %17 = load %struct.wmKeyConfig*, %struct.wmKeyConfig** %kc, align 8, !dbg !2399
  %tobool16 = icmp ne %struct.wmKeyConfig* %17, null, !dbg !2401
  br i1 %tobool16, label %for.body17, label %for.end20, !dbg !2401

for.body17:                                       ; preds = %for.cond15
  %18 = load %struct.wmKeyConfig*, %struct.wmKeyConfig** %kc, align 8, !dbg !2402
  %keymaps18 = getelementptr inbounds %struct.wmKeyConfig, %struct.wmKeyConfig* %18, i32 0, i32 4, !dbg !2404
  call void @wm_keyconfig_properties_update_ot(%struct.ListBase* %keymaps18), !dbg !2405
  br label %for.inc19, !dbg !2406

for.inc19:                                        ; preds = %for.body17
  %19 = load %struct.wmKeyConfig*, %struct.wmKeyConfig** %kc, align 8, !dbg !2407
  %next = getelementptr inbounds %struct.wmKeyConfig, %struct.wmKeyConfig* %19, i32 0, i32 0, !dbg !2408
  %20 = load %struct.wmKeyConfig*, %struct.wmKeyConfig** %next, align 8, !dbg !2408
  store %struct.wmKeyConfig* %20, %struct.wmKeyConfig** %kc, align 8, !dbg !2409
  br label %for.cond15, !dbg !2410, !llvm.loop !2411

for.end20:                                        ; preds = %for.cond15
  %21 = load i8, i8* @wm_keymap_update_flag, align 1, !dbg !2413
  %conv21 = zext i8 %21 to i32, !dbg !2413
  %and22 = and i32 %conv21, -3, !dbg !2413
  %conv23 = trunc i32 %and22 to i8, !dbg !2413
  store i8 %conv23, i8* @wm_keymap_update_flag, align 1, !dbg !2413
  br label %if.end24, !dbg !2414

if.end24:                                         ; preds = %for.end20, %if.end3
  %22 = load i8, i8* @wm_keymap_update_flag, align 1, !dbg !2415
  %conv25 = zext i8 %22 to i32, !dbg !2415
  %cmp26 = icmp eq i32 %conv25, 0, !dbg !2417
  br i1 %cmp26, label %if.then28, label %if.end29, !dbg !2418

if.then28:                                        ; preds = %if.end24
  br label %if.end132, !dbg !2419

if.end29:                                         ; preds = %if.end24
  %23 = load i8*, i8** getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 42, i32 0), align 8, !dbg !2420
  %24 = bitcast i8* %23 to %struct.wmKeyMap*, !dbg !2422
  store %struct.wmKeyMap* %24, %struct.wmKeyMap** %km, align 8, !dbg !2423
  br label %for.cond30, !dbg !2424

for.cond30:                                       ; preds = %for.inc61, %if.end29
  %25 = load %struct.wmKeyMap*, %struct.wmKeyMap** %km, align 8, !dbg !2425
  %tobool31 = icmp ne %struct.wmKeyMap* %25, null, !dbg !2427
  br i1 %tobool31, label %for.body32, label %for.end63, !dbg !2427

for.body32:                                       ; preds = %for.cond30
  %26 = load %struct.wmKeyMap*, %struct.wmKeyMap** %km, align 8, !dbg !2428
  %flag = getelementptr inbounds %struct.wmKeyMap, %struct.wmKeyMap* %26, i32 0, i32 7, !dbg !2431
  %27 = load i16, i16* %flag, align 4, !dbg !2431
  %conv33 = sext i16 %27 to i32, !dbg !2428
  %and34 = and i32 %conv33, 1, !dbg !2432
  %cmp35 = icmp eq i32 %and34, 0, !dbg !2433
  br i1 %cmp35, label %if.then37, label %if.end60, !dbg !2434

if.then37:                                        ; preds = %for.body32
  %28 = load %struct.wmKeyMap*, %struct.wmKeyMap** %km, align 8, !dbg !2435
  %diff_items = getelementptr inbounds %struct.wmKeyMap, %struct.wmKeyMap* %28, i32 0, i32 3, !dbg !2438
  %first38 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %diff_items, i32 0, i32 0, !dbg !2439
  %29 = load i8*, i8** %first38, align 8, !dbg !2439
  %30 = bitcast i8* %29 to %struct.wmKeyMapDiffItem*, !dbg !2435
  store %struct.wmKeyMapDiffItem* %30, %struct.wmKeyMapDiffItem** %kmdi, align 8, !dbg !2440
  br label %for.cond39, !dbg !2441

for.cond39:                                       ; preds = %for.inc50, %if.then37
  %31 = load %struct.wmKeyMapDiffItem*, %struct.wmKeyMapDiffItem** %kmdi, align 8, !dbg !2442
  %tobool40 = icmp ne %struct.wmKeyMapDiffItem* %31, null, !dbg !2444
  br i1 %tobool40, label %for.body41, label %for.end52, !dbg !2444

for.body41:                                       ; preds = %for.cond39
  %32 = load %struct.wmKeyMapDiffItem*, %struct.wmKeyMapDiffItem** %kmdi, align 8, !dbg !2445
  %add_item = getelementptr inbounds %struct.wmKeyMapDiffItem, %struct.wmKeyMapDiffItem* %32, i32 0, i32 3, !dbg !2448
  %33 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %add_item, align 8, !dbg !2448
  %tobool42 = icmp ne %struct.wmKeyMapItem* %33, null, !dbg !2445
  br i1 %tobool42, label %if.then43, label %if.end45, !dbg !2449

if.then43:                                        ; preds = %for.body41
  %34 = load %struct.wmKeyMapDiffItem*, %struct.wmKeyMapDiffItem** %kmdi, align 8, !dbg !2450
  %add_item44 = getelementptr inbounds %struct.wmKeyMapDiffItem, %struct.wmKeyMapDiffItem* %34, i32 0, i32 3, !dbg !2451
  %35 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %add_item44, align 8, !dbg !2451
  call void @wm_keymap_item_properties_set(%struct.wmKeyMapItem* %35), !dbg !2452
  br label %if.end45, !dbg !2452

if.end45:                                         ; preds = %if.then43, %for.body41
  %36 = load %struct.wmKeyMapDiffItem*, %struct.wmKeyMapDiffItem** %kmdi, align 8, !dbg !2453
  %remove_item = getelementptr inbounds %struct.wmKeyMapDiffItem, %struct.wmKeyMapDiffItem* %36, i32 0, i32 2, !dbg !2455
  %37 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %remove_item, align 8, !dbg !2455
  %tobool46 = icmp ne %struct.wmKeyMapItem* %37, null, !dbg !2453
  br i1 %tobool46, label %if.then47, label %if.end49, !dbg !2456

if.then47:                                        ; preds = %if.end45
  %38 = load %struct.wmKeyMapDiffItem*, %struct.wmKeyMapDiffItem** %kmdi, align 8, !dbg !2457
  %remove_item48 = getelementptr inbounds %struct.wmKeyMapDiffItem, %struct.wmKeyMapDiffItem* %38, i32 0, i32 2, !dbg !2458
  %39 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %remove_item48, align 8, !dbg !2458
  call void @wm_keymap_item_properties_set(%struct.wmKeyMapItem* %39), !dbg !2459
  br label %if.end49, !dbg !2459

if.end49:                                         ; preds = %if.then47, %if.end45
  br label %for.inc50, !dbg !2460

for.inc50:                                        ; preds = %if.end49
  %40 = load %struct.wmKeyMapDiffItem*, %struct.wmKeyMapDiffItem** %kmdi, align 8, !dbg !2461
  %next51 = getelementptr inbounds %struct.wmKeyMapDiffItem, %struct.wmKeyMapDiffItem* %40, i32 0, i32 0, !dbg !2462
  %41 = load %struct.wmKeyMapDiffItem*, %struct.wmKeyMapDiffItem** %next51, align 8, !dbg !2462
  store %struct.wmKeyMapDiffItem* %41, %struct.wmKeyMapDiffItem** %kmdi, align 8, !dbg !2463
  br label %for.cond39, !dbg !2464, !llvm.loop !2465

for.end52:                                        ; preds = %for.cond39
  %42 = load %struct.wmKeyMap*, %struct.wmKeyMap** %km, align 8, !dbg !2467
  %items = getelementptr inbounds %struct.wmKeyMap, %struct.wmKeyMap* %42, i32 0, i32 2, !dbg !2469
  %first53 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %items, i32 0, i32 0, !dbg !2470
  %43 = load i8*, i8** %first53, align 8, !dbg !2470
  %44 = bitcast i8* %43 to %struct.wmKeyMapItem*, !dbg !2467
  store %struct.wmKeyMapItem* %44, %struct.wmKeyMapItem** %kmi, align 8, !dbg !2471
  br label %for.cond54, !dbg !2472

for.cond54:                                       ; preds = %for.inc57, %for.end52
  %45 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi, align 8, !dbg !2473
  %tobool55 = icmp ne %struct.wmKeyMapItem* %45, null, !dbg !2475
  br i1 %tobool55, label %for.body56, label %for.end59, !dbg !2475

for.body56:                                       ; preds = %for.cond54
  %46 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi, align 8, !dbg !2476
  call void @wm_keymap_item_properties_set(%struct.wmKeyMapItem* %46), !dbg !2477
  br label %for.inc57, !dbg !2477

for.inc57:                                        ; preds = %for.body56
  %47 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi, align 8, !dbg !2478
  %next58 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %47, i32 0, i32 0, !dbg !2479
  %48 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %next58, align 8, !dbg !2479
  store %struct.wmKeyMapItem* %48, %struct.wmKeyMapItem** %kmi, align 8, !dbg !2480
  br label %for.cond54, !dbg !2481, !llvm.loop !2482

for.end59:                                        ; preds = %for.cond54
  br label %if.end60, !dbg !2484

if.end60:                                         ; preds = %for.end59, %for.body32
  br label %for.inc61, !dbg !2485

for.inc61:                                        ; preds = %if.end60
  %49 = load %struct.wmKeyMap*, %struct.wmKeyMap** %km, align 8, !dbg !2486
  %next62 = getelementptr inbounds %struct.wmKeyMap, %struct.wmKeyMap* %49, i32 0, i32 0, !dbg !2487
  %50 = load %struct.wmKeyMap*, %struct.wmKeyMap** %next62, align 8, !dbg !2487
  store %struct.wmKeyMap* %50, %struct.wmKeyMap** %km, align 8, !dbg !2488
  br label %for.cond30, !dbg !2489, !llvm.loop !2490

for.end63:                                        ; preds = %for.cond30
  %51 = load %struct.wmWindowManager*, %struct.wmWindowManager** %wm.addr, align 8, !dbg !2492
  %userconf64 = getelementptr inbounds %struct.wmWindowManager, %struct.wmWindowManager* %51, i32 0, i32 16, !dbg !2494
  %52 = load %struct.wmKeyConfig*, %struct.wmKeyConfig** %userconf64, align 8, !dbg !2494
  %keymaps65 = getelementptr inbounds %struct.wmKeyConfig, %struct.wmKeyConfig* %52, i32 0, i32 4, !dbg !2495
  %first66 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %keymaps65, i32 0, i32 0, !dbg !2496
  %53 = load i8*, i8** %first66, align 8, !dbg !2496
  %54 = bitcast i8* %53 to %struct.wmKeyMap*, !dbg !2492
  store %struct.wmKeyMap* %54, %struct.wmKeyMap** %km, align 8, !dbg !2497
  br label %for.cond67, !dbg !2498

for.cond67:                                       ; preds = %for.inc82, %for.end63
  %55 = load %struct.wmKeyMap*, %struct.wmKeyMap** %km, align 8, !dbg !2499
  %tobool68 = icmp ne %struct.wmKeyMap* %55, null, !dbg !2501
  br i1 %tobool68, label %for.body69, label %for.end84, !dbg !2501

for.body69:                                       ; preds = %for.cond67
  %56 = load %struct.wmKeyMap*, %struct.wmKeyMap** %km, align 8, !dbg !2502
  %call = call zeroext i8 @wm_keymap_test_and_clear_update(%struct.wmKeyMap* %56), !dbg !2505
  %tobool70 = icmp ne i8 %call, 0, !dbg !2505
  br i1 %tobool70, label %if.then71, label %if.end81, !dbg !2506

if.then71:                                        ; preds = %for.body69
  %57 = load %struct.wmWindowManager*, %struct.wmWindowManager** %wm.addr, align 8, !dbg !2507
  %58 = load %struct.wmKeyMap*, %struct.wmKeyMap** %km, align 8, !dbg !2509
  %call72 = call %struct.wmKeyMap* @wm_keymap_preset(%struct.wmWindowManager* %57, %struct.wmKeyMap* %58), !dbg !2510
  store %struct.wmKeyMap* %call72, %struct.wmKeyMap** %defaultmap, align 8, !dbg !2511
  %59 = load %struct.wmWindowManager*, %struct.wmWindowManager** %wm.addr, align 8, !dbg !2512
  %addonconf73 = getelementptr inbounds %struct.wmWindowManager, %struct.wmWindowManager* %59, i32 0, i32 15, !dbg !2513
  %60 = load %struct.wmKeyConfig*, %struct.wmKeyConfig** %addonconf73, align 8, !dbg !2513
  %keymaps74 = getelementptr inbounds %struct.wmKeyConfig, %struct.wmKeyConfig* %60, i32 0, i32 4, !dbg !2514
  %61 = load %struct.wmKeyMap*, %struct.wmKeyMap** %km, align 8, !dbg !2515
  %idname = getelementptr inbounds %struct.wmKeyMap, %struct.wmKeyMap* %61, i32 0, i32 4, !dbg !2516
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %idname, i64 0, i64 0, !dbg !2515
  %62 = load %struct.wmKeyMap*, %struct.wmKeyMap** %km, align 8, !dbg !2517
  %spaceid = getelementptr inbounds %struct.wmKeyMap, %struct.wmKeyMap* %62, i32 0, i32 5, !dbg !2518
  %63 = load i16, i16* %spaceid, align 8, !dbg !2518
  %conv75 = sext i16 %63 to i32, !dbg !2517
  %64 = load %struct.wmKeyMap*, %struct.wmKeyMap** %km, align 8, !dbg !2519
  %regionid = getelementptr inbounds %struct.wmKeyMap, %struct.wmKeyMap* %64, i32 0, i32 6, !dbg !2520
  %65 = load i16, i16* %regionid, align 2, !dbg !2520
  %conv76 = sext i16 %65 to i32, !dbg !2519
  %call77 = call %struct.wmKeyMap* @WM_keymap_list_find(%struct.ListBase* %keymaps74, i8* %arraydecay, i32 %conv75, i32 %conv76), !dbg !2521
  store %struct.wmKeyMap* %call77, %struct.wmKeyMap** %addonmap, align 8, !dbg !2522
  %66 = load %struct.wmKeyMap*, %struct.wmKeyMap** %defaultmap, align 8, !dbg !2523
  %tobool78 = icmp ne %struct.wmKeyMap* %66, null, !dbg !2523
  br i1 %tobool78, label %if.then79, label %if.end80, !dbg !2525

if.then79:                                        ; preds = %if.then71
  %67 = load %struct.wmKeyMap*, %struct.wmKeyMap** %defaultmap, align 8, !dbg !2526
  %68 = load %struct.wmKeyMap*, %struct.wmKeyMap** %addonmap, align 8, !dbg !2527
  %69 = load %struct.wmKeyMap*, %struct.wmKeyMap** %km, align 8, !dbg !2528
  call void @wm_keymap_diff_update(%struct.ListBase* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 42), %struct.wmKeyMap* %67, %struct.wmKeyMap* %68, %struct.wmKeyMap* %69), !dbg !2529
  br label %if.end80, !dbg !2529

if.end80:                                         ; preds = %if.then79, %if.then71
  br label %if.end81, !dbg !2530

if.end81:                                         ; preds = %if.end80, %for.body69
  br label %for.inc82, !dbg !2531

for.inc82:                                        ; preds = %if.end81
  %70 = load %struct.wmKeyMap*, %struct.wmKeyMap** %km, align 8, !dbg !2532
  %next83 = getelementptr inbounds %struct.wmKeyMap, %struct.wmKeyMap* %70, i32 0, i32 0, !dbg !2533
  %71 = load %struct.wmKeyMap*, %struct.wmKeyMap** %next83, align 8, !dbg !2533
  store %struct.wmKeyMap* %71, %struct.wmKeyMap** %km, align 8, !dbg !2534
  br label %for.cond67, !dbg !2535, !llvm.loop !2536

for.end84:                                        ; preds = %for.cond67
  %72 = load %struct.wmWindowManager*, %struct.wmWindowManager** %wm.addr, align 8, !dbg !2538
  %defaultconf85 = getelementptr inbounds %struct.wmWindowManager, %struct.wmWindowManager* %72, i32 0, i32 14, !dbg !2540
  %73 = load %struct.wmKeyConfig*, %struct.wmKeyConfig** %defaultconf85, align 8, !dbg !2540
  %keymaps86 = getelementptr inbounds %struct.wmKeyConfig, %struct.wmKeyConfig* %73, i32 0, i32 4, !dbg !2541
  %first87 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %keymaps86, i32 0, i32 0, !dbg !2542
  %74 = load i8*, i8** %first87, align 8, !dbg !2542
  %75 = bitcast i8* %74 to %struct.wmKeyMap*, !dbg !2538
  store %struct.wmKeyMap* %75, %struct.wmKeyMap** %km, align 8, !dbg !2543
  br label %for.cond88, !dbg !2544

for.cond88:                                       ; preds = %for.inc124, %for.end84
  %76 = load %struct.wmKeyMap*, %struct.wmKeyMap** %km, align 8, !dbg !2545
  %tobool89 = icmp ne %struct.wmKeyMap* %76, null, !dbg !2547
  br i1 %tobool89, label %for.body90, label %for.end126, !dbg !2547

for.body90:                                       ; preds = %for.cond88
  %77 = load %struct.wmWindowManager*, %struct.wmWindowManager** %wm.addr, align 8, !dbg !2548
  %78 = load %struct.wmKeyMap*, %struct.wmKeyMap** %km, align 8, !dbg !2550
  %call91 = call %struct.wmKeyMap* @wm_keymap_preset(%struct.wmWindowManager* %77, %struct.wmKeyMap* %78), !dbg !2551
  store %struct.wmKeyMap* %call91, %struct.wmKeyMap** %defaultmap, align 8, !dbg !2552
  %79 = load %struct.wmWindowManager*, %struct.wmWindowManager** %wm.addr, align 8, !dbg !2553
  %addonconf92 = getelementptr inbounds %struct.wmWindowManager, %struct.wmWindowManager* %79, i32 0, i32 15, !dbg !2554
  %80 = load %struct.wmKeyConfig*, %struct.wmKeyConfig** %addonconf92, align 8, !dbg !2554
  %keymaps93 = getelementptr inbounds %struct.wmKeyConfig, %struct.wmKeyConfig* %80, i32 0, i32 4, !dbg !2555
  %81 = load %struct.wmKeyMap*, %struct.wmKeyMap** %km, align 8, !dbg !2556
  %idname94 = getelementptr inbounds %struct.wmKeyMap, %struct.wmKeyMap* %81, i32 0, i32 4, !dbg !2557
  %arraydecay95 = getelementptr inbounds [64 x i8], [64 x i8]* %idname94, i64 0, i64 0, !dbg !2556
  %82 = load %struct.wmKeyMap*, %struct.wmKeyMap** %km, align 8, !dbg !2558
  %spaceid96 = getelementptr inbounds %struct.wmKeyMap, %struct.wmKeyMap* %82, i32 0, i32 5, !dbg !2559
  %83 = load i16, i16* %spaceid96, align 8, !dbg !2559
  %conv97 = sext i16 %83 to i32, !dbg !2558
  %84 = load %struct.wmKeyMap*, %struct.wmKeyMap** %km, align 8, !dbg !2560
  %regionid98 = getelementptr inbounds %struct.wmKeyMap, %struct.wmKeyMap* %84, i32 0, i32 6, !dbg !2561
  %85 = load i16, i16* %regionid98, align 2, !dbg !2561
  %conv99 = sext i16 %85 to i32, !dbg !2560
  %call100 = call %struct.wmKeyMap* @WM_keymap_list_find(%struct.ListBase* %keymaps93, i8* %arraydecay95, i32 %conv97, i32 %conv99), !dbg !2562
  store %struct.wmKeyMap* %call100, %struct.wmKeyMap** %addonmap, align 8, !dbg !2563
  %86 = load %struct.wmKeyMap*, %struct.wmKeyMap** %km, align 8, !dbg !2564
  %idname101 = getelementptr inbounds %struct.wmKeyMap, %struct.wmKeyMap* %86, i32 0, i32 4, !dbg !2565
  %arraydecay102 = getelementptr inbounds [64 x i8], [64 x i8]* %idname101, i64 0, i64 0, !dbg !2564
  %87 = load %struct.wmKeyMap*, %struct.wmKeyMap** %km, align 8, !dbg !2566
  %spaceid103 = getelementptr inbounds %struct.wmKeyMap, %struct.wmKeyMap* %87, i32 0, i32 5, !dbg !2567
  %88 = load i16, i16* %spaceid103, align 8, !dbg !2567
  %conv104 = sext i16 %88 to i32, !dbg !2566
  %89 = load %struct.wmKeyMap*, %struct.wmKeyMap** %km, align 8, !dbg !2568
  %regionid105 = getelementptr inbounds %struct.wmKeyMap, %struct.wmKeyMap* %89, i32 0, i32 6, !dbg !2569
  %90 = load i16, i16* %regionid105, align 2, !dbg !2569
  %conv106 = sext i16 %90 to i32, !dbg !2568
  %call107 = call %struct.wmKeyMap* @WM_keymap_list_find(%struct.ListBase* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 42), i8* %arraydecay102, i32 %conv104, i32 %conv106), !dbg !2570
  store %struct.wmKeyMap* %call107, %struct.wmKeyMap** %usermap, align 8, !dbg !2571
  %91 = load %struct.wmWindowManager*, %struct.wmWindowManager** %wm.addr, align 8, !dbg !2572
  %92 = load %struct.wmKeyMap*, %struct.wmKeyMap** %defaultmap, align 8, !dbg !2573
  call void @wm_user_modal_keymap_set_items(%struct.wmWindowManager* %91, %struct.wmKeyMap* %92), !dbg !2574
  %93 = load %struct.wmWindowManager*, %struct.wmWindowManager** %wm.addr, align 8, !dbg !2575
  %userconf108 = getelementptr inbounds %struct.wmWindowManager, %struct.wmWindowManager* %93, i32 0, i32 16, !dbg !2576
  %94 = load %struct.wmKeyConfig*, %struct.wmKeyConfig** %userconf108, align 8, !dbg !2576
  %keymaps109 = getelementptr inbounds %struct.wmKeyConfig, %struct.wmKeyConfig* %94, i32 0, i32 4, !dbg !2577
  %95 = load %struct.wmKeyMap*, %struct.wmKeyMap** %defaultmap, align 8, !dbg !2578
  %96 = load %struct.wmKeyMap*, %struct.wmKeyMap** %addonmap, align 8, !dbg !2579
  %97 = load %struct.wmKeyMap*, %struct.wmKeyMap** %usermap, align 8, !dbg !2580
  %call110 = call %struct.wmKeyMap* @wm_keymap_patch_update(%struct.ListBase* %keymaps109, %struct.wmKeyMap* %95, %struct.wmKeyMap* %96, %struct.wmKeyMap* %97), !dbg !2581
  store %struct.wmKeyMap* %call110, %struct.wmKeyMap** %kmn, align 8, !dbg !2582
  %98 = load %struct.wmKeyMap*, %struct.wmKeyMap** %kmn, align 8, !dbg !2583
  %tobool111 = icmp ne %struct.wmKeyMap* %98, null, !dbg !2583
  br i1 %tobool111, label %if.then112, label %if.end115, !dbg !2585

if.then112:                                       ; preds = %for.body90
  %99 = load %struct.wmKeyMap*, %struct.wmKeyMap** %km, align 8, !dbg !2586
  %modal_items = getelementptr inbounds %struct.wmKeyMap, %struct.wmKeyMap* %99, i32 0, i32 10, !dbg !2588
  %100 = load i8*, i8** %modal_items, align 8, !dbg !2588
  %101 = load %struct.wmKeyMap*, %struct.wmKeyMap** %kmn, align 8, !dbg !2589
  %modal_items113 = getelementptr inbounds %struct.wmKeyMap, %struct.wmKeyMap* %101, i32 0, i32 10, !dbg !2590
  store i8* %100, i8** %modal_items113, align 8, !dbg !2591
  %102 = load %struct.wmKeyMap*, %struct.wmKeyMap** %km, align 8, !dbg !2592
  %poll = getelementptr inbounds %struct.wmKeyMap, %struct.wmKeyMap* %102, i32 0, i32 9, !dbg !2593
  %103 = load i32 (%struct.bContext*)*, i32 (%struct.bContext*)** %poll, align 8, !dbg !2593
  %104 = load %struct.wmKeyMap*, %struct.wmKeyMap** %kmn, align 8, !dbg !2594
  %poll114 = getelementptr inbounds %struct.wmKeyMap, %struct.wmKeyMap* %104, i32 0, i32 9, !dbg !2595
  store i32 (%struct.bContext*)* %103, i32 (%struct.bContext*)** %poll114, align 8, !dbg !2596
  br label %if.end115, !dbg !2597

if.end115:                                        ; preds = %if.then112, %for.body90
  %105 = load i8, i8* %compat_update, align 1, !dbg !2598
  %conv116 = zext i8 %105 to i32, !dbg !2598
  %tobool117 = icmp ne i32 %conv116, 0, !dbg !2598
  br i1 %tobool117, label %lor.end, label %lor.rhs, !dbg !2599

lor.rhs:                                          ; preds = %if.end115
  %106 = load %struct.wmKeyMap*, %struct.wmKeyMap** %usermap, align 8, !dbg !2600
  %tobool118 = icmp ne %struct.wmKeyMap* %106, null, !dbg !2600
  br i1 %tobool118, label %land.rhs, label %land.end, !dbg !2601

land.rhs:                                         ; preds = %lor.rhs
  %107 = load %struct.wmKeyMap*, %struct.wmKeyMap** %usermap, align 8, !dbg !2602
  %flag119 = getelementptr inbounds %struct.wmKeyMap, %struct.wmKeyMap* %107, i32 0, i32 7, !dbg !2603
  %108 = load i16, i16* %flag119, align 4, !dbg !2603
  %conv120 = sext i16 %108 to i32, !dbg !2602
  %and121 = and i32 %conv120, 16, !dbg !2604
  %tobool122 = icmp ne i32 %and121, 0, !dbg !2605
  %lnot = xor i1 %tobool122, true, !dbg !2605
  br label %land.end

land.end:                                         ; preds = %land.rhs, %lor.rhs
  %109 = phi i1 [ false, %lor.rhs ], [ %lnot, %land.rhs ], !dbg !2606
  br label %lor.end, !dbg !2599

lor.end:                                          ; preds = %land.end, %if.end115
  %110 = phi i1 [ true, %if.end115 ], [ %109, %land.end ]
  %lor.ext = zext i1 %110 to i32, !dbg !2599
  %conv123 = trunc i32 %lor.ext to i8, !dbg !2598
  store i8 %conv123, i8* %compat_update, align 1, !dbg !2607
  br label %for.inc124, !dbg !2608

for.inc124:                                       ; preds = %lor.end
  %111 = load %struct.wmKeyMap*, %struct.wmKeyMap** %km, align 8, !dbg !2609
  %next125 = getelementptr inbounds %struct.wmKeyMap, %struct.wmKeyMap* %111, i32 0, i32 0, !dbg !2610
  %112 = load %struct.wmKeyMap*, %struct.wmKeyMap** %next125, align 8, !dbg !2610
  store %struct.wmKeyMap* %112, %struct.wmKeyMap** %km, align 8, !dbg !2611
  br label %for.cond88, !dbg !2612, !llvm.loop !2613

for.end126:                                       ; preds = %for.cond88
  %113 = load i8, i8* @wm_keymap_update_flag, align 1, !dbg !2615
  %conv127 = zext i8 %113 to i32, !dbg !2615
  %and128 = and i32 %conv127, -2, !dbg !2615
  %conv129 = trunc i32 %and128 to i8, !dbg !2615
  store i8 %conv129, i8* @wm_keymap_update_flag, align 1, !dbg !2615
  %114 = load i8, i8* %compat_update, align 1, !dbg !2616
  %tobool130 = icmp ne i8 %114, 0, !dbg !2616
  br i1 %tobool130, label %if.then131, label %if.end132, !dbg !2618

if.then131:                                       ; preds = %for.end126
  call void @WM_keyconfig_update_tag(%struct.wmKeyMap* null, %struct.wmKeyMapItem* null), !dbg !2619
  %115 = load %struct.wmWindowManager*, %struct.wmWindowManager** %wm.addr, align 8, !dbg !2621
  call void @WM_keyconfig_update(%struct.wmWindowManager* %115), !dbg !2622
  br label %if.end132, !dbg !2623

if.end132:                                        ; preds = %if.then, %if.then2, %if.then28, %if.then131, %for.end126
  ret void, !dbg !2624
}

; Function Attrs: noinline nounwind uwtable
define internal void @wm_keymap_diff_item_free(%struct.wmKeyMapDiffItem* %kmdi) #0 !dbg !2625 {
entry:
  %kmdi.addr = alloca %struct.wmKeyMapDiffItem*, align 8
  store %struct.wmKeyMapDiffItem* %kmdi, %struct.wmKeyMapDiffItem** %kmdi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmKeyMapDiffItem** %kmdi.addr, metadata !2628, metadata !DIExpression()), !dbg !2629
  %0 = load %struct.wmKeyMapDiffItem*, %struct.wmKeyMapDiffItem** %kmdi.addr, align 8, !dbg !2630
  %remove_item = getelementptr inbounds %struct.wmKeyMapDiffItem, %struct.wmKeyMapDiffItem* %0, i32 0, i32 2, !dbg !2632
  %1 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %remove_item, align 8, !dbg !2632
  %tobool = icmp ne %struct.wmKeyMapItem* %1, null, !dbg !2630
  br i1 %tobool, label %if.then, label %if.end, !dbg !2633

if.then:                                          ; preds = %entry
  %2 = load %struct.wmKeyMapDiffItem*, %struct.wmKeyMapDiffItem** %kmdi.addr, align 8, !dbg !2634
  %remove_item1 = getelementptr inbounds %struct.wmKeyMapDiffItem, %struct.wmKeyMapDiffItem* %2, i32 0, i32 2, !dbg !2636
  %3 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %remove_item1, align 8, !dbg !2636
  call void @wm_keymap_item_free(%struct.wmKeyMapItem* %3), !dbg !2637
  %4 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !2638
  %5 = load %struct.wmKeyMapDiffItem*, %struct.wmKeyMapDiffItem** %kmdi.addr, align 8, !dbg !2639
  %remove_item2 = getelementptr inbounds %struct.wmKeyMapDiffItem, %struct.wmKeyMapDiffItem* %5, i32 0, i32 2, !dbg !2640
  %6 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %remove_item2, align 8, !dbg !2640
  %7 = bitcast %struct.wmKeyMapItem* %6 to i8*, !dbg !2639
  call void %4(i8* %7), !dbg !2638
  br label %if.end, !dbg !2641

if.end:                                           ; preds = %if.then, %entry
  %8 = load %struct.wmKeyMapDiffItem*, %struct.wmKeyMapDiffItem** %kmdi.addr, align 8, !dbg !2642
  %add_item = getelementptr inbounds %struct.wmKeyMapDiffItem, %struct.wmKeyMapDiffItem* %8, i32 0, i32 3, !dbg !2644
  %9 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %add_item, align 8, !dbg !2644
  %tobool3 = icmp ne %struct.wmKeyMapItem* %9, null, !dbg !2642
  br i1 %tobool3, label %if.then4, label %if.end7, !dbg !2645

if.then4:                                         ; preds = %if.end
  %10 = load %struct.wmKeyMapDiffItem*, %struct.wmKeyMapDiffItem** %kmdi.addr, align 8, !dbg !2646
  %add_item5 = getelementptr inbounds %struct.wmKeyMapDiffItem, %struct.wmKeyMapDiffItem* %10, i32 0, i32 3, !dbg !2648
  %11 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %add_item5, align 8, !dbg !2648
  call void @wm_keymap_item_free(%struct.wmKeyMapItem* %11), !dbg !2649
  %12 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !2650
  %13 = load %struct.wmKeyMapDiffItem*, %struct.wmKeyMapDiffItem** %kmdi.addr, align 8, !dbg !2651
  %add_item6 = getelementptr inbounds %struct.wmKeyMapDiffItem, %struct.wmKeyMapDiffItem* %13, i32 0, i32 3, !dbg !2652
  %14 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %add_item6, align 8, !dbg !2652
  %15 = bitcast %struct.wmKeyMapItem* %14 to i8*, !dbg !2651
  call void %12(i8* %15), !dbg !2650
  br label %if.end7, !dbg !2653

if.end7:                                          ; preds = %if.then4, %if.end
  ret void, !dbg !2654
}

; Function Attrs: noinline nounwind uwtable
define internal void @wm_keymap_item_free(%struct.wmKeyMapItem* %kmi) #0 !dbg !2655 {
entry:
  %kmi.addr = alloca %struct.wmKeyMapItem*, align 8
  store %struct.wmKeyMapItem* %kmi, %struct.wmKeyMapItem** %kmi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmKeyMapItem** %kmi.addr, metadata !2656, metadata !DIExpression()), !dbg !2657
  %0 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi.addr, align 8, !dbg !2658
  %ptr = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %0, i32 0, i32 17, !dbg !2660
  %1 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !2660
  %tobool = icmp ne %struct.PointerRNA* %1, null, !dbg !2658
  br i1 %tobool, label %if.then, label %if.end, !dbg !2661

if.then:                                          ; preds = %entry
  %2 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi.addr, align 8, !dbg !2662
  %ptr1 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %2, i32 0, i32 17, !dbg !2664
  %3 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr1, align 8, !dbg !2664
  call void @WM_operator_properties_free(%struct.PointerRNA* %3), !dbg !2665
  %4 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !2666
  %5 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi.addr, align 8, !dbg !2667
  %ptr2 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %5, i32 0, i32 17, !dbg !2668
  %6 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr2, align 8, !dbg !2668
  %7 = bitcast %struct.PointerRNA* %6 to i8*, !dbg !2667
  call void %4(i8* %7), !dbg !2666
  br label %if.end, !dbg !2669

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !2670
}

declare dso_local void @BLI_freelistN(%struct.ListBase*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @WM_keymap_remove(%struct.wmKeyConfig* %keyconf, %struct.wmKeyMap* %keymap) #0 !dbg !2671 {
entry:
  %retval = alloca i8, align 1
  %keyconf.addr = alloca %struct.wmKeyConfig*, align 8
  %keymap.addr = alloca %struct.wmKeyMap*, align 8
  store %struct.wmKeyConfig* %keyconf, %struct.wmKeyConfig** %keyconf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmKeyConfig** %keyconf.addr, metadata !2674, metadata !DIExpression()), !dbg !2675
  store %struct.wmKeyMap* %keymap, %struct.wmKeyMap** %keymap.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmKeyMap** %keymap.addr, metadata !2676, metadata !DIExpression()), !dbg !2677
  %0 = load %struct.wmKeyConfig*, %struct.wmKeyConfig** %keyconf.addr, align 8, !dbg !2678
  %keymaps = getelementptr inbounds %struct.wmKeyConfig, %struct.wmKeyConfig* %0, i32 0, i32 4, !dbg !2680
  %1 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap.addr, align 8, !dbg !2681
  %2 = bitcast %struct.wmKeyMap* %1 to i8*, !dbg !2681
  %call = call i32 @BLI_findindex(%struct.ListBase* %keymaps, i8* %2), !dbg !2682
  %cmp = icmp ne i32 %call, -1, !dbg !2683
  br i1 %cmp, label %if.then, label %if.else, !dbg !2684

if.then:                                          ; preds = %entry
  %3 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap.addr, align 8, !dbg !2685
  call void @WM_keymap_free(%struct.wmKeyMap* %3), !dbg !2687
  %4 = load %struct.wmKeyConfig*, %struct.wmKeyConfig** %keyconf.addr, align 8, !dbg !2688
  %keymaps1 = getelementptr inbounds %struct.wmKeyConfig, %struct.wmKeyConfig* %4, i32 0, i32 4, !dbg !2689
  %5 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap.addr, align 8, !dbg !2690
  %6 = bitcast %struct.wmKeyMap* %5 to i8*, !dbg !2690
  call void @BLI_remlink(%struct.ListBase* %keymaps1, i8* %6), !dbg !2691
  %7 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !2692
  %8 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap.addr, align 8, !dbg !2693
  %9 = bitcast %struct.wmKeyMap* %8 to i8*, !dbg !2693
  call void %7(i8* %9), !dbg !2692
  store i8 1, i8* %retval, align 1, !dbg !2694
  br label %return, !dbg !2694

if.else:                                          ; preds = %entry
  store i8 0, i8* %retval, align 1, !dbg !2695
  br label %return, !dbg !2695

return:                                           ; preds = %if.else, %if.then
  %10 = load i8, i8* %retval, align 1, !dbg !2697
  ret i8 %10, !dbg !2697
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.wmKeyMapItem* @WM_keymap_verify_item(%struct.wmKeyMap* %keymap, i8* %idname, i32 %type, i32 %val, i32 %modifier, i32 %keymodifier) #0 !dbg !2698 {
entry:
  %keymap.addr = alloca %struct.wmKeyMap*, align 8
  %idname.addr = alloca i8*, align 8
  %type.addr = alloca i32, align 4
  %val.addr = alloca i32, align 4
  %modifier.addr = alloca i32, align 4
  %keymodifier.addr = alloca i32, align 4
  %kmi = alloca %struct.wmKeyMapItem*, align 8
  store %struct.wmKeyMap* %keymap, %struct.wmKeyMap** %keymap.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmKeyMap** %keymap.addr, metadata !2701, metadata !DIExpression()), !dbg !2702
  store i8* %idname, i8** %idname.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %idname.addr, metadata !2703, metadata !DIExpression()), !dbg !2704
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !2705, metadata !DIExpression()), !dbg !2706
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !2707, metadata !DIExpression()), !dbg !2708
  store i32 %modifier, i32* %modifier.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %modifier.addr, metadata !2709, metadata !DIExpression()), !dbg !2710
  store i32 %keymodifier, i32* %keymodifier.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %keymodifier.addr, metadata !2711, metadata !DIExpression()), !dbg !2712
  call void @llvm.dbg.declare(metadata %struct.wmKeyMapItem** %kmi, metadata !2713, metadata !DIExpression()), !dbg !2714
  %0 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap.addr, align 8, !dbg !2715
  %items = getelementptr inbounds %struct.wmKeyMap, %struct.wmKeyMap* %0, i32 0, i32 2, !dbg !2717
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %items, i32 0, i32 0, !dbg !2718
  %1 = load i8*, i8** %first, align 8, !dbg !2718
  %2 = bitcast i8* %1 to %struct.wmKeyMapItem*, !dbg !2715
  store %struct.wmKeyMapItem* %2, %struct.wmKeyMapItem** %kmi, align 8, !dbg !2719
  br label %for.cond, !dbg !2720

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi, align 8, !dbg !2721
  %tobool = icmp ne %struct.wmKeyMapItem* %3, null, !dbg !2723
  br i1 %tobool, label %for.body, label %for.end, !dbg !2723

for.body:                                         ; preds = %for.cond
  %4 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi, align 8, !dbg !2724
  %idname1 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %4, i32 0, i32 2, !dbg !2726
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %idname1, i64 0, i64 0, !dbg !2724
  %5 = load i8*, i8** %idname.addr, align 8, !dbg !2727
  %call = call i32 @strncmp(i8* %arraydecay, i8* %5, i64 64) #4, !dbg !2728
  %cmp = icmp eq i32 %call, 0, !dbg !2729
  br i1 %cmp, label %if.then, label %if.end, !dbg !2730

if.then:                                          ; preds = %for.body
  br label %for.end, !dbg !2731

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !2732

for.inc:                                          ; preds = %if.end
  %6 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi, align 8, !dbg !2733
  %next = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %6, i32 0, i32 0, !dbg !2734
  %7 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %next, align 8, !dbg !2734
  store %struct.wmKeyMapItem* %7, %struct.wmKeyMapItem** %kmi, align 8, !dbg !2735
  br label %for.cond, !dbg !2736, !llvm.loop !2737

for.end:                                          ; preds = %if.then, %for.cond
  %8 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi, align 8, !dbg !2739
  %cmp2 = icmp eq %struct.wmKeyMapItem* %8, null, !dbg !2741
  br i1 %cmp2, label %if.then3, label %if.end11, !dbg !2742

if.then3:                                         ; preds = %for.end
  %9 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !2743
  %call4 = call i8* %9(i64 184, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.1, i64 0, i64 0)), !dbg !2743
  %10 = bitcast i8* %call4 to %struct.wmKeyMapItem*, !dbg !2743
  store %struct.wmKeyMapItem* %10, %struct.wmKeyMapItem** %kmi, align 8, !dbg !2745
  %11 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap.addr, align 8, !dbg !2746
  %items5 = getelementptr inbounds %struct.wmKeyMap, %struct.wmKeyMap* %11, i32 0, i32 2, !dbg !2747
  %12 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi, align 8, !dbg !2748
  %13 = bitcast %struct.wmKeyMapItem* %12 to i8*, !dbg !2748
  call void @BLI_addtail(%struct.ListBase* %items5, i8* %13), !dbg !2749
  %14 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi, align 8, !dbg !2750
  %idname6 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %14, i32 0, i32 2, !dbg !2751
  %arraydecay7 = getelementptr inbounds [64 x i8], [64 x i8]* %idname6, i64 0, i64 0, !dbg !2750
  %15 = load i8*, i8** %idname.addr, align 8, !dbg !2752
  %call8 = call i8* @BLI_strncpy(i8* %arraydecay7, i8* %15, i64 64), !dbg !2753
  %16 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap.addr, align 8, !dbg !2754
  %17 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi, align 8, !dbg !2755
  call void @keymap_item_set_id(%struct.wmKeyMap* %16, %struct.wmKeyMapItem* %17), !dbg !2756
  %18 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi, align 8, !dbg !2757
  %19 = load i32, i32* %type.addr, align 4, !dbg !2758
  %conv = trunc i32 %19 to i16, !dbg !2758
  %20 = load i32, i32* %val.addr, align 4, !dbg !2759
  %conv9 = trunc i32 %20 to i16, !dbg !2759
  %21 = load i32, i32* %modifier.addr, align 4, !dbg !2760
  %22 = load i32, i32* %keymodifier.addr, align 4, !dbg !2761
  %conv10 = trunc i32 %22 to i16, !dbg !2761
  call void @keymap_event_set(%struct.wmKeyMapItem* %18, i16 signext %conv, i16 signext %conv9, i32 %21, i16 signext %conv10), !dbg !2762
  %23 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi, align 8, !dbg !2763
  call void @wm_keymap_item_properties_set(%struct.wmKeyMapItem* %23), !dbg !2764
  br label %if.end11, !dbg !2765

if.end11:                                         ; preds = %if.then3, %for.end
  %24 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi, align 8, !dbg !2766
  ret %struct.wmKeyMapItem* %24, !dbg !2767
}

; Function Attrs: noinline nounwind uwtable
define internal void @keymap_item_set_id(%struct.wmKeyMap* %keymap, %struct.wmKeyMapItem* %kmi) #0 !dbg !2768 {
entry:
  %keymap.addr = alloca %struct.wmKeyMap*, align 8
  %kmi.addr = alloca %struct.wmKeyMapItem*, align 8
  store %struct.wmKeyMap* %keymap, %struct.wmKeyMap** %keymap.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmKeyMap** %keymap.addr, metadata !2769, metadata !DIExpression()), !dbg !2770
  store %struct.wmKeyMapItem* %kmi, %struct.wmKeyMapItem** %kmi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmKeyMapItem** %kmi.addr, metadata !2771, metadata !DIExpression()), !dbg !2772
  %0 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap.addr, align 8, !dbg !2773
  %kmi_id = getelementptr inbounds %struct.wmKeyMap, %struct.wmKeyMap* %0, i32 0, i32 8, !dbg !2774
  %1 = load i16, i16* %kmi_id, align 2, !dbg !2775
  %inc = add i16 %1, 1, !dbg !2775
  store i16 %inc, i16* %kmi_id, align 2, !dbg !2775
  %2 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap.addr, align 8, !dbg !2776
  %flag = getelementptr inbounds %struct.wmKeyMap, %struct.wmKeyMap* %2, i32 0, i32 7, !dbg !2778
  %3 = load i16, i16* %flag, align 4, !dbg !2778
  %conv = sext i16 %3 to i32, !dbg !2776
  %and = and i32 %conv, 2, !dbg !2779
  %cmp = icmp eq i32 %and, 0, !dbg !2780
  br i1 %cmp, label %if.then, label %if.else, !dbg !2781

if.then:                                          ; preds = %entry
  %4 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap.addr, align 8, !dbg !2782
  %kmi_id2 = getelementptr inbounds %struct.wmKeyMap, %struct.wmKeyMap* %4, i32 0, i32 8, !dbg !2784
  %5 = load i16, i16* %kmi_id2, align 2, !dbg !2784
  %6 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi.addr, align 8, !dbg !2785
  %id = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %6, i32 0, i32 15, !dbg !2786
  store i16 %5, i16* %id, align 4, !dbg !2787
  br label %if.end, !dbg !2788

if.else:                                          ; preds = %entry
  %7 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap.addr, align 8, !dbg !2789
  %kmi_id3 = getelementptr inbounds %struct.wmKeyMap, %struct.wmKeyMap* %7, i32 0, i32 8, !dbg !2791
  %8 = load i16, i16* %kmi_id3, align 2, !dbg !2791
  %conv4 = sext i16 %8 to i32, !dbg !2789
  %sub = sub nsw i32 0, %conv4, !dbg !2792
  %conv5 = trunc i32 %sub to i16, !dbg !2792
  %9 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi.addr, align 8, !dbg !2793
  %id6 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %9, i32 0, i32 15, !dbg !2794
  store i16 %conv5, i16* %id6, align 4, !dbg !2795
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !2796
}

; Function Attrs: noinline nounwind uwtable
define internal void @keymap_event_set(%struct.wmKeyMapItem* %kmi, i16 signext %type, i16 signext %val, i32 %modifier, i16 signext %keymodifier) #0 !dbg !2797 {
entry:
  %kmi.addr = alloca %struct.wmKeyMapItem*, align 8
  %type.addr = alloca i16, align 2
  %val.addr = alloca i16, align 2
  %modifier.addr = alloca i32, align 4
  %keymodifier.addr = alloca i16, align 2
  store %struct.wmKeyMapItem* %kmi, %struct.wmKeyMapItem** %kmi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmKeyMapItem** %kmi.addr, metadata !2800, metadata !DIExpression()), !dbg !2801
  store i16 %type, i16* %type.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %type.addr, metadata !2802, metadata !DIExpression()), !dbg !2803
  store i16 %val, i16* %val.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %val.addr, metadata !2804, metadata !DIExpression()), !dbg !2805
  store i32 %modifier, i32* %modifier.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %modifier.addr, metadata !2806, metadata !DIExpression()), !dbg !2807
  store i16 %keymodifier, i16* %keymodifier.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %keymodifier.addr, metadata !2808, metadata !DIExpression()), !dbg !2809
  %0 = load i16, i16* %type.addr, align 2, !dbg !2810
  %1 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi.addr, align 8, !dbg !2811
  %type1 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %1, i32 0, i32 6, !dbg !2812
  store i16 %0, i16* %type1, align 2, !dbg !2813
  %2 = load i16, i16* %val.addr, align 2, !dbg !2814
  %3 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi.addr, align 8, !dbg !2815
  %val2 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %3, i32 0, i32 7, !dbg !2816
  store i16 %2, i16* %val2, align 4, !dbg !2817
  %4 = load i16, i16* %keymodifier.addr, align 2, !dbg !2818
  %5 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi.addr, align 8, !dbg !2819
  %keymodifier3 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %5, i32 0, i32 12, !dbg !2820
  store i16 %4, i16* %keymodifier3, align 2, !dbg !2821
  %6 = load i32, i32* %modifier.addr, align 4, !dbg !2822
  %cmp = icmp eq i32 %6, -1, !dbg !2824
  br i1 %cmp, label %if.then, label %if.else, !dbg !2825

if.then:                                          ; preds = %entry
  %7 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi.addr, align 8, !dbg !2826
  %oskey = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %7, i32 0, i32 11, !dbg !2828
  store i16 -1, i16* %oskey, align 4, !dbg !2829
  %8 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi.addr, align 8, !dbg !2830
  %alt = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %8, i32 0, i32 10, !dbg !2831
  store i16 -1, i16* %alt, align 2, !dbg !2832
  %9 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi.addr, align 8, !dbg !2833
  %ctrl = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %9, i32 0, i32 9, !dbg !2834
  store i16 -1, i16* %ctrl, align 8, !dbg !2835
  %10 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi.addr, align 8, !dbg !2836
  %shift = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %10, i32 0, i32 8, !dbg !2837
  store i16 -1, i16* %shift, align 2, !dbg !2838
  br label %if.end, !dbg !2839

if.else:                                          ; preds = %entry
  %11 = load i32, i32* %modifier.addr, align 4, !dbg !2840
  %and = and i32 %11, 1, !dbg !2842
  %tobool = icmp ne i32 %and, 0, !dbg !2842
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !2843

cond.true:                                        ; preds = %if.else
  br label %cond.end, !dbg !2843

cond.false:                                       ; preds = %if.else
  %12 = load i32, i32* %modifier.addr, align 4, !dbg !2844
  %and4 = and i32 %12, 16, !dbg !2845
  %tobool5 = icmp ne i32 %and4, 0, !dbg !2846
  %13 = zext i1 %tobool5 to i64, !dbg !2846
  %cond = select i1 %tobool5, i32 2, i32 0, !dbg !2846
  br label %cond.end, !dbg !2843

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond6 = phi i32 [ 1, %cond.true ], [ %cond, %cond.false ], !dbg !2843
  %conv = trunc i32 %cond6 to i16, !dbg !2843
  %14 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi.addr, align 8, !dbg !2847
  %shift7 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %14, i32 0, i32 8, !dbg !2848
  store i16 %conv, i16* %shift7, align 2, !dbg !2849
  %15 = load i32, i32* %modifier.addr, align 4, !dbg !2850
  %and8 = and i32 %15, 2, !dbg !2851
  %tobool9 = icmp ne i32 %and8, 0, !dbg !2851
  br i1 %tobool9, label %cond.true10, label %cond.false11, !dbg !2852

cond.true10:                                      ; preds = %cond.end
  br label %cond.end15, !dbg !2852

cond.false11:                                     ; preds = %cond.end
  %16 = load i32, i32* %modifier.addr, align 4, !dbg !2853
  %and12 = and i32 %16, 32, !dbg !2854
  %tobool13 = icmp ne i32 %and12, 0, !dbg !2855
  %17 = zext i1 %tobool13 to i64, !dbg !2855
  %cond14 = select i1 %tobool13, i32 2, i32 0, !dbg !2855
  br label %cond.end15, !dbg !2852

cond.end15:                                       ; preds = %cond.false11, %cond.true10
  %cond16 = phi i32 [ 1, %cond.true10 ], [ %cond14, %cond.false11 ], !dbg !2852
  %conv17 = trunc i32 %cond16 to i16, !dbg !2852
  %18 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi.addr, align 8, !dbg !2856
  %ctrl18 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %18, i32 0, i32 9, !dbg !2857
  store i16 %conv17, i16* %ctrl18, align 8, !dbg !2858
  %19 = load i32, i32* %modifier.addr, align 4, !dbg !2859
  %and19 = and i32 %19, 4, !dbg !2860
  %tobool20 = icmp ne i32 %and19, 0, !dbg !2860
  br i1 %tobool20, label %cond.true21, label %cond.false22, !dbg !2861

cond.true21:                                      ; preds = %cond.end15
  br label %cond.end26, !dbg !2861

cond.false22:                                     ; preds = %cond.end15
  %20 = load i32, i32* %modifier.addr, align 4, !dbg !2862
  %and23 = and i32 %20, 64, !dbg !2863
  %tobool24 = icmp ne i32 %and23, 0, !dbg !2864
  %21 = zext i1 %tobool24 to i64, !dbg !2864
  %cond25 = select i1 %tobool24, i32 2, i32 0, !dbg !2864
  br label %cond.end26, !dbg !2861

cond.end26:                                       ; preds = %cond.false22, %cond.true21
  %cond27 = phi i32 [ 1, %cond.true21 ], [ %cond25, %cond.false22 ], !dbg !2861
  %conv28 = trunc i32 %cond27 to i16, !dbg !2861
  %22 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi.addr, align 8, !dbg !2865
  %alt29 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %22, i32 0, i32 10, !dbg !2866
  store i16 %conv28, i16* %alt29, align 2, !dbg !2867
  %23 = load i32, i32* %modifier.addr, align 4, !dbg !2868
  %and30 = and i32 %23, 8, !dbg !2869
  %tobool31 = icmp ne i32 %and30, 0, !dbg !2869
  br i1 %tobool31, label %cond.true32, label %cond.false33, !dbg !2870

cond.true32:                                      ; preds = %cond.end26
  br label %cond.end37, !dbg !2870

cond.false33:                                     ; preds = %cond.end26
  %24 = load i32, i32* %modifier.addr, align 4, !dbg !2871
  %and34 = and i32 %24, 128, !dbg !2872
  %tobool35 = icmp ne i32 %and34, 0, !dbg !2873
  %25 = zext i1 %tobool35 to i64, !dbg !2873
  %cond36 = select i1 %tobool35, i32 2, i32 0, !dbg !2873
  br label %cond.end37, !dbg !2870

cond.end37:                                       ; preds = %cond.false33, %cond.true32
  %cond38 = phi i32 [ 1, %cond.true32 ], [ %cond36, %cond.false33 ], !dbg !2870
  %conv39 = trunc i32 %cond38 to i16, !dbg !2870
  %26 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi.addr, align 8, !dbg !2874
  %oskey40 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %26, i32 0, i32 11, !dbg !2875
  store i16 %conv39, i16* %oskey40, align 4, !dbg !2876
  br label %if.end

if.end:                                           ; preds = %cond.end37, %if.then
  ret void, !dbg !2877
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.wmKeyMapItem* @WM_keymap_add_item(%struct.wmKeyMap* %keymap, i8* %idname, i32 %type, i32 %val, i32 %modifier, i32 %keymodifier) #0 !dbg !2878 {
entry:
  %keymap.addr = alloca %struct.wmKeyMap*, align 8
  %idname.addr = alloca i8*, align 8
  %type.addr = alloca i32, align 4
  %val.addr = alloca i32, align 4
  %modifier.addr = alloca i32, align 4
  %keymodifier.addr = alloca i32, align 4
  %kmi = alloca %struct.wmKeyMapItem*, align 8
  store %struct.wmKeyMap* %keymap, %struct.wmKeyMap** %keymap.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmKeyMap** %keymap.addr, metadata !2879, metadata !DIExpression()), !dbg !2880
  store i8* %idname, i8** %idname.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %idname.addr, metadata !2881, metadata !DIExpression()), !dbg !2882
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !2883, metadata !DIExpression()), !dbg !2884
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !2885, metadata !DIExpression()), !dbg !2886
  store i32 %modifier, i32* %modifier.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %modifier.addr, metadata !2887, metadata !DIExpression()), !dbg !2888
  store i32 %keymodifier, i32* %keymodifier.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %keymodifier.addr, metadata !2889, metadata !DIExpression()), !dbg !2890
  call void @llvm.dbg.declare(metadata %struct.wmKeyMapItem** %kmi, metadata !2891, metadata !DIExpression()), !dbg !2892
  %0 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !2893
  %call = call i8* %0(i64 184, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.1, i64 0, i64 0)), !dbg !2893
  %1 = bitcast i8* %call to %struct.wmKeyMapItem*, !dbg !2893
  store %struct.wmKeyMapItem* %1, %struct.wmKeyMapItem** %kmi, align 8, !dbg !2892
  %2 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap.addr, align 8, !dbg !2894
  %items = getelementptr inbounds %struct.wmKeyMap, %struct.wmKeyMap* %2, i32 0, i32 2, !dbg !2895
  %3 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi, align 8, !dbg !2896
  %4 = bitcast %struct.wmKeyMapItem* %3 to i8*, !dbg !2896
  call void @BLI_addtail(%struct.ListBase* %items, i8* %4), !dbg !2897
  %5 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi, align 8, !dbg !2898
  %idname1 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %5, i32 0, i32 2, !dbg !2899
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %idname1, i64 0, i64 0, !dbg !2898
  %6 = load i8*, i8** %idname.addr, align 8, !dbg !2900
  %call2 = call i8* @BLI_strncpy(i8* %arraydecay, i8* %6, i64 64), !dbg !2901
  %7 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi, align 8, !dbg !2902
  %8 = load i32, i32* %type.addr, align 4, !dbg !2903
  %conv = trunc i32 %8 to i16, !dbg !2903
  %9 = load i32, i32* %val.addr, align 4, !dbg !2904
  %conv3 = trunc i32 %9 to i16, !dbg !2904
  %10 = load i32, i32* %modifier.addr, align 4, !dbg !2905
  %11 = load i32, i32* %keymodifier.addr, align 4, !dbg !2906
  %conv4 = trunc i32 %11 to i16, !dbg !2906
  call void @keymap_event_set(%struct.wmKeyMapItem* %7, i16 signext %conv, i16 signext %conv3, i32 %10, i16 signext %conv4), !dbg !2907
  %12 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi, align 8, !dbg !2908
  call void @wm_keymap_item_properties_set(%struct.wmKeyMapItem* %12), !dbg !2909
  %13 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap.addr, align 8, !dbg !2910
  %14 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi, align 8, !dbg !2911
  call void @keymap_item_set_id(%struct.wmKeyMap* %13, %struct.wmKeyMapItem* %14), !dbg !2912
  %15 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap.addr, align 8, !dbg !2913
  %16 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi, align 8, !dbg !2914
  call void @WM_keyconfig_update_tag(%struct.wmKeyMap* %15, %struct.wmKeyMapItem* %16), !dbg !2915
  %17 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi, align 8, !dbg !2916
  ret %struct.wmKeyMapItem* %17, !dbg !2917
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.wmKeyMapItem* @WM_keymap_add_menu(%struct.wmKeyMap* %keymap, i8* %idname, i32 %type, i32 %val, i32 %modifier, i32 %keymodifier) #0 !dbg !2918 {
entry:
  %keymap.addr = alloca %struct.wmKeyMap*, align 8
  %idname.addr = alloca i8*, align 8
  %type.addr = alloca i32, align 4
  %val.addr = alloca i32, align 4
  %modifier.addr = alloca i32, align 4
  %keymodifier.addr = alloca i32, align 4
  %kmi = alloca %struct.wmKeyMapItem*, align 8
  store %struct.wmKeyMap* %keymap, %struct.wmKeyMap** %keymap.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmKeyMap** %keymap.addr, metadata !2919, metadata !DIExpression()), !dbg !2920
  store i8* %idname, i8** %idname.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %idname.addr, metadata !2921, metadata !DIExpression()), !dbg !2922
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !2923, metadata !DIExpression()), !dbg !2924
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !2925, metadata !DIExpression()), !dbg !2926
  store i32 %modifier, i32* %modifier.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %modifier.addr, metadata !2927, metadata !DIExpression()), !dbg !2928
  store i32 %keymodifier, i32* %keymodifier.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %keymodifier.addr, metadata !2929, metadata !DIExpression()), !dbg !2930
  call void @llvm.dbg.declare(metadata %struct.wmKeyMapItem** %kmi, metadata !2931, metadata !DIExpression()), !dbg !2932
  %0 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap.addr, align 8, !dbg !2933
  %1 = load i32, i32* %type.addr, align 4, !dbg !2934
  %2 = load i32, i32* %val.addr, align 4, !dbg !2935
  %3 = load i32, i32* %modifier.addr, align 4, !dbg !2936
  %4 = load i32, i32* %keymodifier.addr, align 4, !dbg !2937
  %call = call %struct.wmKeyMapItem* @WM_keymap_add_item(%struct.wmKeyMap* %0, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.2, i64 0, i64 0), i32 %1, i32 %2, i32 %3, i32 %4), !dbg !2938
  store %struct.wmKeyMapItem* %call, %struct.wmKeyMapItem** %kmi, align 8, !dbg !2932
  %5 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi, align 8, !dbg !2939
  %ptr = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %5, i32 0, i32 17, !dbg !2940
  %6 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !2940
  %7 = load i8*, i8** %idname.addr, align 8, !dbg !2941
  call void @RNA_string_set(%struct.PointerRNA* %6, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0), i8* %7), !dbg !2942
  %8 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi, align 8, !dbg !2943
  ret %struct.wmKeyMapItem* %8, !dbg !2944
}

declare dso_local void @RNA_string_set(%struct.PointerRNA*, i8*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.wmKeyMapItem* @WM_keymap_add_menu_pie(%struct.wmKeyMap* %keymap, i8* %idname, i32 %type, i32 %val, i32 %modifier, i32 %keymodifier) #0 !dbg !2945 {
entry:
  %keymap.addr = alloca %struct.wmKeyMap*, align 8
  %idname.addr = alloca i8*, align 8
  %type.addr = alloca i32, align 4
  %val.addr = alloca i32, align 4
  %modifier.addr = alloca i32, align 4
  %keymodifier.addr = alloca i32, align 4
  %kmi = alloca %struct.wmKeyMapItem*, align 8
  store %struct.wmKeyMap* %keymap, %struct.wmKeyMap** %keymap.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmKeyMap** %keymap.addr, metadata !2946, metadata !DIExpression()), !dbg !2947
  store i8* %idname, i8** %idname.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %idname.addr, metadata !2948, metadata !DIExpression()), !dbg !2949
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !2950, metadata !DIExpression()), !dbg !2951
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !2952, metadata !DIExpression()), !dbg !2953
  store i32 %modifier, i32* %modifier.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %modifier.addr, metadata !2954, metadata !DIExpression()), !dbg !2955
  store i32 %keymodifier, i32* %keymodifier.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %keymodifier.addr, metadata !2956, metadata !DIExpression()), !dbg !2957
  call void @llvm.dbg.declare(metadata %struct.wmKeyMapItem** %kmi, metadata !2958, metadata !DIExpression()), !dbg !2959
  %0 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap.addr, align 8, !dbg !2960
  %1 = load i32, i32* %type.addr, align 4, !dbg !2961
  %2 = load i32, i32* %val.addr, align 4, !dbg !2962
  %3 = load i32, i32* %modifier.addr, align 4, !dbg !2963
  %4 = load i32, i32* %keymodifier.addr, align 4, !dbg !2964
  %call = call %struct.wmKeyMapItem* @WM_keymap_add_item(%struct.wmKeyMap* %0, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.4, i64 0, i64 0), i32 %1, i32 %2, i32 %3, i32 %4), !dbg !2965
  store %struct.wmKeyMapItem* %call, %struct.wmKeyMapItem** %kmi, align 8, !dbg !2959
  %5 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi, align 8, !dbg !2966
  %ptr = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %5, i32 0, i32 17, !dbg !2967
  %6 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !2967
  %7 = load i8*, i8** %idname.addr, align 8, !dbg !2968
  call void @RNA_string_set(%struct.PointerRNA* %6, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0), i8* %7), !dbg !2969
  %8 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi, align 8, !dbg !2970
  ret %struct.wmKeyMapItem* %8, !dbg !2971
}

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @WM_keymap_remove_item(%struct.wmKeyMap* %keymap, %struct.wmKeyMapItem* %kmi) #0 !dbg !2972 {
entry:
  %retval = alloca i8, align 1
  %keymap.addr = alloca %struct.wmKeyMap*, align 8
  %kmi.addr = alloca %struct.wmKeyMapItem*, align 8
  store %struct.wmKeyMap* %keymap, %struct.wmKeyMap** %keymap.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmKeyMap** %keymap.addr, metadata !2975, metadata !DIExpression()), !dbg !2976
  store %struct.wmKeyMapItem* %kmi, %struct.wmKeyMapItem** %kmi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmKeyMapItem** %kmi.addr, metadata !2977, metadata !DIExpression()), !dbg !2978
  %0 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap.addr, align 8, !dbg !2979
  %items = getelementptr inbounds %struct.wmKeyMap, %struct.wmKeyMap* %0, i32 0, i32 2, !dbg !2981
  %1 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi.addr, align 8, !dbg !2982
  %2 = bitcast %struct.wmKeyMapItem* %1 to i8*, !dbg !2982
  %call = call i32 @BLI_findindex(%struct.ListBase* %items, i8* %2), !dbg !2983
  %cmp = icmp ne i32 %call, -1, !dbg !2984
  br i1 %cmp, label %if.then, label %if.else, !dbg !2985

if.then:                                          ; preds = %entry
  %3 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi.addr, align 8, !dbg !2986
  %ptr = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %3, i32 0, i32 17, !dbg !2989
  %4 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !2989
  %tobool = icmp ne %struct.PointerRNA* %4, null, !dbg !2986
  br i1 %tobool, label %if.then1, label %if.end, !dbg !2990

if.then1:                                         ; preds = %if.then
  %5 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi.addr, align 8, !dbg !2991
  %ptr2 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %5, i32 0, i32 17, !dbg !2993
  %6 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr2, align 8, !dbg !2993
  call void @WM_operator_properties_free(%struct.PointerRNA* %6), !dbg !2994
  %7 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !2995
  %8 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi.addr, align 8, !dbg !2996
  %ptr3 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %8, i32 0, i32 17, !dbg !2997
  %9 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr3, align 8, !dbg !2997
  %10 = bitcast %struct.PointerRNA* %9 to i8*, !dbg !2996
  call void %7(i8* %10), !dbg !2995
  br label %if.end, !dbg !2998

if.end:                                           ; preds = %if.then1, %if.then
  %11 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap.addr, align 8, !dbg !2999
  %items4 = getelementptr inbounds %struct.wmKeyMap, %struct.wmKeyMap* %11, i32 0, i32 2, !dbg !3000
  %12 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi.addr, align 8, !dbg !3001
  %13 = bitcast %struct.wmKeyMapItem* %12 to i8*, !dbg !3001
  call void @BLI_freelinkN(%struct.ListBase* %items4, i8* %13), !dbg !3002
  %14 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap.addr, align 8, !dbg !3003
  call void @WM_keyconfig_update_tag(%struct.wmKeyMap* %14, %struct.wmKeyMapItem* null), !dbg !3004
  store i8 1, i8* %retval, align 1, !dbg !3005
  br label %return, !dbg !3005

if.else:                                          ; preds = %entry
  store i8 0, i8* %retval, align 1, !dbg !3006
  br label %return, !dbg !3006

return:                                           ; preds = %if.else, %if.end
  %15 = load i8, i8* %retval, align 1, !dbg !3008
  ret i8 %15, !dbg !3008
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.wmKeyMap* @WM_keymap_list_find(%struct.ListBase* %lb, i8* %idname, i32 %spaceid, i32 %regionid) #0 !dbg !3009 {
entry:
  %retval = alloca %struct.wmKeyMap*, align 8
  %lb.addr = alloca %struct.ListBase*, align 8
  %idname.addr = alloca i8*, align 8
  %spaceid.addr = alloca i32, align 4
  %regionid.addr = alloca i32, align 4
  %km = alloca %struct.wmKeyMap*, align 8
  store %struct.ListBase* %lb, %struct.ListBase** %lb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %lb.addr, metadata !3012, metadata !DIExpression()), !dbg !3013
  store i8* %idname, i8** %idname.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %idname.addr, metadata !3014, metadata !DIExpression()), !dbg !3015
  store i32 %spaceid, i32* %spaceid.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %spaceid.addr, metadata !3016, metadata !DIExpression()), !dbg !3017
  store i32 %regionid, i32* %regionid.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %regionid.addr, metadata !3018, metadata !DIExpression()), !dbg !3019
  call void @llvm.dbg.declare(metadata %struct.wmKeyMap** %km, metadata !3020, metadata !DIExpression()), !dbg !3021
  %0 = load %struct.ListBase*, %struct.ListBase** %lb.addr, align 8, !dbg !3022
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %0, i32 0, i32 0, !dbg !3024
  %1 = load i8*, i8** %first, align 8, !dbg !3024
  %2 = bitcast i8* %1 to %struct.wmKeyMap*, !dbg !3022
  store %struct.wmKeyMap* %2, %struct.wmKeyMap** %km, align 8, !dbg !3025
  br label %for.cond, !dbg !3026

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load %struct.wmKeyMap*, %struct.wmKeyMap** %km, align 8, !dbg !3027
  %tobool = icmp ne %struct.wmKeyMap* %3, null, !dbg !3029
  br i1 %tobool, label %for.body, label %for.end, !dbg !3029

for.body:                                         ; preds = %for.cond
  %4 = load %struct.wmKeyMap*, %struct.wmKeyMap** %km, align 8, !dbg !3030
  %spaceid1 = getelementptr inbounds %struct.wmKeyMap, %struct.wmKeyMap* %4, i32 0, i32 5, !dbg !3032
  %5 = load i16, i16* %spaceid1, align 8, !dbg !3032
  %conv = sext i16 %5 to i32, !dbg !3030
  %6 = load i32, i32* %spaceid.addr, align 4, !dbg !3033
  %cmp = icmp eq i32 %conv, %6, !dbg !3034
  br i1 %cmp, label %land.lhs.true, label %if.end11, !dbg !3035

land.lhs.true:                                    ; preds = %for.body
  %7 = load %struct.wmKeyMap*, %struct.wmKeyMap** %km, align 8, !dbg !3036
  %regionid3 = getelementptr inbounds %struct.wmKeyMap, %struct.wmKeyMap* %7, i32 0, i32 6, !dbg !3037
  %8 = load i16, i16* %regionid3, align 2, !dbg !3037
  %conv4 = sext i16 %8 to i32, !dbg !3036
  %9 = load i32, i32* %regionid.addr, align 4, !dbg !3038
  %cmp5 = icmp eq i32 %conv4, %9, !dbg !3039
  br i1 %cmp5, label %if.then, label %if.end11, !dbg !3040

if.then:                                          ; preds = %land.lhs.true
  %10 = load i8*, i8** %idname.addr, align 8, !dbg !3041
  %11 = load %struct.wmKeyMap*, %struct.wmKeyMap** %km, align 8, !dbg !3043
  %idname7 = getelementptr inbounds %struct.wmKeyMap, %struct.wmKeyMap* %11, i32 0, i32 4, !dbg !3044
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %idname7, i64 0, i64 0, !dbg !3043
  %call = call i32 @strncmp(i8* %10, i8* %arraydecay, i64 64) #4, !dbg !3045
  %cmp8 = icmp eq i32 0, %call, !dbg !3046
  br i1 %cmp8, label %if.then10, label %if.end, !dbg !3047

if.then10:                                        ; preds = %if.then
  %12 = load %struct.wmKeyMap*, %struct.wmKeyMap** %km, align 8, !dbg !3048
  store %struct.wmKeyMap* %12, %struct.wmKeyMap** %retval, align 8, !dbg !3049
  br label %return, !dbg !3049

if.end:                                           ; preds = %if.then
  br label %if.end11, !dbg !3050

if.end11:                                         ; preds = %if.end, %land.lhs.true, %for.body
  br label %for.inc, !dbg !3038

for.inc:                                          ; preds = %if.end11
  %13 = load %struct.wmKeyMap*, %struct.wmKeyMap** %km, align 8, !dbg !3051
  %next = getelementptr inbounds %struct.wmKeyMap, %struct.wmKeyMap* %13, i32 0, i32 0, !dbg !3052
  %14 = load %struct.wmKeyMap*, %struct.wmKeyMap** %next, align 8, !dbg !3052
  store %struct.wmKeyMap* %14, %struct.wmKeyMap** %km, align 8, !dbg !3053
  br label %for.cond, !dbg !3054, !llvm.loop !3055

for.end:                                          ; preds = %for.cond
  store %struct.wmKeyMap* null, %struct.wmKeyMap** %retval, align 8, !dbg !3057
  br label %return, !dbg !3057

return:                                           ; preds = %for.end, %if.then10
  %15 = load %struct.wmKeyMap*, %struct.wmKeyMap** %retval, align 8, !dbg !3058
  ret %struct.wmKeyMap* %15, !dbg !3058
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.wmKeyMap* @WM_keymap_find(%struct.wmKeyConfig* %keyconf, i8* %idname, i32 %spaceid, i32 %regionid) #0 !dbg !3059 {
entry:
  %keyconf.addr = alloca %struct.wmKeyConfig*, align 8
  %idname.addr = alloca i8*, align 8
  %spaceid.addr = alloca i32, align 4
  %regionid.addr = alloca i32, align 4
  %km = alloca %struct.wmKeyMap*, align 8
  store %struct.wmKeyConfig* %keyconf, %struct.wmKeyConfig** %keyconf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmKeyConfig** %keyconf.addr, metadata !3062, metadata !DIExpression()), !dbg !3063
  store i8* %idname, i8** %idname.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %idname.addr, metadata !3064, metadata !DIExpression()), !dbg !3065
  store i32 %spaceid, i32* %spaceid.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %spaceid.addr, metadata !3066, metadata !DIExpression()), !dbg !3067
  store i32 %regionid, i32* %regionid.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %regionid.addr, metadata !3068, metadata !DIExpression()), !dbg !3069
  call void @llvm.dbg.declare(metadata %struct.wmKeyMap** %km, metadata !3070, metadata !DIExpression()), !dbg !3071
  %0 = load %struct.wmKeyConfig*, %struct.wmKeyConfig** %keyconf.addr, align 8, !dbg !3072
  %keymaps = getelementptr inbounds %struct.wmKeyConfig, %struct.wmKeyConfig* %0, i32 0, i32 4, !dbg !3073
  %1 = load i8*, i8** %idname.addr, align 8, !dbg !3074
  %2 = load i32, i32* %spaceid.addr, align 4, !dbg !3075
  %3 = load i32, i32* %regionid.addr, align 4, !dbg !3076
  %call = call %struct.wmKeyMap* @WM_keymap_list_find(%struct.ListBase* %keymaps, i8* %1, i32 %2, i32 %3), !dbg !3077
  store %struct.wmKeyMap* %call, %struct.wmKeyMap** %km, align 8, !dbg !3071
  %4 = load %struct.wmKeyMap*, %struct.wmKeyMap** %km, align 8, !dbg !3078
  %cmp = icmp eq %struct.wmKeyMap* %4, null, !dbg !3080
  br i1 %cmp, label %if.then, label %if.end, !dbg !3081

if.then:                                          ; preds = %entry
  %5 = load i8*, i8** %idname.addr, align 8, !dbg !3082
  %6 = load i32, i32* %spaceid.addr, align 4, !dbg !3084
  %7 = load i32, i32* %regionid.addr, align 4, !dbg !3085
  %call1 = call %struct.wmKeyMap* @wm_keymap_new(i8* %5, i32 %6, i32 %7), !dbg !3086
  store %struct.wmKeyMap* %call1, %struct.wmKeyMap** %km, align 8, !dbg !3087
  %8 = load %struct.wmKeyConfig*, %struct.wmKeyConfig** %keyconf.addr, align 8, !dbg !3088
  %keymaps2 = getelementptr inbounds %struct.wmKeyConfig, %struct.wmKeyConfig* %8, i32 0, i32 4, !dbg !3089
  %9 = load %struct.wmKeyMap*, %struct.wmKeyMap** %km, align 8, !dbg !3090
  %10 = bitcast %struct.wmKeyMap* %9 to i8*, !dbg !3090
  call void @BLI_addtail(%struct.ListBase* %keymaps2, i8* %10), !dbg !3091
  %11 = load %struct.wmKeyMap*, %struct.wmKeyMap** %km, align 8, !dbg !3092
  call void @WM_keyconfig_update_tag(%struct.wmKeyMap* %11, %struct.wmKeyMapItem* null), !dbg !3093
  br label %if.end, !dbg !3094

if.end:                                           ; preds = %if.then, %entry
  %12 = load %struct.wmKeyMap*, %struct.wmKeyMap** %km, align 8, !dbg !3095
  ret %struct.wmKeyMap* %12, !dbg !3096
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.wmKeyMap* @wm_keymap_new(i8* %idname, i32 %spaceid, i32 %regionid) #0 !dbg !3097 {
entry:
  %idname.addr = alloca i8*, align 8
  %spaceid.addr = alloca i32, align 4
  %regionid.addr = alloca i32, align 4
  %km = alloca %struct.wmKeyMap*, align 8
  store i8* %idname, i8** %idname.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %idname.addr, metadata !3100, metadata !DIExpression()), !dbg !3101
  store i32 %spaceid, i32* %spaceid.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %spaceid.addr, metadata !3102, metadata !DIExpression()), !dbg !3103
  store i32 %regionid, i32* %regionid.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %regionid.addr, metadata !3104, metadata !DIExpression()), !dbg !3105
  call void @llvm.dbg.declare(metadata %struct.wmKeyMap** %km, metadata !3106, metadata !DIExpression()), !dbg !3107
  %0 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !3108
  %call = call i8* %0(i64 136, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.105, i64 0, i64 0)), !dbg !3108
  %1 = bitcast i8* %call to %struct.wmKeyMap*, !dbg !3108
  store %struct.wmKeyMap* %1, %struct.wmKeyMap** %km, align 8, !dbg !3107
  %2 = load %struct.wmKeyMap*, %struct.wmKeyMap** %km, align 8, !dbg !3109
  %idname1 = getelementptr inbounds %struct.wmKeyMap, %struct.wmKeyMap* %2, i32 0, i32 4, !dbg !3110
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %idname1, i64 0, i64 0, !dbg !3109
  %3 = load i8*, i8** %idname.addr, align 8, !dbg !3111
  %call2 = call i8* @BLI_strncpy(i8* %arraydecay, i8* %3, i64 64), !dbg !3112
  %4 = load i32, i32* %spaceid.addr, align 4, !dbg !3113
  %conv = trunc i32 %4 to i16, !dbg !3113
  %5 = load %struct.wmKeyMap*, %struct.wmKeyMap** %km, align 8, !dbg !3114
  %spaceid3 = getelementptr inbounds %struct.wmKeyMap, %struct.wmKeyMap* %5, i32 0, i32 5, !dbg !3115
  store i16 %conv, i16* %spaceid3, align 8, !dbg !3116
  %6 = load i32, i32* %regionid.addr, align 4, !dbg !3117
  %conv4 = trunc i32 %6 to i16, !dbg !3117
  %7 = load %struct.wmKeyMap*, %struct.wmKeyMap** %km, align 8, !dbg !3118
  %regionid5 = getelementptr inbounds %struct.wmKeyMap, %struct.wmKeyMap* %7, i32 0, i32 6, !dbg !3119
  store i16 %conv4, i16* %regionid5, align 2, !dbg !3120
  %8 = load %struct.wmKeyMap*, %struct.wmKeyMap** %km, align 8, !dbg !3121
  ret %struct.wmKeyMap* %8, !dbg !3122
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.wmKeyMap* @WM_keymap_find_all(%struct.bContext* %C, i8* %idname, i32 %spaceid, i32 %regionid) #0 !dbg !3123 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %idname.addr = alloca i8*, align 8
  %spaceid.addr = alloca i32, align 4
  %regionid.addr = alloca i32, align 4
  %wm = alloca %struct.wmWindowManager*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !3128, metadata !DIExpression()), !dbg !3129
  store i8* %idname, i8** %idname.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %idname.addr, metadata !3130, metadata !DIExpression()), !dbg !3131
  store i32 %spaceid, i32* %spaceid.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %spaceid.addr, metadata !3132, metadata !DIExpression()), !dbg !3133
  store i32 %regionid, i32* %regionid.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %regionid.addr, metadata !3134, metadata !DIExpression()), !dbg !3135
  call void @llvm.dbg.declare(metadata %struct.wmWindowManager** %wm, metadata !3136, metadata !DIExpression()), !dbg !3137
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3138
  %call = call %struct.wmWindowManager* @CTX_wm_manager(%struct.bContext* %0), !dbg !3139
  store %struct.wmWindowManager* %call, %struct.wmWindowManager** %wm, align 8, !dbg !3137
  %1 = load %struct.wmWindowManager*, %struct.wmWindowManager** %wm, align 8, !dbg !3140
  %userconf = getelementptr inbounds %struct.wmWindowManager, %struct.wmWindowManager* %1, i32 0, i32 16, !dbg !3141
  %2 = load %struct.wmKeyConfig*, %struct.wmKeyConfig** %userconf, align 8, !dbg !3141
  %keymaps = getelementptr inbounds %struct.wmKeyConfig, %struct.wmKeyConfig* %2, i32 0, i32 4, !dbg !3142
  %3 = load i8*, i8** %idname.addr, align 8, !dbg !3143
  %4 = load i32, i32* %spaceid.addr, align 4, !dbg !3144
  %5 = load i32, i32* %regionid.addr, align 4, !dbg !3145
  %call1 = call %struct.wmKeyMap* @WM_keymap_list_find(%struct.ListBase* %keymaps, i8* %3, i32 %4, i32 %5), !dbg !3146
  ret %struct.wmKeyMap* %call1, !dbg !3147
}

declare dso_local %struct.wmWindowManager* @CTX_wm_manager(%struct.bContext*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.wmKeyMap* @WM_modalkeymap_add(%struct.wmKeyConfig* %keyconf, i8* %idname, %struct.EnumPropertyItem* %items) #0 !dbg !3148 {
entry:
  %keyconf.addr = alloca %struct.wmKeyConfig*, align 8
  %idname.addr = alloca i8*, align 8
  %items.addr = alloca %struct.EnumPropertyItem*, align 8
  %km = alloca %struct.wmKeyMap*, align 8
  %wm = alloca %struct.wmWindowManager*, align 8
  %defaultkm = alloca %struct.wmKeyMap*, align 8
  store %struct.wmKeyConfig* %keyconf, %struct.wmKeyConfig** %keyconf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmKeyConfig** %keyconf.addr, metadata !3160, metadata !DIExpression()), !dbg !3161
  store i8* %idname, i8** %idname.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %idname.addr, metadata !3162, metadata !DIExpression()), !dbg !3163
  store %struct.EnumPropertyItem* %items, %struct.EnumPropertyItem** %items.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.EnumPropertyItem** %items.addr, metadata !3164, metadata !DIExpression()), !dbg !3165
  call void @llvm.dbg.declare(metadata %struct.wmKeyMap** %km, metadata !3166, metadata !DIExpression()), !dbg !3167
  %0 = load %struct.wmKeyConfig*, %struct.wmKeyConfig** %keyconf.addr, align 8, !dbg !3168
  %1 = load i8*, i8** %idname.addr, align 8, !dbg !3169
  %call = call %struct.wmKeyMap* @WM_keymap_find(%struct.wmKeyConfig* %0, i8* %1, i32 0, i32 0), !dbg !3170
  store %struct.wmKeyMap* %call, %struct.wmKeyMap** %km, align 8, !dbg !3167
  %2 = load %struct.wmKeyMap*, %struct.wmKeyMap** %km, align 8, !dbg !3171
  %flag = getelementptr inbounds %struct.wmKeyMap, %struct.wmKeyMap* %2, i32 0, i32 7, !dbg !3172
  %3 = load i16, i16* %flag, align 4, !dbg !3173
  %conv = sext i16 %3 to i32, !dbg !3173
  %or = or i32 %conv, 1, !dbg !3173
  %conv1 = trunc i32 %or to i16, !dbg !3173
  store i16 %conv1, i16* %flag, align 4, !dbg !3173
  %4 = load %struct.EnumPropertyItem*, %struct.EnumPropertyItem** %items.addr, align 8, !dbg !3174
  %5 = bitcast %struct.EnumPropertyItem* %4 to i8*, !dbg !3174
  %6 = load %struct.wmKeyMap*, %struct.wmKeyMap** %km, align 8, !dbg !3175
  %modal_items = getelementptr inbounds %struct.wmKeyMap, %struct.wmKeyMap* %6, i32 0, i32 10, !dbg !3176
  store i8* %5, i8** %modal_items, align 8, !dbg !3177
  %7 = load %struct.EnumPropertyItem*, %struct.EnumPropertyItem** %items.addr, align 8, !dbg !3178
  %tobool = icmp ne %struct.EnumPropertyItem* %7, null, !dbg !3178
  br i1 %tobool, label %if.end14, label %if.then, !dbg !3180

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.wmWindowManager** %wm, metadata !3181, metadata !DIExpression()), !dbg !3183
  %8 = load %struct.Main*, %struct.Main** getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 0), align 8, !dbg !3184
  %wm2 = getelementptr inbounds %struct.Main, %struct.Main* %8, i32 0, i32 40, !dbg !3185
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %wm2, i32 0, i32 0, !dbg !3186
  %9 = load i8*, i8** %first, align 8, !dbg !3186
  %10 = bitcast i8* %9 to %struct.wmWindowManager*, !dbg !3187
  store %struct.wmWindowManager* %10, %struct.wmWindowManager** %wm, align 8, !dbg !3183
  %11 = load %struct.wmWindowManager*, %struct.wmWindowManager** %wm, align 8, !dbg !3188
  %defaultconf = getelementptr inbounds %struct.wmWindowManager, %struct.wmWindowManager* %11, i32 0, i32 14, !dbg !3190
  %12 = load %struct.wmKeyConfig*, %struct.wmKeyConfig** %defaultconf, align 8, !dbg !3190
  %tobool3 = icmp ne %struct.wmKeyConfig* %12, null, !dbg !3188
  br i1 %tobool3, label %if.then4, label %if.end13, !dbg !3191

if.then4:                                         ; preds = %if.then
  call void @llvm.dbg.declare(metadata %struct.wmKeyMap** %defaultkm, metadata !3192, metadata !DIExpression()), !dbg !3194
  %13 = load %struct.wmWindowManager*, %struct.wmWindowManager** %wm, align 8, !dbg !3195
  %defaultconf5 = getelementptr inbounds %struct.wmWindowManager, %struct.wmWindowManager* %13, i32 0, i32 14, !dbg !3196
  %14 = load %struct.wmKeyConfig*, %struct.wmKeyConfig** %defaultconf5, align 8, !dbg !3196
  %keymaps = getelementptr inbounds %struct.wmKeyConfig, %struct.wmKeyConfig* %14, i32 0, i32 4, !dbg !3197
  %15 = load %struct.wmKeyMap*, %struct.wmKeyMap** %km, align 8, !dbg !3198
  %idname6 = getelementptr inbounds %struct.wmKeyMap, %struct.wmKeyMap* %15, i32 0, i32 4, !dbg !3199
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %idname6, i64 0, i64 0, !dbg !3198
  %call7 = call %struct.wmKeyMap* @WM_keymap_list_find(%struct.ListBase* %keymaps, i8* %arraydecay, i32 0, i32 0), !dbg !3200
  store %struct.wmKeyMap* %call7, %struct.wmKeyMap** %defaultkm, align 8, !dbg !3194
  %16 = load %struct.wmKeyMap*, %struct.wmKeyMap** %defaultkm, align 8, !dbg !3201
  %tobool8 = icmp ne %struct.wmKeyMap* %16, null, !dbg !3201
  br i1 %tobool8, label %if.then9, label %if.end, !dbg !3203

if.then9:                                         ; preds = %if.then4
  %17 = load %struct.wmKeyMap*, %struct.wmKeyMap** %defaultkm, align 8, !dbg !3204
  %modal_items10 = getelementptr inbounds %struct.wmKeyMap, %struct.wmKeyMap* %17, i32 0, i32 10, !dbg !3206
  %18 = load i8*, i8** %modal_items10, align 8, !dbg !3206
  %19 = load %struct.wmKeyMap*, %struct.wmKeyMap** %km, align 8, !dbg !3207
  %modal_items11 = getelementptr inbounds %struct.wmKeyMap, %struct.wmKeyMap* %19, i32 0, i32 10, !dbg !3208
  store i8* %18, i8** %modal_items11, align 8, !dbg !3209
  %20 = load %struct.wmKeyMap*, %struct.wmKeyMap** %defaultkm, align 8, !dbg !3210
  %poll = getelementptr inbounds %struct.wmKeyMap, %struct.wmKeyMap* %20, i32 0, i32 9, !dbg !3211
  %21 = load i32 (%struct.bContext*)*, i32 (%struct.bContext*)** %poll, align 8, !dbg !3211
  %22 = load %struct.wmKeyMap*, %struct.wmKeyMap** %km, align 8, !dbg !3212
  %poll12 = getelementptr inbounds %struct.wmKeyMap, %struct.wmKeyMap* %22, i32 0, i32 9, !dbg !3213
  store i32 (%struct.bContext*)* %21, i32 (%struct.bContext*)** %poll12, align 8, !dbg !3214
  br label %if.end, !dbg !3215

if.end:                                           ; preds = %if.then9, %if.then4
  br label %if.end13, !dbg !3216

if.end13:                                         ; preds = %if.end, %if.then
  br label %if.end14, !dbg !3217

if.end14:                                         ; preds = %if.end13, %entry
  %23 = load %struct.wmKeyMap*, %struct.wmKeyMap** %km, align 8, !dbg !3218
  ret %struct.wmKeyMap* %23, !dbg !3219
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.wmKeyMap* @WM_modalkeymap_get(%struct.wmKeyConfig* %keyconf, i8* %idname) #0 !dbg !3220 {
entry:
  %keyconf.addr = alloca %struct.wmKeyConfig*, align 8
  %idname.addr = alloca i8*, align 8
  %km = alloca %struct.wmKeyMap*, align 8
  store %struct.wmKeyConfig* %keyconf, %struct.wmKeyConfig** %keyconf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmKeyConfig** %keyconf.addr, metadata !3223, metadata !DIExpression()), !dbg !3224
  store i8* %idname, i8** %idname.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %idname.addr, metadata !3225, metadata !DIExpression()), !dbg !3226
  call void @llvm.dbg.declare(metadata %struct.wmKeyMap** %km, metadata !3227, metadata !DIExpression()), !dbg !3228
  %0 = load %struct.wmKeyConfig*, %struct.wmKeyConfig** %keyconf.addr, align 8, !dbg !3229
  %keymaps = getelementptr inbounds %struct.wmKeyConfig, %struct.wmKeyConfig* %0, i32 0, i32 4, !dbg !3231
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %keymaps, i32 0, i32 0, !dbg !3232
  %1 = load i8*, i8** %first, align 8, !dbg !3232
  %2 = bitcast i8* %1 to %struct.wmKeyMap*, !dbg !3229
  store %struct.wmKeyMap* %2, %struct.wmKeyMap** %km, align 8, !dbg !3233
  br label %for.cond, !dbg !3234

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load %struct.wmKeyMap*, %struct.wmKeyMap** %km, align 8, !dbg !3235
  %tobool = icmp ne %struct.wmKeyMap* %3, null, !dbg !3237
  br i1 %tobool, label %for.body, label %for.end, !dbg !3237

for.body:                                         ; preds = %for.cond
  %4 = load %struct.wmKeyMap*, %struct.wmKeyMap** %km, align 8, !dbg !3238
  %flag = getelementptr inbounds %struct.wmKeyMap, %struct.wmKeyMap* %4, i32 0, i32 7, !dbg !3240
  %5 = load i16, i16* %flag, align 4, !dbg !3240
  %conv = sext i16 %5 to i32, !dbg !3238
  %and = and i32 %conv, 1, !dbg !3241
  %tobool1 = icmp ne i32 %and, 0, !dbg !3241
  br i1 %tobool1, label %if.then, label %if.end5, !dbg !3242

if.then:                                          ; preds = %for.body
  %6 = load i8*, i8** %idname.addr, align 8, !dbg !3243
  %7 = load %struct.wmKeyMap*, %struct.wmKeyMap** %km, align 8, !dbg !3245
  %idname2 = getelementptr inbounds %struct.wmKeyMap, %struct.wmKeyMap* %7, i32 0, i32 4, !dbg !3246
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %idname2, i64 0, i64 0, !dbg !3245
  %call = call i32 @strncmp(i8* %6, i8* %arraydecay, i64 64) #4, !dbg !3247
  %cmp = icmp eq i32 0, %call, !dbg !3248
  br i1 %cmp, label %if.then4, label %if.end, !dbg !3249

if.then4:                                         ; preds = %if.then
  br label %for.end, !dbg !3250

if.end:                                           ; preds = %if.then
  br label %if.end5, !dbg !3251

if.end5:                                          ; preds = %if.end, %for.body
  br label %for.inc, !dbg !3252

for.inc:                                          ; preds = %if.end5
  %8 = load %struct.wmKeyMap*, %struct.wmKeyMap** %km, align 8, !dbg !3253
  %next = getelementptr inbounds %struct.wmKeyMap, %struct.wmKeyMap* %8, i32 0, i32 0, !dbg !3254
  %9 = load %struct.wmKeyMap*, %struct.wmKeyMap** %next, align 8, !dbg !3254
  store %struct.wmKeyMap* %9, %struct.wmKeyMap** %km, align 8, !dbg !3255
  br label %for.cond, !dbg !3256, !llvm.loop !3257

for.end:                                          ; preds = %if.then4, %for.cond
  %10 = load %struct.wmKeyMap*, %struct.wmKeyMap** %km, align 8, !dbg !3259
  ret %struct.wmKeyMap* %10, !dbg !3260
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.wmKeyMapItem* @WM_modalkeymap_add_item(%struct.wmKeyMap* %km, i32 %type, i32 %val, i32 %modifier, i32 %keymodifier, i32 %value) #0 !dbg !3261 {
entry:
  %km.addr = alloca %struct.wmKeyMap*, align 8
  %type.addr = alloca i32, align 4
  %val.addr = alloca i32, align 4
  %modifier.addr = alloca i32, align 4
  %keymodifier.addr = alloca i32, align 4
  %value.addr = alloca i32, align 4
  %kmi = alloca %struct.wmKeyMapItem*, align 8
  store %struct.wmKeyMap* %km, %struct.wmKeyMap** %km.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmKeyMap** %km.addr, metadata !3264, metadata !DIExpression()), !dbg !3265
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !3266, metadata !DIExpression()), !dbg !3267
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !3268, metadata !DIExpression()), !dbg !3269
  store i32 %modifier, i32* %modifier.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %modifier.addr, metadata !3270, metadata !DIExpression()), !dbg !3271
  store i32 %keymodifier, i32* %keymodifier.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %keymodifier.addr, metadata !3272, metadata !DIExpression()), !dbg !3273
  store i32 %value, i32* %value.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr, metadata !3274, metadata !DIExpression()), !dbg !3275
  call void @llvm.dbg.declare(metadata %struct.wmKeyMapItem** %kmi, metadata !3276, metadata !DIExpression()), !dbg !3277
  %0 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !3278
  %call = call i8* %0(i64 184, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.1, i64 0, i64 0)), !dbg !3278
  %1 = bitcast i8* %call to %struct.wmKeyMapItem*, !dbg !3278
  store %struct.wmKeyMapItem* %1, %struct.wmKeyMapItem** %kmi, align 8, !dbg !3277
  %2 = load %struct.wmKeyMap*, %struct.wmKeyMap** %km.addr, align 8, !dbg !3279
  %items = getelementptr inbounds %struct.wmKeyMap, %struct.wmKeyMap* %2, i32 0, i32 2, !dbg !3280
  %3 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi, align 8, !dbg !3281
  %4 = bitcast %struct.wmKeyMapItem* %3 to i8*, !dbg !3281
  call void @BLI_addtail(%struct.ListBase* %items, i8* %4), !dbg !3282
  %5 = load i32, i32* %value.addr, align 4, !dbg !3283
  %conv = trunc i32 %5 to i16, !dbg !3283
  %6 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi, align 8, !dbg !3284
  %propvalue = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %6, i32 0, i32 5, !dbg !3285
  store i16 %conv, i16* %propvalue, align 8, !dbg !3286
  %7 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi, align 8, !dbg !3287
  %8 = load i32, i32* %type.addr, align 4, !dbg !3288
  %conv1 = trunc i32 %8 to i16, !dbg !3288
  %9 = load i32, i32* %val.addr, align 4, !dbg !3289
  %conv2 = trunc i32 %9 to i16, !dbg !3289
  %10 = load i32, i32* %modifier.addr, align 4, !dbg !3290
  %11 = load i32, i32* %keymodifier.addr, align 4, !dbg !3291
  %conv3 = trunc i32 %11 to i16, !dbg !3291
  call void @keymap_event_set(%struct.wmKeyMapItem* %7, i16 signext %conv1, i16 signext %conv2, i32 %10, i16 signext %conv3), !dbg !3292
  %12 = load %struct.wmKeyMap*, %struct.wmKeyMap** %km.addr, align 8, !dbg !3293
  %13 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi, align 8, !dbg !3294
  call void @keymap_item_set_id(%struct.wmKeyMap* %12, %struct.wmKeyMapItem* %13), !dbg !3295
  %14 = load %struct.wmKeyMap*, %struct.wmKeyMap** %km.addr, align 8, !dbg !3296
  %15 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi, align 8, !dbg !3297
  call void @WM_keyconfig_update_tag(%struct.wmKeyMap* %14, %struct.wmKeyMapItem* %15), !dbg !3298
  %16 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi, align 8, !dbg !3299
  ret %struct.wmKeyMapItem* %16, !dbg !3300
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.wmKeyMapItem* @WM_modalkeymap_add_item_str(%struct.wmKeyMap* %km, i32 %type, i32 %val, i32 %modifier, i32 %keymodifier, i8* %value) #0 !dbg !3301 {
entry:
  %km.addr = alloca %struct.wmKeyMap*, align 8
  %type.addr = alloca i32, align 4
  %val.addr = alloca i32, align 4
  %modifier.addr = alloca i32, align 4
  %keymodifier.addr = alloca i32, align 4
  %value.addr = alloca i8*, align 8
  %kmi = alloca %struct.wmKeyMapItem*, align 8
  store %struct.wmKeyMap* %km, %struct.wmKeyMap** %km.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmKeyMap** %km.addr, metadata !3304, metadata !DIExpression()), !dbg !3305
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !3306, metadata !DIExpression()), !dbg !3307
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !3308, metadata !DIExpression()), !dbg !3309
  store i32 %modifier, i32* %modifier.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %modifier.addr, metadata !3310, metadata !DIExpression()), !dbg !3311
  store i32 %keymodifier, i32* %keymodifier.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %keymodifier.addr, metadata !3312, metadata !DIExpression()), !dbg !3313
  store i8* %value, i8** %value.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %value.addr, metadata !3314, metadata !DIExpression()), !dbg !3315
  call void @llvm.dbg.declare(metadata %struct.wmKeyMapItem** %kmi, metadata !3316, metadata !DIExpression()), !dbg !3317
  %0 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !3318
  %call = call i8* %0(i64 184, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.1, i64 0, i64 0)), !dbg !3318
  %1 = bitcast i8* %call to %struct.wmKeyMapItem*, !dbg !3318
  store %struct.wmKeyMapItem* %1, %struct.wmKeyMapItem** %kmi, align 8, !dbg !3317
  %2 = load %struct.wmKeyMap*, %struct.wmKeyMap** %km.addr, align 8, !dbg !3319
  %items = getelementptr inbounds %struct.wmKeyMap, %struct.wmKeyMap* %2, i32 0, i32 2, !dbg !3320
  %3 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi, align 8, !dbg !3321
  %4 = bitcast %struct.wmKeyMapItem* %3 to i8*, !dbg !3321
  call void @BLI_addtail(%struct.ListBase* %items, i8* %4), !dbg !3322
  %5 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi, align 8, !dbg !3323
  %propvalue_str = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %5, i32 0, i32 4, !dbg !3324
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %propvalue_str, i64 0, i64 0, !dbg !3323
  %6 = load i8*, i8** %value.addr, align 8, !dbg !3325
  %call1 = call i8* @BLI_strncpy(i8* %arraydecay, i8* %6, i64 64), !dbg !3326
  %7 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi, align 8, !dbg !3327
  %8 = load i32, i32* %type.addr, align 4, !dbg !3328
  %conv = trunc i32 %8 to i16, !dbg !3328
  %9 = load i32, i32* %val.addr, align 4, !dbg !3329
  %conv2 = trunc i32 %9 to i16, !dbg !3329
  %10 = load i32, i32* %modifier.addr, align 4, !dbg !3330
  %11 = load i32, i32* %keymodifier.addr, align 4, !dbg !3331
  %conv3 = trunc i32 %11 to i16, !dbg !3331
  call void @keymap_event_set(%struct.wmKeyMapItem* %7, i16 signext %conv, i16 signext %conv2, i32 %10, i16 signext %conv3), !dbg !3332
  %12 = load %struct.wmKeyMap*, %struct.wmKeyMap** %km.addr, align 8, !dbg !3333
  %13 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi, align 8, !dbg !3334
  call void @keymap_item_set_id(%struct.wmKeyMap* %12, %struct.wmKeyMapItem* %13), !dbg !3335
  %14 = load %struct.wmKeyMap*, %struct.wmKeyMap** %km.addr, align 8, !dbg !3336
  %15 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi, align 8, !dbg !3337
  call void @WM_keyconfig_update_tag(%struct.wmKeyMap* %14, %struct.wmKeyMapItem* %15), !dbg !3338
  %16 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi, align 8, !dbg !3339
  ret %struct.wmKeyMapItem* %16, !dbg !3340
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.wmKeyMapItem* @WM_modalkeymap_find_propvalue(%struct.wmKeyMap* %km, i32 %propvalue) #0 !dbg !3341 {
entry:
  %retval = alloca %struct.wmKeyMapItem*, align 8
  %km.addr = alloca %struct.wmKeyMap*, align 8
  %propvalue.addr = alloca i32, align 4
  %kmi = alloca %struct.wmKeyMapItem*, align 8
  store %struct.wmKeyMap* %km, %struct.wmKeyMap** %km.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmKeyMap** %km.addr, metadata !3345, metadata !DIExpression()), !dbg !3346
  store i32 %propvalue, i32* %propvalue.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %propvalue.addr, metadata !3347, metadata !DIExpression()), !dbg !3348
  %0 = load %struct.wmKeyMap*, %struct.wmKeyMap** %km.addr, align 8, !dbg !3349
  %flag = getelementptr inbounds %struct.wmKeyMap, %struct.wmKeyMap* %0, i32 0, i32 7, !dbg !3351
  %1 = load i16, i16* %flag, align 4, !dbg !3351
  %conv = sext i16 %1 to i32, !dbg !3349
  %and = and i32 %conv, 1, !dbg !3352
  %tobool = icmp ne i32 %and, 0, !dbg !3352
  br i1 %tobool, label %if.then, label %if.else, !dbg !3353

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.wmKeyMapItem** %kmi, metadata !3354, metadata !DIExpression()), !dbg !3356
  %2 = load %struct.wmKeyMap*, %struct.wmKeyMap** %km.addr, align 8, !dbg !3357
  %items = getelementptr inbounds %struct.wmKeyMap, %struct.wmKeyMap* %2, i32 0, i32 2, !dbg !3359
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %items, i32 0, i32 0, !dbg !3360
  %3 = load i8*, i8** %first, align 8, !dbg !3360
  %4 = bitcast i8* %3 to %struct.wmKeyMapItem*, !dbg !3357
  store %struct.wmKeyMapItem* %4, %struct.wmKeyMapItem** %kmi, align 8, !dbg !3361
  br label %for.cond, !dbg !3362

for.cond:                                         ; preds = %for.inc, %if.then
  %5 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi, align 8, !dbg !3363
  %tobool1 = icmp ne %struct.wmKeyMapItem* %5, null, !dbg !3365
  br i1 %tobool1, label %for.body, label %for.end, !dbg !3365

for.body:                                         ; preds = %for.cond
  %6 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi, align 8, !dbg !3366
  %propvalue2 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %6, i32 0, i32 5, !dbg !3369
  %7 = load i16, i16* %propvalue2, align 8, !dbg !3369
  %conv3 = sext i16 %7 to i32, !dbg !3366
  %8 = load i32, i32* %propvalue.addr, align 4, !dbg !3370
  %cmp = icmp eq i32 %conv3, %8, !dbg !3371
  br i1 %cmp, label %if.then5, label %if.end, !dbg !3372

if.then5:                                         ; preds = %for.body
  %9 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi, align 8, !dbg !3373
  store %struct.wmKeyMapItem* %9, %struct.wmKeyMapItem** %retval, align 8, !dbg !3375
  br label %return, !dbg !3375

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !3376

for.inc:                                          ; preds = %if.end
  %10 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi, align 8, !dbg !3377
  %next = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %10, i32 0, i32 0, !dbg !3378
  %11 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %next, align 8, !dbg !3378
  store %struct.wmKeyMapItem* %11, %struct.wmKeyMapItem** %kmi, align 8, !dbg !3379
  br label %for.cond, !dbg !3380, !llvm.loop !3381

for.end:                                          ; preds = %for.cond
  br label %if.end6, !dbg !3383

if.else:                                          ; preds = %entry
  br label %if.end6

if.end6:                                          ; preds = %if.else, %for.end
  store %struct.wmKeyMapItem* null, %struct.wmKeyMapItem** %retval, align 8, !dbg !3384
  br label %return, !dbg !3384

return:                                           ; preds = %if.end6, %if.then5
  %12 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %retval, align 8, !dbg !3385
  ret %struct.wmKeyMapItem* %12, !dbg !3385
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @WM_modalkeymap_assign(%struct.wmKeyMap* %km, i8* %opname) #0 !dbg !3386 {
entry:
  %km.addr = alloca %struct.wmKeyMap*, align 8
  %opname.addr = alloca i8*, align 8
  %ot = alloca %struct.wmOperatorType*, align 8
  store %struct.wmKeyMap* %km, %struct.wmKeyMap** %km.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmKeyMap** %km.addr, metadata !3389, metadata !DIExpression()), !dbg !3390
  store i8* %opname, i8** %opname.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %opname.addr, metadata !3391, metadata !DIExpression()), !dbg !3392
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot, metadata !3393, metadata !DIExpression()), !dbg !3484
  %0 = load i8*, i8** %opname.addr, align 8, !dbg !3485
  %call = call %struct.wmOperatorType* @WM_operatortype_find(i8* %0, i8 zeroext 0), !dbg !3486
  store %struct.wmOperatorType* %call, %struct.wmOperatorType** %ot, align 8, !dbg !3484
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot, align 8, !dbg !3487
  %tobool = icmp ne %struct.wmOperatorType* %1, null, !dbg !3487
  br i1 %tobool, label %if.then, label %if.else, !dbg !3489

if.then:                                          ; preds = %entry
  %2 = load %struct.wmKeyMap*, %struct.wmKeyMap** %km.addr, align 8, !dbg !3490
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot, align 8, !dbg !3491
  %modalkeymap = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 15, !dbg !3492
  store %struct.wmKeyMap* %2, %struct.wmKeyMap** %modalkeymap, align 8, !dbg !3493
  br label %if.end, !dbg !3491

if.else:                                          ; preds = %entry
  %4 = load i8*, i8** %opname.addr, align 8, !dbg !3494
  %call1 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.5, i64 0, i64 0), i8* %4), !dbg !3495
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !3496
}

declare dso_local %struct.wmOperatorType* @WM_operatortype_find(i8*, i8 zeroext) #2

declare dso_local i32 @printf(i8*, ...) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i8* @WM_key_event_string(i16 signext %type) #0 !dbg !3497 {
entry:
  %retval = alloca i8*, align 8
  %type.addr = alloca i16, align 2
  %name = alloca i8*, align 8
  store i16 %type, i16* %type.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %type.addr, metadata !3500, metadata !DIExpression()), !dbg !3501
  call void @llvm.dbg.declare(metadata i8** %name, metadata !3502, metadata !DIExpression()), !dbg !3503
  store i8* null, i8** %name, align 8, !dbg !3503
  %0 = load i16, i16* %type.addr, align 2, !dbg !3504
  %conv = sext i16 %0 to i32, !dbg !3506
  %call = call zeroext i8 @RNA_enum_name(%struct.EnumPropertyItem* getelementptr inbounds ([0 x %struct.EnumPropertyItem], [0 x %struct.EnumPropertyItem]* @event_type_items, i64 0, i64 0), i32 %conv, i8** %name), !dbg !3507
  %tobool = icmp ne i8 %call, 0, !dbg !3507
  br i1 %tobool, label %if.then, label %if.end, !dbg !3508

if.then:                                          ; preds = %entry
  %1 = load i8*, i8** %name, align 8, !dbg !3509
  store i8* %1, i8** %retval, align 8, !dbg !3510
  br label %return, !dbg !3510

if.end:                                           ; preds = %entry
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6, i64 0, i64 0), i8** %retval, align 8, !dbg !3511
  br label %return, !dbg !3511

return:                                           ; preds = %if.end, %if.then
  %2 = load i8*, i8** %retval, align 8, !dbg !3512
  ret i8* %2, !dbg !3512
}

declare dso_local zeroext i8 @RNA_enum_name(%struct.EnumPropertyItem*, i32, i8**) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @WM_keymap_item_to_string(%struct.wmKeyMapItem* %kmi, i8* %str, i32 %len) #0 !dbg !3513 {
entry:
  %kmi.addr = alloca %struct.wmKeyMapItem*, align 8
  %str.addr = alloca i8*, align 8
  %len.addr = alloca i32, align 4
  %buf = alloca [128 x i8], align 16
  %p = alloca i8*, align 8
  store %struct.wmKeyMapItem* %kmi, %struct.wmKeyMapItem** %kmi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmKeyMapItem** %kmi.addr, metadata !3516, metadata !DIExpression()), !dbg !3517
  store i8* %str, i8** %str.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %str.addr, metadata !3518, metadata !DIExpression()), !dbg !3519
  store i32 %len, i32* %len.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %len.addr, metadata !3520, metadata !DIExpression()), !dbg !3521
  call void @llvm.dbg.declare(metadata [128 x i8]* %buf, metadata !3522, metadata !DIExpression()), !dbg !3523
  call void @llvm.dbg.declare(metadata i8** %p, metadata !3524, metadata !DIExpression()), !dbg !3525
  %arraydecay = getelementptr inbounds [128 x i8], [128 x i8]* %buf, i64 0, i64 0, !dbg !3526
  store i8* %arraydecay, i8** %p, align 8, !dbg !3525
  %arrayidx = getelementptr inbounds [128 x i8], [128 x i8]* %buf, i64 0, i64 0, !dbg !3527
  store i8 0, i8* %arrayidx, align 16, !dbg !3528
  %0 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi.addr, align 8, !dbg !3529
  %shift = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %0, i32 0, i32 8, !dbg !3531
  %1 = load i16, i16* %shift, align 2, !dbg !3531
  %conv = sext i16 %1 to i32, !dbg !3529
  %cmp = icmp eq i32 %conv, -1, !dbg !3532
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !3533

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi.addr, align 8, !dbg !3534
  %ctrl = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %2, i32 0, i32 9, !dbg !3535
  %3 = load i16, i16* %ctrl, align 8, !dbg !3535
  %conv2 = sext i16 %3 to i32, !dbg !3534
  %cmp3 = icmp eq i32 %conv2, -1, !dbg !3536
  br i1 %cmp3, label %land.lhs.true5, label %if.else, !dbg !3537

land.lhs.true5:                                   ; preds = %land.lhs.true
  %4 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi.addr, align 8, !dbg !3538
  %alt = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %4, i32 0, i32 10, !dbg !3539
  %5 = load i16, i16* %alt, align 2, !dbg !3539
  %conv6 = sext i16 %5 to i32, !dbg !3538
  %cmp7 = icmp eq i32 %conv6, -1, !dbg !3540
  br i1 %cmp7, label %land.lhs.true9, label %if.else, !dbg !3541

land.lhs.true9:                                   ; preds = %land.lhs.true5
  %6 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi.addr, align 8, !dbg !3542
  %oskey = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %6, i32 0, i32 11, !dbg !3543
  %7 = load i16, i16* %oskey, align 4, !dbg !3543
  %conv10 = sext i16 %7 to i32, !dbg !3542
  %cmp11 = icmp eq i32 %conv10, -1, !dbg !3544
  br i1 %cmp11, label %if.then, label %if.else, !dbg !3545

if.then:                                          ; preds = %land.lhs.true9
  %8 = load i8*, i8** %p, align 8, !dbg !3546
  %call = call i64 @BLI_strcpy_rlen(i8* %8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.7, i64 0, i64 0)), !dbg !3548
  %9 = load i8*, i8** %p, align 8, !dbg !3549
  %add.ptr = getelementptr inbounds i8, i8* %9, i64 %call, !dbg !3549
  store i8* %add.ptr, i8** %p, align 8, !dbg !3549
  br label %if.end35, !dbg !3550

if.else:                                          ; preds = %land.lhs.true9, %land.lhs.true5, %land.lhs.true, %entry
  %10 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi.addr, align 8, !dbg !3551
  %shift13 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %10, i32 0, i32 8, !dbg !3554
  %11 = load i16, i16* %shift13, align 2, !dbg !3554
  %tobool = icmp ne i16 %11, 0, !dbg !3551
  br i1 %tobool, label %if.then14, label %if.end, !dbg !3555

if.then14:                                        ; preds = %if.else
  %12 = load i8*, i8** %p, align 8, !dbg !3556
  %call15 = call i64 @BLI_strcpy_rlen(i8* %12, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.8, i64 0, i64 0)), !dbg !3557
  %13 = load i8*, i8** %p, align 8, !dbg !3558
  %add.ptr16 = getelementptr inbounds i8, i8* %13, i64 %call15, !dbg !3558
  store i8* %add.ptr16, i8** %p, align 8, !dbg !3558
  br label %if.end, !dbg !3559

if.end:                                           ; preds = %if.then14, %if.else
  %14 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi.addr, align 8, !dbg !3560
  %ctrl17 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %14, i32 0, i32 9, !dbg !3562
  %15 = load i16, i16* %ctrl17, align 8, !dbg !3562
  %tobool18 = icmp ne i16 %15, 0, !dbg !3560
  br i1 %tobool18, label %if.then19, label %if.end22, !dbg !3563

if.then19:                                        ; preds = %if.end
  %16 = load i8*, i8** %p, align 8, !dbg !3564
  %call20 = call i64 @BLI_strcpy_rlen(i8* %16, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.9, i64 0, i64 0)), !dbg !3565
  %17 = load i8*, i8** %p, align 8, !dbg !3566
  %add.ptr21 = getelementptr inbounds i8, i8* %17, i64 %call20, !dbg !3566
  store i8* %add.ptr21, i8** %p, align 8, !dbg !3566
  br label %if.end22, !dbg !3567

if.end22:                                         ; preds = %if.then19, %if.end
  %18 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi.addr, align 8, !dbg !3568
  %alt23 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %18, i32 0, i32 10, !dbg !3570
  %19 = load i16, i16* %alt23, align 2, !dbg !3570
  %tobool24 = icmp ne i16 %19, 0, !dbg !3568
  br i1 %tobool24, label %if.then25, label %if.end28, !dbg !3571

if.then25:                                        ; preds = %if.end22
  %20 = load i8*, i8** %p, align 8, !dbg !3572
  %call26 = call i64 @BLI_strcpy_rlen(i8* %20, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.10, i64 0, i64 0)), !dbg !3573
  %21 = load i8*, i8** %p, align 8, !dbg !3574
  %add.ptr27 = getelementptr inbounds i8, i8* %21, i64 %call26, !dbg !3574
  store i8* %add.ptr27, i8** %p, align 8, !dbg !3574
  br label %if.end28, !dbg !3575

if.end28:                                         ; preds = %if.then25, %if.end22
  %22 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi.addr, align 8, !dbg !3576
  %oskey29 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %22, i32 0, i32 11, !dbg !3578
  %23 = load i16, i16* %oskey29, align 4, !dbg !3578
  %tobool30 = icmp ne i16 %23, 0, !dbg !3576
  br i1 %tobool30, label %if.then31, label %if.end34, !dbg !3579

if.then31:                                        ; preds = %if.end28
  %24 = load i8*, i8** %p, align 8, !dbg !3580
  %call32 = call i64 @BLI_strcpy_rlen(i8* %24, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.11, i64 0, i64 0)), !dbg !3581
  %25 = load i8*, i8** %p, align 8, !dbg !3582
  %add.ptr33 = getelementptr inbounds i8, i8* %25, i64 %call32, !dbg !3582
  store i8* %add.ptr33, i8** %p, align 8, !dbg !3582
  br label %if.end34, !dbg !3583

if.end34:                                         ; preds = %if.then31, %if.end28
  br label %if.end35

if.end35:                                         ; preds = %if.end34, %if.then
  %26 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi.addr, align 8, !dbg !3584
  %keymodifier = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %26, i32 0, i32 12, !dbg !3586
  %27 = load i16, i16* %keymodifier, align 2, !dbg !3586
  %tobool36 = icmp ne i16 %27, 0, !dbg !3584
  br i1 %tobool36, label %if.then37, label %if.end44, !dbg !3587

if.then37:                                        ; preds = %if.end35
  %28 = load i8*, i8** %p, align 8, !dbg !3588
  %29 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi.addr, align 8, !dbg !3590
  %keymodifier38 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %29, i32 0, i32 12, !dbg !3591
  %30 = load i16, i16* %keymodifier38, align 2, !dbg !3591
  %call39 = call i8* @WM_key_event_string(i16 signext %30), !dbg !3592
  %call40 = call i64 @BLI_strcpy_rlen(i8* %28, i8* %call39), !dbg !3593
  %31 = load i8*, i8** %p, align 8, !dbg !3594
  %add.ptr41 = getelementptr inbounds i8, i8* %31, i64 %call40, !dbg !3594
  store i8* %add.ptr41, i8** %p, align 8, !dbg !3594
  %32 = load i8*, i8** %p, align 8, !dbg !3595
  %call42 = call i64 @BLI_strcpy_rlen(i8* %32, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12, i64 0, i64 0)), !dbg !3596
  %33 = load i8*, i8** %p, align 8, !dbg !3597
  %add.ptr43 = getelementptr inbounds i8, i8* %33, i64 %call42, !dbg !3597
  store i8* %add.ptr43, i8** %p, align 8, !dbg !3597
  br label %if.end44, !dbg !3598

if.end44:                                         ; preds = %if.then37, %if.end35
  %34 = load i8*, i8** %p, align 8, !dbg !3599
  %35 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi.addr, align 8, !dbg !3600
  %type = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %35, i32 0, i32 6, !dbg !3601
  %36 = load i16, i16* %type, align 2, !dbg !3601
  %call45 = call i8* @WM_key_event_string(i16 signext %36), !dbg !3602
  %call46 = call i64 @BLI_strcpy_rlen(i8* %34, i8* %call45), !dbg !3603
  %37 = load i8*, i8** %p, align 8, !dbg !3604
  %add.ptr47 = getelementptr inbounds i8, i8* %37, i64 %call46, !dbg !3604
  store i8* %add.ptr47, i8** %p, align 8, !dbg !3604
  %38 = load i8*, i8** %str.addr, align 8, !dbg !3605
  %arraydecay48 = getelementptr inbounds [128 x i8], [128 x i8]* %buf, i64 0, i64 0, !dbg !3606
  %39 = load i32, i32* %len.addr, align 4, !dbg !3607
  %conv49 = sext i32 %39 to i64, !dbg !3607
  %call50 = call i64 @BLI_strncpy_rlen(i8* %38, i8* %arraydecay48, i64 %conv49), !dbg !3608
  %conv51 = trunc i64 %call50 to i32, !dbg !3608
  ret i32 %conv51, !dbg !3609
}

declare dso_local i64 @BLI_strcpy_rlen(i8*, i8*) #2

declare dso_local i64 @BLI_strncpy_rlen(i8*, i8*, i64) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i8* @WM_key_event_operator_string(%struct.bContext* %C, i8* %opname, i32 %opcontext, %struct.IDProperty* %properties, i8 zeroext %is_strict, i8* %str, i32 %len) #0 !dbg !3610 {
entry:
  %retval = alloca i8*, align 8
  %C.addr = alloca %struct.bContext*, align 8
  %opname.addr = alloca i8*, align 8
  %opcontext.addr = alloca i32, align 4
  %properties.addr = alloca %struct.IDProperty*, align 8
  %is_strict.addr = alloca i8, align 1
  %str.addr = alloca i8*, align 8
  %len.addr = alloca i32, align 4
  %kmi = alloca %struct.wmKeyMapItem*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !3614, metadata !DIExpression()), !dbg !3615
  store i8* %opname, i8** %opname.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %opname.addr, metadata !3616, metadata !DIExpression()), !dbg !3617
  store i32 %opcontext, i32* %opcontext.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %opcontext.addr, metadata !3618, metadata !DIExpression()), !dbg !3619
  store %struct.IDProperty* %properties, %struct.IDProperty** %properties.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.IDProperty** %properties.addr, metadata !3620, metadata !DIExpression()), !dbg !3621
  store i8 %is_strict, i8* %is_strict.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %is_strict.addr, metadata !3622, metadata !DIExpression()), !dbg !3623
  store i8* %str, i8** %str.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %str.addr, metadata !3624, metadata !DIExpression()), !dbg !3625
  store i32 %len, i32* %len.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %len.addr, metadata !3626, metadata !DIExpression()), !dbg !3627
  call void @llvm.dbg.declare(metadata %struct.wmKeyMapItem** %kmi, metadata !3628, metadata !DIExpression()), !dbg !3629
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3630
  %1 = load i8*, i8** %opname.addr, align 8, !dbg !3631
  %2 = load i32, i32* %opcontext.addr, align 4, !dbg !3632
  %3 = load %struct.IDProperty*, %struct.IDProperty** %properties.addr, align 8, !dbg !3633
  %4 = load i8, i8* %is_strict.addr, align 1, !dbg !3634
  %call = call %struct.wmKeyMapItem* @wm_keymap_item_find(%struct.bContext* %0, i8* %1, i32 %2, %struct.IDProperty* %3, i8 zeroext 0, i8 zeroext %4, %struct.wmKeyMap** null), !dbg !3635
  store %struct.wmKeyMapItem* %call, %struct.wmKeyMapItem** %kmi, align 8, !dbg !3629
  %5 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi, align 8, !dbg !3636
  %tobool = icmp ne %struct.wmKeyMapItem* %5, null, !dbg !3636
  br i1 %tobool, label %if.then, label %if.end, !dbg !3638

if.then:                                          ; preds = %entry
  %6 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi, align 8, !dbg !3639
  %7 = load i8*, i8** %str.addr, align 8, !dbg !3641
  %8 = load i32, i32* %len.addr, align 4, !dbg !3642
  %call1 = call i32 @WM_keymap_item_to_string(%struct.wmKeyMapItem* %6, i8* %7, i32 %8), !dbg !3643
  %9 = load i8*, i8** %str.addr, align 8, !dbg !3644
  store i8* %9, i8** %retval, align 8, !dbg !3645
  br label %return, !dbg !3645

if.end:                                           ; preds = %entry
  store i8* null, i8** %retval, align 8, !dbg !3646
  br label %return, !dbg !3646

return:                                           ; preds = %if.end, %if.then
  %10 = load i8*, i8** %retval, align 8, !dbg !3647
  ret i8* %10, !dbg !3647
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.wmKeyMapItem* @wm_keymap_item_find(%struct.bContext* %C, i8* %opname, i32 %opcontext, %struct.IDProperty* %properties, i8 zeroext %is_hotkey, i8 zeroext %is_strict, %struct.wmKeyMap** %keymap_r) #0 !dbg !3648 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %opname.addr = alloca i8*, align 8
  %opcontext.addr = alloca i32, align 4
  %properties.addr = alloca %struct.IDProperty*, align 8
  %is_hotkey.addr = alloca i8, align 1
  %is_strict.addr = alloca i8, align 1
  %keymap_r.addr = alloca %struct.wmKeyMap**, align 8
  %found = alloca %struct.wmKeyMapItem*, align 8
  %ot = alloca %struct.wmOperatorType*, align 8
  %opptr = alloca %struct.PointerRNA, align 8
  %properties_default = alloca %struct.IDProperty*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !3652, metadata !DIExpression()), !dbg !3653
  store i8* %opname, i8** %opname.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %opname.addr, metadata !3654, metadata !DIExpression()), !dbg !3655
  store i32 %opcontext, i32* %opcontext.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %opcontext.addr, metadata !3656, metadata !DIExpression()), !dbg !3657
  store %struct.IDProperty* %properties, %struct.IDProperty** %properties.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.IDProperty** %properties.addr, metadata !3658, metadata !DIExpression()), !dbg !3659
  store i8 %is_hotkey, i8* %is_hotkey.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %is_hotkey.addr, metadata !3660, metadata !DIExpression()), !dbg !3661
  store i8 %is_strict, i8* %is_strict.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %is_strict.addr, metadata !3662, metadata !DIExpression()), !dbg !3663
  store %struct.wmKeyMap** %keymap_r, %struct.wmKeyMap*** %keymap_r.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmKeyMap*** %keymap_r.addr, metadata !3664, metadata !DIExpression()), !dbg !3665
  call void @llvm.dbg.declare(metadata %struct.wmKeyMapItem** %found, metadata !3666, metadata !DIExpression()), !dbg !3667
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3668
  %1 = load i8*, i8** %opname.addr, align 8, !dbg !3669
  %2 = load i32, i32* %opcontext.addr, align 4, !dbg !3670
  %3 = load %struct.IDProperty*, %struct.IDProperty** %properties.addr, align 8, !dbg !3671
  %4 = load i8, i8* %is_strict.addr, align 1, !dbg !3672
  %5 = load i8, i8* %is_hotkey.addr, align 1, !dbg !3673
  %6 = load %struct.wmKeyMap**, %struct.wmKeyMap*** %keymap_r.addr, align 8, !dbg !3674
  %call = call %struct.wmKeyMapItem* @wm_keymap_item_find_props(%struct.bContext* %0, i8* %1, i32 %2, %struct.IDProperty* %3, i8 zeroext %4, i8 zeroext %5, %struct.wmKeyMap** %6), !dbg !3675
  store %struct.wmKeyMapItem* %call, %struct.wmKeyMapItem** %found, align 8, !dbg !3667
  %7 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %found, align 8, !dbg !3676
  %tobool = icmp ne %struct.wmKeyMapItem* %7, null, !dbg !3676
  br i1 %tobool, label %if.end26, label %land.lhs.true, !dbg !3678

land.lhs.true:                                    ; preds = %entry
  %8 = load %struct.IDProperty*, %struct.IDProperty** %properties.addr, align 8, !dbg !3679
  %tobool1 = icmp ne %struct.IDProperty* %8, null, !dbg !3679
  br i1 %tobool1, label %if.then, label %if.end26, !dbg !3680

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot, metadata !3681, metadata !DIExpression()), !dbg !3683
  %9 = load i8*, i8** %opname.addr, align 8, !dbg !3684
  %call2 = call %struct.wmOperatorType* @WM_operatortype_find(i8* %9, i8 zeroext 1), !dbg !3685
  store %struct.wmOperatorType* %call2, %struct.wmOperatorType** %ot, align 8, !dbg !3683
  %10 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot, align 8, !dbg !3686
  %tobool3 = icmp ne %struct.wmOperatorType* %10, null, !dbg !3686
  br i1 %tobool3, label %if.then4, label %if.end25, !dbg !3688

if.then4:                                         ; preds = %if.then
  call void @llvm.dbg.declare(metadata %struct.PointerRNA* %opptr, metadata !3689, metadata !DIExpression()), !dbg !3692
  call void @llvm.dbg.declare(metadata %struct.IDProperty** %properties_default, metadata !3693, metadata !DIExpression()), !dbg !3694
  %11 = load %struct.IDProperty*, %struct.IDProperty** %properties.addr, align 8, !dbg !3695
  %call5 = call %struct.IDProperty* @IDP_CopyProperty(%struct.IDProperty* %11), !dbg !3696
  store %struct.IDProperty* %call5, %struct.IDProperty** %properties_default, align 8, !dbg !3694
  %12 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot, align 8, !dbg !3697
  %srna = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %12, i32 0, i32 11, !dbg !3698
  %13 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !3698
  %14 = load %struct.IDProperty*, %struct.IDProperty** %properties_default, align 8, !dbg !3699
  %15 = bitcast %struct.IDProperty* %14 to i8*, !dbg !3699
  call void @RNA_pointer_create(%struct.ID* null, %struct.StructRNA* %13, i8* %15, %struct.PointerRNA* %opptr), !dbg !3700
  %call6 = call zeroext i8 @WM_operator_properties_default(%struct.PointerRNA* %opptr, i8 zeroext 1), !dbg !3701
  %conv = zext i8 %call6 to i32, !dbg !3701
  %tobool7 = icmp ne i32 %conv, 0, !dbg !3701
  br i1 %tobool7, label %if.then16, label %lor.lhs.false, !dbg !3703

lor.lhs.false:                                    ; preds = %if.then4
  %16 = load i8, i8* %is_strict.addr, align 1, !dbg !3704
  %tobool8 = icmp ne i8 %16, 0, !dbg !3704
  br i1 %tobool8, label %if.end24, label %land.lhs.true9, !dbg !3705

land.lhs.true9:                                   ; preds = %lor.lhs.false
  %17 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot, align 8, !dbg !3706
  %prop = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %17, i32 0, i32 13, !dbg !3707
  %18 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !3707
  %tobool10 = icmp ne %struct.PropertyRNA* %18, null, !dbg !3706
  br i1 %tobool10, label %land.lhs.true11, label %if.end24, !dbg !3708

land.lhs.true11:                                  ; preds = %land.lhs.true9
  %19 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot, align 8, !dbg !3709
  %prop12 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %19, i32 0, i32 13, !dbg !3710
  %20 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop12, align 8, !dbg !3710
  %call13 = call zeroext i8 @RNA_property_is_set(%struct.PointerRNA* %opptr, %struct.PropertyRNA* %20), !dbg !3711
  %conv14 = zext i8 %call13 to i32, !dbg !3711
  %tobool15 = icmp ne i32 %conv14, 0, !dbg !3711
  br i1 %tobool15, label %if.then16, label %if.end24, !dbg !3712

if.then16:                                        ; preds = %land.lhs.true11, %if.then4
  %21 = load i8, i8* %is_strict.addr, align 1, !dbg !3713
  %tobool17 = icmp ne i8 %21, 0, !dbg !3713
  br i1 %tobool17, label %if.end, label %land.lhs.true18, !dbg !3716

land.lhs.true18:                                  ; preds = %if.then16
  %22 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot, align 8, !dbg !3717
  %prop19 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %22, i32 0, i32 13, !dbg !3718
  %23 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop19, align 8, !dbg !3718
  %tobool20 = icmp ne %struct.PropertyRNA* %23, null, !dbg !3717
  br i1 %tobool20, label %if.then21, label %if.end, !dbg !3719

if.then21:                                        ; preds = %land.lhs.true18
  %24 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot, align 8, !dbg !3720
  %prop22 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %24, i32 0, i32 13, !dbg !3722
  %25 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop22, align 8, !dbg !3722
  call void @RNA_property_unset(%struct.PointerRNA* %opptr, %struct.PropertyRNA* %25), !dbg !3723
  br label %if.end, !dbg !3724

if.end:                                           ; preds = %if.then21, %land.lhs.true18, %if.then16
  %26 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3725
  %27 = load i8*, i8** %opname.addr, align 8, !dbg !3726
  %28 = load i32, i32* %opcontext.addr, align 4, !dbg !3727
  %29 = load %struct.IDProperty*, %struct.IDProperty** %properties_default, align 8, !dbg !3728
  %30 = load i8, i8* %is_hotkey.addr, align 1, !dbg !3729
  %31 = load %struct.wmKeyMap**, %struct.wmKeyMap*** %keymap_r.addr, align 8, !dbg !3730
  %call23 = call %struct.wmKeyMapItem* @wm_keymap_item_find_props(%struct.bContext* %26, i8* %27, i32 %28, %struct.IDProperty* %29, i8 zeroext 0, i8 zeroext %30, %struct.wmKeyMap** %31), !dbg !3731
  store %struct.wmKeyMapItem* %call23, %struct.wmKeyMapItem** %found, align 8, !dbg !3732
  br label %if.end24, !dbg !3733

if.end24:                                         ; preds = %if.end, %land.lhs.true11, %land.lhs.true9, %lor.lhs.false
  %32 = load %struct.IDProperty*, %struct.IDProperty** %properties_default, align 8, !dbg !3734
  call void @IDP_FreeProperty(%struct.IDProperty* %32), !dbg !3735
  %33 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !3736
  %34 = load %struct.IDProperty*, %struct.IDProperty** %properties_default, align 8, !dbg !3737
  %35 = bitcast %struct.IDProperty* %34 to i8*, !dbg !3737
  call void %33(i8* %35), !dbg !3736
  br label %if.end25, !dbg !3738

if.end25:                                         ; preds = %if.end24, %if.then
  br label %if.end26, !dbg !3739

if.end26:                                         ; preds = %if.end25, %land.lhs.true, %entry
  %36 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %found, align 8, !dbg !3740
  ret %struct.wmKeyMapItem* %36, !dbg !3741
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @WM_key_event_operator_id(%struct.bContext* %C, i8* %opname, i32 %opcontext, %struct.IDProperty* %properties, i8 zeroext %is_hotkey, %struct.wmKeyMap** %keymap_r) #0 !dbg !3742 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %opname.addr = alloca i8*, align 8
  %opcontext.addr = alloca i32, align 4
  %properties.addr = alloca %struct.IDProperty*, align 8
  %is_hotkey.addr = alloca i8, align 1
  %keymap_r.addr = alloca %struct.wmKeyMap**, align 8
  %kmi = alloca %struct.wmKeyMapItem*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !3745, metadata !DIExpression()), !dbg !3746
  store i8* %opname, i8** %opname.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %opname.addr, metadata !3747, metadata !DIExpression()), !dbg !3748
  store i32 %opcontext, i32* %opcontext.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %opcontext.addr, metadata !3749, metadata !DIExpression()), !dbg !3750
  store %struct.IDProperty* %properties, %struct.IDProperty** %properties.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.IDProperty** %properties.addr, metadata !3751, metadata !DIExpression()), !dbg !3752
  store i8 %is_hotkey, i8* %is_hotkey.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %is_hotkey.addr, metadata !3753, metadata !DIExpression()), !dbg !3754
  store %struct.wmKeyMap** %keymap_r, %struct.wmKeyMap*** %keymap_r.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmKeyMap*** %keymap_r.addr, metadata !3755, metadata !DIExpression()), !dbg !3756
  call void @llvm.dbg.declare(metadata %struct.wmKeyMapItem** %kmi, metadata !3757, metadata !DIExpression()), !dbg !3758
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3759
  %1 = load i8*, i8** %opname.addr, align 8, !dbg !3760
  %2 = load i32, i32* %opcontext.addr, align 4, !dbg !3761
  %3 = load %struct.IDProperty*, %struct.IDProperty** %properties.addr, align 8, !dbg !3762
  %4 = load i8, i8* %is_hotkey.addr, align 1, !dbg !3763
  %5 = load %struct.wmKeyMap**, %struct.wmKeyMap*** %keymap_r.addr, align 8, !dbg !3764
  %call = call %struct.wmKeyMapItem* @wm_keymap_item_find(%struct.bContext* %0, i8* %1, i32 %2, %struct.IDProperty* %3, i8 zeroext %4, i8 zeroext 1, %struct.wmKeyMap** %5), !dbg !3765
  store %struct.wmKeyMapItem* %call, %struct.wmKeyMapItem** %kmi, align 8, !dbg !3758
  %6 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi, align 8, !dbg !3766
  %tobool = icmp ne %struct.wmKeyMapItem* %6, null, !dbg !3766
  br i1 %tobool, label %if.then, label %if.else, !dbg !3768

if.then:                                          ; preds = %entry
  %7 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi, align 8, !dbg !3769
  %id = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %7, i32 0, i32 15, !dbg !3770
  %8 = load i16, i16* %id, align 4, !dbg !3770
  %conv = sext i16 %8 to i32, !dbg !3769
  store i32 %conv, i32* %retval, align 4, !dbg !3771
  br label %return, !dbg !3771

if.else:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !3772
  br label %return, !dbg !3772

return:                                           ; preds = %if.else, %if.then
  %9 = load i32, i32* %retval, align 4, !dbg !3773
  ret i32 %9, !dbg !3773
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @WM_keymap_item_compare(%struct.wmKeyMapItem* %k1, %struct.wmKeyMapItem* %k2) #0 !dbg !3774 {
entry:
  %retval = alloca i32, align 4
  %k1.addr = alloca %struct.wmKeyMapItem*, align 8
  %k2.addr = alloca %struct.wmKeyMapItem*, align 8
  %k1type = alloca i32, align 4
  %k2type = alloca i32, align 4
  store %struct.wmKeyMapItem* %k1, %struct.wmKeyMapItem** %k1.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmKeyMapItem** %k1.addr, metadata !3777, metadata !DIExpression()), !dbg !3778
  store %struct.wmKeyMapItem* %k2, %struct.wmKeyMapItem** %k2.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmKeyMapItem** %k2.addr, metadata !3779, metadata !DIExpression()), !dbg !3780
  call void @llvm.dbg.declare(metadata i32* %k1type, metadata !3781, metadata !DIExpression()), !dbg !3782
  call void @llvm.dbg.declare(metadata i32* %k2type, metadata !3783, metadata !DIExpression()), !dbg !3784
  %0 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %k1.addr, align 8, !dbg !3785
  %flag = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %0, i32 0, i32 13, !dbg !3787
  %1 = load i16, i16* %flag, align 8, !dbg !3787
  %conv = sext i16 %1 to i32, !dbg !3785
  %and = and i32 %conv, 1, !dbg !3788
  %tobool = icmp ne i32 %and, 0, !dbg !3788
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !3789

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %k2.addr, align 8, !dbg !3790
  %flag1 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %2, i32 0, i32 13, !dbg !3791
  %3 = load i16, i16* %flag1, align 8, !dbg !3791
  %conv2 = sext i16 %3 to i32, !dbg !3790
  %and3 = and i32 %conv2, 1, !dbg !3792
  %tobool4 = icmp ne i32 %and3, 0, !dbg !3792
  br i1 %tobool4, label %if.then, label %if.end, !dbg !3793

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 0, i32* %retval, align 4, !dbg !3794
  br label %return, !dbg !3794

if.end:                                           ; preds = %lor.lhs.false
  %4 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %k1.addr, align 8, !dbg !3795
  %type = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %4, i32 0, i32 6, !dbg !3796
  %5 = load i16, i16* %type, align 2, !dbg !3796
  %conv5 = sext i16 %5 to i32, !dbg !3795
  %call = call i32 @WM_userdef_event_map(i32 %conv5), !dbg !3797
  store i32 %call, i32* %k1type, align 4, !dbg !3798
  %6 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %k2.addr, align 8, !dbg !3799
  %type6 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %6, i32 0, i32 6, !dbg !3800
  %7 = load i16, i16* %type6, align 2, !dbg !3800
  %conv7 = sext i16 %7 to i32, !dbg !3799
  %call8 = call i32 @WM_userdef_event_map(i32 %conv7), !dbg !3801
  store i32 %call8, i32* %k2type, align 4, !dbg !3802
  %8 = load i32, i32* %k1type, align 4, !dbg !3803
  %cmp = icmp ne i32 %8, -1, !dbg !3805
  br i1 %cmp, label %land.lhs.true, label %if.end16, !dbg !3806

land.lhs.true:                                    ; preds = %if.end
  %9 = load i32, i32* %k2type, align 4, !dbg !3807
  %cmp10 = icmp ne i32 %9, -1, !dbg !3808
  br i1 %cmp10, label %land.lhs.true12, label %if.end16, !dbg !3809

land.lhs.true12:                                  ; preds = %land.lhs.true
  %10 = load i32, i32* %k1type, align 4, !dbg !3810
  %11 = load i32, i32* %k2type, align 4, !dbg !3811
  %cmp13 = icmp ne i32 %10, %11, !dbg !3812
  br i1 %cmp13, label %if.then15, label %if.end16, !dbg !3813

if.then15:                                        ; preds = %land.lhs.true12
  store i32 0, i32* %retval, align 4, !dbg !3814
  br label %return, !dbg !3814

if.end16:                                         ; preds = %land.lhs.true12, %land.lhs.true, %if.end
  %12 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %k1.addr, align 8, !dbg !3815
  %val = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %12, i32 0, i32 7, !dbg !3817
  %13 = load i16, i16* %val, align 4, !dbg !3817
  %conv17 = sext i16 %13 to i32, !dbg !3815
  %cmp18 = icmp ne i32 %conv17, -1, !dbg !3818
  br i1 %cmp18, label %land.lhs.true20, label %if.end81, !dbg !3819

land.lhs.true20:                                  ; preds = %if.end16
  %14 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %k2.addr, align 8, !dbg !3820
  %val21 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %14, i32 0, i32 7, !dbg !3821
  %15 = load i16, i16* %val21, align 4, !dbg !3821
  %conv22 = sext i16 %15 to i32, !dbg !3820
  %cmp23 = icmp ne i32 %conv22, -1, !dbg !3822
  br i1 %cmp23, label %if.then25, label %if.end81, !dbg !3823

if.then25:                                        ; preds = %land.lhs.true20
  %16 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %k1.addr, align 8, !dbg !3824
  %val26 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %16, i32 0, i32 7, !dbg !3827
  %17 = load i16, i16* %val26, align 4, !dbg !3827
  %conv27 = sext i16 %17 to i32, !dbg !3824
  %cmp28 = icmp eq i32 %conv27, 3, !dbg !3828
  br i1 %cmp28, label %land.lhs.true30, label %if.end47, !dbg !3829

land.lhs.true30:                                  ; preds = %if.then25
  %18 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %k2.addr, align 8, !dbg !3830
  %val31 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %18, i32 0, i32 7, !dbg !3830
  %19 = load i16, i16* %val31, align 4, !dbg !3830
  %conv32 = sext i16 %19 to i32, !dbg !3830
  %cmp33 = icmp eq i32 %conv32, 1, !dbg !3830
  br i1 %cmp33, label %lor.end, label %lor.lhs.false35, !dbg !3830

lor.lhs.false35:                                  ; preds = %land.lhs.true30
  %20 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %k2.addr, align 8, !dbg !3830
  %val36 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %20, i32 0, i32 7, !dbg !3830
  %21 = load i16, i16* %val36, align 4, !dbg !3830
  %conv37 = sext i16 %21 to i32, !dbg !3830
  %cmp38 = icmp eq i32 %conv37, 2, !dbg !3830
  br i1 %cmp38, label %lor.end, label %lor.rhs, !dbg !3830

lor.rhs:                                          ; preds = %lor.lhs.false35
  %22 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %k2.addr, align 8, !dbg !3830
  %val40 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %22, i32 0, i32 7, !dbg !3830
  %23 = load i16, i16* %val40, align 4, !dbg !3830
  %conv41 = sext i16 %23 to i32, !dbg !3830
  %cmp42 = icmp eq i32 %conv41, 3, !dbg !3830
  br label %lor.end, !dbg !3830

lor.end:                                          ; preds = %lor.rhs, %lor.lhs.false35, %land.lhs.true30
  %24 = phi i1 [ true, %lor.lhs.false35 ], [ true, %land.lhs.true30 ], [ %cmp42, %lor.rhs ]
  %lor.ext = zext i1 %24 to i32, !dbg !3830
  %cmp44 = icmp eq i32 %lor.ext, 0, !dbg !3831
  br i1 %cmp44, label %if.then46, label %if.end47, !dbg !3832

if.then46:                                        ; preds = %lor.end
  store i32 0, i32* %retval, align 4, !dbg !3833
  br label %return, !dbg !3833

if.end47:                                         ; preds = %lor.end, %if.then25
  %25 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %k2.addr, align 8, !dbg !3834
  %val48 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %25, i32 0, i32 7, !dbg !3836
  %26 = load i16, i16* %val48, align 4, !dbg !3836
  %conv49 = sext i16 %26 to i32, !dbg !3834
  %cmp50 = icmp eq i32 %conv49, 3, !dbg !3837
  br i1 %cmp50, label %land.lhs.true52, label %if.end72, !dbg !3838

land.lhs.true52:                                  ; preds = %if.end47
  %27 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %k1.addr, align 8, !dbg !3839
  %val53 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %27, i32 0, i32 7, !dbg !3839
  %28 = load i16, i16* %val53, align 4, !dbg !3839
  %conv54 = sext i16 %28 to i32, !dbg !3839
  %cmp55 = icmp eq i32 %conv54, 1, !dbg !3839
  br i1 %cmp55, label %lor.end67, label %lor.lhs.false57, !dbg !3839

lor.lhs.false57:                                  ; preds = %land.lhs.true52
  %29 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %k1.addr, align 8, !dbg !3839
  %val58 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %29, i32 0, i32 7, !dbg !3839
  %30 = load i16, i16* %val58, align 4, !dbg !3839
  %conv59 = sext i16 %30 to i32, !dbg !3839
  %cmp60 = icmp eq i32 %conv59, 2, !dbg !3839
  br i1 %cmp60, label %lor.end67, label %lor.rhs62, !dbg !3839

lor.rhs62:                                        ; preds = %lor.lhs.false57
  %31 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %k1.addr, align 8, !dbg !3839
  %val63 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %31, i32 0, i32 7, !dbg !3839
  %32 = load i16, i16* %val63, align 4, !dbg !3839
  %conv64 = sext i16 %32 to i32, !dbg !3839
  %cmp65 = icmp eq i32 %conv64, 3, !dbg !3839
  br label %lor.end67, !dbg !3839

lor.end67:                                        ; preds = %lor.rhs62, %lor.lhs.false57, %land.lhs.true52
  %33 = phi i1 [ true, %lor.lhs.false57 ], [ true, %land.lhs.true52 ], [ %cmp65, %lor.rhs62 ]
  %lor.ext68 = zext i1 %33 to i32, !dbg !3839
  %cmp69 = icmp eq i32 %lor.ext68, 0, !dbg !3840
  br i1 %cmp69, label %if.then71, label %if.end72, !dbg !3841

if.then71:                                        ; preds = %lor.end67
  store i32 0, i32* %retval, align 4, !dbg !3842
  br label %return, !dbg !3842

if.end72:                                         ; preds = %lor.end67, %if.end47
  %34 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %k1.addr, align 8, !dbg !3843
  %val73 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %34, i32 0, i32 7, !dbg !3845
  %35 = load i16, i16* %val73, align 4, !dbg !3845
  %conv74 = sext i16 %35 to i32, !dbg !3843
  %36 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %k2.addr, align 8, !dbg !3846
  %val75 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %36, i32 0, i32 7, !dbg !3847
  %37 = load i16, i16* %val75, align 4, !dbg !3847
  %conv76 = sext i16 %37 to i32, !dbg !3846
  %cmp77 = icmp ne i32 %conv74, %conv76, !dbg !3848
  br i1 %cmp77, label %if.then79, label %if.end80, !dbg !3849

if.then79:                                        ; preds = %if.end72
  store i32 0, i32* %retval, align 4, !dbg !3850
  br label %return, !dbg !3850

if.end80:                                         ; preds = %if.end72
  br label %if.end81, !dbg !3851

if.end81:                                         ; preds = %if.end80, %land.lhs.true20, %if.end16
  %38 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %k1.addr, align 8, !dbg !3852
  %shift = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %38, i32 0, i32 8, !dbg !3854
  %39 = load i16, i16* %shift, align 2, !dbg !3854
  %conv82 = sext i16 %39 to i32, !dbg !3852
  %cmp83 = icmp ne i32 %conv82, -1, !dbg !3855
  br i1 %cmp83, label %land.lhs.true85, label %if.end98, !dbg !3856

land.lhs.true85:                                  ; preds = %if.end81
  %40 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %k2.addr, align 8, !dbg !3857
  %shift86 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %40, i32 0, i32 8, !dbg !3858
  %41 = load i16, i16* %shift86, align 2, !dbg !3858
  %conv87 = sext i16 %41 to i32, !dbg !3857
  %cmp88 = icmp ne i32 %conv87, -1, !dbg !3859
  br i1 %cmp88, label %land.lhs.true90, label %if.end98, !dbg !3860

land.lhs.true90:                                  ; preds = %land.lhs.true85
  %42 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %k1.addr, align 8, !dbg !3861
  %shift91 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %42, i32 0, i32 8, !dbg !3862
  %43 = load i16, i16* %shift91, align 2, !dbg !3862
  %conv92 = sext i16 %43 to i32, !dbg !3861
  %44 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %k2.addr, align 8, !dbg !3863
  %shift93 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %44, i32 0, i32 8, !dbg !3864
  %45 = load i16, i16* %shift93, align 2, !dbg !3864
  %conv94 = sext i16 %45 to i32, !dbg !3863
  %cmp95 = icmp ne i32 %conv92, %conv94, !dbg !3865
  br i1 %cmp95, label %if.then97, label %if.end98, !dbg !3866

if.then97:                                        ; preds = %land.lhs.true90
  store i32 0, i32* %retval, align 4, !dbg !3867
  br label %return, !dbg !3867

if.end98:                                         ; preds = %land.lhs.true90, %land.lhs.true85, %if.end81
  %46 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %k1.addr, align 8, !dbg !3868
  %ctrl = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %46, i32 0, i32 9, !dbg !3870
  %47 = load i16, i16* %ctrl, align 8, !dbg !3870
  %conv99 = sext i16 %47 to i32, !dbg !3868
  %cmp100 = icmp ne i32 %conv99, -1, !dbg !3871
  br i1 %cmp100, label %land.lhs.true102, label %if.end115, !dbg !3872

land.lhs.true102:                                 ; preds = %if.end98
  %48 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %k2.addr, align 8, !dbg !3873
  %ctrl103 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %48, i32 0, i32 9, !dbg !3874
  %49 = load i16, i16* %ctrl103, align 8, !dbg !3874
  %conv104 = sext i16 %49 to i32, !dbg !3873
  %cmp105 = icmp ne i32 %conv104, -1, !dbg !3875
  br i1 %cmp105, label %land.lhs.true107, label %if.end115, !dbg !3876

land.lhs.true107:                                 ; preds = %land.lhs.true102
  %50 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %k1.addr, align 8, !dbg !3877
  %ctrl108 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %50, i32 0, i32 9, !dbg !3878
  %51 = load i16, i16* %ctrl108, align 8, !dbg !3878
  %conv109 = sext i16 %51 to i32, !dbg !3877
  %52 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %k2.addr, align 8, !dbg !3879
  %ctrl110 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %52, i32 0, i32 9, !dbg !3880
  %53 = load i16, i16* %ctrl110, align 8, !dbg !3880
  %conv111 = sext i16 %53 to i32, !dbg !3879
  %cmp112 = icmp ne i32 %conv109, %conv111, !dbg !3881
  br i1 %cmp112, label %if.then114, label %if.end115, !dbg !3882

if.then114:                                       ; preds = %land.lhs.true107
  store i32 0, i32* %retval, align 4, !dbg !3883
  br label %return, !dbg !3883

if.end115:                                        ; preds = %land.lhs.true107, %land.lhs.true102, %if.end98
  %54 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %k1.addr, align 8, !dbg !3884
  %alt = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %54, i32 0, i32 10, !dbg !3886
  %55 = load i16, i16* %alt, align 2, !dbg !3886
  %conv116 = sext i16 %55 to i32, !dbg !3884
  %cmp117 = icmp ne i32 %conv116, -1, !dbg !3887
  br i1 %cmp117, label %land.lhs.true119, label %if.end132, !dbg !3888

land.lhs.true119:                                 ; preds = %if.end115
  %56 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %k2.addr, align 8, !dbg !3889
  %alt120 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %56, i32 0, i32 10, !dbg !3890
  %57 = load i16, i16* %alt120, align 2, !dbg !3890
  %conv121 = sext i16 %57 to i32, !dbg !3889
  %cmp122 = icmp ne i32 %conv121, -1, !dbg !3891
  br i1 %cmp122, label %land.lhs.true124, label %if.end132, !dbg !3892

land.lhs.true124:                                 ; preds = %land.lhs.true119
  %58 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %k1.addr, align 8, !dbg !3893
  %alt125 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %58, i32 0, i32 10, !dbg !3894
  %59 = load i16, i16* %alt125, align 2, !dbg !3894
  %conv126 = sext i16 %59 to i32, !dbg !3893
  %60 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %k2.addr, align 8, !dbg !3895
  %alt127 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %60, i32 0, i32 10, !dbg !3896
  %61 = load i16, i16* %alt127, align 2, !dbg !3896
  %conv128 = sext i16 %61 to i32, !dbg !3895
  %cmp129 = icmp ne i32 %conv126, %conv128, !dbg !3897
  br i1 %cmp129, label %if.then131, label %if.end132, !dbg !3898

if.then131:                                       ; preds = %land.lhs.true124
  store i32 0, i32* %retval, align 4, !dbg !3899
  br label %return, !dbg !3899

if.end132:                                        ; preds = %land.lhs.true124, %land.lhs.true119, %if.end115
  %62 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %k1.addr, align 8, !dbg !3900
  %oskey = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %62, i32 0, i32 11, !dbg !3902
  %63 = load i16, i16* %oskey, align 4, !dbg !3902
  %conv133 = sext i16 %63 to i32, !dbg !3900
  %cmp134 = icmp ne i32 %conv133, -1, !dbg !3903
  br i1 %cmp134, label %land.lhs.true136, label %if.end149, !dbg !3904

land.lhs.true136:                                 ; preds = %if.end132
  %64 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %k2.addr, align 8, !dbg !3905
  %oskey137 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %64, i32 0, i32 11, !dbg !3906
  %65 = load i16, i16* %oskey137, align 4, !dbg !3906
  %conv138 = sext i16 %65 to i32, !dbg !3905
  %cmp139 = icmp ne i32 %conv138, -1, !dbg !3907
  br i1 %cmp139, label %land.lhs.true141, label %if.end149, !dbg !3908

land.lhs.true141:                                 ; preds = %land.lhs.true136
  %66 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %k1.addr, align 8, !dbg !3909
  %oskey142 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %66, i32 0, i32 11, !dbg !3910
  %67 = load i16, i16* %oskey142, align 4, !dbg !3910
  %conv143 = sext i16 %67 to i32, !dbg !3909
  %68 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %k2.addr, align 8, !dbg !3911
  %oskey144 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %68, i32 0, i32 11, !dbg !3912
  %69 = load i16, i16* %oskey144, align 4, !dbg !3912
  %conv145 = sext i16 %69 to i32, !dbg !3911
  %cmp146 = icmp ne i32 %conv143, %conv145, !dbg !3913
  br i1 %cmp146, label %if.then148, label %if.end149, !dbg !3914

if.then148:                                       ; preds = %land.lhs.true141
  store i32 0, i32* %retval, align 4, !dbg !3915
  br label %return, !dbg !3915

if.end149:                                        ; preds = %land.lhs.true141, %land.lhs.true136, %if.end132
  %70 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %k1.addr, align 8, !dbg !3916
  %keymodifier = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %70, i32 0, i32 12, !dbg !3918
  %71 = load i16, i16* %keymodifier, align 2, !dbg !3918
  %conv150 = sext i16 %71 to i32, !dbg !3916
  %72 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %k2.addr, align 8, !dbg !3919
  %keymodifier151 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %72, i32 0, i32 12, !dbg !3920
  %73 = load i16, i16* %keymodifier151, align 2, !dbg !3920
  %conv152 = sext i16 %73 to i32, !dbg !3919
  %cmp153 = icmp ne i32 %conv150, %conv152, !dbg !3921
  br i1 %cmp153, label %if.then155, label %if.end156, !dbg !3922

if.then155:                                       ; preds = %if.end149
  store i32 0, i32* %retval, align 4, !dbg !3923
  br label %return, !dbg !3923

if.end156:                                        ; preds = %if.end149
  store i32 1, i32* %retval, align 4, !dbg !3924
  br label %return, !dbg !3924

return:                                           ; preds = %if.end156, %if.then155, %if.then148, %if.then131, %if.then114, %if.then97, %if.then79, %if.then71, %if.then46, %if.then15, %if.then
  %74 = load i32, i32* %retval, align 4, !dbg !3925
  ret i32 %74, !dbg !3925
}

declare dso_local i32 @WM_userdef_event_map(i32) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @WM_keyconfig_update_operatortype() #0 !dbg !3926 {
entry:
  %0 = load i8, i8* @wm_keymap_update_flag, align 1, !dbg !3929
  %conv = zext i8 %0 to i32, !dbg !3929
  %or = or i32 %conv, 2, !dbg !3929
  %conv1 = trunc i32 %or to i8, !dbg !3929
  store i8 %conv1, i8* @wm_keymap_update_flag, align 1, !dbg !3929
  ret void, !dbg !3930
}

; Function Attrs: noinline nounwind uwtable
define internal void @wm_keyconfig_properties_update_ot(%struct.ListBase* %km_lb) #0 !dbg !3931 {
entry:
  %km_lb.addr = alloca %struct.ListBase*, align 8
  %km = alloca %struct.wmKeyMap*, align 8
  %kmi = alloca %struct.wmKeyMapItem*, align 8
  %kmdi = alloca %struct.wmKeyMapDiffItem*, align 8
  store %struct.ListBase* %km_lb, %struct.ListBase** %km_lb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %km_lb.addr, metadata !3934, metadata !DIExpression()), !dbg !3935
  call void @llvm.dbg.declare(metadata %struct.wmKeyMap** %km, metadata !3936, metadata !DIExpression()), !dbg !3937
  call void @llvm.dbg.declare(metadata %struct.wmKeyMapItem** %kmi, metadata !3938, metadata !DIExpression()), !dbg !3939
  %0 = load %struct.ListBase*, %struct.ListBase** %km_lb.addr, align 8, !dbg !3940
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %0, i32 0, i32 0, !dbg !3942
  %1 = load i8*, i8** %first, align 8, !dbg !3942
  %2 = bitcast i8* %1 to %struct.wmKeyMap*, !dbg !3940
  store %struct.wmKeyMap* %2, %struct.wmKeyMap** %km, align 8, !dbg !3943
  br label %for.cond, !dbg !3944

for.cond:                                         ; preds = %for.inc18, %entry
  %3 = load %struct.wmKeyMap*, %struct.wmKeyMap** %km, align 8, !dbg !3945
  %tobool = icmp ne %struct.wmKeyMap* %3, null, !dbg !3947
  br i1 %tobool, label %for.body, label %for.end20, !dbg !3947

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.wmKeyMapDiffItem** %kmdi, metadata !3948, metadata !DIExpression()), !dbg !3950
  %4 = load %struct.wmKeyMap*, %struct.wmKeyMap** %km, align 8, !dbg !3951
  %items = getelementptr inbounds %struct.wmKeyMap, %struct.wmKeyMap* %4, i32 0, i32 2, !dbg !3953
  %first1 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %items, i32 0, i32 0, !dbg !3954
  %5 = load i8*, i8** %first1, align 8, !dbg !3954
  %6 = bitcast i8* %5 to %struct.wmKeyMapItem*, !dbg !3951
  store %struct.wmKeyMapItem* %6, %struct.wmKeyMapItem** %kmi, align 8, !dbg !3955
  br label %for.cond2, !dbg !3956

for.cond2:                                        ; preds = %for.inc, %for.body
  %7 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi, align 8, !dbg !3957
  %tobool3 = icmp ne %struct.wmKeyMapItem* %7, null, !dbg !3959
  br i1 %tobool3, label %for.body4, label %for.end, !dbg !3959

for.body4:                                        ; preds = %for.cond2
  %8 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi, align 8, !dbg !3960
  call void @wm_keymap_item_properties_update_ot(%struct.wmKeyMapItem* %8), !dbg !3962
  br label %for.inc, !dbg !3963

for.inc:                                          ; preds = %for.body4
  %9 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi, align 8, !dbg !3964
  %next = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %9, i32 0, i32 0, !dbg !3965
  %10 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %next, align 8, !dbg !3965
  store %struct.wmKeyMapItem* %10, %struct.wmKeyMapItem** %kmi, align 8, !dbg !3966
  br label %for.cond2, !dbg !3967, !llvm.loop !3968

for.end:                                          ; preds = %for.cond2
  %11 = load %struct.wmKeyMap*, %struct.wmKeyMap** %km, align 8, !dbg !3970
  %diff_items = getelementptr inbounds %struct.wmKeyMap, %struct.wmKeyMap* %11, i32 0, i32 3, !dbg !3972
  %first5 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %diff_items, i32 0, i32 0, !dbg !3973
  %12 = load i8*, i8** %first5, align 8, !dbg !3973
  %13 = bitcast i8* %12 to %struct.wmKeyMapDiffItem*, !dbg !3970
  store %struct.wmKeyMapDiffItem* %13, %struct.wmKeyMapDiffItem** %kmdi, align 8, !dbg !3974
  br label %for.cond6, !dbg !3975

for.cond6:                                        ; preds = %for.inc15, %for.end
  %14 = load %struct.wmKeyMapDiffItem*, %struct.wmKeyMapDiffItem** %kmdi, align 8, !dbg !3976
  %tobool7 = icmp ne %struct.wmKeyMapDiffItem* %14, null, !dbg !3978
  br i1 %tobool7, label %for.body8, label %for.end17, !dbg !3978

for.body8:                                        ; preds = %for.cond6
  %15 = load %struct.wmKeyMapDiffItem*, %struct.wmKeyMapDiffItem** %kmdi, align 8, !dbg !3979
  %add_item = getelementptr inbounds %struct.wmKeyMapDiffItem, %struct.wmKeyMapDiffItem* %15, i32 0, i32 3, !dbg !3982
  %16 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %add_item, align 8, !dbg !3982
  %tobool9 = icmp ne %struct.wmKeyMapItem* %16, null, !dbg !3979
  br i1 %tobool9, label %if.then, label %if.end, !dbg !3983

if.then:                                          ; preds = %for.body8
  %17 = load %struct.wmKeyMapDiffItem*, %struct.wmKeyMapDiffItem** %kmdi, align 8, !dbg !3984
  %add_item10 = getelementptr inbounds %struct.wmKeyMapDiffItem, %struct.wmKeyMapDiffItem* %17, i32 0, i32 3, !dbg !3985
  %18 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %add_item10, align 8, !dbg !3985
  call void @wm_keymap_item_properties_update_ot(%struct.wmKeyMapItem* %18), !dbg !3986
  br label %if.end, !dbg !3986

if.end:                                           ; preds = %if.then, %for.body8
  %19 = load %struct.wmKeyMapDiffItem*, %struct.wmKeyMapDiffItem** %kmdi, align 8, !dbg !3987
  %remove_item = getelementptr inbounds %struct.wmKeyMapDiffItem, %struct.wmKeyMapDiffItem* %19, i32 0, i32 2, !dbg !3989
  %20 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %remove_item, align 8, !dbg !3989
  %tobool11 = icmp ne %struct.wmKeyMapItem* %20, null, !dbg !3987
  br i1 %tobool11, label %if.then12, label %if.end14, !dbg !3990

if.then12:                                        ; preds = %if.end
  %21 = load %struct.wmKeyMapDiffItem*, %struct.wmKeyMapDiffItem** %kmdi, align 8, !dbg !3991
  %remove_item13 = getelementptr inbounds %struct.wmKeyMapDiffItem, %struct.wmKeyMapDiffItem* %21, i32 0, i32 2, !dbg !3992
  %22 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %remove_item13, align 8, !dbg !3992
  call void @wm_keymap_item_properties_update_ot(%struct.wmKeyMapItem* %22), !dbg !3993
  br label %if.end14, !dbg !3993

if.end14:                                         ; preds = %if.then12, %if.end
  br label %for.inc15, !dbg !3994

for.inc15:                                        ; preds = %if.end14
  %23 = load %struct.wmKeyMapDiffItem*, %struct.wmKeyMapDiffItem** %kmdi, align 8, !dbg !3995
  %next16 = getelementptr inbounds %struct.wmKeyMapDiffItem, %struct.wmKeyMapDiffItem* %23, i32 0, i32 0, !dbg !3996
  %24 = load %struct.wmKeyMapDiffItem*, %struct.wmKeyMapDiffItem** %next16, align 8, !dbg !3996
  store %struct.wmKeyMapDiffItem* %24, %struct.wmKeyMapDiffItem** %kmdi, align 8, !dbg !3997
  br label %for.cond6, !dbg !3998, !llvm.loop !3999

for.end17:                                        ; preds = %for.cond6
  br label %for.inc18, !dbg !4001

for.inc18:                                        ; preds = %for.end17
  %25 = load %struct.wmKeyMap*, %struct.wmKeyMap** %km, align 8, !dbg !4002
  %next19 = getelementptr inbounds %struct.wmKeyMap, %struct.wmKeyMap* %25, i32 0, i32 0, !dbg !4003
  %26 = load %struct.wmKeyMap*, %struct.wmKeyMap** %next19, align 8, !dbg !4003
  store %struct.wmKeyMap* %26, %struct.wmKeyMap** %km, align 8, !dbg !4004
  br label %for.cond, !dbg !4005, !llvm.loop !4006

for.end20:                                        ; preds = %for.cond
  ret void, !dbg !4008
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @wm_keymap_test_and_clear_update(%struct.wmKeyMap* %km) #0 !dbg !4009 {
entry:
  %km.addr = alloca %struct.wmKeyMap*, align 8
  %kmi = alloca %struct.wmKeyMapItem*, align 8
  %update = alloca i32, align 4
  store %struct.wmKeyMap* %km, %struct.wmKeyMap** %km.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmKeyMap** %km.addr, metadata !4012, metadata !DIExpression()), !dbg !4013
  call void @llvm.dbg.declare(metadata %struct.wmKeyMapItem** %kmi, metadata !4014, metadata !DIExpression()), !dbg !4015
  call void @llvm.dbg.declare(metadata i32* %update, metadata !4016, metadata !DIExpression()), !dbg !4017
  %0 = load %struct.wmKeyMap*, %struct.wmKeyMap** %km.addr, align 8, !dbg !4018
  %flag = getelementptr inbounds %struct.wmKeyMap, %struct.wmKeyMap* %0, i32 0, i32 7, !dbg !4019
  %1 = load i16, i16* %flag, align 4, !dbg !4019
  %conv = sext i16 %1 to i32, !dbg !4018
  %and = and i32 %conv, 64, !dbg !4020
  store i32 %and, i32* %update, align 4, !dbg !4021
  %2 = load %struct.wmKeyMap*, %struct.wmKeyMap** %km.addr, align 8, !dbg !4022
  %flag1 = getelementptr inbounds %struct.wmKeyMap, %struct.wmKeyMap* %2, i32 0, i32 7, !dbg !4023
  %3 = load i16, i16* %flag1, align 4, !dbg !4024
  %conv2 = sext i16 %3 to i32, !dbg !4024
  %and3 = and i32 %conv2, -65, !dbg !4024
  %conv4 = trunc i32 %and3 to i16, !dbg !4024
  store i16 %conv4, i16* %flag1, align 4, !dbg !4024
  %4 = load %struct.wmKeyMap*, %struct.wmKeyMap** %km.addr, align 8, !dbg !4025
  %items = getelementptr inbounds %struct.wmKeyMap, %struct.wmKeyMap* %4, i32 0, i32 2, !dbg !4027
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %items, i32 0, i32 0, !dbg !4028
  %5 = load i8*, i8** %first, align 8, !dbg !4028
  %6 = bitcast i8* %5 to %struct.wmKeyMapItem*, !dbg !4025
  store %struct.wmKeyMapItem* %6, %struct.wmKeyMapItem** %kmi, align 8, !dbg !4029
  br label %for.cond, !dbg !4030

for.cond:                                         ; preds = %for.inc, %entry
  %7 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi, align 8, !dbg !4031
  %tobool = icmp ne %struct.wmKeyMapItem* %7, null, !dbg !4033
  br i1 %tobool, label %for.body, label %for.end, !dbg !4033

for.body:                                         ; preds = %for.cond
  %8 = load i32, i32* %update, align 4, !dbg !4034
  %tobool5 = icmp ne i32 %8, 0, !dbg !4034
  br i1 %tobool5, label %lor.end, label %lor.rhs, !dbg !4036

lor.rhs:                                          ; preds = %for.body
  %9 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi, align 8, !dbg !4037
  %flag6 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %9, i32 0, i32 13, !dbg !4038
  %10 = load i16, i16* %flag6, align 8, !dbg !4038
  %conv7 = sext i16 %10 to i32, !dbg !4037
  %and8 = and i32 %conv7, 8, !dbg !4039
  %tobool9 = icmp ne i32 %and8, 0, !dbg !4036
  br label %lor.end, !dbg !4036

lor.end:                                          ; preds = %lor.rhs, %for.body
  %11 = phi i1 [ true, %for.body ], [ %tobool9, %lor.rhs ]
  %lor.ext = zext i1 %11 to i32, !dbg !4036
  store i32 %lor.ext, i32* %update, align 4, !dbg !4040
  %12 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi, align 8, !dbg !4041
  %flag10 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %12, i32 0, i32 13, !dbg !4042
  %13 = load i16, i16* %flag10, align 8, !dbg !4043
  %conv11 = sext i16 %13 to i32, !dbg !4043
  %and12 = and i32 %conv11, -9, !dbg !4043
  %conv13 = trunc i32 %and12 to i16, !dbg !4043
  store i16 %conv13, i16* %flag10, align 8, !dbg !4043
  br label %for.inc, !dbg !4044

for.inc:                                          ; preds = %lor.end
  %14 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi, align 8, !dbg !4045
  %next = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %14, i32 0, i32 0, !dbg !4046
  %15 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %next, align 8, !dbg !4046
  store %struct.wmKeyMapItem* %15, %struct.wmKeyMapItem** %kmi, align 8, !dbg !4047
  br label %for.cond, !dbg !4048, !llvm.loop !4049

for.end:                                          ; preds = %for.cond
  %16 = load i32, i32* %update, align 4, !dbg !4051
  %cmp = icmp ne i32 %16, 0, !dbg !4052
  %conv14 = zext i1 %cmp to i32, !dbg !4052
  %conv15 = trunc i32 %conv14 to i8, !dbg !4053
  ret i8 %conv15, !dbg !4054
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.wmKeyMap* @wm_keymap_preset(%struct.wmWindowManager* %wm, %struct.wmKeyMap* %km) #0 !dbg !4055 {
entry:
  %wm.addr = alloca %struct.wmWindowManager*, align 8
  %km.addr = alloca %struct.wmKeyMap*, align 8
  %keyconf = alloca %struct.wmKeyConfig*, align 8
  %keymap = alloca %struct.wmKeyMap*, align 8
  store %struct.wmWindowManager* %wm, %struct.wmWindowManager** %wm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmWindowManager** %wm.addr, metadata !4058, metadata !DIExpression()), !dbg !4059
  store %struct.wmKeyMap* %km, %struct.wmKeyMap** %km.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmKeyMap** %km.addr, metadata !4060, metadata !DIExpression()), !dbg !4061
  call void @llvm.dbg.declare(metadata %struct.wmKeyConfig** %keyconf, metadata !4062, metadata !DIExpression()), !dbg !4063
  %0 = load %struct.wmWindowManager*, %struct.wmWindowManager** %wm.addr, align 8, !dbg !4064
  %call = call %struct.wmKeyConfig* @WM_keyconfig_active(%struct.wmWindowManager* %0), !dbg !4065
  store %struct.wmKeyConfig* %call, %struct.wmKeyConfig** %keyconf, align 8, !dbg !4063
  call void @llvm.dbg.declare(metadata %struct.wmKeyMap** %keymap, metadata !4066, metadata !DIExpression()), !dbg !4067
  %1 = load %struct.wmKeyConfig*, %struct.wmKeyConfig** %keyconf, align 8, !dbg !4068
  %keymaps = getelementptr inbounds %struct.wmKeyConfig, %struct.wmKeyConfig* %1, i32 0, i32 4, !dbg !4069
  %2 = load %struct.wmKeyMap*, %struct.wmKeyMap** %km.addr, align 8, !dbg !4070
  %idname = getelementptr inbounds %struct.wmKeyMap, %struct.wmKeyMap* %2, i32 0, i32 4, !dbg !4071
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %idname, i64 0, i64 0, !dbg !4070
  %3 = load %struct.wmKeyMap*, %struct.wmKeyMap** %km.addr, align 8, !dbg !4072
  %spaceid = getelementptr inbounds %struct.wmKeyMap, %struct.wmKeyMap* %3, i32 0, i32 5, !dbg !4073
  %4 = load i16, i16* %spaceid, align 8, !dbg !4073
  %conv = sext i16 %4 to i32, !dbg !4072
  %5 = load %struct.wmKeyMap*, %struct.wmKeyMap** %km.addr, align 8, !dbg !4074
  %regionid = getelementptr inbounds %struct.wmKeyMap, %struct.wmKeyMap* %5, i32 0, i32 6, !dbg !4075
  %6 = load i16, i16* %regionid, align 2, !dbg !4075
  %conv1 = sext i16 %6 to i32, !dbg !4074
  %call2 = call %struct.wmKeyMap* @WM_keymap_list_find(%struct.ListBase* %keymaps, i8* %arraydecay, i32 %conv, i32 %conv1), !dbg !4076
  store %struct.wmKeyMap* %call2, %struct.wmKeyMap** %keymap, align 8, !dbg !4077
  %7 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !4078
  %tobool = icmp ne %struct.wmKeyMap* %7, null, !dbg !4078
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !4080

land.lhs.true:                                    ; preds = %entry
  %8 = load %struct.wmWindowManager*, %struct.wmWindowManager** %wm.addr, align 8, !dbg !4081
  %defaultconf = getelementptr inbounds %struct.wmWindowManager, %struct.wmWindowManager* %8, i32 0, i32 14, !dbg !4082
  %9 = load %struct.wmKeyConfig*, %struct.wmKeyConfig** %defaultconf, align 8, !dbg !4082
  %tobool3 = icmp ne %struct.wmKeyConfig* %9, null, !dbg !4081
  br i1 %tobool3, label %if.then, label %if.end, !dbg !4083

if.then:                                          ; preds = %land.lhs.true
  %10 = load %struct.wmWindowManager*, %struct.wmWindowManager** %wm.addr, align 8, !dbg !4084
  %defaultconf4 = getelementptr inbounds %struct.wmWindowManager, %struct.wmWindowManager* %10, i32 0, i32 14, !dbg !4085
  %11 = load %struct.wmKeyConfig*, %struct.wmKeyConfig** %defaultconf4, align 8, !dbg !4085
  %keymaps5 = getelementptr inbounds %struct.wmKeyConfig, %struct.wmKeyConfig* %11, i32 0, i32 4, !dbg !4086
  %12 = load %struct.wmKeyMap*, %struct.wmKeyMap** %km.addr, align 8, !dbg !4087
  %idname6 = getelementptr inbounds %struct.wmKeyMap, %struct.wmKeyMap* %12, i32 0, i32 4, !dbg !4088
  %arraydecay7 = getelementptr inbounds [64 x i8], [64 x i8]* %idname6, i64 0, i64 0, !dbg !4087
  %13 = load %struct.wmKeyMap*, %struct.wmKeyMap** %km.addr, align 8, !dbg !4089
  %spaceid8 = getelementptr inbounds %struct.wmKeyMap, %struct.wmKeyMap* %13, i32 0, i32 5, !dbg !4090
  %14 = load i16, i16* %spaceid8, align 8, !dbg !4090
  %conv9 = sext i16 %14 to i32, !dbg !4089
  %15 = load %struct.wmKeyMap*, %struct.wmKeyMap** %km.addr, align 8, !dbg !4091
  %regionid10 = getelementptr inbounds %struct.wmKeyMap, %struct.wmKeyMap* %15, i32 0, i32 6, !dbg !4092
  %16 = load i16, i16* %regionid10, align 2, !dbg !4092
  %conv11 = sext i16 %16 to i32, !dbg !4091
  %call12 = call %struct.wmKeyMap* @WM_keymap_list_find(%struct.ListBase* %keymaps5, i8* %arraydecay7, i32 %conv9, i32 %conv11), !dbg !4093
  store %struct.wmKeyMap* %call12, %struct.wmKeyMap** %keymap, align 8, !dbg !4094
  br label %if.end, !dbg !4095

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %17 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !4096
  ret %struct.wmKeyMap* %17, !dbg !4097
}

; Function Attrs: noinline nounwind uwtable
define internal void @wm_keymap_diff_update(%struct.ListBase* %lb, %struct.wmKeyMap* %defaultmap, %struct.wmKeyMap* %addonmap, %struct.wmKeyMap* %km) #0 !dbg !4098 {
entry:
  %lb.addr = alloca %struct.ListBase*, align 8
  %defaultmap.addr = alloca %struct.wmKeyMap*, align 8
  %addonmap.addr = alloca %struct.wmKeyMap*, align 8
  %km.addr = alloca %struct.wmKeyMap*, align 8
  %diffmap = alloca %struct.wmKeyMap*, align 8
  %prevmap = alloca %struct.wmKeyMap*, align 8
  %origmap = alloca %struct.wmKeyMap*, align 8
  store %struct.ListBase* %lb, %struct.ListBase** %lb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %lb.addr, metadata !4101, metadata !DIExpression()), !dbg !4102
  store %struct.wmKeyMap* %defaultmap, %struct.wmKeyMap** %defaultmap.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmKeyMap** %defaultmap.addr, metadata !4103, metadata !DIExpression()), !dbg !4104
  store %struct.wmKeyMap* %addonmap, %struct.wmKeyMap** %addonmap.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmKeyMap** %addonmap.addr, metadata !4105, metadata !DIExpression()), !dbg !4106
  store %struct.wmKeyMap* %km, %struct.wmKeyMap** %km.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmKeyMap** %km.addr, metadata !4107, metadata !DIExpression()), !dbg !4108
  call void @llvm.dbg.declare(metadata %struct.wmKeyMap** %diffmap, metadata !4109, metadata !DIExpression()), !dbg !4110
  call void @llvm.dbg.declare(metadata %struct.wmKeyMap** %prevmap, metadata !4111, metadata !DIExpression()), !dbg !4112
  call void @llvm.dbg.declare(metadata %struct.wmKeyMap** %origmap, metadata !4113, metadata !DIExpression()), !dbg !4114
  %0 = load %struct.wmKeyMap*, %struct.wmKeyMap** %defaultmap.addr, align 8, !dbg !4115
  store %struct.wmKeyMap* %0, %struct.wmKeyMap** %origmap, align 8, !dbg !4116
  %1 = load %struct.wmKeyMap*, %struct.wmKeyMap** %addonmap.addr, align 8, !dbg !4117
  %tobool = icmp ne %struct.wmKeyMap* %1, null, !dbg !4117
  br i1 %tobool, label %if.then, label %if.end, !dbg !4119

if.then:                                          ; preds = %entry
  %2 = load %struct.wmKeyMap*, %struct.wmKeyMap** %defaultmap.addr, align 8, !dbg !4120
  %call = call %struct.wmKeyMap* @wm_keymap_copy(%struct.wmKeyMap* %2), !dbg !4122
  store %struct.wmKeyMap* %call, %struct.wmKeyMap** %defaultmap.addr, align 8, !dbg !4123
  %3 = load %struct.wmKeyMap*, %struct.wmKeyMap** %defaultmap.addr, align 8, !dbg !4124
  %4 = load %struct.wmKeyMap*, %struct.wmKeyMap** %addonmap.addr, align 8, !dbg !4125
  call void @wm_keymap_addon_add(%struct.wmKeyMap* %3, %struct.wmKeyMap* %4), !dbg !4126
  br label %if.end, !dbg !4127

if.end:                                           ; preds = %if.then, %entry
  %5 = load %struct.ListBase*, %struct.ListBase** %lb.addr, align 8, !dbg !4128
  %6 = load %struct.wmKeyMap*, %struct.wmKeyMap** %km.addr, align 8, !dbg !4129
  %idname = getelementptr inbounds %struct.wmKeyMap, %struct.wmKeyMap* %6, i32 0, i32 4, !dbg !4130
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %idname, i64 0, i64 0, !dbg !4129
  %7 = load %struct.wmKeyMap*, %struct.wmKeyMap** %km.addr, align 8, !dbg !4131
  %spaceid = getelementptr inbounds %struct.wmKeyMap, %struct.wmKeyMap* %7, i32 0, i32 5, !dbg !4132
  %8 = load i16, i16* %spaceid, align 8, !dbg !4132
  %conv = sext i16 %8 to i32, !dbg !4131
  %9 = load %struct.wmKeyMap*, %struct.wmKeyMap** %km.addr, align 8, !dbg !4133
  %regionid = getelementptr inbounds %struct.wmKeyMap, %struct.wmKeyMap* %9, i32 0, i32 6, !dbg !4134
  %10 = load i16, i16* %regionid, align 2, !dbg !4134
  %conv1 = sext i16 %10 to i32, !dbg !4133
  %call2 = call %struct.wmKeyMap* @WM_keymap_list_find(%struct.ListBase* %5, i8* %arraydecay, i32 %conv, i32 %conv1), !dbg !4135
  store %struct.wmKeyMap* %call2, %struct.wmKeyMap** %prevmap, align 8, !dbg !4136
  %11 = load %struct.wmKeyMap*, %struct.wmKeyMap** %prevmap, align 8, !dbg !4137
  %tobool3 = icmp ne %struct.wmKeyMap* %11, null, !dbg !4137
  br i1 %tobool3, label %if.then4, label %if.end5, !dbg !4139

if.then4:                                         ; preds = %if.end
  %12 = load %struct.wmKeyMap*, %struct.wmKeyMap** %prevmap, align 8, !dbg !4140
  call void @WM_keymap_free(%struct.wmKeyMap* %12), !dbg !4142
  %13 = load %struct.ListBase*, %struct.ListBase** %lb.addr, align 8, !dbg !4143
  %14 = load %struct.wmKeyMap*, %struct.wmKeyMap** %prevmap, align 8, !dbg !4144
  %15 = bitcast %struct.wmKeyMap* %14 to i8*, !dbg !4144
  call void @BLI_freelinkN(%struct.ListBase* %13, i8* %15), !dbg !4145
  br label %if.end5, !dbg !4146

if.end5:                                          ; preds = %if.then4, %if.end
  %16 = load %struct.wmKeyMap*, %struct.wmKeyMap** %km.addr, align 8, !dbg !4147
  %idname6 = getelementptr inbounds %struct.wmKeyMap, %struct.wmKeyMap* %16, i32 0, i32 4, !dbg !4148
  %arraydecay7 = getelementptr inbounds [64 x i8], [64 x i8]* %idname6, i64 0, i64 0, !dbg !4147
  %17 = load %struct.wmKeyMap*, %struct.wmKeyMap** %km.addr, align 8, !dbg !4149
  %spaceid8 = getelementptr inbounds %struct.wmKeyMap, %struct.wmKeyMap* %17, i32 0, i32 5, !dbg !4150
  %18 = load i16, i16* %spaceid8, align 8, !dbg !4150
  %conv9 = sext i16 %18 to i32, !dbg !4149
  %19 = load %struct.wmKeyMap*, %struct.wmKeyMap** %km.addr, align 8, !dbg !4151
  %regionid10 = getelementptr inbounds %struct.wmKeyMap, %struct.wmKeyMap* %19, i32 0, i32 6, !dbg !4152
  %20 = load i16, i16* %regionid10, align 2, !dbg !4152
  %conv11 = sext i16 %20 to i32, !dbg !4151
  %call12 = call %struct.wmKeyMap* @wm_keymap_new(i8* %arraydecay7, i32 %conv9, i32 %conv11), !dbg !4153
  store %struct.wmKeyMap* %call12, %struct.wmKeyMap** %diffmap, align 8, !dbg !4154
  %21 = load %struct.wmKeyMap*, %struct.wmKeyMap** %diffmap, align 8, !dbg !4155
  %flag = getelementptr inbounds %struct.wmKeyMap, %struct.wmKeyMap* %21, i32 0, i32 7, !dbg !4156
  %22 = load i16, i16* %flag, align 4, !dbg !4157
  %conv13 = sext i16 %22 to i32, !dbg !4157
  %or = or i32 %conv13, 16, !dbg !4157
  %conv14 = trunc i32 %or to i16, !dbg !4157
  store i16 %conv14, i16* %flag, align 4, !dbg !4157
  %23 = load %struct.wmKeyMap*, %struct.wmKeyMap** %defaultmap.addr, align 8, !dbg !4158
  %flag15 = getelementptr inbounds %struct.wmKeyMap, %struct.wmKeyMap* %23, i32 0, i32 7, !dbg !4160
  %24 = load i16, i16* %flag15, align 4, !dbg !4160
  %conv16 = sext i16 %24 to i32, !dbg !4158
  %and = and i32 %conv16, 1, !dbg !4161
  %tobool17 = icmp ne i32 %and, 0, !dbg !4161
  br i1 %tobool17, label %if.then18, label %if.end23, !dbg !4162

if.then18:                                        ; preds = %if.end5
  %25 = load %struct.wmKeyMap*, %struct.wmKeyMap** %diffmap, align 8, !dbg !4163
  %flag19 = getelementptr inbounds %struct.wmKeyMap, %struct.wmKeyMap* %25, i32 0, i32 7, !dbg !4164
  %26 = load i16, i16* %flag19, align 4, !dbg !4165
  %conv20 = sext i16 %26 to i32, !dbg !4165
  %or21 = or i32 %conv20, 1, !dbg !4165
  %conv22 = trunc i32 %or21 to i16, !dbg !4165
  store i16 %conv22, i16* %flag19, align 4, !dbg !4165
  br label %if.end23, !dbg !4163

if.end23:                                         ; preds = %if.then18, %if.end5
  %27 = load %struct.wmKeyMap*, %struct.wmKeyMap** %diffmap, align 8, !dbg !4166
  %28 = load %struct.wmKeyMap*, %struct.wmKeyMap** %defaultmap.addr, align 8, !dbg !4167
  %29 = load %struct.wmKeyMap*, %struct.wmKeyMap** %km.addr, align 8, !dbg !4168
  %30 = load %struct.wmKeyMap*, %struct.wmKeyMap** %origmap, align 8, !dbg !4169
  %31 = load %struct.wmKeyMap*, %struct.wmKeyMap** %addonmap.addr, align 8, !dbg !4170
  call void @wm_keymap_diff(%struct.wmKeyMap* %27, %struct.wmKeyMap* %28, %struct.wmKeyMap* %29, %struct.wmKeyMap* %30, %struct.wmKeyMap* %31), !dbg !4171
  %32 = load %struct.wmKeyMap*, %struct.wmKeyMap** %diffmap, align 8, !dbg !4172
  %diff_items = getelementptr inbounds %struct.wmKeyMap, %struct.wmKeyMap* %32, i32 0, i32 3, !dbg !4174
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %diff_items, i32 0, i32 0, !dbg !4175
  %33 = load i8*, i8** %first, align 8, !dbg !4175
  %tobool24 = icmp ne i8* %33, null, !dbg !4172
  br i1 %tobool24, label %if.then25, label %if.else, !dbg !4176

if.then25:                                        ; preds = %if.end23
  %34 = load %struct.ListBase*, %struct.ListBase** %lb.addr, align 8, !dbg !4177
  %35 = load %struct.wmKeyMap*, %struct.wmKeyMap** %diffmap, align 8, !dbg !4179
  %36 = bitcast %struct.wmKeyMap* %35 to i8*, !dbg !4179
  call void @BLI_addtail(%struct.ListBase* %34, i8* %36), !dbg !4180
  br label %if.end26, !dbg !4181

if.else:                                          ; preds = %if.end23
  %37 = load %struct.wmKeyMap*, %struct.wmKeyMap** %diffmap, align 8, !dbg !4182
  call void @WM_keymap_free(%struct.wmKeyMap* %37), !dbg !4184
  %38 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !4185
  %39 = load %struct.wmKeyMap*, %struct.wmKeyMap** %diffmap, align 8, !dbg !4186
  %40 = bitcast %struct.wmKeyMap* %39 to i8*, !dbg !4186
  call void %38(i8* %40), !dbg !4185
  br label %if.end26

if.end26:                                         ; preds = %if.else, %if.then25
  %41 = load %struct.wmKeyMap*, %struct.wmKeyMap** %addonmap.addr, align 8, !dbg !4187
  %tobool27 = icmp ne %struct.wmKeyMap* %41, null, !dbg !4187
  br i1 %tobool27, label %if.then28, label %if.end29, !dbg !4189

if.then28:                                        ; preds = %if.end26
  %42 = load %struct.wmKeyMap*, %struct.wmKeyMap** %defaultmap.addr, align 8, !dbg !4190
  call void @WM_keymap_free(%struct.wmKeyMap* %42), !dbg !4192
  %43 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !4193
  %44 = load %struct.wmKeyMap*, %struct.wmKeyMap** %defaultmap.addr, align 8, !dbg !4194
  %45 = bitcast %struct.wmKeyMap* %44 to i8*, !dbg !4194
  call void %43(i8* %45), !dbg !4193
  br label %if.end29, !dbg !4195

if.end29:                                         ; preds = %if.then28, %if.end26
  ret void, !dbg !4196
}

; Function Attrs: noinline nounwind uwtable
define internal void @wm_user_modal_keymap_set_items(%struct.wmWindowManager* %wm, %struct.wmKeyMap* %km) #0 !dbg !4197 {
entry:
  %wm.addr = alloca %struct.wmWindowManager*, align 8
  %km.addr = alloca %struct.wmKeyMap*, align 8
  %defaultkm = alloca %struct.wmKeyMap*, align 8
  %kmi = alloca %struct.wmKeyMapItem*, align 8
  %propvalue = alloca i32, align 4
  store %struct.wmWindowManager* %wm, %struct.wmWindowManager** %wm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmWindowManager** %wm.addr, metadata !4200, metadata !DIExpression()), !dbg !4201
  store %struct.wmKeyMap* %km, %struct.wmKeyMap** %km.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmKeyMap** %km.addr, metadata !4202, metadata !DIExpression()), !dbg !4203
  call void @llvm.dbg.declare(metadata %struct.wmKeyMap** %defaultkm, metadata !4204, metadata !DIExpression()), !dbg !4205
  call void @llvm.dbg.declare(metadata %struct.wmKeyMapItem** %kmi, metadata !4206, metadata !DIExpression()), !dbg !4207
  call void @llvm.dbg.declare(metadata i32* %propvalue, metadata !4208, metadata !DIExpression()), !dbg !4209
  %0 = load %struct.wmKeyMap*, %struct.wmKeyMap** %km.addr, align 8, !dbg !4210
  %tobool = icmp ne %struct.wmKeyMap* %0, null, !dbg !4210
  br i1 %tobool, label %land.lhs.true, label %if.end28, !dbg !4212

land.lhs.true:                                    ; preds = %entry
  %1 = load %struct.wmKeyMap*, %struct.wmKeyMap** %km.addr, align 8, !dbg !4213
  %flag = getelementptr inbounds %struct.wmKeyMap, %struct.wmKeyMap* %1, i32 0, i32 7, !dbg !4214
  %2 = load i16, i16* %flag, align 4, !dbg !4214
  %conv = sext i16 %2 to i32, !dbg !4213
  %and = and i32 %conv, 1, !dbg !4215
  %tobool1 = icmp ne i32 %and, 0, !dbg !4215
  br i1 %tobool1, label %land.lhs.true2, label %if.end28, !dbg !4216

land.lhs.true2:                                   ; preds = %land.lhs.true
  %3 = load %struct.wmKeyMap*, %struct.wmKeyMap** %km.addr, align 8, !dbg !4217
  %modal_items = getelementptr inbounds %struct.wmKeyMap, %struct.wmKeyMap* %3, i32 0, i32 10, !dbg !4218
  %4 = load i8*, i8** %modal_items, align 8, !dbg !4218
  %tobool3 = icmp ne i8* %4, null, !dbg !4217
  br i1 %tobool3, label %if.end28, label %if.then, !dbg !4219

if.then:                                          ; preds = %land.lhs.true2
  %5 = load %struct.wmWindowManager*, %struct.wmWindowManager** %wm.addr, align 8, !dbg !4220
  %defaultconf = getelementptr inbounds %struct.wmWindowManager, %struct.wmWindowManager* %5, i32 0, i32 14, !dbg !4223
  %6 = load %struct.wmKeyConfig*, %struct.wmKeyConfig** %defaultconf, align 8, !dbg !4223
  %cmp = icmp eq %struct.wmKeyConfig* %6, null, !dbg !4224
  br i1 %cmp, label %if.then5, label %if.end, !dbg !4225

if.then5:                                         ; preds = %if.then
  br label %if.end28, !dbg !4226

if.end:                                           ; preds = %if.then
  %7 = load %struct.wmWindowManager*, %struct.wmWindowManager** %wm.addr, align 8, !dbg !4228
  %defaultconf6 = getelementptr inbounds %struct.wmWindowManager, %struct.wmWindowManager* %7, i32 0, i32 14, !dbg !4229
  %8 = load %struct.wmKeyConfig*, %struct.wmKeyConfig** %defaultconf6, align 8, !dbg !4229
  %keymaps = getelementptr inbounds %struct.wmKeyConfig, %struct.wmKeyConfig* %8, i32 0, i32 4, !dbg !4230
  %9 = load %struct.wmKeyMap*, %struct.wmKeyMap** %km.addr, align 8, !dbg !4231
  %idname = getelementptr inbounds %struct.wmKeyMap, %struct.wmKeyMap* %9, i32 0, i32 4, !dbg !4232
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %idname, i64 0, i64 0, !dbg !4231
  %call = call %struct.wmKeyMap* @WM_keymap_list_find(%struct.ListBase* %keymaps, i8* %arraydecay, i32 0, i32 0), !dbg !4233
  store %struct.wmKeyMap* %call, %struct.wmKeyMap** %defaultkm, align 8, !dbg !4234
  %10 = load %struct.wmKeyMap*, %struct.wmKeyMap** %defaultkm, align 8, !dbg !4235
  %tobool7 = icmp ne %struct.wmKeyMap* %10, null, !dbg !4235
  br i1 %tobool7, label %if.end9, label %if.then8, !dbg !4237

if.then8:                                         ; preds = %if.end
  br label %if.end28, !dbg !4238

if.end9:                                          ; preds = %if.end
  %11 = load %struct.wmKeyMap*, %struct.wmKeyMap** %defaultkm, align 8, !dbg !4239
  %modal_items10 = getelementptr inbounds %struct.wmKeyMap, %struct.wmKeyMap* %11, i32 0, i32 10, !dbg !4240
  %12 = load i8*, i8** %modal_items10, align 8, !dbg !4240
  %13 = load %struct.wmKeyMap*, %struct.wmKeyMap** %km.addr, align 8, !dbg !4241
  %modal_items11 = getelementptr inbounds %struct.wmKeyMap, %struct.wmKeyMap* %13, i32 0, i32 10, !dbg !4242
  store i8* %12, i8** %modal_items11, align 8, !dbg !4243
  %14 = load %struct.wmKeyMap*, %struct.wmKeyMap** %defaultkm, align 8, !dbg !4244
  %poll = getelementptr inbounds %struct.wmKeyMap, %struct.wmKeyMap* %14, i32 0, i32 9, !dbg !4245
  %15 = load i32 (%struct.bContext*)*, i32 (%struct.bContext*)** %poll, align 8, !dbg !4245
  %16 = load %struct.wmKeyMap*, %struct.wmKeyMap** %km.addr, align 8, !dbg !4246
  %poll12 = getelementptr inbounds %struct.wmKeyMap, %struct.wmKeyMap* %16, i32 0, i32 9, !dbg !4247
  store i32 (%struct.bContext*)* %15, i32 (%struct.bContext*)** %poll12, align 8, !dbg !4248
  %17 = load %struct.wmKeyMap*, %struct.wmKeyMap** %km.addr, align 8, !dbg !4249
  %items = getelementptr inbounds %struct.wmKeyMap, %struct.wmKeyMap* %17, i32 0, i32 2, !dbg !4251
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %items, i32 0, i32 0, !dbg !4252
  %18 = load i8*, i8** %first, align 8, !dbg !4252
  %19 = bitcast i8* %18 to %struct.wmKeyMapItem*, !dbg !4249
  store %struct.wmKeyMapItem* %19, %struct.wmKeyMapItem** %kmi, align 8, !dbg !4253
  br label %for.cond, !dbg !4254

for.cond:                                         ; preds = %for.inc, %if.end9
  %20 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi, align 8, !dbg !4255
  %tobool13 = icmp ne %struct.wmKeyMapItem* %20, null, !dbg !4257
  br i1 %tobool13, label %for.body, label %for.end, !dbg !4257

for.body:                                         ; preds = %for.cond
  %21 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi, align 8, !dbg !4258
  %propvalue_str = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %21, i32 0, i32 4, !dbg !4261
  %arrayidx = getelementptr inbounds [64 x i8], [64 x i8]* %propvalue_str, i64 0, i64 0, !dbg !4258
  %22 = load i8, i8* %arrayidx, align 8, !dbg !4258
  %tobool14 = icmp ne i8 %22, 0, !dbg !4258
  br i1 %tobool14, label %if.then15, label %if.end27, !dbg !4262

if.then15:                                        ; preds = %for.body
  %23 = load %struct.wmKeyMap*, %struct.wmKeyMap** %km.addr, align 8, !dbg !4263
  %modal_items16 = getelementptr inbounds %struct.wmKeyMap, %struct.wmKeyMap* %23, i32 0, i32 10, !dbg !4266
  %24 = load i8*, i8** %modal_items16, align 8, !dbg !4266
  %25 = bitcast i8* %24 to %struct.EnumPropertyItem*, !dbg !4263
  %26 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi, align 8, !dbg !4267
  %propvalue_str17 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %26, i32 0, i32 4, !dbg !4268
  %arraydecay18 = getelementptr inbounds [64 x i8], [64 x i8]* %propvalue_str17, i64 0, i64 0, !dbg !4267
  %call19 = call zeroext i8 @RNA_enum_value_from_id(%struct.EnumPropertyItem* %25, i8* %arraydecay18, i32* %propvalue), !dbg !4269
  %tobool20 = icmp ne i8 %call19, 0, !dbg !4269
  br i1 %tobool20, label %if.then21, label %if.end24, !dbg !4270

if.then21:                                        ; preds = %if.then15
  %27 = load i32, i32* %propvalue, align 4, !dbg !4271
  %conv22 = trunc i32 %27 to i16, !dbg !4271
  %28 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi, align 8, !dbg !4272
  %propvalue23 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %28, i32 0, i32 5, !dbg !4273
  store i16 %conv22, i16* %propvalue23, align 8, !dbg !4274
  br label %if.end24, !dbg !4272

if.end24:                                         ; preds = %if.then21, %if.then15
  %29 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi, align 8, !dbg !4275
  %propvalue_str25 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %29, i32 0, i32 4, !dbg !4276
  %arrayidx26 = getelementptr inbounds [64 x i8], [64 x i8]* %propvalue_str25, i64 0, i64 0, !dbg !4275
  store i8 0, i8* %arrayidx26, align 8, !dbg !4277
  br label %if.end27, !dbg !4278

if.end27:                                         ; preds = %if.end24, %for.body
  br label %for.inc, !dbg !4279

for.inc:                                          ; preds = %if.end27
  %30 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi, align 8, !dbg !4280
  %next = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %30, i32 0, i32 0, !dbg !4281
  %31 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %next, align 8, !dbg !4281
  store %struct.wmKeyMapItem* %31, %struct.wmKeyMapItem** %kmi, align 8, !dbg !4282
  br label %for.cond, !dbg !4283, !llvm.loop !4284

for.end:                                          ; preds = %for.cond
  br label %if.end28, !dbg !4286

if.end28:                                         ; preds = %if.then5, %if.then8, %for.end, %land.lhs.true2, %land.lhs.true, %entry
  ret void, !dbg !4287
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.wmKeyMap* @wm_keymap_patch_update(%struct.ListBase* %lb, %struct.wmKeyMap* %defaultmap, %struct.wmKeyMap* %addonmap, %struct.wmKeyMap* %usermap) #0 !dbg !4288 {
entry:
  %lb.addr = alloca %struct.ListBase*, align 8
  %defaultmap.addr = alloca %struct.wmKeyMap*, align 8
  %addonmap.addr = alloca %struct.wmKeyMap*, align 8
  %usermap.addr = alloca %struct.wmKeyMap*, align 8
  %km = alloca %struct.wmKeyMap*, align 8
  %expanded = alloca i32, align 4
  %kmi = alloca %struct.wmKeyMapItem*, align 8
  %orig_kmi = alloca %struct.wmKeyMapItem*, align 8
  store %struct.ListBase* %lb, %struct.ListBase** %lb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %lb.addr, metadata !4291, metadata !DIExpression()), !dbg !4292
  store %struct.wmKeyMap* %defaultmap, %struct.wmKeyMap** %defaultmap.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmKeyMap** %defaultmap.addr, metadata !4293, metadata !DIExpression()), !dbg !4294
  store %struct.wmKeyMap* %addonmap, %struct.wmKeyMap** %addonmap.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmKeyMap** %addonmap.addr, metadata !4295, metadata !DIExpression()), !dbg !4296
  store %struct.wmKeyMap* %usermap, %struct.wmKeyMap** %usermap.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmKeyMap** %usermap.addr, metadata !4297, metadata !DIExpression()), !dbg !4298
  call void @llvm.dbg.declare(metadata %struct.wmKeyMap** %km, metadata !4299, metadata !DIExpression()), !dbg !4300
  call void @llvm.dbg.declare(metadata i32* %expanded, metadata !4301, metadata !DIExpression()), !dbg !4302
  store i32 0, i32* %expanded, align 4, !dbg !4302
  %0 = load %struct.ListBase*, %struct.ListBase** %lb.addr, align 8, !dbg !4303
  %1 = load %struct.wmKeyMap*, %struct.wmKeyMap** %defaultmap.addr, align 8, !dbg !4304
  %idname = getelementptr inbounds %struct.wmKeyMap, %struct.wmKeyMap* %1, i32 0, i32 4, !dbg !4305
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %idname, i64 0, i64 0, !dbg !4304
  %2 = load %struct.wmKeyMap*, %struct.wmKeyMap** %defaultmap.addr, align 8, !dbg !4306
  %spaceid = getelementptr inbounds %struct.wmKeyMap, %struct.wmKeyMap* %2, i32 0, i32 5, !dbg !4307
  %3 = load i16, i16* %spaceid, align 8, !dbg !4307
  %conv = sext i16 %3 to i32, !dbg !4306
  %4 = load %struct.wmKeyMap*, %struct.wmKeyMap** %defaultmap.addr, align 8, !dbg !4308
  %regionid = getelementptr inbounds %struct.wmKeyMap, %struct.wmKeyMap* %4, i32 0, i32 6, !dbg !4309
  %5 = load i16, i16* %regionid, align 2, !dbg !4309
  %conv1 = sext i16 %5 to i32, !dbg !4308
  %call = call %struct.wmKeyMap* @WM_keymap_list_find(%struct.ListBase* %0, i8* %arraydecay, i32 %conv, i32 %conv1), !dbg !4310
  store %struct.wmKeyMap* %call, %struct.wmKeyMap** %km, align 8, !dbg !4311
  %6 = load %struct.wmKeyMap*, %struct.wmKeyMap** %km, align 8, !dbg !4312
  %tobool = icmp ne %struct.wmKeyMap* %6, null, !dbg !4312
  br i1 %tobool, label %if.then, label %if.end, !dbg !4314

if.then:                                          ; preds = %entry
  %7 = load %struct.wmKeyMap*, %struct.wmKeyMap** %km, align 8, !dbg !4315
  %flag = getelementptr inbounds %struct.wmKeyMap, %struct.wmKeyMap* %7, i32 0, i32 7, !dbg !4317
  %8 = load i16, i16* %flag, align 4, !dbg !4317
  %conv2 = sext i16 %8 to i32, !dbg !4315
  %and = and i32 %conv2, 12, !dbg !4318
  store i32 %and, i32* %expanded, align 4, !dbg !4319
  %9 = load %struct.wmKeyMap*, %struct.wmKeyMap** %km, align 8, !dbg !4320
  call void @WM_keymap_free(%struct.wmKeyMap* %9), !dbg !4321
  %10 = load %struct.ListBase*, %struct.ListBase** %lb.addr, align 8, !dbg !4322
  %11 = load %struct.wmKeyMap*, %struct.wmKeyMap** %km, align 8, !dbg !4323
  %12 = bitcast %struct.wmKeyMap* %11 to i8*, !dbg !4323
  call void @BLI_freelinkN(%struct.ListBase* %10, i8* %12), !dbg !4324
  br label %if.end, !dbg !4325

if.end:                                           ; preds = %if.then, %entry
  %13 = load %struct.wmKeyMap*, %struct.wmKeyMap** %usermap.addr, align 8, !dbg !4326
  %tobool3 = icmp ne %struct.wmKeyMap* %13, null, !dbg !4326
  br i1 %tobool3, label %land.lhs.true, label %if.else26, !dbg !4328

land.lhs.true:                                    ; preds = %if.end
  %14 = load %struct.wmKeyMap*, %struct.wmKeyMap** %usermap.addr, align 8, !dbg !4329
  %flag4 = getelementptr inbounds %struct.wmKeyMap, %struct.wmKeyMap* %14, i32 0, i32 7, !dbg !4330
  %15 = load i16, i16* %flag4, align 4, !dbg !4330
  %conv5 = sext i16 %15 to i32, !dbg !4329
  %and6 = and i32 %conv5, 16, !dbg !4331
  %tobool7 = icmp ne i32 %and6, 0, !dbg !4331
  br i1 %tobool7, label %if.else26, label %if.then8, !dbg !4332

if.then8:                                         ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.wmKeyMapItem** %kmi, metadata !4333, metadata !DIExpression()), !dbg !4335
  call void @llvm.dbg.declare(metadata %struct.wmKeyMapItem** %orig_kmi, metadata !4336, metadata !DIExpression()), !dbg !4337
  %16 = load %struct.wmKeyMap*, %struct.wmKeyMap** %usermap.addr, align 8, !dbg !4338
  %call9 = call %struct.wmKeyMap* @wm_keymap_copy(%struct.wmKeyMap* %16), !dbg !4339
  store %struct.wmKeyMap* %call9, %struct.wmKeyMap** %km, align 8, !dbg !4340
  %17 = load %struct.wmKeyMap*, %struct.wmKeyMap** %km, align 8, !dbg !4341
  %items = getelementptr inbounds %struct.wmKeyMap, %struct.wmKeyMap* %17, i32 0, i32 2, !dbg !4343
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %items, i32 0, i32 0, !dbg !4344
  %18 = load i8*, i8** %first, align 8, !dbg !4344
  %19 = bitcast i8* %18 to %struct.wmKeyMapItem*, !dbg !4341
  store %struct.wmKeyMapItem* %19, %struct.wmKeyMapItem** %kmi, align 8, !dbg !4345
  br label %for.cond, !dbg !4346

for.cond:                                         ; preds = %for.inc, %if.then8
  %20 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi, align 8, !dbg !4347
  %tobool10 = icmp ne %struct.wmKeyMapItem* %20, null, !dbg !4349
  br i1 %tobool10, label %for.body, label %for.end, !dbg !4349

for.body:                                         ; preds = %for.cond
  %21 = load %struct.wmKeyMap*, %struct.wmKeyMap** %defaultmap.addr, align 8, !dbg !4350
  %22 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi, align 8, !dbg !4352
  %call11 = call %struct.wmKeyMapItem* @wm_keymap_find_item_equals(%struct.wmKeyMap* %21, %struct.wmKeyMapItem* %22), !dbg !4353
  store %struct.wmKeyMapItem* %call11, %struct.wmKeyMapItem** %orig_kmi, align 8, !dbg !4354
  %23 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %orig_kmi, align 8, !dbg !4355
  %tobool12 = icmp ne %struct.wmKeyMapItem* %23, null, !dbg !4355
  br i1 %tobool12, label %if.end15, label %if.then13, !dbg !4357

if.then13:                                        ; preds = %for.body
  %24 = load %struct.wmKeyMap*, %struct.wmKeyMap** %defaultmap.addr, align 8, !dbg !4358
  %25 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi, align 8, !dbg !4359
  %call14 = call %struct.wmKeyMapItem* @wm_keymap_find_item_equals_result(%struct.wmKeyMap* %24, %struct.wmKeyMapItem* %25), !dbg !4360
  store %struct.wmKeyMapItem* %call14, %struct.wmKeyMapItem** %orig_kmi, align 8, !dbg !4361
  br label %if.end15, !dbg !4362

if.end15:                                         ; preds = %if.then13, %for.body
  %26 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %orig_kmi, align 8, !dbg !4363
  %tobool16 = icmp ne %struct.wmKeyMapItem* %26, null, !dbg !4363
  br i1 %tobool16, label %if.then17, label %if.else, !dbg !4365

if.then17:                                        ; preds = %if.end15
  %27 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %orig_kmi, align 8, !dbg !4366
  %id = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %27, i32 0, i32 15, !dbg !4367
  %28 = load i16, i16* %id, align 4, !dbg !4367
  %29 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi, align 8, !dbg !4368
  %id18 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %29, i32 0, i32 15, !dbg !4369
  store i16 %28, i16* %id18, align 4, !dbg !4370
  br label %if.end22, !dbg !4368

if.else:                                          ; preds = %if.end15
  %30 = load %struct.wmKeyMap*, %struct.wmKeyMap** %km, align 8, !dbg !4371
  %kmi_id = getelementptr inbounds %struct.wmKeyMap, %struct.wmKeyMap* %30, i32 0, i32 8, !dbg !4372
  %31 = load i16, i16* %kmi_id, align 2, !dbg !4373
  %inc = add i16 %31, 1, !dbg !4373
  store i16 %inc, i16* %kmi_id, align 2, !dbg !4373
  %conv19 = sext i16 %31 to i32, !dbg !4374
  %sub = sub nsw i32 0, %conv19, !dbg !4375
  %conv20 = trunc i32 %sub to i16, !dbg !4375
  %32 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi, align 8, !dbg !4376
  %id21 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %32, i32 0, i32 15, !dbg !4377
  store i16 %conv20, i16* %id21, align 4, !dbg !4378
  br label %if.end22

if.end22:                                         ; preds = %if.else, %if.then17
  br label %for.inc, !dbg !4379

for.inc:                                          ; preds = %if.end22
  %33 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi, align 8, !dbg !4380
  %next = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %33, i32 0, i32 0, !dbg !4381
  %34 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %next, align 8, !dbg !4381
  store %struct.wmKeyMapItem* %34, %struct.wmKeyMapItem** %kmi, align 8, !dbg !4382
  br label %for.cond, !dbg !4383, !llvm.loop !4384

for.end:                                          ; preds = %for.cond
  %35 = load %struct.wmKeyMap*, %struct.wmKeyMap** %km, align 8, !dbg !4386
  %flag23 = getelementptr inbounds %struct.wmKeyMap, %struct.wmKeyMap* %35, i32 0, i32 7, !dbg !4387
  %36 = load i16, i16* %flag23, align 4, !dbg !4388
  %conv24 = sext i16 %36 to i32, !dbg !4388
  %or = or i32 %conv24, 64, !dbg !4388
  %conv25 = trunc i32 %or to i16, !dbg !4388
  store i16 %conv25, i16* %flag23, align 4, !dbg !4388
  br label %if.end28, !dbg !4389

if.else26:                                        ; preds = %land.lhs.true, %if.end
  %37 = load %struct.wmKeyMap*, %struct.wmKeyMap** %defaultmap.addr, align 8, !dbg !4390
  %call27 = call %struct.wmKeyMap* @wm_keymap_copy(%struct.wmKeyMap* %37), !dbg !4391
  store %struct.wmKeyMap* %call27, %struct.wmKeyMap** %km, align 8, !dbg !4392
  br label %if.end28

if.end28:                                         ; preds = %if.else26, %for.end
  %38 = load %struct.wmKeyMap*, %struct.wmKeyMap** %addonmap.addr, align 8, !dbg !4393
  %tobool29 = icmp ne %struct.wmKeyMap* %38, null, !dbg !4393
  br i1 %tobool29, label %if.then30, label %if.end31, !dbg !4395

if.then30:                                        ; preds = %if.end28
  %39 = load %struct.wmKeyMap*, %struct.wmKeyMap** %km, align 8, !dbg !4396
  %40 = load %struct.wmKeyMap*, %struct.wmKeyMap** %addonmap.addr, align 8, !dbg !4397
  call void @wm_keymap_addon_add(%struct.wmKeyMap* %39, %struct.wmKeyMap* %40), !dbg !4398
  br label %if.end31, !dbg !4398

if.end31:                                         ; preds = %if.then30, %if.end28
  %41 = load %struct.wmKeyMap*, %struct.wmKeyMap** %usermap.addr, align 8, !dbg !4399
  %tobool32 = icmp ne %struct.wmKeyMap* %41, null, !dbg !4399
  br i1 %tobool32, label %if.then33, label %if.end38, !dbg !4401

if.then33:                                        ; preds = %if.end31
  %42 = load %struct.wmKeyMap*, %struct.wmKeyMap** %km, align 8, !dbg !4402
  %flag34 = getelementptr inbounds %struct.wmKeyMap, %struct.wmKeyMap* %42, i32 0, i32 7, !dbg !4403
  %43 = load i16, i16* %flag34, align 4, !dbg !4404
  %conv35 = sext i16 %43 to i32, !dbg !4404
  %or36 = or i32 %conv35, 32, !dbg !4404
  %conv37 = trunc i32 %or36 to i16, !dbg !4404
  store i16 %conv37, i16* %flag34, align 4, !dbg !4404
  br label %if.end38, !dbg !4402

if.end38:                                         ; preds = %if.then33, %if.end31
  %44 = load i32, i32* %expanded, align 4, !dbg !4405
  %or39 = or i32 2, %44, !dbg !4406
  %45 = load %struct.wmKeyMap*, %struct.wmKeyMap** %km, align 8, !dbg !4407
  %flag40 = getelementptr inbounds %struct.wmKeyMap, %struct.wmKeyMap* %45, i32 0, i32 7, !dbg !4408
  %46 = load i16, i16* %flag40, align 4, !dbg !4409
  %conv41 = sext i16 %46 to i32, !dbg !4409
  %or42 = or i32 %conv41, %or39, !dbg !4409
  %conv43 = trunc i32 %or42 to i16, !dbg !4409
  store i16 %conv43, i16* %flag40, align 4, !dbg !4409
  %47 = load %struct.wmKeyMap*, %struct.wmKeyMap** %usermap.addr, align 8, !dbg !4410
  %tobool44 = icmp ne %struct.wmKeyMap* %47, null, !dbg !4410
  br i1 %tobool44, label %land.lhs.true45, label %if.end51, !dbg !4412

land.lhs.true45:                                  ; preds = %if.end38
  %48 = load %struct.wmKeyMap*, %struct.wmKeyMap** %usermap.addr, align 8, !dbg !4413
  %flag46 = getelementptr inbounds %struct.wmKeyMap, %struct.wmKeyMap* %48, i32 0, i32 7, !dbg !4414
  %49 = load i16, i16* %flag46, align 4, !dbg !4414
  %conv47 = sext i16 %49 to i32, !dbg !4413
  %and48 = and i32 %conv47, 16, !dbg !4415
  %tobool49 = icmp ne i32 %and48, 0, !dbg !4415
  br i1 %tobool49, label %if.then50, label %if.end51, !dbg !4416

if.then50:                                        ; preds = %land.lhs.true45
  %50 = load %struct.wmKeyMap*, %struct.wmKeyMap** %km, align 8, !dbg !4417
  %51 = load %struct.wmKeyMap*, %struct.wmKeyMap** %usermap.addr, align 8, !dbg !4418
  call void @wm_keymap_patch(%struct.wmKeyMap* %50, %struct.wmKeyMap* %51), !dbg !4419
  br label %if.end51, !dbg !4419

if.end51:                                         ; preds = %if.then50, %land.lhs.true45, %if.end38
  %52 = load %struct.ListBase*, %struct.ListBase** %lb.addr, align 8, !dbg !4420
  %53 = load %struct.wmKeyMap*, %struct.wmKeyMap** %km, align 8, !dbg !4421
  %54 = bitcast %struct.wmKeyMap* %53 to i8*, !dbg !4421
  call void @BLI_addtail(%struct.ListBase* %52, i8* %54), !dbg !4422
  %55 = load %struct.wmKeyMap*, %struct.wmKeyMap** %km, align 8, !dbg !4423
  ret %struct.wmKeyMap* %55, !dbg !4424
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.wmKeyMap* @WM_keymap_active(%struct.wmWindowManager* %wm, %struct.wmKeyMap* %keymap) #0 !dbg !4425 {
entry:
  %retval = alloca %struct.wmKeyMap*, align 8
  %wm.addr = alloca %struct.wmWindowManager*, align 8
  %keymap.addr = alloca %struct.wmKeyMap*, align 8
  %km = alloca %struct.wmKeyMap*, align 8
  store %struct.wmWindowManager* %wm, %struct.wmWindowManager** %wm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmWindowManager** %wm.addr, metadata !4426, metadata !DIExpression()), !dbg !4427
  store %struct.wmKeyMap* %keymap, %struct.wmKeyMap** %keymap.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmKeyMap** %keymap.addr, metadata !4428, metadata !DIExpression()), !dbg !4429
  call void @llvm.dbg.declare(metadata %struct.wmKeyMap** %km, metadata !4430, metadata !DIExpression()), !dbg !4431
  %0 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap.addr, align 8, !dbg !4432
  %tobool = icmp ne %struct.wmKeyMap* %0, null, !dbg !4432
  br i1 %tobool, label %if.end, label %if.then, !dbg !4434

if.then:                                          ; preds = %entry
  store %struct.wmKeyMap* null, %struct.wmKeyMap** %retval, align 8, !dbg !4435
  br label %return, !dbg !4435

if.end:                                           ; preds = %entry
  %1 = load %struct.wmWindowManager*, %struct.wmWindowManager** %wm.addr, align 8, !dbg !4436
  %userconf = getelementptr inbounds %struct.wmWindowManager, %struct.wmWindowManager* %1, i32 0, i32 16, !dbg !4437
  %2 = load %struct.wmKeyConfig*, %struct.wmKeyConfig** %userconf, align 8, !dbg !4437
  %keymaps = getelementptr inbounds %struct.wmKeyConfig, %struct.wmKeyConfig* %2, i32 0, i32 4, !dbg !4438
  %3 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap.addr, align 8, !dbg !4439
  %idname = getelementptr inbounds %struct.wmKeyMap, %struct.wmKeyMap* %3, i32 0, i32 4, !dbg !4440
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %idname, i64 0, i64 0, !dbg !4439
  %4 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap.addr, align 8, !dbg !4441
  %spaceid = getelementptr inbounds %struct.wmKeyMap, %struct.wmKeyMap* %4, i32 0, i32 5, !dbg !4442
  %5 = load i16, i16* %spaceid, align 8, !dbg !4442
  %conv = sext i16 %5 to i32, !dbg !4441
  %6 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap.addr, align 8, !dbg !4443
  %regionid = getelementptr inbounds %struct.wmKeyMap, %struct.wmKeyMap* %6, i32 0, i32 6, !dbg !4444
  %7 = load i16, i16* %regionid, align 2, !dbg !4444
  %conv1 = sext i16 %7 to i32, !dbg !4443
  %call = call %struct.wmKeyMap* @WM_keymap_list_find(%struct.ListBase* %keymaps, i8* %arraydecay, i32 %conv, i32 %conv1), !dbg !4445
  store %struct.wmKeyMap* %call, %struct.wmKeyMap** %km, align 8, !dbg !4446
  %8 = load %struct.wmKeyMap*, %struct.wmKeyMap** %km, align 8, !dbg !4447
  %tobool2 = icmp ne %struct.wmKeyMap* %8, null, !dbg !4447
  br i1 %tobool2, label %if.then3, label %if.end4, !dbg !4449

if.then3:                                         ; preds = %if.end
  %9 = load %struct.wmKeyMap*, %struct.wmKeyMap** %km, align 8, !dbg !4450
  store %struct.wmKeyMap* %9, %struct.wmKeyMap** %retval, align 8, !dbg !4451
  br label %return, !dbg !4451

if.end4:                                          ; preds = %if.end
  %10 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap.addr, align 8, !dbg !4452
  store %struct.wmKeyMap* %10, %struct.wmKeyMap** %retval, align 8, !dbg !4453
  br label %return, !dbg !4453

return:                                           ; preds = %if.end4, %if.then3, %if.then
  %11 = load %struct.wmKeyMap*, %struct.wmKeyMap** %retval, align 8, !dbg !4454
  ret %struct.wmKeyMap* %11, !dbg !4454
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @WM_keymap_restore_item_to_default(%struct.bContext* %C, %struct.wmKeyMap* %keymap, %struct.wmKeyMapItem* %kmi) #0 !dbg !4455 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %keymap.addr = alloca %struct.wmKeyMap*, align 8
  %kmi.addr = alloca %struct.wmKeyMapItem*, align 8
  %wm = alloca %struct.wmWindowManager*, align 8
  %defaultmap = alloca %struct.wmKeyMap*, align 8
  %addonmap = alloca %struct.wmKeyMap*, align 8
  %orig = alloca %struct.wmKeyMapItem*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !4458, metadata !DIExpression()), !dbg !4459
  store %struct.wmKeyMap* %keymap, %struct.wmKeyMap** %keymap.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmKeyMap** %keymap.addr, metadata !4460, metadata !DIExpression()), !dbg !4461
  store %struct.wmKeyMapItem* %kmi, %struct.wmKeyMapItem** %kmi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmKeyMapItem** %kmi.addr, metadata !4462, metadata !DIExpression()), !dbg !4463
  call void @llvm.dbg.declare(metadata %struct.wmWindowManager** %wm, metadata !4464, metadata !DIExpression()), !dbg !4465
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4466
  %call = call %struct.wmWindowManager* @CTX_wm_manager(%struct.bContext* %0), !dbg !4467
  store %struct.wmWindowManager* %call, %struct.wmWindowManager** %wm, align 8, !dbg !4465
  call void @llvm.dbg.declare(metadata %struct.wmKeyMap** %defaultmap, metadata !4468, metadata !DIExpression()), !dbg !4469
  call void @llvm.dbg.declare(metadata %struct.wmKeyMap** %addonmap, metadata !4470, metadata !DIExpression()), !dbg !4471
  call void @llvm.dbg.declare(metadata %struct.wmKeyMapItem** %orig, metadata !4472, metadata !DIExpression()), !dbg !4473
  %1 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap.addr, align 8, !dbg !4474
  %tobool = icmp ne %struct.wmKeyMap* %1, null, !dbg !4474
  br i1 %tobool, label %if.end, label %if.then, !dbg !4476

if.then:                                          ; preds = %entry
  br label %if.end51, !dbg !4477

if.end:                                           ; preds = %entry
  %2 = load %struct.wmWindowManager*, %struct.wmWindowManager** %wm, align 8, !dbg !4478
  %3 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap.addr, align 8, !dbg !4479
  %call1 = call %struct.wmKeyMap* @wm_keymap_preset(%struct.wmWindowManager* %2, %struct.wmKeyMap* %3), !dbg !4480
  store %struct.wmKeyMap* %call1, %struct.wmKeyMap** %defaultmap, align 8, !dbg !4481
  %4 = load %struct.wmWindowManager*, %struct.wmWindowManager** %wm, align 8, !dbg !4482
  %addonconf = getelementptr inbounds %struct.wmWindowManager, %struct.wmWindowManager* %4, i32 0, i32 15, !dbg !4483
  %5 = load %struct.wmKeyConfig*, %struct.wmKeyConfig** %addonconf, align 8, !dbg !4483
  %keymaps = getelementptr inbounds %struct.wmKeyConfig, %struct.wmKeyConfig* %5, i32 0, i32 4, !dbg !4484
  %6 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap.addr, align 8, !dbg !4485
  %idname = getelementptr inbounds %struct.wmKeyMap, %struct.wmKeyMap* %6, i32 0, i32 4, !dbg !4486
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %idname, i64 0, i64 0, !dbg !4485
  %7 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap.addr, align 8, !dbg !4487
  %spaceid = getelementptr inbounds %struct.wmKeyMap, %struct.wmKeyMap* %7, i32 0, i32 5, !dbg !4488
  %8 = load i16, i16* %spaceid, align 8, !dbg !4488
  %conv = sext i16 %8 to i32, !dbg !4487
  %9 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap.addr, align 8, !dbg !4489
  %regionid = getelementptr inbounds %struct.wmKeyMap, %struct.wmKeyMap* %9, i32 0, i32 6, !dbg !4490
  %10 = load i16, i16* %regionid, align 2, !dbg !4490
  %conv2 = sext i16 %10 to i32, !dbg !4489
  %call3 = call %struct.wmKeyMap* @WM_keymap_list_find(%struct.ListBase* %keymaps, i8* %arraydecay, i32 %conv, i32 %conv2), !dbg !4491
  store %struct.wmKeyMap* %call3, %struct.wmKeyMap** %addonmap, align 8, !dbg !4492
  %11 = load %struct.wmKeyMap*, %struct.wmKeyMap** %addonmap, align 8, !dbg !4493
  %tobool4 = icmp ne %struct.wmKeyMap* %11, null, !dbg !4493
  br i1 %tobool4, label %if.then5, label %if.end7, !dbg !4495

if.then5:                                         ; preds = %if.end
  %12 = load %struct.wmKeyMap*, %struct.wmKeyMap** %defaultmap, align 8, !dbg !4496
  %call6 = call %struct.wmKeyMap* @wm_keymap_copy(%struct.wmKeyMap* %12), !dbg !4498
  store %struct.wmKeyMap* %call6, %struct.wmKeyMap** %defaultmap, align 8, !dbg !4499
  %13 = load %struct.wmKeyMap*, %struct.wmKeyMap** %defaultmap, align 8, !dbg !4500
  %14 = load %struct.wmKeyMap*, %struct.wmKeyMap** %addonmap, align 8, !dbg !4501
  call void @wm_keymap_addon_add(%struct.wmKeyMap* %13, %struct.wmKeyMap* %14), !dbg !4502
  br label %if.end7, !dbg !4503

if.end7:                                          ; preds = %if.then5, %if.end
  %15 = load %struct.wmKeyMap*, %struct.wmKeyMap** %defaultmap, align 8, !dbg !4504
  %16 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi.addr, align 8, !dbg !4505
  %id = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %16, i32 0, i32 15, !dbg !4506
  %17 = load i16, i16* %id, align 4, !dbg !4506
  %conv8 = sext i16 %17 to i32, !dbg !4505
  %call9 = call %struct.wmKeyMapItem* @WM_keymap_item_find_id(%struct.wmKeyMap* %15, i32 %conv8), !dbg !4507
  store %struct.wmKeyMapItem* %call9, %struct.wmKeyMapItem** %orig, align 8, !dbg !4508
  %18 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %orig, align 8, !dbg !4509
  %tobool10 = icmp ne %struct.wmKeyMapItem* %18, null, !dbg !4509
  br i1 %tobool10, label %if.then11, label %if.end48, !dbg !4511

if.then11:                                        ; preds = %if.end7
  %19 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %orig, align 8, !dbg !4512
  %idname12 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %19, i32 0, i32 2, !dbg !4515
  %arraydecay13 = getelementptr inbounds [64 x i8], [64 x i8]* %idname12, i64 0, i64 0, !dbg !4512
  %20 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi.addr, align 8, !dbg !4516
  %idname14 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %20, i32 0, i32 2, !dbg !4517
  %arraydecay15 = getelementptr inbounds [64 x i8], [64 x i8]* %idname14, i64 0, i64 0, !dbg !4516
  %call16 = call i32 @strcmp(i8* %arraydecay13, i8* %arraydecay15) #4, !dbg !4518
  %cmp = icmp ne i32 %call16, 0, !dbg !4519
  br i1 %cmp, label %if.then18, label %if.end24, !dbg !4520

if.then18:                                        ; preds = %if.then11
  %21 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi.addr, align 8, !dbg !4521
  %idname19 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %21, i32 0, i32 2, !dbg !4523
  %arraydecay20 = getelementptr inbounds [64 x i8], [64 x i8]* %idname19, i64 0, i64 0, !dbg !4521
  %22 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %orig, align 8, !dbg !4524
  %idname21 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %22, i32 0, i32 2, !dbg !4525
  %arraydecay22 = getelementptr inbounds [64 x i8], [64 x i8]* %idname21, i64 0, i64 0, !dbg !4524
  %call23 = call i8* @BLI_strncpy(i8* %arraydecay20, i8* %arraydecay22, i64 64), !dbg !4526
  %23 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi.addr, align 8, !dbg !4527
  call void @WM_keymap_properties_reset(%struct.wmKeyMapItem* %23, %struct.IDProperty* null), !dbg !4528
  br label %if.end24, !dbg !4529

if.end24:                                         ; preds = %if.then18, %if.then11
  %24 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %orig, align 8, !dbg !4530
  %properties = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %24, i32 0, i32 3, !dbg !4532
  %25 = load %struct.IDProperty*, %struct.IDProperty** %properties, align 8, !dbg !4532
  %tobool25 = icmp ne %struct.IDProperty* %25, null, !dbg !4530
  br i1 %tobool25, label %if.then26, label %if.end38, !dbg !4533

if.then26:                                        ; preds = %if.end24
  %26 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi.addr, align 8, !dbg !4534
  %properties27 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %26, i32 0, i32 3, !dbg !4537
  %27 = load %struct.IDProperty*, %struct.IDProperty** %properties27, align 8, !dbg !4537
  %tobool28 = icmp ne %struct.IDProperty* %27, null, !dbg !4534
  br i1 %tobool28, label %if.then29, label %if.end33, !dbg !4538

if.then29:                                        ; preds = %if.then26
  %28 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi.addr, align 8, !dbg !4539
  %properties30 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %28, i32 0, i32 3, !dbg !4541
  %29 = load %struct.IDProperty*, %struct.IDProperty** %properties30, align 8, !dbg !4541
  call void @IDP_FreeProperty(%struct.IDProperty* %29), !dbg !4542
  %30 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !4543
  %31 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi.addr, align 8, !dbg !4544
  %properties31 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %31, i32 0, i32 3, !dbg !4545
  %32 = load %struct.IDProperty*, %struct.IDProperty** %properties31, align 8, !dbg !4545
  %33 = bitcast %struct.IDProperty* %32 to i8*, !dbg !4544
  call void %30(i8* %33), !dbg !4543
  %34 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi.addr, align 8, !dbg !4546
  %properties32 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %34, i32 0, i32 3, !dbg !4547
  store %struct.IDProperty* null, %struct.IDProperty** %properties32, align 8, !dbg !4548
  br label %if.end33, !dbg !4549

if.end33:                                         ; preds = %if.then29, %if.then26
  %35 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %orig, align 8, !dbg !4550
  %properties34 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %35, i32 0, i32 3, !dbg !4551
  %36 = load %struct.IDProperty*, %struct.IDProperty** %properties34, align 8, !dbg !4551
  %call35 = call %struct.IDProperty* @IDP_CopyProperty(%struct.IDProperty* %36), !dbg !4552
  %37 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi.addr, align 8, !dbg !4553
  %properties36 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %37, i32 0, i32 3, !dbg !4554
  store %struct.IDProperty* %call35, %struct.IDProperty** %properties36, align 8, !dbg !4555
  %38 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi.addr, align 8, !dbg !4556
  %properties37 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %38, i32 0, i32 3, !dbg !4557
  %39 = load %struct.IDProperty*, %struct.IDProperty** %properties37, align 8, !dbg !4557
  %40 = bitcast %struct.IDProperty* %39 to i8*, !dbg !4556
  %41 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi.addr, align 8, !dbg !4558
  %ptr = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %41, i32 0, i32 17, !dbg !4559
  %42 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !4559
  %data = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %42, i32 0, i32 2, !dbg !4560
  store i8* %40, i8** %data, align 8, !dbg !4561
  br label %if.end38, !dbg !4562

if.end38:                                         ; preds = %if.end33, %if.end24
  %43 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %orig, align 8, !dbg !4563
  %propvalue = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %43, i32 0, i32 5, !dbg !4564
  %44 = load i16, i16* %propvalue, align 8, !dbg !4564
  %45 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi.addr, align 8, !dbg !4565
  %propvalue39 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %45, i32 0, i32 5, !dbg !4566
  store i16 %44, i16* %propvalue39, align 8, !dbg !4567
  %46 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %orig, align 8, !dbg !4568
  %type = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %46, i32 0, i32 6, !dbg !4569
  %47 = load i16, i16* %type, align 2, !dbg !4569
  %48 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi.addr, align 8, !dbg !4570
  %type40 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %48, i32 0, i32 6, !dbg !4571
  store i16 %47, i16* %type40, align 2, !dbg !4572
  %49 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %orig, align 8, !dbg !4573
  %val = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %49, i32 0, i32 7, !dbg !4574
  %50 = load i16, i16* %val, align 4, !dbg !4574
  %51 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi.addr, align 8, !dbg !4575
  %val41 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %51, i32 0, i32 7, !dbg !4576
  store i16 %50, i16* %val41, align 4, !dbg !4577
  %52 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %orig, align 8, !dbg !4578
  %shift = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %52, i32 0, i32 8, !dbg !4579
  %53 = load i16, i16* %shift, align 2, !dbg !4579
  %54 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi.addr, align 8, !dbg !4580
  %shift42 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %54, i32 0, i32 8, !dbg !4581
  store i16 %53, i16* %shift42, align 2, !dbg !4582
  %55 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %orig, align 8, !dbg !4583
  %ctrl = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %55, i32 0, i32 9, !dbg !4584
  %56 = load i16, i16* %ctrl, align 8, !dbg !4584
  %57 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi.addr, align 8, !dbg !4585
  %ctrl43 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %57, i32 0, i32 9, !dbg !4586
  store i16 %56, i16* %ctrl43, align 8, !dbg !4587
  %58 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %orig, align 8, !dbg !4588
  %alt = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %58, i32 0, i32 10, !dbg !4589
  %59 = load i16, i16* %alt, align 2, !dbg !4589
  %60 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi.addr, align 8, !dbg !4590
  %alt44 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %60, i32 0, i32 10, !dbg !4591
  store i16 %59, i16* %alt44, align 2, !dbg !4592
  %61 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %orig, align 8, !dbg !4593
  %oskey = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %61, i32 0, i32 11, !dbg !4594
  %62 = load i16, i16* %oskey, align 4, !dbg !4594
  %63 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi.addr, align 8, !dbg !4595
  %oskey45 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %63, i32 0, i32 11, !dbg !4596
  store i16 %62, i16* %oskey45, align 4, !dbg !4597
  %64 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %orig, align 8, !dbg !4598
  %keymodifier = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %64, i32 0, i32 12, !dbg !4599
  %65 = load i16, i16* %keymodifier, align 2, !dbg !4599
  %66 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi.addr, align 8, !dbg !4600
  %keymodifier46 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %66, i32 0, i32 12, !dbg !4601
  store i16 %65, i16* %keymodifier46, align 2, !dbg !4602
  %67 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %orig, align 8, !dbg !4603
  %maptype = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %67, i32 0, i32 14, !dbg !4604
  %68 = load i16, i16* %maptype, align 2, !dbg !4604
  %69 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi.addr, align 8, !dbg !4605
  %maptype47 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %69, i32 0, i32 14, !dbg !4606
  store i16 %68, i16* %maptype47, align 2, !dbg !4607
  %70 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap.addr, align 8, !dbg !4608
  %71 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi.addr, align 8, !dbg !4609
  call void @WM_keyconfig_update_tag(%struct.wmKeyMap* %70, %struct.wmKeyMapItem* %71), !dbg !4610
  br label %if.end48, !dbg !4611

if.end48:                                         ; preds = %if.end38, %if.end7
  %72 = load %struct.wmKeyMap*, %struct.wmKeyMap** %addonmap, align 8, !dbg !4612
  %tobool49 = icmp ne %struct.wmKeyMap* %72, null, !dbg !4612
  br i1 %tobool49, label %if.then50, label %if.end51, !dbg !4614

if.then50:                                        ; preds = %if.end48
  %73 = load %struct.wmKeyMap*, %struct.wmKeyMap** %defaultmap, align 8, !dbg !4615
  call void @WM_keymap_free(%struct.wmKeyMap* %73), !dbg !4617
  %74 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !4618
  %75 = load %struct.wmKeyMap*, %struct.wmKeyMap** %defaultmap, align 8, !dbg !4619
  %76 = bitcast %struct.wmKeyMap* %75 to i8*, !dbg !4619
  call void %74(i8* %76), !dbg !4618
  br label %if.end51, !dbg !4620

if.end51:                                         ; preds = %if.then, %if.then50, %if.end48
  ret void, !dbg !4621
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.wmKeyMap* @wm_keymap_copy(%struct.wmKeyMap* %keymap) #0 !dbg !4622 {
entry:
  %keymap.addr = alloca %struct.wmKeyMap*, align 8
  %keymapn = alloca %struct.wmKeyMap*, align 8
  %kmi = alloca %struct.wmKeyMapItem*, align 8
  %kmin = alloca %struct.wmKeyMapItem*, align 8
  %kmdi = alloca %struct.wmKeyMapDiffItem*, align 8
  %kmdin = alloca %struct.wmKeyMapDiffItem*, align 8
  store %struct.wmKeyMap* %keymap, %struct.wmKeyMap** %keymap.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmKeyMap** %keymap.addr, metadata !4625, metadata !DIExpression()), !dbg !4626
  call void @llvm.dbg.declare(metadata %struct.wmKeyMap** %keymapn, metadata !4627, metadata !DIExpression()), !dbg !4628
  %0 = load i8* (i8*)*, i8* (i8*)** @MEM_dupallocN, align 8, !dbg !4629
  %1 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap.addr, align 8, !dbg !4630
  %2 = bitcast %struct.wmKeyMap* %1 to i8*, !dbg !4630
  %call = call i8* %0(i8* %2), !dbg !4629
  %3 = bitcast i8* %call to %struct.wmKeyMap*, !dbg !4629
  store %struct.wmKeyMap* %3, %struct.wmKeyMap** %keymapn, align 8, !dbg !4628
  call void @llvm.dbg.declare(metadata %struct.wmKeyMapItem** %kmi, metadata !4631, metadata !DIExpression()), !dbg !4632
  call void @llvm.dbg.declare(metadata %struct.wmKeyMapItem** %kmin, metadata !4633, metadata !DIExpression()), !dbg !4634
  call void @llvm.dbg.declare(metadata %struct.wmKeyMapDiffItem** %kmdi, metadata !4635, metadata !DIExpression()), !dbg !4636
  call void @llvm.dbg.declare(metadata %struct.wmKeyMapDiffItem** %kmdin, metadata !4637, metadata !DIExpression()), !dbg !4638
  %4 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap.addr, align 8, !dbg !4639
  %modal_items = getelementptr inbounds %struct.wmKeyMap, %struct.wmKeyMap* %4, i32 0, i32 10, !dbg !4640
  %5 = load i8*, i8** %modal_items, align 8, !dbg !4640
  %6 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymapn, align 8, !dbg !4641
  %modal_items1 = getelementptr inbounds %struct.wmKeyMap, %struct.wmKeyMap* %6, i32 0, i32 10, !dbg !4642
  store i8* %5, i8** %modal_items1, align 8, !dbg !4643
  %7 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap.addr, align 8, !dbg !4644
  %poll = getelementptr inbounds %struct.wmKeyMap, %struct.wmKeyMap* %7, i32 0, i32 9, !dbg !4645
  %8 = load i32 (%struct.bContext*)*, i32 (%struct.bContext*)** %poll, align 8, !dbg !4645
  %9 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymapn, align 8, !dbg !4646
  %poll2 = getelementptr inbounds %struct.wmKeyMap, %struct.wmKeyMap* %9, i32 0, i32 9, !dbg !4647
  store i32 (%struct.bContext*)* %8, i32 (%struct.bContext*)** %poll2, align 8, !dbg !4648
  %10 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymapn, align 8, !dbg !4649
  %items = getelementptr inbounds %struct.wmKeyMap, %struct.wmKeyMap* %10, i32 0, i32 2, !dbg !4650
  call void @BLI_listbase_clear(%struct.ListBase* %items), !dbg !4651
  %11 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymapn, align 8, !dbg !4652
  %flag = getelementptr inbounds %struct.wmKeyMap, %struct.wmKeyMap* %11, i32 0, i32 7, !dbg !4653
  %12 = load i16, i16* %flag, align 4, !dbg !4654
  %conv = sext i16 %12 to i32, !dbg !4654
  %and = and i32 %conv, -69, !dbg !4654
  %conv3 = trunc i32 %and to i16, !dbg !4654
  store i16 %conv3, i16* %flag, align 4, !dbg !4654
  %13 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap.addr, align 8, !dbg !4655
  %diff_items = getelementptr inbounds %struct.wmKeyMap, %struct.wmKeyMap* %13, i32 0, i32 3, !dbg !4657
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %diff_items, i32 0, i32 0, !dbg !4658
  %14 = load i8*, i8** %first, align 8, !dbg !4658
  %15 = bitcast i8* %14 to %struct.wmKeyMapDiffItem*, !dbg !4655
  store %struct.wmKeyMapDiffItem* %15, %struct.wmKeyMapDiffItem** %kmdi, align 8, !dbg !4659
  br label %for.cond, !dbg !4660

for.cond:                                         ; preds = %for.inc, %entry
  %16 = load %struct.wmKeyMapDiffItem*, %struct.wmKeyMapDiffItem** %kmdi, align 8, !dbg !4661
  %tobool = icmp ne %struct.wmKeyMapDiffItem* %16, null, !dbg !4663
  br i1 %tobool, label %for.body, label %for.end, !dbg !4663

for.body:                                         ; preds = %for.cond
  %17 = load %struct.wmKeyMapDiffItem*, %struct.wmKeyMapDiffItem** %kmdi, align 8, !dbg !4664
  %call4 = call %struct.wmKeyMapDiffItem* @wm_keymap_diff_item_copy(%struct.wmKeyMapDiffItem* %17), !dbg !4666
  store %struct.wmKeyMapDiffItem* %call4, %struct.wmKeyMapDiffItem** %kmdin, align 8, !dbg !4667
  %18 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymapn, align 8, !dbg !4668
  %items5 = getelementptr inbounds %struct.wmKeyMap, %struct.wmKeyMap* %18, i32 0, i32 2, !dbg !4669
  %19 = load %struct.wmKeyMapDiffItem*, %struct.wmKeyMapDiffItem** %kmdin, align 8, !dbg !4670
  %20 = bitcast %struct.wmKeyMapDiffItem* %19 to i8*, !dbg !4670
  call void @BLI_addtail(%struct.ListBase* %items5, i8* %20), !dbg !4671
  br label %for.inc, !dbg !4672

for.inc:                                          ; preds = %for.body
  %21 = load %struct.wmKeyMapDiffItem*, %struct.wmKeyMapDiffItem** %kmdi, align 8, !dbg !4673
  %next = getelementptr inbounds %struct.wmKeyMapDiffItem, %struct.wmKeyMapDiffItem* %21, i32 0, i32 0, !dbg !4674
  %22 = load %struct.wmKeyMapDiffItem*, %struct.wmKeyMapDiffItem** %next, align 8, !dbg !4674
  store %struct.wmKeyMapDiffItem* %22, %struct.wmKeyMapDiffItem** %kmdi, align 8, !dbg !4675
  br label %for.cond, !dbg !4676, !llvm.loop !4677

for.end:                                          ; preds = %for.cond
  %23 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap.addr, align 8, !dbg !4679
  %items6 = getelementptr inbounds %struct.wmKeyMap, %struct.wmKeyMap* %23, i32 0, i32 2, !dbg !4681
  %first7 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %items6, i32 0, i32 0, !dbg !4682
  %24 = load i8*, i8** %first7, align 8, !dbg !4682
  %25 = bitcast i8* %24 to %struct.wmKeyMapItem*, !dbg !4679
  store %struct.wmKeyMapItem* %25, %struct.wmKeyMapItem** %kmi, align 8, !dbg !4683
  br label %for.cond8, !dbg !4684

for.cond8:                                        ; preds = %for.inc13, %for.end
  %26 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi, align 8, !dbg !4685
  %tobool9 = icmp ne %struct.wmKeyMapItem* %26, null, !dbg !4687
  br i1 %tobool9, label %for.body10, label %for.end15, !dbg !4687

for.body10:                                       ; preds = %for.cond8
  %27 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi, align 8, !dbg !4688
  %call11 = call %struct.wmKeyMapItem* @wm_keymap_item_copy(%struct.wmKeyMapItem* %27), !dbg !4690
  store %struct.wmKeyMapItem* %call11, %struct.wmKeyMapItem** %kmin, align 8, !dbg !4691
  %28 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymapn, align 8, !dbg !4692
  %items12 = getelementptr inbounds %struct.wmKeyMap, %struct.wmKeyMap* %28, i32 0, i32 2, !dbg !4693
  %29 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmin, align 8, !dbg !4694
  %30 = bitcast %struct.wmKeyMapItem* %29 to i8*, !dbg !4694
  call void @BLI_addtail(%struct.ListBase* %items12, i8* %30), !dbg !4695
  br label %for.inc13, !dbg !4696

for.inc13:                                        ; preds = %for.body10
  %31 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi, align 8, !dbg !4697
  %next14 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %31, i32 0, i32 0, !dbg !4698
  %32 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %next14, align 8, !dbg !4698
  store %struct.wmKeyMapItem* %32, %struct.wmKeyMapItem** %kmi, align 8, !dbg !4699
  br label %for.cond8, !dbg !4700, !llvm.loop !4701

for.end15:                                        ; preds = %for.cond8
  %33 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymapn, align 8, !dbg !4703
  ret %struct.wmKeyMap* %33, !dbg !4704
}

; Function Attrs: noinline nounwind uwtable
define internal void @wm_keymap_addon_add(%struct.wmKeyMap* %keymap, %struct.wmKeyMap* %addonmap) #0 !dbg !4705 {
entry:
  %keymap.addr = alloca %struct.wmKeyMap*, align 8
  %addonmap.addr = alloca %struct.wmKeyMap*, align 8
  %kmi = alloca %struct.wmKeyMapItem*, align 8
  %kmin = alloca %struct.wmKeyMapItem*, align 8
  store %struct.wmKeyMap* %keymap, %struct.wmKeyMap** %keymap.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmKeyMap** %keymap.addr, metadata !4708, metadata !DIExpression()), !dbg !4709
  store %struct.wmKeyMap* %addonmap, %struct.wmKeyMap** %addonmap.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmKeyMap** %addonmap.addr, metadata !4710, metadata !DIExpression()), !dbg !4711
  call void @llvm.dbg.declare(metadata %struct.wmKeyMapItem** %kmi, metadata !4712, metadata !DIExpression()), !dbg !4713
  call void @llvm.dbg.declare(metadata %struct.wmKeyMapItem** %kmin, metadata !4714, metadata !DIExpression()), !dbg !4715
  %0 = load %struct.wmKeyMap*, %struct.wmKeyMap** %addonmap.addr, align 8, !dbg !4716
  %items = getelementptr inbounds %struct.wmKeyMap, %struct.wmKeyMap* %0, i32 0, i32 2, !dbg !4718
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %items, i32 0, i32 0, !dbg !4719
  %1 = load i8*, i8** %first, align 8, !dbg !4719
  %2 = bitcast i8* %1 to %struct.wmKeyMapItem*, !dbg !4716
  store %struct.wmKeyMapItem* %2, %struct.wmKeyMapItem** %kmi, align 8, !dbg !4720
  br label %for.cond, !dbg !4721

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi, align 8, !dbg !4722
  %tobool = icmp ne %struct.wmKeyMapItem* %3, null, !dbg !4724
  br i1 %tobool, label %for.body, label %for.end, !dbg !4724

for.body:                                         ; preds = %for.cond
  %4 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi, align 8, !dbg !4725
  %call = call %struct.wmKeyMapItem* @wm_keymap_item_copy(%struct.wmKeyMapItem* %4), !dbg !4727
  store %struct.wmKeyMapItem* %call, %struct.wmKeyMapItem** %kmin, align 8, !dbg !4728
  %5 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap.addr, align 8, !dbg !4729
  %6 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmin, align 8, !dbg !4730
  call void @keymap_item_set_id(%struct.wmKeyMap* %5, %struct.wmKeyMapItem* %6), !dbg !4731
  %7 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap.addr, align 8, !dbg !4732
  %items1 = getelementptr inbounds %struct.wmKeyMap, %struct.wmKeyMap* %7, i32 0, i32 2, !dbg !4733
  %8 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmin, align 8, !dbg !4734
  %9 = bitcast %struct.wmKeyMapItem* %8 to i8*, !dbg !4734
  call void @BLI_addhead(%struct.ListBase* %items1, i8* %9), !dbg !4735
  br label %for.inc, !dbg !4736

for.inc:                                          ; preds = %for.body
  %10 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi, align 8, !dbg !4737
  %next = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %10, i32 0, i32 0, !dbg !4738
  %11 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %next, align 8, !dbg !4738
  store %struct.wmKeyMapItem* %11, %struct.wmKeyMapItem** %kmi, align 8, !dbg !4739
  br label %for.cond, !dbg !4740, !llvm.loop !4741

for.end:                                          ; preds = %for.cond
  ret void, !dbg !4743
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.wmKeyMapItem* @WM_keymap_item_find_id(%struct.wmKeyMap* %keymap, i32 %id) #0 !dbg !4744 {
entry:
  %retval = alloca %struct.wmKeyMapItem*, align 8
  %keymap.addr = alloca %struct.wmKeyMap*, align 8
  %id.addr = alloca i32, align 4
  %kmi = alloca %struct.wmKeyMapItem*, align 8
  store %struct.wmKeyMap* %keymap, %struct.wmKeyMap** %keymap.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmKeyMap** %keymap.addr, metadata !4747, metadata !DIExpression()), !dbg !4748
  store i32 %id, i32* %id.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %id.addr, metadata !4749, metadata !DIExpression()), !dbg !4750
  call void @llvm.dbg.declare(metadata %struct.wmKeyMapItem** %kmi, metadata !4751, metadata !DIExpression()), !dbg !4752
  %0 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap.addr, align 8, !dbg !4753
  %items = getelementptr inbounds %struct.wmKeyMap, %struct.wmKeyMap* %0, i32 0, i32 2, !dbg !4755
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %items, i32 0, i32 0, !dbg !4756
  %1 = load i8*, i8** %first, align 8, !dbg !4756
  %2 = bitcast i8* %1 to %struct.wmKeyMapItem*, !dbg !4753
  store %struct.wmKeyMapItem* %2, %struct.wmKeyMapItem** %kmi, align 8, !dbg !4757
  br label %for.cond, !dbg !4758

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi, align 8, !dbg !4759
  %tobool = icmp ne %struct.wmKeyMapItem* %3, null, !dbg !4761
  br i1 %tobool, label %for.body, label %for.end, !dbg !4761

for.body:                                         ; preds = %for.cond
  %4 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi, align 8, !dbg !4762
  %id1 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %4, i32 0, i32 15, !dbg !4765
  %5 = load i16, i16* %id1, align 4, !dbg !4765
  %conv = sext i16 %5 to i32, !dbg !4762
  %6 = load i32, i32* %id.addr, align 4, !dbg !4766
  %cmp = icmp eq i32 %conv, %6, !dbg !4767
  br i1 %cmp, label %if.then, label %if.end, !dbg !4768

if.then:                                          ; preds = %for.body
  %7 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi, align 8, !dbg !4769
  store %struct.wmKeyMapItem* %7, %struct.wmKeyMapItem** %retval, align 8, !dbg !4771
  br label %return, !dbg !4771

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !4772

for.inc:                                          ; preds = %if.end
  %8 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi, align 8, !dbg !4773
  %next = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %8, i32 0, i32 0, !dbg !4774
  %9 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %next, align 8, !dbg !4774
  store %struct.wmKeyMapItem* %9, %struct.wmKeyMapItem** %kmi, align 8, !dbg !4775
  br label %for.cond, !dbg !4776, !llvm.loop !4777

for.end:                                          ; preds = %for.cond
  store %struct.wmKeyMapItem* null, %struct.wmKeyMapItem** %retval, align 8, !dbg !4779
  br label %return, !dbg !4779

return:                                           ; preds = %for.end, %if.then
  %10 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %retval, align 8, !dbg !4780
  ret %struct.wmKeyMapItem* %10, !dbg !4780
}

; Function Attrs: nounwind readonly
declare dso_local i32 @strcmp(i8*, i8*) #3

declare dso_local void @IDP_FreeProperty(%struct.IDProperty*) #2

declare dso_local %struct.IDProperty* @IDP_CopyProperty(%struct.IDProperty*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @WM_keymap_restore_to_default(%struct.wmKeyMap* %keymap, %struct.bContext* %C) #0 !dbg !4781 {
entry:
  %keymap.addr = alloca %struct.wmKeyMap*, align 8
  %C.addr = alloca %struct.bContext*, align 8
  %wm = alloca %struct.wmWindowManager*, align 8
  %usermap = alloca %struct.wmKeyMap*, align 8
  store %struct.wmKeyMap* %keymap, %struct.wmKeyMap** %keymap.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmKeyMap** %keymap.addr, metadata !4784, metadata !DIExpression()), !dbg !4785
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !4786, metadata !DIExpression()), !dbg !4787
  call void @llvm.dbg.declare(metadata %struct.wmWindowManager** %wm, metadata !4788, metadata !DIExpression()), !dbg !4789
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4790
  %call = call %struct.wmWindowManager* @CTX_wm_manager(%struct.bContext* %0), !dbg !4791
  store %struct.wmWindowManager* %call, %struct.wmWindowManager** %wm, align 8, !dbg !4789
  call void @llvm.dbg.declare(metadata %struct.wmKeyMap** %usermap, metadata !4792, metadata !DIExpression()), !dbg !4793
  %1 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap.addr, align 8, !dbg !4794
  %idname = getelementptr inbounds %struct.wmKeyMap, %struct.wmKeyMap* %1, i32 0, i32 4, !dbg !4795
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %idname, i64 0, i64 0, !dbg !4794
  %2 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap.addr, align 8, !dbg !4796
  %spaceid = getelementptr inbounds %struct.wmKeyMap, %struct.wmKeyMap* %2, i32 0, i32 5, !dbg !4797
  %3 = load i16, i16* %spaceid, align 8, !dbg !4797
  %conv = sext i16 %3 to i32, !dbg !4796
  %4 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap.addr, align 8, !dbg !4798
  %regionid = getelementptr inbounds %struct.wmKeyMap, %struct.wmKeyMap* %4, i32 0, i32 6, !dbg !4799
  %5 = load i16, i16* %regionid, align 2, !dbg !4799
  %conv1 = sext i16 %5 to i32, !dbg !4798
  %call2 = call %struct.wmKeyMap* @WM_keymap_list_find(%struct.ListBase* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 42), i8* %arraydecay, i32 %conv, i32 %conv1), !dbg !4800
  store %struct.wmKeyMap* %call2, %struct.wmKeyMap** %usermap, align 8, !dbg !4801
  %6 = load %struct.wmKeyMap*, %struct.wmKeyMap** %usermap, align 8, !dbg !4802
  %tobool = icmp ne %struct.wmKeyMap* %6, null, !dbg !4802
  br i1 %tobool, label %if.then, label %if.end, !dbg !4804

if.then:                                          ; preds = %entry
  %7 = load %struct.wmKeyMap*, %struct.wmKeyMap** %usermap, align 8, !dbg !4805
  call void @WM_keymap_free(%struct.wmKeyMap* %7), !dbg !4807
  %8 = load %struct.wmKeyMap*, %struct.wmKeyMap** %usermap, align 8, !dbg !4808
  %9 = bitcast %struct.wmKeyMap* %8 to i8*, !dbg !4808
  call void @BLI_freelinkN(%struct.ListBase* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 42), i8* %9), !dbg !4809
  call void @WM_keyconfig_update_tag(%struct.wmKeyMap* null, %struct.wmKeyMapItem* null), !dbg !4810
  %10 = load %struct.wmWindowManager*, %struct.wmWindowManager** %wm, align 8, !dbg !4811
  call void @WM_keyconfig_update(%struct.wmWindowManager* %10), !dbg !4812
  br label %if.end, !dbg !4813

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !4814
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.wmKeyMap* @WM_keymap_guess_opname(%struct.bContext* %C, i8* %opname) #0 !dbg !4815 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %opname.addr = alloca i8*, align 8
  %km = alloca %struct.wmKeyMap*, align 8
  %sl = alloca %struct.SpaceLink*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !4818, metadata !DIExpression()), !dbg !4819
  store i8* %opname, i8** %opname.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %opname.addr, metadata !4820, metadata !DIExpression()), !dbg !4821
  call void @llvm.dbg.declare(metadata %struct.wmKeyMap** %km, metadata !4822, metadata !DIExpression()), !dbg !4823
  store %struct.wmKeyMap* null, %struct.wmKeyMap** %km, align 8, !dbg !4823
  call void @llvm.dbg.declare(metadata %struct.SpaceLink** %sl, metadata !4824, metadata !DIExpression()), !dbg !4838
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4839
  %call = call %struct.SpaceLink* @CTX_wm_space_data(%struct.bContext* %0), !dbg !4840
  store %struct.SpaceLink* %call, %struct.SpaceLink** %sl, align 8, !dbg !4838
  %1 = load i8*, i8** %opname.addr, align 8, !dbg !4841
  %call1 = call i32 @strncmp(i8* %1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13, i64 0, i64 0), i64 5) #4, !dbg !4841
  %cmp = icmp eq i32 %call1, 0, !dbg !4841
  br i1 %cmp, label %if.then, label %if.else, !dbg !4843

if.then:                                          ; preds = %entry
  %2 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4844
  %call2 = call %struct.wmKeyMap* @WM_keymap_find_all(%struct.bContext* %2, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.14, i64 0, i64 0), i32 0, i32 0), !dbg !4846
  store %struct.wmKeyMap* %call2, %struct.wmKeyMap** %km, align 8, !dbg !4847
  br label %if.end343, !dbg !4848

if.else:                                          ; preds = %entry
  %3 = load i8*, i8** %opname.addr, align 8, !dbg !4849
  %call3 = call i32 @strncmp(i8* %3, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.15, i64 0, i64 0), i64 9) #4, !dbg !4849
  %cmp4 = icmp eq i32 %call3, 0, !dbg !4849
  br i1 %cmp4, label %if.then13, label %lor.lhs.false, !dbg !4851

lor.lhs.false:                                    ; preds = %if.else
  %4 = load i8*, i8** %opname.addr, align 8, !dbg !4852
  %call5 = call i32 @strncmp(i8* %4, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.16, i64 0, i64 0), i64 9) #4, !dbg !4852
  %cmp6 = icmp eq i32 %call5, 0, !dbg !4852
  br i1 %cmp6, label %if.then13, label %lor.lhs.false7, !dbg !4853

lor.lhs.false7:                                   ; preds = %lor.lhs.false
  %5 = load i8*, i8** %opname.addr, align 8, !dbg !4854
  %call8 = call i32 @strncmp(i8* %5, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.17, i64 0, i64 0), i64 8) #4, !dbg !4854
  %cmp9 = icmp eq i32 %call8, 0, !dbg !4854
  br i1 %cmp9, label %if.then13, label %lor.lhs.false10, !dbg !4855

lor.lhs.false10:                                  ; preds = %lor.lhs.false7
  %6 = load i8*, i8** %opname.addr, align 8, !dbg !4856
  %call11 = call i32 @strncmp(i8* %6, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.18, i64 0, i64 0), i64 8) #4, !dbg !4856
  %cmp12 = icmp eq i32 %call11, 0, !dbg !4856
  br i1 %cmp12, label %if.then13, label %if.else15, !dbg !4857

if.then13:                                        ; preds = %lor.lhs.false10, %lor.lhs.false7, %lor.lhs.false, %if.else
  %7 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4858
  %call14 = call %struct.wmKeyMap* @WM_keymap_find_all(%struct.bContext* %7, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.19, i64 0, i64 0), i32 0, i32 0), !dbg !4860
  store %struct.wmKeyMap* %call14, %struct.wmKeyMap** %km, align 8, !dbg !4861
  br label %if.end342, !dbg !4862

if.else15:                                        ; preds = %lor.lhs.false10
  %8 = load i8*, i8** %opname.addr, align 8, !dbg !4863
  %call16 = call i32 @strncmp(i8* %8, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.20, i64 0, i64 0), i64 10) #4, !dbg !4863
  %cmp17 = icmp eq i32 %call16, 0, !dbg !4863
  br i1 %cmp17, label %if.then18, label %if.else20, !dbg !4865

if.then18:                                        ; preds = %if.else15
  %9 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4866
  %call19 = call %struct.wmKeyMap* @WM_keymap_find_all(%struct.bContext* %9, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.21, i64 0, i64 0), i32 0, i32 0), !dbg !4868
  store %struct.wmKeyMap* %call19, %struct.wmKeyMap** %km, align 8, !dbg !4869
  br label %if.end341, !dbg !4870

if.else20:                                        ; preds = %if.else15
  %10 = load i8*, i8** %opname.addr, align 8, !dbg !4871
  %call21 = call i32 @strncmp(i8* %10, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.22, i64 0, i64 0), i64 9) #4, !dbg !4871
  %cmp22 = icmp eq i32 %call21, 0, !dbg !4871
  br i1 %cmp22, label %if.then23, label %if.else25, !dbg !4873

if.then23:                                        ; preds = %if.else20
  %11 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4874
  %call24 = call %struct.wmKeyMap* @WM_keymap_find_all(%struct.bContext* %11, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.23, i64 0, i64 0), i32 0, i32 0), !dbg !4876
  store %struct.wmKeyMap* %call24, %struct.wmKeyMap** %km, align 8, !dbg !4877
  br label %if.end340, !dbg !4878

if.else25:                                        ; preds = %if.else20
  %12 = load i8*, i8** %opname.addr, align 8, !dbg !4879
  %call26 = call i32 @strncmp(i8* %12, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.24, i64 0, i64 0), i64 7) #4, !dbg !4879
  %cmp27 = icmp eq i32 %call26, 0, !dbg !4879
  br i1 %cmp27, label %if.then31, label %lor.lhs.false28, !dbg !4881

lor.lhs.false28:                                  ; preds = %if.else25
  %13 = load i8*, i8** %opname.addr, align 8, !dbg !4882
  %call29 = call i32 @strncmp(i8* %13, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.25, i64 0, i64 0), i64 7) #4, !dbg !4882
  %cmp30 = icmp eq i32 %call29, 0, !dbg !4882
  br i1 %cmp30, label %if.then31, label %if.else33, !dbg !4883

if.then31:                                        ; preds = %lor.lhs.false28, %if.else25
  %14 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4884
  %call32 = call %struct.wmKeyMap* @WM_keymap_find_all(%struct.bContext* %14, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.14, i64 0, i64 0), i32 0, i32 0), !dbg !4886
  store %struct.wmKeyMap* %call32, %struct.wmKeyMap** %km, align 8, !dbg !4887
  br label %if.end339, !dbg !4888

if.else33:                                        ; preds = %lor.lhs.false28
  %15 = load i8*, i8** %opname.addr, align 8, !dbg !4889
  %call34 = call i32 @strncmp(i8* %15, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.26, i64 0, i64 0), i64 9) #4, !dbg !4889
  %cmp35 = icmp eq i32 %call34, 0, !dbg !4889
  br i1 %cmp35, label %if.then36, label %if.else38, !dbg !4891

if.then36:                                        ; preds = %if.else33
  %16 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4892
  %17 = load %struct.SpaceLink*, %struct.SpaceLink** %sl, align 8, !dbg !4894
  %spacetype = getelementptr inbounds %struct.SpaceLink, %struct.SpaceLink* %17, i32 0, i32 3, !dbg !4895
  %18 = load i32, i32* %spacetype, align 8, !dbg !4895
  %call37 = call %struct.wmKeyMap* @WM_keymap_find_all(%struct.bContext* %16, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.27, i64 0, i64 0), i32 %18, i32 0), !dbg !4896
  store %struct.wmKeyMap* %call37, %struct.wmKeyMap** %km, align 8, !dbg !4897
  br label %if.end338, !dbg !4898

if.else38:                                        ; preds = %if.else33
  %19 = load i8*, i8** %opname.addr, align 8, !dbg !4899
  %call39 = call i32 @strncmp(i8* %19, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.28, i64 0, i64 0), i64 9) #4, !dbg !4899
  %cmp40 = icmp eq i32 %call39, 0, !dbg !4899
  br i1 %cmp40, label %if.then41, label %if.else48, !dbg !4901

if.then41:                                        ; preds = %if.else38
  %20 = load i8*, i8** %opname.addr, align 8, !dbg !4902
  %call42 = call i32 @strncmp(i8* %20, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.29, i64 0, i64 0), i64 18) #4, !dbg !4902
  %cmp43 = icmp eq i32 %call42, 0, !dbg !4902
  br i1 %cmp43, label %if.then44, label %if.else46, !dbg !4905

if.then44:                                        ; preds = %if.then41
  %21 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4906
  %call45 = call %struct.wmKeyMap* @WM_keymap_find_all(%struct.bContext* %21, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.30, i64 0, i64 0), i32 0, i32 0), !dbg !4907
  store %struct.wmKeyMap* %call45, %struct.wmKeyMap** %km, align 8, !dbg !4908
  br label %if.end, !dbg !4909

if.else46:                                        ; preds = %if.then41
  %22 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4910
  %call47 = call %struct.wmKeyMap* @WM_keymap_find_all(%struct.bContext* %22, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.31, i64 0, i64 0), i32 0, i32 0), !dbg !4911
  store %struct.wmKeyMap* %call47, %struct.wmKeyMap** %km, align 8, !dbg !4912
  br label %if.end

if.end:                                           ; preds = %if.else46, %if.then44
  br label %if.end337, !dbg !4913

if.else48:                                        ; preds = %if.else38
  %23 = load i8*, i8** %opname.addr, align 8, !dbg !4914
  %call49 = call i32 @strncmp(i8* %23, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.32, i64 0, i64 0), i64 8) #4, !dbg !4914
  %cmp50 = icmp eq i32 %call49, 0, !dbg !4914
  br i1 %cmp50, label %if.then60, label %lor.lhs.false51, !dbg !4916

lor.lhs.false51:                                  ; preds = %if.else48
  %24 = load i8*, i8** %opname.addr, align 8, !dbg !4917
  %call52 = call i32 @strncmp(i8* %24, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.33, i64 0, i64 0), i64 11) #4, !dbg !4917
  %cmp53 = icmp eq i32 %call52, 0, !dbg !4917
  br i1 %cmp53, label %if.then60, label %lor.lhs.false54, !dbg !4918

lor.lhs.false54:                                  ; preds = %lor.lhs.false51
  %25 = load i8*, i8** %opname.addr, align 8, !dbg !4919
  %call55 = call i32 @strncmp(i8* %25, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.34, i64 0, i64 0), i64 10) #4, !dbg !4919
  %cmp56 = icmp eq i32 %call55, 0, !dbg !4919
  br i1 %cmp56, label %if.then60, label %lor.lhs.false57, !dbg !4920

lor.lhs.false57:                                  ; preds = %lor.lhs.false54
  %26 = load i8*, i8** %opname.addr, align 8, !dbg !4921
  %call58 = call i32 @strncmp(i8* %26, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.35, i64 0, i64 0), i64 12) #4, !dbg !4921
  %cmp59 = icmp eq i32 %call58, 0, !dbg !4921
  br i1 %cmp59, label %if.then60, label %if.else62, !dbg !4922

if.then60:                                        ; preds = %lor.lhs.false57, %lor.lhs.false54, %lor.lhs.false51, %if.else48
  %27 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4923
  %call61 = call %struct.wmKeyMap* @WM_keymap_find_all(%struct.bContext* %27, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.31, i64 0, i64 0), i32 0, i32 0), !dbg !4925
  store %struct.wmKeyMap* %call61, %struct.wmKeyMap** %km, align 8, !dbg !4926
  br label %if.end336, !dbg !4927

if.else62:                                        ; preds = %lor.lhs.false57
  %28 = load i8*, i8** %opname.addr, align 8, !dbg !4928
  %call63 = call i32 @strncmp(i8* %28, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.36, i64 0, i64 0), i64 7) #4, !dbg !4928
  %cmp64 = icmp eq i32 %call63, 0, !dbg !4928
  br i1 %cmp64, label %if.then65, label %if.else75, !dbg !4930

if.then65:                                        ; preds = %if.else62
  %29 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4931
  %call66 = call %struct.wmKeyMap* @WM_keymap_find_all(%struct.bContext* %29, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.37, i64 0, i64 0), i32 0, i32 0), !dbg !4933
  store %struct.wmKeyMap* %call66, %struct.wmKeyMap** %km, align 8, !dbg !4934
  %30 = load %struct.wmKeyMap*, %struct.wmKeyMap** %km, align 8, !dbg !4935
  %tobool = icmp ne %struct.wmKeyMap* %30, null, !dbg !4935
  br i1 %tobool, label %land.lhs.true, label %if.end74, !dbg !4937

land.lhs.true:                                    ; preds = %if.then65
  %31 = load %struct.wmKeyMap*, %struct.wmKeyMap** %km, align 8, !dbg !4938
  %poll = getelementptr inbounds %struct.wmKeyMap, %struct.wmKeyMap* %31, i32 0, i32 9, !dbg !4939
  %32 = load i32 (%struct.bContext*)*, i32 (%struct.bContext*)** %poll, align 8, !dbg !4939
  %tobool67 = icmp ne i32 (%struct.bContext*)* %32, null, !dbg !4938
  br i1 %tobool67, label %land.lhs.true68, label %if.end74, !dbg !4940

land.lhs.true68:                                  ; preds = %land.lhs.true
  %33 = load %struct.wmKeyMap*, %struct.wmKeyMap** %km, align 8, !dbg !4941
  %poll69 = getelementptr inbounds %struct.wmKeyMap, %struct.wmKeyMap* %33, i32 0, i32 9, !dbg !4942
  %34 = load i32 (%struct.bContext*)*, i32 (%struct.bContext*)** %poll69, align 8, !dbg !4942
  %35 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4943
  %call70 = call i32 %34(%struct.bContext* %35), !dbg !4941
  %cmp71 = icmp eq i32 %call70, 0, !dbg !4944
  br i1 %cmp71, label %if.then72, label %if.end74, !dbg !4945

if.then72:                                        ; preds = %land.lhs.true68
  %36 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4946
  %call73 = call %struct.wmKeyMap* @WM_keymap_find_all(%struct.bContext* %36, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.31, i64 0, i64 0), i32 0, i32 0), !dbg !4948
  store %struct.wmKeyMap* %call73, %struct.wmKeyMap** %km, align 8, !dbg !4949
  br label %if.end74, !dbg !4950

if.end74:                                         ; preds = %if.then72, %land.lhs.true68, %land.lhs.true, %if.then65
  br label %if.end335, !dbg !4951

if.else75:                                        ; preds = %if.else62
  %37 = load i8*, i8** %opname.addr, align 8, !dbg !4952
  %call76 = call i32 @strncmp(i8* %37, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.38, i64 0, i64 0), i64 8) #4, !dbg !4952
  %cmp77 = icmp eq i32 %call76, 0, !dbg !4952
  br i1 %cmp77, label %if.then81, label %lor.lhs.false78, !dbg !4954

lor.lhs.false78:                                  ; preds = %if.else75
  %38 = load i8*, i8** %opname.addr, align 8, !dbg !4955
  %call79 = call i32 @strncmp(i8* %38, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.39, i64 0, i64 0), i64 10) #4, !dbg !4955
  %cmp80 = icmp eq i32 %call79, 0, !dbg !4955
  br i1 %cmp80, label %if.then81, label %if.else94, !dbg !4956

if.then81:                                        ; preds = %lor.lhs.false78, %if.else75
  %39 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4957
  %call82 = call %struct.wmKeyMap* @WM_keymap_find_all(%struct.bContext* %39, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.40, i64 0, i64 0), i32 0, i32 0), !dbg !4959
  store %struct.wmKeyMap* %call82, %struct.wmKeyMap** %km, align 8, !dbg !4960
  %40 = load %struct.wmKeyMap*, %struct.wmKeyMap** %km, align 8, !dbg !4961
  %tobool83 = icmp ne %struct.wmKeyMap* %40, null, !dbg !4961
  br i1 %tobool83, label %land.lhs.true84, label %if.end93, !dbg !4963

land.lhs.true84:                                  ; preds = %if.then81
  %41 = load %struct.wmKeyMap*, %struct.wmKeyMap** %km, align 8, !dbg !4964
  %poll85 = getelementptr inbounds %struct.wmKeyMap, %struct.wmKeyMap* %41, i32 0, i32 9, !dbg !4965
  %42 = load i32 (%struct.bContext*)*, i32 (%struct.bContext*)** %poll85, align 8, !dbg !4965
  %tobool86 = icmp ne i32 (%struct.bContext*)* %42, null, !dbg !4964
  br i1 %tobool86, label %land.lhs.true87, label %if.end93, !dbg !4966

land.lhs.true87:                                  ; preds = %land.lhs.true84
  %43 = load %struct.wmKeyMap*, %struct.wmKeyMap** %km, align 8, !dbg !4967
  %poll88 = getelementptr inbounds %struct.wmKeyMap, %struct.wmKeyMap* %43, i32 0, i32 9, !dbg !4968
  %44 = load i32 (%struct.bContext*)*, i32 (%struct.bContext*)** %poll88, align 8, !dbg !4968
  %45 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4969
  %call89 = call i32 %44(%struct.bContext* %45), !dbg !4967
  %cmp90 = icmp eq i32 %call89, 0, !dbg !4970
  br i1 %cmp90, label %if.then91, label %if.end93, !dbg !4971

if.then91:                                        ; preds = %land.lhs.true87
  %46 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4972
  %call92 = call %struct.wmKeyMap* @WM_keymap_find_all(%struct.bContext* %46, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.31, i64 0, i64 0), i32 0, i32 0), !dbg !4974
  store %struct.wmKeyMap* %call92, %struct.wmKeyMap** %km, align 8, !dbg !4975
  br label %if.end93, !dbg !4976

if.end93:                                         ; preds = %if.then91, %land.lhs.true87, %land.lhs.true84, %if.then81
  br label %if.end334, !dbg !4977

if.else94:                                        ; preds = %lor.lhs.false78
  %47 = load i8*, i8** %opname.addr, align 8, !dbg !4978
  %call95 = call i32 @strncmp(i8* %47, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.41, i64 0, i64 0), i64 11) #4, !dbg !4978
  %cmp96 = icmp eq i32 %call95, 0, !dbg !4978
  br i1 %cmp96, label %if.then100, label %lor.lhs.false97, !dbg !4980

lor.lhs.false97:                                  ; preds = %if.else94
  %48 = load i8*, i8** %opname.addr, align 8, !dbg !4981
  %call98 = call i32 @strncmp(i8* %48, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.42, i64 0, i64 0), i64 9) #4, !dbg !4981
  %cmp99 = icmp eq i32 %call98, 0, !dbg !4981
  br i1 %cmp99, label %if.then100, label %if.else102, !dbg !4982

if.then100:                                       ; preds = %lor.lhs.false97, %if.else94
  %49 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4983
  %call101 = call %struct.wmKeyMap* @WM_keymap_find_all(%struct.bContext* %49, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.43, i64 0, i64 0), i32 0, i32 0), !dbg !4985
  store %struct.wmKeyMap* %call101, %struct.wmKeyMap** %km, align 8, !dbg !4986
  br label %if.end333, !dbg !4987

if.else102:                                       ; preds = %lor.lhs.false97
  %50 = load i8*, i8** %opname.addr, align 8, !dbg !4988
  %call103 = call i32 @strncmp(i8* %50, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.44, i64 0, i64 0), i64 7) #4, !dbg !4988
  %cmp104 = icmp eq i32 %call103, 0, !dbg !4988
  br i1 %cmp104, label %if.then108, label %lor.lhs.false105, !dbg !4990

lor.lhs.false105:                                 ; preds = %if.else102
  %51 = load i8*, i8** %opname.addr, align 8, !dbg !4991
  %call106 = call i32 @strncmp(i8* %51, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.45, i64 0, i64 0), i64 10) #4, !dbg !4991
  %cmp107 = icmp eq i32 %call106, 0, !dbg !4991
  br i1 %cmp107, label %if.then108, label %if.else110, !dbg !4992

if.then108:                                       ; preds = %lor.lhs.false105, %if.else102
  %52 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4993
  %call109 = call %struct.wmKeyMap* @WM_keymap_find_all(%struct.bContext* %52, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.46, i64 0, i64 0), i32 0, i32 0), !dbg !4995
  store %struct.wmKeyMap* %call109, %struct.wmKeyMap** %km, align 8, !dbg !4996
  br label %if.end332, !dbg !4997

if.else110:                                       ; preds = %lor.lhs.false105
  %53 = load i8*, i8** %opname.addr, align 8, !dbg !4998
  %call111 = call i32 @strncmp(i8* %53, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.47, i64 0, i64 0), i64 9) #4, !dbg !4998
  %cmp112 = icmp eq i32 %call111, 0, !dbg !4998
  br i1 %cmp112, label %if.then113, label %if.else118, !dbg !5000

if.then113:                                       ; preds = %if.else110
  %54 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5001
  %call114 = call i32 @CTX_data_mode_enum(%struct.bContext* %54), !dbg !5003
  switch i32 %call114, label %sw.epilog [
    i32 2, label %sw.bb
    i32 1, label %sw.bb116
  ], !dbg !5004

sw.bb:                                            ; preds = %if.then113
  %55 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5005
  %call115 = call %struct.wmKeyMap* @WM_keymap_find_all(%struct.bContext* %55, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.48, i64 0, i64 0), i32 0, i32 0), !dbg !5007
  store %struct.wmKeyMap* %call115, %struct.wmKeyMap** %km, align 8, !dbg !5008
  br label %sw.epilog, !dbg !5009

sw.bb116:                                         ; preds = %if.then113
  %56 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5010
  %call117 = call %struct.wmKeyMap* @WM_keymap_find_all(%struct.bContext* %56, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.49, i64 0, i64 0), i32 0, i32 0), !dbg !5011
  store %struct.wmKeyMap* %call117, %struct.wmKeyMap** %km, align 8, !dbg !5012
  br label %sw.epilog, !dbg !5013

sw.epilog:                                        ; preds = %if.then113, %sw.bb116, %sw.bb
  br label %if.end331, !dbg !5014

if.else118:                                       ; preds = %if.else110
  %57 = load i8*, i8** %opname.addr, align 8, !dbg !5015
  %call119 = call i32 @strncmp(i8* %57, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.50, i64 0, i64 0), i64 8) #4, !dbg !5015
  %cmp120 = icmp eq i32 %call119, 0, !dbg !5015
  br i1 %cmp120, label %if.then121, label %if.else134, !dbg !5017

if.then121:                                       ; preds = %if.else118
  %58 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5018
  %call122 = call %struct.wmKeyMap* @WM_keymap_find_all(%struct.bContext* %58, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.51, i64 0, i64 0), i32 0, i32 0), !dbg !5020
  store %struct.wmKeyMap* %call122, %struct.wmKeyMap** %km, align 8, !dbg !5021
  %59 = load %struct.wmKeyMap*, %struct.wmKeyMap** %km, align 8, !dbg !5022
  %tobool123 = icmp ne %struct.wmKeyMap* %59, null, !dbg !5022
  br i1 %tobool123, label %land.lhs.true124, label %if.end133, !dbg !5024

land.lhs.true124:                                 ; preds = %if.then121
  %60 = load %struct.wmKeyMap*, %struct.wmKeyMap** %km, align 8, !dbg !5025
  %poll125 = getelementptr inbounds %struct.wmKeyMap, %struct.wmKeyMap* %60, i32 0, i32 9, !dbg !5026
  %61 = load i32 (%struct.bContext*)*, i32 (%struct.bContext*)** %poll125, align 8, !dbg !5026
  %tobool126 = icmp ne i32 (%struct.bContext*)* %61, null, !dbg !5025
  br i1 %tobool126, label %land.lhs.true127, label %if.end133, !dbg !5027

land.lhs.true127:                                 ; preds = %land.lhs.true124
  %62 = load %struct.wmKeyMap*, %struct.wmKeyMap** %km, align 8, !dbg !5028
  %poll128 = getelementptr inbounds %struct.wmKeyMap, %struct.wmKeyMap* %62, i32 0, i32 9, !dbg !5029
  %63 = load i32 (%struct.bContext*)*, i32 (%struct.bContext*)** %poll128, align 8, !dbg !5029
  %64 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5030
  %call129 = call i32 %63(%struct.bContext* %64), !dbg !5028
  %cmp130 = icmp eq i32 %call129, 0, !dbg !5031
  br i1 %cmp130, label %if.then131, label %if.end133, !dbg !5032

if.then131:                                       ; preds = %land.lhs.true127
  %65 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5033
  %call132 = call %struct.wmKeyMap* @WM_keymap_find_all(%struct.bContext* %65, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.31, i64 0, i64 0), i32 0, i32 0), !dbg !5035
  store %struct.wmKeyMap* %call132, %struct.wmKeyMap** %km, align 8, !dbg !5036
  br label %if.end133, !dbg !5037

if.end133:                                        ; preds = %if.then131, %land.lhs.true127, %land.lhs.true124, %if.then121
  br label %if.end330, !dbg !5038

if.else134:                                       ; preds = %if.else118
  %66 = load i8*, i8** %opname.addr, align 8, !dbg !5039
  %call135 = call i32 @strncmp(i8* %66, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.52, i64 0, i64 0), i64 10) #4, !dbg !5039
  %cmp136 = icmp eq i32 %call135, 0, !dbg !5039
  br i1 %cmp136, label %if.then137, label %if.else139, !dbg !5041

if.then137:                                       ; preds = %if.else134
  %67 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5042
  %call138 = call %struct.wmKeyMap* @WM_keymap_find_all(%struct.bContext* %67, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.53, i64 0, i64 0), i32 0, i32 0), !dbg !5044
  store %struct.wmKeyMap* %call138, %struct.wmKeyMap** %km, align 8, !dbg !5045
  br label %if.end329, !dbg !5046

if.else139:                                       ; preds = %if.else134
  %68 = load i8*, i8** %opname.addr, align 8, !dbg !5047
  %call140 = call i32 @strncmp(i8* %68, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.54, i64 0, i64 0), i64 11) #4, !dbg !5047
  %cmp141 = icmp eq i32 %call140, 0, !dbg !5047
  br i1 %cmp141, label %if.then142, label %if.else144, !dbg !5049

if.then142:                                       ; preds = %if.else139
  %69 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5050
  %call143 = call %struct.wmKeyMap* @WM_keymap_find_all(%struct.bContext* %69, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.55, i64 0, i64 0), i32 0, i32 0), !dbg !5052
  store %struct.wmKeyMap* %call143, %struct.wmKeyMap** %km, align 8, !dbg !5053
  br label %if.end328, !dbg !5054

if.else144:                                       ; preds = %if.else139
  %70 = load i8*, i8** %opname.addr, align 8, !dbg !5055
  %call145 = call i32 @strncmp(i8* %70, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.56, i64 0, i64 0), i64 7) #4, !dbg !5055
  %cmp146 = icmp eq i32 %call145, 0, !dbg !5055
  br i1 %cmp146, label %if.then147, label %if.else149, !dbg !5057

if.then147:                                       ; preds = %if.else144
  %71 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5058
  %call148 = call %struct.wmKeyMap* @WM_keymap_find_all(%struct.bContext* %71, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.57, i64 0, i64 0), i32 0, i32 0), !dbg !5060
  store %struct.wmKeyMap* %call148, %struct.wmKeyMap** %km, align 8, !dbg !5061
  br label %if.end327, !dbg !5062

if.else149:                                       ; preds = %if.else144
  %72 = load i8*, i8** %opname.addr, align 8, !dbg !5063
  %call150 = call i32 @strncmp(i8* %72, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.58, i64 0, i64 0), i64 20) #4, !dbg !5063
  %cmp151 = icmp eq i32 %call150, 0, !dbg !5063
  br i1 %cmp151, label %if.then152, label %if.else154, !dbg !5065

if.then152:                                       ; preds = %if.else149
  %73 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5066
  %call153 = call %struct.wmKeyMap* @WM_keymap_find_all(%struct.bContext* %73, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.59, i64 0, i64 0), i32 0, i32 0), !dbg !5068
  store %struct.wmKeyMap* %call153, %struct.wmKeyMap** %km, align 8, !dbg !5069
  br label %if.end326, !dbg !5070

if.else154:                                       ; preds = %if.else149
  %74 = load i8*, i8** %opname.addr, align 8, !dbg !5071
  %call155 = call i32 @strncmp(i8* %74, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.60, i64 0, i64 0), i64 8) #4, !dbg !5071
  %cmp156 = icmp eq i32 %call155, 0, !dbg !5071
  br i1 %cmp156, label %if.then157, label %if.else166, !dbg !5073

if.then157:                                       ; preds = %if.else154
  %75 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5074
  %call158 = call i32 @CTX_data_mode_enum(%struct.bContext* %75), !dbg !5076
  switch i32 %call158, label %sw.epilog165 [
    i32 8, label %sw.bb159
    i32 4, label %sw.bb161
    i32 16, label %sw.bb163
  ], !dbg !5077

sw.bb159:                                         ; preds = %if.then157
  %76 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5078
  %call160 = call %struct.wmKeyMap* @WM_keymap_find_all(%struct.bContext* %76, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.61, i64 0, i64 0), i32 0, i32 0), !dbg !5080
  store %struct.wmKeyMap* %call160, %struct.wmKeyMap** %km, align 8, !dbg !5081
  br label %sw.epilog165, !dbg !5082

sw.bb161:                                         ; preds = %if.then157
  %77 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5083
  %call162 = call %struct.wmKeyMap* @WM_keymap_find_all(%struct.bContext* %77, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.62, i64 0, i64 0), i32 0, i32 0), !dbg !5084
  store %struct.wmKeyMap* %call162, %struct.wmKeyMap** %km, align 8, !dbg !5085
  br label %sw.epilog165, !dbg !5086

sw.bb163:                                         ; preds = %if.then157
  %78 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5087
  %call164 = call %struct.wmKeyMap* @WM_keymap_find_all(%struct.bContext* %78, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.63, i64 0, i64 0), i32 0, i32 0), !dbg !5088
  store %struct.wmKeyMap* %call164, %struct.wmKeyMap** %km, align 8, !dbg !5089
  br label %sw.epilog165, !dbg !5090

sw.epilog165:                                     ; preds = %if.then157, %sw.bb163, %sw.bb161, %sw.bb159
  br label %if.end325, !dbg !5091

if.else166:                                       ; preds = %if.else154
  %79 = load i8*, i8** %opname.addr, align 8, !dbg !5092
  %call167 = call i32 @strncmp(i8* %79, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.64, i64 0, i64 0), i64 7) #4, !dbg !5092
  %cmp168 = icmp eq i32 %call167, 0, !dbg !5092
  br i1 %cmp168, label %if.then169, label %if.else172, !dbg !5094

if.then169:                                       ; preds = %if.else166
  %80 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5095
  %81 = load %struct.SpaceLink*, %struct.SpaceLink** %sl, align 8, !dbg !5097
  %spacetype170 = getelementptr inbounds %struct.SpaceLink, %struct.SpaceLink* %81, i32 0, i32 3, !dbg !5098
  %82 = load i32, i32* %spacetype170, align 8, !dbg !5098
  %call171 = call %struct.wmKeyMap* @WM_keymap_find_all(%struct.bContext* %80, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.65, i64 0, i64 0), i32 %82, i32 0), !dbg !5099
  store %struct.wmKeyMap* %call171, %struct.wmKeyMap** %km, align 8, !dbg !5100
  br label %if.end324, !dbg !5101

if.else172:                                       ; preds = %if.else166
  %83 = load i8*, i8** %opname.addr, align 8, !dbg !5102
  %call173 = call i32 @strncmp(i8* %83, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.66, i64 0, i64 0), i64 8) #4, !dbg !5102
  %cmp174 = icmp eq i32 %call173, 0, !dbg !5102
  br i1 %cmp174, label %if.then175, label %if.else178, !dbg !5104

if.then175:                                       ; preds = %if.else172
  %84 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5105
  %85 = load %struct.SpaceLink*, %struct.SpaceLink** %sl, align 8, !dbg !5107
  %spacetype176 = getelementptr inbounds %struct.SpaceLink, %struct.SpaceLink* %85, i32 0, i32 3, !dbg !5108
  %86 = load i32, i32* %spacetype176, align 8, !dbg !5108
  %call177 = call %struct.wmKeyMap* @WM_keymap_find_all(%struct.bContext* %84, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.67, i64 0, i64 0), i32 %86, i32 0), !dbg !5109
  store %struct.wmKeyMap* %call177, %struct.wmKeyMap** %km, align 8, !dbg !5110
  br label %if.end323, !dbg !5111

if.else178:                                       ; preds = %if.else172
  %87 = load i8*, i8** %opname.addr, align 8, !dbg !5112
  %call179 = call i32 @strncmp(i8* %87, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.68, i64 0, i64 0), i64 7) #4, !dbg !5112
  %cmp180 = icmp eq i32 %call179, 0, !dbg !5112
  br i1 %cmp180, label %if.then181, label %if.else184, !dbg !5114

if.then181:                                       ; preds = %if.else178
  %88 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5115
  %89 = load %struct.SpaceLink*, %struct.SpaceLink** %sl, align 8, !dbg !5117
  %spacetype182 = getelementptr inbounds %struct.SpaceLink, %struct.SpaceLink* %89, i32 0, i32 3, !dbg !5118
  %90 = load i32, i32* %spacetype182, align 8, !dbg !5118
  %call183 = call %struct.wmKeyMap* @WM_keymap_find_all(%struct.bContext* %88, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.69, i64 0, i64 0), i32 %90, i32 0), !dbg !5119
  store %struct.wmKeyMap* %call183, %struct.wmKeyMap** %km, align 8, !dbg !5120
  br label %if.end322, !dbg !5121

if.else184:                                       ; preds = %if.else178
  %91 = load i8*, i8** %opname.addr, align 8, !dbg !5122
  %call185 = call i32 @strncmp(i8* %91, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.70, i64 0, i64 0), i64 7) #4, !dbg !5122
  %cmp186 = icmp eq i32 %call185, 0, !dbg !5122
  br i1 %cmp186, label %if.then187, label %if.else189, !dbg !5124

if.then187:                                       ; preds = %if.else184
  %92 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5125
  %call188 = call %struct.wmKeyMap* @WM_keymap_find_all(%struct.bContext* %92, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.71, i64 0, i64 0), i32 0, i32 0), !dbg !5127
  store %struct.wmKeyMap* %call188, %struct.wmKeyMap** %km, align 8, !dbg !5128
  br label %if.end321, !dbg !5129

if.else189:                                       ; preds = %if.else184
  %93 = load i8*, i8** %opname.addr, align 8, !dbg !5130
  %call190 = call i32 @strncmp(i8* %93, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.72, i64 0, i64 0), i64 5) #4, !dbg !5130
  %cmp191 = icmp eq i32 %call190, 0, !dbg !5130
  br i1 %cmp191, label %if.then192, label %if.else195, !dbg !5132

if.then192:                                       ; preds = %if.else189
  %94 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5133
  %95 = load %struct.SpaceLink*, %struct.SpaceLink** %sl, align 8, !dbg !5135
  %spacetype193 = getelementptr inbounds %struct.SpaceLink, %struct.SpaceLink* %95, i32 0, i32 3, !dbg !5136
  %96 = load i32, i32* %spacetype193, align 8, !dbg !5136
  %call194 = call %struct.wmKeyMap* @WM_keymap_find_all(%struct.bContext* %94, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.73, i64 0, i64 0), i32 %96, i32 0), !dbg !5137
  store %struct.wmKeyMap* %call194, %struct.wmKeyMap** %km, align 8, !dbg !5138
  br label %if.end320, !dbg !5139

if.else195:                                       ; preds = %if.else189
  %97 = load i8*, i8** %opname.addr, align 8, !dbg !5140
  %call196 = call i32 @strncmp(i8* %97, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.74, i64 0, i64 0), i64 7) #4, !dbg !5140
  %cmp197 = icmp eq i32 %call196, 0, !dbg !5140
  br i1 %cmp197, label %if.then198, label %if.else201, !dbg !5142

if.then198:                                       ; preds = %if.else195
  %98 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5143
  %99 = load %struct.SpaceLink*, %struct.SpaceLink** %sl, align 8, !dbg !5145
  %spacetype199 = getelementptr inbounds %struct.SpaceLink, %struct.SpaceLink* %99, i32 0, i32 3, !dbg !5146
  %100 = load i32, i32* %spacetype199, align 8, !dbg !5146
  %call200 = call %struct.wmKeyMap* @WM_keymap_find_all(%struct.bContext* %98, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.75, i64 0, i64 0), i32 %100, i32 0), !dbg !5147
  store %struct.wmKeyMap* %call200, %struct.wmKeyMap** %km, align 8, !dbg !5148
  br label %if.end319, !dbg !5149

if.else201:                                       ; preds = %if.else195
  %101 = load i8*, i8** %opname.addr, align 8, !dbg !5150
  %call202 = call i32 @strncmp(i8* %101, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.76, i64 0, i64 0), i64 16) #4, !dbg !5150
  %cmp203 = icmp eq i32 %call202, 0, !dbg !5150
  br i1 %cmp203, label %if.then204, label %if.else207, !dbg !5152

if.then204:                                       ; preds = %if.else201
  %102 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5153
  %103 = load %struct.SpaceLink*, %struct.SpaceLink** %sl, align 8, !dbg !5155
  %spacetype205 = getelementptr inbounds %struct.SpaceLink, %struct.SpaceLink* %103, i32 0, i32 3, !dbg !5156
  %104 = load i32, i32* %spacetype205, align 8, !dbg !5156
  %call206 = call %struct.wmKeyMap* @WM_keymap_find_all(%struct.bContext* %102, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.77, i64 0, i64 0), i32 %104, i32 0), !dbg !5157
  store %struct.wmKeyMap* %call206, %struct.wmKeyMap** %km, align 8, !dbg !5158
  br label %if.end318, !dbg !5159

if.else207:                                       ; preds = %if.else201
  %105 = load i8*, i8** %opname.addr, align 8, !dbg !5160
  %call208 = call i32 @strncmp(i8* %105, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.78, i64 0, i64 0), i64 7) #4, !dbg !5160
  %cmp209 = icmp eq i32 %call208, 0, !dbg !5160
  br i1 %cmp209, label %if.then210, label %if.else212, !dbg !5162

if.then210:                                       ; preds = %if.else207
  %106 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5163
  %call211 = call %struct.wmKeyMap* @WM_keymap_find_all(%struct.bContext* %106, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.79, i64 0, i64 0), i32 0, i32 0), !dbg !5165
  store %struct.wmKeyMap* %call211, %struct.wmKeyMap** %km, align 8, !dbg !5166
  br label %if.end317, !dbg !5167

if.else212:                                       ; preds = %if.else207
  %107 = load i8*, i8** %opname.addr, align 8, !dbg !5168
  %call213 = call i32 @strncmp(i8* %107, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.80, i64 0, i64 0), i64 8) #4, !dbg !5168
  %cmp214 = icmp eq i32 %call213, 0, !dbg !5168
  br i1 %cmp214, label %if.then215, label %if.else218, !dbg !5170

if.then215:                                       ; preds = %if.else212
  %108 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5171
  %109 = load %struct.SpaceLink*, %struct.SpaceLink** %sl, align 8, !dbg !5173
  %spacetype216 = getelementptr inbounds %struct.SpaceLink, %struct.SpaceLink* %109, i32 0, i32 3, !dbg !5174
  %110 = load i32, i32* %spacetype216, align 8, !dbg !5174
  %call217 = call %struct.wmKeyMap* @WM_keymap_find_all(%struct.bContext* %108, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.81, i64 0, i64 0), i32 %110, i32 0), !dbg !5175
  store %struct.wmKeyMap* %call217, %struct.wmKeyMap** %km, align 8, !dbg !5176
  br label %if.end316, !dbg !5177

if.else218:                                       ; preds = %if.else212
  %111 = load i8*, i8** %opname.addr, align 8, !dbg !5178
  %call219 = call i32 @strncmp(i8* %111, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.82, i64 0, i64 0), i64 9) #4, !dbg !5178
  %cmp220 = icmp eq i32 %call219, 0, !dbg !5178
  br i1 %cmp220, label %if.then221, label %if.else224, !dbg !5180

if.then221:                                       ; preds = %if.else218
  %112 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5181
  %113 = load %struct.SpaceLink*, %struct.SpaceLink** %sl, align 8, !dbg !5183
  %spacetype222 = getelementptr inbounds %struct.SpaceLink, %struct.SpaceLink* %113, i32 0, i32 3, !dbg !5184
  %114 = load i32, i32* %spacetype222, align 8, !dbg !5184
  %call223 = call %struct.wmKeyMap* @WM_keymap_find_all(%struct.bContext* %112, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.83, i64 0, i64 0), i32 %114, i32 0), !dbg !5185
  store %struct.wmKeyMap* %call223, %struct.wmKeyMap** %km, align 8, !dbg !5186
  br label %if.end315, !dbg !5187

if.else224:                                       ; preds = %if.else218
  %115 = load i8*, i8** %opname.addr, align 8, !dbg !5188
  %call225 = call i32 @strncmp(i8* %115, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.84, i64 0, i64 0), i64 6) #4, !dbg !5188
  %cmp226 = icmp eq i32 %call225, 0, !dbg !5188
  br i1 %cmp226, label %if.then227, label %if.else230, !dbg !5190

if.then227:                                       ; preds = %if.else224
  %116 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5191
  %117 = load %struct.SpaceLink*, %struct.SpaceLink** %sl, align 8, !dbg !5193
  %spacetype228 = getelementptr inbounds %struct.SpaceLink, %struct.SpaceLink* %117, i32 0, i32 3, !dbg !5194
  %118 = load i32, i32* %spacetype228, align 8, !dbg !5194
  %call229 = call %struct.wmKeyMap* @WM_keymap_find_all(%struct.bContext* %116, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.85, i64 0, i64 0), i32 %118, i32 0), !dbg !5195
  store %struct.wmKeyMap* %call229, %struct.wmKeyMap** %km, align 8, !dbg !5196
  br label %if.end314, !dbg !5197

if.else230:                                       ; preds = %if.else224
  %119 = load i8*, i8** %opname.addr, align 8, !dbg !5198
  %call231 = call i32 @strncmp(i8* %119, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.86, i64 0, i64 0), i64 9) #4, !dbg !5198
  %cmp232 = icmp eq i32 %call231, 0, !dbg !5198
  br i1 %cmp232, label %if.then233, label %if.else236, !dbg !5200

if.then233:                                       ; preds = %if.else230
  %120 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5201
  %121 = load %struct.SpaceLink*, %struct.SpaceLink** %sl, align 8, !dbg !5203
  %spacetype234 = getelementptr inbounds %struct.SpaceLink, %struct.SpaceLink* %121, i32 0, i32 3, !dbg !5204
  %122 = load i32, i32* %spacetype234, align 8, !dbg !5204
  %call235 = call %struct.wmKeyMap* @WM_keymap_find_all(%struct.bContext* %120, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.87, i64 0, i64 0), i32 %122, i32 0), !dbg !5205
  store %struct.wmKeyMap* %call235, %struct.wmKeyMap** %km, align 8, !dbg !5206
  br label %if.end313, !dbg !5207

if.else236:                                       ; preds = %if.else230
  %123 = load i8*, i8** %opname.addr, align 8, !dbg !5208
  %call237 = call i32 @strncmp(i8* %123, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.88, i64 0, i64 0), i64 7) #4, !dbg !5208
  %cmp238 = icmp eq i32 %call237, 0, !dbg !5208
  br i1 %cmp238, label %if.then239, label %if.else242, !dbg !5210

if.then239:                                       ; preds = %if.else236
  %124 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5211
  %125 = load %struct.SpaceLink*, %struct.SpaceLink** %sl, align 8, !dbg !5213
  %spacetype240 = getelementptr inbounds %struct.SpaceLink, %struct.SpaceLink* %125, i32 0, i32 3, !dbg !5214
  %126 = load i32, i32* %spacetype240, align 8, !dbg !5214
  %call241 = call %struct.wmKeyMap* @WM_keymap_find_all(%struct.bContext* %124, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.89, i64 0, i64 0), i32 %126, i32 0), !dbg !5215
  store %struct.wmKeyMap* %call241, %struct.wmKeyMap** %km, align 8, !dbg !5216
  br label %if.end312, !dbg !5217

if.else242:                                       ; preds = %if.else236
  %127 = load i8*, i8** %opname.addr, align 8, !dbg !5218
  %call243 = call i32 @strncmp(i8* %127, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.90, i64 0, i64 0), i64 12) #4, !dbg !5218
  %cmp244 = icmp eq i32 %call243, 0, !dbg !5218
  br i1 %cmp244, label %if.then245, label %if.else248, !dbg !5220

if.then245:                                       ; preds = %if.else242
  %128 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5221
  %129 = load %struct.SpaceLink*, %struct.SpaceLink** %sl, align 8, !dbg !5223
  %spacetype246 = getelementptr inbounds %struct.SpaceLink, %struct.SpaceLink* %129, i32 0, i32 3, !dbg !5224
  %130 = load i32, i32* %spacetype246, align 8, !dbg !5224
  %call247 = call %struct.wmKeyMap* @WM_keymap_find_all(%struct.bContext* %128, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.91, i64 0, i64 0), i32 %130, i32 0), !dbg !5225
  store %struct.wmKeyMap* %call247, %struct.wmKeyMap** %km, align 8, !dbg !5226
  br label %if.end311, !dbg !5227

if.else248:                                       ; preds = %if.else242
  %131 = load i8*, i8** %opname.addr, align 8, !dbg !5228
  %call249 = call i32 @strncmp(i8* %131, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.92, i64 0, i64 0), i64 10) #4, !dbg !5228
  %cmp250 = icmp eq i32 %call249, 0, !dbg !5228
  br i1 %cmp250, label %if.then251, label %if.else254, !dbg !5230

if.then251:                                       ; preds = %if.else248
  %132 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5231
  %133 = load %struct.SpaceLink*, %struct.SpaceLink** %sl, align 8, !dbg !5233
  %spacetype252 = getelementptr inbounds %struct.SpaceLink, %struct.SpaceLink* %133, i32 0, i32 3, !dbg !5234
  %134 = load i32, i32* %spacetype252, align 8, !dbg !5234
  %call253 = call %struct.wmKeyMap* @WM_keymap_find_all(%struct.bContext* %132, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.93, i64 0, i64 0), i32 %134, i32 0), !dbg !5235
  store %struct.wmKeyMap* %call253, %struct.wmKeyMap** %km, align 8, !dbg !5236
  br label %if.end310, !dbg !5237

if.else254:                                       ; preds = %if.else248
  %135 = load i8*, i8** %opname.addr, align 8, !dbg !5238
  %call255 = call i32 @strncmp(i8* %135, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.94, i64 0, i64 0), i64 7) #4, !dbg !5238
  %cmp256 = icmp eq i32 %call255, 0, !dbg !5238
  br i1 %cmp256, label %if.then257, label %if.else260, !dbg !5240

if.then257:                                       ; preds = %if.else254
  %136 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5241
  %137 = load %struct.SpaceLink*, %struct.SpaceLink** %sl, align 8, !dbg !5243
  %spacetype258 = getelementptr inbounds %struct.SpaceLink, %struct.SpaceLink* %137, i32 0, i32 3, !dbg !5244
  %138 = load i32, i32* %spacetype258, align 8, !dbg !5244
  %call259 = call %struct.wmKeyMap* @WM_keymap_find_all(%struct.bContext* %136, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.95, i64 0, i64 0), i32 %138, i32 0), !dbg !5245
  store %struct.wmKeyMap* %call259, %struct.wmKeyMap** %km, align 8, !dbg !5246
  br label %if.end309, !dbg !5247

if.else260:                                       ; preds = %if.else254
  %139 = load i8*, i8** %opname.addr, align 8, !dbg !5248
  %call261 = call i32 @strncmp(i8* %139, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.96, i64 0, i64 0), i64 7) #4, !dbg !5248
  %cmp262 = icmp eq i32 %call261, 0, !dbg !5248
  br i1 %cmp262, label %if.then263, label %if.else266, !dbg !5250

if.then263:                                       ; preds = %if.else260
  %140 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5251
  %141 = load %struct.SpaceLink*, %struct.SpaceLink** %sl, align 8, !dbg !5253
  %spacetype264 = getelementptr inbounds %struct.SpaceLink, %struct.SpaceLink* %141, i32 0, i32 3, !dbg !5254
  %142 = load i32, i32* %spacetype264, align 8, !dbg !5254
  %call265 = call %struct.wmKeyMap* @WM_keymap_find_all(%struct.bContext* %140, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.97, i64 0, i64 0), i32 %142, i32 0), !dbg !5255
  store %struct.wmKeyMap* %call265, %struct.wmKeyMap** %km, align 8, !dbg !5256
  br label %if.end308, !dbg !5257

if.else266:                                       ; preds = %if.else260
  %143 = load i8*, i8** %opname.addr, align 8, !dbg !5258
  %call267 = call i32 @strncmp(i8* %143, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.98, i64 0, i64 0), i64 8) #4, !dbg !5258
  %cmp268 = icmp eq i32 %call267, 0, !dbg !5258
  br i1 %cmp268, label %if.then269, label %if.else272, !dbg !5260

if.then269:                                       ; preds = %if.else266
  %144 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5261
  %145 = load %struct.SpaceLink*, %struct.SpaceLink** %sl, align 8, !dbg !5263
  %spacetype270 = getelementptr inbounds %struct.SpaceLink, %struct.SpaceLink* %145, i32 0, i32 3, !dbg !5264
  %146 = load i32, i32* %spacetype270, align 8, !dbg !5264
  %call271 = call %struct.wmKeyMap* @WM_keymap_find_all(%struct.bContext* %144, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.99, i64 0, i64 0), i32 %146, i32 0), !dbg !5265
  store %struct.wmKeyMap* %call271, %struct.wmKeyMap** %km, align 8, !dbg !5266
  br label %if.end307, !dbg !5267

if.else272:                                       ; preds = %if.else266
  %147 = load i8*, i8** %opname.addr, align 8, !dbg !5268
  %call273 = call i32 @strncmp(i8* %147, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.100, i64 0, i64 0), i64 11) #4, !dbg !5268
  %cmp274 = icmp eq i32 %call273, 0, !dbg !5268
  br i1 %cmp274, label %if.then275, label %if.else278, !dbg !5270

if.then275:                                       ; preds = %if.else272
  %148 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5271
  %149 = load %struct.SpaceLink*, %struct.SpaceLink** %sl, align 8, !dbg !5273
  %spacetype276 = getelementptr inbounds %struct.SpaceLink, %struct.SpaceLink* %149, i32 0, i32 3, !dbg !5274
  %150 = load i32, i32* %spacetype276, align 8, !dbg !5274
  %call277 = call %struct.wmKeyMap* @WM_keymap_find_all(%struct.bContext* %148, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.101, i64 0, i64 0), i32 %150, i32 0), !dbg !5275
  store %struct.wmKeyMap* %call277, %struct.wmKeyMap** %km, align 8, !dbg !5276
  br label %if.end306, !dbg !5277

if.else278:                                       ; preds = %if.else272
  %151 = load i8*, i8** %opname.addr, align 8, !dbg !5278
  %call279 = call i32 @strncmp(i8* %151, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.102, i64 0, i64 0), i64 12) #4, !dbg !5278
  %cmp280 = icmp eq i32 %call279, 0, !dbg !5278
  br i1 %cmp280, label %if.then281, label %if.end305, !dbg !5280

if.then281:                                       ; preds = %if.else278
  %152 = load %struct.SpaceLink*, %struct.SpaceLink** %sl, align 8, !dbg !5281
  %spacetype282 = getelementptr inbounds %struct.SpaceLink, %struct.SpaceLink* %152, i32 0, i32 3, !dbg !5283
  %153 = load i32, i32* %spacetype282, align 8, !dbg !5283
  switch i32 %153, label %sw.epilog304 [
    i32 1, label %sw.bb283
    i32 2, label %sw.bb286
    i32 12, label %sw.bb289
    i32 13, label %sw.bb292
    i32 6, label %sw.bb295
    i32 16, label %sw.bb298
    i32 8, label %sw.bb301
  ], !dbg !5284

sw.bb283:                                         ; preds = %if.then281
  %154 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5285
  %155 = load %struct.SpaceLink*, %struct.SpaceLink** %sl, align 8, !dbg !5287
  %spacetype284 = getelementptr inbounds %struct.SpaceLink, %struct.SpaceLink* %155, i32 0, i32 3, !dbg !5288
  %156 = load i32, i32* %spacetype284, align 8, !dbg !5288
  %call285 = call %struct.wmKeyMap* @WM_keymap_find_all(%struct.bContext* %154, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.27, i64 0, i64 0), i32 %156, i32 0), !dbg !5289
  store %struct.wmKeyMap* %call285, %struct.wmKeyMap** %km, align 8, !dbg !5290
  br label %sw.epilog304, !dbg !5291

sw.bb286:                                         ; preds = %if.then281
  %157 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5292
  %158 = load %struct.SpaceLink*, %struct.SpaceLink** %sl, align 8, !dbg !5293
  %spacetype287 = getelementptr inbounds %struct.SpaceLink, %struct.SpaceLink* %158, i32 0, i32 3, !dbg !5294
  %159 = load i32, i32* %spacetype287, align 8, !dbg !5294
  %call288 = call %struct.wmKeyMap* @WM_keymap_find_all(%struct.bContext* %157, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.81, i64 0, i64 0), i32 %159, i32 0), !dbg !5295
  store %struct.wmKeyMap* %call288, %struct.wmKeyMap** %km, align 8, !dbg !5296
  br label %sw.epilog304, !dbg !5297

sw.bb289:                                         ; preds = %if.then281
  %160 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5298
  %161 = load %struct.SpaceLink*, %struct.SpaceLink** %sl, align 8, !dbg !5299
  %spacetype290 = getelementptr inbounds %struct.SpaceLink, %struct.SpaceLink* %161, i32 0, i32 3, !dbg !5300
  %162 = load i32, i32* %spacetype290, align 8, !dbg !5300
  %call291 = call %struct.wmKeyMap* @WM_keymap_find_all(%struct.bContext* %160, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.83, i64 0, i64 0), i32 %162, i32 0), !dbg !5301
  store %struct.wmKeyMap* %call291, %struct.wmKeyMap** %km, align 8, !dbg !5302
  br label %sw.epilog304, !dbg !5303

sw.bb292:                                         ; preds = %if.then281
  %163 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5304
  %164 = load %struct.SpaceLink*, %struct.SpaceLink** %sl, align 8, !dbg !5305
  %spacetype293 = getelementptr inbounds %struct.SpaceLink, %struct.SpaceLink* %164, i32 0, i32 3, !dbg !5306
  %165 = load i32, i32* %spacetype293, align 8, !dbg !5306
  %call294 = call %struct.wmKeyMap* @WM_keymap_find_all(%struct.bContext* %163, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.85, i64 0, i64 0), i32 %165, i32 0), !dbg !5307
  store %struct.wmKeyMap* %call294, %struct.wmKeyMap** %km, align 8, !dbg !5308
  br label %sw.epilog304, !dbg !5309

sw.bb295:                                         ; preds = %if.then281
  %166 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5310
  %167 = load %struct.SpaceLink*, %struct.SpaceLink** %sl, align 8, !dbg !5311
  %spacetype296 = getelementptr inbounds %struct.SpaceLink, %struct.SpaceLink* %167, i32 0, i32 3, !dbg !5312
  %168 = load i32, i32* %spacetype296, align 8, !dbg !5312
  %call297 = call %struct.wmKeyMap* @WM_keymap_find_all(%struct.bContext* %166, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.73, i64 0, i64 0), i32 %168, i32 0), !dbg !5313
  store %struct.wmKeyMap* %call297, %struct.wmKeyMap** %km, align 8, !dbg !5314
  br label %sw.epilog304, !dbg !5315

sw.bb298:                                         ; preds = %if.then281
  %169 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5316
  %170 = load %struct.SpaceLink*, %struct.SpaceLink** %sl, align 8, !dbg !5317
  %spacetype299 = getelementptr inbounds %struct.SpaceLink, %struct.SpaceLink* %170, i32 0, i32 3, !dbg !5318
  %171 = load i32, i32* %spacetype299, align 8, !dbg !5318
  %call300 = call %struct.wmKeyMap* @WM_keymap_find_all(%struct.bContext* %169, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.75, i64 0, i64 0), i32 %171, i32 0), !dbg !5319
  store %struct.wmKeyMap* %call300, %struct.wmKeyMap** %km, align 8, !dbg !5320
  br label %sw.epilog304, !dbg !5321

sw.bb301:                                         ; preds = %if.then281
  %172 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5322
  %173 = load %struct.SpaceLink*, %struct.SpaceLink** %sl, align 8, !dbg !5323
  %spacetype302 = getelementptr inbounds %struct.SpaceLink, %struct.SpaceLink* %173, i32 0, i32 3, !dbg !5324
  %174 = load i32, i32* %spacetype302, align 8, !dbg !5324
  %call303 = call %struct.wmKeyMap* @WM_keymap_find_all(%struct.bContext* %172, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.91, i64 0, i64 0), i32 %174, i32 0), !dbg !5325
  store %struct.wmKeyMap* %call303, %struct.wmKeyMap** %km, align 8, !dbg !5326
  br label %sw.epilog304, !dbg !5327

sw.epilog304:                                     ; preds = %if.then281, %sw.bb301, %sw.bb298, %sw.bb295, %sw.bb292, %sw.bb289, %sw.bb286, %sw.bb283
  br label %if.end305, !dbg !5328

if.end305:                                        ; preds = %sw.epilog304, %if.else278
  br label %if.end306

if.end306:                                        ; preds = %if.end305, %if.then275
  br label %if.end307

if.end307:                                        ; preds = %if.end306, %if.then269
  br label %if.end308

if.end308:                                        ; preds = %if.end307, %if.then263
  br label %if.end309

if.end309:                                        ; preds = %if.end308, %if.then257
  br label %if.end310

if.end310:                                        ; preds = %if.end309, %if.then251
  br label %if.end311

if.end311:                                        ; preds = %if.end310, %if.then245
  br label %if.end312

if.end312:                                        ; preds = %if.end311, %if.then239
  br label %if.end313

if.end313:                                        ; preds = %if.end312, %if.then233
  br label %if.end314

if.end314:                                        ; preds = %if.end313, %if.then227
  br label %if.end315

if.end315:                                        ; preds = %if.end314, %if.then221
  br label %if.end316

if.end316:                                        ; preds = %if.end315, %if.then215
  br label %if.end317

if.end317:                                        ; preds = %if.end316, %if.then210
  br label %if.end318

if.end318:                                        ; preds = %if.end317, %if.then204
  br label %if.end319

if.end319:                                        ; preds = %if.end318, %if.then198
  br label %if.end320

if.end320:                                        ; preds = %if.end319, %if.then192
  br label %if.end321

if.end321:                                        ; preds = %if.end320, %if.then187
  br label %if.end322

if.end322:                                        ; preds = %if.end321, %if.then181
  br label %if.end323

if.end323:                                        ; preds = %if.end322, %if.then175
  br label %if.end324

if.end324:                                        ; preds = %if.end323, %if.then169
  br label %if.end325

if.end325:                                        ; preds = %if.end324, %sw.epilog165
  br label %if.end326

if.end326:                                        ; preds = %if.end325, %if.then152
  br label %if.end327

if.end327:                                        ; preds = %if.end326, %if.then147
  br label %if.end328

if.end328:                                        ; preds = %if.end327, %if.then142
  br label %if.end329

if.end329:                                        ; preds = %if.end328, %if.then137
  br label %if.end330

if.end330:                                        ; preds = %if.end329, %if.end133
  br label %if.end331

if.end331:                                        ; preds = %if.end330, %sw.epilog
  br label %if.end332

if.end332:                                        ; preds = %if.end331, %if.then108
  br label %if.end333

if.end333:                                        ; preds = %if.end332, %if.then100
  br label %if.end334

if.end334:                                        ; preds = %if.end333, %if.end93
  br label %if.end335

if.end335:                                        ; preds = %if.end334, %if.end74
  br label %if.end336

if.end336:                                        ; preds = %if.end335, %if.then60
  br label %if.end337

if.end337:                                        ; preds = %if.end336, %if.end
  br label %if.end338

if.end338:                                        ; preds = %if.end337, %if.then36
  br label %if.end339

if.end339:                                        ; preds = %if.end338, %if.then31
  br label %if.end340

if.end340:                                        ; preds = %if.end339, %if.then23
  br label %if.end341

if.end341:                                        ; preds = %if.end340, %if.then18
  br label %if.end342

if.end342:                                        ; preds = %if.end341, %if.then13
  br label %if.end343

if.end343:                                        ; preds = %if.end342, %if.then
  %175 = load %struct.wmKeyMap*, %struct.wmKeyMap** %km, align 8, !dbg !5329
  ret %struct.wmKeyMap* %175, !dbg !5330
}

declare dso_local %struct.SpaceLink* @CTX_wm_space_data(%struct.bContext*) #2

declare dso_local i32 @CTX_data_mode_enum(%struct.bContext*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i8* @WM_bool_as_string(i8 zeroext %test) #0 !dbg !5331 {
entry:
  %test.addr = alloca i8, align 1
  store i8 %test, i8* %test.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %test.addr, metadata !5334, metadata !DIExpression()), !dbg !5335
  %0 = load i8, i8* %test.addr, align 1, !dbg !5336
  %conv = zext i8 %0 to i32, !dbg !5336
  %tobool = icmp ne i32 %conv, 0, !dbg !5336
  %1 = zext i1 %tobool to i64, !dbg !5336
  %cond = select i1 %tobool, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.103, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.104, i64 0, i64 0), !dbg !5336
  ret i8* %cond, !dbg !5337
}

declare dso_local void @WM_operator_properties_alloc(%struct.PointerRNA**, %struct.IDProperty**, i8*) #2

declare dso_local void @WM_operator_properties_sanitize(%struct.PointerRNA*, i8 zeroext) #2

; Function Attrs: noinline nounwind uwtable
define internal %struct.wmKeyMapItem* @wm_keymap_item_find_props(%struct.bContext* %C, i8* %opname, i32 %opcontext, %struct.IDProperty* %properties, i8 zeroext %is_strict, i8 zeroext %is_hotkey, %struct.wmKeyMap** %keymap_r) #0 !dbg !5338 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %opname.addr = alloca i8*, align 8
  %opcontext.addr = alloca i32, align 4
  %properties.addr = alloca %struct.IDProperty*, align 8
  %is_strict.addr = alloca i8, align 1
  %is_hotkey.addr = alloca i8, align 1
  %keymap_r.addr = alloca %struct.wmKeyMap**, align 8
  %win = alloca %struct.wmWindow*, align 8
  %sa = alloca %struct.ScrArea*, align 8
  %ar = alloca %struct.ARegion*, align 8
  %found = alloca %struct.wmKeyMapItem*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !5339, metadata !DIExpression()), !dbg !5340
  store i8* %opname, i8** %opname.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %opname.addr, metadata !5341, metadata !DIExpression()), !dbg !5342
  store i32 %opcontext, i32* %opcontext.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %opcontext.addr, metadata !5343, metadata !DIExpression()), !dbg !5344
  store %struct.IDProperty* %properties, %struct.IDProperty** %properties.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.IDProperty** %properties.addr, metadata !5345, metadata !DIExpression()), !dbg !5346
  store i8 %is_strict, i8* %is_strict.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %is_strict.addr, metadata !5347, metadata !DIExpression()), !dbg !5348
  store i8 %is_hotkey, i8* %is_hotkey.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %is_hotkey.addr, metadata !5349, metadata !DIExpression()), !dbg !5350
  store %struct.wmKeyMap** %keymap_r, %struct.wmKeyMap*** %keymap_r.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmKeyMap*** %keymap_r.addr, metadata !5351, metadata !DIExpression()), !dbg !5352
  call void @llvm.dbg.declare(metadata %struct.wmWindow** %win, metadata !5353, metadata !DIExpression()), !dbg !5356
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5357
  %call = call %struct.wmWindow* @CTX_wm_window(%struct.bContext* %0), !dbg !5358
  store %struct.wmWindow* %call, %struct.wmWindow** %win, align 8, !dbg !5356
  call void @llvm.dbg.declare(metadata %struct.ScrArea** %sa, metadata !5359, metadata !DIExpression()), !dbg !5472
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5473
  %call1 = call %struct.ScrArea* @CTX_wm_area(%struct.bContext* %1), !dbg !5474
  store %struct.ScrArea* %call1, %struct.ScrArea** %sa, align 8, !dbg !5472
  call void @llvm.dbg.declare(metadata %struct.ARegion** %ar, metadata !5475, metadata !DIExpression()), !dbg !5590
  %2 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5591
  %call2 = call %struct.ARegion* @CTX_wm_region(%struct.bContext* %2), !dbg !5592
  store %struct.ARegion* %call2, %struct.ARegion** %ar, align 8, !dbg !5590
  call void @llvm.dbg.declare(metadata %struct.wmKeyMapItem** %found, metadata !5593, metadata !DIExpression()), !dbg !5594
  store %struct.wmKeyMapItem* null, %struct.wmKeyMapItem** %found, align 8, !dbg !5594
  %3 = load %struct.wmWindow*, %struct.wmWindow** %win, align 8, !dbg !5595
  %tobool = icmp ne %struct.wmWindow* %3, null, !dbg !5595
  br i1 %tobool, label %if.then, label %if.end, !dbg !5597

if.then:                                          ; preds = %entry
  %4 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5598
  %5 = load %struct.wmWindow*, %struct.wmWindow** %win, align 8, !dbg !5599
  %handlers = getelementptr inbounds %struct.wmWindow, %struct.wmWindow* %5, i32 0, i32 28, !dbg !5600
  %6 = load i8*, i8** %opname.addr, align 8, !dbg !5601
  %7 = load i32, i32* %opcontext.addr, align 4, !dbg !5602
  %8 = load %struct.IDProperty*, %struct.IDProperty** %properties.addr, align 8, !dbg !5603
  %9 = load i8, i8* %is_strict.addr, align 1, !dbg !5604
  %10 = load i8, i8* %is_hotkey.addr, align 1, !dbg !5605
  %11 = load %struct.wmKeyMap**, %struct.wmKeyMap*** %keymap_r.addr, align 8, !dbg !5606
  %call3 = call %struct.wmKeyMapItem* @wm_keymap_item_find_handlers(%struct.bContext* %4, %struct.ListBase* %handlers, i8* %6, i32 %7, %struct.IDProperty* %8, i8 zeroext %9, i8 zeroext %10, %struct.wmKeyMap** %11), !dbg !5607
  store %struct.wmKeyMapItem* %call3, %struct.wmKeyMapItem** %found, align 8, !dbg !5608
  br label %if.end, !dbg !5609

if.end:                                           ; preds = %if.then, %entry
  %12 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !5610
  %tobool4 = icmp ne %struct.ScrArea* %12, null, !dbg !5610
  br i1 %tobool4, label %land.lhs.true, label %if.end8, !dbg !5612

land.lhs.true:                                    ; preds = %if.end
  %13 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %found, align 8, !dbg !5613
  %cmp = icmp eq %struct.wmKeyMapItem* %13, null, !dbg !5614
  br i1 %cmp, label %if.then5, label %if.end8, !dbg !5615

if.then5:                                         ; preds = %land.lhs.true
  %14 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5616
  %15 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !5617
  %handlers6 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %15, i32 0, i32 21, !dbg !5618
  %16 = load i8*, i8** %opname.addr, align 8, !dbg !5619
  %17 = load i32, i32* %opcontext.addr, align 4, !dbg !5620
  %18 = load %struct.IDProperty*, %struct.IDProperty** %properties.addr, align 8, !dbg !5621
  %19 = load i8, i8* %is_strict.addr, align 1, !dbg !5622
  %20 = load i8, i8* %is_hotkey.addr, align 1, !dbg !5623
  %21 = load %struct.wmKeyMap**, %struct.wmKeyMap*** %keymap_r.addr, align 8, !dbg !5624
  %call7 = call %struct.wmKeyMapItem* @wm_keymap_item_find_handlers(%struct.bContext* %14, %struct.ListBase* %handlers6, i8* %16, i32 %17, %struct.IDProperty* %18, i8 zeroext %19, i8 zeroext %20, %struct.wmKeyMap** %21), !dbg !5625
  store %struct.wmKeyMapItem* %call7, %struct.wmKeyMapItem** %found, align 8, !dbg !5626
  br label %if.end8, !dbg !5627

if.end8:                                          ; preds = %if.then5, %land.lhs.true, %if.end
  %22 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %found, align 8, !dbg !5628
  %cmp9 = icmp eq %struct.wmKeyMapItem* %22, null, !dbg !5630
  br i1 %cmp9, label %if.then10, label %if.end79, !dbg !5631

if.then10:                                        ; preds = %if.end8
  %23 = load i32, i32* %opcontext.addr, align 4, !dbg !5632
  %cmp11 = icmp eq i32 %23, 7, !dbg !5632
  br i1 %cmp11, label %if.then13, label %lor.lhs.false, !dbg !5632

lor.lhs.false:                                    ; preds = %if.then10
  %24 = load i32, i32* %opcontext.addr, align 4, !dbg !5632
  %cmp12 = icmp eq i32 %24, 1, !dbg !5632
  br i1 %cmp12, label %if.then13, label %if.else, !dbg !5635

if.then13:                                        ; preds = %lor.lhs.false, %if.then10
  %25 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !5636
  %tobool14 = icmp ne %struct.ScrArea* %25, null, !dbg !5636
  br i1 %tobool14, label %if.then15, label %if.end28, !dbg !5639

if.then15:                                        ; preds = %if.then13
  %26 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !5640
  %tobool16 = icmp ne %struct.ARegion* %26, null, !dbg !5640
  br i1 %tobool16, label %land.lhs.true17, label %if.then20, !dbg !5643

land.lhs.true17:                                  ; preds = %if.then15
  %27 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !5644
  %regiontype = getelementptr inbounds %struct.ARegion, %struct.ARegion* %27, i32 0, i32 8, !dbg !5645
  %28 = load i16, i16* %regiontype, align 2, !dbg !5645
  %conv = sext i16 %28 to i32, !dbg !5644
  %cmp18 = icmp eq i32 %conv, 0, !dbg !5646
  br i1 %cmp18, label %if.end22, label %if.then20, !dbg !5647

if.then20:                                        ; preds = %land.lhs.true17, %if.then15
  %29 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !5648
  %call21 = call %struct.ARegion* @BKE_area_find_region_type(%struct.ScrArea* %29, i32 0), !dbg !5649
  store %struct.ARegion* %call21, %struct.ARegion** %ar, align 8, !dbg !5650
  br label %if.end22, !dbg !5651

if.end22:                                         ; preds = %if.then20, %land.lhs.true17
  %30 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !5652
  %tobool23 = icmp ne %struct.ARegion* %30, null, !dbg !5652
  br i1 %tobool23, label %if.then24, label %if.end27, !dbg !5654

if.then24:                                        ; preds = %if.end22
  %31 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5655
  %32 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !5656
  %handlers25 = getelementptr inbounds %struct.ARegion, %struct.ARegion* %32, i32 0, i32 26, !dbg !5657
  %33 = load i8*, i8** %opname.addr, align 8, !dbg !5658
  %34 = load i32, i32* %opcontext.addr, align 4, !dbg !5659
  %35 = load %struct.IDProperty*, %struct.IDProperty** %properties.addr, align 8, !dbg !5660
  %36 = load i8, i8* %is_strict.addr, align 1, !dbg !5661
  %37 = load i8, i8* %is_hotkey.addr, align 1, !dbg !5662
  %38 = load %struct.wmKeyMap**, %struct.wmKeyMap*** %keymap_r.addr, align 8, !dbg !5663
  %call26 = call %struct.wmKeyMapItem* @wm_keymap_item_find_handlers(%struct.bContext* %31, %struct.ListBase* %handlers25, i8* %33, i32 %34, %struct.IDProperty* %35, i8 zeroext %36, i8 zeroext %37, %struct.wmKeyMap** %38), !dbg !5664
  store %struct.wmKeyMapItem* %call26, %struct.wmKeyMapItem** %found, align 8, !dbg !5665
  br label %if.end27, !dbg !5666

if.end27:                                         ; preds = %if.then24, %if.end22
  br label %if.end28, !dbg !5667

if.end28:                                         ; preds = %if.end27, %if.then13
  br label %if.end78, !dbg !5668

if.else:                                          ; preds = %lor.lhs.false
  %39 = load i32, i32* %opcontext.addr, align 4, !dbg !5669
  %cmp29 = icmp eq i32 %39, 8, !dbg !5669
  br i1 %cmp29, label %if.then34, label %lor.lhs.false31, !dbg !5669

lor.lhs.false31:                                  ; preds = %if.else
  %40 = load i32, i32* %opcontext.addr, align 4, !dbg !5669
  %cmp32 = icmp eq i32 %40, 2, !dbg !5669
  br i1 %cmp32, label %if.then34, label %if.else49, !dbg !5671

if.then34:                                        ; preds = %lor.lhs.false31, %if.else
  %41 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !5672
  %tobool35 = icmp ne %struct.ARegion* %41, null, !dbg !5672
  br i1 %tobool35, label %land.lhs.true36, label %if.then41, !dbg !5675

land.lhs.true36:                                  ; preds = %if.then34
  %42 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !5676
  %regiontype37 = getelementptr inbounds %struct.ARegion, %struct.ARegion* %42, i32 0, i32 8, !dbg !5677
  %43 = load i16, i16* %regiontype37, align 2, !dbg !5677
  %conv38 = sext i16 %43 to i32, !dbg !5676
  %cmp39 = icmp eq i32 %conv38, 2, !dbg !5678
  br i1 %cmp39, label %if.end43, label %if.then41, !dbg !5679

if.then41:                                        ; preds = %land.lhs.true36, %if.then34
  %44 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !5680
  %call42 = call %struct.ARegion* @BKE_area_find_region_type(%struct.ScrArea* %44, i32 2), !dbg !5681
  store %struct.ARegion* %call42, %struct.ARegion** %ar, align 8, !dbg !5682
  br label %if.end43, !dbg !5683

if.end43:                                         ; preds = %if.then41, %land.lhs.true36
  %45 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !5684
  %tobool44 = icmp ne %struct.ARegion* %45, null, !dbg !5684
  br i1 %tobool44, label %if.then45, label %if.end48, !dbg !5686

if.then45:                                        ; preds = %if.end43
  %46 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5687
  %47 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !5688
  %handlers46 = getelementptr inbounds %struct.ARegion, %struct.ARegion* %47, i32 0, i32 26, !dbg !5689
  %48 = load i8*, i8** %opname.addr, align 8, !dbg !5690
  %49 = load i32, i32* %opcontext.addr, align 4, !dbg !5691
  %50 = load %struct.IDProperty*, %struct.IDProperty** %properties.addr, align 8, !dbg !5692
  %51 = load i8, i8* %is_strict.addr, align 1, !dbg !5693
  %52 = load i8, i8* %is_hotkey.addr, align 1, !dbg !5694
  %53 = load %struct.wmKeyMap**, %struct.wmKeyMap*** %keymap_r.addr, align 8, !dbg !5695
  %call47 = call %struct.wmKeyMapItem* @wm_keymap_item_find_handlers(%struct.bContext* %46, %struct.ListBase* %handlers46, i8* %48, i32 %49, %struct.IDProperty* %50, i8 zeroext %51, i8 zeroext %52, %struct.wmKeyMap** %53), !dbg !5696
  store %struct.wmKeyMapItem* %call47, %struct.wmKeyMapItem** %found, align 8, !dbg !5697
  br label %if.end48, !dbg !5698

if.end48:                                         ; preds = %if.then45, %if.end43
  br label %if.end77, !dbg !5699

if.else49:                                        ; preds = %lor.lhs.false31
  %54 = load i32, i32* %opcontext.addr, align 4, !dbg !5700
  %cmp50 = icmp eq i32 %54, 9, !dbg !5700
  br i1 %cmp50, label %if.then55, label %lor.lhs.false52, !dbg !5700

lor.lhs.false52:                                  ; preds = %if.else49
  %55 = load i32, i32* %opcontext.addr, align 4, !dbg !5700
  %cmp53 = icmp eq i32 %55, 3, !dbg !5700
  br i1 %cmp53, label %if.then55, label %if.else70, !dbg !5702

if.then55:                                        ; preds = %lor.lhs.false52, %if.else49
  %56 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !5703
  %tobool56 = icmp ne %struct.ARegion* %56, null, !dbg !5703
  br i1 %tobool56, label %land.lhs.true57, label %if.then62, !dbg !5706

land.lhs.true57:                                  ; preds = %if.then55
  %57 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !5707
  %regiontype58 = getelementptr inbounds %struct.ARegion, %struct.ARegion* %57, i32 0, i32 8, !dbg !5708
  %58 = load i16, i16* %regiontype58, align 2, !dbg !5708
  %conv59 = sext i16 %58 to i32, !dbg !5707
  %cmp60 = icmp eq i32 %conv59, 7, !dbg !5709
  br i1 %cmp60, label %if.end64, label %if.then62, !dbg !5710

if.then62:                                        ; preds = %land.lhs.true57, %if.then55
  %59 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !5711
  %call63 = call %struct.ARegion* @BKE_area_find_region_type(%struct.ScrArea* %59, i32 7), !dbg !5712
  store %struct.ARegion* %call63, %struct.ARegion** %ar, align 8, !dbg !5713
  br label %if.end64, !dbg !5714

if.end64:                                         ; preds = %if.then62, %land.lhs.true57
  %60 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !5715
  %tobool65 = icmp ne %struct.ARegion* %60, null, !dbg !5715
  br i1 %tobool65, label %if.then66, label %if.end69, !dbg !5717

if.then66:                                        ; preds = %if.end64
  %61 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5718
  %62 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !5719
  %handlers67 = getelementptr inbounds %struct.ARegion, %struct.ARegion* %62, i32 0, i32 26, !dbg !5720
  %63 = load i8*, i8** %opname.addr, align 8, !dbg !5721
  %64 = load i32, i32* %opcontext.addr, align 4, !dbg !5722
  %65 = load %struct.IDProperty*, %struct.IDProperty** %properties.addr, align 8, !dbg !5723
  %66 = load i8, i8* %is_strict.addr, align 1, !dbg !5724
  %67 = load i8, i8* %is_hotkey.addr, align 1, !dbg !5725
  %68 = load %struct.wmKeyMap**, %struct.wmKeyMap*** %keymap_r.addr, align 8, !dbg !5726
  %call68 = call %struct.wmKeyMapItem* @wm_keymap_item_find_handlers(%struct.bContext* %61, %struct.ListBase* %handlers67, i8* %63, i32 %64, %struct.IDProperty* %65, i8 zeroext %66, i8 zeroext %67, %struct.wmKeyMap** %68), !dbg !5727
  store %struct.wmKeyMapItem* %call68, %struct.wmKeyMapItem** %found, align 8, !dbg !5728
  br label %if.end69, !dbg !5729

if.end69:                                         ; preds = %if.then66, %if.end64
  br label %if.end76, !dbg !5730

if.else70:                                        ; preds = %lor.lhs.false52
  %69 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !5731
  %tobool71 = icmp ne %struct.ARegion* %69, null, !dbg !5731
  br i1 %tobool71, label %if.then72, label %if.end75, !dbg !5734

if.then72:                                        ; preds = %if.else70
  %70 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5735
  %71 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !5736
  %handlers73 = getelementptr inbounds %struct.ARegion, %struct.ARegion* %71, i32 0, i32 26, !dbg !5737
  %72 = load i8*, i8** %opname.addr, align 8, !dbg !5738
  %73 = load i32, i32* %opcontext.addr, align 4, !dbg !5739
  %74 = load %struct.IDProperty*, %struct.IDProperty** %properties.addr, align 8, !dbg !5740
  %75 = load i8, i8* %is_strict.addr, align 1, !dbg !5741
  %76 = load i8, i8* %is_hotkey.addr, align 1, !dbg !5742
  %77 = load %struct.wmKeyMap**, %struct.wmKeyMap*** %keymap_r.addr, align 8, !dbg !5743
  %call74 = call %struct.wmKeyMapItem* @wm_keymap_item_find_handlers(%struct.bContext* %70, %struct.ListBase* %handlers73, i8* %72, i32 %73, %struct.IDProperty* %74, i8 zeroext %75, i8 zeroext %76, %struct.wmKeyMap** %77), !dbg !5744
  store %struct.wmKeyMapItem* %call74, %struct.wmKeyMapItem** %found, align 8, !dbg !5745
  br label %if.end75, !dbg !5746

if.end75:                                         ; preds = %if.then72, %if.else70
  br label %if.end76

if.end76:                                         ; preds = %if.end75, %if.end69
  br label %if.end77

if.end77:                                         ; preds = %if.end76, %if.end48
  br label %if.end78

if.end78:                                         ; preds = %if.end77, %if.end28
  br label %if.end79, !dbg !5747

if.end79:                                         ; preds = %if.end78, %if.end8
  %78 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %found, align 8, !dbg !5748
  ret %struct.wmKeyMapItem* %78, !dbg !5749
}

declare dso_local void @RNA_pointer_create(%struct.ID*, %struct.StructRNA*, i8*, %struct.PointerRNA*) #2

declare dso_local zeroext i8 @WM_operator_properties_default(%struct.PointerRNA*, i8 zeroext) #2

declare dso_local zeroext i8 @RNA_property_is_set(%struct.PointerRNA*, %struct.PropertyRNA*) #2

declare dso_local void @RNA_property_unset(%struct.PointerRNA*, %struct.PropertyRNA*) #2

declare dso_local %struct.wmWindow* @CTX_wm_window(%struct.bContext*) #2

declare dso_local %struct.ScrArea* @CTX_wm_area(%struct.bContext*) #2

declare dso_local %struct.ARegion* @CTX_wm_region(%struct.bContext*) #2

; Function Attrs: noinline nounwind uwtable
define internal %struct.wmKeyMapItem* @wm_keymap_item_find_handlers(%struct.bContext* %C, %struct.ListBase* %handlers, i8* %opname, i32 %UNUSED_opcontext, %struct.IDProperty* %properties, i8 zeroext %is_strict, i8 zeroext %is_hotkey, %struct.wmKeyMap** %keymap_r) #0 !dbg !5750 {
entry:
  %retval = alloca %struct.wmKeyMapItem*, align 8
  %C.addr = alloca %struct.bContext*, align 8
  %handlers.addr = alloca %struct.ListBase*, align 8
  %opname.addr = alloca i8*, align 8
  %UNUSED_opcontext.addr = alloca i32, align 4
  %properties.addr = alloca %struct.IDProperty*, align 8
  %is_strict.addr = alloca i8, align 1
  %is_hotkey.addr = alloca i8, align 1
  %keymap_r.addr = alloca %struct.wmKeyMap**, align 8
  %wm = alloca %struct.wmWindowManager*, align 8
  %handler = alloca %struct.wmEventHandler*, align 8
  %keymap = alloca %struct.wmKeyMap*, align 8
  %kmi = alloca %struct.wmKeyMapItem*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !5753, metadata !DIExpression()), !dbg !5754
  store %struct.ListBase* %handlers, %struct.ListBase** %handlers.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %handlers.addr, metadata !5755, metadata !DIExpression()), !dbg !5756
  store i8* %opname, i8** %opname.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %opname.addr, metadata !5757, metadata !DIExpression()), !dbg !5758
  store i32 %UNUSED_opcontext, i32* %UNUSED_opcontext.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %UNUSED_opcontext.addr, metadata !5759, metadata !DIExpression()), !dbg !5760
  store %struct.IDProperty* %properties, %struct.IDProperty** %properties.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.IDProperty** %properties.addr, metadata !5761, metadata !DIExpression()), !dbg !5762
  store i8 %is_strict, i8* %is_strict.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %is_strict.addr, metadata !5763, metadata !DIExpression()), !dbg !5764
  store i8 %is_hotkey, i8* %is_hotkey.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %is_hotkey.addr, metadata !5765, metadata !DIExpression()), !dbg !5766
  store %struct.wmKeyMap** %keymap_r, %struct.wmKeyMap*** %keymap_r.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmKeyMap*** %keymap_r.addr, metadata !5767, metadata !DIExpression()), !dbg !5768
  call void @llvm.dbg.declare(metadata %struct.wmWindowManager** %wm, metadata !5769, metadata !DIExpression()), !dbg !5770
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5771
  %call = call %struct.wmWindowManager* @CTX_wm_manager(%struct.bContext* %0), !dbg !5772
  store %struct.wmWindowManager* %call, %struct.wmWindowManager** %wm, align 8, !dbg !5770
  call void @llvm.dbg.declare(metadata %struct.wmEventHandler** %handler, metadata !5773, metadata !DIExpression()), !dbg !5811
  call void @llvm.dbg.declare(metadata %struct.wmKeyMap** %keymap, metadata !5812, metadata !DIExpression()), !dbg !5813
  call void @llvm.dbg.declare(metadata %struct.wmKeyMapItem** %kmi, metadata !5814, metadata !DIExpression()), !dbg !5815
  %1 = load %struct.ListBase*, %struct.ListBase** %handlers.addr, align 8, !dbg !5816
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %1, i32 0, i32 0, !dbg !5818
  %2 = load i8*, i8** %first, align 8, !dbg !5818
  %3 = bitcast i8* %2 to %struct.wmEventHandler*, !dbg !5816
  store %struct.wmEventHandler* %3, %struct.wmEventHandler** %handler, align 8, !dbg !5819
  br label %for.cond, !dbg !5820

for.cond:                                         ; preds = %for.inc114, %entry
  %4 = load %struct.wmEventHandler*, %struct.wmEventHandler** %handler, align 8, !dbg !5821
  %tobool = icmp ne %struct.wmEventHandler* %4, null, !dbg !5823
  br i1 %tobool, label %for.body, label %for.end116, !dbg !5823

for.body:                                         ; preds = %for.cond
  %5 = load %struct.wmWindowManager*, %struct.wmWindowManager** %wm, align 8, !dbg !5824
  %6 = load %struct.wmEventHandler*, %struct.wmEventHandler** %handler, align 8, !dbg !5826
  %keymap1 = getelementptr inbounds %struct.wmEventHandler, %struct.wmEventHandler* %6, i32 0, i32 4, !dbg !5827
  %7 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap1, align 8, !dbg !5827
  %call2 = call %struct.wmKeyMap* @WM_keymap_active(%struct.wmWindowManager* %5, %struct.wmKeyMap* %7), !dbg !5828
  store %struct.wmKeyMap* %call2, %struct.wmKeyMap** %keymap, align 8, !dbg !5829
  %8 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !5830
  %tobool3 = icmp ne %struct.wmKeyMap* %8, null, !dbg !5830
  br i1 %tobool3, label %land.lhs.true, label %if.end113, !dbg !5832

land.lhs.true:                                    ; preds = %for.body
  %9 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !5833
  %poll = getelementptr inbounds %struct.wmKeyMap, %struct.wmKeyMap* %9, i32 0, i32 9, !dbg !5834
  %10 = load i32 (%struct.bContext*)*, i32 (%struct.bContext*)** %poll, align 8, !dbg !5834
  %tobool4 = icmp ne i32 (%struct.bContext*)* %10, null, !dbg !5833
  br i1 %tobool4, label %lor.lhs.false, label %if.then, !dbg !5835

lor.lhs.false:                                    ; preds = %land.lhs.true
  %11 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !5836
  %poll5 = getelementptr inbounds %struct.wmKeyMap, %struct.wmKeyMap* %11, i32 0, i32 9, !dbg !5837
  %12 = load i32 (%struct.bContext*)*, i32 (%struct.bContext*)** %poll5, align 8, !dbg !5837
  %13 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5838
  %call6 = call i32 %12(%struct.bContext* %13), !dbg !5836
  %tobool7 = icmp ne i32 %call6, 0, !dbg !5836
  br i1 %tobool7, label %if.then, label %if.end113, !dbg !5839

if.then:                                          ; preds = %lor.lhs.false, %land.lhs.true
  %14 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !5840
  %items = getelementptr inbounds %struct.wmKeyMap, %struct.wmKeyMap* %14, i32 0, i32 2, !dbg !5843
  %first8 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %items, i32 0, i32 0, !dbg !5844
  %15 = load i8*, i8** %first8, align 8, !dbg !5844
  %16 = bitcast i8* %15 to %struct.wmKeyMapItem*, !dbg !5840
  store %struct.wmKeyMapItem* %16, %struct.wmKeyMapItem** %kmi, align 8, !dbg !5845
  br label %for.cond9, !dbg !5846

for.cond9:                                        ; preds = %for.inc, %if.then
  %17 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi, align 8, !dbg !5847
  %tobool10 = icmp ne %struct.wmKeyMapItem* %17, null, !dbg !5849
  br i1 %tobool10, label %for.body11, label %for.end, !dbg !5849

for.body11:                                       ; preds = %for.cond9
  %18 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi, align 8, !dbg !5850
  %flag = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %18, i32 0, i32 13, !dbg !5853
  %19 = load i16, i16* %flag, align 8, !dbg !5853
  %conv = sext i16 %19 to i32, !dbg !5850
  %and = and i32 %conv, 1, !dbg !5854
  %tobool12 = icmp ne i32 %and, 0, !dbg !5854
  br i1 %tobool12, label %if.then13, label %if.end, !dbg !5855

if.then13:                                        ; preds = %for.body11
  br label %for.inc, !dbg !5856

if.end:                                           ; preds = %for.body11
  %20 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi, align 8, !dbg !5857
  %idname = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %20, i32 0, i32 2, !dbg !5859
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %idname, i64 0, i64 0, !dbg !5857
  %21 = load i8*, i8** %opname.addr, align 8, !dbg !5860
  %call14 = call i32 @strcmp(i8* %arraydecay, i8* %21) #4, !dbg !5861
  %cmp = icmp eq i32 %call14, 0, !dbg !5862
  br i1 %cmp, label %land.lhs.true16, label %if.end112, !dbg !5863

land.lhs.true16:                                  ; preds = %if.end
  %22 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi, align 8, !dbg !5864
  %type = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %22, i32 0, i32 6, !dbg !5865
  %23 = load i16, i16* %type, align 2, !dbg !5865
  %call17 = call i8* @WM_key_event_string(i16 signext %23), !dbg !5866
  %arrayidx = getelementptr inbounds i8, i8* %call17, i64 0, !dbg !5866
  %24 = load i8, i8* %arrayidx, align 1, !dbg !5866
  %conv18 = zext i8 %24 to i32, !dbg !5866
  %tobool19 = icmp ne i32 %conv18, 0, !dbg !5866
  br i1 %tobool19, label %if.then20, label %if.end112, !dbg !5867

if.then20:                                        ; preds = %land.lhs.true16
  %25 = load i8, i8* %is_hotkey.addr, align 1, !dbg !5868
  %tobool21 = icmp ne i8 %25, 0, !dbg !5868
  br i1 %tobool21, label %if.then22, label %if.end94, !dbg !5871

if.then22:                                        ; preds = %if.then20
  %26 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi, align 8, !dbg !5872
  %type23 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %26, i32 0, i32 6, !dbg !5872
  %27 = load i16, i16* %type23, align 2, !dbg !5872
  %conv24 = sext i16 %27 to i32, !dbg !5872
  %cmp25 = icmp sge i32 %conv24, 32, !dbg !5872
  br i1 %cmp25, label %land.lhs.true27, label %lor.lhs.false32, !dbg !5872

land.lhs.true27:                                  ; preds = %if.then22
  %28 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi, align 8, !dbg !5872
  %type28 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %28, i32 0, i32 6, !dbg !5872
  %29 = load i16, i16* %type28, align 2, !dbg !5872
  %conv29 = sext i16 %29 to i32, !dbg !5872
  %cmp30 = icmp sle i32 %conv29, 255, !dbg !5872
  br i1 %cmp30, label %land.lhs.true62, label %lor.lhs.false32, !dbg !5872

lor.lhs.false32:                                  ; preds = %land.lhs.true27, %if.then22
  %30 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi, align 8, !dbg !5872
  %type33 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %30, i32 0, i32 6, !dbg !5872
  %31 = load i16, i16* %type33, align 2, !dbg !5872
  %conv34 = sext i16 %31 to i32, !dbg !5872
  %cmp35 = icmp sge i32 %conv34, 300, !dbg !5872
  br i1 %cmp35, label %land.lhs.true37, label %lor.lhs.false42, !dbg !5872

land.lhs.true37:                                  ; preds = %lor.lhs.false32
  %32 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi, align 8, !dbg !5872
  %type38 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %32, i32 0, i32 6, !dbg !5872
  %33 = load i16, i16* %type38, align 2, !dbg !5872
  %conv39 = sext i16 %33 to i32, !dbg !5872
  %cmp40 = icmp sle i32 %conv39, 319, !dbg !5872
  br i1 %cmp40, label %land.lhs.true62, label %lor.lhs.false42, !dbg !5872

lor.lhs.false42:                                  ; preds = %land.lhs.true37, %lor.lhs.false32
  %34 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi, align 8, !dbg !5872
  %type43 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %34, i32 0, i32 6, !dbg !5872
  %35 = load i16, i16* %type43, align 2, !dbg !5872
  %conv44 = sext i16 %35 to i32, !dbg !5872
  %cmp45 = icmp sge i32 %conv44, 1, !dbg !5872
  br i1 %cmp45, label %land.lhs.true47, label %lor.lhs.false52, !dbg !5872

land.lhs.true47:                                  ; preds = %lor.lhs.false42
  %36 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi, align 8, !dbg !5872
  %type48 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %36, i32 0, i32 6, !dbg !5872
  %37 = load i16, i16* %type48, align 2, !dbg !5872
  %conv49 = sext i16 %37 to i32, !dbg !5872
  %cmp50 = icmp sle i32 %conv49, 19, !dbg !5872
  br i1 %cmp50, label %land.lhs.true62, label %lor.lhs.false52, !dbg !5872

lor.lhs.false52:                                  ; preds = %land.lhs.true47, %lor.lhs.false42
  %38 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi, align 8, !dbg !5872
  %type53 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %38, i32 0, i32 6, !dbg !5872
  %39 = load i16, i16* %type53, align 2, !dbg !5872
  %conv54 = sext i16 %39 to i32, !dbg !5872
  %cmp55 = icmp sge i32 %conv54, 400, !dbg !5872
  br i1 %cmp55, label %land.lhs.true57, label %if.then92, !dbg !5872

land.lhs.true57:                                  ; preds = %lor.lhs.false52
  %40 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi, align 8, !dbg !5872
  %type58 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %40, i32 0, i32 6, !dbg !5872
  %41 = load i16, i16* %type58, align 2, !dbg !5872
  %conv59 = sext i16 %41 to i32, !dbg !5872
  %cmp60 = icmp slt i32 %conv59, 439, !dbg !5872
  br i1 %cmp60, label %land.lhs.true62, label %if.then92, !dbg !5872

land.lhs.true62:                                  ; preds = %land.lhs.true57, %land.lhs.true47, %land.lhs.true37, %land.lhs.true27
  %42 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi, align 8, !dbg !5872
  %type63 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %42, i32 0, i32 6, !dbg !5872
  %43 = load i16, i16* %type63, align 2, !dbg !5872
  %conv64 = sext i16 %43 to i32, !dbg !5872
  %cmp65 = icmp ne i32 %conv64, 218, !dbg !5872
  br i1 %cmp65, label %land.lhs.true67, label %if.then92, !dbg !5872

land.lhs.true67:                                  ; preds = %land.lhs.true62
  %44 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi, align 8, !dbg !5872
  %type68 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %44, i32 0, i32 6, !dbg !5872
  %45 = load i16, i16* %type68, align 2, !dbg !5872
  %conv69 = sext i16 %45 to i32, !dbg !5872
  %cmp70 = icmp sge i32 %conv69, 212, !dbg !5872
  br i1 %cmp70, label %land.rhs, label %land.end, !dbg !5872

land.rhs:                                         ; preds = %land.lhs.true67
  %46 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi, align 8, !dbg !5872
  %type72 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %46, i32 0, i32 6, !dbg !5872
  %47 = load i16, i16* %type72, align 2, !dbg !5872
  %conv73 = sext i16 %47 to i32, !dbg !5872
  %cmp74 = icmp sle i32 %conv73, 217, !dbg !5872
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true67
  %48 = phi i1 [ false, %land.lhs.true67 ], [ %cmp74, %land.rhs ], !dbg !5875
  %land.ext = zext i1 %48 to i32, !dbg !5872
  %cmp76 = icmp eq i32 %land.ext, 0, !dbg !5872
  br i1 %cmp76, label %land.lhs.true78, label %if.then92, !dbg !5872

land.lhs.true78:                                  ; preds = %land.end
  %49 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi, align 8, !dbg !5872
  %type79 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %49, i32 0, i32 6, !dbg !5872
  %50 = load i16, i16* %type79, align 2, !dbg !5872
  %conv80 = sext i16 %50 to i32, !dbg !5872
  %cmp81 = icmp sge i32 %conv80, 171, !dbg !5872
  br i1 %cmp81, label %land.rhs83, label %land.end88, !dbg !5872

land.rhs83:                                       ; preds = %land.lhs.true78
  %51 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi, align 8, !dbg !5872
  %type84 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %51, i32 0, i32 6, !dbg !5872
  %52 = load i16, i16* %type84, align 2, !dbg !5872
  %conv85 = sext i16 %52 to i32, !dbg !5872
  %cmp86 = icmp sle i32 %conv85, 173, !dbg !5872
  br label %land.end88

land.end88:                                       ; preds = %land.rhs83, %land.lhs.true78
  %53 = phi i1 [ false, %land.lhs.true78 ], [ %cmp86, %land.rhs83 ], !dbg !5875
  %land.ext89 = zext i1 %53 to i32, !dbg !5872
  %cmp90 = icmp eq i32 %land.ext89, 0, !dbg !5872
  br i1 %cmp90, label %if.end93, label %if.then92, !dbg !5876

if.then92:                                        ; preds = %land.end88, %land.end, %land.lhs.true62, %land.lhs.true57, %lor.lhs.false52
  br label %for.inc, !dbg !5877

if.end93:                                         ; preds = %land.end88
  br label %if.end94, !dbg !5878

if.end94:                                         ; preds = %if.end93, %if.then20
  %54 = load %struct.IDProperty*, %struct.IDProperty** %properties.addr, align 8, !dbg !5879
  %tobool95 = icmp ne %struct.IDProperty* %54, null, !dbg !5879
  br i1 %tobool95, label %if.then96, label %if.else, !dbg !5881

if.then96:                                        ; preds = %if.end94
  %55 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi, align 8, !dbg !5882
  %ptr = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %55, i32 0, i32 17, !dbg !5885
  %56 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !5885
  %tobool97 = icmp ne %struct.PointerRNA* %56, null, !dbg !5882
  br i1 %tobool97, label %land.lhs.true98, label %if.end107, !dbg !5886

land.lhs.true98:                                  ; preds = %if.then96
  %57 = load %struct.IDProperty*, %struct.IDProperty** %properties.addr, align 8, !dbg !5887
  %58 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi, align 8, !dbg !5888
  %ptr99 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %58, i32 0, i32 17, !dbg !5889
  %59 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr99, align 8, !dbg !5889
  %data = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %59, i32 0, i32 2, !dbg !5890
  %60 = load i8*, i8** %data, align 8, !dbg !5890
  %61 = bitcast i8* %60 to %struct.IDProperty*, !dbg !5888
  %62 = load i8, i8* %is_strict.addr, align 1, !dbg !5891
  %call100 = call zeroext i8 @IDP_EqualsProperties_ex(%struct.IDProperty* %57, %struct.IDProperty* %61, i8 zeroext %62), !dbg !5892
  %conv101 = zext i8 %call100 to i32, !dbg !5892
  %tobool102 = icmp ne i32 %conv101, 0, !dbg !5892
  br i1 %tobool102, label %if.then103, label %if.end107, !dbg !5893

if.then103:                                       ; preds = %land.lhs.true98
  %63 = load %struct.wmKeyMap**, %struct.wmKeyMap*** %keymap_r.addr, align 8, !dbg !5894
  %tobool104 = icmp ne %struct.wmKeyMap** %63, null, !dbg !5894
  br i1 %tobool104, label %if.then105, label %if.end106, !dbg !5897

if.then105:                                       ; preds = %if.then103
  %64 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !5898
  %65 = load %struct.wmKeyMap**, %struct.wmKeyMap*** %keymap_r.addr, align 8, !dbg !5899
  store %struct.wmKeyMap* %64, %struct.wmKeyMap** %65, align 8, !dbg !5900
  br label %if.end106, !dbg !5901

if.end106:                                        ; preds = %if.then105, %if.then103
  %66 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi, align 8, !dbg !5902
  store %struct.wmKeyMapItem* %66, %struct.wmKeyMapItem** %retval, align 8, !dbg !5903
  br label %return, !dbg !5903

if.end107:                                        ; preds = %land.lhs.true98, %if.then96
  br label %if.end111, !dbg !5904

if.else:                                          ; preds = %if.end94
  %67 = load %struct.wmKeyMap**, %struct.wmKeyMap*** %keymap_r.addr, align 8, !dbg !5905
  %tobool108 = icmp ne %struct.wmKeyMap** %67, null, !dbg !5905
  br i1 %tobool108, label %if.then109, label %if.end110, !dbg !5908

if.then109:                                       ; preds = %if.else
  %68 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !5909
  %69 = load %struct.wmKeyMap**, %struct.wmKeyMap*** %keymap_r.addr, align 8, !dbg !5910
  store %struct.wmKeyMap* %68, %struct.wmKeyMap** %69, align 8, !dbg !5911
  br label %if.end110, !dbg !5912

if.end110:                                        ; preds = %if.then109, %if.else
  %70 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi, align 8, !dbg !5913
  store %struct.wmKeyMapItem* %70, %struct.wmKeyMapItem** %retval, align 8, !dbg !5914
  br label %return, !dbg !5914

if.end111:                                        ; preds = %if.end107
  br label %if.end112, !dbg !5915

if.end112:                                        ; preds = %if.end111, %land.lhs.true16, %if.end
  br label %for.inc, !dbg !5916

for.inc:                                          ; preds = %if.end112, %if.then92, %if.then13
  %71 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi, align 8, !dbg !5917
  %next = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %71, i32 0, i32 0, !dbg !5918
  %72 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %next, align 8, !dbg !5918
  store %struct.wmKeyMapItem* %72, %struct.wmKeyMapItem** %kmi, align 8, !dbg !5919
  br label %for.cond9, !dbg !5920, !llvm.loop !5921

for.end:                                          ; preds = %for.cond9
  br label %if.end113, !dbg !5923

if.end113:                                        ; preds = %for.end, %lor.lhs.false, %for.body
  br label %for.inc114, !dbg !5924

for.inc114:                                       ; preds = %if.end113
  %73 = load %struct.wmEventHandler*, %struct.wmEventHandler** %handler, align 8, !dbg !5925
  %next115 = getelementptr inbounds %struct.wmEventHandler, %struct.wmEventHandler* %73, i32 0, i32 0, !dbg !5926
  %74 = load %struct.wmEventHandler*, %struct.wmEventHandler** %next115, align 8, !dbg !5926
  store %struct.wmEventHandler* %74, %struct.wmEventHandler** %handler, align 8, !dbg !5927
  br label %for.cond, !dbg !5928, !llvm.loop !5929

for.end116:                                       ; preds = %for.cond
  %75 = load %struct.wmKeyMap**, %struct.wmKeyMap*** %keymap_r.addr, align 8, !dbg !5931
  %tobool117 = icmp ne %struct.wmKeyMap** %75, null, !dbg !5931
  br i1 %tobool117, label %if.then118, label %if.end119, !dbg !5933

if.then118:                                       ; preds = %for.end116
  %76 = load %struct.wmKeyMap**, %struct.wmKeyMap*** %keymap_r.addr, align 8, !dbg !5934
  store %struct.wmKeyMap* null, %struct.wmKeyMap** %76, align 8, !dbg !5935
  br label %if.end119, !dbg !5936

if.end119:                                        ; preds = %if.then118, %for.end116
  store %struct.wmKeyMapItem* null, %struct.wmKeyMapItem** %retval, align 8, !dbg !5937
  br label %return, !dbg !5937

return:                                           ; preds = %if.end119, %if.end110, %if.end106
  %77 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %retval, align 8, !dbg !5938
  ret %struct.wmKeyMapItem* %77, !dbg !5938
}

declare dso_local %struct.ARegion* @BKE_area_find_region_type(%struct.ScrArea*, i32) #2

declare dso_local zeroext i8 @IDP_EqualsProperties_ex(%struct.IDProperty*, %struct.IDProperty*, i8 zeroext) #2

; Function Attrs: noinline nounwind uwtable
define internal void @wm_keymap_item_properties_update_ot(%struct.wmKeyMapItem* %kmi) #0 !dbg !5939 {
entry:
  %kmi.addr = alloca %struct.wmKeyMapItem*, align 8
  %ot = alloca %struct.wmOperatorType*, align 8
  store %struct.wmKeyMapItem* %kmi, %struct.wmKeyMapItem** %kmi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmKeyMapItem** %kmi.addr, metadata !5940, metadata !DIExpression()), !dbg !5941
  %0 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi.addr, align 8, !dbg !5942
  %idname = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %0, i32 0, i32 2, !dbg !5944
  %arrayidx = getelementptr inbounds [64 x i8], [64 x i8]* %idname, i64 0, i64 0, !dbg !5942
  %1 = load i8, i8* %arrayidx, align 8, !dbg !5942
  %conv = zext i8 %1 to i32, !dbg !5942
  %cmp = icmp eq i32 %conv, 0, !dbg !5945
  br i1 %cmp, label %if.then, label %if.end, !dbg !5946

if.then:                                          ; preds = %entry
  br label %if.end22, !dbg !5947

if.end:                                           ; preds = %entry
  %2 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi.addr, align 8, !dbg !5949
  %ptr = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %2, i32 0, i32 17, !dbg !5951
  %3 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !5951
  %cmp2 = icmp eq %struct.PointerRNA* %3, null, !dbg !5952
  br i1 %cmp2, label %if.then4, label %if.else, !dbg !5953

if.then4:                                         ; preds = %if.end
  %4 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi.addr, align 8, !dbg !5954
  call void @wm_keymap_item_properties_set(%struct.wmKeyMapItem* %4), !dbg !5956
  br label %if.end22, !dbg !5957

if.else:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot, metadata !5958, metadata !DIExpression()), !dbg !5960
  %5 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi.addr, align 8, !dbg !5961
  %idname5 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %5, i32 0, i32 2, !dbg !5962
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %idname5, i64 0, i64 0, !dbg !5961
  %call = call %struct.wmOperatorType* @WM_operatortype_find(i8* %arraydecay, i8 zeroext 0), !dbg !5963
  store %struct.wmOperatorType* %call, %struct.wmOperatorType** %ot, align 8, !dbg !5960
  %6 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot, align 8, !dbg !5964
  %tobool = icmp ne %struct.wmOperatorType* %6, null, !dbg !5964
  br i1 %tobool, label %if.then6, label %if.else14, !dbg !5966

if.then6:                                         ; preds = %if.else
  %7 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot, align 8, !dbg !5967
  %srna = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %7, i32 0, i32 11, !dbg !5970
  %8 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !5970
  %9 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi.addr, align 8, !dbg !5971
  %ptr7 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %9, i32 0, i32 17, !dbg !5972
  %10 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr7, align 8, !dbg !5972
  %type = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %10, i32 0, i32 1, !dbg !5973
  %11 = load %struct.StructRNA*, %struct.StructRNA** %type, align 8, !dbg !5973
  %cmp8 = icmp ne %struct.StructRNA* %8, %11, !dbg !5974
  br i1 %cmp8, label %if.then10, label %if.end13, !dbg !5975

if.then10:                                        ; preds = %if.then6
  %12 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi.addr, align 8, !dbg !5976
  %ptr11 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %12, i32 0, i32 17, !dbg !5978
  %13 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr11, align 8, !dbg !5978
  %14 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot, align 8, !dbg !5979
  call void @WM_operator_properties_create_ptr(%struct.PointerRNA* %13, %struct.wmOperatorType* %14), !dbg !5980
  %15 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi.addr, align 8, !dbg !5981
  %ptr12 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %15, i32 0, i32 17, !dbg !5982
  %16 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr12, align 8, !dbg !5982
  call void @WM_operator_properties_sanitize(%struct.PointerRNA* %16, i8 zeroext 1), !dbg !5983
  br label %if.end13, !dbg !5984

if.end13:                                         ; preds = %if.then10, %if.then6
  br label %if.end21, !dbg !5985

if.else14:                                        ; preds = %if.else
  %17 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi.addr, align 8, !dbg !5986
  %ptr15 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %17, i32 0, i32 17, !dbg !5986
  %18 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr15, align 8, !dbg !5986
  %tobool16 = icmp ne %struct.PointerRNA* %18, null, !dbg !5986
  br i1 %tobool16, label %if.then17, label %if.end20, !dbg !5989

if.then17:                                        ; preds = %if.else14
  %19 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !5990
  %20 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi.addr, align 8, !dbg !5990
  %ptr18 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %20, i32 0, i32 17, !dbg !5990
  %21 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr18, align 8, !dbg !5990
  %22 = bitcast %struct.PointerRNA* %21 to i8*, !dbg !5990
  call void %19(i8* %22), !dbg !5990
  %23 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi.addr, align 8, !dbg !5990
  %ptr19 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %23, i32 0, i32 17, !dbg !5990
  store %struct.PointerRNA* null, %struct.PointerRNA** %ptr19, align 8, !dbg !5990
  br label %if.end20, !dbg !5990

if.end20:                                         ; preds = %if.then17, %if.else14
  br label %if.end21

if.end21:                                         ; preds = %if.end20, %if.end13
  br label %if.end22

if.end22:                                         ; preds = %if.then, %if.end21, %if.then4
  ret void, !dbg !5992
}

declare dso_local void @WM_operator_properties_create_ptr(%struct.PointerRNA*, %struct.wmOperatorType*) #2

; Function Attrs: noinline nounwind uwtable
define internal %struct.wmKeyConfig* @WM_keyconfig_active(%struct.wmWindowManager* %wm) #0 !dbg !5993 {
entry:
  %retval = alloca %struct.wmKeyConfig*, align 8
  %wm.addr = alloca %struct.wmWindowManager*, align 8
  %keyconf = alloca %struct.wmKeyConfig*, align 8
  store %struct.wmWindowManager* %wm, %struct.wmWindowManager** %wm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmWindowManager** %wm.addr, metadata !5996, metadata !DIExpression()), !dbg !5997
  call void @llvm.dbg.declare(metadata %struct.wmKeyConfig** %keyconf, metadata !5998, metadata !DIExpression()), !dbg !5999
  %0 = load %struct.wmWindowManager*, %struct.wmWindowManager** %wm.addr, align 8, !dbg !6000
  %keyconfigs = getelementptr inbounds %struct.wmWindowManager, %struct.wmWindowManager* %0, i32 0, i32 13, !dbg !6001
  %call = call i8* @BLI_findstring(%struct.ListBase* %keyconfigs, i8* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 45, i64 0), i32 16), !dbg !6002
  %1 = bitcast i8* %call to %struct.wmKeyConfig*, !dbg !6002
  store %struct.wmKeyConfig* %1, %struct.wmKeyConfig** %keyconf, align 8, !dbg !6003
  %2 = load %struct.wmKeyConfig*, %struct.wmKeyConfig** %keyconf, align 8, !dbg !6004
  %tobool = icmp ne %struct.wmKeyConfig* %2, null, !dbg !6004
  br i1 %tobool, label %if.then, label %if.end, !dbg !6006

if.then:                                          ; preds = %entry
  %3 = load %struct.wmKeyConfig*, %struct.wmKeyConfig** %keyconf, align 8, !dbg !6007
  store %struct.wmKeyConfig* %3, %struct.wmKeyConfig** %retval, align 8, !dbg !6008
  br label %return, !dbg !6008

if.end:                                           ; preds = %entry
  %4 = load %struct.wmWindowManager*, %struct.wmWindowManager** %wm.addr, align 8, !dbg !6009
  %defaultconf = getelementptr inbounds %struct.wmWindowManager, %struct.wmWindowManager* %4, i32 0, i32 14, !dbg !6010
  %5 = load %struct.wmKeyConfig*, %struct.wmKeyConfig** %defaultconf, align 8, !dbg !6010
  store %struct.wmKeyConfig* %5, %struct.wmKeyConfig** %retval, align 8, !dbg !6011
  br label %return, !dbg !6011

return:                                           ; preds = %if.end, %if.then
  %6 = load %struct.wmKeyConfig*, %struct.wmKeyConfig** %retval, align 8, !dbg !6012
  ret %struct.wmKeyConfig* %6, !dbg !6012
}

declare dso_local i8* @BLI_findstring(%struct.ListBase*, i8*, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal void @wm_keymap_diff(%struct.wmKeyMap* %diff_km, %struct.wmKeyMap* %from_km, %struct.wmKeyMap* %to_km, %struct.wmKeyMap* %orig_km, %struct.wmKeyMap* %addon_km) #0 !dbg !6013 {
entry:
  %diff_km.addr = alloca %struct.wmKeyMap*, align 8
  %from_km.addr = alloca %struct.wmKeyMap*, align 8
  %to_km.addr = alloca %struct.wmKeyMap*, align 8
  %orig_km.addr = alloca %struct.wmKeyMap*, align 8
  %addon_km.addr = alloca %struct.wmKeyMap*, align 8
  %kmi = alloca %struct.wmKeyMapItem*, align 8
  %to_kmi = alloca %struct.wmKeyMapItem*, align 8
  %orig_kmi = alloca %struct.wmKeyMapItem*, align 8
  %kmdi = alloca %struct.wmKeyMapDiffItem*, align 8
  store %struct.wmKeyMap* %diff_km, %struct.wmKeyMap** %diff_km.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmKeyMap** %diff_km.addr, metadata !6016, metadata !DIExpression()), !dbg !6017
  store %struct.wmKeyMap* %from_km, %struct.wmKeyMap** %from_km.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmKeyMap** %from_km.addr, metadata !6018, metadata !DIExpression()), !dbg !6019
  store %struct.wmKeyMap* %to_km, %struct.wmKeyMap** %to_km.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmKeyMap** %to_km.addr, metadata !6020, metadata !DIExpression()), !dbg !6021
  store %struct.wmKeyMap* %orig_km, %struct.wmKeyMap** %orig_km.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmKeyMap** %orig_km.addr, metadata !6022, metadata !DIExpression()), !dbg !6023
  store %struct.wmKeyMap* %addon_km, %struct.wmKeyMap** %addon_km.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmKeyMap** %addon_km.addr, metadata !6024, metadata !DIExpression()), !dbg !6025
  call void @llvm.dbg.declare(metadata %struct.wmKeyMapItem** %kmi, metadata !6026, metadata !DIExpression()), !dbg !6027
  call void @llvm.dbg.declare(metadata %struct.wmKeyMapItem** %to_kmi, metadata !6028, metadata !DIExpression()), !dbg !6029
  call void @llvm.dbg.declare(metadata %struct.wmKeyMapItem** %orig_kmi, metadata !6030, metadata !DIExpression()), !dbg !6031
  call void @llvm.dbg.declare(metadata %struct.wmKeyMapDiffItem** %kmdi, metadata !6032, metadata !DIExpression()), !dbg !6033
  %0 = load %struct.wmKeyMap*, %struct.wmKeyMap** %from_km.addr, align 8, !dbg !6034
  %items = getelementptr inbounds %struct.wmKeyMap, %struct.wmKeyMap* %0, i32 0, i32 2, !dbg !6036
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %items, i32 0, i32 0, !dbg !6037
  %1 = load i8*, i8** %first, align 8, !dbg !6037
  %2 = bitcast i8* %1 to %struct.wmKeyMapItem*, !dbg !6034
  store %struct.wmKeyMapItem* %2, %struct.wmKeyMapItem** %kmi, align 8, !dbg !6038
  br label %for.cond, !dbg !6039

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi, align 8, !dbg !6040
  %tobool = icmp ne %struct.wmKeyMapItem* %3, null, !dbg !6042
  br i1 %tobool, label %for.body, label %for.end, !dbg !6042

for.body:                                         ; preds = %for.cond
  %4 = load %struct.wmKeyMap*, %struct.wmKeyMap** %to_km.addr, align 8, !dbg !6043
  %5 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi, align 8, !dbg !6045
  %id = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %5, i32 0, i32 15, !dbg !6046
  %6 = load i16, i16* %id, align 4, !dbg !6046
  %conv = sext i16 %6 to i32, !dbg !6045
  %call = call %struct.wmKeyMapItem* @WM_keymap_item_find_id(%struct.wmKeyMap* %4, i32 %conv), !dbg !6047
  store %struct.wmKeyMapItem* %call, %struct.wmKeyMapItem** %to_kmi, align 8, !dbg !6048
  %7 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %to_kmi, align 8, !dbg !6049
  %tobool1 = icmp ne %struct.wmKeyMapItem* %7, null, !dbg !6049
  br i1 %tobool1, label %if.else, label %if.then, !dbg !6051

if.then:                                          ; preds = %for.body
  %8 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !6052
  %call2 = call i8* %8(i64 32, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.106, i64 0, i64 0)), !dbg !6052
  %9 = bitcast i8* %call2 to %struct.wmKeyMapDiffItem*, !dbg !6052
  store %struct.wmKeyMapDiffItem* %9, %struct.wmKeyMapDiffItem** %kmdi, align 8, !dbg !6054
  %10 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi, align 8, !dbg !6055
  %call3 = call %struct.wmKeyMapItem* @wm_keymap_item_copy(%struct.wmKeyMapItem* %10), !dbg !6056
  %11 = load %struct.wmKeyMapDiffItem*, %struct.wmKeyMapDiffItem** %kmdi, align 8, !dbg !6057
  %remove_item = getelementptr inbounds %struct.wmKeyMapDiffItem, %struct.wmKeyMapDiffItem* %11, i32 0, i32 2, !dbg !6058
  store %struct.wmKeyMapItem* %call3, %struct.wmKeyMapItem** %remove_item, align 8, !dbg !6059
  %12 = load %struct.wmKeyMap*, %struct.wmKeyMap** %diff_km.addr, align 8, !dbg !6060
  %diff_items = getelementptr inbounds %struct.wmKeyMap, %struct.wmKeyMap* %12, i32 0, i32 3, !dbg !6061
  %13 = load %struct.wmKeyMapDiffItem*, %struct.wmKeyMapDiffItem** %kmdi, align 8, !dbg !6062
  %14 = bitcast %struct.wmKeyMapDiffItem* %13 to i8*, !dbg !6062
  call void @BLI_addtail(%struct.ListBase* %diff_items, i8* %14), !dbg !6063
  br label %if.end13, !dbg !6064

if.else:                                          ; preds = %for.body
  %15 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %to_kmi, align 8, !dbg !6065
  %tobool4 = icmp ne %struct.wmKeyMapItem* %15, null, !dbg !6065
  br i1 %tobool4, label %land.lhs.true, label %if.end, !dbg !6067

land.lhs.true:                                    ; preds = %if.else
  %16 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi, align 8, !dbg !6068
  %17 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %to_kmi, align 8, !dbg !6069
  %call5 = call i32 @wm_keymap_item_equals(%struct.wmKeyMapItem* %16, %struct.wmKeyMapItem* %17), !dbg !6070
  %tobool6 = icmp ne i32 %call5, 0, !dbg !6070
  br i1 %tobool6, label %if.end, label %if.then7, !dbg !6071

if.then7:                                         ; preds = %land.lhs.true
  %18 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !6072
  %call8 = call i8* %18(i64 32, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.106, i64 0, i64 0)), !dbg !6072
  %19 = bitcast i8* %call8 to %struct.wmKeyMapDiffItem*, !dbg !6072
  store %struct.wmKeyMapDiffItem* %19, %struct.wmKeyMapDiffItem** %kmdi, align 8, !dbg !6074
  %20 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi, align 8, !dbg !6075
  %call9 = call %struct.wmKeyMapItem* @wm_keymap_item_copy(%struct.wmKeyMapItem* %20), !dbg !6076
  %21 = load %struct.wmKeyMapDiffItem*, %struct.wmKeyMapDiffItem** %kmdi, align 8, !dbg !6077
  %remove_item10 = getelementptr inbounds %struct.wmKeyMapDiffItem, %struct.wmKeyMapDiffItem* %21, i32 0, i32 2, !dbg !6078
  store %struct.wmKeyMapItem* %call9, %struct.wmKeyMapItem** %remove_item10, align 8, !dbg !6079
  %22 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %to_kmi, align 8, !dbg !6080
  %call11 = call %struct.wmKeyMapItem* @wm_keymap_item_copy(%struct.wmKeyMapItem* %22), !dbg !6081
  %23 = load %struct.wmKeyMapDiffItem*, %struct.wmKeyMapDiffItem** %kmdi, align 8, !dbg !6082
  %add_item = getelementptr inbounds %struct.wmKeyMapDiffItem, %struct.wmKeyMapDiffItem* %23, i32 0, i32 3, !dbg !6083
  store %struct.wmKeyMapItem* %call11, %struct.wmKeyMapItem** %add_item, align 8, !dbg !6084
  %24 = load %struct.wmKeyMap*, %struct.wmKeyMap** %diff_km.addr, align 8, !dbg !6085
  %diff_items12 = getelementptr inbounds %struct.wmKeyMap, %struct.wmKeyMap* %24, i32 0, i32 3, !dbg !6086
  %25 = load %struct.wmKeyMapDiffItem*, %struct.wmKeyMapDiffItem** %kmdi, align 8, !dbg !6087
  %26 = bitcast %struct.wmKeyMapDiffItem* %25 to i8*, !dbg !6087
  call void @BLI_addtail(%struct.ListBase* %diff_items12, i8* %26), !dbg !6088
  br label %if.end, !dbg !6089

if.end:                                           ; preds = %if.then7, %land.lhs.true, %if.else
  br label %if.end13

if.end13:                                         ; preds = %if.end, %if.then
  %27 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %to_kmi, align 8, !dbg !6090
  %tobool14 = icmp ne %struct.wmKeyMapItem* %27, null, !dbg !6090
  br i1 %tobool14, label %if.then15, label %if.end34, !dbg !6092

if.then15:                                        ; preds = %if.end13
  %28 = load %struct.wmKeyMap*, %struct.wmKeyMap** %orig_km.addr, align 8, !dbg !6093
  %29 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi, align 8, !dbg !6095
  %id16 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %29, i32 0, i32 15, !dbg !6096
  %30 = load i16, i16* %id16, align 4, !dbg !6096
  %conv17 = sext i16 %30 to i32, !dbg !6095
  %call18 = call %struct.wmKeyMapItem* @WM_keymap_item_find_id(%struct.wmKeyMap* %28, i32 %conv17), !dbg !6097
  store %struct.wmKeyMapItem* %call18, %struct.wmKeyMapItem** %orig_kmi, align 8, !dbg !6098
  %31 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %orig_kmi, align 8, !dbg !6099
  %tobool19 = icmp ne %struct.wmKeyMapItem* %31, null, !dbg !6099
  br i1 %tobool19, label %if.end22, label %if.then20, !dbg !6101

if.then20:                                        ; preds = %if.then15
  %32 = load %struct.wmKeyMap*, %struct.wmKeyMap** %addon_km.addr, align 8, !dbg !6102
  %33 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi, align 8, !dbg !6103
  %call21 = call %struct.wmKeyMapItem* @wm_keymap_find_item_equals(%struct.wmKeyMap* %32, %struct.wmKeyMapItem* %33), !dbg !6104
  store %struct.wmKeyMapItem* %call21, %struct.wmKeyMapItem** %orig_kmi, align 8, !dbg !6105
  br label %if.end22, !dbg !6106

if.end22:                                         ; preds = %if.then20, %if.then15
  %34 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %orig_kmi, align 8, !dbg !6107
  %tobool23 = icmp ne %struct.wmKeyMapItem* %34, null, !dbg !6107
  br i1 %tobool23, label %if.then24, label %if.end33, !dbg !6109

if.then24:                                        ; preds = %if.end22
  %35 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %orig_kmi, align 8, !dbg !6110
  %flag = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %35, i32 0, i32 13, !dbg !6112
  %36 = load i16, i16* %flag, align 8, !dbg !6113
  %conv25 = sext i16 %36 to i32, !dbg !6113
  %and = and i32 %conv25, -3, !dbg !6113
  %conv26 = trunc i32 %and to i16, !dbg !6113
  store i16 %conv26, i16* %flag, align 8, !dbg !6113
  %37 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %to_kmi, align 8, !dbg !6114
  %flag27 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %37, i32 0, i32 13, !dbg !6115
  %38 = load i16, i16* %flag27, align 8, !dbg !6115
  %conv28 = sext i16 %38 to i32, !dbg !6114
  %and29 = and i32 %conv28, 2, !dbg !6116
  %39 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %orig_kmi, align 8, !dbg !6117
  %flag30 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %39, i32 0, i32 13, !dbg !6118
  %40 = load i16, i16* %flag30, align 8, !dbg !6119
  %conv31 = sext i16 %40 to i32, !dbg !6119
  %or = or i32 %conv31, %and29, !dbg !6119
  %conv32 = trunc i32 %or to i16, !dbg !6119
  store i16 %conv32, i16* %flag30, align 8, !dbg !6119
  br label %if.end33, !dbg !6120

if.end33:                                         ; preds = %if.then24, %if.end22
  br label %if.end34, !dbg !6121

if.end34:                                         ; preds = %if.end33, %if.end13
  br label %for.inc, !dbg !6122

for.inc:                                          ; preds = %if.end34
  %41 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi, align 8, !dbg !6123
  %next = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %41, i32 0, i32 0, !dbg !6124
  %42 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %next, align 8, !dbg !6124
  store %struct.wmKeyMapItem* %42, %struct.wmKeyMapItem** %kmi, align 8, !dbg !6125
  br label %for.cond, !dbg !6126, !llvm.loop !6127

for.end:                                          ; preds = %for.cond
  %43 = load %struct.wmKeyMap*, %struct.wmKeyMap** %to_km.addr, align 8, !dbg !6129
  %items35 = getelementptr inbounds %struct.wmKeyMap, %struct.wmKeyMap* %43, i32 0, i32 2, !dbg !6131
  %first36 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %items35, i32 0, i32 0, !dbg !6132
  %44 = load i8*, i8** %first36, align 8, !dbg !6132
  %45 = bitcast i8* %44 to %struct.wmKeyMapItem*, !dbg !6129
  store %struct.wmKeyMapItem* %45, %struct.wmKeyMapItem** %kmi, align 8, !dbg !6133
  br label %for.cond37, !dbg !6134

for.cond37:                                       ; preds = %for.inc49, %for.end
  %46 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi, align 8, !dbg !6135
  %tobool38 = icmp ne %struct.wmKeyMapItem* %46, null, !dbg !6137
  br i1 %tobool38, label %for.body39, label %for.end51, !dbg !6137

for.body39:                                       ; preds = %for.cond37
  %47 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi, align 8, !dbg !6138
  %id40 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %47, i32 0, i32 15, !dbg !6141
  %48 = load i16, i16* %id40, align 4, !dbg !6141
  %conv41 = sext i16 %48 to i32, !dbg !6138
  %cmp = icmp slt i32 %conv41, 0, !dbg !6142
  br i1 %cmp, label %if.then43, label %if.end48, !dbg !6143

if.then43:                                        ; preds = %for.body39
  %49 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !6144
  %call44 = call i8* %49(i64 32, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.106, i64 0, i64 0)), !dbg !6144
  %50 = bitcast i8* %call44 to %struct.wmKeyMapDiffItem*, !dbg !6144
  store %struct.wmKeyMapDiffItem* %50, %struct.wmKeyMapDiffItem** %kmdi, align 8, !dbg !6146
  %51 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi, align 8, !dbg !6147
  %call45 = call %struct.wmKeyMapItem* @wm_keymap_item_copy(%struct.wmKeyMapItem* %51), !dbg !6148
  %52 = load %struct.wmKeyMapDiffItem*, %struct.wmKeyMapDiffItem** %kmdi, align 8, !dbg !6149
  %add_item46 = getelementptr inbounds %struct.wmKeyMapDiffItem, %struct.wmKeyMapDiffItem* %52, i32 0, i32 3, !dbg !6150
  store %struct.wmKeyMapItem* %call45, %struct.wmKeyMapItem** %add_item46, align 8, !dbg !6151
  %53 = load %struct.wmKeyMap*, %struct.wmKeyMap** %diff_km.addr, align 8, !dbg !6152
  %diff_items47 = getelementptr inbounds %struct.wmKeyMap, %struct.wmKeyMap* %53, i32 0, i32 3, !dbg !6153
  %54 = load %struct.wmKeyMapDiffItem*, %struct.wmKeyMapDiffItem** %kmdi, align 8, !dbg !6154
  %55 = bitcast %struct.wmKeyMapDiffItem* %54 to i8*, !dbg !6154
  call void @BLI_addtail(%struct.ListBase* %diff_items47, i8* %55), !dbg !6155
  br label %if.end48, !dbg !6156

if.end48:                                         ; preds = %if.then43, %for.body39
  br label %for.inc49, !dbg !6157

for.inc49:                                        ; preds = %if.end48
  %56 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi, align 8, !dbg !6158
  %next50 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %56, i32 0, i32 0, !dbg !6159
  %57 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %next50, align 8, !dbg !6159
  store %struct.wmKeyMapItem* %57, %struct.wmKeyMapItem** %kmi, align 8, !dbg !6160
  br label %for.cond37, !dbg !6161, !llvm.loop !6162

for.end51:                                        ; preds = %for.cond37
  ret void, !dbg !6164
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.wmKeyMapItem* @wm_keymap_item_copy(%struct.wmKeyMapItem* %kmi) #0 !dbg !6165 {
entry:
  %kmi.addr = alloca %struct.wmKeyMapItem*, align 8
  %kmin = alloca %struct.wmKeyMapItem*, align 8
  store %struct.wmKeyMapItem* %kmi, %struct.wmKeyMapItem** %kmi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmKeyMapItem** %kmi.addr, metadata !6168, metadata !DIExpression()), !dbg !6169
  call void @llvm.dbg.declare(metadata %struct.wmKeyMapItem** %kmin, metadata !6170, metadata !DIExpression()), !dbg !6171
  %0 = load i8* (i8*)*, i8* (i8*)** @MEM_dupallocN, align 8, !dbg !6172
  %1 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi.addr, align 8, !dbg !6173
  %2 = bitcast %struct.wmKeyMapItem* %1 to i8*, !dbg !6173
  %call = call i8* %0(i8* %2), !dbg !6172
  %3 = bitcast i8* %call to %struct.wmKeyMapItem*, !dbg !6172
  store %struct.wmKeyMapItem* %3, %struct.wmKeyMapItem** %kmin, align 8, !dbg !6171
  %4 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmin, align 8, !dbg !6174
  %next = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %4, i32 0, i32 0, !dbg !6175
  store %struct.wmKeyMapItem* null, %struct.wmKeyMapItem** %next, align 8, !dbg !6176
  %5 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmin, align 8, !dbg !6177
  %prev = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %5, i32 0, i32 1, !dbg !6178
  store %struct.wmKeyMapItem* null, %struct.wmKeyMapItem** %prev, align 8, !dbg !6179
  %6 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmin, align 8, !dbg !6180
  %flag = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %6, i32 0, i32 13, !dbg !6181
  %7 = load i16, i16* %flag, align 8, !dbg !6182
  %conv = sext i16 %7 to i32, !dbg !6182
  %and = and i32 %conv, -9, !dbg !6182
  %conv1 = trunc i32 %and to i16, !dbg !6182
  store i16 %conv1, i16* %flag, align 8, !dbg !6182
  %8 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmin, align 8, !dbg !6183
  %properties = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %8, i32 0, i32 3, !dbg !6185
  %9 = load %struct.IDProperty*, %struct.IDProperty** %properties, align 8, !dbg !6185
  %tobool = icmp ne %struct.IDProperty* %9, null, !dbg !6183
  br i1 %tobool, label %if.then, label %if.end, !dbg !6186

if.then:                                          ; preds = %entry
  %10 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !6187
  %call2 = call i8* %10(i64 24, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.107, i64 0, i64 0)), !dbg !6187
  %11 = bitcast i8* %call2 to %struct.PointerRNA*, !dbg !6187
  %12 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmin, align 8, !dbg !6189
  %ptr = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %12, i32 0, i32 17, !dbg !6190
  store %struct.PointerRNA* %11, %struct.PointerRNA** %ptr, align 8, !dbg !6191
  %13 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmin, align 8, !dbg !6192
  %ptr3 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %13, i32 0, i32 17, !dbg !6193
  %14 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr3, align 8, !dbg !6193
  %15 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmin, align 8, !dbg !6194
  %idname = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %15, i32 0, i32 2, !dbg !6195
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %idname, i64 0, i64 0, !dbg !6194
  call void @WM_operator_properties_create(%struct.PointerRNA* %14, i8* %arraydecay), !dbg !6196
  %16 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmin, align 8, !dbg !6197
  %properties4 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %16, i32 0, i32 3, !dbg !6198
  %17 = load %struct.IDProperty*, %struct.IDProperty** %properties4, align 8, !dbg !6198
  %call5 = call %struct.IDProperty* @IDP_CopyProperty(%struct.IDProperty* %17), !dbg !6199
  %18 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmin, align 8, !dbg !6200
  %properties6 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %18, i32 0, i32 3, !dbg !6201
  store %struct.IDProperty* %call5, %struct.IDProperty** %properties6, align 8, !dbg !6202
  %19 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmin, align 8, !dbg !6203
  %properties7 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %19, i32 0, i32 3, !dbg !6204
  %20 = load %struct.IDProperty*, %struct.IDProperty** %properties7, align 8, !dbg !6204
  %21 = bitcast %struct.IDProperty* %20 to i8*, !dbg !6203
  %22 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmin, align 8, !dbg !6205
  %ptr8 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %22, i32 0, i32 17, !dbg !6206
  %23 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr8, align 8, !dbg !6206
  %data = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %23, i32 0, i32 2, !dbg !6207
  store i8* %21, i8** %data, align 8, !dbg !6208
  br label %if.end, !dbg !6209

if.end:                                           ; preds = %if.then, %entry
  %24 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmin, align 8, !dbg !6210
  ret %struct.wmKeyMapItem* %24, !dbg !6211
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @wm_keymap_item_equals(%struct.wmKeyMapItem* %a, %struct.wmKeyMapItem* %b) #0 !dbg !6212 {
entry:
  %a.addr = alloca %struct.wmKeyMapItem*, align 8
  %b.addr = alloca %struct.wmKeyMapItem*, align 8
  store %struct.wmKeyMapItem* %a, %struct.wmKeyMapItem** %a.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmKeyMapItem** %a.addr, metadata !6213, metadata !DIExpression()), !dbg !6214
  store %struct.wmKeyMapItem* %b, %struct.wmKeyMapItem** %b.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmKeyMapItem** %b.addr, metadata !6215, metadata !DIExpression()), !dbg !6216
  %0 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %a.addr, align 8, !dbg !6217
  %1 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %b.addr, align 8, !dbg !6218
  %call = call i32 @wm_keymap_item_equals_result(%struct.wmKeyMapItem* %0, %struct.wmKeyMapItem* %1), !dbg !6219
  %tobool = icmp ne i32 %call, 0, !dbg !6219
  br i1 %tobool, label %land.lhs.true, label %land.end, !dbg !6220

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %a.addr, align 8, !dbg !6221
  %type = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %2, i32 0, i32 6, !dbg !6222
  %3 = load i16, i16* %type, align 2, !dbg !6222
  %conv = sext i16 %3 to i32, !dbg !6221
  %4 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %b.addr, align 8, !dbg !6223
  %type1 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %4, i32 0, i32 6, !dbg !6224
  %5 = load i16, i16* %type1, align 2, !dbg !6224
  %conv2 = sext i16 %5 to i32, !dbg !6223
  %cmp = icmp eq i32 %conv, %conv2, !dbg !6225
  br i1 %cmp, label %land.lhs.true4, label %land.end, !dbg !6226

land.lhs.true4:                                   ; preds = %land.lhs.true
  %6 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %a.addr, align 8, !dbg !6227
  %val = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %6, i32 0, i32 7, !dbg !6228
  %7 = load i16, i16* %val, align 4, !dbg !6228
  %conv5 = sext i16 %7 to i32, !dbg !6227
  %8 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %b.addr, align 8, !dbg !6229
  %val6 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %8, i32 0, i32 7, !dbg !6230
  %9 = load i16, i16* %val6, align 4, !dbg !6230
  %conv7 = sext i16 %9 to i32, !dbg !6229
  %cmp8 = icmp eq i32 %conv5, %conv7, !dbg !6231
  br i1 %cmp8, label %land.lhs.true10, label %land.end, !dbg !6232

land.lhs.true10:                                  ; preds = %land.lhs.true4
  %10 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %a.addr, align 8, !dbg !6233
  %shift = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %10, i32 0, i32 8, !dbg !6234
  %11 = load i16, i16* %shift, align 2, !dbg !6234
  %conv11 = sext i16 %11 to i32, !dbg !6233
  %12 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %b.addr, align 8, !dbg !6235
  %shift12 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %12, i32 0, i32 8, !dbg !6236
  %13 = load i16, i16* %shift12, align 2, !dbg !6236
  %conv13 = sext i16 %13 to i32, !dbg !6235
  %cmp14 = icmp eq i32 %conv11, %conv13, !dbg !6237
  br i1 %cmp14, label %land.lhs.true16, label %land.end, !dbg !6238

land.lhs.true16:                                  ; preds = %land.lhs.true10
  %14 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %a.addr, align 8, !dbg !6239
  %ctrl = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %14, i32 0, i32 9, !dbg !6240
  %15 = load i16, i16* %ctrl, align 8, !dbg !6240
  %conv17 = sext i16 %15 to i32, !dbg !6239
  %16 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %b.addr, align 8, !dbg !6241
  %ctrl18 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %16, i32 0, i32 9, !dbg !6242
  %17 = load i16, i16* %ctrl18, align 8, !dbg !6242
  %conv19 = sext i16 %17 to i32, !dbg !6241
  %cmp20 = icmp eq i32 %conv17, %conv19, !dbg !6243
  br i1 %cmp20, label %land.lhs.true22, label %land.end, !dbg !6244

land.lhs.true22:                                  ; preds = %land.lhs.true16
  %18 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %a.addr, align 8, !dbg !6245
  %alt = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %18, i32 0, i32 10, !dbg !6246
  %19 = load i16, i16* %alt, align 2, !dbg !6246
  %conv23 = sext i16 %19 to i32, !dbg !6245
  %20 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %b.addr, align 8, !dbg !6247
  %alt24 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %20, i32 0, i32 10, !dbg !6248
  %21 = load i16, i16* %alt24, align 2, !dbg !6248
  %conv25 = sext i16 %21 to i32, !dbg !6247
  %cmp26 = icmp eq i32 %conv23, %conv25, !dbg !6249
  br i1 %cmp26, label %land.lhs.true28, label %land.end, !dbg !6250

land.lhs.true28:                                  ; preds = %land.lhs.true22
  %22 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %a.addr, align 8, !dbg !6251
  %oskey = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %22, i32 0, i32 11, !dbg !6252
  %23 = load i16, i16* %oskey, align 4, !dbg !6252
  %conv29 = sext i16 %23 to i32, !dbg !6251
  %24 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %b.addr, align 8, !dbg !6253
  %oskey30 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %24, i32 0, i32 11, !dbg !6254
  %25 = load i16, i16* %oskey30, align 4, !dbg !6254
  %conv31 = sext i16 %25 to i32, !dbg !6253
  %cmp32 = icmp eq i32 %conv29, %conv31, !dbg !6255
  br i1 %cmp32, label %land.lhs.true34, label %land.end, !dbg !6256

land.lhs.true34:                                  ; preds = %land.lhs.true28
  %26 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %a.addr, align 8, !dbg !6257
  %keymodifier = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %26, i32 0, i32 12, !dbg !6258
  %27 = load i16, i16* %keymodifier, align 2, !dbg !6258
  %conv35 = sext i16 %27 to i32, !dbg !6257
  %28 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %b.addr, align 8, !dbg !6259
  %keymodifier36 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %28, i32 0, i32 12, !dbg !6260
  %29 = load i16, i16* %keymodifier36, align 2, !dbg !6260
  %conv37 = sext i16 %29 to i32, !dbg !6259
  %cmp38 = icmp eq i32 %conv35, %conv37, !dbg !6261
  br i1 %cmp38, label %land.rhs, label %land.end, !dbg !6262

land.rhs:                                         ; preds = %land.lhs.true34
  %30 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %a.addr, align 8, !dbg !6263
  %maptype = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %30, i32 0, i32 14, !dbg !6264
  %31 = load i16, i16* %maptype, align 2, !dbg !6264
  %conv40 = sext i16 %31 to i32, !dbg !6263
  %32 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %b.addr, align 8, !dbg !6265
  %maptype41 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %32, i32 0, i32 14, !dbg !6266
  %33 = load i16, i16* %maptype41, align 2, !dbg !6266
  %conv42 = sext i16 %33 to i32, !dbg !6265
  %cmp43 = icmp eq i32 %conv40, %conv42, !dbg !6267
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true34, %land.lhs.true28, %land.lhs.true22, %land.lhs.true16, %land.lhs.true10, %land.lhs.true4, %land.lhs.true, %entry
  %34 = phi i1 [ false, %land.lhs.true34 ], [ false, %land.lhs.true28 ], [ false, %land.lhs.true22 ], [ false, %land.lhs.true16 ], [ false, %land.lhs.true10 ], [ false, %land.lhs.true4 ], [ false, %land.lhs.true ], [ false, %entry ], [ %cmp43, %land.rhs ], !dbg !6268
  %land.ext = zext i1 %34 to i32, !dbg !6262
  ret i32 %land.ext, !dbg !6269
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.wmKeyMapItem* @wm_keymap_find_item_equals(%struct.wmKeyMap* %km, %struct.wmKeyMapItem* %needle) #0 !dbg !6270 {
entry:
  %retval = alloca %struct.wmKeyMapItem*, align 8
  %km.addr = alloca %struct.wmKeyMap*, align 8
  %needle.addr = alloca %struct.wmKeyMapItem*, align 8
  %kmi = alloca %struct.wmKeyMapItem*, align 8
  store %struct.wmKeyMap* %km, %struct.wmKeyMap** %km.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmKeyMap** %km.addr, metadata !6273, metadata !DIExpression()), !dbg !6274
  store %struct.wmKeyMapItem* %needle, %struct.wmKeyMapItem** %needle.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmKeyMapItem** %needle.addr, metadata !6275, metadata !DIExpression()), !dbg !6276
  call void @llvm.dbg.declare(metadata %struct.wmKeyMapItem** %kmi, metadata !6277, metadata !DIExpression()), !dbg !6278
  %0 = load %struct.wmKeyMap*, %struct.wmKeyMap** %km.addr, align 8, !dbg !6279
  %items = getelementptr inbounds %struct.wmKeyMap, %struct.wmKeyMap* %0, i32 0, i32 2, !dbg !6281
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %items, i32 0, i32 0, !dbg !6282
  %1 = load i8*, i8** %first, align 8, !dbg !6282
  %2 = bitcast i8* %1 to %struct.wmKeyMapItem*, !dbg !6279
  store %struct.wmKeyMapItem* %2, %struct.wmKeyMapItem** %kmi, align 8, !dbg !6283
  br label %for.cond, !dbg !6284

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi, align 8, !dbg !6285
  %tobool = icmp ne %struct.wmKeyMapItem* %3, null, !dbg !6287
  br i1 %tobool, label %for.body, label %for.end, !dbg !6287

for.body:                                         ; preds = %for.cond
  %4 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi, align 8, !dbg !6288
  %5 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %needle.addr, align 8, !dbg !6290
  %call = call i32 @wm_keymap_item_equals(%struct.wmKeyMapItem* %4, %struct.wmKeyMapItem* %5), !dbg !6291
  %tobool1 = icmp ne i32 %call, 0, !dbg !6291
  br i1 %tobool1, label %if.then, label %if.end, !dbg !6292

if.then:                                          ; preds = %for.body
  %6 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi, align 8, !dbg !6293
  store %struct.wmKeyMapItem* %6, %struct.wmKeyMapItem** %retval, align 8, !dbg !6294
  br label %return, !dbg !6294

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !6295

for.inc:                                          ; preds = %if.end
  %7 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi, align 8, !dbg !6296
  %next = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %7, i32 0, i32 0, !dbg !6297
  %8 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %next, align 8, !dbg !6297
  store %struct.wmKeyMapItem* %8, %struct.wmKeyMapItem** %kmi, align 8, !dbg !6298
  br label %for.cond, !dbg !6299, !llvm.loop !6300

for.end:                                          ; preds = %for.cond
  store %struct.wmKeyMapItem* null, %struct.wmKeyMapItem** %retval, align 8, !dbg !6302
  br label %return, !dbg !6302

return:                                           ; preds = %for.end, %if.then
  %9 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %retval, align 8, !dbg !6303
  ret %struct.wmKeyMapItem* %9, !dbg !6303
}

declare dso_local void @WM_operator_properties_create(%struct.PointerRNA*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @wm_keymap_item_equals_result(%struct.wmKeyMapItem* %a, %struct.wmKeyMapItem* %b) #0 !dbg !6304 {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca %struct.wmKeyMapItem*, align 8
  %b.addr = alloca %struct.wmKeyMapItem*, align 8
  store %struct.wmKeyMapItem* %a, %struct.wmKeyMapItem** %a.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmKeyMapItem** %a.addr, metadata !6305, metadata !DIExpression()), !dbg !6306
  store %struct.wmKeyMapItem* %b, %struct.wmKeyMapItem** %b.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmKeyMapItem** %b.addr, metadata !6307, metadata !DIExpression()), !dbg !6308
  %0 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %a.addr, align 8, !dbg !6309
  %idname = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %0, i32 0, i32 2, !dbg !6311
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %idname, i64 0, i64 0, !dbg !6309
  %1 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %b.addr, align 8, !dbg !6312
  %idname1 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %1, i32 0, i32 2, !dbg !6313
  %arraydecay2 = getelementptr inbounds [64 x i8], [64 x i8]* %idname1, i64 0, i64 0, !dbg !6312
  %call = call i32 @strcmp(i8* %arraydecay, i8* %arraydecay2) #4, !dbg !6314
  %cmp = icmp ne i32 %call, 0, !dbg !6315
  br i1 %cmp, label %if.then, label %if.end, !dbg !6316

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !6317
  br label %return, !dbg !6317

if.end:                                           ; preds = %entry
  %2 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %a.addr, align 8, !dbg !6318
  %ptr = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %2, i32 0, i32 17, !dbg !6320
  %3 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !6320
  %4 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %b.addr, align 8, !dbg !6321
  %ptr3 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %4, i32 0, i32 17, !dbg !6322
  %5 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr3, align 8, !dbg !6322
  %call4 = call zeroext i8 @RNA_struct_equals(%struct.PointerRNA* %3, %struct.PointerRNA* %5, i32 2), !dbg !6323
  %tobool = icmp ne i8 %call4, 0, !dbg !6323
  br i1 %tobool, label %if.end6, label %if.then5, !dbg !6324

if.then5:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !6325
  br label %return, !dbg !6325

if.end6:                                          ; preds = %if.end
  %6 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %a.addr, align 8, !dbg !6326
  %flag = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %6, i32 0, i32 13, !dbg !6328
  %7 = load i16, i16* %flag, align 8, !dbg !6328
  %conv = sext i16 %7 to i32, !dbg !6326
  %and = and i32 %conv, 1, !dbg !6329
  %8 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %b.addr, align 8, !dbg !6330
  %flag7 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %8, i32 0, i32 13, !dbg !6331
  %9 = load i16, i16* %flag7, align 8, !dbg !6331
  %conv8 = sext i16 %9 to i32, !dbg !6330
  %and9 = and i32 %conv8, 1, !dbg !6332
  %cmp10 = icmp ne i32 %and, %and9, !dbg !6333
  br i1 %cmp10, label %if.then12, label %if.end13, !dbg !6334

if.then12:                                        ; preds = %if.end6
  store i32 0, i32* %retval, align 4, !dbg !6335
  br label %return, !dbg !6335

if.end13:                                         ; preds = %if.end6
  %10 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %a.addr, align 8, !dbg !6336
  %propvalue = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %10, i32 0, i32 5, !dbg !6337
  %11 = load i16, i16* %propvalue, align 8, !dbg !6337
  %conv14 = sext i16 %11 to i32, !dbg !6336
  %12 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %b.addr, align 8, !dbg !6338
  %propvalue15 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %12, i32 0, i32 5, !dbg !6339
  %13 = load i16, i16* %propvalue15, align 8, !dbg !6339
  %conv16 = sext i16 %13 to i32, !dbg !6338
  %cmp17 = icmp eq i32 %conv14, %conv16, !dbg !6340
  %conv18 = zext i1 %cmp17 to i32, !dbg !6340
  store i32 %conv18, i32* %retval, align 4, !dbg !6341
  br label %return, !dbg !6341

return:                                           ; preds = %if.end13, %if.then12, %if.then5, %if.then
  %14 = load i32, i32* %retval, align 4, !dbg !6342
  ret i32 %14, !dbg !6342
}

declare dso_local zeroext i8 @RNA_struct_equals(%struct.PointerRNA*, %struct.PointerRNA*, i32) #2

declare dso_local zeroext i8 @RNA_enum_value_from_id(%struct.EnumPropertyItem*, i8*, i32*) #2

; Function Attrs: noinline nounwind uwtable
define internal %struct.wmKeyMapItem* @wm_keymap_find_item_equals_result(%struct.wmKeyMap* %km, %struct.wmKeyMapItem* %needle) #0 !dbg !6343 {
entry:
  %retval = alloca %struct.wmKeyMapItem*, align 8
  %km.addr = alloca %struct.wmKeyMap*, align 8
  %needle.addr = alloca %struct.wmKeyMapItem*, align 8
  %kmi = alloca %struct.wmKeyMapItem*, align 8
  store %struct.wmKeyMap* %km, %struct.wmKeyMap** %km.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmKeyMap** %km.addr, metadata !6344, metadata !DIExpression()), !dbg !6345
  store %struct.wmKeyMapItem* %needle, %struct.wmKeyMapItem** %needle.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmKeyMapItem** %needle.addr, metadata !6346, metadata !DIExpression()), !dbg !6347
  call void @llvm.dbg.declare(metadata %struct.wmKeyMapItem** %kmi, metadata !6348, metadata !DIExpression()), !dbg !6349
  %0 = load %struct.wmKeyMap*, %struct.wmKeyMap** %km.addr, align 8, !dbg !6350
  %items = getelementptr inbounds %struct.wmKeyMap, %struct.wmKeyMap* %0, i32 0, i32 2, !dbg !6352
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %items, i32 0, i32 0, !dbg !6353
  %1 = load i8*, i8** %first, align 8, !dbg !6353
  %2 = bitcast i8* %1 to %struct.wmKeyMapItem*, !dbg !6350
  store %struct.wmKeyMapItem* %2, %struct.wmKeyMapItem** %kmi, align 8, !dbg !6354
  br label %for.cond, !dbg !6355

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi, align 8, !dbg !6356
  %tobool = icmp ne %struct.wmKeyMapItem* %3, null, !dbg !6358
  br i1 %tobool, label %for.body, label %for.end, !dbg !6358

for.body:                                         ; preds = %for.cond
  %4 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi, align 8, !dbg !6359
  %5 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %needle.addr, align 8, !dbg !6361
  %call = call i32 @wm_keymap_item_equals_result(%struct.wmKeyMapItem* %4, %struct.wmKeyMapItem* %5), !dbg !6362
  %tobool1 = icmp ne i32 %call, 0, !dbg !6362
  br i1 %tobool1, label %if.then, label %if.end, !dbg !6363

if.then:                                          ; preds = %for.body
  %6 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi, align 8, !dbg !6364
  store %struct.wmKeyMapItem* %6, %struct.wmKeyMapItem** %retval, align 8, !dbg !6365
  br label %return, !dbg !6365

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !6366

for.inc:                                          ; preds = %if.end
  %7 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi, align 8, !dbg !6367
  %next = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %7, i32 0, i32 0, !dbg !6368
  %8 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %next, align 8, !dbg !6368
  store %struct.wmKeyMapItem* %8, %struct.wmKeyMapItem** %kmi, align 8, !dbg !6369
  br label %for.cond, !dbg !6370, !llvm.loop !6371

for.end:                                          ; preds = %for.cond
  store %struct.wmKeyMapItem* null, %struct.wmKeyMapItem** %retval, align 8, !dbg !6373
  br label %return, !dbg !6373

return:                                           ; preds = %for.end, %if.then
  %9 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %retval, align 8, !dbg !6374
  ret %struct.wmKeyMapItem* %9, !dbg !6374
}

; Function Attrs: noinline nounwind uwtable
define internal void @wm_keymap_patch(%struct.wmKeyMap* %km, %struct.wmKeyMap* %diff_km) #0 !dbg !6375 {
entry:
  %km.addr = alloca %struct.wmKeyMap*, align 8
  %diff_km.addr = alloca %struct.wmKeyMap*, align 8
  %kmdi = alloca %struct.wmKeyMapDiffItem*, align 8
  %kmi_remove = alloca %struct.wmKeyMapItem*, align 8
  %kmi_add = alloca %struct.wmKeyMapItem*, align 8
  store %struct.wmKeyMap* %km, %struct.wmKeyMap** %km.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmKeyMap** %km.addr, metadata !6376, metadata !DIExpression()), !dbg !6377
  store %struct.wmKeyMap* %diff_km, %struct.wmKeyMap** %diff_km.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmKeyMap** %diff_km.addr, metadata !6378, metadata !DIExpression()), !dbg !6379
  call void @llvm.dbg.declare(metadata %struct.wmKeyMapDiffItem** %kmdi, metadata !6380, metadata !DIExpression()), !dbg !6381
  call void @llvm.dbg.declare(metadata %struct.wmKeyMapItem** %kmi_remove, metadata !6382, metadata !DIExpression()), !dbg !6383
  call void @llvm.dbg.declare(metadata %struct.wmKeyMapItem** %kmi_add, metadata !6384, metadata !DIExpression()), !dbg !6385
  %0 = load %struct.wmKeyMap*, %struct.wmKeyMap** %diff_km.addr, align 8, !dbg !6386
  %diff_items = getelementptr inbounds %struct.wmKeyMap, %struct.wmKeyMap* %0, i32 0, i32 3, !dbg !6388
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %diff_items, i32 0, i32 0, !dbg !6389
  %1 = load i8*, i8** %first, align 8, !dbg !6389
  %2 = bitcast i8* %1 to %struct.wmKeyMapDiffItem*, !dbg !6386
  store %struct.wmKeyMapDiffItem* %2, %struct.wmKeyMapDiffItem** %kmdi, align 8, !dbg !6390
  br label %for.cond, !dbg !6391

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load %struct.wmKeyMapDiffItem*, %struct.wmKeyMapDiffItem** %kmdi, align 8, !dbg !6392
  %tobool = icmp ne %struct.wmKeyMapDiffItem* %3, null, !dbg !6394
  br i1 %tobool, label %for.body, label %for.end, !dbg !6394

for.body:                                         ; preds = %for.cond
  store %struct.wmKeyMapItem* null, %struct.wmKeyMapItem** %kmi_remove, align 8, !dbg !6395
  %4 = load %struct.wmKeyMapDiffItem*, %struct.wmKeyMapDiffItem** %kmdi, align 8, !dbg !6397
  %remove_item = getelementptr inbounds %struct.wmKeyMapDiffItem, %struct.wmKeyMapDiffItem* %4, i32 0, i32 2, !dbg !6399
  %5 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %remove_item, align 8, !dbg !6399
  %tobool1 = icmp ne %struct.wmKeyMapItem* %5, null, !dbg !6397
  br i1 %tobool1, label %if.then, label %if.end7, !dbg !6400

if.then:                                          ; preds = %for.body
  %6 = load %struct.wmKeyMap*, %struct.wmKeyMap** %km.addr, align 8, !dbg !6401
  %7 = load %struct.wmKeyMapDiffItem*, %struct.wmKeyMapDiffItem** %kmdi, align 8, !dbg !6403
  %remove_item2 = getelementptr inbounds %struct.wmKeyMapDiffItem, %struct.wmKeyMapDiffItem* %7, i32 0, i32 2, !dbg !6404
  %8 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %remove_item2, align 8, !dbg !6404
  %call = call %struct.wmKeyMapItem* @wm_keymap_find_item_equals(%struct.wmKeyMap* %6, %struct.wmKeyMapItem* %8), !dbg !6405
  store %struct.wmKeyMapItem* %call, %struct.wmKeyMapItem** %kmi_remove, align 8, !dbg !6406
  %9 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi_remove, align 8, !dbg !6407
  %tobool3 = icmp ne %struct.wmKeyMapItem* %9, null, !dbg !6407
  br i1 %tobool3, label %if.end, label %if.then4, !dbg !6409

if.then4:                                         ; preds = %if.then
  %10 = load %struct.wmKeyMap*, %struct.wmKeyMap** %km.addr, align 8, !dbg !6410
  %11 = load %struct.wmKeyMapDiffItem*, %struct.wmKeyMapDiffItem** %kmdi, align 8, !dbg !6411
  %remove_item5 = getelementptr inbounds %struct.wmKeyMapDiffItem, %struct.wmKeyMapDiffItem* %11, i32 0, i32 2, !dbg !6412
  %12 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %remove_item5, align 8, !dbg !6412
  %call6 = call %struct.wmKeyMapItem* @wm_keymap_find_item_equals_result(%struct.wmKeyMap* %10, %struct.wmKeyMapItem* %12), !dbg !6413
  store %struct.wmKeyMapItem* %call6, %struct.wmKeyMapItem** %kmi_remove, align 8, !dbg !6414
  br label %if.end, !dbg !6415

if.end:                                           ; preds = %if.then4, %if.then
  br label %if.end7, !dbg !6416

if.end7:                                          ; preds = %if.end, %for.body
  %13 = load %struct.wmKeyMapDiffItem*, %struct.wmKeyMapDiffItem** %kmdi, align 8, !dbg !6417
  %add_item = getelementptr inbounds %struct.wmKeyMapDiffItem, %struct.wmKeyMapDiffItem* %13, i32 0, i32 3, !dbg !6419
  %14 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %add_item, align 8, !dbg !6419
  %tobool8 = icmp ne %struct.wmKeyMapItem* %14, null, !dbg !6417
  br i1 %tobool8, label %if.then9, label %if.end36, !dbg !6420

if.then9:                                         ; preds = %if.end7
  %15 = load %struct.wmKeyMap*, %struct.wmKeyMap** %km.addr, align 8, !dbg !6421
  %16 = load %struct.wmKeyMapDiffItem*, %struct.wmKeyMapDiffItem** %kmdi, align 8, !dbg !6423
  %add_item10 = getelementptr inbounds %struct.wmKeyMapDiffItem, %struct.wmKeyMapDiffItem* %16, i32 0, i32 3, !dbg !6424
  %17 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %add_item10, align 8, !dbg !6424
  %call11 = call %struct.wmKeyMapItem* @wm_keymap_find_item_equals(%struct.wmKeyMap* %15, %struct.wmKeyMapItem* %17), !dbg !6425
  store %struct.wmKeyMapItem* %call11, %struct.wmKeyMapItem** %kmi_add, align 8, !dbg !6426
  %18 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi_add, align 8, !dbg !6427
  %tobool12 = icmp ne %struct.wmKeyMapItem* %18, null, !dbg !6427
  br i1 %tobool12, label %if.end35, label %land.lhs.true, !dbg !6429

land.lhs.true:                                    ; preds = %if.then9
  %19 = load %struct.wmKeyMapDiffItem*, %struct.wmKeyMapDiffItem** %kmdi, align 8, !dbg !6430
  %remove_item13 = getelementptr inbounds %struct.wmKeyMapDiffItem, %struct.wmKeyMapDiffItem* %19, i32 0, i32 2, !dbg !6431
  %20 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %remove_item13, align 8, !dbg !6431
  %tobool14 = icmp ne %struct.wmKeyMapItem* %20, null, !dbg !6430
  br i1 %tobool14, label %lor.lhs.false, label %if.then16, !dbg !6432

lor.lhs.false:                                    ; preds = %land.lhs.true
  %21 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi_remove, align 8, !dbg !6433
  %tobool15 = icmp ne %struct.wmKeyMapItem* %21, null, !dbg !6433
  br i1 %tobool15, label %if.then16, label %if.end35, !dbg !6434

if.then16:                                        ; preds = %lor.lhs.false, %land.lhs.true
  %22 = load %struct.wmKeyMapDiffItem*, %struct.wmKeyMapDiffItem** %kmdi, align 8, !dbg !6435
  %add_item17 = getelementptr inbounds %struct.wmKeyMapDiffItem, %struct.wmKeyMapDiffItem* %22, i32 0, i32 3, !dbg !6437
  %23 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %add_item17, align 8, !dbg !6437
  %call18 = call %struct.wmKeyMapItem* @wm_keymap_item_copy(%struct.wmKeyMapItem* %23), !dbg !6438
  store %struct.wmKeyMapItem* %call18, %struct.wmKeyMapItem** %kmi_add, align 8, !dbg !6439
  %24 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi_add, align 8, !dbg !6440
  %flag = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %24, i32 0, i32 13, !dbg !6441
  %25 = load i16, i16* %flag, align 8, !dbg !6442
  %conv = sext i16 %25 to i32, !dbg !6442
  %or = or i32 %conv, 4, !dbg !6442
  %conv19 = trunc i32 %or to i16, !dbg !6442
  store i16 %conv19, i16* %flag, align 8, !dbg !6442
  %26 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi_remove, align 8, !dbg !6443
  %tobool20 = icmp ne %struct.wmKeyMapItem* %26, null, !dbg !6443
  br i1 %tobool20, label %if.then21, label %if.else, !dbg !6445

if.then21:                                        ; preds = %if.then16
  %27 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi_add, align 8, !dbg !6446
  %flag22 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %27, i32 0, i32 13, !dbg !6448
  %28 = load i16, i16* %flag22, align 8, !dbg !6449
  %conv23 = sext i16 %28 to i32, !dbg !6449
  %and = and i32 %conv23, -3, !dbg !6449
  %conv24 = trunc i32 %and to i16, !dbg !6449
  store i16 %conv24, i16* %flag22, align 8, !dbg !6449
  %29 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi_remove, align 8, !dbg !6450
  %flag25 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %29, i32 0, i32 13, !dbg !6451
  %30 = load i16, i16* %flag25, align 8, !dbg !6451
  %conv26 = sext i16 %30 to i32, !dbg !6450
  %and27 = and i32 %conv26, 2, !dbg !6452
  %31 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi_add, align 8, !dbg !6453
  %flag28 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %31, i32 0, i32 13, !dbg !6454
  %32 = load i16, i16* %flag28, align 8, !dbg !6455
  %conv29 = sext i16 %32 to i32, !dbg !6455
  %or30 = or i32 %conv29, %and27, !dbg !6455
  %conv31 = trunc i32 %or30 to i16, !dbg !6455
  store i16 %conv31, i16* %flag28, align 8, !dbg !6455
  %33 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi_remove, align 8, !dbg !6456
  %id = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %33, i32 0, i32 15, !dbg !6457
  %34 = load i16, i16* %id, align 4, !dbg !6457
  %35 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi_add, align 8, !dbg !6458
  %id32 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %35, i32 0, i32 15, !dbg !6459
  store i16 %34, i16* %id32, align 4, !dbg !6460
  %36 = load %struct.wmKeyMap*, %struct.wmKeyMap** %km.addr, align 8, !dbg !6461
  %items = getelementptr inbounds %struct.wmKeyMap, %struct.wmKeyMap* %36, i32 0, i32 2, !dbg !6462
  %37 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi_remove, align 8, !dbg !6463
  %38 = bitcast %struct.wmKeyMapItem* %37 to i8*, !dbg !6463
  %39 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi_add, align 8, !dbg !6464
  %40 = bitcast %struct.wmKeyMapItem* %39 to i8*, !dbg !6464
  call void @BLI_insertlinkbefore(%struct.ListBase* %items, i8* %38, i8* %40), !dbg !6465
  br label %if.end34, !dbg !6466

if.else:                                          ; preds = %if.then16
  %41 = load %struct.wmKeyMap*, %struct.wmKeyMap** %km.addr, align 8, !dbg !6467
  %42 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi_add, align 8, !dbg !6469
  call void @keymap_item_set_id(%struct.wmKeyMap* %41, %struct.wmKeyMapItem* %42), !dbg !6470
  %43 = load %struct.wmKeyMap*, %struct.wmKeyMap** %km.addr, align 8, !dbg !6471
  %items33 = getelementptr inbounds %struct.wmKeyMap, %struct.wmKeyMap* %43, i32 0, i32 2, !dbg !6472
  %44 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi_add, align 8, !dbg !6473
  %45 = bitcast %struct.wmKeyMapItem* %44 to i8*, !dbg !6473
  call void @BLI_addtail(%struct.ListBase* %items33, i8* %45), !dbg !6474
  br label %if.end34

if.end34:                                         ; preds = %if.else, %if.then21
  br label %if.end35, !dbg !6475

if.end35:                                         ; preds = %if.end34, %lor.lhs.false, %if.then9
  br label %if.end36, !dbg !6476

if.end36:                                         ; preds = %if.end35, %if.end7
  %46 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi_remove, align 8, !dbg !6477
  %tobool37 = icmp ne %struct.wmKeyMapItem* %46, null, !dbg !6477
  br i1 %tobool37, label %if.then38, label %if.end40, !dbg !6479

if.then38:                                        ; preds = %if.end36
  %47 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi_remove, align 8, !dbg !6480
  call void @wm_keymap_item_free(%struct.wmKeyMapItem* %47), !dbg !6482
  %48 = load %struct.wmKeyMap*, %struct.wmKeyMap** %km.addr, align 8, !dbg !6483
  %items39 = getelementptr inbounds %struct.wmKeyMap, %struct.wmKeyMap* %48, i32 0, i32 2, !dbg !6484
  %49 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi_remove, align 8, !dbg !6485
  %50 = bitcast %struct.wmKeyMapItem* %49 to i8*, !dbg !6485
  call void @BLI_freelinkN(%struct.ListBase* %items39, i8* %50), !dbg !6486
  br label %if.end40, !dbg !6487

if.end40:                                         ; preds = %if.then38, %if.end36
  br label %for.inc, !dbg !6488

for.inc:                                          ; preds = %if.end40
  %51 = load %struct.wmKeyMapDiffItem*, %struct.wmKeyMapDiffItem** %kmdi, align 8, !dbg !6489
  %next = getelementptr inbounds %struct.wmKeyMapDiffItem, %struct.wmKeyMapDiffItem* %51, i32 0, i32 0, !dbg !6490
  %52 = load %struct.wmKeyMapDiffItem*, %struct.wmKeyMapDiffItem** %next, align 8, !dbg !6490
  store %struct.wmKeyMapDiffItem* %52, %struct.wmKeyMapDiffItem** %kmdi, align 8, !dbg !6491
  br label %for.cond, !dbg !6492, !llvm.loop !6493

for.end:                                          ; preds = %for.cond
  ret void, !dbg !6495
}

declare dso_local void @BLI_insertlinkbefore(%struct.ListBase*, i8*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @BLI_listbase_clear(%struct.ListBase* %lb) #0 !dbg !6496 {
entry:
  %lb.addr = alloca %struct.ListBase*, align 8
  store %struct.ListBase* %lb, %struct.ListBase** %lb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %lb.addr, metadata !6501, metadata !DIExpression()), !dbg !6502
  %0 = load %struct.ListBase*, %struct.ListBase** %lb.addr, align 8, !dbg !6503
  %last = getelementptr inbounds %struct.ListBase, %struct.ListBase* %0, i32 0, i32 1, !dbg !6504
  store i8* null, i8** %last, align 8, !dbg !6505
  %1 = load %struct.ListBase*, %struct.ListBase** %lb.addr, align 8, !dbg !6506
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %1, i32 0, i32 0, !dbg !6507
  store i8* null, i8** %first, align 8, !dbg !6508
  ret void, !dbg !6509
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.wmKeyMapDiffItem* @wm_keymap_diff_item_copy(%struct.wmKeyMapDiffItem* %kmdi) #0 !dbg !6510 {
entry:
  %kmdi.addr = alloca %struct.wmKeyMapDiffItem*, align 8
  %kmdin = alloca %struct.wmKeyMapDiffItem*, align 8
  store %struct.wmKeyMapDiffItem* %kmdi, %struct.wmKeyMapDiffItem** %kmdi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmKeyMapDiffItem** %kmdi.addr, metadata !6513, metadata !DIExpression()), !dbg !6514
  call void @llvm.dbg.declare(metadata %struct.wmKeyMapDiffItem** %kmdin, metadata !6515, metadata !DIExpression()), !dbg !6516
  %0 = load i8* (i8*)*, i8* (i8*)** @MEM_dupallocN, align 8, !dbg !6517
  %1 = load %struct.wmKeyMapDiffItem*, %struct.wmKeyMapDiffItem** %kmdi.addr, align 8, !dbg !6518
  %2 = bitcast %struct.wmKeyMapDiffItem* %1 to i8*, !dbg !6518
  %call = call i8* %0(i8* %2), !dbg !6517
  %3 = bitcast i8* %call to %struct.wmKeyMapDiffItem*, !dbg !6517
  store %struct.wmKeyMapDiffItem* %3, %struct.wmKeyMapDiffItem** %kmdin, align 8, !dbg !6516
  %4 = load %struct.wmKeyMapDiffItem*, %struct.wmKeyMapDiffItem** %kmdin, align 8, !dbg !6519
  %prev = getelementptr inbounds %struct.wmKeyMapDiffItem, %struct.wmKeyMapDiffItem* %4, i32 0, i32 1, !dbg !6520
  store %struct.wmKeyMapDiffItem* null, %struct.wmKeyMapDiffItem** %prev, align 8, !dbg !6521
  %5 = load %struct.wmKeyMapDiffItem*, %struct.wmKeyMapDiffItem** %kmdin, align 8, !dbg !6522
  %next = getelementptr inbounds %struct.wmKeyMapDiffItem, %struct.wmKeyMapDiffItem* %5, i32 0, i32 0, !dbg !6523
  store %struct.wmKeyMapDiffItem* null, %struct.wmKeyMapDiffItem** %next, align 8, !dbg !6524
  %6 = load %struct.wmKeyMapDiffItem*, %struct.wmKeyMapDiffItem** %kmdi.addr, align 8, !dbg !6525
  %add_item = getelementptr inbounds %struct.wmKeyMapDiffItem, %struct.wmKeyMapDiffItem* %6, i32 0, i32 3, !dbg !6527
  %7 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %add_item, align 8, !dbg !6527
  %tobool = icmp ne %struct.wmKeyMapItem* %7, null, !dbg !6525
  br i1 %tobool, label %if.then, label %if.end, !dbg !6528

if.then:                                          ; preds = %entry
  %8 = load %struct.wmKeyMapDiffItem*, %struct.wmKeyMapDiffItem** %kmdi.addr, align 8, !dbg !6529
  %add_item1 = getelementptr inbounds %struct.wmKeyMapDiffItem, %struct.wmKeyMapDiffItem* %8, i32 0, i32 3, !dbg !6530
  %9 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %add_item1, align 8, !dbg !6530
  %call2 = call %struct.wmKeyMapItem* @wm_keymap_item_copy(%struct.wmKeyMapItem* %9), !dbg !6531
  %10 = load %struct.wmKeyMapDiffItem*, %struct.wmKeyMapDiffItem** %kmdin, align 8, !dbg !6532
  %add_item3 = getelementptr inbounds %struct.wmKeyMapDiffItem, %struct.wmKeyMapDiffItem* %10, i32 0, i32 3, !dbg !6533
  store %struct.wmKeyMapItem* %call2, %struct.wmKeyMapItem** %add_item3, align 8, !dbg !6534
  br label %if.end, !dbg !6532

if.end:                                           ; preds = %if.then, %entry
  %11 = load %struct.wmKeyMapDiffItem*, %struct.wmKeyMapDiffItem** %kmdi.addr, align 8, !dbg !6535
  %remove_item = getelementptr inbounds %struct.wmKeyMapDiffItem, %struct.wmKeyMapDiffItem* %11, i32 0, i32 2, !dbg !6537
  %12 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %remove_item, align 8, !dbg !6537
  %tobool4 = icmp ne %struct.wmKeyMapItem* %12, null, !dbg !6535
  br i1 %tobool4, label %if.then5, label %if.end9, !dbg !6538

if.then5:                                         ; preds = %if.end
  %13 = load %struct.wmKeyMapDiffItem*, %struct.wmKeyMapDiffItem** %kmdi.addr, align 8, !dbg !6539
  %remove_item6 = getelementptr inbounds %struct.wmKeyMapDiffItem, %struct.wmKeyMapDiffItem* %13, i32 0, i32 2, !dbg !6540
  %14 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %remove_item6, align 8, !dbg !6540
  %call7 = call %struct.wmKeyMapItem* @wm_keymap_item_copy(%struct.wmKeyMapItem* %14), !dbg !6541
  %15 = load %struct.wmKeyMapDiffItem*, %struct.wmKeyMapDiffItem** %kmdin, align 8, !dbg !6542
  %remove_item8 = getelementptr inbounds %struct.wmKeyMapDiffItem, %struct.wmKeyMapDiffItem* %15, i32 0, i32 2, !dbg !6543
  store %struct.wmKeyMapItem* %call7, %struct.wmKeyMapItem** %remove_item8, align 8, !dbg !6544
  br label %if.end9, !dbg !6542

if.end9:                                          ; preds = %if.then5, %if.end
  %16 = load %struct.wmKeyMapDiffItem*, %struct.wmKeyMapDiffItem** %kmdin, align 8, !dbg !6545
  ret %struct.wmKeyMapDiffItem* %16, !dbg !6546
}

declare dso_local void @BLI_addhead(%struct.ListBase*, i8*) #2

attributes #0 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable willreturn }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readonly }

!llvm.dbg.cu = !{!2}
!llvm.module.flags = !{!280, !281, !282}
!llvm.ident = !{!283}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "wm_keymap_update_flag", scope: !2, file: !3, line: 1160, type: !279, isLocal: true, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !271, globals: !278, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "blender/source/blender/windowmanager/intern/wm_keymap.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!4 = !{!5, !207, !216, !220, !229, !235, !239, !254, !265}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !6, line: 54, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "blender/source/blender/windowmanager/wm_event_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10, !11, !12, !13, !14, !15, !16, !17, !18, !19, !20, !21, !22, !23, !24, !25, !26, !27, !28, !29, !30, !31, !32, !33, !34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133, !134, !135, !136, !137, !138, !139, !140, !141, !142, !143, !144, !145, !146, !147, !148, !149, !150, !151, !152, !153, !154, !155, !156, !157, !158, !159, !160, !161, !162, !163, !164, !165, !166, !167, !168, !169, !170, !171, !172, !173, !174, !175, !176, !177, !178, !179, !180, !181, !182, !183, !184, !185, !186, !187, !188, !189, !190, !191, !192, !193, !194, !195, !196, !197, !198, !199, !200, !201, !202, !203, !204, !205, !206}
!9 = !DIEnumerator(name: "EVENT_NONE", value: 0, isUnsigned: true)
!10 = !DIEnumerator(name: "LEFTMOUSE", value: 1, isUnsigned: true)
!11 = !DIEnumerator(name: "MIDDLEMOUSE", value: 2, isUnsigned: true)
!12 = !DIEnumerator(name: "RIGHTMOUSE", value: 3, isUnsigned: true)
!13 = !DIEnumerator(name: "MOUSEMOVE", value: 4, isUnsigned: true)
!14 = !DIEnumerator(name: "ACTIONMOUSE", value: 5, isUnsigned: true)
!15 = !DIEnumerator(name: "SELECTMOUSE", value: 6, isUnsigned: true)
!16 = !DIEnumerator(name: "BUTTON4MOUSE", value: 7, isUnsigned: true)
!17 = !DIEnumerator(name: "BUTTON5MOUSE", value: 8, isUnsigned: true)
!18 = !DIEnumerator(name: "BUTTON6MOUSE", value: 18, isUnsigned: true)
!19 = !DIEnumerator(name: "BUTTON7MOUSE", value: 19, isUnsigned: true)
!20 = !DIEnumerator(name: "MOUSEPAN", value: 14, isUnsigned: true)
!21 = !DIEnumerator(name: "MOUSEZOOM", value: 15, isUnsigned: true)
!22 = !DIEnumerator(name: "MOUSEROTATE", value: 16, isUnsigned: true)
!23 = !DIEnumerator(name: "WHEELUPMOUSE", value: 10, isUnsigned: true)
!24 = !DIEnumerator(name: "WHEELDOWNMOUSE", value: 11, isUnsigned: true)
!25 = !DIEnumerator(name: "WHEELINMOUSE", value: 12, isUnsigned: true)
!26 = !DIEnumerator(name: "WHEELOUTMOUSE", value: 13, isUnsigned: true)
!27 = !DIEnumerator(name: "INBETWEEN_MOUSEMOVE", value: 17, isUnsigned: true)
!28 = !DIEnumerator(name: "AKEY", value: 97, isUnsigned: true)
!29 = !DIEnumerator(name: "BKEY", value: 98, isUnsigned: true)
!30 = !DIEnumerator(name: "CKEY", value: 99, isUnsigned: true)
!31 = !DIEnumerator(name: "DKEY", value: 100, isUnsigned: true)
!32 = !DIEnumerator(name: "EKEY", value: 101, isUnsigned: true)
!33 = !DIEnumerator(name: "FKEY", value: 102, isUnsigned: true)
!34 = !DIEnumerator(name: "GKEY", value: 103, isUnsigned: true)
!35 = !DIEnumerator(name: "HKEY", value: 104, isUnsigned: true)
!36 = !DIEnumerator(name: "IKEY", value: 105, isUnsigned: true)
!37 = !DIEnumerator(name: "JKEY", value: 106, isUnsigned: true)
!38 = !DIEnumerator(name: "KKEY", value: 107, isUnsigned: true)
!39 = !DIEnumerator(name: "LKEY", value: 108, isUnsigned: true)
!40 = !DIEnumerator(name: "MKEY", value: 109, isUnsigned: true)
!41 = !DIEnumerator(name: "NKEY", value: 110, isUnsigned: true)
!42 = !DIEnumerator(name: "OKEY", value: 111, isUnsigned: true)
!43 = !DIEnumerator(name: "PKEY", value: 112, isUnsigned: true)
!44 = !DIEnumerator(name: "QKEY", value: 113, isUnsigned: true)
!45 = !DIEnumerator(name: "RKEY", value: 114, isUnsigned: true)
!46 = !DIEnumerator(name: "SKEY", value: 115, isUnsigned: true)
!47 = !DIEnumerator(name: "TKEY", value: 116, isUnsigned: true)
!48 = !DIEnumerator(name: "UKEY", value: 117, isUnsigned: true)
!49 = !DIEnumerator(name: "VKEY", value: 118, isUnsigned: true)
!50 = !DIEnumerator(name: "WKEY", value: 119, isUnsigned: true)
!51 = !DIEnumerator(name: "XKEY", value: 120, isUnsigned: true)
!52 = !DIEnumerator(name: "YKEY", value: 121, isUnsigned: true)
!53 = !DIEnumerator(name: "ZKEY", value: 122, isUnsigned: true)
!54 = !DIEnumerator(name: "ZEROKEY", value: 48, isUnsigned: true)
!55 = !DIEnumerator(name: "ONEKEY", value: 49, isUnsigned: true)
!56 = !DIEnumerator(name: "TWOKEY", value: 50, isUnsigned: true)
!57 = !DIEnumerator(name: "THREEKEY", value: 51, isUnsigned: true)
!58 = !DIEnumerator(name: "FOURKEY", value: 52, isUnsigned: true)
!59 = !DIEnumerator(name: "FIVEKEY", value: 53, isUnsigned: true)
!60 = !DIEnumerator(name: "SIXKEY", value: 54, isUnsigned: true)
!61 = !DIEnumerator(name: "SEVENKEY", value: 55, isUnsigned: true)
!62 = !DIEnumerator(name: "EIGHTKEY", value: 56, isUnsigned: true)
!63 = !DIEnumerator(name: "NINEKEY", value: 57, isUnsigned: true)
!64 = !DIEnumerator(name: "CAPSLOCKKEY", value: 211, isUnsigned: true)
!65 = !DIEnumerator(name: "LEFTCTRLKEY", value: 212, isUnsigned: true)
!66 = !DIEnumerator(name: "LEFTALTKEY", value: 213, isUnsigned: true)
!67 = !DIEnumerator(name: "RIGHTALTKEY", value: 214, isUnsigned: true)
!68 = !DIEnumerator(name: "RIGHTCTRLKEY", value: 215, isUnsigned: true)
!69 = !DIEnumerator(name: "RIGHTSHIFTKEY", value: 216, isUnsigned: true)
!70 = !DIEnumerator(name: "LEFTSHIFTKEY", value: 217, isUnsigned: true)
!71 = !DIEnumerator(name: "ESCKEY", value: 218, isUnsigned: true)
!72 = !DIEnumerator(name: "TABKEY", value: 219, isUnsigned: true)
!73 = !DIEnumerator(name: "RETKEY", value: 220, isUnsigned: true)
!74 = !DIEnumerator(name: "SPACEKEY", value: 221, isUnsigned: true)
!75 = !DIEnumerator(name: "LINEFEEDKEY", value: 222, isUnsigned: true)
!76 = !DIEnumerator(name: "BACKSPACEKEY", value: 223, isUnsigned: true)
!77 = !DIEnumerator(name: "DELKEY", value: 224, isUnsigned: true)
!78 = !DIEnumerator(name: "SEMICOLONKEY", value: 225, isUnsigned: true)
!79 = !DIEnumerator(name: "PERIODKEY", value: 226, isUnsigned: true)
!80 = !DIEnumerator(name: "COMMAKEY", value: 227, isUnsigned: true)
!81 = !DIEnumerator(name: "QUOTEKEY", value: 228, isUnsigned: true)
!82 = !DIEnumerator(name: "ACCENTGRAVEKEY", value: 229, isUnsigned: true)
!83 = !DIEnumerator(name: "MINUSKEY", value: 230, isUnsigned: true)
!84 = !DIEnumerator(name: "SLASHKEY", value: 232, isUnsigned: true)
!85 = !DIEnumerator(name: "BACKSLASHKEY", value: 233, isUnsigned: true)
!86 = !DIEnumerator(name: "EQUALKEY", value: 234, isUnsigned: true)
!87 = !DIEnumerator(name: "LEFTBRACKETKEY", value: 235, isUnsigned: true)
!88 = !DIEnumerator(name: "RIGHTBRACKETKEY", value: 236, isUnsigned: true)
!89 = !DIEnumerator(name: "LEFTARROWKEY", value: 137, isUnsigned: true)
!90 = !DIEnumerator(name: "DOWNARROWKEY", value: 138, isUnsigned: true)
!91 = !DIEnumerator(name: "RIGHTARROWKEY", value: 139, isUnsigned: true)
!92 = !DIEnumerator(name: "UPARROWKEY", value: 140, isUnsigned: true)
!93 = !DIEnumerator(name: "PAD0", value: 150, isUnsigned: true)
!94 = !DIEnumerator(name: "PAD1", value: 151, isUnsigned: true)
!95 = !DIEnumerator(name: "PAD2", value: 152, isUnsigned: true)
!96 = !DIEnumerator(name: "PAD3", value: 153, isUnsigned: true)
!97 = !DIEnumerator(name: "PAD4", value: 154, isUnsigned: true)
!98 = !DIEnumerator(name: "PAD5", value: 155, isUnsigned: true)
!99 = !DIEnumerator(name: "PAD6", value: 156, isUnsigned: true)
!100 = !DIEnumerator(name: "PAD7", value: 157, isUnsigned: true)
!101 = !DIEnumerator(name: "PAD8", value: 158, isUnsigned: true)
!102 = !DIEnumerator(name: "PAD9", value: 159, isUnsigned: true)
!103 = !DIEnumerator(name: "PADPERIOD", value: 199, isUnsigned: true)
!104 = !DIEnumerator(name: "PADASTERKEY", value: 160, isUnsigned: true)
!105 = !DIEnumerator(name: "PADSLASHKEY", value: 161, isUnsigned: true)
!106 = !DIEnumerator(name: "PADMINUS", value: 162, isUnsigned: true)
!107 = !DIEnumerator(name: "PADENTER", value: 163, isUnsigned: true)
!108 = !DIEnumerator(name: "PADPLUSKEY", value: 164, isUnsigned: true)
!109 = !DIEnumerator(name: "PAUSEKEY", value: 165, isUnsigned: true)
!110 = !DIEnumerator(name: "INSERTKEY", value: 166, isUnsigned: true)
!111 = !DIEnumerator(name: "HOMEKEY", value: 167, isUnsigned: true)
!112 = !DIEnumerator(name: "PAGEUPKEY", value: 168, isUnsigned: true)
!113 = !DIEnumerator(name: "PAGEDOWNKEY", value: 169, isUnsigned: true)
!114 = !DIEnumerator(name: "ENDKEY", value: 170, isUnsigned: true)
!115 = !DIEnumerator(name: "UNKNOWNKEY", value: 171, isUnsigned: true)
!116 = !DIEnumerator(name: "OSKEY", value: 172, isUnsigned: true)
!117 = !DIEnumerator(name: "GRLESSKEY", value: 173, isUnsigned: true)
!118 = !DIEnumerator(name: "MEDIAPLAY", value: 174, isUnsigned: true)
!119 = !DIEnumerator(name: "MEDIASTOP", value: 175, isUnsigned: true)
!120 = !DIEnumerator(name: "MEDIAFIRST", value: 176, isUnsigned: true)
!121 = !DIEnumerator(name: "MEDIALAST", value: 177, isUnsigned: true)
!122 = !DIEnumerator(name: "F1KEY", value: 300, isUnsigned: true)
!123 = !DIEnumerator(name: "F2KEY", value: 301, isUnsigned: true)
!124 = !DIEnumerator(name: "F3KEY", value: 302, isUnsigned: true)
!125 = !DIEnumerator(name: "F4KEY", value: 303, isUnsigned: true)
!126 = !DIEnumerator(name: "F5KEY", value: 304, isUnsigned: true)
!127 = !DIEnumerator(name: "F6KEY", value: 305, isUnsigned: true)
!128 = !DIEnumerator(name: "F7KEY", value: 306, isUnsigned: true)
!129 = !DIEnumerator(name: "F8KEY", value: 307, isUnsigned: true)
!130 = !DIEnumerator(name: "F9KEY", value: 308, isUnsigned: true)
!131 = !DIEnumerator(name: "F10KEY", value: 309, isUnsigned: true)
!132 = !DIEnumerator(name: "F11KEY", value: 310, isUnsigned: true)
!133 = !DIEnumerator(name: "F12KEY", value: 311, isUnsigned: true)
!134 = !DIEnumerator(name: "F13KEY", value: 312, isUnsigned: true)
!135 = !DIEnumerator(name: "F14KEY", value: 313, isUnsigned: true)
!136 = !DIEnumerator(name: "F15KEY", value: 314, isUnsigned: true)
!137 = !DIEnumerator(name: "F16KEY", value: 315, isUnsigned: true)
!138 = !DIEnumerator(name: "F17KEY", value: 316, isUnsigned: true)
!139 = !DIEnumerator(name: "F18KEY", value: 317, isUnsigned: true)
!140 = !DIEnumerator(name: "F19KEY", value: 318, isUnsigned: true)
!141 = !DIEnumerator(name: "NDOF_MOTION", value: 400, isUnsigned: true)
!142 = !DIEnumerator(name: "NDOF_BUTTON_NONE", value: 400, isUnsigned: true)
!143 = !DIEnumerator(name: "NDOF_BUTTON_MENU", value: 401, isUnsigned: true)
!144 = !DIEnumerator(name: "NDOF_BUTTON_FIT", value: 402, isUnsigned: true)
!145 = !DIEnumerator(name: "NDOF_BUTTON_TOP", value: 403, isUnsigned: true)
!146 = !DIEnumerator(name: "NDOF_BUTTON_BOTTOM", value: 404, isUnsigned: true)
!147 = !DIEnumerator(name: "NDOF_BUTTON_LEFT", value: 405, isUnsigned: true)
!148 = !DIEnumerator(name: "NDOF_BUTTON_RIGHT", value: 406, isUnsigned: true)
!149 = !DIEnumerator(name: "NDOF_BUTTON_FRONT", value: 407, isUnsigned: true)
!150 = !DIEnumerator(name: "NDOF_BUTTON_BACK", value: 408, isUnsigned: true)
!151 = !DIEnumerator(name: "NDOF_BUTTON_ISO1", value: 409, isUnsigned: true)
!152 = !DIEnumerator(name: "NDOF_BUTTON_ISO2", value: 410, isUnsigned: true)
!153 = !DIEnumerator(name: "NDOF_BUTTON_ROLL_CW", value: 411, isUnsigned: true)
!154 = !DIEnumerator(name: "NDOF_BUTTON_ROLL_CCW", value: 412, isUnsigned: true)
!155 = !DIEnumerator(name: "NDOF_BUTTON_SPIN_CW", value: 413, isUnsigned: true)
!156 = !DIEnumerator(name: "NDOF_BUTTON_SPIN_CCW", value: 414, isUnsigned: true)
!157 = !DIEnumerator(name: "NDOF_BUTTON_TILT_CW", value: 415, isUnsigned: true)
!158 = !DIEnumerator(name: "NDOF_BUTTON_TILT_CCW", value: 416, isUnsigned: true)
!159 = !DIEnumerator(name: "NDOF_BUTTON_ROTATE", value: 417, isUnsigned: true)
!160 = !DIEnumerator(name: "NDOF_BUTTON_PANZOOM", value: 418, isUnsigned: true)
!161 = !DIEnumerator(name: "NDOF_BUTTON_DOMINANT", value: 419, isUnsigned: true)
!162 = !DIEnumerator(name: "NDOF_BUTTON_PLUS", value: 420, isUnsigned: true)
!163 = !DIEnumerator(name: "NDOF_BUTTON_MINUS", value: 421, isUnsigned: true)
!164 = !DIEnumerator(name: "NDOF_BUTTON_ESC", value: 422, isUnsigned: true)
!165 = !DIEnumerator(name: "NDOF_BUTTON_ALT", value: 423, isUnsigned: true)
!166 = !DIEnumerator(name: "NDOF_BUTTON_SHIFT", value: 424, isUnsigned: true)
!167 = !DIEnumerator(name: "NDOF_BUTTON_CTRL", value: 425, isUnsigned: true)
!168 = !DIEnumerator(name: "NDOF_BUTTON_1", value: 426, isUnsigned: true)
!169 = !DIEnumerator(name: "NDOF_BUTTON_2", value: 427, isUnsigned: true)
!170 = !DIEnumerator(name: "NDOF_BUTTON_3", value: 428, isUnsigned: true)
!171 = !DIEnumerator(name: "NDOF_BUTTON_4", value: 429, isUnsigned: true)
!172 = !DIEnumerator(name: "NDOF_BUTTON_5", value: 430, isUnsigned: true)
!173 = !DIEnumerator(name: "NDOF_BUTTON_6", value: 431, isUnsigned: true)
!174 = !DIEnumerator(name: "NDOF_BUTTON_7", value: 432, isUnsigned: true)
!175 = !DIEnumerator(name: "NDOF_BUTTON_8", value: 433, isUnsigned: true)
!176 = !DIEnumerator(name: "NDOF_BUTTON_9", value: 434, isUnsigned: true)
!177 = !DIEnumerator(name: "NDOF_BUTTON_10", value: 435, isUnsigned: true)
!178 = !DIEnumerator(name: "NDOF_BUTTON_A", value: 436, isUnsigned: true)
!179 = !DIEnumerator(name: "NDOF_BUTTON_B", value: 437, isUnsigned: true)
!180 = !DIEnumerator(name: "NDOF_BUTTON_C", value: 438, isUnsigned: true)
!181 = !DIEnumerator(name: "NDOF_LAST", value: 439, isUnsigned: true)
!182 = !DIEnumerator(name: "INPUTCHANGE", value: 259, isUnsigned: true)
!183 = !DIEnumerator(name: "WINDEACTIVATE", value: 260, isUnsigned: true)
!184 = !DIEnumerator(name: "TIMER", value: 272, isUnsigned: true)
!185 = !DIEnumerator(name: "TIMER0", value: 273, isUnsigned: true)
!186 = !DIEnumerator(name: "TIMER1", value: 274, isUnsigned: true)
!187 = !DIEnumerator(name: "TIMER2", value: 275, isUnsigned: true)
!188 = !DIEnumerator(name: "TIMERJOBS", value: 276, isUnsigned: true)
!189 = !DIEnumerator(name: "TIMERAUTOSAVE", value: 277, isUnsigned: true)
!190 = !DIEnumerator(name: "TIMERREPORT", value: 278, isUnsigned: true)
!191 = !DIEnumerator(name: "TIMERREGION", value: 279, isUnsigned: true)
!192 = !DIEnumerator(name: "TIMERF", value: 287, isUnsigned: true)
!193 = !DIEnumerator(name: "EVT_ACTIONZONE_AREA", value: 20480, isUnsigned: true)
!194 = !DIEnumerator(name: "EVT_ACTIONZONE_REGION", value: 20481, isUnsigned: true)
!195 = !DIEnumerator(name: "EVT_ACTIONZONE_FULLSCREEN", value: 20482, isUnsigned: true)
!196 = !DIEnumerator(name: "EVT_TWEAK_L", value: 20483, isUnsigned: true)
!197 = !DIEnumerator(name: "EVT_TWEAK_M", value: 20484, isUnsigned: true)
!198 = !DIEnumerator(name: "EVT_TWEAK_R", value: 20485, isUnsigned: true)
!199 = !DIEnumerator(name: "EVT_TWEAK_A", value: 20486, isUnsigned: true)
!200 = !DIEnumerator(name: "EVT_TWEAK_S", value: 20487, isUnsigned: true)
!201 = !DIEnumerator(name: "EVT_GESTURE", value: 20496, isUnsigned: true)
!202 = !DIEnumerator(name: "EVT_FILESELECT", value: 20512, isUnsigned: true)
!203 = !DIEnumerator(name: "EVT_BUT_OPEN", value: 20513, isUnsigned: true)
!204 = !DIEnumerator(name: "EVT_MODAL_MAP", value: 20514, isUnsigned: true)
!205 = !DIEnumerator(name: "EVT_DROP", value: 20515, isUnsigned: true)
!206 = !DIEnumerator(name: "EVT_BUT_CANCEL", value: 20516, isUnsigned: true)
!207 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !208, line: 271, baseType: !7, size: 32, elements: !209)
!208 = !DIFile(filename: "blender/source/blender/makesdna/DNA_windowmanager_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!209 = !{!210, !211, !212, !213, !214, !215}
!210 = !DIEnumerator(name: "KMI_TYPE_KEYBOARD", value: 0, isUnsigned: true)
!211 = !DIEnumerator(name: "KMI_TYPE_MOUSE", value: 1, isUnsigned: true)
!212 = !DIEnumerator(name: "KMI_TYPE_TWEAK", value: 2, isUnsigned: true)
!213 = !DIEnumerator(name: "KMI_TYPE_TEXTINPUT", value: 3, isUnsigned: true)
!214 = !DIEnumerator(name: "KMI_TYPE_TIMER", value: 4, isUnsigned: true)
!215 = !DIEnumerator(name: "KMI_TYPE_NDOF", value: 5, isUnsigned: true)
!216 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !208, line: 321, baseType: !7, size: 32, elements: !217)
!217 = !{!218, !219}
!218 = !DIEnumerator(name: "KEYCONF_USER", value: 2, isUnsigned: true)
!219 = !DIEnumerator(name: "KEYCONF_INIT_DEFAULT", value: 4, isUnsigned: true)
!220 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !208, line: 300, baseType: !7, size: 32, elements: !221)
!221 = !{!222, !223, !224, !225, !226, !227, !228}
!222 = !DIEnumerator(name: "KEYMAP_MODAL", value: 1, isUnsigned: true)
!223 = !DIEnumerator(name: "KEYMAP_USER", value: 2, isUnsigned: true)
!224 = !DIEnumerator(name: "KEYMAP_EXPANDED", value: 4, isUnsigned: true)
!225 = !DIEnumerator(name: "KEYMAP_CHILDREN_EXPANDED", value: 8, isUnsigned: true)
!226 = !DIEnumerator(name: "KEYMAP_DIFF", value: 16, isUnsigned: true)
!227 = !DIEnumerator(name: "KEYMAP_USER_MODIFIED", value: 32, isUnsigned: true)
!228 = !DIEnumerator(name: "KEYMAP_UPDATE", value: 64, isUnsigned: true)
!229 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !208, line: 263, baseType: !7, size: 32, elements: !230)
!230 = !{!231, !232, !233, !234}
!231 = !DIEnumerator(name: "KMI_INACTIVE", value: 1, isUnsigned: true)
!232 = !DIEnumerator(name: "KMI_EXPANDED", value: 2, isUnsigned: true)
!233 = !DIEnumerator(name: "KMI_USER_MODIFIED", value: 4, isUnsigned: true)
!234 = !DIEnumerator(name: "KMI_UPDATE", value: 8, isUnsigned: true)
!235 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !3, line: 1153, baseType: !7, size: 32, elements: !236)
!236 = !{!237, !238}
!237 = !DIEnumerator(name: "WM_KEYMAP_UPDATE_RECONFIGURE", value: 1, isUnsigned: true)
!238 = !DIEnumerator(name: "WM_KEYMAP_UPDATE_OPERATORTYPE", value: 2, isUnsigned: true)
!239 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !240, line: 141, baseType: !7, size: 32, elements: !241)
!240 = !DIFile(filename: "blender/source/blender/windowmanager/WM_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!241 = !{!242, !243, !244, !245, !246, !247, !248, !249, !250, !251, !252, !253}
!242 = !DIEnumerator(name: "WM_OP_INVOKE_DEFAULT", value: 0, isUnsigned: true)
!243 = !DIEnumerator(name: "WM_OP_INVOKE_REGION_WIN", value: 1, isUnsigned: true)
!244 = !DIEnumerator(name: "WM_OP_INVOKE_REGION_CHANNELS", value: 2, isUnsigned: true)
!245 = !DIEnumerator(name: "WM_OP_INVOKE_REGION_PREVIEW", value: 3, isUnsigned: true)
!246 = !DIEnumerator(name: "WM_OP_INVOKE_AREA", value: 4, isUnsigned: true)
!247 = !DIEnumerator(name: "WM_OP_INVOKE_SCREEN", value: 5, isUnsigned: true)
!248 = !DIEnumerator(name: "WM_OP_EXEC_DEFAULT", value: 6, isUnsigned: true)
!249 = !DIEnumerator(name: "WM_OP_EXEC_REGION_WIN", value: 7, isUnsigned: true)
!250 = !DIEnumerator(name: "WM_OP_EXEC_REGION_CHANNELS", value: 8, isUnsigned: true)
!251 = !DIEnumerator(name: "WM_OP_EXEC_REGION_PREVIEW", value: 9, isUnsigned: true)
!252 = !DIEnumerator(name: "WM_OP_EXEC_AREA", value: 10, isUnsigned: true)
!253 = !DIEnumerator(name: "WM_OP_EXEC_SCREEN", value: 11, isUnsigned: true)
!254 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !255, line: 361, baseType: !7, size: 32, elements: !256)
!255 = !DIFile(filename: "blender/source/blender/makesdna/DNA_screen_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!256 = !{!257, !258, !259, !260, !261, !262, !263, !264}
!257 = !DIEnumerator(name: "RGN_TYPE_WINDOW", value: 0, isUnsigned: true)
!258 = !DIEnumerator(name: "RGN_TYPE_HEADER", value: 1, isUnsigned: true)
!259 = !DIEnumerator(name: "RGN_TYPE_CHANNELS", value: 2, isUnsigned: true)
!260 = !DIEnumerator(name: "RGN_TYPE_TEMPORARY", value: 3, isUnsigned: true)
!261 = !DIEnumerator(name: "RGN_TYPE_UI", value: 4, isUnsigned: true)
!262 = !DIEnumerator(name: "RGN_TYPE_TOOLS", value: 5, isUnsigned: true)
!263 = !DIEnumerator(name: "RGN_TYPE_TOOL_PROPS", value: 6, isUnsigned: true)
!264 = !DIEnumerator(name: "RGN_TYPE_PREVIEW", value: 7, isUnsigned: true)
!265 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eRNAEqualsMode", file: !266, line: 1156, baseType: !7, size: 32, elements: !267)
!266 = !DIFile(filename: "blender/source/blender/makesrna/RNA_access.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!267 = !{!268, !269, !270}
!268 = !DIEnumerator(name: "RNA_EQ_STRICT", value: 0, isUnsigned: true)
!269 = !DIEnumerator(name: "RNA_EQ_UNSET_MATCH_ANY", value: 1, isUnsigned: true)
!270 = !DIEnumerator(name: "RNA_EQ_UNSET_MATCH_NONE", value: 2, isUnsigned: true)
!271 = !{!272, !273, !274}
!272 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!273 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!274 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !275, size: 64)
!275 = !DIDerivedType(tag: DW_TAG_typedef, name: "bContext", file: !276, line: 69, baseType: !277)
!276 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_context.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!277 = !DICompositeType(tag: DW_TAG_structure_type, name: "bContext", file: !208, line: 51, flags: DIFlagFwdDecl)
!278 = !{!0}
!279 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!280 = !{i32 7, !"Dwarf Version", i32 4}
!281 = !{i32 2, !"Debug Info Version", i32 3}
!282 = !{i32 1, !"wchar_size", i32 4}
!283 = !{!"clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)"}
!284 = distinct !DISubprogram(name: "WM_keymap_properties_reset", scope: !3, file: !3, line: 177, type: !285, scopeLine: 178, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !356)
!285 = !DISubroutineType(types: !286)
!286 = !{null, !287, !305}
!287 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !288, size: 64)
!288 = !DIDerivedType(tag: DW_TAG_typedef, name: "wmKeyMapItem", file: !208, line: 252, baseType: !289)
!289 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmKeyMapItem", file: !208, line: 227, size: 1472, elements: !290)
!290 = !{!291, !293, !294, !298, !329, !330, !331, !332, !333, !334, !335, !336, !337, !338, !339, !340, !341, !342}
!291 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !289, file: !208, line: 228, baseType: !292, size: 64)
!292 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !289, size: 64)
!293 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !289, file: !208, line: 228, baseType: !292, size: 64, offset: 64)
!294 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !289, file: !208, line: 231, baseType: !295, size: 512, offset: 128)
!295 = !DICompositeType(tag: DW_TAG_array_type, baseType: !279, size: 512, elements: !296)
!296 = !{!297}
!297 = !DISubrange(count: 64)
!298 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !289, file: !208, line: 232, baseType: !299, size: 64, offset: 640)
!299 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !300, size: 64)
!300 = !DIDerivedType(tag: DW_TAG_typedef, name: "IDProperty", file: !301, line: 75, baseType: !302)
!301 = !DIFile(filename: "blender/source/blender/makesdna/DNA_ID.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!302 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "IDProperty", file: !301, line: 62, size: 1024, elements: !303)
!303 = !{!304, !306, !307, !308, !309, !311, !312, !313, !327, !328}
!304 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !302, file: !301, line: 63, baseType: !305, size: 64)
!305 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !302, size: 64)
!306 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !302, file: !301, line: 63, baseType: !305, size: 64, offset: 64)
!307 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !302, file: !301, line: 64, baseType: !279, size: 8, offset: 128)
!308 = !DIDerivedType(tag: DW_TAG_member, name: "subtype", scope: !302, file: !301, line: 64, baseType: !279, size: 8, offset: 136)
!309 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !302, file: !301, line: 65, baseType: !310, size: 16, offset: 144)
!310 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!311 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !302, file: !301, line: 66, baseType: !295, size: 512, offset: 160)
!312 = !DIDerivedType(tag: DW_TAG_member, name: "saved", scope: !302, file: !301, line: 67, baseType: !273, size: 32, offset: 672)
!313 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !302, file: !301, line: 69, baseType: !314, size: 256, offset: 704)
!314 = !DIDerivedType(tag: DW_TAG_typedef, name: "IDPropertyData", file: !301, line: 60, baseType: !315)
!315 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "IDPropertyData", file: !301, line: 48, size: 256, elements: !316)
!316 = !{!317, !318, !325, !326}
!317 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !315, file: !301, line: 49, baseType: !272, size: 64)
!318 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !315, file: !301, line: 58, baseType: !319, size: 128, offset: 64)
!319 = !DIDerivedType(tag: DW_TAG_typedef, name: "ListBase", file: !320, line: 71, baseType: !321)
!320 = !DIFile(filename: "blender/source/blender/makesdna/DNA_listBase.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!321 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ListBase", file: !320, line: 69, size: 128, elements: !322)
!322 = !{!323, !324}
!323 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !321, file: !320, line: 70, baseType: !272, size: 64)
!324 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !321, file: !320, line: 70, baseType: !272, size: 64, offset: 64)
!325 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !315, file: !301, line: 59, baseType: !273, size: 32, offset: 192)
!326 = !DIDerivedType(tag: DW_TAG_member, name: "val2", scope: !315, file: !301, line: 59, baseType: !273, size: 32, offset: 224)
!327 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !302, file: !301, line: 70, baseType: !273, size: 32, offset: 960)
!328 = !DIDerivedType(tag: DW_TAG_member, name: "totallen", scope: !302, file: !301, line: 74, baseType: !273, size: 32, offset: 992)
!329 = !DIDerivedType(tag: DW_TAG_member, name: "propvalue_str", scope: !289, file: !208, line: 235, baseType: !295, size: 512, offset: 704)
!330 = !DIDerivedType(tag: DW_TAG_member, name: "propvalue", scope: !289, file: !208, line: 236, baseType: !310, size: 16, offset: 1216)
!331 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !289, file: !208, line: 239, baseType: !310, size: 16, offset: 1232)
!332 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !289, file: !208, line: 240, baseType: !310, size: 16, offset: 1248)
!333 = !DIDerivedType(tag: DW_TAG_member, name: "shift", scope: !289, file: !208, line: 241, baseType: !310, size: 16, offset: 1264)
!334 = !DIDerivedType(tag: DW_TAG_member, name: "ctrl", scope: !289, file: !208, line: 241, baseType: !310, size: 16, offset: 1280)
!335 = !DIDerivedType(tag: DW_TAG_member, name: "alt", scope: !289, file: !208, line: 241, baseType: !310, size: 16, offset: 1296)
!336 = !DIDerivedType(tag: DW_TAG_member, name: "oskey", scope: !289, file: !208, line: 241, baseType: !310, size: 16, offset: 1312)
!337 = !DIDerivedType(tag: DW_TAG_member, name: "keymodifier", scope: !289, file: !208, line: 242, baseType: !310, size: 16, offset: 1328)
!338 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !289, file: !208, line: 245, baseType: !310, size: 16, offset: 1344)
!339 = !DIDerivedType(tag: DW_TAG_member, name: "maptype", scope: !289, file: !208, line: 248, baseType: !310, size: 16, offset: 1360)
!340 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !289, file: !208, line: 249, baseType: !310, size: 16, offset: 1376)
!341 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !289, file: !208, line: 250, baseType: !310, size: 16, offset: 1392)
!342 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !289, file: !208, line: 251, baseType: !343, size: 64, offset: 1408)
!343 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !344, size: 64)
!344 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PointerRNA", file: !345, line: 55, size: 192, elements: !346)
!345 = !DIFile(filename: "blender/source/blender/makesrna/RNA_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!346 = !{!347, !351, !355}
!347 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !344, file: !345, line: 58, baseType: !348, size: 64)
!348 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !344, file: !345, line: 56, size: 64, elements: !349)
!349 = !{!350}
!350 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !348, file: !345, line: 57, baseType: !272, size: 64)
!351 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !344, file: !345, line: 60, baseType: !352, size: 64, offset: 64)
!352 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !353, size: 64)
!353 = !DICompositeType(tag: DW_TAG_structure_type, name: "StructRNA", file: !354, line: 335, flags: DIFlagFwdDecl)
!354 = !DIFile(filename: "blender/source/blender/makesdna/DNA_node_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!355 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !344, file: !345, line: 61, baseType: !272, size: 64, offset: 128)
!356 = !{}
!357 = !DILocalVariable(name: "kmi", arg: 1, scope: !284, file: !3, line: 177, type: !287)
!358 = !DILocation(line: 177, column: 47, scope: !284)
!359 = !DILocalVariable(name: "properties", arg: 2, scope: !284, file: !3, line: 177, type: !305)
!360 = !DILocation(line: 177, column: 71, scope: !284)
!361 = !DILocation(line: 179, column: 6, scope: !362)
!362 = distinct !DILexicalBlock(scope: !284, file: !3, line: 179, column: 6)
!363 = !DILocation(line: 179, column: 6, scope: !284)
!364 = !DILocation(line: 180, column: 31, scope: !365)
!365 = distinct !DILexicalBlock(scope: !362, file: !3, line: 179, column: 24)
!366 = !DILocation(line: 180, column: 36, scope: !365)
!367 = !DILocation(line: 180, column: 3, scope: !365)
!368 = !DILocation(line: 181, column: 3, scope: !365)
!369 = !DILocation(line: 181, column: 13, scope: !365)
!370 = !DILocation(line: 181, column: 18, scope: !365)
!371 = !DILocation(line: 183, column: 3, scope: !365)
!372 = !DILocation(line: 183, column: 8, scope: !365)
!373 = !DILocation(line: 183, column: 12, scope: !365)
!374 = !DILocation(line: 184, column: 2, scope: !365)
!375 = !DILocation(line: 186, column: 20, scope: !284)
!376 = !DILocation(line: 186, column: 2, scope: !284)
!377 = !DILocation(line: 186, column: 7, scope: !284)
!378 = !DILocation(line: 186, column: 18, scope: !284)
!379 = !DILocation(line: 188, column: 32, scope: !284)
!380 = !DILocation(line: 188, column: 2, scope: !284)
!381 = !DILocation(line: 189, column: 1, scope: !284)
!382 = distinct !DISubprogram(name: "wm_keymap_item_properties_set", scope: !3, file: !3, line: 93, type: !383, scopeLine: 94, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !356)
!383 = !DISubroutineType(types: !384)
!384 = !{null, !287}
!385 = !DILocalVariable(name: "kmi", arg: 1, scope: !382, file: !3, line: 93, type: !287)
!386 = !DILocation(line: 93, column: 57, scope: !382)
!387 = !DILocation(line: 95, column: 33, scope: !382)
!388 = !DILocation(line: 95, column: 38, scope: !382)
!389 = !DILocation(line: 95, column: 46, scope: !382)
!390 = !DILocation(line: 95, column: 51, scope: !382)
!391 = !DILocation(line: 95, column: 64, scope: !382)
!392 = !DILocation(line: 95, column: 69, scope: !382)
!393 = !DILocation(line: 95, column: 2, scope: !382)
!394 = !DILocation(line: 96, column: 34, scope: !382)
!395 = !DILocation(line: 96, column: 39, scope: !382)
!396 = !DILocation(line: 96, column: 2, scope: !382)
!397 = !DILocation(line: 97, column: 1, scope: !382)
!398 = distinct !DISubprogram(name: "WM_keymap_map_type_get", scope: !3, file: !3, line: 191, type: !399, scopeLine: 192, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !356)
!399 = !DISubroutineType(types: !400)
!400 = !{!273, !287}
!401 = !DILocalVariable(name: "kmi", arg: 1, scope: !398, file: !3, line: 191, type: !287)
!402 = !DILocation(line: 191, column: 42, scope: !398)
!403 = !DILocation(line: 193, column: 6, scope: !404)
!404 = distinct !DILexicalBlock(scope: !398, file: !3, line: 193, column: 6)
!405 = !DILocation(line: 193, column: 6, scope: !398)
!406 = !DILocation(line: 194, column: 3, scope: !407)
!407 = distinct !DILexicalBlock(scope: !404, file: !3, line: 193, column: 26)
!408 = !DILocation(line: 196, column: 6, scope: !409)
!409 = distinct !DILexicalBlock(scope: !398, file: !3, line: 196, column: 6)
!410 = !DILocation(line: 196, column: 6, scope: !398)
!411 = !DILocation(line: 197, column: 3, scope: !412)
!412 = distinct !DILexicalBlock(scope: !409, file: !3, line: 196, column: 29)
!413 = !DILocation(line: 199, column: 6, scope: !414)
!414 = distinct !DILexicalBlock(scope: !398, file: !3, line: 199, column: 6)
!415 = !DILocation(line: 199, column: 6, scope: !398)
!416 = !DILocation(line: 200, column: 3, scope: !417)
!417 = distinct !DILexicalBlock(scope: !414, file: !3, line: 199, column: 26)
!418 = !DILocation(line: 202, column: 6, scope: !419)
!419 = distinct !DILexicalBlock(scope: !398, file: !3, line: 202, column: 6)
!420 = !DILocation(line: 202, column: 6, scope: !398)
!421 = !DILocation(line: 203, column: 3, scope: !422)
!422 = distinct !DILexicalBlock(scope: !419, file: !3, line: 202, column: 26)
!423 = !DILocation(line: 205, column: 6, scope: !424)
!424 = distinct !DILexicalBlock(scope: !398, file: !3, line: 205, column: 6)
!425 = !DILocation(line: 205, column: 6, scope: !398)
!426 = !DILocation(line: 206, column: 3, scope: !427)
!427 = distinct !DILexicalBlock(scope: !424, file: !3, line: 205, column: 25)
!428 = !DILocation(line: 208, column: 6, scope: !429)
!429 = distinct !DILexicalBlock(scope: !398, file: !3, line: 208, column: 6)
!430 = !DILocation(line: 208, column: 11, scope: !429)
!431 = !DILocation(line: 208, column: 16, scope: !429)
!432 = !DILocation(line: 208, column: 6, scope: !398)
!433 = !DILocation(line: 209, column: 3, scope: !434)
!434 = distinct !DILexicalBlock(scope: !429, file: !3, line: 208, column: 33)
!435 = !DILocation(line: 211, column: 2, scope: !398)
!436 = !DILocation(line: 212, column: 1, scope: !398)
!437 = distinct !DISubprogram(name: "WM_keyconfig_new", scope: !3, file: !3, line: 247, type: !438, scopeLine: 248, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !356)
!438 = !DISubroutineType(types: !439)
!439 = !{!440, !452, !2048}
!440 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !441, size: 64)
!441 = !DIDerivedType(tag: DW_TAG_typedef, name: "wmKeyConfig", file: !208, line: 318, baseType: !442)
!442 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmKeyConfig", file: !208, line: 310, size: 1344, elements: !443)
!443 = !{!444, !446, !447, !448, !449, !450, !451}
!444 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !442, file: !208, line: 311, baseType: !445, size: 64)
!445 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !442, size: 64)
!446 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !442, file: !208, line: 311, baseType: !445, size: 64, offset: 64)
!447 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !442, file: !208, line: 313, baseType: !295, size: 512, offset: 128)
!448 = !DIDerivedType(tag: DW_TAG_member, name: "basename", scope: !442, file: !208, line: 314, baseType: !295, size: 512, offset: 640)
!449 = !DIDerivedType(tag: DW_TAG_member, name: "keymaps", scope: !442, file: !208, line: 316, baseType: !319, size: 128, offset: 1152)
!450 = !DIDerivedType(tag: DW_TAG_member, name: "actkeymap", scope: !442, file: !208, line: 317, baseType: !273, size: 32, offset: 1280)
!451 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !442, file: !208, line: 317, baseType: !273, size: 32, offset: 1312)
!452 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !453, size: 64)
!453 = !DIDerivedType(tag: DW_TAG_typedef, name: "wmWindowManager", file: !208, line: 160, baseType: !454)
!454 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmWindowManager", file: !208, line: 128, size: 2816, elements: !455)
!455 = !{!456, !492, !2087, !2088, !2089, !2090, !2091, !2092, !2093, !2094, !2103, !2104, !2105, !2106, !2107, !2108, !2109, !2110, !2111, !2112, !2113}
!456 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !454, file: !208, line: 129, baseType: !457, size: 960)
!457 = !DIDerivedType(tag: DW_TAG_typedef, name: "ID", file: !301, line: 130, baseType: !458)
!458 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ID", file: !301, line: 117, size: 960, elements: !459)
!459 = !{!460, !461, !462, !464, !483, !487, !488, !489, !490, !491}
!460 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !458, file: !301, line: 118, baseType: !272, size: 64)
!461 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !458, file: !301, line: 118, baseType: !272, size: 64, offset: 64)
!462 = !DIDerivedType(tag: DW_TAG_member, name: "newid", scope: !458, file: !301, line: 119, baseType: !463, size: 64, offset: 128)
!463 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !458, size: 64)
!464 = !DIDerivedType(tag: DW_TAG_member, name: "lib", scope: !458, file: !301, line: 120, baseType: !465, size: 64, offset: 192)
!465 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !466, size: 64)
!466 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Library", file: !301, line: 136, size: 17600, elements: !467)
!467 = !{!468, !469, !471, !474, !478, !479, !480}
!468 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !466, file: !301, line: 137, baseType: !457, size: 960)
!469 = !DIDerivedType(tag: DW_TAG_member, name: "idblock", scope: !466, file: !301, line: 138, baseType: !470, size: 64, offset: 960)
!470 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !457, size: 64)
!471 = !DIDerivedType(tag: DW_TAG_member, name: "filedata", scope: !466, file: !301, line: 139, baseType: !472, size: 64, offset: 1024)
!472 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !473, size: 64)
!473 = !DICompositeType(tag: DW_TAG_structure_type, name: "FileData", file: !301, line: 43, flags: DIFlagFwdDecl)
!474 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !466, file: !301, line: 140, baseType: !475, size: 8192, offset: 1088)
!475 = !DICompositeType(tag: DW_TAG_array_type, baseType: !279, size: 8192, elements: !476)
!476 = !{!477}
!477 = !DISubrange(count: 1024)
!478 = !DIDerivedType(tag: DW_TAG_member, name: "filepath", scope: !466, file: !301, line: 141, baseType: !475, size: 8192, offset: 9280)
!479 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !466, file: !301, line: 148, baseType: !465, size: 64, offset: 17472)
!480 = !DIDerivedType(tag: DW_TAG_member, name: "packedfile", scope: !466, file: !301, line: 150, baseType: !481, size: 64, offset: 17536)
!481 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !482, size: 64)
!482 = !DICompositeType(tag: DW_TAG_structure_type, name: "PackedFile", file: !301, line: 45, flags: DIFlagFwdDecl)
!483 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !458, file: !301, line: 121, baseType: !484, size: 528, offset: 256)
!484 = !DICompositeType(tag: DW_TAG_array_type, baseType: !279, size: 528, elements: !485)
!485 = !{!486}
!486 = !DISubrange(count: 66)
!487 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !458, file: !301, line: 126, baseType: !310, size: 16, offset: 784)
!488 = !DIDerivedType(tag: DW_TAG_member, name: "us", scope: !458, file: !301, line: 127, baseType: !273, size: 32, offset: 800)
!489 = !DIDerivedType(tag: DW_TAG_member, name: "icon_id", scope: !458, file: !301, line: 128, baseType: !273, size: 32, offset: 832)
!490 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !458, file: !301, line: 128, baseType: !273, size: 32, offset: 864)
!491 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !458, file: !301, line: 129, baseType: !299, size: 64, offset: 896)
!492 = !DIDerivedType(tag: DW_TAG_member, name: "windrawable", scope: !454, file: !208, line: 131, baseType: !493, size: 64, offset: 960)
!493 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !494, size: 64)
!494 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmWindow", file: !208, line: 169, size: 2048, elements: !495)
!495 = !{!496, !497, !498, !499, !2003, !2004, !2005, !2006, !2007, !2008, !2009, !2010, !2011, !2012, !2013, !2014, !2015, !2016, !2017, !2018, !2019, !2020, !2062, !2065, !2079, !2080, !2081, !2082, !2083, !2084, !2085, !2086}
!496 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !494, file: !208, line: 170, baseType: !493, size: 64)
!497 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !494, file: !208, line: 170, baseType: !493, size: 64, offset: 64)
!498 = !DIDerivedType(tag: DW_TAG_member, name: "ghostwin", scope: !494, file: !208, line: 172, baseType: !272, size: 64, offset: 128)
!499 = !DIDerivedType(tag: DW_TAG_member, name: "screen", scope: !494, file: !208, line: 174, baseType: !500, size: 64, offset: 192)
!500 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !501, size: 64)
!501 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bScreen", file: !255, line: 49, size: 1984, elements: !502)
!502 = !{!503, !504, !505, !506, !507, !508, !1970, !1971, !1972, !1973, !1974, !1975, !1976, !1977, !1978, !1979, !1980, !1981, !1982, !1983, !1984, !1985, !2002}
!503 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !501, file: !255, line: 50, baseType: !457, size: 960)
!504 = !DIDerivedType(tag: DW_TAG_member, name: "vertbase", scope: !501, file: !255, line: 52, baseType: !319, size: 128, offset: 960)
!505 = !DIDerivedType(tag: DW_TAG_member, name: "edgebase", scope: !501, file: !255, line: 53, baseType: !319, size: 128, offset: 1088)
!506 = !DIDerivedType(tag: DW_TAG_member, name: "areabase", scope: !501, file: !255, line: 54, baseType: !319, size: 128, offset: 1216)
!507 = !DIDerivedType(tag: DW_TAG_member, name: "regionbase", scope: !501, file: !255, line: 55, baseType: !319, size: 128, offset: 1344)
!508 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !501, file: !255, line: 57, baseType: !509, size: 64, offset: 1472)
!509 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !510, size: 64)
!510 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Scene", file: !511, line: 1216, size: 39680, elements: !512)
!511 = !DIFile(filename: "blender/source/blender/makesdna/DNA_scene_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!512 = !{!513, !514, !518, !810, !813, !814, !815, !827, !828, !829, !830, !831, !832, !833, !834, !835, !836, !837, !841, !911, !1338, !1553, !1556, !1845, !1857, !1858, !1859, !1860, !1861, !1862, !1863, !1864, !1867, !1868, !1869, !1870, !1871, !1879, !1946, !1953, !1954, !1961, !1962, !1963, !1964, !1965, !1966, !1967}
!513 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !510, file: !511, line: 1217, baseType: !457, size: 960)
!514 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !510, file: !511, line: 1218, baseType: !515, size: 64, offset: 960)
!515 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !516, size: 64)
!516 = !DICompositeType(tag: DW_TAG_structure_type, name: "AnimData", file: !517, line: 45, flags: DIFlagFwdDecl)
!517 = !DIFile(filename: "blender/source/blender/makesdna/DNA_texture_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!518 = !DIDerivedType(tag: DW_TAG_member, name: "camera", scope: !510, file: !511, line: 1220, baseType: !519, size: 64, offset: 1024)
!519 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !520, size: 64)
!520 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Object", file: !521, line: 115, size: 11392, elements: !522)
!521 = !DIFile(filename: "blender/source/blender/makesdna/DNA_object_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!522 = !{!523, !524, !525, !528, !529, !530, !531, !532, !533, !534, !535, !536, !537, !538, !539, !542, !554, !568, !569, !612, !613, !616, !617, !633, !634, !635, !636, !637, !638, !639, !643, !645, !646, !647, !648, !649, !650, !651, !652, !653, !654, !655, !659, !660, !661, !662, !663, !664, !667, !668, !669, !670, !671, !672, !673, !674, !675, !676, !677, !678, !679, !680, !681, !682, !683, !684, !685, !686, !687, !688, !689, !690, !691, !692, !693, !694, !695, !696, !697, !698, !699, !700, !702, !703, !704, !705, !706, !707, !708, !709, !710, !711, !712, !713, !714, !715, !716, !717, !718, !719, !720, !721, !724, !725, !726, !727, !728, !729, !730, !731, !732, !735, !738, !741, !742, !743, !744, !745, !748, !751, !754, !755, !761, !762, !763, !764, !765, !766, !768, !771, !774, !778, !798, !799}
!523 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !520, file: !521, line: 116, baseType: !457, size: 960)
!524 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !520, file: !521, line: 117, baseType: !515, size: 64, offset: 960)
!525 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt", scope: !520, file: !521, line: 119, baseType: !526, size: 64, offset: 1024)
!526 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !527, size: 64)
!527 = !DICompositeType(tag: DW_TAG_structure_type, name: "SculptSession", file: !521, line: 57, flags: DIFlagFwdDecl)
!528 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !520, file: !521, line: 121, baseType: !310, size: 16, offset: 1088)
!529 = !DIDerivedType(tag: DW_TAG_member, name: "partype", scope: !520, file: !521, line: 121, baseType: !310, size: 16, offset: 1104)
!530 = !DIDerivedType(tag: DW_TAG_member, name: "par1", scope: !520, file: !521, line: 122, baseType: !273, size: 32, offset: 1120)
!531 = !DIDerivedType(tag: DW_TAG_member, name: "par2", scope: !520, file: !521, line: 122, baseType: !273, size: 32, offset: 1152)
!532 = !DIDerivedType(tag: DW_TAG_member, name: "par3", scope: !520, file: !521, line: 122, baseType: !273, size: 32, offset: 1184)
!533 = !DIDerivedType(tag: DW_TAG_member, name: "parsubstr", scope: !520, file: !521, line: 123, baseType: !295, size: 512, offset: 1216)
!534 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !520, file: !521, line: 124, baseType: !519, size: 64, offset: 1728)
!535 = !DIDerivedType(tag: DW_TAG_member, name: "track", scope: !520, file: !521, line: 124, baseType: !519, size: 64, offset: 1792)
!536 = !DIDerivedType(tag: DW_TAG_member, name: "proxy", scope: !520, file: !521, line: 127, baseType: !519, size: 64, offset: 1856)
!537 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_group", scope: !520, file: !521, line: 127, baseType: !519, size: 64, offset: 1920)
!538 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_from", scope: !520, file: !521, line: 127, baseType: !519, size: 64, offset: 1984)
!539 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !520, file: !521, line: 128, baseType: !540, size: 64, offset: 2048)
!540 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !541, size: 64)
!541 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ipo", file: !517, line: 46, flags: DIFlagFwdDecl)
!542 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !520, file: !521, line: 130, baseType: !543, size: 64, offset: 2112)
!543 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !544, size: 64)
!544 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BoundBox", file: !521, line: 97, size: 832, elements: !545)
!545 = !{!546, !552, !553}
!546 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !544, file: !521, line: 98, baseType: !547, size: 768)
!547 = !DICompositeType(tag: DW_TAG_array_type, baseType: !548, size: 768, elements: !549)
!548 = !DIBasicType(name: "float", size: 32, encoding: DW_ATE_float)
!549 = !{!550, !551}
!550 = !DISubrange(count: 8)
!551 = !DISubrange(count: 3)
!552 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !544, file: !521, line: 99, baseType: !273, size: 32, offset: 768)
!553 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !544, file: !521, line: 99, baseType: !273, size: 32, offset: 800)
!554 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !520, file: !521, line: 131, baseType: !555, size: 64, offset: 2176)
!555 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !556, size: 64)
!556 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bAction", file: !557, line: 486, size: 1600, elements: !558)
!557 = !DIFile(filename: "blender/source/blender/makesdna/DNA_action_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!558 = !{!559, !560, !561, !562, !563, !564, !565, !566, !567}
!559 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !556, file: !557, line: 487, baseType: !457, size: 960)
!560 = !DIDerivedType(tag: DW_TAG_member, name: "curves", scope: !556, file: !557, line: 489, baseType: !319, size: 128, offset: 960)
!561 = !DIDerivedType(tag: DW_TAG_member, name: "chanbase", scope: !556, file: !557, line: 490, baseType: !319, size: 128, offset: 1088)
!562 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !556, file: !557, line: 491, baseType: !319, size: 128, offset: 1216)
!563 = !DIDerivedType(tag: DW_TAG_member, name: "markers", scope: !556, file: !557, line: 492, baseType: !319, size: 128, offset: 1344)
!564 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !556, file: !557, line: 494, baseType: !273, size: 32, offset: 1472)
!565 = !DIDerivedType(tag: DW_TAG_member, name: "active_marker", scope: !556, file: !557, line: 495, baseType: !273, size: 32, offset: 1504)
!566 = !DIDerivedType(tag: DW_TAG_member, name: "idroot", scope: !556, file: !557, line: 497, baseType: !273, size: 32, offset: 1536)
!567 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !556, file: !557, line: 498, baseType: !273, size: 32, offset: 1568)
!568 = !DIDerivedType(tag: DW_TAG_member, name: "poselib", scope: !520, file: !521, line: 132, baseType: !555, size: 64, offset: 2240)
!569 = !DIDerivedType(tag: DW_TAG_member, name: "pose", scope: !520, file: !521, line: 133, baseType: !570, size: 64, offset: 2304)
!570 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !571, size: 64)
!571 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bPose", file: !557, line: 334, size: 1728, elements: !572)
!572 = !{!573, !574, !577, !578, !579, !580, !581, !582, !585, !586, !587, !588, !589, !590, !591, !611}
!573 = !DIDerivedType(tag: DW_TAG_member, name: "chanbase", scope: !571, file: !557, line: 335, baseType: !319, size: 128)
!574 = !DIDerivedType(tag: DW_TAG_member, name: "chanhash", scope: !571, file: !557, line: 336, baseType: !575, size: 64, offset: 128)
!575 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !576, size: 64)
!576 = !DICompositeType(tag: DW_TAG_structure_type, name: "GHash", file: !557, line: 47, flags: DIFlagFwdDecl)
!577 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !571, file: !557, line: 338, baseType: !310, size: 16, offset: 192)
!578 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !571, file: !557, line: 338, baseType: !310, size: 16, offset: 208)
!579 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_layer", scope: !571, file: !557, line: 339, baseType: !7, size: 32, offset: 224)
!580 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !571, file: !557, line: 340, baseType: !273, size: 32, offset: 256)
!581 = !DIDerivedType(tag: DW_TAG_member, name: "ctime", scope: !571, file: !557, line: 342, baseType: !548, size: 32, offset: 288)
!582 = !DIDerivedType(tag: DW_TAG_member, name: "stride_offset", scope: !571, file: !557, line: 343, baseType: !583, size: 96, offset: 320)
!583 = !DICompositeType(tag: DW_TAG_array_type, baseType: !548, size: 96, elements: !584)
!584 = !{!551}
!585 = !DIDerivedType(tag: DW_TAG_member, name: "cyclic_offset", scope: !571, file: !557, line: 344, baseType: !583, size: 96, offset: 416)
!586 = !DIDerivedType(tag: DW_TAG_member, name: "agroups", scope: !571, file: !557, line: 347, baseType: !319, size: 128, offset: 512)
!587 = !DIDerivedType(tag: DW_TAG_member, name: "active_group", scope: !571, file: !557, line: 349, baseType: !273, size: 32, offset: 640)
!588 = !DIDerivedType(tag: DW_TAG_member, name: "iksolver", scope: !571, file: !557, line: 350, baseType: !273, size: 32, offset: 672)
!589 = !DIDerivedType(tag: DW_TAG_member, name: "ikdata", scope: !571, file: !557, line: 351, baseType: !272, size: 64, offset: 704)
!590 = !DIDerivedType(tag: DW_TAG_member, name: "ikparam", scope: !571, file: !557, line: 352, baseType: !272, size: 64, offset: 768)
!591 = !DIDerivedType(tag: DW_TAG_member, name: "avs", scope: !571, file: !557, line: 354, baseType: !592, size: 384, offset: 832)
!592 = !DIDerivedType(tag: DW_TAG_typedef, name: "bAnimVizSettings", file: !557, line: 116, baseType: !593)
!593 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bAnimVizSettings", file: !557, line: 94, size: 384, elements: !594)
!594 = !{!595, !596, !597, !598, !599, !600, !601, !602, !603, !604, !605, !606, !607, !608, !609, !610}
!595 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_sf", scope: !593, file: !557, line: 96, baseType: !273, size: 32)
!596 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_ef", scope: !593, file: !557, line: 96, baseType: !273, size: 32, offset: 32)
!597 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_bc", scope: !593, file: !557, line: 97, baseType: !273, size: 32, offset: 64)
!598 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_ac", scope: !593, file: !557, line: 97, baseType: !273, size: 32, offset: 96)
!599 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_type", scope: !593, file: !557, line: 99, baseType: !310, size: 16, offset: 128)
!600 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_step", scope: !593, file: !557, line: 100, baseType: !310, size: 16, offset: 144)
!601 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_flag", scope: !593, file: !557, line: 102, baseType: !310, size: 16, offset: 160)
!602 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !593, file: !557, line: 105, baseType: !310, size: 16, offset: 176)
!603 = !DIDerivedType(tag: DW_TAG_member, name: "path_type", scope: !593, file: !557, line: 108, baseType: !310, size: 16, offset: 192)
!604 = !DIDerivedType(tag: DW_TAG_member, name: "path_step", scope: !593, file: !557, line: 109, baseType: !310, size: 16, offset: 208)
!605 = !DIDerivedType(tag: DW_TAG_member, name: "path_viewflag", scope: !593, file: !557, line: 111, baseType: !310, size: 16, offset: 224)
!606 = !DIDerivedType(tag: DW_TAG_member, name: "path_bakeflag", scope: !593, file: !557, line: 112, baseType: !310, size: 16, offset: 240)
!607 = !DIDerivedType(tag: DW_TAG_member, name: "path_sf", scope: !593, file: !557, line: 114, baseType: !273, size: 32, offset: 256)
!608 = !DIDerivedType(tag: DW_TAG_member, name: "path_ef", scope: !593, file: !557, line: 114, baseType: !273, size: 32, offset: 288)
!609 = !DIDerivedType(tag: DW_TAG_member, name: "path_bc", scope: !593, file: !557, line: 115, baseType: !273, size: 32, offset: 320)
!610 = !DIDerivedType(tag: DW_TAG_member, name: "path_ac", scope: !593, file: !557, line: 115, baseType: !273, size: 32, offset: 352)
!611 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_act_bone", scope: !571, file: !557, line: 355, baseType: !295, size: 512, offset: 1216)
!612 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !520, file: !521, line: 134, baseType: !272, size: 64, offset: 2368)
!613 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !520, file: !521, line: 136, baseType: !614, size: 64, offset: 2432)
!614 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !615, size: 64)
!615 = !DICompositeType(tag: DW_TAG_structure_type, name: "bGPdata", file: !521, line: 58, flags: DIFlagFwdDecl)
!616 = !DIDerivedType(tag: DW_TAG_member, name: "avs", scope: !520, file: !521, line: 138, baseType: !592, size: 384, offset: 2496)
!617 = !DIDerivedType(tag: DW_TAG_member, name: "mpath", scope: !520, file: !521, line: 139, baseType: !618, size: 64, offset: 2880)
!618 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !619, size: 64)
!619 = !DIDerivedType(tag: DW_TAG_typedef, name: "bMotionPath", file: !557, line: 80, baseType: !620)
!620 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bMotionPath", file: !557, line: 72, size: 192, elements: !621)
!621 = !{!622, !629, !630, !631, !632}
!622 = !DIDerivedType(tag: DW_TAG_member, name: "points", scope: !620, file: !557, line: 73, baseType: !623, size: 64)
!623 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !624, size: 64)
!624 = !DIDerivedType(tag: DW_TAG_typedef, name: "bMotionPathVert", file: !557, line: 59, baseType: !625)
!625 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bMotionPathVert", file: !557, line: 56, size: 128, elements: !626)
!626 = !{!627, !628}
!627 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !625, file: !557, line: 57, baseType: !583, size: 96)
!628 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !625, file: !557, line: 58, baseType: !273, size: 32, offset: 96)
!629 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !620, file: !557, line: 74, baseType: !273, size: 32, offset: 64)
!630 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame", scope: !620, file: !557, line: 76, baseType: !273, size: 32, offset: 96)
!631 = !DIDerivedType(tag: DW_TAG_member, name: "end_frame", scope: !620, file: !557, line: 77, baseType: !273, size: 32, offset: 128)
!632 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !620, file: !557, line: 79, baseType: !273, size: 32, offset: 160)
!633 = !DIDerivedType(tag: DW_TAG_member, name: "constraintChannels", scope: !520, file: !521, line: 141, baseType: !319, size: 128, offset: 2944)
!634 = !DIDerivedType(tag: DW_TAG_member, name: "effect", scope: !520, file: !521, line: 142, baseType: !319, size: 128, offset: 3072)
!635 = !DIDerivedType(tag: DW_TAG_member, name: "defbase", scope: !520, file: !521, line: 143, baseType: !319, size: 128, offset: 3200)
!636 = !DIDerivedType(tag: DW_TAG_member, name: "modifiers", scope: !520, file: !521, line: 144, baseType: !319, size: 128, offset: 3328)
!637 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !520, file: !521, line: 146, baseType: !273, size: 32, offset: 3456)
!638 = !DIDerivedType(tag: DW_TAG_member, name: "restore_mode", scope: !520, file: !521, line: 147, baseType: !273, size: 32, offset: 3488)
!639 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !520, file: !521, line: 150, baseType: !640, size: 64, offset: 3520)
!640 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !641, size: 64)
!641 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !642, size: 64)
!642 = !DICompositeType(tag: DW_TAG_structure_type, name: "Material", file: !521, line: 50, flags: DIFlagFwdDecl)
!643 = !DIDerivedType(tag: DW_TAG_member, name: "matbits", scope: !520, file: !521, line: 151, baseType: !644, size: 64, offset: 3584)
!644 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !279, size: 64)
!645 = !DIDerivedType(tag: DW_TAG_member, name: "totcol", scope: !520, file: !521, line: 152, baseType: !273, size: 32, offset: 3648)
!646 = !DIDerivedType(tag: DW_TAG_member, name: "actcol", scope: !520, file: !521, line: 153, baseType: !273, size: 32, offset: 3680)
!647 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !520, file: !521, line: 156, baseType: !583, size: 96, offset: 3712)
!648 = !DIDerivedType(tag: DW_TAG_member, name: "dloc", scope: !520, file: !521, line: 156, baseType: !583, size: 96, offset: 3808)
!649 = !DIDerivedType(tag: DW_TAG_member, name: "orig", scope: !520, file: !521, line: 156, baseType: !583, size: 96, offset: 3904)
!650 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !520, file: !521, line: 157, baseType: !583, size: 96, offset: 4000)
!651 = !DIDerivedType(tag: DW_TAG_member, name: "dsize", scope: !520, file: !521, line: 158, baseType: !583, size: 96, offset: 4096)
!652 = !DIDerivedType(tag: DW_TAG_member, name: "dscale", scope: !520, file: !521, line: 159, baseType: !583, size: 96, offset: 4192)
!653 = !DIDerivedType(tag: DW_TAG_member, name: "rot", scope: !520, file: !521, line: 160, baseType: !583, size: 96, offset: 4288)
!654 = !DIDerivedType(tag: DW_TAG_member, name: "drot", scope: !520, file: !521, line: 160, baseType: !583, size: 96, offset: 4384)
!655 = !DIDerivedType(tag: DW_TAG_member, name: "quat", scope: !520, file: !521, line: 161, baseType: !656, size: 128, offset: 4480)
!656 = !DICompositeType(tag: DW_TAG_array_type, baseType: !548, size: 128, elements: !657)
!657 = !{!658}
!658 = !DISubrange(count: 4)
!659 = !DIDerivedType(tag: DW_TAG_member, name: "dquat", scope: !520, file: !521, line: 161, baseType: !656, size: 128, offset: 4608)
!660 = !DIDerivedType(tag: DW_TAG_member, name: "rotAxis", scope: !520, file: !521, line: 162, baseType: !583, size: 96, offset: 4736)
!661 = !DIDerivedType(tag: DW_TAG_member, name: "drotAxis", scope: !520, file: !521, line: 162, baseType: !583, size: 96, offset: 4832)
!662 = !DIDerivedType(tag: DW_TAG_member, name: "rotAngle", scope: !520, file: !521, line: 163, baseType: !548, size: 32, offset: 4928)
!663 = !DIDerivedType(tag: DW_TAG_member, name: "drotAngle", scope: !520, file: !521, line: 163, baseType: !548, size: 32, offset: 4960)
!664 = !DIDerivedType(tag: DW_TAG_member, name: "obmat", scope: !520, file: !521, line: 164, baseType: !665, size: 512, offset: 4992)
!665 = !DICompositeType(tag: DW_TAG_array_type, baseType: !548, size: 512, elements: !666)
!666 = !{!658, !658}
!667 = !DIDerivedType(tag: DW_TAG_member, name: "parentinv", scope: !520, file: !521, line: 165, baseType: !665, size: 512, offset: 5504)
!668 = !DIDerivedType(tag: DW_TAG_member, name: "constinv", scope: !520, file: !521, line: 166, baseType: !665, size: 512, offset: 6016)
!669 = !DIDerivedType(tag: DW_TAG_member, name: "imat", scope: !520, file: !521, line: 167, baseType: !665, size: 512, offset: 6528)
!670 = !DIDerivedType(tag: DW_TAG_member, name: "imat_ren", scope: !520, file: !521, line: 176, baseType: !665, size: 512, offset: 7040)
!671 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !520, file: !521, line: 178, baseType: !7, size: 32, offset: 7552)
!672 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !520, file: !521, line: 180, baseType: !310, size: 16, offset: 7584)
!673 = !DIDerivedType(tag: DW_TAG_member, name: "colbits", scope: !520, file: !521, line: 181, baseType: !310, size: 16, offset: 7600)
!674 = !DIDerivedType(tag: DW_TAG_member, name: "transflag", scope: !520, file: !521, line: 183, baseType: !310, size: 16, offset: 7616)
!675 = !DIDerivedType(tag: DW_TAG_member, name: "protectflag", scope: !520, file: !521, line: 183, baseType: !310, size: 16, offset: 7632)
!676 = !DIDerivedType(tag: DW_TAG_member, name: "trackflag", scope: !520, file: !521, line: 184, baseType: !310, size: 16, offset: 7648)
!677 = !DIDerivedType(tag: DW_TAG_member, name: "upflag", scope: !520, file: !521, line: 184, baseType: !310, size: 16, offset: 7664)
!678 = !DIDerivedType(tag: DW_TAG_member, name: "nlaflag", scope: !520, file: !521, line: 185, baseType: !310, size: 16, offset: 7680)
!679 = !DIDerivedType(tag: DW_TAG_member, name: "ipoflag", scope: !520, file: !521, line: 186, baseType: !310, size: 16, offset: 7696)
!680 = !DIDerivedType(tag: DW_TAG_member, name: "scaflag", scope: !520, file: !521, line: 187, baseType: !310, size: 16, offset: 7712)
!681 = !DIDerivedType(tag: DW_TAG_member, name: "scavisflag", scope: !520, file: !521, line: 188, baseType: !279, size: 8, offset: 7728)
!682 = !DIDerivedType(tag: DW_TAG_member, name: "depsflag", scope: !520, file: !521, line: 189, baseType: !279, size: 8, offset: 7736)
!683 = !DIDerivedType(tag: DW_TAG_member, name: "dupon", scope: !520, file: !521, line: 192, baseType: !273, size: 32, offset: 7744)
!684 = !DIDerivedType(tag: DW_TAG_member, name: "dupoff", scope: !520, file: !521, line: 192, baseType: !273, size: 32, offset: 7776)
!685 = !DIDerivedType(tag: DW_TAG_member, name: "dupsta", scope: !520, file: !521, line: 192, baseType: !273, size: 32, offset: 7808)
!686 = !DIDerivedType(tag: DW_TAG_member, name: "dupend", scope: !520, file: !521, line: 192, baseType: !273, size: 32, offset: 7840)
!687 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !520, file: !521, line: 194, baseType: !273, size: 32, offset: 7872)
!688 = !DIDerivedType(tag: DW_TAG_member, name: "mass", scope: !520, file: !521, line: 202, baseType: !548, size: 32, offset: 7904)
!689 = !DIDerivedType(tag: DW_TAG_member, name: "damping", scope: !520, file: !521, line: 202, baseType: !548, size: 32, offset: 7936)
!690 = !DIDerivedType(tag: DW_TAG_member, name: "inertia", scope: !520, file: !521, line: 202, baseType: !548, size: 32, offset: 7968)
!691 = !DIDerivedType(tag: DW_TAG_member, name: "formfactor", scope: !520, file: !521, line: 211, baseType: !548, size: 32, offset: 8000)
!692 = !DIDerivedType(tag: DW_TAG_member, name: "rdamping", scope: !520, file: !521, line: 212, baseType: !548, size: 32, offset: 8032)
!693 = !DIDerivedType(tag: DW_TAG_member, name: "margin", scope: !520, file: !521, line: 213, baseType: !548, size: 32, offset: 8064)
!694 = !DIDerivedType(tag: DW_TAG_member, name: "max_vel", scope: !520, file: !521, line: 214, baseType: !548, size: 32, offset: 8096)
!695 = !DIDerivedType(tag: DW_TAG_member, name: "min_vel", scope: !520, file: !521, line: 215, baseType: !548, size: 32, offset: 8128)
!696 = !DIDerivedType(tag: DW_TAG_member, name: "obstacleRad", scope: !520, file: !521, line: 216, baseType: !548, size: 32, offset: 8160)
!697 = !DIDerivedType(tag: DW_TAG_member, name: "step_height", scope: !520, file: !521, line: 219, baseType: !548, size: 32, offset: 8192)
!698 = !DIDerivedType(tag: DW_TAG_member, name: "jump_speed", scope: !520, file: !521, line: 220, baseType: !548, size: 32, offset: 8224)
!699 = !DIDerivedType(tag: DW_TAG_member, name: "fall_speed", scope: !520, file: !521, line: 221, baseType: !548, size: 32, offset: 8256)
!700 = !DIDerivedType(tag: DW_TAG_member, name: "col_group", scope: !520, file: !521, line: 224, baseType: !701, size: 16, offset: 8288)
!701 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!702 = !DIDerivedType(tag: DW_TAG_member, name: "col_mask", scope: !520, file: !521, line: 224, baseType: !701, size: 16, offset: 8304)
!703 = !DIDerivedType(tag: DW_TAG_member, name: "rotmode", scope: !520, file: !521, line: 226, baseType: !310, size: 16, offset: 8320)
!704 = !DIDerivedType(tag: DW_TAG_member, name: "boundtype", scope: !520, file: !521, line: 228, baseType: !279, size: 8, offset: 8336)
!705 = !DIDerivedType(tag: DW_TAG_member, name: "collision_boundtype", scope: !520, file: !521, line: 229, baseType: !279, size: 8, offset: 8344)
!706 = !DIDerivedType(tag: DW_TAG_member, name: "dtx", scope: !520, file: !521, line: 231, baseType: !310, size: 16, offset: 8352)
!707 = !DIDerivedType(tag: DW_TAG_member, name: "dt", scope: !520, file: !521, line: 232, baseType: !279, size: 8, offset: 8368)
!708 = !DIDerivedType(tag: DW_TAG_member, name: "empty_drawtype", scope: !520, file: !521, line: 233, baseType: !279, size: 8, offset: 8376)
!709 = !DIDerivedType(tag: DW_TAG_member, name: "empty_drawsize", scope: !520, file: !521, line: 234, baseType: !548, size: 32, offset: 8384)
!710 = !DIDerivedType(tag: DW_TAG_member, name: "dupfacesca", scope: !520, file: !521, line: 235, baseType: !548, size: 32, offset: 8416)
!711 = !DIDerivedType(tag: DW_TAG_member, name: "prop", scope: !520, file: !521, line: 237, baseType: !319, size: 128, offset: 8448)
!712 = !DIDerivedType(tag: DW_TAG_member, name: "sensors", scope: !520, file: !521, line: 238, baseType: !319, size: 128, offset: 8576)
!713 = !DIDerivedType(tag: DW_TAG_member, name: "controllers", scope: !520, file: !521, line: 239, baseType: !319, size: 128, offset: 8704)
!714 = !DIDerivedType(tag: DW_TAG_member, name: "actuators", scope: !520, file: !521, line: 240, baseType: !319, size: 128, offset: 8832)
!715 = !DIDerivedType(tag: DW_TAG_member, name: "sf", scope: !520, file: !521, line: 242, baseType: !548, size: 32, offset: 8960)
!716 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !520, file: !521, line: 244, baseType: !310, size: 16, offset: 8992)
!717 = !DIDerivedType(tag: DW_TAG_member, name: "actdef", scope: !520, file: !521, line: 245, baseType: !701, size: 16, offset: 9008)
!718 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !520, file: !521, line: 246, baseType: !656, size: 128, offset: 9024)
!719 = !DIDerivedType(tag: DW_TAG_member, name: "gameflag", scope: !520, file: !521, line: 248, baseType: !273, size: 32, offset: 9152)
!720 = !DIDerivedType(tag: DW_TAG_member, name: "gameflag2", scope: !520, file: !521, line: 249, baseType: !273, size: 32, offset: 9184)
!721 = !DIDerivedType(tag: DW_TAG_member, name: "bsoft", scope: !520, file: !521, line: 251, baseType: !722, size: 64, offset: 9216)
!722 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !723, size: 64)
!723 = !DICompositeType(tag: DW_TAG_structure_type, name: "BulletSoftBody", file: !521, line: 251, flags: DIFlagFwdDecl)
!724 = !DIDerivedType(tag: DW_TAG_member, name: "restrictflag", scope: !520, file: !521, line: 253, baseType: !279, size: 8, offset: 9280)
!725 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !520, file: !521, line: 254, baseType: !279, size: 8, offset: 9288)
!726 = !DIDerivedType(tag: DW_TAG_member, name: "softflag", scope: !520, file: !521, line: 255, baseType: !310, size: 16, offset: 9296)
!727 = !DIDerivedType(tag: DW_TAG_member, name: "anisotropicFriction", scope: !520, file: !521, line: 256, baseType: !583, size: 96, offset: 9312)
!728 = !DIDerivedType(tag: DW_TAG_member, name: "constraints", scope: !520, file: !521, line: 258, baseType: !319, size: 128, offset: 9408)
!729 = !DIDerivedType(tag: DW_TAG_member, name: "nlastrips", scope: !520, file: !521, line: 259, baseType: !319, size: 128, offset: 9536)
!730 = !DIDerivedType(tag: DW_TAG_member, name: "hooks", scope: !520, file: !521, line: 260, baseType: !319, size: 128, offset: 9664)
!731 = !DIDerivedType(tag: DW_TAG_member, name: "particlesystem", scope: !520, file: !521, line: 261, baseType: !319, size: 128, offset: 9792)
!732 = !DIDerivedType(tag: DW_TAG_member, name: "pd", scope: !520, file: !521, line: 263, baseType: !733, size: 64, offset: 9920)
!733 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !734, size: 64)
!734 = !DICompositeType(tag: DW_TAG_structure_type, name: "PartDeflect", file: !521, line: 52, flags: DIFlagFwdDecl)
!735 = !DIDerivedType(tag: DW_TAG_member, name: "soft", scope: !520, file: !521, line: 264, baseType: !736, size: 64, offset: 9984)
!736 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !737, size: 64)
!737 = !DICompositeType(tag: DW_TAG_structure_type, name: "SoftBody", file: !521, line: 53, flags: DIFlagFwdDecl)
!738 = !DIDerivedType(tag: DW_TAG_member, name: "dup_group", scope: !520, file: !521, line: 265, baseType: !739, size: 64, offset: 10048)
!739 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !740, size: 64)
!740 = !DICompositeType(tag: DW_TAG_structure_type, name: "Group", file: !557, line: 46, flags: DIFlagFwdDecl)
!741 = !DIDerivedType(tag: DW_TAG_member, name: "body_type", scope: !520, file: !521, line: 267, baseType: !279, size: 8, offset: 10112)
!742 = !DIDerivedType(tag: DW_TAG_member, name: "shapeflag", scope: !520, file: !521, line: 268, baseType: !279, size: 8, offset: 10120)
!743 = !DIDerivedType(tag: DW_TAG_member, name: "shapenr", scope: !520, file: !521, line: 269, baseType: !310, size: 16, offset: 10128)
!744 = !DIDerivedType(tag: DW_TAG_member, name: "smoothresh", scope: !520, file: !521, line: 270, baseType: !548, size: 32, offset: 10144)
!745 = !DIDerivedType(tag: DW_TAG_member, name: "fluidsimSettings", scope: !520, file: !521, line: 272, baseType: !746, size: 64, offset: 10176)
!746 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !747, size: 64)
!747 = !DICompositeType(tag: DW_TAG_structure_type, name: "FluidsimSettings", file: !521, line: 54, flags: DIFlagFwdDecl)
!748 = !DIDerivedType(tag: DW_TAG_member, name: "curve_cache", scope: !520, file: !521, line: 275, baseType: !749, size: 64, offset: 10240)
!749 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !750, size: 64)
!750 = !DICompositeType(tag: DW_TAG_structure_type, name: "CurveCache", file: !521, line: 275, flags: DIFlagFwdDecl)
!751 = !DIDerivedType(tag: DW_TAG_member, name: "derivedDeform", scope: !520, file: !521, line: 277, baseType: !752, size: 64, offset: 10304)
!752 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !753, size: 64)
!753 = !DICompositeType(tag: DW_TAG_structure_type, name: "DerivedMesh", file: !521, line: 56, flags: DIFlagFwdDecl)
!754 = !DIDerivedType(tag: DW_TAG_member, name: "derivedFinal", scope: !520, file: !521, line: 277, baseType: !752, size: 64, offset: 10368)
!755 = !DIDerivedType(tag: DW_TAG_member, name: "lastDataMask", scope: !520, file: !521, line: 278, baseType: !756, size: 64, offset: 10432)
!756 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !757, line: 27, baseType: !758)
!757 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdint-uintn.h", directory: "")
!758 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint64_t", file: !759, line: 45, baseType: !760)
!759 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "")
!760 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!761 = !DIDerivedType(tag: DW_TAG_member, name: "customdata_mask", scope: !520, file: !521, line: 279, baseType: !756, size: 64, offset: 10496)
!762 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !520, file: !521, line: 280, baseType: !7, size: 32, offset: 10560)
!763 = !DIDerivedType(tag: DW_TAG_member, name: "init_state", scope: !520, file: !521, line: 281, baseType: !7, size: 32, offset: 10592)
!764 = !DIDerivedType(tag: DW_TAG_member, name: "gpulamp", scope: !520, file: !521, line: 283, baseType: !319, size: 128, offset: 10624)
!765 = !DIDerivedType(tag: DW_TAG_member, name: "pc_ids", scope: !520, file: !521, line: 284, baseType: !319, size: 128, offset: 10752)
!766 = !DIDerivedType(tag: DW_TAG_member, name: "duplilist", scope: !520, file: !521, line: 285, baseType: !767, size: 64, offset: 10880)
!767 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !319, size: 64)
!768 = !DIDerivedType(tag: DW_TAG_member, name: "rigidbody_object", scope: !520, file: !521, line: 287, baseType: !769, size: 64, offset: 10944)
!769 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !770, size: 64)
!770 = !DICompositeType(tag: DW_TAG_structure_type, name: "RigidBodyOb", file: !521, line: 59, flags: DIFlagFwdDecl)
!771 = !DIDerivedType(tag: DW_TAG_member, name: "rigidbody_constraint", scope: !520, file: !521, line: 288, baseType: !772, size: 64, offset: 11008)
!772 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !773, size: 64)
!773 = !DICompositeType(tag: DW_TAG_structure_type, name: "RigidBodyCon", file: !521, line: 288, flags: DIFlagFwdDecl)
!774 = !DIDerivedType(tag: DW_TAG_member, name: "ima_ofs", scope: !520, file: !521, line: 290, baseType: !775, size: 64, offset: 11072)
!775 = !DICompositeType(tag: DW_TAG_array_type, baseType: !548, size: 64, elements: !776)
!776 = !{!777}
!777 = !DISubrange(count: 2)
!778 = !DIDerivedType(tag: DW_TAG_member, name: "iuser", scope: !520, file: !521, line: 291, baseType: !779, size: 64, offset: 11136)
!779 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !780, size: 64)
!780 = !DIDerivedType(tag: DW_TAG_typedef, name: "ImageUser", file: !781, line: 65, baseType: !782)
!781 = !DIFile(filename: "blender/source/blender/makesdna/DNA_image_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!782 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ImageUser", file: !781, line: 50, size: 320, elements: !783)
!783 = !{!784, !785, !786, !787, !788, !789, !790, !791, !792, !793, !794, !795, !796, !797}
!784 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !782, file: !781, line: 51, baseType: !509, size: 64)
!785 = !DIDerivedType(tag: DW_TAG_member, name: "framenr", scope: !782, file: !781, line: 53, baseType: !273, size: 32, offset: 64)
!786 = !DIDerivedType(tag: DW_TAG_member, name: "frames", scope: !782, file: !781, line: 54, baseType: !273, size: 32, offset: 96)
!787 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !782, file: !781, line: 55, baseType: !273, size: 32, offset: 128)
!788 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !782, file: !781, line: 55, baseType: !273, size: 32, offset: 160)
!789 = !DIDerivedType(tag: DW_TAG_member, name: "fie_ima", scope: !782, file: !781, line: 56, baseType: !279, size: 8, offset: 192)
!790 = !DIDerivedType(tag: DW_TAG_member, name: "cycl", scope: !782, file: !781, line: 56, baseType: !279, size: 8, offset: 200)
!791 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !782, file: !781, line: 57, baseType: !279, size: 8, offset: 208)
!792 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !782, file: !781, line: 57, baseType: !279, size: 8, offset: 216)
!793 = !DIDerivedType(tag: DW_TAG_member, name: "multi_index", scope: !782, file: !781, line: 59, baseType: !310, size: 16, offset: 224)
!794 = !DIDerivedType(tag: DW_TAG_member, name: "layer", scope: !782, file: !781, line: 59, baseType: !310, size: 16, offset: 240)
!795 = !DIDerivedType(tag: DW_TAG_member, name: "pass", scope: !782, file: !781, line: 59, baseType: !310, size: 16, offset: 256)
!796 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !782, file: !781, line: 61, baseType: !310, size: 16, offset: 272)
!797 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !782, file: !781, line: 63, baseType: !273, size: 32, offset: 288)
!798 = !DIDerivedType(tag: DW_TAG_member, name: "lodlevels", scope: !520, file: !521, line: 293, baseType: !319, size: 128, offset: 11200)
!799 = !DIDerivedType(tag: DW_TAG_member, name: "currentlod", scope: !520, file: !521, line: 294, baseType: !800, size: 64, offset: 11328)
!800 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !801, size: 64)
!801 = !DIDerivedType(tag: DW_TAG_typedef, name: "LodLevel", file: !521, line: 113, baseType: !802)
!802 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "LodLevel", file: !521, line: 108, size: 256, elements: !803)
!803 = !{!804, !806, !807, !808, !809}
!804 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !802, file: !521, line: 109, baseType: !805, size: 64)
!805 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !802, size: 64)
!806 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !802, file: !521, line: 109, baseType: !805, size: 64, offset: 64)
!807 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !802, file: !521, line: 110, baseType: !519, size: 64, offset: 128)
!808 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !802, file: !521, line: 111, baseType: !273, size: 32, offset: 192)
!809 = !DIDerivedType(tag: DW_TAG_member, name: "distance", scope: !802, file: !521, line: 112, baseType: !548, size: 32, offset: 224)
!810 = !DIDerivedType(tag: DW_TAG_member, name: "world", scope: !510, file: !511, line: 1221, baseType: !811, size: 64, offset: 1088)
!811 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !812, size: 64)
!812 = !DICompositeType(tag: DW_TAG_structure_type, name: "World", file: !511, line: 52, flags: DIFlagFwdDecl)
!813 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !510, file: !511, line: 1223, baseType: !509, size: 64, offset: 1152)
!814 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !510, file: !511, line: 1225, baseType: !319, size: 128, offset: 1216)
!815 = !DIDerivedType(tag: DW_TAG_member, name: "basact", scope: !510, file: !511, line: 1226, baseType: !816, size: 64, offset: 1344)
!816 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !817, size: 64)
!817 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Base", file: !511, line: 69, size: 320, elements: !818)
!818 = !{!819, !820, !821, !822, !823, !824, !825, !826}
!819 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !817, file: !511, line: 70, baseType: !816, size: 64)
!820 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !817, file: !511, line: 70, baseType: !816, size: 64, offset: 64)
!821 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !817, file: !511, line: 71, baseType: !7, size: 32, offset: 128)
!822 = !DIDerivedType(tag: DW_TAG_member, name: "selcol", scope: !817, file: !511, line: 71, baseType: !7, size: 32, offset: 160)
!823 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !817, file: !511, line: 72, baseType: !273, size: 32, offset: 192)
!824 = !DIDerivedType(tag: DW_TAG_member, name: "sx", scope: !817, file: !511, line: 73, baseType: !310, size: 16, offset: 224)
!825 = !DIDerivedType(tag: DW_TAG_member, name: "sy", scope: !817, file: !511, line: 73, baseType: !310, size: 16, offset: 240)
!826 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !817, file: !511, line: 74, baseType: !519, size: 64, offset: 256)
!827 = !DIDerivedType(tag: DW_TAG_member, name: "obedit", scope: !510, file: !511, line: 1227, baseType: !519, size: 64, offset: 1408)
!828 = !DIDerivedType(tag: DW_TAG_member, name: "cursor", scope: !510, file: !511, line: 1229, baseType: !583, size: 96, offset: 1472)
!829 = !DIDerivedType(tag: DW_TAG_member, name: "twcent", scope: !510, file: !511, line: 1230, baseType: !583, size: 96, offset: 1568)
!830 = !DIDerivedType(tag: DW_TAG_member, name: "twmin", scope: !510, file: !511, line: 1231, baseType: !583, size: 96, offset: 1664)
!831 = !DIDerivedType(tag: DW_TAG_member, name: "twmax", scope: !510, file: !511, line: 1231, baseType: !583, size: 96, offset: 1760)
!832 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !510, file: !511, line: 1233, baseType: !7, size: 32, offset: 1856)
!833 = !DIDerivedType(tag: DW_TAG_member, name: "layact", scope: !510, file: !511, line: 1234, baseType: !273, size: 32, offset: 1888)
!834 = !DIDerivedType(tag: DW_TAG_member, name: "lay_updated", scope: !510, file: !511, line: 1235, baseType: !7, size: 32, offset: 1920)
!835 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !510, file: !511, line: 1237, baseType: !310, size: 16, offset: 1952)
!836 = !DIDerivedType(tag: DW_TAG_member, name: "use_nodes", scope: !510, file: !511, line: 1239, baseType: !279, size: 8, offset: 1968)
!837 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !510, file: !511, line: 1240, baseType: !838, size: 8, offset: 1976)
!838 = !DICompositeType(tag: DW_TAG_array_type, baseType: !279, size: 8, elements: !839)
!839 = !{!840}
!840 = !DISubrange(count: 1)
!841 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !510, file: !511, line: 1242, baseType: !842, size: 64, offset: 1984)
!842 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !843, size: 64)
!843 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeTree", file: !354, line: 328, size: 3456, elements: !844)
!844 = !{!845, !846, !847, !850, !851, !852, !853, !854, !855, !856, !857, !858, !859, !860, !861, !862, !863, !864, !865, !866, !867, !868, !877, !878, !879, !882, !887, !888, !891, !895, !899, !903, !907, !908, !909, !910}
!845 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !843, file: !354, line: 329, baseType: !457, size: 960)
!846 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !843, file: !354, line: 330, baseType: !515, size: 64, offset: 960)
!847 = !DIDerivedType(tag: DW_TAG_member, name: "typeinfo", scope: !843, file: !354, line: 332, baseType: !848, size: 64, offset: 1024)
!848 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !849, size: 64)
!849 = !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeTreeType", file: !354, line: 332, flags: DIFlagFwdDecl)
!850 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !843, file: !354, line: 333, baseType: !295, size: 512, offset: 1088)
!851 = !DIDerivedType(tag: DW_TAG_member, name: "interface_type", scope: !843, file: !354, line: 335, baseType: !352, size: 64, offset: 1600)
!852 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !843, file: !354, line: 337, baseType: !614, size: 64, offset: 1664)
!853 = !DIDerivedType(tag: DW_TAG_member, name: "view_center", scope: !843, file: !354, line: 338, baseType: !775, size: 64, offset: 1728)
!854 = !DIDerivedType(tag: DW_TAG_member, name: "nodes", scope: !843, file: !354, line: 340, baseType: !319, size: 128, offset: 1792)
!855 = !DIDerivedType(tag: DW_TAG_member, name: "links", scope: !843, file: !354, line: 340, baseType: !319, size: 128, offset: 1920)
!856 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !843, file: !354, line: 342, baseType: !273, size: 32, offset: 2048)
!857 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !843, file: !354, line: 342, baseType: !273, size: 32, offset: 2080)
!858 = !DIDerivedType(tag: DW_TAG_member, name: "cur_index", scope: !843, file: !354, line: 343, baseType: !273, size: 32, offset: 2112)
!859 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !843, file: !354, line: 345, baseType: !273, size: 32, offset: 2144)
!860 = !DIDerivedType(tag: DW_TAG_member, name: "update", scope: !843, file: !354, line: 346, baseType: !273, size: 32, offset: 2176)
!861 = !DIDerivedType(tag: DW_TAG_member, name: "is_updating", scope: !843, file: !354, line: 347, baseType: !310, size: 16, offset: 2208)
!862 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !843, file: !354, line: 348, baseType: !310, size: 16, offset: 2224)
!863 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !843, file: !354, line: 349, baseType: !273, size: 32, offset: 2240)
!864 = !DIDerivedType(tag: DW_TAG_member, name: "nodetype", scope: !843, file: !354, line: 351, baseType: !273, size: 32, offset: 2272)
!865 = !DIDerivedType(tag: DW_TAG_member, name: "edit_quality", scope: !843, file: !354, line: 353, baseType: !310, size: 16, offset: 2304)
!866 = !DIDerivedType(tag: DW_TAG_member, name: "render_quality", scope: !843, file: !354, line: 354, baseType: !310, size: 16, offset: 2320)
!867 = !DIDerivedType(tag: DW_TAG_member, name: "chunksize", scope: !843, file: !354, line: 355, baseType: !273, size: 32, offset: 2336)
!868 = !DIDerivedType(tag: DW_TAG_member, name: "viewer_border", scope: !843, file: !354, line: 357, baseType: !869, size: 128, offset: 2368)
!869 = !DIDerivedType(tag: DW_TAG_typedef, name: "rctf", file: !870, line: 95, baseType: !871)
!870 = !DIFile(filename: "blender/source/blender/makesdna/DNA_vec_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!871 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rctf", file: !870, line: 92, size: 128, elements: !872)
!872 = !{!873, !874, !875, !876}
!873 = !DIDerivedType(tag: DW_TAG_member, name: "xmin", scope: !871, file: !870, line: 93, baseType: !548, size: 32)
!874 = !DIDerivedType(tag: DW_TAG_member, name: "xmax", scope: !871, file: !870, line: 93, baseType: !548, size: 32, offset: 32)
!875 = !DIDerivedType(tag: DW_TAG_member, name: "ymin", scope: !871, file: !870, line: 94, baseType: !548, size: 32, offset: 64)
!876 = !DIDerivedType(tag: DW_TAG_member, name: "ymax", scope: !871, file: !870, line: 94, baseType: !548, size: 32, offset: 96)
!877 = !DIDerivedType(tag: DW_TAG_member, name: "inputs", scope: !843, file: !354, line: 363, baseType: !319, size: 128, offset: 2496)
!878 = !DIDerivedType(tag: DW_TAG_member, name: "outputs", scope: !843, file: !354, line: 363, baseType: !319, size: 128, offset: 2624)
!879 = !DIDerivedType(tag: DW_TAG_member, name: "previews", scope: !843, file: !354, line: 368, baseType: !880, size: 64, offset: 2752)
!880 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !881, size: 64)
!881 = !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeInstanceHash", file: !354, line: 48, flags: DIFlagFwdDecl)
!882 = !DIDerivedType(tag: DW_TAG_member, name: "active_viewer_key", scope: !843, file: !354, line: 372, baseType: !883, size: 32, offset: 2816)
!883 = !DIDerivedType(tag: DW_TAG_typedef, name: "bNodeInstanceKey", file: !354, line: 274, baseType: !884)
!884 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeInstanceKey", file: !354, line: 271, size: 32, elements: !885)
!885 = !{!886}
!886 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !884, file: !354, line: 273, baseType: !7, size: 32)
!887 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !843, file: !354, line: 373, baseType: !273, size: 32, offset: 2848)
!888 = !DIDerivedType(tag: DW_TAG_member, name: "execdata", scope: !843, file: !354, line: 382, baseType: !889, size: 64, offset: 2880)
!889 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !890, size: 64)
!890 = !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeTreeExec", file: !354, line: 46, flags: DIFlagFwdDecl)
!891 = !DIDerivedType(tag: DW_TAG_member, name: "progress", scope: !843, file: !354, line: 385, baseType: !892, size: 64, offset: 2944)
!892 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !893, size: 64)
!893 = !DISubroutineType(types: !894)
!894 = !{null, !272, !548}
!895 = !DIDerivedType(tag: DW_TAG_member, name: "stats_draw", scope: !843, file: !354, line: 386, baseType: !896, size: 64, offset: 3008)
!896 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !897, size: 64)
!897 = !DISubroutineType(types: !898)
!898 = !{null, !272, !644}
!899 = !DIDerivedType(tag: DW_TAG_member, name: "test_break", scope: !843, file: !354, line: 387, baseType: !900, size: 64, offset: 3072)
!900 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !901, size: 64)
!901 = !DISubroutineType(types: !902)
!902 = !{!273, !272}
!903 = !DIDerivedType(tag: DW_TAG_member, name: "update_draw", scope: !843, file: !354, line: 388, baseType: !904, size: 64, offset: 3136)
!904 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !905, size: 64)
!905 = !DISubroutineType(types: !906)
!906 = !{null, !272}
!907 = !DIDerivedType(tag: DW_TAG_member, name: "tbh", scope: !843, file: !354, line: 389, baseType: !272, size: 64, offset: 3200)
!908 = !DIDerivedType(tag: DW_TAG_member, name: "prh", scope: !843, file: !354, line: 389, baseType: !272, size: 64, offset: 3264)
!909 = !DIDerivedType(tag: DW_TAG_member, name: "sdh", scope: !843, file: !354, line: 389, baseType: !272, size: 64, offset: 3328)
!910 = !DIDerivedType(tag: DW_TAG_member, name: "udh", scope: !843, file: !354, line: 389, baseType: !272, size: 64, offset: 3392)
!911 = !DIDerivedType(tag: DW_TAG_member, name: "ed", scope: !510, file: !511, line: 1244, baseType: !912, size: 64, offset: 2048)
!912 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !913, size: 64)
!913 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Editing", file: !914, line: 200, size: 17024, elements: !915)
!914 = !DIFile(filename: "blender/source/blender/makesdna/DNA_sequence_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!915 = !{!916, !917, !918, !919, !1331, !1332, !1333, !1334, !1335, !1336, !1337}
!916 = !DIDerivedType(tag: DW_TAG_member, name: "seqbasep", scope: !913, file: !914, line: 201, baseType: !767, size: 64)
!917 = !DIDerivedType(tag: DW_TAG_member, name: "seqbase", scope: !913, file: !914, line: 202, baseType: !319, size: 128, offset: 64)
!918 = !DIDerivedType(tag: DW_TAG_member, name: "metastack", scope: !913, file: !914, line: 203, baseType: !319, size: 128, offset: 192)
!919 = !DIDerivedType(tag: DW_TAG_member, name: "act_seq", scope: !913, file: !914, line: 206, baseType: !920, size: 64, offset: 320)
!920 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !921, size: 64)
!921 = !DIDerivedType(tag: DW_TAG_typedef, name: "Sequence", file: !914, line: 190, baseType: !922)
!922 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Sequence", file: !914, line: 126, size: 2816, elements: !923)
!923 = !{!924, !926, !927, !928, !929, !930, !931, !932, !933, !934, !935, !936, !937, !938, !939, !940, !941, !942, !943, !944, !945, !946, !947, !948, !949, !1022, !1023, !1024, !1025, !1303, !1306, !1307, !1308, !1309, !1310, !1311, !1312, !1313, !1316, !1317, !1318, !1319, !1320, !1321, !1322, !1323, !1324, !1325, !1326, !1327, !1328, !1330}
!924 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !922, file: !914, line: 127, baseType: !925, size: 64)
!925 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !922, size: 64)
!926 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !922, file: !914, line: 127, baseType: !925, size: 64, offset: 64)
!927 = !DIDerivedType(tag: DW_TAG_member, name: "tmp", scope: !922, file: !914, line: 128, baseType: !272, size: 64, offset: 128)
!928 = !DIDerivedType(tag: DW_TAG_member, name: "lib", scope: !922, file: !914, line: 129, baseType: !272, size: 64, offset: 192)
!929 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !922, file: !914, line: 130, baseType: !295, size: 512, offset: 256)
!930 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !922, file: !914, line: 132, baseType: !273, size: 32, offset: 768)
!931 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !922, file: !914, line: 132, baseType: !273, size: 32, offset: 800)
!932 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !922, file: !914, line: 133, baseType: !273, size: 32, offset: 832)
!933 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !922, file: !914, line: 134, baseType: !273, size: 32, offset: 864)
!934 = !DIDerivedType(tag: DW_TAG_member, name: "startofs", scope: !922, file: !914, line: 134, baseType: !273, size: 32, offset: 896)
!935 = !DIDerivedType(tag: DW_TAG_member, name: "endofs", scope: !922, file: !914, line: 134, baseType: !273, size: 32, offset: 928)
!936 = !DIDerivedType(tag: DW_TAG_member, name: "startstill", scope: !922, file: !914, line: 135, baseType: !273, size: 32, offset: 960)
!937 = !DIDerivedType(tag: DW_TAG_member, name: "endstill", scope: !922, file: !914, line: 135, baseType: !273, size: 32, offset: 992)
!938 = !DIDerivedType(tag: DW_TAG_member, name: "machine", scope: !922, file: !914, line: 136, baseType: !273, size: 32, offset: 1024)
!939 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !922, file: !914, line: 136, baseType: !273, size: 32, offset: 1056)
!940 = !DIDerivedType(tag: DW_TAG_member, name: "startdisp", scope: !922, file: !914, line: 137, baseType: !273, size: 32, offset: 1088)
!941 = !DIDerivedType(tag: DW_TAG_member, name: "enddisp", scope: !922, file: !914, line: 137, baseType: !273, size: 32, offset: 1120)
!942 = !DIDerivedType(tag: DW_TAG_member, name: "sat", scope: !922, file: !914, line: 138, baseType: !548, size: 32, offset: 1152)
!943 = !DIDerivedType(tag: DW_TAG_member, name: "mul", scope: !922, file: !914, line: 139, baseType: !548, size: 32, offset: 1184)
!944 = !DIDerivedType(tag: DW_TAG_member, name: "handsize", scope: !922, file: !914, line: 139, baseType: !548, size: 32, offset: 1216)
!945 = !DIDerivedType(tag: DW_TAG_member, name: "anim_preseek", scope: !922, file: !914, line: 141, baseType: !310, size: 16, offset: 1248)
!946 = !DIDerivedType(tag: DW_TAG_member, name: "streamindex", scope: !922, file: !914, line: 142, baseType: !310, size: 16, offset: 1264)
!947 = !DIDerivedType(tag: DW_TAG_member, name: "multicam_source", scope: !922, file: !914, line: 143, baseType: !273, size: 32, offset: 1280)
!948 = !DIDerivedType(tag: DW_TAG_member, name: "clip_flag", scope: !922, file: !914, line: 144, baseType: !273, size: 32, offset: 1312)
!949 = !DIDerivedType(tag: DW_TAG_member, name: "strip", scope: !922, file: !914, line: 146, baseType: !950, size: 64, offset: 1344)
!950 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !951, size: 64)
!951 = !DIDerivedType(tag: DW_TAG_typedef, name: "Strip", file: !914, line: 114, baseType: !952)
!952 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Strip", file: !914, line: 99, size: 7232, elements: !953)
!953 = !{!954, !956, !957, !958, !959, !960, !961, !972, !976, !990, !999, !1006, !1016}
!954 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !952, file: !914, line: 100, baseType: !955, size: 64)
!955 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !952, size: 64)
!956 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !952, file: !914, line: 100, baseType: !955, size: 64, offset: 64)
!957 = !DIDerivedType(tag: DW_TAG_member, name: "us", scope: !952, file: !914, line: 101, baseType: !273, size: 32, offset: 128)
!958 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !952, file: !914, line: 101, baseType: !273, size: 32, offset: 160)
!959 = !DIDerivedType(tag: DW_TAG_member, name: "startstill", scope: !952, file: !914, line: 102, baseType: !273, size: 32, offset: 192)
!960 = !DIDerivedType(tag: DW_TAG_member, name: "endstill", scope: !952, file: !914, line: 102, baseType: !273, size: 32, offset: 224)
!961 = !DIDerivedType(tag: DW_TAG_member, name: "stripdata", scope: !952, file: !914, line: 103, baseType: !962, size: 64, offset: 256)
!962 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !963, size: 64)
!963 = !DIDerivedType(tag: DW_TAG_typedef, name: "StripElem", file: !914, line: 59, baseType: !964)
!964 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StripElem", file: !914, line: 56, size: 2112, elements: !965)
!965 = !{!966, !970, !971}
!966 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !964, file: !914, line: 57, baseType: !967, size: 2048)
!967 = !DICompositeType(tag: DW_TAG_array_type, baseType: !279, size: 2048, elements: !968)
!968 = !{!969}
!969 = !DISubrange(count: 256)
!970 = !DIDerivedType(tag: DW_TAG_member, name: "orig_width", scope: !964, file: !914, line: 58, baseType: !273, size: 32, offset: 2048)
!971 = !DIDerivedType(tag: DW_TAG_member, name: "orig_height", scope: !964, file: !914, line: 58, baseType: !273, size: 32, offset: 2080)
!972 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !952, file: !914, line: 106, baseType: !973, size: 6144, offset: 320)
!973 = !DICompositeType(tag: DW_TAG_array_type, baseType: !279, size: 6144, elements: !974)
!974 = !{!975}
!975 = !DISubrange(count: 768)
!976 = !DIDerivedType(tag: DW_TAG_member, name: "proxy", scope: !952, file: !914, line: 107, baseType: !977, size: 64, offset: 6464)
!977 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !978, size: 64)
!978 = !DIDerivedType(tag: DW_TAG_typedef, name: "StripProxy", file: !914, line: 97, baseType: !979)
!979 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StripProxy", file: !914, line: 83, size: 8320, elements: !980)
!980 = !{!981, !982, !983, !986, !987, !988, !989}
!981 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !979, file: !914, line: 84, baseType: !973, size: 6144)
!982 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !979, file: !914, line: 87, baseType: !967, size: 2048, offset: 6144)
!983 = !DIDerivedType(tag: DW_TAG_member, name: "anim", scope: !979, file: !914, line: 88, baseType: !984, size: 64, offset: 8192)
!984 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !985, size: 64)
!985 = !DICompositeType(tag: DW_TAG_structure_type, name: "anim", file: !781, line: 41, flags: DIFlagFwdDecl)
!986 = !DIDerivedType(tag: DW_TAG_member, name: "tc", scope: !979, file: !914, line: 90, baseType: !310, size: 16, offset: 8256)
!987 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !979, file: !914, line: 92, baseType: !310, size: 16, offset: 8272)
!988 = !DIDerivedType(tag: DW_TAG_member, name: "build_size_flags", scope: !979, file: !914, line: 93, baseType: !310, size: 16, offset: 8288)
!989 = !DIDerivedType(tag: DW_TAG_member, name: "build_tc_flags", scope: !979, file: !914, line: 95, baseType: !310, size: 16, offset: 8304)
!990 = !DIDerivedType(tag: DW_TAG_member, name: "crop", scope: !952, file: !914, line: 108, baseType: !991, size: 64, offset: 6528)
!991 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !992, size: 64)
!992 = !DIDerivedType(tag: DW_TAG_typedef, name: "StripCrop", file: !914, line: 66, baseType: !993)
!993 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StripCrop", file: !914, line: 61, size: 128, elements: !994)
!994 = !{!995, !996, !997, !998}
!995 = !DIDerivedType(tag: DW_TAG_member, name: "top", scope: !993, file: !914, line: 62, baseType: !273, size: 32)
!996 = !DIDerivedType(tag: DW_TAG_member, name: "bottom", scope: !993, file: !914, line: 63, baseType: !273, size: 32, offset: 32)
!997 = !DIDerivedType(tag: DW_TAG_member, name: "left", scope: !993, file: !914, line: 64, baseType: !273, size: 32, offset: 64)
!998 = !DIDerivedType(tag: DW_TAG_member, name: "right", scope: !993, file: !914, line: 65, baseType: !273, size: 32, offset: 96)
!999 = !DIDerivedType(tag: DW_TAG_member, name: "transform", scope: !952, file: !914, line: 109, baseType: !1000, size: 64, offset: 6592)
!1000 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1001, size: 64)
!1001 = !DIDerivedType(tag: DW_TAG_typedef, name: "StripTransform", file: !914, line: 71, baseType: !1002)
!1002 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StripTransform", file: !914, line: 68, size: 64, elements: !1003)
!1003 = !{!1004, !1005}
!1004 = !DIDerivedType(tag: DW_TAG_member, name: "xofs", scope: !1002, file: !914, line: 69, baseType: !273, size: 32)
!1005 = !DIDerivedType(tag: DW_TAG_member, name: "yofs", scope: !1002, file: !914, line: 70, baseType: !273, size: 32, offset: 32)
!1006 = !DIDerivedType(tag: DW_TAG_member, name: "color_balance", scope: !952, file: !914, line: 110, baseType: !1007, size: 64, offset: 6656)
!1007 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1008, size: 64)
!1008 = !DIDerivedType(tag: DW_TAG_typedef, name: "StripColorBalance", file: !914, line: 81, baseType: !1009)
!1009 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StripColorBalance", file: !914, line: 73, size: 352, elements: !1010)
!1010 = !{!1011, !1012, !1013, !1014, !1015}
!1011 = !DIDerivedType(tag: DW_TAG_member, name: "lift", scope: !1009, file: !914, line: 74, baseType: !583, size: 96)
!1012 = !DIDerivedType(tag: DW_TAG_member, name: "gamma", scope: !1009, file: !914, line: 75, baseType: !583, size: 96, offset: 96)
!1013 = !DIDerivedType(tag: DW_TAG_member, name: "gain", scope: !1009, file: !914, line: 76, baseType: !583, size: 96, offset: 192)
!1014 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1009, file: !914, line: 77, baseType: !273, size: 32, offset: 288)
!1015 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1009, file: !914, line: 78, baseType: !273, size: 32, offset: 320)
!1016 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace_settings", scope: !952, file: !914, line: 113, baseType: !1017, size: 512, offset: 6720)
!1017 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorManagedColorspaceSettings", file: !1018, line: 182, baseType: !1019)
!1018 = !DIFile(filename: "blender/source/blender/makesdna/DNA_color_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1019 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorManagedColorspaceSettings", file: !1018, line: 180, size: 512, elements: !1020)
!1020 = !{!1021}
!1021 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1019, file: !1018, line: 181, baseType: !295, size: 512)
!1022 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !922, file: !914, line: 148, baseType: !540, size: 64, offset: 1408)
!1023 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !922, file: !914, line: 151, baseType: !509, size: 64, offset: 1472)
!1024 = !DIDerivedType(tag: DW_TAG_member, name: "scene_camera", scope: !922, file: !914, line: 152, baseType: !519, size: 64, offset: 1536)
!1025 = !DIDerivedType(tag: DW_TAG_member, name: "clip", scope: !922, file: !914, line: 153, baseType: !1026, size: 64, offset: 1600)
!1026 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1027, size: 64)
!1027 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieClip", file: !1028, line: 64, size: 19136, elements: !1029)
!1028 = !DIFile(filename: "blender/source/blender/makesdna/DNA_movieclip_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1029 = !{!1030, !1031, !1032, !1033, !1034, !1035, !1037, !1038, !1039, !1040, !1043, !1044, !1289, !1290, !1298, !1299, !1300, !1301, !1302}
!1030 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1027, file: !1028, line: 65, baseType: !457, size: 960)
!1031 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !1027, file: !1028, line: 66, baseType: !515, size: 64, offset: 960)
!1032 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1027, file: !1028, line: 68, baseType: !475, size: 8192, offset: 1024)
!1033 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !1027, file: !1028, line: 70, baseType: !273, size: 32, offset: 9216)
!1034 = !DIDerivedType(tag: DW_TAG_member, name: "lastframe", scope: !1027, file: !1028, line: 71, baseType: !273, size: 32, offset: 9248)
!1035 = !DIDerivedType(tag: DW_TAG_member, name: "lastsize", scope: !1027, file: !1028, line: 72, baseType: !1036, size: 64, offset: 9280)
!1036 = !DICompositeType(tag: DW_TAG_array_type, baseType: !273, size: 64, elements: !776)
!1037 = !DIDerivedType(tag: DW_TAG_member, name: "aspx", scope: !1027, file: !1028, line: 74, baseType: !548, size: 32, offset: 9344)
!1038 = !DIDerivedType(tag: DW_TAG_member, name: "aspy", scope: !1027, file: !1028, line: 74, baseType: !548, size: 32, offset: 9376)
!1039 = !DIDerivedType(tag: DW_TAG_member, name: "anim", scope: !1027, file: !1028, line: 76, baseType: !984, size: 64, offset: 9408)
!1040 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !1027, file: !1028, line: 77, baseType: !1041, size: 64, offset: 9472)
!1041 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1042, size: 64)
!1042 = !DICompositeType(tag: DW_TAG_structure_type, name: "MovieClipCache", file: !1028, line: 77, flags: DIFlagFwdDecl)
!1043 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !1027, file: !1028, line: 78, baseType: !614, size: 64, offset: 9536)
!1044 = !DIDerivedType(tag: DW_TAG_member, name: "tracking", scope: !1027, file: !1028, line: 80, baseType: !1045, size: 2624, offset: 9600)
!1045 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTracking", file: !1046, line: 340, size: 2624, elements: !1047)
!1046 = !DIFile(filename: "blender/source/blender/makesdna/DNA_tracking_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1047 = !{!1048, !1076, !1094, !1095, !1096, !1111, !1169, !1170, !1269, !1270, !1271, !1272, !1278}
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "settings", scope: !1045, file: !1046, line: 341, baseType: !1049, size: 576)
!1049 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingSettings", file: !1046, line: 251, baseType: !1050)
!1050 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingSettings", file: !1046, line: 207, size: 576, elements: !1051)
!1051 = !{!1052, !1053, !1054, !1055, !1056, !1057, !1058, !1059, !1060, !1061, !1062, !1063, !1064, !1065, !1066, !1067, !1068, !1069, !1070, !1071, !1072, !1073, !1074, !1075}
!1052 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1050, file: !1046, line: 208, baseType: !273, size: 32)
!1053 = !DIDerivedType(tag: DW_TAG_member, name: "default_motion_model", scope: !1050, file: !1046, line: 211, baseType: !310, size: 16, offset: 32)
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "default_algorithm_flag", scope: !1050, file: !1046, line: 212, baseType: !310, size: 16, offset: 48)
!1055 = !DIDerivedType(tag: DW_TAG_member, name: "default_minimum_correlation", scope: !1050, file: !1046, line: 213, baseType: !548, size: 32, offset: 64)
!1056 = !DIDerivedType(tag: DW_TAG_member, name: "default_pattern_size", scope: !1050, file: !1046, line: 214, baseType: !310, size: 16, offset: 96)
!1057 = !DIDerivedType(tag: DW_TAG_member, name: "default_search_size", scope: !1050, file: !1046, line: 215, baseType: !310, size: 16, offset: 112)
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "default_frames_limit", scope: !1050, file: !1046, line: 216, baseType: !310, size: 16, offset: 128)
!1059 = !DIDerivedType(tag: DW_TAG_member, name: "default_margin", scope: !1050, file: !1046, line: 217, baseType: !310, size: 16, offset: 144)
!1060 = !DIDerivedType(tag: DW_TAG_member, name: "default_pattern_match", scope: !1050, file: !1046, line: 218, baseType: !310, size: 16, offset: 160)
!1061 = !DIDerivedType(tag: DW_TAG_member, name: "default_flag", scope: !1050, file: !1046, line: 219, baseType: !310, size: 16, offset: 176)
!1062 = !DIDerivedType(tag: DW_TAG_member, name: "default_weight", scope: !1050, file: !1046, line: 220, baseType: !548, size: 32, offset: 192)
!1063 = !DIDerivedType(tag: DW_TAG_member, name: "motion_flag", scope: !1050, file: !1046, line: 222, baseType: !310, size: 16, offset: 224)
!1064 = !DIDerivedType(tag: DW_TAG_member, name: "speed", scope: !1050, file: !1046, line: 225, baseType: !310, size: 16, offset: 240)
!1065 = !DIDerivedType(tag: DW_TAG_member, name: "keyframe1", scope: !1050, file: !1046, line: 228, baseType: !273, size: 32, offset: 256)
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "keyframe2", scope: !1050, file: !1046, line: 229, baseType: !273, size: 32, offset: 288)
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "reconstruction_flag", scope: !1050, file: !1046, line: 233, baseType: !273, size: 32, offset: 320)
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "refine_camera_intrinsics", scope: !1050, file: !1046, line: 236, baseType: !310, size: 16, offset: 352)
!1069 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1050, file: !1046, line: 236, baseType: !310, size: 16, offset: 368)
!1070 = !DIDerivedType(tag: DW_TAG_member, name: "dist", scope: !1050, file: !1046, line: 241, baseType: !548, size: 32, offset: 384)
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "clean_frames", scope: !1050, file: !1046, line: 244, baseType: !273, size: 32, offset: 416)
!1072 = !DIDerivedType(tag: DW_TAG_member, name: "clean_action", scope: !1050, file: !1046, line: 244, baseType: !273, size: 32, offset: 448)
!1073 = !DIDerivedType(tag: DW_TAG_member, name: "clean_error", scope: !1050, file: !1046, line: 245, baseType: !548, size: 32, offset: 480)
!1074 = !DIDerivedType(tag: DW_TAG_member, name: "object_distance", scope: !1050, file: !1046, line: 248, baseType: !548, size: 32, offset: 512)
!1075 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !1050, file: !1046, line: 250, baseType: !273, size: 32, offset: 544)
!1076 = !DIDerivedType(tag: DW_TAG_member, name: "camera", scope: !1045, file: !1046, line: 342, baseType: !1077, size: 448, offset: 576)
!1077 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingCamera", file: !1046, line: 79, baseType: !1078)
!1078 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingCamera", file: !1046, line: 61, size: 448, elements: !1079)
!1079 = !{!1080, !1081, !1082, !1083, !1084, !1085, !1086, !1087, !1088, !1089, !1090, !1091, !1092, !1093}
!1080 = !DIDerivedType(tag: DW_TAG_member, name: "intrinsics", scope: !1078, file: !1046, line: 62, baseType: !272, size: 64)
!1081 = !DIDerivedType(tag: DW_TAG_member, name: "distortion_model", scope: !1078, file: !1046, line: 64, baseType: !310, size: 16, offset: 64)
!1082 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1078, file: !1046, line: 65, baseType: !310, size: 16, offset: 80)
!1083 = !DIDerivedType(tag: DW_TAG_member, name: "sensor_width", scope: !1078, file: !1046, line: 67, baseType: !548, size: 32, offset: 96)
!1084 = !DIDerivedType(tag: DW_TAG_member, name: "pixel_aspect", scope: !1078, file: !1046, line: 68, baseType: !548, size: 32, offset: 128)
!1085 = !DIDerivedType(tag: DW_TAG_member, name: "focal", scope: !1078, file: !1046, line: 69, baseType: !548, size: 32, offset: 160)
!1086 = !DIDerivedType(tag: DW_TAG_member, name: "units", scope: !1078, file: !1046, line: 70, baseType: !310, size: 16, offset: 192)
!1087 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1078, file: !1046, line: 71, baseType: !310, size: 16, offset: 208)
!1088 = !DIDerivedType(tag: DW_TAG_member, name: "principal", scope: !1078, file: !1046, line: 72, baseType: !775, size: 64, offset: 224)
!1089 = !DIDerivedType(tag: DW_TAG_member, name: "k1", scope: !1078, file: !1046, line: 75, baseType: !548, size: 32, offset: 288)
!1090 = !DIDerivedType(tag: DW_TAG_member, name: "k2", scope: !1078, file: !1046, line: 75, baseType: !548, size: 32, offset: 320)
!1091 = !DIDerivedType(tag: DW_TAG_member, name: "k3", scope: !1078, file: !1046, line: 75, baseType: !548, size: 32, offset: 352)
!1092 = !DIDerivedType(tag: DW_TAG_member, name: "division_k1", scope: !1078, file: !1046, line: 78, baseType: !548, size: 32, offset: 384)
!1093 = !DIDerivedType(tag: DW_TAG_member, name: "division_k2", scope: !1078, file: !1046, line: 78, baseType: !548, size: 32, offset: 416)
!1094 = !DIDerivedType(tag: DW_TAG_member, name: "tracks", scope: !1045, file: !1046, line: 343, baseType: !319, size: 128, offset: 1024)
!1095 = !DIDerivedType(tag: DW_TAG_member, name: "plane_tracks", scope: !1045, file: !1046, line: 344, baseType: !319, size: 128, offset: 1152)
!1096 = !DIDerivedType(tag: DW_TAG_member, name: "reconstruction", scope: !1045, file: !1046, line: 345, baseType: !1097, size: 192, offset: 1280)
!1097 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingReconstruction", file: !1046, line: 278, baseType: !1098)
!1098 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingReconstruction", file: !1046, line: 270, size: 192, elements: !1099)
!1099 = !{!1100, !1101, !1102, !1103, !1104}
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1098, file: !1046, line: 271, baseType: !273, size: 32)
!1101 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !1098, file: !1046, line: 273, baseType: !548, size: 32, offset: 32)
!1102 = !DIDerivedType(tag: DW_TAG_member, name: "last_camera", scope: !1098, file: !1046, line: 275, baseType: !273, size: 32, offset: 64)
!1103 = !DIDerivedType(tag: DW_TAG_member, name: "camnr", scope: !1098, file: !1046, line: 276, baseType: !273, size: 32, offset: 96)
!1104 = !DIDerivedType(tag: DW_TAG_member, name: "cameras", scope: !1098, file: !1046, line: 277, baseType: !1105, size: 64, offset: 128)
!1105 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1106, size: 64)
!1106 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieReconstructedCamera", file: !1046, line: 55, size: 576, elements: !1107)
!1107 = !{!1108, !1109, !1110}
!1108 = !DIDerivedType(tag: DW_TAG_member, name: "framenr", scope: !1106, file: !1046, line: 56, baseType: !273, size: 32)
!1109 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !1106, file: !1046, line: 57, baseType: !548, size: 32, offset: 32)
!1110 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !1106, file: !1046, line: 58, baseType: !665, size: 512, offset: 64)
!1111 = !DIDerivedType(tag: DW_TAG_member, name: "stabilization", scope: !1045, file: !1046, line: 346, baseType: !1112, size: 384, offset: 1472)
!1112 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingStabilization", file: !1046, line: 268, baseType: !1113)
!1113 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingStabilization", file: !1046, line: 253, size: 384, elements: !1114)
!1114 = !{!1115, !1116, !1117, !1118, !1119, !1163, !1164, !1165, !1166, !1167, !1168}
!1115 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1113, file: !1046, line: 254, baseType: !273, size: 32)
!1116 = !DIDerivedType(tag: DW_TAG_member, name: "tot_track", scope: !1113, file: !1046, line: 255, baseType: !273, size: 32, offset: 32)
!1117 = !DIDerivedType(tag: DW_TAG_member, name: "act_track", scope: !1113, file: !1046, line: 255, baseType: !273, size: 32, offset: 64)
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "maxscale", scope: !1113, file: !1046, line: 258, baseType: !548, size: 32, offset: 96)
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "rot_track", scope: !1113, file: !1046, line: 259, baseType: !1120, size: 64, offset: 128)
!1120 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1121, size: 64)
!1121 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingTrack", file: !1046, line: 164, baseType: !1122)
!1122 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingTrack", file: !1046, line: 108, size: 1664, elements: !1123)
!1123 = !{!1124, !1126, !1127, !1128, !1129, !1130, !1131, !1132, !1133, !1134, !1135, !1148, !1149, !1150, !1151, !1152, !1153, !1154, !1155, !1156, !1157, !1158, !1159, !1160, !1161, !1162}
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1122, file: !1046, line: 109, baseType: !1125, size: 64)
!1125 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1122, size: 64)
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1122, file: !1046, line: 109, baseType: !1125, size: 64, offset: 64)
!1127 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1122, file: !1046, line: 111, baseType: !295, size: 512, offset: 128)
!1128 = !DIDerivedType(tag: DW_TAG_member, name: "pat_min", scope: !1122, file: !1046, line: 119, baseType: !775, size: 64, offset: 640)
!1129 = !DIDerivedType(tag: DW_TAG_member, name: "pat_max", scope: !1122, file: !1046, line: 119, baseType: !775, size: 64, offset: 704)
!1130 = !DIDerivedType(tag: DW_TAG_member, name: "search_min", scope: !1122, file: !1046, line: 125, baseType: !775, size: 64, offset: 768)
!1131 = !DIDerivedType(tag: DW_TAG_member, name: "search_max", scope: !1122, file: !1046, line: 125, baseType: !775, size: 64, offset: 832)
!1132 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1122, file: !1046, line: 127, baseType: !775, size: 64, offset: 896)
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "markersnr", scope: !1122, file: !1046, line: 130, baseType: !273, size: 32, offset: 960)
!1134 = !DIDerivedType(tag: DW_TAG_member, name: "last_marker", scope: !1122, file: !1046, line: 131, baseType: !273, size: 32, offset: 992)
!1135 = !DIDerivedType(tag: DW_TAG_member, name: "markers", scope: !1122, file: !1046, line: 132, baseType: !1136, size: 64, offset: 1024)
!1136 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1137, size: 64)
!1137 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingMarker", file: !1046, line: 106, baseType: !1138)
!1138 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingMarker", file: !1046, line: 81, size: 512, elements: !1139)
!1139 = !{!1140, !1141, !1144, !1145, !1146, !1147}
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !1138, file: !1046, line: 82, baseType: !775, size: 64)
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "pattern_corners", scope: !1138, file: !1046, line: 97, baseType: !1142, size: 256, offset: 64)
!1142 = !DICompositeType(tag: DW_TAG_array_type, baseType: !548, size: 256, elements: !1143)
!1143 = !{!658, !777}
!1144 = !DIDerivedType(tag: DW_TAG_member, name: "search_min", scope: !1138, file: !1046, line: 102, baseType: !775, size: 64, offset: 320)
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "search_max", scope: !1138, file: !1046, line: 102, baseType: !775, size: 64, offset: 384)
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "framenr", scope: !1138, file: !1046, line: 104, baseType: !273, size: 32, offset: 448)
!1147 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1138, file: !1046, line: 105, baseType: !273, size: 32, offset: 480)
!1148 = !DIDerivedType(tag: DW_TAG_member, name: "bundle_pos", scope: !1122, file: !1046, line: 135, baseType: !583, size: 96, offset: 1088)
!1149 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !1122, file: !1046, line: 136, baseType: !548, size: 32, offset: 1184)
!1150 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1122, file: !1046, line: 139, baseType: !273, size: 32, offset: 1216)
!1151 = !DIDerivedType(tag: DW_TAG_member, name: "pat_flag", scope: !1122, file: !1046, line: 139, baseType: !273, size: 32, offset: 1248)
!1152 = !DIDerivedType(tag: DW_TAG_member, name: "search_flag", scope: !1122, file: !1046, line: 139, baseType: !273, size: 32, offset: 1280)
!1153 = !DIDerivedType(tag: DW_TAG_member, name: "color", scope: !1122, file: !1046, line: 140, baseType: !583, size: 96, offset: 1312)
!1154 = !DIDerivedType(tag: DW_TAG_member, name: "frames_limit", scope: !1122, file: !1046, line: 143, baseType: !310, size: 16, offset: 1408)
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "margin", scope: !1122, file: !1046, line: 144, baseType: !310, size: 16, offset: 1424)
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "pattern_match", scope: !1122, file: !1046, line: 145, baseType: !310, size: 16, offset: 1440)
!1157 = !DIDerivedType(tag: DW_TAG_member, name: "motion_model", scope: !1122, file: !1046, line: 148, baseType: !310, size: 16, offset: 1456)
!1158 = !DIDerivedType(tag: DW_TAG_member, name: "algorithm_flag", scope: !1122, file: !1046, line: 149, baseType: !273, size: 32, offset: 1472)
!1159 = !DIDerivedType(tag: DW_TAG_member, name: "minimum_correlation", scope: !1122, file: !1046, line: 150, baseType: !548, size: 32, offset: 1504)
!1160 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !1122, file: !1046, line: 152, baseType: !614, size: 64, offset: 1536)
!1161 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !1122, file: !1046, line: 163, baseType: !548, size: 32, offset: 1600)
!1162 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1122, file: !1046, line: 163, baseType: !548, size: 32, offset: 1632)
!1163 = !DIDerivedType(tag: DW_TAG_member, name: "locinf", scope: !1113, file: !1046, line: 261, baseType: !548, size: 32, offset: 192)
!1164 = !DIDerivedType(tag: DW_TAG_member, name: "scaleinf", scope: !1113, file: !1046, line: 261, baseType: !548, size: 32, offset: 224)
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "rotinf", scope: !1113, file: !1046, line: 261, baseType: !548, size: 32, offset: 256)
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !1113, file: !1046, line: 263, baseType: !273, size: 32, offset: 288)
!1167 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !1113, file: !1046, line: 266, baseType: !273, size: 32, offset: 320)
!1168 = !DIDerivedType(tag: DW_TAG_member, name: "scale", scope: !1113, file: !1046, line: 267, baseType: !548, size: 32, offset: 352)
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "act_track", scope: !1045, file: !1046, line: 347, baseType: !1120, size: 64, offset: 1856)
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "act_plane_track", scope: !1045, file: !1046, line: 348, baseType: !1171, size: 64, offset: 1920)
!1171 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1172, size: 64)
!1172 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingPlaneTrack", file: !1046, line: 205, baseType: !1173)
!1173 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingPlaneTrack", file: !1046, line: 186, size: 1024, elements: !1174)
!1174 = !{!1175, !1177, !1178, !1179, !1181, !1182, !1183, !1191, !1192, !1193, !1267, !1268}
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1173, file: !1046, line: 187, baseType: !1176, size: 64)
!1176 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1173, size: 64)
!1177 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1173, file: !1046, line: 187, baseType: !1176, size: 64, offset: 64)
!1178 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1173, file: !1046, line: 189, baseType: !295, size: 512, offset: 128)
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "point_tracks", scope: !1173, file: !1046, line: 191, baseType: !1180, size: 64, offset: 640)
!1180 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1120, size: 64)
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "point_tracksnr", scope: !1173, file: !1046, line: 193, baseType: !273, size: 32, offset: 704)
!1182 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1173, file: !1046, line: 193, baseType: !273, size: 32, offset: 736)
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "markers", scope: !1173, file: !1046, line: 195, baseType: !1184, size: 64, offset: 768)
!1184 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1185, size: 64)
!1185 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingPlaneMarker", file: !1046, line: 184, baseType: !1186)
!1186 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingPlaneMarker", file: !1046, line: 166, size: 320, elements: !1187)
!1187 = !{!1188, !1189, !1190}
!1188 = !DIDerivedType(tag: DW_TAG_member, name: "corners", scope: !1186, file: !1046, line: 180, baseType: !1142, size: 256)
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "framenr", scope: !1186, file: !1046, line: 182, baseType: !273, size: 32, offset: 256)
!1190 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1186, file: !1046, line: 183, baseType: !273, size: 32, offset: 288)
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "markersnr", scope: !1173, file: !1046, line: 196, baseType: !273, size: 32, offset: 832)
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1173, file: !1046, line: 198, baseType: !273, size: 32, offset: 864)
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "image", scope: !1173, file: !1046, line: 200, baseType: !1194, size: 64, offset: 896)
!1194 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1195, size: 64)
!1195 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Image", file: !781, line: 77, size: 15424, elements: !1196)
!1196 = !{!1197, !1198, !1199, !1202, !1205, !1206, !1209, !1212, !1213, !1214, !1215, !1216, !1217, !1218, !1219, !1220, !1221, !1222, !1223, !1224, !1225, !1226, !1228, !1229, !1243, !1244, !1245, !1246, !1247, !1248, !1249, !1250, !1251, !1252, !1253, !1254, !1255, !1256, !1257, !1261}
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1195, file: !781, line: 78, baseType: !457, size: 960)
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1195, file: !781, line: 80, baseType: !475, size: 8192, offset: 960)
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !1195, file: !781, line: 82, baseType: !1200, size: 64, offset: 9152)
!1200 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1201, size: 64)
!1201 = !DICompositeType(tag: DW_TAG_structure_type, name: "MovieCache", file: !781, line: 43, flags: DIFlagFwdDecl)
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "gputexture", scope: !1195, file: !781, line: 83, baseType: !1203, size: 64, offset: 9216)
!1203 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1204, size: 64)
!1204 = !DICompositeType(tag: DW_TAG_structure_type, name: "GPUTexture", file: !301, line: 46, flags: DIFlagFwdDecl)
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "anim", scope: !1195, file: !781, line: 86, baseType: !984, size: 64, offset: 9280)
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "rr", scope: !1195, file: !781, line: 87, baseType: !1207, size: 64, offset: 9344)
!1207 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1208, size: 64)
!1208 = !DICompositeType(tag: DW_TAG_structure_type, name: "RenderResult", file: !781, line: 44, flags: DIFlagFwdDecl)
!1209 = !DIDerivedType(tag: DW_TAG_member, name: "renders", scope: !1195, file: !781, line: 89, baseType: !1210, size: 512, offset: 9408)
!1210 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1207, size: 512, elements: !1211)
!1211 = !{!550}
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "render_slot", scope: !1195, file: !781, line: 90, baseType: !310, size: 16, offset: 9920)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "last_render_slot", scope: !1195, file: !781, line: 90, baseType: !310, size: 16, offset: 9936)
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !1195, file: !781, line: 92, baseType: !310, size: 16, offset: 9952)
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1195, file: !781, line: 92, baseType: !310, size: 16, offset: 9968)
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !1195, file: !781, line: 93, baseType: !310, size: 16, offset: 9984)
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1195, file: !781, line: 93, baseType: !310, size: 16, offset: 10000)
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "lastframe", scope: !1195, file: !781, line: 94, baseType: !273, size: 32, offset: 10016)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "tpageflag", scope: !1195, file: !781, line: 97, baseType: !310, size: 16, offset: 10048)
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "totbind", scope: !1195, file: !781, line: 97, baseType: !310, size: 16, offset: 10064)
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "xrep", scope: !1195, file: !781, line: 98, baseType: !310, size: 16, offset: 10080)
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "yrep", scope: !1195, file: !781, line: 98, baseType: !310, size: 16, offset: 10096)
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "twsta", scope: !1195, file: !781, line: 99, baseType: !310, size: 16, offset: 10112)
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "twend", scope: !1195, file: !781, line: 99, baseType: !310, size: 16, offset: 10128)
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "bindcode", scope: !1195, file: !781, line: 100, baseType: !7, size: 32, offset: 10144)
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "repbind", scope: !1195, file: !781, line: 101, baseType: !1227, size: 64, offset: 10176)
!1227 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "packedfile", scope: !1195, file: !781, line: 103, baseType: !481, size: 64, offset: 10240)
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "preview", scope: !1195, file: !781, line: 104, baseType: !1230, size: 64, offset: 10304)
!1230 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1231, size: 64)
!1231 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PreviewImage", file: !301, line: 159, size: 448, elements: !1232)
!1232 = !{!1233, !1235, !1236, !1238, !1239, !1241}
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !1231, file: !301, line: 161, baseType: !1234, size: 64)
!1234 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 64, elements: !776)
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "h", scope: !1231, file: !301, line: 162, baseType: !1234, size: 64, offset: 64)
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "changed", scope: !1231, file: !301, line: 163, baseType: !1237, size: 32, offset: 128)
!1237 = !DICompositeType(tag: DW_TAG_array_type, baseType: !310, size: 32, elements: !776)
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "changed_timestamp", scope: !1231, file: !301, line: 164, baseType: !1237, size: 32, offset: 160)
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "rect", scope: !1231, file: !301, line: 165, baseType: !1240, size: 128, offset: 192)
!1240 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1227, size: 128, elements: !776)
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "gputexture", scope: !1231, file: !301, line: 166, baseType: !1242, size: 128, offset: 320)
!1242 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1203, size: 128, elements: !776)
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "lastupdate", scope: !1195, file: !781, line: 107, baseType: !548, size: 32, offset: 10368)
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "lastused", scope: !1195, file: !781, line: 108, baseType: !273, size: 32, offset: 10400)
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "animspeed", scope: !1195, file: !781, line: 109, baseType: !310, size: 16, offset: 10432)
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1195, file: !781, line: 110, baseType: !310, size: 16, offset: 10448)
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "gen_x", scope: !1195, file: !781, line: 113, baseType: !273, size: 32, offset: 10464)
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "gen_y", scope: !1195, file: !781, line: 113, baseType: !273, size: 32, offset: 10496)
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "gen_type", scope: !1195, file: !781, line: 114, baseType: !279, size: 8, offset: 10528)
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "gen_flag", scope: !1195, file: !781, line: 114, baseType: !279, size: 8, offset: 10536)
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "gen_depth", scope: !1195, file: !781, line: 115, baseType: !310, size: 16, offset: 10544)
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "gen_color", scope: !1195, file: !781, line: 116, baseType: !656, size: 128, offset: 10560)
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "aspx", scope: !1195, file: !781, line: 119, baseType: !548, size: 32, offset: 10688)
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "aspy", scope: !1195, file: !781, line: 119, baseType: !548, size: 32, offset: 10720)
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace_settings", scope: !1195, file: !781, line: 122, baseType: !1017, size: 512, offset: 10752)
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "alpha_mode", scope: !1195, file: !781, line: 123, baseType: !279, size: 8, offset: 11264)
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1195, file: !781, line: 125, baseType: !1258, size: 56, offset: 11272)
!1258 = !DICompositeType(tag: DW_TAG_array_type, baseType: !279, size: 56, elements: !1259)
!1259 = !{!1260}
!1260 = !DISubrange(count: 7)
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "render_slots", scope: !1195, file: !781, line: 126, baseType: !1262, size: 4096, offset: 11328)
!1262 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1263, size: 4096, elements: !1211)
!1263 = !DIDerivedType(tag: DW_TAG_typedef, name: "RenderSlot", file: !781, line: 69, baseType: !1264)
!1264 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RenderSlot", file: !781, line: 67, size: 512, elements: !1265)
!1265 = !{!1266}
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1264, file: !781, line: 68, baseType: !295, size: 512)
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "image_opacity", scope: !1173, file: !1046, line: 201, baseType: !548, size: 32, offset: 960)
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "last_marker", scope: !1173, file: !1046, line: 204, baseType: !273, size: 32, offset: 992)
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "objects", scope: !1045, file: !1046, line: 350, baseType: !319, size: 128, offset: 1984)
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "objectnr", scope: !1045, file: !1046, line: 351, baseType: !273, size: 32, offset: 2112)
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "tot_object", scope: !1045, file: !1046, line: 351, baseType: !273, size: 32, offset: 2144)
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !1045, file: !1046, line: 353, baseType: !1273, size: 64, offset: 2176)
!1273 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1274, size: 64)
!1274 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingStats", file: !1046, line: 297, baseType: !1275)
!1275 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingStats", file: !1046, line: 295, size: 2048, elements: !1276)
!1276 = !{!1277}
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "message", scope: !1275, file: !1046, line: 296, baseType: !967, size: 2048)
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "dopesheet", scope: !1045, file: !1046, line: 355, baseType: !1279, size: 384, offset: 2240)
!1279 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingDopesheet", file: !1046, line: 338, baseType: !1280)
!1280 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingDopesheet", file: !1046, line: 322, size: 384, elements: !1281)
!1281 = !{!1282, !1283, !1284, !1285, !1286, !1287, !1288}
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !1280, file: !1046, line: 323, baseType: !273, size: 32)
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "sort_method", scope: !1280, file: !1046, line: 325, baseType: !310, size: 16, offset: 32)
!1284 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1280, file: !1046, line: 326, baseType: !310, size: 16, offset: 48)
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "coverage_segments", scope: !1280, file: !1046, line: 331, baseType: !319, size: 128, offset: 64)
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1280, file: !1046, line: 334, baseType: !319, size: 128, offset: 192)
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "tot_channel", scope: !1280, file: !1046, line: 335, baseType: !273, size: 32, offset: 320)
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1280, file: !1046, line: 337, baseType: !273, size: 32, offset: 352)
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "tracking_context", scope: !1027, file: !1028, line: 81, baseType: !272, size: 64, offset: 12224)
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "proxy", scope: !1027, file: !1028, line: 85, baseType: !1291, size: 6208, offset: 12288)
!1291 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieClipProxy", file: !1028, line: 55, size: 6208, elements: !1292)
!1292 = !{!1293, !1294, !1295, !1296, !1297}
!1293 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !1291, file: !1028, line: 56, baseType: !973, size: 6144)
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "tc", scope: !1291, file: !1028, line: 58, baseType: !310, size: 16, offset: 6144)
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !1291, file: !1028, line: 59, baseType: !310, size: 16, offset: 6160)
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "build_size_flag", scope: !1291, file: !1028, line: 60, baseType: !310, size: 16, offset: 6176)
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "build_tc_flag", scope: !1291, file: !1028, line: 61, baseType: !310, size: 16, offset: 6192)
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1027, file: !1028, line: 86, baseType: !273, size: 32, offset: 18496)
!1299 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !1027, file: !1028, line: 88, baseType: !273, size: 32, offset: 18528)
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame", scope: !1027, file: !1028, line: 90, baseType: !273, size: 32, offset: 18560)
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "frame_offset", scope: !1027, file: !1028, line: 94, baseType: !273, size: 32, offset: 18592)
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace_settings", scope: !1027, file: !1028, line: 100, baseType: !1017, size: 512, offset: 18624)
!1303 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !922, file: !914, line: 154, baseType: !1304, size: 64, offset: 1664)
!1304 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1305, size: 64)
!1305 = !DICompositeType(tag: DW_TAG_structure_type, name: "Mask", file: !914, line: 154, flags: DIFlagFwdDecl)
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "anim", scope: !922, file: !914, line: 156, baseType: !984, size: 64, offset: 1728)
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "effect_fader", scope: !922, file: !914, line: 158, baseType: !548, size: 32, offset: 1792)
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "speed_fader", scope: !922, file: !914, line: 159, baseType: !548, size: 32, offset: 1824)
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "seq1", scope: !922, file: !914, line: 162, baseType: !925, size: 64, offset: 1856)
!1310 = !DIDerivedType(tag: DW_TAG_member, name: "seq2", scope: !922, file: !914, line: 162, baseType: !925, size: 64, offset: 1920)
!1311 = !DIDerivedType(tag: DW_TAG_member, name: "seq3", scope: !922, file: !914, line: 162, baseType: !925, size: 64, offset: 1984)
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "seqbase", scope: !922, file: !914, line: 164, baseType: !319, size: 128, offset: 2048)
!1313 = !DIDerivedType(tag: DW_TAG_member, name: "sound", scope: !922, file: !914, line: 166, baseType: !1314, size: 64, offset: 2176)
!1314 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1315, size: 64)
!1315 = !DICompositeType(tag: DW_TAG_structure_type, name: "bSound", file: !914, line: 51, flags: DIFlagFwdDecl)
!1316 = !DIDerivedType(tag: DW_TAG_member, name: "scene_sound", scope: !922, file: !914, line: 167, baseType: !272, size: 64, offset: 2240)
!1317 = !DIDerivedType(tag: DW_TAG_member, name: "volume", scope: !922, file: !914, line: 168, baseType: !548, size: 32, offset: 2304)
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "pitch", scope: !922, file: !914, line: 170, baseType: !548, size: 32, offset: 2336)
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "pan", scope: !922, file: !914, line: 170, baseType: !548, size: 32, offset: 2368)
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "strobe", scope: !922, file: !914, line: 171, baseType: !548, size: 32, offset: 2400)
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "effectdata", scope: !922, file: !914, line: 173, baseType: !272, size: 64, offset: 2432)
!1322 = !DIDerivedType(tag: DW_TAG_member, name: "anim_startofs", scope: !922, file: !914, line: 175, baseType: !273, size: 32, offset: 2496)
!1323 = !DIDerivedType(tag: DW_TAG_member, name: "anim_endofs", scope: !922, file: !914, line: 176, baseType: !273, size: 32, offset: 2528)
!1324 = !DIDerivedType(tag: DW_TAG_member, name: "blend_mode", scope: !922, file: !914, line: 179, baseType: !273, size: 32, offset: 2560)
!1325 = !DIDerivedType(tag: DW_TAG_member, name: "blend_opacity", scope: !922, file: !914, line: 180, baseType: !548, size: 32, offset: 2592)
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !922, file: !914, line: 183, baseType: !273, size: 32, offset: 2624)
!1327 = !DIDerivedType(tag: DW_TAG_member, name: "alpha_mode", scope: !922, file: !914, line: 185, baseType: !279, size: 8, offset: 2656)
!1328 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !922, file: !914, line: 186, baseType: !1329, size: 24, offset: 2664)
!1329 = !DICompositeType(tag: DW_TAG_array_type, baseType: !279, size: 24, elements: !584)
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "modifiers", scope: !922, file: !914, line: 189, baseType: !319, size: 128, offset: 2688)
!1331 = !DIDerivedType(tag: DW_TAG_member, name: "act_imagedir", scope: !913, file: !914, line: 207, baseType: !475, size: 8192, offset: 384)
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "act_sounddir", scope: !913, file: !914, line: 208, baseType: !475, size: 8192, offset: 8576)
!1333 = !DIDerivedType(tag: DW_TAG_member, name: "over_ofs", scope: !913, file: !914, line: 210, baseType: !273, size: 32, offset: 16768)
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "over_cfra", scope: !913, file: !914, line: 210, baseType: !273, size: 32, offset: 16800)
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "over_flag", scope: !913, file: !914, line: 211, baseType: !273, size: 32, offset: 16832)
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !913, file: !914, line: 211, baseType: !273, size: 32, offset: 16864)
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "over_border", scope: !913, file: !914, line: 212, baseType: !869, size: 128, offset: 16896)
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "toolsettings", scope: !510, file: !511, line: 1246, baseType: !1339, size: 64, offset: 2112)
!1339 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1340, size: 64)
!1340 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ToolSettings", file: !511, line: 1067, size: 5184, elements: !1341)
!1341 = !{!1342, !1372, !1373, !1388, !1394, !1395, !1396, !1397, !1398, !1399, !1400, !1401, !1402, !1403, !1404, !1405, !1406, !1410, !1426, !1453, !1454, !1455, !1456, !1457, !1458, !1459, !1460, !1461, !1462, !1463, !1464, !1465, !1466, !1467, !1468, !1469, !1470, !1471, !1472, !1473, !1474, !1475, !1476, !1477, !1478, !1479, !1480, !1481, !1483, !1484, !1485, !1486, !1487, !1488, !1489, !1490, !1491, !1492, !1493, !1494, !1495, !1496, !1497, !1498, !1499, !1500, !1501, !1502, !1503, !1504, !1505, !1506, !1507, !1508, !1536}
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "vpaint", scope: !1340, file: !511, line: 1068, baseType: !1343, size: 64)
!1343 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1344, size: 64)
!1344 = !DIDerivedType(tag: DW_TAG_typedef, name: "VPaint", file: !511, line: 934, baseType: !1345)
!1345 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VPaint", file: !511, line: 925, size: 576, elements: !1346)
!1346 = !{!1347, !1364, !1365, !1366, !1367, !1368, !1371}
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !1345, file: !511, line: 926, baseType: !1348, size: 320)
!1348 = !DIDerivedType(tag: DW_TAG_typedef, name: "Paint", file: !511, line: 830, baseType: !1349)
!1349 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Paint", file: !511, line: 813, size: 320, elements: !1350)
!1350 = !{!1351, !1354, !1357, !1358, !1361, !1362, !1363}
!1351 = !DIDerivedType(tag: DW_TAG_member, name: "brush", scope: !1349, file: !511, line: 814, baseType: !1352, size: 64)
!1352 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1353, size: 64)
!1353 = !DICompositeType(tag: DW_TAG_structure_type, name: "Brush", file: !511, line: 51, flags: DIFlagFwdDecl)
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "palette", scope: !1349, file: !511, line: 815, baseType: !1355, size: 64, offset: 64)
!1355 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1356, size: 64)
!1356 = !DICompositeType(tag: DW_TAG_structure_type, name: "Palette", file: !511, line: 815, flags: DIFlagFwdDecl)
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "paint_cursor", scope: !1349, file: !511, line: 818, baseType: !272, size: 64, offset: 128)
!1358 = !DIDerivedType(tag: DW_TAG_member, name: "paint_cursor_col", scope: !1349, file: !511, line: 819, baseType: !1359, size: 32, offset: 192)
!1359 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1360, size: 32, elements: !657)
!1360 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1349, file: !511, line: 822, baseType: !273, size: 32, offset: 224)
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "num_input_samples", scope: !1349, file: !511, line: 826, baseType: !273, size: 32, offset: 256)
!1363 = !DIDerivedType(tag: DW_TAG_member, name: "symmetry_flags", scope: !1349, file: !511, line: 829, baseType: !273, size: 32, offset: 288)
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1345, file: !511, line: 928, baseType: !310, size: 16, offset: 320)
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1345, file: !511, line: 928, baseType: !310, size: 16, offset: 336)
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "tot", scope: !1345, file: !511, line: 929, baseType: !273, size: 32, offset: 352)
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "vpaint_prev", scope: !1345, file: !511, line: 930, baseType: !1227, size: 64, offset: 384)
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "wpaint_prev", scope: !1345, file: !511, line: 931, baseType: !1369, size: 64, offset: 448)
!1369 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1370, size: 64)
!1370 = !DICompositeType(tag: DW_TAG_structure_type, name: "MDeformVert", file: !511, line: 931, flags: DIFlagFwdDecl)
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "paintcursor", scope: !1345, file: !511, line: 933, baseType: !272, size: 64, offset: 512)
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "wpaint", scope: !1340, file: !511, line: 1069, baseType: !1343, size: 64, offset: 64)
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt", scope: !1340, file: !511, line: 1070, baseType: !1374, size: 64, offset: 128)
!1374 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1375, size: 64)
!1375 = !DIDerivedType(tag: DW_TAG_typedef, name: "Sculpt", file: !511, line: 916, baseType: !1376)
!1376 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Sculpt", file: !511, line: 891, size: 704, elements: !1377)
!1377 = !{!1378, !1379, !1380, !1382, !1383, !1384, !1385, !1386, !1387}
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !1376, file: !511, line: 892, baseType: !1348, size: 320)
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1376, file: !511, line: 896, baseType: !273, size: 32, offset: 320)
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "radial_symm", scope: !1376, file: !511, line: 900, baseType: !1381, size: 96, offset: 352)
!1381 = !DICompositeType(tag: DW_TAG_array_type, baseType: !273, size: 96, elements: !584)
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "detail_size", scope: !1376, file: !511, line: 903, baseType: !548, size: 32, offset: 448)
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "symmetrize_direction", scope: !1376, file: !511, line: 906, baseType: !273, size: 32, offset: 480)
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "gravity_factor", scope: !1376, file: !511, line: 909, baseType: !548, size: 32, offset: 512)
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "constant_detail", scope: !1376, file: !511, line: 912, baseType: !548, size: 32, offset: 544)
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "gravity_object", scope: !1376, file: !511, line: 914, baseType: !519, size: 64, offset: 576)
!1387 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1376, file: !511, line: 915, baseType: !272, size: 64, offset: 640)
!1388 = !DIDerivedType(tag: DW_TAG_member, name: "uvsculpt", scope: !1340, file: !511, line: 1071, baseType: !1389, size: 64, offset: 192)
!1389 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1390, size: 64)
!1390 = !DIDerivedType(tag: DW_TAG_typedef, name: "UvSculpt", file: !511, line: 920, baseType: !1391)
!1391 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "UvSculpt", file: !511, line: 918, size: 320, elements: !1392)
!1392 = !{!1393}
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !1391, file: !511, line: 919, baseType: !1348, size: 320)
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "vgroup_weight", scope: !1340, file: !511, line: 1075, baseType: !548, size: 32, offset: 256)
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "doublimit", scope: !1340, file: !511, line: 1077, baseType: !548, size: 32, offset: 288)
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "normalsize", scope: !1340, file: !511, line: 1078, baseType: !548, size: 32, offset: 320)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "automerge", scope: !1340, file: !511, line: 1079, baseType: !310, size: 16, offset: 352)
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "selectmode", scope: !1340, file: !511, line: 1082, baseType: !310, size: 16, offset: 368)
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "unwrapper", scope: !1340, file: !511, line: 1085, baseType: !279, size: 8, offset: 384)
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "uvcalc_flag", scope: !1340, file: !511, line: 1086, baseType: !279, size: 8, offset: 392)
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "uv_flag", scope: !1340, file: !511, line: 1087, baseType: !279, size: 8, offset: 400)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "uv_selectmode", scope: !1340, file: !511, line: 1088, baseType: !279, size: 8, offset: 408)
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "uvcalc_margin", scope: !1340, file: !511, line: 1090, baseType: !548, size: 32, offset: 416)
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "autoik_chainlen", scope: !1340, file: !511, line: 1093, baseType: !310, size: 16, offset: 448)
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "gpencil_flags", scope: !1340, file: !511, line: 1096, baseType: !279, size: 8, offset: 464)
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1340, file: !511, line: 1098, baseType: !1407, size: 40, offset: 472)
!1407 = !DICompositeType(tag: DW_TAG_array_type, baseType: !279, size: 40, elements: !1408)
!1408 = !{!1409}
!1409 = !DISubrange(count: 5)
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "imapaint", scope: !1340, file: !511, line: 1101, baseType: !1411, size: 832, offset: 512)
!1411 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ImagePaintSettings", file: !511, line: 836, size: 832, elements: !1412)
!1412 = !{!1413, !1414, !1415, !1416, !1417, !1418, !1419, !1420, !1421, !1422, !1423, !1424, !1425}
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !1411, file: !511, line: 837, baseType: !1348, size: 320)
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1411, file: !511, line: 839, baseType: !310, size: 16, offset: 320)
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "missing_data", scope: !1411, file: !511, line: 839, baseType: !310, size: 16, offset: 336)
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "seam_bleed", scope: !1411, file: !511, line: 842, baseType: !310, size: 16, offset: 352)
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "normal_angle", scope: !1411, file: !511, line: 842, baseType: !310, size: 16, offset: 368)
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "screen_grab_size", scope: !1411, file: !511, line: 843, baseType: !1237, size: 32, offset: 384)
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1411, file: !511, line: 845, baseType: !273, size: 32, offset: 416)
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "paintcursor", scope: !1411, file: !511, line: 847, baseType: !272, size: 64, offset: 448)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "stencil", scope: !1411, file: !511, line: 848, baseType: !1194, size: 64, offset: 512)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "clone", scope: !1411, file: !511, line: 849, baseType: !1194, size: 64, offset: 576)
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "canvas", scope: !1411, file: !511, line: 850, baseType: !1194, size: 64, offset: 640)
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "stencil_col", scope: !1411, file: !511, line: 851, baseType: !583, size: 96, offset: 704)
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1411, file: !511, line: 852, baseType: !548, size: 32, offset: 800)
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "particle", scope: !1340, file: !511, line: 1104, baseType: !1427, size: 1344, offset: 1344)
!1427 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParticleEditSettings", file: !511, line: 867, size: 1344, elements: !1428)
!1428 = !{!1429, !1430, !1431, !1432, !1433, !1444, !1445, !1446, !1447, !1448, !1449, !1450, !1451, !1452}
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1427, file: !511, line: 868, baseType: !310, size: 16)
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "totrekey", scope: !1427, file: !511, line: 869, baseType: !310, size: 16, offset: 16)
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "totaddkey", scope: !1427, file: !511, line: 870, baseType: !310, size: 16, offset: 32)
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "brushtype", scope: !1427, file: !511, line: 871, baseType: !310, size: 16, offset: 48)
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "brush", scope: !1427, file: !511, line: 873, baseType: !1434, size: 896, offset: 64)
!1434 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1435, size: 896, elements: !1259)
!1435 = !DIDerivedType(tag: DW_TAG_typedef, name: "ParticleBrushData", file: !511, line: 864, baseType: !1436)
!1436 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParticleBrushData", file: !511, line: 859, size: 128, elements: !1437)
!1437 = !{!1438, !1439, !1440, !1441, !1442, !1443}
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1436, file: !511, line: 860, baseType: !310, size: 16)
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "step", scope: !1436, file: !511, line: 861, baseType: !310, size: 16, offset: 16)
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1436, file: !511, line: 861, baseType: !310, size: 16, offset: 32)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1436, file: !511, line: 861, baseType: !310, size: 16, offset: 48)
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1436, file: !511, line: 862, baseType: !273, size: 32, offset: 64)
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "strength", scope: !1436, file: !511, line: 863, baseType: !548, size: 32, offset: 96)
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "paintcursor", scope: !1427, file: !511, line: 874, baseType: !272, size: 64, offset: 960)
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "emitterdist", scope: !1427, file: !511, line: 876, baseType: !548, size: 32, offset: 1024)
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !1427, file: !511, line: 876, baseType: !548, size: 32, offset: 1056)
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "selectmode", scope: !1427, file: !511, line: 878, baseType: !273, size: 32, offset: 1088)
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "edittype", scope: !1427, file: !511, line: 879, baseType: !273, size: 32, offset: 1120)
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "draw_step", scope: !1427, file: !511, line: 881, baseType: !273, size: 32, offset: 1152)
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "fade_frames", scope: !1427, file: !511, line: 881, baseType: !273, size: 32, offset: 1184)
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !1427, file: !511, line: 883, baseType: !509, size: 64, offset: 1216)
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !1427, file: !511, line: 884, baseType: !519, size: 64, offset: 1280)
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "proportional_size", scope: !1340, file: !511, line: 1107, baseType: !548, size: 32, offset: 2688)
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "select_thresh", scope: !1340, file: !511, line: 1110, baseType: !548, size: 32, offset: 2720)
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "autokey_mode", scope: !1340, file: !511, line: 1113, baseType: !310, size: 16, offset: 2752)
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "autokey_flag", scope: !1340, file: !511, line: 1113, baseType: !310, size: 16, offset: 2768)
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "multires_subdiv_type", scope: !1340, file: !511, line: 1116, baseType: !279, size: 8, offset: 2784)
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !1340, file: !511, line: 1117, baseType: !838, size: 8, offset: 2792)
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_resolution", scope: !1340, file: !511, line: 1120, baseType: !310, size: 16, offset: 2800)
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_threshold_internal", scope: !1340, file: !511, line: 1121, baseType: !548, size: 32, offset: 2816)
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_threshold_external", scope: !1340, file: !511, line: 1122, baseType: !548, size: 32, offset: 2848)
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_length_ratio", scope: !1340, file: !511, line: 1123, baseType: !548, size: 32, offset: 2880)
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_length_limit", scope: !1340, file: !511, line: 1124, baseType: !548, size: 32, offset: 2912)
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_angle_limit", scope: !1340, file: !511, line: 1125, baseType: !548, size: 32, offset: 2944)
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_correlation_limit", scope: !1340, file: !511, line: 1126, baseType: !548, size: 32, offset: 2976)
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_symmetry_limit", scope: !1340, file: !511, line: 1127, baseType: !548, size: 32, offset: 3008)
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_angle_weight", scope: !1340, file: !511, line: 1128, baseType: !548, size: 32, offset: 3040)
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_length_weight", scope: !1340, file: !511, line: 1129, baseType: !548, size: 32, offset: 3072)
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_distance_weight", scope: !1340, file: !511, line: 1130, baseType: !548, size: 32, offset: 3104)
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_options", scope: !1340, file: !511, line: 1131, baseType: !310, size: 16, offset: 3136)
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_postpro", scope: !1340, file: !511, line: 1132, baseType: !279, size: 8, offset: 3152)
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_postpro_passes", scope: !1340, file: !511, line: 1133, baseType: !279, size: 8, offset: 3160)
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_subdivisions", scope: !1340, file: !511, line: 1134, baseType: !1329, size: 24, offset: 3168)
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_multi_level", scope: !1340, file: !511, line: 1135, baseType: !279, size: 8, offset: 3192)
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_template", scope: !1340, file: !511, line: 1138, baseType: !519, size: 64, offset: 3200)
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "bone_sketching", scope: !1340, file: !511, line: 1139, baseType: !279, size: 8, offset: 3264)
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "bone_sketching_convert", scope: !1340, file: !511, line: 1140, baseType: !279, size: 8, offset: 3272)
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_subdivision_number", scope: !1340, file: !511, line: 1141, baseType: !279, size: 8, offset: 3280)
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_options", scope: !1340, file: !511, line: 1142, baseType: !279, size: 8, offset: 3288)
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_roll", scope: !1340, file: !511, line: 1143, baseType: !279, size: 8, offset: 3296)
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_side_string", scope: !1340, file: !511, line: 1144, baseType: !1482, size: 64, offset: 3304)
!1482 = !DICompositeType(tag: DW_TAG_array_type, baseType: !279, size: 64, elements: !1211)
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_num_string", scope: !1340, file: !511, line: 1145, baseType: !1482, size: 64, offset: 3368)
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "edge_mode", scope: !1340, file: !511, line: 1148, baseType: !279, size: 8, offset: 3432)
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "edge_mode_live_unwrap", scope: !1340, file: !511, line: 1149, baseType: !279, size: 8, offset: 3440)
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "snap_mode", scope: !1340, file: !511, line: 1152, baseType: !279, size: 8, offset: 3448)
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "snap_node_mode", scope: !1340, file: !511, line: 1152, baseType: !279, size: 8, offset: 3456)
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "snap_uv_mode", scope: !1340, file: !511, line: 1153, baseType: !279, size: 8, offset: 3464)
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "snap_flag", scope: !1340, file: !511, line: 1154, baseType: !310, size: 16, offset: 3472)
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "snap_target", scope: !1340, file: !511, line: 1154, baseType: !310, size: 16, offset: 3488)
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "proportional", scope: !1340, file: !511, line: 1155, baseType: !310, size: 16, offset: 3504)
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "prop_mode", scope: !1340, file: !511, line: 1155, baseType: !310, size: 16, offset: 3520)
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "proportional_objects", scope: !1340, file: !511, line: 1156, baseType: !279, size: 8, offset: 3536)
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "proportional_mask", scope: !1340, file: !511, line: 1157, baseType: !279, size: 8, offset: 3544)
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "auto_normalize", scope: !1340, file: !511, line: 1159, baseType: !279, size: 8, offset: 3552)
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "multipaint", scope: !1340, file: !511, line: 1160, baseType: !279, size: 8, offset: 3560)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "weightuser", scope: !1340, file: !511, line: 1161, baseType: !279, size: 8, offset: 3568)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "vgroupsubset", scope: !1340, file: !511, line: 1162, baseType: !279, size: 8, offset: 3576)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "use_uv_sculpt", scope: !1340, file: !511, line: 1165, baseType: !273, size: 32, offset: 3584)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "uv_sculpt_settings", scope: !1340, file: !511, line: 1166, baseType: !273, size: 32, offset: 3616)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "uv_sculpt_tool", scope: !1340, file: !511, line: 1167, baseType: !273, size: 32, offset: 3648)
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "uv_relax_method", scope: !1340, file: !511, line: 1168, baseType: !273, size: 32, offset: 3680)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_settings", scope: !1340, file: !511, line: 1171, baseType: !310, size: 16, offset: 3712)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "pad5", scope: !1340, file: !511, line: 1171, baseType: !310, size: 16, offset: 3728)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_unified_size", scope: !1340, file: !511, line: 1172, baseType: !273, size: 32, offset: 3744)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_unified_unprojected_radius", scope: !1340, file: !511, line: 1173, baseType: !548, size: 32, offset: 3776)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_unified_alpha", scope: !1340, file: !511, line: 1174, baseType: !548, size: 32, offset: 3808)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "unified_paint_settings", scope: !1340, file: !511, line: 1177, baseType: !1509, size: 1024, offset: 3840)
!1509 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "UnifiedPaintSettings", file: !511, line: 963, size: 1024, elements: !1510)
!1510 = !{!1511, !1512, !1513, !1514, !1515, !1516, !1517, !1518, !1519, !1520, !1521, !1522, !1523, !1524, !1525, !1526, !1527, !1528, !1529, !1530, !1531, !1534, !1535}
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1509, file: !511, line: 965, baseType: !273, size: 32)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "unprojected_radius", scope: !1509, file: !511, line: 968, baseType: !548, size: 32, offset: 32)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "alpha", scope: !1509, file: !511, line: 971, baseType: !548, size: 32, offset: 64)
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !1509, file: !511, line: 974, baseType: !548, size: 32, offset: 96)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "rgb", scope: !1509, file: !511, line: 977, baseType: !583, size: 96, offset: 128)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "secondary_rgb", scope: !1509, file: !511, line: 979, baseType: !583, size: 96, offset: 224)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1509, file: !511, line: 982, baseType: !273, size: 32, offset: 320)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "last_rake", scope: !1509, file: !511, line: 987, baseType: !775, size: 64, offset: 352)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "brush_rotation", scope: !1509, file: !511, line: 989, baseType: !548, size: 32, offset: 416)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "draw_anchored", scope: !1509, file: !511, line: 994, baseType: !273, size: 32, offset: 448)
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "anchored_size", scope: !1509, file: !511, line: 995, baseType: !273, size: 32, offset: 480)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "draw_inverted", scope: !1509, file: !511, line: 997, baseType: !279, size: 8, offset: 512)
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !1509, file: !511, line: 998, baseType: !1258, size: 56, offset: 520)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "overlap_factor", scope: !1509, file: !511, line: 1000, baseType: !548, size: 32, offset: 576)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "anchored_initial_mouse", scope: !1509, file: !511, line: 1003, baseType: !775, size: 64, offset: 608)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "stroke_active", scope: !1509, file: !511, line: 1006, baseType: !273, size: 32, offset: 672)
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "size_pressure_value", scope: !1509, file: !511, line: 1009, baseType: !548, size: 32, offset: 704)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "tex_mouse", scope: !1509, file: !511, line: 1012, baseType: !775, size: 64, offset: 736)
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "mask_tex_mouse", scope: !1509, file: !511, line: 1015, baseType: !775, size: 64, offset: 800)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "do_linear_conversion", scope: !1509, file: !511, line: 1018, baseType: !273, size: 32, offset: 864)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !1509, file: !511, line: 1019, baseType: !1532, size: 64, offset: 896)
!1532 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1533, size: 64)
!1533 = !DICompositeType(tag: DW_TAG_structure_type, name: "ColorSpace", file: !511, line: 63, flags: DIFlagFwdDecl)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "pixel_radius", scope: !1509, file: !511, line: 1023, baseType: !548, size: 32, offset: 960)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !1509, file: !511, line: 1024, baseType: !273, size: 32, offset: 992)
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "statvis", scope: !1340, file: !511, line: 1179, baseType: !1537, size: 320, offset: 4864)
!1537 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MeshStatVis", file: !511, line: 1043, size: 320, elements: !1538)
!1538 = !{!1539, !1540, !1542, !1543, !1544, !1545, !1546, !1547, !1548, !1549, !1550, !1551, !1552}
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1537, file: !511, line: 1044, baseType: !279, size: 8)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "_pad1", scope: !1537, file: !511, line: 1045, baseType: !1541, size: 16, offset: 8)
!1541 = !DICompositeType(tag: DW_TAG_array_type, baseType: !279, size: 16, elements: !776)
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "overhang_axis", scope: !1537, file: !511, line: 1048, baseType: !279, size: 8, offset: 24)
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "overhang_min", scope: !1537, file: !511, line: 1049, baseType: !548, size: 32, offset: 32)
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "overhang_max", scope: !1537, file: !511, line: 1049, baseType: !548, size: 32, offset: 64)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "thickness_min", scope: !1537, file: !511, line: 1052, baseType: !548, size: 32, offset: 96)
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "thickness_max", scope: !1537, file: !511, line: 1052, baseType: !548, size: 32, offset: 128)
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "thickness_samples", scope: !1537, file: !511, line: 1053, baseType: !279, size: 8, offset: 160)
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "_pad2", scope: !1537, file: !511, line: 1054, baseType: !1329, size: 24, offset: 168)
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "distort_min", scope: !1537, file: !511, line: 1057, baseType: !548, size: 32, offset: 192)
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "distort_max", scope: !1537, file: !511, line: 1057, baseType: !548, size: 32, offset: 224)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "sharp_min", scope: !1537, file: !511, line: 1060, baseType: !548, size: 32, offset: 256)
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "sharp_max", scope: !1537, file: !511, line: 1060, baseType: !548, size: 32, offset: 288)
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !510, file: !511, line: 1247, baseType: !1554, size: 64, offset: 2176)
!1554 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1555, size: 64)
!1555 = !DICompositeType(tag: DW_TAG_structure_type, name: "SceneStats", file: !511, line: 60, flags: DIFlagFwdDecl)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !510, file: !511, line: 1251, baseType: !1557, size: 31872, offset: 2240)
!1557 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RenderData", file: !511, line: 403, size: 31872, elements: !1558)
!1558 = !{!1559, !1634, !1654, !1663, !1683, !1703, !1704, !1705, !1706, !1707, !1708, !1709, !1710, !1711, !1712, !1713, !1714, !1715, !1716, !1717, !1718, !1719, !1720, !1721, !1722, !1723, !1724, !1725, !1726, !1727, !1728, !1729, !1730, !1731, !1732, !1733, !1734, !1735, !1736, !1737, !1738, !1739, !1740, !1741, !1742, !1743, !1744, !1745, !1746, !1747, !1748, !1749, !1750, !1751, !1752, !1753, !1754, !1755, !1756, !1757, !1765, !1766, !1767, !1768, !1769, !1770, !1771, !1772, !1773, !1774, !1775, !1776, !1777, !1778, !1779, !1780, !1781, !1782, !1783, !1784, !1785, !1786, !1787, !1788, !1789, !1790, !1791, !1792, !1793, !1794, !1795, !1796, !1797, !1798, !1799, !1800, !1801, !1802, !1803, !1804, !1805, !1806, !1807, !1808, !1809, !1810, !1811, !1812, !1813, !1814, !1815, !1816, !1817, !1821, !1822, !1823, !1827, !1843, !1844}
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "im_format", scope: !1557, file: !511, line: 404, baseType: !1560, size: 1984)
!1560 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ImageFormatData", file: !511, line: 259, size: 1984, elements: !1561)
!1561 = !{!1562, !1563, !1564, !1565, !1566, !1567, !1568, !1569, !1570, !1571, !1572, !1573, !1574, !1575, !1579, !1629}
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "imtype", scope: !1560, file: !511, line: 260, baseType: !279, size: 8)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !1560, file: !511, line: 263, baseType: !279, size: 8, offset: 8)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "planes", scope: !1560, file: !511, line: 266, baseType: !279, size: 8, offset: 16)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1560, file: !511, line: 267, baseType: !279, size: 8, offset: 24)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !1560, file: !511, line: 269, baseType: !279, size: 8, offset: 32)
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "compress", scope: !1560, file: !511, line: 270, baseType: !279, size: 8, offset: 40)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "exr_codec", scope: !1560, file: !511, line: 276, baseType: !279, size: 8, offset: 48)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_flag", scope: !1560, file: !511, line: 279, baseType: !279, size: 8, offset: 56)
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_white", scope: !1560, file: !511, line: 280, baseType: !310, size: 16, offset: 64)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_black", scope: !1560, file: !511, line: 280, baseType: !310, size: 16, offset: 80)
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_gamma", scope: !1560, file: !511, line: 281, baseType: !548, size: 32, offset: 96)
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_flag", scope: !1560, file: !511, line: 284, baseType: !279, size: 8, offset: 128)
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_codec", scope: !1560, file: !511, line: 285, baseType: !279, size: 8, offset: 136)
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1560, file: !511, line: 287, baseType: !1576, size: 48, offset: 144)
!1576 = !DICompositeType(tag: DW_TAG_array_type, baseType: !279, size: 48, elements: !1577)
!1577 = !{!1578}
!1578 = !DISubrange(count: 6)
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "view_settings", scope: !1560, file: !511, line: 290, baseType: !1580, size: 1280, offset: 192)
!1580 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorManagedViewSettings", file: !1018, line: 174, baseType: !1581)
!1581 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorManagedViewSettings", file: !1018, line: 166, size: 1280, elements: !1582)
!1582 = !{!1583, !1584, !1585, !1586, !1587, !1588, !1589, !1628}
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1581, file: !1018, line: 167, baseType: !273, size: 32)
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1581, file: !1018, line: 167, baseType: !273, size: 32, offset: 32)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "look", scope: !1581, file: !1018, line: 168, baseType: !295, size: 512, offset: 64)
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "view_transform", scope: !1581, file: !1018, line: 169, baseType: !295, size: 512, offset: 576)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "exposure", scope: !1581, file: !1018, line: 170, baseType: !548, size: 32, offset: 1088)
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "gamma", scope: !1581, file: !1018, line: 171, baseType: !548, size: 32, offset: 1120)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "curve_mapping", scope: !1581, file: !1018, line: 172, baseType: !1590, size: 64, offset: 1152)
!1590 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1591, size: 64)
!1591 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveMapping", file: !1018, line: 72, size: 3072, elements: !1592)
!1592 = !{!1593, !1594, !1595, !1596, !1597, !1598, !1599, !1624, !1625, !1626, !1627}
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1591, file: !1018, line: 73, baseType: !273, size: 32)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "cur", scope: !1591, file: !1018, line: 73, baseType: !273, size: 32, offset: 32)
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "preset", scope: !1591, file: !1018, line: 74, baseType: !273, size: 32, offset: 64)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "changed_timestamp", scope: !1591, file: !1018, line: 75, baseType: !273, size: 32, offset: 96)
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "curr", scope: !1591, file: !1018, line: 77, baseType: !869, size: 128, offset: 128)
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "clipr", scope: !1591, file: !1018, line: 77, baseType: !869, size: 128, offset: 256)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "cm", scope: !1591, file: !1018, line: 79, baseType: !1600, size: 2304, offset: 384)
!1600 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1601, size: 2304, elements: !657)
!1601 = !DIDerivedType(tag: DW_TAG_typedef, name: "CurveMap", file: !1018, line: 67, baseType: !1602)
!1602 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveMap", file: !1018, line: 55, size: 576, elements: !1603)
!1603 = !{!1604, !1605, !1606, !1607, !1608, !1609, !1610, !1611, !1620, !1621, !1622, !1623}
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "totpoint", scope: !1602, file: !1018, line: 56, baseType: !310, size: 16)
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1602, file: !1018, line: 56, baseType: !310, size: 16, offset: 16)
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !1602, file: !1018, line: 58, baseType: !548, size: 32, offset: 32)
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "mintable", scope: !1602, file: !1018, line: 59, baseType: !548, size: 32, offset: 64)
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "maxtable", scope: !1602, file: !1018, line: 59, baseType: !548, size: 32, offset: 96)
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "ext_in", scope: !1602, file: !1018, line: 60, baseType: !775, size: 64, offset: 128)
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "ext_out", scope: !1602, file: !1018, line: 60, baseType: !775, size: 64, offset: 192)
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "curve", scope: !1602, file: !1018, line: 61, baseType: !1612, size: 64, offset: 256)
!1612 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1613, size: 64)
!1613 = !DIDerivedType(tag: DW_TAG_typedef, name: "CurveMapPoint", file: !1018, line: 47, baseType: !1614)
!1614 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveMapPoint", file: !1018, line: 44, size: 96, elements: !1615)
!1615 = !{!1616, !1617, !1618, !1619}
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1614, file: !1018, line: 45, baseType: !548, size: 32)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !1614, file: !1018, line: 45, baseType: !548, size: 32, offset: 32)
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1614, file: !1018, line: 46, baseType: !310, size: 16, offset: 64)
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "shorty", scope: !1614, file: !1018, line: 46, baseType: !310, size: 16, offset: 80)
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "table", scope: !1602, file: !1018, line: 62, baseType: !1612, size: 64, offset: 320)
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "premultable", scope: !1602, file: !1018, line: 64, baseType: !1612, size: 64, offset: 384)
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "premul_ext_in", scope: !1602, file: !1018, line: 65, baseType: !775, size: 64, offset: 448)
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "premul_ext_out", scope: !1602, file: !1018, line: 66, baseType: !775, size: 64, offset: 512)
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "black", scope: !1591, file: !1018, line: 80, baseType: !583, size: 96, offset: 2688)
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "white", scope: !1591, file: !1018, line: 80, baseType: !583, size: 96, offset: 2784)
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "bwmul", scope: !1591, file: !1018, line: 81, baseType: !583, size: 96, offset: 2880)
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "sample", scope: !1591, file: !1018, line: 83, baseType: !583, size: 96, offset: 2976)
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1581, file: !1018, line: 173, baseType: !272, size: 64, offset: 1216)
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "display_settings", scope: !1560, file: !511, line: 291, baseType: !1630, size: 512, offset: 1472)
!1630 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorManagedDisplaySettings", file: !1018, line: 178, baseType: !1631)
!1631 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorManagedDisplaySettings", file: !1018, line: 176, size: 512, elements: !1632)
!1632 = !{!1633}
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "display_device", scope: !1631, file: !1018, line: 177, baseType: !295, size: 512)
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "avicodecdata", scope: !1557, file: !511, line: 406, baseType: !1635, size: 64, offset: 1984)
!1635 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1636, size: 64)
!1636 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AviCodecData", file: !511, line: 80, size: 1472, elements: !1637)
!1637 = !{!1638, !1639, !1640, !1641, !1642, !1643, !1644, !1645, !1646, !1647, !1648, !1649, !1650}
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "lpFormat", scope: !1636, file: !511, line: 81, baseType: !272, size: 64)
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "lpParms", scope: !1636, file: !511, line: 82, baseType: !272, size: 64, offset: 64)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "cbFormat", scope: !1636, file: !511, line: 83, baseType: !7, size: 32, offset: 128)
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "cbParms", scope: !1636, file: !511, line: 84, baseType: !7, size: 32, offset: 160)
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "fccType", scope: !1636, file: !511, line: 86, baseType: !7, size: 32, offset: 192)
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "fccHandler", scope: !1636, file: !511, line: 87, baseType: !7, size: 32, offset: 224)
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "dwKeyFrameEvery", scope: !1636, file: !511, line: 88, baseType: !7, size: 32, offset: 256)
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "dwQuality", scope: !1636, file: !511, line: 89, baseType: !7, size: 32, offset: 288)
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "dwBytesPerSecond", scope: !1636, file: !511, line: 90, baseType: !7, size: 32, offset: 320)
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "dwFlags", scope: !1636, file: !511, line: 91, baseType: !7, size: 32, offset: 352)
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "dwInterleaveEvery", scope: !1636, file: !511, line: 92, baseType: !7, size: 32, offset: 384)
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1636, file: !511, line: 93, baseType: !7, size: 32, offset: 416)
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "avicodecname", scope: !1636, file: !511, line: 95, baseType: !1651, size: 1024, offset: 448)
!1651 = !DICompositeType(tag: DW_TAG_array_type, baseType: !279, size: 1024, elements: !1652)
!1652 = !{!1653}
!1653 = !DISubrange(count: 128)
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "qtcodecdata", scope: !1557, file: !511, line: 407, baseType: !1655, size: 64, offset: 2048)
!1655 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1656, size: 64)
!1656 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "QuicktimeCodecData", file: !511, line: 98, size: 1216, elements: !1657)
!1657 = !{!1658, !1659, !1660, !1661, !1662}
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "cdParms", scope: !1656, file: !511, line: 100, baseType: !272, size: 64)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1656, file: !511, line: 101, baseType: !272, size: 64, offset: 64)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "cdSize", scope: !1656, file: !511, line: 103, baseType: !7, size: 32, offset: 128)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1656, file: !511, line: 104, baseType: !7, size: 32, offset: 160)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "qtcodecname", scope: !1656, file: !511, line: 106, baseType: !1651, size: 1024, offset: 192)
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "qtcodecsettings", scope: !1557, file: !511, line: 408, baseType: !1664, size: 512, offset: 2112)
!1664 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "QuicktimeCodecSettings", file: !511, line: 109, size: 512, elements: !1665)
!1665 = !{!1666, !1667, !1668, !1669, !1670, !1671, !1672, !1673, !1674, !1675, !1676, !1677, !1678, !1679, !1680, !1681, !1682}
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "codecType", scope: !1664, file: !511, line: 111, baseType: !273, size: 32)
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "codecSpatialQuality", scope: !1664, file: !511, line: 112, baseType: !273, size: 32, offset: 32)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "codec", scope: !1664, file: !511, line: 115, baseType: !273, size: 32, offset: 64)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "codecFlags", scope: !1664, file: !511, line: 116, baseType: !273, size: 32, offset: 96)
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "colorDepth", scope: !1664, file: !511, line: 117, baseType: !273, size: 32, offset: 128)
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "codecTemporalQuality", scope: !1664, file: !511, line: 118, baseType: !273, size: 32, offset: 160)
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "minSpatialQuality", scope: !1664, file: !511, line: 119, baseType: !273, size: 32, offset: 192)
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "minTemporalQuality", scope: !1664, file: !511, line: 120, baseType: !273, size: 32, offset: 224)
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "keyFrameRate", scope: !1664, file: !511, line: 121, baseType: !273, size: 32, offset: 256)
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "bitRate", scope: !1664, file: !511, line: 122, baseType: !273, size: 32, offset: 288)
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "audiocodecType", scope: !1664, file: !511, line: 125, baseType: !273, size: 32, offset: 320)
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "audioSampleRate", scope: !1664, file: !511, line: 126, baseType: !273, size: 32, offset: 352)
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "audioBitDepth", scope: !1664, file: !511, line: 127, baseType: !310, size: 16, offset: 384)
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "audioChannels", scope: !1664, file: !511, line: 128, baseType: !310, size: 16, offset: 400)
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "audioCodecFlags", scope: !1664, file: !511, line: 129, baseType: !273, size: 32, offset: 416)
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "audioBitRate", scope: !1664, file: !511, line: 130, baseType: !273, size: 32, offset: 448)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1664, file: !511, line: 131, baseType: !273, size: 32, offset: 480)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "ffcodecdata", scope: !1557, file: !511, line: 409, baseType: !1684, size: 576, offset: 2624)
!1684 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FFMpegCodecData", file: !511, line: 134, size: 576, elements: !1685)
!1685 = !{!1686, !1687, !1688, !1689, !1690, !1691, !1692, !1693, !1694, !1695, !1696, !1697, !1698, !1699, !1700, !1701, !1702}
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1684, file: !511, line: 135, baseType: !273, size: 32)
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "codec", scope: !1684, file: !511, line: 136, baseType: !273, size: 32, offset: 32)
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "audio_codec", scope: !1684, file: !511, line: 137, baseType: !273, size: 32, offset: 64)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "video_bitrate", scope: !1684, file: !511, line: 138, baseType: !273, size: 32, offset: 96)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "audio_bitrate", scope: !1684, file: !511, line: 139, baseType: !273, size: 32, offset: 128)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "audio_mixrate", scope: !1684, file: !511, line: 140, baseType: !273, size: 32, offset: 160)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "audio_channels", scope: !1684, file: !511, line: 141, baseType: !273, size: 32, offset: 192)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "audio_pad", scope: !1684, file: !511, line: 142, baseType: !273, size: 32, offset: 224)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "audio_volume", scope: !1684, file: !511, line: 143, baseType: !548, size: 32, offset: 256)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "gop_size", scope: !1684, file: !511, line: 144, baseType: !273, size: 32, offset: 288)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1684, file: !511, line: 145, baseType: !273, size: 32, offset: 320)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "rc_min_rate", scope: !1684, file: !511, line: 147, baseType: !273, size: 32, offset: 352)
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "rc_max_rate", scope: !1684, file: !511, line: 148, baseType: !273, size: 32, offset: 384)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "rc_buffer_size", scope: !1684, file: !511, line: 149, baseType: !273, size: 32, offset: 416)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "mux_packet_size", scope: !1684, file: !511, line: 150, baseType: !273, size: 32, offset: 448)
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "mux_rate", scope: !1684, file: !511, line: 151, baseType: !273, size: 32, offset: 480)
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !1684, file: !511, line: 152, baseType: !299, size: 64, offset: 512)
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "cfra", scope: !1557, file: !511, line: 411, baseType: !273, size: 32, offset: 3200)
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !1557, file: !511, line: 411, baseType: !273, size: 32, offset: 3232)
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "efra", scope: !1557, file: !511, line: 411, baseType: !273, size: 32, offset: 3264)
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "subframe", scope: !1557, file: !511, line: 412, baseType: !548, size: 32, offset: 3296)
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "psfra", scope: !1557, file: !511, line: 413, baseType: !273, size: 32, offset: 3328)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "pefra", scope: !1557, file: !511, line: 413, baseType: !273, size: 32, offset: 3360)
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "images", scope: !1557, file: !511, line: 415, baseType: !273, size: 32, offset: 3392)
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "framapto", scope: !1557, file: !511, line: 415, baseType: !273, size: 32, offset: 3424)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1557, file: !511, line: 416, baseType: !310, size: 16, offset: 3456)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "threads", scope: !1557, file: !511, line: 416, baseType: !310, size: 16, offset: 3472)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "framelen", scope: !1557, file: !511, line: 418, baseType: !548, size: 32, offset: 3488)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "blurfac", scope: !1557, file: !511, line: 418, baseType: !548, size: 32, offset: 3520)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "edgeR", scope: !1557, file: !511, line: 421, baseType: !548, size: 32, offset: 3552)
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "edgeG", scope: !1557, file: !511, line: 421, baseType: !548, size: 32, offset: 3584)
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "edgeB", scope: !1557, file: !511, line: 421, baseType: !548, size: 32, offset: 3616)
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "fullscreen", scope: !1557, file: !511, line: 425, baseType: !310, size: 16, offset: 3648)
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "xplay", scope: !1557, file: !511, line: 425, baseType: !310, size: 16, offset: 3664)
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "yplay", scope: !1557, file: !511, line: 425, baseType: !310, size: 16, offset: 3680)
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "freqplay", scope: !1557, file: !511, line: 426, baseType: !310, size: 16, offset: 3696)
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !1557, file: !511, line: 428, baseType: !310, size: 16, offset: 3712)
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "attrib", scope: !1557, file: !511, line: 428, baseType: !310, size: 16, offset: 3728)
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "frame_step", scope: !1557, file: !511, line: 431, baseType: !273, size: 32, offset: 3744)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "stereomode", scope: !1557, file: !511, line: 433, baseType: !310, size: 16, offset: 3776)
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "dimensionspreset", scope: !1557, file: !511, line: 435, baseType: !310, size: 16, offset: 3792)
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "filtertype", scope: !1557, file: !511, line: 437, baseType: !310, size: 16, offset: 3808)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1557, file: !511, line: 439, baseType: !310, size: 16, offset: 3824)
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "maximsize", scope: !1557, file: !511, line: 441, baseType: !310, size: 16, offset: 3840)
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "pad6", scope: !1557, file: !511, line: 443, baseType: !310, size: 16, offset: 3856)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "xsch", scope: !1557, file: !511, line: 449, baseType: !273, size: 32, offset: 3872)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "ysch", scope: !1557, file: !511, line: 453, baseType: !273, size: 32, offset: 3904)
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "xparts", scope: !1557, file: !511, line: 458, baseType: !310, size: 16, offset: 3936)
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "yparts", scope: !1557, file: !511, line: 462, baseType: !310, size: 16, offset: 3952)
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "tilex", scope: !1557, file: !511, line: 467, baseType: !273, size: 32, offset: 3968)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "tiley", scope: !1557, file: !511, line: 467, baseType: !273, size: 32, offset: 4000)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "planes", scope: !1557, file: !511, line: 469, baseType: !310, size: 16, offset: 4032)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "imtype", scope: !1557, file: !511, line: 469, baseType: !310, size: 16, offset: 4048)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "subimtype", scope: !1557, file: !511, line: 469, baseType: !310, size: 16, offset: 4064)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !1557, file: !511, line: 469, baseType: !310, size: 16, offset: 4080)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "displaymode", scope: !1557, file: !511, line: 474, baseType: !310, size: 16, offset: 4096)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "use_lock_interface", scope: !1557, file: !511, line: 475, baseType: !279, size: 8, offset: 4112)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "pad7", scope: !1557, file: !511, line: 476, baseType: !279, size: 8, offset: 4120)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "scemode", scope: !1557, file: !511, line: 481, baseType: !273, size: 32, offset: 4128)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1557, file: !511, line: 486, baseType: !273, size: 32, offset: 4160)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "raytrace_options", scope: !1557, file: !511, line: 491, baseType: !273, size: 32, offset: 4192)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "raytrace_structure", scope: !1557, file: !511, line: 496, baseType: !310, size: 16, offset: 4224)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1557, file: !511, line: 498, baseType: !310, size: 16, offset: 4240)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "ocres", scope: !1557, file: !511, line: 501, baseType: !310, size: 16, offset: 4256)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !1557, file: !511, line: 502, baseType: !310, size: 16, offset: 4272)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "alphamode", scope: !1557, file: !511, line: 508, baseType: !310, size: 16, offset: 4288)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "osa", scope: !1557, file: !511, line: 513, baseType: !310, size: 16, offset: 4304)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "frs_sec", scope: !1557, file: !511, line: 515, baseType: !310, size: 16, offset: 4320)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "edgeint", scope: !1557, file: !511, line: 515, baseType: !310, size: 16, offset: 4336)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "safety", scope: !1557, file: !511, line: 519, baseType: !869, size: 128, offset: 4352)
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "border", scope: !1557, file: !511, line: 519, baseType: !869, size: 128, offset: 4480)
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "disprect", scope: !1557, file: !511, line: 520, baseType: !1758, size: 128, offset: 4608)
!1758 = !DIDerivedType(tag: DW_TAG_typedef, name: "rcti", file: !870, line: 89, baseType: !1759)
!1759 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcti", file: !870, line: 86, size: 128, elements: !1760)
!1760 = !{!1761, !1762, !1763, !1764}
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "xmin", scope: !1759, file: !870, line: 87, baseType: !273, size: 32)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "xmax", scope: !1759, file: !870, line: 87, baseType: !273, size: 32, offset: 32)
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "ymin", scope: !1759, file: !870, line: 88, baseType: !273, size: 32, offset: 64)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "ymax", scope: !1759, file: !870, line: 88, baseType: !273, size: 32, offset: 96)
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "layers", scope: !1557, file: !511, line: 523, baseType: !319, size: 128, offset: 4736)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "actlay", scope: !1557, file: !511, line: 524, baseType: !310, size: 16, offset: 4864)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "mblur_samples", scope: !1557, file: !511, line: 527, baseType: !310, size: 16, offset: 4880)
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "xasp", scope: !1557, file: !511, line: 532, baseType: !548, size: 32, offset: 4896)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "yasp", scope: !1557, file: !511, line: 532, baseType: !548, size: 32, offset: 4928)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "frs_sec_base", scope: !1557, file: !511, line: 534, baseType: !548, size: 32, offset: 4960)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "gauss", scope: !1557, file: !511, line: 538, baseType: !548, size: 32, offset: 4992)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "color_mgt_flag", scope: !1557, file: !511, line: 542, baseType: !273, size: 32, offset: 5024)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "postgamma", scope: !1557, file: !511, line: 545, baseType: !548, size: 32, offset: 5056)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "posthue", scope: !1557, file: !511, line: 545, baseType: !548, size: 32, offset: 5088)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "postsat", scope: !1557, file: !511, line: 545, baseType: !548, size: 32, offset: 5120)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "dither_intensity", scope: !1557, file: !511, line: 548, baseType: !548, size: 32, offset: 5152)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "bake_osa", scope: !1557, file: !511, line: 551, baseType: !310, size: 16, offset: 5184)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "bake_filter", scope: !1557, file: !511, line: 551, baseType: !310, size: 16, offset: 5200)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "bake_mode", scope: !1557, file: !511, line: 551, baseType: !310, size: 16, offset: 5216)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "bake_flag", scope: !1557, file: !511, line: 551, baseType: !310, size: 16, offset: 5232)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "bake_normal_space", scope: !1557, file: !511, line: 552, baseType: !310, size: 16, offset: 5248)
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "bake_quad_split", scope: !1557, file: !511, line: 552, baseType: !310, size: 16, offset: 5264)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "bake_maxdist", scope: !1557, file: !511, line: 553, baseType: !548, size: 32, offset: 5280)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "bake_biasdist", scope: !1557, file: !511, line: 553, baseType: !548, size: 32, offset: 5312)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "bake_samples", scope: !1557, file: !511, line: 554, baseType: !310, size: 16, offset: 5344)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "bake_pad", scope: !1557, file: !511, line: 554, baseType: !310, size: 16, offset: 5360)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "bake_user_scale", scope: !1557, file: !511, line: 555, baseType: !548, size: 32, offset: 5376)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "bake_pad1", scope: !1557, file: !511, line: 555, baseType: !548, size: 32, offset: 5408)
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "pic", scope: !1557, file: !511, line: 558, baseType: !475, size: 8192, offset: 5440)
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "stamp", scope: !1557, file: !511, line: 561, baseType: !273, size: 32, offset: 13632)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "stamp_font_id", scope: !1557, file: !511, line: 562, baseType: !310, size: 16, offset: 13664)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !1557, file: !511, line: 562, baseType: !310, size: 16, offset: 13680)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "stamp_udata", scope: !1557, file: !511, line: 565, baseType: !973, size: 6144, offset: 13696)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "fg_stamp", scope: !1557, file: !511, line: 568, baseType: !656, size: 128, offset: 19840)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "bg_stamp", scope: !1557, file: !511, line: 569, baseType: !656, size: 128, offset: 19968)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "seq_prev_type", scope: !1557, file: !511, line: 572, baseType: !279, size: 8, offset: 20096)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "seq_rend_type", scope: !1557, file: !511, line: 573, baseType: !279, size: 8, offset: 20104)
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "seq_flag", scope: !1557, file: !511, line: 574, baseType: !279, size: 8, offset: 20112)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "pad5", scope: !1557, file: !511, line: 575, baseType: !1407, size: 40, offset: 20120)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_flag", scope: !1557, file: !511, line: 578, baseType: !273, size: 32, offset: 20160)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_subsurf", scope: !1557, file: !511, line: 579, baseType: !310, size: 16, offset: 20192)
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_shadowsamples", scope: !1557, file: !511, line: 580, baseType: !310, size: 16, offset: 20208)
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_particles", scope: !1557, file: !511, line: 581, baseType: !548, size: 32, offset: 20224)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_aosss", scope: !1557, file: !511, line: 582, baseType: !548, size: 32, offset: 20256)
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "cineonwhite", scope: !1557, file: !511, line: 585, baseType: !310, size: 16, offset: 20288)
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "cineonblack", scope: !1557, file: !511, line: 585, baseType: !310, size: 16, offset: 20304)
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "cineongamma", scope: !1557, file: !511, line: 586, baseType: !548, size: 32, offset: 20320)
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_preset", scope: !1557, file: !511, line: 589, baseType: !310, size: 16, offset: 20352)
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_depth", scope: !1557, file: !511, line: 589, baseType: !310, size: 16, offset: 20368)
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "rpad3", scope: !1557, file: !511, line: 590, baseType: !273, size: 32, offset: 20384)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "domeres", scope: !1557, file: !511, line: 593, baseType: !310, size: 16, offset: 20416)
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "domemode", scope: !1557, file: !511, line: 593, baseType: !310, size: 16, offset: 20432)
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "domeangle", scope: !1557, file: !511, line: 594, baseType: !310, size: 16, offset: 20448)
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "dometilt", scope: !1557, file: !511, line: 594, baseType: !310, size: 16, offset: 20464)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "domeresbuf", scope: !1557, file: !511, line: 595, baseType: !548, size: 32, offset: 20480)
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1557, file: !511, line: 596, baseType: !548, size: 32, offset: 20512)
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "dometext", scope: !1557, file: !511, line: 597, baseType: !1818, size: 64, offset: 20544)
!1818 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1819, size: 64)
!1819 = !DICompositeType(tag: DW_TAG_structure_type, name: "Text", file: !1820, line: 44, flags: DIFlagFwdDecl)
!1820 = !DIFile(filename: "blender/source/blender/makesdna/DNA_freestyle_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "line_thickness_mode", scope: !1557, file: !511, line: 600, baseType: !273, size: 32, offset: 20608)
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "unit_line_thickness", scope: !1557, file: !511, line: 601, baseType: !548, size: 32, offset: 20640)
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "engine", scope: !1557, file: !511, line: 604, baseType: !1824, size: 256, offset: 20672)
!1824 = !DICompositeType(tag: DW_TAG_array_type, baseType: !279, size: 256, elements: !1825)
!1825 = !{!1826}
!1826 = !DISubrange(count: 32)
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "bake", scope: !1557, file: !511, line: 607, baseType: !1828, size: 10880, offset: 20928)
!1828 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BakeData", file: !511, line: 364, size: 10880, elements: !1829)
!1829 = !{!1830, !1831, !1832, !1833, !1834, !1835, !1836, !1837, !1838, !1839, !1840, !1841, !1842}
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "im_format", scope: !1828, file: !511, line: 365, baseType: !1560, size: 1984)
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "filepath", scope: !1828, file: !511, line: 367, baseType: !475, size: 8192, offset: 1984)
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1828, file: !511, line: 369, baseType: !310, size: 16, offset: 10176)
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1828, file: !511, line: 369, baseType: !310, size: 16, offset: 10192)
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "margin", scope: !1828, file: !511, line: 370, baseType: !310, size: 16, offset: 10208)
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1828, file: !511, line: 370, baseType: !310, size: 16, offset: 10224)
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "cage_extrusion", scope: !1828, file: !511, line: 372, baseType: !548, size: 32, offset: 10240)
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1828, file: !511, line: 373, baseType: !548, size: 32, offset: 10272)
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "normal_swizzle", scope: !1828, file: !511, line: 375, baseType: !1329, size: 24, offset: 10304)
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "normal_space", scope: !1828, file: !511, line: 376, baseType: !279, size: 8, offset: 10328)
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "save_mode", scope: !1828, file: !511, line: 378, baseType: !279, size: 8, offset: 10336)
!1841 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1828, file: !511, line: 379, baseType: !1329, size: 24, offset: 10344)
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "cage", scope: !1828, file: !511, line: 381, baseType: !295, size: 512, offset: 10368)
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "preview_start_resolution", scope: !1557, file: !511, line: 609, baseType: !273, size: 32, offset: 31808)
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1557, file: !511, line: 610, baseType: !273, size: 32, offset: 31840)
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "audio", scope: !510, file: !511, line: 1252, baseType: !1846, size: 256, offset: 34112)
!1846 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AudioData", file: !511, line: 158, size: 256, elements: !1847)
!1847 = !{!1848, !1849, !1850, !1851, !1852, !1853, !1854, !1855, !1856}
!1848 = !DIDerivedType(tag: DW_TAG_member, name: "mixrate", scope: !1846, file: !511, line: 159, baseType: !273, size: 32)
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "main", scope: !1846, file: !511, line: 160, baseType: !548, size: 32, offset: 32)
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "speed_of_sound", scope: !1846, file: !511, line: 161, baseType: !548, size: 32, offset: 64)
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "doppler_factor", scope: !1846, file: !511, line: 162, baseType: !548, size: 32, offset: 96)
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "distance_model", scope: !1846, file: !511, line: 163, baseType: !273, size: 32, offset: 128)
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1846, file: !511, line: 164, baseType: !310, size: 16, offset: 160)
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1846, file: !511, line: 165, baseType: !310, size: 16, offset: 176)
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "volume", scope: !1846, file: !511, line: 166, baseType: !548, size: 32, offset: 192)
!1856 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1846, file: !511, line: 167, baseType: !548, size: 32, offset: 224)
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "markers", scope: !510, file: !511, line: 1254, baseType: !319, size: 128, offset: 34368)
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "transform_spaces", scope: !510, file: !511, line: 1255, baseType: !319, size: 128, offset: 34496)
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "sound_scene", scope: !510, file: !511, line: 1257, baseType: !272, size: 64, offset: 34624)
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "sound_scene_handle", scope: !510, file: !511, line: 1258, baseType: !272, size: 64, offset: 34688)
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "sound_scrub_handle", scope: !510, file: !511, line: 1259, baseType: !272, size: 64, offset: 34752)
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "speaker_handles", scope: !510, file: !511, line: 1260, baseType: !272, size: 64, offset: 34816)
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "fps_info", scope: !510, file: !511, line: 1262, baseType: !272, size: 64, offset: 34880)
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "theDag", scope: !510, file: !511, line: 1265, baseType: !1865, size: 64, offset: 34944)
!1865 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1866, size: 64)
!1866 = !DICompositeType(tag: DW_TAG_structure_type, name: "DagForest", file: !511, line: 1265, flags: DIFlagFwdDecl)
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "dagflags", scope: !510, file: !511, line: 1266, baseType: !310, size: 16, offset: 35008)
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !510, file: !511, line: 1267, baseType: !310, size: 16, offset: 35024)
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "active_keyingset", scope: !510, file: !511, line: 1270, baseType: !273, size: 32, offset: 35040)
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "keyingsets", scope: !510, file: !511, line: 1271, baseType: !319, size: 128, offset: 35072)
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "framing", scope: !510, file: !511, line: 1274, baseType: !1872, size: 128, offset: 35200)
!1872 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameFraming", file: !511, line: 650, size: 128, elements: !1873)
!1873 = !{!1874, !1875, !1876, !1877, !1878}
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !1872, file: !511, line: 651, baseType: !583, size: 96)
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1872, file: !511, line: 652, baseType: !279, size: 8, offset: 96)
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1872, file: !511, line: 652, baseType: !279, size: 8, offset: 104)
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1872, file: !511, line: 652, baseType: !279, size: 8, offset: 112)
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !1872, file: !511, line: 652, baseType: !279, size: 8, offset: 120)
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "gm", scope: !510, file: !511, line: 1275, baseType: !1880, size: 1472, offset: 35328)
!1880 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameData", file: !511, line: 676, size: 1472, elements: !1881)
!1881 = !{!1882, !1883, !1884, !1885, !1886, !1887, !1888, !1889, !1890, !1891, !1892, !1894, !1904, !1905, !1906, !1907, !1926, !1927, !1928, !1929, !1930, !1931, !1932, !1933, !1934, !1935, !1936, !1937, !1938, !1939, !1940, !1941, !1942, !1943, !1944, !1945}
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "framing", scope: !1880, file: !511, line: 679, baseType: !1872, size: 128)
!1883 = !DIDerivedType(tag: DW_TAG_member, name: "playerflag", scope: !1880, file: !511, line: 680, baseType: !310, size: 16, offset: 128)
!1884 = !DIDerivedType(tag: DW_TAG_member, name: "xplay", scope: !1880, file: !511, line: 680, baseType: !310, size: 16, offset: 144)
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "yplay", scope: !1880, file: !511, line: 680, baseType: !310, size: 16, offset: 160)
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "freqplay", scope: !1880, file: !511, line: 680, baseType: !310, size: 16, offset: 176)
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !1880, file: !511, line: 681, baseType: !310, size: 16, offset: 192)
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "attrib", scope: !1880, file: !511, line: 681, baseType: !310, size: 16, offset: 208)
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "rt1", scope: !1880, file: !511, line: 681, baseType: !310, size: 16, offset: 224)
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "rt2", scope: !1880, file: !511, line: 681, baseType: !310, size: 16, offset: 240)
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "aasamples", scope: !1880, file: !511, line: 682, baseType: !310, size: 16, offset: 256)
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !1880, file: !511, line: 682, baseType: !1893, size: 48, offset: 272)
!1893 = !DICompositeType(tag: DW_TAG_array_type, baseType: !310, size: 48, elements: !584)
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "dome", scope: !1880, file: !511, line: 685, baseType: !1895, size: 192, offset: 320)
!1895 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameDome", file: !511, line: 633, size: 192, elements: !1896)
!1896 = !{!1897, !1898, !1899, !1900, !1901, !1902, !1903}
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "res", scope: !1895, file: !511, line: 634, baseType: !310, size: 16)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1895, file: !511, line: 634, baseType: !310, size: 16, offset: 16)
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "angle", scope: !1895, file: !511, line: 635, baseType: !310, size: 16, offset: 32)
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "tilt", scope: !1895, file: !511, line: 635, baseType: !310, size: 16, offset: 48)
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "resbuf", scope: !1895, file: !511, line: 636, baseType: !548, size: 32, offset: 64)
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1895, file: !511, line: 636, baseType: !548, size: 32, offset: 96)
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "warptext", scope: !1895, file: !511, line: 637, baseType: !1818, size: 64, offset: 128)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "stereoflag", scope: !1880, file: !511, line: 686, baseType: !310, size: 16, offset: 512)
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "stereomode", scope: !1880, file: !511, line: 686, baseType: !310, size: 16, offset: 528)
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "eyeseparation", scope: !1880, file: !511, line: 687, baseType: !548, size: 32, offset: 544)
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "recastData", scope: !1880, file: !511, line: 688, baseType: !1908, size: 448, offset: 576)
!1908 = !DIDerivedType(tag: DW_TAG_typedef, name: "RecastData", file: !511, line: 674, baseType: !1909)
!1909 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RecastData", file: !511, line: 659, size: 448, elements: !1910)
!1910 = !{!1911, !1912, !1913, !1914, !1915, !1916, !1917, !1918, !1919, !1920, !1921, !1922, !1923, !1924, !1925}
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "cellsize", scope: !1909, file: !511, line: 660, baseType: !548, size: 32)
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "cellheight", scope: !1909, file: !511, line: 661, baseType: !548, size: 32, offset: 32)
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "agentmaxslope", scope: !1909, file: !511, line: 662, baseType: !548, size: 32, offset: 64)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "agentmaxclimb", scope: !1909, file: !511, line: 663, baseType: !548, size: 32, offset: 96)
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "agentheight", scope: !1909, file: !511, line: 664, baseType: !548, size: 32, offset: 128)
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "agentradius", scope: !1909, file: !511, line: 665, baseType: !548, size: 32, offset: 160)
!1917 = !DIDerivedType(tag: DW_TAG_member, name: "edgemaxlen", scope: !1909, file: !511, line: 666, baseType: !548, size: 32, offset: 192)
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "edgemaxerror", scope: !1909, file: !511, line: 667, baseType: !548, size: 32, offset: 224)
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "regionminsize", scope: !1909, file: !511, line: 668, baseType: !548, size: 32, offset: 256)
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "regionmergesize", scope: !1909, file: !511, line: 669, baseType: !548, size: 32, offset: 288)
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "vertsperpoly", scope: !1909, file: !511, line: 670, baseType: !273, size: 32, offset: 320)
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "detailsampledist", scope: !1909, file: !511, line: 671, baseType: !548, size: 32, offset: 352)
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "detailsamplemaxerror", scope: !1909, file: !511, line: 672, baseType: !548, size: 32, offset: 384)
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1909, file: !511, line: 673, baseType: !310, size: 16, offset: 416)
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1909, file: !511, line: 673, baseType: !310, size: 16, offset: 432)
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "gravity", scope: !1880, file: !511, line: 692, baseType: !548, size: 32, offset: 1024)
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "activityBoxRadius", scope: !1880, file: !511, line: 697, baseType: !548, size: 32, offset: 1056)
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1880, file: !511, line: 703, baseType: !273, size: 32, offset: 1088)
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1880, file: !511, line: 704, baseType: !310, size: 16, offset: 1120)
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "matmode", scope: !1880, file: !511, line: 704, baseType: !310, size: 16, offset: 1136)
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "occlusionRes", scope: !1880, file: !511, line: 705, baseType: !310, size: 16, offset: 1152)
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "physicsEngine", scope: !1880, file: !511, line: 706, baseType: !310, size: 16, offset: 1168)
!1933 = !DIDerivedType(tag: DW_TAG_member, name: "exitkey", scope: !1880, file: !511, line: 707, baseType: !310, size: 16, offset: 1184)
!1934 = !DIDerivedType(tag: DW_TAG_member, name: "vsync", scope: !1880, file: !511, line: 708, baseType: !310, size: 16, offset: 1200)
!1935 = !DIDerivedType(tag: DW_TAG_member, name: "ticrate", scope: !1880, file: !511, line: 709, baseType: !310, size: 16, offset: 1216)
!1936 = !DIDerivedType(tag: DW_TAG_member, name: "maxlogicstep", scope: !1880, file: !511, line: 709, baseType: !310, size: 16, offset: 1232)
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "physubstep", scope: !1880, file: !511, line: 709, baseType: !310, size: 16, offset: 1248)
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "maxphystep", scope: !1880, file: !511, line: 709, baseType: !310, size: 16, offset: 1264)
!1939 = !DIDerivedType(tag: DW_TAG_member, name: "obstacleSimulation", scope: !1880, file: !511, line: 710, baseType: !310, size: 16, offset: 1280)
!1940 = !DIDerivedType(tag: DW_TAG_member, name: "raster_storage", scope: !1880, file: !511, line: 711, baseType: !310, size: 16, offset: 1296)
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "levelHeight", scope: !1880, file: !511, line: 712, baseType: !548, size: 32, offset: 1312)
!1942 = !DIDerivedType(tag: DW_TAG_member, name: "deactivationtime", scope: !1880, file: !511, line: 713, baseType: !548, size: 32, offset: 1344)
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "lineardeactthreshold", scope: !1880, file: !511, line: 713, baseType: !548, size: 32, offset: 1376)
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "angulardeactthreshold", scope: !1880, file: !511, line: 713, baseType: !548, size: 32, offset: 1408)
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1880, file: !511, line: 713, baseType: !548, size: 32, offset: 1440)
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "unit", scope: !510, file: !511, line: 1278, baseType: !1947, size: 64, offset: 36800)
!1947 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "UnitSettings", file: !511, line: 1197, size: 64, elements: !1948)
!1948 = !{!1949, !1950, !1951, !1952}
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "scale_length", scope: !1947, file: !511, line: 1199, baseType: !548, size: 32)
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "system", scope: !1947, file: !511, line: 1200, baseType: !279, size: 8, offset: 32)
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "system_rotation", scope: !1947, file: !511, line: 1201, baseType: !279, size: 8, offset: 40)
!1952 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1947, file: !511, line: 1202, baseType: !310, size: 16, offset: 48)
!1953 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !510, file: !511, line: 1281, baseType: !614, size: 64, offset: 36864)
!1954 = !DIDerivedType(tag: DW_TAG_member, name: "physics_settings", scope: !510, file: !511, line: 1284, baseType: !1955, size: 192, offset: 36928)
!1955 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PhysicsSettings", file: !511, line: 1208, size: 192, elements: !1956)
!1956 = !{!1957, !1958, !1959, !1960}
!1957 = !DIDerivedType(tag: DW_TAG_member, name: "gravity", scope: !1955, file: !511, line: 1209, baseType: !583, size: 96)
!1958 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1955, file: !511, line: 1210, baseType: !273, size: 32, offset: 96)
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "quick_cache_step", scope: !1955, file: !511, line: 1210, baseType: !273, size: 32, offset: 128)
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !1955, file: !511, line: 1210, baseType: !273, size: 32, offset: 160)
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "clip", scope: !510, file: !511, line: 1287, baseType: !1026, size: 64, offset: 37120)
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "customdata_mask", scope: !510, file: !511, line: 1289, baseType: !756, size: 64, offset: 37184)
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "customdata_mask_modal", scope: !510, file: !511, line: 1290, baseType: !756, size: 64, offset: 37248)
!1964 = !DIDerivedType(tag: DW_TAG_member, name: "view_settings", scope: !510, file: !511, line: 1293, baseType: !1580, size: 1280, offset: 37312)
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "display_settings", scope: !510, file: !511, line: 1294, baseType: !1630, size: 512, offset: 38592)
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "sequencer_colorspace_settings", scope: !510, file: !511, line: 1295, baseType: !1017, size: 512, offset: 39104)
!1967 = !DIDerivedType(tag: DW_TAG_member, name: "rigidbody_world", scope: !510, file: !511, line: 1298, baseType: !1968, size: 64, offset: 39616)
!1968 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1969, size: 64)
!1969 = !DICompositeType(tag: DW_TAG_structure_type, name: "RigidBodyWorld", file: !511, line: 1298, flags: DIFlagFwdDecl)
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "newscene", scope: !501, file: !255, line: 58, baseType: !509, size: 64, offset: 1536)
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "redraws_flag", scope: !501, file: !255, line: 60, baseType: !273, size: 32, offset: 1600)
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !501, file: !255, line: 61, baseType: !273, size: 32, offset: 1632)
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !501, file: !255, line: 63, baseType: !310, size: 16, offset: 1664)
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "temp", scope: !501, file: !255, line: 64, baseType: !310, size: 16, offset: 1680)
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "winid", scope: !501, file: !255, line: 65, baseType: !310, size: 16, offset: 1696)
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "do_draw", scope: !501, file: !255, line: 66, baseType: !310, size: 16, offset: 1712)
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "do_refresh", scope: !501, file: !255, line: 67, baseType: !310, size: 16, offset: 1728)
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "do_draw_gesture", scope: !501, file: !255, line: 68, baseType: !310, size: 16, offset: 1744)
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "do_draw_paintcursor", scope: !501, file: !255, line: 69, baseType: !310, size: 16, offset: 1760)
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "do_draw_drag", scope: !501, file: !255, line: 70, baseType: !310, size: 16, offset: 1776)
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "swap", scope: !501, file: !255, line: 71, baseType: !310, size: 16, offset: 1792)
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "mainwin", scope: !501, file: !255, line: 73, baseType: !310, size: 16, offset: 1808)
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "subwinactive", scope: !501, file: !255, line: 74, baseType: !310, size: 16, offset: 1824)
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !501, file: !255, line: 76, baseType: !310, size: 16, offset: 1840)
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "animtimer", scope: !501, file: !255, line: 78, baseType: !1986, size: 64, offset: 1856)
!1986 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1987, size: 64)
!1987 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmTimer", file: !240, line: 490, size: 768, elements: !1988)
!1988 = !{!1989, !1990, !1991, !1992, !1994, !1995, !1996, !1997, !1998, !1999, !2000, !2001}
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1987, file: !240, line: 491, baseType: !1986, size: 64)
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1987, file: !240, line: 491, baseType: !1986, size: 64, offset: 64)
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "win", scope: !1987, file: !240, line: 493, baseType: !493, size: 64, offset: 128)
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "timestep", scope: !1987, file: !240, line: 495, baseType: !1993, size: 64, offset: 192)
!1993 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "event_type", scope: !1987, file: !240, line: 496, baseType: !273, size: 32, offset: 256)
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "customdata", scope: !1987, file: !240, line: 497, baseType: !272, size: 64, offset: 320)
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "duration", scope: !1987, file: !240, line: 499, baseType: !1993, size: 64, offset: 384)
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !1987, file: !240, line: 500, baseType: !1993, size: 64, offset: 448)
!1998 = !DIDerivedType(tag: DW_TAG_member, name: "ltime", scope: !1987, file: !240, line: 502, baseType: !1993, size: 64, offset: 512)
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "ntime", scope: !1987, file: !240, line: 503, baseType: !1993, size: 64, offset: 576)
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !1987, file: !240, line: 504, baseType: !1993, size: 64, offset: 640)
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "sleep", scope: !1987, file: !240, line: 505, baseType: !273, size: 32, offset: 704)
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !501, file: !255, line: 79, baseType: !272, size: 64, offset: 1920)
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "newscreen", scope: !494, file: !208, line: 175, baseType: !500, size: 64, offset: 256)
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "screenname", scope: !494, file: !208, line: 176, baseType: !295, size: 512, offset: 320)
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "posx", scope: !494, file: !208, line: 178, baseType: !310, size: 16, offset: 832)
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "posy", scope: !494, file: !208, line: 178, baseType: !310, size: 16, offset: 848)
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "sizex", scope: !494, file: !208, line: 178, baseType: !310, size: 16, offset: 864)
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "sizey", scope: !494, file: !208, line: 178, baseType: !310, size: 16, offset: 880)
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "windowstate", scope: !494, file: !208, line: 179, baseType: !310, size: 16, offset: 896)
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "monitor", scope: !494, file: !208, line: 180, baseType: !310, size: 16, offset: 912)
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !494, file: !208, line: 181, baseType: !310, size: 16, offset: 928)
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "cursor", scope: !494, file: !208, line: 182, baseType: !310, size: 16, offset: 944)
!2013 = !DIDerivedType(tag: DW_TAG_member, name: "lastcursor", scope: !494, file: !208, line: 183, baseType: !310, size: 16, offset: 960)
!2014 = !DIDerivedType(tag: DW_TAG_member, name: "modalcursor", scope: !494, file: !208, line: 184, baseType: !310, size: 16, offset: 976)
!2015 = !DIDerivedType(tag: DW_TAG_member, name: "grabcursor", scope: !494, file: !208, line: 185, baseType: !310, size: 16, offset: 992)
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "addmousemove", scope: !494, file: !208, line: 186, baseType: !310, size: 16, offset: 1008)
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "winid", scope: !494, file: !208, line: 188, baseType: !273, size: 32, offset: 1024)
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "lock_pie_event", scope: !494, file: !208, line: 190, baseType: !310, size: 16, offset: 1056)
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "last_pie_event", scope: !494, file: !208, line: 191, baseType: !310, size: 16, offset: 1072)
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "eventstate", scope: !494, file: !208, line: 194, baseType: !2021, size: 64, offset: 1088)
!2021 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2022, size: 64)
!2022 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmEvent", file: !240, line: 421, size: 960, elements: !2023)
!2023 = !{!2024, !2025, !2026, !2027, !2028, !2029, !2030, !2031, !2032, !2033, !2034, !2035, !2036, !2037, !2038, !2039, !2040, !2041, !2042, !2043, !2044, !2045, !2046, !2047, !2050, !2058, !2059, !2060, !2061}
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2022, file: !240, line: 422, baseType: !2021, size: 64)
!2025 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2022, file: !240, line: 422, baseType: !2021, size: 64, offset: 64)
!2026 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2022, file: !240, line: 424, baseType: !310, size: 16, offset: 128)
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !2022, file: !240, line: 425, baseType: !310, size: 16, offset: 144)
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !2022, file: !240, line: 426, baseType: !273, size: 32, offset: 160)
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !2022, file: !240, line: 426, baseType: !273, size: 32, offset: 192)
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "mval", scope: !2022, file: !240, line: 427, baseType: !1036, size: 64, offset: 224)
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "utf8_buf", scope: !2022, file: !240, line: 428, baseType: !1576, size: 48, offset: 288)
!2032 = !DIDerivedType(tag: DW_TAG_member, name: "ascii", scope: !2022, file: !240, line: 431, baseType: !279, size: 8, offset: 336)
!2033 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2022, file: !240, line: 432, baseType: !279, size: 8, offset: 344)
!2034 = !DIDerivedType(tag: DW_TAG_member, name: "prevtype", scope: !2022, file: !240, line: 435, baseType: !310, size: 16, offset: 352)
!2035 = !DIDerivedType(tag: DW_TAG_member, name: "prevval", scope: !2022, file: !240, line: 436, baseType: !310, size: 16, offset: 368)
!2036 = !DIDerivedType(tag: DW_TAG_member, name: "prevx", scope: !2022, file: !240, line: 437, baseType: !273, size: 32, offset: 384)
!2037 = !DIDerivedType(tag: DW_TAG_member, name: "prevy", scope: !2022, file: !240, line: 437, baseType: !273, size: 32, offset: 416)
!2038 = !DIDerivedType(tag: DW_TAG_member, name: "prevclicktime", scope: !2022, file: !240, line: 438, baseType: !1993, size: 64, offset: 448)
!2039 = !DIDerivedType(tag: DW_TAG_member, name: "prevclickx", scope: !2022, file: !240, line: 439, baseType: !273, size: 32, offset: 512)
!2040 = !DIDerivedType(tag: DW_TAG_member, name: "prevclicky", scope: !2022, file: !240, line: 439, baseType: !273, size: 32, offset: 544)
!2041 = !DIDerivedType(tag: DW_TAG_member, name: "shift", scope: !2022, file: !240, line: 442, baseType: !310, size: 16, offset: 576)
!2042 = !DIDerivedType(tag: DW_TAG_member, name: "ctrl", scope: !2022, file: !240, line: 442, baseType: !310, size: 16, offset: 592)
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "alt", scope: !2022, file: !240, line: 442, baseType: !310, size: 16, offset: 608)
!2044 = !DIDerivedType(tag: DW_TAG_member, name: "oskey", scope: !2022, file: !240, line: 442, baseType: !310, size: 16, offset: 624)
!2045 = !DIDerivedType(tag: DW_TAG_member, name: "keymodifier", scope: !2022, file: !240, line: 443, baseType: !310, size: 16, offset: 640)
!2046 = !DIDerivedType(tag: DW_TAG_member, name: "check_click", scope: !2022, file: !240, line: 446, baseType: !310, size: 16, offset: 656)
!2047 = !DIDerivedType(tag: DW_TAG_member, name: "keymap_idname", scope: !2022, file: !240, line: 449, baseType: !2048, size: 64, offset: 704)
!2048 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2049, size: 64)
!2049 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !279)
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "tablet_data", scope: !2022, file: !240, line: 452, baseType: !2051, size: 64, offset: 768)
!2051 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2052, size: 64)
!2052 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmTabletData", file: !240, line: 463, size: 128, elements: !2053)
!2053 = !{!2054, !2055, !2056, !2057}
!2054 = !DIDerivedType(tag: DW_TAG_member, name: "Active", scope: !2052, file: !240, line: 464, baseType: !273, size: 32)
!2055 = !DIDerivedType(tag: DW_TAG_member, name: "Pressure", scope: !2052, file: !240, line: 465, baseType: !548, size: 32, offset: 32)
!2056 = !DIDerivedType(tag: DW_TAG_member, name: "Xtilt", scope: !2052, file: !240, line: 466, baseType: !548, size: 32, offset: 64)
!2057 = !DIDerivedType(tag: DW_TAG_member, name: "Ytilt", scope: !2052, file: !240, line: 467, baseType: !548, size: 32, offset: 96)
!2058 = !DIDerivedType(tag: DW_TAG_member, name: "custom", scope: !2022, file: !240, line: 455, baseType: !310, size: 16, offset: 832)
!2059 = !DIDerivedType(tag: DW_TAG_member, name: "customdatafree", scope: !2022, file: !240, line: 456, baseType: !310, size: 16, offset: 848)
!2060 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2022, file: !240, line: 457, baseType: !273, size: 32, offset: 864)
!2061 = !DIDerivedType(tag: DW_TAG_member, name: "customdata", scope: !2022, file: !240, line: 458, baseType: !272, size: 64, offset: 896)
!2062 = !DIDerivedType(tag: DW_TAG_member, name: "curswin", scope: !494, file: !208, line: 196, baseType: !2063, size: 64, offset: 1152)
!2063 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2064, size: 64)
!2064 = !DICompositeType(tag: DW_TAG_structure_type, name: "wmSubWindow", file: !208, line: 55, flags: DIFlagFwdDecl)
!2065 = !DIDerivedType(tag: DW_TAG_member, name: "tweak", scope: !494, file: !208, line: 198, baseType: !2066, size: 64, offset: 1216)
!2066 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2067, size: 64)
!2067 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmGesture", file: !240, line: 398, size: 448, elements: !2068)
!2068 = !{!2069, !2070, !2071, !2072, !2073, !2074, !2075, !2076, !2077, !2078}
!2069 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2067, file: !240, line: 399, baseType: !2066, size: 64)
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2067, file: !240, line: 399, baseType: !2066, size: 64, offset: 64)
!2071 = !DIDerivedType(tag: DW_TAG_member, name: "event_type", scope: !2067, file: !240, line: 400, baseType: !273, size: 32, offset: 128)
!2072 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2067, file: !240, line: 401, baseType: !273, size: 32, offset: 160)
!2073 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2067, file: !240, line: 402, baseType: !273, size: 32, offset: 192)
!2074 = !DIDerivedType(tag: DW_TAG_member, name: "swinid", scope: !2067, file: !240, line: 403, baseType: !273, size: 32, offset: 224)
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "points", scope: !2067, file: !240, line: 404, baseType: !273, size: 32, offset: 256)
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2067, file: !240, line: 405, baseType: !273, size: 32, offset: 288)
!2077 = !DIDerivedType(tag: DW_TAG_member, name: "customdata", scope: !2067, file: !240, line: 407, baseType: !272, size: 64, offset: 320)
!2078 = !DIDerivedType(tag: DW_TAG_member, name: "userdata", scope: !2067, file: !240, line: 414, baseType: !272, size: 64, offset: 384)
!2079 = !DIDerivedType(tag: DW_TAG_member, name: "drawmethod", scope: !494, file: !208, line: 200, baseType: !273, size: 32, offset: 1280)
!2080 = !DIDerivedType(tag: DW_TAG_member, name: "drawfail", scope: !494, file: !208, line: 200, baseType: !273, size: 32, offset: 1312)
!2081 = !DIDerivedType(tag: DW_TAG_member, name: "drawdata", scope: !494, file: !208, line: 201, baseType: !272, size: 64, offset: 1344)
!2082 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !494, file: !208, line: 203, baseType: !319, size: 128, offset: 1408)
!2083 = !DIDerivedType(tag: DW_TAG_member, name: "handlers", scope: !494, file: !208, line: 204, baseType: !319, size: 128, offset: 1536)
!2084 = !DIDerivedType(tag: DW_TAG_member, name: "modalhandlers", scope: !494, file: !208, line: 205, baseType: !319, size: 128, offset: 1664)
!2085 = !DIDerivedType(tag: DW_TAG_member, name: "subwindows", scope: !494, file: !208, line: 207, baseType: !319, size: 128, offset: 1792)
!2086 = !DIDerivedType(tag: DW_TAG_member, name: "gesture", scope: !494, file: !208, line: 208, baseType: !319, size: 128, offset: 1920)
!2087 = !DIDerivedType(tag: DW_TAG_member, name: "winactive", scope: !454, file: !208, line: 131, baseType: !493, size: 64, offset: 1024)
!2088 = !DIDerivedType(tag: DW_TAG_member, name: "windows", scope: !454, file: !208, line: 132, baseType: !319, size: 128, offset: 1088)
!2089 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !454, file: !208, line: 134, baseType: !273, size: 32, offset: 1216)
!2090 = !DIDerivedType(tag: DW_TAG_member, name: "file_saved", scope: !454, file: !208, line: 135, baseType: !310, size: 16, offset: 1248)
!2091 = !DIDerivedType(tag: DW_TAG_member, name: "op_undo_depth", scope: !454, file: !208, line: 136, baseType: !310, size: 16, offset: 1264)
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "operators", scope: !454, file: !208, line: 138, baseType: !319, size: 128, offset: 1280)
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !454, file: !208, line: 140, baseType: !319, size: 128, offset: 1408)
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "reports", scope: !454, file: !208, line: 142, baseType: !2095, size: 320, offset: 1536)
!2095 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ReportList", file: !208, line: 106, size: 320, elements: !2096)
!2096 = !{!2097, !2098, !2099, !2100, !2101, !2102}
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !2095, file: !208, line: 107, baseType: !319, size: 128)
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "printlevel", scope: !2095, file: !208, line: 108, baseType: !273, size: 32, offset: 128)
!2099 = !DIDerivedType(tag: DW_TAG_member, name: "storelevel", scope: !2095, file: !208, line: 109, baseType: !273, size: 32, offset: 160)
!2100 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2095, file: !208, line: 110, baseType: !273, size: 32, offset: 192)
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2095, file: !208, line: 110, baseType: !273, size: 32, offset: 224)
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "reporttimer", scope: !2095, file: !208, line: 111, baseType: !1986, size: 64, offset: 256)
!2103 = !DIDerivedType(tag: DW_TAG_member, name: "jobs", scope: !454, file: !208, line: 144, baseType: !319, size: 128, offset: 1856)
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "paintcursors", scope: !454, file: !208, line: 146, baseType: !319, size: 128, offset: 1984)
!2105 = !DIDerivedType(tag: DW_TAG_member, name: "drags", scope: !454, file: !208, line: 148, baseType: !319, size: 128, offset: 2112)
!2106 = !DIDerivedType(tag: DW_TAG_member, name: "keyconfigs", scope: !454, file: !208, line: 150, baseType: !319, size: 128, offset: 2240)
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "defaultconf", scope: !454, file: !208, line: 151, baseType: !445, size: 64, offset: 2368)
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "addonconf", scope: !454, file: !208, line: 152, baseType: !445, size: 64, offset: 2432)
!2109 = !DIDerivedType(tag: DW_TAG_member, name: "userconf", scope: !454, file: !208, line: 153, baseType: !445, size: 64, offset: 2496)
!2110 = !DIDerivedType(tag: DW_TAG_member, name: "timers", scope: !454, file: !208, line: 155, baseType: !319, size: 128, offset: 2560)
!2111 = !DIDerivedType(tag: DW_TAG_member, name: "autosavetimer", scope: !454, file: !208, line: 156, baseType: !1986, size: 64, offset: 2688)
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "is_interface_locked", scope: !454, file: !208, line: 158, baseType: !279, size: 8, offset: 2752)
!2113 = !DIDerivedType(tag: DW_TAG_member, name: "par", scope: !454, file: !208, line: 159, baseType: !1258, size: 56, offset: 2760)
!2114 = !DILocalVariable(name: "wm", arg: 1, scope: !437, file: !3, line: 247, type: !452)
!2115 = !DILocation(line: 247, column: 48, scope: !437)
!2116 = !DILocalVariable(name: "idname", arg: 2, scope: !437, file: !3, line: 247, type: !2048)
!2117 = !DILocation(line: 247, column: 64, scope: !437)
!2118 = !DILocalVariable(name: "keyconf", scope: !437, file: !3, line: 249, type: !440)
!2119 = !DILocation(line: 249, column: 15, scope: !437)
!2120 = !DILocation(line: 251, column: 12, scope: !437)
!2121 = !DILocation(line: 251, column: 10, scope: !437)
!2122 = !DILocation(line: 252, column: 14, scope: !437)
!2123 = !DILocation(line: 252, column: 23, scope: !437)
!2124 = !DILocation(line: 252, column: 31, scope: !437)
!2125 = !DILocation(line: 252, column: 2, scope: !437)
!2126 = !DILocation(line: 253, column: 15, scope: !437)
!2127 = !DILocation(line: 253, column: 19, scope: !437)
!2128 = !DILocation(line: 253, column: 31, scope: !437)
!2129 = !DILocation(line: 253, column: 2, scope: !437)
!2130 = !DILocation(line: 255, column: 9, scope: !437)
!2131 = !DILocation(line: 255, column: 2, scope: !437)
!2132 = distinct !DISubprogram(name: "WM_keyconfig_new_user", scope: !3, file: !3, line: 258, type: !438, scopeLine: 259, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !356)
!2133 = !DILocalVariable(name: "wm", arg: 1, scope: !2132, file: !3, line: 258, type: !452)
!2134 = !DILocation(line: 258, column: 53, scope: !2132)
!2135 = !DILocalVariable(name: "idname", arg: 2, scope: !2132, file: !3, line: 258, type: !2048)
!2136 = !DILocation(line: 258, column: 69, scope: !2132)
!2137 = !DILocalVariable(name: "keyconf", scope: !2132, file: !3, line: 260, type: !440)
!2138 = !DILocation(line: 260, column: 15, scope: !2132)
!2139 = !DILocation(line: 260, column: 42, scope: !2132)
!2140 = !DILocation(line: 260, column: 46, scope: !2132)
!2141 = !DILocation(line: 260, column: 25, scope: !2132)
!2142 = !DILocation(line: 262, column: 2, scope: !2132)
!2143 = !DILocation(line: 262, column: 11, scope: !2132)
!2144 = !DILocation(line: 262, column: 16, scope: !2132)
!2145 = !DILocation(line: 264, column: 9, scope: !2132)
!2146 = !DILocation(line: 264, column: 2, scope: !2132)
!2147 = distinct !DISubprogram(name: "WM_keyconfig_remove", scope: !3, file: !3, line: 267, type: !2148, scopeLine: 268, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !356)
!2148 = !DISubroutineType(types: !2149)
!2149 = !{!1360, !452, !440}
!2150 = !DILocalVariable(name: "wm", arg: 1, scope: !2147, file: !3, line: 267, type: !452)
!2151 = !DILocation(line: 267, column: 43, scope: !2147)
!2152 = !DILocalVariable(name: "keyconf", arg: 2, scope: !2147, file: !3, line: 267, type: !440)
!2153 = !DILocation(line: 267, column: 60, scope: !2147)
!2154 = !DILocation(line: 269, column: 21, scope: !2155)
!2155 = distinct !DILexicalBlock(scope: !2147, file: !3, line: 269, column: 6)
!2156 = !DILocation(line: 269, column: 25, scope: !2155)
!2157 = !DILocation(line: 269, column: 37, scope: !2155)
!2158 = !DILocation(line: 269, column: 6, scope: !2155)
!2159 = !DILocation(line: 269, column: 46, scope: !2155)
!2160 = !DILocation(line: 269, column: 6, scope: !2147)
!2161 = !DILocation(line: 270, column: 31, scope: !2162)
!2162 = distinct !DILexicalBlock(scope: !2163, file: !3, line: 270, column: 7)
!2163 = distinct !DILexicalBlock(scope: !2155, file: !3, line: 269, column: 53)
!2164 = !DILocation(line: 270, column: 40, scope: !2162)
!2165 = !DILocation(line: 270, column: 7, scope: !2162)
!2166 = !DILocation(line: 270, column: 72, scope: !2162)
!2167 = !DILocation(line: 270, column: 7, scope: !2163)
!2168 = !DILocation(line: 271, column: 32, scope: !2169)
!2169 = distinct !DILexicalBlock(scope: !2162, file: !3, line: 270, column: 78)
!2170 = !DILocation(line: 271, column: 36, scope: !2169)
!2171 = !DILocation(line: 271, column: 49, scope: !2169)
!2172 = !DILocation(line: 271, column: 4, scope: !2169)
!2173 = !DILocation(line: 272, column: 4, scope: !2169)
!2174 = !DILocation(line: 273, column: 3, scope: !2169)
!2175 = !DILocation(line: 275, column: 16, scope: !2163)
!2176 = !DILocation(line: 275, column: 20, scope: !2163)
!2177 = !DILocation(line: 275, column: 32, scope: !2163)
!2178 = !DILocation(line: 275, column: 3, scope: !2163)
!2179 = !DILocation(line: 276, column: 21, scope: !2163)
!2180 = !DILocation(line: 276, column: 3, scope: !2163)
!2181 = !DILocation(line: 278, column: 3, scope: !2163)
!2182 = !DILocation(line: 281, column: 3, scope: !2183)
!2183 = distinct !DILexicalBlock(scope: !2155, file: !3, line: 280, column: 7)
!2184 = !DILocation(line: 283, column: 1, scope: !2147)
!2185 = distinct !DISubprogram(name: "WM_keyconfig_update_tag", scope: !3, file: !3, line: 1162, type: !2186, scopeLine: 1163, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !356)
!2186 = !DISubroutineType(types: !2187)
!2187 = !{null, !2188, !287}
!2188 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2189, size: 64)
!2189 = !DIDerivedType(tag: DW_TAG_typedef, name: "wmKeyMap", file: !208, line: 297, baseType: !2190)
!2190 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmKeyMap", file: !208, line: 281, size: 1088, elements: !2191)
!2191 = !{!2192, !2194, !2195, !2196, !2197, !2198, !2199, !2200, !2201, !2202, !2207}
!2192 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2190, file: !208, line: 282, baseType: !2193, size: 64)
!2193 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2190, size: 64)
!2194 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2190, file: !208, line: 282, baseType: !2193, size: 64, offset: 64)
!2195 = !DIDerivedType(tag: DW_TAG_member, name: "items", scope: !2190, file: !208, line: 284, baseType: !319, size: 128, offset: 128)
!2196 = !DIDerivedType(tag: DW_TAG_member, name: "diff_items", scope: !2190, file: !208, line: 285, baseType: !319, size: 128, offset: 256)
!2197 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !2190, file: !208, line: 287, baseType: !295, size: 512, offset: 384)
!2198 = !DIDerivedType(tag: DW_TAG_member, name: "spaceid", scope: !2190, file: !208, line: 288, baseType: !310, size: 16, offset: 896)
!2199 = !DIDerivedType(tag: DW_TAG_member, name: "regionid", scope: !2190, file: !208, line: 289, baseType: !310, size: 16, offset: 912)
!2200 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2190, file: !208, line: 291, baseType: !310, size: 16, offset: 928)
!2201 = !DIDerivedType(tag: DW_TAG_member, name: "kmi_id", scope: !2190, file: !208, line: 292, baseType: !310, size: 16, offset: 944)
!2202 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !2190, file: !208, line: 295, baseType: !2203, size: 64, offset: 960)
!2203 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2204, size: 64)
!2204 = !DISubroutineType(types: !2205)
!2205 = !{!273, !2206}
!2206 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !277, size: 64)
!2207 = !DIDerivedType(tag: DW_TAG_member, name: "modal_items", scope: !2190, file: !208, line: 296, baseType: !272, size: 64, offset: 1024)
!2208 = !DILocalVariable(name: "km", arg: 1, scope: !2185, file: !3, line: 1162, type: !2188)
!2209 = !DILocation(line: 1162, column: 40, scope: !2185)
!2210 = !DILocalVariable(name: "kmi", arg: 2, scope: !2185, file: !3, line: 1162, type: !287)
!2211 = !DILocation(line: 1162, column: 58, scope: !2185)
!2212 = !DILocation(line: 1165, column: 24, scope: !2185)
!2213 = !DILocation(line: 1167, column: 6, scope: !2214)
!2214 = distinct !DILexicalBlock(scope: !2185, file: !3, line: 1167, column: 6)
!2215 = !DILocation(line: 1167, column: 6, scope: !2185)
!2216 = !DILocation(line: 1168, column: 3, scope: !2214)
!2217 = !DILocation(line: 1168, column: 7, scope: !2214)
!2218 = !DILocation(line: 1168, column: 12, scope: !2214)
!2219 = !DILocation(line: 1169, column: 6, scope: !2220)
!2220 = distinct !DILexicalBlock(scope: !2185, file: !3, line: 1169, column: 6)
!2221 = !DILocation(line: 1169, column: 6, scope: !2185)
!2222 = !DILocation(line: 1170, column: 3, scope: !2220)
!2223 = !DILocation(line: 1170, column: 8, scope: !2220)
!2224 = !DILocation(line: 1170, column: 13, scope: !2220)
!2225 = !DILocation(line: 1171, column: 1, scope: !2185)
!2226 = distinct !DISubprogram(name: "WM_keyconfig_free", scope: !3, file: !3, line: 285, type: !2227, scopeLine: 286, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !356)
!2227 = !DISubroutineType(types: !2228)
!2228 = !{null, !440}
!2229 = !DILocalVariable(name: "keyconf", arg: 1, scope: !2226, file: !3, line: 285, type: !440)
!2230 = !DILocation(line: 285, column: 37, scope: !2226)
!2231 = !DILocalVariable(name: "km", scope: !2226, file: !3, line: 287, type: !2188)
!2232 = !DILocation(line: 287, column: 12, scope: !2226)
!2233 = !DILocation(line: 289, column: 2, scope: !2226)
!2234 = !DILocation(line: 289, column: 15, scope: !2226)
!2235 = !DILocation(line: 289, column: 24, scope: !2226)
!2236 = !DILocation(line: 289, column: 32, scope: !2226)
!2237 = !DILocation(line: 289, column: 13, scope: !2226)
!2238 = !DILocation(line: 290, column: 18, scope: !2239)
!2239 = distinct !DILexicalBlock(scope: !2226, file: !3, line: 289, column: 40)
!2240 = !DILocation(line: 290, column: 3, scope: !2239)
!2241 = !DILocation(line: 291, column: 18, scope: !2239)
!2242 = !DILocation(line: 291, column: 27, scope: !2239)
!2243 = !DILocation(line: 291, column: 36, scope: !2239)
!2244 = !DILocation(line: 291, column: 3, scope: !2239)
!2245 = distinct !{!2245, !2233, !2246}
!2246 = !DILocation(line: 292, column: 2, scope: !2226)
!2247 = !DILocation(line: 294, column: 2, scope: !2226)
!2248 = !DILocation(line: 294, column: 12, scope: !2226)
!2249 = !DILocation(line: 295, column: 1, scope: !2226)
!2250 = distinct !DISubprogram(name: "WM_keymap_free", scope: !3, file: !3, line: 361, type: !2251, scopeLine: 362, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !356)
!2251 = !DISubroutineType(types: !2252)
!2252 = !{null, !2188}
!2253 = !DILocalVariable(name: "keymap", arg: 1, scope: !2250, file: !3, line: 361, type: !2188)
!2254 = !DILocation(line: 361, column: 31, scope: !2250)
!2255 = !DILocalVariable(name: "kmi", scope: !2250, file: !3, line: 363, type: !287)
!2256 = !DILocation(line: 363, column: 16, scope: !2250)
!2257 = !DILocalVariable(name: "kmdi", scope: !2250, file: !3, line: 364, type: !2258)
!2258 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2259, size: 64)
!2259 = !DIDerivedType(tag: DW_TAG_typedef, name: "wmKeyMapDiffItem", file: !208, line: 260, baseType: !2260)
!2260 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmKeyMapDiffItem", file: !208, line: 255, size: 256, elements: !2261)
!2261 = !{!2262, !2264, !2265, !2266}
!2262 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2260, file: !208, line: 256, baseType: !2263, size: 64)
!2263 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2260, size: 64)
!2264 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2260, file: !208, line: 256, baseType: !2263, size: 64, offset: 64)
!2265 = !DIDerivedType(tag: DW_TAG_member, name: "remove_item", scope: !2260, file: !208, line: 258, baseType: !287, size: 64, offset: 128)
!2266 = !DIDerivedType(tag: DW_TAG_member, name: "add_item", scope: !2260, file: !208, line: 259, baseType: !287, size: 64, offset: 192)
!2267 = !DILocation(line: 364, column: 20, scope: !2250)
!2268 = !DILocation(line: 366, column: 14, scope: !2269)
!2269 = distinct !DILexicalBlock(scope: !2250, file: !3, line: 366, column: 2)
!2270 = !DILocation(line: 366, column: 22, scope: !2269)
!2271 = !DILocation(line: 366, column: 33, scope: !2269)
!2272 = !DILocation(line: 366, column: 12, scope: !2269)
!2273 = !DILocation(line: 366, column: 7, scope: !2269)
!2274 = !DILocation(line: 366, column: 40, scope: !2275)
!2275 = distinct !DILexicalBlock(scope: !2269, file: !3, line: 366, column: 2)
!2276 = !DILocation(line: 366, column: 2, scope: !2269)
!2277 = !DILocation(line: 367, column: 28, scope: !2275)
!2278 = !DILocation(line: 367, column: 3, scope: !2275)
!2279 = !DILocation(line: 366, column: 53, scope: !2275)
!2280 = !DILocation(line: 366, column: 59, scope: !2275)
!2281 = !DILocation(line: 366, column: 51, scope: !2275)
!2282 = !DILocation(line: 366, column: 2, scope: !2275)
!2283 = distinct !{!2283, !2276, !2284}
!2284 = !DILocation(line: 367, column: 32, scope: !2269)
!2285 = !DILocation(line: 369, column: 13, scope: !2286)
!2286 = distinct !DILexicalBlock(scope: !2250, file: !3, line: 369, column: 2)
!2287 = !DILocation(line: 369, column: 21, scope: !2286)
!2288 = !DILocation(line: 369, column: 27, scope: !2286)
!2289 = !DILocation(line: 369, column: 11, scope: !2286)
!2290 = !DILocation(line: 369, column: 7, scope: !2286)
!2291 = !DILocation(line: 369, column: 34, scope: !2292)
!2292 = distinct !DILexicalBlock(scope: !2286, file: !3, line: 369, column: 2)
!2293 = !DILocation(line: 369, column: 2, scope: !2286)
!2294 = !DILocation(line: 370, column: 23, scope: !2292)
!2295 = !DILocation(line: 370, column: 3, scope: !2292)
!2296 = !DILocation(line: 369, column: 45, scope: !2292)
!2297 = !DILocation(line: 369, column: 50, scope: !2292)
!2298 = !DILocation(line: 369, column: 43, scope: !2292)
!2299 = !DILocation(line: 369, column: 2, scope: !2292)
!2300 = distinct !{!2300, !2293, !2301}
!2301 = !DILocation(line: 370, column: 26, scope: !2286)
!2302 = !DILocation(line: 372, column: 17, scope: !2250)
!2303 = !DILocation(line: 372, column: 25, scope: !2250)
!2304 = !DILocation(line: 372, column: 2, scope: !2250)
!2305 = !DILocation(line: 373, column: 17, scope: !2250)
!2306 = !DILocation(line: 373, column: 25, scope: !2250)
!2307 = !DILocation(line: 373, column: 2, scope: !2250)
!2308 = !DILocation(line: 374, column: 1, scope: !2250)
!2309 = distinct !DISubprogram(name: "WM_keyconfig_set_active", scope: !3, file: !3, line: 310, type: !2310, scopeLine: 311, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !356)
!2310 = !DISubroutineType(types: !2311)
!2311 = !{null, !452, !2048}
!2312 = !DILocalVariable(name: "wm", arg: 1, scope: !2309, file: !3, line: 310, type: !452)
!2313 = !DILocation(line: 310, column: 47, scope: !2309)
!2314 = !DILocalVariable(name: "idname", arg: 2, scope: !2309, file: !3, line: 310, type: !2048)
!2315 = !DILocation(line: 310, column: 63, scope: !2309)
!2316 = !DILocation(line: 315, column: 22, scope: !2309)
!2317 = !DILocation(line: 315, column: 2, scope: !2309)
!2318 = !DILocation(line: 317, column: 30, scope: !2309)
!2319 = !DILocation(line: 317, column: 2, scope: !2309)
!2320 = !DILocation(line: 319, column: 2, scope: !2309)
!2321 = !DILocation(line: 320, column: 22, scope: !2309)
!2322 = !DILocation(line: 320, column: 2, scope: !2309)
!2323 = !DILocation(line: 321, column: 1, scope: !2309)
!2324 = distinct !DISubprogram(name: "WM_keyconfig_update", scope: !3, file: !3, line: 1206, type: !2325, scopeLine: 1207, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !356)
!2325 = !DISubroutineType(types: !2326)
!2326 = !{null, !452}
!2327 = !DILocalVariable(name: "wm", arg: 1, scope: !2324, file: !3, line: 1206, type: !452)
!2328 = !DILocation(line: 1206, column: 43, scope: !2324)
!2329 = !DILocalVariable(name: "km", scope: !2324, file: !3, line: 1208, type: !2188)
!2330 = !DILocation(line: 1208, column: 12, scope: !2324)
!2331 = !DILocalVariable(name: "defaultmap", scope: !2324, file: !3, line: 1208, type: !2188)
!2332 = !DILocation(line: 1208, column: 17, scope: !2324)
!2333 = !DILocalVariable(name: "addonmap", scope: !2324, file: !3, line: 1208, type: !2188)
!2334 = !DILocation(line: 1208, column: 30, scope: !2324)
!2335 = !DILocalVariable(name: "usermap", scope: !2324, file: !3, line: 1208, type: !2188)
!2336 = !DILocation(line: 1208, column: 41, scope: !2324)
!2337 = !DILocalVariable(name: "kmn", scope: !2324, file: !3, line: 1208, type: !2188)
!2338 = !DILocation(line: 1208, column: 51, scope: !2324)
!2339 = !DILocalVariable(name: "kmi", scope: !2324, file: !3, line: 1209, type: !287)
!2340 = !DILocation(line: 1209, column: 16, scope: !2324)
!2341 = !DILocalVariable(name: "kmdi", scope: !2324, file: !3, line: 1210, type: !2258)
!2342 = !DILocation(line: 1210, column: 20, scope: !2324)
!2343 = !DILocalVariable(name: "compat_update", scope: !2324, file: !3, line: 1211, type: !1360)
!2344 = !DILocation(line: 1211, column: 7, scope: !2324)
!2345 = !DILocation(line: 1213, column: 8, scope: !2346)
!2346 = distinct !DILexicalBlock(scope: !2324, file: !3, line: 1213, column: 6)
!2347 = !DILocation(line: 1213, column: 6, scope: !2346)
!2348 = !DILocation(line: 1213, column: 6, scope: !2324)
!2349 = !DILocation(line: 1214, column: 3, scope: !2346)
!2350 = !DILocation(line: 1216, column: 6, scope: !2351)
!2351 = distinct !DILexicalBlock(scope: !2324, file: !3, line: 1216, column: 6)
!2352 = !DILocation(line: 1216, column: 28, scope: !2351)
!2353 = !DILocation(line: 1216, column: 6, scope: !2324)
!2354 = !DILocation(line: 1217, column: 3, scope: !2351)
!2355 = !DILocation(line: 1219, column: 6, scope: !2356)
!2356 = distinct !DILexicalBlock(scope: !2324, file: !3, line: 1219, column: 6)
!2357 = !DILocation(line: 1219, column: 28, scope: !2356)
!2358 = !DILocation(line: 1219, column: 6, scope: !2324)
!2359 = !DILocalVariable(name: "kc", scope: !2360, file: !3, line: 1222, type: !440)
!2360 = distinct !DILexicalBlock(scope: !2356, file: !3, line: 1219, column: 61)
!2361 = !DILocation(line: 1222, column: 16, scope: !2360)
!2362 = !DILocalVariable(name: "keymaps_lb", scope: !2360, file: !3, line: 1224, type: !2363)
!2363 = !DICompositeType(tag: DW_TAG_array_type, baseType: !767, size: 320, elements: !1408)
!2364 = !DILocation(line: 1224, column: 13, scope: !2360)
!2365 = !DILocation(line: 1224, column: 28, scope: !2360)
!2366 = !DILocation(line: 1226, column: 8, scope: !2360)
!2367 = !DILocation(line: 1226, column: 12, scope: !2360)
!2368 = !DILocation(line: 1226, column: 22, scope: !2360)
!2369 = !DILocation(line: 1227, column: 8, scope: !2360)
!2370 = !DILocation(line: 1227, column: 12, scope: !2360)
!2371 = !DILocation(line: 1227, column: 25, scope: !2360)
!2372 = !DILocation(line: 1228, column: 8, scope: !2360)
!2373 = !DILocation(line: 1228, column: 12, scope: !2360)
!2374 = !DILocation(line: 1228, column: 23, scope: !2360)
!2375 = !DILocalVariable(name: "i", scope: !2360, file: !3, line: 1231, type: !273)
!2376 = !DILocation(line: 1231, column: 7, scope: !2360)
!2377 = !DILocation(line: 1233, column: 10, scope: !2378)
!2378 = distinct !DILexicalBlock(scope: !2360, file: !3, line: 1233, column: 3)
!2379 = !DILocation(line: 1233, column: 8, scope: !2378)
!2380 = !DILocation(line: 1233, column: 26, scope: !2381)
!2381 = distinct !DILexicalBlock(scope: !2378, file: !3, line: 1233, column: 3)
!2382 = !DILocation(line: 1233, column: 15, scope: !2381)
!2383 = !DILocation(line: 1233, column: 3, scope: !2378)
!2384 = !DILocation(line: 1234, column: 49, scope: !2385)
!2385 = distinct !DILexicalBlock(scope: !2381, file: !3, line: 1233, column: 35)
!2386 = !DILocation(line: 1234, column: 38, scope: !2385)
!2387 = !DILocation(line: 1234, column: 4, scope: !2385)
!2388 = !DILocation(line: 1235, column: 3, scope: !2385)
!2389 = !DILocation(line: 1233, column: 31, scope: !2381)
!2390 = !DILocation(line: 1233, column: 3, scope: !2381)
!2391 = distinct !{!2391, !2383, !2392}
!2392 = !DILocation(line: 1235, column: 3, scope: !2378)
!2393 = !DILocation(line: 1237, column: 13, scope: !2394)
!2394 = distinct !DILexicalBlock(scope: !2360, file: !3, line: 1237, column: 3)
!2395 = !DILocation(line: 1237, column: 17, scope: !2394)
!2396 = !DILocation(line: 1237, column: 28, scope: !2394)
!2397 = !DILocation(line: 1237, column: 11, scope: !2394)
!2398 = !DILocation(line: 1237, column: 8, scope: !2394)
!2399 = !DILocation(line: 1237, column: 35, scope: !2400)
!2400 = distinct !DILexicalBlock(scope: !2394, file: !3, line: 1237, column: 3)
!2401 = !DILocation(line: 1237, column: 3, scope: !2394)
!2402 = !DILocation(line: 1238, column: 39, scope: !2403)
!2403 = distinct !DILexicalBlock(scope: !2400, file: !3, line: 1237, column: 54)
!2404 = !DILocation(line: 1238, column: 43, scope: !2403)
!2405 = !DILocation(line: 1238, column: 4, scope: !2403)
!2406 = !DILocation(line: 1239, column: 3, scope: !2403)
!2407 = !DILocation(line: 1237, column: 44, scope: !2400)
!2408 = !DILocation(line: 1237, column: 48, scope: !2400)
!2409 = !DILocation(line: 1237, column: 42, scope: !2400)
!2410 = !DILocation(line: 1237, column: 3, scope: !2400)
!2411 = distinct !{!2411, !2401, !2412}
!2412 = !DILocation(line: 1239, column: 3, scope: !2394)
!2413 = !DILocation(line: 1241, column: 25, scope: !2360)
!2414 = !DILocation(line: 1242, column: 2, scope: !2360)
!2415 = !DILocation(line: 1245, column: 6, scope: !2416)
!2416 = distinct !DILexicalBlock(scope: !2324, file: !3, line: 1245, column: 6)
!2417 = !DILocation(line: 1245, column: 28, scope: !2416)
!2418 = !DILocation(line: 1245, column: 6, scope: !2324)
!2419 = !DILocation(line: 1246, column: 3, scope: !2416)
!2420 = !DILocation(line: 1250, column: 27, scope: !2421)
!2421 = distinct !DILexicalBlock(scope: !2324, file: !3, line: 1250, column: 2)
!2422 = !DILocation(line: 1250, column: 12, scope: !2421)
!2423 = !DILocation(line: 1250, column: 10, scope: !2421)
!2424 = !DILocation(line: 1250, column: 7, scope: !2421)
!2425 = !DILocation(line: 1250, column: 34, scope: !2426)
!2426 = distinct !DILexicalBlock(scope: !2421, file: !3, line: 1250, column: 2)
!2427 = !DILocation(line: 1250, column: 2, scope: !2421)
!2428 = !DILocation(line: 1251, column: 8, scope: !2429)
!2429 = distinct !DILexicalBlock(scope: !2430, file: !3, line: 1251, column: 7)
!2430 = distinct !DILexicalBlock(scope: !2426, file: !3, line: 1250, column: 53)
!2431 = !DILocation(line: 1251, column: 12, scope: !2429)
!2432 = !DILocation(line: 1251, column: 17, scope: !2429)
!2433 = !DILocation(line: 1251, column: 33, scope: !2429)
!2434 = !DILocation(line: 1251, column: 7, scope: !2430)
!2435 = !DILocation(line: 1252, column: 16, scope: !2436)
!2436 = distinct !DILexicalBlock(scope: !2437, file: !3, line: 1252, column: 4)
!2437 = distinct !DILexicalBlock(scope: !2429, file: !3, line: 1251, column: 39)
!2438 = !DILocation(line: 1252, column: 20, scope: !2436)
!2439 = !DILocation(line: 1252, column: 31, scope: !2436)
!2440 = !DILocation(line: 1252, column: 14, scope: !2436)
!2441 = !DILocation(line: 1252, column: 9, scope: !2436)
!2442 = !DILocation(line: 1252, column: 38, scope: !2443)
!2443 = distinct !DILexicalBlock(scope: !2436, file: !3, line: 1252, column: 4)
!2444 = !DILocation(line: 1252, column: 4, scope: !2436)
!2445 = !DILocation(line: 1253, column: 9, scope: !2446)
!2446 = distinct !DILexicalBlock(scope: !2447, file: !3, line: 1253, column: 9)
!2447 = distinct !DILexicalBlock(scope: !2443, file: !3, line: 1252, column: 63)
!2448 = !DILocation(line: 1253, column: 15, scope: !2446)
!2449 = !DILocation(line: 1253, column: 9, scope: !2447)
!2450 = !DILocation(line: 1254, column: 36, scope: !2446)
!2451 = !DILocation(line: 1254, column: 42, scope: !2446)
!2452 = !DILocation(line: 1254, column: 6, scope: !2446)
!2453 = !DILocation(line: 1255, column: 9, scope: !2454)
!2454 = distinct !DILexicalBlock(scope: !2447, file: !3, line: 1255, column: 9)
!2455 = !DILocation(line: 1255, column: 15, scope: !2454)
!2456 = !DILocation(line: 1255, column: 9, scope: !2447)
!2457 = !DILocation(line: 1256, column: 36, scope: !2454)
!2458 = !DILocation(line: 1256, column: 42, scope: !2454)
!2459 = !DILocation(line: 1256, column: 6, scope: !2454)
!2460 = !DILocation(line: 1257, column: 4, scope: !2447)
!2461 = !DILocation(line: 1252, column: 51, scope: !2443)
!2462 = !DILocation(line: 1252, column: 57, scope: !2443)
!2463 = !DILocation(line: 1252, column: 49, scope: !2443)
!2464 = !DILocation(line: 1252, column: 4, scope: !2443)
!2465 = distinct !{!2465, !2444, !2466}
!2466 = !DILocation(line: 1257, column: 4, scope: !2436)
!2467 = !DILocation(line: 1259, column: 15, scope: !2468)
!2468 = distinct !DILexicalBlock(scope: !2437, file: !3, line: 1259, column: 4)
!2469 = !DILocation(line: 1259, column: 19, scope: !2468)
!2470 = !DILocation(line: 1259, column: 25, scope: !2468)
!2471 = !DILocation(line: 1259, column: 13, scope: !2468)
!2472 = !DILocation(line: 1259, column: 9, scope: !2468)
!2473 = !DILocation(line: 1259, column: 32, scope: !2474)
!2474 = distinct !DILexicalBlock(scope: !2468, file: !3, line: 1259, column: 4)
!2475 = !DILocation(line: 1259, column: 4, scope: !2468)
!2476 = !DILocation(line: 1260, column: 35, scope: !2474)
!2477 = !DILocation(line: 1260, column: 5, scope: !2474)
!2478 = !DILocation(line: 1259, column: 43, scope: !2474)
!2479 = !DILocation(line: 1259, column: 48, scope: !2474)
!2480 = !DILocation(line: 1259, column: 41, scope: !2474)
!2481 = !DILocation(line: 1259, column: 4, scope: !2474)
!2482 = distinct !{!2482, !2475, !2483}
!2483 = !DILocation(line: 1260, column: 38, scope: !2468)
!2484 = !DILocation(line: 1261, column: 3, scope: !2437)
!2485 = !DILocation(line: 1262, column: 2, scope: !2430)
!2486 = !DILocation(line: 1250, column: 43, scope: !2426)
!2487 = !DILocation(line: 1250, column: 47, scope: !2426)
!2488 = !DILocation(line: 1250, column: 41, scope: !2426)
!2489 = !DILocation(line: 1250, column: 2, scope: !2426)
!2490 = distinct !{!2490, !2427, !2491}
!2491 = !DILocation(line: 1262, column: 2, scope: !2421)
!2492 = !DILocation(line: 1265, column: 12, scope: !2493)
!2493 = distinct !DILexicalBlock(scope: !2324, file: !3, line: 1265, column: 2)
!2494 = !DILocation(line: 1265, column: 16, scope: !2493)
!2495 = !DILocation(line: 1265, column: 26, scope: !2493)
!2496 = !DILocation(line: 1265, column: 34, scope: !2493)
!2497 = !DILocation(line: 1265, column: 10, scope: !2493)
!2498 = !DILocation(line: 1265, column: 7, scope: !2493)
!2499 = !DILocation(line: 1265, column: 41, scope: !2500)
!2500 = distinct !DILexicalBlock(scope: !2493, file: !3, line: 1265, column: 2)
!2501 = !DILocation(line: 1265, column: 2, scope: !2493)
!2502 = !DILocation(line: 1267, column: 39, scope: !2503)
!2503 = distinct !DILexicalBlock(scope: !2504, file: !3, line: 1267, column: 7)
!2504 = distinct !DILexicalBlock(scope: !2500, file: !3, line: 1265, column: 60)
!2505 = !DILocation(line: 1267, column: 7, scope: !2503)
!2506 = !DILocation(line: 1267, column: 7, scope: !2504)
!2507 = !DILocation(line: 1269, column: 34, scope: !2508)
!2508 = distinct !DILexicalBlock(scope: !2503, file: !3, line: 1267, column: 44)
!2509 = !DILocation(line: 1269, column: 38, scope: !2508)
!2510 = !DILocation(line: 1269, column: 17, scope: !2508)
!2511 = !DILocation(line: 1269, column: 15, scope: !2508)
!2512 = !DILocation(line: 1270, column: 36, scope: !2508)
!2513 = !DILocation(line: 1270, column: 40, scope: !2508)
!2514 = !DILocation(line: 1270, column: 51, scope: !2508)
!2515 = !DILocation(line: 1270, column: 60, scope: !2508)
!2516 = !DILocation(line: 1270, column: 64, scope: !2508)
!2517 = !DILocation(line: 1270, column: 72, scope: !2508)
!2518 = !DILocation(line: 1270, column: 76, scope: !2508)
!2519 = !DILocation(line: 1270, column: 85, scope: !2508)
!2520 = !DILocation(line: 1270, column: 89, scope: !2508)
!2521 = !DILocation(line: 1270, column: 15, scope: !2508)
!2522 = !DILocation(line: 1270, column: 13, scope: !2508)
!2523 = !DILocation(line: 1273, column: 8, scope: !2524)
!2524 = distinct !DILexicalBlock(scope: !2508, file: !3, line: 1273, column: 8)
!2525 = !DILocation(line: 1273, column: 8, scope: !2508)
!2526 = !DILocation(line: 1274, column: 44, scope: !2524)
!2527 = !DILocation(line: 1274, column: 56, scope: !2524)
!2528 = !DILocation(line: 1274, column: 66, scope: !2524)
!2529 = !DILocation(line: 1274, column: 5, scope: !2524)
!2530 = !DILocation(line: 1275, column: 3, scope: !2508)
!2531 = !DILocation(line: 1276, column: 2, scope: !2504)
!2532 = !DILocation(line: 1265, column: 50, scope: !2500)
!2533 = !DILocation(line: 1265, column: 54, scope: !2500)
!2534 = !DILocation(line: 1265, column: 48, scope: !2500)
!2535 = !DILocation(line: 1265, column: 2, scope: !2500)
!2536 = distinct !{!2536, !2501, !2537}
!2537 = !DILocation(line: 1276, column: 2, scope: !2493)
!2538 = !DILocation(line: 1279, column: 12, scope: !2539)
!2539 = distinct !DILexicalBlock(scope: !2324, file: !3, line: 1279, column: 2)
!2540 = !DILocation(line: 1279, column: 16, scope: !2539)
!2541 = !DILocation(line: 1279, column: 29, scope: !2539)
!2542 = !DILocation(line: 1279, column: 37, scope: !2539)
!2543 = !DILocation(line: 1279, column: 10, scope: !2539)
!2544 = !DILocation(line: 1279, column: 7, scope: !2539)
!2545 = !DILocation(line: 1279, column: 44, scope: !2546)
!2546 = distinct !DILexicalBlock(scope: !2539, file: !3, line: 1279, column: 2)
!2547 = !DILocation(line: 1279, column: 2, scope: !2539)
!2548 = !DILocation(line: 1281, column: 33, scope: !2549)
!2549 = distinct !DILexicalBlock(scope: !2546, file: !3, line: 1279, column: 63)
!2550 = !DILocation(line: 1281, column: 37, scope: !2549)
!2551 = !DILocation(line: 1281, column: 16, scope: !2549)
!2552 = !DILocation(line: 1281, column: 14, scope: !2549)
!2553 = !DILocation(line: 1282, column: 35, scope: !2549)
!2554 = !DILocation(line: 1282, column: 39, scope: !2549)
!2555 = !DILocation(line: 1282, column: 50, scope: !2549)
!2556 = !DILocation(line: 1282, column: 59, scope: !2549)
!2557 = !DILocation(line: 1282, column: 63, scope: !2549)
!2558 = !DILocation(line: 1282, column: 71, scope: !2549)
!2559 = !DILocation(line: 1282, column: 75, scope: !2549)
!2560 = !DILocation(line: 1282, column: 84, scope: !2549)
!2561 = !DILocation(line: 1282, column: 88, scope: !2549)
!2562 = !DILocation(line: 1282, column: 14, scope: !2549)
!2563 = !DILocation(line: 1282, column: 12, scope: !2549)
!2564 = !DILocation(line: 1283, column: 50, scope: !2549)
!2565 = !DILocation(line: 1283, column: 54, scope: !2549)
!2566 = !DILocation(line: 1283, column: 62, scope: !2549)
!2567 = !DILocation(line: 1283, column: 66, scope: !2549)
!2568 = !DILocation(line: 1283, column: 75, scope: !2549)
!2569 = !DILocation(line: 1283, column: 79, scope: !2549)
!2570 = !DILocation(line: 1283, column: 13, scope: !2549)
!2571 = !DILocation(line: 1283, column: 11, scope: !2549)
!2572 = !DILocation(line: 1285, column: 34, scope: !2549)
!2573 = !DILocation(line: 1285, column: 38, scope: !2549)
!2574 = !DILocation(line: 1285, column: 3, scope: !2549)
!2575 = !DILocation(line: 1288, column: 33, scope: !2549)
!2576 = !DILocation(line: 1288, column: 37, scope: !2549)
!2577 = !DILocation(line: 1288, column: 47, scope: !2549)
!2578 = !DILocation(line: 1288, column: 56, scope: !2549)
!2579 = !DILocation(line: 1288, column: 68, scope: !2549)
!2580 = !DILocation(line: 1288, column: 78, scope: !2549)
!2581 = !DILocation(line: 1288, column: 9, scope: !2549)
!2582 = !DILocation(line: 1288, column: 7, scope: !2549)
!2583 = !DILocation(line: 1290, column: 7, scope: !2584)
!2584 = distinct !DILexicalBlock(scope: !2549, file: !3, line: 1290, column: 7)
!2585 = !DILocation(line: 1290, column: 7, scope: !2549)
!2586 = !DILocation(line: 1291, column: 23, scope: !2587)
!2587 = distinct !DILexicalBlock(scope: !2584, file: !3, line: 1290, column: 12)
!2588 = !DILocation(line: 1291, column: 27, scope: !2587)
!2589 = !DILocation(line: 1291, column: 4, scope: !2587)
!2590 = !DILocation(line: 1291, column: 9, scope: !2587)
!2591 = !DILocation(line: 1291, column: 21, scope: !2587)
!2592 = !DILocation(line: 1292, column: 16, scope: !2587)
!2593 = !DILocation(line: 1292, column: 20, scope: !2587)
!2594 = !DILocation(line: 1292, column: 4, scope: !2587)
!2595 = !DILocation(line: 1292, column: 9, scope: !2587)
!2596 = !DILocation(line: 1292, column: 14, scope: !2587)
!2597 = !DILocation(line: 1293, column: 3, scope: !2587)
!2598 = !DILocation(line: 1296, column: 19, scope: !2549)
!2599 = !DILocation(line: 1296, column: 33, scope: !2549)
!2600 = !DILocation(line: 1296, column: 37, scope: !2549)
!2601 = !DILocation(line: 1296, column: 45, scope: !2549)
!2602 = !DILocation(line: 1296, column: 50, scope: !2549)
!2603 = !DILocation(line: 1296, column: 59, scope: !2549)
!2604 = !DILocation(line: 1296, column: 64, scope: !2549)
!2605 = !DILocation(line: 1296, column: 48, scope: !2549)
!2606 = !DILocation(line: 0, scope: !2549)
!2607 = !DILocation(line: 1296, column: 17, scope: !2549)
!2608 = !DILocation(line: 1298, column: 2, scope: !2549)
!2609 = !DILocation(line: 1279, column: 53, scope: !2546)
!2610 = !DILocation(line: 1279, column: 57, scope: !2546)
!2611 = !DILocation(line: 1279, column: 51, scope: !2546)
!2612 = !DILocation(line: 1279, column: 2, scope: !2546)
!2613 = distinct !{!2613, !2547, !2614}
!2614 = !DILocation(line: 1298, column: 2, scope: !2539)
!2615 = !DILocation(line: 1300, column: 24, scope: !2324)
!2616 = !DILocation(line: 1304, column: 6, scope: !2617)
!2617 = distinct !DILexicalBlock(scope: !2324, file: !3, line: 1304, column: 6)
!2618 = !DILocation(line: 1304, column: 6, scope: !2324)
!2619 = !DILocation(line: 1305, column: 3, scope: !2620)
!2620 = distinct !DILexicalBlock(scope: !2617, file: !3, line: 1304, column: 21)
!2621 = !DILocation(line: 1306, column: 23, scope: !2620)
!2622 = !DILocation(line: 1306, column: 3, scope: !2620)
!2623 = !DILocation(line: 1307, column: 2, scope: !2620)
!2624 = !DILocation(line: 1308, column: 1, scope: !2324)
!2625 = distinct !DISubprogram(name: "wm_keymap_diff_item_free", scope: !3, file: !3, line: 231, type: !2626, scopeLine: 232, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !356)
!2626 = !DISubroutineType(types: !2627)
!2627 = !{null, !2258}
!2628 = !DILocalVariable(name: "kmdi", arg: 1, scope: !2625, file: !3, line: 231, type: !2258)
!2629 = !DILocation(line: 231, column: 56, scope: !2625)
!2630 = !DILocation(line: 233, column: 6, scope: !2631)
!2631 = distinct !DILexicalBlock(scope: !2625, file: !3, line: 233, column: 6)
!2632 = !DILocation(line: 233, column: 12, scope: !2631)
!2633 = !DILocation(line: 233, column: 6, scope: !2625)
!2634 = !DILocation(line: 234, column: 23, scope: !2635)
!2635 = distinct !DILexicalBlock(scope: !2631, file: !3, line: 233, column: 25)
!2636 = !DILocation(line: 234, column: 29, scope: !2635)
!2637 = !DILocation(line: 234, column: 3, scope: !2635)
!2638 = !DILocation(line: 235, column: 3, scope: !2635)
!2639 = !DILocation(line: 235, column: 13, scope: !2635)
!2640 = !DILocation(line: 235, column: 19, scope: !2635)
!2641 = !DILocation(line: 236, column: 2, scope: !2635)
!2642 = !DILocation(line: 237, column: 6, scope: !2643)
!2643 = distinct !DILexicalBlock(scope: !2625, file: !3, line: 237, column: 6)
!2644 = !DILocation(line: 237, column: 12, scope: !2643)
!2645 = !DILocation(line: 237, column: 6, scope: !2625)
!2646 = !DILocation(line: 238, column: 23, scope: !2647)
!2647 = distinct !DILexicalBlock(scope: !2643, file: !3, line: 237, column: 22)
!2648 = !DILocation(line: 238, column: 29, scope: !2647)
!2649 = !DILocation(line: 238, column: 3, scope: !2647)
!2650 = !DILocation(line: 239, column: 3, scope: !2647)
!2651 = !DILocation(line: 239, column: 13, scope: !2647)
!2652 = !DILocation(line: 239, column: 19, scope: !2647)
!2653 = !DILocation(line: 240, column: 2, scope: !2647)
!2654 = !DILocation(line: 241, column: 1, scope: !2625)
!2655 = distinct !DISubprogram(name: "wm_keymap_item_free", scope: !3, file: !3, line: 84, type: !383, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !356)
!2656 = !DILocalVariable(name: "kmi", arg: 1, scope: !2655, file: !3, line: 84, type: !287)
!2657 = !DILocation(line: 84, column: 47, scope: !2655)
!2658 = !DILocation(line: 87, column: 6, scope: !2659)
!2659 = distinct !DILexicalBlock(scope: !2655, file: !3, line: 87, column: 6)
!2660 = !DILocation(line: 87, column: 11, scope: !2659)
!2661 = !DILocation(line: 87, column: 6, scope: !2655)
!2662 = !DILocation(line: 88, column: 31, scope: !2663)
!2663 = distinct !DILexicalBlock(scope: !2659, file: !3, line: 87, column: 16)
!2664 = !DILocation(line: 88, column: 36, scope: !2663)
!2665 = !DILocation(line: 88, column: 3, scope: !2663)
!2666 = !DILocation(line: 89, column: 3, scope: !2663)
!2667 = !DILocation(line: 89, column: 13, scope: !2663)
!2668 = !DILocation(line: 89, column: 18, scope: !2663)
!2669 = !DILocation(line: 90, column: 2, scope: !2663)
!2670 = !DILocation(line: 91, column: 1, scope: !2655)
!2671 = distinct !DISubprogram(name: "WM_keymap_remove", scope: !3, file: !3, line: 376, type: !2672, scopeLine: 377, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !356)
!2672 = !DISubroutineType(types: !2673)
!2673 = !{!1360, !440, !2188}
!2674 = !DILocalVariable(name: "keyconf", arg: 1, scope: !2671, file: !3, line: 376, type: !440)
!2675 = !DILocation(line: 376, column: 36, scope: !2671)
!2676 = !DILocalVariable(name: "keymap", arg: 2, scope: !2671, file: !3, line: 376, type: !2188)
!2677 = !DILocation(line: 376, column: 55, scope: !2671)
!2678 = !DILocation(line: 378, column: 21, scope: !2679)
!2679 = distinct !DILexicalBlock(scope: !2671, file: !3, line: 378, column: 6)
!2680 = !DILocation(line: 378, column: 30, scope: !2679)
!2681 = !DILocation(line: 378, column: 39, scope: !2679)
!2682 = !DILocation(line: 378, column: 6, scope: !2679)
!2683 = !DILocation(line: 378, column: 47, scope: !2679)
!2684 = !DILocation(line: 378, column: 6, scope: !2671)
!2685 = !DILocation(line: 380, column: 18, scope: !2686)
!2686 = distinct !DILexicalBlock(scope: !2679, file: !3, line: 378, column: 54)
!2687 = !DILocation(line: 380, column: 3, scope: !2686)
!2688 = !DILocation(line: 381, column: 16, scope: !2686)
!2689 = !DILocation(line: 381, column: 25, scope: !2686)
!2690 = !DILocation(line: 381, column: 34, scope: !2686)
!2691 = !DILocation(line: 381, column: 3, scope: !2686)
!2692 = !DILocation(line: 382, column: 3, scope: !2686)
!2693 = !DILocation(line: 382, column: 13, scope: !2686)
!2694 = !DILocation(line: 384, column: 3, scope: !2686)
!2695 = !DILocation(line: 387, column: 3, scope: !2696)
!2696 = distinct !DILexicalBlock(scope: !2679, file: !3, line: 386, column: 7)
!2697 = !DILocation(line: 389, column: 1, scope: !2671)
!2698 = distinct !DISubprogram(name: "WM_keymap_verify_item", scope: !3, file: !3, line: 420, type: !2699, scopeLine: 421, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !356)
!2699 = !DISubroutineType(types: !2700)
!2700 = !{!287, !2188, !2048, !273, !273, !273, !273}
!2701 = !DILocalVariable(name: "keymap", arg: 1, scope: !2698, file: !3, line: 420, type: !2188)
!2702 = !DILocation(line: 420, column: 47, scope: !2698)
!2703 = !DILocalVariable(name: "idname", arg: 2, scope: !2698, file: !3, line: 420, type: !2048)
!2704 = !DILocation(line: 420, column: 67, scope: !2698)
!2705 = !DILocalVariable(name: "type", arg: 3, scope: !2698, file: !3, line: 420, type: !273)
!2706 = !DILocation(line: 420, column: 79, scope: !2698)
!2707 = !DILocalVariable(name: "val", arg: 4, scope: !2698, file: !3, line: 420, type: !273)
!2708 = !DILocation(line: 420, column: 89, scope: !2698)
!2709 = !DILocalVariable(name: "modifier", arg: 5, scope: !2698, file: !3, line: 420, type: !273)
!2710 = !DILocation(line: 420, column: 98, scope: !2698)
!2711 = !DILocalVariable(name: "keymodifier", arg: 6, scope: !2698, file: !3, line: 420, type: !273)
!2712 = !DILocation(line: 420, column: 112, scope: !2698)
!2713 = !DILocalVariable(name: "kmi", scope: !2698, file: !3, line: 422, type: !287)
!2714 = !DILocation(line: 422, column: 16, scope: !2698)
!2715 = !DILocation(line: 424, column: 13, scope: !2716)
!2716 = distinct !DILexicalBlock(scope: !2698, file: !3, line: 424, column: 2)
!2717 = !DILocation(line: 424, column: 21, scope: !2716)
!2718 = !DILocation(line: 424, column: 27, scope: !2716)
!2719 = !DILocation(line: 424, column: 11, scope: !2716)
!2720 = !DILocation(line: 424, column: 7, scope: !2716)
!2721 = !DILocation(line: 424, column: 34, scope: !2722)
!2722 = distinct !DILexicalBlock(scope: !2716, file: !3, line: 424, column: 2)
!2723 = !DILocation(line: 424, column: 2, scope: !2716)
!2724 = !DILocation(line: 425, column: 15, scope: !2725)
!2725 = distinct !DILexicalBlock(scope: !2722, file: !3, line: 425, column: 7)
!2726 = !DILocation(line: 425, column: 20, scope: !2725)
!2727 = !DILocation(line: 425, column: 28, scope: !2725)
!2728 = !DILocation(line: 425, column: 7, scope: !2725)
!2729 = !DILocation(line: 425, column: 53, scope: !2725)
!2730 = !DILocation(line: 425, column: 7, scope: !2722)
!2731 = !DILocation(line: 426, column: 4, scope: !2725)
!2732 = !DILocation(line: 425, column: 56, scope: !2725)
!2733 = !DILocation(line: 424, column: 45, scope: !2722)
!2734 = !DILocation(line: 424, column: 50, scope: !2722)
!2735 = !DILocation(line: 424, column: 43, scope: !2722)
!2736 = !DILocation(line: 424, column: 2, scope: !2722)
!2737 = distinct !{!2737, !2723, !2738}
!2738 = !DILocation(line: 426, column: 4, scope: !2716)
!2739 = !DILocation(line: 427, column: 6, scope: !2740)
!2740 = distinct !DILexicalBlock(scope: !2698, file: !3, line: 427, column: 6)
!2741 = !DILocation(line: 427, column: 10, scope: !2740)
!2742 = !DILocation(line: 427, column: 6, scope: !2698)
!2743 = !DILocation(line: 428, column: 9, scope: !2744)
!2744 = distinct !DILexicalBlock(scope: !2740, file: !3, line: 427, column: 19)
!2745 = !DILocation(line: 428, column: 7, scope: !2744)
!2746 = !DILocation(line: 430, column: 16, scope: !2744)
!2747 = !DILocation(line: 430, column: 24, scope: !2744)
!2748 = !DILocation(line: 430, column: 31, scope: !2744)
!2749 = !DILocation(line: 430, column: 3, scope: !2744)
!2750 = !DILocation(line: 431, column: 15, scope: !2744)
!2751 = !DILocation(line: 431, column: 20, scope: !2744)
!2752 = !DILocation(line: 431, column: 28, scope: !2744)
!2753 = !DILocation(line: 431, column: 3, scope: !2744)
!2754 = !DILocation(line: 433, column: 22, scope: !2744)
!2755 = !DILocation(line: 433, column: 30, scope: !2744)
!2756 = !DILocation(line: 433, column: 3, scope: !2744)
!2757 = !DILocation(line: 435, column: 20, scope: !2744)
!2758 = !DILocation(line: 435, column: 25, scope: !2744)
!2759 = !DILocation(line: 435, column: 31, scope: !2744)
!2760 = !DILocation(line: 435, column: 36, scope: !2744)
!2761 = !DILocation(line: 435, column: 46, scope: !2744)
!2762 = !DILocation(line: 435, column: 3, scope: !2744)
!2763 = !DILocation(line: 436, column: 33, scope: !2744)
!2764 = !DILocation(line: 436, column: 3, scope: !2744)
!2765 = !DILocation(line: 437, column: 2, scope: !2744)
!2766 = !DILocation(line: 438, column: 9, scope: !2698)
!2767 = !DILocation(line: 438, column: 2, scope: !2698)
!2768 = distinct !DISubprogram(name: "keymap_item_set_id", scope: !3, file: !3, line: 408, type: !2186, scopeLine: 409, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !356)
!2769 = !DILocalVariable(name: "keymap", arg: 1, scope: !2768, file: !3, line: 408, type: !2188)
!2770 = !DILocation(line: 408, column: 42, scope: !2768)
!2771 = !DILocalVariable(name: "kmi", arg: 2, scope: !2768, file: !3, line: 408, type: !287)
!2772 = !DILocation(line: 408, column: 64, scope: !2768)
!2773 = !DILocation(line: 410, column: 2, scope: !2768)
!2774 = !DILocation(line: 410, column: 10, scope: !2768)
!2775 = !DILocation(line: 410, column: 16, scope: !2768)
!2776 = !DILocation(line: 411, column: 7, scope: !2777)
!2777 = distinct !DILexicalBlock(scope: !2768, file: !3, line: 411, column: 6)
!2778 = !DILocation(line: 411, column: 15, scope: !2777)
!2779 = !DILocation(line: 411, column: 20, scope: !2777)
!2780 = !DILocation(line: 411, column: 35, scope: !2777)
!2781 = !DILocation(line: 411, column: 6, scope: !2768)
!2782 = !DILocation(line: 412, column: 13, scope: !2783)
!2783 = distinct !DILexicalBlock(scope: !2777, file: !3, line: 411, column: 41)
!2784 = !DILocation(line: 412, column: 21, scope: !2783)
!2785 = !DILocation(line: 412, column: 3, scope: !2783)
!2786 = !DILocation(line: 412, column: 8, scope: !2783)
!2787 = !DILocation(line: 412, column: 11, scope: !2783)
!2788 = !DILocation(line: 413, column: 2, scope: !2783)
!2789 = !DILocation(line: 415, column: 14, scope: !2790)
!2790 = distinct !DILexicalBlock(scope: !2777, file: !3, line: 414, column: 7)
!2791 = !DILocation(line: 415, column: 22, scope: !2790)
!2792 = !DILocation(line: 415, column: 13, scope: !2790)
!2793 = !DILocation(line: 415, column: 3, scope: !2790)
!2794 = !DILocation(line: 415, column: 8, scope: !2790)
!2795 = !DILocation(line: 415, column: 11, scope: !2790)
!2796 = !DILocation(line: 417, column: 1, scope: !2768)
!2797 = distinct !DISubprogram(name: "keymap_event_set", scope: !3, file: !3, line: 391, type: !2798, scopeLine: 392, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !356)
!2798 = !DISubroutineType(types: !2799)
!2799 = !{null, !287, !310, !310, !273, !310}
!2800 = !DILocalVariable(name: "kmi", arg: 1, scope: !2797, file: !3, line: 391, type: !287)
!2801 = !DILocation(line: 391, column: 44, scope: !2797)
!2802 = !DILocalVariable(name: "type", arg: 2, scope: !2797, file: !3, line: 391, type: !310)
!2803 = !DILocation(line: 391, column: 55, scope: !2797)
!2804 = !DILocalVariable(name: "val", arg: 3, scope: !2797, file: !3, line: 391, type: !310)
!2805 = !DILocation(line: 391, column: 67, scope: !2797)
!2806 = !DILocalVariable(name: "modifier", arg: 4, scope: !2797, file: !3, line: 391, type: !273)
!2807 = !DILocation(line: 391, column: 76, scope: !2797)
!2808 = !DILocalVariable(name: "keymodifier", arg: 5, scope: !2797, file: !3, line: 391, type: !310)
!2809 = !DILocation(line: 391, column: 92, scope: !2797)
!2810 = !DILocation(line: 393, column: 14, scope: !2797)
!2811 = !DILocation(line: 393, column: 2, scope: !2797)
!2812 = !DILocation(line: 393, column: 7, scope: !2797)
!2813 = !DILocation(line: 393, column: 12, scope: !2797)
!2814 = !DILocation(line: 394, column: 13, scope: !2797)
!2815 = !DILocation(line: 394, column: 2, scope: !2797)
!2816 = !DILocation(line: 394, column: 7, scope: !2797)
!2817 = !DILocation(line: 394, column: 11, scope: !2797)
!2818 = !DILocation(line: 395, column: 21, scope: !2797)
!2819 = !DILocation(line: 395, column: 2, scope: !2797)
!2820 = !DILocation(line: 395, column: 7, scope: !2797)
!2821 = !DILocation(line: 395, column: 19, scope: !2797)
!2822 = !DILocation(line: 397, column: 6, scope: !2823)
!2823 = distinct !DILexicalBlock(scope: !2797, file: !3, line: 397, column: 6)
!2824 = !DILocation(line: 397, column: 15, scope: !2823)
!2825 = !DILocation(line: 397, column: 6, scope: !2797)
!2826 = !DILocation(line: 398, column: 39, scope: !2827)
!2827 = distinct !DILexicalBlock(scope: !2823, file: !3, line: 397, column: 26)
!2828 = !DILocation(line: 398, column: 44, scope: !2827)
!2829 = !DILocation(line: 398, column: 50, scope: !2827)
!2830 = !DILocation(line: 398, column: 28, scope: !2827)
!2831 = !DILocation(line: 398, column: 33, scope: !2827)
!2832 = !DILocation(line: 398, column: 37, scope: !2827)
!2833 = !DILocation(line: 398, column: 16, scope: !2827)
!2834 = !DILocation(line: 398, column: 21, scope: !2827)
!2835 = !DILocation(line: 398, column: 26, scope: !2827)
!2836 = !DILocation(line: 398, column: 3, scope: !2827)
!2837 = !DILocation(line: 398, column: 8, scope: !2827)
!2838 = !DILocation(line: 398, column: 14, scope: !2827)
!2839 = !DILocation(line: 399, column: 2, scope: !2827)
!2840 = !DILocation(line: 401, column: 17, scope: !2841)
!2841 = distinct !DILexicalBlock(scope: !2823, file: !3, line: 400, column: 7)
!2842 = !DILocation(line: 401, column: 26, scope: !2841)
!2843 = !DILocation(line: 401, column: 16, scope: !2841)
!2844 = !DILocation(line: 401, column: 57, scope: !2841)
!2845 = !DILocation(line: 401, column: 66, scope: !2841)
!2846 = !DILocation(line: 401, column: 56, scope: !2841)
!2847 = !DILocation(line: 401, column: 3, scope: !2841)
!2848 = !DILocation(line: 401, column: 8, scope: !2841)
!2849 = !DILocation(line: 401, column: 14, scope: !2841)
!2850 = !DILocation(line: 402, column: 17, scope: !2841)
!2851 = !DILocation(line: 402, column: 26, scope: !2841)
!2852 = !DILocation(line: 402, column: 16, scope: !2841)
!2853 = !DILocation(line: 402, column: 57, scope: !2841)
!2854 = !DILocation(line: 402, column: 66, scope: !2841)
!2855 = !DILocation(line: 402, column: 56, scope: !2841)
!2856 = !DILocation(line: 402, column: 3, scope: !2841)
!2857 = !DILocation(line: 402, column: 8, scope: !2841)
!2858 = !DILocation(line: 402, column: 13, scope: !2841)
!2859 = !DILocation(line: 403, column: 17, scope: !2841)
!2860 = !DILocation(line: 403, column: 26, scope: !2841)
!2861 = !DILocation(line: 403, column: 16, scope: !2841)
!2862 = !DILocation(line: 403, column: 57, scope: !2841)
!2863 = !DILocation(line: 403, column: 66, scope: !2841)
!2864 = !DILocation(line: 403, column: 56, scope: !2841)
!2865 = !DILocation(line: 403, column: 3, scope: !2841)
!2866 = !DILocation(line: 403, column: 8, scope: !2841)
!2867 = !DILocation(line: 403, column: 12, scope: !2841)
!2868 = !DILocation(line: 404, column: 17, scope: !2841)
!2869 = !DILocation(line: 404, column: 26, scope: !2841)
!2870 = !DILocation(line: 404, column: 16, scope: !2841)
!2871 = !DILocation(line: 404, column: 57, scope: !2841)
!2872 = !DILocation(line: 404, column: 66, scope: !2841)
!2873 = !DILocation(line: 404, column: 56, scope: !2841)
!2874 = !DILocation(line: 404, column: 3, scope: !2841)
!2875 = !DILocation(line: 404, column: 8, scope: !2841)
!2876 = !DILocation(line: 404, column: 14, scope: !2841)
!2877 = !DILocation(line: 406, column: 1, scope: !2797)
!2878 = distinct !DISubprogram(name: "WM_keymap_add_item", scope: !3, file: !3, line: 442, type: !2699, scopeLine: 443, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !356)
!2879 = !DILocalVariable(name: "keymap", arg: 1, scope: !2878, file: !3, line: 442, type: !2188)
!2880 = !DILocation(line: 442, column: 44, scope: !2878)
!2881 = !DILocalVariable(name: "idname", arg: 2, scope: !2878, file: !3, line: 442, type: !2048)
!2882 = !DILocation(line: 442, column: 64, scope: !2878)
!2883 = !DILocalVariable(name: "type", arg: 3, scope: !2878, file: !3, line: 442, type: !273)
!2884 = !DILocation(line: 442, column: 76, scope: !2878)
!2885 = !DILocalVariable(name: "val", arg: 4, scope: !2878, file: !3, line: 442, type: !273)
!2886 = !DILocation(line: 442, column: 86, scope: !2878)
!2887 = !DILocalVariable(name: "modifier", arg: 5, scope: !2878, file: !3, line: 442, type: !273)
!2888 = !DILocation(line: 442, column: 95, scope: !2878)
!2889 = !DILocalVariable(name: "keymodifier", arg: 6, scope: !2878, file: !3, line: 442, type: !273)
!2890 = !DILocation(line: 442, column: 109, scope: !2878)
!2891 = !DILocalVariable(name: "kmi", scope: !2878, file: !3, line: 444, type: !287)
!2892 = !DILocation(line: 444, column: 16, scope: !2878)
!2893 = !DILocation(line: 444, column: 22, scope: !2878)
!2894 = !DILocation(line: 446, column: 15, scope: !2878)
!2895 = !DILocation(line: 446, column: 23, scope: !2878)
!2896 = !DILocation(line: 446, column: 30, scope: !2878)
!2897 = !DILocation(line: 446, column: 2, scope: !2878)
!2898 = !DILocation(line: 447, column: 14, scope: !2878)
!2899 = !DILocation(line: 447, column: 19, scope: !2878)
!2900 = !DILocation(line: 447, column: 27, scope: !2878)
!2901 = !DILocation(line: 447, column: 2, scope: !2878)
!2902 = !DILocation(line: 449, column: 19, scope: !2878)
!2903 = !DILocation(line: 449, column: 24, scope: !2878)
!2904 = !DILocation(line: 449, column: 30, scope: !2878)
!2905 = !DILocation(line: 449, column: 35, scope: !2878)
!2906 = !DILocation(line: 449, column: 45, scope: !2878)
!2907 = !DILocation(line: 449, column: 2, scope: !2878)
!2908 = !DILocation(line: 450, column: 32, scope: !2878)
!2909 = !DILocation(line: 450, column: 2, scope: !2878)
!2910 = !DILocation(line: 452, column: 21, scope: !2878)
!2911 = !DILocation(line: 452, column: 29, scope: !2878)
!2912 = !DILocation(line: 452, column: 2, scope: !2878)
!2913 = !DILocation(line: 454, column: 26, scope: !2878)
!2914 = !DILocation(line: 454, column: 34, scope: !2878)
!2915 = !DILocation(line: 454, column: 2, scope: !2878)
!2916 = !DILocation(line: 456, column: 9, scope: !2878)
!2917 = !DILocation(line: 456, column: 2, scope: !2878)
!2918 = distinct !DISubprogram(name: "WM_keymap_add_menu", scope: !3, file: !3, line: 460, type: !2699, scopeLine: 461, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !356)
!2919 = !DILocalVariable(name: "keymap", arg: 1, scope: !2918, file: !3, line: 460, type: !2188)
!2920 = !DILocation(line: 460, column: 44, scope: !2918)
!2921 = !DILocalVariable(name: "idname", arg: 2, scope: !2918, file: !3, line: 460, type: !2048)
!2922 = !DILocation(line: 460, column: 64, scope: !2918)
!2923 = !DILocalVariable(name: "type", arg: 3, scope: !2918, file: !3, line: 460, type: !273)
!2924 = !DILocation(line: 460, column: 76, scope: !2918)
!2925 = !DILocalVariable(name: "val", arg: 4, scope: !2918, file: !3, line: 460, type: !273)
!2926 = !DILocation(line: 460, column: 86, scope: !2918)
!2927 = !DILocalVariable(name: "modifier", arg: 5, scope: !2918, file: !3, line: 460, type: !273)
!2928 = !DILocation(line: 460, column: 95, scope: !2918)
!2929 = !DILocalVariable(name: "keymodifier", arg: 6, scope: !2918, file: !3, line: 460, type: !273)
!2930 = !DILocation(line: 460, column: 109, scope: !2918)
!2931 = !DILocalVariable(name: "kmi", scope: !2918, file: !3, line: 462, type: !287)
!2932 = !DILocation(line: 462, column: 16, scope: !2918)
!2933 = !DILocation(line: 462, column: 41, scope: !2918)
!2934 = !DILocation(line: 462, column: 68, scope: !2918)
!2935 = !DILocation(line: 462, column: 74, scope: !2918)
!2936 = !DILocation(line: 462, column: 79, scope: !2918)
!2937 = !DILocation(line: 462, column: 89, scope: !2918)
!2938 = !DILocation(line: 462, column: 22, scope: !2918)
!2939 = !DILocation(line: 463, column: 17, scope: !2918)
!2940 = !DILocation(line: 463, column: 22, scope: !2918)
!2941 = !DILocation(line: 463, column: 35, scope: !2918)
!2942 = !DILocation(line: 463, column: 2, scope: !2918)
!2943 = !DILocation(line: 464, column: 9, scope: !2918)
!2944 = !DILocation(line: 464, column: 2, scope: !2918)
!2945 = distinct !DISubprogram(name: "WM_keymap_add_menu_pie", scope: !3, file: !3, line: 467, type: !2699, scopeLine: 468, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !356)
!2946 = !DILocalVariable(name: "keymap", arg: 1, scope: !2945, file: !3, line: 467, type: !2188)
!2947 = !DILocation(line: 467, column: 48, scope: !2945)
!2948 = !DILocalVariable(name: "idname", arg: 2, scope: !2945, file: !3, line: 467, type: !2048)
!2949 = !DILocation(line: 467, column: 68, scope: !2945)
!2950 = !DILocalVariable(name: "type", arg: 3, scope: !2945, file: !3, line: 467, type: !273)
!2951 = !DILocation(line: 467, column: 80, scope: !2945)
!2952 = !DILocalVariable(name: "val", arg: 4, scope: !2945, file: !3, line: 467, type: !273)
!2953 = !DILocation(line: 467, column: 90, scope: !2945)
!2954 = !DILocalVariable(name: "modifier", arg: 5, scope: !2945, file: !3, line: 467, type: !273)
!2955 = !DILocation(line: 467, column: 99, scope: !2945)
!2956 = !DILocalVariable(name: "keymodifier", arg: 6, scope: !2945, file: !3, line: 467, type: !273)
!2957 = !DILocation(line: 467, column: 113, scope: !2945)
!2958 = !DILocalVariable(name: "kmi", scope: !2945, file: !3, line: 469, type: !287)
!2959 = !DILocation(line: 469, column: 16, scope: !2945)
!2960 = !DILocation(line: 469, column: 41, scope: !2945)
!2961 = !DILocation(line: 469, column: 72, scope: !2945)
!2962 = !DILocation(line: 469, column: 78, scope: !2945)
!2963 = !DILocation(line: 469, column: 83, scope: !2945)
!2964 = !DILocation(line: 469, column: 93, scope: !2945)
!2965 = !DILocation(line: 469, column: 22, scope: !2945)
!2966 = !DILocation(line: 470, column: 17, scope: !2945)
!2967 = !DILocation(line: 470, column: 22, scope: !2945)
!2968 = !DILocation(line: 470, column: 35, scope: !2945)
!2969 = !DILocation(line: 470, column: 2, scope: !2945)
!2970 = !DILocation(line: 471, column: 9, scope: !2945)
!2971 = !DILocation(line: 471, column: 2, scope: !2945)
!2972 = distinct !DISubprogram(name: "WM_keymap_remove_item", scope: !3, file: !3, line: 474, type: !2973, scopeLine: 475, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !356)
!2973 = !DISubroutineType(types: !2974)
!2974 = !{!1360, !2188, !287}
!2975 = !DILocalVariable(name: "keymap", arg: 1, scope: !2972, file: !3, line: 474, type: !2188)
!2976 = !DILocation(line: 474, column: 38, scope: !2972)
!2977 = !DILocalVariable(name: "kmi", arg: 2, scope: !2972, file: !3, line: 474, type: !287)
!2978 = !DILocation(line: 474, column: 60, scope: !2972)
!2979 = !DILocation(line: 476, column: 21, scope: !2980)
!2980 = distinct !DILexicalBlock(scope: !2972, file: !3, line: 476, column: 6)
!2981 = !DILocation(line: 476, column: 29, scope: !2980)
!2982 = !DILocation(line: 476, column: 36, scope: !2980)
!2983 = !DILocation(line: 476, column: 6, scope: !2980)
!2984 = !DILocation(line: 476, column: 41, scope: !2980)
!2985 = !DILocation(line: 476, column: 6, scope: !2972)
!2986 = !DILocation(line: 477, column: 7, scope: !2987)
!2987 = distinct !DILexicalBlock(scope: !2988, file: !3, line: 477, column: 7)
!2988 = distinct !DILexicalBlock(scope: !2980, file: !3, line: 476, column: 48)
!2989 = !DILocation(line: 477, column: 12, scope: !2987)
!2990 = !DILocation(line: 477, column: 7, scope: !2988)
!2991 = !DILocation(line: 478, column: 32, scope: !2992)
!2992 = distinct !DILexicalBlock(scope: !2987, file: !3, line: 477, column: 17)
!2993 = !DILocation(line: 478, column: 37, scope: !2992)
!2994 = !DILocation(line: 478, column: 4, scope: !2992)
!2995 = !DILocation(line: 479, column: 4, scope: !2992)
!2996 = !DILocation(line: 479, column: 14, scope: !2992)
!2997 = !DILocation(line: 479, column: 19, scope: !2992)
!2998 = !DILocation(line: 480, column: 3, scope: !2992)
!2999 = !DILocation(line: 481, column: 18, scope: !2988)
!3000 = !DILocation(line: 481, column: 26, scope: !2988)
!3001 = !DILocation(line: 481, column: 33, scope: !2988)
!3002 = !DILocation(line: 481, column: 3, scope: !2988)
!3003 = !DILocation(line: 483, column: 27, scope: !2988)
!3004 = !DILocation(line: 483, column: 3, scope: !2988)
!3005 = !DILocation(line: 484, column: 3, scope: !2988)
!3006 = !DILocation(line: 487, column: 3, scope: !3007)
!3007 = distinct !DILexicalBlock(scope: !2980, file: !3, line: 486, column: 7)
!3008 = !DILocation(line: 489, column: 1, scope: !2972)
!3009 = distinct !DISubprogram(name: "WM_keymap_list_find", scope: !3, file: !3, line: 726, type: !3010, scopeLine: 727, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !356)
!3010 = !DISubroutineType(types: !3011)
!3011 = !{!2188, !767, !2048, !273, !273}
!3012 = !DILocalVariable(name: "lb", arg: 1, scope: !3009, file: !3, line: 726, type: !767)
!3013 = !DILocation(line: 726, column: 41, scope: !3009)
!3014 = !DILocalVariable(name: "idname", arg: 2, scope: !3009, file: !3, line: 726, type: !2048)
!3015 = !DILocation(line: 726, column: 57, scope: !3009)
!3016 = !DILocalVariable(name: "spaceid", arg: 3, scope: !3009, file: !3, line: 726, type: !273)
!3017 = !DILocation(line: 726, column: 69, scope: !3009)
!3018 = !DILocalVariable(name: "regionid", arg: 4, scope: !3009, file: !3, line: 726, type: !273)
!3019 = !DILocation(line: 726, column: 82, scope: !3009)
!3020 = !DILocalVariable(name: "km", scope: !3009, file: !3, line: 728, type: !2188)
!3021 = !DILocation(line: 728, column: 12, scope: !3009)
!3022 = !DILocation(line: 730, column: 12, scope: !3023)
!3023 = distinct !DILexicalBlock(scope: !3009, file: !3, line: 730, column: 2)
!3024 = !DILocation(line: 730, column: 16, scope: !3023)
!3025 = !DILocation(line: 730, column: 10, scope: !3023)
!3026 = !DILocation(line: 730, column: 7, scope: !3023)
!3027 = !DILocation(line: 730, column: 23, scope: !3028)
!3028 = distinct !DILexicalBlock(scope: !3023, file: !3, line: 730, column: 2)
!3029 = !DILocation(line: 730, column: 2, scope: !3023)
!3030 = !DILocation(line: 731, column: 7, scope: !3031)
!3031 = distinct !DILexicalBlock(scope: !3028, file: !3, line: 731, column: 7)
!3032 = !DILocation(line: 731, column: 11, scope: !3031)
!3033 = !DILocation(line: 731, column: 22, scope: !3031)
!3034 = !DILocation(line: 731, column: 19, scope: !3031)
!3035 = !DILocation(line: 731, column: 30, scope: !3031)
!3036 = !DILocation(line: 731, column: 33, scope: !3031)
!3037 = !DILocation(line: 731, column: 37, scope: !3031)
!3038 = !DILocation(line: 731, column: 49, scope: !3031)
!3039 = !DILocation(line: 731, column: 46, scope: !3031)
!3040 = !DILocation(line: 731, column: 7, scope: !3028)
!3041 = !DILocation(line: 732, column: 21, scope: !3042)
!3042 = distinct !DILexicalBlock(scope: !3031, file: !3, line: 732, column: 8)
!3043 = !DILocation(line: 732, column: 29, scope: !3042)
!3044 = !DILocation(line: 732, column: 33, scope: !3042)
!3045 = !DILocation(line: 732, column: 13, scope: !3042)
!3046 = !DILocation(line: 732, column: 10, scope: !3042)
!3047 = !DILocation(line: 732, column: 8, scope: !3031)
!3048 = !DILocation(line: 733, column: 12, scope: !3042)
!3049 = !DILocation(line: 733, column: 5, scope: !3042)
!3050 = !DILocation(line: 732, column: 54, scope: !3042)
!3051 = !DILocation(line: 730, column: 32, scope: !3028)
!3052 = !DILocation(line: 730, column: 36, scope: !3028)
!3053 = !DILocation(line: 730, column: 30, scope: !3028)
!3054 = !DILocation(line: 730, column: 2, scope: !3028)
!3055 = distinct !{!3055, !3029, !3056}
!3056 = !DILocation(line: 733, column: 12, scope: !3023)
!3057 = !DILocation(line: 735, column: 2, scope: !3009)
!3058 = !DILocation(line: 736, column: 1, scope: !3009)
!3059 = distinct !DISubprogram(name: "WM_keymap_find", scope: !3, file: !3, line: 738, type: !3060, scopeLine: 739, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !356)
!3060 = !DISubroutineType(types: !3061)
!3061 = !{!2188, !440, !2048, !273, !273}
!3062 = !DILocalVariable(name: "keyconf", arg: 1, scope: !3059, file: !3, line: 738, type: !440)
!3063 = !DILocation(line: 738, column: 39, scope: !3059)
!3064 = !DILocalVariable(name: "idname", arg: 2, scope: !3059, file: !3, line: 738, type: !2048)
!3065 = !DILocation(line: 738, column: 60, scope: !3059)
!3066 = !DILocalVariable(name: "spaceid", arg: 3, scope: !3059, file: !3, line: 738, type: !273)
!3067 = !DILocation(line: 738, column: 72, scope: !3059)
!3068 = !DILocalVariable(name: "regionid", arg: 4, scope: !3059, file: !3, line: 738, type: !273)
!3069 = !DILocation(line: 738, column: 85, scope: !3059)
!3070 = !DILocalVariable(name: "km", scope: !3059, file: !3, line: 740, type: !2188)
!3071 = !DILocation(line: 740, column: 12, scope: !3059)
!3072 = !DILocation(line: 740, column: 38, scope: !3059)
!3073 = !DILocation(line: 740, column: 47, scope: !3059)
!3074 = !DILocation(line: 740, column: 56, scope: !3059)
!3075 = !DILocation(line: 740, column: 64, scope: !3059)
!3076 = !DILocation(line: 740, column: 73, scope: !3059)
!3077 = !DILocation(line: 740, column: 17, scope: !3059)
!3078 = !DILocation(line: 742, column: 6, scope: !3079)
!3079 = distinct !DILexicalBlock(scope: !3059, file: !3, line: 742, column: 6)
!3080 = !DILocation(line: 742, column: 9, scope: !3079)
!3081 = !DILocation(line: 742, column: 6, scope: !3059)
!3082 = !DILocation(line: 743, column: 22, scope: !3083)
!3083 = distinct !DILexicalBlock(scope: !3079, file: !3, line: 742, column: 18)
!3084 = !DILocation(line: 743, column: 30, scope: !3083)
!3085 = !DILocation(line: 743, column: 39, scope: !3083)
!3086 = !DILocation(line: 743, column: 8, scope: !3083)
!3087 = !DILocation(line: 743, column: 6, scope: !3083)
!3088 = !DILocation(line: 744, column: 16, scope: !3083)
!3089 = !DILocation(line: 744, column: 25, scope: !3083)
!3090 = !DILocation(line: 744, column: 34, scope: !3083)
!3091 = !DILocation(line: 744, column: 3, scope: !3083)
!3092 = !DILocation(line: 746, column: 27, scope: !3083)
!3093 = !DILocation(line: 746, column: 3, scope: !3083)
!3094 = !DILocation(line: 747, column: 2, scope: !3083)
!3095 = !DILocation(line: 749, column: 9, scope: !3059)
!3096 = !DILocation(line: 749, column: 2, scope: !3059)
!3097 = distinct !DISubprogram(name: "wm_keymap_new", scope: !3, file: !3, line: 326, type: !3098, scopeLine: 327, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !356)
!3098 = !DISubroutineType(types: !3099)
!3099 = !{!2188, !2048, !273, !273}
!3100 = !DILocalVariable(name: "idname", arg: 1, scope: !3097, file: !3, line: 326, type: !2048)
!3101 = !DILocation(line: 326, column: 44, scope: !3097)
!3102 = !DILocalVariable(name: "spaceid", arg: 2, scope: !3097, file: !3, line: 326, type: !273)
!3103 = !DILocation(line: 326, column: 56, scope: !3097)
!3104 = !DILocalVariable(name: "regionid", arg: 3, scope: !3097, file: !3, line: 326, type: !273)
!3105 = !DILocation(line: 326, column: 69, scope: !3097)
!3106 = !DILocalVariable(name: "km", scope: !3097, file: !3, line: 328, type: !2188)
!3107 = !DILocation(line: 328, column: 12, scope: !3097)
!3108 = !DILocation(line: 328, column: 17, scope: !3097)
!3109 = !DILocation(line: 330, column: 14, scope: !3097)
!3110 = !DILocation(line: 330, column: 18, scope: !3097)
!3111 = !DILocation(line: 330, column: 26, scope: !3097)
!3112 = !DILocation(line: 330, column: 2, scope: !3097)
!3113 = !DILocation(line: 331, column: 16, scope: !3097)
!3114 = !DILocation(line: 331, column: 2, scope: !3097)
!3115 = !DILocation(line: 331, column: 6, scope: !3097)
!3116 = !DILocation(line: 331, column: 14, scope: !3097)
!3117 = !DILocation(line: 332, column: 17, scope: !3097)
!3118 = !DILocation(line: 332, column: 2, scope: !3097)
!3119 = !DILocation(line: 332, column: 6, scope: !3097)
!3120 = !DILocation(line: 332, column: 15, scope: !3097)
!3121 = !DILocation(line: 334, column: 9, scope: !3097)
!3122 = !DILocation(line: 334, column: 2, scope: !3097)
!3123 = distinct !DISubprogram(name: "WM_keymap_find_all", scope: !3, file: !3, line: 752, type: !3124, scopeLine: 753, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !356)
!3124 = !DISubroutineType(types: !3125)
!3125 = !{!2188, !3126, !2048, !273, !273}
!3126 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3127, size: 64)
!3127 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !275)
!3128 = !DILocalVariable(name: "C", arg: 1, scope: !3123, file: !3, line: 752, type: !3126)
!3129 = !DILocation(line: 752, column: 46, scope: !3123)
!3130 = !DILocalVariable(name: "idname", arg: 2, scope: !3123, file: !3, line: 752, type: !2048)
!3131 = !DILocation(line: 752, column: 61, scope: !3123)
!3132 = !DILocalVariable(name: "spaceid", arg: 3, scope: !3123, file: !3, line: 752, type: !273)
!3133 = !DILocation(line: 752, column: 73, scope: !3123)
!3134 = !DILocalVariable(name: "regionid", arg: 4, scope: !3123, file: !3, line: 752, type: !273)
!3135 = !DILocation(line: 752, column: 86, scope: !3123)
!3136 = !DILocalVariable(name: "wm", scope: !3123, file: !3, line: 754, type: !452)
!3137 = !DILocation(line: 754, column: 19, scope: !3123)
!3138 = !DILocation(line: 754, column: 39, scope: !3123)
!3139 = !DILocation(line: 754, column: 24, scope: !3123)
!3140 = !DILocation(line: 756, column: 30, scope: !3123)
!3141 = !DILocation(line: 756, column: 34, scope: !3123)
!3142 = !DILocation(line: 756, column: 44, scope: !3123)
!3143 = !DILocation(line: 756, column: 53, scope: !3123)
!3144 = !DILocation(line: 756, column: 61, scope: !3123)
!3145 = !DILocation(line: 756, column: 70, scope: !3123)
!3146 = !DILocation(line: 756, column: 9, scope: !3123)
!3147 = !DILocation(line: 756, column: 2, scope: !3123)
!3148 = distinct !DISubprogram(name: "WM_modalkeymap_add", scope: !3, file: !3, line: 763, type: !3149, scopeLine: 764, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !356)
!3149 = !DISubroutineType(types: !3150)
!3150 = !{!2188, !440, !2048, !3151}
!3151 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3152, size: 64)
!3152 = !DIDerivedType(tag: DW_TAG_typedef, name: "EnumPropertyItem", file: !345, line: 308, baseType: !3153)
!3153 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "EnumPropertyItem", file: !345, line: 302, size: 320, elements: !3154)
!3154 = !{!3155, !3156, !3157, !3158, !3159}
!3155 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !3153, file: !345, line: 303, baseType: !273, size: 32)
!3156 = !DIDerivedType(tag: DW_TAG_member, name: "identifier", scope: !3153, file: !345, line: 304, baseType: !2048, size: 64, offset: 64)
!3157 = !DIDerivedType(tag: DW_TAG_member, name: "icon", scope: !3153, file: !345, line: 305, baseType: !273, size: 32, offset: 128)
!3158 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3153, file: !345, line: 306, baseType: !2048, size: 64, offset: 192)
!3159 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !3153, file: !345, line: 307, baseType: !2048, size: 64, offset: 256)
!3160 = !DILocalVariable(name: "keyconf", arg: 1, scope: !3148, file: !3, line: 763, type: !440)
!3161 = !DILocation(line: 763, column: 43, scope: !3148)
!3162 = !DILocalVariable(name: "idname", arg: 2, scope: !3148, file: !3, line: 763, type: !2048)
!3163 = !DILocation(line: 763, column: 64, scope: !3148)
!3164 = !DILocalVariable(name: "items", arg: 3, scope: !3148, file: !3, line: 763, type: !3151)
!3165 = !DILocation(line: 763, column: 90, scope: !3148)
!3166 = !DILocalVariable(name: "km", scope: !3148, file: !3, line: 765, type: !2188)
!3167 = !DILocation(line: 765, column: 12, scope: !3148)
!3168 = !DILocation(line: 765, column: 32, scope: !3148)
!3169 = !DILocation(line: 765, column: 41, scope: !3148)
!3170 = !DILocation(line: 765, column: 17, scope: !3148)
!3171 = !DILocation(line: 766, column: 2, scope: !3148)
!3172 = !DILocation(line: 766, column: 6, scope: !3148)
!3173 = !DILocation(line: 766, column: 11, scope: !3148)
!3174 = !DILocation(line: 767, column: 20, scope: !3148)
!3175 = !DILocation(line: 767, column: 2, scope: !3148)
!3176 = !DILocation(line: 767, column: 6, scope: !3148)
!3177 = !DILocation(line: 767, column: 18, scope: !3148)
!3178 = !DILocation(line: 769, column: 7, scope: !3179)
!3179 = distinct !DILexicalBlock(scope: !3148, file: !3, line: 769, column: 6)
!3180 = !DILocation(line: 769, column: 6, scope: !3148)
!3181 = !DILocalVariable(name: "wm", scope: !3182, file: !3, line: 771, type: !452)
!3182 = distinct !DILexicalBlock(scope: !3179, file: !3, line: 769, column: 14)
!3183 = !DILocation(line: 771, column: 20, scope: !3182)
!3184 = !DILocation(line: 771, column: 27, scope: !3182)
!3185 = !DILocation(line: 771, column: 33, scope: !3182)
!3186 = !DILocation(line: 771, column: 36, scope: !3182)
!3187 = !DILocation(line: 771, column: 25, scope: !3182)
!3188 = !DILocation(line: 772, column: 7, scope: !3189)
!3189 = distinct !DILexicalBlock(scope: !3182, file: !3, line: 772, column: 7)
!3190 = !DILocation(line: 772, column: 11, scope: !3189)
!3191 = !DILocation(line: 772, column: 7, scope: !3182)
!3192 = !DILocalVariable(name: "defaultkm", scope: !3193, file: !3, line: 773, type: !2188)
!3193 = distinct !DILexicalBlock(scope: !3189, file: !3, line: 772, column: 24)
!3194 = !DILocation(line: 773, column: 14, scope: !3193)
!3195 = !DILocation(line: 773, column: 47, scope: !3193)
!3196 = !DILocation(line: 773, column: 51, scope: !3193)
!3197 = !DILocation(line: 773, column: 64, scope: !3193)
!3198 = !DILocation(line: 773, column: 73, scope: !3193)
!3199 = !DILocation(line: 773, column: 77, scope: !3193)
!3200 = !DILocation(line: 773, column: 26, scope: !3193)
!3201 = !DILocation(line: 775, column: 8, scope: !3202)
!3202 = distinct !DILexicalBlock(scope: !3193, file: !3, line: 775, column: 8)
!3203 = !DILocation(line: 775, column: 8, scope: !3193)
!3204 = !DILocation(line: 776, column: 23, scope: !3205)
!3205 = distinct !DILexicalBlock(scope: !3202, file: !3, line: 775, column: 19)
!3206 = !DILocation(line: 776, column: 34, scope: !3205)
!3207 = !DILocation(line: 776, column: 5, scope: !3205)
!3208 = !DILocation(line: 776, column: 9, scope: !3205)
!3209 = !DILocation(line: 776, column: 21, scope: !3205)
!3210 = !DILocation(line: 777, column: 16, scope: !3205)
!3211 = !DILocation(line: 777, column: 27, scope: !3205)
!3212 = !DILocation(line: 777, column: 5, scope: !3205)
!3213 = !DILocation(line: 777, column: 9, scope: !3205)
!3214 = !DILocation(line: 777, column: 14, scope: !3205)
!3215 = !DILocation(line: 778, column: 4, scope: !3205)
!3216 = !DILocation(line: 779, column: 3, scope: !3193)
!3217 = !DILocation(line: 780, column: 2, scope: !3182)
!3218 = !DILocation(line: 782, column: 9, scope: !3148)
!3219 = !DILocation(line: 782, column: 2, scope: !3148)
!3220 = distinct !DISubprogram(name: "WM_modalkeymap_get", scope: !3, file: !3, line: 785, type: !3221, scopeLine: 786, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !356)
!3221 = !DISubroutineType(types: !3222)
!3222 = !{!2188, !440, !2048}
!3223 = !DILocalVariable(name: "keyconf", arg: 1, scope: !3220, file: !3, line: 785, type: !440)
!3224 = !DILocation(line: 785, column: 43, scope: !3220)
!3225 = !DILocalVariable(name: "idname", arg: 2, scope: !3220, file: !3, line: 785, type: !2048)
!3226 = !DILocation(line: 785, column: 64, scope: !3220)
!3227 = !DILocalVariable(name: "km", scope: !3220, file: !3, line: 787, type: !2188)
!3228 = !DILocation(line: 787, column: 12, scope: !3220)
!3229 = !DILocation(line: 789, column: 12, scope: !3230)
!3230 = distinct !DILexicalBlock(scope: !3220, file: !3, line: 789, column: 2)
!3231 = !DILocation(line: 789, column: 21, scope: !3230)
!3232 = !DILocation(line: 789, column: 29, scope: !3230)
!3233 = !DILocation(line: 789, column: 10, scope: !3230)
!3234 = !DILocation(line: 789, column: 7, scope: !3230)
!3235 = !DILocation(line: 789, column: 36, scope: !3236)
!3236 = distinct !DILexicalBlock(scope: !3230, file: !3, line: 789, column: 2)
!3237 = !DILocation(line: 789, column: 2, scope: !3230)
!3238 = !DILocation(line: 790, column: 7, scope: !3239)
!3239 = distinct !DILexicalBlock(scope: !3236, file: !3, line: 790, column: 7)
!3240 = !DILocation(line: 790, column: 11, scope: !3239)
!3241 = !DILocation(line: 790, column: 16, scope: !3239)
!3242 = !DILocation(line: 790, column: 7, scope: !3236)
!3243 = !DILocation(line: 791, column: 21, scope: !3244)
!3244 = distinct !DILexicalBlock(scope: !3239, file: !3, line: 791, column: 8)
!3245 = !DILocation(line: 791, column: 29, scope: !3244)
!3246 = !DILocation(line: 791, column: 33, scope: !3244)
!3247 = !DILocation(line: 791, column: 13, scope: !3244)
!3248 = !DILocation(line: 791, column: 10, scope: !3244)
!3249 = !DILocation(line: 791, column: 8, scope: !3239)
!3250 = !DILocation(line: 792, column: 5, scope: !3244)
!3251 = !DILocation(line: 791, column: 54, scope: !3244)
!3252 = !DILocation(line: 790, column: 18, scope: !3239)
!3253 = !DILocation(line: 789, column: 45, scope: !3236)
!3254 = !DILocation(line: 789, column: 49, scope: !3236)
!3255 = !DILocation(line: 789, column: 43, scope: !3236)
!3256 = !DILocation(line: 789, column: 2, scope: !3236)
!3257 = distinct !{!3257, !3237, !3258}
!3258 = !DILocation(line: 792, column: 5, scope: !3230)
!3259 = !DILocation(line: 794, column: 9, scope: !3220)
!3260 = !DILocation(line: 794, column: 2, scope: !3220)
!3261 = distinct !DISubprogram(name: "WM_modalkeymap_add_item", scope: !3, file: !3, line: 798, type: !3262, scopeLine: 799, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !356)
!3262 = !DISubroutineType(types: !3263)
!3263 = !{!287, !2188, !273, !273, !273, !273, !273}
!3264 = !DILocalVariable(name: "km", arg: 1, scope: !3261, file: !3, line: 798, type: !2188)
!3265 = !DILocation(line: 798, column: 49, scope: !3261)
!3266 = !DILocalVariable(name: "type", arg: 2, scope: !3261, file: !3, line: 798, type: !273)
!3267 = !DILocation(line: 798, column: 57, scope: !3261)
!3268 = !DILocalVariable(name: "val", arg: 3, scope: !3261, file: !3, line: 798, type: !273)
!3269 = !DILocation(line: 798, column: 67, scope: !3261)
!3270 = !DILocalVariable(name: "modifier", arg: 4, scope: !3261, file: !3, line: 798, type: !273)
!3271 = !DILocation(line: 798, column: 76, scope: !3261)
!3272 = !DILocalVariable(name: "keymodifier", arg: 5, scope: !3261, file: !3, line: 798, type: !273)
!3273 = !DILocation(line: 798, column: 90, scope: !3261)
!3274 = !DILocalVariable(name: "value", arg: 6, scope: !3261, file: !3, line: 798, type: !273)
!3275 = !DILocation(line: 798, column: 107, scope: !3261)
!3276 = !DILocalVariable(name: "kmi", scope: !3261, file: !3, line: 800, type: !287)
!3277 = !DILocation(line: 800, column: 16, scope: !3261)
!3278 = !DILocation(line: 800, column: 22, scope: !3261)
!3279 = !DILocation(line: 802, column: 15, scope: !3261)
!3280 = !DILocation(line: 802, column: 19, scope: !3261)
!3281 = !DILocation(line: 802, column: 26, scope: !3261)
!3282 = !DILocation(line: 802, column: 2, scope: !3261)
!3283 = !DILocation(line: 803, column: 19, scope: !3261)
!3284 = !DILocation(line: 803, column: 2, scope: !3261)
!3285 = !DILocation(line: 803, column: 7, scope: !3261)
!3286 = !DILocation(line: 803, column: 17, scope: !3261)
!3287 = !DILocation(line: 805, column: 19, scope: !3261)
!3288 = !DILocation(line: 805, column: 24, scope: !3261)
!3289 = !DILocation(line: 805, column: 30, scope: !3261)
!3290 = !DILocation(line: 805, column: 35, scope: !3261)
!3291 = !DILocation(line: 805, column: 45, scope: !3261)
!3292 = !DILocation(line: 805, column: 2, scope: !3261)
!3293 = !DILocation(line: 807, column: 21, scope: !3261)
!3294 = !DILocation(line: 807, column: 25, scope: !3261)
!3295 = !DILocation(line: 807, column: 2, scope: !3261)
!3296 = !DILocation(line: 809, column: 26, scope: !3261)
!3297 = !DILocation(line: 809, column: 30, scope: !3261)
!3298 = !DILocation(line: 809, column: 2, scope: !3261)
!3299 = !DILocation(line: 811, column: 9, scope: !3261)
!3300 = !DILocation(line: 811, column: 2, scope: !3261)
!3301 = distinct !DISubprogram(name: "WM_modalkeymap_add_item_str", scope: !3, file: !3, line: 814, type: !3302, scopeLine: 815, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !356)
!3302 = !DISubroutineType(types: !3303)
!3303 = !{!287, !2188, !273, !273, !273, !273, !2048}
!3304 = !DILocalVariable(name: "km", arg: 1, scope: !3301, file: !3, line: 814, type: !2188)
!3305 = !DILocation(line: 814, column: 53, scope: !3301)
!3306 = !DILocalVariable(name: "type", arg: 2, scope: !3301, file: !3, line: 814, type: !273)
!3307 = !DILocation(line: 814, column: 61, scope: !3301)
!3308 = !DILocalVariable(name: "val", arg: 3, scope: !3301, file: !3, line: 814, type: !273)
!3309 = !DILocation(line: 814, column: 71, scope: !3301)
!3310 = !DILocalVariable(name: "modifier", arg: 4, scope: !3301, file: !3, line: 814, type: !273)
!3311 = !DILocation(line: 814, column: 80, scope: !3301)
!3312 = !DILocalVariable(name: "keymodifier", arg: 5, scope: !3301, file: !3, line: 814, type: !273)
!3313 = !DILocation(line: 814, column: 94, scope: !3301)
!3314 = !DILocalVariable(name: "value", arg: 6, scope: !3301, file: !3, line: 814, type: !2048)
!3315 = !DILocation(line: 814, column: 119, scope: !3301)
!3316 = !DILocalVariable(name: "kmi", scope: !3301, file: !3, line: 816, type: !287)
!3317 = !DILocation(line: 816, column: 16, scope: !3301)
!3318 = !DILocation(line: 816, column: 22, scope: !3301)
!3319 = !DILocation(line: 818, column: 15, scope: !3301)
!3320 = !DILocation(line: 818, column: 19, scope: !3301)
!3321 = !DILocation(line: 818, column: 26, scope: !3301)
!3322 = !DILocation(line: 818, column: 2, scope: !3301)
!3323 = !DILocation(line: 819, column: 14, scope: !3301)
!3324 = !DILocation(line: 819, column: 19, scope: !3301)
!3325 = !DILocation(line: 819, column: 34, scope: !3301)
!3326 = !DILocation(line: 819, column: 2, scope: !3301)
!3327 = !DILocation(line: 821, column: 19, scope: !3301)
!3328 = !DILocation(line: 821, column: 24, scope: !3301)
!3329 = !DILocation(line: 821, column: 30, scope: !3301)
!3330 = !DILocation(line: 821, column: 35, scope: !3301)
!3331 = !DILocation(line: 821, column: 45, scope: !3301)
!3332 = !DILocation(line: 821, column: 2, scope: !3301)
!3333 = !DILocation(line: 823, column: 21, scope: !3301)
!3334 = !DILocation(line: 823, column: 25, scope: !3301)
!3335 = !DILocation(line: 823, column: 2, scope: !3301)
!3336 = !DILocation(line: 825, column: 26, scope: !3301)
!3337 = !DILocation(line: 825, column: 30, scope: !3301)
!3338 = !DILocation(line: 825, column: 2, scope: !3301)
!3339 = !DILocation(line: 827, column: 9, scope: !3301)
!3340 = !DILocation(line: 827, column: 2, scope: !3301)
!3341 = distinct !DISubprogram(name: "WM_modalkeymap_find_propvalue", scope: !3, file: !3, line: 830, type: !3342, scopeLine: 831, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !356)
!3342 = !DISubroutineType(types: !3343)
!3343 = !{!287, !2188, !3344}
!3344 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !273)
!3345 = !DILocalVariable(name: "km", arg: 1, scope: !3341, file: !3, line: 830, type: !2188)
!3346 = !DILocation(line: 830, column: 55, scope: !3341)
!3347 = !DILocalVariable(name: "propvalue", arg: 2, scope: !3341, file: !3, line: 830, type: !3344)
!3348 = !DILocation(line: 830, column: 69, scope: !3341)
!3349 = !DILocation(line: 833, column: 6, scope: !3350)
!3350 = distinct !DILexicalBlock(scope: !3341, file: !3, line: 833, column: 6)
!3351 = !DILocation(line: 833, column: 10, scope: !3350)
!3352 = !DILocation(line: 833, column: 15, scope: !3350)
!3353 = !DILocation(line: 833, column: 6, scope: !3341)
!3354 = !DILocalVariable(name: "kmi", scope: !3355, file: !3, line: 834, type: !287)
!3355 = distinct !DILexicalBlock(scope: !3350, file: !3, line: 833, column: 31)
!3356 = !DILocation(line: 834, column: 17, scope: !3355)
!3357 = !DILocation(line: 835, column: 14, scope: !3358)
!3358 = distinct !DILexicalBlock(scope: !3355, file: !3, line: 835, column: 3)
!3359 = !DILocation(line: 835, column: 18, scope: !3358)
!3360 = !DILocation(line: 835, column: 24, scope: !3358)
!3361 = !DILocation(line: 835, column: 12, scope: !3358)
!3362 = !DILocation(line: 835, column: 8, scope: !3358)
!3363 = !DILocation(line: 835, column: 31, scope: !3364)
!3364 = distinct !DILexicalBlock(scope: !3358, file: !3, line: 835, column: 3)
!3365 = !DILocation(line: 835, column: 3, scope: !3358)
!3366 = !DILocation(line: 836, column: 8, scope: !3367)
!3367 = distinct !DILexicalBlock(scope: !3368, file: !3, line: 836, column: 8)
!3368 = distinct !DILexicalBlock(scope: !3364, file: !3, line: 835, column: 53)
!3369 = !DILocation(line: 836, column: 13, scope: !3367)
!3370 = !DILocation(line: 836, column: 26, scope: !3367)
!3371 = !DILocation(line: 836, column: 23, scope: !3367)
!3372 = !DILocation(line: 836, column: 8, scope: !3368)
!3373 = !DILocation(line: 837, column: 12, scope: !3374)
!3374 = distinct !DILexicalBlock(scope: !3367, file: !3, line: 836, column: 37)
!3375 = !DILocation(line: 837, column: 5, scope: !3374)
!3376 = !DILocation(line: 839, column: 3, scope: !3368)
!3377 = !DILocation(line: 835, column: 42, scope: !3364)
!3378 = !DILocation(line: 835, column: 47, scope: !3364)
!3379 = !DILocation(line: 835, column: 40, scope: !3364)
!3380 = !DILocation(line: 835, column: 3, scope: !3364)
!3381 = distinct !{!3381, !3365, !3382}
!3382 = !DILocation(line: 839, column: 3, scope: !3358)
!3383 = !DILocation(line: 840, column: 2, scope: !3355)
!3384 = !DILocation(line: 845, column: 2, scope: !3341)
!3385 = !DILocation(line: 846, column: 1, scope: !3341)
!3386 = distinct !DISubprogram(name: "WM_modalkeymap_assign", scope: !3, file: !3, line: 848, type: !3387, scopeLine: 849, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !356)
!3387 = !DISubroutineType(types: !3388)
!3388 = !{null, !2188, !2048}
!3389 = !DILocalVariable(name: "km", arg: 1, scope: !3386, file: !3, line: 848, type: !2188)
!3390 = !DILocation(line: 848, column: 38, scope: !3386)
!3391 = !DILocalVariable(name: "opname", arg: 2, scope: !3386, file: !3, line: 848, type: !2048)
!3392 = !DILocation(line: 848, column: 54, scope: !3386)
!3393 = !DILocalVariable(name: "ot", scope: !3386, file: !3, line: 850, type: !3394)
!3394 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3395, size: 64)
!3395 = !DIDerivedType(tag: DW_TAG_typedef, name: "wmOperatorType", file: !240, line: 568, baseType: !3396)
!3396 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmOperatorType", file: !240, line: 508, size: 1536, elements: !3397)
!3397 = !{!3398, !3399, !3400, !3401, !3402, !3427, !3431, !3437, !3441, !3442, !3443, !3444, !3445, !3446, !3450, !3451, !3452, !3453, !3457, !3483}
!3398 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3396, file: !240, line: 509, baseType: !2048, size: 64)
!3399 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !3396, file: !240, line: 510, baseType: !2048, size: 64, offset: 64)
!3400 = !DIDerivedType(tag: DW_TAG_member, name: "translation_context", scope: !3396, file: !240, line: 511, baseType: !2048, size: 64, offset: 128)
!3401 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !3396, file: !240, line: 512, baseType: !2048, size: 64, offset: 192)
!3402 = !DIDerivedType(tag: DW_TAG_member, name: "exec", scope: !3396, file: !240, line: 518, baseType: !3403, size: 64, offset: 256)
!3403 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3404, size: 64)
!3404 = !DISubroutineType(types: !3405)
!3405 = !{!273, !2206, !3406}
!3406 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3407, size: 64)
!3407 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmOperator", file: !208, line: 328, size: 1344, elements: !3408)
!3408 = !{!3409, !3410, !3411, !3412, !3413, !3415, !3416, !3417, !3418, !3420, !3421, !3422, !3425, !3426}
!3409 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3407, file: !208, line: 329, baseType: !3406, size: 64)
!3410 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3407, file: !208, line: 329, baseType: !3406, size: 64, offset: 64)
!3411 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !3407, file: !208, line: 332, baseType: !295, size: 512, offset: 128)
!3412 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !3407, file: !208, line: 333, baseType: !299, size: 64, offset: 640)
!3413 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3407, file: !208, line: 336, baseType: !3414, size: 64, offset: 704)
!3414 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3396, size: 64)
!3415 = !DIDerivedType(tag: DW_TAG_member, name: "customdata", scope: !3407, file: !208, line: 337, baseType: !272, size: 64, offset: 768)
!3416 = !DIDerivedType(tag: DW_TAG_member, name: "py_instance", scope: !3407, file: !208, line: 338, baseType: !272, size: 64, offset: 832)
!3417 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !3407, file: !208, line: 340, baseType: !343, size: 64, offset: 896)
!3418 = !DIDerivedType(tag: DW_TAG_member, name: "reports", scope: !3407, file: !208, line: 341, baseType: !3419, size: 64, offset: 960)
!3419 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2095, size: 64)
!3420 = !DIDerivedType(tag: DW_TAG_member, name: "macro", scope: !3407, file: !208, line: 343, baseType: !319, size: 128, offset: 1024)
!3421 = !DIDerivedType(tag: DW_TAG_member, name: "opm", scope: !3407, file: !208, line: 344, baseType: !3406, size: 64, offset: 1152)
!3422 = !DIDerivedType(tag: DW_TAG_member, name: "layout", scope: !3407, file: !208, line: 345, baseType: !3423, size: 64, offset: 1216)
!3423 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3424, size: 64)
!3424 = !DICompositeType(tag: DW_TAG_structure_type, name: "uiLayout", file: !255, line: 46, flags: DIFlagFwdDecl)
!3425 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3407, file: !208, line: 346, baseType: !310, size: 16, offset: 1280)
!3426 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !3407, file: !208, line: 346, baseType: !1893, size: 48, offset: 1296)
!3427 = !DIDerivedType(tag: DW_TAG_member, name: "check", scope: !3396, file: !240, line: 524, baseType: !3428, size: 64, offset: 320)
!3428 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3429, size: 64)
!3429 = !DISubroutineType(types: !3430)
!3430 = !{!1360, !2206, !3406}
!3431 = !DIDerivedType(tag: DW_TAG_member, name: "invoke", scope: !3396, file: !240, line: 530, baseType: !3432, size: 64, offset: 384)
!3432 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3433, size: 64)
!3433 = !DISubroutineType(types: !3434)
!3434 = !{!273, !2206, !3406, !3435}
!3435 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3436, size: 64)
!3436 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2022)
!3437 = !DIDerivedType(tag: DW_TAG_member, name: "cancel", scope: !3396, file: !240, line: 531, baseType: !3438, size: 64, offset: 448)
!3438 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3439, size: 64)
!3439 = !DISubroutineType(types: !3440)
!3440 = !{null, !2206, !3406}
!3441 = !DIDerivedType(tag: DW_TAG_member, name: "modal", scope: !3396, file: !240, line: 532, baseType: !3432, size: 64, offset: 512)
!3442 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !3396, file: !240, line: 536, baseType: !2203, size: 64, offset: 576)
!3443 = !DIDerivedType(tag: DW_TAG_member, name: "ui", scope: !3396, file: !240, line: 539, baseType: !3438, size: 64, offset: 640)
!3444 = !DIDerivedType(tag: DW_TAG_member, name: "srna", scope: !3396, file: !240, line: 542, baseType: !352, size: 64, offset: 704)
!3445 = !DIDerivedType(tag: DW_TAG_member, name: "last_properties", scope: !3396, file: !240, line: 545, baseType: !305, size: 64, offset: 768)
!3446 = !DIDerivedType(tag: DW_TAG_member, name: "prop", scope: !3396, file: !240, line: 549, baseType: !3447, size: 64, offset: 832)
!3447 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3448, size: 64)
!3448 = !DIDerivedType(tag: DW_TAG_typedef, name: "PropertyRNA", file: !345, line: 333, baseType: !3449)
!3449 = !DICompositeType(tag: DW_TAG_structure_type, name: "PropertyRNA", file: !345, line: 39, flags: DIFlagFwdDecl)
!3450 = !DIDerivedType(tag: DW_TAG_member, name: "macro", scope: !3396, file: !240, line: 552, baseType: !319, size: 128, offset: 896)
!3451 = !DIDerivedType(tag: DW_TAG_member, name: "modalkeymap", scope: !3396, file: !240, line: 555, baseType: !2193, size: 64, offset: 1024)
!3452 = !DIDerivedType(tag: DW_TAG_member, name: "pyop_data", scope: !3396, file: !240, line: 559, baseType: !272, size: 64, offset: 1088)
!3453 = !DIDerivedType(tag: DW_TAG_member, name: "pyop_poll", scope: !3396, file: !240, line: 560, baseType: !3454, size: 64, offset: 1152)
!3454 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3455, size: 64)
!3455 = !DISubroutineType(types: !3456)
!3456 = !{!273, !2206, !3414}
!3457 = !DIDerivedType(tag: DW_TAG_member, name: "ext", scope: !3396, file: !240, line: 563, baseType: !3458, size: 256, offset: 1216)
!3458 = !DIDerivedType(tag: DW_TAG_typedef, name: "ExtensionRNA", file: !345, line: 436, baseType: !3459)
!3459 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ExtensionRNA", file: !345, line: 430, size: 256, elements: !3460)
!3460 = !{!3461, !3462, !3465, !3481}
!3461 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3459, file: !345, line: 431, baseType: !272, size: 64)
!3462 = !DIDerivedType(tag: DW_TAG_member, name: "srna", scope: !3459, file: !345, line: 432, baseType: !3463, size: 64, offset: 64)
!3463 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3464, size: 64)
!3464 = !DIDerivedType(tag: DW_TAG_typedef, name: "StructRNA", file: !345, line: 417, baseType: !353)
!3465 = !DIDerivedType(tag: DW_TAG_member, name: "call", scope: !3459, file: !345, line: 433, baseType: !3466, size: 64, offset: 128)
!3466 = !DIDerivedType(tag: DW_TAG_typedef, name: "StructCallbackFunc", file: !345, line: 408, baseType: !3467)
!3467 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3468, size: 64)
!3468 = !DISubroutineType(types: !3469)
!3469 = !{!273, !2206, !343, !3470, !3472}
!3470 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3471, size: 64)
!3471 = !DICompositeType(tag: DW_TAG_structure_type, name: "FunctionRNA", file: !345, line: 38, flags: DIFlagFwdDecl)
!3472 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3473, size: 64)
!3473 = !DIDerivedType(tag: DW_TAG_typedef, name: "ParameterList", file: !345, line: 348, baseType: !3474)
!3474 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParameterList", file: !345, line: 337, size: 256, elements: !3475)
!3475 = !{!3476, !3477, !3478, !3479, !3480}
!3476 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3474, file: !345, line: 339, baseType: !272, size: 64)
!3477 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !3474, file: !345, line: 342, baseType: !3470, size: 64, offset: 64)
!3478 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_size", scope: !3474, file: !345, line: 345, baseType: !273, size: 32, offset: 128)
!3479 = !DIDerivedType(tag: DW_TAG_member, name: "arg_count", scope: !3474, file: !345, line: 347, baseType: !273, size: 32, offset: 160)
!3480 = !DIDerivedType(tag: DW_TAG_member, name: "ret_count", scope: !3474, file: !345, line: 347, baseType: !273, size: 32, offset: 192)
!3481 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !3459, file: !345, line: 434, baseType: !3482, size: 64, offset: 192)
!3482 = !DIDerivedType(tag: DW_TAG_typedef, name: "StructFreeFunc", file: !345, line: 409, baseType: !904)
!3483 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3396, file: !240, line: 566, baseType: !310, size: 16, offset: 1472)
!3484 = !DILocation(line: 850, column: 18, scope: !3386)
!3485 = !DILocation(line: 850, column: 44, scope: !3386)
!3486 = !DILocation(line: 850, column: 23, scope: !3386)
!3487 = !DILocation(line: 852, column: 6, scope: !3488)
!3488 = distinct !DILexicalBlock(scope: !3386, file: !3, line: 852, column: 6)
!3489 = !DILocation(line: 852, column: 6, scope: !3386)
!3490 = !DILocation(line: 853, column: 21, scope: !3488)
!3491 = !DILocation(line: 853, column: 3, scope: !3488)
!3492 = !DILocation(line: 853, column: 7, scope: !3488)
!3493 = !DILocation(line: 853, column: 19, scope: !3488)
!3494 = !DILocation(line: 855, column: 62, scope: !3488)
!3495 = !DILocation(line: 855, column: 3, scope: !3488)
!3496 = !DILocation(line: 856, column: 1, scope: !3386)
!3497 = distinct !DISubprogram(name: "WM_key_event_string", scope: !3, file: !3, line: 891, type: !3498, scopeLine: 892, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !356)
!3498 = !DISubroutineType(types: !3499)
!3499 = !{!2048, !310}
!3500 = !DILocalVariable(name: "type", arg: 1, scope: !3497, file: !3, line: 891, type: !310)
!3501 = !DILocation(line: 891, column: 39, scope: !3497)
!3502 = !DILocalVariable(name: "name", scope: !3497, file: !3, line: 893, type: !2048)
!3503 = !DILocation(line: 893, column: 14, scope: !3497)
!3504 = !DILocation(line: 894, column: 43, scope: !3505)
!3505 = distinct !DILexicalBlock(scope: !3497, file: !3, line: 894, column: 6)
!3506 = !DILocation(line: 894, column: 38, scope: !3505)
!3507 = !DILocation(line: 894, column: 6, scope: !3505)
!3508 = !DILocation(line: 894, column: 6, scope: !3497)
!3509 = !DILocation(line: 895, column: 10, scope: !3505)
!3510 = !DILocation(line: 895, column: 3, scope: !3505)
!3511 = !DILocation(line: 897, column: 2, scope: !3497)
!3512 = !DILocation(line: 898, column: 1, scope: !3497)
!3513 = distinct !DISubprogram(name: "WM_keymap_item_to_string", scope: !3, file: !3, line: 900, type: !3514, scopeLine: 901, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !356)
!3514 = !DISubroutineType(types: !3515)
!3515 = !{!273, !287, !644, !3344}
!3516 = !DILocalVariable(name: "kmi", arg: 1, scope: !3513, file: !3, line: 900, type: !287)
!3517 = !DILocation(line: 900, column: 44, scope: !3513)
!3518 = !DILocalVariable(name: "str", arg: 2, scope: !3513, file: !3, line: 900, type: !644)
!3519 = !DILocation(line: 900, column: 55, scope: !3513)
!3520 = !DILocalVariable(name: "len", arg: 3, scope: !3513, file: !3, line: 900, type: !3344)
!3521 = !DILocation(line: 900, column: 70, scope: !3513)
!3522 = !DILocalVariable(name: "buf", scope: !3513, file: !3, line: 902, type: !1651)
!3523 = !DILocation(line: 902, column: 7, scope: !3513)
!3524 = !DILocalVariable(name: "p", scope: !3513, file: !3, line: 903, type: !644)
!3525 = !DILocation(line: 903, column: 8, scope: !3513)
!3526 = !DILocation(line: 903, column: 12, scope: !3513)
!3527 = !DILocation(line: 905, column: 2, scope: !3513)
!3528 = !DILocation(line: 905, column: 9, scope: !3513)
!3529 = !DILocation(line: 907, column: 6, scope: !3530)
!3530 = distinct !DILexicalBlock(scope: !3513, file: !3, line: 907, column: 6)
!3531 = !DILocation(line: 907, column: 11, scope: !3530)
!3532 = !DILocation(line: 907, column: 17, scope: !3530)
!3533 = !DILocation(line: 907, column: 27, scope: !3530)
!3534 = !DILocation(line: 908, column: 6, scope: !3530)
!3535 = !DILocation(line: 908, column: 11, scope: !3530)
!3536 = !DILocation(line: 908, column: 16, scope: !3530)
!3537 = !DILocation(line: 908, column: 26, scope: !3530)
!3538 = !DILocation(line: 909, column: 6, scope: !3530)
!3539 = !DILocation(line: 909, column: 11, scope: !3530)
!3540 = !DILocation(line: 909, column: 15, scope: !3530)
!3541 = !DILocation(line: 909, column: 25, scope: !3530)
!3542 = !DILocation(line: 910, column: 6, scope: !3530)
!3543 = !DILocation(line: 910, column: 11, scope: !3530)
!3544 = !DILocation(line: 910, column: 17, scope: !3530)
!3545 = !DILocation(line: 907, column: 6, scope: !3513)
!3546 = !DILocation(line: 912, column: 24, scope: !3547)
!3547 = distinct !DILexicalBlock(scope: !3530, file: !3, line: 911, column: 2)
!3548 = !DILocation(line: 912, column: 8, scope: !3547)
!3549 = !DILocation(line: 912, column: 5, scope: !3547)
!3550 = !DILocation(line: 913, column: 2, scope: !3547)
!3551 = !DILocation(line: 915, column: 7, scope: !3552)
!3552 = distinct !DILexicalBlock(scope: !3553, file: !3, line: 915, column: 7)
!3553 = distinct !DILexicalBlock(scope: !3530, file: !3, line: 914, column: 7)
!3554 = !DILocation(line: 915, column: 12, scope: !3552)
!3555 = !DILocation(line: 915, column: 7, scope: !3553)
!3556 = !DILocation(line: 916, column: 25, scope: !3552)
!3557 = !DILocation(line: 916, column: 9, scope: !3552)
!3558 = !DILocation(line: 916, column: 6, scope: !3552)
!3559 = !DILocation(line: 916, column: 4, scope: !3552)
!3560 = !DILocation(line: 918, column: 7, scope: !3561)
!3561 = distinct !DILexicalBlock(scope: !3553, file: !3, line: 918, column: 7)
!3562 = !DILocation(line: 918, column: 12, scope: !3561)
!3563 = !DILocation(line: 918, column: 7, scope: !3553)
!3564 = !DILocation(line: 919, column: 25, scope: !3561)
!3565 = !DILocation(line: 919, column: 9, scope: !3561)
!3566 = !DILocation(line: 919, column: 6, scope: !3561)
!3567 = !DILocation(line: 919, column: 4, scope: !3561)
!3568 = !DILocation(line: 921, column: 7, scope: !3569)
!3569 = distinct !DILexicalBlock(scope: !3553, file: !3, line: 921, column: 7)
!3570 = !DILocation(line: 921, column: 12, scope: !3569)
!3571 = !DILocation(line: 921, column: 7, scope: !3553)
!3572 = !DILocation(line: 922, column: 25, scope: !3569)
!3573 = !DILocation(line: 922, column: 9, scope: !3569)
!3574 = !DILocation(line: 922, column: 6, scope: !3569)
!3575 = !DILocation(line: 922, column: 4, scope: !3569)
!3576 = !DILocation(line: 924, column: 7, scope: !3577)
!3577 = distinct !DILexicalBlock(scope: !3553, file: !3, line: 924, column: 7)
!3578 = !DILocation(line: 924, column: 12, scope: !3577)
!3579 = !DILocation(line: 924, column: 7, scope: !3553)
!3580 = !DILocation(line: 925, column: 25, scope: !3577)
!3581 = !DILocation(line: 925, column: 9, scope: !3577)
!3582 = !DILocation(line: 925, column: 6, scope: !3577)
!3583 = !DILocation(line: 925, column: 4, scope: !3577)
!3584 = !DILocation(line: 928, column: 6, scope: !3585)
!3585 = distinct !DILexicalBlock(scope: !3513, file: !3, line: 928, column: 6)
!3586 = !DILocation(line: 928, column: 11, scope: !3585)
!3587 = !DILocation(line: 928, column: 6, scope: !3513)
!3588 = !DILocation(line: 929, column: 24, scope: !3589)
!3589 = distinct !DILexicalBlock(scope: !3585, file: !3, line: 928, column: 24)
!3590 = !DILocation(line: 929, column: 47, scope: !3589)
!3591 = !DILocation(line: 929, column: 52, scope: !3589)
!3592 = !DILocation(line: 929, column: 27, scope: !3589)
!3593 = !DILocation(line: 929, column: 8, scope: !3589)
!3594 = !DILocation(line: 929, column: 5, scope: !3589)
!3595 = !DILocation(line: 930, column: 24, scope: !3589)
!3596 = !DILocation(line: 930, column: 8, scope: !3589)
!3597 = !DILocation(line: 930, column: 5, scope: !3589)
!3598 = !DILocation(line: 931, column: 2, scope: !3589)
!3599 = !DILocation(line: 933, column: 23, scope: !3513)
!3600 = !DILocation(line: 933, column: 46, scope: !3513)
!3601 = !DILocation(line: 933, column: 51, scope: !3513)
!3602 = !DILocation(line: 933, column: 26, scope: !3513)
!3603 = !DILocation(line: 933, column: 7, scope: !3513)
!3604 = !DILocation(line: 933, column: 4, scope: !3513)
!3605 = !DILocation(line: 934, column: 26, scope: !3513)
!3606 = !DILocation(line: 934, column: 31, scope: !3513)
!3607 = !DILocation(line: 934, column: 36, scope: !3513)
!3608 = !DILocation(line: 934, column: 9, scope: !3513)
!3609 = !DILocation(line: 934, column: 2, scope: !3513)
!3610 = distinct !DISubprogram(name: "WM_key_event_operator_string", scope: !3, file: !3, line: 1079, type: !3611, scopeLine: 1082, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !356)
!3611 = !DISubroutineType(types: !3612)
!3612 = !{!644, !3126, !2048, !273, !299, !3613, !644, !273}
!3613 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1360)
!3614 = !DILocalVariable(name: "C", arg: 1, scope: !3610, file: !3, line: 1080, type: !3126)
!3615 = !DILocation(line: 1080, column: 25, scope: !3610)
!3616 = !DILocalVariable(name: "opname", arg: 2, scope: !3610, file: !3, line: 1080, type: !2048)
!3617 = !DILocation(line: 1080, column: 40, scope: !3610)
!3618 = !DILocalVariable(name: "opcontext", arg: 3, scope: !3610, file: !3, line: 1080, type: !273)
!3619 = !DILocation(line: 1080, column: 52, scope: !3610)
!3620 = !DILocalVariable(name: "properties", arg: 4, scope: !3610, file: !3, line: 1081, type: !299)
!3621 = !DILocation(line: 1081, column: 21, scope: !3610)
!3622 = !DILocalVariable(name: "is_strict", arg: 5, scope: !3610, file: !3, line: 1081, type: !3613)
!3623 = !DILocation(line: 1081, column: 44, scope: !3610)
!3624 = !DILocalVariable(name: "str", arg: 6, scope: !3610, file: !3, line: 1081, type: !644)
!3625 = !DILocation(line: 1081, column: 61, scope: !3610)
!3626 = !DILocalVariable(name: "len", arg: 7, scope: !3610, file: !3, line: 1081, type: !273)
!3627 = !DILocation(line: 1081, column: 70, scope: !3610)
!3628 = !DILocalVariable(name: "kmi", scope: !3610, file: !3, line: 1083, type: !287)
!3629 = !DILocation(line: 1083, column: 16, scope: !3610)
!3630 = !DILocation(line: 1083, column: 42, scope: !3610)
!3631 = !DILocation(line: 1083, column: 45, scope: !3610)
!3632 = !DILocation(line: 1083, column: 53, scope: !3610)
!3633 = !DILocation(line: 1083, column: 64, scope: !3610)
!3634 = !DILocation(line: 1083, column: 83, scope: !3610)
!3635 = !DILocation(line: 1083, column: 22, scope: !3610)
!3636 = !DILocation(line: 1085, column: 6, scope: !3637)
!3637 = distinct !DILexicalBlock(scope: !3610, file: !3, line: 1085, column: 6)
!3638 = !DILocation(line: 1085, column: 6, scope: !3610)
!3639 = !DILocation(line: 1086, column: 28, scope: !3640)
!3640 = distinct !DILexicalBlock(scope: !3637, file: !3, line: 1085, column: 11)
!3641 = !DILocation(line: 1086, column: 33, scope: !3640)
!3642 = !DILocation(line: 1086, column: 38, scope: !3640)
!3643 = !DILocation(line: 1086, column: 3, scope: !3640)
!3644 = !DILocation(line: 1087, column: 10, scope: !3640)
!3645 = !DILocation(line: 1087, column: 3, scope: !3640)
!3646 = !DILocation(line: 1090, column: 2, scope: !3610)
!3647 = !DILocation(line: 1091, column: 1, scope: !3610)
!3648 = distinct !DISubprogram(name: "wm_keymap_item_find", scope: !3, file: !3, line: 1044, type: !3649, scopeLine: 1047, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !356)
!3649 = !DISubroutineType(types: !3650)
!3650 = !{!287, !3126, !2048, !273, !299, !3613, !3613, !3651}
!3651 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2188, size: 64)
!3652 = !DILocalVariable(name: "C", arg: 1, scope: !3648, file: !3, line: 1045, type: !3126)
!3653 = !DILocation(line: 1045, column: 25, scope: !3648)
!3654 = !DILocalVariable(name: "opname", arg: 2, scope: !3648, file: !3, line: 1045, type: !2048)
!3655 = !DILocation(line: 1045, column: 40, scope: !3648)
!3656 = !DILocalVariable(name: "opcontext", arg: 3, scope: !3648, file: !3, line: 1045, type: !273)
!3657 = !DILocation(line: 1045, column: 52, scope: !3648)
!3658 = !DILocalVariable(name: "properties", arg: 4, scope: !3648, file: !3, line: 1046, type: !299)
!3659 = !DILocation(line: 1046, column: 21, scope: !3648)
!3660 = !DILocalVariable(name: "is_hotkey", arg: 5, scope: !3648, file: !3, line: 1046, type: !3613)
!3661 = !DILocation(line: 1046, column: 44, scope: !3648)
!3662 = !DILocalVariable(name: "is_strict", arg: 6, scope: !3648, file: !3, line: 1046, type: !3613)
!3663 = !DILocation(line: 1046, column: 66, scope: !3648)
!3664 = !DILocalVariable(name: "keymap_r", arg: 7, scope: !3648, file: !3, line: 1046, type: !3651)
!3665 = !DILocation(line: 1046, column: 88, scope: !3648)
!3666 = !DILocalVariable(name: "found", scope: !3648, file: !3, line: 1048, type: !287)
!3667 = !DILocation(line: 1048, column: 16, scope: !3648)
!3668 = !DILocation(line: 1048, column: 50, scope: !3648)
!3669 = !DILocation(line: 1048, column: 53, scope: !3648)
!3670 = !DILocation(line: 1048, column: 61, scope: !3648)
!3671 = !DILocation(line: 1048, column: 72, scope: !3648)
!3672 = !DILocation(line: 1048, column: 84, scope: !3648)
!3673 = !DILocation(line: 1048, column: 95, scope: !3648)
!3674 = !DILocation(line: 1048, column: 106, scope: !3648)
!3675 = !DILocation(line: 1048, column: 24, scope: !3648)
!3676 = !DILocation(line: 1050, column: 7, scope: !3677)
!3677 = distinct !DILexicalBlock(scope: !3648, file: !3, line: 1050, column: 6)
!3678 = !DILocation(line: 1050, column: 13, scope: !3677)
!3679 = !DILocation(line: 1050, column: 16, scope: !3677)
!3680 = !DILocation(line: 1050, column: 6, scope: !3648)
!3681 = !DILocalVariable(name: "ot", scope: !3682, file: !3, line: 1051, type: !3394)
!3682 = distinct !DILexicalBlock(scope: !3677, file: !3, line: 1050, column: 28)
!3683 = !DILocation(line: 1051, column: 19, scope: !3682)
!3684 = !DILocation(line: 1051, column: 45, scope: !3682)
!3685 = !DILocation(line: 1051, column: 24, scope: !3682)
!3686 = !DILocation(line: 1052, column: 7, scope: !3687)
!3687 = distinct !DILexicalBlock(scope: !3682, file: !3, line: 1052, column: 7)
!3688 = !DILocation(line: 1052, column: 7, scope: !3682)
!3689 = !DILocalVariable(name: "opptr", scope: !3690, file: !3, line: 1055, type: !3691)
!3690 = distinct !DILexicalBlock(scope: !3687, file: !3, line: 1052, column: 11)
!3691 = !DIDerivedType(tag: DW_TAG_typedef, name: "PointerRNA", file: !345, line: 62, baseType: !344)
!3692 = !DILocation(line: 1055, column: 15, scope: !3690)
!3693 = !DILocalVariable(name: "properties_default", scope: !3690, file: !3, line: 1056, type: !299)
!3694 = !DILocation(line: 1056, column: 16, scope: !3690)
!3695 = !DILocation(line: 1056, column: 54, scope: !3690)
!3696 = !DILocation(line: 1056, column: 37, scope: !3690)
!3697 = !DILocation(line: 1058, column: 29, scope: !3690)
!3698 = !DILocation(line: 1058, column: 33, scope: !3690)
!3699 = !DILocation(line: 1058, column: 39, scope: !3690)
!3700 = !DILocation(line: 1058, column: 4, scope: !3690)
!3701 = !DILocation(line: 1060, column: 8, scope: !3702)
!3702 = distinct !DILexicalBlock(scope: !3690, file: !3, line: 1060, column: 8)
!3703 = !DILocation(line: 1060, column: 53, scope: !3702)
!3704 = !DILocation(line: 1061, column: 10, scope: !3702)
!3705 = !DILocation(line: 1061, column: 20, scope: !3702)
!3706 = !DILocation(line: 1061, column: 23, scope: !3702)
!3707 = !DILocation(line: 1061, column: 27, scope: !3702)
!3708 = !DILocation(line: 1061, column: 32, scope: !3702)
!3709 = !DILocation(line: 1061, column: 63, scope: !3702)
!3710 = !DILocation(line: 1061, column: 67, scope: !3702)
!3711 = !DILocation(line: 1061, column: 35, scope: !3702)
!3712 = !DILocation(line: 1060, column: 8, scope: !3690)
!3713 = !DILocation(line: 1064, column: 10, scope: !3714)
!3714 = distinct !DILexicalBlock(scope: !3715, file: !3, line: 1064, column: 9)
!3715 = distinct !DILexicalBlock(scope: !3702, file: !3, line: 1062, column: 4)
!3716 = !DILocation(line: 1064, column: 20, scope: !3714)
!3717 = !DILocation(line: 1064, column: 23, scope: !3714)
!3718 = !DILocation(line: 1064, column: 27, scope: !3714)
!3719 = !DILocation(line: 1064, column: 9, scope: !3715)
!3720 = !DILocation(line: 1065, column: 33, scope: !3721)
!3721 = distinct !DILexicalBlock(scope: !3714, file: !3, line: 1064, column: 33)
!3722 = !DILocation(line: 1065, column: 37, scope: !3721)
!3723 = !DILocation(line: 1065, column: 6, scope: !3721)
!3724 = !DILocation(line: 1066, column: 5, scope: !3721)
!3725 = !DILocation(line: 1068, column: 39, scope: !3715)
!3726 = !DILocation(line: 1068, column: 42, scope: !3715)
!3727 = !DILocation(line: 1068, column: 50, scope: !3715)
!3728 = !DILocation(line: 1068, column: 61, scope: !3715)
!3729 = !DILocation(line: 1068, column: 88, scope: !3715)
!3730 = !DILocation(line: 1068, column: 99, scope: !3715)
!3731 = !DILocation(line: 1068, column: 13, scope: !3715)
!3732 = !DILocation(line: 1068, column: 11, scope: !3715)
!3733 = !DILocation(line: 1069, column: 4, scope: !3715)
!3734 = !DILocation(line: 1071, column: 21, scope: !3690)
!3735 = !DILocation(line: 1071, column: 4, scope: !3690)
!3736 = !DILocation(line: 1072, column: 4, scope: !3690)
!3737 = !DILocation(line: 1072, column: 14, scope: !3690)
!3738 = !DILocation(line: 1073, column: 3, scope: !3690)
!3739 = !DILocation(line: 1074, column: 2, scope: !3682)
!3740 = !DILocation(line: 1076, column: 9, scope: !3648)
!3741 = !DILocation(line: 1076, column: 2, scope: !3648)
!3742 = distinct !DISubprogram(name: "WM_key_event_operator_id", scope: !3, file: !3, line: 1093, type: !3743, scopeLine: 1096, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !356)
!3743 = !DISubroutineType(types: !3744)
!3744 = !{!273, !3126, !2048, !273, !299, !3613, !3651}
!3745 = !DILocalVariable(name: "C", arg: 1, scope: !3742, file: !3, line: 1094, type: !3126)
!3746 = !DILocation(line: 1094, column: 25, scope: !3742)
!3747 = !DILocalVariable(name: "opname", arg: 2, scope: !3742, file: !3, line: 1094, type: !2048)
!3748 = !DILocation(line: 1094, column: 40, scope: !3742)
!3749 = !DILocalVariable(name: "opcontext", arg: 3, scope: !3742, file: !3, line: 1094, type: !273)
!3750 = !DILocation(line: 1094, column: 52, scope: !3742)
!3751 = !DILocalVariable(name: "properties", arg: 4, scope: !3742, file: !3, line: 1095, type: !299)
!3752 = !DILocation(line: 1095, column: 21, scope: !3742)
!3753 = !DILocalVariable(name: "is_hotkey", arg: 5, scope: !3742, file: !3, line: 1095, type: !3613)
!3754 = !DILocation(line: 1095, column: 44, scope: !3742)
!3755 = !DILocalVariable(name: "keymap_r", arg: 6, scope: !3742, file: !3, line: 1095, type: !3651)
!3756 = !DILocation(line: 1095, column: 66, scope: !3742)
!3757 = !DILocalVariable(name: "kmi", scope: !3742, file: !3, line: 1097, type: !287)
!3758 = !DILocation(line: 1097, column: 16, scope: !3742)
!3759 = !DILocation(line: 1097, column: 42, scope: !3742)
!3760 = !DILocation(line: 1097, column: 45, scope: !3742)
!3761 = !DILocation(line: 1097, column: 53, scope: !3742)
!3762 = !DILocation(line: 1097, column: 64, scope: !3742)
!3763 = !DILocation(line: 1097, column: 76, scope: !3742)
!3764 = !DILocation(line: 1097, column: 93, scope: !3742)
!3765 = !DILocation(line: 1097, column: 22, scope: !3742)
!3766 = !DILocation(line: 1099, column: 6, scope: !3767)
!3767 = distinct !DILexicalBlock(scope: !3742, file: !3, line: 1099, column: 6)
!3768 = !DILocation(line: 1099, column: 6, scope: !3742)
!3769 = !DILocation(line: 1100, column: 10, scope: !3767)
!3770 = !DILocation(line: 1100, column: 15, scope: !3767)
!3771 = !DILocation(line: 1100, column: 3, scope: !3767)
!3772 = !DILocation(line: 1102, column: 3, scope: !3767)
!3773 = !DILocation(line: 1103, column: 1, scope: !3742)
!3774 = distinct !DISubprogram(name: "WM_keymap_item_compare", scope: !3, file: !3, line: 1105, type: !3775, scopeLine: 1106, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !356)
!3775 = !DISubroutineType(types: !3776)
!3776 = !{!273, !287, !287}
!3777 = !DILocalVariable(name: "k1", arg: 1, scope: !3774, file: !3, line: 1105, type: !287)
!3778 = !DILocation(line: 1105, column: 42, scope: !3774)
!3779 = !DILocalVariable(name: "k2", arg: 2, scope: !3774, file: !3, line: 1105, type: !287)
!3780 = !DILocation(line: 1105, column: 60, scope: !3774)
!3781 = !DILocalVariable(name: "k1type", scope: !3774, file: !3, line: 1107, type: !273)
!3782 = !DILocation(line: 1107, column: 6, scope: !3774)
!3783 = !DILocalVariable(name: "k2type", scope: !3774, file: !3, line: 1107, type: !273)
!3784 = !DILocation(line: 1107, column: 14, scope: !3774)
!3785 = !DILocation(line: 1109, column: 6, scope: !3786)
!3786 = distinct !DILexicalBlock(scope: !3774, file: !3, line: 1109, column: 6)
!3787 = !DILocation(line: 1109, column: 10, scope: !3786)
!3788 = !DILocation(line: 1109, column: 15, scope: !3786)
!3789 = !DILocation(line: 1109, column: 30, scope: !3786)
!3790 = !DILocation(line: 1109, column: 33, scope: !3786)
!3791 = !DILocation(line: 1109, column: 37, scope: !3786)
!3792 = !DILocation(line: 1109, column: 42, scope: !3786)
!3793 = !DILocation(line: 1109, column: 6, scope: !3774)
!3794 = !DILocation(line: 1110, column: 3, scope: !3786)
!3795 = !DILocation(line: 1113, column: 32, scope: !3774)
!3796 = !DILocation(line: 1113, column: 36, scope: !3774)
!3797 = !DILocation(line: 1113, column: 11, scope: !3774)
!3798 = !DILocation(line: 1113, column: 9, scope: !3774)
!3799 = !DILocation(line: 1114, column: 32, scope: !3774)
!3800 = !DILocation(line: 1114, column: 36, scope: !3774)
!3801 = !DILocation(line: 1114, column: 11, scope: !3774)
!3802 = !DILocation(line: 1114, column: 9, scope: !3774)
!3803 = !DILocation(line: 1116, column: 6, scope: !3804)
!3804 = distinct !DILexicalBlock(scope: !3774, file: !3, line: 1116, column: 6)
!3805 = !DILocation(line: 1116, column: 13, scope: !3804)
!3806 = !DILocation(line: 1116, column: 23, scope: !3804)
!3807 = !DILocation(line: 1116, column: 26, scope: !3804)
!3808 = !DILocation(line: 1116, column: 33, scope: !3804)
!3809 = !DILocation(line: 1116, column: 43, scope: !3804)
!3810 = !DILocation(line: 1116, column: 46, scope: !3804)
!3811 = !DILocation(line: 1116, column: 56, scope: !3804)
!3812 = !DILocation(line: 1116, column: 53, scope: !3804)
!3813 = !DILocation(line: 1116, column: 6, scope: !3774)
!3814 = !DILocation(line: 1117, column: 3, scope: !3804)
!3815 = !DILocation(line: 1119, column: 6, scope: !3816)
!3816 = distinct !DILexicalBlock(scope: !3774, file: !3, line: 1119, column: 6)
!3817 = !DILocation(line: 1119, column: 10, scope: !3816)
!3818 = !DILocation(line: 1119, column: 14, scope: !3816)
!3819 = !DILocation(line: 1119, column: 24, scope: !3816)
!3820 = !DILocation(line: 1119, column: 27, scope: !3816)
!3821 = !DILocation(line: 1119, column: 31, scope: !3816)
!3822 = !DILocation(line: 1119, column: 35, scope: !3816)
!3823 = !DILocation(line: 1119, column: 6, scope: !3774)
!3824 = !DILocation(line: 1121, column: 7, scope: !3825)
!3825 = distinct !DILexicalBlock(scope: !3826, file: !3, line: 1121, column: 7)
!3826 = distinct !DILexicalBlock(scope: !3816, file: !3, line: 1119, column: 46)
!3827 = !DILocation(line: 1121, column: 11, scope: !3825)
!3828 = !DILocation(line: 1121, column: 15, scope: !3825)
!3829 = !DILocation(line: 1121, column: 27, scope: !3825)
!3830 = !DILocation(line: 1121, column: 30, scope: !3825)
!3831 = !DILocation(line: 1121, column: 76, scope: !3825)
!3832 = !DILocation(line: 1121, column: 7, scope: !3826)
!3833 = !DILocation(line: 1122, column: 4, scope: !3825)
!3834 = !DILocation(line: 1123, column: 7, scope: !3835)
!3835 = distinct !DILexicalBlock(scope: !3826, file: !3, line: 1123, column: 7)
!3836 = !DILocation(line: 1123, column: 11, scope: !3835)
!3837 = !DILocation(line: 1123, column: 15, scope: !3835)
!3838 = !DILocation(line: 1123, column: 27, scope: !3835)
!3839 = !DILocation(line: 1123, column: 30, scope: !3835)
!3840 = !DILocation(line: 1123, column: 76, scope: !3835)
!3841 = !DILocation(line: 1123, column: 7, scope: !3826)
!3842 = !DILocation(line: 1124, column: 4, scope: !3835)
!3843 = !DILocation(line: 1125, column: 7, scope: !3844)
!3844 = distinct !DILexicalBlock(scope: !3826, file: !3, line: 1125, column: 7)
!3845 = !DILocation(line: 1125, column: 11, scope: !3844)
!3846 = !DILocation(line: 1125, column: 18, scope: !3844)
!3847 = !DILocation(line: 1125, column: 22, scope: !3844)
!3848 = !DILocation(line: 1125, column: 15, scope: !3844)
!3849 = !DILocation(line: 1125, column: 7, scope: !3826)
!3850 = !DILocation(line: 1126, column: 4, scope: !3844)
!3851 = !DILocation(line: 1127, column: 2, scope: !3826)
!3852 = !DILocation(line: 1129, column: 6, scope: !3853)
!3853 = distinct !DILexicalBlock(scope: !3774, file: !3, line: 1129, column: 6)
!3854 = !DILocation(line: 1129, column: 10, scope: !3853)
!3855 = !DILocation(line: 1129, column: 16, scope: !3853)
!3856 = !DILocation(line: 1129, column: 26, scope: !3853)
!3857 = !DILocation(line: 1129, column: 29, scope: !3853)
!3858 = !DILocation(line: 1129, column: 33, scope: !3853)
!3859 = !DILocation(line: 1129, column: 39, scope: !3853)
!3860 = !DILocation(line: 1129, column: 49, scope: !3853)
!3861 = !DILocation(line: 1129, column: 52, scope: !3853)
!3862 = !DILocation(line: 1129, column: 56, scope: !3853)
!3863 = !DILocation(line: 1129, column: 65, scope: !3853)
!3864 = !DILocation(line: 1129, column: 69, scope: !3853)
!3865 = !DILocation(line: 1129, column: 62, scope: !3853)
!3866 = !DILocation(line: 1129, column: 6, scope: !3774)
!3867 = !DILocation(line: 1130, column: 3, scope: !3853)
!3868 = !DILocation(line: 1132, column: 6, scope: !3869)
!3869 = distinct !DILexicalBlock(scope: !3774, file: !3, line: 1132, column: 6)
!3870 = !DILocation(line: 1132, column: 10, scope: !3869)
!3871 = !DILocation(line: 1132, column: 15, scope: !3869)
!3872 = !DILocation(line: 1132, column: 25, scope: !3869)
!3873 = !DILocation(line: 1132, column: 28, scope: !3869)
!3874 = !DILocation(line: 1132, column: 32, scope: !3869)
!3875 = !DILocation(line: 1132, column: 37, scope: !3869)
!3876 = !DILocation(line: 1132, column: 47, scope: !3869)
!3877 = !DILocation(line: 1132, column: 50, scope: !3869)
!3878 = !DILocation(line: 1132, column: 54, scope: !3869)
!3879 = !DILocation(line: 1132, column: 62, scope: !3869)
!3880 = !DILocation(line: 1132, column: 66, scope: !3869)
!3881 = !DILocation(line: 1132, column: 59, scope: !3869)
!3882 = !DILocation(line: 1132, column: 6, scope: !3774)
!3883 = !DILocation(line: 1133, column: 3, scope: !3869)
!3884 = !DILocation(line: 1135, column: 6, scope: !3885)
!3885 = distinct !DILexicalBlock(scope: !3774, file: !3, line: 1135, column: 6)
!3886 = !DILocation(line: 1135, column: 10, scope: !3885)
!3887 = !DILocation(line: 1135, column: 14, scope: !3885)
!3888 = !DILocation(line: 1135, column: 24, scope: !3885)
!3889 = !DILocation(line: 1135, column: 27, scope: !3885)
!3890 = !DILocation(line: 1135, column: 31, scope: !3885)
!3891 = !DILocation(line: 1135, column: 35, scope: !3885)
!3892 = !DILocation(line: 1135, column: 45, scope: !3885)
!3893 = !DILocation(line: 1135, column: 48, scope: !3885)
!3894 = !DILocation(line: 1135, column: 52, scope: !3885)
!3895 = !DILocation(line: 1135, column: 59, scope: !3885)
!3896 = !DILocation(line: 1135, column: 63, scope: !3885)
!3897 = !DILocation(line: 1135, column: 56, scope: !3885)
!3898 = !DILocation(line: 1135, column: 6, scope: !3774)
!3899 = !DILocation(line: 1136, column: 3, scope: !3885)
!3900 = !DILocation(line: 1138, column: 6, scope: !3901)
!3901 = distinct !DILexicalBlock(scope: !3774, file: !3, line: 1138, column: 6)
!3902 = !DILocation(line: 1138, column: 10, scope: !3901)
!3903 = !DILocation(line: 1138, column: 16, scope: !3901)
!3904 = !DILocation(line: 1138, column: 26, scope: !3901)
!3905 = !DILocation(line: 1138, column: 29, scope: !3901)
!3906 = !DILocation(line: 1138, column: 33, scope: !3901)
!3907 = !DILocation(line: 1138, column: 39, scope: !3901)
!3908 = !DILocation(line: 1138, column: 49, scope: !3901)
!3909 = !DILocation(line: 1138, column: 52, scope: !3901)
!3910 = !DILocation(line: 1138, column: 56, scope: !3901)
!3911 = !DILocation(line: 1138, column: 65, scope: !3901)
!3912 = !DILocation(line: 1138, column: 69, scope: !3901)
!3913 = !DILocation(line: 1138, column: 62, scope: !3901)
!3914 = !DILocation(line: 1138, column: 6, scope: !3774)
!3915 = !DILocation(line: 1139, column: 3, scope: !3901)
!3916 = !DILocation(line: 1141, column: 6, scope: !3917)
!3917 = distinct !DILexicalBlock(scope: !3774, file: !3, line: 1141, column: 6)
!3918 = !DILocation(line: 1141, column: 10, scope: !3917)
!3919 = !DILocation(line: 1141, column: 25, scope: !3917)
!3920 = !DILocation(line: 1141, column: 29, scope: !3917)
!3921 = !DILocation(line: 1141, column: 22, scope: !3917)
!3922 = !DILocation(line: 1141, column: 6, scope: !3774)
!3923 = !DILocation(line: 1142, column: 3, scope: !3917)
!3924 = !DILocation(line: 1144, column: 2, scope: !3774)
!3925 = !DILocation(line: 1145, column: 1, scope: !3774)
!3926 = distinct !DISubprogram(name: "WM_keyconfig_update_operatortype", scope: !3, file: !3, line: 1173, type: !3927, scopeLine: 1174, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !356)
!3927 = !DISubroutineType(types: !3928)
!3928 = !{null}
!3929 = !DILocation(line: 1175, column: 24, scope: !3926)
!3930 = !DILocation(line: 1176, column: 1, scope: !3926)
!3931 = distinct !DISubprogram(name: "wm_keyconfig_properties_update_ot", scope: !3, file: !3, line: 128, type: !3932, scopeLine: 129, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !356)
!3932 = !DISubroutineType(types: !3933)
!3933 = !{null, !767}
!3934 = !DILocalVariable(name: "km_lb", arg: 1, scope: !3931, file: !3, line: 128, type: !767)
!3935 = !DILocation(line: 128, column: 57, scope: !3931)
!3936 = !DILocalVariable(name: "km", scope: !3931, file: !3, line: 130, type: !2188)
!3937 = !DILocation(line: 130, column: 12, scope: !3931)
!3938 = !DILocalVariable(name: "kmi", scope: !3931, file: !3, line: 131, type: !287)
!3939 = !DILocation(line: 131, column: 16, scope: !3931)
!3940 = !DILocation(line: 133, column: 12, scope: !3941)
!3941 = distinct !DILexicalBlock(scope: !3931, file: !3, line: 133, column: 2)
!3942 = !DILocation(line: 133, column: 19, scope: !3941)
!3943 = !DILocation(line: 133, column: 10, scope: !3941)
!3944 = !DILocation(line: 133, column: 7, scope: !3941)
!3945 = !DILocation(line: 133, column: 26, scope: !3946)
!3946 = distinct !DILexicalBlock(scope: !3941, file: !3, line: 133, column: 2)
!3947 = !DILocation(line: 133, column: 2, scope: !3941)
!3948 = !DILocalVariable(name: "kmdi", scope: !3949, file: !3, line: 134, type: !2258)
!3949 = distinct !DILexicalBlock(scope: !3946, file: !3, line: 133, column: 45)
!3950 = !DILocation(line: 134, column: 21, scope: !3949)
!3951 = !DILocation(line: 136, column: 14, scope: !3952)
!3952 = distinct !DILexicalBlock(scope: !3949, file: !3, line: 136, column: 3)
!3953 = !DILocation(line: 136, column: 18, scope: !3952)
!3954 = !DILocation(line: 136, column: 24, scope: !3952)
!3955 = !DILocation(line: 136, column: 12, scope: !3952)
!3956 = !DILocation(line: 136, column: 8, scope: !3952)
!3957 = !DILocation(line: 136, column: 31, scope: !3958)
!3958 = distinct !DILexicalBlock(scope: !3952, file: !3, line: 136, column: 3)
!3959 = !DILocation(line: 136, column: 3, scope: !3952)
!3960 = !DILocation(line: 137, column: 40, scope: !3961)
!3961 = distinct !DILexicalBlock(scope: !3958, file: !3, line: 136, column: 53)
!3962 = !DILocation(line: 137, column: 4, scope: !3961)
!3963 = !DILocation(line: 138, column: 3, scope: !3961)
!3964 = !DILocation(line: 136, column: 42, scope: !3958)
!3965 = !DILocation(line: 136, column: 47, scope: !3958)
!3966 = !DILocation(line: 136, column: 40, scope: !3958)
!3967 = !DILocation(line: 136, column: 3, scope: !3958)
!3968 = distinct !{!3968, !3959, !3969}
!3969 = !DILocation(line: 138, column: 3, scope: !3952)
!3970 = !DILocation(line: 140, column: 15, scope: !3971)
!3971 = distinct !DILexicalBlock(scope: !3949, file: !3, line: 140, column: 3)
!3972 = !DILocation(line: 140, column: 19, scope: !3971)
!3973 = !DILocation(line: 140, column: 30, scope: !3971)
!3974 = !DILocation(line: 140, column: 13, scope: !3971)
!3975 = !DILocation(line: 140, column: 8, scope: !3971)
!3976 = !DILocation(line: 140, column: 37, scope: !3977)
!3977 = distinct !DILexicalBlock(scope: !3971, file: !3, line: 140, column: 3)
!3978 = !DILocation(line: 140, column: 3, scope: !3971)
!3979 = !DILocation(line: 141, column: 8, scope: !3980)
!3980 = distinct !DILexicalBlock(scope: !3981, file: !3, line: 141, column: 8)
!3981 = distinct !DILexicalBlock(scope: !3977, file: !3, line: 140, column: 62)
!3982 = !DILocation(line: 141, column: 14, scope: !3980)
!3983 = !DILocation(line: 141, column: 8, scope: !3981)
!3984 = !DILocation(line: 142, column: 41, scope: !3980)
!3985 = !DILocation(line: 142, column: 47, scope: !3980)
!3986 = !DILocation(line: 142, column: 5, scope: !3980)
!3987 = !DILocation(line: 143, column: 8, scope: !3988)
!3988 = distinct !DILexicalBlock(scope: !3981, file: !3, line: 143, column: 8)
!3989 = !DILocation(line: 143, column: 14, scope: !3988)
!3990 = !DILocation(line: 143, column: 8, scope: !3981)
!3991 = !DILocation(line: 144, column: 41, scope: !3988)
!3992 = !DILocation(line: 144, column: 47, scope: !3988)
!3993 = !DILocation(line: 144, column: 5, scope: !3988)
!3994 = !DILocation(line: 145, column: 3, scope: !3981)
!3995 = !DILocation(line: 140, column: 50, scope: !3977)
!3996 = !DILocation(line: 140, column: 56, scope: !3977)
!3997 = !DILocation(line: 140, column: 48, scope: !3977)
!3998 = !DILocation(line: 140, column: 3, scope: !3977)
!3999 = distinct !{!3999, !3978, !4000}
!4000 = !DILocation(line: 145, column: 3, scope: !3971)
!4001 = !DILocation(line: 146, column: 2, scope: !3949)
!4002 = !DILocation(line: 133, column: 35, scope: !3946)
!4003 = !DILocation(line: 133, column: 39, scope: !3946)
!4004 = !DILocation(line: 133, column: 33, scope: !3946)
!4005 = !DILocation(line: 133, column: 2, scope: !3946)
!4006 = distinct !{!4006, !3947, !4007}
!4007 = !DILocation(line: 146, column: 2, scope: !3941)
!4008 = !DILocation(line: 147, column: 1, scope: !3931)
!4009 = distinct !DISubprogram(name: "wm_keymap_test_and_clear_update", scope: !3, file: !3, line: 1178, type: !4010, scopeLine: 1179, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !356)
!4010 = !DISubroutineType(types: !4011)
!4011 = !{!1360, !2188}
!4012 = !DILocalVariable(name: "km", arg: 1, scope: !4009, file: !3, line: 1178, type: !2188)
!4013 = !DILocation(line: 1178, column: 55, scope: !4009)
!4014 = !DILocalVariable(name: "kmi", scope: !4009, file: !3, line: 1180, type: !287)
!4015 = !DILocation(line: 1180, column: 16, scope: !4009)
!4016 = !DILocalVariable(name: "update", scope: !4009, file: !3, line: 1181, type: !273)
!4017 = !DILocation(line: 1181, column: 6, scope: !4009)
!4018 = !DILocation(line: 1183, column: 12, scope: !4009)
!4019 = !DILocation(line: 1183, column: 16, scope: !4009)
!4020 = !DILocation(line: 1183, column: 21, scope: !4009)
!4021 = !DILocation(line: 1183, column: 9, scope: !4009)
!4022 = !DILocation(line: 1184, column: 2, scope: !4009)
!4023 = !DILocation(line: 1184, column: 6, scope: !4009)
!4024 = !DILocation(line: 1184, column: 11, scope: !4009)
!4025 = !DILocation(line: 1186, column: 13, scope: !4026)
!4026 = distinct !DILexicalBlock(scope: !4009, file: !3, line: 1186, column: 2)
!4027 = !DILocation(line: 1186, column: 17, scope: !4026)
!4028 = !DILocation(line: 1186, column: 23, scope: !4026)
!4029 = !DILocation(line: 1186, column: 11, scope: !4026)
!4030 = !DILocation(line: 1186, column: 7, scope: !4026)
!4031 = !DILocation(line: 1186, column: 30, scope: !4032)
!4032 = distinct !DILexicalBlock(scope: !4026, file: !3, line: 1186, column: 2)
!4033 = !DILocation(line: 1186, column: 2, scope: !4026)
!4034 = !DILocation(line: 1187, column: 12, scope: !4035)
!4035 = distinct !DILexicalBlock(scope: !4032, file: !3, line: 1186, column: 52)
!4036 = !DILocation(line: 1187, column: 19, scope: !4035)
!4037 = !DILocation(line: 1187, column: 23, scope: !4035)
!4038 = !DILocation(line: 1187, column: 28, scope: !4035)
!4039 = !DILocation(line: 1187, column: 33, scope: !4035)
!4040 = !DILocation(line: 1187, column: 10, scope: !4035)
!4041 = !DILocation(line: 1188, column: 3, scope: !4035)
!4042 = !DILocation(line: 1188, column: 8, scope: !4035)
!4043 = !DILocation(line: 1188, column: 13, scope: !4035)
!4044 = !DILocation(line: 1189, column: 2, scope: !4035)
!4045 = !DILocation(line: 1186, column: 41, scope: !4032)
!4046 = !DILocation(line: 1186, column: 46, scope: !4032)
!4047 = !DILocation(line: 1186, column: 39, scope: !4032)
!4048 = !DILocation(line: 1186, column: 2, scope: !4032)
!4049 = distinct !{!4049, !4033, !4050}
!4050 = !DILocation(line: 1189, column: 2, scope: !4026)
!4051 = !DILocation(line: 1191, column: 10, scope: !4009)
!4052 = !DILocation(line: 1191, column: 17, scope: !4009)
!4053 = !DILocation(line: 1191, column: 9, scope: !4009)
!4054 = !DILocation(line: 1191, column: 2, scope: !4009)
!4055 = distinct !DISubprogram(name: "wm_keymap_preset", scope: !3, file: !3, line: 1194, type: !4056, scopeLine: 1195, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !356)
!4056 = !DISubroutineType(types: !4057)
!4057 = !{!2188, !452, !2188}
!4058 = !DILocalVariable(name: "wm", arg: 1, scope: !4055, file: !3, line: 1194, type: !452)
!4059 = !DILocation(line: 1194, column: 52, scope: !4055)
!4060 = !DILocalVariable(name: "km", arg: 2, scope: !4055, file: !3, line: 1194, type: !2188)
!4061 = !DILocation(line: 1194, column: 66, scope: !4055)
!4062 = !DILocalVariable(name: "keyconf", scope: !4055, file: !3, line: 1196, type: !440)
!4063 = !DILocation(line: 1196, column: 15, scope: !4055)
!4064 = !DILocation(line: 1196, column: 45, scope: !4055)
!4065 = !DILocation(line: 1196, column: 25, scope: !4055)
!4066 = !DILocalVariable(name: "keymap", scope: !4055, file: !3, line: 1197, type: !2188)
!4067 = !DILocation(line: 1197, column: 12, scope: !4055)
!4068 = !DILocation(line: 1199, column: 32, scope: !4055)
!4069 = !DILocation(line: 1199, column: 41, scope: !4055)
!4070 = !DILocation(line: 1199, column: 50, scope: !4055)
!4071 = !DILocation(line: 1199, column: 54, scope: !4055)
!4072 = !DILocation(line: 1199, column: 62, scope: !4055)
!4073 = !DILocation(line: 1199, column: 66, scope: !4055)
!4074 = !DILocation(line: 1199, column: 75, scope: !4055)
!4075 = !DILocation(line: 1199, column: 79, scope: !4055)
!4076 = !DILocation(line: 1199, column: 11, scope: !4055)
!4077 = !DILocation(line: 1199, column: 9, scope: !4055)
!4078 = !DILocation(line: 1200, column: 7, scope: !4079)
!4079 = distinct !DILexicalBlock(scope: !4055, file: !3, line: 1200, column: 6)
!4080 = !DILocation(line: 1200, column: 14, scope: !4079)
!4081 = !DILocation(line: 1200, column: 17, scope: !4079)
!4082 = !DILocation(line: 1200, column: 21, scope: !4079)
!4083 = !DILocation(line: 1200, column: 6, scope: !4055)
!4084 = !DILocation(line: 1201, column: 33, scope: !4079)
!4085 = !DILocation(line: 1201, column: 37, scope: !4079)
!4086 = !DILocation(line: 1201, column: 50, scope: !4079)
!4087 = !DILocation(line: 1201, column: 59, scope: !4079)
!4088 = !DILocation(line: 1201, column: 63, scope: !4079)
!4089 = !DILocation(line: 1201, column: 71, scope: !4079)
!4090 = !DILocation(line: 1201, column: 75, scope: !4079)
!4091 = !DILocation(line: 1201, column: 84, scope: !4079)
!4092 = !DILocation(line: 1201, column: 88, scope: !4079)
!4093 = !DILocation(line: 1201, column: 12, scope: !4079)
!4094 = !DILocation(line: 1201, column: 10, scope: !4079)
!4095 = !DILocation(line: 1201, column: 3, scope: !4079)
!4096 = !DILocation(line: 1203, column: 9, scope: !4055)
!4097 = !DILocation(line: 1203, column: 2, scope: !4055)
!4098 = distinct !DISubprogram(name: "wm_keymap_diff_update", scope: !3, file: !3, line: 678, type: !4099, scopeLine: 679, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !356)
!4099 = !DISubroutineType(types: !4100)
!4100 = !{null, !767, !2188, !2188, !2188}
!4101 = !DILocalVariable(name: "lb", arg: 1, scope: !4098, file: !3, line: 678, type: !767)
!4102 = !DILocation(line: 678, column: 45, scope: !4098)
!4103 = !DILocalVariable(name: "defaultmap", arg: 2, scope: !4098, file: !3, line: 678, type: !2188)
!4104 = !DILocation(line: 678, column: 59, scope: !4098)
!4105 = !DILocalVariable(name: "addonmap", arg: 3, scope: !4098, file: !3, line: 678, type: !2188)
!4106 = !DILocation(line: 678, column: 81, scope: !4098)
!4107 = !DILocalVariable(name: "km", arg: 4, scope: !4098, file: !3, line: 678, type: !2188)
!4108 = !DILocation(line: 678, column: 101, scope: !4098)
!4109 = !DILocalVariable(name: "diffmap", scope: !4098, file: !3, line: 680, type: !2188)
!4110 = !DILocation(line: 680, column: 12, scope: !4098)
!4111 = !DILocalVariable(name: "prevmap", scope: !4098, file: !3, line: 680, type: !2188)
!4112 = !DILocation(line: 680, column: 22, scope: !4098)
!4113 = !DILocalVariable(name: "origmap", scope: !4098, file: !3, line: 680, type: !2188)
!4114 = !DILocation(line: 680, column: 32, scope: !4098)
!4115 = !DILocation(line: 683, column: 12, scope: !4098)
!4116 = !DILocation(line: 683, column: 10, scope: !4098)
!4117 = !DILocation(line: 685, column: 6, scope: !4118)
!4118 = distinct !DILexicalBlock(scope: !4098, file: !3, line: 685, column: 6)
!4119 = !DILocation(line: 685, column: 6, scope: !4098)
!4120 = !DILocation(line: 686, column: 31, scope: !4121)
!4121 = distinct !DILexicalBlock(scope: !4118, file: !3, line: 685, column: 16)
!4122 = !DILocation(line: 686, column: 16, scope: !4121)
!4123 = !DILocation(line: 686, column: 14, scope: !4121)
!4124 = !DILocation(line: 687, column: 23, scope: !4121)
!4125 = !DILocation(line: 687, column: 35, scope: !4121)
!4126 = !DILocation(line: 687, column: 3, scope: !4121)
!4127 = !DILocation(line: 688, column: 2, scope: !4121)
!4128 = !DILocation(line: 691, column: 32, scope: !4098)
!4129 = !DILocation(line: 691, column: 36, scope: !4098)
!4130 = !DILocation(line: 691, column: 40, scope: !4098)
!4131 = !DILocation(line: 691, column: 48, scope: !4098)
!4132 = !DILocation(line: 691, column: 52, scope: !4098)
!4133 = !DILocation(line: 691, column: 61, scope: !4098)
!4134 = !DILocation(line: 691, column: 65, scope: !4098)
!4135 = !DILocation(line: 691, column: 12, scope: !4098)
!4136 = !DILocation(line: 691, column: 10, scope: !4098)
!4137 = !DILocation(line: 692, column: 6, scope: !4138)
!4138 = distinct !DILexicalBlock(scope: !4098, file: !3, line: 692, column: 6)
!4139 = !DILocation(line: 692, column: 6, scope: !4098)
!4140 = !DILocation(line: 693, column: 18, scope: !4141)
!4141 = distinct !DILexicalBlock(scope: !4138, file: !3, line: 692, column: 15)
!4142 = !DILocation(line: 693, column: 3, scope: !4141)
!4143 = !DILocation(line: 694, column: 17, scope: !4141)
!4144 = !DILocation(line: 694, column: 21, scope: !4141)
!4145 = !DILocation(line: 694, column: 3, scope: !4141)
!4146 = !DILocation(line: 695, column: 2, scope: !4141)
!4147 = !DILocation(line: 698, column: 26, scope: !4098)
!4148 = !DILocation(line: 698, column: 30, scope: !4098)
!4149 = !DILocation(line: 698, column: 38, scope: !4098)
!4150 = !DILocation(line: 698, column: 42, scope: !4098)
!4151 = !DILocation(line: 698, column: 51, scope: !4098)
!4152 = !DILocation(line: 698, column: 55, scope: !4098)
!4153 = !DILocation(line: 698, column: 12, scope: !4098)
!4154 = !DILocation(line: 698, column: 10, scope: !4098)
!4155 = !DILocation(line: 699, column: 2, scope: !4098)
!4156 = !DILocation(line: 699, column: 11, scope: !4098)
!4157 = !DILocation(line: 699, column: 16, scope: !4098)
!4158 = !DILocation(line: 700, column: 6, scope: !4159)
!4159 = distinct !DILexicalBlock(scope: !4098, file: !3, line: 700, column: 6)
!4160 = !DILocation(line: 700, column: 18, scope: !4159)
!4161 = !DILocation(line: 700, column: 23, scope: !4159)
!4162 = !DILocation(line: 700, column: 6, scope: !4098)
!4163 = !DILocation(line: 701, column: 3, scope: !4159)
!4164 = !DILocation(line: 701, column: 12, scope: !4159)
!4165 = !DILocation(line: 701, column: 17, scope: !4159)
!4166 = !DILocation(line: 702, column: 17, scope: !4098)
!4167 = !DILocation(line: 702, column: 26, scope: !4098)
!4168 = !DILocation(line: 702, column: 38, scope: !4098)
!4169 = !DILocation(line: 702, column: 42, scope: !4098)
!4170 = !DILocation(line: 702, column: 51, scope: !4098)
!4171 = !DILocation(line: 702, column: 2, scope: !4098)
!4172 = !DILocation(line: 705, column: 6, scope: !4173)
!4173 = distinct !DILexicalBlock(scope: !4098, file: !3, line: 705, column: 6)
!4174 = !DILocation(line: 705, column: 15, scope: !4173)
!4175 = !DILocation(line: 705, column: 26, scope: !4173)
!4176 = !DILocation(line: 705, column: 6, scope: !4098)
!4177 = !DILocation(line: 706, column: 15, scope: !4178)
!4178 = distinct !DILexicalBlock(scope: !4173, file: !3, line: 705, column: 33)
!4179 = !DILocation(line: 706, column: 19, scope: !4178)
!4180 = !DILocation(line: 706, column: 3, scope: !4178)
!4181 = !DILocation(line: 707, column: 2, scope: !4178)
!4182 = !DILocation(line: 709, column: 18, scope: !4183)
!4183 = distinct !DILexicalBlock(scope: !4173, file: !3, line: 708, column: 7)
!4184 = !DILocation(line: 709, column: 3, scope: !4183)
!4185 = !DILocation(line: 710, column: 3, scope: !4183)
!4186 = !DILocation(line: 710, column: 13, scope: !4183)
!4187 = !DILocation(line: 714, column: 6, scope: !4188)
!4188 = distinct !DILexicalBlock(scope: !4098, file: !3, line: 714, column: 6)
!4189 = !DILocation(line: 714, column: 6, scope: !4098)
!4190 = !DILocation(line: 715, column: 18, scope: !4191)
!4191 = distinct !DILexicalBlock(scope: !4188, file: !3, line: 714, column: 16)
!4192 = !DILocation(line: 715, column: 3, scope: !4191)
!4193 = !DILocation(line: 716, column: 3, scope: !4191)
!4194 = !DILocation(line: 716, column: 13, scope: !4191)
!4195 = !DILocation(line: 717, column: 2, scope: !4191)
!4196 = !DILocation(line: 718, column: 1, scope: !4098)
!4197 = distinct !DISubprogram(name: "wm_user_modal_keymap_set_items", scope: !3, file: !3, line: 858, type: !4198, scopeLine: 859, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !356)
!4198 = !DISubroutineType(types: !4199)
!4199 = !{null, !452, !2188}
!4200 = !DILocalVariable(name: "wm", arg: 1, scope: !4197, file: !3, line: 858, type: !452)
!4201 = !DILocation(line: 858, column: 61, scope: !4197)
!4202 = !DILocalVariable(name: "km", arg: 2, scope: !4197, file: !3, line: 858, type: !2188)
!4203 = !DILocation(line: 858, column: 75, scope: !4197)
!4204 = !DILocalVariable(name: "defaultkm", scope: !4197, file: !3, line: 862, type: !2188)
!4205 = !DILocation(line: 862, column: 12, scope: !4197)
!4206 = !DILocalVariable(name: "kmi", scope: !4197, file: !3, line: 863, type: !287)
!4207 = !DILocation(line: 863, column: 16, scope: !4197)
!4208 = !DILocalVariable(name: "propvalue", scope: !4197, file: !3, line: 864, type: !273)
!4209 = !DILocation(line: 864, column: 6, scope: !4197)
!4210 = !DILocation(line: 866, column: 6, scope: !4211)
!4211 = distinct !DILexicalBlock(scope: !4197, file: !3, line: 866, column: 6)
!4212 = !DILocation(line: 866, column: 9, scope: !4211)
!4213 = !DILocation(line: 866, column: 13, scope: !4211)
!4214 = !DILocation(line: 866, column: 17, scope: !4211)
!4215 = !DILocation(line: 866, column: 22, scope: !4211)
!4216 = !DILocation(line: 866, column: 38, scope: !4211)
!4217 = !DILocation(line: 866, column: 42, scope: !4211)
!4218 = !DILocation(line: 866, column: 46, scope: !4211)
!4219 = !DILocation(line: 866, column: 6, scope: !4197)
!4220 = !DILocation(line: 867, column: 7, scope: !4221)
!4221 = distinct !DILexicalBlock(scope: !4222, file: !3, line: 867, column: 7)
!4222 = distinct !DILexicalBlock(scope: !4211, file: !3, line: 866, column: 59)
!4223 = !DILocation(line: 867, column: 11, scope: !4221)
!4224 = !DILocation(line: 867, column: 23, scope: !4221)
!4225 = !DILocation(line: 867, column: 7, scope: !4222)
!4226 = !DILocation(line: 868, column: 4, scope: !4227)
!4227 = distinct !DILexicalBlock(scope: !4221, file: !3, line: 867, column: 32)
!4228 = !DILocation(line: 871, column: 36, scope: !4222)
!4229 = !DILocation(line: 871, column: 40, scope: !4222)
!4230 = !DILocation(line: 871, column: 53, scope: !4222)
!4231 = !DILocation(line: 871, column: 62, scope: !4222)
!4232 = !DILocation(line: 871, column: 66, scope: !4222)
!4233 = !DILocation(line: 871, column: 15, scope: !4222)
!4234 = !DILocation(line: 871, column: 13, scope: !4222)
!4235 = !DILocation(line: 873, column: 8, scope: !4236)
!4236 = distinct !DILexicalBlock(scope: !4222, file: !3, line: 873, column: 7)
!4237 = !DILocation(line: 873, column: 7, scope: !4222)
!4238 = !DILocation(line: 874, column: 4, scope: !4236)
!4239 = !DILocation(line: 876, column: 21, scope: !4222)
!4240 = !DILocation(line: 876, column: 32, scope: !4222)
!4241 = !DILocation(line: 876, column: 3, scope: !4222)
!4242 = !DILocation(line: 876, column: 7, scope: !4222)
!4243 = !DILocation(line: 876, column: 19, scope: !4222)
!4244 = !DILocation(line: 877, column: 14, scope: !4222)
!4245 = !DILocation(line: 877, column: 25, scope: !4222)
!4246 = !DILocation(line: 877, column: 3, scope: !4222)
!4247 = !DILocation(line: 877, column: 7, scope: !4222)
!4248 = !DILocation(line: 877, column: 12, scope: !4222)
!4249 = !DILocation(line: 879, column: 14, scope: !4250)
!4250 = distinct !DILexicalBlock(scope: !4222, file: !3, line: 879, column: 3)
!4251 = !DILocation(line: 879, column: 18, scope: !4250)
!4252 = !DILocation(line: 879, column: 24, scope: !4250)
!4253 = !DILocation(line: 879, column: 12, scope: !4250)
!4254 = !DILocation(line: 879, column: 8, scope: !4250)
!4255 = !DILocation(line: 879, column: 31, scope: !4256)
!4256 = distinct !DILexicalBlock(scope: !4250, file: !3, line: 879, column: 3)
!4257 = !DILocation(line: 879, column: 3, scope: !4250)
!4258 = !DILocation(line: 880, column: 8, scope: !4259)
!4259 = distinct !DILexicalBlock(scope: !4260, file: !3, line: 880, column: 8)
!4260 = distinct !DILexicalBlock(scope: !4256, file: !3, line: 879, column: 53)
!4261 = !DILocation(line: 880, column: 13, scope: !4259)
!4262 = !DILocation(line: 880, column: 8, scope: !4260)
!4263 = !DILocation(line: 881, column: 32, scope: !4264)
!4264 = distinct !DILexicalBlock(scope: !4265, file: !3, line: 881, column: 9)
!4265 = distinct !DILexicalBlock(scope: !4259, file: !3, line: 880, column: 31)
!4266 = !DILocation(line: 881, column: 36, scope: !4264)
!4267 = !DILocation(line: 881, column: 49, scope: !4264)
!4268 = !DILocation(line: 881, column: 54, scope: !4264)
!4269 = !DILocation(line: 881, column: 9, scope: !4264)
!4270 = !DILocation(line: 881, column: 9, scope: !4265)
!4271 = !DILocation(line: 882, column: 23, scope: !4264)
!4272 = !DILocation(line: 882, column: 6, scope: !4264)
!4273 = !DILocation(line: 882, column: 11, scope: !4264)
!4274 = !DILocation(line: 882, column: 21, scope: !4264)
!4275 = !DILocation(line: 883, column: 5, scope: !4265)
!4276 = !DILocation(line: 883, column: 10, scope: !4265)
!4277 = !DILocation(line: 883, column: 27, scope: !4265)
!4278 = !DILocation(line: 884, column: 4, scope: !4265)
!4279 = !DILocation(line: 885, column: 3, scope: !4260)
!4280 = !DILocation(line: 879, column: 42, scope: !4256)
!4281 = !DILocation(line: 879, column: 47, scope: !4256)
!4282 = !DILocation(line: 879, column: 40, scope: !4256)
!4283 = !DILocation(line: 879, column: 3, scope: !4256)
!4284 = distinct !{!4284, !4257, !4285}
!4285 = !DILocation(line: 885, column: 3, scope: !4250)
!4286 = !DILocation(line: 886, column: 2, scope: !4222)
!4287 = !DILocation(line: 887, column: 1, scope: !4197)
!4288 = distinct !DISubprogram(name: "wm_keymap_patch_update", scope: !3, file: !3, line: 621, type: !4289, scopeLine: 622, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !356)
!4289 = !DISubroutineType(types: !4290)
!4290 = !{!2188, !767, !2188, !2188, !2188}
!4291 = !DILocalVariable(name: "lb", arg: 1, scope: !4288, file: !3, line: 621, type: !767)
!4292 = !DILocation(line: 621, column: 51, scope: !4288)
!4293 = !DILocalVariable(name: "defaultmap", arg: 2, scope: !4288, file: !3, line: 621, type: !2188)
!4294 = !DILocation(line: 621, column: 65, scope: !4288)
!4295 = !DILocalVariable(name: "addonmap", arg: 3, scope: !4288, file: !3, line: 621, type: !2188)
!4296 = !DILocation(line: 621, column: 87, scope: !4288)
!4297 = !DILocalVariable(name: "usermap", arg: 4, scope: !4288, file: !3, line: 621, type: !2188)
!4298 = !DILocation(line: 621, column: 107, scope: !4288)
!4299 = !DILocalVariable(name: "km", scope: !4288, file: !3, line: 623, type: !2188)
!4300 = !DILocation(line: 623, column: 12, scope: !4288)
!4301 = !DILocalVariable(name: "expanded", scope: !4288, file: !3, line: 624, type: !273)
!4302 = !DILocation(line: 624, column: 6, scope: !4288)
!4303 = !DILocation(line: 627, column: 27, scope: !4288)
!4304 = !DILocation(line: 627, column: 31, scope: !4288)
!4305 = !DILocation(line: 627, column: 43, scope: !4288)
!4306 = !DILocation(line: 627, column: 51, scope: !4288)
!4307 = !DILocation(line: 627, column: 63, scope: !4288)
!4308 = !DILocation(line: 627, column: 72, scope: !4288)
!4309 = !DILocation(line: 627, column: 84, scope: !4288)
!4310 = !DILocation(line: 627, column: 7, scope: !4288)
!4311 = !DILocation(line: 627, column: 5, scope: !4288)
!4312 = !DILocation(line: 628, column: 6, scope: !4313)
!4313 = distinct !DILexicalBlock(scope: !4288, file: !3, line: 628, column: 6)
!4314 = !DILocation(line: 628, column: 6, scope: !4288)
!4315 = !DILocation(line: 629, column: 15, scope: !4316)
!4316 = distinct !DILexicalBlock(scope: !4313, file: !3, line: 628, column: 10)
!4317 = !DILocation(line: 629, column: 19, scope: !4316)
!4318 = !DILocation(line: 629, column: 24, scope: !4316)
!4319 = !DILocation(line: 629, column: 12, scope: !4316)
!4320 = !DILocation(line: 630, column: 18, scope: !4316)
!4321 = !DILocation(line: 630, column: 3, scope: !4316)
!4322 = !DILocation(line: 631, column: 17, scope: !4316)
!4323 = !DILocation(line: 631, column: 21, scope: !4316)
!4324 = !DILocation(line: 631, column: 3, scope: !4316)
!4325 = !DILocation(line: 632, column: 2, scope: !4316)
!4326 = !DILocation(line: 635, column: 6, scope: !4327)
!4327 = distinct !DILexicalBlock(scope: !4288, file: !3, line: 635, column: 6)
!4328 = !DILocation(line: 635, column: 14, scope: !4327)
!4329 = !DILocation(line: 635, column: 19, scope: !4327)
!4330 = !DILocation(line: 635, column: 28, scope: !4327)
!4331 = !DILocation(line: 635, column: 33, scope: !4327)
!4332 = !DILocation(line: 635, column: 6, scope: !4288)
!4333 = !DILocalVariable(name: "kmi", scope: !4334, file: !3, line: 638, type: !287)
!4334 = distinct !DILexicalBlock(scope: !4327, file: !3, line: 635, column: 49)
!4335 = !DILocation(line: 638, column: 17, scope: !4334)
!4336 = !DILocalVariable(name: "orig_kmi", scope: !4334, file: !3, line: 638, type: !287)
!4337 = !DILocation(line: 638, column: 23, scope: !4334)
!4338 = !DILocation(line: 640, column: 23, scope: !4334)
!4339 = !DILocation(line: 640, column: 8, scope: !4334)
!4340 = !DILocation(line: 640, column: 6, scope: !4334)
!4341 = !DILocation(line: 643, column: 14, scope: !4342)
!4342 = distinct !DILexicalBlock(scope: !4334, file: !3, line: 643, column: 3)
!4343 = !DILocation(line: 643, column: 18, scope: !4342)
!4344 = !DILocation(line: 643, column: 24, scope: !4342)
!4345 = !DILocation(line: 643, column: 12, scope: !4342)
!4346 = !DILocation(line: 643, column: 8, scope: !4342)
!4347 = !DILocation(line: 643, column: 31, scope: !4348)
!4348 = distinct !DILexicalBlock(scope: !4342, file: !3, line: 643, column: 3)
!4349 = !DILocation(line: 643, column: 3, scope: !4342)
!4350 = !DILocation(line: 644, column: 42, scope: !4351)
!4351 = distinct !DILexicalBlock(scope: !4348, file: !3, line: 643, column: 53)
!4352 = !DILocation(line: 644, column: 54, scope: !4351)
!4353 = !DILocation(line: 644, column: 15, scope: !4351)
!4354 = !DILocation(line: 644, column: 13, scope: !4351)
!4355 = !DILocation(line: 645, column: 9, scope: !4356)
!4356 = distinct !DILexicalBlock(scope: !4351, file: !3, line: 645, column: 8)
!4357 = !DILocation(line: 645, column: 8, scope: !4351)
!4358 = !DILocation(line: 646, column: 50, scope: !4356)
!4359 = !DILocation(line: 646, column: 62, scope: !4356)
!4360 = !DILocation(line: 646, column: 16, scope: !4356)
!4361 = !DILocation(line: 646, column: 14, scope: !4356)
!4362 = !DILocation(line: 646, column: 5, scope: !4356)
!4363 = !DILocation(line: 648, column: 8, scope: !4364)
!4364 = distinct !DILexicalBlock(scope: !4351, file: !3, line: 648, column: 8)
!4365 = !DILocation(line: 648, column: 8, scope: !4351)
!4366 = !DILocation(line: 649, column: 15, scope: !4364)
!4367 = !DILocation(line: 649, column: 25, scope: !4364)
!4368 = !DILocation(line: 649, column: 5, scope: !4364)
!4369 = !DILocation(line: 649, column: 10, scope: !4364)
!4370 = !DILocation(line: 649, column: 13, scope: !4364)
!4371 = !DILocation(line: 651, column: 17, scope: !4364)
!4372 = !DILocation(line: 651, column: 21, scope: !4364)
!4373 = !DILocation(line: 651, column: 27, scope: !4364)
!4374 = !DILocation(line: 651, column: 16, scope: !4364)
!4375 = !DILocation(line: 651, column: 15, scope: !4364)
!4376 = !DILocation(line: 651, column: 5, scope: !4364)
!4377 = !DILocation(line: 651, column: 10, scope: !4364)
!4378 = !DILocation(line: 651, column: 13, scope: !4364)
!4379 = !DILocation(line: 652, column: 3, scope: !4351)
!4380 = !DILocation(line: 643, column: 42, scope: !4348)
!4381 = !DILocation(line: 643, column: 47, scope: !4348)
!4382 = !DILocation(line: 643, column: 40, scope: !4348)
!4383 = !DILocation(line: 643, column: 3, scope: !4348)
!4384 = distinct !{!4384, !4349, !4385}
!4385 = !DILocation(line: 652, column: 3, scope: !4342)
!4386 = !DILocation(line: 654, column: 3, scope: !4334)
!4387 = !DILocation(line: 654, column: 7, scope: !4334)
!4388 = !DILocation(line: 654, column: 12, scope: !4334)
!4389 = !DILocation(line: 655, column: 2, scope: !4334)
!4390 = !DILocation(line: 657, column: 23, scope: !4327)
!4391 = !DILocation(line: 657, column: 8, scope: !4327)
!4392 = !DILocation(line: 657, column: 6, scope: !4327)
!4393 = !DILocation(line: 660, column: 6, scope: !4394)
!4394 = distinct !DILexicalBlock(scope: !4288, file: !3, line: 660, column: 6)
!4395 = !DILocation(line: 660, column: 6, scope: !4288)
!4396 = !DILocation(line: 661, column: 23, scope: !4394)
!4397 = !DILocation(line: 661, column: 27, scope: !4394)
!4398 = !DILocation(line: 661, column: 3, scope: !4394)
!4399 = !DILocation(line: 664, column: 6, scope: !4400)
!4400 = distinct !DILexicalBlock(scope: !4288, file: !3, line: 664, column: 6)
!4401 = !DILocation(line: 664, column: 6, scope: !4288)
!4402 = !DILocation(line: 665, column: 3, scope: !4400)
!4403 = !DILocation(line: 665, column: 7, scope: !4400)
!4404 = !DILocation(line: 665, column: 12, scope: !4400)
!4405 = !DILocation(line: 666, column: 28, scope: !4288)
!4406 = !DILocation(line: 666, column: 26, scope: !4288)
!4407 = !DILocation(line: 666, column: 2, scope: !4288)
!4408 = !DILocation(line: 666, column: 6, scope: !4288)
!4409 = !DILocation(line: 666, column: 11, scope: !4288)
!4410 = !DILocation(line: 669, column: 6, scope: !4411)
!4411 = distinct !DILexicalBlock(scope: !4288, file: !3, line: 669, column: 6)
!4412 = !DILocation(line: 669, column: 14, scope: !4411)
!4413 = !DILocation(line: 669, column: 18, scope: !4411)
!4414 = !DILocation(line: 669, column: 27, scope: !4411)
!4415 = !DILocation(line: 669, column: 32, scope: !4411)
!4416 = !DILocation(line: 669, column: 6, scope: !4288)
!4417 = !DILocation(line: 670, column: 19, scope: !4411)
!4418 = !DILocation(line: 670, column: 23, scope: !4411)
!4419 = !DILocation(line: 670, column: 3, scope: !4411)
!4420 = !DILocation(line: 673, column: 14, scope: !4288)
!4421 = !DILocation(line: 673, column: 18, scope: !4288)
!4422 = !DILocation(line: 673, column: 2, scope: !4288)
!4423 = !DILocation(line: 675, column: 9, scope: !4288)
!4424 = !DILocation(line: 675, column: 2, scope: !4288)
!4425 = distinct !DISubprogram(name: "WM_keymap_active", scope: !3, file: !3, line: 1315, type: !4056, scopeLine: 1316, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !356)
!4426 = !DILocalVariable(name: "wm", arg: 1, scope: !4425, file: !3, line: 1315, type: !452)
!4427 = !DILocation(line: 1315, column: 45, scope: !4425)
!4428 = !DILocalVariable(name: "keymap", arg: 2, scope: !4425, file: !3, line: 1315, type: !2188)
!4429 = !DILocation(line: 1315, column: 59, scope: !4425)
!4430 = !DILocalVariable(name: "km", scope: !4425, file: !3, line: 1317, type: !2188)
!4431 = !DILocation(line: 1317, column: 12, scope: !4425)
!4432 = !DILocation(line: 1319, column: 7, scope: !4433)
!4433 = distinct !DILexicalBlock(scope: !4425, file: !3, line: 1319, column: 6)
!4434 = !DILocation(line: 1319, column: 6, scope: !4425)
!4435 = !DILocation(line: 1320, column: 3, scope: !4433)
!4436 = !DILocation(line: 1323, column: 28, scope: !4425)
!4437 = !DILocation(line: 1323, column: 32, scope: !4425)
!4438 = !DILocation(line: 1323, column: 42, scope: !4425)
!4439 = !DILocation(line: 1323, column: 51, scope: !4425)
!4440 = !DILocation(line: 1323, column: 59, scope: !4425)
!4441 = !DILocation(line: 1323, column: 67, scope: !4425)
!4442 = !DILocation(line: 1323, column: 75, scope: !4425)
!4443 = !DILocation(line: 1323, column: 84, scope: !4425)
!4444 = !DILocation(line: 1323, column: 92, scope: !4425)
!4445 = !DILocation(line: 1323, column: 7, scope: !4425)
!4446 = !DILocation(line: 1323, column: 5, scope: !4425)
!4447 = !DILocation(line: 1325, column: 6, scope: !4448)
!4448 = distinct !DILexicalBlock(scope: !4425, file: !3, line: 1325, column: 6)
!4449 = !DILocation(line: 1325, column: 6, scope: !4425)
!4450 = !DILocation(line: 1326, column: 10, scope: !4448)
!4451 = !DILocation(line: 1326, column: 3, scope: !4448)
!4452 = !DILocation(line: 1328, column: 9, scope: !4425)
!4453 = !DILocation(line: 1328, column: 2, scope: !4425)
!4454 = !DILocation(line: 1329, column: 1, scope: !4425)
!4455 = distinct !DISubprogram(name: "WM_keymap_restore_item_to_default", scope: !3, file: !3, line: 1334, type: !4456, scopeLine: 1335, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !356)
!4456 = !DISubroutineType(types: !4457)
!4457 = !{null, !274, !2188, !287}
!4458 = !DILocalVariable(name: "C", arg: 1, scope: !4455, file: !3, line: 1334, type: !274)
!4459 = !DILocation(line: 1334, column: 50, scope: !4455)
!4460 = !DILocalVariable(name: "keymap", arg: 2, scope: !4455, file: !3, line: 1334, type: !2188)
!4461 = !DILocation(line: 1334, column: 63, scope: !4455)
!4462 = !DILocalVariable(name: "kmi", arg: 3, scope: !4455, file: !3, line: 1334, type: !287)
!4463 = !DILocation(line: 1334, column: 85, scope: !4455)
!4464 = !DILocalVariable(name: "wm", scope: !4455, file: !3, line: 1336, type: !452)
!4465 = !DILocation(line: 1336, column: 19, scope: !4455)
!4466 = !DILocation(line: 1336, column: 39, scope: !4455)
!4467 = !DILocation(line: 1336, column: 24, scope: !4455)
!4468 = !DILocalVariable(name: "defaultmap", scope: !4455, file: !3, line: 1337, type: !2188)
!4469 = !DILocation(line: 1337, column: 12, scope: !4455)
!4470 = !DILocalVariable(name: "addonmap", scope: !4455, file: !3, line: 1337, type: !2188)
!4471 = !DILocation(line: 1337, column: 25, scope: !4455)
!4472 = !DILocalVariable(name: "orig", scope: !4455, file: !3, line: 1338, type: !287)
!4473 = !DILocation(line: 1338, column: 16, scope: !4455)
!4474 = !DILocation(line: 1340, column: 7, scope: !4475)
!4475 = distinct !DILexicalBlock(scope: !4455, file: !3, line: 1340, column: 6)
!4476 = !DILocation(line: 1340, column: 6, scope: !4455)
!4477 = !DILocation(line: 1341, column: 3, scope: !4475)
!4478 = !DILocation(line: 1344, column: 32, scope: !4455)
!4479 = !DILocation(line: 1344, column: 36, scope: !4455)
!4480 = !DILocation(line: 1344, column: 15, scope: !4455)
!4481 = !DILocation(line: 1344, column: 13, scope: !4455)
!4482 = !DILocation(line: 1345, column: 34, scope: !4455)
!4483 = !DILocation(line: 1345, column: 38, scope: !4455)
!4484 = !DILocation(line: 1345, column: 49, scope: !4455)
!4485 = !DILocation(line: 1345, column: 58, scope: !4455)
!4486 = !DILocation(line: 1345, column: 66, scope: !4455)
!4487 = !DILocation(line: 1345, column: 74, scope: !4455)
!4488 = !DILocation(line: 1345, column: 82, scope: !4455)
!4489 = !DILocation(line: 1345, column: 91, scope: !4455)
!4490 = !DILocation(line: 1345, column: 99, scope: !4455)
!4491 = !DILocation(line: 1345, column: 13, scope: !4455)
!4492 = !DILocation(line: 1345, column: 11, scope: !4455)
!4493 = !DILocation(line: 1347, column: 6, scope: !4494)
!4494 = distinct !DILexicalBlock(scope: !4455, file: !3, line: 1347, column: 6)
!4495 = !DILocation(line: 1347, column: 6, scope: !4455)
!4496 = !DILocation(line: 1348, column: 31, scope: !4497)
!4497 = distinct !DILexicalBlock(scope: !4494, file: !3, line: 1347, column: 16)
!4498 = !DILocation(line: 1348, column: 16, scope: !4497)
!4499 = !DILocation(line: 1348, column: 14, scope: !4497)
!4500 = !DILocation(line: 1349, column: 23, scope: !4497)
!4501 = !DILocation(line: 1349, column: 35, scope: !4497)
!4502 = !DILocation(line: 1349, column: 3, scope: !4497)
!4503 = !DILocation(line: 1350, column: 2, scope: !4497)
!4504 = !DILocation(line: 1353, column: 32, scope: !4455)
!4505 = !DILocation(line: 1353, column: 44, scope: !4455)
!4506 = !DILocation(line: 1353, column: 49, scope: !4455)
!4507 = !DILocation(line: 1353, column: 9, scope: !4455)
!4508 = !DILocation(line: 1353, column: 7, scope: !4455)
!4509 = !DILocation(line: 1355, column: 6, scope: !4510)
!4510 = distinct !DILexicalBlock(scope: !4455, file: !3, line: 1355, column: 6)
!4511 = !DILocation(line: 1355, column: 6, scope: !4455)
!4512 = !DILocation(line: 1357, column: 14, scope: !4513)
!4513 = distinct !DILexicalBlock(scope: !4514, file: !3, line: 1357, column: 7)
!4514 = distinct !DILexicalBlock(scope: !4510, file: !3, line: 1355, column: 12)
!4515 = !DILocation(line: 1357, column: 20, scope: !4513)
!4516 = !DILocation(line: 1357, column: 28, scope: !4513)
!4517 = !DILocation(line: 1357, column: 33, scope: !4513)
!4518 = !DILocation(line: 1357, column: 7, scope: !4513)
!4519 = !DILocation(line: 1357, column: 41, scope: !4513)
!4520 = !DILocation(line: 1357, column: 7, scope: !4514)
!4521 = !DILocation(line: 1358, column: 16, scope: !4522)
!4522 = distinct !DILexicalBlock(scope: !4513, file: !3, line: 1357, column: 47)
!4523 = !DILocation(line: 1358, column: 21, scope: !4522)
!4524 = !DILocation(line: 1358, column: 29, scope: !4522)
!4525 = !DILocation(line: 1358, column: 35, scope: !4522)
!4526 = !DILocation(line: 1358, column: 4, scope: !4522)
!4527 = !DILocation(line: 1359, column: 31, scope: !4522)
!4528 = !DILocation(line: 1359, column: 4, scope: !4522)
!4529 = !DILocation(line: 1360, column: 3, scope: !4522)
!4530 = !DILocation(line: 1362, column: 7, scope: !4531)
!4531 = distinct !DILexicalBlock(scope: !4514, file: !3, line: 1362, column: 7)
!4532 = !DILocation(line: 1362, column: 13, scope: !4531)
!4533 = !DILocation(line: 1362, column: 7, scope: !4514)
!4534 = !DILocation(line: 1363, column: 8, scope: !4535)
!4535 = distinct !DILexicalBlock(scope: !4536, file: !3, line: 1363, column: 8)
!4536 = distinct !DILexicalBlock(scope: !4531, file: !3, line: 1362, column: 25)
!4537 = !DILocation(line: 1363, column: 13, scope: !4535)
!4538 = !DILocation(line: 1363, column: 8, scope: !4536)
!4539 = !DILocation(line: 1364, column: 22, scope: !4540)
!4540 = distinct !DILexicalBlock(scope: !4535, file: !3, line: 1363, column: 25)
!4541 = !DILocation(line: 1364, column: 27, scope: !4540)
!4542 = !DILocation(line: 1364, column: 5, scope: !4540)
!4543 = !DILocation(line: 1365, column: 5, scope: !4540)
!4544 = !DILocation(line: 1365, column: 15, scope: !4540)
!4545 = !DILocation(line: 1365, column: 20, scope: !4540)
!4546 = !DILocation(line: 1366, column: 5, scope: !4540)
!4547 = !DILocation(line: 1366, column: 10, scope: !4540)
!4548 = !DILocation(line: 1366, column: 21, scope: !4540)
!4549 = !DILocation(line: 1367, column: 4, scope: !4540)
!4550 = !DILocation(line: 1369, column: 39, scope: !4536)
!4551 = !DILocation(line: 1369, column: 45, scope: !4536)
!4552 = !DILocation(line: 1369, column: 22, scope: !4536)
!4553 = !DILocation(line: 1369, column: 4, scope: !4536)
!4554 = !DILocation(line: 1369, column: 9, scope: !4536)
!4555 = !DILocation(line: 1369, column: 20, scope: !4536)
!4556 = !DILocation(line: 1370, column: 21, scope: !4536)
!4557 = !DILocation(line: 1370, column: 26, scope: !4536)
!4558 = !DILocation(line: 1370, column: 4, scope: !4536)
!4559 = !DILocation(line: 1370, column: 9, scope: !4536)
!4560 = !DILocation(line: 1370, column: 14, scope: !4536)
!4561 = !DILocation(line: 1370, column: 19, scope: !4536)
!4562 = !DILocation(line: 1371, column: 3, scope: !4536)
!4563 = !DILocation(line: 1373, column: 20, scope: !4514)
!4564 = !DILocation(line: 1373, column: 26, scope: !4514)
!4565 = !DILocation(line: 1373, column: 3, scope: !4514)
!4566 = !DILocation(line: 1373, column: 8, scope: !4514)
!4567 = !DILocation(line: 1373, column: 18, scope: !4514)
!4568 = !DILocation(line: 1374, column: 15, scope: !4514)
!4569 = !DILocation(line: 1374, column: 21, scope: !4514)
!4570 = !DILocation(line: 1374, column: 3, scope: !4514)
!4571 = !DILocation(line: 1374, column: 8, scope: !4514)
!4572 = !DILocation(line: 1374, column: 13, scope: !4514)
!4573 = !DILocation(line: 1375, column: 14, scope: !4514)
!4574 = !DILocation(line: 1375, column: 20, scope: !4514)
!4575 = !DILocation(line: 1375, column: 3, scope: !4514)
!4576 = !DILocation(line: 1375, column: 8, scope: !4514)
!4577 = !DILocation(line: 1375, column: 12, scope: !4514)
!4578 = !DILocation(line: 1376, column: 16, scope: !4514)
!4579 = !DILocation(line: 1376, column: 22, scope: !4514)
!4580 = !DILocation(line: 1376, column: 3, scope: !4514)
!4581 = !DILocation(line: 1376, column: 8, scope: !4514)
!4582 = !DILocation(line: 1376, column: 14, scope: !4514)
!4583 = !DILocation(line: 1377, column: 15, scope: !4514)
!4584 = !DILocation(line: 1377, column: 21, scope: !4514)
!4585 = !DILocation(line: 1377, column: 3, scope: !4514)
!4586 = !DILocation(line: 1377, column: 8, scope: !4514)
!4587 = !DILocation(line: 1377, column: 13, scope: !4514)
!4588 = !DILocation(line: 1378, column: 14, scope: !4514)
!4589 = !DILocation(line: 1378, column: 20, scope: !4514)
!4590 = !DILocation(line: 1378, column: 3, scope: !4514)
!4591 = !DILocation(line: 1378, column: 8, scope: !4514)
!4592 = !DILocation(line: 1378, column: 12, scope: !4514)
!4593 = !DILocation(line: 1379, column: 16, scope: !4514)
!4594 = !DILocation(line: 1379, column: 22, scope: !4514)
!4595 = !DILocation(line: 1379, column: 3, scope: !4514)
!4596 = !DILocation(line: 1379, column: 8, scope: !4514)
!4597 = !DILocation(line: 1379, column: 14, scope: !4514)
!4598 = !DILocation(line: 1380, column: 22, scope: !4514)
!4599 = !DILocation(line: 1380, column: 28, scope: !4514)
!4600 = !DILocation(line: 1380, column: 3, scope: !4514)
!4601 = !DILocation(line: 1380, column: 8, scope: !4514)
!4602 = !DILocation(line: 1380, column: 20, scope: !4514)
!4603 = !DILocation(line: 1381, column: 18, scope: !4514)
!4604 = !DILocation(line: 1381, column: 24, scope: !4514)
!4605 = !DILocation(line: 1381, column: 3, scope: !4514)
!4606 = !DILocation(line: 1381, column: 8, scope: !4514)
!4607 = !DILocation(line: 1381, column: 16, scope: !4514)
!4608 = !DILocation(line: 1383, column: 27, scope: !4514)
!4609 = !DILocation(line: 1383, column: 35, scope: !4514)
!4610 = !DILocation(line: 1383, column: 3, scope: !4514)
!4611 = !DILocation(line: 1384, column: 2, scope: !4514)
!4612 = !DILocation(line: 1387, column: 6, scope: !4613)
!4613 = distinct !DILexicalBlock(scope: !4455, file: !3, line: 1387, column: 6)
!4614 = !DILocation(line: 1387, column: 6, scope: !4455)
!4615 = !DILocation(line: 1388, column: 18, scope: !4616)
!4616 = distinct !DILexicalBlock(scope: !4613, file: !3, line: 1387, column: 16)
!4617 = !DILocation(line: 1388, column: 3, scope: !4616)
!4618 = !DILocation(line: 1389, column: 3, scope: !4616)
!4619 = !DILocation(line: 1389, column: 13, scope: !4616)
!4620 = !DILocation(line: 1390, column: 2, scope: !4616)
!4621 = !DILocation(line: 1391, column: 1, scope: !4455)
!4622 = distinct !DISubprogram(name: "wm_keymap_copy", scope: !3, file: !3, line: 337, type: !4623, scopeLine: 338, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !356)
!4623 = !DISubroutineType(types: !4624)
!4624 = !{!2188, !2188}
!4625 = !DILocalVariable(name: "keymap", arg: 1, scope: !4622, file: !3, line: 337, type: !2188)
!4626 = !DILocation(line: 337, column: 43, scope: !4622)
!4627 = !DILocalVariable(name: "keymapn", scope: !4622, file: !3, line: 339, type: !2188)
!4628 = !DILocation(line: 339, column: 12, scope: !4622)
!4629 = !DILocation(line: 339, column: 22, scope: !4622)
!4630 = !DILocation(line: 339, column: 36, scope: !4622)
!4631 = !DILocalVariable(name: "kmi", scope: !4622, file: !3, line: 340, type: !287)
!4632 = !DILocation(line: 340, column: 16, scope: !4622)
!4633 = !DILocalVariable(name: "kmin", scope: !4622, file: !3, line: 340, type: !287)
!4634 = !DILocation(line: 340, column: 22, scope: !4622)
!4635 = !DILocalVariable(name: "kmdi", scope: !4622, file: !3, line: 341, type: !2258)
!4636 = !DILocation(line: 341, column: 20, scope: !4622)
!4637 = !DILocalVariable(name: "kmdin", scope: !4622, file: !3, line: 341, type: !2258)
!4638 = !DILocation(line: 341, column: 27, scope: !4622)
!4639 = !DILocation(line: 343, column: 25, scope: !4622)
!4640 = !DILocation(line: 343, column: 33, scope: !4622)
!4641 = !DILocation(line: 343, column: 2, scope: !4622)
!4642 = !DILocation(line: 343, column: 11, scope: !4622)
!4643 = !DILocation(line: 343, column: 23, scope: !4622)
!4644 = !DILocation(line: 344, column: 18, scope: !4622)
!4645 = !DILocation(line: 344, column: 26, scope: !4622)
!4646 = !DILocation(line: 344, column: 2, scope: !4622)
!4647 = !DILocation(line: 344, column: 11, scope: !4622)
!4648 = !DILocation(line: 344, column: 16, scope: !4622)
!4649 = !DILocation(line: 345, column: 22, scope: !4622)
!4650 = !DILocation(line: 345, column: 31, scope: !4622)
!4651 = !DILocation(line: 345, column: 2, scope: !4622)
!4652 = !DILocation(line: 346, column: 2, scope: !4622)
!4653 = !DILocation(line: 346, column: 11, scope: !4622)
!4654 = !DILocation(line: 346, column: 16, scope: !4622)
!4655 = !DILocation(line: 348, column: 14, scope: !4656)
!4656 = distinct !DILexicalBlock(scope: !4622, file: !3, line: 348, column: 2)
!4657 = !DILocation(line: 348, column: 22, scope: !4656)
!4658 = !DILocation(line: 348, column: 33, scope: !4656)
!4659 = !DILocation(line: 348, column: 12, scope: !4656)
!4660 = !DILocation(line: 348, column: 7, scope: !4656)
!4661 = !DILocation(line: 348, column: 40, scope: !4662)
!4662 = distinct !DILexicalBlock(scope: !4656, file: !3, line: 348, column: 2)
!4663 = !DILocation(line: 348, column: 2, scope: !4656)
!4664 = !DILocation(line: 349, column: 36, scope: !4665)
!4665 = distinct !DILexicalBlock(scope: !4662, file: !3, line: 348, column: 65)
!4666 = !DILocation(line: 349, column: 11, scope: !4665)
!4667 = !DILocation(line: 349, column: 9, scope: !4665)
!4668 = !DILocation(line: 350, column: 16, scope: !4665)
!4669 = !DILocation(line: 350, column: 25, scope: !4665)
!4670 = !DILocation(line: 350, column: 32, scope: !4665)
!4671 = !DILocation(line: 350, column: 3, scope: !4665)
!4672 = !DILocation(line: 351, column: 2, scope: !4665)
!4673 = !DILocation(line: 348, column: 53, scope: !4662)
!4674 = !DILocation(line: 348, column: 59, scope: !4662)
!4675 = !DILocation(line: 348, column: 51, scope: !4662)
!4676 = !DILocation(line: 348, column: 2, scope: !4662)
!4677 = distinct !{!4677, !4663, !4678}
!4678 = !DILocation(line: 351, column: 2, scope: !4656)
!4679 = !DILocation(line: 353, column: 13, scope: !4680)
!4680 = distinct !DILexicalBlock(scope: !4622, file: !3, line: 353, column: 2)
!4681 = !DILocation(line: 353, column: 21, scope: !4680)
!4682 = !DILocation(line: 353, column: 27, scope: !4680)
!4683 = !DILocation(line: 353, column: 11, scope: !4680)
!4684 = !DILocation(line: 353, column: 7, scope: !4680)
!4685 = !DILocation(line: 353, column: 34, scope: !4686)
!4686 = distinct !DILexicalBlock(scope: !4680, file: !3, line: 353, column: 2)
!4687 = !DILocation(line: 353, column: 2, scope: !4680)
!4688 = !DILocation(line: 354, column: 30, scope: !4689)
!4689 = distinct !DILexicalBlock(scope: !4686, file: !3, line: 353, column: 56)
!4690 = !DILocation(line: 354, column: 10, scope: !4689)
!4691 = !DILocation(line: 354, column: 8, scope: !4689)
!4692 = !DILocation(line: 355, column: 16, scope: !4689)
!4693 = !DILocation(line: 355, column: 25, scope: !4689)
!4694 = !DILocation(line: 355, column: 32, scope: !4689)
!4695 = !DILocation(line: 355, column: 3, scope: !4689)
!4696 = !DILocation(line: 356, column: 2, scope: !4689)
!4697 = !DILocation(line: 353, column: 45, scope: !4686)
!4698 = !DILocation(line: 353, column: 50, scope: !4686)
!4699 = !DILocation(line: 353, column: 43, scope: !4686)
!4700 = !DILocation(line: 353, column: 2, scope: !4686)
!4701 = distinct !{!4701, !4687, !4702}
!4702 = !DILocation(line: 356, column: 2, scope: !4680)
!4703 = !DILocation(line: 358, column: 9, scope: !4622)
!4704 = !DILocation(line: 358, column: 2, scope: !4622)
!4705 = distinct !DISubprogram(name: "wm_keymap_addon_add", scope: !3, file: !3, line: 497, type: !4706, scopeLine: 498, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !356)
!4706 = !DISubroutineType(types: !4707)
!4707 = !{null, !2188, !2188}
!4708 = !DILocalVariable(name: "keymap", arg: 1, scope: !4705, file: !3, line: 497, type: !2188)
!4709 = !DILocation(line: 497, column: 43, scope: !4705)
!4710 = !DILocalVariable(name: "addonmap", arg: 2, scope: !4705, file: !3, line: 497, type: !2188)
!4711 = !DILocation(line: 497, column: 61, scope: !4705)
!4712 = !DILocalVariable(name: "kmi", scope: !4705, file: !3, line: 499, type: !287)
!4713 = !DILocation(line: 499, column: 16, scope: !4705)
!4714 = !DILocalVariable(name: "kmin", scope: !4705, file: !3, line: 499, type: !287)
!4715 = !DILocation(line: 499, column: 22, scope: !4705)
!4716 = !DILocation(line: 501, column: 13, scope: !4717)
!4717 = distinct !DILexicalBlock(scope: !4705, file: !3, line: 501, column: 2)
!4718 = !DILocation(line: 501, column: 23, scope: !4717)
!4719 = !DILocation(line: 501, column: 29, scope: !4717)
!4720 = !DILocation(line: 501, column: 11, scope: !4717)
!4721 = !DILocation(line: 501, column: 7, scope: !4717)
!4722 = !DILocation(line: 501, column: 36, scope: !4723)
!4723 = distinct !DILexicalBlock(scope: !4717, file: !3, line: 501, column: 2)
!4724 = !DILocation(line: 501, column: 2, scope: !4717)
!4725 = !DILocation(line: 502, column: 30, scope: !4726)
!4726 = distinct !DILexicalBlock(scope: !4723, file: !3, line: 501, column: 58)
!4727 = !DILocation(line: 502, column: 10, scope: !4726)
!4728 = !DILocation(line: 502, column: 8, scope: !4726)
!4729 = !DILocation(line: 503, column: 22, scope: !4726)
!4730 = !DILocation(line: 503, column: 30, scope: !4726)
!4731 = !DILocation(line: 503, column: 3, scope: !4726)
!4732 = !DILocation(line: 504, column: 16, scope: !4726)
!4733 = !DILocation(line: 504, column: 24, scope: !4726)
!4734 = !DILocation(line: 504, column: 31, scope: !4726)
!4735 = !DILocation(line: 504, column: 3, scope: !4726)
!4736 = !DILocation(line: 505, column: 2, scope: !4726)
!4737 = !DILocation(line: 501, column: 47, scope: !4723)
!4738 = !DILocation(line: 501, column: 52, scope: !4723)
!4739 = !DILocation(line: 501, column: 45, scope: !4723)
!4740 = !DILocation(line: 501, column: 2, scope: !4723)
!4741 = distinct !{!4741, !4724, !4742}
!4742 = !DILocation(line: 505, column: 2, scope: !4717)
!4743 = !DILocation(line: 506, column: 1, scope: !4705)
!4744 = distinct !DISubprogram(name: "WM_keymap_item_find_id", scope: !3, file: !3, line: 1410, type: !4745, scopeLine: 1411, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !356)
!4745 = !DISubroutineType(types: !4746)
!4746 = !{!287, !2188, !273}
!4747 = !DILocalVariable(name: "keymap", arg: 1, scope: !4744, file: !3, line: 1410, type: !2188)
!4748 = !DILocation(line: 1410, column: 48, scope: !4744)
!4749 = !DILocalVariable(name: "id", arg: 2, scope: !4744, file: !3, line: 1410, type: !273)
!4750 = !DILocation(line: 1410, column: 60, scope: !4744)
!4751 = !DILocalVariable(name: "kmi", scope: !4744, file: !3, line: 1412, type: !287)
!4752 = !DILocation(line: 1412, column: 16, scope: !4744)
!4753 = !DILocation(line: 1414, column: 13, scope: !4754)
!4754 = distinct !DILexicalBlock(scope: !4744, file: !3, line: 1414, column: 2)
!4755 = !DILocation(line: 1414, column: 21, scope: !4754)
!4756 = !DILocation(line: 1414, column: 27, scope: !4754)
!4757 = !DILocation(line: 1414, column: 11, scope: !4754)
!4758 = !DILocation(line: 1414, column: 7, scope: !4754)
!4759 = !DILocation(line: 1414, column: 34, scope: !4760)
!4760 = distinct !DILexicalBlock(scope: !4754, file: !3, line: 1414, column: 2)
!4761 = !DILocation(line: 1414, column: 2, scope: !4754)
!4762 = !DILocation(line: 1415, column: 7, scope: !4763)
!4763 = distinct !DILexicalBlock(scope: !4764, file: !3, line: 1415, column: 7)
!4764 = distinct !DILexicalBlock(scope: !4760, file: !3, line: 1414, column: 56)
!4765 = !DILocation(line: 1415, column: 12, scope: !4763)
!4766 = !DILocation(line: 1415, column: 18, scope: !4763)
!4767 = !DILocation(line: 1415, column: 15, scope: !4763)
!4768 = !DILocation(line: 1415, column: 7, scope: !4764)
!4769 = !DILocation(line: 1416, column: 11, scope: !4770)
!4770 = distinct !DILexicalBlock(scope: !4763, file: !3, line: 1415, column: 22)
!4771 = !DILocation(line: 1416, column: 4, scope: !4770)
!4772 = !DILocation(line: 1418, column: 2, scope: !4764)
!4773 = !DILocation(line: 1414, column: 45, scope: !4760)
!4774 = !DILocation(line: 1414, column: 50, scope: !4760)
!4775 = !DILocation(line: 1414, column: 43, scope: !4760)
!4776 = !DILocation(line: 1414, column: 2, scope: !4760)
!4777 = distinct !{!4777, !4761, !4778}
!4778 = !DILocation(line: 1418, column: 2, scope: !4754)
!4779 = !DILocation(line: 1420, column: 2, scope: !4744)
!4780 = !DILocation(line: 1421, column: 1, scope: !4744)
!4781 = distinct !DISubprogram(name: "WM_keymap_restore_to_default", scope: !3, file: !3, line: 1393, type: !4782, scopeLine: 1394, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !356)
!4782 = !DISubroutineType(types: !4783)
!4783 = !{null, !2188, !274}
!4784 = !DILocalVariable(name: "keymap", arg: 1, scope: !4781, file: !3, line: 1393, type: !2188)
!4785 = !DILocation(line: 1393, column: 45, scope: !4781)
!4786 = !DILocalVariable(name: "C", arg: 2, scope: !4781, file: !3, line: 1393, type: !274)
!4787 = !DILocation(line: 1393, column: 63, scope: !4781)
!4788 = !DILocalVariable(name: "wm", scope: !4781, file: !3, line: 1395, type: !452)
!4789 = !DILocation(line: 1395, column: 19, scope: !4781)
!4790 = !DILocation(line: 1395, column: 39, scope: !4781)
!4791 = !DILocation(line: 1395, column: 24, scope: !4781)
!4792 = !DILocalVariable(name: "usermap", scope: !4781, file: !3, line: 1396, type: !2188)
!4793 = !DILocation(line: 1396, column: 12, scope: !4781)
!4794 = !DILocation(line: 1399, column: 49, scope: !4781)
!4795 = !DILocation(line: 1399, column: 57, scope: !4781)
!4796 = !DILocation(line: 1399, column: 65, scope: !4781)
!4797 = !DILocation(line: 1399, column: 73, scope: !4781)
!4798 = !DILocation(line: 1399, column: 82, scope: !4781)
!4799 = !DILocation(line: 1399, column: 90, scope: !4781)
!4800 = !DILocation(line: 1399, column: 12, scope: !4781)
!4801 = !DILocation(line: 1399, column: 10, scope: !4781)
!4802 = !DILocation(line: 1401, column: 6, scope: !4803)
!4803 = distinct !DILexicalBlock(scope: !4781, file: !3, line: 1401, column: 6)
!4804 = !DILocation(line: 1401, column: 6, scope: !4781)
!4805 = !DILocation(line: 1402, column: 18, scope: !4806)
!4806 = distinct !DILexicalBlock(scope: !4803, file: !3, line: 1401, column: 15)
!4807 = !DILocation(line: 1402, column: 3, scope: !4806)
!4808 = !DILocation(line: 1403, column: 34, scope: !4806)
!4809 = !DILocation(line: 1403, column: 3, scope: !4806)
!4810 = !DILocation(line: 1405, column: 3, scope: !4806)
!4811 = !DILocation(line: 1406, column: 23, scope: !4806)
!4812 = !DILocation(line: 1406, column: 3, scope: !4806)
!4813 = !DILocation(line: 1407, column: 2, scope: !4806)
!4814 = !DILocation(line: 1408, column: 1, scope: !4781)
!4815 = distinct !DISubprogram(name: "WM_keymap_guess_opname", scope: !3, file: !3, line: 1425, type: !4816, scopeLine: 1426, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !356)
!4816 = !DISubroutineType(types: !4817)
!4817 = !{!2188, !3126, !2048}
!4818 = !DILocalVariable(name: "C", arg: 1, scope: !4815, file: !3, line: 1425, type: !3126)
!4819 = !DILocation(line: 1425, column: 50, scope: !4815)
!4820 = !DILocalVariable(name: "opname", arg: 2, scope: !4815, file: !3, line: 1425, type: !2048)
!4821 = !DILocation(line: 1425, column: 65, scope: !4815)
!4822 = !DILocalVariable(name: "km", scope: !4815, file: !3, line: 1441, type: !2188)
!4823 = !DILocation(line: 1441, column: 12, scope: !4815)
!4824 = !DILocalVariable(name: "sl", scope: !4815, file: !3, line: 1442, type: !4825)
!4825 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4826, size: 64)
!4826 = !DIDerivedType(tag: DW_TAG_typedef, name: "SpaceLink", file: !4827, line: 91, baseType: !4828)
!4827 = !DIFile(filename: "blender/source/blender/makesdna/DNA_space_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!4828 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SpaceLink", file: !4827, line: 85, size: 448, elements: !4829)
!4829 = !{!4830, !4832, !4833, !4834, !4835, !4836}
!4830 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4828, file: !4827, line: 86, baseType: !4831, size: 64)
!4831 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4828, size: 64)
!4832 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !4828, file: !4827, line: 86, baseType: !4831, size: 64, offset: 64)
!4833 = !DIDerivedType(tag: DW_TAG_member, name: "regionbase", scope: !4828, file: !4827, line: 87, baseType: !319, size: 128, offset: 128)
!4834 = !DIDerivedType(tag: DW_TAG_member, name: "spacetype", scope: !4828, file: !4827, line: 88, baseType: !273, size: 32, offset: 256)
!4835 = !DIDerivedType(tag: DW_TAG_member, name: "blockscale", scope: !4828, file: !4827, line: 89, baseType: !548, size: 32, offset: 288)
!4836 = !DIDerivedType(tag: DW_TAG_member, name: "blockhandler", scope: !4828, file: !4827, line: 90, baseType: !4837, size: 128, offset: 320)
!4837 = !DICompositeType(tag: DW_TAG_array_type, baseType: !310, size: 128, elements: !1211)
!4838 = !DILocation(line: 1442, column: 13, scope: !4815)
!4839 = !DILocation(line: 1442, column: 36, scope: !4815)
!4840 = !DILocation(line: 1442, column: 18, scope: !4815)
!4841 = !DILocation(line: 1445, column: 6, scope: !4842)
!4842 = distinct !DILexicalBlock(scope: !4815, file: !3, line: 1445, column: 6)
!4843 = !DILocation(line: 1445, column: 6, scope: !4815)
!4844 = !DILocation(line: 1446, column: 27, scope: !4845)
!4845 = distinct !DILexicalBlock(scope: !4842, file: !3, line: 1445, column: 34)
!4846 = !DILocation(line: 1446, column: 8, scope: !4845)
!4847 = !DILocation(line: 1446, column: 6, scope: !4845)
!4848 = !DILocation(line: 1447, column: 2, scope: !4845)
!4849 = !DILocation(line: 1449, column: 11, scope: !4850)
!4850 = distinct !DILexicalBlock(scope: !4842, file: !3, line: 1449, column: 11)
!4851 = !DILocation(line: 1449, column: 42, scope: !4850)
!4852 = !DILocation(line: 1450, column: 11, scope: !4850)
!4853 = !DILocation(line: 1450, column: 42, scope: !4850)
!4854 = !DILocation(line: 1451, column: 11, scope: !4850)
!4855 = !DILocation(line: 1451, column: 41, scope: !4850)
!4856 = !DILocation(line: 1452, column: 11, scope: !4850)
!4857 = !DILocation(line: 1449, column: 11, scope: !4842)
!4858 = !DILocation(line: 1454, column: 27, scope: !4859)
!4859 = distinct !DILexicalBlock(scope: !4850, file: !3, line: 1453, column: 2)
!4860 = !DILocation(line: 1454, column: 8, scope: !4859)
!4861 = !DILocation(line: 1454, column: 6, scope: !4859)
!4862 = !DILocation(line: 1455, column: 2, scope: !4859)
!4863 = !DILocation(line: 1457, column: 11, scope: !4864)
!4864 = distinct !DILexicalBlock(scope: !4850, file: !3, line: 1457, column: 11)
!4865 = !DILocation(line: 1457, column: 11, scope: !4850)
!4866 = !DILocation(line: 1458, column: 27, scope: !4867)
!4867 = distinct !DILexicalBlock(scope: !4864, file: !3, line: 1457, column: 44)
!4868 = !DILocation(line: 1458, column: 8, scope: !4867)
!4869 = !DILocation(line: 1458, column: 6, scope: !4867)
!4870 = !DILocation(line: 1459, column: 2, scope: !4867)
!4871 = !DILocation(line: 1461, column: 11, scope: !4872)
!4872 = distinct !DILexicalBlock(scope: !4864, file: !3, line: 1461, column: 11)
!4873 = !DILocation(line: 1461, column: 11, scope: !4864)
!4874 = !DILocation(line: 1462, column: 27, scope: !4875)
!4875 = distinct !DILexicalBlock(scope: !4872, file: !3, line: 1461, column: 43)
!4876 = !DILocation(line: 1462, column: 8, scope: !4875)
!4877 = !DILocation(line: 1462, column: 6, scope: !4875)
!4878 = !DILocation(line: 1463, column: 2, scope: !4875)
!4879 = !DILocation(line: 1465, column: 11, scope: !4880)
!4880 = distinct !DILexicalBlock(scope: !4872, file: !3, line: 1465, column: 11)
!4881 = !DILocation(line: 1465, column: 40, scope: !4880)
!4882 = !DILocation(line: 1466, column: 11, scope: !4880)
!4883 = !DILocation(line: 1465, column: 11, scope: !4872)
!4884 = !DILocation(line: 1468, column: 27, scope: !4885)
!4885 = distinct !DILexicalBlock(scope: !4880, file: !3, line: 1467, column: 2)
!4886 = !DILocation(line: 1468, column: 8, scope: !4885)
!4887 = !DILocation(line: 1468, column: 6, scope: !4885)
!4888 = !DILocation(line: 1469, column: 2, scope: !4885)
!4889 = !DILocation(line: 1473, column: 11, scope: !4890)
!4890 = distinct !DILexicalBlock(scope: !4880, file: !3, line: 1473, column: 11)
!4891 = !DILocation(line: 1473, column: 11, scope: !4880)
!4892 = !DILocation(line: 1474, column: 27, scope: !4893)
!4893 = distinct !DILexicalBlock(scope: !4890, file: !3, line: 1473, column: 43)
!4894 = !DILocation(line: 1474, column: 41, scope: !4893)
!4895 = !DILocation(line: 1474, column: 45, scope: !4893)
!4896 = !DILocation(line: 1474, column: 8, scope: !4893)
!4897 = !DILocation(line: 1474, column: 6, scope: !4893)
!4898 = !DILocation(line: 1475, column: 2, scope: !4893)
!4899 = !DILocation(line: 1476, column: 11, scope: !4900)
!4900 = distinct !DILexicalBlock(scope: !4890, file: !3, line: 1476, column: 11)
!4901 = !DILocation(line: 1476, column: 11, scope: !4890)
!4902 = !DILocation(line: 1478, column: 7, scope: !4903)
!4903 = distinct !DILexicalBlock(scope: !4904, file: !3, line: 1478, column: 7)
!4904 = distinct !DILexicalBlock(scope: !4900, file: !3, line: 1476, column: 43)
!4905 = !DILocation(line: 1478, column: 7, scope: !4904)
!4906 = !DILocation(line: 1479, column: 28, scope: !4903)
!4907 = !DILocation(line: 1479, column: 9, scope: !4903)
!4908 = !DILocation(line: 1479, column: 7, scope: !4903)
!4909 = !DILocation(line: 1479, column: 4, scope: !4903)
!4910 = !DILocation(line: 1481, column: 28, scope: !4903)
!4911 = !DILocation(line: 1481, column: 9, scope: !4903)
!4912 = !DILocation(line: 1481, column: 7, scope: !4903)
!4913 = !DILocation(line: 1482, column: 2, scope: !4904)
!4914 = !DILocation(line: 1484, column: 11, scope: !4915)
!4915 = distinct !DILexicalBlock(scope: !4900, file: !3, line: 1484, column: 11)
!4916 = !DILocation(line: 1484, column: 41, scope: !4915)
!4917 = !DILocation(line: 1485, column: 11, scope: !4915)
!4918 = !DILocation(line: 1485, column: 44, scope: !4915)
!4919 = !DILocation(line: 1486, column: 11, scope: !4915)
!4920 = !DILocation(line: 1486, column: 43, scope: !4915)
!4921 = !DILocation(line: 1487, column: 11, scope: !4915)
!4922 = !DILocation(line: 1484, column: 11, scope: !4900)
!4923 = !DILocation(line: 1489, column: 27, scope: !4924)
!4924 = distinct !DILexicalBlock(scope: !4915, file: !3, line: 1488, column: 2)
!4925 = !DILocation(line: 1489, column: 8, scope: !4924)
!4926 = !DILocation(line: 1489, column: 6, scope: !4924)
!4927 = !DILocation(line: 1490, column: 2, scope: !4924)
!4928 = !DILocation(line: 1493, column: 11, scope: !4929)
!4929 = distinct !DILexicalBlock(scope: !4915, file: !3, line: 1493, column: 11)
!4930 = !DILocation(line: 1493, column: 11, scope: !4915)
!4931 = !DILocation(line: 1494, column: 27, scope: !4932)
!4932 = distinct !DILexicalBlock(scope: !4929, file: !3, line: 1493, column: 41)
!4933 = !DILocation(line: 1494, column: 8, scope: !4932)
!4934 = !DILocation(line: 1494, column: 6, scope: !4932)
!4935 = !DILocation(line: 1497, column: 7, scope: !4936)
!4936 = distinct !DILexicalBlock(scope: !4932, file: !3, line: 1497, column: 7)
!4937 = !DILocation(line: 1497, column: 10, scope: !4936)
!4938 = !DILocation(line: 1497, column: 13, scope: !4936)
!4939 = !DILocation(line: 1497, column: 17, scope: !4936)
!4940 = !DILocation(line: 1497, column: 22, scope: !4936)
!4941 = !DILocation(line: 1497, column: 25, scope: !4936)
!4942 = !DILocation(line: 1497, column: 29, scope: !4936)
!4943 = !DILocation(line: 1497, column: 46, scope: !4936)
!4944 = !DILocation(line: 1497, column: 49, scope: !4936)
!4945 = !DILocation(line: 1497, column: 7, scope: !4932)
!4946 = !DILocation(line: 1498, column: 28, scope: !4947)
!4947 = distinct !DILexicalBlock(scope: !4936, file: !3, line: 1497, column: 55)
!4948 = !DILocation(line: 1498, column: 9, scope: !4947)
!4949 = !DILocation(line: 1498, column: 7, scope: !4947)
!4950 = !DILocation(line: 1499, column: 3, scope: !4947)
!4951 = !DILocation(line: 1500, column: 2, scope: !4932)
!4952 = !DILocation(line: 1501, column: 11, scope: !4953)
!4953 = distinct !DILexicalBlock(scope: !4929, file: !3, line: 1501, column: 11)
!4954 = !DILocation(line: 1501, column: 41, scope: !4953)
!4955 = !DILocation(line: 1502, column: 11, scope: !4953)
!4956 = !DILocation(line: 1501, column: 11, scope: !4929)
!4957 = !DILocation(line: 1504, column: 27, scope: !4958)
!4958 = distinct !DILexicalBlock(scope: !4953, file: !3, line: 1503, column: 2)
!4959 = !DILocation(line: 1504, column: 8, scope: !4958)
!4960 = !DILocation(line: 1504, column: 6, scope: !4958)
!4961 = !DILocation(line: 1507, column: 7, scope: !4962)
!4962 = distinct !DILexicalBlock(scope: !4958, file: !3, line: 1507, column: 7)
!4963 = !DILocation(line: 1507, column: 10, scope: !4962)
!4964 = !DILocation(line: 1507, column: 13, scope: !4962)
!4965 = !DILocation(line: 1507, column: 17, scope: !4962)
!4966 = !DILocation(line: 1507, column: 22, scope: !4962)
!4967 = !DILocation(line: 1507, column: 25, scope: !4962)
!4968 = !DILocation(line: 1507, column: 29, scope: !4962)
!4969 = !DILocation(line: 1507, column: 46, scope: !4962)
!4970 = !DILocation(line: 1507, column: 49, scope: !4962)
!4971 = !DILocation(line: 1507, column: 7, scope: !4958)
!4972 = !DILocation(line: 1508, column: 28, scope: !4973)
!4973 = distinct !DILexicalBlock(scope: !4962, file: !3, line: 1507, column: 55)
!4974 = !DILocation(line: 1508, column: 9, scope: !4973)
!4975 = !DILocation(line: 1508, column: 7, scope: !4973)
!4976 = !DILocation(line: 1509, column: 3, scope: !4973)
!4977 = !DILocation(line: 1510, column: 2, scope: !4958)
!4978 = !DILocation(line: 1511, column: 11, scope: !4979)
!4979 = distinct !DILexicalBlock(scope: !4953, file: !3, line: 1511, column: 11)
!4980 = !DILocation(line: 1511, column: 44, scope: !4979)
!4981 = !DILocation(line: 1512, column: 11, scope: !4979)
!4982 = !DILocation(line: 1511, column: 11, scope: !4953)
!4983 = !DILocation(line: 1514, column: 27, scope: !4984)
!4984 = distinct !DILexicalBlock(scope: !4979, file: !3, line: 1513, column: 2)
!4985 = !DILocation(line: 1514, column: 8, scope: !4984)
!4986 = !DILocation(line: 1514, column: 6, scope: !4984)
!4987 = !DILocation(line: 1515, column: 2, scope: !4984)
!4988 = !DILocation(line: 1516, column: 11, scope: !4989)
!4989 = distinct !DILexicalBlock(scope: !4979, file: !3, line: 1516, column: 11)
!4990 = !DILocation(line: 1516, column: 40, scope: !4989)
!4991 = !DILocation(line: 1517, column: 11, scope: !4989)
!4992 = !DILocation(line: 1516, column: 11, scope: !4979)
!4993 = !DILocation(line: 1519, column: 27, scope: !4994)
!4994 = distinct !DILexicalBlock(scope: !4989, file: !3, line: 1518, column: 2)
!4995 = !DILocation(line: 1519, column: 8, scope: !4994)
!4996 = !DILocation(line: 1519, column: 6, scope: !4994)
!4997 = !DILocation(line: 1520, column: 2, scope: !4994)
!4998 = !DILocation(line: 1521, column: 11, scope: !4999)
!4999 = distinct !DILexicalBlock(scope: !4989, file: !3, line: 1521, column: 11)
!5000 = !DILocation(line: 1521, column: 11, scope: !4989)
!5001 = !DILocation(line: 1522, column: 30, scope: !5002)
!5002 = distinct !DILexicalBlock(scope: !4999, file: !3, line: 1521, column: 43)
!5003 = !DILocation(line: 1522, column: 11, scope: !5002)
!5004 = !DILocation(line: 1522, column: 3, scope: !5002)
!5005 = !DILocation(line: 1524, column: 29, scope: !5006)
!5006 = distinct !DILexicalBlock(scope: !5002, file: !3, line: 1522, column: 34)
!5007 = !DILocation(line: 1524, column: 10, scope: !5006)
!5008 = !DILocation(line: 1524, column: 8, scope: !5006)
!5009 = !DILocation(line: 1525, column: 5, scope: !5006)
!5010 = !DILocation(line: 1527, column: 29, scope: !5006)
!5011 = !DILocation(line: 1527, column: 10, scope: !5006)
!5012 = !DILocation(line: 1527, column: 8, scope: !5006)
!5013 = !DILocation(line: 1528, column: 5, scope: !5006)
!5014 = !DILocation(line: 1530, column: 2, scope: !5002)
!5015 = !DILocation(line: 1531, column: 11, scope: !5016)
!5016 = distinct !DILexicalBlock(scope: !4999, file: !3, line: 1531, column: 11)
!5017 = !DILocation(line: 1531, column: 11, scope: !4999)
!5018 = !DILocation(line: 1532, column: 27, scope: !5019)
!5019 = distinct !DILexicalBlock(scope: !5016, file: !3, line: 1531, column: 42)
!5020 = !DILocation(line: 1532, column: 8, scope: !5019)
!5021 = !DILocation(line: 1532, column: 6, scope: !5019)
!5022 = !DILocation(line: 1535, column: 7, scope: !5023)
!5023 = distinct !DILexicalBlock(scope: !5019, file: !3, line: 1535, column: 7)
!5024 = !DILocation(line: 1535, column: 10, scope: !5023)
!5025 = !DILocation(line: 1535, column: 13, scope: !5023)
!5026 = !DILocation(line: 1535, column: 17, scope: !5023)
!5027 = !DILocation(line: 1535, column: 22, scope: !5023)
!5028 = !DILocation(line: 1535, column: 25, scope: !5023)
!5029 = !DILocation(line: 1535, column: 29, scope: !5023)
!5030 = !DILocation(line: 1535, column: 46, scope: !5023)
!5031 = !DILocation(line: 1535, column: 49, scope: !5023)
!5032 = !DILocation(line: 1535, column: 7, scope: !5019)
!5033 = !DILocation(line: 1536, column: 28, scope: !5034)
!5034 = distinct !DILexicalBlock(scope: !5023, file: !3, line: 1535, column: 55)
!5035 = !DILocation(line: 1536, column: 9, scope: !5034)
!5036 = !DILocation(line: 1536, column: 7, scope: !5034)
!5037 = !DILocation(line: 1537, column: 3, scope: !5034)
!5038 = !DILocation(line: 1538, column: 2, scope: !5019)
!5039 = !DILocation(line: 1539, column: 11, scope: !5040)
!5040 = distinct !DILexicalBlock(scope: !5016, file: !3, line: 1539, column: 11)
!5041 = !DILocation(line: 1539, column: 11, scope: !5016)
!5042 = !DILocation(line: 1540, column: 27, scope: !5043)
!5043 = distinct !DILexicalBlock(scope: !5040, file: !3, line: 1539, column: 44)
!5044 = !DILocation(line: 1540, column: 8, scope: !5043)
!5045 = !DILocation(line: 1540, column: 6, scope: !5043)
!5046 = !DILocation(line: 1541, column: 2, scope: !5043)
!5047 = !DILocation(line: 1542, column: 11, scope: !5048)
!5048 = distinct !DILexicalBlock(scope: !5040, file: !3, line: 1542, column: 11)
!5049 = !DILocation(line: 1542, column: 11, scope: !5040)
!5050 = !DILocation(line: 1543, column: 27, scope: !5051)
!5051 = distinct !DILexicalBlock(scope: !5048, file: !3, line: 1542, column: 45)
!5052 = !DILocation(line: 1543, column: 8, scope: !5051)
!5053 = !DILocation(line: 1543, column: 6, scope: !5051)
!5054 = !DILocation(line: 1544, column: 2, scope: !5051)
!5055 = !DILocation(line: 1545, column: 11, scope: !5056)
!5056 = distinct !DILexicalBlock(scope: !5048, file: !3, line: 1545, column: 11)
!5057 = !DILocation(line: 1545, column: 11, scope: !5048)
!5058 = !DILocation(line: 1546, column: 27, scope: !5059)
!5059 = distinct !DILexicalBlock(scope: !5056, file: !3, line: 1545, column: 41)
!5060 = !DILocation(line: 1546, column: 8, scope: !5059)
!5061 = !DILocation(line: 1546, column: 6, scope: !5059)
!5062 = !DILocation(line: 1547, column: 2, scope: !5059)
!5063 = !DILocation(line: 1549, column: 11, scope: !5064)
!5064 = distinct !DILexicalBlock(scope: !5056, file: !3, line: 1549, column: 11)
!5065 = !DILocation(line: 1549, column: 11, scope: !5056)
!5066 = !DILocation(line: 1550, column: 27, scope: !5067)
!5067 = distinct !DILexicalBlock(scope: !5064, file: !3, line: 1549, column: 54)
!5068 = !DILocation(line: 1550, column: 8, scope: !5067)
!5069 = !DILocation(line: 1550, column: 6, scope: !5067)
!5070 = !DILocation(line: 1551, column: 2, scope: !5067)
!5071 = !DILocation(line: 1552, column: 11, scope: !5072)
!5072 = distinct !DILexicalBlock(scope: !5064, file: !3, line: 1552, column: 11)
!5073 = !DILocation(line: 1552, column: 11, scope: !5064)
!5074 = !DILocation(line: 1554, column: 30, scope: !5075)
!5075 = distinct !DILexicalBlock(scope: !5072, file: !3, line: 1552, column: 42)
!5076 = !DILocation(line: 1554, column: 11, scope: !5075)
!5077 = !DILocation(line: 1554, column: 3, scope: !5075)
!5078 = !DILocation(line: 1556, column: 29, scope: !5079)
!5079 = distinct !DILexicalBlock(scope: !5075, file: !3, line: 1554, column: 34)
!5080 = !DILocation(line: 1556, column: 10, scope: !5079)
!5081 = !DILocation(line: 1556, column: 8, scope: !5079)
!5082 = !DILocation(line: 1557, column: 5, scope: !5079)
!5083 = !DILocation(line: 1559, column: 29, scope: !5079)
!5084 = !DILocation(line: 1559, column: 10, scope: !5079)
!5085 = !DILocation(line: 1559, column: 8, scope: !5079)
!5086 = !DILocation(line: 1560, column: 5, scope: !5079)
!5087 = !DILocation(line: 1562, column: 29, scope: !5079)
!5088 = !DILocation(line: 1562, column: 10, scope: !5079)
!5089 = !DILocation(line: 1562, column: 8, scope: !5079)
!5090 = !DILocation(line: 1563, column: 5, scope: !5079)
!5091 = !DILocation(line: 1565, column: 2, scope: !5075)
!5092 = !DILocation(line: 1567, column: 11, scope: !5093)
!5093 = distinct !DILexicalBlock(scope: !5072, file: !3, line: 1567, column: 11)
!5094 = !DILocation(line: 1567, column: 11, scope: !5072)
!5095 = !DILocation(line: 1568, column: 27, scope: !5096)
!5096 = distinct !DILexicalBlock(scope: !5093, file: !3, line: 1567, column: 41)
!5097 = !DILocation(line: 1568, column: 42, scope: !5096)
!5098 = !DILocation(line: 1568, column: 46, scope: !5096)
!5099 = !DILocation(line: 1568, column: 8, scope: !5096)
!5100 = !DILocation(line: 1568, column: 6, scope: !5096)
!5101 = !DILocation(line: 1569, column: 2, scope: !5096)
!5102 = !DILocation(line: 1571, column: 11, scope: !5103)
!5103 = distinct !DILexicalBlock(scope: !5093, file: !3, line: 1571, column: 11)
!5104 = !DILocation(line: 1571, column: 11, scope: !5093)
!5105 = !DILocation(line: 1572, column: 27, scope: !5106)
!5106 = distinct !DILexicalBlock(scope: !5103, file: !3, line: 1571, column: 42)
!5107 = !DILocation(line: 1572, column: 39, scope: !5106)
!5108 = !DILocation(line: 1572, column: 43, scope: !5106)
!5109 = !DILocation(line: 1572, column: 8, scope: !5106)
!5110 = !DILocation(line: 1572, column: 6, scope: !5106)
!5111 = !DILocation(line: 1573, column: 2, scope: !5106)
!5112 = !DILocation(line: 1575, column: 11, scope: !5113)
!5113 = distinct !DILexicalBlock(scope: !5103, file: !3, line: 1575, column: 11)
!5114 = !DILocation(line: 1575, column: 11, scope: !5103)
!5115 = !DILocation(line: 1576, column: 27, scope: !5116)
!5116 = distinct !DILexicalBlock(scope: !5113, file: !3, line: 1575, column: 41)
!5117 = !DILocation(line: 1576, column: 38, scope: !5116)
!5118 = !DILocation(line: 1576, column: 42, scope: !5116)
!5119 = !DILocation(line: 1576, column: 8, scope: !5116)
!5120 = !DILocation(line: 1576, column: 6, scope: !5116)
!5121 = !DILocation(line: 1577, column: 2, scope: !5116)
!5122 = !DILocation(line: 1578, column: 11, scope: !5123)
!5123 = distinct !DILexicalBlock(scope: !5113, file: !3, line: 1578, column: 11)
!5124 = !DILocation(line: 1578, column: 11, scope: !5113)
!5125 = !DILocation(line: 1579, column: 27, scope: !5126)
!5126 = distinct !DILexicalBlock(scope: !5123, file: !3, line: 1578, column: 41)
!5127 = !DILocation(line: 1579, column: 8, scope: !5126)
!5128 = !DILocation(line: 1579, column: 6, scope: !5126)
!5129 = !DILocation(line: 1580, column: 2, scope: !5126)
!5130 = !DILocation(line: 1582, column: 11, scope: !5131)
!5131 = distinct !DILexicalBlock(scope: !5123, file: !3, line: 1582, column: 11)
!5132 = !DILocation(line: 1582, column: 11, scope: !5123)
!5133 = !DILocation(line: 1583, column: 27, scope: !5134)
!5134 = distinct !DILexicalBlock(scope: !5131, file: !3, line: 1582, column: 39)
!5135 = !DILocation(line: 1583, column: 43, scope: !5134)
!5136 = !DILocation(line: 1583, column: 47, scope: !5134)
!5137 = !DILocation(line: 1583, column: 8, scope: !5134)
!5138 = !DILocation(line: 1583, column: 6, scope: !5134)
!5139 = !DILocation(line: 1584, column: 2, scope: !5134)
!5140 = !DILocation(line: 1586, column: 11, scope: !5141)
!5141 = distinct !DILexicalBlock(scope: !5131, file: !3, line: 1586, column: 11)
!5142 = !DILocation(line: 1586, column: 11, scope: !5131)
!5143 = !DILocation(line: 1587, column: 27, scope: !5144)
!5144 = distinct !DILexicalBlock(scope: !5141, file: !3, line: 1586, column: 41)
!5145 = !DILocation(line: 1587, column: 45, scope: !5144)
!5146 = !DILocation(line: 1587, column: 49, scope: !5144)
!5147 = !DILocation(line: 1587, column: 8, scope: !5144)
!5148 = !DILocation(line: 1587, column: 6, scope: !5144)
!5149 = !DILocation(line: 1588, column: 2, scope: !5144)
!5150 = !DILocation(line: 1590, column: 11, scope: !5151)
!5151 = distinct !DILexicalBlock(scope: !5141, file: !3, line: 1590, column: 11)
!5152 = !DILocation(line: 1590, column: 11, scope: !5141)
!5153 = !DILocation(line: 1591, column: 27, scope: !5154)
!5154 = distinct !DILexicalBlock(scope: !5151, file: !3, line: 1590, column: 50)
!5155 = !DILocation(line: 1591, column: 52, scope: !5154)
!5156 = !DILocation(line: 1591, column: 56, scope: !5154)
!5157 = !DILocation(line: 1591, column: 8, scope: !5154)
!5158 = !DILocation(line: 1591, column: 6, scope: !5154)
!5159 = !DILocation(line: 1592, column: 2, scope: !5154)
!5160 = !DILocation(line: 1594, column: 11, scope: !5161)
!5161 = distinct !DILexicalBlock(scope: !5151, file: !3, line: 1594, column: 11)
!5162 = !DILocation(line: 1594, column: 11, scope: !5151)
!5163 = !DILocation(line: 1595, column: 27, scope: !5164)
!5164 = distinct !DILexicalBlock(scope: !5161, file: !3, line: 1594, column: 41)
!5165 = !DILocation(line: 1595, column: 8, scope: !5164)
!5166 = !DILocation(line: 1595, column: 6, scope: !5164)
!5167 = !DILocation(line: 1596, column: 2, scope: !5164)
!5168 = !DILocation(line: 1598, column: 11, scope: !5169)
!5169 = distinct !DILexicalBlock(scope: !5161, file: !3, line: 1598, column: 11)
!5170 = !DILocation(line: 1598, column: 11, scope: !5161)
!5171 = !DILocation(line: 1599, column: 27, scope: !5172)
!5172 = distinct !DILexicalBlock(scope: !5169, file: !3, line: 1598, column: 42)
!5173 = !DILocation(line: 1599, column: 46, scope: !5172)
!5174 = !DILocation(line: 1599, column: 50, scope: !5172)
!5175 = !DILocation(line: 1599, column: 8, scope: !5172)
!5176 = !DILocation(line: 1599, column: 6, scope: !5172)
!5177 = !DILocation(line: 1600, column: 2, scope: !5172)
!5178 = !DILocation(line: 1602, column: 11, scope: !5179)
!5179 = distinct !DILexicalBlock(scope: !5169, file: !3, line: 1602, column: 11)
!5180 = !DILocation(line: 1602, column: 11, scope: !5169)
!5181 = !DILocation(line: 1603, column: 27, scope: !5182)
!5182 = distinct !DILexicalBlock(scope: !5179, file: !3, line: 1602, column: 43)
!5183 = !DILocation(line: 1603, column: 43, scope: !5182)
!5184 = !DILocation(line: 1603, column: 47, scope: !5182)
!5185 = !DILocation(line: 1603, column: 8, scope: !5182)
!5186 = !DILocation(line: 1603, column: 6, scope: !5182)
!5187 = !DILocation(line: 1604, column: 2, scope: !5182)
!5188 = !DILocation(line: 1606, column: 11, scope: !5189)
!5189 = distinct !DILexicalBlock(scope: !5179, file: !3, line: 1606, column: 11)
!5190 = !DILocation(line: 1606, column: 11, scope: !5179)
!5191 = !DILocation(line: 1607, column: 27, scope: !5192)
!5192 = distinct !DILexicalBlock(scope: !5189, file: !3, line: 1606, column: 40)
!5193 = !DILocation(line: 1607, column: 44, scope: !5192)
!5194 = !DILocation(line: 1607, column: 48, scope: !5192)
!5195 = !DILocation(line: 1607, column: 8, scope: !5192)
!5196 = !DILocation(line: 1607, column: 6, scope: !5192)
!5197 = !DILocation(line: 1608, column: 2, scope: !5192)
!5198 = !DILocation(line: 1610, column: 11, scope: !5199)
!5199 = distinct !DILexicalBlock(scope: !5189, file: !3, line: 1610, column: 11)
!5200 = !DILocation(line: 1610, column: 11, scope: !5189)
!5201 = !DILocation(line: 1611, column: 27, scope: !5202)
!5202 = distinct !DILexicalBlock(scope: !5199, file: !3, line: 1610, column: 43)
!5203 = !DILocation(line: 1611, column: 40, scope: !5202)
!5204 = !DILocation(line: 1611, column: 44, scope: !5202)
!5205 = !DILocation(line: 1611, column: 8, scope: !5202)
!5206 = !DILocation(line: 1611, column: 6, scope: !5202)
!5207 = !DILocation(line: 1612, column: 2, scope: !5202)
!5208 = !DILocation(line: 1614, column: 11, scope: !5209)
!5209 = distinct !DILexicalBlock(scope: !5199, file: !3, line: 1614, column: 11)
!5210 = !DILocation(line: 1614, column: 11, scope: !5199)
!5211 = !DILocation(line: 1615, column: 27, scope: !5212)
!5212 = distinct !DILexicalBlock(scope: !5209, file: !3, line: 1614, column: 41)
!5213 = !DILocation(line: 1615, column: 38, scope: !5212)
!5214 = !DILocation(line: 1615, column: 42, scope: !5212)
!5215 = !DILocation(line: 1615, column: 8, scope: !5212)
!5216 = !DILocation(line: 1615, column: 6, scope: !5212)
!5217 = !DILocation(line: 1616, column: 2, scope: !5212)
!5218 = !DILocation(line: 1618, column: 11, scope: !5219)
!5219 = distinct !DILexicalBlock(scope: !5209, file: !3, line: 1618, column: 11)
!5220 = !DILocation(line: 1618, column: 11, scope: !5209)
!5221 = !DILocation(line: 1619, column: 27, scope: !5222)
!5222 = distinct !DILexicalBlock(scope: !5219, file: !3, line: 1618, column: 46)
!5223 = !DILocation(line: 1619, column: 43, scope: !5222)
!5224 = !DILocation(line: 1619, column: 47, scope: !5222)
!5225 = !DILocation(line: 1619, column: 8, scope: !5222)
!5226 = !DILocation(line: 1619, column: 6, scope: !5222)
!5227 = !DILocation(line: 1620, column: 2, scope: !5222)
!5228 = !DILocation(line: 1622, column: 11, scope: !5229)
!5229 = distinct !DILexicalBlock(scope: !5219, file: !3, line: 1622, column: 11)
!5230 = !DILocation(line: 1622, column: 11, scope: !5219)
!5231 = !DILocation(line: 1623, column: 27, scope: !5232)
!5232 = distinct !DILexicalBlock(scope: !5229, file: !3, line: 1622, column: 44)
!5233 = !DILocation(line: 1623, column: 41, scope: !5232)
!5234 = !DILocation(line: 1623, column: 45, scope: !5232)
!5235 = !DILocation(line: 1623, column: 8, scope: !5232)
!5236 = !DILocation(line: 1623, column: 6, scope: !5232)
!5237 = !DILocation(line: 1624, column: 2, scope: !5232)
!5238 = !DILocation(line: 1626, column: 11, scope: !5239)
!5239 = distinct !DILexicalBlock(scope: !5229, file: !3, line: 1626, column: 11)
!5240 = !DILocation(line: 1626, column: 11, scope: !5229)
!5241 = !DILocation(line: 1627, column: 27, scope: !5242)
!5242 = distinct !DILexicalBlock(scope: !5239, file: !3, line: 1626, column: 41)
!5243 = !DILocation(line: 1627, column: 38, scope: !5242)
!5244 = !DILocation(line: 1627, column: 42, scope: !5242)
!5245 = !DILocation(line: 1627, column: 8, scope: !5242)
!5246 = !DILocation(line: 1627, column: 6, scope: !5242)
!5247 = !DILocation(line: 1628, column: 2, scope: !5242)
!5248 = !DILocation(line: 1630, column: 11, scope: !5249)
!5249 = distinct !DILexicalBlock(scope: !5239, file: !3, line: 1630, column: 11)
!5250 = !DILocation(line: 1630, column: 11, scope: !5239)
!5251 = !DILocation(line: 1631, column: 27, scope: !5252)
!5252 = distinct !DILexicalBlock(scope: !5249, file: !3, line: 1630, column: 41)
!5253 = !DILocation(line: 1631, column: 46, scope: !5252)
!5254 = !DILocation(line: 1631, column: 50, scope: !5252)
!5255 = !DILocation(line: 1631, column: 8, scope: !5252)
!5256 = !DILocation(line: 1631, column: 6, scope: !5252)
!5257 = !DILocation(line: 1632, column: 2, scope: !5252)
!5258 = !DILocation(line: 1634, column: 11, scope: !5259)
!5259 = distinct !DILexicalBlock(scope: !5249, file: !3, line: 1634, column: 11)
!5260 = !DILocation(line: 1634, column: 11, scope: !5249)
!5261 = !DILocation(line: 1635, column: 27, scope: !5262)
!5262 = distinct !DILexicalBlock(scope: !5259, file: !3, line: 1634, column: 42)
!5263 = !DILocation(line: 1635, column: 46, scope: !5262)
!5264 = !DILocation(line: 1635, column: 50, scope: !5262)
!5265 = !DILocation(line: 1635, column: 8, scope: !5262)
!5266 = !DILocation(line: 1635, column: 6, scope: !5262)
!5267 = !DILocation(line: 1636, column: 2, scope: !5262)
!5268 = !DILocation(line: 1638, column: 11, scope: !5269)
!5269 = distinct !DILexicalBlock(scope: !5259, file: !3, line: 1638, column: 11)
!5270 = !DILocation(line: 1638, column: 11, scope: !5259)
!5271 = !DILocation(line: 1639, column: 27, scope: !5272)
!5272 = distinct !DILexicalBlock(scope: !5269, file: !3, line: 1638, column: 45)
!5273 = !DILocation(line: 1639, column: 42, scope: !5272)
!5274 = !DILocation(line: 1639, column: 46, scope: !5272)
!5275 = !DILocation(line: 1639, column: 8, scope: !5272)
!5276 = !DILocation(line: 1639, column: 6, scope: !5272)
!5277 = !DILocation(line: 1640, column: 2, scope: !5272)
!5278 = !DILocation(line: 1642, column: 11, scope: !5279)
!5279 = distinct !DILexicalBlock(scope: !5269, file: !3, line: 1642, column: 11)
!5280 = !DILocation(line: 1642, column: 11, scope: !5269)
!5281 = !DILocation(line: 1644, column: 11, scope: !5282)
!5282 = distinct !DILexicalBlock(scope: !5279, file: !3, line: 1642, column: 46)
!5283 = !DILocation(line: 1644, column: 15, scope: !5282)
!5284 = !DILocation(line: 1644, column: 3, scope: !5282)
!5285 = !DILocation(line: 1646, column: 29, scope: !5286)
!5286 = distinct !DILexicalBlock(scope: !5282, file: !3, line: 1644, column: 26)
!5287 = !DILocation(line: 1646, column: 43, scope: !5286)
!5288 = !DILocation(line: 1646, column: 47, scope: !5286)
!5289 = !DILocation(line: 1646, column: 10, scope: !5286)
!5290 = !DILocation(line: 1646, column: 8, scope: !5286)
!5291 = !DILocation(line: 1647, column: 5, scope: !5286)
!5292 = !DILocation(line: 1649, column: 29, scope: !5286)
!5293 = !DILocation(line: 1649, column: 48, scope: !5286)
!5294 = !DILocation(line: 1649, column: 52, scope: !5286)
!5295 = !DILocation(line: 1649, column: 10, scope: !5286)
!5296 = !DILocation(line: 1649, column: 8, scope: !5286)
!5297 = !DILocation(line: 1650, column: 5, scope: !5286)
!5298 = !DILocation(line: 1652, column: 29, scope: !5286)
!5299 = !DILocation(line: 1652, column: 45, scope: !5286)
!5300 = !DILocation(line: 1652, column: 49, scope: !5286)
!5301 = !DILocation(line: 1652, column: 10, scope: !5286)
!5302 = !DILocation(line: 1652, column: 8, scope: !5286)
!5303 = !DILocation(line: 1653, column: 5, scope: !5286)
!5304 = !DILocation(line: 1655, column: 29, scope: !5286)
!5305 = !DILocation(line: 1655, column: 46, scope: !5286)
!5306 = !DILocation(line: 1655, column: 50, scope: !5286)
!5307 = !DILocation(line: 1655, column: 10, scope: !5286)
!5308 = !DILocation(line: 1655, column: 8, scope: !5286)
!5309 = !DILocation(line: 1656, column: 5, scope: !5286)
!5310 = !DILocation(line: 1658, column: 29, scope: !5286)
!5311 = !DILocation(line: 1658, column: 45, scope: !5286)
!5312 = !DILocation(line: 1658, column: 49, scope: !5286)
!5313 = !DILocation(line: 1658, column: 10, scope: !5286)
!5314 = !DILocation(line: 1658, column: 8, scope: !5286)
!5315 = !DILocation(line: 1659, column: 5, scope: !5286)
!5316 = !DILocation(line: 1661, column: 29, scope: !5286)
!5317 = !DILocation(line: 1661, column: 47, scope: !5286)
!5318 = !DILocation(line: 1661, column: 51, scope: !5286)
!5319 = !DILocation(line: 1661, column: 10, scope: !5286)
!5320 = !DILocation(line: 1661, column: 8, scope: !5286)
!5321 = !DILocation(line: 1662, column: 5, scope: !5286)
!5322 = !DILocation(line: 1664, column: 29, scope: !5286)
!5323 = !DILocation(line: 1664, column: 45, scope: !5286)
!5324 = !DILocation(line: 1664, column: 49, scope: !5286)
!5325 = !DILocation(line: 1664, column: 10, scope: !5286)
!5326 = !DILocation(line: 1664, column: 8, scope: !5286)
!5327 = !DILocation(line: 1665, column: 5, scope: !5286)
!5328 = !DILocation(line: 1667, column: 2, scope: !5282)
!5329 = !DILocation(line: 1669, column: 9, scope: !4815)
!5330 = !DILocation(line: 1669, column: 2, scope: !4815)
!5331 = distinct !DISubprogram(name: "WM_bool_as_string", scope: !3, file: !3, line: 1672, type: !5332, scopeLine: 1673, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !356)
!5332 = !DISubroutineType(types: !5333)
!5333 = !{!2048, !1360}
!5334 = !DILocalVariable(name: "test", arg: 1, scope: !5331, file: !3, line: 1672, type: !1360)
!5335 = !DILocation(line: 1672, column: 36, scope: !5331)
!5336 = !DILocation(line: 1674, column: 9, scope: !5331)
!5337 = !DILocation(line: 1674, column: 2, scope: !5331)
!5338 = distinct !DISubprogram(name: "wm_keymap_item_find_props", scope: !3, file: !3, line: 995, type: !3649, scopeLine: 998, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !356)
!5339 = !DILocalVariable(name: "C", arg: 1, scope: !5338, file: !3, line: 996, type: !3126)
!5340 = !DILocation(line: 996, column: 25, scope: !5338)
!5341 = !DILocalVariable(name: "opname", arg: 2, scope: !5338, file: !3, line: 996, type: !2048)
!5342 = !DILocation(line: 996, column: 40, scope: !5338)
!5343 = !DILocalVariable(name: "opcontext", arg: 3, scope: !5338, file: !3, line: 996, type: !273)
!5344 = !DILocation(line: 996, column: 52, scope: !5338)
!5345 = !DILocalVariable(name: "properties", arg: 4, scope: !5338, file: !3, line: 997, type: !299)
!5346 = !DILocation(line: 997, column: 21, scope: !5338)
!5347 = !DILocalVariable(name: "is_strict", arg: 5, scope: !5338, file: !3, line: 997, type: !3613)
!5348 = !DILocation(line: 997, column: 44, scope: !5338)
!5349 = !DILocalVariable(name: "is_hotkey", arg: 6, scope: !5338, file: !3, line: 997, type: !3613)
!5350 = !DILocation(line: 997, column: 66, scope: !5338)
!5351 = !DILocalVariable(name: "keymap_r", arg: 7, scope: !5338, file: !3, line: 997, type: !3651)
!5352 = !DILocation(line: 997, column: 88, scope: !5338)
!5353 = !DILocalVariable(name: "win", scope: !5338, file: !3, line: 999, type: !5354)
!5354 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5355, size: 64)
!5355 = !DIDerivedType(tag: DW_TAG_typedef, name: "wmWindow", file: !208, line: 209, baseType: !494)
!5356 = !DILocation(line: 999, column: 12, scope: !5338)
!5357 = !DILocation(line: 999, column: 32, scope: !5338)
!5358 = !DILocation(line: 999, column: 18, scope: !5338)
!5359 = !DILocalVariable(name: "sa", scope: !5338, file: !3, line: 1000, type: !5360)
!5360 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5361, size: 64)
!5361 = !DIDerivedType(tag: DW_TAG_typedef, name: "ScrArea", file: !255, line: 228, baseType: !5362)
!5362 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ScrArea", file: !255, line: 203, size: 1280, elements: !5363)
!5363 = !{!5364, !5366, !5367, !5384, !5385, !5386, !5387, !5390, !5391, !5392, !5393, !5394, !5395, !5396, !5397, !5398, !5399, !5400, !5401, !5468, !5469, !5470, !5471}
!5364 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !5362, file: !255, line: 204, baseType: !5365, size: 64)
!5365 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5362, size: 64)
!5366 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !5362, file: !255, line: 204, baseType: !5365, size: 64, offset: 64)
!5367 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !5362, file: !255, line: 206, baseType: !5368, size: 64, offset: 128)
!5368 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5369, size: 64)
!5369 = !DIDerivedType(tag: DW_TAG_typedef, name: "ScrVert", file: !255, line: 87, baseType: !5370)
!5370 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ScrVert", file: !255, line: 82, size: 256, elements: !5371)
!5371 = !{!5372, !5374, !5375, !5376, !5382, !5383}
!5372 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !5370, file: !255, line: 83, baseType: !5373, size: 64)
!5373 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5370, size: 64)
!5374 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !5370, file: !255, line: 83, baseType: !5373, size: 64, offset: 64)
!5375 = !DIDerivedType(tag: DW_TAG_member, name: "newv", scope: !5370, file: !255, line: 83, baseType: !5373, size: 64, offset: 128)
!5376 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !5370, file: !255, line: 84, baseType: !5377, size: 32, offset: 192)
!5377 = !DIDerivedType(tag: DW_TAG_typedef, name: "vec2s", file: !870, line: 43, baseType: !5378)
!5378 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vec2s", file: !870, line: 41, size: 32, elements: !5379)
!5379 = !{!5380, !5381}
!5380 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !5378, file: !870, line: 42, baseType: !310, size: 16)
!5381 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !5378, file: !870, line: 42, baseType: !310, size: 16, offset: 16)
!5382 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !5370, file: !255, line: 86, baseType: !310, size: 16, offset: 224)
!5383 = !DIDerivedType(tag: DW_TAG_member, name: "editflag", scope: !5370, file: !255, line: 86, baseType: !310, size: 16, offset: 240)
!5384 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !5362, file: !255, line: 206, baseType: !5368, size: 64, offset: 192)
!5385 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !5362, file: !255, line: 206, baseType: !5368, size: 64, offset: 256)
!5386 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !5362, file: !255, line: 206, baseType: !5368, size: 64, offset: 320)
!5387 = !DIDerivedType(tag: DW_TAG_member, name: "full", scope: !5362, file: !255, line: 207, baseType: !5388, size: 64, offset: 384)
!5388 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5389, size: 64)
!5389 = !DIDerivedType(tag: DW_TAG_typedef, name: "bScreen", file: !255, line: 80, baseType: !501)
!5390 = !DIDerivedType(tag: DW_TAG_member, name: "totrct", scope: !5362, file: !255, line: 209, baseType: !1758, size: 128, offset: 448)
!5391 = !DIDerivedType(tag: DW_TAG_member, name: "spacetype", scope: !5362, file: !255, line: 211, baseType: !279, size: 8, offset: 576)
!5392 = !DIDerivedType(tag: DW_TAG_member, name: "butspacetype", scope: !5362, file: !255, line: 211, baseType: !279, size: 8, offset: 584)
!5393 = !DIDerivedType(tag: DW_TAG_member, name: "winx", scope: !5362, file: !255, line: 212, baseType: !310, size: 16, offset: 592)
!5394 = !DIDerivedType(tag: DW_TAG_member, name: "winy", scope: !5362, file: !255, line: 212, baseType: !310, size: 16, offset: 608)
!5395 = !DIDerivedType(tag: DW_TAG_member, name: "headertype", scope: !5362, file: !255, line: 214, baseType: !310, size: 16, offset: 624)
!5396 = !DIDerivedType(tag: DW_TAG_member, name: "do_refresh", scope: !5362, file: !255, line: 215, baseType: !310, size: 16, offset: 640)
!5397 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !5362, file: !255, line: 216, baseType: !310, size: 16, offset: 656)
!5398 = !DIDerivedType(tag: DW_TAG_member, name: "region_active_win", scope: !5362, file: !255, line: 217, baseType: !310, size: 16, offset: 672)
!5399 = !DIDerivedType(tag: DW_TAG_member, name: "temp", scope: !5362, file: !255, line: 219, baseType: !279, size: 8, offset: 688)
!5400 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !5362, file: !255, line: 219, baseType: !279, size: 8, offset: 696)
!5401 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !5362, file: !255, line: 221, baseType: !5402, size: 64, offset: 704)
!5402 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5403, size: 64)
!5403 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SpaceType", file: !5404, line: 66, size: 1728, elements: !5405)
!5404 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_screen.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!5405 = !{!5406, !5407, !5408, !5409, !5410, !5411, !5417, !5421, !5426, !5427, !5444, !5448, !5452, !5454, !5458, !5459, !5465, !5466, !5467}
!5406 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !5403, file: !5404, line: 67, baseType: !5402, size: 64)
!5407 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !5403, file: !5404, line: 67, baseType: !5402, size: 64, offset: 64)
!5408 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !5403, file: !5404, line: 69, baseType: !295, size: 512, offset: 128)
!5409 = !DIDerivedType(tag: DW_TAG_member, name: "spaceid", scope: !5403, file: !5404, line: 70, baseType: !273, size: 32, offset: 640)
!5410 = !DIDerivedType(tag: DW_TAG_member, name: "iconid", scope: !5403, file: !5404, line: 71, baseType: !273, size: 32, offset: 672)
!5411 = !DIDerivedType(tag: DW_TAG_member, name: "new", scope: !5403, file: !5404, line: 74, baseType: !5412, size: 64, offset: 704)
!5412 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5413, size: 64)
!5413 = !DISubroutineType(types: !5414)
!5414 = !{!4831, !5415}
!5415 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5416, size: 64)
!5416 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !277)
!5417 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !5403, file: !5404, line: 76, baseType: !5418, size: 64, offset: 768)
!5418 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5419, size: 64)
!5419 = !DISubroutineType(types: !5420)
!5420 = !{null, !4831}
!5421 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !5403, file: !5404, line: 79, baseType: !5422, size: 64, offset: 832)
!5422 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5423, size: 64)
!5423 = !DISubroutineType(types: !5424)
!5424 = !{null, !5425, !5365}
!5425 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !454, size: 64)
!5426 = !DIDerivedType(tag: DW_TAG_member, name: "exit", scope: !5403, file: !5404, line: 81, baseType: !5422, size: 64, offset: 896)
!5427 = !DIDerivedType(tag: DW_TAG_member, name: "listener", scope: !5403, file: !5404, line: 83, baseType: !5428, size: 64, offset: 960)
!5428 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5429, size: 64)
!5429 = !DISubroutineType(types: !5430)
!5430 = !{null, !500, !5365, !5431}
!5431 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5432, size: 64)
!5432 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmNotifier", file: !240, line: 195, size: 512, elements: !5433)
!5433 = !{!5434, !5435, !5436, !5437, !5438, !5439, !5440, !5441, !5442, !5443}
!5434 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !5432, file: !240, line: 196, baseType: !5431, size: 64)
!5435 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !5432, file: !240, line: 196, baseType: !5431, size: 64, offset: 64)
!5436 = !DIDerivedType(tag: DW_TAG_member, name: "wm", scope: !5432, file: !240, line: 198, baseType: !5425, size: 64, offset: 128)
!5437 = !DIDerivedType(tag: DW_TAG_member, name: "window", scope: !5432, file: !240, line: 199, baseType: !493, size: 64, offset: 192)
!5438 = !DIDerivedType(tag: DW_TAG_member, name: "swinid", scope: !5432, file: !240, line: 201, baseType: !273, size: 32, offset: 256)
!5439 = !DIDerivedType(tag: DW_TAG_member, name: "category", scope: !5432, file: !240, line: 202, baseType: !7, size: 32, offset: 288)
!5440 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !5432, file: !240, line: 202, baseType: !7, size: 32, offset: 320)
!5441 = !DIDerivedType(tag: DW_TAG_member, name: "subtype", scope: !5432, file: !240, line: 202, baseType: !7, size: 32, offset: 352)
!5442 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !5432, file: !240, line: 202, baseType: !7, size: 32, offset: 384)
!5443 = !DIDerivedType(tag: DW_TAG_member, name: "reference", scope: !5432, file: !240, line: 204, baseType: !272, size: 64, offset: 448)
!5444 = !DIDerivedType(tag: DW_TAG_member, name: "refresh", scope: !5403, file: !5404, line: 86, baseType: !5445, size: 64, offset: 1024)
!5445 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5446, size: 64)
!5446 = !DISubroutineType(types: !5447)
!5447 = !{null, !5415, !5365}
!5448 = !DIDerivedType(tag: DW_TAG_member, name: "duplicate", scope: !5403, file: !5404, line: 89, baseType: !5449, size: 64, offset: 1088)
!5449 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5450, size: 64)
!5450 = !DISubroutineType(types: !5451)
!5451 = !{!4831, !4831}
!5452 = !DIDerivedType(tag: DW_TAG_member, name: "operatortypes", scope: !5403, file: !5404, line: 92, baseType: !5453, size: 64, offset: 1152)
!5453 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3927, size: 64)
!5454 = !DIDerivedType(tag: DW_TAG_member, name: "keymap", scope: !5403, file: !5404, line: 94, baseType: !5455, size: 64, offset: 1216)
!5455 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5456, size: 64)
!5456 = !DISubroutineType(types: !5457)
!5457 = !{null, !445}
!5458 = !DIDerivedType(tag: DW_TAG_member, name: "dropboxes", scope: !5403, file: !5404, line: 96, baseType: !5453, size: 64, offset: 1280)
!5459 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !5403, file: !5404, line: 99, baseType: !5460, size: 64, offset: 1344)
!5460 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5461, size: 64)
!5461 = !DISubroutineType(types: !5462)
!5462 = !{!273, !5415, !2048, !5463}
!5463 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5464, size: 64)
!5464 = !DICompositeType(tag: DW_TAG_structure_type, name: "bContextDataResult", file: !276, line: 71, flags: DIFlagFwdDecl)
!5465 = !DIDerivedType(tag: DW_TAG_member, name: "regiontypes", scope: !5403, file: !5404, line: 102, baseType: !319, size: 128, offset: 1408)
!5466 = !DIDerivedType(tag: DW_TAG_member, name: "toolshelf", scope: !5403, file: !5404, line: 105, baseType: !319, size: 128, offset: 1536)
!5467 = !DIDerivedType(tag: DW_TAG_member, name: "keymapflag", scope: !5403, file: !5404, line: 110, baseType: !273, size: 32, offset: 1664)
!5468 = !DIDerivedType(tag: DW_TAG_member, name: "spacedata", scope: !5362, file: !255, line: 223, baseType: !319, size: 128, offset: 768)
!5469 = !DIDerivedType(tag: DW_TAG_member, name: "regionbase", scope: !5362, file: !255, line: 224, baseType: !319, size: 128, offset: 896)
!5470 = !DIDerivedType(tag: DW_TAG_member, name: "handlers", scope: !5362, file: !255, line: 225, baseType: !319, size: 128, offset: 1024)
!5471 = !DIDerivedType(tag: DW_TAG_member, name: "actionzones", scope: !5362, file: !255, line: 227, baseType: !319, size: 128, offset: 1152)
!5472 = !DILocation(line: 1000, column: 11, scope: !5338)
!5473 = !DILocation(line: 1000, column: 28, scope: !5338)
!5474 = !DILocation(line: 1000, column: 16, scope: !5338)
!5475 = !DILocalVariable(name: "ar", scope: !5338, file: !3, line: 1001, type: !5476)
!5476 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5477, size: 64)
!5477 = !DIDerivedType(tag: DW_TAG_typedef, name: "ARegion", file: !255, line: 267, baseType: !5478)
!5478 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ARegion", file: !255, line: 230, size: 3072, elements: !5479)
!5479 = !{!5480, !5482, !5483, !5517, !5518, !5519, !5520, !5521, !5522, !5523, !5524, !5525, !5526, !5527, !5528, !5529, !5530, !5531, !5532, !5533, !5534, !5580, !5581, !5582, !5583, !5584, !5585, !5586, !5587, !5588, !5589}
!5480 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !5478, file: !255, line: 231, baseType: !5481, size: 64)
!5481 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5478, size: 64)
!5482 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !5478, file: !255, line: 231, baseType: !5481, size: 64, offset: 64)
!5483 = !DIDerivedType(tag: DW_TAG_member, name: "v2d", scope: !5478, file: !255, line: 233, baseType: !5484, size: 1280, offset: 128)
!5484 = !DIDerivedType(tag: DW_TAG_typedef, name: "View2D", file: !5485, line: 71, baseType: !5486)
!5485 = !DIFile(filename: "blender/source/blender/makesdna/DNA_view2d_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!5486 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "View2D", file: !5485, line: 40, size: 1280, elements: !5487)
!5487 = !{!5488, !5489, !5490, !5491, !5492, !5493, !5494, !5495, !5496, !5497, !5498, !5499, !5500, !5501, !5502, !5503, !5504, !5505, !5506, !5507, !5508, !5509, !5511, !5512, !5513, !5516}
!5488 = !DIDerivedType(tag: DW_TAG_member, name: "tot", scope: !5486, file: !5485, line: 41, baseType: !869, size: 128)
!5489 = !DIDerivedType(tag: DW_TAG_member, name: "cur", scope: !5486, file: !5485, line: 41, baseType: !869, size: 128, offset: 128)
!5490 = !DIDerivedType(tag: DW_TAG_member, name: "vert", scope: !5486, file: !5485, line: 42, baseType: !1758, size: 128, offset: 256)
!5491 = !DIDerivedType(tag: DW_TAG_member, name: "hor", scope: !5486, file: !5485, line: 42, baseType: !1758, size: 128, offset: 384)
!5492 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !5486, file: !5485, line: 43, baseType: !1758, size: 128, offset: 512)
!5493 = !DIDerivedType(tag: DW_TAG_member, name: "min", scope: !5486, file: !5485, line: 45, baseType: !775, size: 64, offset: 640)
!5494 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !5486, file: !5485, line: 45, baseType: !775, size: 64, offset: 704)
!5495 = !DIDerivedType(tag: DW_TAG_member, name: "minzoom", scope: !5486, file: !5485, line: 46, baseType: !548, size: 32, offset: 768)
!5496 = !DIDerivedType(tag: DW_TAG_member, name: "maxzoom", scope: !5486, file: !5485, line: 46, baseType: !548, size: 32, offset: 800)
!5497 = !DIDerivedType(tag: DW_TAG_member, name: "scroll", scope: !5486, file: !5485, line: 48, baseType: !310, size: 16, offset: 832)
!5498 = !DIDerivedType(tag: DW_TAG_member, name: "scroll_ui", scope: !5486, file: !5485, line: 49, baseType: !310, size: 16, offset: 848)
!5499 = !DIDerivedType(tag: DW_TAG_member, name: "keeptot", scope: !5486, file: !5485, line: 51, baseType: !310, size: 16, offset: 864)
!5500 = !DIDerivedType(tag: DW_TAG_member, name: "keepzoom", scope: !5486, file: !5485, line: 52, baseType: !310, size: 16, offset: 880)
!5501 = !DIDerivedType(tag: DW_TAG_member, name: "keepofs", scope: !5486, file: !5485, line: 53, baseType: !310, size: 16, offset: 896)
!5502 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !5486, file: !5485, line: 55, baseType: !310, size: 16, offset: 912)
!5503 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !5486, file: !5485, line: 56, baseType: !310, size: 16, offset: 928)
!5504 = !DIDerivedType(tag: DW_TAG_member, name: "winx", scope: !5486, file: !5485, line: 58, baseType: !310, size: 16, offset: 944)
!5505 = !DIDerivedType(tag: DW_TAG_member, name: "winy", scope: !5486, file: !5485, line: 58, baseType: !310, size: 16, offset: 960)
!5506 = !DIDerivedType(tag: DW_TAG_member, name: "oldwinx", scope: !5486, file: !5485, line: 59, baseType: !310, size: 16, offset: 976)
!5507 = !DIDerivedType(tag: DW_TAG_member, name: "oldwiny", scope: !5486, file: !5485, line: 59, baseType: !310, size: 16, offset: 992)
!5508 = !DIDerivedType(tag: DW_TAG_member, name: "around", scope: !5486, file: !5485, line: 61, baseType: !310, size: 16, offset: 1008)
!5509 = !DIDerivedType(tag: DW_TAG_member, name: "tab_offset", scope: !5486, file: !5485, line: 63, baseType: !5510, size: 64, offset: 1024)
!5510 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !548, size: 64)
!5511 = !DIDerivedType(tag: DW_TAG_member, name: "tab_num", scope: !5486, file: !5485, line: 64, baseType: !273, size: 32, offset: 1088)
!5512 = !DIDerivedType(tag: DW_TAG_member, name: "tab_cur", scope: !5486, file: !5485, line: 65, baseType: !273, size: 32, offset: 1120)
!5513 = !DIDerivedType(tag: DW_TAG_member, name: "sms", scope: !5486, file: !5485, line: 68, baseType: !5514, size: 64, offset: 1152)
!5514 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5515, size: 64)
!5515 = !DICompositeType(tag: DW_TAG_structure_type, name: "SmoothView2DStore", file: !5485, line: 68, flags: DIFlagFwdDecl)
!5516 = !DIDerivedType(tag: DW_TAG_member, name: "smooth_timer", scope: !5486, file: !5485, line: 69, baseType: !1986, size: 64, offset: 1216)
!5517 = !DIDerivedType(tag: DW_TAG_member, name: "winrct", scope: !5478, file: !255, line: 234, baseType: !1758, size: 128, offset: 1408)
!5518 = !DIDerivedType(tag: DW_TAG_member, name: "drawrct", scope: !5478, file: !255, line: 235, baseType: !1758, size: 128, offset: 1536)
!5519 = !DIDerivedType(tag: DW_TAG_member, name: "winx", scope: !5478, file: !255, line: 236, baseType: !310, size: 16, offset: 1664)
!5520 = !DIDerivedType(tag: DW_TAG_member, name: "winy", scope: !5478, file: !255, line: 236, baseType: !310, size: 16, offset: 1680)
!5521 = !DIDerivedType(tag: DW_TAG_member, name: "swinid", scope: !5478, file: !255, line: 238, baseType: !310, size: 16, offset: 1696)
!5522 = !DIDerivedType(tag: DW_TAG_member, name: "regiontype", scope: !5478, file: !255, line: 239, baseType: !310, size: 16, offset: 1712)
!5523 = !DIDerivedType(tag: DW_TAG_member, name: "alignment", scope: !5478, file: !255, line: 240, baseType: !310, size: 16, offset: 1728)
!5524 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !5478, file: !255, line: 241, baseType: !310, size: 16, offset: 1744)
!5525 = !DIDerivedType(tag: DW_TAG_member, name: "fsize", scope: !5478, file: !255, line: 243, baseType: !548, size: 32, offset: 1760)
!5526 = !DIDerivedType(tag: DW_TAG_member, name: "sizex", scope: !5478, file: !255, line: 244, baseType: !310, size: 16, offset: 1792)
!5527 = !DIDerivedType(tag: DW_TAG_member, name: "sizey", scope: !5478, file: !255, line: 244, baseType: !310, size: 16, offset: 1808)
!5528 = !DIDerivedType(tag: DW_TAG_member, name: "do_draw", scope: !5478, file: !255, line: 246, baseType: !310, size: 16, offset: 1824)
!5529 = !DIDerivedType(tag: DW_TAG_member, name: "do_draw_overlay", scope: !5478, file: !255, line: 247, baseType: !310, size: 16, offset: 1840)
!5530 = !DIDerivedType(tag: DW_TAG_member, name: "swap", scope: !5478, file: !255, line: 248, baseType: !310, size: 16, offset: 1856)
!5531 = !DIDerivedType(tag: DW_TAG_member, name: "overlap", scope: !5478, file: !255, line: 249, baseType: !310, size: 16, offset: 1872)
!5532 = !DIDerivedType(tag: DW_TAG_member, name: "flagfullscreen", scope: !5478, file: !255, line: 250, baseType: !310, size: 16, offset: 1888)
!5533 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !5478, file: !255, line: 251, baseType: !310, size: 16, offset: 1904)
!5534 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !5478, file: !255, line: 253, baseType: !5535, size: 64, offset: 1920)
!5535 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5536, size: 64)
!5536 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ARegionType", file: !5404, line: 116, size: 1472, elements: !5537)
!5537 = !{!5538, !5539, !5540, !5541, !5545, !5546, !5550, !5554, !5558, !5562, !5563, !5564, !5568, !5569, !5570, !5571, !5572, !5573, !5574, !5575, !5576, !5577, !5578, !5579}
!5538 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !5536, file: !5404, line: 117, baseType: !5535, size: 64)
!5539 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !5536, file: !5404, line: 117, baseType: !5535, size: 64, offset: 64)
!5540 = !DIDerivedType(tag: DW_TAG_member, name: "regionid", scope: !5536, file: !5404, line: 119, baseType: !273, size: 32, offset: 128)
!5541 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !5536, file: !5404, line: 122, baseType: !5542, size: 64, offset: 192)
!5542 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5543, size: 64)
!5543 = !DISubroutineType(types: !5544)
!5544 = !{null, !5425, !5481}
!5545 = !DIDerivedType(tag: DW_TAG_member, name: "exit", scope: !5536, file: !5404, line: 124, baseType: !5542, size: 64, offset: 256)
!5546 = !DIDerivedType(tag: DW_TAG_member, name: "draw", scope: !5536, file: !5404, line: 126, baseType: !5547, size: 64, offset: 320)
!5547 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5548, size: 64)
!5548 = !DISubroutineType(types: !5549)
!5549 = !{null, !5415, !5481}
!5550 = !DIDerivedType(tag: DW_TAG_member, name: "listener", scope: !5536, file: !5404, line: 128, baseType: !5551, size: 64, offset: 384)
!5551 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5552, size: 64)
!5552 = !DISubroutineType(types: !5553)
!5553 = !{null, !500, !5365, !5481, !5431}
!5554 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !5536, file: !5404, line: 130, baseType: !5555, size: 64, offset: 448)
!5555 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5556, size: 64)
!5556 = !DISubroutineType(types: !5557)
!5557 = !{null, !5481}
!5558 = !DIDerivedType(tag: DW_TAG_member, name: "duplicate", scope: !5536, file: !5404, line: 133, baseType: !5559, size: 64, offset: 512)
!5559 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5560, size: 64)
!5560 = !DISubroutineType(types: !5561)
!5561 = !{!272, !272}
!5562 = !DIDerivedType(tag: DW_TAG_member, name: "operatortypes", scope: !5536, file: !5404, line: 137, baseType: !5453, size: 64, offset: 576)
!5563 = !DIDerivedType(tag: DW_TAG_member, name: "keymap", scope: !5536, file: !5404, line: 139, baseType: !5455, size: 64, offset: 640)
!5564 = !DIDerivedType(tag: DW_TAG_member, name: "cursor", scope: !5536, file: !5404, line: 141, baseType: !5565, size: 64, offset: 704)
!5565 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5566, size: 64)
!5566 = !DISubroutineType(types: !5567)
!5567 = !{null, !493, !5365, !5481}
!5568 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !5536, file: !5404, line: 144, baseType: !5460, size: 64, offset: 768)
!5569 = !DIDerivedType(tag: DW_TAG_member, name: "drawcalls", scope: !5536, file: !5404, line: 147, baseType: !319, size: 128, offset: 832)
!5570 = !DIDerivedType(tag: DW_TAG_member, name: "paneltypes", scope: !5536, file: !5404, line: 150, baseType: !319, size: 128, offset: 960)
!5571 = !DIDerivedType(tag: DW_TAG_member, name: "headertypes", scope: !5536, file: !5404, line: 153, baseType: !319, size: 128, offset: 1088)
!5572 = !DIDerivedType(tag: DW_TAG_member, name: "minsizex", scope: !5536, file: !5404, line: 156, baseType: !273, size: 32, offset: 1216)
!5573 = !DIDerivedType(tag: DW_TAG_member, name: "minsizey", scope: !5536, file: !5404, line: 156, baseType: !273, size: 32, offset: 1248)
!5574 = !DIDerivedType(tag: DW_TAG_member, name: "prefsizex", scope: !5536, file: !5404, line: 158, baseType: !273, size: 32, offset: 1280)
!5575 = !DIDerivedType(tag: DW_TAG_member, name: "prefsizey", scope: !5536, file: !5404, line: 158, baseType: !273, size: 32, offset: 1312)
!5576 = !DIDerivedType(tag: DW_TAG_member, name: "keymapflag", scope: !5536, file: !5404, line: 160, baseType: !273, size: 32, offset: 1344)
!5577 = !DIDerivedType(tag: DW_TAG_member, name: "do_lock", scope: !5536, file: !5404, line: 162, baseType: !310, size: 16, offset: 1376)
!5578 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !5536, file: !5404, line: 162, baseType: !310, size: 16, offset: 1392)
!5579 = !DIDerivedType(tag: DW_TAG_member, name: "event_cursor", scope: !5536, file: !5404, line: 164, baseType: !310, size: 16, offset: 1408)
!5580 = !DIDerivedType(tag: DW_TAG_member, name: "uiblocks", scope: !5478, file: !255, line: 255, baseType: !319, size: 128, offset: 1984)
!5581 = !DIDerivedType(tag: DW_TAG_member, name: "panels", scope: !5478, file: !255, line: 256, baseType: !319, size: 128, offset: 2112)
!5582 = !DIDerivedType(tag: DW_TAG_member, name: "panels_category_active", scope: !5478, file: !255, line: 257, baseType: !319, size: 128, offset: 2240)
!5583 = !DIDerivedType(tag: DW_TAG_member, name: "ui_lists", scope: !5478, file: !255, line: 258, baseType: !319, size: 128, offset: 2368)
!5584 = !DIDerivedType(tag: DW_TAG_member, name: "ui_previews", scope: !5478, file: !255, line: 259, baseType: !319, size: 128, offset: 2496)
!5585 = !DIDerivedType(tag: DW_TAG_member, name: "handlers", scope: !5478, file: !255, line: 260, baseType: !319, size: 128, offset: 2624)
!5586 = !DIDerivedType(tag: DW_TAG_member, name: "panels_category", scope: !5478, file: !255, line: 261, baseType: !319, size: 128, offset: 2752)
!5587 = !DIDerivedType(tag: DW_TAG_member, name: "regiontimer", scope: !5478, file: !255, line: 263, baseType: !1986, size: 64, offset: 2880)
!5588 = !DIDerivedType(tag: DW_TAG_member, name: "headerstr", scope: !5478, file: !255, line: 265, baseType: !644, size: 64, offset: 2944)
!5589 = !DIDerivedType(tag: DW_TAG_member, name: "regiondata", scope: !5478, file: !255, line: 266, baseType: !272, size: 64, offset: 3008)
!5590 = !DILocation(line: 1001, column: 11, scope: !5338)
!5591 = !DILocation(line: 1001, column: 30, scope: !5338)
!5592 = !DILocation(line: 1001, column: 16, scope: !5338)
!5593 = !DILocalVariable(name: "found", scope: !5338, file: !3, line: 1002, type: !287)
!5594 = !DILocation(line: 1002, column: 16, scope: !5338)
!5595 = !DILocation(line: 1005, column: 6, scope: !5596)
!5596 = distinct !DILexicalBlock(scope: !5338, file: !3, line: 1005, column: 6)
!5597 = !DILocation(line: 1005, column: 6, scope: !5338)
!5598 = !DILocation(line: 1006, column: 40, scope: !5596)
!5599 = !DILocation(line: 1006, column: 44, scope: !5596)
!5600 = !DILocation(line: 1006, column: 49, scope: !5596)
!5601 = !DILocation(line: 1006, column: 59, scope: !5596)
!5602 = !DILocation(line: 1006, column: 67, scope: !5596)
!5603 = !DILocation(line: 1006, column: 78, scope: !5596)
!5604 = !DILocation(line: 1006, column: 90, scope: !5596)
!5605 = !DILocation(line: 1006, column: 101, scope: !5596)
!5606 = !DILocation(line: 1006, column: 112, scope: !5596)
!5607 = !DILocation(line: 1006, column: 11, scope: !5596)
!5608 = !DILocation(line: 1006, column: 9, scope: !5596)
!5609 = !DILocation(line: 1006, column: 3, scope: !5596)
!5610 = !DILocation(line: 1008, column: 6, scope: !5611)
!5611 = distinct !DILexicalBlock(scope: !5338, file: !3, line: 1008, column: 6)
!5612 = !DILocation(line: 1008, column: 9, scope: !5611)
!5613 = !DILocation(line: 1008, column: 12, scope: !5611)
!5614 = !DILocation(line: 1008, column: 18, scope: !5611)
!5615 = !DILocation(line: 1008, column: 6, scope: !5338)
!5616 = !DILocation(line: 1009, column: 40, scope: !5611)
!5617 = !DILocation(line: 1009, column: 44, scope: !5611)
!5618 = !DILocation(line: 1009, column: 48, scope: !5611)
!5619 = !DILocation(line: 1009, column: 58, scope: !5611)
!5620 = !DILocation(line: 1009, column: 66, scope: !5611)
!5621 = !DILocation(line: 1009, column: 77, scope: !5611)
!5622 = !DILocation(line: 1009, column: 89, scope: !5611)
!5623 = !DILocation(line: 1009, column: 100, scope: !5611)
!5624 = !DILocation(line: 1009, column: 111, scope: !5611)
!5625 = !DILocation(line: 1009, column: 11, scope: !5611)
!5626 = !DILocation(line: 1009, column: 9, scope: !5611)
!5627 = !DILocation(line: 1009, column: 3, scope: !5611)
!5628 = !DILocation(line: 1011, column: 6, scope: !5629)
!5629 = distinct !DILexicalBlock(scope: !5338, file: !3, line: 1011, column: 6)
!5630 = !DILocation(line: 1011, column: 12, scope: !5629)
!5631 = !DILocation(line: 1011, column: 6, scope: !5338)
!5632 = !DILocation(line: 1012, column: 7, scope: !5633)
!5633 = distinct !DILexicalBlock(scope: !5634, file: !3, line: 1012, column: 7)
!5634 = distinct !DILexicalBlock(scope: !5629, file: !3, line: 1011, column: 21)
!5635 = !DILocation(line: 1012, column: 7, scope: !5634)
!5636 = !DILocation(line: 1013, column: 8, scope: !5637)
!5637 = distinct !DILexicalBlock(scope: !5638, file: !3, line: 1013, column: 8)
!5638 = distinct !DILexicalBlock(scope: !5633, file: !3, line: 1012, column: 72)
!5639 = !DILocation(line: 1013, column: 8, scope: !5638)
!5640 = !DILocation(line: 1014, column: 11, scope: !5641)
!5641 = distinct !DILexicalBlock(scope: !5642, file: !3, line: 1014, column: 9)
!5642 = distinct !DILexicalBlock(scope: !5637, file: !3, line: 1013, column: 12)
!5643 = !DILocation(line: 1014, column: 14, scope: !5641)
!5644 = !DILocation(line: 1014, column: 17, scope: !5641)
!5645 = !DILocation(line: 1014, column: 21, scope: !5641)
!5646 = !DILocation(line: 1014, column: 32, scope: !5641)
!5647 = !DILocation(line: 1014, column: 9, scope: !5642)
!5648 = !DILocation(line: 1015, column: 37, scope: !5641)
!5649 = !DILocation(line: 1015, column: 11, scope: !5641)
!5650 = !DILocation(line: 1015, column: 9, scope: !5641)
!5651 = !DILocation(line: 1015, column: 6, scope: !5641)
!5652 = !DILocation(line: 1017, column: 9, scope: !5653)
!5653 = distinct !DILexicalBlock(scope: !5642, file: !3, line: 1017, column: 9)
!5654 = !DILocation(line: 1017, column: 9, scope: !5642)
!5655 = !DILocation(line: 1018, column: 43, scope: !5653)
!5656 = !DILocation(line: 1018, column: 47, scope: !5653)
!5657 = !DILocation(line: 1018, column: 51, scope: !5653)
!5658 = !DILocation(line: 1018, column: 61, scope: !5653)
!5659 = !DILocation(line: 1018, column: 69, scope: !5653)
!5660 = !DILocation(line: 1018, column: 80, scope: !5653)
!5661 = !DILocation(line: 1018, column: 92, scope: !5653)
!5662 = !DILocation(line: 1018, column: 103, scope: !5653)
!5663 = !DILocation(line: 1018, column: 114, scope: !5653)
!5664 = !DILocation(line: 1018, column: 14, scope: !5653)
!5665 = !DILocation(line: 1018, column: 12, scope: !5653)
!5666 = !DILocation(line: 1018, column: 6, scope: !5653)
!5667 = !DILocation(line: 1019, column: 4, scope: !5642)
!5668 = !DILocation(line: 1020, column: 3, scope: !5638)
!5669 = !DILocation(line: 1021, column: 12, scope: !5670)
!5670 = distinct !DILexicalBlock(scope: !5633, file: !3, line: 1021, column: 12)
!5671 = !DILocation(line: 1021, column: 12, scope: !5633)
!5672 = !DILocation(line: 1022, column: 10, scope: !5673)
!5673 = distinct !DILexicalBlock(scope: !5674, file: !3, line: 1022, column: 8)
!5674 = distinct !DILexicalBlock(scope: !5670, file: !3, line: 1021, column: 87)
!5675 = !DILocation(line: 1022, column: 13, scope: !5673)
!5676 = !DILocation(line: 1022, column: 16, scope: !5673)
!5677 = !DILocation(line: 1022, column: 20, scope: !5673)
!5678 = !DILocation(line: 1022, column: 31, scope: !5673)
!5679 = !DILocation(line: 1022, column: 8, scope: !5674)
!5680 = !DILocation(line: 1023, column: 36, scope: !5673)
!5681 = !DILocation(line: 1023, column: 10, scope: !5673)
!5682 = !DILocation(line: 1023, column: 8, scope: !5673)
!5683 = !DILocation(line: 1023, column: 5, scope: !5673)
!5684 = !DILocation(line: 1025, column: 8, scope: !5685)
!5685 = distinct !DILexicalBlock(scope: !5674, file: !3, line: 1025, column: 8)
!5686 = !DILocation(line: 1025, column: 8, scope: !5674)
!5687 = !DILocation(line: 1026, column: 42, scope: !5685)
!5688 = !DILocation(line: 1026, column: 46, scope: !5685)
!5689 = !DILocation(line: 1026, column: 50, scope: !5685)
!5690 = !DILocation(line: 1026, column: 60, scope: !5685)
!5691 = !DILocation(line: 1026, column: 68, scope: !5685)
!5692 = !DILocation(line: 1026, column: 79, scope: !5685)
!5693 = !DILocation(line: 1026, column: 91, scope: !5685)
!5694 = !DILocation(line: 1026, column: 102, scope: !5685)
!5695 = !DILocation(line: 1026, column: 113, scope: !5685)
!5696 = !DILocation(line: 1026, column: 13, scope: !5685)
!5697 = !DILocation(line: 1026, column: 11, scope: !5685)
!5698 = !DILocation(line: 1026, column: 5, scope: !5685)
!5699 = !DILocation(line: 1027, column: 3, scope: !5674)
!5700 = !DILocation(line: 1028, column: 12, scope: !5701)
!5701 = distinct !DILexicalBlock(scope: !5670, file: !3, line: 1028, column: 12)
!5702 = !DILocation(line: 1028, column: 12, scope: !5670)
!5703 = !DILocation(line: 1029, column: 10, scope: !5704)
!5704 = distinct !DILexicalBlock(scope: !5705, file: !3, line: 1029, column: 8)
!5705 = distinct !DILexicalBlock(scope: !5701, file: !3, line: 1028, column: 85)
!5706 = !DILocation(line: 1029, column: 13, scope: !5704)
!5707 = !DILocation(line: 1029, column: 16, scope: !5704)
!5708 = !DILocation(line: 1029, column: 20, scope: !5704)
!5709 = !DILocation(line: 1029, column: 31, scope: !5704)
!5710 = !DILocation(line: 1029, column: 8, scope: !5705)
!5711 = !DILocation(line: 1030, column: 36, scope: !5704)
!5712 = !DILocation(line: 1030, column: 10, scope: !5704)
!5713 = !DILocation(line: 1030, column: 8, scope: !5704)
!5714 = !DILocation(line: 1030, column: 5, scope: !5704)
!5715 = !DILocation(line: 1032, column: 8, scope: !5716)
!5716 = distinct !DILexicalBlock(scope: !5705, file: !3, line: 1032, column: 8)
!5717 = !DILocation(line: 1032, column: 8, scope: !5705)
!5718 = !DILocation(line: 1033, column: 42, scope: !5716)
!5719 = !DILocation(line: 1033, column: 46, scope: !5716)
!5720 = !DILocation(line: 1033, column: 50, scope: !5716)
!5721 = !DILocation(line: 1033, column: 60, scope: !5716)
!5722 = !DILocation(line: 1033, column: 68, scope: !5716)
!5723 = !DILocation(line: 1033, column: 79, scope: !5716)
!5724 = !DILocation(line: 1033, column: 91, scope: !5716)
!5725 = !DILocation(line: 1033, column: 102, scope: !5716)
!5726 = !DILocation(line: 1033, column: 113, scope: !5716)
!5727 = !DILocation(line: 1033, column: 13, scope: !5716)
!5728 = !DILocation(line: 1033, column: 11, scope: !5716)
!5729 = !DILocation(line: 1033, column: 5, scope: !5716)
!5730 = !DILocation(line: 1034, column: 3, scope: !5705)
!5731 = !DILocation(line: 1036, column: 8, scope: !5732)
!5732 = distinct !DILexicalBlock(scope: !5733, file: !3, line: 1036, column: 8)
!5733 = distinct !DILexicalBlock(scope: !5701, file: !3, line: 1035, column: 8)
!5734 = !DILocation(line: 1036, column: 8, scope: !5733)
!5735 = !DILocation(line: 1037, column: 42, scope: !5732)
!5736 = !DILocation(line: 1037, column: 46, scope: !5732)
!5737 = !DILocation(line: 1037, column: 50, scope: !5732)
!5738 = !DILocation(line: 1037, column: 60, scope: !5732)
!5739 = !DILocation(line: 1037, column: 68, scope: !5732)
!5740 = !DILocation(line: 1037, column: 79, scope: !5732)
!5741 = !DILocation(line: 1037, column: 91, scope: !5732)
!5742 = !DILocation(line: 1037, column: 102, scope: !5732)
!5743 = !DILocation(line: 1037, column: 113, scope: !5732)
!5744 = !DILocation(line: 1037, column: 13, scope: !5732)
!5745 = !DILocation(line: 1037, column: 11, scope: !5732)
!5746 = !DILocation(line: 1037, column: 5, scope: !5732)
!5747 = !DILocation(line: 1039, column: 2, scope: !5634)
!5748 = !DILocation(line: 1041, column: 9, scope: !5338)
!5749 = !DILocation(line: 1041, column: 2, scope: !5338)
!5750 = distinct !DISubprogram(name: "wm_keymap_item_find_handlers", scope: !3, file: !3, line: 937, type: !5751, scopeLine: 940, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !356)
!5751 = !DISubroutineType(types: !5752)
!5752 = !{!287, !3126, !767, !2048, !273, !299, !3613, !3613, !3651}
!5753 = !DILocalVariable(name: "C", arg: 1, scope: !5750, file: !3, line: 938, type: !3126)
!5754 = !DILocation(line: 938, column: 25, scope: !5750)
!5755 = !DILocalVariable(name: "handlers", arg: 2, scope: !5750, file: !3, line: 938, type: !767)
!5756 = !DILocation(line: 938, column: 38, scope: !5750)
!5757 = !DILocalVariable(name: "opname", arg: 3, scope: !5750, file: !3, line: 938, type: !2048)
!5758 = !DILocation(line: 938, column: 60, scope: !5750)
!5759 = !DILocalVariable(name: "UNUSED_opcontext", arg: 4, scope: !5750, file: !3, line: 938, type: !273)
!5760 = !DILocation(line: 938, column: 72, scope: !5750)
!5761 = !DILocalVariable(name: "properties", arg: 5, scope: !5750, file: !3, line: 939, type: !299)
!5762 = !DILocation(line: 939, column: 21, scope: !5750)
!5763 = !DILocalVariable(name: "is_strict", arg: 6, scope: !5750, file: !3, line: 939, type: !3613)
!5764 = !DILocation(line: 939, column: 44, scope: !5750)
!5765 = !DILocalVariable(name: "is_hotkey", arg: 7, scope: !5750, file: !3, line: 939, type: !3613)
!5766 = !DILocation(line: 939, column: 66, scope: !5750)
!5767 = !DILocalVariable(name: "keymap_r", arg: 8, scope: !5750, file: !3, line: 939, type: !3651)
!5768 = !DILocation(line: 939, column: 88, scope: !5750)
!5769 = !DILocalVariable(name: "wm", scope: !5750, file: !3, line: 941, type: !452)
!5770 = !DILocation(line: 941, column: 19, scope: !5750)
!5771 = !DILocation(line: 941, column: 39, scope: !5750)
!5772 = !DILocation(line: 941, column: 24, scope: !5750)
!5773 = !DILocalVariable(name: "handler", scope: !5750, file: !3, line: 942, type: !5774)
!5774 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5775, size: 64)
!5775 = !DIDerivedType(tag: DW_TAG_typedef, name: "wmEventHandler", file: !5776, line: 74, baseType: !5777)
!5776 = !DIFile(filename: "blender/source/blender/windowmanager/wm_event_system.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!5777 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmEventHandler", file: !5776, line: 45, size: 1088, elements: !5778)
!5778 = !{!5779, !5781, !5782, !5783, !5784, !5785, !5788, !5789, !5792, !5793, !5794, !5800, !5805, !5806, !5807, !5808, !5809, !5810}
!5779 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !5777, file: !5776, line: 46, baseType: !5780, size: 64)
!5780 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5777, size: 64)
!5781 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !5777, file: !5776, line: 46, baseType: !5780, size: 64, offset: 64)
!5782 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !5777, file: !5776, line: 48, baseType: !273, size: 32, offset: 128)
!5783 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !5777, file: !5776, line: 49, baseType: !273, size: 32, offset: 160)
!5784 = !DIDerivedType(tag: DW_TAG_member, name: "keymap", scope: !5777, file: !5776, line: 52, baseType: !2188, size: 64, offset: 192)
!5785 = !DIDerivedType(tag: DW_TAG_member, name: "bblocal", scope: !5777, file: !5776, line: 53, baseType: !5786, size: 64, offset: 256)
!5786 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5787, size: 64)
!5787 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1758)
!5788 = !DIDerivedType(tag: DW_TAG_member, name: "bbwin", scope: !5777, file: !5776, line: 53, baseType: !5786, size: 64, offset: 320)
!5789 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !5777, file: !5776, line: 56, baseType: !5790, size: 64, offset: 384)
!5790 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5791, size: 64)
!5791 = !DIDerivedType(tag: DW_TAG_typedef, name: "wmOperator", file: !208, line: 348, baseType: !3407)
!5792 = !DIDerivedType(tag: DW_TAG_member, name: "op_area", scope: !5777, file: !5776, line: 57, baseType: !5365, size: 64, offset: 448)
!5793 = !DIDerivedType(tag: DW_TAG_member, name: "op_region", scope: !5777, file: !5776, line: 58, baseType: !5481, size: 64, offset: 512)
!5794 = !DIDerivedType(tag: DW_TAG_member, name: "ui_handle", scope: !5777, file: !5776, line: 61, baseType: !5795, size: 64, offset: 576)
!5795 = !DIDerivedType(tag: DW_TAG_typedef, name: "wmUIHandlerFunc", file: !5796, line: 149, baseType: !5797)
!5796 = !DIFile(filename: "blender/source/blender/windowmanager/WM_api.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!5797 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5798, size: 64)
!5798 = !DISubroutineType(types: !5799)
!5799 = !{!273, !2206, !3435, !272}
!5800 = !DIDerivedType(tag: DW_TAG_member, name: "ui_remove", scope: !5777, file: !5776, line: 62, baseType: !5801, size: 64, offset: 640)
!5801 = !DIDerivedType(tag: DW_TAG_typedef, name: "wmUIHandlerRemoveFunc", file: !5796, line: 150, baseType: !5802)
!5802 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5803, size: 64)
!5803 = !DISubroutineType(types: !5804)
!5804 = !{null, !2206, !272}
!5805 = !DIDerivedType(tag: DW_TAG_member, name: "ui_userdata", scope: !5777, file: !5776, line: 63, baseType: !272, size: 64, offset: 704)
!5806 = !DIDerivedType(tag: DW_TAG_member, name: "ui_area", scope: !5777, file: !5776, line: 64, baseType: !5365, size: 64, offset: 768)
!5807 = !DIDerivedType(tag: DW_TAG_member, name: "ui_region", scope: !5777, file: !5776, line: 65, baseType: !5481, size: 64, offset: 832)
!5808 = !DIDerivedType(tag: DW_TAG_member, name: "ui_menu", scope: !5777, file: !5776, line: 66, baseType: !5481, size: 64, offset: 896)
!5809 = !DIDerivedType(tag: DW_TAG_member, name: "filescreen", scope: !5777, file: !5776, line: 69, baseType: !500, size: 64, offset: 960)
!5810 = !DIDerivedType(tag: DW_TAG_member, name: "dropboxes", scope: !5777, file: !5776, line: 72, baseType: !767, size: 64, offset: 1024)
!5811 = !DILocation(line: 942, column: 18, scope: !5750)
!5812 = !DILocalVariable(name: "keymap", scope: !5750, file: !3, line: 943, type: !2188)
!5813 = !DILocation(line: 943, column: 12, scope: !5750)
!5814 = !DILocalVariable(name: "kmi", scope: !5750, file: !3, line: 944, type: !287)
!5815 = !DILocation(line: 944, column: 16, scope: !5750)
!5816 = !DILocation(line: 947, column: 17, scope: !5817)
!5817 = distinct !DILexicalBlock(scope: !5750, file: !3, line: 947, column: 2)
!5818 = !DILocation(line: 947, column: 27, scope: !5817)
!5819 = !DILocation(line: 947, column: 15, scope: !5817)
!5820 = !DILocation(line: 947, column: 7, scope: !5817)
!5821 = !DILocation(line: 947, column: 34, scope: !5822)
!5822 = distinct !DILexicalBlock(scope: !5817, file: !3, line: 947, column: 2)
!5823 = !DILocation(line: 947, column: 2, scope: !5817)
!5824 = !DILocation(line: 948, column: 29, scope: !5825)
!5825 = distinct !DILexicalBlock(scope: !5822, file: !3, line: 947, column: 68)
!5826 = !DILocation(line: 948, column: 33, scope: !5825)
!5827 = !DILocation(line: 948, column: 42, scope: !5825)
!5828 = !DILocation(line: 948, column: 12, scope: !5825)
!5829 = !DILocation(line: 948, column: 10, scope: !5825)
!5830 = !DILocation(line: 950, column: 7, scope: !5831)
!5831 = distinct !DILexicalBlock(scope: !5825, file: !3, line: 950, column: 7)
!5832 = !DILocation(line: 950, column: 14, scope: !5831)
!5833 = !DILocation(line: 950, column: 19, scope: !5831)
!5834 = !DILocation(line: 950, column: 27, scope: !5831)
!5835 = !DILocation(line: 950, column: 32, scope: !5831)
!5836 = !DILocation(line: 950, column: 35, scope: !5831)
!5837 = !DILocation(line: 950, column: 43, scope: !5831)
!5838 = !DILocation(line: 950, column: 60, scope: !5831)
!5839 = !DILocation(line: 950, column: 7, scope: !5825)
!5840 = !DILocation(line: 951, column: 15, scope: !5841)
!5841 = distinct !DILexicalBlock(scope: !5842, file: !3, line: 951, column: 4)
!5842 = distinct !DILexicalBlock(scope: !5831, file: !3, line: 950, column: 65)
!5843 = !DILocation(line: 951, column: 23, scope: !5841)
!5844 = !DILocation(line: 951, column: 29, scope: !5841)
!5845 = !DILocation(line: 951, column: 13, scope: !5841)
!5846 = !DILocation(line: 951, column: 9, scope: !5841)
!5847 = !DILocation(line: 951, column: 36, scope: !5848)
!5848 = distinct !DILexicalBlock(scope: !5841, file: !3, line: 951, column: 4)
!5849 = !DILocation(line: 951, column: 4, scope: !5841)
!5850 = !DILocation(line: 953, column: 9, scope: !5851)
!5851 = distinct !DILexicalBlock(scope: !5852, file: !3, line: 953, column: 9)
!5852 = distinct !DILexicalBlock(scope: !5848, file: !3, line: 951, column: 58)
!5853 = !DILocation(line: 953, column: 14, scope: !5851)
!5854 = !DILocation(line: 953, column: 19, scope: !5851)
!5855 = !DILocation(line: 953, column: 9, scope: !5852)
!5856 = !DILocation(line: 954, column: 6, scope: !5851)
!5857 = !DILocation(line: 956, column: 16, scope: !5858)
!5858 = distinct !DILexicalBlock(scope: !5852, file: !3, line: 956, column: 9)
!5859 = !DILocation(line: 956, column: 21, scope: !5858)
!5860 = !DILocation(line: 956, column: 29, scope: !5858)
!5861 = !DILocation(line: 956, column: 9, scope: !5858)
!5862 = !DILocation(line: 956, column: 37, scope: !5858)
!5863 = !DILocation(line: 956, column: 42, scope: !5858)
!5864 = !DILocation(line: 956, column: 65, scope: !5858)
!5865 = !DILocation(line: 956, column: 70, scope: !5858)
!5866 = !DILocation(line: 956, column: 45, scope: !5858)
!5867 = !DILocation(line: 956, column: 9, scope: !5852)
!5868 = !DILocation(line: 957, column: 10, scope: !5869)
!5869 = distinct !DILexicalBlock(scope: !5870, file: !3, line: 957, column: 10)
!5870 = distinct !DILexicalBlock(scope: !5858, file: !3, line: 956, column: 80)
!5871 = !DILocation(line: 957, column: 10, scope: !5870)
!5872 = !DILocation(line: 958, column: 12, scope: !5873)
!5873 = distinct !DILexicalBlock(scope: !5874, file: !3, line: 958, column: 11)
!5874 = distinct !DILexicalBlock(scope: !5869, file: !3, line: 957, column: 21)
!5875 = !DILocation(line: 0, scope: !5873)
!5876 = !DILocation(line: 958, column: 11, scope: !5874)
!5877 = !DILocation(line: 959, column: 8, scope: !5873)
!5878 = !DILocation(line: 960, column: 6, scope: !5874)
!5879 = !DILocation(line: 962, column: 10, scope: !5880)
!5880 = distinct !DILexicalBlock(scope: !5870, file: !3, line: 962, column: 10)
!5881 = !DILocation(line: 962, column: 10, scope: !5870)
!5882 = !DILocation(line: 976, column: 11, scope: !5883)
!5883 = distinct !DILexicalBlock(scope: !5884, file: !3, line: 976, column: 11)
!5884 = distinct !DILexicalBlock(scope: !5880, file: !3, line: 962, column: 22)
!5885 = !DILocation(line: 976, column: 16, scope: !5883)
!5886 = !DILocation(line: 976, column: 20, scope: !5883)
!5887 = !DILocation(line: 976, column: 47, scope: !5883)
!5888 = !DILocation(line: 976, column: 59, scope: !5883)
!5889 = !DILocation(line: 976, column: 64, scope: !5883)
!5890 = !DILocation(line: 976, column: 69, scope: !5883)
!5891 = !DILocation(line: 976, column: 75, scope: !5883)
!5892 = !DILocation(line: 976, column: 23, scope: !5883)
!5893 = !DILocation(line: 976, column: 11, scope: !5884)
!5894 = !DILocation(line: 977, column: 12, scope: !5895)
!5895 = distinct !DILexicalBlock(scope: !5896, file: !3, line: 977, column: 12)
!5896 = distinct !DILexicalBlock(scope: !5883, file: !3, line: 976, column: 87)
!5897 = !DILocation(line: 977, column: 12, scope: !5896)
!5898 = !DILocation(line: 977, column: 34, scope: !5895)
!5899 = !DILocation(line: 977, column: 23, scope: !5895)
!5900 = !DILocation(line: 977, column: 32, scope: !5895)
!5901 = !DILocation(line: 977, column: 22, scope: !5895)
!5902 = !DILocation(line: 978, column: 15, scope: !5896)
!5903 = !DILocation(line: 978, column: 8, scope: !5896)
!5904 = !DILocation(line: 980, column: 6, scope: !5884)
!5905 = !DILocation(line: 982, column: 11, scope: !5906)
!5906 = distinct !DILexicalBlock(scope: !5907, file: !3, line: 982, column: 11)
!5907 = distinct !DILexicalBlock(scope: !5880, file: !3, line: 981, column: 11)
!5908 = !DILocation(line: 982, column: 11, scope: !5907)
!5909 = !DILocation(line: 982, column: 33, scope: !5906)
!5910 = !DILocation(line: 982, column: 22, scope: !5906)
!5911 = !DILocation(line: 982, column: 31, scope: !5906)
!5912 = !DILocation(line: 982, column: 21, scope: !5906)
!5913 = !DILocation(line: 983, column: 14, scope: !5907)
!5914 = !DILocation(line: 983, column: 7, scope: !5907)
!5915 = !DILocation(line: 985, column: 5, scope: !5870)
!5916 = !DILocation(line: 986, column: 4, scope: !5852)
!5917 = !DILocation(line: 951, column: 47, scope: !5848)
!5918 = !DILocation(line: 951, column: 52, scope: !5848)
!5919 = !DILocation(line: 951, column: 45, scope: !5848)
!5920 = !DILocation(line: 951, column: 4, scope: !5848)
!5921 = distinct !{!5921, !5849, !5922}
!5922 = !DILocation(line: 986, column: 4, scope: !5841)
!5923 = !DILocation(line: 987, column: 3, scope: !5842)
!5924 = !DILocation(line: 988, column: 2, scope: !5825)
!5925 = !DILocation(line: 947, column: 53, scope: !5822)
!5926 = !DILocation(line: 947, column: 62, scope: !5822)
!5927 = !DILocation(line: 947, column: 51, scope: !5822)
!5928 = !DILocation(line: 947, column: 2, scope: !5822)
!5929 = distinct !{!5929, !5823, !5930}
!5930 = !DILocation(line: 988, column: 2, scope: !5817)
!5931 = !DILocation(line: 991, column: 6, scope: !5932)
!5932 = distinct !DILexicalBlock(scope: !5750, file: !3, line: 991, column: 6)
!5933 = !DILocation(line: 991, column: 6, scope: !5750)
!5934 = !DILocation(line: 991, column: 17, scope: !5932)
!5935 = !DILocation(line: 991, column: 26, scope: !5932)
!5936 = !DILocation(line: 991, column: 16, scope: !5932)
!5937 = !DILocation(line: 992, column: 2, scope: !5750)
!5938 = !DILocation(line: 993, column: 1, scope: !5750)
!5939 = distinct !DISubprogram(name: "wm_keymap_item_properties_update_ot", scope: !3, file: !3, line: 102, type: !383, scopeLine: 103, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !356)
!5940 = !DILocalVariable(name: "kmi", arg: 1, scope: !5939, file: !3, line: 102, type: !287)
!5941 = !DILocation(line: 102, column: 63, scope: !5939)
!5942 = !DILocation(line: 104, column: 6, scope: !5943)
!5943 = distinct !DILexicalBlock(scope: !5939, file: !3, line: 104, column: 6)
!5944 = !DILocation(line: 104, column: 11, scope: !5943)
!5945 = !DILocation(line: 104, column: 21, scope: !5943)
!5946 = !DILocation(line: 104, column: 6, scope: !5939)
!5947 = !DILocation(line: 106, column: 3, scope: !5948)
!5948 = distinct !DILexicalBlock(scope: !5943, file: !3, line: 104, column: 27)
!5949 = !DILocation(line: 109, column: 6, scope: !5950)
!5950 = distinct !DILexicalBlock(scope: !5939, file: !3, line: 109, column: 6)
!5951 = !DILocation(line: 109, column: 11, scope: !5950)
!5952 = !DILocation(line: 109, column: 15, scope: !5950)
!5953 = !DILocation(line: 109, column: 6, scope: !5939)
!5954 = !DILocation(line: 110, column: 33, scope: !5955)
!5955 = distinct !DILexicalBlock(scope: !5950, file: !3, line: 109, column: 24)
!5956 = !DILocation(line: 110, column: 3, scope: !5955)
!5957 = !DILocation(line: 111, column: 2, scope: !5955)
!5958 = !DILocalVariable(name: "ot", scope: !5959, file: !3, line: 113, type: !3394)
!5959 = distinct !DILexicalBlock(scope: !5950, file: !3, line: 112, column: 7)
!5960 = !DILocation(line: 113, column: 19, scope: !5959)
!5961 = !DILocation(line: 113, column: 45, scope: !5959)
!5962 = !DILocation(line: 113, column: 50, scope: !5959)
!5963 = !DILocation(line: 113, column: 24, scope: !5959)
!5964 = !DILocation(line: 114, column: 7, scope: !5965)
!5965 = distinct !DILexicalBlock(scope: !5959, file: !3, line: 114, column: 7)
!5966 = !DILocation(line: 114, column: 7, scope: !5959)
!5967 = !DILocation(line: 115, column: 8, scope: !5968)
!5968 = distinct !DILexicalBlock(scope: !5969, file: !3, line: 115, column: 8)
!5969 = distinct !DILexicalBlock(scope: !5965, file: !3, line: 114, column: 11)
!5970 = !DILocation(line: 115, column: 12, scope: !5968)
!5971 = !DILocation(line: 115, column: 20, scope: !5968)
!5972 = !DILocation(line: 115, column: 25, scope: !5968)
!5973 = !DILocation(line: 115, column: 30, scope: !5968)
!5974 = !DILocation(line: 115, column: 17, scope: !5968)
!5975 = !DILocation(line: 115, column: 8, scope: !5969)
!5976 = !DILocation(line: 117, column: 39, scope: !5977)
!5977 = distinct !DILexicalBlock(scope: !5968, file: !3, line: 115, column: 36)
!5978 = !DILocation(line: 117, column: 44, scope: !5977)
!5979 = !DILocation(line: 117, column: 49, scope: !5977)
!5980 = !DILocation(line: 117, column: 5, scope: !5977)
!5981 = !DILocation(line: 118, column: 37, scope: !5977)
!5982 = !DILocation(line: 118, column: 42, scope: !5977)
!5983 = !DILocation(line: 118, column: 5, scope: !5977)
!5984 = !DILocation(line: 119, column: 4, scope: !5977)
!5985 = !DILocation(line: 120, column: 3, scope: !5969)
!5986 = !DILocation(line: 123, column: 4, scope: !5987)
!5987 = distinct !DILexicalBlock(scope: !5988, file: !3, line: 123, column: 4)
!5988 = distinct !DILexicalBlock(scope: !5965, file: !3, line: 121, column: 8)
!5989 = !DILocation(line: 123, column: 4, scope: !5988)
!5990 = !DILocation(line: 123, column: 4, scope: !5991)
!5991 = distinct !DILexicalBlock(scope: !5987, file: !3, line: 123, column: 4)
!5992 = !DILocation(line: 126, column: 1, scope: !5939)
!5993 = distinct !DISubprogram(name: "WM_keyconfig_active", scope: !3, file: !3, line: 297, type: !5994, scopeLine: 298, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !356)
!5994 = !DISubroutineType(types: !5995)
!5995 = !{!440, !452}
!5996 = !DILocalVariable(name: "wm", arg: 1, scope: !5993, file: !3, line: 297, type: !452)
!5997 = !DILocation(line: 297, column: 58, scope: !5993)
!5998 = !DILocalVariable(name: "keyconf", scope: !5993, file: !3, line: 299, type: !440)
!5999 = !DILocation(line: 299, column: 15, scope: !5993)
!6000 = !DILocation(line: 302, column: 28, scope: !5993)
!6001 = !DILocation(line: 302, column: 32, scope: !5993)
!6002 = !DILocation(line: 302, column: 12, scope: !5993)
!6003 = !DILocation(line: 302, column: 10, scope: !5993)
!6004 = !DILocation(line: 303, column: 6, scope: !6005)
!6005 = distinct !DILexicalBlock(scope: !5993, file: !3, line: 303, column: 6)
!6006 = !DILocation(line: 303, column: 6, scope: !5993)
!6007 = !DILocation(line: 304, column: 10, scope: !6005)
!6008 = !DILocation(line: 304, column: 3, scope: !6005)
!6009 = !DILocation(line: 307, column: 9, scope: !5993)
!6010 = !DILocation(line: 307, column: 13, scope: !5993)
!6011 = !DILocation(line: 307, column: 2, scope: !5993)
!6012 = !DILocation(line: 308, column: 1, scope: !5993)
!6013 = distinct !DISubprogram(name: "wm_keymap_diff", scope: !3, file: !3, line: 530, type: !6014, scopeLine: 531, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !356)
!6014 = !DISubroutineType(types: !6015)
!6015 = !{null, !2188, !2188, !2188, !2188, !2188}
!6016 = !DILocalVariable(name: "diff_km", arg: 1, scope: !6013, file: !3, line: 530, type: !2188)
!6017 = !DILocation(line: 530, column: 38, scope: !6013)
!6018 = !DILocalVariable(name: "from_km", arg: 2, scope: !6013, file: !3, line: 530, type: !2188)
!6019 = !DILocation(line: 530, column: 57, scope: !6013)
!6020 = !DILocalVariable(name: "to_km", arg: 3, scope: !6013, file: !3, line: 530, type: !2188)
!6021 = !DILocation(line: 530, column: 76, scope: !6013)
!6022 = !DILocalVariable(name: "orig_km", arg: 4, scope: !6013, file: !3, line: 530, type: !2188)
!6023 = !DILocation(line: 530, column: 93, scope: !6013)
!6024 = !DILocalVariable(name: "addon_km", arg: 5, scope: !6013, file: !3, line: 530, type: !2188)
!6025 = !DILocation(line: 530, column: 112, scope: !6013)
!6026 = !DILocalVariable(name: "kmi", scope: !6013, file: !3, line: 532, type: !287)
!6027 = !DILocation(line: 532, column: 16, scope: !6013)
!6028 = !DILocalVariable(name: "to_kmi", scope: !6013, file: !3, line: 532, type: !287)
!6029 = !DILocation(line: 532, column: 22, scope: !6013)
!6030 = !DILocalVariable(name: "orig_kmi", scope: !6013, file: !3, line: 532, type: !287)
!6031 = !DILocation(line: 532, column: 31, scope: !6013)
!6032 = !DILocalVariable(name: "kmdi", scope: !6013, file: !3, line: 533, type: !2258)
!6033 = !DILocation(line: 533, column: 20, scope: !6013)
!6034 = !DILocation(line: 535, column: 13, scope: !6035)
!6035 = distinct !DILexicalBlock(scope: !6013, file: !3, line: 535, column: 2)
!6036 = !DILocation(line: 535, column: 22, scope: !6035)
!6037 = !DILocation(line: 535, column: 28, scope: !6035)
!6038 = !DILocation(line: 535, column: 11, scope: !6035)
!6039 = !DILocation(line: 535, column: 7, scope: !6035)
!6040 = !DILocation(line: 535, column: 35, scope: !6041)
!6041 = distinct !DILexicalBlock(scope: !6035, file: !3, line: 535, column: 2)
!6042 = !DILocation(line: 535, column: 2, scope: !6035)
!6043 = !DILocation(line: 536, column: 35, scope: !6044)
!6044 = distinct !DILexicalBlock(scope: !6041, file: !3, line: 535, column: 57)
!6045 = !DILocation(line: 536, column: 42, scope: !6044)
!6046 = !DILocation(line: 536, column: 47, scope: !6044)
!6047 = !DILocation(line: 536, column: 12, scope: !6044)
!6048 = !DILocation(line: 536, column: 10, scope: !6044)
!6049 = !DILocation(line: 538, column: 8, scope: !6050)
!6050 = distinct !DILexicalBlock(scope: !6044, file: !3, line: 538, column: 7)
!6051 = !DILocation(line: 538, column: 7, scope: !6044)
!6052 = !DILocation(line: 540, column: 11, scope: !6053)
!6053 = distinct !DILexicalBlock(scope: !6050, file: !3, line: 538, column: 16)
!6054 = !DILocation(line: 540, column: 9, scope: !6053)
!6055 = !DILocation(line: 541, column: 44, scope: !6053)
!6056 = !DILocation(line: 541, column: 24, scope: !6053)
!6057 = !DILocation(line: 541, column: 4, scope: !6053)
!6058 = !DILocation(line: 541, column: 10, scope: !6053)
!6059 = !DILocation(line: 541, column: 22, scope: !6053)
!6060 = !DILocation(line: 542, column: 17, scope: !6053)
!6061 = !DILocation(line: 542, column: 26, scope: !6053)
!6062 = !DILocation(line: 542, column: 38, scope: !6053)
!6063 = !DILocation(line: 542, column: 4, scope: !6053)
!6064 = !DILocation(line: 543, column: 3, scope: !6053)
!6065 = !DILocation(line: 544, column: 12, scope: !6066)
!6066 = distinct !DILexicalBlock(scope: !6050, file: !3, line: 544, column: 12)
!6067 = !DILocation(line: 544, column: 19, scope: !6066)
!6068 = !DILocation(line: 544, column: 45, scope: !6066)
!6069 = !DILocation(line: 544, column: 50, scope: !6066)
!6070 = !DILocation(line: 544, column: 23, scope: !6066)
!6071 = !DILocation(line: 544, column: 12, scope: !6050)
!6072 = !DILocation(line: 546, column: 11, scope: !6073)
!6073 = distinct !DILexicalBlock(scope: !6066, file: !3, line: 544, column: 59)
!6074 = !DILocation(line: 546, column: 9, scope: !6073)
!6075 = !DILocation(line: 547, column: 44, scope: !6073)
!6076 = !DILocation(line: 547, column: 24, scope: !6073)
!6077 = !DILocation(line: 547, column: 4, scope: !6073)
!6078 = !DILocation(line: 547, column: 10, scope: !6073)
!6079 = !DILocation(line: 547, column: 22, scope: !6073)
!6080 = !DILocation(line: 548, column: 41, scope: !6073)
!6081 = !DILocation(line: 548, column: 21, scope: !6073)
!6082 = !DILocation(line: 548, column: 4, scope: !6073)
!6083 = !DILocation(line: 548, column: 10, scope: !6073)
!6084 = !DILocation(line: 548, column: 19, scope: !6073)
!6085 = !DILocation(line: 549, column: 17, scope: !6073)
!6086 = !DILocation(line: 549, column: 26, scope: !6073)
!6087 = !DILocation(line: 549, column: 38, scope: !6073)
!6088 = !DILocation(line: 549, column: 4, scope: !6073)
!6089 = !DILocation(line: 550, column: 3, scope: !6073)
!6090 = !DILocation(line: 553, column: 7, scope: !6091)
!6091 = distinct !DILexicalBlock(scope: !6044, file: !3, line: 553, column: 7)
!6092 = !DILocation(line: 553, column: 7, scope: !6044)
!6093 = !DILocation(line: 554, column: 38, scope: !6094)
!6094 = distinct !DILexicalBlock(scope: !6091, file: !3, line: 553, column: 15)
!6095 = !DILocation(line: 554, column: 47, scope: !6094)
!6096 = !DILocation(line: 554, column: 52, scope: !6094)
!6097 = !DILocation(line: 554, column: 15, scope: !6094)
!6098 = !DILocation(line: 554, column: 13, scope: !6094)
!6099 = !DILocation(line: 556, column: 9, scope: !6100)
!6100 = distinct !DILexicalBlock(scope: !6094, file: !3, line: 556, column: 8)
!6101 = !DILocation(line: 556, column: 8, scope: !6094)
!6102 = !DILocation(line: 557, column: 43, scope: !6100)
!6103 = !DILocation(line: 557, column: 53, scope: !6100)
!6104 = !DILocation(line: 557, column: 16, scope: !6100)
!6105 = !DILocation(line: 557, column: 14, scope: !6100)
!6106 = !DILocation(line: 557, column: 5, scope: !6100)
!6107 = !DILocation(line: 559, column: 8, scope: !6108)
!6108 = distinct !DILexicalBlock(scope: !6094, file: !3, line: 559, column: 8)
!6109 = !DILocation(line: 559, column: 8, scope: !6094)
!6110 = !DILocation(line: 560, column: 5, scope: !6111)
!6111 = distinct !DILexicalBlock(scope: !6108, file: !3, line: 559, column: 18)
!6112 = !DILocation(line: 560, column: 15, scope: !6111)
!6113 = !DILocation(line: 560, column: 20, scope: !6111)
!6114 = !DILocation(line: 561, column: 24, scope: !6111)
!6115 = !DILocation(line: 561, column: 32, scope: !6111)
!6116 = !DILocation(line: 561, column: 37, scope: !6111)
!6117 = !DILocation(line: 561, column: 5, scope: !6111)
!6118 = !DILocation(line: 561, column: 15, scope: !6111)
!6119 = !DILocation(line: 561, column: 20, scope: !6111)
!6120 = !DILocation(line: 562, column: 4, scope: !6111)
!6121 = !DILocation(line: 563, column: 3, scope: !6094)
!6122 = !DILocation(line: 564, column: 2, scope: !6044)
!6123 = !DILocation(line: 535, column: 46, scope: !6041)
!6124 = !DILocation(line: 535, column: 51, scope: !6041)
!6125 = !DILocation(line: 535, column: 44, scope: !6041)
!6126 = !DILocation(line: 535, column: 2, scope: !6041)
!6127 = distinct !{!6127, !6042, !6128}
!6128 = !DILocation(line: 564, column: 2, scope: !6035)
!6129 = !DILocation(line: 566, column: 13, scope: !6130)
!6130 = distinct !DILexicalBlock(scope: !6013, file: !3, line: 566, column: 2)
!6131 = !DILocation(line: 566, column: 20, scope: !6130)
!6132 = !DILocation(line: 566, column: 26, scope: !6130)
!6133 = !DILocation(line: 566, column: 11, scope: !6130)
!6134 = !DILocation(line: 566, column: 7, scope: !6130)
!6135 = !DILocation(line: 566, column: 33, scope: !6136)
!6136 = distinct !DILexicalBlock(scope: !6130, file: !3, line: 566, column: 2)
!6137 = !DILocation(line: 566, column: 2, scope: !6130)
!6138 = !DILocation(line: 567, column: 7, scope: !6139)
!6139 = distinct !DILexicalBlock(scope: !6140, file: !3, line: 567, column: 7)
!6140 = distinct !DILexicalBlock(scope: !6136, file: !3, line: 566, column: 55)
!6141 = !DILocation(line: 567, column: 12, scope: !6139)
!6142 = !DILocation(line: 567, column: 15, scope: !6139)
!6143 = !DILocation(line: 567, column: 7, scope: !6140)
!6144 = !DILocation(line: 569, column: 11, scope: !6145)
!6145 = distinct !DILexicalBlock(scope: !6139, file: !3, line: 567, column: 20)
!6146 = !DILocation(line: 569, column: 9, scope: !6145)
!6147 = !DILocation(line: 570, column: 41, scope: !6145)
!6148 = !DILocation(line: 570, column: 21, scope: !6145)
!6149 = !DILocation(line: 570, column: 4, scope: !6145)
!6150 = !DILocation(line: 570, column: 10, scope: !6145)
!6151 = !DILocation(line: 570, column: 19, scope: !6145)
!6152 = !DILocation(line: 571, column: 17, scope: !6145)
!6153 = !DILocation(line: 571, column: 26, scope: !6145)
!6154 = !DILocation(line: 571, column: 38, scope: !6145)
!6155 = !DILocation(line: 571, column: 4, scope: !6145)
!6156 = !DILocation(line: 572, column: 3, scope: !6145)
!6157 = !DILocation(line: 573, column: 2, scope: !6140)
!6158 = !DILocation(line: 566, column: 44, scope: !6136)
!6159 = !DILocation(line: 566, column: 49, scope: !6136)
!6160 = !DILocation(line: 566, column: 42, scope: !6136)
!6161 = !DILocation(line: 566, column: 2, scope: !6136)
!6162 = distinct !{!6162, !6137, !6163}
!6163 = !DILocation(line: 573, column: 2, scope: !6130)
!6164 = !DILocation(line: 574, column: 1, scope: !6013)
!6165 = distinct !DISubprogram(name: "wm_keymap_item_copy", scope: !3, file: !3, line: 66, type: !6166, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !356)
!6166 = !DISubroutineType(types: !6167)
!6167 = !{!287, !287}
!6168 = !DILocalVariable(name: "kmi", arg: 1, scope: !6165, file: !3, line: 66, type: !287)
!6169 = !DILocation(line: 66, column: 56, scope: !6165)
!6170 = !DILocalVariable(name: "kmin", scope: !6165, file: !3, line: 68, type: !287)
!6171 = !DILocation(line: 68, column: 16, scope: !6165)
!6172 = !DILocation(line: 68, column: 23, scope: !6165)
!6173 = !DILocation(line: 68, column: 37, scope: !6165)
!6174 = !DILocation(line: 70, column: 15, scope: !6165)
!6175 = !DILocation(line: 70, column: 21, scope: !6165)
!6176 = !DILocation(line: 70, column: 26, scope: !6165)
!6177 = !DILocation(line: 70, column: 2, scope: !6165)
!6178 = !DILocation(line: 70, column: 8, scope: !6165)
!6179 = !DILocation(line: 70, column: 13, scope: !6165)
!6180 = !DILocation(line: 71, column: 2, scope: !6165)
!6181 = !DILocation(line: 71, column: 8, scope: !6165)
!6182 = !DILocation(line: 71, column: 13, scope: !6165)
!6183 = !DILocation(line: 73, column: 6, scope: !6184)
!6184 = distinct !DILexicalBlock(scope: !6165, file: !3, line: 73, column: 6)
!6185 = !DILocation(line: 73, column: 12, scope: !6184)
!6186 = !DILocation(line: 73, column: 6, scope: !6165)
!6187 = !DILocation(line: 74, column: 15, scope: !6188)
!6188 = distinct !DILexicalBlock(scope: !6184, file: !3, line: 73, column: 24)
!6189 = !DILocation(line: 74, column: 3, scope: !6188)
!6190 = !DILocation(line: 74, column: 9, scope: !6188)
!6191 = !DILocation(line: 74, column: 13, scope: !6188)
!6192 = !DILocation(line: 75, column: 33, scope: !6188)
!6193 = !DILocation(line: 75, column: 39, scope: !6188)
!6194 = !DILocation(line: 75, column: 44, scope: !6188)
!6195 = !DILocation(line: 75, column: 50, scope: !6188)
!6196 = !DILocation(line: 75, column: 3, scope: !6188)
!6197 = !DILocation(line: 77, column: 39, scope: !6188)
!6198 = !DILocation(line: 77, column: 45, scope: !6188)
!6199 = !DILocation(line: 77, column: 22, scope: !6188)
!6200 = !DILocation(line: 77, column: 3, scope: !6188)
!6201 = !DILocation(line: 77, column: 9, scope: !6188)
!6202 = !DILocation(line: 77, column: 20, scope: !6188)
!6203 = !DILocation(line: 78, column: 21, scope: !6188)
!6204 = !DILocation(line: 78, column: 27, scope: !6188)
!6205 = !DILocation(line: 78, column: 3, scope: !6188)
!6206 = !DILocation(line: 78, column: 9, scope: !6188)
!6207 = !DILocation(line: 78, column: 14, scope: !6188)
!6208 = !DILocation(line: 78, column: 19, scope: !6188)
!6209 = !DILocation(line: 79, column: 2, scope: !6188)
!6210 = !DILocation(line: 81, column: 9, scope: !6165)
!6211 = !DILocation(line: 81, column: 2, scope: !6165)
!6212 = distinct !DISubprogram(name: "wm_keymap_item_equals", scope: !3, file: !3, line: 163, type: !3775, scopeLine: 164, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !356)
!6213 = !DILocalVariable(name: "a", arg: 1, scope: !6212, file: !3, line: 163, type: !287)
!6214 = !DILocation(line: 163, column: 48, scope: !6212)
!6215 = !DILocalVariable(name: "b", arg: 2, scope: !6212, file: !3, line: 163, type: !287)
!6216 = !DILocation(line: 163, column: 65, scope: !6212)
!6217 = !DILocation(line: 165, column: 39, scope: !6212)
!6218 = !DILocation(line: 165, column: 42, scope: !6212)
!6219 = !DILocation(line: 165, column: 10, scope: !6212)
!6220 = !DILocation(line: 165, column: 45, scope: !6212)
!6221 = !DILocation(line: 166, column: 10, scope: !6212)
!6222 = !DILocation(line: 166, column: 13, scope: !6212)
!6223 = !DILocation(line: 166, column: 21, scope: !6212)
!6224 = !DILocation(line: 166, column: 24, scope: !6212)
!6225 = !DILocation(line: 166, column: 18, scope: !6212)
!6226 = !DILocation(line: 166, column: 29, scope: !6212)
!6227 = !DILocation(line: 167, column: 10, scope: !6212)
!6228 = !DILocation(line: 167, column: 13, scope: !6212)
!6229 = !DILocation(line: 167, column: 20, scope: !6212)
!6230 = !DILocation(line: 167, column: 23, scope: !6212)
!6231 = !DILocation(line: 167, column: 17, scope: !6212)
!6232 = !DILocation(line: 167, column: 27, scope: !6212)
!6233 = !DILocation(line: 168, column: 10, scope: !6212)
!6234 = !DILocation(line: 168, column: 13, scope: !6212)
!6235 = !DILocation(line: 168, column: 22, scope: !6212)
!6236 = !DILocation(line: 168, column: 25, scope: !6212)
!6237 = !DILocation(line: 168, column: 19, scope: !6212)
!6238 = !DILocation(line: 168, column: 31, scope: !6212)
!6239 = !DILocation(line: 169, column: 10, scope: !6212)
!6240 = !DILocation(line: 169, column: 13, scope: !6212)
!6241 = !DILocation(line: 169, column: 21, scope: !6212)
!6242 = !DILocation(line: 169, column: 24, scope: !6212)
!6243 = !DILocation(line: 169, column: 18, scope: !6212)
!6244 = !DILocation(line: 169, column: 29, scope: !6212)
!6245 = !DILocation(line: 170, column: 10, scope: !6212)
!6246 = !DILocation(line: 170, column: 13, scope: !6212)
!6247 = !DILocation(line: 170, column: 20, scope: !6212)
!6248 = !DILocation(line: 170, column: 23, scope: !6212)
!6249 = !DILocation(line: 170, column: 17, scope: !6212)
!6250 = !DILocation(line: 170, column: 27, scope: !6212)
!6251 = !DILocation(line: 171, column: 10, scope: !6212)
!6252 = !DILocation(line: 171, column: 13, scope: !6212)
!6253 = !DILocation(line: 171, column: 22, scope: !6212)
!6254 = !DILocation(line: 171, column: 25, scope: !6212)
!6255 = !DILocation(line: 171, column: 19, scope: !6212)
!6256 = !DILocation(line: 171, column: 31, scope: !6212)
!6257 = !DILocation(line: 172, column: 10, scope: !6212)
!6258 = !DILocation(line: 172, column: 13, scope: !6212)
!6259 = !DILocation(line: 172, column: 28, scope: !6212)
!6260 = !DILocation(line: 172, column: 31, scope: !6212)
!6261 = !DILocation(line: 172, column: 25, scope: !6212)
!6262 = !DILocation(line: 172, column: 43, scope: !6212)
!6263 = !DILocation(line: 173, column: 10, scope: !6212)
!6264 = !DILocation(line: 173, column: 13, scope: !6212)
!6265 = !DILocation(line: 173, column: 24, scope: !6212)
!6266 = !DILocation(line: 173, column: 27, scope: !6212)
!6267 = !DILocation(line: 173, column: 21, scope: !6212)
!6268 = !DILocation(line: 0, scope: !6212)
!6269 = !DILocation(line: 165, column: 2, scope: !6212)
!6270 = distinct !DISubprogram(name: "wm_keymap_find_item_equals", scope: !3, file: !3, line: 508, type: !6271, scopeLine: 509, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !356)
!6271 = !DISubroutineType(types: !6272)
!6272 = !{!287, !2188, !287}
!6273 = !DILocalVariable(name: "km", arg: 1, scope: !6270, file: !3, line: 508, type: !2188)
!6274 = !DILocation(line: 508, column: 59, scope: !6270)
!6275 = !DILocalVariable(name: "needle", arg: 2, scope: !6270, file: !3, line: 508, type: !287)
!6276 = !DILocation(line: 508, column: 77, scope: !6270)
!6277 = !DILocalVariable(name: "kmi", scope: !6270, file: !3, line: 510, type: !287)
!6278 = !DILocation(line: 510, column: 16, scope: !6270)
!6279 = !DILocation(line: 512, column: 13, scope: !6280)
!6280 = distinct !DILexicalBlock(scope: !6270, file: !3, line: 512, column: 2)
!6281 = !DILocation(line: 512, column: 17, scope: !6280)
!6282 = !DILocation(line: 512, column: 23, scope: !6280)
!6283 = !DILocation(line: 512, column: 11, scope: !6280)
!6284 = !DILocation(line: 512, column: 7, scope: !6280)
!6285 = !DILocation(line: 512, column: 30, scope: !6286)
!6286 = distinct !DILexicalBlock(scope: !6280, file: !3, line: 512, column: 2)
!6287 = !DILocation(line: 512, column: 2, scope: !6280)
!6288 = !DILocation(line: 513, column: 29, scope: !6289)
!6289 = distinct !DILexicalBlock(scope: !6286, file: !3, line: 513, column: 7)
!6290 = !DILocation(line: 513, column: 34, scope: !6289)
!6291 = !DILocation(line: 513, column: 7, scope: !6289)
!6292 = !DILocation(line: 513, column: 7, scope: !6286)
!6293 = !DILocation(line: 514, column: 11, scope: !6289)
!6294 = !DILocation(line: 514, column: 4, scope: !6289)
!6295 = !DILocation(line: 513, column: 40, scope: !6289)
!6296 = !DILocation(line: 512, column: 41, scope: !6286)
!6297 = !DILocation(line: 512, column: 46, scope: !6286)
!6298 = !DILocation(line: 512, column: 39, scope: !6286)
!6299 = !DILocation(line: 512, column: 2, scope: !6286)
!6300 = distinct !{!6300, !6287, !6301}
!6301 = !DILocation(line: 514, column: 11, scope: !6280)
!6302 = !DILocation(line: 516, column: 2, scope: !6270)
!6303 = !DILocation(line: 517, column: 1, scope: !6270)
!6304 = distinct !DISubprogram(name: "wm_keymap_item_equals_result", scope: !3, file: !3, line: 149, type: !3775, scopeLine: 150, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !356)
!6305 = !DILocalVariable(name: "a", arg: 1, scope: !6304, file: !3, line: 149, type: !287)
!6306 = !DILocation(line: 149, column: 55, scope: !6304)
!6307 = !DILocalVariable(name: "b", arg: 2, scope: !6304, file: !3, line: 149, type: !287)
!6308 = !DILocation(line: 149, column: 72, scope: !6304)
!6309 = !DILocation(line: 151, column: 13, scope: !6310)
!6310 = distinct !DILexicalBlock(scope: !6304, file: !3, line: 151, column: 6)
!6311 = !DILocation(line: 151, column: 16, scope: !6310)
!6312 = !DILocation(line: 151, column: 24, scope: !6310)
!6313 = !DILocation(line: 151, column: 27, scope: !6310)
!6314 = !DILocation(line: 151, column: 6, scope: !6310)
!6315 = !DILocation(line: 151, column: 35, scope: !6310)
!6316 = !DILocation(line: 151, column: 6, scope: !6304)
!6317 = !DILocation(line: 152, column: 3, scope: !6310)
!6318 = !DILocation(line: 154, column: 25, scope: !6319)
!6319 = distinct !DILexicalBlock(scope: !6304, file: !3, line: 154, column: 6)
!6320 = !DILocation(line: 154, column: 28, scope: !6319)
!6321 = !DILocation(line: 154, column: 33, scope: !6319)
!6322 = !DILocation(line: 154, column: 36, scope: !6319)
!6323 = !DILocation(line: 154, column: 7, scope: !6319)
!6324 = !DILocation(line: 154, column: 6, scope: !6304)
!6325 = !DILocation(line: 155, column: 3, scope: !6319)
!6326 = !DILocation(line: 157, column: 7, scope: !6327)
!6327 = distinct !DILexicalBlock(scope: !6304, file: !3, line: 157, column: 6)
!6328 = !DILocation(line: 157, column: 10, scope: !6327)
!6329 = !DILocation(line: 157, column: 15, scope: !6327)
!6330 = !DILocation(line: 157, column: 35, scope: !6327)
!6331 = !DILocation(line: 157, column: 38, scope: !6327)
!6332 = !DILocation(line: 157, column: 43, scope: !6327)
!6333 = !DILocation(line: 157, column: 31, scope: !6327)
!6334 = !DILocation(line: 157, column: 6, scope: !6304)
!6335 = !DILocation(line: 158, column: 3, scope: !6327)
!6336 = !DILocation(line: 160, column: 10, scope: !6304)
!6337 = !DILocation(line: 160, column: 13, scope: !6304)
!6338 = !DILocation(line: 160, column: 26, scope: !6304)
!6339 = !DILocation(line: 160, column: 29, scope: !6304)
!6340 = !DILocation(line: 160, column: 23, scope: !6304)
!6341 = !DILocation(line: 160, column: 2, scope: !6304)
!6342 = !DILocation(line: 161, column: 1, scope: !6304)
!6343 = distinct !DISubprogram(name: "wm_keymap_find_item_equals_result", scope: !3, file: !3, line: 519, type: !6271, scopeLine: 520, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !356)
!6344 = !DILocalVariable(name: "km", arg: 1, scope: !6343, file: !3, line: 519, type: !2188)
!6345 = !DILocation(line: 519, column: 66, scope: !6343)
!6346 = !DILocalVariable(name: "needle", arg: 2, scope: !6343, file: !3, line: 519, type: !287)
!6347 = !DILocation(line: 519, column: 84, scope: !6343)
!6348 = !DILocalVariable(name: "kmi", scope: !6343, file: !3, line: 521, type: !287)
!6349 = !DILocation(line: 521, column: 16, scope: !6343)
!6350 = !DILocation(line: 523, column: 13, scope: !6351)
!6351 = distinct !DILexicalBlock(scope: !6343, file: !3, line: 523, column: 2)
!6352 = !DILocation(line: 523, column: 17, scope: !6351)
!6353 = !DILocation(line: 523, column: 23, scope: !6351)
!6354 = !DILocation(line: 523, column: 11, scope: !6351)
!6355 = !DILocation(line: 523, column: 7, scope: !6351)
!6356 = !DILocation(line: 523, column: 30, scope: !6357)
!6357 = distinct !DILexicalBlock(scope: !6351, file: !3, line: 523, column: 2)
!6358 = !DILocation(line: 523, column: 2, scope: !6351)
!6359 = !DILocation(line: 524, column: 36, scope: !6360)
!6360 = distinct !DILexicalBlock(scope: !6357, file: !3, line: 524, column: 7)
!6361 = !DILocation(line: 524, column: 41, scope: !6360)
!6362 = !DILocation(line: 524, column: 7, scope: !6360)
!6363 = !DILocation(line: 524, column: 7, scope: !6357)
!6364 = !DILocation(line: 525, column: 11, scope: !6360)
!6365 = !DILocation(line: 525, column: 4, scope: !6360)
!6366 = !DILocation(line: 524, column: 47, scope: !6360)
!6367 = !DILocation(line: 523, column: 41, scope: !6357)
!6368 = !DILocation(line: 523, column: 46, scope: !6357)
!6369 = !DILocation(line: 523, column: 39, scope: !6357)
!6370 = !DILocation(line: 523, column: 2, scope: !6357)
!6371 = distinct !{!6371, !6358, !6372}
!6372 = !DILocation(line: 525, column: 11, scope: !6351)
!6373 = !DILocation(line: 527, column: 2, scope: !6343)
!6374 = !DILocation(line: 528, column: 1, scope: !6343)
!6375 = distinct !DISubprogram(name: "wm_keymap_patch", scope: !3, file: !3, line: 576, type: !4706, scopeLine: 577, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !356)
!6376 = !DILocalVariable(name: "km", arg: 1, scope: !6375, file: !3, line: 576, type: !2188)
!6377 = !DILocation(line: 576, column: 39, scope: !6375)
!6378 = !DILocalVariable(name: "diff_km", arg: 2, scope: !6375, file: !3, line: 576, type: !2188)
!6379 = !DILocation(line: 576, column: 53, scope: !6375)
!6380 = !DILocalVariable(name: "kmdi", scope: !6375, file: !3, line: 578, type: !2258)
!6381 = !DILocation(line: 578, column: 20, scope: !6375)
!6382 = !DILocalVariable(name: "kmi_remove", scope: !6375, file: !3, line: 579, type: !287)
!6383 = !DILocation(line: 579, column: 16, scope: !6375)
!6384 = !DILocalVariable(name: "kmi_add", scope: !6375, file: !3, line: 579, type: !287)
!6385 = !DILocation(line: 579, column: 29, scope: !6375)
!6386 = !DILocation(line: 581, column: 14, scope: !6387)
!6387 = distinct !DILexicalBlock(scope: !6375, file: !3, line: 581, column: 2)
!6388 = !DILocation(line: 581, column: 23, scope: !6387)
!6389 = !DILocation(line: 581, column: 34, scope: !6387)
!6390 = !DILocation(line: 581, column: 12, scope: !6387)
!6391 = !DILocation(line: 581, column: 7, scope: !6387)
!6392 = !DILocation(line: 581, column: 41, scope: !6393)
!6393 = distinct !DILexicalBlock(scope: !6387, file: !3, line: 581, column: 2)
!6394 = !DILocation(line: 581, column: 2, scope: !6387)
!6395 = !DILocation(line: 583, column: 14, scope: !6396)
!6396 = distinct !DILexicalBlock(scope: !6393, file: !3, line: 581, column: 66)
!6397 = !DILocation(line: 584, column: 7, scope: !6398)
!6398 = distinct !DILexicalBlock(scope: !6396, file: !3, line: 584, column: 7)
!6399 = !DILocation(line: 584, column: 13, scope: !6398)
!6400 = !DILocation(line: 584, column: 7, scope: !6396)
!6401 = !DILocation(line: 585, column: 44, scope: !6402)
!6402 = distinct !DILexicalBlock(scope: !6398, file: !3, line: 584, column: 26)
!6403 = !DILocation(line: 585, column: 48, scope: !6402)
!6404 = !DILocation(line: 585, column: 54, scope: !6402)
!6405 = !DILocation(line: 585, column: 17, scope: !6402)
!6406 = !DILocation(line: 585, column: 15, scope: !6402)
!6407 = !DILocation(line: 586, column: 9, scope: !6408)
!6408 = distinct !DILexicalBlock(scope: !6402, file: !3, line: 586, column: 8)
!6409 = !DILocation(line: 586, column: 8, scope: !6402)
!6410 = !DILocation(line: 587, column: 52, scope: !6408)
!6411 = !DILocation(line: 587, column: 56, scope: !6408)
!6412 = !DILocation(line: 587, column: 62, scope: !6408)
!6413 = !DILocation(line: 587, column: 18, scope: !6408)
!6414 = !DILocation(line: 587, column: 16, scope: !6408)
!6415 = !DILocation(line: 587, column: 5, scope: !6408)
!6416 = !DILocation(line: 588, column: 3, scope: !6402)
!6417 = !DILocation(line: 591, column: 7, scope: !6418)
!6418 = distinct !DILexicalBlock(scope: !6396, file: !3, line: 591, column: 7)
!6419 = !DILocation(line: 591, column: 13, scope: !6418)
!6420 = !DILocation(line: 591, column: 7, scope: !6396)
!6421 = !DILocation(line: 594, column: 41, scope: !6422)
!6422 = distinct !DILexicalBlock(scope: !6418, file: !3, line: 591, column: 23)
!6423 = !DILocation(line: 594, column: 45, scope: !6422)
!6424 = !DILocation(line: 594, column: 51, scope: !6422)
!6425 = !DILocation(line: 594, column: 14, scope: !6422)
!6426 = !DILocation(line: 594, column: 12, scope: !6422)
!6427 = !DILocation(line: 596, column: 9, scope: !6428)
!6428 = distinct !DILexicalBlock(scope: !6422, file: !3, line: 596, column: 8)
!6429 = !DILocation(line: 596, column: 17, scope: !6428)
!6430 = !DILocation(line: 596, column: 22, scope: !6428)
!6431 = !DILocation(line: 596, column: 28, scope: !6428)
!6432 = !DILocation(line: 596, column: 40, scope: !6428)
!6433 = !DILocation(line: 596, column: 43, scope: !6428)
!6434 = !DILocation(line: 596, column: 8, scope: !6422)
!6435 = !DILocation(line: 597, column: 35, scope: !6436)
!6436 = distinct !DILexicalBlock(scope: !6428, file: !3, line: 596, column: 56)
!6437 = !DILocation(line: 597, column: 41, scope: !6436)
!6438 = !DILocation(line: 597, column: 15, scope: !6436)
!6439 = !DILocation(line: 597, column: 13, scope: !6436)
!6440 = !DILocation(line: 598, column: 5, scope: !6436)
!6441 = !DILocation(line: 598, column: 14, scope: !6436)
!6442 = !DILocation(line: 598, column: 19, scope: !6436)
!6443 = !DILocation(line: 600, column: 9, scope: !6444)
!6444 = distinct !DILexicalBlock(scope: !6436, file: !3, line: 600, column: 9)
!6445 = !DILocation(line: 600, column: 9, scope: !6436)
!6446 = !DILocation(line: 601, column: 6, scope: !6447)
!6447 = distinct !DILexicalBlock(scope: !6444, file: !3, line: 600, column: 21)
!6448 = !DILocation(line: 601, column: 15, scope: !6447)
!6449 = !DILocation(line: 601, column: 20, scope: !6447)
!6450 = !DILocation(line: 602, column: 24, scope: !6447)
!6451 = !DILocation(line: 602, column: 36, scope: !6447)
!6452 = !DILocation(line: 602, column: 41, scope: !6447)
!6453 = !DILocation(line: 602, column: 6, scope: !6447)
!6454 = !DILocation(line: 602, column: 15, scope: !6447)
!6455 = !DILocation(line: 602, column: 20, scope: !6447)
!6456 = !DILocation(line: 603, column: 20, scope: !6447)
!6457 = !DILocation(line: 603, column: 32, scope: !6447)
!6458 = !DILocation(line: 603, column: 6, scope: !6447)
!6459 = !DILocation(line: 603, column: 15, scope: !6447)
!6460 = !DILocation(line: 603, column: 18, scope: !6447)
!6461 = !DILocation(line: 604, column: 28, scope: !6447)
!6462 = !DILocation(line: 604, column: 32, scope: !6447)
!6463 = !DILocation(line: 604, column: 39, scope: !6447)
!6464 = !DILocation(line: 604, column: 51, scope: !6447)
!6465 = !DILocation(line: 604, column: 6, scope: !6447)
!6466 = !DILocation(line: 605, column: 5, scope: !6447)
!6467 = !DILocation(line: 607, column: 25, scope: !6468)
!6468 = distinct !DILexicalBlock(scope: !6444, file: !3, line: 606, column: 10)
!6469 = !DILocation(line: 607, column: 29, scope: !6468)
!6470 = !DILocation(line: 607, column: 6, scope: !6468)
!6471 = !DILocation(line: 608, column: 19, scope: !6468)
!6472 = !DILocation(line: 608, column: 23, scope: !6468)
!6473 = !DILocation(line: 608, column: 30, scope: !6468)
!6474 = !DILocation(line: 608, column: 6, scope: !6468)
!6475 = !DILocation(line: 610, column: 4, scope: !6436)
!6476 = !DILocation(line: 611, column: 3, scope: !6422)
!6477 = !DILocation(line: 614, column: 7, scope: !6478)
!6478 = distinct !DILexicalBlock(scope: !6396, file: !3, line: 614, column: 7)
!6479 = !DILocation(line: 614, column: 7, scope: !6396)
!6480 = !DILocation(line: 615, column: 24, scope: !6481)
!6481 = distinct !DILexicalBlock(scope: !6478, file: !3, line: 614, column: 19)
!6482 = !DILocation(line: 615, column: 4, scope: !6481)
!6483 = !DILocation(line: 616, column: 19, scope: !6481)
!6484 = !DILocation(line: 616, column: 23, scope: !6481)
!6485 = !DILocation(line: 616, column: 30, scope: !6481)
!6486 = !DILocation(line: 616, column: 4, scope: !6481)
!6487 = !DILocation(line: 617, column: 3, scope: !6481)
!6488 = !DILocation(line: 618, column: 2, scope: !6396)
!6489 = !DILocation(line: 581, column: 54, scope: !6393)
!6490 = !DILocation(line: 581, column: 60, scope: !6393)
!6491 = !DILocation(line: 581, column: 52, scope: !6393)
!6492 = !DILocation(line: 581, column: 2, scope: !6393)
!6493 = distinct !{!6493, !6394, !6494}
!6494 = !DILocation(line: 618, column: 2, scope: !6387)
!6495 = !DILocation(line: 619, column: 1, scope: !6375)
!6496 = distinct !DISubprogram(name: "BLI_listbase_clear", scope: !6497, file: !6497, line: 89, type: !6498, scopeLine: 89, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !356)
!6497 = !DIFile(filename: "blender/source/blender/blenlib/BLI_listbase.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!6498 = !DISubroutineType(types: !6499)
!6499 = !{null, !6500}
!6500 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !321, size: 64)
!6501 = !DILocalVariable(name: "lb", arg: 1, scope: !6496, file: !6497, line: 89, type: !6500)
!6502 = !DILocation(line: 89, column: 53, scope: !6496)
!6503 = !DILocation(line: 89, column: 71, scope: !6496)
!6504 = !DILocation(line: 89, column: 75, scope: !6496)
!6505 = !DILocation(line: 89, column: 80, scope: !6496)
!6506 = !DILocation(line: 89, column: 59, scope: !6496)
!6507 = !DILocation(line: 89, column: 63, scope: !6496)
!6508 = !DILocation(line: 89, column: 69, scope: !6496)
!6509 = !DILocation(line: 89, column: 93, scope: !6496)
!6510 = distinct !DISubprogram(name: "wm_keymap_diff_item_copy", scope: !3, file: !3, line: 218, type: !6511, scopeLine: 219, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !356)
!6511 = !DISubroutineType(types: !6512)
!6512 = !{!2258, !2258}
!6513 = !DILocalVariable(name: "kmdi", arg: 1, scope: !6510, file: !3, line: 218, type: !2258)
!6514 = !DILocation(line: 218, column: 69, scope: !6510)
!6515 = !DILocalVariable(name: "kmdin", scope: !6510, file: !3, line: 220, type: !2258)
!6516 = !DILocation(line: 220, column: 20, scope: !6510)
!6517 = !DILocation(line: 220, column: 28, scope: !6510)
!6518 = !DILocation(line: 220, column: 42, scope: !6510)
!6519 = !DILocation(line: 222, column: 16, scope: !6510)
!6520 = !DILocation(line: 222, column: 23, scope: !6510)
!6521 = !DILocation(line: 222, column: 28, scope: !6510)
!6522 = !DILocation(line: 222, column: 2, scope: !6510)
!6523 = !DILocation(line: 222, column: 9, scope: !6510)
!6524 = !DILocation(line: 222, column: 14, scope: !6510)
!6525 = !DILocation(line: 223, column: 6, scope: !6526)
!6526 = distinct !DILexicalBlock(scope: !6510, file: !3, line: 223, column: 6)
!6527 = !DILocation(line: 223, column: 12, scope: !6526)
!6528 = !DILocation(line: 223, column: 6, scope: !6510)
!6529 = !DILocation(line: 224, column: 41, scope: !6526)
!6530 = !DILocation(line: 224, column: 47, scope: !6526)
!6531 = !DILocation(line: 224, column: 21, scope: !6526)
!6532 = !DILocation(line: 224, column: 3, scope: !6526)
!6533 = !DILocation(line: 224, column: 10, scope: !6526)
!6534 = !DILocation(line: 224, column: 19, scope: !6526)
!6535 = !DILocation(line: 225, column: 6, scope: !6536)
!6536 = distinct !DILexicalBlock(scope: !6510, file: !3, line: 225, column: 6)
!6537 = !DILocation(line: 225, column: 12, scope: !6536)
!6538 = !DILocation(line: 225, column: 6, scope: !6510)
!6539 = !DILocation(line: 226, column: 44, scope: !6536)
!6540 = !DILocation(line: 226, column: 50, scope: !6536)
!6541 = !DILocation(line: 226, column: 24, scope: !6536)
!6542 = !DILocation(line: 226, column: 3, scope: !6536)
!6543 = !DILocation(line: 226, column: 10, scope: !6536)
!6544 = !DILocation(line: 226, column: 22, scope: !6536)
!6545 = !DILocation(line: 228, column: 9, scope: !6510)
!6546 = !DILocation(line: 228, column: 2, scope: !6510)
