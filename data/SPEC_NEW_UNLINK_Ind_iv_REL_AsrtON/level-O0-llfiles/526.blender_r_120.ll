; ModuleID = 'blender/source/blender/blenkernel/intern/CCGSubSurf.c'
source_filename = "blender/source/blender/blenkernel/intern/CCGSubSurf.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.CCGAllocatorIFC = type { i8* (i8*, i32)*, i8* (i8*, i8*, i32, i32)*, void (i8*, i8*)*, void (i8*)* }
%struct.CCGSubSurf = type { %struct._EHash*, %struct._EHash*, %struct._EHash*, %struct.CCGMeshIFC, %struct.CCGAllocatorIFC, i8*, i32, i32, i32, float, i8*, i8*, i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct._EHash*, %struct._EHash*, %struct._EHash*, i32, %struct.CCGVert**, %struct.CCGEdge** }
%struct.CCGMeshIFC = type { i32, i32, i32, i32, i32, i32 }
%struct._EHash = type { %struct._EHEntry**, i32, i32, i32, %struct.CCGAllocatorIFC, i8* }
%struct._EHEntry = type { %struct._EHEntry*, i8* }
%struct.CCGVert = type { %struct.CCGVert*, i8*, i16, i16, i16, i16, %struct.CCGEdge**, %struct.CCGFace** }
%struct.CCGFace = type { %struct.CCGFace*, i8*, i16, i16, i16, i16 }
%struct.CCGEdge = type { %struct.CCGEdge*, i8*, i16, i16, float, %struct.CCGVert*, %struct.CCGVert*, %struct.CCGFace** }
%struct.CCGVertIterator = type opaque
%struct._EHashIterator = type { %struct._EHash*, i32, %struct._EHEntry* }
%struct.CCGEdgeIterator = type opaque
%struct.CCGFaceIterator = type opaque
%struct.CCGKey = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }

@MEM_freeN = external dso_local global void (i8*)*, align 8
@MEM_mallocN = external dso_local global i8* (i64, i8*)*, align 8
@.str = private unnamed_addr constant [21 x i8] c"CCGSubsurf tempVerts\00", align 1
@.str.1 = private unnamed_addr constant [21 x i8] c"CCGSubsurf tempEdges\00", align 1
@MEM_reallocN_id = external dso_local global i8* (i8*, i64, i8*)*, align 8
@__func__.ccgSubSurf_syncFace = private unnamed_addr constant [20 x i8] c"ccgSubSurf_syncFace\00", align 1
@_getStandardAllocatorIFC.ifc = internal global %struct.CCGAllocatorIFC zeroinitializer, align 8, !dbg !0
@kHashSizes = internal global [29 x i32] [i32 1, i32 3, i32 5, i32 11, i32 17, i32 37, i32 67, i32 131, i32 257, i32 521, i32 1031, i32 2053, i32 4099, i32 8209, i32 16411, i32 32771, i32 65537, i32 131101, i32 262147, i32 524309, i32 1048583, i32 2097169, i32 4194319, i32 8388617, i32 16777259, i32 33554467, i32 67108879, i32 134217757, i32 268435459], align 16, !dbg !146
@.str.2 = private unnamed_addr constant [21 x i8] c"CCGSubsurf effectedV\00", align 1
@.str.3 = private unnamed_addr constant [21 x i8] c"CCGSubsurf effectedE\00", align 1
@.str.4 = private unnamed_addr constant [21 x i8] c"CCGSubsurf effectedF\00", align 1
@.str.5 = private unnamed_addr constant [20 x i8] c"CCGSubsurf allFaces\00", align 1
@.str.6 = private unnamed_addr constant [18 x i8] c"CCGSubsurf arrayV\00", align 1
@.str.7 = private unnamed_addr constant [13 x i8] c"CCGSubsurf q\00", align 1
@.str.8 = private unnamed_addr constant [13 x i8] c"CCGSubsurf r\00", align 1

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @BKE_ccg_gridsize(i32 %level) #0 !dbg !156 {
entry:
  %level.addr = alloca i32, align 4
  store i32 %level, i32* %level.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %level.addr, metadata !159, metadata !DIExpression()), !dbg !160
  %0 = load i32, i32* %level.addr, align 4, !dbg !161
  %call = call i32 @ccg_gridsize(i32 %0), !dbg !162
  ret i32 %call, !dbg !163
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: noinline nounwind uwtable
define internal i32 @ccg_gridsize(i32 %level) #0 !dbg !164 {
entry:
  %level.addr = alloca i32, align 4
  store i32 %level, i32* %level.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %level.addr, metadata !165, metadata !DIExpression()), !dbg !166
  %0 = load i32, i32* %level.addr, align 4, !dbg !167
  %sub = sub nsw i32 %0, 1, !dbg !168
  %shl = shl i32 1, %sub, !dbg !169
  %add = add nsw i32 %shl, 1, !dbg !170
  ret i32 %add, !dbg !171
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @BKE_ccg_factor(i32 %low_level, i32 %high_level) #0 !dbg !172 {
entry:
  %low_level.addr = alloca i32, align 4
  %high_level.addr = alloca i32, align 4
  store i32 %low_level, i32* %low_level.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %low_level.addr, metadata !175, metadata !DIExpression()), !dbg !176
  store i32 %high_level, i32* %high_level.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %high_level.addr, metadata !177, metadata !DIExpression()), !dbg !178
  %0 = load i32, i32* %high_level.addr, align 4, !dbg !179
  %1 = load i32, i32* %low_level.addr, align 4, !dbg !180
  %sub = sub nsw i32 %0, %1, !dbg !181
  %shl = shl i32 1, %sub, !dbg !182
  ret i32 %shl, !dbg !183
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.CCGSubSurf* @ccgSubSurf_new(%struct.CCGMeshIFC* %ifc, i32 %subdivLevels, %struct.CCGAllocatorIFC* %allocatorIFC, i8* %allocator) #0 !dbg !184 {
entry:
  %retval = alloca %struct.CCGSubSurf*, align 8
  %ifc.addr = alloca %struct.CCGMeshIFC*, align 8
  %subdivLevels.addr = alloca i32, align 4
  %allocatorIFC.addr = alloca %struct.CCGAllocatorIFC*, align 8
  %allocator.addr = alloca i8*, align 8
  %ss = alloca %struct.CCGSubSurf*, align 8
  store %struct.CCGMeshIFC* %ifc, %struct.CCGMeshIFC** %ifc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGMeshIFC** %ifc.addr, metadata !231, metadata !DIExpression()), !dbg !232
  store i32 %subdivLevels, i32* %subdivLevels.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %subdivLevels.addr, metadata !233, metadata !DIExpression()), !dbg !234
  store %struct.CCGAllocatorIFC* %allocatorIFC, %struct.CCGAllocatorIFC** %allocatorIFC.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGAllocatorIFC** %allocatorIFC.addr, metadata !235, metadata !DIExpression()), !dbg !236
  store i8* %allocator, i8** %allocator.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %allocator.addr, metadata !237, metadata !DIExpression()), !dbg !238
  %0 = load %struct.CCGAllocatorIFC*, %struct.CCGAllocatorIFC** %allocatorIFC.addr, align 8, !dbg !239
  %tobool = icmp ne %struct.CCGAllocatorIFC* %0, null, !dbg !239
  br i1 %tobool, label %if.end, label %if.then, !dbg !241

if.then:                                          ; preds = %entry
  %call = call %struct.CCGAllocatorIFC* @_getStandardAllocatorIFC(), !dbg !242
  store %struct.CCGAllocatorIFC* %call, %struct.CCGAllocatorIFC** %allocatorIFC.addr, align 8, !dbg !244
  store i8* null, i8** %allocator.addr, align 8, !dbg !245
  br label %if.end, !dbg !246

if.end:                                           ; preds = %if.then, %entry
  %1 = load i32, i32* %subdivLevels.addr, align 4, !dbg !247
  %cmp = icmp slt i32 %1, 1, !dbg !249
  br i1 %cmp, label %if.then1, label %if.else, !dbg !250

if.then1:                                         ; preds = %if.end
  store %struct.CCGSubSurf* null, %struct.CCGSubSurf** %retval, align 8, !dbg !251
  br label %return, !dbg !251

if.else:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata %struct.CCGSubSurf** %ss, metadata !253, metadata !DIExpression()), !dbg !255
  %2 = load %struct.CCGAllocatorIFC*, %struct.CCGAllocatorIFC** %allocatorIFC.addr, align 8, !dbg !256
  %alloc = getelementptr inbounds %struct.CCGAllocatorIFC, %struct.CCGAllocatorIFC* %2, i32 0, i32 0, !dbg !257
  %3 = load i8* (i8*, i32)*, i8* (i8*, i32)** %alloc, align 8, !dbg !257
  %4 = load i8*, i8** %allocator.addr, align 8, !dbg !258
  %call2 = call i8* %3(i8* %4, i32 216), !dbg !256
  %5 = bitcast i8* %call2 to %struct.CCGSubSurf*, !dbg !256
  store %struct.CCGSubSurf* %5, %struct.CCGSubSurf** %ss, align 8, !dbg !255
  %6 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !259
  %allocatorIFC3 = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %6, i32 0, i32 4, !dbg !260
  %7 = load %struct.CCGAllocatorIFC*, %struct.CCGAllocatorIFC** %allocatorIFC.addr, align 8, !dbg !261
  %8 = bitcast %struct.CCGAllocatorIFC* %allocatorIFC3 to i8*, !dbg !262
  %9 = bitcast %struct.CCGAllocatorIFC* %7 to i8*, !dbg !262
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 %9, i64 32, i1 false), !dbg !262
  %10 = load i8*, i8** %allocator.addr, align 8, !dbg !263
  %11 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !264
  %allocator4 = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %11, i32 0, i32 5, !dbg !265
  store i8* %10, i8** %allocator4, align 8, !dbg !266
  %12 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !267
  %allocatorIFC5 = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %12, i32 0, i32 4, !dbg !268
  %13 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !269
  %allocator6 = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %13, i32 0, i32 5, !dbg !270
  %14 = load i8*, i8** %allocator6, align 8, !dbg !270
  %call7 = call %struct._EHash* @_ehash_new(i32 0, %struct.CCGAllocatorIFC* %allocatorIFC5, i8* %14), !dbg !271
  %15 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !272
  %vMap = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %15, i32 0, i32 0, !dbg !273
  store %struct._EHash* %call7, %struct._EHash** %vMap, align 8, !dbg !274
  %16 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !275
  %allocatorIFC8 = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %16, i32 0, i32 4, !dbg !276
  %17 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !277
  %allocator9 = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %17, i32 0, i32 5, !dbg !278
  %18 = load i8*, i8** %allocator9, align 8, !dbg !278
  %call10 = call %struct._EHash* @_ehash_new(i32 0, %struct.CCGAllocatorIFC* %allocatorIFC8, i8* %18), !dbg !279
  %19 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !280
  %eMap = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %19, i32 0, i32 1, !dbg !281
  store %struct._EHash* %call10, %struct._EHash** %eMap, align 8, !dbg !282
  %20 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !283
  %allocatorIFC11 = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %20, i32 0, i32 4, !dbg !284
  %21 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !285
  %allocator12 = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %21, i32 0, i32 5, !dbg !286
  %22 = load i8*, i8** %allocator12, align 8, !dbg !286
  %call13 = call %struct._EHash* @_ehash_new(i32 0, %struct.CCGAllocatorIFC* %allocatorIFC11, i8* %22), !dbg !287
  %23 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !288
  %fMap = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %23, i32 0, i32 2, !dbg !289
  store %struct._EHash* %call13, %struct._EHash** %fMap, align 8, !dbg !290
  %24 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !291
  %meshIFC = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %24, i32 0, i32 3, !dbg !292
  %25 = load %struct.CCGMeshIFC*, %struct.CCGMeshIFC** %ifc.addr, align 8, !dbg !293
  %26 = bitcast %struct.CCGMeshIFC* %meshIFC to i8*, !dbg !294
  %27 = bitcast %struct.CCGMeshIFC* %25 to i8*, !dbg !294
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %26, i8* align 4 %27, i64 24, i1 false), !dbg !294
  %28 = load i32, i32* %subdivLevels.addr, align 4, !dbg !295
  %29 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !296
  %subdivLevels14 = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %29, i32 0, i32 6, !dbg !297
  store i32 %28, i32* %subdivLevels14, align 8, !dbg !298
  %30 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !299
  %numGrids = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %30, i32 0, i32 7, !dbg !300
  store i32 0, i32* %numGrids, align 4, !dbg !301
  %31 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !302
  %allowEdgeCreation = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %31, i32 0, i32 8, !dbg !303
  store i32 0, i32* %allowEdgeCreation, align 8, !dbg !304
  %32 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !305
  %defaultCreaseValue = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %32, i32 0, i32 9, !dbg !306
  store float 0.000000e+00, float* %defaultCreaseValue, align 4, !dbg !307
  %33 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !308
  %defaultEdgeUserData = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %33, i32 0, i32 10, !dbg !309
  store i8* null, i8** %defaultEdgeUserData, align 8, !dbg !310
  %34 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !311
  %useAgeCounts = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %34, i32 0, i32 18, !dbg !312
  store i32 0, i32* %useAgeCounts, align 4, !dbg !313
  %35 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !314
  %faceUserAgeOffset = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %35, i32 0, i32 21, !dbg !315
  store i32 0, i32* %faceUserAgeOffset, align 8, !dbg !316
  %36 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !317
  %edgeUserAgeOffset = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %36, i32 0, i32 20, !dbg !318
  store i32 0, i32* %edgeUserAgeOffset, align 4, !dbg !319
  %37 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !320
  %vertUserAgeOffset = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %37, i32 0, i32 19, !dbg !321
  store i32 0, i32* %vertUserAgeOffset, align 8, !dbg !322
  %38 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !323
  %calcVertNormals = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %38, i32 0, i32 13, !dbg !324
  store i32 0, i32* %calcVertNormals, align 8, !dbg !325
  %39 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !326
  %normalDataOffset = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %39, i32 0, i32 14, !dbg !327
  store i32 0, i32* %normalDataOffset, align 4, !dbg !328
  %40 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !329
  %allocMask = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %40, i32 0, i32 15, !dbg !330
  store i32 0, i32* %allocMask, align 8, !dbg !331
  %41 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !332
  %allocatorIFC15 = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %41, i32 0, i32 4, !dbg !332
  %alloc16 = getelementptr inbounds %struct.CCGAllocatorIFC, %struct.CCGAllocatorIFC* %allocatorIFC15, i32 0, i32 0, !dbg !332
  %42 = load i8* (i8*, i32)*, i8* (i8*, i32)** %alloc16, align 8, !dbg !332
  %43 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !332
  %allocator17 = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %43, i32 0, i32 5, !dbg !332
  %44 = load i8*, i8** %allocator17, align 8, !dbg !332
  %45 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !332
  %meshIFC18 = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %45, i32 0, i32 3, !dbg !332
  %vertDataSize = getelementptr inbounds %struct.CCGMeshIFC, %struct.CCGMeshIFC* %meshIFC18, i32 0, i32 4, !dbg !332
  %46 = load i32, i32* %vertDataSize, align 8, !dbg !332
  %call19 = call i8* %42(i8* %44, i32 %46), !dbg !332
  %47 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !333
  %q = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %47, i32 0, i32 11, !dbg !334
  store i8* %call19, i8** %q, align 8, !dbg !335
  %48 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !336
  %allocatorIFC20 = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %48, i32 0, i32 4, !dbg !336
  %alloc21 = getelementptr inbounds %struct.CCGAllocatorIFC, %struct.CCGAllocatorIFC* %allocatorIFC20, i32 0, i32 0, !dbg !336
  %49 = load i8* (i8*, i32)*, i8* (i8*, i32)** %alloc21, align 8, !dbg !336
  %50 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !336
  %allocator22 = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %50, i32 0, i32 5, !dbg !336
  %51 = load i8*, i8** %allocator22, align 8, !dbg !336
  %52 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !336
  %meshIFC23 = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %52, i32 0, i32 3, !dbg !336
  %vertDataSize24 = getelementptr inbounds %struct.CCGMeshIFC, %struct.CCGMeshIFC* %meshIFC23, i32 0, i32 4, !dbg !336
  %53 = load i32, i32* %vertDataSize24, align 8, !dbg !336
  %call25 = call i8* %49(i8* %51, i32 %53), !dbg !336
  %54 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !337
  %r = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %54, i32 0, i32 12, !dbg !338
  store i8* %call25, i8** %r, align 8, !dbg !339
  %55 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !340
  %currentAge = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %55, i32 0, i32 17, !dbg !341
  store i32 0, i32* %currentAge, align 8, !dbg !342
  %56 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !343
  %syncState = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %56, i32 0, i32 22, !dbg !344
  store i32 0, i32* %syncState, align 4, !dbg !345
  %57 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !346
  %oldFMap = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %57, i32 0, i32 25, !dbg !347
  store %struct._EHash* null, %struct._EHash** %oldFMap, align 8, !dbg !348
  %58 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !349
  %oldEMap = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %58, i32 0, i32 24, !dbg !350
  store %struct._EHash* null, %struct._EHash** %oldEMap, align 8, !dbg !351
  %59 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !352
  %oldVMap = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %59, i32 0, i32 23, !dbg !353
  store %struct._EHash* null, %struct._EHash** %oldVMap, align 8, !dbg !354
  %60 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !355
  %lenTempArrays = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %60, i32 0, i32 26, !dbg !356
  store i32 0, i32* %lenTempArrays, align 8, !dbg !357
  %61 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !358
  %tempVerts = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %61, i32 0, i32 27, !dbg !359
  store %struct.CCGVert** null, %struct.CCGVert*** %tempVerts, align 8, !dbg !360
  %62 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !361
  %tempEdges = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %62, i32 0, i32 28, !dbg !362
  store %struct.CCGEdge** null, %struct.CCGEdge*** %tempEdges, align 8, !dbg !363
  %63 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !364
  store %struct.CCGSubSurf* %63, %struct.CCGSubSurf** %retval, align 8, !dbg !365
  br label %return, !dbg !365

return:                                           ; preds = %if.else, %if.then1
  %64 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %retval, align 8, !dbg !366
  ret %struct.CCGSubSurf* %64, !dbg !366
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.CCGAllocatorIFC* @_getStandardAllocatorIFC() #0 !dbg !2 {
entry:
  store i8* (i8*, i32)* @_stdAllocator_alloc, i8* (i8*, i32)** getelementptr inbounds (%struct.CCGAllocatorIFC, %struct.CCGAllocatorIFC* @_getStandardAllocatorIFC.ifc, i32 0, i32 0), align 8, !dbg !367
  store i8* (i8*, i8*, i32, i32)* @_stdAllocator_realloc, i8* (i8*, i8*, i32, i32)** getelementptr inbounds (%struct.CCGAllocatorIFC, %struct.CCGAllocatorIFC* @_getStandardAllocatorIFC.ifc, i32 0, i32 1), align 8, !dbg !368
  store void (i8*, i8*)* @_stdAllocator_free, void (i8*, i8*)** getelementptr inbounds (%struct.CCGAllocatorIFC, %struct.CCGAllocatorIFC* @_getStandardAllocatorIFC.ifc, i32 0, i32 2), align 8, !dbg !369
  store void (i8*)* null, void (i8*)** getelementptr inbounds (%struct.CCGAllocatorIFC, %struct.CCGAllocatorIFC* @_getStandardAllocatorIFC.ifc, i32 0, i32 3), align 8, !dbg !370
  ret %struct.CCGAllocatorIFC* @_getStandardAllocatorIFC.ifc, !dbg !371
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #2

; Function Attrs: noinline nounwind uwtable
define internal %struct._EHash* @_ehash_new(i32 %estimatedNumEntries, %struct.CCGAllocatorIFC* %allocatorIFC, i8* %allocator) #0 !dbg !372 {
entry:
  %estimatedNumEntries.addr = alloca i32, align 4
  %allocatorIFC.addr = alloca %struct.CCGAllocatorIFC*, align 8
  %allocator.addr = alloca i8*, align 8
  %eh = alloca %struct._EHash*, align 8
  store i32 %estimatedNumEntries, i32* %estimatedNumEntries.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %estimatedNumEntries.addr, metadata !375, metadata !DIExpression()), !dbg !376
  store %struct.CCGAllocatorIFC* %allocatorIFC, %struct.CCGAllocatorIFC** %allocatorIFC.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGAllocatorIFC** %allocatorIFC.addr, metadata !377, metadata !DIExpression()), !dbg !378
  store i8* %allocator, i8** %allocator.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %allocator.addr, metadata !379, metadata !DIExpression()), !dbg !380
  call void @llvm.dbg.declare(metadata %struct._EHash** %eh, metadata !381, metadata !DIExpression()), !dbg !382
  %0 = load %struct.CCGAllocatorIFC*, %struct.CCGAllocatorIFC** %allocatorIFC.addr, align 8, !dbg !383
  %alloc = getelementptr inbounds %struct.CCGAllocatorIFC, %struct.CCGAllocatorIFC* %0, i32 0, i32 0, !dbg !384
  %1 = load i8* (i8*, i32)*, i8* (i8*, i32)** %alloc, align 8, !dbg !384
  %2 = load i8*, i8** %allocator.addr, align 8, !dbg !385
  %call = call i8* %1(i8* %2, i32 64), !dbg !383
  %3 = bitcast i8* %call to %struct._EHash*, !dbg !383
  store %struct._EHash* %3, %struct._EHash** %eh, align 8, !dbg !382
  %4 = load %struct._EHash*, %struct._EHash** %eh, align 8, !dbg !386
  %allocatorIFC1 = getelementptr inbounds %struct._EHash, %struct._EHash* %4, i32 0, i32 4, !dbg !387
  %5 = load %struct.CCGAllocatorIFC*, %struct.CCGAllocatorIFC** %allocatorIFC.addr, align 8, !dbg !388
  %6 = bitcast %struct.CCGAllocatorIFC* %allocatorIFC1 to i8*, !dbg !389
  %7 = bitcast %struct.CCGAllocatorIFC* %5 to i8*, !dbg !389
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %6, i8* align 8 %7, i64 32, i1 false), !dbg !389
  %8 = load i8*, i8** %allocator.addr, align 8, !dbg !390
  %9 = load %struct._EHash*, %struct._EHash** %eh, align 8, !dbg !391
  %allocator2 = getelementptr inbounds %struct._EHash, %struct._EHash* %9, i32 0, i32 5, !dbg !392
  store i8* %8, i8** %allocator2, align 8, !dbg !393
  %10 = load %struct._EHash*, %struct._EHash** %eh, align 8, !dbg !394
  %numEntries = getelementptr inbounds %struct._EHash, %struct._EHash* %10, i32 0, i32 1, !dbg !395
  store i32 0, i32* %numEntries, align 8, !dbg !396
  %11 = load %struct._EHash*, %struct._EHash** %eh, align 8, !dbg !397
  %curSizeIdx = getelementptr inbounds %struct._EHash, %struct._EHash* %11, i32 0, i32 3, !dbg !398
  store i32 0, i32* %curSizeIdx, align 8, !dbg !399
  br label %while.cond, !dbg !400

while.cond:                                       ; preds = %while.body, %entry
  %12 = load %struct._EHash*, %struct._EHash** %eh, align 8, !dbg !401
  %curSizeIdx3 = getelementptr inbounds %struct._EHash, %struct._EHash* %12, i32 0, i32 3, !dbg !402
  %13 = load i32, i32* %curSizeIdx3, align 8, !dbg !402
  %idxprom = sext i32 %13 to i64, !dbg !403
  %arrayidx = getelementptr inbounds [29 x i32], [29 x i32]* @kHashSizes, i64 0, i64 %idxprom, !dbg !403
  %14 = load i32, i32* %arrayidx, align 4, !dbg !403
  %15 = load i32, i32* %estimatedNumEntries.addr, align 4, !dbg !404
  %cmp = icmp slt i32 %14, %15, !dbg !405
  br i1 %cmp, label %while.body, label %while.end, !dbg !400

while.body:                                       ; preds = %while.cond
  %16 = load %struct._EHash*, %struct._EHash** %eh, align 8, !dbg !406
  %curSizeIdx4 = getelementptr inbounds %struct._EHash, %struct._EHash* %16, i32 0, i32 3, !dbg !407
  %17 = load i32, i32* %curSizeIdx4, align 8, !dbg !408
  %inc = add nsw i32 %17, 1, !dbg !408
  store i32 %inc, i32* %curSizeIdx4, align 8, !dbg !408
  br label %while.cond, !dbg !400, !llvm.loop !409

while.end:                                        ; preds = %while.cond
  %18 = load %struct._EHash*, %struct._EHash** %eh, align 8, !dbg !410
  %curSizeIdx5 = getelementptr inbounds %struct._EHash, %struct._EHash* %18, i32 0, i32 3, !dbg !411
  %19 = load i32, i32* %curSizeIdx5, align 8, !dbg !411
  %idxprom6 = sext i32 %19 to i64, !dbg !412
  %arrayidx7 = getelementptr inbounds [29 x i32], [29 x i32]* @kHashSizes, i64 0, i64 %idxprom6, !dbg !412
  %20 = load i32, i32* %arrayidx7, align 4, !dbg !412
  %21 = load %struct._EHash*, %struct._EHash** %eh, align 8, !dbg !413
  %curSize = getelementptr inbounds %struct._EHash, %struct._EHash* %21, i32 0, i32 2, !dbg !414
  store i32 %20, i32* %curSize, align 4, !dbg !415
  %22 = load %struct._EHash*, %struct._EHash** %eh, align 8, !dbg !416
  %allocatorIFC8 = getelementptr inbounds %struct._EHash, %struct._EHash* %22, i32 0, i32 4, !dbg !416
  %alloc9 = getelementptr inbounds %struct.CCGAllocatorIFC, %struct.CCGAllocatorIFC* %allocatorIFC8, i32 0, i32 0, !dbg !416
  %23 = load i8* (i8*, i32)*, i8* (i8*, i32)** %alloc9, align 8, !dbg !416
  %24 = load %struct._EHash*, %struct._EHash** %eh, align 8, !dbg !416
  %allocator10 = getelementptr inbounds %struct._EHash, %struct._EHash* %24, i32 0, i32 5, !dbg !416
  %25 = load i8*, i8** %allocator10, align 8, !dbg !416
  %26 = load %struct._EHash*, %struct._EHash** %eh, align 8, !dbg !416
  %curSize11 = getelementptr inbounds %struct._EHash, %struct._EHash* %26, i32 0, i32 2, !dbg !416
  %27 = load i32, i32* %curSize11, align 4, !dbg !416
  %conv = sext i32 %27 to i64, !dbg !416
  %mul = mul i64 %conv, 8, !dbg !416
  %conv12 = trunc i64 %mul to i32, !dbg !416
  %call13 = call i8* %23(i8* %25, i32 %conv12), !dbg !416
  %28 = bitcast i8* %call13 to %struct._EHEntry**, !dbg !416
  %29 = load %struct._EHash*, %struct._EHash** %eh, align 8, !dbg !417
  %buckets = getelementptr inbounds %struct._EHash, %struct._EHash* %29, i32 0, i32 0, !dbg !418
  store %struct._EHEntry** %28, %struct._EHEntry*** %buckets, align 8, !dbg !419
  %30 = load %struct._EHash*, %struct._EHash** %eh, align 8, !dbg !420
  %buckets14 = getelementptr inbounds %struct._EHash, %struct._EHash* %30, i32 0, i32 0, !dbg !421
  %31 = load %struct._EHEntry**, %struct._EHEntry*** %buckets14, align 8, !dbg !421
  %32 = bitcast %struct._EHEntry** %31 to i8*, !dbg !422
  %33 = load %struct._EHash*, %struct._EHash** %eh, align 8, !dbg !423
  %curSize15 = getelementptr inbounds %struct._EHash, %struct._EHash* %33, i32 0, i32 2, !dbg !424
  %34 = load i32, i32* %curSize15, align 4, !dbg !424
  %conv16 = sext i32 %34 to i64, !dbg !423
  %mul17 = mul i64 %conv16, 8, !dbg !425
  call void @llvm.memset.p0i8.i64(i8* align 8 %32, i8 0, i64 %mul17, i1 false), !dbg !422
  %35 = load %struct._EHash*, %struct._EHash** %eh, align 8, !dbg !426
  ret %struct._EHash* %35, !dbg !427
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @ccgSubSurf_free(%struct.CCGSubSurf* %ss) #0 !dbg !428 {
entry:
  %ss.addr = alloca %struct.CCGSubSurf*, align 8
  %allocatorIFC = alloca %struct.CCGAllocatorIFC, align 8
  %allocator = alloca i8*, align 8
  store %struct.CCGSubSurf* %ss, %struct.CCGSubSurf** %ss.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGSubSurf** %ss.addr, metadata !431, metadata !DIExpression()), !dbg !432
  call void @llvm.dbg.declare(metadata %struct.CCGAllocatorIFC* %allocatorIFC, metadata !433, metadata !DIExpression()), !dbg !434
  %0 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !435
  %allocatorIFC1 = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %0, i32 0, i32 4, !dbg !436
  %1 = bitcast %struct.CCGAllocatorIFC* %allocatorIFC to i8*, !dbg !436
  %2 = bitcast %struct.CCGAllocatorIFC* %allocatorIFC1 to i8*, !dbg !436
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 32, i1 false), !dbg !436
  call void @llvm.dbg.declare(metadata i8** %allocator, metadata !437, metadata !DIExpression()), !dbg !438
  %3 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !439
  %allocator2 = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %3, i32 0, i32 5, !dbg !440
  %4 = load i8*, i8** %allocator2, align 8, !dbg !440
  store i8* %4, i8** %allocator, align 8, !dbg !438
  %5 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !441
  %syncState = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %5, i32 0, i32 22, !dbg !443
  %6 = load i32, i32* %syncState, align 4, !dbg !443
  %tobool = icmp ne i32 %6, 0, !dbg !441
  br i1 %tobool, label %if.then, label %if.end, !dbg !444

if.then:                                          ; preds = %entry
  %7 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !445
  %oldFMap = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %7, i32 0, i32 25, !dbg !447
  %8 = load %struct._EHash*, %struct._EHash** %oldFMap, align 8, !dbg !447
  %9 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !448
  %10 = bitcast %struct.CCGSubSurf* %9 to i8*, !dbg !448
  call void @_ehash_free(%struct._EHash* %8, void (%struct._EHEntry*, i8*)* bitcast (void (%struct.CCGFace*, %struct.CCGSubSurf*)* @_face_free to void (%struct._EHEntry*, i8*)*), i8* %10), !dbg !449
  %11 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !450
  %oldEMap = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %11, i32 0, i32 24, !dbg !451
  %12 = load %struct._EHash*, %struct._EHash** %oldEMap, align 8, !dbg !451
  %13 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !452
  %14 = bitcast %struct.CCGSubSurf* %13 to i8*, !dbg !452
  call void @_ehash_free(%struct._EHash* %12, void (%struct._EHEntry*, i8*)* bitcast (void (%struct.CCGEdge*, %struct.CCGSubSurf*)* @_edge_free to void (%struct._EHEntry*, i8*)*), i8* %14), !dbg !453
  %15 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !454
  %oldVMap = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %15, i32 0, i32 23, !dbg !455
  %16 = load %struct._EHash*, %struct._EHash** %oldVMap, align 8, !dbg !455
  %17 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !456
  %18 = bitcast %struct.CCGSubSurf* %17 to i8*, !dbg !456
  call void @_ehash_free(%struct._EHash* %16, void (%struct._EHEntry*, i8*)* bitcast (void (%struct.CCGVert*, %struct.CCGSubSurf*)* @_vert_free to void (%struct._EHEntry*, i8*)*), i8* %18), !dbg !457
  %19 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !458
  %20 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !459
  %tempVerts = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %20, i32 0, i32 27, !dbg !460
  %21 = load %struct.CCGVert**, %struct.CCGVert*** %tempVerts, align 8, !dbg !460
  %22 = bitcast %struct.CCGVert** %21 to i8*, !dbg !459
  call void %19(i8* %22), !dbg !458
  %23 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !461
  %24 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !462
  %tempEdges = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %24, i32 0, i32 28, !dbg !463
  %25 = load %struct.CCGEdge**, %struct.CCGEdge*** %tempEdges, align 8, !dbg !463
  %26 = bitcast %struct.CCGEdge** %25 to i8*, !dbg !462
  call void %23(i8* %26), !dbg !461
  br label %if.end, !dbg !464

if.end:                                           ; preds = %if.then, %entry
  %27 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !465
  %allocatorIFC3 = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %27, i32 0, i32 4, !dbg !465
  %free = getelementptr inbounds %struct.CCGAllocatorIFC, %struct.CCGAllocatorIFC* %allocatorIFC3, i32 0, i32 2, !dbg !465
  %28 = load void (i8*, i8*)*, void (i8*, i8*)** %free, align 8, !dbg !465
  %29 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !465
  %allocator4 = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %29, i32 0, i32 5, !dbg !465
  %30 = load i8*, i8** %allocator4, align 8, !dbg !465
  %31 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !465
  %r = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %31, i32 0, i32 12, !dbg !465
  %32 = load i8*, i8** %r, align 8, !dbg !465
  call void %28(i8* %30, i8* %32), !dbg !465
  %33 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !466
  %allocatorIFC5 = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %33, i32 0, i32 4, !dbg !466
  %free6 = getelementptr inbounds %struct.CCGAllocatorIFC, %struct.CCGAllocatorIFC* %allocatorIFC5, i32 0, i32 2, !dbg !466
  %34 = load void (i8*, i8*)*, void (i8*, i8*)** %free6, align 8, !dbg !466
  %35 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !466
  %allocator7 = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %35, i32 0, i32 5, !dbg !466
  %36 = load i8*, i8** %allocator7, align 8, !dbg !466
  %37 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !466
  %q = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %37, i32 0, i32 11, !dbg !466
  %38 = load i8*, i8** %q, align 8, !dbg !466
  call void %34(i8* %36, i8* %38), !dbg !466
  %39 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !467
  %defaultEdgeUserData = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %39, i32 0, i32 10, !dbg !469
  %40 = load i8*, i8** %defaultEdgeUserData, align 8, !dbg !469
  %tobool8 = icmp ne i8* %40, null, !dbg !467
  br i1 %tobool8, label %if.then9, label %if.end14, !dbg !470

if.then9:                                         ; preds = %if.end
  %41 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !471
  %allocatorIFC10 = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %41, i32 0, i32 4, !dbg !471
  %free11 = getelementptr inbounds %struct.CCGAllocatorIFC, %struct.CCGAllocatorIFC* %allocatorIFC10, i32 0, i32 2, !dbg !471
  %42 = load void (i8*, i8*)*, void (i8*, i8*)** %free11, align 8, !dbg !471
  %43 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !471
  %allocator12 = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %43, i32 0, i32 5, !dbg !471
  %44 = load i8*, i8** %allocator12, align 8, !dbg !471
  %45 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !471
  %defaultEdgeUserData13 = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %45, i32 0, i32 10, !dbg !471
  %46 = load i8*, i8** %defaultEdgeUserData13, align 8, !dbg !471
  call void %42(i8* %44, i8* %46), !dbg !471
  br label %if.end14, !dbg !471

if.end14:                                         ; preds = %if.then9, %if.end
  %47 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !472
  %fMap = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %47, i32 0, i32 2, !dbg !473
  %48 = load %struct._EHash*, %struct._EHash** %fMap, align 8, !dbg !473
  %49 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !474
  %50 = bitcast %struct.CCGSubSurf* %49 to i8*, !dbg !474
  call void @_ehash_free(%struct._EHash* %48, void (%struct._EHEntry*, i8*)* bitcast (void (%struct.CCGFace*, %struct.CCGSubSurf*)* @_face_free to void (%struct._EHEntry*, i8*)*), i8* %50), !dbg !475
  %51 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !476
  %eMap = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %51, i32 0, i32 1, !dbg !477
  %52 = load %struct._EHash*, %struct._EHash** %eMap, align 8, !dbg !477
  %53 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !478
  %54 = bitcast %struct.CCGSubSurf* %53 to i8*, !dbg !478
  call void @_ehash_free(%struct._EHash* %52, void (%struct._EHEntry*, i8*)* bitcast (void (%struct.CCGEdge*, %struct.CCGSubSurf*)* @_edge_free to void (%struct._EHEntry*, i8*)*), i8* %54), !dbg !479
  %55 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !480
  %vMap = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %55, i32 0, i32 0, !dbg !481
  %56 = load %struct._EHash*, %struct._EHash** %vMap, align 8, !dbg !481
  %57 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !482
  %58 = bitcast %struct.CCGSubSurf* %57 to i8*, !dbg !482
  call void @_ehash_free(%struct._EHash* %56, void (%struct._EHEntry*, i8*)* bitcast (void (%struct.CCGVert*, %struct.CCGSubSurf*)* @_vert_free to void (%struct._EHEntry*, i8*)*), i8* %58), !dbg !483
  %59 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !484
  %allocatorIFC15 = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %59, i32 0, i32 4, !dbg !484
  %free16 = getelementptr inbounds %struct.CCGAllocatorIFC, %struct.CCGAllocatorIFC* %allocatorIFC15, i32 0, i32 2, !dbg !484
  %60 = load void (i8*, i8*)*, void (i8*, i8*)** %free16, align 8, !dbg !484
  %61 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !484
  %allocator17 = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %61, i32 0, i32 5, !dbg !484
  %62 = load i8*, i8** %allocator17, align 8, !dbg !484
  %63 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !484
  %64 = bitcast %struct.CCGSubSurf* %63 to i8*, !dbg !484
  call void %60(i8* %62, i8* %64), !dbg !484
  %release = getelementptr inbounds %struct.CCGAllocatorIFC, %struct.CCGAllocatorIFC* %allocatorIFC, i32 0, i32 3, !dbg !485
  %65 = load void (i8*)*, void (i8*)** %release, align 8, !dbg !485
  %tobool18 = icmp ne void (i8*)* %65, null, !dbg !487
  br i1 %tobool18, label %if.then19, label %if.end21, !dbg !488

if.then19:                                        ; preds = %if.end14
  %release20 = getelementptr inbounds %struct.CCGAllocatorIFC, %struct.CCGAllocatorIFC* %allocatorIFC, i32 0, i32 3, !dbg !489
  %66 = load void (i8*)*, void (i8*)** %release20, align 8, !dbg !489
  %67 = load i8*, i8** %allocator, align 8, !dbg !491
  call void %66(i8* %67), !dbg !492
  br label %if.end21, !dbg !493

if.end21:                                         ; preds = %if.then19, %if.end14
  ret void, !dbg !494
}

; Function Attrs: noinline nounwind uwtable
define internal void @_ehash_free(%struct._EHash* %eh, void (%struct._EHEntry*, i8*)* %freeEntry, i8* %userData) #0 !dbg !495 {
entry:
  %eh.addr = alloca %struct._EHash*, align 8
  %freeEntry.addr = alloca void (%struct._EHEntry*, i8*)*, align 8
  %userData.addr = alloca i8*, align 8
  %numBuckets = alloca i32, align 4
  %entry1 = alloca %struct._EHEntry*, align 8
  %next = alloca %struct._EHEntry*, align 8
  store %struct._EHash* %eh, %struct._EHash** %eh.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._EHash** %eh.addr, metadata !498, metadata !DIExpression()), !dbg !499
  store void (%struct._EHEntry*, i8*)* %freeEntry, void (%struct._EHEntry*, i8*)** %freeEntry.addr, align 8
  call void @llvm.dbg.declare(metadata void (%struct._EHEntry*, i8*)** %freeEntry.addr, metadata !500, metadata !DIExpression()), !dbg !501
  store i8* %userData, i8** %userData.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %userData.addr, metadata !502, metadata !DIExpression()), !dbg !503
  call void @llvm.dbg.declare(metadata i32* %numBuckets, metadata !504, metadata !DIExpression()), !dbg !505
  %0 = load %struct._EHash*, %struct._EHash** %eh.addr, align 8, !dbg !506
  %curSize = getelementptr inbounds %struct._EHash, %struct._EHash* %0, i32 0, i32 2, !dbg !507
  %1 = load i32, i32* %curSize, align 4, !dbg !507
  store i32 %1, i32* %numBuckets, align 4, !dbg !505
  br label %while.cond, !dbg !508

while.cond:                                       ; preds = %while.end, %entry
  %2 = load i32, i32* %numBuckets, align 4, !dbg !509
  %dec = add nsw i32 %2, -1, !dbg !509
  store i32 %dec, i32* %numBuckets, align 4, !dbg !509
  %tobool = icmp ne i32 %2, 0, !dbg !508
  br i1 %tobool, label %while.body, label %while.end6, !dbg !508

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata %struct._EHEntry** %entry1, metadata !510, metadata !DIExpression()), !dbg !512
  %3 = load %struct._EHash*, %struct._EHash** %eh.addr, align 8, !dbg !513
  %buckets = getelementptr inbounds %struct._EHash, %struct._EHash* %3, i32 0, i32 0, !dbg !514
  %4 = load %struct._EHEntry**, %struct._EHEntry*** %buckets, align 8, !dbg !514
  %5 = load i32, i32* %numBuckets, align 4, !dbg !515
  %idxprom = sext i32 %5 to i64, !dbg !513
  %arrayidx = getelementptr inbounds %struct._EHEntry*, %struct._EHEntry** %4, i64 %idxprom, !dbg !513
  %6 = load %struct._EHEntry*, %struct._EHEntry** %arrayidx, align 8, !dbg !513
  store %struct._EHEntry* %6, %struct._EHEntry** %entry1, align 8, !dbg !512
  br label %while.cond2, !dbg !516

while.cond2:                                      ; preds = %while.body4, %while.body
  %7 = load %struct._EHEntry*, %struct._EHEntry** %entry1, align 8, !dbg !517
  %tobool3 = icmp ne %struct._EHEntry* %7, null, !dbg !516
  br i1 %tobool3, label %while.body4, label %while.end, !dbg !516

while.body4:                                      ; preds = %while.cond2
  call void @llvm.dbg.declare(metadata %struct._EHEntry** %next, metadata !518, metadata !DIExpression()), !dbg !520
  %8 = load %struct._EHEntry*, %struct._EHEntry** %entry1, align 8, !dbg !521
  %next5 = getelementptr inbounds %struct._EHEntry, %struct._EHEntry* %8, i32 0, i32 0, !dbg !522
  %9 = load %struct._EHEntry*, %struct._EHEntry** %next5, align 8, !dbg !522
  store %struct._EHEntry* %9, %struct._EHEntry** %next, align 8, !dbg !520
  %10 = load void (%struct._EHEntry*, i8*)*, void (%struct._EHEntry*, i8*)** %freeEntry.addr, align 8, !dbg !523
  %11 = load %struct._EHEntry*, %struct._EHEntry** %entry1, align 8, !dbg !524
  %12 = load i8*, i8** %userData.addr, align 8, !dbg !525
  call void %10(%struct._EHEntry* %11, i8* %12), !dbg !523
  %13 = load %struct._EHEntry*, %struct._EHEntry** %next, align 8, !dbg !526
  store %struct._EHEntry* %13, %struct._EHEntry** %entry1, align 8, !dbg !527
  br label %while.cond2, !dbg !516, !llvm.loop !528

while.end:                                        ; preds = %while.cond2
  br label %while.cond, !dbg !508, !llvm.loop !530

while.end6:                                       ; preds = %while.cond
  %14 = load %struct._EHash*, %struct._EHash** %eh.addr, align 8, !dbg !532
  %allocatorIFC = getelementptr inbounds %struct._EHash, %struct._EHash* %14, i32 0, i32 4, !dbg !532
  %free = getelementptr inbounds %struct.CCGAllocatorIFC, %struct.CCGAllocatorIFC* %allocatorIFC, i32 0, i32 2, !dbg !532
  %15 = load void (i8*, i8*)*, void (i8*, i8*)** %free, align 8, !dbg !532
  %16 = load %struct._EHash*, %struct._EHash** %eh.addr, align 8, !dbg !532
  %allocator = getelementptr inbounds %struct._EHash, %struct._EHash* %16, i32 0, i32 5, !dbg !532
  %17 = load i8*, i8** %allocator, align 8, !dbg !532
  %18 = load %struct._EHash*, %struct._EHash** %eh.addr, align 8, !dbg !532
  %buckets7 = getelementptr inbounds %struct._EHash, %struct._EHash* %18, i32 0, i32 0, !dbg !532
  %19 = load %struct._EHEntry**, %struct._EHEntry*** %buckets7, align 8, !dbg !532
  %20 = bitcast %struct._EHEntry** %19 to i8*, !dbg !532
  call void %15(i8* %17, i8* %20), !dbg !532
  %21 = load %struct._EHash*, %struct._EHash** %eh.addr, align 8, !dbg !533
  %allocatorIFC8 = getelementptr inbounds %struct._EHash, %struct._EHash* %21, i32 0, i32 4, !dbg !533
  %free9 = getelementptr inbounds %struct.CCGAllocatorIFC, %struct.CCGAllocatorIFC* %allocatorIFC8, i32 0, i32 2, !dbg !533
  %22 = load void (i8*, i8*)*, void (i8*, i8*)** %free9, align 8, !dbg !533
  %23 = load %struct._EHash*, %struct._EHash** %eh.addr, align 8, !dbg !533
  %allocator10 = getelementptr inbounds %struct._EHash, %struct._EHash* %23, i32 0, i32 5, !dbg !533
  %24 = load i8*, i8** %allocator10, align 8, !dbg !533
  %25 = load %struct._EHash*, %struct._EHash** %eh.addr, align 8, !dbg !533
  %26 = bitcast %struct._EHash* %25 to i8*, !dbg !533
  call void %22(i8* %24, i8* %26), !dbg !533
  ret void, !dbg !534
}

; Function Attrs: noinline nounwind uwtable
define internal void @_face_free(%struct.CCGFace* %f, %struct.CCGSubSurf* %ss) #0 !dbg !535 {
entry:
  %f.addr = alloca %struct.CCGFace*, align 8
  %ss.addr = alloca %struct.CCGSubSurf*, align 8
  store %struct.CCGFace* %f, %struct.CCGFace** %f.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGFace** %f.addr, metadata !538, metadata !DIExpression()), !dbg !539
  store %struct.CCGSubSurf* %ss, %struct.CCGSubSurf** %ss.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGSubSurf** %ss.addr, metadata !540, metadata !DIExpression()), !dbg !541
  %0 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !542
  %allocatorIFC = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %0, i32 0, i32 4, !dbg !542
  %free = getelementptr inbounds %struct.CCGAllocatorIFC, %struct.CCGAllocatorIFC* %allocatorIFC, i32 0, i32 2, !dbg !542
  %1 = load void (i8*, i8*)*, void (i8*, i8*)** %free, align 8, !dbg !542
  %2 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !542
  %allocator = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %2, i32 0, i32 5, !dbg !542
  %3 = load i8*, i8** %allocator, align 8, !dbg !542
  %4 = load %struct.CCGFace*, %struct.CCGFace** %f.addr, align 8, !dbg !542
  %5 = bitcast %struct.CCGFace* %4 to i8*, !dbg !542
  call void %1(i8* %3, i8* %5), !dbg !542
  ret void, !dbg !543
}

; Function Attrs: noinline nounwind uwtable
define internal void @_edge_free(%struct.CCGEdge* %e, %struct.CCGSubSurf* %ss) #0 !dbg !544 {
entry:
  %e.addr = alloca %struct.CCGEdge*, align 8
  %ss.addr = alloca %struct.CCGSubSurf*, align 8
  store %struct.CCGEdge* %e, %struct.CCGEdge** %e.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGEdge** %e.addr, metadata !547, metadata !DIExpression()), !dbg !548
  store %struct.CCGSubSurf* %ss, %struct.CCGSubSurf** %ss.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGSubSurf** %ss.addr, metadata !549, metadata !DIExpression()), !dbg !550
  %0 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !551
  %allocatorIFC = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %0, i32 0, i32 4, !dbg !551
  %free = getelementptr inbounds %struct.CCGAllocatorIFC, %struct.CCGAllocatorIFC* %allocatorIFC, i32 0, i32 2, !dbg !551
  %1 = load void (i8*, i8*)*, void (i8*, i8*)** %free, align 8, !dbg !551
  %2 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !551
  %allocator = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %2, i32 0, i32 5, !dbg !551
  %3 = load i8*, i8** %allocator, align 8, !dbg !551
  %4 = load %struct.CCGEdge*, %struct.CCGEdge** %e.addr, align 8, !dbg !551
  %faces = getelementptr inbounds %struct.CCGEdge, %struct.CCGEdge* %4, i32 0, i32 7, !dbg !551
  %5 = load %struct.CCGFace**, %struct.CCGFace*** %faces, align 8, !dbg !551
  %6 = bitcast %struct.CCGFace** %5 to i8*, !dbg !551
  call void %1(i8* %3, i8* %6), !dbg !551
  %7 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !552
  %allocatorIFC1 = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %7, i32 0, i32 4, !dbg !552
  %free2 = getelementptr inbounds %struct.CCGAllocatorIFC, %struct.CCGAllocatorIFC* %allocatorIFC1, i32 0, i32 2, !dbg !552
  %8 = load void (i8*, i8*)*, void (i8*, i8*)** %free2, align 8, !dbg !552
  %9 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !552
  %allocator3 = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %9, i32 0, i32 5, !dbg !552
  %10 = load i8*, i8** %allocator3, align 8, !dbg !552
  %11 = load %struct.CCGEdge*, %struct.CCGEdge** %e.addr, align 8, !dbg !552
  %12 = bitcast %struct.CCGEdge* %11 to i8*, !dbg !552
  call void %8(i8* %10, i8* %12), !dbg !552
  ret void, !dbg !553
}

; Function Attrs: noinline nounwind uwtable
define internal void @_vert_free(%struct.CCGVert* %v, %struct.CCGSubSurf* %ss) #0 !dbg !554 {
entry:
  %v.addr = alloca %struct.CCGVert*, align 8
  %ss.addr = alloca %struct.CCGSubSurf*, align 8
  store %struct.CCGVert* %v, %struct.CCGVert** %v.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGVert** %v.addr, metadata !557, metadata !DIExpression()), !dbg !558
  store %struct.CCGSubSurf* %ss, %struct.CCGSubSurf** %ss.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGSubSurf** %ss.addr, metadata !559, metadata !DIExpression()), !dbg !560
  %0 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !561
  %allocatorIFC = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %0, i32 0, i32 4, !dbg !561
  %free = getelementptr inbounds %struct.CCGAllocatorIFC, %struct.CCGAllocatorIFC* %allocatorIFC, i32 0, i32 2, !dbg !561
  %1 = load void (i8*, i8*)*, void (i8*, i8*)** %free, align 8, !dbg !561
  %2 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !561
  %allocator = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %2, i32 0, i32 5, !dbg !561
  %3 = load i8*, i8** %allocator, align 8, !dbg !561
  %4 = load %struct.CCGVert*, %struct.CCGVert** %v.addr, align 8, !dbg !561
  %edges = getelementptr inbounds %struct.CCGVert, %struct.CCGVert* %4, i32 0, i32 6, !dbg !561
  %5 = load %struct.CCGEdge**, %struct.CCGEdge*** %edges, align 8, !dbg !561
  %6 = bitcast %struct.CCGEdge** %5 to i8*, !dbg !561
  call void %1(i8* %3, i8* %6), !dbg !561
  %7 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !562
  %allocatorIFC1 = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %7, i32 0, i32 4, !dbg !562
  %free2 = getelementptr inbounds %struct.CCGAllocatorIFC, %struct.CCGAllocatorIFC* %allocatorIFC1, i32 0, i32 2, !dbg !562
  %8 = load void (i8*, i8*)*, void (i8*, i8*)** %free2, align 8, !dbg !562
  %9 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !562
  %allocator3 = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %9, i32 0, i32 5, !dbg !562
  %10 = load i8*, i8** %allocator3, align 8, !dbg !562
  %11 = load %struct.CCGVert*, %struct.CCGVert** %v.addr, align 8, !dbg !562
  %faces = getelementptr inbounds %struct.CCGVert, %struct.CCGVert* %11, i32 0, i32 7, !dbg !562
  %12 = load %struct.CCGFace**, %struct.CCGFace*** %faces, align 8, !dbg !562
  %13 = bitcast %struct.CCGFace** %12 to i8*, !dbg !562
  call void %8(i8* %10, i8* %13), !dbg !562
  %14 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !563
  %allocatorIFC4 = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %14, i32 0, i32 4, !dbg !563
  %free5 = getelementptr inbounds %struct.CCGAllocatorIFC, %struct.CCGAllocatorIFC* %allocatorIFC4, i32 0, i32 2, !dbg !563
  %15 = load void (i8*, i8*)*, void (i8*, i8*)** %free5, align 8, !dbg !563
  %16 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !563
  %allocator6 = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %16, i32 0, i32 5, !dbg !563
  %17 = load i8*, i8** %allocator6, align 8, !dbg !563
  %18 = load %struct.CCGVert*, %struct.CCGVert** %v.addr, align 8, !dbg !563
  %19 = bitcast %struct.CCGVert* %18 to i8*, !dbg !563
  call void %15(i8* %17, i8* %19), !dbg !563
  ret void, !dbg !564
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @ccgSubSurf_setAllowEdgeCreation(%struct.CCGSubSurf* %ss, i32 %allowEdgeCreation, float %defaultCreaseValue, i8* %defaultUserData) #0 !dbg !565 {
entry:
  %ss.addr = alloca %struct.CCGSubSurf*, align 8
  %allowEdgeCreation.addr = alloca i32, align 4
  %defaultCreaseValue.addr = alloca float, align 4
  %defaultUserData.addr = alloca i8*, align 8
  store %struct.CCGSubSurf* %ss, %struct.CCGSubSurf** %ss.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGSubSurf** %ss.addr, metadata !569, metadata !DIExpression()), !dbg !570
  store i32 %allowEdgeCreation, i32* %allowEdgeCreation.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %allowEdgeCreation.addr, metadata !571, metadata !DIExpression()), !dbg !572
  store float %defaultCreaseValue, float* %defaultCreaseValue.addr, align 4
  call void @llvm.dbg.declare(metadata float* %defaultCreaseValue.addr, metadata !573, metadata !DIExpression()), !dbg !574
  store i8* %defaultUserData, i8** %defaultUserData.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %defaultUserData.addr, metadata !575, metadata !DIExpression()), !dbg !576
  %0 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !577
  %defaultEdgeUserData = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %0, i32 0, i32 10, !dbg !579
  %1 = load i8*, i8** %defaultEdgeUserData, align 8, !dbg !579
  %tobool = icmp ne i8* %1, null, !dbg !577
  br i1 %tobool, label %if.then, label %if.end, !dbg !580

if.then:                                          ; preds = %entry
  %2 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !581
  %allocatorIFC = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %2, i32 0, i32 4, !dbg !581
  %free = getelementptr inbounds %struct.CCGAllocatorIFC, %struct.CCGAllocatorIFC* %allocatorIFC, i32 0, i32 2, !dbg !581
  %3 = load void (i8*, i8*)*, void (i8*, i8*)** %free, align 8, !dbg !581
  %4 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !581
  %allocator = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %4, i32 0, i32 5, !dbg !581
  %5 = load i8*, i8** %allocator, align 8, !dbg !581
  %6 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !581
  %defaultEdgeUserData1 = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %6, i32 0, i32 10, !dbg !581
  %7 = load i8*, i8** %defaultEdgeUserData1, align 8, !dbg !581
  call void %3(i8* %5, i8* %7), !dbg !581
  br label %if.end, !dbg !583

if.end:                                           ; preds = %if.then, %entry
  %8 = load i32, i32* %allowEdgeCreation.addr, align 4, !dbg !584
  %tobool2 = icmp ne i32 %8, 0, !dbg !585
  %lnot = xor i1 %tobool2, true, !dbg !585
  %lnot3 = xor i1 %lnot, true, !dbg !586
  %lnot.ext = zext i1 %lnot3 to i32, !dbg !586
  %9 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !587
  %allowEdgeCreation4 = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %9, i32 0, i32 8, !dbg !588
  store i32 %lnot.ext, i32* %allowEdgeCreation4, align 8, !dbg !589
  %10 = load float, float* %defaultCreaseValue.addr, align 4, !dbg !590
  %11 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !591
  %defaultCreaseValue5 = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %11, i32 0, i32 9, !dbg !592
  store float %10, float* %defaultCreaseValue5, align 4, !dbg !593
  %12 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !594
  %allocatorIFC6 = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %12, i32 0, i32 4, !dbg !594
  %alloc = getelementptr inbounds %struct.CCGAllocatorIFC, %struct.CCGAllocatorIFC* %allocatorIFC6, i32 0, i32 0, !dbg !594
  %13 = load i8* (i8*, i32)*, i8* (i8*, i32)** %alloc, align 8, !dbg !594
  %14 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !594
  %allocator7 = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %14, i32 0, i32 5, !dbg !594
  %15 = load i8*, i8** %allocator7, align 8, !dbg !594
  %16 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !594
  %meshIFC = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %16, i32 0, i32 3, !dbg !594
  %edgeUserSize = getelementptr inbounds %struct.CCGMeshIFC, %struct.CCGMeshIFC* %meshIFC, i32 0, i32 1, !dbg !594
  %17 = load i32, i32* %edgeUserSize, align 4, !dbg !594
  %call = call i8* %13(i8* %15, i32 %17), !dbg !594
  %18 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !595
  %defaultEdgeUserData8 = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %18, i32 0, i32 10, !dbg !596
  store i8* %call, i8** %defaultEdgeUserData8, align 8, !dbg !597
  %19 = load i8*, i8** %defaultUserData.addr, align 8, !dbg !598
  %tobool9 = icmp ne i8* %19, null, !dbg !598
  br i1 %tobool9, label %if.then10, label %if.else, !dbg !600

if.then10:                                        ; preds = %if.end
  %20 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !601
  %defaultEdgeUserData11 = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %20, i32 0, i32 10, !dbg !603
  %21 = load i8*, i8** %defaultEdgeUserData11, align 8, !dbg !603
  %22 = load i8*, i8** %defaultUserData.addr, align 8, !dbg !604
  %23 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !605
  %meshIFC12 = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %23, i32 0, i32 3, !dbg !606
  %edgeUserSize13 = getelementptr inbounds %struct.CCGMeshIFC, %struct.CCGMeshIFC* %meshIFC12, i32 0, i32 1, !dbg !607
  %24 = load i32, i32* %edgeUserSize13, align 4, !dbg !607
  %conv = sext i32 %24 to i64, !dbg !605
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %21, i8* align 1 %22, i64 %conv, i1 false), !dbg !608
  br label %if.end18, !dbg !609

if.else:                                          ; preds = %if.end
  %25 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !610
  %defaultEdgeUserData14 = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %25, i32 0, i32 10, !dbg !612
  %26 = load i8*, i8** %defaultEdgeUserData14, align 8, !dbg !612
  %27 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !613
  %meshIFC15 = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %27, i32 0, i32 3, !dbg !614
  %edgeUserSize16 = getelementptr inbounds %struct.CCGMeshIFC, %struct.CCGMeshIFC* %meshIFC15, i32 0, i32 1, !dbg !615
  %28 = load i32, i32* %edgeUserSize16, align 4, !dbg !615
  %conv17 = sext i32 %28 to i64, !dbg !613
  call void @llvm.memset.p0i8.i64(i8* align 1 %26, i8 0, i64 %conv17, i1 false), !dbg !616
  br label %if.end18

if.end18:                                         ; preds = %if.else, %if.then10
  ret i32 0, !dbg !617
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @ccgSubSurf_getAllowEdgeCreation(%struct.CCGSubSurf* %ss, i32* %allowEdgeCreation_r, float* %defaultCreaseValue_r, i8* %defaultUserData_r) #0 !dbg !618 {
entry:
  %ss.addr = alloca %struct.CCGSubSurf*, align 8
  %allowEdgeCreation_r.addr = alloca i32*, align 8
  %defaultCreaseValue_r.addr = alloca float*, align 8
  %defaultUserData_r.addr = alloca i8*, align 8
  store %struct.CCGSubSurf* %ss, %struct.CCGSubSurf** %ss.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGSubSurf** %ss.addr, metadata !621, metadata !DIExpression()), !dbg !622
  store i32* %allowEdgeCreation_r, i32** %allowEdgeCreation_r.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %allowEdgeCreation_r.addr, metadata !623, metadata !DIExpression()), !dbg !624
  store float* %defaultCreaseValue_r, float** %defaultCreaseValue_r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %defaultCreaseValue_r.addr, metadata !625, metadata !DIExpression()), !dbg !626
  store i8* %defaultUserData_r, i8** %defaultUserData_r.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %defaultUserData_r.addr, metadata !627, metadata !DIExpression()), !dbg !628
  %0 = load i32*, i32** %allowEdgeCreation_r.addr, align 8, !dbg !629
  %tobool = icmp ne i32* %0, null, !dbg !629
  br i1 %tobool, label %if.then, label %if.end, !dbg !631

if.then:                                          ; preds = %entry
  %1 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !632
  %allowEdgeCreation = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %1, i32 0, i32 8, !dbg !633
  %2 = load i32, i32* %allowEdgeCreation, align 8, !dbg !633
  %3 = load i32*, i32** %allowEdgeCreation_r.addr, align 8, !dbg !634
  store i32 %2, i32* %3, align 4, !dbg !635
  br label %if.end, !dbg !636

if.end:                                           ; preds = %if.then, %entry
  %4 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !637
  %allowEdgeCreation1 = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %4, i32 0, i32 8, !dbg !639
  %5 = load i32, i32* %allowEdgeCreation1, align 8, !dbg !639
  %tobool2 = icmp ne i32 %5, 0, !dbg !637
  br i1 %tobool2, label %if.then3, label %if.end10, !dbg !640

if.then3:                                         ; preds = %if.end
  %6 = load float*, float** %defaultCreaseValue_r.addr, align 8, !dbg !641
  %tobool4 = icmp ne float* %6, null, !dbg !641
  br i1 %tobool4, label %if.then5, label %if.end6, !dbg !644

if.then5:                                         ; preds = %if.then3
  %7 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !645
  %defaultCreaseValue = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %7, i32 0, i32 9, !dbg !646
  %8 = load float, float* %defaultCreaseValue, align 4, !dbg !646
  %9 = load float*, float** %defaultCreaseValue_r.addr, align 8, !dbg !647
  store float %8, float* %9, align 4, !dbg !648
  br label %if.end6, !dbg !649

if.end6:                                          ; preds = %if.then5, %if.then3
  %10 = load i8*, i8** %defaultUserData_r.addr, align 8, !dbg !650
  %tobool7 = icmp ne i8* %10, null, !dbg !650
  br i1 %tobool7, label %if.then8, label %if.end9, !dbg !652

if.then8:                                         ; preds = %if.end6
  %11 = load i8*, i8** %defaultUserData_r.addr, align 8, !dbg !653
  %12 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !654
  %defaultEdgeUserData = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %12, i32 0, i32 10, !dbg !655
  %13 = load i8*, i8** %defaultEdgeUserData, align 8, !dbg !655
  %14 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !656
  %meshIFC = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %14, i32 0, i32 3, !dbg !657
  %edgeUserSize = getelementptr inbounds %struct.CCGMeshIFC, %struct.CCGMeshIFC* %meshIFC, i32 0, i32 1, !dbg !658
  %15 = load i32, i32* %edgeUserSize, align 4, !dbg !658
  %conv = sext i32 %15 to i64, !dbg !656
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %11, i8* align 1 %13, i64 %conv, i1 false), !dbg !659
  br label %if.end9, !dbg !659

if.end9:                                          ; preds = %if.then8, %if.end6
  br label %if.end10, !dbg !660

if.end10:                                         ; preds = %if.end9, %if.end
  ret void, !dbg !661
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @ccgSubSurf_setSubdivisionLevels(%struct.CCGSubSurf* %ss, i32 %subdivisionLevels) #0 !dbg !662 {
entry:
  %retval = alloca i32, align 4
  %ss.addr = alloca %struct.CCGSubSurf*, align 8
  %subdivisionLevels.addr = alloca i32, align 4
  store %struct.CCGSubSurf* %ss, %struct.CCGSubSurf** %ss.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGSubSurf** %ss.addr, metadata !665, metadata !DIExpression()), !dbg !666
  store i32 %subdivisionLevels, i32* %subdivisionLevels.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %subdivisionLevels.addr, metadata !667, metadata !DIExpression()), !dbg !668
  %0 = load i32, i32* %subdivisionLevels.addr, align 4, !dbg !669
  %cmp = icmp sle i32 %0, 0, !dbg !671
  br i1 %cmp, label %if.then, label %if.else, !dbg !672

if.then:                                          ; preds = %entry
  store i32 2, i32* %retval, align 4, !dbg !673
  br label %return, !dbg !673

if.else:                                          ; preds = %entry
  %1 = load i32, i32* %subdivisionLevels.addr, align 4, !dbg !675
  %2 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !677
  %subdivLevels = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %2, i32 0, i32 6, !dbg !678
  %3 = load i32, i32* %subdivLevels, align 8, !dbg !678
  %cmp1 = icmp ne i32 %1, %3, !dbg !679
  br i1 %cmp1, label %if.then2, label %if.end, !dbg !680

if.then2:                                         ; preds = %if.else
  %4 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !681
  %numGrids = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %4, i32 0, i32 7, !dbg !683
  store i32 0, i32* %numGrids, align 4, !dbg !684
  %5 = load i32, i32* %subdivisionLevels.addr, align 4, !dbg !685
  %6 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !686
  %subdivLevels3 = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %6, i32 0, i32 6, !dbg !687
  store i32 %5, i32* %subdivLevels3, align 8, !dbg !688
  %7 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !689
  %vMap = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %7, i32 0, i32 0, !dbg !690
  %8 = load %struct._EHash*, %struct._EHash** %vMap, align 8, !dbg !690
  %9 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !691
  %10 = bitcast %struct.CCGSubSurf* %9 to i8*, !dbg !691
  call void @_ehash_free(%struct._EHash* %8, void (%struct._EHEntry*, i8*)* bitcast (void (%struct.CCGVert*, %struct.CCGSubSurf*)* @_vert_free to void (%struct._EHEntry*, i8*)*), i8* %10), !dbg !692
  %11 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !693
  %eMap = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %11, i32 0, i32 1, !dbg !694
  %12 = load %struct._EHash*, %struct._EHash** %eMap, align 8, !dbg !694
  %13 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !695
  %14 = bitcast %struct.CCGSubSurf* %13 to i8*, !dbg !695
  call void @_ehash_free(%struct._EHash* %12, void (%struct._EHEntry*, i8*)* bitcast (void (%struct.CCGEdge*, %struct.CCGSubSurf*)* @_edge_free to void (%struct._EHEntry*, i8*)*), i8* %14), !dbg !696
  %15 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !697
  %fMap = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %15, i32 0, i32 2, !dbg !698
  %16 = load %struct._EHash*, %struct._EHash** %fMap, align 8, !dbg !698
  %17 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !699
  %18 = bitcast %struct.CCGSubSurf* %17 to i8*, !dbg !699
  call void @_ehash_free(%struct._EHash* %16, void (%struct._EHEntry*, i8*)* bitcast (void (%struct.CCGFace*, %struct.CCGSubSurf*)* @_face_free to void (%struct._EHEntry*, i8*)*), i8* %18), !dbg !700
  %19 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !701
  %allocatorIFC = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %19, i32 0, i32 4, !dbg !702
  %20 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !703
  %allocator = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %20, i32 0, i32 5, !dbg !704
  %21 = load i8*, i8** %allocator, align 8, !dbg !704
  %call = call %struct._EHash* @_ehash_new(i32 0, %struct.CCGAllocatorIFC* %allocatorIFC, i8* %21), !dbg !705
  %22 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !706
  %vMap4 = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %22, i32 0, i32 0, !dbg !707
  store %struct._EHash* %call, %struct._EHash** %vMap4, align 8, !dbg !708
  %23 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !709
  %allocatorIFC5 = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %23, i32 0, i32 4, !dbg !710
  %24 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !711
  %allocator6 = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %24, i32 0, i32 5, !dbg !712
  %25 = load i8*, i8** %allocator6, align 8, !dbg !712
  %call7 = call %struct._EHash* @_ehash_new(i32 0, %struct.CCGAllocatorIFC* %allocatorIFC5, i8* %25), !dbg !713
  %26 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !714
  %eMap8 = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %26, i32 0, i32 1, !dbg !715
  store %struct._EHash* %call7, %struct._EHash** %eMap8, align 8, !dbg !716
  %27 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !717
  %allocatorIFC9 = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %27, i32 0, i32 4, !dbg !718
  %28 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !719
  %allocator10 = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %28, i32 0, i32 5, !dbg !720
  %29 = load i8*, i8** %allocator10, align 8, !dbg !720
  %call11 = call %struct._EHash* @_ehash_new(i32 0, %struct.CCGAllocatorIFC* %allocatorIFC9, i8* %29), !dbg !721
  %30 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !722
  %fMap12 = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %30, i32 0, i32 2, !dbg !723
  store %struct._EHash* %call11, %struct._EHash** %fMap12, align 8, !dbg !724
  br label %if.end, !dbg !725

if.end:                                           ; preds = %if.then2, %if.else
  br label %if.end13

if.end13:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !726
  br label %return, !dbg !726

return:                                           ; preds = %if.end13, %if.then
  %31 = load i32, i32* %retval, align 4, !dbg !727
  ret i32 %31, !dbg !727
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @ccgSubSurf_getUseAgeCounts(%struct.CCGSubSurf* %ss, i32* %useAgeCounts_r, i32* %vertUserOffset_r, i32* %edgeUserOffset_r, i32* %faceUserOffset_r) #0 !dbg !728 {
entry:
  %ss.addr = alloca %struct.CCGSubSurf*, align 8
  %useAgeCounts_r.addr = alloca i32*, align 8
  %vertUserOffset_r.addr = alloca i32*, align 8
  %edgeUserOffset_r.addr = alloca i32*, align 8
  %faceUserOffset_r.addr = alloca i32*, align 8
  store %struct.CCGSubSurf* %ss, %struct.CCGSubSurf** %ss.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGSubSurf** %ss.addr, metadata !731, metadata !DIExpression()), !dbg !732
  store i32* %useAgeCounts_r, i32** %useAgeCounts_r.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %useAgeCounts_r.addr, metadata !733, metadata !DIExpression()), !dbg !734
  store i32* %vertUserOffset_r, i32** %vertUserOffset_r.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %vertUserOffset_r.addr, metadata !735, metadata !DIExpression()), !dbg !736
  store i32* %edgeUserOffset_r, i32** %edgeUserOffset_r.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %edgeUserOffset_r.addr, metadata !737, metadata !DIExpression()), !dbg !738
  store i32* %faceUserOffset_r, i32** %faceUserOffset_r.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %faceUserOffset_r.addr, metadata !739, metadata !DIExpression()), !dbg !740
  %0 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !741
  %useAgeCounts = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %0, i32 0, i32 18, !dbg !742
  %1 = load i32, i32* %useAgeCounts, align 4, !dbg !742
  %2 = load i32*, i32** %useAgeCounts_r.addr, align 8, !dbg !743
  store i32 %1, i32* %2, align 4, !dbg !744
  %3 = load i32*, i32** %vertUserOffset_r.addr, align 8, !dbg !745
  %tobool = icmp ne i32* %3, null, !dbg !745
  br i1 %tobool, label %if.then, label %if.end, !dbg !747

if.then:                                          ; preds = %entry
  %4 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !748
  %vertUserAgeOffset = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %4, i32 0, i32 19, !dbg !749
  %5 = load i32, i32* %vertUserAgeOffset, align 8, !dbg !749
  %6 = load i32*, i32** %vertUserOffset_r.addr, align 8, !dbg !750
  store i32 %5, i32* %6, align 4, !dbg !751
  br label %if.end, !dbg !752

if.end:                                           ; preds = %if.then, %entry
  %7 = load i32*, i32** %edgeUserOffset_r.addr, align 8, !dbg !753
  %tobool1 = icmp ne i32* %7, null, !dbg !753
  br i1 %tobool1, label %if.then2, label %if.end3, !dbg !755

if.then2:                                         ; preds = %if.end
  %8 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !756
  %edgeUserAgeOffset = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %8, i32 0, i32 20, !dbg !757
  %9 = load i32, i32* %edgeUserAgeOffset, align 4, !dbg !757
  %10 = load i32*, i32** %edgeUserOffset_r.addr, align 8, !dbg !758
  store i32 %9, i32* %10, align 4, !dbg !759
  br label %if.end3, !dbg !760

if.end3:                                          ; preds = %if.then2, %if.end
  %11 = load i32*, i32** %faceUserOffset_r.addr, align 8, !dbg !761
  %tobool4 = icmp ne i32* %11, null, !dbg !761
  br i1 %tobool4, label %if.then5, label %if.end6, !dbg !763

if.then5:                                         ; preds = %if.end3
  %12 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !764
  %faceUserAgeOffset = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %12, i32 0, i32 21, !dbg !765
  %13 = load i32, i32* %faceUserAgeOffset, align 8, !dbg !765
  %14 = load i32*, i32** %faceUserOffset_r.addr, align 8, !dbg !766
  store i32 %13, i32* %14, align 4, !dbg !767
  br label %if.end6, !dbg !768

if.end6:                                          ; preds = %if.then5, %if.end3
  ret void, !dbg !769
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @ccgSubSurf_setUseAgeCounts(%struct.CCGSubSurf* %ss, i32 %useAgeCounts, i32 %vertUserOffset, i32 %edgeUserOffset, i32 %faceUserOffset) #0 !dbg !770 {
entry:
  %retval = alloca i32, align 4
  %ss.addr = alloca %struct.CCGSubSurf*, align 8
  %useAgeCounts.addr = alloca i32, align 4
  %vertUserOffset.addr = alloca i32, align 4
  %edgeUserOffset.addr = alloca i32, align 4
  %faceUserOffset.addr = alloca i32, align 4
  store %struct.CCGSubSurf* %ss, %struct.CCGSubSurf** %ss.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGSubSurf** %ss.addr, metadata !773, metadata !DIExpression()), !dbg !774
  store i32 %useAgeCounts, i32* %useAgeCounts.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %useAgeCounts.addr, metadata !775, metadata !DIExpression()), !dbg !776
  store i32 %vertUserOffset, i32* %vertUserOffset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %vertUserOffset.addr, metadata !777, metadata !DIExpression()), !dbg !778
  store i32 %edgeUserOffset, i32* %edgeUserOffset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %edgeUserOffset.addr, metadata !779, metadata !DIExpression()), !dbg !780
  store i32 %faceUserOffset, i32* %faceUserOffset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %faceUserOffset.addr, metadata !781, metadata !DIExpression()), !dbg !782
  %0 = load i32, i32* %useAgeCounts.addr, align 4, !dbg !783
  %tobool = icmp ne i32 %0, 0, !dbg !783
  br i1 %tobool, label %if.then, label %if.else10, !dbg !785

if.then:                                          ; preds = %entry
  %1 = load i32, i32* %vertUserOffset.addr, align 4, !dbg !786
  %add = add nsw i32 %1, 4, !dbg !789
  %2 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !790
  %meshIFC = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %2, i32 0, i32 3, !dbg !791
  %vertUserSize = getelementptr inbounds %struct.CCGMeshIFC, %struct.CCGMeshIFC* %meshIFC, i32 0, i32 0, !dbg !792
  %3 = load i32, i32* %vertUserSize, align 8, !dbg !792
  %cmp = icmp sgt i32 %add, %3, !dbg !793
  br i1 %cmp, label %if.then8, label %lor.lhs.false, !dbg !794

lor.lhs.false:                                    ; preds = %if.then
  %4 = load i32, i32* %edgeUserOffset.addr, align 4, !dbg !795
  %add1 = add nsw i32 %4, 4, !dbg !796
  %5 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !797
  %meshIFC2 = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %5, i32 0, i32 3, !dbg !798
  %edgeUserSize = getelementptr inbounds %struct.CCGMeshIFC, %struct.CCGMeshIFC* %meshIFC2, i32 0, i32 1, !dbg !799
  %6 = load i32, i32* %edgeUserSize, align 4, !dbg !799
  %cmp3 = icmp sgt i32 %add1, %6, !dbg !800
  br i1 %cmp3, label %if.then8, label %lor.lhs.false4, !dbg !801

lor.lhs.false4:                                   ; preds = %lor.lhs.false
  %7 = load i32, i32* %faceUserOffset.addr, align 4, !dbg !802
  %add5 = add nsw i32 %7, 4, !dbg !803
  %8 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !804
  %meshIFC6 = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %8, i32 0, i32 3, !dbg !805
  %faceUserSize = getelementptr inbounds %struct.CCGMeshIFC, %struct.CCGMeshIFC* %meshIFC6, i32 0, i32 2, !dbg !806
  %9 = load i32, i32* %faceUserSize, align 8, !dbg !806
  %cmp7 = icmp sgt i32 %add5, %9, !dbg !807
  br i1 %cmp7, label %if.then8, label %if.else, !dbg !808

if.then8:                                         ; preds = %lor.lhs.false4, %lor.lhs.false, %if.then
  store i32 2, i32* %retval, align 4, !dbg !809
  br label %return, !dbg !809

if.else:                                          ; preds = %lor.lhs.false4
  %10 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !811
  %useAgeCounts9 = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %10, i32 0, i32 18, !dbg !813
  store i32 1, i32* %useAgeCounts9, align 4, !dbg !814
  %11 = load i32, i32* %vertUserOffset.addr, align 4, !dbg !815
  %12 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !816
  %vertUserAgeOffset = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %12, i32 0, i32 19, !dbg !817
  store i32 %11, i32* %vertUserAgeOffset, align 8, !dbg !818
  %13 = load i32, i32* %edgeUserOffset.addr, align 4, !dbg !819
  %14 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !820
  %edgeUserAgeOffset = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %14, i32 0, i32 20, !dbg !821
  store i32 %13, i32* %edgeUserAgeOffset, align 4, !dbg !822
  %15 = load i32, i32* %faceUserOffset.addr, align 4, !dbg !823
  %16 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !824
  %faceUserAgeOffset = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %16, i32 0, i32 21, !dbg !825
  store i32 %15, i32* %faceUserAgeOffset, align 8, !dbg !826
  br label %if.end

if.end:                                           ; preds = %if.else
  br label %if.end15, !dbg !827

if.else10:                                        ; preds = %entry
  %17 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !828
  %useAgeCounts11 = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %17, i32 0, i32 18, !dbg !830
  store i32 0, i32* %useAgeCounts11, align 4, !dbg !831
  %18 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !832
  %faceUserAgeOffset12 = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %18, i32 0, i32 21, !dbg !833
  store i32 0, i32* %faceUserAgeOffset12, align 8, !dbg !834
  %19 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !835
  %edgeUserAgeOffset13 = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %19, i32 0, i32 20, !dbg !836
  store i32 0, i32* %edgeUserAgeOffset13, align 4, !dbg !837
  %20 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !838
  %vertUserAgeOffset14 = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %20, i32 0, i32 19, !dbg !839
  store i32 0, i32* %vertUserAgeOffset14, align 8, !dbg !840
  br label %if.end15

if.end15:                                         ; preds = %if.else10, %if.end
  store i32 0, i32* %retval, align 4, !dbg !841
  br label %return, !dbg !841

return:                                           ; preds = %if.end15, %if.then8
  %21 = load i32, i32* %retval, align 4, !dbg !842
  ret i32 %21, !dbg !842
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @ccgSubSurf_setCalcVertexNormals(%struct.CCGSubSurf* %ss, i32 %useVertNormals, i32 %normalDataOffset) #0 !dbg !843 {
entry:
  %retval = alloca i32, align 4
  %ss.addr = alloca %struct.CCGSubSurf*, align 8
  %useVertNormals.addr = alloca i32, align 4
  %normalDataOffset.addr = alloca i32, align 4
  store %struct.CCGSubSurf* %ss, %struct.CCGSubSurf** %ss.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGSubSurf** %ss.addr, metadata !846, metadata !DIExpression()), !dbg !847
  store i32 %useVertNormals, i32* %useVertNormals.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %useVertNormals.addr, metadata !848, metadata !DIExpression()), !dbg !849
  store i32 %normalDataOffset, i32* %normalDataOffset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %normalDataOffset.addr, metadata !850, metadata !DIExpression()), !dbg !851
  %0 = load i32, i32* %useVertNormals.addr, align 4, !dbg !852
  %tobool = icmp ne i32 %0, 0, !dbg !852
  br i1 %tobool, label %if.then, label %if.else4, !dbg !854

if.then:                                          ; preds = %entry
  %1 = load i32, i32* %normalDataOffset.addr, align 4, !dbg !855
  %cmp = icmp slt i32 %1, 0, !dbg !858
  br i1 %cmp, label %if.then2, label %lor.lhs.false, !dbg !859

lor.lhs.false:                                    ; preds = %if.then
  %2 = load i32, i32* %normalDataOffset.addr, align 4, !dbg !860
  %add = add nsw i32 %2, 12, !dbg !861
  %3 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !862
  %meshIFC = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %3, i32 0, i32 3, !dbg !863
  %vertDataSize = getelementptr inbounds %struct.CCGMeshIFC, %struct.CCGMeshIFC* %meshIFC, i32 0, i32 4, !dbg !864
  %4 = load i32, i32* %vertDataSize, align 8, !dbg !864
  %cmp1 = icmp sgt i32 %add, %4, !dbg !865
  br i1 %cmp1, label %if.then2, label %if.else, !dbg !866

if.then2:                                         ; preds = %lor.lhs.false, %if.then
  store i32 2, i32* %retval, align 4, !dbg !867
  br label %return, !dbg !867

if.else:                                          ; preds = %lor.lhs.false
  %5 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !869
  %calcVertNormals = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %5, i32 0, i32 13, !dbg !871
  store i32 1, i32* %calcVertNormals, align 8, !dbg !872
  %6 = load i32, i32* %normalDataOffset.addr, align 4, !dbg !873
  %7 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !874
  %normalDataOffset3 = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %7, i32 0, i32 14, !dbg !875
  store i32 %6, i32* %normalDataOffset3, align 4, !dbg !876
  br label %if.end

if.end:                                           ; preds = %if.else
  br label %if.end7, !dbg !877

if.else4:                                         ; preds = %entry
  %8 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !878
  %calcVertNormals5 = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %8, i32 0, i32 13, !dbg !880
  store i32 0, i32* %calcVertNormals5, align 8, !dbg !881
  %9 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !882
  %normalDataOffset6 = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %9, i32 0, i32 14, !dbg !883
  store i32 0, i32* %normalDataOffset6, align 4, !dbg !884
  br label %if.end7

if.end7:                                          ; preds = %if.else4, %if.end
  store i32 0, i32* %retval, align 4, !dbg !885
  br label %return, !dbg !885

return:                                           ; preds = %if.end7, %if.then2
  %10 = load i32, i32* %retval, align 4, !dbg !886
  ret i32 %10, !dbg !886
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @ccgSubSurf_setAllocMask(%struct.CCGSubSurf* %ss, i32 %allocMask, i32 %maskOffset) #0 !dbg !887 {
entry:
  %ss.addr = alloca %struct.CCGSubSurf*, align 8
  %allocMask.addr = alloca i32, align 4
  %maskOffset.addr = alloca i32, align 4
  store %struct.CCGSubSurf* %ss, %struct.CCGSubSurf** %ss.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGSubSurf** %ss.addr, metadata !890, metadata !DIExpression()), !dbg !891
  store i32 %allocMask, i32* %allocMask.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %allocMask.addr, metadata !892, metadata !DIExpression()), !dbg !893
  store i32 %maskOffset, i32* %maskOffset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %maskOffset.addr, metadata !894, metadata !DIExpression()), !dbg !895
  %0 = load i32, i32* %allocMask.addr, align 4, !dbg !896
  %1 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !897
  %allocMask1 = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %1, i32 0, i32 15, !dbg !898
  store i32 %0, i32* %allocMask1, align 8, !dbg !899
  %2 = load i32, i32* %maskOffset.addr, align 4, !dbg !900
  %3 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !901
  %maskDataOffset = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %3, i32 0, i32 16, !dbg !902
  store i32 %2, i32* %maskDataOffset, align 4, !dbg !903
  ret void, !dbg !904
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @ccgSubSurf_setNumLayers(%struct.CCGSubSurf* %ss, i32 %numLayers) #0 !dbg !905 {
entry:
  %ss.addr = alloca %struct.CCGSubSurf*, align 8
  %numLayers.addr = alloca i32, align 4
  store %struct.CCGSubSurf* %ss, %struct.CCGSubSurf** %ss.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGSubSurf** %ss.addr, metadata !908, metadata !DIExpression()), !dbg !909
  store i32 %numLayers, i32* %numLayers.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %numLayers.addr, metadata !910, metadata !DIExpression()), !dbg !911
  %0 = load i32, i32* %numLayers.addr, align 4, !dbg !912
  %1 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !913
  %meshIFC = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %1, i32 0, i32 3, !dbg !914
  %numLayers1 = getelementptr inbounds %struct.CCGMeshIFC, %struct.CCGMeshIFC* %meshIFC, i32 0, i32 3, !dbg !915
  store i32 %0, i32* %numLayers1, align 4, !dbg !916
  ret void, !dbg !917
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @ccgSubSurf_initFullSync(%struct.CCGSubSurf* %ss) #0 !dbg !918 {
entry:
  %retval = alloca i32, align 4
  %ss.addr = alloca %struct.CCGSubSurf*, align 8
  store %struct.CCGSubSurf* %ss, %struct.CCGSubSurf** %ss.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGSubSurf** %ss.addr, metadata !921, metadata !DIExpression()), !dbg !922
  %0 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !923
  %syncState = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %0, i32 0, i32 22, !dbg !925
  %1 = load i32, i32* %syncState, align 4, !dbg !925
  %cmp = icmp ne i32 %1, 0, !dbg !926
  br i1 %cmp, label %if.then, label %if.end, !dbg !927

if.then:                                          ; preds = %entry
  store i32 1, i32* %retval, align 4, !dbg !928
  br label %return, !dbg !928

if.end:                                           ; preds = %entry
  %2 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !930
  %currentAge = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %2, i32 0, i32 17, !dbg !931
  %3 = load i32, i32* %currentAge, align 8, !dbg !932
  %inc = add nsw i32 %3, 1, !dbg !932
  store i32 %inc, i32* %currentAge, align 8, !dbg !932
  %4 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !933
  %vMap = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %4, i32 0, i32 0, !dbg !934
  %5 = load %struct._EHash*, %struct._EHash** %vMap, align 8, !dbg !934
  %6 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !935
  %oldVMap = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %6, i32 0, i32 23, !dbg !936
  store %struct._EHash* %5, %struct._EHash** %oldVMap, align 8, !dbg !937
  %7 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !938
  %eMap = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %7, i32 0, i32 1, !dbg !939
  %8 = load %struct._EHash*, %struct._EHash** %eMap, align 8, !dbg !939
  %9 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !940
  %oldEMap = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %9, i32 0, i32 24, !dbg !941
  store %struct._EHash* %8, %struct._EHash** %oldEMap, align 8, !dbg !942
  %10 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !943
  %fMap = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %10, i32 0, i32 2, !dbg !944
  %11 = load %struct._EHash*, %struct._EHash** %fMap, align 8, !dbg !944
  %12 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !945
  %oldFMap = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %12, i32 0, i32 25, !dbg !946
  store %struct._EHash* %11, %struct._EHash** %oldFMap, align 8, !dbg !947
  %13 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !948
  %allocatorIFC = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %13, i32 0, i32 4, !dbg !949
  %14 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !950
  %allocator = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %14, i32 0, i32 5, !dbg !951
  %15 = load i8*, i8** %allocator, align 8, !dbg !951
  %call = call %struct._EHash* @_ehash_new(i32 0, %struct.CCGAllocatorIFC* %allocatorIFC, i8* %15), !dbg !952
  %16 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !953
  %vMap1 = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %16, i32 0, i32 0, !dbg !954
  store %struct._EHash* %call, %struct._EHash** %vMap1, align 8, !dbg !955
  %17 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !956
  %allocatorIFC2 = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %17, i32 0, i32 4, !dbg !957
  %18 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !958
  %allocator3 = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %18, i32 0, i32 5, !dbg !959
  %19 = load i8*, i8** %allocator3, align 8, !dbg !959
  %call4 = call %struct._EHash* @_ehash_new(i32 0, %struct.CCGAllocatorIFC* %allocatorIFC2, i8* %19), !dbg !960
  %20 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !961
  %eMap5 = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %20, i32 0, i32 1, !dbg !962
  store %struct._EHash* %call4, %struct._EHash** %eMap5, align 8, !dbg !963
  %21 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !964
  %allocatorIFC6 = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %21, i32 0, i32 4, !dbg !965
  %22 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !966
  %allocator7 = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %22, i32 0, i32 5, !dbg !967
  %23 = load i8*, i8** %allocator7, align 8, !dbg !967
  %call8 = call %struct._EHash* @_ehash_new(i32 0, %struct.CCGAllocatorIFC* %allocatorIFC6, i8* %23), !dbg !968
  %24 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !969
  %fMap9 = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %24, i32 0, i32 2, !dbg !970
  store %struct._EHash* %call8, %struct._EHash** %fMap9, align 8, !dbg !971
  %25 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !972
  %numGrids = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %25, i32 0, i32 7, !dbg !973
  store i32 0, i32* %numGrids, align 4, !dbg !974
  %26 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !975
  %lenTempArrays = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %26, i32 0, i32 26, !dbg !976
  store i32 12, i32* %lenTempArrays, align 8, !dbg !977
  %27 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !978
  %28 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !979
  %lenTempArrays10 = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %28, i32 0, i32 26, !dbg !980
  %29 = load i32, i32* %lenTempArrays10, align 8, !dbg !980
  %conv = sext i32 %29 to i64, !dbg !979
  %mul = mul i64 8, %conv, !dbg !981
  %call11 = call i8* %27(i64 %mul, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str, i64 0, i64 0)), !dbg !978
  %30 = bitcast i8* %call11 to %struct.CCGVert**, !dbg !978
  %31 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !982
  %tempVerts = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %31, i32 0, i32 27, !dbg !983
  store %struct.CCGVert** %30, %struct.CCGVert*** %tempVerts, align 8, !dbg !984
  %32 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !985
  %33 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !986
  %lenTempArrays12 = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %33, i32 0, i32 26, !dbg !987
  %34 = load i32, i32* %lenTempArrays12, align 8, !dbg !987
  %conv13 = sext i32 %34 to i64, !dbg !986
  %mul14 = mul i64 8, %conv13, !dbg !988
  %call15 = call i8* %32(i64 %mul14, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1, i64 0, i64 0)), !dbg !985
  %35 = bitcast i8* %call15 to %struct.CCGEdge**, !dbg !985
  %36 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !989
  %tempEdges = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %36, i32 0, i32 28, !dbg !990
  store %struct.CCGEdge** %35, %struct.CCGEdge*** %tempEdges, align 8, !dbg !991
  %37 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !992
  %syncState16 = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %37, i32 0, i32 22, !dbg !993
  store i32 1, i32* %syncState16, align 4, !dbg !994
  store i32 0, i32* %retval, align 4, !dbg !995
  br label %return, !dbg !995

return:                                           ; preds = %if.end, %if.then
  %38 = load i32, i32* %retval, align 4, !dbg !996
  ret i32 %38, !dbg !996
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @ccgSubSurf_initPartialSync(%struct.CCGSubSurf* %ss) #0 !dbg !997 {
entry:
  %retval = alloca i32, align 4
  %ss.addr = alloca %struct.CCGSubSurf*, align 8
  store %struct.CCGSubSurf* %ss, %struct.CCGSubSurf** %ss.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGSubSurf** %ss.addr, metadata !998, metadata !DIExpression()), !dbg !999
  %0 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !1000
  %syncState = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %0, i32 0, i32 22, !dbg !1002
  %1 = load i32, i32* %syncState, align 4, !dbg !1002
  %cmp = icmp ne i32 %1, 0, !dbg !1003
  br i1 %cmp, label %if.then, label %if.end, !dbg !1004

if.then:                                          ; preds = %entry
  store i32 1, i32* %retval, align 4, !dbg !1005
  br label %return, !dbg !1005

if.end:                                           ; preds = %entry
  %2 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !1007
  %currentAge = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %2, i32 0, i32 17, !dbg !1008
  %3 = load i32, i32* %currentAge, align 8, !dbg !1009
  %inc = add nsw i32 %3, 1, !dbg !1009
  store i32 %inc, i32* %currentAge, align 8, !dbg !1009
  %4 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !1010
  %syncState1 = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %4, i32 0, i32 22, !dbg !1011
  store i32 4, i32* %syncState1, align 4, !dbg !1012
  store i32 0, i32* %retval, align 4, !dbg !1013
  br label %return, !dbg !1013

return:                                           ; preds = %if.end, %if.then
  %5 = load i32, i32* %retval, align 4, !dbg !1014
  ret i32 %5, !dbg !1014
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @ccgSubSurf_syncVertDel(%struct.CCGSubSurf* %ss, i8* %vHDL) #0 !dbg !1015 {
entry:
  %retval = alloca i32, align 4
  %ss.addr = alloca %struct.CCGSubSurf*, align 8
  %vHDL.addr = alloca i8*, align 8
  %prevp = alloca i8**, align 8
  %v = alloca %struct.CCGVert*, align 8
  store %struct.CCGSubSurf* %ss, %struct.CCGSubSurf** %ss.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGSubSurf** %ss.addr, metadata !1018, metadata !DIExpression()), !dbg !1019
  store i8* %vHDL, i8** %vHDL.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %vHDL.addr, metadata !1020, metadata !DIExpression()), !dbg !1021
  %0 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !1022
  %syncState = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %0, i32 0, i32 22, !dbg !1024
  %1 = load i32, i32* %syncState, align 4, !dbg !1024
  %cmp = icmp ne i32 %1, 4, !dbg !1025
  br i1 %cmp, label %if.then, label %if.else, !dbg !1026

if.then:                                          ; preds = %entry
  store i32 1, i32* %retval, align 4, !dbg !1027
  br label %return, !dbg !1027

if.else:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8*** %prevp, metadata !1029, metadata !DIExpression()), !dbg !1031
  call void @llvm.dbg.declare(metadata %struct.CCGVert** %v, metadata !1032, metadata !DIExpression()), !dbg !1033
  %2 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !1034
  %vMap = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %2, i32 0, i32 0, !dbg !1035
  %3 = load %struct._EHash*, %struct._EHash** %vMap, align 8, !dbg !1035
  %4 = load i8*, i8** %vHDL.addr, align 8, !dbg !1036
  %call = call i8* @_ehash_lookupWithPrev(%struct._EHash* %3, i8* %4, i8*** %prevp), !dbg !1037
  %5 = bitcast i8* %call to %struct.CCGVert*, !dbg !1037
  store %struct.CCGVert* %5, %struct.CCGVert** %v, align 8, !dbg !1033
  %6 = load %struct.CCGVert*, %struct.CCGVert** %v, align 8, !dbg !1038
  %tobool = icmp ne %struct.CCGVert* %6, null, !dbg !1038
  br i1 %tobool, label %lor.lhs.false, label %if.then5, !dbg !1040

lor.lhs.false:                                    ; preds = %if.else
  %7 = load %struct.CCGVert*, %struct.CCGVert** %v, align 8, !dbg !1041
  %numFaces = getelementptr inbounds %struct.CCGVert, %struct.CCGVert* %7, i32 0, i32 3, !dbg !1042
  %8 = load i16, i16* %numFaces, align 2, !dbg !1042
  %conv = sext i16 %8 to i32, !dbg !1041
  %tobool1 = icmp ne i32 %conv, 0, !dbg !1041
  br i1 %tobool1, label %if.then5, label %lor.lhs.false2, !dbg !1043

lor.lhs.false2:                                   ; preds = %lor.lhs.false
  %9 = load %struct.CCGVert*, %struct.CCGVert** %v, align 8, !dbg !1044
  %numEdges = getelementptr inbounds %struct.CCGVert, %struct.CCGVert* %9, i32 0, i32 2, !dbg !1045
  %10 = load i16, i16* %numEdges, align 8, !dbg !1045
  %conv3 = sext i16 %10 to i32, !dbg !1044
  %tobool4 = icmp ne i32 %conv3, 0, !dbg !1044
  br i1 %tobool4, label %if.then5, label %if.else6, !dbg !1046

if.then5:                                         ; preds = %lor.lhs.false2, %lor.lhs.false, %if.else
  store i32 2, i32* %retval, align 4, !dbg !1047
  br label %return, !dbg !1047

if.else6:                                         ; preds = %lor.lhs.false2
  %11 = load %struct.CCGVert*, %struct.CCGVert** %v, align 8, !dbg !1049
  %next = getelementptr inbounds %struct.CCGVert, %struct.CCGVert* %11, i32 0, i32 0, !dbg !1051
  %12 = load %struct.CCGVert*, %struct.CCGVert** %next, align 8, !dbg !1051
  %13 = bitcast %struct.CCGVert* %12 to i8*, !dbg !1049
  %14 = load i8**, i8*** %prevp, align 8, !dbg !1052
  store i8* %13, i8** %14, align 8, !dbg !1053
  %15 = load %struct.CCGVert*, %struct.CCGVert** %v, align 8, !dbg !1054
  %16 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !1055
  call void @_vert_free(%struct.CCGVert* %15, %struct.CCGSubSurf* %16), !dbg !1056
  br label %if.end

if.end:                                           ; preds = %if.else6
  br label %if.end7

if.end7:                                          ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !1057
  br label %return, !dbg !1057

return:                                           ; preds = %if.end7, %if.then5, %if.then
  %17 = load i32, i32* %retval, align 4, !dbg !1058
  ret i32 %17, !dbg !1058
}

; Function Attrs: noinline nounwind uwtable
define internal i8* @_ehash_lookupWithPrev(%struct._EHash* %eh, i8* %key, i8*** %prevp_r) #0 !dbg !1059 {
entry:
  %retval = alloca i8*, align 8
  %eh.addr = alloca %struct._EHash*, align 8
  %key.addr = alloca i8*, align 8
  %prevp_r.addr = alloca i8***, align 8
  %hash = alloca i32, align 4
  %prevp = alloca i8**, align 8
  %entry2 = alloca %struct._EHEntry*, align 8
  store %struct._EHash* %eh, %struct._EHash** %eh.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._EHash** %eh.addr, metadata !1063, metadata !DIExpression()), !dbg !1064
  store i8* %key, i8** %key.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %key.addr, metadata !1065, metadata !DIExpression()), !dbg !1066
  store i8*** %prevp_r, i8**** %prevp_r.addr, align 8
  call void @llvm.dbg.declare(metadata i8**** %prevp_r.addr, metadata !1067, metadata !DIExpression()), !dbg !1068
  call void @llvm.dbg.declare(metadata i32* %hash, metadata !1069, metadata !DIExpression()), !dbg !1070
  %0 = load i8*, i8** %key.addr, align 8, !dbg !1071
  %1 = ptrtoint i8* %0 to i64, !dbg !1071
  %2 = load %struct._EHash*, %struct._EHash** %eh.addr, align 8, !dbg !1071
  %curSize = getelementptr inbounds %struct._EHash, %struct._EHash* %2, i32 0, i32 2, !dbg !1071
  %3 = load i32, i32* %curSize, align 4, !dbg !1071
  %conv = zext i32 %3 to i64, !dbg !1071
  %rem = urem i64 %1, %conv, !dbg !1071
  %conv1 = trunc i64 %rem to i32, !dbg !1071
  store i32 %conv1, i32* %hash, align 4, !dbg !1070
  call void @llvm.dbg.declare(metadata i8*** %prevp, metadata !1072, metadata !DIExpression()), !dbg !1073
  %4 = load %struct._EHash*, %struct._EHash** %eh.addr, align 8, !dbg !1074
  %buckets = getelementptr inbounds %struct._EHash, %struct._EHash* %4, i32 0, i32 0, !dbg !1075
  %5 = load %struct._EHEntry**, %struct._EHEntry*** %buckets, align 8, !dbg !1075
  %6 = load i32, i32* %hash, align 4, !dbg !1076
  %idxprom = sext i32 %6 to i64, !dbg !1074
  %arrayidx = getelementptr inbounds %struct._EHEntry*, %struct._EHEntry** %5, i64 %idxprom, !dbg !1074
  %7 = bitcast %struct._EHEntry** %arrayidx to i8**, !dbg !1077
  store i8** %7, i8*** %prevp, align 8, !dbg !1073
  call void @llvm.dbg.declare(metadata %struct._EHEntry** %entry2, metadata !1078, metadata !DIExpression()), !dbg !1079
  br label %for.cond, !dbg !1080

for.cond:                                         ; preds = %for.inc, %entry
  %8 = load i8**, i8*** %prevp, align 8, !dbg !1081
  %9 = load i8*, i8** %8, align 8, !dbg !1084
  %10 = bitcast i8* %9 to %struct._EHEntry*, !dbg !1084
  store %struct._EHEntry* %10, %struct._EHEntry** %entry2, align 8, !dbg !1085
  %tobool = icmp ne %struct._EHEntry* %10, null, !dbg !1086
  br i1 %tobool, label %for.body, label %for.end, !dbg !1086

for.body:                                         ; preds = %for.cond
  %11 = load %struct._EHEntry*, %struct._EHEntry** %entry2, align 8, !dbg !1087
  %key3 = getelementptr inbounds %struct._EHEntry, %struct._EHEntry* %11, i32 0, i32 1, !dbg !1090
  %12 = load i8*, i8** %key3, align 8, !dbg !1090
  %13 = load i8*, i8** %key.addr, align 8, !dbg !1091
  %cmp = icmp eq i8* %12, %13, !dbg !1092
  br i1 %cmp, label %if.then, label %if.end, !dbg !1093

if.then:                                          ; preds = %for.body
  %14 = load i8**, i8*** %prevp, align 8, !dbg !1094
  %15 = load i8***, i8**** %prevp_r.addr, align 8, !dbg !1096
  store i8** %14, i8*** %15, align 8, !dbg !1097
  %16 = load %struct._EHEntry*, %struct._EHEntry** %entry2, align 8, !dbg !1098
  %17 = bitcast %struct._EHEntry* %16 to i8*, !dbg !1098
  store i8* %17, i8** %retval, align 8, !dbg !1099
  br label %return, !dbg !1099

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !1100

for.inc:                                          ; preds = %if.end
  %18 = load %struct._EHEntry*, %struct._EHEntry** %entry2, align 8, !dbg !1101
  %next = getelementptr inbounds %struct._EHEntry, %struct._EHEntry* %18, i32 0, i32 0, !dbg !1102
  %19 = bitcast %struct._EHEntry** %next to i8**, !dbg !1103
  store i8** %19, i8*** %prevp, align 8, !dbg !1104
  br label %for.cond, !dbg !1105, !llvm.loop !1106

for.end:                                          ; preds = %for.cond
  store i8* null, i8** %retval, align 8, !dbg !1108
  br label %return, !dbg !1108

return:                                           ; preds = %for.end, %if.then
  %20 = load i8*, i8** %retval, align 8, !dbg !1109
  ret i8* %20, !dbg !1109
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @ccgSubSurf_syncEdgeDel(%struct.CCGSubSurf* %ss, i8* %eHDL) #0 !dbg !1110 {
entry:
  %retval = alloca i32, align 4
  %ss.addr = alloca %struct.CCGSubSurf*, align 8
  %eHDL.addr = alloca i8*, align 8
  %prevp = alloca i8**, align 8
  %e = alloca %struct.CCGEdge*, align 8
  store %struct.CCGSubSurf* %ss, %struct.CCGSubSurf** %ss.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGSubSurf** %ss.addr, metadata !1113, metadata !DIExpression()), !dbg !1114
  store i8* %eHDL, i8** %eHDL.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %eHDL.addr, metadata !1115, metadata !DIExpression()), !dbg !1116
  %0 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !1117
  %syncState = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %0, i32 0, i32 22, !dbg !1119
  %1 = load i32, i32* %syncState, align 4, !dbg !1119
  %cmp = icmp ne i32 %1, 4, !dbg !1120
  br i1 %cmp, label %if.then, label %if.else, !dbg !1121

if.then:                                          ; preds = %entry
  store i32 1, i32* %retval, align 4, !dbg !1122
  br label %return, !dbg !1122

if.else:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8*** %prevp, metadata !1124, metadata !DIExpression()), !dbg !1126
  call void @llvm.dbg.declare(metadata %struct.CCGEdge** %e, metadata !1127, metadata !DIExpression()), !dbg !1128
  %2 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !1129
  %eMap = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %2, i32 0, i32 1, !dbg !1130
  %3 = load %struct._EHash*, %struct._EHash** %eMap, align 8, !dbg !1130
  %4 = load i8*, i8** %eHDL.addr, align 8, !dbg !1131
  %call = call i8* @_ehash_lookupWithPrev(%struct._EHash* %3, i8* %4, i8*** %prevp), !dbg !1132
  %5 = bitcast i8* %call to %struct.CCGEdge*, !dbg !1132
  store %struct.CCGEdge* %5, %struct.CCGEdge** %e, align 8, !dbg !1128
  %6 = load %struct.CCGEdge*, %struct.CCGEdge** %e, align 8, !dbg !1133
  %tobool = icmp ne %struct.CCGEdge* %6, null, !dbg !1133
  br i1 %tobool, label %lor.lhs.false, label %if.then2, !dbg !1135

lor.lhs.false:                                    ; preds = %if.else
  %7 = load %struct.CCGEdge*, %struct.CCGEdge** %e, align 8, !dbg !1136
  %numFaces = getelementptr inbounds %struct.CCGEdge, %struct.CCGEdge* %7, i32 0, i32 2, !dbg !1137
  %8 = load i16, i16* %numFaces, align 8, !dbg !1137
  %conv = sext i16 %8 to i32, !dbg !1136
  %tobool1 = icmp ne i32 %conv, 0, !dbg !1136
  br i1 %tobool1, label %if.then2, label %if.else3, !dbg !1138

if.then2:                                         ; preds = %lor.lhs.false, %if.else
  store i32 2, i32* %retval, align 4, !dbg !1139
  br label %return, !dbg !1139

if.else3:                                         ; preds = %lor.lhs.false
  %9 = load %struct.CCGEdge*, %struct.CCGEdge** %e, align 8, !dbg !1141
  %next = getelementptr inbounds %struct.CCGEdge, %struct.CCGEdge* %9, i32 0, i32 0, !dbg !1143
  %10 = load %struct.CCGEdge*, %struct.CCGEdge** %next, align 8, !dbg !1143
  %11 = bitcast %struct.CCGEdge* %10 to i8*, !dbg !1141
  %12 = load i8**, i8*** %prevp, align 8, !dbg !1144
  store i8* %11, i8** %12, align 8, !dbg !1145
  %13 = load %struct.CCGEdge*, %struct.CCGEdge** %e, align 8, !dbg !1146
  %14 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !1147
  call void @_edge_unlinkMarkAndFree(%struct.CCGEdge* %13, %struct.CCGSubSurf* %14), !dbg !1148
  br label %if.end

if.end:                                           ; preds = %if.else3
  br label %if.end4

if.end4:                                          ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !1149
  br label %return, !dbg !1149

return:                                           ; preds = %if.end4, %if.then2, %if.then
  %15 = load i32, i32* %retval, align 4, !dbg !1150
  ret i32 %15, !dbg !1150
}

; Function Attrs: noinline nounwind uwtable
define internal void @_edge_unlinkMarkAndFree(%struct.CCGEdge* %e, %struct.CCGSubSurf* %ss) #0 !dbg !1151 {
entry:
  %e.addr = alloca %struct.CCGEdge*, align 8
  %ss.addr = alloca %struct.CCGSubSurf*, align 8
  store %struct.CCGEdge* %e, %struct.CCGEdge** %e.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGEdge** %e.addr, metadata !1152, metadata !DIExpression()), !dbg !1153
  store %struct.CCGSubSurf* %ss, %struct.CCGSubSurf** %ss.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGSubSurf** %ss.addr, metadata !1154, metadata !DIExpression()), !dbg !1155
  %0 = load %struct.CCGEdge*, %struct.CCGEdge** %e.addr, align 8, !dbg !1156
  %v0 = getelementptr inbounds %struct.CCGEdge, %struct.CCGEdge* %0, i32 0, i32 5, !dbg !1157
  %1 = load %struct.CCGVert*, %struct.CCGVert** %v0, align 8, !dbg !1157
  %2 = load %struct.CCGEdge*, %struct.CCGEdge** %e.addr, align 8, !dbg !1158
  call void @_vert_remEdge(%struct.CCGVert* %1, %struct.CCGEdge* %2), !dbg !1159
  %3 = load %struct.CCGEdge*, %struct.CCGEdge** %e.addr, align 8, !dbg !1160
  %v1 = getelementptr inbounds %struct.CCGEdge, %struct.CCGEdge* %3, i32 0, i32 6, !dbg !1161
  %4 = load %struct.CCGVert*, %struct.CCGVert** %v1, align 8, !dbg !1161
  %5 = load %struct.CCGEdge*, %struct.CCGEdge** %e.addr, align 8, !dbg !1162
  call void @_vert_remEdge(%struct.CCGVert* %4, %struct.CCGEdge* %5), !dbg !1163
  %6 = load %struct.CCGEdge*, %struct.CCGEdge** %e.addr, align 8, !dbg !1164
  %v01 = getelementptr inbounds %struct.CCGEdge, %struct.CCGEdge* %6, i32 0, i32 5, !dbg !1165
  %7 = load %struct.CCGVert*, %struct.CCGVert** %v01, align 8, !dbg !1165
  %flags = getelementptr inbounds %struct.CCGVert, %struct.CCGVert* %7, i32 0, i32 4, !dbg !1166
  %8 = load i16, i16* %flags, align 4, !dbg !1167
  %conv = sext i16 %8 to i32, !dbg !1167
  %or = or i32 %conv, 1, !dbg !1167
  %conv2 = trunc i32 %or to i16, !dbg !1167
  store i16 %conv2, i16* %flags, align 4, !dbg !1167
  %9 = load %struct.CCGEdge*, %struct.CCGEdge** %e.addr, align 8, !dbg !1168
  %v13 = getelementptr inbounds %struct.CCGEdge, %struct.CCGEdge* %9, i32 0, i32 6, !dbg !1169
  %10 = load %struct.CCGVert*, %struct.CCGVert** %v13, align 8, !dbg !1169
  %flags4 = getelementptr inbounds %struct.CCGVert, %struct.CCGVert* %10, i32 0, i32 4, !dbg !1170
  %11 = load i16, i16* %flags4, align 4, !dbg !1171
  %conv5 = sext i16 %11 to i32, !dbg !1171
  %or6 = or i32 %conv5, 1, !dbg !1171
  %conv7 = trunc i32 %or6 to i16, !dbg !1171
  store i16 %conv7, i16* %flags4, align 4, !dbg !1171
  %12 = load %struct.CCGEdge*, %struct.CCGEdge** %e.addr, align 8, !dbg !1172
  %13 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !1173
  call void @_edge_free(%struct.CCGEdge* %12, %struct.CCGSubSurf* %13), !dbg !1174
  ret void, !dbg !1175
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @ccgSubSurf_syncFaceDel(%struct.CCGSubSurf* %ss, i8* %fHDL) #0 !dbg !1176 {
entry:
  %retval = alloca i32, align 4
  %ss.addr = alloca %struct.CCGSubSurf*, align 8
  %fHDL.addr = alloca i8*, align 8
  %prevp = alloca i8**, align 8
  %f = alloca %struct.CCGFace*, align 8
  store %struct.CCGSubSurf* %ss, %struct.CCGSubSurf** %ss.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGSubSurf** %ss.addr, metadata !1179, metadata !DIExpression()), !dbg !1180
  store i8* %fHDL, i8** %fHDL.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %fHDL.addr, metadata !1181, metadata !DIExpression()), !dbg !1182
  %0 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !1183
  %syncState = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %0, i32 0, i32 22, !dbg !1185
  %1 = load i32, i32* %syncState, align 4, !dbg !1185
  %cmp = icmp ne i32 %1, 4, !dbg !1186
  br i1 %cmp, label %if.then, label %if.else, !dbg !1187

if.then:                                          ; preds = %entry
  store i32 1, i32* %retval, align 4, !dbg !1188
  br label %return, !dbg !1188

if.else:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8*** %prevp, metadata !1190, metadata !DIExpression()), !dbg !1192
  call void @llvm.dbg.declare(metadata %struct.CCGFace** %f, metadata !1193, metadata !DIExpression()), !dbg !1194
  %2 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !1195
  %fMap = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %2, i32 0, i32 2, !dbg !1196
  %3 = load %struct._EHash*, %struct._EHash** %fMap, align 8, !dbg !1196
  %4 = load i8*, i8** %fHDL.addr, align 8, !dbg !1197
  %call = call i8* @_ehash_lookupWithPrev(%struct._EHash* %3, i8* %4, i8*** %prevp), !dbg !1198
  %5 = bitcast i8* %call to %struct.CCGFace*, !dbg !1198
  store %struct.CCGFace* %5, %struct.CCGFace** %f, align 8, !dbg !1194
  %6 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !1199
  %tobool = icmp ne %struct.CCGFace* %6, null, !dbg !1199
  br i1 %tobool, label %if.else2, label %if.then1, !dbg !1201

if.then1:                                         ; preds = %if.else
  store i32 2, i32* %retval, align 4, !dbg !1202
  br label %return, !dbg !1202

if.else2:                                         ; preds = %if.else
  %7 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !1204
  %next = getelementptr inbounds %struct.CCGFace, %struct.CCGFace* %7, i32 0, i32 0, !dbg !1206
  %8 = load %struct.CCGFace*, %struct.CCGFace** %next, align 8, !dbg !1206
  %9 = bitcast %struct.CCGFace* %8 to i8*, !dbg !1204
  %10 = load i8**, i8*** %prevp, align 8, !dbg !1207
  store i8* %9, i8** %10, align 8, !dbg !1208
  %11 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !1209
  %12 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !1210
  call void @_face_unlinkMarkAndFree(%struct.CCGFace* %11, %struct.CCGSubSurf* %12), !dbg !1211
  br label %if.end

if.end:                                           ; preds = %if.else2
  br label %if.end3

if.end3:                                          ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !1212
  br label %return, !dbg !1212

return:                                           ; preds = %if.end3, %if.then1, %if.then
  %13 = load i32, i32* %retval, align 4, !dbg !1213
  ret i32 %13, !dbg !1213
}

; Function Attrs: noinline nounwind uwtable
define internal void @_face_unlinkMarkAndFree(%struct.CCGFace* %f, %struct.CCGSubSurf* %ss) #0 !dbg !1214 {
entry:
  %f.addr = alloca %struct.CCGFace*, align 8
  %ss.addr = alloca %struct.CCGSubSurf*, align 8
  %j = alloca i32, align 4
  store %struct.CCGFace* %f, %struct.CCGFace** %f.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGFace** %f.addr, metadata !1215, metadata !DIExpression()), !dbg !1216
  store %struct.CCGSubSurf* %ss, %struct.CCGSubSurf** %ss.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGSubSurf** %ss.addr, metadata !1217, metadata !DIExpression()), !dbg !1218
  call void @llvm.dbg.declare(metadata i32* %j, metadata !1219, metadata !DIExpression()), !dbg !1220
  store i32 0, i32* %j, align 4, !dbg !1221
  br label %for.cond, !dbg !1223

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %j, align 4, !dbg !1224
  %1 = load %struct.CCGFace*, %struct.CCGFace** %f.addr, align 8, !dbg !1226
  %numVerts = getelementptr inbounds %struct.CCGFace, %struct.CCGFace* %1, i32 0, i32 2, !dbg !1227
  %2 = load i16, i16* %numVerts, align 8, !dbg !1227
  %conv = sext i16 %2 to i32, !dbg !1226
  %cmp = icmp slt i32 %0, %conv, !dbg !1228
  br i1 %cmp, label %for.body, label %for.end, !dbg !1229

for.body:                                         ; preds = %for.cond
  %3 = load %struct.CCGFace*, %struct.CCGFace** %f.addr, align 8, !dbg !1230
  %call = call %struct.CCGVert** @FACE_getVerts(%struct.CCGFace* %3), !dbg !1232
  %4 = load i32, i32* %j, align 4, !dbg !1233
  %idxprom = sext i32 %4 to i64, !dbg !1232
  %arrayidx = getelementptr inbounds %struct.CCGVert*, %struct.CCGVert** %call, i64 %idxprom, !dbg !1232
  %5 = load %struct.CCGVert*, %struct.CCGVert** %arrayidx, align 8, !dbg !1232
  %6 = load %struct.CCGFace*, %struct.CCGFace** %f.addr, align 8, !dbg !1234
  call void @_vert_remFace(%struct.CCGVert* %5, %struct.CCGFace* %6), !dbg !1235
  %7 = load %struct.CCGFace*, %struct.CCGFace** %f.addr, align 8, !dbg !1236
  %call2 = call %struct.CCGEdge** @FACE_getEdges(%struct.CCGFace* %7), !dbg !1237
  %8 = load i32, i32* %j, align 4, !dbg !1238
  %idxprom3 = sext i32 %8 to i64, !dbg !1237
  %arrayidx4 = getelementptr inbounds %struct.CCGEdge*, %struct.CCGEdge** %call2, i64 %idxprom3, !dbg !1237
  %9 = load %struct.CCGEdge*, %struct.CCGEdge** %arrayidx4, align 8, !dbg !1237
  %10 = load %struct.CCGFace*, %struct.CCGFace** %f.addr, align 8, !dbg !1239
  call void @_edge_remFace(%struct.CCGEdge* %9, %struct.CCGFace* %10), !dbg !1240
  %11 = load %struct.CCGFace*, %struct.CCGFace** %f.addr, align 8, !dbg !1241
  %call5 = call %struct.CCGVert** @FACE_getVerts(%struct.CCGFace* %11), !dbg !1242
  %12 = load i32, i32* %j, align 4, !dbg !1243
  %idxprom6 = sext i32 %12 to i64, !dbg !1242
  %arrayidx7 = getelementptr inbounds %struct.CCGVert*, %struct.CCGVert** %call5, i64 %idxprom6, !dbg !1242
  %13 = load %struct.CCGVert*, %struct.CCGVert** %arrayidx7, align 8, !dbg !1242
  %flags = getelementptr inbounds %struct.CCGVert, %struct.CCGVert* %13, i32 0, i32 4, !dbg !1244
  %14 = load i16, i16* %flags, align 4, !dbg !1245
  %conv8 = sext i16 %14 to i32, !dbg !1245
  %or = or i32 %conv8, 1, !dbg !1245
  %conv9 = trunc i32 %or to i16, !dbg !1245
  store i16 %conv9, i16* %flags, align 4, !dbg !1245
  br label %for.inc, !dbg !1246

for.inc:                                          ; preds = %for.body
  %15 = load i32, i32* %j, align 4, !dbg !1247
  %inc = add nsw i32 %15, 1, !dbg !1247
  store i32 %inc, i32* %j, align 4, !dbg !1247
  br label %for.cond, !dbg !1248, !llvm.loop !1249

for.end:                                          ; preds = %for.cond
  %16 = load %struct.CCGFace*, %struct.CCGFace** %f.addr, align 8, !dbg !1251
  %17 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !1252
  call void @_face_free(%struct.CCGFace* %16, %struct.CCGSubSurf* %17), !dbg !1253
  ret void, !dbg !1254
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @ccgSubSurf_syncVert(%struct.CCGSubSurf* %ss, i8* %vHDL, i8* %vertData, i32 %seam, %struct.CCGVert** %v_r) #0 !dbg !1255 {
entry:
  %retval = alloca i32, align 4
  %ss.addr = alloca %struct.CCGSubSurf*, align 8
  %vHDL.addr = alloca i8*, align 8
  %vertData.addr = alloca i8*, align 8
  %seam.addr = alloca i32, align 4
  %v_r.addr = alloca %struct.CCGVert**, align 8
  %prevp = alloca i8**, align 8
  %v = alloca %struct.CCGVert*, align 8
  %seamflag = alloca i16, align 2
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %e = alloca %struct.CCGEdge*, align 8
  %f = alloca %struct.CCGFace*, align 8
  store %struct.CCGSubSurf* %ss, %struct.CCGSubSurf** %ss.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGSubSurf** %ss.addr, metadata !1260, metadata !DIExpression()), !dbg !1261
  store i8* %vHDL, i8** %vHDL.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %vHDL.addr, metadata !1262, metadata !DIExpression()), !dbg !1263
  store i8* %vertData, i8** %vertData.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %vertData.addr, metadata !1264, metadata !DIExpression()), !dbg !1265
  store i32 %seam, i32* %seam.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %seam.addr, metadata !1266, metadata !DIExpression()), !dbg !1267
  store %struct.CCGVert** %v_r, %struct.CCGVert*** %v_r.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGVert*** %v_r.addr, metadata !1268, metadata !DIExpression()), !dbg !1269
  call void @llvm.dbg.declare(metadata i8*** %prevp, metadata !1270, metadata !DIExpression()), !dbg !1271
  call void @llvm.dbg.declare(metadata %struct.CCGVert** %v, metadata !1272, metadata !DIExpression()), !dbg !1273
  store %struct.CCGVert* null, %struct.CCGVert** %v, align 8, !dbg !1273
  call void @llvm.dbg.declare(metadata i16* %seamflag, metadata !1274, metadata !DIExpression()), !dbg !1275
  %0 = load i32, i32* %seam.addr, align 4, !dbg !1276
  %tobool = icmp ne i32 %0, 0, !dbg !1277
  %1 = zext i1 %tobool to i64, !dbg !1277
  %cond = select i1 %tobool, i32 4, i32 0, !dbg !1277
  %conv = trunc i32 %cond to i16, !dbg !1277
  store i16 %conv, i16* %seamflag, align 2, !dbg !1275
  %2 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !1278
  %syncState = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %2, i32 0, i32 22, !dbg !1280
  %3 = load i32, i32* %syncState, align 4, !dbg !1280
  %cmp = icmp eq i32 %3, 4, !dbg !1281
  br i1 %cmp, label %if.then, label %if.else64, !dbg !1282

if.then:                                          ; preds = %entry
  %4 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !1283
  %vMap = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %4, i32 0, i32 0, !dbg !1285
  %5 = load %struct._EHash*, %struct._EHash** %vMap, align 8, !dbg !1285
  %6 = load i8*, i8** %vHDL.addr, align 8, !dbg !1286
  %call = call i8* @_ehash_lookupWithPrev(%struct._EHash* %5, i8* %6, i8*** %prevp), !dbg !1287
  %7 = bitcast i8* %call to %struct.CCGVert*, !dbg !1287
  store %struct.CCGVert* %7, %struct.CCGVert** %v, align 8, !dbg !1288
  %8 = load %struct.CCGVert*, %struct.CCGVert** %v, align 8, !dbg !1289
  %tobool2 = icmp ne %struct.CCGVert* %8, null, !dbg !1289
  br i1 %tobool2, label %if.else, label %if.then3, !dbg !1291

if.then3:                                         ; preds = %if.then
  %9 = load i8*, i8** %vHDL.addr, align 8, !dbg !1292
  %10 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !1294
  %call4 = call %struct.CCGVert* @_vert_new(i8* %9, %struct.CCGSubSurf* %10), !dbg !1295
  store %struct.CCGVert* %call4, %struct.CCGVert** %v, align 8, !dbg !1296
  %11 = load %struct.CCGVert*, %struct.CCGVert** %v, align 8, !dbg !1297
  %12 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !1298
  %meshIFC = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %12, i32 0, i32 3, !dbg !1299
  %vertDataSize = getelementptr inbounds %struct.CCGMeshIFC, %struct.CCGMeshIFC* %meshIFC, i32 0, i32 4, !dbg !1300
  %13 = load i32, i32* %vertDataSize, align 8, !dbg !1300
  %call5 = call i8* @_vert_getCo(%struct.CCGVert* %11, i32 0, i32 %13), !dbg !1301
  %14 = bitcast i8* %call5 to float*, !dbg !1301
  %15 = load i8*, i8** %vertData.addr, align 8, !dbg !1302
  %16 = bitcast i8* %15 to float*, !dbg !1302
  %17 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !1303
  call void @VertDataCopy(float* %14, float* %16, %struct.CCGSubSurf* %17), !dbg !1304
  %18 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !1305
  %vMap6 = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %18, i32 0, i32 0, !dbg !1306
  %19 = load %struct._EHash*, %struct._EHash** %vMap6, align 8, !dbg !1306
  %20 = load %struct.CCGVert*, %struct.CCGVert** %v, align 8, !dbg !1307
  %21 = bitcast %struct.CCGVert* %20 to %struct._EHEntry*, !dbg !1308
  call void @_ehash_insert(%struct._EHash* %19, %struct._EHEntry* %21), !dbg !1309
  %22 = load i16, i16* %seamflag, align 2, !dbg !1310
  %conv7 = sext i16 %22 to i32, !dbg !1310
  %or = or i32 1, %conv7, !dbg !1311
  %conv8 = trunc i32 %or to i16, !dbg !1312
  %23 = load %struct.CCGVert*, %struct.CCGVert** %v, align 8, !dbg !1313
  %flags = getelementptr inbounds %struct.CCGVert, %struct.CCGVert* %23, i32 0, i32 4, !dbg !1314
  store i16 %conv8, i16* %flags, align 4, !dbg !1315
  br label %if.end63, !dbg !1316

if.else:                                          ; preds = %if.then
  %24 = load i8*, i8** %vertData.addr, align 8, !dbg !1317
  %25 = bitcast i8* %24 to float*, !dbg !1317
  %26 = load %struct.CCGVert*, %struct.CCGVert** %v, align 8, !dbg !1319
  %27 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !1320
  %meshIFC9 = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %27, i32 0, i32 3, !dbg !1321
  %vertDataSize10 = getelementptr inbounds %struct.CCGMeshIFC, %struct.CCGMeshIFC* %meshIFC9, i32 0, i32 4, !dbg !1322
  %28 = load i32, i32* %vertDataSize10, align 8, !dbg !1322
  %call11 = call i8* @_vert_getCo(%struct.CCGVert* %26, i32 0, i32 %28), !dbg !1323
  %29 = bitcast i8* %call11 to float*, !dbg !1323
  %30 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !1324
  %call12 = call i32 @VertDataEqual(float* %25, float* %29, %struct.CCGSubSurf* %30), !dbg !1325
  %tobool13 = icmp ne i32 %call12, 0, !dbg !1325
  br i1 %tobool13, label %lor.lhs.false, label %if.then19, !dbg !1326

lor.lhs.false:                                    ; preds = %if.else
  %31 = load %struct.CCGVert*, %struct.CCGVert** %v, align 8, !dbg !1327
  %flags14 = getelementptr inbounds %struct.CCGVert, %struct.CCGVert* %31, i32 0, i32 4, !dbg !1328
  %32 = load i16, i16* %flags14, align 4, !dbg !1328
  %conv15 = sext i16 %32 to i32, !dbg !1327
  %and = and i32 %conv15, 4, !dbg !1329
  %33 = load i16, i16* %seamflag, align 2, !dbg !1330
  %conv16 = sext i16 %33 to i32, !dbg !1330
  %cmp17 = icmp ne i32 %and, %conv16, !dbg !1331
  br i1 %cmp17, label %if.then19, label %if.end, !dbg !1332

if.then19:                                        ; preds = %lor.lhs.false, %if.else
  call void @llvm.dbg.declare(metadata i32* %i, metadata !1333, metadata !DIExpression()), !dbg !1335
  call void @llvm.dbg.declare(metadata i32* %j, metadata !1336, metadata !DIExpression()), !dbg !1337
  %34 = load %struct.CCGVert*, %struct.CCGVert** %v, align 8, !dbg !1338
  %35 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !1339
  %meshIFC20 = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %35, i32 0, i32 3, !dbg !1340
  %vertDataSize21 = getelementptr inbounds %struct.CCGMeshIFC, %struct.CCGMeshIFC* %meshIFC20, i32 0, i32 4, !dbg !1341
  %36 = load i32, i32* %vertDataSize21, align 8, !dbg !1341
  %call22 = call i8* @_vert_getCo(%struct.CCGVert* %34, i32 0, i32 %36), !dbg !1342
  %37 = bitcast i8* %call22 to float*, !dbg !1342
  %38 = load i8*, i8** %vertData.addr, align 8, !dbg !1343
  %39 = bitcast i8* %38 to float*, !dbg !1343
  %40 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !1344
  call void @VertDataCopy(float* %37, float* %39, %struct.CCGSubSurf* %40), !dbg !1345
  %41 = load i16, i16* %seamflag, align 2, !dbg !1346
  %conv23 = sext i16 %41 to i32, !dbg !1346
  %or24 = or i32 1, %conv23, !dbg !1347
  %conv25 = trunc i32 %or24 to i16, !dbg !1348
  %42 = load %struct.CCGVert*, %struct.CCGVert** %v, align 8, !dbg !1349
  %flags26 = getelementptr inbounds %struct.CCGVert, %struct.CCGVert* %42, i32 0, i32 4, !dbg !1350
  store i16 %conv25, i16* %flags26, align 4, !dbg !1351
  store i32 0, i32* %i, align 4, !dbg !1352
  br label %for.cond, !dbg !1354

for.cond:                                         ; preds = %for.inc, %if.then19
  %43 = load i32, i32* %i, align 4, !dbg !1355
  %44 = load %struct.CCGVert*, %struct.CCGVert** %v, align 8, !dbg !1357
  %numEdges = getelementptr inbounds %struct.CCGVert, %struct.CCGVert* %44, i32 0, i32 2, !dbg !1358
  %45 = load i16, i16* %numEdges, align 8, !dbg !1358
  %conv27 = sext i16 %45 to i32, !dbg !1357
  %cmp28 = icmp slt i32 %43, %conv27, !dbg !1359
  br i1 %cmp28, label %for.body, label %for.end, !dbg !1360

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.CCGEdge** %e, metadata !1361, metadata !DIExpression()), !dbg !1363
  %46 = load %struct.CCGVert*, %struct.CCGVert** %v, align 8, !dbg !1364
  %edges = getelementptr inbounds %struct.CCGVert, %struct.CCGVert* %46, i32 0, i32 6, !dbg !1365
  %47 = load %struct.CCGEdge**, %struct.CCGEdge*** %edges, align 8, !dbg !1365
  %48 = load i32, i32* %i, align 4, !dbg !1366
  %idxprom = sext i32 %48 to i64, !dbg !1364
  %arrayidx = getelementptr inbounds %struct.CCGEdge*, %struct.CCGEdge** %47, i64 %idxprom, !dbg !1364
  %49 = load %struct.CCGEdge*, %struct.CCGEdge** %arrayidx, align 8, !dbg !1364
  store %struct.CCGEdge* %49, %struct.CCGEdge** %e, align 8, !dbg !1363
  %50 = load %struct.CCGEdge*, %struct.CCGEdge** %e, align 8, !dbg !1367
  %v0 = getelementptr inbounds %struct.CCGEdge, %struct.CCGEdge* %50, i32 0, i32 5, !dbg !1368
  %51 = load %struct.CCGVert*, %struct.CCGVert** %v0, align 8, !dbg !1368
  %flags30 = getelementptr inbounds %struct.CCGVert, %struct.CCGVert* %51, i32 0, i32 4, !dbg !1369
  %52 = load i16, i16* %flags30, align 4, !dbg !1370
  %conv31 = sext i16 %52 to i32, !dbg !1370
  %or32 = or i32 %conv31, 1, !dbg !1370
  %conv33 = trunc i32 %or32 to i16, !dbg !1370
  store i16 %conv33, i16* %flags30, align 4, !dbg !1370
  %53 = load %struct.CCGEdge*, %struct.CCGEdge** %e, align 8, !dbg !1371
  %v1 = getelementptr inbounds %struct.CCGEdge, %struct.CCGEdge* %53, i32 0, i32 6, !dbg !1372
  %54 = load %struct.CCGVert*, %struct.CCGVert** %v1, align 8, !dbg !1372
  %flags34 = getelementptr inbounds %struct.CCGVert, %struct.CCGVert* %54, i32 0, i32 4, !dbg !1373
  %55 = load i16, i16* %flags34, align 4, !dbg !1374
  %conv35 = sext i16 %55 to i32, !dbg !1374
  %or36 = or i32 %conv35, 1, !dbg !1374
  %conv37 = trunc i32 %or36 to i16, !dbg !1374
  store i16 %conv37, i16* %flags34, align 4, !dbg !1374
  br label %for.inc, !dbg !1375

for.inc:                                          ; preds = %for.body
  %56 = load i32, i32* %i, align 4, !dbg !1376
  %inc = add nsw i32 %56, 1, !dbg !1376
  store i32 %inc, i32* %i, align 4, !dbg !1376
  br label %for.cond, !dbg !1377, !llvm.loop !1378

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !1380
  br label %for.cond38, !dbg !1382

for.cond38:                                       ; preds = %for.inc60, %for.end
  %57 = load i32, i32* %i, align 4, !dbg !1383
  %58 = load %struct.CCGVert*, %struct.CCGVert** %v, align 8, !dbg !1385
  %numFaces = getelementptr inbounds %struct.CCGVert, %struct.CCGVert* %58, i32 0, i32 3, !dbg !1386
  %59 = load i16, i16* %numFaces, align 2, !dbg !1386
  %conv39 = sext i16 %59 to i32, !dbg !1385
  %cmp40 = icmp slt i32 %57, %conv39, !dbg !1387
  br i1 %cmp40, label %for.body42, label %for.end62, !dbg !1388

for.body42:                                       ; preds = %for.cond38
  call void @llvm.dbg.declare(metadata %struct.CCGFace** %f, metadata !1389, metadata !DIExpression()), !dbg !1391
  %60 = load %struct.CCGVert*, %struct.CCGVert** %v, align 8, !dbg !1392
  %faces = getelementptr inbounds %struct.CCGVert, %struct.CCGVert* %60, i32 0, i32 7, !dbg !1393
  %61 = load %struct.CCGFace**, %struct.CCGFace*** %faces, align 8, !dbg !1393
  %62 = load i32, i32* %i, align 4, !dbg !1394
  %idxprom43 = sext i32 %62 to i64, !dbg !1392
  %arrayidx44 = getelementptr inbounds %struct.CCGFace*, %struct.CCGFace** %61, i64 %idxprom43, !dbg !1392
  %63 = load %struct.CCGFace*, %struct.CCGFace** %arrayidx44, align 8, !dbg !1392
  store %struct.CCGFace* %63, %struct.CCGFace** %f, align 8, !dbg !1391
  store i32 0, i32* %j, align 4, !dbg !1395
  br label %for.cond45, !dbg !1397

for.cond45:                                       ; preds = %for.inc57, %for.body42
  %64 = load i32, i32* %j, align 4, !dbg !1398
  %65 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !1400
  %numVerts = getelementptr inbounds %struct.CCGFace, %struct.CCGFace* %65, i32 0, i32 2, !dbg !1401
  %66 = load i16, i16* %numVerts, align 8, !dbg !1401
  %conv46 = sext i16 %66 to i32, !dbg !1400
  %cmp47 = icmp slt i32 %64, %conv46, !dbg !1402
  br i1 %cmp47, label %for.body49, label %for.end59, !dbg !1403

for.body49:                                       ; preds = %for.cond45
  %67 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !1404
  %call50 = call %struct.CCGVert** @FACE_getVerts(%struct.CCGFace* %67), !dbg !1406
  %68 = load i32, i32* %j, align 4, !dbg !1407
  %idxprom51 = sext i32 %68 to i64, !dbg !1406
  %arrayidx52 = getelementptr inbounds %struct.CCGVert*, %struct.CCGVert** %call50, i64 %idxprom51, !dbg !1406
  %69 = load %struct.CCGVert*, %struct.CCGVert** %arrayidx52, align 8, !dbg !1406
  %flags53 = getelementptr inbounds %struct.CCGVert, %struct.CCGVert* %69, i32 0, i32 4, !dbg !1408
  %70 = load i16, i16* %flags53, align 4, !dbg !1409
  %conv54 = sext i16 %70 to i32, !dbg !1409
  %or55 = or i32 %conv54, 1, !dbg !1409
  %conv56 = trunc i32 %or55 to i16, !dbg !1409
  store i16 %conv56, i16* %flags53, align 4, !dbg !1409
  br label %for.inc57, !dbg !1410

for.inc57:                                        ; preds = %for.body49
  %71 = load i32, i32* %j, align 4, !dbg !1411
  %inc58 = add nsw i32 %71, 1, !dbg !1411
  store i32 %inc58, i32* %j, align 4, !dbg !1411
  br label %for.cond45, !dbg !1412, !llvm.loop !1413

for.end59:                                        ; preds = %for.cond45
  br label %for.inc60, !dbg !1415

for.inc60:                                        ; preds = %for.end59
  %72 = load i32, i32* %i, align 4, !dbg !1416
  %inc61 = add nsw i32 %72, 1, !dbg !1416
  store i32 %inc61, i32* %i, align 4, !dbg !1416
  br label %for.cond38, !dbg !1417, !llvm.loop !1418

for.end62:                                        ; preds = %for.cond38
  br label %if.end, !dbg !1420

if.end:                                           ; preds = %for.end62, %lor.lhs.false
  br label %if.end63

if.end63:                                         ; preds = %if.end, %if.then3
  br label %if.end110, !dbg !1421

if.else64:                                        ; preds = %entry
  %73 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !1422
  %syncState65 = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %73, i32 0, i32 22, !dbg !1425
  %74 = load i32, i32* %syncState65, align 4, !dbg !1425
  %cmp66 = icmp ne i32 %74, 1, !dbg !1426
  br i1 %cmp66, label %if.then68, label %if.end69, !dbg !1427

if.then68:                                        ; preds = %if.else64
  store i32 1, i32* %retval, align 4, !dbg !1428
  br label %return, !dbg !1428

if.end69:                                         ; preds = %if.else64
  %75 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !1430
  %oldVMap = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %75, i32 0, i32 23, !dbg !1431
  %76 = load %struct._EHash*, %struct._EHash** %oldVMap, align 8, !dbg !1431
  %77 = load i8*, i8** %vHDL.addr, align 8, !dbg !1432
  %call70 = call i8* @_ehash_lookupWithPrev(%struct._EHash* %76, i8* %77, i8*** %prevp), !dbg !1433
  %78 = bitcast i8* %call70 to %struct.CCGVert*, !dbg !1433
  store %struct.CCGVert* %78, %struct.CCGVert** %v, align 8, !dbg !1434
  %79 = load %struct.CCGVert*, %struct.CCGVert** %v, align 8, !dbg !1435
  %tobool71 = icmp ne %struct.CCGVert* %79, null, !dbg !1435
  br i1 %tobool71, label %if.else82, label %if.then72, !dbg !1437

if.then72:                                        ; preds = %if.end69
  %80 = load i8*, i8** %vHDL.addr, align 8, !dbg !1438
  %81 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !1440
  %call73 = call %struct.CCGVert* @_vert_new(i8* %80, %struct.CCGSubSurf* %81), !dbg !1441
  store %struct.CCGVert* %call73, %struct.CCGVert** %v, align 8, !dbg !1442
  %82 = load %struct.CCGVert*, %struct.CCGVert** %v, align 8, !dbg !1443
  %83 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !1444
  %meshIFC74 = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %83, i32 0, i32 3, !dbg !1445
  %vertDataSize75 = getelementptr inbounds %struct.CCGMeshIFC, %struct.CCGMeshIFC* %meshIFC74, i32 0, i32 4, !dbg !1446
  %84 = load i32, i32* %vertDataSize75, align 8, !dbg !1446
  %call76 = call i8* @_vert_getCo(%struct.CCGVert* %82, i32 0, i32 %84), !dbg !1447
  %85 = bitcast i8* %call76 to float*, !dbg !1447
  %86 = load i8*, i8** %vertData.addr, align 8, !dbg !1448
  %87 = bitcast i8* %86 to float*, !dbg !1448
  %88 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !1449
  call void @VertDataCopy(float* %85, float* %87, %struct.CCGSubSurf* %88), !dbg !1450
  %89 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !1451
  %vMap77 = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %89, i32 0, i32 0, !dbg !1452
  %90 = load %struct._EHash*, %struct._EHash** %vMap77, align 8, !dbg !1452
  %91 = load %struct.CCGVert*, %struct.CCGVert** %v, align 8, !dbg !1453
  %92 = bitcast %struct.CCGVert* %91 to %struct._EHEntry*, !dbg !1454
  call void @_ehash_insert(%struct._EHash* %90, %struct._EHEntry* %92), !dbg !1455
  %93 = load i16, i16* %seamflag, align 2, !dbg !1456
  %conv78 = sext i16 %93 to i32, !dbg !1456
  %or79 = or i32 1, %conv78, !dbg !1457
  %conv80 = trunc i32 %or79 to i16, !dbg !1458
  %94 = load %struct.CCGVert*, %struct.CCGVert** %v, align 8, !dbg !1459
  %flags81 = getelementptr inbounds %struct.CCGVert, %struct.CCGVert* %94, i32 0, i32 4, !dbg !1460
  store i16 %conv80, i16* %flags81, align 4, !dbg !1461
  br label %if.end109, !dbg !1462

if.else82:                                        ; preds = %if.end69
  %95 = load i8*, i8** %vertData.addr, align 8, !dbg !1463
  %96 = bitcast i8* %95 to float*, !dbg !1463
  %97 = load %struct.CCGVert*, %struct.CCGVert** %v, align 8, !dbg !1465
  %98 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !1466
  %meshIFC83 = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %98, i32 0, i32 3, !dbg !1467
  %vertDataSize84 = getelementptr inbounds %struct.CCGMeshIFC, %struct.CCGMeshIFC* %meshIFC83, i32 0, i32 4, !dbg !1468
  %99 = load i32, i32* %vertDataSize84, align 8, !dbg !1468
  %call85 = call i8* @_vert_getCo(%struct.CCGVert* %97, i32 0, i32 %99), !dbg !1469
  %100 = bitcast i8* %call85 to float*, !dbg !1469
  %101 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !1470
  %call86 = call i32 @VertDataEqual(float* %96, float* %100, %struct.CCGSubSurf* %101), !dbg !1471
  %tobool87 = icmp ne i32 %call86, 0, !dbg !1471
  br i1 %tobool87, label %lor.lhs.false88, label %if.then95, !dbg !1472

lor.lhs.false88:                                  ; preds = %if.else82
  %102 = load %struct.CCGVert*, %struct.CCGVert** %v, align 8, !dbg !1473
  %flags89 = getelementptr inbounds %struct.CCGVert, %struct.CCGVert* %102, i32 0, i32 4, !dbg !1474
  %103 = load i16, i16* %flags89, align 4, !dbg !1474
  %conv90 = sext i16 %103 to i32, !dbg !1473
  %and91 = and i32 %conv90, 4, !dbg !1475
  %104 = load i16, i16* %seamflag, align 2, !dbg !1476
  %conv92 = sext i16 %104 to i32, !dbg !1476
  %cmp93 = icmp ne i32 %and91, %conv92, !dbg !1477
  br i1 %cmp93, label %if.then95, label %if.else104, !dbg !1478

if.then95:                                        ; preds = %lor.lhs.false88, %if.else82
  %105 = load %struct.CCGVert*, %struct.CCGVert** %v, align 8, !dbg !1479
  %next = getelementptr inbounds %struct.CCGVert, %struct.CCGVert* %105, i32 0, i32 0, !dbg !1481
  %106 = load %struct.CCGVert*, %struct.CCGVert** %next, align 8, !dbg !1481
  %107 = bitcast %struct.CCGVert* %106 to i8*, !dbg !1479
  %108 = load i8**, i8*** %prevp, align 8, !dbg !1482
  store i8* %107, i8** %108, align 8, !dbg !1483
  %109 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !1484
  %vMap96 = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %109, i32 0, i32 0, !dbg !1485
  %110 = load %struct._EHash*, %struct._EHash** %vMap96, align 8, !dbg !1485
  %111 = load %struct.CCGVert*, %struct.CCGVert** %v, align 8, !dbg !1486
  %112 = bitcast %struct.CCGVert* %111 to %struct._EHEntry*, !dbg !1487
  call void @_ehash_insert(%struct._EHash* %110, %struct._EHEntry* %112), !dbg !1488
  %113 = load %struct.CCGVert*, %struct.CCGVert** %v, align 8, !dbg !1489
  %114 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !1490
  %meshIFC97 = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %114, i32 0, i32 3, !dbg !1491
  %vertDataSize98 = getelementptr inbounds %struct.CCGMeshIFC, %struct.CCGMeshIFC* %meshIFC97, i32 0, i32 4, !dbg !1492
  %115 = load i32, i32* %vertDataSize98, align 8, !dbg !1492
  %call99 = call i8* @_vert_getCo(%struct.CCGVert* %113, i32 0, i32 %115), !dbg !1493
  %116 = bitcast i8* %call99 to float*, !dbg !1493
  %117 = load i8*, i8** %vertData.addr, align 8, !dbg !1494
  %118 = bitcast i8* %117 to float*, !dbg !1494
  %119 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !1495
  call void @VertDataCopy(float* %116, float* %118, %struct.CCGSubSurf* %119), !dbg !1496
  %120 = load i16, i16* %seamflag, align 2, !dbg !1497
  %conv100 = sext i16 %120 to i32, !dbg !1497
  %or101 = or i32 3, %conv100, !dbg !1498
  %conv102 = trunc i32 %or101 to i16, !dbg !1499
  %121 = load %struct.CCGVert*, %struct.CCGVert** %v, align 8, !dbg !1500
  %flags103 = getelementptr inbounds %struct.CCGVert, %struct.CCGVert* %121, i32 0, i32 4, !dbg !1501
  store i16 %conv102, i16* %flags103, align 4, !dbg !1502
  br label %if.end108, !dbg !1503

if.else104:                                       ; preds = %lor.lhs.false88
  %122 = load %struct.CCGVert*, %struct.CCGVert** %v, align 8, !dbg !1504
  %next105 = getelementptr inbounds %struct.CCGVert, %struct.CCGVert* %122, i32 0, i32 0, !dbg !1506
  %123 = load %struct.CCGVert*, %struct.CCGVert** %next105, align 8, !dbg !1506
  %124 = bitcast %struct.CCGVert* %123 to i8*, !dbg !1504
  %125 = load i8**, i8*** %prevp, align 8, !dbg !1507
  store i8* %124, i8** %125, align 8, !dbg !1508
  %126 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !1509
  %vMap106 = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %126, i32 0, i32 0, !dbg !1510
  %127 = load %struct._EHash*, %struct._EHash** %vMap106, align 8, !dbg !1510
  %128 = load %struct.CCGVert*, %struct.CCGVert** %v, align 8, !dbg !1511
  %129 = bitcast %struct.CCGVert* %128 to %struct._EHEntry*, !dbg !1512
  call void @_ehash_insert(%struct._EHash* %127, %struct._EHEntry* %129), !dbg !1513
  %130 = load %struct.CCGVert*, %struct.CCGVert** %v, align 8, !dbg !1514
  %flags107 = getelementptr inbounds %struct.CCGVert, %struct.CCGVert* %130, i32 0, i32 4, !dbg !1515
  store i16 0, i16* %flags107, align 4, !dbg !1516
  br label %if.end108

if.end108:                                        ; preds = %if.else104, %if.then95
  br label %if.end109

if.end109:                                        ; preds = %if.end108, %if.then72
  br label %if.end110

if.end110:                                        ; preds = %if.end109, %if.end63
  %131 = load %struct.CCGVert**, %struct.CCGVert*** %v_r.addr, align 8, !dbg !1517
  %tobool111 = icmp ne %struct.CCGVert** %131, null, !dbg !1517
  br i1 %tobool111, label %if.then112, label %if.end113, !dbg !1519

if.then112:                                       ; preds = %if.end110
  %132 = load %struct.CCGVert*, %struct.CCGVert** %v, align 8, !dbg !1520
  %133 = load %struct.CCGVert**, %struct.CCGVert*** %v_r.addr, align 8, !dbg !1521
  store %struct.CCGVert* %132, %struct.CCGVert** %133, align 8, !dbg !1522
  br label %if.end113, !dbg !1523

if.end113:                                        ; preds = %if.then112, %if.end110
  store i32 0, i32* %retval, align 4, !dbg !1524
  br label %return, !dbg !1524

return:                                           ; preds = %if.end113, %if.then68
  %134 = load i32, i32* %retval, align 4, !dbg !1525
  ret i32 %134, !dbg !1525
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.CCGVert* @_vert_new(i8* %vHDL, %struct.CCGSubSurf* %ss) #0 !dbg !1526 {
entry:
  %vHDL.addr = alloca i8*, align 8
  %ss.addr = alloca %struct.CCGSubSurf*, align 8
  %num_vert_data = alloca i32, align 4
  %v = alloca %struct.CCGVert*, align 8
  %userData = alloca i8*, align 8
  store i8* %vHDL, i8** %vHDL.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %vHDL.addr, metadata !1529, metadata !DIExpression()), !dbg !1530
  store %struct.CCGSubSurf* %ss, %struct.CCGSubSurf** %ss.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGSubSurf** %ss.addr, metadata !1531, metadata !DIExpression()), !dbg !1532
  call void @llvm.dbg.declare(metadata i32* %num_vert_data, metadata !1533, metadata !DIExpression()), !dbg !1534
  %0 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !1535
  %subdivLevels = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %0, i32 0, i32 6, !dbg !1536
  %1 = load i32, i32* %subdivLevels, align 8, !dbg !1536
  %add = add nsw i32 %1, 1, !dbg !1537
  store i32 %add, i32* %num_vert_data, align 4, !dbg !1534
  call void @llvm.dbg.declare(metadata %struct.CCGVert** %v, metadata !1538, metadata !DIExpression()), !dbg !1539
  %2 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !1540
  %allocatorIFC = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %2, i32 0, i32 4, !dbg !1540
  %alloc = getelementptr inbounds %struct.CCGAllocatorIFC, %struct.CCGAllocatorIFC* %allocatorIFC, i32 0, i32 0, !dbg !1540
  %3 = load i8* (i8*, i32)*, i8* (i8*, i32)** %alloc, align 8, !dbg !1540
  %4 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !1540
  %allocator = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %4, i32 0, i32 5, !dbg !1540
  %5 = load i8*, i8** %allocator, align 8, !dbg !1540
  %6 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !1540
  %meshIFC = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %6, i32 0, i32 3, !dbg !1540
  %vertDataSize = getelementptr inbounds %struct.CCGMeshIFC, %struct.CCGMeshIFC* %meshIFC, i32 0, i32 4, !dbg !1540
  %7 = load i32, i32* %vertDataSize, align 8, !dbg !1540
  %8 = load i32, i32* %num_vert_data, align 4, !dbg !1540
  %mul = mul nsw i32 %7, %8, !dbg !1540
  %conv = sext i32 %mul to i64, !dbg !1540
  %add1 = add i64 40, %conv, !dbg !1540
  %9 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !1540
  %meshIFC2 = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %9, i32 0, i32 3, !dbg !1540
  %vertUserSize = getelementptr inbounds %struct.CCGMeshIFC, %struct.CCGMeshIFC* %meshIFC2, i32 0, i32 0, !dbg !1540
  %10 = load i32, i32* %vertUserSize, align 8, !dbg !1540
  %conv3 = sext i32 %10 to i64, !dbg !1540
  %add4 = add i64 %add1, %conv3, !dbg !1540
  %conv5 = trunc i64 %add4 to i32, !dbg !1540
  %call = call i8* %3(i8* %5, i32 %conv5), !dbg !1540
  %11 = bitcast i8* %call to %struct.CCGVert*, !dbg !1540
  store %struct.CCGVert* %11, %struct.CCGVert** %v, align 8, !dbg !1539
  call void @llvm.dbg.declare(metadata i8** %userData, metadata !1541, metadata !DIExpression()), !dbg !1542
  %12 = load i8*, i8** %vHDL.addr, align 8, !dbg !1543
  %13 = load %struct.CCGVert*, %struct.CCGVert** %v, align 8, !dbg !1544
  %vHDL6 = getelementptr inbounds %struct.CCGVert, %struct.CCGVert* %13, i32 0, i32 1, !dbg !1545
  store i8* %12, i8** %vHDL6, align 8, !dbg !1546
  %14 = load %struct.CCGVert*, %struct.CCGVert** %v, align 8, !dbg !1547
  %edges = getelementptr inbounds %struct.CCGVert, %struct.CCGVert* %14, i32 0, i32 6, !dbg !1548
  store %struct.CCGEdge** null, %struct.CCGEdge*** %edges, align 8, !dbg !1549
  %15 = load %struct.CCGVert*, %struct.CCGVert** %v, align 8, !dbg !1550
  %faces = getelementptr inbounds %struct.CCGVert, %struct.CCGVert* %15, i32 0, i32 7, !dbg !1551
  store %struct.CCGFace** null, %struct.CCGFace*** %faces, align 8, !dbg !1552
  %16 = load %struct.CCGVert*, %struct.CCGVert** %v, align 8, !dbg !1553
  %numFaces = getelementptr inbounds %struct.CCGVert, %struct.CCGVert* %16, i32 0, i32 3, !dbg !1554
  store i16 0, i16* %numFaces, align 2, !dbg !1555
  %17 = load %struct.CCGVert*, %struct.CCGVert** %v, align 8, !dbg !1556
  %numEdges = getelementptr inbounds %struct.CCGVert, %struct.CCGVert* %17, i32 0, i32 2, !dbg !1557
  store i16 0, i16* %numEdges, align 8, !dbg !1558
  %18 = load %struct.CCGVert*, %struct.CCGVert** %v, align 8, !dbg !1559
  %flags = getelementptr inbounds %struct.CCGVert, %struct.CCGVert* %18, i32 0, i32 4, !dbg !1560
  store i16 0, i16* %flags, align 4, !dbg !1561
  %19 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !1562
  %20 = load %struct.CCGVert*, %struct.CCGVert** %v, align 8, !dbg !1563
  %call7 = call i8* @ccgSubSurf_getVertUserData(%struct.CCGSubSurf* %19, %struct.CCGVert* %20), !dbg !1564
  store i8* %call7, i8** %userData, align 8, !dbg !1565
  %21 = load i8*, i8** %userData, align 8, !dbg !1566
  %22 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !1567
  %meshIFC8 = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %22, i32 0, i32 3, !dbg !1568
  %vertUserSize9 = getelementptr inbounds %struct.CCGMeshIFC, %struct.CCGMeshIFC* %meshIFC8, i32 0, i32 0, !dbg !1569
  %23 = load i32, i32* %vertUserSize9, align 8, !dbg !1569
  %conv10 = sext i32 %23 to i64, !dbg !1567
  call void @llvm.memset.p0i8.i64(i8* align 1 %21, i8 0, i64 %conv10, i1 false), !dbg !1570
  %24 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !1571
  %useAgeCounts = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %24, i32 0, i32 18, !dbg !1573
  %25 = load i32, i32* %useAgeCounts, align 4, !dbg !1573
  %tobool = icmp ne i32 %25, 0, !dbg !1571
  br i1 %tobool, label %if.then, label %if.end, !dbg !1574

if.then:                                          ; preds = %entry
  %26 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !1575
  %currentAge = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %26, i32 0, i32 17, !dbg !1576
  %27 = load i32, i32* %currentAge, align 8, !dbg !1576
  %28 = load i8*, i8** %userData, align 8, !dbg !1577
  %29 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !1578
  %vertUserAgeOffset = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %29, i32 0, i32 19, !dbg !1579
  %30 = load i32, i32* %vertUserAgeOffset, align 8, !dbg !1579
  %idxprom = sext i32 %30 to i64, !dbg !1577
  %arrayidx = getelementptr inbounds i8, i8* %28, i64 %idxprom, !dbg !1577
  %31 = bitcast i8* %arrayidx to i32*, !dbg !1580
  store i32 %27, i32* %31, align 4, !dbg !1581
  br label %if.end, !dbg !1580

if.end:                                           ; preds = %if.then, %entry
  %32 = load %struct.CCGVert*, %struct.CCGVert** %v, align 8, !dbg !1582
  ret %struct.CCGVert* %32, !dbg !1583
}

; Function Attrs: noinline nounwind uwtable
define internal void @VertDataCopy(float* %dst, float* %src, %struct.CCGSubSurf* %ss) #0 !dbg !1584 {
entry:
  %dst.addr = alloca float*, align 8
  %src.addr = alloca float*, align 8
  %ss.addr = alloca %struct.CCGSubSurf*, align 8
  %i = alloca i32, align 4
  store float* %dst, float** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata float** %dst.addr, metadata !1591, metadata !DIExpression()), !dbg !1592
  store float* %src, float** %src.addr, align 8
  call void @llvm.dbg.declare(metadata float** %src.addr, metadata !1593, metadata !DIExpression()), !dbg !1594
  store %struct.CCGSubSurf* %ss, %struct.CCGSubSurf** %ss.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGSubSurf** %ss.addr, metadata !1595, metadata !DIExpression()), !dbg !1596
  call void @llvm.dbg.declare(metadata i32* %i, metadata !1597, metadata !DIExpression()), !dbg !1598
  store i32 0, i32* %i, align 4, !dbg !1599
  br label %for.cond, !dbg !1601

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !1602
  %1 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !1604
  %meshIFC = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %1, i32 0, i32 3, !dbg !1605
  %numLayers = getelementptr inbounds %struct.CCGMeshIFC, %struct.CCGMeshIFC* %meshIFC, i32 0, i32 3, !dbg !1606
  %2 = load i32, i32* %numLayers, align 4, !dbg !1606
  %cmp = icmp slt i32 %0, %2, !dbg !1607
  br i1 %cmp, label %for.body, label %for.end, !dbg !1608

for.body:                                         ; preds = %for.cond
  %3 = load float*, float** %src.addr, align 8, !dbg !1609
  %4 = load i32, i32* %i, align 4, !dbg !1610
  %idxprom = sext i32 %4 to i64, !dbg !1609
  %arrayidx = getelementptr inbounds float, float* %3, i64 %idxprom, !dbg !1609
  %5 = load float, float* %arrayidx, align 4, !dbg !1609
  %6 = load float*, float** %dst.addr, align 8, !dbg !1611
  %7 = load i32, i32* %i, align 4, !dbg !1612
  %idxprom1 = sext i32 %7 to i64, !dbg !1611
  %arrayidx2 = getelementptr inbounds float, float* %6, i64 %idxprom1, !dbg !1611
  store float %5, float* %arrayidx2, align 4, !dbg !1613
  br label %for.inc, !dbg !1611

for.inc:                                          ; preds = %for.body
  %8 = load i32, i32* %i, align 4, !dbg !1614
  %inc = add nsw i32 %8, 1, !dbg !1614
  store i32 %inc, i32* %i, align 4, !dbg !1614
  br label %for.cond, !dbg !1615, !llvm.loop !1616

for.end:                                          ; preds = %for.cond
  ret void, !dbg !1618
}

; Function Attrs: noinline nounwind uwtable
define internal i8* @_vert_getCo(%struct.CCGVert* %v, i32 %lvl, i32 %dataSize) #0 !dbg !1619 {
entry:
  %v.addr = alloca %struct.CCGVert*, align 8
  %lvl.addr = alloca i32, align 4
  %dataSize.addr = alloca i32, align 4
  store %struct.CCGVert* %v, %struct.CCGVert** %v.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGVert** %v.addr, metadata !1622, metadata !DIExpression()), !dbg !1623
  store i32 %lvl, i32* %lvl.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %lvl.addr, metadata !1624, metadata !DIExpression()), !dbg !1625
  store i32 %dataSize, i32* %dataSize.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dataSize.addr, metadata !1626, metadata !DIExpression()), !dbg !1627
  %0 = load %struct.CCGVert*, %struct.CCGVert** %v.addr, align 8, !dbg !1628
  %call = call i8* @VERT_getLevelData(%struct.CCGVert* %0), !dbg !1629
  %1 = load i32, i32* %lvl.addr, align 4, !dbg !1630
  %2 = load i32, i32* %dataSize.addr, align 4, !dbg !1631
  %mul = mul nsw i32 %1, %2, !dbg !1632
  %idxprom = sext i32 %mul to i64, !dbg !1629
  %arrayidx = getelementptr inbounds i8, i8* %call, i64 %idxprom, !dbg !1629
  ret i8* %arrayidx, !dbg !1633
}

; Function Attrs: noinline nounwind uwtable
define internal void @_ehash_insert(%struct._EHash* %eh, %struct._EHEntry* %entry1) #0 !dbg !1634 {
entry:
  %eh.addr = alloca %struct._EHash*, align 8
  %entry.addr = alloca %struct._EHEntry*, align 8
  %numBuckets = alloca i32, align 4
  %hash = alloca i32, align 4
  %oldBuckets = alloca %struct._EHEntry**, align 8
  %next26 = alloca %struct._EHEntry*, align 8
  store %struct._EHash* %eh, %struct._EHash** %eh.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._EHash** %eh.addr, metadata !1637, metadata !DIExpression()), !dbg !1638
  store %struct._EHEntry* %entry1, %struct._EHEntry** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._EHEntry** %entry.addr, metadata !1639, metadata !DIExpression()), !dbg !1640
  call void @llvm.dbg.declare(metadata i32* %numBuckets, metadata !1641, metadata !DIExpression()), !dbg !1642
  %0 = load %struct._EHash*, %struct._EHash** %eh.addr, align 8, !dbg !1643
  %curSize = getelementptr inbounds %struct._EHash, %struct._EHash* %0, i32 0, i32 2, !dbg !1644
  %1 = load i32, i32* %curSize, align 4, !dbg !1644
  store i32 %1, i32* %numBuckets, align 4, !dbg !1642
  call void @llvm.dbg.declare(metadata i32* %hash, metadata !1645, metadata !DIExpression()), !dbg !1646
  %2 = load %struct._EHEntry*, %struct._EHEntry** %entry.addr, align 8, !dbg !1647
  %key = getelementptr inbounds %struct._EHEntry, %struct._EHEntry* %2, i32 0, i32 1, !dbg !1647
  %3 = load i8*, i8** %key, align 8, !dbg !1647
  %4 = ptrtoint i8* %3 to i64, !dbg !1647
  %5 = load %struct._EHash*, %struct._EHash** %eh.addr, align 8, !dbg !1647
  %curSize2 = getelementptr inbounds %struct._EHash, %struct._EHash* %5, i32 0, i32 2, !dbg !1647
  %6 = load i32, i32* %curSize2, align 4, !dbg !1647
  %conv = zext i32 %6 to i64, !dbg !1647
  %rem = urem i64 %4, %conv, !dbg !1647
  %conv3 = trunc i64 %rem to i32, !dbg !1647
  store i32 %conv3, i32* %hash, align 4, !dbg !1646
  %7 = load %struct._EHash*, %struct._EHash** %eh.addr, align 8, !dbg !1648
  %buckets = getelementptr inbounds %struct._EHash, %struct._EHash* %7, i32 0, i32 0, !dbg !1649
  %8 = load %struct._EHEntry**, %struct._EHEntry*** %buckets, align 8, !dbg !1649
  %9 = load i32, i32* %hash, align 4, !dbg !1650
  %idxprom = sext i32 %9 to i64, !dbg !1648
  %arrayidx = getelementptr inbounds %struct._EHEntry*, %struct._EHEntry** %8, i64 %idxprom, !dbg !1648
  %10 = load %struct._EHEntry*, %struct._EHEntry** %arrayidx, align 8, !dbg !1648
  %11 = load %struct._EHEntry*, %struct._EHEntry** %entry.addr, align 8, !dbg !1651
  %next = getelementptr inbounds %struct._EHEntry, %struct._EHEntry* %11, i32 0, i32 0, !dbg !1652
  store %struct._EHEntry* %10, %struct._EHEntry** %next, align 8, !dbg !1653
  %12 = load %struct._EHEntry*, %struct._EHEntry** %entry.addr, align 8, !dbg !1654
  %13 = load %struct._EHash*, %struct._EHash** %eh.addr, align 8, !dbg !1655
  %buckets4 = getelementptr inbounds %struct._EHash, %struct._EHash* %13, i32 0, i32 0, !dbg !1656
  %14 = load %struct._EHEntry**, %struct._EHEntry*** %buckets4, align 8, !dbg !1656
  %15 = load i32, i32* %hash, align 4, !dbg !1657
  %idxprom5 = sext i32 %15 to i64, !dbg !1655
  %arrayidx6 = getelementptr inbounds %struct._EHEntry*, %struct._EHEntry** %14, i64 %idxprom5, !dbg !1655
  store %struct._EHEntry* %12, %struct._EHEntry** %arrayidx6, align 8, !dbg !1658
  %16 = load %struct._EHash*, %struct._EHash** %eh.addr, align 8, !dbg !1659
  %numEntries = getelementptr inbounds %struct._EHash, %struct._EHash* %16, i32 0, i32 1, !dbg !1660
  %17 = load i32, i32* %numEntries, align 8, !dbg !1661
  %inc = add nsw i32 %17, 1, !dbg !1661
  store i32 %inc, i32* %numEntries, align 8, !dbg !1661
  %18 = load %struct._EHash*, %struct._EHash** %eh.addr, align 8, !dbg !1662
  %numEntries7 = getelementptr inbounds %struct._EHash, %struct._EHash* %18, i32 0, i32 1, !dbg !1662
  %19 = load i32, i32* %numEntries7, align 8, !dbg !1662
  %20 = load i32, i32* %numBuckets, align 4, !dbg !1662
  %mul = mul nsw i32 %20, 3, !dbg !1662
  %cmp = icmp sgt i32 %19, %mul, !dbg !1662
  br i1 %cmp, label %if.then, label %if.end, !dbg !1664

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct._EHEntry*** %oldBuckets, metadata !1665, metadata !DIExpression()), !dbg !1667
  %21 = load %struct._EHash*, %struct._EHash** %eh.addr, align 8, !dbg !1668
  %buckets9 = getelementptr inbounds %struct._EHash, %struct._EHash* %21, i32 0, i32 0, !dbg !1669
  %22 = load %struct._EHEntry**, %struct._EHEntry*** %buckets9, align 8, !dbg !1669
  store %struct._EHEntry** %22, %struct._EHEntry*** %oldBuckets, align 8, !dbg !1667
  %23 = load %struct._EHash*, %struct._EHash** %eh.addr, align 8, !dbg !1670
  %curSizeIdx = getelementptr inbounds %struct._EHash, %struct._EHash* %23, i32 0, i32 3, !dbg !1671
  %24 = load i32, i32* %curSizeIdx, align 8, !dbg !1672
  %inc10 = add nsw i32 %24, 1, !dbg !1672
  store i32 %inc10, i32* %curSizeIdx, align 8, !dbg !1672
  %idxprom11 = sext i32 %inc10 to i64, !dbg !1673
  %arrayidx12 = getelementptr inbounds [29 x i32], [29 x i32]* @kHashSizes, i64 0, i64 %idxprom11, !dbg !1673
  %25 = load i32, i32* %arrayidx12, align 4, !dbg !1673
  %26 = load %struct._EHash*, %struct._EHash** %eh.addr, align 8, !dbg !1674
  %curSize13 = getelementptr inbounds %struct._EHash, %struct._EHash* %26, i32 0, i32 2, !dbg !1675
  store i32 %25, i32* %curSize13, align 4, !dbg !1676
  %27 = load %struct._EHash*, %struct._EHash** %eh.addr, align 8, !dbg !1677
  %allocatorIFC = getelementptr inbounds %struct._EHash, %struct._EHash* %27, i32 0, i32 4, !dbg !1677
  %alloc = getelementptr inbounds %struct.CCGAllocatorIFC, %struct.CCGAllocatorIFC* %allocatorIFC, i32 0, i32 0, !dbg !1677
  %28 = load i8* (i8*, i32)*, i8* (i8*, i32)** %alloc, align 8, !dbg !1677
  %29 = load %struct._EHash*, %struct._EHash** %eh.addr, align 8, !dbg !1677
  %allocator = getelementptr inbounds %struct._EHash, %struct._EHash* %29, i32 0, i32 5, !dbg !1677
  %30 = load i8*, i8** %allocator, align 8, !dbg !1677
  %31 = load %struct._EHash*, %struct._EHash** %eh.addr, align 8, !dbg !1677
  %curSize14 = getelementptr inbounds %struct._EHash, %struct._EHash* %31, i32 0, i32 2, !dbg !1677
  %32 = load i32, i32* %curSize14, align 4, !dbg !1677
  %conv15 = sext i32 %32 to i64, !dbg !1677
  %mul16 = mul i64 %conv15, 8, !dbg !1677
  %conv17 = trunc i64 %mul16 to i32, !dbg !1677
  %call = call i8* %28(i8* %30, i32 %conv17), !dbg !1677
  %33 = bitcast i8* %call to %struct._EHEntry**, !dbg !1677
  %34 = load %struct._EHash*, %struct._EHash** %eh.addr, align 8, !dbg !1678
  %buckets18 = getelementptr inbounds %struct._EHash, %struct._EHash* %34, i32 0, i32 0, !dbg !1679
  store %struct._EHEntry** %33, %struct._EHEntry*** %buckets18, align 8, !dbg !1680
  %35 = load %struct._EHash*, %struct._EHash** %eh.addr, align 8, !dbg !1681
  %buckets19 = getelementptr inbounds %struct._EHash, %struct._EHash* %35, i32 0, i32 0, !dbg !1682
  %36 = load %struct._EHEntry**, %struct._EHEntry*** %buckets19, align 8, !dbg !1682
  %37 = bitcast %struct._EHEntry** %36 to i8*, !dbg !1683
  %38 = load %struct._EHash*, %struct._EHash** %eh.addr, align 8, !dbg !1684
  %curSize20 = getelementptr inbounds %struct._EHash, %struct._EHash* %38, i32 0, i32 2, !dbg !1685
  %39 = load i32, i32* %curSize20, align 4, !dbg !1685
  %conv21 = sext i32 %39 to i64, !dbg !1684
  %mul22 = mul i64 %conv21, 8, !dbg !1686
  call void @llvm.memset.p0i8.i64(i8* align 8 %37, i8 0, i64 %mul22, i1 false), !dbg !1683
  br label %while.cond, !dbg !1687

while.cond:                                       ; preds = %for.end, %if.then
  %40 = load i32, i32* %numBuckets, align 4, !dbg !1688
  %dec = add nsw i32 %40, -1, !dbg !1688
  store i32 %dec, i32* %numBuckets, align 4, !dbg !1688
  %tobool = icmp ne i32 %40, 0, !dbg !1687
  br i1 %tobool, label %while.body, label %while.end, !dbg !1687

while.body:                                       ; preds = %while.cond
  %41 = load %struct._EHEntry**, %struct._EHEntry*** %oldBuckets, align 8, !dbg !1689
  %42 = load i32, i32* %numBuckets, align 4, !dbg !1692
  %idxprom23 = sext i32 %42 to i64, !dbg !1689
  %arrayidx24 = getelementptr inbounds %struct._EHEntry*, %struct._EHEntry** %41, i64 %idxprom23, !dbg !1689
  %43 = load %struct._EHEntry*, %struct._EHEntry** %arrayidx24, align 8, !dbg !1689
  store %struct._EHEntry* %43, %struct._EHEntry** %entry.addr, align 8, !dbg !1693
  br label %for.cond, !dbg !1694

for.cond:                                         ; preds = %for.body, %while.body
  %44 = load %struct._EHEntry*, %struct._EHEntry** %entry.addr, align 8, !dbg !1695
  %tobool25 = icmp ne %struct._EHEntry* %44, null, !dbg !1697
  br i1 %tobool25, label %for.body, label %for.end, !dbg !1697

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct._EHEntry** %next26, metadata !1698, metadata !DIExpression()), !dbg !1700
  %45 = load %struct._EHEntry*, %struct._EHEntry** %entry.addr, align 8, !dbg !1701
  %next27 = getelementptr inbounds %struct._EHEntry, %struct._EHEntry* %45, i32 0, i32 0, !dbg !1702
  %46 = load %struct._EHEntry*, %struct._EHEntry** %next27, align 8, !dbg !1702
  store %struct._EHEntry* %46, %struct._EHEntry** %next26, align 8, !dbg !1700
  %47 = load %struct._EHEntry*, %struct._EHEntry** %entry.addr, align 8, !dbg !1703
  %key28 = getelementptr inbounds %struct._EHEntry, %struct._EHEntry* %47, i32 0, i32 1, !dbg !1703
  %48 = load i8*, i8** %key28, align 8, !dbg !1703
  %49 = ptrtoint i8* %48 to i64, !dbg !1703
  %50 = load %struct._EHash*, %struct._EHash** %eh.addr, align 8, !dbg !1703
  %curSize29 = getelementptr inbounds %struct._EHash, %struct._EHash* %50, i32 0, i32 2, !dbg !1703
  %51 = load i32, i32* %curSize29, align 4, !dbg !1703
  %conv30 = zext i32 %51 to i64, !dbg !1703
  %rem31 = urem i64 %49, %conv30, !dbg !1703
  %conv32 = trunc i64 %rem31 to i32, !dbg !1703
  store i32 %conv32, i32* %hash, align 4, !dbg !1704
  %52 = load %struct._EHash*, %struct._EHash** %eh.addr, align 8, !dbg !1705
  %buckets33 = getelementptr inbounds %struct._EHash, %struct._EHash* %52, i32 0, i32 0, !dbg !1706
  %53 = load %struct._EHEntry**, %struct._EHEntry*** %buckets33, align 8, !dbg !1706
  %54 = load i32, i32* %hash, align 4, !dbg !1707
  %idxprom34 = sext i32 %54 to i64, !dbg !1705
  %arrayidx35 = getelementptr inbounds %struct._EHEntry*, %struct._EHEntry** %53, i64 %idxprom34, !dbg !1705
  %55 = load %struct._EHEntry*, %struct._EHEntry** %arrayidx35, align 8, !dbg !1705
  %56 = load %struct._EHEntry*, %struct._EHEntry** %entry.addr, align 8, !dbg !1708
  %next36 = getelementptr inbounds %struct._EHEntry, %struct._EHEntry* %56, i32 0, i32 0, !dbg !1709
  store %struct._EHEntry* %55, %struct._EHEntry** %next36, align 8, !dbg !1710
  %57 = load %struct._EHEntry*, %struct._EHEntry** %entry.addr, align 8, !dbg !1711
  %58 = load %struct._EHash*, %struct._EHash** %eh.addr, align 8, !dbg !1712
  %buckets37 = getelementptr inbounds %struct._EHash, %struct._EHash* %58, i32 0, i32 0, !dbg !1713
  %59 = load %struct._EHEntry**, %struct._EHEntry*** %buckets37, align 8, !dbg !1713
  %60 = load i32, i32* %hash, align 4, !dbg !1714
  %idxprom38 = sext i32 %60 to i64, !dbg !1712
  %arrayidx39 = getelementptr inbounds %struct._EHEntry*, %struct._EHEntry** %59, i64 %idxprom38, !dbg !1712
  store %struct._EHEntry* %57, %struct._EHEntry** %arrayidx39, align 8, !dbg !1715
  %61 = load %struct._EHEntry*, %struct._EHEntry** %next26, align 8, !dbg !1716
  store %struct._EHEntry* %61, %struct._EHEntry** %entry.addr, align 8, !dbg !1717
  br label %for.cond, !dbg !1718, !llvm.loop !1719

for.end:                                          ; preds = %for.cond
  br label %while.cond, !dbg !1687, !llvm.loop !1721

while.end:                                        ; preds = %while.cond
  %62 = load %struct._EHash*, %struct._EHash** %eh.addr, align 8, !dbg !1723
  %allocatorIFC40 = getelementptr inbounds %struct._EHash, %struct._EHash* %62, i32 0, i32 4, !dbg !1723
  %free = getelementptr inbounds %struct.CCGAllocatorIFC, %struct.CCGAllocatorIFC* %allocatorIFC40, i32 0, i32 2, !dbg !1723
  %63 = load void (i8*, i8*)*, void (i8*, i8*)** %free, align 8, !dbg !1723
  %64 = load %struct._EHash*, %struct._EHash** %eh.addr, align 8, !dbg !1723
  %allocator41 = getelementptr inbounds %struct._EHash, %struct._EHash* %64, i32 0, i32 5, !dbg !1723
  %65 = load i8*, i8** %allocator41, align 8, !dbg !1723
  %66 = load %struct._EHEntry**, %struct._EHEntry*** %oldBuckets, align 8, !dbg !1723
  %67 = bitcast %struct._EHEntry** %66 to i8*, !dbg !1723
  call void %63(i8* %65, i8* %67), !dbg !1723
  br label %if.end, !dbg !1724

if.end:                                           ; preds = %while.end, %entry
  ret void, !dbg !1725
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @VertDataEqual(float* %a, float* %b, %struct.CCGSubSurf* %ss) #0 !dbg !1726 {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  %ss.addr = alloca %struct.CCGSubSurf*, align 8
  %i = alloca i32, align 4
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !1729, metadata !DIExpression()), !dbg !1730
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !1731, metadata !DIExpression()), !dbg !1732
  store %struct.CCGSubSurf* %ss, %struct.CCGSubSurf** %ss.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGSubSurf** %ss.addr, metadata !1733, metadata !DIExpression()), !dbg !1734
  call void @llvm.dbg.declare(metadata i32* %i, metadata !1735, metadata !DIExpression()), !dbg !1736
  store i32 0, i32* %i, align 4, !dbg !1737
  br label %for.cond, !dbg !1739

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !1740
  %1 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !1742
  %meshIFC = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %1, i32 0, i32 3, !dbg !1743
  %numLayers = getelementptr inbounds %struct.CCGMeshIFC, %struct.CCGMeshIFC* %meshIFC, i32 0, i32 3, !dbg !1744
  %2 = load i32, i32* %numLayers, align 4, !dbg !1744
  %cmp = icmp slt i32 %0, %2, !dbg !1745
  br i1 %cmp, label %for.body, label %for.end, !dbg !1746

for.body:                                         ; preds = %for.cond
  %3 = load float*, float** %a.addr, align 8, !dbg !1747
  %4 = load i32, i32* %i, align 4, !dbg !1750
  %idxprom = sext i32 %4 to i64, !dbg !1747
  %arrayidx = getelementptr inbounds float, float* %3, i64 %idxprom, !dbg !1747
  %5 = load float, float* %arrayidx, align 4, !dbg !1747
  %6 = load float*, float** %b.addr, align 8, !dbg !1751
  %7 = load i32, i32* %i, align 4, !dbg !1752
  %idxprom1 = sext i32 %7 to i64, !dbg !1751
  %arrayidx2 = getelementptr inbounds float, float* %6, i64 %idxprom1, !dbg !1751
  %8 = load float, float* %arrayidx2, align 4, !dbg !1751
  %cmp3 = fcmp une float %5, %8, !dbg !1753
  br i1 %cmp3, label %if.then, label %if.end, !dbg !1754

if.then:                                          ; preds = %for.body
  store i32 0, i32* %retval, align 4, !dbg !1755
  br label %return, !dbg !1755

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !1756

for.inc:                                          ; preds = %if.end
  %9 = load i32, i32* %i, align 4, !dbg !1757
  %inc = add nsw i32 %9, 1, !dbg !1757
  store i32 %inc, i32* %i, align 4, !dbg !1757
  br label %for.cond, !dbg !1758, !llvm.loop !1759

for.end:                                          ; preds = %for.cond
  store i32 1, i32* %retval, align 4, !dbg !1761
  br label %return, !dbg !1761

return:                                           ; preds = %for.end, %if.then
  %10 = load i32, i32* %retval, align 4, !dbg !1762
  ret i32 %10, !dbg !1762
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.CCGVert** @FACE_getVerts(%struct.CCGFace* %f) #0 !dbg !1763 {
entry:
  %f.addr = alloca %struct.CCGFace*, align 8
  store %struct.CCGFace* %f, %struct.CCGFace** %f.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGFace** %f.addr, metadata !1766, metadata !DIExpression()), !dbg !1767
  %0 = load %struct.CCGFace*, %struct.CCGFace** %f.addr, align 8, !dbg !1768
  %arrayidx = getelementptr inbounds %struct.CCGFace, %struct.CCGFace* %0, i64 1, !dbg !1768
  %1 = bitcast %struct.CCGFace* %arrayidx to %struct.CCGVert**, !dbg !1769
  ret %struct.CCGVert** %1, !dbg !1770
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @ccgSubSurf_syncEdge(%struct.CCGSubSurf* %ss, i8* %eHDL, i8* %e_vHDL0, i8* %e_vHDL1, float %crease, %struct.CCGEdge** %e_r) #0 !dbg !1771 {
entry:
  %retval = alloca i32, align 4
  %ss.addr = alloca %struct.CCGSubSurf*, align 8
  %eHDL.addr = alloca i8*, align 8
  %e_vHDL0.addr = alloca i8*, align 8
  %e_vHDL1.addr = alloca i8*, align 8
  %crease.addr = alloca float, align 4
  %e_r.addr = alloca %struct.CCGEdge**, align 8
  %prevp = alloca i8**, align 8
  %e = alloca %struct.CCGEdge*, align 8
  %eNew = alloca %struct.CCGEdge*, align 8
  %v09 = alloca %struct.CCGVert*, align 8
  %v111 = alloca %struct.CCGVert*, align 8
  %v057 = alloca %struct.CCGVert*, align 8
  %v160 = alloca %struct.CCGVert*, align 8
  store %struct.CCGSubSurf* %ss, %struct.CCGSubSurf** %ss.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGSubSurf** %ss.addr, metadata !1774, metadata !DIExpression()), !dbg !1775
  store i8* %eHDL, i8** %eHDL.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %eHDL.addr, metadata !1776, metadata !DIExpression()), !dbg !1777
  store i8* %e_vHDL0, i8** %e_vHDL0.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %e_vHDL0.addr, metadata !1778, metadata !DIExpression()), !dbg !1779
  store i8* %e_vHDL1, i8** %e_vHDL1.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %e_vHDL1.addr, metadata !1780, metadata !DIExpression()), !dbg !1781
  store float %crease, float* %crease.addr, align 4
  call void @llvm.dbg.declare(metadata float* %crease.addr, metadata !1782, metadata !DIExpression()), !dbg !1783
  store %struct.CCGEdge** %e_r, %struct.CCGEdge*** %e_r.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGEdge*** %e_r.addr, metadata !1784, metadata !DIExpression()), !dbg !1785
  call void @llvm.dbg.declare(metadata i8*** %prevp, metadata !1786, metadata !DIExpression()), !dbg !1787
  call void @llvm.dbg.declare(metadata %struct.CCGEdge** %e, metadata !1788, metadata !DIExpression()), !dbg !1789
  store %struct.CCGEdge* null, %struct.CCGEdge** %e, align 8, !dbg !1789
  call void @llvm.dbg.declare(metadata %struct.CCGEdge** %eNew, metadata !1790, metadata !DIExpression()), !dbg !1791
  %0 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !1792
  %syncState = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %0, i32 0, i32 22, !dbg !1794
  %1 = load i32, i32* %syncState, align 4, !dbg !1794
  %cmp = icmp eq i32 %1, 4, !dbg !1795
  br i1 %cmp, label %if.then, label %if.else27, !dbg !1796

if.then:                                          ; preds = %entry
  %2 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !1797
  %eMap = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %2, i32 0, i32 1, !dbg !1799
  %3 = load %struct._EHash*, %struct._EHash** %eMap, align 8, !dbg !1799
  %4 = load i8*, i8** %eHDL.addr, align 8, !dbg !1800
  %call = call i8* @_ehash_lookupWithPrev(%struct._EHash* %3, i8* %4, i8*** %prevp), !dbg !1801
  %5 = bitcast i8* %call to %struct.CCGEdge*, !dbg !1801
  store %struct.CCGEdge* %5, %struct.CCGEdge** %e, align 8, !dbg !1802
  %6 = load %struct.CCGEdge*, %struct.CCGEdge** %e, align 8, !dbg !1803
  %tobool = icmp ne %struct.CCGEdge* %6, null, !dbg !1803
  br i1 %tobool, label %lor.lhs.false, label %if.then8, !dbg !1805

lor.lhs.false:                                    ; preds = %if.then
  %7 = load %struct.CCGEdge*, %struct.CCGEdge** %e, align 8, !dbg !1806
  %v0 = getelementptr inbounds %struct.CCGEdge, %struct.CCGEdge* %7, i32 0, i32 5, !dbg !1807
  %8 = load %struct.CCGVert*, %struct.CCGVert** %v0, align 8, !dbg !1807
  %vHDL = getelementptr inbounds %struct.CCGVert, %struct.CCGVert* %8, i32 0, i32 1, !dbg !1808
  %9 = load i8*, i8** %vHDL, align 8, !dbg !1808
  %10 = load i8*, i8** %e_vHDL0.addr, align 8, !dbg !1809
  %cmp1 = icmp ne i8* %9, %10, !dbg !1810
  br i1 %cmp1, label %if.then8, label %lor.lhs.false2, !dbg !1811

lor.lhs.false2:                                   ; preds = %lor.lhs.false
  %11 = load %struct.CCGEdge*, %struct.CCGEdge** %e, align 8, !dbg !1812
  %v1 = getelementptr inbounds %struct.CCGEdge, %struct.CCGEdge* %11, i32 0, i32 6, !dbg !1813
  %12 = load %struct.CCGVert*, %struct.CCGVert** %v1, align 8, !dbg !1813
  %vHDL3 = getelementptr inbounds %struct.CCGVert, %struct.CCGVert* %12, i32 0, i32 1, !dbg !1814
  %13 = load i8*, i8** %vHDL3, align 8, !dbg !1814
  %14 = load i8*, i8** %e_vHDL1.addr, align 8, !dbg !1815
  %cmp4 = icmp ne i8* %13, %14, !dbg !1816
  br i1 %cmp4, label %if.then8, label %lor.lhs.false5, !dbg !1817

lor.lhs.false5:                                   ; preds = %lor.lhs.false2
  %15 = load float, float* %crease.addr, align 4, !dbg !1818
  %16 = load %struct.CCGEdge*, %struct.CCGEdge** %e, align 8, !dbg !1819
  %crease6 = getelementptr inbounds %struct.CCGEdge, %struct.CCGEdge* %16, i32 0, i32 4, !dbg !1820
  %17 = load float, float* %crease6, align 4, !dbg !1820
  %cmp7 = fcmp une float %15, %17, !dbg !1821
  br i1 %cmp7, label %if.then8, label %if.end26, !dbg !1822

if.then8:                                         ; preds = %lor.lhs.false5, %lor.lhs.false2, %lor.lhs.false, %if.then
  call void @llvm.dbg.declare(metadata %struct.CCGVert** %v09, metadata !1823, metadata !DIExpression()), !dbg !1825
  %18 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !1826
  %vMap = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %18, i32 0, i32 0, !dbg !1827
  %19 = load %struct._EHash*, %struct._EHash** %vMap, align 8, !dbg !1827
  %20 = load i8*, i8** %e_vHDL0.addr, align 8, !dbg !1828
  %call10 = call i8* @_ehash_lookup(%struct._EHash* %19, i8* %20), !dbg !1829
  %21 = bitcast i8* %call10 to %struct.CCGVert*, !dbg !1829
  store %struct.CCGVert* %21, %struct.CCGVert** %v09, align 8, !dbg !1825
  call void @llvm.dbg.declare(metadata %struct.CCGVert** %v111, metadata !1830, metadata !DIExpression()), !dbg !1831
  %22 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !1832
  %vMap12 = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %22, i32 0, i32 0, !dbg !1833
  %23 = load %struct._EHash*, %struct._EHash** %vMap12, align 8, !dbg !1833
  %24 = load i8*, i8** %e_vHDL1.addr, align 8, !dbg !1834
  %call13 = call i8* @_ehash_lookup(%struct._EHash* %23, i8* %24), !dbg !1835
  %25 = bitcast i8* %call13 to %struct.CCGVert*, !dbg !1835
  store %struct.CCGVert* %25, %struct.CCGVert** %v111, align 8, !dbg !1831
  %26 = load i8*, i8** %eHDL.addr, align 8, !dbg !1836
  %27 = load %struct.CCGVert*, %struct.CCGVert** %v09, align 8, !dbg !1837
  %28 = load %struct.CCGVert*, %struct.CCGVert** %v111, align 8, !dbg !1838
  %29 = load float, float* %crease.addr, align 4, !dbg !1839
  %30 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !1840
  %call14 = call %struct.CCGEdge* @_edge_new(i8* %26, %struct.CCGVert* %27, %struct.CCGVert* %28, float %29, %struct.CCGSubSurf* %30), !dbg !1841
  store %struct.CCGEdge* %call14, %struct.CCGEdge** %eNew, align 8, !dbg !1842
  %31 = load %struct.CCGEdge*, %struct.CCGEdge** %e, align 8, !dbg !1843
  %tobool15 = icmp ne %struct.CCGEdge* %31, null, !dbg !1843
  br i1 %tobool15, label %if.then16, label %if.else, !dbg !1845

if.then16:                                        ; preds = %if.then8
  %32 = load %struct.CCGEdge*, %struct.CCGEdge** %eNew, align 8, !dbg !1846
  %33 = bitcast %struct.CCGEdge* %32 to i8*, !dbg !1846
  %34 = load i8**, i8*** %prevp, align 8, !dbg !1848
  store i8* %33, i8** %34, align 8, !dbg !1849
  %35 = load %struct.CCGEdge*, %struct.CCGEdge** %e, align 8, !dbg !1850
  %next = getelementptr inbounds %struct.CCGEdge, %struct.CCGEdge* %35, i32 0, i32 0, !dbg !1851
  %36 = load %struct.CCGEdge*, %struct.CCGEdge** %next, align 8, !dbg !1851
  %37 = load %struct.CCGEdge*, %struct.CCGEdge** %eNew, align 8, !dbg !1852
  %next17 = getelementptr inbounds %struct.CCGEdge, %struct.CCGEdge* %37, i32 0, i32 0, !dbg !1853
  store %struct.CCGEdge* %36, %struct.CCGEdge** %next17, align 8, !dbg !1854
  %38 = load %struct.CCGEdge*, %struct.CCGEdge** %e, align 8, !dbg !1855
  %39 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !1856
  call void @_edge_unlinkMarkAndFree(%struct.CCGEdge* %38, %struct.CCGSubSurf* %39), !dbg !1857
  br label %if.end, !dbg !1858

if.else:                                          ; preds = %if.then8
  %40 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !1859
  %eMap18 = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %40, i32 0, i32 1, !dbg !1861
  %41 = load %struct._EHash*, %struct._EHash** %eMap18, align 8, !dbg !1861
  %42 = load %struct.CCGEdge*, %struct.CCGEdge** %eNew, align 8, !dbg !1862
  %43 = bitcast %struct.CCGEdge* %42 to %struct._EHEntry*, !dbg !1863
  call void @_ehash_insert(%struct._EHash* %41, %struct._EHEntry* %43), !dbg !1864
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then16
  %44 = load %struct.CCGEdge*, %struct.CCGEdge** %eNew, align 8, !dbg !1865
  %v019 = getelementptr inbounds %struct.CCGEdge, %struct.CCGEdge* %44, i32 0, i32 5, !dbg !1866
  %45 = load %struct.CCGVert*, %struct.CCGVert** %v019, align 8, !dbg !1866
  %flags = getelementptr inbounds %struct.CCGVert, %struct.CCGVert* %45, i32 0, i32 4, !dbg !1867
  %46 = load i16, i16* %flags, align 4, !dbg !1868
  %conv = sext i16 %46 to i32, !dbg !1868
  %or = or i32 %conv, 1, !dbg !1868
  %conv20 = trunc i32 %or to i16, !dbg !1868
  store i16 %conv20, i16* %flags, align 4, !dbg !1868
  %47 = load %struct.CCGEdge*, %struct.CCGEdge** %eNew, align 8, !dbg !1869
  %v121 = getelementptr inbounds %struct.CCGEdge, %struct.CCGEdge* %47, i32 0, i32 6, !dbg !1870
  %48 = load %struct.CCGVert*, %struct.CCGVert** %v121, align 8, !dbg !1870
  %flags22 = getelementptr inbounds %struct.CCGVert, %struct.CCGVert* %48, i32 0, i32 4, !dbg !1871
  %49 = load i16, i16* %flags22, align 4, !dbg !1872
  %conv23 = sext i16 %49 to i32, !dbg !1872
  %or24 = or i32 %conv23, 1, !dbg !1872
  %conv25 = trunc i32 %or24 to i16, !dbg !1872
  store i16 %conv25, i16* %flags22, align 4, !dbg !1872
  br label %if.end26, !dbg !1873

if.end26:                                         ; preds = %if.end, %lor.lhs.false5
  br label %if.end100, !dbg !1874

if.else27:                                        ; preds = %entry
  %50 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !1875
  %syncState28 = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %50, i32 0, i32 22, !dbg !1878
  %51 = load i32, i32* %syncState28, align 4, !dbg !1878
  %cmp29 = icmp eq i32 %51, 1, !dbg !1879
  br i1 %cmp29, label %if.then31, label %if.else33, !dbg !1880

if.then31:                                        ; preds = %if.else27
  %52 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !1881
  %syncState32 = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %52, i32 0, i32 22, !dbg !1883
  store i32 2, i32* %syncState32, align 4, !dbg !1884
  br label %if.end39, !dbg !1885

if.else33:                                        ; preds = %if.else27
  %53 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !1886
  %syncState34 = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %53, i32 0, i32 22, !dbg !1888
  %54 = load i32, i32* %syncState34, align 4, !dbg !1888
  %cmp35 = icmp ne i32 %54, 2, !dbg !1889
  br i1 %cmp35, label %if.then37, label %if.end38, !dbg !1890

if.then37:                                        ; preds = %if.else33
  store i32 1, i32* %retval, align 4, !dbg !1891
  br label %return, !dbg !1891

if.end38:                                         ; preds = %if.else33
  br label %if.end39

if.end39:                                         ; preds = %if.end38, %if.then31
  %55 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !1893
  %oldEMap = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %55, i32 0, i32 24, !dbg !1894
  %56 = load %struct._EHash*, %struct._EHash** %oldEMap, align 8, !dbg !1894
  %57 = load i8*, i8** %eHDL.addr, align 8, !dbg !1895
  %call40 = call i8* @_ehash_lookupWithPrev(%struct._EHash* %56, i8* %57, i8*** %prevp), !dbg !1896
  %58 = bitcast i8* %call40 to %struct.CCGEdge*, !dbg !1896
  store %struct.CCGEdge* %58, %struct.CCGEdge** %e, align 8, !dbg !1897
  %59 = load %struct.CCGEdge*, %struct.CCGEdge** %e, align 8, !dbg !1898
  %tobool41 = icmp ne %struct.CCGEdge* %59, null, !dbg !1898
  br i1 %tobool41, label %lor.lhs.false42, label %if.then56, !dbg !1900

lor.lhs.false42:                                  ; preds = %if.end39
  %60 = load %struct.CCGEdge*, %struct.CCGEdge** %e, align 8, !dbg !1901
  %v043 = getelementptr inbounds %struct.CCGEdge, %struct.CCGEdge* %60, i32 0, i32 5, !dbg !1902
  %61 = load %struct.CCGVert*, %struct.CCGVert** %v043, align 8, !dbg !1902
  %vHDL44 = getelementptr inbounds %struct.CCGVert, %struct.CCGVert* %61, i32 0, i32 1, !dbg !1903
  %62 = load i8*, i8** %vHDL44, align 8, !dbg !1903
  %63 = load i8*, i8** %e_vHDL0.addr, align 8, !dbg !1904
  %cmp45 = icmp ne i8* %62, %63, !dbg !1905
  br i1 %cmp45, label %if.then56, label %lor.lhs.false47, !dbg !1906

lor.lhs.false47:                                  ; preds = %lor.lhs.false42
  %64 = load %struct.CCGEdge*, %struct.CCGEdge** %e, align 8, !dbg !1907
  %v148 = getelementptr inbounds %struct.CCGEdge, %struct.CCGEdge* %64, i32 0, i32 6, !dbg !1908
  %65 = load %struct.CCGVert*, %struct.CCGVert** %v148, align 8, !dbg !1908
  %vHDL49 = getelementptr inbounds %struct.CCGVert, %struct.CCGVert* %65, i32 0, i32 1, !dbg !1909
  %66 = load i8*, i8** %vHDL49, align 8, !dbg !1909
  %67 = load i8*, i8** %e_vHDL1.addr, align 8, !dbg !1910
  %cmp50 = icmp ne i8* %66, %67, !dbg !1911
  br i1 %cmp50, label %if.then56, label %lor.lhs.false52, !dbg !1912

lor.lhs.false52:                                  ; preds = %lor.lhs.false47
  %68 = load %struct.CCGEdge*, %struct.CCGEdge** %e, align 8, !dbg !1913
  %crease53 = getelementptr inbounds %struct.CCGEdge, %struct.CCGEdge* %68, i32 0, i32 4, !dbg !1914
  %69 = load float, float* %crease53, align 4, !dbg !1914
  %70 = load float, float* %crease.addr, align 4, !dbg !1915
  %cmp54 = fcmp une float %69, %70, !dbg !1916
  br i1 %cmp54, label %if.then56, label %if.else75, !dbg !1917

if.then56:                                        ; preds = %lor.lhs.false52, %lor.lhs.false47, %lor.lhs.false42, %if.end39
  call void @llvm.dbg.declare(metadata %struct.CCGVert** %v057, metadata !1918, metadata !DIExpression()), !dbg !1920
  %71 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !1921
  %vMap58 = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %71, i32 0, i32 0, !dbg !1922
  %72 = load %struct._EHash*, %struct._EHash** %vMap58, align 8, !dbg !1922
  %73 = load i8*, i8** %e_vHDL0.addr, align 8, !dbg !1923
  %call59 = call i8* @_ehash_lookup(%struct._EHash* %72, i8* %73), !dbg !1924
  %74 = bitcast i8* %call59 to %struct.CCGVert*, !dbg !1924
  store %struct.CCGVert* %74, %struct.CCGVert** %v057, align 8, !dbg !1920
  call void @llvm.dbg.declare(metadata %struct.CCGVert** %v160, metadata !1925, metadata !DIExpression()), !dbg !1926
  %75 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !1927
  %vMap61 = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %75, i32 0, i32 0, !dbg !1928
  %76 = load %struct._EHash*, %struct._EHash** %vMap61, align 8, !dbg !1928
  %77 = load i8*, i8** %e_vHDL1.addr, align 8, !dbg !1929
  %call62 = call i8* @_ehash_lookup(%struct._EHash* %76, i8* %77), !dbg !1930
  %78 = bitcast i8* %call62 to %struct.CCGVert*, !dbg !1930
  store %struct.CCGVert* %78, %struct.CCGVert** %v160, align 8, !dbg !1926
  %79 = load i8*, i8** %eHDL.addr, align 8, !dbg !1931
  %80 = load %struct.CCGVert*, %struct.CCGVert** %v057, align 8, !dbg !1932
  %81 = load %struct.CCGVert*, %struct.CCGVert** %v160, align 8, !dbg !1933
  %82 = load float, float* %crease.addr, align 4, !dbg !1934
  %83 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !1935
  %call63 = call %struct.CCGEdge* @_edge_new(i8* %79, %struct.CCGVert* %80, %struct.CCGVert* %81, float %82, %struct.CCGSubSurf* %83), !dbg !1936
  store %struct.CCGEdge* %call63, %struct.CCGEdge** %e, align 8, !dbg !1937
  %84 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !1938
  %eMap64 = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %84, i32 0, i32 1, !dbg !1939
  %85 = load %struct._EHash*, %struct._EHash** %eMap64, align 8, !dbg !1939
  %86 = load %struct.CCGEdge*, %struct.CCGEdge** %e, align 8, !dbg !1940
  %87 = bitcast %struct.CCGEdge* %86 to %struct._EHEntry*, !dbg !1941
  call void @_ehash_insert(%struct._EHash* %85, %struct._EHEntry* %87), !dbg !1942
  %88 = load %struct.CCGEdge*, %struct.CCGEdge** %e, align 8, !dbg !1943
  %v065 = getelementptr inbounds %struct.CCGEdge, %struct.CCGEdge* %88, i32 0, i32 5, !dbg !1944
  %89 = load %struct.CCGVert*, %struct.CCGVert** %v065, align 8, !dbg !1944
  %flags66 = getelementptr inbounds %struct.CCGVert, %struct.CCGVert* %89, i32 0, i32 4, !dbg !1945
  %90 = load i16, i16* %flags66, align 4, !dbg !1946
  %conv67 = sext i16 %90 to i32, !dbg !1946
  %or68 = or i32 %conv67, 1, !dbg !1946
  %conv69 = trunc i32 %or68 to i16, !dbg !1946
  store i16 %conv69, i16* %flags66, align 4, !dbg !1946
  %91 = load %struct.CCGEdge*, %struct.CCGEdge** %e, align 8, !dbg !1947
  %v170 = getelementptr inbounds %struct.CCGEdge, %struct.CCGEdge* %91, i32 0, i32 6, !dbg !1948
  %92 = load %struct.CCGVert*, %struct.CCGVert** %v170, align 8, !dbg !1948
  %flags71 = getelementptr inbounds %struct.CCGVert, %struct.CCGVert* %92, i32 0, i32 4, !dbg !1949
  %93 = load i16, i16* %flags71, align 4, !dbg !1950
  %conv72 = sext i16 %93 to i32, !dbg !1950
  %or73 = or i32 %conv72, 1, !dbg !1950
  %conv74 = trunc i32 %or73 to i16, !dbg !1950
  store i16 %conv74, i16* %flags71, align 4, !dbg !1950
  br label %if.end99, !dbg !1951

if.else75:                                        ; preds = %lor.lhs.false52
  %94 = load %struct.CCGEdge*, %struct.CCGEdge** %e, align 8, !dbg !1952
  %next76 = getelementptr inbounds %struct.CCGEdge, %struct.CCGEdge* %94, i32 0, i32 0, !dbg !1954
  %95 = load %struct.CCGEdge*, %struct.CCGEdge** %next76, align 8, !dbg !1954
  %96 = bitcast %struct.CCGEdge* %95 to i8*, !dbg !1952
  %97 = load i8**, i8*** %prevp, align 8, !dbg !1955
  store i8* %96, i8** %97, align 8, !dbg !1956
  %98 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !1957
  %eMap77 = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %98, i32 0, i32 1, !dbg !1958
  %99 = load %struct._EHash*, %struct._EHash** %eMap77, align 8, !dbg !1958
  %100 = load %struct.CCGEdge*, %struct.CCGEdge** %e, align 8, !dbg !1959
  %101 = bitcast %struct.CCGEdge* %100 to %struct._EHEntry*, !dbg !1960
  call void @_ehash_insert(%struct._EHash* %99, %struct._EHEntry* %101), !dbg !1961
  %102 = load %struct.CCGEdge*, %struct.CCGEdge** %e, align 8, !dbg !1962
  %flags78 = getelementptr inbounds %struct.CCGEdge, %struct.CCGEdge* %102, i32 0, i32 3, !dbg !1963
  store i16 0, i16* %flags78, align 2, !dbg !1964
  %103 = load %struct.CCGEdge*, %struct.CCGEdge** %e, align 8, !dbg !1965
  %v079 = getelementptr inbounds %struct.CCGEdge, %struct.CCGEdge* %103, i32 0, i32 5, !dbg !1967
  %104 = load %struct.CCGVert*, %struct.CCGVert** %v079, align 8, !dbg !1967
  %flags80 = getelementptr inbounds %struct.CCGVert, %struct.CCGVert* %104, i32 0, i32 4, !dbg !1968
  %105 = load i16, i16* %flags80, align 4, !dbg !1968
  %conv81 = sext i16 %105 to i32, !dbg !1965
  %106 = load %struct.CCGEdge*, %struct.CCGEdge** %e, align 8, !dbg !1969
  %v182 = getelementptr inbounds %struct.CCGEdge, %struct.CCGEdge* %106, i32 0, i32 6, !dbg !1970
  %107 = load %struct.CCGVert*, %struct.CCGVert** %v182, align 8, !dbg !1970
  %flags83 = getelementptr inbounds %struct.CCGVert, %struct.CCGVert* %107, i32 0, i32 4, !dbg !1971
  %108 = load i16, i16* %flags83, align 4, !dbg !1971
  %conv84 = sext i16 %108 to i32, !dbg !1969
  %or85 = or i32 %conv81, %conv84, !dbg !1972
  %and = and i32 %or85, 2, !dbg !1973
  %tobool86 = icmp ne i32 %and, 0, !dbg !1973
  br i1 %tobool86, label %if.then87, label %if.end98, !dbg !1974

if.then87:                                        ; preds = %if.else75
  %109 = load %struct.CCGEdge*, %struct.CCGEdge** %e, align 8, !dbg !1975
  %v088 = getelementptr inbounds %struct.CCGEdge, %struct.CCGEdge* %109, i32 0, i32 5, !dbg !1977
  %110 = load %struct.CCGVert*, %struct.CCGVert** %v088, align 8, !dbg !1977
  %flags89 = getelementptr inbounds %struct.CCGVert, %struct.CCGVert* %110, i32 0, i32 4, !dbg !1978
  %111 = load i16, i16* %flags89, align 4, !dbg !1979
  %conv90 = sext i16 %111 to i32, !dbg !1979
  %or91 = or i32 %conv90, 1, !dbg !1979
  %conv92 = trunc i32 %or91 to i16, !dbg !1979
  store i16 %conv92, i16* %flags89, align 4, !dbg !1979
  %112 = load %struct.CCGEdge*, %struct.CCGEdge** %e, align 8, !dbg !1980
  %v193 = getelementptr inbounds %struct.CCGEdge, %struct.CCGEdge* %112, i32 0, i32 6, !dbg !1981
  %113 = load %struct.CCGVert*, %struct.CCGVert** %v193, align 8, !dbg !1981
  %flags94 = getelementptr inbounds %struct.CCGVert, %struct.CCGVert* %113, i32 0, i32 4, !dbg !1982
  %114 = load i16, i16* %flags94, align 4, !dbg !1983
  %conv95 = sext i16 %114 to i32, !dbg !1983
  %or96 = or i32 %conv95, 1, !dbg !1983
  %conv97 = trunc i32 %or96 to i16, !dbg !1983
  store i16 %conv97, i16* %flags94, align 4, !dbg !1983
  br label %if.end98, !dbg !1984

if.end98:                                         ; preds = %if.then87, %if.else75
  br label %if.end99

if.end99:                                         ; preds = %if.end98, %if.then56
  br label %if.end100

if.end100:                                        ; preds = %if.end99, %if.end26
  %115 = load %struct.CCGEdge**, %struct.CCGEdge*** %e_r.addr, align 8, !dbg !1985
  %tobool101 = icmp ne %struct.CCGEdge** %115, null, !dbg !1985
  br i1 %tobool101, label %if.then102, label %if.end103, !dbg !1987

if.then102:                                       ; preds = %if.end100
  %116 = load %struct.CCGEdge*, %struct.CCGEdge** %e, align 8, !dbg !1988
  %117 = load %struct.CCGEdge**, %struct.CCGEdge*** %e_r.addr, align 8, !dbg !1989
  store %struct.CCGEdge* %116, %struct.CCGEdge** %117, align 8, !dbg !1990
  br label %if.end103, !dbg !1991

if.end103:                                        ; preds = %if.then102, %if.end100
  store i32 0, i32* %retval, align 4, !dbg !1992
  br label %return, !dbg !1992

return:                                           ; preds = %if.end103, %if.then37
  %118 = load i32, i32* %retval, align 4, !dbg !1993
  ret i32 %118, !dbg !1993
}

; Function Attrs: noinline nounwind uwtable
define internal i8* @_ehash_lookup(%struct._EHash* %eh, i8* %key) #0 !dbg !1994 {
entry:
  %eh.addr = alloca %struct._EHash*, align 8
  %key.addr = alloca i8*, align 8
  %hash = alloca i32, align 4
  %entry2 = alloca %struct._EHEntry*, align 8
  store %struct._EHash* %eh, %struct._EHash** %eh.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._EHash** %eh.addr, metadata !1997, metadata !DIExpression()), !dbg !1998
  store i8* %key, i8** %key.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %key.addr, metadata !1999, metadata !DIExpression()), !dbg !2000
  call void @llvm.dbg.declare(metadata i32* %hash, metadata !2001, metadata !DIExpression()), !dbg !2002
  %0 = load i8*, i8** %key.addr, align 8, !dbg !2003
  %1 = ptrtoint i8* %0 to i64, !dbg !2003
  %2 = load %struct._EHash*, %struct._EHash** %eh.addr, align 8, !dbg !2003
  %curSize = getelementptr inbounds %struct._EHash, %struct._EHash* %2, i32 0, i32 2, !dbg !2003
  %3 = load i32, i32* %curSize, align 4, !dbg !2003
  %conv = zext i32 %3 to i64, !dbg !2003
  %rem = urem i64 %1, %conv, !dbg !2003
  %conv1 = trunc i64 %rem to i32, !dbg !2003
  store i32 %conv1, i32* %hash, align 4, !dbg !2002
  call void @llvm.dbg.declare(metadata %struct._EHEntry** %entry2, metadata !2004, metadata !DIExpression()), !dbg !2005
  %4 = load %struct._EHash*, %struct._EHash** %eh.addr, align 8, !dbg !2006
  %buckets = getelementptr inbounds %struct._EHash, %struct._EHash* %4, i32 0, i32 0, !dbg !2008
  %5 = load %struct._EHEntry**, %struct._EHEntry*** %buckets, align 8, !dbg !2008
  %6 = load i32, i32* %hash, align 4, !dbg !2009
  %idxprom = sext i32 %6 to i64, !dbg !2006
  %arrayidx = getelementptr inbounds %struct._EHEntry*, %struct._EHEntry** %5, i64 %idxprom, !dbg !2006
  %7 = load %struct._EHEntry*, %struct._EHEntry** %arrayidx, align 8, !dbg !2006
  store %struct._EHEntry* %7, %struct._EHEntry** %entry2, align 8, !dbg !2010
  br label %for.cond, !dbg !2011

for.cond:                                         ; preds = %for.inc, %entry
  %8 = load %struct._EHEntry*, %struct._EHEntry** %entry2, align 8, !dbg !2012
  %tobool = icmp ne %struct._EHEntry* %8, null, !dbg !2014
  br i1 %tobool, label %for.body, label %for.end, !dbg !2014

for.body:                                         ; preds = %for.cond
  %9 = load %struct._EHEntry*, %struct._EHEntry** %entry2, align 8, !dbg !2015
  %key3 = getelementptr inbounds %struct._EHEntry, %struct._EHEntry* %9, i32 0, i32 1, !dbg !2017
  %10 = load i8*, i8** %key3, align 8, !dbg !2017
  %11 = load i8*, i8** %key.addr, align 8, !dbg !2018
  %cmp = icmp eq i8* %10, %11, !dbg !2019
  br i1 %cmp, label %if.then, label %if.end, !dbg !2020

if.then:                                          ; preds = %for.body
  br label %for.end, !dbg !2021

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !2018

for.inc:                                          ; preds = %if.end
  %12 = load %struct._EHEntry*, %struct._EHEntry** %entry2, align 8, !dbg !2022
  %next = getelementptr inbounds %struct._EHEntry, %struct._EHEntry* %12, i32 0, i32 0, !dbg !2023
  %13 = load %struct._EHEntry*, %struct._EHEntry** %next, align 8, !dbg !2023
  store %struct._EHEntry* %13, %struct._EHEntry** %entry2, align 8, !dbg !2024
  br label %for.cond, !dbg !2025, !llvm.loop !2026

for.end:                                          ; preds = %if.then, %for.cond
  %14 = load %struct._EHEntry*, %struct._EHEntry** %entry2, align 8, !dbg !2028
  %15 = bitcast %struct._EHEntry* %14 to i8*, !dbg !2028
  ret i8* %15, !dbg !2029
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.CCGEdge* @_edge_new(i8* %eHDL, %struct.CCGVert* %v0, %struct.CCGVert* %v1, float %crease, %struct.CCGSubSurf* %ss) #0 !dbg !2030 {
entry:
  %eHDL.addr = alloca i8*, align 8
  %v0.addr = alloca %struct.CCGVert*, align 8
  %v1.addr = alloca %struct.CCGVert*, align 8
  %crease.addr = alloca float, align 4
  %ss.addr = alloca %struct.CCGSubSurf*, align 8
  %num_edge_data = alloca i32, align 4
  %e = alloca %struct.CCGEdge*, align 8
  %userData = alloca i8*, align 8
  store i8* %eHDL, i8** %eHDL.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %eHDL.addr, metadata !2033, metadata !DIExpression()), !dbg !2034
  store %struct.CCGVert* %v0, %struct.CCGVert** %v0.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGVert** %v0.addr, metadata !2035, metadata !DIExpression()), !dbg !2036
  store %struct.CCGVert* %v1, %struct.CCGVert** %v1.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGVert** %v1.addr, metadata !2037, metadata !DIExpression()), !dbg !2038
  store float %crease, float* %crease.addr, align 4
  call void @llvm.dbg.declare(metadata float* %crease.addr, metadata !2039, metadata !DIExpression()), !dbg !2040
  store %struct.CCGSubSurf* %ss, %struct.CCGSubSurf** %ss.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGSubSurf** %ss.addr, metadata !2041, metadata !DIExpression()), !dbg !2042
  call void @llvm.dbg.declare(metadata i32* %num_edge_data, metadata !2043, metadata !DIExpression()), !dbg !2044
  %0 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !2045
  %subdivLevels = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %0, i32 0, i32 6, !dbg !2046
  %1 = load i32, i32* %subdivLevels, align 8, !dbg !2046
  %add = add nsw i32 %1, 1, !dbg !2047
  %call = call i32 @ccg_edgebase(i32 %add), !dbg !2048
  store i32 %call, i32* %num_edge_data, align 4, !dbg !2044
  call void @llvm.dbg.declare(metadata %struct.CCGEdge** %e, metadata !2049, metadata !DIExpression()), !dbg !2050
  %2 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !2051
  %allocatorIFC = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %2, i32 0, i32 4, !dbg !2051
  %alloc = getelementptr inbounds %struct.CCGAllocatorIFC, %struct.CCGAllocatorIFC* %allocatorIFC, i32 0, i32 0, !dbg !2051
  %3 = load i8* (i8*, i32)*, i8* (i8*, i32)** %alloc, align 8, !dbg !2051
  %4 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !2051
  %allocator = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %4, i32 0, i32 5, !dbg !2051
  %5 = load i8*, i8** %allocator, align 8, !dbg !2051
  %6 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !2051
  %meshIFC = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %6, i32 0, i32 3, !dbg !2051
  %vertDataSize = getelementptr inbounds %struct.CCGMeshIFC, %struct.CCGMeshIFC* %meshIFC, i32 0, i32 4, !dbg !2051
  %7 = load i32, i32* %vertDataSize, align 8, !dbg !2051
  %8 = load i32, i32* %num_edge_data, align 4, !dbg !2051
  %mul = mul nsw i32 %7, %8, !dbg !2051
  %conv = sext i32 %mul to i64, !dbg !2051
  %add1 = add i64 48, %conv, !dbg !2051
  %9 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !2051
  %meshIFC2 = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %9, i32 0, i32 3, !dbg !2051
  %edgeUserSize = getelementptr inbounds %struct.CCGMeshIFC, %struct.CCGMeshIFC* %meshIFC2, i32 0, i32 1, !dbg !2051
  %10 = load i32, i32* %edgeUserSize, align 4, !dbg !2051
  %conv3 = sext i32 %10 to i64, !dbg !2051
  %add4 = add i64 %add1, %conv3, !dbg !2051
  %conv5 = trunc i64 %add4 to i32, !dbg !2051
  %call6 = call i8* %3(i8* %5, i32 %conv5), !dbg !2051
  %11 = bitcast i8* %call6 to %struct.CCGEdge*, !dbg !2051
  store %struct.CCGEdge* %11, %struct.CCGEdge** %e, align 8, !dbg !2050
  call void @llvm.dbg.declare(metadata i8** %userData, metadata !2052, metadata !DIExpression()), !dbg !2053
  %12 = load i8*, i8** %eHDL.addr, align 8, !dbg !2054
  %13 = load %struct.CCGEdge*, %struct.CCGEdge** %e, align 8, !dbg !2055
  %eHDL7 = getelementptr inbounds %struct.CCGEdge, %struct.CCGEdge* %13, i32 0, i32 1, !dbg !2056
  store i8* %12, i8** %eHDL7, align 8, !dbg !2057
  %14 = load %struct.CCGVert*, %struct.CCGVert** %v0.addr, align 8, !dbg !2058
  %15 = load %struct.CCGEdge*, %struct.CCGEdge** %e, align 8, !dbg !2059
  %v08 = getelementptr inbounds %struct.CCGEdge, %struct.CCGEdge* %15, i32 0, i32 5, !dbg !2060
  store %struct.CCGVert* %14, %struct.CCGVert** %v08, align 8, !dbg !2061
  %16 = load %struct.CCGVert*, %struct.CCGVert** %v1.addr, align 8, !dbg !2062
  %17 = load %struct.CCGEdge*, %struct.CCGEdge** %e, align 8, !dbg !2063
  %v19 = getelementptr inbounds %struct.CCGEdge, %struct.CCGEdge* %17, i32 0, i32 6, !dbg !2064
  store %struct.CCGVert* %16, %struct.CCGVert** %v19, align 8, !dbg !2065
  %18 = load float, float* %crease.addr, align 4, !dbg !2066
  %19 = load %struct.CCGEdge*, %struct.CCGEdge** %e, align 8, !dbg !2067
  %crease10 = getelementptr inbounds %struct.CCGEdge, %struct.CCGEdge* %19, i32 0, i32 4, !dbg !2068
  store float %18, float* %crease10, align 4, !dbg !2069
  %20 = load %struct.CCGEdge*, %struct.CCGEdge** %e, align 8, !dbg !2070
  %faces = getelementptr inbounds %struct.CCGEdge, %struct.CCGEdge* %20, i32 0, i32 7, !dbg !2071
  store %struct.CCGFace** null, %struct.CCGFace*** %faces, align 8, !dbg !2072
  %21 = load %struct.CCGEdge*, %struct.CCGEdge** %e, align 8, !dbg !2073
  %numFaces = getelementptr inbounds %struct.CCGEdge, %struct.CCGEdge* %21, i32 0, i32 2, !dbg !2074
  store i16 0, i16* %numFaces, align 8, !dbg !2075
  %22 = load %struct.CCGEdge*, %struct.CCGEdge** %e, align 8, !dbg !2076
  %flags = getelementptr inbounds %struct.CCGEdge, %struct.CCGEdge* %22, i32 0, i32 3, !dbg !2077
  store i16 0, i16* %flags, align 2, !dbg !2078
  %23 = load %struct.CCGVert*, %struct.CCGVert** %v0.addr, align 8, !dbg !2079
  %24 = load %struct.CCGEdge*, %struct.CCGEdge** %e, align 8, !dbg !2080
  %25 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !2081
  call void @_vert_addEdge(%struct.CCGVert* %23, %struct.CCGEdge* %24, %struct.CCGSubSurf* %25), !dbg !2082
  %26 = load %struct.CCGVert*, %struct.CCGVert** %v1.addr, align 8, !dbg !2083
  %27 = load %struct.CCGEdge*, %struct.CCGEdge** %e, align 8, !dbg !2084
  %28 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !2085
  call void @_vert_addEdge(%struct.CCGVert* %26, %struct.CCGEdge* %27, %struct.CCGSubSurf* %28), !dbg !2086
  %29 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !2087
  %30 = load %struct.CCGEdge*, %struct.CCGEdge** %e, align 8, !dbg !2088
  %call11 = call i8* @ccgSubSurf_getEdgeUserData(%struct.CCGSubSurf* %29, %struct.CCGEdge* %30), !dbg !2089
  store i8* %call11, i8** %userData, align 8, !dbg !2090
  %31 = load i8*, i8** %userData, align 8, !dbg !2091
  %32 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !2092
  %meshIFC12 = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %32, i32 0, i32 3, !dbg !2093
  %edgeUserSize13 = getelementptr inbounds %struct.CCGMeshIFC, %struct.CCGMeshIFC* %meshIFC12, i32 0, i32 1, !dbg !2094
  %33 = load i32, i32* %edgeUserSize13, align 4, !dbg !2094
  %conv14 = sext i32 %33 to i64, !dbg !2092
  call void @llvm.memset.p0i8.i64(i8* align 1 %31, i8 0, i64 %conv14, i1 false), !dbg !2095
  %34 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !2096
  %useAgeCounts = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %34, i32 0, i32 18, !dbg !2098
  %35 = load i32, i32* %useAgeCounts, align 4, !dbg !2098
  %tobool = icmp ne i32 %35, 0, !dbg !2096
  br i1 %tobool, label %if.then, label %if.end, !dbg !2099

if.then:                                          ; preds = %entry
  %36 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !2100
  %currentAge = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %36, i32 0, i32 17, !dbg !2101
  %37 = load i32, i32* %currentAge, align 8, !dbg !2101
  %38 = load i8*, i8** %userData, align 8, !dbg !2102
  %39 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !2103
  %edgeUserAgeOffset = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %39, i32 0, i32 20, !dbg !2104
  %40 = load i32, i32* %edgeUserAgeOffset, align 4, !dbg !2104
  %idxprom = sext i32 %40 to i64, !dbg !2102
  %arrayidx = getelementptr inbounds i8, i8* %38, i64 %idxprom, !dbg !2102
  %41 = bitcast i8* %arrayidx to i32*, !dbg !2105
  store i32 %37, i32* %41, align 4, !dbg !2106
  br label %if.end, !dbg !2105

if.end:                                           ; preds = %if.then, %entry
  %42 = load %struct.CCGEdge*, %struct.CCGEdge** %e, align 8, !dbg !2107
  ret %struct.CCGEdge* %42, !dbg !2108
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @ccgSubSurf_syncFace(%struct.CCGSubSurf* %ss, i8* %fHDL, i32 %numVerts, i8** %vHDLs, %struct.CCGFace** %f_r) #0 !dbg !2109 {
entry:
  %retval = alloca i32, align 4
  %ss.addr = alloca %struct.CCGSubSurf*, align 8
  %fHDL.addr = alloca i8*, align 8
  %numVerts.addr = alloca i32, align 4
  %vHDLs.addr = alloca i8**, align 8
  %f_r.addr = alloca %struct.CCGFace**, align 8
  %prevp = alloca i8**, align 8
  %f = alloca %struct.CCGFace*, align 8
  %fNew = alloca %struct.CCGFace*, align 8
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %topologyChanged = alloca i32, align 4
  %e = alloca %struct.CCGEdge*, align 8
  store %struct.CCGSubSurf* %ss, %struct.CCGSubSurf** %ss.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGSubSurf** %ss.addr, metadata !2113, metadata !DIExpression()), !dbg !2114
  store i8* %fHDL, i8** %fHDL.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %fHDL.addr, metadata !2115, metadata !DIExpression()), !dbg !2116
  store i32 %numVerts, i32* %numVerts.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %numVerts.addr, metadata !2117, metadata !DIExpression()), !dbg !2118
  store i8** %vHDLs, i8*** %vHDLs.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %vHDLs.addr, metadata !2119, metadata !DIExpression()), !dbg !2120
  store %struct.CCGFace** %f_r, %struct.CCGFace*** %f_r.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGFace*** %f_r.addr, metadata !2121, metadata !DIExpression()), !dbg !2122
  call void @llvm.dbg.declare(metadata i8*** %prevp, metadata !2123, metadata !DIExpression()), !dbg !2124
  call void @llvm.dbg.declare(metadata %struct.CCGFace** %f, metadata !2125, metadata !DIExpression()), !dbg !2126
  store %struct.CCGFace* null, %struct.CCGFace** %f, align 8, !dbg !2126
  call void @llvm.dbg.declare(metadata %struct.CCGFace** %fNew, metadata !2127, metadata !DIExpression()), !dbg !2128
  call void @llvm.dbg.declare(metadata i32* %j, metadata !2129, metadata !DIExpression()), !dbg !2130
  call void @llvm.dbg.declare(metadata i32* %k, metadata !2131, metadata !DIExpression()), !dbg !2132
  call void @llvm.dbg.declare(metadata i32* %topologyChanged, metadata !2133, metadata !DIExpression()), !dbg !2134
  store i32 0, i32* %topologyChanged, align 4, !dbg !2134
  %0 = load i32, i32* %numVerts.addr, align 4, !dbg !2135
  %1 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !2135
  %lenTempArrays = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %1, i32 0, i32 26, !dbg !2135
  %2 = load i32, i32* %lenTempArrays, align 8, !dbg !2135
  %cmp = icmp sgt i32 %0, %2, !dbg !2135
  br i1 %cmp, label %if.then, label %if.end, !dbg !2137

if.then:                                          ; preds = %entry
  %3 = load i32, i32* %numVerts.addr, align 4, !dbg !2138
  %4 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !2140
  %lenTempArrays1 = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %4, i32 0, i32 26, !dbg !2141
  %5 = load i32, i32* %lenTempArrays1, align 8, !dbg !2141
  %mul = mul nsw i32 %5, 2, !dbg !2142
  %cmp2 = icmp slt i32 %3, %mul, !dbg !2143
  br i1 %cmp2, label %cond.true, label %cond.false, !dbg !2144

cond.true:                                        ; preds = %if.then
  %6 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !2145
  %lenTempArrays3 = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %6, i32 0, i32 26, !dbg !2146
  %7 = load i32, i32* %lenTempArrays3, align 8, !dbg !2146
  %mul4 = mul nsw i32 %7, 2, !dbg !2147
  br label %cond.end, !dbg !2144

cond.false:                                       ; preds = %if.then
  %8 = load i32, i32* %numVerts.addr, align 4, !dbg !2148
  br label %cond.end, !dbg !2144

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %mul4, %cond.true ], [ %8, %cond.false ], !dbg !2144
  %9 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !2149
  %lenTempArrays5 = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %9, i32 0, i32 26, !dbg !2150
  store i32 %cond, i32* %lenTempArrays5, align 8, !dbg !2151
  %10 = load i8* (i8*, i64, i8*)*, i8* (i8*, i64, i8*)** @MEM_reallocN_id, align 8, !dbg !2152
  %11 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !2152
  %tempVerts = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %11, i32 0, i32 27, !dbg !2152
  %12 = load %struct.CCGVert**, %struct.CCGVert*** %tempVerts, align 8, !dbg !2152
  %13 = bitcast %struct.CCGVert** %12 to i8*, !dbg !2152
  %14 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !2152
  %lenTempArrays6 = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %14, i32 0, i32 26, !dbg !2152
  %15 = load i32, i32* %lenTempArrays6, align 8, !dbg !2152
  %conv = sext i32 %15 to i64, !dbg !2152
  %mul7 = mul i64 8, %conv, !dbg !2152
  %call = call i8* %10(i8* %13, i64 %mul7, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__func__.ccgSubSurf_syncFace, i64 0, i64 0)), !dbg !2152
  %16 = bitcast i8* %call to %struct.CCGVert**, !dbg !2152
  %17 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !2153
  %tempVerts8 = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %17, i32 0, i32 27, !dbg !2154
  store %struct.CCGVert** %16, %struct.CCGVert*** %tempVerts8, align 8, !dbg !2155
  %18 = load i8* (i8*, i64, i8*)*, i8* (i8*, i64, i8*)** @MEM_reallocN_id, align 8, !dbg !2156
  %19 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !2156
  %tempEdges = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %19, i32 0, i32 28, !dbg !2156
  %20 = load %struct.CCGEdge**, %struct.CCGEdge*** %tempEdges, align 8, !dbg !2156
  %21 = bitcast %struct.CCGEdge** %20 to i8*, !dbg !2156
  %22 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !2156
  %lenTempArrays9 = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %22, i32 0, i32 26, !dbg !2156
  %23 = load i32, i32* %lenTempArrays9, align 8, !dbg !2156
  %conv10 = sext i32 %23 to i64, !dbg !2156
  %mul11 = mul i64 8, %conv10, !dbg !2156
  %call12 = call i8* %18(i8* %21, i64 %mul11, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__func__.ccgSubSurf_syncFace, i64 0, i64 0)), !dbg !2156
  %24 = bitcast i8* %call12 to %struct.CCGEdge**, !dbg !2156
  %25 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !2157
  %tempEdges13 = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %25, i32 0, i32 28, !dbg !2158
  store %struct.CCGEdge** %24, %struct.CCGEdge*** %tempEdges13, align 8, !dbg !2159
  br label %if.end, !dbg !2160

if.end:                                           ; preds = %cond.end, %entry
  %26 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !2161
  %syncState = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %26, i32 0, i32 22, !dbg !2163
  %27 = load i32, i32* %syncState, align 4, !dbg !2163
  %cmp14 = icmp eq i32 %27, 4, !dbg !2164
  br i1 %cmp14, label %if.then16, label %if.else92, !dbg !2165

if.then16:                                        ; preds = %if.end
  %28 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !2166
  %fMap = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %28, i32 0, i32 2, !dbg !2168
  %29 = load %struct._EHash*, %struct._EHash** %fMap, align 8, !dbg !2168
  %30 = load i8*, i8** %fHDL.addr, align 8, !dbg !2169
  %call17 = call i8* @_ehash_lookupWithPrev(%struct._EHash* %29, i8* %30, i8*** %prevp), !dbg !2170
  %31 = bitcast i8* %call17 to %struct.CCGFace*, !dbg !2170
  store %struct.CCGFace* %31, %struct.CCGFace** %f, align 8, !dbg !2171
  store i32 0, i32* %k, align 4, !dbg !2172
  br label %for.cond, !dbg !2174

for.cond:                                         ; preds = %for.inc, %if.then16
  %32 = load i32, i32* %k, align 4, !dbg !2175
  %33 = load i32, i32* %numVerts.addr, align 4, !dbg !2177
  %cmp18 = icmp slt i32 %32, %33, !dbg !2178
  br i1 %cmp18, label %for.body, label %for.end, !dbg !2179

for.body:                                         ; preds = %for.cond
  %34 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !2180
  %vMap = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %34, i32 0, i32 0, !dbg !2182
  %35 = load %struct._EHash*, %struct._EHash** %vMap, align 8, !dbg !2182
  %36 = load i8**, i8*** %vHDLs.addr, align 8, !dbg !2183
  %37 = load i32, i32* %k, align 4, !dbg !2184
  %idxprom = sext i32 %37 to i64, !dbg !2183
  %arrayidx = getelementptr inbounds i8*, i8** %36, i64 %idxprom, !dbg !2183
  %38 = load i8*, i8** %arrayidx, align 8, !dbg !2183
  %call20 = call i8* @_ehash_lookup(%struct._EHash* %35, i8* %38), !dbg !2185
  %39 = bitcast i8* %call20 to %struct.CCGVert*, !dbg !2185
  %40 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !2186
  %tempVerts21 = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %40, i32 0, i32 27, !dbg !2187
  %41 = load %struct.CCGVert**, %struct.CCGVert*** %tempVerts21, align 8, !dbg !2187
  %42 = load i32, i32* %k, align 4, !dbg !2188
  %idxprom22 = sext i32 %42 to i64, !dbg !2186
  %arrayidx23 = getelementptr inbounds %struct.CCGVert*, %struct.CCGVert** %41, i64 %idxprom22, !dbg !2186
  store %struct.CCGVert* %39, %struct.CCGVert** %arrayidx23, align 8, !dbg !2189
  br label %for.inc, !dbg !2190

for.inc:                                          ; preds = %for.body
  %43 = load i32, i32* %k, align 4, !dbg !2191
  %inc = add nsw i32 %43, 1, !dbg !2191
  store i32 %inc, i32* %k, align 4, !dbg !2191
  br label %for.cond, !dbg !2192, !llvm.loop !2193

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %k, align 4, !dbg !2195
  br label %for.cond24, !dbg !2197

for.cond24:                                       ; preds = %for.inc38, %for.end
  %44 = load i32, i32* %k, align 4, !dbg !2198
  %45 = load i32, i32* %numVerts.addr, align 4, !dbg !2200
  %cmp25 = icmp slt i32 %44, %45, !dbg !2201
  br i1 %cmp25, label %for.body27, label %for.end40, !dbg !2202

for.body27:                                       ; preds = %for.cond24
  %46 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !2203
  %tempVerts28 = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %46, i32 0, i32 27, !dbg !2205
  %47 = load %struct.CCGVert**, %struct.CCGVert*** %tempVerts28, align 8, !dbg !2205
  %48 = load i32, i32* %k, align 4, !dbg !2206
  %idxprom29 = sext i32 %48 to i64, !dbg !2203
  %arrayidx30 = getelementptr inbounds %struct.CCGVert*, %struct.CCGVert** %47, i64 %idxprom29, !dbg !2203
  %49 = load %struct.CCGVert*, %struct.CCGVert** %arrayidx30, align 8, !dbg !2203
  %50 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !2207
  %tempVerts31 = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %50, i32 0, i32 27, !dbg !2208
  %51 = load %struct.CCGVert**, %struct.CCGVert*** %tempVerts31, align 8, !dbg !2208
  %52 = load i32, i32* %k, align 4, !dbg !2209
  %add = add nsw i32 %52, 1, !dbg !2210
  %53 = load i32, i32* %numVerts.addr, align 4, !dbg !2211
  %rem = srem i32 %add, %53, !dbg !2212
  %idxprom32 = sext i32 %rem to i64, !dbg !2207
  %arrayidx33 = getelementptr inbounds %struct.CCGVert*, %struct.CCGVert** %51, i64 %idxprom32, !dbg !2207
  %54 = load %struct.CCGVert*, %struct.CCGVert** %arrayidx33, align 8, !dbg !2207
  %call34 = call %struct.CCGEdge* @_vert_findEdgeTo(%struct.CCGVert* %49, %struct.CCGVert* %54), !dbg !2213
  %55 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !2214
  %tempEdges35 = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %55, i32 0, i32 28, !dbg !2215
  %56 = load %struct.CCGEdge**, %struct.CCGEdge*** %tempEdges35, align 8, !dbg !2215
  %57 = load i32, i32* %k, align 4, !dbg !2216
  %idxprom36 = sext i32 %57 to i64, !dbg !2214
  %arrayidx37 = getelementptr inbounds %struct.CCGEdge*, %struct.CCGEdge** %56, i64 %idxprom36, !dbg !2214
  store %struct.CCGEdge* %call34, %struct.CCGEdge** %arrayidx37, align 8, !dbg !2217
  br label %for.inc38, !dbg !2218

for.inc38:                                        ; preds = %for.body27
  %58 = load i32, i32* %k, align 4, !dbg !2219
  %inc39 = add nsw i32 %58, 1, !dbg !2219
  store i32 %inc39, i32* %k, align 4, !dbg !2219
  br label %for.cond24, !dbg !2220, !llvm.loop !2221

for.end40:                                        ; preds = %for.cond24
  %59 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !2223
  %tobool = icmp ne %struct.CCGFace* %59, null, !dbg !2223
  br i1 %tobool, label %if.then41, label %if.end61, !dbg !2225

if.then41:                                        ; preds = %for.end40
  %60 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !2226
  %numVerts42 = getelementptr inbounds %struct.CCGFace, %struct.CCGFace* %60, i32 0, i32 2, !dbg !2229
  %61 = load i16, i16* %numVerts42, align 8, !dbg !2229
  %conv43 = sext i16 %61 to i32, !dbg !2226
  %62 = load i32, i32* %numVerts.addr, align 4, !dbg !2230
  %cmp44 = icmp ne i32 %conv43, %62, !dbg !2231
  br i1 %cmp44, label %if.then59, label %lor.lhs.false, !dbg !2232

lor.lhs.false:                                    ; preds = %if.then41
  %63 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !2233
  %call46 = call %struct.CCGVert** @FACE_getVerts(%struct.CCGFace* %63), !dbg !2234
  %64 = bitcast %struct.CCGVert** %call46 to i8*, !dbg !2234
  %65 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !2235
  %tempVerts47 = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %65, i32 0, i32 27, !dbg !2236
  %66 = load %struct.CCGVert**, %struct.CCGVert*** %tempVerts47, align 8, !dbg !2236
  %67 = bitcast %struct.CCGVert** %66 to i8*, !dbg !2235
  %68 = load i32, i32* %numVerts.addr, align 4, !dbg !2237
  %conv48 = sext i32 %68 to i64, !dbg !2237
  %mul49 = mul i64 8, %conv48, !dbg !2238
  %call50 = call i32 @memcmp(i8* %64, i8* %67, i64 %mul49) #5, !dbg !2239
  %tobool51 = icmp ne i32 %call50, 0, !dbg !2239
  br i1 %tobool51, label %if.then59, label %lor.lhs.false52, !dbg !2240

lor.lhs.false52:                                  ; preds = %lor.lhs.false
  %69 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !2241
  %call53 = call %struct.CCGEdge** @FACE_getEdges(%struct.CCGFace* %69), !dbg !2242
  %70 = bitcast %struct.CCGEdge** %call53 to i8*, !dbg !2242
  %71 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !2243
  %tempEdges54 = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %71, i32 0, i32 28, !dbg !2244
  %72 = load %struct.CCGEdge**, %struct.CCGEdge*** %tempEdges54, align 8, !dbg !2244
  %73 = bitcast %struct.CCGEdge** %72 to i8*, !dbg !2243
  %74 = load i32, i32* %numVerts.addr, align 4, !dbg !2245
  %conv55 = sext i32 %74 to i64, !dbg !2245
  %mul56 = mul i64 8, %conv55, !dbg !2246
  %call57 = call i32 @memcmp(i8* %70, i8* %73, i64 %mul56) #5, !dbg !2247
  %tobool58 = icmp ne i32 %call57, 0, !dbg !2247
  br i1 %tobool58, label %if.then59, label %if.end60, !dbg !2248

if.then59:                                        ; preds = %lor.lhs.false52, %lor.lhs.false, %if.then41
  store i32 1, i32* %topologyChanged, align 4, !dbg !2249
  br label %if.end60, !dbg !2251

if.end60:                                         ; preds = %if.then59, %lor.lhs.false52
  br label %if.end61, !dbg !2252

if.end61:                                         ; preds = %if.end60, %for.end40
  %75 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !2253
  %tobool62 = icmp ne %struct.CCGFace* %75, null, !dbg !2253
  br i1 %tobool62, label %lor.lhs.false63, label %if.then65, !dbg !2255

lor.lhs.false63:                                  ; preds = %if.end61
  %76 = load i32, i32* %topologyChanged, align 4, !dbg !2256
  %tobool64 = icmp ne i32 %76, 0, !dbg !2256
  br i1 %tobool64, label %if.then65, label %if.end91, !dbg !2257

if.then65:                                        ; preds = %lor.lhs.false63, %if.end61
  %77 = load i8*, i8** %fHDL.addr, align 8, !dbg !2258
  %78 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !2260
  %tempVerts66 = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %78, i32 0, i32 27, !dbg !2261
  %79 = load %struct.CCGVert**, %struct.CCGVert*** %tempVerts66, align 8, !dbg !2261
  %80 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !2262
  %tempEdges67 = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %80, i32 0, i32 28, !dbg !2263
  %81 = load %struct.CCGEdge**, %struct.CCGEdge*** %tempEdges67, align 8, !dbg !2263
  %82 = load i32, i32* %numVerts.addr, align 4, !dbg !2264
  %83 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !2265
  %call68 = call %struct.CCGFace* @_face_new(i8* %77, %struct.CCGVert** %79, %struct.CCGEdge** %81, i32 %82, %struct.CCGSubSurf* %83), !dbg !2266
  store %struct.CCGFace* %call68, %struct.CCGFace** %fNew, align 8, !dbg !2267
  %84 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !2268
  %tobool69 = icmp ne %struct.CCGFace* %84, null, !dbg !2268
  br i1 %tobool69, label %if.then70, label %if.else, !dbg !2270

if.then70:                                        ; preds = %if.then65
  %85 = load i32, i32* %numVerts.addr, align 4, !dbg !2271
  %86 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !2273
  %numVerts71 = getelementptr inbounds %struct.CCGFace, %struct.CCGFace* %86, i32 0, i32 2, !dbg !2274
  %87 = load i16, i16* %numVerts71, align 8, !dbg !2274
  %conv72 = sext i16 %87 to i32, !dbg !2273
  %sub = sub nsw i32 %85, %conv72, !dbg !2275
  %88 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !2276
  %numGrids = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %88, i32 0, i32 7, !dbg !2277
  %89 = load i32, i32* %numGrids, align 4, !dbg !2278
  %add73 = add nsw i32 %89, %sub, !dbg !2278
  store i32 %add73, i32* %numGrids, align 4, !dbg !2278
  %90 = load %struct.CCGFace*, %struct.CCGFace** %fNew, align 8, !dbg !2279
  %91 = bitcast %struct.CCGFace* %90 to i8*, !dbg !2279
  %92 = load i8**, i8*** %prevp, align 8, !dbg !2280
  store i8* %91, i8** %92, align 8, !dbg !2281
  %93 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !2282
  %next = getelementptr inbounds %struct.CCGFace, %struct.CCGFace* %93, i32 0, i32 0, !dbg !2283
  %94 = load %struct.CCGFace*, %struct.CCGFace** %next, align 8, !dbg !2283
  %95 = load %struct.CCGFace*, %struct.CCGFace** %fNew, align 8, !dbg !2284
  %next74 = getelementptr inbounds %struct.CCGFace, %struct.CCGFace* %95, i32 0, i32 0, !dbg !2285
  store %struct.CCGFace* %94, %struct.CCGFace** %next74, align 8, !dbg !2286
  %96 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !2287
  %97 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !2288
  call void @_face_unlinkMarkAndFree(%struct.CCGFace* %96, %struct.CCGSubSurf* %97), !dbg !2289
  br label %if.end78, !dbg !2290

if.else:                                          ; preds = %if.then65
  %98 = load i32, i32* %numVerts.addr, align 4, !dbg !2291
  %99 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !2293
  %numGrids75 = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %99, i32 0, i32 7, !dbg !2294
  %100 = load i32, i32* %numGrids75, align 4, !dbg !2295
  %add76 = add nsw i32 %100, %98, !dbg !2295
  store i32 %add76, i32* %numGrids75, align 4, !dbg !2295
  %101 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !2296
  %fMap77 = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %101, i32 0, i32 2, !dbg !2297
  %102 = load %struct._EHash*, %struct._EHash** %fMap77, align 8, !dbg !2297
  %103 = load %struct.CCGFace*, %struct.CCGFace** %fNew, align 8, !dbg !2298
  %104 = bitcast %struct.CCGFace* %103 to %struct._EHEntry*, !dbg !2299
  call void @_ehash_insert(%struct._EHash* %102, %struct._EHEntry* %104), !dbg !2300
  br label %if.end78

if.end78:                                         ; preds = %if.else, %if.then70
  store i32 0, i32* %k, align 4, !dbg !2301
  br label %for.cond79, !dbg !2303

for.cond79:                                       ; preds = %for.inc88, %if.end78
  %105 = load i32, i32* %k, align 4, !dbg !2304
  %106 = load i32, i32* %numVerts.addr, align 4, !dbg !2306
  %cmp80 = icmp slt i32 %105, %106, !dbg !2307
  br i1 %cmp80, label %for.body82, label %for.end90, !dbg !2308

for.body82:                                       ; preds = %for.cond79
  %107 = load %struct.CCGFace*, %struct.CCGFace** %fNew, align 8, !dbg !2309
  %call83 = call %struct.CCGVert** @FACE_getVerts(%struct.CCGFace* %107), !dbg !2310
  %108 = load i32, i32* %k, align 4, !dbg !2311
  %idxprom84 = sext i32 %108 to i64, !dbg !2310
  %arrayidx85 = getelementptr inbounds %struct.CCGVert*, %struct.CCGVert** %call83, i64 %idxprom84, !dbg !2310
  %109 = load %struct.CCGVert*, %struct.CCGVert** %arrayidx85, align 8, !dbg !2310
  %flags = getelementptr inbounds %struct.CCGVert, %struct.CCGVert* %109, i32 0, i32 4, !dbg !2312
  %110 = load i16, i16* %flags, align 4, !dbg !2313
  %conv86 = sext i16 %110 to i32, !dbg !2313
  %or = or i32 %conv86, 1, !dbg !2313
  %conv87 = trunc i32 %or to i16, !dbg !2313
  store i16 %conv87, i16* %flags, align 4, !dbg !2313
  br label %for.inc88, !dbg !2310

for.inc88:                                        ; preds = %for.body82
  %111 = load i32, i32* %k, align 4, !dbg !2314
  %inc89 = add nsw i32 %111, 1, !dbg !2314
  store i32 %inc89, i32* %k, align 4, !dbg !2314
  br label %for.cond79, !dbg !2315, !llvm.loop !2316

for.end90:                                        ; preds = %for.cond79
  br label %if.end91, !dbg !2318

if.end91:                                         ; preds = %for.end90, %lor.lhs.false63
  br label %if.end275, !dbg !2319

if.else92:                                        ; preds = %if.end
  %112 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !2320
  %syncState93 = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %112, i32 0, i32 22, !dbg !2323
  %113 = load i32, i32* %syncState93, align 4, !dbg !2323
  %cmp94 = icmp eq i32 %113, 1, !dbg !2324
  br i1 %cmp94, label %if.then100, label %lor.lhs.false96, !dbg !2325

lor.lhs.false96:                                  ; preds = %if.else92
  %114 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !2326
  %syncState97 = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %114, i32 0, i32 22, !dbg !2327
  %115 = load i32, i32* %syncState97, align 4, !dbg !2327
  %cmp98 = icmp eq i32 %115, 2, !dbg !2328
  br i1 %cmp98, label %if.then100, label %if.else102, !dbg !2329

if.then100:                                       ; preds = %lor.lhs.false96, %if.else92
  %116 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !2330
  %syncState101 = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %116, i32 0, i32 22, !dbg !2332
  store i32 3, i32* %syncState101, align 4, !dbg !2333
  br label %if.end108, !dbg !2334

if.else102:                                       ; preds = %lor.lhs.false96
  %117 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !2335
  %syncState103 = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %117, i32 0, i32 22, !dbg !2337
  %118 = load i32, i32* %syncState103, align 4, !dbg !2337
  %cmp104 = icmp ne i32 %118, 3, !dbg !2338
  br i1 %cmp104, label %if.then106, label %if.end107, !dbg !2339

if.then106:                                       ; preds = %if.else102
  store i32 1, i32* %retval, align 4, !dbg !2340
  br label %return, !dbg !2340

if.end107:                                        ; preds = %if.else102
  br label %if.end108

if.end108:                                        ; preds = %if.end107, %if.then100
  %119 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !2342
  %oldFMap = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %119, i32 0, i32 25, !dbg !2343
  %120 = load %struct._EHash*, %struct._EHash** %oldFMap, align 8, !dbg !2343
  %121 = load i8*, i8** %fHDL.addr, align 8, !dbg !2344
  %call109 = call i8* @_ehash_lookupWithPrev(%struct._EHash* %120, i8* %121, i8*** %prevp), !dbg !2345
  %122 = bitcast i8* %call109 to %struct.CCGFace*, !dbg !2345
  store %struct.CCGFace* %122, %struct.CCGFace** %f, align 8, !dbg !2346
  store i32 0, i32* %k, align 4, !dbg !2347
  br label %for.cond110, !dbg !2349

for.cond110:                                      ; preds = %for.inc127, %if.end108
  %123 = load i32, i32* %k, align 4, !dbg !2350
  %124 = load i32, i32* %numVerts.addr, align 4, !dbg !2352
  %cmp111 = icmp slt i32 %123, %124, !dbg !2353
  br i1 %cmp111, label %for.body113, label %for.end129, !dbg !2354

for.body113:                                      ; preds = %for.cond110
  %125 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !2355
  %vMap114 = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %125, i32 0, i32 0, !dbg !2357
  %126 = load %struct._EHash*, %struct._EHash** %vMap114, align 8, !dbg !2357
  %127 = load i8**, i8*** %vHDLs.addr, align 8, !dbg !2358
  %128 = load i32, i32* %k, align 4, !dbg !2359
  %idxprom115 = sext i32 %128 to i64, !dbg !2358
  %arrayidx116 = getelementptr inbounds i8*, i8** %127, i64 %idxprom115, !dbg !2358
  %129 = load i8*, i8** %arrayidx116, align 8, !dbg !2358
  %call117 = call i8* @_ehash_lookup(%struct._EHash* %126, i8* %129), !dbg !2360
  %130 = bitcast i8* %call117 to %struct.CCGVert*, !dbg !2360
  %131 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !2361
  %tempVerts118 = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %131, i32 0, i32 27, !dbg !2362
  %132 = load %struct.CCGVert**, %struct.CCGVert*** %tempVerts118, align 8, !dbg !2362
  %133 = load i32, i32* %k, align 4, !dbg !2363
  %idxprom119 = sext i32 %133 to i64, !dbg !2361
  %arrayidx120 = getelementptr inbounds %struct.CCGVert*, %struct.CCGVert** %132, i64 %idxprom119, !dbg !2361
  store %struct.CCGVert* %130, %struct.CCGVert** %arrayidx120, align 8, !dbg !2364
  %134 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !2365
  %tempVerts121 = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %134, i32 0, i32 27, !dbg !2367
  %135 = load %struct.CCGVert**, %struct.CCGVert*** %tempVerts121, align 8, !dbg !2367
  %136 = load i32, i32* %k, align 4, !dbg !2368
  %idxprom122 = sext i32 %136 to i64, !dbg !2365
  %arrayidx123 = getelementptr inbounds %struct.CCGVert*, %struct.CCGVert** %135, i64 %idxprom122, !dbg !2365
  %137 = load %struct.CCGVert*, %struct.CCGVert** %arrayidx123, align 8, !dbg !2365
  %tobool124 = icmp ne %struct.CCGVert* %137, null, !dbg !2365
  br i1 %tobool124, label %if.end126, label %if.then125, !dbg !2369

if.then125:                                       ; preds = %for.body113
  store i32 2, i32* %retval, align 4, !dbg !2370
  br label %return, !dbg !2370

if.end126:                                        ; preds = %for.body113
  br label %for.inc127, !dbg !2371

for.inc127:                                       ; preds = %if.end126
  %138 = load i32, i32* %k, align 4, !dbg !2372
  %inc128 = add nsw i32 %138, 1, !dbg !2372
  store i32 %inc128, i32* %k, align 4, !dbg !2372
  br label %for.cond110, !dbg !2373, !llvm.loop !2374

for.end129:                                       ; preds = %for.cond110
  store i32 0, i32* %k, align 4, !dbg !2376
  br label %for.cond130, !dbg !2378

for.cond130:                                      ; preds = %for.inc183, %for.end129
  %139 = load i32, i32* %k, align 4, !dbg !2379
  %140 = load i32, i32* %numVerts.addr, align 4, !dbg !2381
  %cmp131 = icmp slt i32 %139, %140, !dbg !2382
  br i1 %cmp131, label %for.body133, label %for.end185, !dbg !2383

for.body133:                                      ; preds = %for.cond130
  %141 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !2384
  %tempVerts134 = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %141, i32 0, i32 27, !dbg !2386
  %142 = load %struct.CCGVert**, %struct.CCGVert*** %tempVerts134, align 8, !dbg !2386
  %143 = load i32, i32* %k, align 4, !dbg !2387
  %idxprom135 = sext i32 %143 to i64, !dbg !2384
  %arrayidx136 = getelementptr inbounds %struct.CCGVert*, %struct.CCGVert** %142, i64 %idxprom135, !dbg !2384
  %144 = load %struct.CCGVert*, %struct.CCGVert** %arrayidx136, align 8, !dbg !2384
  %145 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !2388
  %tempVerts137 = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %145, i32 0, i32 27, !dbg !2389
  %146 = load %struct.CCGVert**, %struct.CCGVert*** %tempVerts137, align 8, !dbg !2389
  %147 = load i32, i32* %k, align 4, !dbg !2390
  %add138 = add nsw i32 %147, 1, !dbg !2391
  %148 = load i32, i32* %numVerts.addr, align 4, !dbg !2392
  %rem139 = srem i32 %add138, %148, !dbg !2393
  %idxprom140 = sext i32 %rem139 to i64, !dbg !2388
  %arrayidx141 = getelementptr inbounds %struct.CCGVert*, %struct.CCGVert** %146, i64 %idxprom140, !dbg !2388
  %149 = load %struct.CCGVert*, %struct.CCGVert** %arrayidx141, align 8, !dbg !2388
  %call142 = call %struct.CCGEdge* @_vert_findEdgeTo(%struct.CCGVert* %144, %struct.CCGVert* %149), !dbg !2394
  %150 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !2395
  %tempEdges143 = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %150, i32 0, i32 28, !dbg !2396
  %151 = load %struct.CCGEdge**, %struct.CCGEdge*** %tempEdges143, align 8, !dbg !2396
  %152 = load i32, i32* %k, align 4, !dbg !2397
  %idxprom144 = sext i32 %152 to i64, !dbg !2395
  %arrayidx145 = getelementptr inbounds %struct.CCGEdge*, %struct.CCGEdge** %151, i64 %idxprom144, !dbg !2395
  store %struct.CCGEdge* %call142, %struct.CCGEdge** %arrayidx145, align 8, !dbg !2398
  %153 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !2399
  %tempEdges146 = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %153, i32 0, i32 28, !dbg !2401
  %154 = load %struct.CCGEdge**, %struct.CCGEdge*** %tempEdges146, align 8, !dbg !2401
  %155 = load i32, i32* %k, align 4, !dbg !2402
  %idxprom147 = sext i32 %155 to i64, !dbg !2399
  %arrayidx148 = getelementptr inbounds %struct.CCGEdge*, %struct.CCGEdge** %154, i64 %idxprom147, !dbg !2399
  %156 = load %struct.CCGEdge*, %struct.CCGEdge** %arrayidx148, align 8, !dbg !2399
  %tobool149 = icmp ne %struct.CCGEdge* %156, null, !dbg !2399
  br i1 %tobool149, label %if.end182, label %if.then150, !dbg !2403

if.then150:                                       ; preds = %for.body133
  %157 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !2404
  %allowEdgeCreation = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %157, i32 0, i32 8, !dbg !2407
  %158 = load i32, i32* %allowEdgeCreation, align 8, !dbg !2407
  %tobool151 = icmp ne i32 %158, 0, !dbg !2404
  br i1 %tobool151, label %if.then152, label %if.else180, !dbg !2408

if.then152:                                       ; preds = %if.then150
  call void @llvm.dbg.declare(metadata %struct.CCGEdge** %e, metadata !2409, metadata !DIExpression()), !dbg !2411
  %159 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !2412
  %tempVerts153 = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %159, i32 0, i32 27, !dbg !2413
  %160 = load %struct.CCGVert**, %struct.CCGVert*** %tempVerts153, align 8, !dbg !2413
  %161 = load i32, i32* %k, align 4, !dbg !2414
  %idxprom154 = sext i32 %161 to i64, !dbg !2412
  %arrayidx155 = getelementptr inbounds %struct.CCGVert*, %struct.CCGVert** %160, i64 %idxprom154, !dbg !2412
  %162 = load %struct.CCGVert*, %struct.CCGVert** %arrayidx155, align 8, !dbg !2412
  %163 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !2415
  %tempVerts156 = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %163, i32 0, i32 27, !dbg !2416
  %164 = load %struct.CCGVert**, %struct.CCGVert*** %tempVerts156, align 8, !dbg !2416
  %165 = load i32, i32* %k, align 4, !dbg !2417
  %add157 = add nsw i32 %165, 1, !dbg !2418
  %166 = load i32, i32* %numVerts.addr, align 4, !dbg !2419
  %rem158 = srem i32 %add157, %166, !dbg !2420
  %idxprom159 = sext i32 %rem158 to i64, !dbg !2415
  %arrayidx160 = getelementptr inbounds %struct.CCGVert*, %struct.CCGVert** %164, i64 %idxprom159, !dbg !2415
  %167 = load %struct.CCGVert*, %struct.CCGVert** %arrayidx160, align 8, !dbg !2415
  %168 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !2421
  %defaultCreaseValue = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %168, i32 0, i32 9, !dbg !2422
  %169 = load float, float* %defaultCreaseValue, align 4, !dbg !2422
  %170 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !2423
  %call161 = call %struct.CCGEdge* @_edge_new(i8* inttoptr (i64 -1 to i8*), %struct.CCGVert* %162, %struct.CCGVert* %167, float %169, %struct.CCGSubSurf* %170), !dbg !2424
  %171 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !2425
  %tempEdges162 = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %171, i32 0, i32 28, !dbg !2426
  %172 = load %struct.CCGEdge**, %struct.CCGEdge*** %tempEdges162, align 8, !dbg !2426
  %173 = load i32, i32* %k, align 4, !dbg !2427
  %idxprom163 = sext i32 %173 to i64, !dbg !2425
  %arrayidx164 = getelementptr inbounds %struct.CCGEdge*, %struct.CCGEdge** %172, i64 %idxprom163, !dbg !2425
  store %struct.CCGEdge* %call161, %struct.CCGEdge** %arrayidx164, align 8, !dbg !2428
  store %struct.CCGEdge* %call161, %struct.CCGEdge** %e, align 8, !dbg !2411
  %174 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !2429
  %eMap = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %174, i32 0, i32 1, !dbg !2430
  %175 = load %struct._EHash*, %struct._EHash** %eMap, align 8, !dbg !2430
  %176 = load %struct.CCGEdge*, %struct.CCGEdge** %e, align 8, !dbg !2431
  %177 = bitcast %struct.CCGEdge* %176 to %struct._EHEntry*, !dbg !2432
  call void @_ehash_insert(%struct._EHash* %175, %struct._EHEntry* %177), !dbg !2433
  %178 = load %struct.CCGEdge*, %struct.CCGEdge** %e, align 8, !dbg !2434
  %v0 = getelementptr inbounds %struct.CCGEdge, %struct.CCGEdge* %178, i32 0, i32 5, !dbg !2435
  %179 = load %struct.CCGVert*, %struct.CCGVert** %v0, align 8, !dbg !2435
  %flags165 = getelementptr inbounds %struct.CCGVert, %struct.CCGVert* %179, i32 0, i32 4, !dbg !2436
  %180 = load i16, i16* %flags165, align 4, !dbg !2437
  %conv166 = sext i16 %180 to i32, !dbg !2437
  %or167 = or i32 %conv166, 1, !dbg !2437
  %conv168 = trunc i32 %or167 to i16, !dbg !2437
  store i16 %conv168, i16* %flags165, align 4, !dbg !2437
  %181 = load %struct.CCGEdge*, %struct.CCGEdge** %e, align 8, !dbg !2438
  %v1 = getelementptr inbounds %struct.CCGEdge, %struct.CCGEdge* %181, i32 0, i32 6, !dbg !2439
  %182 = load %struct.CCGVert*, %struct.CCGVert** %v1, align 8, !dbg !2439
  %flags169 = getelementptr inbounds %struct.CCGVert, %struct.CCGVert* %182, i32 0, i32 4, !dbg !2440
  %183 = load i16, i16* %flags169, align 4, !dbg !2441
  %conv170 = sext i16 %183 to i32, !dbg !2441
  %or171 = or i32 %conv170, 1, !dbg !2441
  %conv172 = trunc i32 %or171 to i16, !dbg !2441
  store i16 %conv172, i16* %flags169, align 4, !dbg !2441
  %184 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !2442
  %meshIFC = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %184, i32 0, i32 3, !dbg !2444
  %edgeUserSize = getelementptr inbounds %struct.CCGMeshIFC, %struct.CCGMeshIFC* %meshIFC, i32 0, i32 1, !dbg !2445
  %185 = load i32, i32* %edgeUserSize, align 4, !dbg !2445
  %tobool173 = icmp ne i32 %185, 0, !dbg !2442
  br i1 %tobool173, label %if.then174, label %if.end179, !dbg !2446

if.then174:                                       ; preds = %if.then152
  %186 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !2447
  %187 = load %struct.CCGEdge*, %struct.CCGEdge** %e, align 8, !dbg !2449
  %call175 = call i8* @ccgSubSurf_getEdgeUserData(%struct.CCGSubSurf* %186, %struct.CCGEdge* %187), !dbg !2450
  %188 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !2451
  %defaultEdgeUserData = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %188, i32 0, i32 10, !dbg !2452
  %189 = load i8*, i8** %defaultEdgeUserData, align 8, !dbg !2452
  %190 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !2453
  %meshIFC176 = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %190, i32 0, i32 3, !dbg !2454
  %edgeUserSize177 = getelementptr inbounds %struct.CCGMeshIFC, %struct.CCGMeshIFC* %meshIFC176, i32 0, i32 1, !dbg !2455
  %191 = load i32, i32* %edgeUserSize177, align 4, !dbg !2455
  %conv178 = sext i32 %191 to i64, !dbg !2453
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %call175, i8* align 1 %189, i64 %conv178, i1 false), !dbg !2456
  br label %if.end179, !dbg !2457

if.end179:                                        ; preds = %if.then174, %if.then152
  br label %if.end181, !dbg !2458

if.else180:                                       ; preds = %if.then150
  store i32 2, i32* %retval, align 4, !dbg !2459
  br label %return, !dbg !2459

if.end181:                                        ; preds = %if.end179
  br label %if.end182, !dbg !2461

if.end182:                                        ; preds = %if.end181, %for.body133
  br label %for.inc183, !dbg !2462

for.inc183:                                       ; preds = %if.end182
  %192 = load i32, i32* %k, align 4, !dbg !2463
  %inc184 = add nsw i32 %192, 1, !dbg !2463
  store i32 %inc184, i32* %k, align 4, !dbg !2463
  br label %for.cond130, !dbg !2464, !llvm.loop !2465

for.end185:                                       ; preds = %for.cond130
  %193 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !2467
  %tobool186 = icmp ne %struct.CCGFace* %193, null, !dbg !2467
  br i1 %tobool186, label %if.then187, label %if.end208, !dbg !2469

if.then187:                                       ; preds = %for.end185
  %194 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !2470
  %numVerts188 = getelementptr inbounds %struct.CCGFace, %struct.CCGFace* %194, i32 0, i32 2, !dbg !2473
  %195 = load i16, i16* %numVerts188, align 8, !dbg !2473
  %conv189 = sext i16 %195 to i32, !dbg !2470
  %196 = load i32, i32* %numVerts.addr, align 4, !dbg !2474
  %cmp190 = icmp ne i32 %conv189, %196, !dbg !2475
  br i1 %cmp190, label %if.then206, label %lor.lhs.false192, !dbg !2476

lor.lhs.false192:                                 ; preds = %if.then187
  %197 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !2477
  %call193 = call %struct.CCGVert** @FACE_getVerts(%struct.CCGFace* %197), !dbg !2478
  %198 = bitcast %struct.CCGVert** %call193 to i8*, !dbg !2478
  %199 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !2479
  %tempVerts194 = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %199, i32 0, i32 27, !dbg !2480
  %200 = load %struct.CCGVert**, %struct.CCGVert*** %tempVerts194, align 8, !dbg !2480
  %201 = bitcast %struct.CCGVert** %200 to i8*, !dbg !2479
  %202 = load i32, i32* %numVerts.addr, align 4, !dbg !2481
  %conv195 = sext i32 %202 to i64, !dbg !2481
  %mul196 = mul i64 8, %conv195, !dbg !2482
  %call197 = call i32 @memcmp(i8* %198, i8* %201, i64 %mul196) #5, !dbg !2483
  %tobool198 = icmp ne i32 %call197, 0, !dbg !2483
  br i1 %tobool198, label %if.then206, label %lor.lhs.false199, !dbg !2484

lor.lhs.false199:                                 ; preds = %lor.lhs.false192
  %203 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !2485
  %call200 = call %struct.CCGEdge** @FACE_getEdges(%struct.CCGFace* %203), !dbg !2486
  %204 = bitcast %struct.CCGEdge** %call200 to i8*, !dbg !2486
  %205 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !2487
  %tempEdges201 = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %205, i32 0, i32 28, !dbg !2488
  %206 = load %struct.CCGEdge**, %struct.CCGEdge*** %tempEdges201, align 8, !dbg !2488
  %207 = bitcast %struct.CCGEdge** %206 to i8*, !dbg !2487
  %208 = load i32, i32* %numVerts.addr, align 4, !dbg !2489
  %conv202 = sext i32 %208 to i64, !dbg !2489
  %mul203 = mul i64 8, %conv202, !dbg !2490
  %call204 = call i32 @memcmp(i8* %204, i8* %207, i64 %mul203) #5, !dbg !2491
  %tobool205 = icmp ne i32 %call204, 0, !dbg !2491
  br i1 %tobool205, label %if.then206, label %if.end207, !dbg !2492

if.then206:                                       ; preds = %lor.lhs.false199, %lor.lhs.false192, %if.then187
  store i32 1, i32* %topologyChanged, align 4, !dbg !2493
  br label %if.end207, !dbg !2495

if.end207:                                        ; preds = %if.then206, %lor.lhs.false199
  br label %if.end208, !dbg !2496

if.end208:                                        ; preds = %if.end207, %for.end185
  %209 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !2497
  %tobool209 = icmp ne %struct.CCGFace* %209, null, !dbg !2497
  br i1 %tobool209, label %lor.lhs.false210, label %if.then212, !dbg !2499

lor.lhs.false210:                                 ; preds = %if.end208
  %210 = load i32, i32* %topologyChanged, align 4, !dbg !2500
  %tobool211 = icmp ne i32 %210, 0, !dbg !2500
  br i1 %tobool211, label %if.then212, label %if.else233, !dbg !2501

if.then212:                                       ; preds = %lor.lhs.false210, %if.end208
  %211 = load i8*, i8** %fHDL.addr, align 8, !dbg !2502
  %212 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !2504
  %tempVerts213 = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %212, i32 0, i32 27, !dbg !2505
  %213 = load %struct.CCGVert**, %struct.CCGVert*** %tempVerts213, align 8, !dbg !2505
  %214 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !2506
  %tempEdges214 = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %214, i32 0, i32 28, !dbg !2507
  %215 = load %struct.CCGEdge**, %struct.CCGEdge*** %tempEdges214, align 8, !dbg !2507
  %216 = load i32, i32* %numVerts.addr, align 4, !dbg !2508
  %217 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !2509
  %call215 = call %struct.CCGFace* @_face_new(i8* %211, %struct.CCGVert** %213, %struct.CCGEdge** %215, i32 %216, %struct.CCGSubSurf* %217), !dbg !2510
  store %struct.CCGFace* %call215, %struct.CCGFace** %f, align 8, !dbg !2511
  %218 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !2512
  %fMap216 = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %218, i32 0, i32 2, !dbg !2513
  %219 = load %struct._EHash*, %struct._EHash** %fMap216, align 8, !dbg !2513
  %220 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !2514
  %221 = bitcast %struct.CCGFace* %220 to %struct._EHEntry*, !dbg !2515
  call void @_ehash_insert(%struct._EHash* %219, %struct._EHEntry* %221), !dbg !2516
  %222 = load i32, i32* %numVerts.addr, align 4, !dbg !2517
  %223 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !2518
  %numGrids217 = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %223, i32 0, i32 7, !dbg !2519
  %224 = load i32, i32* %numGrids217, align 4, !dbg !2520
  %add218 = add nsw i32 %224, %222, !dbg !2520
  store i32 %add218, i32* %numGrids217, align 4, !dbg !2520
  store i32 0, i32* %k, align 4, !dbg !2521
  br label %for.cond219, !dbg !2523

for.cond219:                                      ; preds = %for.inc230, %if.then212
  %225 = load i32, i32* %k, align 4, !dbg !2524
  %226 = load i32, i32* %numVerts.addr, align 4, !dbg !2526
  %cmp220 = icmp slt i32 %225, %226, !dbg !2527
  br i1 %cmp220, label %for.body222, label %for.end232, !dbg !2528

for.body222:                                      ; preds = %for.cond219
  %227 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !2529
  %call223 = call %struct.CCGVert** @FACE_getVerts(%struct.CCGFace* %227), !dbg !2530
  %228 = load i32, i32* %k, align 4, !dbg !2531
  %idxprom224 = sext i32 %228 to i64, !dbg !2530
  %arrayidx225 = getelementptr inbounds %struct.CCGVert*, %struct.CCGVert** %call223, i64 %idxprom224, !dbg !2530
  %229 = load %struct.CCGVert*, %struct.CCGVert** %arrayidx225, align 8, !dbg !2530
  %flags226 = getelementptr inbounds %struct.CCGVert, %struct.CCGVert* %229, i32 0, i32 4, !dbg !2532
  %230 = load i16, i16* %flags226, align 4, !dbg !2533
  %conv227 = sext i16 %230 to i32, !dbg !2533
  %or228 = or i32 %conv227, 1, !dbg !2533
  %conv229 = trunc i32 %or228 to i16, !dbg !2533
  store i16 %conv229, i16* %flags226, align 4, !dbg !2533
  br label %for.inc230, !dbg !2530

for.inc230:                                       ; preds = %for.body222
  %231 = load i32, i32* %k, align 4, !dbg !2534
  %inc231 = add nsw i32 %231, 1, !dbg !2534
  store i32 %inc231, i32* %k, align 4, !dbg !2534
  br label %for.cond219, !dbg !2535, !llvm.loop !2536

for.end232:                                       ; preds = %for.cond219
  br label %if.end274, !dbg !2538

if.else233:                                       ; preds = %lor.lhs.false210
  %232 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !2539
  %next234 = getelementptr inbounds %struct.CCGFace, %struct.CCGFace* %232, i32 0, i32 0, !dbg !2541
  %233 = load %struct.CCGFace*, %struct.CCGFace** %next234, align 8, !dbg !2541
  %234 = bitcast %struct.CCGFace* %233 to i8*, !dbg !2539
  %235 = load i8**, i8*** %prevp, align 8, !dbg !2542
  store i8* %234, i8** %235, align 8, !dbg !2543
  %236 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !2544
  %fMap235 = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %236, i32 0, i32 2, !dbg !2545
  %237 = load %struct._EHash*, %struct._EHash** %fMap235, align 8, !dbg !2545
  %238 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !2546
  %239 = bitcast %struct.CCGFace* %238 to %struct._EHEntry*, !dbg !2547
  call void @_ehash_insert(%struct._EHash* %237, %struct._EHEntry* %239), !dbg !2548
  %240 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !2549
  %flags236 = getelementptr inbounds %struct.CCGFace, %struct.CCGFace* %240, i32 0, i32 3, !dbg !2550
  store i16 0, i16* %flags236, align 2, !dbg !2551
  %241 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !2552
  %numVerts237 = getelementptr inbounds %struct.CCGFace, %struct.CCGFace* %241, i32 0, i32 2, !dbg !2553
  %242 = load i16, i16* %numVerts237, align 8, !dbg !2553
  %conv238 = sext i16 %242 to i32, !dbg !2552
  %243 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !2554
  %numGrids239 = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %243, i32 0, i32 7, !dbg !2555
  %244 = load i32, i32* %numGrids239, align 4, !dbg !2556
  %add240 = add nsw i32 %244, %conv238, !dbg !2556
  store i32 %add240, i32* %numGrids239, align 4, !dbg !2556
  store i32 0, i32* %j, align 4, !dbg !2557
  br label %for.cond241, !dbg !2559

for.cond241:                                      ; preds = %for.inc271, %if.else233
  %245 = load i32, i32* %j, align 4, !dbg !2560
  %246 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !2562
  %numVerts242 = getelementptr inbounds %struct.CCGFace, %struct.CCGFace* %246, i32 0, i32 2, !dbg !2563
  %247 = load i16, i16* %numVerts242, align 8, !dbg !2563
  %conv243 = sext i16 %247 to i32, !dbg !2562
  %cmp244 = icmp slt i32 %245, %conv243, !dbg !2564
  br i1 %cmp244, label %for.body246, label %for.end273, !dbg !2565

for.body246:                                      ; preds = %for.cond241
  %248 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !2566
  %call247 = call %struct.CCGVert** @FACE_getVerts(%struct.CCGFace* %248), !dbg !2569
  %249 = load i32, i32* %j, align 4, !dbg !2570
  %idxprom248 = sext i32 %249 to i64, !dbg !2569
  %arrayidx249 = getelementptr inbounds %struct.CCGVert*, %struct.CCGVert** %call247, i64 %idxprom248, !dbg !2569
  %250 = load %struct.CCGVert*, %struct.CCGVert** %arrayidx249, align 8, !dbg !2569
  %flags250 = getelementptr inbounds %struct.CCGVert, %struct.CCGVert* %250, i32 0, i32 4, !dbg !2571
  %251 = load i16, i16* %flags250, align 4, !dbg !2571
  %conv251 = sext i16 %251 to i32, !dbg !2569
  %and = and i32 %conv251, 2, !dbg !2572
  %tobool252 = icmp ne i32 %and, 0, !dbg !2572
  br i1 %tobool252, label %if.then253, label %if.end270, !dbg !2573

if.then253:                                       ; preds = %for.body246
  store i32 0, i32* %k, align 4, !dbg !2574
  br label %for.cond254, !dbg !2577

for.cond254:                                      ; preds = %for.inc267, %if.then253
  %252 = load i32, i32* %k, align 4, !dbg !2578
  %253 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !2580
  %numVerts255 = getelementptr inbounds %struct.CCGFace, %struct.CCGFace* %253, i32 0, i32 2, !dbg !2581
  %254 = load i16, i16* %numVerts255, align 8, !dbg !2581
  %conv256 = sext i16 %254 to i32, !dbg !2580
  %cmp257 = icmp slt i32 %252, %conv256, !dbg !2582
  br i1 %cmp257, label %for.body259, label %for.end269, !dbg !2583

for.body259:                                      ; preds = %for.cond254
  %255 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !2584
  %call260 = call %struct.CCGVert** @FACE_getVerts(%struct.CCGFace* %255), !dbg !2585
  %256 = load i32, i32* %k, align 4, !dbg !2586
  %idxprom261 = sext i32 %256 to i64, !dbg !2585
  %arrayidx262 = getelementptr inbounds %struct.CCGVert*, %struct.CCGVert** %call260, i64 %idxprom261, !dbg !2585
  %257 = load %struct.CCGVert*, %struct.CCGVert** %arrayidx262, align 8, !dbg !2585
  %flags263 = getelementptr inbounds %struct.CCGVert, %struct.CCGVert* %257, i32 0, i32 4, !dbg !2587
  %258 = load i16, i16* %flags263, align 4, !dbg !2588
  %conv264 = sext i16 %258 to i32, !dbg !2588
  %or265 = or i32 %conv264, 1, !dbg !2588
  %conv266 = trunc i32 %or265 to i16, !dbg !2588
  store i16 %conv266, i16* %flags263, align 4, !dbg !2588
  br label %for.inc267, !dbg !2585

for.inc267:                                       ; preds = %for.body259
  %259 = load i32, i32* %k, align 4, !dbg !2589
  %inc268 = add nsw i32 %259, 1, !dbg !2589
  store i32 %inc268, i32* %k, align 4, !dbg !2589
  br label %for.cond254, !dbg !2590, !llvm.loop !2591

for.end269:                                       ; preds = %for.cond254
  br label %for.end273, !dbg !2593

if.end270:                                        ; preds = %for.body246
  br label %for.inc271, !dbg !2594

for.inc271:                                       ; preds = %if.end270
  %260 = load i32, i32* %j, align 4, !dbg !2595
  %inc272 = add nsw i32 %260, 1, !dbg !2595
  store i32 %inc272, i32* %j, align 4, !dbg !2595
  br label %for.cond241, !dbg !2596, !llvm.loop !2597

for.end273:                                       ; preds = %for.end269, %for.cond241
  br label %if.end274

if.end274:                                        ; preds = %for.end273, %for.end232
  br label %if.end275

if.end275:                                        ; preds = %if.end274, %if.end91
  %261 = load %struct.CCGFace**, %struct.CCGFace*** %f_r.addr, align 8, !dbg !2599
  %tobool276 = icmp ne %struct.CCGFace** %261, null, !dbg !2599
  br i1 %tobool276, label %if.then277, label %if.end278, !dbg !2601

if.then277:                                       ; preds = %if.end275
  %262 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !2602
  %263 = load %struct.CCGFace**, %struct.CCGFace*** %f_r.addr, align 8, !dbg !2603
  store %struct.CCGFace* %262, %struct.CCGFace** %263, align 8, !dbg !2604
  br label %if.end278, !dbg !2605

if.end278:                                        ; preds = %if.then277, %if.end275
  store i32 0, i32* %retval, align 4, !dbg !2606
  br label %return, !dbg !2606

return:                                           ; preds = %if.end278, %if.else180, %if.then125, %if.then106
  %264 = load i32, i32* %retval, align 4, !dbg !2607
  ret i32 %264, !dbg !2607
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.CCGEdge* @_vert_findEdgeTo(%struct.CCGVert* %v, %struct.CCGVert* %vQ) #0 !dbg !2608 {
entry:
  %retval = alloca %struct.CCGEdge*, align 8
  %v.addr = alloca %struct.CCGVert*, align 8
  %vQ.addr = alloca %struct.CCGVert*, align 8
  %i = alloca i32, align 4
  %e = alloca %struct.CCGEdge*, align 8
  store %struct.CCGVert* %v, %struct.CCGVert** %v.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGVert** %v.addr, metadata !2613, metadata !DIExpression()), !dbg !2614
  store %struct.CCGVert* %vQ, %struct.CCGVert** %vQ.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGVert** %vQ.addr, metadata !2615, metadata !DIExpression()), !dbg !2616
  call void @llvm.dbg.declare(metadata i32* %i, metadata !2617, metadata !DIExpression()), !dbg !2618
  store i32 0, i32* %i, align 4, !dbg !2619
  br label %for.cond, !dbg !2621

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !2622
  %1 = load %struct.CCGVert*, %struct.CCGVert** %v.addr, align 8, !dbg !2624
  %numEdges = getelementptr inbounds %struct.CCGVert, %struct.CCGVert* %1, i32 0, i32 2, !dbg !2625
  %2 = load i16, i16* %numEdges, align 8, !dbg !2625
  %conv = sext i16 %2 to i32, !dbg !2624
  %cmp = icmp slt i32 %0, %conv, !dbg !2626
  br i1 %cmp, label %for.body, label %for.end, !dbg !2627

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.CCGEdge** %e, metadata !2628, metadata !DIExpression()), !dbg !2630
  %3 = load %struct.CCGVert*, %struct.CCGVert** %v.addr, align 8, !dbg !2631
  %edges = getelementptr inbounds %struct.CCGVert, %struct.CCGVert* %3, i32 0, i32 6, !dbg !2632
  %4 = load %struct.CCGEdge**, %struct.CCGEdge*** %edges, align 8, !dbg !2632
  %5 = load %struct.CCGVert*, %struct.CCGVert** %v.addr, align 8, !dbg !2633
  %numEdges2 = getelementptr inbounds %struct.CCGVert, %struct.CCGVert* %5, i32 0, i32 2, !dbg !2634
  %6 = load i16, i16* %numEdges2, align 8, !dbg !2634
  %conv3 = sext i16 %6 to i32, !dbg !2633
  %sub = sub nsw i32 %conv3, 1, !dbg !2635
  %7 = load i32, i32* %i, align 4, !dbg !2636
  %sub4 = sub nsw i32 %sub, %7, !dbg !2637
  %idxprom = sext i32 %sub4 to i64, !dbg !2631
  %arrayidx = getelementptr inbounds %struct.CCGEdge*, %struct.CCGEdge** %4, i64 %idxprom, !dbg !2631
  %8 = load %struct.CCGEdge*, %struct.CCGEdge** %arrayidx, align 8, !dbg !2631
  store %struct.CCGEdge* %8, %struct.CCGEdge** %e, align 8, !dbg !2630
  %9 = load %struct.CCGEdge*, %struct.CCGEdge** %e, align 8, !dbg !2638
  %v0 = getelementptr inbounds %struct.CCGEdge, %struct.CCGEdge* %9, i32 0, i32 5, !dbg !2640
  %10 = load %struct.CCGVert*, %struct.CCGVert** %v0, align 8, !dbg !2640
  %11 = load %struct.CCGVert*, %struct.CCGVert** %v.addr, align 8, !dbg !2641
  %cmp5 = icmp eq %struct.CCGVert* %10, %11, !dbg !2642
  br i1 %cmp5, label %land.lhs.true, label %lor.lhs.false, !dbg !2643

land.lhs.true:                                    ; preds = %for.body
  %12 = load %struct.CCGEdge*, %struct.CCGEdge** %e, align 8, !dbg !2644
  %v1 = getelementptr inbounds %struct.CCGEdge, %struct.CCGEdge* %12, i32 0, i32 6, !dbg !2645
  %13 = load %struct.CCGVert*, %struct.CCGVert** %v1, align 8, !dbg !2645
  %14 = load %struct.CCGVert*, %struct.CCGVert** %vQ.addr, align 8, !dbg !2646
  %cmp7 = icmp eq %struct.CCGVert* %13, %14, !dbg !2647
  br i1 %cmp7, label %if.then, label %lor.lhs.false, !dbg !2648

lor.lhs.false:                                    ; preds = %land.lhs.true, %for.body
  %15 = load %struct.CCGEdge*, %struct.CCGEdge** %e, align 8, !dbg !2649
  %v19 = getelementptr inbounds %struct.CCGEdge, %struct.CCGEdge* %15, i32 0, i32 6, !dbg !2650
  %16 = load %struct.CCGVert*, %struct.CCGVert** %v19, align 8, !dbg !2650
  %17 = load %struct.CCGVert*, %struct.CCGVert** %v.addr, align 8, !dbg !2651
  %cmp10 = icmp eq %struct.CCGVert* %16, %17, !dbg !2652
  br i1 %cmp10, label %land.lhs.true12, label %if.end, !dbg !2653

land.lhs.true12:                                  ; preds = %lor.lhs.false
  %18 = load %struct.CCGEdge*, %struct.CCGEdge** %e, align 8, !dbg !2654
  %v013 = getelementptr inbounds %struct.CCGEdge, %struct.CCGEdge* %18, i32 0, i32 5, !dbg !2655
  %19 = load %struct.CCGVert*, %struct.CCGVert** %v013, align 8, !dbg !2655
  %20 = load %struct.CCGVert*, %struct.CCGVert** %vQ.addr, align 8, !dbg !2656
  %cmp14 = icmp eq %struct.CCGVert* %19, %20, !dbg !2657
  br i1 %cmp14, label %if.then, label %if.end, !dbg !2658

if.then:                                          ; preds = %land.lhs.true12, %land.lhs.true
  %21 = load %struct.CCGEdge*, %struct.CCGEdge** %e, align 8, !dbg !2659
  store %struct.CCGEdge* %21, %struct.CCGEdge** %retval, align 8, !dbg !2661
  br label %return, !dbg !2661

if.end:                                           ; preds = %land.lhs.true12, %lor.lhs.false
  br label %for.inc, !dbg !2662

for.inc:                                          ; preds = %if.end
  %22 = load i32, i32* %i, align 4, !dbg !2663
  %inc = add nsw i32 %22, 1, !dbg !2663
  store i32 %inc, i32* %i, align 4, !dbg !2663
  br label %for.cond, !dbg !2664, !llvm.loop !2665

for.end:                                          ; preds = %for.cond
  store %struct.CCGEdge* null, %struct.CCGEdge** %retval, align 8, !dbg !2667
  br label %return, !dbg !2667

return:                                           ; preds = %for.end, %if.then
  %23 = load %struct.CCGEdge*, %struct.CCGEdge** %retval, align 8, !dbg !2668
  ret %struct.CCGEdge* %23, !dbg !2668
}

; Function Attrs: nounwind readonly
declare dso_local i32 @memcmp(i8*, i8*, i64) #3

; Function Attrs: noinline nounwind uwtable
define internal %struct.CCGEdge** @FACE_getEdges(%struct.CCGFace* %f) #0 !dbg !2669 {
entry:
  %f.addr = alloca %struct.CCGFace*, align 8
  store %struct.CCGFace* %f, %struct.CCGFace** %f.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGFace** %f.addr, metadata !2672, metadata !DIExpression()), !dbg !2673
  %0 = load %struct.CCGFace*, %struct.CCGFace** %f.addr, align 8, !dbg !2674
  %call = call %struct.CCGVert** @FACE_getVerts(%struct.CCGFace* %0), !dbg !2675
  %1 = load %struct.CCGFace*, %struct.CCGFace** %f.addr, align 8, !dbg !2676
  %numVerts = getelementptr inbounds %struct.CCGFace, %struct.CCGFace* %1, i32 0, i32 2, !dbg !2677
  %2 = load i16, i16* %numVerts, align 8, !dbg !2677
  %idxprom = sext i16 %2 to i64, !dbg !2675
  %arrayidx = getelementptr inbounds %struct.CCGVert*, %struct.CCGVert** %call, i64 %idxprom, !dbg !2675
  %3 = bitcast %struct.CCGVert** %arrayidx to %struct.CCGEdge**, !dbg !2678
  ret %struct.CCGEdge** %3, !dbg !2679
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.CCGFace* @_face_new(i8* %fHDL, %struct.CCGVert** %verts, %struct.CCGEdge** %edges, i32 %numVerts, %struct.CCGSubSurf* %ss) #0 !dbg !2680 {
entry:
  %fHDL.addr = alloca i8*, align 8
  %verts.addr = alloca %struct.CCGVert**, align 8
  %edges.addr = alloca %struct.CCGEdge**, align 8
  %numVerts.addr = alloca i32, align 4
  %ss.addr = alloca %struct.CCGSubSurf*, align 8
  %maxGridSize = alloca i32, align 4
  %num_face_data = alloca i32, align 4
  %f = alloca %struct.CCGFace*, align 8
  %userData = alloca i8*, align 8
  %i = alloca i32, align 4
  store i8* %fHDL, i8** %fHDL.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %fHDL.addr, metadata !2683, metadata !DIExpression()), !dbg !2684
  store %struct.CCGVert** %verts, %struct.CCGVert*** %verts.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGVert*** %verts.addr, metadata !2685, metadata !DIExpression()), !dbg !2686
  store %struct.CCGEdge** %edges, %struct.CCGEdge*** %edges.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGEdge*** %edges.addr, metadata !2687, metadata !DIExpression()), !dbg !2688
  store i32 %numVerts, i32* %numVerts.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %numVerts.addr, metadata !2689, metadata !DIExpression()), !dbg !2690
  store %struct.CCGSubSurf* %ss, %struct.CCGSubSurf** %ss.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGSubSurf** %ss.addr, metadata !2691, metadata !DIExpression()), !dbg !2692
  call void @llvm.dbg.declare(metadata i32* %maxGridSize, metadata !2693, metadata !DIExpression()), !dbg !2694
  %0 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !2695
  %subdivLevels = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %0, i32 0, i32 6, !dbg !2696
  %1 = load i32, i32* %subdivLevels, align 8, !dbg !2696
  %call = call i32 @ccg_gridsize(i32 %1), !dbg !2697
  store i32 %call, i32* %maxGridSize, align 4, !dbg !2694
  call void @llvm.dbg.declare(metadata i32* %num_face_data, metadata !2698, metadata !DIExpression()), !dbg !2699
  %2 = load i32, i32* %numVerts.addr, align 4, !dbg !2700
  %3 = load i32, i32* %maxGridSize, align 4, !dbg !2701
  %mul = mul nsw i32 %2, %3, !dbg !2702
  %4 = load i32, i32* %numVerts.addr, align 4, !dbg !2703
  %5 = load i32, i32* %maxGridSize, align 4, !dbg !2704
  %mul1 = mul nsw i32 %4, %5, !dbg !2705
  %6 = load i32, i32* %maxGridSize, align 4, !dbg !2706
  %mul2 = mul nsw i32 %mul1, %6, !dbg !2707
  %add = add nsw i32 %mul, %mul2, !dbg !2708
  %add3 = add nsw i32 %add, 1, !dbg !2709
  store i32 %add3, i32* %num_face_data, align 4, !dbg !2699
  call void @llvm.dbg.declare(metadata %struct.CCGFace** %f, metadata !2710, metadata !DIExpression()), !dbg !2711
  %7 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !2712
  %allocatorIFC = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %7, i32 0, i32 4, !dbg !2712
  %alloc = getelementptr inbounds %struct.CCGAllocatorIFC, %struct.CCGAllocatorIFC* %allocatorIFC, i32 0, i32 0, !dbg !2712
  %8 = load i8* (i8*, i32)*, i8* (i8*, i32)** %alloc, align 8, !dbg !2712
  %9 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !2712
  %allocator = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %9, i32 0, i32 5, !dbg !2712
  %10 = load i8*, i8** %allocator, align 8, !dbg !2712
  %11 = load i32, i32* %numVerts.addr, align 4, !dbg !2712
  %conv = sext i32 %11 to i64, !dbg !2712
  %mul4 = mul i64 8, %conv, !dbg !2712
  %add5 = add i64 24, %mul4, !dbg !2712
  %12 = load i32, i32* %numVerts.addr, align 4, !dbg !2712
  %conv6 = sext i32 %12 to i64, !dbg !2712
  %mul7 = mul i64 8, %conv6, !dbg !2712
  %add8 = add i64 %add5, %mul7, !dbg !2712
  %13 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !2712
  %meshIFC = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %13, i32 0, i32 3, !dbg !2712
  %vertDataSize = getelementptr inbounds %struct.CCGMeshIFC, %struct.CCGMeshIFC* %meshIFC, i32 0, i32 4, !dbg !2712
  %14 = load i32, i32* %vertDataSize, align 8, !dbg !2712
  %15 = load i32, i32* %num_face_data, align 4, !dbg !2712
  %mul9 = mul nsw i32 %14, %15, !dbg !2712
  %conv10 = sext i32 %mul9 to i64, !dbg !2712
  %add11 = add i64 %add8, %conv10, !dbg !2712
  %16 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !2712
  %meshIFC12 = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %16, i32 0, i32 3, !dbg !2712
  %faceUserSize = getelementptr inbounds %struct.CCGMeshIFC, %struct.CCGMeshIFC* %meshIFC12, i32 0, i32 2, !dbg !2712
  %17 = load i32, i32* %faceUserSize, align 8, !dbg !2712
  %conv13 = sext i32 %17 to i64, !dbg !2712
  %add14 = add i64 %add11, %conv13, !dbg !2712
  %conv15 = trunc i64 %add14 to i32, !dbg !2712
  %call16 = call i8* %8(i8* %10, i32 %conv15), !dbg !2712
  %18 = bitcast i8* %call16 to %struct.CCGFace*, !dbg !2712
  store %struct.CCGFace* %18, %struct.CCGFace** %f, align 8, !dbg !2711
  call void @llvm.dbg.declare(metadata i8** %userData, metadata !2713, metadata !DIExpression()), !dbg !2714
  call void @llvm.dbg.declare(metadata i32* %i, metadata !2715, metadata !DIExpression()), !dbg !2716
  %19 = load i32, i32* %numVerts.addr, align 4, !dbg !2717
  %conv17 = trunc i32 %19 to i16, !dbg !2717
  %20 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !2718
  %numVerts18 = getelementptr inbounds %struct.CCGFace, %struct.CCGFace* %20, i32 0, i32 2, !dbg !2719
  store i16 %conv17, i16* %numVerts18, align 8, !dbg !2720
  %21 = load i8*, i8** %fHDL.addr, align 8, !dbg !2721
  %22 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !2722
  %fHDL19 = getelementptr inbounds %struct.CCGFace, %struct.CCGFace* %22, i32 0, i32 1, !dbg !2723
  store i8* %21, i8** %fHDL19, align 8, !dbg !2724
  %23 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !2725
  %flags = getelementptr inbounds %struct.CCGFace, %struct.CCGFace* %23, i32 0, i32 3, !dbg !2726
  store i16 0, i16* %flags, align 2, !dbg !2727
  store i32 0, i32* %i, align 4, !dbg !2728
  br label %for.cond, !dbg !2730

for.cond:                                         ; preds = %for.inc, %entry
  %24 = load i32, i32* %i, align 4, !dbg !2731
  %25 = load i32, i32* %numVerts.addr, align 4, !dbg !2733
  %cmp = icmp slt i32 %24, %25, !dbg !2734
  br i1 %cmp, label %for.body, label %for.end, !dbg !2735

for.body:                                         ; preds = %for.cond
  %26 = load %struct.CCGVert**, %struct.CCGVert*** %verts.addr, align 8, !dbg !2736
  %27 = load i32, i32* %i, align 4, !dbg !2738
  %idxprom = sext i32 %27 to i64, !dbg !2736
  %arrayidx = getelementptr inbounds %struct.CCGVert*, %struct.CCGVert** %26, i64 %idxprom, !dbg !2736
  %28 = load %struct.CCGVert*, %struct.CCGVert** %arrayidx, align 8, !dbg !2736
  %29 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !2739
  %call21 = call %struct.CCGVert** @FACE_getVerts(%struct.CCGFace* %29), !dbg !2740
  %30 = load i32, i32* %i, align 4, !dbg !2741
  %idxprom22 = sext i32 %30 to i64, !dbg !2740
  %arrayidx23 = getelementptr inbounds %struct.CCGVert*, %struct.CCGVert** %call21, i64 %idxprom22, !dbg !2740
  store %struct.CCGVert* %28, %struct.CCGVert** %arrayidx23, align 8, !dbg !2742
  %31 = load %struct.CCGEdge**, %struct.CCGEdge*** %edges.addr, align 8, !dbg !2743
  %32 = load i32, i32* %i, align 4, !dbg !2744
  %idxprom24 = sext i32 %32 to i64, !dbg !2743
  %arrayidx25 = getelementptr inbounds %struct.CCGEdge*, %struct.CCGEdge** %31, i64 %idxprom24, !dbg !2743
  %33 = load %struct.CCGEdge*, %struct.CCGEdge** %arrayidx25, align 8, !dbg !2743
  %34 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !2745
  %call26 = call %struct.CCGEdge** @FACE_getEdges(%struct.CCGFace* %34), !dbg !2746
  %35 = load i32, i32* %i, align 4, !dbg !2747
  %idxprom27 = sext i32 %35 to i64, !dbg !2746
  %arrayidx28 = getelementptr inbounds %struct.CCGEdge*, %struct.CCGEdge** %call26, i64 %idxprom27, !dbg !2746
  store %struct.CCGEdge* %33, %struct.CCGEdge** %arrayidx28, align 8, !dbg !2748
  %36 = load %struct.CCGVert**, %struct.CCGVert*** %verts.addr, align 8, !dbg !2749
  %37 = load i32, i32* %i, align 4, !dbg !2750
  %idxprom29 = sext i32 %37 to i64, !dbg !2749
  %arrayidx30 = getelementptr inbounds %struct.CCGVert*, %struct.CCGVert** %36, i64 %idxprom29, !dbg !2749
  %38 = load %struct.CCGVert*, %struct.CCGVert** %arrayidx30, align 8, !dbg !2749
  %39 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !2751
  %40 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !2752
  call void @_vert_addFace(%struct.CCGVert* %38, %struct.CCGFace* %39, %struct.CCGSubSurf* %40), !dbg !2753
  %41 = load %struct.CCGEdge**, %struct.CCGEdge*** %edges.addr, align 8, !dbg !2754
  %42 = load i32, i32* %i, align 4, !dbg !2755
  %idxprom31 = sext i32 %42 to i64, !dbg !2754
  %arrayidx32 = getelementptr inbounds %struct.CCGEdge*, %struct.CCGEdge** %41, i64 %idxprom31, !dbg !2754
  %43 = load %struct.CCGEdge*, %struct.CCGEdge** %arrayidx32, align 8, !dbg !2754
  %44 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !2756
  %45 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !2757
  call void @_edge_addFace(%struct.CCGEdge* %43, %struct.CCGFace* %44, %struct.CCGSubSurf* %45), !dbg !2758
  br label %for.inc, !dbg !2759

for.inc:                                          ; preds = %for.body
  %46 = load i32, i32* %i, align 4, !dbg !2760
  %inc = add nsw i32 %46, 1, !dbg !2760
  store i32 %inc, i32* %i, align 4, !dbg !2760
  br label %for.cond, !dbg !2761, !llvm.loop !2762

for.end:                                          ; preds = %for.cond
  %47 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !2764
  %48 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !2765
  %call33 = call i8* @ccgSubSurf_getFaceUserData(%struct.CCGSubSurf* %47, %struct.CCGFace* %48), !dbg !2766
  store i8* %call33, i8** %userData, align 8, !dbg !2767
  %49 = load i8*, i8** %userData, align 8, !dbg !2768
  %50 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !2769
  %meshIFC34 = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %50, i32 0, i32 3, !dbg !2770
  %faceUserSize35 = getelementptr inbounds %struct.CCGMeshIFC, %struct.CCGMeshIFC* %meshIFC34, i32 0, i32 2, !dbg !2771
  %51 = load i32, i32* %faceUserSize35, align 8, !dbg !2771
  %conv36 = sext i32 %51 to i64, !dbg !2769
  call void @llvm.memset.p0i8.i64(i8* align 1 %49, i8 0, i64 %conv36, i1 false), !dbg !2772
  %52 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !2773
  %useAgeCounts = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %52, i32 0, i32 18, !dbg !2775
  %53 = load i32, i32* %useAgeCounts, align 4, !dbg !2775
  %tobool = icmp ne i32 %53, 0, !dbg !2773
  br i1 %tobool, label %if.then, label %if.end, !dbg !2776

if.then:                                          ; preds = %for.end
  %54 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !2777
  %currentAge = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %54, i32 0, i32 17, !dbg !2778
  %55 = load i32, i32* %currentAge, align 8, !dbg !2778
  %56 = load i8*, i8** %userData, align 8, !dbg !2779
  %57 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !2780
  %faceUserAgeOffset = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %57, i32 0, i32 21, !dbg !2781
  %58 = load i32, i32* %faceUserAgeOffset, align 8, !dbg !2781
  %idxprom37 = sext i32 %58 to i64, !dbg !2779
  %arrayidx38 = getelementptr inbounds i8, i8* %56, i64 %idxprom37, !dbg !2779
  %59 = bitcast i8* %arrayidx38 to i32*, !dbg !2782
  store i32 %55, i32* %59, align 4, !dbg !2783
  br label %if.end, !dbg !2782

if.end:                                           ; preds = %if.then, %for.end
  %60 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !2784
  ret %struct.CCGFace* %60, !dbg !2785
}

; Function Attrs: noinline nounwind uwtable
define dso_local i8* @ccgSubSurf_getEdgeUserData(%struct.CCGSubSurf* %ss, %struct.CCGEdge* %e) #0 !dbg !2786 {
entry:
  %ss.addr = alloca %struct.CCGSubSurf*, align 8
  %e.addr = alloca %struct.CCGEdge*, align 8
  store %struct.CCGSubSurf* %ss, %struct.CCGSubSurf** %ss.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGSubSurf** %ss.addr, metadata !2789, metadata !DIExpression()), !dbg !2790
  store %struct.CCGEdge* %e, %struct.CCGEdge** %e.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGEdge** %e.addr, metadata !2791, metadata !DIExpression()), !dbg !2792
  %0 = load %struct.CCGEdge*, %struct.CCGEdge** %e.addr, align 8, !dbg !2793
  %call = call i8* @EDGE_getLevelData(%struct.CCGEdge* %0), !dbg !2794
  %1 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !2795
  %meshIFC = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %1, i32 0, i32 3, !dbg !2796
  %vertDataSize = getelementptr inbounds %struct.CCGMeshIFC, %struct.CCGMeshIFC* %meshIFC, i32 0, i32 4, !dbg !2797
  %2 = load i32, i32* %vertDataSize, align 8, !dbg !2797
  %3 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !2798
  %subdivLevels = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %3, i32 0, i32 6, !dbg !2799
  %4 = load i32, i32* %subdivLevels, align 8, !dbg !2799
  %add = add nsw i32 %4, 1, !dbg !2800
  %call1 = call i32 @ccg_edgebase(i32 %add), !dbg !2801
  %mul = mul nsw i32 %2, %call1, !dbg !2802
  %idx.ext = sext i32 %mul to i64, !dbg !2803
  %add.ptr = getelementptr inbounds i8, i8* %call, i64 %idx.ext, !dbg !2803
  ret i8* %add.ptr, !dbg !2804
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @ccgSubSurf_processSync(%struct.CCGSubSurf* %ss) #0 !dbg !2805 {
entry:
  %retval = alloca i32, align 4
  %ss.addr = alloca %struct.CCGSubSurf*, align 8
  store %struct.CCGSubSurf* %ss, %struct.CCGSubSurf** %ss.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGSubSurf** %ss.addr, metadata !2806, metadata !DIExpression()), !dbg !2807
  %0 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !2808
  %syncState = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %0, i32 0, i32 22, !dbg !2810
  %1 = load i32, i32* %syncState, align 4, !dbg !2810
  %cmp = icmp eq i32 %1, 4, !dbg !2811
  br i1 %cmp, label %if.then, label %if.else, !dbg !2812

if.then:                                          ; preds = %entry
  %2 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !2813
  %syncState1 = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %2, i32 0, i32 22, !dbg !2815
  store i32 0, i32* %syncState1, align 4, !dbg !2816
  %3 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !2817
  call void @ccgSubSurf__sync(%struct.CCGSubSurf* %3), !dbg !2818
  br label %if.end11, !dbg !2819

if.else:                                          ; preds = %entry
  %4 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !2820
  %syncState2 = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %4, i32 0, i32 22, !dbg !2822
  %5 = load i32, i32* %syncState2, align 4, !dbg !2822
  %tobool = icmp ne i32 %5, 0, !dbg !2820
  br i1 %tobool, label %if.then3, label %if.else10, !dbg !2823

if.then3:                                         ; preds = %if.else
  %6 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !2824
  %oldFMap = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %6, i32 0, i32 25, !dbg !2826
  %7 = load %struct._EHash*, %struct._EHash** %oldFMap, align 8, !dbg !2826
  %8 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !2827
  %9 = bitcast %struct.CCGSubSurf* %8 to i8*, !dbg !2827
  call void @_ehash_free(%struct._EHash* %7, void (%struct._EHEntry*, i8*)* bitcast (void (%struct.CCGFace*, %struct.CCGSubSurf*)* @_face_unlinkMarkAndFree to void (%struct._EHEntry*, i8*)*), i8* %9), !dbg !2828
  %10 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !2829
  %oldEMap = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %10, i32 0, i32 24, !dbg !2830
  %11 = load %struct._EHash*, %struct._EHash** %oldEMap, align 8, !dbg !2830
  %12 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !2831
  %13 = bitcast %struct.CCGSubSurf* %12 to i8*, !dbg !2831
  call void @_ehash_free(%struct._EHash* %11, void (%struct._EHEntry*, i8*)* bitcast (void (%struct.CCGEdge*, %struct.CCGSubSurf*)* @_edge_unlinkMarkAndFree to void (%struct._EHEntry*, i8*)*), i8* %13), !dbg !2832
  %14 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !2833
  %oldVMap = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %14, i32 0, i32 23, !dbg !2834
  %15 = load %struct._EHash*, %struct._EHash** %oldVMap, align 8, !dbg !2834
  %16 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !2835
  %17 = bitcast %struct.CCGSubSurf* %16 to i8*, !dbg !2835
  call void @_ehash_free(%struct._EHash* %15, void (%struct._EHEntry*, i8*)* bitcast (void (%struct.CCGVert*, %struct.CCGSubSurf*)* @_vert_free to void (%struct._EHEntry*, i8*)*), i8* %17), !dbg !2836
  %18 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !2837
  %19 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !2838
  %tempEdges = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %19, i32 0, i32 28, !dbg !2839
  %20 = load %struct.CCGEdge**, %struct.CCGEdge*** %tempEdges, align 8, !dbg !2839
  %21 = bitcast %struct.CCGEdge** %20 to i8*, !dbg !2838
  call void %18(i8* %21), !dbg !2837
  %22 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !2840
  %23 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !2841
  %tempVerts = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %23, i32 0, i32 27, !dbg !2842
  %24 = load %struct.CCGVert**, %struct.CCGVert*** %tempVerts, align 8, !dbg !2842
  %25 = bitcast %struct.CCGVert** %24 to i8*, !dbg !2841
  call void %22(i8* %25), !dbg !2840
  %26 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !2843
  %lenTempArrays = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %26, i32 0, i32 26, !dbg !2844
  store i32 0, i32* %lenTempArrays, align 8, !dbg !2845
  %27 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !2846
  %oldVMap4 = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %27, i32 0, i32 23, !dbg !2847
  store %struct._EHash* null, %struct._EHash** %oldVMap4, align 8, !dbg !2848
  %28 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !2849
  %oldEMap5 = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %28, i32 0, i32 24, !dbg !2850
  store %struct._EHash* null, %struct._EHash** %oldEMap5, align 8, !dbg !2851
  %29 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !2852
  %oldFMap6 = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %29, i32 0, i32 25, !dbg !2853
  store %struct._EHash* null, %struct._EHash** %oldFMap6, align 8, !dbg !2854
  %30 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !2855
  %tempVerts7 = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %30, i32 0, i32 27, !dbg !2856
  store %struct.CCGVert** null, %struct.CCGVert*** %tempVerts7, align 8, !dbg !2857
  %31 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !2858
  %tempEdges8 = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %31, i32 0, i32 28, !dbg !2859
  store %struct.CCGEdge** null, %struct.CCGEdge*** %tempEdges8, align 8, !dbg !2860
  %32 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !2861
  %syncState9 = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %32, i32 0, i32 22, !dbg !2862
  store i32 0, i32* %syncState9, align 4, !dbg !2863
  %33 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !2864
  call void @ccgSubSurf__sync(%struct.CCGSubSurf* %33), !dbg !2865
  br label %if.end, !dbg !2866

if.else10:                                        ; preds = %if.else
  store i32 1, i32* %retval, align 4, !dbg !2867
  br label %return, !dbg !2867

if.end:                                           ; preds = %if.then3
  br label %if.end11

if.end11:                                         ; preds = %if.end, %if.then
  store i32 0, i32* %retval, align 4, !dbg !2869
  br label %return, !dbg !2869

return:                                           ; preds = %if.end11, %if.else10
  %34 = load i32, i32* %retval, align 4, !dbg !2870
  ret i32 %34, !dbg !2870
}

; Function Attrs: noinline nounwind uwtable
define internal void @ccgSubSurf__sync(%struct.CCGSubSurf* %ss) #0 !dbg !2871 {
entry:
  %ss.addr = alloca %struct.CCGSubSurf*, align 8
  %effectedV = alloca %struct.CCGVert**, align 8
  %effectedE = alloca %struct.CCGEdge**, align 8
  %effectedF = alloca %struct.CCGFace**, align 8
  %numEffectedV = alloca i32, align 4
  %numEffectedE = alloca i32, align 4
  %numEffectedF = alloca i32, align 4
  %subdivLevels = alloca i32, align 4
  %vertDataSize = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %ptrIdx = alloca i32, align 4
  %S = alloca i32, align 4
  %curLvl = alloca i32, align 4
  %nextLvl = alloca i32, align 4
  %q = alloca i8*, align 8
  %r = alloca i8*, align 8
  %v = alloca %struct.CCGVert*, align 8
  %e = alloca %struct.CCGEdge*, align 8
  %f = alloca %struct.CCGFace*, align 8
  %f74 = alloca %struct.CCGFace*, align 8
  %co = alloca i8*, align 8
  %e101 = alloca %struct.CCGEdge*, align 8
  %co104 = alloca i8*, align 8
  %sharpness = alloca float, align 4
  %numFaces114 = alloca i32, align 4
  %f125 = alloca %struct.CCGFace*, align 8
  %v149 = alloca %struct.CCGVert*, align 8
  %co152 = alloca i8*, align 8
  %nCo = alloca i8*, align 8
  %sharpCount = alloca i32, align 4
  %allSharp = alloca i32, align 4
  %avgSharpness = alloca float, align 4
  %seam = alloca i32, align 4
  %seamEdges = alloca i32, align 4
  %e162 = alloca %struct.CCGEdge*, align 8
  %sharpness166 = alloca float, align 4
  %numBoundary = alloca i32, align 4
  %e218 = alloca %struct.CCGEdge*, align 8
  %numEdges235 = alloca i32, align 4
  %numFaces236 = alloca i32, align 4
  %f243 = alloca %struct.CCGFace*, align 8
  %e260 = alloca %struct.CCGEdge*, align 8
  %e291 = alloca %struct.CCGEdge*, align 8
  %sharpness295 = alloca float, align 4
  %oV = alloca %struct.CCGVert*, align 8
  %oV309 = alloca %struct.CCGVert*, align 8
  %v335 = alloca %struct.CCGVert*, align 8
  %userData = alloca i8*, align 8
  %e348 = alloca %struct.CCGEdge*, align 8
  %userData351 = alloca i8*, align 8
  %f363 = alloca %struct.CCGFace*, align 8
  %userData366 = alloca i8*, align 8
  %e379 = alloca %struct.CCGEdge*, align 8
  %f395 = alloca %struct.CCGFace*, align 8
  %e404 = alloca %struct.CCGEdge*, align 8
  %prevE = alloca %struct.CCGEdge*, align 8
  %v461 = alloca %struct.CCGVert*, align 8
  %e472 = alloca %struct.CCGEdge*, align 8
  store %struct.CCGSubSurf* %ss, %struct.CCGSubSurf** %ss.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGSubSurf** %ss.addr, metadata !2872, metadata !DIExpression()), !dbg !2873
  call void @llvm.dbg.declare(metadata %struct.CCGVert*** %effectedV, metadata !2874, metadata !DIExpression()), !dbg !2875
  call void @llvm.dbg.declare(metadata %struct.CCGEdge*** %effectedE, metadata !2876, metadata !DIExpression()), !dbg !2877
  call void @llvm.dbg.declare(metadata %struct.CCGFace*** %effectedF, metadata !2878, metadata !DIExpression()), !dbg !2879
  call void @llvm.dbg.declare(metadata i32* %numEffectedV, metadata !2880, metadata !DIExpression()), !dbg !2881
  call void @llvm.dbg.declare(metadata i32* %numEffectedE, metadata !2882, metadata !DIExpression()), !dbg !2883
  call void @llvm.dbg.declare(metadata i32* %numEffectedF, metadata !2884, metadata !DIExpression()), !dbg !2885
  call void @llvm.dbg.declare(metadata i32* %subdivLevels, metadata !2886, metadata !DIExpression()), !dbg !2887
  %0 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !2888
  %subdivLevels1 = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %0, i32 0, i32 6, !dbg !2889
  %1 = load i32, i32* %subdivLevels1, align 8, !dbg !2889
  store i32 %1, i32* %subdivLevels, align 4, !dbg !2887
  call void @llvm.dbg.declare(metadata i32* %vertDataSize, metadata !2890, metadata !DIExpression()), !dbg !2891
  %2 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !2892
  %meshIFC = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %2, i32 0, i32 3, !dbg !2893
  %vertDataSize2 = getelementptr inbounds %struct.CCGMeshIFC, %struct.CCGMeshIFC* %meshIFC, i32 0, i32 4, !dbg !2894
  %3 = load i32, i32* %vertDataSize2, align 8, !dbg !2894
  store i32 %3, i32* %vertDataSize, align 4, !dbg !2891
  call void @llvm.dbg.declare(metadata i32* %i, metadata !2895, metadata !DIExpression()), !dbg !2896
  call void @llvm.dbg.declare(metadata i32* %j, metadata !2897, metadata !DIExpression()), !dbg !2898
  call void @llvm.dbg.declare(metadata i32* %ptrIdx, metadata !2899, metadata !DIExpression()), !dbg !2900
  call void @llvm.dbg.declare(metadata i32* %S, metadata !2901, metadata !DIExpression()), !dbg !2902
  call void @llvm.dbg.declare(metadata i32* %curLvl, metadata !2903, metadata !DIExpression()), !dbg !2904
  call void @llvm.dbg.declare(metadata i32* %nextLvl, metadata !2905, metadata !DIExpression()), !dbg !2906
  call void @llvm.dbg.declare(metadata i8** %q, metadata !2907, metadata !DIExpression()), !dbg !2908
  %4 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !2909
  %q3 = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %4, i32 0, i32 11, !dbg !2910
  %5 = load i8*, i8** %q3, align 8, !dbg !2910
  store i8* %5, i8** %q, align 8, !dbg !2908
  call void @llvm.dbg.declare(metadata i8** %r, metadata !2911, metadata !DIExpression()), !dbg !2912
  %6 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !2913
  %r4 = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %6, i32 0, i32 12, !dbg !2914
  %7 = load i8*, i8** %r4, align 8, !dbg !2914
  store i8* %7, i8** %r, align 8, !dbg !2912
  %8 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !2915
  %9 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !2916
  %vMap = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %9, i32 0, i32 0, !dbg !2917
  %10 = load %struct._EHash*, %struct._EHash** %vMap, align 8, !dbg !2917
  %numEntries = getelementptr inbounds %struct._EHash, %struct._EHash* %10, i32 0, i32 1, !dbg !2918
  %11 = load i32, i32* %numEntries, align 8, !dbg !2918
  %conv = sext i32 %11 to i64, !dbg !2916
  %mul = mul i64 8, %conv, !dbg !2919
  %call = call i8* %8(i64 %mul, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.2, i64 0, i64 0)), !dbg !2915
  %12 = bitcast i8* %call to %struct.CCGVert**, !dbg !2915
  store %struct.CCGVert** %12, %struct.CCGVert*** %effectedV, align 8, !dbg !2920
  %13 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !2921
  %14 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !2922
  %eMap = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %14, i32 0, i32 1, !dbg !2923
  %15 = load %struct._EHash*, %struct._EHash** %eMap, align 8, !dbg !2923
  %numEntries5 = getelementptr inbounds %struct._EHash, %struct._EHash* %15, i32 0, i32 1, !dbg !2924
  %16 = load i32, i32* %numEntries5, align 8, !dbg !2924
  %conv6 = sext i32 %16 to i64, !dbg !2922
  %mul7 = mul i64 8, %conv6, !dbg !2925
  %call8 = call i8* %13(i64 %mul7, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.3, i64 0, i64 0)), !dbg !2921
  %17 = bitcast i8* %call8 to %struct.CCGEdge**, !dbg !2921
  store %struct.CCGEdge** %17, %struct.CCGEdge*** %effectedE, align 8, !dbg !2926
  %18 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !2927
  %19 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !2928
  %fMap = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %19, i32 0, i32 2, !dbg !2929
  %20 = load %struct._EHash*, %struct._EHash** %fMap, align 8, !dbg !2929
  %numEntries9 = getelementptr inbounds %struct._EHash, %struct._EHash* %20, i32 0, i32 1, !dbg !2930
  %21 = load i32, i32* %numEntries9, align 8, !dbg !2930
  %conv10 = sext i32 %21 to i64, !dbg !2928
  %mul11 = mul i64 8, %conv10, !dbg !2931
  %call12 = call i8* %18(i64 %mul11, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4, i64 0, i64 0)), !dbg !2927
  %22 = bitcast i8* %call12 to %struct.CCGFace**, !dbg !2927
  store %struct.CCGFace** %22, %struct.CCGFace*** %effectedF, align 8, !dbg !2932
  store i32 0, i32* %numEffectedF, align 4, !dbg !2933
  store i32 0, i32* %numEffectedE, align 4, !dbg !2934
  store i32 0, i32* %numEffectedV, align 4, !dbg !2935
  store i32 0, i32* %i, align 4, !dbg !2936
  br label %for.cond, !dbg !2938

for.cond:                                         ; preds = %for.inc67, %entry
  %23 = load i32, i32* %i, align 4, !dbg !2939
  %24 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !2941
  %vMap13 = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %24, i32 0, i32 0, !dbg !2942
  %25 = load %struct._EHash*, %struct._EHash** %vMap13, align 8, !dbg !2942
  %curSize = getelementptr inbounds %struct._EHash, %struct._EHash* %25, i32 0, i32 2, !dbg !2943
  %26 = load i32, i32* %curSize, align 4, !dbg !2943
  %cmp = icmp slt i32 %23, %26, !dbg !2944
  br i1 %cmp, label %for.body, label %for.end69, !dbg !2945

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.CCGVert** %v, metadata !2946, metadata !DIExpression()), !dbg !2948
  %27 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !2949
  %vMap15 = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %27, i32 0, i32 0, !dbg !2950
  %28 = load %struct._EHash*, %struct._EHash** %vMap15, align 8, !dbg !2950
  %buckets = getelementptr inbounds %struct._EHash, %struct._EHash* %28, i32 0, i32 0, !dbg !2951
  %29 = load %struct._EHEntry**, %struct._EHEntry*** %buckets, align 8, !dbg !2951
  %30 = load i32, i32* %i, align 4, !dbg !2952
  %idxprom = sext i32 %30 to i64, !dbg !2949
  %arrayidx = getelementptr inbounds %struct._EHEntry*, %struct._EHEntry** %29, i64 %idxprom, !dbg !2949
  %31 = load %struct._EHEntry*, %struct._EHEntry** %arrayidx, align 8, !dbg !2949
  %32 = bitcast %struct._EHEntry* %31 to %struct.CCGVert*, !dbg !2953
  store %struct.CCGVert* %32, %struct.CCGVert** %v, align 8, !dbg !2948
  br label %for.cond16, !dbg !2954

for.cond16:                                       ; preds = %for.inc65, %for.body
  %33 = load %struct.CCGVert*, %struct.CCGVert** %v, align 8, !dbg !2955
  %tobool = icmp ne %struct.CCGVert* %33, null, !dbg !2958
  br i1 %tobool, label %for.body17, label %for.end66, !dbg !2958

for.body17:                                       ; preds = %for.cond16
  %34 = load %struct.CCGVert*, %struct.CCGVert** %v, align 8, !dbg !2959
  %flags = getelementptr inbounds %struct.CCGVert, %struct.CCGVert* %34, i32 0, i32 4, !dbg !2962
  %35 = load i16, i16* %flags, align 4, !dbg !2962
  %conv18 = sext i16 %35 to i32, !dbg !2959
  %and = and i32 %conv18, 1, !dbg !2963
  %tobool19 = icmp ne i32 %and, 0, !dbg !2963
  br i1 %tobool19, label %if.then, label %if.end64, !dbg !2964

if.then:                                          ; preds = %for.body17
  %36 = load %struct.CCGVert*, %struct.CCGVert** %v, align 8, !dbg !2965
  %37 = load %struct.CCGVert**, %struct.CCGVert*** %effectedV, align 8, !dbg !2967
  %38 = load i32, i32* %numEffectedV, align 4, !dbg !2968
  %inc = add nsw i32 %38, 1, !dbg !2968
  store i32 %inc, i32* %numEffectedV, align 4, !dbg !2968
  %idxprom20 = sext i32 %38 to i64, !dbg !2967
  %arrayidx21 = getelementptr inbounds %struct.CCGVert*, %struct.CCGVert** %37, i64 %idxprom20, !dbg !2967
  store %struct.CCGVert* %36, %struct.CCGVert** %arrayidx21, align 8, !dbg !2969
  store i32 0, i32* %j, align 4, !dbg !2970
  br label %for.cond22, !dbg !2972

for.cond22:                                       ; preds = %for.inc, %if.then
  %39 = load i32, i32* %j, align 4, !dbg !2973
  %40 = load %struct.CCGVert*, %struct.CCGVert** %v, align 8, !dbg !2975
  %numEdges = getelementptr inbounds %struct.CCGVert, %struct.CCGVert* %40, i32 0, i32 2, !dbg !2976
  %41 = load i16, i16* %numEdges, align 8, !dbg !2976
  %conv23 = sext i16 %41 to i32, !dbg !2975
  %cmp24 = icmp slt i32 %39, %conv23, !dbg !2977
  br i1 %cmp24, label %for.body26, label %for.end, !dbg !2978

for.body26:                                       ; preds = %for.cond22
  call void @llvm.dbg.declare(metadata %struct.CCGEdge** %e, metadata !2979, metadata !DIExpression()), !dbg !2981
  %42 = load %struct.CCGVert*, %struct.CCGVert** %v, align 8, !dbg !2982
  %edges = getelementptr inbounds %struct.CCGVert, %struct.CCGVert* %42, i32 0, i32 6, !dbg !2983
  %43 = load %struct.CCGEdge**, %struct.CCGEdge*** %edges, align 8, !dbg !2983
  %44 = load i32, i32* %j, align 4, !dbg !2984
  %idxprom27 = sext i32 %44 to i64, !dbg !2982
  %arrayidx28 = getelementptr inbounds %struct.CCGEdge*, %struct.CCGEdge** %43, i64 %idxprom27, !dbg !2982
  %45 = load %struct.CCGEdge*, %struct.CCGEdge** %arrayidx28, align 8, !dbg !2982
  store %struct.CCGEdge* %45, %struct.CCGEdge** %e, align 8, !dbg !2981
  %46 = load %struct.CCGEdge*, %struct.CCGEdge** %e, align 8, !dbg !2985
  %flags29 = getelementptr inbounds %struct.CCGEdge, %struct.CCGEdge* %46, i32 0, i32 3, !dbg !2987
  %47 = load i16, i16* %flags29, align 2, !dbg !2987
  %conv30 = sext i16 %47 to i32, !dbg !2985
  %and31 = and i32 %conv30, 1, !dbg !2988
  %tobool32 = icmp ne i32 %and31, 0, !dbg !2988
  br i1 %tobool32, label %if.end, label %if.then33, !dbg !2989

if.then33:                                        ; preds = %for.body26
  %48 = load %struct.CCGEdge*, %struct.CCGEdge** %e, align 8, !dbg !2990
  %49 = load %struct.CCGEdge**, %struct.CCGEdge*** %effectedE, align 8, !dbg !2992
  %50 = load i32, i32* %numEffectedE, align 4, !dbg !2993
  %inc34 = add nsw i32 %50, 1, !dbg !2993
  store i32 %inc34, i32* %numEffectedE, align 4, !dbg !2993
  %idxprom35 = sext i32 %50 to i64, !dbg !2992
  %arrayidx36 = getelementptr inbounds %struct.CCGEdge*, %struct.CCGEdge** %49, i64 %idxprom35, !dbg !2992
  store %struct.CCGEdge* %48, %struct.CCGEdge** %arrayidx36, align 8, !dbg !2994
  %51 = load %struct.CCGEdge*, %struct.CCGEdge** %e, align 8, !dbg !2995
  %flags37 = getelementptr inbounds %struct.CCGEdge, %struct.CCGEdge* %51, i32 0, i32 3, !dbg !2996
  %52 = load i16, i16* %flags37, align 2, !dbg !2997
  %conv38 = sext i16 %52 to i32, !dbg !2997
  %or = or i32 %conv38, 1, !dbg !2997
  %conv39 = trunc i32 %or to i16, !dbg !2997
  store i16 %conv39, i16* %flags37, align 2, !dbg !2997
  br label %if.end, !dbg !2998

if.end:                                           ; preds = %if.then33, %for.body26
  br label %for.inc, !dbg !2999

for.inc:                                          ; preds = %if.end
  %53 = load i32, i32* %j, align 4, !dbg !3000
  %inc40 = add nsw i32 %53, 1, !dbg !3000
  store i32 %inc40, i32* %j, align 4, !dbg !3000
  br label %for.cond22, !dbg !3001, !llvm.loop !3002

for.end:                                          ; preds = %for.cond22
  store i32 0, i32* %j, align 4, !dbg !3004
  br label %for.cond41, !dbg !3006

for.cond41:                                       ; preds = %for.inc61, %for.end
  %54 = load i32, i32* %j, align 4, !dbg !3007
  %55 = load %struct.CCGVert*, %struct.CCGVert** %v, align 8, !dbg !3009
  %numFaces = getelementptr inbounds %struct.CCGVert, %struct.CCGVert* %55, i32 0, i32 3, !dbg !3010
  %56 = load i16, i16* %numFaces, align 2, !dbg !3010
  %conv42 = sext i16 %56 to i32, !dbg !3009
  %cmp43 = icmp slt i32 %54, %conv42, !dbg !3011
  br i1 %cmp43, label %for.body45, label %for.end63, !dbg !3012

for.body45:                                       ; preds = %for.cond41
  call void @llvm.dbg.declare(metadata %struct.CCGFace** %f, metadata !3013, metadata !DIExpression()), !dbg !3015
  %57 = load %struct.CCGVert*, %struct.CCGVert** %v, align 8, !dbg !3016
  %faces = getelementptr inbounds %struct.CCGVert, %struct.CCGVert* %57, i32 0, i32 7, !dbg !3017
  %58 = load %struct.CCGFace**, %struct.CCGFace*** %faces, align 8, !dbg !3017
  %59 = load i32, i32* %j, align 4, !dbg !3018
  %idxprom46 = sext i32 %59 to i64, !dbg !3016
  %arrayidx47 = getelementptr inbounds %struct.CCGFace*, %struct.CCGFace** %58, i64 %idxprom46, !dbg !3016
  %60 = load %struct.CCGFace*, %struct.CCGFace** %arrayidx47, align 8, !dbg !3016
  store %struct.CCGFace* %60, %struct.CCGFace** %f, align 8, !dbg !3015
  %61 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !3019
  %flags48 = getelementptr inbounds %struct.CCGFace, %struct.CCGFace* %61, i32 0, i32 3, !dbg !3021
  %62 = load i16, i16* %flags48, align 2, !dbg !3021
  %conv49 = sext i16 %62 to i32, !dbg !3019
  %and50 = and i32 %conv49, 1, !dbg !3022
  %tobool51 = icmp ne i32 %and50, 0, !dbg !3022
  br i1 %tobool51, label %if.end60, label %if.then52, !dbg !3023

if.then52:                                        ; preds = %for.body45
  %63 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !3024
  %64 = load %struct.CCGFace**, %struct.CCGFace*** %effectedF, align 8, !dbg !3026
  %65 = load i32, i32* %numEffectedF, align 4, !dbg !3027
  %inc53 = add nsw i32 %65, 1, !dbg !3027
  store i32 %inc53, i32* %numEffectedF, align 4, !dbg !3027
  %idxprom54 = sext i32 %65 to i64, !dbg !3026
  %arrayidx55 = getelementptr inbounds %struct.CCGFace*, %struct.CCGFace** %64, i64 %idxprom54, !dbg !3026
  store %struct.CCGFace* %63, %struct.CCGFace** %arrayidx55, align 8, !dbg !3028
  %66 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !3029
  %flags56 = getelementptr inbounds %struct.CCGFace, %struct.CCGFace* %66, i32 0, i32 3, !dbg !3030
  %67 = load i16, i16* %flags56, align 2, !dbg !3031
  %conv57 = sext i16 %67 to i32, !dbg !3031
  %or58 = or i32 %conv57, 1, !dbg !3031
  %conv59 = trunc i32 %or58 to i16, !dbg !3031
  store i16 %conv59, i16* %flags56, align 2, !dbg !3031
  br label %if.end60, !dbg !3032

if.end60:                                         ; preds = %if.then52, %for.body45
  br label %for.inc61, !dbg !3033

for.inc61:                                        ; preds = %if.end60
  %68 = load i32, i32* %j, align 4, !dbg !3034
  %inc62 = add nsw i32 %68, 1, !dbg !3034
  store i32 %inc62, i32* %j, align 4, !dbg !3034
  br label %for.cond41, !dbg !3035, !llvm.loop !3036

for.end63:                                        ; preds = %for.cond41
  br label %if.end64, !dbg !3038

if.end64:                                         ; preds = %for.end63, %for.body17
  br label %for.inc65, !dbg !3039

for.inc65:                                        ; preds = %if.end64
  %69 = load %struct.CCGVert*, %struct.CCGVert** %v, align 8, !dbg !3040
  %next = getelementptr inbounds %struct.CCGVert, %struct.CCGVert* %69, i32 0, i32 0, !dbg !3041
  %70 = load %struct.CCGVert*, %struct.CCGVert** %next, align 8, !dbg !3041
  store %struct.CCGVert* %70, %struct.CCGVert** %v, align 8, !dbg !3042
  br label %for.cond16, !dbg !3043, !llvm.loop !3044

for.end66:                                        ; preds = %for.cond16
  br label %for.inc67, !dbg !3046

for.inc67:                                        ; preds = %for.end66
  %71 = load i32, i32* %i, align 4, !dbg !3047
  %inc68 = add nsw i32 %71, 1, !dbg !3047
  store i32 %inc68, i32* %i, align 4, !dbg !3047
  br label %for.cond, !dbg !3048, !llvm.loop !3049

for.end69:                                        ; preds = %for.cond
  store i32 0, i32* %curLvl, align 4, !dbg !3051
  %72 = load i32, i32* %curLvl, align 4, !dbg !3052
  %add = add nsw i32 %72, 1, !dbg !3053
  store i32 %add, i32* %nextLvl, align 4, !dbg !3054
  store i32 0, i32* %ptrIdx, align 4, !dbg !3055
  br label %for.cond70, !dbg !3057

for.cond70:                                       ; preds = %for.inc94, %for.end69
  %73 = load i32, i32* %ptrIdx, align 4, !dbg !3058
  %74 = load i32, i32* %numEffectedF, align 4, !dbg !3060
  %cmp71 = icmp slt i32 %73, %74, !dbg !3061
  br i1 %cmp71, label %for.body73, label %for.end96, !dbg !3062

for.body73:                                       ; preds = %for.cond70
  call void @llvm.dbg.declare(metadata %struct.CCGFace** %f74, metadata !3063, metadata !DIExpression()), !dbg !3065
  %75 = load %struct.CCGFace**, %struct.CCGFace*** %effectedF, align 8, !dbg !3066
  %76 = load i32, i32* %ptrIdx, align 4, !dbg !3067
  %idxprom75 = sext i32 %76 to i64, !dbg !3066
  %arrayidx76 = getelementptr inbounds %struct.CCGFace*, %struct.CCGFace** %75, i64 %idxprom75, !dbg !3066
  %77 = load %struct.CCGFace*, %struct.CCGFace** %arrayidx76, align 8, !dbg !3066
  store %struct.CCGFace* %77, %struct.CCGFace** %f74, align 8, !dbg !3065
  call void @llvm.dbg.declare(metadata i8** %co, metadata !3068, metadata !DIExpression()), !dbg !3069
  %78 = load %struct.CCGFace*, %struct.CCGFace** %f74, align 8, !dbg !3070
  %call77 = call i8* @FACE_getCenterData(%struct.CCGFace* %78), !dbg !3071
  store i8* %call77, i8** %co, align 8, !dbg !3069
  %79 = load i8*, i8** %co, align 8, !dbg !3072
  %80 = bitcast i8* %79 to float*, !dbg !3072
  %81 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !3073
  call void @VertDataZero(float* %80, %struct.CCGSubSurf* %81), !dbg !3074
  store i32 0, i32* %i, align 4, !dbg !3075
  br label %for.cond78, !dbg !3077

for.cond78:                                       ; preds = %for.inc87, %for.body73
  %82 = load i32, i32* %i, align 4, !dbg !3078
  %83 = load %struct.CCGFace*, %struct.CCGFace** %f74, align 8, !dbg !3080
  %numVerts = getelementptr inbounds %struct.CCGFace, %struct.CCGFace* %83, i32 0, i32 2, !dbg !3081
  %84 = load i16, i16* %numVerts, align 8, !dbg !3081
  %conv79 = sext i16 %84 to i32, !dbg !3080
  %cmp80 = icmp slt i32 %82, %conv79, !dbg !3082
  br i1 %cmp80, label %for.body82, label %for.end89, !dbg !3083

for.body82:                                       ; preds = %for.cond78
  %85 = load i8*, i8** %co, align 8, !dbg !3084
  %86 = bitcast i8* %85 to float*, !dbg !3084
  %87 = load %struct.CCGFace*, %struct.CCGFace** %f74, align 8, !dbg !3086
  %call83 = call %struct.CCGVert** @FACE_getVerts(%struct.CCGFace* %87), !dbg !3086
  %88 = load i32, i32* %i, align 4, !dbg !3086
  %idxprom84 = sext i32 %88 to i64, !dbg !3086
  %arrayidx85 = getelementptr inbounds %struct.CCGVert*, %struct.CCGVert** %call83, i64 %idxprom84, !dbg !3086
  %89 = load %struct.CCGVert*, %struct.CCGVert** %arrayidx85, align 8, !dbg !3086
  %90 = load i32, i32* %curLvl, align 4, !dbg !3086
  %91 = load i32, i32* %vertDataSize, align 4, !dbg !3086
  %call86 = call i8* @_vert_getCo(%struct.CCGVert* %89, i32 %90, i32 %91), !dbg !3086
  %92 = bitcast i8* %call86 to float*, !dbg !3086
  %93 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !3087
  call void @VertDataAdd(float* %86, float* %92, %struct.CCGSubSurf* %93), !dbg !3088
  br label %for.inc87, !dbg !3089

for.inc87:                                        ; preds = %for.body82
  %94 = load i32, i32* %i, align 4, !dbg !3090
  %inc88 = add nsw i32 %94, 1, !dbg !3090
  store i32 %inc88, i32* %i, align 4, !dbg !3090
  br label %for.cond78, !dbg !3091, !llvm.loop !3092

for.end89:                                        ; preds = %for.cond78
  %95 = load i8*, i8** %co, align 8, !dbg !3094
  %96 = bitcast i8* %95 to float*, !dbg !3094
  %97 = load %struct.CCGFace*, %struct.CCGFace** %f74, align 8, !dbg !3095
  %numVerts90 = getelementptr inbounds %struct.CCGFace, %struct.CCGFace* %97, i32 0, i32 2, !dbg !3096
  %98 = load i16, i16* %numVerts90, align 8, !dbg !3096
  %conv91 = sext i16 %98 to i32, !dbg !3095
  %conv92 = sitofp i32 %conv91 to float, !dbg !3095
  %div = fdiv float 1.000000e+00, %conv92, !dbg !3097
  %99 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !3098
  call void @VertDataMulN(float* %96, float %div, %struct.CCGSubSurf* %99), !dbg !3099
  %100 = load %struct.CCGFace*, %struct.CCGFace** %f74, align 8, !dbg !3100
  %flags93 = getelementptr inbounds %struct.CCGFace, %struct.CCGFace* %100, i32 0, i32 3, !dbg !3101
  store i16 0, i16* %flags93, align 2, !dbg !3102
  br label %for.inc94, !dbg !3103

for.inc94:                                        ; preds = %for.end89
  %101 = load i32, i32* %ptrIdx, align 4, !dbg !3104
  %inc95 = add nsw i32 %101, 1, !dbg !3104
  store i32 %inc95, i32* %ptrIdx, align 4, !dbg !3104
  br label %for.cond70, !dbg !3105, !llvm.loop !3106

for.end96:                                        ; preds = %for.cond70
  store i32 0, i32* %ptrIdx, align 4, !dbg !3108
  br label %for.cond97, !dbg !3110

for.cond97:                                       ; preds = %for.inc142, %for.end96
  %102 = load i32, i32* %ptrIdx, align 4, !dbg !3111
  %103 = load i32, i32* %numEffectedE, align 4, !dbg !3113
  %cmp98 = icmp slt i32 %102, %103, !dbg !3114
  br i1 %cmp98, label %for.body100, label %for.end144, !dbg !3115

for.body100:                                      ; preds = %for.cond97
  call void @llvm.dbg.declare(metadata %struct.CCGEdge** %e101, metadata !3116, metadata !DIExpression()), !dbg !3118
  %104 = load %struct.CCGEdge**, %struct.CCGEdge*** %effectedE, align 8, !dbg !3119
  %105 = load i32, i32* %ptrIdx, align 4, !dbg !3120
  %idxprom102 = sext i32 %105 to i64, !dbg !3119
  %arrayidx103 = getelementptr inbounds %struct.CCGEdge*, %struct.CCGEdge** %104, i64 %idxprom102, !dbg !3119
  %106 = load %struct.CCGEdge*, %struct.CCGEdge** %arrayidx103, align 8, !dbg !3119
  store %struct.CCGEdge* %106, %struct.CCGEdge** %e101, align 8, !dbg !3118
  call void @llvm.dbg.declare(metadata i8** %co104, metadata !3121, metadata !DIExpression()), !dbg !3122
  %107 = load %struct.CCGEdge*, %struct.CCGEdge** %e101, align 8, !dbg !3123
  %108 = load i32, i32* %nextLvl, align 4, !dbg !3123
  %109 = load i32, i32* %vertDataSize, align 4, !dbg !3123
  %call105 = call i8* @_edge_getCo(%struct.CCGEdge* %107, i32 %108, i32 1, i32 %109), !dbg !3123
  store i8* %call105, i8** %co104, align 8, !dbg !3122
  call void @llvm.dbg.declare(metadata float* %sharpness, metadata !3124, metadata !DIExpression()), !dbg !3125
  %110 = load %struct.CCGEdge*, %struct.CCGEdge** %e101, align 8, !dbg !3126
  %111 = load i32, i32* %curLvl, align 4, !dbg !3127
  %call106 = call float @EDGE_getSharpness(%struct.CCGEdge* %110, i32 %111), !dbg !3128
  store float %call106, float* %sharpness, align 4, !dbg !3125
  %112 = load %struct.CCGEdge*, %struct.CCGEdge** %e101, align 8, !dbg !3129
  %call107 = call i32 @_edge_isBoundary(%struct.CCGEdge* %112), !dbg !3131
  %tobool108 = icmp ne i32 %call107, 0, !dbg !3131
  br i1 %tobool108, label %if.then111, label %lor.lhs.false, !dbg !3132

lor.lhs.false:                                    ; preds = %for.body100
  %113 = load float, float* %sharpness, align 4, !dbg !3133
  %cmp109 = fcmp oge float %113, 1.000000e+00, !dbg !3134
  br i1 %cmp109, label %if.then111, label %if.else, !dbg !3135

if.then111:                                       ; preds = %lor.lhs.false, %for.body100
  %114 = load i8*, i8** %co104, align 8, !dbg !3136
  %115 = bitcast i8* %114 to float*, !dbg !3136
  %116 = load %struct.CCGEdge*, %struct.CCGEdge** %e101, align 8, !dbg !3138
  %v0 = getelementptr inbounds %struct.CCGEdge, %struct.CCGEdge* %116, i32 0, i32 5, !dbg !3138
  %117 = load %struct.CCGVert*, %struct.CCGVert** %v0, align 8, !dbg !3138
  %118 = load i32, i32* %curLvl, align 4, !dbg !3138
  %119 = load i32, i32* %vertDataSize, align 4, !dbg !3138
  %call112 = call i8* @_vert_getCo(%struct.CCGVert* %117, i32 %118, i32 %119), !dbg !3138
  %120 = bitcast i8* %call112 to float*, !dbg !3138
  %121 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !3139
  call void @VertDataCopy(float* %115, float* %120, %struct.CCGSubSurf* %121), !dbg !3140
  %122 = load i8*, i8** %co104, align 8, !dbg !3141
  %123 = bitcast i8* %122 to float*, !dbg !3141
  %124 = load %struct.CCGEdge*, %struct.CCGEdge** %e101, align 8, !dbg !3142
  %v1 = getelementptr inbounds %struct.CCGEdge, %struct.CCGEdge* %124, i32 0, i32 6, !dbg !3142
  %125 = load %struct.CCGVert*, %struct.CCGVert** %v1, align 8, !dbg !3142
  %126 = load i32, i32* %curLvl, align 4, !dbg !3142
  %127 = load i32, i32* %vertDataSize, align 4, !dbg !3142
  %call113 = call i8* @_vert_getCo(%struct.CCGVert* %125, i32 %126, i32 %127), !dbg !3142
  %128 = bitcast i8* %call113 to float*, !dbg !3142
  %129 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !3143
  call void @VertDataAdd(float* %123, float* %128, %struct.CCGSubSurf* %129), !dbg !3144
  %130 = load i8*, i8** %co104, align 8, !dbg !3145
  %131 = bitcast i8* %130 to float*, !dbg !3145
  %132 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !3146
  call void @VertDataMulN(float* %131, float 5.000000e-01, %struct.CCGSubSurf* %132), !dbg !3147
  br label %if.end141, !dbg !3148

if.else:                                          ; preds = %lor.lhs.false
  call void @llvm.dbg.declare(metadata i32* %numFaces114, metadata !3149, metadata !DIExpression()), !dbg !3151
  store i32 0, i32* %numFaces114, align 4, !dbg !3151
  %133 = load i8*, i8** %q, align 8, !dbg !3152
  %134 = bitcast i8* %133 to float*, !dbg !3152
  %135 = load %struct.CCGEdge*, %struct.CCGEdge** %e101, align 8, !dbg !3153
  %v0115 = getelementptr inbounds %struct.CCGEdge, %struct.CCGEdge* %135, i32 0, i32 5, !dbg !3153
  %136 = load %struct.CCGVert*, %struct.CCGVert** %v0115, align 8, !dbg !3153
  %137 = load i32, i32* %curLvl, align 4, !dbg !3153
  %138 = load i32, i32* %vertDataSize, align 4, !dbg !3153
  %call116 = call i8* @_vert_getCo(%struct.CCGVert* %136, i32 %137, i32 %138), !dbg !3153
  %139 = bitcast i8* %call116 to float*, !dbg !3153
  %140 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !3154
  call void @VertDataCopy(float* %134, float* %139, %struct.CCGSubSurf* %140), !dbg !3155
  %141 = load i8*, i8** %q, align 8, !dbg !3156
  %142 = bitcast i8* %141 to float*, !dbg !3156
  %143 = load %struct.CCGEdge*, %struct.CCGEdge** %e101, align 8, !dbg !3157
  %v1117 = getelementptr inbounds %struct.CCGEdge, %struct.CCGEdge* %143, i32 0, i32 6, !dbg !3157
  %144 = load %struct.CCGVert*, %struct.CCGVert** %v1117, align 8, !dbg !3157
  %145 = load i32, i32* %curLvl, align 4, !dbg !3157
  %146 = load i32, i32* %vertDataSize, align 4, !dbg !3157
  %call118 = call i8* @_vert_getCo(%struct.CCGVert* %144, i32 %145, i32 %146), !dbg !3157
  %147 = bitcast i8* %call118 to float*, !dbg !3157
  %148 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !3158
  call void @VertDataAdd(float* %142, float* %147, %struct.CCGSubSurf* %148), !dbg !3159
  store i32 0, i32* %i, align 4, !dbg !3160
  br label %for.cond119, !dbg !3162

for.cond119:                                      ; preds = %for.inc131, %if.else
  %149 = load i32, i32* %i, align 4, !dbg !3163
  %150 = load %struct.CCGEdge*, %struct.CCGEdge** %e101, align 8, !dbg !3165
  %numFaces120 = getelementptr inbounds %struct.CCGEdge, %struct.CCGEdge* %150, i32 0, i32 2, !dbg !3166
  %151 = load i16, i16* %numFaces120, align 8, !dbg !3166
  %conv121 = sext i16 %151 to i32, !dbg !3165
  %cmp122 = icmp slt i32 %149, %conv121, !dbg !3167
  br i1 %cmp122, label %for.body124, label %for.end133, !dbg !3168

for.body124:                                      ; preds = %for.cond119
  call void @llvm.dbg.declare(metadata %struct.CCGFace** %f125, metadata !3169, metadata !DIExpression()), !dbg !3171
  %152 = load %struct.CCGEdge*, %struct.CCGEdge** %e101, align 8, !dbg !3172
  %faces126 = getelementptr inbounds %struct.CCGEdge, %struct.CCGEdge* %152, i32 0, i32 7, !dbg !3173
  %153 = load %struct.CCGFace**, %struct.CCGFace*** %faces126, align 8, !dbg !3173
  %154 = load i32, i32* %i, align 4, !dbg !3174
  %idxprom127 = sext i32 %154 to i64, !dbg !3172
  %arrayidx128 = getelementptr inbounds %struct.CCGFace*, %struct.CCGFace** %153, i64 %idxprom127, !dbg !3172
  %155 = load %struct.CCGFace*, %struct.CCGFace** %arrayidx128, align 8, !dbg !3172
  store %struct.CCGFace* %155, %struct.CCGFace** %f125, align 8, !dbg !3171
  %156 = load i8*, i8** %q, align 8, !dbg !3175
  %157 = bitcast i8* %156 to float*, !dbg !3175
  %158 = load %struct.CCGFace*, %struct.CCGFace** %f125, align 8, !dbg !3176
  %call129 = call i8* @FACE_getCenterData(%struct.CCGFace* %158), !dbg !3177
  %159 = bitcast i8* %call129 to float*, !dbg !3178
  %160 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !3179
  call void @VertDataAdd(float* %157, float* %159, %struct.CCGSubSurf* %160), !dbg !3180
  %161 = load i32, i32* %numFaces114, align 4, !dbg !3181
  %inc130 = add nsw i32 %161, 1, !dbg !3181
  store i32 %inc130, i32* %numFaces114, align 4, !dbg !3181
  br label %for.inc131, !dbg !3182

for.inc131:                                       ; preds = %for.body124
  %162 = load i32, i32* %i, align 4, !dbg !3183
  %inc132 = add nsw i32 %162, 1, !dbg !3183
  store i32 %inc132, i32* %i, align 4, !dbg !3183
  br label %for.cond119, !dbg !3184, !llvm.loop !3185

for.end133:                                       ; preds = %for.cond119
  %163 = load i8*, i8** %q, align 8, !dbg !3187
  %164 = bitcast i8* %163 to float*, !dbg !3187
  %165 = load i32, i32* %numFaces114, align 4, !dbg !3188
  %conv134 = sitofp i32 %165 to float, !dbg !3188
  %add135 = fadd float 2.000000e+00, %conv134, !dbg !3189
  %div136 = fdiv float 1.000000e+00, %add135, !dbg !3190
  %166 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !3191
  call void @VertDataMulN(float* %164, float %div136, %struct.CCGSubSurf* %166), !dbg !3192
  %167 = load i8*, i8** %r, align 8, !dbg !3193
  %168 = bitcast i8* %167 to float*, !dbg !3193
  %169 = load %struct.CCGEdge*, %struct.CCGEdge** %e101, align 8, !dbg !3194
  %v0137 = getelementptr inbounds %struct.CCGEdge, %struct.CCGEdge* %169, i32 0, i32 5, !dbg !3194
  %170 = load %struct.CCGVert*, %struct.CCGVert** %v0137, align 8, !dbg !3194
  %171 = load i32, i32* %curLvl, align 4, !dbg !3194
  %172 = load i32, i32* %vertDataSize, align 4, !dbg !3194
  %call138 = call i8* @_vert_getCo(%struct.CCGVert* %170, i32 %171, i32 %172), !dbg !3194
  %173 = bitcast i8* %call138 to float*, !dbg !3194
  %174 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !3195
  call void @VertDataCopy(float* %168, float* %173, %struct.CCGSubSurf* %174), !dbg !3196
  %175 = load i8*, i8** %r, align 8, !dbg !3197
  %176 = bitcast i8* %175 to float*, !dbg !3197
  %177 = load %struct.CCGEdge*, %struct.CCGEdge** %e101, align 8, !dbg !3198
  %v1139 = getelementptr inbounds %struct.CCGEdge, %struct.CCGEdge* %177, i32 0, i32 6, !dbg !3198
  %178 = load %struct.CCGVert*, %struct.CCGVert** %v1139, align 8, !dbg !3198
  %179 = load i32, i32* %curLvl, align 4, !dbg !3198
  %180 = load i32, i32* %vertDataSize, align 4, !dbg !3198
  %call140 = call i8* @_vert_getCo(%struct.CCGVert* %178, i32 %179, i32 %180), !dbg !3198
  %181 = bitcast i8* %call140 to float*, !dbg !3198
  %182 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !3199
  call void @VertDataAdd(float* %176, float* %181, %struct.CCGSubSurf* %182), !dbg !3200
  %183 = load i8*, i8** %r, align 8, !dbg !3201
  %184 = bitcast i8* %183 to float*, !dbg !3201
  %185 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !3202
  call void @VertDataMulN(float* %184, float 5.000000e-01, %struct.CCGSubSurf* %185), !dbg !3203
  %186 = load i8*, i8** %co104, align 8, !dbg !3204
  %187 = bitcast i8* %186 to float*, !dbg !3204
  %188 = load i8*, i8** %q, align 8, !dbg !3205
  %189 = bitcast i8* %188 to float*, !dbg !3205
  %190 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !3206
  call void @VertDataCopy(float* %187, float* %189, %struct.CCGSubSurf* %190), !dbg !3207
  %191 = load i8*, i8** %r, align 8, !dbg !3208
  %192 = bitcast i8* %191 to float*, !dbg !3208
  %193 = load i8*, i8** %q, align 8, !dbg !3209
  %194 = bitcast i8* %193 to float*, !dbg !3209
  %195 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !3210
  call void @VertDataSub(float* %192, float* %194, %struct.CCGSubSurf* %195), !dbg !3211
  %196 = load i8*, i8** %r, align 8, !dbg !3212
  %197 = bitcast i8* %196 to float*, !dbg !3212
  %198 = load float, float* %sharpness, align 4, !dbg !3213
  %199 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !3214
  call void @VertDataMulN(float* %197, float %198, %struct.CCGSubSurf* %199), !dbg !3215
  %200 = load i8*, i8** %co104, align 8, !dbg !3216
  %201 = bitcast i8* %200 to float*, !dbg !3216
  %202 = load i8*, i8** %r, align 8, !dbg !3217
  %203 = bitcast i8* %202 to float*, !dbg !3217
  %204 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !3218
  call void @VertDataAdd(float* %201, float* %203, %struct.CCGSubSurf* %204), !dbg !3219
  br label %if.end141

if.end141:                                        ; preds = %for.end133, %if.then111
  br label %for.inc142, !dbg !3220

for.inc142:                                       ; preds = %if.end141
  %205 = load i32, i32* %ptrIdx, align 4, !dbg !3221
  %inc143 = add nsw i32 %205, 1, !dbg !3221
  store i32 %inc143, i32* %ptrIdx, align 4, !dbg !3221
  br label %for.cond97, !dbg !3222, !llvm.loop !3223

for.end144:                                       ; preds = %for.cond97
  store i32 0, i32* %ptrIdx, align 4, !dbg !3225
  br label %for.cond145, !dbg !3227

for.cond145:                                      ; preds = %for.inc326, %for.end144
  %206 = load i32, i32* %ptrIdx, align 4, !dbg !3228
  %207 = load i32, i32* %numEffectedV, align 4, !dbg !3230
  %cmp146 = icmp slt i32 %206, %207, !dbg !3231
  br i1 %cmp146, label %for.body148, label %for.end328, !dbg !3232

for.body148:                                      ; preds = %for.cond145
  call void @llvm.dbg.declare(metadata %struct.CCGVert** %v149, metadata !3233, metadata !DIExpression()), !dbg !3235
  %208 = load %struct.CCGVert**, %struct.CCGVert*** %effectedV, align 8, !dbg !3236
  %209 = load i32, i32* %ptrIdx, align 4, !dbg !3237
  %idxprom150 = sext i32 %209 to i64, !dbg !3236
  %arrayidx151 = getelementptr inbounds %struct.CCGVert*, %struct.CCGVert** %208, i64 %idxprom150, !dbg !3236
  %210 = load %struct.CCGVert*, %struct.CCGVert** %arrayidx151, align 8, !dbg !3236
  store %struct.CCGVert* %210, %struct.CCGVert** %v149, align 8, !dbg !3235
  call void @llvm.dbg.declare(metadata i8** %co152, metadata !3238, metadata !DIExpression()), !dbg !3239
  %211 = load %struct.CCGVert*, %struct.CCGVert** %v149, align 8, !dbg !3240
  %212 = load i32, i32* %curLvl, align 4, !dbg !3240
  %213 = load i32, i32* %vertDataSize, align 4, !dbg !3240
  %call153 = call i8* @_vert_getCo(%struct.CCGVert* %211, i32 %212, i32 %213), !dbg !3240
  store i8* %call153, i8** %co152, align 8, !dbg !3239
  call void @llvm.dbg.declare(metadata i8** %nCo, metadata !3241, metadata !DIExpression()), !dbg !3242
  %214 = load %struct.CCGVert*, %struct.CCGVert** %v149, align 8, !dbg !3243
  %215 = load i32, i32* %nextLvl, align 4, !dbg !3243
  %216 = load i32, i32* %vertDataSize, align 4, !dbg !3243
  %call154 = call i8* @_vert_getCo(%struct.CCGVert* %214, i32 %215, i32 %216), !dbg !3243
  store i8* %call154, i8** %nCo, align 8, !dbg !3242
  call void @llvm.dbg.declare(metadata i32* %sharpCount, metadata !3244, metadata !DIExpression()), !dbg !3245
  store i32 0, i32* %sharpCount, align 4, !dbg !3245
  call void @llvm.dbg.declare(metadata i32* %allSharp, metadata !3246, metadata !DIExpression()), !dbg !3247
  store i32 1, i32* %allSharp, align 4, !dbg !3247
  call void @llvm.dbg.declare(metadata float* %avgSharpness, metadata !3248, metadata !DIExpression()), !dbg !3249
  store float 0.000000e+00, float* %avgSharpness, align 4, !dbg !3249
  call void @llvm.dbg.declare(metadata i32* %seam, metadata !3250, metadata !DIExpression()), !dbg !3251
  %217 = load %struct.CCGVert*, %struct.CCGVert** %v149, align 8, !dbg !3252
  %call155 = call i32 @VERT_seam(%struct.CCGVert* %217), !dbg !3253
  store i32 %call155, i32* %seam, align 4, !dbg !3251
  call void @llvm.dbg.declare(metadata i32* %seamEdges, metadata !3254, metadata !DIExpression()), !dbg !3255
  store i32 0, i32* %seamEdges, align 4, !dbg !3255
  store i32 0, i32* %i, align 4, !dbg !3256
  br label %for.cond156, !dbg !3258

for.cond156:                                      ; preds = %for.inc181, %for.body148
  %218 = load i32, i32* %i, align 4, !dbg !3259
  %219 = load %struct.CCGVert*, %struct.CCGVert** %v149, align 8, !dbg !3261
  %numEdges157 = getelementptr inbounds %struct.CCGVert, %struct.CCGVert* %219, i32 0, i32 2, !dbg !3262
  %220 = load i16, i16* %numEdges157, align 8, !dbg !3262
  %conv158 = sext i16 %220 to i32, !dbg !3261
  %cmp159 = icmp slt i32 %218, %conv158, !dbg !3263
  br i1 %cmp159, label %for.body161, label %for.end183, !dbg !3264

for.body161:                                      ; preds = %for.cond156
  call void @llvm.dbg.declare(metadata %struct.CCGEdge** %e162, metadata !3265, metadata !DIExpression()), !dbg !3267
  %221 = load %struct.CCGVert*, %struct.CCGVert** %v149, align 8, !dbg !3268
  %edges163 = getelementptr inbounds %struct.CCGVert, %struct.CCGVert* %221, i32 0, i32 6, !dbg !3269
  %222 = load %struct.CCGEdge**, %struct.CCGEdge*** %edges163, align 8, !dbg !3269
  %223 = load i32, i32* %i, align 4, !dbg !3270
  %idxprom164 = sext i32 %223 to i64, !dbg !3268
  %arrayidx165 = getelementptr inbounds %struct.CCGEdge*, %struct.CCGEdge** %222, i64 %idxprom164, !dbg !3268
  %224 = load %struct.CCGEdge*, %struct.CCGEdge** %arrayidx165, align 8, !dbg !3268
  store %struct.CCGEdge* %224, %struct.CCGEdge** %e162, align 8, !dbg !3267
  call void @llvm.dbg.declare(metadata float* %sharpness166, metadata !3271, metadata !DIExpression()), !dbg !3272
  %225 = load %struct.CCGEdge*, %struct.CCGEdge** %e162, align 8, !dbg !3273
  %226 = load i32, i32* %curLvl, align 4, !dbg !3274
  %call167 = call float @EDGE_getSharpness(%struct.CCGEdge* %225, i32 %226), !dbg !3275
  store float %call167, float* %sharpness166, align 4, !dbg !3272
  %227 = load i32, i32* %seam, align 4, !dbg !3276
  %tobool168 = icmp ne i32 %227, 0, !dbg !3276
  br i1 %tobool168, label %land.lhs.true, label %if.end173, !dbg !3278

land.lhs.true:                                    ; preds = %for.body161
  %228 = load %struct.CCGEdge*, %struct.CCGEdge** %e162, align 8, !dbg !3279
  %call169 = call i32 @_edge_isBoundary(%struct.CCGEdge* %228), !dbg !3280
  %tobool170 = icmp ne i32 %call169, 0, !dbg !3280
  br i1 %tobool170, label %if.then171, label %if.end173, !dbg !3281

if.then171:                                       ; preds = %land.lhs.true
  %229 = load i32, i32* %seamEdges, align 4, !dbg !3282
  %inc172 = add nsw i32 %229, 1, !dbg !3282
  store i32 %inc172, i32* %seamEdges, align 4, !dbg !3282
  br label %if.end173, !dbg !3283

if.end173:                                        ; preds = %if.then171, %land.lhs.true, %for.body161
  %230 = load float, float* %sharpness166, align 4, !dbg !3284
  %cmp174 = fcmp une float %230, 0.000000e+00, !dbg !3286
  br i1 %cmp174, label %if.then176, label %if.else179, !dbg !3287

if.then176:                                       ; preds = %if.end173
  %231 = load i32, i32* %sharpCount, align 4, !dbg !3288
  %inc177 = add nsw i32 %231, 1, !dbg !3288
  store i32 %inc177, i32* %sharpCount, align 4, !dbg !3288
  %232 = load float, float* %sharpness166, align 4, !dbg !3290
  %233 = load float, float* %avgSharpness, align 4, !dbg !3291
  %add178 = fadd float %233, %232, !dbg !3291
  store float %add178, float* %avgSharpness, align 4, !dbg !3291
  br label %if.end180, !dbg !3292

if.else179:                                       ; preds = %if.end173
  store i32 0, i32* %allSharp, align 4, !dbg !3293
  br label %if.end180

if.end180:                                        ; preds = %if.else179, %if.then176
  br label %for.inc181, !dbg !3295

for.inc181:                                       ; preds = %if.end180
  %234 = load i32, i32* %i, align 4, !dbg !3296
  %inc182 = add nsw i32 %234, 1, !dbg !3296
  store i32 %inc182, i32* %i, align 4, !dbg !3296
  br label %for.cond156, !dbg !3297, !llvm.loop !3298

for.end183:                                       ; preds = %for.cond156
  %235 = load i32, i32* %sharpCount, align 4, !dbg !3300
  %tobool184 = icmp ne i32 %235, 0, !dbg !3300
  br i1 %tobool184, label %if.then185, label %if.end192, !dbg !3302

if.then185:                                       ; preds = %for.end183
  %236 = load i32, i32* %sharpCount, align 4, !dbg !3303
  %conv186 = sitofp i32 %236 to float, !dbg !3303
  %237 = load float, float* %avgSharpness, align 4, !dbg !3305
  %div187 = fdiv float %237, %conv186, !dbg !3305
  store float %div187, float* %avgSharpness, align 4, !dbg !3305
  %238 = load float, float* %avgSharpness, align 4, !dbg !3306
  %cmp188 = fcmp ogt float %238, 1.000000e+00, !dbg !3308
  br i1 %cmp188, label %if.then190, label %if.end191, !dbg !3309

if.then190:                                       ; preds = %if.then185
  store float 1.000000e+00, float* %avgSharpness, align 4, !dbg !3310
  br label %if.end191, !dbg !3312

if.end191:                                        ; preds = %if.then190, %if.then185
  br label %if.end192, !dbg !3313

if.end192:                                        ; preds = %if.end191, %for.end183
  %239 = load i32, i32* %seamEdges, align 4, !dbg !3314
  %cmp193 = icmp slt i32 %239, 2, !dbg !3316
  br i1 %cmp193, label %if.then200, label %lor.lhs.false195, !dbg !3317

lor.lhs.false195:                                 ; preds = %if.end192
  %240 = load i32, i32* %seamEdges, align 4, !dbg !3318
  %241 = load %struct.CCGVert*, %struct.CCGVert** %v149, align 8, !dbg !3319
  %numEdges196 = getelementptr inbounds %struct.CCGVert, %struct.CCGVert* %241, i32 0, i32 2, !dbg !3320
  %242 = load i16, i16* %numEdges196, align 8, !dbg !3320
  %conv197 = sext i16 %242 to i32, !dbg !3319
  %cmp198 = icmp ne i32 %240, %conv197, !dbg !3321
  br i1 %cmp198, label %if.then200, label %if.end201, !dbg !3322

if.then200:                                       ; preds = %lor.lhs.false195, %if.end192
  store i32 0, i32* %seam, align 4, !dbg !3323
  br label %if.end201, !dbg !3324

if.end201:                                        ; preds = %if.then200, %lor.lhs.false195
  %243 = load %struct.CCGVert*, %struct.CCGVert** %v149, align 8, !dbg !3325
  %numEdges202 = getelementptr inbounds %struct.CCGVert, %struct.CCGVert* %243, i32 0, i32 2, !dbg !3327
  %244 = load i16, i16* %numEdges202, align 8, !dbg !3327
  %tobool203 = icmp ne i16 %244, 0, !dbg !3325
  br i1 %tobool203, label %lor.lhs.false204, label %if.then207, !dbg !3328

lor.lhs.false204:                                 ; preds = %if.end201
  %245 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !3329
  %meshIFC205 = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %245, i32 0, i32 3, !dbg !3330
  %simpleSubdiv = getelementptr inbounds %struct.CCGMeshIFC, %struct.CCGMeshIFC* %meshIFC205, i32 0, i32 5, !dbg !3331
  %246 = load i32, i32* %simpleSubdiv, align 4, !dbg !3331
  %tobool206 = icmp ne i32 %246, 0, !dbg !3329
  br i1 %tobool206, label %if.then207, label %if.else208, !dbg !3332

if.then207:                                       ; preds = %lor.lhs.false204, %if.end201
  %247 = load i8*, i8** %nCo, align 8, !dbg !3333
  %248 = bitcast i8* %247 to float*, !dbg !3333
  %249 = load i8*, i8** %co152, align 8, !dbg !3335
  %250 = bitcast i8* %249 to float*, !dbg !3335
  %251 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !3336
  call void @VertDataCopy(float* %248, float* %250, %struct.CCGSubSurf* %251), !dbg !3337
  br label %if.end276, !dbg !3338

if.else208:                                       ; preds = %lor.lhs.false204
  %252 = load %struct.CCGVert*, %struct.CCGVert** %v149, align 8, !dbg !3339
  %call209 = call i32 @_vert_isBoundary(%struct.CCGVert* %252), !dbg !3341
  %tobool210 = icmp ne i32 %call209, 0, !dbg !3341
  br i1 %tobool210, label %if.then211, label %if.else234, !dbg !3342

if.then211:                                       ; preds = %if.else208
  call void @llvm.dbg.declare(metadata i32* %numBoundary, metadata !3343, metadata !DIExpression()), !dbg !3345
  store i32 0, i32* %numBoundary, align 4, !dbg !3345
  %253 = load i8*, i8** %r, align 8, !dbg !3346
  %254 = bitcast i8* %253 to float*, !dbg !3346
  %255 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !3347
  call void @VertDataZero(float* %254, %struct.CCGSubSurf* %255), !dbg !3348
  store i32 0, i32* %i, align 4, !dbg !3349
  br label %for.cond212, !dbg !3351

for.cond212:                                      ; preds = %for.inc229, %if.then211
  %256 = load i32, i32* %i, align 4, !dbg !3352
  %257 = load %struct.CCGVert*, %struct.CCGVert** %v149, align 8, !dbg !3354
  %numEdges213 = getelementptr inbounds %struct.CCGVert, %struct.CCGVert* %257, i32 0, i32 2, !dbg !3355
  %258 = load i16, i16* %numEdges213, align 8, !dbg !3355
  %conv214 = sext i16 %258 to i32, !dbg !3354
  %cmp215 = icmp slt i32 %256, %conv214, !dbg !3356
  br i1 %cmp215, label %for.body217, label %for.end231, !dbg !3357

for.body217:                                      ; preds = %for.cond212
  call void @llvm.dbg.declare(metadata %struct.CCGEdge** %e218, metadata !3358, metadata !DIExpression()), !dbg !3360
  %259 = load %struct.CCGVert*, %struct.CCGVert** %v149, align 8, !dbg !3361
  %edges219 = getelementptr inbounds %struct.CCGVert, %struct.CCGVert* %259, i32 0, i32 6, !dbg !3362
  %260 = load %struct.CCGEdge**, %struct.CCGEdge*** %edges219, align 8, !dbg !3362
  %261 = load i32, i32* %i, align 4, !dbg !3363
  %idxprom220 = sext i32 %261 to i64, !dbg !3361
  %arrayidx221 = getelementptr inbounds %struct.CCGEdge*, %struct.CCGEdge** %260, i64 %idxprom220, !dbg !3361
  %262 = load %struct.CCGEdge*, %struct.CCGEdge** %arrayidx221, align 8, !dbg !3361
  store %struct.CCGEdge* %262, %struct.CCGEdge** %e218, align 8, !dbg !3360
  %263 = load %struct.CCGEdge*, %struct.CCGEdge** %e218, align 8, !dbg !3364
  %call222 = call i32 @_edge_isBoundary(%struct.CCGEdge* %263), !dbg !3366
  %tobool223 = icmp ne i32 %call222, 0, !dbg !3366
  br i1 %tobool223, label %if.then224, label %if.end228, !dbg !3367

if.then224:                                       ; preds = %for.body217
  %264 = load i8*, i8** %r, align 8, !dbg !3368
  %265 = bitcast i8* %264 to float*, !dbg !3368
  %266 = load %struct.CCGEdge*, %struct.CCGEdge** %e218, align 8, !dbg !3370
  %267 = load %struct.CCGVert*, %struct.CCGVert** %v149, align 8, !dbg !3370
  %call225 = call %struct.CCGVert* @_edge_getOtherVert(%struct.CCGEdge* %266, %struct.CCGVert* %267), !dbg !3370
  %268 = load i32, i32* %curLvl, align 4, !dbg !3370
  %269 = load i32, i32* %vertDataSize, align 4, !dbg !3370
  %call226 = call i8* @_vert_getCo(%struct.CCGVert* %call225, i32 %268, i32 %269), !dbg !3370
  %270 = bitcast i8* %call226 to float*, !dbg !3370
  %271 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !3371
  call void @VertDataAdd(float* %265, float* %270, %struct.CCGSubSurf* %271), !dbg !3372
  %272 = load i32, i32* %numBoundary, align 4, !dbg !3373
  %inc227 = add nsw i32 %272, 1, !dbg !3373
  store i32 %inc227, i32* %numBoundary, align 4, !dbg !3373
  br label %if.end228, !dbg !3374

if.end228:                                        ; preds = %if.then224, %for.body217
  br label %for.inc229, !dbg !3375

for.inc229:                                       ; preds = %if.end228
  %273 = load i32, i32* %i, align 4, !dbg !3376
  %inc230 = add nsw i32 %273, 1, !dbg !3376
  store i32 %inc230, i32* %i, align 4, !dbg !3376
  br label %for.cond212, !dbg !3377, !llvm.loop !3378

for.end231:                                       ; preds = %for.cond212
  %274 = load i8*, i8** %nCo, align 8, !dbg !3380
  %275 = bitcast i8* %274 to float*, !dbg !3380
  %276 = load i8*, i8** %co152, align 8, !dbg !3381
  %277 = bitcast i8* %276 to float*, !dbg !3381
  %278 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !3382
  call void @VertDataCopy(float* %275, float* %277, %struct.CCGSubSurf* %278), !dbg !3383
  %279 = load i8*, i8** %nCo, align 8, !dbg !3384
  %280 = bitcast i8* %279 to float*, !dbg !3384
  %281 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !3385
  call void @VertDataMulN(float* %280, float 7.500000e-01, %struct.CCGSubSurf* %281), !dbg !3386
  %282 = load i8*, i8** %r, align 8, !dbg !3387
  %283 = bitcast i8* %282 to float*, !dbg !3387
  %284 = load i32, i32* %numBoundary, align 4, !dbg !3388
  %conv232 = sitofp i32 %284 to float, !dbg !3388
  %div233 = fdiv float 2.500000e-01, %conv232, !dbg !3389
  %285 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !3390
  call void @VertDataMulN(float* %283, float %div233, %struct.CCGSubSurf* %285), !dbg !3391
  %286 = load i8*, i8** %nCo, align 8, !dbg !3392
  %287 = bitcast i8* %286 to float*, !dbg !3392
  %288 = load i8*, i8** %r, align 8, !dbg !3393
  %289 = bitcast i8* %288 to float*, !dbg !3393
  %290 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !3394
  call void @VertDataAdd(float* %287, float* %289, %struct.CCGSubSurf* %290), !dbg !3395
  br label %if.end275, !dbg !3396

if.else234:                                       ; preds = %if.else208
  call void @llvm.dbg.declare(metadata i32* %numEdges235, metadata !3397, metadata !DIExpression()), !dbg !3399
  store i32 0, i32* %numEdges235, align 4, !dbg !3399
  call void @llvm.dbg.declare(metadata i32* %numFaces236, metadata !3400, metadata !DIExpression()), !dbg !3401
  store i32 0, i32* %numFaces236, align 4, !dbg !3401
  %291 = load i8*, i8** %q, align 8, !dbg !3402
  %292 = bitcast i8* %291 to float*, !dbg !3402
  %293 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !3403
  call void @VertDataZero(float* %292, %struct.CCGSubSurf* %293), !dbg !3404
  store i32 0, i32* %i, align 4, !dbg !3405
  br label %for.cond237, !dbg !3407

for.cond237:                                      ; preds = %for.inc249, %if.else234
  %294 = load i32, i32* %i, align 4, !dbg !3408
  %295 = load %struct.CCGVert*, %struct.CCGVert** %v149, align 8, !dbg !3410
  %numFaces238 = getelementptr inbounds %struct.CCGVert, %struct.CCGVert* %295, i32 0, i32 3, !dbg !3411
  %296 = load i16, i16* %numFaces238, align 2, !dbg !3411
  %conv239 = sext i16 %296 to i32, !dbg !3410
  %cmp240 = icmp slt i32 %294, %conv239, !dbg !3412
  br i1 %cmp240, label %for.body242, label %for.end251, !dbg !3413

for.body242:                                      ; preds = %for.cond237
  call void @llvm.dbg.declare(metadata %struct.CCGFace** %f243, metadata !3414, metadata !DIExpression()), !dbg !3416
  %297 = load %struct.CCGVert*, %struct.CCGVert** %v149, align 8, !dbg !3417
  %faces244 = getelementptr inbounds %struct.CCGVert, %struct.CCGVert* %297, i32 0, i32 7, !dbg !3418
  %298 = load %struct.CCGFace**, %struct.CCGFace*** %faces244, align 8, !dbg !3418
  %299 = load i32, i32* %i, align 4, !dbg !3419
  %idxprom245 = sext i32 %299 to i64, !dbg !3417
  %arrayidx246 = getelementptr inbounds %struct.CCGFace*, %struct.CCGFace** %298, i64 %idxprom245, !dbg !3417
  %300 = load %struct.CCGFace*, %struct.CCGFace** %arrayidx246, align 8, !dbg !3417
  store %struct.CCGFace* %300, %struct.CCGFace** %f243, align 8, !dbg !3416
  %301 = load i8*, i8** %q, align 8, !dbg !3420
  %302 = bitcast i8* %301 to float*, !dbg !3420
  %303 = load %struct.CCGFace*, %struct.CCGFace** %f243, align 8, !dbg !3421
  %call247 = call i8* @FACE_getCenterData(%struct.CCGFace* %303), !dbg !3422
  %304 = bitcast i8* %call247 to float*, !dbg !3423
  %305 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !3424
  call void @VertDataAdd(float* %302, float* %304, %struct.CCGSubSurf* %305), !dbg !3425
  %306 = load i32, i32* %numFaces236, align 4, !dbg !3426
  %inc248 = add nsw i32 %306, 1, !dbg !3426
  store i32 %inc248, i32* %numFaces236, align 4, !dbg !3426
  br label %for.inc249, !dbg !3427

for.inc249:                                       ; preds = %for.body242
  %307 = load i32, i32* %i, align 4, !dbg !3428
  %inc250 = add nsw i32 %307, 1, !dbg !3428
  store i32 %inc250, i32* %i, align 4, !dbg !3428
  br label %for.cond237, !dbg !3429, !llvm.loop !3430

for.end251:                                       ; preds = %for.cond237
  %308 = load i8*, i8** %q, align 8, !dbg !3432
  %309 = bitcast i8* %308 to float*, !dbg !3432
  %310 = load i32, i32* %numFaces236, align 4, !dbg !3433
  %conv252 = sitofp i32 %310 to float, !dbg !3433
  %div253 = fdiv float 1.000000e+00, %conv252, !dbg !3434
  %311 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !3435
  call void @VertDataMulN(float* %309, float %div253, %struct.CCGSubSurf* %311), !dbg !3436
  %312 = load i8*, i8** %r, align 8, !dbg !3437
  %313 = bitcast i8* %312 to float*, !dbg !3437
  %314 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !3438
  call void @VertDataZero(float* %313, %struct.CCGSubSurf* %314), !dbg !3439
  store i32 0, i32* %i, align 4, !dbg !3440
  br label %for.cond254, !dbg !3442

for.cond254:                                      ; preds = %for.inc267, %for.end251
  %315 = load i32, i32* %i, align 4, !dbg !3443
  %316 = load %struct.CCGVert*, %struct.CCGVert** %v149, align 8, !dbg !3445
  %numEdges255 = getelementptr inbounds %struct.CCGVert, %struct.CCGVert* %316, i32 0, i32 2, !dbg !3446
  %317 = load i16, i16* %numEdges255, align 8, !dbg !3446
  %conv256 = sext i16 %317 to i32, !dbg !3445
  %cmp257 = icmp slt i32 %315, %conv256, !dbg !3447
  br i1 %cmp257, label %for.body259, label %for.end269, !dbg !3448

for.body259:                                      ; preds = %for.cond254
  call void @llvm.dbg.declare(metadata %struct.CCGEdge** %e260, metadata !3449, metadata !DIExpression()), !dbg !3451
  %318 = load %struct.CCGVert*, %struct.CCGVert** %v149, align 8, !dbg !3452
  %edges261 = getelementptr inbounds %struct.CCGVert, %struct.CCGVert* %318, i32 0, i32 6, !dbg !3453
  %319 = load %struct.CCGEdge**, %struct.CCGEdge*** %edges261, align 8, !dbg !3453
  %320 = load i32, i32* %i, align 4, !dbg !3454
  %idxprom262 = sext i32 %320 to i64, !dbg !3452
  %arrayidx263 = getelementptr inbounds %struct.CCGEdge*, %struct.CCGEdge** %319, i64 %idxprom262, !dbg !3452
  %321 = load %struct.CCGEdge*, %struct.CCGEdge** %arrayidx263, align 8, !dbg !3452
  store %struct.CCGEdge* %321, %struct.CCGEdge** %e260, align 8, !dbg !3451
  %322 = load i8*, i8** %r, align 8, !dbg !3455
  %323 = bitcast i8* %322 to float*, !dbg !3455
  %324 = load %struct.CCGEdge*, %struct.CCGEdge** %e260, align 8, !dbg !3456
  %325 = load %struct.CCGVert*, %struct.CCGVert** %v149, align 8, !dbg !3456
  %call264 = call %struct.CCGVert* @_edge_getOtherVert(%struct.CCGEdge* %324, %struct.CCGVert* %325), !dbg !3456
  %326 = load i32, i32* %curLvl, align 4, !dbg !3456
  %327 = load i32, i32* %vertDataSize, align 4, !dbg !3456
  %call265 = call i8* @_vert_getCo(%struct.CCGVert* %call264, i32 %326, i32 %327), !dbg !3456
  %328 = bitcast i8* %call265 to float*, !dbg !3456
  %329 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !3457
  call void @VertDataAdd(float* %323, float* %328, %struct.CCGSubSurf* %329), !dbg !3458
  %330 = load i32, i32* %numEdges235, align 4, !dbg !3459
  %inc266 = add nsw i32 %330, 1, !dbg !3459
  store i32 %inc266, i32* %numEdges235, align 4, !dbg !3459
  br label %for.inc267, !dbg !3460

for.inc267:                                       ; preds = %for.body259
  %331 = load i32, i32* %i, align 4, !dbg !3461
  %inc268 = add nsw i32 %331, 1, !dbg !3461
  store i32 %inc268, i32* %i, align 4, !dbg !3461
  br label %for.cond254, !dbg !3462, !llvm.loop !3463

for.end269:                                       ; preds = %for.cond254
  %332 = load i8*, i8** %r, align 8, !dbg !3465
  %333 = bitcast i8* %332 to float*, !dbg !3465
  %334 = load i32, i32* %numEdges235, align 4, !dbg !3466
  %conv270 = sitofp i32 %334 to float, !dbg !3466
  %div271 = fdiv float 1.000000e+00, %conv270, !dbg !3467
  %335 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !3468
  call void @VertDataMulN(float* %333, float %div271, %struct.CCGSubSurf* %335), !dbg !3469
  %336 = load i8*, i8** %nCo, align 8, !dbg !3470
  %337 = bitcast i8* %336 to float*, !dbg !3470
  %338 = load i8*, i8** %co152, align 8, !dbg !3471
  %339 = bitcast i8* %338 to float*, !dbg !3471
  %340 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !3472
  call void @VertDataCopy(float* %337, float* %339, %struct.CCGSubSurf* %340), !dbg !3473
  %341 = load i8*, i8** %nCo, align 8, !dbg !3474
  %342 = bitcast i8* %341 to float*, !dbg !3474
  %343 = load i32, i32* %numEdges235, align 4, !dbg !3475
  %conv272 = sitofp i32 %343 to float, !dbg !3475
  %sub = fsub float %conv272, 2.000000e+00, !dbg !3476
  %344 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !3477
  call void @VertDataMulN(float* %342, float %sub, %struct.CCGSubSurf* %344), !dbg !3478
  %345 = load i8*, i8** %nCo, align 8, !dbg !3479
  %346 = bitcast i8* %345 to float*, !dbg !3479
  %347 = load i8*, i8** %q, align 8, !dbg !3480
  %348 = bitcast i8* %347 to float*, !dbg !3480
  %349 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !3481
  call void @VertDataAdd(float* %346, float* %348, %struct.CCGSubSurf* %349), !dbg !3482
  %350 = load i8*, i8** %nCo, align 8, !dbg !3483
  %351 = bitcast i8* %350 to float*, !dbg !3483
  %352 = load i8*, i8** %r, align 8, !dbg !3484
  %353 = bitcast i8* %352 to float*, !dbg !3484
  %354 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !3485
  call void @VertDataAdd(float* %351, float* %353, %struct.CCGSubSurf* %354), !dbg !3486
  %355 = load i8*, i8** %nCo, align 8, !dbg !3487
  %356 = bitcast i8* %355 to float*, !dbg !3487
  %357 = load i32, i32* %numEdges235, align 4, !dbg !3488
  %conv273 = sitofp i32 %357 to float, !dbg !3488
  %div274 = fdiv float 1.000000e+00, %conv273, !dbg !3489
  %358 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !3490
  call void @VertDataMulN(float* %356, float %div274, %struct.CCGSubSurf* %358), !dbg !3491
  br label %if.end275

if.end275:                                        ; preds = %for.end269, %for.end231
  br label %if.end276

if.end276:                                        ; preds = %if.end275, %if.then207
  %359 = load i32, i32* %sharpCount, align 4, !dbg !3492
  %cmp277 = icmp sgt i32 %359, 1, !dbg !3494
  br i1 %cmp277, label %if.then281, label %lor.lhs.false279, !dbg !3495

lor.lhs.false279:                                 ; preds = %if.end276
  %360 = load i32, i32* %seam, align 4, !dbg !3496
  %tobool280 = icmp ne i32 %360, 0, !dbg !3496
  br i1 %tobool280, label %if.then281, label %if.end325, !dbg !3497

if.then281:                                       ; preds = %lor.lhs.false279, %if.end276
  %361 = load i8*, i8** %q, align 8, !dbg !3498
  %362 = bitcast i8* %361 to float*, !dbg !3498
  %363 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !3500
  call void @VertDataZero(float* %362, %struct.CCGSubSurf* %363), !dbg !3501
  %364 = load i32, i32* %seam, align 4, !dbg !3502
  %tobool282 = icmp ne i32 %364, 0, !dbg !3502
  br i1 %tobool282, label %if.then283, label %if.end284, !dbg !3504

if.then283:                                       ; preds = %if.then281
  store float 1.000000e+00, float* %avgSharpness, align 4, !dbg !3505
  %365 = load i32, i32* %seamEdges, align 4, !dbg !3507
  store i32 %365, i32* %sharpCount, align 4, !dbg !3508
  store i32 1, i32* %allSharp, align 4, !dbg !3509
  br label %if.end284, !dbg !3510

if.end284:                                        ; preds = %if.then283, %if.then281
  store i32 0, i32* %i, align 4, !dbg !3511
  br label %for.cond285, !dbg !3513

for.cond285:                                      ; preds = %for.inc314, %if.end284
  %366 = load i32, i32* %i, align 4, !dbg !3514
  %367 = load %struct.CCGVert*, %struct.CCGVert** %v149, align 8, !dbg !3516
  %numEdges286 = getelementptr inbounds %struct.CCGVert, %struct.CCGVert* %367, i32 0, i32 2, !dbg !3517
  %368 = load i16, i16* %numEdges286, align 8, !dbg !3517
  %conv287 = sext i16 %368 to i32, !dbg !3516
  %cmp288 = icmp slt i32 %366, %conv287, !dbg !3518
  br i1 %cmp288, label %for.body290, label %for.end316, !dbg !3519

for.body290:                                      ; preds = %for.cond285
  call void @llvm.dbg.declare(metadata %struct.CCGEdge** %e291, metadata !3520, metadata !DIExpression()), !dbg !3522
  %369 = load %struct.CCGVert*, %struct.CCGVert** %v149, align 8, !dbg !3523
  %edges292 = getelementptr inbounds %struct.CCGVert, %struct.CCGVert* %369, i32 0, i32 6, !dbg !3524
  %370 = load %struct.CCGEdge**, %struct.CCGEdge*** %edges292, align 8, !dbg !3524
  %371 = load i32, i32* %i, align 4, !dbg !3525
  %idxprom293 = sext i32 %371 to i64, !dbg !3523
  %arrayidx294 = getelementptr inbounds %struct.CCGEdge*, %struct.CCGEdge** %370, i64 %idxprom293, !dbg !3523
  %372 = load %struct.CCGEdge*, %struct.CCGEdge** %arrayidx294, align 8, !dbg !3523
  store %struct.CCGEdge* %372, %struct.CCGEdge** %e291, align 8, !dbg !3522
  call void @llvm.dbg.declare(metadata float* %sharpness295, metadata !3526, metadata !DIExpression()), !dbg !3527
  %373 = load %struct.CCGEdge*, %struct.CCGEdge** %e291, align 8, !dbg !3528
  %374 = load i32, i32* %curLvl, align 4, !dbg !3529
  %call296 = call float @EDGE_getSharpness(%struct.CCGEdge* %373, i32 %374), !dbg !3530
  store float %call296, float* %sharpness295, align 4, !dbg !3527
  %375 = load i32, i32* %seam, align 4, !dbg !3531
  %tobool297 = icmp ne i32 %375, 0, !dbg !3531
  br i1 %tobool297, label %if.then298, label %if.else305, !dbg !3533

if.then298:                                       ; preds = %for.body290
  %376 = load %struct.CCGEdge*, %struct.CCGEdge** %e291, align 8, !dbg !3534
  %call299 = call i32 @_edge_isBoundary(%struct.CCGEdge* %376), !dbg !3537
  %tobool300 = icmp ne i32 %call299, 0, !dbg !3537
  br i1 %tobool300, label %if.then301, label %if.end304, !dbg !3538

if.then301:                                       ; preds = %if.then298
  call void @llvm.dbg.declare(metadata %struct.CCGVert** %oV, metadata !3539, metadata !DIExpression()), !dbg !3541
  %377 = load %struct.CCGEdge*, %struct.CCGEdge** %e291, align 8, !dbg !3542
  %378 = load %struct.CCGVert*, %struct.CCGVert** %v149, align 8, !dbg !3543
  %call302 = call %struct.CCGVert* @_edge_getOtherVert(%struct.CCGEdge* %377, %struct.CCGVert* %378), !dbg !3544
  store %struct.CCGVert* %call302, %struct.CCGVert** %oV, align 8, !dbg !3541
  %379 = load i8*, i8** %q, align 8, !dbg !3545
  %380 = bitcast i8* %379 to float*, !dbg !3545
  %381 = load %struct.CCGVert*, %struct.CCGVert** %oV, align 8, !dbg !3546
  %382 = load i32, i32* %curLvl, align 4, !dbg !3546
  %383 = load i32, i32* %vertDataSize, align 4, !dbg !3546
  %call303 = call i8* @_vert_getCo(%struct.CCGVert* %381, i32 %382, i32 %383), !dbg !3546
  %384 = bitcast i8* %call303 to float*, !dbg !3546
  %385 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !3547
  call void @VertDataAdd(float* %380, float* %384, %struct.CCGSubSurf* %385), !dbg !3548
  br label %if.end304, !dbg !3549

if.end304:                                        ; preds = %if.then301, %if.then298
  br label %if.end313, !dbg !3550

if.else305:                                       ; preds = %for.body290
  %386 = load float, float* %sharpness295, align 4, !dbg !3551
  %cmp306 = fcmp une float %386, 0.000000e+00, !dbg !3553
  br i1 %cmp306, label %if.then308, label %if.end312, !dbg !3554

if.then308:                                       ; preds = %if.else305
  call void @llvm.dbg.declare(metadata %struct.CCGVert** %oV309, metadata !3555, metadata !DIExpression()), !dbg !3557
  %387 = load %struct.CCGEdge*, %struct.CCGEdge** %e291, align 8, !dbg !3558
  %388 = load %struct.CCGVert*, %struct.CCGVert** %v149, align 8, !dbg !3559
  %call310 = call %struct.CCGVert* @_edge_getOtherVert(%struct.CCGEdge* %387, %struct.CCGVert* %388), !dbg !3560
  store %struct.CCGVert* %call310, %struct.CCGVert** %oV309, align 8, !dbg !3557
  %389 = load i8*, i8** %q, align 8, !dbg !3561
  %390 = bitcast i8* %389 to float*, !dbg !3561
  %391 = load %struct.CCGVert*, %struct.CCGVert** %oV309, align 8, !dbg !3562
  %392 = load i32, i32* %curLvl, align 4, !dbg !3562
  %393 = load i32, i32* %vertDataSize, align 4, !dbg !3562
  %call311 = call i8* @_vert_getCo(%struct.CCGVert* %391, i32 %392, i32 %393), !dbg !3562
  %394 = bitcast i8* %call311 to float*, !dbg !3562
  %395 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !3563
  call void @VertDataAdd(float* %390, float* %394, %struct.CCGSubSurf* %395), !dbg !3564
  br label %if.end312, !dbg !3565

if.end312:                                        ; preds = %if.then308, %if.else305
  br label %if.end313

if.end313:                                        ; preds = %if.end312, %if.end304
  br label %for.inc314, !dbg !3566

for.inc314:                                       ; preds = %if.end313
  %396 = load i32, i32* %i, align 4, !dbg !3567
  %inc315 = add nsw i32 %396, 1, !dbg !3567
  store i32 %inc315, i32* %i, align 4, !dbg !3567
  br label %for.cond285, !dbg !3568, !llvm.loop !3569

for.end316:                                       ; preds = %for.cond285
  %397 = load i8*, i8** %q, align 8, !dbg !3571
  %398 = bitcast i8* %397 to float*, !dbg !3571
  %399 = load i32, i32* %sharpCount, align 4, !dbg !3572
  %conv317 = sitofp i32 %399 to float, !dbg !3572
  %div318 = fdiv float 1.000000e+00, %conv317, !dbg !3573
  %400 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !3574
  call void @VertDataMulN(float* %398, float %div318, %struct.CCGSubSurf* %400), !dbg !3575
  %401 = load i32, i32* %sharpCount, align 4, !dbg !3576
  %cmp319 = icmp ne i32 %401, 2, !dbg !3578
  br i1 %cmp319, label %if.then323, label %lor.lhs.false321, !dbg !3579

lor.lhs.false321:                                 ; preds = %for.end316
  %402 = load i32, i32* %allSharp, align 4, !dbg !3580
  %tobool322 = icmp ne i32 %402, 0, !dbg !3580
  br i1 %tobool322, label %if.then323, label %if.end324, !dbg !3581

if.then323:                                       ; preds = %lor.lhs.false321, %for.end316
  %403 = load i8*, i8** %r, align 8, !dbg !3582
  %404 = bitcast i8* %403 to float*, !dbg !3582
  %405 = load i8*, i8** %co152, align 8, !dbg !3584
  %406 = bitcast i8* %405 to float*, !dbg !3584
  %407 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !3585
  call void @VertDataCopy(float* %404, float* %406, %struct.CCGSubSurf* %407), !dbg !3586
  %408 = load i8*, i8** %r, align 8, !dbg !3587
  %409 = bitcast i8* %408 to float*, !dbg !3587
  %410 = load i8*, i8** %q, align 8, !dbg !3588
  %411 = bitcast i8* %410 to float*, !dbg !3588
  %412 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !3589
  call void @VertDataSub(float* %409, float* %411, %struct.CCGSubSurf* %412), !dbg !3590
  %413 = load i8*, i8** %r, align 8, !dbg !3591
  %414 = bitcast i8* %413 to float*, !dbg !3591
  %415 = load float, float* %avgSharpness, align 4, !dbg !3592
  %416 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !3593
  call void @VertDataMulN(float* %414, float %415, %struct.CCGSubSurf* %416), !dbg !3594
  %417 = load i8*, i8** %q, align 8, !dbg !3595
  %418 = bitcast i8* %417 to float*, !dbg !3595
  %419 = load i8*, i8** %r, align 8, !dbg !3596
  %420 = bitcast i8* %419 to float*, !dbg !3596
  %421 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !3597
  call void @VertDataAdd(float* %418, float* %420, %struct.CCGSubSurf* %421), !dbg !3598
  br label %if.end324, !dbg !3599

if.end324:                                        ; preds = %if.then323, %lor.lhs.false321
  %422 = load i8*, i8** %r, align 8, !dbg !3600
  %423 = bitcast i8* %422 to float*, !dbg !3600
  %424 = load i8*, i8** %co152, align 8, !dbg !3601
  %425 = bitcast i8* %424 to float*, !dbg !3601
  %426 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !3602
  call void @VertDataCopy(float* %423, float* %425, %struct.CCGSubSurf* %426), !dbg !3603
  %427 = load i8*, i8** %r, align 8, !dbg !3604
  %428 = bitcast i8* %427 to float*, !dbg !3604
  %429 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !3605
  call void @VertDataMulN(float* %428, float 7.500000e-01, %struct.CCGSubSurf* %429), !dbg !3606
  %430 = load i8*, i8** %q, align 8, !dbg !3607
  %431 = bitcast i8* %430 to float*, !dbg !3607
  %432 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !3608
  call void @VertDataMulN(float* %431, float 2.500000e-01, %struct.CCGSubSurf* %432), !dbg !3609
  %433 = load i8*, i8** %r, align 8, !dbg !3610
  %434 = bitcast i8* %433 to float*, !dbg !3610
  %435 = load i8*, i8** %q, align 8, !dbg !3611
  %436 = bitcast i8* %435 to float*, !dbg !3611
  %437 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !3612
  call void @VertDataAdd(float* %434, float* %436, %struct.CCGSubSurf* %437), !dbg !3613
  %438 = load i8*, i8** %r, align 8, !dbg !3614
  %439 = bitcast i8* %438 to float*, !dbg !3614
  %440 = load i8*, i8** %nCo, align 8, !dbg !3615
  %441 = bitcast i8* %440 to float*, !dbg !3615
  %442 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !3616
  call void @VertDataSub(float* %439, float* %441, %struct.CCGSubSurf* %442), !dbg !3617
  %443 = load i8*, i8** %r, align 8, !dbg !3618
  %444 = bitcast i8* %443 to float*, !dbg !3618
  %445 = load float, float* %avgSharpness, align 4, !dbg !3619
  %446 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !3620
  call void @VertDataMulN(float* %444, float %445, %struct.CCGSubSurf* %446), !dbg !3621
  %447 = load i8*, i8** %nCo, align 8, !dbg !3622
  %448 = bitcast i8* %447 to float*, !dbg !3622
  %449 = load i8*, i8** %r, align 8, !dbg !3623
  %450 = bitcast i8* %449 to float*, !dbg !3623
  %451 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !3624
  call void @VertDataAdd(float* %448, float* %450, %struct.CCGSubSurf* %451), !dbg !3625
  br label %if.end325, !dbg !3626

if.end325:                                        ; preds = %if.end324, %lor.lhs.false279
  br label %for.inc326, !dbg !3627

for.inc326:                                       ; preds = %if.end325
  %452 = load i32, i32* %ptrIdx, align 4, !dbg !3628
  %inc327 = add nsw i32 %452, 1, !dbg !3628
  store i32 %inc327, i32* %ptrIdx, align 4, !dbg !3628
  br label %for.cond145, !dbg !3629, !llvm.loop !3630

for.end328:                                       ; preds = %for.cond145
  %453 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !3632
  %useAgeCounts = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %453, i32 0, i32 18, !dbg !3634
  %454 = load i32, i32* %useAgeCounts, align 4, !dbg !3634
  %tobool329 = icmp ne i32 %454, 0, !dbg !3632
  br i1 %tobool329, label %if.then330, label %if.end374, !dbg !3635

if.then330:                                       ; preds = %for.end328
  store i32 0, i32* %i, align 4, !dbg !3636
  br label %for.cond331, !dbg !3639

for.cond331:                                      ; preds = %for.inc341, %if.then330
  %455 = load i32, i32* %i, align 4, !dbg !3640
  %456 = load i32, i32* %numEffectedV, align 4, !dbg !3642
  %cmp332 = icmp slt i32 %455, %456, !dbg !3643
  br i1 %cmp332, label %for.body334, label %for.end343, !dbg !3644

for.body334:                                      ; preds = %for.cond331
  call void @llvm.dbg.declare(metadata %struct.CCGVert** %v335, metadata !3645, metadata !DIExpression()), !dbg !3647
  %457 = load %struct.CCGVert**, %struct.CCGVert*** %effectedV, align 8, !dbg !3648
  %458 = load i32, i32* %i, align 4, !dbg !3649
  %idxprom336 = sext i32 %458 to i64, !dbg !3648
  %arrayidx337 = getelementptr inbounds %struct.CCGVert*, %struct.CCGVert** %457, i64 %idxprom336, !dbg !3648
  %459 = load %struct.CCGVert*, %struct.CCGVert** %arrayidx337, align 8, !dbg !3648
  store %struct.CCGVert* %459, %struct.CCGVert** %v335, align 8, !dbg !3647
  call void @llvm.dbg.declare(metadata i8** %userData, metadata !3650, metadata !DIExpression()), !dbg !3651
  %460 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !3652
  %461 = load %struct.CCGVert*, %struct.CCGVert** %v335, align 8, !dbg !3653
  %call338 = call i8* @ccgSubSurf_getVertUserData(%struct.CCGSubSurf* %460, %struct.CCGVert* %461), !dbg !3654
  store i8* %call338, i8** %userData, align 8, !dbg !3651
  %462 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !3655
  %currentAge = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %462, i32 0, i32 17, !dbg !3656
  %463 = load i32, i32* %currentAge, align 8, !dbg !3656
  %464 = load i8*, i8** %userData, align 8, !dbg !3657
  %465 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !3658
  %vertUserAgeOffset = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %465, i32 0, i32 19, !dbg !3659
  %466 = load i32, i32* %vertUserAgeOffset, align 8, !dbg !3659
  %idxprom339 = sext i32 %466 to i64, !dbg !3657
  %arrayidx340 = getelementptr inbounds i8, i8* %464, i64 %idxprom339, !dbg !3657
  %467 = bitcast i8* %arrayidx340 to i32*, !dbg !3660
  store i32 %463, i32* %467, align 4, !dbg !3661
  br label %for.inc341, !dbg !3662

for.inc341:                                       ; preds = %for.body334
  %468 = load i32, i32* %i, align 4, !dbg !3663
  %inc342 = add nsw i32 %468, 1, !dbg !3663
  store i32 %inc342, i32* %i, align 4, !dbg !3663
  br label %for.cond331, !dbg !3664, !llvm.loop !3665

for.end343:                                       ; preds = %for.cond331
  store i32 0, i32* %i, align 4, !dbg !3667
  br label %for.cond344, !dbg !3669

for.cond344:                                      ; preds = %for.inc356, %for.end343
  %469 = load i32, i32* %i, align 4, !dbg !3670
  %470 = load i32, i32* %numEffectedE, align 4, !dbg !3672
  %cmp345 = icmp slt i32 %469, %470, !dbg !3673
  br i1 %cmp345, label %for.body347, label %for.end358, !dbg !3674

for.body347:                                      ; preds = %for.cond344
  call void @llvm.dbg.declare(metadata %struct.CCGEdge** %e348, metadata !3675, metadata !DIExpression()), !dbg !3677
  %471 = load %struct.CCGEdge**, %struct.CCGEdge*** %effectedE, align 8, !dbg !3678
  %472 = load i32, i32* %i, align 4, !dbg !3679
  %idxprom349 = sext i32 %472 to i64, !dbg !3678
  %arrayidx350 = getelementptr inbounds %struct.CCGEdge*, %struct.CCGEdge** %471, i64 %idxprom349, !dbg !3678
  %473 = load %struct.CCGEdge*, %struct.CCGEdge** %arrayidx350, align 8, !dbg !3678
  store %struct.CCGEdge* %473, %struct.CCGEdge** %e348, align 8, !dbg !3677
  call void @llvm.dbg.declare(metadata i8** %userData351, metadata !3680, metadata !DIExpression()), !dbg !3681
  %474 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !3682
  %475 = load %struct.CCGEdge*, %struct.CCGEdge** %e348, align 8, !dbg !3683
  %call352 = call i8* @ccgSubSurf_getEdgeUserData(%struct.CCGSubSurf* %474, %struct.CCGEdge* %475), !dbg !3684
  store i8* %call352, i8** %userData351, align 8, !dbg !3681
  %476 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !3685
  %currentAge353 = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %476, i32 0, i32 17, !dbg !3686
  %477 = load i32, i32* %currentAge353, align 8, !dbg !3686
  %478 = load i8*, i8** %userData351, align 8, !dbg !3687
  %479 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !3688
  %edgeUserAgeOffset = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %479, i32 0, i32 20, !dbg !3689
  %480 = load i32, i32* %edgeUserAgeOffset, align 4, !dbg !3689
  %idxprom354 = sext i32 %480 to i64, !dbg !3687
  %arrayidx355 = getelementptr inbounds i8, i8* %478, i64 %idxprom354, !dbg !3687
  %481 = bitcast i8* %arrayidx355 to i32*, !dbg !3690
  store i32 %477, i32* %481, align 4, !dbg !3691
  br label %for.inc356, !dbg !3692

for.inc356:                                       ; preds = %for.body347
  %482 = load i32, i32* %i, align 4, !dbg !3693
  %inc357 = add nsw i32 %482, 1, !dbg !3693
  store i32 %inc357, i32* %i, align 4, !dbg !3693
  br label %for.cond344, !dbg !3694, !llvm.loop !3695

for.end358:                                       ; preds = %for.cond344
  store i32 0, i32* %i, align 4, !dbg !3697
  br label %for.cond359, !dbg !3699

for.cond359:                                      ; preds = %for.inc371, %for.end358
  %483 = load i32, i32* %i, align 4, !dbg !3700
  %484 = load i32, i32* %numEffectedF, align 4, !dbg !3702
  %cmp360 = icmp slt i32 %483, %484, !dbg !3703
  br i1 %cmp360, label %for.body362, label %for.end373, !dbg !3704

for.body362:                                      ; preds = %for.cond359
  call void @llvm.dbg.declare(metadata %struct.CCGFace** %f363, metadata !3705, metadata !DIExpression()), !dbg !3707
  %485 = load %struct.CCGFace**, %struct.CCGFace*** %effectedF, align 8, !dbg !3708
  %486 = load i32, i32* %i, align 4, !dbg !3709
  %idxprom364 = sext i32 %486 to i64, !dbg !3708
  %arrayidx365 = getelementptr inbounds %struct.CCGFace*, %struct.CCGFace** %485, i64 %idxprom364, !dbg !3708
  %487 = load %struct.CCGFace*, %struct.CCGFace** %arrayidx365, align 8, !dbg !3708
  store %struct.CCGFace* %487, %struct.CCGFace** %f363, align 8, !dbg !3707
  call void @llvm.dbg.declare(metadata i8** %userData366, metadata !3710, metadata !DIExpression()), !dbg !3711
  %488 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !3712
  %489 = load %struct.CCGFace*, %struct.CCGFace** %f363, align 8, !dbg !3713
  %call367 = call i8* @ccgSubSurf_getFaceUserData(%struct.CCGSubSurf* %488, %struct.CCGFace* %489), !dbg !3714
  store i8* %call367, i8** %userData366, align 8, !dbg !3711
  %490 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !3715
  %currentAge368 = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %490, i32 0, i32 17, !dbg !3716
  %491 = load i32, i32* %currentAge368, align 8, !dbg !3716
  %492 = load i8*, i8** %userData366, align 8, !dbg !3717
  %493 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !3718
  %faceUserAgeOffset = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %493, i32 0, i32 21, !dbg !3719
  %494 = load i32, i32* %faceUserAgeOffset, align 8, !dbg !3719
  %idxprom369 = sext i32 %494 to i64, !dbg !3717
  %arrayidx370 = getelementptr inbounds i8, i8* %492, i64 %idxprom369, !dbg !3717
  %495 = bitcast i8* %arrayidx370 to i32*, !dbg !3720
  store i32 %491, i32* %495, align 4, !dbg !3721
  br label %for.inc371, !dbg !3722

for.inc371:                                       ; preds = %for.body362
  %496 = load i32, i32* %i, align 4, !dbg !3723
  %inc372 = add nsw i32 %496, 1, !dbg !3723
  store i32 %inc372, i32* %i, align 4, !dbg !3723
  br label %for.cond359, !dbg !3724, !llvm.loop !3725

for.end373:                                       ; preds = %for.cond359
  br label %if.end374, !dbg !3727

if.end374:                                        ; preds = %for.end373, %for.end328
  store i32 0, i32* %i, align 4, !dbg !3728
  br label %for.cond375, !dbg !3730

for.cond375:                                      ; preds = %for.inc388, %if.end374
  %497 = load i32, i32* %i, align 4, !dbg !3731
  %498 = load i32, i32* %numEffectedE, align 4, !dbg !3733
  %cmp376 = icmp slt i32 %497, %498, !dbg !3734
  br i1 %cmp376, label %for.body378, label %for.end390, !dbg !3735

for.body378:                                      ; preds = %for.cond375
  call void @llvm.dbg.declare(metadata %struct.CCGEdge** %e379, metadata !3736, metadata !DIExpression()), !dbg !3738
  %499 = load %struct.CCGEdge**, %struct.CCGEdge*** %effectedE, align 8, !dbg !3739
  %500 = load i32, i32* %i, align 4, !dbg !3740
  %idxprom380 = sext i32 %500 to i64, !dbg !3739
  %arrayidx381 = getelementptr inbounds %struct.CCGEdge*, %struct.CCGEdge** %499, i64 %idxprom380, !dbg !3739
  %501 = load %struct.CCGEdge*, %struct.CCGEdge** %arrayidx381, align 8, !dbg !3739
  store %struct.CCGEdge* %501, %struct.CCGEdge** %e379, align 8, !dbg !3738
  %502 = load %struct.CCGEdge*, %struct.CCGEdge** %e379, align 8, !dbg !3741
  %503 = load i32, i32* %nextLvl, align 4, !dbg !3741
  %504 = load i32, i32* %vertDataSize, align 4, !dbg !3741
  %call382 = call i8* @_edge_getCo(%struct.CCGEdge* %502, i32 %503, i32 0, i32 %504), !dbg !3741
  %505 = bitcast i8* %call382 to float*, !dbg !3741
  %506 = load %struct.CCGEdge*, %struct.CCGEdge** %e379, align 8, !dbg !3742
  %v0383 = getelementptr inbounds %struct.CCGEdge, %struct.CCGEdge* %506, i32 0, i32 5, !dbg !3742
  %507 = load %struct.CCGVert*, %struct.CCGVert** %v0383, align 8, !dbg !3742
  %508 = load i32, i32* %nextLvl, align 4, !dbg !3742
  %509 = load i32, i32* %vertDataSize, align 4, !dbg !3742
  %call384 = call i8* @_vert_getCo(%struct.CCGVert* %507, i32 %508, i32 %509), !dbg !3742
  %510 = bitcast i8* %call384 to float*, !dbg !3742
  %511 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !3743
  call void @VertDataCopy(float* %505, float* %510, %struct.CCGSubSurf* %511), !dbg !3744
  %512 = load %struct.CCGEdge*, %struct.CCGEdge** %e379, align 8, !dbg !3745
  %513 = load i32, i32* %nextLvl, align 4, !dbg !3745
  %514 = load i32, i32* %vertDataSize, align 4, !dbg !3745
  %call385 = call i8* @_edge_getCo(%struct.CCGEdge* %512, i32 %513, i32 2, i32 %514), !dbg !3745
  %515 = bitcast i8* %call385 to float*, !dbg !3745
  %516 = load %struct.CCGEdge*, %struct.CCGEdge** %e379, align 8, !dbg !3746
  %v1386 = getelementptr inbounds %struct.CCGEdge, %struct.CCGEdge* %516, i32 0, i32 6, !dbg !3746
  %517 = load %struct.CCGVert*, %struct.CCGVert** %v1386, align 8, !dbg !3746
  %518 = load i32, i32* %nextLvl, align 4, !dbg !3746
  %519 = load i32, i32* %vertDataSize, align 4, !dbg !3746
  %call387 = call i8* @_vert_getCo(%struct.CCGVert* %517, i32 %518, i32 %519), !dbg !3746
  %520 = bitcast i8* %call387 to float*, !dbg !3746
  %521 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !3747
  call void @VertDataCopy(float* %515, float* %520, %struct.CCGSubSurf* %521), !dbg !3748
  br label %for.inc388, !dbg !3749

for.inc388:                                       ; preds = %for.body378
  %522 = load i32, i32* %i, align 4, !dbg !3750
  %inc389 = add nsw i32 %522, 1, !dbg !3750
  store i32 %inc389, i32* %i, align 4, !dbg !3750
  br label %for.cond375, !dbg !3751, !llvm.loop !3752

for.end390:                                       ; preds = %for.cond375
  store i32 0, i32* %i, align 4, !dbg !3754
  br label %for.cond391, !dbg !3756

for.cond391:                                      ; preds = %for.inc444, %for.end390
  %523 = load i32, i32* %i, align 4, !dbg !3757
  %524 = load i32, i32* %numEffectedF, align 4, !dbg !3759
  %cmp392 = icmp slt i32 %523, %524, !dbg !3760
  br i1 %cmp392, label %for.body394, label %for.end446, !dbg !3761

for.body394:                                      ; preds = %for.cond391
  call void @llvm.dbg.declare(metadata %struct.CCGFace** %f395, metadata !3762, metadata !DIExpression()), !dbg !3764
  %525 = load %struct.CCGFace**, %struct.CCGFace*** %effectedF, align 8, !dbg !3765
  %526 = load i32, i32* %i, align 4, !dbg !3766
  %idxprom396 = sext i32 %526 to i64, !dbg !3765
  %arrayidx397 = getelementptr inbounds %struct.CCGFace*, %struct.CCGFace** %525, i64 %idxprom396, !dbg !3765
  %527 = load %struct.CCGFace*, %struct.CCGFace** %arrayidx397, align 8, !dbg !3765
  store %struct.CCGFace* %527, %struct.CCGFace** %f395, align 8, !dbg !3764
  store i32 0, i32* %S, align 4, !dbg !3767
  br label %for.cond398, !dbg !3769

for.cond398:                                      ; preds = %for.inc441, %for.body394
  %528 = load i32, i32* %S, align 4, !dbg !3770
  %529 = load %struct.CCGFace*, %struct.CCGFace** %f395, align 8, !dbg !3772
  %numVerts399 = getelementptr inbounds %struct.CCGFace, %struct.CCGFace* %529, i32 0, i32 2, !dbg !3773
  %530 = load i16, i16* %numVerts399, align 8, !dbg !3773
  %conv400 = sext i16 %530 to i32, !dbg !3772
  %cmp401 = icmp slt i32 %528, %conv400, !dbg !3774
  br i1 %cmp401, label %for.body403, label %for.end443, !dbg !3775

for.body403:                                      ; preds = %for.cond398
  call void @llvm.dbg.declare(metadata %struct.CCGEdge** %e404, metadata !3776, metadata !DIExpression()), !dbg !3778
  %531 = load %struct.CCGFace*, %struct.CCGFace** %f395, align 8, !dbg !3779
  %call405 = call %struct.CCGEdge** @FACE_getEdges(%struct.CCGFace* %531), !dbg !3780
  %532 = load i32, i32* %S, align 4, !dbg !3781
  %idxprom406 = sext i32 %532 to i64, !dbg !3780
  %arrayidx407 = getelementptr inbounds %struct.CCGEdge*, %struct.CCGEdge** %call405, i64 %idxprom406, !dbg !3780
  %533 = load %struct.CCGEdge*, %struct.CCGEdge** %arrayidx407, align 8, !dbg !3780
  store %struct.CCGEdge* %533, %struct.CCGEdge** %e404, align 8, !dbg !3778
  call void @llvm.dbg.declare(metadata %struct.CCGEdge** %prevE, metadata !3782, metadata !DIExpression()), !dbg !3783
  %534 = load %struct.CCGFace*, %struct.CCGFace** %f395, align 8, !dbg !3784
  %call408 = call %struct.CCGEdge** @FACE_getEdges(%struct.CCGFace* %534), !dbg !3785
  %535 = load i32, i32* %S, align 4, !dbg !3786
  %536 = load %struct.CCGFace*, %struct.CCGFace** %f395, align 8, !dbg !3787
  %numVerts409 = getelementptr inbounds %struct.CCGFace, %struct.CCGFace* %536, i32 0, i32 2, !dbg !3788
  %537 = load i16, i16* %numVerts409, align 8, !dbg !3788
  %conv410 = sext i16 %537 to i32, !dbg !3787
  %add411 = add nsw i32 %535, %conv410, !dbg !3789
  %sub412 = sub nsw i32 %add411, 1, !dbg !3790
  %538 = load %struct.CCGFace*, %struct.CCGFace** %f395, align 8, !dbg !3791
  %numVerts413 = getelementptr inbounds %struct.CCGFace, %struct.CCGFace* %538, i32 0, i32 2, !dbg !3792
  %539 = load i16, i16* %numVerts413, align 8, !dbg !3792
  %conv414 = sext i16 %539 to i32, !dbg !3791
  %rem = srem i32 %sub412, %conv414, !dbg !3793
  %idxprom415 = sext i32 %rem to i64, !dbg !3785
  %arrayidx416 = getelementptr inbounds %struct.CCGEdge*, %struct.CCGEdge** %call408, i64 %idxprom415, !dbg !3785
  %540 = load %struct.CCGEdge*, %struct.CCGEdge** %arrayidx416, align 8, !dbg !3785
  store %struct.CCGEdge* %540, %struct.CCGEdge** %prevE, align 8, !dbg !3783
  %541 = load %struct.CCGFace*, %struct.CCGFace** %f395, align 8, !dbg !3794
  %542 = load i32, i32* %nextLvl, align 4, !dbg !3794
  %543 = load i32, i32* %S, align 4, !dbg !3794
  %544 = load i32, i32* %subdivLevels, align 4, !dbg !3794
  %545 = load i32, i32* %vertDataSize, align 4, !dbg !3794
  %call417 = call i8* @_face_getIFCo(%struct.CCGFace* %541, i32 %542, i32 %543, i32 0, i32 0, i32 %544, i32 %545), !dbg !3794
  %546 = bitcast i8* %call417 to float*, !dbg !3794
  %547 = load %struct.CCGFace*, %struct.CCGFace** %f395, align 8, !dbg !3795
  %call418 = call i8* @FACE_getCenterData(%struct.CCGFace* %547), !dbg !3796
  %548 = bitcast i8* %call418 to float*, !dbg !3797
  %549 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !3798
  call void @VertDataCopy(float* %546, float* %548, %struct.CCGSubSurf* %549), !dbg !3799
  %550 = load %struct.CCGFace*, %struct.CCGFace** %f395, align 8, !dbg !3800
  %551 = load i32, i32* %nextLvl, align 4, !dbg !3800
  %552 = load i32, i32* %S, align 4, !dbg !3800
  %553 = load i32, i32* %subdivLevels, align 4, !dbg !3800
  %554 = load i32, i32* %vertDataSize, align 4, !dbg !3800
  %call419 = call i8* @_face_getIECo(%struct.CCGFace* %550, i32 %551, i32 %552, i32 0, i32 %553, i32 %554), !dbg !3800
  %555 = bitcast i8* %call419 to float*, !dbg !3800
  %556 = load %struct.CCGFace*, %struct.CCGFace** %f395, align 8, !dbg !3801
  %call420 = call i8* @FACE_getCenterData(%struct.CCGFace* %556), !dbg !3802
  %557 = bitcast i8* %call420 to float*, !dbg !3803
  %558 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !3804
  call void @VertDataCopy(float* %555, float* %557, %struct.CCGSubSurf* %558), !dbg !3805
  %559 = load %struct.CCGFace*, %struct.CCGFace** %f395, align 8, !dbg !3806
  %560 = load i32, i32* %nextLvl, align 4, !dbg !3806
  %561 = load i32, i32* %S, align 4, !dbg !3806
  %562 = load i32, i32* %subdivLevels, align 4, !dbg !3806
  %563 = load i32, i32* %vertDataSize, align 4, !dbg !3806
  %call421 = call i8* @_face_getIFCo(%struct.CCGFace* %559, i32 %560, i32 %561, i32 1, i32 1, i32 %562, i32 %563), !dbg !3806
  %564 = bitcast i8* %call421 to float*, !dbg !3806
  %565 = load %struct.CCGFace*, %struct.CCGFace** %f395, align 8, !dbg !3807
  %call422 = call %struct.CCGVert** @FACE_getVerts(%struct.CCGFace* %565), !dbg !3807
  %566 = load i32, i32* %S, align 4, !dbg !3807
  %idxprom423 = sext i32 %566 to i64, !dbg !3807
  %arrayidx424 = getelementptr inbounds %struct.CCGVert*, %struct.CCGVert** %call422, i64 %idxprom423, !dbg !3807
  %567 = load %struct.CCGVert*, %struct.CCGVert** %arrayidx424, align 8, !dbg !3807
  %568 = load i32, i32* %nextLvl, align 4, !dbg !3807
  %569 = load i32, i32* %vertDataSize, align 4, !dbg !3807
  %call425 = call i8* @_vert_getCo(%struct.CCGVert* %567, i32 %568, i32 %569), !dbg !3807
  %570 = bitcast i8* %call425 to float*, !dbg !3807
  %571 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !3808
  call void @VertDataCopy(float* %564, float* %570, %struct.CCGSubSurf* %571), !dbg !3809
  %572 = load %struct.CCGFace*, %struct.CCGFace** %f395, align 8, !dbg !3810
  %573 = load i32, i32* %nextLvl, align 4, !dbg !3810
  %574 = load i32, i32* %S, align 4, !dbg !3810
  %575 = load i32, i32* %subdivLevels, align 4, !dbg !3810
  %576 = load i32, i32* %vertDataSize, align 4, !dbg !3810
  %call426 = call i8* @_face_getIECo(%struct.CCGFace* %572, i32 %573, i32 %574, i32 1, i32 %575, i32 %576), !dbg !3810
  %577 = bitcast i8* %call426 to float*, !dbg !3810
  %578 = load %struct.CCGFace*, %struct.CCGFace** %f395, align 8, !dbg !3811
  %call427 = call %struct.CCGEdge** @FACE_getEdges(%struct.CCGFace* %578), !dbg !3811
  %579 = load i32, i32* %S, align 4, !dbg !3811
  %idxprom428 = sext i32 %579 to i64, !dbg !3811
  %arrayidx429 = getelementptr inbounds %struct.CCGEdge*, %struct.CCGEdge** %call427, i64 %idxprom428, !dbg !3811
  %580 = load %struct.CCGEdge*, %struct.CCGEdge** %arrayidx429, align 8, !dbg !3811
  %581 = load i32, i32* %nextLvl, align 4, !dbg !3811
  %582 = load i32, i32* %vertDataSize, align 4, !dbg !3811
  %call430 = call i8* @_edge_getCo(%struct.CCGEdge* %580, i32 %581, i32 1, i32 %582), !dbg !3811
  %583 = bitcast i8* %call430 to float*, !dbg !3811
  %584 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !3812
  call void @VertDataCopy(float* %577, float* %583, %struct.CCGSubSurf* %584), !dbg !3813
  %585 = load %struct.CCGFace*, %struct.CCGFace** %f395, align 8, !dbg !3814
  %586 = load i32, i32* %nextLvl, align 4, !dbg !3814
  %587 = load i32, i32* %S, align 4, !dbg !3814
  %588 = load i32, i32* %subdivLevels, align 4, !dbg !3814
  %589 = load i32, i32* %vertDataSize, align 4, !dbg !3814
  %call431 = call i8* @_face_getIFCo(%struct.CCGFace* %585, i32 %586, i32 %587, i32 1, i32 0, i32 %588, i32 %589), !dbg !3814
  %590 = bitcast i8* %call431 to float*, !dbg !3814
  %591 = load %struct.CCGEdge*, %struct.CCGEdge** %e404, align 8, !dbg !3815
  %592 = load %struct.CCGFace*, %struct.CCGFace** %f395, align 8, !dbg !3816
  %call432 = call %struct.CCGVert** @FACE_getVerts(%struct.CCGFace* %592), !dbg !3817
  %593 = load i32, i32* %S, align 4, !dbg !3818
  %idxprom433 = sext i32 %593 to i64, !dbg !3817
  %arrayidx434 = getelementptr inbounds %struct.CCGVert*, %struct.CCGVert** %call432, i64 %idxprom433, !dbg !3817
  %594 = load %struct.CCGVert*, %struct.CCGVert** %arrayidx434, align 8, !dbg !3817
  %595 = load i32, i32* %nextLvl, align 4, !dbg !3819
  %596 = load i32, i32* %vertDataSize, align 4, !dbg !3820
  %call435 = call i8* @_edge_getCoVert(%struct.CCGEdge* %591, %struct.CCGVert* %594, i32 %595, i32 1, i32 %596), !dbg !3821
  %597 = bitcast i8* %call435 to float*, !dbg !3821
  %598 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !3822
  call void @VertDataCopy(float* %590, float* %597, %struct.CCGSubSurf* %598), !dbg !3823
  %599 = load %struct.CCGFace*, %struct.CCGFace** %f395, align 8, !dbg !3824
  %600 = load i32, i32* %nextLvl, align 4, !dbg !3824
  %601 = load i32, i32* %S, align 4, !dbg !3824
  %602 = load i32, i32* %subdivLevels, align 4, !dbg !3824
  %603 = load i32, i32* %vertDataSize, align 4, !dbg !3824
  %call436 = call i8* @_face_getIFCo(%struct.CCGFace* %599, i32 %600, i32 %601, i32 0, i32 1, i32 %602, i32 %603), !dbg !3824
  %604 = bitcast i8* %call436 to float*, !dbg !3824
  %605 = load %struct.CCGEdge*, %struct.CCGEdge** %prevE, align 8, !dbg !3825
  %606 = load %struct.CCGFace*, %struct.CCGFace** %f395, align 8, !dbg !3826
  %call437 = call %struct.CCGVert** @FACE_getVerts(%struct.CCGFace* %606), !dbg !3827
  %607 = load i32, i32* %S, align 4, !dbg !3828
  %idxprom438 = sext i32 %607 to i64, !dbg !3827
  %arrayidx439 = getelementptr inbounds %struct.CCGVert*, %struct.CCGVert** %call437, i64 %idxprom438, !dbg !3827
  %608 = load %struct.CCGVert*, %struct.CCGVert** %arrayidx439, align 8, !dbg !3827
  %609 = load i32, i32* %nextLvl, align 4, !dbg !3829
  %610 = load i32, i32* %vertDataSize, align 4, !dbg !3830
  %call440 = call i8* @_edge_getCoVert(%struct.CCGEdge* %605, %struct.CCGVert* %608, i32 %609, i32 1, i32 %610), !dbg !3831
  %611 = bitcast i8* %call440 to float*, !dbg !3831
  %612 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !3832
  call void @VertDataCopy(float* %604, float* %611, %struct.CCGSubSurf* %612), !dbg !3833
  br label %for.inc441, !dbg !3834

for.inc441:                                       ; preds = %for.body403
  %613 = load i32, i32* %S, align 4, !dbg !3835
  %inc442 = add nsw i32 %613, 1, !dbg !3835
  store i32 %inc442, i32* %S, align 4, !dbg !3835
  br label %for.cond398, !dbg !3836, !llvm.loop !3837

for.end443:                                       ; preds = %for.cond398
  br label %for.inc444, !dbg !3839

for.inc444:                                       ; preds = %for.end443
  %614 = load i32, i32* %i, align 4, !dbg !3840
  %inc445 = add nsw i32 %614, 1, !dbg !3840
  store i32 %inc445, i32* %i, align 4, !dbg !3840
  br label %for.cond391, !dbg !3841, !llvm.loop !3842

for.end446:                                       ; preds = %for.cond391
  store i32 1, i32* %curLvl, align 4, !dbg !3844
  br label %for.cond447, !dbg !3846

for.cond447:                                      ; preds = %for.inc451, %for.end446
  %615 = load i32, i32* %curLvl, align 4, !dbg !3847
  %616 = load i32, i32* %subdivLevels, align 4, !dbg !3849
  %cmp448 = icmp slt i32 %615, %616, !dbg !3850
  br i1 %cmp448, label %for.body450, label %for.end453, !dbg !3851

for.body450:                                      ; preds = %for.cond447
  %617 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !3852
  %618 = load %struct.CCGVert**, %struct.CCGVert*** %effectedV, align 8, !dbg !3854
  %619 = load %struct.CCGEdge**, %struct.CCGEdge*** %effectedE, align 8, !dbg !3855
  %620 = load %struct.CCGFace**, %struct.CCGFace*** %effectedF, align 8, !dbg !3856
  %621 = load i32, i32* %numEffectedV, align 4, !dbg !3857
  %622 = load i32, i32* %numEffectedE, align 4, !dbg !3858
  %623 = load i32, i32* %numEffectedF, align 4, !dbg !3859
  %624 = load i32, i32* %curLvl, align 4, !dbg !3860
  call void @ccgSubSurf__calcSubdivLevel(%struct.CCGSubSurf* %617, %struct.CCGVert** %618, %struct.CCGEdge** %619, %struct.CCGFace** %620, i32 %621, i32 %622, i32 %623, i32 %624), !dbg !3861
  br label %for.inc451, !dbg !3862

for.inc451:                                       ; preds = %for.body450
  %625 = load i32, i32* %curLvl, align 4, !dbg !3863
  %inc452 = add nsw i32 %625, 1, !dbg !3863
  store i32 %inc452, i32* %curLvl, align 4, !dbg !3863
  br label %for.cond447, !dbg !3864, !llvm.loop !3865

for.end453:                                       ; preds = %for.cond447
  %626 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !3867
  %calcVertNormals = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %626, i32 0, i32 13, !dbg !3869
  %627 = load i32, i32* %calcVertNormals, align 8, !dbg !3869
  %tobool454 = icmp ne i32 %627, 0, !dbg !3867
  br i1 %tobool454, label %if.then455, label %if.end456, !dbg !3870

if.then455:                                       ; preds = %for.end453
  %628 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !3871
  %629 = load %struct.CCGVert**, %struct.CCGVert*** %effectedV, align 8, !dbg !3872
  %630 = load %struct.CCGEdge**, %struct.CCGEdge*** %effectedE, align 8, !dbg !3873
  %631 = load %struct.CCGFace**, %struct.CCGFace*** %effectedF, align 8, !dbg !3874
  %632 = load i32, i32* %numEffectedV, align 4, !dbg !3875
  %633 = load i32, i32* %numEffectedE, align 4, !dbg !3876
  %634 = load i32, i32* %numEffectedF, align 4, !dbg !3877
  call void @ccgSubSurf__calcVertNormals(%struct.CCGSubSurf* %628, %struct.CCGVert** %629, %struct.CCGEdge** %630, %struct.CCGFace** %631, i32 %632, i32 %633, i32 %634), !dbg !3878
  br label %if.end456, !dbg !3878

if.end456:                                        ; preds = %if.then455, %for.end453
  store i32 0, i32* %ptrIdx, align 4, !dbg !3879
  br label %for.cond457, !dbg !3881

for.cond457:                                      ; preds = %for.inc465, %if.end456
  %635 = load i32, i32* %ptrIdx, align 4, !dbg !3882
  %636 = load i32, i32* %numEffectedV, align 4, !dbg !3884
  %cmp458 = icmp slt i32 %635, %636, !dbg !3885
  br i1 %cmp458, label %for.body460, label %for.end467, !dbg !3886

for.body460:                                      ; preds = %for.cond457
  call void @llvm.dbg.declare(metadata %struct.CCGVert** %v461, metadata !3887, metadata !DIExpression()), !dbg !3889
  %637 = load %struct.CCGVert**, %struct.CCGVert*** %effectedV, align 8, !dbg !3890
  %638 = load i32, i32* %ptrIdx, align 4, !dbg !3891
  %idxprom462 = sext i32 %638 to i64, !dbg !3890
  %arrayidx463 = getelementptr inbounds %struct.CCGVert*, %struct.CCGVert** %637, i64 %idxprom462, !dbg !3890
  %639 = load %struct.CCGVert*, %struct.CCGVert** %arrayidx463, align 8, !dbg !3890
  store %struct.CCGVert* %639, %struct.CCGVert** %v461, align 8, !dbg !3889
  %640 = load %struct.CCGVert*, %struct.CCGVert** %v461, align 8, !dbg !3892
  %flags464 = getelementptr inbounds %struct.CCGVert, %struct.CCGVert* %640, i32 0, i32 4, !dbg !3893
  store i16 0, i16* %flags464, align 4, !dbg !3894
  br label %for.inc465, !dbg !3895

for.inc465:                                       ; preds = %for.body460
  %641 = load i32, i32* %ptrIdx, align 4, !dbg !3896
  %inc466 = add nsw i32 %641, 1, !dbg !3896
  store i32 %inc466, i32* %ptrIdx, align 4, !dbg !3896
  br label %for.cond457, !dbg !3897, !llvm.loop !3898

for.end467:                                       ; preds = %for.cond457
  store i32 0, i32* %ptrIdx, align 4, !dbg !3900
  br label %for.cond468, !dbg !3902

for.cond468:                                      ; preds = %for.inc476, %for.end467
  %642 = load i32, i32* %ptrIdx, align 4, !dbg !3903
  %643 = load i32, i32* %numEffectedE, align 4, !dbg !3905
  %cmp469 = icmp slt i32 %642, %643, !dbg !3906
  br i1 %cmp469, label %for.body471, label %for.end478, !dbg !3907

for.body471:                                      ; preds = %for.cond468
  call void @llvm.dbg.declare(metadata %struct.CCGEdge** %e472, metadata !3908, metadata !DIExpression()), !dbg !3910
  %644 = load %struct.CCGEdge**, %struct.CCGEdge*** %effectedE, align 8, !dbg !3911
  %645 = load i32, i32* %ptrIdx, align 4, !dbg !3912
  %idxprom473 = sext i32 %645 to i64, !dbg !3911
  %arrayidx474 = getelementptr inbounds %struct.CCGEdge*, %struct.CCGEdge** %644, i64 %idxprom473, !dbg !3911
  %646 = load %struct.CCGEdge*, %struct.CCGEdge** %arrayidx474, align 8, !dbg !3911
  store %struct.CCGEdge* %646, %struct.CCGEdge** %e472, align 8, !dbg !3910
  %647 = load %struct.CCGEdge*, %struct.CCGEdge** %e472, align 8, !dbg !3913
  %flags475 = getelementptr inbounds %struct.CCGEdge, %struct.CCGEdge* %647, i32 0, i32 3, !dbg !3914
  store i16 0, i16* %flags475, align 2, !dbg !3915
  br label %for.inc476, !dbg !3916

for.inc476:                                       ; preds = %for.body471
  %648 = load i32, i32* %ptrIdx, align 4, !dbg !3917
  %inc477 = add nsw i32 %648, 1, !dbg !3917
  store i32 %inc477, i32* %ptrIdx, align 4, !dbg !3917
  br label %for.cond468, !dbg !3918, !llvm.loop !3919

for.end478:                                       ; preds = %for.cond468
  %649 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !3921
  %650 = load %struct.CCGFace**, %struct.CCGFace*** %effectedF, align 8, !dbg !3922
  %651 = bitcast %struct.CCGFace** %650 to i8*, !dbg !3922
  call void %649(i8* %651), !dbg !3921
  %652 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !3923
  %653 = load %struct.CCGEdge**, %struct.CCGEdge*** %effectedE, align 8, !dbg !3924
  %654 = bitcast %struct.CCGEdge** %653 to i8*, !dbg !3924
  call void %652(i8* %654), !dbg !3923
  %655 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !3925
  %656 = load %struct.CCGVert**, %struct.CCGVert*** %effectedV, align 8, !dbg !3926
  %657 = bitcast %struct.CCGVert** %656 to i8*, !dbg !3926
  call void %655(i8* %657), !dbg !3925
  ret void, !dbg !3927
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @ccgSubSurf_updateFromFaces(%struct.CCGSubSurf* %ss, i32 %lvl, %struct.CCGFace** %effectedF, i32 %numEffectedF) #0 !dbg !3928 {
entry:
  %ss.addr = alloca %struct.CCGSubSurf*, align 8
  %lvl.addr = alloca i32, align 4
  %effectedF.addr = alloca %struct.CCGFace**, align 8
  %numEffectedF.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %S = alloca i32, align 4
  %x = alloca i32, align 4
  %gridSize = alloca i32, align 4
  %cornerIdx = alloca i32, align 4
  %subdivLevels = alloca i32, align 4
  %vertDataSize = alloca i32, align 4
  %freeF = alloca i32, align 4
  %f = alloca %struct.CCGFace*, align 8
  %e = alloca %struct.CCGEdge*, align 8
  %prevE = alloca %struct.CCGEdge*, align 8
  %eI = alloca i32, align 4
  store %struct.CCGSubSurf* %ss, %struct.CCGSubSurf** %ss.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGSubSurf** %ss.addr, metadata !3931, metadata !DIExpression()), !dbg !3932
  store i32 %lvl, i32* %lvl.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %lvl.addr, metadata !3933, metadata !DIExpression()), !dbg !3934
  store %struct.CCGFace** %effectedF, %struct.CCGFace*** %effectedF.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGFace*** %effectedF.addr, metadata !3935, metadata !DIExpression()), !dbg !3936
  store i32 %numEffectedF, i32* %numEffectedF.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %numEffectedF.addr, metadata !3937, metadata !DIExpression()), !dbg !3938
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3939, metadata !DIExpression()), !dbg !3940
  call void @llvm.dbg.declare(metadata i32* %S, metadata !3941, metadata !DIExpression()), !dbg !3942
  call void @llvm.dbg.declare(metadata i32* %x, metadata !3943, metadata !DIExpression()), !dbg !3944
  call void @llvm.dbg.declare(metadata i32* %gridSize, metadata !3945, metadata !DIExpression()), !dbg !3946
  call void @llvm.dbg.declare(metadata i32* %cornerIdx, metadata !3947, metadata !DIExpression()), !dbg !3948
  call void @llvm.dbg.declare(metadata i32* %subdivLevels, metadata !3949, metadata !DIExpression()), !dbg !3950
  call void @llvm.dbg.declare(metadata i32* %vertDataSize, metadata !3951, metadata !DIExpression()), !dbg !3952
  %0 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !3953
  %meshIFC = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %0, i32 0, i32 3, !dbg !3954
  %vertDataSize1 = getelementptr inbounds %struct.CCGMeshIFC, %struct.CCGMeshIFC* %meshIFC, i32 0, i32 4, !dbg !3955
  %1 = load i32, i32* %vertDataSize1, align 8, !dbg !3955
  store i32 %1, i32* %vertDataSize, align 4, !dbg !3952
  call void @llvm.dbg.declare(metadata i32* %freeF, metadata !3956, metadata !DIExpression()), !dbg !3957
  %2 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !3958
  %subdivLevels2 = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %2, i32 0, i32 6, !dbg !3959
  %3 = load i32, i32* %subdivLevels2, align 8, !dbg !3959
  store i32 %3, i32* %subdivLevels, align 4, !dbg !3960
  %4 = load i32, i32* %lvl.addr, align 4, !dbg !3961
  %tobool = icmp ne i32 %4, 0, !dbg !3962
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !3962

cond.true:                                        ; preds = %entry
  %5 = load i32, i32* %lvl.addr, align 4, !dbg !3963
  br label %cond.end, !dbg !3962

cond.false:                                       ; preds = %entry
  %6 = load i32, i32* %subdivLevels, align 4, !dbg !3964
  br label %cond.end, !dbg !3962

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %5, %cond.true ], [ %6, %cond.false ], !dbg !3962
  store i32 %cond, i32* %lvl.addr, align 4, !dbg !3965
  %7 = load i32, i32* %lvl.addr, align 4, !dbg !3966
  %call = call i32 @ccg_gridsize(i32 %7), !dbg !3967
  store i32 %call, i32* %gridSize, align 4, !dbg !3968
  %8 = load i32, i32* %gridSize, align 4, !dbg !3969
  %sub = sub nsw i32 %8, 1, !dbg !3970
  store i32 %sub, i32* %cornerIdx, align 4, !dbg !3971
  %9 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !3972
  call void @ccgSubSurf__allFaces(%struct.CCGSubSurf* %9, %struct.CCGFace*** %effectedF.addr, i32* %numEffectedF.addr, i32* %freeF), !dbg !3973
  store i32 0, i32* %i, align 4, !dbg !3974
  br label %for.cond, !dbg !3976

for.cond:                                         ; preds = %for.inc53, %cond.end
  %10 = load i32, i32* %i, align 4, !dbg !3977
  %11 = load i32, i32* %numEffectedF.addr, align 4, !dbg !3979
  %cmp = icmp slt i32 %10, %11, !dbg !3980
  br i1 %cmp, label %for.body, label %for.end55, !dbg !3981

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.CCGFace** %f, metadata !3982, metadata !DIExpression()), !dbg !3984
  %12 = load %struct.CCGFace**, %struct.CCGFace*** %effectedF.addr, align 8, !dbg !3985
  %13 = load i32, i32* %i, align 4, !dbg !3986
  %idxprom = sext i32 %13 to i64, !dbg !3985
  %arrayidx = getelementptr inbounds %struct.CCGFace*, %struct.CCGFace** %12, i64 %idxprom, !dbg !3985
  %14 = load %struct.CCGFace*, %struct.CCGFace** %arrayidx, align 8, !dbg !3985
  store %struct.CCGFace* %14, %struct.CCGFace** %f, align 8, !dbg !3984
  store i32 0, i32* %S, align 4, !dbg !3987
  br label %for.cond3, !dbg !3989

for.cond3:                                        ; preds = %for.inc50, %for.body
  %15 = load i32, i32* %S, align 4, !dbg !3990
  %16 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !3992
  %numVerts = getelementptr inbounds %struct.CCGFace, %struct.CCGFace* %16, i32 0, i32 2, !dbg !3993
  %17 = load i16, i16* %numVerts, align 8, !dbg !3993
  %conv = sext i16 %17 to i32, !dbg !3992
  %cmp4 = icmp slt i32 %15, %conv, !dbg !3994
  br i1 %cmp4, label %for.body6, label %for.end52, !dbg !3995

for.body6:                                        ; preds = %for.cond3
  call void @llvm.dbg.declare(metadata %struct.CCGEdge** %e, metadata !3996, metadata !DIExpression()), !dbg !3998
  %18 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !3999
  %call7 = call %struct.CCGEdge** @FACE_getEdges(%struct.CCGFace* %18), !dbg !4000
  %19 = load i32, i32* %S, align 4, !dbg !4001
  %idxprom8 = sext i32 %19 to i64, !dbg !4000
  %arrayidx9 = getelementptr inbounds %struct.CCGEdge*, %struct.CCGEdge** %call7, i64 %idxprom8, !dbg !4000
  %20 = load %struct.CCGEdge*, %struct.CCGEdge** %arrayidx9, align 8, !dbg !4000
  store %struct.CCGEdge* %20, %struct.CCGEdge** %e, align 8, !dbg !3998
  call void @llvm.dbg.declare(metadata %struct.CCGEdge** %prevE, metadata !4002, metadata !DIExpression()), !dbg !4003
  %21 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !4004
  %call10 = call %struct.CCGEdge** @FACE_getEdges(%struct.CCGFace* %21), !dbg !4005
  %22 = load i32, i32* %S, align 4, !dbg !4006
  %23 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !4007
  %numVerts11 = getelementptr inbounds %struct.CCGFace, %struct.CCGFace* %23, i32 0, i32 2, !dbg !4008
  %24 = load i16, i16* %numVerts11, align 8, !dbg !4008
  %conv12 = sext i16 %24 to i32, !dbg !4007
  %add = add nsw i32 %22, %conv12, !dbg !4009
  %sub13 = sub nsw i32 %add, 1, !dbg !4010
  %25 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !4011
  %numVerts14 = getelementptr inbounds %struct.CCGFace, %struct.CCGFace* %25, i32 0, i32 2, !dbg !4012
  %26 = load i16, i16* %numVerts14, align 8, !dbg !4012
  %conv15 = sext i16 %26 to i32, !dbg !4011
  %rem = srem i32 %sub13, %conv15, !dbg !4013
  %idxprom16 = sext i32 %rem to i64, !dbg !4005
  %arrayidx17 = getelementptr inbounds %struct.CCGEdge*, %struct.CCGEdge** %call10, i64 %idxprom16, !dbg !4005
  %27 = load %struct.CCGEdge*, %struct.CCGEdge** %arrayidx17, align 8, !dbg !4005
  store %struct.CCGEdge* %27, %struct.CCGEdge** %prevE, align 8, !dbg !4003
  %28 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !4014
  %call18 = call i8* @FACE_getCenterData(%struct.CCGFace* %28), !dbg !4015
  %29 = bitcast i8* %call18 to float*, !dbg !4016
  %30 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !4017
  %31 = load i32, i32* %lvl.addr, align 4, !dbg !4017
  %32 = load i32, i32* %S, align 4, !dbg !4017
  %33 = load i32, i32* %subdivLevels, align 4, !dbg !4017
  %34 = load i32, i32* %vertDataSize, align 4, !dbg !4017
  %call19 = call i8* @_face_getIFCo(%struct.CCGFace* %30, i32 %31, i32 %32, i32 0, i32 0, i32 %33, i32 %34), !dbg !4017
  %35 = bitcast i8* %call19 to float*, !dbg !4017
  %36 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !4018
  call void @VertDataCopy(float* %29, float* %35, %struct.CCGSubSurf* %36), !dbg !4019
  %37 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !4020
  %call20 = call %struct.CCGVert** @FACE_getVerts(%struct.CCGFace* %37), !dbg !4020
  %38 = load i32, i32* %S, align 4, !dbg !4020
  %idxprom21 = sext i32 %38 to i64, !dbg !4020
  %arrayidx22 = getelementptr inbounds %struct.CCGVert*, %struct.CCGVert** %call20, i64 %idxprom21, !dbg !4020
  %39 = load %struct.CCGVert*, %struct.CCGVert** %arrayidx22, align 8, !dbg !4020
  %40 = load i32, i32* %lvl.addr, align 4, !dbg !4020
  %41 = load i32, i32* %vertDataSize, align 4, !dbg !4020
  %call23 = call i8* @_vert_getCo(%struct.CCGVert* %39, i32 %40, i32 %41), !dbg !4020
  %42 = bitcast i8* %call23 to float*, !dbg !4020
  %43 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !4021
  %44 = load i32, i32* %lvl.addr, align 4, !dbg !4021
  %45 = load i32, i32* %S, align 4, !dbg !4021
  %46 = load i32, i32* %cornerIdx, align 4, !dbg !4021
  %47 = load i32, i32* %cornerIdx, align 4, !dbg !4021
  %48 = load i32, i32* %subdivLevels, align 4, !dbg !4021
  %49 = load i32, i32* %vertDataSize, align 4, !dbg !4021
  %call24 = call i8* @_face_getIFCo(%struct.CCGFace* %43, i32 %44, i32 %45, i32 %46, i32 %47, i32 %48, i32 %49), !dbg !4021
  %50 = bitcast i8* %call24 to float*, !dbg !4021
  %51 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !4022
  call void @VertDataCopy(float* %42, float* %50, %struct.CCGSubSurf* %51), !dbg !4023
  store i32 0, i32* %x, align 4, !dbg !4024
  br label %for.cond25, !dbg !4026

for.cond25:                                       ; preds = %for.inc, %for.body6
  %52 = load i32, i32* %x, align 4, !dbg !4027
  %53 = load i32, i32* %gridSize, align 4, !dbg !4029
  %cmp26 = icmp slt i32 %52, %53, !dbg !4030
  br i1 %cmp26, label %for.body28, label %for.end, !dbg !4031

for.body28:                                       ; preds = %for.cond25
  %54 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !4032
  %55 = load i32, i32* %lvl.addr, align 4, !dbg !4032
  %56 = load i32, i32* %S, align 4, !dbg !4032
  %57 = load i32, i32* %x, align 4, !dbg !4032
  %58 = load i32, i32* %subdivLevels, align 4, !dbg !4032
  %59 = load i32, i32* %vertDataSize, align 4, !dbg !4032
  %call29 = call i8* @_face_getIECo(%struct.CCGFace* %54, i32 %55, i32 %56, i32 %57, i32 %58, i32 %59), !dbg !4032
  %60 = bitcast i8* %call29 to float*, !dbg !4032
  %61 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !4033
  %62 = load i32, i32* %lvl.addr, align 4, !dbg !4033
  %63 = load i32, i32* %S, align 4, !dbg !4033
  %64 = load i32, i32* %x, align 4, !dbg !4033
  %65 = load i32, i32* %subdivLevels, align 4, !dbg !4033
  %66 = load i32, i32* %vertDataSize, align 4, !dbg !4033
  %call30 = call i8* @_face_getIFCo(%struct.CCGFace* %61, i32 %62, i32 %63, i32 %64, i32 0, i32 %65, i32 %66), !dbg !4033
  %67 = bitcast i8* %call30 to float*, !dbg !4033
  %68 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !4034
  call void @VertDataCopy(float* %60, float* %67, %struct.CCGSubSurf* %68), !dbg !4035
  br label %for.inc, !dbg !4035

for.inc:                                          ; preds = %for.body28
  %69 = load i32, i32* %x, align 4, !dbg !4036
  %inc = add nsw i32 %69, 1, !dbg !4036
  store i32 %inc, i32* %x, align 4, !dbg !4036
  br label %for.cond25, !dbg !4037, !llvm.loop !4038

for.end:                                          ; preds = %for.cond25
  store i32 0, i32* %x, align 4, !dbg !4040
  br label %for.cond31, !dbg !4042

for.cond31:                                       ; preds = %for.inc47, %for.end
  %70 = load i32, i32* %x, align 4, !dbg !4043
  %71 = load i32, i32* %gridSize, align 4, !dbg !4045
  %cmp32 = icmp slt i32 %70, %71, !dbg !4046
  br i1 %cmp32, label %for.body34, label %for.end49, !dbg !4047

for.body34:                                       ; preds = %for.cond31
  call void @llvm.dbg.declare(metadata i32* %eI, metadata !4048, metadata !DIExpression()), !dbg !4050
  %72 = load i32, i32* %gridSize, align 4, !dbg !4051
  %sub35 = sub nsw i32 %72, 1, !dbg !4052
  %73 = load i32, i32* %x, align 4, !dbg !4053
  %sub36 = sub nsw i32 %sub35, %73, !dbg !4054
  store i32 %sub36, i32* %eI, align 4, !dbg !4050
  %74 = load %struct.CCGEdge*, %struct.CCGEdge** %e, align 8, !dbg !4055
  %75 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !4056
  %call37 = call %struct.CCGVert** @FACE_getVerts(%struct.CCGFace* %75), !dbg !4057
  %76 = load i32, i32* %S, align 4, !dbg !4058
  %idxprom38 = sext i32 %76 to i64, !dbg !4057
  %arrayidx39 = getelementptr inbounds %struct.CCGVert*, %struct.CCGVert** %call37, i64 %idxprom38, !dbg !4057
  %77 = load %struct.CCGVert*, %struct.CCGVert** %arrayidx39, align 8, !dbg !4057
  %78 = load i32, i32* %lvl.addr, align 4, !dbg !4059
  %79 = load i32, i32* %eI, align 4, !dbg !4060
  %80 = load i32, i32* %vertDataSize, align 4, !dbg !4061
  %call40 = call i8* @_edge_getCoVert(%struct.CCGEdge* %74, %struct.CCGVert* %77, i32 %78, i32 %79, i32 %80), !dbg !4062
  %81 = bitcast i8* %call40 to float*, !dbg !4062
  %82 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !4063
  %83 = load i32, i32* %lvl.addr, align 4, !dbg !4063
  %84 = load i32, i32* %S, align 4, !dbg !4063
  %85 = load i32, i32* %cornerIdx, align 4, !dbg !4063
  %86 = load i32, i32* %x, align 4, !dbg !4063
  %87 = load i32, i32* %subdivLevels, align 4, !dbg !4063
  %88 = load i32, i32* %vertDataSize, align 4, !dbg !4063
  %call41 = call i8* @_face_getIFCo(%struct.CCGFace* %82, i32 %83, i32 %84, i32 %85, i32 %86, i32 %87, i32 %88), !dbg !4063
  %89 = bitcast i8* %call41 to float*, !dbg !4063
  %90 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !4064
  call void @VertDataCopy(float* %81, float* %89, %struct.CCGSubSurf* %90), !dbg !4065
  %91 = load %struct.CCGEdge*, %struct.CCGEdge** %prevE, align 8, !dbg !4066
  %92 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !4067
  %call42 = call %struct.CCGVert** @FACE_getVerts(%struct.CCGFace* %92), !dbg !4068
  %93 = load i32, i32* %S, align 4, !dbg !4069
  %idxprom43 = sext i32 %93 to i64, !dbg !4068
  %arrayidx44 = getelementptr inbounds %struct.CCGVert*, %struct.CCGVert** %call42, i64 %idxprom43, !dbg !4068
  %94 = load %struct.CCGVert*, %struct.CCGVert** %arrayidx44, align 8, !dbg !4068
  %95 = load i32, i32* %lvl.addr, align 4, !dbg !4070
  %96 = load i32, i32* %eI, align 4, !dbg !4071
  %97 = load i32, i32* %vertDataSize, align 4, !dbg !4072
  %call45 = call i8* @_edge_getCoVert(%struct.CCGEdge* %91, %struct.CCGVert* %94, i32 %95, i32 %96, i32 %97), !dbg !4073
  %98 = bitcast i8* %call45 to float*, !dbg !4073
  %99 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !4074
  %100 = load i32, i32* %lvl.addr, align 4, !dbg !4074
  %101 = load i32, i32* %S, align 4, !dbg !4074
  %102 = load i32, i32* %x, align 4, !dbg !4074
  %103 = load i32, i32* %cornerIdx, align 4, !dbg !4074
  %104 = load i32, i32* %subdivLevels, align 4, !dbg !4074
  %105 = load i32, i32* %vertDataSize, align 4, !dbg !4074
  %call46 = call i8* @_face_getIFCo(%struct.CCGFace* %99, i32 %100, i32 %101, i32 %102, i32 %103, i32 %104, i32 %105), !dbg !4074
  %106 = bitcast i8* %call46 to float*, !dbg !4074
  %107 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !4075
  call void @VertDataCopy(float* %98, float* %106, %struct.CCGSubSurf* %107), !dbg !4076
  br label %for.inc47, !dbg !4077

for.inc47:                                        ; preds = %for.body34
  %108 = load i32, i32* %x, align 4, !dbg !4078
  %inc48 = add nsw i32 %108, 1, !dbg !4078
  store i32 %inc48, i32* %x, align 4, !dbg !4078
  br label %for.cond31, !dbg !4079, !llvm.loop !4080

for.end49:                                        ; preds = %for.cond31
  br label %for.inc50, !dbg !4082

for.inc50:                                        ; preds = %for.end49
  %109 = load i32, i32* %S, align 4, !dbg !4083
  %inc51 = add nsw i32 %109, 1, !dbg !4083
  store i32 %inc51, i32* %S, align 4, !dbg !4083
  br label %for.cond3, !dbg !4084, !llvm.loop !4085

for.end52:                                        ; preds = %for.cond3
  br label %for.inc53, !dbg !4087

for.inc53:                                        ; preds = %for.end52
  %110 = load i32, i32* %i, align 4, !dbg !4088
  %inc54 = add nsw i32 %110, 1, !dbg !4088
  store i32 %inc54, i32* %i, align 4, !dbg !4088
  br label %for.cond, !dbg !4089, !llvm.loop !4090

for.end55:                                        ; preds = %for.cond
  %111 = load i32, i32* %freeF, align 4, !dbg !4092
  %tobool56 = icmp ne i32 %111, 0, !dbg !4092
  br i1 %tobool56, label %if.then, label %if.end, !dbg !4094

if.then:                                          ; preds = %for.end55
  %112 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !4095
  %113 = load %struct.CCGFace**, %struct.CCGFace*** %effectedF.addr, align 8, !dbg !4096
  %114 = bitcast %struct.CCGFace** %113 to i8*, !dbg !4096
  call void %112(i8* %114), !dbg !4095
  br label %if.end, !dbg !4095

if.end:                                           ; preds = %if.then, %for.end55
  ret i32 0, !dbg !4097
}

; Function Attrs: noinline nounwind uwtable
define internal void @ccgSubSurf__allFaces(%struct.CCGSubSurf* %ss, %struct.CCGFace*** %faces, i32* %numFaces, i32* %freeFaces) #0 !dbg !4098 {
entry:
  %ss.addr = alloca %struct.CCGSubSurf*, align 8
  %faces.addr = alloca %struct.CCGFace***, align 8
  %numFaces.addr = alloca i32*, align 8
  %freeFaces.addr = alloca i32*, align 8
  %array = alloca %struct.CCGFace**, align 8
  %i = alloca i32, align 4
  %num = alloca i32, align 4
  %f = alloca %struct.CCGFace*, align 8
  store %struct.CCGSubSurf* %ss, %struct.CCGSubSurf** %ss.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGSubSurf** %ss.addr, metadata !4102, metadata !DIExpression()), !dbg !4103
  store %struct.CCGFace*** %faces, %struct.CCGFace**** %faces.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGFace**** %faces.addr, metadata !4104, metadata !DIExpression()), !dbg !4105
  store i32* %numFaces, i32** %numFaces.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %numFaces.addr, metadata !4106, metadata !DIExpression()), !dbg !4107
  store i32* %freeFaces, i32** %freeFaces.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %freeFaces.addr, metadata !4108, metadata !DIExpression()), !dbg !4109
  call void @llvm.dbg.declare(metadata %struct.CCGFace*** %array, metadata !4110, metadata !DIExpression()), !dbg !4111
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4112, metadata !DIExpression()), !dbg !4113
  call void @llvm.dbg.declare(metadata i32* %num, metadata !4114, metadata !DIExpression()), !dbg !4115
  %0 = load %struct.CCGFace***, %struct.CCGFace**** %faces.addr, align 8, !dbg !4116
  %1 = load %struct.CCGFace**, %struct.CCGFace*** %0, align 8, !dbg !4118
  %cmp = icmp eq %struct.CCGFace** %1, null, !dbg !4119
  br i1 %cmp, label %if.then, label %if.else, !dbg !4120

if.then:                                          ; preds = %entry
  %2 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !4121
  %3 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !4123
  %fMap = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %3, i32 0, i32 2, !dbg !4124
  %4 = load %struct._EHash*, %struct._EHash** %fMap, align 8, !dbg !4124
  %numEntries = getelementptr inbounds %struct._EHash, %struct._EHash* %4, i32 0, i32 1, !dbg !4125
  %5 = load i32, i32* %numEntries, align 8, !dbg !4125
  %conv = sext i32 %5 to i64, !dbg !4123
  %mul = mul i64 8, %conv, !dbg !4126
  %call = call i8* %2(i64 %mul, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.5, i64 0, i64 0)), !dbg !4121
  %6 = bitcast i8* %call to %struct.CCGFace**, !dbg !4121
  store %struct.CCGFace** %6, %struct.CCGFace*** %array, align 8, !dbg !4127
  store i32 0, i32* %num, align 4, !dbg !4128
  store i32 0, i32* %i, align 4, !dbg !4129
  br label %for.cond, !dbg !4131

for.cond:                                         ; preds = %for.inc9, %if.then
  %7 = load i32, i32* %i, align 4, !dbg !4132
  %8 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !4134
  %fMap1 = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %8, i32 0, i32 2, !dbg !4135
  %9 = load %struct._EHash*, %struct._EHash** %fMap1, align 8, !dbg !4135
  %curSize = getelementptr inbounds %struct._EHash, %struct._EHash* %9, i32 0, i32 2, !dbg !4136
  %10 = load i32, i32* %curSize, align 4, !dbg !4136
  %cmp2 = icmp slt i32 %7, %10, !dbg !4137
  br i1 %cmp2, label %for.body, label %for.end11, !dbg !4138

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.CCGFace** %f, metadata !4139, metadata !DIExpression()), !dbg !4141
  %11 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !4142
  %fMap4 = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %11, i32 0, i32 2, !dbg !4143
  %12 = load %struct._EHash*, %struct._EHash** %fMap4, align 8, !dbg !4143
  %buckets = getelementptr inbounds %struct._EHash, %struct._EHash* %12, i32 0, i32 0, !dbg !4144
  %13 = load %struct._EHEntry**, %struct._EHEntry*** %buckets, align 8, !dbg !4144
  %14 = load i32, i32* %i, align 4, !dbg !4145
  %idxprom = sext i32 %14 to i64, !dbg !4142
  %arrayidx = getelementptr inbounds %struct._EHEntry*, %struct._EHEntry** %13, i64 %idxprom, !dbg !4142
  %15 = load %struct._EHEntry*, %struct._EHEntry** %arrayidx, align 8, !dbg !4142
  %16 = bitcast %struct._EHEntry* %15 to %struct.CCGFace*, !dbg !4146
  store %struct.CCGFace* %16, %struct.CCGFace** %f, align 8, !dbg !4141
  br label %for.cond5, !dbg !4147

for.cond5:                                        ; preds = %for.inc, %for.body
  %17 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !4148
  %tobool = icmp ne %struct.CCGFace* %17, null, !dbg !4151
  br i1 %tobool, label %for.body6, label %for.end, !dbg !4151

for.body6:                                        ; preds = %for.cond5
  %18 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !4152
  %19 = load %struct.CCGFace**, %struct.CCGFace*** %array, align 8, !dbg !4153
  %20 = load i32, i32* %num, align 4, !dbg !4154
  %inc = add nsw i32 %20, 1, !dbg !4154
  store i32 %inc, i32* %num, align 4, !dbg !4154
  %idxprom7 = sext i32 %20 to i64, !dbg !4153
  %arrayidx8 = getelementptr inbounds %struct.CCGFace*, %struct.CCGFace** %19, i64 %idxprom7, !dbg !4153
  store %struct.CCGFace* %18, %struct.CCGFace** %arrayidx8, align 8, !dbg !4155
  br label %for.inc, !dbg !4153

for.inc:                                          ; preds = %for.body6
  %21 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !4156
  %next = getelementptr inbounds %struct.CCGFace, %struct.CCGFace* %21, i32 0, i32 0, !dbg !4157
  %22 = load %struct.CCGFace*, %struct.CCGFace** %next, align 8, !dbg !4157
  store %struct.CCGFace* %22, %struct.CCGFace** %f, align 8, !dbg !4158
  br label %for.cond5, !dbg !4159, !llvm.loop !4160

for.end:                                          ; preds = %for.cond5
  br label %for.inc9, !dbg !4162

for.inc9:                                         ; preds = %for.end
  %23 = load i32, i32* %i, align 4, !dbg !4163
  %inc10 = add nsw i32 %23, 1, !dbg !4163
  store i32 %inc10, i32* %i, align 4, !dbg !4163
  br label %for.cond, !dbg !4164, !llvm.loop !4165

for.end11:                                        ; preds = %for.cond
  %24 = load %struct.CCGFace**, %struct.CCGFace*** %array, align 8, !dbg !4167
  %25 = load %struct.CCGFace***, %struct.CCGFace**** %faces.addr, align 8, !dbg !4168
  store %struct.CCGFace** %24, %struct.CCGFace*** %25, align 8, !dbg !4169
  %26 = load i32, i32* %num, align 4, !dbg !4170
  %27 = load i32*, i32** %numFaces.addr, align 8, !dbg !4171
  store i32 %26, i32* %27, align 4, !dbg !4172
  %28 = load i32*, i32** %freeFaces.addr, align 8, !dbg !4173
  store i32 1, i32* %28, align 4, !dbg !4174
  br label %if.end, !dbg !4175

if.else:                                          ; preds = %entry
  %29 = load i32*, i32** %freeFaces.addr, align 8, !dbg !4176
  store i32 0, i32* %29, align 4, !dbg !4178
  br label %if.end

if.end:                                           ; preds = %if.else, %for.end11
  ret void, !dbg !4179
}

; Function Attrs: noinline nounwind uwtable
define internal i8* @FACE_getCenterData(%struct.CCGFace* %f) #0 !dbg !4180 {
entry:
  %f.addr = alloca %struct.CCGFace*, align 8
  store %struct.CCGFace* %f, %struct.CCGFace** %f.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGFace** %f.addr, metadata !4183, metadata !DIExpression()), !dbg !4184
  %0 = load %struct.CCGFace*, %struct.CCGFace** %f.addr, align 8, !dbg !4185
  %call = call %struct.CCGEdge** @FACE_getEdges(%struct.CCGFace* %0), !dbg !4186
  %1 = load %struct.CCGFace*, %struct.CCGFace** %f.addr, align 8, !dbg !4187
  %numVerts = getelementptr inbounds %struct.CCGFace, %struct.CCGFace* %1, i32 0, i32 2, !dbg !4188
  %2 = load i16, i16* %numVerts, align 8, !dbg !4188
  %idxprom = sext i16 %2 to i64, !dbg !4186
  %arrayidx = getelementptr inbounds %struct.CCGEdge*, %struct.CCGEdge** %call, i64 %idxprom, !dbg !4186
  %3 = bitcast %struct.CCGEdge** %arrayidx to i8*, !dbg !4189
  ret i8* %3, !dbg !4190
}

; Function Attrs: noinline nounwind uwtable
define internal i8* @_face_getIFCo(%struct.CCGFace* %f, i32 %lvl, i32 %S, i32 %x, i32 %y, i32 %levels, i32 %dataSize) #0 !dbg !4191 {
entry:
  %f.addr = alloca %struct.CCGFace*, align 8
  %lvl.addr = alloca i32, align 4
  %S.addr = alloca i32, align 4
  %x.addr = alloca i32, align 4
  %y.addr = alloca i32, align 4
  %levels.addr = alloca i32, align 4
  %dataSize.addr = alloca i32, align 4
  %maxGridSize = alloca i32, align 4
  %spacing = alloca i32, align 4
  %gridBase = alloca i8*, align 8
  store %struct.CCGFace* %f, %struct.CCGFace** %f.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGFace** %f.addr, metadata !4194, metadata !DIExpression()), !dbg !4195
  store i32 %lvl, i32* %lvl.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %lvl.addr, metadata !4196, metadata !DIExpression()), !dbg !4197
  store i32 %S, i32* %S.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %S.addr, metadata !4198, metadata !DIExpression()), !dbg !4199
  store i32 %x, i32* %x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !4200, metadata !DIExpression()), !dbg !4201
  store i32 %y, i32* %y.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %y.addr, metadata !4202, metadata !DIExpression()), !dbg !4203
  store i32 %levels, i32* %levels.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %levels.addr, metadata !4204, metadata !DIExpression()), !dbg !4205
  store i32 %dataSize, i32* %dataSize.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dataSize.addr, metadata !4206, metadata !DIExpression()), !dbg !4207
  call void @llvm.dbg.declare(metadata i32* %maxGridSize, metadata !4208, metadata !DIExpression()), !dbg !4209
  %0 = load i32, i32* %levels.addr, align 4, !dbg !4210
  %call = call i32 @ccg_gridsize(i32 %0), !dbg !4211
  store i32 %call, i32* %maxGridSize, align 4, !dbg !4209
  call void @llvm.dbg.declare(metadata i32* %spacing, metadata !4212, metadata !DIExpression()), !dbg !4213
  %1 = load i32, i32* %levels.addr, align 4, !dbg !4214
  %2 = load i32, i32* %lvl.addr, align 4, !dbg !4215
  %call1 = call i32 @ccg_spacing(i32 %1, i32 %2), !dbg !4216
  store i32 %call1, i32* %spacing, align 4, !dbg !4213
  call void @llvm.dbg.declare(metadata i8** %gridBase, metadata !4217, metadata !DIExpression()), !dbg !4218
  %3 = load %struct.CCGFace*, %struct.CCGFace** %f.addr, align 8, !dbg !4219
  %call2 = call i8* @FACE_getCenterData(%struct.CCGFace* %3), !dbg !4220
  %4 = load i32, i32* %dataSize.addr, align 4, !dbg !4221
  %5 = load i32, i32* %S.addr, align 4, !dbg !4222
  %6 = load i32, i32* %maxGridSize, align 4, !dbg !4223
  %7 = load i32, i32* %maxGridSize, align 4, !dbg !4224
  %8 = load i32, i32* %maxGridSize, align 4, !dbg !4225
  %mul = mul nsw i32 %7, %8, !dbg !4226
  %add = add nsw i32 %6, %mul, !dbg !4227
  %mul3 = mul nsw i32 %5, %add, !dbg !4228
  %add4 = add nsw i32 1, %mul3, !dbg !4229
  %mul5 = mul nsw i32 %4, %add4, !dbg !4230
  %idx.ext = sext i32 %mul5 to i64, !dbg !4231
  %add.ptr = getelementptr inbounds i8, i8* %call2, i64 %idx.ext, !dbg !4231
  store i8* %add.ptr, i8** %gridBase, align 8, !dbg !4218
  %9 = load i8*, i8** %gridBase, align 8, !dbg !4232
  %10 = load i32, i32* %dataSize.addr, align 4, !dbg !4233
  %11 = load i32, i32* %maxGridSize, align 4, !dbg !4234
  %12 = load i32, i32* %y.addr, align 4, !dbg !4235
  %13 = load i32, i32* %maxGridSize, align 4, !dbg !4236
  %mul6 = mul nsw i32 %12, %13, !dbg !4237
  %14 = load i32, i32* %x.addr, align 4, !dbg !4238
  %add7 = add nsw i32 %mul6, %14, !dbg !4239
  %15 = load i32, i32* %spacing, align 4, !dbg !4240
  %mul8 = mul nsw i32 %add7, %15, !dbg !4241
  %add9 = add nsw i32 %11, %mul8, !dbg !4242
  %mul10 = mul nsw i32 %10, %add9, !dbg !4243
  %idxprom = sext i32 %mul10 to i64, !dbg !4232
  %arrayidx = getelementptr inbounds i8, i8* %9, i64 %idxprom, !dbg !4232
  ret i8* %arrayidx, !dbg !4244
}

; Function Attrs: noinline nounwind uwtable
define internal i8* @_face_getIECo(%struct.CCGFace* %f, i32 %lvl, i32 %S, i32 %x, i32 %levels, i32 %dataSize) #0 !dbg !4245 {
entry:
  %f.addr = alloca %struct.CCGFace*, align 8
  %lvl.addr = alloca i32, align 4
  %S.addr = alloca i32, align 4
  %x.addr = alloca i32, align 4
  %levels.addr = alloca i32, align 4
  %dataSize.addr = alloca i32, align 4
  %maxGridSize = alloca i32, align 4
  %spacing = alloca i32, align 4
  %gridBase = alloca i8*, align 8
  store %struct.CCGFace* %f, %struct.CCGFace** %f.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGFace** %f.addr, metadata !4248, metadata !DIExpression()), !dbg !4249
  store i32 %lvl, i32* %lvl.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %lvl.addr, metadata !4250, metadata !DIExpression()), !dbg !4251
  store i32 %S, i32* %S.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %S.addr, metadata !4252, metadata !DIExpression()), !dbg !4253
  store i32 %x, i32* %x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !4254, metadata !DIExpression()), !dbg !4255
  store i32 %levels, i32* %levels.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %levels.addr, metadata !4256, metadata !DIExpression()), !dbg !4257
  store i32 %dataSize, i32* %dataSize.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dataSize.addr, metadata !4258, metadata !DIExpression()), !dbg !4259
  call void @llvm.dbg.declare(metadata i32* %maxGridSize, metadata !4260, metadata !DIExpression()), !dbg !4261
  %0 = load i32, i32* %levels.addr, align 4, !dbg !4262
  %call = call i32 @ccg_gridsize(i32 %0), !dbg !4263
  store i32 %call, i32* %maxGridSize, align 4, !dbg !4261
  call void @llvm.dbg.declare(metadata i32* %spacing, metadata !4264, metadata !DIExpression()), !dbg !4265
  %1 = load i32, i32* %levels.addr, align 4, !dbg !4266
  %2 = load i32, i32* %lvl.addr, align 4, !dbg !4267
  %call1 = call i32 @ccg_spacing(i32 %1, i32 %2), !dbg !4268
  store i32 %call1, i32* %spacing, align 4, !dbg !4265
  call void @llvm.dbg.declare(metadata i8** %gridBase, metadata !4269, metadata !DIExpression()), !dbg !4270
  %3 = load %struct.CCGFace*, %struct.CCGFace** %f.addr, align 8, !dbg !4271
  %call2 = call i8* @FACE_getCenterData(%struct.CCGFace* %3), !dbg !4272
  %4 = load i32, i32* %dataSize.addr, align 4, !dbg !4273
  %5 = load i32, i32* %S.addr, align 4, !dbg !4274
  %6 = load i32, i32* %maxGridSize, align 4, !dbg !4275
  %7 = load i32, i32* %maxGridSize, align 4, !dbg !4276
  %8 = load i32, i32* %maxGridSize, align 4, !dbg !4277
  %mul = mul nsw i32 %7, %8, !dbg !4278
  %add = add nsw i32 %6, %mul, !dbg !4279
  %mul3 = mul nsw i32 %5, %add, !dbg !4280
  %add4 = add nsw i32 1, %mul3, !dbg !4281
  %mul5 = mul nsw i32 %4, %add4, !dbg !4282
  %idx.ext = sext i32 %mul5 to i64, !dbg !4283
  %add.ptr = getelementptr inbounds i8, i8* %call2, i64 %idx.ext, !dbg !4283
  store i8* %add.ptr, i8** %gridBase, align 8, !dbg !4270
  %9 = load i8*, i8** %gridBase, align 8, !dbg !4284
  %10 = load i32, i32* %dataSize.addr, align 4, !dbg !4285
  %11 = load i32, i32* %x.addr, align 4, !dbg !4286
  %mul6 = mul nsw i32 %10, %11, !dbg !4287
  %12 = load i32, i32* %spacing, align 4, !dbg !4288
  %mul7 = mul nsw i32 %mul6, %12, !dbg !4289
  %idxprom = sext i32 %mul7 to i64, !dbg !4284
  %arrayidx = getelementptr inbounds i8, i8* %9, i64 %idxprom, !dbg !4284
  ret i8* %arrayidx, !dbg !4290
}

; Function Attrs: noinline nounwind uwtable
define internal i8* @_edge_getCoVert(%struct.CCGEdge* %e, %struct.CCGVert* %v, i32 %lvl, i32 %x, i32 %dataSize) #0 !dbg !4291 {
entry:
  %retval = alloca i8*, align 8
  %e.addr = alloca %struct.CCGEdge*, align 8
  %v.addr = alloca %struct.CCGVert*, align 8
  %lvl.addr = alloca i32, align 4
  %x.addr = alloca i32, align 4
  %dataSize.addr = alloca i32, align 4
  %levelBase = alloca i32, align 4
  store %struct.CCGEdge* %e, %struct.CCGEdge** %e.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGEdge** %e.addr, metadata !4294, metadata !DIExpression()), !dbg !4295
  store %struct.CCGVert* %v, %struct.CCGVert** %v.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGVert** %v.addr, metadata !4296, metadata !DIExpression()), !dbg !4297
  store i32 %lvl, i32* %lvl.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %lvl.addr, metadata !4298, metadata !DIExpression()), !dbg !4299
  store i32 %x, i32* %x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !4300, metadata !DIExpression()), !dbg !4301
  store i32 %dataSize, i32* %dataSize.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dataSize.addr, metadata !4302, metadata !DIExpression()), !dbg !4303
  call void @llvm.dbg.declare(metadata i32* %levelBase, metadata !4304, metadata !DIExpression()), !dbg !4305
  %0 = load i32, i32* %lvl.addr, align 4, !dbg !4306
  %call = call i32 @ccg_edgebase(i32 %0), !dbg !4307
  store i32 %call, i32* %levelBase, align 4, !dbg !4305
  %1 = load %struct.CCGVert*, %struct.CCGVert** %v.addr, align 8, !dbg !4308
  %2 = load %struct.CCGEdge*, %struct.CCGEdge** %e.addr, align 8, !dbg !4310
  %v0 = getelementptr inbounds %struct.CCGEdge, %struct.CCGEdge* %2, i32 0, i32 5, !dbg !4311
  %3 = load %struct.CCGVert*, %struct.CCGVert** %v0, align 8, !dbg !4311
  %cmp = icmp eq %struct.CCGVert* %1, %3, !dbg !4312
  br i1 %cmp, label %if.then, label %if.else, !dbg !4313

if.then:                                          ; preds = %entry
  %4 = load %struct.CCGEdge*, %struct.CCGEdge** %e.addr, align 8, !dbg !4314
  %call1 = call i8* @EDGE_getLevelData(%struct.CCGEdge* %4), !dbg !4316
  %5 = load i32, i32* %dataSize.addr, align 4, !dbg !4317
  %6 = load i32, i32* %levelBase, align 4, !dbg !4318
  %7 = load i32, i32* %x.addr, align 4, !dbg !4319
  %add = add nsw i32 %6, %7, !dbg !4320
  %mul = mul nsw i32 %5, %add, !dbg !4321
  %idxprom = sext i32 %mul to i64, !dbg !4316
  %arrayidx = getelementptr inbounds i8, i8* %call1, i64 %idxprom, !dbg !4316
  store i8* %arrayidx, i8** %retval, align 8, !dbg !4322
  br label %return, !dbg !4322

if.else:                                          ; preds = %entry
  %8 = load %struct.CCGEdge*, %struct.CCGEdge** %e.addr, align 8, !dbg !4323
  %call2 = call i8* @EDGE_getLevelData(%struct.CCGEdge* %8), !dbg !4325
  %9 = load i32, i32* %dataSize.addr, align 4, !dbg !4326
  %10 = load i32, i32* %levelBase, align 4, !dbg !4327
  %11 = load i32, i32* %lvl.addr, align 4, !dbg !4328
  %shl = shl i32 1, %11, !dbg !4329
  %add3 = add nsw i32 %10, %shl, !dbg !4330
  %12 = load i32, i32* %x.addr, align 4, !dbg !4331
  %sub = sub nsw i32 %add3, %12, !dbg !4332
  %mul4 = mul nsw i32 %9, %sub, !dbg !4333
  %idxprom5 = sext i32 %mul4 to i64, !dbg !4325
  %arrayidx6 = getelementptr inbounds i8, i8* %call2, i64 %idxprom5, !dbg !4325
  store i8* %arrayidx6, i8** %retval, align 8, !dbg !4334
  br label %return, !dbg !4334

return:                                           ; preds = %if.else, %if.then
  %13 = load i8*, i8** %retval, align 8, !dbg !4335
  ret i8* %13, !dbg !4335
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @ccgSubSurf_updateToFaces(%struct.CCGSubSurf* %ss, i32 %lvl, %struct.CCGFace** %effectedF, i32 %numEffectedF) #0 !dbg !4336 {
entry:
  %ss.addr = alloca %struct.CCGSubSurf*, align 8
  %lvl.addr = alloca i32, align 4
  %effectedF.addr = alloca %struct.CCGFace**, align 8
  %numEffectedF.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %S = alloca i32, align 4
  %x = alloca i32, align 4
  %gridSize = alloca i32, align 4
  %cornerIdx = alloca i32, align 4
  %subdivLevels = alloca i32, align 4
  %vertDataSize = alloca i32, align 4
  %freeF = alloca i32, align 4
  %f = alloca %struct.CCGFace*, align 8
  %prevS = alloca i32, align 4
  %e = alloca %struct.CCGEdge*, align 8
  %prevE = alloca %struct.CCGEdge*, align 8
  %eI = alloca i32, align 4
  store %struct.CCGSubSurf* %ss, %struct.CCGSubSurf** %ss.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGSubSurf** %ss.addr, metadata !4337, metadata !DIExpression()), !dbg !4338
  store i32 %lvl, i32* %lvl.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %lvl.addr, metadata !4339, metadata !DIExpression()), !dbg !4340
  store %struct.CCGFace** %effectedF, %struct.CCGFace*** %effectedF.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGFace*** %effectedF.addr, metadata !4341, metadata !DIExpression()), !dbg !4342
  store i32 %numEffectedF, i32* %numEffectedF.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %numEffectedF.addr, metadata !4343, metadata !DIExpression()), !dbg !4344
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4345, metadata !DIExpression()), !dbg !4346
  call void @llvm.dbg.declare(metadata i32* %S, metadata !4347, metadata !DIExpression()), !dbg !4348
  call void @llvm.dbg.declare(metadata i32* %x, metadata !4349, metadata !DIExpression()), !dbg !4350
  call void @llvm.dbg.declare(metadata i32* %gridSize, metadata !4351, metadata !DIExpression()), !dbg !4352
  call void @llvm.dbg.declare(metadata i32* %cornerIdx, metadata !4353, metadata !DIExpression()), !dbg !4354
  call void @llvm.dbg.declare(metadata i32* %subdivLevels, metadata !4355, metadata !DIExpression()), !dbg !4356
  call void @llvm.dbg.declare(metadata i32* %vertDataSize, metadata !4357, metadata !DIExpression()), !dbg !4358
  %0 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !4359
  %meshIFC = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %0, i32 0, i32 3, !dbg !4360
  %vertDataSize1 = getelementptr inbounds %struct.CCGMeshIFC, %struct.CCGMeshIFC* %meshIFC, i32 0, i32 4, !dbg !4361
  %1 = load i32, i32* %vertDataSize1, align 8, !dbg !4361
  store i32 %1, i32* %vertDataSize, align 4, !dbg !4358
  call void @llvm.dbg.declare(metadata i32* %freeF, metadata !4362, metadata !DIExpression()), !dbg !4363
  %2 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !4364
  %subdivLevels2 = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %2, i32 0, i32 6, !dbg !4365
  %3 = load i32, i32* %subdivLevels2, align 8, !dbg !4365
  store i32 %3, i32* %subdivLevels, align 4, !dbg !4366
  %4 = load i32, i32* %lvl.addr, align 4, !dbg !4367
  %tobool = icmp ne i32 %4, 0, !dbg !4368
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !4368

cond.true:                                        ; preds = %entry
  %5 = load i32, i32* %lvl.addr, align 4, !dbg !4369
  br label %cond.end, !dbg !4368

cond.false:                                       ; preds = %entry
  %6 = load i32, i32* %subdivLevels, align 4, !dbg !4370
  br label %cond.end, !dbg !4368

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %5, %cond.true ], [ %6, %cond.false ], !dbg !4368
  store i32 %cond, i32* %lvl.addr, align 4, !dbg !4371
  %7 = load i32, i32* %lvl.addr, align 4, !dbg !4372
  %call = call i32 @ccg_gridsize(i32 %7), !dbg !4373
  store i32 %call, i32* %gridSize, align 4, !dbg !4374
  %8 = load i32, i32* %gridSize, align 4, !dbg !4375
  %sub = sub nsw i32 %8, 1, !dbg !4376
  store i32 %sub, i32* %cornerIdx, align 4, !dbg !4377
  %9 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !4378
  call void @ccgSubSurf__allFaces(%struct.CCGSubSurf* %9, %struct.CCGFace*** %effectedF.addr, i32* %numEffectedF.addr, i32* %freeF), !dbg !4379
  store i32 0, i32* %i, align 4, !dbg !4380
  br label %for.cond, !dbg !4382

for.cond:                                         ; preds = %for.inc56, %cond.end
  %10 = load i32, i32* %i, align 4, !dbg !4383
  %11 = load i32, i32* %numEffectedF.addr, align 4, !dbg !4385
  %cmp = icmp slt i32 %10, %11, !dbg !4386
  br i1 %cmp, label %for.body, label %for.end58, !dbg !4387

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.CCGFace** %f, metadata !4388, metadata !DIExpression()), !dbg !4390
  %12 = load %struct.CCGFace**, %struct.CCGFace*** %effectedF.addr, align 8, !dbg !4391
  %13 = load i32, i32* %i, align 4, !dbg !4392
  %idxprom = sext i32 %13 to i64, !dbg !4391
  %arrayidx = getelementptr inbounds %struct.CCGFace*, %struct.CCGFace** %12, i64 %idxprom, !dbg !4391
  %14 = load %struct.CCGFace*, %struct.CCGFace** %arrayidx, align 8, !dbg !4391
  store %struct.CCGFace* %14, %struct.CCGFace** %f, align 8, !dbg !4390
  store i32 0, i32* %S, align 4, !dbg !4393
  br label %for.cond3, !dbg !4395

for.cond3:                                        ; preds = %for.inc53, %for.body
  %15 = load i32, i32* %S, align 4, !dbg !4396
  %16 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !4398
  %numVerts = getelementptr inbounds %struct.CCGFace, %struct.CCGFace* %16, i32 0, i32 2, !dbg !4399
  %17 = load i16, i16* %numVerts, align 8, !dbg !4399
  %conv = sext i16 %17 to i32, !dbg !4398
  %cmp4 = icmp slt i32 %15, %conv, !dbg !4400
  br i1 %cmp4, label %for.body6, label %for.end55, !dbg !4401

for.body6:                                        ; preds = %for.cond3
  call void @llvm.dbg.declare(metadata i32* %prevS, metadata !4402, metadata !DIExpression()), !dbg !4404
  %18 = load i32, i32* %S, align 4, !dbg !4405
  %19 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !4406
  %numVerts7 = getelementptr inbounds %struct.CCGFace, %struct.CCGFace* %19, i32 0, i32 2, !dbg !4407
  %20 = load i16, i16* %numVerts7, align 8, !dbg !4407
  %conv8 = sext i16 %20 to i32, !dbg !4406
  %add = add nsw i32 %18, %conv8, !dbg !4408
  %sub9 = sub nsw i32 %add, 1, !dbg !4409
  %21 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !4410
  %numVerts10 = getelementptr inbounds %struct.CCGFace, %struct.CCGFace* %21, i32 0, i32 2, !dbg !4411
  %22 = load i16, i16* %numVerts10, align 8, !dbg !4411
  %conv11 = sext i16 %22 to i32, !dbg !4410
  %rem = srem i32 %sub9, %conv11, !dbg !4412
  store i32 %rem, i32* %prevS, align 4, !dbg !4404
  call void @llvm.dbg.declare(metadata %struct.CCGEdge** %e, metadata !4413, metadata !DIExpression()), !dbg !4414
  %23 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !4415
  %call12 = call %struct.CCGEdge** @FACE_getEdges(%struct.CCGFace* %23), !dbg !4416
  %24 = load i32, i32* %S, align 4, !dbg !4417
  %idxprom13 = sext i32 %24 to i64, !dbg !4416
  %arrayidx14 = getelementptr inbounds %struct.CCGEdge*, %struct.CCGEdge** %call12, i64 %idxprom13, !dbg !4416
  %25 = load %struct.CCGEdge*, %struct.CCGEdge** %arrayidx14, align 8, !dbg !4416
  store %struct.CCGEdge* %25, %struct.CCGEdge** %e, align 8, !dbg !4414
  call void @llvm.dbg.declare(metadata %struct.CCGEdge** %prevE, metadata !4418, metadata !DIExpression()), !dbg !4419
  %26 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !4420
  %call15 = call %struct.CCGEdge** @FACE_getEdges(%struct.CCGFace* %26), !dbg !4421
  %27 = load i32, i32* %prevS, align 4, !dbg !4422
  %idxprom16 = sext i32 %27 to i64, !dbg !4421
  %arrayidx17 = getelementptr inbounds %struct.CCGEdge*, %struct.CCGEdge** %call15, i64 %idxprom16, !dbg !4421
  %28 = load %struct.CCGEdge*, %struct.CCGEdge** %arrayidx17, align 8, !dbg !4421
  store %struct.CCGEdge* %28, %struct.CCGEdge** %prevE, align 8, !dbg !4419
  store i32 0, i32* %x, align 4, !dbg !4423
  br label %for.cond18, !dbg !4425

for.cond18:                                       ; preds = %for.inc, %for.body6
  %29 = load i32, i32* %x, align 4, !dbg !4426
  %30 = load i32, i32* %gridSize, align 4, !dbg !4428
  %cmp19 = icmp slt i32 %29, %30, !dbg !4429
  br i1 %cmp19, label %for.body21, label %for.end, !dbg !4430

for.body21:                                       ; preds = %for.cond18
  call void @llvm.dbg.declare(metadata i32* %eI, metadata !4431, metadata !DIExpression()), !dbg !4433
  %31 = load i32, i32* %gridSize, align 4, !dbg !4434
  %sub22 = sub nsw i32 %31, 1, !dbg !4435
  %32 = load i32, i32* %x, align 4, !dbg !4436
  %sub23 = sub nsw i32 %sub22, %32, !dbg !4437
  store i32 %sub23, i32* %eI, align 4, !dbg !4433
  %33 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !4438
  %34 = load i32, i32* %lvl.addr, align 4, !dbg !4438
  %35 = load i32, i32* %S, align 4, !dbg !4438
  %36 = load i32, i32* %cornerIdx, align 4, !dbg !4438
  %37 = load i32, i32* %x, align 4, !dbg !4438
  %38 = load i32, i32* %subdivLevels, align 4, !dbg !4438
  %39 = load i32, i32* %vertDataSize, align 4, !dbg !4438
  %call24 = call i8* @_face_getIFCo(%struct.CCGFace* %33, i32 %34, i32 %35, i32 %36, i32 %37, i32 %38, i32 %39), !dbg !4438
  %40 = bitcast i8* %call24 to float*, !dbg !4438
  %41 = load %struct.CCGEdge*, %struct.CCGEdge** %e, align 8, !dbg !4439
  %42 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !4440
  %call25 = call %struct.CCGVert** @FACE_getVerts(%struct.CCGFace* %42), !dbg !4441
  %43 = load i32, i32* %S, align 4, !dbg !4442
  %idxprom26 = sext i32 %43 to i64, !dbg !4441
  %arrayidx27 = getelementptr inbounds %struct.CCGVert*, %struct.CCGVert** %call25, i64 %idxprom26, !dbg !4441
  %44 = load %struct.CCGVert*, %struct.CCGVert** %arrayidx27, align 8, !dbg !4441
  %45 = load i32, i32* %lvl.addr, align 4, !dbg !4443
  %46 = load i32, i32* %eI, align 4, !dbg !4444
  %47 = load i32, i32* %vertDataSize, align 4, !dbg !4445
  %call28 = call i8* @_edge_getCoVert(%struct.CCGEdge* %41, %struct.CCGVert* %44, i32 %45, i32 %46, i32 %47), !dbg !4446
  %48 = bitcast i8* %call28 to float*, !dbg !4446
  %49 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !4447
  call void @VertDataCopy(float* %40, float* %48, %struct.CCGSubSurf* %49), !dbg !4448
  %50 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !4449
  %51 = load i32, i32* %lvl.addr, align 4, !dbg !4449
  %52 = load i32, i32* %S, align 4, !dbg !4449
  %53 = load i32, i32* %x, align 4, !dbg !4449
  %54 = load i32, i32* %cornerIdx, align 4, !dbg !4449
  %55 = load i32, i32* %subdivLevels, align 4, !dbg !4449
  %56 = load i32, i32* %vertDataSize, align 4, !dbg !4449
  %call29 = call i8* @_face_getIFCo(%struct.CCGFace* %50, i32 %51, i32 %52, i32 %53, i32 %54, i32 %55, i32 %56), !dbg !4449
  %57 = bitcast i8* %call29 to float*, !dbg !4449
  %58 = load %struct.CCGEdge*, %struct.CCGEdge** %prevE, align 8, !dbg !4450
  %59 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !4451
  %call30 = call %struct.CCGVert** @FACE_getVerts(%struct.CCGFace* %59), !dbg !4452
  %60 = load i32, i32* %S, align 4, !dbg !4453
  %idxprom31 = sext i32 %60 to i64, !dbg !4452
  %arrayidx32 = getelementptr inbounds %struct.CCGVert*, %struct.CCGVert** %call30, i64 %idxprom31, !dbg !4452
  %61 = load %struct.CCGVert*, %struct.CCGVert** %arrayidx32, align 8, !dbg !4452
  %62 = load i32, i32* %lvl.addr, align 4, !dbg !4454
  %63 = load i32, i32* %eI, align 4, !dbg !4455
  %64 = load i32, i32* %vertDataSize, align 4, !dbg !4456
  %call33 = call i8* @_edge_getCoVert(%struct.CCGEdge* %58, %struct.CCGVert* %61, i32 %62, i32 %63, i32 %64), !dbg !4457
  %65 = bitcast i8* %call33 to float*, !dbg !4457
  %66 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !4458
  call void @VertDataCopy(float* %57, float* %65, %struct.CCGSubSurf* %66), !dbg !4459
  br label %for.inc, !dbg !4460

for.inc:                                          ; preds = %for.body21
  %67 = load i32, i32* %x, align 4, !dbg !4461
  %inc = add nsw i32 %67, 1, !dbg !4461
  store i32 %inc, i32* %x, align 4, !dbg !4461
  br label %for.cond18, !dbg !4462, !llvm.loop !4463

for.end:                                          ; preds = %for.cond18
  store i32 1, i32* %x, align 4, !dbg !4465
  br label %for.cond34, !dbg !4467

for.cond34:                                       ; preds = %for.inc43, %for.end
  %68 = load i32, i32* %x, align 4, !dbg !4468
  %69 = load i32, i32* %gridSize, align 4, !dbg !4470
  %sub35 = sub nsw i32 %69, 1, !dbg !4471
  %cmp36 = icmp slt i32 %68, %sub35, !dbg !4472
  br i1 %cmp36, label %for.body38, label %for.end45, !dbg !4473

for.body38:                                       ; preds = %for.cond34
  %70 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !4474
  %71 = load i32, i32* %lvl.addr, align 4, !dbg !4474
  %72 = load i32, i32* %S, align 4, !dbg !4474
  %73 = load i32, i32* %x, align 4, !dbg !4474
  %74 = load i32, i32* %subdivLevels, align 4, !dbg !4474
  %75 = load i32, i32* %vertDataSize, align 4, !dbg !4474
  %call39 = call i8* @_face_getIFCo(%struct.CCGFace* %70, i32 %71, i32 %72, i32 0, i32 %73, i32 %74, i32 %75), !dbg !4474
  %76 = bitcast i8* %call39 to float*, !dbg !4474
  %77 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !4476
  %78 = load i32, i32* %lvl.addr, align 4, !dbg !4476
  %79 = load i32, i32* %prevS, align 4, !dbg !4476
  %80 = load i32, i32* %x, align 4, !dbg !4476
  %81 = load i32, i32* %subdivLevels, align 4, !dbg !4476
  %82 = load i32, i32* %vertDataSize, align 4, !dbg !4476
  %call40 = call i8* @_face_getIECo(%struct.CCGFace* %77, i32 %78, i32 %79, i32 %80, i32 %81, i32 %82), !dbg !4476
  %83 = bitcast i8* %call40 to float*, !dbg !4476
  %84 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !4477
  call void @VertDataCopy(float* %76, float* %83, %struct.CCGSubSurf* %84), !dbg !4478
  %85 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !4479
  %86 = load i32, i32* %lvl.addr, align 4, !dbg !4479
  %87 = load i32, i32* %S, align 4, !dbg !4479
  %88 = load i32, i32* %x, align 4, !dbg !4479
  %89 = load i32, i32* %subdivLevels, align 4, !dbg !4479
  %90 = load i32, i32* %vertDataSize, align 4, !dbg !4479
  %call41 = call i8* @_face_getIFCo(%struct.CCGFace* %85, i32 %86, i32 %87, i32 %88, i32 0, i32 %89, i32 %90), !dbg !4479
  %91 = bitcast i8* %call41 to float*, !dbg !4479
  %92 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !4480
  %93 = load i32, i32* %lvl.addr, align 4, !dbg !4480
  %94 = load i32, i32* %S, align 4, !dbg !4480
  %95 = load i32, i32* %x, align 4, !dbg !4480
  %96 = load i32, i32* %subdivLevels, align 4, !dbg !4480
  %97 = load i32, i32* %vertDataSize, align 4, !dbg !4480
  %call42 = call i8* @_face_getIECo(%struct.CCGFace* %92, i32 %93, i32 %94, i32 %95, i32 %96, i32 %97), !dbg !4480
  %98 = bitcast i8* %call42 to float*, !dbg !4480
  %99 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !4481
  call void @VertDataCopy(float* %91, float* %98, %struct.CCGSubSurf* %99), !dbg !4482
  br label %for.inc43, !dbg !4483

for.inc43:                                        ; preds = %for.body38
  %100 = load i32, i32* %x, align 4, !dbg !4484
  %inc44 = add nsw i32 %100, 1, !dbg !4484
  store i32 %inc44, i32* %x, align 4, !dbg !4484
  br label %for.cond34, !dbg !4485, !llvm.loop !4486

for.end45:                                        ; preds = %for.cond34
  %101 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !4488
  %102 = load i32, i32* %lvl.addr, align 4, !dbg !4488
  %103 = load i32, i32* %S, align 4, !dbg !4488
  %104 = load i32, i32* %subdivLevels, align 4, !dbg !4488
  %105 = load i32, i32* %vertDataSize, align 4, !dbg !4488
  %call46 = call i8* @_face_getIFCo(%struct.CCGFace* %101, i32 %102, i32 %103, i32 0, i32 0, i32 %104, i32 %105), !dbg !4488
  %106 = bitcast i8* %call46 to float*, !dbg !4488
  %107 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !4489
  %call47 = call i8* @FACE_getCenterData(%struct.CCGFace* %107), !dbg !4490
  %108 = bitcast i8* %call47 to float*, !dbg !4491
  %109 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !4492
  call void @VertDataCopy(float* %106, float* %108, %struct.CCGSubSurf* %109), !dbg !4493
  %110 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !4494
  %111 = load i32, i32* %lvl.addr, align 4, !dbg !4494
  %112 = load i32, i32* %S, align 4, !dbg !4494
  %113 = load i32, i32* %cornerIdx, align 4, !dbg !4494
  %114 = load i32, i32* %cornerIdx, align 4, !dbg !4494
  %115 = load i32, i32* %subdivLevels, align 4, !dbg !4494
  %116 = load i32, i32* %vertDataSize, align 4, !dbg !4494
  %call48 = call i8* @_face_getIFCo(%struct.CCGFace* %110, i32 %111, i32 %112, i32 %113, i32 %114, i32 %115, i32 %116), !dbg !4494
  %117 = bitcast i8* %call48 to float*, !dbg !4494
  %118 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !4495
  %call49 = call %struct.CCGVert** @FACE_getVerts(%struct.CCGFace* %118), !dbg !4495
  %119 = load i32, i32* %S, align 4, !dbg !4495
  %idxprom50 = sext i32 %119 to i64, !dbg !4495
  %arrayidx51 = getelementptr inbounds %struct.CCGVert*, %struct.CCGVert** %call49, i64 %idxprom50, !dbg !4495
  %120 = load %struct.CCGVert*, %struct.CCGVert** %arrayidx51, align 8, !dbg !4495
  %121 = load i32, i32* %lvl.addr, align 4, !dbg !4495
  %122 = load i32, i32* %vertDataSize, align 4, !dbg !4495
  %call52 = call i8* @_vert_getCo(%struct.CCGVert* %120, i32 %121, i32 %122), !dbg !4495
  %123 = bitcast i8* %call52 to float*, !dbg !4495
  %124 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !4496
  call void @VertDataCopy(float* %117, float* %123, %struct.CCGSubSurf* %124), !dbg !4497
  br label %for.inc53, !dbg !4498

for.inc53:                                        ; preds = %for.end45
  %125 = load i32, i32* %S, align 4, !dbg !4499
  %inc54 = add nsw i32 %125, 1, !dbg !4499
  store i32 %inc54, i32* %S, align 4, !dbg !4499
  br label %for.cond3, !dbg !4500, !llvm.loop !4501

for.end55:                                        ; preds = %for.cond3
  br label %for.inc56, !dbg !4503

for.inc56:                                        ; preds = %for.end55
  %126 = load i32, i32* %i, align 4, !dbg !4504
  %inc57 = add nsw i32 %126, 1, !dbg !4504
  store i32 %inc57, i32* %i, align 4, !dbg !4504
  br label %for.cond, !dbg !4505, !llvm.loop !4506

for.end58:                                        ; preds = %for.cond
  %127 = load i32, i32* %freeF, align 4, !dbg !4508
  %tobool59 = icmp ne i32 %127, 0, !dbg !4508
  br i1 %tobool59, label %if.then, label %if.end, !dbg !4510

if.then:                                          ; preds = %for.end58
  %128 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !4511
  %129 = load %struct.CCGFace**, %struct.CCGFace*** %effectedF.addr, align 8, !dbg !4512
  %130 = bitcast %struct.CCGFace** %129 to i8*, !dbg !4512
  call void %128(i8* %130), !dbg !4511
  br label %if.end, !dbg !4511

if.end:                                           ; preds = %if.then, %for.end58
  ret i32 0, !dbg !4513
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @ccgSubSurf_stitchFaces(%struct.CCGSubSurf* %ss, i32 %lvl, %struct.CCGFace** %effectedF, i32 %numEffectedF) #0 !dbg !4514 {
entry:
  %ss.addr = alloca %struct.CCGSubSurf*, align 8
  %lvl.addr = alloca i32, align 4
  %effectedF.addr = alloca %struct.CCGFace**, align 8
  %numEffectedF.addr = alloca i32, align 4
  %effectedV = alloca %struct.CCGVert**, align 8
  %effectedE = alloca %struct.CCGEdge**, align 8
  %numEffectedV = alloca i32, align 4
  %numEffectedE = alloca i32, align 4
  %freeF = alloca i32, align 4
  %i = alloca i32, align 4
  %S = alloca i32, align 4
  %x = alloca i32, align 4
  %gridSize = alloca i32, align 4
  %cornerIdx = alloca i32, align 4
  %subdivLevels = alloca i32, align 4
  %edgeSize = alloca i32, align 4
  %vertDataSize = alloca i32, align 4
  %v = alloca %struct.CCGVert*, align 8
  %e = alloca %struct.CCGEdge*, align 8
  %f = alloca %struct.CCGFace*, align 8
  %prevS = alloca i32, align 4
  %e57 = alloca %struct.CCGEdge*, align 8
  %prevE = alloca %struct.CCGEdge*, align 8
  %eI = alloca i32, align 4
  %v142 = alloca %struct.CCGVert*, align 8
  %e160 = alloca %struct.CCGEdge*, align 8
  %f192 = alloca %struct.CCGFace*, align 8
  %prevS224 = alloca i32, align 4
  %e232 = alloca %struct.CCGEdge*, align 8
  %prevE236 = alloca %struct.CCGEdge*, align 8
  %eI264 = alloca i32, align 4
  store %struct.CCGSubSurf* %ss, %struct.CCGSubSurf** %ss.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGSubSurf** %ss.addr, metadata !4515, metadata !DIExpression()), !dbg !4516
  store i32 %lvl, i32* %lvl.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %lvl.addr, metadata !4517, metadata !DIExpression()), !dbg !4518
  store %struct.CCGFace** %effectedF, %struct.CCGFace*** %effectedF.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGFace*** %effectedF.addr, metadata !4519, metadata !DIExpression()), !dbg !4520
  store i32 %numEffectedF, i32* %numEffectedF.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %numEffectedF.addr, metadata !4521, metadata !DIExpression()), !dbg !4522
  call void @llvm.dbg.declare(metadata %struct.CCGVert*** %effectedV, metadata !4523, metadata !DIExpression()), !dbg !4524
  call void @llvm.dbg.declare(metadata %struct.CCGEdge*** %effectedE, metadata !4525, metadata !DIExpression()), !dbg !4526
  call void @llvm.dbg.declare(metadata i32* %numEffectedV, metadata !4527, metadata !DIExpression()), !dbg !4528
  call void @llvm.dbg.declare(metadata i32* %numEffectedE, metadata !4529, metadata !DIExpression()), !dbg !4530
  call void @llvm.dbg.declare(metadata i32* %freeF, metadata !4531, metadata !DIExpression()), !dbg !4532
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4533, metadata !DIExpression()), !dbg !4534
  call void @llvm.dbg.declare(metadata i32* %S, metadata !4535, metadata !DIExpression()), !dbg !4536
  call void @llvm.dbg.declare(metadata i32* %x, metadata !4537, metadata !DIExpression()), !dbg !4538
  call void @llvm.dbg.declare(metadata i32* %gridSize, metadata !4539, metadata !DIExpression()), !dbg !4540
  call void @llvm.dbg.declare(metadata i32* %cornerIdx, metadata !4541, metadata !DIExpression()), !dbg !4542
  call void @llvm.dbg.declare(metadata i32* %subdivLevels, metadata !4543, metadata !DIExpression()), !dbg !4544
  call void @llvm.dbg.declare(metadata i32* %edgeSize, metadata !4545, metadata !DIExpression()), !dbg !4546
  call void @llvm.dbg.declare(metadata i32* %vertDataSize, metadata !4547, metadata !DIExpression()), !dbg !4548
  %0 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !4549
  %meshIFC = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %0, i32 0, i32 3, !dbg !4550
  %vertDataSize1 = getelementptr inbounds %struct.CCGMeshIFC, %struct.CCGMeshIFC* %meshIFC, i32 0, i32 4, !dbg !4551
  %1 = load i32, i32* %vertDataSize1, align 8, !dbg !4551
  store i32 %1, i32* %vertDataSize, align 4, !dbg !4548
  %2 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !4552
  %subdivLevels2 = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %2, i32 0, i32 6, !dbg !4553
  %3 = load i32, i32* %subdivLevels2, align 8, !dbg !4553
  store i32 %3, i32* %subdivLevels, align 4, !dbg !4554
  %4 = load i32, i32* %lvl.addr, align 4, !dbg !4555
  %tobool = icmp ne i32 %4, 0, !dbg !4556
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !4556

cond.true:                                        ; preds = %entry
  %5 = load i32, i32* %lvl.addr, align 4, !dbg !4557
  br label %cond.end, !dbg !4556

cond.false:                                       ; preds = %entry
  %6 = load i32, i32* %subdivLevels, align 4, !dbg !4558
  br label %cond.end, !dbg !4556

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %5, %cond.true ], [ %6, %cond.false ], !dbg !4556
  store i32 %cond, i32* %lvl.addr, align 4, !dbg !4559
  %7 = load i32, i32* %lvl.addr, align 4, !dbg !4560
  %call = call i32 @ccg_gridsize(i32 %7), !dbg !4561
  store i32 %call, i32* %gridSize, align 4, !dbg !4562
  %8 = load i32, i32* %lvl.addr, align 4, !dbg !4563
  %call3 = call i32 @ccg_edgesize(i32 %8), !dbg !4564
  store i32 %call3, i32* %edgeSize, align 4, !dbg !4565
  %9 = load i32, i32* %gridSize, align 4, !dbg !4566
  %sub = sub nsw i32 %9, 1, !dbg !4567
  store i32 %sub, i32* %cornerIdx, align 4, !dbg !4568
  %10 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !4569
  call void @ccgSubSurf__allFaces(%struct.CCGSubSurf* %10, %struct.CCGFace*** %effectedF.addr, i32* %numEffectedF.addr, i32* %freeF), !dbg !4570
  %11 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !4571
  %12 = load %struct.CCGFace**, %struct.CCGFace*** %effectedF.addr, align 8, !dbg !4572
  %13 = load i32, i32* %numEffectedF.addr, align 4, !dbg !4573
  call void @ccgSubSurf__effectedFaceNeighbours(%struct.CCGSubSurf* %11, %struct.CCGFace** %12, i32 %13, %struct.CCGVert*** %effectedV, i32* %numEffectedV, %struct.CCGEdge*** %effectedE, i32* %numEffectedE), !dbg !4574
  store i32 0, i32* %i, align 4, !dbg !4575
  br label %for.cond, !dbg !4577

for.cond:                                         ; preds = %for.inc, %cond.end
  %14 = load i32, i32* %i, align 4, !dbg !4578
  %15 = load i32, i32* %numEffectedV, align 4, !dbg !4580
  %cmp = icmp slt i32 %14, %15, !dbg !4581
  br i1 %cmp, label %for.body, label %for.end, !dbg !4582

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.CCGVert** %v, metadata !4583, metadata !DIExpression()), !dbg !4585
  %16 = load %struct.CCGVert**, %struct.CCGVert*** %effectedV, align 8, !dbg !4586
  %17 = load i32, i32* %i, align 4, !dbg !4587
  %idxprom = sext i32 %17 to i64, !dbg !4586
  %arrayidx = getelementptr inbounds %struct.CCGVert*, %struct.CCGVert** %16, i64 %idxprom, !dbg !4586
  %18 = load %struct.CCGVert*, %struct.CCGVert** %arrayidx, align 8, !dbg !4586
  store %struct.CCGVert* %18, %struct.CCGVert** %v, align 8, !dbg !4585
  %19 = load %struct.CCGVert*, %struct.CCGVert** %v, align 8, !dbg !4588
  %numFaces = getelementptr inbounds %struct.CCGVert, %struct.CCGVert* %19, i32 0, i32 3, !dbg !4590
  %20 = load i16, i16* %numFaces, align 2, !dbg !4590
  %tobool4 = icmp ne i16 %20, 0, !dbg !4588
  br i1 %tobool4, label %if.then, label %if.end, !dbg !4591

if.then:                                          ; preds = %for.body
  %21 = load %struct.CCGVert*, %struct.CCGVert** %v, align 8, !dbg !4592
  %22 = load i32, i32* %lvl.addr, align 4, !dbg !4592
  %23 = load i32, i32* %vertDataSize, align 4, !dbg !4592
  %call5 = call i8* @_vert_getCo(%struct.CCGVert* %21, i32 %22, i32 %23), !dbg !4592
  %24 = bitcast i8* %call5 to float*, !dbg !4592
  %25 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !4593
  call void @VertDataZero(float* %24, %struct.CCGSubSurf* %25), !dbg !4594
  br label %if.end, !dbg !4594

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc, !dbg !4595

for.inc:                                          ; preds = %if.end
  %26 = load i32, i32* %i, align 4, !dbg !4596
  %inc = add nsw i32 %26, 1, !dbg !4596
  store i32 %inc, i32* %i, align 4, !dbg !4596
  br label %for.cond, !dbg !4597, !llvm.loop !4598

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !4600
  br label %for.cond6, !dbg !4602

for.cond6:                                        ; preds = %for.inc22, %for.end
  %27 = load i32, i32* %i, align 4, !dbg !4603
  %28 = load i32, i32* %numEffectedE, align 4, !dbg !4605
  %cmp7 = icmp slt i32 %27, %28, !dbg !4606
  br i1 %cmp7, label %for.body8, label %for.end24, !dbg !4607

for.body8:                                        ; preds = %for.cond6
  call void @llvm.dbg.declare(metadata %struct.CCGEdge** %e, metadata !4608, metadata !DIExpression()), !dbg !4610
  %29 = load %struct.CCGEdge**, %struct.CCGEdge*** %effectedE, align 8, !dbg !4611
  %30 = load i32, i32* %i, align 4, !dbg !4612
  %idxprom9 = sext i32 %30 to i64, !dbg !4611
  %arrayidx10 = getelementptr inbounds %struct.CCGEdge*, %struct.CCGEdge** %29, i64 %idxprom9, !dbg !4611
  %31 = load %struct.CCGEdge*, %struct.CCGEdge** %arrayidx10, align 8, !dbg !4611
  store %struct.CCGEdge* %31, %struct.CCGEdge** %e, align 8, !dbg !4610
  %32 = load %struct.CCGEdge*, %struct.CCGEdge** %e, align 8, !dbg !4613
  %numFaces11 = getelementptr inbounds %struct.CCGEdge, %struct.CCGEdge* %32, i32 0, i32 2, !dbg !4615
  %33 = load i16, i16* %numFaces11, align 8, !dbg !4615
  %tobool12 = icmp ne i16 %33, 0, !dbg !4613
  br i1 %tobool12, label %if.then13, label %if.end21, !dbg !4616

if.then13:                                        ; preds = %for.body8
  store i32 0, i32* %x, align 4, !dbg !4617
  br label %for.cond14, !dbg !4619

for.cond14:                                       ; preds = %for.inc18, %if.then13
  %34 = load i32, i32* %x, align 4, !dbg !4620
  %35 = load i32, i32* %edgeSize, align 4, !dbg !4622
  %cmp15 = icmp slt i32 %34, %35, !dbg !4623
  br i1 %cmp15, label %for.body16, label %for.end20, !dbg !4624

for.body16:                                       ; preds = %for.cond14
  %36 = load %struct.CCGEdge*, %struct.CCGEdge** %e, align 8, !dbg !4625
  %37 = load i32, i32* %lvl.addr, align 4, !dbg !4625
  %38 = load i32, i32* %x, align 4, !dbg !4625
  %39 = load i32, i32* %vertDataSize, align 4, !dbg !4625
  %call17 = call i8* @_edge_getCo(%struct.CCGEdge* %36, i32 %37, i32 %38, i32 %39), !dbg !4625
  %40 = bitcast i8* %call17 to float*, !dbg !4625
  %41 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !4626
  call void @VertDataZero(float* %40, %struct.CCGSubSurf* %41), !dbg !4627
  br label %for.inc18, !dbg !4627

for.inc18:                                        ; preds = %for.body16
  %42 = load i32, i32* %x, align 4, !dbg !4628
  %inc19 = add nsw i32 %42, 1, !dbg !4628
  store i32 %inc19, i32* %x, align 4, !dbg !4628
  br label %for.cond14, !dbg !4629, !llvm.loop !4630

for.end20:                                        ; preds = %for.cond14
  br label %if.end21, !dbg !4631

if.end21:                                         ; preds = %for.end20, %for.body8
  br label %for.inc22, !dbg !4632

for.inc22:                                        ; preds = %if.end21
  %43 = load i32, i32* %i, align 4, !dbg !4633
  %inc23 = add nsw i32 %43, 1, !dbg !4633
  store i32 %inc23, i32* %i, align 4, !dbg !4633
  br label %for.cond6, !dbg !4634, !llvm.loop !4635

for.end24:                                        ; preds = %for.cond6
  store i32 0, i32* %i, align 4, !dbg !4637
  br label %for.cond25, !dbg !4639

for.cond25:                                       ; preds = %for.inc135, %for.end24
  %44 = load i32, i32* %i, align 4, !dbg !4640
  %45 = load i32, i32* %numEffectedF.addr, align 4, !dbg !4642
  %cmp26 = icmp slt i32 %44, %45, !dbg !4643
  br i1 %cmp26, label %for.body27, label %for.end137, !dbg !4644

for.body27:                                       ; preds = %for.cond25
  call void @llvm.dbg.declare(metadata %struct.CCGFace** %f, metadata !4645, metadata !DIExpression()), !dbg !4647
  %46 = load %struct.CCGFace**, %struct.CCGFace*** %effectedF.addr, align 8, !dbg !4648
  %47 = load i32, i32* %i, align 4, !dbg !4649
  %idxprom28 = sext i32 %47 to i64, !dbg !4648
  %arrayidx29 = getelementptr inbounds %struct.CCGFace*, %struct.CCGFace** %46, i64 %idxprom28, !dbg !4648
  %48 = load %struct.CCGFace*, %struct.CCGFace** %arrayidx29, align 8, !dbg !4648
  store %struct.CCGFace* %48, %struct.CCGFace** %f, align 8, !dbg !4647
  %49 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !4650
  %call30 = call i8* @FACE_getCenterData(%struct.CCGFace* %49), !dbg !4651
  %50 = bitcast i8* %call30 to float*, !dbg !4652
  %51 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !4653
  call void @VertDataZero(float* %50, %struct.CCGSubSurf* %51), !dbg !4654
  store i32 0, i32* %S, align 4, !dbg !4655
  br label %for.cond31, !dbg !4657

for.cond31:                                       ; preds = %for.inc43, %for.body27
  %52 = load i32, i32* %S, align 4, !dbg !4658
  %53 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !4660
  %numVerts = getelementptr inbounds %struct.CCGFace, %struct.CCGFace* %53, i32 0, i32 2, !dbg !4661
  %54 = load i16, i16* %numVerts, align 8, !dbg !4661
  %conv = sext i16 %54 to i32, !dbg !4660
  %cmp32 = icmp slt i32 %52, %conv, !dbg !4662
  br i1 %cmp32, label %for.body34, label %for.end45, !dbg !4663

for.body34:                                       ; preds = %for.cond31
  store i32 0, i32* %x, align 4, !dbg !4664
  br label %for.cond35, !dbg !4666

for.cond35:                                       ; preds = %for.inc40, %for.body34
  %55 = load i32, i32* %x, align 4, !dbg !4667
  %56 = load i32, i32* %gridSize, align 4, !dbg !4669
  %cmp36 = icmp slt i32 %55, %56, !dbg !4670
  br i1 %cmp36, label %for.body38, label %for.end42, !dbg !4671

for.body38:                                       ; preds = %for.cond35
  %57 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !4672
  %58 = load i32, i32* %lvl.addr, align 4, !dbg !4672
  %59 = load i32, i32* %S, align 4, !dbg !4672
  %60 = load i32, i32* %x, align 4, !dbg !4672
  %61 = load i32, i32* %subdivLevels, align 4, !dbg !4672
  %62 = load i32, i32* %vertDataSize, align 4, !dbg !4672
  %call39 = call i8* @_face_getIECo(%struct.CCGFace* %57, i32 %58, i32 %59, i32 %60, i32 %61, i32 %62), !dbg !4672
  %63 = bitcast i8* %call39 to float*, !dbg !4672
  %64 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !4673
  call void @VertDataZero(float* %63, %struct.CCGSubSurf* %64), !dbg !4674
  br label %for.inc40, !dbg !4674

for.inc40:                                        ; preds = %for.body38
  %65 = load i32, i32* %x, align 4, !dbg !4675
  %inc41 = add nsw i32 %65, 1, !dbg !4675
  store i32 %inc41, i32* %x, align 4, !dbg !4675
  br label %for.cond35, !dbg !4676, !llvm.loop !4677

for.end42:                                        ; preds = %for.cond35
  br label %for.inc43, !dbg !4678

for.inc43:                                        ; preds = %for.end42
  %66 = load i32, i32* %S, align 4, !dbg !4679
  %inc44 = add nsw i32 %66, 1, !dbg !4679
  store i32 %inc44, i32* %S, align 4, !dbg !4679
  br label %for.cond31, !dbg !4680, !llvm.loop !4681

for.end45:                                        ; preds = %for.cond31
  store i32 0, i32* %S, align 4, !dbg !4683
  br label %for.cond46, !dbg !4685

for.cond46:                                       ; preds = %for.inc132, %for.end45
  %67 = load i32, i32* %S, align 4, !dbg !4686
  %68 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !4688
  %numVerts47 = getelementptr inbounds %struct.CCGFace, %struct.CCGFace* %68, i32 0, i32 2, !dbg !4689
  %69 = load i16, i16* %numVerts47, align 8, !dbg !4689
  %conv48 = sext i16 %69 to i32, !dbg !4688
  %cmp49 = icmp slt i32 %67, %conv48, !dbg !4690
  br i1 %cmp49, label %for.body51, label %for.end134, !dbg !4691

for.body51:                                       ; preds = %for.cond46
  call void @llvm.dbg.declare(metadata i32* %prevS, metadata !4692, metadata !DIExpression()), !dbg !4694
  %70 = load i32, i32* %S, align 4, !dbg !4695
  %71 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !4696
  %numVerts52 = getelementptr inbounds %struct.CCGFace, %struct.CCGFace* %71, i32 0, i32 2, !dbg !4697
  %72 = load i16, i16* %numVerts52, align 8, !dbg !4697
  %conv53 = sext i16 %72 to i32, !dbg !4696
  %add = add nsw i32 %70, %conv53, !dbg !4698
  %sub54 = sub nsw i32 %add, 1, !dbg !4699
  %73 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !4700
  %numVerts55 = getelementptr inbounds %struct.CCGFace, %struct.CCGFace* %73, i32 0, i32 2, !dbg !4701
  %74 = load i16, i16* %numVerts55, align 8, !dbg !4701
  %conv56 = sext i16 %74 to i32, !dbg !4700
  %rem = srem i32 %sub54, %conv56, !dbg !4702
  store i32 %rem, i32* %prevS, align 4, !dbg !4694
  call void @llvm.dbg.declare(metadata %struct.CCGEdge** %e57, metadata !4703, metadata !DIExpression()), !dbg !4704
  %75 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !4705
  %call58 = call %struct.CCGEdge** @FACE_getEdges(%struct.CCGFace* %75), !dbg !4706
  %76 = load i32, i32* %S, align 4, !dbg !4707
  %idxprom59 = sext i32 %76 to i64, !dbg !4706
  %arrayidx60 = getelementptr inbounds %struct.CCGEdge*, %struct.CCGEdge** %call58, i64 %idxprom59, !dbg !4706
  %77 = load %struct.CCGEdge*, %struct.CCGEdge** %arrayidx60, align 8, !dbg !4706
  store %struct.CCGEdge* %77, %struct.CCGEdge** %e57, align 8, !dbg !4704
  call void @llvm.dbg.declare(metadata %struct.CCGEdge** %prevE, metadata !4708, metadata !DIExpression()), !dbg !4709
  %78 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !4710
  %call61 = call %struct.CCGEdge** @FACE_getEdges(%struct.CCGFace* %78), !dbg !4711
  %79 = load i32, i32* %prevS, align 4, !dbg !4712
  %idxprom62 = sext i32 %79 to i64, !dbg !4711
  %arrayidx63 = getelementptr inbounds %struct.CCGEdge*, %struct.CCGEdge** %call61, i64 %idxprom62, !dbg !4711
  %80 = load %struct.CCGEdge*, %struct.CCGEdge** %arrayidx63, align 8, !dbg !4711
  store %struct.CCGEdge* %80, %struct.CCGEdge** %prevE, align 8, !dbg !4709
  %81 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !4713
  %call64 = call i8* @FACE_getCenterData(%struct.CCGFace* %81), !dbg !4714
  %82 = bitcast i8* %call64 to float*, !dbg !4715
  %83 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !4716
  %84 = load i32, i32* %lvl.addr, align 4, !dbg !4716
  %85 = load i32, i32* %S, align 4, !dbg !4716
  %86 = load i32, i32* %subdivLevels, align 4, !dbg !4716
  %87 = load i32, i32* %vertDataSize, align 4, !dbg !4716
  %call65 = call i8* @_face_getIFCo(%struct.CCGFace* %83, i32 %84, i32 %85, i32 0, i32 0, i32 %86, i32 %87), !dbg !4716
  %88 = bitcast i8* %call65 to float*, !dbg !4716
  %89 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !4717
  call void @VertDataAdd(float* %82, float* %88, %struct.CCGSubSurf* %89), !dbg !4718
  %90 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !4719
  %call66 = call %struct.CCGVert** @FACE_getVerts(%struct.CCGFace* %90), !dbg !4721
  %91 = load i32, i32* %S, align 4, !dbg !4722
  %idxprom67 = sext i32 %91 to i64, !dbg !4721
  %arrayidx68 = getelementptr inbounds %struct.CCGVert*, %struct.CCGVert** %call66, i64 %idxprom67, !dbg !4721
  %92 = load %struct.CCGVert*, %struct.CCGVert** %arrayidx68, align 8, !dbg !4721
  %flags = getelementptr inbounds %struct.CCGVert, %struct.CCGVert* %92, i32 0, i32 4, !dbg !4723
  %93 = load i16, i16* %flags, align 4, !dbg !4723
  %conv69 = sext i16 %93 to i32, !dbg !4721
  %and = and i32 %conv69, 1, !dbg !4724
  %tobool70 = icmp ne i32 %and, 0, !dbg !4724
  br i1 %tobool70, label %if.then71, label %if.end77, !dbg !4725

if.then71:                                        ; preds = %for.body51
  %94 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !4726
  %call72 = call %struct.CCGVert** @FACE_getVerts(%struct.CCGFace* %94), !dbg !4726
  %95 = load i32, i32* %S, align 4, !dbg !4726
  %idxprom73 = sext i32 %95 to i64, !dbg !4726
  %arrayidx74 = getelementptr inbounds %struct.CCGVert*, %struct.CCGVert** %call72, i64 %idxprom73, !dbg !4726
  %96 = load %struct.CCGVert*, %struct.CCGVert** %arrayidx74, align 8, !dbg !4726
  %97 = load i32, i32* %lvl.addr, align 4, !dbg !4726
  %98 = load i32, i32* %vertDataSize, align 4, !dbg !4726
  %call75 = call i8* @_vert_getCo(%struct.CCGVert* %96, i32 %97, i32 %98), !dbg !4726
  %99 = bitcast i8* %call75 to float*, !dbg !4726
  %100 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !4727
  %101 = load i32, i32* %lvl.addr, align 4, !dbg !4727
  %102 = load i32, i32* %S, align 4, !dbg !4727
  %103 = load i32, i32* %cornerIdx, align 4, !dbg !4727
  %104 = load i32, i32* %cornerIdx, align 4, !dbg !4727
  %105 = load i32, i32* %subdivLevels, align 4, !dbg !4727
  %106 = load i32, i32* %vertDataSize, align 4, !dbg !4727
  %call76 = call i8* @_face_getIFCo(%struct.CCGFace* %100, i32 %101, i32 %102, i32 %103, i32 %104, i32 %105, i32 %106), !dbg !4727
  %107 = bitcast i8* %call76 to float*, !dbg !4727
  %108 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !4728
  call void @VertDataAdd(float* %99, float* %107, %struct.CCGSubSurf* %108), !dbg !4729
  br label %if.end77, !dbg !4729

if.end77:                                         ; preds = %if.then71, %for.body51
  store i32 1, i32* %x, align 4, !dbg !4730
  br label %for.cond78, !dbg !4732

for.cond78:                                       ; preds = %for.inc87, %if.end77
  %109 = load i32, i32* %x, align 4, !dbg !4733
  %110 = load i32, i32* %gridSize, align 4, !dbg !4735
  %sub79 = sub nsw i32 %110, 1, !dbg !4736
  %cmp80 = icmp slt i32 %109, %sub79, !dbg !4737
  br i1 %cmp80, label %for.body82, label %for.end89, !dbg !4738

for.body82:                                       ; preds = %for.cond78
  %111 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !4739
  %112 = load i32, i32* %lvl.addr, align 4, !dbg !4739
  %113 = load i32, i32* %S, align 4, !dbg !4739
  %114 = load i32, i32* %x, align 4, !dbg !4739
  %115 = load i32, i32* %subdivLevels, align 4, !dbg !4739
  %116 = load i32, i32* %vertDataSize, align 4, !dbg !4739
  %call83 = call i8* @_face_getIECo(%struct.CCGFace* %111, i32 %112, i32 %113, i32 %114, i32 %115, i32 %116), !dbg !4739
  %117 = bitcast i8* %call83 to float*, !dbg !4739
  %118 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !4741
  %119 = load i32, i32* %lvl.addr, align 4, !dbg !4741
  %120 = load i32, i32* %S, align 4, !dbg !4741
  %121 = load i32, i32* %x, align 4, !dbg !4741
  %122 = load i32, i32* %subdivLevels, align 4, !dbg !4741
  %123 = load i32, i32* %vertDataSize, align 4, !dbg !4741
  %call84 = call i8* @_face_getIFCo(%struct.CCGFace* %118, i32 %119, i32 %120, i32 %121, i32 0, i32 %122, i32 %123), !dbg !4741
  %124 = bitcast i8* %call84 to float*, !dbg !4741
  %125 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !4742
  call void @VertDataAdd(float* %117, float* %124, %struct.CCGSubSurf* %125), !dbg !4743
  %126 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !4744
  %127 = load i32, i32* %lvl.addr, align 4, !dbg !4744
  %128 = load i32, i32* %prevS, align 4, !dbg !4744
  %129 = load i32, i32* %x, align 4, !dbg !4744
  %130 = load i32, i32* %subdivLevels, align 4, !dbg !4744
  %131 = load i32, i32* %vertDataSize, align 4, !dbg !4744
  %call85 = call i8* @_face_getIECo(%struct.CCGFace* %126, i32 %127, i32 %128, i32 %129, i32 %130, i32 %131), !dbg !4744
  %132 = bitcast i8* %call85 to float*, !dbg !4744
  %133 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !4745
  %134 = load i32, i32* %lvl.addr, align 4, !dbg !4745
  %135 = load i32, i32* %S, align 4, !dbg !4745
  %136 = load i32, i32* %x, align 4, !dbg !4745
  %137 = load i32, i32* %subdivLevels, align 4, !dbg !4745
  %138 = load i32, i32* %vertDataSize, align 4, !dbg !4745
  %call86 = call i8* @_face_getIFCo(%struct.CCGFace* %133, i32 %134, i32 %135, i32 0, i32 %136, i32 %137, i32 %138), !dbg !4745
  %139 = bitcast i8* %call86 to float*, !dbg !4745
  %140 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !4746
  call void @VertDataAdd(float* %132, float* %139, %struct.CCGSubSurf* %140), !dbg !4747
  br label %for.inc87, !dbg !4748

for.inc87:                                        ; preds = %for.body82
  %141 = load i32, i32* %x, align 4, !dbg !4749
  %inc88 = add nsw i32 %141, 1, !dbg !4749
  store i32 %inc88, i32* %x, align 4, !dbg !4749
  br label %for.cond78, !dbg !4750, !llvm.loop !4751

for.end89:                                        ; preds = %for.cond78
  store i32 0, i32* %x, align 4, !dbg !4753
  br label %for.cond90, !dbg !4755

for.cond90:                                       ; preds = %for.inc129, %for.end89
  %142 = load i32, i32* %x, align 4, !dbg !4756
  %143 = load i32, i32* %gridSize, align 4, !dbg !4758
  %sub91 = sub nsw i32 %143, 1, !dbg !4759
  %cmp92 = icmp slt i32 %142, %sub91, !dbg !4760
  br i1 %cmp92, label %for.body94, label %for.end131, !dbg !4761

for.body94:                                       ; preds = %for.cond90
  call void @llvm.dbg.declare(metadata i32* %eI, metadata !4762, metadata !DIExpression()), !dbg !4764
  %144 = load i32, i32* %gridSize, align 4, !dbg !4765
  %sub95 = sub nsw i32 %144, 1, !dbg !4766
  %145 = load i32, i32* %x, align 4, !dbg !4767
  %sub96 = sub nsw i32 %sub95, %145, !dbg !4768
  store i32 %sub96, i32* %eI, align 4, !dbg !4764
  %146 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !4769
  %call97 = call %struct.CCGEdge** @FACE_getEdges(%struct.CCGFace* %146), !dbg !4771
  %147 = load i32, i32* %S, align 4, !dbg !4772
  %idxprom98 = sext i32 %147 to i64, !dbg !4771
  %arrayidx99 = getelementptr inbounds %struct.CCGEdge*, %struct.CCGEdge** %call97, i64 %idxprom98, !dbg !4771
  %148 = load %struct.CCGEdge*, %struct.CCGEdge** %arrayidx99, align 8, !dbg !4771
  %flags100 = getelementptr inbounds %struct.CCGEdge, %struct.CCGEdge* %148, i32 0, i32 3, !dbg !4773
  %149 = load i16, i16* %flags100, align 2, !dbg !4773
  %conv101 = sext i16 %149 to i32, !dbg !4771
  %and102 = and i32 %conv101, 1, !dbg !4774
  %tobool103 = icmp ne i32 %and102, 0, !dbg !4774
  br i1 %tobool103, label %if.then104, label %if.end110, !dbg !4775

if.then104:                                       ; preds = %for.body94
  %150 = load %struct.CCGEdge*, %struct.CCGEdge** %e57, align 8, !dbg !4776
  %151 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !4777
  %call105 = call %struct.CCGVert** @FACE_getVerts(%struct.CCGFace* %151), !dbg !4778
  %152 = load i32, i32* %S, align 4, !dbg !4779
  %idxprom106 = sext i32 %152 to i64, !dbg !4778
  %arrayidx107 = getelementptr inbounds %struct.CCGVert*, %struct.CCGVert** %call105, i64 %idxprom106, !dbg !4778
  %153 = load %struct.CCGVert*, %struct.CCGVert** %arrayidx107, align 8, !dbg !4778
  %154 = load i32, i32* %lvl.addr, align 4, !dbg !4780
  %155 = load i32, i32* %eI, align 4, !dbg !4781
  %156 = load i32, i32* %vertDataSize, align 4, !dbg !4782
  %call108 = call i8* @_edge_getCoVert(%struct.CCGEdge* %150, %struct.CCGVert* %153, i32 %154, i32 %155, i32 %156), !dbg !4783
  %157 = bitcast i8* %call108 to float*, !dbg !4783
  %158 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !4784
  %159 = load i32, i32* %lvl.addr, align 4, !dbg !4784
  %160 = load i32, i32* %S, align 4, !dbg !4784
  %161 = load i32, i32* %cornerIdx, align 4, !dbg !4784
  %162 = load i32, i32* %x, align 4, !dbg !4784
  %163 = load i32, i32* %subdivLevels, align 4, !dbg !4784
  %164 = load i32, i32* %vertDataSize, align 4, !dbg !4784
  %call109 = call i8* @_face_getIFCo(%struct.CCGFace* %158, i32 %159, i32 %160, i32 %161, i32 %162, i32 %163, i32 %164), !dbg !4784
  %165 = bitcast i8* %call109 to float*, !dbg !4784
  %166 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !4785
  call void @VertDataAdd(float* %157, float* %165, %struct.CCGSubSurf* %166), !dbg !4786
  br label %if.end110, !dbg !4786

if.end110:                                        ; preds = %if.then104, %for.body94
  %167 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !4787
  %call111 = call %struct.CCGEdge** @FACE_getEdges(%struct.CCGFace* %167), !dbg !4789
  %168 = load i32, i32* %prevS, align 4, !dbg !4790
  %idxprom112 = sext i32 %168 to i64, !dbg !4789
  %arrayidx113 = getelementptr inbounds %struct.CCGEdge*, %struct.CCGEdge** %call111, i64 %idxprom112, !dbg !4789
  %169 = load %struct.CCGEdge*, %struct.CCGEdge** %arrayidx113, align 8, !dbg !4789
  %flags114 = getelementptr inbounds %struct.CCGEdge, %struct.CCGEdge* %169, i32 0, i32 3, !dbg !4791
  %170 = load i16, i16* %flags114, align 2, !dbg !4791
  %conv115 = sext i16 %170 to i32, !dbg !4789
  %and116 = and i32 %conv115, 1, !dbg !4792
  %tobool117 = icmp ne i32 %and116, 0, !dbg !4792
  br i1 %tobool117, label %if.then118, label %if.end128, !dbg !4793

if.then118:                                       ; preds = %if.end110
  %171 = load i32, i32* %x, align 4, !dbg !4794
  %cmp119 = icmp ne i32 %171, 0, !dbg !4796
  br i1 %cmp119, label %if.then121, label %if.end127, !dbg !4797

if.then121:                                       ; preds = %if.then118
  %172 = load %struct.CCGEdge*, %struct.CCGEdge** %prevE, align 8, !dbg !4798
  %173 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !4799
  %call122 = call %struct.CCGVert** @FACE_getVerts(%struct.CCGFace* %173), !dbg !4800
  %174 = load i32, i32* %S, align 4, !dbg !4801
  %idxprom123 = sext i32 %174 to i64, !dbg !4800
  %arrayidx124 = getelementptr inbounds %struct.CCGVert*, %struct.CCGVert** %call122, i64 %idxprom123, !dbg !4800
  %175 = load %struct.CCGVert*, %struct.CCGVert** %arrayidx124, align 8, !dbg !4800
  %176 = load i32, i32* %lvl.addr, align 4, !dbg !4802
  %177 = load i32, i32* %eI, align 4, !dbg !4803
  %178 = load i32, i32* %vertDataSize, align 4, !dbg !4804
  %call125 = call i8* @_edge_getCoVert(%struct.CCGEdge* %172, %struct.CCGVert* %175, i32 %176, i32 %177, i32 %178), !dbg !4805
  %179 = bitcast i8* %call125 to float*, !dbg !4805
  %180 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !4806
  %181 = load i32, i32* %lvl.addr, align 4, !dbg !4806
  %182 = load i32, i32* %S, align 4, !dbg !4806
  %183 = load i32, i32* %x, align 4, !dbg !4806
  %184 = load i32, i32* %cornerIdx, align 4, !dbg !4806
  %185 = load i32, i32* %subdivLevels, align 4, !dbg !4806
  %186 = load i32, i32* %vertDataSize, align 4, !dbg !4806
  %call126 = call i8* @_face_getIFCo(%struct.CCGFace* %180, i32 %181, i32 %182, i32 %183, i32 %184, i32 %185, i32 %186), !dbg !4806
  %187 = bitcast i8* %call126 to float*, !dbg !4806
  %188 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !4807
  call void @VertDataAdd(float* %179, float* %187, %struct.CCGSubSurf* %188), !dbg !4808
  br label %if.end127, !dbg !4808

if.end127:                                        ; preds = %if.then121, %if.then118
  br label %if.end128, !dbg !4809

if.end128:                                        ; preds = %if.end127, %if.end110
  br label %for.inc129, !dbg !4810

for.inc129:                                       ; preds = %if.end128
  %189 = load i32, i32* %x, align 4, !dbg !4811
  %inc130 = add nsw i32 %189, 1, !dbg !4811
  store i32 %inc130, i32* %x, align 4, !dbg !4811
  br label %for.cond90, !dbg !4812, !llvm.loop !4813

for.end131:                                       ; preds = %for.cond90
  br label %for.inc132, !dbg !4815

for.inc132:                                       ; preds = %for.end131
  %190 = load i32, i32* %S, align 4, !dbg !4816
  %inc133 = add nsw i32 %190, 1, !dbg !4816
  store i32 %inc133, i32* %S, align 4, !dbg !4816
  br label %for.cond46, !dbg !4817, !llvm.loop !4818

for.end134:                                       ; preds = %for.cond46
  br label %for.inc135, !dbg !4820

for.inc135:                                       ; preds = %for.end134
  %191 = load i32, i32* %i, align 4, !dbg !4821
  %inc136 = add nsw i32 %191, 1, !dbg !4821
  store i32 %inc136, i32* %i, align 4, !dbg !4821
  br label %for.cond25, !dbg !4822, !llvm.loop !4823

for.end137:                                       ; preds = %for.cond25
  store i32 0, i32* %i, align 4, !dbg !4825
  br label %for.cond138, !dbg !4827

for.cond138:                                      ; preds = %for.inc153, %for.end137
  %192 = load i32, i32* %i, align 4, !dbg !4828
  %193 = load i32, i32* %numEffectedV, align 4, !dbg !4830
  %cmp139 = icmp slt i32 %192, %193, !dbg !4831
  br i1 %cmp139, label %for.body141, label %for.end155, !dbg !4832

for.body141:                                      ; preds = %for.cond138
  call void @llvm.dbg.declare(metadata %struct.CCGVert** %v142, metadata !4833, metadata !DIExpression()), !dbg !4835
  %194 = load %struct.CCGVert**, %struct.CCGVert*** %effectedV, align 8, !dbg !4836
  %195 = load i32, i32* %i, align 4, !dbg !4837
  %idxprom143 = sext i32 %195 to i64, !dbg !4836
  %arrayidx144 = getelementptr inbounds %struct.CCGVert*, %struct.CCGVert** %194, i64 %idxprom143, !dbg !4836
  %196 = load %struct.CCGVert*, %struct.CCGVert** %arrayidx144, align 8, !dbg !4836
  store %struct.CCGVert* %196, %struct.CCGVert** %v142, align 8, !dbg !4835
  %197 = load %struct.CCGVert*, %struct.CCGVert** %v142, align 8, !dbg !4838
  %numFaces145 = getelementptr inbounds %struct.CCGVert, %struct.CCGVert* %197, i32 0, i32 3, !dbg !4840
  %198 = load i16, i16* %numFaces145, align 2, !dbg !4840
  %tobool146 = icmp ne i16 %198, 0, !dbg !4838
  br i1 %tobool146, label %if.then147, label %if.end152, !dbg !4841

if.then147:                                       ; preds = %for.body141
  %199 = load %struct.CCGVert*, %struct.CCGVert** %v142, align 8, !dbg !4842
  %200 = load i32, i32* %lvl.addr, align 4, !dbg !4842
  %201 = load i32, i32* %vertDataSize, align 4, !dbg !4842
  %call148 = call i8* @_vert_getCo(%struct.CCGVert* %199, i32 %200, i32 %201), !dbg !4842
  %202 = bitcast i8* %call148 to float*, !dbg !4842
  %203 = load %struct.CCGVert*, %struct.CCGVert** %v142, align 8, !dbg !4843
  %numFaces149 = getelementptr inbounds %struct.CCGVert, %struct.CCGVert* %203, i32 0, i32 3, !dbg !4844
  %204 = load i16, i16* %numFaces149, align 2, !dbg !4844
  %conv150 = sext i16 %204 to i32, !dbg !4843
  %conv151 = sitofp i32 %conv150 to float, !dbg !4843
  %div = fdiv float 1.000000e+00, %conv151, !dbg !4845
  %205 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !4846
  call void @VertDataMulN(float* %202, float %div, %struct.CCGSubSurf* %205), !dbg !4847
  br label %if.end152, !dbg !4847

if.end152:                                        ; preds = %if.then147, %for.body141
  br label %for.inc153, !dbg !4848

for.inc153:                                       ; preds = %if.end152
  %206 = load i32, i32* %i, align 4, !dbg !4849
  %inc154 = add nsw i32 %206, 1, !dbg !4849
  store i32 %inc154, i32* %i, align 4, !dbg !4849
  br label %for.cond138, !dbg !4850, !llvm.loop !4851

for.end155:                                       ; preds = %for.cond138
  store i32 0, i32* %i, align 4, !dbg !4853
  br label %for.cond156, !dbg !4855

for.cond156:                                      ; preds = %for.inc185, %for.end155
  %207 = load i32, i32* %i, align 4, !dbg !4856
  %208 = load i32, i32* %numEffectedE, align 4, !dbg !4858
  %cmp157 = icmp slt i32 %207, %208, !dbg !4859
  br i1 %cmp157, label %for.body159, label %for.end187, !dbg !4860

for.body159:                                      ; preds = %for.cond156
  call void @llvm.dbg.declare(metadata %struct.CCGEdge** %e160, metadata !4861, metadata !DIExpression()), !dbg !4863
  %209 = load %struct.CCGEdge**, %struct.CCGEdge*** %effectedE, align 8, !dbg !4864
  %210 = load i32, i32* %i, align 4, !dbg !4865
  %idxprom161 = sext i32 %210 to i64, !dbg !4864
  %arrayidx162 = getelementptr inbounds %struct.CCGEdge*, %struct.CCGEdge** %209, i64 %idxprom161, !dbg !4864
  %211 = load %struct.CCGEdge*, %struct.CCGEdge** %arrayidx162, align 8, !dbg !4864
  store %struct.CCGEdge* %211, %struct.CCGEdge** %e160, align 8, !dbg !4863
  %212 = load %struct.CCGEdge*, %struct.CCGEdge** %e160, align 8, !dbg !4866
  %213 = load i32, i32* %lvl.addr, align 4, !dbg !4866
  %214 = load i32, i32* %vertDataSize, align 4, !dbg !4866
  %call163 = call i8* @_edge_getCo(%struct.CCGEdge* %212, i32 %213, i32 0, i32 %214), !dbg !4866
  %215 = bitcast i8* %call163 to float*, !dbg !4866
  %216 = load %struct.CCGEdge*, %struct.CCGEdge** %e160, align 8, !dbg !4867
  %v0 = getelementptr inbounds %struct.CCGEdge, %struct.CCGEdge* %216, i32 0, i32 5, !dbg !4867
  %217 = load %struct.CCGVert*, %struct.CCGVert** %v0, align 8, !dbg !4867
  %218 = load i32, i32* %lvl.addr, align 4, !dbg !4867
  %219 = load i32, i32* %vertDataSize, align 4, !dbg !4867
  %call164 = call i8* @_vert_getCo(%struct.CCGVert* %217, i32 %218, i32 %219), !dbg !4867
  %220 = bitcast i8* %call164 to float*, !dbg !4867
  %221 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !4868
  call void @VertDataCopy(float* %215, float* %220, %struct.CCGSubSurf* %221), !dbg !4869
  %222 = load %struct.CCGEdge*, %struct.CCGEdge** %e160, align 8, !dbg !4870
  %223 = load i32, i32* %lvl.addr, align 4, !dbg !4870
  %224 = load i32, i32* %edgeSize, align 4, !dbg !4870
  %sub165 = sub nsw i32 %224, 1, !dbg !4870
  %225 = load i32, i32* %vertDataSize, align 4, !dbg !4870
  %call166 = call i8* @_edge_getCo(%struct.CCGEdge* %222, i32 %223, i32 %sub165, i32 %225), !dbg !4870
  %226 = bitcast i8* %call166 to float*, !dbg !4870
  %227 = load %struct.CCGEdge*, %struct.CCGEdge** %e160, align 8, !dbg !4871
  %v1 = getelementptr inbounds %struct.CCGEdge, %struct.CCGEdge* %227, i32 0, i32 6, !dbg !4871
  %228 = load %struct.CCGVert*, %struct.CCGVert** %v1, align 8, !dbg !4871
  %229 = load i32, i32* %lvl.addr, align 4, !dbg !4871
  %230 = load i32, i32* %vertDataSize, align 4, !dbg !4871
  %call167 = call i8* @_vert_getCo(%struct.CCGVert* %228, i32 %229, i32 %230), !dbg !4871
  %231 = bitcast i8* %call167 to float*, !dbg !4871
  %232 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !4872
  call void @VertDataCopy(float* %226, float* %231, %struct.CCGSubSurf* %232), !dbg !4873
  %233 = load %struct.CCGEdge*, %struct.CCGEdge** %e160, align 8, !dbg !4874
  %numFaces168 = getelementptr inbounds %struct.CCGEdge, %struct.CCGEdge* %233, i32 0, i32 2, !dbg !4876
  %234 = load i16, i16* %numFaces168, align 8, !dbg !4876
  %tobool169 = icmp ne i16 %234, 0, !dbg !4874
  br i1 %tobool169, label %if.then170, label %if.end184, !dbg !4877

if.then170:                                       ; preds = %for.body159
  store i32 1, i32* %x, align 4, !dbg !4878
  br label %for.cond171, !dbg !4880

for.cond171:                                      ; preds = %for.inc181, %if.then170
  %235 = load i32, i32* %x, align 4, !dbg !4881
  %236 = load i32, i32* %edgeSize, align 4, !dbg !4883
  %sub172 = sub nsw i32 %236, 1, !dbg !4884
  %cmp173 = icmp slt i32 %235, %sub172, !dbg !4885
  br i1 %cmp173, label %for.body175, label %for.end183, !dbg !4886

for.body175:                                      ; preds = %for.cond171
  %237 = load %struct.CCGEdge*, %struct.CCGEdge** %e160, align 8, !dbg !4887
  %238 = load i32, i32* %lvl.addr, align 4, !dbg !4887
  %239 = load i32, i32* %x, align 4, !dbg !4887
  %240 = load i32, i32* %vertDataSize, align 4, !dbg !4887
  %call176 = call i8* @_edge_getCo(%struct.CCGEdge* %237, i32 %238, i32 %239, i32 %240), !dbg !4887
  %241 = bitcast i8* %call176 to float*, !dbg !4887
  %242 = load %struct.CCGEdge*, %struct.CCGEdge** %e160, align 8, !dbg !4888
  %numFaces177 = getelementptr inbounds %struct.CCGEdge, %struct.CCGEdge* %242, i32 0, i32 2, !dbg !4889
  %243 = load i16, i16* %numFaces177, align 8, !dbg !4889
  %conv178 = sext i16 %243 to i32, !dbg !4888
  %conv179 = sitofp i32 %conv178 to float, !dbg !4888
  %div180 = fdiv float 1.000000e+00, %conv179, !dbg !4890
  %244 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !4891
  call void @VertDataMulN(float* %241, float %div180, %struct.CCGSubSurf* %244), !dbg !4892
  br label %for.inc181, !dbg !4892

for.inc181:                                       ; preds = %for.body175
  %245 = load i32, i32* %x, align 4, !dbg !4893
  %inc182 = add nsw i32 %245, 1, !dbg !4893
  store i32 %inc182, i32* %x, align 4, !dbg !4893
  br label %for.cond171, !dbg !4894, !llvm.loop !4895

for.end183:                                       ; preds = %for.cond171
  br label %if.end184, !dbg !4896

if.end184:                                        ; preds = %for.end183, %for.body159
  br label %for.inc185, !dbg !4897

for.inc185:                                       ; preds = %if.end184
  %246 = load i32, i32* %i, align 4, !dbg !4898
  %inc186 = add nsw i32 %246, 1, !dbg !4898
  store i32 %inc186, i32* %i, align 4, !dbg !4898
  br label %for.cond156, !dbg !4899, !llvm.loop !4900

for.end187:                                       ; preds = %for.cond156
  store i32 0, i32* %i, align 4, !dbg !4902
  br label %for.cond188, !dbg !4904

for.cond188:                                      ; preds = %for.inc289, %for.end187
  %247 = load i32, i32* %i, align 4, !dbg !4905
  %248 = load i32, i32* %numEffectedF.addr, align 4, !dbg !4907
  %cmp189 = icmp slt i32 %247, %248, !dbg !4908
  br i1 %cmp189, label %for.body191, label %for.end291, !dbg !4909

for.body191:                                      ; preds = %for.cond188
  call void @llvm.dbg.declare(metadata %struct.CCGFace** %f192, metadata !4910, metadata !DIExpression()), !dbg !4912
  %249 = load %struct.CCGFace**, %struct.CCGFace*** %effectedF.addr, align 8, !dbg !4913
  %250 = load i32, i32* %i, align 4, !dbg !4914
  %idxprom193 = sext i32 %250 to i64, !dbg !4913
  %arrayidx194 = getelementptr inbounds %struct.CCGFace*, %struct.CCGFace** %249, i64 %idxprom193, !dbg !4913
  %251 = load %struct.CCGFace*, %struct.CCGFace** %arrayidx194, align 8, !dbg !4913
  store %struct.CCGFace* %251, %struct.CCGFace** %f192, align 8, !dbg !4912
  %252 = load %struct.CCGFace*, %struct.CCGFace** %f192, align 8, !dbg !4915
  %call195 = call i8* @FACE_getCenterData(%struct.CCGFace* %252), !dbg !4916
  %253 = bitcast i8* %call195 to float*, !dbg !4917
  %254 = load %struct.CCGFace*, %struct.CCGFace** %f192, align 8, !dbg !4918
  %numVerts196 = getelementptr inbounds %struct.CCGFace, %struct.CCGFace* %254, i32 0, i32 2, !dbg !4919
  %255 = load i16, i16* %numVerts196, align 8, !dbg !4919
  %conv197 = sext i16 %255 to i32, !dbg !4918
  %conv198 = sitofp i32 %conv197 to float, !dbg !4918
  %div199 = fdiv float 1.000000e+00, %conv198, !dbg !4920
  %256 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !4921
  call void @VertDataMulN(float* %253, float %div199, %struct.CCGSubSurf* %256), !dbg !4922
  store i32 0, i32* %S, align 4, !dbg !4923
  br label %for.cond200, !dbg !4925

for.cond200:                                      ; preds = %for.inc215, %for.body191
  %257 = load i32, i32* %S, align 4, !dbg !4926
  %258 = load %struct.CCGFace*, %struct.CCGFace** %f192, align 8, !dbg !4928
  %numVerts201 = getelementptr inbounds %struct.CCGFace, %struct.CCGFace* %258, i32 0, i32 2, !dbg !4929
  %259 = load i16, i16* %numVerts201, align 8, !dbg !4929
  %conv202 = sext i16 %259 to i32, !dbg !4928
  %cmp203 = icmp slt i32 %257, %conv202, !dbg !4930
  br i1 %cmp203, label %for.body205, label %for.end217, !dbg !4931

for.body205:                                      ; preds = %for.cond200
  store i32 1, i32* %x, align 4, !dbg !4932
  br label %for.cond206, !dbg !4934

for.cond206:                                      ; preds = %for.inc212, %for.body205
  %260 = load i32, i32* %x, align 4, !dbg !4935
  %261 = load i32, i32* %gridSize, align 4, !dbg !4937
  %sub207 = sub nsw i32 %261, 1, !dbg !4938
  %cmp208 = icmp slt i32 %260, %sub207, !dbg !4939
  br i1 %cmp208, label %for.body210, label %for.end214, !dbg !4940

for.body210:                                      ; preds = %for.cond206
  %262 = load %struct.CCGFace*, %struct.CCGFace** %f192, align 8, !dbg !4941
  %263 = load i32, i32* %lvl.addr, align 4, !dbg !4941
  %264 = load i32, i32* %S, align 4, !dbg !4941
  %265 = load i32, i32* %x, align 4, !dbg !4941
  %266 = load i32, i32* %subdivLevels, align 4, !dbg !4941
  %267 = load i32, i32* %vertDataSize, align 4, !dbg !4941
  %call211 = call i8* @_face_getIECo(%struct.CCGFace* %262, i32 %263, i32 %264, i32 %265, i32 %266, i32 %267), !dbg !4941
  %268 = bitcast i8* %call211 to float*, !dbg !4941
  %269 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !4942
  call void @VertDataMulN(float* %268, float 5.000000e-01, %struct.CCGSubSurf* %269), !dbg !4943
  br label %for.inc212, !dbg !4943

for.inc212:                                       ; preds = %for.body210
  %270 = load i32, i32* %x, align 4, !dbg !4944
  %inc213 = add nsw i32 %270, 1, !dbg !4944
  store i32 %inc213, i32* %x, align 4, !dbg !4944
  br label %for.cond206, !dbg !4945, !llvm.loop !4946

for.end214:                                       ; preds = %for.cond206
  br label %for.inc215, !dbg !4947

for.inc215:                                       ; preds = %for.end214
  %271 = load i32, i32* %S, align 4, !dbg !4948
  %inc216 = add nsw i32 %271, 1, !dbg !4948
  store i32 %inc216, i32* %S, align 4, !dbg !4948
  br label %for.cond200, !dbg !4949, !llvm.loop !4950

for.end217:                                       ; preds = %for.cond200
  store i32 0, i32* %S, align 4, !dbg !4952
  br label %for.cond218, !dbg !4954

for.cond218:                                      ; preds = %for.inc286, %for.end217
  %272 = load i32, i32* %S, align 4, !dbg !4955
  %273 = load %struct.CCGFace*, %struct.CCGFace** %f192, align 8, !dbg !4957
  %numVerts219 = getelementptr inbounds %struct.CCGFace, %struct.CCGFace* %273, i32 0, i32 2, !dbg !4958
  %274 = load i16, i16* %numVerts219, align 8, !dbg !4958
  %conv220 = sext i16 %274 to i32, !dbg !4957
  %cmp221 = icmp slt i32 %272, %conv220, !dbg !4959
  br i1 %cmp221, label %for.body223, label %for.end288, !dbg !4960

for.body223:                                      ; preds = %for.cond218
  call void @llvm.dbg.declare(metadata i32* %prevS224, metadata !4961, metadata !DIExpression()), !dbg !4963
  %275 = load i32, i32* %S, align 4, !dbg !4964
  %276 = load %struct.CCGFace*, %struct.CCGFace** %f192, align 8, !dbg !4965
  %numVerts225 = getelementptr inbounds %struct.CCGFace, %struct.CCGFace* %276, i32 0, i32 2, !dbg !4966
  %277 = load i16, i16* %numVerts225, align 8, !dbg !4966
  %conv226 = sext i16 %277 to i32, !dbg !4965
  %add227 = add nsw i32 %275, %conv226, !dbg !4967
  %sub228 = sub nsw i32 %add227, 1, !dbg !4968
  %278 = load %struct.CCGFace*, %struct.CCGFace** %f192, align 8, !dbg !4969
  %numVerts229 = getelementptr inbounds %struct.CCGFace, %struct.CCGFace* %278, i32 0, i32 2, !dbg !4970
  %279 = load i16, i16* %numVerts229, align 8, !dbg !4970
  %conv230 = sext i16 %279 to i32, !dbg !4969
  %rem231 = srem i32 %sub228, %conv230, !dbg !4971
  store i32 %rem231, i32* %prevS224, align 4, !dbg !4963
  call void @llvm.dbg.declare(metadata %struct.CCGEdge** %e232, metadata !4972, metadata !DIExpression()), !dbg !4973
  %280 = load %struct.CCGFace*, %struct.CCGFace** %f192, align 8, !dbg !4974
  %call233 = call %struct.CCGEdge** @FACE_getEdges(%struct.CCGFace* %280), !dbg !4975
  %281 = load i32, i32* %S, align 4, !dbg !4976
  %idxprom234 = sext i32 %281 to i64, !dbg !4975
  %arrayidx235 = getelementptr inbounds %struct.CCGEdge*, %struct.CCGEdge** %call233, i64 %idxprom234, !dbg !4975
  %282 = load %struct.CCGEdge*, %struct.CCGEdge** %arrayidx235, align 8, !dbg !4975
  store %struct.CCGEdge* %282, %struct.CCGEdge** %e232, align 8, !dbg !4973
  call void @llvm.dbg.declare(metadata %struct.CCGEdge** %prevE236, metadata !4977, metadata !DIExpression()), !dbg !4978
  %283 = load %struct.CCGFace*, %struct.CCGFace** %f192, align 8, !dbg !4979
  %call237 = call %struct.CCGEdge** @FACE_getEdges(%struct.CCGFace* %283), !dbg !4980
  %284 = load i32, i32* %prevS224, align 4, !dbg !4981
  %idxprom238 = sext i32 %284 to i64, !dbg !4980
  %arrayidx239 = getelementptr inbounds %struct.CCGEdge*, %struct.CCGEdge** %call237, i64 %idxprom238, !dbg !4980
  %285 = load %struct.CCGEdge*, %struct.CCGEdge** %arrayidx239, align 8, !dbg !4980
  store %struct.CCGEdge* %285, %struct.CCGEdge** %prevE236, align 8, !dbg !4978
  %286 = load %struct.CCGFace*, %struct.CCGFace** %f192, align 8, !dbg !4982
  %287 = load i32, i32* %lvl.addr, align 4, !dbg !4982
  %288 = load i32, i32* %S, align 4, !dbg !4982
  %289 = load i32, i32* %subdivLevels, align 4, !dbg !4982
  %290 = load i32, i32* %vertDataSize, align 4, !dbg !4982
  %call240 = call i8* @_face_getIFCo(%struct.CCGFace* %286, i32 %287, i32 %288, i32 0, i32 0, i32 %289, i32 %290), !dbg !4982
  %291 = bitcast i8* %call240 to float*, !dbg !4982
  %292 = load %struct.CCGFace*, %struct.CCGFace** %f192, align 8, !dbg !4983
  %call241 = call i8* @FACE_getCenterData(%struct.CCGFace* %292), !dbg !4984
  %293 = bitcast i8* %call241 to float*, !dbg !4985
  %294 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !4986
  call void @VertDataCopy(float* %291, float* %293, %struct.CCGSubSurf* %294), !dbg !4987
  %295 = load %struct.CCGFace*, %struct.CCGFace** %f192, align 8, !dbg !4988
  %296 = load i32, i32* %lvl.addr, align 4, !dbg !4988
  %297 = load i32, i32* %S, align 4, !dbg !4988
  %298 = load i32, i32* %cornerIdx, align 4, !dbg !4988
  %299 = load i32, i32* %cornerIdx, align 4, !dbg !4988
  %300 = load i32, i32* %subdivLevels, align 4, !dbg !4988
  %301 = load i32, i32* %vertDataSize, align 4, !dbg !4988
  %call242 = call i8* @_face_getIFCo(%struct.CCGFace* %295, i32 %296, i32 %297, i32 %298, i32 %299, i32 %300, i32 %301), !dbg !4988
  %302 = bitcast i8* %call242 to float*, !dbg !4988
  %303 = load %struct.CCGFace*, %struct.CCGFace** %f192, align 8, !dbg !4989
  %call243 = call %struct.CCGVert** @FACE_getVerts(%struct.CCGFace* %303), !dbg !4989
  %304 = load i32, i32* %S, align 4, !dbg !4989
  %idxprom244 = sext i32 %304 to i64, !dbg !4989
  %arrayidx245 = getelementptr inbounds %struct.CCGVert*, %struct.CCGVert** %call243, i64 %idxprom244, !dbg !4989
  %305 = load %struct.CCGVert*, %struct.CCGVert** %arrayidx245, align 8, !dbg !4989
  %306 = load i32, i32* %lvl.addr, align 4, !dbg !4989
  %307 = load i32, i32* %vertDataSize, align 4, !dbg !4989
  %call246 = call i8* @_vert_getCo(%struct.CCGVert* %305, i32 %306, i32 %307), !dbg !4989
  %308 = bitcast i8* %call246 to float*, !dbg !4989
  %309 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !4990
  call void @VertDataCopy(float* %302, float* %308, %struct.CCGSubSurf* %309), !dbg !4991
  store i32 1, i32* %x, align 4, !dbg !4992
  br label %for.cond247, !dbg !4994

for.cond247:                                      ; preds = %for.inc256, %for.body223
  %310 = load i32, i32* %x, align 4, !dbg !4995
  %311 = load i32, i32* %gridSize, align 4, !dbg !4997
  %sub248 = sub nsw i32 %311, 1, !dbg !4998
  %cmp249 = icmp slt i32 %310, %sub248, !dbg !4999
  br i1 %cmp249, label %for.body251, label %for.end258, !dbg !5000

for.body251:                                      ; preds = %for.cond247
  %312 = load %struct.CCGFace*, %struct.CCGFace** %f192, align 8, !dbg !5001
  %313 = load i32, i32* %lvl.addr, align 4, !dbg !5001
  %314 = load i32, i32* %S, align 4, !dbg !5001
  %315 = load i32, i32* %x, align 4, !dbg !5001
  %316 = load i32, i32* %subdivLevels, align 4, !dbg !5001
  %317 = load i32, i32* %vertDataSize, align 4, !dbg !5001
  %call252 = call i8* @_face_getIFCo(%struct.CCGFace* %312, i32 %313, i32 %314, i32 %315, i32 0, i32 %316, i32 %317), !dbg !5001
  %318 = bitcast i8* %call252 to float*, !dbg !5001
  %319 = load %struct.CCGFace*, %struct.CCGFace** %f192, align 8, !dbg !5003
  %320 = load i32, i32* %lvl.addr, align 4, !dbg !5003
  %321 = load i32, i32* %S, align 4, !dbg !5003
  %322 = load i32, i32* %x, align 4, !dbg !5003
  %323 = load i32, i32* %subdivLevels, align 4, !dbg !5003
  %324 = load i32, i32* %vertDataSize, align 4, !dbg !5003
  %call253 = call i8* @_face_getIECo(%struct.CCGFace* %319, i32 %320, i32 %321, i32 %322, i32 %323, i32 %324), !dbg !5003
  %325 = bitcast i8* %call253 to float*, !dbg !5003
  %326 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !5004
  call void @VertDataCopy(float* %318, float* %325, %struct.CCGSubSurf* %326), !dbg !5005
  %327 = load %struct.CCGFace*, %struct.CCGFace** %f192, align 8, !dbg !5006
  %328 = load i32, i32* %lvl.addr, align 4, !dbg !5006
  %329 = load i32, i32* %S, align 4, !dbg !5006
  %330 = load i32, i32* %x, align 4, !dbg !5006
  %331 = load i32, i32* %subdivLevels, align 4, !dbg !5006
  %332 = load i32, i32* %vertDataSize, align 4, !dbg !5006
  %call254 = call i8* @_face_getIFCo(%struct.CCGFace* %327, i32 %328, i32 %329, i32 0, i32 %330, i32 %331, i32 %332), !dbg !5006
  %333 = bitcast i8* %call254 to float*, !dbg !5006
  %334 = load %struct.CCGFace*, %struct.CCGFace** %f192, align 8, !dbg !5007
  %335 = load i32, i32* %lvl.addr, align 4, !dbg !5007
  %336 = load i32, i32* %prevS224, align 4, !dbg !5007
  %337 = load i32, i32* %x, align 4, !dbg !5007
  %338 = load i32, i32* %subdivLevels, align 4, !dbg !5007
  %339 = load i32, i32* %vertDataSize, align 4, !dbg !5007
  %call255 = call i8* @_face_getIECo(%struct.CCGFace* %334, i32 %335, i32 %336, i32 %337, i32 %338, i32 %339), !dbg !5007
  %340 = bitcast i8* %call255 to float*, !dbg !5007
  %341 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !5008
  call void @VertDataCopy(float* %333, float* %340, %struct.CCGSubSurf* %341), !dbg !5009
  br label %for.inc256, !dbg !5010

for.inc256:                                       ; preds = %for.body251
  %342 = load i32, i32* %x, align 4, !dbg !5011
  %inc257 = add nsw i32 %342, 1, !dbg !5011
  store i32 %inc257, i32* %x, align 4, !dbg !5011
  br label %for.cond247, !dbg !5012, !llvm.loop !5013

for.end258:                                       ; preds = %for.cond247
  store i32 0, i32* %x, align 4, !dbg !5015
  br label %for.cond259, !dbg !5017

for.cond259:                                      ; preds = %for.inc277, %for.end258
  %343 = load i32, i32* %x, align 4, !dbg !5018
  %344 = load i32, i32* %gridSize, align 4, !dbg !5020
  %sub260 = sub nsw i32 %344, 1, !dbg !5021
  %cmp261 = icmp slt i32 %343, %sub260, !dbg !5022
  br i1 %cmp261, label %for.body263, label %for.end279, !dbg !5023

for.body263:                                      ; preds = %for.cond259
  call void @llvm.dbg.declare(metadata i32* %eI264, metadata !5024, metadata !DIExpression()), !dbg !5026
  %345 = load i32, i32* %gridSize, align 4, !dbg !5027
  %sub265 = sub nsw i32 %345, 1, !dbg !5028
  %346 = load i32, i32* %x, align 4, !dbg !5029
  %sub266 = sub nsw i32 %sub265, %346, !dbg !5030
  store i32 %sub266, i32* %eI264, align 4, !dbg !5026
  %347 = load %struct.CCGFace*, %struct.CCGFace** %f192, align 8, !dbg !5031
  %348 = load i32, i32* %lvl.addr, align 4, !dbg !5031
  %349 = load i32, i32* %S, align 4, !dbg !5031
  %350 = load i32, i32* %cornerIdx, align 4, !dbg !5031
  %351 = load i32, i32* %x, align 4, !dbg !5031
  %352 = load i32, i32* %subdivLevels, align 4, !dbg !5031
  %353 = load i32, i32* %vertDataSize, align 4, !dbg !5031
  %call267 = call i8* @_face_getIFCo(%struct.CCGFace* %347, i32 %348, i32 %349, i32 %350, i32 %351, i32 %352, i32 %353), !dbg !5031
  %354 = bitcast i8* %call267 to float*, !dbg !5031
  %355 = load %struct.CCGEdge*, %struct.CCGEdge** %e232, align 8, !dbg !5032
  %356 = load %struct.CCGFace*, %struct.CCGFace** %f192, align 8, !dbg !5033
  %call268 = call %struct.CCGVert** @FACE_getVerts(%struct.CCGFace* %356), !dbg !5034
  %357 = load i32, i32* %S, align 4, !dbg !5035
  %idxprom269 = sext i32 %357 to i64, !dbg !5034
  %arrayidx270 = getelementptr inbounds %struct.CCGVert*, %struct.CCGVert** %call268, i64 %idxprom269, !dbg !5034
  %358 = load %struct.CCGVert*, %struct.CCGVert** %arrayidx270, align 8, !dbg !5034
  %359 = load i32, i32* %lvl.addr, align 4, !dbg !5036
  %360 = load i32, i32* %eI264, align 4, !dbg !5037
  %361 = load i32, i32* %vertDataSize, align 4, !dbg !5038
  %call271 = call i8* @_edge_getCoVert(%struct.CCGEdge* %355, %struct.CCGVert* %358, i32 %359, i32 %360, i32 %361), !dbg !5039
  %362 = bitcast i8* %call271 to float*, !dbg !5039
  %363 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !5040
  call void @VertDataCopy(float* %354, float* %362, %struct.CCGSubSurf* %363), !dbg !5041
  %364 = load %struct.CCGFace*, %struct.CCGFace** %f192, align 8, !dbg !5042
  %365 = load i32, i32* %lvl.addr, align 4, !dbg !5042
  %366 = load i32, i32* %S, align 4, !dbg !5042
  %367 = load i32, i32* %x, align 4, !dbg !5042
  %368 = load i32, i32* %cornerIdx, align 4, !dbg !5042
  %369 = load i32, i32* %subdivLevels, align 4, !dbg !5042
  %370 = load i32, i32* %vertDataSize, align 4, !dbg !5042
  %call272 = call i8* @_face_getIFCo(%struct.CCGFace* %364, i32 %365, i32 %366, i32 %367, i32 %368, i32 %369, i32 %370), !dbg !5042
  %371 = bitcast i8* %call272 to float*, !dbg !5042
  %372 = load %struct.CCGEdge*, %struct.CCGEdge** %prevE236, align 8, !dbg !5043
  %373 = load %struct.CCGFace*, %struct.CCGFace** %f192, align 8, !dbg !5044
  %call273 = call %struct.CCGVert** @FACE_getVerts(%struct.CCGFace* %373), !dbg !5045
  %374 = load i32, i32* %S, align 4, !dbg !5046
  %idxprom274 = sext i32 %374 to i64, !dbg !5045
  %arrayidx275 = getelementptr inbounds %struct.CCGVert*, %struct.CCGVert** %call273, i64 %idxprom274, !dbg !5045
  %375 = load %struct.CCGVert*, %struct.CCGVert** %arrayidx275, align 8, !dbg !5045
  %376 = load i32, i32* %lvl.addr, align 4, !dbg !5047
  %377 = load i32, i32* %eI264, align 4, !dbg !5048
  %378 = load i32, i32* %vertDataSize, align 4, !dbg !5049
  %call276 = call i8* @_edge_getCoVert(%struct.CCGEdge* %372, %struct.CCGVert* %375, i32 %376, i32 %377, i32 %378), !dbg !5050
  %379 = bitcast i8* %call276 to float*, !dbg !5050
  %380 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !5051
  call void @VertDataCopy(float* %371, float* %379, %struct.CCGSubSurf* %380), !dbg !5052
  br label %for.inc277, !dbg !5053

for.inc277:                                       ; preds = %for.body263
  %381 = load i32, i32* %x, align 4, !dbg !5054
  %inc278 = add nsw i32 %381, 1, !dbg !5054
  store i32 %inc278, i32* %x, align 4, !dbg !5054
  br label %for.cond259, !dbg !5055, !llvm.loop !5056

for.end279:                                       ; preds = %for.cond259
  %382 = load %struct.CCGFace*, %struct.CCGFace** %f192, align 8, !dbg !5058
  %383 = load i32, i32* %lvl.addr, align 4, !dbg !5058
  %384 = load i32, i32* %S, align 4, !dbg !5058
  %385 = load i32, i32* %subdivLevels, align 4, !dbg !5058
  %386 = load i32, i32* %vertDataSize, align 4, !dbg !5058
  %call280 = call i8* @_face_getIECo(%struct.CCGFace* %382, i32 %383, i32 %384, i32 0, i32 %385, i32 %386), !dbg !5058
  %387 = bitcast i8* %call280 to float*, !dbg !5058
  %388 = load %struct.CCGFace*, %struct.CCGFace** %f192, align 8, !dbg !5059
  %call281 = call i8* @FACE_getCenterData(%struct.CCGFace* %388), !dbg !5060
  %389 = bitcast i8* %call281 to float*, !dbg !5061
  %390 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !5062
  call void @VertDataCopy(float* %387, float* %389, %struct.CCGSubSurf* %390), !dbg !5063
  %391 = load %struct.CCGFace*, %struct.CCGFace** %f192, align 8, !dbg !5064
  %392 = load i32, i32* %lvl.addr, align 4, !dbg !5064
  %393 = load i32, i32* %S, align 4, !dbg !5064
  %394 = load i32, i32* %gridSize, align 4, !dbg !5064
  %sub282 = sub nsw i32 %394, 1, !dbg !5064
  %395 = load i32, i32* %subdivLevels, align 4, !dbg !5064
  %396 = load i32, i32* %vertDataSize, align 4, !dbg !5064
  %call283 = call i8* @_face_getIECo(%struct.CCGFace* %391, i32 %392, i32 %393, i32 %sub282, i32 %395, i32 %396), !dbg !5064
  %397 = bitcast i8* %call283 to float*, !dbg !5064
  %398 = load %struct.CCGFace*, %struct.CCGFace** %f192, align 8, !dbg !5065
  %399 = load i32, i32* %lvl.addr, align 4, !dbg !5065
  %400 = load i32, i32* %S, align 4, !dbg !5065
  %401 = load i32, i32* %gridSize, align 4, !dbg !5065
  %sub284 = sub nsw i32 %401, 1, !dbg !5065
  %402 = load i32, i32* %subdivLevels, align 4, !dbg !5065
  %403 = load i32, i32* %vertDataSize, align 4, !dbg !5065
  %call285 = call i8* @_face_getIFCo(%struct.CCGFace* %398, i32 %399, i32 %400, i32 %sub284, i32 0, i32 %402, i32 %403), !dbg !5065
  %404 = bitcast i8* %call285 to float*, !dbg !5065
  %405 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !5066
  call void @VertDataCopy(float* %397, float* %404, %struct.CCGSubSurf* %405), !dbg !5067
  br label %for.inc286, !dbg !5068

for.inc286:                                       ; preds = %for.end279
  %406 = load i32, i32* %S, align 4, !dbg !5069
  %inc287 = add nsw i32 %406, 1, !dbg !5069
  store i32 %inc287, i32* %S, align 4, !dbg !5069
  br label %for.cond218, !dbg !5070, !llvm.loop !5071

for.end288:                                       ; preds = %for.cond218
  br label %for.inc289, !dbg !5073

for.inc289:                                       ; preds = %for.end288
  %407 = load i32, i32* %i, align 4, !dbg !5074
  %inc290 = add nsw i32 %407, 1, !dbg !5074
  store i32 %inc290, i32* %i, align 4, !dbg !5074
  br label %for.cond188, !dbg !5075, !llvm.loop !5076

for.end291:                                       ; preds = %for.cond188
  store i32 0, i32* %i, align 4, !dbg !5078
  br label %for.cond292, !dbg !5080

for.cond292:                                      ; preds = %for.inc299, %for.end291
  %408 = load i32, i32* %i, align 4, !dbg !5081
  %409 = load i32, i32* %numEffectedV, align 4, !dbg !5083
  %cmp293 = icmp slt i32 %408, %409, !dbg !5084
  br i1 %cmp293, label %for.body295, label %for.end301, !dbg !5085

for.body295:                                      ; preds = %for.cond292
  %410 = load %struct.CCGVert**, %struct.CCGVert*** %effectedV, align 8, !dbg !5086
  %411 = load i32, i32* %i, align 4, !dbg !5087
  %idxprom296 = sext i32 %411 to i64, !dbg !5086
  %arrayidx297 = getelementptr inbounds %struct.CCGVert*, %struct.CCGVert** %410, i64 %idxprom296, !dbg !5086
  %412 = load %struct.CCGVert*, %struct.CCGVert** %arrayidx297, align 8, !dbg !5086
  %flags298 = getelementptr inbounds %struct.CCGVert, %struct.CCGVert* %412, i32 0, i32 4, !dbg !5088
  store i16 0, i16* %flags298, align 4, !dbg !5089
  br label %for.inc299, !dbg !5086

for.inc299:                                       ; preds = %for.body295
  %413 = load i32, i32* %i, align 4, !dbg !5090
  %inc300 = add nsw i32 %413, 1, !dbg !5090
  store i32 %inc300, i32* %i, align 4, !dbg !5090
  br label %for.cond292, !dbg !5091, !llvm.loop !5092

for.end301:                                       ; preds = %for.cond292
  store i32 0, i32* %i, align 4, !dbg !5094
  br label %for.cond302, !dbg !5096

for.cond302:                                      ; preds = %for.inc309, %for.end301
  %414 = load i32, i32* %i, align 4, !dbg !5097
  %415 = load i32, i32* %numEffectedE, align 4, !dbg !5099
  %cmp303 = icmp slt i32 %414, %415, !dbg !5100
  br i1 %cmp303, label %for.body305, label %for.end311, !dbg !5101

for.body305:                                      ; preds = %for.cond302
  %416 = load %struct.CCGEdge**, %struct.CCGEdge*** %effectedE, align 8, !dbg !5102
  %417 = load i32, i32* %i, align 4, !dbg !5103
  %idxprom306 = sext i32 %417 to i64, !dbg !5102
  %arrayidx307 = getelementptr inbounds %struct.CCGEdge*, %struct.CCGEdge** %416, i64 %idxprom306, !dbg !5102
  %418 = load %struct.CCGEdge*, %struct.CCGEdge** %arrayidx307, align 8, !dbg !5102
  %flags308 = getelementptr inbounds %struct.CCGEdge, %struct.CCGEdge* %418, i32 0, i32 3, !dbg !5104
  store i16 0, i16* %flags308, align 2, !dbg !5105
  br label %for.inc309, !dbg !5102

for.inc309:                                       ; preds = %for.body305
  %419 = load i32, i32* %i, align 4, !dbg !5106
  %inc310 = add nsw i32 %419, 1, !dbg !5106
  store i32 %inc310, i32* %i, align 4, !dbg !5106
  br label %for.cond302, !dbg !5107, !llvm.loop !5108

for.end311:                                       ; preds = %for.cond302
  store i32 0, i32* %i, align 4, !dbg !5110
  br label %for.cond312, !dbg !5112

for.cond312:                                      ; preds = %for.inc319, %for.end311
  %420 = load i32, i32* %i, align 4, !dbg !5113
  %421 = load i32, i32* %numEffectedF.addr, align 4, !dbg !5115
  %cmp313 = icmp slt i32 %420, %421, !dbg !5116
  br i1 %cmp313, label %for.body315, label %for.end321, !dbg !5117

for.body315:                                      ; preds = %for.cond312
  %422 = load %struct.CCGFace**, %struct.CCGFace*** %effectedF.addr, align 8, !dbg !5118
  %423 = load i32, i32* %i, align 4, !dbg !5119
  %idxprom316 = sext i32 %423 to i64, !dbg !5118
  %arrayidx317 = getelementptr inbounds %struct.CCGFace*, %struct.CCGFace** %422, i64 %idxprom316, !dbg !5118
  %424 = load %struct.CCGFace*, %struct.CCGFace** %arrayidx317, align 8, !dbg !5118
  %flags318 = getelementptr inbounds %struct.CCGFace, %struct.CCGFace* %424, i32 0, i32 3, !dbg !5120
  store i16 0, i16* %flags318, align 2, !dbg !5121
  br label %for.inc319, !dbg !5118

for.inc319:                                       ; preds = %for.body315
  %425 = load i32, i32* %i, align 4, !dbg !5122
  %inc320 = add nsw i32 %425, 1, !dbg !5122
  store i32 %inc320, i32* %i, align 4, !dbg !5122
  br label %for.cond312, !dbg !5123, !llvm.loop !5124

for.end321:                                       ; preds = %for.cond312
  %426 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !5126
  %427 = load %struct.CCGEdge**, %struct.CCGEdge*** %effectedE, align 8, !dbg !5127
  %428 = bitcast %struct.CCGEdge** %427 to i8*, !dbg !5127
  call void %426(i8* %428), !dbg !5126
  %429 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !5128
  %430 = load %struct.CCGVert**, %struct.CCGVert*** %effectedV, align 8, !dbg !5129
  %431 = bitcast %struct.CCGVert** %430 to i8*, !dbg !5129
  call void %429(i8* %431), !dbg !5128
  %432 = load i32, i32* %freeF, align 4, !dbg !5130
  %tobool322 = icmp ne i32 %432, 0, !dbg !5130
  br i1 %tobool322, label %if.then323, label %if.end324, !dbg !5132

if.then323:                                       ; preds = %for.end321
  %433 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !5133
  %434 = load %struct.CCGFace**, %struct.CCGFace*** %effectedF.addr, align 8, !dbg !5134
  %435 = bitcast %struct.CCGFace** %434 to i8*, !dbg !5134
  call void %433(i8* %435), !dbg !5133
  br label %if.end324, !dbg !5133

if.end324:                                        ; preds = %if.then323, %for.end321
  ret i32 0, !dbg !5135
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @ccg_edgesize(i32 %level) #0 !dbg !5136 {
entry:
  %level.addr = alloca i32, align 4
  store i32 %level, i32* %level.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %level.addr, metadata !5137, metadata !DIExpression()), !dbg !5138
  %0 = load i32, i32* %level.addr, align 4, !dbg !5139
  %shl = shl i32 1, %0, !dbg !5140
  %add = add nsw i32 1, %shl, !dbg !5141
  ret i32 %add, !dbg !5142
}

; Function Attrs: noinline nounwind uwtable
define internal void @ccgSubSurf__effectedFaceNeighbours(%struct.CCGSubSurf* %ss, %struct.CCGFace** %faces, i32 %numFaces, %struct.CCGVert*** %verts, i32* %numVerts, %struct.CCGEdge*** %edges, i32* %numEdges) #0 !dbg !5143 {
entry:
  %ss.addr = alloca %struct.CCGSubSurf*, align 8
  %faces.addr = alloca %struct.CCGFace**, align 8
  %numFaces.addr = alloca i32, align 4
  %verts.addr = alloca %struct.CCGVert***, align 8
  %numVerts.addr = alloca i32*, align 8
  %edges.addr = alloca %struct.CCGEdge***, align 8
  %numEdges.addr = alloca i32*, align 8
  %arrayV = alloca %struct.CCGVert**, align 8
  %arrayE = alloca %struct.CCGEdge**, align 8
  %numV = alloca i32, align 4
  %numE = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %f = alloca %struct.CCGFace*, align 8
  %v = alloca %struct.CCGVert*, align 8
  %e = alloca %struct.CCGEdge*, align 8
  store %struct.CCGSubSurf* %ss, %struct.CCGSubSurf** %ss.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGSubSurf** %ss.addr, metadata !5148, metadata !DIExpression()), !dbg !5149
  store %struct.CCGFace** %faces, %struct.CCGFace*** %faces.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGFace*** %faces.addr, metadata !5150, metadata !DIExpression()), !dbg !5151
  store i32 %numFaces, i32* %numFaces.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %numFaces.addr, metadata !5152, metadata !DIExpression()), !dbg !5153
  store %struct.CCGVert*** %verts, %struct.CCGVert**** %verts.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGVert**** %verts.addr, metadata !5154, metadata !DIExpression()), !dbg !5155
  store i32* %numVerts, i32** %numVerts.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %numVerts.addr, metadata !5156, metadata !DIExpression()), !dbg !5157
  store %struct.CCGEdge*** %edges, %struct.CCGEdge**** %edges.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGEdge**** %edges.addr, metadata !5158, metadata !DIExpression()), !dbg !5159
  store i32* %numEdges, i32** %numEdges.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %numEdges.addr, metadata !5160, metadata !DIExpression()), !dbg !5161
  call void @llvm.dbg.declare(metadata %struct.CCGVert*** %arrayV, metadata !5162, metadata !DIExpression()), !dbg !5163
  call void @llvm.dbg.declare(metadata %struct.CCGEdge*** %arrayE, metadata !5164, metadata !DIExpression()), !dbg !5165
  call void @llvm.dbg.declare(metadata i32* %numV, metadata !5166, metadata !DIExpression()), !dbg !5167
  call void @llvm.dbg.declare(metadata i32* %numE, metadata !5168, metadata !DIExpression()), !dbg !5169
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5170, metadata !DIExpression()), !dbg !5171
  call void @llvm.dbg.declare(metadata i32* %j, metadata !5172, metadata !DIExpression()), !dbg !5173
  %0 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !5174
  %1 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !5175
  %vMap = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %1, i32 0, i32 0, !dbg !5176
  %2 = load %struct._EHash*, %struct._EHash** %vMap, align 8, !dbg !5176
  %numEntries = getelementptr inbounds %struct._EHash, %struct._EHash* %2, i32 0, i32 1, !dbg !5177
  %3 = load i32, i32* %numEntries, align 8, !dbg !5177
  %conv = sext i32 %3 to i64, !dbg !5175
  %mul = mul i64 8, %conv, !dbg !5178
  %call = call i8* %0(i64 %mul, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6, i64 0, i64 0)), !dbg !5174
  %4 = bitcast i8* %call to %struct.CCGVert**, !dbg !5174
  store %struct.CCGVert** %4, %struct.CCGVert*** %arrayV, align 8, !dbg !5179
  %5 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !5180
  %6 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !5181
  %eMap = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %6, i32 0, i32 1, !dbg !5182
  %7 = load %struct._EHash*, %struct._EHash** %eMap, align 8, !dbg !5182
  %numEntries1 = getelementptr inbounds %struct._EHash, %struct._EHash* %7, i32 0, i32 1, !dbg !5183
  %8 = load i32, i32* %numEntries1, align 8, !dbg !5183
  %conv2 = sext i32 %8 to i64, !dbg !5181
  %mul3 = mul i64 8, %conv2, !dbg !5184
  %call4 = call i8* %5(i64 %mul3, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6, i64 0, i64 0)), !dbg !5180
  %9 = bitcast i8* %call4 to %struct.CCGEdge**, !dbg !5180
  store %struct.CCGEdge** %9, %struct.CCGEdge*** %arrayE, align 8, !dbg !5185
  store i32 0, i32* %numE, align 4, !dbg !5186
  store i32 0, i32* %numV, align 4, !dbg !5187
  store i32 0, i32* %i, align 4, !dbg !5188
  br label %for.cond, !dbg !5190

for.cond:                                         ; preds = %for.inc, %entry
  %10 = load i32, i32* %i, align 4, !dbg !5191
  %11 = load i32, i32* %numFaces.addr, align 4, !dbg !5193
  %cmp = icmp slt i32 %10, %11, !dbg !5194
  br i1 %cmp, label %for.body, label %for.end, !dbg !5195

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.CCGFace** %f, metadata !5196, metadata !DIExpression()), !dbg !5198
  %12 = load %struct.CCGFace**, %struct.CCGFace*** %faces.addr, align 8, !dbg !5199
  %13 = load i32, i32* %i, align 4, !dbg !5200
  %idxprom = sext i32 %13 to i64, !dbg !5199
  %arrayidx = getelementptr inbounds %struct.CCGFace*, %struct.CCGFace** %12, i64 %idxprom, !dbg !5199
  %14 = load %struct.CCGFace*, %struct.CCGFace** %arrayidx, align 8, !dbg !5199
  store %struct.CCGFace* %14, %struct.CCGFace** %f, align 8, !dbg !5198
  %15 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !5201
  %flags = getelementptr inbounds %struct.CCGFace, %struct.CCGFace* %15, i32 0, i32 3, !dbg !5202
  %16 = load i16, i16* %flags, align 2, !dbg !5203
  %conv6 = sext i16 %16 to i32, !dbg !5203
  %or = or i32 %conv6, 1, !dbg !5203
  %conv7 = trunc i32 %or to i16, !dbg !5203
  store i16 %conv7, i16* %flags, align 2, !dbg !5203
  br label %for.inc, !dbg !5204

for.inc:                                          ; preds = %for.body
  %17 = load i32, i32* %i, align 4, !dbg !5205
  %inc = add nsw i32 %17, 1, !dbg !5205
  store i32 %inc, i32* %i, align 4, !dbg !5205
  br label %for.cond, !dbg !5206, !llvm.loop !5207

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !5209
  br label %for.cond8, !dbg !5211

for.cond8:                                        ; preds = %for.inc48, %for.end
  %18 = load i32, i32* %i, align 4, !dbg !5212
  %19 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !5214
  %vMap9 = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %19, i32 0, i32 0, !dbg !5215
  %20 = load %struct._EHash*, %struct._EHash** %vMap9, align 8, !dbg !5215
  %curSize = getelementptr inbounds %struct._EHash, %struct._EHash* %20, i32 0, i32 2, !dbg !5216
  %21 = load i32, i32* %curSize, align 4, !dbg !5216
  %cmp10 = icmp slt i32 %18, %21, !dbg !5217
  br i1 %cmp10, label %for.body12, label %for.end50, !dbg !5218

for.body12:                                       ; preds = %for.cond8
  call void @llvm.dbg.declare(metadata %struct.CCGVert** %v, metadata !5219, metadata !DIExpression()), !dbg !5221
  %22 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !5222
  %vMap13 = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %22, i32 0, i32 0, !dbg !5223
  %23 = load %struct._EHash*, %struct._EHash** %vMap13, align 8, !dbg !5223
  %buckets = getelementptr inbounds %struct._EHash, %struct._EHash* %23, i32 0, i32 0, !dbg !5224
  %24 = load %struct._EHEntry**, %struct._EHEntry*** %buckets, align 8, !dbg !5224
  %25 = load i32, i32* %i, align 4, !dbg !5225
  %idxprom14 = sext i32 %25 to i64, !dbg !5222
  %arrayidx15 = getelementptr inbounds %struct._EHEntry*, %struct._EHEntry** %24, i64 %idxprom14, !dbg !5222
  %26 = load %struct._EHEntry*, %struct._EHEntry** %arrayidx15, align 8, !dbg !5222
  %27 = bitcast %struct._EHEntry* %26 to %struct.CCGVert*, !dbg !5226
  store %struct.CCGVert* %27, %struct.CCGVert** %v, align 8, !dbg !5221
  br label %for.cond16, !dbg !5227

for.cond16:                                       ; preds = %for.inc46, %for.body12
  %28 = load %struct.CCGVert*, %struct.CCGVert** %v, align 8, !dbg !5228
  %tobool = icmp ne %struct.CCGVert* %28, null, !dbg !5231
  br i1 %tobool, label %for.body17, label %for.end47, !dbg !5231

for.body17:                                       ; preds = %for.cond16
  store i32 0, i32* %j, align 4, !dbg !5232
  br label %for.cond18, !dbg !5235

for.cond18:                                       ; preds = %for.inc30, %for.body17
  %29 = load i32, i32* %j, align 4, !dbg !5236
  %30 = load %struct.CCGVert*, %struct.CCGVert** %v, align 8, !dbg !5238
  %numFaces19 = getelementptr inbounds %struct.CCGVert, %struct.CCGVert* %30, i32 0, i32 3, !dbg !5239
  %31 = load i16, i16* %numFaces19, align 2, !dbg !5239
  %conv20 = sext i16 %31 to i32, !dbg !5238
  %cmp21 = icmp slt i32 %29, %conv20, !dbg !5240
  br i1 %cmp21, label %for.body23, label %for.end32, !dbg !5241

for.body23:                                       ; preds = %for.cond18
  %32 = load %struct.CCGVert*, %struct.CCGVert** %v, align 8, !dbg !5242
  %faces24 = getelementptr inbounds %struct.CCGVert, %struct.CCGVert* %32, i32 0, i32 7, !dbg !5244
  %33 = load %struct.CCGFace**, %struct.CCGFace*** %faces24, align 8, !dbg !5244
  %34 = load i32, i32* %j, align 4, !dbg !5245
  %idxprom25 = sext i32 %34 to i64, !dbg !5242
  %arrayidx26 = getelementptr inbounds %struct.CCGFace*, %struct.CCGFace** %33, i64 %idxprom25, !dbg !5242
  %35 = load %struct.CCGFace*, %struct.CCGFace** %arrayidx26, align 8, !dbg !5242
  %flags27 = getelementptr inbounds %struct.CCGFace, %struct.CCGFace* %35, i32 0, i32 3, !dbg !5246
  %36 = load i16, i16* %flags27, align 2, !dbg !5246
  %conv28 = sext i16 %36 to i32, !dbg !5242
  %and = and i32 %conv28, 1, !dbg !5247
  %tobool29 = icmp ne i32 %and, 0, !dbg !5247
  br i1 %tobool29, label %if.end, label %if.then, !dbg !5248

if.then:                                          ; preds = %for.body23
  br label %for.end32, !dbg !5249

if.end:                                           ; preds = %for.body23
  br label %for.inc30, !dbg !5250

for.inc30:                                        ; preds = %if.end
  %37 = load i32, i32* %j, align 4, !dbg !5251
  %inc31 = add nsw i32 %37, 1, !dbg !5251
  store i32 %inc31, i32* %j, align 4, !dbg !5251
  br label %for.cond18, !dbg !5252, !llvm.loop !5253

for.end32:                                        ; preds = %if.then, %for.cond18
  %38 = load i32, i32* %j, align 4, !dbg !5255
  %39 = load %struct.CCGVert*, %struct.CCGVert** %v, align 8, !dbg !5257
  %numFaces33 = getelementptr inbounds %struct.CCGVert, %struct.CCGVert* %39, i32 0, i32 3, !dbg !5258
  %40 = load i16, i16* %numFaces33, align 2, !dbg !5258
  %conv34 = sext i16 %40 to i32, !dbg !5257
  %cmp35 = icmp eq i32 %38, %conv34, !dbg !5259
  br i1 %cmp35, label %if.then37, label %if.end45, !dbg !5260

if.then37:                                        ; preds = %for.end32
  %41 = load %struct.CCGVert*, %struct.CCGVert** %v, align 8, !dbg !5261
  %42 = load %struct.CCGVert**, %struct.CCGVert*** %arrayV, align 8, !dbg !5263
  %43 = load i32, i32* %numV, align 4, !dbg !5264
  %inc38 = add nsw i32 %43, 1, !dbg !5264
  store i32 %inc38, i32* %numV, align 4, !dbg !5264
  %idxprom39 = sext i32 %43 to i64, !dbg !5263
  %arrayidx40 = getelementptr inbounds %struct.CCGVert*, %struct.CCGVert** %42, i64 %idxprom39, !dbg !5263
  store %struct.CCGVert* %41, %struct.CCGVert** %arrayidx40, align 8, !dbg !5265
  %44 = load %struct.CCGVert*, %struct.CCGVert** %v, align 8, !dbg !5266
  %flags41 = getelementptr inbounds %struct.CCGVert, %struct.CCGVert* %44, i32 0, i32 4, !dbg !5267
  %45 = load i16, i16* %flags41, align 4, !dbg !5268
  %conv42 = sext i16 %45 to i32, !dbg !5268
  %or43 = or i32 %conv42, 1, !dbg !5268
  %conv44 = trunc i32 %or43 to i16, !dbg !5268
  store i16 %conv44, i16* %flags41, align 4, !dbg !5268
  br label %if.end45, !dbg !5269

if.end45:                                         ; preds = %if.then37, %for.end32
  br label %for.inc46, !dbg !5270

for.inc46:                                        ; preds = %if.end45
  %46 = load %struct.CCGVert*, %struct.CCGVert** %v, align 8, !dbg !5271
  %next = getelementptr inbounds %struct.CCGVert, %struct.CCGVert* %46, i32 0, i32 0, !dbg !5272
  %47 = load %struct.CCGVert*, %struct.CCGVert** %next, align 8, !dbg !5272
  store %struct.CCGVert* %47, %struct.CCGVert** %v, align 8, !dbg !5273
  br label %for.cond16, !dbg !5274, !llvm.loop !5275

for.end47:                                        ; preds = %for.cond16
  br label %for.inc48, !dbg !5277

for.inc48:                                        ; preds = %for.end47
  %48 = load i32, i32* %i, align 4, !dbg !5278
  %inc49 = add nsw i32 %48, 1, !dbg !5278
  store i32 %inc49, i32* %i, align 4, !dbg !5278
  br label %for.cond8, !dbg !5279, !llvm.loop !5280

for.end50:                                        ; preds = %for.cond8
  store i32 0, i32* %i, align 4, !dbg !5282
  br label %for.cond51, !dbg !5284

for.cond51:                                       ; preds = %for.inc98, %for.end50
  %49 = load i32, i32* %i, align 4, !dbg !5285
  %50 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !5287
  %eMap52 = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %50, i32 0, i32 1, !dbg !5288
  %51 = load %struct._EHash*, %struct._EHash** %eMap52, align 8, !dbg !5288
  %curSize53 = getelementptr inbounds %struct._EHash, %struct._EHash* %51, i32 0, i32 2, !dbg !5289
  %52 = load i32, i32* %curSize53, align 4, !dbg !5289
  %cmp54 = icmp slt i32 %49, %52, !dbg !5290
  br i1 %cmp54, label %for.body56, label %for.end100, !dbg !5291

for.body56:                                       ; preds = %for.cond51
  call void @llvm.dbg.declare(metadata %struct.CCGEdge** %e, metadata !5292, metadata !DIExpression()), !dbg !5294
  %53 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !5295
  %eMap57 = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %53, i32 0, i32 1, !dbg !5296
  %54 = load %struct._EHash*, %struct._EHash** %eMap57, align 8, !dbg !5296
  %buckets58 = getelementptr inbounds %struct._EHash, %struct._EHash* %54, i32 0, i32 0, !dbg !5297
  %55 = load %struct._EHEntry**, %struct._EHEntry*** %buckets58, align 8, !dbg !5297
  %56 = load i32, i32* %i, align 4, !dbg !5298
  %idxprom59 = sext i32 %56 to i64, !dbg !5295
  %arrayidx60 = getelementptr inbounds %struct._EHEntry*, %struct._EHEntry** %55, i64 %idxprom59, !dbg !5295
  %57 = load %struct._EHEntry*, %struct._EHEntry** %arrayidx60, align 8, !dbg !5295
  %58 = bitcast %struct._EHEntry* %57 to %struct.CCGEdge*, !dbg !5299
  store %struct.CCGEdge* %58, %struct.CCGEdge** %e, align 8, !dbg !5294
  br label %for.cond61, !dbg !5300

for.cond61:                                       ; preds = %for.inc95, %for.body56
  %59 = load %struct.CCGEdge*, %struct.CCGEdge** %e, align 8, !dbg !5301
  %tobool62 = icmp ne %struct.CCGEdge* %59, null, !dbg !5304
  br i1 %tobool62, label %for.body63, label %for.end97, !dbg !5304

for.body63:                                       ; preds = %for.cond61
  store i32 0, i32* %j, align 4, !dbg !5305
  br label %for.cond64, !dbg !5308

for.cond64:                                       ; preds = %for.inc79, %for.body63
  %60 = load i32, i32* %j, align 4, !dbg !5309
  %61 = load %struct.CCGEdge*, %struct.CCGEdge** %e, align 8, !dbg !5311
  %numFaces65 = getelementptr inbounds %struct.CCGEdge, %struct.CCGEdge* %61, i32 0, i32 2, !dbg !5312
  %62 = load i16, i16* %numFaces65, align 8, !dbg !5312
  %conv66 = sext i16 %62 to i32, !dbg !5311
  %cmp67 = icmp slt i32 %60, %conv66, !dbg !5313
  br i1 %cmp67, label %for.body69, label %for.end81, !dbg !5314

for.body69:                                       ; preds = %for.cond64
  %63 = load %struct.CCGEdge*, %struct.CCGEdge** %e, align 8, !dbg !5315
  %faces70 = getelementptr inbounds %struct.CCGEdge, %struct.CCGEdge* %63, i32 0, i32 7, !dbg !5317
  %64 = load %struct.CCGFace**, %struct.CCGFace*** %faces70, align 8, !dbg !5317
  %65 = load i32, i32* %j, align 4, !dbg !5318
  %idxprom71 = sext i32 %65 to i64, !dbg !5315
  %arrayidx72 = getelementptr inbounds %struct.CCGFace*, %struct.CCGFace** %64, i64 %idxprom71, !dbg !5315
  %66 = load %struct.CCGFace*, %struct.CCGFace** %arrayidx72, align 8, !dbg !5315
  %flags73 = getelementptr inbounds %struct.CCGFace, %struct.CCGFace* %66, i32 0, i32 3, !dbg !5319
  %67 = load i16, i16* %flags73, align 2, !dbg !5319
  %conv74 = sext i16 %67 to i32, !dbg !5315
  %and75 = and i32 %conv74, 1, !dbg !5320
  %tobool76 = icmp ne i32 %and75, 0, !dbg !5320
  br i1 %tobool76, label %if.end78, label %if.then77, !dbg !5321

if.then77:                                        ; preds = %for.body69
  br label %for.end81, !dbg !5322

if.end78:                                         ; preds = %for.body69
  br label %for.inc79, !dbg !5323

for.inc79:                                        ; preds = %if.end78
  %68 = load i32, i32* %j, align 4, !dbg !5324
  %inc80 = add nsw i32 %68, 1, !dbg !5324
  store i32 %inc80, i32* %j, align 4, !dbg !5324
  br label %for.cond64, !dbg !5325, !llvm.loop !5326

for.end81:                                        ; preds = %if.then77, %for.cond64
  %69 = load i32, i32* %j, align 4, !dbg !5328
  %70 = load %struct.CCGEdge*, %struct.CCGEdge** %e, align 8, !dbg !5330
  %numFaces82 = getelementptr inbounds %struct.CCGEdge, %struct.CCGEdge* %70, i32 0, i32 2, !dbg !5331
  %71 = load i16, i16* %numFaces82, align 8, !dbg !5331
  %conv83 = sext i16 %71 to i32, !dbg !5330
  %cmp84 = icmp eq i32 %69, %conv83, !dbg !5332
  br i1 %cmp84, label %if.then86, label %if.end94, !dbg !5333

if.then86:                                        ; preds = %for.end81
  %72 = load %struct.CCGEdge*, %struct.CCGEdge** %e, align 8, !dbg !5334
  %flags87 = getelementptr inbounds %struct.CCGEdge, %struct.CCGEdge* %72, i32 0, i32 3, !dbg !5336
  %73 = load i16, i16* %flags87, align 2, !dbg !5337
  %conv88 = sext i16 %73 to i32, !dbg !5337
  %or89 = or i32 %conv88, 1, !dbg !5337
  %conv90 = trunc i32 %or89 to i16, !dbg !5337
  store i16 %conv90, i16* %flags87, align 2, !dbg !5337
  %74 = load %struct.CCGEdge*, %struct.CCGEdge** %e, align 8, !dbg !5338
  %75 = load %struct.CCGEdge**, %struct.CCGEdge*** %arrayE, align 8, !dbg !5339
  %76 = load i32, i32* %numE, align 4, !dbg !5340
  %inc91 = add nsw i32 %76, 1, !dbg !5340
  store i32 %inc91, i32* %numE, align 4, !dbg !5340
  %idxprom92 = sext i32 %76 to i64, !dbg !5339
  %arrayidx93 = getelementptr inbounds %struct.CCGEdge*, %struct.CCGEdge** %75, i64 %idxprom92, !dbg !5339
  store %struct.CCGEdge* %74, %struct.CCGEdge** %arrayidx93, align 8, !dbg !5341
  br label %if.end94, !dbg !5342

if.end94:                                         ; preds = %if.then86, %for.end81
  br label %for.inc95, !dbg !5343

for.inc95:                                        ; preds = %if.end94
  %77 = load %struct.CCGEdge*, %struct.CCGEdge** %e, align 8, !dbg !5344
  %next96 = getelementptr inbounds %struct.CCGEdge, %struct.CCGEdge* %77, i32 0, i32 0, !dbg !5345
  %78 = load %struct.CCGEdge*, %struct.CCGEdge** %next96, align 8, !dbg !5345
  store %struct.CCGEdge* %78, %struct.CCGEdge** %e, align 8, !dbg !5346
  br label %for.cond61, !dbg !5347, !llvm.loop !5348

for.end97:                                        ; preds = %for.cond61
  br label %for.inc98, !dbg !5350

for.inc98:                                        ; preds = %for.end97
  %79 = load i32, i32* %i, align 4, !dbg !5351
  %inc99 = add nsw i32 %79, 1, !dbg !5351
  store i32 %inc99, i32* %i, align 4, !dbg !5351
  br label %for.cond51, !dbg !5352, !llvm.loop !5353

for.end100:                                       ; preds = %for.cond51
  %80 = load %struct.CCGVert**, %struct.CCGVert*** %arrayV, align 8, !dbg !5355
  %81 = load %struct.CCGVert***, %struct.CCGVert**** %verts.addr, align 8, !dbg !5356
  store %struct.CCGVert** %80, %struct.CCGVert*** %81, align 8, !dbg !5357
  %82 = load i32, i32* %numV, align 4, !dbg !5358
  %83 = load i32*, i32** %numVerts.addr, align 8, !dbg !5359
  store i32 %82, i32* %83, align 4, !dbg !5360
  %84 = load %struct.CCGEdge**, %struct.CCGEdge*** %arrayE, align 8, !dbg !5361
  %85 = load %struct.CCGEdge***, %struct.CCGEdge**** %edges.addr, align 8, !dbg !5362
  store %struct.CCGEdge** %84, %struct.CCGEdge*** %85, align 8, !dbg !5363
  %86 = load i32, i32* %numE, align 4, !dbg !5364
  %87 = load i32*, i32** %numEdges.addr, align 8, !dbg !5365
  store i32 %86, i32* %87, align 4, !dbg !5366
  ret void, !dbg !5367
}

; Function Attrs: noinline nounwind uwtable
define internal void @VertDataZero(float* %v, %struct.CCGSubSurf* %ss) #0 !dbg !5368 {
entry:
  %v.addr = alloca float*, align 8
  %ss.addr = alloca %struct.CCGSubSurf*, align 8
  store float* %v, float** %v.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v.addr, metadata !5371, metadata !DIExpression()), !dbg !5372
  store %struct.CCGSubSurf* %ss, %struct.CCGSubSurf** %ss.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGSubSurf** %ss.addr, metadata !5373, metadata !DIExpression()), !dbg !5374
  %0 = load float*, float** %v.addr, align 8, !dbg !5375
  %1 = bitcast float* %0 to i8*, !dbg !5376
  %2 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !5377
  %meshIFC = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %2, i32 0, i32 3, !dbg !5378
  %numLayers = getelementptr inbounds %struct.CCGMeshIFC, %struct.CCGMeshIFC* %meshIFC, i32 0, i32 3, !dbg !5379
  %3 = load i32, i32* %numLayers, align 4, !dbg !5379
  %conv = sext i32 %3 to i64, !dbg !5377
  %mul = mul i64 4, %conv, !dbg !5380
  call void @llvm.memset.p0i8.i64(i8* align 4 %1, i8 0, i64 %mul, i1 false), !dbg !5376
  ret void, !dbg !5381
}

; Function Attrs: noinline nounwind uwtable
define internal i8* @_edge_getCo(%struct.CCGEdge* %e, i32 %lvl, i32 %x, i32 %dataSize) #0 !dbg !5382 {
entry:
  %e.addr = alloca %struct.CCGEdge*, align 8
  %lvl.addr = alloca i32, align 4
  %x.addr = alloca i32, align 4
  %dataSize.addr = alloca i32, align 4
  %levelBase = alloca i32, align 4
  store %struct.CCGEdge* %e, %struct.CCGEdge** %e.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGEdge** %e.addr, metadata !5385, metadata !DIExpression()), !dbg !5386
  store i32 %lvl, i32* %lvl.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %lvl.addr, metadata !5387, metadata !DIExpression()), !dbg !5388
  store i32 %x, i32* %x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !5389, metadata !DIExpression()), !dbg !5390
  store i32 %dataSize, i32* %dataSize.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dataSize.addr, metadata !5391, metadata !DIExpression()), !dbg !5392
  call void @llvm.dbg.declare(metadata i32* %levelBase, metadata !5393, metadata !DIExpression()), !dbg !5394
  %0 = load i32, i32* %lvl.addr, align 4, !dbg !5395
  %call = call i32 @ccg_edgebase(i32 %0), !dbg !5396
  store i32 %call, i32* %levelBase, align 4, !dbg !5394
  %1 = load %struct.CCGEdge*, %struct.CCGEdge** %e.addr, align 8, !dbg !5397
  %call1 = call i8* @EDGE_getLevelData(%struct.CCGEdge* %1), !dbg !5398
  %2 = load i32, i32* %dataSize.addr, align 4, !dbg !5399
  %3 = load i32, i32* %levelBase, align 4, !dbg !5400
  %4 = load i32, i32* %x.addr, align 4, !dbg !5401
  %add = add nsw i32 %3, %4, !dbg !5402
  %mul = mul nsw i32 %2, %add, !dbg !5403
  %idxprom = sext i32 %mul to i64, !dbg !5398
  %arrayidx = getelementptr inbounds i8, i8* %call1, i64 %idxprom, !dbg !5398
  ret i8* %arrayidx, !dbg !5404
}

; Function Attrs: noinline nounwind uwtable
define internal void @VertDataAdd(float* %a, float* %b, %struct.CCGSubSurf* %ss) #0 !dbg !5405 {
entry:
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  %ss.addr = alloca %struct.CCGSubSurf*, align 8
  %i = alloca i32, align 4
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !5406, metadata !DIExpression()), !dbg !5407
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !5408, metadata !DIExpression()), !dbg !5409
  store %struct.CCGSubSurf* %ss, %struct.CCGSubSurf** %ss.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGSubSurf** %ss.addr, metadata !5410, metadata !DIExpression()), !dbg !5411
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5412, metadata !DIExpression()), !dbg !5413
  store i32 0, i32* %i, align 4, !dbg !5414
  br label %for.cond, !dbg !5416

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !5417
  %1 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !5419
  %meshIFC = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %1, i32 0, i32 3, !dbg !5420
  %numLayers = getelementptr inbounds %struct.CCGMeshIFC, %struct.CCGMeshIFC* %meshIFC, i32 0, i32 3, !dbg !5421
  %2 = load i32, i32* %numLayers, align 4, !dbg !5421
  %cmp = icmp slt i32 %0, %2, !dbg !5422
  br i1 %cmp, label %for.body, label %for.end, !dbg !5423

for.body:                                         ; preds = %for.cond
  %3 = load float*, float** %b.addr, align 8, !dbg !5424
  %4 = load i32, i32* %i, align 4, !dbg !5425
  %idxprom = sext i32 %4 to i64, !dbg !5424
  %arrayidx = getelementptr inbounds float, float* %3, i64 %idxprom, !dbg !5424
  %5 = load float, float* %arrayidx, align 4, !dbg !5424
  %6 = load float*, float** %a.addr, align 8, !dbg !5426
  %7 = load i32, i32* %i, align 4, !dbg !5427
  %idxprom1 = sext i32 %7 to i64, !dbg !5426
  %arrayidx2 = getelementptr inbounds float, float* %6, i64 %idxprom1, !dbg !5426
  %8 = load float, float* %arrayidx2, align 4, !dbg !5428
  %add = fadd float %8, %5, !dbg !5428
  store float %add, float* %arrayidx2, align 4, !dbg !5428
  br label %for.inc, !dbg !5426

for.inc:                                          ; preds = %for.body
  %9 = load i32, i32* %i, align 4, !dbg !5429
  %inc = add nsw i32 %9, 1, !dbg !5429
  store i32 %inc, i32* %i, align 4, !dbg !5429
  br label %for.cond, !dbg !5430, !llvm.loop !5431

for.end:                                          ; preds = %for.cond
  ret void, !dbg !5433
}

; Function Attrs: noinline nounwind uwtable
define internal void @VertDataMulN(float* %v, float %f, %struct.CCGSubSurf* %ss) #0 !dbg !5434 {
entry:
  %v.addr = alloca float*, align 8
  %f.addr = alloca float, align 4
  %ss.addr = alloca %struct.CCGSubSurf*, align 8
  %i = alloca i32, align 4
  store float* %v, float** %v.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v.addr, metadata !5437, metadata !DIExpression()), !dbg !5438
  store float %f, float* %f.addr, align 4
  call void @llvm.dbg.declare(metadata float* %f.addr, metadata !5439, metadata !DIExpression()), !dbg !5440
  store %struct.CCGSubSurf* %ss, %struct.CCGSubSurf** %ss.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGSubSurf** %ss.addr, metadata !5441, metadata !DIExpression()), !dbg !5442
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5443, metadata !DIExpression()), !dbg !5444
  store i32 0, i32* %i, align 4, !dbg !5445
  br label %for.cond, !dbg !5447

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !5448
  %1 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !5450
  %meshIFC = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %1, i32 0, i32 3, !dbg !5451
  %numLayers = getelementptr inbounds %struct.CCGMeshIFC, %struct.CCGMeshIFC* %meshIFC, i32 0, i32 3, !dbg !5452
  %2 = load i32, i32* %numLayers, align 4, !dbg !5452
  %cmp = icmp slt i32 %0, %2, !dbg !5453
  br i1 %cmp, label %for.body, label %for.end, !dbg !5454

for.body:                                         ; preds = %for.cond
  %3 = load float, float* %f.addr, align 4, !dbg !5455
  %4 = load float*, float** %v.addr, align 8, !dbg !5456
  %5 = load i32, i32* %i, align 4, !dbg !5457
  %idxprom = sext i32 %5 to i64, !dbg !5456
  %arrayidx = getelementptr inbounds float, float* %4, i64 %idxprom, !dbg !5456
  %6 = load float, float* %arrayidx, align 4, !dbg !5458
  %mul = fmul float %6, %3, !dbg !5458
  store float %mul, float* %arrayidx, align 4, !dbg !5458
  br label %for.inc, !dbg !5456

for.inc:                                          ; preds = %for.body
  %7 = load i32, i32* %i, align 4, !dbg !5459
  %inc = add nsw i32 %7, 1, !dbg !5459
  store i32 %inc, i32* %i, align 4, !dbg !5459
  br label %for.cond, !dbg !5460, !llvm.loop !5461

for.end:                                          ; preds = %for.cond
  ret void, !dbg !5463
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @ccgSubSurf_updateNormals(%struct.CCGSubSurf* %ss, %struct.CCGFace** %effectedF, i32 %numEffectedF) #0 !dbg !5464 {
entry:
  %ss.addr = alloca %struct.CCGSubSurf*, align 8
  %effectedF.addr = alloca %struct.CCGFace**, align 8
  %numEffectedF.addr = alloca i32, align 4
  %effectedV = alloca %struct.CCGVert**, align 8
  %effectedE = alloca %struct.CCGEdge**, align 8
  %i = alloca i32, align 4
  %numEffectedV = alloca i32, align 4
  %numEffectedE = alloca i32, align 4
  %freeF = alloca i32, align 4
  store %struct.CCGSubSurf* %ss, %struct.CCGSubSurf** %ss.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGSubSurf** %ss.addr, metadata !5467, metadata !DIExpression()), !dbg !5468
  store %struct.CCGFace** %effectedF, %struct.CCGFace*** %effectedF.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGFace*** %effectedF.addr, metadata !5469, metadata !DIExpression()), !dbg !5470
  store i32 %numEffectedF, i32* %numEffectedF.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %numEffectedF.addr, metadata !5471, metadata !DIExpression()), !dbg !5472
  call void @llvm.dbg.declare(metadata %struct.CCGVert*** %effectedV, metadata !5473, metadata !DIExpression()), !dbg !5474
  call void @llvm.dbg.declare(metadata %struct.CCGEdge*** %effectedE, metadata !5475, metadata !DIExpression()), !dbg !5476
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5477, metadata !DIExpression()), !dbg !5478
  call void @llvm.dbg.declare(metadata i32* %numEffectedV, metadata !5479, metadata !DIExpression()), !dbg !5480
  call void @llvm.dbg.declare(metadata i32* %numEffectedE, metadata !5481, metadata !DIExpression()), !dbg !5482
  call void @llvm.dbg.declare(metadata i32* %freeF, metadata !5483, metadata !DIExpression()), !dbg !5484
  %0 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !5485
  call void @ccgSubSurf__allFaces(%struct.CCGSubSurf* %0, %struct.CCGFace*** %effectedF.addr, i32* %numEffectedF.addr, i32* %freeF), !dbg !5486
  %1 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !5487
  %2 = load %struct.CCGFace**, %struct.CCGFace*** %effectedF.addr, align 8, !dbg !5488
  %3 = load i32, i32* %numEffectedF.addr, align 4, !dbg !5489
  call void @ccgSubSurf__effectedFaceNeighbours(%struct.CCGSubSurf* %1, %struct.CCGFace** %2, i32 %3, %struct.CCGVert*** %effectedV, i32* %numEffectedV, %struct.CCGEdge*** %effectedE, i32* %numEffectedE), !dbg !5490
  %4 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !5491
  %calcVertNormals = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %4, i32 0, i32 13, !dbg !5493
  %5 = load i32, i32* %calcVertNormals, align 8, !dbg !5493
  %tobool = icmp ne i32 %5, 0, !dbg !5491
  br i1 %tobool, label %if.then, label %if.end, !dbg !5494

if.then:                                          ; preds = %entry
  %6 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !5495
  %7 = load %struct.CCGVert**, %struct.CCGVert*** %effectedV, align 8, !dbg !5496
  %8 = load %struct.CCGEdge**, %struct.CCGEdge*** %effectedE, align 8, !dbg !5497
  %9 = load %struct.CCGFace**, %struct.CCGFace*** %effectedF.addr, align 8, !dbg !5498
  %10 = load i32, i32* %numEffectedV, align 4, !dbg !5499
  %11 = load i32, i32* %numEffectedE, align 4, !dbg !5500
  %12 = load i32, i32* %numEffectedF.addr, align 4, !dbg !5501
  call void @ccgSubSurf__calcVertNormals(%struct.CCGSubSurf* %6, %struct.CCGVert** %7, %struct.CCGEdge** %8, %struct.CCGFace** %9, i32 %10, i32 %11, i32 %12), !dbg !5502
  br label %if.end, !dbg !5502

if.end:                                           ; preds = %if.then, %entry
  store i32 0, i32* %i, align 4, !dbg !5503
  br label %for.cond, !dbg !5505

for.cond:                                         ; preds = %for.inc, %if.end
  %13 = load i32, i32* %i, align 4, !dbg !5506
  %14 = load i32, i32* %numEffectedV, align 4, !dbg !5508
  %cmp = icmp slt i32 %13, %14, !dbg !5509
  br i1 %cmp, label %for.body, label %for.end, !dbg !5510

for.body:                                         ; preds = %for.cond
  %15 = load %struct.CCGVert**, %struct.CCGVert*** %effectedV, align 8, !dbg !5511
  %16 = load i32, i32* %i, align 4, !dbg !5512
  %idxprom = sext i32 %16 to i64, !dbg !5511
  %arrayidx = getelementptr inbounds %struct.CCGVert*, %struct.CCGVert** %15, i64 %idxprom, !dbg !5511
  %17 = load %struct.CCGVert*, %struct.CCGVert** %arrayidx, align 8, !dbg !5511
  %flags = getelementptr inbounds %struct.CCGVert, %struct.CCGVert* %17, i32 0, i32 4, !dbg !5513
  store i16 0, i16* %flags, align 4, !dbg !5514
  br label %for.inc, !dbg !5511

for.inc:                                          ; preds = %for.body
  %18 = load i32, i32* %i, align 4, !dbg !5515
  %inc = add nsw i32 %18, 1, !dbg !5515
  store i32 %inc, i32* %i, align 4, !dbg !5515
  br label %for.cond, !dbg !5516, !llvm.loop !5517

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !5519
  br label %for.cond1, !dbg !5521

for.cond1:                                        ; preds = %for.inc7, %for.end
  %19 = load i32, i32* %i, align 4, !dbg !5522
  %20 = load i32, i32* %numEffectedE, align 4, !dbg !5524
  %cmp2 = icmp slt i32 %19, %20, !dbg !5525
  br i1 %cmp2, label %for.body3, label %for.end9, !dbg !5526

for.body3:                                        ; preds = %for.cond1
  %21 = load %struct.CCGEdge**, %struct.CCGEdge*** %effectedE, align 8, !dbg !5527
  %22 = load i32, i32* %i, align 4, !dbg !5528
  %idxprom4 = sext i32 %22 to i64, !dbg !5527
  %arrayidx5 = getelementptr inbounds %struct.CCGEdge*, %struct.CCGEdge** %21, i64 %idxprom4, !dbg !5527
  %23 = load %struct.CCGEdge*, %struct.CCGEdge** %arrayidx5, align 8, !dbg !5527
  %flags6 = getelementptr inbounds %struct.CCGEdge, %struct.CCGEdge* %23, i32 0, i32 3, !dbg !5529
  store i16 0, i16* %flags6, align 2, !dbg !5530
  br label %for.inc7, !dbg !5527

for.inc7:                                         ; preds = %for.body3
  %24 = load i32, i32* %i, align 4, !dbg !5531
  %inc8 = add nsw i32 %24, 1, !dbg !5531
  store i32 %inc8, i32* %i, align 4, !dbg !5531
  br label %for.cond1, !dbg !5532, !llvm.loop !5533

for.end9:                                         ; preds = %for.cond1
  store i32 0, i32* %i, align 4, !dbg !5535
  br label %for.cond10, !dbg !5537

for.cond10:                                       ; preds = %for.inc16, %for.end9
  %25 = load i32, i32* %i, align 4, !dbg !5538
  %26 = load i32, i32* %numEffectedF.addr, align 4, !dbg !5540
  %cmp11 = icmp slt i32 %25, %26, !dbg !5541
  br i1 %cmp11, label %for.body12, label %for.end18, !dbg !5542

for.body12:                                       ; preds = %for.cond10
  %27 = load %struct.CCGFace**, %struct.CCGFace*** %effectedF.addr, align 8, !dbg !5543
  %28 = load i32, i32* %i, align 4, !dbg !5544
  %idxprom13 = sext i32 %28 to i64, !dbg !5543
  %arrayidx14 = getelementptr inbounds %struct.CCGFace*, %struct.CCGFace** %27, i64 %idxprom13, !dbg !5543
  %29 = load %struct.CCGFace*, %struct.CCGFace** %arrayidx14, align 8, !dbg !5543
  %flags15 = getelementptr inbounds %struct.CCGFace, %struct.CCGFace* %29, i32 0, i32 3, !dbg !5545
  store i16 0, i16* %flags15, align 2, !dbg !5546
  br label %for.inc16, !dbg !5543

for.inc16:                                        ; preds = %for.body12
  %30 = load i32, i32* %i, align 4, !dbg !5547
  %inc17 = add nsw i32 %30, 1, !dbg !5547
  store i32 %inc17, i32* %i, align 4, !dbg !5547
  br label %for.cond10, !dbg !5548, !llvm.loop !5549

for.end18:                                        ; preds = %for.cond10
  %31 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !5551
  %32 = load %struct.CCGEdge**, %struct.CCGEdge*** %effectedE, align 8, !dbg !5552
  %33 = bitcast %struct.CCGEdge** %32 to i8*, !dbg !5552
  call void %31(i8* %33), !dbg !5551
  %34 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !5553
  %35 = load %struct.CCGVert**, %struct.CCGVert*** %effectedV, align 8, !dbg !5554
  %36 = bitcast %struct.CCGVert** %35 to i8*, !dbg !5554
  call void %34(i8* %36), !dbg !5553
  %37 = load i32, i32* %freeF, align 4, !dbg !5555
  %tobool19 = icmp ne i32 %37, 0, !dbg !5555
  br i1 %tobool19, label %if.then20, label %if.end21, !dbg !5557

if.then20:                                        ; preds = %for.end18
  %38 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !5558
  %39 = load %struct.CCGFace**, %struct.CCGFace*** %effectedF.addr, align 8, !dbg !5559
  %40 = bitcast %struct.CCGFace** %39 to i8*, !dbg !5559
  call void %38(i8* %40), !dbg !5558
  br label %if.end21, !dbg !5558

if.end21:                                         ; preds = %if.then20, %for.end18
  ret i32 0, !dbg !5560
}

; Function Attrs: noinline nounwind uwtable
define internal void @ccgSubSurf__calcVertNormals(%struct.CCGSubSurf* %ss, %struct.CCGVert** %effectedV, %struct.CCGEdge** %effectedE, %struct.CCGFace** %effectedF, i32 %numEffectedV, i32 %numEffectedE, i32 %numEffectedF) #0 !dbg !5561 {
entry:
  %ss.addr = alloca %struct.CCGSubSurf*, align 8
  %effectedV.addr = alloca %struct.CCGVert**, align 8
  %effectedE.addr = alloca %struct.CCGEdge**, align 8
  %effectedF.addr = alloca %struct.CCGFace**, align 8
  %numEffectedV.addr = alloca i32, align 4
  %numEffectedE.addr = alloca i32, align 4
  %numEffectedF.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %ptrIdx = alloca i32, align 4
  %subdivLevels = alloca i32, align 4
  %lvl = alloca i32, align 4
  %edgeSize = alloca i32, align 4
  %gridSize = alloca i32, align 4
  %normalDataOffset = alloca i32, align 4
  %vertDataSize = alloca i32, align 4
  %f = alloca %struct.CCGFace*, align 8
  %S = alloca i32, align 4
  %x = alloca i32, align 4
  %y = alloca i32, align 4
  %no = alloca [3 x float], align 4
  %_a = alloca float*, align 8
  %_a40 = alloca float*, align 8
  %_a62 = alloca float*, align 8
  %_a80 = alloca float*, align 8
  %yLimit = alloca i32, align 4
  %xLimit = alloca i32, align 4
  %yLimitNext = alloca i32, align 4
  %xLimitPrev = alloca i32, align 4
  %xPlusOk = alloca i32, align 4
  %yPlusOk = alloca i32, align 4
  %_a141 = alloca float*, align 8
  %_b = alloca float*, align 8
  %_a157 = alloca float*, align 8
  %_b161 = alloca float*, align 8
  %_a175 = alloca float*, align 8
  %_b179 = alloca float*, align 8
  %_a209 = alloca float*, align 8
  %_b213 = alloca float*, align 8
  %K = alloca i32, align 4
  %_a238 = alloca float*, align 8
  %_b244 = alloca float*, align 8
  %_a262 = alloca float*, align 8
  %_b271 = alloca float*, align 8
  %_a292 = alloca float*, align 8
  %_b294 = alloca float*, align 8
  %_a312 = alloca float*, align 8
  %_b318 = alloca float*, align 8
  %_a335 = alloca float*, align 8
  %_b342 = alloca float*, align 8
  %_a358 = alloca float*, align 8
  %_b367 = alloca float*, align 8
  %_a384 = alloca float*, align 8
  %_b394 = alloca float*, align 8
  %v = alloca %struct.CCGVert*, align 8
  %no427 = alloca float*, align 8
  %_a429 = alloca float*, align 8
  %f438 = alloca %struct.CCGFace*, align 8
  %_a441 = alloca float*, align 8
  %_b442 = alloca float*, align 8
  %_a464 = alloca float*, align 8
  %_b465 = alloca float*, align 8
  %f480 = alloca %struct.CCGFace*, align 8
  %_a484 = alloca float*, align 8
  %_b489 = alloca float*, align 8
  %e = alloca %struct.CCGEdge*, align 8
  %fLast = alloca %struct.CCGFace*, align 8
  %x517 = alloca i32, align 4
  %f525 = alloca %struct.CCGFace*, align 8
  %f_ed_idx = alloca i32, align 4
  %f_ed_idx_last = alloca i32, align 4
  %_a536 = alloca float*, align 8
  %_b538 = alloca float*, align 8
  %f562 = alloca %struct.CCGFace*, align 8
  %f_ed_idx566 = alloca i32, align 4
  %f_ed_idx_last568 = alloca i32, align 4
  %_a575 = alloca float*, align 8
  %_b577 = alloca float*, align 8
  %f599 = alloca %struct.CCGFace*, align 8
  %S602 = alloca i32, align 4
  %x603 = alloca i32, align 4
  %y604 = alloca i32, align 4
  %_a611 = alloca float*, align 8
  %_b618 = alloca float*, align 8
  %no644 = alloca float*, align 8
  %_a659 = alloca float*, align 8
  %_b661 = alloca float*, align 8
  %e682 = alloca %struct.CCGEdge*, align 8
  %f688 = alloca %struct.CCGFace*, align 8
  %x691 = alloca i32, align 4
  %f_ed_idx692 = alloca i32, align 4
  %_a698 = alloca float*, align 8
  %_b700 = alloca float*, align 8
  %x712 = alloca i32, align 4
  %no717 = alloca float*, align 8
  %_a719 = alloca float*, align 8
  %_b720 = alloca float*, align 8
  store %struct.CCGSubSurf* %ss, %struct.CCGSubSurf** %ss.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGSubSurf** %ss.addr, metadata !5564, metadata !DIExpression()), !dbg !5565
  store %struct.CCGVert** %effectedV, %struct.CCGVert*** %effectedV.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGVert*** %effectedV.addr, metadata !5566, metadata !DIExpression()), !dbg !5567
  store %struct.CCGEdge** %effectedE, %struct.CCGEdge*** %effectedE.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGEdge*** %effectedE.addr, metadata !5568, metadata !DIExpression()), !dbg !5569
  store %struct.CCGFace** %effectedF, %struct.CCGFace*** %effectedF.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGFace*** %effectedF.addr, metadata !5570, metadata !DIExpression()), !dbg !5571
  store i32 %numEffectedV, i32* %numEffectedV.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %numEffectedV.addr, metadata !5572, metadata !DIExpression()), !dbg !5573
  store i32 %numEffectedE, i32* %numEffectedE.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %numEffectedE.addr, metadata !5574, metadata !DIExpression()), !dbg !5575
  store i32 %numEffectedF, i32* %numEffectedF.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %numEffectedF.addr, metadata !5576, metadata !DIExpression()), !dbg !5577
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5578, metadata !DIExpression()), !dbg !5579
  call void @llvm.dbg.declare(metadata i32* %ptrIdx, metadata !5580, metadata !DIExpression()), !dbg !5581
  call void @llvm.dbg.declare(metadata i32* %subdivLevels, metadata !5582, metadata !DIExpression()), !dbg !5583
  %0 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !5584
  %subdivLevels1 = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %0, i32 0, i32 6, !dbg !5585
  %1 = load i32, i32* %subdivLevels1, align 8, !dbg !5585
  store i32 %1, i32* %subdivLevels, align 4, !dbg !5583
  call void @llvm.dbg.declare(metadata i32* %lvl, metadata !5586, metadata !DIExpression()), !dbg !5587
  %2 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !5588
  %subdivLevels2 = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %2, i32 0, i32 6, !dbg !5589
  %3 = load i32, i32* %subdivLevels2, align 8, !dbg !5589
  store i32 %3, i32* %lvl, align 4, !dbg !5587
  call void @llvm.dbg.declare(metadata i32* %edgeSize, metadata !5590, metadata !DIExpression()), !dbg !5591
  %4 = load i32, i32* %lvl, align 4, !dbg !5592
  %call = call i32 @ccg_edgesize(i32 %4), !dbg !5593
  store i32 %call, i32* %edgeSize, align 4, !dbg !5591
  call void @llvm.dbg.declare(metadata i32* %gridSize, metadata !5594, metadata !DIExpression()), !dbg !5595
  %5 = load i32, i32* %lvl, align 4, !dbg !5596
  %call3 = call i32 @ccg_gridsize(i32 %5), !dbg !5597
  store i32 %call3, i32* %gridSize, align 4, !dbg !5595
  call void @llvm.dbg.declare(metadata i32* %normalDataOffset, metadata !5598, metadata !DIExpression()), !dbg !5599
  %6 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !5600
  %normalDataOffset4 = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %6, i32 0, i32 14, !dbg !5601
  %7 = load i32, i32* %normalDataOffset4, align 4, !dbg !5601
  store i32 %7, i32* %normalDataOffset, align 4, !dbg !5599
  call void @llvm.dbg.declare(metadata i32* %vertDataSize, metadata !5602, metadata !DIExpression()), !dbg !5603
  %8 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !5604
  %meshIFC = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %8, i32 0, i32 3, !dbg !5605
  %vertDataSize5 = getelementptr inbounds %struct.CCGMeshIFC, %struct.CCGMeshIFC* %meshIFC, i32 0, i32 4, !dbg !5606
  %9 = load i32, i32* %vertDataSize5, align 8, !dbg !5606
  store i32 %9, i32* %vertDataSize, align 4, !dbg !5603
  store i32 0, i32* %ptrIdx, align 4, !dbg !5607
  br label %for.cond, !dbg !5609

for.cond:                                         ; preds = %for.inc418, %entry
  %10 = load i32, i32* %ptrIdx, align 4, !dbg !5610
  %11 = load i32, i32* %numEffectedF.addr, align 4, !dbg !5612
  %cmp = icmp slt i32 %10, %11, !dbg !5613
  br i1 %cmp, label %for.body, label %for.end420, !dbg !5614

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.CCGFace** %f, metadata !5615, metadata !DIExpression()), !dbg !5617
  %12 = load %struct.CCGFace**, %struct.CCGFace*** %effectedF.addr, align 8, !dbg !5618
  %13 = load i32, i32* %ptrIdx, align 4, !dbg !5619
  %idxprom = sext i32 %13 to i64, !dbg !5618
  %arrayidx = getelementptr inbounds %struct.CCGFace*, %struct.CCGFace** %12, i64 %idxprom, !dbg !5618
  %14 = load %struct.CCGFace*, %struct.CCGFace** %arrayidx, align 8, !dbg !5618
  store %struct.CCGFace* %14, %struct.CCGFace** %f, align 8, !dbg !5617
  call void @llvm.dbg.declare(metadata i32* %S, metadata !5620, metadata !DIExpression()), !dbg !5621
  call void @llvm.dbg.declare(metadata i32* %x, metadata !5622, metadata !DIExpression()), !dbg !5623
  call void @llvm.dbg.declare(metadata i32* %y, metadata !5624, metadata !DIExpression()), !dbg !5625
  call void @llvm.dbg.declare(metadata [3 x float]* %no, metadata !5626, metadata !DIExpression()), !dbg !5630
  store i32 0, i32* %S, align 4, !dbg !5631
  br label %for.cond6, !dbg !5633

for.cond6:                                        ; preds = %for.inc88, %for.body
  %15 = load i32, i32* %S, align 4, !dbg !5634
  %16 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !5636
  %numVerts = getelementptr inbounds %struct.CCGFace, %struct.CCGFace* %16, i32 0, i32 2, !dbg !5637
  %17 = load i16, i16* %numVerts, align 8, !dbg !5637
  %conv = sext i16 %17 to i32, !dbg !5636
  %cmp7 = icmp slt i32 %15, %conv, !dbg !5638
  br i1 %cmp7, label %for.body9, label %for.end90, !dbg !5639

for.body9:                                        ; preds = %for.cond6
  store i32 0, i32* %y, align 4, !dbg !5640
  br label %for.cond10, !dbg !5643

for.cond10:                                       ; preds = %for.inc23, %for.body9
  %18 = load i32, i32* %y, align 4, !dbg !5644
  %19 = load i32, i32* %gridSize, align 4, !dbg !5646
  %sub = sub nsw i32 %19, 1, !dbg !5647
  %cmp11 = icmp slt i32 %18, %sub, !dbg !5648
  br i1 %cmp11, label %for.body13, label %for.end25, !dbg !5649

for.body13:                                       ; preds = %for.cond10
  store i32 0, i32* %x, align 4, !dbg !5650
  br label %for.cond14, !dbg !5653

for.cond14:                                       ; preds = %for.inc, %for.body13
  %20 = load i32, i32* %x, align 4, !dbg !5654
  %21 = load i32, i32* %gridSize, align 4, !dbg !5656
  %sub15 = sub nsw i32 %21, 1, !dbg !5657
  %cmp16 = icmp slt i32 %20, %sub15, !dbg !5658
  br i1 %cmp16, label %for.body18, label %for.end, !dbg !5659

for.body18:                                       ; preds = %for.cond14
  call void @llvm.dbg.declare(metadata float** %_a, metadata !5660, metadata !DIExpression()), !dbg !5663
  %22 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !5663
  %23 = load i32, i32* %lvl, align 4, !dbg !5663
  %24 = load i32, i32* %S, align 4, !dbg !5663
  %25 = load i32, i32* %x, align 4, !dbg !5663
  %26 = load i32, i32* %y, align 4, !dbg !5663
  %27 = load i32, i32* %subdivLevels, align 4, !dbg !5663
  %28 = load i32, i32* %vertDataSize, align 4, !dbg !5663
  %29 = load i32, i32* %normalDataOffset, align 4, !dbg !5663
  %call19 = call float* @_face_getIFNo(%struct.CCGFace* %22, i32 %23, i32 %24, i32 %25, i32 %26, i32 %27, i32 %28, i32 %29), !dbg !5663
  store float* %call19, float** %_a, align 8, !dbg !5663
  %30 = load float*, float** %_a, align 8, !dbg !5663
  %arrayidx20 = getelementptr inbounds float, float* %30, i64 2, !dbg !5663
  store float 0.000000e+00, float* %arrayidx20, align 4, !dbg !5663
  %31 = load float*, float** %_a, align 8, !dbg !5663
  %arrayidx21 = getelementptr inbounds float, float* %31, i64 1, !dbg !5663
  store float 0.000000e+00, float* %arrayidx21, align 4, !dbg !5663
  %32 = load float*, float** %_a, align 8, !dbg !5663
  %arrayidx22 = getelementptr inbounds float, float* %32, i64 0, !dbg !5663
  store float 0.000000e+00, float* %arrayidx22, align 4, !dbg !5663
  br label %for.inc, !dbg !5664

for.inc:                                          ; preds = %for.body18
  %33 = load i32, i32* %x, align 4, !dbg !5665
  %inc = add nsw i32 %33, 1, !dbg !5665
  store i32 %inc, i32* %x, align 4, !dbg !5665
  br label %for.cond14, !dbg !5666, !llvm.loop !5667

for.end:                                          ; preds = %for.cond14
  br label %for.inc23, !dbg !5669

for.inc23:                                        ; preds = %for.end
  %34 = load i32, i32* %y, align 4, !dbg !5670
  %inc24 = add nsw i32 %34, 1, !dbg !5670
  store i32 %inc24, i32* %y, align 4, !dbg !5670
  br label %for.cond10, !dbg !5671, !llvm.loop !5672

for.end25:                                        ; preds = %for.cond10
  %35 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !5674
  %call26 = call %struct.CCGEdge** @FACE_getEdges(%struct.CCGFace* %35), !dbg !5676
  %36 = load i32, i32* %S, align 4, !dbg !5677
  %sub27 = sub nsw i32 %36, 1, !dbg !5678
  %37 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !5679
  %numVerts28 = getelementptr inbounds %struct.CCGFace, %struct.CCGFace* %37, i32 0, i32 2, !dbg !5680
  %38 = load i16, i16* %numVerts28, align 8, !dbg !5680
  %conv29 = sext i16 %38 to i32, !dbg !5679
  %add = add nsw i32 %sub27, %conv29, !dbg !5681
  %39 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !5682
  %numVerts30 = getelementptr inbounds %struct.CCGFace, %struct.CCGFace* %39, i32 0, i32 2, !dbg !5683
  %40 = load i16, i16* %numVerts30, align 8, !dbg !5683
  %conv31 = sext i16 %40 to i32, !dbg !5682
  %rem = srem i32 %add, %conv31, !dbg !5684
  %idxprom32 = sext i32 %rem to i64, !dbg !5676
  %arrayidx33 = getelementptr inbounds %struct.CCGEdge*, %struct.CCGEdge** %call26, i64 %idxprom32, !dbg !5676
  %41 = load %struct.CCGEdge*, %struct.CCGEdge** %arrayidx33, align 8, !dbg !5676
  %flags = getelementptr inbounds %struct.CCGEdge, %struct.CCGEdge* %41, i32 0, i32 3, !dbg !5685
  %42 = load i16, i16* %flags, align 2, !dbg !5685
  %conv34 = sext i16 %42 to i32, !dbg !5676
  %and = and i32 %conv34, 1, !dbg !5686
  %tobool = icmp ne i32 %and, 0, !dbg !5686
  br i1 %tobool, label %if.then, label %if.end, !dbg !5687

if.then:                                          ; preds = %for.end25
  store i32 0, i32* %x, align 4, !dbg !5688
  br label %for.cond35, !dbg !5691

for.cond35:                                       ; preds = %for.inc46, %if.then
  %43 = load i32, i32* %x, align 4, !dbg !5692
  %44 = load i32, i32* %gridSize, align 4, !dbg !5694
  %sub36 = sub nsw i32 %44, 1, !dbg !5695
  %cmp37 = icmp slt i32 %43, %sub36, !dbg !5696
  br i1 %cmp37, label %for.body39, label %for.end48, !dbg !5697

for.body39:                                       ; preds = %for.cond35
  call void @llvm.dbg.declare(metadata float** %_a40, metadata !5698, metadata !DIExpression()), !dbg !5701
  %45 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !5701
  %46 = load i32, i32* %lvl, align 4, !dbg !5701
  %47 = load i32, i32* %S, align 4, !dbg !5701
  %48 = load i32, i32* %x, align 4, !dbg !5701
  %49 = load i32, i32* %gridSize, align 4, !dbg !5701
  %sub41 = sub nsw i32 %49, 1, !dbg !5701
  %50 = load i32, i32* %subdivLevels, align 4, !dbg !5701
  %51 = load i32, i32* %vertDataSize, align 4, !dbg !5701
  %52 = load i32, i32* %normalDataOffset, align 4, !dbg !5701
  %call42 = call float* @_face_getIFNo(%struct.CCGFace* %45, i32 %46, i32 %47, i32 %48, i32 %sub41, i32 %50, i32 %51, i32 %52), !dbg !5701
  store float* %call42, float** %_a40, align 8, !dbg !5701
  %53 = load float*, float** %_a40, align 8, !dbg !5701
  %arrayidx43 = getelementptr inbounds float, float* %53, i64 2, !dbg !5701
  store float 0.000000e+00, float* %arrayidx43, align 4, !dbg !5701
  %54 = load float*, float** %_a40, align 8, !dbg !5701
  %arrayidx44 = getelementptr inbounds float, float* %54, i64 1, !dbg !5701
  store float 0.000000e+00, float* %arrayidx44, align 4, !dbg !5701
  %55 = load float*, float** %_a40, align 8, !dbg !5701
  %arrayidx45 = getelementptr inbounds float, float* %55, i64 0, !dbg !5701
  store float 0.000000e+00, float* %arrayidx45, align 4, !dbg !5701
  br label %for.inc46, !dbg !5702

for.inc46:                                        ; preds = %for.body39
  %56 = load i32, i32* %x, align 4, !dbg !5703
  %inc47 = add nsw i32 %56, 1, !dbg !5703
  store i32 %inc47, i32* %x, align 4, !dbg !5703
  br label %for.cond35, !dbg !5704, !llvm.loop !5705

for.end48:                                        ; preds = %for.cond35
  br label %if.end, !dbg !5707

if.end:                                           ; preds = %for.end48, %for.end25
  %57 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !5708
  %call49 = call %struct.CCGEdge** @FACE_getEdges(%struct.CCGFace* %57), !dbg !5710
  %58 = load i32, i32* %S, align 4, !dbg !5711
  %idxprom50 = sext i32 %58 to i64, !dbg !5710
  %arrayidx51 = getelementptr inbounds %struct.CCGEdge*, %struct.CCGEdge** %call49, i64 %idxprom50, !dbg !5710
  %59 = load %struct.CCGEdge*, %struct.CCGEdge** %arrayidx51, align 8, !dbg !5710
  %flags52 = getelementptr inbounds %struct.CCGEdge, %struct.CCGEdge* %59, i32 0, i32 3, !dbg !5712
  %60 = load i16, i16* %flags52, align 2, !dbg !5712
  %conv53 = sext i16 %60 to i32, !dbg !5710
  %and54 = and i32 %conv53, 1, !dbg !5713
  %tobool55 = icmp ne i32 %and54, 0, !dbg !5713
  br i1 %tobool55, label %if.then56, label %if.end71, !dbg !5714

if.then56:                                        ; preds = %if.end
  store i32 0, i32* %y, align 4, !dbg !5715
  br label %for.cond57, !dbg !5718

for.cond57:                                       ; preds = %for.inc68, %if.then56
  %61 = load i32, i32* %y, align 4, !dbg !5719
  %62 = load i32, i32* %gridSize, align 4, !dbg !5721
  %sub58 = sub nsw i32 %62, 1, !dbg !5722
  %cmp59 = icmp slt i32 %61, %sub58, !dbg !5723
  br i1 %cmp59, label %for.body61, label %for.end70, !dbg !5724

for.body61:                                       ; preds = %for.cond57
  call void @llvm.dbg.declare(metadata float** %_a62, metadata !5725, metadata !DIExpression()), !dbg !5728
  %63 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !5728
  %64 = load i32, i32* %lvl, align 4, !dbg !5728
  %65 = load i32, i32* %S, align 4, !dbg !5728
  %66 = load i32, i32* %gridSize, align 4, !dbg !5728
  %sub63 = sub nsw i32 %66, 1, !dbg !5728
  %67 = load i32, i32* %y, align 4, !dbg !5728
  %68 = load i32, i32* %subdivLevels, align 4, !dbg !5728
  %69 = load i32, i32* %vertDataSize, align 4, !dbg !5728
  %70 = load i32, i32* %normalDataOffset, align 4, !dbg !5728
  %call64 = call float* @_face_getIFNo(%struct.CCGFace* %63, i32 %64, i32 %65, i32 %sub63, i32 %67, i32 %68, i32 %69, i32 %70), !dbg !5728
  store float* %call64, float** %_a62, align 8, !dbg !5728
  %71 = load float*, float** %_a62, align 8, !dbg !5728
  %arrayidx65 = getelementptr inbounds float, float* %71, i64 2, !dbg !5728
  store float 0.000000e+00, float* %arrayidx65, align 4, !dbg !5728
  %72 = load float*, float** %_a62, align 8, !dbg !5728
  %arrayidx66 = getelementptr inbounds float, float* %72, i64 1, !dbg !5728
  store float 0.000000e+00, float* %arrayidx66, align 4, !dbg !5728
  %73 = load float*, float** %_a62, align 8, !dbg !5728
  %arrayidx67 = getelementptr inbounds float, float* %73, i64 0, !dbg !5728
  store float 0.000000e+00, float* %arrayidx67, align 4, !dbg !5728
  br label %for.inc68, !dbg !5729

for.inc68:                                        ; preds = %for.body61
  %74 = load i32, i32* %y, align 4, !dbg !5730
  %inc69 = add nsw i32 %74, 1, !dbg !5730
  store i32 %inc69, i32* %y, align 4, !dbg !5730
  br label %for.cond57, !dbg !5731, !llvm.loop !5732

for.end70:                                        ; preds = %for.cond57
  br label %if.end71, !dbg !5734

if.end71:                                         ; preds = %for.end70, %if.end
  %75 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !5735
  %call72 = call %struct.CCGVert** @FACE_getVerts(%struct.CCGFace* %75), !dbg !5737
  %76 = load i32, i32* %S, align 4, !dbg !5738
  %idxprom73 = sext i32 %76 to i64, !dbg !5737
  %arrayidx74 = getelementptr inbounds %struct.CCGVert*, %struct.CCGVert** %call72, i64 %idxprom73, !dbg !5737
  %77 = load %struct.CCGVert*, %struct.CCGVert** %arrayidx74, align 8, !dbg !5737
  %flags75 = getelementptr inbounds %struct.CCGVert, %struct.CCGVert* %77, i32 0, i32 4, !dbg !5739
  %78 = load i16, i16* %flags75, align 4, !dbg !5739
  %conv76 = sext i16 %78 to i32, !dbg !5737
  %and77 = and i32 %conv76, 1, !dbg !5740
  %tobool78 = icmp ne i32 %and77, 0, !dbg !5740
  br i1 %tobool78, label %if.then79, label %if.end87, !dbg !5741

if.then79:                                        ; preds = %if.end71
  call void @llvm.dbg.declare(metadata float** %_a80, metadata !5742, metadata !DIExpression()), !dbg !5745
  %79 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !5745
  %80 = load i32, i32* %lvl, align 4, !dbg !5745
  %81 = load i32, i32* %S, align 4, !dbg !5745
  %82 = load i32, i32* %gridSize, align 4, !dbg !5745
  %sub81 = sub nsw i32 %82, 1, !dbg !5745
  %83 = load i32, i32* %gridSize, align 4, !dbg !5745
  %sub82 = sub nsw i32 %83, 1, !dbg !5745
  %84 = load i32, i32* %subdivLevels, align 4, !dbg !5745
  %85 = load i32, i32* %vertDataSize, align 4, !dbg !5745
  %86 = load i32, i32* %normalDataOffset, align 4, !dbg !5745
  %call83 = call float* @_face_getIFNo(%struct.CCGFace* %79, i32 %80, i32 %81, i32 %sub81, i32 %sub82, i32 %84, i32 %85, i32 %86), !dbg !5745
  store float* %call83, float** %_a80, align 8, !dbg !5745
  %87 = load float*, float** %_a80, align 8, !dbg !5745
  %arrayidx84 = getelementptr inbounds float, float* %87, i64 2, !dbg !5745
  store float 0.000000e+00, float* %arrayidx84, align 4, !dbg !5745
  %88 = load float*, float** %_a80, align 8, !dbg !5745
  %arrayidx85 = getelementptr inbounds float, float* %88, i64 1, !dbg !5745
  store float 0.000000e+00, float* %arrayidx85, align 4, !dbg !5745
  %89 = load float*, float** %_a80, align 8, !dbg !5745
  %arrayidx86 = getelementptr inbounds float, float* %89, i64 0, !dbg !5745
  store float 0.000000e+00, float* %arrayidx86, align 4, !dbg !5745
  br label %if.end87, !dbg !5746

if.end87:                                         ; preds = %if.then79, %if.end71
  br label %for.inc88, !dbg !5747

for.inc88:                                        ; preds = %if.end87
  %90 = load i32, i32* %S, align 4, !dbg !5748
  %inc89 = add nsw i32 %90, 1, !dbg !5748
  store i32 %inc89, i32* %S, align 4, !dbg !5748
  br label %for.cond6, !dbg !5749, !llvm.loop !5750

for.end90:                                        ; preds = %for.cond6
  store i32 0, i32* %S, align 4, !dbg !5752
  br label %for.cond91, !dbg !5754

for.cond91:                                       ; preds = %for.inc415, %for.end90
  %91 = load i32, i32* %S, align 4, !dbg !5755
  %92 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !5757
  %numVerts92 = getelementptr inbounds %struct.CCGFace, %struct.CCGFace* %92, i32 0, i32 2, !dbg !5758
  %93 = load i16, i16* %numVerts92, align 8, !dbg !5758
  %conv93 = sext i16 %93 to i32, !dbg !5757
  %cmp94 = icmp slt i32 %91, %conv93, !dbg !5759
  br i1 %cmp94, label %for.body96, label %for.end417, !dbg !5760

for.body96:                                       ; preds = %for.cond91
  call void @llvm.dbg.declare(metadata i32* %yLimit, metadata !5761, metadata !DIExpression()), !dbg !5763
  %94 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !5764
  %call97 = call %struct.CCGEdge** @FACE_getEdges(%struct.CCGFace* %94), !dbg !5765
  %95 = load i32, i32* %S, align 4, !dbg !5766
  %sub98 = sub nsw i32 %95, 1, !dbg !5767
  %96 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !5768
  %numVerts99 = getelementptr inbounds %struct.CCGFace, %struct.CCGFace* %96, i32 0, i32 2, !dbg !5769
  %97 = load i16, i16* %numVerts99, align 8, !dbg !5769
  %conv100 = sext i16 %97 to i32, !dbg !5768
  %add101 = add nsw i32 %sub98, %conv100, !dbg !5770
  %98 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !5771
  %numVerts102 = getelementptr inbounds %struct.CCGFace, %struct.CCGFace* %98, i32 0, i32 2, !dbg !5772
  %99 = load i16, i16* %numVerts102, align 8, !dbg !5772
  %conv103 = sext i16 %99 to i32, !dbg !5771
  %rem104 = srem i32 %add101, %conv103, !dbg !5773
  %idxprom105 = sext i32 %rem104 to i64, !dbg !5765
  %arrayidx106 = getelementptr inbounds %struct.CCGEdge*, %struct.CCGEdge** %call97, i64 %idxprom105, !dbg !5765
  %100 = load %struct.CCGEdge*, %struct.CCGEdge** %arrayidx106, align 8, !dbg !5765
  %flags107 = getelementptr inbounds %struct.CCGEdge, %struct.CCGEdge* %100, i32 0, i32 3, !dbg !5774
  %101 = load i16, i16* %flags107, align 2, !dbg !5774
  %conv108 = sext i16 %101 to i32, !dbg !5765
  %and109 = and i32 %conv108, 1, !dbg !5775
  %tobool110 = icmp ne i32 %and109, 0, !dbg !5776
  %lnot = xor i1 %tobool110, true, !dbg !5776
  %lnot.ext = zext i1 %lnot to i32, !dbg !5776
  store i32 %lnot.ext, i32* %yLimit, align 4, !dbg !5763
  call void @llvm.dbg.declare(metadata i32* %xLimit, metadata !5777, metadata !DIExpression()), !dbg !5778
  %102 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !5779
  %call111 = call %struct.CCGEdge** @FACE_getEdges(%struct.CCGFace* %102), !dbg !5780
  %103 = load i32, i32* %S, align 4, !dbg !5781
  %idxprom112 = sext i32 %103 to i64, !dbg !5780
  %arrayidx113 = getelementptr inbounds %struct.CCGEdge*, %struct.CCGEdge** %call111, i64 %idxprom112, !dbg !5780
  %104 = load %struct.CCGEdge*, %struct.CCGEdge** %arrayidx113, align 8, !dbg !5780
  %flags114 = getelementptr inbounds %struct.CCGEdge, %struct.CCGEdge* %104, i32 0, i32 3, !dbg !5782
  %105 = load i16, i16* %flags114, align 2, !dbg !5782
  %conv115 = sext i16 %105 to i32, !dbg !5780
  %and116 = and i32 %conv115, 1, !dbg !5783
  %tobool117 = icmp ne i32 %and116, 0, !dbg !5784
  %lnot118 = xor i1 %tobool117, true, !dbg !5784
  %lnot.ext119 = zext i1 %lnot118 to i32, !dbg !5784
  store i32 %lnot.ext119, i32* %xLimit, align 4, !dbg !5778
  call void @llvm.dbg.declare(metadata i32* %yLimitNext, metadata !5785, metadata !DIExpression()), !dbg !5786
  %106 = load i32, i32* %xLimit, align 4, !dbg !5787
  store i32 %106, i32* %yLimitNext, align 4, !dbg !5786
  call void @llvm.dbg.declare(metadata i32* %xLimitPrev, metadata !5788, metadata !DIExpression()), !dbg !5789
  %107 = load i32, i32* %yLimit, align 4, !dbg !5790
  store i32 %107, i32* %xLimitPrev, align 4, !dbg !5789
  store i32 0, i32* %y, align 4, !dbg !5791
  br label %for.cond120, !dbg !5793

for.cond120:                                      ; preds = %for.inc412, %for.body96
  %108 = load i32, i32* %y, align 4, !dbg !5794
  %109 = load i32, i32* %gridSize, align 4, !dbg !5796
  %sub121 = sub nsw i32 %109, 1, !dbg !5797
  %cmp122 = icmp slt i32 %108, %sub121, !dbg !5798
  br i1 %cmp122, label %for.body124, label %for.end414, !dbg !5799

for.body124:                                      ; preds = %for.cond120
  store i32 0, i32* %x, align 4, !dbg !5800
  br label %for.cond125, !dbg !5803

for.cond125:                                      ; preds = %for.inc409, %for.body124
  %110 = load i32, i32* %x, align 4, !dbg !5804
  %111 = load i32, i32* %gridSize, align 4, !dbg !5806
  %sub126 = sub nsw i32 %111, 1, !dbg !5807
  %cmp127 = icmp slt i32 %110, %sub126, !dbg !5808
  br i1 %cmp127, label %for.body129, label %for.end411, !dbg !5809

for.body129:                                      ; preds = %for.cond125
  call void @llvm.dbg.declare(metadata i32* %xPlusOk, metadata !5810, metadata !DIExpression()), !dbg !5812
  %112 = load i32, i32* %xLimit, align 4, !dbg !5813
  %tobool130 = icmp ne i32 %112, 0, !dbg !5813
  br i1 %tobool130, label %lor.rhs, label %lor.end, !dbg !5814

lor.rhs:                                          ; preds = %for.body129
  %113 = load i32, i32* %x, align 4, !dbg !5815
  %114 = load i32, i32* %gridSize, align 4, !dbg !5816
  %sub131 = sub nsw i32 %114, 2, !dbg !5817
  %cmp132 = icmp slt i32 %113, %sub131, !dbg !5818
  br label %lor.end, !dbg !5814

lor.end:                                          ; preds = %lor.rhs, %for.body129
  %115 = phi i1 [ true, %for.body129 ], [ %cmp132, %lor.rhs ]
  %lor.ext = zext i1 %115 to i32, !dbg !5814
  store i32 %lor.ext, i32* %xPlusOk, align 4, !dbg !5812
  call void @llvm.dbg.declare(metadata i32* %yPlusOk, metadata !5819, metadata !DIExpression()), !dbg !5820
  %116 = load i32, i32* %yLimit, align 4, !dbg !5821
  %tobool134 = icmp ne i32 %116, 0, !dbg !5821
  br i1 %tobool134, label %lor.rhs135, label %lor.end139, !dbg !5822

lor.rhs135:                                       ; preds = %lor.end
  %117 = load i32, i32* %y, align 4, !dbg !5823
  %118 = load i32, i32* %gridSize, align 4, !dbg !5824
  %sub136 = sub nsw i32 %118, 2, !dbg !5825
  %cmp137 = icmp slt i32 %117, %sub136, !dbg !5826
  br label %lor.end139, !dbg !5822

lor.end139:                                       ; preds = %lor.rhs135, %lor.end
  %119 = phi i1 [ true, %lor.end ], [ %cmp137, %lor.rhs135 ]
  %lor.ext140 = zext i1 %119 to i32, !dbg !5822
  store i32 %lor.ext140, i32* %yPlusOk, align 4, !dbg !5820
  %120 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !5827
  %121 = load i32, i32* %lvl, align 4, !dbg !5827
  %122 = load i32, i32* %S, align 4, !dbg !5827
  %123 = load i32, i32* %x, align 4, !dbg !5827
  %124 = load i32, i32* %y, align 4, !dbg !5827
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %no, i64 0, i64 0, !dbg !5827
  %125 = load i32, i32* %subdivLevels, align 4, !dbg !5827
  %126 = load i32, i32* %vertDataSize, align 4, !dbg !5827
  call void @_face_calcIFNo(%struct.CCGFace* %120, i32 %121, i32 %122, i32 %123, i32 %124, float* %arraydecay, i32 %125, i32 %126), !dbg !5827
  call void @llvm.dbg.declare(metadata float** %_a141, metadata !5828, metadata !DIExpression()), !dbg !5830
  %127 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !5830
  %128 = load i32, i32* %lvl, align 4, !dbg !5830
  %129 = load i32, i32* %S, align 4, !dbg !5830
  %130 = load i32, i32* %x, align 4, !dbg !5830
  %add142 = add nsw i32 %130, 0, !dbg !5830
  %131 = load i32, i32* %y, align 4, !dbg !5830
  %add143 = add nsw i32 %131, 0, !dbg !5830
  %132 = load i32, i32* %subdivLevels, align 4, !dbg !5830
  %133 = load i32, i32* %vertDataSize, align 4, !dbg !5830
  %134 = load i32, i32* %normalDataOffset, align 4, !dbg !5830
  %call144 = call float* @_face_getIFNo(%struct.CCGFace* %127, i32 %128, i32 %129, i32 %add142, i32 %add143, i32 %132, i32 %133, i32 %134), !dbg !5830
  store float* %call144, float** %_a141, align 8, !dbg !5830
  call void @llvm.dbg.declare(metadata float** %_b, metadata !5831, metadata !DIExpression()), !dbg !5830
  %arraydecay145 = getelementptr inbounds [3 x float], [3 x float]* %no, i64 0, i64 0, !dbg !5830
  store float* %arraydecay145, float** %_b, align 8, !dbg !5830
  %135 = load float*, float** %_b, align 8, !dbg !5830
  %arrayidx146 = getelementptr inbounds float, float* %135, i64 0, !dbg !5830
  %136 = load float, float* %arrayidx146, align 4, !dbg !5830
  %137 = load float*, float** %_a141, align 8, !dbg !5830
  %arrayidx147 = getelementptr inbounds float, float* %137, i64 0, !dbg !5830
  %138 = load float, float* %arrayidx147, align 4, !dbg !5830
  %add148 = fadd float %138, %136, !dbg !5830
  store float %add148, float* %arrayidx147, align 4, !dbg !5830
  %139 = load float*, float** %_b, align 8, !dbg !5830
  %arrayidx149 = getelementptr inbounds float, float* %139, i64 1, !dbg !5830
  %140 = load float, float* %arrayidx149, align 4, !dbg !5830
  %141 = load float*, float** %_a141, align 8, !dbg !5830
  %arrayidx150 = getelementptr inbounds float, float* %141, i64 1, !dbg !5830
  %142 = load float, float* %arrayidx150, align 4, !dbg !5830
  %add151 = fadd float %142, %140, !dbg !5830
  store float %add151, float* %arrayidx150, align 4, !dbg !5830
  %143 = load float*, float** %_b, align 8, !dbg !5830
  %arrayidx152 = getelementptr inbounds float, float* %143, i64 2, !dbg !5830
  %144 = load float, float* %arrayidx152, align 4, !dbg !5830
  %145 = load float*, float** %_a141, align 8, !dbg !5830
  %arrayidx153 = getelementptr inbounds float, float* %145, i64 2, !dbg !5830
  %146 = load float, float* %arrayidx153, align 4, !dbg !5830
  %add154 = fadd float %146, %144, !dbg !5830
  store float %add154, float* %arrayidx153, align 4, !dbg !5830
  %147 = load i32, i32* %xPlusOk, align 4, !dbg !5832
  %tobool155 = icmp ne i32 %147, 0, !dbg !5832
  br i1 %tobool155, label %if.then156, label %if.end172, !dbg !5834

if.then156:                                       ; preds = %lor.end139
  call void @llvm.dbg.declare(metadata float** %_a157, metadata !5835, metadata !DIExpression()), !dbg !5837
  %148 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !5837
  %149 = load i32, i32* %lvl, align 4, !dbg !5837
  %150 = load i32, i32* %S, align 4, !dbg !5837
  %151 = load i32, i32* %x, align 4, !dbg !5837
  %add158 = add nsw i32 %151, 1, !dbg !5837
  %152 = load i32, i32* %y, align 4, !dbg !5837
  %add159 = add nsw i32 %152, 0, !dbg !5837
  %153 = load i32, i32* %subdivLevels, align 4, !dbg !5837
  %154 = load i32, i32* %vertDataSize, align 4, !dbg !5837
  %155 = load i32, i32* %normalDataOffset, align 4, !dbg !5837
  %call160 = call float* @_face_getIFNo(%struct.CCGFace* %148, i32 %149, i32 %150, i32 %add158, i32 %add159, i32 %153, i32 %154, i32 %155), !dbg !5837
  store float* %call160, float** %_a157, align 8, !dbg !5837
  call void @llvm.dbg.declare(metadata float** %_b161, metadata !5838, metadata !DIExpression()), !dbg !5837
  %arraydecay162 = getelementptr inbounds [3 x float], [3 x float]* %no, i64 0, i64 0, !dbg !5837
  store float* %arraydecay162, float** %_b161, align 8, !dbg !5837
  %156 = load float*, float** %_b161, align 8, !dbg !5837
  %arrayidx163 = getelementptr inbounds float, float* %156, i64 0, !dbg !5837
  %157 = load float, float* %arrayidx163, align 4, !dbg !5837
  %158 = load float*, float** %_a157, align 8, !dbg !5837
  %arrayidx164 = getelementptr inbounds float, float* %158, i64 0, !dbg !5837
  %159 = load float, float* %arrayidx164, align 4, !dbg !5837
  %add165 = fadd float %159, %157, !dbg !5837
  store float %add165, float* %arrayidx164, align 4, !dbg !5837
  %160 = load float*, float** %_b161, align 8, !dbg !5837
  %arrayidx166 = getelementptr inbounds float, float* %160, i64 1, !dbg !5837
  %161 = load float, float* %arrayidx166, align 4, !dbg !5837
  %162 = load float*, float** %_a157, align 8, !dbg !5837
  %arrayidx167 = getelementptr inbounds float, float* %162, i64 1, !dbg !5837
  %163 = load float, float* %arrayidx167, align 4, !dbg !5837
  %add168 = fadd float %163, %161, !dbg !5837
  store float %add168, float* %arrayidx167, align 4, !dbg !5837
  %164 = load float*, float** %_b161, align 8, !dbg !5837
  %arrayidx169 = getelementptr inbounds float, float* %164, i64 2, !dbg !5837
  %165 = load float, float* %arrayidx169, align 4, !dbg !5837
  %166 = load float*, float** %_a157, align 8, !dbg !5837
  %arrayidx170 = getelementptr inbounds float, float* %166, i64 2, !dbg !5837
  %167 = load float, float* %arrayidx170, align 4, !dbg !5837
  %add171 = fadd float %167, %165, !dbg !5837
  store float %add171, float* %arrayidx170, align 4, !dbg !5837
  br label %if.end172, !dbg !5837

if.end172:                                        ; preds = %if.then156, %lor.end139
  %168 = load i32, i32* %yPlusOk, align 4, !dbg !5839
  %tobool173 = icmp ne i32 %168, 0, !dbg !5839
  br i1 %tobool173, label %if.then174, label %if.end190, !dbg !5841

if.then174:                                       ; preds = %if.end172
  call void @llvm.dbg.declare(metadata float** %_a175, metadata !5842, metadata !DIExpression()), !dbg !5844
  %169 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !5844
  %170 = load i32, i32* %lvl, align 4, !dbg !5844
  %171 = load i32, i32* %S, align 4, !dbg !5844
  %172 = load i32, i32* %x, align 4, !dbg !5844
  %add176 = add nsw i32 %172, 0, !dbg !5844
  %173 = load i32, i32* %y, align 4, !dbg !5844
  %add177 = add nsw i32 %173, 1, !dbg !5844
  %174 = load i32, i32* %subdivLevels, align 4, !dbg !5844
  %175 = load i32, i32* %vertDataSize, align 4, !dbg !5844
  %176 = load i32, i32* %normalDataOffset, align 4, !dbg !5844
  %call178 = call float* @_face_getIFNo(%struct.CCGFace* %169, i32 %170, i32 %171, i32 %add176, i32 %add177, i32 %174, i32 %175, i32 %176), !dbg !5844
  store float* %call178, float** %_a175, align 8, !dbg !5844
  call void @llvm.dbg.declare(metadata float** %_b179, metadata !5845, metadata !DIExpression()), !dbg !5844
  %arraydecay180 = getelementptr inbounds [3 x float], [3 x float]* %no, i64 0, i64 0, !dbg !5844
  store float* %arraydecay180, float** %_b179, align 8, !dbg !5844
  %177 = load float*, float** %_b179, align 8, !dbg !5844
  %arrayidx181 = getelementptr inbounds float, float* %177, i64 0, !dbg !5844
  %178 = load float, float* %arrayidx181, align 4, !dbg !5844
  %179 = load float*, float** %_a175, align 8, !dbg !5844
  %arrayidx182 = getelementptr inbounds float, float* %179, i64 0, !dbg !5844
  %180 = load float, float* %arrayidx182, align 4, !dbg !5844
  %add183 = fadd float %180, %178, !dbg !5844
  store float %add183, float* %arrayidx182, align 4, !dbg !5844
  %181 = load float*, float** %_b179, align 8, !dbg !5844
  %arrayidx184 = getelementptr inbounds float, float* %181, i64 1, !dbg !5844
  %182 = load float, float* %arrayidx184, align 4, !dbg !5844
  %183 = load float*, float** %_a175, align 8, !dbg !5844
  %arrayidx185 = getelementptr inbounds float, float* %183, i64 1, !dbg !5844
  %184 = load float, float* %arrayidx185, align 4, !dbg !5844
  %add186 = fadd float %184, %182, !dbg !5844
  store float %add186, float* %arrayidx185, align 4, !dbg !5844
  %185 = load float*, float** %_b179, align 8, !dbg !5844
  %arrayidx187 = getelementptr inbounds float, float* %185, i64 2, !dbg !5844
  %186 = load float, float* %arrayidx187, align 4, !dbg !5844
  %187 = load float*, float** %_a175, align 8, !dbg !5844
  %arrayidx188 = getelementptr inbounds float, float* %187, i64 2, !dbg !5844
  %188 = load float, float* %arrayidx188, align 4, !dbg !5844
  %add189 = fadd float %188, %186, !dbg !5844
  store float %add189, float* %arrayidx188, align 4, !dbg !5844
  br label %if.end190, !dbg !5844

if.end190:                                        ; preds = %if.then174, %if.end172
  %189 = load i32, i32* %xPlusOk, align 4, !dbg !5846
  %tobool191 = icmp ne i32 %189, 0, !dbg !5846
  br i1 %tobool191, label %land.lhs.true, label %if.end225, !dbg !5848

land.lhs.true:                                    ; preds = %if.end190
  %190 = load i32, i32* %yPlusOk, align 4, !dbg !5849
  %tobool192 = icmp ne i32 %190, 0, !dbg !5849
  br i1 %tobool192, label %if.then193, label %if.end225, !dbg !5850

if.then193:                                       ; preds = %land.lhs.true
  %191 = load i32, i32* %x, align 4, !dbg !5851
  %192 = load i32, i32* %gridSize, align 4, !dbg !5854
  %sub194 = sub nsw i32 %192, 2, !dbg !5855
  %cmp195 = icmp slt i32 %191, %sub194, !dbg !5856
  br i1 %cmp195, label %if.then208, label %lor.lhs.false, !dbg !5857

lor.lhs.false:                                    ; preds = %if.then193
  %193 = load i32, i32* %y, align 4, !dbg !5858
  %194 = load i32, i32* %gridSize, align 4, !dbg !5859
  %sub197 = sub nsw i32 %194, 2, !dbg !5860
  %cmp198 = icmp slt i32 %193, %sub197, !dbg !5861
  br i1 %cmp198, label %if.then208, label %lor.lhs.false200, !dbg !5862

lor.lhs.false200:                                 ; preds = %lor.lhs.false
  %195 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !5863
  %call201 = call %struct.CCGVert** @FACE_getVerts(%struct.CCGFace* %195), !dbg !5864
  %196 = load i32, i32* %S, align 4, !dbg !5865
  %idxprom202 = sext i32 %196 to i64, !dbg !5864
  %arrayidx203 = getelementptr inbounds %struct.CCGVert*, %struct.CCGVert** %call201, i64 %idxprom202, !dbg !5864
  %197 = load %struct.CCGVert*, %struct.CCGVert** %arrayidx203, align 8, !dbg !5864
  %flags204 = getelementptr inbounds %struct.CCGVert, %struct.CCGVert* %197, i32 0, i32 4, !dbg !5866
  %198 = load i16, i16* %flags204, align 4, !dbg !5866
  %conv205 = sext i16 %198 to i32, !dbg !5864
  %and206 = and i32 %conv205, 1, !dbg !5867
  %tobool207 = icmp ne i32 %and206, 0, !dbg !5867
  br i1 %tobool207, label %if.then208, label %if.end224, !dbg !5868

if.then208:                                       ; preds = %lor.lhs.false200, %lor.lhs.false, %if.then193
  call void @llvm.dbg.declare(metadata float** %_a209, metadata !5869, metadata !DIExpression()), !dbg !5872
  %199 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !5872
  %200 = load i32, i32* %lvl, align 4, !dbg !5872
  %201 = load i32, i32* %S, align 4, !dbg !5872
  %202 = load i32, i32* %x, align 4, !dbg !5872
  %add210 = add nsw i32 %202, 1, !dbg !5872
  %203 = load i32, i32* %y, align 4, !dbg !5872
  %add211 = add nsw i32 %203, 1, !dbg !5872
  %204 = load i32, i32* %subdivLevels, align 4, !dbg !5872
  %205 = load i32, i32* %vertDataSize, align 4, !dbg !5872
  %206 = load i32, i32* %normalDataOffset, align 4, !dbg !5872
  %call212 = call float* @_face_getIFNo(%struct.CCGFace* %199, i32 %200, i32 %201, i32 %add210, i32 %add211, i32 %204, i32 %205, i32 %206), !dbg !5872
  store float* %call212, float** %_a209, align 8, !dbg !5872
  call void @llvm.dbg.declare(metadata float** %_b213, metadata !5873, metadata !DIExpression()), !dbg !5872
  %arraydecay214 = getelementptr inbounds [3 x float], [3 x float]* %no, i64 0, i64 0, !dbg !5872
  store float* %arraydecay214, float** %_b213, align 8, !dbg !5872
  %207 = load float*, float** %_b213, align 8, !dbg !5872
  %arrayidx215 = getelementptr inbounds float, float* %207, i64 0, !dbg !5872
  %208 = load float, float* %arrayidx215, align 4, !dbg !5872
  %209 = load float*, float** %_a209, align 8, !dbg !5872
  %arrayidx216 = getelementptr inbounds float, float* %209, i64 0, !dbg !5872
  %210 = load float, float* %arrayidx216, align 4, !dbg !5872
  %add217 = fadd float %210, %208, !dbg !5872
  store float %add217, float* %arrayidx216, align 4, !dbg !5872
  %211 = load float*, float** %_b213, align 8, !dbg !5872
  %arrayidx218 = getelementptr inbounds float, float* %211, i64 1, !dbg !5872
  %212 = load float, float* %arrayidx218, align 4, !dbg !5872
  %213 = load float*, float** %_a209, align 8, !dbg !5872
  %arrayidx219 = getelementptr inbounds float, float* %213, i64 1, !dbg !5872
  %214 = load float, float* %arrayidx219, align 4, !dbg !5872
  %add220 = fadd float %214, %212, !dbg !5872
  store float %add220, float* %arrayidx219, align 4, !dbg !5872
  %215 = load float*, float** %_b213, align 8, !dbg !5872
  %arrayidx221 = getelementptr inbounds float, float* %215, i64 2, !dbg !5872
  %216 = load float, float* %arrayidx221, align 4, !dbg !5872
  %217 = load float*, float** %_a209, align 8, !dbg !5872
  %arrayidx222 = getelementptr inbounds float, float* %217, i64 2, !dbg !5872
  %218 = load float, float* %arrayidx222, align 4, !dbg !5872
  %add223 = fadd float %218, %216, !dbg !5872
  store float %add223, float* %arrayidx222, align 4, !dbg !5872
  br label %if.end224, !dbg !5874

if.end224:                                        ; preds = %if.then208, %lor.lhs.false200
  br label %if.end225, !dbg !5875

if.end225:                                        ; preds = %if.end224, %land.lhs.true, %if.end190
  %219 = load i32, i32* %x, align 4, !dbg !5876
  %cmp226 = icmp eq i32 %219, 0, !dbg !5878
  br i1 %cmp226, label %land.lhs.true228, label %if.else, !dbg !5879

land.lhs.true228:                                 ; preds = %if.end225
  %220 = load i32, i32* %y, align 4, !dbg !5880
  %cmp229 = icmp eq i32 %220, 0, !dbg !5881
  br i1 %cmp229, label %if.then231, label %if.else, !dbg !5882

if.then231:                                       ; preds = %land.lhs.true228
  call void @llvm.dbg.declare(metadata i32* %K, metadata !5883, metadata !DIExpression()), !dbg !5885
  %221 = load i32, i32* %yLimitNext, align 4, !dbg !5886
  %tobool232 = icmp ne i32 %221, 0, !dbg !5886
  br i1 %tobool232, label %lor.lhs.false233, label %if.then237, !dbg !5888

lor.lhs.false233:                                 ; preds = %if.then231
  %222 = load i32, i32* %gridSize, align 4, !dbg !5889
  %sub234 = sub nsw i32 %222, 1, !dbg !5890
  %cmp235 = icmp slt i32 1, %sub234, !dbg !5891
  br i1 %cmp235, label %if.then237, label %if.end255, !dbg !5892

if.then237:                                       ; preds = %lor.lhs.false233, %if.then231
  call void @llvm.dbg.declare(metadata float** %_a238, metadata !5893, metadata !DIExpression()), !dbg !5895
  %223 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !5895
  %224 = load i32, i32* %lvl, align 4, !dbg !5895
  %225 = load i32, i32* %S, align 4, !dbg !5895
  %add239 = add nsw i32 %225, 1, !dbg !5895
  %226 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !5895
  %numVerts240 = getelementptr inbounds %struct.CCGFace, %struct.CCGFace* %226, i32 0, i32 2, !dbg !5895
  %227 = load i16, i16* %numVerts240, align 8, !dbg !5895
  %conv241 = sext i16 %227 to i32, !dbg !5895
  %rem242 = srem i32 %add239, %conv241, !dbg !5895
  %228 = load i32, i32* %subdivLevels, align 4, !dbg !5895
  %229 = load i32, i32* %vertDataSize, align 4, !dbg !5895
  %230 = load i32, i32* %normalDataOffset, align 4, !dbg !5895
  %call243 = call float* @_face_getIFNo(%struct.CCGFace* %223, i32 %224, i32 %rem242, i32 0, i32 1, i32 %228, i32 %229, i32 %230), !dbg !5895
  store float* %call243, float** %_a238, align 8, !dbg !5895
  call void @llvm.dbg.declare(metadata float** %_b244, metadata !5896, metadata !DIExpression()), !dbg !5895
  %arraydecay245 = getelementptr inbounds [3 x float], [3 x float]* %no, i64 0, i64 0, !dbg !5895
  store float* %arraydecay245, float** %_b244, align 8, !dbg !5895
  %231 = load float*, float** %_b244, align 8, !dbg !5895
  %arrayidx246 = getelementptr inbounds float, float* %231, i64 0, !dbg !5895
  %232 = load float, float* %arrayidx246, align 4, !dbg !5895
  %233 = load float*, float** %_a238, align 8, !dbg !5895
  %arrayidx247 = getelementptr inbounds float, float* %233, i64 0, !dbg !5895
  %234 = load float, float* %arrayidx247, align 4, !dbg !5895
  %add248 = fadd float %234, %232, !dbg !5895
  store float %add248, float* %arrayidx247, align 4, !dbg !5895
  %235 = load float*, float** %_b244, align 8, !dbg !5895
  %arrayidx249 = getelementptr inbounds float, float* %235, i64 1, !dbg !5895
  %236 = load float, float* %arrayidx249, align 4, !dbg !5895
  %237 = load float*, float** %_a238, align 8, !dbg !5895
  %arrayidx250 = getelementptr inbounds float, float* %237, i64 1, !dbg !5895
  %238 = load float, float* %arrayidx250, align 4, !dbg !5895
  %add251 = fadd float %238, %236, !dbg !5895
  store float %add251, float* %arrayidx250, align 4, !dbg !5895
  %239 = load float*, float** %_b244, align 8, !dbg !5895
  %arrayidx252 = getelementptr inbounds float, float* %239, i64 2, !dbg !5895
  %240 = load float, float* %arrayidx252, align 4, !dbg !5895
  %241 = load float*, float** %_a238, align 8, !dbg !5895
  %arrayidx253 = getelementptr inbounds float, float* %241, i64 2, !dbg !5895
  %242 = load float, float* %arrayidx253, align 4, !dbg !5895
  %add254 = fadd float %242, %240, !dbg !5895
  store float %add254, float* %arrayidx253, align 4, !dbg !5895
  br label %if.end255, !dbg !5895

if.end255:                                        ; preds = %if.then237, %lor.lhs.false233
  %243 = load i32, i32* %xLimitPrev, align 4, !dbg !5897
  %tobool256 = icmp ne i32 %243, 0, !dbg !5897
  br i1 %tobool256, label %lor.lhs.false257, label %if.then261, !dbg !5899

lor.lhs.false257:                                 ; preds = %if.end255
  %244 = load i32, i32* %gridSize, align 4, !dbg !5900
  %sub258 = sub nsw i32 %244, 1, !dbg !5901
  %cmp259 = icmp slt i32 1, %sub258, !dbg !5902
  br i1 %cmp259, label %if.then261, label %if.end282, !dbg !5903

if.then261:                                       ; preds = %lor.lhs.false257, %if.end255
  call void @llvm.dbg.declare(metadata float** %_a262, metadata !5904, metadata !DIExpression()), !dbg !5906
  %245 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !5906
  %246 = load i32, i32* %lvl, align 4, !dbg !5906
  %247 = load i32, i32* %S, align 4, !dbg !5906
  %sub263 = sub nsw i32 %247, 1, !dbg !5906
  %248 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !5906
  %numVerts264 = getelementptr inbounds %struct.CCGFace, %struct.CCGFace* %248, i32 0, i32 2, !dbg !5906
  %249 = load i16, i16* %numVerts264, align 8, !dbg !5906
  %conv265 = sext i16 %249 to i32, !dbg !5906
  %add266 = add nsw i32 %sub263, %conv265, !dbg !5906
  %250 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !5906
  %numVerts267 = getelementptr inbounds %struct.CCGFace, %struct.CCGFace* %250, i32 0, i32 2, !dbg !5906
  %251 = load i16, i16* %numVerts267, align 8, !dbg !5906
  %conv268 = sext i16 %251 to i32, !dbg !5906
  %rem269 = srem i32 %add266, %conv268, !dbg !5906
  %252 = load i32, i32* %subdivLevels, align 4, !dbg !5906
  %253 = load i32, i32* %vertDataSize, align 4, !dbg !5906
  %254 = load i32, i32* %normalDataOffset, align 4, !dbg !5906
  %call270 = call float* @_face_getIFNo(%struct.CCGFace* %245, i32 %246, i32 %rem269, i32 1, i32 0, i32 %252, i32 %253, i32 %254), !dbg !5906
  store float* %call270, float** %_a262, align 8, !dbg !5906
  call void @llvm.dbg.declare(metadata float** %_b271, metadata !5907, metadata !DIExpression()), !dbg !5906
  %arraydecay272 = getelementptr inbounds [3 x float], [3 x float]* %no, i64 0, i64 0, !dbg !5906
  store float* %arraydecay272, float** %_b271, align 8, !dbg !5906
  %255 = load float*, float** %_b271, align 8, !dbg !5906
  %arrayidx273 = getelementptr inbounds float, float* %255, i64 0, !dbg !5906
  %256 = load float, float* %arrayidx273, align 4, !dbg !5906
  %257 = load float*, float** %_a262, align 8, !dbg !5906
  %arrayidx274 = getelementptr inbounds float, float* %257, i64 0, !dbg !5906
  %258 = load float, float* %arrayidx274, align 4, !dbg !5906
  %add275 = fadd float %258, %256, !dbg !5906
  store float %add275, float* %arrayidx274, align 4, !dbg !5906
  %259 = load float*, float** %_b271, align 8, !dbg !5906
  %arrayidx276 = getelementptr inbounds float, float* %259, i64 1, !dbg !5906
  %260 = load float, float* %arrayidx276, align 4, !dbg !5906
  %261 = load float*, float** %_a262, align 8, !dbg !5906
  %arrayidx277 = getelementptr inbounds float, float* %261, i64 1, !dbg !5906
  %262 = load float, float* %arrayidx277, align 4, !dbg !5906
  %add278 = fadd float %262, %260, !dbg !5906
  store float %add278, float* %arrayidx277, align 4, !dbg !5906
  %263 = load float*, float** %_b271, align 8, !dbg !5906
  %arrayidx279 = getelementptr inbounds float, float* %263, i64 2, !dbg !5906
  %264 = load float, float* %arrayidx279, align 4, !dbg !5906
  %265 = load float*, float** %_a262, align 8, !dbg !5906
  %arrayidx280 = getelementptr inbounds float, float* %265, i64 2, !dbg !5906
  %266 = load float, float* %arrayidx280, align 4, !dbg !5906
  %add281 = fadd float %266, %264, !dbg !5906
  store float %add281, float* %arrayidx280, align 4, !dbg !5906
  br label %if.end282, !dbg !5906

if.end282:                                        ; preds = %if.then261, %lor.lhs.false257
  store i32 0, i32* %K, align 4, !dbg !5908
  br label %for.cond283, !dbg !5910

for.cond283:                                      ; preds = %for.inc306, %if.end282
  %267 = load i32, i32* %K, align 4, !dbg !5911
  %268 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !5913
  %numVerts284 = getelementptr inbounds %struct.CCGFace, %struct.CCGFace* %268, i32 0, i32 2, !dbg !5914
  %269 = load i16, i16* %numVerts284, align 8, !dbg !5914
  %conv285 = sext i16 %269 to i32, !dbg !5913
  %cmp286 = icmp slt i32 %267, %conv285, !dbg !5915
  br i1 %cmp286, label %for.body288, label %for.end308, !dbg !5916

for.body288:                                      ; preds = %for.cond283
  %270 = load i32, i32* %K, align 4, !dbg !5917
  %271 = load i32, i32* %S, align 4, !dbg !5920
  %cmp289 = icmp ne i32 %270, %271, !dbg !5921
  br i1 %cmp289, label %if.then291, label %if.end305, !dbg !5922

if.then291:                                       ; preds = %for.body288
  call void @llvm.dbg.declare(metadata float** %_a292, metadata !5923, metadata !DIExpression()), !dbg !5926
  %272 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !5926
  %273 = load i32, i32* %lvl, align 4, !dbg !5926
  %274 = load i32, i32* %K, align 4, !dbg !5926
  %275 = load i32, i32* %subdivLevels, align 4, !dbg !5926
  %276 = load i32, i32* %vertDataSize, align 4, !dbg !5926
  %277 = load i32, i32* %normalDataOffset, align 4, !dbg !5926
  %call293 = call float* @_face_getIFNo(%struct.CCGFace* %272, i32 %273, i32 %274, i32 0, i32 0, i32 %275, i32 %276, i32 %277), !dbg !5926
  store float* %call293, float** %_a292, align 8, !dbg !5926
  call void @llvm.dbg.declare(metadata float** %_b294, metadata !5927, metadata !DIExpression()), !dbg !5926
  %arraydecay295 = getelementptr inbounds [3 x float], [3 x float]* %no, i64 0, i64 0, !dbg !5926
  store float* %arraydecay295, float** %_b294, align 8, !dbg !5926
  %278 = load float*, float** %_b294, align 8, !dbg !5926
  %arrayidx296 = getelementptr inbounds float, float* %278, i64 0, !dbg !5926
  %279 = load float, float* %arrayidx296, align 4, !dbg !5926
  %280 = load float*, float** %_a292, align 8, !dbg !5926
  %arrayidx297 = getelementptr inbounds float, float* %280, i64 0, !dbg !5926
  %281 = load float, float* %arrayidx297, align 4, !dbg !5926
  %add298 = fadd float %281, %279, !dbg !5926
  store float %add298, float* %arrayidx297, align 4, !dbg !5926
  %282 = load float*, float** %_b294, align 8, !dbg !5926
  %arrayidx299 = getelementptr inbounds float, float* %282, i64 1, !dbg !5926
  %283 = load float, float* %arrayidx299, align 4, !dbg !5926
  %284 = load float*, float** %_a292, align 8, !dbg !5926
  %arrayidx300 = getelementptr inbounds float, float* %284, i64 1, !dbg !5926
  %285 = load float, float* %arrayidx300, align 4, !dbg !5926
  %add301 = fadd float %285, %283, !dbg !5926
  store float %add301, float* %arrayidx300, align 4, !dbg !5926
  %286 = load float*, float** %_b294, align 8, !dbg !5926
  %arrayidx302 = getelementptr inbounds float, float* %286, i64 2, !dbg !5926
  %287 = load float, float* %arrayidx302, align 4, !dbg !5926
  %288 = load float*, float** %_a292, align 8, !dbg !5926
  %arrayidx303 = getelementptr inbounds float, float* %288, i64 2, !dbg !5926
  %289 = load float, float* %arrayidx303, align 4, !dbg !5926
  %add304 = fadd float %289, %287, !dbg !5926
  store float %add304, float* %arrayidx303, align 4, !dbg !5926
  br label %if.end305, !dbg !5928

if.end305:                                        ; preds = %if.then291, %for.body288
  br label %for.inc306, !dbg !5929

for.inc306:                                       ; preds = %if.end305
  %290 = load i32, i32* %K, align 4, !dbg !5930
  %inc307 = add nsw i32 %290, 1, !dbg !5930
  store i32 %inc307, i32* %K, align 4, !dbg !5930
  br label %for.cond283, !dbg !5931, !llvm.loop !5932

for.end308:                                       ; preds = %for.cond283
  br label %if.end408, !dbg !5934

if.else:                                          ; preds = %land.lhs.true228, %if.end225
  %291 = load i32, i32* %y, align 4, !dbg !5935
  %cmp309 = icmp eq i32 %291, 0, !dbg !5937
  br i1 %cmp309, label %if.then311, label %if.else354, !dbg !5938

if.then311:                                       ; preds = %if.else
  call void @llvm.dbg.declare(metadata float** %_a312, metadata !5939, metadata !DIExpression()), !dbg !5942
  %292 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !5942
  %293 = load i32, i32* %lvl, align 4, !dbg !5942
  %294 = load i32, i32* %S, align 4, !dbg !5942
  %add313 = add nsw i32 %294, 1, !dbg !5942
  %295 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !5942
  %numVerts314 = getelementptr inbounds %struct.CCGFace, %struct.CCGFace* %295, i32 0, i32 2, !dbg !5942
  %296 = load i16, i16* %numVerts314, align 8, !dbg !5942
  %conv315 = sext i16 %296 to i32, !dbg !5942
  %rem316 = srem i32 %add313, %conv315, !dbg !5942
  %297 = load i32, i32* %x, align 4, !dbg !5942
  %298 = load i32, i32* %subdivLevels, align 4, !dbg !5942
  %299 = load i32, i32* %vertDataSize, align 4, !dbg !5942
  %300 = load i32, i32* %normalDataOffset, align 4, !dbg !5942
  %call317 = call float* @_face_getIFNo(%struct.CCGFace* %292, i32 %293, i32 %rem316, i32 0, i32 %297, i32 %298, i32 %299, i32 %300), !dbg !5942
  store float* %call317, float** %_a312, align 8, !dbg !5942
  call void @llvm.dbg.declare(metadata float** %_b318, metadata !5943, metadata !DIExpression()), !dbg !5942
  %arraydecay319 = getelementptr inbounds [3 x float], [3 x float]* %no, i64 0, i64 0, !dbg !5942
  store float* %arraydecay319, float** %_b318, align 8, !dbg !5942
  %301 = load float*, float** %_b318, align 8, !dbg !5942
  %arrayidx320 = getelementptr inbounds float, float* %301, i64 0, !dbg !5942
  %302 = load float, float* %arrayidx320, align 4, !dbg !5942
  %303 = load float*, float** %_a312, align 8, !dbg !5942
  %arrayidx321 = getelementptr inbounds float, float* %303, i64 0, !dbg !5942
  %304 = load float, float* %arrayidx321, align 4, !dbg !5942
  %add322 = fadd float %304, %302, !dbg !5942
  store float %add322, float* %arrayidx321, align 4, !dbg !5942
  %305 = load float*, float** %_b318, align 8, !dbg !5942
  %arrayidx323 = getelementptr inbounds float, float* %305, i64 1, !dbg !5942
  %306 = load float, float* %arrayidx323, align 4, !dbg !5942
  %307 = load float*, float** %_a312, align 8, !dbg !5942
  %arrayidx324 = getelementptr inbounds float, float* %307, i64 1, !dbg !5942
  %308 = load float, float* %arrayidx324, align 4, !dbg !5942
  %add325 = fadd float %308, %306, !dbg !5942
  store float %add325, float* %arrayidx324, align 4, !dbg !5942
  %309 = load float*, float** %_b318, align 8, !dbg !5942
  %arrayidx326 = getelementptr inbounds float, float* %309, i64 2, !dbg !5942
  %310 = load float, float* %arrayidx326, align 4, !dbg !5942
  %311 = load float*, float** %_a312, align 8, !dbg !5942
  %arrayidx327 = getelementptr inbounds float, float* %311, i64 2, !dbg !5942
  %312 = load float, float* %arrayidx327, align 4, !dbg !5942
  %add328 = fadd float %312, %310, !dbg !5942
  store float %add328, float* %arrayidx327, align 4, !dbg !5942
  %313 = load i32, i32* %yLimitNext, align 4, !dbg !5944
  %tobool329 = icmp ne i32 %313, 0, !dbg !5944
  br i1 %tobool329, label %lor.lhs.false330, label %if.then334, !dbg !5946

lor.lhs.false330:                                 ; preds = %if.then311
  %314 = load i32, i32* %x, align 4, !dbg !5947
  %315 = load i32, i32* %gridSize, align 4, !dbg !5948
  %sub331 = sub nsw i32 %315, 2, !dbg !5949
  %cmp332 = icmp slt i32 %314, %sub331, !dbg !5950
  br i1 %cmp332, label %if.then334, label %if.end353, !dbg !5951

if.then334:                                       ; preds = %lor.lhs.false330, %if.then311
  call void @llvm.dbg.declare(metadata float** %_a335, metadata !5952, metadata !DIExpression()), !dbg !5954
  %316 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !5954
  %317 = load i32, i32* %lvl, align 4, !dbg !5954
  %318 = load i32, i32* %S, align 4, !dbg !5954
  %add336 = add nsw i32 %318, 1, !dbg !5954
  %319 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !5954
  %numVerts337 = getelementptr inbounds %struct.CCGFace, %struct.CCGFace* %319, i32 0, i32 2, !dbg !5954
  %320 = load i16, i16* %numVerts337, align 8, !dbg !5954
  %conv338 = sext i16 %320 to i32, !dbg !5954
  %rem339 = srem i32 %add336, %conv338, !dbg !5954
  %321 = load i32, i32* %x, align 4, !dbg !5954
  %add340 = add nsw i32 %321, 1, !dbg !5954
  %322 = load i32, i32* %subdivLevels, align 4, !dbg !5954
  %323 = load i32, i32* %vertDataSize, align 4, !dbg !5954
  %324 = load i32, i32* %normalDataOffset, align 4, !dbg !5954
  %call341 = call float* @_face_getIFNo(%struct.CCGFace* %316, i32 %317, i32 %rem339, i32 0, i32 %add340, i32 %322, i32 %323, i32 %324), !dbg !5954
  store float* %call341, float** %_a335, align 8, !dbg !5954
  call void @llvm.dbg.declare(metadata float** %_b342, metadata !5955, metadata !DIExpression()), !dbg !5954
  %arraydecay343 = getelementptr inbounds [3 x float], [3 x float]* %no, i64 0, i64 0, !dbg !5954
  store float* %arraydecay343, float** %_b342, align 8, !dbg !5954
  %325 = load float*, float** %_b342, align 8, !dbg !5954
  %arrayidx344 = getelementptr inbounds float, float* %325, i64 0, !dbg !5954
  %326 = load float, float* %arrayidx344, align 4, !dbg !5954
  %327 = load float*, float** %_a335, align 8, !dbg !5954
  %arrayidx345 = getelementptr inbounds float, float* %327, i64 0, !dbg !5954
  %328 = load float, float* %arrayidx345, align 4, !dbg !5954
  %add346 = fadd float %328, %326, !dbg !5954
  store float %add346, float* %arrayidx345, align 4, !dbg !5954
  %329 = load float*, float** %_b342, align 8, !dbg !5954
  %arrayidx347 = getelementptr inbounds float, float* %329, i64 1, !dbg !5954
  %330 = load float, float* %arrayidx347, align 4, !dbg !5954
  %331 = load float*, float** %_a335, align 8, !dbg !5954
  %arrayidx348 = getelementptr inbounds float, float* %331, i64 1, !dbg !5954
  %332 = load float, float* %arrayidx348, align 4, !dbg !5954
  %add349 = fadd float %332, %330, !dbg !5954
  store float %add349, float* %arrayidx348, align 4, !dbg !5954
  %333 = load float*, float** %_b342, align 8, !dbg !5954
  %arrayidx350 = getelementptr inbounds float, float* %333, i64 2, !dbg !5954
  %334 = load float, float* %arrayidx350, align 4, !dbg !5954
  %335 = load float*, float** %_a335, align 8, !dbg !5954
  %arrayidx351 = getelementptr inbounds float, float* %335, i64 2, !dbg !5954
  %336 = load float, float* %arrayidx351, align 4, !dbg !5954
  %add352 = fadd float %336, %334, !dbg !5954
  store float %add352, float* %arrayidx351, align 4, !dbg !5954
  br label %if.end353, !dbg !5954

if.end353:                                        ; preds = %if.then334, %lor.lhs.false330
  br label %if.end407, !dbg !5956

if.else354:                                       ; preds = %if.else
  %337 = load i32, i32* %x, align 4, !dbg !5957
  %cmp355 = icmp eq i32 %337, 0, !dbg !5959
  br i1 %cmp355, label %if.then357, label %if.end406, !dbg !5960

if.then357:                                       ; preds = %if.else354
  call void @llvm.dbg.declare(metadata float** %_a358, metadata !5961, metadata !DIExpression()), !dbg !5964
  %338 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !5964
  %339 = load i32, i32* %lvl, align 4, !dbg !5964
  %340 = load i32, i32* %S, align 4, !dbg !5964
  %sub359 = sub nsw i32 %340, 1, !dbg !5964
  %341 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !5964
  %numVerts360 = getelementptr inbounds %struct.CCGFace, %struct.CCGFace* %341, i32 0, i32 2, !dbg !5964
  %342 = load i16, i16* %numVerts360, align 8, !dbg !5964
  %conv361 = sext i16 %342 to i32, !dbg !5964
  %add362 = add nsw i32 %sub359, %conv361, !dbg !5964
  %343 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !5964
  %numVerts363 = getelementptr inbounds %struct.CCGFace, %struct.CCGFace* %343, i32 0, i32 2, !dbg !5964
  %344 = load i16, i16* %numVerts363, align 8, !dbg !5964
  %conv364 = sext i16 %344 to i32, !dbg !5964
  %rem365 = srem i32 %add362, %conv364, !dbg !5964
  %345 = load i32, i32* %y, align 4, !dbg !5964
  %346 = load i32, i32* %subdivLevels, align 4, !dbg !5964
  %347 = load i32, i32* %vertDataSize, align 4, !dbg !5964
  %348 = load i32, i32* %normalDataOffset, align 4, !dbg !5964
  %call366 = call float* @_face_getIFNo(%struct.CCGFace* %338, i32 %339, i32 %rem365, i32 %345, i32 0, i32 %346, i32 %347, i32 %348), !dbg !5964
  store float* %call366, float** %_a358, align 8, !dbg !5964
  call void @llvm.dbg.declare(metadata float** %_b367, metadata !5965, metadata !DIExpression()), !dbg !5964
  %arraydecay368 = getelementptr inbounds [3 x float], [3 x float]* %no, i64 0, i64 0, !dbg !5964
  store float* %arraydecay368, float** %_b367, align 8, !dbg !5964
  %349 = load float*, float** %_b367, align 8, !dbg !5964
  %arrayidx369 = getelementptr inbounds float, float* %349, i64 0, !dbg !5964
  %350 = load float, float* %arrayidx369, align 4, !dbg !5964
  %351 = load float*, float** %_a358, align 8, !dbg !5964
  %arrayidx370 = getelementptr inbounds float, float* %351, i64 0, !dbg !5964
  %352 = load float, float* %arrayidx370, align 4, !dbg !5964
  %add371 = fadd float %352, %350, !dbg !5964
  store float %add371, float* %arrayidx370, align 4, !dbg !5964
  %353 = load float*, float** %_b367, align 8, !dbg !5964
  %arrayidx372 = getelementptr inbounds float, float* %353, i64 1, !dbg !5964
  %354 = load float, float* %arrayidx372, align 4, !dbg !5964
  %355 = load float*, float** %_a358, align 8, !dbg !5964
  %arrayidx373 = getelementptr inbounds float, float* %355, i64 1, !dbg !5964
  %356 = load float, float* %arrayidx373, align 4, !dbg !5964
  %add374 = fadd float %356, %354, !dbg !5964
  store float %add374, float* %arrayidx373, align 4, !dbg !5964
  %357 = load float*, float** %_b367, align 8, !dbg !5964
  %arrayidx375 = getelementptr inbounds float, float* %357, i64 2, !dbg !5964
  %358 = load float, float* %arrayidx375, align 4, !dbg !5964
  %359 = load float*, float** %_a358, align 8, !dbg !5964
  %arrayidx376 = getelementptr inbounds float, float* %359, i64 2, !dbg !5964
  %360 = load float, float* %arrayidx376, align 4, !dbg !5964
  %add377 = fadd float %360, %358, !dbg !5964
  store float %add377, float* %arrayidx376, align 4, !dbg !5964
  %361 = load i32, i32* %xLimitPrev, align 4, !dbg !5966
  %tobool378 = icmp ne i32 %361, 0, !dbg !5966
  br i1 %tobool378, label %lor.lhs.false379, label %if.then383, !dbg !5968

lor.lhs.false379:                                 ; preds = %if.then357
  %362 = load i32, i32* %y, align 4, !dbg !5969
  %363 = load i32, i32* %gridSize, align 4, !dbg !5970
  %sub380 = sub nsw i32 %363, 2, !dbg !5971
  %cmp381 = icmp slt i32 %362, %sub380, !dbg !5972
  br i1 %cmp381, label %if.then383, label %if.end405, !dbg !5973

if.then383:                                       ; preds = %lor.lhs.false379, %if.then357
  call void @llvm.dbg.declare(metadata float** %_a384, metadata !5974, metadata !DIExpression()), !dbg !5976
  %364 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !5976
  %365 = load i32, i32* %lvl, align 4, !dbg !5976
  %366 = load i32, i32* %S, align 4, !dbg !5976
  %sub385 = sub nsw i32 %366, 1, !dbg !5976
  %367 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !5976
  %numVerts386 = getelementptr inbounds %struct.CCGFace, %struct.CCGFace* %367, i32 0, i32 2, !dbg !5976
  %368 = load i16, i16* %numVerts386, align 8, !dbg !5976
  %conv387 = sext i16 %368 to i32, !dbg !5976
  %add388 = add nsw i32 %sub385, %conv387, !dbg !5976
  %369 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !5976
  %numVerts389 = getelementptr inbounds %struct.CCGFace, %struct.CCGFace* %369, i32 0, i32 2, !dbg !5976
  %370 = load i16, i16* %numVerts389, align 8, !dbg !5976
  %conv390 = sext i16 %370 to i32, !dbg !5976
  %rem391 = srem i32 %add388, %conv390, !dbg !5976
  %371 = load i32, i32* %y, align 4, !dbg !5976
  %add392 = add nsw i32 %371, 1, !dbg !5976
  %372 = load i32, i32* %subdivLevels, align 4, !dbg !5976
  %373 = load i32, i32* %vertDataSize, align 4, !dbg !5976
  %374 = load i32, i32* %normalDataOffset, align 4, !dbg !5976
  %call393 = call float* @_face_getIFNo(%struct.CCGFace* %364, i32 %365, i32 %rem391, i32 %add392, i32 0, i32 %372, i32 %373, i32 %374), !dbg !5976
  store float* %call393, float** %_a384, align 8, !dbg !5976
  call void @llvm.dbg.declare(metadata float** %_b394, metadata !5977, metadata !DIExpression()), !dbg !5976
  %arraydecay395 = getelementptr inbounds [3 x float], [3 x float]* %no, i64 0, i64 0, !dbg !5976
  store float* %arraydecay395, float** %_b394, align 8, !dbg !5976
  %375 = load float*, float** %_b394, align 8, !dbg !5976
  %arrayidx396 = getelementptr inbounds float, float* %375, i64 0, !dbg !5976
  %376 = load float, float* %arrayidx396, align 4, !dbg !5976
  %377 = load float*, float** %_a384, align 8, !dbg !5976
  %arrayidx397 = getelementptr inbounds float, float* %377, i64 0, !dbg !5976
  %378 = load float, float* %arrayidx397, align 4, !dbg !5976
  %add398 = fadd float %378, %376, !dbg !5976
  store float %add398, float* %arrayidx397, align 4, !dbg !5976
  %379 = load float*, float** %_b394, align 8, !dbg !5976
  %arrayidx399 = getelementptr inbounds float, float* %379, i64 1, !dbg !5976
  %380 = load float, float* %arrayidx399, align 4, !dbg !5976
  %381 = load float*, float** %_a384, align 8, !dbg !5976
  %arrayidx400 = getelementptr inbounds float, float* %381, i64 1, !dbg !5976
  %382 = load float, float* %arrayidx400, align 4, !dbg !5976
  %add401 = fadd float %382, %380, !dbg !5976
  store float %add401, float* %arrayidx400, align 4, !dbg !5976
  %383 = load float*, float** %_b394, align 8, !dbg !5976
  %arrayidx402 = getelementptr inbounds float, float* %383, i64 2, !dbg !5976
  %384 = load float, float* %arrayidx402, align 4, !dbg !5976
  %385 = load float*, float** %_a384, align 8, !dbg !5976
  %arrayidx403 = getelementptr inbounds float, float* %385, i64 2, !dbg !5976
  %386 = load float, float* %arrayidx403, align 4, !dbg !5976
  %add404 = fadd float %386, %384, !dbg !5976
  store float %add404, float* %arrayidx403, align 4, !dbg !5976
  br label %if.end405, !dbg !5976

if.end405:                                        ; preds = %if.then383, %lor.lhs.false379
  br label %if.end406, !dbg !5978

if.end406:                                        ; preds = %if.end405, %if.else354
  br label %if.end407

if.end407:                                        ; preds = %if.end406, %if.end353
  br label %if.end408

if.end408:                                        ; preds = %if.end407, %for.end308
  br label %for.inc409, !dbg !5979

for.inc409:                                       ; preds = %if.end408
  %387 = load i32, i32* %x, align 4, !dbg !5980
  %inc410 = add nsw i32 %387, 1, !dbg !5980
  store i32 %inc410, i32* %x, align 4, !dbg !5980
  br label %for.cond125, !dbg !5981, !llvm.loop !5982

for.end411:                                       ; preds = %for.cond125
  br label %for.inc412, !dbg !5984

for.inc412:                                       ; preds = %for.end411
  %388 = load i32, i32* %y, align 4, !dbg !5985
  %inc413 = add nsw i32 %388, 1, !dbg !5985
  store i32 %inc413, i32* %y, align 4, !dbg !5985
  br label %for.cond120, !dbg !5986, !llvm.loop !5987

for.end414:                                       ; preds = %for.cond120
  br label %for.inc415, !dbg !5989

for.inc415:                                       ; preds = %for.end414
  %389 = load i32, i32* %S, align 4, !dbg !5990
  %inc416 = add nsw i32 %389, 1, !dbg !5990
  store i32 %inc416, i32* %S, align 4, !dbg !5990
  br label %for.cond91, !dbg !5991, !llvm.loop !5992

for.end417:                                       ; preds = %for.cond91
  br label %for.inc418, !dbg !5994

for.inc418:                                       ; preds = %for.end417
  %390 = load i32, i32* %ptrIdx, align 4, !dbg !5995
  %inc419 = add nsw i32 %390, 1, !dbg !5995
  store i32 %inc419, i32* %ptrIdx, align 4, !dbg !5995
  br label %for.cond, !dbg !5996, !llvm.loop !5997

for.end420:                                       ; preds = %for.cond
  store i32 0, i32* %ptrIdx, align 4, !dbg !5999
  br label %for.cond421, !dbg !6001

for.cond421:                                      ; preds = %for.inc499, %for.end420
  %391 = load i32, i32* %ptrIdx, align 4, !dbg !6002
  %392 = load i32, i32* %numEffectedV.addr, align 4, !dbg !6004
  %cmp422 = icmp slt i32 %391, %392, !dbg !6005
  br i1 %cmp422, label %for.body424, label %for.end501, !dbg !6006

for.body424:                                      ; preds = %for.cond421
  call void @llvm.dbg.declare(metadata %struct.CCGVert** %v, metadata !6007, metadata !DIExpression()), !dbg !6009
  %393 = load %struct.CCGVert**, %struct.CCGVert*** %effectedV.addr, align 8, !dbg !6010
  %394 = load i32, i32* %ptrIdx, align 4, !dbg !6011
  %idxprom425 = sext i32 %394 to i64, !dbg !6010
  %arrayidx426 = getelementptr inbounds %struct.CCGVert*, %struct.CCGVert** %393, i64 %idxprom425, !dbg !6010
  %395 = load %struct.CCGVert*, %struct.CCGVert** %arrayidx426, align 8, !dbg !6010
  store %struct.CCGVert* %395, %struct.CCGVert** %v, align 8, !dbg !6009
  call void @llvm.dbg.declare(metadata float** %no427, metadata !6012, metadata !DIExpression()), !dbg !6013
  %396 = load %struct.CCGVert*, %struct.CCGVert** %v, align 8, !dbg !6014
  %397 = load i32, i32* %lvl, align 4, !dbg !6014
  %398 = load i32, i32* %vertDataSize, align 4, !dbg !6014
  %399 = load i32, i32* %normalDataOffset, align 4, !dbg !6014
  %call428 = call float* @_vert_getNo(%struct.CCGVert* %396, i32 %397, i32 %398, i32 %399), !dbg !6014
  store float* %call428, float** %no427, align 8, !dbg !6013
  call void @llvm.dbg.declare(metadata float** %_a429, metadata !6015, metadata !DIExpression()), !dbg !6017
  %400 = load float*, float** %no427, align 8, !dbg !6017
  store float* %400, float** %_a429, align 8, !dbg !6017
  %401 = load float*, float** %_a429, align 8, !dbg !6017
  %arrayidx430 = getelementptr inbounds float, float* %401, i64 2, !dbg !6017
  store float 0.000000e+00, float* %arrayidx430, align 4, !dbg !6017
  %402 = load float*, float** %_a429, align 8, !dbg !6017
  %arrayidx431 = getelementptr inbounds float, float* %402, i64 1, !dbg !6017
  store float 0.000000e+00, float* %arrayidx431, align 4, !dbg !6017
  %403 = load float*, float** %_a429, align 8, !dbg !6017
  %arrayidx432 = getelementptr inbounds float, float* %403, i64 0, !dbg !6017
  store float 0.000000e+00, float* %arrayidx432, align 4, !dbg !6017
  store i32 0, i32* %i, align 4, !dbg !6018
  br label %for.cond433, !dbg !6020

for.cond433:                                      ; preds = %for.inc456, %for.body424
  %404 = load i32, i32* %i, align 4, !dbg !6021
  %405 = load %struct.CCGVert*, %struct.CCGVert** %v, align 8, !dbg !6023
  %numFaces = getelementptr inbounds %struct.CCGVert, %struct.CCGVert* %405, i32 0, i32 3, !dbg !6024
  %406 = load i16, i16* %numFaces, align 2, !dbg !6024
  %conv434 = sext i16 %406 to i32, !dbg !6023
  %cmp435 = icmp slt i32 %404, %conv434, !dbg !6025
  br i1 %cmp435, label %for.body437, label %for.end458, !dbg !6026

for.body437:                                      ; preds = %for.cond433
  call void @llvm.dbg.declare(metadata %struct.CCGFace** %f438, metadata !6027, metadata !DIExpression()), !dbg !6029
  %407 = load %struct.CCGVert*, %struct.CCGVert** %v, align 8, !dbg !6030
  %faces = getelementptr inbounds %struct.CCGVert, %struct.CCGVert* %407, i32 0, i32 7, !dbg !6031
  %408 = load %struct.CCGFace**, %struct.CCGFace*** %faces, align 8, !dbg !6031
  %409 = load i32, i32* %i, align 4, !dbg !6032
  %idxprom439 = sext i32 %409 to i64, !dbg !6030
  %arrayidx440 = getelementptr inbounds %struct.CCGFace*, %struct.CCGFace** %408, i64 %idxprom439, !dbg !6030
  %410 = load %struct.CCGFace*, %struct.CCGFace** %arrayidx440, align 8, !dbg !6030
  store %struct.CCGFace* %410, %struct.CCGFace** %f438, align 8, !dbg !6029
  call void @llvm.dbg.declare(metadata float** %_a441, metadata !6033, metadata !DIExpression()), !dbg !6035
  %411 = load float*, float** %no427, align 8, !dbg !6035
  store float* %411, float** %_a441, align 8, !dbg !6035
  call void @llvm.dbg.declare(metadata float** %_b442, metadata !6036, metadata !DIExpression()), !dbg !6035
  %412 = load %struct.CCGFace*, %struct.CCGFace** %f438, align 8, !dbg !6035
  %413 = load i32, i32* %lvl, align 4, !dbg !6035
  %414 = load %struct.CCGFace*, %struct.CCGFace** %f438, align 8, !dbg !6035
  %415 = load %struct.CCGVert*, %struct.CCGVert** %v, align 8, !dbg !6035
  %call443 = call i32 @_face_getVertIndex(%struct.CCGFace* %414, %struct.CCGVert* %415), !dbg !6035
  %416 = load i32, i32* %gridSize, align 4, !dbg !6035
  %sub444 = sub nsw i32 %416, 1, !dbg !6035
  %417 = load i32, i32* %gridSize, align 4, !dbg !6035
  %sub445 = sub nsw i32 %417, 1, !dbg !6035
  %418 = load i32, i32* %subdivLevels, align 4, !dbg !6035
  %419 = load i32, i32* %vertDataSize, align 4, !dbg !6035
  %420 = load i32, i32* %normalDataOffset, align 4, !dbg !6035
  %call446 = call float* @_face_getIFNo(%struct.CCGFace* %412, i32 %413, i32 %call443, i32 %sub444, i32 %sub445, i32 %418, i32 %419, i32 %420), !dbg !6035
  store float* %call446, float** %_b442, align 8, !dbg !6035
  %421 = load float*, float** %_b442, align 8, !dbg !6035
  %arrayidx447 = getelementptr inbounds float, float* %421, i64 0, !dbg !6035
  %422 = load float, float* %arrayidx447, align 4, !dbg !6035
  %423 = load float*, float** %_a441, align 8, !dbg !6035
  %arrayidx448 = getelementptr inbounds float, float* %423, i64 0, !dbg !6035
  %424 = load float, float* %arrayidx448, align 4, !dbg !6035
  %add449 = fadd float %424, %422, !dbg !6035
  store float %add449, float* %arrayidx448, align 4, !dbg !6035
  %425 = load float*, float** %_b442, align 8, !dbg !6035
  %arrayidx450 = getelementptr inbounds float, float* %425, i64 1, !dbg !6035
  %426 = load float, float* %arrayidx450, align 4, !dbg !6035
  %427 = load float*, float** %_a441, align 8, !dbg !6035
  %arrayidx451 = getelementptr inbounds float, float* %427, i64 1, !dbg !6035
  %428 = load float, float* %arrayidx451, align 4, !dbg !6035
  %add452 = fadd float %428, %426, !dbg !6035
  store float %add452, float* %arrayidx451, align 4, !dbg !6035
  %429 = load float*, float** %_b442, align 8, !dbg !6035
  %arrayidx453 = getelementptr inbounds float, float* %429, i64 2, !dbg !6035
  %430 = load float, float* %arrayidx453, align 4, !dbg !6035
  %431 = load float*, float** %_a441, align 8, !dbg !6035
  %arrayidx454 = getelementptr inbounds float, float* %431, i64 2, !dbg !6035
  %432 = load float, float* %arrayidx454, align 4, !dbg !6035
  %add455 = fadd float %432, %430, !dbg !6035
  store float %add455, float* %arrayidx454, align 4, !dbg !6035
  br label %for.inc456, !dbg !6037

for.inc456:                                       ; preds = %for.body437
  %433 = load i32, i32* %i, align 4, !dbg !6038
  %inc457 = add nsw i32 %433, 1, !dbg !6038
  store i32 %inc457, i32* %i, align 4, !dbg !6038
  br label %for.cond433, !dbg !6039, !llvm.loop !6040

for.end458:                                       ; preds = %for.cond433
  %434 = load %struct.CCGVert*, %struct.CCGVert** %v, align 8, !dbg !6042
  %numFaces459 = getelementptr inbounds %struct.CCGVert, %struct.CCGVert* %434, i32 0, i32 3, !dbg !6042
  %435 = load i16, i16* %numFaces459, align 2, !dbg !6042
  %conv460 = sext i16 %435 to i32, !dbg !6042
  %cmp461 = icmp eq i32 %conv460, 0, !dbg !6042
  br i1 %cmp461, label %if.then463, label %if.end473, !dbg !6044

if.then463:                                       ; preds = %for.end458
  call void @llvm.dbg.declare(metadata float** %_a464, metadata !6045, metadata !DIExpression()), !dbg !6048
  %436 = load float*, float** %no427, align 8, !dbg !6048
  store float* %436, float** %_a464, align 8, !dbg !6048
  call void @llvm.dbg.declare(metadata float** %_b465, metadata !6049, metadata !DIExpression()), !dbg !6048
  %437 = load %struct.CCGVert*, %struct.CCGVert** %v, align 8, !dbg !6048
  %438 = load i32, i32* %lvl, align 4, !dbg !6048
  %439 = load i32, i32* %vertDataSize, align 4, !dbg !6048
  %call466 = call i8* @_vert_getCo(%struct.CCGVert* %437, i32 %438, i32 %439), !dbg !6048
  %440 = bitcast i8* %call466 to float*, !dbg !6048
  store float* %440, float** %_b465, align 8, !dbg !6048
  %441 = load float*, float** %_b465, align 8, !dbg !6048
  %arrayidx467 = getelementptr inbounds float, float* %441, i64 0, !dbg !6048
  %442 = load float, float* %arrayidx467, align 4, !dbg !6048
  %443 = load float*, float** %_a464, align 8, !dbg !6048
  %arrayidx468 = getelementptr inbounds float, float* %443, i64 0, !dbg !6048
  store float %442, float* %arrayidx468, align 4, !dbg !6048
  %444 = load float*, float** %_b465, align 8, !dbg !6048
  %arrayidx469 = getelementptr inbounds float, float* %444, i64 1, !dbg !6048
  %445 = load float, float* %arrayidx469, align 4, !dbg !6048
  %446 = load float*, float** %_a464, align 8, !dbg !6048
  %arrayidx470 = getelementptr inbounds float, float* %446, i64 1, !dbg !6048
  store float %445, float* %arrayidx470, align 4, !dbg !6048
  %447 = load float*, float** %_b465, align 8, !dbg !6048
  %arrayidx471 = getelementptr inbounds float, float* %447, i64 2, !dbg !6048
  %448 = load float, float* %arrayidx471, align 4, !dbg !6048
  %449 = load float*, float** %_a464, align 8, !dbg !6048
  %arrayidx472 = getelementptr inbounds float, float* %449, i64 2, !dbg !6048
  store float %448, float* %arrayidx472, align 4, !dbg !6048
  br label %if.end473, !dbg !6050

if.end473:                                        ; preds = %if.then463, %for.end458
  %450 = load float*, float** %no427, align 8, !dbg !6051
  call void @Normalize(float* %450), !dbg !6052
  store i32 0, i32* %i, align 4, !dbg !6053
  br label %for.cond474, !dbg !6055

for.cond474:                                      ; preds = %for.inc496, %if.end473
  %451 = load i32, i32* %i, align 4, !dbg !6056
  %452 = load %struct.CCGVert*, %struct.CCGVert** %v, align 8, !dbg !6058
  %numFaces475 = getelementptr inbounds %struct.CCGVert, %struct.CCGVert* %452, i32 0, i32 3, !dbg !6059
  %453 = load i16, i16* %numFaces475, align 2, !dbg !6059
  %conv476 = sext i16 %453 to i32, !dbg !6058
  %cmp477 = icmp slt i32 %451, %conv476, !dbg !6060
  br i1 %cmp477, label %for.body479, label %for.end498, !dbg !6061

for.body479:                                      ; preds = %for.cond474
  call void @llvm.dbg.declare(metadata %struct.CCGFace** %f480, metadata !6062, metadata !DIExpression()), !dbg !6064
  %454 = load %struct.CCGVert*, %struct.CCGVert** %v, align 8, !dbg !6065
  %faces481 = getelementptr inbounds %struct.CCGVert, %struct.CCGVert* %454, i32 0, i32 7, !dbg !6066
  %455 = load %struct.CCGFace**, %struct.CCGFace*** %faces481, align 8, !dbg !6066
  %456 = load i32, i32* %i, align 4, !dbg !6067
  %idxprom482 = sext i32 %456 to i64, !dbg !6065
  %arrayidx483 = getelementptr inbounds %struct.CCGFace*, %struct.CCGFace** %455, i64 %idxprom482, !dbg !6065
  %457 = load %struct.CCGFace*, %struct.CCGFace** %arrayidx483, align 8, !dbg !6065
  store %struct.CCGFace* %457, %struct.CCGFace** %f480, align 8, !dbg !6064
  call void @llvm.dbg.declare(metadata float** %_a484, metadata !6068, metadata !DIExpression()), !dbg !6070
  %458 = load %struct.CCGFace*, %struct.CCGFace** %f480, align 8, !dbg !6070
  %459 = load i32, i32* %lvl, align 4, !dbg !6070
  %460 = load %struct.CCGFace*, %struct.CCGFace** %f480, align 8, !dbg !6070
  %461 = load %struct.CCGVert*, %struct.CCGVert** %v, align 8, !dbg !6070
  %call485 = call i32 @_face_getVertIndex(%struct.CCGFace* %460, %struct.CCGVert* %461), !dbg !6070
  %462 = load i32, i32* %gridSize, align 4, !dbg !6070
  %sub486 = sub nsw i32 %462, 1, !dbg !6070
  %463 = load i32, i32* %gridSize, align 4, !dbg !6070
  %sub487 = sub nsw i32 %463, 1, !dbg !6070
  %464 = load i32, i32* %subdivLevels, align 4, !dbg !6070
  %465 = load i32, i32* %vertDataSize, align 4, !dbg !6070
  %466 = load i32, i32* %normalDataOffset, align 4, !dbg !6070
  %call488 = call float* @_face_getIFNo(%struct.CCGFace* %458, i32 %459, i32 %call485, i32 %sub486, i32 %sub487, i32 %464, i32 %465, i32 %466), !dbg !6070
  store float* %call488, float** %_a484, align 8, !dbg !6070
  call void @llvm.dbg.declare(metadata float** %_b489, metadata !6071, metadata !DIExpression()), !dbg !6070
  %467 = load float*, float** %no427, align 8, !dbg !6070
  store float* %467, float** %_b489, align 8, !dbg !6070
  %468 = load float*, float** %_b489, align 8, !dbg !6070
  %arrayidx490 = getelementptr inbounds float, float* %468, i64 0, !dbg !6070
  %469 = load float, float* %arrayidx490, align 4, !dbg !6070
  %470 = load float*, float** %_a484, align 8, !dbg !6070
  %arrayidx491 = getelementptr inbounds float, float* %470, i64 0, !dbg !6070
  store float %469, float* %arrayidx491, align 4, !dbg !6070
  %471 = load float*, float** %_b489, align 8, !dbg !6070
  %arrayidx492 = getelementptr inbounds float, float* %471, i64 1, !dbg !6070
  %472 = load float, float* %arrayidx492, align 4, !dbg !6070
  %473 = load float*, float** %_a484, align 8, !dbg !6070
  %arrayidx493 = getelementptr inbounds float, float* %473, i64 1, !dbg !6070
  store float %472, float* %arrayidx493, align 4, !dbg !6070
  %474 = load float*, float** %_b489, align 8, !dbg !6070
  %arrayidx494 = getelementptr inbounds float, float* %474, i64 2, !dbg !6070
  %475 = load float, float* %arrayidx494, align 4, !dbg !6070
  %476 = load float*, float** %_a484, align 8, !dbg !6070
  %arrayidx495 = getelementptr inbounds float, float* %476, i64 2, !dbg !6070
  store float %475, float* %arrayidx495, align 4, !dbg !6070
  br label %for.inc496, !dbg !6072

for.inc496:                                       ; preds = %for.body479
  %477 = load i32, i32* %i, align 4, !dbg !6073
  %inc497 = add nsw i32 %477, 1, !dbg !6073
  store i32 %inc497, i32* %i, align 4, !dbg !6073
  br label %for.cond474, !dbg !6074, !llvm.loop !6075

for.end498:                                       ; preds = %for.cond474
  br label %for.inc499, !dbg !6077

for.inc499:                                       ; preds = %for.end498
  %478 = load i32, i32* %ptrIdx, align 4, !dbg !6078
  %inc500 = add nsw i32 %478, 1, !dbg !6078
  store i32 %inc500, i32* %ptrIdx, align 4, !dbg !6078
  br label %for.cond421, !dbg !6079, !llvm.loop !6080

for.end501:                                       ; preds = %for.cond421
  store i32 0, i32* %ptrIdx, align 4, !dbg !6082
  br label %for.cond502, !dbg !6084

for.cond502:                                      ; preds = %for.inc592, %for.end501
  %479 = load i32, i32* %ptrIdx, align 4, !dbg !6085
  %480 = load i32, i32* %numEffectedE.addr, align 4, !dbg !6087
  %cmp503 = icmp slt i32 %479, %480, !dbg !6088
  br i1 %cmp503, label %for.body505, label %for.end594, !dbg !6089

for.body505:                                      ; preds = %for.cond502
  call void @llvm.dbg.declare(metadata %struct.CCGEdge** %e, metadata !6090, metadata !DIExpression()), !dbg !6092
  %481 = load %struct.CCGEdge**, %struct.CCGEdge*** %effectedE.addr, align 8, !dbg !6093
  %482 = load i32, i32* %ptrIdx, align 4, !dbg !6094
  %idxprom506 = sext i32 %482 to i64, !dbg !6093
  %arrayidx507 = getelementptr inbounds %struct.CCGEdge*, %struct.CCGEdge** %481, i64 %idxprom506, !dbg !6093
  %483 = load %struct.CCGEdge*, %struct.CCGEdge** %arrayidx507, align 8, !dbg !6093
  store %struct.CCGEdge* %483, %struct.CCGEdge** %e, align 8, !dbg !6092
  %484 = load %struct.CCGEdge*, %struct.CCGEdge** %e, align 8, !dbg !6095
  %numFaces508 = getelementptr inbounds %struct.CCGEdge, %struct.CCGEdge* %484, i32 0, i32 2, !dbg !6097
  %485 = load i16, i16* %numFaces508, align 8, !dbg !6097
  %tobool509 = icmp ne i16 %485, 0, !dbg !6095
  br i1 %tobool509, label %if.then510, label %if.end591, !dbg !6098

if.then510:                                       ; preds = %for.body505
  call void @llvm.dbg.declare(metadata %struct.CCGFace** %fLast, metadata !6099, metadata !DIExpression()), !dbg !6101
  %486 = load %struct.CCGEdge*, %struct.CCGEdge** %e, align 8, !dbg !6102
  %faces511 = getelementptr inbounds %struct.CCGEdge, %struct.CCGEdge* %486, i32 0, i32 7, !dbg !6103
  %487 = load %struct.CCGFace**, %struct.CCGFace*** %faces511, align 8, !dbg !6103
  %488 = load %struct.CCGEdge*, %struct.CCGEdge** %e, align 8, !dbg !6104
  %numFaces512 = getelementptr inbounds %struct.CCGEdge, %struct.CCGEdge* %488, i32 0, i32 2, !dbg !6105
  %489 = load i16, i16* %numFaces512, align 8, !dbg !6105
  %conv513 = sext i16 %489 to i32, !dbg !6104
  %sub514 = sub nsw i32 %conv513, 1, !dbg !6106
  %idxprom515 = sext i32 %sub514 to i64, !dbg !6102
  %arrayidx516 = getelementptr inbounds %struct.CCGFace*, %struct.CCGFace** %487, i64 %idxprom515, !dbg !6102
  %490 = load %struct.CCGFace*, %struct.CCGFace** %arrayidx516, align 8, !dbg !6102
  store %struct.CCGFace* %490, %struct.CCGFace** %fLast, align 8, !dbg !6101
  call void @llvm.dbg.declare(metadata i32* %x517, metadata !6107, metadata !DIExpression()), !dbg !6108
  store i32 0, i32* %i, align 4, !dbg !6109
  br label %for.cond518, !dbg !6111

for.cond518:                                      ; preds = %for.inc552, %if.then510
  %491 = load i32, i32* %i, align 4, !dbg !6112
  %492 = load %struct.CCGEdge*, %struct.CCGEdge** %e, align 8, !dbg !6114
  %numFaces519 = getelementptr inbounds %struct.CCGEdge, %struct.CCGEdge* %492, i32 0, i32 2, !dbg !6115
  %493 = load i16, i16* %numFaces519, align 8, !dbg !6115
  %conv520 = sext i16 %493 to i32, !dbg !6114
  %sub521 = sub nsw i32 %conv520, 1, !dbg !6116
  %cmp522 = icmp slt i32 %491, %sub521, !dbg !6117
  br i1 %cmp522, label %for.body524, label %for.end554, !dbg !6118

for.body524:                                      ; preds = %for.cond518
  call void @llvm.dbg.declare(metadata %struct.CCGFace** %f525, metadata !6119, metadata !DIExpression()), !dbg !6121
  %494 = load %struct.CCGEdge*, %struct.CCGEdge** %e, align 8, !dbg !6122
  %faces526 = getelementptr inbounds %struct.CCGEdge, %struct.CCGEdge* %494, i32 0, i32 7, !dbg !6123
  %495 = load %struct.CCGFace**, %struct.CCGFace*** %faces526, align 8, !dbg !6123
  %496 = load i32, i32* %i, align 4, !dbg !6124
  %idxprom527 = sext i32 %496 to i64, !dbg !6122
  %arrayidx528 = getelementptr inbounds %struct.CCGFace*, %struct.CCGFace** %495, i64 %idxprom527, !dbg !6122
  %497 = load %struct.CCGFace*, %struct.CCGFace** %arrayidx528, align 8, !dbg !6122
  store %struct.CCGFace* %497, %struct.CCGFace** %f525, align 8, !dbg !6121
  call void @llvm.dbg.declare(metadata i32* %f_ed_idx, metadata !6125, metadata !DIExpression()), !dbg !6127
  %498 = load %struct.CCGFace*, %struct.CCGFace** %f525, align 8, !dbg !6128
  %499 = load %struct.CCGEdge*, %struct.CCGEdge** %e, align 8, !dbg !6129
  %call529 = call i32 @_face_getEdgeIndex(%struct.CCGFace* %498, %struct.CCGEdge* %499), !dbg !6130
  store i32 %call529, i32* %f_ed_idx, align 4, !dbg !6127
  call void @llvm.dbg.declare(metadata i32* %f_ed_idx_last, metadata !6131, metadata !DIExpression()), !dbg !6132
  %500 = load %struct.CCGFace*, %struct.CCGFace** %fLast, align 8, !dbg !6133
  %501 = load %struct.CCGEdge*, %struct.CCGEdge** %e, align 8, !dbg !6134
  %call530 = call i32 @_face_getEdgeIndex(%struct.CCGFace* %500, %struct.CCGEdge* %501), !dbg !6135
  store i32 %call530, i32* %f_ed_idx_last, align 4, !dbg !6132
  store i32 1, i32* %x517, align 4, !dbg !6136
  br label %for.cond531, !dbg !6138

for.cond531:                                      ; preds = %for.inc549, %for.body524
  %502 = load i32, i32* %x517, align 4, !dbg !6139
  %503 = load i32, i32* %edgeSize, align 4, !dbg !6141
  %sub532 = sub nsw i32 %503, 1, !dbg !6142
  %cmp533 = icmp slt i32 %502, %sub532, !dbg !6143
  br i1 %cmp533, label %for.body535, label %for.end551, !dbg !6144

for.body535:                                      ; preds = %for.cond531
  call void @llvm.dbg.declare(metadata float** %_a536, metadata !6145, metadata !DIExpression()), !dbg !6148
  %504 = load %struct.CCGFace*, %struct.CCGFace** %fLast, align 8, !dbg !6148
  %505 = load %struct.CCGEdge*, %struct.CCGEdge** %e, align 8, !dbg !6148
  %506 = load i32, i32* %f_ed_idx_last, align 4, !dbg !6148
  %507 = load i32, i32* %lvl, align 4, !dbg !6148
  %508 = load i32, i32* %x517, align 4, !dbg !6148
  %509 = load i32, i32* %subdivLevels, align 4, !dbg !6148
  %510 = load i32, i32* %vertDataSize, align 4, !dbg !6148
  %511 = load i32, i32* %normalDataOffset, align 4, !dbg !6148
  %call537 = call float* @_face_getIFNoEdge(%struct.CCGFace* %504, %struct.CCGEdge* %505, i32 %506, i32 %507, i32 %508, i32 0, i32 %509, i32 %510, i32 %511), !dbg !6148
  store float* %call537, float** %_a536, align 8, !dbg !6148
  call void @llvm.dbg.declare(metadata float** %_b538, metadata !6149, metadata !DIExpression()), !dbg !6148
  %512 = load %struct.CCGFace*, %struct.CCGFace** %f525, align 8, !dbg !6148
  %513 = load %struct.CCGEdge*, %struct.CCGEdge** %e, align 8, !dbg !6148
  %514 = load i32, i32* %f_ed_idx, align 4, !dbg !6148
  %515 = load i32, i32* %lvl, align 4, !dbg !6148
  %516 = load i32, i32* %x517, align 4, !dbg !6148
  %517 = load i32, i32* %subdivLevels, align 4, !dbg !6148
  %518 = load i32, i32* %vertDataSize, align 4, !dbg !6148
  %519 = load i32, i32* %normalDataOffset, align 4, !dbg !6148
  %call539 = call float* @_face_getIFNoEdge(%struct.CCGFace* %512, %struct.CCGEdge* %513, i32 %514, i32 %515, i32 %516, i32 0, i32 %517, i32 %518, i32 %519), !dbg !6148
  store float* %call539, float** %_b538, align 8, !dbg !6148
  %520 = load float*, float** %_b538, align 8, !dbg !6148
  %arrayidx540 = getelementptr inbounds float, float* %520, i64 0, !dbg !6148
  %521 = load float, float* %arrayidx540, align 4, !dbg !6148
  %522 = load float*, float** %_a536, align 8, !dbg !6148
  %arrayidx541 = getelementptr inbounds float, float* %522, i64 0, !dbg !6148
  %523 = load float, float* %arrayidx541, align 4, !dbg !6148
  %add542 = fadd float %523, %521, !dbg !6148
  store float %add542, float* %arrayidx541, align 4, !dbg !6148
  %524 = load float*, float** %_b538, align 8, !dbg !6148
  %arrayidx543 = getelementptr inbounds float, float* %524, i64 1, !dbg !6148
  %525 = load float, float* %arrayidx543, align 4, !dbg !6148
  %526 = load float*, float** %_a536, align 8, !dbg !6148
  %arrayidx544 = getelementptr inbounds float, float* %526, i64 1, !dbg !6148
  %527 = load float, float* %arrayidx544, align 4, !dbg !6148
  %add545 = fadd float %527, %525, !dbg !6148
  store float %add545, float* %arrayidx544, align 4, !dbg !6148
  %528 = load float*, float** %_b538, align 8, !dbg !6148
  %arrayidx546 = getelementptr inbounds float, float* %528, i64 2, !dbg !6148
  %529 = load float, float* %arrayidx546, align 4, !dbg !6148
  %530 = load float*, float** %_a536, align 8, !dbg !6148
  %arrayidx547 = getelementptr inbounds float, float* %530, i64 2, !dbg !6148
  %531 = load float, float* %arrayidx547, align 4, !dbg !6148
  %add548 = fadd float %531, %529, !dbg !6148
  store float %add548, float* %arrayidx547, align 4, !dbg !6148
  br label %for.inc549, !dbg !6150

for.inc549:                                       ; preds = %for.body535
  %532 = load i32, i32* %x517, align 4, !dbg !6151
  %inc550 = add nsw i32 %532, 1, !dbg !6151
  store i32 %inc550, i32* %x517, align 4, !dbg !6151
  br label %for.cond531, !dbg !6152, !llvm.loop !6153

for.end551:                                       ; preds = %for.cond531
  br label %for.inc552, !dbg !6155

for.inc552:                                       ; preds = %for.end551
  %533 = load i32, i32* %i, align 4, !dbg !6156
  %inc553 = add nsw i32 %533, 1, !dbg !6156
  store i32 %inc553, i32* %i, align 4, !dbg !6156
  br label %for.cond518, !dbg !6157, !llvm.loop !6158

for.end554:                                       ; preds = %for.cond518
  store i32 0, i32* %i, align 4, !dbg !6160
  br label %for.cond555, !dbg !6162

for.cond555:                                      ; preds = %for.inc588, %for.end554
  %534 = load i32, i32* %i, align 4, !dbg !6163
  %535 = load %struct.CCGEdge*, %struct.CCGEdge** %e, align 8, !dbg !6165
  %numFaces556 = getelementptr inbounds %struct.CCGEdge, %struct.CCGEdge* %535, i32 0, i32 2, !dbg !6166
  %536 = load i16, i16* %numFaces556, align 8, !dbg !6166
  %conv557 = sext i16 %536 to i32, !dbg !6165
  %sub558 = sub nsw i32 %conv557, 1, !dbg !6167
  %cmp559 = icmp slt i32 %534, %sub558, !dbg !6168
  br i1 %cmp559, label %for.body561, label %for.end590, !dbg !6169

for.body561:                                      ; preds = %for.cond555
  call void @llvm.dbg.declare(metadata %struct.CCGFace** %f562, metadata !6170, metadata !DIExpression()), !dbg !6172
  %537 = load %struct.CCGEdge*, %struct.CCGEdge** %e, align 8, !dbg !6173
  %faces563 = getelementptr inbounds %struct.CCGEdge, %struct.CCGEdge* %537, i32 0, i32 7, !dbg !6174
  %538 = load %struct.CCGFace**, %struct.CCGFace*** %faces563, align 8, !dbg !6174
  %539 = load i32, i32* %i, align 4, !dbg !6175
  %idxprom564 = sext i32 %539 to i64, !dbg !6173
  %arrayidx565 = getelementptr inbounds %struct.CCGFace*, %struct.CCGFace** %538, i64 %idxprom564, !dbg !6173
  %540 = load %struct.CCGFace*, %struct.CCGFace** %arrayidx565, align 8, !dbg !6173
  store %struct.CCGFace* %540, %struct.CCGFace** %f562, align 8, !dbg !6172
  call void @llvm.dbg.declare(metadata i32* %f_ed_idx566, metadata !6176, metadata !DIExpression()), !dbg !6177
  %541 = load %struct.CCGFace*, %struct.CCGFace** %f562, align 8, !dbg !6178
  %542 = load %struct.CCGEdge*, %struct.CCGEdge** %e, align 8, !dbg !6179
  %call567 = call i32 @_face_getEdgeIndex(%struct.CCGFace* %541, %struct.CCGEdge* %542), !dbg !6180
  store i32 %call567, i32* %f_ed_idx566, align 4, !dbg !6177
  call void @llvm.dbg.declare(metadata i32* %f_ed_idx_last568, metadata !6181, metadata !DIExpression()), !dbg !6182
  %543 = load %struct.CCGFace*, %struct.CCGFace** %fLast, align 8, !dbg !6183
  %544 = load %struct.CCGEdge*, %struct.CCGEdge** %e, align 8, !dbg !6184
  %call569 = call i32 @_face_getEdgeIndex(%struct.CCGFace* %543, %struct.CCGEdge* %544), !dbg !6185
  store i32 %call569, i32* %f_ed_idx_last568, align 4, !dbg !6182
  store i32 1, i32* %x517, align 4, !dbg !6186
  br label %for.cond570, !dbg !6188

for.cond570:                                      ; preds = %for.inc585, %for.body561
  %545 = load i32, i32* %x517, align 4, !dbg !6189
  %546 = load i32, i32* %edgeSize, align 4, !dbg !6191
  %sub571 = sub nsw i32 %546, 1, !dbg !6192
  %cmp572 = icmp slt i32 %545, %sub571, !dbg !6193
  br i1 %cmp572, label %for.body574, label %for.end587, !dbg !6194

for.body574:                                      ; preds = %for.cond570
  call void @llvm.dbg.declare(metadata float** %_a575, metadata !6195, metadata !DIExpression()), !dbg !6198
  %547 = load %struct.CCGFace*, %struct.CCGFace** %f562, align 8, !dbg !6198
  %548 = load %struct.CCGEdge*, %struct.CCGEdge** %e, align 8, !dbg !6198
  %549 = load i32, i32* %f_ed_idx566, align 4, !dbg !6198
  %550 = load i32, i32* %lvl, align 4, !dbg !6198
  %551 = load i32, i32* %x517, align 4, !dbg !6198
  %552 = load i32, i32* %subdivLevels, align 4, !dbg !6198
  %553 = load i32, i32* %vertDataSize, align 4, !dbg !6198
  %554 = load i32, i32* %normalDataOffset, align 4, !dbg !6198
  %call576 = call float* @_face_getIFNoEdge(%struct.CCGFace* %547, %struct.CCGEdge* %548, i32 %549, i32 %550, i32 %551, i32 0, i32 %552, i32 %553, i32 %554), !dbg !6198
  store float* %call576, float** %_a575, align 8, !dbg !6198
  call void @llvm.dbg.declare(metadata float** %_b577, metadata !6199, metadata !DIExpression()), !dbg !6198
  %555 = load %struct.CCGFace*, %struct.CCGFace** %fLast, align 8, !dbg !6198
  %556 = load %struct.CCGEdge*, %struct.CCGEdge** %e, align 8, !dbg !6198
  %557 = load i32, i32* %f_ed_idx_last568, align 4, !dbg !6198
  %558 = load i32, i32* %lvl, align 4, !dbg !6198
  %559 = load i32, i32* %x517, align 4, !dbg !6198
  %560 = load i32, i32* %subdivLevels, align 4, !dbg !6198
  %561 = load i32, i32* %vertDataSize, align 4, !dbg !6198
  %562 = load i32, i32* %normalDataOffset, align 4, !dbg !6198
  %call578 = call float* @_face_getIFNoEdge(%struct.CCGFace* %555, %struct.CCGEdge* %556, i32 %557, i32 %558, i32 %559, i32 0, i32 %560, i32 %561, i32 %562), !dbg !6198
  store float* %call578, float** %_b577, align 8, !dbg !6198
  %563 = load float*, float** %_b577, align 8, !dbg !6198
  %arrayidx579 = getelementptr inbounds float, float* %563, i64 0, !dbg !6198
  %564 = load float, float* %arrayidx579, align 4, !dbg !6198
  %565 = load float*, float** %_a575, align 8, !dbg !6198
  %arrayidx580 = getelementptr inbounds float, float* %565, i64 0, !dbg !6198
  store float %564, float* %arrayidx580, align 4, !dbg !6198
  %566 = load float*, float** %_b577, align 8, !dbg !6198
  %arrayidx581 = getelementptr inbounds float, float* %566, i64 1, !dbg !6198
  %567 = load float, float* %arrayidx581, align 4, !dbg !6198
  %568 = load float*, float** %_a575, align 8, !dbg !6198
  %arrayidx582 = getelementptr inbounds float, float* %568, i64 1, !dbg !6198
  store float %567, float* %arrayidx582, align 4, !dbg !6198
  %569 = load float*, float** %_b577, align 8, !dbg !6198
  %arrayidx583 = getelementptr inbounds float, float* %569, i64 2, !dbg !6198
  %570 = load float, float* %arrayidx583, align 4, !dbg !6198
  %571 = load float*, float** %_a575, align 8, !dbg !6198
  %arrayidx584 = getelementptr inbounds float, float* %571, i64 2, !dbg !6198
  store float %570, float* %arrayidx584, align 4, !dbg !6198
  br label %for.inc585, !dbg !6200

for.inc585:                                       ; preds = %for.body574
  %572 = load i32, i32* %x517, align 4, !dbg !6201
  %inc586 = add nsw i32 %572, 1, !dbg !6201
  store i32 %inc586, i32* %x517, align 4, !dbg !6201
  br label %for.cond570, !dbg !6202, !llvm.loop !6203

for.end587:                                       ; preds = %for.cond570
  br label %for.inc588, !dbg !6205

for.inc588:                                       ; preds = %for.end587
  %573 = load i32, i32* %i, align 4, !dbg !6206
  %inc589 = add nsw i32 %573, 1, !dbg !6206
  store i32 %inc589, i32* %i, align 4, !dbg !6206
  br label %for.cond555, !dbg !6207, !llvm.loop !6208

for.end590:                                       ; preds = %for.cond555
  br label %if.end591, !dbg !6210

if.end591:                                        ; preds = %for.end590, %for.body505
  br label %for.inc592, !dbg !6211

for.inc592:                                       ; preds = %if.end591
  %574 = load i32, i32* %ptrIdx, align 4, !dbg !6212
  %inc593 = add nsw i32 %574, 1, !dbg !6212
  store i32 %inc593, i32* %ptrIdx, align 4, !dbg !6212
  br label %for.cond502, !dbg !6213, !llvm.loop !6214

for.end594:                                       ; preds = %for.cond502
  store i32 0, i32* %ptrIdx, align 4, !dbg !6216
  br label %for.cond595, !dbg !6218

for.cond595:                                      ; preds = %for.inc675, %for.end594
  %575 = load i32, i32* %ptrIdx, align 4, !dbg !6219
  %576 = load i32, i32* %numEffectedF.addr, align 4, !dbg !6221
  %cmp596 = icmp slt i32 %575, %576, !dbg !6222
  br i1 %cmp596, label %for.body598, label %for.end677, !dbg !6223

for.body598:                                      ; preds = %for.cond595
  call void @llvm.dbg.declare(metadata %struct.CCGFace** %f599, metadata !6224, metadata !DIExpression()), !dbg !6226
  %577 = load %struct.CCGFace**, %struct.CCGFace*** %effectedF.addr, align 8, !dbg !6227
  %578 = load i32, i32* %ptrIdx, align 4, !dbg !6228
  %idxprom600 = sext i32 %578 to i64, !dbg !6227
  %arrayidx601 = getelementptr inbounds %struct.CCGFace*, %struct.CCGFace** %577, i64 %idxprom600, !dbg !6227
  %579 = load %struct.CCGFace*, %struct.CCGFace** %arrayidx601, align 8, !dbg !6227
  store %struct.CCGFace* %579, %struct.CCGFace** %f599, align 8, !dbg !6226
  call void @llvm.dbg.declare(metadata i32* %S602, metadata !6229, metadata !DIExpression()), !dbg !6230
  call void @llvm.dbg.declare(metadata i32* %x603, metadata !6231, metadata !DIExpression()), !dbg !6232
  call void @llvm.dbg.declare(metadata i32* %y604, metadata !6233, metadata !DIExpression()), !dbg !6234
  store i32 0, i32* %S602, align 4, !dbg !6235
  br label %for.cond605, !dbg !6237

for.cond605:                                      ; preds = %for.inc627, %for.body598
  %580 = load i32, i32* %S602, align 4, !dbg !6238
  %581 = load %struct.CCGFace*, %struct.CCGFace** %f599, align 8, !dbg !6240
  %numVerts606 = getelementptr inbounds %struct.CCGFace, %struct.CCGFace* %581, i32 0, i32 2, !dbg !6241
  %582 = load i16, i16* %numVerts606, align 8, !dbg !6241
  %conv607 = sext i16 %582 to i32, !dbg !6240
  %cmp608 = icmp slt i32 %580, %conv607, !dbg !6242
  br i1 %cmp608, label %for.body610, label %for.end629, !dbg !6243

for.body610:                                      ; preds = %for.cond605
  call void @llvm.dbg.declare(metadata float** %_a611, metadata !6244, metadata !DIExpression()), !dbg !6247
  %583 = load %struct.CCGFace*, %struct.CCGFace** %f599, align 8, !dbg !6247
  %584 = load i32, i32* %lvl, align 4, !dbg !6247
  %585 = load i32, i32* %S602, align 4, !dbg !6247
  %add612 = add nsw i32 %585, 1, !dbg !6247
  %586 = load %struct.CCGFace*, %struct.CCGFace** %f599, align 8, !dbg !6247
  %numVerts613 = getelementptr inbounds %struct.CCGFace, %struct.CCGFace* %586, i32 0, i32 2, !dbg !6247
  %587 = load i16, i16* %numVerts613, align 8, !dbg !6247
  %conv614 = sext i16 %587 to i32, !dbg !6247
  %rem615 = srem i32 %add612, %conv614, !dbg !6247
  %588 = load i32, i32* %gridSize, align 4, !dbg !6247
  %sub616 = sub nsw i32 %588, 1, !dbg !6247
  %589 = load i32, i32* %subdivLevels, align 4, !dbg !6247
  %590 = load i32, i32* %vertDataSize, align 4, !dbg !6247
  %591 = load i32, i32* %normalDataOffset, align 4, !dbg !6247
  %call617 = call float* @_face_getIFNo(%struct.CCGFace* %583, i32 %584, i32 %rem615, i32 0, i32 %sub616, i32 %589, i32 %590, i32 %591), !dbg !6247
  store float* %call617, float** %_a611, align 8, !dbg !6247
  call void @llvm.dbg.declare(metadata float** %_b618, metadata !6248, metadata !DIExpression()), !dbg !6247
  %592 = load %struct.CCGFace*, %struct.CCGFace** %f599, align 8, !dbg !6247
  %593 = load i32, i32* %lvl, align 4, !dbg !6247
  %594 = load i32, i32* %S602, align 4, !dbg !6247
  %595 = load i32, i32* %gridSize, align 4, !dbg !6247
  %sub619 = sub nsw i32 %595, 1, !dbg !6247
  %596 = load i32, i32* %subdivLevels, align 4, !dbg !6247
  %597 = load i32, i32* %vertDataSize, align 4, !dbg !6247
  %598 = load i32, i32* %normalDataOffset, align 4, !dbg !6247
  %call620 = call float* @_face_getIFNo(%struct.CCGFace* %592, i32 %593, i32 %594, i32 %sub619, i32 0, i32 %596, i32 %597, i32 %598), !dbg !6247
  store float* %call620, float** %_b618, align 8, !dbg !6247
  %599 = load float*, float** %_b618, align 8, !dbg !6247
  %arrayidx621 = getelementptr inbounds float, float* %599, i64 0, !dbg !6247
  %600 = load float, float* %arrayidx621, align 4, !dbg !6247
  %601 = load float*, float** %_a611, align 8, !dbg !6247
  %arrayidx622 = getelementptr inbounds float, float* %601, i64 0, !dbg !6247
  store float %600, float* %arrayidx622, align 4, !dbg !6247
  %602 = load float*, float** %_b618, align 8, !dbg !6247
  %arrayidx623 = getelementptr inbounds float, float* %602, i64 1, !dbg !6247
  %603 = load float, float* %arrayidx623, align 4, !dbg !6247
  %604 = load float*, float** %_a611, align 8, !dbg !6247
  %arrayidx624 = getelementptr inbounds float, float* %604, i64 1, !dbg !6247
  store float %603, float* %arrayidx624, align 4, !dbg !6247
  %605 = load float*, float** %_b618, align 8, !dbg !6247
  %arrayidx625 = getelementptr inbounds float, float* %605, i64 2, !dbg !6247
  %606 = load float, float* %arrayidx625, align 4, !dbg !6247
  %607 = load float*, float** %_a611, align 8, !dbg !6247
  %arrayidx626 = getelementptr inbounds float, float* %607, i64 2, !dbg !6247
  store float %606, float* %arrayidx626, align 4, !dbg !6247
  br label %for.inc627, !dbg !6249

for.inc627:                                       ; preds = %for.body610
  %608 = load i32, i32* %S602, align 4, !dbg !6250
  %inc628 = add nsw i32 %608, 1, !dbg !6250
  store i32 %inc628, i32* %S602, align 4, !dbg !6250
  br label %for.cond605, !dbg !6251, !llvm.loop !6252

for.end629:                                       ; preds = %for.cond605
  store i32 0, i32* %S602, align 4, !dbg !6254
  br label %for.cond630, !dbg !6256

for.cond630:                                      ; preds = %for.inc672, %for.end629
  %609 = load i32, i32* %S602, align 4, !dbg !6257
  %610 = load %struct.CCGFace*, %struct.CCGFace** %f599, align 8, !dbg !6259
  %numVerts631 = getelementptr inbounds %struct.CCGFace, %struct.CCGFace* %610, i32 0, i32 2, !dbg !6260
  %611 = load i16, i16* %numVerts631, align 8, !dbg !6260
  %conv632 = sext i16 %611 to i32, !dbg !6259
  %cmp633 = icmp slt i32 %609, %conv632, !dbg !6261
  br i1 %cmp633, label %for.body635, label %for.end674, !dbg !6262

for.body635:                                      ; preds = %for.cond630
  store i32 0, i32* %y604, align 4, !dbg !6263
  br label %for.cond636, !dbg !6266

for.cond636:                                      ; preds = %for.inc649, %for.body635
  %612 = load i32, i32* %y604, align 4, !dbg !6267
  %613 = load i32, i32* %gridSize, align 4, !dbg !6269
  %cmp637 = icmp slt i32 %612, %613, !dbg !6270
  br i1 %cmp637, label %for.body639, label %for.end651, !dbg !6271

for.body639:                                      ; preds = %for.cond636
  store i32 0, i32* %x603, align 4, !dbg !6272
  br label %for.cond640, !dbg !6275

for.cond640:                                      ; preds = %for.inc646, %for.body639
  %614 = load i32, i32* %x603, align 4, !dbg !6276
  %615 = load i32, i32* %gridSize, align 4, !dbg !6278
  %cmp641 = icmp slt i32 %614, %615, !dbg !6279
  br i1 %cmp641, label %for.body643, label %for.end648, !dbg !6280

for.body643:                                      ; preds = %for.cond640
  call void @llvm.dbg.declare(metadata float** %no644, metadata !6281, metadata !DIExpression()), !dbg !6283
  %616 = load %struct.CCGFace*, %struct.CCGFace** %f599, align 8, !dbg !6284
  %617 = load i32, i32* %lvl, align 4, !dbg !6284
  %618 = load i32, i32* %S602, align 4, !dbg !6284
  %619 = load i32, i32* %x603, align 4, !dbg !6284
  %620 = load i32, i32* %y604, align 4, !dbg !6284
  %621 = load i32, i32* %subdivLevels, align 4, !dbg !6284
  %622 = load i32, i32* %vertDataSize, align 4, !dbg !6284
  %623 = load i32, i32* %normalDataOffset, align 4, !dbg !6284
  %call645 = call float* @_face_getIFNo(%struct.CCGFace* %616, i32 %617, i32 %618, i32 %619, i32 %620, i32 %621, i32 %622, i32 %623), !dbg !6284
  store float* %call645, float** %no644, align 8, !dbg !6283
  %624 = load float*, float** %no644, align 8, !dbg !6285
  call void @Normalize(float* %624), !dbg !6286
  br label %for.inc646, !dbg !6287

for.inc646:                                       ; preds = %for.body643
  %625 = load i32, i32* %x603, align 4, !dbg !6288
  %inc647 = add nsw i32 %625, 1, !dbg !6288
  store i32 %inc647, i32* %x603, align 4, !dbg !6288
  br label %for.cond640, !dbg !6289, !llvm.loop !6290

for.end648:                                       ; preds = %for.cond640
  br label %for.inc649, !dbg !6292

for.inc649:                                       ; preds = %for.end648
  %626 = load i32, i32* %y604, align 4, !dbg !6293
  %inc650 = add nsw i32 %626, 1, !dbg !6293
  store i32 %inc650, i32* %y604, align 4, !dbg !6293
  br label %for.cond636, !dbg !6294, !llvm.loop !6295

for.end651:                                       ; preds = %for.cond636
  %627 = load %struct.CCGFace*, %struct.CCGFace** %f599, align 8, !dbg !6297
  %call652 = call i8* @FACE_getCenterData(%struct.CCGFace* %627), !dbg !6298
  %628 = load i32, i32* %normalDataOffset, align 4, !dbg !6299
  %idx.ext = sext i32 %628 to i64, !dbg !6300
  %add.ptr = getelementptr inbounds i8, i8* %call652, i64 %idx.ext, !dbg !6300
  %629 = bitcast i8* %add.ptr to float*, !dbg !6301
  %630 = load %struct.CCGFace*, %struct.CCGFace** %f599, align 8, !dbg !6302
  %631 = load i32, i32* %lvl, align 4, !dbg !6302
  %632 = load i32, i32* %S602, align 4, !dbg !6302
  %633 = load i32, i32* %subdivLevels, align 4, !dbg !6302
  %634 = load i32, i32* %vertDataSize, align 4, !dbg !6302
  %635 = load i32, i32* %normalDataOffset, align 4, !dbg !6302
  %call653 = call float* @_face_getIFNo(%struct.CCGFace* %630, i32 %631, i32 %632, i32 0, i32 0, i32 %633, i32 %634, i32 %635), !dbg !6302
  %636 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !6303
  call void @VertDataCopy(float* %629, float* %call653, %struct.CCGSubSurf* %636), !dbg !6304
  store i32 1, i32* %x603, align 4, !dbg !6305
  br label %for.cond654, !dbg !6307

for.cond654:                                      ; preds = %for.inc669, %for.end651
  %637 = load i32, i32* %x603, align 4, !dbg !6308
  %638 = load i32, i32* %gridSize, align 4, !dbg !6310
  %sub655 = sub nsw i32 %638, 1, !dbg !6311
  %cmp656 = icmp slt i32 %637, %sub655, !dbg !6312
  br i1 %cmp656, label %for.body658, label %for.end671, !dbg !6313

for.body658:                                      ; preds = %for.cond654
  call void @llvm.dbg.declare(metadata float** %_a659, metadata !6314, metadata !DIExpression()), !dbg !6316
  %639 = load %struct.CCGFace*, %struct.CCGFace** %f599, align 8, !dbg !6316
  %640 = load i32, i32* %lvl, align 4, !dbg !6316
  %641 = load i32, i32* %S602, align 4, !dbg !6316
  %642 = load i32, i32* %x603, align 4, !dbg !6316
  %643 = load i32, i32* %subdivLevels, align 4, !dbg !6316
  %644 = load i32, i32* %vertDataSize, align 4, !dbg !6316
  %645 = load i32, i32* %normalDataOffset, align 4, !dbg !6316
  %call660 = call i8* @_face_getIENo(%struct.CCGFace* %639, i32 %640, i32 %641, i32 %642, i32 %643, i32 %644, i32 %645), !dbg !6316
  %646 = bitcast i8* %call660 to float*, !dbg !6316
  store float* %646, float** %_a659, align 8, !dbg !6316
  call void @llvm.dbg.declare(metadata float** %_b661, metadata !6317, metadata !DIExpression()), !dbg !6316
  %647 = load %struct.CCGFace*, %struct.CCGFace** %f599, align 8, !dbg !6316
  %648 = load i32, i32* %lvl, align 4, !dbg !6316
  %649 = load i32, i32* %S602, align 4, !dbg !6316
  %650 = load i32, i32* %x603, align 4, !dbg !6316
  %651 = load i32, i32* %subdivLevels, align 4, !dbg !6316
  %652 = load i32, i32* %vertDataSize, align 4, !dbg !6316
  %653 = load i32, i32* %normalDataOffset, align 4, !dbg !6316
  %call662 = call float* @_face_getIFNo(%struct.CCGFace* %647, i32 %648, i32 %649, i32 %650, i32 0, i32 %651, i32 %652, i32 %653), !dbg !6316
  store float* %call662, float** %_b661, align 8, !dbg !6316
  %654 = load float*, float** %_b661, align 8, !dbg !6316
  %arrayidx663 = getelementptr inbounds float, float* %654, i64 0, !dbg !6316
  %655 = load float, float* %arrayidx663, align 4, !dbg !6316
  %656 = load float*, float** %_a659, align 8, !dbg !6316
  %arrayidx664 = getelementptr inbounds float, float* %656, i64 0, !dbg !6316
  store float %655, float* %arrayidx664, align 4, !dbg !6316
  %657 = load float*, float** %_b661, align 8, !dbg !6316
  %arrayidx665 = getelementptr inbounds float, float* %657, i64 1, !dbg !6316
  %658 = load float, float* %arrayidx665, align 4, !dbg !6316
  %659 = load float*, float** %_a659, align 8, !dbg !6316
  %arrayidx666 = getelementptr inbounds float, float* %659, i64 1, !dbg !6316
  store float %658, float* %arrayidx666, align 4, !dbg !6316
  %660 = load float*, float** %_b661, align 8, !dbg !6316
  %arrayidx667 = getelementptr inbounds float, float* %660, i64 2, !dbg !6316
  %661 = load float, float* %arrayidx667, align 4, !dbg !6316
  %662 = load float*, float** %_a659, align 8, !dbg !6316
  %arrayidx668 = getelementptr inbounds float, float* %662, i64 2, !dbg !6316
  store float %661, float* %arrayidx668, align 4, !dbg !6316
  br label %for.inc669, !dbg !6316

for.inc669:                                       ; preds = %for.body658
  %663 = load i32, i32* %x603, align 4, !dbg !6318
  %inc670 = add nsw i32 %663, 1, !dbg !6318
  store i32 %inc670, i32* %x603, align 4, !dbg !6318
  br label %for.cond654, !dbg !6319, !llvm.loop !6320

for.end671:                                       ; preds = %for.cond654
  br label %for.inc672, !dbg !6322

for.inc672:                                       ; preds = %for.end671
  %664 = load i32, i32* %S602, align 4, !dbg !6323
  %inc673 = add nsw i32 %664, 1, !dbg !6323
  store i32 %inc673, i32* %S602, align 4, !dbg !6323
  br label %for.cond630, !dbg !6324, !llvm.loop !6325

for.end674:                                       ; preds = %for.cond630
  br label %for.inc675, !dbg !6327

for.inc675:                                       ; preds = %for.end674
  %665 = load i32, i32* %ptrIdx, align 4, !dbg !6328
  %inc676 = add nsw i32 %665, 1, !dbg !6328
  store i32 %inc676, i32* %ptrIdx, align 4, !dbg !6328
  br label %for.cond595, !dbg !6329, !llvm.loop !6330

for.end677:                                       ; preds = %for.cond595
  store i32 0, i32* %ptrIdx, align 4, !dbg !6332
  br label %for.cond678, !dbg !6334

for.cond678:                                      ; preds = %for.inc732, %for.end677
  %666 = load i32, i32* %ptrIdx, align 4, !dbg !6335
  %667 = load i32, i32* %numEffectedE.addr, align 4, !dbg !6337
  %cmp679 = icmp slt i32 %666, %667, !dbg !6338
  br i1 %cmp679, label %for.body681, label %for.end734, !dbg !6339

for.body681:                                      ; preds = %for.cond678
  call void @llvm.dbg.declare(metadata %struct.CCGEdge** %e682, metadata !6340, metadata !DIExpression()), !dbg !6342
  %668 = load %struct.CCGEdge**, %struct.CCGEdge*** %effectedE.addr, align 8, !dbg !6343
  %669 = load i32, i32* %ptrIdx, align 4, !dbg !6344
  %idxprom683 = sext i32 %669 to i64, !dbg !6343
  %arrayidx684 = getelementptr inbounds %struct.CCGEdge*, %struct.CCGEdge** %668, i64 %idxprom683, !dbg !6343
  %670 = load %struct.CCGEdge*, %struct.CCGEdge** %arrayidx684, align 8, !dbg !6343
  store %struct.CCGEdge* %670, %struct.CCGEdge** %e682, align 8, !dbg !6342
  %671 = load %struct.CCGEdge*, %struct.CCGEdge** %e682, align 8, !dbg !6345
  %numFaces685 = getelementptr inbounds %struct.CCGEdge, %struct.CCGEdge* %671, i32 0, i32 2, !dbg !6347
  %672 = load i16, i16* %numFaces685, align 8, !dbg !6347
  %tobool686 = icmp ne i16 %672, 0, !dbg !6345
  br i1 %tobool686, label %if.then687, label %if.else711, !dbg !6348

if.then687:                                       ; preds = %for.body681
  call void @llvm.dbg.declare(metadata %struct.CCGFace** %f688, metadata !6349, metadata !DIExpression()), !dbg !6351
  %673 = load %struct.CCGEdge*, %struct.CCGEdge** %e682, align 8, !dbg !6352
  %faces689 = getelementptr inbounds %struct.CCGEdge, %struct.CCGEdge* %673, i32 0, i32 7, !dbg !6353
  %674 = load %struct.CCGFace**, %struct.CCGFace*** %faces689, align 8, !dbg !6353
  %arrayidx690 = getelementptr inbounds %struct.CCGFace*, %struct.CCGFace** %674, i64 0, !dbg !6352
  %675 = load %struct.CCGFace*, %struct.CCGFace** %arrayidx690, align 8, !dbg !6352
  store %struct.CCGFace* %675, %struct.CCGFace** %f688, align 8, !dbg !6351
  call void @llvm.dbg.declare(metadata i32* %x691, metadata !6354, metadata !DIExpression()), !dbg !6355
  call void @llvm.dbg.declare(metadata i32* %f_ed_idx692, metadata !6356, metadata !DIExpression()), !dbg !6357
  %676 = load %struct.CCGFace*, %struct.CCGFace** %f688, align 8, !dbg !6358
  %677 = load %struct.CCGEdge*, %struct.CCGEdge** %e682, align 8, !dbg !6359
  %call693 = call i32 @_face_getEdgeIndex(%struct.CCGFace* %676, %struct.CCGEdge* %677), !dbg !6360
  store i32 %call693, i32* %f_ed_idx692, align 4, !dbg !6357
  store i32 0, i32* %x691, align 4, !dbg !6361
  br label %for.cond694, !dbg !6363

for.cond694:                                      ; preds = %for.inc708, %if.then687
  %678 = load i32, i32* %x691, align 4, !dbg !6364
  %679 = load i32, i32* %edgeSize, align 4, !dbg !6366
  %cmp695 = icmp slt i32 %678, %679, !dbg !6367
  br i1 %cmp695, label %for.body697, label %for.end710, !dbg !6368

for.body697:                                      ; preds = %for.cond694
  call void @llvm.dbg.declare(metadata float** %_a698, metadata !6369, metadata !DIExpression()), !dbg !6371
  %680 = load %struct.CCGEdge*, %struct.CCGEdge** %e682, align 8, !dbg !6371
  %681 = load i32, i32* %lvl, align 4, !dbg !6371
  %682 = load i32, i32* %x691, align 4, !dbg !6371
  %683 = load i32, i32* %vertDataSize, align 4, !dbg !6371
  %684 = load i32, i32* %normalDataOffset, align 4, !dbg !6371
  %call699 = call float* @_edge_getNo(%struct.CCGEdge* %680, i32 %681, i32 %682, i32 %683, i32 %684), !dbg !6371
  store float* %call699, float** %_a698, align 8, !dbg !6371
  call void @llvm.dbg.declare(metadata float** %_b700, metadata !6372, metadata !DIExpression()), !dbg !6371
  %685 = load %struct.CCGFace*, %struct.CCGFace** %f688, align 8, !dbg !6371
  %686 = load %struct.CCGEdge*, %struct.CCGEdge** %e682, align 8, !dbg !6371
  %687 = load i32, i32* %f_ed_idx692, align 4, !dbg !6371
  %688 = load i32, i32* %lvl, align 4, !dbg !6371
  %689 = load i32, i32* %x691, align 4, !dbg !6371
  %690 = load i32, i32* %subdivLevels, align 4, !dbg !6371
  %691 = load i32, i32* %vertDataSize, align 4, !dbg !6371
  %692 = load i32, i32* %normalDataOffset, align 4, !dbg !6371
  %call701 = call float* @_face_getIFNoEdge(%struct.CCGFace* %685, %struct.CCGEdge* %686, i32 %687, i32 %688, i32 %689, i32 0, i32 %690, i32 %691, i32 %692), !dbg !6371
  store float* %call701, float** %_b700, align 8, !dbg !6371
  %693 = load float*, float** %_b700, align 8, !dbg !6371
  %arrayidx702 = getelementptr inbounds float, float* %693, i64 0, !dbg !6371
  %694 = load float, float* %arrayidx702, align 4, !dbg !6371
  %695 = load float*, float** %_a698, align 8, !dbg !6371
  %arrayidx703 = getelementptr inbounds float, float* %695, i64 0, !dbg !6371
  store float %694, float* %arrayidx703, align 4, !dbg !6371
  %696 = load float*, float** %_b700, align 8, !dbg !6371
  %arrayidx704 = getelementptr inbounds float, float* %696, i64 1, !dbg !6371
  %697 = load float, float* %arrayidx704, align 4, !dbg !6371
  %698 = load float*, float** %_a698, align 8, !dbg !6371
  %arrayidx705 = getelementptr inbounds float, float* %698, i64 1, !dbg !6371
  store float %697, float* %arrayidx705, align 4, !dbg !6371
  %699 = load float*, float** %_b700, align 8, !dbg !6371
  %arrayidx706 = getelementptr inbounds float, float* %699, i64 2, !dbg !6371
  %700 = load float, float* %arrayidx706, align 4, !dbg !6371
  %701 = load float*, float** %_a698, align 8, !dbg !6371
  %arrayidx707 = getelementptr inbounds float, float* %701, i64 2, !dbg !6371
  store float %700, float* %arrayidx707, align 4, !dbg !6371
  br label %for.inc708, !dbg !6371

for.inc708:                                       ; preds = %for.body697
  %702 = load i32, i32* %x691, align 4, !dbg !6373
  %inc709 = add nsw i32 %702, 1, !dbg !6373
  store i32 %inc709, i32* %x691, align 4, !dbg !6373
  br label %for.cond694, !dbg !6374, !llvm.loop !6375

for.end710:                                       ; preds = %for.cond694
  br label %if.end731, !dbg !6377

if.else711:                                       ; preds = %for.body681
  call void @llvm.dbg.declare(metadata i32* %x712, metadata !6378, metadata !DIExpression()), !dbg !6380
  store i32 0, i32* %x712, align 4, !dbg !6381
  br label %for.cond713, !dbg !6383

for.cond713:                                      ; preds = %for.inc728, %if.else711
  %703 = load i32, i32* %x712, align 4, !dbg !6384
  %704 = load i32, i32* %edgeSize, align 4, !dbg !6386
  %cmp714 = icmp slt i32 %703, %704, !dbg !6387
  br i1 %cmp714, label %for.body716, label %for.end730, !dbg !6388

for.body716:                                      ; preds = %for.cond713
  call void @llvm.dbg.declare(metadata float** %no717, metadata !6389, metadata !DIExpression()), !dbg !6391
  %705 = load %struct.CCGEdge*, %struct.CCGEdge** %e682, align 8, !dbg !6392
  %706 = load i32, i32* %lvl, align 4, !dbg !6392
  %707 = load i32, i32* %x712, align 4, !dbg !6392
  %708 = load i32, i32* %vertDataSize, align 4, !dbg !6392
  %709 = load i32, i32* %normalDataOffset, align 4, !dbg !6392
  %call718 = call float* @_edge_getNo(%struct.CCGEdge* %705, i32 %706, i32 %707, i32 %708, i32 %709), !dbg !6392
  store float* %call718, float** %no717, align 8, !dbg !6391
  call void @llvm.dbg.declare(metadata float** %_a719, metadata !6393, metadata !DIExpression()), !dbg !6395
  %710 = load float*, float** %no717, align 8, !dbg !6395
  store float* %710, float** %_a719, align 8, !dbg !6395
  call void @llvm.dbg.declare(metadata float** %_b720, metadata !6396, metadata !DIExpression()), !dbg !6395
  %711 = load %struct.CCGEdge*, %struct.CCGEdge** %e682, align 8, !dbg !6395
  %712 = load i32, i32* %lvl, align 4, !dbg !6395
  %713 = load i32, i32* %x712, align 4, !dbg !6395
  %714 = load i32, i32* %vertDataSize, align 4, !dbg !6395
  %call721 = call i8* @_edge_getCo(%struct.CCGEdge* %711, i32 %712, i32 %713, i32 %714), !dbg !6395
  %715 = bitcast i8* %call721 to float*, !dbg !6395
  store float* %715, float** %_b720, align 8, !dbg !6395
  %716 = load float*, float** %_b720, align 8, !dbg !6395
  %arrayidx722 = getelementptr inbounds float, float* %716, i64 0, !dbg !6395
  %717 = load float, float* %arrayidx722, align 4, !dbg !6395
  %718 = load float*, float** %_a719, align 8, !dbg !6395
  %arrayidx723 = getelementptr inbounds float, float* %718, i64 0, !dbg !6395
  store float %717, float* %arrayidx723, align 4, !dbg !6395
  %719 = load float*, float** %_b720, align 8, !dbg !6395
  %arrayidx724 = getelementptr inbounds float, float* %719, i64 1, !dbg !6395
  %720 = load float, float* %arrayidx724, align 4, !dbg !6395
  %721 = load float*, float** %_a719, align 8, !dbg !6395
  %arrayidx725 = getelementptr inbounds float, float* %721, i64 1, !dbg !6395
  store float %720, float* %arrayidx725, align 4, !dbg !6395
  %722 = load float*, float** %_b720, align 8, !dbg !6395
  %arrayidx726 = getelementptr inbounds float, float* %722, i64 2, !dbg !6395
  %723 = load float, float* %arrayidx726, align 4, !dbg !6395
  %724 = load float*, float** %_a719, align 8, !dbg !6395
  %arrayidx727 = getelementptr inbounds float, float* %724, i64 2, !dbg !6395
  store float %723, float* %arrayidx727, align 4, !dbg !6395
  %725 = load float*, float** %no717, align 8, !dbg !6397
  call void @Normalize(float* %725), !dbg !6398
  br label %for.inc728, !dbg !6399

for.inc728:                                       ; preds = %for.body716
  %726 = load i32, i32* %x712, align 4, !dbg !6400
  %inc729 = add nsw i32 %726, 1, !dbg !6400
  store i32 %inc729, i32* %x712, align 4, !dbg !6400
  br label %for.cond713, !dbg !6401, !llvm.loop !6402

for.end730:                                       ; preds = %for.cond713
  br label %if.end731

if.end731:                                        ; preds = %for.end730, %for.end710
  br label %for.inc732, !dbg !6404

for.inc732:                                       ; preds = %if.end731
  %727 = load i32, i32* %ptrIdx, align 4, !dbg !6405
  %inc733 = add nsw i32 %727, 1, !dbg !6405
  store i32 %inc733, i32* %ptrIdx, align 4, !dbg !6405
  br label %for.cond678, !dbg !6406, !llvm.loop !6407

for.end734:                                       ; preds = %for.cond678
  ret void, !dbg !6409
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @ccgSubSurf_updateLevels(%struct.CCGSubSurf* %ss, i32 %lvl, %struct.CCGFace** %effectedF, i32 %numEffectedF) #0 !dbg !6410 {
entry:
  %ss.addr = alloca %struct.CCGSubSurf*, align 8
  %lvl.addr = alloca i32, align 4
  %effectedF.addr = alloca %struct.CCGFace**, align 8
  %numEffectedF.addr = alloca i32, align 4
  %effectedV = alloca %struct.CCGVert**, align 8
  %effectedE = alloca %struct.CCGEdge**, align 8
  %numEffectedV = alloca i32, align 4
  %numEffectedE = alloca i32, align 4
  %freeF = alloca i32, align 4
  %i = alloca i32, align 4
  %curLvl = alloca i32, align 4
  %subdivLevels = alloca i32, align 4
  store %struct.CCGSubSurf* %ss, %struct.CCGSubSurf** %ss.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGSubSurf** %ss.addr, metadata !6411, metadata !DIExpression()), !dbg !6412
  store i32 %lvl, i32* %lvl.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %lvl.addr, metadata !6413, metadata !DIExpression()), !dbg !6414
  store %struct.CCGFace** %effectedF, %struct.CCGFace*** %effectedF.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGFace*** %effectedF.addr, metadata !6415, metadata !DIExpression()), !dbg !6416
  store i32 %numEffectedF, i32* %numEffectedF.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %numEffectedF.addr, metadata !6417, metadata !DIExpression()), !dbg !6418
  call void @llvm.dbg.declare(metadata %struct.CCGVert*** %effectedV, metadata !6419, metadata !DIExpression()), !dbg !6420
  call void @llvm.dbg.declare(metadata %struct.CCGEdge*** %effectedE, metadata !6421, metadata !DIExpression()), !dbg !6422
  call void @llvm.dbg.declare(metadata i32* %numEffectedV, metadata !6423, metadata !DIExpression()), !dbg !6424
  call void @llvm.dbg.declare(metadata i32* %numEffectedE, metadata !6425, metadata !DIExpression()), !dbg !6426
  call void @llvm.dbg.declare(metadata i32* %freeF, metadata !6427, metadata !DIExpression()), !dbg !6428
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6429, metadata !DIExpression()), !dbg !6430
  call void @llvm.dbg.declare(metadata i32* %curLvl, metadata !6431, metadata !DIExpression()), !dbg !6432
  call void @llvm.dbg.declare(metadata i32* %subdivLevels, metadata !6433, metadata !DIExpression()), !dbg !6434
  %0 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !6435
  %subdivLevels1 = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %0, i32 0, i32 6, !dbg !6436
  %1 = load i32, i32* %subdivLevels1, align 8, !dbg !6436
  store i32 %1, i32* %subdivLevels, align 4, !dbg !6434
  %2 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !6437
  call void @ccgSubSurf__allFaces(%struct.CCGSubSurf* %2, %struct.CCGFace*** %effectedF.addr, i32* %numEffectedF.addr, i32* %freeF), !dbg !6438
  %3 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !6439
  %4 = load %struct.CCGFace**, %struct.CCGFace*** %effectedF.addr, align 8, !dbg !6440
  %5 = load i32, i32* %numEffectedF.addr, align 4, !dbg !6441
  call void @ccgSubSurf__effectedFaceNeighbours(%struct.CCGSubSurf* %3, %struct.CCGFace** %4, i32 %5, %struct.CCGVert*** %effectedV, i32* %numEffectedV, %struct.CCGEdge*** %effectedE, i32* %numEffectedE), !dbg !6442
  %6 = load i32, i32* %lvl.addr, align 4, !dbg !6443
  store i32 %6, i32* %curLvl, align 4, !dbg !6445
  br label %for.cond, !dbg !6446

for.cond:                                         ; preds = %for.inc, %entry
  %7 = load i32, i32* %curLvl, align 4, !dbg !6447
  %8 = load i32, i32* %subdivLevels, align 4, !dbg !6449
  %cmp = icmp slt i32 %7, %8, !dbg !6450
  br i1 %cmp, label %for.body, label %for.end, !dbg !6451

for.body:                                         ; preds = %for.cond
  %9 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !6452
  %10 = load %struct.CCGVert**, %struct.CCGVert*** %effectedV, align 8, !dbg !6454
  %11 = load %struct.CCGEdge**, %struct.CCGEdge*** %effectedE, align 8, !dbg !6455
  %12 = load %struct.CCGFace**, %struct.CCGFace*** %effectedF.addr, align 8, !dbg !6456
  %13 = load i32, i32* %numEffectedV, align 4, !dbg !6457
  %14 = load i32, i32* %numEffectedE, align 4, !dbg !6458
  %15 = load i32, i32* %numEffectedF.addr, align 4, !dbg !6459
  %16 = load i32, i32* %curLvl, align 4, !dbg !6460
  call void @ccgSubSurf__calcSubdivLevel(%struct.CCGSubSurf* %9, %struct.CCGVert** %10, %struct.CCGEdge** %11, %struct.CCGFace** %12, i32 %13, i32 %14, i32 %15, i32 %16), !dbg !6461
  br label %for.inc, !dbg !6462

for.inc:                                          ; preds = %for.body
  %17 = load i32, i32* %curLvl, align 4, !dbg !6463
  %inc = add nsw i32 %17, 1, !dbg !6463
  store i32 %inc, i32* %curLvl, align 4, !dbg !6463
  br label %for.cond, !dbg !6464, !llvm.loop !6465

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !6467
  br label %for.cond2, !dbg !6469

for.cond2:                                        ; preds = %for.inc5, %for.end
  %18 = load i32, i32* %i, align 4, !dbg !6470
  %19 = load i32, i32* %numEffectedV, align 4, !dbg !6472
  %cmp3 = icmp slt i32 %18, %19, !dbg !6473
  br i1 %cmp3, label %for.body4, label %for.end7, !dbg !6474

for.body4:                                        ; preds = %for.cond2
  %20 = load %struct.CCGVert**, %struct.CCGVert*** %effectedV, align 8, !dbg !6475
  %21 = load i32, i32* %i, align 4, !dbg !6476
  %idxprom = sext i32 %21 to i64, !dbg !6475
  %arrayidx = getelementptr inbounds %struct.CCGVert*, %struct.CCGVert** %20, i64 %idxprom, !dbg !6475
  %22 = load %struct.CCGVert*, %struct.CCGVert** %arrayidx, align 8, !dbg !6475
  %flags = getelementptr inbounds %struct.CCGVert, %struct.CCGVert* %22, i32 0, i32 4, !dbg !6477
  store i16 0, i16* %flags, align 4, !dbg !6478
  br label %for.inc5, !dbg !6475

for.inc5:                                         ; preds = %for.body4
  %23 = load i32, i32* %i, align 4, !dbg !6479
  %inc6 = add nsw i32 %23, 1, !dbg !6479
  store i32 %inc6, i32* %i, align 4, !dbg !6479
  br label %for.cond2, !dbg !6480, !llvm.loop !6481

for.end7:                                         ; preds = %for.cond2
  store i32 0, i32* %i, align 4, !dbg !6483
  br label %for.cond8, !dbg !6485

for.cond8:                                        ; preds = %for.inc14, %for.end7
  %24 = load i32, i32* %i, align 4, !dbg !6486
  %25 = load i32, i32* %numEffectedE, align 4, !dbg !6488
  %cmp9 = icmp slt i32 %24, %25, !dbg !6489
  br i1 %cmp9, label %for.body10, label %for.end16, !dbg !6490

for.body10:                                       ; preds = %for.cond8
  %26 = load %struct.CCGEdge**, %struct.CCGEdge*** %effectedE, align 8, !dbg !6491
  %27 = load i32, i32* %i, align 4, !dbg !6492
  %idxprom11 = sext i32 %27 to i64, !dbg !6491
  %arrayidx12 = getelementptr inbounds %struct.CCGEdge*, %struct.CCGEdge** %26, i64 %idxprom11, !dbg !6491
  %28 = load %struct.CCGEdge*, %struct.CCGEdge** %arrayidx12, align 8, !dbg !6491
  %flags13 = getelementptr inbounds %struct.CCGEdge, %struct.CCGEdge* %28, i32 0, i32 3, !dbg !6493
  store i16 0, i16* %flags13, align 2, !dbg !6494
  br label %for.inc14, !dbg !6491

for.inc14:                                        ; preds = %for.body10
  %29 = load i32, i32* %i, align 4, !dbg !6495
  %inc15 = add nsw i32 %29, 1, !dbg !6495
  store i32 %inc15, i32* %i, align 4, !dbg !6495
  br label %for.cond8, !dbg !6496, !llvm.loop !6497

for.end16:                                        ; preds = %for.cond8
  store i32 0, i32* %i, align 4, !dbg !6499
  br label %for.cond17, !dbg !6501

for.cond17:                                       ; preds = %for.inc23, %for.end16
  %30 = load i32, i32* %i, align 4, !dbg !6502
  %31 = load i32, i32* %numEffectedF.addr, align 4, !dbg !6504
  %cmp18 = icmp slt i32 %30, %31, !dbg !6505
  br i1 %cmp18, label %for.body19, label %for.end25, !dbg !6506

for.body19:                                       ; preds = %for.cond17
  %32 = load %struct.CCGFace**, %struct.CCGFace*** %effectedF.addr, align 8, !dbg !6507
  %33 = load i32, i32* %i, align 4, !dbg !6508
  %idxprom20 = sext i32 %33 to i64, !dbg !6507
  %arrayidx21 = getelementptr inbounds %struct.CCGFace*, %struct.CCGFace** %32, i64 %idxprom20, !dbg !6507
  %34 = load %struct.CCGFace*, %struct.CCGFace** %arrayidx21, align 8, !dbg !6507
  %flags22 = getelementptr inbounds %struct.CCGFace, %struct.CCGFace* %34, i32 0, i32 3, !dbg !6509
  store i16 0, i16* %flags22, align 2, !dbg !6510
  br label %for.inc23, !dbg !6507

for.inc23:                                        ; preds = %for.body19
  %35 = load i32, i32* %i, align 4, !dbg !6511
  %inc24 = add nsw i32 %35, 1, !dbg !6511
  store i32 %inc24, i32* %i, align 4, !dbg !6511
  br label %for.cond17, !dbg !6512, !llvm.loop !6513

for.end25:                                        ; preds = %for.cond17
  %36 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !6515
  %37 = load %struct.CCGEdge**, %struct.CCGEdge*** %effectedE, align 8, !dbg !6516
  %38 = bitcast %struct.CCGEdge** %37 to i8*, !dbg !6516
  call void %36(i8* %38), !dbg !6515
  %39 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !6517
  %40 = load %struct.CCGVert**, %struct.CCGVert*** %effectedV, align 8, !dbg !6518
  %41 = bitcast %struct.CCGVert** %40 to i8*, !dbg !6518
  call void %39(i8* %41), !dbg !6517
  %42 = load i32, i32* %freeF, align 4, !dbg !6519
  %tobool = icmp ne i32 %42, 0, !dbg !6519
  br i1 %tobool, label %if.then, label %if.end, !dbg !6521

if.then:                                          ; preds = %for.end25
  %43 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !6522
  %44 = load %struct.CCGFace**, %struct.CCGFace*** %effectedF.addr, align 8, !dbg !6523
  %45 = bitcast %struct.CCGFace** %44 to i8*, !dbg !6523
  call void %43(i8* %45), !dbg !6522
  br label %if.end, !dbg !6522

if.end:                                           ; preds = %if.then, %for.end25
  ret i32 0, !dbg !6524
}

; Function Attrs: noinline nounwind uwtable
define internal void @ccgSubSurf__calcSubdivLevel(%struct.CCGSubSurf* %ss, %struct.CCGVert** %effectedV, %struct.CCGEdge** %effectedE, %struct.CCGFace** %effectedF, i32 %numEffectedV, i32 %numEffectedE, i32 %numEffectedF, i32 %curLvl) #0 !dbg !6525 {
entry:
  %ss.addr = alloca %struct.CCGSubSurf*, align 8
  %effectedV.addr = alloca %struct.CCGVert**, align 8
  %effectedE.addr = alloca %struct.CCGEdge**, align 8
  %effectedF.addr = alloca %struct.CCGFace**, align 8
  %numEffectedV.addr = alloca i32, align 4
  %numEffectedE.addr = alloca i32, align 4
  %numEffectedF.addr = alloca i32, align 4
  %curLvl.addr = alloca i32, align 4
  %subdivLevels = alloca i32, align 4
  %edgeSize = alloca i32, align 4
  %gridSize = alloca i32, align 4
  %nextLvl = alloca i32, align 4
  %ptrIdx = alloca i32, align 4
  %cornerIdx = alloca i32, align 4
  %i = alloca i32, align 4
  %vertDataSize = alloca i32, align 4
  %q = alloca float*, align 8
  %r = alloca float*, align 8
  %f = alloca %struct.CCGFace*, align 8
  %S = alloca i32, align 4
  %x = alloca i32, align 4
  %y = alloca i32, align 4
  %fx = alloca i32, align 4
  %fy = alloca i32, align 4
  %co0 = alloca float*, align 8
  %co1 = alloca float*, align 8
  %co2 = alloca float*, align 8
  %co3 = alloca float*, align 8
  %co = alloca float*, align 8
  %fx52 = alloca i32, align 4
  %co055 = alloca float*, align 8
  %co158 = alloca float*, align 8
  %co261 = alloca float*, align 8
  %co366 = alloca float*, align 8
  %co68 = alloca float*, align 8
  %fx83 = alloca i32, align 4
  %fy85 = alloca i32, align 4
  %co088 = alloca float*, align 8
  %co191 = alloca float*, align 8
  %co294 = alloca float*, align 8
  %co397 = alloca float*, align 8
  %co100 = alloca float*, align 8
  %fx118 = alloca i32, align 4
  %fy121 = alloca i32, align 4
  %co0123 = alloca float*, align 8
  %co1126 = alloca float*, align 8
  %co2129 = alloca float*, align 8
  %co3132 = alloca float*, align 8
  %co135 = alloca float*, align 8
  %e = alloca %struct.CCGEdge*, align 8
  %sharpness = alloca float, align 4
  %x156 = alloca i32, align 4
  %j = alloca i32, align 4
  %fx165 = alloca i32, align 4
  %co0168 = alloca float*, align 8
  %co1171 = alloca float*, align 8
  %co174 = alloca float*, align 8
  %fx184 = alloca i32, align 4
  %co0187 = alloca float*, align 8
  %co1190 = alloca float*, align 8
  %co193 = alloca float*, align 8
  %numFaces = alloca i32, align 4
  %f201 = alloca %struct.CCGFace*, align 8
  %f_ed_idx = alloca i32, align 4
  %v = alloca %struct.CCGVert*, align 8
  %co224 = alloca float*, align 8
  %nCo = alloca float*, align 8
  %sharpCount = alloca i32, align 4
  %allSharp = alloca i32, align 4
  %avgSharpness = alloca float, align 4
  %j227 = alloca i32, align 4
  %seam = alloca i32, align 4
  %seamEdges = alloca i32, align 4
  %e234 = alloca %struct.CCGEdge*, align 8
  %sharpness237 = alloca float, align 4
  %numBoundary = alloca i32, align 4
  %e289 = alloca %struct.CCGEdge*, align 8
  %cornerIdx305 = alloca i32, align 4
  %numEdges308 = alloca i32, align 4
  %numFaces309 = alloca i32, align 4
  %f316 = alloca %struct.CCGFace*, align 8
  %e334 = alloca %struct.CCGEdge*, align 8
  %e369 = alloca %struct.CCGEdge*, align 8
  %sharpness373 = alloca float, align 4
  %e408 = alloca %struct.CCGEdge*, align 8
  %sharpness411 = alloca float, align 4
  %sharpCount413 = alloca i32, align 4
  %avgSharpness414 = alloca float, align 4
  %x415 = alloca i32, align 4
  %j416 = alloca i32, align 4
  %fx435 = alloca i32, align 4
  %co437 = alloca float*, align 8
  %nCo439 = alloca float*, align 8
  %fx454 = alloca i32, align 4
  %co456 = alloca float*, align 8
  %nCo458 = alloca float*, align 8
  %numFaces460 = alloca i32, align 4
  %f471 = alloca %struct.CCGFace*, align 8
  %f_ed_idx475 = alloca i32, align 4
  %q511 = alloca float*, align 8
  %r512 = alloca float*, align 8
  %f525 = alloca %struct.CCGFace*, align 8
  %S528 = alloca i32, align 4
  %x529 = alloca i32, align 4
  %y530 = alloca i32, align 4
  %fx587 = alloca i32, align 4
  %fy589 = alloca i32, align 4
  %co591 = alloca float*, align 8
  %nCo593 = alloca float*, align 8
  %fx630 = alloca i32, align 4
  %co632 = alloca float*, align 8
  %nCo634 = alloca float*, align 8
  %e678 = alloca %struct.CCGEdge*, align 8
  %f693 = alloca %struct.CCGFace*, align 8
  %S696 = alloca i32, align 4
  %x697 = alloca i32, align 4
  %e704 = alloca %struct.CCGEdge*, align 8
  %prevE = alloca %struct.CCGEdge*, align 8
  %co737 = alloca float*, align 8
  %eI = alloca i32, align 4
  store %struct.CCGSubSurf* %ss, %struct.CCGSubSurf** %ss.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGSubSurf** %ss.addr, metadata !6528, metadata !DIExpression()), !dbg !6529
  store %struct.CCGVert** %effectedV, %struct.CCGVert*** %effectedV.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGVert*** %effectedV.addr, metadata !6530, metadata !DIExpression()), !dbg !6531
  store %struct.CCGEdge** %effectedE, %struct.CCGEdge*** %effectedE.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGEdge*** %effectedE.addr, metadata !6532, metadata !DIExpression()), !dbg !6533
  store %struct.CCGFace** %effectedF, %struct.CCGFace*** %effectedF.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGFace*** %effectedF.addr, metadata !6534, metadata !DIExpression()), !dbg !6535
  store i32 %numEffectedV, i32* %numEffectedV.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %numEffectedV.addr, metadata !6536, metadata !DIExpression()), !dbg !6537
  store i32 %numEffectedE, i32* %numEffectedE.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %numEffectedE.addr, metadata !6538, metadata !DIExpression()), !dbg !6539
  store i32 %numEffectedF, i32* %numEffectedF.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %numEffectedF.addr, metadata !6540, metadata !DIExpression()), !dbg !6541
  store i32 %curLvl, i32* %curLvl.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %curLvl.addr, metadata !6542, metadata !DIExpression()), !dbg !6543
  call void @llvm.dbg.declare(metadata i32* %subdivLevels, metadata !6544, metadata !DIExpression()), !dbg !6545
  %0 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !6546
  %subdivLevels1 = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %0, i32 0, i32 6, !dbg !6547
  %1 = load i32, i32* %subdivLevels1, align 8, !dbg !6547
  store i32 %1, i32* %subdivLevels, align 4, !dbg !6545
  call void @llvm.dbg.declare(metadata i32* %edgeSize, metadata !6548, metadata !DIExpression()), !dbg !6549
  %2 = load i32, i32* %curLvl.addr, align 4, !dbg !6550
  %call = call i32 @ccg_edgesize(i32 %2), !dbg !6551
  store i32 %call, i32* %edgeSize, align 4, !dbg !6549
  call void @llvm.dbg.declare(metadata i32* %gridSize, metadata !6552, metadata !DIExpression()), !dbg !6553
  %3 = load i32, i32* %curLvl.addr, align 4, !dbg !6554
  %call2 = call i32 @ccg_gridsize(i32 %3), !dbg !6555
  store i32 %call2, i32* %gridSize, align 4, !dbg !6553
  call void @llvm.dbg.declare(metadata i32* %nextLvl, metadata !6556, metadata !DIExpression()), !dbg !6557
  %4 = load i32, i32* %curLvl.addr, align 4, !dbg !6558
  %add = add nsw i32 %4, 1, !dbg !6559
  store i32 %add, i32* %nextLvl, align 4, !dbg !6557
  call void @llvm.dbg.declare(metadata i32* %ptrIdx, metadata !6560, metadata !DIExpression()), !dbg !6561
  call void @llvm.dbg.declare(metadata i32* %cornerIdx, metadata !6562, metadata !DIExpression()), !dbg !6563
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6564, metadata !DIExpression()), !dbg !6565
  call void @llvm.dbg.declare(metadata i32* %vertDataSize, metadata !6566, metadata !DIExpression()), !dbg !6567
  %5 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !6568
  %meshIFC = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %5, i32 0, i32 3, !dbg !6569
  %vertDataSize3 = getelementptr inbounds %struct.CCGMeshIFC, %struct.CCGMeshIFC* %meshIFC, i32 0, i32 4, !dbg !6570
  %6 = load i32, i32* %vertDataSize3, align 8, !dbg !6570
  store i32 %6, i32* %vertDataSize, align 4, !dbg !6567
  call void @llvm.dbg.declare(metadata float** %q, metadata !6571, metadata !DIExpression()), !dbg !6572
  %7 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !6573
  %q4 = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %7, i32 0, i32 11, !dbg !6574
  %8 = load i8*, i8** %q4, align 8, !dbg !6574
  %9 = bitcast i8* %8 to float*, !dbg !6573
  store float* %9, float** %q, align 8, !dbg !6572
  call void @llvm.dbg.declare(metadata float** %r, metadata !6575, metadata !DIExpression()), !dbg !6576
  %10 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !6577
  %r5 = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %10, i32 0, i32 12, !dbg !6578
  %11 = load i8*, i8** %r5, align 8, !dbg !6578
  %12 = bitcast i8* %11 to float*, !dbg !6577
  store float* %12, float** %r, align 8, !dbg !6576
  store i32 0, i32* %ptrIdx, align 4, !dbg !6579
  br label %for.cond, !dbg !6581

for.cond:                                         ; preds = %for.inc146, %entry
  %13 = load i32, i32* %ptrIdx, align 4, !dbg !6582
  %14 = load i32, i32* %numEffectedF.addr, align 4, !dbg !6584
  %cmp = icmp slt i32 %13, %14, !dbg !6585
  br i1 %cmp, label %for.body, label %for.end148, !dbg !6586

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.CCGFace** %f, metadata !6587, metadata !DIExpression()), !dbg !6589
  %15 = load %struct.CCGFace**, %struct.CCGFace*** %effectedF.addr, align 8, !dbg !6590
  %16 = load i32, i32* %ptrIdx, align 4, !dbg !6591
  %idxprom = sext i32 %16 to i64, !dbg !6590
  %arrayidx = getelementptr inbounds %struct.CCGFace*, %struct.CCGFace** %15, i64 %idxprom, !dbg !6590
  %17 = load %struct.CCGFace*, %struct.CCGFace** %arrayidx, align 8, !dbg !6590
  store %struct.CCGFace* %17, %struct.CCGFace** %f, align 8, !dbg !6589
  call void @llvm.dbg.declare(metadata i32* %S, metadata !6592, metadata !DIExpression()), !dbg !6593
  call void @llvm.dbg.declare(metadata i32* %x, metadata !6594, metadata !DIExpression()), !dbg !6595
  call void @llvm.dbg.declare(metadata i32* %y, metadata !6596, metadata !DIExpression()), !dbg !6597
  store i32 0, i32* %S, align 4, !dbg !6598
  br label %for.cond6, !dbg !6600

for.cond6:                                        ; preds = %for.inc38, %for.body
  %18 = load i32, i32* %S, align 4, !dbg !6601
  %19 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !6603
  %numVerts = getelementptr inbounds %struct.CCGFace, %struct.CCGFace* %19, i32 0, i32 2, !dbg !6604
  %20 = load i16, i16* %numVerts, align 8, !dbg !6604
  %conv = sext i16 %20 to i32, !dbg !6603
  %cmp7 = icmp slt i32 %18, %conv, !dbg !6605
  br i1 %cmp7, label %for.body9, label %for.end40, !dbg !6606

for.body9:                                        ; preds = %for.cond6
  store i32 0, i32* %y, align 4, !dbg !6607
  br label %for.cond10, !dbg !6610

for.cond10:                                       ; preds = %for.inc35, %for.body9
  %21 = load i32, i32* %y, align 4, !dbg !6611
  %22 = load i32, i32* %gridSize, align 4, !dbg !6613
  %sub = sub nsw i32 %22, 1, !dbg !6614
  %cmp11 = icmp slt i32 %21, %sub, !dbg !6615
  br i1 %cmp11, label %for.body13, label %for.end37, !dbg !6616

for.body13:                                       ; preds = %for.cond10
  store i32 0, i32* %x, align 4, !dbg !6617
  br label %for.cond14, !dbg !6620

for.cond14:                                       ; preds = %for.inc, %for.body13
  %23 = load i32, i32* %x, align 4, !dbg !6621
  %24 = load i32, i32* %gridSize, align 4, !dbg !6623
  %sub15 = sub nsw i32 %24, 1, !dbg !6624
  %cmp16 = icmp slt i32 %23, %sub15, !dbg !6625
  br i1 %cmp16, label %for.body18, label %for.end, !dbg !6626

for.body18:                                       ; preds = %for.cond14
  call void @llvm.dbg.declare(metadata i32* %fx, metadata !6627, metadata !DIExpression()), !dbg !6629
  %25 = load i32, i32* %x, align 4, !dbg !6630
  %mul = mul nsw i32 2, %25, !dbg !6631
  %add19 = add nsw i32 1, %mul, !dbg !6632
  store i32 %add19, i32* %fx, align 4, !dbg !6629
  call void @llvm.dbg.declare(metadata i32* %fy, metadata !6633, metadata !DIExpression()), !dbg !6634
  %26 = load i32, i32* %y, align 4, !dbg !6635
  %mul20 = mul nsw i32 2, %26, !dbg !6636
  %add21 = add nsw i32 1, %mul20, !dbg !6637
  store i32 %add21, i32* %fy, align 4, !dbg !6634
  call void @llvm.dbg.declare(metadata float** %co0, metadata !6638, metadata !DIExpression()), !dbg !6639
  %27 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !6640
  %28 = load i32, i32* %curLvl.addr, align 4, !dbg !6640
  %29 = load i32, i32* %S, align 4, !dbg !6640
  %30 = load i32, i32* %x, align 4, !dbg !6640
  %add22 = add nsw i32 %30, 0, !dbg !6640
  %31 = load i32, i32* %y, align 4, !dbg !6640
  %add23 = add nsw i32 %31, 0, !dbg !6640
  %32 = load i32, i32* %subdivLevels, align 4, !dbg !6640
  %33 = load i32, i32* %vertDataSize, align 4, !dbg !6640
  %call24 = call i8* @_face_getIFCo(%struct.CCGFace* %27, i32 %28, i32 %29, i32 %add22, i32 %add23, i32 %32, i32 %33), !dbg !6640
  %34 = bitcast i8* %call24 to float*, !dbg !6640
  store float* %34, float** %co0, align 8, !dbg !6639
  call void @llvm.dbg.declare(metadata float** %co1, metadata !6641, metadata !DIExpression()), !dbg !6642
  %35 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !6643
  %36 = load i32, i32* %curLvl.addr, align 4, !dbg !6643
  %37 = load i32, i32* %S, align 4, !dbg !6643
  %38 = load i32, i32* %x, align 4, !dbg !6643
  %add25 = add nsw i32 %38, 1, !dbg !6643
  %39 = load i32, i32* %y, align 4, !dbg !6643
  %add26 = add nsw i32 %39, 0, !dbg !6643
  %40 = load i32, i32* %subdivLevels, align 4, !dbg !6643
  %41 = load i32, i32* %vertDataSize, align 4, !dbg !6643
  %call27 = call i8* @_face_getIFCo(%struct.CCGFace* %35, i32 %36, i32 %37, i32 %add25, i32 %add26, i32 %40, i32 %41), !dbg !6643
  %42 = bitcast i8* %call27 to float*, !dbg !6643
  store float* %42, float** %co1, align 8, !dbg !6642
  call void @llvm.dbg.declare(metadata float** %co2, metadata !6644, metadata !DIExpression()), !dbg !6645
  %43 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !6646
  %44 = load i32, i32* %curLvl.addr, align 4, !dbg !6646
  %45 = load i32, i32* %S, align 4, !dbg !6646
  %46 = load i32, i32* %x, align 4, !dbg !6646
  %add28 = add nsw i32 %46, 1, !dbg !6646
  %47 = load i32, i32* %y, align 4, !dbg !6646
  %add29 = add nsw i32 %47, 1, !dbg !6646
  %48 = load i32, i32* %subdivLevels, align 4, !dbg !6646
  %49 = load i32, i32* %vertDataSize, align 4, !dbg !6646
  %call30 = call i8* @_face_getIFCo(%struct.CCGFace* %43, i32 %44, i32 %45, i32 %add28, i32 %add29, i32 %48, i32 %49), !dbg !6646
  %50 = bitcast i8* %call30 to float*, !dbg !6646
  store float* %50, float** %co2, align 8, !dbg !6645
  call void @llvm.dbg.declare(metadata float** %co3, metadata !6647, metadata !DIExpression()), !dbg !6648
  %51 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !6649
  %52 = load i32, i32* %curLvl.addr, align 4, !dbg !6649
  %53 = load i32, i32* %S, align 4, !dbg !6649
  %54 = load i32, i32* %x, align 4, !dbg !6649
  %add31 = add nsw i32 %54, 0, !dbg !6649
  %55 = load i32, i32* %y, align 4, !dbg !6649
  %add32 = add nsw i32 %55, 1, !dbg !6649
  %56 = load i32, i32* %subdivLevels, align 4, !dbg !6649
  %57 = load i32, i32* %vertDataSize, align 4, !dbg !6649
  %call33 = call i8* @_face_getIFCo(%struct.CCGFace* %51, i32 %52, i32 %53, i32 %add31, i32 %add32, i32 %56, i32 %57), !dbg !6649
  %58 = bitcast i8* %call33 to float*, !dbg !6649
  store float* %58, float** %co3, align 8, !dbg !6648
  call void @llvm.dbg.declare(metadata float** %co, metadata !6650, metadata !DIExpression()), !dbg !6651
  %59 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !6652
  %60 = load i32, i32* %nextLvl, align 4, !dbg !6652
  %61 = load i32, i32* %S, align 4, !dbg !6652
  %62 = load i32, i32* %fx, align 4, !dbg !6652
  %63 = load i32, i32* %fy, align 4, !dbg !6652
  %64 = load i32, i32* %subdivLevels, align 4, !dbg !6652
  %65 = load i32, i32* %vertDataSize, align 4, !dbg !6652
  %call34 = call i8* @_face_getIFCo(%struct.CCGFace* %59, i32 %60, i32 %61, i32 %62, i32 %63, i32 %64, i32 %65), !dbg !6652
  %66 = bitcast i8* %call34 to float*, !dbg !6652
  store float* %66, float** %co, align 8, !dbg !6651
  %67 = load float*, float** %co, align 8, !dbg !6653
  %68 = load float*, float** %co0, align 8, !dbg !6654
  %69 = load float*, float** %co1, align 8, !dbg !6655
  %70 = load float*, float** %co2, align 8, !dbg !6656
  %71 = load float*, float** %co3, align 8, !dbg !6657
  %72 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !6658
  call void @VertDataAvg4(float* %67, float* %68, float* %69, float* %70, float* %71, %struct.CCGSubSurf* %72), !dbg !6659
  br label %for.inc, !dbg !6660

for.inc:                                          ; preds = %for.body18
  %73 = load i32, i32* %x, align 4, !dbg !6661
  %inc = add nsw i32 %73, 1, !dbg !6661
  store i32 %inc, i32* %x, align 4, !dbg !6661
  br label %for.cond14, !dbg !6662, !llvm.loop !6663

for.end:                                          ; preds = %for.cond14
  br label %for.inc35, !dbg !6665

for.inc35:                                        ; preds = %for.end
  %74 = load i32, i32* %y, align 4, !dbg !6666
  %inc36 = add nsw i32 %74, 1, !dbg !6666
  store i32 %inc36, i32* %y, align 4, !dbg !6666
  br label %for.cond10, !dbg !6667, !llvm.loop !6668

for.end37:                                        ; preds = %for.cond10
  br label %for.inc38, !dbg !6670

for.inc38:                                        ; preds = %for.end37
  %75 = load i32, i32* %S, align 4, !dbg !6671
  %inc39 = add nsw i32 %75, 1, !dbg !6671
  store i32 %inc39, i32* %S, align 4, !dbg !6671
  br label %for.cond6, !dbg !6672, !llvm.loop !6673

for.end40:                                        ; preds = %for.cond6
  store i32 0, i32* %S, align 4, !dbg !6675
  br label %for.cond41, !dbg !6677

for.cond41:                                       ; preds = %for.inc143, %for.end40
  %76 = load i32, i32* %S, align 4, !dbg !6678
  %77 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !6680
  %numVerts42 = getelementptr inbounds %struct.CCGFace, %struct.CCGFace* %77, i32 0, i32 2, !dbg !6681
  %78 = load i16, i16* %numVerts42, align 8, !dbg !6681
  %conv43 = sext i16 %78 to i32, !dbg !6680
  %cmp44 = icmp slt i32 %76, %conv43, !dbg !6682
  br i1 %cmp44, label %for.body46, label %for.end145, !dbg !6683

for.body46:                                       ; preds = %for.cond41
  store i32 0, i32* %x, align 4, !dbg !6684
  br label %for.cond47, !dbg !6687

for.cond47:                                       ; preds = %for.inc70, %for.body46
  %79 = load i32, i32* %x, align 4, !dbg !6688
  %80 = load i32, i32* %gridSize, align 4, !dbg !6690
  %sub48 = sub nsw i32 %80, 1, !dbg !6691
  %cmp49 = icmp slt i32 %79, %sub48, !dbg !6692
  br i1 %cmp49, label %for.body51, label %for.end72, !dbg !6693

for.body51:                                       ; preds = %for.cond47
  call void @llvm.dbg.declare(metadata i32* %fx52, metadata !6694, metadata !DIExpression()), !dbg !6696
  %81 = load i32, i32* %x, align 4, !dbg !6697
  %mul53 = mul nsw i32 %81, 2, !dbg !6698
  %add54 = add nsw i32 %mul53, 1, !dbg !6699
  store i32 %add54, i32* %fx52, align 4, !dbg !6696
  call void @llvm.dbg.declare(metadata float** %co055, metadata !6700, metadata !DIExpression()), !dbg !6701
  %82 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !6702
  %83 = load i32, i32* %curLvl.addr, align 4, !dbg !6702
  %84 = load i32, i32* %S, align 4, !dbg !6702
  %85 = load i32, i32* %x, align 4, !dbg !6702
  %add56 = add nsw i32 %85, 0, !dbg !6702
  %86 = load i32, i32* %subdivLevels, align 4, !dbg !6702
  %87 = load i32, i32* %vertDataSize, align 4, !dbg !6702
  %call57 = call i8* @_face_getIECo(%struct.CCGFace* %82, i32 %83, i32 %84, i32 %add56, i32 %86, i32 %87), !dbg !6702
  %88 = bitcast i8* %call57 to float*, !dbg !6702
  store float* %88, float** %co055, align 8, !dbg !6701
  call void @llvm.dbg.declare(metadata float** %co158, metadata !6703, metadata !DIExpression()), !dbg !6704
  %89 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !6705
  %90 = load i32, i32* %curLvl.addr, align 4, !dbg !6705
  %91 = load i32, i32* %S, align 4, !dbg !6705
  %92 = load i32, i32* %x, align 4, !dbg !6705
  %add59 = add nsw i32 %92, 1, !dbg !6705
  %93 = load i32, i32* %subdivLevels, align 4, !dbg !6705
  %94 = load i32, i32* %vertDataSize, align 4, !dbg !6705
  %call60 = call i8* @_face_getIECo(%struct.CCGFace* %89, i32 %90, i32 %91, i32 %add59, i32 %93, i32 %94), !dbg !6705
  %95 = bitcast i8* %call60 to float*, !dbg !6705
  store float* %95, float** %co158, align 8, !dbg !6704
  call void @llvm.dbg.declare(metadata float** %co261, metadata !6706, metadata !DIExpression()), !dbg !6707
  %96 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !6708
  %97 = load i32, i32* %nextLvl, align 4, !dbg !6708
  %98 = load i32, i32* %S, align 4, !dbg !6708
  %add62 = add nsw i32 %98, 1, !dbg !6708
  %99 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !6708
  %numVerts63 = getelementptr inbounds %struct.CCGFace, %struct.CCGFace* %99, i32 0, i32 2, !dbg !6708
  %100 = load i16, i16* %numVerts63, align 8, !dbg !6708
  %conv64 = sext i16 %100 to i32, !dbg !6708
  %rem = srem i32 %add62, %conv64, !dbg !6708
  %101 = load i32, i32* %fx52, align 4, !dbg !6708
  %102 = load i32, i32* %subdivLevels, align 4, !dbg !6708
  %103 = load i32, i32* %vertDataSize, align 4, !dbg !6708
  %call65 = call i8* @_face_getIFCo(%struct.CCGFace* %96, i32 %97, i32 %rem, i32 1, i32 %101, i32 %102, i32 %103), !dbg !6708
  %104 = bitcast i8* %call65 to float*, !dbg !6708
  store float* %104, float** %co261, align 8, !dbg !6707
  call void @llvm.dbg.declare(metadata float** %co366, metadata !6709, metadata !DIExpression()), !dbg !6710
  %105 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !6711
  %106 = load i32, i32* %nextLvl, align 4, !dbg !6711
  %107 = load i32, i32* %S, align 4, !dbg !6711
  %108 = load i32, i32* %fx52, align 4, !dbg !6711
  %109 = load i32, i32* %subdivLevels, align 4, !dbg !6711
  %110 = load i32, i32* %vertDataSize, align 4, !dbg !6711
  %call67 = call i8* @_face_getIFCo(%struct.CCGFace* %105, i32 %106, i32 %107, i32 %108, i32 1, i32 %109, i32 %110), !dbg !6711
  %111 = bitcast i8* %call67 to float*, !dbg !6711
  store float* %111, float** %co366, align 8, !dbg !6710
  call void @llvm.dbg.declare(metadata float** %co68, metadata !6712, metadata !DIExpression()), !dbg !6713
  %112 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !6714
  %113 = load i32, i32* %nextLvl, align 4, !dbg !6714
  %114 = load i32, i32* %S, align 4, !dbg !6714
  %115 = load i32, i32* %fx52, align 4, !dbg !6714
  %116 = load i32, i32* %subdivLevels, align 4, !dbg !6714
  %117 = load i32, i32* %vertDataSize, align 4, !dbg !6714
  %call69 = call i8* @_face_getIECo(%struct.CCGFace* %112, i32 %113, i32 %114, i32 %115, i32 %116, i32 %117), !dbg !6714
  %118 = bitcast i8* %call69 to float*, !dbg !6714
  store float* %118, float** %co68, align 8, !dbg !6713
  %119 = load float*, float** %co68, align 8, !dbg !6715
  %120 = load float*, float** %co055, align 8, !dbg !6716
  %121 = load float*, float** %co158, align 8, !dbg !6717
  %122 = load float*, float** %co261, align 8, !dbg !6718
  %123 = load float*, float** %co366, align 8, !dbg !6719
  %124 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !6720
  call void @VertDataAvg4(float* %119, float* %120, float* %121, float* %122, float* %123, %struct.CCGSubSurf* %124), !dbg !6721
  br label %for.inc70, !dbg !6722

for.inc70:                                        ; preds = %for.body51
  %125 = load i32, i32* %x, align 4, !dbg !6723
  %inc71 = add nsw i32 %125, 1, !dbg !6723
  store i32 %inc71, i32* %x, align 4, !dbg !6723
  br label %for.cond47, !dbg !6724, !llvm.loop !6725

for.end72:                                        ; preds = %for.cond47
  store i32 1, i32* %x, align 4, !dbg !6727
  br label %for.cond73, !dbg !6729

for.cond73:                                       ; preds = %for.inc105, %for.end72
  %126 = load i32, i32* %x, align 4, !dbg !6730
  %127 = load i32, i32* %gridSize, align 4, !dbg !6732
  %sub74 = sub nsw i32 %127, 1, !dbg !6733
  %cmp75 = icmp slt i32 %126, %sub74, !dbg !6734
  br i1 %cmp75, label %for.body77, label %for.end107, !dbg !6735

for.body77:                                       ; preds = %for.cond73
  store i32 0, i32* %y, align 4, !dbg !6736
  br label %for.cond78, !dbg !6739

for.cond78:                                       ; preds = %for.inc102, %for.body77
  %128 = load i32, i32* %y, align 4, !dbg !6740
  %129 = load i32, i32* %gridSize, align 4, !dbg !6742
  %sub79 = sub nsw i32 %129, 1, !dbg !6743
  %cmp80 = icmp slt i32 %128, %sub79, !dbg !6744
  br i1 %cmp80, label %for.body82, label %for.end104, !dbg !6745

for.body82:                                       ; preds = %for.cond78
  call void @llvm.dbg.declare(metadata i32* %fx83, metadata !6746, metadata !DIExpression()), !dbg !6748
  %130 = load i32, i32* %x, align 4, !dbg !6749
  %mul84 = mul nsw i32 %130, 2, !dbg !6750
  store i32 %mul84, i32* %fx83, align 4, !dbg !6748
  call void @llvm.dbg.declare(metadata i32* %fy85, metadata !6751, metadata !DIExpression()), !dbg !6752
  %131 = load i32, i32* %y, align 4, !dbg !6753
  %mul86 = mul nsw i32 %131, 2, !dbg !6754
  %add87 = add nsw i32 %mul86, 1, !dbg !6755
  store i32 %add87, i32* %fy85, align 4, !dbg !6752
  call void @llvm.dbg.declare(metadata float** %co088, metadata !6756, metadata !DIExpression()), !dbg !6757
  %132 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !6758
  %133 = load i32, i32* %curLvl.addr, align 4, !dbg !6758
  %134 = load i32, i32* %S, align 4, !dbg !6758
  %135 = load i32, i32* %x, align 4, !dbg !6758
  %136 = load i32, i32* %y, align 4, !dbg !6758
  %add89 = add nsw i32 %136, 0, !dbg !6758
  %137 = load i32, i32* %subdivLevels, align 4, !dbg !6758
  %138 = load i32, i32* %vertDataSize, align 4, !dbg !6758
  %call90 = call i8* @_face_getIFCo(%struct.CCGFace* %132, i32 %133, i32 %134, i32 %135, i32 %add89, i32 %137, i32 %138), !dbg !6758
  %139 = bitcast i8* %call90 to float*, !dbg !6758
  store float* %139, float** %co088, align 8, !dbg !6757
  call void @llvm.dbg.declare(metadata float** %co191, metadata !6759, metadata !DIExpression()), !dbg !6760
  %140 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !6761
  %141 = load i32, i32* %curLvl.addr, align 4, !dbg !6761
  %142 = load i32, i32* %S, align 4, !dbg !6761
  %143 = load i32, i32* %x, align 4, !dbg !6761
  %144 = load i32, i32* %y, align 4, !dbg !6761
  %add92 = add nsw i32 %144, 1, !dbg !6761
  %145 = load i32, i32* %subdivLevels, align 4, !dbg !6761
  %146 = load i32, i32* %vertDataSize, align 4, !dbg !6761
  %call93 = call i8* @_face_getIFCo(%struct.CCGFace* %140, i32 %141, i32 %142, i32 %143, i32 %add92, i32 %145, i32 %146), !dbg !6761
  %147 = bitcast i8* %call93 to float*, !dbg !6761
  store float* %147, float** %co191, align 8, !dbg !6760
  call void @llvm.dbg.declare(metadata float** %co294, metadata !6762, metadata !DIExpression()), !dbg !6763
  %148 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !6764
  %149 = load i32, i32* %nextLvl, align 4, !dbg !6764
  %150 = load i32, i32* %S, align 4, !dbg !6764
  %151 = load i32, i32* %fx83, align 4, !dbg !6764
  %sub95 = sub nsw i32 %151, 1, !dbg !6764
  %152 = load i32, i32* %fy85, align 4, !dbg !6764
  %153 = load i32, i32* %subdivLevels, align 4, !dbg !6764
  %154 = load i32, i32* %vertDataSize, align 4, !dbg !6764
  %call96 = call i8* @_face_getIFCo(%struct.CCGFace* %148, i32 %149, i32 %150, i32 %sub95, i32 %152, i32 %153, i32 %154), !dbg !6764
  %155 = bitcast i8* %call96 to float*, !dbg !6764
  store float* %155, float** %co294, align 8, !dbg !6763
  call void @llvm.dbg.declare(metadata float** %co397, metadata !6765, metadata !DIExpression()), !dbg !6766
  %156 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !6767
  %157 = load i32, i32* %nextLvl, align 4, !dbg !6767
  %158 = load i32, i32* %S, align 4, !dbg !6767
  %159 = load i32, i32* %fx83, align 4, !dbg !6767
  %add98 = add nsw i32 %159, 1, !dbg !6767
  %160 = load i32, i32* %fy85, align 4, !dbg !6767
  %161 = load i32, i32* %subdivLevels, align 4, !dbg !6767
  %162 = load i32, i32* %vertDataSize, align 4, !dbg !6767
  %call99 = call i8* @_face_getIFCo(%struct.CCGFace* %156, i32 %157, i32 %158, i32 %add98, i32 %160, i32 %161, i32 %162), !dbg !6767
  %163 = bitcast i8* %call99 to float*, !dbg !6767
  store float* %163, float** %co397, align 8, !dbg !6766
  call void @llvm.dbg.declare(metadata float** %co100, metadata !6768, metadata !DIExpression()), !dbg !6769
  %164 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !6770
  %165 = load i32, i32* %nextLvl, align 4, !dbg !6770
  %166 = load i32, i32* %S, align 4, !dbg !6770
  %167 = load i32, i32* %fx83, align 4, !dbg !6770
  %168 = load i32, i32* %fy85, align 4, !dbg !6770
  %169 = load i32, i32* %subdivLevels, align 4, !dbg !6770
  %170 = load i32, i32* %vertDataSize, align 4, !dbg !6770
  %call101 = call i8* @_face_getIFCo(%struct.CCGFace* %164, i32 %165, i32 %166, i32 %167, i32 %168, i32 %169, i32 %170), !dbg !6770
  %171 = bitcast i8* %call101 to float*, !dbg !6770
  store float* %171, float** %co100, align 8, !dbg !6769
  %172 = load float*, float** %co100, align 8, !dbg !6771
  %173 = load float*, float** %co088, align 8, !dbg !6772
  %174 = load float*, float** %co191, align 8, !dbg !6773
  %175 = load float*, float** %co294, align 8, !dbg !6774
  %176 = load float*, float** %co397, align 8, !dbg !6775
  %177 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !6776
  call void @VertDataAvg4(float* %172, float* %173, float* %174, float* %175, float* %176, %struct.CCGSubSurf* %177), !dbg !6777
  br label %for.inc102, !dbg !6778

for.inc102:                                       ; preds = %for.body82
  %178 = load i32, i32* %y, align 4, !dbg !6779
  %inc103 = add nsw i32 %178, 1, !dbg !6779
  store i32 %inc103, i32* %y, align 4, !dbg !6779
  br label %for.cond78, !dbg !6780, !llvm.loop !6781

for.end104:                                       ; preds = %for.cond78
  br label %for.inc105, !dbg !6783

for.inc105:                                       ; preds = %for.end104
  %179 = load i32, i32* %x, align 4, !dbg !6784
  %inc106 = add nsw i32 %179, 1, !dbg !6784
  store i32 %inc106, i32* %x, align 4, !dbg !6784
  br label %for.cond73, !dbg !6785, !llvm.loop !6786

for.end107:                                       ; preds = %for.cond73
  store i32 1, i32* %y, align 4, !dbg !6788
  br label %for.cond108, !dbg !6790

for.cond108:                                      ; preds = %for.inc140, %for.end107
  %180 = load i32, i32* %y, align 4, !dbg !6791
  %181 = load i32, i32* %gridSize, align 4, !dbg !6793
  %sub109 = sub nsw i32 %181, 1, !dbg !6794
  %cmp110 = icmp slt i32 %180, %sub109, !dbg !6795
  br i1 %cmp110, label %for.body112, label %for.end142, !dbg !6796

for.body112:                                      ; preds = %for.cond108
  store i32 0, i32* %x, align 4, !dbg !6797
  br label %for.cond113, !dbg !6800

for.cond113:                                      ; preds = %for.inc137, %for.body112
  %182 = load i32, i32* %x, align 4, !dbg !6801
  %183 = load i32, i32* %gridSize, align 4, !dbg !6803
  %sub114 = sub nsw i32 %183, 1, !dbg !6804
  %cmp115 = icmp slt i32 %182, %sub114, !dbg !6805
  br i1 %cmp115, label %for.body117, label %for.end139, !dbg !6806

for.body117:                                      ; preds = %for.cond113
  call void @llvm.dbg.declare(metadata i32* %fx118, metadata !6807, metadata !DIExpression()), !dbg !6809
  %184 = load i32, i32* %x, align 4, !dbg !6810
  %mul119 = mul nsw i32 %184, 2, !dbg !6811
  %add120 = add nsw i32 %mul119, 1, !dbg !6812
  store i32 %add120, i32* %fx118, align 4, !dbg !6809
  call void @llvm.dbg.declare(metadata i32* %fy121, metadata !6813, metadata !DIExpression()), !dbg !6814
  %185 = load i32, i32* %y, align 4, !dbg !6815
  %mul122 = mul nsw i32 %185, 2, !dbg !6816
  store i32 %mul122, i32* %fy121, align 4, !dbg !6814
  call void @llvm.dbg.declare(metadata float** %co0123, metadata !6817, metadata !DIExpression()), !dbg !6818
  %186 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !6819
  %187 = load i32, i32* %curLvl.addr, align 4, !dbg !6819
  %188 = load i32, i32* %S, align 4, !dbg !6819
  %189 = load i32, i32* %x, align 4, !dbg !6819
  %add124 = add nsw i32 %189, 0, !dbg !6819
  %190 = load i32, i32* %y, align 4, !dbg !6819
  %191 = load i32, i32* %subdivLevels, align 4, !dbg !6819
  %192 = load i32, i32* %vertDataSize, align 4, !dbg !6819
  %call125 = call i8* @_face_getIFCo(%struct.CCGFace* %186, i32 %187, i32 %188, i32 %add124, i32 %190, i32 %191, i32 %192), !dbg !6819
  %193 = bitcast i8* %call125 to float*, !dbg !6819
  store float* %193, float** %co0123, align 8, !dbg !6818
  call void @llvm.dbg.declare(metadata float** %co1126, metadata !6820, metadata !DIExpression()), !dbg !6821
  %194 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !6822
  %195 = load i32, i32* %curLvl.addr, align 4, !dbg !6822
  %196 = load i32, i32* %S, align 4, !dbg !6822
  %197 = load i32, i32* %x, align 4, !dbg !6822
  %add127 = add nsw i32 %197, 1, !dbg !6822
  %198 = load i32, i32* %y, align 4, !dbg !6822
  %199 = load i32, i32* %subdivLevels, align 4, !dbg !6822
  %200 = load i32, i32* %vertDataSize, align 4, !dbg !6822
  %call128 = call i8* @_face_getIFCo(%struct.CCGFace* %194, i32 %195, i32 %196, i32 %add127, i32 %198, i32 %199, i32 %200), !dbg !6822
  %201 = bitcast i8* %call128 to float*, !dbg !6822
  store float* %201, float** %co1126, align 8, !dbg !6821
  call void @llvm.dbg.declare(metadata float** %co2129, metadata !6823, metadata !DIExpression()), !dbg !6824
  %202 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !6825
  %203 = load i32, i32* %nextLvl, align 4, !dbg !6825
  %204 = load i32, i32* %S, align 4, !dbg !6825
  %205 = load i32, i32* %fx118, align 4, !dbg !6825
  %206 = load i32, i32* %fy121, align 4, !dbg !6825
  %sub130 = sub nsw i32 %206, 1, !dbg !6825
  %207 = load i32, i32* %subdivLevels, align 4, !dbg !6825
  %208 = load i32, i32* %vertDataSize, align 4, !dbg !6825
  %call131 = call i8* @_face_getIFCo(%struct.CCGFace* %202, i32 %203, i32 %204, i32 %205, i32 %sub130, i32 %207, i32 %208), !dbg !6825
  %209 = bitcast i8* %call131 to float*, !dbg !6825
  store float* %209, float** %co2129, align 8, !dbg !6824
  call void @llvm.dbg.declare(metadata float** %co3132, metadata !6826, metadata !DIExpression()), !dbg !6827
  %210 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !6828
  %211 = load i32, i32* %nextLvl, align 4, !dbg !6828
  %212 = load i32, i32* %S, align 4, !dbg !6828
  %213 = load i32, i32* %fx118, align 4, !dbg !6828
  %214 = load i32, i32* %fy121, align 4, !dbg !6828
  %add133 = add nsw i32 %214, 1, !dbg !6828
  %215 = load i32, i32* %subdivLevels, align 4, !dbg !6828
  %216 = load i32, i32* %vertDataSize, align 4, !dbg !6828
  %call134 = call i8* @_face_getIFCo(%struct.CCGFace* %210, i32 %211, i32 %212, i32 %213, i32 %add133, i32 %215, i32 %216), !dbg !6828
  %217 = bitcast i8* %call134 to float*, !dbg !6828
  store float* %217, float** %co3132, align 8, !dbg !6827
  call void @llvm.dbg.declare(metadata float** %co135, metadata !6829, metadata !DIExpression()), !dbg !6830
  %218 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !6831
  %219 = load i32, i32* %nextLvl, align 4, !dbg !6831
  %220 = load i32, i32* %S, align 4, !dbg !6831
  %221 = load i32, i32* %fx118, align 4, !dbg !6831
  %222 = load i32, i32* %fy121, align 4, !dbg !6831
  %223 = load i32, i32* %subdivLevels, align 4, !dbg !6831
  %224 = load i32, i32* %vertDataSize, align 4, !dbg !6831
  %call136 = call i8* @_face_getIFCo(%struct.CCGFace* %218, i32 %219, i32 %220, i32 %221, i32 %222, i32 %223, i32 %224), !dbg !6831
  %225 = bitcast i8* %call136 to float*, !dbg !6831
  store float* %225, float** %co135, align 8, !dbg !6830
  %226 = load float*, float** %co135, align 8, !dbg !6832
  %227 = load float*, float** %co0123, align 8, !dbg !6833
  %228 = load float*, float** %co1126, align 8, !dbg !6834
  %229 = load float*, float** %co2129, align 8, !dbg !6835
  %230 = load float*, float** %co3132, align 8, !dbg !6836
  %231 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !6837
  call void @VertDataAvg4(float* %226, float* %227, float* %228, float* %229, float* %230, %struct.CCGSubSurf* %231), !dbg !6838
  br label %for.inc137, !dbg !6839

for.inc137:                                       ; preds = %for.body117
  %232 = load i32, i32* %x, align 4, !dbg !6840
  %inc138 = add nsw i32 %232, 1, !dbg !6840
  store i32 %inc138, i32* %x, align 4, !dbg !6840
  br label %for.cond113, !dbg !6841, !llvm.loop !6842

for.end139:                                       ; preds = %for.cond113
  br label %for.inc140, !dbg !6844

for.inc140:                                       ; preds = %for.end139
  %233 = load i32, i32* %y, align 4, !dbg !6845
  %inc141 = add nsw i32 %233, 1, !dbg !6845
  store i32 %inc141, i32* %y, align 4, !dbg !6845
  br label %for.cond108, !dbg !6846, !llvm.loop !6847

for.end142:                                       ; preds = %for.cond108
  br label %for.inc143, !dbg !6849

for.inc143:                                       ; preds = %for.end142
  %234 = load i32, i32* %S, align 4, !dbg !6850
  %inc144 = add nsw i32 %234, 1, !dbg !6850
  store i32 %inc144, i32* %S, align 4, !dbg !6850
  br label %for.cond41, !dbg !6851, !llvm.loop !6852

for.end145:                                       ; preds = %for.cond41
  br label %for.inc146, !dbg !6854

for.inc146:                                       ; preds = %for.end145
  %235 = load i32, i32* %ptrIdx, align 4, !dbg !6855
  %inc147 = add nsw i32 %235, 1, !dbg !6855
  store i32 %inc147, i32* %ptrIdx, align 4, !dbg !6855
  br label %for.cond, !dbg !6856, !llvm.loop !6857

for.end148:                                       ; preds = %for.cond
  store i32 0, i32* %ptrIdx, align 4, !dbg !6859
  br label %for.cond149, !dbg !6861

for.cond149:                                      ; preds = %for.inc215, %for.end148
  %236 = load i32, i32* %ptrIdx, align 4, !dbg !6862
  %237 = load i32, i32* %numEffectedE.addr, align 4, !dbg !6864
  %cmp150 = icmp slt i32 %236, %237, !dbg !6865
  br i1 %cmp150, label %for.body152, label %for.end217, !dbg !6866

for.body152:                                      ; preds = %for.cond149
  call void @llvm.dbg.declare(metadata %struct.CCGEdge** %e, metadata !6867, metadata !DIExpression()), !dbg !6869
  %238 = load %struct.CCGEdge**, %struct.CCGEdge*** %effectedE.addr, align 8, !dbg !6870
  %239 = load i32, i32* %ptrIdx, align 4, !dbg !6871
  %idxprom153 = sext i32 %239 to i64, !dbg !6870
  %arrayidx154 = getelementptr inbounds %struct.CCGEdge*, %struct.CCGEdge** %238, i64 %idxprom153, !dbg !6870
  %240 = load %struct.CCGEdge*, %struct.CCGEdge** %arrayidx154, align 8, !dbg !6870
  store %struct.CCGEdge* %240, %struct.CCGEdge** %e, align 8, !dbg !6869
  call void @llvm.dbg.declare(metadata float* %sharpness, metadata !6872, metadata !DIExpression()), !dbg !6873
  %241 = load %struct.CCGEdge*, %struct.CCGEdge** %e, align 8, !dbg !6874
  %242 = load i32, i32* %curLvl.addr, align 4, !dbg !6875
  %call155 = call float @EDGE_getSharpness(%struct.CCGEdge* %241, i32 %242), !dbg !6876
  store float %call155, float* %sharpness, align 4, !dbg !6873
  call void @llvm.dbg.declare(metadata i32* %x156, metadata !6877, metadata !DIExpression()), !dbg !6878
  call void @llvm.dbg.declare(metadata i32* %j, metadata !6879, metadata !DIExpression()), !dbg !6880
  %243 = load %struct.CCGEdge*, %struct.CCGEdge** %e, align 8, !dbg !6881
  %call157 = call i32 @_edge_isBoundary(%struct.CCGEdge* %243), !dbg !6883
  %tobool = icmp ne i32 %call157, 0, !dbg !6883
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !6884

lor.lhs.false:                                    ; preds = %for.body152
  %244 = load float, float* %sharpness, align 4, !dbg !6885
  %cmp158 = fcmp ogt float %244, 1.000000e+00, !dbg !6886
  br i1 %cmp158, label %if.then, label %if.else, !dbg !6887

if.then:                                          ; preds = %lor.lhs.false, %for.body152
  store i32 0, i32* %x156, align 4, !dbg !6888
  br label %for.cond160, !dbg !6891

for.cond160:                                      ; preds = %for.inc176, %if.then
  %245 = load i32, i32* %x156, align 4, !dbg !6892
  %246 = load i32, i32* %edgeSize, align 4, !dbg !6894
  %sub161 = sub nsw i32 %246, 1, !dbg !6895
  %cmp162 = icmp slt i32 %245, %sub161, !dbg !6896
  br i1 %cmp162, label %for.body164, label %for.end178, !dbg !6897

for.body164:                                      ; preds = %for.cond160
  call void @llvm.dbg.declare(metadata i32* %fx165, metadata !6898, metadata !DIExpression()), !dbg !6900
  %247 = load i32, i32* %x156, align 4, !dbg !6901
  %mul166 = mul nsw i32 %247, 2, !dbg !6902
  %add167 = add nsw i32 %mul166, 1, !dbg !6903
  store i32 %add167, i32* %fx165, align 4, !dbg !6900
  call void @llvm.dbg.declare(metadata float** %co0168, metadata !6904, metadata !DIExpression()), !dbg !6905
  %248 = load %struct.CCGEdge*, %struct.CCGEdge** %e, align 8, !dbg !6906
  %249 = load i32, i32* %curLvl.addr, align 4, !dbg !6906
  %250 = load i32, i32* %x156, align 4, !dbg !6906
  %add169 = add nsw i32 %250, 0, !dbg !6906
  %251 = load i32, i32* %vertDataSize, align 4, !dbg !6906
  %call170 = call i8* @_edge_getCo(%struct.CCGEdge* %248, i32 %249, i32 %add169, i32 %251), !dbg !6906
  %252 = bitcast i8* %call170 to float*, !dbg !6906
  store float* %252, float** %co0168, align 8, !dbg !6905
  call void @llvm.dbg.declare(metadata float** %co1171, metadata !6907, metadata !DIExpression()), !dbg !6908
  %253 = load %struct.CCGEdge*, %struct.CCGEdge** %e, align 8, !dbg !6909
  %254 = load i32, i32* %curLvl.addr, align 4, !dbg !6909
  %255 = load i32, i32* %x156, align 4, !dbg !6909
  %add172 = add nsw i32 %255, 1, !dbg !6909
  %256 = load i32, i32* %vertDataSize, align 4, !dbg !6909
  %call173 = call i8* @_edge_getCo(%struct.CCGEdge* %253, i32 %254, i32 %add172, i32 %256), !dbg !6909
  %257 = bitcast i8* %call173 to float*, !dbg !6909
  store float* %257, float** %co1171, align 8, !dbg !6908
  call void @llvm.dbg.declare(metadata float** %co174, metadata !6910, metadata !DIExpression()), !dbg !6911
  %258 = load %struct.CCGEdge*, %struct.CCGEdge** %e, align 8, !dbg !6912
  %259 = load i32, i32* %nextLvl, align 4, !dbg !6912
  %260 = load i32, i32* %fx165, align 4, !dbg !6912
  %261 = load i32, i32* %vertDataSize, align 4, !dbg !6912
  %call175 = call i8* @_edge_getCo(%struct.CCGEdge* %258, i32 %259, i32 %260, i32 %261), !dbg !6912
  %262 = bitcast i8* %call175 to float*, !dbg !6912
  store float* %262, float** %co174, align 8, !dbg !6911
  %263 = load float*, float** %co174, align 8, !dbg !6913
  %264 = load float*, float** %co0168, align 8, !dbg !6914
  %265 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !6915
  call void @VertDataCopy(float* %263, float* %264, %struct.CCGSubSurf* %265), !dbg !6916
  %266 = load float*, float** %co174, align 8, !dbg !6917
  %267 = load float*, float** %co1171, align 8, !dbg !6918
  %268 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !6919
  call void @VertDataAdd(float* %266, float* %267, %struct.CCGSubSurf* %268), !dbg !6920
  %269 = load float*, float** %co174, align 8, !dbg !6921
  %270 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !6922
  call void @VertDataMulN(float* %269, float 5.000000e-01, %struct.CCGSubSurf* %270), !dbg !6923
  br label %for.inc176, !dbg !6924

for.inc176:                                       ; preds = %for.body164
  %271 = load i32, i32* %x156, align 4, !dbg !6925
  %inc177 = add nsw i32 %271, 1, !dbg !6925
  store i32 %inc177, i32* %x156, align 4, !dbg !6925
  br label %for.cond160, !dbg !6926, !llvm.loop !6927

for.end178:                                       ; preds = %for.cond160
  br label %if.end, !dbg !6929

if.else:                                          ; preds = %lor.lhs.false
  store i32 0, i32* %x156, align 4, !dbg !6930
  br label %for.cond179, !dbg !6933

for.cond179:                                      ; preds = %for.inc212, %if.else
  %272 = load i32, i32* %x156, align 4, !dbg !6934
  %273 = load i32, i32* %edgeSize, align 4, !dbg !6936
  %sub180 = sub nsw i32 %273, 1, !dbg !6937
  %cmp181 = icmp slt i32 %272, %sub180, !dbg !6938
  br i1 %cmp181, label %for.body183, label %for.end214, !dbg !6939

for.body183:                                      ; preds = %for.cond179
  call void @llvm.dbg.declare(metadata i32* %fx184, metadata !6940, metadata !DIExpression()), !dbg !6942
  %274 = load i32, i32* %x156, align 4, !dbg !6943
  %mul185 = mul nsw i32 %274, 2, !dbg !6944
  %add186 = add nsw i32 %mul185, 1, !dbg !6945
  store i32 %add186, i32* %fx184, align 4, !dbg !6942
  call void @llvm.dbg.declare(metadata float** %co0187, metadata !6946, metadata !DIExpression()), !dbg !6947
  %275 = load %struct.CCGEdge*, %struct.CCGEdge** %e, align 8, !dbg !6948
  %276 = load i32, i32* %curLvl.addr, align 4, !dbg !6948
  %277 = load i32, i32* %x156, align 4, !dbg !6948
  %add188 = add nsw i32 %277, 0, !dbg !6948
  %278 = load i32, i32* %vertDataSize, align 4, !dbg !6948
  %call189 = call i8* @_edge_getCo(%struct.CCGEdge* %275, i32 %276, i32 %add188, i32 %278), !dbg !6948
  %279 = bitcast i8* %call189 to float*, !dbg !6948
  store float* %279, float** %co0187, align 8, !dbg !6947
  call void @llvm.dbg.declare(metadata float** %co1190, metadata !6949, metadata !DIExpression()), !dbg !6950
  %280 = load %struct.CCGEdge*, %struct.CCGEdge** %e, align 8, !dbg !6951
  %281 = load i32, i32* %curLvl.addr, align 4, !dbg !6951
  %282 = load i32, i32* %x156, align 4, !dbg !6951
  %add191 = add nsw i32 %282, 1, !dbg !6951
  %283 = load i32, i32* %vertDataSize, align 4, !dbg !6951
  %call192 = call i8* @_edge_getCo(%struct.CCGEdge* %280, i32 %281, i32 %add191, i32 %283), !dbg !6951
  %284 = bitcast i8* %call192 to float*, !dbg !6951
  store float* %284, float** %co1190, align 8, !dbg !6950
  call void @llvm.dbg.declare(metadata float** %co193, metadata !6952, metadata !DIExpression()), !dbg !6953
  %285 = load %struct.CCGEdge*, %struct.CCGEdge** %e, align 8, !dbg !6954
  %286 = load i32, i32* %nextLvl, align 4, !dbg !6954
  %287 = load i32, i32* %fx184, align 4, !dbg !6954
  %288 = load i32, i32* %vertDataSize, align 4, !dbg !6954
  %call194 = call i8* @_edge_getCo(%struct.CCGEdge* %285, i32 %286, i32 %287, i32 %288), !dbg !6954
  %289 = bitcast i8* %call194 to float*, !dbg !6954
  store float* %289, float** %co193, align 8, !dbg !6953
  call void @llvm.dbg.declare(metadata i32* %numFaces, metadata !6955, metadata !DIExpression()), !dbg !6956
  store i32 0, i32* %numFaces, align 4, !dbg !6956
  %290 = load float*, float** %q, align 8, !dbg !6957
  %291 = load float*, float** %co0187, align 8, !dbg !6958
  %292 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !6959
  call void @VertDataCopy(float* %290, float* %291, %struct.CCGSubSurf* %292), !dbg !6960
  %293 = load float*, float** %q, align 8, !dbg !6961
  %294 = load float*, float** %co1190, align 8, !dbg !6962
  %295 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !6963
  call void @VertDataAdd(float* %293, float* %294, %struct.CCGSubSurf* %295), !dbg !6964
  store i32 0, i32* %j, align 4, !dbg !6965
  br label %for.cond195, !dbg !6967

for.cond195:                                      ; preds = %for.inc207, %for.body183
  %296 = load i32, i32* %j, align 4, !dbg !6968
  %297 = load %struct.CCGEdge*, %struct.CCGEdge** %e, align 8, !dbg !6970
  %numFaces196 = getelementptr inbounds %struct.CCGEdge, %struct.CCGEdge* %297, i32 0, i32 2, !dbg !6971
  %298 = load i16, i16* %numFaces196, align 8, !dbg !6971
  %conv197 = sext i16 %298 to i32, !dbg !6970
  %cmp198 = icmp slt i32 %296, %conv197, !dbg !6972
  br i1 %cmp198, label %for.body200, label %for.end209, !dbg !6973

for.body200:                                      ; preds = %for.cond195
  call void @llvm.dbg.declare(metadata %struct.CCGFace** %f201, metadata !6974, metadata !DIExpression()), !dbg !6976
  %299 = load %struct.CCGEdge*, %struct.CCGEdge** %e, align 8, !dbg !6977
  %faces = getelementptr inbounds %struct.CCGEdge, %struct.CCGEdge* %299, i32 0, i32 7, !dbg !6978
  %300 = load %struct.CCGFace**, %struct.CCGFace*** %faces, align 8, !dbg !6978
  %301 = load i32, i32* %j, align 4, !dbg !6979
  %idxprom202 = sext i32 %301 to i64, !dbg !6977
  %arrayidx203 = getelementptr inbounds %struct.CCGFace*, %struct.CCGFace** %300, i64 %idxprom202, !dbg !6977
  %302 = load %struct.CCGFace*, %struct.CCGFace** %arrayidx203, align 8, !dbg !6977
  store %struct.CCGFace* %302, %struct.CCGFace** %f201, align 8, !dbg !6976
  call void @llvm.dbg.declare(metadata i32* %f_ed_idx, metadata !6980, metadata !DIExpression()), !dbg !6981
  %303 = load %struct.CCGFace*, %struct.CCGFace** %f201, align 8, !dbg !6982
  %304 = load %struct.CCGEdge*, %struct.CCGEdge** %e, align 8, !dbg !6983
  %call204 = call i32 @_face_getEdgeIndex(%struct.CCGFace* %303, %struct.CCGEdge* %304), !dbg !6984
  store i32 %call204, i32* %f_ed_idx, align 4, !dbg !6981
  %305 = load float*, float** %q, align 8, !dbg !6985
  %306 = load %struct.CCGFace*, %struct.CCGFace** %f201, align 8, !dbg !6986
  %307 = load %struct.CCGEdge*, %struct.CCGEdge** %e, align 8, !dbg !6987
  %308 = load i32, i32* %f_ed_idx, align 4, !dbg !6988
  %309 = load i32, i32* %nextLvl, align 4, !dbg !6989
  %310 = load i32, i32* %fx184, align 4, !dbg !6990
  %311 = load i32, i32* %subdivLevels, align 4, !dbg !6991
  %312 = load i32, i32* %vertDataSize, align 4, !dbg !6992
  %call205 = call i8* @_face_getIFCoEdge(%struct.CCGFace* %306, %struct.CCGEdge* %307, i32 %308, i32 %309, i32 %310, i32 1, i32 %311, i32 %312), !dbg !6993
  %313 = bitcast i8* %call205 to float*, !dbg !6993
  %314 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !6994
  call void @VertDataAdd(float* %305, float* %313, %struct.CCGSubSurf* %314), !dbg !6995
  %315 = load i32, i32* %numFaces, align 4, !dbg !6996
  %inc206 = add nsw i32 %315, 1, !dbg !6996
  store i32 %inc206, i32* %numFaces, align 4, !dbg !6996
  br label %for.inc207, !dbg !6997

for.inc207:                                       ; preds = %for.body200
  %316 = load i32, i32* %j, align 4, !dbg !6998
  %inc208 = add nsw i32 %316, 1, !dbg !6998
  store i32 %inc208, i32* %j, align 4, !dbg !6998
  br label %for.cond195, !dbg !6999, !llvm.loop !7000

for.end209:                                       ; preds = %for.cond195
  %317 = load float*, float** %q, align 8, !dbg !7002
  %318 = load i32, i32* %numFaces, align 4, !dbg !7003
  %conv210 = sitofp i32 %318 to float, !dbg !7003
  %add211 = fadd float 2.000000e+00, %conv210, !dbg !7004
  %div = fdiv float 1.000000e+00, %add211, !dbg !7005
  %319 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !7006
  call void @VertDataMulN(float* %317, float %div, %struct.CCGSubSurf* %319), !dbg !7007
  %320 = load float*, float** %r, align 8, !dbg !7008
  %321 = load float*, float** %co0187, align 8, !dbg !7009
  %322 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !7010
  call void @VertDataCopy(float* %320, float* %321, %struct.CCGSubSurf* %322), !dbg !7011
  %323 = load float*, float** %r, align 8, !dbg !7012
  %324 = load float*, float** %co1190, align 8, !dbg !7013
  %325 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !7014
  call void @VertDataAdd(float* %323, float* %324, %struct.CCGSubSurf* %325), !dbg !7015
  %326 = load float*, float** %r, align 8, !dbg !7016
  %327 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !7017
  call void @VertDataMulN(float* %326, float 5.000000e-01, %struct.CCGSubSurf* %327), !dbg !7018
  %328 = load float*, float** %co193, align 8, !dbg !7019
  %329 = load float*, float** %q, align 8, !dbg !7020
  %330 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !7021
  call void @VertDataCopy(float* %328, float* %329, %struct.CCGSubSurf* %330), !dbg !7022
  %331 = load float*, float** %r, align 8, !dbg !7023
  %332 = load float*, float** %q, align 8, !dbg !7024
  %333 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !7025
  call void @VertDataSub(float* %331, float* %332, %struct.CCGSubSurf* %333), !dbg !7026
  %334 = load float*, float** %r, align 8, !dbg !7027
  %335 = load float, float* %sharpness, align 4, !dbg !7028
  %336 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !7029
  call void @VertDataMulN(float* %334, float %335, %struct.CCGSubSurf* %336), !dbg !7030
  %337 = load float*, float** %co193, align 8, !dbg !7031
  %338 = load float*, float** %r, align 8, !dbg !7032
  %339 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !7033
  call void @VertDataAdd(float* %337, float* %338, %struct.CCGSubSurf* %339), !dbg !7034
  br label %for.inc212, !dbg !7035

for.inc212:                                       ; preds = %for.end209
  %340 = load i32, i32* %x156, align 4, !dbg !7036
  %inc213 = add nsw i32 %340, 1, !dbg !7036
  store i32 %inc213, i32* %x156, align 4, !dbg !7036
  br label %for.cond179, !dbg !7037, !llvm.loop !7038

for.end214:                                       ; preds = %for.cond179
  br label %if.end

if.end:                                           ; preds = %for.end214, %for.end178
  br label %for.inc215, !dbg !7040

for.inc215:                                       ; preds = %if.end
  %341 = load i32, i32* %ptrIdx, align 4, !dbg !7041
  %inc216 = add nsw i32 %341, 1, !dbg !7041
  store i32 %inc216, i32* %ptrIdx, align 4, !dbg !7041
  br label %for.cond149, !dbg !7042, !llvm.loop !7043

for.end217:                                       ; preds = %for.cond149
  store i32 0, i32* %ptrIdx, align 4, !dbg !7045
  br label %for.cond218, !dbg !7047

for.cond218:                                      ; preds = %for.inc401, %for.end217
  %342 = load i32, i32* %ptrIdx, align 4, !dbg !7048
  %343 = load i32, i32* %numEffectedV.addr, align 4, !dbg !7050
  %cmp219 = icmp slt i32 %342, %343, !dbg !7051
  br i1 %cmp219, label %for.body221, label %for.end403, !dbg !7052

for.body221:                                      ; preds = %for.cond218
  call void @llvm.dbg.declare(metadata %struct.CCGVert** %v, metadata !7053, metadata !DIExpression()), !dbg !7055
  %344 = load %struct.CCGVert**, %struct.CCGVert*** %effectedV.addr, align 8, !dbg !7056
  %345 = load i32, i32* %ptrIdx, align 4, !dbg !7057
  %idxprom222 = sext i32 %345 to i64, !dbg !7056
  %arrayidx223 = getelementptr inbounds %struct.CCGVert*, %struct.CCGVert** %344, i64 %idxprom222, !dbg !7056
  %346 = load %struct.CCGVert*, %struct.CCGVert** %arrayidx223, align 8, !dbg !7056
  store %struct.CCGVert* %346, %struct.CCGVert** %v, align 8, !dbg !7055
  call void @llvm.dbg.declare(metadata float** %co224, metadata !7058, metadata !DIExpression()), !dbg !7059
  %347 = load %struct.CCGVert*, %struct.CCGVert** %v, align 8, !dbg !7060
  %348 = load i32, i32* %curLvl.addr, align 4, !dbg !7060
  %349 = load i32, i32* %vertDataSize, align 4, !dbg !7060
  %call225 = call i8* @_vert_getCo(%struct.CCGVert* %347, i32 %348, i32 %349), !dbg !7060
  %350 = bitcast i8* %call225 to float*, !dbg !7060
  store float* %350, float** %co224, align 8, !dbg !7059
  call void @llvm.dbg.declare(metadata float** %nCo, metadata !7061, metadata !DIExpression()), !dbg !7062
  %351 = load %struct.CCGVert*, %struct.CCGVert** %v, align 8, !dbg !7063
  %352 = load i32, i32* %nextLvl, align 4, !dbg !7063
  %353 = load i32, i32* %vertDataSize, align 4, !dbg !7063
  %call226 = call i8* @_vert_getCo(%struct.CCGVert* %351, i32 %352, i32 %353), !dbg !7063
  %354 = bitcast i8* %call226 to float*, !dbg !7063
  store float* %354, float** %nCo, align 8, !dbg !7062
  call void @llvm.dbg.declare(metadata i32* %sharpCount, metadata !7064, metadata !DIExpression()), !dbg !7065
  store i32 0, i32* %sharpCount, align 4, !dbg !7065
  call void @llvm.dbg.declare(metadata i32* %allSharp, metadata !7066, metadata !DIExpression()), !dbg !7067
  store i32 1, i32* %allSharp, align 4, !dbg !7067
  call void @llvm.dbg.declare(metadata float* %avgSharpness, metadata !7068, metadata !DIExpression()), !dbg !7069
  store float 0.000000e+00, float* %avgSharpness, align 4, !dbg !7069
  call void @llvm.dbg.declare(metadata i32* %j227, metadata !7070, metadata !DIExpression()), !dbg !7071
  call void @llvm.dbg.declare(metadata i32* %seam, metadata !7072, metadata !DIExpression()), !dbg !7073
  %355 = load %struct.CCGVert*, %struct.CCGVert** %v, align 8, !dbg !7074
  %call228 = call i32 @VERT_seam(%struct.CCGVert* %355), !dbg !7075
  store i32 %call228, i32* %seam, align 4, !dbg !7073
  call void @llvm.dbg.declare(metadata i32* %seamEdges, metadata !7076, metadata !DIExpression()), !dbg !7077
  store i32 0, i32* %seamEdges, align 4, !dbg !7077
  store i32 0, i32* %j227, align 4, !dbg !7078
  br label %for.cond229, !dbg !7080

for.cond229:                                      ; preds = %for.inc252, %for.body221
  %356 = load i32, i32* %j227, align 4, !dbg !7081
  %357 = load %struct.CCGVert*, %struct.CCGVert** %v, align 8, !dbg !7083
  %numEdges = getelementptr inbounds %struct.CCGVert, %struct.CCGVert* %357, i32 0, i32 2, !dbg !7084
  %358 = load i16, i16* %numEdges, align 8, !dbg !7084
  %conv230 = sext i16 %358 to i32, !dbg !7083
  %cmp231 = icmp slt i32 %356, %conv230, !dbg !7085
  br i1 %cmp231, label %for.body233, label %for.end254, !dbg !7086

for.body233:                                      ; preds = %for.cond229
  call void @llvm.dbg.declare(metadata %struct.CCGEdge** %e234, metadata !7087, metadata !DIExpression()), !dbg !7089
  %359 = load %struct.CCGVert*, %struct.CCGVert** %v, align 8, !dbg !7090
  %edges = getelementptr inbounds %struct.CCGVert, %struct.CCGVert* %359, i32 0, i32 6, !dbg !7091
  %360 = load %struct.CCGEdge**, %struct.CCGEdge*** %edges, align 8, !dbg !7091
  %361 = load i32, i32* %j227, align 4, !dbg !7092
  %idxprom235 = sext i32 %361 to i64, !dbg !7090
  %arrayidx236 = getelementptr inbounds %struct.CCGEdge*, %struct.CCGEdge** %360, i64 %idxprom235, !dbg !7090
  %362 = load %struct.CCGEdge*, %struct.CCGEdge** %arrayidx236, align 8, !dbg !7090
  store %struct.CCGEdge* %362, %struct.CCGEdge** %e234, align 8, !dbg !7089
  call void @llvm.dbg.declare(metadata float* %sharpness237, metadata !7093, metadata !DIExpression()), !dbg !7094
  %363 = load %struct.CCGEdge*, %struct.CCGEdge** %e234, align 8, !dbg !7095
  %364 = load i32, i32* %curLvl.addr, align 4, !dbg !7096
  %call238 = call float @EDGE_getSharpness(%struct.CCGEdge* %363, i32 %364), !dbg !7097
  store float %call238, float* %sharpness237, align 4, !dbg !7094
  %365 = load i32, i32* %seam, align 4, !dbg !7098
  %tobool239 = icmp ne i32 %365, 0, !dbg !7098
  br i1 %tobool239, label %land.lhs.true, label %if.end244, !dbg !7100

land.lhs.true:                                    ; preds = %for.body233
  %366 = load %struct.CCGEdge*, %struct.CCGEdge** %e234, align 8, !dbg !7101
  %call240 = call i32 @_edge_isBoundary(%struct.CCGEdge* %366), !dbg !7102
  %tobool241 = icmp ne i32 %call240, 0, !dbg !7102
  br i1 %tobool241, label %if.then242, label %if.end244, !dbg !7103

if.then242:                                       ; preds = %land.lhs.true
  %367 = load i32, i32* %seamEdges, align 4, !dbg !7104
  %inc243 = add nsw i32 %367, 1, !dbg !7104
  store i32 %inc243, i32* %seamEdges, align 4, !dbg !7104
  br label %if.end244, !dbg !7105

if.end244:                                        ; preds = %if.then242, %land.lhs.true, %for.body233
  %368 = load float, float* %sharpness237, align 4, !dbg !7106
  %cmp245 = fcmp une float %368, 0.000000e+00, !dbg !7108
  br i1 %cmp245, label %if.then247, label %if.else250, !dbg !7109

if.then247:                                       ; preds = %if.end244
  %369 = load i32, i32* %sharpCount, align 4, !dbg !7110
  %inc248 = add nsw i32 %369, 1, !dbg !7110
  store i32 %inc248, i32* %sharpCount, align 4, !dbg !7110
  %370 = load float, float* %sharpness237, align 4, !dbg !7112
  %371 = load float, float* %avgSharpness, align 4, !dbg !7113
  %add249 = fadd float %371, %370, !dbg !7113
  store float %add249, float* %avgSharpness, align 4, !dbg !7113
  br label %if.end251, !dbg !7114

if.else250:                                       ; preds = %if.end244
  store i32 0, i32* %allSharp, align 4, !dbg !7115
  br label %if.end251

if.end251:                                        ; preds = %if.else250, %if.then247
  br label %for.inc252, !dbg !7117

for.inc252:                                       ; preds = %if.end251
  %372 = load i32, i32* %j227, align 4, !dbg !7118
  %inc253 = add nsw i32 %372, 1, !dbg !7118
  store i32 %inc253, i32* %j227, align 4, !dbg !7118
  br label %for.cond229, !dbg !7119, !llvm.loop !7120

for.end254:                                       ; preds = %for.cond229
  %373 = load i32, i32* %sharpCount, align 4, !dbg !7122
  %tobool255 = icmp ne i32 %373, 0, !dbg !7122
  br i1 %tobool255, label %if.then256, label %if.end263, !dbg !7124

if.then256:                                       ; preds = %for.end254
  %374 = load i32, i32* %sharpCount, align 4, !dbg !7125
  %conv257 = sitofp i32 %374 to float, !dbg !7125
  %375 = load float, float* %avgSharpness, align 4, !dbg !7127
  %div258 = fdiv float %375, %conv257, !dbg !7127
  store float %div258, float* %avgSharpness, align 4, !dbg !7127
  %376 = load float, float* %avgSharpness, align 4, !dbg !7128
  %cmp259 = fcmp ogt float %376, 1.000000e+00, !dbg !7130
  br i1 %cmp259, label %if.then261, label %if.end262, !dbg !7131

if.then261:                                       ; preds = %if.then256
  store float 1.000000e+00, float* %avgSharpness, align 4, !dbg !7132
  br label %if.end262, !dbg !7134

if.end262:                                        ; preds = %if.then261, %if.then256
  br label %if.end263, !dbg !7135

if.end263:                                        ; preds = %if.end262, %for.end254
  %377 = load i32, i32* %seamEdges, align 4, !dbg !7136
  %cmp264 = icmp slt i32 %377, 2, !dbg !7138
  br i1 %cmp264, label %if.then271, label %lor.lhs.false266, !dbg !7139

lor.lhs.false266:                                 ; preds = %if.end263
  %378 = load i32, i32* %seamEdges, align 4, !dbg !7140
  %379 = load %struct.CCGVert*, %struct.CCGVert** %v, align 8, !dbg !7141
  %numEdges267 = getelementptr inbounds %struct.CCGVert, %struct.CCGVert* %379, i32 0, i32 2, !dbg !7142
  %380 = load i16, i16* %numEdges267, align 8, !dbg !7142
  %conv268 = sext i16 %380 to i32, !dbg !7141
  %cmp269 = icmp ne i32 %378, %conv268, !dbg !7143
  br i1 %cmp269, label %if.then271, label %if.end272, !dbg !7144

if.then271:                                       ; preds = %lor.lhs.false266, %if.end263
  store i32 0, i32* %seam, align 4, !dbg !7145
  br label %if.end272, !dbg !7146

if.end272:                                        ; preds = %if.then271, %lor.lhs.false266
  %381 = load %struct.CCGVert*, %struct.CCGVert** %v, align 8, !dbg !7147
  %numEdges273 = getelementptr inbounds %struct.CCGVert, %struct.CCGVert* %381, i32 0, i32 2, !dbg !7149
  %382 = load i16, i16* %numEdges273, align 8, !dbg !7149
  %tobool274 = icmp ne i16 %382, 0, !dbg !7147
  br i1 %tobool274, label %lor.lhs.false275, label %if.then278, !dbg !7150

lor.lhs.false275:                                 ; preds = %if.end272
  %383 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !7151
  %meshIFC276 = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %383, i32 0, i32 3, !dbg !7152
  %simpleSubdiv = getelementptr inbounds %struct.CCGMeshIFC, %struct.CCGMeshIFC* %meshIFC276, i32 0, i32 5, !dbg !7153
  %384 = load i32, i32* %simpleSubdiv, align 4, !dbg !7153
  %tobool277 = icmp ne i32 %384, 0, !dbg !7151
  br i1 %tobool277, label %if.then278, label %if.else279, !dbg !7154

if.then278:                                       ; preds = %lor.lhs.false275, %if.end272
  %385 = load float*, float** %nCo, align 8, !dbg !7155
  %386 = load float*, float** %co224, align 8, !dbg !7157
  %387 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !7158
  call void @VertDataCopy(float* %385, float* %386, %struct.CCGSubSurf* %387), !dbg !7159
  br label %if.end350, !dbg !7160

if.else279:                                       ; preds = %lor.lhs.false275
  %388 = load %struct.CCGVert*, %struct.CCGVert** %v, align 8, !dbg !7161
  %call280 = call i32 @_vert_isBoundary(%struct.CCGVert* %388), !dbg !7163
  %tobool281 = icmp ne i32 %call280, 0, !dbg !7163
  br i1 %tobool281, label %if.then282, label %if.else304, !dbg !7164

if.then282:                                       ; preds = %if.else279
  call void @llvm.dbg.declare(metadata i32* %numBoundary, metadata !7165, metadata !DIExpression()), !dbg !7167
  store i32 0, i32* %numBoundary, align 4, !dbg !7167
  %389 = load float*, float** %r, align 8, !dbg !7168
  %390 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !7169
  call void @VertDataZero(float* %389, %struct.CCGSubSurf* %390), !dbg !7170
  store i32 0, i32* %j227, align 4, !dbg !7171
  br label %for.cond283, !dbg !7173

for.cond283:                                      ; preds = %for.inc299, %if.then282
  %391 = load i32, i32* %j227, align 4, !dbg !7174
  %392 = load %struct.CCGVert*, %struct.CCGVert** %v, align 8, !dbg !7176
  %numEdges284 = getelementptr inbounds %struct.CCGVert, %struct.CCGVert* %392, i32 0, i32 2, !dbg !7177
  %393 = load i16, i16* %numEdges284, align 8, !dbg !7177
  %conv285 = sext i16 %393 to i32, !dbg !7176
  %cmp286 = icmp slt i32 %391, %conv285, !dbg !7178
  br i1 %cmp286, label %for.body288, label %for.end301, !dbg !7179

for.body288:                                      ; preds = %for.cond283
  call void @llvm.dbg.declare(metadata %struct.CCGEdge** %e289, metadata !7180, metadata !DIExpression()), !dbg !7182
  %394 = load %struct.CCGVert*, %struct.CCGVert** %v, align 8, !dbg !7183
  %edges290 = getelementptr inbounds %struct.CCGVert, %struct.CCGVert* %394, i32 0, i32 6, !dbg !7184
  %395 = load %struct.CCGEdge**, %struct.CCGEdge*** %edges290, align 8, !dbg !7184
  %396 = load i32, i32* %j227, align 4, !dbg !7185
  %idxprom291 = sext i32 %396 to i64, !dbg !7183
  %arrayidx292 = getelementptr inbounds %struct.CCGEdge*, %struct.CCGEdge** %395, i64 %idxprom291, !dbg !7183
  %397 = load %struct.CCGEdge*, %struct.CCGEdge** %arrayidx292, align 8, !dbg !7183
  store %struct.CCGEdge* %397, %struct.CCGEdge** %e289, align 8, !dbg !7182
  %398 = load %struct.CCGEdge*, %struct.CCGEdge** %e289, align 8, !dbg !7186
  %call293 = call i32 @_edge_isBoundary(%struct.CCGEdge* %398), !dbg !7188
  %tobool294 = icmp ne i32 %call293, 0, !dbg !7188
  br i1 %tobool294, label %if.then295, label %if.end298, !dbg !7189

if.then295:                                       ; preds = %for.body288
  %399 = load float*, float** %r, align 8, !dbg !7190
  %400 = load %struct.CCGEdge*, %struct.CCGEdge** %e289, align 8, !dbg !7192
  %401 = load %struct.CCGVert*, %struct.CCGVert** %v, align 8, !dbg !7193
  %402 = load i32, i32* %curLvl.addr, align 4, !dbg !7194
  %403 = load i32, i32* %vertDataSize, align 4, !dbg !7195
  %call296 = call i8* @_edge_getCoVert(%struct.CCGEdge* %400, %struct.CCGVert* %401, i32 %402, i32 1, i32 %403), !dbg !7196
  %404 = bitcast i8* %call296 to float*, !dbg !7196
  %405 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !7197
  call void @VertDataAdd(float* %399, float* %404, %struct.CCGSubSurf* %405), !dbg !7198
  %406 = load i32, i32* %numBoundary, align 4, !dbg !7199
  %inc297 = add nsw i32 %406, 1, !dbg !7199
  store i32 %inc297, i32* %numBoundary, align 4, !dbg !7199
  br label %if.end298, !dbg !7200

if.end298:                                        ; preds = %if.then295, %for.body288
  br label %for.inc299, !dbg !7201

for.inc299:                                       ; preds = %if.end298
  %407 = load i32, i32* %j227, align 4, !dbg !7202
  %inc300 = add nsw i32 %407, 1, !dbg !7202
  store i32 %inc300, i32* %j227, align 4, !dbg !7202
  br label %for.cond283, !dbg !7203, !llvm.loop !7204

for.end301:                                       ; preds = %for.cond283
  %408 = load float*, float** %nCo, align 8, !dbg !7206
  %409 = load float*, float** %co224, align 8, !dbg !7207
  %410 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !7208
  call void @VertDataCopy(float* %408, float* %409, %struct.CCGSubSurf* %410), !dbg !7209
  %411 = load float*, float** %nCo, align 8, !dbg !7210
  %412 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !7211
  call void @VertDataMulN(float* %411, float 7.500000e-01, %struct.CCGSubSurf* %412), !dbg !7212
  %413 = load float*, float** %r, align 8, !dbg !7213
  %414 = load i32, i32* %numBoundary, align 4, !dbg !7214
  %conv302 = sitofp i32 %414 to float, !dbg !7214
  %div303 = fdiv float 2.500000e-01, %conv302, !dbg !7215
  %415 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !7216
  call void @VertDataMulN(float* %413, float %div303, %struct.CCGSubSurf* %415), !dbg !7217
  %416 = load float*, float** %nCo, align 8, !dbg !7218
  %417 = load float*, float** %r, align 8, !dbg !7219
  %418 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !7220
  call void @VertDataAdd(float* %416, float* %417, %struct.CCGSubSurf* %418), !dbg !7221
  br label %if.end349, !dbg !7222

if.else304:                                       ; preds = %if.else279
  call void @llvm.dbg.declare(metadata i32* %cornerIdx305, metadata !7223, metadata !DIExpression()), !dbg !7225
  %419 = load i32, i32* %curLvl.addr, align 4, !dbg !7226
  %shl = shl i32 1, %419, !dbg !7227
  %add306 = add nsw i32 1, %shl, !dbg !7228
  %sub307 = sub nsw i32 %add306, 2, !dbg !7229
  store i32 %sub307, i32* %cornerIdx305, align 4, !dbg !7225
  call void @llvm.dbg.declare(metadata i32* %numEdges308, metadata !7230, metadata !DIExpression()), !dbg !7231
  store i32 0, i32* %numEdges308, align 4, !dbg !7231
  call void @llvm.dbg.declare(metadata i32* %numFaces309, metadata !7232, metadata !DIExpression()), !dbg !7233
  store i32 0, i32* %numFaces309, align 4, !dbg !7233
  %420 = load float*, float** %q, align 8, !dbg !7234
  %421 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !7235
  call void @VertDataZero(float* %420, %struct.CCGSubSurf* %421), !dbg !7236
  store i32 0, i32* %j227, align 4, !dbg !7237
  br label %for.cond310, !dbg !7239

for.cond310:                                      ; preds = %for.inc323, %if.else304
  %422 = load i32, i32* %j227, align 4, !dbg !7240
  %423 = load %struct.CCGVert*, %struct.CCGVert** %v, align 8, !dbg !7242
  %numFaces311 = getelementptr inbounds %struct.CCGVert, %struct.CCGVert* %423, i32 0, i32 3, !dbg !7243
  %424 = load i16, i16* %numFaces311, align 2, !dbg !7243
  %conv312 = sext i16 %424 to i32, !dbg !7242
  %cmp313 = icmp slt i32 %422, %conv312, !dbg !7244
  br i1 %cmp313, label %for.body315, label %for.end325, !dbg !7245

for.body315:                                      ; preds = %for.cond310
  call void @llvm.dbg.declare(metadata %struct.CCGFace** %f316, metadata !7246, metadata !DIExpression()), !dbg !7248
  %425 = load %struct.CCGVert*, %struct.CCGVert** %v, align 8, !dbg !7249
  %faces317 = getelementptr inbounds %struct.CCGVert, %struct.CCGVert* %425, i32 0, i32 7, !dbg !7250
  %426 = load %struct.CCGFace**, %struct.CCGFace*** %faces317, align 8, !dbg !7250
  %427 = load i32, i32* %j227, align 4, !dbg !7251
  %idxprom318 = sext i32 %427 to i64, !dbg !7249
  %arrayidx319 = getelementptr inbounds %struct.CCGFace*, %struct.CCGFace** %426, i64 %idxprom318, !dbg !7249
  %428 = load %struct.CCGFace*, %struct.CCGFace** %arrayidx319, align 8, !dbg !7249
  store %struct.CCGFace* %428, %struct.CCGFace** %f316, align 8, !dbg !7248
  %429 = load float*, float** %q, align 8, !dbg !7252
  %430 = load %struct.CCGFace*, %struct.CCGFace** %f316, align 8, !dbg !7253
  %431 = load i32, i32* %nextLvl, align 4, !dbg !7253
  %432 = load %struct.CCGFace*, %struct.CCGFace** %f316, align 8, !dbg !7253
  %433 = load %struct.CCGVert*, %struct.CCGVert** %v, align 8, !dbg !7253
  %call320 = call i32 @_face_getVertIndex(%struct.CCGFace* %432, %struct.CCGVert* %433), !dbg !7253
  %434 = load i32, i32* %cornerIdx305, align 4, !dbg !7253
  %435 = load i32, i32* %cornerIdx305, align 4, !dbg !7253
  %436 = load i32, i32* %subdivLevels, align 4, !dbg !7253
  %437 = load i32, i32* %vertDataSize, align 4, !dbg !7253
  %call321 = call i8* @_face_getIFCo(%struct.CCGFace* %430, i32 %431, i32 %call320, i32 %434, i32 %435, i32 %436, i32 %437), !dbg !7253
  %438 = bitcast i8* %call321 to float*, !dbg !7253
  %439 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !7254
  call void @VertDataAdd(float* %429, float* %438, %struct.CCGSubSurf* %439), !dbg !7255
  %440 = load i32, i32* %numFaces309, align 4, !dbg !7256
  %inc322 = add nsw i32 %440, 1, !dbg !7256
  store i32 %inc322, i32* %numFaces309, align 4, !dbg !7256
  br label %for.inc323, !dbg !7257

for.inc323:                                       ; preds = %for.body315
  %441 = load i32, i32* %j227, align 4, !dbg !7258
  %inc324 = add nsw i32 %441, 1, !dbg !7258
  store i32 %inc324, i32* %j227, align 4, !dbg !7258
  br label %for.cond310, !dbg !7259, !llvm.loop !7260

for.end325:                                       ; preds = %for.cond310
  %442 = load float*, float** %q, align 8, !dbg !7262
  %443 = load i32, i32* %numFaces309, align 4, !dbg !7263
  %conv326 = sitofp i32 %443 to float, !dbg !7263
  %div327 = fdiv float 1.000000e+00, %conv326, !dbg !7264
  %444 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !7265
  call void @VertDataMulN(float* %442, float %div327, %struct.CCGSubSurf* %444), !dbg !7266
  %445 = load float*, float** %r, align 8, !dbg !7267
  %446 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !7268
  call void @VertDataZero(float* %445, %struct.CCGSubSurf* %446), !dbg !7269
  store i32 0, i32* %j227, align 4, !dbg !7270
  br label %for.cond328, !dbg !7272

for.cond328:                                      ; preds = %for.inc340, %for.end325
  %447 = load i32, i32* %j227, align 4, !dbg !7273
  %448 = load %struct.CCGVert*, %struct.CCGVert** %v, align 8, !dbg !7275
  %numEdges329 = getelementptr inbounds %struct.CCGVert, %struct.CCGVert* %448, i32 0, i32 2, !dbg !7276
  %449 = load i16, i16* %numEdges329, align 8, !dbg !7276
  %conv330 = sext i16 %449 to i32, !dbg !7275
  %cmp331 = icmp slt i32 %447, %conv330, !dbg !7277
  br i1 %cmp331, label %for.body333, label %for.end342, !dbg !7278

for.body333:                                      ; preds = %for.cond328
  call void @llvm.dbg.declare(metadata %struct.CCGEdge** %e334, metadata !7279, metadata !DIExpression()), !dbg !7281
  %450 = load %struct.CCGVert*, %struct.CCGVert** %v, align 8, !dbg !7282
  %edges335 = getelementptr inbounds %struct.CCGVert, %struct.CCGVert* %450, i32 0, i32 6, !dbg !7283
  %451 = load %struct.CCGEdge**, %struct.CCGEdge*** %edges335, align 8, !dbg !7283
  %452 = load i32, i32* %j227, align 4, !dbg !7284
  %idxprom336 = sext i32 %452 to i64, !dbg !7282
  %arrayidx337 = getelementptr inbounds %struct.CCGEdge*, %struct.CCGEdge** %451, i64 %idxprom336, !dbg !7282
  %453 = load %struct.CCGEdge*, %struct.CCGEdge** %arrayidx337, align 8, !dbg !7282
  store %struct.CCGEdge* %453, %struct.CCGEdge** %e334, align 8, !dbg !7281
  %454 = load float*, float** %r, align 8, !dbg !7285
  %455 = load %struct.CCGEdge*, %struct.CCGEdge** %e334, align 8, !dbg !7286
  %456 = load %struct.CCGVert*, %struct.CCGVert** %v, align 8, !dbg !7287
  %457 = load i32, i32* %curLvl.addr, align 4, !dbg !7288
  %458 = load i32, i32* %vertDataSize, align 4, !dbg !7289
  %call338 = call i8* @_edge_getCoVert(%struct.CCGEdge* %455, %struct.CCGVert* %456, i32 %457, i32 1, i32 %458), !dbg !7290
  %459 = bitcast i8* %call338 to float*, !dbg !7290
  %460 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !7291
  call void @VertDataAdd(float* %454, float* %459, %struct.CCGSubSurf* %460), !dbg !7292
  %461 = load i32, i32* %numEdges308, align 4, !dbg !7293
  %inc339 = add nsw i32 %461, 1, !dbg !7293
  store i32 %inc339, i32* %numEdges308, align 4, !dbg !7293
  br label %for.inc340, !dbg !7294

for.inc340:                                       ; preds = %for.body333
  %462 = load i32, i32* %j227, align 4, !dbg !7295
  %inc341 = add nsw i32 %462, 1, !dbg !7295
  store i32 %inc341, i32* %j227, align 4, !dbg !7295
  br label %for.cond328, !dbg !7296, !llvm.loop !7297

for.end342:                                       ; preds = %for.cond328
  %463 = load float*, float** %r, align 8, !dbg !7299
  %464 = load i32, i32* %numEdges308, align 4, !dbg !7300
  %conv343 = sitofp i32 %464 to float, !dbg !7300
  %div344 = fdiv float 1.000000e+00, %conv343, !dbg !7301
  %465 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !7302
  call void @VertDataMulN(float* %463, float %div344, %struct.CCGSubSurf* %465), !dbg !7303
  %466 = load float*, float** %nCo, align 8, !dbg !7304
  %467 = load float*, float** %co224, align 8, !dbg !7305
  %468 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !7306
  call void @VertDataCopy(float* %466, float* %467, %struct.CCGSubSurf* %468), !dbg !7307
  %469 = load float*, float** %nCo, align 8, !dbg !7308
  %470 = load i32, i32* %numEdges308, align 4, !dbg !7309
  %conv345 = sitofp i32 %470 to float, !dbg !7309
  %sub346 = fsub float %conv345, 2.000000e+00, !dbg !7310
  %471 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !7311
  call void @VertDataMulN(float* %469, float %sub346, %struct.CCGSubSurf* %471), !dbg !7312
  %472 = load float*, float** %nCo, align 8, !dbg !7313
  %473 = load float*, float** %q, align 8, !dbg !7314
  %474 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !7315
  call void @VertDataAdd(float* %472, float* %473, %struct.CCGSubSurf* %474), !dbg !7316
  %475 = load float*, float** %nCo, align 8, !dbg !7317
  %476 = load float*, float** %r, align 8, !dbg !7318
  %477 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !7319
  call void @VertDataAdd(float* %475, float* %476, %struct.CCGSubSurf* %477), !dbg !7320
  %478 = load float*, float** %nCo, align 8, !dbg !7321
  %479 = load i32, i32* %numEdges308, align 4, !dbg !7322
  %conv347 = sitofp i32 %479 to float, !dbg !7322
  %div348 = fdiv float 1.000000e+00, %conv347, !dbg !7323
  %480 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !7324
  call void @VertDataMulN(float* %478, float %div348, %struct.CCGSubSurf* %480), !dbg !7325
  br label %if.end349

if.end349:                                        ; preds = %for.end342, %for.end301
  br label %if.end350

if.end350:                                        ; preds = %if.end349, %if.then278
  %481 = load i32, i32* %sharpCount, align 4, !dbg !7326
  %cmp351 = icmp sgt i32 %481, 1, !dbg !7328
  br i1 %cmp351, label %land.lhs.true353, label %lor.lhs.false357, !dbg !7329

land.lhs.true353:                                 ; preds = %if.end350
  %482 = load %struct.CCGVert*, %struct.CCGVert** %v, align 8, !dbg !7330
  %numFaces354 = getelementptr inbounds %struct.CCGVert, %struct.CCGVert* %482, i32 0, i32 3, !dbg !7331
  %483 = load i16, i16* %numFaces354, align 2, !dbg !7331
  %conv355 = sext i16 %483 to i32, !dbg !7330
  %tobool356 = icmp ne i32 %conv355, 0, !dbg !7330
  br i1 %tobool356, label %if.then359, label %lor.lhs.false357, !dbg !7332

lor.lhs.false357:                                 ; preds = %land.lhs.true353, %if.end350
  %484 = load i32, i32* %seam, align 4, !dbg !7333
  %tobool358 = icmp ne i32 %484, 0, !dbg !7333
  br i1 %tobool358, label %if.then359, label %if.end400, !dbg !7334

if.then359:                                       ; preds = %lor.lhs.false357, %land.lhs.true353
  %485 = load float*, float** %q, align 8, !dbg !7335
  %486 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !7337
  call void @VertDataZero(float* %485, %struct.CCGSubSurf* %486), !dbg !7338
  %487 = load i32, i32* %seam, align 4, !dbg !7339
  %tobool360 = icmp ne i32 %487, 0, !dbg !7339
  br i1 %tobool360, label %if.then361, label %if.end362, !dbg !7341

if.then361:                                       ; preds = %if.then359
  store float 1.000000e+00, float* %avgSharpness, align 4, !dbg !7342
  %488 = load i32, i32* %seamEdges, align 4, !dbg !7344
  store i32 %488, i32* %sharpCount, align 4, !dbg !7345
  store i32 1, i32* %allSharp, align 4, !dbg !7346
  br label %if.end362, !dbg !7347

if.end362:                                        ; preds = %if.then361, %if.then359
  store i32 0, i32* %j227, align 4, !dbg !7348
  br label %for.cond363, !dbg !7350

for.cond363:                                      ; preds = %for.inc389, %if.end362
  %489 = load i32, i32* %j227, align 4, !dbg !7351
  %490 = load %struct.CCGVert*, %struct.CCGVert** %v, align 8, !dbg !7353
  %numEdges364 = getelementptr inbounds %struct.CCGVert, %struct.CCGVert* %490, i32 0, i32 2, !dbg !7354
  %491 = load i16, i16* %numEdges364, align 8, !dbg !7354
  %conv365 = sext i16 %491 to i32, !dbg !7353
  %cmp366 = icmp slt i32 %489, %conv365, !dbg !7355
  br i1 %cmp366, label %for.body368, label %for.end391, !dbg !7356

for.body368:                                      ; preds = %for.cond363
  call void @llvm.dbg.declare(metadata %struct.CCGEdge** %e369, metadata !7357, metadata !DIExpression()), !dbg !7359
  %492 = load %struct.CCGVert*, %struct.CCGVert** %v, align 8, !dbg !7360
  %edges370 = getelementptr inbounds %struct.CCGVert, %struct.CCGVert* %492, i32 0, i32 6, !dbg !7361
  %493 = load %struct.CCGEdge**, %struct.CCGEdge*** %edges370, align 8, !dbg !7361
  %494 = load i32, i32* %j227, align 4, !dbg !7362
  %idxprom371 = sext i32 %494 to i64, !dbg !7360
  %arrayidx372 = getelementptr inbounds %struct.CCGEdge*, %struct.CCGEdge** %493, i64 %idxprom371, !dbg !7360
  %495 = load %struct.CCGEdge*, %struct.CCGEdge** %arrayidx372, align 8, !dbg !7360
  store %struct.CCGEdge* %495, %struct.CCGEdge** %e369, align 8, !dbg !7359
  call void @llvm.dbg.declare(metadata float* %sharpness373, metadata !7363, metadata !DIExpression()), !dbg !7364
  %496 = load %struct.CCGEdge*, %struct.CCGEdge** %e369, align 8, !dbg !7365
  %497 = load i32, i32* %curLvl.addr, align 4, !dbg !7366
  %call374 = call float @EDGE_getSharpness(%struct.CCGEdge* %496, i32 %497), !dbg !7367
  store float %call374, float* %sharpness373, align 4, !dbg !7364
  %498 = load i32, i32* %seam, align 4, !dbg !7368
  %tobool375 = icmp ne i32 %498, 0, !dbg !7368
  br i1 %tobool375, label %if.then376, label %if.else382, !dbg !7370

if.then376:                                       ; preds = %for.body368
  %499 = load %struct.CCGEdge*, %struct.CCGEdge** %e369, align 8, !dbg !7371
  %call377 = call i32 @_edge_isBoundary(%struct.CCGEdge* %499), !dbg !7374
  %tobool378 = icmp ne i32 %call377, 0, !dbg !7374
  br i1 %tobool378, label %if.then379, label %if.end381, !dbg !7375

if.then379:                                       ; preds = %if.then376
  %500 = load float*, float** %q, align 8, !dbg !7376
  %501 = load %struct.CCGEdge*, %struct.CCGEdge** %e369, align 8, !dbg !7377
  %502 = load %struct.CCGVert*, %struct.CCGVert** %v, align 8, !dbg !7378
  %503 = load i32, i32* %curLvl.addr, align 4, !dbg !7379
  %504 = load i32, i32* %vertDataSize, align 4, !dbg !7380
  %call380 = call i8* @_edge_getCoVert(%struct.CCGEdge* %501, %struct.CCGVert* %502, i32 %503, i32 1, i32 %504), !dbg !7381
  %505 = bitcast i8* %call380 to float*, !dbg !7381
  %506 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !7382
  call void @VertDataAdd(float* %500, float* %505, %struct.CCGSubSurf* %506), !dbg !7383
  br label %if.end381, !dbg !7383

if.end381:                                        ; preds = %if.then379, %if.then376
  br label %if.end388, !dbg !7384

if.else382:                                       ; preds = %for.body368
  %507 = load float, float* %sharpness373, align 4, !dbg !7385
  %cmp383 = fcmp une float %507, 0.000000e+00, !dbg !7387
  br i1 %cmp383, label %if.then385, label %if.end387, !dbg !7388

if.then385:                                       ; preds = %if.else382
  %508 = load float*, float** %q, align 8, !dbg !7389
  %509 = load %struct.CCGEdge*, %struct.CCGEdge** %e369, align 8, !dbg !7391
  %510 = load %struct.CCGVert*, %struct.CCGVert** %v, align 8, !dbg !7392
  %511 = load i32, i32* %curLvl.addr, align 4, !dbg !7393
  %512 = load i32, i32* %vertDataSize, align 4, !dbg !7394
  %call386 = call i8* @_edge_getCoVert(%struct.CCGEdge* %509, %struct.CCGVert* %510, i32 %511, i32 1, i32 %512), !dbg !7395
  %513 = bitcast i8* %call386 to float*, !dbg !7395
  %514 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !7396
  call void @VertDataAdd(float* %508, float* %513, %struct.CCGSubSurf* %514), !dbg !7397
  br label %if.end387, !dbg !7398

if.end387:                                        ; preds = %if.then385, %if.else382
  br label %if.end388

if.end388:                                        ; preds = %if.end387, %if.end381
  br label %for.inc389, !dbg !7399

for.inc389:                                       ; preds = %if.end388
  %515 = load i32, i32* %j227, align 4, !dbg !7400
  %inc390 = add nsw i32 %515, 1, !dbg !7400
  store i32 %inc390, i32* %j227, align 4, !dbg !7400
  br label %for.cond363, !dbg !7401, !llvm.loop !7402

for.end391:                                       ; preds = %for.cond363
  %516 = load float*, float** %q, align 8, !dbg !7404
  %517 = load i32, i32* %sharpCount, align 4, !dbg !7405
  %conv392 = sitofp i32 %517 to float, !dbg !7405
  %div393 = fdiv float 1.000000e+00, %conv392, !dbg !7406
  %518 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !7407
  call void @VertDataMulN(float* %516, float %div393, %struct.CCGSubSurf* %518), !dbg !7408
  %519 = load i32, i32* %sharpCount, align 4, !dbg !7409
  %cmp394 = icmp ne i32 %519, 2, !dbg !7411
  br i1 %cmp394, label %if.then398, label %lor.lhs.false396, !dbg !7412

lor.lhs.false396:                                 ; preds = %for.end391
  %520 = load i32, i32* %allSharp, align 4, !dbg !7413
  %tobool397 = icmp ne i32 %520, 0, !dbg !7413
  br i1 %tobool397, label %if.then398, label %if.end399, !dbg !7414

if.then398:                                       ; preds = %lor.lhs.false396, %for.end391
  %521 = load float*, float** %r, align 8, !dbg !7415
  %522 = load float*, float** %co224, align 8, !dbg !7417
  %523 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !7418
  call void @VertDataCopy(float* %521, float* %522, %struct.CCGSubSurf* %523), !dbg !7419
  %524 = load float*, float** %r, align 8, !dbg !7420
  %525 = load float*, float** %q, align 8, !dbg !7421
  %526 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !7422
  call void @VertDataSub(float* %524, float* %525, %struct.CCGSubSurf* %526), !dbg !7423
  %527 = load float*, float** %r, align 8, !dbg !7424
  %528 = load float, float* %avgSharpness, align 4, !dbg !7425
  %529 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !7426
  call void @VertDataMulN(float* %527, float %528, %struct.CCGSubSurf* %529), !dbg !7427
  %530 = load float*, float** %q, align 8, !dbg !7428
  %531 = load float*, float** %r, align 8, !dbg !7429
  %532 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !7430
  call void @VertDataAdd(float* %530, float* %531, %struct.CCGSubSurf* %532), !dbg !7431
  br label %if.end399, !dbg !7432

if.end399:                                        ; preds = %if.then398, %lor.lhs.false396
  %533 = load float*, float** %r, align 8, !dbg !7433
  %534 = load float*, float** %co224, align 8, !dbg !7434
  %535 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !7435
  call void @VertDataCopy(float* %533, float* %534, %struct.CCGSubSurf* %535), !dbg !7436
  %536 = load float*, float** %r, align 8, !dbg !7437
  %537 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !7438
  call void @VertDataMulN(float* %536, float 7.500000e-01, %struct.CCGSubSurf* %537), !dbg !7439
  %538 = load float*, float** %q, align 8, !dbg !7440
  %539 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !7441
  call void @VertDataMulN(float* %538, float 2.500000e-01, %struct.CCGSubSurf* %539), !dbg !7442
  %540 = load float*, float** %r, align 8, !dbg !7443
  %541 = load float*, float** %q, align 8, !dbg !7444
  %542 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !7445
  call void @VertDataAdd(float* %540, float* %541, %struct.CCGSubSurf* %542), !dbg !7446
  %543 = load float*, float** %r, align 8, !dbg !7447
  %544 = load float*, float** %nCo, align 8, !dbg !7448
  %545 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !7449
  call void @VertDataSub(float* %543, float* %544, %struct.CCGSubSurf* %545), !dbg !7450
  %546 = load float*, float** %r, align 8, !dbg !7451
  %547 = load float, float* %avgSharpness, align 4, !dbg !7452
  %548 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !7453
  call void @VertDataMulN(float* %546, float %547, %struct.CCGSubSurf* %548), !dbg !7454
  %549 = load float*, float** %nCo, align 8, !dbg !7455
  %550 = load float*, float** %r, align 8, !dbg !7456
  %551 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !7457
  call void @VertDataAdd(float* %549, float* %550, %struct.CCGSubSurf* %551), !dbg !7458
  br label %if.end400, !dbg !7459

if.end400:                                        ; preds = %if.end399, %lor.lhs.false357
  br label %for.inc401, !dbg !7460

for.inc401:                                       ; preds = %if.end400
  %552 = load i32, i32* %ptrIdx, align 4, !dbg !7461
  %inc402 = add nsw i32 %552, 1, !dbg !7461
  store i32 %inc402, i32* %ptrIdx, align 4, !dbg !7461
  br label %for.cond218, !dbg !7462, !llvm.loop !7463

for.end403:                                       ; preds = %for.cond218
  store i32 0, i32* %ptrIdx, align 4, !dbg !7465
  br label %for.cond404, !dbg !7467

for.cond404:                                      ; preds = %for.inc508, %for.end403
  %553 = load i32, i32* %ptrIdx, align 4, !dbg !7468
  %554 = load i32, i32* %numEffectedE.addr, align 4, !dbg !7470
  %cmp405 = icmp slt i32 %553, %554, !dbg !7471
  br i1 %cmp405, label %for.body407, label %for.end510, !dbg !7472

for.body407:                                      ; preds = %for.cond404
  call void @llvm.dbg.declare(metadata %struct.CCGEdge** %e408, metadata !7473, metadata !DIExpression()), !dbg !7475
  %555 = load %struct.CCGEdge**, %struct.CCGEdge*** %effectedE.addr, align 8, !dbg !7476
  %556 = load i32, i32* %ptrIdx, align 4, !dbg !7477
  %idxprom409 = sext i32 %556 to i64, !dbg !7476
  %arrayidx410 = getelementptr inbounds %struct.CCGEdge*, %struct.CCGEdge** %555, i64 %idxprom409, !dbg !7476
  %557 = load %struct.CCGEdge*, %struct.CCGEdge** %arrayidx410, align 8, !dbg !7476
  store %struct.CCGEdge* %557, %struct.CCGEdge** %e408, align 8, !dbg !7475
  call void @llvm.dbg.declare(metadata float* %sharpness411, metadata !7478, metadata !DIExpression()), !dbg !7479
  %558 = load %struct.CCGEdge*, %struct.CCGEdge** %e408, align 8, !dbg !7480
  %559 = load i32, i32* %curLvl.addr, align 4, !dbg !7481
  %call412 = call float @EDGE_getSharpness(%struct.CCGEdge* %558, i32 %559), !dbg !7482
  store float %call412, float* %sharpness411, align 4, !dbg !7479
  call void @llvm.dbg.declare(metadata i32* %sharpCount413, metadata !7483, metadata !DIExpression()), !dbg !7484
  store i32 0, i32* %sharpCount413, align 4, !dbg !7484
  call void @llvm.dbg.declare(metadata float* %avgSharpness414, metadata !7485, metadata !DIExpression()), !dbg !7486
  store float 0.000000e+00, float* %avgSharpness414, align 4, !dbg !7486
  call void @llvm.dbg.declare(metadata i32* %x415, metadata !7487, metadata !DIExpression()), !dbg !7488
  call void @llvm.dbg.declare(metadata i32* %j416, metadata !7489, metadata !DIExpression()), !dbg !7490
  %560 = load float, float* %sharpness411, align 4, !dbg !7491
  %cmp417 = fcmp une float %560, 0.000000e+00, !dbg !7493
  br i1 %cmp417, label %if.then419, label %if.else425, !dbg !7494

if.then419:                                       ; preds = %for.body407
  store i32 2, i32* %sharpCount413, align 4, !dbg !7495
  %561 = load float, float* %sharpness411, align 4, !dbg !7497
  %562 = load float, float* %avgSharpness414, align 4, !dbg !7498
  %add420 = fadd float %562, %561, !dbg !7498
  store float %add420, float* %avgSharpness414, align 4, !dbg !7498
  %563 = load float, float* %avgSharpness414, align 4, !dbg !7499
  %cmp421 = fcmp ogt float %563, 1.000000e+00, !dbg !7501
  br i1 %cmp421, label %if.then423, label %if.end424, !dbg !7502

if.then423:                                       ; preds = %if.then419
  store float 1.000000e+00, float* %avgSharpness414, align 4, !dbg !7503
  br label %if.end424, !dbg !7505

if.end424:                                        ; preds = %if.then423, %if.then419
  br label %if.end426, !dbg !7506

if.else425:                                       ; preds = %for.body407
  store i32 0, i32* %sharpCount413, align 4, !dbg !7507
  store float 0.000000e+00, float* %avgSharpness414, align 4, !dbg !7509
  br label %if.end426

if.end426:                                        ; preds = %if.else425, %if.end424
  %564 = load %struct.CCGEdge*, %struct.CCGEdge** %e408, align 8, !dbg !7510
  %call427 = call i32 @_edge_isBoundary(%struct.CCGEdge* %564), !dbg !7512
  %tobool428 = icmp ne i32 %call427, 0, !dbg !7512
  br i1 %tobool428, label %if.then429, label %if.else448, !dbg !7513

if.then429:                                       ; preds = %if.end426
  store i32 1, i32* %x415, align 4, !dbg !7514
  br label %for.cond430, !dbg !7517

for.cond430:                                      ; preds = %for.inc445, %if.then429
  %565 = load i32, i32* %x415, align 4, !dbg !7518
  %566 = load i32, i32* %edgeSize, align 4, !dbg !7520
  %sub431 = sub nsw i32 %566, 1, !dbg !7521
  %cmp432 = icmp slt i32 %565, %sub431, !dbg !7522
  br i1 %cmp432, label %for.body434, label %for.end447, !dbg !7523

for.body434:                                      ; preds = %for.cond430
  call void @llvm.dbg.declare(metadata i32* %fx435, metadata !7524, metadata !DIExpression()), !dbg !7526
  %567 = load i32, i32* %x415, align 4, !dbg !7527
  %mul436 = mul nsw i32 %567, 2, !dbg !7528
  store i32 %mul436, i32* %fx435, align 4, !dbg !7526
  call void @llvm.dbg.declare(metadata float** %co437, metadata !7529, metadata !DIExpression()), !dbg !7530
  %568 = load %struct.CCGEdge*, %struct.CCGEdge** %e408, align 8, !dbg !7531
  %569 = load i32, i32* %curLvl.addr, align 4, !dbg !7531
  %570 = load i32, i32* %x415, align 4, !dbg !7531
  %571 = load i32, i32* %vertDataSize, align 4, !dbg !7531
  %call438 = call i8* @_edge_getCo(%struct.CCGEdge* %568, i32 %569, i32 %570, i32 %571), !dbg !7531
  %572 = bitcast i8* %call438 to float*, !dbg !7531
  store float* %572, float** %co437, align 8, !dbg !7530
  call void @llvm.dbg.declare(metadata float** %nCo439, metadata !7532, metadata !DIExpression()), !dbg !7533
  %573 = load %struct.CCGEdge*, %struct.CCGEdge** %e408, align 8, !dbg !7534
  %574 = load i32, i32* %nextLvl, align 4, !dbg !7534
  %575 = load i32, i32* %fx435, align 4, !dbg !7534
  %576 = load i32, i32* %vertDataSize, align 4, !dbg !7534
  %call440 = call i8* @_edge_getCo(%struct.CCGEdge* %573, i32 %574, i32 %575, i32 %576), !dbg !7534
  %577 = bitcast i8* %call440 to float*, !dbg !7534
  store float* %577, float** %nCo439, align 8, !dbg !7533
  %578 = load float*, float** %r, align 8, !dbg !7535
  %579 = load %struct.CCGEdge*, %struct.CCGEdge** %e408, align 8, !dbg !7536
  %580 = load i32, i32* %curLvl.addr, align 4, !dbg !7536
  %581 = load i32, i32* %x415, align 4, !dbg !7536
  %sub441 = sub nsw i32 %581, 1, !dbg !7536
  %582 = load i32, i32* %vertDataSize, align 4, !dbg !7536
  %call442 = call i8* @_edge_getCo(%struct.CCGEdge* %579, i32 %580, i32 %sub441, i32 %582), !dbg !7536
  %583 = bitcast i8* %call442 to float*, !dbg !7536
  %584 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !7537
  call void @VertDataCopy(float* %578, float* %583, %struct.CCGSubSurf* %584), !dbg !7538
  %585 = load float*, float** %r, align 8, !dbg !7539
  %586 = load %struct.CCGEdge*, %struct.CCGEdge** %e408, align 8, !dbg !7540
  %587 = load i32, i32* %curLvl.addr, align 4, !dbg !7540
  %588 = load i32, i32* %x415, align 4, !dbg !7540
  %add443 = add nsw i32 %588, 1, !dbg !7540
  %589 = load i32, i32* %vertDataSize, align 4, !dbg !7540
  %call444 = call i8* @_edge_getCo(%struct.CCGEdge* %586, i32 %587, i32 %add443, i32 %589), !dbg !7540
  %590 = bitcast i8* %call444 to float*, !dbg !7540
  %591 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !7541
  call void @VertDataAdd(float* %585, float* %590, %struct.CCGSubSurf* %591), !dbg !7542
  %592 = load float*, float** %r, align 8, !dbg !7543
  %593 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !7544
  call void @VertDataMulN(float* %592, float 5.000000e-01, %struct.CCGSubSurf* %593), !dbg !7545
  %594 = load float*, float** %nCo439, align 8, !dbg !7546
  %595 = load float*, float** %co437, align 8, !dbg !7547
  %596 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !7548
  call void @VertDataCopy(float* %594, float* %595, %struct.CCGSubSurf* %596), !dbg !7549
  %597 = load float*, float** %nCo439, align 8, !dbg !7550
  %598 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !7551
  call void @VertDataMulN(float* %597, float 7.500000e-01, %struct.CCGSubSurf* %598), !dbg !7552
  %599 = load float*, float** %r, align 8, !dbg !7553
  %600 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !7554
  call void @VertDataMulN(float* %599, float 2.500000e-01, %struct.CCGSubSurf* %600), !dbg !7555
  %601 = load float*, float** %nCo439, align 8, !dbg !7556
  %602 = load float*, float** %r, align 8, !dbg !7557
  %603 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !7558
  call void @VertDataAdd(float* %601, float* %602, %struct.CCGSubSurf* %603), !dbg !7559
  br label %for.inc445, !dbg !7560

for.inc445:                                       ; preds = %for.body434
  %604 = load i32, i32* %x415, align 4, !dbg !7561
  %inc446 = add nsw i32 %604, 1, !dbg !7561
  store i32 %inc446, i32* %x415, align 4, !dbg !7561
  br label %for.cond430, !dbg !7562, !llvm.loop !7563

for.end447:                                       ; preds = %for.cond430
  br label %if.end507, !dbg !7565

if.else448:                                       ; preds = %if.end426
  store i32 1, i32* %x415, align 4, !dbg !7566
  br label %for.cond449, !dbg !7569

for.cond449:                                      ; preds = %for.inc504, %if.else448
  %605 = load i32, i32* %x415, align 4, !dbg !7570
  %606 = load i32, i32* %edgeSize, align 4, !dbg !7572
  %sub450 = sub nsw i32 %606, 1, !dbg !7573
  %cmp451 = icmp slt i32 %605, %sub450, !dbg !7574
  br i1 %cmp451, label %for.body453, label %for.end506, !dbg !7575

for.body453:                                      ; preds = %for.cond449
  call void @llvm.dbg.declare(metadata i32* %fx454, metadata !7576, metadata !DIExpression()), !dbg !7578
  %607 = load i32, i32* %x415, align 4, !dbg !7579
  %mul455 = mul nsw i32 %607, 2, !dbg !7580
  store i32 %mul455, i32* %fx454, align 4, !dbg !7578
  call void @llvm.dbg.declare(metadata float** %co456, metadata !7581, metadata !DIExpression()), !dbg !7582
  %608 = load %struct.CCGEdge*, %struct.CCGEdge** %e408, align 8, !dbg !7583
  %609 = load i32, i32* %curLvl.addr, align 4, !dbg !7583
  %610 = load i32, i32* %x415, align 4, !dbg !7583
  %611 = load i32, i32* %vertDataSize, align 4, !dbg !7583
  %call457 = call i8* @_edge_getCo(%struct.CCGEdge* %608, i32 %609, i32 %610, i32 %611), !dbg !7583
  %612 = bitcast i8* %call457 to float*, !dbg !7583
  store float* %612, float** %co456, align 8, !dbg !7582
  call void @llvm.dbg.declare(metadata float** %nCo458, metadata !7584, metadata !DIExpression()), !dbg !7585
  %613 = load %struct.CCGEdge*, %struct.CCGEdge** %e408, align 8, !dbg !7586
  %614 = load i32, i32* %nextLvl, align 4, !dbg !7586
  %615 = load i32, i32* %fx454, align 4, !dbg !7586
  %616 = load i32, i32* %vertDataSize, align 4, !dbg !7586
  %call459 = call i8* @_edge_getCo(%struct.CCGEdge* %613, i32 %614, i32 %615, i32 %616), !dbg !7586
  %617 = bitcast i8* %call459 to float*, !dbg !7586
  store float* %617, float** %nCo458, align 8, !dbg !7585
  call void @llvm.dbg.declare(metadata i32* %numFaces460, metadata !7587, metadata !DIExpression()), !dbg !7588
  store i32 0, i32* %numFaces460, align 4, !dbg !7588
  %618 = load float*, float** %q, align 8, !dbg !7589
  %619 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !7590
  call void @VertDataZero(float* %618, %struct.CCGSubSurf* %619), !dbg !7591
  %620 = load float*, float** %r, align 8, !dbg !7592
  %621 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !7593
  call void @VertDataZero(float* %620, %struct.CCGSubSurf* %621), !dbg !7594
  %622 = load float*, float** %r, align 8, !dbg !7595
  %623 = load %struct.CCGEdge*, %struct.CCGEdge** %e408, align 8, !dbg !7596
  %624 = load i32, i32* %curLvl.addr, align 4, !dbg !7596
  %625 = load i32, i32* %x415, align 4, !dbg !7596
  %sub461 = sub nsw i32 %625, 1, !dbg !7596
  %626 = load i32, i32* %vertDataSize, align 4, !dbg !7596
  %call462 = call i8* @_edge_getCo(%struct.CCGEdge* %623, i32 %624, i32 %sub461, i32 %626), !dbg !7596
  %627 = bitcast i8* %call462 to float*, !dbg !7596
  %628 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !7597
  call void @VertDataAdd(float* %622, float* %627, %struct.CCGSubSurf* %628), !dbg !7598
  %629 = load float*, float** %r, align 8, !dbg !7599
  %630 = load %struct.CCGEdge*, %struct.CCGEdge** %e408, align 8, !dbg !7600
  %631 = load i32, i32* %curLvl.addr, align 4, !dbg !7600
  %632 = load i32, i32* %x415, align 4, !dbg !7600
  %add463 = add nsw i32 %632, 1, !dbg !7600
  %633 = load i32, i32* %vertDataSize, align 4, !dbg !7600
  %call464 = call i8* @_edge_getCo(%struct.CCGEdge* %630, i32 %631, i32 %add463, i32 %633), !dbg !7600
  %634 = bitcast i8* %call464 to float*, !dbg !7600
  %635 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !7601
  call void @VertDataAdd(float* %629, float* %634, %struct.CCGSubSurf* %635), !dbg !7602
  store i32 0, i32* %j416, align 4, !dbg !7603
  br label %for.cond465, !dbg !7605

for.cond465:                                      ; preds = %for.inc483, %for.body453
  %636 = load i32, i32* %j416, align 4, !dbg !7606
  %637 = load %struct.CCGEdge*, %struct.CCGEdge** %e408, align 8, !dbg !7608
  %numFaces466 = getelementptr inbounds %struct.CCGEdge, %struct.CCGEdge* %637, i32 0, i32 2, !dbg !7609
  %638 = load i16, i16* %numFaces466, align 8, !dbg !7609
  %conv467 = sext i16 %638 to i32, !dbg !7608
  %cmp468 = icmp slt i32 %636, %conv467, !dbg !7610
  br i1 %cmp468, label %for.body470, label %for.end485, !dbg !7611

for.body470:                                      ; preds = %for.cond465
  call void @llvm.dbg.declare(metadata %struct.CCGFace** %f471, metadata !7612, metadata !DIExpression()), !dbg !7614
  %639 = load %struct.CCGEdge*, %struct.CCGEdge** %e408, align 8, !dbg !7615
  %faces472 = getelementptr inbounds %struct.CCGEdge, %struct.CCGEdge* %639, i32 0, i32 7, !dbg !7616
  %640 = load %struct.CCGFace**, %struct.CCGFace*** %faces472, align 8, !dbg !7616
  %641 = load i32, i32* %j416, align 4, !dbg !7617
  %idxprom473 = sext i32 %641 to i64, !dbg !7615
  %arrayidx474 = getelementptr inbounds %struct.CCGFace*, %struct.CCGFace** %640, i64 %idxprom473, !dbg !7615
  %642 = load %struct.CCGFace*, %struct.CCGFace** %arrayidx474, align 8, !dbg !7615
  store %struct.CCGFace* %642, %struct.CCGFace** %f471, align 8, !dbg !7614
  call void @llvm.dbg.declare(metadata i32* %f_ed_idx475, metadata !7618, metadata !DIExpression()), !dbg !7619
  %643 = load %struct.CCGFace*, %struct.CCGFace** %f471, align 8, !dbg !7620
  %644 = load %struct.CCGEdge*, %struct.CCGEdge** %e408, align 8, !dbg !7621
  %call476 = call i32 @_face_getEdgeIndex(%struct.CCGFace* %643, %struct.CCGEdge* %644), !dbg !7622
  store i32 %call476, i32* %f_ed_idx475, align 4, !dbg !7619
  %645 = load float*, float** %q, align 8, !dbg !7623
  %646 = load %struct.CCGFace*, %struct.CCGFace** %f471, align 8, !dbg !7624
  %647 = load %struct.CCGEdge*, %struct.CCGEdge** %e408, align 8, !dbg !7625
  %648 = load i32, i32* %f_ed_idx475, align 4, !dbg !7626
  %649 = load i32, i32* %nextLvl, align 4, !dbg !7627
  %650 = load i32, i32* %fx454, align 4, !dbg !7628
  %sub477 = sub nsw i32 %650, 1, !dbg !7629
  %651 = load i32, i32* %subdivLevels, align 4, !dbg !7630
  %652 = load i32, i32* %vertDataSize, align 4, !dbg !7631
  %call478 = call i8* @_face_getIFCoEdge(%struct.CCGFace* %646, %struct.CCGEdge* %647, i32 %648, i32 %649, i32 %sub477, i32 1, i32 %651, i32 %652), !dbg !7632
  %653 = bitcast i8* %call478 to float*, !dbg !7632
  %654 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !7633
  call void @VertDataAdd(float* %645, float* %653, %struct.CCGSubSurf* %654), !dbg !7634
  %655 = load float*, float** %q, align 8, !dbg !7635
  %656 = load %struct.CCGFace*, %struct.CCGFace** %f471, align 8, !dbg !7636
  %657 = load %struct.CCGEdge*, %struct.CCGEdge** %e408, align 8, !dbg !7637
  %658 = load i32, i32* %f_ed_idx475, align 4, !dbg !7638
  %659 = load i32, i32* %nextLvl, align 4, !dbg !7639
  %660 = load i32, i32* %fx454, align 4, !dbg !7640
  %add479 = add nsw i32 %660, 1, !dbg !7641
  %661 = load i32, i32* %subdivLevels, align 4, !dbg !7642
  %662 = load i32, i32* %vertDataSize, align 4, !dbg !7643
  %call480 = call i8* @_face_getIFCoEdge(%struct.CCGFace* %656, %struct.CCGEdge* %657, i32 %658, i32 %659, i32 %add479, i32 1, i32 %661, i32 %662), !dbg !7644
  %663 = bitcast i8* %call480 to float*, !dbg !7644
  %664 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !7645
  call void @VertDataAdd(float* %655, float* %663, %struct.CCGSubSurf* %664), !dbg !7646
  %665 = load float*, float** %r, align 8, !dbg !7647
  %666 = load %struct.CCGFace*, %struct.CCGFace** %f471, align 8, !dbg !7648
  %667 = load %struct.CCGEdge*, %struct.CCGEdge** %e408, align 8, !dbg !7649
  %668 = load i32, i32* %f_ed_idx475, align 4, !dbg !7650
  %669 = load i32, i32* %curLvl.addr, align 4, !dbg !7651
  %670 = load i32, i32* %x415, align 4, !dbg !7652
  %671 = load i32, i32* %subdivLevels, align 4, !dbg !7653
  %672 = load i32, i32* %vertDataSize, align 4, !dbg !7654
  %call481 = call i8* @_face_getIFCoEdge(%struct.CCGFace* %666, %struct.CCGEdge* %667, i32 %668, i32 %669, i32 %670, i32 1, i32 %671, i32 %672), !dbg !7655
  %673 = bitcast i8* %call481 to float*, !dbg !7655
  %674 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !7656
  call void @VertDataAdd(float* %665, float* %673, %struct.CCGSubSurf* %674), !dbg !7657
  %675 = load i32, i32* %numFaces460, align 4, !dbg !7658
  %inc482 = add nsw i32 %675, 1, !dbg !7658
  store i32 %inc482, i32* %numFaces460, align 4, !dbg !7658
  br label %for.inc483, !dbg !7659

for.inc483:                                       ; preds = %for.body470
  %676 = load i32, i32* %j416, align 4, !dbg !7660
  %inc484 = add nsw i32 %676, 1, !dbg !7660
  store i32 %inc484, i32* %j416, align 4, !dbg !7660
  br label %for.cond465, !dbg !7661, !llvm.loop !7662

for.end485:                                       ; preds = %for.cond465
  %677 = load float*, float** %q, align 8, !dbg !7664
  %678 = load i32, i32* %numFaces460, align 4, !dbg !7665
  %conv486 = sitofp i32 %678 to float, !dbg !7665
  %mul487 = fmul float %conv486, 2.000000e+00, !dbg !7666
  %div488 = fdiv float 1.000000e+00, %mul487, !dbg !7667
  %679 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !7668
  call void @VertDataMulN(float* %677, float %div488, %struct.CCGSubSurf* %679), !dbg !7669
  %680 = load float*, float** %r, align 8, !dbg !7670
  %681 = load i32, i32* %numFaces460, align 4, !dbg !7671
  %conv489 = sitofp i32 %681 to float, !dbg !7671
  %add490 = fadd float 2.000000e+00, %conv489, !dbg !7672
  %div491 = fdiv float 1.000000e+00, %add490, !dbg !7673
  %682 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !7674
  call void @VertDataMulN(float* %680, float %div491, %struct.CCGSubSurf* %682), !dbg !7675
  %683 = load float*, float** %nCo458, align 8, !dbg !7676
  %684 = load float*, float** %co456, align 8, !dbg !7677
  %685 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !7678
  call void @VertDataCopy(float* %683, float* %684, %struct.CCGSubSurf* %685), !dbg !7679
  %686 = load float*, float** %nCo458, align 8, !dbg !7680
  %687 = load i32, i32* %numFaces460, align 4, !dbg !7681
  %conv492 = sitofp i32 %687 to float, !dbg !7682
  %688 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !7683
  call void @VertDataMulN(float* %686, float %conv492, %struct.CCGSubSurf* %688), !dbg !7684
  %689 = load float*, float** %nCo458, align 8, !dbg !7685
  %690 = load float*, float** %q, align 8, !dbg !7686
  %691 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !7687
  call void @VertDataAdd(float* %689, float* %690, %struct.CCGSubSurf* %691), !dbg !7688
  %692 = load float*, float** %nCo458, align 8, !dbg !7689
  %693 = load float*, float** %r, align 8, !dbg !7690
  %694 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !7691
  call void @VertDataAdd(float* %692, float* %693, %struct.CCGSubSurf* %694), !dbg !7692
  %695 = load float*, float** %nCo458, align 8, !dbg !7693
  %696 = load i32, i32* %numFaces460, align 4, !dbg !7694
  %add493 = add nsw i32 2, %696, !dbg !7695
  %conv494 = sitofp i32 %add493 to float, !dbg !7696
  %div495 = fdiv float 1.000000e+00, %conv494, !dbg !7697
  %697 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !7698
  call void @VertDataMulN(float* %695, float %div495, %struct.CCGSubSurf* %697), !dbg !7699
  %698 = load i32, i32* %sharpCount413, align 4, !dbg !7700
  %cmp496 = icmp eq i32 %698, 2, !dbg !7702
  br i1 %cmp496, label %if.then498, label %if.end503, !dbg !7703

if.then498:                                       ; preds = %for.end485
  %699 = load float*, float** %q, align 8, !dbg !7704
  %700 = load float*, float** %co456, align 8, !dbg !7706
  %701 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !7707
  call void @VertDataCopy(float* %699, float* %700, %struct.CCGSubSurf* %701), !dbg !7708
  %702 = load float*, float** %q, align 8, !dbg !7709
  %703 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !7710
  call void @VertDataMulN(float* %702, float 6.000000e+00, %struct.CCGSubSurf* %703), !dbg !7711
  %704 = load float*, float** %q, align 8, !dbg !7712
  %705 = load %struct.CCGEdge*, %struct.CCGEdge** %e408, align 8, !dbg !7713
  %706 = load i32, i32* %curLvl.addr, align 4, !dbg !7713
  %707 = load i32, i32* %x415, align 4, !dbg !7713
  %sub499 = sub nsw i32 %707, 1, !dbg !7713
  %708 = load i32, i32* %vertDataSize, align 4, !dbg !7713
  %call500 = call i8* @_edge_getCo(%struct.CCGEdge* %705, i32 %706, i32 %sub499, i32 %708), !dbg !7713
  %709 = bitcast i8* %call500 to float*, !dbg !7713
  %710 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !7714
  call void @VertDataAdd(float* %704, float* %709, %struct.CCGSubSurf* %710), !dbg !7715
  %711 = load float*, float** %q, align 8, !dbg !7716
  %712 = load %struct.CCGEdge*, %struct.CCGEdge** %e408, align 8, !dbg !7717
  %713 = load i32, i32* %curLvl.addr, align 4, !dbg !7717
  %714 = load i32, i32* %x415, align 4, !dbg !7717
  %add501 = add nsw i32 %714, 1, !dbg !7717
  %715 = load i32, i32* %vertDataSize, align 4, !dbg !7717
  %call502 = call i8* @_edge_getCo(%struct.CCGEdge* %712, i32 %713, i32 %add501, i32 %715), !dbg !7717
  %716 = bitcast i8* %call502 to float*, !dbg !7717
  %717 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !7718
  call void @VertDataAdd(float* %711, float* %716, %struct.CCGSubSurf* %717), !dbg !7719
  %718 = load float*, float** %q, align 8, !dbg !7720
  %719 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !7721
  call void @VertDataMulN(float* %718, float 1.250000e-01, %struct.CCGSubSurf* %719), !dbg !7722
  %720 = load float*, float** %q, align 8, !dbg !7723
  %721 = load float*, float** %nCo458, align 8, !dbg !7724
  %722 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !7725
  call void @VertDataSub(float* %720, float* %721, %struct.CCGSubSurf* %722), !dbg !7726
  %723 = load float*, float** %q, align 8, !dbg !7727
  %724 = load float, float* %avgSharpness414, align 4, !dbg !7728
  %725 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !7729
  call void @VertDataMulN(float* %723, float %724, %struct.CCGSubSurf* %725), !dbg !7730
  %726 = load float*, float** %nCo458, align 8, !dbg !7731
  %727 = load float*, float** %q, align 8, !dbg !7732
  %728 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !7733
  call void @VertDataAdd(float* %726, float* %727, %struct.CCGSubSurf* %728), !dbg !7734
  br label %if.end503, !dbg !7735

if.end503:                                        ; preds = %if.then498, %for.end485
  br label %for.inc504, !dbg !7736

for.inc504:                                       ; preds = %if.end503
  %729 = load i32, i32* %x415, align 4, !dbg !7737
  %inc505 = add nsw i32 %729, 1, !dbg !7737
  store i32 %inc505, i32* %x415, align 4, !dbg !7737
  br label %for.cond449, !dbg !7738, !llvm.loop !7739

for.end506:                                       ; preds = %for.cond449
  br label %if.end507

if.end507:                                        ; preds = %for.end506, %for.end447
  br label %for.inc508, !dbg !7741

for.inc508:                                       ; preds = %if.end507
  %730 = load i32, i32* %ptrIdx, align 4, !dbg !7742
  %inc509 = add nsw i32 %730, 1, !dbg !7742
  store i32 %inc509, i32* %ptrIdx, align 4, !dbg !7742
  br label %for.cond404, !dbg !7743, !llvm.loop !7744

for.end510:                                       ; preds = %for.cond404
  call void @llvm.dbg.declare(metadata float** %q511, metadata !7746, metadata !DIExpression()), !dbg !7748
  call void @llvm.dbg.declare(metadata float** %r512, metadata !7749, metadata !DIExpression()), !dbg !7750
  %731 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !7751
  %732 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !7753
  %meshIFC513 = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %732, i32 0, i32 3, !dbg !7754
  %vertDataSize514 = getelementptr inbounds %struct.CCGMeshIFC, %struct.CCGMeshIFC* %meshIFC513, i32 0, i32 4, !dbg !7755
  %733 = load i32, i32* %vertDataSize514, align 8, !dbg !7755
  %conv515 = sext i32 %733 to i64, !dbg !7753
  %call516 = call i8* %731(i64 %conv515, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.7, i64 0, i64 0)), !dbg !7751
  %734 = bitcast i8* %call516 to float*, !dbg !7751
  store float* %734, float** %q511, align 8, !dbg !7756
  %735 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !7757
  %736 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !7758
  %meshIFC517 = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %736, i32 0, i32 3, !dbg !7759
  %vertDataSize518 = getelementptr inbounds %struct.CCGMeshIFC, %struct.CCGMeshIFC* %meshIFC517, i32 0, i32 4, !dbg !7760
  %737 = load i32, i32* %vertDataSize518, align 8, !dbg !7760
  %conv519 = sext i32 %737 to i64, !dbg !7758
  %call520 = call i8* %735(i64 %conv519, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.8, i64 0, i64 0)), !dbg !7757
  %738 = bitcast i8* %call520 to float*, !dbg !7757
  store float* %738, float** %r512, align 8, !dbg !7761
  store i32 0, i32* %ptrIdx, align 4, !dbg !7762
  br label %for.cond521, !dbg !7764

for.cond521:                                      ; preds = %for.inc668, %for.end510
  %739 = load i32, i32* %ptrIdx, align 4, !dbg !7765
  %740 = load i32, i32* %numEffectedF.addr, align 4, !dbg !7767
  %cmp522 = icmp slt i32 %739, %740, !dbg !7768
  br i1 %cmp522, label %for.body524, label %for.end670, !dbg !7769

for.body524:                                      ; preds = %for.cond521
  call void @llvm.dbg.declare(metadata %struct.CCGFace** %f525, metadata !7770, metadata !DIExpression()), !dbg !7772
  %741 = load %struct.CCGFace**, %struct.CCGFace*** %effectedF.addr, align 8, !dbg !7773
  %742 = load i32, i32* %ptrIdx, align 4, !dbg !7774
  %idxprom526 = sext i32 %742 to i64, !dbg !7773
  %arrayidx527 = getelementptr inbounds %struct.CCGFace*, %struct.CCGFace** %741, i64 %idxprom526, !dbg !7773
  %743 = load %struct.CCGFace*, %struct.CCGFace** %arrayidx527, align 8, !dbg !7773
  store %struct.CCGFace* %743, %struct.CCGFace** %f525, align 8, !dbg !7772
  call void @llvm.dbg.declare(metadata i32* %S528, metadata !7775, metadata !DIExpression()), !dbg !7776
  call void @llvm.dbg.declare(metadata i32* %x529, metadata !7777, metadata !DIExpression()), !dbg !7778
  call void @llvm.dbg.declare(metadata i32* %y530, metadata !7779, metadata !DIExpression()), !dbg !7780
  %744 = load float*, float** %q511, align 8, !dbg !7781
  %745 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !7782
  call void @VertDataZero(float* %744, %struct.CCGSubSurf* %745), !dbg !7783
  store i32 0, i32* %S528, align 4, !dbg !7784
  br label %for.cond531, !dbg !7786

for.cond531:                                      ; preds = %for.inc538, %for.body524
  %746 = load i32, i32* %S528, align 4, !dbg !7787
  %747 = load %struct.CCGFace*, %struct.CCGFace** %f525, align 8, !dbg !7789
  %numVerts532 = getelementptr inbounds %struct.CCGFace, %struct.CCGFace* %747, i32 0, i32 2, !dbg !7790
  %748 = load i16, i16* %numVerts532, align 8, !dbg !7790
  %conv533 = sext i16 %748 to i32, !dbg !7789
  %cmp534 = icmp slt i32 %746, %conv533, !dbg !7791
  br i1 %cmp534, label %for.body536, label %for.end540, !dbg !7792

for.body536:                                      ; preds = %for.cond531
  %749 = load float*, float** %q511, align 8, !dbg !7793
  %750 = load %struct.CCGFace*, %struct.CCGFace** %f525, align 8, !dbg !7795
  %751 = load i32, i32* %nextLvl, align 4, !dbg !7795
  %752 = load i32, i32* %S528, align 4, !dbg !7795
  %753 = load i32, i32* %subdivLevels, align 4, !dbg !7795
  %754 = load i32, i32* %vertDataSize, align 4, !dbg !7795
  %call537 = call i8* @_face_getIFCo(%struct.CCGFace* %750, i32 %751, i32 %752, i32 1, i32 1, i32 %753, i32 %754), !dbg !7795
  %755 = bitcast i8* %call537 to float*, !dbg !7795
  %756 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !7796
  call void @VertDataAdd(float* %749, float* %755, %struct.CCGSubSurf* %756), !dbg !7797
  br label %for.inc538, !dbg !7798

for.inc538:                                       ; preds = %for.body536
  %757 = load i32, i32* %S528, align 4, !dbg !7799
  %inc539 = add nsw i32 %757, 1, !dbg !7799
  store i32 %inc539, i32* %S528, align 4, !dbg !7799
  br label %for.cond531, !dbg !7800, !llvm.loop !7801

for.end540:                                       ; preds = %for.cond531
  %758 = load float*, float** %q511, align 8, !dbg !7803
  %759 = load %struct.CCGFace*, %struct.CCGFace** %f525, align 8, !dbg !7804
  %numVerts541 = getelementptr inbounds %struct.CCGFace, %struct.CCGFace* %759, i32 0, i32 2, !dbg !7805
  %760 = load i16, i16* %numVerts541, align 8, !dbg !7805
  %conv542 = sext i16 %760 to i32, !dbg !7804
  %conv543 = sitofp i32 %conv542 to float, !dbg !7804
  %div544 = fdiv float 1.000000e+00, %conv543, !dbg !7806
  %761 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !7807
  call void @VertDataMulN(float* %758, float %div544, %struct.CCGSubSurf* %761), !dbg !7808
  %762 = load float*, float** %r512, align 8, !dbg !7809
  %763 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !7810
  call void @VertDataZero(float* %762, %struct.CCGSubSurf* %763), !dbg !7811
  store i32 0, i32* %S528, align 4, !dbg !7812
  br label %for.cond545, !dbg !7814

for.cond545:                                      ; preds = %for.inc552, %for.end540
  %764 = load i32, i32* %S528, align 4, !dbg !7815
  %765 = load %struct.CCGFace*, %struct.CCGFace** %f525, align 8, !dbg !7817
  %numVerts546 = getelementptr inbounds %struct.CCGFace, %struct.CCGFace* %765, i32 0, i32 2, !dbg !7818
  %766 = load i16, i16* %numVerts546, align 8, !dbg !7818
  %conv547 = sext i16 %766 to i32, !dbg !7817
  %cmp548 = icmp slt i32 %764, %conv547, !dbg !7819
  br i1 %cmp548, label %for.body550, label %for.end554, !dbg !7820

for.body550:                                      ; preds = %for.cond545
  %767 = load float*, float** %r512, align 8, !dbg !7821
  %768 = load %struct.CCGFace*, %struct.CCGFace** %f525, align 8, !dbg !7823
  %769 = load i32, i32* %curLvl.addr, align 4, !dbg !7823
  %770 = load i32, i32* %S528, align 4, !dbg !7823
  %771 = load i32, i32* %subdivLevels, align 4, !dbg !7823
  %772 = load i32, i32* %vertDataSize, align 4, !dbg !7823
  %call551 = call i8* @_face_getIECo(%struct.CCGFace* %768, i32 %769, i32 %770, i32 1, i32 %771, i32 %772), !dbg !7823
  %773 = bitcast i8* %call551 to float*, !dbg !7823
  %774 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !7824
  call void @VertDataAdd(float* %767, float* %773, %struct.CCGSubSurf* %774), !dbg !7825
  br label %for.inc552, !dbg !7826

for.inc552:                                       ; preds = %for.body550
  %775 = load i32, i32* %S528, align 4, !dbg !7827
  %inc553 = add nsw i32 %775, 1, !dbg !7827
  store i32 %inc553, i32* %S528, align 4, !dbg !7827
  br label %for.cond545, !dbg !7828, !llvm.loop !7829

for.end554:                                       ; preds = %for.cond545
  %776 = load float*, float** %r512, align 8, !dbg !7831
  %777 = load %struct.CCGFace*, %struct.CCGFace** %f525, align 8, !dbg !7832
  %numVerts555 = getelementptr inbounds %struct.CCGFace, %struct.CCGFace* %777, i32 0, i32 2, !dbg !7833
  %778 = load i16, i16* %numVerts555, align 8, !dbg !7833
  %conv556 = sext i16 %778 to i32, !dbg !7832
  %conv557 = sitofp i32 %conv556 to float, !dbg !7832
  %div558 = fdiv float 1.000000e+00, %conv557, !dbg !7834
  %779 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !7835
  call void @VertDataMulN(float* %776, float %div558, %struct.CCGSubSurf* %779), !dbg !7836
  %780 = load %struct.CCGFace*, %struct.CCGFace** %f525, align 8, !dbg !7837
  %call559 = call i8* @FACE_getCenterData(%struct.CCGFace* %780), !dbg !7838
  %781 = bitcast i8* %call559 to float*, !dbg !7839
  %782 = load %struct.CCGFace*, %struct.CCGFace** %f525, align 8, !dbg !7840
  %numVerts560 = getelementptr inbounds %struct.CCGFace, %struct.CCGFace* %782, i32 0, i32 2, !dbg !7841
  %783 = load i16, i16* %numVerts560, align 8, !dbg !7841
  %conv561 = sext i16 %783 to i32, !dbg !7840
  %conv562 = sitofp i32 %conv561 to float, !dbg !7840
  %sub563 = fsub float %conv562, 2.000000e+00, !dbg !7842
  %784 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !7843
  call void @VertDataMulN(float* %781, float %sub563, %struct.CCGSubSurf* %784), !dbg !7844
  %785 = load %struct.CCGFace*, %struct.CCGFace** %f525, align 8, !dbg !7845
  %call564 = call i8* @FACE_getCenterData(%struct.CCGFace* %785), !dbg !7846
  %786 = bitcast i8* %call564 to float*, !dbg !7847
  %787 = load float*, float** %q511, align 8, !dbg !7848
  %788 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !7849
  call void @VertDataAdd(float* %786, float* %787, %struct.CCGSubSurf* %788), !dbg !7850
  %789 = load %struct.CCGFace*, %struct.CCGFace** %f525, align 8, !dbg !7851
  %call565 = call i8* @FACE_getCenterData(%struct.CCGFace* %789), !dbg !7852
  %790 = bitcast i8* %call565 to float*, !dbg !7853
  %791 = load float*, float** %r512, align 8, !dbg !7854
  %792 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !7855
  call void @VertDataAdd(float* %790, float* %791, %struct.CCGSubSurf* %792), !dbg !7856
  %793 = load %struct.CCGFace*, %struct.CCGFace** %f525, align 8, !dbg !7857
  %call566 = call i8* @FACE_getCenterData(%struct.CCGFace* %793), !dbg !7858
  %794 = bitcast i8* %call566 to float*, !dbg !7859
  %795 = load %struct.CCGFace*, %struct.CCGFace** %f525, align 8, !dbg !7860
  %numVerts567 = getelementptr inbounds %struct.CCGFace, %struct.CCGFace* %795, i32 0, i32 2, !dbg !7861
  %796 = load i16, i16* %numVerts567, align 8, !dbg !7861
  %conv568 = sext i16 %796 to i32, !dbg !7860
  %conv569 = sitofp i32 %conv568 to float, !dbg !7860
  %div570 = fdiv float 1.000000e+00, %conv569, !dbg !7862
  %797 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !7863
  call void @VertDataMulN(float* %794, float %div570, %struct.CCGSubSurf* %797), !dbg !7864
  store i32 0, i32* %S528, align 4, !dbg !7865
  br label %for.cond571, !dbg !7867

for.cond571:                                      ; preds = %for.inc665, %for.end554
  %798 = load i32, i32* %S528, align 4, !dbg !7868
  %799 = load %struct.CCGFace*, %struct.CCGFace** %f525, align 8, !dbg !7870
  %numVerts572 = getelementptr inbounds %struct.CCGFace, %struct.CCGFace* %799, i32 0, i32 2, !dbg !7871
  %800 = load i16, i16* %numVerts572, align 8, !dbg !7871
  %conv573 = sext i16 %800 to i32, !dbg !7870
  %cmp574 = icmp slt i32 %798, %conv573, !dbg !7872
  br i1 %cmp574, label %for.body576, label %for.end667, !dbg !7873

for.body576:                                      ; preds = %for.cond571
  store i32 1, i32* %x529, align 4, !dbg !7874
  br label %for.cond577, !dbg !7877

for.cond577:                                      ; preds = %for.inc622, %for.body576
  %801 = load i32, i32* %x529, align 4, !dbg !7878
  %802 = load i32, i32* %gridSize, align 4, !dbg !7880
  %sub578 = sub nsw i32 %802, 1, !dbg !7881
  %cmp579 = icmp slt i32 %801, %sub578, !dbg !7882
  br i1 %cmp579, label %for.body581, label %for.end624, !dbg !7883

for.body581:                                      ; preds = %for.cond577
  store i32 1, i32* %y530, align 4, !dbg !7884
  br label %for.cond582, !dbg !7887

for.cond582:                                      ; preds = %for.inc619, %for.body581
  %803 = load i32, i32* %y530, align 4, !dbg !7888
  %804 = load i32, i32* %gridSize, align 4, !dbg !7890
  %sub583 = sub nsw i32 %804, 1, !dbg !7891
  %cmp584 = icmp slt i32 %803, %sub583, !dbg !7892
  br i1 %cmp584, label %for.body586, label %for.end621, !dbg !7893

for.body586:                                      ; preds = %for.cond582
  call void @llvm.dbg.declare(metadata i32* %fx587, metadata !7894, metadata !DIExpression()), !dbg !7896
  %805 = load i32, i32* %x529, align 4, !dbg !7897
  %mul588 = mul nsw i32 %805, 2, !dbg !7898
  store i32 %mul588, i32* %fx587, align 4, !dbg !7896
  call void @llvm.dbg.declare(metadata i32* %fy589, metadata !7899, metadata !DIExpression()), !dbg !7900
  %806 = load i32, i32* %y530, align 4, !dbg !7901
  %mul590 = mul nsw i32 %806, 2, !dbg !7902
  store i32 %mul590, i32* %fy589, align 4, !dbg !7900
  call void @llvm.dbg.declare(metadata float** %co591, metadata !7903, metadata !DIExpression()), !dbg !7904
  %807 = load %struct.CCGFace*, %struct.CCGFace** %f525, align 8, !dbg !7905
  %808 = load i32, i32* %curLvl.addr, align 4, !dbg !7905
  %809 = load i32, i32* %S528, align 4, !dbg !7905
  %810 = load i32, i32* %x529, align 4, !dbg !7905
  %811 = load i32, i32* %y530, align 4, !dbg !7905
  %812 = load i32, i32* %subdivLevels, align 4, !dbg !7905
  %813 = load i32, i32* %vertDataSize, align 4, !dbg !7905
  %call592 = call i8* @_face_getIFCo(%struct.CCGFace* %807, i32 %808, i32 %809, i32 %810, i32 %811, i32 %812, i32 %813), !dbg !7905
  %814 = bitcast i8* %call592 to float*, !dbg !7905
  store float* %814, float** %co591, align 8, !dbg !7904
  call void @llvm.dbg.declare(metadata float** %nCo593, metadata !7906, metadata !DIExpression()), !dbg !7907
  %815 = load %struct.CCGFace*, %struct.CCGFace** %f525, align 8, !dbg !7908
  %816 = load i32, i32* %nextLvl, align 4, !dbg !7908
  %817 = load i32, i32* %S528, align 4, !dbg !7908
  %818 = load i32, i32* %fx587, align 4, !dbg !7908
  %819 = load i32, i32* %fy589, align 4, !dbg !7908
  %820 = load i32, i32* %subdivLevels, align 4, !dbg !7908
  %821 = load i32, i32* %vertDataSize, align 4, !dbg !7908
  %call594 = call i8* @_face_getIFCo(%struct.CCGFace* %815, i32 %816, i32 %817, i32 %818, i32 %819, i32 %820, i32 %821), !dbg !7908
  %822 = bitcast i8* %call594 to float*, !dbg !7908
  store float* %822, float** %nCo593, align 8, !dbg !7907
  %823 = load float*, float** %q511, align 8, !dbg !7909
  %824 = load %struct.CCGFace*, %struct.CCGFace** %f525, align 8, !dbg !7910
  %825 = load i32, i32* %nextLvl, align 4, !dbg !7910
  %826 = load i32, i32* %S528, align 4, !dbg !7910
  %827 = load i32, i32* %fx587, align 4, !dbg !7910
  %sub595 = sub nsw i32 %827, 1, !dbg !7910
  %828 = load i32, i32* %fy589, align 4, !dbg !7910
  %sub596 = sub nsw i32 %828, 1, !dbg !7910
  %829 = load i32, i32* %subdivLevels, align 4, !dbg !7910
  %830 = load i32, i32* %vertDataSize, align 4, !dbg !7910
  %call597 = call i8* @_face_getIFCo(%struct.CCGFace* %824, i32 %825, i32 %826, i32 %sub595, i32 %sub596, i32 %829, i32 %830), !dbg !7910
  %831 = bitcast i8* %call597 to float*, !dbg !7910
  %832 = load %struct.CCGFace*, %struct.CCGFace** %f525, align 8, !dbg !7911
  %833 = load i32, i32* %nextLvl, align 4, !dbg !7911
  %834 = load i32, i32* %S528, align 4, !dbg !7911
  %835 = load i32, i32* %fx587, align 4, !dbg !7911
  %add598 = add nsw i32 %835, 1, !dbg !7911
  %836 = load i32, i32* %fy589, align 4, !dbg !7911
  %sub599 = sub nsw i32 %836, 1, !dbg !7911
  %837 = load i32, i32* %subdivLevels, align 4, !dbg !7911
  %838 = load i32, i32* %vertDataSize, align 4, !dbg !7911
  %call600 = call i8* @_face_getIFCo(%struct.CCGFace* %832, i32 %833, i32 %834, i32 %add598, i32 %sub599, i32 %837, i32 %838), !dbg !7911
  %839 = bitcast i8* %call600 to float*, !dbg !7911
  %840 = load %struct.CCGFace*, %struct.CCGFace** %f525, align 8, !dbg !7912
  %841 = load i32, i32* %nextLvl, align 4, !dbg !7912
  %842 = load i32, i32* %S528, align 4, !dbg !7912
  %843 = load i32, i32* %fx587, align 4, !dbg !7912
  %add601 = add nsw i32 %843, 1, !dbg !7912
  %844 = load i32, i32* %fy589, align 4, !dbg !7912
  %add602 = add nsw i32 %844, 1, !dbg !7912
  %845 = load i32, i32* %subdivLevels, align 4, !dbg !7912
  %846 = load i32, i32* %vertDataSize, align 4, !dbg !7912
  %call603 = call i8* @_face_getIFCo(%struct.CCGFace* %840, i32 %841, i32 %842, i32 %add601, i32 %add602, i32 %845, i32 %846), !dbg !7912
  %847 = bitcast i8* %call603 to float*, !dbg !7912
  %848 = load %struct.CCGFace*, %struct.CCGFace** %f525, align 8, !dbg !7913
  %849 = load i32, i32* %nextLvl, align 4, !dbg !7913
  %850 = load i32, i32* %S528, align 4, !dbg !7913
  %851 = load i32, i32* %fx587, align 4, !dbg !7913
  %sub604 = sub nsw i32 %851, 1, !dbg !7913
  %852 = load i32, i32* %fy589, align 4, !dbg !7913
  %add605 = add nsw i32 %852, 1, !dbg !7913
  %853 = load i32, i32* %subdivLevels, align 4, !dbg !7913
  %854 = load i32, i32* %vertDataSize, align 4, !dbg !7913
  %call606 = call i8* @_face_getIFCo(%struct.CCGFace* %848, i32 %849, i32 %850, i32 %sub604, i32 %add605, i32 %853, i32 %854), !dbg !7913
  %855 = bitcast i8* %call606 to float*, !dbg !7913
  %856 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !7914
  call void @VertDataAvg4(float* %823, float* %831, float* %839, float* %847, float* %855, %struct.CCGSubSurf* %856), !dbg !7915
  %857 = load float*, float** %r512, align 8, !dbg !7916
  %858 = load %struct.CCGFace*, %struct.CCGFace** %f525, align 8, !dbg !7917
  %859 = load i32, i32* %nextLvl, align 4, !dbg !7917
  %860 = load i32, i32* %S528, align 4, !dbg !7917
  %861 = load i32, i32* %fx587, align 4, !dbg !7917
  %sub607 = sub nsw i32 %861, 1, !dbg !7917
  %862 = load i32, i32* %fy589, align 4, !dbg !7917
  %add608 = add nsw i32 %862, 0, !dbg !7917
  %863 = load i32, i32* %subdivLevels, align 4, !dbg !7917
  %864 = load i32, i32* %vertDataSize, align 4, !dbg !7917
  %call609 = call i8* @_face_getIFCo(%struct.CCGFace* %858, i32 %859, i32 %860, i32 %sub607, i32 %add608, i32 %863, i32 %864), !dbg !7917
  %865 = bitcast i8* %call609 to float*, !dbg !7917
  %866 = load %struct.CCGFace*, %struct.CCGFace** %f525, align 8, !dbg !7918
  %867 = load i32, i32* %nextLvl, align 4, !dbg !7918
  %868 = load i32, i32* %S528, align 4, !dbg !7918
  %869 = load i32, i32* %fx587, align 4, !dbg !7918
  %add610 = add nsw i32 %869, 1, !dbg !7918
  %870 = load i32, i32* %fy589, align 4, !dbg !7918
  %add611 = add nsw i32 %870, 0, !dbg !7918
  %871 = load i32, i32* %subdivLevels, align 4, !dbg !7918
  %872 = load i32, i32* %vertDataSize, align 4, !dbg !7918
  %call612 = call i8* @_face_getIFCo(%struct.CCGFace* %866, i32 %867, i32 %868, i32 %add610, i32 %add611, i32 %871, i32 %872), !dbg !7918
  %873 = bitcast i8* %call612 to float*, !dbg !7918
  %874 = load %struct.CCGFace*, %struct.CCGFace** %f525, align 8, !dbg !7919
  %875 = load i32, i32* %nextLvl, align 4, !dbg !7919
  %876 = load i32, i32* %S528, align 4, !dbg !7919
  %877 = load i32, i32* %fx587, align 4, !dbg !7919
  %add613 = add nsw i32 %877, 0, !dbg !7919
  %878 = load i32, i32* %fy589, align 4, !dbg !7919
  %sub614 = sub nsw i32 %878, 1, !dbg !7919
  %879 = load i32, i32* %subdivLevels, align 4, !dbg !7919
  %880 = load i32, i32* %vertDataSize, align 4, !dbg !7919
  %call615 = call i8* @_face_getIFCo(%struct.CCGFace* %874, i32 %875, i32 %876, i32 %add613, i32 %sub614, i32 %879, i32 %880), !dbg !7919
  %881 = bitcast i8* %call615 to float*, !dbg !7919
  %882 = load %struct.CCGFace*, %struct.CCGFace** %f525, align 8, !dbg !7920
  %883 = load i32, i32* %nextLvl, align 4, !dbg !7920
  %884 = load i32, i32* %S528, align 4, !dbg !7920
  %885 = load i32, i32* %fx587, align 4, !dbg !7920
  %add616 = add nsw i32 %885, 0, !dbg !7920
  %886 = load i32, i32* %fy589, align 4, !dbg !7920
  %add617 = add nsw i32 %886, 1, !dbg !7920
  %887 = load i32, i32* %subdivLevels, align 4, !dbg !7920
  %888 = load i32, i32* %vertDataSize, align 4, !dbg !7920
  %call618 = call i8* @_face_getIFCo(%struct.CCGFace* %882, i32 %883, i32 %884, i32 %add616, i32 %add617, i32 %887, i32 %888), !dbg !7920
  %889 = bitcast i8* %call618 to float*, !dbg !7920
  %890 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !7921
  call void @VertDataAvg4(float* %857, float* %865, float* %873, float* %881, float* %889, %struct.CCGSubSurf* %890), !dbg !7922
  %891 = load float*, float** %nCo593, align 8, !dbg !7923
  %892 = load float*, float** %co591, align 8, !dbg !7924
  %893 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !7925
  call void @VertDataCopy(float* %891, float* %892, %struct.CCGSubSurf* %893), !dbg !7926
  %894 = load float*, float** %nCo593, align 8, !dbg !7927
  %895 = load float*, float** %q511, align 8, !dbg !7928
  %896 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !7929
  call void @VertDataSub(float* %894, float* %895, %struct.CCGSubSurf* %896), !dbg !7930
  %897 = load float*, float** %nCo593, align 8, !dbg !7931
  %898 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !7932
  call void @VertDataMulN(float* %897, float 2.500000e-01, %struct.CCGSubSurf* %898), !dbg !7933
  %899 = load float*, float** %nCo593, align 8, !dbg !7934
  %900 = load float*, float** %r512, align 8, !dbg !7935
  %901 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !7936
  call void @VertDataAdd(float* %899, float* %900, %struct.CCGSubSurf* %901), !dbg !7937
  br label %for.inc619, !dbg !7938

for.inc619:                                       ; preds = %for.body586
  %902 = load i32, i32* %y530, align 4, !dbg !7939
  %inc620 = add nsw i32 %902, 1, !dbg !7939
  store i32 %inc620, i32* %y530, align 4, !dbg !7939
  br label %for.cond582, !dbg !7940, !llvm.loop !7941

for.end621:                                       ; preds = %for.cond582
  br label %for.inc622, !dbg !7943

for.inc622:                                       ; preds = %for.end621
  %903 = load i32, i32* %x529, align 4, !dbg !7944
  %inc623 = add nsw i32 %903, 1, !dbg !7944
  store i32 %inc623, i32* %x529, align 4, !dbg !7944
  br label %for.cond577, !dbg !7945, !llvm.loop !7946

for.end624:                                       ; preds = %for.cond577
  store i32 1, i32* %x529, align 4, !dbg !7948
  br label %for.cond625, !dbg !7950

for.cond625:                                      ; preds = %for.inc662, %for.end624
  %904 = load i32, i32* %x529, align 4, !dbg !7951
  %905 = load i32, i32* %gridSize, align 4, !dbg !7953
  %sub626 = sub nsw i32 %905, 1, !dbg !7954
  %cmp627 = icmp slt i32 %904, %sub626, !dbg !7955
  br i1 %cmp627, label %for.body629, label %for.end664, !dbg !7956

for.body629:                                      ; preds = %for.cond625
  call void @llvm.dbg.declare(metadata i32* %fx630, metadata !7957, metadata !DIExpression()), !dbg !7959
  %906 = load i32, i32* %x529, align 4, !dbg !7960
  %mul631 = mul nsw i32 %906, 2, !dbg !7961
  store i32 %mul631, i32* %fx630, align 4, !dbg !7959
  call void @llvm.dbg.declare(metadata float** %co632, metadata !7962, metadata !DIExpression()), !dbg !7963
  %907 = load %struct.CCGFace*, %struct.CCGFace** %f525, align 8, !dbg !7964
  %908 = load i32, i32* %curLvl.addr, align 4, !dbg !7964
  %909 = load i32, i32* %S528, align 4, !dbg !7964
  %910 = load i32, i32* %x529, align 4, !dbg !7964
  %911 = load i32, i32* %subdivLevels, align 4, !dbg !7964
  %912 = load i32, i32* %vertDataSize, align 4, !dbg !7964
  %call633 = call i8* @_face_getIECo(%struct.CCGFace* %907, i32 %908, i32 %909, i32 %910, i32 %911, i32 %912), !dbg !7964
  %913 = bitcast i8* %call633 to float*, !dbg !7964
  store float* %913, float** %co632, align 8, !dbg !7963
  call void @llvm.dbg.declare(metadata float** %nCo634, metadata !7965, metadata !DIExpression()), !dbg !7966
  %914 = load %struct.CCGFace*, %struct.CCGFace** %f525, align 8, !dbg !7967
  %915 = load i32, i32* %nextLvl, align 4, !dbg !7967
  %916 = load i32, i32* %S528, align 4, !dbg !7967
  %917 = load i32, i32* %fx630, align 4, !dbg !7967
  %918 = load i32, i32* %subdivLevels, align 4, !dbg !7967
  %919 = load i32, i32* %vertDataSize, align 4, !dbg !7967
  %call635 = call i8* @_face_getIECo(%struct.CCGFace* %914, i32 %915, i32 %916, i32 %917, i32 %918, i32 %919), !dbg !7967
  %920 = bitcast i8* %call635 to float*, !dbg !7967
  store float* %920, float** %nCo634, align 8, !dbg !7966
  %921 = load float*, float** %q511, align 8, !dbg !7968
  %922 = load %struct.CCGFace*, %struct.CCGFace** %f525, align 8, !dbg !7969
  %923 = load i32, i32* %nextLvl, align 4, !dbg !7969
  %924 = load i32, i32* %S528, align 4, !dbg !7969
  %add636 = add nsw i32 %924, 1, !dbg !7969
  %925 = load %struct.CCGFace*, %struct.CCGFace** %f525, align 8, !dbg !7969
  %numVerts637 = getelementptr inbounds %struct.CCGFace, %struct.CCGFace* %925, i32 0, i32 2, !dbg !7969
  %926 = load i16, i16* %numVerts637, align 8, !dbg !7969
  %conv638 = sext i16 %926 to i32, !dbg !7969
  %rem639 = srem i32 %add636, %conv638, !dbg !7969
  %927 = load i32, i32* %fx630, align 4, !dbg !7969
  %sub640 = sub nsw i32 %927, 1, !dbg !7969
  %928 = load i32, i32* %subdivLevels, align 4, !dbg !7969
  %929 = load i32, i32* %vertDataSize, align 4, !dbg !7969
  %call641 = call i8* @_face_getIFCo(%struct.CCGFace* %922, i32 %923, i32 %rem639, i32 1, i32 %sub640, i32 %928, i32 %929), !dbg !7969
  %930 = bitcast i8* %call641 to float*, !dbg !7969
  %931 = load %struct.CCGFace*, %struct.CCGFace** %f525, align 8, !dbg !7970
  %932 = load i32, i32* %nextLvl, align 4, !dbg !7970
  %933 = load i32, i32* %S528, align 4, !dbg !7970
  %add642 = add nsw i32 %933, 1, !dbg !7970
  %934 = load %struct.CCGFace*, %struct.CCGFace** %f525, align 8, !dbg !7970
  %numVerts643 = getelementptr inbounds %struct.CCGFace, %struct.CCGFace* %934, i32 0, i32 2, !dbg !7970
  %935 = load i16, i16* %numVerts643, align 8, !dbg !7970
  %conv644 = sext i16 %935 to i32, !dbg !7970
  %rem645 = srem i32 %add642, %conv644, !dbg !7970
  %936 = load i32, i32* %fx630, align 4, !dbg !7970
  %add646 = add nsw i32 %936, 1, !dbg !7970
  %937 = load i32, i32* %subdivLevels, align 4, !dbg !7970
  %938 = load i32, i32* %vertDataSize, align 4, !dbg !7970
  %call647 = call i8* @_face_getIFCo(%struct.CCGFace* %931, i32 %932, i32 %rem645, i32 1, i32 %add646, i32 %937, i32 %938), !dbg !7970
  %939 = bitcast i8* %call647 to float*, !dbg !7970
  %940 = load %struct.CCGFace*, %struct.CCGFace** %f525, align 8, !dbg !7971
  %941 = load i32, i32* %nextLvl, align 4, !dbg !7971
  %942 = load i32, i32* %S528, align 4, !dbg !7971
  %943 = load i32, i32* %fx630, align 4, !dbg !7971
  %add648 = add nsw i32 %943, 1, !dbg !7971
  %944 = load i32, i32* %subdivLevels, align 4, !dbg !7971
  %945 = load i32, i32* %vertDataSize, align 4, !dbg !7971
  %call649 = call i8* @_face_getIFCo(%struct.CCGFace* %940, i32 %941, i32 %942, i32 %add648, i32 1, i32 %944, i32 %945), !dbg !7971
  %946 = bitcast i8* %call649 to float*, !dbg !7971
  %947 = load %struct.CCGFace*, %struct.CCGFace** %f525, align 8, !dbg !7972
  %948 = load i32, i32* %nextLvl, align 4, !dbg !7972
  %949 = load i32, i32* %S528, align 4, !dbg !7972
  %950 = load i32, i32* %fx630, align 4, !dbg !7972
  %sub650 = sub nsw i32 %950, 1, !dbg !7972
  %951 = load i32, i32* %subdivLevels, align 4, !dbg !7972
  %952 = load i32, i32* %vertDataSize, align 4, !dbg !7972
  %call651 = call i8* @_face_getIFCo(%struct.CCGFace* %947, i32 %948, i32 %949, i32 %sub650, i32 1, i32 %951, i32 %952), !dbg !7972
  %953 = bitcast i8* %call651 to float*, !dbg !7972
  %954 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !7973
  call void @VertDataAvg4(float* %921, float* %930, float* %939, float* %946, float* %953, %struct.CCGSubSurf* %954), !dbg !7974
  %955 = load float*, float** %r512, align 8, !dbg !7975
  %956 = load %struct.CCGFace*, %struct.CCGFace** %f525, align 8, !dbg !7976
  %957 = load i32, i32* %nextLvl, align 4, !dbg !7976
  %958 = load i32, i32* %S528, align 4, !dbg !7976
  %959 = load i32, i32* %fx630, align 4, !dbg !7976
  %sub652 = sub nsw i32 %959, 1, !dbg !7976
  %960 = load i32, i32* %subdivLevels, align 4, !dbg !7976
  %961 = load i32, i32* %vertDataSize, align 4, !dbg !7976
  %call653 = call i8* @_face_getIECo(%struct.CCGFace* %956, i32 %957, i32 %958, i32 %sub652, i32 %960, i32 %961), !dbg !7976
  %962 = bitcast i8* %call653 to float*, !dbg !7976
  %963 = load %struct.CCGFace*, %struct.CCGFace** %f525, align 8, !dbg !7977
  %964 = load i32, i32* %nextLvl, align 4, !dbg !7977
  %965 = load i32, i32* %S528, align 4, !dbg !7977
  %966 = load i32, i32* %fx630, align 4, !dbg !7977
  %add654 = add nsw i32 %966, 1, !dbg !7977
  %967 = load i32, i32* %subdivLevels, align 4, !dbg !7977
  %968 = load i32, i32* %vertDataSize, align 4, !dbg !7977
  %call655 = call i8* @_face_getIECo(%struct.CCGFace* %963, i32 %964, i32 %965, i32 %add654, i32 %967, i32 %968), !dbg !7977
  %969 = bitcast i8* %call655 to float*, !dbg !7977
  %970 = load %struct.CCGFace*, %struct.CCGFace** %f525, align 8, !dbg !7978
  %971 = load i32, i32* %nextLvl, align 4, !dbg !7978
  %972 = load i32, i32* %S528, align 4, !dbg !7978
  %add656 = add nsw i32 %972, 1, !dbg !7978
  %973 = load %struct.CCGFace*, %struct.CCGFace** %f525, align 8, !dbg !7978
  %numVerts657 = getelementptr inbounds %struct.CCGFace, %struct.CCGFace* %973, i32 0, i32 2, !dbg !7978
  %974 = load i16, i16* %numVerts657, align 8, !dbg !7978
  %conv658 = sext i16 %974 to i32, !dbg !7978
  %rem659 = srem i32 %add656, %conv658, !dbg !7978
  %975 = load i32, i32* %fx630, align 4, !dbg !7978
  %976 = load i32, i32* %subdivLevels, align 4, !dbg !7978
  %977 = load i32, i32* %vertDataSize, align 4, !dbg !7978
  %call660 = call i8* @_face_getIFCo(%struct.CCGFace* %970, i32 %971, i32 %rem659, i32 1, i32 %975, i32 %976, i32 %977), !dbg !7978
  %978 = bitcast i8* %call660 to float*, !dbg !7978
  %979 = load %struct.CCGFace*, %struct.CCGFace** %f525, align 8, !dbg !7979
  %980 = load i32, i32* %nextLvl, align 4, !dbg !7979
  %981 = load i32, i32* %S528, align 4, !dbg !7979
  %982 = load i32, i32* %fx630, align 4, !dbg !7979
  %983 = load i32, i32* %subdivLevels, align 4, !dbg !7979
  %984 = load i32, i32* %vertDataSize, align 4, !dbg !7979
  %call661 = call i8* @_face_getIFCo(%struct.CCGFace* %979, i32 %980, i32 %981, i32 %982, i32 1, i32 %983, i32 %984), !dbg !7979
  %985 = bitcast i8* %call661 to float*, !dbg !7979
  %986 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !7980
  call void @VertDataAvg4(float* %955, float* %962, float* %969, float* %978, float* %985, %struct.CCGSubSurf* %986), !dbg !7981
  %987 = load float*, float** %nCo634, align 8, !dbg !7982
  %988 = load float*, float** %co632, align 8, !dbg !7983
  %989 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !7984
  call void @VertDataCopy(float* %987, float* %988, %struct.CCGSubSurf* %989), !dbg !7985
  %990 = load float*, float** %nCo634, align 8, !dbg !7986
  %991 = load float*, float** %q511, align 8, !dbg !7987
  %992 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !7988
  call void @VertDataSub(float* %990, float* %991, %struct.CCGSubSurf* %992), !dbg !7989
  %993 = load float*, float** %nCo634, align 8, !dbg !7990
  %994 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !7991
  call void @VertDataMulN(float* %993, float 2.500000e-01, %struct.CCGSubSurf* %994), !dbg !7992
  %995 = load float*, float** %nCo634, align 8, !dbg !7993
  %996 = load float*, float** %r512, align 8, !dbg !7994
  %997 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !7995
  call void @VertDataAdd(float* %995, float* %996, %struct.CCGSubSurf* %997), !dbg !7996
  br label %for.inc662, !dbg !7997

for.inc662:                                       ; preds = %for.body629
  %998 = load i32, i32* %x529, align 4, !dbg !7998
  %inc663 = add nsw i32 %998, 1, !dbg !7998
  store i32 %inc663, i32* %x529, align 4, !dbg !7998
  br label %for.cond625, !dbg !7999, !llvm.loop !8000

for.end664:                                       ; preds = %for.cond625
  br label %for.inc665, !dbg !8002

for.inc665:                                       ; preds = %for.end664
  %999 = load i32, i32* %S528, align 4, !dbg !8003
  %inc666 = add nsw i32 %999, 1, !dbg !8003
  store i32 %inc666, i32* %S528, align 4, !dbg !8003
  br label %for.cond571, !dbg !8004, !llvm.loop !8005

for.end667:                                       ; preds = %for.cond571
  br label %for.inc668, !dbg !8007

for.inc668:                                       ; preds = %for.end667
  %1000 = load i32, i32* %ptrIdx, align 4, !dbg !8008
  %inc669 = add nsw i32 %1000, 1, !dbg !8008
  store i32 %inc669, i32* %ptrIdx, align 4, !dbg !8008
  br label %for.cond521, !dbg !8009, !llvm.loop !8010

for.end670:                                       ; preds = %for.cond521
  %1001 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !8012
  %1002 = load float*, float** %q511, align 8, !dbg !8014
  %1003 = bitcast float* %1002 to i8*, !dbg !8014
  call void %1001(i8* %1003), !dbg !8012
  %1004 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !8015
  %1005 = load float*, float** %r512, align 8, !dbg !8016
  %1006 = bitcast float* %1005 to i8*, !dbg !8016
  call void %1004(i8* %1006), !dbg !8015
  %1007 = load i32, i32* %nextLvl, align 4, !dbg !8017
  %call671 = call i32 @ccg_edgesize(i32 %1007), !dbg !8018
  store i32 %call671, i32* %edgeSize, align 4, !dbg !8019
  %1008 = load i32, i32* %nextLvl, align 4, !dbg !8020
  %call672 = call i32 @ccg_gridsize(i32 %1008), !dbg !8021
  store i32 %call672, i32* %gridSize, align 4, !dbg !8022
  %1009 = load i32, i32* %gridSize, align 4, !dbg !8023
  %sub673 = sub nsw i32 %1009, 1, !dbg !8024
  store i32 %sub673, i32* %cornerIdx, align 4, !dbg !8025
  store i32 0, i32* %i, align 4, !dbg !8026
  br label %for.cond674, !dbg !8028

for.cond674:                                      ; preds = %for.inc686, %for.end670
  %1010 = load i32, i32* %i, align 4, !dbg !8029
  %1011 = load i32, i32* %numEffectedE.addr, align 4, !dbg !8031
  %cmp675 = icmp slt i32 %1010, %1011, !dbg !8032
  br i1 %cmp675, label %for.body677, label %for.end688, !dbg !8033

for.body677:                                      ; preds = %for.cond674
  call void @llvm.dbg.declare(metadata %struct.CCGEdge** %e678, metadata !8034, metadata !DIExpression()), !dbg !8036
  %1012 = load %struct.CCGEdge**, %struct.CCGEdge*** %effectedE.addr, align 8, !dbg !8037
  %1013 = load i32, i32* %i, align 4, !dbg !8038
  %idxprom679 = sext i32 %1013 to i64, !dbg !8037
  %arrayidx680 = getelementptr inbounds %struct.CCGEdge*, %struct.CCGEdge** %1012, i64 %idxprom679, !dbg !8037
  %1014 = load %struct.CCGEdge*, %struct.CCGEdge** %arrayidx680, align 8, !dbg !8037
  store %struct.CCGEdge* %1014, %struct.CCGEdge** %e678, align 8, !dbg !8036
  %1015 = load %struct.CCGEdge*, %struct.CCGEdge** %e678, align 8, !dbg !8039
  %1016 = load i32, i32* %nextLvl, align 4, !dbg !8039
  %1017 = load i32, i32* %vertDataSize, align 4, !dbg !8039
  %call681 = call i8* @_edge_getCo(%struct.CCGEdge* %1015, i32 %1016, i32 0, i32 %1017), !dbg !8039
  %1018 = bitcast i8* %call681 to float*, !dbg !8039
  %1019 = load %struct.CCGEdge*, %struct.CCGEdge** %e678, align 8, !dbg !8040
  %v0 = getelementptr inbounds %struct.CCGEdge, %struct.CCGEdge* %1019, i32 0, i32 5, !dbg !8040
  %1020 = load %struct.CCGVert*, %struct.CCGVert** %v0, align 8, !dbg !8040
  %1021 = load i32, i32* %nextLvl, align 4, !dbg !8040
  %1022 = load i32, i32* %vertDataSize, align 4, !dbg !8040
  %call682 = call i8* @_vert_getCo(%struct.CCGVert* %1020, i32 %1021, i32 %1022), !dbg !8040
  %1023 = bitcast i8* %call682 to float*, !dbg !8040
  %1024 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !8041
  call void @VertDataCopy(float* %1018, float* %1023, %struct.CCGSubSurf* %1024), !dbg !8042
  %1025 = load %struct.CCGEdge*, %struct.CCGEdge** %e678, align 8, !dbg !8043
  %1026 = load i32, i32* %nextLvl, align 4, !dbg !8043
  %1027 = load i32, i32* %edgeSize, align 4, !dbg !8043
  %sub683 = sub nsw i32 %1027, 1, !dbg !8043
  %1028 = load i32, i32* %vertDataSize, align 4, !dbg !8043
  %call684 = call i8* @_edge_getCo(%struct.CCGEdge* %1025, i32 %1026, i32 %sub683, i32 %1028), !dbg !8043
  %1029 = bitcast i8* %call684 to float*, !dbg !8043
  %1030 = load %struct.CCGEdge*, %struct.CCGEdge** %e678, align 8, !dbg !8044
  %v1 = getelementptr inbounds %struct.CCGEdge, %struct.CCGEdge* %1030, i32 0, i32 6, !dbg !8044
  %1031 = load %struct.CCGVert*, %struct.CCGVert** %v1, align 8, !dbg !8044
  %1032 = load i32, i32* %nextLvl, align 4, !dbg !8044
  %1033 = load i32, i32* %vertDataSize, align 4, !dbg !8044
  %call685 = call i8* @_vert_getCo(%struct.CCGVert* %1031, i32 %1032, i32 %1033), !dbg !8044
  %1034 = bitcast i8* %call685 to float*, !dbg !8044
  %1035 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !8045
  call void @VertDataCopy(float* %1029, float* %1034, %struct.CCGSubSurf* %1035), !dbg !8046
  br label %for.inc686, !dbg !8047

for.inc686:                                       ; preds = %for.body677
  %1036 = load i32, i32* %i, align 4, !dbg !8048
  %inc687 = add nsw i32 %1036, 1, !dbg !8048
  store i32 %inc687, i32* %i, align 4, !dbg !8048
  br label %for.cond674, !dbg !8049, !llvm.loop !8050

for.end688:                                       ; preds = %for.cond674
  store i32 0, i32* %i, align 4, !dbg !8052
  br label %for.cond689, !dbg !8054

for.cond689:                                      ; preds = %for.inc771, %for.end688
  %1037 = load i32, i32* %i, align 4, !dbg !8055
  %1038 = load i32, i32* %numEffectedF.addr, align 4, !dbg !8057
  %cmp690 = icmp slt i32 %1037, %1038, !dbg !8058
  br i1 %cmp690, label %for.body692, label %for.end773, !dbg !8059

for.body692:                                      ; preds = %for.cond689
  call void @llvm.dbg.declare(metadata %struct.CCGFace** %f693, metadata !8060, metadata !DIExpression()), !dbg !8062
  %1039 = load %struct.CCGFace**, %struct.CCGFace*** %effectedF.addr, align 8, !dbg !8063
  %1040 = load i32, i32* %i, align 4, !dbg !8064
  %idxprom694 = sext i32 %1040 to i64, !dbg !8063
  %arrayidx695 = getelementptr inbounds %struct.CCGFace*, %struct.CCGFace** %1039, i64 %idxprom694, !dbg !8063
  %1041 = load %struct.CCGFace*, %struct.CCGFace** %arrayidx695, align 8, !dbg !8063
  store %struct.CCGFace* %1041, %struct.CCGFace** %f693, align 8, !dbg !8062
  call void @llvm.dbg.declare(metadata i32* %S696, metadata !8065, metadata !DIExpression()), !dbg !8066
  call void @llvm.dbg.declare(metadata i32* %x697, metadata !8067, metadata !DIExpression()), !dbg !8068
  store i32 0, i32* %S696, align 4, !dbg !8069
  br label %for.cond698, !dbg !8071

for.cond698:                                      ; preds = %for.inc768, %for.body692
  %1042 = load i32, i32* %S696, align 4, !dbg !8072
  %1043 = load %struct.CCGFace*, %struct.CCGFace** %f693, align 8, !dbg !8074
  %numVerts699 = getelementptr inbounds %struct.CCGFace, %struct.CCGFace* %1043, i32 0, i32 2, !dbg !8075
  %1044 = load i16, i16* %numVerts699, align 8, !dbg !8075
  %conv700 = sext i16 %1044 to i32, !dbg !8074
  %cmp701 = icmp slt i32 %1042, %conv700, !dbg !8076
  br i1 %cmp701, label %for.body703, label %for.end770, !dbg !8077

for.body703:                                      ; preds = %for.cond698
  call void @llvm.dbg.declare(metadata %struct.CCGEdge** %e704, metadata !8078, metadata !DIExpression()), !dbg !8080
  %1045 = load %struct.CCGFace*, %struct.CCGFace** %f693, align 8, !dbg !8081
  %call705 = call %struct.CCGEdge** @FACE_getEdges(%struct.CCGFace* %1045), !dbg !8082
  %1046 = load i32, i32* %S696, align 4, !dbg !8083
  %idxprom706 = sext i32 %1046 to i64, !dbg !8082
  %arrayidx707 = getelementptr inbounds %struct.CCGEdge*, %struct.CCGEdge** %call705, i64 %idxprom706, !dbg !8082
  %1047 = load %struct.CCGEdge*, %struct.CCGEdge** %arrayidx707, align 8, !dbg !8082
  store %struct.CCGEdge* %1047, %struct.CCGEdge** %e704, align 8, !dbg !8080
  call void @llvm.dbg.declare(metadata %struct.CCGEdge** %prevE, metadata !8084, metadata !DIExpression()), !dbg !8085
  %1048 = load %struct.CCGFace*, %struct.CCGFace** %f693, align 8, !dbg !8086
  %call708 = call %struct.CCGEdge** @FACE_getEdges(%struct.CCGFace* %1048), !dbg !8087
  %1049 = load i32, i32* %S696, align 4, !dbg !8088
  %1050 = load %struct.CCGFace*, %struct.CCGFace** %f693, align 8, !dbg !8089
  %numVerts709 = getelementptr inbounds %struct.CCGFace, %struct.CCGFace* %1050, i32 0, i32 2, !dbg !8090
  %1051 = load i16, i16* %numVerts709, align 8, !dbg !8090
  %conv710 = sext i16 %1051 to i32, !dbg !8089
  %add711 = add nsw i32 %1049, %conv710, !dbg !8091
  %sub712 = sub nsw i32 %add711, 1, !dbg !8092
  %1052 = load %struct.CCGFace*, %struct.CCGFace** %f693, align 8, !dbg !8093
  %numVerts713 = getelementptr inbounds %struct.CCGFace, %struct.CCGFace* %1052, i32 0, i32 2, !dbg !8094
  %1053 = load i16, i16* %numVerts713, align 8, !dbg !8094
  %conv714 = sext i16 %1053 to i32, !dbg !8093
  %rem715 = srem i32 %sub712, %conv714, !dbg !8095
  %idxprom716 = sext i32 %rem715 to i64, !dbg !8087
  %arrayidx717 = getelementptr inbounds %struct.CCGEdge*, %struct.CCGEdge** %call708, i64 %idxprom716, !dbg !8087
  %1054 = load %struct.CCGEdge*, %struct.CCGEdge** %arrayidx717, align 8, !dbg !8087
  store %struct.CCGEdge* %1054, %struct.CCGEdge** %prevE, align 8, !dbg !8085
  %1055 = load %struct.CCGFace*, %struct.CCGFace** %f693, align 8, !dbg !8096
  %1056 = load i32, i32* %nextLvl, align 4, !dbg !8096
  %1057 = load i32, i32* %S696, align 4, !dbg !8096
  %1058 = load i32, i32* %subdivLevels, align 4, !dbg !8096
  %1059 = load i32, i32* %vertDataSize, align 4, !dbg !8096
  %call718 = call i8* @_face_getIFCo(%struct.CCGFace* %1055, i32 %1056, i32 %1057, i32 0, i32 0, i32 %1058, i32 %1059), !dbg !8096
  %1060 = bitcast i8* %call718 to float*, !dbg !8096
  %1061 = load %struct.CCGFace*, %struct.CCGFace** %f693, align 8, !dbg !8097
  %call719 = call i8* @FACE_getCenterData(%struct.CCGFace* %1061), !dbg !8098
  %1062 = bitcast i8* %call719 to float*, !dbg !8099
  %1063 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !8100
  call void @VertDataCopy(float* %1060, float* %1062, %struct.CCGSubSurf* %1063), !dbg !8101
  %1064 = load %struct.CCGFace*, %struct.CCGFace** %f693, align 8, !dbg !8102
  %1065 = load i32, i32* %nextLvl, align 4, !dbg !8102
  %1066 = load i32, i32* %S696, align 4, !dbg !8102
  %1067 = load i32, i32* %subdivLevels, align 4, !dbg !8102
  %1068 = load i32, i32* %vertDataSize, align 4, !dbg !8102
  %call720 = call i8* @_face_getIECo(%struct.CCGFace* %1064, i32 %1065, i32 %1066, i32 0, i32 %1067, i32 %1068), !dbg !8102
  %1069 = bitcast i8* %call720 to float*, !dbg !8102
  %1070 = load %struct.CCGFace*, %struct.CCGFace** %f693, align 8, !dbg !8103
  %call721 = call i8* @FACE_getCenterData(%struct.CCGFace* %1070), !dbg !8104
  %1071 = bitcast i8* %call721 to float*, !dbg !8105
  %1072 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !8106
  call void @VertDataCopy(float* %1069, float* %1071, %struct.CCGSubSurf* %1072), !dbg !8107
  %1073 = load %struct.CCGFace*, %struct.CCGFace** %f693, align 8, !dbg !8108
  %1074 = load i32, i32* %nextLvl, align 4, !dbg !8108
  %1075 = load i32, i32* %S696, align 4, !dbg !8108
  %1076 = load i32, i32* %cornerIdx, align 4, !dbg !8108
  %1077 = load i32, i32* %cornerIdx, align 4, !dbg !8108
  %1078 = load i32, i32* %subdivLevels, align 4, !dbg !8108
  %1079 = load i32, i32* %vertDataSize, align 4, !dbg !8108
  %call722 = call i8* @_face_getIFCo(%struct.CCGFace* %1073, i32 %1074, i32 %1075, i32 %1076, i32 %1077, i32 %1078, i32 %1079), !dbg !8108
  %1080 = bitcast i8* %call722 to float*, !dbg !8108
  %1081 = load %struct.CCGFace*, %struct.CCGFace** %f693, align 8, !dbg !8109
  %call723 = call %struct.CCGVert** @FACE_getVerts(%struct.CCGFace* %1081), !dbg !8109
  %1082 = load i32, i32* %S696, align 4, !dbg !8109
  %idxprom724 = sext i32 %1082 to i64, !dbg !8109
  %arrayidx725 = getelementptr inbounds %struct.CCGVert*, %struct.CCGVert** %call723, i64 %idxprom724, !dbg !8109
  %1083 = load %struct.CCGVert*, %struct.CCGVert** %arrayidx725, align 8, !dbg !8109
  %1084 = load i32, i32* %nextLvl, align 4, !dbg !8109
  %1085 = load i32, i32* %vertDataSize, align 4, !dbg !8109
  %call726 = call i8* @_vert_getCo(%struct.CCGVert* %1083, i32 %1084, i32 %1085), !dbg !8109
  %1086 = bitcast i8* %call726 to float*, !dbg !8109
  %1087 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !8110
  call void @VertDataCopy(float* %1080, float* %1086, %struct.CCGSubSurf* %1087), !dbg !8111
  %1088 = load %struct.CCGFace*, %struct.CCGFace** %f693, align 8, !dbg !8112
  %1089 = load i32, i32* %nextLvl, align 4, !dbg !8112
  %1090 = load i32, i32* %S696, align 4, !dbg !8112
  %1091 = load i32, i32* %cornerIdx, align 4, !dbg !8112
  %1092 = load i32, i32* %subdivLevels, align 4, !dbg !8112
  %1093 = load i32, i32* %vertDataSize, align 4, !dbg !8112
  %call727 = call i8* @_face_getIECo(%struct.CCGFace* %1088, i32 %1089, i32 %1090, i32 %1091, i32 %1092, i32 %1093), !dbg !8112
  %1094 = bitcast i8* %call727 to float*, !dbg !8112
  %1095 = load %struct.CCGFace*, %struct.CCGFace** %f693, align 8, !dbg !8113
  %call728 = call %struct.CCGEdge** @FACE_getEdges(%struct.CCGFace* %1095), !dbg !8113
  %1096 = load i32, i32* %S696, align 4, !dbg !8113
  %idxprom729 = sext i32 %1096 to i64, !dbg !8113
  %arrayidx730 = getelementptr inbounds %struct.CCGEdge*, %struct.CCGEdge** %call728, i64 %idxprom729, !dbg !8113
  %1097 = load %struct.CCGEdge*, %struct.CCGEdge** %arrayidx730, align 8, !dbg !8113
  %1098 = load i32, i32* %nextLvl, align 4, !dbg !8113
  %1099 = load i32, i32* %cornerIdx, align 4, !dbg !8113
  %1100 = load i32, i32* %vertDataSize, align 4, !dbg !8113
  %call731 = call i8* @_edge_getCo(%struct.CCGEdge* %1097, i32 %1098, i32 %1099, i32 %1100), !dbg !8113
  %1101 = bitcast i8* %call731 to float*, !dbg !8113
  %1102 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !8114
  call void @VertDataCopy(float* %1094, float* %1101, %struct.CCGSubSurf* %1102), !dbg !8115
  store i32 1, i32* %x697, align 4, !dbg !8116
  br label %for.cond732, !dbg !8118

for.cond732:                                      ; preds = %for.inc745, %for.body703
  %1103 = load i32, i32* %x697, align 4, !dbg !8119
  %1104 = load i32, i32* %gridSize, align 4, !dbg !8121
  %sub733 = sub nsw i32 %1104, 1, !dbg !8122
  %cmp734 = icmp slt i32 %1103, %sub733, !dbg !8123
  br i1 %cmp734, label %for.body736, label %for.end747, !dbg !8124

for.body736:                                      ; preds = %for.cond732
  call void @llvm.dbg.declare(metadata float** %co737, metadata !8125, metadata !DIExpression()), !dbg !8127
  %1105 = load %struct.CCGFace*, %struct.CCGFace** %f693, align 8, !dbg !8128
  %1106 = load i32, i32* %nextLvl, align 4, !dbg !8128
  %1107 = load i32, i32* %S696, align 4, !dbg !8128
  %1108 = load i32, i32* %x697, align 4, !dbg !8128
  %1109 = load i32, i32* %subdivLevels, align 4, !dbg !8128
  %1110 = load i32, i32* %vertDataSize, align 4, !dbg !8128
  %call738 = call i8* @_face_getIECo(%struct.CCGFace* %1105, i32 %1106, i32 %1107, i32 %1108, i32 %1109, i32 %1110), !dbg !8128
  %1111 = bitcast i8* %call738 to float*, !dbg !8128
  store float* %1111, float** %co737, align 8, !dbg !8127
  %1112 = load %struct.CCGFace*, %struct.CCGFace** %f693, align 8, !dbg !8129
  %1113 = load i32, i32* %nextLvl, align 4, !dbg !8129
  %1114 = load i32, i32* %S696, align 4, !dbg !8129
  %1115 = load i32, i32* %x697, align 4, !dbg !8129
  %1116 = load i32, i32* %subdivLevels, align 4, !dbg !8129
  %1117 = load i32, i32* %vertDataSize, align 4, !dbg !8129
  %call739 = call i8* @_face_getIFCo(%struct.CCGFace* %1112, i32 %1113, i32 %1114, i32 %1115, i32 0, i32 %1116, i32 %1117), !dbg !8129
  %1118 = bitcast i8* %call739 to float*, !dbg !8129
  %1119 = load float*, float** %co737, align 8, !dbg !8130
  %1120 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !8131
  call void @VertDataCopy(float* %1118, float* %1119, %struct.CCGSubSurf* %1120), !dbg !8132
  %1121 = load %struct.CCGFace*, %struct.CCGFace** %f693, align 8, !dbg !8133
  %1122 = load i32, i32* %nextLvl, align 4, !dbg !8133
  %1123 = load i32, i32* %S696, align 4, !dbg !8133
  %add740 = add nsw i32 %1123, 1, !dbg !8133
  %1124 = load %struct.CCGFace*, %struct.CCGFace** %f693, align 8, !dbg !8133
  %numVerts741 = getelementptr inbounds %struct.CCGFace, %struct.CCGFace* %1124, i32 0, i32 2, !dbg !8133
  %1125 = load i16, i16* %numVerts741, align 8, !dbg !8133
  %conv742 = sext i16 %1125 to i32, !dbg !8133
  %rem743 = srem i32 %add740, %conv742, !dbg !8133
  %1126 = load i32, i32* %x697, align 4, !dbg !8133
  %1127 = load i32, i32* %subdivLevels, align 4, !dbg !8133
  %1128 = load i32, i32* %vertDataSize, align 4, !dbg !8133
  %call744 = call i8* @_face_getIFCo(%struct.CCGFace* %1121, i32 %1122, i32 %rem743, i32 0, i32 %1126, i32 %1127, i32 %1128), !dbg !8133
  %1129 = bitcast i8* %call744 to float*, !dbg !8133
  %1130 = load float*, float** %co737, align 8, !dbg !8134
  %1131 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !8135
  call void @VertDataCopy(float* %1129, float* %1130, %struct.CCGSubSurf* %1131), !dbg !8136
  br label %for.inc745, !dbg !8137

for.inc745:                                       ; preds = %for.body736
  %1132 = load i32, i32* %x697, align 4, !dbg !8138
  %inc746 = add nsw i32 %1132, 1, !dbg !8138
  store i32 %inc746, i32* %x697, align 4, !dbg !8138
  br label %for.cond732, !dbg !8139, !llvm.loop !8140

for.end747:                                       ; preds = %for.cond732
  store i32 0, i32* %x697, align 4, !dbg !8142
  br label %for.cond748, !dbg !8144

for.cond748:                                      ; preds = %for.inc765, %for.end747
  %1133 = load i32, i32* %x697, align 4, !dbg !8145
  %1134 = load i32, i32* %gridSize, align 4, !dbg !8147
  %sub749 = sub nsw i32 %1134, 1, !dbg !8148
  %cmp750 = icmp slt i32 %1133, %sub749, !dbg !8149
  br i1 %cmp750, label %for.body752, label %for.end767, !dbg !8150

for.body752:                                      ; preds = %for.cond748
  call void @llvm.dbg.declare(metadata i32* %eI, metadata !8151, metadata !DIExpression()), !dbg !8153
  %1135 = load i32, i32* %gridSize, align 4, !dbg !8154
  %sub753 = sub nsw i32 %1135, 1, !dbg !8155
  %1136 = load i32, i32* %x697, align 4, !dbg !8156
  %sub754 = sub nsw i32 %sub753, %1136, !dbg !8157
  store i32 %sub754, i32* %eI, align 4, !dbg !8153
  %1137 = load %struct.CCGFace*, %struct.CCGFace** %f693, align 8, !dbg !8158
  %1138 = load i32, i32* %nextLvl, align 4, !dbg !8158
  %1139 = load i32, i32* %S696, align 4, !dbg !8158
  %1140 = load i32, i32* %cornerIdx, align 4, !dbg !8158
  %1141 = load i32, i32* %x697, align 4, !dbg !8158
  %1142 = load i32, i32* %subdivLevels, align 4, !dbg !8158
  %1143 = load i32, i32* %vertDataSize, align 4, !dbg !8158
  %call755 = call i8* @_face_getIFCo(%struct.CCGFace* %1137, i32 %1138, i32 %1139, i32 %1140, i32 %1141, i32 %1142, i32 %1143), !dbg !8158
  %1144 = bitcast i8* %call755 to float*, !dbg !8158
  %1145 = load %struct.CCGEdge*, %struct.CCGEdge** %e704, align 8, !dbg !8159
  %1146 = load %struct.CCGFace*, %struct.CCGFace** %f693, align 8, !dbg !8160
  %call756 = call %struct.CCGVert** @FACE_getVerts(%struct.CCGFace* %1146), !dbg !8161
  %1147 = load i32, i32* %S696, align 4, !dbg !8162
  %idxprom757 = sext i32 %1147 to i64, !dbg !8161
  %arrayidx758 = getelementptr inbounds %struct.CCGVert*, %struct.CCGVert** %call756, i64 %idxprom757, !dbg !8161
  %1148 = load %struct.CCGVert*, %struct.CCGVert** %arrayidx758, align 8, !dbg !8161
  %1149 = load i32, i32* %nextLvl, align 4, !dbg !8163
  %1150 = load i32, i32* %eI, align 4, !dbg !8164
  %1151 = load i32, i32* %vertDataSize, align 4, !dbg !8165
  %call759 = call i8* @_edge_getCoVert(%struct.CCGEdge* %1145, %struct.CCGVert* %1148, i32 %1149, i32 %1150, i32 %1151), !dbg !8166
  %1152 = bitcast i8* %call759 to float*, !dbg !8166
  %1153 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !8167
  call void @VertDataCopy(float* %1144, float* %1152, %struct.CCGSubSurf* %1153), !dbg !8168
  %1154 = load %struct.CCGFace*, %struct.CCGFace** %f693, align 8, !dbg !8169
  %1155 = load i32, i32* %nextLvl, align 4, !dbg !8169
  %1156 = load i32, i32* %S696, align 4, !dbg !8169
  %1157 = load i32, i32* %x697, align 4, !dbg !8169
  %1158 = load i32, i32* %cornerIdx, align 4, !dbg !8169
  %1159 = load i32, i32* %subdivLevels, align 4, !dbg !8169
  %1160 = load i32, i32* %vertDataSize, align 4, !dbg !8169
  %call760 = call i8* @_face_getIFCo(%struct.CCGFace* %1154, i32 %1155, i32 %1156, i32 %1157, i32 %1158, i32 %1159, i32 %1160), !dbg !8169
  %1161 = bitcast i8* %call760 to float*, !dbg !8169
  %1162 = load %struct.CCGEdge*, %struct.CCGEdge** %prevE, align 8, !dbg !8170
  %1163 = load %struct.CCGFace*, %struct.CCGFace** %f693, align 8, !dbg !8171
  %call761 = call %struct.CCGVert** @FACE_getVerts(%struct.CCGFace* %1163), !dbg !8172
  %1164 = load i32, i32* %S696, align 4, !dbg !8173
  %idxprom762 = sext i32 %1164 to i64, !dbg !8172
  %arrayidx763 = getelementptr inbounds %struct.CCGVert*, %struct.CCGVert** %call761, i64 %idxprom762, !dbg !8172
  %1165 = load %struct.CCGVert*, %struct.CCGVert** %arrayidx763, align 8, !dbg !8172
  %1166 = load i32, i32* %nextLvl, align 4, !dbg !8174
  %1167 = load i32, i32* %eI, align 4, !dbg !8175
  %1168 = load i32, i32* %vertDataSize, align 4, !dbg !8176
  %call764 = call i8* @_edge_getCoVert(%struct.CCGEdge* %1162, %struct.CCGVert* %1165, i32 %1166, i32 %1167, i32 %1168), !dbg !8177
  %1169 = bitcast i8* %call764 to float*, !dbg !8177
  %1170 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !8178
  call void @VertDataCopy(float* %1161, float* %1169, %struct.CCGSubSurf* %1170), !dbg !8179
  br label %for.inc765, !dbg !8180

for.inc765:                                       ; preds = %for.body752
  %1171 = load i32, i32* %x697, align 4, !dbg !8181
  %inc766 = add nsw i32 %1171, 1, !dbg !8181
  store i32 %inc766, i32* %x697, align 4, !dbg !8181
  br label %for.cond748, !dbg !8182, !llvm.loop !8183

for.end767:                                       ; preds = %for.cond748
  br label %for.inc768, !dbg !8185

for.inc768:                                       ; preds = %for.end767
  %1172 = load i32, i32* %S696, align 4, !dbg !8186
  %inc769 = add nsw i32 %1172, 1, !dbg !8186
  store i32 %inc769, i32* %S696, align 4, !dbg !8186
  br label %for.cond698, !dbg !8187, !llvm.loop !8188

for.end770:                                       ; preds = %for.cond698
  br label %for.inc771, !dbg !8190

for.inc771:                                       ; preds = %for.end770
  %1173 = load i32, i32* %i, align 4, !dbg !8191
  %inc772 = add nsw i32 %1173, 1, !dbg !8191
  store i32 %inc772, i32* %i, align 4, !dbg !8191
  br label %for.cond689, !dbg !8192, !llvm.loop !8193

for.end773:                                       ; preds = %for.cond689
  ret void, !dbg !8195
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @ccgSubSurf_getNumVerts(%struct.CCGSubSurf* %ss) #0 !dbg !8196 {
entry:
  %ss.addr = alloca %struct.CCGSubSurf*, align 8
  store %struct.CCGSubSurf* %ss, %struct.CCGSubSurf** %ss.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGSubSurf** %ss.addr, metadata !8199, metadata !DIExpression()), !dbg !8200
  %0 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !8201
  %vMap = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %0, i32 0, i32 0, !dbg !8202
  %1 = load %struct._EHash*, %struct._EHash** %vMap, align 8, !dbg !8202
  %numEntries = getelementptr inbounds %struct._EHash, %struct._EHash* %1, i32 0, i32 1, !dbg !8203
  %2 = load i32, i32* %numEntries, align 8, !dbg !8203
  ret i32 %2, !dbg !8204
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @ccgSubSurf_getNumEdges(%struct.CCGSubSurf* %ss) #0 !dbg !8205 {
entry:
  %ss.addr = alloca %struct.CCGSubSurf*, align 8
  store %struct.CCGSubSurf* %ss, %struct.CCGSubSurf** %ss.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGSubSurf** %ss.addr, metadata !8206, metadata !DIExpression()), !dbg !8207
  %0 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !8208
  %eMap = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %0, i32 0, i32 1, !dbg !8209
  %1 = load %struct._EHash*, %struct._EHash** %eMap, align 8, !dbg !8209
  %numEntries = getelementptr inbounds %struct._EHash, %struct._EHash* %1, i32 0, i32 1, !dbg !8210
  %2 = load i32, i32* %numEntries, align 8, !dbg !8210
  ret i32 %2, !dbg !8211
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @ccgSubSurf_getNumFaces(%struct.CCGSubSurf* %ss) #0 !dbg !8212 {
entry:
  %ss.addr = alloca %struct.CCGSubSurf*, align 8
  store %struct.CCGSubSurf* %ss, %struct.CCGSubSurf** %ss.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGSubSurf** %ss.addr, metadata !8213, metadata !DIExpression()), !dbg !8214
  %0 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !8215
  %fMap = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %0, i32 0, i32 2, !dbg !8216
  %1 = load %struct._EHash*, %struct._EHash** %fMap, align 8, !dbg !8216
  %numEntries = getelementptr inbounds %struct._EHash, %struct._EHash* %1, i32 0, i32 1, !dbg !8217
  %2 = load i32, i32* %numEntries, align 8, !dbg !8217
  ret i32 %2, !dbg !8218
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.CCGVert* @ccgSubSurf_getVert(%struct.CCGSubSurf* %ss, i8* %v) #0 !dbg !8219 {
entry:
  %ss.addr = alloca %struct.CCGSubSurf*, align 8
  %v.addr = alloca i8*, align 8
  store %struct.CCGSubSurf* %ss, %struct.CCGSubSurf** %ss.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGSubSurf** %ss.addr, metadata !8222, metadata !DIExpression()), !dbg !8223
  store i8* %v, i8** %v.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr, metadata !8224, metadata !DIExpression()), !dbg !8225
  %0 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !8226
  %vMap = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %0, i32 0, i32 0, !dbg !8227
  %1 = load %struct._EHash*, %struct._EHash** %vMap, align 8, !dbg !8227
  %2 = load i8*, i8** %v.addr, align 8, !dbg !8228
  %call = call i8* @_ehash_lookup(%struct._EHash* %1, i8* %2), !dbg !8229
  %3 = bitcast i8* %call to %struct.CCGVert*, !dbg !8230
  ret %struct.CCGVert* %3, !dbg !8231
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.CCGEdge* @ccgSubSurf_getEdge(%struct.CCGSubSurf* %ss, i8* %e) #0 !dbg !8232 {
entry:
  %ss.addr = alloca %struct.CCGSubSurf*, align 8
  %e.addr = alloca i8*, align 8
  store %struct.CCGSubSurf* %ss, %struct.CCGSubSurf** %ss.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGSubSurf** %ss.addr, metadata !8235, metadata !DIExpression()), !dbg !8236
  store i8* %e, i8** %e.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %e.addr, metadata !8237, metadata !DIExpression()), !dbg !8238
  %0 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !8239
  %eMap = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %0, i32 0, i32 1, !dbg !8240
  %1 = load %struct._EHash*, %struct._EHash** %eMap, align 8, !dbg !8240
  %2 = load i8*, i8** %e.addr, align 8, !dbg !8241
  %call = call i8* @_ehash_lookup(%struct._EHash* %1, i8* %2), !dbg !8242
  %3 = bitcast i8* %call to %struct.CCGEdge*, !dbg !8243
  ret %struct.CCGEdge* %3, !dbg !8244
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.CCGFace* @ccgSubSurf_getFace(%struct.CCGSubSurf* %ss, i8* %f) #0 !dbg !8245 {
entry:
  %ss.addr = alloca %struct.CCGSubSurf*, align 8
  %f.addr = alloca i8*, align 8
  store %struct.CCGSubSurf* %ss, %struct.CCGSubSurf** %ss.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGSubSurf** %ss.addr, metadata !8248, metadata !DIExpression()), !dbg !8249
  store i8* %f, i8** %f.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %f.addr, metadata !8250, metadata !DIExpression()), !dbg !8251
  %0 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !8252
  %fMap = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %0, i32 0, i32 2, !dbg !8253
  %1 = load %struct._EHash*, %struct._EHash** %fMap, align 8, !dbg !8253
  %2 = load i8*, i8** %f.addr, align 8, !dbg !8254
  %call = call i8* @_ehash_lookup(%struct._EHash* %1, i8* %2), !dbg !8255
  %3 = bitcast i8* %call to %struct.CCGFace*, !dbg !8256
  ret %struct.CCGFace* %3, !dbg !8257
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @ccgSubSurf_getSubdivisionLevels(%struct.CCGSubSurf* %ss) #0 !dbg !8258 {
entry:
  %ss.addr = alloca %struct.CCGSubSurf*, align 8
  store %struct.CCGSubSurf* %ss, %struct.CCGSubSurf** %ss.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGSubSurf** %ss.addr, metadata !8259, metadata !DIExpression()), !dbg !8260
  %0 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !8261
  %subdivLevels = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %0, i32 0, i32 6, !dbg !8262
  %1 = load i32, i32* %subdivLevels, align 8, !dbg !8262
  ret i32 %1, !dbg !8263
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @ccgSubSurf_getEdgeSize(%struct.CCGSubSurf* %ss) #0 !dbg !8264 {
entry:
  %ss.addr = alloca %struct.CCGSubSurf*, align 8
  store %struct.CCGSubSurf* %ss, %struct.CCGSubSurf** %ss.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGSubSurf** %ss.addr, metadata !8265, metadata !DIExpression()), !dbg !8266
  %0 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !8267
  %1 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !8268
  %subdivLevels = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %1, i32 0, i32 6, !dbg !8269
  %2 = load i32, i32* %subdivLevels, align 8, !dbg !8269
  %call = call i32 @ccgSubSurf_getEdgeLevelSize(%struct.CCGSubSurf* %0, i32 %2), !dbg !8270
  ret i32 %call, !dbg !8271
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @ccgSubSurf_getEdgeLevelSize(%struct.CCGSubSurf* %ss, i32 %level) #0 !dbg !8272 {
entry:
  %retval = alloca i32, align 4
  %ss.addr = alloca %struct.CCGSubSurf*, align 8
  %level.addr = alloca i32, align 4
  store %struct.CCGSubSurf* %ss, %struct.CCGSubSurf** %ss.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGSubSurf** %ss.addr, metadata !8275, metadata !DIExpression()), !dbg !8276
  store i32 %level, i32* %level.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %level.addr, metadata !8277, metadata !DIExpression()), !dbg !8278
  %0 = load i32, i32* %level.addr, align 4, !dbg !8279
  %cmp = icmp slt i32 %0, 1, !dbg !8281
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !8282

lor.lhs.false:                                    ; preds = %entry
  %1 = load i32, i32* %level.addr, align 4, !dbg !8283
  %2 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !8284
  %subdivLevels = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %2, i32 0, i32 6, !dbg !8285
  %3 = load i32, i32* %subdivLevels, align 8, !dbg !8285
  %cmp1 = icmp sgt i32 %1, %3, !dbg !8286
  br i1 %cmp1, label %if.then, label %if.else, !dbg !8287

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 -1, i32* %retval, align 4, !dbg !8288
  br label %return, !dbg !8288

if.else:                                          ; preds = %lor.lhs.false
  %4 = load i32, i32* %level.addr, align 4, !dbg !8290
  %call = call i32 @ccg_edgesize(i32 %4), !dbg !8292
  store i32 %call, i32* %retval, align 4, !dbg !8293
  br label %return, !dbg !8293

return:                                           ; preds = %if.else, %if.then
  %5 = load i32, i32* %retval, align 4, !dbg !8294
  ret i32 %5, !dbg !8294
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @ccgSubSurf_getGridSize(%struct.CCGSubSurf* %ss) #0 !dbg !8295 {
entry:
  %ss.addr = alloca %struct.CCGSubSurf*, align 8
  store %struct.CCGSubSurf* %ss, %struct.CCGSubSurf** %ss.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGSubSurf** %ss.addr, metadata !8296, metadata !DIExpression()), !dbg !8297
  %0 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !8298
  %1 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !8299
  %subdivLevels = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %1, i32 0, i32 6, !dbg !8300
  %2 = load i32, i32* %subdivLevels, align 8, !dbg !8300
  %call = call i32 @ccgSubSurf_getGridLevelSize(%struct.CCGSubSurf* %0, i32 %2), !dbg !8301
  ret i32 %call, !dbg !8302
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @ccgSubSurf_getGridLevelSize(%struct.CCGSubSurf* %ss, i32 %level) #0 !dbg !8303 {
entry:
  %retval = alloca i32, align 4
  %ss.addr = alloca %struct.CCGSubSurf*, align 8
  %level.addr = alloca i32, align 4
  store %struct.CCGSubSurf* %ss, %struct.CCGSubSurf** %ss.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGSubSurf** %ss.addr, metadata !8304, metadata !DIExpression()), !dbg !8305
  store i32 %level, i32* %level.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %level.addr, metadata !8306, metadata !DIExpression()), !dbg !8307
  %0 = load i32, i32* %level.addr, align 4, !dbg !8308
  %cmp = icmp slt i32 %0, 1, !dbg !8310
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !8311

lor.lhs.false:                                    ; preds = %entry
  %1 = load i32, i32* %level.addr, align 4, !dbg !8312
  %2 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !8313
  %subdivLevels = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %2, i32 0, i32 6, !dbg !8314
  %3 = load i32, i32* %subdivLevels, align 8, !dbg !8314
  %cmp1 = icmp sgt i32 %1, %3, !dbg !8315
  br i1 %cmp1, label %if.then, label %if.else, !dbg !8316

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 -1, i32* %retval, align 4, !dbg !8317
  br label %return, !dbg !8317

if.else:                                          ; preds = %lor.lhs.false
  %4 = load i32, i32* %level.addr, align 4, !dbg !8319
  %call = call i32 @ccg_gridsize(i32 %4), !dbg !8321
  store i32 %call, i32* %retval, align 4, !dbg !8322
  br label %return, !dbg !8322

return:                                           ; preds = %if.else, %if.then
  %5 = load i32, i32* %retval, align 4, !dbg !8323
  ret i32 %5, !dbg !8323
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @ccgSubSurf_getSimpleSubdiv(%struct.CCGSubSurf* %ss) #0 !dbg !8324 {
entry:
  %ss.addr = alloca %struct.CCGSubSurf*, align 8
  store %struct.CCGSubSurf* %ss, %struct.CCGSubSurf** %ss.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGSubSurf** %ss.addr, metadata !8325, metadata !DIExpression()), !dbg !8326
  %0 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !8327
  %meshIFC = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %0, i32 0, i32 3, !dbg !8328
  %simpleSubdiv = getelementptr inbounds %struct.CCGMeshIFC, %struct.CCGMeshIFC* %meshIFC, i32 0, i32 5, !dbg !8329
  %1 = load i32, i32* %simpleSubdiv, align 4, !dbg !8329
  ret i32 %1, !dbg !8330
}

; Function Attrs: noinline nounwind uwtable
define dso_local i8* @ccgSubSurf_getVertVertHandle(%struct.CCGVert* %v) #0 !dbg !8331 {
entry:
  %v.addr = alloca %struct.CCGVert*, align 8
  store %struct.CCGVert* %v, %struct.CCGVert** %v.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGVert** %v.addr, metadata !8334, metadata !DIExpression()), !dbg !8335
  %0 = load %struct.CCGVert*, %struct.CCGVert** %v.addr, align 8, !dbg !8336
  %vHDL = getelementptr inbounds %struct.CCGVert, %struct.CCGVert* %0, i32 0, i32 1, !dbg !8337
  %1 = load i8*, i8** %vHDL, align 8, !dbg !8337
  ret i8* %1, !dbg !8338
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @ccgSubSurf_getVertAge(%struct.CCGSubSurf* %ss, %struct.CCGVert* %v) #0 !dbg !8339 {
entry:
  %retval = alloca i32, align 4
  %ss.addr = alloca %struct.CCGSubSurf*, align 8
  %v.addr = alloca %struct.CCGVert*, align 8
  %userData = alloca i8*, align 8
  store %struct.CCGSubSurf* %ss, %struct.CCGSubSurf** %ss.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGSubSurf** %ss.addr, metadata !8342, metadata !DIExpression()), !dbg !8343
  store %struct.CCGVert* %v, %struct.CCGVert** %v.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGVert** %v.addr, metadata !8344, metadata !DIExpression()), !dbg !8345
  %0 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !8346
  %useAgeCounts = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %0, i32 0, i32 18, !dbg !8348
  %1 = load i32, i32* %useAgeCounts, align 4, !dbg !8348
  %tobool = icmp ne i32 %1, 0, !dbg !8346
  br i1 %tobool, label %if.then, label %if.else, !dbg !8349

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8** %userData, metadata !8350, metadata !DIExpression()), !dbg !8352
  %2 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !8353
  %3 = load %struct.CCGVert*, %struct.CCGVert** %v.addr, align 8, !dbg !8354
  %call = call i8* @ccgSubSurf_getVertUserData(%struct.CCGSubSurf* %2, %struct.CCGVert* %3), !dbg !8355
  store i8* %call, i8** %userData, align 8, !dbg !8352
  %4 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !8356
  %currentAge = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %4, i32 0, i32 17, !dbg !8357
  %5 = load i32, i32* %currentAge, align 8, !dbg !8357
  %6 = load i8*, i8** %userData, align 8, !dbg !8358
  %7 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !8359
  %vertUserAgeOffset = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %7, i32 0, i32 19, !dbg !8360
  %8 = load i32, i32* %vertUserAgeOffset, align 8, !dbg !8360
  %idxprom = sext i32 %8 to i64, !dbg !8358
  %arrayidx = getelementptr inbounds i8, i8* %6, i64 %idxprom, !dbg !8358
  %9 = bitcast i8* %arrayidx to i32*, !dbg !8361
  %10 = load i32, i32* %9, align 4, !dbg !8361
  %sub = sub nsw i32 %5, %10, !dbg !8362
  store i32 %sub, i32* %retval, align 4, !dbg !8363
  br label %return, !dbg !8363

if.else:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !8364
  br label %return, !dbg !8364

return:                                           ; preds = %if.else, %if.then
  %11 = load i32, i32* %retval, align 4, !dbg !8366
  ret i32 %11, !dbg !8366
}

; Function Attrs: noinline nounwind uwtable
define dso_local i8* @ccgSubSurf_getVertUserData(%struct.CCGSubSurf* %ss, %struct.CCGVert* %v) #0 !dbg !8367 {
entry:
  %ss.addr = alloca %struct.CCGSubSurf*, align 8
  %v.addr = alloca %struct.CCGVert*, align 8
  store %struct.CCGSubSurf* %ss, %struct.CCGSubSurf** %ss.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGSubSurf** %ss.addr, metadata !8370, metadata !DIExpression()), !dbg !8371
  store %struct.CCGVert* %v, %struct.CCGVert** %v.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGVert** %v.addr, metadata !8372, metadata !DIExpression()), !dbg !8373
  %0 = load %struct.CCGVert*, %struct.CCGVert** %v.addr, align 8, !dbg !8374
  %call = call i8* @VERT_getLevelData(%struct.CCGVert* %0), !dbg !8375
  %1 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !8376
  %meshIFC = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %1, i32 0, i32 3, !dbg !8377
  %vertDataSize = getelementptr inbounds %struct.CCGMeshIFC, %struct.CCGMeshIFC* %meshIFC, i32 0, i32 4, !dbg !8378
  %2 = load i32, i32* %vertDataSize, align 8, !dbg !8378
  %3 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !8379
  %subdivLevels = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %3, i32 0, i32 6, !dbg !8380
  %4 = load i32, i32* %subdivLevels, align 8, !dbg !8380
  %add = add nsw i32 %4, 1, !dbg !8381
  %mul = mul nsw i32 %2, %add, !dbg !8382
  %idx.ext = sext i32 %mul to i64, !dbg !8383
  %add.ptr = getelementptr inbounds i8, i8* %call, i64 %idx.ext, !dbg !8383
  ret i8* %add.ptr, !dbg !8384
}

; Function Attrs: noinline nounwind uwtable
define internal i8* @VERT_getLevelData(%struct.CCGVert* %v) #0 !dbg !8385 {
entry:
  %v.addr = alloca %struct.CCGVert*, align 8
  store %struct.CCGVert* %v, %struct.CCGVert** %v.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGVert** %v.addr, metadata !8388, metadata !DIExpression()), !dbg !8389
  %0 = load %struct.CCGVert*, %struct.CCGVert** %v.addr, align 8, !dbg !8390
  %arrayidx = getelementptr inbounds %struct.CCGVert, %struct.CCGVert* %0, i64 1, !dbg !8391
  %1 = bitcast %struct.CCGVert* %arrayidx to i8*, !dbg !8392
  ret i8* %1, !dbg !8393
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @ccgSubSurf_getVertNumFaces(%struct.CCGVert* %v) #0 !dbg !8394 {
entry:
  %v.addr = alloca %struct.CCGVert*, align 8
  store %struct.CCGVert* %v, %struct.CCGVert** %v.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGVert** %v.addr, metadata !8397, metadata !DIExpression()), !dbg !8398
  %0 = load %struct.CCGVert*, %struct.CCGVert** %v.addr, align 8, !dbg !8399
  %numFaces = getelementptr inbounds %struct.CCGVert, %struct.CCGVert* %0, i32 0, i32 3, !dbg !8400
  %1 = load i16, i16* %numFaces, align 2, !dbg !8400
  %conv = sext i16 %1 to i32, !dbg !8399
  ret i32 %conv, !dbg !8401
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.CCGFace* @ccgSubSurf_getVertFace(%struct.CCGVert* %v, i32 %index) #0 !dbg !8402 {
entry:
  %retval = alloca %struct.CCGFace*, align 8
  %v.addr = alloca %struct.CCGVert*, align 8
  %index.addr = alloca i32, align 4
  store %struct.CCGVert* %v, %struct.CCGVert** %v.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGVert** %v.addr, metadata !8405, metadata !DIExpression()), !dbg !8406
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !8407, metadata !DIExpression()), !dbg !8408
  %0 = load i32, i32* %index.addr, align 4, !dbg !8409
  %cmp = icmp slt i32 %0, 0, !dbg !8411
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !8412

lor.lhs.false:                                    ; preds = %entry
  %1 = load i32, i32* %index.addr, align 4, !dbg !8413
  %2 = load %struct.CCGVert*, %struct.CCGVert** %v.addr, align 8, !dbg !8414
  %numFaces = getelementptr inbounds %struct.CCGVert, %struct.CCGVert* %2, i32 0, i32 3, !dbg !8415
  %3 = load i16, i16* %numFaces, align 2, !dbg !8415
  %conv = sext i16 %3 to i32, !dbg !8414
  %cmp1 = icmp sge i32 %1, %conv, !dbg !8416
  br i1 %cmp1, label %if.then, label %if.else, !dbg !8417

if.then:                                          ; preds = %lor.lhs.false, %entry
  store %struct.CCGFace* null, %struct.CCGFace** %retval, align 8, !dbg !8418
  br label %return, !dbg !8418

if.else:                                          ; preds = %lor.lhs.false
  %4 = load %struct.CCGVert*, %struct.CCGVert** %v.addr, align 8, !dbg !8420
  %faces = getelementptr inbounds %struct.CCGVert, %struct.CCGVert* %4, i32 0, i32 7, !dbg !8422
  %5 = load %struct.CCGFace**, %struct.CCGFace*** %faces, align 8, !dbg !8422
  %6 = load i32, i32* %index.addr, align 4, !dbg !8423
  %idxprom = sext i32 %6 to i64, !dbg !8420
  %arrayidx = getelementptr inbounds %struct.CCGFace*, %struct.CCGFace** %5, i64 %idxprom, !dbg !8420
  %7 = load %struct.CCGFace*, %struct.CCGFace** %arrayidx, align 8, !dbg !8420
  store %struct.CCGFace* %7, %struct.CCGFace** %retval, align 8, !dbg !8424
  br label %return, !dbg !8424

return:                                           ; preds = %if.else, %if.then
  %8 = load %struct.CCGFace*, %struct.CCGFace** %retval, align 8, !dbg !8425
  ret %struct.CCGFace* %8, !dbg !8425
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @ccgSubSurf_getVertNumEdges(%struct.CCGVert* %v) #0 !dbg !8426 {
entry:
  %v.addr = alloca %struct.CCGVert*, align 8
  store %struct.CCGVert* %v, %struct.CCGVert** %v.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGVert** %v.addr, metadata !8427, metadata !DIExpression()), !dbg !8428
  %0 = load %struct.CCGVert*, %struct.CCGVert** %v.addr, align 8, !dbg !8429
  %numEdges = getelementptr inbounds %struct.CCGVert, %struct.CCGVert* %0, i32 0, i32 2, !dbg !8430
  %1 = load i16, i16* %numEdges, align 8, !dbg !8430
  %conv = sext i16 %1 to i32, !dbg !8429
  ret i32 %conv, !dbg !8431
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.CCGEdge* @ccgSubSurf_getVertEdge(%struct.CCGVert* %v, i32 %index) #0 !dbg !8432 {
entry:
  %retval = alloca %struct.CCGEdge*, align 8
  %v.addr = alloca %struct.CCGVert*, align 8
  %index.addr = alloca i32, align 4
  store %struct.CCGVert* %v, %struct.CCGVert** %v.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGVert** %v.addr, metadata !8435, metadata !DIExpression()), !dbg !8436
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !8437, metadata !DIExpression()), !dbg !8438
  %0 = load i32, i32* %index.addr, align 4, !dbg !8439
  %cmp = icmp slt i32 %0, 0, !dbg !8441
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !8442

lor.lhs.false:                                    ; preds = %entry
  %1 = load i32, i32* %index.addr, align 4, !dbg !8443
  %2 = load %struct.CCGVert*, %struct.CCGVert** %v.addr, align 8, !dbg !8444
  %numEdges = getelementptr inbounds %struct.CCGVert, %struct.CCGVert* %2, i32 0, i32 2, !dbg !8445
  %3 = load i16, i16* %numEdges, align 8, !dbg !8445
  %conv = sext i16 %3 to i32, !dbg !8444
  %cmp1 = icmp sge i32 %1, %conv, !dbg !8446
  br i1 %cmp1, label %if.then, label %if.else, !dbg !8447

if.then:                                          ; preds = %lor.lhs.false, %entry
  store %struct.CCGEdge* null, %struct.CCGEdge** %retval, align 8, !dbg !8448
  br label %return, !dbg !8448

if.else:                                          ; preds = %lor.lhs.false
  %4 = load %struct.CCGVert*, %struct.CCGVert** %v.addr, align 8, !dbg !8450
  %edges = getelementptr inbounds %struct.CCGVert, %struct.CCGVert* %4, i32 0, i32 6, !dbg !8452
  %5 = load %struct.CCGEdge**, %struct.CCGEdge*** %edges, align 8, !dbg !8452
  %6 = load i32, i32* %index.addr, align 4, !dbg !8453
  %idxprom = sext i32 %6 to i64, !dbg !8450
  %arrayidx = getelementptr inbounds %struct.CCGEdge*, %struct.CCGEdge** %5, i64 %idxprom, !dbg !8450
  %7 = load %struct.CCGEdge*, %struct.CCGEdge** %arrayidx, align 8, !dbg !8450
  store %struct.CCGEdge* %7, %struct.CCGEdge** %retval, align 8, !dbg !8454
  br label %return, !dbg !8454

return:                                           ; preds = %if.else, %if.then
  %8 = load %struct.CCGEdge*, %struct.CCGEdge** %retval, align 8, !dbg !8455
  ret %struct.CCGEdge* %8, !dbg !8455
}

; Function Attrs: noinline nounwind uwtable
define dso_local i8* @ccgSubSurf_getVertData(%struct.CCGSubSurf* %ss, %struct.CCGVert* %v) #0 !dbg !8456 {
entry:
  %ss.addr = alloca %struct.CCGSubSurf*, align 8
  %v.addr = alloca %struct.CCGVert*, align 8
  store %struct.CCGSubSurf* %ss, %struct.CCGSubSurf** %ss.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGSubSurf** %ss.addr, metadata !8457, metadata !DIExpression()), !dbg !8458
  store %struct.CCGVert* %v, %struct.CCGVert** %v.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGVert** %v.addr, metadata !8459, metadata !DIExpression()), !dbg !8460
  %0 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !8461
  %1 = load %struct.CCGVert*, %struct.CCGVert** %v.addr, align 8, !dbg !8462
  %2 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !8463
  %subdivLevels = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %2, i32 0, i32 6, !dbg !8464
  %3 = load i32, i32* %subdivLevels, align 8, !dbg !8464
  %call = call i8* @ccgSubSurf_getVertLevelData(%struct.CCGSubSurf* %0, %struct.CCGVert* %1, i32 %3), !dbg !8465
  ret i8* %call, !dbg !8466
}

; Function Attrs: noinline nounwind uwtable
define dso_local i8* @ccgSubSurf_getVertLevelData(%struct.CCGSubSurf* %ss, %struct.CCGVert* %v, i32 %level) #0 !dbg !8467 {
entry:
  %retval = alloca i8*, align 8
  %ss.addr = alloca %struct.CCGSubSurf*, align 8
  %v.addr = alloca %struct.CCGVert*, align 8
  %level.addr = alloca i32, align 4
  store %struct.CCGSubSurf* %ss, %struct.CCGSubSurf** %ss.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGSubSurf** %ss.addr, metadata !8470, metadata !DIExpression()), !dbg !8471
  store %struct.CCGVert* %v, %struct.CCGVert** %v.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGVert** %v.addr, metadata !8472, metadata !DIExpression()), !dbg !8473
  store i32 %level, i32* %level.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %level.addr, metadata !8474, metadata !DIExpression()), !dbg !8475
  %0 = load i32, i32* %level.addr, align 4, !dbg !8476
  %cmp = icmp slt i32 %0, 0, !dbg !8478
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !8479

lor.lhs.false:                                    ; preds = %entry
  %1 = load i32, i32* %level.addr, align 4, !dbg !8480
  %2 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !8481
  %subdivLevels = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %2, i32 0, i32 6, !dbg !8482
  %3 = load i32, i32* %subdivLevels, align 8, !dbg !8482
  %cmp1 = icmp sgt i32 %1, %3, !dbg !8483
  br i1 %cmp1, label %if.then, label %if.else, !dbg !8484

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i8* null, i8** %retval, align 8, !dbg !8485
  br label %return, !dbg !8485

if.else:                                          ; preds = %lor.lhs.false
  %4 = load %struct.CCGVert*, %struct.CCGVert** %v.addr, align 8, !dbg !8487
  %5 = load i32, i32* %level.addr, align 4, !dbg !8489
  %6 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !8490
  %meshIFC = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %6, i32 0, i32 3, !dbg !8491
  %vertDataSize = getelementptr inbounds %struct.CCGMeshIFC, %struct.CCGMeshIFC* %meshIFC, i32 0, i32 4, !dbg !8492
  %7 = load i32, i32* %vertDataSize, align 8, !dbg !8492
  %call = call i8* @_vert_getCo(%struct.CCGVert* %4, i32 %5, i32 %7), !dbg !8493
  store i8* %call, i8** %retval, align 8, !dbg !8494
  br label %return, !dbg !8494

return:                                           ; preds = %if.else, %if.then
  %8 = load i8*, i8** %retval, align 8, !dbg !8495
  ret i8* %8, !dbg !8495
}

; Function Attrs: noinline nounwind uwtable
define dso_local i8* @ccgSubSurf_getEdgeEdgeHandle(%struct.CCGEdge* %e) #0 !dbg !8496 {
entry:
  %e.addr = alloca %struct.CCGEdge*, align 8
  store %struct.CCGEdge* %e, %struct.CCGEdge** %e.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGEdge** %e.addr, metadata !8499, metadata !DIExpression()), !dbg !8500
  %0 = load %struct.CCGEdge*, %struct.CCGEdge** %e.addr, align 8, !dbg !8501
  %eHDL = getelementptr inbounds %struct.CCGEdge, %struct.CCGEdge* %0, i32 0, i32 1, !dbg !8502
  %1 = load i8*, i8** %eHDL, align 8, !dbg !8502
  ret i8* %1, !dbg !8503
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @ccgSubSurf_getEdgeAge(%struct.CCGSubSurf* %ss, %struct.CCGEdge* %e) #0 !dbg !8504 {
entry:
  %retval = alloca i32, align 4
  %ss.addr = alloca %struct.CCGSubSurf*, align 8
  %e.addr = alloca %struct.CCGEdge*, align 8
  %userData = alloca i8*, align 8
  store %struct.CCGSubSurf* %ss, %struct.CCGSubSurf** %ss.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGSubSurf** %ss.addr, metadata !8507, metadata !DIExpression()), !dbg !8508
  store %struct.CCGEdge* %e, %struct.CCGEdge** %e.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGEdge** %e.addr, metadata !8509, metadata !DIExpression()), !dbg !8510
  %0 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !8511
  %useAgeCounts = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %0, i32 0, i32 18, !dbg !8513
  %1 = load i32, i32* %useAgeCounts, align 4, !dbg !8513
  %tobool = icmp ne i32 %1, 0, !dbg !8511
  br i1 %tobool, label %if.then, label %if.else, !dbg !8514

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8** %userData, metadata !8515, metadata !DIExpression()), !dbg !8517
  %2 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !8518
  %3 = load %struct.CCGEdge*, %struct.CCGEdge** %e.addr, align 8, !dbg !8519
  %call = call i8* @ccgSubSurf_getEdgeUserData(%struct.CCGSubSurf* %2, %struct.CCGEdge* %3), !dbg !8520
  store i8* %call, i8** %userData, align 8, !dbg !8517
  %4 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !8521
  %currentAge = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %4, i32 0, i32 17, !dbg !8522
  %5 = load i32, i32* %currentAge, align 8, !dbg !8522
  %6 = load i8*, i8** %userData, align 8, !dbg !8523
  %7 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !8524
  %edgeUserAgeOffset = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %7, i32 0, i32 20, !dbg !8525
  %8 = load i32, i32* %edgeUserAgeOffset, align 4, !dbg !8525
  %idxprom = sext i32 %8 to i64, !dbg !8523
  %arrayidx = getelementptr inbounds i8, i8* %6, i64 %idxprom, !dbg !8523
  %9 = bitcast i8* %arrayidx to i32*, !dbg !8526
  %10 = load i32, i32* %9, align 4, !dbg !8526
  %sub = sub nsw i32 %5, %10, !dbg !8527
  store i32 %sub, i32* %retval, align 4, !dbg !8528
  br label %return, !dbg !8528

if.else:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !8529
  br label %return, !dbg !8529

return:                                           ; preds = %if.else, %if.then
  %11 = load i32, i32* %retval, align 4, !dbg !8531
  ret i32 %11, !dbg !8531
}

; Function Attrs: noinline nounwind uwtable
define internal i8* @EDGE_getLevelData(%struct.CCGEdge* %e) #0 !dbg !8532 {
entry:
  %e.addr = alloca %struct.CCGEdge*, align 8
  store %struct.CCGEdge* %e, %struct.CCGEdge** %e.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGEdge** %e.addr, metadata !8535, metadata !DIExpression()), !dbg !8536
  %0 = load %struct.CCGEdge*, %struct.CCGEdge** %e.addr, align 8, !dbg !8537
  %arrayidx = getelementptr inbounds %struct.CCGEdge, %struct.CCGEdge* %0, i64 1, !dbg !8538
  %1 = bitcast %struct.CCGEdge* %arrayidx to i8*, !dbg !8539
  ret i8* %1, !dbg !8540
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @ccg_edgebase(i32 %level) #0 !dbg !8541 {
entry:
  %level.addr = alloca i32, align 4
  store i32 %level, i32* %level.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %level.addr, metadata !8542, metadata !DIExpression()), !dbg !8543
  %0 = load i32, i32* %level.addr, align 4, !dbg !8544
  %1 = load i32, i32* %level.addr, align 4, !dbg !8545
  %shl = shl i32 1, %1, !dbg !8546
  %add = add nsw i32 %0, %shl, !dbg !8547
  %sub = sub nsw i32 %add, 1, !dbg !8548
  ret i32 %sub, !dbg !8549
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @ccgSubSurf_getEdgeNumFaces(%struct.CCGEdge* %e) #0 !dbg !8550 {
entry:
  %e.addr = alloca %struct.CCGEdge*, align 8
  store %struct.CCGEdge* %e, %struct.CCGEdge** %e.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGEdge** %e.addr, metadata !8553, metadata !DIExpression()), !dbg !8554
  %0 = load %struct.CCGEdge*, %struct.CCGEdge** %e.addr, align 8, !dbg !8555
  %numFaces = getelementptr inbounds %struct.CCGEdge, %struct.CCGEdge* %0, i32 0, i32 2, !dbg !8556
  %1 = load i16, i16* %numFaces, align 8, !dbg !8556
  %conv = sext i16 %1 to i32, !dbg !8555
  ret i32 %conv, !dbg !8557
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.CCGFace* @ccgSubSurf_getEdgeFace(%struct.CCGEdge* %e, i32 %index) #0 !dbg !8558 {
entry:
  %retval = alloca %struct.CCGFace*, align 8
  %e.addr = alloca %struct.CCGEdge*, align 8
  %index.addr = alloca i32, align 4
  store %struct.CCGEdge* %e, %struct.CCGEdge** %e.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGEdge** %e.addr, metadata !8561, metadata !DIExpression()), !dbg !8562
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !8563, metadata !DIExpression()), !dbg !8564
  %0 = load i32, i32* %index.addr, align 4, !dbg !8565
  %cmp = icmp slt i32 %0, 0, !dbg !8567
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !8568

lor.lhs.false:                                    ; preds = %entry
  %1 = load i32, i32* %index.addr, align 4, !dbg !8569
  %2 = load %struct.CCGEdge*, %struct.CCGEdge** %e.addr, align 8, !dbg !8570
  %numFaces = getelementptr inbounds %struct.CCGEdge, %struct.CCGEdge* %2, i32 0, i32 2, !dbg !8571
  %3 = load i16, i16* %numFaces, align 8, !dbg !8571
  %conv = sext i16 %3 to i32, !dbg !8570
  %cmp1 = icmp sge i32 %1, %conv, !dbg !8572
  br i1 %cmp1, label %if.then, label %if.else, !dbg !8573

if.then:                                          ; preds = %lor.lhs.false, %entry
  store %struct.CCGFace* null, %struct.CCGFace** %retval, align 8, !dbg !8574
  br label %return, !dbg !8574

if.else:                                          ; preds = %lor.lhs.false
  %4 = load %struct.CCGEdge*, %struct.CCGEdge** %e.addr, align 8, !dbg !8576
  %faces = getelementptr inbounds %struct.CCGEdge, %struct.CCGEdge* %4, i32 0, i32 7, !dbg !8578
  %5 = load %struct.CCGFace**, %struct.CCGFace*** %faces, align 8, !dbg !8578
  %6 = load i32, i32* %index.addr, align 4, !dbg !8579
  %idxprom = sext i32 %6 to i64, !dbg !8576
  %arrayidx = getelementptr inbounds %struct.CCGFace*, %struct.CCGFace** %5, i64 %idxprom, !dbg !8576
  %7 = load %struct.CCGFace*, %struct.CCGFace** %arrayidx, align 8, !dbg !8576
  store %struct.CCGFace* %7, %struct.CCGFace** %retval, align 8, !dbg !8580
  br label %return, !dbg !8580

return:                                           ; preds = %if.else, %if.then
  %8 = load %struct.CCGFace*, %struct.CCGFace** %retval, align 8, !dbg !8581
  ret %struct.CCGFace* %8, !dbg !8581
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.CCGVert* @ccgSubSurf_getEdgeVert0(%struct.CCGEdge* %e) #0 !dbg !8582 {
entry:
  %e.addr = alloca %struct.CCGEdge*, align 8
  store %struct.CCGEdge* %e, %struct.CCGEdge** %e.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGEdge** %e.addr, metadata !8585, metadata !DIExpression()), !dbg !8586
  %0 = load %struct.CCGEdge*, %struct.CCGEdge** %e.addr, align 8, !dbg !8587
  %v0 = getelementptr inbounds %struct.CCGEdge, %struct.CCGEdge* %0, i32 0, i32 5, !dbg !8588
  %1 = load %struct.CCGVert*, %struct.CCGVert** %v0, align 8, !dbg !8588
  ret %struct.CCGVert* %1, !dbg !8589
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.CCGVert* @ccgSubSurf_getEdgeVert1(%struct.CCGEdge* %e) #0 !dbg !8590 {
entry:
  %e.addr = alloca %struct.CCGEdge*, align 8
  store %struct.CCGEdge* %e, %struct.CCGEdge** %e.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGEdge** %e.addr, metadata !8591, metadata !DIExpression()), !dbg !8592
  %0 = load %struct.CCGEdge*, %struct.CCGEdge** %e.addr, align 8, !dbg !8593
  %v1 = getelementptr inbounds %struct.CCGEdge, %struct.CCGEdge* %0, i32 0, i32 6, !dbg !8594
  %1 = load %struct.CCGVert*, %struct.CCGVert** %v1, align 8, !dbg !8594
  ret %struct.CCGVert* %1, !dbg !8595
}

; Function Attrs: noinline nounwind uwtable
define dso_local i8* @ccgSubSurf_getEdgeDataArray(%struct.CCGSubSurf* %ss, %struct.CCGEdge* %e) #0 !dbg !8596 {
entry:
  %ss.addr = alloca %struct.CCGSubSurf*, align 8
  %e.addr = alloca %struct.CCGEdge*, align 8
  store %struct.CCGSubSurf* %ss, %struct.CCGSubSurf** %ss.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGSubSurf** %ss.addr, metadata !8597, metadata !DIExpression()), !dbg !8598
  store %struct.CCGEdge* %e, %struct.CCGEdge** %e.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGEdge** %e.addr, metadata !8599, metadata !DIExpression()), !dbg !8600
  %0 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !8601
  %1 = load %struct.CCGEdge*, %struct.CCGEdge** %e.addr, align 8, !dbg !8602
  %call = call i8* @ccgSubSurf_getEdgeData(%struct.CCGSubSurf* %0, %struct.CCGEdge* %1, i32 0), !dbg !8603
  ret i8* %call, !dbg !8604
}

; Function Attrs: noinline nounwind uwtable
define dso_local i8* @ccgSubSurf_getEdgeData(%struct.CCGSubSurf* %ss, %struct.CCGEdge* %e, i32 %x) #0 !dbg !8605 {
entry:
  %ss.addr = alloca %struct.CCGSubSurf*, align 8
  %e.addr = alloca %struct.CCGEdge*, align 8
  %x.addr = alloca i32, align 4
  store %struct.CCGSubSurf* %ss, %struct.CCGSubSurf** %ss.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGSubSurf** %ss.addr, metadata !8608, metadata !DIExpression()), !dbg !8609
  store %struct.CCGEdge* %e, %struct.CCGEdge** %e.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGEdge** %e.addr, metadata !8610, metadata !DIExpression()), !dbg !8611
  store i32 %x, i32* %x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !8612, metadata !DIExpression()), !dbg !8613
  %0 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !8614
  %1 = load %struct.CCGEdge*, %struct.CCGEdge** %e.addr, align 8, !dbg !8615
  %2 = load i32, i32* %x.addr, align 4, !dbg !8616
  %3 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !8617
  %subdivLevels = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %3, i32 0, i32 6, !dbg !8618
  %4 = load i32, i32* %subdivLevels, align 8, !dbg !8618
  %call = call i8* @ccgSubSurf_getEdgeLevelData(%struct.CCGSubSurf* %0, %struct.CCGEdge* %1, i32 %2, i32 %4), !dbg !8619
  ret i8* %call, !dbg !8620
}

; Function Attrs: noinline nounwind uwtable
define dso_local i8* @ccgSubSurf_getEdgeLevelData(%struct.CCGSubSurf* %ss, %struct.CCGEdge* %e, i32 %x, i32 %level) #0 !dbg !8621 {
entry:
  %retval = alloca i8*, align 8
  %ss.addr = alloca %struct.CCGSubSurf*, align 8
  %e.addr = alloca %struct.CCGEdge*, align 8
  %x.addr = alloca i32, align 4
  %level.addr = alloca i32, align 4
  store %struct.CCGSubSurf* %ss, %struct.CCGSubSurf** %ss.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGSubSurf** %ss.addr, metadata !8624, metadata !DIExpression()), !dbg !8625
  store %struct.CCGEdge* %e, %struct.CCGEdge** %e.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGEdge** %e.addr, metadata !8626, metadata !DIExpression()), !dbg !8627
  store i32 %x, i32* %x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !8628, metadata !DIExpression()), !dbg !8629
  store i32 %level, i32* %level.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %level.addr, metadata !8630, metadata !DIExpression()), !dbg !8631
  %0 = load i32, i32* %level.addr, align 4, !dbg !8632
  %cmp = icmp slt i32 %0, 0, !dbg !8634
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !8635

lor.lhs.false:                                    ; preds = %entry
  %1 = load i32, i32* %level.addr, align 4, !dbg !8636
  %2 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !8637
  %subdivLevels = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %2, i32 0, i32 6, !dbg !8638
  %3 = load i32, i32* %subdivLevels, align 8, !dbg !8638
  %cmp1 = icmp sgt i32 %1, %3, !dbg !8639
  br i1 %cmp1, label %if.then, label %if.else, !dbg !8640

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i8* null, i8** %retval, align 8, !dbg !8641
  br label %return, !dbg !8641

if.else:                                          ; preds = %lor.lhs.false
  %4 = load %struct.CCGEdge*, %struct.CCGEdge** %e.addr, align 8, !dbg !8643
  %5 = load i32, i32* %level.addr, align 4, !dbg !8645
  %6 = load i32, i32* %x.addr, align 4, !dbg !8646
  %7 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !8647
  %meshIFC = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %7, i32 0, i32 3, !dbg !8648
  %vertDataSize = getelementptr inbounds %struct.CCGMeshIFC, %struct.CCGMeshIFC* %meshIFC, i32 0, i32 4, !dbg !8649
  %8 = load i32, i32* %vertDataSize, align 8, !dbg !8649
  %call = call i8* @_edge_getCo(%struct.CCGEdge* %4, i32 %5, i32 %6, i32 %8), !dbg !8650
  store i8* %call, i8** %retval, align 8, !dbg !8651
  br label %return, !dbg !8651

return:                                           ; preds = %if.else, %if.then
  %9 = load i8*, i8** %retval, align 8, !dbg !8652
  ret i8* %9, !dbg !8652
}

; Function Attrs: noinline nounwind uwtable
define dso_local float @ccgSubSurf_getEdgeCrease(%struct.CCGEdge* %e) #0 !dbg !8653 {
entry:
  %e.addr = alloca %struct.CCGEdge*, align 8
  store %struct.CCGEdge* %e, %struct.CCGEdge** %e.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGEdge** %e.addr, metadata !8656, metadata !DIExpression()), !dbg !8657
  %0 = load %struct.CCGEdge*, %struct.CCGEdge** %e.addr, align 8, !dbg !8658
  %crease = getelementptr inbounds %struct.CCGEdge, %struct.CCGEdge* %0, i32 0, i32 4, !dbg !8659
  %1 = load float, float* %crease, align 4, !dbg !8659
  ret float %1, !dbg !8660
}

; Function Attrs: noinline nounwind uwtable
define dso_local i8* @ccgSubSurf_getFaceFaceHandle(%struct.CCGFace* %f) #0 !dbg !8661 {
entry:
  %f.addr = alloca %struct.CCGFace*, align 8
  store %struct.CCGFace* %f, %struct.CCGFace** %f.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGFace** %f.addr, metadata !8664, metadata !DIExpression()), !dbg !8665
  %0 = load %struct.CCGFace*, %struct.CCGFace** %f.addr, align 8, !dbg !8666
  %fHDL = getelementptr inbounds %struct.CCGFace, %struct.CCGFace* %0, i32 0, i32 1, !dbg !8667
  %1 = load i8*, i8** %fHDL, align 8, !dbg !8667
  ret i8* %1, !dbg !8668
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @ccgSubSurf_getFaceAge(%struct.CCGSubSurf* %ss, %struct.CCGFace* %f) #0 !dbg !8669 {
entry:
  %retval = alloca i32, align 4
  %ss.addr = alloca %struct.CCGSubSurf*, align 8
  %f.addr = alloca %struct.CCGFace*, align 8
  %userData = alloca i8*, align 8
  store %struct.CCGSubSurf* %ss, %struct.CCGSubSurf** %ss.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGSubSurf** %ss.addr, metadata !8672, metadata !DIExpression()), !dbg !8673
  store %struct.CCGFace* %f, %struct.CCGFace** %f.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGFace** %f.addr, metadata !8674, metadata !DIExpression()), !dbg !8675
  %0 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !8676
  %useAgeCounts = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %0, i32 0, i32 18, !dbg !8678
  %1 = load i32, i32* %useAgeCounts, align 4, !dbg !8678
  %tobool = icmp ne i32 %1, 0, !dbg !8676
  br i1 %tobool, label %if.then, label %if.else, !dbg !8679

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8** %userData, metadata !8680, metadata !DIExpression()), !dbg !8682
  %2 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !8683
  %3 = load %struct.CCGFace*, %struct.CCGFace** %f.addr, align 8, !dbg !8684
  %call = call i8* @ccgSubSurf_getFaceUserData(%struct.CCGSubSurf* %2, %struct.CCGFace* %3), !dbg !8685
  store i8* %call, i8** %userData, align 8, !dbg !8682
  %4 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !8686
  %currentAge = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %4, i32 0, i32 17, !dbg !8687
  %5 = load i32, i32* %currentAge, align 8, !dbg !8687
  %6 = load i8*, i8** %userData, align 8, !dbg !8688
  %7 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !8689
  %faceUserAgeOffset = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %7, i32 0, i32 21, !dbg !8690
  %8 = load i32, i32* %faceUserAgeOffset, align 8, !dbg !8690
  %idxprom = sext i32 %8 to i64, !dbg !8688
  %arrayidx = getelementptr inbounds i8, i8* %6, i64 %idxprom, !dbg !8688
  %9 = bitcast i8* %arrayidx to i32*, !dbg !8691
  %10 = load i32, i32* %9, align 4, !dbg !8691
  %sub = sub nsw i32 %5, %10, !dbg !8692
  store i32 %sub, i32* %retval, align 4, !dbg !8693
  br label %return, !dbg !8693

if.else:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !8694
  br label %return, !dbg !8694

return:                                           ; preds = %if.else, %if.then
  %11 = load i32, i32* %retval, align 4, !dbg !8696
  ret i32 %11, !dbg !8696
}

; Function Attrs: noinline nounwind uwtable
define dso_local i8* @ccgSubSurf_getFaceUserData(%struct.CCGSubSurf* %ss, %struct.CCGFace* %f) #0 !dbg !8697 {
entry:
  %ss.addr = alloca %struct.CCGSubSurf*, align 8
  %f.addr = alloca %struct.CCGFace*, align 8
  %maxGridSize = alloca i32, align 4
  store %struct.CCGSubSurf* %ss, %struct.CCGSubSurf** %ss.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGSubSurf** %ss.addr, metadata !8700, metadata !DIExpression()), !dbg !8701
  store %struct.CCGFace* %f, %struct.CCGFace** %f.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGFace** %f.addr, metadata !8702, metadata !DIExpression()), !dbg !8703
  call void @llvm.dbg.declare(metadata i32* %maxGridSize, metadata !8704, metadata !DIExpression()), !dbg !8705
  %0 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !8706
  %subdivLevels = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %0, i32 0, i32 6, !dbg !8707
  %1 = load i32, i32* %subdivLevels, align 8, !dbg !8707
  %call = call i32 @ccg_gridsize(i32 %1), !dbg !8708
  store i32 %call, i32* %maxGridSize, align 4, !dbg !8705
  %2 = load %struct.CCGFace*, %struct.CCGFace** %f.addr, align 8, !dbg !8709
  %call1 = call i8* @FACE_getCenterData(%struct.CCGFace* %2), !dbg !8710
  %3 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !8711
  %meshIFC = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %3, i32 0, i32 3, !dbg !8712
  %vertDataSize = getelementptr inbounds %struct.CCGMeshIFC, %struct.CCGMeshIFC* %meshIFC, i32 0, i32 4, !dbg !8713
  %4 = load i32, i32* %vertDataSize, align 8, !dbg !8713
  %5 = load %struct.CCGFace*, %struct.CCGFace** %f.addr, align 8, !dbg !8714
  %numVerts = getelementptr inbounds %struct.CCGFace, %struct.CCGFace* %5, i32 0, i32 2, !dbg !8715
  %6 = load i16, i16* %numVerts, align 8, !dbg !8715
  %conv = sext i16 %6 to i32, !dbg !8714
  %7 = load i32, i32* %maxGridSize, align 4, !dbg !8716
  %mul = mul nsw i32 %conv, %7, !dbg !8717
  %add = add nsw i32 1, %mul, !dbg !8718
  %8 = load %struct.CCGFace*, %struct.CCGFace** %f.addr, align 8, !dbg !8719
  %numVerts2 = getelementptr inbounds %struct.CCGFace, %struct.CCGFace* %8, i32 0, i32 2, !dbg !8720
  %9 = load i16, i16* %numVerts2, align 8, !dbg !8720
  %conv3 = sext i16 %9 to i32, !dbg !8719
  %10 = load i32, i32* %maxGridSize, align 4, !dbg !8721
  %mul4 = mul nsw i32 %conv3, %10, !dbg !8722
  %11 = load i32, i32* %maxGridSize, align 4, !dbg !8723
  %mul5 = mul nsw i32 %mul4, %11, !dbg !8724
  %add6 = add nsw i32 %add, %mul5, !dbg !8725
  %mul7 = mul nsw i32 %4, %add6, !dbg !8726
  %idx.ext = sext i32 %mul7 to i64, !dbg !8727
  %add.ptr = getelementptr inbounds i8, i8* %call1, i64 %idx.ext, !dbg !8727
  ret i8* %add.ptr, !dbg !8728
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @ccgSubSurf_getFaceNumVerts(%struct.CCGFace* %f) #0 !dbg !8729 {
entry:
  %f.addr = alloca %struct.CCGFace*, align 8
  store %struct.CCGFace* %f, %struct.CCGFace** %f.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGFace** %f.addr, metadata !8732, metadata !DIExpression()), !dbg !8733
  %0 = load %struct.CCGFace*, %struct.CCGFace** %f.addr, align 8, !dbg !8734
  %numVerts = getelementptr inbounds %struct.CCGFace, %struct.CCGFace* %0, i32 0, i32 2, !dbg !8735
  %1 = load i16, i16* %numVerts, align 8, !dbg !8735
  %conv = sext i16 %1 to i32, !dbg !8734
  ret i32 %conv, !dbg !8736
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.CCGVert* @ccgSubSurf_getFaceVert(%struct.CCGFace* %f, i32 %index) #0 !dbg !8737 {
entry:
  %retval = alloca %struct.CCGVert*, align 8
  %f.addr = alloca %struct.CCGFace*, align 8
  %index.addr = alloca i32, align 4
  store %struct.CCGFace* %f, %struct.CCGFace** %f.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGFace** %f.addr, metadata !8740, metadata !DIExpression()), !dbg !8741
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !8742, metadata !DIExpression()), !dbg !8743
  %0 = load i32, i32* %index.addr, align 4, !dbg !8744
  %cmp = icmp slt i32 %0, 0, !dbg !8746
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !8747

lor.lhs.false:                                    ; preds = %entry
  %1 = load i32, i32* %index.addr, align 4, !dbg !8748
  %2 = load %struct.CCGFace*, %struct.CCGFace** %f.addr, align 8, !dbg !8749
  %numVerts = getelementptr inbounds %struct.CCGFace, %struct.CCGFace* %2, i32 0, i32 2, !dbg !8750
  %3 = load i16, i16* %numVerts, align 8, !dbg !8750
  %conv = sext i16 %3 to i32, !dbg !8749
  %cmp1 = icmp sge i32 %1, %conv, !dbg !8751
  br i1 %cmp1, label %if.then, label %if.else, !dbg !8752

if.then:                                          ; preds = %lor.lhs.false, %entry
  store %struct.CCGVert* null, %struct.CCGVert** %retval, align 8, !dbg !8753
  br label %return, !dbg !8753

if.else:                                          ; preds = %lor.lhs.false
  %4 = load %struct.CCGFace*, %struct.CCGFace** %f.addr, align 8, !dbg !8755
  %call = call %struct.CCGVert** @FACE_getVerts(%struct.CCGFace* %4), !dbg !8757
  %5 = load i32, i32* %index.addr, align 4, !dbg !8758
  %idxprom = sext i32 %5 to i64, !dbg !8757
  %arrayidx = getelementptr inbounds %struct.CCGVert*, %struct.CCGVert** %call, i64 %idxprom, !dbg !8757
  %6 = load %struct.CCGVert*, %struct.CCGVert** %arrayidx, align 8, !dbg !8757
  store %struct.CCGVert* %6, %struct.CCGVert** %retval, align 8, !dbg !8759
  br label %return, !dbg !8759

return:                                           ; preds = %if.else, %if.then
  %7 = load %struct.CCGVert*, %struct.CCGVert** %retval, align 8, !dbg !8760
  ret %struct.CCGVert* %7, !dbg !8760
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.CCGEdge* @ccgSubSurf_getFaceEdge(%struct.CCGFace* %f, i32 %index) #0 !dbg !8761 {
entry:
  %retval = alloca %struct.CCGEdge*, align 8
  %f.addr = alloca %struct.CCGFace*, align 8
  %index.addr = alloca i32, align 4
  store %struct.CCGFace* %f, %struct.CCGFace** %f.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGFace** %f.addr, metadata !8764, metadata !DIExpression()), !dbg !8765
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !8766, metadata !DIExpression()), !dbg !8767
  %0 = load i32, i32* %index.addr, align 4, !dbg !8768
  %cmp = icmp slt i32 %0, 0, !dbg !8770
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !8771

lor.lhs.false:                                    ; preds = %entry
  %1 = load i32, i32* %index.addr, align 4, !dbg !8772
  %2 = load %struct.CCGFace*, %struct.CCGFace** %f.addr, align 8, !dbg !8773
  %numVerts = getelementptr inbounds %struct.CCGFace, %struct.CCGFace* %2, i32 0, i32 2, !dbg !8774
  %3 = load i16, i16* %numVerts, align 8, !dbg !8774
  %conv = sext i16 %3 to i32, !dbg !8773
  %cmp1 = icmp sge i32 %1, %conv, !dbg !8775
  br i1 %cmp1, label %if.then, label %if.else, !dbg !8776

if.then:                                          ; preds = %lor.lhs.false, %entry
  store %struct.CCGEdge* null, %struct.CCGEdge** %retval, align 8, !dbg !8777
  br label %return, !dbg !8777

if.else:                                          ; preds = %lor.lhs.false
  %4 = load %struct.CCGFace*, %struct.CCGFace** %f.addr, align 8, !dbg !8779
  %call = call %struct.CCGEdge** @FACE_getEdges(%struct.CCGFace* %4), !dbg !8781
  %5 = load i32, i32* %index.addr, align 4, !dbg !8782
  %idxprom = sext i32 %5 to i64, !dbg !8781
  %arrayidx = getelementptr inbounds %struct.CCGEdge*, %struct.CCGEdge** %call, i64 %idxprom, !dbg !8781
  %6 = load %struct.CCGEdge*, %struct.CCGEdge** %arrayidx, align 8, !dbg !8781
  store %struct.CCGEdge* %6, %struct.CCGEdge** %retval, align 8, !dbg !8783
  br label %return, !dbg !8783

return:                                           ; preds = %if.else, %if.then
  %7 = load %struct.CCGEdge*, %struct.CCGEdge** %retval, align 8, !dbg !8784
  ret %struct.CCGEdge* %7, !dbg !8784
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @ccgSubSurf_getFaceEdgeIndex(%struct.CCGFace* %f, %struct.CCGEdge* %e) #0 !dbg !8785 {
entry:
  %retval = alloca i32, align 4
  %f.addr = alloca %struct.CCGFace*, align 8
  %e.addr = alloca %struct.CCGEdge*, align 8
  %i = alloca i32, align 4
  store %struct.CCGFace* %f, %struct.CCGFace** %f.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGFace** %f.addr, metadata !8788, metadata !DIExpression()), !dbg !8789
  store %struct.CCGEdge* %e, %struct.CCGEdge** %e.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGEdge** %e.addr, metadata !8790, metadata !DIExpression()), !dbg !8791
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8792, metadata !DIExpression()), !dbg !8793
  store i32 0, i32* %i, align 4, !dbg !8794
  br label %for.cond, !dbg !8796

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !8797
  %1 = load %struct.CCGFace*, %struct.CCGFace** %f.addr, align 8, !dbg !8799
  %numVerts = getelementptr inbounds %struct.CCGFace, %struct.CCGFace* %1, i32 0, i32 2, !dbg !8800
  %2 = load i16, i16* %numVerts, align 8, !dbg !8800
  %conv = sext i16 %2 to i32, !dbg !8799
  %cmp = icmp slt i32 %0, %conv, !dbg !8801
  br i1 %cmp, label %for.body, label %for.end, !dbg !8802

for.body:                                         ; preds = %for.cond
  %3 = load %struct.CCGFace*, %struct.CCGFace** %f.addr, align 8, !dbg !8803
  %call = call %struct.CCGEdge** @FACE_getEdges(%struct.CCGFace* %3), !dbg !8806
  %4 = load i32, i32* %i, align 4, !dbg !8807
  %idxprom = sext i32 %4 to i64, !dbg !8806
  %arrayidx = getelementptr inbounds %struct.CCGEdge*, %struct.CCGEdge** %call, i64 %idxprom, !dbg !8806
  %5 = load %struct.CCGEdge*, %struct.CCGEdge** %arrayidx, align 8, !dbg !8806
  %6 = load %struct.CCGEdge*, %struct.CCGEdge** %e.addr, align 8, !dbg !8808
  %cmp2 = icmp eq %struct.CCGEdge* %5, %6, !dbg !8809
  br i1 %cmp2, label %if.then, label %if.end, !dbg !8810

if.then:                                          ; preds = %for.body
  %7 = load i32, i32* %i, align 4, !dbg !8811
  store i32 %7, i32* %retval, align 4, !dbg !8813
  br label %return, !dbg !8813

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !8814

for.inc:                                          ; preds = %if.end
  %8 = load i32, i32* %i, align 4, !dbg !8815
  %inc = add nsw i32 %8, 1, !dbg !8815
  store i32 %inc, i32* %i, align 4, !dbg !8815
  br label %for.cond, !dbg !8816, !llvm.loop !8817

for.end:                                          ; preds = %for.cond
  store i32 -1, i32* %retval, align 4, !dbg !8819
  br label %return, !dbg !8819

return:                                           ; preds = %for.end, %if.then
  %9 = load i32, i32* %retval, align 4, !dbg !8820
  ret i32 %9, !dbg !8820
}

; Function Attrs: noinline nounwind uwtable
define dso_local i8* @ccgSubSurf_getFaceCenterData(%struct.CCGFace* %f) #0 !dbg !8821 {
entry:
  %f.addr = alloca %struct.CCGFace*, align 8
  store %struct.CCGFace* %f, %struct.CCGFace** %f.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGFace** %f.addr, metadata !8824, metadata !DIExpression()), !dbg !8825
  %0 = load %struct.CCGFace*, %struct.CCGFace** %f.addr, align 8, !dbg !8826
  %call = call i8* @FACE_getCenterData(%struct.CCGFace* %0), !dbg !8827
  ret i8* %call, !dbg !8828
}

; Function Attrs: noinline nounwind uwtable
define dso_local i8* @ccgSubSurf_getFaceGridEdgeDataArray(%struct.CCGSubSurf* %ss, %struct.CCGFace* %f, i32 %gridIndex) #0 !dbg !8829 {
entry:
  %ss.addr = alloca %struct.CCGSubSurf*, align 8
  %f.addr = alloca %struct.CCGFace*, align 8
  %gridIndex.addr = alloca i32, align 4
  store %struct.CCGSubSurf* %ss, %struct.CCGSubSurf** %ss.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGSubSurf** %ss.addr, metadata !8832, metadata !DIExpression()), !dbg !8833
  store %struct.CCGFace* %f, %struct.CCGFace** %f.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGFace** %f.addr, metadata !8834, metadata !DIExpression()), !dbg !8835
  store i32 %gridIndex, i32* %gridIndex.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %gridIndex.addr, metadata !8836, metadata !DIExpression()), !dbg !8837
  %0 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !8838
  %1 = load %struct.CCGFace*, %struct.CCGFace** %f.addr, align 8, !dbg !8839
  %2 = load i32, i32* %gridIndex.addr, align 4, !dbg !8840
  %call = call i8* @ccgSubSurf_getFaceGridEdgeData(%struct.CCGSubSurf* %0, %struct.CCGFace* %1, i32 %2, i32 0), !dbg !8841
  ret i8* %call, !dbg !8842
}

; Function Attrs: noinline nounwind uwtable
define dso_local i8* @ccgSubSurf_getFaceGridEdgeData(%struct.CCGSubSurf* %ss, %struct.CCGFace* %f, i32 %gridIndex, i32 %x) #0 !dbg !8843 {
entry:
  %ss.addr = alloca %struct.CCGSubSurf*, align 8
  %f.addr = alloca %struct.CCGFace*, align 8
  %gridIndex.addr = alloca i32, align 4
  %x.addr = alloca i32, align 4
  store %struct.CCGSubSurf* %ss, %struct.CCGSubSurf** %ss.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGSubSurf** %ss.addr, metadata !8846, metadata !DIExpression()), !dbg !8847
  store %struct.CCGFace* %f, %struct.CCGFace** %f.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGFace** %f.addr, metadata !8848, metadata !DIExpression()), !dbg !8849
  store i32 %gridIndex, i32* %gridIndex.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %gridIndex.addr, metadata !8850, metadata !DIExpression()), !dbg !8851
  store i32 %x, i32* %x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !8852, metadata !DIExpression()), !dbg !8853
  %0 = load %struct.CCGFace*, %struct.CCGFace** %f.addr, align 8, !dbg !8854
  %1 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !8855
  %subdivLevels = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %1, i32 0, i32 6, !dbg !8856
  %2 = load i32, i32* %subdivLevels, align 8, !dbg !8856
  %3 = load i32, i32* %gridIndex.addr, align 4, !dbg !8857
  %4 = load i32, i32* %x.addr, align 4, !dbg !8858
  %5 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !8859
  %subdivLevels1 = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %5, i32 0, i32 6, !dbg !8860
  %6 = load i32, i32* %subdivLevels1, align 8, !dbg !8860
  %7 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !8861
  %meshIFC = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %7, i32 0, i32 3, !dbg !8862
  %vertDataSize = getelementptr inbounds %struct.CCGMeshIFC, %struct.CCGMeshIFC* %meshIFC, i32 0, i32 4, !dbg !8863
  %8 = load i32, i32* %vertDataSize, align 8, !dbg !8863
  %call = call i8* @_face_getIECo(%struct.CCGFace* %0, i32 %2, i32 %3, i32 %4, i32 %6, i32 %8), !dbg !8864
  ret i8* %call, !dbg !8865
}

; Function Attrs: noinline nounwind uwtable
define dso_local i8* @ccgSubSurf_getFaceGridDataArray(%struct.CCGSubSurf* %ss, %struct.CCGFace* %f, i32 %gridIndex) #0 !dbg !8866 {
entry:
  %ss.addr = alloca %struct.CCGSubSurf*, align 8
  %f.addr = alloca %struct.CCGFace*, align 8
  %gridIndex.addr = alloca i32, align 4
  store %struct.CCGSubSurf* %ss, %struct.CCGSubSurf** %ss.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGSubSurf** %ss.addr, metadata !8867, metadata !DIExpression()), !dbg !8868
  store %struct.CCGFace* %f, %struct.CCGFace** %f.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGFace** %f.addr, metadata !8869, metadata !DIExpression()), !dbg !8870
  store i32 %gridIndex, i32* %gridIndex.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %gridIndex.addr, metadata !8871, metadata !DIExpression()), !dbg !8872
  %0 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !8873
  %1 = load %struct.CCGFace*, %struct.CCGFace** %f.addr, align 8, !dbg !8874
  %2 = load i32, i32* %gridIndex.addr, align 4, !dbg !8875
  %call = call i8* @ccgSubSurf_getFaceGridData(%struct.CCGSubSurf* %0, %struct.CCGFace* %1, i32 %2, i32 0, i32 0), !dbg !8876
  ret i8* %call, !dbg !8877
}

; Function Attrs: noinline nounwind uwtable
define dso_local i8* @ccgSubSurf_getFaceGridData(%struct.CCGSubSurf* %ss, %struct.CCGFace* %f, i32 %gridIndex, i32 %x, i32 %y) #0 !dbg !8878 {
entry:
  %ss.addr = alloca %struct.CCGSubSurf*, align 8
  %f.addr = alloca %struct.CCGFace*, align 8
  %gridIndex.addr = alloca i32, align 4
  %x.addr = alloca i32, align 4
  %y.addr = alloca i32, align 4
  store %struct.CCGSubSurf* %ss, %struct.CCGSubSurf** %ss.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGSubSurf** %ss.addr, metadata !8881, metadata !DIExpression()), !dbg !8882
  store %struct.CCGFace* %f, %struct.CCGFace** %f.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGFace** %f.addr, metadata !8883, metadata !DIExpression()), !dbg !8884
  store i32 %gridIndex, i32* %gridIndex.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %gridIndex.addr, metadata !8885, metadata !DIExpression()), !dbg !8886
  store i32 %x, i32* %x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !8887, metadata !DIExpression()), !dbg !8888
  store i32 %y, i32* %y.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %y.addr, metadata !8889, metadata !DIExpression()), !dbg !8890
  %0 = load %struct.CCGFace*, %struct.CCGFace** %f.addr, align 8, !dbg !8891
  %1 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !8892
  %subdivLevels = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %1, i32 0, i32 6, !dbg !8893
  %2 = load i32, i32* %subdivLevels, align 8, !dbg !8893
  %3 = load i32, i32* %gridIndex.addr, align 4, !dbg !8894
  %4 = load i32, i32* %x.addr, align 4, !dbg !8895
  %5 = load i32, i32* %y.addr, align 4, !dbg !8896
  %6 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !8897
  %subdivLevels1 = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %6, i32 0, i32 6, !dbg !8898
  %7 = load i32, i32* %subdivLevels1, align 8, !dbg !8898
  %8 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !8899
  %meshIFC = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %8, i32 0, i32 3, !dbg !8900
  %vertDataSize = getelementptr inbounds %struct.CCGMeshIFC, %struct.CCGMeshIFC* %meshIFC, i32 0, i32 4, !dbg !8901
  %9 = load i32, i32* %vertDataSize, align 8, !dbg !8901
  %call = call i8* @_face_getIFCo(%struct.CCGFace* %0, i32 %2, i32 %3, i32 %4, i32 %5, i32 %7, i32 %9), !dbg !8902
  ret i8* %call, !dbg !8903
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.CCGVertIterator* @ccgSubSurf_getVertIterator(%struct.CCGSubSurf* %ss) #0 !dbg !8904 {
entry:
  %ss.addr = alloca %struct.CCGSubSurf*, align 8
  store %struct.CCGSubSurf* %ss, %struct.CCGSubSurf** %ss.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGSubSurf** %ss.addr, metadata !8907, metadata !DIExpression()), !dbg !8908
  %0 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !8909
  %vMap = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %0, i32 0, i32 0, !dbg !8910
  %1 = load %struct._EHash*, %struct._EHash** %vMap, align 8, !dbg !8910
  %call = call %struct._EHashIterator* @_ehashIterator_new(%struct._EHash* %1), !dbg !8911
  %2 = bitcast %struct._EHashIterator* %call to %struct.CCGVertIterator*, !dbg !8912
  ret %struct.CCGVertIterator* %2, !dbg !8913
}

; Function Attrs: noinline nounwind uwtable
define internal %struct._EHashIterator* @_ehashIterator_new(%struct._EHash* %eh) #0 !dbg !8914 {
entry:
  %eh.addr = alloca %struct._EHash*, align 8
  %ehi = alloca %struct._EHashIterator*, align 8
  store %struct._EHash* %eh, %struct._EHash** %eh.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._EHash** %eh.addr, metadata !8917, metadata !DIExpression()), !dbg !8918
  call void @llvm.dbg.declare(metadata %struct._EHashIterator** %ehi, metadata !8919, metadata !DIExpression()), !dbg !8920
  %0 = load %struct._EHash*, %struct._EHash** %eh.addr, align 8, !dbg !8921
  %allocatorIFC = getelementptr inbounds %struct._EHash, %struct._EHash* %0, i32 0, i32 4, !dbg !8921
  %alloc = getelementptr inbounds %struct.CCGAllocatorIFC, %struct.CCGAllocatorIFC* %allocatorIFC, i32 0, i32 0, !dbg !8921
  %1 = load i8* (i8*, i32)*, i8* (i8*, i32)** %alloc, align 8, !dbg !8921
  %2 = load %struct._EHash*, %struct._EHash** %eh.addr, align 8, !dbg !8921
  %allocator = getelementptr inbounds %struct._EHash, %struct._EHash* %2, i32 0, i32 5, !dbg !8921
  %3 = load i8*, i8** %allocator, align 8, !dbg !8921
  %call = call i8* %1(i8* %3, i32 24), !dbg !8921
  %4 = bitcast i8* %call to %struct._EHashIterator*, !dbg !8921
  store %struct._EHashIterator* %4, %struct._EHashIterator** %ehi, align 8, !dbg !8920
  %5 = load %struct._EHash*, %struct._EHash** %eh.addr, align 8, !dbg !8922
  %6 = load %struct._EHashIterator*, %struct._EHashIterator** %ehi, align 8, !dbg !8923
  %eh1 = getelementptr inbounds %struct._EHashIterator, %struct._EHashIterator* %6, i32 0, i32 0, !dbg !8924
  store %struct._EHash* %5, %struct._EHash** %eh1, align 8, !dbg !8925
  %7 = load %struct._EHashIterator*, %struct._EHashIterator** %ehi, align 8, !dbg !8926
  %curEntry = getelementptr inbounds %struct._EHashIterator, %struct._EHashIterator* %7, i32 0, i32 2, !dbg !8927
  store %struct._EHEntry* null, %struct._EHEntry** %curEntry, align 8, !dbg !8928
  %8 = load %struct._EHashIterator*, %struct._EHashIterator** %ehi, align 8, !dbg !8929
  %curBucket = getelementptr inbounds %struct._EHashIterator, %struct._EHashIterator* %8, i32 0, i32 1, !dbg !8930
  store i32 -1, i32* %curBucket, align 8, !dbg !8931
  br label %while.cond, !dbg !8932

while.cond:                                       ; preds = %if.end, %entry
  %9 = load %struct._EHashIterator*, %struct._EHashIterator** %ehi, align 8, !dbg !8933
  %curEntry2 = getelementptr inbounds %struct._EHashIterator, %struct._EHashIterator* %9, i32 0, i32 2, !dbg !8934
  %10 = load %struct._EHEntry*, %struct._EHEntry** %curEntry2, align 8, !dbg !8934
  %tobool = icmp ne %struct._EHEntry* %10, null, !dbg !8935
  %lnot = xor i1 %tobool, true, !dbg !8935
  br i1 %lnot, label %while.body, label %while.end, !dbg !8932

while.body:                                       ; preds = %while.cond
  %11 = load %struct._EHashIterator*, %struct._EHashIterator** %ehi, align 8, !dbg !8936
  %curBucket3 = getelementptr inbounds %struct._EHashIterator, %struct._EHashIterator* %11, i32 0, i32 1, !dbg !8938
  %12 = load i32, i32* %curBucket3, align 8, !dbg !8939
  %inc = add nsw i32 %12, 1, !dbg !8939
  store i32 %inc, i32* %curBucket3, align 8, !dbg !8939
  %13 = load %struct._EHashIterator*, %struct._EHashIterator** %ehi, align 8, !dbg !8940
  %curBucket4 = getelementptr inbounds %struct._EHashIterator, %struct._EHashIterator* %13, i32 0, i32 1, !dbg !8942
  %14 = load i32, i32* %curBucket4, align 8, !dbg !8942
  %15 = load %struct._EHashIterator*, %struct._EHashIterator** %ehi, align 8, !dbg !8943
  %eh5 = getelementptr inbounds %struct._EHashIterator, %struct._EHashIterator* %15, i32 0, i32 0, !dbg !8944
  %16 = load %struct._EHash*, %struct._EHash** %eh5, align 8, !dbg !8944
  %curSize = getelementptr inbounds %struct._EHash, %struct._EHash* %16, i32 0, i32 2, !dbg !8945
  %17 = load i32, i32* %curSize, align 4, !dbg !8945
  %cmp = icmp eq i32 %14, %17, !dbg !8946
  br i1 %cmp, label %if.then, label %if.end, !dbg !8947

if.then:                                          ; preds = %while.body
  br label %while.end, !dbg !8948

if.end:                                           ; preds = %while.body
  %18 = load %struct._EHashIterator*, %struct._EHashIterator** %ehi, align 8, !dbg !8949
  %eh6 = getelementptr inbounds %struct._EHashIterator, %struct._EHashIterator* %18, i32 0, i32 0, !dbg !8950
  %19 = load %struct._EHash*, %struct._EHash** %eh6, align 8, !dbg !8950
  %buckets = getelementptr inbounds %struct._EHash, %struct._EHash* %19, i32 0, i32 0, !dbg !8951
  %20 = load %struct._EHEntry**, %struct._EHEntry*** %buckets, align 8, !dbg !8951
  %21 = load %struct._EHashIterator*, %struct._EHashIterator** %ehi, align 8, !dbg !8952
  %curBucket7 = getelementptr inbounds %struct._EHashIterator, %struct._EHashIterator* %21, i32 0, i32 1, !dbg !8953
  %22 = load i32, i32* %curBucket7, align 8, !dbg !8953
  %idxprom = sext i32 %22 to i64, !dbg !8949
  %arrayidx = getelementptr inbounds %struct._EHEntry*, %struct._EHEntry** %20, i64 %idxprom, !dbg !8949
  %23 = load %struct._EHEntry*, %struct._EHEntry** %arrayidx, align 8, !dbg !8949
  %24 = load %struct._EHashIterator*, %struct._EHashIterator** %ehi, align 8, !dbg !8954
  %curEntry8 = getelementptr inbounds %struct._EHashIterator, %struct._EHashIterator* %24, i32 0, i32 2, !dbg !8955
  store %struct._EHEntry* %23, %struct._EHEntry** %curEntry8, align 8, !dbg !8956
  br label %while.cond, !dbg !8932, !llvm.loop !8957

while.end:                                        ; preds = %if.then, %while.cond
  %25 = load %struct._EHashIterator*, %struct._EHashIterator** %ehi, align 8, !dbg !8959
  ret %struct._EHashIterator* %25, !dbg !8960
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.CCGEdgeIterator* @ccgSubSurf_getEdgeIterator(%struct.CCGSubSurf* %ss) #0 !dbg !8961 {
entry:
  %ss.addr = alloca %struct.CCGSubSurf*, align 8
  store %struct.CCGSubSurf* %ss, %struct.CCGSubSurf** %ss.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGSubSurf** %ss.addr, metadata !8964, metadata !DIExpression()), !dbg !8965
  %0 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !8966
  %eMap = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %0, i32 0, i32 1, !dbg !8967
  %1 = load %struct._EHash*, %struct._EHash** %eMap, align 8, !dbg !8967
  %call = call %struct._EHashIterator* @_ehashIterator_new(%struct._EHash* %1), !dbg !8968
  %2 = bitcast %struct._EHashIterator* %call to %struct.CCGEdgeIterator*, !dbg !8969
  ret %struct.CCGEdgeIterator* %2, !dbg !8970
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.CCGFaceIterator* @ccgSubSurf_getFaceIterator(%struct.CCGSubSurf* %ss) #0 !dbg !8971 {
entry:
  %ss.addr = alloca %struct.CCGSubSurf*, align 8
  store %struct.CCGSubSurf* %ss, %struct.CCGSubSurf** %ss.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGSubSurf** %ss.addr, metadata !8974, metadata !DIExpression()), !dbg !8975
  %0 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !8976
  %fMap = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %0, i32 0, i32 2, !dbg !8977
  %1 = load %struct._EHash*, %struct._EHash** %fMap, align 8, !dbg !8977
  %call = call %struct._EHashIterator* @_ehashIterator_new(%struct._EHash* %1), !dbg !8978
  %2 = bitcast %struct._EHashIterator* %call to %struct.CCGFaceIterator*, !dbg !8979
  ret %struct.CCGFaceIterator* %2, !dbg !8980
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.CCGVert* @ccgVertIterator_getCurrent(%struct.CCGVertIterator* %vi) #0 !dbg !8981 {
entry:
  %vi.addr = alloca %struct.CCGVertIterator*, align 8
  store %struct.CCGVertIterator* %vi, %struct.CCGVertIterator** %vi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGVertIterator** %vi.addr, metadata !8984, metadata !DIExpression()), !dbg !8985
  %0 = load %struct.CCGVertIterator*, %struct.CCGVertIterator** %vi.addr, align 8, !dbg !8986
  %1 = bitcast %struct.CCGVertIterator* %0 to %struct._EHashIterator*, !dbg !8987
  %call = call i8* @_ehashIterator_getCurrent(%struct._EHashIterator* %1), !dbg !8988
  %2 = bitcast i8* %call to %struct.CCGVert*, !dbg !8989
  ret %struct.CCGVert* %2, !dbg !8990
}

; Function Attrs: noinline nounwind uwtable
define internal i8* @_ehashIterator_getCurrent(%struct._EHashIterator* %ehi) #0 !dbg !8991 {
entry:
  %ehi.addr = alloca %struct._EHashIterator*, align 8
  store %struct._EHashIterator* %ehi, %struct._EHashIterator** %ehi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._EHashIterator** %ehi.addr, metadata !8994, metadata !DIExpression()), !dbg !8995
  %0 = load %struct._EHashIterator*, %struct._EHashIterator** %ehi.addr, align 8, !dbg !8996
  %curEntry = getelementptr inbounds %struct._EHashIterator, %struct._EHashIterator* %0, i32 0, i32 2, !dbg !8997
  %1 = load %struct._EHEntry*, %struct._EHEntry** %curEntry, align 8, !dbg !8997
  %2 = bitcast %struct._EHEntry* %1 to i8*, !dbg !8996
  ret i8* %2, !dbg !8998
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @ccgVertIterator_isStopped(%struct.CCGVertIterator* %vi) #0 !dbg !8999 {
entry:
  %vi.addr = alloca %struct.CCGVertIterator*, align 8
  store %struct.CCGVertIterator* %vi, %struct.CCGVertIterator** %vi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGVertIterator** %vi.addr, metadata !9002, metadata !DIExpression()), !dbg !9003
  %0 = load %struct.CCGVertIterator*, %struct.CCGVertIterator** %vi.addr, align 8, !dbg !9004
  %1 = bitcast %struct.CCGVertIterator* %0 to %struct._EHashIterator*, !dbg !9005
  %call = call i32 @_ehashIterator_isStopped(%struct._EHashIterator* %1), !dbg !9006
  ret i32 %call, !dbg !9007
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @_ehashIterator_isStopped(%struct._EHashIterator* %ehi) #0 !dbg !9008 {
entry:
  %ehi.addr = alloca %struct._EHashIterator*, align 8
  store %struct._EHashIterator* %ehi, %struct._EHashIterator** %ehi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._EHashIterator** %ehi.addr, metadata !9011, metadata !DIExpression()), !dbg !9012
  %0 = load %struct._EHashIterator*, %struct._EHashIterator** %ehi.addr, align 8, !dbg !9013
  %curEntry = getelementptr inbounds %struct._EHashIterator, %struct._EHashIterator* %0, i32 0, i32 2, !dbg !9014
  %1 = load %struct._EHEntry*, %struct._EHEntry** %curEntry, align 8, !dbg !9014
  %tobool = icmp ne %struct._EHEntry* %1, null, !dbg !9015
  %lnot = xor i1 %tobool, true, !dbg !9015
  %lnot.ext = zext i1 %lnot to i32, !dbg !9015
  ret i32 %lnot.ext, !dbg !9016
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @ccgVertIterator_next(%struct.CCGVertIterator* %vi) #0 !dbg !9017 {
entry:
  %vi.addr = alloca %struct.CCGVertIterator*, align 8
  store %struct.CCGVertIterator* %vi, %struct.CCGVertIterator** %vi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGVertIterator** %vi.addr, metadata !9020, metadata !DIExpression()), !dbg !9021
  %0 = load %struct.CCGVertIterator*, %struct.CCGVertIterator** %vi.addr, align 8, !dbg !9022
  %1 = bitcast %struct.CCGVertIterator* %0 to %struct._EHashIterator*, !dbg !9023
  call void @_ehashIterator_next(%struct._EHashIterator* %1), !dbg !9024
  ret void, !dbg !9025
}

; Function Attrs: noinline nounwind uwtable
define internal void @_ehashIterator_next(%struct._EHashIterator* %ehi) #0 !dbg !9026 {
entry:
  %ehi.addr = alloca %struct._EHashIterator*, align 8
  store %struct._EHashIterator* %ehi, %struct._EHashIterator** %ehi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._EHashIterator** %ehi.addr, metadata !9029, metadata !DIExpression()), !dbg !9030
  %0 = load %struct._EHashIterator*, %struct._EHashIterator** %ehi.addr, align 8, !dbg !9031
  %curEntry = getelementptr inbounds %struct._EHashIterator, %struct._EHashIterator* %0, i32 0, i32 2, !dbg !9033
  %1 = load %struct._EHEntry*, %struct._EHEntry** %curEntry, align 8, !dbg !9033
  %tobool = icmp ne %struct._EHEntry* %1, null, !dbg !9031
  br i1 %tobool, label %if.then, label %if.end10, !dbg !9034

if.then:                                          ; preds = %entry
  %2 = load %struct._EHashIterator*, %struct._EHashIterator** %ehi.addr, align 8, !dbg !9035
  %curEntry1 = getelementptr inbounds %struct._EHashIterator, %struct._EHashIterator* %2, i32 0, i32 2, !dbg !9037
  %3 = load %struct._EHEntry*, %struct._EHEntry** %curEntry1, align 8, !dbg !9037
  %next = getelementptr inbounds %struct._EHEntry, %struct._EHEntry* %3, i32 0, i32 0, !dbg !9038
  %4 = load %struct._EHEntry*, %struct._EHEntry** %next, align 8, !dbg !9038
  %5 = load %struct._EHashIterator*, %struct._EHashIterator** %ehi.addr, align 8, !dbg !9039
  %curEntry2 = getelementptr inbounds %struct._EHashIterator, %struct._EHashIterator* %5, i32 0, i32 2, !dbg !9040
  store %struct._EHEntry* %4, %struct._EHEntry** %curEntry2, align 8, !dbg !9041
  br label %while.cond, !dbg !9042

while.cond:                                       ; preds = %if.end, %if.then
  %6 = load %struct._EHashIterator*, %struct._EHashIterator** %ehi.addr, align 8, !dbg !9043
  %curEntry3 = getelementptr inbounds %struct._EHashIterator, %struct._EHashIterator* %6, i32 0, i32 2, !dbg !9044
  %7 = load %struct._EHEntry*, %struct._EHEntry** %curEntry3, align 8, !dbg !9044
  %tobool4 = icmp ne %struct._EHEntry* %7, null, !dbg !9045
  %lnot = xor i1 %tobool4, true, !dbg !9045
  br i1 %lnot, label %while.body, label %while.end, !dbg !9042

while.body:                                       ; preds = %while.cond
  %8 = load %struct._EHashIterator*, %struct._EHashIterator** %ehi.addr, align 8, !dbg !9046
  %curBucket = getelementptr inbounds %struct._EHashIterator, %struct._EHashIterator* %8, i32 0, i32 1, !dbg !9048
  %9 = load i32, i32* %curBucket, align 8, !dbg !9049
  %inc = add nsw i32 %9, 1, !dbg !9049
  store i32 %inc, i32* %curBucket, align 8, !dbg !9049
  %10 = load %struct._EHashIterator*, %struct._EHashIterator** %ehi.addr, align 8, !dbg !9050
  %curBucket5 = getelementptr inbounds %struct._EHashIterator, %struct._EHashIterator* %10, i32 0, i32 1, !dbg !9052
  %11 = load i32, i32* %curBucket5, align 8, !dbg !9052
  %12 = load %struct._EHashIterator*, %struct._EHashIterator** %ehi.addr, align 8, !dbg !9053
  %eh = getelementptr inbounds %struct._EHashIterator, %struct._EHashIterator* %12, i32 0, i32 0, !dbg !9054
  %13 = load %struct._EHash*, %struct._EHash** %eh, align 8, !dbg !9054
  %curSize = getelementptr inbounds %struct._EHash, %struct._EHash* %13, i32 0, i32 2, !dbg !9055
  %14 = load i32, i32* %curSize, align 4, !dbg !9055
  %cmp = icmp eq i32 %11, %14, !dbg !9056
  br i1 %cmp, label %if.then6, label %if.end, !dbg !9057

if.then6:                                         ; preds = %while.body
  br label %while.end, !dbg !9058

if.end:                                           ; preds = %while.body
  %15 = load %struct._EHashIterator*, %struct._EHashIterator** %ehi.addr, align 8, !dbg !9059
  %eh7 = getelementptr inbounds %struct._EHashIterator, %struct._EHashIterator* %15, i32 0, i32 0, !dbg !9060
  %16 = load %struct._EHash*, %struct._EHash** %eh7, align 8, !dbg !9060
  %buckets = getelementptr inbounds %struct._EHash, %struct._EHash* %16, i32 0, i32 0, !dbg !9061
  %17 = load %struct._EHEntry**, %struct._EHEntry*** %buckets, align 8, !dbg !9061
  %18 = load %struct._EHashIterator*, %struct._EHashIterator** %ehi.addr, align 8, !dbg !9062
  %curBucket8 = getelementptr inbounds %struct._EHashIterator, %struct._EHashIterator* %18, i32 0, i32 1, !dbg !9063
  %19 = load i32, i32* %curBucket8, align 8, !dbg !9063
  %idxprom = sext i32 %19 to i64, !dbg !9059
  %arrayidx = getelementptr inbounds %struct._EHEntry*, %struct._EHEntry** %17, i64 %idxprom, !dbg !9059
  %20 = load %struct._EHEntry*, %struct._EHEntry** %arrayidx, align 8, !dbg !9059
  %21 = load %struct._EHashIterator*, %struct._EHashIterator** %ehi.addr, align 8, !dbg !9064
  %curEntry9 = getelementptr inbounds %struct._EHashIterator, %struct._EHashIterator* %21, i32 0, i32 2, !dbg !9065
  store %struct._EHEntry* %20, %struct._EHEntry** %curEntry9, align 8, !dbg !9066
  br label %while.cond, !dbg !9042, !llvm.loop !9067

while.end:                                        ; preds = %if.then6, %while.cond
  br label %if.end10, !dbg !9069

if.end10:                                         ; preds = %while.end, %entry
  ret void, !dbg !9070
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @ccgVertIterator_free(%struct.CCGVertIterator* %vi) #0 !dbg !9071 {
entry:
  %vi.addr = alloca %struct.CCGVertIterator*, align 8
  store %struct.CCGVertIterator* %vi, %struct.CCGVertIterator** %vi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGVertIterator** %vi.addr, metadata !9072, metadata !DIExpression()), !dbg !9073
  %0 = load %struct.CCGVertIterator*, %struct.CCGVertIterator** %vi.addr, align 8, !dbg !9074
  %1 = bitcast %struct.CCGVertIterator* %0 to %struct._EHashIterator*, !dbg !9075
  call void @_ehashIterator_free(%struct._EHashIterator* %1), !dbg !9076
  ret void, !dbg !9077
}

; Function Attrs: noinline nounwind uwtable
define internal void @_ehashIterator_free(%struct._EHashIterator* %ehi) #0 !dbg !9078 {
entry:
  %ehi.addr = alloca %struct._EHashIterator*, align 8
  store %struct._EHashIterator* %ehi, %struct._EHashIterator** %ehi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._EHashIterator** %ehi.addr, metadata !9079, metadata !DIExpression()), !dbg !9080
  %0 = load %struct._EHashIterator*, %struct._EHashIterator** %ehi.addr, align 8, !dbg !9081
  %eh = getelementptr inbounds %struct._EHashIterator, %struct._EHashIterator* %0, i32 0, i32 0, !dbg !9081
  %1 = load %struct._EHash*, %struct._EHash** %eh, align 8, !dbg !9081
  %allocatorIFC = getelementptr inbounds %struct._EHash, %struct._EHash* %1, i32 0, i32 4, !dbg !9081
  %free = getelementptr inbounds %struct.CCGAllocatorIFC, %struct.CCGAllocatorIFC* %allocatorIFC, i32 0, i32 2, !dbg !9081
  %2 = load void (i8*, i8*)*, void (i8*, i8*)** %free, align 8, !dbg !9081
  %3 = load %struct._EHashIterator*, %struct._EHashIterator** %ehi.addr, align 8, !dbg !9081
  %eh1 = getelementptr inbounds %struct._EHashIterator, %struct._EHashIterator* %3, i32 0, i32 0, !dbg !9081
  %4 = load %struct._EHash*, %struct._EHash** %eh1, align 8, !dbg !9081
  %allocator = getelementptr inbounds %struct._EHash, %struct._EHash* %4, i32 0, i32 5, !dbg !9081
  %5 = load i8*, i8** %allocator, align 8, !dbg !9081
  %6 = load %struct._EHashIterator*, %struct._EHashIterator** %ehi.addr, align 8, !dbg !9081
  %7 = bitcast %struct._EHashIterator* %6 to i8*, !dbg !9081
  call void %2(i8* %5, i8* %7), !dbg !9081
  ret void, !dbg !9082
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.CCGEdge* @ccgEdgeIterator_getCurrent(%struct.CCGEdgeIterator* %vi) #0 !dbg !9083 {
entry:
  %vi.addr = alloca %struct.CCGEdgeIterator*, align 8
  store %struct.CCGEdgeIterator* %vi, %struct.CCGEdgeIterator** %vi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGEdgeIterator** %vi.addr, metadata !9086, metadata !DIExpression()), !dbg !9087
  %0 = load %struct.CCGEdgeIterator*, %struct.CCGEdgeIterator** %vi.addr, align 8, !dbg !9088
  %1 = bitcast %struct.CCGEdgeIterator* %0 to %struct._EHashIterator*, !dbg !9089
  %call = call i8* @_ehashIterator_getCurrent(%struct._EHashIterator* %1), !dbg !9090
  %2 = bitcast i8* %call to %struct.CCGEdge*, !dbg !9091
  ret %struct.CCGEdge* %2, !dbg !9092
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @ccgEdgeIterator_isStopped(%struct.CCGEdgeIterator* %vi) #0 !dbg !9093 {
entry:
  %vi.addr = alloca %struct.CCGEdgeIterator*, align 8
  store %struct.CCGEdgeIterator* %vi, %struct.CCGEdgeIterator** %vi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGEdgeIterator** %vi.addr, metadata !9096, metadata !DIExpression()), !dbg !9097
  %0 = load %struct.CCGEdgeIterator*, %struct.CCGEdgeIterator** %vi.addr, align 8, !dbg !9098
  %1 = bitcast %struct.CCGEdgeIterator* %0 to %struct._EHashIterator*, !dbg !9099
  %call = call i32 @_ehashIterator_isStopped(%struct._EHashIterator* %1), !dbg !9100
  ret i32 %call, !dbg !9101
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @ccgEdgeIterator_next(%struct.CCGEdgeIterator* %vi) #0 !dbg !9102 {
entry:
  %vi.addr = alloca %struct.CCGEdgeIterator*, align 8
  store %struct.CCGEdgeIterator* %vi, %struct.CCGEdgeIterator** %vi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGEdgeIterator** %vi.addr, metadata !9105, metadata !DIExpression()), !dbg !9106
  %0 = load %struct.CCGEdgeIterator*, %struct.CCGEdgeIterator** %vi.addr, align 8, !dbg !9107
  %1 = bitcast %struct.CCGEdgeIterator* %0 to %struct._EHashIterator*, !dbg !9108
  call void @_ehashIterator_next(%struct._EHashIterator* %1), !dbg !9109
  ret void, !dbg !9110
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @ccgEdgeIterator_free(%struct.CCGEdgeIterator* %vi) #0 !dbg !9111 {
entry:
  %vi.addr = alloca %struct.CCGEdgeIterator*, align 8
  store %struct.CCGEdgeIterator* %vi, %struct.CCGEdgeIterator** %vi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGEdgeIterator** %vi.addr, metadata !9112, metadata !DIExpression()), !dbg !9113
  %0 = load %struct.CCGEdgeIterator*, %struct.CCGEdgeIterator** %vi.addr, align 8, !dbg !9114
  %1 = bitcast %struct.CCGEdgeIterator* %0 to %struct._EHashIterator*, !dbg !9115
  call void @_ehashIterator_free(%struct._EHashIterator* %1), !dbg !9116
  ret void, !dbg !9117
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.CCGFace* @ccgFaceIterator_getCurrent(%struct.CCGFaceIterator* %vi) #0 !dbg !9118 {
entry:
  %vi.addr = alloca %struct.CCGFaceIterator*, align 8
  store %struct.CCGFaceIterator* %vi, %struct.CCGFaceIterator** %vi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGFaceIterator** %vi.addr, metadata !9121, metadata !DIExpression()), !dbg !9122
  %0 = load %struct.CCGFaceIterator*, %struct.CCGFaceIterator** %vi.addr, align 8, !dbg !9123
  %1 = bitcast %struct.CCGFaceIterator* %0 to %struct._EHashIterator*, !dbg !9124
  %call = call i8* @_ehashIterator_getCurrent(%struct._EHashIterator* %1), !dbg !9125
  %2 = bitcast i8* %call to %struct.CCGFace*, !dbg !9126
  ret %struct.CCGFace* %2, !dbg !9127
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @ccgFaceIterator_isStopped(%struct.CCGFaceIterator* %vi) #0 !dbg !9128 {
entry:
  %vi.addr = alloca %struct.CCGFaceIterator*, align 8
  store %struct.CCGFaceIterator* %vi, %struct.CCGFaceIterator** %vi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGFaceIterator** %vi.addr, metadata !9131, metadata !DIExpression()), !dbg !9132
  %0 = load %struct.CCGFaceIterator*, %struct.CCGFaceIterator** %vi.addr, align 8, !dbg !9133
  %1 = bitcast %struct.CCGFaceIterator* %0 to %struct._EHashIterator*, !dbg !9134
  %call = call i32 @_ehashIterator_isStopped(%struct._EHashIterator* %1), !dbg !9135
  ret i32 %call, !dbg !9136
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @ccgFaceIterator_next(%struct.CCGFaceIterator* %vi) #0 !dbg !9137 {
entry:
  %vi.addr = alloca %struct.CCGFaceIterator*, align 8
  store %struct.CCGFaceIterator* %vi, %struct.CCGFaceIterator** %vi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGFaceIterator** %vi.addr, metadata !9140, metadata !DIExpression()), !dbg !9141
  %0 = load %struct.CCGFaceIterator*, %struct.CCGFaceIterator** %vi.addr, align 8, !dbg !9142
  %1 = bitcast %struct.CCGFaceIterator* %0 to %struct._EHashIterator*, !dbg !9143
  call void @_ehashIterator_next(%struct._EHashIterator* %1), !dbg !9144
  ret void, !dbg !9145
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @ccgFaceIterator_free(%struct.CCGFaceIterator* %vi) #0 !dbg !9146 {
entry:
  %vi.addr = alloca %struct.CCGFaceIterator*, align 8
  store %struct.CCGFaceIterator* %vi, %struct.CCGFaceIterator** %vi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGFaceIterator** %vi.addr, metadata !9147, metadata !DIExpression()), !dbg !9148
  %0 = load %struct.CCGFaceIterator*, %struct.CCGFaceIterator** %vi.addr, align 8, !dbg !9149
  %1 = bitcast %struct.CCGFaceIterator* %0 to %struct._EHashIterator*, !dbg !9150
  call void @_ehashIterator_free(%struct._EHashIterator* %1), !dbg !9151
  ret void, !dbg !9152
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @ccgSubSurf_getNumFinalVerts(%struct.CCGSubSurf* %ss) #0 !dbg !9153 {
entry:
  %ss.addr = alloca %struct.CCGSubSurf*, align 8
  %edgeSize = alloca i32, align 4
  %gridSize = alloca i32, align 4
  %numFinalVerts = alloca i32, align 4
  store %struct.CCGSubSurf* %ss, %struct.CCGSubSurf** %ss.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGSubSurf** %ss.addr, metadata !9154, metadata !DIExpression()), !dbg !9155
  call void @llvm.dbg.declare(metadata i32* %edgeSize, metadata !9156, metadata !DIExpression()), !dbg !9157
  %0 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !9158
  %subdivLevels = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %0, i32 0, i32 6, !dbg !9159
  %1 = load i32, i32* %subdivLevels, align 8, !dbg !9159
  %call = call i32 @ccg_edgesize(i32 %1), !dbg !9160
  store i32 %call, i32* %edgeSize, align 4, !dbg !9157
  call void @llvm.dbg.declare(metadata i32* %gridSize, metadata !9161, metadata !DIExpression()), !dbg !9162
  %2 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !9163
  %subdivLevels1 = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %2, i32 0, i32 6, !dbg !9164
  %3 = load i32, i32* %subdivLevels1, align 8, !dbg !9164
  %call2 = call i32 @ccg_gridsize(i32 %3), !dbg !9165
  store i32 %call2, i32* %gridSize, align 4, !dbg !9162
  call void @llvm.dbg.declare(metadata i32* %numFinalVerts, metadata !9166, metadata !DIExpression()), !dbg !9167
  %4 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !9168
  %vMap = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %4, i32 0, i32 0, !dbg !9169
  %5 = load %struct._EHash*, %struct._EHash** %vMap, align 8, !dbg !9169
  %numEntries = getelementptr inbounds %struct._EHash, %struct._EHash* %5, i32 0, i32 1, !dbg !9170
  %6 = load i32, i32* %numEntries, align 8, !dbg !9170
  %7 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !9171
  %eMap = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %7, i32 0, i32 1, !dbg !9172
  %8 = load %struct._EHash*, %struct._EHash** %eMap, align 8, !dbg !9172
  %numEntries3 = getelementptr inbounds %struct._EHash, %struct._EHash* %8, i32 0, i32 1, !dbg !9173
  %9 = load i32, i32* %numEntries3, align 8, !dbg !9173
  %10 = load i32, i32* %edgeSize, align 4, !dbg !9174
  %sub = sub nsw i32 %10, 2, !dbg !9175
  %mul = mul nsw i32 %9, %sub, !dbg !9176
  %add = add nsw i32 %6, %mul, !dbg !9177
  %11 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !9178
  %fMap = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %11, i32 0, i32 2, !dbg !9179
  %12 = load %struct._EHash*, %struct._EHash** %fMap, align 8, !dbg !9179
  %numEntries4 = getelementptr inbounds %struct._EHash, %struct._EHash* %12, i32 0, i32 1, !dbg !9180
  %13 = load i32, i32* %numEntries4, align 8, !dbg !9180
  %add5 = add nsw i32 %add, %13, !dbg !9181
  %14 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !9182
  %numGrids = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %14, i32 0, i32 7, !dbg !9183
  %15 = load i32, i32* %numGrids, align 4, !dbg !9183
  %16 = load i32, i32* %gridSize, align 4, !dbg !9184
  %sub6 = sub nsw i32 %16, 2, !dbg !9185
  %17 = load i32, i32* %gridSize, align 4, !dbg !9186
  %sub7 = sub nsw i32 %17, 2, !dbg !9187
  %18 = load i32, i32* %gridSize, align 4, !dbg !9188
  %sub8 = sub nsw i32 %18, 2, !dbg !9189
  %mul9 = mul nsw i32 %sub7, %sub8, !dbg !9190
  %add10 = add nsw i32 %sub6, %mul9, !dbg !9191
  %mul11 = mul nsw i32 %15, %add10, !dbg !9192
  %add12 = add nsw i32 %add5, %mul11, !dbg !9193
  store i32 %add12, i32* %numFinalVerts, align 4, !dbg !9167
  %19 = load i32, i32* %numFinalVerts, align 4, !dbg !9194
  ret i32 %19, !dbg !9195
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @ccgSubSurf_getNumFinalEdges(%struct.CCGSubSurf* %ss) #0 !dbg !9196 {
entry:
  %ss.addr = alloca %struct.CCGSubSurf*, align 8
  %edgeSize = alloca i32, align 4
  %gridSize = alloca i32, align 4
  %numFinalEdges = alloca i32, align 4
  store %struct.CCGSubSurf* %ss, %struct.CCGSubSurf** %ss.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGSubSurf** %ss.addr, metadata !9197, metadata !DIExpression()), !dbg !9198
  call void @llvm.dbg.declare(metadata i32* %edgeSize, metadata !9199, metadata !DIExpression()), !dbg !9200
  %0 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !9201
  %subdivLevels = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %0, i32 0, i32 6, !dbg !9202
  %1 = load i32, i32* %subdivLevels, align 8, !dbg !9202
  %call = call i32 @ccg_edgesize(i32 %1), !dbg !9203
  store i32 %call, i32* %edgeSize, align 4, !dbg !9200
  call void @llvm.dbg.declare(metadata i32* %gridSize, metadata !9204, metadata !DIExpression()), !dbg !9205
  %2 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !9206
  %subdivLevels1 = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %2, i32 0, i32 6, !dbg !9207
  %3 = load i32, i32* %subdivLevels1, align 8, !dbg !9207
  %call2 = call i32 @ccg_gridsize(i32 %3), !dbg !9208
  store i32 %call2, i32* %gridSize, align 4, !dbg !9205
  call void @llvm.dbg.declare(metadata i32* %numFinalEdges, metadata !9209, metadata !DIExpression()), !dbg !9210
  %4 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !9211
  %eMap = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %4, i32 0, i32 1, !dbg !9212
  %5 = load %struct._EHash*, %struct._EHash** %eMap, align 8, !dbg !9212
  %numEntries = getelementptr inbounds %struct._EHash, %struct._EHash* %5, i32 0, i32 1, !dbg !9213
  %6 = load i32, i32* %numEntries, align 8, !dbg !9213
  %7 = load i32, i32* %edgeSize, align 4, !dbg !9214
  %sub = sub nsw i32 %7, 1, !dbg !9215
  %mul = mul nsw i32 %6, %sub, !dbg !9216
  %8 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !9217
  %numGrids = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %8, i32 0, i32 7, !dbg !9218
  %9 = load i32, i32* %numGrids, align 4, !dbg !9218
  %10 = load i32, i32* %gridSize, align 4, !dbg !9219
  %sub3 = sub nsw i32 %10, 1, !dbg !9220
  %11 = load i32, i32* %gridSize, align 4, !dbg !9221
  %sub4 = sub nsw i32 %11, 2, !dbg !9222
  %12 = load i32, i32* %gridSize, align 4, !dbg !9223
  %sub5 = sub nsw i32 %12, 1, !dbg !9224
  %mul6 = mul nsw i32 %sub4, %sub5, !dbg !9225
  %mul7 = mul nsw i32 2, %mul6, !dbg !9226
  %add = add nsw i32 %sub3, %mul7, !dbg !9227
  %mul8 = mul nsw i32 %9, %add, !dbg !9228
  %add9 = add nsw i32 %mul, %mul8, !dbg !9229
  store i32 %add9, i32* %numFinalEdges, align 4, !dbg !9210
  %13 = load i32, i32* %numFinalEdges, align 4, !dbg !9230
  ret i32 %13, !dbg !9231
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @ccgSubSurf_getNumFinalFaces(%struct.CCGSubSurf* %ss) #0 !dbg !9232 {
entry:
  %ss.addr = alloca %struct.CCGSubSurf*, align 8
  %gridSize = alloca i32, align 4
  %numFinalFaces = alloca i32, align 4
  store %struct.CCGSubSurf* %ss, %struct.CCGSubSurf** %ss.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGSubSurf** %ss.addr, metadata !9233, metadata !DIExpression()), !dbg !9234
  call void @llvm.dbg.declare(metadata i32* %gridSize, metadata !9235, metadata !DIExpression()), !dbg !9236
  %0 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !9237
  %subdivLevels = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %0, i32 0, i32 6, !dbg !9238
  %1 = load i32, i32* %subdivLevels, align 8, !dbg !9238
  %call = call i32 @ccg_gridsize(i32 %1), !dbg !9239
  store i32 %call, i32* %gridSize, align 4, !dbg !9236
  call void @llvm.dbg.declare(metadata i32* %numFinalFaces, metadata !9240, metadata !DIExpression()), !dbg !9241
  %2 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !9242
  %numGrids = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %2, i32 0, i32 7, !dbg !9243
  %3 = load i32, i32* %numGrids, align 4, !dbg !9243
  %4 = load i32, i32* %gridSize, align 4, !dbg !9244
  %sub = sub nsw i32 %4, 1, !dbg !9245
  %5 = load i32, i32* %gridSize, align 4, !dbg !9246
  %sub1 = sub nsw i32 %5, 1, !dbg !9247
  %mul = mul nsw i32 %sub, %sub1, !dbg !9248
  %mul2 = mul nsw i32 %3, %mul, !dbg !9249
  store i32 %mul2, i32* %numFinalFaces, align 4, !dbg !9241
  %6 = load i32, i32* %numFinalFaces, align 4, !dbg !9250
  ret i32 %6, !dbg !9251
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @CCG_key(%struct.CCGKey* %key, %struct.CCGSubSurf* %ss, i32 %level) #0 !dbg !9252 {
entry:
  %key.addr = alloca %struct.CCGKey*, align 8
  %ss.addr = alloca %struct.CCGSubSurf*, align 8
  %level.addr = alloca i32, align 4
  store %struct.CCGKey* %key, %struct.CCGKey** %key.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGKey** %key.addr, metadata !9270, metadata !DIExpression()), !dbg !9271
  store %struct.CCGSubSurf* %ss, %struct.CCGSubSurf** %ss.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGSubSurf** %ss.addr, metadata !9272, metadata !DIExpression()), !dbg !9273
  store i32 %level, i32* %level.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %level.addr, metadata !9274, metadata !DIExpression()), !dbg !9275
  %0 = load i32, i32* %level.addr, align 4, !dbg !9276
  %1 = load %struct.CCGKey*, %struct.CCGKey** %key.addr, align 8, !dbg !9277
  %level1 = getelementptr inbounds %struct.CCGKey, %struct.CCGKey* %1, i32 0, i32 0, !dbg !9278
  store i32 %0, i32* %level1, align 4, !dbg !9279
  %2 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !9280
  %meshIFC = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %2, i32 0, i32 3, !dbg !9281
  %vertDataSize = getelementptr inbounds %struct.CCGMeshIFC, %struct.CCGMeshIFC* %meshIFC, i32 0, i32 4, !dbg !9282
  %3 = load i32, i32* %vertDataSize, align 8, !dbg !9282
  %4 = load %struct.CCGKey*, %struct.CCGKey** %key.addr, align 8, !dbg !9283
  %elem_size = getelementptr inbounds %struct.CCGKey, %struct.CCGKey* %4, i32 0, i32 1, !dbg !9284
  store i32 %3, i32* %elem_size, align 4, !dbg !9285
  %5 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !9286
  %calcVertNormals = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %5, i32 0, i32 13, !dbg !9287
  %6 = load i32, i32* %calcVertNormals, align 8, !dbg !9287
  %7 = load %struct.CCGKey*, %struct.CCGKey** %key.addr, align 8, !dbg !9288
  %has_normals = getelementptr inbounds %struct.CCGKey, %struct.CCGKey* %7, i32 0, i32 8, !dbg !9289
  store i32 %6, i32* %has_normals, align 4, !dbg !9290
  %8 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !9291
  %meshIFC2 = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %8, i32 0, i32 3, !dbg !9292
  %numLayers = getelementptr inbounds %struct.CCGMeshIFC, %struct.CCGMeshIFC* %meshIFC2, i32 0, i32 3, !dbg !9293
  %9 = load i32, i32* %numLayers, align 4, !dbg !9293
  %10 = load %struct.CCGKey*, %struct.CCGKey** %key.addr, align 8, !dbg !9294
  %num_layers = getelementptr inbounds %struct.CCGKey, %struct.CCGKey* %10, i32 0, i32 7, !dbg !9295
  store i32 %9, i32* %num_layers, align 4, !dbg !9296
  %11 = load %struct.CCGKey*, %struct.CCGKey** %key.addr, align 8, !dbg !9297
  %has_normals3 = getelementptr inbounds %struct.CCGKey, %struct.CCGKey* %11, i32 0, i32 8, !dbg !9299
  %12 = load i32, i32* %has_normals3, align 4, !dbg !9299
  %tobool = icmp ne i32 %12, 0, !dbg !9297
  br i1 %tobool, label %if.then, label %if.else, !dbg !9300

if.then:                                          ; preds = %entry
  %13 = load %struct.CCGKey*, %struct.CCGKey** %key.addr, align 8, !dbg !9301
  %elem_size4 = getelementptr inbounds %struct.CCGKey, %struct.CCGKey* %13, i32 0, i32 1, !dbg !9302
  %14 = load i32, i32* %elem_size4, align 4, !dbg !9302
  %conv = sext i32 %14 to i64, !dbg !9301
  %sub = sub i64 %conv, 12, !dbg !9303
  %conv5 = trunc i64 %sub to i32, !dbg !9301
  %15 = load %struct.CCGKey*, %struct.CCGKey** %key.addr, align 8, !dbg !9304
  %normal_offset = getelementptr inbounds %struct.CCGKey, %struct.CCGKey* %15, i32 0, i32 5, !dbg !9305
  store i32 %conv5, i32* %normal_offset, align 4, !dbg !9306
  br label %if.end, !dbg !9304

if.else:                                          ; preds = %entry
  %16 = load %struct.CCGKey*, %struct.CCGKey** %key.addr, align 8, !dbg !9307
  %normal_offset6 = getelementptr inbounds %struct.CCGKey, %struct.CCGKey* %16, i32 0, i32 5, !dbg !9308
  store i32 -1, i32* %normal_offset6, align 4, !dbg !9309
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %17 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !9310
  %18 = load i32, i32* %level.addr, align 4, !dbg !9311
  %call = call i32 @ccgSubSurf_getGridLevelSize(%struct.CCGSubSurf* %17, i32 %18), !dbg !9312
  %19 = load %struct.CCGKey*, %struct.CCGKey** %key.addr, align 8, !dbg !9313
  %grid_size = getelementptr inbounds %struct.CCGKey, %struct.CCGKey* %19, i32 0, i32 2, !dbg !9314
  store i32 %call, i32* %grid_size, align 4, !dbg !9315
  %20 = load %struct.CCGKey*, %struct.CCGKey** %key.addr, align 8, !dbg !9316
  %grid_size7 = getelementptr inbounds %struct.CCGKey, %struct.CCGKey* %20, i32 0, i32 2, !dbg !9317
  %21 = load i32, i32* %grid_size7, align 4, !dbg !9317
  %22 = load %struct.CCGKey*, %struct.CCGKey** %key.addr, align 8, !dbg !9318
  %grid_size8 = getelementptr inbounds %struct.CCGKey, %struct.CCGKey* %22, i32 0, i32 2, !dbg !9319
  %23 = load i32, i32* %grid_size8, align 4, !dbg !9319
  %mul = mul nsw i32 %21, %23, !dbg !9320
  %24 = load %struct.CCGKey*, %struct.CCGKey** %key.addr, align 8, !dbg !9321
  %grid_area = getelementptr inbounds %struct.CCGKey, %struct.CCGKey* %24, i32 0, i32 3, !dbg !9322
  store i32 %mul, i32* %grid_area, align 4, !dbg !9323
  %25 = load %struct.CCGKey*, %struct.CCGKey** %key.addr, align 8, !dbg !9324
  %elem_size9 = getelementptr inbounds %struct.CCGKey, %struct.CCGKey* %25, i32 0, i32 1, !dbg !9325
  %26 = load i32, i32* %elem_size9, align 4, !dbg !9325
  %27 = load %struct.CCGKey*, %struct.CCGKey** %key.addr, align 8, !dbg !9326
  %grid_area10 = getelementptr inbounds %struct.CCGKey, %struct.CCGKey* %27, i32 0, i32 3, !dbg !9327
  %28 = load i32, i32* %grid_area10, align 4, !dbg !9327
  %mul11 = mul nsw i32 %26, %28, !dbg !9328
  %29 = load %struct.CCGKey*, %struct.CCGKey** %key.addr, align 8, !dbg !9329
  %grid_bytes = getelementptr inbounds %struct.CCGKey, %struct.CCGKey* %29, i32 0, i32 4, !dbg !9330
  store i32 %mul11, i32* %grid_bytes, align 4, !dbg !9331
  %30 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !9332
  %allocMask = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %30, i32 0, i32 15, !dbg !9333
  %31 = load i32, i32* %allocMask, align 8, !dbg !9333
  %32 = load %struct.CCGKey*, %struct.CCGKey** %key.addr, align 8, !dbg !9334
  %has_mask = getelementptr inbounds %struct.CCGKey, %struct.CCGKey* %32, i32 0, i32 9, !dbg !9335
  store i32 %31, i32* %has_mask, align 4, !dbg !9336
  %33 = load %struct.CCGKey*, %struct.CCGKey** %key.addr, align 8, !dbg !9337
  %has_mask12 = getelementptr inbounds %struct.CCGKey, %struct.CCGKey* %33, i32 0, i32 9, !dbg !9339
  %34 = load i32, i32* %has_mask12, align 4, !dbg !9339
  %tobool13 = icmp ne i32 %34, 0, !dbg !9337
  br i1 %tobool13, label %if.then14, label %if.else15, !dbg !9340

if.then14:                                        ; preds = %if.end
  %35 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !9341
  %maskDataOffset = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %35, i32 0, i32 16, !dbg !9342
  %36 = load i32, i32* %maskDataOffset, align 4, !dbg !9342
  %37 = load %struct.CCGKey*, %struct.CCGKey** %key.addr, align 8, !dbg !9343
  %mask_offset = getelementptr inbounds %struct.CCGKey, %struct.CCGKey* %37, i32 0, i32 6, !dbg !9344
  store i32 %36, i32* %mask_offset, align 4, !dbg !9345
  br label %if.end17, !dbg !9343

if.else15:                                        ; preds = %if.end
  %38 = load %struct.CCGKey*, %struct.CCGKey** %key.addr, align 8, !dbg !9346
  %mask_offset16 = getelementptr inbounds %struct.CCGKey, %struct.CCGKey* %38, i32 0, i32 6, !dbg !9347
  store i32 -1, i32* %mask_offset16, align 4, !dbg !9348
  br label %if.end17

if.end17:                                         ; preds = %if.else15, %if.then14
  ret void, !dbg !9349
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @CCG_key_top_level(%struct.CCGKey* %key, %struct.CCGSubSurf* %ss) #0 !dbg !9350 {
entry:
  %key.addr = alloca %struct.CCGKey*, align 8
  %ss.addr = alloca %struct.CCGSubSurf*, align 8
  store %struct.CCGKey* %key, %struct.CCGKey** %key.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGKey** %key.addr, metadata !9353, metadata !DIExpression()), !dbg !9354
  store %struct.CCGSubSurf* %ss, %struct.CCGSubSurf** %ss.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGSubSurf** %ss.addr, metadata !9355, metadata !DIExpression()), !dbg !9356
  %0 = load %struct.CCGKey*, %struct.CCGKey** %key.addr, align 8, !dbg !9357
  %1 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !9358
  %2 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !9359
  %call = call i32 @ccgSubSurf_getSubdivisionLevels(%struct.CCGSubSurf* %2), !dbg !9360
  call void @CCG_key(%struct.CCGKey* %0, %struct.CCGSubSurf* %1, i32 %call), !dbg !9361
  ret void, !dbg !9362
}

; Function Attrs: noinline nounwind uwtable
define internal i8* @_stdAllocator_alloc(i8* %UNUSED_a, i32 %numBytes) #0 !dbg !9363 {
entry:
  %UNUSED_a.addr = alloca i8*, align 8
  %numBytes.addr = alloca i32, align 4
  store i8* %UNUSED_a, i8** %UNUSED_a.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %UNUSED_a.addr, metadata !9364, metadata !DIExpression()), !dbg !9365
  store i32 %numBytes, i32* %numBytes.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %numBytes.addr, metadata !9366, metadata !DIExpression()), !dbg !9367
  %0 = load i32, i32* %numBytes.addr, align 4, !dbg !9368
  %conv = sext i32 %0 to i64, !dbg !9368
  %call = call noalias i8* @malloc(i64 %conv) #6, !dbg !9369
  ret i8* %call, !dbg !9370
}

; Function Attrs: noinline nounwind uwtable
define internal i8* @_stdAllocator_realloc(i8* %UNUSED_a, i8* %ptr, i32 %newSize, i32 %UNUSED_oldSize) #0 !dbg !9371 {
entry:
  %UNUSED_a.addr = alloca i8*, align 8
  %ptr.addr = alloca i8*, align 8
  %newSize.addr = alloca i32, align 4
  %UNUSED_oldSize.addr = alloca i32, align 4
  store i8* %UNUSED_a, i8** %UNUSED_a.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %UNUSED_a.addr, metadata !9372, metadata !DIExpression()), !dbg !9373
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !9374, metadata !DIExpression()), !dbg !9375
  store i32 %newSize, i32* %newSize.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %newSize.addr, metadata !9376, metadata !DIExpression()), !dbg !9377
  store i32 %UNUSED_oldSize, i32* %UNUSED_oldSize.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %UNUSED_oldSize.addr, metadata !9378, metadata !DIExpression()), !dbg !9379
  %0 = load i8*, i8** %ptr.addr, align 8, !dbg !9380
  %1 = load i32, i32* %newSize.addr, align 4, !dbg !9381
  %conv = sext i32 %1 to i64, !dbg !9381
  %call = call i8* @realloc(i8* %0, i64 %conv) #6, !dbg !9382
  ret i8* %call, !dbg !9383
}

; Function Attrs: noinline nounwind uwtable
define internal void @_stdAllocator_free(i8* %UNUSED_a, i8* %ptr) #0 !dbg !9384 {
entry:
  %UNUSED_a.addr = alloca i8*, align 8
  %ptr.addr = alloca i8*, align 8
  store i8* %UNUSED_a, i8** %UNUSED_a.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %UNUSED_a.addr, metadata !9385, metadata !DIExpression()), !dbg !9386
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !9387, metadata !DIExpression()), !dbg !9388
  %0 = load i8*, i8** %ptr.addr, align 8, !dbg !9389
  call void @free(i8* %0) #6, !dbg !9390
  ret void, !dbg !9391
}

; Function Attrs: nounwind
declare dso_local noalias i8* @malloc(i64) #4

; Function Attrs: nounwind
declare dso_local i8* @realloc(i8*, i64) #4

; Function Attrs: nounwind
declare dso_local void @free(i8*) #4

; Function Attrs: noinline nounwind uwtable
define internal void @_vert_remEdge(%struct.CCGVert* %v, %struct.CCGEdge* %e) #0 !dbg !9392 {
entry:
  %v.addr = alloca %struct.CCGVert*, align 8
  %e.addr = alloca %struct.CCGEdge*, align 8
  %i = alloca i32, align 4
  store %struct.CCGVert* %v, %struct.CCGVert** %v.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGVert** %v.addr, metadata !9395, metadata !DIExpression()), !dbg !9396
  store %struct.CCGEdge* %e, %struct.CCGEdge** %e.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGEdge** %e.addr, metadata !9397, metadata !DIExpression()), !dbg !9398
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9399, metadata !DIExpression()), !dbg !9400
  store i32 0, i32* %i, align 4, !dbg !9401
  br label %for.cond, !dbg !9403

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !9404
  %1 = load %struct.CCGVert*, %struct.CCGVert** %v.addr, align 8, !dbg !9406
  %numEdges = getelementptr inbounds %struct.CCGVert, %struct.CCGVert* %1, i32 0, i32 2, !dbg !9407
  %2 = load i16, i16* %numEdges, align 8, !dbg !9407
  %conv = sext i16 %2 to i32, !dbg !9406
  %cmp = icmp slt i32 %0, %conv, !dbg !9408
  br i1 %cmp, label %for.body, label %for.end, !dbg !9409

for.body:                                         ; preds = %for.cond
  %3 = load %struct.CCGVert*, %struct.CCGVert** %v.addr, align 8, !dbg !9410
  %edges = getelementptr inbounds %struct.CCGVert, %struct.CCGVert* %3, i32 0, i32 6, !dbg !9413
  %4 = load %struct.CCGEdge**, %struct.CCGEdge*** %edges, align 8, !dbg !9413
  %5 = load i32, i32* %i, align 4, !dbg !9414
  %idxprom = sext i32 %5 to i64, !dbg !9410
  %arrayidx = getelementptr inbounds %struct.CCGEdge*, %struct.CCGEdge** %4, i64 %idxprom, !dbg !9410
  %6 = load %struct.CCGEdge*, %struct.CCGEdge** %arrayidx, align 8, !dbg !9410
  %7 = load %struct.CCGEdge*, %struct.CCGEdge** %e.addr, align 8, !dbg !9415
  %cmp2 = icmp eq %struct.CCGEdge* %6, %7, !dbg !9416
  br i1 %cmp2, label %if.then, label %if.end, !dbg !9417

if.then:                                          ; preds = %for.body
  %8 = load %struct.CCGVert*, %struct.CCGVert** %v.addr, align 8, !dbg !9418
  %edges4 = getelementptr inbounds %struct.CCGVert, %struct.CCGVert* %8, i32 0, i32 6, !dbg !9420
  %9 = load %struct.CCGEdge**, %struct.CCGEdge*** %edges4, align 8, !dbg !9420
  %10 = load %struct.CCGVert*, %struct.CCGVert** %v.addr, align 8, !dbg !9421
  %numEdges5 = getelementptr inbounds %struct.CCGVert, %struct.CCGVert* %10, i32 0, i32 2, !dbg !9422
  %11 = load i16, i16* %numEdges5, align 8, !dbg !9423
  %dec = add i16 %11, -1, !dbg !9423
  store i16 %dec, i16* %numEdges5, align 8, !dbg !9423
  %idxprom6 = sext i16 %dec to i64, !dbg !9418
  %arrayidx7 = getelementptr inbounds %struct.CCGEdge*, %struct.CCGEdge** %9, i64 %idxprom6, !dbg !9418
  %12 = load %struct.CCGEdge*, %struct.CCGEdge** %arrayidx7, align 8, !dbg !9418
  %13 = load %struct.CCGVert*, %struct.CCGVert** %v.addr, align 8, !dbg !9424
  %edges8 = getelementptr inbounds %struct.CCGVert, %struct.CCGVert* %13, i32 0, i32 6, !dbg !9425
  %14 = load %struct.CCGEdge**, %struct.CCGEdge*** %edges8, align 8, !dbg !9425
  %15 = load i32, i32* %i, align 4, !dbg !9426
  %idxprom9 = sext i32 %15 to i64, !dbg !9424
  %arrayidx10 = getelementptr inbounds %struct.CCGEdge*, %struct.CCGEdge** %14, i64 %idxprom9, !dbg !9424
  store %struct.CCGEdge* %12, %struct.CCGEdge** %arrayidx10, align 8, !dbg !9427
  br label %for.end, !dbg !9428

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !9429

for.inc:                                          ; preds = %if.end
  %16 = load i32, i32* %i, align 4, !dbg !9430
  %inc = add nsw i32 %16, 1, !dbg !9430
  store i32 %inc, i32* %i, align 4, !dbg !9430
  br label %for.cond, !dbg !9431, !llvm.loop !9432

for.end:                                          ; preds = %if.then, %for.cond
  ret void, !dbg !9434
}

; Function Attrs: noinline nounwind uwtable
define internal void @_vert_remFace(%struct.CCGVert* %v, %struct.CCGFace* %f) #0 !dbg !9435 {
entry:
  %v.addr = alloca %struct.CCGVert*, align 8
  %f.addr = alloca %struct.CCGFace*, align 8
  %i = alloca i32, align 4
  store %struct.CCGVert* %v, %struct.CCGVert** %v.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGVert** %v.addr, metadata !9438, metadata !DIExpression()), !dbg !9439
  store %struct.CCGFace* %f, %struct.CCGFace** %f.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGFace** %f.addr, metadata !9440, metadata !DIExpression()), !dbg !9441
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9442, metadata !DIExpression()), !dbg !9443
  store i32 0, i32* %i, align 4, !dbg !9444
  br label %for.cond, !dbg !9446

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !9447
  %1 = load %struct.CCGVert*, %struct.CCGVert** %v.addr, align 8, !dbg !9449
  %numFaces = getelementptr inbounds %struct.CCGVert, %struct.CCGVert* %1, i32 0, i32 3, !dbg !9450
  %2 = load i16, i16* %numFaces, align 2, !dbg !9450
  %conv = sext i16 %2 to i32, !dbg !9449
  %cmp = icmp slt i32 %0, %conv, !dbg !9451
  br i1 %cmp, label %for.body, label %for.end, !dbg !9452

for.body:                                         ; preds = %for.cond
  %3 = load %struct.CCGVert*, %struct.CCGVert** %v.addr, align 8, !dbg !9453
  %faces = getelementptr inbounds %struct.CCGVert, %struct.CCGVert* %3, i32 0, i32 7, !dbg !9456
  %4 = load %struct.CCGFace**, %struct.CCGFace*** %faces, align 8, !dbg !9456
  %5 = load i32, i32* %i, align 4, !dbg !9457
  %idxprom = sext i32 %5 to i64, !dbg !9453
  %arrayidx = getelementptr inbounds %struct.CCGFace*, %struct.CCGFace** %4, i64 %idxprom, !dbg !9453
  %6 = load %struct.CCGFace*, %struct.CCGFace** %arrayidx, align 8, !dbg !9453
  %7 = load %struct.CCGFace*, %struct.CCGFace** %f.addr, align 8, !dbg !9458
  %cmp2 = icmp eq %struct.CCGFace* %6, %7, !dbg !9459
  br i1 %cmp2, label %if.then, label %if.end, !dbg !9460

if.then:                                          ; preds = %for.body
  %8 = load %struct.CCGVert*, %struct.CCGVert** %v.addr, align 8, !dbg !9461
  %faces4 = getelementptr inbounds %struct.CCGVert, %struct.CCGVert* %8, i32 0, i32 7, !dbg !9463
  %9 = load %struct.CCGFace**, %struct.CCGFace*** %faces4, align 8, !dbg !9463
  %10 = load %struct.CCGVert*, %struct.CCGVert** %v.addr, align 8, !dbg !9464
  %numFaces5 = getelementptr inbounds %struct.CCGVert, %struct.CCGVert* %10, i32 0, i32 3, !dbg !9465
  %11 = load i16, i16* %numFaces5, align 2, !dbg !9466
  %dec = add i16 %11, -1, !dbg !9466
  store i16 %dec, i16* %numFaces5, align 2, !dbg !9466
  %idxprom6 = sext i16 %dec to i64, !dbg !9461
  %arrayidx7 = getelementptr inbounds %struct.CCGFace*, %struct.CCGFace** %9, i64 %idxprom6, !dbg !9461
  %12 = load %struct.CCGFace*, %struct.CCGFace** %arrayidx7, align 8, !dbg !9461
  %13 = load %struct.CCGVert*, %struct.CCGVert** %v.addr, align 8, !dbg !9467
  %faces8 = getelementptr inbounds %struct.CCGVert, %struct.CCGVert* %13, i32 0, i32 7, !dbg !9468
  %14 = load %struct.CCGFace**, %struct.CCGFace*** %faces8, align 8, !dbg !9468
  %15 = load i32, i32* %i, align 4, !dbg !9469
  %idxprom9 = sext i32 %15 to i64, !dbg !9467
  %arrayidx10 = getelementptr inbounds %struct.CCGFace*, %struct.CCGFace** %14, i64 %idxprom9, !dbg !9467
  store %struct.CCGFace* %12, %struct.CCGFace** %arrayidx10, align 8, !dbg !9470
  br label %for.end, !dbg !9471

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !9472

for.inc:                                          ; preds = %if.end
  %16 = load i32, i32* %i, align 4, !dbg !9473
  %inc = add nsw i32 %16, 1, !dbg !9473
  store i32 %inc, i32* %i, align 4, !dbg !9473
  br label %for.cond, !dbg !9474, !llvm.loop !9475

for.end:                                          ; preds = %if.then, %for.cond
  ret void, !dbg !9477
}

; Function Attrs: noinline nounwind uwtable
define internal void @_edge_remFace(%struct.CCGEdge* %e, %struct.CCGFace* %f) #0 !dbg !9478 {
entry:
  %e.addr = alloca %struct.CCGEdge*, align 8
  %f.addr = alloca %struct.CCGFace*, align 8
  %i = alloca i32, align 4
  store %struct.CCGEdge* %e, %struct.CCGEdge** %e.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGEdge** %e.addr, metadata !9481, metadata !DIExpression()), !dbg !9482
  store %struct.CCGFace* %f, %struct.CCGFace** %f.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGFace** %f.addr, metadata !9483, metadata !DIExpression()), !dbg !9484
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9485, metadata !DIExpression()), !dbg !9486
  store i32 0, i32* %i, align 4, !dbg !9487
  br label %for.cond, !dbg !9489

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !9490
  %1 = load %struct.CCGEdge*, %struct.CCGEdge** %e.addr, align 8, !dbg !9492
  %numFaces = getelementptr inbounds %struct.CCGEdge, %struct.CCGEdge* %1, i32 0, i32 2, !dbg !9493
  %2 = load i16, i16* %numFaces, align 8, !dbg !9493
  %conv = sext i16 %2 to i32, !dbg !9492
  %cmp = icmp slt i32 %0, %conv, !dbg !9494
  br i1 %cmp, label %for.body, label %for.end, !dbg !9495

for.body:                                         ; preds = %for.cond
  %3 = load %struct.CCGEdge*, %struct.CCGEdge** %e.addr, align 8, !dbg !9496
  %faces = getelementptr inbounds %struct.CCGEdge, %struct.CCGEdge* %3, i32 0, i32 7, !dbg !9499
  %4 = load %struct.CCGFace**, %struct.CCGFace*** %faces, align 8, !dbg !9499
  %5 = load i32, i32* %i, align 4, !dbg !9500
  %idxprom = sext i32 %5 to i64, !dbg !9496
  %arrayidx = getelementptr inbounds %struct.CCGFace*, %struct.CCGFace** %4, i64 %idxprom, !dbg !9496
  %6 = load %struct.CCGFace*, %struct.CCGFace** %arrayidx, align 8, !dbg !9496
  %7 = load %struct.CCGFace*, %struct.CCGFace** %f.addr, align 8, !dbg !9501
  %cmp2 = icmp eq %struct.CCGFace* %6, %7, !dbg !9502
  br i1 %cmp2, label %if.then, label %if.end, !dbg !9503

if.then:                                          ; preds = %for.body
  %8 = load %struct.CCGEdge*, %struct.CCGEdge** %e.addr, align 8, !dbg !9504
  %faces4 = getelementptr inbounds %struct.CCGEdge, %struct.CCGEdge* %8, i32 0, i32 7, !dbg !9506
  %9 = load %struct.CCGFace**, %struct.CCGFace*** %faces4, align 8, !dbg !9506
  %10 = load %struct.CCGEdge*, %struct.CCGEdge** %e.addr, align 8, !dbg !9507
  %numFaces5 = getelementptr inbounds %struct.CCGEdge, %struct.CCGEdge* %10, i32 0, i32 2, !dbg !9508
  %11 = load i16, i16* %numFaces5, align 8, !dbg !9509
  %dec = add i16 %11, -1, !dbg !9509
  store i16 %dec, i16* %numFaces5, align 8, !dbg !9509
  %idxprom6 = sext i16 %dec to i64, !dbg !9504
  %arrayidx7 = getelementptr inbounds %struct.CCGFace*, %struct.CCGFace** %9, i64 %idxprom6, !dbg !9504
  %12 = load %struct.CCGFace*, %struct.CCGFace** %arrayidx7, align 8, !dbg !9504
  %13 = load %struct.CCGEdge*, %struct.CCGEdge** %e.addr, align 8, !dbg !9510
  %faces8 = getelementptr inbounds %struct.CCGEdge, %struct.CCGEdge* %13, i32 0, i32 7, !dbg !9511
  %14 = load %struct.CCGFace**, %struct.CCGFace*** %faces8, align 8, !dbg !9511
  %15 = load i32, i32* %i, align 4, !dbg !9512
  %idxprom9 = sext i32 %15 to i64, !dbg !9510
  %arrayidx10 = getelementptr inbounds %struct.CCGFace*, %struct.CCGFace** %14, i64 %idxprom9, !dbg !9510
  store %struct.CCGFace* %12, %struct.CCGFace** %arrayidx10, align 8, !dbg !9513
  br label %for.end, !dbg !9514

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !9515

for.inc:                                          ; preds = %if.end
  %16 = load i32, i32* %i, align 4, !dbg !9516
  %inc = add nsw i32 %16, 1, !dbg !9516
  store i32 %inc, i32* %i, align 4, !dbg !9516
  br label %for.cond, !dbg !9517, !llvm.loop !9518

for.end:                                          ; preds = %if.then, %for.cond
  ret void, !dbg !9520
}

; Function Attrs: noinline nounwind uwtable
define internal void @_vert_addEdge(%struct.CCGVert* %v, %struct.CCGEdge* %e, %struct.CCGSubSurf* %ss) #0 !dbg !9521 {
entry:
  %v.addr = alloca %struct.CCGVert*, align 8
  %e.addr = alloca %struct.CCGEdge*, align 8
  %ss.addr = alloca %struct.CCGSubSurf*, align 8
  store %struct.CCGVert* %v, %struct.CCGVert** %v.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGVert** %v.addr, metadata !9524, metadata !DIExpression()), !dbg !9525
  store %struct.CCGEdge* %e, %struct.CCGEdge** %e.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGEdge** %e.addr, metadata !9526, metadata !DIExpression()), !dbg !9527
  store %struct.CCGSubSurf* %ss, %struct.CCGSubSurf** %ss.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGSubSurf** %ss.addr, metadata !9528, metadata !DIExpression()), !dbg !9529
  %0 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !9530
  %allocatorIFC = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %0, i32 0, i32 4, !dbg !9530
  %realloc = getelementptr inbounds %struct.CCGAllocatorIFC, %struct.CCGAllocatorIFC* %allocatorIFC, i32 0, i32 1, !dbg !9530
  %1 = load i8* (i8*, i8*, i32, i32)*, i8* (i8*, i8*, i32, i32)** %realloc, align 8, !dbg !9530
  %2 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !9530
  %allocator = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %2, i32 0, i32 5, !dbg !9530
  %3 = load i8*, i8** %allocator, align 8, !dbg !9530
  %4 = load %struct.CCGVert*, %struct.CCGVert** %v.addr, align 8, !dbg !9530
  %edges = getelementptr inbounds %struct.CCGVert, %struct.CCGVert* %4, i32 0, i32 6, !dbg !9530
  %5 = load %struct.CCGEdge**, %struct.CCGEdge*** %edges, align 8, !dbg !9530
  %6 = bitcast %struct.CCGEdge** %5 to i8*, !dbg !9530
  %7 = load %struct.CCGVert*, %struct.CCGVert** %v.addr, align 8, !dbg !9530
  %numEdges = getelementptr inbounds %struct.CCGVert, %struct.CCGVert* %7, i32 0, i32 2, !dbg !9530
  %8 = load i16, i16* %numEdges, align 8, !dbg !9530
  %conv = sext i16 %8 to i32, !dbg !9530
  %add = add nsw i32 %conv, 1, !dbg !9530
  %conv1 = sext i32 %add to i64, !dbg !9530
  %mul = mul i64 %conv1, 8, !dbg !9530
  %conv2 = trunc i64 %mul to i32, !dbg !9530
  %9 = load %struct.CCGVert*, %struct.CCGVert** %v.addr, align 8, !dbg !9530
  %numEdges3 = getelementptr inbounds %struct.CCGVert, %struct.CCGVert* %9, i32 0, i32 2, !dbg !9530
  %10 = load i16, i16* %numEdges3, align 8, !dbg !9530
  %conv4 = sext i16 %10 to i64, !dbg !9530
  %mul5 = mul i64 %conv4, 8, !dbg !9530
  %conv6 = trunc i64 %mul5 to i32, !dbg !9530
  %call = call i8* %1(i8* %3, i8* %6, i32 %conv2, i32 %conv6), !dbg !9530
  %11 = bitcast i8* %call to %struct.CCGEdge**, !dbg !9530
  %12 = load %struct.CCGVert*, %struct.CCGVert** %v.addr, align 8, !dbg !9531
  %edges7 = getelementptr inbounds %struct.CCGVert, %struct.CCGVert* %12, i32 0, i32 6, !dbg !9532
  store %struct.CCGEdge** %11, %struct.CCGEdge*** %edges7, align 8, !dbg !9533
  %13 = load %struct.CCGEdge*, %struct.CCGEdge** %e.addr, align 8, !dbg !9534
  %14 = load %struct.CCGVert*, %struct.CCGVert** %v.addr, align 8, !dbg !9535
  %edges8 = getelementptr inbounds %struct.CCGVert, %struct.CCGVert* %14, i32 0, i32 6, !dbg !9536
  %15 = load %struct.CCGEdge**, %struct.CCGEdge*** %edges8, align 8, !dbg !9536
  %16 = load %struct.CCGVert*, %struct.CCGVert** %v.addr, align 8, !dbg !9537
  %numEdges9 = getelementptr inbounds %struct.CCGVert, %struct.CCGVert* %16, i32 0, i32 2, !dbg !9538
  %17 = load i16, i16* %numEdges9, align 8, !dbg !9539
  %inc = add i16 %17, 1, !dbg !9539
  store i16 %inc, i16* %numEdges9, align 8, !dbg !9539
  %idxprom = sext i16 %17 to i64, !dbg !9535
  %arrayidx = getelementptr inbounds %struct.CCGEdge*, %struct.CCGEdge** %15, i64 %idxprom, !dbg !9535
  store %struct.CCGEdge* %13, %struct.CCGEdge** %arrayidx, align 8, !dbg !9540
  ret void, !dbg !9541
}

; Function Attrs: noinline nounwind uwtable
define internal void @_vert_addFace(%struct.CCGVert* %v, %struct.CCGFace* %f, %struct.CCGSubSurf* %ss) #0 !dbg !9542 {
entry:
  %v.addr = alloca %struct.CCGVert*, align 8
  %f.addr = alloca %struct.CCGFace*, align 8
  %ss.addr = alloca %struct.CCGSubSurf*, align 8
  store %struct.CCGVert* %v, %struct.CCGVert** %v.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGVert** %v.addr, metadata !9545, metadata !DIExpression()), !dbg !9546
  store %struct.CCGFace* %f, %struct.CCGFace** %f.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGFace** %f.addr, metadata !9547, metadata !DIExpression()), !dbg !9548
  store %struct.CCGSubSurf* %ss, %struct.CCGSubSurf** %ss.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGSubSurf** %ss.addr, metadata !9549, metadata !DIExpression()), !dbg !9550
  %0 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !9551
  %allocatorIFC = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %0, i32 0, i32 4, !dbg !9551
  %realloc = getelementptr inbounds %struct.CCGAllocatorIFC, %struct.CCGAllocatorIFC* %allocatorIFC, i32 0, i32 1, !dbg !9551
  %1 = load i8* (i8*, i8*, i32, i32)*, i8* (i8*, i8*, i32, i32)** %realloc, align 8, !dbg !9551
  %2 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !9551
  %allocator = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %2, i32 0, i32 5, !dbg !9551
  %3 = load i8*, i8** %allocator, align 8, !dbg !9551
  %4 = load %struct.CCGVert*, %struct.CCGVert** %v.addr, align 8, !dbg !9551
  %faces = getelementptr inbounds %struct.CCGVert, %struct.CCGVert* %4, i32 0, i32 7, !dbg !9551
  %5 = load %struct.CCGFace**, %struct.CCGFace*** %faces, align 8, !dbg !9551
  %6 = bitcast %struct.CCGFace** %5 to i8*, !dbg !9551
  %7 = load %struct.CCGVert*, %struct.CCGVert** %v.addr, align 8, !dbg !9551
  %numFaces = getelementptr inbounds %struct.CCGVert, %struct.CCGVert* %7, i32 0, i32 3, !dbg !9551
  %8 = load i16, i16* %numFaces, align 2, !dbg !9551
  %conv = sext i16 %8 to i32, !dbg !9551
  %add = add nsw i32 %conv, 1, !dbg !9551
  %conv1 = sext i32 %add to i64, !dbg !9551
  %mul = mul i64 %conv1, 8, !dbg !9551
  %conv2 = trunc i64 %mul to i32, !dbg !9551
  %9 = load %struct.CCGVert*, %struct.CCGVert** %v.addr, align 8, !dbg !9551
  %numFaces3 = getelementptr inbounds %struct.CCGVert, %struct.CCGVert* %9, i32 0, i32 3, !dbg !9551
  %10 = load i16, i16* %numFaces3, align 2, !dbg !9551
  %conv4 = sext i16 %10 to i64, !dbg !9551
  %mul5 = mul i64 %conv4, 8, !dbg !9551
  %conv6 = trunc i64 %mul5 to i32, !dbg !9551
  %call = call i8* %1(i8* %3, i8* %6, i32 %conv2, i32 %conv6), !dbg !9551
  %11 = bitcast i8* %call to %struct.CCGFace**, !dbg !9551
  %12 = load %struct.CCGVert*, %struct.CCGVert** %v.addr, align 8, !dbg !9552
  %faces7 = getelementptr inbounds %struct.CCGVert, %struct.CCGVert* %12, i32 0, i32 7, !dbg !9553
  store %struct.CCGFace** %11, %struct.CCGFace*** %faces7, align 8, !dbg !9554
  %13 = load %struct.CCGFace*, %struct.CCGFace** %f.addr, align 8, !dbg !9555
  %14 = load %struct.CCGVert*, %struct.CCGVert** %v.addr, align 8, !dbg !9556
  %faces8 = getelementptr inbounds %struct.CCGVert, %struct.CCGVert* %14, i32 0, i32 7, !dbg !9557
  %15 = load %struct.CCGFace**, %struct.CCGFace*** %faces8, align 8, !dbg !9557
  %16 = load %struct.CCGVert*, %struct.CCGVert** %v.addr, align 8, !dbg !9558
  %numFaces9 = getelementptr inbounds %struct.CCGVert, %struct.CCGVert* %16, i32 0, i32 3, !dbg !9559
  %17 = load i16, i16* %numFaces9, align 2, !dbg !9560
  %inc = add i16 %17, 1, !dbg !9560
  store i16 %inc, i16* %numFaces9, align 2, !dbg !9560
  %idxprom = sext i16 %17 to i64, !dbg !9556
  %arrayidx = getelementptr inbounds %struct.CCGFace*, %struct.CCGFace** %15, i64 %idxprom, !dbg !9556
  store %struct.CCGFace* %13, %struct.CCGFace** %arrayidx, align 8, !dbg !9561
  ret void, !dbg !9562
}

; Function Attrs: noinline nounwind uwtable
define internal void @_edge_addFace(%struct.CCGEdge* %e, %struct.CCGFace* %f, %struct.CCGSubSurf* %ss) #0 !dbg !9563 {
entry:
  %e.addr = alloca %struct.CCGEdge*, align 8
  %f.addr = alloca %struct.CCGFace*, align 8
  %ss.addr = alloca %struct.CCGSubSurf*, align 8
  store %struct.CCGEdge* %e, %struct.CCGEdge** %e.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGEdge** %e.addr, metadata !9566, metadata !DIExpression()), !dbg !9567
  store %struct.CCGFace* %f, %struct.CCGFace** %f.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGFace** %f.addr, metadata !9568, metadata !DIExpression()), !dbg !9569
  store %struct.CCGSubSurf* %ss, %struct.CCGSubSurf** %ss.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGSubSurf** %ss.addr, metadata !9570, metadata !DIExpression()), !dbg !9571
  %0 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !9572
  %allocatorIFC = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %0, i32 0, i32 4, !dbg !9572
  %realloc = getelementptr inbounds %struct.CCGAllocatorIFC, %struct.CCGAllocatorIFC* %allocatorIFC, i32 0, i32 1, !dbg !9572
  %1 = load i8* (i8*, i8*, i32, i32)*, i8* (i8*, i8*, i32, i32)** %realloc, align 8, !dbg !9572
  %2 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !9572
  %allocator = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %2, i32 0, i32 5, !dbg !9572
  %3 = load i8*, i8** %allocator, align 8, !dbg !9572
  %4 = load %struct.CCGEdge*, %struct.CCGEdge** %e.addr, align 8, !dbg !9572
  %faces = getelementptr inbounds %struct.CCGEdge, %struct.CCGEdge* %4, i32 0, i32 7, !dbg !9572
  %5 = load %struct.CCGFace**, %struct.CCGFace*** %faces, align 8, !dbg !9572
  %6 = bitcast %struct.CCGFace** %5 to i8*, !dbg !9572
  %7 = load %struct.CCGEdge*, %struct.CCGEdge** %e.addr, align 8, !dbg !9572
  %numFaces = getelementptr inbounds %struct.CCGEdge, %struct.CCGEdge* %7, i32 0, i32 2, !dbg !9572
  %8 = load i16, i16* %numFaces, align 8, !dbg !9572
  %conv = sext i16 %8 to i32, !dbg !9572
  %add = add nsw i32 %conv, 1, !dbg !9572
  %conv1 = sext i32 %add to i64, !dbg !9572
  %mul = mul i64 %conv1, 8, !dbg !9572
  %conv2 = trunc i64 %mul to i32, !dbg !9572
  %9 = load %struct.CCGEdge*, %struct.CCGEdge** %e.addr, align 8, !dbg !9572
  %numFaces3 = getelementptr inbounds %struct.CCGEdge, %struct.CCGEdge* %9, i32 0, i32 2, !dbg !9572
  %10 = load i16, i16* %numFaces3, align 8, !dbg !9572
  %conv4 = sext i16 %10 to i64, !dbg !9572
  %mul5 = mul i64 %conv4, 8, !dbg !9572
  %conv6 = trunc i64 %mul5 to i32, !dbg !9572
  %call = call i8* %1(i8* %3, i8* %6, i32 %conv2, i32 %conv6), !dbg !9572
  %11 = bitcast i8* %call to %struct.CCGFace**, !dbg !9572
  %12 = load %struct.CCGEdge*, %struct.CCGEdge** %e.addr, align 8, !dbg !9573
  %faces7 = getelementptr inbounds %struct.CCGEdge, %struct.CCGEdge* %12, i32 0, i32 7, !dbg !9574
  store %struct.CCGFace** %11, %struct.CCGFace*** %faces7, align 8, !dbg !9575
  %13 = load %struct.CCGFace*, %struct.CCGFace** %f.addr, align 8, !dbg !9576
  %14 = load %struct.CCGEdge*, %struct.CCGEdge** %e.addr, align 8, !dbg !9577
  %faces8 = getelementptr inbounds %struct.CCGEdge, %struct.CCGEdge* %14, i32 0, i32 7, !dbg !9578
  %15 = load %struct.CCGFace**, %struct.CCGFace*** %faces8, align 8, !dbg !9578
  %16 = load %struct.CCGEdge*, %struct.CCGEdge** %e.addr, align 8, !dbg !9579
  %numFaces9 = getelementptr inbounds %struct.CCGEdge, %struct.CCGEdge* %16, i32 0, i32 2, !dbg !9580
  %17 = load i16, i16* %numFaces9, align 8, !dbg !9581
  %inc = add i16 %17, 1, !dbg !9581
  store i16 %inc, i16* %numFaces9, align 8, !dbg !9581
  %idxprom = sext i16 %17 to i64, !dbg !9577
  %arrayidx = getelementptr inbounds %struct.CCGFace*, %struct.CCGFace** %15, i64 %idxprom, !dbg !9577
  store %struct.CCGFace* %13, %struct.CCGFace** %arrayidx, align 8, !dbg !9582
  ret void, !dbg !9583
}

; Function Attrs: noinline nounwind uwtable
define internal float @EDGE_getSharpness(%struct.CCGEdge* %e, i32 %lvl) #0 !dbg !9584 {
entry:
  %retval = alloca float, align 4
  %e.addr = alloca %struct.CCGEdge*, align 8
  %lvl.addr = alloca i32, align 4
  store %struct.CCGEdge* %e, %struct.CCGEdge** %e.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGEdge** %e.addr, metadata !9587, metadata !DIExpression()), !dbg !9588
  store i32 %lvl, i32* %lvl.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %lvl.addr, metadata !9589, metadata !DIExpression()), !dbg !9590
  %0 = load i32, i32* %lvl.addr, align 4, !dbg !9591
  %tobool = icmp ne i32 %0, 0, !dbg !9591
  br i1 %tobool, label %if.else, label %if.then, !dbg !9593

if.then:                                          ; preds = %entry
  %1 = load %struct.CCGEdge*, %struct.CCGEdge** %e.addr, align 8, !dbg !9594
  %crease = getelementptr inbounds %struct.CCGEdge, %struct.CCGEdge* %1, i32 0, i32 4, !dbg !9595
  %2 = load float, float* %crease, align 4, !dbg !9595
  store float %2, float* %retval, align 4, !dbg !9596
  br label %return, !dbg !9596

if.else:                                          ; preds = %entry
  %3 = load %struct.CCGEdge*, %struct.CCGEdge** %e.addr, align 8, !dbg !9597
  %crease1 = getelementptr inbounds %struct.CCGEdge, %struct.CCGEdge* %3, i32 0, i32 4, !dbg !9599
  %4 = load float, float* %crease1, align 4, !dbg !9599
  %tobool2 = fcmp une float %4, 0.000000e+00, !dbg !9597
  br i1 %tobool2, label %if.else4, label %if.then3, !dbg !9600

if.then3:                                         ; preds = %if.else
  store float 0.000000e+00, float* %retval, align 4, !dbg !9601
  br label %return, !dbg !9601

if.else4:                                         ; preds = %if.else
  %5 = load %struct.CCGEdge*, %struct.CCGEdge** %e.addr, align 8, !dbg !9602
  %crease5 = getelementptr inbounds %struct.CCGEdge, %struct.CCGEdge* %5, i32 0, i32 4, !dbg !9604
  %6 = load float, float* %crease5, align 4, !dbg !9604
  %7 = load i32, i32* %lvl.addr, align 4, !dbg !9605
  %conv = sitofp i32 %7 to float, !dbg !9605
  %sub = fsub float %6, %conv, !dbg !9606
  %cmp = fcmp olt float %sub, 0.000000e+00, !dbg !9607
  br i1 %cmp, label %if.then7, label %if.else8, !dbg !9608

if.then7:                                         ; preds = %if.else4
  store float 0.000000e+00, float* %retval, align 4, !dbg !9609
  br label %return, !dbg !9609

if.else8:                                         ; preds = %if.else4
  %8 = load %struct.CCGEdge*, %struct.CCGEdge** %e.addr, align 8, !dbg !9610
  %crease9 = getelementptr inbounds %struct.CCGEdge, %struct.CCGEdge* %8, i32 0, i32 4, !dbg !9611
  %9 = load float, float* %crease9, align 4, !dbg !9611
  %10 = load i32, i32* %lvl.addr, align 4, !dbg !9612
  %conv10 = sitofp i32 %10 to float, !dbg !9612
  %sub11 = fsub float %9, %conv10, !dbg !9613
  store float %sub11, float* %retval, align 4, !dbg !9614
  br label %return, !dbg !9614

return:                                           ; preds = %if.else8, %if.then7, %if.then3, %if.then
  %11 = load float, float* %retval, align 4, !dbg !9615
  ret float %11, !dbg !9615
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @_edge_isBoundary(%struct.CCGEdge* %e) #0 !dbg !9616 {
entry:
  %e.addr = alloca %struct.CCGEdge*, align 8
  store %struct.CCGEdge* %e, %struct.CCGEdge** %e.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGEdge** %e.addr, metadata !9621, metadata !DIExpression()), !dbg !9622
  %0 = load %struct.CCGEdge*, %struct.CCGEdge** %e.addr, align 8, !dbg !9623
  %numFaces = getelementptr inbounds %struct.CCGEdge, %struct.CCGEdge* %0, i32 0, i32 2, !dbg !9624
  %1 = load i16, i16* %numFaces, align 8, !dbg !9624
  %conv = sext i16 %1 to i32, !dbg !9623
  %cmp = icmp slt i32 %conv, 2, !dbg !9625
  %conv1 = zext i1 %cmp to i32, !dbg !9625
  ret i32 %conv1, !dbg !9626
}

; Function Attrs: noinline nounwind uwtable
define internal void @VertDataSub(float* %a, float* %b, %struct.CCGSubSurf* %ss) #0 !dbg !9627 {
entry:
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  %ss.addr = alloca %struct.CCGSubSurf*, align 8
  %i = alloca i32, align 4
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !9628, metadata !DIExpression()), !dbg !9629
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !9630, metadata !DIExpression()), !dbg !9631
  store %struct.CCGSubSurf* %ss, %struct.CCGSubSurf** %ss.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGSubSurf** %ss.addr, metadata !9632, metadata !DIExpression()), !dbg !9633
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9634, metadata !DIExpression()), !dbg !9635
  store i32 0, i32* %i, align 4, !dbg !9636
  br label %for.cond, !dbg !9638

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !9639
  %1 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !9641
  %meshIFC = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %1, i32 0, i32 3, !dbg !9642
  %numLayers = getelementptr inbounds %struct.CCGMeshIFC, %struct.CCGMeshIFC* %meshIFC, i32 0, i32 3, !dbg !9643
  %2 = load i32, i32* %numLayers, align 4, !dbg !9643
  %cmp = icmp slt i32 %0, %2, !dbg !9644
  br i1 %cmp, label %for.body, label %for.end, !dbg !9645

for.body:                                         ; preds = %for.cond
  %3 = load float*, float** %b.addr, align 8, !dbg !9646
  %4 = load i32, i32* %i, align 4, !dbg !9647
  %idxprom = sext i32 %4 to i64, !dbg !9646
  %arrayidx = getelementptr inbounds float, float* %3, i64 %idxprom, !dbg !9646
  %5 = load float, float* %arrayidx, align 4, !dbg !9646
  %6 = load float*, float** %a.addr, align 8, !dbg !9648
  %7 = load i32, i32* %i, align 4, !dbg !9649
  %idxprom1 = sext i32 %7 to i64, !dbg !9648
  %arrayidx2 = getelementptr inbounds float, float* %6, i64 %idxprom1, !dbg !9648
  %8 = load float, float* %arrayidx2, align 4, !dbg !9650
  %sub = fsub float %8, %5, !dbg !9650
  store float %sub, float* %arrayidx2, align 4, !dbg !9650
  br label %for.inc, !dbg !9648

for.inc:                                          ; preds = %for.body
  %9 = load i32, i32* %i, align 4, !dbg !9651
  %inc = add nsw i32 %9, 1, !dbg !9651
  store i32 %inc, i32* %i, align 4, !dbg !9651
  br label %for.cond, !dbg !9652, !llvm.loop !9653

for.end:                                          ; preds = %for.cond
  ret void, !dbg !9655
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @VERT_seam(%struct.CCGVert* %v) #0 !dbg !9656 {
entry:
  %v.addr = alloca %struct.CCGVert*, align 8
  store %struct.CCGVert* %v, %struct.CCGVert** %v.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGVert** %v.addr, metadata !9659, metadata !DIExpression()), !dbg !9660
  %0 = load %struct.CCGVert*, %struct.CCGVert** %v.addr, align 8, !dbg !9661
  %flags = getelementptr inbounds %struct.CCGVert, %struct.CCGVert* %0, i32 0, i32 4, !dbg !9662
  %1 = load i16, i16* %flags, align 4, !dbg !9662
  %conv = sext i16 %1 to i32, !dbg !9661
  %and = and i32 %conv, 4, !dbg !9663
  %cmp = icmp ne i32 %and, 0, !dbg !9664
  %conv1 = zext i1 %cmp to i32, !dbg !9664
  ret i32 %conv1, !dbg !9665
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @_vert_isBoundary(%struct.CCGVert* %v) #0 !dbg !9666 {
entry:
  %retval = alloca i32, align 4
  %v.addr = alloca %struct.CCGVert*, align 8
  %i = alloca i32, align 4
  store %struct.CCGVert* %v, %struct.CCGVert** %v.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGVert** %v.addr, metadata !9667, metadata !DIExpression()), !dbg !9668
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9669, metadata !DIExpression()), !dbg !9670
  store i32 0, i32* %i, align 4, !dbg !9671
  br label %for.cond, !dbg !9673

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !9674
  %1 = load %struct.CCGVert*, %struct.CCGVert** %v.addr, align 8, !dbg !9676
  %numEdges = getelementptr inbounds %struct.CCGVert, %struct.CCGVert* %1, i32 0, i32 2, !dbg !9677
  %2 = load i16, i16* %numEdges, align 8, !dbg !9677
  %conv = sext i16 %2 to i32, !dbg !9676
  %cmp = icmp slt i32 %0, %conv, !dbg !9678
  br i1 %cmp, label %for.body, label %for.end, !dbg !9679

for.body:                                         ; preds = %for.cond
  %3 = load %struct.CCGVert*, %struct.CCGVert** %v.addr, align 8, !dbg !9680
  %edges = getelementptr inbounds %struct.CCGVert, %struct.CCGVert* %3, i32 0, i32 6, !dbg !9682
  %4 = load %struct.CCGEdge**, %struct.CCGEdge*** %edges, align 8, !dbg !9682
  %5 = load i32, i32* %i, align 4, !dbg !9683
  %idxprom = sext i32 %5 to i64, !dbg !9680
  %arrayidx = getelementptr inbounds %struct.CCGEdge*, %struct.CCGEdge** %4, i64 %idxprom, !dbg !9680
  %6 = load %struct.CCGEdge*, %struct.CCGEdge** %arrayidx, align 8, !dbg !9680
  %call = call i32 @_edge_isBoundary(%struct.CCGEdge* %6), !dbg !9684
  %tobool = icmp ne i32 %call, 0, !dbg !9684
  br i1 %tobool, label %if.then, label %if.end, !dbg !9685

if.then:                                          ; preds = %for.body
  store i32 1, i32* %retval, align 4, !dbg !9686
  br label %return, !dbg !9686

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !9687

for.inc:                                          ; preds = %if.end
  %7 = load i32, i32* %i, align 4, !dbg !9688
  %inc = add nsw i32 %7, 1, !dbg !9688
  store i32 %inc, i32* %i, align 4, !dbg !9688
  br label %for.cond, !dbg !9689, !llvm.loop !9690

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %retval, align 4, !dbg !9692
  br label %return, !dbg !9692

return:                                           ; preds = %for.end, %if.then
  %8 = load i32, i32* %retval, align 4, !dbg !9693
  ret i32 %8, !dbg !9693
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.CCGVert* @_edge_getOtherVert(%struct.CCGEdge* %e, %struct.CCGVert* %vQ) #0 !dbg !9694 {
entry:
  %retval = alloca %struct.CCGVert*, align 8
  %e.addr = alloca %struct.CCGEdge*, align 8
  %vQ.addr = alloca %struct.CCGVert*, align 8
  store %struct.CCGEdge* %e, %struct.CCGEdge** %e.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGEdge** %e.addr, metadata !9697, metadata !DIExpression()), !dbg !9698
  store %struct.CCGVert* %vQ, %struct.CCGVert** %vQ.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGVert** %vQ.addr, metadata !9699, metadata !DIExpression()), !dbg !9700
  %0 = load %struct.CCGVert*, %struct.CCGVert** %vQ.addr, align 8, !dbg !9701
  %1 = load %struct.CCGEdge*, %struct.CCGEdge** %e.addr, align 8, !dbg !9703
  %v0 = getelementptr inbounds %struct.CCGEdge, %struct.CCGEdge* %1, i32 0, i32 5, !dbg !9704
  %2 = load %struct.CCGVert*, %struct.CCGVert** %v0, align 8, !dbg !9704
  %cmp = icmp eq %struct.CCGVert* %0, %2, !dbg !9705
  br i1 %cmp, label %if.then, label %if.else, !dbg !9706

if.then:                                          ; preds = %entry
  %3 = load %struct.CCGEdge*, %struct.CCGEdge** %e.addr, align 8, !dbg !9707
  %v1 = getelementptr inbounds %struct.CCGEdge, %struct.CCGEdge* %3, i32 0, i32 6, !dbg !9709
  %4 = load %struct.CCGVert*, %struct.CCGVert** %v1, align 8, !dbg !9709
  store %struct.CCGVert* %4, %struct.CCGVert** %retval, align 8, !dbg !9710
  br label %return, !dbg !9710

if.else:                                          ; preds = %entry
  %5 = load %struct.CCGEdge*, %struct.CCGEdge** %e.addr, align 8, !dbg !9711
  %v01 = getelementptr inbounds %struct.CCGEdge, %struct.CCGEdge* %5, i32 0, i32 5, !dbg !9713
  %6 = load %struct.CCGVert*, %struct.CCGVert** %v01, align 8, !dbg !9713
  store %struct.CCGVert* %6, %struct.CCGVert** %retval, align 8, !dbg !9714
  br label %return, !dbg !9714

return:                                           ; preds = %if.else, %if.then
  %7 = load %struct.CCGVert*, %struct.CCGVert** %retval, align 8, !dbg !9715
  ret %struct.CCGVert* %7, !dbg !9715
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @ccg_spacing(i32 %high_level, i32 %low_level) #0 !dbg !9716 {
entry:
  %high_level.addr = alloca i32, align 4
  %low_level.addr = alloca i32, align 4
  store i32 %high_level, i32* %high_level.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %high_level.addr, metadata !9717, metadata !DIExpression()), !dbg !9718
  store i32 %low_level, i32* %low_level.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %low_level.addr, metadata !9719, metadata !DIExpression()), !dbg !9720
  %0 = load i32, i32* %high_level.addr, align 4, !dbg !9721
  %1 = load i32, i32* %low_level.addr, align 4, !dbg !9722
  %sub = sub nsw i32 %0, %1, !dbg !9723
  %shl = shl i32 1, %sub, !dbg !9724
  ret i32 %shl, !dbg !9725
}

; Function Attrs: noinline nounwind uwtable
define internal float* @_face_getIFNo(%struct.CCGFace* %f, i32 %lvl, i32 %S, i32 %x, i32 %y, i32 %levels, i32 %dataSize, i32 %normalDataOffset) #0 !dbg !9726 {
entry:
  %f.addr = alloca %struct.CCGFace*, align 8
  %lvl.addr = alloca i32, align 4
  %S.addr = alloca i32, align 4
  %x.addr = alloca i32, align 4
  %y.addr = alloca i32, align 4
  %levels.addr = alloca i32, align 4
  %dataSize.addr = alloca i32, align 4
  %normalDataOffset.addr = alloca i32, align 4
  %maxGridSize = alloca i32, align 4
  %spacing = alloca i32, align 4
  %gridBase = alloca i8*, align 8
  store %struct.CCGFace* %f, %struct.CCGFace** %f.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGFace** %f.addr, metadata !9729, metadata !DIExpression()), !dbg !9730
  store i32 %lvl, i32* %lvl.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %lvl.addr, metadata !9731, metadata !DIExpression()), !dbg !9732
  store i32 %S, i32* %S.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %S.addr, metadata !9733, metadata !DIExpression()), !dbg !9734
  store i32 %x, i32* %x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !9735, metadata !DIExpression()), !dbg !9736
  store i32 %y, i32* %y.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %y.addr, metadata !9737, metadata !DIExpression()), !dbg !9738
  store i32 %levels, i32* %levels.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %levels.addr, metadata !9739, metadata !DIExpression()), !dbg !9740
  store i32 %dataSize, i32* %dataSize.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dataSize.addr, metadata !9741, metadata !DIExpression()), !dbg !9742
  store i32 %normalDataOffset, i32* %normalDataOffset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %normalDataOffset.addr, metadata !9743, metadata !DIExpression()), !dbg !9744
  call void @llvm.dbg.declare(metadata i32* %maxGridSize, metadata !9745, metadata !DIExpression()), !dbg !9746
  %0 = load i32, i32* %levels.addr, align 4, !dbg !9747
  %call = call i32 @ccg_gridsize(i32 %0), !dbg !9748
  store i32 %call, i32* %maxGridSize, align 4, !dbg !9746
  call void @llvm.dbg.declare(metadata i32* %spacing, metadata !9749, metadata !DIExpression()), !dbg !9750
  %1 = load i32, i32* %levels.addr, align 4, !dbg !9751
  %2 = load i32, i32* %lvl.addr, align 4, !dbg !9752
  %call1 = call i32 @ccg_spacing(i32 %1, i32 %2), !dbg !9753
  store i32 %call1, i32* %spacing, align 4, !dbg !9750
  call void @llvm.dbg.declare(metadata i8** %gridBase, metadata !9754, metadata !DIExpression()), !dbg !9755
  %3 = load %struct.CCGFace*, %struct.CCGFace** %f.addr, align 8, !dbg !9756
  %call2 = call i8* @FACE_getCenterData(%struct.CCGFace* %3), !dbg !9757
  %4 = load i32, i32* %dataSize.addr, align 4, !dbg !9758
  %5 = load i32, i32* %S.addr, align 4, !dbg !9759
  %6 = load i32, i32* %maxGridSize, align 4, !dbg !9760
  %7 = load i32, i32* %maxGridSize, align 4, !dbg !9761
  %8 = load i32, i32* %maxGridSize, align 4, !dbg !9762
  %mul = mul nsw i32 %7, %8, !dbg !9763
  %add = add nsw i32 %6, %mul, !dbg !9764
  %mul3 = mul nsw i32 %5, %add, !dbg !9765
  %add4 = add nsw i32 1, %mul3, !dbg !9766
  %mul5 = mul nsw i32 %4, %add4, !dbg !9767
  %idx.ext = sext i32 %mul5 to i64, !dbg !9768
  %add.ptr = getelementptr inbounds i8, i8* %call2, i64 %idx.ext, !dbg !9768
  store i8* %add.ptr, i8** %gridBase, align 8, !dbg !9755
  %9 = load i8*, i8** %gridBase, align 8, !dbg !9769
  %10 = load i32, i32* %dataSize.addr, align 4, !dbg !9770
  %11 = load i32, i32* %maxGridSize, align 4, !dbg !9771
  %12 = load i32, i32* %y.addr, align 4, !dbg !9772
  %13 = load i32, i32* %maxGridSize, align 4, !dbg !9773
  %mul6 = mul nsw i32 %12, %13, !dbg !9774
  %14 = load i32, i32* %x.addr, align 4, !dbg !9775
  %add7 = add nsw i32 %mul6, %14, !dbg !9776
  %15 = load i32, i32* %spacing, align 4, !dbg !9777
  %mul8 = mul nsw i32 %add7, %15, !dbg !9778
  %add9 = add nsw i32 %11, %mul8, !dbg !9779
  %mul10 = mul nsw i32 %10, %add9, !dbg !9780
  %16 = load i32, i32* %normalDataOffset.addr, align 4, !dbg !9781
  %add11 = add nsw i32 %mul10, %16, !dbg !9782
  %idxprom = sext i32 %add11 to i64, !dbg !9769
  %arrayidx = getelementptr inbounds i8, i8* %9, i64 %idxprom, !dbg !9769
  %17 = bitcast i8* %arrayidx to float*, !dbg !9783
  ret float* %17, !dbg !9784
}

; Function Attrs: noinline nounwind uwtable
define internal void @_face_calcIFNo(%struct.CCGFace* %f, i32 %lvl, i32 %S, i32 %x, i32 %y, float* %no, i32 %levels, i32 %dataSize) #0 !dbg !9785 {
entry:
  %f.addr = alloca %struct.CCGFace*, align 8
  %lvl.addr = alloca i32, align 4
  %S.addr = alloca i32, align 4
  %x.addr = alloca i32, align 4
  %y.addr = alloca i32, align 4
  %no.addr = alloca float*, align 8
  %levels.addr = alloca i32, align 4
  %dataSize.addr = alloca i32, align 4
  %a = alloca float*, align 8
  %b = alloca float*, align 8
  %c = alloca float*, align 8
  %d = alloca float*, align 8
  %a_cX = alloca float, align 4
  %a_cY = alloca float, align 4
  %a_cZ = alloca float, align 4
  %b_dX = alloca float, align 4
  %b_dY = alloca float, align 4
  %b_dZ = alloca float, align 4
  store %struct.CCGFace* %f, %struct.CCGFace** %f.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGFace** %f.addr, metadata !9788, metadata !DIExpression()), !dbg !9789
  store i32 %lvl, i32* %lvl.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %lvl.addr, metadata !9790, metadata !DIExpression()), !dbg !9791
  store i32 %S, i32* %S.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %S.addr, metadata !9792, metadata !DIExpression()), !dbg !9793
  store i32 %x, i32* %x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !9794, metadata !DIExpression()), !dbg !9795
  store i32 %y, i32* %y.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %y.addr, metadata !9796, metadata !DIExpression()), !dbg !9797
  store float* %no, float** %no.addr, align 8
  call void @llvm.dbg.declare(metadata float** %no.addr, metadata !9798, metadata !DIExpression()), !dbg !9799
  store i32 %levels, i32* %levels.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %levels.addr, metadata !9800, metadata !DIExpression()), !dbg !9801
  store i32 %dataSize, i32* %dataSize.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dataSize.addr, metadata !9802, metadata !DIExpression()), !dbg !9803
  call void @llvm.dbg.declare(metadata float** %a, metadata !9804, metadata !DIExpression()), !dbg !9805
  %0 = load %struct.CCGFace*, %struct.CCGFace** %f.addr, align 8, !dbg !9806
  %1 = load i32, i32* %lvl.addr, align 4, !dbg !9807
  %2 = load i32, i32* %S.addr, align 4, !dbg !9808
  %3 = load i32, i32* %x.addr, align 4, !dbg !9809
  %add = add nsw i32 %3, 0, !dbg !9810
  %4 = load i32, i32* %y.addr, align 4, !dbg !9811
  %add1 = add nsw i32 %4, 0, !dbg !9812
  %5 = load i32, i32* %levels.addr, align 4, !dbg !9813
  %6 = load i32, i32* %dataSize.addr, align 4, !dbg !9814
  %call = call i8* @_face_getIFCo(%struct.CCGFace* %0, i32 %1, i32 %2, i32 %add, i32 %add1, i32 %5, i32 %6), !dbg !9815
  %7 = bitcast i8* %call to float*, !dbg !9815
  store float* %7, float** %a, align 8, !dbg !9805
  call void @llvm.dbg.declare(metadata float** %b, metadata !9816, metadata !DIExpression()), !dbg !9817
  %8 = load %struct.CCGFace*, %struct.CCGFace** %f.addr, align 8, !dbg !9818
  %9 = load i32, i32* %lvl.addr, align 4, !dbg !9819
  %10 = load i32, i32* %S.addr, align 4, !dbg !9820
  %11 = load i32, i32* %x.addr, align 4, !dbg !9821
  %add2 = add nsw i32 %11, 1, !dbg !9822
  %12 = load i32, i32* %y.addr, align 4, !dbg !9823
  %add3 = add nsw i32 %12, 0, !dbg !9824
  %13 = load i32, i32* %levels.addr, align 4, !dbg !9825
  %14 = load i32, i32* %dataSize.addr, align 4, !dbg !9826
  %call4 = call i8* @_face_getIFCo(%struct.CCGFace* %8, i32 %9, i32 %10, i32 %add2, i32 %add3, i32 %13, i32 %14), !dbg !9827
  %15 = bitcast i8* %call4 to float*, !dbg !9827
  store float* %15, float** %b, align 8, !dbg !9817
  call void @llvm.dbg.declare(metadata float** %c, metadata !9828, metadata !DIExpression()), !dbg !9829
  %16 = load %struct.CCGFace*, %struct.CCGFace** %f.addr, align 8, !dbg !9830
  %17 = load i32, i32* %lvl.addr, align 4, !dbg !9831
  %18 = load i32, i32* %S.addr, align 4, !dbg !9832
  %19 = load i32, i32* %x.addr, align 4, !dbg !9833
  %add5 = add nsw i32 %19, 1, !dbg !9834
  %20 = load i32, i32* %y.addr, align 4, !dbg !9835
  %add6 = add nsw i32 %20, 1, !dbg !9836
  %21 = load i32, i32* %levels.addr, align 4, !dbg !9837
  %22 = load i32, i32* %dataSize.addr, align 4, !dbg !9838
  %call7 = call i8* @_face_getIFCo(%struct.CCGFace* %16, i32 %17, i32 %18, i32 %add5, i32 %add6, i32 %21, i32 %22), !dbg !9839
  %23 = bitcast i8* %call7 to float*, !dbg !9839
  store float* %23, float** %c, align 8, !dbg !9829
  call void @llvm.dbg.declare(metadata float** %d, metadata !9840, metadata !DIExpression()), !dbg !9841
  %24 = load %struct.CCGFace*, %struct.CCGFace** %f.addr, align 8, !dbg !9842
  %25 = load i32, i32* %lvl.addr, align 4, !dbg !9843
  %26 = load i32, i32* %S.addr, align 4, !dbg !9844
  %27 = load i32, i32* %x.addr, align 4, !dbg !9845
  %add8 = add nsw i32 %27, 0, !dbg !9846
  %28 = load i32, i32* %y.addr, align 4, !dbg !9847
  %add9 = add nsw i32 %28, 1, !dbg !9848
  %29 = load i32, i32* %levels.addr, align 4, !dbg !9849
  %30 = load i32, i32* %dataSize.addr, align 4, !dbg !9850
  %call10 = call i8* @_face_getIFCo(%struct.CCGFace* %24, i32 %25, i32 %26, i32 %add8, i32 %add9, i32 %29, i32 %30), !dbg !9851
  %31 = bitcast i8* %call10 to float*, !dbg !9851
  store float* %31, float** %d, align 8, !dbg !9841
  call void @llvm.dbg.declare(metadata float* %a_cX, metadata !9852, metadata !DIExpression()), !dbg !9853
  %32 = load float*, float** %c, align 8, !dbg !9854
  %arrayidx = getelementptr inbounds float, float* %32, i64 0, !dbg !9854
  %33 = load float, float* %arrayidx, align 4, !dbg !9854
  %34 = load float*, float** %a, align 8, !dbg !9855
  %arrayidx11 = getelementptr inbounds float, float* %34, i64 0, !dbg !9855
  %35 = load float, float* %arrayidx11, align 4, !dbg !9855
  %sub = fsub float %33, %35, !dbg !9856
  store float %sub, float* %a_cX, align 4, !dbg !9853
  call void @llvm.dbg.declare(metadata float* %a_cY, metadata !9857, metadata !DIExpression()), !dbg !9858
  %36 = load float*, float** %c, align 8, !dbg !9859
  %arrayidx12 = getelementptr inbounds float, float* %36, i64 1, !dbg !9859
  %37 = load float, float* %arrayidx12, align 4, !dbg !9859
  %38 = load float*, float** %a, align 8, !dbg !9860
  %arrayidx13 = getelementptr inbounds float, float* %38, i64 1, !dbg !9860
  %39 = load float, float* %arrayidx13, align 4, !dbg !9860
  %sub14 = fsub float %37, %39, !dbg !9861
  store float %sub14, float* %a_cY, align 4, !dbg !9858
  call void @llvm.dbg.declare(metadata float* %a_cZ, metadata !9862, metadata !DIExpression()), !dbg !9863
  %40 = load float*, float** %c, align 8, !dbg !9864
  %arrayidx15 = getelementptr inbounds float, float* %40, i64 2, !dbg !9864
  %41 = load float, float* %arrayidx15, align 4, !dbg !9864
  %42 = load float*, float** %a, align 8, !dbg !9865
  %arrayidx16 = getelementptr inbounds float, float* %42, i64 2, !dbg !9865
  %43 = load float, float* %arrayidx16, align 4, !dbg !9865
  %sub17 = fsub float %41, %43, !dbg !9866
  store float %sub17, float* %a_cZ, align 4, !dbg !9863
  call void @llvm.dbg.declare(metadata float* %b_dX, metadata !9867, metadata !DIExpression()), !dbg !9868
  %44 = load float*, float** %d, align 8, !dbg !9869
  %arrayidx18 = getelementptr inbounds float, float* %44, i64 0, !dbg !9869
  %45 = load float, float* %arrayidx18, align 4, !dbg !9869
  %46 = load float*, float** %b, align 8, !dbg !9870
  %arrayidx19 = getelementptr inbounds float, float* %46, i64 0, !dbg !9870
  %47 = load float, float* %arrayidx19, align 4, !dbg !9870
  %sub20 = fsub float %45, %47, !dbg !9871
  store float %sub20, float* %b_dX, align 4, !dbg !9868
  call void @llvm.dbg.declare(metadata float* %b_dY, metadata !9872, metadata !DIExpression()), !dbg !9873
  %48 = load float*, float** %d, align 8, !dbg !9874
  %arrayidx21 = getelementptr inbounds float, float* %48, i64 1, !dbg !9874
  %49 = load float, float* %arrayidx21, align 4, !dbg !9874
  %50 = load float*, float** %b, align 8, !dbg !9875
  %arrayidx22 = getelementptr inbounds float, float* %50, i64 1, !dbg !9875
  %51 = load float, float* %arrayidx22, align 4, !dbg !9875
  %sub23 = fsub float %49, %51, !dbg !9876
  store float %sub23, float* %b_dY, align 4, !dbg !9873
  call void @llvm.dbg.declare(metadata float* %b_dZ, metadata !9877, metadata !DIExpression()), !dbg !9878
  %52 = load float*, float** %d, align 8, !dbg !9879
  %arrayidx24 = getelementptr inbounds float, float* %52, i64 2, !dbg !9879
  %53 = load float, float* %arrayidx24, align 4, !dbg !9879
  %54 = load float*, float** %b, align 8, !dbg !9880
  %arrayidx25 = getelementptr inbounds float, float* %54, i64 2, !dbg !9880
  %55 = load float, float* %arrayidx25, align 4, !dbg !9880
  %sub26 = fsub float %53, %55, !dbg !9881
  store float %sub26, float* %b_dZ, align 4, !dbg !9878
  %56 = load float, float* %b_dY, align 4, !dbg !9882
  %57 = load float, float* %a_cZ, align 4, !dbg !9883
  %mul = fmul float %56, %57, !dbg !9884
  %58 = load float, float* %b_dZ, align 4, !dbg !9885
  %59 = load float, float* %a_cY, align 4, !dbg !9886
  %mul27 = fmul float %58, %59, !dbg !9887
  %sub28 = fsub float %mul, %mul27, !dbg !9888
  %60 = load float*, float** %no.addr, align 8, !dbg !9889
  %arrayidx29 = getelementptr inbounds float, float* %60, i64 0, !dbg !9889
  store float %sub28, float* %arrayidx29, align 4, !dbg !9890
  %61 = load float, float* %b_dZ, align 4, !dbg !9891
  %62 = load float, float* %a_cX, align 4, !dbg !9892
  %mul30 = fmul float %61, %62, !dbg !9893
  %63 = load float, float* %b_dX, align 4, !dbg !9894
  %64 = load float, float* %a_cZ, align 4, !dbg !9895
  %mul31 = fmul float %63, %64, !dbg !9896
  %sub32 = fsub float %mul30, %mul31, !dbg !9897
  %65 = load float*, float** %no.addr, align 8, !dbg !9898
  %arrayidx33 = getelementptr inbounds float, float* %65, i64 1, !dbg !9898
  store float %sub32, float* %arrayidx33, align 4, !dbg !9899
  %66 = load float, float* %b_dX, align 4, !dbg !9900
  %67 = load float, float* %a_cY, align 4, !dbg !9901
  %mul34 = fmul float %66, %67, !dbg !9902
  %68 = load float, float* %b_dY, align 4, !dbg !9903
  %69 = load float, float* %a_cX, align 4, !dbg !9904
  %mul35 = fmul float %68, %69, !dbg !9905
  %sub36 = fsub float %mul34, %mul35, !dbg !9906
  %70 = load float*, float** %no.addr, align 8, !dbg !9907
  %arrayidx37 = getelementptr inbounds float, float* %70, i64 2, !dbg !9907
  store float %sub36, float* %arrayidx37, align 4, !dbg !9908
  %71 = load float*, float** %no.addr, align 8, !dbg !9909
  call void @Normalize(float* %71), !dbg !9910
  ret void, !dbg !9911
}

; Function Attrs: noinline nounwind uwtable
define internal float* @_vert_getNo(%struct.CCGVert* %v, i32 %lvl, i32 %dataSize, i32 %normalDataOffset) #0 !dbg !9912 {
entry:
  %v.addr = alloca %struct.CCGVert*, align 8
  %lvl.addr = alloca i32, align 4
  %dataSize.addr = alloca i32, align 4
  %normalDataOffset.addr = alloca i32, align 4
  store %struct.CCGVert* %v, %struct.CCGVert** %v.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGVert** %v.addr, metadata !9915, metadata !DIExpression()), !dbg !9916
  store i32 %lvl, i32* %lvl.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %lvl.addr, metadata !9917, metadata !DIExpression()), !dbg !9918
  store i32 %dataSize, i32* %dataSize.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dataSize.addr, metadata !9919, metadata !DIExpression()), !dbg !9920
  store i32 %normalDataOffset, i32* %normalDataOffset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %normalDataOffset.addr, metadata !9921, metadata !DIExpression()), !dbg !9922
  %0 = load %struct.CCGVert*, %struct.CCGVert** %v.addr, align 8, !dbg !9923
  %call = call i8* @VERT_getLevelData(%struct.CCGVert* %0), !dbg !9924
  %1 = load i32, i32* %lvl.addr, align 4, !dbg !9925
  %2 = load i32, i32* %dataSize.addr, align 4, !dbg !9926
  %mul = mul nsw i32 %1, %2, !dbg !9927
  %3 = load i32, i32* %normalDataOffset.addr, align 4, !dbg !9928
  %add = add nsw i32 %mul, %3, !dbg !9929
  %idxprom = sext i32 %add to i64, !dbg !9924
  %arrayidx = getelementptr inbounds i8, i8* %call, i64 %idxprom, !dbg !9924
  %4 = bitcast i8* %arrayidx to float*, !dbg !9930
  ret float* %4, !dbg !9931
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @_face_getVertIndex(%struct.CCGFace* %f, %struct.CCGVert* %v) #0 !dbg !9932 {
entry:
  %retval = alloca i32, align 4
  %f.addr = alloca %struct.CCGFace*, align 8
  %v.addr = alloca %struct.CCGVert*, align 8
  %i = alloca i32, align 4
  store %struct.CCGFace* %f, %struct.CCGFace** %f.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGFace** %f.addr, metadata !9935, metadata !DIExpression()), !dbg !9936
  store %struct.CCGVert* %v, %struct.CCGVert** %v.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGVert** %v.addr, metadata !9937, metadata !DIExpression()), !dbg !9938
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9939, metadata !DIExpression()), !dbg !9940
  store i32 0, i32* %i, align 4, !dbg !9941
  br label %for.cond, !dbg !9943

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !9944
  %1 = load %struct.CCGFace*, %struct.CCGFace** %f.addr, align 8, !dbg !9946
  %numVerts = getelementptr inbounds %struct.CCGFace, %struct.CCGFace* %1, i32 0, i32 2, !dbg !9947
  %2 = load i16, i16* %numVerts, align 8, !dbg !9947
  %conv = sext i16 %2 to i32, !dbg !9946
  %cmp = icmp slt i32 %0, %conv, !dbg !9948
  br i1 %cmp, label %for.body, label %for.end, !dbg !9949

for.body:                                         ; preds = %for.cond
  %3 = load %struct.CCGFace*, %struct.CCGFace** %f.addr, align 8, !dbg !9950
  %call = call %struct.CCGVert** @FACE_getVerts(%struct.CCGFace* %3), !dbg !9952
  %4 = load i32, i32* %i, align 4, !dbg !9953
  %idxprom = sext i32 %4 to i64, !dbg !9952
  %arrayidx = getelementptr inbounds %struct.CCGVert*, %struct.CCGVert** %call, i64 %idxprom, !dbg !9952
  %5 = load %struct.CCGVert*, %struct.CCGVert** %arrayidx, align 8, !dbg !9952
  %6 = load %struct.CCGVert*, %struct.CCGVert** %v.addr, align 8, !dbg !9954
  %cmp2 = icmp eq %struct.CCGVert* %5, %6, !dbg !9955
  br i1 %cmp2, label %if.then, label %if.end, !dbg !9956

if.then:                                          ; preds = %for.body
  %7 = load i32, i32* %i, align 4, !dbg !9957
  store i32 %7, i32* %retval, align 4, !dbg !9958
  br label %return, !dbg !9958

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !9954

for.inc:                                          ; preds = %if.end
  %8 = load i32, i32* %i, align 4, !dbg !9959
  %inc = add nsw i32 %8, 1, !dbg !9959
  store i32 %inc, i32* %i, align 4, !dbg !9959
  br label %for.cond, !dbg !9960, !llvm.loop !9961

for.end:                                          ; preds = %for.cond
  store i32 -1, i32* %retval, align 4, !dbg !9963
  br label %return, !dbg !9963

return:                                           ; preds = %for.end, %if.then
  %9 = load i32, i32* %retval, align 4, !dbg !9964
  ret i32 %9, !dbg !9964
}

; Function Attrs: noinline nounwind uwtable
define internal void @Normalize(float* %no) #0 !dbg !9965 {
entry:
  %no.addr = alloca float*, align 8
  %length = alloca float, align 4
  %length_inv = alloca float, align 4
  %_a = alloca float*, align 8
  store float* %no, float** %no.addr, align 8
  call void @llvm.dbg.declare(metadata float** %no.addr, metadata !9968, metadata !DIExpression()), !dbg !9969
  call void @llvm.dbg.declare(metadata float* %length, metadata !9970, metadata !DIExpression()), !dbg !9971
  %0 = load float*, float** %no.addr, align 8, !dbg !9972
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !9972
  %1 = load float, float* %arrayidx, align 4, !dbg !9972
  %2 = load float*, float** %no.addr, align 8, !dbg !9973
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !9973
  %3 = load float, float* %arrayidx1, align 4, !dbg !9973
  %mul = fmul float %1, %3, !dbg !9974
  %4 = load float*, float** %no.addr, align 8, !dbg !9975
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 1, !dbg !9975
  %5 = load float, float* %arrayidx2, align 4, !dbg !9975
  %6 = load float*, float** %no.addr, align 8, !dbg !9976
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 1, !dbg !9976
  %7 = load float, float* %arrayidx3, align 4, !dbg !9976
  %mul4 = fmul float %5, %7, !dbg !9977
  %add = fadd float %mul, %mul4, !dbg !9978
  %8 = load float*, float** %no.addr, align 8, !dbg !9979
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 2, !dbg !9979
  %9 = load float, float* %arrayidx5, align 4, !dbg !9979
  %10 = load float*, float** %no.addr, align 8, !dbg !9980
  %arrayidx6 = getelementptr inbounds float, float* %10, i64 2, !dbg !9980
  %11 = load float, float* %arrayidx6, align 4, !dbg !9980
  %mul7 = fmul float %9, %11, !dbg !9981
  %add8 = fadd float %add, %mul7, !dbg !9982
  %call = call float @sqrtf(float %add8) #6, !dbg !9983
  store float %call, float* %length, align 4, !dbg !9971
  %12 = load float, float* %length, align 4, !dbg !9984
  %cmp = fcmp ogt float %12, 0x38AA95A5C0000000, !dbg !9986
  br i1 %cmp, label %if.then, label %if.else, !dbg !9987

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata float* %length_inv, metadata !9988, metadata !DIExpression()), !dbg !9990
  %13 = load float, float* %length, align 4, !dbg !9991
  %div = fdiv float 1.000000e+00, %13, !dbg !9992
  store float %div, float* %length_inv, align 4, !dbg !9990
  %14 = load float, float* %length_inv, align 4, !dbg !9993
  %15 = load float*, float** %no.addr, align 8, !dbg !9994
  %arrayidx9 = getelementptr inbounds float, float* %15, i64 0, !dbg !9994
  %16 = load float, float* %arrayidx9, align 4, !dbg !9995
  %mul10 = fmul float %16, %14, !dbg !9995
  store float %mul10, float* %arrayidx9, align 4, !dbg !9995
  %17 = load float, float* %length_inv, align 4, !dbg !9996
  %18 = load float*, float** %no.addr, align 8, !dbg !9997
  %arrayidx11 = getelementptr inbounds float, float* %18, i64 1, !dbg !9997
  %19 = load float, float* %arrayidx11, align 4, !dbg !9998
  %mul12 = fmul float %19, %17, !dbg !9998
  store float %mul12, float* %arrayidx11, align 4, !dbg !9998
  %20 = load float, float* %length_inv, align 4, !dbg !9999
  %21 = load float*, float** %no.addr, align 8, !dbg !10000
  %arrayidx13 = getelementptr inbounds float, float* %21, i64 2, !dbg !10000
  %22 = load float, float* %arrayidx13, align 4, !dbg !10001
  %mul14 = fmul float %22, %20, !dbg !10001
  store float %mul14, float* %arrayidx13, align 4, !dbg !10001
  br label %if.end, !dbg !10002

if.else:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata float** %_a, metadata !10003, metadata !DIExpression()), !dbg !10006
  %23 = load float*, float** %no.addr, align 8, !dbg !10006
  store float* %23, float** %_a, align 8, !dbg !10006
  %24 = load float*, float** %_a, align 8, !dbg !10006
  %arrayidx15 = getelementptr inbounds float, float* %24, i64 2, !dbg !10006
  store float 0.000000e+00, float* %arrayidx15, align 4, !dbg !10006
  %25 = load float*, float** %_a, align 8, !dbg !10006
  %arrayidx16 = getelementptr inbounds float, float* %25, i64 1, !dbg !10006
  store float 0.000000e+00, float* %arrayidx16, align 4, !dbg !10006
  %26 = load float*, float** %_a, align 8, !dbg !10006
  %arrayidx17 = getelementptr inbounds float, float* %26, i64 0, !dbg !10006
  store float 0.000000e+00, float* %arrayidx17, align 4, !dbg !10006
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !10007
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @_face_getEdgeIndex(%struct.CCGFace* %f, %struct.CCGEdge* %e) #0 !dbg !10008 {
entry:
  %retval = alloca i32, align 4
  %f.addr = alloca %struct.CCGFace*, align 8
  %e.addr = alloca %struct.CCGEdge*, align 8
  %i = alloca i32, align 4
  store %struct.CCGFace* %f, %struct.CCGFace** %f.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGFace** %f.addr, metadata !10009, metadata !DIExpression()), !dbg !10010
  store %struct.CCGEdge* %e, %struct.CCGEdge** %e.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGEdge** %e.addr, metadata !10011, metadata !DIExpression()), !dbg !10012
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10013, metadata !DIExpression()), !dbg !10014
  store i32 0, i32* %i, align 4, !dbg !10015
  br label %for.cond, !dbg !10017

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !10018
  %1 = load %struct.CCGFace*, %struct.CCGFace** %f.addr, align 8, !dbg !10020
  %numVerts = getelementptr inbounds %struct.CCGFace, %struct.CCGFace* %1, i32 0, i32 2, !dbg !10021
  %2 = load i16, i16* %numVerts, align 8, !dbg !10021
  %conv = sext i16 %2 to i32, !dbg !10020
  %cmp = icmp slt i32 %0, %conv, !dbg !10022
  br i1 %cmp, label %for.body, label %for.end, !dbg !10023

for.body:                                         ; preds = %for.cond
  %3 = load %struct.CCGFace*, %struct.CCGFace** %f.addr, align 8, !dbg !10024
  %call = call %struct.CCGEdge** @FACE_getEdges(%struct.CCGFace* %3), !dbg !10026
  %4 = load i32, i32* %i, align 4, !dbg !10027
  %idxprom = sext i32 %4 to i64, !dbg !10026
  %arrayidx = getelementptr inbounds %struct.CCGEdge*, %struct.CCGEdge** %call, i64 %idxprom, !dbg !10026
  %5 = load %struct.CCGEdge*, %struct.CCGEdge** %arrayidx, align 8, !dbg !10026
  %6 = load %struct.CCGEdge*, %struct.CCGEdge** %e.addr, align 8, !dbg !10028
  %cmp2 = icmp eq %struct.CCGEdge* %5, %6, !dbg !10029
  br i1 %cmp2, label %if.then, label %if.end, !dbg !10030

if.then:                                          ; preds = %for.body
  %7 = load i32, i32* %i, align 4, !dbg !10031
  store i32 %7, i32* %retval, align 4, !dbg !10032
  br label %return, !dbg !10032

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !10028

for.inc:                                          ; preds = %if.end
  %8 = load i32, i32* %i, align 4, !dbg !10033
  %inc = add nsw i32 %8, 1, !dbg !10033
  store i32 %inc, i32* %i, align 4, !dbg !10033
  br label %for.cond, !dbg !10034, !llvm.loop !10035

for.end:                                          ; preds = %for.cond
  store i32 -1, i32* %retval, align 4, !dbg !10037
  br label %return, !dbg !10037

return:                                           ; preds = %for.end, %if.then
  %9 = load i32, i32* %retval, align 4, !dbg !10038
  ret i32 %9, !dbg !10038
}

; Function Attrs: noinline nounwind uwtable
define internal float* @_face_getIFNoEdge(%struct.CCGFace* %f, %struct.CCGEdge* %e, i32 %f_ed_idx, i32 %lvl, i32 %eX, i32 %eY, i32 %levels, i32 %dataSize, i32 %normalDataOffset) #0 !dbg !10039 {
entry:
  %f.addr = alloca %struct.CCGFace*, align 8
  %e.addr = alloca %struct.CCGEdge*, align 8
  %f_ed_idx.addr = alloca i32, align 4
  %lvl.addr = alloca i32, align 4
  %eX.addr = alloca i32, align 4
  %eY.addr = alloca i32, align 4
  %levels.addr = alloca i32, align 4
  %dataSize.addr = alloca i32, align 4
  %normalDataOffset.addr = alloca i32, align 4
  store %struct.CCGFace* %f, %struct.CCGFace** %f.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGFace** %f.addr, metadata !10042, metadata !DIExpression()), !dbg !10043
  store %struct.CCGEdge* %e, %struct.CCGEdge** %e.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGEdge** %e.addr, metadata !10044, metadata !DIExpression()), !dbg !10045
  store i32 %f_ed_idx, i32* %f_ed_idx.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %f_ed_idx.addr, metadata !10046, metadata !DIExpression()), !dbg !10047
  store i32 %lvl, i32* %lvl.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %lvl.addr, metadata !10048, metadata !DIExpression()), !dbg !10049
  store i32 %eX, i32* %eX.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %eX.addr, metadata !10050, metadata !DIExpression()), !dbg !10051
  store i32 %eY, i32* %eY.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %eY.addr, metadata !10052, metadata !DIExpression()), !dbg !10053
  store i32 %levels, i32* %levels.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %levels.addr, metadata !10054, metadata !DIExpression()), !dbg !10055
  store i32 %dataSize, i32* %dataSize.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dataSize.addr, metadata !10056, metadata !DIExpression()), !dbg !10057
  store i32 %normalDataOffset, i32* %normalDataOffset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %normalDataOffset.addr, metadata !10058, metadata !DIExpression()), !dbg !10059
  %0 = load %struct.CCGFace*, %struct.CCGFace** %f.addr, align 8, !dbg !10060
  %1 = load %struct.CCGEdge*, %struct.CCGEdge** %e.addr, align 8, !dbg !10061
  %2 = load i32, i32* %f_ed_idx.addr, align 4, !dbg !10062
  %3 = load i32, i32* %lvl.addr, align 4, !dbg !10063
  %4 = load i32, i32* %eX.addr, align 4, !dbg !10064
  %5 = load i32, i32* %eY.addr, align 4, !dbg !10065
  %6 = load i32, i32* %levels.addr, align 4, !dbg !10066
  %7 = load i32, i32* %dataSize.addr, align 4, !dbg !10067
  %call = call i8* @_face_getIFCoEdge(%struct.CCGFace* %0, %struct.CCGEdge* %1, i32 %2, i32 %3, i32 %4, i32 %5, i32 %6, i32 %7), !dbg !10068
  %8 = load i32, i32* %normalDataOffset.addr, align 4, !dbg !10069
  %idx.ext = sext i32 %8 to i64, !dbg !10070
  %add.ptr = getelementptr inbounds i8, i8* %call, i64 %idx.ext, !dbg !10070
  %9 = bitcast i8* %add.ptr to float*, !dbg !10071
  ret float* %9, !dbg !10072
}

; Function Attrs: noinline nounwind uwtable
define internal i8* @_face_getIENo(%struct.CCGFace* %f, i32 %lvl, i32 %S, i32 %x, i32 %levels, i32 %dataSize, i32 %normalDataOffset) #0 !dbg !10073 {
entry:
  %f.addr = alloca %struct.CCGFace*, align 8
  %lvl.addr = alloca i32, align 4
  %S.addr = alloca i32, align 4
  %x.addr = alloca i32, align 4
  %levels.addr = alloca i32, align 4
  %dataSize.addr = alloca i32, align 4
  %normalDataOffset.addr = alloca i32, align 4
  %maxGridSize = alloca i32, align 4
  %spacing = alloca i32, align 4
  %gridBase = alloca i8*, align 8
  store %struct.CCGFace* %f, %struct.CCGFace** %f.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGFace** %f.addr, metadata !10074, metadata !DIExpression()), !dbg !10075
  store i32 %lvl, i32* %lvl.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %lvl.addr, metadata !10076, metadata !DIExpression()), !dbg !10077
  store i32 %S, i32* %S.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %S.addr, metadata !10078, metadata !DIExpression()), !dbg !10079
  store i32 %x, i32* %x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !10080, metadata !DIExpression()), !dbg !10081
  store i32 %levels, i32* %levels.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %levels.addr, metadata !10082, metadata !DIExpression()), !dbg !10083
  store i32 %dataSize, i32* %dataSize.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dataSize.addr, metadata !10084, metadata !DIExpression()), !dbg !10085
  store i32 %normalDataOffset, i32* %normalDataOffset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %normalDataOffset.addr, metadata !10086, metadata !DIExpression()), !dbg !10087
  call void @llvm.dbg.declare(metadata i32* %maxGridSize, metadata !10088, metadata !DIExpression()), !dbg !10089
  %0 = load i32, i32* %levels.addr, align 4, !dbg !10090
  %call = call i32 @ccg_gridsize(i32 %0), !dbg !10091
  store i32 %call, i32* %maxGridSize, align 4, !dbg !10089
  call void @llvm.dbg.declare(metadata i32* %spacing, metadata !10092, metadata !DIExpression()), !dbg !10093
  %1 = load i32, i32* %levels.addr, align 4, !dbg !10094
  %2 = load i32, i32* %lvl.addr, align 4, !dbg !10095
  %call1 = call i32 @ccg_spacing(i32 %1, i32 %2), !dbg !10096
  store i32 %call1, i32* %spacing, align 4, !dbg !10093
  call void @llvm.dbg.declare(metadata i8** %gridBase, metadata !10097, metadata !DIExpression()), !dbg !10098
  %3 = load %struct.CCGFace*, %struct.CCGFace** %f.addr, align 8, !dbg !10099
  %call2 = call i8* @FACE_getCenterData(%struct.CCGFace* %3), !dbg !10100
  %4 = load i32, i32* %dataSize.addr, align 4, !dbg !10101
  %5 = load i32, i32* %S.addr, align 4, !dbg !10102
  %6 = load i32, i32* %maxGridSize, align 4, !dbg !10103
  %7 = load i32, i32* %maxGridSize, align 4, !dbg !10104
  %8 = load i32, i32* %maxGridSize, align 4, !dbg !10105
  %mul = mul nsw i32 %7, %8, !dbg !10106
  %add = add nsw i32 %6, %mul, !dbg !10107
  %mul3 = mul nsw i32 %5, %add, !dbg !10108
  %add4 = add nsw i32 1, %mul3, !dbg !10109
  %mul5 = mul nsw i32 %4, %add4, !dbg !10110
  %idx.ext = sext i32 %mul5 to i64, !dbg !10111
  %add.ptr = getelementptr inbounds i8, i8* %call2, i64 %idx.ext, !dbg !10111
  store i8* %add.ptr, i8** %gridBase, align 8, !dbg !10098
  %9 = load i8*, i8** %gridBase, align 8, !dbg !10112
  %10 = load i32, i32* %dataSize.addr, align 4, !dbg !10113
  %11 = load i32, i32* %x.addr, align 4, !dbg !10114
  %mul6 = mul nsw i32 %10, %11, !dbg !10115
  %12 = load i32, i32* %spacing, align 4, !dbg !10116
  %mul7 = mul nsw i32 %mul6, %12, !dbg !10117
  %13 = load i32, i32* %normalDataOffset.addr, align 4, !dbg !10118
  %add8 = add nsw i32 %mul7, %13, !dbg !10119
  %idxprom = sext i32 %add8 to i64, !dbg !10112
  %arrayidx = getelementptr inbounds i8, i8* %9, i64 %idxprom, !dbg !10112
  ret i8* %arrayidx, !dbg !10120
}

; Function Attrs: noinline nounwind uwtable
define internal float* @_edge_getNo(%struct.CCGEdge* %e, i32 %lvl, i32 %x, i32 %dataSize, i32 %normalDataOffset) #0 !dbg !10121 {
entry:
  %e.addr = alloca %struct.CCGEdge*, align 8
  %lvl.addr = alloca i32, align 4
  %x.addr = alloca i32, align 4
  %dataSize.addr = alloca i32, align 4
  %normalDataOffset.addr = alloca i32, align 4
  %levelBase = alloca i32, align 4
  store %struct.CCGEdge* %e, %struct.CCGEdge** %e.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGEdge** %e.addr, metadata !10124, metadata !DIExpression()), !dbg !10125
  store i32 %lvl, i32* %lvl.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %lvl.addr, metadata !10126, metadata !DIExpression()), !dbg !10127
  store i32 %x, i32* %x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !10128, metadata !DIExpression()), !dbg !10129
  store i32 %dataSize, i32* %dataSize.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dataSize.addr, metadata !10130, metadata !DIExpression()), !dbg !10131
  store i32 %normalDataOffset, i32* %normalDataOffset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %normalDataOffset.addr, metadata !10132, metadata !DIExpression()), !dbg !10133
  call void @llvm.dbg.declare(metadata i32* %levelBase, metadata !10134, metadata !DIExpression()), !dbg !10135
  %0 = load i32, i32* %lvl.addr, align 4, !dbg !10136
  %call = call i32 @ccg_edgebase(i32 %0), !dbg !10137
  store i32 %call, i32* %levelBase, align 4, !dbg !10135
  %1 = load %struct.CCGEdge*, %struct.CCGEdge** %e.addr, align 8, !dbg !10138
  %call1 = call i8* @EDGE_getLevelData(%struct.CCGEdge* %1), !dbg !10139
  %2 = load i32, i32* %dataSize.addr, align 4, !dbg !10140
  %3 = load i32, i32* %levelBase, align 4, !dbg !10141
  %4 = load i32, i32* %x.addr, align 4, !dbg !10142
  %add = add nsw i32 %3, %4, !dbg !10143
  %mul = mul nsw i32 %2, %add, !dbg !10144
  %5 = load i32, i32* %normalDataOffset.addr, align 4, !dbg !10145
  %add2 = add nsw i32 %mul, %5, !dbg !10146
  %idxprom = sext i32 %add2 to i64, !dbg !10139
  %arrayidx = getelementptr inbounds i8, i8* %call1, i64 %idxprom, !dbg !10139
  %6 = bitcast i8* %arrayidx to float*, !dbg !10147
  ret float* %6, !dbg !10148
}

; Function Attrs: nounwind
declare dso_local float @sqrtf(float) #4

; Function Attrs: noinline nounwind uwtable
define internal i8* @_face_getIFCoEdge(%struct.CCGFace* %f, %struct.CCGEdge* %e, i32 %f_ed_idx, i32 %lvl, i32 %eX, i32 %eY, i32 %levels, i32 %dataSize) #0 !dbg !10149 {
entry:
  %f.addr = alloca %struct.CCGFace*, align 8
  %e.addr = alloca %struct.CCGEdge*, align 8
  %f_ed_idx.addr = alloca i32, align 4
  %lvl.addr = alloca i32, align 4
  %eX.addr = alloca i32, align 4
  %eY.addr = alloca i32, align 4
  %levels.addr = alloca i32, align 4
  %dataSize.addr = alloca i32, align 4
  %maxGridSize = alloca i32, align 4
  %spacing = alloca i32, align 4
  %x = alloca i32, align 4
  %y = alloca i32, align 4
  %cx = alloca i32, align 4
  %cy = alloca i32, align 4
  store %struct.CCGFace* %f, %struct.CCGFace** %f.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGFace** %f.addr, metadata !10152, metadata !DIExpression()), !dbg !10153
  store %struct.CCGEdge* %e, %struct.CCGEdge** %e.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGEdge** %e.addr, metadata !10154, metadata !DIExpression()), !dbg !10155
  store i32 %f_ed_idx, i32* %f_ed_idx.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %f_ed_idx.addr, metadata !10156, metadata !DIExpression()), !dbg !10157
  store i32 %lvl, i32* %lvl.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %lvl.addr, metadata !10158, metadata !DIExpression()), !dbg !10159
  store i32 %eX, i32* %eX.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %eX.addr, metadata !10160, metadata !DIExpression()), !dbg !10161
  store i32 %eY, i32* %eY.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %eY.addr, metadata !10162, metadata !DIExpression()), !dbg !10163
  store i32 %levels, i32* %levels.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %levels.addr, metadata !10164, metadata !DIExpression()), !dbg !10165
  store i32 %dataSize, i32* %dataSize.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dataSize.addr, metadata !10166, metadata !DIExpression()), !dbg !10167
  call void @llvm.dbg.declare(metadata i32* %maxGridSize, metadata !10168, metadata !DIExpression()), !dbg !10169
  %0 = load i32, i32* %levels.addr, align 4, !dbg !10170
  %call = call i32 @ccg_gridsize(i32 %0), !dbg !10171
  store i32 %call, i32* %maxGridSize, align 4, !dbg !10169
  call void @llvm.dbg.declare(metadata i32* %spacing, metadata !10172, metadata !DIExpression()), !dbg !10173
  %1 = load i32, i32* %levels.addr, align 4, !dbg !10174
  %2 = load i32, i32* %lvl.addr, align 4, !dbg !10175
  %call1 = call i32 @ccg_spacing(i32 %1, i32 %2), !dbg !10176
  store i32 %call1, i32* %spacing, align 4, !dbg !10173
  call void @llvm.dbg.declare(metadata i32* %x, metadata !10177, metadata !DIExpression()), !dbg !10178
  call void @llvm.dbg.declare(metadata i32* %y, metadata !10179, metadata !DIExpression()), !dbg !10180
  call void @llvm.dbg.declare(metadata i32* %cx, metadata !10181, metadata !DIExpression()), !dbg !10182
  call void @llvm.dbg.declare(metadata i32* %cy, metadata !10183, metadata !DIExpression()), !dbg !10184
  %3 = load i32, i32* %eX.addr, align 4, !dbg !10185
  %4 = load i32, i32* %spacing, align 4, !dbg !10186
  %mul = mul nsw i32 %3, %4, !dbg !10187
  store i32 %mul, i32* %eX.addr, align 4, !dbg !10188
  %5 = load i32, i32* %eY.addr, align 4, !dbg !10189
  %6 = load i32, i32* %spacing, align 4, !dbg !10190
  %mul2 = mul nsw i32 %5, %6, !dbg !10191
  store i32 %mul2, i32* %eY.addr, align 4, !dbg !10192
  %7 = load %struct.CCGEdge*, %struct.CCGEdge** %e.addr, align 8, !dbg !10193
  %v0 = getelementptr inbounds %struct.CCGEdge, %struct.CCGEdge* %7, i32 0, i32 5, !dbg !10195
  %8 = load %struct.CCGVert*, %struct.CCGVert** %v0, align 8, !dbg !10195
  %9 = load %struct.CCGFace*, %struct.CCGFace** %f.addr, align 8, !dbg !10196
  %call3 = call %struct.CCGVert** @FACE_getVerts(%struct.CCGFace* %9), !dbg !10197
  %10 = load i32, i32* %f_ed_idx.addr, align 4, !dbg !10198
  %idxprom = sext i32 %10 to i64, !dbg !10197
  %arrayidx = getelementptr inbounds %struct.CCGVert*, %struct.CCGVert** %call3, i64 %idxprom, !dbg !10197
  %11 = load %struct.CCGVert*, %struct.CCGVert** %arrayidx, align 8, !dbg !10197
  %cmp = icmp ne %struct.CCGVert* %8, %11, !dbg !10199
  br i1 %cmp, label %if.then, label %if.end, !dbg !10200

if.then:                                          ; preds = %entry
  %12 = load i32, i32* %maxGridSize, align 4, !dbg !10201
  %mul4 = mul nsw i32 %12, 2, !dbg !10203
  %sub = sub nsw i32 %mul4, 1, !dbg !10204
  %sub5 = sub nsw i32 %sub, 1, !dbg !10205
  %13 = load i32, i32* %eX.addr, align 4, !dbg !10206
  %sub6 = sub nsw i32 %sub5, %13, !dbg !10207
  store i32 %sub6, i32* %eX.addr, align 4, !dbg !10208
  br label %if.end, !dbg !10209

if.end:                                           ; preds = %if.then, %entry
  %14 = load i32, i32* %maxGridSize, align 4, !dbg !10210
  %sub7 = sub nsw i32 %14, 1, !dbg !10211
  %15 = load i32, i32* %eX.addr, align 4, !dbg !10212
  %sub8 = sub nsw i32 %sub7, %15, !dbg !10213
  store i32 %sub8, i32* %y, align 4, !dbg !10214
  %16 = load i32, i32* %maxGridSize, align 4, !dbg !10215
  %sub9 = sub nsw i32 %16, 1, !dbg !10216
  %17 = load i32, i32* %eY.addr, align 4, !dbg !10217
  %sub10 = sub nsw i32 %sub9, %17, !dbg !10218
  store i32 %sub10, i32* %x, align 4, !dbg !10219
  %18 = load i32, i32* %x, align 4, !dbg !10220
  %cmp11 = icmp slt i32 %18, 0, !dbg !10222
  br i1 %cmp11, label %if.then12, label %if.else, !dbg !10223

if.then12:                                        ; preds = %if.end
  %19 = load i32, i32* %f_ed_idx.addr, align 4, !dbg !10224
  %20 = load %struct.CCGFace*, %struct.CCGFace** %f.addr, align 8, !dbg !10226
  %numVerts = getelementptr inbounds %struct.CCGFace, %struct.CCGFace* %20, i32 0, i32 2, !dbg !10227
  %21 = load i16, i16* %numVerts, align 8, !dbg !10227
  %conv = sext i16 %21 to i32, !dbg !10226
  %add = add nsw i32 %19, %conv, !dbg !10228
  %sub13 = sub nsw i32 %add, 1, !dbg !10229
  %22 = load %struct.CCGFace*, %struct.CCGFace** %f.addr, align 8, !dbg !10230
  %numVerts14 = getelementptr inbounds %struct.CCGFace, %struct.CCGFace* %22, i32 0, i32 2, !dbg !10231
  %23 = load i16, i16* %numVerts14, align 8, !dbg !10231
  %conv15 = sext i16 %23 to i32, !dbg !10230
  %rem = srem i32 %sub13, %conv15, !dbg !10232
  store i32 %rem, i32* %f_ed_idx.addr, align 4, !dbg !10233
  %24 = load i32, i32* %y, align 4, !dbg !10234
  store i32 %24, i32* %cx, align 4, !dbg !10235
  %25 = load i32, i32* %x, align 4, !dbg !10236
  %sub16 = sub nsw i32 0, %25, !dbg !10237
  store i32 %sub16, i32* %cy, align 4, !dbg !10238
  br label %if.end27, !dbg !10239

if.else:                                          ; preds = %if.end
  %26 = load i32, i32* %y, align 4, !dbg !10240
  %cmp17 = icmp slt i32 %26, 0, !dbg !10242
  br i1 %cmp17, label %if.then19, label %if.else25, !dbg !10243

if.then19:                                        ; preds = %if.else
  %27 = load i32, i32* %f_ed_idx.addr, align 4, !dbg !10244
  %add20 = add nsw i32 %27, 1, !dbg !10246
  %28 = load %struct.CCGFace*, %struct.CCGFace** %f.addr, align 8, !dbg !10247
  %numVerts21 = getelementptr inbounds %struct.CCGFace, %struct.CCGFace* %28, i32 0, i32 2, !dbg !10248
  %29 = load i16, i16* %numVerts21, align 8, !dbg !10248
  %conv22 = sext i16 %29 to i32, !dbg !10247
  %rem23 = srem i32 %add20, %conv22, !dbg !10249
  store i32 %rem23, i32* %f_ed_idx.addr, align 4, !dbg !10250
  %30 = load i32, i32* %y, align 4, !dbg !10251
  %sub24 = sub nsw i32 0, %30, !dbg !10252
  store i32 %sub24, i32* %cx, align 4, !dbg !10253
  %31 = load i32, i32* %x, align 4, !dbg !10254
  store i32 %31, i32* %cy, align 4, !dbg !10255
  br label %if.end26, !dbg !10256

if.else25:                                        ; preds = %if.else
  %32 = load i32, i32* %x, align 4, !dbg !10257
  store i32 %32, i32* %cx, align 4, !dbg !10259
  %33 = load i32, i32* %y, align 4, !dbg !10260
  store i32 %33, i32* %cy, align 4, !dbg !10261
  br label %if.end26

if.end26:                                         ; preds = %if.else25, %if.then19
  br label %if.end27

if.end27:                                         ; preds = %if.end26, %if.then12
  %34 = load %struct.CCGFace*, %struct.CCGFace** %f.addr, align 8, !dbg !10262
  %35 = load i32, i32* %levels.addr, align 4, !dbg !10263
  %36 = load i32, i32* %f_ed_idx.addr, align 4, !dbg !10264
  %37 = load i32, i32* %cx, align 4, !dbg !10265
  %38 = load i32, i32* %cy, align 4, !dbg !10266
  %39 = load i32, i32* %levels.addr, align 4, !dbg !10267
  %40 = load i32, i32* %dataSize.addr, align 4, !dbg !10268
  %call28 = call i8* @_face_getIFCo(%struct.CCGFace* %34, i32 %35, i32 %36, i32 %37, i32 %38, i32 %39, i32 %40), !dbg !10269
  ret i8* %call28, !dbg !10270
}

; Function Attrs: noinline nounwind uwtable
define internal void @VertDataAvg4(float* %v, float* %a, float* %b, float* %c, float* %d, %struct.CCGSubSurf* %ss) #0 !dbg !10271 {
entry:
  %v.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  %c.addr = alloca float*, align 8
  %d.addr = alloca float*, align 8
  %ss.addr = alloca %struct.CCGSubSurf*, align 8
  %i = alloca i32, align 4
  store float* %v, float** %v.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v.addr, metadata !10274, metadata !DIExpression()), !dbg !10275
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !10276, metadata !DIExpression()), !dbg !10277
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !10278, metadata !DIExpression()), !dbg !10279
  store float* %c, float** %c.addr, align 8
  call void @llvm.dbg.declare(metadata float** %c.addr, metadata !10280, metadata !DIExpression()), !dbg !10281
  store float* %d, float** %d.addr, align 8
  call void @llvm.dbg.declare(metadata float** %d.addr, metadata !10282, metadata !DIExpression()), !dbg !10283
  store %struct.CCGSubSurf* %ss, %struct.CCGSubSurf** %ss.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGSubSurf** %ss.addr, metadata !10284, metadata !DIExpression()), !dbg !10285
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10286, metadata !DIExpression()), !dbg !10287
  store i32 0, i32* %i, align 4, !dbg !10288
  br label %for.cond, !dbg !10290

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !10291
  %1 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !10293
  %meshIFC = getelementptr inbounds %struct.CCGSubSurf, %struct.CCGSubSurf* %1, i32 0, i32 3, !dbg !10294
  %numLayers = getelementptr inbounds %struct.CCGMeshIFC, %struct.CCGMeshIFC* %meshIFC, i32 0, i32 3, !dbg !10295
  %2 = load i32, i32* %numLayers, align 4, !dbg !10295
  %cmp = icmp slt i32 %0, %2, !dbg !10296
  br i1 %cmp, label %for.body, label %for.end, !dbg !10297

for.body:                                         ; preds = %for.cond
  %3 = load float*, float** %a.addr, align 8, !dbg !10298
  %4 = load i32, i32* %i, align 4, !dbg !10299
  %idxprom = sext i32 %4 to i64, !dbg !10298
  %arrayidx = getelementptr inbounds float, float* %3, i64 %idxprom, !dbg !10298
  %5 = load float, float* %arrayidx, align 4, !dbg !10298
  %6 = load float*, float** %b.addr, align 8, !dbg !10300
  %7 = load i32, i32* %i, align 4, !dbg !10301
  %idxprom1 = sext i32 %7 to i64, !dbg !10300
  %arrayidx2 = getelementptr inbounds float, float* %6, i64 %idxprom1, !dbg !10300
  %8 = load float, float* %arrayidx2, align 4, !dbg !10300
  %add = fadd float %5, %8, !dbg !10302
  %9 = load float*, float** %c.addr, align 8, !dbg !10303
  %10 = load i32, i32* %i, align 4, !dbg !10304
  %idxprom3 = sext i32 %10 to i64, !dbg !10303
  %arrayidx4 = getelementptr inbounds float, float* %9, i64 %idxprom3, !dbg !10303
  %11 = load float, float* %arrayidx4, align 4, !dbg !10303
  %add5 = fadd float %add, %11, !dbg !10305
  %12 = load float*, float** %d.addr, align 8, !dbg !10306
  %13 = load i32, i32* %i, align 4, !dbg !10307
  %idxprom6 = sext i32 %13 to i64, !dbg !10306
  %arrayidx7 = getelementptr inbounds float, float* %12, i64 %idxprom6, !dbg !10306
  %14 = load float, float* %arrayidx7, align 4, !dbg !10306
  %add8 = fadd float %add5, %14, !dbg !10308
  %mul = fmul float %add8, 2.500000e-01, !dbg !10309
  %15 = load float*, float** %v.addr, align 8, !dbg !10310
  %16 = load i32, i32* %i, align 4, !dbg !10311
  %idxprom9 = sext i32 %16 to i64, !dbg !10310
  %arrayidx10 = getelementptr inbounds float, float* %15, i64 %idxprom9, !dbg !10310
  store float %mul, float* %arrayidx10, align 4, !dbg !10312
  br label %for.inc, !dbg !10310

for.inc:                                          ; preds = %for.body
  %17 = load i32, i32* %i, align 4, !dbg !10313
  %inc = add nsw i32 %17, 1, !dbg !10313
  store i32 %inc, i32* %i, align 4, !dbg !10313
  br label %for.cond, !dbg !10314, !llvm.loop !10315

for.end:                                          ; preds = %for.cond
  ret void, !dbg !10317
}

attributes #0 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable willreturn }
attributes #2 = { argmemonly nounwind willreturn }
attributes #3 = { nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readonly }
attributes #6 = { nounwind }

!llvm.dbg.cu = !{!30}
!llvm.module.flags = !{!152, !153, !154}
!llvm.ident = !{!155}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "ifc", scope: !2, file: !3, line: 239, type: !7, isLocal: true, isDefinition: true)
!2 = distinct !DISubprogram(name: "_getStandardAllocatorIFC", scope: !3, file: !3, line: 237, type: !4, scopeLine: 238, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !30, retainedNodes: !151)
!3 = !DIFile(filename: "blender/source/blender/blenkernel/intern/CCGSubSurf.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!4 = !DISubroutineType(types: !5)
!5 = !{!6}
!6 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!7 = !DIDerivedType(tag: DW_TAG_typedef, name: "CCGAllocatorIFC", file: !8, line: 54, baseType: !9)
!8 = !DIFile(filename: "blender/source/blender/blenkernel/intern/CCGSubSurf.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!9 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CCGAllocatorIFC", file: !8, line: 49, size: 256, elements: !10)
!10 = !{!11, !18, !22, !26}
!11 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !9, file: !8, line: 50, baseType: !12, size: 64)
!12 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13, size: 64)
!13 = !DISubroutineType(types: !14)
!14 = !{!15, !16, !17}
!15 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!16 = !DIDerivedType(tag: DW_TAG_typedef, name: "CCGAllocatorHDL", file: !8, line: 47, baseType: !15)
!17 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!18 = !DIDerivedType(tag: DW_TAG_member, name: "realloc", scope: !9, file: !8, line: 51, baseType: !19, size: 64, offset: 64)
!19 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !20, size: 64)
!20 = !DISubroutineType(types: !21)
!21 = !{!15, !16, !15, !17, !17}
!22 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !9, file: !8, line: 52, baseType: !23, size: 64, offset: 128)
!23 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !24, size: 64)
!24 = !DISubroutineType(types: !25)
!25 = !{null, !16, !15}
!26 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !9, file: !8, line: 53, baseType: !27, size: 64, offset: 192)
!27 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !28, size: 64)
!28 = !DISubroutineType(types: !29)
!29 = !{null, !16}
!30 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !31, retainedTypes: !56, globals: !145, splitDebugInlining: false, nameTableKind: None)
!31 = !{!32, !40, !45, !50, !53}
!32 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !3, line: 397, baseType: !33, size: 32, elements: !34)
!33 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!34 = !{!35, !36, !37, !38, !39}
!35 = !DIEnumerator(name: "eSyncState_None", value: 0, isUnsigned: true)
!36 = !DIEnumerator(name: "eSyncState_Vert", value: 1, isUnsigned: true)
!37 = !DIEnumerator(name: "eSyncState_Edge", value: 2, isUnsigned: true)
!38 = !DIEnumerator(name: "eSyncState_Face", value: 3, isUnsigned: true)
!39 = !DIEnumerator(name: "eSyncState_Partial", value: 4, isUnsigned: true)
!40 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !8, line: 58, baseType: !33, size: 32, elements: !41)
!41 = !{!42, !43, !44}
!42 = !DIEnumerator(name: "eCCGError_None", value: 0, isUnsigned: true)
!43 = !DIEnumerator(name: "eCCGError_InvalidSyncState", value: 1, isUnsigned: true)
!44 = !DIEnumerator(name: "eCCGError_InvalidValue", value: 2, isUnsigned: true)
!45 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !3, line: 321, baseType: !33, size: 32, elements: !46)
!46 = !{!47, !48, !49}
!47 = !DIEnumerator(name: "Vert_eEffected", value: 1, isUnsigned: true)
!48 = !DIEnumerator(name: "Vert_eChanged", value: 2, isUnsigned: true)
!49 = !DIEnumerator(name: "Vert_eSeam", value: 4, isUnsigned: true)
!50 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !3, line: 326, baseType: !33, size: 32, elements: !51)
!51 = !{!52}
!52 = !DIEnumerator(name: "Edge_eEffected", value: 1, isUnsigned: true)
!53 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !3, line: 329, baseType: !33, size: 32, elements: !54)
!54 = !{!55}
!55 = !DIEnumerator(name: "Face_eEffected", value: 1, isUnsigned: true)
!56 = !{!15, !57, !61, !67, !68, !70, !84, !97, !109, !110, !113, !116, !119, !137, !33, !140, !141, !83, !69, !142}
!57 = !DIDerivedType(tag: DW_TAG_typedef, name: "EHEntryFreeFP", file: !3, line: 93, baseType: !58)
!58 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !59, size: 64)
!59 = !DISubroutineType(types: !60)
!60 = !{null, !61, !15}
!61 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !62, size: 64)
!62 = !DIDerivedType(tag: DW_TAG_typedef, name: "EHEntry", file: !3, line: 57, baseType: !63)
!63 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_EHEntry", file: !3, line: 58, size: 128, elements: !64)
!64 = !{!65, !66}
!65 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !63, file: !3, line: 59, baseType: !61, size: 64)
!66 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !63, file: !3, line: 60, baseType: !15, size: 64, offset: 64)
!67 = !DIDerivedType(tag: DW_TAG_typedef, name: "CCGEdgeHDL", file: !8, line: 30, baseType: !15)
!68 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !69, size: 64)
!69 = !DIBasicType(name: "float", size: 32, encoding: DW_ATE_float)
!70 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !71, size: 64)
!71 = !DIDerivedType(tag: DW_TAG_typedef, name: "CCGVert", file: !8, line: 34, baseType: !72)
!72 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CCGVert", file: !3, line: 333, size: 320, elements: !73)
!73 = !{!74, !75, !77, !79, !80, !81, !82, !108}
!74 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !72, file: !3, line: 334, baseType: !70, size: 64)
!75 = !DIDerivedType(tag: DW_TAG_member, name: "vHDL", scope: !72, file: !3, line: 335, baseType: !76, size: 64, offset: 64)
!76 = !DIDerivedType(tag: DW_TAG_typedef, name: "CCGVertHDL", file: !8, line: 29, baseType: !15)
!77 = !DIDerivedType(tag: DW_TAG_member, name: "numEdges", scope: !72, file: !3, line: 337, baseType: !78, size: 16, offset: 128)
!78 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!79 = !DIDerivedType(tag: DW_TAG_member, name: "numFaces", scope: !72, file: !3, line: 337, baseType: !78, size: 16, offset: 144)
!80 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !72, file: !3, line: 337, baseType: !78, size: 16, offset: 160)
!81 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !72, file: !3, line: 337, baseType: !78, size: 16, offset: 176)
!82 = !DIDerivedType(tag: DW_TAG_member, name: "edges", scope: !72, file: !3, line: 339, baseType: !83, size: 64, offset: 192)
!83 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !84, size: 64)
!84 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !85, size: 64)
!85 = !DIDerivedType(tag: DW_TAG_typedef, name: "CCGEdge", file: !8, line: 35, baseType: !86)
!86 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CCGEdge", file: !3, line: 350, size: 384, elements: !87)
!87 = !{!88, !89, !90, !91, !92, !93, !94, !95}
!88 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !86, file: !3, line: 351, baseType: !84, size: 64)
!89 = !DIDerivedType(tag: DW_TAG_member, name: "eHDL", scope: !86, file: !3, line: 352, baseType: !67, size: 64, offset: 64)
!90 = !DIDerivedType(tag: DW_TAG_member, name: "numFaces", scope: !86, file: !3, line: 354, baseType: !78, size: 16, offset: 128)
!91 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !86, file: !3, line: 354, baseType: !78, size: 16, offset: 144)
!92 = !DIDerivedType(tag: DW_TAG_member, name: "crease", scope: !86, file: !3, line: 355, baseType: !69, size: 32, offset: 160)
!93 = !DIDerivedType(tag: DW_TAG_member, name: "v0", scope: !86, file: !3, line: 357, baseType: !70, size: 64, offset: 192)
!94 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !86, file: !3, line: 357, baseType: !70, size: 64, offset: 256)
!95 = !DIDerivedType(tag: DW_TAG_member, name: "faces", scope: !86, file: !3, line: 358, baseType: !96, size: 64, offset: 320)
!96 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !97, size: 64)
!97 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !98, size: 64)
!98 = !DIDerivedType(tag: DW_TAG_typedef, name: "CCGFace", file: !8, line: 36, baseType: !99)
!99 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CCGFace", file: !3, line: 369, size: 192, elements: !100)
!100 = !{!101, !102, !104, !105, !106, !107}
!101 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !99, file: !3, line: 370, baseType: !97, size: 64)
!102 = !DIDerivedType(tag: DW_TAG_member, name: "fHDL", scope: !99, file: !3, line: 371, baseType: !103, size: 64, offset: 64)
!103 = !DIDerivedType(tag: DW_TAG_typedef, name: "CCGFaceHDL", file: !8, line: 31, baseType: !15)
!104 = !DIDerivedType(tag: DW_TAG_member, name: "numVerts", scope: !99, file: !3, line: 373, baseType: !78, size: 16, offset: 128)
!105 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !99, file: !3, line: 373, baseType: !78, size: 16, offset: 144)
!106 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !99, file: !3, line: 373, baseType: !78, size: 16, offset: 160)
!107 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !99, file: !3, line: 373, baseType: !78, size: 16, offset: 176)
!108 = !DIDerivedType(tag: DW_TAG_member, name: "faces", scope: !72, file: !3, line: 340, baseType: !96, size: 64, offset: 256)
!109 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17, size: 64)
!110 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !111, size: 64)
!111 = !DIDerivedType(tag: DW_TAG_typedef, name: "CCGVertIterator", file: !8, line: 166, baseType: !112)
!112 = !DICompositeType(tag: DW_TAG_structure_type, name: "CCGVertIterator", file: !8, line: 166, flags: DIFlagFwdDecl)
!113 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !114, size: 64)
!114 = !DIDerivedType(tag: DW_TAG_typedef, name: "CCGEdgeIterator", file: !8, line: 167, baseType: !115)
!115 = !DICompositeType(tag: DW_TAG_structure_type, name: "CCGEdgeIterator", file: !8, line: 167, flags: DIFlagFwdDecl)
!116 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !117, size: 64)
!117 = !DIDerivedType(tag: DW_TAG_typedef, name: "CCGFaceIterator", file: !8, line: 168, baseType: !118)
!118 = !DICompositeType(tag: DW_TAG_structure_type, name: "CCGFaceIterator", file: !8, line: 168, flags: DIFlagFwdDecl)
!119 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !120, size: 64)
!120 = !DIDerivedType(tag: DW_TAG_typedef, name: "EHashIterator", file: !3, line: 179, baseType: !121)
!121 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_EHashIterator", file: !3, line: 175, size: 192, elements: !122)
!122 = !{!123, !135, !136}
!123 = !DIDerivedType(tag: DW_TAG_member, name: "eh", scope: !121, file: !3, line: 176, baseType: !124, size: 64)
!124 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !125, size: 64)
!125 = !DIDerivedType(tag: DW_TAG_typedef, name: "EHash", file: !3, line: 68, baseType: !126)
!126 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_EHash", file: !3, line: 62, size: 512, elements: !127)
!127 = !{!128, !130, !131, !132, !133, !134}
!128 = !DIDerivedType(tag: DW_TAG_member, name: "buckets", scope: !126, file: !3, line: 63, baseType: !129, size: 64)
!129 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !61, size: 64)
!130 = !DIDerivedType(tag: DW_TAG_member, name: "numEntries", scope: !126, file: !3, line: 64, baseType: !17, size: 32, offset: 64)
!131 = !DIDerivedType(tag: DW_TAG_member, name: "curSize", scope: !126, file: !3, line: 64, baseType: !17, size: 32, offset: 96)
!132 = !DIDerivedType(tag: DW_TAG_member, name: "curSizeIdx", scope: !126, file: !3, line: 64, baseType: !17, size: 32, offset: 128)
!133 = !DIDerivedType(tag: DW_TAG_member, name: "allocatorIFC", scope: !126, file: !3, line: 66, baseType: !7, size: 256, offset: 192)
!134 = !DIDerivedType(tag: DW_TAG_member, name: "allocator", scope: !126, file: !3, line: 67, baseType: !16, size: 64, offset: 448)
!135 = !DIDerivedType(tag: DW_TAG_member, name: "curBucket", scope: !121, file: !3, line: 177, baseType: !17, size: 32, offset: 64)
!136 = !DIDerivedType(tag: DW_TAG_member, name: "curEntry", scope: !121, file: !3, line: 178, baseType: !61, size: 64, offset: 128)
!137 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintptr_t", file: !138, line: 90, baseType: !139)
!138 = !DIFile(filename: "/usr/include/stdint.h", directory: "")
!139 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!140 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15, size: 64)
!141 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !70, size: 64)
!142 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !143, size: 64)
!143 = !DIDerivedType(tag: DW_TAG_typedef, name: "byte", file: !3, line: 47, baseType: !144)
!144 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!145 = !{!0, !146}
!146 = !DIGlobalVariableExpression(var: !147, expr: !DIExpression())
!147 = distinct !DIGlobalVariable(name: "kHashSizes", scope: !30, file: !3, line: 51, type: !148, isLocal: true, isDefinition: true)
!148 = !DICompositeType(tag: DW_TAG_array_type, baseType: !17, size: 928, elements: !149)
!149 = !{!150}
!150 = !DISubrange(count: 29)
!151 = !{}
!152 = !{i32 7, !"Dwarf Version", i32 4}
!153 = !{i32 2, !"Debug Info Version", i32 3}
!154 = !{i32 1, !"wchar_size", i32 4}
!155 = !{!"clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)"}
!156 = distinct !DISubprogram(name: "BKE_ccg_gridsize", scope: !3, file: !3, line: 259, type: !157, scopeLine: 260, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, retainedNodes: !151)
!157 = !DISubroutineType(types: !158)
!158 = !{!17, !17}
!159 = !DILocalVariable(name: "level", arg: 1, scope: !156, file: !3, line: 259, type: !17)
!160 = !DILocation(line: 259, column: 26, scope: !156)
!161 = !DILocation(line: 261, column: 22, scope: !156)
!162 = !DILocation(line: 261, column: 9, scope: !156)
!163 = !DILocation(line: 261, column: 2, scope: !156)
!164 = distinct !DISubprogram(name: "ccg_gridsize", scope: !3, file: !3, line: 251, type: !157, scopeLine: 252, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !30, retainedNodes: !151)
!165 = !DILocalVariable(name: "level", arg: 1, scope: !164, file: !3, line: 251, type: !17)
!166 = !DILocation(line: 251, column: 33, scope: !164)
!167 = !DILocation(line: 256, column: 16, scope: !164)
!168 = !DILocation(line: 256, column: 22, scope: !164)
!169 = !DILocation(line: 256, column: 12, scope: !164)
!170 = !DILocation(line: 256, column: 28, scope: !164)
!171 = !DILocation(line: 256, column: 2, scope: !164)
!172 = distinct !DISubprogram(name: "BKE_ccg_factor", scope: !3, file: !3, line: 264, type: !173, scopeLine: 265, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, retainedNodes: !151)
!173 = !DISubroutineType(types: !174)
!174 = !{!17, !17, !17}
!175 = !DILocalVariable(name: "low_level", arg: 1, scope: !172, file: !3, line: 264, type: !17)
!176 = !DILocation(line: 264, column: 24, scope: !172)
!177 = !DILocalVariable(name: "high_level", arg: 2, scope: !172, file: !3, line: 264, type: !17)
!178 = !DILocation(line: 264, column: 39, scope: !172)
!179 = !DILocation(line: 269, column: 15, scope: !172)
!180 = !DILocation(line: 269, column: 28, scope: !172)
!181 = !DILocation(line: 269, column: 26, scope: !172)
!182 = !DILocation(line: 269, column: 11, scope: !172)
!183 = !DILocation(line: 269, column: 2, scope: !172)
!184 = distinct !DISubprogram(name: "ccgSubSurf_new", scope: !3, file: !3, line: 850, type: !185, scopeLine: 851, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, retainedNodes: !151)
!185 = !DISubroutineType(types: !186)
!186 = !{!187, !230, !17, !6, !16}
!187 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !188, size: 64)
!188 = !DIDerivedType(tag: DW_TAG_typedef, name: "CCGSubSurf", file: !8, line: 33, baseType: !189)
!189 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CCGSubSurf", file: !3, line: 405, size: 1728, elements: !190)
!190 = !{!191, !192, !193, !194, !204, !205, !206, !207, !208, !209, !210, !211, !212, !213, !214, !215, !216, !217, !218, !219, !220, !221, !222, !224, !225, !226, !227, !228, !229}
!191 = !DIDerivedType(tag: DW_TAG_member, name: "vMap", scope: !189, file: !3, line: 406, baseType: !124, size: 64)
!192 = !DIDerivedType(tag: DW_TAG_member, name: "eMap", scope: !189, file: !3, line: 407, baseType: !124, size: 64, offset: 64)
!193 = !DIDerivedType(tag: DW_TAG_member, name: "fMap", scope: !189, file: !3, line: 408, baseType: !124, size: 64, offset: 128)
!194 = !DIDerivedType(tag: DW_TAG_member, name: "meshIFC", scope: !189, file: !3, line: 410, baseType: !195, size: 192, offset: 192)
!195 = !DIDerivedType(tag: DW_TAG_typedef, name: "CCGMeshIFC", file: !8, line: 43, baseType: !196)
!196 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CCGMeshIFC", file: !8, line: 38, size: 192, elements: !197)
!197 = !{!198, !199, !200, !201, !202, !203}
!198 = !DIDerivedType(tag: DW_TAG_member, name: "vertUserSize", scope: !196, file: !8, line: 39, baseType: !17, size: 32)
!199 = !DIDerivedType(tag: DW_TAG_member, name: "edgeUserSize", scope: !196, file: !8, line: 39, baseType: !17, size: 32, offset: 32)
!200 = !DIDerivedType(tag: DW_TAG_member, name: "faceUserSize", scope: !196, file: !8, line: 39, baseType: !17, size: 32, offset: 64)
!201 = !DIDerivedType(tag: DW_TAG_member, name: "numLayers", scope: !196, file: !8, line: 40, baseType: !17, size: 32, offset: 96)
!202 = !DIDerivedType(tag: DW_TAG_member, name: "vertDataSize", scope: !196, file: !8, line: 41, baseType: !17, size: 32, offset: 128)
!203 = !DIDerivedType(tag: DW_TAG_member, name: "simpleSubdiv", scope: !196, file: !8, line: 42, baseType: !17, size: 32, offset: 160)
!204 = !DIDerivedType(tag: DW_TAG_member, name: "allocatorIFC", scope: !189, file: !3, line: 412, baseType: !7, size: 256, offset: 384)
!205 = !DIDerivedType(tag: DW_TAG_member, name: "allocator", scope: !189, file: !3, line: 413, baseType: !16, size: 64, offset: 640)
!206 = !DIDerivedType(tag: DW_TAG_member, name: "subdivLevels", scope: !189, file: !3, line: 415, baseType: !17, size: 32, offset: 704)
!207 = !DIDerivedType(tag: DW_TAG_member, name: "numGrids", scope: !189, file: !3, line: 416, baseType: !17, size: 32, offset: 736)
!208 = !DIDerivedType(tag: DW_TAG_member, name: "allowEdgeCreation", scope: !189, file: !3, line: 417, baseType: !17, size: 32, offset: 768)
!209 = !DIDerivedType(tag: DW_TAG_member, name: "defaultCreaseValue", scope: !189, file: !3, line: 418, baseType: !69, size: 32, offset: 800)
!210 = !DIDerivedType(tag: DW_TAG_member, name: "defaultEdgeUserData", scope: !189, file: !3, line: 419, baseType: !15, size: 64, offset: 832)
!211 = !DIDerivedType(tag: DW_TAG_member, name: "q", scope: !189, file: !3, line: 421, baseType: !15, size: 64, offset: 896)
!212 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !189, file: !3, line: 421, baseType: !15, size: 64, offset: 960)
!213 = !DIDerivedType(tag: DW_TAG_member, name: "calcVertNormals", scope: !189, file: !3, line: 424, baseType: !17, size: 32, offset: 1024)
!214 = !DIDerivedType(tag: DW_TAG_member, name: "normalDataOffset", scope: !189, file: !3, line: 425, baseType: !17, size: 32, offset: 1056)
!215 = !DIDerivedType(tag: DW_TAG_member, name: "allocMask", scope: !189, file: !3, line: 428, baseType: !17, size: 32, offset: 1088)
!216 = !DIDerivedType(tag: DW_TAG_member, name: "maskDataOffset", scope: !189, file: !3, line: 429, baseType: !17, size: 32, offset: 1120)
!217 = !DIDerivedType(tag: DW_TAG_member, name: "currentAge", scope: !189, file: !3, line: 432, baseType: !17, size: 32, offset: 1152)
!218 = !DIDerivedType(tag: DW_TAG_member, name: "useAgeCounts", scope: !189, file: !3, line: 433, baseType: !17, size: 32, offset: 1184)
!219 = !DIDerivedType(tag: DW_TAG_member, name: "vertUserAgeOffset", scope: !189, file: !3, line: 434, baseType: !17, size: 32, offset: 1216)
!220 = !DIDerivedType(tag: DW_TAG_member, name: "edgeUserAgeOffset", scope: !189, file: !3, line: 435, baseType: !17, size: 32, offset: 1248)
!221 = !DIDerivedType(tag: DW_TAG_member, name: "faceUserAgeOffset", scope: !189, file: !3, line: 436, baseType: !17, size: 32, offset: 1280)
!222 = !DIDerivedType(tag: DW_TAG_member, name: "syncState", scope: !189, file: !3, line: 439, baseType: !223, size: 32, offset: 1312)
!223 = !DIDerivedType(tag: DW_TAG_typedef, name: "SyncState", file: !3, line: 403, baseType: !32)
!224 = !DIDerivedType(tag: DW_TAG_member, name: "oldVMap", scope: !189, file: !3, line: 441, baseType: !124, size: 64, offset: 1344)
!225 = !DIDerivedType(tag: DW_TAG_member, name: "oldEMap", scope: !189, file: !3, line: 441, baseType: !124, size: 64, offset: 1408)
!226 = !DIDerivedType(tag: DW_TAG_member, name: "oldFMap", scope: !189, file: !3, line: 441, baseType: !124, size: 64, offset: 1472)
!227 = !DIDerivedType(tag: DW_TAG_member, name: "lenTempArrays", scope: !189, file: !3, line: 442, baseType: !17, size: 32, offset: 1536)
!228 = !DIDerivedType(tag: DW_TAG_member, name: "tempVerts", scope: !189, file: !3, line: 443, baseType: !141, size: 64, offset: 1600)
!229 = !DIDerivedType(tag: DW_TAG_member, name: "tempEdges", scope: !189, file: !3, line: 444, baseType: !83, size: 64, offset: 1664)
!230 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !195, size: 64)
!231 = !DILocalVariable(name: "ifc", arg: 1, scope: !184, file: !3, line: 850, type: !230)
!232 = !DILocation(line: 850, column: 40, scope: !184)
!233 = !DILocalVariable(name: "subdivLevels", arg: 2, scope: !184, file: !3, line: 850, type: !17)
!234 = !DILocation(line: 850, column: 49, scope: !184)
!235 = !DILocalVariable(name: "allocatorIFC", arg: 3, scope: !184, file: !3, line: 850, type: !6)
!236 = !DILocation(line: 850, column: 80, scope: !184)
!237 = !DILocalVariable(name: "allocator", arg: 4, scope: !184, file: !3, line: 850, type: !16)
!238 = !DILocation(line: 850, column: 110, scope: !184)
!239 = !DILocation(line: 852, column: 7, scope: !240)
!240 = distinct !DILexicalBlock(scope: !184, file: !3, line: 852, column: 6)
!241 = !DILocation(line: 852, column: 6, scope: !184)
!242 = !DILocation(line: 853, column: 18, scope: !243)
!243 = distinct !DILexicalBlock(scope: !240, file: !3, line: 852, column: 21)
!244 = !DILocation(line: 853, column: 16, scope: !243)
!245 = !DILocation(line: 854, column: 13, scope: !243)
!246 = !DILocation(line: 855, column: 2, scope: !243)
!247 = !DILocation(line: 857, column: 6, scope: !248)
!248 = distinct !DILexicalBlock(scope: !184, file: !3, line: 857, column: 6)
!249 = !DILocation(line: 857, column: 19, scope: !248)
!250 = !DILocation(line: 857, column: 6, scope: !184)
!251 = !DILocation(line: 858, column: 3, scope: !252)
!252 = distinct !DILexicalBlock(scope: !248, file: !3, line: 857, column: 24)
!253 = !DILocalVariable(name: "ss", scope: !254, file: !3, line: 861, type: !187)
!254 = distinct !DILexicalBlock(scope: !248, file: !3, line: 860, column: 7)
!255 = !DILocation(line: 861, column: 15, scope: !254)
!256 = !DILocation(line: 861, column: 20, scope: !254)
!257 = !DILocation(line: 861, column: 34, scope: !254)
!258 = !DILocation(line: 861, column: 40, scope: !254)
!259 = !DILocation(line: 863, column: 3, scope: !254)
!260 = !DILocation(line: 863, column: 7, scope: !254)
!261 = !DILocation(line: 863, column: 23, scope: !254)
!262 = !DILocation(line: 863, column: 22, scope: !254)
!263 = !DILocation(line: 864, column: 19, scope: !254)
!264 = !DILocation(line: 864, column: 3, scope: !254)
!265 = !DILocation(line: 864, column: 7, scope: !254)
!266 = !DILocation(line: 864, column: 17, scope: !254)
!267 = !DILocation(line: 866, column: 29, scope: !254)
!268 = !DILocation(line: 866, column: 33, scope: !254)
!269 = !DILocation(line: 866, column: 47, scope: !254)
!270 = !DILocation(line: 866, column: 51, scope: !254)
!271 = !DILocation(line: 866, column: 14, scope: !254)
!272 = !DILocation(line: 866, column: 3, scope: !254)
!273 = !DILocation(line: 866, column: 7, scope: !254)
!274 = !DILocation(line: 866, column: 12, scope: !254)
!275 = !DILocation(line: 867, column: 29, scope: !254)
!276 = !DILocation(line: 867, column: 33, scope: !254)
!277 = !DILocation(line: 867, column: 47, scope: !254)
!278 = !DILocation(line: 867, column: 51, scope: !254)
!279 = !DILocation(line: 867, column: 14, scope: !254)
!280 = !DILocation(line: 867, column: 3, scope: !254)
!281 = !DILocation(line: 867, column: 7, scope: !254)
!282 = !DILocation(line: 867, column: 12, scope: !254)
!283 = !DILocation(line: 868, column: 29, scope: !254)
!284 = !DILocation(line: 868, column: 33, scope: !254)
!285 = !DILocation(line: 868, column: 47, scope: !254)
!286 = !DILocation(line: 868, column: 51, scope: !254)
!287 = !DILocation(line: 868, column: 14, scope: !254)
!288 = !DILocation(line: 868, column: 3, scope: !254)
!289 = !DILocation(line: 868, column: 7, scope: !254)
!290 = !DILocation(line: 868, column: 12, scope: !254)
!291 = !DILocation(line: 870, column: 3, scope: !254)
!292 = !DILocation(line: 870, column: 7, scope: !254)
!293 = !DILocation(line: 870, column: 18, scope: !254)
!294 = !DILocation(line: 870, column: 17, scope: !254)
!295 = !DILocation(line: 872, column: 22, scope: !254)
!296 = !DILocation(line: 872, column: 3, scope: !254)
!297 = !DILocation(line: 872, column: 7, scope: !254)
!298 = !DILocation(line: 872, column: 20, scope: !254)
!299 = !DILocation(line: 873, column: 3, scope: !254)
!300 = !DILocation(line: 873, column: 7, scope: !254)
!301 = !DILocation(line: 873, column: 16, scope: !254)
!302 = !DILocation(line: 874, column: 3, scope: !254)
!303 = !DILocation(line: 874, column: 7, scope: !254)
!304 = !DILocation(line: 874, column: 25, scope: !254)
!305 = !DILocation(line: 875, column: 3, scope: !254)
!306 = !DILocation(line: 875, column: 7, scope: !254)
!307 = !DILocation(line: 875, column: 26, scope: !254)
!308 = !DILocation(line: 876, column: 3, scope: !254)
!309 = !DILocation(line: 876, column: 7, scope: !254)
!310 = !DILocation(line: 876, column: 27, scope: !254)
!311 = !DILocation(line: 878, column: 3, scope: !254)
!312 = !DILocation(line: 878, column: 7, scope: !254)
!313 = !DILocation(line: 878, column: 20, scope: !254)
!314 = !DILocation(line: 879, column: 51, scope: !254)
!315 = !DILocation(line: 879, column: 55, scope: !254)
!316 = !DILocation(line: 879, column: 73, scope: !254)
!317 = !DILocation(line: 879, column: 27, scope: !254)
!318 = !DILocation(line: 879, column: 31, scope: !254)
!319 = !DILocation(line: 879, column: 49, scope: !254)
!320 = !DILocation(line: 879, column: 3, scope: !254)
!321 = !DILocation(line: 879, column: 7, scope: !254)
!322 = !DILocation(line: 879, column: 25, scope: !254)
!323 = !DILocation(line: 881, column: 3, scope: !254)
!324 = !DILocation(line: 881, column: 7, scope: !254)
!325 = !DILocation(line: 881, column: 23, scope: !254)
!326 = !DILocation(line: 882, column: 3, scope: !254)
!327 = !DILocation(line: 882, column: 7, scope: !254)
!328 = !DILocation(line: 882, column: 24, scope: !254)
!329 = !DILocation(line: 884, column: 3, scope: !254)
!330 = !DILocation(line: 884, column: 7, scope: !254)
!331 = !DILocation(line: 884, column: 17, scope: !254)
!332 = !DILocation(line: 886, column: 11, scope: !254)
!333 = !DILocation(line: 886, column: 3, scope: !254)
!334 = !DILocation(line: 886, column: 7, scope: !254)
!335 = !DILocation(line: 886, column: 9, scope: !254)
!336 = !DILocation(line: 887, column: 11, scope: !254)
!337 = !DILocation(line: 887, column: 3, scope: !254)
!338 = !DILocation(line: 887, column: 7, scope: !254)
!339 = !DILocation(line: 887, column: 9, scope: !254)
!340 = !DILocation(line: 889, column: 3, scope: !254)
!341 = !DILocation(line: 889, column: 7, scope: !254)
!342 = !DILocation(line: 889, column: 18, scope: !254)
!343 = !DILocation(line: 891, column: 3, scope: !254)
!344 = !DILocation(line: 891, column: 7, scope: !254)
!345 = !DILocation(line: 891, column: 17, scope: !254)
!346 = !DILocation(line: 893, column: 31, scope: !254)
!347 = !DILocation(line: 893, column: 35, scope: !254)
!348 = !DILocation(line: 893, column: 43, scope: !254)
!349 = !DILocation(line: 893, column: 17, scope: !254)
!350 = !DILocation(line: 893, column: 21, scope: !254)
!351 = !DILocation(line: 893, column: 29, scope: !254)
!352 = !DILocation(line: 893, column: 3, scope: !254)
!353 = !DILocation(line: 893, column: 7, scope: !254)
!354 = !DILocation(line: 893, column: 15, scope: !254)
!355 = !DILocation(line: 894, column: 3, scope: !254)
!356 = !DILocation(line: 894, column: 7, scope: !254)
!357 = !DILocation(line: 894, column: 21, scope: !254)
!358 = !DILocation(line: 895, column: 3, scope: !254)
!359 = !DILocation(line: 895, column: 7, scope: !254)
!360 = !DILocation(line: 895, column: 17, scope: !254)
!361 = !DILocation(line: 896, column: 3, scope: !254)
!362 = !DILocation(line: 896, column: 7, scope: !254)
!363 = !DILocation(line: 896, column: 17, scope: !254)
!364 = !DILocation(line: 898, column: 10, scope: !254)
!365 = !DILocation(line: 898, column: 3, scope: !254)
!366 = !DILocation(line: 900, column: 1, scope: !184)
!367 = !DILocation(line: 241, column: 12, scope: !2)
!368 = !DILocation(line: 242, column: 14, scope: !2)
!369 = !DILocation(line: 243, column: 11, scope: !2)
!370 = !DILocation(line: 244, column: 14, scope: !2)
!371 = !DILocation(line: 246, column: 2, scope: !2)
!372 = distinct !DISubprogram(name: "_ehash_new", scope: !3, file: !3, line: 78, type: !373, scopeLine: 79, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !30, retainedNodes: !151)
!373 = !DISubroutineType(types: !374)
!374 = !{!124, !17, !6, !16}
!375 = !DILocalVariable(name: "estimatedNumEntries", arg: 1, scope: !372, file: !3, line: 78, type: !17)
!376 = !DILocation(line: 78, column: 30, scope: !372)
!377 = !DILocalVariable(name: "allocatorIFC", arg: 2, scope: !372, file: !3, line: 78, type: !6)
!378 = !DILocation(line: 78, column: 68, scope: !372)
!379 = !DILocalVariable(name: "allocator", arg: 3, scope: !372, file: !3, line: 78, type: !16)
!380 = !DILocation(line: 78, column: 98, scope: !372)
!381 = !DILocalVariable(name: "eh", scope: !372, file: !3, line: 80, type: !124)
!382 = !DILocation(line: 80, column: 9, scope: !372)
!383 = !DILocation(line: 80, column: 14, scope: !372)
!384 = !DILocation(line: 80, column: 28, scope: !372)
!385 = !DILocation(line: 80, column: 34, scope: !372)
!386 = !DILocation(line: 81, column: 2, scope: !372)
!387 = !DILocation(line: 81, column: 6, scope: !372)
!388 = !DILocation(line: 81, column: 22, scope: !372)
!389 = !DILocation(line: 81, column: 21, scope: !372)
!390 = !DILocation(line: 82, column: 18, scope: !372)
!391 = !DILocation(line: 82, column: 2, scope: !372)
!392 = !DILocation(line: 82, column: 6, scope: !372)
!393 = !DILocation(line: 82, column: 16, scope: !372)
!394 = !DILocation(line: 83, column: 2, scope: !372)
!395 = !DILocation(line: 83, column: 6, scope: !372)
!396 = !DILocation(line: 83, column: 17, scope: !372)
!397 = !DILocation(line: 84, column: 2, scope: !372)
!398 = !DILocation(line: 84, column: 6, scope: !372)
!399 = !DILocation(line: 84, column: 17, scope: !372)
!400 = !DILocation(line: 85, column: 2, scope: !372)
!401 = !DILocation(line: 85, column: 20, scope: !372)
!402 = !DILocation(line: 85, column: 24, scope: !372)
!403 = !DILocation(line: 85, column: 9, scope: !372)
!404 = !DILocation(line: 85, column: 38, scope: !372)
!405 = !DILocation(line: 85, column: 36, scope: !372)
!406 = !DILocation(line: 86, column: 3, scope: !372)
!407 = !DILocation(line: 86, column: 7, scope: !372)
!408 = !DILocation(line: 86, column: 17, scope: !372)
!409 = distinct !{!409, !400, !408}
!410 = !DILocation(line: 87, column: 27, scope: !372)
!411 = !DILocation(line: 87, column: 31, scope: !372)
!412 = !DILocation(line: 87, column: 16, scope: !372)
!413 = !DILocation(line: 87, column: 2, scope: !372)
!414 = !DILocation(line: 87, column: 6, scope: !372)
!415 = !DILocation(line: 87, column: 14, scope: !372)
!416 = !DILocation(line: 88, column: 16, scope: !372)
!417 = !DILocation(line: 88, column: 2, scope: !372)
!418 = !DILocation(line: 88, column: 6, scope: !372)
!419 = !DILocation(line: 88, column: 14, scope: !372)
!420 = !DILocation(line: 89, column: 9, scope: !372)
!421 = !DILocation(line: 89, column: 13, scope: !372)
!422 = !DILocation(line: 89, column: 2, scope: !372)
!423 = !DILocation(line: 89, column: 25, scope: !372)
!424 = !DILocation(line: 89, column: 29, scope: !372)
!425 = !DILocation(line: 89, column: 37, scope: !372)
!426 = !DILocation(line: 91, column: 9, scope: !372)
!427 = !DILocation(line: 91, column: 2, scope: !372)
!428 = distinct !DISubprogram(name: "ccgSubSurf_free", scope: !3, file: !3, line: 902, type: !429, scopeLine: 903, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, retainedNodes: !151)
!429 = !DISubroutineType(types: !430)
!430 = !{null, !187}
!431 = !DILocalVariable(name: "ss", arg: 1, scope: !428, file: !3, line: 902, type: !187)
!432 = !DILocation(line: 902, column: 34, scope: !428)
!433 = !DILocalVariable(name: "allocatorIFC", scope: !428, file: !3, line: 904, type: !7)
!434 = !DILocation(line: 904, column: 18, scope: !428)
!435 = !DILocation(line: 904, column: 33, scope: !428)
!436 = !DILocation(line: 904, column: 37, scope: !428)
!437 = !DILocalVariable(name: "allocator", scope: !428, file: !3, line: 905, type: !16)
!438 = !DILocation(line: 905, column: 18, scope: !428)
!439 = !DILocation(line: 905, column: 30, scope: !428)
!440 = !DILocation(line: 905, column: 34, scope: !428)
!441 = !DILocation(line: 907, column: 6, scope: !442)
!442 = distinct !DILexicalBlock(scope: !428, file: !3, line: 907, column: 6)
!443 = !DILocation(line: 907, column: 10, scope: !442)
!444 = !DILocation(line: 907, column: 6, scope: !428)
!445 = !DILocation(line: 908, column: 15, scope: !446)
!446 = distinct !DILexicalBlock(scope: !442, file: !3, line: 907, column: 21)
!447 = !DILocation(line: 908, column: 19, scope: !446)
!448 = !DILocation(line: 908, column: 56, scope: !446)
!449 = !DILocation(line: 908, column: 3, scope: !446)
!450 = !DILocation(line: 909, column: 15, scope: !446)
!451 = !DILocation(line: 909, column: 19, scope: !446)
!452 = !DILocation(line: 909, column: 56, scope: !446)
!453 = !DILocation(line: 909, column: 3, scope: !446)
!454 = !DILocation(line: 910, column: 15, scope: !446)
!455 = !DILocation(line: 910, column: 19, scope: !446)
!456 = !DILocation(line: 910, column: 56, scope: !446)
!457 = !DILocation(line: 910, column: 3, scope: !446)
!458 = !DILocation(line: 912, column: 3, scope: !446)
!459 = !DILocation(line: 912, column: 13, scope: !446)
!460 = !DILocation(line: 912, column: 17, scope: !446)
!461 = !DILocation(line: 913, column: 3, scope: !446)
!462 = !DILocation(line: 913, column: 13, scope: !446)
!463 = !DILocation(line: 913, column: 17, scope: !446)
!464 = !DILocation(line: 914, column: 2, scope: !446)
!465 = !DILocation(line: 916, column: 2, scope: !428)
!466 = !DILocation(line: 917, column: 2, scope: !428)
!467 = !DILocation(line: 918, column: 6, scope: !468)
!468 = distinct !DILexicalBlock(scope: !428, file: !3, line: 918, column: 6)
!469 = !DILocation(line: 918, column: 10, scope: !468)
!470 = !DILocation(line: 918, column: 6, scope: !428)
!471 = !DILocation(line: 918, column: 31, scope: !468)
!472 = !DILocation(line: 920, column: 14, scope: !428)
!473 = !DILocation(line: 920, column: 18, scope: !428)
!474 = !DILocation(line: 920, column: 52, scope: !428)
!475 = !DILocation(line: 920, column: 2, scope: !428)
!476 = !DILocation(line: 921, column: 14, scope: !428)
!477 = !DILocation(line: 921, column: 18, scope: !428)
!478 = !DILocation(line: 921, column: 52, scope: !428)
!479 = !DILocation(line: 921, column: 2, scope: !428)
!480 = !DILocation(line: 922, column: 14, scope: !428)
!481 = !DILocation(line: 922, column: 18, scope: !428)
!482 = !DILocation(line: 922, column: 52, scope: !428)
!483 = !DILocation(line: 922, column: 2, scope: !428)
!484 = !DILocation(line: 924, column: 2, scope: !428)
!485 = !DILocation(line: 926, column: 19, scope: !486)
!486 = distinct !DILexicalBlock(scope: !428, file: !3, line: 926, column: 6)
!487 = !DILocation(line: 926, column: 6, scope: !486)
!488 = !DILocation(line: 926, column: 6, scope: !428)
!489 = !DILocation(line: 927, column: 16, scope: !490)
!490 = distinct !DILexicalBlock(scope: !486, file: !3, line: 926, column: 28)
!491 = !DILocation(line: 927, column: 24, scope: !490)
!492 = !DILocation(line: 927, column: 3, scope: !490)
!493 = !DILocation(line: 928, column: 2, scope: !490)
!494 = !DILocation(line: 929, column: 1, scope: !428)
!495 = distinct !DISubprogram(name: "_ehash_free", scope: !3, file: !3, line: 94, type: !496, scopeLine: 95, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !30, retainedNodes: !151)
!496 = !DISubroutineType(types: !497)
!497 = !{null, !124, !57, !15}
!498 = !DILocalVariable(name: "eh", arg: 1, scope: !495, file: !3, line: 94, type: !124)
!499 = !DILocation(line: 94, column: 32, scope: !495)
!500 = !DILocalVariable(name: "freeEntry", arg: 2, scope: !495, file: !3, line: 94, type: !57)
!501 = !DILocation(line: 94, column: 50, scope: !495)
!502 = !DILocalVariable(name: "userData", arg: 3, scope: !495, file: !3, line: 94, type: !15)
!503 = !DILocation(line: 94, column: 67, scope: !495)
!504 = !DILocalVariable(name: "numBuckets", scope: !495, file: !3, line: 96, type: !17)
!505 = !DILocation(line: 96, column: 6, scope: !495)
!506 = !DILocation(line: 96, column: 19, scope: !495)
!507 = !DILocation(line: 96, column: 23, scope: !495)
!508 = !DILocation(line: 98, column: 2, scope: !495)
!509 = !DILocation(line: 98, column: 19, scope: !495)
!510 = !DILocalVariable(name: "entry", scope: !511, file: !3, line: 99, type: !61)
!511 = distinct !DILexicalBlock(scope: !495, file: !3, line: 98, column: 23)
!512 = !DILocation(line: 99, column: 12, scope: !511)
!513 = !DILocation(line: 99, column: 20, scope: !511)
!514 = !DILocation(line: 99, column: 24, scope: !511)
!515 = !DILocation(line: 99, column: 32, scope: !511)
!516 = !DILocation(line: 101, column: 3, scope: !511)
!517 = !DILocation(line: 101, column: 10, scope: !511)
!518 = !DILocalVariable(name: "next", scope: !519, file: !3, line: 102, type: !61)
!519 = distinct !DILexicalBlock(scope: !511, file: !3, line: 101, column: 17)
!520 = !DILocation(line: 102, column: 13, scope: !519)
!521 = !DILocation(line: 102, column: 20, scope: !519)
!522 = !DILocation(line: 102, column: 27, scope: !519)
!523 = !DILocation(line: 104, column: 4, scope: !519)
!524 = !DILocation(line: 104, column: 14, scope: !519)
!525 = !DILocation(line: 104, column: 21, scope: !519)
!526 = !DILocation(line: 106, column: 12, scope: !519)
!527 = !DILocation(line: 106, column: 10, scope: !519)
!528 = distinct !{!528, !516, !529}
!529 = !DILocation(line: 107, column: 3, scope: !511)
!530 = distinct !{!530, !508, !531}
!531 = !DILocation(line: 108, column: 2, scope: !495)
!532 = !DILocation(line: 110, column: 2, scope: !495)
!533 = !DILocation(line: 111, column: 2, scope: !495)
!534 = !DILocation(line: 112, column: 1, scope: !495)
!535 = distinct !DISubprogram(name: "_face_free", scope: !3, file: !3, line: 833, type: !536, scopeLine: 834, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !30, retainedNodes: !151)
!536 = !DISubroutineType(types: !537)
!537 = !{null, !97, !187}
!538 = !DILocalVariable(name: "f", arg: 1, scope: !535, file: !3, line: 833, type: !97)
!539 = !DILocation(line: 833, column: 33, scope: !535)
!540 = !DILocalVariable(name: "ss", arg: 2, scope: !535, file: !3, line: 833, type: !187)
!541 = !DILocation(line: 833, column: 48, scope: !535)
!542 = !DILocation(line: 835, column: 2, scope: !535)
!543 = !DILocation(line: 836, column: 1, scope: !535)
!544 = distinct !DISubprogram(name: "_edge_free", scope: !3, file: !3, line: 680, type: !545, scopeLine: 681, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !30, retainedNodes: !151)
!545 = !DISubroutineType(types: !546)
!546 = !{null, !84, !187}
!547 = !DILocalVariable(name: "e", arg: 1, scope: !544, file: !3, line: 680, type: !84)
!548 = !DILocation(line: 680, column: 33, scope: !544)
!549 = !DILocalVariable(name: "ss", arg: 2, scope: !544, file: !3, line: 680, type: !187)
!550 = !DILocation(line: 680, column: 48, scope: !544)
!551 = !DILocation(line: 682, column: 2, scope: !544)
!552 = !DILocation(line: 683, column: 2, scope: !544)
!553 = !DILocation(line: 684, column: 1, scope: !544)
!554 = distinct !DISubprogram(name: "_vert_free", scope: !3, file: !3, line: 590, type: !555, scopeLine: 591, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !30, retainedNodes: !151)
!555 = !DISubroutineType(types: !556)
!556 = !{null, !70, !187}
!557 = !DILocalVariable(name: "v", arg: 1, scope: !554, file: !3, line: 590, type: !70)
!558 = !DILocation(line: 590, column: 33, scope: !554)
!559 = !DILocalVariable(name: "ss", arg: 2, scope: !554, file: !3, line: 590, type: !187)
!560 = !DILocation(line: 590, column: 48, scope: !554)
!561 = !DILocation(line: 592, column: 2, scope: !554)
!562 = !DILocation(line: 593, column: 2, scope: !554)
!563 = !DILocation(line: 594, column: 2, scope: !554)
!564 = !DILocation(line: 595, column: 1, scope: !554)
!565 = distinct !DISubprogram(name: "ccgSubSurf_setAllowEdgeCreation", scope: !3, file: !3, line: 931, type: !566, scopeLine: 932, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, retainedNodes: !151)
!566 = !DISubroutineType(types: !567)
!567 = !{!568, !187, !17, !69, !15}
!568 = !DIDerivedType(tag: DW_TAG_typedef, name: "CCGError", file: !8, line: 63, baseType: !40)
!569 = !DILocalVariable(name: "ss", arg: 1, scope: !565, file: !3, line: 931, type: !187)
!570 = !DILocation(line: 931, column: 54, scope: !565)
!571 = !DILocalVariable(name: "allowEdgeCreation", arg: 2, scope: !565, file: !3, line: 931, type: !17)
!572 = !DILocation(line: 931, column: 62, scope: !565)
!573 = !DILocalVariable(name: "defaultCreaseValue", arg: 3, scope: !565, file: !3, line: 931, type: !69)
!574 = !DILocation(line: 931, column: 87, scope: !565)
!575 = !DILocalVariable(name: "defaultUserData", arg: 4, scope: !565, file: !3, line: 931, type: !15)
!576 = !DILocation(line: 931, column: 113, scope: !565)
!577 = !DILocation(line: 933, column: 6, scope: !578)
!578 = distinct !DILexicalBlock(scope: !565, file: !3, line: 933, column: 6)
!579 = !DILocation(line: 933, column: 10, scope: !578)
!580 = !DILocation(line: 933, column: 6, scope: !565)
!581 = !DILocation(line: 934, column: 3, scope: !582)
!582 = distinct !DILexicalBlock(scope: !578, file: !3, line: 933, column: 31)
!583 = !DILocation(line: 935, column: 2, scope: !582)
!584 = !DILocation(line: 937, column: 28, scope: !565)
!585 = !DILocation(line: 937, column: 27, scope: !565)
!586 = !DILocation(line: 937, column: 26, scope: !565)
!587 = !DILocation(line: 937, column: 2, scope: !565)
!588 = !DILocation(line: 937, column: 6, scope: !565)
!589 = !DILocation(line: 937, column: 24, scope: !565)
!590 = !DILocation(line: 938, column: 27, scope: !565)
!591 = !DILocation(line: 938, column: 2, scope: !565)
!592 = !DILocation(line: 938, column: 6, scope: !565)
!593 = !DILocation(line: 938, column: 25, scope: !565)
!594 = !DILocation(line: 939, column: 28, scope: !565)
!595 = !DILocation(line: 939, column: 2, scope: !565)
!596 = !DILocation(line: 939, column: 6, scope: !565)
!597 = !DILocation(line: 939, column: 26, scope: !565)
!598 = !DILocation(line: 941, column: 6, scope: !599)
!599 = distinct !DILexicalBlock(scope: !565, file: !3, line: 941, column: 6)
!600 = !DILocation(line: 941, column: 6, scope: !565)
!601 = !DILocation(line: 942, column: 10, scope: !602)
!602 = distinct !DILexicalBlock(scope: !599, file: !3, line: 941, column: 23)
!603 = !DILocation(line: 942, column: 14, scope: !602)
!604 = !DILocation(line: 942, column: 35, scope: !602)
!605 = !DILocation(line: 942, column: 52, scope: !602)
!606 = !DILocation(line: 942, column: 56, scope: !602)
!607 = !DILocation(line: 942, column: 64, scope: !602)
!608 = !DILocation(line: 942, column: 3, scope: !602)
!609 = !DILocation(line: 943, column: 2, scope: !602)
!610 = !DILocation(line: 945, column: 10, scope: !611)
!611 = distinct !DILexicalBlock(scope: !599, file: !3, line: 944, column: 7)
!612 = !DILocation(line: 945, column: 14, scope: !611)
!613 = !DILocation(line: 945, column: 38, scope: !611)
!614 = !DILocation(line: 945, column: 42, scope: !611)
!615 = !DILocation(line: 945, column: 50, scope: !611)
!616 = !DILocation(line: 945, column: 3, scope: !611)
!617 = !DILocation(line: 948, column: 2, scope: !565)
!618 = distinct !DISubprogram(name: "ccgSubSurf_getAllowEdgeCreation", scope: !3, file: !3, line: 950, type: !619, scopeLine: 951, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, retainedNodes: !151)
!619 = !DISubroutineType(types: !620)
!620 = !{null, !187, !109, !68, !15}
!621 = !DILocalVariable(name: "ss", arg: 1, scope: !618, file: !3, line: 950, type: !187)
!622 = !DILocation(line: 950, column: 50, scope: !618)
!623 = !DILocalVariable(name: "allowEdgeCreation_r", arg: 2, scope: !618, file: !3, line: 950, type: !109)
!624 = !DILocation(line: 950, column: 59, scope: !618)
!625 = !DILocalVariable(name: "defaultCreaseValue_r", arg: 3, scope: !618, file: !3, line: 950, type: !68)
!626 = !DILocation(line: 950, column: 87, scope: !618)
!627 = !DILocalVariable(name: "defaultUserData_r", arg: 4, scope: !618, file: !3, line: 950, type: !15)
!628 = !DILocation(line: 950, column: 115, scope: !618)
!629 = !DILocation(line: 952, column: 6, scope: !630)
!630 = distinct !DILexicalBlock(scope: !618, file: !3, line: 952, column: 6)
!631 = !DILocation(line: 952, column: 6, scope: !618)
!632 = !DILocation(line: 952, column: 50, scope: !630)
!633 = !DILocation(line: 952, column: 54, scope: !630)
!634 = !DILocation(line: 952, column: 28, scope: !630)
!635 = !DILocation(line: 952, column: 48, scope: !630)
!636 = !DILocation(line: 952, column: 27, scope: !630)
!637 = !DILocation(line: 953, column: 6, scope: !638)
!638 = distinct !DILexicalBlock(scope: !618, file: !3, line: 953, column: 6)
!639 = !DILocation(line: 953, column: 10, scope: !638)
!640 = !DILocation(line: 953, column: 6, scope: !618)
!641 = !DILocation(line: 954, column: 7, scope: !642)
!642 = distinct !DILexicalBlock(scope: !643, file: !3, line: 954, column: 7)
!643 = distinct !DILexicalBlock(scope: !638, file: !3, line: 953, column: 29)
!644 = !DILocation(line: 954, column: 7, scope: !643)
!645 = !DILocation(line: 954, column: 53, scope: !642)
!646 = !DILocation(line: 954, column: 57, scope: !642)
!647 = !DILocation(line: 954, column: 30, scope: !642)
!648 = !DILocation(line: 954, column: 51, scope: !642)
!649 = !DILocation(line: 954, column: 29, scope: !642)
!650 = !DILocation(line: 955, column: 7, scope: !651)
!651 = distinct !DILexicalBlock(scope: !643, file: !3, line: 955, column: 7)
!652 = !DILocation(line: 955, column: 7, scope: !643)
!653 = !DILocation(line: 955, column: 33, scope: !651)
!654 = !DILocation(line: 955, column: 52, scope: !651)
!655 = !DILocation(line: 955, column: 56, scope: !651)
!656 = !DILocation(line: 955, column: 77, scope: !651)
!657 = !DILocation(line: 955, column: 81, scope: !651)
!658 = !DILocation(line: 955, column: 89, scope: !651)
!659 = !DILocation(line: 955, column: 26, scope: !651)
!660 = !DILocation(line: 956, column: 2, scope: !643)
!661 = !DILocation(line: 957, column: 1, scope: !618)
!662 = distinct !DISubprogram(name: "ccgSubSurf_setSubdivisionLevels", scope: !3, file: !3, line: 959, type: !663, scopeLine: 960, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, retainedNodes: !151)
!663 = !DISubroutineType(types: !664)
!664 = !{!568, !187, !17}
!665 = !DILocalVariable(name: "ss", arg: 1, scope: !662, file: !3, line: 959, type: !187)
!666 = !DILocation(line: 959, column: 54, scope: !662)
!667 = !DILocalVariable(name: "subdivisionLevels", arg: 2, scope: !662, file: !3, line: 959, type: !17)
!668 = !DILocation(line: 959, column: 62, scope: !662)
!669 = !DILocation(line: 961, column: 6, scope: !670)
!670 = distinct !DILexicalBlock(scope: !662, file: !3, line: 961, column: 6)
!671 = !DILocation(line: 961, column: 24, scope: !670)
!672 = !DILocation(line: 961, column: 6, scope: !662)
!673 = !DILocation(line: 962, column: 3, scope: !674)
!674 = distinct !DILexicalBlock(scope: !670, file: !3, line: 961, column: 30)
!675 = !DILocation(line: 964, column: 11, scope: !676)
!676 = distinct !DILexicalBlock(scope: !670, file: !3, line: 964, column: 11)
!677 = !DILocation(line: 964, column: 32, scope: !676)
!678 = !DILocation(line: 964, column: 36, scope: !676)
!679 = !DILocation(line: 964, column: 29, scope: !676)
!680 = !DILocation(line: 964, column: 11, scope: !670)
!681 = !DILocation(line: 965, column: 3, scope: !682)
!682 = distinct !DILexicalBlock(scope: !676, file: !3, line: 964, column: 50)
!683 = !DILocation(line: 965, column: 7, scope: !682)
!684 = !DILocation(line: 965, column: 16, scope: !682)
!685 = !DILocation(line: 966, column: 22, scope: !682)
!686 = !DILocation(line: 966, column: 3, scope: !682)
!687 = !DILocation(line: 966, column: 7, scope: !682)
!688 = !DILocation(line: 966, column: 20, scope: !682)
!689 = !DILocation(line: 967, column: 15, scope: !682)
!690 = !DILocation(line: 967, column: 19, scope: !682)
!691 = !DILocation(line: 967, column: 53, scope: !682)
!692 = !DILocation(line: 967, column: 3, scope: !682)
!693 = !DILocation(line: 968, column: 15, scope: !682)
!694 = !DILocation(line: 968, column: 19, scope: !682)
!695 = !DILocation(line: 968, column: 53, scope: !682)
!696 = !DILocation(line: 968, column: 3, scope: !682)
!697 = !DILocation(line: 969, column: 15, scope: !682)
!698 = !DILocation(line: 969, column: 19, scope: !682)
!699 = !DILocation(line: 969, column: 53, scope: !682)
!700 = !DILocation(line: 969, column: 3, scope: !682)
!701 = !DILocation(line: 970, column: 29, scope: !682)
!702 = !DILocation(line: 970, column: 33, scope: !682)
!703 = !DILocation(line: 970, column: 47, scope: !682)
!704 = !DILocation(line: 970, column: 51, scope: !682)
!705 = !DILocation(line: 970, column: 14, scope: !682)
!706 = !DILocation(line: 970, column: 3, scope: !682)
!707 = !DILocation(line: 970, column: 7, scope: !682)
!708 = !DILocation(line: 970, column: 12, scope: !682)
!709 = !DILocation(line: 971, column: 29, scope: !682)
!710 = !DILocation(line: 971, column: 33, scope: !682)
!711 = !DILocation(line: 971, column: 47, scope: !682)
!712 = !DILocation(line: 971, column: 51, scope: !682)
!713 = !DILocation(line: 971, column: 14, scope: !682)
!714 = !DILocation(line: 971, column: 3, scope: !682)
!715 = !DILocation(line: 971, column: 7, scope: !682)
!716 = !DILocation(line: 971, column: 12, scope: !682)
!717 = !DILocation(line: 972, column: 29, scope: !682)
!718 = !DILocation(line: 972, column: 33, scope: !682)
!719 = !DILocation(line: 972, column: 47, scope: !682)
!720 = !DILocation(line: 972, column: 51, scope: !682)
!721 = !DILocation(line: 972, column: 14, scope: !682)
!722 = !DILocation(line: 972, column: 3, scope: !682)
!723 = !DILocation(line: 972, column: 7, scope: !682)
!724 = !DILocation(line: 972, column: 12, scope: !682)
!725 = !DILocation(line: 973, column: 2, scope: !682)
!726 = !DILocation(line: 975, column: 2, scope: !662)
!727 = !DILocation(line: 976, column: 1, scope: !662)
!728 = distinct !DISubprogram(name: "ccgSubSurf_getUseAgeCounts", scope: !3, file: !3, line: 978, type: !729, scopeLine: 979, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, retainedNodes: !151)
!729 = !DISubroutineType(types: !730)
!730 = !{null, !187, !109, !109, !109, !109}
!731 = !DILocalVariable(name: "ss", arg: 1, scope: !728, file: !3, line: 978, type: !187)
!732 = !DILocation(line: 978, column: 45, scope: !728)
!733 = !DILocalVariable(name: "useAgeCounts_r", arg: 2, scope: !728, file: !3, line: 978, type: !109)
!734 = !DILocation(line: 978, column: 54, scope: !728)
!735 = !DILocalVariable(name: "vertUserOffset_r", arg: 3, scope: !728, file: !3, line: 978, type: !109)
!736 = !DILocation(line: 978, column: 75, scope: !728)
!737 = !DILocalVariable(name: "edgeUserOffset_r", arg: 4, scope: !728, file: !3, line: 978, type: !109)
!738 = !DILocation(line: 978, column: 98, scope: !728)
!739 = !DILocalVariable(name: "faceUserOffset_r", arg: 5, scope: !728, file: !3, line: 978, type: !109)
!740 = !DILocation(line: 978, column: 121, scope: !728)
!741 = !DILocation(line: 980, column: 20, scope: !728)
!742 = !DILocation(line: 980, column: 24, scope: !728)
!743 = !DILocation(line: 980, column: 3, scope: !728)
!744 = !DILocation(line: 980, column: 18, scope: !728)
!745 = !DILocation(line: 982, column: 6, scope: !746)
!746 = distinct !DILexicalBlock(scope: !728, file: !3, line: 982, column: 6)
!747 = !DILocation(line: 982, column: 6, scope: !728)
!748 = !DILocation(line: 982, column: 44, scope: !746)
!749 = !DILocation(line: 982, column: 48, scope: !746)
!750 = !DILocation(line: 982, column: 25, scope: !746)
!751 = !DILocation(line: 982, column: 42, scope: !746)
!752 = !DILocation(line: 982, column: 24, scope: !746)
!753 = !DILocation(line: 983, column: 6, scope: !754)
!754 = distinct !DILexicalBlock(scope: !728, file: !3, line: 983, column: 6)
!755 = !DILocation(line: 983, column: 6, scope: !728)
!756 = !DILocation(line: 983, column: 44, scope: !754)
!757 = !DILocation(line: 983, column: 48, scope: !754)
!758 = !DILocation(line: 983, column: 25, scope: !754)
!759 = !DILocation(line: 983, column: 42, scope: !754)
!760 = !DILocation(line: 983, column: 24, scope: !754)
!761 = !DILocation(line: 984, column: 6, scope: !762)
!762 = distinct !DILexicalBlock(scope: !728, file: !3, line: 984, column: 6)
!763 = !DILocation(line: 984, column: 6, scope: !728)
!764 = !DILocation(line: 984, column: 44, scope: !762)
!765 = !DILocation(line: 984, column: 48, scope: !762)
!766 = !DILocation(line: 984, column: 25, scope: !762)
!767 = !DILocation(line: 984, column: 42, scope: !762)
!768 = !DILocation(line: 984, column: 24, scope: !762)
!769 = !DILocation(line: 985, column: 1, scope: !728)
!770 = distinct !DISubprogram(name: "ccgSubSurf_setUseAgeCounts", scope: !3, file: !3, line: 987, type: !771, scopeLine: 988, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, retainedNodes: !151)
!771 = !DISubroutineType(types: !772)
!772 = !{!568, !187, !17, !17, !17, !17}
!773 = !DILocalVariable(name: "ss", arg: 1, scope: !770, file: !3, line: 987, type: !187)
!774 = !DILocation(line: 987, column: 49, scope: !770)
!775 = !DILocalVariable(name: "useAgeCounts", arg: 2, scope: !770, file: !3, line: 987, type: !17)
!776 = !DILocation(line: 987, column: 57, scope: !770)
!777 = !DILocalVariable(name: "vertUserOffset", arg: 3, scope: !770, file: !3, line: 987, type: !17)
!778 = !DILocation(line: 987, column: 75, scope: !770)
!779 = !DILocalVariable(name: "edgeUserOffset", arg: 4, scope: !770, file: !3, line: 987, type: !17)
!780 = !DILocation(line: 987, column: 95, scope: !770)
!781 = !DILocalVariable(name: "faceUserOffset", arg: 5, scope: !770, file: !3, line: 987, type: !17)
!782 = !DILocation(line: 987, column: 115, scope: !770)
!783 = !DILocation(line: 989, column: 6, scope: !784)
!784 = distinct !DILexicalBlock(scope: !770, file: !3, line: 989, column: 6)
!785 = !DILocation(line: 989, column: 6, scope: !770)
!786 = !DILocation(line: 990, column: 8, scope: !787)
!787 = distinct !DILexicalBlock(scope: !788, file: !3, line: 990, column: 7)
!788 = distinct !DILexicalBlock(scope: !784, file: !3, line: 989, column: 20)
!789 = !DILocation(line: 990, column: 23, scope: !787)
!790 = !DILocation(line: 990, column: 29, scope: !787)
!791 = !DILocation(line: 990, column: 33, scope: !787)
!792 = !DILocation(line: 990, column: 41, scope: !787)
!793 = !DILocation(line: 990, column: 27, scope: !787)
!794 = !DILocation(line: 990, column: 55, scope: !787)
!795 = !DILocation(line: 991, column: 8, scope: !787)
!796 = !DILocation(line: 991, column: 23, scope: !787)
!797 = !DILocation(line: 991, column: 29, scope: !787)
!798 = !DILocation(line: 991, column: 33, scope: !787)
!799 = !DILocation(line: 991, column: 41, scope: !787)
!800 = !DILocation(line: 991, column: 27, scope: !787)
!801 = !DILocation(line: 991, column: 55, scope: !787)
!802 = !DILocation(line: 992, column: 8, scope: !787)
!803 = !DILocation(line: 992, column: 23, scope: !787)
!804 = !DILocation(line: 992, column: 29, scope: !787)
!805 = !DILocation(line: 992, column: 33, scope: !787)
!806 = !DILocation(line: 992, column: 41, scope: !787)
!807 = !DILocation(line: 992, column: 27, scope: !787)
!808 = !DILocation(line: 990, column: 7, scope: !788)
!809 = !DILocation(line: 994, column: 4, scope: !810)
!810 = distinct !DILexicalBlock(scope: !787, file: !3, line: 993, column: 3)
!811 = !DILocation(line: 997, column: 4, scope: !812)
!812 = distinct !DILexicalBlock(scope: !787, file: !3, line: 996, column: 8)
!813 = !DILocation(line: 997, column: 8, scope: !812)
!814 = !DILocation(line: 997, column: 21, scope: !812)
!815 = !DILocation(line: 998, column: 28, scope: !812)
!816 = !DILocation(line: 998, column: 4, scope: !812)
!817 = !DILocation(line: 998, column: 8, scope: !812)
!818 = !DILocation(line: 998, column: 26, scope: !812)
!819 = !DILocation(line: 999, column: 28, scope: !812)
!820 = !DILocation(line: 999, column: 4, scope: !812)
!821 = !DILocation(line: 999, column: 8, scope: !812)
!822 = !DILocation(line: 999, column: 26, scope: !812)
!823 = !DILocation(line: 1000, column: 28, scope: !812)
!824 = !DILocation(line: 1000, column: 4, scope: !812)
!825 = !DILocation(line: 1000, column: 8, scope: !812)
!826 = !DILocation(line: 1000, column: 26, scope: !812)
!827 = !DILocation(line: 1002, column: 2, scope: !788)
!828 = !DILocation(line: 1004, column: 3, scope: !829)
!829 = distinct !DILexicalBlock(scope: !784, file: !3, line: 1003, column: 7)
!830 = !DILocation(line: 1004, column: 7, scope: !829)
!831 = !DILocation(line: 1004, column: 20, scope: !829)
!832 = !DILocation(line: 1005, column: 51, scope: !829)
!833 = !DILocation(line: 1005, column: 55, scope: !829)
!834 = !DILocation(line: 1005, column: 73, scope: !829)
!835 = !DILocation(line: 1005, column: 27, scope: !829)
!836 = !DILocation(line: 1005, column: 31, scope: !829)
!837 = !DILocation(line: 1005, column: 49, scope: !829)
!838 = !DILocation(line: 1005, column: 3, scope: !829)
!839 = !DILocation(line: 1005, column: 7, scope: !829)
!840 = !DILocation(line: 1005, column: 25, scope: !829)
!841 = !DILocation(line: 1008, column: 2, scope: !770)
!842 = !DILocation(line: 1009, column: 1, scope: !770)
!843 = distinct !DISubprogram(name: "ccgSubSurf_setCalcVertexNormals", scope: !3, file: !3, line: 1011, type: !844, scopeLine: 1012, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, retainedNodes: !151)
!844 = !DISubroutineType(types: !845)
!845 = !{!568, !187, !17, !17}
!846 = !DILocalVariable(name: "ss", arg: 1, scope: !843, file: !3, line: 1011, type: !187)
!847 = !DILocation(line: 1011, column: 54, scope: !843)
!848 = !DILocalVariable(name: "useVertNormals", arg: 2, scope: !843, file: !3, line: 1011, type: !17)
!849 = !DILocation(line: 1011, column: 62, scope: !843)
!850 = !DILocalVariable(name: "normalDataOffset", arg: 3, scope: !843, file: !3, line: 1011, type: !17)
!851 = !DILocation(line: 1011, column: 82, scope: !843)
!852 = !DILocation(line: 1013, column: 6, scope: !853)
!853 = distinct !DILexicalBlock(scope: !843, file: !3, line: 1013, column: 6)
!854 = !DILocation(line: 1013, column: 6, scope: !843)
!855 = !DILocation(line: 1014, column: 7, scope: !856)
!856 = distinct !DILexicalBlock(scope: !857, file: !3, line: 1014, column: 7)
!857 = distinct !DILexicalBlock(scope: !853, file: !3, line: 1013, column: 22)
!858 = !DILocation(line: 1014, column: 24, scope: !856)
!859 = !DILocation(line: 1014, column: 28, scope: !856)
!860 = !DILocation(line: 1014, column: 31, scope: !856)
!861 = !DILocation(line: 1014, column: 48, scope: !856)
!862 = !DILocation(line: 1014, column: 55, scope: !856)
!863 = !DILocation(line: 1014, column: 59, scope: !856)
!864 = !DILocation(line: 1014, column: 67, scope: !856)
!865 = !DILocation(line: 1014, column: 53, scope: !856)
!866 = !DILocation(line: 1014, column: 7, scope: !857)
!867 = !DILocation(line: 1015, column: 4, scope: !868)
!868 = distinct !DILexicalBlock(scope: !856, file: !3, line: 1014, column: 81)
!869 = !DILocation(line: 1018, column: 4, scope: !870)
!870 = distinct !DILexicalBlock(scope: !856, file: !3, line: 1017, column: 8)
!871 = !DILocation(line: 1018, column: 8, scope: !870)
!872 = !DILocation(line: 1018, column: 24, scope: !870)
!873 = !DILocation(line: 1019, column: 27, scope: !870)
!874 = !DILocation(line: 1019, column: 4, scope: !870)
!875 = !DILocation(line: 1019, column: 8, scope: !870)
!876 = !DILocation(line: 1019, column: 25, scope: !870)
!877 = !DILocation(line: 1021, column: 2, scope: !857)
!878 = !DILocation(line: 1023, column: 3, scope: !879)
!879 = distinct !DILexicalBlock(scope: !853, file: !3, line: 1022, column: 7)
!880 = !DILocation(line: 1023, column: 7, scope: !879)
!881 = !DILocation(line: 1023, column: 23, scope: !879)
!882 = !DILocation(line: 1024, column: 3, scope: !879)
!883 = !DILocation(line: 1024, column: 7, scope: !879)
!884 = !DILocation(line: 1024, column: 24, scope: !879)
!885 = !DILocation(line: 1027, column: 2, scope: !843)
!886 = !DILocation(line: 1028, column: 1, scope: !843)
!887 = distinct !DISubprogram(name: "ccgSubSurf_setAllocMask", scope: !3, file: !3, line: 1030, type: !888, scopeLine: 1031, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, retainedNodes: !151)
!888 = !DISubroutineType(types: !889)
!889 = !{null, !187, !17, !17}
!890 = !DILocalVariable(name: "ss", arg: 1, scope: !887, file: !3, line: 1030, type: !187)
!891 = !DILocation(line: 1030, column: 42, scope: !887)
!892 = !DILocalVariable(name: "allocMask", arg: 2, scope: !887, file: !3, line: 1030, type: !17)
!893 = !DILocation(line: 1030, column: 50, scope: !887)
!894 = !DILocalVariable(name: "maskOffset", arg: 3, scope: !887, file: !3, line: 1030, type: !17)
!895 = !DILocation(line: 1030, column: 65, scope: !887)
!896 = !DILocation(line: 1032, column: 18, scope: !887)
!897 = !DILocation(line: 1032, column: 2, scope: !887)
!898 = !DILocation(line: 1032, column: 6, scope: !887)
!899 = !DILocation(line: 1032, column: 16, scope: !887)
!900 = !DILocation(line: 1033, column: 23, scope: !887)
!901 = !DILocation(line: 1033, column: 2, scope: !887)
!902 = !DILocation(line: 1033, column: 6, scope: !887)
!903 = !DILocation(line: 1033, column: 21, scope: !887)
!904 = !DILocation(line: 1034, column: 1, scope: !887)
!905 = distinct !DISubprogram(name: "ccgSubSurf_setNumLayers", scope: !3, file: !3, line: 1036, type: !906, scopeLine: 1037, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, retainedNodes: !151)
!906 = !DISubroutineType(types: !907)
!907 = !{null, !187, !17}
!908 = !DILocalVariable(name: "ss", arg: 1, scope: !905, file: !3, line: 1036, type: !187)
!909 = !DILocation(line: 1036, column: 42, scope: !905)
!910 = !DILocalVariable(name: "numLayers", arg: 2, scope: !905, file: !3, line: 1036, type: !17)
!911 = !DILocation(line: 1036, column: 50, scope: !905)
!912 = !DILocation(line: 1038, column: 26, scope: !905)
!913 = !DILocation(line: 1038, column: 2, scope: !905)
!914 = !DILocation(line: 1038, column: 6, scope: !905)
!915 = !DILocation(line: 1038, column: 14, scope: !905)
!916 = !DILocation(line: 1038, column: 24, scope: !905)
!917 = !DILocation(line: 1039, column: 1, scope: !905)
!918 = distinct !DISubprogram(name: "ccgSubSurf_initFullSync", scope: !3, file: !3, line: 1043, type: !919, scopeLine: 1044, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, retainedNodes: !151)
!919 = !DISubroutineType(types: !920)
!920 = !{!568, !187}
!921 = !DILocalVariable(name: "ss", arg: 1, scope: !918, file: !3, line: 1043, type: !187)
!922 = !DILocation(line: 1043, column: 46, scope: !918)
!923 = !DILocation(line: 1045, column: 6, scope: !924)
!924 = distinct !DILexicalBlock(scope: !918, file: !3, line: 1045, column: 6)
!925 = !DILocation(line: 1045, column: 10, scope: !924)
!926 = !DILocation(line: 1045, column: 20, scope: !924)
!927 = !DILocation(line: 1045, column: 6, scope: !918)
!928 = !DILocation(line: 1046, column: 3, scope: !929)
!929 = distinct !DILexicalBlock(scope: !924, file: !3, line: 1045, column: 40)
!930 = !DILocation(line: 1049, column: 2, scope: !918)
!931 = !DILocation(line: 1049, column: 6, scope: !918)
!932 = !DILocation(line: 1049, column: 16, scope: !918)
!933 = !DILocation(line: 1051, column: 16, scope: !918)
!934 = !DILocation(line: 1051, column: 20, scope: !918)
!935 = !DILocation(line: 1051, column: 2, scope: !918)
!936 = !DILocation(line: 1051, column: 6, scope: !918)
!937 = !DILocation(line: 1051, column: 14, scope: !918)
!938 = !DILocation(line: 1052, column: 16, scope: !918)
!939 = !DILocation(line: 1052, column: 20, scope: !918)
!940 = !DILocation(line: 1052, column: 2, scope: !918)
!941 = !DILocation(line: 1052, column: 6, scope: !918)
!942 = !DILocation(line: 1052, column: 14, scope: !918)
!943 = !DILocation(line: 1053, column: 16, scope: !918)
!944 = !DILocation(line: 1053, column: 20, scope: !918)
!945 = !DILocation(line: 1053, column: 2, scope: !918)
!946 = !DILocation(line: 1053, column: 6, scope: !918)
!947 = !DILocation(line: 1053, column: 14, scope: !918)
!948 = !DILocation(line: 1055, column: 28, scope: !918)
!949 = !DILocation(line: 1055, column: 32, scope: !918)
!950 = !DILocation(line: 1055, column: 46, scope: !918)
!951 = !DILocation(line: 1055, column: 50, scope: !918)
!952 = !DILocation(line: 1055, column: 13, scope: !918)
!953 = !DILocation(line: 1055, column: 2, scope: !918)
!954 = !DILocation(line: 1055, column: 6, scope: !918)
!955 = !DILocation(line: 1055, column: 11, scope: !918)
!956 = !DILocation(line: 1056, column: 28, scope: !918)
!957 = !DILocation(line: 1056, column: 32, scope: !918)
!958 = !DILocation(line: 1056, column: 46, scope: !918)
!959 = !DILocation(line: 1056, column: 50, scope: !918)
!960 = !DILocation(line: 1056, column: 13, scope: !918)
!961 = !DILocation(line: 1056, column: 2, scope: !918)
!962 = !DILocation(line: 1056, column: 6, scope: !918)
!963 = !DILocation(line: 1056, column: 11, scope: !918)
!964 = !DILocation(line: 1057, column: 28, scope: !918)
!965 = !DILocation(line: 1057, column: 32, scope: !918)
!966 = !DILocation(line: 1057, column: 46, scope: !918)
!967 = !DILocation(line: 1057, column: 50, scope: !918)
!968 = !DILocation(line: 1057, column: 13, scope: !918)
!969 = !DILocation(line: 1057, column: 2, scope: !918)
!970 = !DILocation(line: 1057, column: 6, scope: !918)
!971 = !DILocation(line: 1057, column: 11, scope: !918)
!972 = !DILocation(line: 1059, column: 2, scope: !918)
!973 = !DILocation(line: 1059, column: 6, scope: !918)
!974 = !DILocation(line: 1059, column: 15, scope: !918)
!975 = !DILocation(line: 1061, column: 2, scope: !918)
!976 = !DILocation(line: 1061, column: 6, scope: !918)
!977 = !DILocation(line: 1061, column: 20, scope: !918)
!978 = !DILocation(line: 1062, column: 18, scope: !918)
!979 = !DILocation(line: 1062, column: 55, scope: !918)
!980 = !DILocation(line: 1062, column: 59, scope: !918)
!981 = !DILocation(line: 1062, column: 53, scope: !918)
!982 = !DILocation(line: 1062, column: 2, scope: !918)
!983 = !DILocation(line: 1062, column: 6, scope: !918)
!984 = !DILocation(line: 1062, column: 16, scope: !918)
!985 = !DILocation(line: 1063, column: 18, scope: !918)
!986 = !DILocation(line: 1063, column: 55, scope: !918)
!987 = !DILocation(line: 1063, column: 59, scope: !918)
!988 = !DILocation(line: 1063, column: 53, scope: !918)
!989 = !DILocation(line: 1063, column: 2, scope: !918)
!990 = !DILocation(line: 1063, column: 6, scope: !918)
!991 = !DILocation(line: 1063, column: 16, scope: !918)
!992 = !DILocation(line: 1065, column: 2, scope: !918)
!993 = !DILocation(line: 1065, column: 6, scope: !918)
!994 = !DILocation(line: 1065, column: 16, scope: !918)
!995 = !DILocation(line: 1067, column: 2, scope: !918)
!996 = !DILocation(line: 1068, column: 1, scope: !918)
!997 = distinct !DISubprogram(name: "ccgSubSurf_initPartialSync", scope: !3, file: !3, line: 1070, type: !919, scopeLine: 1071, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, retainedNodes: !151)
!998 = !DILocalVariable(name: "ss", arg: 1, scope: !997, file: !3, line: 1070, type: !187)
!999 = !DILocation(line: 1070, column: 49, scope: !997)
!1000 = !DILocation(line: 1072, column: 6, scope: !1001)
!1001 = distinct !DILexicalBlock(scope: !997, file: !3, line: 1072, column: 6)
!1002 = !DILocation(line: 1072, column: 10, scope: !1001)
!1003 = !DILocation(line: 1072, column: 20, scope: !1001)
!1004 = !DILocation(line: 1072, column: 6, scope: !997)
!1005 = !DILocation(line: 1073, column: 3, scope: !1006)
!1006 = distinct !DILexicalBlock(scope: !1001, file: !3, line: 1072, column: 40)
!1007 = !DILocation(line: 1076, column: 2, scope: !997)
!1008 = !DILocation(line: 1076, column: 6, scope: !997)
!1009 = !DILocation(line: 1076, column: 16, scope: !997)
!1010 = !DILocation(line: 1078, column: 2, scope: !997)
!1011 = !DILocation(line: 1078, column: 6, scope: !997)
!1012 = !DILocation(line: 1078, column: 16, scope: !997)
!1013 = !DILocation(line: 1080, column: 2, scope: !997)
!1014 = !DILocation(line: 1081, column: 1, scope: !997)
!1015 = distinct !DISubprogram(name: "ccgSubSurf_syncVertDel", scope: !3, file: !3, line: 1083, type: !1016, scopeLine: 1084, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, retainedNodes: !151)
!1016 = !DISubroutineType(types: !1017)
!1017 = !{!568, !187, !76}
!1018 = !DILocalVariable(name: "ss", arg: 1, scope: !1015, file: !3, line: 1083, type: !187)
!1019 = !DILocation(line: 1083, column: 45, scope: !1015)
!1020 = !DILocalVariable(name: "vHDL", arg: 2, scope: !1015, file: !3, line: 1083, type: !76)
!1021 = !DILocation(line: 1083, column: 60, scope: !1015)
!1022 = !DILocation(line: 1085, column: 6, scope: !1023)
!1023 = distinct !DILexicalBlock(scope: !1015, file: !3, line: 1085, column: 6)
!1024 = !DILocation(line: 1085, column: 10, scope: !1023)
!1025 = !DILocation(line: 1085, column: 20, scope: !1023)
!1026 = !DILocation(line: 1085, column: 6, scope: !1015)
!1027 = !DILocation(line: 1086, column: 3, scope: !1028)
!1028 = distinct !DILexicalBlock(scope: !1023, file: !3, line: 1085, column: 43)
!1029 = !DILocalVariable(name: "prevp", scope: !1030, file: !3, line: 1089, type: !140)
!1030 = distinct !DILexicalBlock(scope: !1023, file: !3, line: 1088, column: 7)
!1031 = !DILocation(line: 1089, column: 10, scope: !1030)
!1032 = !DILocalVariable(name: "v", scope: !1030, file: !3, line: 1090, type: !70)
!1033 = !DILocation(line: 1090, column: 12, scope: !1030)
!1034 = !DILocation(line: 1090, column: 38, scope: !1030)
!1035 = !DILocation(line: 1090, column: 42, scope: !1030)
!1036 = !DILocation(line: 1090, column: 48, scope: !1030)
!1037 = !DILocation(line: 1090, column: 16, scope: !1030)
!1038 = !DILocation(line: 1092, column: 8, scope: !1039)
!1039 = distinct !DILexicalBlock(scope: !1030, file: !3, line: 1092, column: 7)
!1040 = !DILocation(line: 1092, column: 10, scope: !1039)
!1041 = !DILocation(line: 1092, column: 13, scope: !1039)
!1042 = !DILocation(line: 1092, column: 16, scope: !1039)
!1043 = !DILocation(line: 1092, column: 25, scope: !1039)
!1044 = !DILocation(line: 1092, column: 28, scope: !1039)
!1045 = !DILocation(line: 1092, column: 31, scope: !1039)
!1046 = !DILocation(line: 1092, column: 7, scope: !1030)
!1047 = !DILocation(line: 1093, column: 4, scope: !1048)
!1048 = distinct !DILexicalBlock(scope: !1039, file: !3, line: 1092, column: 41)
!1049 = !DILocation(line: 1096, column: 13, scope: !1050)
!1050 = distinct !DILexicalBlock(scope: !1039, file: !3, line: 1095, column: 8)
!1051 = !DILocation(line: 1096, column: 16, scope: !1050)
!1052 = !DILocation(line: 1096, column: 5, scope: !1050)
!1053 = !DILocation(line: 1096, column: 11, scope: !1050)
!1054 = !DILocation(line: 1097, column: 15, scope: !1050)
!1055 = !DILocation(line: 1097, column: 18, scope: !1050)
!1056 = !DILocation(line: 1097, column: 4, scope: !1050)
!1057 = !DILocation(line: 1101, column: 2, scope: !1015)
!1058 = !DILocation(line: 1102, column: 1, scope: !1015)
!1059 = distinct !DISubprogram(name: "_ehash_lookupWithPrev", scope: !3, file: !3, line: 145, type: !1060, scopeLine: 146, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !30, retainedNodes: !151)
!1060 = !DISubroutineType(types: !1061)
!1061 = !{!15, !124, !15, !1062}
!1062 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !140, size: 64)
!1063 = !DILocalVariable(name: "eh", arg: 1, scope: !1059, file: !3, line: 145, type: !124)
!1064 = !DILocation(line: 145, column: 43, scope: !1059)
!1065 = !DILocalVariable(name: "key", arg: 2, scope: !1059, file: !3, line: 145, type: !15)
!1066 = !DILocation(line: 145, column: 53, scope: !1059)
!1067 = !DILocalVariable(name: "prevp_r", arg: 3, scope: !1059, file: !3, line: 145, type: !1062)
!1068 = !DILocation(line: 145, column: 66, scope: !1059)
!1069 = !DILocalVariable(name: "hash", scope: !1059, file: !3, line: 147, type: !17)
!1070 = !DILocation(line: 147, column: 6, scope: !1059)
!1071 = !DILocation(line: 147, column: 13, scope: !1059)
!1072 = !DILocalVariable(name: "prevp", scope: !1059, file: !3, line: 148, type: !140)
!1073 = !DILocation(line: 148, column: 9, scope: !1059)
!1074 = !DILocation(line: 148, column: 28, scope: !1059)
!1075 = !DILocation(line: 148, column: 32, scope: !1059)
!1076 = !DILocation(line: 148, column: 40, scope: !1059)
!1077 = !DILocation(line: 148, column: 17, scope: !1059)
!1078 = !DILocalVariable(name: "entry", scope: !1059, file: !3, line: 149, type: !61)
!1079 = !DILocation(line: 149, column: 11, scope: !1059)
!1080 = !DILocation(line: 151, column: 2, scope: !1059)
!1081 = !DILocation(line: 151, column: 19, scope: !1082)
!1082 = distinct !DILexicalBlock(scope: !1083, file: !3, line: 151, column: 2)
!1083 = distinct !DILexicalBlock(scope: !1059, file: !3, line: 151, column: 2)
!1084 = !DILocation(line: 151, column: 18, scope: !1082)
!1085 = !DILocation(line: 151, column: 16, scope: !1082)
!1086 = !DILocation(line: 151, column: 2, scope: !1083)
!1087 = !DILocation(line: 152, column: 7, scope: !1088)
!1088 = distinct !DILexicalBlock(scope: !1089, file: !3, line: 152, column: 7)
!1089 = distinct !DILexicalBlock(scope: !1082, file: !3, line: 151, column: 59)
!1090 = !DILocation(line: 152, column: 14, scope: !1088)
!1091 = !DILocation(line: 152, column: 21, scope: !1088)
!1092 = !DILocation(line: 152, column: 18, scope: !1088)
!1093 = !DILocation(line: 152, column: 7, scope: !1089)
!1094 = !DILocation(line: 153, column: 25, scope: !1095)
!1095 = distinct !DILexicalBlock(scope: !1088, file: !3, line: 152, column: 26)
!1096 = !DILocation(line: 153, column: 5, scope: !1095)
!1097 = !DILocation(line: 153, column: 13, scope: !1095)
!1098 = !DILocation(line: 154, column: 11, scope: !1095)
!1099 = !DILocation(line: 154, column: 4, scope: !1095)
!1100 = !DILocation(line: 156, column: 2, scope: !1089)
!1101 = !DILocation(line: 151, column: 46, scope: !1082)
!1102 = !DILocation(line: 151, column: 53, scope: !1082)
!1103 = !DILocation(line: 151, column: 35, scope: !1082)
!1104 = !DILocation(line: 151, column: 33, scope: !1082)
!1105 = !DILocation(line: 151, column: 2, scope: !1082)
!1106 = distinct !{!1106, !1086, !1107}
!1107 = !DILocation(line: 156, column: 2, scope: !1083)
!1108 = !DILocation(line: 158, column: 2, scope: !1059)
!1109 = !DILocation(line: 159, column: 1, scope: !1059)
!1110 = distinct !DISubprogram(name: "ccgSubSurf_syncEdgeDel", scope: !3, file: !3, line: 1104, type: !1111, scopeLine: 1105, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, retainedNodes: !151)
!1111 = !DISubroutineType(types: !1112)
!1112 = !{!568, !187, !67}
!1113 = !DILocalVariable(name: "ss", arg: 1, scope: !1110, file: !3, line: 1104, type: !187)
!1114 = !DILocation(line: 1104, column: 45, scope: !1110)
!1115 = !DILocalVariable(name: "eHDL", arg: 2, scope: !1110, file: !3, line: 1104, type: !67)
!1116 = !DILocation(line: 1104, column: 60, scope: !1110)
!1117 = !DILocation(line: 1106, column: 6, scope: !1118)
!1118 = distinct !DILexicalBlock(scope: !1110, file: !3, line: 1106, column: 6)
!1119 = !DILocation(line: 1106, column: 10, scope: !1118)
!1120 = !DILocation(line: 1106, column: 20, scope: !1118)
!1121 = !DILocation(line: 1106, column: 6, scope: !1110)
!1122 = !DILocation(line: 1107, column: 3, scope: !1123)
!1123 = distinct !DILexicalBlock(scope: !1118, file: !3, line: 1106, column: 43)
!1124 = !DILocalVariable(name: "prevp", scope: !1125, file: !3, line: 1110, type: !140)
!1125 = distinct !DILexicalBlock(scope: !1118, file: !3, line: 1109, column: 7)
!1126 = !DILocation(line: 1110, column: 10, scope: !1125)
!1127 = !DILocalVariable(name: "e", scope: !1125, file: !3, line: 1111, type: !84)
!1128 = !DILocation(line: 1111, column: 12, scope: !1125)
!1129 = !DILocation(line: 1111, column: 38, scope: !1125)
!1130 = !DILocation(line: 1111, column: 42, scope: !1125)
!1131 = !DILocation(line: 1111, column: 48, scope: !1125)
!1132 = !DILocation(line: 1111, column: 16, scope: !1125)
!1133 = !DILocation(line: 1113, column: 8, scope: !1134)
!1134 = distinct !DILexicalBlock(scope: !1125, file: !3, line: 1113, column: 7)
!1135 = !DILocation(line: 1113, column: 10, scope: !1134)
!1136 = !DILocation(line: 1113, column: 13, scope: !1134)
!1137 = !DILocation(line: 1113, column: 16, scope: !1134)
!1138 = !DILocation(line: 1113, column: 7, scope: !1125)
!1139 = !DILocation(line: 1114, column: 4, scope: !1140)
!1140 = distinct !DILexicalBlock(scope: !1134, file: !3, line: 1113, column: 26)
!1141 = !DILocation(line: 1117, column: 13, scope: !1142)
!1142 = distinct !DILexicalBlock(scope: !1134, file: !3, line: 1116, column: 8)
!1143 = !DILocation(line: 1117, column: 16, scope: !1142)
!1144 = !DILocation(line: 1117, column: 5, scope: !1142)
!1145 = !DILocation(line: 1117, column: 11, scope: !1142)
!1146 = !DILocation(line: 1118, column: 28, scope: !1142)
!1147 = !DILocation(line: 1118, column: 31, scope: !1142)
!1148 = !DILocation(line: 1118, column: 4, scope: !1142)
!1149 = !DILocation(line: 1122, column: 2, scope: !1110)
!1150 = !DILocation(line: 1123, column: 1, scope: !1110)
!1151 = distinct !DISubprogram(name: "_edge_unlinkMarkAndFree", scope: !3, file: !3, line: 685, type: !545, scopeLine: 686, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !30, retainedNodes: !151)
!1152 = !DILocalVariable(name: "e", arg: 1, scope: !1151, file: !3, line: 685, type: !84)
!1153 = !DILocation(line: 685, column: 46, scope: !1151)
!1154 = !DILocalVariable(name: "ss", arg: 2, scope: !1151, file: !3, line: 685, type: !187)
!1155 = !DILocation(line: 685, column: 61, scope: !1151)
!1156 = !DILocation(line: 687, column: 16, scope: !1151)
!1157 = !DILocation(line: 687, column: 19, scope: !1151)
!1158 = !DILocation(line: 687, column: 23, scope: !1151)
!1159 = !DILocation(line: 687, column: 2, scope: !1151)
!1160 = !DILocation(line: 688, column: 16, scope: !1151)
!1161 = !DILocation(line: 688, column: 19, scope: !1151)
!1162 = !DILocation(line: 688, column: 23, scope: !1151)
!1163 = !DILocation(line: 688, column: 2, scope: !1151)
!1164 = !DILocation(line: 689, column: 2, scope: !1151)
!1165 = !DILocation(line: 689, column: 5, scope: !1151)
!1166 = !DILocation(line: 689, column: 9, scope: !1151)
!1167 = !DILocation(line: 689, column: 15, scope: !1151)
!1168 = !DILocation(line: 690, column: 2, scope: !1151)
!1169 = !DILocation(line: 690, column: 5, scope: !1151)
!1170 = !DILocation(line: 690, column: 9, scope: !1151)
!1171 = !DILocation(line: 690, column: 15, scope: !1151)
!1172 = !DILocation(line: 691, column: 13, scope: !1151)
!1173 = !DILocation(line: 691, column: 16, scope: !1151)
!1174 = !DILocation(line: 691, column: 2, scope: !1151)
!1175 = !DILocation(line: 692, column: 1, scope: !1151)
!1176 = distinct !DISubprogram(name: "ccgSubSurf_syncFaceDel", scope: !3, file: !3, line: 1125, type: !1177, scopeLine: 1126, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, retainedNodes: !151)
!1177 = !DISubroutineType(types: !1178)
!1178 = !{!568, !187, !103}
!1179 = !DILocalVariable(name: "ss", arg: 1, scope: !1176, file: !3, line: 1125, type: !187)
!1180 = !DILocation(line: 1125, column: 45, scope: !1176)
!1181 = !DILocalVariable(name: "fHDL", arg: 2, scope: !1176, file: !3, line: 1125, type: !103)
!1182 = !DILocation(line: 1125, column: 60, scope: !1176)
!1183 = !DILocation(line: 1127, column: 6, scope: !1184)
!1184 = distinct !DILexicalBlock(scope: !1176, file: !3, line: 1127, column: 6)
!1185 = !DILocation(line: 1127, column: 10, scope: !1184)
!1186 = !DILocation(line: 1127, column: 20, scope: !1184)
!1187 = !DILocation(line: 1127, column: 6, scope: !1176)
!1188 = !DILocation(line: 1128, column: 3, scope: !1189)
!1189 = distinct !DILexicalBlock(scope: !1184, file: !3, line: 1127, column: 43)
!1190 = !DILocalVariable(name: "prevp", scope: !1191, file: !3, line: 1131, type: !140)
!1191 = distinct !DILexicalBlock(scope: !1184, file: !3, line: 1130, column: 7)
!1192 = !DILocation(line: 1131, column: 10, scope: !1191)
!1193 = !DILocalVariable(name: "f", scope: !1191, file: !3, line: 1132, type: !97)
!1194 = !DILocation(line: 1132, column: 12, scope: !1191)
!1195 = !DILocation(line: 1132, column: 38, scope: !1191)
!1196 = !DILocation(line: 1132, column: 42, scope: !1191)
!1197 = !DILocation(line: 1132, column: 48, scope: !1191)
!1198 = !DILocation(line: 1132, column: 16, scope: !1191)
!1199 = !DILocation(line: 1134, column: 8, scope: !1200)
!1200 = distinct !DILexicalBlock(scope: !1191, file: !3, line: 1134, column: 7)
!1201 = !DILocation(line: 1134, column: 7, scope: !1191)
!1202 = !DILocation(line: 1135, column: 4, scope: !1203)
!1203 = distinct !DILexicalBlock(scope: !1200, file: !3, line: 1134, column: 11)
!1204 = !DILocation(line: 1138, column: 13, scope: !1205)
!1205 = distinct !DILexicalBlock(scope: !1200, file: !3, line: 1137, column: 8)
!1206 = !DILocation(line: 1138, column: 16, scope: !1205)
!1207 = !DILocation(line: 1138, column: 5, scope: !1205)
!1208 = !DILocation(line: 1138, column: 11, scope: !1205)
!1209 = !DILocation(line: 1139, column: 28, scope: !1205)
!1210 = !DILocation(line: 1139, column: 31, scope: !1205)
!1211 = !DILocation(line: 1139, column: 4, scope: !1205)
!1212 = !DILocation(line: 1143, column: 2, scope: !1176)
!1213 = !DILocation(line: 1144, column: 1, scope: !1176)
!1214 = distinct !DISubprogram(name: "_face_unlinkMarkAndFree", scope: !3, file: !3, line: 837, type: !536, scopeLine: 838, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !30, retainedNodes: !151)
!1215 = !DILocalVariable(name: "f", arg: 1, scope: !1214, file: !3, line: 837, type: !97)
!1216 = !DILocation(line: 837, column: 46, scope: !1214)
!1217 = !DILocalVariable(name: "ss", arg: 2, scope: !1214, file: !3, line: 837, type: !187)
!1218 = !DILocation(line: 837, column: 61, scope: !1214)
!1219 = !DILocalVariable(name: "j", scope: !1214, file: !3, line: 839, type: !17)
!1220 = !DILocation(line: 839, column: 6, scope: !1214)
!1221 = !DILocation(line: 840, column: 9, scope: !1222)
!1222 = distinct !DILexicalBlock(scope: !1214, file: !3, line: 840, column: 2)
!1223 = !DILocation(line: 840, column: 7, scope: !1222)
!1224 = !DILocation(line: 840, column: 14, scope: !1225)
!1225 = distinct !DILexicalBlock(scope: !1222, file: !3, line: 840, column: 2)
!1226 = !DILocation(line: 840, column: 18, scope: !1225)
!1227 = !DILocation(line: 840, column: 21, scope: !1225)
!1228 = !DILocation(line: 840, column: 16, scope: !1225)
!1229 = !DILocation(line: 840, column: 2, scope: !1222)
!1230 = !DILocation(line: 841, column: 31, scope: !1231)
!1231 = distinct !DILexicalBlock(scope: !1225, file: !3, line: 840, column: 36)
!1232 = !DILocation(line: 841, column: 17, scope: !1231)
!1233 = !DILocation(line: 841, column: 34, scope: !1231)
!1234 = !DILocation(line: 841, column: 38, scope: !1231)
!1235 = !DILocation(line: 841, column: 3, scope: !1231)
!1236 = !DILocation(line: 842, column: 31, scope: !1231)
!1237 = !DILocation(line: 842, column: 17, scope: !1231)
!1238 = !DILocation(line: 842, column: 34, scope: !1231)
!1239 = !DILocation(line: 842, column: 38, scope: !1231)
!1240 = !DILocation(line: 842, column: 3, scope: !1231)
!1241 = !DILocation(line: 843, column: 17, scope: !1231)
!1242 = !DILocation(line: 843, column: 3, scope: !1231)
!1243 = !DILocation(line: 843, column: 20, scope: !1231)
!1244 = !DILocation(line: 843, column: 24, scope: !1231)
!1245 = !DILocation(line: 843, column: 30, scope: !1231)
!1246 = !DILocation(line: 844, column: 2, scope: !1231)
!1247 = !DILocation(line: 840, column: 32, scope: !1225)
!1248 = !DILocation(line: 840, column: 2, scope: !1225)
!1249 = distinct !{!1249, !1229, !1250}
!1250 = !DILocation(line: 844, column: 2, scope: !1222)
!1251 = !DILocation(line: 845, column: 13, scope: !1214)
!1252 = !DILocation(line: 845, column: 16, scope: !1214)
!1253 = !DILocation(line: 845, column: 2, scope: !1214)
!1254 = !DILocation(line: 846, column: 1, scope: !1214)
!1255 = distinct !DISubprogram(name: "ccgSubSurf_syncVert", scope: !3, file: !3, line: 1146, type: !1256, scopeLine: 1147, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, retainedNodes: !151)
!1256 = !DISubroutineType(types: !1257)
!1257 = !{!568, !187, !76, !1258, !17, !141}
!1258 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1259, size: 64)
!1259 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!1260 = !DILocalVariable(name: "ss", arg: 1, scope: !1255, file: !3, line: 1146, type: !187)
!1261 = !DILocation(line: 1146, column: 42, scope: !1255)
!1262 = !DILocalVariable(name: "vHDL", arg: 2, scope: !1255, file: !3, line: 1146, type: !76)
!1263 = !DILocation(line: 1146, column: 57, scope: !1255)
!1264 = !DILocalVariable(name: "vertData", arg: 3, scope: !1255, file: !3, line: 1146, type: !1258)
!1265 = !DILocation(line: 1146, column: 75, scope: !1255)
!1266 = !DILocalVariable(name: "seam", arg: 4, scope: !1255, file: !3, line: 1146, type: !17)
!1267 = !DILocation(line: 1146, column: 89, scope: !1255)
!1268 = !DILocalVariable(name: "v_r", arg: 5, scope: !1255, file: !3, line: 1146, type: !141)
!1269 = !DILocation(line: 1146, column: 105, scope: !1255)
!1270 = !DILocalVariable(name: "prevp", scope: !1255, file: !3, line: 1148, type: !140)
!1271 = !DILocation(line: 1148, column: 9, scope: !1255)
!1272 = !DILocalVariable(name: "v", scope: !1255, file: !3, line: 1149, type: !70)
!1273 = !DILocation(line: 1149, column: 11, scope: !1255)
!1274 = !DILocalVariable(name: "seamflag", scope: !1255, file: !3, line: 1150, type: !78)
!1275 = !DILocation(line: 1150, column: 8, scope: !1255)
!1276 = !DILocation(line: 1150, column: 20, scope: !1255)
!1277 = !DILocation(line: 1150, column: 19, scope: !1255)
!1278 = !DILocation(line: 1152, column: 6, scope: !1279)
!1279 = distinct !DILexicalBlock(scope: !1255, file: !3, line: 1152, column: 6)
!1280 = !DILocation(line: 1152, column: 10, scope: !1279)
!1281 = !DILocation(line: 1152, column: 20, scope: !1279)
!1282 = !DILocation(line: 1152, column: 6, scope: !1255)
!1283 = !DILocation(line: 1153, column: 29, scope: !1284)
!1284 = distinct !DILexicalBlock(scope: !1279, file: !3, line: 1152, column: 43)
!1285 = !DILocation(line: 1153, column: 33, scope: !1284)
!1286 = !DILocation(line: 1153, column: 39, scope: !1284)
!1287 = !DILocation(line: 1153, column: 7, scope: !1284)
!1288 = !DILocation(line: 1153, column: 5, scope: !1284)
!1289 = !DILocation(line: 1154, column: 8, scope: !1290)
!1290 = distinct !DILexicalBlock(scope: !1284, file: !3, line: 1154, column: 7)
!1291 = !DILocation(line: 1154, column: 7, scope: !1284)
!1292 = !DILocation(line: 1155, column: 18, scope: !1293)
!1293 = distinct !DILexicalBlock(scope: !1290, file: !3, line: 1154, column: 11)
!1294 = !DILocation(line: 1155, column: 24, scope: !1293)
!1295 = !DILocation(line: 1155, column: 8, scope: !1293)
!1296 = !DILocation(line: 1155, column: 6, scope: !1293)
!1297 = !DILocation(line: 1156, column: 29, scope: !1293)
!1298 = !DILocation(line: 1156, column: 35, scope: !1293)
!1299 = !DILocation(line: 1156, column: 39, scope: !1293)
!1300 = !DILocation(line: 1156, column: 47, scope: !1293)
!1301 = !DILocation(line: 1156, column: 17, scope: !1293)
!1302 = !DILocation(line: 1156, column: 62, scope: !1293)
!1303 = !DILocation(line: 1156, column: 72, scope: !1293)
!1304 = !DILocation(line: 1156, column: 4, scope: !1293)
!1305 = !DILocation(line: 1157, column: 18, scope: !1293)
!1306 = !DILocation(line: 1157, column: 22, scope: !1293)
!1307 = !DILocation(line: 1157, column: 40, scope: !1293)
!1308 = !DILocation(line: 1157, column: 28, scope: !1293)
!1309 = !DILocation(line: 1157, column: 4, scope: !1293)
!1310 = !DILocation(line: 1158, column: 32, scope: !1293)
!1311 = !DILocation(line: 1158, column: 30, scope: !1293)
!1312 = !DILocation(line: 1158, column: 15, scope: !1293)
!1313 = !DILocation(line: 1158, column: 4, scope: !1293)
!1314 = !DILocation(line: 1158, column: 7, scope: !1293)
!1315 = !DILocation(line: 1158, column: 13, scope: !1293)
!1316 = !DILocation(line: 1159, column: 3, scope: !1293)
!1317 = !DILocation(line: 1160, column: 27, scope: !1318)
!1318 = distinct !DILexicalBlock(scope: !1290, file: !3, line: 1160, column: 12)
!1319 = !DILocation(line: 1160, column: 49, scope: !1318)
!1320 = !DILocation(line: 1160, column: 55, scope: !1318)
!1321 = !DILocation(line: 1160, column: 59, scope: !1318)
!1322 = !DILocation(line: 1160, column: 67, scope: !1318)
!1323 = !DILocation(line: 1160, column: 37, scope: !1318)
!1324 = !DILocation(line: 1160, column: 82, scope: !1318)
!1325 = !DILocation(line: 1160, column: 13, scope: !1318)
!1326 = !DILocation(line: 1160, column: 86, scope: !1318)
!1327 = !DILocation(line: 1161, column: 14, scope: !1318)
!1328 = !DILocation(line: 1161, column: 17, scope: !1318)
!1329 = !DILocation(line: 1161, column: 23, scope: !1318)
!1330 = !DILocation(line: 1161, column: 40, scope: !1318)
!1331 = !DILocation(line: 1161, column: 37, scope: !1318)
!1332 = !DILocation(line: 1160, column: 12, scope: !1290)
!1333 = !DILocalVariable(name: "i", scope: !1334, file: !3, line: 1163, type: !17)
!1334 = distinct !DILexicalBlock(scope: !1318, file: !3, line: 1162, column: 3)
!1335 = !DILocation(line: 1163, column: 8, scope: !1334)
!1336 = !DILocalVariable(name: "j", scope: !1334, file: !3, line: 1163, type: !17)
!1337 = !DILocation(line: 1163, column: 11, scope: !1334)
!1338 = !DILocation(line: 1165, column: 29, scope: !1334)
!1339 = !DILocation(line: 1165, column: 35, scope: !1334)
!1340 = !DILocation(line: 1165, column: 39, scope: !1334)
!1341 = !DILocation(line: 1165, column: 47, scope: !1334)
!1342 = !DILocation(line: 1165, column: 17, scope: !1334)
!1343 = !DILocation(line: 1165, column: 62, scope: !1334)
!1344 = !DILocation(line: 1165, column: 72, scope: !1334)
!1345 = !DILocation(line: 1165, column: 4, scope: !1334)
!1346 = !DILocation(line: 1166, column: 32, scope: !1334)
!1347 = !DILocation(line: 1166, column: 30, scope: !1334)
!1348 = !DILocation(line: 1166, column: 15, scope: !1334)
!1349 = !DILocation(line: 1166, column: 4, scope: !1334)
!1350 = !DILocation(line: 1166, column: 7, scope: !1334)
!1351 = !DILocation(line: 1166, column: 13, scope: !1334)
!1352 = !DILocation(line: 1168, column: 11, scope: !1353)
!1353 = distinct !DILexicalBlock(scope: !1334, file: !3, line: 1168, column: 4)
!1354 = !DILocation(line: 1168, column: 9, scope: !1353)
!1355 = !DILocation(line: 1168, column: 16, scope: !1356)
!1356 = distinct !DILexicalBlock(scope: !1353, file: !3, line: 1168, column: 4)
!1357 = !DILocation(line: 1168, column: 20, scope: !1356)
!1358 = !DILocation(line: 1168, column: 23, scope: !1356)
!1359 = !DILocation(line: 1168, column: 18, scope: !1356)
!1360 = !DILocation(line: 1168, column: 4, scope: !1353)
!1361 = !DILocalVariable(name: "e", scope: !1362, file: !3, line: 1169, type: !84)
!1362 = distinct !DILexicalBlock(scope: !1356, file: !3, line: 1168, column: 38)
!1363 = !DILocation(line: 1169, column: 14, scope: !1362)
!1364 = !DILocation(line: 1169, column: 18, scope: !1362)
!1365 = !DILocation(line: 1169, column: 21, scope: !1362)
!1366 = !DILocation(line: 1169, column: 27, scope: !1362)
!1367 = !DILocation(line: 1170, column: 5, scope: !1362)
!1368 = !DILocation(line: 1170, column: 8, scope: !1362)
!1369 = !DILocation(line: 1170, column: 12, scope: !1362)
!1370 = !DILocation(line: 1170, column: 18, scope: !1362)
!1371 = !DILocation(line: 1171, column: 5, scope: !1362)
!1372 = !DILocation(line: 1171, column: 8, scope: !1362)
!1373 = !DILocation(line: 1171, column: 12, scope: !1362)
!1374 = !DILocation(line: 1171, column: 18, scope: !1362)
!1375 = !DILocation(line: 1172, column: 4, scope: !1362)
!1376 = !DILocation(line: 1168, column: 34, scope: !1356)
!1377 = !DILocation(line: 1168, column: 4, scope: !1356)
!1378 = distinct !{!1378, !1360, !1379}
!1379 = !DILocation(line: 1172, column: 4, scope: !1353)
!1380 = !DILocation(line: 1173, column: 11, scope: !1381)
!1381 = distinct !DILexicalBlock(scope: !1334, file: !3, line: 1173, column: 4)
!1382 = !DILocation(line: 1173, column: 9, scope: !1381)
!1383 = !DILocation(line: 1173, column: 16, scope: !1384)
!1384 = distinct !DILexicalBlock(scope: !1381, file: !3, line: 1173, column: 4)
!1385 = !DILocation(line: 1173, column: 20, scope: !1384)
!1386 = !DILocation(line: 1173, column: 23, scope: !1384)
!1387 = !DILocation(line: 1173, column: 18, scope: !1384)
!1388 = !DILocation(line: 1173, column: 4, scope: !1381)
!1389 = !DILocalVariable(name: "f", scope: !1390, file: !3, line: 1174, type: !97)
!1390 = distinct !DILexicalBlock(scope: !1384, file: !3, line: 1173, column: 38)
!1391 = !DILocation(line: 1174, column: 14, scope: !1390)
!1392 = !DILocation(line: 1174, column: 18, scope: !1390)
!1393 = !DILocation(line: 1174, column: 21, scope: !1390)
!1394 = !DILocation(line: 1174, column: 27, scope: !1390)
!1395 = !DILocation(line: 1175, column: 12, scope: !1396)
!1396 = distinct !DILexicalBlock(scope: !1390, file: !3, line: 1175, column: 5)
!1397 = !DILocation(line: 1175, column: 10, scope: !1396)
!1398 = !DILocation(line: 1175, column: 17, scope: !1399)
!1399 = distinct !DILexicalBlock(scope: !1396, file: !3, line: 1175, column: 5)
!1400 = !DILocation(line: 1175, column: 21, scope: !1399)
!1401 = !DILocation(line: 1175, column: 24, scope: !1399)
!1402 = !DILocation(line: 1175, column: 19, scope: !1399)
!1403 = !DILocation(line: 1175, column: 5, scope: !1396)
!1404 = !DILocation(line: 1176, column: 20, scope: !1405)
!1405 = distinct !DILexicalBlock(scope: !1399, file: !3, line: 1175, column: 39)
!1406 = !DILocation(line: 1176, column: 6, scope: !1405)
!1407 = !DILocation(line: 1176, column: 23, scope: !1405)
!1408 = !DILocation(line: 1176, column: 27, scope: !1405)
!1409 = !DILocation(line: 1176, column: 33, scope: !1405)
!1410 = !DILocation(line: 1177, column: 5, scope: !1405)
!1411 = !DILocation(line: 1175, column: 35, scope: !1399)
!1412 = !DILocation(line: 1175, column: 5, scope: !1399)
!1413 = distinct !{!1413, !1403, !1414}
!1414 = !DILocation(line: 1177, column: 5, scope: !1396)
!1415 = !DILocation(line: 1178, column: 4, scope: !1390)
!1416 = !DILocation(line: 1173, column: 34, scope: !1384)
!1417 = !DILocation(line: 1173, column: 4, scope: !1384)
!1418 = distinct !{!1418, !1388, !1419}
!1419 = !DILocation(line: 1178, column: 4, scope: !1381)
!1420 = !DILocation(line: 1179, column: 3, scope: !1334)
!1421 = !DILocation(line: 1180, column: 2, scope: !1284)
!1422 = !DILocation(line: 1182, column: 7, scope: !1423)
!1423 = distinct !DILexicalBlock(scope: !1424, file: !3, line: 1182, column: 7)
!1424 = distinct !DILexicalBlock(scope: !1279, file: !3, line: 1181, column: 7)
!1425 = !DILocation(line: 1182, column: 11, scope: !1423)
!1426 = !DILocation(line: 1182, column: 21, scope: !1423)
!1427 = !DILocation(line: 1182, column: 7, scope: !1424)
!1428 = !DILocation(line: 1183, column: 4, scope: !1429)
!1429 = distinct !DILexicalBlock(scope: !1423, file: !3, line: 1182, column: 41)
!1430 = !DILocation(line: 1186, column: 29, scope: !1424)
!1431 = !DILocation(line: 1186, column: 33, scope: !1424)
!1432 = !DILocation(line: 1186, column: 42, scope: !1424)
!1433 = !DILocation(line: 1186, column: 7, scope: !1424)
!1434 = !DILocation(line: 1186, column: 5, scope: !1424)
!1435 = !DILocation(line: 1187, column: 8, scope: !1436)
!1436 = distinct !DILexicalBlock(scope: !1424, file: !3, line: 1187, column: 7)
!1437 = !DILocation(line: 1187, column: 7, scope: !1424)
!1438 = !DILocation(line: 1188, column: 18, scope: !1439)
!1439 = distinct !DILexicalBlock(scope: !1436, file: !3, line: 1187, column: 11)
!1440 = !DILocation(line: 1188, column: 24, scope: !1439)
!1441 = !DILocation(line: 1188, column: 8, scope: !1439)
!1442 = !DILocation(line: 1188, column: 6, scope: !1439)
!1443 = !DILocation(line: 1189, column: 29, scope: !1439)
!1444 = !DILocation(line: 1189, column: 35, scope: !1439)
!1445 = !DILocation(line: 1189, column: 39, scope: !1439)
!1446 = !DILocation(line: 1189, column: 47, scope: !1439)
!1447 = !DILocation(line: 1189, column: 17, scope: !1439)
!1448 = !DILocation(line: 1189, column: 62, scope: !1439)
!1449 = !DILocation(line: 1189, column: 72, scope: !1439)
!1450 = !DILocation(line: 1189, column: 4, scope: !1439)
!1451 = !DILocation(line: 1190, column: 18, scope: !1439)
!1452 = !DILocation(line: 1190, column: 22, scope: !1439)
!1453 = !DILocation(line: 1190, column: 40, scope: !1439)
!1454 = !DILocation(line: 1190, column: 28, scope: !1439)
!1455 = !DILocation(line: 1190, column: 4, scope: !1439)
!1456 = !DILocation(line: 1191, column: 32, scope: !1439)
!1457 = !DILocation(line: 1191, column: 30, scope: !1439)
!1458 = !DILocation(line: 1191, column: 15, scope: !1439)
!1459 = !DILocation(line: 1191, column: 4, scope: !1439)
!1460 = !DILocation(line: 1191, column: 7, scope: !1439)
!1461 = !DILocation(line: 1191, column: 13, scope: !1439)
!1462 = !DILocation(line: 1192, column: 3, scope: !1439)
!1463 = !DILocation(line: 1193, column: 27, scope: !1464)
!1464 = distinct !DILexicalBlock(scope: !1436, file: !3, line: 1193, column: 12)
!1465 = !DILocation(line: 1193, column: 49, scope: !1464)
!1466 = !DILocation(line: 1193, column: 55, scope: !1464)
!1467 = !DILocation(line: 1193, column: 59, scope: !1464)
!1468 = !DILocation(line: 1193, column: 67, scope: !1464)
!1469 = !DILocation(line: 1193, column: 37, scope: !1464)
!1470 = !DILocation(line: 1193, column: 82, scope: !1464)
!1471 = !DILocation(line: 1193, column: 13, scope: !1464)
!1472 = !DILocation(line: 1193, column: 86, scope: !1464)
!1473 = !DILocation(line: 1194, column: 14, scope: !1464)
!1474 = !DILocation(line: 1194, column: 17, scope: !1464)
!1475 = !DILocation(line: 1194, column: 23, scope: !1464)
!1476 = !DILocation(line: 1194, column: 40, scope: !1464)
!1477 = !DILocation(line: 1194, column: 37, scope: !1464)
!1478 = !DILocation(line: 1193, column: 12, scope: !1436)
!1479 = !DILocation(line: 1196, column: 13, scope: !1480)
!1480 = distinct !DILexicalBlock(scope: !1464, file: !3, line: 1195, column: 3)
!1481 = !DILocation(line: 1196, column: 16, scope: !1480)
!1482 = !DILocation(line: 1196, column: 5, scope: !1480)
!1483 = !DILocation(line: 1196, column: 11, scope: !1480)
!1484 = !DILocation(line: 1197, column: 18, scope: !1480)
!1485 = !DILocation(line: 1197, column: 22, scope: !1480)
!1486 = !DILocation(line: 1197, column: 40, scope: !1480)
!1487 = !DILocation(line: 1197, column: 28, scope: !1480)
!1488 = !DILocation(line: 1197, column: 4, scope: !1480)
!1489 = !DILocation(line: 1198, column: 29, scope: !1480)
!1490 = !DILocation(line: 1198, column: 35, scope: !1480)
!1491 = !DILocation(line: 1198, column: 39, scope: !1480)
!1492 = !DILocation(line: 1198, column: 47, scope: !1480)
!1493 = !DILocation(line: 1198, column: 17, scope: !1480)
!1494 = !DILocation(line: 1198, column: 62, scope: !1480)
!1495 = !DILocation(line: 1198, column: 72, scope: !1480)
!1496 = !DILocation(line: 1198, column: 4, scope: !1480)
!1497 = !DILocation(line: 1199, column: 48, scope: !1480)
!1498 = !DILocation(line: 1199, column: 46, scope: !1480)
!1499 = !DILocation(line: 1199, column: 15, scope: !1480)
!1500 = !DILocation(line: 1199, column: 4, scope: !1480)
!1501 = !DILocation(line: 1199, column: 7, scope: !1480)
!1502 = !DILocation(line: 1199, column: 13, scope: !1480)
!1503 = !DILocation(line: 1200, column: 3, scope: !1480)
!1504 = !DILocation(line: 1202, column: 13, scope: !1505)
!1505 = distinct !DILexicalBlock(scope: !1464, file: !3, line: 1201, column: 8)
!1506 = !DILocation(line: 1202, column: 16, scope: !1505)
!1507 = !DILocation(line: 1202, column: 5, scope: !1505)
!1508 = !DILocation(line: 1202, column: 11, scope: !1505)
!1509 = !DILocation(line: 1203, column: 18, scope: !1505)
!1510 = !DILocation(line: 1203, column: 22, scope: !1505)
!1511 = !DILocation(line: 1203, column: 40, scope: !1505)
!1512 = !DILocation(line: 1203, column: 28, scope: !1505)
!1513 = !DILocation(line: 1203, column: 4, scope: !1505)
!1514 = !DILocation(line: 1204, column: 4, scope: !1505)
!1515 = !DILocation(line: 1204, column: 7, scope: !1505)
!1516 = !DILocation(line: 1204, column: 13, scope: !1505)
!1517 = !DILocation(line: 1208, column: 6, scope: !1518)
!1518 = distinct !DILexicalBlock(scope: !1255, file: !3, line: 1208, column: 6)
!1519 = !DILocation(line: 1208, column: 6, scope: !1255)
!1520 = !DILocation(line: 1208, column: 18, scope: !1518)
!1521 = !DILocation(line: 1208, column: 12, scope: !1518)
!1522 = !DILocation(line: 1208, column: 16, scope: !1518)
!1523 = !DILocation(line: 1208, column: 11, scope: !1518)
!1524 = !DILocation(line: 1209, column: 2, scope: !1255)
!1525 = !DILocation(line: 1210, column: 1, scope: !1255)
!1526 = distinct !DISubprogram(name: "_vert_new", scope: !3, file: !3, line: 508, type: !1527, scopeLine: 509, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !30, retainedNodes: !151)
!1527 = !DISubroutineType(types: !1528)
!1528 = !{!70, !76, !187}
!1529 = !DILocalVariable(name: "vHDL", arg: 1, scope: !1526, file: !3, line: 508, type: !76)
!1530 = !DILocation(line: 508, column: 38, scope: !1526)
!1531 = !DILocalVariable(name: "ss", arg: 2, scope: !1526, file: !3, line: 508, type: !187)
!1532 = !DILocation(line: 508, column: 56, scope: !1526)
!1533 = !DILocalVariable(name: "num_vert_data", scope: !1526, file: !3, line: 510, type: !17)
!1534 = !DILocation(line: 510, column: 6, scope: !1526)
!1535 = !DILocation(line: 510, column: 22, scope: !1526)
!1536 = !DILocation(line: 510, column: 26, scope: !1526)
!1537 = !DILocation(line: 510, column: 39, scope: !1526)
!1538 = !DILocalVariable(name: "v", scope: !1526, file: !3, line: 511, type: !70)
!1539 = !DILocation(line: 511, column: 11, scope: !1526)
!1540 = !DILocation(line: 511, column: 15, scope: !1526)
!1541 = !DILocalVariable(name: "userData", scope: !1526, file: !3, line: 515, type: !142)
!1542 = !DILocation(line: 515, column: 8, scope: !1526)
!1543 = !DILocation(line: 517, column: 12, scope: !1526)
!1544 = !DILocation(line: 517, column: 2, scope: !1526)
!1545 = !DILocation(line: 517, column: 5, scope: !1526)
!1546 = !DILocation(line: 517, column: 10, scope: !1526)
!1547 = !DILocation(line: 518, column: 2, scope: !1526)
!1548 = !DILocation(line: 518, column: 5, scope: !1526)
!1549 = !DILocation(line: 518, column: 11, scope: !1526)
!1550 = !DILocation(line: 519, column: 2, scope: !1526)
!1551 = !DILocation(line: 519, column: 5, scope: !1526)
!1552 = !DILocation(line: 519, column: 11, scope: !1526)
!1553 = !DILocation(line: 520, column: 16, scope: !1526)
!1554 = !DILocation(line: 520, column: 19, scope: !1526)
!1555 = !DILocation(line: 520, column: 28, scope: !1526)
!1556 = !DILocation(line: 520, column: 2, scope: !1526)
!1557 = !DILocation(line: 520, column: 5, scope: !1526)
!1558 = !DILocation(line: 520, column: 14, scope: !1526)
!1559 = !DILocation(line: 521, column: 2, scope: !1526)
!1560 = !DILocation(line: 521, column: 5, scope: !1526)
!1561 = !DILocation(line: 521, column: 11, scope: !1526)
!1562 = !DILocation(line: 523, column: 40, scope: !1526)
!1563 = !DILocation(line: 523, column: 44, scope: !1526)
!1564 = !DILocation(line: 523, column: 13, scope: !1526)
!1565 = !DILocation(line: 523, column: 11, scope: !1526)
!1566 = !DILocation(line: 524, column: 9, scope: !1526)
!1567 = !DILocation(line: 524, column: 22, scope: !1526)
!1568 = !DILocation(line: 524, column: 26, scope: !1526)
!1569 = !DILocation(line: 524, column: 34, scope: !1526)
!1570 = !DILocation(line: 524, column: 2, scope: !1526)
!1571 = !DILocation(line: 525, column: 6, scope: !1572)
!1572 = distinct !DILexicalBlock(scope: !1526, file: !3, line: 525, column: 6)
!1573 = !DILocation(line: 525, column: 10, scope: !1572)
!1574 = !DILocation(line: 525, column: 6, scope: !1526)
!1575 = !DILocation(line: 525, column: 70, scope: !1572)
!1576 = !DILocation(line: 525, column: 74, scope: !1572)
!1577 = !DILocation(line: 525, column: 35, scope: !1572)
!1578 = !DILocation(line: 525, column: 44, scope: !1572)
!1579 = !DILocation(line: 525, column: 48, scope: !1572)
!1580 = !DILocation(line: 525, column: 24, scope: !1572)
!1581 = !DILocation(line: 525, column: 68, scope: !1572)
!1582 = !DILocation(line: 527, column: 9, scope: !1526)
!1583 = !DILocation(line: 527, column: 2, scope: !1526)
!1584 = distinct !DISubprogram(name: "VertDataCopy", scope: !3, file: !3, line: 468, type: !1585, scopeLine: 469, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !30, retainedNodes: !151)
!1585 = !DISubroutineType(types: !1586)
!1586 = !{null, !68, !1587, !1589}
!1587 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1588, size: 64)
!1588 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !69)
!1589 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1590, size: 64)
!1590 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !188)
!1591 = !DILocalVariable(name: "dst", arg: 1, scope: !1584, file: !3, line: 468, type: !68)
!1592 = !DILocation(line: 468, column: 32, scope: !1584)
!1593 = !DILocalVariable(name: "src", arg: 2, scope: !1584, file: !3, line: 468, type: !1587)
!1594 = !DILocation(line: 468, column: 51, scope: !1584)
!1595 = !DILocalVariable(name: "ss", arg: 3, scope: !1584, file: !3, line: 468, type: !1589)
!1596 = !DILocation(line: 468, column: 76, scope: !1584)
!1597 = !DILocalVariable(name: "i", scope: !1584, file: !3, line: 470, type: !17)
!1598 = !DILocation(line: 470, column: 6, scope: !1584)
!1599 = !DILocation(line: 471, column: 9, scope: !1600)
!1600 = distinct !DILexicalBlock(scope: !1584, file: !3, line: 471, column: 2)
!1601 = !DILocation(line: 471, column: 7, scope: !1600)
!1602 = !DILocation(line: 471, column: 14, scope: !1603)
!1603 = distinct !DILexicalBlock(scope: !1600, file: !3, line: 471, column: 2)
!1604 = !DILocation(line: 471, column: 18, scope: !1603)
!1605 = !DILocation(line: 471, column: 22, scope: !1603)
!1606 = !DILocation(line: 471, column: 30, scope: !1603)
!1607 = !DILocation(line: 471, column: 16, scope: !1603)
!1608 = !DILocation(line: 471, column: 2, scope: !1600)
!1609 = !DILocation(line: 472, column: 12, scope: !1603)
!1610 = !DILocation(line: 472, column: 16, scope: !1603)
!1611 = !DILocation(line: 472, column: 3, scope: !1603)
!1612 = !DILocation(line: 472, column: 7, scope: !1603)
!1613 = !DILocation(line: 472, column: 10, scope: !1603)
!1614 = !DILocation(line: 471, column: 42, scope: !1603)
!1615 = !DILocation(line: 471, column: 2, scope: !1603)
!1616 = distinct !{!1616, !1608, !1617}
!1617 = !DILocation(line: 472, column: 17, scope: !1600)
!1618 = !DILocation(line: 473, column: 1, scope: !1584)
!1619 = distinct !DISubprogram(name: "_vert_getCo", scope: !3, file: !3, line: 581, type: !1620, scopeLine: 582, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !30, retainedNodes: !151)
!1620 = !DISubroutineType(types: !1621)
!1621 = !{!15, !70, !17, !17}
!1622 = !DILocalVariable(name: "v", arg: 1, scope: !1619, file: !3, line: 581, type: !70)
!1623 = !DILocation(line: 581, column: 35, scope: !1619)
!1624 = !DILocalVariable(name: "lvl", arg: 2, scope: !1619, file: !3, line: 581, type: !17)
!1625 = !DILocation(line: 581, column: 42, scope: !1619)
!1626 = !DILocalVariable(name: "dataSize", arg: 3, scope: !1619, file: !3, line: 581, type: !17)
!1627 = !DILocation(line: 581, column: 51, scope: !1619)
!1628 = !DILocation(line: 583, column: 28, scope: !1619)
!1629 = !DILocation(line: 583, column: 10, scope: !1619)
!1630 = !DILocation(line: 583, column: 31, scope: !1619)
!1631 = !DILocation(line: 583, column: 37, scope: !1619)
!1632 = !DILocation(line: 583, column: 35, scope: !1619)
!1633 = !DILocation(line: 583, column: 2, scope: !1619)
!1634 = distinct !DISubprogram(name: "_ehash_insert", scope: !3, file: !3, line: 114, type: !1635, scopeLine: 115, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !30, retainedNodes: !151)
!1635 = !DISubroutineType(types: !1636)
!1636 = !{null, !124, !61}
!1637 = !DILocalVariable(name: "eh", arg: 1, scope: !1634, file: !3, line: 114, type: !124)
!1638 = !DILocation(line: 114, column: 34, scope: !1634)
!1639 = !DILocalVariable(name: "entry", arg: 2, scope: !1634, file: !3, line: 114, type: !61)
!1640 = !DILocation(line: 114, column: 47, scope: !1634)
!1641 = !DILocalVariable(name: "numBuckets", scope: !1634, file: !3, line: 116, type: !17)
!1642 = !DILocation(line: 116, column: 6, scope: !1634)
!1643 = !DILocation(line: 116, column: 19, scope: !1634)
!1644 = !DILocation(line: 116, column: 23, scope: !1634)
!1645 = !DILocalVariable(name: "hash", scope: !1634, file: !3, line: 117, type: !17)
!1646 = !DILocation(line: 117, column: 6, scope: !1634)
!1647 = !DILocation(line: 117, column: 13, scope: !1634)
!1648 = !DILocation(line: 118, column: 16, scope: !1634)
!1649 = !DILocation(line: 118, column: 20, scope: !1634)
!1650 = !DILocation(line: 118, column: 28, scope: !1634)
!1651 = !DILocation(line: 118, column: 2, scope: !1634)
!1652 = !DILocation(line: 118, column: 9, scope: !1634)
!1653 = !DILocation(line: 118, column: 14, scope: !1634)
!1654 = !DILocation(line: 119, column: 22, scope: !1634)
!1655 = !DILocation(line: 119, column: 2, scope: !1634)
!1656 = !DILocation(line: 119, column: 6, scope: !1634)
!1657 = !DILocation(line: 119, column: 14, scope: !1634)
!1658 = !DILocation(line: 119, column: 20, scope: !1634)
!1659 = !DILocation(line: 120, column: 2, scope: !1634)
!1660 = !DILocation(line: 120, column: 6, scope: !1634)
!1661 = !DILocation(line: 120, column: 16, scope: !1634)
!1662 = !DILocation(line: 122, column: 6, scope: !1663)
!1663 = distinct !DILexicalBlock(scope: !1634, file: !3, line: 122, column: 6)
!1664 = !DILocation(line: 122, column: 6, scope: !1634)
!1665 = !DILocalVariable(name: "oldBuckets", scope: !1666, file: !3, line: 123, type: !129)
!1666 = distinct !DILexicalBlock(scope: !1663, file: !3, line: 122, column: 51)
!1667 = !DILocation(line: 123, column: 13, scope: !1666)
!1668 = !DILocation(line: 123, column: 26, scope: !1666)
!1669 = !DILocation(line: 123, column: 30, scope: !1666)
!1670 = !DILocation(line: 124, column: 30, scope: !1666)
!1671 = !DILocation(line: 124, column: 34, scope: !1666)
!1672 = !DILocation(line: 124, column: 28, scope: !1666)
!1673 = !DILocation(line: 124, column: 17, scope: !1666)
!1674 = !DILocation(line: 124, column: 3, scope: !1666)
!1675 = !DILocation(line: 124, column: 7, scope: !1666)
!1676 = !DILocation(line: 124, column: 15, scope: !1666)
!1677 = !DILocation(line: 126, column: 17, scope: !1666)
!1678 = !DILocation(line: 126, column: 3, scope: !1666)
!1679 = !DILocation(line: 126, column: 7, scope: !1666)
!1680 = !DILocation(line: 126, column: 15, scope: !1666)
!1681 = !DILocation(line: 127, column: 10, scope: !1666)
!1682 = !DILocation(line: 127, column: 14, scope: !1666)
!1683 = !DILocation(line: 127, column: 3, scope: !1666)
!1684 = !DILocation(line: 127, column: 26, scope: !1666)
!1685 = !DILocation(line: 127, column: 30, scope: !1666)
!1686 = !DILocation(line: 127, column: 38, scope: !1666)
!1687 = !DILocation(line: 129, column: 3, scope: !1666)
!1688 = !DILocation(line: 129, column: 20, scope: !1666)
!1689 = !DILocation(line: 130, column: 17, scope: !1690)
!1690 = distinct !DILexicalBlock(scope: !1691, file: !3, line: 130, column: 4)
!1691 = distinct !DILexicalBlock(scope: !1666, file: !3, line: 129, column: 24)
!1692 = !DILocation(line: 130, column: 28, scope: !1690)
!1693 = !DILocation(line: 130, column: 15, scope: !1690)
!1694 = !DILocation(line: 130, column: 9, scope: !1690)
!1695 = !DILocation(line: 130, column: 41, scope: !1696)
!1696 = distinct !DILexicalBlock(scope: !1690, file: !3, line: 130, column: 4)
!1697 = !DILocation(line: 130, column: 4, scope: !1690)
!1698 = !DILocalVariable(name: "next", scope: !1699, file: !3, line: 131, type: !61)
!1699 = distinct !DILexicalBlock(scope: !1696, file: !3, line: 130, column: 50)
!1700 = !DILocation(line: 131, column: 14, scope: !1699)
!1701 = !DILocation(line: 131, column: 21, scope: !1699)
!1702 = !DILocation(line: 131, column: 28, scope: !1699)
!1703 = !DILocation(line: 133, column: 12, scope: !1699)
!1704 = !DILocation(line: 133, column: 10, scope: !1699)
!1705 = !DILocation(line: 134, column: 19, scope: !1699)
!1706 = !DILocation(line: 134, column: 23, scope: !1699)
!1707 = !DILocation(line: 134, column: 31, scope: !1699)
!1708 = !DILocation(line: 134, column: 5, scope: !1699)
!1709 = !DILocation(line: 134, column: 12, scope: !1699)
!1710 = !DILocation(line: 134, column: 17, scope: !1699)
!1711 = !DILocation(line: 135, column: 25, scope: !1699)
!1712 = !DILocation(line: 135, column: 5, scope: !1699)
!1713 = !DILocation(line: 135, column: 9, scope: !1699)
!1714 = !DILocation(line: 135, column: 17, scope: !1699)
!1715 = !DILocation(line: 135, column: 23, scope: !1699)
!1716 = !DILocation(line: 137, column: 13, scope: !1699)
!1717 = !DILocation(line: 137, column: 11, scope: !1699)
!1718 = !DILocation(line: 130, column: 4, scope: !1696)
!1719 = distinct !{!1719, !1697, !1720}
!1720 = !DILocation(line: 138, column: 4, scope: !1690)
!1721 = distinct !{!1721, !1687, !1722}
!1722 = !DILocation(line: 139, column: 3, scope: !1666)
!1723 = !DILocation(line: 141, column: 3, scope: !1666)
!1724 = !DILocation(line: 142, column: 2, scope: !1666)
!1725 = !DILocation(line: 143, column: 1, scope: !1634)
!1726 = distinct !DISubprogram(name: "VertDataEqual", scope: !3, file: !3, line: 453, type: !1727, scopeLine: 454, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !30, retainedNodes: !151)
!1727 = !DISubroutineType(types: !1728)
!1728 = !{!17, !1587, !1587, !1589}
!1729 = !DILocalVariable(name: "a", arg: 1, scope: !1726, file: !3, line: 453, type: !1587)
!1730 = !DILocation(line: 453, column: 38, scope: !1726)
!1731 = !DILocalVariable(name: "b", arg: 2, scope: !1726, file: !3, line: 453, type: !1587)
!1732 = !DILocation(line: 453, column: 55, scope: !1726)
!1733 = !DILocalVariable(name: "ss", arg: 3, scope: !1726, file: !3, line: 453, type: !1589)
!1734 = !DILocation(line: 453, column: 78, scope: !1726)
!1735 = !DILocalVariable(name: "i", scope: !1726, file: !3, line: 455, type: !17)
!1736 = !DILocation(line: 455, column: 6, scope: !1726)
!1737 = !DILocation(line: 456, column: 9, scope: !1738)
!1738 = distinct !DILexicalBlock(scope: !1726, file: !3, line: 456, column: 2)
!1739 = !DILocation(line: 456, column: 7, scope: !1738)
!1740 = !DILocation(line: 456, column: 14, scope: !1741)
!1741 = distinct !DILexicalBlock(scope: !1738, file: !3, line: 456, column: 2)
!1742 = !DILocation(line: 456, column: 18, scope: !1741)
!1743 = !DILocation(line: 456, column: 22, scope: !1741)
!1744 = !DILocation(line: 456, column: 30, scope: !1741)
!1745 = !DILocation(line: 456, column: 16, scope: !1741)
!1746 = !DILocation(line: 456, column: 2, scope: !1738)
!1747 = !DILocation(line: 457, column: 7, scope: !1748)
!1748 = distinct !DILexicalBlock(scope: !1749, file: !3, line: 457, column: 7)
!1749 = distinct !DILexicalBlock(scope: !1741, file: !3, line: 456, column: 46)
!1750 = !DILocation(line: 457, column: 9, scope: !1748)
!1751 = !DILocation(line: 457, column: 15, scope: !1748)
!1752 = !DILocation(line: 457, column: 17, scope: !1748)
!1753 = !DILocation(line: 457, column: 12, scope: !1748)
!1754 = !DILocation(line: 457, column: 7, scope: !1749)
!1755 = !DILocation(line: 458, column: 4, scope: !1748)
!1756 = !DILocation(line: 459, column: 2, scope: !1749)
!1757 = !DILocation(line: 456, column: 42, scope: !1741)
!1758 = !DILocation(line: 456, column: 2, scope: !1741)
!1759 = distinct !{!1759, !1746, !1760}
!1760 = !DILocation(line: 459, column: 2, scope: !1738)
!1761 = !DILocation(line: 460, column: 2, scope: !1726)
!1762 = !DILocation(line: 461, column: 1, scope: !1726)
!1763 = distinct !DISubprogram(name: "FACE_getVerts", scope: !3, file: !3, line: 382, type: !1764, scopeLine: 383, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !30, retainedNodes: !151)
!1764 = !DISubroutineType(types: !1765)
!1765 = !{!141, !97}
!1766 = !DILocalVariable(name: "f", arg: 1, scope: !1763, file: !3, line: 382, type: !97)
!1767 = !DILocation(line: 382, column: 45, scope: !1763)
!1768 = !DILocation(line: 384, column: 23, scope: !1763)
!1769 = !DILocation(line: 384, column: 9, scope: !1763)
!1770 = !DILocation(line: 384, column: 2, scope: !1763)
!1771 = distinct !DISubprogram(name: "ccgSubSurf_syncEdge", scope: !3, file: !3, line: 1212, type: !1772, scopeLine: 1213, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, retainedNodes: !151)
!1772 = !DISubroutineType(types: !1773)
!1773 = !{!568, !187, !67, !76, !76, !69, !83}
!1774 = !DILocalVariable(name: "ss", arg: 1, scope: !1771, file: !3, line: 1212, type: !187)
!1775 = !DILocation(line: 1212, column: 42, scope: !1771)
!1776 = !DILocalVariable(name: "eHDL", arg: 2, scope: !1771, file: !3, line: 1212, type: !67)
!1777 = !DILocation(line: 1212, column: 57, scope: !1771)
!1778 = !DILocalVariable(name: "e_vHDL0", arg: 3, scope: !1771, file: !3, line: 1212, type: !76)
!1779 = !DILocation(line: 1212, column: 74, scope: !1771)
!1780 = !DILocalVariable(name: "e_vHDL1", arg: 4, scope: !1771, file: !3, line: 1212, type: !76)
!1781 = !DILocation(line: 1212, column: 94, scope: !1771)
!1782 = !DILocalVariable(name: "crease", arg: 5, scope: !1771, file: !3, line: 1212, type: !69)
!1783 = !DILocation(line: 1212, column: 109, scope: !1771)
!1784 = !DILocalVariable(name: "e_r", arg: 6, scope: !1771, file: !3, line: 1212, type: !83)
!1785 = !DILocation(line: 1212, column: 127, scope: !1771)
!1786 = !DILocalVariable(name: "prevp", scope: !1771, file: !3, line: 1214, type: !140)
!1787 = !DILocation(line: 1214, column: 9, scope: !1771)
!1788 = !DILocalVariable(name: "e", scope: !1771, file: !3, line: 1215, type: !84)
!1789 = !DILocation(line: 1215, column: 11, scope: !1771)
!1790 = !DILocalVariable(name: "eNew", scope: !1771, file: !3, line: 1215, type: !84)
!1791 = !DILocation(line: 1215, column: 22, scope: !1771)
!1792 = !DILocation(line: 1217, column: 6, scope: !1793)
!1793 = distinct !DILexicalBlock(scope: !1771, file: !3, line: 1217, column: 6)
!1794 = !DILocation(line: 1217, column: 10, scope: !1793)
!1795 = !DILocation(line: 1217, column: 20, scope: !1793)
!1796 = !DILocation(line: 1217, column: 6, scope: !1771)
!1797 = !DILocation(line: 1218, column: 29, scope: !1798)
!1798 = distinct !DILexicalBlock(scope: !1793, file: !3, line: 1217, column: 43)
!1799 = !DILocation(line: 1218, column: 33, scope: !1798)
!1800 = !DILocation(line: 1218, column: 39, scope: !1798)
!1801 = !DILocation(line: 1218, column: 7, scope: !1798)
!1802 = !DILocation(line: 1218, column: 5, scope: !1798)
!1803 = !DILocation(line: 1219, column: 8, scope: !1804)
!1804 = distinct !DILexicalBlock(scope: !1798, file: !3, line: 1219, column: 7)
!1805 = !DILocation(line: 1219, column: 10, scope: !1804)
!1806 = !DILocation(line: 1219, column: 13, scope: !1804)
!1807 = !DILocation(line: 1219, column: 16, scope: !1804)
!1808 = !DILocation(line: 1219, column: 20, scope: !1804)
!1809 = !DILocation(line: 1219, column: 28, scope: !1804)
!1810 = !DILocation(line: 1219, column: 25, scope: !1804)
!1811 = !DILocation(line: 1219, column: 36, scope: !1804)
!1812 = !DILocation(line: 1219, column: 39, scope: !1804)
!1813 = !DILocation(line: 1219, column: 42, scope: !1804)
!1814 = !DILocation(line: 1219, column: 46, scope: !1804)
!1815 = !DILocation(line: 1219, column: 54, scope: !1804)
!1816 = !DILocation(line: 1219, column: 51, scope: !1804)
!1817 = !DILocation(line: 1219, column: 62, scope: !1804)
!1818 = !DILocation(line: 1219, column: 65, scope: !1804)
!1819 = !DILocation(line: 1219, column: 75, scope: !1804)
!1820 = !DILocation(line: 1219, column: 78, scope: !1804)
!1821 = !DILocation(line: 1219, column: 72, scope: !1804)
!1822 = !DILocation(line: 1219, column: 7, scope: !1798)
!1823 = !DILocalVariable(name: "v0", scope: !1824, file: !3, line: 1220, type: !70)
!1824 = distinct !DILexicalBlock(scope: !1804, file: !3, line: 1219, column: 86)
!1825 = !DILocation(line: 1220, column: 13, scope: !1824)
!1826 = !DILocation(line: 1220, column: 32, scope: !1824)
!1827 = !DILocation(line: 1220, column: 36, scope: !1824)
!1828 = !DILocation(line: 1220, column: 42, scope: !1824)
!1829 = !DILocation(line: 1220, column: 18, scope: !1824)
!1830 = !DILocalVariable(name: "v1", scope: !1824, file: !3, line: 1221, type: !70)
!1831 = !DILocation(line: 1221, column: 13, scope: !1824)
!1832 = !DILocation(line: 1221, column: 32, scope: !1824)
!1833 = !DILocation(line: 1221, column: 36, scope: !1824)
!1834 = !DILocation(line: 1221, column: 42, scope: !1824)
!1835 = !DILocation(line: 1221, column: 18, scope: !1824)
!1836 = !DILocation(line: 1223, column: 21, scope: !1824)
!1837 = !DILocation(line: 1223, column: 27, scope: !1824)
!1838 = !DILocation(line: 1223, column: 31, scope: !1824)
!1839 = !DILocation(line: 1223, column: 35, scope: !1824)
!1840 = !DILocation(line: 1223, column: 43, scope: !1824)
!1841 = !DILocation(line: 1223, column: 11, scope: !1824)
!1842 = !DILocation(line: 1223, column: 9, scope: !1824)
!1843 = !DILocation(line: 1225, column: 8, scope: !1844)
!1844 = distinct !DILexicalBlock(scope: !1824, file: !3, line: 1225, column: 8)
!1845 = !DILocation(line: 1225, column: 8, scope: !1824)
!1846 = !DILocation(line: 1226, column: 14, scope: !1847)
!1847 = distinct !DILexicalBlock(scope: !1844, file: !3, line: 1225, column: 11)
!1848 = !DILocation(line: 1226, column: 6, scope: !1847)
!1849 = !DILocation(line: 1226, column: 12, scope: !1847)
!1850 = !DILocation(line: 1227, column: 18, scope: !1847)
!1851 = !DILocation(line: 1227, column: 21, scope: !1847)
!1852 = !DILocation(line: 1227, column: 5, scope: !1847)
!1853 = !DILocation(line: 1227, column: 11, scope: !1847)
!1854 = !DILocation(line: 1227, column: 16, scope: !1847)
!1855 = !DILocation(line: 1229, column: 29, scope: !1847)
!1856 = !DILocation(line: 1229, column: 32, scope: !1847)
!1857 = !DILocation(line: 1229, column: 5, scope: !1847)
!1858 = !DILocation(line: 1230, column: 4, scope: !1847)
!1859 = !DILocation(line: 1232, column: 19, scope: !1860)
!1860 = distinct !DILexicalBlock(scope: !1844, file: !3, line: 1231, column: 9)
!1861 = !DILocation(line: 1232, column: 23, scope: !1860)
!1862 = !DILocation(line: 1232, column: 41, scope: !1860)
!1863 = !DILocation(line: 1232, column: 29, scope: !1860)
!1864 = !DILocation(line: 1232, column: 5, scope: !1860)
!1865 = !DILocation(line: 1235, column: 4, scope: !1824)
!1866 = !DILocation(line: 1235, column: 10, scope: !1824)
!1867 = !DILocation(line: 1235, column: 14, scope: !1824)
!1868 = !DILocation(line: 1235, column: 20, scope: !1824)
!1869 = !DILocation(line: 1236, column: 4, scope: !1824)
!1870 = !DILocation(line: 1236, column: 10, scope: !1824)
!1871 = !DILocation(line: 1236, column: 14, scope: !1824)
!1872 = !DILocation(line: 1236, column: 20, scope: !1824)
!1873 = !DILocation(line: 1237, column: 3, scope: !1824)
!1874 = !DILocation(line: 1238, column: 2, scope: !1798)
!1875 = !DILocation(line: 1240, column: 7, scope: !1876)
!1876 = distinct !DILexicalBlock(scope: !1877, file: !3, line: 1240, column: 7)
!1877 = distinct !DILexicalBlock(scope: !1793, file: !3, line: 1239, column: 7)
!1878 = !DILocation(line: 1240, column: 11, scope: !1876)
!1879 = !DILocation(line: 1240, column: 21, scope: !1876)
!1880 = !DILocation(line: 1240, column: 7, scope: !1877)
!1881 = !DILocation(line: 1241, column: 4, scope: !1882)
!1882 = distinct !DILexicalBlock(scope: !1876, file: !3, line: 1240, column: 41)
!1883 = !DILocation(line: 1241, column: 8, scope: !1882)
!1884 = !DILocation(line: 1241, column: 18, scope: !1882)
!1885 = !DILocation(line: 1242, column: 3, scope: !1882)
!1886 = !DILocation(line: 1243, column: 12, scope: !1887)
!1887 = distinct !DILexicalBlock(scope: !1876, file: !3, line: 1243, column: 12)
!1888 = !DILocation(line: 1243, column: 16, scope: !1887)
!1889 = !DILocation(line: 1243, column: 26, scope: !1887)
!1890 = !DILocation(line: 1243, column: 12, scope: !1876)
!1891 = !DILocation(line: 1244, column: 4, scope: !1892)
!1892 = distinct !DILexicalBlock(scope: !1887, file: !3, line: 1243, column: 46)
!1893 = !DILocation(line: 1247, column: 29, scope: !1877)
!1894 = !DILocation(line: 1247, column: 33, scope: !1877)
!1895 = !DILocation(line: 1247, column: 42, scope: !1877)
!1896 = !DILocation(line: 1247, column: 7, scope: !1877)
!1897 = !DILocation(line: 1247, column: 5, scope: !1877)
!1898 = !DILocation(line: 1248, column: 8, scope: !1899)
!1899 = distinct !DILexicalBlock(scope: !1877, file: !3, line: 1248, column: 7)
!1900 = !DILocation(line: 1248, column: 10, scope: !1899)
!1901 = !DILocation(line: 1248, column: 13, scope: !1899)
!1902 = !DILocation(line: 1248, column: 16, scope: !1899)
!1903 = !DILocation(line: 1248, column: 20, scope: !1899)
!1904 = !DILocation(line: 1248, column: 28, scope: !1899)
!1905 = !DILocation(line: 1248, column: 25, scope: !1899)
!1906 = !DILocation(line: 1248, column: 36, scope: !1899)
!1907 = !DILocation(line: 1248, column: 39, scope: !1899)
!1908 = !DILocation(line: 1248, column: 42, scope: !1899)
!1909 = !DILocation(line: 1248, column: 46, scope: !1899)
!1910 = !DILocation(line: 1248, column: 54, scope: !1899)
!1911 = !DILocation(line: 1248, column: 51, scope: !1899)
!1912 = !DILocation(line: 1248, column: 62, scope: !1899)
!1913 = !DILocation(line: 1248, column: 65, scope: !1899)
!1914 = !DILocation(line: 1248, column: 68, scope: !1899)
!1915 = !DILocation(line: 1248, column: 78, scope: !1899)
!1916 = !DILocation(line: 1248, column: 75, scope: !1899)
!1917 = !DILocation(line: 1248, column: 7, scope: !1877)
!1918 = !DILocalVariable(name: "v0", scope: !1919, file: !3, line: 1249, type: !70)
!1919 = distinct !DILexicalBlock(scope: !1899, file: !3, line: 1248, column: 86)
!1920 = !DILocation(line: 1249, column: 13, scope: !1919)
!1921 = !DILocation(line: 1249, column: 32, scope: !1919)
!1922 = !DILocation(line: 1249, column: 36, scope: !1919)
!1923 = !DILocation(line: 1249, column: 42, scope: !1919)
!1924 = !DILocation(line: 1249, column: 18, scope: !1919)
!1925 = !DILocalVariable(name: "v1", scope: !1919, file: !3, line: 1250, type: !70)
!1926 = !DILocation(line: 1250, column: 13, scope: !1919)
!1927 = !DILocation(line: 1250, column: 32, scope: !1919)
!1928 = !DILocation(line: 1250, column: 36, scope: !1919)
!1929 = !DILocation(line: 1250, column: 42, scope: !1919)
!1930 = !DILocation(line: 1250, column: 18, scope: !1919)
!1931 = !DILocation(line: 1251, column: 18, scope: !1919)
!1932 = !DILocation(line: 1251, column: 24, scope: !1919)
!1933 = !DILocation(line: 1251, column: 28, scope: !1919)
!1934 = !DILocation(line: 1251, column: 32, scope: !1919)
!1935 = !DILocation(line: 1251, column: 40, scope: !1919)
!1936 = !DILocation(line: 1251, column: 8, scope: !1919)
!1937 = !DILocation(line: 1251, column: 6, scope: !1919)
!1938 = !DILocation(line: 1252, column: 18, scope: !1919)
!1939 = !DILocation(line: 1252, column: 22, scope: !1919)
!1940 = !DILocation(line: 1252, column: 40, scope: !1919)
!1941 = !DILocation(line: 1252, column: 28, scope: !1919)
!1942 = !DILocation(line: 1252, column: 4, scope: !1919)
!1943 = !DILocation(line: 1253, column: 4, scope: !1919)
!1944 = !DILocation(line: 1253, column: 7, scope: !1919)
!1945 = !DILocation(line: 1253, column: 11, scope: !1919)
!1946 = !DILocation(line: 1253, column: 17, scope: !1919)
!1947 = !DILocation(line: 1254, column: 4, scope: !1919)
!1948 = !DILocation(line: 1254, column: 7, scope: !1919)
!1949 = !DILocation(line: 1254, column: 11, scope: !1919)
!1950 = !DILocation(line: 1254, column: 17, scope: !1919)
!1951 = !DILocation(line: 1255, column: 3, scope: !1919)
!1952 = !DILocation(line: 1257, column: 13, scope: !1953)
!1953 = distinct !DILexicalBlock(scope: !1899, file: !3, line: 1256, column: 8)
!1954 = !DILocation(line: 1257, column: 16, scope: !1953)
!1955 = !DILocation(line: 1257, column: 5, scope: !1953)
!1956 = !DILocation(line: 1257, column: 11, scope: !1953)
!1957 = !DILocation(line: 1258, column: 18, scope: !1953)
!1958 = !DILocation(line: 1258, column: 22, scope: !1953)
!1959 = !DILocation(line: 1258, column: 40, scope: !1953)
!1960 = !DILocation(line: 1258, column: 28, scope: !1953)
!1961 = !DILocation(line: 1258, column: 4, scope: !1953)
!1962 = !DILocation(line: 1259, column: 4, scope: !1953)
!1963 = !DILocation(line: 1259, column: 7, scope: !1953)
!1964 = !DILocation(line: 1259, column: 13, scope: !1953)
!1965 = !DILocation(line: 1260, column: 9, scope: !1966)
!1966 = distinct !DILexicalBlock(scope: !1953, file: !3, line: 1260, column: 8)
!1967 = !DILocation(line: 1260, column: 12, scope: !1966)
!1968 = !DILocation(line: 1260, column: 16, scope: !1966)
!1969 = !DILocation(line: 1260, column: 24, scope: !1966)
!1970 = !DILocation(line: 1260, column: 27, scope: !1966)
!1971 = !DILocation(line: 1260, column: 31, scope: !1966)
!1972 = !DILocation(line: 1260, column: 22, scope: !1966)
!1973 = !DILocation(line: 1260, column: 38, scope: !1966)
!1974 = !DILocation(line: 1260, column: 8, scope: !1953)
!1975 = !DILocation(line: 1261, column: 5, scope: !1976)
!1976 = distinct !DILexicalBlock(scope: !1966, file: !3, line: 1260, column: 55)
!1977 = !DILocation(line: 1261, column: 8, scope: !1976)
!1978 = !DILocation(line: 1261, column: 12, scope: !1976)
!1979 = !DILocation(line: 1261, column: 18, scope: !1976)
!1980 = !DILocation(line: 1262, column: 5, scope: !1976)
!1981 = !DILocation(line: 1262, column: 8, scope: !1976)
!1982 = !DILocation(line: 1262, column: 12, scope: !1976)
!1983 = !DILocation(line: 1262, column: 18, scope: !1976)
!1984 = !DILocation(line: 1263, column: 4, scope: !1976)
!1985 = !DILocation(line: 1267, column: 6, scope: !1986)
!1986 = distinct !DILexicalBlock(scope: !1771, file: !3, line: 1267, column: 6)
!1987 = !DILocation(line: 1267, column: 6, scope: !1771)
!1988 = !DILocation(line: 1267, column: 18, scope: !1986)
!1989 = !DILocation(line: 1267, column: 12, scope: !1986)
!1990 = !DILocation(line: 1267, column: 16, scope: !1986)
!1991 = !DILocation(line: 1267, column: 11, scope: !1986)
!1992 = !DILocation(line: 1268, column: 2, scope: !1771)
!1993 = !DILocation(line: 1269, column: 1, scope: !1771)
!1994 = distinct !DISubprogram(name: "_ehash_lookup", scope: !3, file: !3, line: 161, type: !1995, scopeLine: 162, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !30, retainedNodes: !151)
!1995 = !DISubroutineType(types: !1996)
!1996 = !{!15, !124, !15}
!1997 = !DILocalVariable(name: "eh", arg: 1, scope: !1994, file: !3, line: 161, type: !124)
!1998 = !DILocation(line: 161, column: 35, scope: !1994)
!1999 = !DILocalVariable(name: "key", arg: 2, scope: !1994, file: !3, line: 161, type: !15)
!2000 = !DILocation(line: 161, column: 45, scope: !1994)
!2001 = !DILocalVariable(name: "hash", scope: !1994, file: !3, line: 163, type: !17)
!2002 = !DILocation(line: 163, column: 6, scope: !1994)
!2003 = !DILocation(line: 163, column: 13, scope: !1994)
!2004 = !DILocalVariable(name: "entry", scope: !1994, file: !3, line: 164, type: !61)
!2005 = !DILocation(line: 164, column: 11, scope: !1994)
!2006 = !DILocation(line: 166, column: 15, scope: !2007)
!2007 = distinct !DILexicalBlock(scope: !1994, file: !3, line: 166, column: 2)
!2008 = !DILocation(line: 166, column: 19, scope: !2007)
!2009 = !DILocation(line: 166, column: 27, scope: !2007)
!2010 = !DILocation(line: 166, column: 13, scope: !2007)
!2011 = !DILocation(line: 166, column: 7, scope: !2007)
!2012 = !DILocation(line: 166, column: 34, scope: !2013)
!2013 = distinct !DILexicalBlock(scope: !2007, file: !3, line: 166, column: 2)
!2014 = !DILocation(line: 166, column: 2, scope: !2007)
!2015 = !DILocation(line: 167, column: 7, scope: !2016)
!2016 = distinct !DILexicalBlock(scope: !2013, file: !3, line: 167, column: 7)
!2017 = !DILocation(line: 167, column: 14, scope: !2016)
!2018 = !DILocation(line: 167, column: 21, scope: !2016)
!2019 = !DILocation(line: 167, column: 18, scope: !2016)
!2020 = !DILocation(line: 167, column: 7, scope: !2013)
!2021 = !DILocation(line: 168, column: 4, scope: !2016)
!2022 = !DILocation(line: 166, column: 49, scope: !2013)
!2023 = !DILocation(line: 166, column: 56, scope: !2013)
!2024 = !DILocation(line: 166, column: 47, scope: !2013)
!2025 = !DILocation(line: 166, column: 2, scope: !2013)
!2026 = distinct !{!2026, !2014, !2027}
!2027 = !DILocation(line: 168, column: 4, scope: !2007)
!2028 = !DILocation(line: 170, column: 9, scope: !1994)
!2029 = !DILocation(line: 170, column: 2, scope: !1994)
!2030 = distinct !DISubprogram(name: "_edge_new", scope: !3, file: !3, line: 604, type: !2031, scopeLine: 605, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !30, retainedNodes: !151)
!2031 = !DISubroutineType(types: !2032)
!2032 = !{!84, !67, !70, !70, !69, !187}
!2033 = !DILocalVariable(name: "eHDL", arg: 1, scope: !2030, file: !3, line: 604, type: !67)
!2034 = !DILocation(line: 604, column: 38, scope: !2030)
!2035 = !DILocalVariable(name: "v0", arg: 2, scope: !2030, file: !3, line: 604, type: !70)
!2036 = !DILocation(line: 604, column: 53, scope: !2030)
!2037 = !DILocalVariable(name: "v1", arg: 3, scope: !2030, file: !3, line: 604, type: !70)
!2038 = !DILocation(line: 604, column: 66, scope: !2030)
!2039 = !DILocalVariable(name: "crease", arg: 4, scope: !2030, file: !3, line: 604, type: !69)
!2040 = !DILocation(line: 604, column: 76, scope: !2030)
!2041 = !DILocalVariable(name: "ss", arg: 5, scope: !2030, file: !3, line: 604, type: !187)
!2042 = !DILocation(line: 604, column: 96, scope: !2030)
!2043 = !DILocalVariable(name: "num_edge_data", scope: !2030, file: !3, line: 606, type: !17)
!2044 = !DILocation(line: 606, column: 6, scope: !2030)
!2045 = !DILocation(line: 606, column: 35, scope: !2030)
!2046 = !DILocation(line: 606, column: 39, scope: !2030)
!2047 = !DILocation(line: 606, column: 52, scope: !2030)
!2048 = !DILocation(line: 606, column: 22, scope: !2030)
!2049 = !DILocalVariable(name: "e", scope: !2030, file: !3, line: 607, type: !84)
!2050 = !DILocation(line: 607, column: 11, scope: !2030)
!2051 = !DILocation(line: 607, column: 15, scope: !2030)
!2052 = !DILocalVariable(name: "userData", scope: !2030, file: !3, line: 611, type: !142)
!2053 = !DILocation(line: 611, column: 8, scope: !2030)
!2054 = !DILocation(line: 613, column: 12, scope: !2030)
!2055 = !DILocation(line: 613, column: 2, scope: !2030)
!2056 = !DILocation(line: 613, column: 5, scope: !2030)
!2057 = !DILocation(line: 613, column: 10, scope: !2030)
!2058 = !DILocation(line: 614, column: 10, scope: !2030)
!2059 = !DILocation(line: 614, column: 2, scope: !2030)
!2060 = !DILocation(line: 614, column: 5, scope: !2030)
!2061 = !DILocation(line: 614, column: 8, scope: !2030)
!2062 = !DILocation(line: 615, column: 10, scope: !2030)
!2063 = !DILocation(line: 615, column: 2, scope: !2030)
!2064 = !DILocation(line: 615, column: 5, scope: !2030)
!2065 = !DILocation(line: 615, column: 8, scope: !2030)
!2066 = !DILocation(line: 616, column: 14, scope: !2030)
!2067 = !DILocation(line: 616, column: 2, scope: !2030)
!2068 = !DILocation(line: 616, column: 5, scope: !2030)
!2069 = !DILocation(line: 616, column: 12, scope: !2030)
!2070 = !DILocation(line: 617, column: 2, scope: !2030)
!2071 = !DILocation(line: 617, column: 5, scope: !2030)
!2072 = !DILocation(line: 617, column: 11, scope: !2030)
!2073 = !DILocation(line: 618, column: 2, scope: !2030)
!2074 = !DILocation(line: 618, column: 5, scope: !2030)
!2075 = !DILocation(line: 618, column: 14, scope: !2030)
!2076 = !DILocation(line: 619, column: 2, scope: !2030)
!2077 = !DILocation(line: 619, column: 5, scope: !2030)
!2078 = !DILocation(line: 619, column: 11, scope: !2030)
!2079 = !DILocation(line: 620, column: 16, scope: !2030)
!2080 = !DILocation(line: 620, column: 20, scope: !2030)
!2081 = !DILocation(line: 620, column: 23, scope: !2030)
!2082 = !DILocation(line: 620, column: 2, scope: !2030)
!2083 = !DILocation(line: 621, column: 16, scope: !2030)
!2084 = !DILocation(line: 621, column: 20, scope: !2030)
!2085 = !DILocation(line: 621, column: 23, scope: !2030)
!2086 = !DILocation(line: 621, column: 2, scope: !2030)
!2087 = !DILocation(line: 623, column: 40, scope: !2030)
!2088 = !DILocation(line: 623, column: 44, scope: !2030)
!2089 = !DILocation(line: 623, column: 13, scope: !2030)
!2090 = !DILocation(line: 623, column: 11, scope: !2030)
!2091 = !DILocation(line: 624, column: 9, scope: !2030)
!2092 = !DILocation(line: 624, column: 22, scope: !2030)
!2093 = !DILocation(line: 624, column: 26, scope: !2030)
!2094 = !DILocation(line: 624, column: 34, scope: !2030)
!2095 = !DILocation(line: 624, column: 2, scope: !2030)
!2096 = !DILocation(line: 625, column: 6, scope: !2097)
!2097 = distinct !DILexicalBlock(scope: !2030, file: !3, line: 625, column: 6)
!2098 = !DILocation(line: 625, column: 10, scope: !2097)
!2099 = !DILocation(line: 625, column: 6, scope: !2030)
!2100 = !DILocation(line: 625, column: 70, scope: !2097)
!2101 = !DILocation(line: 625, column: 74, scope: !2097)
!2102 = !DILocation(line: 625, column: 35, scope: !2097)
!2103 = !DILocation(line: 625, column: 44, scope: !2097)
!2104 = !DILocation(line: 625, column: 48, scope: !2097)
!2105 = !DILocation(line: 625, column: 24, scope: !2097)
!2106 = !DILocation(line: 625, column: 68, scope: !2097)
!2107 = !DILocation(line: 627, column: 9, scope: !2030)
!2108 = !DILocation(line: 627, column: 2, scope: !2030)
!2109 = distinct !DISubprogram(name: "ccgSubSurf_syncFace", scope: !3, file: !3, line: 1271, type: !2110, scopeLine: 1272, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, retainedNodes: !151)
!2110 = !DISubroutineType(types: !2111)
!2111 = !{!568, !187, !103, !17, !2112, !96}
!2112 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !76, size: 64)
!2113 = !DILocalVariable(name: "ss", arg: 1, scope: !2109, file: !3, line: 1271, type: !187)
!2114 = !DILocation(line: 1271, column: 42, scope: !2109)
!2115 = !DILocalVariable(name: "fHDL", arg: 2, scope: !2109, file: !3, line: 1271, type: !103)
!2116 = !DILocation(line: 1271, column: 57, scope: !2109)
!2117 = !DILocalVariable(name: "numVerts", arg: 3, scope: !2109, file: !3, line: 1271, type: !17)
!2118 = !DILocation(line: 1271, column: 67, scope: !2109)
!2119 = !DILocalVariable(name: "vHDLs", arg: 4, scope: !2109, file: !3, line: 1271, type: !2112)
!2120 = !DILocation(line: 1271, column: 89, scope: !2109)
!2121 = !DILocalVariable(name: "f_r", arg: 5, scope: !2109, file: !3, line: 1271, type: !96)
!2122 = !DILocation(line: 1271, column: 106, scope: !2109)
!2123 = !DILocalVariable(name: "prevp", scope: !2109, file: !3, line: 1273, type: !140)
!2124 = !DILocation(line: 1273, column: 9, scope: !2109)
!2125 = !DILocalVariable(name: "f", scope: !2109, file: !3, line: 1274, type: !97)
!2126 = !DILocation(line: 1274, column: 11, scope: !2109)
!2127 = !DILocalVariable(name: "fNew", scope: !2109, file: !3, line: 1274, type: !97)
!2128 = !DILocation(line: 1274, column: 22, scope: !2109)
!2129 = !DILocalVariable(name: "j", scope: !2109, file: !3, line: 1275, type: !17)
!2130 = !DILocation(line: 1275, column: 6, scope: !2109)
!2131 = !DILocalVariable(name: "k", scope: !2109, file: !3, line: 1275, type: !17)
!2132 = !DILocation(line: 1275, column: 9, scope: !2109)
!2133 = !DILocalVariable(name: "topologyChanged", scope: !2109, file: !3, line: 1275, type: !17)
!2134 = !DILocation(line: 1275, column: 12, scope: !2109)
!2135 = !DILocation(line: 1277, column: 6, scope: !2136)
!2136 = distinct !DILexicalBlock(scope: !2109, file: !3, line: 1277, column: 6)
!2137 = !DILocation(line: 1277, column: 6, scope: !2109)
!2138 = !DILocation(line: 1278, column: 24, scope: !2139)
!2139 = distinct !DILexicalBlock(scope: !2136, file: !3, line: 1277, column: 46)
!2140 = !DILocation(line: 1278, column: 35, scope: !2139)
!2141 = !DILocation(line: 1278, column: 39, scope: !2139)
!2142 = !DILocation(line: 1278, column: 53, scope: !2139)
!2143 = !DILocation(line: 1278, column: 33, scope: !2139)
!2144 = !DILocation(line: 1278, column: 23, scope: !2139)
!2145 = !DILocation(line: 1278, column: 60, scope: !2139)
!2146 = !DILocation(line: 1278, column: 64, scope: !2139)
!2147 = !DILocation(line: 1278, column: 78, scope: !2139)
!2148 = !DILocation(line: 1278, column: 84, scope: !2139)
!2149 = !DILocation(line: 1278, column: 3, scope: !2139)
!2150 = !DILocation(line: 1278, column: 7, scope: !2139)
!2151 = !DILocation(line: 1278, column: 21, scope: !2139)
!2152 = !DILocation(line: 1279, column: 19, scope: !2139)
!2153 = !DILocation(line: 1279, column: 3, scope: !2139)
!2154 = !DILocation(line: 1279, column: 7, scope: !2139)
!2155 = !DILocation(line: 1279, column: 17, scope: !2139)
!2156 = !DILocation(line: 1280, column: 19, scope: !2139)
!2157 = !DILocation(line: 1280, column: 3, scope: !2139)
!2158 = !DILocation(line: 1280, column: 7, scope: !2139)
!2159 = !DILocation(line: 1280, column: 17, scope: !2139)
!2160 = !DILocation(line: 1281, column: 2, scope: !2139)
!2161 = !DILocation(line: 1283, column: 6, scope: !2162)
!2162 = distinct !DILexicalBlock(scope: !2109, file: !3, line: 1283, column: 6)
!2163 = !DILocation(line: 1283, column: 10, scope: !2162)
!2164 = !DILocation(line: 1283, column: 20, scope: !2162)
!2165 = !DILocation(line: 1283, column: 6, scope: !2109)
!2166 = !DILocation(line: 1284, column: 29, scope: !2167)
!2167 = distinct !DILexicalBlock(scope: !2162, file: !3, line: 1283, column: 43)
!2168 = !DILocation(line: 1284, column: 33, scope: !2167)
!2169 = !DILocation(line: 1284, column: 39, scope: !2167)
!2170 = !DILocation(line: 1284, column: 7, scope: !2167)
!2171 = !DILocation(line: 1284, column: 5, scope: !2167)
!2172 = !DILocation(line: 1286, column: 10, scope: !2173)
!2173 = distinct !DILexicalBlock(scope: !2167, file: !3, line: 1286, column: 3)
!2174 = !DILocation(line: 1286, column: 8, scope: !2173)
!2175 = !DILocation(line: 1286, column: 15, scope: !2176)
!2176 = distinct !DILexicalBlock(scope: !2173, file: !3, line: 1286, column: 3)
!2177 = !DILocation(line: 1286, column: 19, scope: !2176)
!2178 = !DILocation(line: 1286, column: 17, scope: !2176)
!2179 = !DILocation(line: 1286, column: 3, scope: !2173)
!2180 = !DILocation(line: 1287, column: 37, scope: !2181)
!2181 = distinct !DILexicalBlock(scope: !2176, file: !3, line: 1286, column: 34)
!2182 = !DILocation(line: 1287, column: 41, scope: !2181)
!2183 = !DILocation(line: 1287, column: 47, scope: !2181)
!2184 = !DILocation(line: 1287, column: 53, scope: !2181)
!2185 = !DILocation(line: 1287, column: 23, scope: !2181)
!2186 = !DILocation(line: 1287, column: 4, scope: !2181)
!2187 = !DILocation(line: 1287, column: 8, scope: !2181)
!2188 = !DILocation(line: 1287, column: 18, scope: !2181)
!2189 = !DILocation(line: 1287, column: 21, scope: !2181)
!2190 = !DILocation(line: 1288, column: 3, scope: !2181)
!2191 = !DILocation(line: 1286, column: 30, scope: !2176)
!2192 = !DILocation(line: 1286, column: 3, scope: !2176)
!2193 = distinct !{!2193, !2179, !2194}
!2194 = !DILocation(line: 1288, column: 3, scope: !2173)
!2195 = !DILocation(line: 1289, column: 10, scope: !2196)
!2196 = distinct !DILexicalBlock(scope: !2167, file: !3, line: 1289, column: 3)
!2197 = !DILocation(line: 1289, column: 8, scope: !2196)
!2198 = !DILocation(line: 1289, column: 15, scope: !2199)
!2199 = distinct !DILexicalBlock(scope: !2196, file: !3, line: 1289, column: 3)
!2200 = !DILocation(line: 1289, column: 19, scope: !2199)
!2201 = !DILocation(line: 1289, column: 17, scope: !2199)
!2202 = !DILocation(line: 1289, column: 3, scope: !2196)
!2203 = !DILocation(line: 1290, column: 40, scope: !2204)
!2204 = distinct !DILexicalBlock(scope: !2199, file: !3, line: 1289, column: 34)
!2205 = !DILocation(line: 1290, column: 44, scope: !2204)
!2206 = !DILocation(line: 1290, column: 54, scope: !2204)
!2207 = !DILocation(line: 1290, column: 58, scope: !2204)
!2208 = !DILocation(line: 1290, column: 62, scope: !2204)
!2209 = !DILocation(line: 1290, column: 73, scope: !2204)
!2210 = !DILocation(line: 1290, column: 75, scope: !2204)
!2211 = !DILocation(line: 1290, column: 82, scope: !2204)
!2212 = !DILocation(line: 1290, column: 80, scope: !2204)
!2213 = !DILocation(line: 1290, column: 23, scope: !2204)
!2214 = !DILocation(line: 1290, column: 4, scope: !2204)
!2215 = !DILocation(line: 1290, column: 8, scope: !2204)
!2216 = !DILocation(line: 1290, column: 18, scope: !2204)
!2217 = !DILocation(line: 1290, column: 21, scope: !2204)
!2218 = !DILocation(line: 1291, column: 3, scope: !2204)
!2219 = !DILocation(line: 1289, column: 30, scope: !2199)
!2220 = !DILocation(line: 1289, column: 3, scope: !2199)
!2221 = distinct !{!2221, !2202, !2222}
!2222 = !DILocation(line: 1291, column: 3, scope: !2196)
!2223 = !DILocation(line: 1293, column: 7, scope: !2224)
!2224 = distinct !DILexicalBlock(scope: !2167, file: !3, line: 1293, column: 7)
!2225 = !DILocation(line: 1293, column: 7, scope: !2167)
!2226 = !DILocation(line: 1294, column: 8, scope: !2227)
!2227 = distinct !DILexicalBlock(scope: !2228, file: !3, line: 1294, column: 8)
!2228 = distinct !DILexicalBlock(scope: !2224, file: !3, line: 1293, column: 10)
!2229 = !DILocation(line: 1294, column: 11, scope: !2227)
!2230 = !DILocation(line: 1294, column: 23, scope: !2227)
!2231 = !DILocation(line: 1294, column: 20, scope: !2227)
!2232 = !DILocation(line: 1294, column: 32, scope: !2227)
!2233 = !DILocation(line: 1295, column: 29, scope: !2227)
!2234 = !DILocation(line: 1295, column: 15, scope: !2227)
!2235 = !DILocation(line: 1295, column: 33, scope: !2227)
!2236 = !DILocation(line: 1295, column: 37, scope: !2227)
!2237 = !DILocation(line: 1295, column: 73, scope: !2227)
!2238 = !DILocation(line: 1295, column: 71, scope: !2227)
!2239 = !DILocation(line: 1295, column: 8, scope: !2227)
!2240 = !DILocation(line: 1295, column: 83, scope: !2227)
!2241 = !DILocation(line: 1296, column: 29, scope: !2227)
!2242 = !DILocation(line: 1296, column: 15, scope: !2227)
!2243 = !DILocation(line: 1296, column: 33, scope: !2227)
!2244 = !DILocation(line: 1296, column: 37, scope: !2227)
!2245 = !DILocation(line: 1296, column: 73, scope: !2227)
!2246 = !DILocation(line: 1296, column: 71, scope: !2227)
!2247 = !DILocation(line: 1296, column: 8, scope: !2227)
!2248 = !DILocation(line: 1294, column: 8, scope: !2228)
!2249 = !DILocation(line: 1298, column: 21, scope: !2250)
!2250 = distinct !DILexicalBlock(scope: !2227, file: !3, line: 1297, column: 4)
!2251 = !DILocation(line: 1299, column: 4, scope: !2250)
!2252 = !DILocation(line: 1300, column: 3, scope: !2228)
!2253 = !DILocation(line: 1302, column: 8, scope: !2254)
!2254 = distinct !DILexicalBlock(scope: !2167, file: !3, line: 1302, column: 7)
!2255 = !DILocation(line: 1302, column: 10, scope: !2254)
!2256 = !DILocation(line: 1302, column: 13, scope: !2254)
!2257 = !DILocation(line: 1302, column: 7, scope: !2167)
!2258 = !DILocation(line: 1303, column: 21, scope: !2259)
!2259 = distinct !DILexicalBlock(scope: !2254, file: !3, line: 1302, column: 30)
!2260 = !DILocation(line: 1303, column: 27, scope: !2259)
!2261 = !DILocation(line: 1303, column: 31, scope: !2259)
!2262 = !DILocation(line: 1303, column: 42, scope: !2259)
!2263 = !DILocation(line: 1303, column: 46, scope: !2259)
!2264 = !DILocation(line: 1303, column: 57, scope: !2259)
!2265 = !DILocation(line: 1303, column: 67, scope: !2259)
!2266 = !DILocation(line: 1303, column: 11, scope: !2259)
!2267 = !DILocation(line: 1303, column: 9, scope: !2259)
!2268 = !DILocation(line: 1305, column: 8, scope: !2269)
!2269 = distinct !DILexicalBlock(scope: !2259, file: !3, line: 1305, column: 8)
!2270 = !DILocation(line: 1305, column: 8, scope: !2259)
!2271 = !DILocation(line: 1306, column: 21, scope: !2272)
!2272 = distinct !DILexicalBlock(scope: !2269, file: !3, line: 1305, column: 11)
!2273 = !DILocation(line: 1306, column: 32, scope: !2272)
!2274 = !DILocation(line: 1306, column: 35, scope: !2272)
!2275 = !DILocation(line: 1306, column: 30, scope: !2272)
!2276 = !DILocation(line: 1306, column: 5, scope: !2272)
!2277 = !DILocation(line: 1306, column: 9, scope: !2272)
!2278 = !DILocation(line: 1306, column: 18, scope: !2272)
!2279 = !DILocation(line: 1308, column: 14, scope: !2272)
!2280 = !DILocation(line: 1308, column: 6, scope: !2272)
!2281 = !DILocation(line: 1308, column: 12, scope: !2272)
!2282 = !DILocation(line: 1309, column: 18, scope: !2272)
!2283 = !DILocation(line: 1309, column: 21, scope: !2272)
!2284 = !DILocation(line: 1309, column: 5, scope: !2272)
!2285 = !DILocation(line: 1309, column: 11, scope: !2272)
!2286 = !DILocation(line: 1309, column: 16, scope: !2272)
!2287 = !DILocation(line: 1311, column: 29, scope: !2272)
!2288 = !DILocation(line: 1311, column: 32, scope: !2272)
!2289 = !DILocation(line: 1311, column: 5, scope: !2272)
!2290 = !DILocation(line: 1312, column: 4, scope: !2272)
!2291 = !DILocation(line: 1314, column: 21, scope: !2292)
!2292 = distinct !DILexicalBlock(scope: !2269, file: !3, line: 1313, column: 9)
!2293 = !DILocation(line: 1314, column: 5, scope: !2292)
!2294 = !DILocation(line: 1314, column: 9, scope: !2292)
!2295 = !DILocation(line: 1314, column: 18, scope: !2292)
!2296 = !DILocation(line: 1315, column: 19, scope: !2292)
!2297 = !DILocation(line: 1315, column: 23, scope: !2292)
!2298 = !DILocation(line: 1315, column: 41, scope: !2292)
!2299 = !DILocation(line: 1315, column: 29, scope: !2292)
!2300 = !DILocation(line: 1315, column: 5, scope: !2292)
!2301 = !DILocation(line: 1318, column: 11, scope: !2302)
!2302 = distinct !DILexicalBlock(scope: !2259, file: !3, line: 1318, column: 4)
!2303 = !DILocation(line: 1318, column: 9, scope: !2302)
!2304 = !DILocation(line: 1318, column: 16, scope: !2305)
!2305 = distinct !DILexicalBlock(scope: !2302, file: !3, line: 1318, column: 4)
!2306 = !DILocation(line: 1318, column: 20, scope: !2305)
!2307 = !DILocation(line: 1318, column: 18, scope: !2305)
!2308 = !DILocation(line: 1318, column: 4, scope: !2302)
!2309 = !DILocation(line: 1319, column: 19, scope: !2305)
!2310 = !DILocation(line: 1319, column: 5, scope: !2305)
!2311 = !DILocation(line: 1319, column: 25, scope: !2305)
!2312 = !DILocation(line: 1319, column: 29, scope: !2305)
!2313 = !DILocation(line: 1319, column: 35, scope: !2305)
!2314 = !DILocation(line: 1318, column: 31, scope: !2305)
!2315 = !DILocation(line: 1318, column: 4, scope: !2305)
!2316 = distinct !{!2316, !2308, !2317}
!2317 = !DILocation(line: 1319, column: 38, scope: !2302)
!2318 = !DILocation(line: 1320, column: 3, scope: !2259)
!2319 = !DILocation(line: 1321, column: 2, scope: !2167)
!2320 = !DILocation(line: 1323, column: 7, scope: !2321)
!2321 = distinct !DILexicalBlock(scope: !2322, file: !3, line: 1323, column: 7)
!2322 = distinct !DILexicalBlock(scope: !2162, file: !3, line: 1322, column: 7)
!2323 = !DILocation(line: 1323, column: 11, scope: !2321)
!2324 = !DILocation(line: 1323, column: 21, scope: !2321)
!2325 = !DILocation(line: 1323, column: 40, scope: !2321)
!2326 = !DILocation(line: 1323, column: 43, scope: !2321)
!2327 = !DILocation(line: 1323, column: 47, scope: !2321)
!2328 = !DILocation(line: 1323, column: 57, scope: !2321)
!2329 = !DILocation(line: 1323, column: 7, scope: !2322)
!2330 = !DILocation(line: 1324, column: 4, scope: !2331)
!2331 = distinct !DILexicalBlock(scope: !2321, file: !3, line: 1323, column: 77)
!2332 = !DILocation(line: 1324, column: 8, scope: !2331)
!2333 = !DILocation(line: 1324, column: 18, scope: !2331)
!2334 = !DILocation(line: 1325, column: 3, scope: !2331)
!2335 = !DILocation(line: 1326, column: 12, scope: !2336)
!2336 = distinct !DILexicalBlock(scope: !2321, file: !3, line: 1326, column: 12)
!2337 = !DILocation(line: 1326, column: 16, scope: !2336)
!2338 = !DILocation(line: 1326, column: 26, scope: !2336)
!2339 = !DILocation(line: 1326, column: 12, scope: !2321)
!2340 = !DILocation(line: 1327, column: 4, scope: !2341)
!2341 = distinct !DILexicalBlock(scope: !2336, file: !3, line: 1326, column: 46)
!2342 = !DILocation(line: 1330, column: 29, scope: !2322)
!2343 = !DILocation(line: 1330, column: 33, scope: !2322)
!2344 = !DILocation(line: 1330, column: 42, scope: !2322)
!2345 = !DILocation(line: 1330, column: 7, scope: !2322)
!2346 = !DILocation(line: 1330, column: 5, scope: !2322)
!2347 = !DILocation(line: 1332, column: 10, scope: !2348)
!2348 = distinct !DILexicalBlock(scope: !2322, file: !3, line: 1332, column: 3)
!2349 = !DILocation(line: 1332, column: 8, scope: !2348)
!2350 = !DILocation(line: 1332, column: 15, scope: !2351)
!2351 = distinct !DILexicalBlock(scope: !2348, file: !3, line: 1332, column: 3)
!2352 = !DILocation(line: 1332, column: 19, scope: !2351)
!2353 = !DILocation(line: 1332, column: 17, scope: !2351)
!2354 = !DILocation(line: 1332, column: 3, scope: !2348)
!2355 = !DILocation(line: 1333, column: 37, scope: !2356)
!2356 = distinct !DILexicalBlock(scope: !2351, file: !3, line: 1332, column: 34)
!2357 = !DILocation(line: 1333, column: 41, scope: !2356)
!2358 = !DILocation(line: 1333, column: 47, scope: !2356)
!2359 = !DILocation(line: 1333, column: 53, scope: !2356)
!2360 = !DILocation(line: 1333, column: 23, scope: !2356)
!2361 = !DILocation(line: 1333, column: 4, scope: !2356)
!2362 = !DILocation(line: 1333, column: 8, scope: !2356)
!2363 = !DILocation(line: 1333, column: 18, scope: !2356)
!2364 = !DILocation(line: 1333, column: 21, scope: !2356)
!2365 = !DILocation(line: 1335, column: 9, scope: !2366)
!2366 = distinct !DILexicalBlock(scope: !2356, file: !3, line: 1335, column: 8)
!2367 = !DILocation(line: 1335, column: 13, scope: !2366)
!2368 = !DILocation(line: 1335, column: 23, scope: !2366)
!2369 = !DILocation(line: 1335, column: 8, scope: !2356)
!2370 = !DILocation(line: 1336, column: 5, scope: !2366)
!2371 = !DILocation(line: 1337, column: 3, scope: !2356)
!2372 = !DILocation(line: 1332, column: 30, scope: !2351)
!2373 = !DILocation(line: 1332, column: 3, scope: !2351)
!2374 = distinct !{!2374, !2354, !2375}
!2375 = !DILocation(line: 1337, column: 3, scope: !2348)
!2376 = !DILocation(line: 1338, column: 10, scope: !2377)
!2377 = distinct !DILexicalBlock(scope: !2322, file: !3, line: 1338, column: 3)
!2378 = !DILocation(line: 1338, column: 8, scope: !2377)
!2379 = !DILocation(line: 1338, column: 15, scope: !2380)
!2380 = distinct !DILexicalBlock(scope: !2377, file: !3, line: 1338, column: 3)
!2381 = !DILocation(line: 1338, column: 19, scope: !2380)
!2382 = !DILocation(line: 1338, column: 17, scope: !2380)
!2383 = !DILocation(line: 1338, column: 3, scope: !2377)
!2384 = !DILocation(line: 1339, column: 40, scope: !2385)
!2385 = distinct !DILexicalBlock(scope: !2380, file: !3, line: 1338, column: 34)
!2386 = !DILocation(line: 1339, column: 44, scope: !2385)
!2387 = !DILocation(line: 1339, column: 54, scope: !2385)
!2388 = !DILocation(line: 1339, column: 58, scope: !2385)
!2389 = !DILocation(line: 1339, column: 62, scope: !2385)
!2390 = !DILocation(line: 1339, column: 73, scope: !2385)
!2391 = !DILocation(line: 1339, column: 75, scope: !2385)
!2392 = !DILocation(line: 1339, column: 82, scope: !2385)
!2393 = !DILocation(line: 1339, column: 80, scope: !2385)
!2394 = !DILocation(line: 1339, column: 23, scope: !2385)
!2395 = !DILocation(line: 1339, column: 4, scope: !2385)
!2396 = !DILocation(line: 1339, column: 8, scope: !2385)
!2397 = !DILocation(line: 1339, column: 18, scope: !2385)
!2398 = !DILocation(line: 1339, column: 21, scope: !2385)
!2399 = !DILocation(line: 1341, column: 9, scope: !2400)
!2400 = distinct !DILexicalBlock(scope: !2385, file: !3, line: 1341, column: 8)
!2401 = !DILocation(line: 1341, column: 13, scope: !2400)
!2402 = !DILocation(line: 1341, column: 23, scope: !2400)
!2403 = !DILocation(line: 1341, column: 8, scope: !2385)
!2404 = !DILocation(line: 1342, column: 9, scope: !2405)
!2405 = distinct !DILexicalBlock(scope: !2406, file: !3, line: 1342, column: 9)
!2406 = distinct !DILexicalBlock(scope: !2400, file: !3, line: 1341, column: 27)
!2407 = !DILocation(line: 1342, column: 13, scope: !2405)
!2408 = !DILocation(line: 1342, column: 9, scope: !2406)
!2409 = !DILocalVariable(name: "e", scope: !2410, file: !3, line: 1343, type: !84)
!2410 = distinct !DILexicalBlock(scope: !2405, file: !3, line: 1342, column: 32)
!2411 = !DILocation(line: 1343, column: 15, scope: !2410)
!2412 = !DILocation(line: 1343, column: 66, scope: !2410)
!2413 = !DILocation(line: 1343, column: 70, scope: !2410)
!2414 = !DILocation(line: 1343, column: 80, scope: !2410)
!2415 = !DILocation(line: 1343, column: 84, scope: !2410)
!2416 = !DILocation(line: 1343, column: 88, scope: !2410)
!2417 = !DILocation(line: 1343, column: 99, scope: !2410)
!2418 = !DILocation(line: 1343, column: 101, scope: !2410)
!2419 = !DILocation(line: 1343, column: 108, scope: !2410)
!2420 = !DILocation(line: 1343, column: 106, scope: !2410)
!2421 = !DILocation(line: 1343, column: 119, scope: !2410)
!2422 = !DILocation(line: 1343, column: 123, scope: !2410)
!2423 = !DILocation(line: 1343, column: 143, scope: !2410)
!2424 = !DILocation(line: 1343, column: 38, scope: !2410)
!2425 = !DILocation(line: 1343, column: 19, scope: !2410)
!2426 = !DILocation(line: 1343, column: 23, scope: !2410)
!2427 = !DILocation(line: 1343, column: 33, scope: !2410)
!2428 = !DILocation(line: 1343, column: 36, scope: !2410)
!2429 = !DILocation(line: 1344, column: 20, scope: !2410)
!2430 = !DILocation(line: 1344, column: 24, scope: !2410)
!2431 = !DILocation(line: 1344, column: 42, scope: !2410)
!2432 = !DILocation(line: 1344, column: 30, scope: !2410)
!2433 = !DILocation(line: 1344, column: 6, scope: !2410)
!2434 = !DILocation(line: 1345, column: 6, scope: !2410)
!2435 = !DILocation(line: 1345, column: 9, scope: !2410)
!2436 = !DILocation(line: 1345, column: 13, scope: !2410)
!2437 = !DILocation(line: 1345, column: 19, scope: !2410)
!2438 = !DILocation(line: 1346, column: 6, scope: !2410)
!2439 = !DILocation(line: 1346, column: 9, scope: !2410)
!2440 = !DILocation(line: 1346, column: 13, scope: !2410)
!2441 = !DILocation(line: 1346, column: 19, scope: !2410)
!2442 = !DILocation(line: 1347, column: 10, scope: !2443)
!2443 = distinct !DILexicalBlock(scope: !2410, file: !3, line: 1347, column: 10)
!2444 = !DILocation(line: 1347, column: 14, scope: !2443)
!2445 = !DILocation(line: 1347, column: 22, scope: !2443)
!2446 = !DILocation(line: 1347, column: 10, scope: !2410)
!2447 = !DILocation(line: 1348, column: 41, scope: !2448)
!2448 = distinct !DILexicalBlock(scope: !2443, file: !3, line: 1347, column: 36)
!2449 = !DILocation(line: 1348, column: 45, scope: !2448)
!2450 = !DILocation(line: 1348, column: 14, scope: !2448)
!2451 = !DILocation(line: 1348, column: 49, scope: !2448)
!2452 = !DILocation(line: 1348, column: 53, scope: !2448)
!2453 = !DILocation(line: 1348, column: 74, scope: !2448)
!2454 = !DILocation(line: 1348, column: 78, scope: !2448)
!2455 = !DILocation(line: 1348, column: 86, scope: !2448)
!2456 = !DILocation(line: 1348, column: 7, scope: !2448)
!2457 = !DILocation(line: 1349, column: 6, scope: !2448)
!2458 = !DILocation(line: 1350, column: 5, scope: !2410)
!2459 = !DILocation(line: 1352, column: 6, scope: !2460)
!2460 = distinct !DILexicalBlock(scope: !2405, file: !3, line: 1351, column: 10)
!2461 = !DILocation(line: 1354, column: 4, scope: !2406)
!2462 = !DILocation(line: 1355, column: 3, scope: !2385)
!2463 = !DILocation(line: 1338, column: 30, scope: !2380)
!2464 = !DILocation(line: 1338, column: 3, scope: !2380)
!2465 = distinct !{!2465, !2383, !2466}
!2466 = !DILocation(line: 1355, column: 3, scope: !2377)
!2467 = !DILocation(line: 1357, column: 7, scope: !2468)
!2468 = distinct !DILexicalBlock(scope: !2322, file: !3, line: 1357, column: 7)
!2469 = !DILocation(line: 1357, column: 7, scope: !2322)
!2470 = !DILocation(line: 1358, column: 8, scope: !2471)
!2471 = distinct !DILexicalBlock(scope: !2472, file: !3, line: 1358, column: 8)
!2472 = distinct !DILexicalBlock(scope: !2468, file: !3, line: 1357, column: 10)
!2473 = !DILocation(line: 1358, column: 11, scope: !2471)
!2474 = !DILocation(line: 1358, column: 23, scope: !2471)
!2475 = !DILocation(line: 1358, column: 20, scope: !2471)
!2476 = !DILocation(line: 1358, column: 32, scope: !2471)
!2477 = !DILocation(line: 1359, column: 29, scope: !2471)
!2478 = !DILocation(line: 1359, column: 15, scope: !2471)
!2479 = !DILocation(line: 1359, column: 33, scope: !2471)
!2480 = !DILocation(line: 1359, column: 37, scope: !2471)
!2481 = !DILocation(line: 1359, column: 73, scope: !2471)
!2482 = !DILocation(line: 1359, column: 71, scope: !2471)
!2483 = !DILocation(line: 1359, column: 8, scope: !2471)
!2484 = !DILocation(line: 1359, column: 83, scope: !2471)
!2485 = !DILocation(line: 1360, column: 29, scope: !2471)
!2486 = !DILocation(line: 1360, column: 15, scope: !2471)
!2487 = !DILocation(line: 1360, column: 33, scope: !2471)
!2488 = !DILocation(line: 1360, column: 37, scope: !2471)
!2489 = !DILocation(line: 1360, column: 73, scope: !2471)
!2490 = !DILocation(line: 1360, column: 71, scope: !2471)
!2491 = !DILocation(line: 1360, column: 8, scope: !2471)
!2492 = !DILocation(line: 1358, column: 8, scope: !2472)
!2493 = !DILocation(line: 1362, column: 21, scope: !2494)
!2494 = distinct !DILexicalBlock(scope: !2471, file: !3, line: 1361, column: 4)
!2495 = !DILocation(line: 1363, column: 4, scope: !2494)
!2496 = !DILocation(line: 1364, column: 3, scope: !2472)
!2497 = !DILocation(line: 1366, column: 8, scope: !2498)
!2498 = distinct !DILexicalBlock(scope: !2322, file: !3, line: 1366, column: 7)
!2499 = !DILocation(line: 1366, column: 10, scope: !2498)
!2500 = !DILocation(line: 1366, column: 13, scope: !2498)
!2501 = !DILocation(line: 1366, column: 7, scope: !2322)
!2502 = !DILocation(line: 1367, column: 18, scope: !2503)
!2503 = distinct !DILexicalBlock(scope: !2498, file: !3, line: 1366, column: 30)
!2504 = !DILocation(line: 1367, column: 24, scope: !2503)
!2505 = !DILocation(line: 1367, column: 28, scope: !2503)
!2506 = !DILocation(line: 1367, column: 39, scope: !2503)
!2507 = !DILocation(line: 1367, column: 43, scope: !2503)
!2508 = !DILocation(line: 1367, column: 54, scope: !2503)
!2509 = !DILocation(line: 1367, column: 64, scope: !2503)
!2510 = !DILocation(line: 1367, column: 8, scope: !2503)
!2511 = !DILocation(line: 1367, column: 6, scope: !2503)
!2512 = !DILocation(line: 1368, column: 18, scope: !2503)
!2513 = !DILocation(line: 1368, column: 22, scope: !2503)
!2514 = !DILocation(line: 1368, column: 40, scope: !2503)
!2515 = !DILocation(line: 1368, column: 28, scope: !2503)
!2516 = !DILocation(line: 1368, column: 4, scope: !2503)
!2517 = !DILocation(line: 1369, column: 20, scope: !2503)
!2518 = !DILocation(line: 1369, column: 4, scope: !2503)
!2519 = !DILocation(line: 1369, column: 8, scope: !2503)
!2520 = !DILocation(line: 1369, column: 17, scope: !2503)
!2521 = !DILocation(line: 1371, column: 11, scope: !2522)
!2522 = distinct !DILexicalBlock(scope: !2503, file: !3, line: 1371, column: 4)
!2523 = !DILocation(line: 1371, column: 9, scope: !2522)
!2524 = !DILocation(line: 1371, column: 16, scope: !2525)
!2525 = distinct !DILexicalBlock(scope: !2522, file: !3, line: 1371, column: 4)
!2526 = !DILocation(line: 1371, column: 20, scope: !2525)
!2527 = !DILocation(line: 1371, column: 18, scope: !2525)
!2528 = !DILocation(line: 1371, column: 4, scope: !2522)
!2529 = !DILocation(line: 1372, column: 19, scope: !2525)
!2530 = !DILocation(line: 1372, column: 5, scope: !2525)
!2531 = !DILocation(line: 1372, column: 22, scope: !2525)
!2532 = !DILocation(line: 1372, column: 26, scope: !2525)
!2533 = !DILocation(line: 1372, column: 32, scope: !2525)
!2534 = !DILocation(line: 1371, column: 31, scope: !2525)
!2535 = !DILocation(line: 1371, column: 4, scope: !2525)
!2536 = distinct !{!2536, !2528, !2537}
!2537 = !DILocation(line: 1372, column: 35, scope: !2522)
!2538 = !DILocation(line: 1373, column: 3, scope: !2503)
!2539 = !DILocation(line: 1375, column: 13, scope: !2540)
!2540 = distinct !DILexicalBlock(scope: !2498, file: !3, line: 1374, column: 8)
!2541 = !DILocation(line: 1375, column: 16, scope: !2540)
!2542 = !DILocation(line: 1375, column: 5, scope: !2540)
!2543 = !DILocation(line: 1375, column: 11, scope: !2540)
!2544 = !DILocation(line: 1376, column: 18, scope: !2540)
!2545 = !DILocation(line: 1376, column: 22, scope: !2540)
!2546 = !DILocation(line: 1376, column: 40, scope: !2540)
!2547 = !DILocation(line: 1376, column: 28, scope: !2540)
!2548 = !DILocation(line: 1376, column: 4, scope: !2540)
!2549 = !DILocation(line: 1377, column: 4, scope: !2540)
!2550 = !DILocation(line: 1377, column: 7, scope: !2540)
!2551 = !DILocation(line: 1377, column: 13, scope: !2540)
!2552 = !DILocation(line: 1378, column: 20, scope: !2540)
!2553 = !DILocation(line: 1378, column: 23, scope: !2540)
!2554 = !DILocation(line: 1378, column: 4, scope: !2540)
!2555 = !DILocation(line: 1378, column: 8, scope: !2540)
!2556 = !DILocation(line: 1378, column: 17, scope: !2540)
!2557 = !DILocation(line: 1380, column: 11, scope: !2558)
!2558 = distinct !DILexicalBlock(scope: !2540, file: !3, line: 1380, column: 4)
!2559 = !DILocation(line: 1380, column: 9, scope: !2558)
!2560 = !DILocation(line: 1380, column: 16, scope: !2561)
!2561 = distinct !DILexicalBlock(scope: !2558, file: !3, line: 1380, column: 4)
!2562 = !DILocation(line: 1380, column: 20, scope: !2561)
!2563 = !DILocation(line: 1380, column: 23, scope: !2561)
!2564 = !DILocation(line: 1380, column: 18, scope: !2561)
!2565 = !DILocation(line: 1380, column: 4, scope: !2558)
!2566 = !DILocation(line: 1381, column: 23, scope: !2567)
!2567 = distinct !DILexicalBlock(scope: !2568, file: !3, line: 1381, column: 9)
!2568 = distinct !DILexicalBlock(scope: !2561, file: !3, line: 1380, column: 38)
!2569 = !DILocation(line: 1381, column: 9, scope: !2567)
!2570 = !DILocation(line: 1381, column: 26, scope: !2567)
!2571 = !DILocation(line: 1381, column: 30, scope: !2567)
!2572 = !DILocation(line: 1381, column: 36, scope: !2567)
!2573 = !DILocation(line: 1381, column: 9, scope: !2568)
!2574 = !DILocation(line: 1382, column: 13, scope: !2575)
!2575 = distinct !DILexicalBlock(scope: !2576, file: !3, line: 1382, column: 6)
!2576 = distinct !DILexicalBlock(scope: !2567, file: !3, line: 1381, column: 53)
!2577 = !DILocation(line: 1382, column: 11, scope: !2575)
!2578 = !DILocation(line: 1382, column: 18, scope: !2579)
!2579 = distinct !DILexicalBlock(scope: !2575, file: !3, line: 1382, column: 6)
!2580 = !DILocation(line: 1382, column: 22, scope: !2579)
!2581 = !DILocation(line: 1382, column: 25, scope: !2579)
!2582 = !DILocation(line: 1382, column: 20, scope: !2579)
!2583 = !DILocation(line: 1382, column: 6, scope: !2575)
!2584 = !DILocation(line: 1383, column: 21, scope: !2579)
!2585 = !DILocation(line: 1383, column: 7, scope: !2579)
!2586 = !DILocation(line: 1383, column: 24, scope: !2579)
!2587 = !DILocation(line: 1383, column: 28, scope: !2579)
!2588 = !DILocation(line: 1383, column: 34, scope: !2579)
!2589 = !DILocation(line: 1382, column: 36, scope: !2579)
!2590 = !DILocation(line: 1382, column: 6, scope: !2579)
!2591 = distinct !{!2591, !2583, !2592}
!2592 = !DILocation(line: 1383, column: 37, scope: !2575)
!2593 = !DILocation(line: 1384, column: 6, scope: !2576)
!2594 = !DILocation(line: 1386, column: 4, scope: !2568)
!2595 = !DILocation(line: 1380, column: 34, scope: !2561)
!2596 = !DILocation(line: 1380, column: 4, scope: !2561)
!2597 = distinct !{!2597, !2565, !2598}
!2598 = !DILocation(line: 1386, column: 4, scope: !2558)
!2599 = !DILocation(line: 1390, column: 6, scope: !2600)
!2600 = distinct !DILexicalBlock(scope: !2109, file: !3, line: 1390, column: 6)
!2601 = !DILocation(line: 1390, column: 6, scope: !2109)
!2602 = !DILocation(line: 1390, column: 18, scope: !2600)
!2603 = !DILocation(line: 1390, column: 12, scope: !2600)
!2604 = !DILocation(line: 1390, column: 16, scope: !2600)
!2605 = !DILocation(line: 1390, column: 11, scope: !2600)
!2606 = !DILocation(line: 1391, column: 2, scope: !2109)
!2607 = !DILocation(line: 1392, column: 1, scope: !2109)
!2608 = distinct !DISubprogram(name: "_vert_findEdgeTo", scope: !3, file: !3, line: 559, type: !2609, scopeLine: 560, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !30, retainedNodes: !151)
!2609 = !DISubroutineType(types: !2610)
!2610 = !{!84, !2611, !2611}
!2611 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2612, size: 64)
!2612 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !71)
!2613 = !DILocalVariable(name: "v", arg: 1, scope: !2608, file: !3, line: 559, type: !2611)
!2614 = !DILocation(line: 559, column: 49, scope: !2608)
!2615 = !DILocalVariable(name: "vQ", arg: 2, scope: !2608, file: !3, line: 559, type: !2611)
!2616 = !DILocation(line: 559, column: 67, scope: !2608)
!2617 = !DILocalVariable(name: "i", scope: !2608, file: !3, line: 561, type: !17)
!2618 = !DILocation(line: 561, column: 6, scope: !2608)
!2619 = !DILocation(line: 562, column: 9, scope: !2620)
!2620 = distinct !DILexicalBlock(scope: !2608, file: !3, line: 562, column: 2)
!2621 = !DILocation(line: 562, column: 7, scope: !2620)
!2622 = !DILocation(line: 562, column: 14, scope: !2623)
!2623 = distinct !DILexicalBlock(scope: !2620, file: !3, line: 562, column: 2)
!2624 = !DILocation(line: 562, column: 18, scope: !2623)
!2625 = !DILocation(line: 562, column: 21, scope: !2623)
!2626 = !DILocation(line: 562, column: 16, scope: !2623)
!2627 = !DILocation(line: 562, column: 2, scope: !2620)
!2628 = !DILocalVariable(name: "e", scope: !2629, file: !3, line: 563, type: !84)
!2629 = distinct !DILexicalBlock(scope: !2623, file: !3, line: 562, column: 36)
!2630 = !DILocation(line: 563, column: 12, scope: !2629)
!2631 = !DILocation(line: 563, column: 16, scope: !2629)
!2632 = !DILocation(line: 563, column: 19, scope: !2629)
!2633 = !DILocation(line: 563, column: 25, scope: !2629)
!2634 = !DILocation(line: 563, column: 28, scope: !2629)
!2635 = !DILocation(line: 563, column: 37, scope: !2629)
!2636 = !DILocation(line: 563, column: 43, scope: !2629)
!2637 = !DILocation(line: 563, column: 41, scope: !2629)
!2638 = !DILocation(line: 564, column: 8, scope: !2639)
!2639 = distinct !DILexicalBlock(scope: !2629, file: !3, line: 564, column: 7)
!2640 = !DILocation(line: 564, column: 11, scope: !2639)
!2641 = !DILocation(line: 564, column: 17, scope: !2639)
!2642 = !DILocation(line: 564, column: 14, scope: !2639)
!2643 = !DILocation(line: 564, column: 19, scope: !2639)
!2644 = !DILocation(line: 564, column: 22, scope: !2639)
!2645 = !DILocation(line: 564, column: 25, scope: !2639)
!2646 = !DILocation(line: 564, column: 31, scope: !2639)
!2647 = !DILocation(line: 564, column: 28, scope: !2639)
!2648 = !DILocation(line: 564, column: 35, scope: !2639)
!2649 = !DILocation(line: 565, column: 8, scope: !2639)
!2650 = !DILocation(line: 565, column: 11, scope: !2639)
!2651 = !DILocation(line: 565, column: 17, scope: !2639)
!2652 = !DILocation(line: 565, column: 14, scope: !2639)
!2653 = !DILocation(line: 565, column: 19, scope: !2639)
!2654 = !DILocation(line: 565, column: 22, scope: !2639)
!2655 = !DILocation(line: 565, column: 25, scope: !2639)
!2656 = !DILocation(line: 565, column: 31, scope: !2639)
!2657 = !DILocation(line: 565, column: 28, scope: !2639)
!2658 = !DILocation(line: 564, column: 7, scope: !2629)
!2659 = !DILocation(line: 567, column: 11, scope: !2660)
!2660 = distinct !DILexicalBlock(scope: !2639, file: !3, line: 566, column: 3)
!2661 = !DILocation(line: 567, column: 4, scope: !2660)
!2662 = !DILocation(line: 569, column: 2, scope: !2629)
!2663 = !DILocation(line: 562, column: 32, scope: !2623)
!2664 = !DILocation(line: 562, column: 2, scope: !2623)
!2665 = distinct !{!2665, !2627, !2666}
!2666 = !DILocation(line: 569, column: 2, scope: !2620)
!2667 = !DILocation(line: 570, column: 2, scope: !2608)
!2668 = !DILocation(line: 571, column: 1, scope: !2608)
!2669 = distinct !DISubprogram(name: "FACE_getEdges", scope: !3, file: !3, line: 387, type: !2670, scopeLine: 388, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !30, retainedNodes: !151)
!2670 = !DISubroutineType(types: !2671)
!2671 = !{!83, !97}
!2672 = !DILocalVariable(name: "f", arg: 1, scope: !2669, file: !3, line: 387, type: !97)
!2673 = !DILocation(line: 387, column: 45, scope: !2669)
!2674 = !DILocation(line: 389, column: 38, scope: !2669)
!2675 = !DILocation(line: 389, column: 24, scope: !2669)
!2676 = !DILocation(line: 389, column: 41, scope: !2669)
!2677 = !DILocation(line: 389, column: 44, scope: !2669)
!2678 = !DILocation(line: 389, column: 9, scope: !2669)
!2679 = !DILocation(line: 389, column: 2, scope: !2669)
!2680 = distinct !DISubprogram(name: "_face_new", scope: !3, file: !3, line: 706, type: !2681, scopeLine: 707, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !30, retainedNodes: !151)
!2681 = !DISubroutineType(types: !2682)
!2682 = !{!97, !103, !141, !83, !17, !187}
!2683 = !DILocalVariable(name: "fHDL", arg: 1, scope: !2680, file: !3, line: 706, type: !103)
!2684 = !DILocation(line: 706, column: 38, scope: !2680)
!2685 = !DILocalVariable(name: "verts", arg: 2, scope: !2680, file: !3, line: 706, type: !141)
!2686 = !DILocation(line: 706, column: 54, scope: !2680)
!2687 = !DILocalVariable(name: "edges", arg: 3, scope: !2680, file: !3, line: 706, type: !83)
!2688 = !DILocation(line: 706, column: 71, scope: !2680)
!2689 = !DILocalVariable(name: "numVerts", arg: 4, scope: !2680, file: !3, line: 706, type: !17)
!2690 = !DILocation(line: 706, column: 82, scope: !2680)
!2691 = !DILocalVariable(name: "ss", arg: 5, scope: !2680, file: !3, line: 706, type: !187)
!2692 = !DILocation(line: 706, column: 104, scope: !2680)
!2693 = !DILocalVariable(name: "maxGridSize", scope: !2680, file: !3, line: 708, type: !17)
!2694 = !DILocation(line: 708, column: 6, scope: !2680)
!2695 = !DILocation(line: 708, column: 33, scope: !2680)
!2696 = !DILocation(line: 708, column: 37, scope: !2680)
!2697 = !DILocation(line: 708, column: 20, scope: !2680)
!2698 = !DILocalVariable(name: "num_face_data", scope: !2680, file: !3, line: 709, type: !17)
!2699 = !DILocation(line: 709, column: 6, scope: !2680)
!2700 = !DILocation(line: 709, column: 23, scope: !2680)
!2701 = !DILocation(line: 709, column: 34, scope: !2680)
!2702 = !DILocation(line: 709, column: 32, scope: !2680)
!2703 = !DILocation(line: 710, column: 23, scope: !2680)
!2704 = !DILocation(line: 710, column: 34, scope: !2680)
!2705 = !DILocation(line: 710, column: 32, scope: !2680)
!2706 = !DILocation(line: 710, column: 48, scope: !2680)
!2707 = !DILocation(line: 710, column: 46, scope: !2680)
!2708 = !DILocation(line: 709, column: 46, scope: !2680)
!2709 = !DILocation(line: 710, column: 60, scope: !2680)
!2710 = !DILocalVariable(name: "f", scope: !2680, file: !3, line: 711, type: !97)
!2711 = !DILocation(line: 711, column: 11, scope: !2680)
!2712 = !DILocation(line: 711, column: 15, scope: !2680)
!2713 = !DILocalVariable(name: "userData", scope: !2680, file: !3, line: 717, type: !142)
!2714 = !DILocation(line: 717, column: 8, scope: !2680)
!2715 = !DILocalVariable(name: "i", scope: !2680, file: !3, line: 718, type: !17)
!2716 = !DILocation(line: 718, column: 6, scope: !2680)
!2717 = !DILocation(line: 720, column: 16, scope: !2680)
!2718 = !DILocation(line: 720, column: 2, scope: !2680)
!2719 = !DILocation(line: 720, column: 5, scope: !2680)
!2720 = !DILocation(line: 720, column: 14, scope: !2680)
!2721 = !DILocation(line: 721, column: 12, scope: !2680)
!2722 = !DILocation(line: 721, column: 2, scope: !2680)
!2723 = !DILocation(line: 721, column: 5, scope: !2680)
!2724 = !DILocation(line: 721, column: 10, scope: !2680)
!2725 = !DILocation(line: 722, column: 2, scope: !2680)
!2726 = !DILocation(line: 722, column: 5, scope: !2680)
!2727 = !DILocation(line: 722, column: 11, scope: !2680)
!2728 = !DILocation(line: 724, column: 9, scope: !2729)
!2729 = distinct !DILexicalBlock(scope: !2680, file: !3, line: 724, column: 2)
!2730 = !DILocation(line: 724, column: 7, scope: !2729)
!2731 = !DILocation(line: 724, column: 14, scope: !2732)
!2732 = distinct !DILexicalBlock(scope: !2729, file: !3, line: 724, column: 2)
!2733 = !DILocation(line: 724, column: 18, scope: !2732)
!2734 = !DILocation(line: 724, column: 16, scope: !2732)
!2735 = !DILocation(line: 724, column: 2, scope: !2729)
!2736 = !DILocation(line: 725, column: 25, scope: !2737)
!2737 = distinct !DILexicalBlock(scope: !2732, file: !3, line: 724, column: 33)
!2738 = !DILocation(line: 725, column: 31, scope: !2737)
!2739 = !DILocation(line: 725, column: 17, scope: !2737)
!2740 = !DILocation(line: 725, column: 3, scope: !2737)
!2741 = !DILocation(line: 725, column: 20, scope: !2737)
!2742 = !DILocation(line: 725, column: 23, scope: !2737)
!2743 = !DILocation(line: 726, column: 25, scope: !2737)
!2744 = !DILocation(line: 726, column: 31, scope: !2737)
!2745 = !DILocation(line: 726, column: 17, scope: !2737)
!2746 = !DILocation(line: 726, column: 3, scope: !2737)
!2747 = !DILocation(line: 726, column: 20, scope: !2737)
!2748 = !DILocation(line: 726, column: 23, scope: !2737)
!2749 = !DILocation(line: 727, column: 17, scope: !2737)
!2750 = !DILocation(line: 727, column: 23, scope: !2737)
!2751 = !DILocation(line: 727, column: 27, scope: !2737)
!2752 = !DILocation(line: 727, column: 30, scope: !2737)
!2753 = !DILocation(line: 727, column: 3, scope: !2737)
!2754 = !DILocation(line: 728, column: 17, scope: !2737)
!2755 = !DILocation(line: 728, column: 23, scope: !2737)
!2756 = !DILocation(line: 728, column: 27, scope: !2737)
!2757 = !DILocation(line: 728, column: 30, scope: !2737)
!2758 = !DILocation(line: 728, column: 3, scope: !2737)
!2759 = !DILocation(line: 729, column: 2, scope: !2737)
!2760 = !DILocation(line: 724, column: 29, scope: !2732)
!2761 = !DILocation(line: 724, column: 2, scope: !2732)
!2762 = distinct !{!2762, !2735, !2763}
!2763 = !DILocation(line: 729, column: 2, scope: !2729)
!2764 = !DILocation(line: 731, column: 40, scope: !2680)
!2765 = !DILocation(line: 731, column: 44, scope: !2680)
!2766 = !DILocation(line: 731, column: 13, scope: !2680)
!2767 = !DILocation(line: 731, column: 11, scope: !2680)
!2768 = !DILocation(line: 732, column: 9, scope: !2680)
!2769 = !DILocation(line: 732, column: 22, scope: !2680)
!2770 = !DILocation(line: 732, column: 26, scope: !2680)
!2771 = !DILocation(line: 732, column: 34, scope: !2680)
!2772 = !DILocation(line: 732, column: 2, scope: !2680)
!2773 = !DILocation(line: 733, column: 6, scope: !2774)
!2774 = distinct !DILexicalBlock(scope: !2680, file: !3, line: 733, column: 6)
!2775 = !DILocation(line: 733, column: 10, scope: !2774)
!2776 = !DILocation(line: 733, column: 6, scope: !2680)
!2777 = !DILocation(line: 733, column: 70, scope: !2774)
!2778 = !DILocation(line: 733, column: 74, scope: !2774)
!2779 = !DILocation(line: 733, column: 35, scope: !2774)
!2780 = !DILocation(line: 733, column: 44, scope: !2774)
!2781 = !DILocation(line: 733, column: 48, scope: !2774)
!2782 = !DILocation(line: 733, column: 24, scope: !2774)
!2783 = !DILocation(line: 733, column: 68, scope: !2774)
!2784 = !DILocation(line: 735, column: 9, scope: !2680)
!2785 = !DILocation(line: 735, column: 2, scope: !2680)
!2786 = distinct !DISubprogram(name: "ccgSubSurf_getEdgeUserData", scope: !3, file: !3, line: 2947, type: !2787, scopeLine: 2948, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, retainedNodes: !151)
!2787 = !DISubroutineType(types: !2788)
!2788 = !{!15, !187, !84}
!2789 = !DILocalVariable(name: "ss", arg: 1, scope: !2786, file: !3, line: 2947, type: !187)
!2790 = !DILocation(line: 2947, column: 46, scope: !2786)
!2791 = !DILocalVariable(name: "e", arg: 2, scope: !2786, file: !3, line: 2947, type: !84)
!2792 = !DILocation(line: 2947, column: 59, scope: !2786)
!2793 = !DILocation(line: 2949, column: 28, scope: !2786)
!2794 = !DILocation(line: 2949, column: 10, scope: !2786)
!2795 = !DILocation(line: 2950, column: 10, scope: !2786)
!2796 = !DILocation(line: 2950, column: 14, scope: !2786)
!2797 = !DILocation(line: 2950, column: 22, scope: !2786)
!2798 = !DILocation(line: 2950, column: 50, scope: !2786)
!2799 = !DILocation(line: 2950, column: 54, scope: !2786)
!2800 = !DILocation(line: 2950, column: 67, scope: !2786)
!2801 = !DILocation(line: 2950, column: 37, scope: !2786)
!2802 = !DILocation(line: 2950, column: 35, scope: !2786)
!2803 = !DILocation(line: 2949, column: 31, scope: !2786)
!2804 = !DILocation(line: 2949, column: 2, scope: !2786)
!2805 = distinct !DISubprogram(name: "ccgSubSurf_processSync", scope: !3, file: !3, line: 1394, type: !919, scopeLine: 1395, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, retainedNodes: !151)
!2806 = !DILocalVariable(name: "ss", arg: 1, scope: !2805, file: !3, line: 1394, type: !187)
!2807 = !DILocation(line: 1394, column: 45, scope: !2805)
!2808 = !DILocation(line: 1396, column: 6, scope: !2809)
!2809 = distinct !DILexicalBlock(scope: !2805, file: !3, line: 1396, column: 6)
!2810 = !DILocation(line: 1396, column: 10, scope: !2809)
!2811 = !DILocation(line: 1396, column: 20, scope: !2809)
!2812 = !DILocation(line: 1396, column: 6, scope: !2805)
!2813 = !DILocation(line: 1397, column: 3, scope: !2814)
!2814 = distinct !DILexicalBlock(scope: !2809, file: !3, line: 1396, column: 43)
!2815 = !DILocation(line: 1397, column: 7, scope: !2814)
!2816 = !DILocation(line: 1397, column: 17, scope: !2814)
!2817 = !DILocation(line: 1399, column: 20, scope: !2814)
!2818 = !DILocation(line: 1399, column: 3, scope: !2814)
!2819 = !DILocation(line: 1400, column: 2, scope: !2814)
!2820 = !DILocation(line: 1401, column: 11, scope: !2821)
!2821 = distinct !DILexicalBlock(scope: !2809, file: !3, line: 1401, column: 11)
!2822 = !DILocation(line: 1401, column: 15, scope: !2821)
!2823 = !DILocation(line: 1401, column: 11, scope: !2809)
!2824 = !DILocation(line: 1402, column: 15, scope: !2825)
!2825 = distinct !DILexicalBlock(scope: !2821, file: !3, line: 1401, column: 26)
!2826 = !DILocation(line: 1402, column: 19, scope: !2825)
!2827 = !DILocation(line: 1402, column: 69, scope: !2825)
!2828 = !DILocation(line: 1402, column: 3, scope: !2825)
!2829 = !DILocation(line: 1403, column: 15, scope: !2825)
!2830 = !DILocation(line: 1403, column: 19, scope: !2825)
!2831 = !DILocation(line: 1403, column: 69, scope: !2825)
!2832 = !DILocation(line: 1403, column: 3, scope: !2825)
!2833 = !DILocation(line: 1404, column: 15, scope: !2825)
!2834 = !DILocation(line: 1404, column: 19, scope: !2825)
!2835 = !DILocation(line: 1404, column: 56, scope: !2825)
!2836 = !DILocation(line: 1404, column: 3, scope: !2825)
!2837 = !DILocation(line: 1405, column: 3, scope: !2825)
!2838 = !DILocation(line: 1405, column: 13, scope: !2825)
!2839 = !DILocation(line: 1405, column: 17, scope: !2825)
!2840 = !DILocation(line: 1406, column: 3, scope: !2825)
!2841 = !DILocation(line: 1406, column: 13, scope: !2825)
!2842 = !DILocation(line: 1406, column: 17, scope: !2825)
!2843 = !DILocation(line: 1408, column: 3, scope: !2825)
!2844 = !DILocation(line: 1408, column: 7, scope: !2825)
!2845 = !DILocation(line: 1408, column: 21, scope: !2825)
!2846 = !DILocation(line: 1410, column: 31, scope: !2825)
!2847 = !DILocation(line: 1410, column: 35, scope: !2825)
!2848 = !DILocation(line: 1410, column: 43, scope: !2825)
!2849 = !DILocation(line: 1410, column: 17, scope: !2825)
!2850 = !DILocation(line: 1410, column: 21, scope: !2825)
!2851 = !DILocation(line: 1410, column: 29, scope: !2825)
!2852 = !DILocation(line: 1410, column: 3, scope: !2825)
!2853 = !DILocation(line: 1410, column: 7, scope: !2825)
!2854 = !DILocation(line: 1410, column: 15, scope: !2825)
!2855 = !DILocation(line: 1411, column: 3, scope: !2825)
!2856 = !DILocation(line: 1411, column: 7, scope: !2825)
!2857 = !DILocation(line: 1411, column: 17, scope: !2825)
!2858 = !DILocation(line: 1412, column: 3, scope: !2825)
!2859 = !DILocation(line: 1412, column: 7, scope: !2825)
!2860 = !DILocation(line: 1412, column: 17, scope: !2825)
!2861 = !DILocation(line: 1414, column: 3, scope: !2825)
!2862 = !DILocation(line: 1414, column: 7, scope: !2825)
!2863 = !DILocation(line: 1414, column: 17, scope: !2825)
!2864 = !DILocation(line: 1416, column: 20, scope: !2825)
!2865 = !DILocation(line: 1416, column: 3, scope: !2825)
!2866 = !DILocation(line: 1417, column: 2, scope: !2825)
!2867 = !DILocation(line: 1419, column: 3, scope: !2868)
!2868 = distinct !DILexicalBlock(scope: !2821, file: !3, line: 1418, column: 7)
!2869 = !DILocation(line: 1422, column: 2, scope: !2805)
!2870 = !DILocation(line: 1423, column: 1, scope: !2805)
!2871 = distinct !DISubprogram(name: "ccgSubSurf__sync", scope: !3, file: !3, line: 2163, type: !429, scopeLine: 2164, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !30, retainedNodes: !151)
!2872 = !DILocalVariable(name: "ss", arg: 1, scope: !2871, file: !3, line: 2163, type: !187)
!2873 = !DILocation(line: 2163, column: 42, scope: !2871)
!2874 = !DILocalVariable(name: "effectedV", scope: !2871, file: !3, line: 2165, type: !141)
!2875 = !DILocation(line: 2165, column: 12, scope: !2871)
!2876 = !DILocalVariable(name: "effectedE", scope: !2871, file: !3, line: 2166, type: !83)
!2877 = !DILocation(line: 2166, column: 12, scope: !2871)
!2878 = !DILocalVariable(name: "effectedF", scope: !2871, file: !3, line: 2167, type: !96)
!2879 = !DILocation(line: 2167, column: 12, scope: !2871)
!2880 = !DILocalVariable(name: "numEffectedV", scope: !2871, file: !3, line: 2168, type: !17)
!2881 = !DILocation(line: 2168, column: 6, scope: !2871)
!2882 = !DILocalVariable(name: "numEffectedE", scope: !2871, file: !3, line: 2168, type: !17)
!2883 = !DILocation(line: 2168, column: 20, scope: !2871)
!2884 = !DILocalVariable(name: "numEffectedF", scope: !2871, file: !3, line: 2168, type: !17)
!2885 = !DILocation(line: 2168, column: 34, scope: !2871)
!2886 = !DILocalVariable(name: "subdivLevels", scope: !2871, file: !3, line: 2169, type: !17)
!2887 = !DILocation(line: 2169, column: 6, scope: !2871)
!2888 = !DILocation(line: 2169, column: 21, scope: !2871)
!2889 = !DILocation(line: 2169, column: 25, scope: !2871)
!2890 = !DILocalVariable(name: "vertDataSize", scope: !2871, file: !3, line: 2170, type: !17)
!2891 = !DILocation(line: 2170, column: 6, scope: !2871)
!2892 = !DILocation(line: 2170, column: 21, scope: !2871)
!2893 = !DILocation(line: 2170, column: 25, scope: !2871)
!2894 = !DILocation(line: 2170, column: 33, scope: !2871)
!2895 = !DILocalVariable(name: "i", scope: !2871, file: !3, line: 2171, type: !17)
!2896 = !DILocation(line: 2171, column: 6, scope: !2871)
!2897 = !DILocalVariable(name: "j", scope: !2871, file: !3, line: 2171, type: !17)
!2898 = !DILocation(line: 2171, column: 9, scope: !2871)
!2899 = !DILocalVariable(name: "ptrIdx", scope: !2871, file: !3, line: 2171, type: !17)
!2900 = !DILocation(line: 2171, column: 12, scope: !2871)
!2901 = !DILocalVariable(name: "S", scope: !2871, file: !3, line: 2171, type: !17)
!2902 = !DILocation(line: 2171, column: 20, scope: !2871)
!2903 = !DILocalVariable(name: "curLvl", scope: !2871, file: !3, line: 2172, type: !17)
!2904 = !DILocation(line: 2172, column: 6, scope: !2871)
!2905 = !DILocalVariable(name: "nextLvl", scope: !2871, file: !3, line: 2172, type: !17)
!2906 = !DILocation(line: 2172, column: 14, scope: !2871)
!2907 = !DILocalVariable(name: "q", scope: !2871, file: !3, line: 2173, type: !15)
!2908 = !DILocation(line: 2173, column: 8, scope: !2871)
!2909 = !DILocation(line: 2173, column: 12, scope: !2871)
!2910 = !DILocation(line: 2173, column: 16, scope: !2871)
!2911 = !DILocalVariable(name: "r", scope: !2871, file: !3, line: 2173, type: !15)
!2912 = !DILocation(line: 2173, column: 20, scope: !2871)
!2913 = !DILocation(line: 2173, column: 24, scope: !2871)
!2914 = !DILocation(line: 2173, column: 28, scope: !2871)
!2915 = !DILocation(line: 2175, column: 14, scope: !2871)
!2916 = !DILocation(line: 2175, column: 47, scope: !2871)
!2917 = !DILocation(line: 2175, column: 51, scope: !2871)
!2918 = !DILocation(line: 2175, column: 57, scope: !2871)
!2919 = !DILocation(line: 2175, column: 45, scope: !2871)
!2920 = !DILocation(line: 2175, column: 12, scope: !2871)
!2921 = !DILocation(line: 2176, column: 14, scope: !2871)
!2922 = !DILocation(line: 2176, column: 47, scope: !2871)
!2923 = !DILocation(line: 2176, column: 51, scope: !2871)
!2924 = !DILocation(line: 2176, column: 57, scope: !2871)
!2925 = !DILocation(line: 2176, column: 45, scope: !2871)
!2926 = !DILocation(line: 2176, column: 12, scope: !2871)
!2927 = !DILocation(line: 2177, column: 14, scope: !2871)
!2928 = !DILocation(line: 2177, column: 47, scope: !2871)
!2929 = !DILocation(line: 2177, column: 51, scope: !2871)
!2930 = !DILocation(line: 2177, column: 57, scope: !2871)
!2931 = !DILocation(line: 2177, column: 45, scope: !2871)
!2932 = !DILocation(line: 2177, column: 12, scope: !2871)
!2933 = !DILocation(line: 2178, column: 45, scope: !2871)
!2934 = !DILocation(line: 2178, column: 30, scope: !2871)
!2935 = !DILocation(line: 2178, column: 15, scope: !2871)
!2936 = !DILocation(line: 2179, column: 9, scope: !2937)
!2937 = distinct !DILexicalBlock(scope: !2871, file: !3, line: 2179, column: 2)
!2938 = !DILocation(line: 2179, column: 7, scope: !2937)
!2939 = !DILocation(line: 2179, column: 14, scope: !2940)
!2940 = distinct !DILexicalBlock(scope: !2937, file: !3, line: 2179, column: 2)
!2941 = !DILocation(line: 2179, column: 18, scope: !2940)
!2942 = !DILocation(line: 2179, column: 22, scope: !2940)
!2943 = !DILocation(line: 2179, column: 28, scope: !2940)
!2944 = !DILocation(line: 2179, column: 16, scope: !2940)
!2945 = !DILocation(line: 2179, column: 2, scope: !2937)
!2946 = !DILocalVariable(name: "v", scope: !2947, file: !3, line: 2180, type: !70)
!2947 = distinct !DILexicalBlock(scope: !2940, file: !3, line: 2179, column: 42)
!2948 = !DILocation(line: 2180, column: 12, scope: !2947)
!2949 = !DILocation(line: 2180, column: 28, scope: !2947)
!2950 = !DILocation(line: 2180, column: 32, scope: !2947)
!2951 = !DILocation(line: 2180, column: 38, scope: !2947)
!2952 = !DILocation(line: 2180, column: 46, scope: !2947)
!2953 = !DILocation(line: 2180, column: 16, scope: !2947)
!2954 = !DILocation(line: 2181, column: 3, scope: !2947)
!2955 = !DILocation(line: 2181, column: 10, scope: !2956)
!2956 = distinct !DILexicalBlock(scope: !2957, file: !3, line: 2181, column: 3)
!2957 = distinct !DILexicalBlock(scope: !2947, file: !3, line: 2181, column: 3)
!2958 = !DILocation(line: 2181, column: 3, scope: !2957)
!2959 = !DILocation(line: 2182, column: 8, scope: !2960)
!2960 = distinct !DILexicalBlock(scope: !2961, file: !3, line: 2182, column: 8)
!2961 = distinct !DILexicalBlock(scope: !2956, file: !3, line: 2181, column: 26)
!2962 = !DILocation(line: 2182, column: 11, scope: !2960)
!2963 = !DILocation(line: 2182, column: 17, scope: !2960)
!2964 = !DILocation(line: 2182, column: 8, scope: !2961)
!2965 = !DILocation(line: 2183, column: 33, scope: !2966)
!2966 = distinct !DILexicalBlock(scope: !2960, file: !3, line: 2182, column: 35)
!2967 = !DILocation(line: 2183, column: 5, scope: !2966)
!2968 = !DILocation(line: 2183, column: 27, scope: !2966)
!2969 = !DILocation(line: 2183, column: 31, scope: !2966)
!2970 = !DILocation(line: 2185, column: 12, scope: !2971)
!2971 = distinct !DILexicalBlock(scope: !2966, file: !3, line: 2185, column: 5)
!2972 = !DILocation(line: 2185, column: 10, scope: !2971)
!2973 = !DILocation(line: 2185, column: 17, scope: !2974)
!2974 = distinct !DILexicalBlock(scope: !2971, file: !3, line: 2185, column: 5)
!2975 = !DILocation(line: 2185, column: 21, scope: !2974)
!2976 = !DILocation(line: 2185, column: 24, scope: !2974)
!2977 = !DILocation(line: 2185, column: 19, scope: !2974)
!2978 = !DILocation(line: 2185, column: 5, scope: !2971)
!2979 = !DILocalVariable(name: "e", scope: !2980, file: !3, line: 2186, type: !84)
!2980 = distinct !DILexicalBlock(scope: !2974, file: !3, line: 2185, column: 39)
!2981 = !DILocation(line: 2186, column: 15, scope: !2980)
!2982 = !DILocation(line: 2186, column: 19, scope: !2980)
!2983 = !DILocation(line: 2186, column: 22, scope: !2980)
!2984 = !DILocation(line: 2186, column: 28, scope: !2980)
!2985 = !DILocation(line: 2187, column: 12, scope: !2986)
!2986 = distinct !DILexicalBlock(scope: !2980, file: !3, line: 2187, column: 10)
!2987 = !DILocation(line: 2187, column: 15, scope: !2986)
!2988 = !DILocation(line: 2187, column: 21, scope: !2986)
!2989 = !DILocation(line: 2187, column: 10, scope: !2980)
!2990 = !DILocation(line: 2188, column: 35, scope: !2991)
!2991 = distinct !DILexicalBlock(scope: !2986, file: !3, line: 2187, column: 40)
!2992 = !DILocation(line: 2188, column: 7, scope: !2991)
!2993 = !DILocation(line: 2188, column: 29, scope: !2991)
!2994 = !DILocation(line: 2188, column: 33, scope: !2991)
!2995 = !DILocation(line: 2189, column: 7, scope: !2991)
!2996 = !DILocation(line: 2189, column: 10, scope: !2991)
!2997 = !DILocation(line: 2189, column: 16, scope: !2991)
!2998 = !DILocation(line: 2190, column: 6, scope: !2991)
!2999 = !DILocation(line: 2191, column: 5, scope: !2980)
!3000 = !DILocation(line: 2185, column: 35, scope: !2974)
!3001 = !DILocation(line: 2185, column: 5, scope: !2974)
!3002 = distinct !{!3002, !2978, !3003}
!3003 = !DILocation(line: 2191, column: 5, scope: !2971)
!3004 = !DILocation(line: 2193, column: 12, scope: !3005)
!3005 = distinct !DILexicalBlock(scope: !2966, file: !3, line: 2193, column: 5)
!3006 = !DILocation(line: 2193, column: 10, scope: !3005)
!3007 = !DILocation(line: 2193, column: 17, scope: !3008)
!3008 = distinct !DILexicalBlock(scope: !3005, file: !3, line: 2193, column: 5)
!3009 = !DILocation(line: 2193, column: 21, scope: !3008)
!3010 = !DILocation(line: 2193, column: 24, scope: !3008)
!3011 = !DILocation(line: 2193, column: 19, scope: !3008)
!3012 = !DILocation(line: 2193, column: 5, scope: !3005)
!3013 = !DILocalVariable(name: "f", scope: !3014, file: !3, line: 2194, type: !97)
!3014 = distinct !DILexicalBlock(scope: !3008, file: !3, line: 2193, column: 39)
!3015 = !DILocation(line: 2194, column: 15, scope: !3014)
!3016 = !DILocation(line: 2194, column: 19, scope: !3014)
!3017 = !DILocation(line: 2194, column: 22, scope: !3014)
!3018 = !DILocation(line: 2194, column: 28, scope: !3014)
!3019 = !DILocation(line: 2195, column: 12, scope: !3020)
!3020 = distinct !DILexicalBlock(scope: !3014, file: !3, line: 2195, column: 10)
!3021 = !DILocation(line: 2195, column: 15, scope: !3020)
!3022 = !DILocation(line: 2195, column: 21, scope: !3020)
!3023 = !DILocation(line: 2195, column: 10, scope: !3014)
!3024 = !DILocation(line: 2196, column: 35, scope: !3025)
!3025 = distinct !DILexicalBlock(scope: !3020, file: !3, line: 2195, column: 40)
!3026 = !DILocation(line: 2196, column: 7, scope: !3025)
!3027 = !DILocation(line: 2196, column: 29, scope: !3025)
!3028 = !DILocation(line: 2196, column: 33, scope: !3025)
!3029 = !DILocation(line: 2197, column: 7, scope: !3025)
!3030 = !DILocation(line: 2197, column: 10, scope: !3025)
!3031 = !DILocation(line: 2197, column: 16, scope: !3025)
!3032 = !DILocation(line: 2198, column: 6, scope: !3025)
!3033 = !DILocation(line: 2199, column: 5, scope: !3014)
!3034 = !DILocation(line: 2193, column: 35, scope: !3008)
!3035 = !DILocation(line: 2193, column: 5, scope: !3008)
!3036 = distinct !{!3036, !3012, !3037}
!3037 = !DILocation(line: 2199, column: 5, scope: !3005)
!3038 = !DILocation(line: 2200, column: 4, scope: !2966)
!3039 = !DILocation(line: 2201, column: 3, scope: !2961)
!3040 = !DILocation(line: 2181, column: 17, scope: !2956)
!3041 = !DILocation(line: 2181, column: 20, scope: !2956)
!3042 = !DILocation(line: 2181, column: 15, scope: !2956)
!3043 = !DILocation(line: 2181, column: 3, scope: !2956)
!3044 = distinct !{!3044, !2958, !3045}
!3045 = !DILocation(line: 2201, column: 3, scope: !2957)
!3046 = !DILocation(line: 2202, column: 2, scope: !2947)
!3047 = !DILocation(line: 2179, column: 38, scope: !2940)
!3048 = !DILocation(line: 2179, column: 2, scope: !2940)
!3049 = distinct !{!3049, !2945, !3050}
!3050 = !DILocation(line: 2202, column: 2, scope: !2937)
!3051 = !DILocation(line: 2204, column: 9, scope: !2871)
!3052 = !DILocation(line: 2205, column: 12, scope: !2871)
!3053 = !DILocation(line: 2205, column: 19, scope: !2871)
!3054 = !DILocation(line: 2205, column: 10, scope: !2871)
!3055 = !DILocation(line: 2207, column: 14, scope: !3056)
!3056 = distinct !DILexicalBlock(scope: !2871, file: !3, line: 2207, column: 2)
!3057 = !DILocation(line: 2207, column: 7, scope: !3056)
!3058 = !DILocation(line: 2207, column: 19, scope: !3059)
!3059 = distinct !DILexicalBlock(scope: !3056, file: !3, line: 2207, column: 2)
!3060 = !DILocation(line: 2207, column: 28, scope: !3059)
!3061 = !DILocation(line: 2207, column: 26, scope: !3059)
!3062 = !DILocation(line: 2207, column: 2, scope: !3056)
!3063 = !DILocalVariable(name: "f", scope: !3064, file: !3, line: 2208, type: !97)
!3064 = distinct !DILexicalBlock(scope: !3059, file: !3, line: 2207, column: 52)
!3065 = !DILocation(line: 2208, column: 12, scope: !3064)
!3066 = !DILocation(line: 2208, column: 16, scope: !3064)
!3067 = !DILocation(line: 2208, column: 26, scope: !3064)
!3068 = !DILocalVariable(name: "co", scope: !3064, file: !3, line: 2209, type: !15)
!3069 = !DILocation(line: 2209, column: 9, scope: !3064)
!3070 = !DILocation(line: 2209, column: 33, scope: !3064)
!3071 = !DILocation(line: 2209, column: 14, scope: !3064)
!3072 = !DILocation(line: 2210, column: 16, scope: !3064)
!3073 = !DILocation(line: 2210, column: 20, scope: !3064)
!3074 = !DILocation(line: 2210, column: 3, scope: !3064)
!3075 = !DILocation(line: 2211, column: 10, scope: !3076)
!3076 = distinct !DILexicalBlock(scope: !3064, file: !3, line: 2211, column: 3)
!3077 = !DILocation(line: 2211, column: 8, scope: !3076)
!3078 = !DILocation(line: 2211, column: 15, scope: !3079)
!3079 = distinct !DILexicalBlock(scope: !3076, file: !3, line: 2211, column: 3)
!3080 = !DILocation(line: 2211, column: 19, scope: !3079)
!3081 = !DILocation(line: 2211, column: 22, scope: !3079)
!3082 = !DILocation(line: 2211, column: 17, scope: !3079)
!3083 = !DILocation(line: 2211, column: 3, scope: !3076)
!3084 = !DILocation(line: 2212, column: 16, scope: !3085)
!3085 = distinct !DILexicalBlock(scope: !3079, file: !3, line: 2211, column: 37)
!3086 = !DILocation(line: 2212, column: 20, scope: !3085)
!3087 = !DILocation(line: 2212, column: 61, scope: !3085)
!3088 = !DILocation(line: 2212, column: 4, scope: !3085)
!3089 = !DILocation(line: 2213, column: 3, scope: !3085)
!3090 = !DILocation(line: 2211, column: 33, scope: !3079)
!3091 = !DILocation(line: 2211, column: 3, scope: !3079)
!3092 = distinct !{!3092, !3083, !3093}
!3093 = !DILocation(line: 2213, column: 3, scope: !3076)
!3094 = !DILocation(line: 2214, column: 16, scope: !3064)
!3095 = !DILocation(line: 2214, column: 27, scope: !3064)
!3096 = !DILocation(line: 2214, column: 30, scope: !3064)
!3097 = !DILocation(line: 2214, column: 25, scope: !3064)
!3098 = !DILocation(line: 2214, column: 40, scope: !3064)
!3099 = !DILocation(line: 2214, column: 3, scope: !3064)
!3100 = !DILocation(line: 2216, column: 3, scope: !3064)
!3101 = !DILocation(line: 2216, column: 6, scope: !3064)
!3102 = !DILocation(line: 2216, column: 12, scope: !3064)
!3103 = !DILocation(line: 2217, column: 2, scope: !3064)
!3104 = !DILocation(line: 2207, column: 48, scope: !3059)
!3105 = !DILocation(line: 2207, column: 2, scope: !3059)
!3106 = distinct !{!3106, !3062, !3107}
!3107 = !DILocation(line: 2217, column: 2, scope: !3056)
!3108 = !DILocation(line: 2218, column: 14, scope: !3109)
!3109 = distinct !DILexicalBlock(scope: !2871, file: !3, line: 2218, column: 2)
!3110 = !DILocation(line: 2218, column: 7, scope: !3109)
!3111 = !DILocation(line: 2218, column: 19, scope: !3112)
!3112 = distinct !DILexicalBlock(scope: !3109, file: !3, line: 2218, column: 2)
!3113 = !DILocation(line: 2218, column: 28, scope: !3112)
!3114 = !DILocation(line: 2218, column: 26, scope: !3112)
!3115 = !DILocation(line: 2218, column: 2, scope: !3109)
!3116 = !DILocalVariable(name: "e", scope: !3117, file: !3, line: 2219, type: !84)
!3117 = distinct !DILexicalBlock(scope: !3112, file: !3, line: 2218, column: 52)
!3118 = !DILocation(line: 2219, column: 12, scope: !3117)
!3119 = !DILocation(line: 2219, column: 16, scope: !3117)
!3120 = !DILocation(line: 2219, column: 26, scope: !3117)
!3121 = !DILocalVariable(name: "co", scope: !3117, file: !3, line: 2220, type: !15)
!3122 = !DILocation(line: 2220, column: 9, scope: !3117)
!3123 = !DILocation(line: 2220, column: 14, scope: !3117)
!3124 = !DILocalVariable(name: "sharpness", scope: !3117, file: !3, line: 2221, type: !69)
!3125 = !DILocation(line: 2221, column: 9, scope: !3117)
!3126 = !DILocation(line: 2221, column: 39, scope: !3117)
!3127 = !DILocation(line: 2221, column: 42, scope: !3117)
!3128 = !DILocation(line: 2221, column: 21, scope: !3117)
!3129 = !DILocation(line: 2223, column: 24, scope: !3130)
!3130 = distinct !DILexicalBlock(scope: !3117, file: !3, line: 2223, column: 7)
!3131 = !DILocation(line: 2223, column: 7, scope: !3130)
!3132 = !DILocation(line: 2223, column: 27, scope: !3130)
!3133 = !DILocation(line: 2223, column: 30, scope: !3130)
!3134 = !DILocation(line: 2223, column: 40, scope: !3130)
!3135 = !DILocation(line: 2223, column: 7, scope: !3117)
!3136 = !DILocation(line: 2224, column: 17, scope: !3137)
!3137 = distinct !DILexicalBlock(scope: !3130, file: !3, line: 2223, column: 49)
!3138 = !DILocation(line: 2224, column: 21, scope: !3137)
!3139 = !DILocation(line: 2224, column: 48, scope: !3137)
!3140 = !DILocation(line: 2224, column: 4, scope: !3137)
!3141 = !DILocation(line: 2225, column: 16, scope: !3137)
!3142 = !DILocation(line: 2225, column: 20, scope: !3137)
!3143 = !DILocation(line: 2225, column: 47, scope: !3137)
!3144 = !DILocation(line: 2225, column: 4, scope: !3137)
!3145 = !DILocation(line: 2226, column: 17, scope: !3137)
!3146 = !DILocation(line: 2226, column: 27, scope: !3137)
!3147 = !DILocation(line: 2226, column: 4, scope: !3137)
!3148 = !DILocation(line: 2227, column: 3, scope: !3137)
!3149 = !DILocalVariable(name: "numFaces", scope: !3150, file: !3, line: 2229, type: !17)
!3150 = distinct !DILexicalBlock(scope: !3130, file: !3, line: 2228, column: 8)
!3151 = !DILocation(line: 2229, column: 8, scope: !3150)
!3152 = !DILocation(line: 2230, column: 17, scope: !3150)
!3153 = !DILocation(line: 2230, column: 20, scope: !3150)
!3154 = !DILocation(line: 2230, column: 47, scope: !3150)
!3155 = !DILocation(line: 2230, column: 4, scope: !3150)
!3156 = !DILocation(line: 2231, column: 16, scope: !3150)
!3157 = !DILocation(line: 2231, column: 19, scope: !3150)
!3158 = !DILocation(line: 2231, column: 46, scope: !3150)
!3159 = !DILocation(line: 2231, column: 4, scope: !3150)
!3160 = !DILocation(line: 2232, column: 11, scope: !3161)
!3161 = distinct !DILexicalBlock(scope: !3150, file: !3, line: 2232, column: 4)
!3162 = !DILocation(line: 2232, column: 9, scope: !3161)
!3163 = !DILocation(line: 2232, column: 16, scope: !3164)
!3164 = distinct !DILexicalBlock(scope: !3161, file: !3, line: 2232, column: 4)
!3165 = !DILocation(line: 2232, column: 20, scope: !3164)
!3166 = !DILocation(line: 2232, column: 23, scope: !3164)
!3167 = !DILocation(line: 2232, column: 18, scope: !3164)
!3168 = !DILocation(line: 2232, column: 4, scope: !3161)
!3169 = !DILocalVariable(name: "f", scope: !3170, file: !3, line: 2233, type: !97)
!3170 = distinct !DILexicalBlock(scope: !3164, file: !3, line: 2232, column: 38)
!3171 = !DILocation(line: 2233, column: 14, scope: !3170)
!3172 = !DILocation(line: 2233, column: 18, scope: !3170)
!3173 = !DILocation(line: 2233, column: 21, scope: !3170)
!3174 = !DILocation(line: 2233, column: 27, scope: !3170)
!3175 = !DILocation(line: 2234, column: 17, scope: !3170)
!3176 = !DILocation(line: 2234, column: 48, scope: !3170)
!3177 = !DILocation(line: 2234, column: 29, scope: !3170)
!3178 = !DILocation(line: 2234, column: 20, scope: !3170)
!3179 = !DILocation(line: 2234, column: 52, scope: !3170)
!3180 = !DILocation(line: 2234, column: 5, scope: !3170)
!3181 = !DILocation(line: 2235, column: 13, scope: !3170)
!3182 = !DILocation(line: 2236, column: 4, scope: !3170)
!3183 = !DILocation(line: 2232, column: 34, scope: !3164)
!3184 = !DILocation(line: 2232, column: 4, scope: !3164)
!3185 = distinct !{!3185, !3168, !3186}
!3186 = !DILocation(line: 2236, column: 4, scope: !3161)
!3187 = !DILocation(line: 2237, column: 17, scope: !3150)
!3188 = !DILocation(line: 2237, column: 35, scope: !3150)
!3189 = !DILocation(line: 2237, column: 33, scope: !3150)
!3190 = !DILocation(line: 2237, column: 25, scope: !3150)
!3191 = !DILocation(line: 2237, column: 46, scope: !3150)
!3192 = !DILocation(line: 2237, column: 4, scope: !3150)
!3193 = !DILocation(line: 2239, column: 17, scope: !3150)
!3194 = !DILocation(line: 2239, column: 20, scope: !3150)
!3195 = !DILocation(line: 2239, column: 47, scope: !3150)
!3196 = !DILocation(line: 2239, column: 4, scope: !3150)
!3197 = !DILocation(line: 2240, column: 16, scope: !3150)
!3198 = !DILocation(line: 2240, column: 19, scope: !3150)
!3199 = !DILocation(line: 2240, column: 46, scope: !3150)
!3200 = !DILocation(line: 2240, column: 4, scope: !3150)
!3201 = !DILocation(line: 2241, column: 17, scope: !3150)
!3202 = !DILocation(line: 2241, column: 26, scope: !3150)
!3203 = !DILocation(line: 2241, column: 4, scope: !3150)
!3204 = !DILocation(line: 2243, column: 17, scope: !3150)
!3205 = !DILocation(line: 2243, column: 21, scope: !3150)
!3206 = !DILocation(line: 2243, column: 24, scope: !3150)
!3207 = !DILocation(line: 2243, column: 4, scope: !3150)
!3208 = !DILocation(line: 2244, column: 16, scope: !3150)
!3209 = !DILocation(line: 2244, column: 19, scope: !3150)
!3210 = !DILocation(line: 2244, column: 22, scope: !3150)
!3211 = !DILocation(line: 2244, column: 4, scope: !3150)
!3212 = !DILocation(line: 2245, column: 17, scope: !3150)
!3213 = !DILocation(line: 2245, column: 20, scope: !3150)
!3214 = !DILocation(line: 2245, column: 31, scope: !3150)
!3215 = !DILocation(line: 2245, column: 4, scope: !3150)
!3216 = !DILocation(line: 2246, column: 16, scope: !3150)
!3217 = !DILocation(line: 2246, column: 20, scope: !3150)
!3218 = !DILocation(line: 2246, column: 23, scope: !3150)
!3219 = !DILocation(line: 2246, column: 4, scope: !3150)
!3220 = !DILocation(line: 2250, column: 2, scope: !3117)
!3221 = !DILocation(line: 2218, column: 48, scope: !3112)
!3222 = !DILocation(line: 2218, column: 2, scope: !3112)
!3223 = distinct !{!3223, !3115, !3224}
!3224 = !DILocation(line: 2250, column: 2, scope: !3109)
!3225 = !DILocation(line: 2251, column: 14, scope: !3226)
!3226 = distinct !DILexicalBlock(scope: !2871, file: !3, line: 2251, column: 2)
!3227 = !DILocation(line: 2251, column: 7, scope: !3226)
!3228 = !DILocation(line: 2251, column: 19, scope: !3229)
!3229 = distinct !DILexicalBlock(scope: !3226, file: !3, line: 2251, column: 2)
!3230 = !DILocation(line: 2251, column: 28, scope: !3229)
!3231 = !DILocation(line: 2251, column: 26, scope: !3229)
!3232 = !DILocation(line: 2251, column: 2, scope: !3226)
!3233 = !DILocalVariable(name: "v", scope: !3234, file: !3, line: 2252, type: !70)
!3234 = distinct !DILexicalBlock(scope: !3229, file: !3, line: 2251, column: 52)
!3235 = !DILocation(line: 2252, column: 12, scope: !3234)
!3236 = !DILocation(line: 2252, column: 16, scope: !3234)
!3237 = !DILocation(line: 2252, column: 26, scope: !3234)
!3238 = !DILocalVariable(name: "co", scope: !3234, file: !3, line: 2253, type: !15)
!3239 = !DILocation(line: 2253, column: 9, scope: !3234)
!3240 = !DILocation(line: 2253, column: 14, scope: !3234)
!3241 = !DILocalVariable(name: "nCo", scope: !3234, file: !3, line: 2254, type: !15)
!3242 = !DILocation(line: 2254, column: 9, scope: !3234)
!3243 = !DILocation(line: 2254, column: 15, scope: !3234)
!3244 = !DILocalVariable(name: "sharpCount", scope: !3234, file: !3, line: 2255, type: !17)
!3245 = !DILocation(line: 2255, column: 7, scope: !3234)
!3246 = !DILocalVariable(name: "allSharp", scope: !3234, file: !3, line: 2255, type: !17)
!3247 = !DILocation(line: 2255, column: 23, scope: !3234)
!3248 = !DILocalVariable(name: "avgSharpness", scope: !3234, file: !3, line: 2256, type: !69)
!3249 = !DILocation(line: 2256, column: 9, scope: !3234)
!3250 = !DILocalVariable(name: "seam", scope: !3234, file: !3, line: 2257, type: !17)
!3251 = !DILocation(line: 2257, column: 7, scope: !3234)
!3252 = !DILocation(line: 2257, column: 24, scope: !3234)
!3253 = !DILocation(line: 2257, column: 14, scope: !3234)
!3254 = !DILocalVariable(name: "seamEdges", scope: !3234, file: !3, line: 2257, type: !17)
!3255 = !DILocation(line: 2257, column: 28, scope: !3234)
!3256 = !DILocation(line: 2259, column: 10, scope: !3257)
!3257 = distinct !DILexicalBlock(scope: !3234, file: !3, line: 2259, column: 3)
!3258 = !DILocation(line: 2259, column: 8, scope: !3257)
!3259 = !DILocation(line: 2259, column: 15, scope: !3260)
!3260 = distinct !DILexicalBlock(scope: !3257, file: !3, line: 2259, column: 3)
!3261 = !DILocation(line: 2259, column: 19, scope: !3260)
!3262 = !DILocation(line: 2259, column: 22, scope: !3260)
!3263 = !DILocation(line: 2259, column: 17, scope: !3260)
!3264 = !DILocation(line: 2259, column: 3, scope: !3257)
!3265 = !DILocalVariable(name: "e", scope: !3266, file: !3, line: 2260, type: !84)
!3266 = distinct !DILexicalBlock(scope: !3260, file: !3, line: 2259, column: 37)
!3267 = !DILocation(line: 2260, column: 13, scope: !3266)
!3268 = !DILocation(line: 2260, column: 17, scope: !3266)
!3269 = !DILocation(line: 2260, column: 20, scope: !3266)
!3270 = !DILocation(line: 2260, column: 26, scope: !3266)
!3271 = !DILocalVariable(name: "sharpness", scope: !3266, file: !3, line: 2261, type: !69)
!3272 = !DILocation(line: 2261, column: 10, scope: !3266)
!3273 = !DILocation(line: 2261, column: 40, scope: !3266)
!3274 = !DILocation(line: 2261, column: 43, scope: !3266)
!3275 = !DILocation(line: 2261, column: 22, scope: !3266)
!3276 = !DILocation(line: 2263, column: 8, scope: !3277)
!3277 = distinct !DILexicalBlock(scope: !3266, file: !3, line: 2263, column: 8)
!3278 = !DILocation(line: 2263, column: 13, scope: !3277)
!3279 = !DILocation(line: 2263, column: 33, scope: !3277)
!3280 = !DILocation(line: 2263, column: 16, scope: !3277)
!3281 = !DILocation(line: 2263, column: 8, scope: !3266)
!3282 = !DILocation(line: 2264, column: 14, scope: !3277)
!3283 = !DILocation(line: 2264, column: 5, scope: !3277)
!3284 = !DILocation(line: 2266, column: 8, scope: !3285)
!3285 = distinct !DILexicalBlock(scope: !3266, file: !3, line: 2266, column: 8)
!3286 = !DILocation(line: 2266, column: 18, scope: !3285)
!3287 = !DILocation(line: 2266, column: 8, scope: !3266)
!3288 = !DILocation(line: 2267, column: 15, scope: !3289)
!3289 = distinct !DILexicalBlock(scope: !3285, file: !3, line: 2266, column: 27)
!3290 = !DILocation(line: 2268, column: 21, scope: !3289)
!3291 = !DILocation(line: 2268, column: 18, scope: !3289)
!3292 = !DILocation(line: 2269, column: 4, scope: !3289)
!3293 = !DILocation(line: 2271, column: 14, scope: !3294)
!3294 = distinct !DILexicalBlock(scope: !3285, file: !3, line: 2270, column: 9)
!3295 = !DILocation(line: 2273, column: 3, scope: !3266)
!3296 = !DILocation(line: 2259, column: 33, scope: !3260)
!3297 = !DILocation(line: 2259, column: 3, scope: !3260)
!3298 = distinct !{!3298, !3264, !3299}
!3299 = !DILocation(line: 2273, column: 3, scope: !3257)
!3300 = !DILocation(line: 2275, column: 7, scope: !3301)
!3301 = distinct !DILexicalBlock(scope: !3234, file: !3, line: 2275, column: 7)
!3302 = !DILocation(line: 2275, column: 7, scope: !3234)
!3303 = !DILocation(line: 2276, column: 20, scope: !3304)
!3304 = distinct !DILexicalBlock(scope: !3301, file: !3, line: 2275, column: 19)
!3305 = !DILocation(line: 2276, column: 17, scope: !3304)
!3306 = !DILocation(line: 2277, column: 8, scope: !3307)
!3307 = distinct !DILexicalBlock(scope: !3304, file: !3, line: 2277, column: 8)
!3308 = !DILocation(line: 2277, column: 21, scope: !3307)
!3309 = !DILocation(line: 2277, column: 8, scope: !3304)
!3310 = !DILocation(line: 2278, column: 18, scope: !3311)
!3311 = distinct !DILexicalBlock(scope: !3307, file: !3, line: 2277, column: 29)
!3312 = !DILocation(line: 2279, column: 4, scope: !3311)
!3313 = !DILocation(line: 2280, column: 3, scope: !3304)
!3314 = !DILocation(line: 2282, column: 7, scope: !3315)
!3315 = distinct !DILexicalBlock(scope: !3234, file: !3, line: 2282, column: 7)
!3316 = !DILocation(line: 2282, column: 17, scope: !3315)
!3317 = !DILocation(line: 2282, column: 21, scope: !3315)
!3318 = !DILocation(line: 2282, column: 24, scope: !3315)
!3319 = !DILocation(line: 2282, column: 37, scope: !3315)
!3320 = !DILocation(line: 2282, column: 40, scope: !3315)
!3321 = !DILocation(line: 2282, column: 34, scope: !3315)
!3322 = !DILocation(line: 2282, column: 7, scope: !3234)
!3323 = !DILocation(line: 2283, column: 9, scope: !3315)
!3324 = !DILocation(line: 2283, column: 4, scope: !3315)
!3325 = !DILocation(line: 2285, column: 8, scope: !3326)
!3326 = distinct !DILexicalBlock(scope: !3234, file: !3, line: 2285, column: 7)
!3327 = !DILocation(line: 2285, column: 11, scope: !3326)
!3328 = !DILocation(line: 2285, column: 20, scope: !3326)
!3329 = !DILocation(line: 2285, column: 23, scope: !3326)
!3330 = !DILocation(line: 2285, column: 27, scope: !3326)
!3331 = !DILocation(line: 2285, column: 35, scope: !3326)
!3332 = !DILocation(line: 2285, column: 7, scope: !3234)
!3333 = !DILocation(line: 2286, column: 17, scope: !3334)
!3334 = distinct !DILexicalBlock(scope: !3326, file: !3, line: 2285, column: 49)
!3335 = !DILocation(line: 2286, column: 22, scope: !3334)
!3336 = !DILocation(line: 2286, column: 26, scope: !3334)
!3337 = !DILocation(line: 2286, column: 4, scope: !3334)
!3338 = !DILocation(line: 2287, column: 3, scope: !3334)
!3339 = !DILocation(line: 2288, column: 29, scope: !3340)
!3340 = distinct !DILexicalBlock(scope: !3326, file: !3, line: 2288, column: 12)
!3341 = !DILocation(line: 2288, column: 12, scope: !3340)
!3342 = !DILocation(line: 2288, column: 12, scope: !3326)
!3343 = !DILocalVariable(name: "numBoundary", scope: !3344, file: !3, line: 2289, type: !17)
!3344 = distinct !DILexicalBlock(scope: !3340, file: !3, line: 2288, column: 33)
!3345 = !DILocation(line: 2289, column: 8, scope: !3344)
!3346 = !DILocation(line: 2291, column: 17, scope: !3344)
!3347 = !DILocation(line: 2291, column: 20, scope: !3344)
!3348 = !DILocation(line: 2291, column: 4, scope: !3344)
!3349 = !DILocation(line: 2292, column: 11, scope: !3350)
!3350 = distinct !DILexicalBlock(scope: !3344, file: !3, line: 2292, column: 4)
!3351 = !DILocation(line: 2292, column: 9, scope: !3350)
!3352 = !DILocation(line: 2292, column: 16, scope: !3353)
!3353 = distinct !DILexicalBlock(scope: !3350, file: !3, line: 2292, column: 4)
!3354 = !DILocation(line: 2292, column: 20, scope: !3353)
!3355 = !DILocation(line: 2292, column: 23, scope: !3353)
!3356 = !DILocation(line: 2292, column: 18, scope: !3353)
!3357 = !DILocation(line: 2292, column: 4, scope: !3350)
!3358 = !DILocalVariable(name: "e", scope: !3359, file: !3, line: 2293, type: !84)
!3359 = distinct !DILexicalBlock(scope: !3353, file: !3, line: 2292, column: 38)
!3360 = !DILocation(line: 2293, column: 14, scope: !3359)
!3361 = !DILocation(line: 2293, column: 18, scope: !3359)
!3362 = !DILocation(line: 2293, column: 21, scope: !3359)
!3363 = !DILocation(line: 2293, column: 27, scope: !3359)
!3364 = !DILocation(line: 2294, column: 26, scope: !3365)
!3365 = distinct !DILexicalBlock(scope: !3359, file: !3, line: 2294, column: 9)
!3366 = !DILocation(line: 2294, column: 9, scope: !3365)
!3367 = !DILocation(line: 2294, column: 9, scope: !3359)
!3368 = !DILocation(line: 2295, column: 18, scope: !3369)
!3369 = distinct !DILexicalBlock(scope: !3365, file: !3, line: 2294, column: 30)
!3370 = !DILocation(line: 2295, column: 21, scope: !3369)
!3371 = !DILocation(line: 2295, column: 67, scope: !3369)
!3372 = !DILocation(line: 2295, column: 6, scope: !3369)
!3373 = !DILocation(line: 2296, column: 17, scope: !3369)
!3374 = !DILocation(line: 2297, column: 5, scope: !3369)
!3375 = !DILocation(line: 2298, column: 4, scope: !3359)
!3376 = !DILocation(line: 2292, column: 34, scope: !3353)
!3377 = !DILocation(line: 2292, column: 4, scope: !3353)
!3378 = distinct !{!3378, !3357, !3379}
!3379 = !DILocation(line: 2298, column: 4, scope: !3350)
!3380 = !DILocation(line: 2299, column: 17, scope: !3344)
!3381 = !DILocation(line: 2299, column: 22, scope: !3344)
!3382 = !DILocation(line: 2299, column: 26, scope: !3344)
!3383 = !DILocation(line: 2299, column: 4, scope: !3344)
!3384 = !DILocation(line: 2300, column: 17, scope: !3344)
!3385 = !DILocation(line: 2300, column: 29, scope: !3344)
!3386 = !DILocation(line: 2300, column: 4, scope: !3344)
!3387 = !DILocation(line: 2301, column: 17, scope: !3344)
!3388 = !DILocation(line: 2301, column: 28, scope: !3344)
!3389 = !DILocation(line: 2301, column: 26, scope: !3344)
!3390 = !DILocation(line: 2301, column: 41, scope: !3344)
!3391 = !DILocation(line: 2301, column: 4, scope: !3344)
!3392 = !DILocation(line: 2302, column: 16, scope: !3344)
!3393 = !DILocation(line: 2302, column: 21, scope: !3344)
!3394 = !DILocation(line: 2302, column: 24, scope: !3344)
!3395 = !DILocation(line: 2302, column: 4, scope: !3344)
!3396 = !DILocation(line: 2303, column: 3, scope: !3344)
!3397 = !DILocalVariable(name: "numEdges", scope: !3398, file: !3, line: 2305, type: !17)
!3398 = distinct !DILexicalBlock(scope: !3340, file: !3, line: 2304, column: 8)
!3399 = !DILocation(line: 2305, column: 8, scope: !3398)
!3400 = !DILocalVariable(name: "numFaces", scope: !3398, file: !3, line: 2305, type: !17)
!3401 = !DILocation(line: 2305, column: 22, scope: !3398)
!3402 = !DILocation(line: 2307, column: 17, scope: !3398)
!3403 = !DILocation(line: 2307, column: 20, scope: !3398)
!3404 = !DILocation(line: 2307, column: 4, scope: !3398)
!3405 = !DILocation(line: 2308, column: 11, scope: !3406)
!3406 = distinct !DILexicalBlock(scope: !3398, file: !3, line: 2308, column: 4)
!3407 = !DILocation(line: 2308, column: 9, scope: !3406)
!3408 = !DILocation(line: 2308, column: 16, scope: !3409)
!3409 = distinct !DILexicalBlock(scope: !3406, file: !3, line: 2308, column: 4)
!3410 = !DILocation(line: 2308, column: 20, scope: !3409)
!3411 = !DILocation(line: 2308, column: 23, scope: !3409)
!3412 = !DILocation(line: 2308, column: 18, scope: !3409)
!3413 = !DILocation(line: 2308, column: 4, scope: !3406)
!3414 = !DILocalVariable(name: "f", scope: !3415, file: !3, line: 2309, type: !97)
!3415 = distinct !DILexicalBlock(scope: !3409, file: !3, line: 2308, column: 38)
!3416 = !DILocation(line: 2309, column: 14, scope: !3415)
!3417 = !DILocation(line: 2309, column: 18, scope: !3415)
!3418 = !DILocation(line: 2309, column: 21, scope: !3415)
!3419 = !DILocation(line: 2309, column: 27, scope: !3415)
!3420 = !DILocation(line: 2310, column: 17, scope: !3415)
!3421 = !DILocation(line: 2310, column: 48, scope: !3415)
!3422 = !DILocation(line: 2310, column: 29, scope: !3415)
!3423 = !DILocation(line: 2310, column: 20, scope: !3415)
!3424 = !DILocation(line: 2310, column: 52, scope: !3415)
!3425 = !DILocation(line: 2310, column: 5, scope: !3415)
!3426 = !DILocation(line: 2311, column: 13, scope: !3415)
!3427 = !DILocation(line: 2312, column: 4, scope: !3415)
!3428 = !DILocation(line: 2308, column: 34, scope: !3409)
!3429 = !DILocation(line: 2308, column: 4, scope: !3409)
!3430 = distinct !{!3430, !3413, !3431}
!3431 = !DILocation(line: 2312, column: 4, scope: !3406)
!3432 = !DILocation(line: 2313, column: 17, scope: !3398)
!3433 = !DILocation(line: 2313, column: 27, scope: !3398)
!3434 = !DILocation(line: 2313, column: 25, scope: !3398)
!3435 = !DILocation(line: 2313, column: 37, scope: !3398)
!3436 = !DILocation(line: 2313, column: 4, scope: !3398)
!3437 = !DILocation(line: 2314, column: 17, scope: !3398)
!3438 = !DILocation(line: 2314, column: 20, scope: !3398)
!3439 = !DILocation(line: 2314, column: 4, scope: !3398)
!3440 = !DILocation(line: 2315, column: 11, scope: !3441)
!3441 = distinct !DILexicalBlock(scope: !3398, file: !3, line: 2315, column: 4)
!3442 = !DILocation(line: 2315, column: 9, scope: !3441)
!3443 = !DILocation(line: 2315, column: 16, scope: !3444)
!3444 = distinct !DILexicalBlock(scope: !3441, file: !3, line: 2315, column: 4)
!3445 = !DILocation(line: 2315, column: 20, scope: !3444)
!3446 = !DILocation(line: 2315, column: 23, scope: !3444)
!3447 = !DILocation(line: 2315, column: 18, scope: !3444)
!3448 = !DILocation(line: 2315, column: 4, scope: !3441)
!3449 = !DILocalVariable(name: "e", scope: !3450, file: !3, line: 2316, type: !84)
!3450 = distinct !DILexicalBlock(scope: !3444, file: !3, line: 2315, column: 38)
!3451 = !DILocation(line: 2316, column: 14, scope: !3450)
!3452 = !DILocation(line: 2316, column: 18, scope: !3450)
!3453 = !DILocation(line: 2316, column: 21, scope: !3450)
!3454 = !DILocation(line: 2316, column: 27, scope: !3450)
!3455 = !DILocation(line: 2317, column: 17, scope: !3450)
!3456 = !DILocation(line: 2317, column: 20, scope: !3450)
!3457 = !DILocation(line: 2317, column: 66, scope: !3450)
!3458 = !DILocation(line: 2317, column: 5, scope: !3450)
!3459 = !DILocation(line: 2318, column: 13, scope: !3450)
!3460 = !DILocation(line: 2319, column: 4, scope: !3450)
!3461 = !DILocation(line: 2315, column: 34, scope: !3444)
!3462 = !DILocation(line: 2315, column: 4, scope: !3444)
!3463 = distinct !{!3463, !3448, !3464}
!3464 = !DILocation(line: 2319, column: 4, scope: !3441)
!3465 = !DILocation(line: 2320, column: 17, scope: !3398)
!3466 = !DILocation(line: 2320, column: 27, scope: !3398)
!3467 = !DILocation(line: 2320, column: 25, scope: !3398)
!3468 = !DILocation(line: 2320, column: 37, scope: !3398)
!3469 = !DILocation(line: 2320, column: 4, scope: !3398)
!3470 = !DILocation(line: 2322, column: 17, scope: !3398)
!3471 = !DILocation(line: 2322, column: 22, scope: !3398)
!3472 = !DILocation(line: 2322, column: 26, scope: !3398)
!3473 = !DILocation(line: 2322, column: 4, scope: !3398)
!3474 = !DILocation(line: 2323, column: 17, scope: !3398)
!3475 = !DILocation(line: 2323, column: 22, scope: !3398)
!3476 = !DILocation(line: 2323, column: 31, scope: !3398)
!3477 = !DILocation(line: 2323, column: 39, scope: !3398)
!3478 = !DILocation(line: 2323, column: 4, scope: !3398)
!3479 = !DILocation(line: 2324, column: 16, scope: !3398)
!3480 = !DILocation(line: 2324, column: 21, scope: !3398)
!3481 = !DILocation(line: 2324, column: 24, scope: !3398)
!3482 = !DILocation(line: 2324, column: 4, scope: !3398)
!3483 = !DILocation(line: 2325, column: 16, scope: !3398)
!3484 = !DILocation(line: 2325, column: 21, scope: !3398)
!3485 = !DILocation(line: 2325, column: 24, scope: !3398)
!3486 = !DILocation(line: 2325, column: 4, scope: !3398)
!3487 = !DILocation(line: 2326, column: 17, scope: !3398)
!3488 = !DILocation(line: 2326, column: 29, scope: !3398)
!3489 = !DILocation(line: 2326, column: 27, scope: !3398)
!3490 = !DILocation(line: 2326, column: 39, scope: !3398)
!3491 = !DILocation(line: 2326, column: 4, scope: !3398)
!3492 = !DILocation(line: 2329, column: 7, scope: !3493)
!3493 = distinct !DILexicalBlock(scope: !3234, file: !3, line: 2329, column: 7)
!3494 = !DILocation(line: 2329, column: 18, scope: !3493)
!3495 = !DILocation(line: 2329, column: 22, scope: !3493)
!3496 = !DILocation(line: 2329, column: 25, scope: !3493)
!3497 = !DILocation(line: 2329, column: 7, scope: !3234)
!3498 = !DILocation(line: 2330, column: 17, scope: !3499)
!3499 = distinct !DILexicalBlock(scope: !3493, file: !3, line: 2329, column: 31)
!3500 = !DILocation(line: 2330, column: 20, scope: !3499)
!3501 = !DILocation(line: 2330, column: 4, scope: !3499)
!3502 = !DILocation(line: 2332, column: 8, scope: !3503)
!3503 = distinct !DILexicalBlock(scope: !3499, file: !3, line: 2332, column: 8)
!3504 = !DILocation(line: 2332, column: 8, scope: !3499)
!3505 = !DILocation(line: 2333, column: 18, scope: !3506)
!3506 = distinct !DILexicalBlock(scope: !3503, file: !3, line: 2332, column: 14)
!3507 = !DILocation(line: 2334, column: 18, scope: !3506)
!3508 = !DILocation(line: 2334, column: 16, scope: !3506)
!3509 = !DILocation(line: 2335, column: 14, scope: !3506)
!3510 = !DILocation(line: 2336, column: 4, scope: !3506)
!3511 = !DILocation(line: 2338, column: 11, scope: !3512)
!3512 = distinct !DILexicalBlock(scope: !3499, file: !3, line: 2338, column: 4)
!3513 = !DILocation(line: 2338, column: 9, scope: !3512)
!3514 = !DILocation(line: 2338, column: 16, scope: !3515)
!3515 = distinct !DILexicalBlock(scope: !3512, file: !3, line: 2338, column: 4)
!3516 = !DILocation(line: 2338, column: 20, scope: !3515)
!3517 = !DILocation(line: 2338, column: 23, scope: !3515)
!3518 = !DILocation(line: 2338, column: 18, scope: !3515)
!3519 = !DILocation(line: 2338, column: 4, scope: !3512)
!3520 = !DILocalVariable(name: "e", scope: !3521, file: !3, line: 2339, type: !84)
!3521 = distinct !DILexicalBlock(scope: !3515, file: !3, line: 2338, column: 38)
!3522 = !DILocation(line: 2339, column: 14, scope: !3521)
!3523 = !DILocation(line: 2339, column: 18, scope: !3521)
!3524 = !DILocation(line: 2339, column: 21, scope: !3521)
!3525 = !DILocation(line: 2339, column: 27, scope: !3521)
!3526 = !DILocalVariable(name: "sharpness", scope: !3521, file: !3, line: 2340, type: !69)
!3527 = !DILocation(line: 2340, column: 11, scope: !3521)
!3528 = !DILocation(line: 2340, column: 41, scope: !3521)
!3529 = !DILocation(line: 2340, column: 44, scope: !3521)
!3530 = !DILocation(line: 2340, column: 23, scope: !3521)
!3531 = !DILocation(line: 2342, column: 9, scope: !3532)
!3532 = distinct !DILexicalBlock(scope: !3521, file: !3, line: 2342, column: 9)
!3533 = !DILocation(line: 2342, column: 9, scope: !3521)
!3534 = !DILocation(line: 2343, column: 27, scope: !3535)
!3535 = distinct !DILexicalBlock(scope: !3536, file: !3, line: 2343, column: 10)
!3536 = distinct !DILexicalBlock(scope: !3532, file: !3, line: 2342, column: 15)
!3537 = !DILocation(line: 2343, column: 10, scope: !3535)
!3538 = !DILocation(line: 2343, column: 10, scope: !3536)
!3539 = !DILocalVariable(name: "oV", scope: !3540, file: !3, line: 2344, type: !70)
!3540 = distinct !DILexicalBlock(scope: !3535, file: !3, line: 2343, column: 31)
!3541 = !DILocation(line: 2344, column: 16, scope: !3540)
!3542 = !DILocation(line: 2344, column: 40, scope: !3540)
!3543 = !DILocation(line: 2344, column: 43, scope: !3540)
!3544 = !DILocation(line: 2344, column: 21, scope: !3540)
!3545 = !DILocation(line: 2345, column: 19, scope: !3540)
!3546 = !DILocation(line: 2345, column: 22, scope: !3540)
!3547 = !DILocation(line: 2345, column: 46, scope: !3540)
!3548 = !DILocation(line: 2345, column: 7, scope: !3540)
!3549 = !DILocation(line: 2346, column: 6, scope: !3540)
!3550 = !DILocation(line: 2347, column: 5, scope: !3536)
!3551 = !DILocation(line: 2348, column: 14, scope: !3552)
!3552 = distinct !DILexicalBlock(scope: !3532, file: !3, line: 2348, column: 14)
!3553 = !DILocation(line: 2348, column: 24, scope: !3552)
!3554 = !DILocation(line: 2348, column: 14, scope: !3532)
!3555 = !DILocalVariable(name: "oV", scope: !3556, file: !3, line: 2349, type: !70)
!3556 = distinct !DILexicalBlock(scope: !3552, file: !3, line: 2348, column: 33)
!3557 = !DILocation(line: 2349, column: 15, scope: !3556)
!3558 = !DILocation(line: 2349, column: 39, scope: !3556)
!3559 = !DILocation(line: 2349, column: 42, scope: !3556)
!3560 = !DILocation(line: 2349, column: 20, scope: !3556)
!3561 = !DILocation(line: 2350, column: 18, scope: !3556)
!3562 = !DILocation(line: 2350, column: 21, scope: !3556)
!3563 = !DILocation(line: 2350, column: 45, scope: !3556)
!3564 = !DILocation(line: 2350, column: 6, scope: !3556)
!3565 = !DILocation(line: 2351, column: 5, scope: !3556)
!3566 = !DILocation(line: 2352, column: 4, scope: !3521)
!3567 = !DILocation(line: 2338, column: 34, scope: !3515)
!3568 = !DILocation(line: 2338, column: 4, scope: !3515)
!3569 = distinct !{!3569, !3519, !3570}
!3570 = !DILocation(line: 2352, column: 4, scope: !3512)
!3571 = !DILocation(line: 2354, column: 17, scope: !3499)
!3572 = !DILocation(line: 2354, column: 32, scope: !3499)
!3573 = !DILocation(line: 2354, column: 30, scope: !3499)
!3574 = !DILocation(line: 2354, column: 44, scope: !3499)
!3575 = !DILocation(line: 2354, column: 4, scope: !3499)
!3576 = !DILocation(line: 2356, column: 8, scope: !3577)
!3577 = distinct !DILexicalBlock(scope: !3499, file: !3, line: 2356, column: 8)
!3578 = !DILocation(line: 2356, column: 19, scope: !3577)
!3579 = !DILocation(line: 2356, column: 24, scope: !3577)
!3580 = !DILocation(line: 2356, column: 27, scope: !3577)
!3581 = !DILocation(line: 2356, column: 8, scope: !3499)
!3582 = !DILocation(line: 2358, column: 18, scope: !3583)
!3583 = distinct !DILexicalBlock(scope: !3577, file: !3, line: 2356, column: 37)
!3584 = !DILocation(line: 2358, column: 21, scope: !3583)
!3585 = !DILocation(line: 2358, column: 25, scope: !3583)
!3586 = !DILocation(line: 2358, column: 5, scope: !3583)
!3587 = !DILocation(line: 2359, column: 17, scope: !3583)
!3588 = !DILocation(line: 2359, column: 20, scope: !3583)
!3589 = !DILocation(line: 2359, column: 23, scope: !3583)
!3590 = !DILocation(line: 2359, column: 5, scope: !3583)
!3591 = !DILocation(line: 2360, column: 18, scope: !3583)
!3592 = !DILocation(line: 2360, column: 21, scope: !3583)
!3593 = !DILocation(line: 2360, column: 35, scope: !3583)
!3594 = !DILocation(line: 2360, column: 5, scope: !3583)
!3595 = !DILocation(line: 2361, column: 17, scope: !3583)
!3596 = !DILocation(line: 2361, column: 20, scope: !3583)
!3597 = !DILocation(line: 2361, column: 23, scope: !3583)
!3598 = !DILocation(line: 2361, column: 5, scope: !3583)
!3599 = !DILocation(line: 2362, column: 4, scope: !3583)
!3600 = !DILocation(line: 2365, column: 17, scope: !3499)
!3601 = !DILocation(line: 2365, column: 20, scope: !3499)
!3602 = !DILocation(line: 2365, column: 24, scope: !3499)
!3603 = !DILocation(line: 2365, column: 4, scope: !3499)
!3604 = !DILocation(line: 2366, column: 17, scope: !3499)
!3605 = !DILocation(line: 2366, column: 27, scope: !3499)
!3606 = !DILocation(line: 2366, column: 4, scope: !3499)
!3607 = !DILocation(line: 2367, column: 17, scope: !3499)
!3608 = !DILocation(line: 2367, column: 27, scope: !3499)
!3609 = !DILocation(line: 2367, column: 4, scope: !3499)
!3610 = !DILocation(line: 2368, column: 16, scope: !3499)
!3611 = !DILocation(line: 2368, column: 19, scope: !3499)
!3612 = !DILocation(line: 2368, column: 22, scope: !3499)
!3613 = !DILocation(line: 2368, column: 4, scope: !3499)
!3614 = !DILocation(line: 2371, column: 16, scope: !3499)
!3615 = !DILocation(line: 2371, column: 19, scope: !3499)
!3616 = !DILocation(line: 2371, column: 24, scope: !3499)
!3617 = !DILocation(line: 2371, column: 4, scope: !3499)
!3618 = !DILocation(line: 2372, column: 17, scope: !3499)
!3619 = !DILocation(line: 2372, column: 20, scope: !3499)
!3620 = !DILocation(line: 2372, column: 34, scope: !3499)
!3621 = !DILocation(line: 2372, column: 4, scope: !3499)
!3622 = !DILocation(line: 2373, column: 16, scope: !3499)
!3623 = !DILocation(line: 2373, column: 21, scope: !3499)
!3624 = !DILocation(line: 2373, column: 24, scope: !3499)
!3625 = !DILocation(line: 2373, column: 4, scope: !3499)
!3626 = !DILocation(line: 2374, column: 3, scope: !3499)
!3627 = !DILocation(line: 2377, column: 2, scope: !3234)
!3628 = !DILocation(line: 2251, column: 48, scope: !3229)
!3629 = !DILocation(line: 2251, column: 2, scope: !3229)
!3630 = distinct !{!3630, !3232, !3631}
!3631 = !DILocation(line: 2377, column: 2, scope: !3226)
!3632 = !DILocation(line: 2379, column: 6, scope: !3633)
!3633 = distinct !DILexicalBlock(scope: !2871, file: !3, line: 2379, column: 6)
!3634 = !DILocation(line: 2379, column: 10, scope: !3633)
!3635 = !DILocation(line: 2379, column: 6, scope: !2871)
!3636 = !DILocation(line: 2380, column: 10, scope: !3637)
!3637 = distinct !DILexicalBlock(scope: !3638, file: !3, line: 2380, column: 3)
!3638 = distinct !DILexicalBlock(scope: !3633, file: !3, line: 2379, column: 24)
!3639 = !DILocation(line: 2380, column: 8, scope: !3637)
!3640 = !DILocation(line: 2380, column: 15, scope: !3641)
!3641 = distinct !DILexicalBlock(scope: !3637, file: !3, line: 2380, column: 3)
!3642 = !DILocation(line: 2380, column: 19, scope: !3641)
!3643 = !DILocation(line: 2380, column: 17, scope: !3641)
!3644 = !DILocation(line: 2380, column: 3, scope: !3637)
!3645 = !DILocalVariable(name: "v", scope: !3646, file: !3, line: 2381, type: !70)
!3646 = distinct !DILexicalBlock(scope: !3641, file: !3, line: 2380, column: 38)
!3647 = !DILocation(line: 2381, column: 13, scope: !3646)
!3648 = !DILocation(line: 2381, column: 17, scope: !3646)
!3649 = !DILocation(line: 2381, column: 27, scope: !3646)
!3650 = !DILocalVariable(name: "userData", scope: !3646, file: !3, line: 2382, type: !142)
!3651 = !DILocation(line: 2382, column: 10, scope: !3646)
!3652 = !DILocation(line: 2382, column: 48, scope: !3646)
!3653 = !DILocation(line: 2382, column: 52, scope: !3646)
!3654 = !DILocation(line: 2382, column: 21, scope: !3646)
!3655 = !DILocation(line: 2383, column: 50, scope: !3646)
!3656 = !DILocation(line: 2383, column: 54, scope: !3646)
!3657 = !DILocation(line: 2383, column: 15, scope: !3646)
!3658 = !DILocation(line: 2383, column: 24, scope: !3646)
!3659 = !DILocation(line: 2383, column: 28, scope: !3646)
!3660 = !DILocation(line: 2383, column: 4, scope: !3646)
!3661 = !DILocation(line: 2383, column: 48, scope: !3646)
!3662 = !DILocation(line: 2384, column: 3, scope: !3646)
!3663 = !DILocation(line: 2380, column: 34, scope: !3641)
!3664 = !DILocation(line: 2380, column: 3, scope: !3641)
!3665 = distinct !{!3665, !3644, !3666}
!3666 = !DILocation(line: 2384, column: 3, scope: !3637)
!3667 = !DILocation(line: 2386, column: 10, scope: !3668)
!3668 = distinct !DILexicalBlock(scope: !3638, file: !3, line: 2386, column: 3)
!3669 = !DILocation(line: 2386, column: 8, scope: !3668)
!3670 = !DILocation(line: 2386, column: 15, scope: !3671)
!3671 = distinct !DILexicalBlock(scope: !3668, file: !3, line: 2386, column: 3)
!3672 = !DILocation(line: 2386, column: 19, scope: !3671)
!3673 = !DILocation(line: 2386, column: 17, scope: !3671)
!3674 = !DILocation(line: 2386, column: 3, scope: !3668)
!3675 = !DILocalVariable(name: "e", scope: !3676, file: !3, line: 2387, type: !84)
!3676 = distinct !DILexicalBlock(scope: !3671, file: !3, line: 2386, column: 38)
!3677 = !DILocation(line: 2387, column: 13, scope: !3676)
!3678 = !DILocation(line: 2387, column: 17, scope: !3676)
!3679 = !DILocation(line: 2387, column: 27, scope: !3676)
!3680 = !DILocalVariable(name: "userData", scope: !3676, file: !3, line: 2388, type: !142)
!3681 = !DILocation(line: 2388, column: 10, scope: !3676)
!3682 = !DILocation(line: 2388, column: 48, scope: !3676)
!3683 = !DILocation(line: 2388, column: 52, scope: !3676)
!3684 = !DILocation(line: 2388, column: 21, scope: !3676)
!3685 = !DILocation(line: 2389, column: 50, scope: !3676)
!3686 = !DILocation(line: 2389, column: 54, scope: !3676)
!3687 = !DILocation(line: 2389, column: 15, scope: !3676)
!3688 = !DILocation(line: 2389, column: 24, scope: !3676)
!3689 = !DILocation(line: 2389, column: 28, scope: !3676)
!3690 = !DILocation(line: 2389, column: 4, scope: !3676)
!3691 = !DILocation(line: 2389, column: 48, scope: !3676)
!3692 = !DILocation(line: 2390, column: 3, scope: !3676)
!3693 = !DILocation(line: 2386, column: 34, scope: !3671)
!3694 = !DILocation(line: 2386, column: 3, scope: !3671)
!3695 = distinct !{!3695, !3674, !3696}
!3696 = !DILocation(line: 2390, column: 3, scope: !3668)
!3697 = !DILocation(line: 2392, column: 10, scope: !3698)
!3698 = distinct !DILexicalBlock(scope: !3638, file: !3, line: 2392, column: 3)
!3699 = !DILocation(line: 2392, column: 8, scope: !3698)
!3700 = !DILocation(line: 2392, column: 15, scope: !3701)
!3701 = distinct !DILexicalBlock(scope: !3698, file: !3, line: 2392, column: 3)
!3702 = !DILocation(line: 2392, column: 19, scope: !3701)
!3703 = !DILocation(line: 2392, column: 17, scope: !3701)
!3704 = !DILocation(line: 2392, column: 3, scope: !3698)
!3705 = !DILocalVariable(name: "f", scope: !3706, file: !3, line: 2393, type: !97)
!3706 = distinct !DILexicalBlock(scope: !3701, file: !3, line: 2392, column: 38)
!3707 = !DILocation(line: 2393, column: 13, scope: !3706)
!3708 = !DILocation(line: 2393, column: 17, scope: !3706)
!3709 = !DILocation(line: 2393, column: 27, scope: !3706)
!3710 = !DILocalVariable(name: "userData", scope: !3706, file: !3, line: 2394, type: !142)
!3711 = !DILocation(line: 2394, column: 10, scope: !3706)
!3712 = !DILocation(line: 2394, column: 48, scope: !3706)
!3713 = !DILocation(line: 2394, column: 52, scope: !3706)
!3714 = !DILocation(line: 2394, column: 21, scope: !3706)
!3715 = !DILocation(line: 2395, column: 50, scope: !3706)
!3716 = !DILocation(line: 2395, column: 54, scope: !3706)
!3717 = !DILocation(line: 2395, column: 15, scope: !3706)
!3718 = !DILocation(line: 2395, column: 24, scope: !3706)
!3719 = !DILocation(line: 2395, column: 28, scope: !3706)
!3720 = !DILocation(line: 2395, column: 4, scope: !3706)
!3721 = !DILocation(line: 2395, column: 48, scope: !3706)
!3722 = !DILocation(line: 2396, column: 3, scope: !3706)
!3723 = !DILocation(line: 2392, column: 34, scope: !3701)
!3724 = !DILocation(line: 2392, column: 3, scope: !3701)
!3725 = distinct !{!3725, !3704, !3726}
!3726 = !DILocation(line: 2396, column: 3, scope: !3698)
!3727 = !DILocation(line: 2397, column: 2, scope: !3638)
!3728 = !DILocation(line: 2399, column: 9, scope: !3729)
!3729 = distinct !DILexicalBlock(scope: !2871, file: !3, line: 2399, column: 2)
!3730 = !DILocation(line: 2399, column: 7, scope: !3729)
!3731 = !DILocation(line: 2399, column: 14, scope: !3732)
!3732 = distinct !DILexicalBlock(scope: !3729, file: !3, line: 2399, column: 2)
!3733 = !DILocation(line: 2399, column: 18, scope: !3732)
!3734 = !DILocation(line: 2399, column: 16, scope: !3732)
!3735 = !DILocation(line: 2399, column: 2, scope: !3729)
!3736 = !DILocalVariable(name: "e", scope: !3737, file: !3, line: 2400, type: !84)
!3737 = distinct !DILexicalBlock(scope: !3732, file: !3, line: 2399, column: 37)
!3738 = !DILocation(line: 2400, column: 12, scope: !3737)
!3739 = !DILocation(line: 2400, column: 16, scope: !3737)
!3740 = !DILocation(line: 2400, column: 26, scope: !3737)
!3741 = !DILocation(line: 2401, column: 16, scope: !3737)
!3742 = !DILocation(line: 2401, column: 43, scope: !3737)
!3743 = !DILocation(line: 2401, column: 71, scope: !3737)
!3744 = !DILocation(line: 2401, column: 3, scope: !3737)
!3745 = !DILocation(line: 2402, column: 16, scope: !3737)
!3746 = !DILocation(line: 2402, column: 43, scope: !3737)
!3747 = !DILocation(line: 2402, column: 71, scope: !3737)
!3748 = !DILocation(line: 2402, column: 3, scope: !3737)
!3749 = !DILocation(line: 2403, column: 2, scope: !3737)
!3750 = !DILocation(line: 2399, column: 33, scope: !3732)
!3751 = !DILocation(line: 2399, column: 2, scope: !3732)
!3752 = distinct !{!3752, !3735, !3753}
!3753 = !DILocation(line: 2403, column: 2, scope: !3729)
!3754 = !DILocation(line: 2404, column: 9, scope: !3755)
!3755 = distinct !DILexicalBlock(scope: !2871, file: !3, line: 2404, column: 2)
!3756 = !DILocation(line: 2404, column: 7, scope: !3755)
!3757 = !DILocation(line: 2404, column: 14, scope: !3758)
!3758 = distinct !DILexicalBlock(scope: !3755, file: !3, line: 2404, column: 2)
!3759 = !DILocation(line: 2404, column: 18, scope: !3758)
!3760 = !DILocation(line: 2404, column: 16, scope: !3758)
!3761 = !DILocation(line: 2404, column: 2, scope: !3755)
!3762 = !DILocalVariable(name: "f", scope: !3763, file: !3, line: 2405, type: !97)
!3763 = distinct !DILexicalBlock(scope: !3758, file: !3, line: 2404, column: 37)
!3764 = !DILocation(line: 2405, column: 12, scope: !3763)
!3765 = !DILocation(line: 2405, column: 16, scope: !3763)
!3766 = !DILocation(line: 2405, column: 26, scope: !3763)
!3767 = !DILocation(line: 2406, column: 10, scope: !3768)
!3768 = distinct !DILexicalBlock(scope: !3763, file: !3, line: 2406, column: 3)
!3769 = !DILocation(line: 2406, column: 8, scope: !3768)
!3770 = !DILocation(line: 2406, column: 15, scope: !3771)
!3771 = distinct !DILexicalBlock(scope: !3768, file: !3, line: 2406, column: 3)
!3772 = !DILocation(line: 2406, column: 19, scope: !3771)
!3773 = !DILocation(line: 2406, column: 22, scope: !3771)
!3774 = !DILocation(line: 2406, column: 17, scope: !3771)
!3775 = !DILocation(line: 2406, column: 3, scope: !3768)
!3776 = !DILocalVariable(name: "e", scope: !3777, file: !3, line: 2407, type: !84)
!3777 = distinct !DILexicalBlock(scope: !3771, file: !3, line: 2406, column: 37)
!3778 = !DILocation(line: 2407, column: 13, scope: !3777)
!3779 = !DILocation(line: 2407, column: 31, scope: !3777)
!3780 = !DILocation(line: 2407, column: 17, scope: !3777)
!3781 = !DILocation(line: 2407, column: 34, scope: !3777)
!3782 = !DILocalVariable(name: "prevE", scope: !3777, file: !3, line: 2408, type: !84)
!3783 = !DILocation(line: 2408, column: 13, scope: !3777)
!3784 = !DILocation(line: 2408, column: 35, scope: !3777)
!3785 = !DILocation(line: 2408, column: 21, scope: !3777)
!3786 = !DILocation(line: 2408, column: 39, scope: !3777)
!3787 = !DILocation(line: 2408, column: 43, scope: !3777)
!3788 = !DILocation(line: 2408, column: 46, scope: !3777)
!3789 = !DILocation(line: 2408, column: 41, scope: !3777)
!3790 = !DILocation(line: 2408, column: 55, scope: !3777)
!3791 = !DILocation(line: 2408, column: 62, scope: !3777)
!3792 = !DILocation(line: 2408, column: 65, scope: !3777)
!3793 = !DILocation(line: 2408, column: 60, scope: !3777)
!3794 = !DILocation(line: 2410, column: 17, scope: !3777)
!3795 = !DILocation(line: 2410, column: 80, scope: !3777)
!3796 = !DILocation(line: 2410, column: 61, scope: !3777)
!3797 = !DILocation(line: 2410, column: 52, scope: !3777)
!3798 = !DILocation(line: 2410, column: 84, scope: !3777)
!3799 = !DILocation(line: 2410, column: 4, scope: !3777)
!3800 = !DILocation(line: 2411, column: 17, scope: !3777)
!3801 = !DILocation(line: 2411, column: 77, scope: !3777)
!3802 = !DILocation(line: 2411, column: 58, scope: !3777)
!3803 = !DILocation(line: 2411, column: 49, scope: !3777)
!3804 = !DILocation(line: 2411, column: 81, scope: !3777)
!3805 = !DILocation(line: 2411, column: 4, scope: !3777)
!3806 = !DILocation(line: 2412, column: 17, scope: !3777)
!3807 = !DILocation(line: 2412, column: 52, scope: !3777)
!3808 = !DILocation(line: 2412, column: 94, scope: !3777)
!3809 = !DILocation(line: 2412, column: 4, scope: !3777)
!3810 = !DILocation(line: 2413, column: 17, scope: !3777)
!3811 = !DILocation(line: 2413, column: 49, scope: !3777)
!3812 = !DILocation(line: 2413, column: 94, scope: !3777)
!3813 = !DILocation(line: 2413, column: 4, scope: !3777)
!3814 = !DILocation(line: 2415, column: 17, scope: !3777)
!3815 = !DILocation(line: 2415, column: 68, scope: !3777)
!3816 = !DILocation(line: 2415, column: 85, scope: !3777)
!3817 = !DILocation(line: 2415, column: 71, scope: !3777)
!3818 = !DILocation(line: 2415, column: 88, scope: !3777)
!3819 = !DILocation(line: 2415, column: 92, scope: !3777)
!3820 = !DILocation(line: 2415, column: 104, scope: !3777)
!3821 = !DILocation(line: 2415, column: 52, scope: !3777)
!3822 = !DILocation(line: 2415, column: 119, scope: !3777)
!3823 = !DILocation(line: 2415, column: 4, scope: !3777)
!3824 = !DILocation(line: 2416, column: 17, scope: !3777)
!3825 = !DILocation(line: 2416, column: 68, scope: !3777)
!3826 = !DILocation(line: 2416, column: 89, scope: !3777)
!3827 = !DILocation(line: 2416, column: 75, scope: !3777)
!3828 = !DILocation(line: 2416, column: 92, scope: !3777)
!3829 = !DILocation(line: 2416, column: 96, scope: !3777)
!3830 = !DILocation(line: 2416, column: 108, scope: !3777)
!3831 = !DILocation(line: 2416, column: 52, scope: !3777)
!3832 = !DILocation(line: 2416, column: 123, scope: !3777)
!3833 = !DILocation(line: 2416, column: 4, scope: !3777)
!3834 = !DILocation(line: 2417, column: 3, scope: !3777)
!3835 = !DILocation(line: 2406, column: 33, scope: !3771)
!3836 = !DILocation(line: 2406, column: 3, scope: !3771)
!3837 = distinct !{!3837, !3775, !3838}
!3838 = !DILocation(line: 2417, column: 3, scope: !3768)
!3839 = !DILocation(line: 2418, column: 2, scope: !3763)
!3840 = !DILocation(line: 2404, column: 33, scope: !3758)
!3841 = !DILocation(line: 2404, column: 2, scope: !3758)
!3842 = distinct !{!3842, !3761, !3843}
!3843 = !DILocation(line: 2418, column: 2, scope: !3755)
!3844 = !DILocation(line: 2420, column: 14, scope: !3845)
!3845 = distinct !DILexicalBlock(scope: !2871, file: !3, line: 2420, column: 2)
!3846 = !DILocation(line: 2420, column: 7, scope: !3845)
!3847 = !DILocation(line: 2420, column: 19, scope: !3848)
!3848 = distinct !DILexicalBlock(scope: !3845, file: !3, line: 2420, column: 2)
!3849 = !DILocation(line: 2420, column: 28, scope: !3848)
!3850 = !DILocation(line: 2420, column: 26, scope: !3848)
!3851 = !DILocation(line: 2420, column: 2, scope: !3845)
!3852 = !DILocation(line: 2421, column: 31, scope: !3853)
!3853 = distinct !DILexicalBlock(scope: !3848, file: !3, line: 2420, column: 52)
!3854 = !DILocation(line: 2422, column: 31, scope: !3853)
!3855 = !DILocation(line: 2422, column: 42, scope: !3853)
!3856 = !DILocation(line: 2422, column: 53, scope: !3853)
!3857 = !DILocation(line: 2423, column: 31, scope: !3853)
!3858 = !DILocation(line: 2423, column: 45, scope: !3853)
!3859 = !DILocation(line: 2423, column: 59, scope: !3853)
!3860 = !DILocation(line: 2423, column: 73, scope: !3853)
!3861 = !DILocation(line: 2421, column: 3, scope: !3853)
!3862 = !DILocation(line: 2424, column: 2, scope: !3853)
!3863 = !DILocation(line: 2420, column: 48, scope: !3848)
!3864 = !DILocation(line: 2420, column: 2, scope: !3848)
!3865 = distinct !{!3865, !3851, !3866}
!3866 = !DILocation(line: 2424, column: 2, scope: !3845)
!3867 = !DILocation(line: 2426, column: 6, scope: !3868)
!3868 = distinct !DILexicalBlock(scope: !2871, file: !3, line: 2426, column: 6)
!3869 = !DILocation(line: 2426, column: 10, scope: !3868)
!3870 = !DILocation(line: 2426, column: 6, scope: !2871)
!3871 = !DILocation(line: 2427, column: 31, scope: !3868)
!3872 = !DILocation(line: 2428, column: 31, scope: !3868)
!3873 = !DILocation(line: 2428, column: 42, scope: !3868)
!3874 = !DILocation(line: 2428, column: 53, scope: !3868)
!3875 = !DILocation(line: 2429, column: 31, scope: !3868)
!3876 = !DILocation(line: 2429, column: 45, scope: !3868)
!3877 = !DILocation(line: 2429, column: 59, scope: !3868)
!3878 = !DILocation(line: 2427, column: 3, scope: !3868)
!3879 = !DILocation(line: 2431, column: 14, scope: !3880)
!3880 = distinct !DILexicalBlock(scope: !2871, file: !3, line: 2431, column: 2)
!3881 = !DILocation(line: 2431, column: 7, scope: !3880)
!3882 = !DILocation(line: 2431, column: 19, scope: !3883)
!3883 = distinct !DILexicalBlock(scope: !3880, file: !3, line: 2431, column: 2)
!3884 = !DILocation(line: 2431, column: 28, scope: !3883)
!3885 = !DILocation(line: 2431, column: 26, scope: !3883)
!3886 = !DILocation(line: 2431, column: 2, scope: !3880)
!3887 = !DILocalVariable(name: "v", scope: !3888, file: !3, line: 2432, type: !70)
!3888 = distinct !DILexicalBlock(scope: !3883, file: !3, line: 2431, column: 52)
!3889 = !DILocation(line: 2432, column: 12, scope: !3888)
!3890 = !DILocation(line: 2432, column: 16, scope: !3888)
!3891 = !DILocation(line: 2432, column: 26, scope: !3888)
!3892 = !DILocation(line: 2433, column: 3, scope: !3888)
!3893 = !DILocation(line: 2433, column: 6, scope: !3888)
!3894 = !DILocation(line: 2433, column: 12, scope: !3888)
!3895 = !DILocation(line: 2434, column: 2, scope: !3888)
!3896 = !DILocation(line: 2431, column: 48, scope: !3883)
!3897 = !DILocation(line: 2431, column: 2, scope: !3883)
!3898 = distinct !{!3898, !3886, !3899}
!3899 = !DILocation(line: 2434, column: 2, scope: !3880)
!3900 = !DILocation(line: 2435, column: 14, scope: !3901)
!3901 = distinct !DILexicalBlock(scope: !2871, file: !3, line: 2435, column: 2)
!3902 = !DILocation(line: 2435, column: 7, scope: !3901)
!3903 = !DILocation(line: 2435, column: 19, scope: !3904)
!3904 = distinct !DILexicalBlock(scope: !3901, file: !3, line: 2435, column: 2)
!3905 = !DILocation(line: 2435, column: 28, scope: !3904)
!3906 = !DILocation(line: 2435, column: 26, scope: !3904)
!3907 = !DILocation(line: 2435, column: 2, scope: !3901)
!3908 = !DILocalVariable(name: "e", scope: !3909, file: !3, line: 2436, type: !84)
!3909 = distinct !DILexicalBlock(scope: !3904, file: !3, line: 2435, column: 52)
!3910 = !DILocation(line: 2436, column: 12, scope: !3909)
!3911 = !DILocation(line: 2436, column: 16, scope: !3909)
!3912 = !DILocation(line: 2436, column: 26, scope: !3909)
!3913 = !DILocation(line: 2437, column: 3, scope: !3909)
!3914 = !DILocation(line: 2437, column: 6, scope: !3909)
!3915 = !DILocation(line: 2437, column: 12, scope: !3909)
!3916 = !DILocation(line: 2438, column: 2, scope: !3909)
!3917 = !DILocation(line: 2435, column: 48, scope: !3904)
!3918 = !DILocation(line: 2435, column: 2, scope: !3904)
!3919 = distinct !{!3919, !3907, !3920}
!3920 = !DILocation(line: 2438, column: 2, scope: !3901)
!3921 = !DILocation(line: 2440, column: 2, scope: !2871)
!3922 = !DILocation(line: 2440, column: 12, scope: !2871)
!3923 = !DILocation(line: 2441, column: 2, scope: !2871)
!3924 = !DILocation(line: 2441, column: 12, scope: !2871)
!3925 = !DILocation(line: 2442, column: 2, scope: !2871)
!3926 = !DILocation(line: 2442, column: 12, scope: !2871)
!3927 = !DILocation(line: 2443, column: 1, scope: !2871)
!3928 = distinct !DISubprogram(name: "ccgSubSurf_updateFromFaces", scope: !3, file: !3, line: 2521, type: !3929, scopeLine: 2522, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, retainedNodes: !151)
!3929 = !DISubroutineType(types: !3930)
!3930 = !{!568, !187, !17, !96, !17}
!3931 = !DILocalVariable(name: "ss", arg: 1, scope: !3928, file: !3, line: 2521, type: !187)
!3932 = !DILocation(line: 2521, column: 49, scope: !3928)
!3933 = !DILocalVariable(name: "lvl", arg: 2, scope: !3928, file: !3, line: 2521, type: !17)
!3934 = !DILocation(line: 2521, column: 57, scope: !3928)
!3935 = !DILocalVariable(name: "effectedF", arg: 3, scope: !3928, file: !3, line: 2521, type: !96)
!3936 = !DILocation(line: 2521, column: 72, scope: !3928)
!3937 = !DILocalVariable(name: "numEffectedF", arg: 4, scope: !3928, file: !3, line: 2521, type: !17)
!3938 = !DILocation(line: 2521, column: 87, scope: !3928)
!3939 = !DILocalVariable(name: "i", scope: !3928, file: !3, line: 2523, type: !17)
!3940 = !DILocation(line: 2523, column: 6, scope: !3928)
!3941 = !DILocalVariable(name: "S", scope: !3928, file: !3, line: 2523, type: !17)
!3942 = !DILocation(line: 2523, column: 9, scope: !3928)
!3943 = !DILocalVariable(name: "x", scope: !3928, file: !3, line: 2523, type: !17)
!3944 = !DILocation(line: 2523, column: 12, scope: !3928)
!3945 = !DILocalVariable(name: "gridSize", scope: !3928, file: !3, line: 2523, type: !17)
!3946 = !DILocation(line: 2523, column: 15, scope: !3928)
!3947 = !DILocalVariable(name: "cornerIdx", scope: !3928, file: !3, line: 2523, type: !17)
!3948 = !DILocation(line: 2523, column: 25, scope: !3928)
!3949 = !DILocalVariable(name: "subdivLevels", scope: !3928, file: !3, line: 2523, type: !17)
!3950 = !DILocation(line: 2523, column: 36, scope: !3928)
!3951 = !DILocalVariable(name: "vertDataSize", scope: !3928, file: !3, line: 2524, type: !17)
!3952 = !DILocation(line: 2524, column: 6, scope: !3928)
!3953 = !DILocation(line: 2524, column: 21, scope: !3928)
!3954 = !DILocation(line: 2524, column: 25, scope: !3928)
!3955 = !DILocation(line: 2524, column: 33, scope: !3928)
!3956 = !DILocalVariable(name: "freeF", scope: !3928, file: !3, line: 2524, type: !17)
!3957 = !DILocation(line: 2524, column: 47, scope: !3928)
!3958 = !DILocation(line: 2526, column: 17, scope: !3928)
!3959 = !DILocation(line: 2526, column: 21, scope: !3928)
!3960 = !DILocation(line: 2526, column: 15, scope: !3928)
!3961 = !DILocation(line: 2527, column: 9, scope: !3928)
!3962 = !DILocation(line: 2527, column: 8, scope: !3928)
!3963 = !DILocation(line: 2527, column: 16, scope: !3928)
!3964 = !DILocation(line: 2527, column: 22, scope: !3928)
!3965 = !DILocation(line: 2527, column: 6, scope: !3928)
!3966 = !DILocation(line: 2528, column: 26, scope: !3928)
!3967 = !DILocation(line: 2528, column: 13, scope: !3928)
!3968 = !DILocation(line: 2528, column: 11, scope: !3928)
!3969 = !DILocation(line: 2529, column: 14, scope: !3928)
!3970 = !DILocation(line: 2529, column: 23, scope: !3928)
!3971 = !DILocation(line: 2529, column: 12, scope: !3928)
!3972 = !DILocation(line: 2531, column: 23, scope: !3928)
!3973 = !DILocation(line: 2531, column: 2, scope: !3928)
!3974 = !DILocation(line: 2533, column: 9, scope: !3975)
!3975 = distinct !DILexicalBlock(scope: !3928, file: !3, line: 2533, column: 2)
!3976 = !DILocation(line: 2533, column: 7, scope: !3975)
!3977 = !DILocation(line: 2533, column: 14, scope: !3978)
!3978 = distinct !DILexicalBlock(scope: !3975, file: !3, line: 2533, column: 2)
!3979 = !DILocation(line: 2533, column: 18, scope: !3978)
!3980 = !DILocation(line: 2533, column: 16, scope: !3978)
!3981 = !DILocation(line: 2533, column: 2, scope: !3975)
!3982 = !DILocalVariable(name: "f", scope: !3983, file: !3, line: 2534, type: !97)
!3983 = distinct !DILexicalBlock(scope: !3978, file: !3, line: 2533, column: 37)
!3984 = !DILocation(line: 2534, column: 12, scope: !3983)
!3985 = !DILocation(line: 2534, column: 16, scope: !3983)
!3986 = !DILocation(line: 2534, column: 26, scope: !3983)
!3987 = !DILocation(line: 2536, column: 10, scope: !3988)
!3988 = distinct !DILexicalBlock(scope: !3983, file: !3, line: 2536, column: 3)
!3989 = !DILocation(line: 2536, column: 8, scope: !3988)
!3990 = !DILocation(line: 2536, column: 15, scope: !3991)
!3991 = distinct !DILexicalBlock(scope: !3988, file: !3, line: 2536, column: 3)
!3992 = !DILocation(line: 2536, column: 19, scope: !3991)
!3993 = !DILocation(line: 2536, column: 22, scope: !3991)
!3994 = !DILocation(line: 2536, column: 17, scope: !3991)
!3995 = !DILocation(line: 2536, column: 3, scope: !3988)
!3996 = !DILocalVariable(name: "e", scope: !3997, file: !3, line: 2537, type: !84)
!3997 = distinct !DILexicalBlock(scope: !3991, file: !3, line: 2536, column: 37)
!3998 = !DILocation(line: 2537, column: 13, scope: !3997)
!3999 = !DILocation(line: 2537, column: 31, scope: !3997)
!4000 = !DILocation(line: 2537, column: 17, scope: !3997)
!4001 = !DILocation(line: 2537, column: 34, scope: !3997)
!4002 = !DILocalVariable(name: "prevE", scope: !3997, file: !3, line: 2538, type: !84)
!4003 = !DILocation(line: 2538, column: 13, scope: !3997)
!4004 = !DILocation(line: 2538, column: 35, scope: !3997)
!4005 = !DILocation(line: 2538, column: 21, scope: !3997)
!4006 = !DILocation(line: 2538, column: 39, scope: !3997)
!4007 = !DILocation(line: 2538, column: 43, scope: !3997)
!4008 = !DILocation(line: 2538, column: 46, scope: !3997)
!4009 = !DILocation(line: 2538, column: 41, scope: !3997)
!4010 = !DILocation(line: 2538, column: 55, scope: !3997)
!4011 = !DILocation(line: 2538, column: 62, scope: !3997)
!4012 = !DILocation(line: 2538, column: 65, scope: !3997)
!4013 = !DILocation(line: 2538, column: 60, scope: !3997)
!4014 = !DILocation(line: 2540, column: 45, scope: !3997)
!4015 = !DILocation(line: 2540, column: 26, scope: !3997)
!4016 = !DILocation(line: 2540, column: 17, scope: !3997)
!4017 = !DILocation(line: 2540, column: 49, scope: !3997)
!4018 = !DILocation(line: 2540, column: 80, scope: !3997)
!4019 = !DILocation(line: 2540, column: 4, scope: !3997)
!4020 = !DILocation(line: 2541, column: 17, scope: !3997)
!4021 = !DILocation(line: 2541, column: 55, scope: !3997)
!4022 = !DILocation(line: 2541, column: 102, scope: !3997)
!4023 = !DILocation(line: 2541, column: 4, scope: !3997)
!4024 = !DILocation(line: 2543, column: 11, scope: !4025)
!4025 = distinct !DILexicalBlock(scope: !3997, file: !3, line: 2543, column: 4)
!4026 = !DILocation(line: 2543, column: 9, scope: !4025)
!4027 = !DILocation(line: 2543, column: 16, scope: !4028)
!4028 = distinct !DILexicalBlock(scope: !4025, file: !3, line: 2543, column: 4)
!4029 = !DILocation(line: 2543, column: 20, scope: !4028)
!4030 = !DILocation(line: 2543, column: 18, scope: !4028)
!4031 = !DILocation(line: 2543, column: 4, scope: !4025)
!4032 = !DILocation(line: 2544, column: 18, scope: !4028)
!4033 = !DILocation(line: 2544, column: 46, scope: !4028)
!4034 = !DILocation(line: 2544, column: 77, scope: !4028)
!4035 = !DILocation(line: 2544, column: 5, scope: !4028)
!4036 = !DILocation(line: 2543, column: 31, scope: !4028)
!4037 = !DILocation(line: 2543, column: 4, scope: !4028)
!4038 = distinct !{!4038, !4031, !4039}
!4039 = !DILocation(line: 2544, column: 79, scope: !4025)
!4040 = !DILocation(line: 2546, column: 11, scope: !4041)
!4041 = distinct !DILexicalBlock(scope: !3997, file: !3, line: 2546, column: 4)
!4042 = !DILocation(line: 2546, column: 9, scope: !4041)
!4043 = !DILocation(line: 2546, column: 16, scope: !4044)
!4044 = distinct !DILexicalBlock(scope: !4041, file: !3, line: 2546, column: 4)
!4045 = !DILocation(line: 2546, column: 20, scope: !4044)
!4046 = !DILocation(line: 2546, column: 18, scope: !4044)
!4047 = !DILocation(line: 2546, column: 4, scope: !4041)
!4048 = !DILocalVariable(name: "eI", scope: !4049, file: !3, line: 2547, type: !17)
!4049 = distinct !DILexicalBlock(scope: !4044, file: !3, line: 2546, column: 35)
!4050 = !DILocation(line: 2547, column: 9, scope: !4049)
!4051 = !DILocation(line: 2547, column: 14, scope: !4049)
!4052 = !DILocation(line: 2547, column: 23, scope: !4049)
!4053 = !DILocation(line: 2547, column: 29, scope: !4049)
!4054 = !DILocation(line: 2547, column: 27, scope: !4049)
!4055 = !DILocation(line: 2548, column: 34, scope: !4049)
!4056 = !DILocation(line: 2548, column: 51, scope: !4049)
!4057 = !DILocation(line: 2548, column: 37, scope: !4049)
!4058 = !DILocation(line: 2548, column: 54, scope: !4049)
!4059 = !DILocation(line: 2548, column: 58, scope: !4049)
!4060 = !DILocation(line: 2548, column: 63, scope: !4049)
!4061 = !DILocation(line: 2548, column: 67, scope: !4049)
!4062 = !DILocation(line: 2548, column: 18, scope: !4049)
!4063 = !DILocation(line: 2548, column: 82, scope: !4049)
!4064 = !DILocation(line: 2548, column: 121, scope: !4049)
!4065 = !DILocation(line: 2548, column: 5, scope: !4049)
!4066 = !DILocation(line: 2549, column: 34, scope: !4049)
!4067 = !DILocation(line: 2549, column: 55, scope: !4049)
!4068 = !DILocation(line: 2549, column: 41, scope: !4049)
!4069 = !DILocation(line: 2549, column: 58, scope: !4049)
!4070 = !DILocation(line: 2549, column: 62, scope: !4049)
!4071 = !DILocation(line: 2549, column: 67, scope: !4049)
!4072 = !DILocation(line: 2549, column: 71, scope: !4049)
!4073 = !DILocation(line: 2549, column: 18, scope: !4049)
!4074 = !DILocation(line: 2549, column: 86, scope: !4049)
!4075 = !DILocation(line: 2549, column: 125, scope: !4049)
!4076 = !DILocation(line: 2549, column: 5, scope: !4049)
!4077 = !DILocation(line: 2550, column: 4, scope: !4049)
!4078 = !DILocation(line: 2546, column: 31, scope: !4044)
!4079 = !DILocation(line: 2546, column: 4, scope: !4044)
!4080 = distinct !{!4080, !4047, !4081}
!4081 = !DILocation(line: 2550, column: 4, scope: !4041)
!4082 = !DILocation(line: 2551, column: 3, scope: !3997)
!4083 = !DILocation(line: 2536, column: 33, scope: !3991)
!4084 = !DILocation(line: 2536, column: 3, scope: !3991)
!4085 = distinct !{!4085, !3995, !4086}
!4086 = !DILocation(line: 2551, column: 3, scope: !3988)
!4087 = !DILocation(line: 2552, column: 2, scope: !3983)
!4088 = !DILocation(line: 2533, column: 33, scope: !3978)
!4089 = !DILocation(line: 2533, column: 2, scope: !3978)
!4090 = distinct !{!4090, !3981, !4091}
!4091 = !DILocation(line: 2552, column: 2, scope: !3975)
!4092 = !DILocation(line: 2554, column: 6, scope: !4093)
!4093 = distinct !DILexicalBlock(scope: !3928, file: !3, line: 2554, column: 6)
!4094 = !DILocation(line: 2554, column: 6, scope: !3928)
!4095 = !DILocation(line: 2554, column: 13, scope: !4093)
!4096 = !DILocation(line: 2554, column: 23, scope: !4093)
!4097 = !DILocation(line: 2556, column: 2, scope: !3928)
!4098 = distinct !DISubprogram(name: "ccgSubSurf__allFaces", scope: !3, file: !3, line: 2445, type: !4099, scopeLine: 2446, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !30, retainedNodes: !151)
!4099 = !DISubroutineType(types: !4100)
!4100 = !{null, !187, !4101, !109, !109}
!4101 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !96, size: 64)
!4102 = !DILocalVariable(name: "ss", arg: 1, scope: !4098, file: !3, line: 2445, type: !187)
!4103 = !DILocation(line: 2445, column: 46, scope: !4098)
!4104 = !DILocalVariable(name: "faces", arg: 2, scope: !4098, file: !3, line: 2445, type: !4101)
!4105 = !DILocation(line: 2445, column: 61, scope: !4098)
!4106 = !DILocalVariable(name: "numFaces", arg: 3, scope: !4098, file: !3, line: 2445, type: !109)
!4107 = !DILocation(line: 2445, column: 73, scope: !4098)
!4108 = !DILocalVariable(name: "freeFaces", arg: 4, scope: !4098, file: !3, line: 2445, type: !109)
!4109 = !DILocation(line: 2445, column: 88, scope: !4098)
!4110 = !DILocalVariable(name: "array", scope: !4098, file: !3, line: 2447, type: !96)
!4111 = !DILocation(line: 2447, column: 12, scope: !4098)
!4112 = !DILocalVariable(name: "i", scope: !4098, file: !3, line: 2448, type: !17)
!4113 = !DILocation(line: 2448, column: 6, scope: !4098)
!4114 = !DILocalVariable(name: "num", scope: !4098, file: !3, line: 2448, type: !17)
!4115 = !DILocation(line: 2448, column: 9, scope: !4098)
!4116 = !DILocation(line: 2450, column: 7, scope: !4117)
!4117 = distinct !DILexicalBlock(scope: !4098, file: !3, line: 2450, column: 6)
!4118 = !DILocation(line: 2450, column: 6, scope: !4117)
!4119 = !DILocation(line: 2450, column: 13, scope: !4117)
!4120 = !DILocation(line: 2450, column: 6, scope: !4098)
!4121 = !DILocation(line: 2451, column: 11, scope: !4122)
!4122 = distinct !DILexicalBlock(scope: !4117, file: !3, line: 2450, column: 22)
!4123 = !DILocation(line: 2451, column: 40, scope: !4122)
!4124 = !DILocation(line: 2451, column: 44, scope: !4122)
!4125 = !DILocation(line: 2451, column: 50, scope: !4122)
!4126 = !DILocation(line: 2451, column: 38, scope: !4122)
!4127 = !DILocation(line: 2451, column: 9, scope: !4122)
!4128 = !DILocation(line: 2452, column: 7, scope: !4122)
!4129 = !DILocation(line: 2453, column: 10, scope: !4130)
!4130 = distinct !DILexicalBlock(scope: !4122, file: !3, line: 2453, column: 3)
!4131 = !DILocation(line: 2453, column: 8, scope: !4130)
!4132 = !DILocation(line: 2453, column: 15, scope: !4133)
!4133 = distinct !DILexicalBlock(scope: !4130, file: !3, line: 2453, column: 3)
!4134 = !DILocation(line: 2453, column: 19, scope: !4133)
!4135 = !DILocation(line: 2453, column: 23, scope: !4133)
!4136 = !DILocation(line: 2453, column: 29, scope: !4133)
!4137 = !DILocation(line: 2453, column: 17, scope: !4133)
!4138 = !DILocation(line: 2453, column: 3, scope: !4130)
!4139 = !DILocalVariable(name: "f", scope: !4140, file: !3, line: 2454, type: !97)
!4140 = distinct !DILexicalBlock(scope: !4133, file: !3, line: 2453, column: 43)
!4141 = !DILocation(line: 2454, column: 13, scope: !4140)
!4142 = !DILocation(line: 2454, column: 29, scope: !4140)
!4143 = !DILocation(line: 2454, column: 33, scope: !4140)
!4144 = !DILocation(line: 2454, column: 39, scope: !4140)
!4145 = !DILocation(line: 2454, column: 47, scope: !4140)
!4146 = !DILocation(line: 2454, column: 17, scope: !4140)
!4147 = !DILocation(line: 2456, column: 4, scope: !4140)
!4148 = !DILocation(line: 2456, column: 11, scope: !4149)
!4149 = distinct !DILexicalBlock(scope: !4150, file: !3, line: 2456, column: 4)
!4150 = distinct !DILexicalBlock(scope: !4140, file: !3, line: 2456, column: 4)
!4151 = !DILocation(line: 2456, column: 4, scope: !4150)
!4152 = !DILocation(line: 2457, column: 20, scope: !4149)
!4153 = !DILocation(line: 2457, column: 5, scope: !4149)
!4154 = !DILocation(line: 2457, column: 14, scope: !4149)
!4155 = !DILocation(line: 2457, column: 18, scope: !4149)
!4156 = !DILocation(line: 2456, column: 18, scope: !4149)
!4157 = !DILocation(line: 2456, column: 21, scope: !4149)
!4158 = !DILocation(line: 2456, column: 16, scope: !4149)
!4159 = !DILocation(line: 2456, column: 4, scope: !4149)
!4160 = distinct !{!4160, !4151, !4161}
!4161 = !DILocation(line: 2457, column: 20, scope: !4150)
!4162 = !DILocation(line: 2458, column: 3, scope: !4140)
!4163 = !DILocation(line: 2453, column: 39, scope: !4133)
!4164 = !DILocation(line: 2453, column: 3, scope: !4133)
!4165 = distinct !{!4165, !4138, !4166}
!4166 = !DILocation(line: 2458, column: 3, scope: !4130)
!4167 = !DILocation(line: 2460, column: 12, scope: !4122)
!4168 = !DILocation(line: 2460, column: 4, scope: !4122)
!4169 = !DILocation(line: 2460, column: 10, scope: !4122)
!4170 = !DILocation(line: 2461, column: 15, scope: !4122)
!4171 = !DILocation(line: 2461, column: 4, scope: !4122)
!4172 = !DILocation(line: 2461, column: 13, scope: !4122)
!4173 = !DILocation(line: 2462, column: 4, scope: !4122)
!4174 = !DILocation(line: 2462, column: 14, scope: !4122)
!4175 = !DILocation(line: 2463, column: 2, scope: !4122)
!4176 = !DILocation(line: 2465, column: 4, scope: !4177)
!4177 = distinct !DILexicalBlock(scope: !4117, file: !3, line: 2464, column: 7)
!4178 = !DILocation(line: 2465, column: 14, scope: !4177)
!4179 = !DILocation(line: 2467, column: 1, scope: !4098)
!4180 = distinct !DISubprogram(name: "FACE_getCenterData", scope: !3, file: !3, line: 392, type: !4181, scopeLine: 393, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !30, retainedNodes: !151)
!4181 = !DISubroutineType(types: !4182)
!4182 = !{!142, !97}
!4183 = !DILocalVariable(name: "f", arg: 1, scope: !4180, file: !3, line: 392, type: !97)
!4184 = !DILocation(line: 392, column: 46, scope: !4180)
!4185 = !DILocation(line: 394, column: 34, scope: !4180)
!4186 = !DILocation(line: 394, column: 20, scope: !4180)
!4187 = !DILocation(line: 394, column: 38, scope: !4180)
!4188 = !DILocation(line: 394, column: 42, scope: !4180)
!4189 = !DILocation(line: 394, column: 9, scope: !4180)
!4190 = !DILocation(line: 394, column: 2, scope: !4180)
!4191 = distinct !DISubprogram(name: "_face_getIFCo", scope: !3, file: !3, line: 752, type: !4192, scopeLine: 753, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !30, retainedNodes: !151)
!4192 = !DISubroutineType(types: !4193)
!4193 = !{!15, !97, !17, !17, !17, !17, !17, !17}
!4194 = !DILocalVariable(name: "f", arg: 1, scope: !4191, file: !3, line: 752, type: !97)
!4195 = !DILocation(line: 752, column: 41, scope: !4191)
!4196 = !DILocalVariable(name: "lvl", arg: 2, scope: !4191, file: !3, line: 752, type: !17)
!4197 = !DILocation(line: 752, column: 48, scope: !4191)
!4198 = !DILocalVariable(name: "S", arg: 3, scope: !4191, file: !3, line: 752, type: !17)
!4199 = !DILocation(line: 752, column: 57, scope: !4191)
!4200 = !DILocalVariable(name: "x", arg: 4, scope: !4191, file: !3, line: 752, type: !17)
!4201 = !DILocation(line: 752, column: 64, scope: !4191)
!4202 = !DILocalVariable(name: "y", arg: 5, scope: !4191, file: !3, line: 752, type: !17)
!4203 = !DILocation(line: 752, column: 71, scope: !4191)
!4204 = !DILocalVariable(name: "levels", arg: 6, scope: !4191, file: !3, line: 752, type: !17)
!4205 = !DILocation(line: 752, column: 78, scope: !4191)
!4206 = !DILocalVariable(name: "dataSize", arg: 7, scope: !4191, file: !3, line: 752, type: !17)
!4207 = !DILocation(line: 752, column: 90, scope: !4191)
!4208 = !DILocalVariable(name: "maxGridSize", scope: !4191, file: !3, line: 754, type: !17)
!4209 = !DILocation(line: 754, column: 6, scope: !4191)
!4210 = !DILocation(line: 754, column: 33, scope: !4191)
!4211 = !DILocation(line: 754, column: 20, scope: !4191)
!4212 = !DILocalVariable(name: "spacing", scope: !4191, file: !3, line: 755, type: !17)
!4213 = !DILocation(line: 755, column: 6, scope: !4191)
!4214 = !DILocation(line: 755, column: 28, scope: !4191)
!4215 = !DILocation(line: 755, column: 36, scope: !4191)
!4216 = !DILocation(line: 755, column: 16, scope: !4191)
!4217 = !DILocalVariable(name: "gridBase", scope: !4191, file: !3, line: 756, type: !142)
!4218 = !DILocation(line: 756, column: 8, scope: !4191)
!4219 = !DILocation(line: 756, column: 38, scope: !4191)
!4220 = !DILocation(line: 756, column: 19, scope: !4191)
!4221 = !DILocation(line: 756, column: 43, scope: !4191)
!4222 = !DILocation(line: 756, column: 59, scope: !4191)
!4223 = !DILocation(line: 756, column: 64, scope: !4191)
!4224 = !DILocation(line: 756, column: 78, scope: !4191)
!4225 = !DILocation(line: 756, column: 92, scope: !4191)
!4226 = !DILocation(line: 756, column: 90, scope: !4191)
!4227 = !DILocation(line: 756, column: 76, scope: !4191)
!4228 = !DILocation(line: 756, column: 61, scope: !4191)
!4229 = !DILocation(line: 756, column: 57, scope: !4191)
!4230 = !DILocation(line: 756, column: 52, scope: !4191)
!4231 = !DILocation(line: 756, column: 41, scope: !4191)
!4232 = !DILocation(line: 757, column: 10, scope: !4191)
!4233 = !DILocation(line: 757, column: 19, scope: !4191)
!4234 = !DILocation(line: 757, column: 31, scope: !4191)
!4235 = !DILocation(line: 757, column: 46, scope: !4191)
!4236 = !DILocation(line: 757, column: 50, scope: !4191)
!4237 = !DILocation(line: 757, column: 48, scope: !4191)
!4238 = !DILocation(line: 757, column: 64, scope: !4191)
!4239 = !DILocation(line: 757, column: 62, scope: !4191)
!4240 = !DILocation(line: 757, column: 69, scope: !4191)
!4241 = !DILocation(line: 757, column: 67, scope: !4191)
!4242 = !DILocation(line: 757, column: 43, scope: !4191)
!4243 = !DILocation(line: 757, column: 28, scope: !4191)
!4244 = !DILocation(line: 757, column: 2, scope: !4191)
!4245 = distinct !DISubprogram(name: "_face_getIECo", scope: !3, file: !3, line: 738, type: !4246, scopeLine: 739, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !30, retainedNodes: !151)
!4246 = !DISubroutineType(types: !4247)
!4247 = !{!15, !97, !17, !17, !17, !17, !17}
!4248 = !DILocalVariable(name: "f", arg: 1, scope: !4245, file: !3, line: 738, type: !97)
!4249 = !DILocation(line: 738, column: 41, scope: !4245)
!4250 = !DILocalVariable(name: "lvl", arg: 2, scope: !4245, file: !3, line: 738, type: !17)
!4251 = !DILocation(line: 738, column: 48, scope: !4245)
!4252 = !DILocalVariable(name: "S", arg: 3, scope: !4245, file: !3, line: 738, type: !17)
!4253 = !DILocation(line: 738, column: 57, scope: !4245)
!4254 = !DILocalVariable(name: "x", arg: 4, scope: !4245, file: !3, line: 738, type: !17)
!4255 = !DILocation(line: 738, column: 64, scope: !4245)
!4256 = !DILocalVariable(name: "levels", arg: 5, scope: !4245, file: !3, line: 738, type: !17)
!4257 = !DILocation(line: 738, column: 71, scope: !4245)
!4258 = !DILocalVariable(name: "dataSize", arg: 6, scope: !4245, file: !3, line: 738, type: !17)
!4259 = !DILocation(line: 738, column: 83, scope: !4245)
!4260 = !DILocalVariable(name: "maxGridSize", scope: !4245, file: !3, line: 740, type: !17)
!4261 = !DILocation(line: 740, column: 6, scope: !4245)
!4262 = !DILocation(line: 740, column: 33, scope: !4245)
!4263 = !DILocation(line: 740, column: 20, scope: !4245)
!4264 = !DILocalVariable(name: "spacing", scope: !4245, file: !3, line: 741, type: !17)
!4265 = !DILocation(line: 741, column: 6, scope: !4245)
!4266 = !DILocation(line: 741, column: 28, scope: !4245)
!4267 = !DILocation(line: 741, column: 36, scope: !4245)
!4268 = !DILocation(line: 741, column: 16, scope: !4245)
!4269 = !DILocalVariable(name: "gridBase", scope: !4245, file: !3, line: 742, type: !142)
!4270 = !DILocation(line: 742, column: 8, scope: !4245)
!4271 = !DILocation(line: 742, column: 38, scope: !4245)
!4272 = !DILocation(line: 742, column: 19, scope: !4245)
!4273 = !DILocation(line: 742, column: 43, scope: !4245)
!4274 = !DILocation(line: 742, column: 59, scope: !4245)
!4275 = !DILocation(line: 742, column: 64, scope: !4245)
!4276 = !DILocation(line: 742, column: 78, scope: !4245)
!4277 = !DILocation(line: 742, column: 92, scope: !4245)
!4278 = !DILocation(line: 742, column: 90, scope: !4245)
!4279 = !DILocation(line: 742, column: 76, scope: !4245)
!4280 = !DILocation(line: 742, column: 61, scope: !4245)
!4281 = !DILocation(line: 742, column: 57, scope: !4245)
!4282 = !DILocation(line: 742, column: 52, scope: !4245)
!4283 = !DILocation(line: 742, column: 41, scope: !4245)
!4284 = !DILocation(line: 743, column: 10, scope: !4245)
!4285 = !DILocation(line: 743, column: 19, scope: !4245)
!4286 = !DILocation(line: 743, column: 30, scope: !4245)
!4287 = !DILocation(line: 743, column: 28, scope: !4245)
!4288 = !DILocation(line: 743, column: 34, scope: !4245)
!4289 = !DILocation(line: 743, column: 32, scope: !4245)
!4290 = !DILocation(line: 743, column: 2, scope: !4245)
!4291 = distinct !DISubprogram(name: "_edge_getCoVert", scope: !3, file: !3, line: 669, type: !4292, scopeLine: 670, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !30, retainedNodes: !151)
!4292 = !DISubroutineType(types: !4293)
!4293 = !{!15, !84, !70, !17, !17, !17}
!4294 = !DILocalVariable(name: "e", arg: 1, scope: !4291, file: !3, line: 669, type: !84)
!4295 = !DILocation(line: 669, column: 39, scope: !4291)
!4296 = !DILocalVariable(name: "v", arg: 2, scope: !4291, file: !3, line: 669, type: !70)
!4297 = !DILocation(line: 669, column: 51, scope: !4291)
!4298 = !DILocalVariable(name: "lvl", arg: 3, scope: !4291, file: !3, line: 669, type: !17)
!4299 = !DILocation(line: 669, column: 58, scope: !4291)
!4300 = !DILocalVariable(name: "x", arg: 4, scope: !4291, file: !3, line: 669, type: !17)
!4301 = !DILocation(line: 669, column: 67, scope: !4291)
!4302 = !DILocalVariable(name: "dataSize", arg: 5, scope: !4291, file: !3, line: 669, type: !17)
!4303 = !DILocation(line: 669, column: 74, scope: !4291)
!4304 = !DILocalVariable(name: "levelBase", scope: !4291, file: !3, line: 671, type: !17)
!4305 = !DILocation(line: 671, column: 6, scope: !4291)
!4306 = !DILocation(line: 671, column: 31, scope: !4291)
!4307 = !DILocation(line: 671, column: 18, scope: !4291)
!4308 = !DILocation(line: 672, column: 6, scope: !4309)
!4309 = distinct !DILexicalBlock(scope: !4291, file: !3, line: 672, column: 6)
!4310 = !DILocation(line: 672, column: 11, scope: !4309)
!4311 = !DILocation(line: 672, column: 14, scope: !4309)
!4312 = !DILocation(line: 672, column: 8, scope: !4309)
!4313 = !DILocation(line: 672, column: 6, scope: !4291)
!4314 = !DILocation(line: 673, column: 29, scope: !4315)
!4315 = distinct !DILexicalBlock(scope: !4309, file: !3, line: 672, column: 18)
!4316 = !DILocation(line: 673, column: 11, scope: !4315)
!4317 = !DILocation(line: 673, column: 32, scope: !4315)
!4318 = !DILocation(line: 673, column: 44, scope: !4315)
!4319 = !DILocation(line: 673, column: 56, scope: !4315)
!4320 = !DILocation(line: 673, column: 54, scope: !4315)
!4321 = !DILocation(line: 673, column: 41, scope: !4315)
!4322 = !DILocation(line: 673, column: 3, scope: !4315)
!4323 = !DILocation(line: 676, column: 29, scope: !4324)
!4324 = distinct !DILexicalBlock(scope: !4309, file: !3, line: 675, column: 7)
!4325 = !DILocation(line: 676, column: 11, scope: !4324)
!4326 = !DILocation(line: 676, column: 32, scope: !4324)
!4327 = !DILocation(line: 676, column: 44, scope: !4324)
!4328 = !DILocation(line: 676, column: 62, scope: !4324)
!4329 = !DILocation(line: 676, column: 59, scope: !4324)
!4330 = !DILocation(line: 676, column: 54, scope: !4324)
!4331 = !DILocation(line: 676, column: 69, scope: !4324)
!4332 = !DILocation(line: 676, column: 67, scope: !4324)
!4333 = !DILocation(line: 676, column: 41, scope: !4324)
!4334 = !DILocation(line: 676, column: 3, scope: !4324)
!4335 = !DILocation(line: 678, column: 1, scope: !4291)
!4336 = distinct !DISubprogram(name: "ccgSubSurf_updateToFaces", scope: !3, file: !3, line: 2560, type: !3929, scopeLine: 2561, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, retainedNodes: !151)
!4337 = !DILocalVariable(name: "ss", arg: 1, scope: !4336, file: !3, line: 2560, type: !187)
!4338 = !DILocation(line: 2560, column: 47, scope: !4336)
!4339 = !DILocalVariable(name: "lvl", arg: 2, scope: !4336, file: !3, line: 2560, type: !17)
!4340 = !DILocation(line: 2560, column: 55, scope: !4336)
!4341 = !DILocalVariable(name: "effectedF", arg: 3, scope: !4336, file: !3, line: 2560, type: !96)
!4342 = !DILocation(line: 2560, column: 70, scope: !4336)
!4343 = !DILocalVariable(name: "numEffectedF", arg: 4, scope: !4336, file: !3, line: 2560, type: !17)
!4344 = !DILocation(line: 2560, column: 85, scope: !4336)
!4345 = !DILocalVariable(name: "i", scope: !4336, file: !3, line: 2562, type: !17)
!4346 = !DILocation(line: 2562, column: 6, scope: !4336)
!4347 = !DILocalVariable(name: "S", scope: !4336, file: !3, line: 2562, type: !17)
!4348 = !DILocation(line: 2562, column: 9, scope: !4336)
!4349 = !DILocalVariable(name: "x", scope: !4336, file: !3, line: 2562, type: !17)
!4350 = !DILocation(line: 2562, column: 12, scope: !4336)
!4351 = !DILocalVariable(name: "gridSize", scope: !4336, file: !3, line: 2562, type: !17)
!4352 = !DILocation(line: 2562, column: 15, scope: !4336)
!4353 = !DILocalVariable(name: "cornerIdx", scope: !4336, file: !3, line: 2562, type: !17)
!4354 = !DILocation(line: 2562, column: 25, scope: !4336)
!4355 = !DILocalVariable(name: "subdivLevels", scope: !4336, file: !3, line: 2562, type: !17)
!4356 = !DILocation(line: 2562, column: 36, scope: !4336)
!4357 = !DILocalVariable(name: "vertDataSize", scope: !4336, file: !3, line: 2563, type: !17)
!4358 = !DILocation(line: 2563, column: 6, scope: !4336)
!4359 = !DILocation(line: 2563, column: 21, scope: !4336)
!4360 = !DILocation(line: 2563, column: 25, scope: !4336)
!4361 = !DILocation(line: 2563, column: 33, scope: !4336)
!4362 = !DILocalVariable(name: "freeF", scope: !4336, file: !3, line: 2563, type: !17)
!4363 = !DILocation(line: 2563, column: 47, scope: !4336)
!4364 = !DILocation(line: 2565, column: 17, scope: !4336)
!4365 = !DILocation(line: 2565, column: 21, scope: !4336)
!4366 = !DILocation(line: 2565, column: 15, scope: !4336)
!4367 = !DILocation(line: 2566, column: 9, scope: !4336)
!4368 = !DILocation(line: 2566, column: 8, scope: !4336)
!4369 = !DILocation(line: 2566, column: 16, scope: !4336)
!4370 = !DILocation(line: 2566, column: 22, scope: !4336)
!4371 = !DILocation(line: 2566, column: 6, scope: !4336)
!4372 = !DILocation(line: 2567, column: 26, scope: !4336)
!4373 = !DILocation(line: 2567, column: 13, scope: !4336)
!4374 = !DILocation(line: 2567, column: 11, scope: !4336)
!4375 = !DILocation(line: 2568, column: 14, scope: !4336)
!4376 = !DILocation(line: 2568, column: 23, scope: !4336)
!4377 = !DILocation(line: 2568, column: 12, scope: !4336)
!4378 = !DILocation(line: 2570, column: 23, scope: !4336)
!4379 = !DILocation(line: 2570, column: 2, scope: !4336)
!4380 = !DILocation(line: 2572, column: 9, scope: !4381)
!4381 = distinct !DILexicalBlock(scope: !4336, file: !3, line: 2572, column: 2)
!4382 = !DILocation(line: 2572, column: 7, scope: !4381)
!4383 = !DILocation(line: 2572, column: 14, scope: !4384)
!4384 = distinct !DILexicalBlock(scope: !4381, file: !3, line: 2572, column: 2)
!4385 = !DILocation(line: 2572, column: 18, scope: !4384)
!4386 = !DILocation(line: 2572, column: 16, scope: !4384)
!4387 = !DILocation(line: 2572, column: 2, scope: !4381)
!4388 = !DILocalVariable(name: "f", scope: !4389, file: !3, line: 2573, type: !97)
!4389 = distinct !DILexicalBlock(scope: !4384, file: !3, line: 2572, column: 37)
!4390 = !DILocation(line: 2573, column: 12, scope: !4389)
!4391 = !DILocation(line: 2573, column: 16, scope: !4389)
!4392 = !DILocation(line: 2573, column: 26, scope: !4389)
!4393 = !DILocation(line: 2575, column: 10, scope: !4394)
!4394 = distinct !DILexicalBlock(scope: !4389, file: !3, line: 2575, column: 3)
!4395 = !DILocation(line: 2575, column: 8, scope: !4394)
!4396 = !DILocation(line: 2575, column: 15, scope: !4397)
!4397 = distinct !DILexicalBlock(scope: !4394, file: !3, line: 2575, column: 3)
!4398 = !DILocation(line: 2575, column: 19, scope: !4397)
!4399 = !DILocation(line: 2575, column: 22, scope: !4397)
!4400 = !DILocation(line: 2575, column: 17, scope: !4397)
!4401 = !DILocation(line: 2575, column: 3, scope: !4394)
!4402 = !DILocalVariable(name: "prevS", scope: !4403, file: !3, line: 2576, type: !17)
!4403 = distinct !DILexicalBlock(scope: !4397, file: !3, line: 2575, column: 37)
!4404 = !DILocation(line: 2576, column: 8, scope: !4403)
!4405 = !DILocation(line: 2576, column: 17, scope: !4403)
!4406 = !DILocation(line: 2576, column: 21, scope: !4403)
!4407 = !DILocation(line: 2576, column: 24, scope: !4403)
!4408 = !DILocation(line: 2576, column: 19, scope: !4403)
!4409 = !DILocation(line: 2576, column: 33, scope: !4403)
!4410 = !DILocation(line: 2576, column: 40, scope: !4403)
!4411 = !DILocation(line: 2576, column: 43, scope: !4403)
!4412 = !DILocation(line: 2576, column: 38, scope: !4403)
!4413 = !DILocalVariable(name: "e", scope: !4403, file: !3, line: 2577, type: !84)
!4414 = !DILocation(line: 2577, column: 13, scope: !4403)
!4415 = !DILocation(line: 2577, column: 31, scope: !4403)
!4416 = !DILocation(line: 2577, column: 17, scope: !4403)
!4417 = !DILocation(line: 2577, column: 34, scope: !4403)
!4418 = !DILocalVariable(name: "prevE", scope: !4403, file: !3, line: 2578, type: !84)
!4419 = !DILocation(line: 2578, column: 13, scope: !4403)
!4420 = !DILocation(line: 2578, column: 35, scope: !4403)
!4421 = !DILocation(line: 2578, column: 21, scope: !4403)
!4422 = !DILocation(line: 2578, column: 38, scope: !4403)
!4423 = !DILocation(line: 2580, column: 11, scope: !4424)
!4424 = distinct !DILexicalBlock(scope: !4403, file: !3, line: 2580, column: 4)
!4425 = !DILocation(line: 2580, column: 9, scope: !4424)
!4426 = !DILocation(line: 2580, column: 16, scope: !4427)
!4427 = distinct !DILexicalBlock(scope: !4424, file: !3, line: 2580, column: 4)
!4428 = !DILocation(line: 2580, column: 20, scope: !4427)
!4429 = !DILocation(line: 2580, column: 18, scope: !4427)
!4430 = !DILocation(line: 2580, column: 4, scope: !4424)
!4431 = !DILocalVariable(name: "eI", scope: !4432, file: !3, line: 2581, type: !17)
!4432 = distinct !DILexicalBlock(scope: !4427, file: !3, line: 2580, column: 35)
!4433 = !DILocation(line: 2581, column: 9, scope: !4432)
!4434 = !DILocation(line: 2581, column: 14, scope: !4432)
!4435 = !DILocation(line: 2581, column: 23, scope: !4432)
!4436 = !DILocation(line: 2581, column: 29, scope: !4432)
!4437 = !DILocation(line: 2581, column: 27, scope: !4432)
!4438 = !DILocation(line: 2582, column: 18, scope: !4432)
!4439 = !DILocation(line: 2582, column: 73, scope: !4432)
!4440 = !DILocation(line: 2582, column: 90, scope: !4432)
!4441 = !DILocation(line: 2582, column: 76, scope: !4432)
!4442 = !DILocation(line: 2582, column: 93, scope: !4432)
!4443 = !DILocation(line: 2582, column: 97, scope: !4432)
!4444 = !DILocation(line: 2582, column: 102, scope: !4432)
!4445 = !DILocation(line: 2582, column: 106, scope: !4432)
!4446 = !DILocation(line: 2582, column: 57, scope: !4432)
!4447 = !DILocation(line: 2582, column: 121, scope: !4432)
!4448 = !DILocation(line: 2582, column: 5, scope: !4432)
!4449 = !DILocation(line: 2583, column: 18, scope: !4432)
!4450 = !DILocation(line: 2583, column: 73, scope: !4432)
!4451 = !DILocation(line: 2583, column: 94, scope: !4432)
!4452 = !DILocation(line: 2583, column: 80, scope: !4432)
!4453 = !DILocation(line: 2583, column: 97, scope: !4432)
!4454 = !DILocation(line: 2583, column: 101, scope: !4432)
!4455 = !DILocation(line: 2583, column: 106, scope: !4432)
!4456 = !DILocation(line: 2583, column: 110, scope: !4432)
!4457 = !DILocation(line: 2583, column: 57, scope: !4432)
!4458 = !DILocation(line: 2583, column: 125, scope: !4432)
!4459 = !DILocation(line: 2583, column: 5, scope: !4432)
!4460 = !DILocation(line: 2584, column: 4, scope: !4432)
!4461 = !DILocation(line: 2580, column: 31, scope: !4427)
!4462 = !DILocation(line: 2580, column: 4, scope: !4427)
!4463 = distinct !{!4463, !4430, !4464}
!4464 = !DILocation(line: 2584, column: 4, scope: !4424)
!4465 = !DILocation(line: 2586, column: 11, scope: !4466)
!4466 = distinct !DILexicalBlock(scope: !4403, file: !3, line: 2586, column: 4)
!4467 = !DILocation(line: 2586, column: 9, scope: !4466)
!4468 = !DILocation(line: 2586, column: 16, scope: !4469)
!4469 = distinct !DILexicalBlock(scope: !4466, file: !3, line: 2586, column: 4)
!4470 = !DILocation(line: 2586, column: 20, scope: !4469)
!4471 = !DILocation(line: 2586, column: 29, scope: !4469)
!4472 = !DILocation(line: 2586, column: 18, scope: !4469)
!4473 = !DILocation(line: 2586, column: 4, scope: !4466)
!4474 = !DILocation(line: 2587, column: 18, scope: !4475)
!4475 = distinct !DILexicalBlock(scope: !4469, file: !3, line: 2586, column: 39)
!4476 = !DILocation(line: 2587, column: 49, scope: !4475)
!4477 = !DILocation(line: 2587, column: 81, scope: !4475)
!4478 = !DILocation(line: 2587, column: 5, scope: !4475)
!4479 = !DILocation(line: 2588, column: 18, scope: !4475)
!4480 = !DILocation(line: 2588, column: 49, scope: !4475)
!4481 = !DILocation(line: 2588, column: 77, scope: !4475)
!4482 = !DILocation(line: 2588, column: 5, scope: !4475)
!4483 = !DILocation(line: 2589, column: 4, scope: !4475)
!4484 = !DILocation(line: 2586, column: 35, scope: !4469)
!4485 = !DILocation(line: 2586, column: 4, scope: !4469)
!4486 = distinct !{!4486, !4473, !4487}
!4487 = !DILocation(line: 2589, column: 4, scope: !4466)
!4488 = !DILocation(line: 2591, column: 17, scope: !4403)
!4489 = !DILocation(line: 2591, column: 76, scope: !4403)
!4490 = !DILocation(line: 2591, column: 57, scope: !4403)
!4491 = !DILocation(line: 2591, column: 48, scope: !4403)
!4492 = !DILocation(line: 2591, column: 80, scope: !4403)
!4493 = !DILocation(line: 2591, column: 4, scope: !4403)
!4494 = !DILocation(line: 2592, column: 17, scope: !4403)
!4495 = !DILocation(line: 2592, column: 64, scope: !4403)
!4496 = !DILocation(line: 2592, column: 102, scope: !4403)
!4497 = !DILocation(line: 2592, column: 4, scope: !4403)
!4498 = !DILocation(line: 2593, column: 3, scope: !4403)
!4499 = !DILocation(line: 2575, column: 33, scope: !4397)
!4500 = !DILocation(line: 2575, column: 3, scope: !4397)
!4501 = distinct !{!4501, !4401, !4502}
!4502 = !DILocation(line: 2593, column: 3, scope: !4394)
!4503 = !DILocation(line: 2594, column: 2, scope: !4389)
!4504 = !DILocation(line: 2572, column: 33, scope: !4384)
!4505 = !DILocation(line: 2572, column: 2, scope: !4384)
!4506 = distinct !{!4506, !4387, !4507}
!4507 = !DILocation(line: 2594, column: 2, scope: !4381)
!4508 = !DILocation(line: 2596, column: 6, scope: !4509)
!4509 = distinct !DILexicalBlock(scope: !4336, file: !3, line: 2596, column: 6)
!4510 = !DILocation(line: 2596, column: 6, scope: !4336)
!4511 = !DILocation(line: 2596, column: 13, scope: !4509)
!4512 = !DILocation(line: 2596, column: 23, scope: !4509)
!4513 = !DILocation(line: 2598, column: 2, scope: !4336)
!4514 = distinct !DISubprogram(name: "ccgSubSurf_stitchFaces", scope: !3, file: !3, line: 2603, type: !3929, scopeLine: 2604, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, retainedNodes: !151)
!4515 = !DILocalVariable(name: "ss", arg: 1, scope: !4514, file: !3, line: 2603, type: !187)
!4516 = !DILocation(line: 2603, column: 45, scope: !4514)
!4517 = !DILocalVariable(name: "lvl", arg: 2, scope: !4514, file: !3, line: 2603, type: !17)
!4518 = !DILocation(line: 2603, column: 53, scope: !4514)
!4519 = !DILocalVariable(name: "effectedF", arg: 3, scope: !4514, file: !3, line: 2603, type: !96)
!4520 = !DILocation(line: 2603, column: 68, scope: !4514)
!4521 = !DILocalVariable(name: "numEffectedF", arg: 4, scope: !4514, file: !3, line: 2603, type: !17)
!4522 = !DILocation(line: 2603, column: 83, scope: !4514)
!4523 = !DILocalVariable(name: "effectedV", scope: !4514, file: !3, line: 2605, type: !141)
!4524 = !DILocation(line: 2605, column: 12, scope: !4514)
!4525 = !DILocalVariable(name: "effectedE", scope: !4514, file: !3, line: 2606, type: !83)
!4526 = !DILocation(line: 2606, column: 12, scope: !4514)
!4527 = !DILocalVariable(name: "numEffectedV", scope: !4514, file: !3, line: 2607, type: !17)
!4528 = !DILocation(line: 2607, column: 6, scope: !4514)
!4529 = !DILocalVariable(name: "numEffectedE", scope: !4514, file: !3, line: 2607, type: !17)
!4530 = !DILocation(line: 2607, column: 20, scope: !4514)
!4531 = !DILocalVariable(name: "freeF", scope: !4514, file: !3, line: 2607, type: !17)
!4532 = !DILocation(line: 2607, column: 34, scope: !4514)
!4533 = !DILocalVariable(name: "i", scope: !4514, file: !3, line: 2608, type: !17)
!4534 = !DILocation(line: 2608, column: 6, scope: !4514)
!4535 = !DILocalVariable(name: "S", scope: !4514, file: !3, line: 2608, type: !17)
!4536 = !DILocation(line: 2608, column: 9, scope: !4514)
!4537 = !DILocalVariable(name: "x", scope: !4514, file: !3, line: 2608, type: !17)
!4538 = !DILocation(line: 2608, column: 12, scope: !4514)
!4539 = !DILocalVariable(name: "gridSize", scope: !4514, file: !3, line: 2608, type: !17)
!4540 = !DILocation(line: 2608, column: 15, scope: !4514)
!4541 = !DILocalVariable(name: "cornerIdx", scope: !4514, file: !3, line: 2608, type: !17)
!4542 = !DILocation(line: 2608, column: 25, scope: !4514)
!4543 = !DILocalVariable(name: "subdivLevels", scope: !4514, file: !3, line: 2608, type: !17)
!4544 = !DILocation(line: 2608, column: 36, scope: !4514)
!4545 = !DILocalVariable(name: "edgeSize", scope: !4514, file: !3, line: 2608, type: !17)
!4546 = !DILocation(line: 2608, column: 50, scope: !4514)
!4547 = !DILocalVariable(name: "vertDataSize", scope: !4514, file: !3, line: 2609, type: !17)
!4548 = !DILocation(line: 2609, column: 6, scope: !4514)
!4549 = !DILocation(line: 2609, column: 21, scope: !4514)
!4550 = !DILocation(line: 2609, column: 25, scope: !4514)
!4551 = !DILocation(line: 2609, column: 33, scope: !4514)
!4552 = !DILocation(line: 2611, column: 17, scope: !4514)
!4553 = !DILocation(line: 2611, column: 21, scope: !4514)
!4554 = !DILocation(line: 2611, column: 15, scope: !4514)
!4555 = !DILocation(line: 2612, column: 9, scope: !4514)
!4556 = !DILocation(line: 2612, column: 8, scope: !4514)
!4557 = !DILocation(line: 2612, column: 16, scope: !4514)
!4558 = !DILocation(line: 2612, column: 22, scope: !4514)
!4559 = !DILocation(line: 2612, column: 6, scope: !4514)
!4560 = !DILocation(line: 2613, column: 26, scope: !4514)
!4561 = !DILocation(line: 2613, column: 13, scope: !4514)
!4562 = !DILocation(line: 2613, column: 11, scope: !4514)
!4563 = !DILocation(line: 2614, column: 26, scope: !4514)
!4564 = !DILocation(line: 2614, column: 13, scope: !4514)
!4565 = !DILocation(line: 2614, column: 11, scope: !4514)
!4566 = !DILocation(line: 2615, column: 14, scope: !4514)
!4567 = !DILocation(line: 2615, column: 23, scope: !4514)
!4568 = !DILocation(line: 2615, column: 12, scope: !4514)
!4569 = !DILocation(line: 2617, column: 23, scope: !4514)
!4570 = !DILocation(line: 2617, column: 2, scope: !4514)
!4571 = !DILocation(line: 2618, column: 37, scope: !4514)
!4572 = !DILocation(line: 2618, column: 41, scope: !4514)
!4573 = !DILocation(line: 2618, column: 52, scope: !4514)
!4574 = !DILocation(line: 2618, column: 2, scope: !4514)
!4575 = !DILocation(line: 2622, column: 9, scope: !4576)
!4576 = distinct !DILexicalBlock(scope: !4514, file: !3, line: 2622, column: 2)
!4577 = !DILocation(line: 2622, column: 7, scope: !4576)
!4578 = !DILocation(line: 2622, column: 14, scope: !4579)
!4579 = distinct !DILexicalBlock(scope: !4576, file: !3, line: 2622, column: 2)
!4580 = !DILocation(line: 2622, column: 18, scope: !4579)
!4581 = !DILocation(line: 2622, column: 16, scope: !4579)
!4582 = !DILocation(line: 2622, column: 2, scope: !4576)
!4583 = !DILocalVariable(name: "v", scope: !4584, file: !3, line: 2623, type: !70)
!4584 = distinct !DILexicalBlock(scope: !4579, file: !3, line: 2622, column: 37)
!4585 = !DILocation(line: 2623, column: 12, scope: !4584)
!4586 = !DILocation(line: 2623, column: 16, scope: !4584)
!4587 = !DILocation(line: 2623, column: 26, scope: !4584)
!4588 = !DILocation(line: 2624, column: 7, scope: !4589)
!4589 = distinct !DILexicalBlock(scope: !4584, file: !3, line: 2624, column: 7)
!4590 = !DILocation(line: 2624, column: 10, scope: !4589)
!4591 = !DILocation(line: 2624, column: 7, scope: !4584)
!4592 = !DILocation(line: 2625, column: 17, scope: !4589)
!4593 = !DILocation(line: 2625, column: 37, scope: !4589)
!4594 = !DILocation(line: 2625, column: 4, scope: !4589)
!4595 = !DILocation(line: 2626, column: 2, scope: !4584)
!4596 = !DILocation(line: 2622, column: 33, scope: !4579)
!4597 = !DILocation(line: 2622, column: 2, scope: !4579)
!4598 = distinct !{!4598, !4582, !4599}
!4599 = !DILocation(line: 2626, column: 2, scope: !4576)
!4600 = !DILocation(line: 2628, column: 9, scope: !4601)
!4601 = distinct !DILexicalBlock(scope: !4514, file: !3, line: 2628, column: 2)
!4602 = !DILocation(line: 2628, column: 7, scope: !4601)
!4603 = !DILocation(line: 2628, column: 14, scope: !4604)
!4604 = distinct !DILexicalBlock(scope: !4601, file: !3, line: 2628, column: 2)
!4605 = !DILocation(line: 2628, column: 18, scope: !4604)
!4606 = !DILocation(line: 2628, column: 16, scope: !4604)
!4607 = !DILocation(line: 2628, column: 2, scope: !4601)
!4608 = !DILocalVariable(name: "e", scope: !4609, file: !3, line: 2629, type: !84)
!4609 = distinct !DILexicalBlock(scope: !4604, file: !3, line: 2628, column: 37)
!4610 = !DILocation(line: 2629, column: 12, scope: !4609)
!4611 = !DILocation(line: 2629, column: 16, scope: !4609)
!4612 = !DILocation(line: 2629, column: 26, scope: !4609)
!4613 = !DILocation(line: 2631, column: 7, scope: !4614)
!4614 = distinct !DILexicalBlock(scope: !4609, file: !3, line: 2631, column: 7)
!4615 = !DILocation(line: 2631, column: 10, scope: !4614)
!4616 = !DILocation(line: 2631, column: 7, scope: !4609)
!4617 = !DILocation(line: 2632, column: 11, scope: !4618)
!4618 = distinct !DILexicalBlock(scope: !4614, file: !3, line: 2632, column: 4)
!4619 = !DILocation(line: 2632, column: 9, scope: !4618)
!4620 = !DILocation(line: 2632, column: 16, scope: !4621)
!4621 = distinct !DILexicalBlock(scope: !4618, file: !3, line: 2632, column: 4)
!4622 = !DILocation(line: 2632, column: 20, scope: !4621)
!4623 = !DILocation(line: 2632, column: 18, scope: !4621)
!4624 = !DILocation(line: 2632, column: 4, scope: !4618)
!4625 = !DILocation(line: 2633, column: 18, scope: !4621)
!4626 = !DILocation(line: 2633, column: 41, scope: !4621)
!4627 = !DILocation(line: 2633, column: 5, scope: !4621)
!4628 = !DILocation(line: 2632, column: 31, scope: !4621)
!4629 = !DILocation(line: 2632, column: 4, scope: !4621)
!4630 = distinct !{!4630, !4624, !4631}
!4631 = !DILocation(line: 2633, column: 43, scope: !4618)
!4632 = !DILocation(line: 2634, column: 2, scope: !4609)
!4633 = !DILocation(line: 2628, column: 33, scope: !4604)
!4634 = !DILocation(line: 2628, column: 2, scope: !4604)
!4635 = distinct !{!4635, !4607, !4636}
!4636 = !DILocation(line: 2634, column: 2, scope: !4601)
!4637 = !DILocation(line: 2637, column: 9, scope: !4638)
!4638 = distinct !DILexicalBlock(scope: !4514, file: !3, line: 2637, column: 2)
!4639 = !DILocation(line: 2637, column: 7, scope: !4638)
!4640 = !DILocation(line: 2637, column: 14, scope: !4641)
!4641 = distinct !DILexicalBlock(scope: !4638, file: !3, line: 2637, column: 2)
!4642 = !DILocation(line: 2637, column: 18, scope: !4641)
!4643 = !DILocation(line: 2637, column: 16, scope: !4641)
!4644 = !DILocation(line: 2637, column: 2, scope: !4638)
!4645 = !DILocalVariable(name: "f", scope: !4646, file: !3, line: 2638, type: !97)
!4646 = distinct !DILexicalBlock(scope: !4641, file: !3, line: 2637, column: 37)
!4647 = !DILocation(line: 2638, column: 12, scope: !4646)
!4648 = !DILocation(line: 2638, column: 16, scope: !4646)
!4649 = !DILocation(line: 2638, column: 26, scope: !4646)
!4650 = !DILocation(line: 2640, column: 44, scope: !4646)
!4651 = !DILocation(line: 2640, column: 25, scope: !4646)
!4652 = !DILocation(line: 2640, column: 16, scope: !4646)
!4653 = !DILocation(line: 2640, column: 48, scope: !4646)
!4654 = !DILocation(line: 2640, column: 3, scope: !4646)
!4655 = !DILocation(line: 2642, column: 10, scope: !4656)
!4656 = distinct !DILexicalBlock(scope: !4646, file: !3, line: 2642, column: 3)
!4657 = !DILocation(line: 2642, column: 8, scope: !4656)
!4658 = !DILocation(line: 2642, column: 15, scope: !4659)
!4659 = distinct !DILexicalBlock(scope: !4656, file: !3, line: 2642, column: 3)
!4660 = !DILocation(line: 2642, column: 19, scope: !4659)
!4661 = !DILocation(line: 2642, column: 22, scope: !4659)
!4662 = !DILocation(line: 2642, column: 17, scope: !4659)
!4663 = !DILocation(line: 2642, column: 3, scope: !4656)
!4664 = !DILocation(line: 2643, column: 11, scope: !4665)
!4665 = distinct !DILexicalBlock(scope: !4659, file: !3, line: 2643, column: 4)
!4666 = !DILocation(line: 2643, column: 9, scope: !4665)
!4667 = !DILocation(line: 2643, column: 16, scope: !4668)
!4668 = distinct !DILexicalBlock(scope: !4665, file: !3, line: 2643, column: 4)
!4669 = !DILocation(line: 2643, column: 20, scope: !4668)
!4670 = !DILocation(line: 2643, column: 18, scope: !4668)
!4671 = !DILocation(line: 2643, column: 4, scope: !4665)
!4672 = !DILocation(line: 2644, column: 18, scope: !4668)
!4673 = !DILocation(line: 2644, column: 46, scope: !4668)
!4674 = !DILocation(line: 2644, column: 5, scope: !4668)
!4675 = !DILocation(line: 2643, column: 31, scope: !4668)
!4676 = !DILocation(line: 2643, column: 4, scope: !4668)
!4677 = distinct !{!4677, !4671, !4678}
!4678 = !DILocation(line: 2644, column: 48, scope: !4665)
!4679 = !DILocation(line: 2642, column: 33, scope: !4659)
!4680 = !DILocation(line: 2642, column: 3, scope: !4659)
!4681 = distinct !{!4681, !4663, !4682}
!4682 = !DILocation(line: 2644, column: 48, scope: !4656)
!4683 = !DILocation(line: 2646, column: 10, scope: !4684)
!4684 = distinct !DILexicalBlock(scope: !4646, file: !3, line: 2646, column: 3)
!4685 = !DILocation(line: 2646, column: 8, scope: !4684)
!4686 = !DILocation(line: 2646, column: 15, scope: !4687)
!4687 = distinct !DILexicalBlock(scope: !4684, file: !3, line: 2646, column: 3)
!4688 = !DILocation(line: 2646, column: 19, scope: !4687)
!4689 = !DILocation(line: 2646, column: 22, scope: !4687)
!4690 = !DILocation(line: 2646, column: 17, scope: !4687)
!4691 = !DILocation(line: 2646, column: 3, scope: !4684)
!4692 = !DILocalVariable(name: "prevS", scope: !4693, file: !3, line: 2647, type: !17)
!4693 = distinct !DILexicalBlock(scope: !4687, file: !3, line: 2646, column: 37)
!4694 = !DILocation(line: 2647, column: 8, scope: !4693)
!4695 = !DILocation(line: 2647, column: 17, scope: !4693)
!4696 = !DILocation(line: 2647, column: 21, scope: !4693)
!4697 = !DILocation(line: 2647, column: 24, scope: !4693)
!4698 = !DILocation(line: 2647, column: 19, scope: !4693)
!4699 = !DILocation(line: 2647, column: 33, scope: !4693)
!4700 = !DILocation(line: 2647, column: 40, scope: !4693)
!4701 = !DILocation(line: 2647, column: 43, scope: !4693)
!4702 = !DILocation(line: 2647, column: 38, scope: !4693)
!4703 = !DILocalVariable(name: "e", scope: !4693, file: !3, line: 2648, type: !84)
!4704 = !DILocation(line: 2648, column: 13, scope: !4693)
!4705 = !DILocation(line: 2648, column: 31, scope: !4693)
!4706 = !DILocation(line: 2648, column: 17, scope: !4693)
!4707 = !DILocation(line: 2648, column: 34, scope: !4693)
!4708 = !DILocalVariable(name: "prevE", scope: !4693, file: !3, line: 2649, type: !84)
!4709 = !DILocation(line: 2649, column: 13, scope: !4693)
!4710 = !DILocation(line: 2649, column: 35, scope: !4693)
!4711 = !DILocation(line: 2649, column: 21, scope: !4693)
!4712 = !DILocation(line: 2649, column: 38, scope: !4693)
!4713 = !DILocation(line: 2651, column: 44, scope: !4693)
!4714 = !DILocation(line: 2651, column: 25, scope: !4693)
!4715 = !DILocation(line: 2651, column: 16, scope: !4693)
!4716 = !DILocation(line: 2651, column: 48, scope: !4693)
!4717 = !DILocation(line: 2651, column: 79, scope: !4693)
!4718 = !DILocation(line: 2651, column: 4, scope: !4693)
!4719 = !DILocation(line: 2652, column: 22, scope: !4720)
!4720 = distinct !DILexicalBlock(scope: !4693, file: !3, line: 2652, column: 8)
!4721 = !DILocation(line: 2652, column: 8, scope: !4720)
!4722 = !DILocation(line: 2652, column: 25, scope: !4720)
!4723 = !DILocation(line: 2652, column: 29, scope: !4720)
!4724 = !DILocation(line: 2652, column: 35, scope: !4720)
!4725 = !DILocation(line: 2652, column: 8, scope: !4693)
!4726 = !DILocation(line: 2653, column: 17, scope: !4720)
!4727 = !DILocation(line: 2653, column: 55, scope: !4720)
!4728 = !DILocation(line: 2653, column: 102, scope: !4720)
!4729 = !DILocation(line: 2653, column: 5, scope: !4720)
!4730 = !DILocation(line: 2655, column: 11, scope: !4731)
!4731 = distinct !DILexicalBlock(scope: !4693, file: !3, line: 2655, column: 4)
!4732 = !DILocation(line: 2655, column: 9, scope: !4731)
!4733 = !DILocation(line: 2655, column: 16, scope: !4734)
!4734 = distinct !DILexicalBlock(scope: !4731, file: !3, line: 2655, column: 4)
!4735 = !DILocation(line: 2655, column: 20, scope: !4734)
!4736 = !DILocation(line: 2655, column: 29, scope: !4734)
!4737 = !DILocation(line: 2655, column: 18, scope: !4734)
!4738 = !DILocation(line: 2655, column: 4, scope: !4731)
!4739 = !DILocation(line: 2656, column: 17, scope: !4740)
!4740 = distinct !DILexicalBlock(scope: !4734, file: !3, line: 2655, column: 39)
!4741 = !DILocation(line: 2656, column: 45, scope: !4740)
!4742 = !DILocation(line: 2656, column: 76, scope: !4740)
!4743 = !DILocation(line: 2656, column: 5, scope: !4740)
!4744 = !DILocation(line: 2657, column: 17, scope: !4740)
!4745 = !DILocation(line: 2657, column: 49, scope: !4740)
!4746 = !DILocation(line: 2657, column: 80, scope: !4740)
!4747 = !DILocation(line: 2657, column: 5, scope: !4740)
!4748 = !DILocation(line: 2658, column: 4, scope: !4740)
!4749 = !DILocation(line: 2655, column: 35, scope: !4734)
!4750 = !DILocation(line: 2655, column: 4, scope: !4734)
!4751 = distinct !{!4751, !4738, !4752}
!4752 = !DILocation(line: 2658, column: 4, scope: !4731)
!4753 = !DILocation(line: 2660, column: 11, scope: !4754)
!4754 = distinct !DILexicalBlock(scope: !4693, file: !3, line: 2660, column: 4)
!4755 = !DILocation(line: 2660, column: 9, scope: !4754)
!4756 = !DILocation(line: 2660, column: 16, scope: !4757)
!4757 = distinct !DILexicalBlock(scope: !4754, file: !3, line: 2660, column: 4)
!4758 = !DILocation(line: 2660, column: 20, scope: !4757)
!4759 = !DILocation(line: 2660, column: 29, scope: !4757)
!4760 = !DILocation(line: 2660, column: 18, scope: !4757)
!4761 = !DILocation(line: 2660, column: 4, scope: !4754)
!4762 = !DILocalVariable(name: "eI", scope: !4763, file: !3, line: 2661, type: !17)
!4763 = distinct !DILexicalBlock(scope: !4757, file: !3, line: 2660, column: 39)
!4764 = !DILocation(line: 2661, column: 9, scope: !4763)
!4765 = !DILocation(line: 2661, column: 14, scope: !4763)
!4766 = !DILocation(line: 2661, column: 23, scope: !4763)
!4767 = !DILocation(line: 2661, column: 29, scope: !4763)
!4768 = !DILocation(line: 2661, column: 27, scope: !4763)
!4769 = !DILocation(line: 2662, column: 23, scope: !4770)
!4770 = distinct !DILexicalBlock(scope: !4763, file: !3, line: 2662, column: 9)
!4771 = !DILocation(line: 2662, column: 9, scope: !4770)
!4772 = !DILocation(line: 2662, column: 26, scope: !4770)
!4773 = !DILocation(line: 2662, column: 30, scope: !4770)
!4774 = !DILocation(line: 2662, column: 36, scope: !4770)
!4775 = !DILocation(line: 2662, column: 9, scope: !4763)
!4776 = !DILocation(line: 2663, column: 34, scope: !4770)
!4777 = !DILocation(line: 2663, column: 51, scope: !4770)
!4778 = !DILocation(line: 2663, column: 37, scope: !4770)
!4779 = !DILocation(line: 2663, column: 54, scope: !4770)
!4780 = !DILocation(line: 2663, column: 58, scope: !4770)
!4781 = !DILocation(line: 2663, column: 63, scope: !4770)
!4782 = !DILocation(line: 2663, column: 67, scope: !4770)
!4783 = !DILocation(line: 2663, column: 18, scope: !4770)
!4784 = !DILocation(line: 2663, column: 82, scope: !4770)
!4785 = !DILocation(line: 2663, column: 121, scope: !4770)
!4786 = !DILocation(line: 2663, column: 6, scope: !4770)
!4787 = !DILocation(line: 2664, column: 23, scope: !4788)
!4788 = distinct !DILexicalBlock(scope: !4763, file: !3, line: 2664, column: 9)
!4789 = !DILocation(line: 2664, column: 9, scope: !4788)
!4790 = !DILocation(line: 2664, column: 26, scope: !4788)
!4791 = !DILocation(line: 2664, column: 34, scope: !4788)
!4792 = !DILocation(line: 2664, column: 40, scope: !4788)
!4793 = !DILocation(line: 2664, column: 9, scope: !4763)
!4794 = !DILocation(line: 2665, column: 10, scope: !4795)
!4795 = distinct !DILexicalBlock(scope: !4788, file: !3, line: 2665, column: 10)
!4796 = !DILocation(line: 2665, column: 12, scope: !4795)
!4797 = !DILocation(line: 2665, column: 10, scope: !4788)
!4798 = !DILocation(line: 2666, column: 35, scope: !4795)
!4799 = !DILocation(line: 2666, column: 56, scope: !4795)
!4800 = !DILocation(line: 2666, column: 42, scope: !4795)
!4801 = !DILocation(line: 2666, column: 59, scope: !4795)
!4802 = !DILocation(line: 2666, column: 63, scope: !4795)
!4803 = !DILocation(line: 2666, column: 68, scope: !4795)
!4804 = !DILocation(line: 2666, column: 72, scope: !4795)
!4805 = !DILocation(line: 2666, column: 19, scope: !4795)
!4806 = !DILocation(line: 2666, column: 87, scope: !4795)
!4807 = !DILocation(line: 2666, column: 126, scope: !4795)
!4808 = !DILocation(line: 2666, column: 7, scope: !4795)
!4809 = !DILocation(line: 2665, column: 15, scope: !4795)
!4810 = !DILocation(line: 2667, column: 4, scope: !4763)
!4811 = !DILocation(line: 2660, column: 35, scope: !4757)
!4812 = !DILocation(line: 2660, column: 4, scope: !4757)
!4813 = distinct !{!4813, !4761, !4814}
!4814 = !DILocation(line: 2667, column: 4, scope: !4754)
!4815 = !DILocation(line: 2668, column: 3, scope: !4693)
!4816 = !DILocation(line: 2646, column: 33, scope: !4687)
!4817 = !DILocation(line: 2646, column: 3, scope: !4687)
!4818 = distinct !{!4818, !4691, !4819}
!4819 = !DILocation(line: 2668, column: 3, scope: !4684)
!4820 = !DILocation(line: 2669, column: 2, scope: !4646)
!4821 = !DILocation(line: 2637, column: 33, scope: !4641)
!4822 = !DILocation(line: 2637, column: 2, scope: !4641)
!4823 = distinct !{!4823, !4644, !4824}
!4824 = !DILocation(line: 2669, column: 2, scope: !4638)
!4825 = !DILocation(line: 2672, column: 9, scope: !4826)
!4826 = distinct !DILexicalBlock(scope: !4514, file: !3, line: 2672, column: 2)
!4827 = !DILocation(line: 2672, column: 7, scope: !4826)
!4828 = !DILocation(line: 2672, column: 14, scope: !4829)
!4829 = distinct !DILexicalBlock(scope: !4826, file: !3, line: 2672, column: 2)
!4830 = !DILocation(line: 2672, column: 18, scope: !4829)
!4831 = !DILocation(line: 2672, column: 16, scope: !4829)
!4832 = !DILocation(line: 2672, column: 2, scope: !4826)
!4833 = !DILocalVariable(name: "v", scope: !4834, file: !3, line: 2673, type: !70)
!4834 = distinct !DILexicalBlock(scope: !4829, file: !3, line: 2672, column: 37)
!4835 = !DILocation(line: 2673, column: 12, scope: !4834)
!4836 = !DILocation(line: 2673, column: 16, scope: !4834)
!4837 = !DILocation(line: 2673, column: 26, scope: !4834)
!4838 = !DILocation(line: 2674, column: 7, scope: !4839)
!4839 = distinct !DILexicalBlock(scope: !4834, file: !3, line: 2674, column: 7)
!4840 = !DILocation(line: 2674, column: 10, scope: !4839)
!4841 = !DILocation(line: 2674, column: 7, scope: !4834)
!4842 = !DILocation(line: 2675, column: 17, scope: !4839)
!4843 = !DILocation(line: 2675, column: 44, scope: !4839)
!4844 = !DILocation(line: 2675, column: 47, scope: !4839)
!4845 = !DILocation(line: 2675, column: 42, scope: !4839)
!4846 = !DILocation(line: 2675, column: 57, scope: !4839)
!4847 = !DILocation(line: 2675, column: 4, scope: !4839)
!4848 = !DILocation(line: 2676, column: 2, scope: !4834)
!4849 = !DILocation(line: 2672, column: 33, scope: !4829)
!4850 = !DILocation(line: 2672, column: 2, scope: !4829)
!4851 = distinct !{!4851, !4832, !4852}
!4852 = !DILocation(line: 2676, column: 2, scope: !4826)
!4853 = !DILocation(line: 2678, column: 9, scope: !4854)
!4854 = distinct !DILexicalBlock(scope: !4514, file: !3, line: 2678, column: 2)
!4855 = !DILocation(line: 2678, column: 7, scope: !4854)
!4856 = !DILocation(line: 2678, column: 14, scope: !4857)
!4857 = distinct !DILexicalBlock(scope: !4854, file: !3, line: 2678, column: 2)
!4858 = !DILocation(line: 2678, column: 18, scope: !4857)
!4859 = !DILocation(line: 2678, column: 16, scope: !4857)
!4860 = !DILocation(line: 2678, column: 2, scope: !4854)
!4861 = !DILocalVariable(name: "e", scope: !4862, file: !3, line: 2679, type: !84)
!4862 = distinct !DILexicalBlock(scope: !4857, file: !3, line: 2678, column: 37)
!4863 = !DILocation(line: 2679, column: 12, scope: !4862)
!4864 = !DILocation(line: 2679, column: 16, scope: !4862)
!4865 = !DILocation(line: 2679, column: 26, scope: !4862)
!4866 = !DILocation(line: 2681, column: 16, scope: !4862)
!4867 = !DILocation(line: 2681, column: 39, scope: !4862)
!4868 = !DILocation(line: 2681, column: 63, scope: !4862)
!4869 = !DILocation(line: 2681, column: 3, scope: !4862)
!4870 = !DILocation(line: 2682, column: 16, scope: !4862)
!4871 = !DILocation(line: 2682, column: 50, scope: !4862)
!4872 = !DILocation(line: 2682, column: 74, scope: !4862)
!4873 = !DILocation(line: 2682, column: 3, scope: !4862)
!4874 = !DILocation(line: 2684, column: 7, scope: !4875)
!4875 = distinct !DILexicalBlock(scope: !4862, file: !3, line: 2684, column: 7)
!4876 = !DILocation(line: 2684, column: 10, scope: !4875)
!4877 = !DILocation(line: 2684, column: 7, scope: !4862)
!4878 = !DILocation(line: 2685, column: 11, scope: !4879)
!4879 = distinct !DILexicalBlock(scope: !4875, file: !3, line: 2685, column: 4)
!4880 = !DILocation(line: 2685, column: 9, scope: !4879)
!4881 = !DILocation(line: 2685, column: 16, scope: !4882)
!4882 = distinct !DILexicalBlock(scope: !4879, file: !3, line: 2685, column: 4)
!4883 = !DILocation(line: 2685, column: 20, scope: !4882)
!4884 = !DILocation(line: 2685, column: 29, scope: !4882)
!4885 = !DILocation(line: 2685, column: 18, scope: !4882)
!4886 = !DILocation(line: 2685, column: 4, scope: !4879)
!4887 = !DILocation(line: 2686, column: 18, scope: !4882)
!4888 = !DILocation(line: 2686, column: 48, scope: !4882)
!4889 = !DILocation(line: 2686, column: 51, scope: !4882)
!4890 = !DILocation(line: 2686, column: 46, scope: !4882)
!4891 = !DILocation(line: 2686, column: 61, scope: !4882)
!4892 = !DILocation(line: 2686, column: 5, scope: !4882)
!4893 = !DILocation(line: 2685, column: 35, scope: !4882)
!4894 = !DILocation(line: 2685, column: 4, scope: !4882)
!4895 = distinct !{!4895, !4886, !4896}
!4896 = !DILocation(line: 2686, column: 63, scope: !4879)
!4897 = !DILocation(line: 2687, column: 2, scope: !4862)
!4898 = !DILocation(line: 2678, column: 33, scope: !4857)
!4899 = !DILocation(line: 2678, column: 2, scope: !4857)
!4900 = distinct !{!4900, !4860, !4901}
!4901 = !DILocation(line: 2687, column: 2, scope: !4854)
!4902 = !DILocation(line: 2690, column: 9, scope: !4903)
!4903 = distinct !DILexicalBlock(scope: !4514, file: !3, line: 2690, column: 2)
!4904 = !DILocation(line: 2690, column: 7, scope: !4903)
!4905 = !DILocation(line: 2690, column: 14, scope: !4906)
!4906 = distinct !DILexicalBlock(scope: !4903, file: !3, line: 2690, column: 2)
!4907 = !DILocation(line: 2690, column: 18, scope: !4906)
!4908 = !DILocation(line: 2690, column: 16, scope: !4906)
!4909 = !DILocation(line: 2690, column: 2, scope: !4903)
!4910 = !DILocalVariable(name: "f", scope: !4911, file: !3, line: 2691, type: !97)
!4911 = distinct !DILexicalBlock(scope: !4906, file: !3, line: 2690, column: 37)
!4912 = !DILocation(line: 2691, column: 12, scope: !4911)
!4913 = !DILocation(line: 2691, column: 16, scope: !4911)
!4914 = !DILocation(line: 2691, column: 26, scope: !4911)
!4915 = !DILocation(line: 2693, column: 44, scope: !4911)
!4916 = !DILocation(line: 2693, column: 25, scope: !4911)
!4917 = !DILocation(line: 2693, column: 16, scope: !4911)
!4918 = !DILocation(line: 2693, column: 55, scope: !4911)
!4919 = !DILocation(line: 2693, column: 58, scope: !4911)
!4920 = !DILocation(line: 2693, column: 53, scope: !4911)
!4921 = !DILocation(line: 2693, column: 68, scope: !4911)
!4922 = !DILocation(line: 2693, column: 3, scope: !4911)
!4923 = !DILocation(line: 2695, column: 10, scope: !4924)
!4924 = distinct !DILexicalBlock(scope: !4911, file: !3, line: 2695, column: 3)
!4925 = !DILocation(line: 2695, column: 8, scope: !4924)
!4926 = !DILocation(line: 2695, column: 15, scope: !4927)
!4927 = distinct !DILexicalBlock(scope: !4924, file: !3, line: 2695, column: 3)
!4928 = !DILocation(line: 2695, column: 19, scope: !4927)
!4929 = !DILocation(line: 2695, column: 22, scope: !4927)
!4930 = !DILocation(line: 2695, column: 17, scope: !4927)
!4931 = !DILocation(line: 2695, column: 3, scope: !4924)
!4932 = !DILocation(line: 2696, column: 11, scope: !4933)
!4933 = distinct !DILexicalBlock(scope: !4927, file: !3, line: 2696, column: 4)
!4934 = !DILocation(line: 2696, column: 9, scope: !4933)
!4935 = !DILocation(line: 2696, column: 16, scope: !4936)
!4936 = distinct !DILexicalBlock(scope: !4933, file: !3, line: 2696, column: 4)
!4937 = !DILocation(line: 2696, column: 20, scope: !4936)
!4938 = !DILocation(line: 2696, column: 29, scope: !4936)
!4939 = !DILocation(line: 2696, column: 18, scope: !4936)
!4940 = !DILocation(line: 2696, column: 4, scope: !4933)
!4941 = !DILocation(line: 2697, column: 18, scope: !4936)
!4942 = !DILocation(line: 2697, column: 52, scope: !4936)
!4943 = !DILocation(line: 2697, column: 5, scope: !4936)
!4944 = !DILocation(line: 2696, column: 35, scope: !4936)
!4945 = !DILocation(line: 2696, column: 4, scope: !4936)
!4946 = distinct !{!4946, !4940, !4947}
!4947 = !DILocation(line: 2697, column: 54, scope: !4933)
!4948 = !DILocation(line: 2695, column: 33, scope: !4927)
!4949 = !DILocation(line: 2695, column: 3, scope: !4927)
!4950 = distinct !{!4950, !4931, !4951}
!4951 = !DILocation(line: 2697, column: 54, scope: !4924)
!4952 = !DILocation(line: 2699, column: 10, scope: !4953)
!4953 = distinct !DILexicalBlock(scope: !4911, file: !3, line: 2699, column: 3)
!4954 = !DILocation(line: 2699, column: 8, scope: !4953)
!4955 = !DILocation(line: 2699, column: 15, scope: !4956)
!4956 = distinct !DILexicalBlock(scope: !4953, file: !3, line: 2699, column: 3)
!4957 = !DILocation(line: 2699, column: 19, scope: !4956)
!4958 = !DILocation(line: 2699, column: 22, scope: !4956)
!4959 = !DILocation(line: 2699, column: 17, scope: !4956)
!4960 = !DILocation(line: 2699, column: 3, scope: !4953)
!4961 = !DILocalVariable(name: "prevS", scope: !4962, file: !3, line: 2700, type: !17)
!4962 = distinct !DILexicalBlock(scope: !4956, file: !3, line: 2699, column: 37)
!4963 = !DILocation(line: 2700, column: 8, scope: !4962)
!4964 = !DILocation(line: 2700, column: 17, scope: !4962)
!4965 = !DILocation(line: 2700, column: 21, scope: !4962)
!4966 = !DILocation(line: 2700, column: 24, scope: !4962)
!4967 = !DILocation(line: 2700, column: 19, scope: !4962)
!4968 = !DILocation(line: 2700, column: 33, scope: !4962)
!4969 = !DILocation(line: 2700, column: 40, scope: !4962)
!4970 = !DILocation(line: 2700, column: 43, scope: !4962)
!4971 = !DILocation(line: 2700, column: 38, scope: !4962)
!4972 = !DILocalVariable(name: "e", scope: !4962, file: !3, line: 2701, type: !84)
!4973 = !DILocation(line: 2701, column: 13, scope: !4962)
!4974 = !DILocation(line: 2701, column: 31, scope: !4962)
!4975 = !DILocation(line: 2701, column: 17, scope: !4962)
!4976 = !DILocation(line: 2701, column: 34, scope: !4962)
!4977 = !DILocalVariable(name: "prevE", scope: !4962, file: !3, line: 2702, type: !84)
!4978 = !DILocation(line: 2702, column: 13, scope: !4962)
!4979 = !DILocation(line: 2702, column: 35, scope: !4962)
!4980 = !DILocation(line: 2702, column: 21, scope: !4962)
!4981 = !DILocation(line: 2702, column: 38, scope: !4962)
!4982 = !DILocation(line: 2704, column: 17, scope: !4962)
!4983 = !DILocation(line: 2704, column: 76, scope: !4962)
!4984 = !DILocation(line: 2704, column: 57, scope: !4962)
!4985 = !DILocation(line: 2704, column: 48, scope: !4962)
!4986 = !DILocation(line: 2704, column: 80, scope: !4962)
!4987 = !DILocation(line: 2704, column: 4, scope: !4962)
!4988 = !DILocation(line: 2705, column: 17, scope: !4962)
!4989 = !DILocation(line: 2705, column: 64, scope: !4962)
!4990 = !DILocation(line: 2705, column: 102, scope: !4962)
!4991 = !DILocation(line: 2705, column: 4, scope: !4962)
!4992 = !DILocation(line: 2707, column: 11, scope: !4993)
!4993 = distinct !DILexicalBlock(scope: !4962, file: !3, line: 2707, column: 4)
!4994 = !DILocation(line: 2707, column: 9, scope: !4993)
!4995 = !DILocation(line: 2707, column: 16, scope: !4996)
!4996 = distinct !DILexicalBlock(scope: !4993, file: !3, line: 2707, column: 4)
!4997 = !DILocation(line: 2707, column: 20, scope: !4996)
!4998 = !DILocation(line: 2707, column: 29, scope: !4996)
!4999 = !DILocation(line: 2707, column: 18, scope: !4996)
!5000 = !DILocation(line: 2707, column: 4, scope: !4993)
!5001 = !DILocation(line: 2708, column: 18, scope: !5002)
!5002 = distinct !DILexicalBlock(scope: !4996, file: !3, line: 2707, column: 39)
!5003 = !DILocation(line: 2708, column: 49, scope: !5002)
!5004 = !DILocation(line: 2708, column: 77, scope: !5002)
!5005 = !DILocation(line: 2708, column: 5, scope: !5002)
!5006 = !DILocation(line: 2709, column: 18, scope: !5002)
!5007 = !DILocation(line: 2709, column: 49, scope: !5002)
!5008 = !DILocation(line: 2709, column: 81, scope: !5002)
!5009 = !DILocation(line: 2709, column: 5, scope: !5002)
!5010 = !DILocation(line: 2710, column: 4, scope: !5002)
!5011 = !DILocation(line: 2707, column: 35, scope: !4996)
!5012 = !DILocation(line: 2707, column: 4, scope: !4996)
!5013 = distinct !{!5013, !5000, !5014}
!5014 = !DILocation(line: 2710, column: 4, scope: !4993)
!5015 = !DILocation(line: 2712, column: 11, scope: !5016)
!5016 = distinct !DILexicalBlock(scope: !4962, file: !3, line: 2712, column: 4)
!5017 = !DILocation(line: 2712, column: 9, scope: !5016)
!5018 = !DILocation(line: 2712, column: 16, scope: !5019)
!5019 = distinct !DILexicalBlock(scope: !5016, file: !3, line: 2712, column: 4)
!5020 = !DILocation(line: 2712, column: 20, scope: !5019)
!5021 = !DILocation(line: 2712, column: 29, scope: !5019)
!5022 = !DILocation(line: 2712, column: 18, scope: !5019)
!5023 = !DILocation(line: 2712, column: 4, scope: !5016)
!5024 = !DILocalVariable(name: "eI", scope: !5025, file: !3, line: 2713, type: !17)
!5025 = distinct !DILexicalBlock(scope: !5019, file: !3, line: 2712, column: 39)
!5026 = !DILocation(line: 2713, column: 9, scope: !5025)
!5027 = !DILocation(line: 2713, column: 14, scope: !5025)
!5028 = !DILocation(line: 2713, column: 23, scope: !5025)
!5029 = !DILocation(line: 2713, column: 29, scope: !5025)
!5030 = !DILocation(line: 2713, column: 27, scope: !5025)
!5031 = !DILocation(line: 2715, column: 18, scope: !5025)
!5032 = !DILocation(line: 2715, column: 73, scope: !5025)
!5033 = !DILocation(line: 2715, column: 90, scope: !5025)
!5034 = !DILocation(line: 2715, column: 76, scope: !5025)
!5035 = !DILocation(line: 2715, column: 93, scope: !5025)
!5036 = !DILocation(line: 2715, column: 97, scope: !5025)
!5037 = !DILocation(line: 2715, column: 102, scope: !5025)
!5038 = !DILocation(line: 2715, column: 106, scope: !5025)
!5039 = !DILocation(line: 2715, column: 57, scope: !5025)
!5040 = !DILocation(line: 2715, column: 121, scope: !5025)
!5041 = !DILocation(line: 2715, column: 5, scope: !5025)
!5042 = !DILocation(line: 2716, column: 18, scope: !5025)
!5043 = !DILocation(line: 2716, column: 73, scope: !5025)
!5044 = !DILocation(line: 2716, column: 94, scope: !5025)
!5045 = !DILocation(line: 2716, column: 80, scope: !5025)
!5046 = !DILocation(line: 2716, column: 97, scope: !5025)
!5047 = !DILocation(line: 2716, column: 101, scope: !5025)
!5048 = !DILocation(line: 2716, column: 106, scope: !5025)
!5049 = !DILocation(line: 2716, column: 110, scope: !5025)
!5050 = !DILocation(line: 2716, column: 57, scope: !5025)
!5051 = !DILocation(line: 2716, column: 125, scope: !5025)
!5052 = !DILocation(line: 2716, column: 5, scope: !5025)
!5053 = !DILocation(line: 2717, column: 4, scope: !5025)
!5054 = !DILocation(line: 2712, column: 35, scope: !5019)
!5055 = !DILocation(line: 2712, column: 4, scope: !5019)
!5056 = distinct !{!5056, !5023, !5057}
!5057 = !DILocation(line: 2717, column: 4, scope: !5016)
!5058 = !DILocation(line: 2719, column: 17, scope: !4962)
!5059 = !DILocation(line: 2719, column: 73, scope: !4962)
!5060 = !DILocation(line: 2719, column: 54, scope: !4962)
!5061 = !DILocation(line: 2719, column: 45, scope: !4962)
!5062 = !DILocation(line: 2719, column: 77, scope: !4962)
!5063 = !DILocation(line: 2719, column: 4, scope: !4962)
!5064 = !DILocation(line: 2720, column: 17, scope: !4962)
!5065 = !DILocation(line: 2720, column: 56, scope: !4962)
!5066 = !DILocation(line: 2720, column: 98, scope: !4962)
!5067 = !DILocation(line: 2720, column: 4, scope: !4962)
!5068 = !DILocation(line: 2721, column: 3, scope: !4962)
!5069 = !DILocation(line: 2699, column: 33, scope: !4956)
!5070 = !DILocation(line: 2699, column: 3, scope: !4956)
!5071 = distinct !{!5071, !4960, !5072}
!5072 = !DILocation(line: 2721, column: 3, scope: !4953)
!5073 = !DILocation(line: 2722, column: 2, scope: !4911)
!5074 = !DILocation(line: 2690, column: 33, scope: !4906)
!5075 = !DILocation(line: 2690, column: 2, scope: !4906)
!5076 = distinct !{!5076, !4909, !5077}
!5077 = !DILocation(line: 2722, column: 2, scope: !4903)
!5078 = !DILocation(line: 2724, column: 9, scope: !5079)
!5079 = distinct !DILexicalBlock(scope: !4514, file: !3, line: 2724, column: 2)
!5080 = !DILocation(line: 2724, column: 7, scope: !5079)
!5081 = !DILocation(line: 2724, column: 14, scope: !5082)
!5082 = distinct !DILexicalBlock(scope: !5079, file: !3, line: 2724, column: 2)
!5083 = !DILocation(line: 2724, column: 18, scope: !5082)
!5084 = !DILocation(line: 2724, column: 16, scope: !5082)
!5085 = !DILocation(line: 2724, column: 2, scope: !5079)
!5086 = !DILocation(line: 2725, column: 3, scope: !5082)
!5087 = !DILocation(line: 2725, column: 13, scope: !5082)
!5088 = !DILocation(line: 2725, column: 17, scope: !5082)
!5089 = !DILocation(line: 2725, column: 23, scope: !5082)
!5090 = !DILocation(line: 2724, column: 33, scope: !5082)
!5091 = !DILocation(line: 2724, column: 2, scope: !5082)
!5092 = distinct !{!5092, !5085, !5093}
!5093 = !DILocation(line: 2725, column: 25, scope: !5079)
!5094 = !DILocation(line: 2726, column: 9, scope: !5095)
!5095 = distinct !DILexicalBlock(scope: !4514, file: !3, line: 2726, column: 2)
!5096 = !DILocation(line: 2726, column: 7, scope: !5095)
!5097 = !DILocation(line: 2726, column: 14, scope: !5098)
!5098 = distinct !DILexicalBlock(scope: !5095, file: !3, line: 2726, column: 2)
!5099 = !DILocation(line: 2726, column: 18, scope: !5098)
!5100 = !DILocation(line: 2726, column: 16, scope: !5098)
!5101 = !DILocation(line: 2726, column: 2, scope: !5095)
!5102 = !DILocation(line: 2727, column: 3, scope: !5098)
!5103 = !DILocation(line: 2727, column: 13, scope: !5098)
!5104 = !DILocation(line: 2727, column: 17, scope: !5098)
!5105 = !DILocation(line: 2727, column: 23, scope: !5098)
!5106 = !DILocation(line: 2726, column: 33, scope: !5098)
!5107 = !DILocation(line: 2726, column: 2, scope: !5098)
!5108 = distinct !{!5108, !5101, !5109}
!5109 = !DILocation(line: 2727, column: 25, scope: !5095)
!5110 = !DILocation(line: 2728, column: 9, scope: !5111)
!5111 = distinct !DILexicalBlock(scope: !4514, file: !3, line: 2728, column: 2)
!5112 = !DILocation(line: 2728, column: 7, scope: !5111)
!5113 = !DILocation(line: 2728, column: 14, scope: !5114)
!5114 = distinct !DILexicalBlock(scope: !5111, file: !3, line: 2728, column: 2)
!5115 = !DILocation(line: 2728, column: 18, scope: !5114)
!5116 = !DILocation(line: 2728, column: 16, scope: !5114)
!5117 = !DILocation(line: 2728, column: 2, scope: !5111)
!5118 = !DILocation(line: 2729, column: 3, scope: !5114)
!5119 = !DILocation(line: 2729, column: 13, scope: !5114)
!5120 = !DILocation(line: 2729, column: 17, scope: !5114)
!5121 = !DILocation(line: 2729, column: 23, scope: !5114)
!5122 = !DILocation(line: 2728, column: 33, scope: !5114)
!5123 = !DILocation(line: 2728, column: 2, scope: !5114)
!5124 = distinct !{!5124, !5117, !5125}
!5125 = !DILocation(line: 2729, column: 25, scope: !5111)
!5126 = !DILocation(line: 2731, column: 2, scope: !4514)
!5127 = !DILocation(line: 2731, column: 12, scope: !4514)
!5128 = !DILocation(line: 2732, column: 2, scope: !4514)
!5129 = !DILocation(line: 2732, column: 12, scope: !4514)
!5130 = !DILocation(line: 2733, column: 6, scope: !5131)
!5131 = distinct !DILexicalBlock(scope: !4514, file: !3, line: 2733, column: 6)
!5132 = !DILocation(line: 2733, column: 6, scope: !4514)
!5133 = !DILocation(line: 2733, column: 13, scope: !5131)
!5134 = !DILocation(line: 2733, column: 23, scope: !5131)
!5135 = !DILocation(line: 2735, column: 2, scope: !4514)
!5136 = distinct !DISubprogram(name: "ccg_edgesize", scope: !3, file: !3, line: 272, type: !157, scopeLine: 273, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !30, retainedNodes: !151)
!5137 = !DILocalVariable(name: "level", arg: 1, scope: !5136, file: !3, line: 272, type: !17)
!5138 = !DILocation(line: 272, column: 33, scope: !5136)
!5139 = !DILocation(line: 277, column: 19, scope: !5136)
!5140 = !DILocation(line: 277, column: 16, scope: !5136)
!5141 = !DILocation(line: 277, column: 11, scope: !5136)
!5142 = !DILocation(line: 277, column: 2, scope: !5136)
!5143 = distinct !DISubprogram(name: "ccgSubSurf__effectedFaceNeighbours", scope: !3, file: !3, line: 2469, type: !5144, scopeLine: 2470, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !30, retainedNodes: !151)
!5144 = !DISubroutineType(types: !5145)
!5145 = !{null, !187, !96, !17, !5146, !109, !5147, !109}
!5146 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !141, size: 64)
!5147 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !83, size: 64)
!5148 = !DILocalVariable(name: "ss", arg: 1, scope: !5143, file: !3, line: 2469, type: !187)
!5149 = !DILocation(line: 2469, column: 60, scope: !5143)
!5150 = !DILocalVariable(name: "faces", arg: 2, scope: !5143, file: !3, line: 2469, type: !96)
!5151 = !DILocation(line: 2469, column: 74, scope: !5143)
!5152 = !DILocalVariable(name: "numFaces", arg: 3, scope: !5143, file: !3, line: 2469, type: !17)
!5153 = !DILocation(line: 2469, column: 85, scope: !5143)
!5154 = !DILocalVariable(name: "verts", arg: 4, scope: !5143, file: !3, line: 2469, type: !5146)
!5155 = !DILocation(line: 2469, column: 106, scope: !5143)
!5156 = !DILocalVariable(name: "numVerts", arg: 5, scope: !5143, file: !3, line: 2469, type: !109)
!5157 = !DILocation(line: 2469, column: 118, scope: !5143)
!5158 = !DILocalVariable(name: "edges", arg: 6, scope: !5143, file: !3, line: 2469, type: !5147)
!5159 = !DILocation(line: 2469, column: 139, scope: !5143)
!5160 = !DILocalVariable(name: "numEdges", arg: 7, scope: !5143, file: !3, line: 2469, type: !109)
!5161 = !DILocation(line: 2469, column: 151, scope: !5143)
!5162 = !DILocalVariable(name: "arrayV", scope: !5143, file: !3, line: 2471, type: !141)
!5163 = !DILocation(line: 2471, column: 12, scope: !5143)
!5164 = !DILocalVariable(name: "arrayE", scope: !5143, file: !3, line: 2472, type: !83)
!5165 = !DILocation(line: 2472, column: 12, scope: !5143)
!5166 = !DILocalVariable(name: "numV", scope: !5143, file: !3, line: 2473, type: !17)
!5167 = !DILocation(line: 2473, column: 6, scope: !5143)
!5168 = !DILocalVariable(name: "numE", scope: !5143, file: !3, line: 2473, type: !17)
!5169 = !DILocation(line: 2473, column: 12, scope: !5143)
!5170 = !DILocalVariable(name: "i", scope: !5143, file: !3, line: 2473, type: !17)
!5171 = !DILocation(line: 2473, column: 18, scope: !5143)
!5172 = !DILocalVariable(name: "j", scope: !5143, file: !3, line: 2473, type: !17)
!5173 = !DILocation(line: 2473, column: 21, scope: !5143)
!5174 = !DILocation(line: 2475, column: 11, scope: !5143)
!5175 = !DILocation(line: 2475, column: 41, scope: !5143)
!5176 = !DILocation(line: 2475, column: 45, scope: !5143)
!5177 = !DILocation(line: 2475, column: 51, scope: !5143)
!5178 = !DILocation(line: 2475, column: 39, scope: !5143)
!5179 = !DILocation(line: 2475, column: 9, scope: !5143)
!5180 = !DILocation(line: 2476, column: 11, scope: !5143)
!5181 = !DILocation(line: 2476, column: 41, scope: !5143)
!5182 = !DILocation(line: 2476, column: 45, scope: !5143)
!5183 = !DILocation(line: 2476, column: 51, scope: !5143)
!5184 = !DILocation(line: 2476, column: 39, scope: !5143)
!5185 = !DILocation(line: 2476, column: 9, scope: !5143)
!5186 = !DILocation(line: 2477, column: 14, scope: !5143)
!5187 = !DILocation(line: 2477, column: 7, scope: !5143)
!5188 = !DILocation(line: 2479, column: 9, scope: !5189)
!5189 = distinct !DILexicalBlock(scope: !5143, file: !3, line: 2479, column: 2)
!5190 = !DILocation(line: 2479, column: 7, scope: !5189)
!5191 = !DILocation(line: 2479, column: 14, scope: !5192)
!5192 = distinct !DILexicalBlock(scope: !5189, file: !3, line: 2479, column: 2)
!5193 = !DILocation(line: 2479, column: 18, scope: !5192)
!5194 = !DILocation(line: 2479, column: 16, scope: !5192)
!5195 = !DILocation(line: 2479, column: 2, scope: !5189)
!5196 = !DILocalVariable(name: "f", scope: !5197, file: !3, line: 2480, type: !97)
!5197 = distinct !DILexicalBlock(scope: !5192, file: !3, line: 2479, column: 33)
!5198 = !DILocation(line: 2480, column: 12, scope: !5197)
!5199 = !DILocation(line: 2480, column: 16, scope: !5197)
!5200 = !DILocation(line: 2480, column: 22, scope: !5197)
!5201 = !DILocation(line: 2481, column: 3, scope: !5197)
!5202 = !DILocation(line: 2481, column: 6, scope: !5197)
!5203 = !DILocation(line: 2481, column: 12, scope: !5197)
!5204 = !DILocation(line: 2482, column: 2, scope: !5197)
!5205 = !DILocation(line: 2479, column: 29, scope: !5192)
!5206 = !DILocation(line: 2479, column: 2, scope: !5192)
!5207 = distinct !{!5207, !5195, !5208}
!5208 = !DILocation(line: 2482, column: 2, scope: !5189)
!5209 = !DILocation(line: 2484, column: 9, scope: !5210)
!5210 = distinct !DILexicalBlock(scope: !5143, file: !3, line: 2484, column: 2)
!5211 = !DILocation(line: 2484, column: 7, scope: !5210)
!5212 = !DILocation(line: 2484, column: 14, scope: !5213)
!5213 = distinct !DILexicalBlock(scope: !5210, file: !3, line: 2484, column: 2)
!5214 = !DILocation(line: 2484, column: 18, scope: !5213)
!5215 = !DILocation(line: 2484, column: 22, scope: !5213)
!5216 = !DILocation(line: 2484, column: 28, scope: !5213)
!5217 = !DILocation(line: 2484, column: 16, scope: !5213)
!5218 = !DILocation(line: 2484, column: 2, scope: !5210)
!5219 = !DILocalVariable(name: "v", scope: !5220, file: !3, line: 2485, type: !70)
!5220 = distinct !DILexicalBlock(scope: !5213, file: !3, line: 2484, column: 42)
!5221 = !DILocation(line: 2485, column: 12, scope: !5220)
!5222 = !DILocation(line: 2485, column: 28, scope: !5220)
!5223 = !DILocation(line: 2485, column: 32, scope: !5220)
!5224 = !DILocation(line: 2485, column: 38, scope: !5220)
!5225 = !DILocation(line: 2485, column: 46, scope: !5220)
!5226 = !DILocation(line: 2485, column: 16, scope: !5220)
!5227 = !DILocation(line: 2487, column: 3, scope: !5220)
!5228 = !DILocation(line: 2487, column: 10, scope: !5229)
!5229 = distinct !DILexicalBlock(scope: !5230, file: !3, line: 2487, column: 3)
!5230 = distinct !DILexicalBlock(scope: !5220, file: !3, line: 2487, column: 3)
!5231 = !DILocation(line: 2487, column: 3, scope: !5230)
!5232 = !DILocation(line: 2488, column: 11, scope: !5233)
!5233 = distinct !DILexicalBlock(scope: !5234, file: !3, line: 2488, column: 4)
!5234 = distinct !DILexicalBlock(scope: !5229, file: !3, line: 2487, column: 26)
!5235 = !DILocation(line: 2488, column: 9, scope: !5233)
!5236 = !DILocation(line: 2488, column: 16, scope: !5237)
!5237 = distinct !DILexicalBlock(scope: !5233, file: !3, line: 2488, column: 4)
!5238 = !DILocation(line: 2488, column: 20, scope: !5237)
!5239 = !DILocation(line: 2488, column: 23, scope: !5237)
!5240 = !DILocation(line: 2488, column: 18, scope: !5237)
!5241 = !DILocation(line: 2488, column: 4, scope: !5233)
!5242 = !DILocation(line: 2489, column: 11, scope: !5243)
!5243 = distinct !DILexicalBlock(scope: !5237, file: !3, line: 2489, column: 9)
!5244 = !DILocation(line: 2489, column: 14, scope: !5243)
!5245 = !DILocation(line: 2489, column: 20, scope: !5243)
!5246 = !DILocation(line: 2489, column: 24, scope: !5243)
!5247 = !DILocation(line: 2489, column: 30, scope: !5243)
!5248 = !DILocation(line: 2489, column: 9, scope: !5237)
!5249 = !DILocation(line: 2490, column: 6, scope: !5243)
!5250 = !DILocation(line: 2489, column: 46, scope: !5243)
!5251 = !DILocation(line: 2488, column: 34, scope: !5237)
!5252 = !DILocation(line: 2488, column: 4, scope: !5237)
!5253 = distinct !{!5253, !5241, !5254}
!5254 = !DILocation(line: 2490, column: 6, scope: !5233)
!5255 = !DILocation(line: 2492, column: 8, scope: !5256)
!5256 = distinct !DILexicalBlock(scope: !5234, file: !3, line: 2492, column: 8)
!5257 = !DILocation(line: 2492, column: 13, scope: !5256)
!5258 = !DILocation(line: 2492, column: 16, scope: !5256)
!5259 = !DILocation(line: 2492, column: 10, scope: !5256)
!5260 = !DILocation(line: 2492, column: 8, scope: !5234)
!5261 = !DILocation(line: 2493, column: 22, scope: !5262)
!5262 = distinct !DILexicalBlock(scope: !5256, file: !3, line: 2492, column: 26)
!5263 = !DILocation(line: 2493, column: 5, scope: !5262)
!5264 = !DILocation(line: 2493, column: 16, scope: !5262)
!5265 = !DILocation(line: 2493, column: 20, scope: !5262)
!5266 = !DILocation(line: 2494, column: 5, scope: !5262)
!5267 = !DILocation(line: 2494, column: 8, scope: !5262)
!5268 = !DILocation(line: 2494, column: 14, scope: !5262)
!5269 = !DILocation(line: 2495, column: 4, scope: !5262)
!5270 = !DILocation(line: 2496, column: 3, scope: !5234)
!5271 = !DILocation(line: 2487, column: 17, scope: !5229)
!5272 = !DILocation(line: 2487, column: 20, scope: !5229)
!5273 = !DILocation(line: 2487, column: 15, scope: !5229)
!5274 = !DILocation(line: 2487, column: 3, scope: !5229)
!5275 = distinct !{!5275, !5231, !5276}
!5276 = !DILocation(line: 2496, column: 3, scope: !5230)
!5277 = !DILocation(line: 2497, column: 2, scope: !5220)
!5278 = !DILocation(line: 2484, column: 38, scope: !5213)
!5279 = !DILocation(line: 2484, column: 2, scope: !5213)
!5280 = distinct !{!5280, !5218, !5281}
!5281 = !DILocation(line: 2497, column: 2, scope: !5210)
!5282 = !DILocation(line: 2499, column: 9, scope: !5283)
!5283 = distinct !DILexicalBlock(scope: !5143, file: !3, line: 2499, column: 2)
!5284 = !DILocation(line: 2499, column: 7, scope: !5283)
!5285 = !DILocation(line: 2499, column: 14, scope: !5286)
!5286 = distinct !DILexicalBlock(scope: !5283, file: !3, line: 2499, column: 2)
!5287 = !DILocation(line: 2499, column: 18, scope: !5286)
!5288 = !DILocation(line: 2499, column: 22, scope: !5286)
!5289 = !DILocation(line: 2499, column: 28, scope: !5286)
!5290 = !DILocation(line: 2499, column: 16, scope: !5286)
!5291 = !DILocation(line: 2499, column: 2, scope: !5283)
!5292 = !DILocalVariable(name: "e", scope: !5293, file: !3, line: 2500, type: !84)
!5293 = distinct !DILexicalBlock(scope: !5286, file: !3, line: 2499, column: 42)
!5294 = !DILocation(line: 2500, column: 12, scope: !5293)
!5295 = !DILocation(line: 2500, column: 28, scope: !5293)
!5296 = !DILocation(line: 2500, column: 32, scope: !5293)
!5297 = !DILocation(line: 2500, column: 38, scope: !5293)
!5298 = !DILocation(line: 2500, column: 46, scope: !5293)
!5299 = !DILocation(line: 2500, column: 16, scope: !5293)
!5300 = !DILocation(line: 2502, column: 3, scope: !5293)
!5301 = !DILocation(line: 2502, column: 10, scope: !5302)
!5302 = distinct !DILexicalBlock(scope: !5303, file: !3, line: 2502, column: 3)
!5303 = distinct !DILexicalBlock(scope: !5293, file: !3, line: 2502, column: 3)
!5304 = !DILocation(line: 2502, column: 3, scope: !5303)
!5305 = !DILocation(line: 2503, column: 11, scope: !5306)
!5306 = distinct !DILexicalBlock(scope: !5307, file: !3, line: 2503, column: 4)
!5307 = distinct !DILexicalBlock(scope: !5302, file: !3, line: 2502, column: 26)
!5308 = !DILocation(line: 2503, column: 9, scope: !5306)
!5309 = !DILocation(line: 2503, column: 16, scope: !5310)
!5310 = distinct !DILexicalBlock(scope: !5306, file: !3, line: 2503, column: 4)
!5311 = !DILocation(line: 2503, column: 20, scope: !5310)
!5312 = !DILocation(line: 2503, column: 23, scope: !5310)
!5313 = !DILocation(line: 2503, column: 18, scope: !5310)
!5314 = !DILocation(line: 2503, column: 4, scope: !5306)
!5315 = !DILocation(line: 2504, column: 11, scope: !5316)
!5316 = distinct !DILexicalBlock(scope: !5310, file: !3, line: 2504, column: 9)
!5317 = !DILocation(line: 2504, column: 14, scope: !5316)
!5318 = !DILocation(line: 2504, column: 20, scope: !5316)
!5319 = !DILocation(line: 2504, column: 24, scope: !5316)
!5320 = !DILocation(line: 2504, column: 30, scope: !5316)
!5321 = !DILocation(line: 2504, column: 9, scope: !5310)
!5322 = !DILocation(line: 2505, column: 6, scope: !5316)
!5323 = !DILocation(line: 2504, column: 46, scope: !5316)
!5324 = !DILocation(line: 2503, column: 34, scope: !5310)
!5325 = !DILocation(line: 2503, column: 4, scope: !5310)
!5326 = distinct !{!5326, !5314, !5327}
!5327 = !DILocation(line: 2505, column: 6, scope: !5306)
!5328 = !DILocation(line: 2507, column: 8, scope: !5329)
!5329 = distinct !DILexicalBlock(scope: !5307, file: !3, line: 2507, column: 8)
!5330 = !DILocation(line: 2507, column: 13, scope: !5329)
!5331 = !DILocation(line: 2507, column: 16, scope: !5329)
!5332 = !DILocation(line: 2507, column: 10, scope: !5329)
!5333 = !DILocation(line: 2507, column: 8, scope: !5307)
!5334 = !DILocation(line: 2508, column: 5, scope: !5335)
!5335 = distinct !DILexicalBlock(scope: !5329, file: !3, line: 2507, column: 26)
!5336 = !DILocation(line: 2508, column: 8, scope: !5335)
!5337 = !DILocation(line: 2508, column: 14, scope: !5335)
!5338 = !DILocation(line: 2509, column: 22, scope: !5335)
!5339 = !DILocation(line: 2509, column: 5, scope: !5335)
!5340 = !DILocation(line: 2509, column: 16, scope: !5335)
!5341 = !DILocation(line: 2509, column: 20, scope: !5335)
!5342 = !DILocation(line: 2510, column: 4, scope: !5335)
!5343 = !DILocation(line: 2511, column: 3, scope: !5307)
!5344 = !DILocation(line: 2502, column: 17, scope: !5302)
!5345 = !DILocation(line: 2502, column: 20, scope: !5302)
!5346 = !DILocation(line: 2502, column: 15, scope: !5302)
!5347 = !DILocation(line: 2502, column: 3, scope: !5302)
!5348 = distinct !{!5348, !5304, !5349}
!5349 = !DILocation(line: 2511, column: 3, scope: !5303)
!5350 = !DILocation(line: 2512, column: 2, scope: !5293)
!5351 = !DILocation(line: 2499, column: 38, scope: !5286)
!5352 = !DILocation(line: 2499, column: 2, scope: !5286)
!5353 = distinct !{!5353, !5291, !5354}
!5354 = !DILocation(line: 2512, column: 2, scope: !5283)
!5355 = !DILocation(line: 2514, column: 11, scope: !5143)
!5356 = !DILocation(line: 2514, column: 3, scope: !5143)
!5357 = !DILocation(line: 2514, column: 9, scope: !5143)
!5358 = !DILocation(line: 2515, column: 14, scope: !5143)
!5359 = !DILocation(line: 2515, column: 3, scope: !5143)
!5360 = !DILocation(line: 2515, column: 12, scope: !5143)
!5361 = !DILocation(line: 2516, column: 11, scope: !5143)
!5362 = !DILocation(line: 2516, column: 3, scope: !5143)
!5363 = !DILocation(line: 2516, column: 9, scope: !5143)
!5364 = !DILocation(line: 2517, column: 14, scope: !5143)
!5365 = !DILocation(line: 2517, column: 3, scope: !5143)
!5366 = !DILocation(line: 2517, column: 12, scope: !5143)
!5367 = !DILocation(line: 2518, column: 1, scope: !5143)
!5368 = distinct !DISubprogram(name: "VertDataZero", scope: !3, file: !3, line: 463, type: !5369, scopeLine: 464, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !30, retainedNodes: !151)
!5369 = !DISubroutineType(types: !5370)
!5370 = !{null, !68, !1589}
!5371 = !DILocalVariable(name: "v", arg: 1, scope: !5368, file: !3, line: 463, type: !68)
!5372 = !DILocation(line: 463, column: 32, scope: !5368)
!5373 = !DILocalVariable(name: "ss", arg: 2, scope: !5368, file: !3, line: 463, type: !1589)
!5374 = !DILocation(line: 463, column: 55, scope: !5368)
!5375 = !DILocation(line: 465, column: 9, scope: !5368)
!5376 = !DILocation(line: 465, column: 2, scope: !5368)
!5377 = !DILocation(line: 465, column: 31, scope: !5368)
!5378 = !DILocation(line: 465, column: 35, scope: !5368)
!5379 = !DILocation(line: 465, column: 43, scope: !5368)
!5380 = !DILocation(line: 465, column: 29, scope: !5368)
!5381 = !DILocation(line: 466, column: 1, scope: !5368)
!5382 = distinct !DISubprogram(name: "_edge_getCo", scope: !3, file: !3, line: 659, type: !5383, scopeLine: 660, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !30, retainedNodes: !151)
!5383 = !DISubroutineType(types: !5384)
!5384 = !{!15, !84, !17, !17, !17}
!5385 = !DILocalVariable(name: "e", arg: 1, scope: !5382, file: !3, line: 659, type: !84)
!5386 = !DILocation(line: 659, column: 35, scope: !5382)
!5387 = !DILocalVariable(name: "lvl", arg: 2, scope: !5382, file: !3, line: 659, type: !17)
!5388 = !DILocation(line: 659, column: 42, scope: !5382)
!5389 = !DILocalVariable(name: "x", arg: 3, scope: !5382, file: !3, line: 659, type: !17)
!5390 = !DILocation(line: 659, column: 51, scope: !5382)
!5391 = !DILocalVariable(name: "dataSize", arg: 4, scope: !5382, file: !3, line: 659, type: !17)
!5392 = !DILocation(line: 659, column: 58, scope: !5382)
!5393 = !DILocalVariable(name: "levelBase", scope: !5382, file: !3, line: 661, type: !17)
!5394 = !DILocation(line: 661, column: 6, scope: !5382)
!5395 = !DILocation(line: 661, column: 31, scope: !5382)
!5396 = !DILocation(line: 661, column: 18, scope: !5382)
!5397 = !DILocation(line: 662, column: 28, scope: !5382)
!5398 = !DILocation(line: 662, column: 10, scope: !5382)
!5399 = !DILocation(line: 662, column: 31, scope: !5382)
!5400 = !DILocation(line: 662, column: 43, scope: !5382)
!5401 = !DILocation(line: 662, column: 55, scope: !5382)
!5402 = !DILocation(line: 662, column: 53, scope: !5382)
!5403 = !DILocation(line: 662, column: 40, scope: !5382)
!5404 = !DILocation(line: 662, column: 2, scope: !5382)
!5405 = distinct !DISubprogram(name: "VertDataAdd", scope: !3, file: !3, line: 475, type: !1585, scopeLine: 476, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !30, retainedNodes: !151)
!5406 = !DILocalVariable(name: "a", arg: 1, scope: !5405, file: !3, line: 475, type: !68)
!5407 = !DILocation(line: 475, column: 31, scope: !5405)
!5408 = !DILocalVariable(name: "b", arg: 2, scope: !5405, file: !3, line: 475, type: !1587)
!5409 = !DILocation(line: 475, column: 48, scope: !5405)
!5410 = !DILocalVariable(name: "ss", arg: 3, scope: !5405, file: !3, line: 475, type: !1589)
!5411 = !DILocation(line: 475, column: 71, scope: !5405)
!5412 = !DILocalVariable(name: "i", scope: !5405, file: !3, line: 477, type: !17)
!5413 = !DILocation(line: 477, column: 6, scope: !5405)
!5414 = !DILocation(line: 478, column: 9, scope: !5415)
!5415 = distinct !DILexicalBlock(scope: !5405, file: !3, line: 478, column: 2)
!5416 = !DILocation(line: 478, column: 7, scope: !5415)
!5417 = !DILocation(line: 478, column: 14, scope: !5418)
!5418 = distinct !DILexicalBlock(scope: !5415, file: !3, line: 478, column: 2)
!5419 = !DILocation(line: 478, column: 18, scope: !5418)
!5420 = !DILocation(line: 478, column: 22, scope: !5418)
!5421 = !DILocation(line: 478, column: 30, scope: !5418)
!5422 = !DILocation(line: 478, column: 16, scope: !5418)
!5423 = !DILocation(line: 478, column: 2, scope: !5415)
!5424 = !DILocation(line: 479, column: 11, scope: !5418)
!5425 = !DILocation(line: 479, column: 13, scope: !5418)
!5426 = !DILocation(line: 479, column: 3, scope: !5418)
!5427 = !DILocation(line: 479, column: 5, scope: !5418)
!5428 = !DILocation(line: 479, column: 8, scope: !5418)
!5429 = !DILocation(line: 478, column: 42, scope: !5418)
!5430 = !DILocation(line: 478, column: 2, scope: !5418)
!5431 = distinct !{!5431, !5423, !5432}
!5432 = !DILocation(line: 479, column: 14, scope: !5415)
!5433 = !DILocation(line: 480, column: 1, scope: !5405)
!5434 = distinct !DISubprogram(name: "VertDataMulN", scope: !3, file: !3, line: 489, type: !5435, scopeLine: 490, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !30, retainedNodes: !151)
!5435 = !DISubroutineType(types: !5436)
!5436 = !{null, !68, !69, !1589}
!5437 = !DILocalVariable(name: "v", arg: 1, scope: !5434, file: !3, line: 489, type: !68)
!5438 = !DILocation(line: 489, column: 32, scope: !5434)
!5439 = !DILocalVariable(name: "f", arg: 2, scope: !5434, file: !3, line: 489, type: !69)
!5440 = !DILocation(line: 489, column: 43, scope: !5434)
!5441 = !DILocalVariable(name: "ss", arg: 3, scope: !5434, file: !3, line: 489, type: !1589)
!5442 = !DILocation(line: 489, column: 64, scope: !5434)
!5443 = !DILocalVariable(name: "i", scope: !5434, file: !3, line: 491, type: !17)
!5444 = !DILocation(line: 491, column: 6, scope: !5434)
!5445 = !DILocation(line: 492, column: 9, scope: !5446)
!5446 = distinct !DILexicalBlock(scope: !5434, file: !3, line: 492, column: 2)
!5447 = !DILocation(line: 492, column: 7, scope: !5446)
!5448 = !DILocation(line: 492, column: 14, scope: !5449)
!5449 = distinct !DILexicalBlock(scope: !5446, file: !3, line: 492, column: 2)
!5450 = !DILocation(line: 492, column: 18, scope: !5449)
!5451 = !DILocation(line: 492, column: 22, scope: !5449)
!5452 = !DILocation(line: 492, column: 30, scope: !5449)
!5453 = !DILocation(line: 492, column: 16, scope: !5449)
!5454 = !DILocation(line: 492, column: 2, scope: !5446)
!5455 = !DILocation(line: 493, column: 11, scope: !5449)
!5456 = !DILocation(line: 493, column: 3, scope: !5449)
!5457 = !DILocation(line: 493, column: 5, scope: !5449)
!5458 = !DILocation(line: 493, column: 8, scope: !5449)
!5459 = !DILocation(line: 492, column: 42, scope: !5449)
!5460 = !DILocation(line: 492, column: 2, scope: !5449)
!5461 = distinct !{!5461, !5454, !5462}
!5462 = !DILocation(line: 493, column: 11, scope: !5446)
!5463 = !DILocation(line: 494, column: 1, scope: !5434)
!5464 = distinct !DISubprogram(name: "ccgSubSurf_updateNormals", scope: !3, file: !3, line: 2739, type: !5465, scopeLine: 2740, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, retainedNodes: !151)
!5465 = !DISubroutineType(types: !5466)
!5466 = !{!568, !187, !96, !17}
!5467 = !DILocalVariable(name: "ss", arg: 1, scope: !5464, file: !3, line: 2739, type: !187)
!5468 = !DILocation(line: 2739, column: 47, scope: !5464)
!5469 = !DILocalVariable(name: "effectedF", arg: 2, scope: !5464, file: !3, line: 2739, type: !96)
!5470 = !DILocation(line: 2739, column: 61, scope: !5464)
!5471 = !DILocalVariable(name: "numEffectedF", arg: 3, scope: !5464, file: !3, line: 2739, type: !17)
!5472 = !DILocation(line: 2739, column: 76, scope: !5464)
!5473 = !DILocalVariable(name: "effectedV", scope: !5464, file: !3, line: 2741, type: !141)
!5474 = !DILocation(line: 2741, column: 12, scope: !5464)
!5475 = !DILocalVariable(name: "effectedE", scope: !5464, file: !3, line: 2742, type: !83)
!5476 = !DILocation(line: 2742, column: 12, scope: !5464)
!5477 = !DILocalVariable(name: "i", scope: !5464, file: !3, line: 2743, type: !17)
!5478 = !DILocation(line: 2743, column: 6, scope: !5464)
!5479 = !DILocalVariable(name: "numEffectedV", scope: !5464, file: !3, line: 2743, type: !17)
!5480 = !DILocation(line: 2743, column: 9, scope: !5464)
!5481 = !DILocalVariable(name: "numEffectedE", scope: !5464, file: !3, line: 2743, type: !17)
!5482 = !DILocation(line: 2743, column: 23, scope: !5464)
!5483 = !DILocalVariable(name: "freeF", scope: !5464, file: !3, line: 2743, type: !17)
!5484 = !DILocation(line: 2743, column: 37, scope: !5464)
!5485 = !DILocation(line: 2745, column: 23, scope: !5464)
!5486 = !DILocation(line: 2745, column: 2, scope: !5464)
!5487 = !DILocation(line: 2746, column: 37, scope: !5464)
!5488 = !DILocation(line: 2746, column: 41, scope: !5464)
!5489 = !DILocation(line: 2746, column: 52, scope: !5464)
!5490 = !DILocation(line: 2746, column: 2, scope: !5464)
!5491 = !DILocation(line: 2749, column: 6, scope: !5492)
!5492 = distinct !DILexicalBlock(scope: !5464, file: !3, line: 2749, column: 6)
!5493 = !DILocation(line: 2749, column: 10, scope: !5492)
!5494 = !DILocation(line: 2749, column: 6, scope: !5464)
!5495 = !DILocation(line: 2750, column: 31, scope: !5492)
!5496 = !DILocation(line: 2751, column: 31, scope: !5492)
!5497 = !DILocation(line: 2751, column: 42, scope: !5492)
!5498 = !DILocation(line: 2751, column: 53, scope: !5492)
!5499 = !DILocation(line: 2752, column: 31, scope: !5492)
!5500 = !DILocation(line: 2752, column: 45, scope: !5492)
!5501 = !DILocation(line: 2752, column: 59, scope: !5492)
!5502 = !DILocation(line: 2750, column: 3, scope: !5492)
!5503 = !DILocation(line: 2754, column: 9, scope: !5504)
!5504 = distinct !DILexicalBlock(scope: !5464, file: !3, line: 2754, column: 2)
!5505 = !DILocation(line: 2754, column: 7, scope: !5504)
!5506 = !DILocation(line: 2754, column: 14, scope: !5507)
!5507 = distinct !DILexicalBlock(scope: !5504, file: !3, line: 2754, column: 2)
!5508 = !DILocation(line: 2754, column: 18, scope: !5507)
!5509 = !DILocation(line: 2754, column: 16, scope: !5507)
!5510 = !DILocation(line: 2754, column: 2, scope: !5504)
!5511 = !DILocation(line: 2755, column: 3, scope: !5507)
!5512 = !DILocation(line: 2755, column: 13, scope: !5507)
!5513 = !DILocation(line: 2755, column: 17, scope: !5507)
!5514 = !DILocation(line: 2755, column: 23, scope: !5507)
!5515 = !DILocation(line: 2754, column: 33, scope: !5507)
!5516 = !DILocation(line: 2754, column: 2, scope: !5507)
!5517 = distinct !{!5517, !5510, !5518}
!5518 = !DILocation(line: 2755, column: 25, scope: !5504)
!5519 = !DILocation(line: 2756, column: 9, scope: !5520)
!5520 = distinct !DILexicalBlock(scope: !5464, file: !3, line: 2756, column: 2)
!5521 = !DILocation(line: 2756, column: 7, scope: !5520)
!5522 = !DILocation(line: 2756, column: 14, scope: !5523)
!5523 = distinct !DILexicalBlock(scope: !5520, file: !3, line: 2756, column: 2)
!5524 = !DILocation(line: 2756, column: 18, scope: !5523)
!5525 = !DILocation(line: 2756, column: 16, scope: !5523)
!5526 = !DILocation(line: 2756, column: 2, scope: !5520)
!5527 = !DILocation(line: 2757, column: 3, scope: !5523)
!5528 = !DILocation(line: 2757, column: 13, scope: !5523)
!5529 = !DILocation(line: 2757, column: 17, scope: !5523)
!5530 = !DILocation(line: 2757, column: 23, scope: !5523)
!5531 = !DILocation(line: 2756, column: 33, scope: !5523)
!5532 = !DILocation(line: 2756, column: 2, scope: !5523)
!5533 = distinct !{!5533, !5526, !5534}
!5534 = !DILocation(line: 2757, column: 25, scope: !5520)
!5535 = !DILocation(line: 2758, column: 9, scope: !5536)
!5536 = distinct !DILexicalBlock(scope: !5464, file: !3, line: 2758, column: 2)
!5537 = !DILocation(line: 2758, column: 7, scope: !5536)
!5538 = !DILocation(line: 2758, column: 14, scope: !5539)
!5539 = distinct !DILexicalBlock(scope: !5536, file: !3, line: 2758, column: 2)
!5540 = !DILocation(line: 2758, column: 18, scope: !5539)
!5541 = !DILocation(line: 2758, column: 16, scope: !5539)
!5542 = !DILocation(line: 2758, column: 2, scope: !5536)
!5543 = !DILocation(line: 2759, column: 3, scope: !5539)
!5544 = !DILocation(line: 2759, column: 13, scope: !5539)
!5545 = !DILocation(line: 2759, column: 17, scope: !5539)
!5546 = !DILocation(line: 2759, column: 23, scope: !5539)
!5547 = !DILocation(line: 2758, column: 33, scope: !5539)
!5548 = !DILocation(line: 2758, column: 2, scope: !5539)
!5549 = distinct !{!5549, !5542, !5550}
!5550 = !DILocation(line: 2759, column: 25, scope: !5536)
!5551 = !DILocation(line: 2761, column: 2, scope: !5464)
!5552 = !DILocation(line: 2761, column: 12, scope: !5464)
!5553 = !DILocation(line: 2762, column: 2, scope: !5464)
!5554 = !DILocation(line: 2762, column: 12, scope: !5464)
!5555 = !DILocation(line: 2763, column: 6, scope: !5556)
!5556 = distinct !DILexicalBlock(scope: !5464, file: !3, line: 2763, column: 6)
!5557 = !DILocation(line: 2763, column: 6, scope: !5464)
!5558 = !DILocation(line: 2763, column: 13, scope: !5556)
!5559 = !DILocation(line: 2763, column: 23, scope: !5556)
!5560 = !DILocation(line: 2765, column: 2, scope: !5464)
!5561 = distinct !DISubprogram(name: "ccgSubSurf__calcVertNormals", scope: !3, file: !3, line: 1433, type: !5562, scopeLine: 1436, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !30, retainedNodes: !151)
!5562 = !DISubroutineType(types: !5563)
!5563 = !{null, !187, !141, !83, !96, !17, !17, !17}
!5564 = !DILocalVariable(name: "ss", arg: 1, scope: !5561, file: !3, line: 1433, type: !187)
!5565 = !DILocation(line: 1433, column: 53, scope: !5561)
!5566 = !DILocalVariable(name: "effectedV", arg: 2, scope: !5561, file: !3, line: 1434, type: !141)
!5567 = !DILocation(line: 1434, column: 51, scope: !5561)
!5568 = !DILocalVariable(name: "effectedE", arg: 3, scope: !5561, file: !3, line: 1434, type: !83)
!5569 = !DILocation(line: 1434, column: 72, scope: !5561)
!5570 = !DILocalVariable(name: "effectedF", arg: 4, scope: !5561, file: !3, line: 1434, type: !96)
!5571 = !DILocation(line: 1434, column: 93, scope: !5561)
!5572 = !DILocalVariable(name: "numEffectedV", arg: 5, scope: !5561, file: !3, line: 1435, type: !17)
!5573 = !DILocation(line: 1435, column: 45, scope: !5561)
!5574 = !DILocalVariable(name: "numEffectedE", arg: 6, scope: !5561, file: !3, line: 1435, type: !17)
!5575 = !DILocation(line: 1435, column: 63, scope: !5561)
!5576 = !DILocalVariable(name: "numEffectedF", arg: 7, scope: !5561, file: !3, line: 1435, type: !17)
!5577 = !DILocation(line: 1435, column: 81, scope: !5561)
!5578 = !DILocalVariable(name: "i", scope: !5561, file: !3, line: 1437, type: !17)
!5579 = !DILocation(line: 1437, column: 6, scope: !5561)
!5580 = !DILocalVariable(name: "ptrIdx", scope: !5561, file: !3, line: 1437, type: !17)
!5581 = !DILocation(line: 1437, column: 9, scope: !5561)
!5582 = !DILocalVariable(name: "subdivLevels", scope: !5561, file: !3, line: 1438, type: !17)
!5583 = !DILocation(line: 1438, column: 6, scope: !5561)
!5584 = !DILocation(line: 1438, column: 21, scope: !5561)
!5585 = !DILocation(line: 1438, column: 25, scope: !5561)
!5586 = !DILocalVariable(name: "lvl", scope: !5561, file: !3, line: 1439, type: !17)
!5587 = !DILocation(line: 1439, column: 6, scope: !5561)
!5588 = !DILocation(line: 1439, column: 12, scope: !5561)
!5589 = !DILocation(line: 1439, column: 16, scope: !5561)
!5590 = !DILocalVariable(name: "edgeSize", scope: !5561, file: !3, line: 1440, type: !17)
!5591 = !DILocation(line: 1440, column: 6, scope: !5561)
!5592 = !DILocation(line: 1440, column: 30, scope: !5561)
!5593 = !DILocation(line: 1440, column: 17, scope: !5561)
!5594 = !DILocalVariable(name: "gridSize", scope: !5561, file: !3, line: 1441, type: !17)
!5595 = !DILocation(line: 1441, column: 6, scope: !5561)
!5596 = !DILocation(line: 1441, column: 30, scope: !5561)
!5597 = !DILocation(line: 1441, column: 17, scope: !5561)
!5598 = !DILocalVariable(name: "normalDataOffset", scope: !5561, file: !3, line: 1442, type: !17)
!5599 = !DILocation(line: 1442, column: 6, scope: !5561)
!5600 = !DILocation(line: 1442, column: 25, scope: !5561)
!5601 = !DILocation(line: 1442, column: 29, scope: !5561)
!5602 = !DILocalVariable(name: "vertDataSize", scope: !5561, file: !3, line: 1443, type: !17)
!5603 = !DILocation(line: 1443, column: 6, scope: !5561)
!5604 = !DILocation(line: 1443, column: 21, scope: !5561)
!5605 = !DILocation(line: 1443, column: 25, scope: !5561)
!5606 = !DILocation(line: 1443, column: 33, scope: !5561)
!5607 = !DILocation(line: 1448, column: 14, scope: !5608)
!5608 = distinct !DILexicalBlock(scope: !5561, file: !3, line: 1448, column: 2)
!5609 = !DILocation(line: 1448, column: 7, scope: !5608)
!5610 = !DILocation(line: 1448, column: 19, scope: !5611)
!5611 = distinct !DILexicalBlock(scope: !5608, file: !3, line: 1448, column: 2)
!5612 = !DILocation(line: 1448, column: 28, scope: !5611)
!5613 = !DILocation(line: 1448, column: 26, scope: !5611)
!5614 = !DILocation(line: 1448, column: 2, scope: !5608)
!5615 = !DILocalVariable(name: "f", scope: !5616, file: !3, line: 1449, type: !97)
!5616 = distinct !DILexicalBlock(scope: !5611, file: !3, line: 1448, column: 52)
!5617 = !DILocation(line: 1449, column: 12, scope: !5616)
!5618 = !DILocation(line: 1449, column: 28, scope: !5616)
!5619 = !DILocation(line: 1449, column: 38, scope: !5616)
!5620 = !DILocalVariable(name: "S", scope: !5616, file: !3, line: 1450, type: !17)
!5621 = !DILocation(line: 1450, column: 7, scope: !5616)
!5622 = !DILocalVariable(name: "x", scope: !5616, file: !3, line: 1450, type: !17)
!5623 = !DILocation(line: 1450, column: 10, scope: !5616)
!5624 = !DILocalVariable(name: "y", scope: !5616, file: !3, line: 1450, type: !17)
!5625 = !DILocation(line: 1450, column: 13, scope: !5616)
!5626 = !DILocalVariable(name: "no", scope: !5616, file: !3, line: 1451, type: !5627)
!5627 = !DICompositeType(tag: DW_TAG_array_type, baseType: !69, size: 96, elements: !5628)
!5628 = !{!5629}
!5629 = !DISubrange(count: 3)
!5630 = !DILocation(line: 1451, column: 9, scope: !5616)
!5631 = !DILocation(line: 1453, column: 10, scope: !5632)
!5632 = distinct !DILexicalBlock(scope: !5616, file: !3, line: 1453, column: 3)
!5633 = !DILocation(line: 1453, column: 8, scope: !5632)
!5634 = !DILocation(line: 1453, column: 15, scope: !5635)
!5635 = distinct !DILexicalBlock(scope: !5632, file: !3, line: 1453, column: 3)
!5636 = !DILocation(line: 1453, column: 19, scope: !5635)
!5637 = !DILocation(line: 1453, column: 22, scope: !5635)
!5638 = !DILocation(line: 1453, column: 17, scope: !5635)
!5639 = !DILocation(line: 1453, column: 3, scope: !5632)
!5640 = !DILocation(line: 1454, column: 11, scope: !5641)
!5641 = distinct !DILexicalBlock(scope: !5642, file: !3, line: 1454, column: 4)
!5642 = distinct !DILexicalBlock(scope: !5635, file: !3, line: 1453, column: 37)
!5643 = !DILocation(line: 1454, column: 9, scope: !5641)
!5644 = !DILocation(line: 1454, column: 16, scope: !5645)
!5645 = distinct !DILexicalBlock(scope: !5641, file: !3, line: 1454, column: 4)
!5646 = !DILocation(line: 1454, column: 20, scope: !5645)
!5647 = !DILocation(line: 1454, column: 29, scope: !5645)
!5648 = !DILocation(line: 1454, column: 18, scope: !5645)
!5649 = !DILocation(line: 1454, column: 4, scope: !5641)
!5650 = !DILocation(line: 1455, column: 12, scope: !5651)
!5651 = distinct !DILexicalBlock(scope: !5652, file: !3, line: 1455, column: 5)
!5652 = distinct !DILexicalBlock(scope: !5645, file: !3, line: 1454, column: 39)
!5653 = !DILocation(line: 1455, column: 10, scope: !5651)
!5654 = !DILocation(line: 1455, column: 17, scope: !5655)
!5655 = distinct !DILexicalBlock(scope: !5651, file: !3, line: 1455, column: 5)
!5656 = !DILocation(line: 1455, column: 21, scope: !5655)
!5657 = !DILocation(line: 1455, column: 30, scope: !5655)
!5658 = !DILocation(line: 1455, column: 19, scope: !5655)
!5659 = !DILocation(line: 1455, column: 5, scope: !5651)
!5660 = !DILocalVariable(name: "_a", scope: !5661, file: !3, line: 1456, type: !68)
!5661 = distinct !DILexicalBlock(scope: !5662, file: !3, line: 1456, column: 6)
!5662 = distinct !DILexicalBlock(scope: !5655, file: !3, line: 1455, column: 40)
!5663 = !DILocation(line: 1456, column: 6, scope: !5661)
!5664 = !DILocation(line: 1457, column: 5, scope: !5662)
!5665 = !DILocation(line: 1455, column: 36, scope: !5655)
!5666 = !DILocation(line: 1455, column: 5, scope: !5655)
!5667 = distinct !{!5667, !5659, !5668}
!5668 = !DILocation(line: 1457, column: 5, scope: !5651)
!5669 = !DILocation(line: 1458, column: 4, scope: !5652)
!5670 = !DILocation(line: 1454, column: 35, scope: !5645)
!5671 = !DILocation(line: 1454, column: 4, scope: !5645)
!5672 = distinct !{!5672, !5649, !5673}
!5673 = !DILocation(line: 1458, column: 4, scope: !5641)
!5674 = !DILocation(line: 1460, column: 22, scope: !5675)
!5675 = distinct !DILexicalBlock(scope: !5642, file: !3, line: 1460, column: 8)
!5676 = !DILocation(line: 1460, column: 8, scope: !5675)
!5677 = !DILocation(line: 1460, column: 26, scope: !5675)
!5678 = !DILocation(line: 1460, column: 28, scope: !5675)
!5679 = !DILocation(line: 1460, column: 34, scope: !5675)
!5680 = !DILocation(line: 1460, column: 37, scope: !5675)
!5681 = !DILocation(line: 1460, column: 32, scope: !5675)
!5682 = !DILocation(line: 1460, column: 49, scope: !5675)
!5683 = !DILocation(line: 1460, column: 52, scope: !5675)
!5684 = !DILocation(line: 1460, column: 47, scope: !5675)
!5685 = !DILocation(line: 1460, column: 63, scope: !5675)
!5686 = !DILocation(line: 1460, column: 69, scope: !5675)
!5687 = !DILocation(line: 1460, column: 8, scope: !5642)
!5688 = !DILocation(line: 1461, column: 12, scope: !5689)
!5689 = distinct !DILexicalBlock(scope: !5690, file: !3, line: 1461, column: 5)
!5690 = distinct !DILexicalBlock(scope: !5675, file: !3, line: 1460, column: 87)
!5691 = !DILocation(line: 1461, column: 10, scope: !5689)
!5692 = !DILocation(line: 1461, column: 17, scope: !5693)
!5693 = distinct !DILexicalBlock(scope: !5689, file: !3, line: 1461, column: 5)
!5694 = !DILocation(line: 1461, column: 21, scope: !5693)
!5695 = !DILocation(line: 1461, column: 30, scope: !5693)
!5696 = !DILocation(line: 1461, column: 19, scope: !5693)
!5697 = !DILocation(line: 1461, column: 5, scope: !5689)
!5698 = !DILocalVariable(name: "_a", scope: !5699, file: !3, line: 1462, type: !68)
!5699 = distinct !DILexicalBlock(scope: !5700, file: !3, line: 1462, column: 6)
!5700 = distinct !DILexicalBlock(scope: !5693, file: !3, line: 1461, column: 40)
!5701 = !DILocation(line: 1462, column: 6, scope: !5699)
!5702 = !DILocation(line: 1463, column: 5, scope: !5700)
!5703 = !DILocation(line: 1461, column: 36, scope: !5693)
!5704 = !DILocation(line: 1461, column: 5, scope: !5693)
!5705 = distinct !{!5705, !5697, !5706}
!5706 = !DILocation(line: 1463, column: 5, scope: !5689)
!5707 = !DILocation(line: 1464, column: 4, scope: !5690)
!5708 = !DILocation(line: 1465, column: 22, scope: !5709)
!5709 = distinct !DILexicalBlock(scope: !5642, file: !3, line: 1465, column: 8)
!5710 = !DILocation(line: 1465, column: 8, scope: !5709)
!5711 = !DILocation(line: 1465, column: 25, scope: !5709)
!5712 = !DILocation(line: 1465, column: 29, scope: !5709)
!5713 = !DILocation(line: 1465, column: 35, scope: !5709)
!5714 = !DILocation(line: 1465, column: 8, scope: !5642)
!5715 = !DILocation(line: 1466, column: 12, scope: !5716)
!5716 = distinct !DILexicalBlock(scope: !5717, file: !3, line: 1466, column: 5)
!5717 = distinct !DILexicalBlock(scope: !5709, file: !3, line: 1465, column: 53)
!5718 = !DILocation(line: 1466, column: 10, scope: !5716)
!5719 = !DILocation(line: 1466, column: 17, scope: !5720)
!5720 = distinct !DILexicalBlock(scope: !5716, file: !3, line: 1466, column: 5)
!5721 = !DILocation(line: 1466, column: 21, scope: !5720)
!5722 = !DILocation(line: 1466, column: 30, scope: !5720)
!5723 = !DILocation(line: 1466, column: 19, scope: !5720)
!5724 = !DILocation(line: 1466, column: 5, scope: !5716)
!5725 = !DILocalVariable(name: "_a", scope: !5726, file: !3, line: 1467, type: !68)
!5726 = distinct !DILexicalBlock(scope: !5727, file: !3, line: 1467, column: 6)
!5727 = distinct !DILexicalBlock(scope: !5720, file: !3, line: 1466, column: 40)
!5728 = !DILocation(line: 1467, column: 6, scope: !5726)
!5729 = !DILocation(line: 1468, column: 5, scope: !5727)
!5730 = !DILocation(line: 1466, column: 36, scope: !5720)
!5731 = !DILocation(line: 1466, column: 5, scope: !5720)
!5732 = distinct !{!5732, !5724, !5733}
!5733 = !DILocation(line: 1468, column: 5, scope: !5716)
!5734 = !DILocation(line: 1469, column: 4, scope: !5717)
!5735 = !DILocation(line: 1470, column: 22, scope: !5736)
!5736 = distinct !DILexicalBlock(scope: !5642, file: !3, line: 1470, column: 8)
!5737 = !DILocation(line: 1470, column: 8, scope: !5736)
!5738 = !DILocation(line: 1470, column: 25, scope: !5736)
!5739 = !DILocation(line: 1470, column: 29, scope: !5736)
!5740 = !DILocation(line: 1470, column: 35, scope: !5736)
!5741 = !DILocation(line: 1470, column: 8, scope: !5642)
!5742 = !DILocalVariable(name: "_a", scope: !5743, file: !3, line: 1471, type: !68)
!5743 = distinct !DILexicalBlock(scope: !5744, file: !3, line: 1471, column: 5)
!5744 = distinct !DILexicalBlock(scope: !5736, file: !3, line: 1470, column: 53)
!5745 = !DILocation(line: 1471, column: 5, scope: !5743)
!5746 = !DILocation(line: 1472, column: 4, scope: !5744)
!5747 = !DILocation(line: 1473, column: 3, scope: !5642)
!5748 = !DILocation(line: 1453, column: 33, scope: !5635)
!5749 = !DILocation(line: 1453, column: 3, scope: !5635)
!5750 = distinct !{!5750, !5639, !5751}
!5751 = !DILocation(line: 1473, column: 3, scope: !5632)
!5752 = !DILocation(line: 1475, column: 10, scope: !5753)
!5753 = distinct !DILexicalBlock(scope: !5616, file: !3, line: 1475, column: 3)
!5754 = !DILocation(line: 1475, column: 8, scope: !5753)
!5755 = !DILocation(line: 1475, column: 15, scope: !5756)
!5756 = distinct !DILexicalBlock(scope: !5753, file: !3, line: 1475, column: 3)
!5757 = !DILocation(line: 1475, column: 19, scope: !5756)
!5758 = !DILocation(line: 1475, column: 22, scope: !5756)
!5759 = !DILocation(line: 1475, column: 17, scope: !5756)
!5760 = !DILocation(line: 1475, column: 3, scope: !5753)
!5761 = !DILocalVariable(name: "yLimit", scope: !5762, file: !3, line: 1476, type: !17)
!5762 = distinct !DILexicalBlock(scope: !5756, file: !3, line: 1475, column: 37)
!5763 = !DILocation(line: 1476, column: 8, scope: !5762)
!5764 = !DILocation(line: 1476, column: 33, scope: !5762)
!5765 = !DILocation(line: 1476, column: 19, scope: !5762)
!5766 = !DILocation(line: 1476, column: 37, scope: !5762)
!5767 = !DILocation(line: 1476, column: 39, scope: !5762)
!5768 = !DILocation(line: 1476, column: 45, scope: !5762)
!5769 = !DILocation(line: 1476, column: 48, scope: !5762)
!5770 = !DILocation(line: 1476, column: 43, scope: !5762)
!5771 = !DILocation(line: 1476, column: 60, scope: !5762)
!5772 = !DILocation(line: 1476, column: 63, scope: !5762)
!5773 = !DILocation(line: 1476, column: 58, scope: !5762)
!5774 = !DILocation(line: 1476, column: 74, scope: !5762)
!5775 = !DILocation(line: 1476, column: 80, scope: !5762)
!5776 = !DILocation(line: 1476, column: 17, scope: !5762)
!5777 = !DILocalVariable(name: "xLimit", scope: !5762, file: !3, line: 1477, type: !17)
!5778 = !DILocation(line: 1477, column: 8, scope: !5762)
!5779 = !DILocation(line: 1477, column: 33, scope: !5762)
!5780 = !DILocation(line: 1477, column: 19, scope: !5762)
!5781 = !DILocation(line: 1477, column: 36, scope: !5762)
!5782 = !DILocation(line: 1477, column: 40, scope: !5762)
!5783 = !DILocation(line: 1477, column: 46, scope: !5762)
!5784 = !DILocation(line: 1477, column: 17, scope: !5762)
!5785 = !DILocalVariable(name: "yLimitNext", scope: !5762, file: !3, line: 1478, type: !17)
!5786 = !DILocation(line: 1478, column: 8, scope: !5762)
!5787 = !DILocation(line: 1478, column: 21, scope: !5762)
!5788 = !DILocalVariable(name: "xLimitPrev", scope: !5762, file: !3, line: 1479, type: !17)
!5789 = !DILocation(line: 1479, column: 8, scope: !5762)
!5790 = !DILocation(line: 1479, column: 21, scope: !5762)
!5791 = !DILocation(line: 1481, column: 11, scope: !5792)
!5792 = distinct !DILexicalBlock(scope: !5762, file: !3, line: 1481, column: 4)
!5793 = !DILocation(line: 1481, column: 9, scope: !5792)
!5794 = !DILocation(line: 1481, column: 16, scope: !5795)
!5795 = distinct !DILexicalBlock(scope: !5792, file: !3, line: 1481, column: 4)
!5796 = !DILocation(line: 1481, column: 20, scope: !5795)
!5797 = !DILocation(line: 1481, column: 29, scope: !5795)
!5798 = !DILocation(line: 1481, column: 18, scope: !5795)
!5799 = !DILocation(line: 1481, column: 4, scope: !5792)
!5800 = !DILocation(line: 1482, column: 12, scope: !5801)
!5801 = distinct !DILexicalBlock(scope: !5802, file: !3, line: 1482, column: 5)
!5802 = distinct !DILexicalBlock(scope: !5795, file: !3, line: 1481, column: 39)
!5803 = !DILocation(line: 1482, column: 10, scope: !5801)
!5804 = !DILocation(line: 1482, column: 17, scope: !5805)
!5805 = distinct !DILexicalBlock(scope: !5801, file: !3, line: 1482, column: 5)
!5806 = !DILocation(line: 1482, column: 21, scope: !5805)
!5807 = !DILocation(line: 1482, column: 30, scope: !5805)
!5808 = !DILocation(line: 1482, column: 19, scope: !5805)
!5809 = !DILocation(line: 1482, column: 5, scope: !5801)
!5810 = !DILocalVariable(name: "xPlusOk", scope: !5811, file: !3, line: 1483, type: !17)
!5811 = distinct !DILexicalBlock(scope: !5805, file: !3, line: 1482, column: 40)
!5812 = !DILocation(line: 1483, column: 10, scope: !5811)
!5813 = !DILocation(line: 1483, column: 22, scope: !5811)
!5814 = !DILocation(line: 1483, column: 29, scope: !5811)
!5815 = !DILocation(line: 1483, column: 32, scope: !5811)
!5816 = !DILocation(line: 1483, column: 36, scope: !5811)
!5817 = !DILocation(line: 1483, column: 45, scope: !5811)
!5818 = !DILocation(line: 1483, column: 34, scope: !5811)
!5819 = !DILocalVariable(name: "yPlusOk", scope: !5811, file: !3, line: 1484, type: !17)
!5820 = !DILocation(line: 1484, column: 10, scope: !5811)
!5821 = !DILocation(line: 1484, column: 22, scope: !5811)
!5822 = !DILocation(line: 1484, column: 29, scope: !5811)
!5823 = !DILocation(line: 1484, column: 32, scope: !5811)
!5824 = !DILocation(line: 1484, column: 36, scope: !5811)
!5825 = !DILocation(line: 1484, column: 45, scope: !5811)
!5826 = !DILocation(line: 1484, column: 34, scope: !5811)
!5827 = !DILocation(line: 1486, column: 6, scope: !5811)
!5828 = !DILocalVariable(name: "_a", scope: !5829, file: !3, line: 1488, type: !68)
!5829 = distinct !DILexicalBlock(scope: !5811, file: !3, line: 1488, column: 6)
!5830 = !DILocation(line: 1488, column: 6, scope: !5829)
!5831 = !DILocalVariable(name: "_b", scope: !5829, file: !3, line: 1488, type: !68)
!5832 = !DILocation(line: 1489, column: 10, scope: !5833)
!5833 = distinct !DILexicalBlock(scope: !5811, file: !3, line: 1489, column: 10)
!5834 = !DILocation(line: 1489, column: 10, scope: !5811)
!5835 = !DILocalVariable(name: "_a", scope: !5836, file: !3, line: 1490, type: !68)
!5836 = distinct !DILexicalBlock(scope: !5833, file: !3, line: 1490, column: 7)
!5837 = !DILocation(line: 1490, column: 7, scope: !5836)
!5838 = !DILocalVariable(name: "_b", scope: !5836, file: !3, line: 1490, type: !68)
!5839 = !DILocation(line: 1491, column: 10, scope: !5840)
!5840 = distinct !DILexicalBlock(scope: !5811, file: !3, line: 1491, column: 10)
!5841 = !DILocation(line: 1491, column: 10, scope: !5811)
!5842 = !DILocalVariable(name: "_a", scope: !5843, file: !3, line: 1492, type: !68)
!5843 = distinct !DILexicalBlock(scope: !5840, file: !3, line: 1492, column: 7)
!5844 = !DILocation(line: 1492, column: 7, scope: !5843)
!5845 = !DILocalVariable(name: "_b", scope: !5843, file: !3, line: 1492, type: !68)
!5846 = !DILocation(line: 1493, column: 10, scope: !5847)
!5847 = distinct !DILexicalBlock(scope: !5811, file: !3, line: 1493, column: 10)
!5848 = !DILocation(line: 1493, column: 18, scope: !5847)
!5849 = !DILocation(line: 1493, column: 21, scope: !5847)
!5850 = !DILocation(line: 1493, column: 10, scope: !5811)
!5851 = !DILocation(line: 1494, column: 11, scope: !5852)
!5852 = distinct !DILexicalBlock(scope: !5853, file: !3, line: 1494, column: 11)
!5853 = distinct !DILexicalBlock(scope: !5847, file: !3, line: 1493, column: 30)
!5854 = !DILocation(line: 1494, column: 15, scope: !5852)
!5855 = !DILocation(line: 1494, column: 24, scope: !5852)
!5856 = !DILocation(line: 1494, column: 13, scope: !5852)
!5857 = !DILocation(line: 1494, column: 28, scope: !5852)
!5858 = !DILocation(line: 1494, column: 31, scope: !5852)
!5859 = !DILocation(line: 1494, column: 35, scope: !5852)
!5860 = !DILocation(line: 1494, column: 44, scope: !5852)
!5861 = !DILocation(line: 1494, column: 33, scope: !5852)
!5862 = !DILocation(line: 1494, column: 48, scope: !5852)
!5863 = !DILocation(line: 1494, column: 65, scope: !5852)
!5864 = !DILocation(line: 1494, column: 51, scope: !5852)
!5865 = !DILocation(line: 1494, column: 68, scope: !5852)
!5866 = !DILocation(line: 1494, column: 72, scope: !5852)
!5867 = !DILocation(line: 1494, column: 78, scope: !5852)
!5868 = !DILocation(line: 1494, column: 11, scope: !5853)
!5869 = !DILocalVariable(name: "_a", scope: !5870, file: !3, line: 1495, type: !68)
!5870 = distinct !DILexicalBlock(scope: !5871, file: !3, line: 1495, column: 8)
!5871 = distinct !DILexicalBlock(scope: !5852, file: !3, line: 1494, column: 96)
!5872 = !DILocation(line: 1495, column: 8, scope: !5870)
!5873 = !DILocalVariable(name: "_b", scope: !5870, file: !3, line: 1495, type: !68)
!5874 = !DILocation(line: 1496, column: 7, scope: !5871)
!5875 = !DILocation(line: 1497, column: 6, scope: !5853)
!5876 = !DILocation(line: 1499, column: 10, scope: !5877)
!5877 = distinct !DILexicalBlock(scope: !5811, file: !3, line: 1499, column: 10)
!5878 = !DILocation(line: 1499, column: 12, scope: !5877)
!5879 = !DILocation(line: 1499, column: 17, scope: !5877)
!5880 = !DILocation(line: 1499, column: 20, scope: !5877)
!5881 = !DILocation(line: 1499, column: 22, scope: !5877)
!5882 = !DILocation(line: 1499, column: 10, scope: !5811)
!5883 = !DILocalVariable(name: "K", scope: !5884, file: !3, line: 1500, type: !17)
!5884 = distinct !DILexicalBlock(scope: !5877, file: !3, line: 1499, column: 28)
!5885 = !DILocation(line: 1500, column: 11, scope: !5884)
!5886 = !DILocation(line: 1502, column: 12, scope: !5887)
!5887 = distinct !DILexicalBlock(scope: !5884, file: !3, line: 1502, column: 11)
!5888 = !DILocation(line: 1502, column: 23, scope: !5887)
!5889 = !DILocation(line: 1502, column: 30, scope: !5887)
!5890 = !DILocation(line: 1502, column: 39, scope: !5887)
!5891 = !DILocation(line: 1502, column: 28, scope: !5887)
!5892 = !DILocation(line: 1502, column: 11, scope: !5884)
!5893 = !DILocalVariable(name: "_a", scope: !5894, file: !3, line: 1503, type: !68)
!5894 = distinct !DILexicalBlock(scope: !5887, file: !3, line: 1503, column: 8)
!5895 = !DILocation(line: 1503, column: 8, scope: !5894)
!5896 = !DILocalVariable(name: "_b", scope: !5894, file: !3, line: 1503, type: !68)
!5897 = !DILocation(line: 1504, column: 12, scope: !5898)
!5898 = distinct !DILexicalBlock(scope: !5884, file: !3, line: 1504, column: 11)
!5899 = !DILocation(line: 1504, column: 23, scope: !5898)
!5900 = !DILocation(line: 1504, column: 30, scope: !5898)
!5901 = !DILocation(line: 1504, column: 39, scope: !5898)
!5902 = !DILocation(line: 1504, column: 28, scope: !5898)
!5903 = !DILocation(line: 1504, column: 11, scope: !5884)
!5904 = !DILocalVariable(name: "_a", scope: !5905, file: !3, line: 1505, type: !68)
!5905 = distinct !DILexicalBlock(scope: !5898, file: !3, line: 1505, column: 8)
!5906 = !DILocation(line: 1505, column: 8, scope: !5905)
!5907 = !DILocalVariable(name: "_b", scope: !5905, file: !3, line: 1505, type: !68)
!5908 = !DILocation(line: 1507, column: 14, scope: !5909)
!5909 = distinct !DILexicalBlock(scope: !5884, file: !3, line: 1507, column: 7)
!5910 = !DILocation(line: 1507, column: 12, scope: !5909)
!5911 = !DILocation(line: 1507, column: 19, scope: !5912)
!5912 = distinct !DILexicalBlock(scope: !5909, file: !3, line: 1507, column: 7)
!5913 = !DILocation(line: 1507, column: 23, scope: !5912)
!5914 = !DILocation(line: 1507, column: 26, scope: !5912)
!5915 = !DILocation(line: 1507, column: 21, scope: !5912)
!5916 = !DILocation(line: 1507, column: 7, scope: !5909)
!5917 = !DILocation(line: 1508, column: 12, scope: !5918)
!5918 = distinct !DILexicalBlock(scope: !5919, file: !3, line: 1508, column: 12)
!5919 = distinct !DILexicalBlock(scope: !5912, file: !3, line: 1507, column: 41)
!5920 = !DILocation(line: 1508, column: 17, scope: !5918)
!5921 = !DILocation(line: 1508, column: 14, scope: !5918)
!5922 = !DILocation(line: 1508, column: 12, scope: !5919)
!5923 = !DILocalVariable(name: "_a", scope: !5924, file: !3, line: 1509, type: !68)
!5924 = distinct !DILexicalBlock(scope: !5925, file: !3, line: 1509, column: 9)
!5925 = distinct !DILexicalBlock(scope: !5918, file: !3, line: 1508, column: 20)
!5926 = !DILocation(line: 1509, column: 9, scope: !5924)
!5927 = !DILocalVariable(name: "_b", scope: !5924, file: !3, line: 1509, type: !68)
!5928 = !DILocation(line: 1510, column: 8, scope: !5925)
!5929 = !DILocation(line: 1511, column: 7, scope: !5919)
!5930 = !DILocation(line: 1507, column: 37, scope: !5912)
!5931 = !DILocation(line: 1507, column: 7, scope: !5912)
!5932 = distinct !{!5932, !5916, !5933}
!5933 = !DILocation(line: 1511, column: 7, scope: !5909)
!5934 = !DILocation(line: 1512, column: 6, scope: !5884)
!5935 = !DILocation(line: 1513, column: 15, scope: !5936)
!5936 = distinct !DILexicalBlock(scope: !5877, file: !3, line: 1513, column: 15)
!5937 = !DILocation(line: 1513, column: 17, scope: !5936)
!5938 = !DILocation(line: 1513, column: 15, scope: !5877)
!5939 = !DILocalVariable(name: "_a", scope: !5940, file: !3, line: 1514, type: !68)
!5940 = distinct !DILexicalBlock(scope: !5941, file: !3, line: 1514, column: 7)
!5941 = distinct !DILexicalBlock(scope: !5936, file: !3, line: 1513, column: 23)
!5942 = !DILocation(line: 1514, column: 7, scope: !5940)
!5943 = !DILocalVariable(name: "_b", scope: !5940, file: !3, line: 1514, type: !68)
!5944 = !DILocation(line: 1515, column: 12, scope: !5945)
!5945 = distinct !DILexicalBlock(scope: !5941, file: !3, line: 1515, column: 11)
!5946 = !DILocation(line: 1515, column: 23, scope: !5945)
!5947 = !DILocation(line: 1515, column: 26, scope: !5945)
!5948 = !DILocation(line: 1515, column: 30, scope: !5945)
!5949 = !DILocation(line: 1515, column: 39, scope: !5945)
!5950 = !DILocation(line: 1515, column: 28, scope: !5945)
!5951 = !DILocation(line: 1515, column: 11, scope: !5941)
!5952 = !DILocalVariable(name: "_a", scope: !5953, file: !3, line: 1516, type: !68)
!5953 = distinct !DILexicalBlock(scope: !5945, file: !3, line: 1516, column: 8)
!5954 = !DILocation(line: 1516, column: 8, scope: !5953)
!5955 = !DILocalVariable(name: "_b", scope: !5953, file: !3, line: 1516, type: !68)
!5956 = !DILocation(line: 1517, column: 6, scope: !5941)
!5957 = !DILocation(line: 1518, column: 15, scope: !5958)
!5958 = distinct !DILexicalBlock(scope: !5936, file: !3, line: 1518, column: 15)
!5959 = !DILocation(line: 1518, column: 17, scope: !5958)
!5960 = !DILocation(line: 1518, column: 15, scope: !5936)
!5961 = !DILocalVariable(name: "_a", scope: !5962, file: !3, line: 1519, type: !68)
!5962 = distinct !DILexicalBlock(scope: !5963, file: !3, line: 1519, column: 7)
!5963 = distinct !DILexicalBlock(scope: !5958, file: !3, line: 1518, column: 23)
!5964 = !DILocation(line: 1519, column: 7, scope: !5962)
!5965 = !DILocalVariable(name: "_b", scope: !5962, file: !3, line: 1519, type: !68)
!5966 = !DILocation(line: 1520, column: 12, scope: !5967)
!5967 = distinct !DILexicalBlock(scope: !5963, file: !3, line: 1520, column: 11)
!5968 = !DILocation(line: 1520, column: 23, scope: !5967)
!5969 = !DILocation(line: 1520, column: 26, scope: !5967)
!5970 = !DILocation(line: 1520, column: 30, scope: !5967)
!5971 = !DILocation(line: 1520, column: 39, scope: !5967)
!5972 = !DILocation(line: 1520, column: 28, scope: !5967)
!5973 = !DILocation(line: 1520, column: 11, scope: !5963)
!5974 = !DILocalVariable(name: "_a", scope: !5975, file: !3, line: 1521, type: !68)
!5975 = distinct !DILexicalBlock(scope: !5967, file: !3, line: 1521, column: 8)
!5976 = !DILocation(line: 1521, column: 8, scope: !5975)
!5977 = !DILocalVariable(name: "_b", scope: !5975, file: !3, line: 1521, type: !68)
!5978 = !DILocation(line: 1522, column: 6, scope: !5963)
!5979 = !DILocation(line: 1523, column: 5, scope: !5811)
!5980 = !DILocation(line: 1482, column: 36, scope: !5805)
!5981 = !DILocation(line: 1482, column: 5, scope: !5805)
!5982 = distinct !{!5982, !5809, !5983}
!5983 = !DILocation(line: 1523, column: 5, scope: !5801)
!5984 = !DILocation(line: 1524, column: 4, scope: !5802)
!5985 = !DILocation(line: 1481, column: 35, scope: !5795)
!5986 = !DILocation(line: 1481, column: 4, scope: !5795)
!5987 = distinct !{!5987, !5799, !5988}
!5988 = !DILocation(line: 1524, column: 4, scope: !5792)
!5989 = !DILocation(line: 1525, column: 3, scope: !5762)
!5990 = !DILocation(line: 1475, column: 33, scope: !5756)
!5991 = !DILocation(line: 1475, column: 3, scope: !5756)
!5992 = distinct !{!5992, !5760, !5993}
!5993 = !DILocation(line: 1525, column: 3, scope: !5753)
!5994 = !DILocation(line: 1526, column: 2, scope: !5616)
!5995 = !DILocation(line: 1448, column: 48, scope: !5611)
!5996 = !DILocation(line: 1448, column: 2, scope: !5611)
!5997 = distinct !{!5997, !5614, !5998}
!5998 = !DILocation(line: 1526, column: 2, scope: !5608)
!5999 = !DILocation(line: 1528, column: 14, scope: !6000)
!6000 = distinct !DILexicalBlock(scope: !5561, file: !3, line: 1528, column: 2)
!6001 = !DILocation(line: 1528, column: 7, scope: !6000)
!6002 = !DILocation(line: 1528, column: 19, scope: !6003)
!6003 = distinct !DILexicalBlock(scope: !6000, file: !3, line: 1528, column: 2)
!6004 = !DILocation(line: 1528, column: 28, scope: !6003)
!6005 = !DILocation(line: 1528, column: 26, scope: !6003)
!6006 = !DILocation(line: 1528, column: 2, scope: !6000)
!6007 = !DILocalVariable(name: "v", scope: !6008, file: !3, line: 1529, type: !70)
!6008 = distinct !DILexicalBlock(scope: !6003, file: !3, line: 1528, column: 52)
!6009 = !DILocation(line: 1529, column: 12, scope: !6008)
!6010 = !DILocation(line: 1529, column: 28, scope: !6008)
!6011 = !DILocation(line: 1529, column: 38, scope: !6008)
!6012 = !DILocalVariable(name: "no", scope: !6008, file: !3, line: 1530, type: !68)
!6013 = !DILocation(line: 1530, column: 10, scope: !6008)
!6014 = !DILocation(line: 1530, column: 15, scope: !6008)
!6015 = !DILocalVariable(name: "_a", scope: !6016, file: !3, line: 1532, type: !68)
!6016 = distinct !DILexicalBlock(scope: !6008, file: !3, line: 1532, column: 3)
!6017 = !DILocation(line: 1532, column: 3, scope: !6016)
!6018 = !DILocation(line: 1534, column: 10, scope: !6019)
!6019 = distinct !DILexicalBlock(scope: !6008, file: !3, line: 1534, column: 3)
!6020 = !DILocation(line: 1534, column: 8, scope: !6019)
!6021 = !DILocation(line: 1534, column: 15, scope: !6022)
!6022 = distinct !DILexicalBlock(scope: !6019, file: !3, line: 1534, column: 3)
!6023 = !DILocation(line: 1534, column: 19, scope: !6022)
!6024 = !DILocation(line: 1534, column: 22, scope: !6022)
!6025 = !DILocation(line: 1534, column: 17, scope: !6022)
!6026 = !DILocation(line: 1534, column: 3, scope: !6019)
!6027 = !DILocalVariable(name: "f", scope: !6028, file: !3, line: 1535, type: !97)
!6028 = distinct !DILexicalBlock(scope: !6022, file: !3, line: 1534, column: 37)
!6029 = !DILocation(line: 1535, column: 13, scope: !6028)
!6030 = !DILocation(line: 1535, column: 17, scope: !6028)
!6031 = !DILocation(line: 1535, column: 20, scope: !6028)
!6032 = !DILocation(line: 1535, column: 26, scope: !6028)
!6033 = !DILocalVariable(name: "_a", scope: !6034, file: !3, line: 1536, type: !68)
!6034 = distinct !DILexicalBlock(scope: !6028, file: !3, line: 1536, column: 4)
!6035 = !DILocation(line: 1536, column: 4, scope: !6034)
!6036 = !DILocalVariable(name: "_b", scope: !6034, file: !3, line: 1536, type: !68)
!6037 = !DILocation(line: 1537, column: 3, scope: !6028)
!6038 = !DILocation(line: 1534, column: 33, scope: !6022)
!6039 = !DILocation(line: 1534, column: 3, scope: !6022)
!6040 = distinct !{!6040, !6026, !6041}
!6041 = !DILocation(line: 1537, column: 3, scope: !6019)
!6042 = !DILocation(line: 1539, column: 7, scope: !6043)
!6043 = distinct !DILexicalBlock(scope: !6008, file: !3, line: 1539, column: 7)
!6044 = !DILocation(line: 1539, column: 7, scope: !6008)
!6045 = !DILocalVariable(name: "_a", scope: !6046, file: !3, line: 1540, type: !68)
!6046 = distinct !DILexicalBlock(scope: !6047, file: !3, line: 1540, column: 4)
!6047 = distinct !DILexicalBlock(scope: !6043, file: !3, line: 1539, column: 35)
!6048 = !DILocation(line: 1540, column: 4, scope: !6046)
!6049 = !DILocalVariable(name: "_b", scope: !6046, file: !3, line: 1540, type: !68)
!6050 = !DILocation(line: 1541, column: 3, scope: !6047)
!6051 = !DILocation(line: 1543, column: 13, scope: !6008)
!6052 = !DILocation(line: 1543, column: 3, scope: !6008)
!6053 = !DILocation(line: 1545, column: 10, scope: !6054)
!6054 = distinct !DILexicalBlock(scope: !6008, file: !3, line: 1545, column: 3)
!6055 = !DILocation(line: 1545, column: 8, scope: !6054)
!6056 = !DILocation(line: 1545, column: 15, scope: !6057)
!6057 = distinct !DILexicalBlock(scope: !6054, file: !3, line: 1545, column: 3)
!6058 = !DILocation(line: 1545, column: 19, scope: !6057)
!6059 = !DILocation(line: 1545, column: 22, scope: !6057)
!6060 = !DILocation(line: 1545, column: 17, scope: !6057)
!6061 = !DILocation(line: 1545, column: 3, scope: !6054)
!6062 = !DILocalVariable(name: "f", scope: !6063, file: !3, line: 1546, type: !97)
!6063 = distinct !DILexicalBlock(scope: !6057, file: !3, line: 1545, column: 37)
!6064 = !DILocation(line: 1546, column: 13, scope: !6063)
!6065 = !DILocation(line: 1546, column: 17, scope: !6063)
!6066 = !DILocation(line: 1546, column: 20, scope: !6063)
!6067 = !DILocation(line: 1546, column: 26, scope: !6063)
!6068 = !DILocalVariable(name: "_a", scope: !6069, file: !3, line: 1547, type: !68)
!6069 = distinct !DILexicalBlock(scope: !6063, file: !3, line: 1547, column: 4)
!6070 = !DILocation(line: 1547, column: 4, scope: !6069)
!6071 = !DILocalVariable(name: "_b", scope: !6069, file: !3, line: 1547, type: !68)
!6072 = !DILocation(line: 1548, column: 3, scope: !6063)
!6073 = !DILocation(line: 1545, column: 33, scope: !6057)
!6074 = !DILocation(line: 1545, column: 3, scope: !6057)
!6075 = distinct !{!6075, !6061, !6076}
!6076 = !DILocation(line: 1548, column: 3, scope: !6054)
!6077 = !DILocation(line: 1549, column: 2, scope: !6008)
!6078 = !DILocation(line: 1528, column: 48, scope: !6003)
!6079 = !DILocation(line: 1528, column: 2, scope: !6003)
!6080 = distinct !{!6080, !6006, !6081}
!6081 = !DILocation(line: 1549, column: 2, scope: !6000)
!6082 = !DILocation(line: 1550, column: 14, scope: !6083)
!6083 = distinct !DILexicalBlock(scope: !5561, file: !3, line: 1550, column: 2)
!6084 = !DILocation(line: 1550, column: 7, scope: !6083)
!6085 = !DILocation(line: 1550, column: 19, scope: !6086)
!6086 = distinct !DILexicalBlock(scope: !6083, file: !3, line: 1550, column: 2)
!6087 = !DILocation(line: 1550, column: 28, scope: !6086)
!6088 = !DILocation(line: 1550, column: 26, scope: !6086)
!6089 = !DILocation(line: 1550, column: 2, scope: !6083)
!6090 = !DILocalVariable(name: "e", scope: !6091, file: !3, line: 1551, type: !84)
!6091 = distinct !DILexicalBlock(scope: !6086, file: !3, line: 1550, column: 52)
!6092 = !DILocation(line: 1551, column: 12, scope: !6091)
!6093 = !DILocation(line: 1551, column: 28, scope: !6091)
!6094 = !DILocation(line: 1551, column: 38, scope: !6091)
!6095 = !DILocation(line: 1553, column: 7, scope: !6096)
!6096 = distinct !DILexicalBlock(scope: !6091, file: !3, line: 1553, column: 7)
!6097 = !DILocation(line: 1553, column: 10, scope: !6096)
!6098 = !DILocation(line: 1553, column: 7, scope: !6091)
!6099 = !DILocalVariable(name: "fLast", scope: !6100, file: !3, line: 1554, type: !97)
!6100 = distinct !DILexicalBlock(scope: !6096, file: !3, line: 1553, column: 20)
!6101 = !DILocation(line: 1554, column: 13, scope: !6100)
!6102 = !DILocation(line: 1554, column: 21, scope: !6100)
!6103 = !DILocation(line: 1554, column: 24, scope: !6100)
!6104 = !DILocation(line: 1554, column: 30, scope: !6100)
!6105 = !DILocation(line: 1554, column: 33, scope: !6100)
!6106 = !DILocation(line: 1554, column: 42, scope: !6100)
!6107 = !DILocalVariable(name: "x", scope: !6100, file: !3, line: 1555, type: !17)
!6108 = !DILocation(line: 1555, column: 8, scope: !6100)
!6109 = !DILocation(line: 1557, column: 11, scope: !6110)
!6110 = distinct !DILexicalBlock(scope: !6100, file: !3, line: 1557, column: 4)
!6111 = !DILocation(line: 1557, column: 9, scope: !6110)
!6112 = !DILocation(line: 1557, column: 16, scope: !6113)
!6113 = distinct !DILexicalBlock(scope: !6110, file: !3, line: 1557, column: 4)
!6114 = !DILocation(line: 1557, column: 20, scope: !6113)
!6115 = !DILocation(line: 1557, column: 23, scope: !6113)
!6116 = !DILocation(line: 1557, column: 32, scope: !6113)
!6117 = !DILocation(line: 1557, column: 18, scope: !6113)
!6118 = !DILocation(line: 1557, column: 4, scope: !6110)
!6119 = !DILocalVariable(name: "f", scope: !6120, file: !3, line: 1558, type: !97)
!6120 = distinct !DILexicalBlock(scope: !6113, file: !3, line: 1557, column: 42)
!6121 = !DILocation(line: 1558, column: 14, scope: !6120)
!6122 = !DILocation(line: 1558, column: 18, scope: !6120)
!6123 = !DILocation(line: 1558, column: 21, scope: !6120)
!6124 = !DILocation(line: 1558, column: 27, scope: !6120)
!6125 = !DILocalVariable(name: "f_ed_idx", scope: !6120, file: !3, line: 1559, type: !6126)
!6126 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !17)
!6127 = !DILocation(line: 1559, column: 15, scope: !6120)
!6128 = !DILocation(line: 1559, column: 45, scope: !6120)
!6129 = !DILocation(line: 1559, column: 48, scope: !6120)
!6130 = !DILocation(line: 1559, column: 26, scope: !6120)
!6131 = !DILocalVariable(name: "f_ed_idx_last", scope: !6120, file: !3, line: 1560, type: !6126)
!6132 = !DILocation(line: 1560, column: 15, scope: !6120)
!6133 = !DILocation(line: 1560, column: 50, scope: !6120)
!6134 = !DILocation(line: 1560, column: 57, scope: !6120)
!6135 = !DILocation(line: 1560, column: 31, scope: !6120)
!6136 = !DILocation(line: 1562, column: 12, scope: !6137)
!6137 = distinct !DILexicalBlock(scope: !6120, file: !3, line: 1562, column: 5)
!6138 = !DILocation(line: 1562, column: 10, scope: !6137)
!6139 = !DILocation(line: 1562, column: 17, scope: !6140)
!6140 = distinct !DILexicalBlock(scope: !6137, file: !3, line: 1562, column: 5)
!6141 = !DILocation(line: 1562, column: 21, scope: !6140)
!6142 = !DILocation(line: 1562, column: 30, scope: !6140)
!6143 = !DILocation(line: 1562, column: 19, scope: !6140)
!6144 = !DILocation(line: 1562, column: 5, scope: !6137)
!6145 = !DILocalVariable(name: "_a", scope: !6146, file: !3, line: 1563, type: !68)
!6146 = distinct !DILexicalBlock(scope: !6147, file: !3, line: 1563, column: 6)
!6147 = distinct !DILexicalBlock(scope: !6140, file: !3, line: 1562, column: 40)
!6148 = !DILocation(line: 1563, column: 6, scope: !6146)
!6149 = !DILocalVariable(name: "_b", scope: !6146, file: !3, line: 1563, type: !68)
!6150 = !DILocation(line: 1565, column: 5, scope: !6147)
!6151 = !DILocation(line: 1562, column: 36, scope: !6140)
!6152 = !DILocation(line: 1562, column: 5, scope: !6140)
!6153 = distinct !{!6153, !6144, !6154}
!6154 = !DILocation(line: 1565, column: 5, scope: !6137)
!6155 = !DILocation(line: 1566, column: 4, scope: !6120)
!6156 = !DILocation(line: 1557, column: 38, scope: !6113)
!6157 = !DILocation(line: 1557, column: 4, scope: !6113)
!6158 = distinct !{!6158, !6118, !6159}
!6159 = !DILocation(line: 1566, column: 4, scope: !6110)
!6160 = !DILocation(line: 1568, column: 11, scope: !6161)
!6161 = distinct !DILexicalBlock(scope: !6100, file: !3, line: 1568, column: 4)
!6162 = !DILocation(line: 1568, column: 9, scope: !6161)
!6163 = !DILocation(line: 1568, column: 16, scope: !6164)
!6164 = distinct !DILexicalBlock(scope: !6161, file: !3, line: 1568, column: 4)
!6165 = !DILocation(line: 1568, column: 20, scope: !6164)
!6166 = !DILocation(line: 1568, column: 23, scope: !6164)
!6167 = !DILocation(line: 1568, column: 32, scope: !6164)
!6168 = !DILocation(line: 1568, column: 18, scope: !6164)
!6169 = !DILocation(line: 1568, column: 4, scope: !6161)
!6170 = !DILocalVariable(name: "f", scope: !6171, file: !3, line: 1569, type: !97)
!6171 = distinct !DILexicalBlock(scope: !6164, file: !3, line: 1568, column: 42)
!6172 = !DILocation(line: 1569, column: 14, scope: !6171)
!6173 = !DILocation(line: 1569, column: 18, scope: !6171)
!6174 = !DILocation(line: 1569, column: 21, scope: !6171)
!6175 = !DILocation(line: 1569, column: 27, scope: !6171)
!6176 = !DILocalVariable(name: "f_ed_idx", scope: !6171, file: !3, line: 1570, type: !6126)
!6177 = !DILocation(line: 1570, column: 15, scope: !6171)
!6178 = !DILocation(line: 1570, column: 45, scope: !6171)
!6179 = !DILocation(line: 1570, column: 48, scope: !6171)
!6180 = !DILocation(line: 1570, column: 26, scope: !6171)
!6181 = !DILocalVariable(name: "f_ed_idx_last", scope: !6171, file: !3, line: 1571, type: !6126)
!6182 = !DILocation(line: 1571, column: 15, scope: !6171)
!6183 = !DILocation(line: 1571, column: 50, scope: !6171)
!6184 = !DILocation(line: 1571, column: 57, scope: !6171)
!6185 = !DILocation(line: 1571, column: 31, scope: !6171)
!6186 = !DILocation(line: 1573, column: 12, scope: !6187)
!6187 = distinct !DILexicalBlock(scope: !6171, file: !3, line: 1573, column: 5)
!6188 = !DILocation(line: 1573, column: 10, scope: !6187)
!6189 = !DILocation(line: 1573, column: 17, scope: !6190)
!6190 = distinct !DILexicalBlock(scope: !6187, file: !3, line: 1573, column: 5)
!6191 = !DILocation(line: 1573, column: 21, scope: !6190)
!6192 = !DILocation(line: 1573, column: 30, scope: !6190)
!6193 = !DILocation(line: 1573, column: 19, scope: !6190)
!6194 = !DILocation(line: 1573, column: 5, scope: !6187)
!6195 = !DILocalVariable(name: "_a", scope: !6196, file: !3, line: 1574, type: !68)
!6196 = distinct !DILexicalBlock(scope: !6197, file: !3, line: 1574, column: 6)
!6197 = distinct !DILexicalBlock(scope: !6190, file: !3, line: 1573, column: 40)
!6198 = !DILocation(line: 1574, column: 6, scope: !6196)
!6199 = !DILocalVariable(name: "_b", scope: !6196, file: !3, line: 1574, type: !68)
!6200 = !DILocation(line: 1576, column: 5, scope: !6197)
!6201 = !DILocation(line: 1573, column: 36, scope: !6190)
!6202 = !DILocation(line: 1573, column: 5, scope: !6190)
!6203 = distinct !{!6203, !6194, !6204}
!6204 = !DILocation(line: 1576, column: 5, scope: !6187)
!6205 = !DILocation(line: 1577, column: 4, scope: !6171)
!6206 = !DILocation(line: 1568, column: 38, scope: !6164)
!6207 = !DILocation(line: 1568, column: 4, scope: !6164)
!6208 = distinct !{!6208, !6169, !6209}
!6209 = !DILocation(line: 1577, column: 4, scope: !6161)
!6210 = !DILocation(line: 1578, column: 3, scope: !6100)
!6211 = !DILocation(line: 1579, column: 2, scope: !6091)
!6212 = !DILocation(line: 1550, column: 48, scope: !6086)
!6213 = !DILocation(line: 1550, column: 2, scope: !6086)
!6214 = distinct !{!6214, !6089, !6215}
!6215 = !DILocation(line: 1579, column: 2, scope: !6083)
!6216 = !DILocation(line: 1584, column: 14, scope: !6217)
!6217 = distinct !DILexicalBlock(scope: !5561, file: !3, line: 1584, column: 2)
!6218 = !DILocation(line: 1584, column: 7, scope: !6217)
!6219 = !DILocation(line: 1584, column: 19, scope: !6220)
!6220 = distinct !DILexicalBlock(scope: !6217, file: !3, line: 1584, column: 2)
!6221 = !DILocation(line: 1584, column: 28, scope: !6220)
!6222 = !DILocation(line: 1584, column: 26, scope: !6220)
!6223 = !DILocation(line: 1584, column: 2, scope: !6217)
!6224 = !DILocalVariable(name: "f", scope: !6225, file: !3, line: 1585, type: !97)
!6225 = distinct !DILexicalBlock(scope: !6220, file: !3, line: 1584, column: 52)
!6226 = !DILocation(line: 1585, column: 12, scope: !6225)
!6227 = !DILocation(line: 1585, column: 28, scope: !6225)
!6228 = !DILocation(line: 1585, column: 38, scope: !6225)
!6229 = !DILocalVariable(name: "S", scope: !6225, file: !3, line: 1586, type: !17)
!6230 = !DILocation(line: 1586, column: 7, scope: !6225)
!6231 = !DILocalVariable(name: "x", scope: !6225, file: !3, line: 1586, type: !17)
!6232 = !DILocation(line: 1586, column: 10, scope: !6225)
!6233 = !DILocalVariable(name: "y", scope: !6225, file: !3, line: 1586, type: !17)
!6234 = !DILocation(line: 1586, column: 13, scope: !6225)
!6235 = !DILocation(line: 1588, column: 10, scope: !6236)
!6236 = distinct !DILexicalBlock(scope: !6225, file: !3, line: 1588, column: 3)
!6237 = !DILocation(line: 1588, column: 8, scope: !6236)
!6238 = !DILocation(line: 1588, column: 15, scope: !6239)
!6239 = distinct !DILexicalBlock(scope: !6236, file: !3, line: 1588, column: 3)
!6240 = !DILocation(line: 1588, column: 19, scope: !6239)
!6241 = !DILocation(line: 1588, column: 22, scope: !6239)
!6242 = !DILocation(line: 1588, column: 17, scope: !6239)
!6243 = !DILocation(line: 1588, column: 3, scope: !6236)
!6244 = !DILocalVariable(name: "_a", scope: !6245, file: !3, line: 1589, type: !68)
!6245 = distinct !DILexicalBlock(scope: !6246, file: !3, line: 1589, column: 4)
!6246 = distinct !DILexicalBlock(scope: !6239, file: !3, line: 1588, column: 37)
!6247 = !DILocation(line: 1589, column: 4, scope: !6245)
!6248 = !DILocalVariable(name: "_b", scope: !6245, file: !3, line: 1589, type: !68)
!6249 = !DILocation(line: 1591, column: 3, scope: !6246)
!6250 = !DILocation(line: 1588, column: 33, scope: !6239)
!6251 = !DILocation(line: 1588, column: 3, scope: !6239)
!6252 = distinct !{!6252, !6243, !6253}
!6253 = !DILocation(line: 1591, column: 3, scope: !6236)
!6254 = !DILocation(line: 1593, column: 10, scope: !6255)
!6255 = distinct !DILexicalBlock(scope: !6225, file: !3, line: 1593, column: 3)
!6256 = !DILocation(line: 1593, column: 8, scope: !6255)
!6257 = !DILocation(line: 1593, column: 15, scope: !6258)
!6258 = distinct !DILexicalBlock(scope: !6255, file: !3, line: 1593, column: 3)
!6259 = !DILocation(line: 1593, column: 19, scope: !6258)
!6260 = !DILocation(line: 1593, column: 22, scope: !6258)
!6261 = !DILocation(line: 1593, column: 17, scope: !6258)
!6262 = !DILocation(line: 1593, column: 3, scope: !6255)
!6263 = !DILocation(line: 1594, column: 11, scope: !6264)
!6264 = distinct !DILexicalBlock(scope: !6265, file: !3, line: 1594, column: 4)
!6265 = distinct !DILexicalBlock(scope: !6258, file: !3, line: 1593, column: 37)
!6266 = !DILocation(line: 1594, column: 9, scope: !6264)
!6267 = !DILocation(line: 1594, column: 16, scope: !6268)
!6268 = distinct !DILexicalBlock(scope: !6264, file: !3, line: 1594, column: 4)
!6269 = !DILocation(line: 1594, column: 20, scope: !6268)
!6270 = !DILocation(line: 1594, column: 18, scope: !6268)
!6271 = !DILocation(line: 1594, column: 4, scope: !6264)
!6272 = !DILocation(line: 1595, column: 12, scope: !6273)
!6273 = distinct !DILexicalBlock(scope: !6274, file: !3, line: 1595, column: 5)
!6274 = distinct !DILexicalBlock(scope: !6268, file: !3, line: 1594, column: 35)
!6275 = !DILocation(line: 1595, column: 10, scope: !6273)
!6276 = !DILocation(line: 1595, column: 17, scope: !6277)
!6277 = distinct !DILexicalBlock(scope: !6273, file: !3, line: 1595, column: 5)
!6278 = !DILocation(line: 1595, column: 21, scope: !6277)
!6279 = !DILocation(line: 1595, column: 19, scope: !6277)
!6280 = !DILocation(line: 1595, column: 5, scope: !6273)
!6281 = !DILocalVariable(name: "no", scope: !6282, file: !3, line: 1596, type: !68)
!6282 = distinct !DILexicalBlock(scope: !6277, file: !3, line: 1595, column: 36)
!6283 = !DILocation(line: 1596, column: 13, scope: !6282)
!6284 = !DILocation(line: 1596, column: 18, scope: !6282)
!6285 = !DILocation(line: 1597, column: 16, scope: !6282)
!6286 = !DILocation(line: 1597, column: 6, scope: !6282)
!6287 = !DILocation(line: 1598, column: 5, scope: !6282)
!6288 = !DILocation(line: 1595, column: 32, scope: !6277)
!6289 = !DILocation(line: 1595, column: 5, scope: !6277)
!6290 = distinct !{!6290, !6280, !6291}
!6291 = !DILocation(line: 1598, column: 5, scope: !6273)
!6292 = !DILocation(line: 1599, column: 4, scope: !6274)
!6293 = !DILocation(line: 1594, column: 31, scope: !6268)
!6294 = !DILocation(line: 1594, column: 4, scope: !6268)
!6295 = distinct !{!6295, !6271, !6296}
!6296 = !DILocation(line: 1599, column: 4, scope: !6264)
!6297 = !DILocation(line: 1601, column: 54, scope: !6265)
!6298 = !DILocation(line: 1601, column: 35, scope: !6265)
!6299 = !DILocation(line: 1601, column: 59, scope: !6265)
!6300 = !DILocation(line: 1601, column: 57, scope: !6265)
!6301 = !DILocation(line: 1601, column: 17, scope: !6265)
!6302 = !DILocation(line: 1602, column: 17, scope: !6265)
!6303 = !DILocation(line: 1602, column: 48, scope: !6265)
!6304 = !DILocation(line: 1601, column: 4, scope: !6265)
!6305 = !DILocation(line: 1604, column: 11, scope: !6306)
!6306 = distinct !DILexicalBlock(scope: !6265, file: !3, line: 1604, column: 4)
!6307 = !DILocation(line: 1604, column: 9, scope: !6306)
!6308 = !DILocation(line: 1604, column: 16, scope: !6309)
!6309 = distinct !DILexicalBlock(scope: !6306, file: !3, line: 1604, column: 4)
!6310 = !DILocation(line: 1604, column: 20, scope: !6309)
!6311 = !DILocation(line: 1604, column: 29, scope: !6309)
!6312 = !DILocation(line: 1604, column: 18, scope: !6309)
!6313 = !DILocation(line: 1604, column: 4, scope: !6306)
!6314 = !DILocalVariable(name: "_a", scope: !6315, file: !3, line: 1605, type: !68)
!6315 = distinct !DILexicalBlock(scope: !6309, file: !3, line: 1605, column: 5)
!6316 = !DILocation(line: 1605, column: 5, scope: !6315)
!6317 = !DILocalVariable(name: "_b", scope: !6315, file: !3, line: 1605, type: !68)
!6318 = !DILocation(line: 1604, column: 35, scope: !6309)
!6319 = !DILocation(line: 1604, column: 4, scope: !6309)
!6320 = distinct !{!6320, !6313, !6321}
!6321 = !DILocation(line: 1605, column: 5, scope: !6306)
!6322 = !DILocation(line: 1607, column: 3, scope: !6265)
!6323 = !DILocation(line: 1593, column: 33, scope: !6258)
!6324 = !DILocation(line: 1593, column: 3, scope: !6258)
!6325 = distinct !{!6325, !6262, !6326}
!6326 = !DILocation(line: 1607, column: 3, scope: !6255)
!6327 = !DILocation(line: 1608, column: 2, scope: !6225)
!6328 = !DILocation(line: 1584, column: 48, scope: !6220)
!6329 = !DILocation(line: 1584, column: 2, scope: !6220)
!6330 = distinct !{!6330, !6223, !6331}
!6331 = !DILocation(line: 1608, column: 2, scope: !6217)
!6332 = !DILocation(line: 1610, column: 14, scope: !6333)
!6333 = distinct !DILexicalBlock(scope: !5561, file: !3, line: 1610, column: 2)
!6334 = !DILocation(line: 1610, column: 7, scope: !6333)
!6335 = !DILocation(line: 1610, column: 19, scope: !6336)
!6336 = distinct !DILexicalBlock(scope: !6333, file: !3, line: 1610, column: 2)
!6337 = !DILocation(line: 1610, column: 28, scope: !6336)
!6338 = !DILocation(line: 1610, column: 26, scope: !6336)
!6339 = !DILocation(line: 1610, column: 2, scope: !6333)
!6340 = !DILocalVariable(name: "e", scope: !6341, file: !3, line: 1611, type: !84)
!6341 = distinct !DILexicalBlock(scope: !6336, file: !3, line: 1610, column: 52)
!6342 = !DILocation(line: 1611, column: 12, scope: !6341)
!6343 = !DILocation(line: 1611, column: 28, scope: !6341)
!6344 = !DILocation(line: 1611, column: 38, scope: !6341)
!6345 = !DILocation(line: 1613, column: 7, scope: !6346)
!6346 = distinct !DILexicalBlock(scope: !6341, file: !3, line: 1613, column: 7)
!6347 = !DILocation(line: 1613, column: 10, scope: !6346)
!6348 = !DILocation(line: 1613, column: 7, scope: !6341)
!6349 = !DILocalVariable(name: "f", scope: !6350, file: !3, line: 1614, type: !97)
!6350 = distinct !DILexicalBlock(scope: !6346, file: !3, line: 1613, column: 20)
!6351 = !DILocation(line: 1614, column: 13, scope: !6350)
!6352 = !DILocation(line: 1614, column: 17, scope: !6350)
!6353 = !DILocation(line: 1614, column: 20, scope: !6350)
!6354 = !DILocalVariable(name: "x", scope: !6350, file: !3, line: 1615, type: !17)
!6355 = !DILocation(line: 1615, column: 8, scope: !6350)
!6356 = !DILocalVariable(name: "f_ed_idx", scope: !6350, file: !3, line: 1616, type: !6126)
!6357 = !DILocation(line: 1616, column: 14, scope: !6350)
!6358 = !DILocation(line: 1616, column: 44, scope: !6350)
!6359 = !DILocation(line: 1616, column: 47, scope: !6350)
!6360 = !DILocation(line: 1616, column: 25, scope: !6350)
!6361 = !DILocation(line: 1618, column: 11, scope: !6362)
!6362 = distinct !DILexicalBlock(scope: !6350, file: !3, line: 1618, column: 4)
!6363 = !DILocation(line: 1618, column: 9, scope: !6362)
!6364 = !DILocation(line: 1618, column: 16, scope: !6365)
!6365 = distinct !DILexicalBlock(scope: !6362, file: !3, line: 1618, column: 4)
!6366 = !DILocation(line: 1618, column: 20, scope: !6365)
!6367 = !DILocation(line: 1618, column: 18, scope: !6365)
!6368 = !DILocation(line: 1618, column: 4, scope: !6362)
!6369 = !DILocalVariable(name: "_a", scope: !6370, file: !3, line: 1619, type: !68)
!6370 = distinct !DILexicalBlock(scope: !6365, file: !3, line: 1619, column: 5)
!6371 = !DILocation(line: 1619, column: 5, scope: !6370)
!6372 = !DILocalVariable(name: "_b", scope: !6370, file: !3, line: 1619, type: !68)
!6373 = !DILocation(line: 1618, column: 31, scope: !6365)
!6374 = !DILocation(line: 1618, column: 4, scope: !6365)
!6375 = distinct !{!6375, !6368, !6376}
!6376 = !DILocation(line: 1619, column: 5, scope: !6362)
!6377 = !DILocation(line: 1621, column: 3, scope: !6350)
!6378 = !DILocalVariable(name: "x", scope: !6379, file: !3, line: 1627, type: !17)
!6379 = distinct !DILexicalBlock(scope: !6346, file: !3, line: 1622, column: 8)
!6380 = !DILocation(line: 1627, column: 8, scope: !6379)
!6381 = !DILocation(line: 1629, column: 11, scope: !6382)
!6382 = distinct !DILexicalBlock(scope: !6379, file: !3, line: 1629, column: 4)
!6383 = !DILocation(line: 1629, column: 9, scope: !6382)
!6384 = !DILocation(line: 1629, column: 16, scope: !6385)
!6385 = distinct !DILexicalBlock(scope: !6382, file: !3, line: 1629, column: 4)
!6386 = !DILocation(line: 1629, column: 20, scope: !6385)
!6387 = !DILocation(line: 1629, column: 18, scope: !6385)
!6388 = !DILocation(line: 1629, column: 4, scope: !6382)
!6389 = !DILocalVariable(name: "no", scope: !6390, file: !3, line: 1630, type: !68)
!6390 = distinct !DILexicalBlock(scope: !6385, file: !3, line: 1629, column: 35)
!6391 = !DILocation(line: 1630, column: 12, scope: !6390)
!6392 = !DILocation(line: 1630, column: 17, scope: !6390)
!6393 = !DILocalVariable(name: "_a", scope: !6394, file: !3, line: 1631, type: !68)
!6394 = distinct !DILexicalBlock(scope: !6390, file: !3, line: 1631, column: 5)
!6395 = !DILocation(line: 1631, column: 5, scope: !6394)
!6396 = !DILocalVariable(name: "_b", scope: !6394, file: !3, line: 1631, type: !68)
!6397 = !DILocation(line: 1632, column: 15, scope: !6390)
!6398 = !DILocation(line: 1632, column: 5, scope: !6390)
!6399 = !DILocation(line: 1633, column: 4, scope: !6390)
!6400 = !DILocation(line: 1629, column: 31, scope: !6385)
!6401 = !DILocation(line: 1629, column: 4, scope: !6385)
!6402 = distinct !{!6402, !6388, !6403}
!6403 = !DILocation(line: 1633, column: 4, scope: !6382)
!6404 = !DILocation(line: 1635, column: 2, scope: !6341)
!6405 = !DILocation(line: 1610, column: 48, scope: !6336)
!6406 = !DILocation(line: 1610, column: 2, scope: !6336)
!6407 = distinct !{!6407, !6339, !6408}
!6408 = !DILocation(line: 1635, column: 2, scope: !6333)
!6409 = !DILocation(line: 1636, column: 1, scope: !5561)
!6410 = distinct !DISubprogram(name: "ccgSubSurf_updateLevels", scope: !3, file: !3, line: 2771, type: !3929, scopeLine: 2772, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, retainedNodes: !151)
!6411 = !DILocalVariable(name: "ss", arg: 1, scope: !6410, file: !3, line: 2771, type: !187)
!6412 = !DILocation(line: 2771, column: 46, scope: !6410)
!6413 = !DILocalVariable(name: "lvl", arg: 2, scope: !6410, file: !3, line: 2771, type: !17)
!6414 = !DILocation(line: 2771, column: 54, scope: !6410)
!6415 = !DILocalVariable(name: "effectedF", arg: 3, scope: !6410, file: !3, line: 2771, type: !96)
!6416 = !DILocation(line: 2771, column: 69, scope: !6410)
!6417 = !DILocalVariable(name: "numEffectedF", arg: 4, scope: !6410, file: !3, line: 2771, type: !17)
!6418 = !DILocation(line: 2771, column: 84, scope: !6410)
!6419 = !DILocalVariable(name: "effectedV", scope: !6410, file: !3, line: 2773, type: !141)
!6420 = !DILocation(line: 2773, column: 12, scope: !6410)
!6421 = !DILocalVariable(name: "effectedE", scope: !6410, file: !3, line: 2774, type: !83)
!6422 = !DILocation(line: 2774, column: 12, scope: !6410)
!6423 = !DILocalVariable(name: "numEffectedV", scope: !6410, file: !3, line: 2775, type: !17)
!6424 = !DILocation(line: 2775, column: 6, scope: !6410)
!6425 = !DILocalVariable(name: "numEffectedE", scope: !6410, file: !3, line: 2775, type: !17)
!6426 = !DILocation(line: 2775, column: 20, scope: !6410)
!6427 = !DILocalVariable(name: "freeF", scope: !6410, file: !3, line: 2775, type: !17)
!6428 = !DILocation(line: 2775, column: 34, scope: !6410)
!6429 = !DILocalVariable(name: "i", scope: !6410, file: !3, line: 2775, type: !17)
!6430 = !DILocation(line: 2775, column: 41, scope: !6410)
!6431 = !DILocalVariable(name: "curLvl", scope: !6410, file: !3, line: 2776, type: !17)
!6432 = !DILocation(line: 2776, column: 6, scope: !6410)
!6433 = !DILocalVariable(name: "subdivLevels", scope: !6410, file: !3, line: 2776, type: !17)
!6434 = !DILocation(line: 2776, column: 14, scope: !6410)
!6435 = !DILocation(line: 2776, column: 29, scope: !6410)
!6436 = !DILocation(line: 2776, column: 33, scope: !6410)
!6437 = !DILocation(line: 2778, column: 23, scope: !6410)
!6438 = !DILocation(line: 2778, column: 2, scope: !6410)
!6439 = !DILocation(line: 2779, column: 37, scope: !6410)
!6440 = !DILocation(line: 2779, column: 41, scope: !6410)
!6441 = !DILocation(line: 2779, column: 52, scope: !6410)
!6442 = !DILocation(line: 2779, column: 2, scope: !6410)
!6443 = !DILocation(line: 2782, column: 16, scope: !6444)
!6444 = distinct !DILexicalBlock(scope: !6410, file: !3, line: 2782, column: 2)
!6445 = !DILocation(line: 2782, column: 14, scope: !6444)
!6446 = !DILocation(line: 2782, column: 7, scope: !6444)
!6447 = !DILocation(line: 2782, column: 21, scope: !6448)
!6448 = distinct !DILexicalBlock(scope: !6444, file: !3, line: 2782, column: 2)
!6449 = !DILocation(line: 2782, column: 30, scope: !6448)
!6450 = !DILocation(line: 2782, column: 28, scope: !6448)
!6451 = !DILocation(line: 2782, column: 2, scope: !6444)
!6452 = !DILocation(line: 2783, column: 31, scope: !6453)
!6453 = distinct !DILexicalBlock(scope: !6448, file: !3, line: 2782, column: 54)
!6454 = !DILocation(line: 2784, column: 31, scope: !6453)
!6455 = !DILocation(line: 2784, column: 42, scope: !6453)
!6456 = !DILocation(line: 2784, column: 53, scope: !6453)
!6457 = !DILocation(line: 2785, column: 31, scope: !6453)
!6458 = !DILocation(line: 2785, column: 45, scope: !6453)
!6459 = !DILocation(line: 2785, column: 59, scope: !6453)
!6460 = !DILocation(line: 2785, column: 73, scope: !6453)
!6461 = !DILocation(line: 2783, column: 3, scope: !6453)
!6462 = !DILocation(line: 2786, column: 2, scope: !6453)
!6463 = !DILocation(line: 2782, column: 50, scope: !6448)
!6464 = !DILocation(line: 2782, column: 2, scope: !6448)
!6465 = distinct !{!6465, !6451, !6466}
!6466 = !DILocation(line: 2786, column: 2, scope: !6444)
!6467 = !DILocation(line: 2788, column: 9, scope: !6468)
!6468 = distinct !DILexicalBlock(scope: !6410, file: !3, line: 2788, column: 2)
!6469 = !DILocation(line: 2788, column: 7, scope: !6468)
!6470 = !DILocation(line: 2788, column: 14, scope: !6471)
!6471 = distinct !DILexicalBlock(scope: !6468, file: !3, line: 2788, column: 2)
!6472 = !DILocation(line: 2788, column: 18, scope: !6471)
!6473 = !DILocation(line: 2788, column: 16, scope: !6471)
!6474 = !DILocation(line: 2788, column: 2, scope: !6468)
!6475 = !DILocation(line: 2789, column: 3, scope: !6471)
!6476 = !DILocation(line: 2789, column: 13, scope: !6471)
!6477 = !DILocation(line: 2789, column: 17, scope: !6471)
!6478 = !DILocation(line: 2789, column: 23, scope: !6471)
!6479 = !DILocation(line: 2788, column: 33, scope: !6471)
!6480 = !DILocation(line: 2788, column: 2, scope: !6471)
!6481 = distinct !{!6481, !6474, !6482}
!6482 = !DILocation(line: 2789, column: 25, scope: !6468)
!6483 = !DILocation(line: 2790, column: 9, scope: !6484)
!6484 = distinct !DILexicalBlock(scope: !6410, file: !3, line: 2790, column: 2)
!6485 = !DILocation(line: 2790, column: 7, scope: !6484)
!6486 = !DILocation(line: 2790, column: 14, scope: !6487)
!6487 = distinct !DILexicalBlock(scope: !6484, file: !3, line: 2790, column: 2)
!6488 = !DILocation(line: 2790, column: 18, scope: !6487)
!6489 = !DILocation(line: 2790, column: 16, scope: !6487)
!6490 = !DILocation(line: 2790, column: 2, scope: !6484)
!6491 = !DILocation(line: 2791, column: 3, scope: !6487)
!6492 = !DILocation(line: 2791, column: 13, scope: !6487)
!6493 = !DILocation(line: 2791, column: 17, scope: !6487)
!6494 = !DILocation(line: 2791, column: 23, scope: !6487)
!6495 = !DILocation(line: 2790, column: 33, scope: !6487)
!6496 = !DILocation(line: 2790, column: 2, scope: !6487)
!6497 = distinct !{!6497, !6490, !6498}
!6498 = !DILocation(line: 2791, column: 25, scope: !6484)
!6499 = !DILocation(line: 2792, column: 9, scope: !6500)
!6500 = distinct !DILexicalBlock(scope: !6410, file: !3, line: 2792, column: 2)
!6501 = !DILocation(line: 2792, column: 7, scope: !6500)
!6502 = !DILocation(line: 2792, column: 14, scope: !6503)
!6503 = distinct !DILexicalBlock(scope: !6500, file: !3, line: 2792, column: 2)
!6504 = !DILocation(line: 2792, column: 18, scope: !6503)
!6505 = !DILocation(line: 2792, column: 16, scope: !6503)
!6506 = !DILocation(line: 2792, column: 2, scope: !6500)
!6507 = !DILocation(line: 2793, column: 3, scope: !6503)
!6508 = !DILocation(line: 2793, column: 13, scope: !6503)
!6509 = !DILocation(line: 2793, column: 17, scope: !6503)
!6510 = !DILocation(line: 2793, column: 23, scope: !6503)
!6511 = !DILocation(line: 2792, column: 33, scope: !6503)
!6512 = !DILocation(line: 2792, column: 2, scope: !6503)
!6513 = distinct !{!6513, !6506, !6514}
!6514 = !DILocation(line: 2793, column: 25, scope: !6500)
!6515 = !DILocation(line: 2795, column: 2, scope: !6410)
!6516 = !DILocation(line: 2795, column: 12, scope: !6410)
!6517 = !DILocation(line: 2796, column: 2, scope: !6410)
!6518 = !DILocation(line: 2796, column: 12, scope: !6410)
!6519 = !DILocation(line: 2797, column: 6, scope: !6520)
!6520 = distinct !DILexicalBlock(scope: !6410, file: !3, line: 2797, column: 6)
!6521 = !DILocation(line: 2797, column: 6, scope: !6410)
!6522 = !DILocation(line: 2797, column: 13, scope: !6520)
!6523 = !DILocation(line: 2797, column: 23, scope: !6520)
!6524 = !DILocation(line: 2799, column: 2, scope: !6410)
!6525 = distinct !DISubprogram(name: "ccgSubSurf__calcSubdivLevel", scope: !3, file: !3, line: 1642, type: !6526, scopeLine: 1645, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !30, retainedNodes: !151)
!6526 = !DISubroutineType(types: !6527)
!6527 = !{null, !187, !141, !83, !96, !17, !17, !17, !17}
!6528 = !DILocalVariable(name: "ss", arg: 1, scope: !6525, file: !3, line: 1642, type: !187)
!6529 = !DILocation(line: 1642, column: 53, scope: !6525)
!6530 = !DILocalVariable(name: "effectedV", arg: 2, scope: !6525, file: !3, line: 1643, type: !141)
!6531 = !DILocation(line: 1643, column: 51, scope: !6525)
!6532 = !DILocalVariable(name: "effectedE", arg: 3, scope: !6525, file: !3, line: 1643, type: !83)
!6533 = !DILocation(line: 1643, column: 72, scope: !6525)
!6534 = !DILocalVariable(name: "effectedF", arg: 4, scope: !6525, file: !3, line: 1643, type: !96)
!6535 = !DILocation(line: 1643, column: 93, scope: !6525)
!6536 = !DILocalVariable(name: "numEffectedV", arg: 5, scope: !6525, file: !3, line: 1644, type: !17)
!6537 = !DILocation(line: 1644, column: 45, scope: !6525)
!6538 = !DILocalVariable(name: "numEffectedE", arg: 6, scope: !6525, file: !3, line: 1644, type: !17)
!6539 = !DILocation(line: 1644, column: 63, scope: !6525)
!6540 = !DILocalVariable(name: "numEffectedF", arg: 7, scope: !6525, file: !3, line: 1644, type: !17)
!6541 = !DILocation(line: 1644, column: 81, scope: !6525)
!6542 = !DILocalVariable(name: "curLvl", arg: 8, scope: !6525, file: !3, line: 1644, type: !17)
!6543 = !DILocation(line: 1644, column: 99, scope: !6525)
!6544 = !DILocalVariable(name: "subdivLevels", scope: !6525, file: !3, line: 1646, type: !17)
!6545 = !DILocation(line: 1646, column: 6, scope: !6525)
!6546 = !DILocation(line: 1646, column: 21, scope: !6525)
!6547 = !DILocation(line: 1646, column: 25, scope: !6525)
!6548 = !DILocalVariable(name: "edgeSize", scope: !6525, file: !3, line: 1647, type: !17)
!6549 = !DILocation(line: 1647, column: 6, scope: !6525)
!6550 = !DILocation(line: 1647, column: 30, scope: !6525)
!6551 = !DILocation(line: 1647, column: 17, scope: !6525)
!6552 = !DILocalVariable(name: "gridSize", scope: !6525, file: !3, line: 1648, type: !17)
!6553 = !DILocation(line: 1648, column: 6, scope: !6525)
!6554 = !DILocation(line: 1648, column: 30, scope: !6525)
!6555 = !DILocation(line: 1648, column: 17, scope: !6525)
!6556 = !DILocalVariable(name: "nextLvl", scope: !6525, file: !3, line: 1649, type: !17)
!6557 = !DILocation(line: 1649, column: 6, scope: !6525)
!6558 = !DILocation(line: 1649, column: 16, scope: !6525)
!6559 = !DILocation(line: 1649, column: 23, scope: !6525)
!6560 = !DILocalVariable(name: "ptrIdx", scope: !6525, file: !3, line: 1650, type: !17)
!6561 = !DILocation(line: 1650, column: 6, scope: !6525)
!6562 = !DILocalVariable(name: "cornerIdx", scope: !6525, file: !3, line: 1650, type: !17)
!6563 = !DILocation(line: 1650, column: 14, scope: !6525)
!6564 = !DILocalVariable(name: "i", scope: !6525, file: !3, line: 1650, type: !17)
!6565 = !DILocation(line: 1650, column: 25, scope: !6525)
!6566 = !DILocalVariable(name: "vertDataSize", scope: !6525, file: !3, line: 1651, type: !17)
!6567 = !DILocation(line: 1651, column: 6, scope: !6525)
!6568 = !DILocation(line: 1651, column: 21, scope: !6525)
!6569 = !DILocation(line: 1651, column: 25, scope: !6525)
!6570 = !DILocation(line: 1651, column: 33, scope: !6525)
!6571 = !DILocalVariable(name: "q", scope: !6525, file: !3, line: 1652, type: !68)
!6572 = !DILocation(line: 1652, column: 9, scope: !6525)
!6573 = !DILocation(line: 1652, column: 13, scope: !6525)
!6574 = !DILocation(line: 1652, column: 17, scope: !6525)
!6575 = !DILocalVariable(name: "r", scope: !6525, file: !3, line: 1652, type: !68)
!6576 = !DILocation(line: 1652, column: 21, scope: !6525)
!6577 = !DILocation(line: 1652, column: 25, scope: !6525)
!6578 = !DILocation(line: 1652, column: 29, scope: !6525)
!6579 = !DILocation(line: 1657, column: 14, scope: !6580)
!6580 = distinct !DILexicalBlock(scope: !6525, file: !3, line: 1657, column: 2)
!6581 = !DILocation(line: 1657, column: 7, scope: !6580)
!6582 = !DILocation(line: 1657, column: 19, scope: !6583)
!6583 = distinct !DILexicalBlock(scope: !6580, file: !3, line: 1657, column: 2)
!6584 = !DILocation(line: 1657, column: 28, scope: !6583)
!6585 = !DILocation(line: 1657, column: 26, scope: !6583)
!6586 = !DILocation(line: 1657, column: 2, scope: !6580)
!6587 = !DILocalVariable(name: "f", scope: !6588, file: !3, line: 1658, type: !97)
!6588 = distinct !DILexicalBlock(scope: !6583, file: !3, line: 1657, column: 52)
!6589 = !DILocation(line: 1658, column: 12, scope: !6588)
!6590 = !DILocation(line: 1658, column: 28, scope: !6588)
!6591 = !DILocation(line: 1658, column: 38, scope: !6588)
!6592 = !DILocalVariable(name: "S", scope: !6588, file: !3, line: 1659, type: !17)
!6593 = !DILocation(line: 1659, column: 7, scope: !6588)
!6594 = !DILocalVariable(name: "x", scope: !6588, file: !3, line: 1659, type: !17)
!6595 = !DILocation(line: 1659, column: 10, scope: !6588)
!6596 = !DILocalVariable(name: "y", scope: !6588, file: !3, line: 1659, type: !17)
!6597 = !DILocation(line: 1659, column: 13, scope: !6588)
!6598 = !DILocation(line: 1664, column: 10, scope: !6599)
!6599 = distinct !DILexicalBlock(scope: !6588, file: !3, line: 1664, column: 3)
!6600 = !DILocation(line: 1664, column: 8, scope: !6599)
!6601 = !DILocation(line: 1664, column: 15, scope: !6602)
!6602 = distinct !DILexicalBlock(scope: !6599, file: !3, line: 1664, column: 3)
!6603 = !DILocation(line: 1664, column: 19, scope: !6602)
!6604 = !DILocation(line: 1664, column: 22, scope: !6602)
!6605 = !DILocation(line: 1664, column: 17, scope: !6602)
!6606 = !DILocation(line: 1664, column: 3, scope: !6599)
!6607 = !DILocation(line: 1665, column: 11, scope: !6608)
!6608 = distinct !DILexicalBlock(scope: !6609, file: !3, line: 1665, column: 4)
!6609 = distinct !DILexicalBlock(scope: !6602, file: !3, line: 1664, column: 37)
!6610 = !DILocation(line: 1665, column: 9, scope: !6608)
!6611 = !DILocation(line: 1665, column: 16, scope: !6612)
!6612 = distinct !DILexicalBlock(scope: !6608, file: !3, line: 1665, column: 4)
!6613 = !DILocation(line: 1665, column: 20, scope: !6612)
!6614 = !DILocation(line: 1665, column: 29, scope: !6612)
!6615 = !DILocation(line: 1665, column: 18, scope: !6612)
!6616 = !DILocation(line: 1665, column: 4, scope: !6608)
!6617 = !DILocation(line: 1666, column: 12, scope: !6618)
!6618 = distinct !DILexicalBlock(scope: !6619, file: !3, line: 1666, column: 5)
!6619 = distinct !DILexicalBlock(scope: !6612, file: !3, line: 1665, column: 39)
!6620 = !DILocation(line: 1666, column: 10, scope: !6618)
!6621 = !DILocation(line: 1666, column: 17, scope: !6622)
!6622 = distinct !DILexicalBlock(scope: !6618, file: !3, line: 1666, column: 5)
!6623 = !DILocation(line: 1666, column: 21, scope: !6622)
!6624 = !DILocation(line: 1666, column: 30, scope: !6622)
!6625 = !DILocation(line: 1666, column: 19, scope: !6622)
!6626 = !DILocation(line: 1666, column: 5, scope: !6618)
!6627 = !DILocalVariable(name: "fx", scope: !6628, file: !3, line: 1667, type: !17)
!6628 = distinct !DILexicalBlock(scope: !6622, file: !3, line: 1666, column: 40)
!6629 = !DILocation(line: 1667, column: 10, scope: !6628)
!6630 = !DILocation(line: 1667, column: 23, scope: !6628)
!6631 = !DILocation(line: 1667, column: 21, scope: !6628)
!6632 = !DILocation(line: 1667, column: 17, scope: !6628)
!6633 = !DILocalVariable(name: "fy", scope: !6628, file: !3, line: 1668, type: !17)
!6634 = !DILocation(line: 1668, column: 10, scope: !6628)
!6635 = !DILocation(line: 1668, column: 23, scope: !6628)
!6636 = !DILocation(line: 1668, column: 21, scope: !6628)
!6637 = !DILocation(line: 1668, column: 17, scope: !6628)
!6638 = !DILocalVariable(name: "co0", scope: !6628, file: !3, line: 1669, type: !1587)
!6639 = !DILocation(line: 1669, column: 19, scope: !6628)
!6640 = !DILocation(line: 1669, column: 25, scope: !6628)
!6641 = !DILocalVariable(name: "co1", scope: !6628, file: !3, line: 1670, type: !1587)
!6642 = !DILocation(line: 1670, column: 19, scope: !6628)
!6643 = !DILocation(line: 1670, column: 25, scope: !6628)
!6644 = !DILocalVariable(name: "co2", scope: !6628, file: !3, line: 1671, type: !1587)
!6645 = !DILocation(line: 1671, column: 19, scope: !6628)
!6646 = !DILocation(line: 1671, column: 25, scope: !6628)
!6647 = !DILocalVariable(name: "co3", scope: !6628, file: !3, line: 1672, type: !1587)
!6648 = !DILocation(line: 1672, column: 19, scope: !6628)
!6649 = !DILocation(line: 1672, column: 25, scope: !6628)
!6650 = !DILocalVariable(name: "co", scope: !6628, file: !3, line: 1673, type: !68)
!6651 = !DILocation(line: 1673, column: 13, scope: !6628)
!6652 = !DILocation(line: 1673, column: 18, scope: !6628)
!6653 = !DILocation(line: 1675, column: 19, scope: !6628)
!6654 = !DILocation(line: 1675, column: 23, scope: !6628)
!6655 = !DILocation(line: 1675, column: 28, scope: !6628)
!6656 = !DILocation(line: 1675, column: 33, scope: !6628)
!6657 = !DILocation(line: 1675, column: 38, scope: !6628)
!6658 = !DILocation(line: 1675, column: 43, scope: !6628)
!6659 = !DILocation(line: 1675, column: 6, scope: !6628)
!6660 = !DILocation(line: 1676, column: 5, scope: !6628)
!6661 = !DILocation(line: 1666, column: 36, scope: !6622)
!6662 = !DILocation(line: 1666, column: 5, scope: !6622)
!6663 = distinct !{!6663, !6626, !6664}
!6664 = !DILocation(line: 1676, column: 5, scope: !6618)
!6665 = !DILocation(line: 1677, column: 4, scope: !6619)
!6666 = !DILocation(line: 1665, column: 35, scope: !6612)
!6667 = !DILocation(line: 1665, column: 4, scope: !6612)
!6668 = distinct !{!6668, !6616, !6669}
!6669 = !DILocation(line: 1677, column: 4, scope: !6608)
!6670 = !DILocation(line: 1678, column: 3, scope: !6609)
!6671 = !DILocation(line: 1664, column: 33, scope: !6602)
!6672 = !DILocation(line: 1664, column: 3, scope: !6602)
!6673 = distinct !{!6673, !6606, !6674}
!6674 = !DILocation(line: 1678, column: 3, scope: !6599)
!6675 = !DILocation(line: 1684, column: 10, scope: !6676)
!6676 = distinct !DILexicalBlock(scope: !6588, file: !3, line: 1684, column: 3)
!6677 = !DILocation(line: 1684, column: 8, scope: !6676)
!6678 = !DILocation(line: 1684, column: 15, scope: !6679)
!6679 = distinct !DILexicalBlock(scope: !6676, file: !3, line: 1684, column: 3)
!6680 = !DILocation(line: 1684, column: 19, scope: !6679)
!6681 = !DILocation(line: 1684, column: 22, scope: !6679)
!6682 = !DILocation(line: 1684, column: 17, scope: !6679)
!6683 = !DILocation(line: 1684, column: 3, scope: !6676)
!6684 = !DILocation(line: 1685, column: 11, scope: !6685)
!6685 = distinct !DILexicalBlock(scope: !6686, file: !3, line: 1685, column: 4)
!6686 = distinct !DILexicalBlock(scope: !6679, file: !3, line: 1684, column: 37)
!6687 = !DILocation(line: 1685, column: 9, scope: !6685)
!6688 = !DILocation(line: 1685, column: 16, scope: !6689)
!6689 = distinct !DILexicalBlock(scope: !6685, file: !3, line: 1685, column: 4)
!6690 = !DILocation(line: 1685, column: 20, scope: !6689)
!6691 = !DILocation(line: 1685, column: 29, scope: !6689)
!6692 = !DILocation(line: 1685, column: 18, scope: !6689)
!6693 = !DILocation(line: 1685, column: 4, scope: !6685)
!6694 = !DILocalVariable(name: "fx", scope: !6695, file: !3, line: 1686, type: !17)
!6695 = distinct !DILexicalBlock(scope: !6689, file: !3, line: 1685, column: 39)
!6696 = !DILocation(line: 1686, column: 9, scope: !6695)
!6697 = !DILocation(line: 1686, column: 14, scope: !6695)
!6698 = !DILocation(line: 1686, column: 16, scope: !6695)
!6699 = !DILocation(line: 1686, column: 20, scope: !6695)
!6700 = !DILocalVariable(name: "co0", scope: !6695, file: !3, line: 1687, type: !1587)
!6701 = !DILocation(line: 1687, column: 18, scope: !6695)
!6702 = !DILocation(line: 1687, column: 24, scope: !6695)
!6703 = !DILocalVariable(name: "co1", scope: !6695, file: !3, line: 1688, type: !1587)
!6704 = !DILocation(line: 1688, column: 18, scope: !6695)
!6705 = !DILocation(line: 1688, column: 24, scope: !6695)
!6706 = !DILocalVariable(name: "co2", scope: !6695, file: !3, line: 1689, type: !1587)
!6707 = !DILocation(line: 1689, column: 18, scope: !6695)
!6708 = !DILocation(line: 1689, column: 24, scope: !6695)
!6709 = !DILocalVariable(name: "co3", scope: !6695, file: !3, line: 1690, type: !1587)
!6710 = !DILocation(line: 1690, column: 18, scope: !6695)
!6711 = !DILocation(line: 1690, column: 24, scope: !6695)
!6712 = !DILocalVariable(name: "co", scope: !6695, file: !3, line: 1691, type: !68)
!6713 = !DILocation(line: 1691, column: 12, scope: !6695)
!6714 = !DILocation(line: 1691, column: 18, scope: !6695)
!6715 = !DILocation(line: 1693, column: 18, scope: !6695)
!6716 = !DILocation(line: 1693, column: 22, scope: !6695)
!6717 = !DILocation(line: 1693, column: 27, scope: !6695)
!6718 = !DILocation(line: 1693, column: 32, scope: !6695)
!6719 = !DILocation(line: 1693, column: 37, scope: !6695)
!6720 = !DILocation(line: 1693, column: 42, scope: !6695)
!6721 = !DILocation(line: 1693, column: 5, scope: !6695)
!6722 = !DILocation(line: 1694, column: 4, scope: !6695)
!6723 = !DILocation(line: 1685, column: 35, scope: !6689)
!6724 = !DILocation(line: 1685, column: 4, scope: !6689)
!6725 = distinct !{!6725, !6693, !6726}
!6726 = !DILocation(line: 1694, column: 4, scope: !6685)
!6727 = !DILocation(line: 1702, column: 11, scope: !6728)
!6728 = distinct !DILexicalBlock(scope: !6686, file: !3, line: 1702, column: 4)
!6729 = !DILocation(line: 1702, column: 9, scope: !6728)
!6730 = !DILocation(line: 1702, column: 16, scope: !6731)
!6731 = distinct !DILexicalBlock(scope: !6728, file: !3, line: 1702, column: 4)
!6732 = !DILocation(line: 1702, column: 20, scope: !6731)
!6733 = !DILocation(line: 1702, column: 29, scope: !6731)
!6734 = !DILocation(line: 1702, column: 18, scope: !6731)
!6735 = !DILocation(line: 1702, column: 4, scope: !6728)
!6736 = !DILocation(line: 1703, column: 12, scope: !6737)
!6737 = distinct !DILexicalBlock(scope: !6738, file: !3, line: 1703, column: 5)
!6738 = distinct !DILexicalBlock(scope: !6731, file: !3, line: 1702, column: 39)
!6739 = !DILocation(line: 1703, column: 10, scope: !6737)
!6740 = !DILocation(line: 1703, column: 17, scope: !6741)
!6741 = distinct !DILexicalBlock(scope: !6737, file: !3, line: 1703, column: 5)
!6742 = !DILocation(line: 1703, column: 21, scope: !6741)
!6743 = !DILocation(line: 1703, column: 30, scope: !6741)
!6744 = !DILocation(line: 1703, column: 19, scope: !6741)
!6745 = !DILocation(line: 1703, column: 5, scope: !6737)
!6746 = !DILocalVariable(name: "fx", scope: !6747, file: !3, line: 1704, type: !17)
!6747 = distinct !DILexicalBlock(scope: !6741, file: !3, line: 1703, column: 40)
!6748 = !DILocation(line: 1704, column: 10, scope: !6747)
!6749 = !DILocation(line: 1704, column: 15, scope: !6747)
!6750 = !DILocation(line: 1704, column: 17, scope: !6747)
!6751 = !DILocalVariable(name: "fy", scope: !6747, file: !3, line: 1705, type: !17)
!6752 = !DILocation(line: 1705, column: 10, scope: !6747)
!6753 = !DILocation(line: 1705, column: 15, scope: !6747)
!6754 = !DILocation(line: 1705, column: 17, scope: !6747)
!6755 = !DILocation(line: 1705, column: 21, scope: !6747)
!6756 = !DILocalVariable(name: "co0", scope: !6747, file: !3, line: 1706, type: !1587)
!6757 = !DILocation(line: 1706, column: 19, scope: !6747)
!6758 = !DILocation(line: 1706, column: 25, scope: !6747)
!6759 = !DILocalVariable(name: "co1", scope: !6747, file: !3, line: 1707, type: !1587)
!6760 = !DILocation(line: 1707, column: 19, scope: !6747)
!6761 = !DILocation(line: 1707, column: 25, scope: !6747)
!6762 = !DILocalVariable(name: "co2", scope: !6747, file: !3, line: 1708, type: !1587)
!6763 = !DILocation(line: 1708, column: 19, scope: !6747)
!6764 = !DILocation(line: 1708, column: 25, scope: !6747)
!6765 = !DILocalVariable(name: "co3", scope: !6747, file: !3, line: 1709, type: !1587)
!6766 = !DILocation(line: 1709, column: 19, scope: !6747)
!6767 = !DILocation(line: 1709, column: 25, scope: !6747)
!6768 = !DILocalVariable(name: "co", scope: !6747, file: !3, line: 1710, type: !68)
!6769 = !DILocation(line: 1710, column: 13, scope: !6747)
!6770 = !DILocation(line: 1710, column: 19, scope: !6747)
!6771 = !DILocation(line: 1712, column: 19, scope: !6747)
!6772 = !DILocation(line: 1712, column: 23, scope: !6747)
!6773 = !DILocation(line: 1712, column: 28, scope: !6747)
!6774 = !DILocation(line: 1712, column: 33, scope: !6747)
!6775 = !DILocation(line: 1712, column: 38, scope: !6747)
!6776 = !DILocation(line: 1712, column: 43, scope: !6747)
!6777 = !DILocation(line: 1712, column: 6, scope: !6747)
!6778 = !DILocation(line: 1713, column: 5, scope: !6747)
!6779 = !DILocation(line: 1703, column: 36, scope: !6741)
!6780 = !DILocation(line: 1703, column: 5, scope: !6741)
!6781 = distinct !{!6781, !6745, !6782}
!6782 = !DILocation(line: 1713, column: 5, scope: !6737)
!6783 = !DILocation(line: 1714, column: 4, scope: !6738)
!6784 = !DILocation(line: 1702, column: 35, scope: !6731)
!6785 = !DILocation(line: 1702, column: 4, scope: !6731)
!6786 = distinct !{!6786, !6735, !6787}
!6787 = !DILocation(line: 1714, column: 4, scope: !6728)
!6788 = !DILocation(line: 1717, column: 11, scope: !6789)
!6789 = distinct !DILexicalBlock(scope: !6686, file: !3, line: 1717, column: 4)
!6790 = !DILocation(line: 1717, column: 9, scope: !6789)
!6791 = !DILocation(line: 1717, column: 16, scope: !6792)
!6792 = distinct !DILexicalBlock(scope: !6789, file: !3, line: 1717, column: 4)
!6793 = !DILocation(line: 1717, column: 20, scope: !6792)
!6794 = !DILocation(line: 1717, column: 29, scope: !6792)
!6795 = !DILocation(line: 1717, column: 18, scope: !6792)
!6796 = !DILocation(line: 1717, column: 4, scope: !6789)
!6797 = !DILocation(line: 1718, column: 12, scope: !6798)
!6798 = distinct !DILexicalBlock(scope: !6799, file: !3, line: 1718, column: 5)
!6799 = distinct !DILexicalBlock(scope: !6792, file: !3, line: 1717, column: 39)
!6800 = !DILocation(line: 1718, column: 10, scope: !6798)
!6801 = !DILocation(line: 1718, column: 17, scope: !6802)
!6802 = distinct !DILexicalBlock(scope: !6798, file: !3, line: 1718, column: 5)
!6803 = !DILocation(line: 1718, column: 21, scope: !6802)
!6804 = !DILocation(line: 1718, column: 30, scope: !6802)
!6805 = !DILocation(line: 1718, column: 19, scope: !6802)
!6806 = !DILocation(line: 1718, column: 5, scope: !6798)
!6807 = !DILocalVariable(name: "fx", scope: !6808, file: !3, line: 1719, type: !17)
!6808 = distinct !DILexicalBlock(scope: !6802, file: !3, line: 1718, column: 40)
!6809 = !DILocation(line: 1719, column: 10, scope: !6808)
!6810 = !DILocation(line: 1719, column: 15, scope: !6808)
!6811 = !DILocation(line: 1719, column: 17, scope: !6808)
!6812 = !DILocation(line: 1719, column: 21, scope: !6808)
!6813 = !DILocalVariable(name: "fy", scope: !6808, file: !3, line: 1720, type: !17)
!6814 = !DILocation(line: 1720, column: 10, scope: !6808)
!6815 = !DILocation(line: 1720, column: 15, scope: !6808)
!6816 = !DILocation(line: 1720, column: 17, scope: !6808)
!6817 = !DILocalVariable(name: "co0", scope: !6808, file: !3, line: 1721, type: !1587)
!6818 = !DILocation(line: 1721, column: 19, scope: !6808)
!6819 = !DILocation(line: 1721, column: 25, scope: !6808)
!6820 = !DILocalVariable(name: "co1", scope: !6808, file: !3, line: 1722, type: !1587)
!6821 = !DILocation(line: 1722, column: 19, scope: !6808)
!6822 = !DILocation(line: 1722, column: 25, scope: !6808)
!6823 = !DILocalVariable(name: "co2", scope: !6808, file: !3, line: 1723, type: !1587)
!6824 = !DILocation(line: 1723, column: 19, scope: !6808)
!6825 = !DILocation(line: 1723, column: 25, scope: !6808)
!6826 = !DILocalVariable(name: "co3", scope: !6808, file: !3, line: 1724, type: !1587)
!6827 = !DILocation(line: 1724, column: 19, scope: !6808)
!6828 = !DILocation(line: 1724, column: 25, scope: !6808)
!6829 = !DILocalVariable(name: "co", scope: !6808, file: !3, line: 1725, type: !68)
!6830 = !DILocation(line: 1725, column: 13, scope: !6808)
!6831 = !DILocation(line: 1725, column: 19, scope: !6808)
!6832 = !DILocation(line: 1727, column: 19, scope: !6808)
!6833 = !DILocation(line: 1727, column: 23, scope: !6808)
!6834 = !DILocation(line: 1727, column: 28, scope: !6808)
!6835 = !DILocation(line: 1727, column: 33, scope: !6808)
!6836 = !DILocation(line: 1727, column: 38, scope: !6808)
!6837 = !DILocation(line: 1727, column: 43, scope: !6808)
!6838 = !DILocation(line: 1727, column: 6, scope: !6808)
!6839 = !DILocation(line: 1728, column: 5, scope: !6808)
!6840 = !DILocation(line: 1718, column: 36, scope: !6802)
!6841 = !DILocation(line: 1718, column: 5, scope: !6802)
!6842 = distinct !{!6842, !6806, !6843}
!6843 = !DILocation(line: 1728, column: 5, scope: !6798)
!6844 = !DILocation(line: 1729, column: 4, scope: !6799)
!6845 = !DILocation(line: 1717, column: 35, scope: !6792)
!6846 = !DILocation(line: 1717, column: 4, scope: !6792)
!6847 = distinct !{!6847, !6796, !6848}
!6848 = !DILocation(line: 1729, column: 4, scope: !6789)
!6849 = !DILocation(line: 1730, column: 3, scope: !6686)
!6850 = !DILocation(line: 1684, column: 33, scope: !6679)
!6851 = !DILocation(line: 1684, column: 3, scope: !6679)
!6852 = distinct !{!6852, !6683, !6853}
!6853 = !DILocation(line: 1730, column: 3, scope: !6676)
!6854 = !DILocation(line: 1731, column: 2, scope: !6588)
!6855 = !DILocation(line: 1657, column: 48, scope: !6583)
!6856 = !DILocation(line: 1657, column: 2, scope: !6583)
!6857 = distinct !{!6857, !6586, !6858}
!6858 = !DILocation(line: 1731, column: 2, scope: !6580)
!6859 = !DILocation(line: 1737, column: 14, scope: !6860)
!6860 = distinct !DILexicalBlock(scope: !6525, file: !3, line: 1737, column: 2)
!6861 = !DILocation(line: 1737, column: 7, scope: !6860)
!6862 = !DILocation(line: 1737, column: 19, scope: !6863)
!6863 = distinct !DILexicalBlock(scope: !6860, file: !3, line: 1737, column: 2)
!6864 = !DILocation(line: 1737, column: 28, scope: !6863)
!6865 = !DILocation(line: 1737, column: 26, scope: !6863)
!6866 = !DILocation(line: 1737, column: 2, scope: !6860)
!6867 = !DILocalVariable(name: "e", scope: !6868, file: !3, line: 1738, type: !84)
!6868 = distinct !DILexicalBlock(scope: !6863, file: !3, line: 1737, column: 52)
!6869 = !DILocation(line: 1738, column: 12, scope: !6868)
!6870 = !DILocation(line: 1738, column: 28, scope: !6868)
!6871 = !DILocation(line: 1738, column: 38, scope: !6868)
!6872 = !DILocalVariable(name: "sharpness", scope: !6868, file: !3, line: 1739, type: !69)
!6873 = !DILocation(line: 1739, column: 9, scope: !6868)
!6874 = !DILocation(line: 1739, column: 39, scope: !6868)
!6875 = !DILocation(line: 1739, column: 42, scope: !6868)
!6876 = !DILocation(line: 1739, column: 21, scope: !6868)
!6877 = !DILocalVariable(name: "x", scope: !6868, file: !3, line: 1740, type: !17)
!6878 = !DILocation(line: 1740, column: 7, scope: !6868)
!6879 = !DILocalVariable(name: "j", scope: !6868, file: !3, line: 1740, type: !17)
!6880 = !DILocation(line: 1740, column: 10, scope: !6868)
!6881 = !DILocation(line: 1742, column: 24, scope: !6882)
!6882 = distinct !DILexicalBlock(scope: !6868, file: !3, line: 1742, column: 7)
!6883 = !DILocation(line: 1742, column: 7, scope: !6882)
!6884 = !DILocation(line: 1742, column: 27, scope: !6882)
!6885 = !DILocation(line: 1742, column: 30, scope: !6882)
!6886 = !DILocation(line: 1742, column: 40, scope: !6882)
!6887 = !DILocation(line: 1742, column: 7, scope: !6868)
!6888 = !DILocation(line: 1743, column: 11, scope: !6889)
!6889 = distinct !DILexicalBlock(scope: !6890, file: !3, line: 1743, column: 4)
!6890 = distinct !DILexicalBlock(scope: !6882, file: !3, line: 1742, column: 48)
!6891 = !DILocation(line: 1743, column: 9, scope: !6889)
!6892 = !DILocation(line: 1743, column: 16, scope: !6893)
!6893 = distinct !DILexicalBlock(scope: !6889, file: !3, line: 1743, column: 4)
!6894 = !DILocation(line: 1743, column: 20, scope: !6893)
!6895 = !DILocation(line: 1743, column: 29, scope: !6893)
!6896 = !DILocation(line: 1743, column: 18, scope: !6893)
!6897 = !DILocation(line: 1743, column: 4, scope: !6889)
!6898 = !DILocalVariable(name: "fx", scope: !6899, file: !3, line: 1744, type: !17)
!6899 = distinct !DILexicalBlock(scope: !6893, file: !3, line: 1743, column: 39)
!6900 = !DILocation(line: 1744, column: 9, scope: !6899)
!6901 = !DILocation(line: 1744, column: 14, scope: !6899)
!6902 = !DILocation(line: 1744, column: 16, scope: !6899)
!6903 = !DILocation(line: 1744, column: 20, scope: !6899)
!6904 = !DILocalVariable(name: "co0", scope: !6899, file: !3, line: 1745, type: !1587)
!6905 = !DILocation(line: 1745, column: 18, scope: !6899)
!6906 = !DILocation(line: 1745, column: 24, scope: !6899)
!6907 = !DILocalVariable(name: "co1", scope: !6899, file: !3, line: 1746, type: !1587)
!6908 = !DILocation(line: 1746, column: 18, scope: !6899)
!6909 = !DILocation(line: 1746, column: 24, scope: !6899)
!6910 = !DILocalVariable(name: "co", scope: !6899, file: !3, line: 1747, type: !68)
!6911 = !DILocation(line: 1747, column: 12, scope: !6899)
!6912 = !DILocation(line: 1747, column: 18, scope: !6899)
!6913 = !DILocation(line: 1749, column: 18, scope: !6899)
!6914 = !DILocation(line: 1749, column: 22, scope: !6899)
!6915 = !DILocation(line: 1749, column: 27, scope: !6899)
!6916 = !DILocation(line: 1749, column: 5, scope: !6899)
!6917 = !DILocation(line: 1750, column: 17, scope: !6899)
!6918 = !DILocation(line: 1750, column: 21, scope: !6899)
!6919 = !DILocation(line: 1750, column: 26, scope: !6899)
!6920 = !DILocation(line: 1750, column: 5, scope: !6899)
!6921 = !DILocation(line: 1751, column: 18, scope: !6899)
!6922 = !DILocation(line: 1751, column: 28, scope: !6899)
!6923 = !DILocation(line: 1751, column: 5, scope: !6899)
!6924 = !DILocation(line: 1752, column: 4, scope: !6899)
!6925 = !DILocation(line: 1743, column: 35, scope: !6893)
!6926 = !DILocation(line: 1743, column: 4, scope: !6893)
!6927 = distinct !{!6927, !6897, !6928}
!6928 = !DILocation(line: 1752, column: 4, scope: !6889)
!6929 = !DILocation(line: 1753, column: 3, scope: !6890)
!6930 = !DILocation(line: 1755, column: 11, scope: !6931)
!6931 = distinct !DILexicalBlock(scope: !6932, file: !3, line: 1755, column: 4)
!6932 = distinct !DILexicalBlock(scope: !6882, file: !3, line: 1754, column: 8)
!6933 = !DILocation(line: 1755, column: 9, scope: !6931)
!6934 = !DILocation(line: 1755, column: 16, scope: !6935)
!6935 = distinct !DILexicalBlock(scope: !6931, file: !3, line: 1755, column: 4)
!6936 = !DILocation(line: 1755, column: 20, scope: !6935)
!6937 = !DILocation(line: 1755, column: 29, scope: !6935)
!6938 = !DILocation(line: 1755, column: 18, scope: !6935)
!6939 = !DILocation(line: 1755, column: 4, scope: !6931)
!6940 = !DILocalVariable(name: "fx", scope: !6941, file: !3, line: 1756, type: !17)
!6941 = distinct !DILexicalBlock(scope: !6935, file: !3, line: 1755, column: 39)
!6942 = !DILocation(line: 1756, column: 9, scope: !6941)
!6943 = !DILocation(line: 1756, column: 14, scope: !6941)
!6944 = !DILocation(line: 1756, column: 16, scope: !6941)
!6945 = !DILocation(line: 1756, column: 20, scope: !6941)
!6946 = !DILocalVariable(name: "co0", scope: !6941, file: !3, line: 1757, type: !1587)
!6947 = !DILocation(line: 1757, column: 18, scope: !6941)
!6948 = !DILocation(line: 1757, column: 24, scope: !6941)
!6949 = !DILocalVariable(name: "co1", scope: !6941, file: !3, line: 1758, type: !1587)
!6950 = !DILocation(line: 1758, column: 18, scope: !6941)
!6951 = !DILocation(line: 1758, column: 24, scope: !6941)
!6952 = !DILocalVariable(name: "co", scope: !6941, file: !3, line: 1759, type: !68)
!6953 = !DILocation(line: 1759, column: 12, scope: !6941)
!6954 = !DILocation(line: 1759, column: 18, scope: !6941)
!6955 = !DILocalVariable(name: "numFaces", scope: !6941, file: !3, line: 1760, type: !17)
!6956 = !DILocation(line: 1760, column: 9, scope: !6941)
!6957 = !DILocation(line: 1762, column: 18, scope: !6941)
!6958 = !DILocation(line: 1762, column: 21, scope: !6941)
!6959 = !DILocation(line: 1762, column: 26, scope: !6941)
!6960 = !DILocation(line: 1762, column: 5, scope: !6941)
!6961 = !DILocation(line: 1763, column: 17, scope: !6941)
!6962 = !DILocation(line: 1763, column: 20, scope: !6941)
!6963 = !DILocation(line: 1763, column: 25, scope: !6941)
!6964 = !DILocation(line: 1763, column: 5, scope: !6941)
!6965 = !DILocation(line: 1765, column: 12, scope: !6966)
!6966 = distinct !DILexicalBlock(scope: !6941, file: !3, line: 1765, column: 5)
!6967 = !DILocation(line: 1765, column: 10, scope: !6966)
!6968 = !DILocation(line: 1765, column: 17, scope: !6969)
!6969 = distinct !DILexicalBlock(scope: !6966, file: !3, line: 1765, column: 5)
!6970 = !DILocation(line: 1765, column: 21, scope: !6969)
!6971 = !DILocation(line: 1765, column: 24, scope: !6969)
!6972 = !DILocation(line: 1765, column: 19, scope: !6969)
!6973 = !DILocation(line: 1765, column: 5, scope: !6966)
!6974 = !DILocalVariable(name: "f", scope: !6975, file: !3, line: 1766, type: !97)
!6975 = distinct !DILexicalBlock(scope: !6969, file: !3, line: 1765, column: 39)
!6976 = !DILocation(line: 1766, column: 15, scope: !6975)
!6977 = !DILocation(line: 1766, column: 19, scope: !6975)
!6978 = !DILocation(line: 1766, column: 22, scope: !6975)
!6979 = !DILocation(line: 1766, column: 28, scope: !6975)
!6980 = !DILocalVariable(name: "f_ed_idx", scope: !6975, file: !3, line: 1767, type: !6126)
!6981 = !DILocation(line: 1767, column: 16, scope: !6975)
!6982 = !DILocation(line: 1767, column: 46, scope: !6975)
!6983 = !DILocation(line: 1767, column: 49, scope: !6975)
!6984 = !DILocation(line: 1767, column: 27, scope: !6975)
!6985 = !DILocation(line: 1768, column: 18, scope: !6975)
!6986 = !DILocation(line: 1768, column: 39, scope: !6975)
!6987 = !DILocation(line: 1768, column: 42, scope: !6975)
!6988 = !DILocation(line: 1768, column: 45, scope: !6975)
!6989 = !DILocation(line: 1768, column: 55, scope: !6975)
!6990 = !DILocation(line: 1768, column: 64, scope: !6975)
!6991 = !DILocation(line: 1768, column: 71, scope: !6975)
!6992 = !DILocation(line: 1768, column: 85, scope: !6975)
!6993 = !DILocation(line: 1768, column: 21, scope: !6975)
!6994 = !DILocation(line: 1768, column: 100, scope: !6975)
!6995 = !DILocation(line: 1768, column: 6, scope: !6975)
!6996 = !DILocation(line: 1769, column: 14, scope: !6975)
!6997 = !DILocation(line: 1770, column: 5, scope: !6975)
!6998 = !DILocation(line: 1765, column: 35, scope: !6969)
!6999 = !DILocation(line: 1765, column: 5, scope: !6969)
!7000 = distinct !{!7000, !6973, !7001}
!7001 = !DILocation(line: 1770, column: 5, scope: !6966)
!7002 = !DILocation(line: 1772, column: 18, scope: !6941)
!7003 = !DILocation(line: 1772, column: 36, scope: !6941)
!7004 = !DILocation(line: 1772, column: 34, scope: !6941)
!7005 = !DILocation(line: 1772, column: 26, scope: !6941)
!7006 = !DILocation(line: 1772, column: 47, scope: !6941)
!7007 = !DILocation(line: 1772, column: 5, scope: !6941)
!7008 = !DILocation(line: 1774, column: 18, scope: !6941)
!7009 = !DILocation(line: 1774, column: 21, scope: !6941)
!7010 = !DILocation(line: 1774, column: 26, scope: !6941)
!7011 = !DILocation(line: 1774, column: 5, scope: !6941)
!7012 = !DILocation(line: 1775, column: 17, scope: !6941)
!7013 = !DILocation(line: 1775, column: 20, scope: !6941)
!7014 = !DILocation(line: 1775, column: 25, scope: !6941)
!7015 = !DILocation(line: 1775, column: 5, scope: !6941)
!7016 = !DILocation(line: 1776, column: 18, scope: !6941)
!7017 = !DILocation(line: 1776, column: 27, scope: !6941)
!7018 = !DILocation(line: 1776, column: 5, scope: !6941)
!7019 = !DILocation(line: 1778, column: 18, scope: !6941)
!7020 = !DILocation(line: 1778, column: 22, scope: !6941)
!7021 = !DILocation(line: 1778, column: 25, scope: !6941)
!7022 = !DILocation(line: 1778, column: 5, scope: !6941)
!7023 = !DILocation(line: 1779, column: 17, scope: !6941)
!7024 = !DILocation(line: 1779, column: 20, scope: !6941)
!7025 = !DILocation(line: 1779, column: 23, scope: !6941)
!7026 = !DILocation(line: 1779, column: 5, scope: !6941)
!7027 = !DILocation(line: 1780, column: 18, scope: !6941)
!7028 = !DILocation(line: 1780, column: 21, scope: !6941)
!7029 = !DILocation(line: 1780, column: 32, scope: !6941)
!7030 = !DILocation(line: 1780, column: 5, scope: !6941)
!7031 = !DILocation(line: 1781, column: 17, scope: !6941)
!7032 = !DILocation(line: 1781, column: 21, scope: !6941)
!7033 = !DILocation(line: 1781, column: 24, scope: !6941)
!7034 = !DILocation(line: 1781, column: 5, scope: !6941)
!7035 = !DILocation(line: 1782, column: 4, scope: !6941)
!7036 = !DILocation(line: 1755, column: 35, scope: !6935)
!7037 = !DILocation(line: 1755, column: 4, scope: !6935)
!7038 = distinct !{!7038, !6939, !7039}
!7039 = !DILocation(line: 1782, column: 4, scope: !6931)
!7040 = !DILocation(line: 1784, column: 2, scope: !6868)
!7041 = !DILocation(line: 1737, column: 48, scope: !6863)
!7042 = !DILocation(line: 1737, column: 2, scope: !6863)
!7043 = distinct !{!7043, !6866, !7044}
!7044 = !DILocation(line: 1784, column: 2, scope: !6860)
!7045 = !DILocation(line: 1791, column: 14, scope: !7046)
!7046 = distinct !DILexicalBlock(scope: !6525, file: !3, line: 1791, column: 2)
!7047 = !DILocation(line: 1791, column: 7, scope: !7046)
!7048 = !DILocation(line: 1791, column: 19, scope: !7049)
!7049 = distinct !DILexicalBlock(scope: !7046, file: !3, line: 1791, column: 2)
!7050 = !DILocation(line: 1791, column: 28, scope: !7049)
!7051 = !DILocation(line: 1791, column: 26, scope: !7049)
!7052 = !DILocation(line: 1791, column: 2, scope: !7046)
!7053 = !DILocalVariable(name: "v", scope: !7054, file: !3, line: 1792, type: !70)
!7054 = distinct !DILexicalBlock(scope: !7049, file: !3, line: 1791, column: 52)
!7055 = !DILocation(line: 1792, column: 12, scope: !7054)
!7056 = !DILocation(line: 1792, column: 28, scope: !7054)
!7057 = !DILocation(line: 1792, column: 38, scope: !7054)
!7058 = !DILocalVariable(name: "co", scope: !7054, file: !3, line: 1793, type: !1587)
!7059 = !DILocation(line: 1793, column: 16, scope: !7054)
!7060 = !DILocation(line: 1793, column: 21, scope: !7054)
!7061 = !DILocalVariable(name: "nCo", scope: !7054, file: !3, line: 1794, type: !68)
!7062 = !DILocation(line: 1794, column: 10, scope: !7054)
!7063 = !DILocation(line: 1794, column: 16, scope: !7054)
!7064 = !DILocalVariable(name: "sharpCount", scope: !7054, file: !3, line: 1795, type: !17)
!7065 = !DILocation(line: 1795, column: 7, scope: !7054)
!7066 = !DILocalVariable(name: "allSharp", scope: !7054, file: !3, line: 1795, type: !17)
!7067 = !DILocation(line: 1795, column: 23, scope: !7054)
!7068 = !DILocalVariable(name: "avgSharpness", scope: !7054, file: !3, line: 1796, type: !69)
!7069 = !DILocation(line: 1796, column: 9, scope: !7054)
!7070 = !DILocalVariable(name: "j", scope: !7054, file: !3, line: 1797, type: !17)
!7071 = !DILocation(line: 1797, column: 7, scope: !7054)
!7072 = !DILocalVariable(name: "seam", scope: !7054, file: !3, line: 1797, type: !17)
!7073 = !DILocation(line: 1797, column: 10, scope: !7054)
!7074 = !DILocation(line: 1797, column: 27, scope: !7054)
!7075 = !DILocation(line: 1797, column: 17, scope: !7054)
!7076 = !DILocalVariable(name: "seamEdges", scope: !7054, file: !3, line: 1797, type: !17)
!7077 = !DILocation(line: 1797, column: 31, scope: !7054)
!7078 = !DILocation(line: 1799, column: 10, scope: !7079)
!7079 = distinct !DILexicalBlock(scope: !7054, file: !3, line: 1799, column: 3)
!7080 = !DILocation(line: 1799, column: 8, scope: !7079)
!7081 = !DILocation(line: 1799, column: 15, scope: !7082)
!7082 = distinct !DILexicalBlock(scope: !7079, file: !3, line: 1799, column: 3)
!7083 = !DILocation(line: 1799, column: 19, scope: !7082)
!7084 = !DILocation(line: 1799, column: 22, scope: !7082)
!7085 = !DILocation(line: 1799, column: 17, scope: !7082)
!7086 = !DILocation(line: 1799, column: 3, scope: !7079)
!7087 = !DILocalVariable(name: "e", scope: !7088, file: !3, line: 1800, type: !84)
!7088 = distinct !DILexicalBlock(scope: !7082, file: !3, line: 1799, column: 37)
!7089 = !DILocation(line: 1800, column: 13, scope: !7088)
!7090 = !DILocation(line: 1800, column: 17, scope: !7088)
!7091 = !DILocation(line: 1800, column: 20, scope: !7088)
!7092 = !DILocation(line: 1800, column: 26, scope: !7088)
!7093 = !DILocalVariable(name: "sharpness", scope: !7088, file: !3, line: 1801, type: !69)
!7094 = !DILocation(line: 1801, column: 10, scope: !7088)
!7095 = !DILocation(line: 1801, column: 40, scope: !7088)
!7096 = !DILocation(line: 1801, column: 43, scope: !7088)
!7097 = !DILocation(line: 1801, column: 22, scope: !7088)
!7098 = !DILocation(line: 1803, column: 8, scope: !7099)
!7099 = distinct !DILexicalBlock(scope: !7088, file: !3, line: 1803, column: 8)
!7100 = !DILocation(line: 1803, column: 13, scope: !7099)
!7101 = !DILocation(line: 1803, column: 33, scope: !7099)
!7102 = !DILocation(line: 1803, column: 16, scope: !7099)
!7103 = !DILocation(line: 1803, column: 8, scope: !7088)
!7104 = !DILocation(line: 1804, column: 14, scope: !7099)
!7105 = !DILocation(line: 1804, column: 5, scope: !7099)
!7106 = !DILocation(line: 1806, column: 8, scope: !7107)
!7107 = distinct !DILexicalBlock(scope: !7088, file: !3, line: 1806, column: 8)
!7108 = !DILocation(line: 1806, column: 18, scope: !7107)
!7109 = !DILocation(line: 1806, column: 8, scope: !7088)
!7110 = !DILocation(line: 1807, column: 15, scope: !7111)
!7111 = distinct !DILexicalBlock(scope: !7107, file: !3, line: 1806, column: 27)
!7112 = !DILocation(line: 1808, column: 21, scope: !7111)
!7113 = !DILocation(line: 1808, column: 18, scope: !7111)
!7114 = !DILocation(line: 1809, column: 4, scope: !7111)
!7115 = !DILocation(line: 1811, column: 14, scope: !7116)
!7116 = distinct !DILexicalBlock(scope: !7107, file: !3, line: 1810, column: 9)
!7117 = !DILocation(line: 1813, column: 3, scope: !7088)
!7118 = !DILocation(line: 1799, column: 33, scope: !7082)
!7119 = !DILocation(line: 1799, column: 3, scope: !7082)
!7120 = distinct !{!7120, !7086, !7121}
!7121 = !DILocation(line: 1813, column: 3, scope: !7079)
!7122 = !DILocation(line: 1815, column: 7, scope: !7123)
!7123 = distinct !DILexicalBlock(scope: !7054, file: !3, line: 1815, column: 7)
!7124 = !DILocation(line: 1815, column: 7, scope: !7054)
!7125 = !DILocation(line: 1816, column: 20, scope: !7126)
!7126 = distinct !DILexicalBlock(scope: !7123, file: !3, line: 1815, column: 19)
!7127 = !DILocation(line: 1816, column: 17, scope: !7126)
!7128 = !DILocation(line: 1817, column: 8, scope: !7129)
!7129 = distinct !DILexicalBlock(scope: !7126, file: !3, line: 1817, column: 8)
!7130 = !DILocation(line: 1817, column: 21, scope: !7129)
!7131 = !DILocation(line: 1817, column: 8, scope: !7126)
!7132 = !DILocation(line: 1818, column: 18, scope: !7133)
!7133 = distinct !DILexicalBlock(scope: !7129, file: !3, line: 1817, column: 29)
!7134 = !DILocation(line: 1819, column: 4, scope: !7133)
!7135 = !DILocation(line: 1820, column: 3, scope: !7126)
!7136 = !DILocation(line: 1822, column: 7, scope: !7137)
!7137 = distinct !DILexicalBlock(scope: !7054, file: !3, line: 1822, column: 7)
!7138 = !DILocation(line: 1822, column: 17, scope: !7137)
!7139 = !DILocation(line: 1822, column: 21, scope: !7137)
!7140 = !DILocation(line: 1822, column: 24, scope: !7137)
!7141 = !DILocation(line: 1822, column: 37, scope: !7137)
!7142 = !DILocation(line: 1822, column: 40, scope: !7137)
!7143 = !DILocation(line: 1822, column: 34, scope: !7137)
!7144 = !DILocation(line: 1822, column: 7, scope: !7054)
!7145 = !DILocation(line: 1823, column: 9, scope: !7137)
!7146 = !DILocation(line: 1823, column: 4, scope: !7137)
!7147 = !DILocation(line: 1825, column: 8, scope: !7148)
!7148 = distinct !DILexicalBlock(scope: !7054, file: !3, line: 1825, column: 7)
!7149 = !DILocation(line: 1825, column: 11, scope: !7148)
!7150 = !DILocation(line: 1825, column: 20, scope: !7148)
!7151 = !DILocation(line: 1825, column: 23, scope: !7148)
!7152 = !DILocation(line: 1825, column: 27, scope: !7148)
!7153 = !DILocation(line: 1825, column: 35, scope: !7148)
!7154 = !DILocation(line: 1825, column: 7, scope: !7054)
!7155 = !DILocation(line: 1826, column: 17, scope: !7156)
!7156 = distinct !DILexicalBlock(scope: !7148, file: !3, line: 1825, column: 49)
!7157 = !DILocation(line: 1826, column: 22, scope: !7156)
!7158 = !DILocation(line: 1826, column: 26, scope: !7156)
!7159 = !DILocation(line: 1826, column: 4, scope: !7156)
!7160 = !DILocation(line: 1827, column: 3, scope: !7156)
!7161 = !DILocation(line: 1828, column: 29, scope: !7162)
!7162 = distinct !DILexicalBlock(scope: !7148, file: !3, line: 1828, column: 12)
!7163 = !DILocation(line: 1828, column: 12, scope: !7162)
!7164 = !DILocation(line: 1828, column: 12, scope: !7148)
!7165 = !DILocalVariable(name: "numBoundary", scope: !7166, file: !3, line: 1829, type: !17)
!7166 = distinct !DILexicalBlock(scope: !7162, file: !3, line: 1828, column: 33)
!7167 = !DILocation(line: 1829, column: 8, scope: !7166)
!7168 = !DILocation(line: 1831, column: 17, scope: !7166)
!7169 = !DILocation(line: 1831, column: 20, scope: !7166)
!7170 = !DILocation(line: 1831, column: 4, scope: !7166)
!7171 = !DILocation(line: 1832, column: 11, scope: !7172)
!7172 = distinct !DILexicalBlock(scope: !7166, file: !3, line: 1832, column: 4)
!7173 = !DILocation(line: 1832, column: 9, scope: !7172)
!7174 = !DILocation(line: 1832, column: 16, scope: !7175)
!7175 = distinct !DILexicalBlock(scope: !7172, file: !3, line: 1832, column: 4)
!7176 = !DILocation(line: 1832, column: 20, scope: !7175)
!7177 = !DILocation(line: 1832, column: 23, scope: !7175)
!7178 = !DILocation(line: 1832, column: 18, scope: !7175)
!7179 = !DILocation(line: 1832, column: 4, scope: !7172)
!7180 = !DILocalVariable(name: "e", scope: !7181, file: !3, line: 1833, type: !84)
!7181 = distinct !DILexicalBlock(scope: !7175, file: !3, line: 1832, column: 38)
!7182 = !DILocation(line: 1833, column: 14, scope: !7181)
!7183 = !DILocation(line: 1833, column: 18, scope: !7181)
!7184 = !DILocation(line: 1833, column: 21, scope: !7181)
!7185 = !DILocation(line: 1833, column: 27, scope: !7181)
!7186 = !DILocation(line: 1834, column: 26, scope: !7187)
!7187 = distinct !DILexicalBlock(scope: !7181, file: !3, line: 1834, column: 9)
!7188 = !DILocation(line: 1834, column: 9, scope: !7187)
!7189 = !DILocation(line: 1834, column: 9, scope: !7181)
!7190 = !DILocation(line: 1835, column: 18, scope: !7191)
!7191 = distinct !DILexicalBlock(scope: !7187, file: !3, line: 1834, column: 30)
!7192 = !DILocation(line: 1835, column: 37, scope: !7191)
!7193 = !DILocation(line: 1835, column: 40, scope: !7191)
!7194 = !DILocation(line: 1835, column: 43, scope: !7191)
!7195 = !DILocation(line: 1835, column: 54, scope: !7191)
!7196 = !DILocation(line: 1835, column: 21, scope: !7191)
!7197 = !DILocation(line: 1835, column: 69, scope: !7191)
!7198 = !DILocation(line: 1835, column: 6, scope: !7191)
!7199 = !DILocation(line: 1836, column: 17, scope: !7191)
!7200 = !DILocation(line: 1837, column: 5, scope: !7191)
!7201 = !DILocation(line: 1838, column: 4, scope: !7181)
!7202 = !DILocation(line: 1832, column: 34, scope: !7175)
!7203 = !DILocation(line: 1832, column: 4, scope: !7175)
!7204 = distinct !{!7204, !7179, !7205}
!7205 = !DILocation(line: 1838, column: 4, scope: !7172)
!7206 = !DILocation(line: 1840, column: 17, scope: !7166)
!7207 = !DILocation(line: 1840, column: 22, scope: !7166)
!7208 = !DILocation(line: 1840, column: 26, scope: !7166)
!7209 = !DILocation(line: 1840, column: 4, scope: !7166)
!7210 = !DILocation(line: 1841, column: 17, scope: !7166)
!7211 = !DILocation(line: 1841, column: 29, scope: !7166)
!7212 = !DILocation(line: 1841, column: 4, scope: !7166)
!7213 = !DILocation(line: 1842, column: 17, scope: !7166)
!7214 = !DILocation(line: 1842, column: 28, scope: !7166)
!7215 = !DILocation(line: 1842, column: 26, scope: !7166)
!7216 = !DILocation(line: 1842, column: 41, scope: !7166)
!7217 = !DILocation(line: 1842, column: 4, scope: !7166)
!7218 = !DILocation(line: 1843, column: 16, scope: !7166)
!7219 = !DILocation(line: 1843, column: 21, scope: !7166)
!7220 = !DILocation(line: 1843, column: 24, scope: !7166)
!7221 = !DILocation(line: 1843, column: 4, scope: !7166)
!7222 = !DILocation(line: 1844, column: 3, scope: !7166)
!7223 = !DILocalVariable(name: "cornerIdx", scope: !7224, file: !3, line: 1846, type: !17)
!7224 = distinct !DILexicalBlock(scope: !7162, file: !3, line: 1845, column: 8)
!7225 = !DILocation(line: 1846, column: 8, scope: !7224)
!7226 = !DILocation(line: 1846, column: 32, scope: !7224)
!7227 = !DILocation(line: 1846, column: 28, scope: !7224)
!7228 = !DILocation(line: 1846, column: 23, scope: !7224)
!7229 = !DILocation(line: 1846, column: 42, scope: !7224)
!7230 = !DILocalVariable(name: "numEdges", scope: !7224, file: !3, line: 1847, type: !17)
!7231 = !DILocation(line: 1847, column: 8, scope: !7224)
!7232 = !DILocalVariable(name: "numFaces", scope: !7224, file: !3, line: 1847, type: !17)
!7233 = !DILocation(line: 1847, column: 22, scope: !7224)
!7234 = !DILocation(line: 1849, column: 17, scope: !7224)
!7235 = !DILocation(line: 1849, column: 20, scope: !7224)
!7236 = !DILocation(line: 1849, column: 4, scope: !7224)
!7237 = !DILocation(line: 1850, column: 11, scope: !7238)
!7238 = distinct !DILexicalBlock(scope: !7224, file: !3, line: 1850, column: 4)
!7239 = !DILocation(line: 1850, column: 9, scope: !7238)
!7240 = !DILocation(line: 1850, column: 16, scope: !7241)
!7241 = distinct !DILexicalBlock(scope: !7238, file: !3, line: 1850, column: 4)
!7242 = !DILocation(line: 1850, column: 20, scope: !7241)
!7243 = !DILocation(line: 1850, column: 23, scope: !7241)
!7244 = !DILocation(line: 1850, column: 18, scope: !7241)
!7245 = !DILocation(line: 1850, column: 4, scope: !7238)
!7246 = !DILocalVariable(name: "f", scope: !7247, file: !3, line: 1851, type: !97)
!7247 = distinct !DILexicalBlock(scope: !7241, file: !3, line: 1850, column: 38)
!7248 = !DILocation(line: 1851, column: 14, scope: !7247)
!7249 = !DILocation(line: 1851, column: 18, scope: !7247)
!7250 = !DILocation(line: 1851, column: 21, scope: !7247)
!7251 = !DILocation(line: 1851, column: 27, scope: !7247)
!7252 = !DILocation(line: 1852, column: 17, scope: !7247)
!7253 = !DILocation(line: 1852, column: 20, scope: !7247)
!7254 = !DILocation(line: 1852, column: 94, scope: !7247)
!7255 = !DILocation(line: 1852, column: 5, scope: !7247)
!7256 = !DILocation(line: 1853, column: 13, scope: !7247)
!7257 = !DILocation(line: 1854, column: 4, scope: !7247)
!7258 = !DILocation(line: 1850, column: 34, scope: !7241)
!7259 = !DILocation(line: 1850, column: 4, scope: !7241)
!7260 = distinct !{!7260, !7245, !7261}
!7261 = !DILocation(line: 1854, column: 4, scope: !7238)
!7262 = !DILocation(line: 1855, column: 17, scope: !7224)
!7263 = !DILocation(line: 1855, column: 27, scope: !7224)
!7264 = !DILocation(line: 1855, column: 25, scope: !7224)
!7265 = !DILocation(line: 1855, column: 37, scope: !7224)
!7266 = !DILocation(line: 1855, column: 4, scope: !7224)
!7267 = !DILocation(line: 1856, column: 17, scope: !7224)
!7268 = !DILocation(line: 1856, column: 20, scope: !7224)
!7269 = !DILocation(line: 1856, column: 4, scope: !7224)
!7270 = !DILocation(line: 1857, column: 11, scope: !7271)
!7271 = distinct !DILexicalBlock(scope: !7224, file: !3, line: 1857, column: 4)
!7272 = !DILocation(line: 1857, column: 9, scope: !7271)
!7273 = !DILocation(line: 1857, column: 16, scope: !7274)
!7274 = distinct !DILexicalBlock(scope: !7271, file: !3, line: 1857, column: 4)
!7275 = !DILocation(line: 1857, column: 20, scope: !7274)
!7276 = !DILocation(line: 1857, column: 23, scope: !7274)
!7277 = !DILocation(line: 1857, column: 18, scope: !7274)
!7278 = !DILocation(line: 1857, column: 4, scope: !7271)
!7279 = !DILocalVariable(name: "e", scope: !7280, file: !3, line: 1858, type: !84)
!7280 = distinct !DILexicalBlock(scope: !7274, file: !3, line: 1857, column: 38)
!7281 = !DILocation(line: 1858, column: 14, scope: !7280)
!7282 = !DILocation(line: 1858, column: 18, scope: !7280)
!7283 = !DILocation(line: 1858, column: 21, scope: !7280)
!7284 = !DILocation(line: 1858, column: 27, scope: !7280)
!7285 = !DILocation(line: 1859, column: 17, scope: !7280)
!7286 = !DILocation(line: 1859, column: 36, scope: !7280)
!7287 = !DILocation(line: 1859, column: 39, scope: !7280)
!7288 = !DILocation(line: 1859, column: 42, scope: !7280)
!7289 = !DILocation(line: 1859, column: 53, scope: !7280)
!7290 = !DILocation(line: 1859, column: 20, scope: !7280)
!7291 = !DILocation(line: 1859, column: 68, scope: !7280)
!7292 = !DILocation(line: 1859, column: 5, scope: !7280)
!7293 = !DILocation(line: 1860, column: 13, scope: !7280)
!7294 = !DILocation(line: 1861, column: 4, scope: !7280)
!7295 = !DILocation(line: 1857, column: 34, scope: !7274)
!7296 = !DILocation(line: 1857, column: 4, scope: !7274)
!7297 = distinct !{!7297, !7278, !7298}
!7298 = !DILocation(line: 1861, column: 4, scope: !7271)
!7299 = !DILocation(line: 1862, column: 17, scope: !7224)
!7300 = !DILocation(line: 1862, column: 27, scope: !7224)
!7301 = !DILocation(line: 1862, column: 25, scope: !7224)
!7302 = !DILocation(line: 1862, column: 37, scope: !7224)
!7303 = !DILocation(line: 1862, column: 4, scope: !7224)
!7304 = !DILocation(line: 1864, column: 17, scope: !7224)
!7305 = !DILocation(line: 1864, column: 22, scope: !7224)
!7306 = !DILocation(line: 1864, column: 26, scope: !7224)
!7307 = !DILocation(line: 1864, column: 4, scope: !7224)
!7308 = !DILocation(line: 1865, column: 17, scope: !7224)
!7309 = !DILocation(line: 1865, column: 22, scope: !7224)
!7310 = !DILocation(line: 1865, column: 31, scope: !7224)
!7311 = !DILocation(line: 1865, column: 39, scope: !7224)
!7312 = !DILocation(line: 1865, column: 4, scope: !7224)
!7313 = !DILocation(line: 1866, column: 16, scope: !7224)
!7314 = !DILocation(line: 1866, column: 21, scope: !7224)
!7315 = !DILocation(line: 1866, column: 24, scope: !7224)
!7316 = !DILocation(line: 1866, column: 4, scope: !7224)
!7317 = !DILocation(line: 1867, column: 16, scope: !7224)
!7318 = !DILocation(line: 1867, column: 21, scope: !7224)
!7319 = !DILocation(line: 1867, column: 24, scope: !7224)
!7320 = !DILocation(line: 1867, column: 4, scope: !7224)
!7321 = !DILocation(line: 1868, column: 17, scope: !7224)
!7322 = !DILocation(line: 1868, column: 29, scope: !7224)
!7323 = !DILocation(line: 1868, column: 27, scope: !7224)
!7324 = !DILocation(line: 1868, column: 39, scope: !7224)
!7325 = !DILocation(line: 1868, column: 4, scope: !7224)
!7326 = !DILocation(line: 1871, column: 8, scope: !7327)
!7327 = distinct !DILexicalBlock(scope: !7054, file: !3, line: 1871, column: 7)
!7328 = !DILocation(line: 1871, column: 19, scope: !7327)
!7329 = !DILocation(line: 1871, column: 23, scope: !7327)
!7330 = !DILocation(line: 1871, column: 26, scope: !7327)
!7331 = !DILocation(line: 1871, column: 29, scope: !7327)
!7332 = !DILocation(line: 1871, column: 39, scope: !7327)
!7333 = !DILocation(line: 1871, column: 42, scope: !7327)
!7334 = !DILocation(line: 1871, column: 7, scope: !7054)
!7335 = !DILocation(line: 1872, column: 17, scope: !7336)
!7336 = distinct !DILexicalBlock(scope: !7327, file: !3, line: 1871, column: 48)
!7337 = !DILocation(line: 1872, column: 20, scope: !7336)
!7338 = !DILocation(line: 1872, column: 4, scope: !7336)
!7339 = !DILocation(line: 1874, column: 8, scope: !7340)
!7340 = distinct !DILexicalBlock(scope: !7336, file: !3, line: 1874, column: 8)
!7341 = !DILocation(line: 1874, column: 8, scope: !7336)
!7342 = !DILocation(line: 1875, column: 18, scope: !7343)
!7343 = distinct !DILexicalBlock(scope: !7340, file: !3, line: 1874, column: 14)
!7344 = !DILocation(line: 1876, column: 18, scope: !7343)
!7345 = !DILocation(line: 1876, column: 16, scope: !7343)
!7346 = !DILocation(line: 1877, column: 14, scope: !7343)
!7347 = !DILocation(line: 1878, column: 4, scope: !7343)
!7348 = !DILocation(line: 1880, column: 11, scope: !7349)
!7349 = distinct !DILexicalBlock(scope: !7336, file: !3, line: 1880, column: 4)
!7350 = !DILocation(line: 1880, column: 9, scope: !7349)
!7351 = !DILocation(line: 1880, column: 16, scope: !7352)
!7352 = distinct !DILexicalBlock(scope: !7349, file: !3, line: 1880, column: 4)
!7353 = !DILocation(line: 1880, column: 20, scope: !7352)
!7354 = !DILocation(line: 1880, column: 23, scope: !7352)
!7355 = !DILocation(line: 1880, column: 18, scope: !7352)
!7356 = !DILocation(line: 1880, column: 4, scope: !7349)
!7357 = !DILocalVariable(name: "e", scope: !7358, file: !3, line: 1881, type: !84)
!7358 = distinct !DILexicalBlock(scope: !7352, file: !3, line: 1880, column: 38)
!7359 = !DILocation(line: 1881, column: 14, scope: !7358)
!7360 = !DILocation(line: 1881, column: 18, scope: !7358)
!7361 = !DILocation(line: 1881, column: 21, scope: !7358)
!7362 = !DILocation(line: 1881, column: 27, scope: !7358)
!7363 = !DILocalVariable(name: "sharpness", scope: !7358, file: !3, line: 1882, type: !69)
!7364 = !DILocation(line: 1882, column: 11, scope: !7358)
!7365 = !DILocation(line: 1882, column: 41, scope: !7358)
!7366 = !DILocation(line: 1882, column: 44, scope: !7358)
!7367 = !DILocation(line: 1882, column: 23, scope: !7358)
!7368 = !DILocation(line: 1884, column: 9, scope: !7369)
!7369 = distinct !DILexicalBlock(scope: !7358, file: !3, line: 1884, column: 9)
!7370 = !DILocation(line: 1884, column: 9, scope: !7358)
!7371 = !DILocation(line: 1885, column: 27, scope: !7372)
!7372 = distinct !DILexicalBlock(scope: !7373, file: !3, line: 1885, column: 10)
!7373 = distinct !DILexicalBlock(scope: !7369, file: !3, line: 1884, column: 15)
!7374 = !DILocation(line: 1885, column: 10, scope: !7372)
!7375 = !DILocation(line: 1885, column: 10, scope: !7373)
!7376 = !DILocation(line: 1886, column: 19, scope: !7372)
!7377 = !DILocation(line: 1886, column: 38, scope: !7372)
!7378 = !DILocation(line: 1886, column: 41, scope: !7372)
!7379 = !DILocation(line: 1886, column: 44, scope: !7372)
!7380 = !DILocation(line: 1886, column: 55, scope: !7372)
!7381 = !DILocation(line: 1886, column: 22, scope: !7372)
!7382 = !DILocation(line: 1886, column: 70, scope: !7372)
!7383 = !DILocation(line: 1886, column: 7, scope: !7372)
!7384 = !DILocation(line: 1887, column: 5, scope: !7373)
!7385 = !DILocation(line: 1888, column: 14, scope: !7386)
!7386 = distinct !DILexicalBlock(scope: !7369, file: !3, line: 1888, column: 14)
!7387 = !DILocation(line: 1888, column: 24, scope: !7386)
!7388 = !DILocation(line: 1888, column: 14, scope: !7369)
!7389 = !DILocation(line: 1889, column: 18, scope: !7390)
!7390 = distinct !DILexicalBlock(scope: !7386, file: !3, line: 1888, column: 33)
!7391 = !DILocation(line: 1889, column: 37, scope: !7390)
!7392 = !DILocation(line: 1889, column: 40, scope: !7390)
!7393 = !DILocation(line: 1889, column: 43, scope: !7390)
!7394 = !DILocation(line: 1889, column: 54, scope: !7390)
!7395 = !DILocation(line: 1889, column: 21, scope: !7390)
!7396 = !DILocation(line: 1889, column: 69, scope: !7390)
!7397 = !DILocation(line: 1889, column: 6, scope: !7390)
!7398 = !DILocation(line: 1890, column: 5, scope: !7390)
!7399 = !DILocation(line: 1891, column: 4, scope: !7358)
!7400 = !DILocation(line: 1880, column: 34, scope: !7352)
!7401 = !DILocation(line: 1880, column: 4, scope: !7352)
!7402 = distinct !{!7402, !7356, !7403}
!7403 = !DILocation(line: 1891, column: 4, scope: !7349)
!7404 = !DILocation(line: 1893, column: 17, scope: !7336)
!7405 = !DILocation(line: 1893, column: 32, scope: !7336)
!7406 = !DILocation(line: 1893, column: 30, scope: !7336)
!7407 = !DILocation(line: 1893, column: 44, scope: !7336)
!7408 = !DILocation(line: 1893, column: 4, scope: !7336)
!7409 = !DILocation(line: 1895, column: 8, scope: !7410)
!7410 = distinct !DILexicalBlock(scope: !7336, file: !3, line: 1895, column: 8)
!7411 = !DILocation(line: 1895, column: 19, scope: !7410)
!7412 = !DILocation(line: 1895, column: 24, scope: !7410)
!7413 = !DILocation(line: 1895, column: 27, scope: !7410)
!7414 = !DILocation(line: 1895, column: 8, scope: !7336)
!7415 = !DILocation(line: 1897, column: 18, scope: !7416)
!7416 = distinct !DILexicalBlock(scope: !7410, file: !3, line: 1895, column: 37)
!7417 = !DILocation(line: 1897, column: 21, scope: !7416)
!7418 = !DILocation(line: 1897, column: 25, scope: !7416)
!7419 = !DILocation(line: 1897, column: 5, scope: !7416)
!7420 = !DILocation(line: 1898, column: 17, scope: !7416)
!7421 = !DILocation(line: 1898, column: 20, scope: !7416)
!7422 = !DILocation(line: 1898, column: 23, scope: !7416)
!7423 = !DILocation(line: 1898, column: 5, scope: !7416)
!7424 = !DILocation(line: 1899, column: 18, scope: !7416)
!7425 = !DILocation(line: 1899, column: 21, scope: !7416)
!7426 = !DILocation(line: 1899, column: 35, scope: !7416)
!7427 = !DILocation(line: 1899, column: 5, scope: !7416)
!7428 = !DILocation(line: 1900, column: 17, scope: !7416)
!7429 = !DILocation(line: 1900, column: 20, scope: !7416)
!7430 = !DILocation(line: 1900, column: 23, scope: !7416)
!7431 = !DILocation(line: 1900, column: 5, scope: !7416)
!7432 = !DILocation(line: 1901, column: 4, scope: !7416)
!7433 = !DILocation(line: 1904, column: 17, scope: !7336)
!7434 = !DILocation(line: 1904, column: 20, scope: !7336)
!7435 = !DILocation(line: 1904, column: 24, scope: !7336)
!7436 = !DILocation(line: 1904, column: 4, scope: !7336)
!7437 = !DILocation(line: 1905, column: 17, scope: !7336)
!7438 = !DILocation(line: 1905, column: 27, scope: !7336)
!7439 = !DILocation(line: 1905, column: 4, scope: !7336)
!7440 = !DILocation(line: 1906, column: 17, scope: !7336)
!7441 = !DILocation(line: 1906, column: 27, scope: !7336)
!7442 = !DILocation(line: 1906, column: 4, scope: !7336)
!7443 = !DILocation(line: 1907, column: 16, scope: !7336)
!7444 = !DILocation(line: 1907, column: 19, scope: !7336)
!7445 = !DILocation(line: 1907, column: 22, scope: !7336)
!7446 = !DILocation(line: 1907, column: 4, scope: !7336)
!7447 = !DILocation(line: 1910, column: 16, scope: !7336)
!7448 = !DILocation(line: 1910, column: 19, scope: !7336)
!7449 = !DILocation(line: 1910, column: 24, scope: !7336)
!7450 = !DILocation(line: 1910, column: 4, scope: !7336)
!7451 = !DILocation(line: 1911, column: 17, scope: !7336)
!7452 = !DILocation(line: 1911, column: 20, scope: !7336)
!7453 = !DILocation(line: 1911, column: 34, scope: !7336)
!7454 = !DILocation(line: 1911, column: 4, scope: !7336)
!7455 = !DILocation(line: 1912, column: 16, scope: !7336)
!7456 = !DILocation(line: 1912, column: 21, scope: !7336)
!7457 = !DILocation(line: 1912, column: 24, scope: !7336)
!7458 = !DILocation(line: 1912, column: 4, scope: !7336)
!7459 = !DILocation(line: 1913, column: 3, scope: !7336)
!7460 = !DILocation(line: 1914, column: 2, scope: !7054)
!7461 = !DILocation(line: 1791, column: 48, scope: !7049)
!7462 = !DILocation(line: 1791, column: 2, scope: !7049)
!7463 = distinct !{!7463, !7052, !7464}
!7464 = !DILocation(line: 1914, column: 2, scope: !7046)
!7465 = !DILocation(line: 1921, column: 14, scope: !7466)
!7466 = distinct !DILexicalBlock(scope: !6525, file: !3, line: 1921, column: 2)
!7467 = !DILocation(line: 1921, column: 7, scope: !7466)
!7468 = !DILocation(line: 1921, column: 19, scope: !7469)
!7469 = distinct !DILexicalBlock(scope: !7466, file: !3, line: 1921, column: 2)
!7470 = !DILocation(line: 1921, column: 28, scope: !7469)
!7471 = !DILocation(line: 1921, column: 26, scope: !7469)
!7472 = !DILocation(line: 1921, column: 2, scope: !7466)
!7473 = !DILocalVariable(name: "e", scope: !7474, file: !3, line: 1922, type: !84)
!7474 = distinct !DILexicalBlock(scope: !7469, file: !3, line: 1921, column: 52)
!7475 = !DILocation(line: 1922, column: 12, scope: !7474)
!7476 = !DILocation(line: 1922, column: 28, scope: !7474)
!7477 = !DILocation(line: 1922, column: 38, scope: !7474)
!7478 = !DILocalVariable(name: "sharpness", scope: !7474, file: !3, line: 1923, type: !69)
!7479 = !DILocation(line: 1923, column: 9, scope: !7474)
!7480 = !DILocation(line: 1923, column: 39, scope: !7474)
!7481 = !DILocation(line: 1923, column: 42, scope: !7474)
!7482 = !DILocation(line: 1923, column: 21, scope: !7474)
!7483 = !DILocalVariable(name: "sharpCount", scope: !7474, file: !3, line: 1924, type: !17)
!7484 = !DILocation(line: 1924, column: 7, scope: !7474)
!7485 = !DILocalVariable(name: "avgSharpness", scope: !7474, file: !3, line: 1925, type: !69)
!7486 = !DILocation(line: 1925, column: 9, scope: !7474)
!7487 = !DILocalVariable(name: "x", scope: !7474, file: !3, line: 1926, type: !17)
!7488 = !DILocation(line: 1926, column: 7, scope: !7474)
!7489 = !DILocalVariable(name: "j", scope: !7474, file: !3, line: 1926, type: !17)
!7490 = !DILocation(line: 1926, column: 10, scope: !7474)
!7491 = !DILocation(line: 1928, column: 7, scope: !7492)
!7492 = distinct !DILexicalBlock(scope: !7474, file: !3, line: 1928, column: 7)
!7493 = !DILocation(line: 1928, column: 17, scope: !7492)
!7494 = !DILocation(line: 1928, column: 7, scope: !7474)
!7495 = !DILocation(line: 1929, column: 15, scope: !7496)
!7496 = distinct !DILexicalBlock(scope: !7492, file: !3, line: 1928, column: 26)
!7497 = !DILocation(line: 1930, column: 20, scope: !7496)
!7498 = !DILocation(line: 1930, column: 17, scope: !7496)
!7499 = !DILocation(line: 1932, column: 8, scope: !7500)
!7500 = distinct !DILexicalBlock(scope: !7496, file: !3, line: 1932, column: 8)
!7501 = !DILocation(line: 1932, column: 21, scope: !7500)
!7502 = !DILocation(line: 1932, column: 8, scope: !7496)
!7503 = !DILocation(line: 1933, column: 18, scope: !7504)
!7504 = distinct !DILexicalBlock(scope: !7500, file: !3, line: 1932, column: 29)
!7505 = !DILocation(line: 1934, column: 4, scope: !7504)
!7506 = !DILocation(line: 1935, column: 3, scope: !7496)
!7507 = !DILocation(line: 1937, column: 15, scope: !7508)
!7508 = distinct !DILexicalBlock(scope: !7492, file: !3, line: 1936, column: 8)
!7509 = !DILocation(line: 1938, column: 17, scope: !7508)
!7510 = !DILocation(line: 1941, column: 24, scope: !7511)
!7511 = distinct !DILexicalBlock(scope: !7474, file: !3, line: 1941, column: 7)
!7512 = !DILocation(line: 1941, column: 7, scope: !7511)
!7513 = !DILocation(line: 1941, column: 7, scope: !7474)
!7514 = !DILocation(line: 1942, column: 11, scope: !7515)
!7515 = distinct !DILexicalBlock(scope: !7516, file: !3, line: 1942, column: 4)
!7516 = distinct !DILexicalBlock(scope: !7511, file: !3, line: 1941, column: 28)
!7517 = !DILocation(line: 1942, column: 9, scope: !7515)
!7518 = !DILocation(line: 1942, column: 16, scope: !7519)
!7519 = distinct !DILexicalBlock(scope: !7515, file: !3, line: 1942, column: 4)
!7520 = !DILocation(line: 1942, column: 20, scope: !7519)
!7521 = !DILocation(line: 1942, column: 29, scope: !7519)
!7522 = !DILocation(line: 1942, column: 18, scope: !7519)
!7523 = !DILocation(line: 1942, column: 4, scope: !7515)
!7524 = !DILocalVariable(name: "fx", scope: !7525, file: !3, line: 1943, type: !17)
!7525 = distinct !DILexicalBlock(scope: !7519, file: !3, line: 1942, column: 39)
!7526 = !DILocation(line: 1943, column: 9, scope: !7525)
!7527 = !DILocation(line: 1943, column: 14, scope: !7525)
!7528 = !DILocation(line: 1943, column: 16, scope: !7525)
!7529 = !DILocalVariable(name: "co", scope: !7525, file: !3, line: 1944, type: !1587)
!7530 = !DILocation(line: 1944, column: 18, scope: !7525)
!7531 = !DILocation(line: 1944, column: 23, scope: !7525)
!7532 = !DILocalVariable(name: "nCo", scope: !7525, file: !3, line: 1945, type: !68)
!7533 = !DILocation(line: 1945, column: 12, scope: !7525)
!7534 = !DILocation(line: 1945, column: 18, scope: !7525)
!7535 = !DILocation(line: 1948, column: 18, scope: !7525)
!7536 = !DILocation(line: 1948, column: 21, scope: !7525)
!7537 = !DILocation(line: 1948, column: 51, scope: !7525)
!7538 = !DILocation(line: 1948, column: 5, scope: !7525)
!7539 = !DILocation(line: 1949, column: 17, scope: !7525)
!7540 = !DILocation(line: 1949, column: 20, scope: !7525)
!7541 = !DILocation(line: 1949, column: 50, scope: !7525)
!7542 = !DILocation(line: 1949, column: 5, scope: !7525)
!7543 = !DILocation(line: 1950, column: 18, scope: !7525)
!7544 = !DILocation(line: 1950, column: 27, scope: !7525)
!7545 = !DILocation(line: 1950, column: 5, scope: !7525)
!7546 = !DILocation(line: 1953, column: 18, scope: !7525)
!7547 = !DILocation(line: 1953, column: 23, scope: !7525)
!7548 = !DILocation(line: 1953, column: 27, scope: !7525)
!7549 = !DILocation(line: 1953, column: 5, scope: !7525)
!7550 = !DILocation(line: 1954, column: 18, scope: !7525)
!7551 = !DILocation(line: 1954, column: 30, scope: !7525)
!7552 = !DILocation(line: 1954, column: 5, scope: !7525)
!7553 = !DILocation(line: 1955, column: 18, scope: !7525)
!7554 = !DILocation(line: 1955, column: 28, scope: !7525)
!7555 = !DILocation(line: 1955, column: 5, scope: !7525)
!7556 = !DILocation(line: 1956, column: 17, scope: !7525)
!7557 = !DILocation(line: 1956, column: 22, scope: !7525)
!7558 = !DILocation(line: 1956, column: 25, scope: !7525)
!7559 = !DILocation(line: 1956, column: 5, scope: !7525)
!7560 = !DILocation(line: 1957, column: 4, scope: !7525)
!7561 = !DILocation(line: 1942, column: 35, scope: !7519)
!7562 = !DILocation(line: 1942, column: 4, scope: !7519)
!7563 = distinct !{!7563, !7523, !7564}
!7564 = !DILocation(line: 1957, column: 4, scope: !7515)
!7565 = !DILocation(line: 1958, column: 3, scope: !7516)
!7566 = !DILocation(line: 1960, column: 11, scope: !7567)
!7567 = distinct !DILexicalBlock(scope: !7568, file: !3, line: 1960, column: 4)
!7568 = distinct !DILexicalBlock(scope: !7511, file: !3, line: 1959, column: 8)
!7569 = !DILocation(line: 1960, column: 9, scope: !7567)
!7570 = !DILocation(line: 1960, column: 16, scope: !7571)
!7571 = distinct !DILexicalBlock(scope: !7567, file: !3, line: 1960, column: 4)
!7572 = !DILocation(line: 1960, column: 20, scope: !7571)
!7573 = !DILocation(line: 1960, column: 29, scope: !7571)
!7574 = !DILocation(line: 1960, column: 18, scope: !7571)
!7575 = !DILocation(line: 1960, column: 4, scope: !7567)
!7576 = !DILocalVariable(name: "fx", scope: !7577, file: !3, line: 1961, type: !17)
!7577 = distinct !DILexicalBlock(scope: !7571, file: !3, line: 1960, column: 39)
!7578 = !DILocation(line: 1961, column: 9, scope: !7577)
!7579 = !DILocation(line: 1961, column: 14, scope: !7577)
!7580 = !DILocation(line: 1961, column: 16, scope: !7577)
!7581 = !DILocalVariable(name: "co", scope: !7577, file: !3, line: 1962, type: !1587)
!7582 = !DILocation(line: 1962, column: 18, scope: !7577)
!7583 = !DILocation(line: 1962, column: 23, scope: !7577)
!7584 = !DILocalVariable(name: "nCo", scope: !7577, file: !3, line: 1963, type: !68)
!7585 = !DILocation(line: 1963, column: 12, scope: !7577)
!7586 = !DILocation(line: 1963, column: 18, scope: !7577)
!7587 = !DILocalVariable(name: "numFaces", scope: !7577, file: !3, line: 1964, type: !17)
!7588 = !DILocation(line: 1964, column: 9, scope: !7577)
!7589 = !DILocation(line: 1966, column: 18, scope: !7577)
!7590 = !DILocation(line: 1966, column: 21, scope: !7577)
!7591 = !DILocation(line: 1966, column: 5, scope: !7577)
!7592 = !DILocation(line: 1967, column: 18, scope: !7577)
!7593 = !DILocation(line: 1967, column: 21, scope: !7577)
!7594 = !DILocation(line: 1967, column: 5, scope: !7577)
!7595 = !DILocation(line: 1968, column: 17, scope: !7577)
!7596 = !DILocation(line: 1968, column: 20, scope: !7577)
!7597 = !DILocation(line: 1968, column: 50, scope: !7577)
!7598 = !DILocation(line: 1968, column: 5, scope: !7577)
!7599 = !DILocation(line: 1969, column: 17, scope: !7577)
!7600 = !DILocation(line: 1969, column: 20, scope: !7577)
!7601 = !DILocation(line: 1969, column: 50, scope: !7577)
!7602 = !DILocation(line: 1969, column: 5, scope: !7577)
!7603 = !DILocation(line: 1970, column: 12, scope: !7604)
!7604 = distinct !DILexicalBlock(scope: !7577, file: !3, line: 1970, column: 5)
!7605 = !DILocation(line: 1970, column: 10, scope: !7604)
!7606 = !DILocation(line: 1970, column: 17, scope: !7607)
!7607 = distinct !DILexicalBlock(scope: !7604, file: !3, line: 1970, column: 5)
!7608 = !DILocation(line: 1970, column: 21, scope: !7607)
!7609 = !DILocation(line: 1970, column: 24, scope: !7607)
!7610 = !DILocation(line: 1970, column: 19, scope: !7607)
!7611 = !DILocation(line: 1970, column: 5, scope: !7604)
!7612 = !DILocalVariable(name: "f", scope: !7613, file: !3, line: 1971, type: !97)
!7613 = distinct !DILexicalBlock(scope: !7607, file: !3, line: 1970, column: 39)
!7614 = !DILocation(line: 1971, column: 15, scope: !7613)
!7615 = !DILocation(line: 1971, column: 19, scope: !7613)
!7616 = !DILocation(line: 1971, column: 22, scope: !7613)
!7617 = !DILocation(line: 1971, column: 28, scope: !7613)
!7618 = !DILocalVariable(name: "f_ed_idx", scope: !7613, file: !3, line: 1972, type: !17)
!7619 = !DILocation(line: 1972, column: 10, scope: !7613)
!7620 = !DILocation(line: 1972, column: 40, scope: !7613)
!7621 = !DILocation(line: 1972, column: 43, scope: !7613)
!7622 = !DILocation(line: 1972, column: 21, scope: !7613)
!7623 = !DILocation(line: 1973, column: 18, scope: !7613)
!7624 = !DILocation(line: 1973, column: 39, scope: !7613)
!7625 = !DILocation(line: 1973, column: 42, scope: !7613)
!7626 = !DILocation(line: 1973, column: 45, scope: !7613)
!7627 = !DILocation(line: 1973, column: 55, scope: !7613)
!7628 = !DILocation(line: 1973, column: 64, scope: !7613)
!7629 = !DILocation(line: 1973, column: 67, scope: !7613)
!7630 = !DILocation(line: 1973, column: 75, scope: !7613)
!7631 = !DILocation(line: 1973, column: 89, scope: !7613)
!7632 = !DILocation(line: 1973, column: 21, scope: !7613)
!7633 = !DILocation(line: 1973, column: 104, scope: !7613)
!7634 = !DILocation(line: 1973, column: 6, scope: !7613)
!7635 = !DILocation(line: 1974, column: 18, scope: !7613)
!7636 = !DILocation(line: 1974, column: 39, scope: !7613)
!7637 = !DILocation(line: 1974, column: 42, scope: !7613)
!7638 = !DILocation(line: 1974, column: 45, scope: !7613)
!7639 = !DILocation(line: 1974, column: 55, scope: !7613)
!7640 = !DILocation(line: 1974, column: 64, scope: !7613)
!7641 = !DILocation(line: 1974, column: 67, scope: !7613)
!7642 = !DILocation(line: 1974, column: 75, scope: !7613)
!7643 = !DILocation(line: 1974, column: 89, scope: !7613)
!7644 = !DILocation(line: 1974, column: 21, scope: !7613)
!7645 = !DILocation(line: 1974, column: 104, scope: !7613)
!7646 = !DILocation(line: 1974, column: 6, scope: !7613)
!7647 = !DILocation(line: 1976, column: 18, scope: !7613)
!7648 = !DILocation(line: 1976, column: 39, scope: !7613)
!7649 = !DILocation(line: 1976, column: 42, scope: !7613)
!7650 = !DILocation(line: 1976, column: 45, scope: !7613)
!7651 = !DILocation(line: 1976, column: 55, scope: !7613)
!7652 = !DILocation(line: 1976, column: 63, scope: !7613)
!7653 = !DILocation(line: 1976, column: 69, scope: !7613)
!7654 = !DILocation(line: 1976, column: 83, scope: !7613)
!7655 = !DILocation(line: 1976, column: 21, scope: !7613)
!7656 = !DILocation(line: 1976, column: 98, scope: !7613)
!7657 = !DILocation(line: 1976, column: 6, scope: !7613)
!7658 = !DILocation(line: 1977, column: 14, scope: !7613)
!7659 = !DILocation(line: 1978, column: 5, scope: !7613)
!7660 = !DILocation(line: 1970, column: 35, scope: !7607)
!7661 = !DILocation(line: 1970, column: 5, scope: !7607)
!7662 = distinct !{!7662, !7611, !7663}
!7663 = !DILocation(line: 1978, column: 5, scope: !7604)
!7664 = !DILocation(line: 1979, column: 18, scope: !7577)
!7665 = !DILocation(line: 1979, column: 29, scope: !7577)
!7666 = !DILocation(line: 1979, column: 38, scope: !7577)
!7667 = !DILocation(line: 1979, column: 26, scope: !7577)
!7668 = !DILocation(line: 1979, column: 47, scope: !7577)
!7669 = !DILocation(line: 1979, column: 5, scope: !7577)
!7670 = !DILocation(line: 1980, column: 18, scope: !7577)
!7671 = !DILocation(line: 1980, column: 36, scope: !7577)
!7672 = !DILocation(line: 1980, column: 34, scope: !7577)
!7673 = !DILocation(line: 1980, column: 26, scope: !7577)
!7674 = !DILocation(line: 1980, column: 47, scope: !7577)
!7675 = !DILocation(line: 1980, column: 5, scope: !7577)
!7676 = !DILocation(line: 1982, column: 18, scope: !7577)
!7677 = !DILocation(line: 1982, column: 23, scope: !7577)
!7678 = !DILocation(line: 1982, column: 27, scope: !7577)
!7679 = !DILocation(line: 1982, column: 5, scope: !7577)
!7680 = !DILocation(line: 1983, column: 18, scope: !7577)
!7681 = !DILocation(line: 1983, column: 31, scope: !7577)
!7682 = !DILocation(line: 1983, column: 23, scope: !7577)
!7683 = !DILocation(line: 1983, column: 41, scope: !7577)
!7684 = !DILocation(line: 1983, column: 5, scope: !7577)
!7685 = !DILocation(line: 1984, column: 17, scope: !7577)
!7686 = !DILocation(line: 1984, column: 22, scope: !7577)
!7687 = !DILocation(line: 1984, column: 25, scope: !7577)
!7688 = !DILocation(line: 1984, column: 5, scope: !7577)
!7689 = !DILocation(line: 1985, column: 17, scope: !7577)
!7690 = !DILocation(line: 1985, column: 22, scope: !7577)
!7691 = !DILocation(line: 1985, column: 25, scope: !7577)
!7692 = !DILocation(line: 1985, column: 5, scope: !7577)
!7693 = !DILocation(line: 1986, column: 18, scope: !7577)
!7694 = !DILocation(line: 1986, column: 35, scope: !7577)
!7695 = !DILocation(line: 1986, column: 33, scope: !7577)
!7696 = !DILocation(line: 1986, column: 30, scope: !7577)
!7697 = !DILocation(line: 1986, column: 28, scope: !7577)
!7698 = !DILocation(line: 1986, column: 46, scope: !7577)
!7699 = !DILocation(line: 1986, column: 5, scope: !7577)
!7700 = !DILocation(line: 1988, column: 9, scope: !7701)
!7701 = distinct !DILexicalBlock(scope: !7577, file: !3, line: 1988, column: 9)
!7702 = !DILocation(line: 1988, column: 20, scope: !7701)
!7703 = !DILocation(line: 1988, column: 9, scope: !7577)
!7704 = !DILocation(line: 1989, column: 19, scope: !7705)
!7705 = distinct !DILexicalBlock(scope: !7701, file: !3, line: 1988, column: 26)
!7706 = !DILocation(line: 1989, column: 22, scope: !7705)
!7707 = !DILocation(line: 1989, column: 26, scope: !7705)
!7708 = !DILocation(line: 1989, column: 6, scope: !7705)
!7709 = !DILocation(line: 1990, column: 19, scope: !7705)
!7710 = !DILocation(line: 1990, column: 28, scope: !7705)
!7711 = !DILocation(line: 1990, column: 6, scope: !7705)
!7712 = !DILocation(line: 1991, column: 18, scope: !7705)
!7713 = !DILocation(line: 1991, column: 21, scope: !7705)
!7714 = !DILocation(line: 1991, column: 51, scope: !7705)
!7715 = !DILocation(line: 1991, column: 6, scope: !7705)
!7716 = !DILocation(line: 1992, column: 18, scope: !7705)
!7717 = !DILocation(line: 1992, column: 21, scope: !7705)
!7718 = !DILocation(line: 1992, column: 51, scope: !7705)
!7719 = !DILocation(line: 1992, column: 6, scope: !7705)
!7720 = !DILocation(line: 1993, column: 19, scope: !7705)
!7721 = !DILocation(line: 1993, column: 32, scope: !7705)
!7722 = !DILocation(line: 1993, column: 6, scope: !7705)
!7723 = !DILocation(line: 1995, column: 18, scope: !7705)
!7724 = !DILocation(line: 1995, column: 21, scope: !7705)
!7725 = !DILocation(line: 1995, column: 26, scope: !7705)
!7726 = !DILocation(line: 1995, column: 6, scope: !7705)
!7727 = !DILocation(line: 1996, column: 19, scope: !7705)
!7728 = !DILocation(line: 1996, column: 22, scope: !7705)
!7729 = !DILocation(line: 1996, column: 36, scope: !7705)
!7730 = !DILocation(line: 1996, column: 6, scope: !7705)
!7731 = !DILocation(line: 1997, column: 18, scope: !7705)
!7732 = !DILocation(line: 1997, column: 23, scope: !7705)
!7733 = !DILocation(line: 1997, column: 26, scope: !7705)
!7734 = !DILocation(line: 1997, column: 6, scope: !7705)
!7735 = !DILocation(line: 1998, column: 5, scope: !7705)
!7736 = !DILocation(line: 1999, column: 4, scope: !7577)
!7737 = !DILocation(line: 1960, column: 35, scope: !7571)
!7738 = !DILocation(line: 1960, column: 4, scope: !7571)
!7739 = distinct !{!7739, !7575, !7740}
!7740 = !DILocation(line: 1999, column: 4, scope: !7567)
!7741 = !DILocation(line: 2001, column: 2, scope: !7474)
!7742 = !DILocation(line: 1921, column: 48, scope: !7469)
!7743 = !DILocation(line: 1921, column: 2, scope: !7469)
!7744 = distinct !{!7744, !7472, !7745}
!7745 = !DILocation(line: 2001, column: 2, scope: !7466)
!7746 = !DILocalVariable(name: "q", scope: !7747, file: !3, line: 2007, type: !68)
!7747 = distinct !DILexicalBlock(scope: !6525, file: !3, line: 2006, column: 2)
!7748 = !DILocation(line: 2007, column: 10, scope: !7747)
!7749 = !DILocalVariable(name: "r", scope: !7747, file: !3, line: 2007, type: !68)
!7750 = !DILocation(line: 2007, column: 14, scope: !7747)
!7751 = !DILocation(line: 2013, column: 8, scope: !7752)
!7752 = distinct !DILexicalBlock(scope: !7747, file: !3, line: 2012, column: 3)
!7753 = !DILocation(line: 2013, column: 20, scope: !7752)
!7754 = !DILocation(line: 2013, column: 24, scope: !7752)
!7755 = !DILocation(line: 2013, column: 32, scope: !7752)
!7756 = !DILocation(line: 2013, column: 6, scope: !7752)
!7757 = !DILocation(line: 2014, column: 8, scope: !7752)
!7758 = !DILocation(line: 2014, column: 20, scope: !7752)
!7759 = !DILocation(line: 2014, column: 24, scope: !7752)
!7760 = !DILocation(line: 2014, column: 32, scope: !7752)
!7761 = !DILocation(line: 2014, column: 6, scope: !7752)
!7762 = !DILocation(line: 2020, column: 15, scope: !7763)
!7763 = distinct !DILexicalBlock(scope: !7747, file: !3, line: 2020, column: 3)
!7764 = !DILocation(line: 2020, column: 8, scope: !7763)
!7765 = !DILocation(line: 2020, column: 20, scope: !7766)
!7766 = distinct !DILexicalBlock(scope: !7763, file: !3, line: 2020, column: 3)
!7767 = !DILocation(line: 2020, column: 29, scope: !7766)
!7768 = !DILocation(line: 2020, column: 27, scope: !7766)
!7769 = !DILocation(line: 2020, column: 3, scope: !7763)
!7770 = !DILocalVariable(name: "f", scope: !7771, file: !3, line: 2021, type: !97)
!7771 = distinct !DILexicalBlock(scope: !7766, file: !3, line: 2020, column: 53)
!7772 = !DILocation(line: 2021, column: 13, scope: !7771)
!7773 = !DILocation(line: 2021, column: 29, scope: !7771)
!7774 = !DILocation(line: 2021, column: 39, scope: !7771)
!7775 = !DILocalVariable(name: "S", scope: !7771, file: !3, line: 2022, type: !17)
!7776 = !DILocation(line: 2022, column: 8, scope: !7771)
!7777 = !DILocalVariable(name: "x", scope: !7771, file: !3, line: 2022, type: !17)
!7778 = !DILocation(line: 2022, column: 11, scope: !7771)
!7779 = !DILocalVariable(name: "y", scope: !7771, file: !3, line: 2022, type: !17)
!7780 = !DILocation(line: 2022, column: 14, scope: !7771)
!7781 = !DILocation(line: 2029, column: 17, scope: !7771)
!7782 = !DILocation(line: 2029, column: 20, scope: !7771)
!7783 = !DILocation(line: 2029, column: 4, scope: !7771)
!7784 = !DILocation(line: 2030, column: 11, scope: !7785)
!7785 = distinct !DILexicalBlock(scope: !7771, file: !3, line: 2030, column: 4)
!7786 = !DILocation(line: 2030, column: 9, scope: !7785)
!7787 = !DILocation(line: 2030, column: 16, scope: !7788)
!7788 = distinct !DILexicalBlock(scope: !7785, file: !3, line: 2030, column: 4)
!7789 = !DILocation(line: 2030, column: 20, scope: !7788)
!7790 = !DILocation(line: 2030, column: 23, scope: !7788)
!7791 = !DILocation(line: 2030, column: 18, scope: !7788)
!7792 = !DILocation(line: 2030, column: 4, scope: !7785)
!7793 = !DILocation(line: 2031, column: 17, scope: !7794)
!7794 = distinct !DILexicalBlock(scope: !7788, file: !3, line: 2030, column: 38)
!7795 = !DILocation(line: 2031, column: 20, scope: !7794)
!7796 = !DILocation(line: 2031, column: 55, scope: !7794)
!7797 = !DILocation(line: 2031, column: 5, scope: !7794)
!7798 = !DILocation(line: 2032, column: 4, scope: !7794)
!7799 = !DILocation(line: 2030, column: 34, scope: !7788)
!7800 = !DILocation(line: 2030, column: 4, scope: !7788)
!7801 = distinct !{!7801, !7792, !7802}
!7802 = !DILocation(line: 2032, column: 4, scope: !7785)
!7803 = !DILocation(line: 2033, column: 17, scope: !7771)
!7804 = !DILocation(line: 2033, column: 27, scope: !7771)
!7805 = !DILocation(line: 2033, column: 30, scope: !7771)
!7806 = !DILocation(line: 2033, column: 25, scope: !7771)
!7807 = !DILocation(line: 2033, column: 40, scope: !7771)
!7808 = !DILocation(line: 2033, column: 4, scope: !7771)
!7809 = !DILocation(line: 2034, column: 17, scope: !7771)
!7810 = !DILocation(line: 2034, column: 20, scope: !7771)
!7811 = !DILocation(line: 2034, column: 4, scope: !7771)
!7812 = !DILocation(line: 2035, column: 11, scope: !7813)
!7813 = distinct !DILexicalBlock(scope: !7771, file: !3, line: 2035, column: 4)
!7814 = !DILocation(line: 2035, column: 9, scope: !7813)
!7815 = !DILocation(line: 2035, column: 16, scope: !7816)
!7816 = distinct !DILexicalBlock(scope: !7813, file: !3, line: 2035, column: 4)
!7817 = !DILocation(line: 2035, column: 20, scope: !7816)
!7818 = !DILocation(line: 2035, column: 23, scope: !7816)
!7819 = !DILocation(line: 2035, column: 18, scope: !7816)
!7820 = !DILocation(line: 2035, column: 4, scope: !7813)
!7821 = !DILocation(line: 2036, column: 17, scope: !7822)
!7822 = distinct !DILexicalBlock(scope: !7816, file: !3, line: 2035, column: 38)
!7823 = !DILocation(line: 2036, column: 20, scope: !7822)
!7824 = !DILocation(line: 2036, column: 51, scope: !7822)
!7825 = !DILocation(line: 2036, column: 5, scope: !7822)
!7826 = !DILocation(line: 2037, column: 4, scope: !7822)
!7827 = !DILocation(line: 2035, column: 34, scope: !7816)
!7828 = !DILocation(line: 2035, column: 4, scope: !7816)
!7829 = distinct !{!7829, !7820, !7830}
!7830 = !DILocation(line: 2037, column: 4, scope: !7813)
!7831 = !DILocation(line: 2038, column: 17, scope: !7771)
!7832 = !DILocation(line: 2038, column: 27, scope: !7771)
!7833 = !DILocation(line: 2038, column: 30, scope: !7771)
!7834 = !DILocation(line: 2038, column: 25, scope: !7771)
!7835 = !DILocation(line: 2038, column: 40, scope: !7771)
!7836 = !DILocation(line: 2038, column: 4, scope: !7771)
!7837 = !DILocation(line: 2040, column: 45, scope: !7771)
!7838 = !DILocation(line: 2040, column: 26, scope: !7771)
!7839 = !DILocation(line: 2040, column: 17, scope: !7771)
!7840 = !DILocation(line: 2040, column: 49, scope: !7771)
!7841 = !DILocation(line: 2040, column: 52, scope: !7771)
!7842 = !DILocation(line: 2040, column: 61, scope: !7771)
!7843 = !DILocation(line: 2040, column: 69, scope: !7771)
!7844 = !DILocation(line: 2040, column: 4, scope: !7771)
!7845 = !DILocation(line: 2041, column: 44, scope: !7771)
!7846 = !DILocation(line: 2041, column: 25, scope: !7771)
!7847 = !DILocation(line: 2041, column: 16, scope: !7771)
!7848 = !DILocation(line: 2041, column: 48, scope: !7771)
!7849 = !DILocation(line: 2041, column: 51, scope: !7771)
!7850 = !DILocation(line: 2041, column: 4, scope: !7771)
!7851 = !DILocation(line: 2042, column: 44, scope: !7771)
!7852 = !DILocation(line: 2042, column: 25, scope: !7771)
!7853 = !DILocation(line: 2042, column: 16, scope: !7771)
!7854 = !DILocation(line: 2042, column: 48, scope: !7771)
!7855 = !DILocation(line: 2042, column: 51, scope: !7771)
!7856 = !DILocation(line: 2042, column: 4, scope: !7771)
!7857 = !DILocation(line: 2043, column: 45, scope: !7771)
!7858 = !DILocation(line: 2043, column: 26, scope: !7771)
!7859 = !DILocation(line: 2043, column: 17, scope: !7771)
!7860 = !DILocation(line: 2043, column: 56, scope: !7771)
!7861 = !DILocation(line: 2043, column: 59, scope: !7771)
!7862 = !DILocation(line: 2043, column: 54, scope: !7771)
!7863 = !DILocation(line: 2043, column: 69, scope: !7771)
!7864 = !DILocation(line: 2043, column: 4, scope: !7771)
!7865 = !DILocation(line: 2045, column: 11, scope: !7866)
!7866 = distinct !DILexicalBlock(scope: !7771, file: !3, line: 2045, column: 4)
!7867 = !DILocation(line: 2045, column: 9, scope: !7866)
!7868 = !DILocation(line: 2045, column: 16, scope: !7869)
!7869 = distinct !DILexicalBlock(scope: !7866, file: !3, line: 2045, column: 4)
!7870 = !DILocation(line: 2045, column: 20, scope: !7869)
!7871 = !DILocation(line: 2045, column: 23, scope: !7869)
!7872 = !DILocation(line: 2045, column: 18, scope: !7869)
!7873 = !DILocation(line: 2045, column: 4, scope: !7866)
!7874 = !DILocation(line: 2051, column: 12, scope: !7875)
!7875 = distinct !DILexicalBlock(scope: !7876, file: !3, line: 2051, column: 5)
!7876 = distinct !DILexicalBlock(scope: !7869, file: !3, line: 2045, column: 38)
!7877 = !DILocation(line: 2051, column: 10, scope: !7875)
!7878 = !DILocation(line: 2051, column: 17, scope: !7879)
!7879 = distinct !DILexicalBlock(scope: !7875, file: !3, line: 2051, column: 5)
!7880 = !DILocation(line: 2051, column: 21, scope: !7879)
!7881 = !DILocation(line: 2051, column: 30, scope: !7879)
!7882 = !DILocation(line: 2051, column: 19, scope: !7879)
!7883 = !DILocation(line: 2051, column: 5, scope: !7875)
!7884 = !DILocation(line: 2052, column: 13, scope: !7885)
!7885 = distinct !DILexicalBlock(scope: !7886, file: !3, line: 2052, column: 6)
!7886 = distinct !DILexicalBlock(scope: !7879, file: !3, line: 2051, column: 40)
!7887 = !DILocation(line: 2052, column: 11, scope: !7885)
!7888 = !DILocation(line: 2052, column: 18, scope: !7889)
!7889 = distinct !DILexicalBlock(scope: !7885, file: !3, line: 2052, column: 6)
!7890 = !DILocation(line: 2052, column: 22, scope: !7889)
!7891 = !DILocation(line: 2052, column: 31, scope: !7889)
!7892 = !DILocation(line: 2052, column: 20, scope: !7889)
!7893 = !DILocation(line: 2052, column: 6, scope: !7885)
!7894 = !DILocalVariable(name: "fx", scope: !7895, file: !3, line: 2053, type: !17)
!7895 = distinct !DILexicalBlock(scope: !7889, file: !3, line: 2052, column: 41)
!7896 = !DILocation(line: 2053, column: 11, scope: !7895)
!7897 = !DILocation(line: 2053, column: 16, scope: !7895)
!7898 = !DILocation(line: 2053, column: 18, scope: !7895)
!7899 = !DILocalVariable(name: "fy", scope: !7895, file: !3, line: 2054, type: !17)
!7900 = !DILocation(line: 2054, column: 11, scope: !7895)
!7901 = !DILocation(line: 2054, column: 16, scope: !7895)
!7902 = !DILocation(line: 2054, column: 18, scope: !7895)
!7903 = !DILocalVariable(name: "co", scope: !7895, file: !3, line: 2055, type: !1587)
!7904 = !DILocation(line: 2055, column: 20, scope: !7895)
!7905 = !DILocation(line: 2055, column: 25, scope: !7895)
!7906 = !DILocalVariable(name: "nCo", scope: !7895, file: !3, line: 2056, type: !68)
!7907 = !DILocation(line: 2056, column: 14, scope: !7895)
!7908 = !DILocation(line: 2056, column: 20, scope: !7895)
!7909 = !DILocation(line: 2058, column: 20, scope: !7895)
!7910 = !DILocation(line: 2059, column: 20, scope: !7895)
!7911 = !DILocation(line: 2060, column: 20, scope: !7895)
!7912 = !DILocation(line: 2061, column: 20, scope: !7895)
!7913 = !DILocation(line: 2062, column: 20, scope: !7895)
!7914 = !DILocation(line: 2063, column: 20, scope: !7895)
!7915 = !DILocation(line: 2058, column: 7, scope: !7895)
!7916 = !DILocation(line: 2065, column: 20, scope: !7895)
!7917 = !DILocation(line: 2066, column: 20, scope: !7895)
!7918 = !DILocation(line: 2067, column: 20, scope: !7895)
!7919 = !DILocation(line: 2068, column: 20, scope: !7895)
!7920 = !DILocation(line: 2069, column: 20, scope: !7895)
!7921 = !DILocation(line: 2070, column: 20, scope: !7895)
!7922 = !DILocation(line: 2065, column: 7, scope: !7895)
!7923 = !DILocation(line: 2072, column: 20, scope: !7895)
!7924 = !DILocation(line: 2072, column: 25, scope: !7895)
!7925 = !DILocation(line: 2072, column: 29, scope: !7895)
!7926 = !DILocation(line: 2072, column: 7, scope: !7895)
!7927 = !DILocation(line: 2073, column: 19, scope: !7895)
!7928 = !DILocation(line: 2073, column: 24, scope: !7895)
!7929 = !DILocation(line: 2073, column: 27, scope: !7895)
!7930 = !DILocation(line: 2073, column: 7, scope: !7895)
!7931 = !DILocation(line: 2074, column: 20, scope: !7895)
!7932 = !DILocation(line: 2074, column: 32, scope: !7895)
!7933 = !DILocation(line: 2074, column: 7, scope: !7895)
!7934 = !DILocation(line: 2075, column: 19, scope: !7895)
!7935 = !DILocation(line: 2075, column: 24, scope: !7895)
!7936 = !DILocation(line: 2075, column: 27, scope: !7895)
!7937 = !DILocation(line: 2075, column: 7, scope: !7895)
!7938 = !DILocation(line: 2076, column: 6, scope: !7895)
!7939 = !DILocation(line: 2052, column: 37, scope: !7889)
!7940 = !DILocation(line: 2052, column: 6, scope: !7889)
!7941 = distinct !{!7941, !7893, !7942}
!7942 = !DILocation(line: 2076, column: 6, scope: !7885)
!7943 = !DILocation(line: 2077, column: 5, scope: !7886)
!7944 = !DILocation(line: 2051, column: 36, scope: !7879)
!7945 = !DILocation(line: 2051, column: 5, scope: !7879)
!7946 = distinct !{!7946, !7883, !7947}
!7947 = !DILocation(line: 2077, column: 5, scope: !7875)
!7948 = !DILocation(line: 2084, column: 12, scope: !7949)
!7949 = distinct !DILexicalBlock(scope: !7876, file: !3, line: 2084, column: 5)
!7950 = !DILocation(line: 2084, column: 10, scope: !7949)
!7951 = !DILocation(line: 2084, column: 17, scope: !7952)
!7952 = distinct !DILexicalBlock(scope: !7949, file: !3, line: 2084, column: 5)
!7953 = !DILocation(line: 2084, column: 21, scope: !7952)
!7954 = !DILocation(line: 2084, column: 30, scope: !7952)
!7955 = !DILocation(line: 2084, column: 19, scope: !7952)
!7956 = !DILocation(line: 2084, column: 5, scope: !7949)
!7957 = !DILocalVariable(name: "fx", scope: !7958, file: !3, line: 2085, type: !17)
!7958 = distinct !DILexicalBlock(scope: !7952, file: !3, line: 2084, column: 40)
!7959 = !DILocation(line: 2085, column: 10, scope: !7958)
!7960 = !DILocation(line: 2085, column: 15, scope: !7958)
!7961 = !DILocation(line: 2085, column: 17, scope: !7958)
!7962 = !DILocalVariable(name: "co", scope: !7958, file: !3, line: 2086, type: !1587)
!7963 = !DILocation(line: 2086, column: 19, scope: !7958)
!7964 = !DILocation(line: 2086, column: 24, scope: !7958)
!7965 = !DILocalVariable(name: "nCo", scope: !7958, file: !3, line: 2087, type: !68)
!7966 = !DILocation(line: 2087, column: 13, scope: !7958)
!7967 = !DILocation(line: 2087, column: 19, scope: !7958)
!7968 = !DILocation(line: 2089, column: 19, scope: !7958)
!7969 = !DILocation(line: 2090, column: 19, scope: !7958)
!7970 = !DILocation(line: 2091, column: 19, scope: !7958)
!7971 = !DILocation(line: 2092, column: 19, scope: !7958)
!7972 = !DILocation(line: 2093, column: 19, scope: !7958)
!7973 = !DILocation(line: 2093, column: 60, scope: !7958)
!7974 = !DILocation(line: 2089, column: 6, scope: !7958)
!7975 = !DILocation(line: 2095, column: 19, scope: !7958)
!7976 = !DILocation(line: 2096, column: 19, scope: !7958)
!7977 = !DILocation(line: 2097, column: 19, scope: !7958)
!7978 = !DILocation(line: 2098, column: 19, scope: !7958)
!7979 = !DILocation(line: 2099, column: 19, scope: !7958)
!7980 = !DILocation(line: 2100, column: 19, scope: !7958)
!7981 = !DILocation(line: 2095, column: 6, scope: !7958)
!7982 = !DILocation(line: 2102, column: 19, scope: !7958)
!7983 = !DILocation(line: 2102, column: 24, scope: !7958)
!7984 = !DILocation(line: 2102, column: 28, scope: !7958)
!7985 = !DILocation(line: 2102, column: 6, scope: !7958)
!7986 = !DILocation(line: 2103, column: 18, scope: !7958)
!7987 = !DILocation(line: 2103, column: 23, scope: !7958)
!7988 = !DILocation(line: 2103, column: 26, scope: !7958)
!7989 = !DILocation(line: 2103, column: 6, scope: !7958)
!7990 = !DILocation(line: 2104, column: 19, scope: !7958)
!7991 = !DILocation(line: 2104, column: 31, scope: !7958)
!7992 = !DILocation(line: 2104, column: 6, scope: !7958)
!7993 = !DILocation(line: 2105, column: 18, scope: !7958)
!7994 = !DILocation(line: 2105, column: 23, scope: !7958)
!7995 = !DILocation(line: 2105, column: 26, scope: !7958)
!7996 = !DILocation(line: 2105, column: 6, scope: !7958)
!7997 = !DILocation(line: 2106, column: 5, scope: !7958)
!7998 = !DILocation(line: 2084, column: 36, scope: !7952)
!7999 = !DILocation(line: 2084, column: 5, scope: !7952)
!8000 = distinct !{!8000, !7956, !8001}
!8001 = !DILocation(line: 2106, column: 5, scope: !7949)
!8002 = !DILocation(line: 2107, column: 4, scope: !7876)
!8003 = !DILocation(line: 2045, column: 34, scope: !7869)
!8004 = !DILocation(line: 2045, column: 4, scope: !7869)
!8005 = distinct !{!8005, !7873, !8006}
!8006 = !DILocation(line: 2107, column: 4, scope: !7866)
!8007 = !DILocation(line: 2108, column: 3, scope: !7771)
!8008 = !DILocation(line: 2020, column: 49, scope: !7766)
!8009 = !DILocation(line: 2020, column: 3, scope: !7766)
!8010 = distinct !{!8010, !7769, !8011}
!8011 = !DILocation(line: 2108, column: 3, scope: !7763)
!8012 = !DILocation(line: 2114, column: 4, scope: !8013)
!8013 = distinct !DILexicalBlock(scope: !7747, file: !3, line: 2113, column: 3)
!8014 = !DILocation(line: 2114, column: 14, scope: !8013)
!8015 = !DILocation(line: 2115, column: 4, scope: !8013)
!8016 = !DILocation(line: 2115, column: 14, scope: !8013)
!8017 = !DILocation(line: 2120, column: 26, scope: !6525)
!8018 = !DILocation(line: 2120, column: 13, scope: !6525)
!8019 = !DILocation(line: 2120, column: 11, scope: !6525)
!8020 = !DILocation(line: 2121, column: 26, scope: !6525)
!8021 = !DILocation(line: 2121, column: 13, scope: !6525)
!8022 = !DILocation(line: 2121, column: 11, scope: !6525)
!8023 = !DILocation(line: 2122, column: 14, scope: !6525)
!8024 = !DILocation(line: 2122, column: 23, scope: !6525)
!8025 = !DILocation(line: 2122, column: 12, scope: !6525)
!8026 = !DILocation(line: 2127, column: 9, scope: !8027)
!8027 = distinct !DILexicalBlock(scope: !6525, file: !3, line: 2127, column: 2)
!8028 = !DILocation(line: 2127, column: 7, scope: !8027)
!8029 = !DILocation(line: 2127, column: 14, scope: !8030)
!8030 = distinct !DILexicalBlock(scope: !8027, file: !3, line: 2127, column: 2)
!8031 = !DILocation(line: 2127, column: 18, scope: !8030)
!8032 = !DILocation(line: 2127, column: 16, scope: !8030)
!8033 = !DILocation(line: 2127, column: 2, scope: !8027)
!8034 = !DILocalVariable(name: "e", scope: !8035, file: !3, line: 2128, type: !84)
!8035 = distinct !DILexicalBlock(scope: !8030, file: !3, line: 2127, column: 37)
!8036 = !DILocation(line: 2128, column: 12, scope: !8035)
!8037 = !DILocation(line: 2128, column: 16, scope: !8035)
!8038 = !DILocation(line: 2128, column: 26, scope: !8035)
!8039 = !DILocation(line: 2129, column: 16, scope: !8035)
!8040 = !DILocation(line: 2129, column: 43, scope: !8035)
!8041 = !DILocation(line: 2129, column: 71, scope: !8035)
!8042 = !DILocation(line: 2129, column: 3, scope: !8035)
!8043 = !DILocation(line: 2130, column: 16, scope: !8035)
!8044 = !DILocation(line: 2130, column: 54, scope: !8035)
!8045 = !DILocation(line: 2130, column: 82, scope: !8035)
!8046 = !DILocation(line: 2130, column: 3, scope: !8035)
!8047 = !DILocation(line: 2131, column: 2, scope: !8035)
!8048 = !DILocation(line: 2127, column: 33, scope: !8030)
!8049 = !DILocation(line: 2127, column: 2, scope: !8030)
!8050 = distinct !{!8050, !8033, !8051}
!8051 = !DILocation(line: 2131, column: 2, scope: !8027)
!8052 = !DILocation(line: 2136, column: 9, scope: !8053)
!8053 = distinct !DILexicalBlock(scope: !6525, file: !3, line: 2136, column: 2)
!8054 = !DILocation(line: 2136, column: 7, scope: !8053)
!8055 = !DILocation(line: 2136, column: 14, scope: !8056)
!8056 = distinct !DILexicalBlock(scope: !8053, file: !3, line: 2136, column: 2)
!8057 = !DILocation(line: 2136, column: 18, scope: !8056)
!8058 = !DILocation(line: 2136, column: 16, scope: !8056)
!8059 = !DILocation(line: 2136, column: 2, scope: !8053)
!8060 = !DILocalVariable(name: "f", scope: !8061, file: !3, line: 2137, type: !97)
!8061 = distinct !DILexicalBlock(scope: !8056, file: !3, line: 2136, column: 37)
!8062 = !DILocation(line: 2137, column: 12, scope: !8061)
!8063 = !DILocation(line: 2137, column: 16, scope: !8061)
!8064 = !DILocation(line: 2137, column: 26, scope: !8061)
!8065 = !DILocalVariable(name: "S", scope: !8061, file: !3, line: 2138, type: !17)
!8066 = !DILocation(line: 2138, column: 7, scope: !8061)
!8067 = !DILocalVariable(name: "x", scope: !8061, file: !3, line: 2138, type: !17)
!8068 = !DILocation(line: 2138, column: 10, scope: !8061)
!8069 = !DILocation(line: 2140, column: 10, scope: !8070)
!8070 = distinct !DILexicalBlock(scope: !8061, file: !3, line: 2140, column: 3)
!8071 = !DILocation(line: 2140, column: 8, scope: !8070)
!8072 = !DILocation(line: 2140, column: 15, scope: !8073)
!8073 = distinct !DILexicalBlock(scope: !8070, file: !3, line: 2140, column: 3)
!8074 = !DILocation(line: 2140, column: 19, scope: !8073)
!8075 = !DILocation(line: 2140, column: 22, scope: !8073)
!8076 = !DILocation(line: 2140, column: 17, scope: !8073)
!8077 = !DILocation(line: 2140, column: 3, scope: !8070)
!8078 = !DILocalVariable(name: "e", scope: !8079, file: !3, line: 2141, type: !84)
!8079 = distinct !DILexicalBlock(scope: !8073, file: !3, line: 2140, column: 37)
!8080 = !DILocation(line: 2141, column: 13, scope: !8079)
!8081 = !DILocation(line: 2141, column: 31, scope: !8079)
!8082 = !DILocation(line: 2141, column: 17, scope: !8079)
!8083 = !DILocation(line: 2141, column: 34, scope: !8079)
!8084 = !DILocalVariable(name: "prevE", scope: !8079, file: !3, line: 2142, type: !84)
!8085 = !DILocation(line: 2142, column: 13, scope: !8079)
!8086 = !DILocation(line: 2142, column: 35, scope: !8079)
!8087 = !DILocation(line: 2142, column: 21, scope: !8079)
!8088 = !DILocation(line: 2142, column: 39, scope: !8079)
!8089 = !DILocation(line: 2142, column: 43, scope: !8079)
!8090 = !DILocation(line: 2142, column: 46, scope: !8079)
!8091 = !DILocation(line: 2142, column: 41, scope: !8079)
!8092 = !DILocation(line: 2142, column: 55, scope: !8079)
!8093 = !DILocation(line: 2142, column: 62, scope: !8079)
!8094 = !DILocation(line: 2142, column: 65, scope: !8079)
!8095 = !DILocation(line: 2142, column: 60, scope: !8079)
!8096 = !DILocation(line: 2144, column: 17, scope: !8079)
!8097 = !DILocation(line: 2144, column: 80, scope: !8079)
!8098 = !DILocation(line: 2144, column: 61, scope: !8079)
!8099 = !DILocation(line: 2144, column: 52, scope: !8079)
!8100 = !DILocation(line: 2144, column: 84, scope: !8079)
!8101 = !DILocation(line: 2144, column: 4, scope: !8079)
!8102 = !DILocation(line: 2145, column: 17, scope: !8079)
!8103 = !DILocation(line: 2145, column: 77, scope: !8079)
!8104 = !DILocation(line: 2145, column: 58, scope: !8079)
!8105 = !DILocation(line: 2145, column: 49, scope: !8079)
!8106 = !DILocation(line: 2145, column: 81, scope: !8079)
!8107 = !DILocation(line: 2145, column: 4, scope: !8079)
!8108 = !DILocation(line: 2146, column: 17, scope: !8079)
!8109 = !DILocation(line: 2146, column: 68, scope: !8079)
!8110 = !DILocation(line: 2146, column: 110, scope: !8079)
!8111 = !DILocation(line: 2146, column: 4, scope: !8079)
!8112 = !DILocation(line: 2147, column: 17, scope: !8079)
!8113 = !DILocation(line: 2147, column: 57, scope: !8079)
!8114 = !DILocation(line: 2147, column: 110, scope: !8079)
!8115 = !DILocation(line: 2147, column: 4, scope: !8079)
!8116 = !DILocation(line: 2148, column: 11, scope: !8117)
!8117 = distinct !DILexicalBlock(scope: !8079, file: !3, line: 2148, column: 4)
!8118 = !DILocation(line: 2148, column: 9, scope: !8117)
!8119 = !DILocation(line: 2148, column: 16, scope: !8120)
!8120 = distinct !DILexicalBlock(scope: !8117, file: !3, line: 2148, column: 4)
!8121 = !DILocation(line: 2148, column: 20, scope: !8120)
!8122 = !DILocation(line: 2148, column: 29, scope: !8120)
!8123 = !DILocation(line: 2148, column: 18, scope: !8120)
!8124 = !DILocation(line: 2148, column: 4, scope: !8117)
!8125 = !DILocalVariable(name: "co", scope: !8126, file: !3, line: 2149, type: !68)
!8126 = distinct !DILexicalBlock(scope: !8120, file: !3, line: 2148, column: 39)
!8127 = !DILocation(line: 2149, column: 12, scope: !8126)
!8128 = !DILocation(line: 2149, column: 17, scope: !8126)
!8129 = !DILocation(line: 2150, column: 18, scope: !8126)
!8130 = !DILocation(line: 2150, column: 53, scope: !8126)
!8131 = !DILocation(line: 2150, column: 57, scope: !8126)
!8132 = !DILocation(line: 2150, column: 5, scope: !8126)
!8133 = !DILocation(line: 2151, column: 18, scope: !8126)
!8134 = !DILocation(line: 2151, column: 73, scope: !8126)
!8135 = !DILocation(line: 2151, column: 77, scope: !8126)
!8136 = !DILocation(line: 2151, column: 5, scope: !8126)
!8137 = !DILocation(line: 2152, column: 4, scope: !8126)
!8138 = !DILocation(line: 2148, column: 35, scope: !8120)
!8139 = !DILocation(line: 2148, column: 4, scope: !8120)
!8140 = distinct !{!8140, !8124, !8141}
!8141 = !DILocation(line: 2152, column: 4, scope: !8117)
!8142 = !DILocation(line: 2153, column: 11, scope: !8143)
!8143 = distinct !DILexicalBlock(scope: !8079, file: !3, line: 2153, column: 4)
!8144 = !DILocation(line: 2153, column: 9, scope: !8143)
!8145 = !DILocation(line: 2153, column: 16, scope: !8146)
!8146 = distinct !DILexicalBlock(scope: !8143, file: !3, line: 2153, column: 4)
!8147 = !DILocation(line: 2153, column: 20, scope: !8146)
!8148 = !DILocation(line: 2153, column: 29, scope: !8146)
!8149 = !DILocation(line: 2153, column: 18, scope: !8146)
!8150 = !DILocation(line: 2153, column: 4, scope: !8143)
!8151 = !DILocalVariable(name: "eI", scope: !8152, file: !3, line: 2154, type: !17)
!8152 = distinct !DILexicalBlock(scope: !8146, file: !3, line: 2153, column: 39)
!8153 = !DILocation(line: 2154, column: 9, scope: !8152)
!8154 = !DILocation(line: 2154, column: 14, scope: !8152)
!8155 = !DILocation(line: 2154, column: 23, scope: !8152)
!8156 = !DILocation(line: 2154, column: 29, scope: !8152)
!8157 = !DILocation(line: 2154, column: 27, scope: !8152)
!8158 = !DILocation(line: 2155, column: 18, scope: !8152)
!8159 = !DILocation(line: 2155, column: 77, scope: !8152)
!8160 = !DILocation(line: 2155, column: 94, scope: !8152)
!8161 = !DILocation(line: 2155, column: 80, scope: !8152)
!8162 = !DILocation(line: 2155, column: 97, scope: !8152)
!8163 = !DILocation(line: 2155, column: 101, scope: !8152)
!8164 = !DILocation(line: 2155, column: 110, scope: !8152)
!8165 = !DILocation(line: 2155, column: 114, scope: !8152)
!8166 = !DILocation(line: 2155, column: 61, scope: !8152)
!8167 = !DILocation(line: 2155, column: 129, scope: !8152)
!8168 = !DILocation(line: 2155, column: 5, scope: !8152)
!8169 = !DILocation(line: 2156, column: 18, scope: !8152)
!8170 = !DILocation(line: 2156, column: 77, scope: !8152)
!8171 = !DILocation(line: 2156, column: 98, scope: !8152)
!8172 = !DILocation(line: 2156, column: 84, scope: !8152)
!8173 = !DILocation(line: 2156, column: 101, scope: !8152)
!8174 = !DILocation(line: 2156, column: 105, scope: !8152)
!8175 = !DILocation(line: 2156, column: 114, scope: !8152)
!8176 = !DILocation(line: 2156, column: 118, scope: !8152)
!8177 = !DILocation(line: 2156, column: 61, scope: !8152)
!8178 = !DILocation(line: 2156, column: 133, scope: !8152)
!8179 = !DILocation(line: 2156, column: 5, scope: !8152)
!8180 = !DILocation(line: 2157, column: 4, scope: !8152)
!8181 = !DILocation(line: 2153, column: 35, scope: !8146)
!8182 = !DILocation(line: 2153, column: 4, scope: !8146)
!8183 = distinct !{!8183, !8150, !8184}
!8184 = !DILocation(line: 2157, column: 4, scope: !8143)
!8185 = !DILocation(line: 2158, column: 3, scope: !8079)
!8186 = !DILocation(line: 2140, column: 33, scope: !8073)
!8187 = !DILocation(line: 2140, column: 3, scope: !8073)
!8188 = distinct !{!8188, !8077, !8189}
!8189 = !DILocation(line: 2158, column: 3, scope: !8070)
!8190 = !DILocation(line: 2159, column: 2, scope: !8061)
!8191 = !DILocation(line: 2136, column: 33, scope: !8056)
!8192 = !DILocation(line: 2136, column: 2, scope: !8056)
!8193 = distinct !{!8193, !8059, !8194}
!8194 = !DILocation(line: 2159, column: 2, scope: !8053)
!8195 = !DILocation(line: 2160, column: 1, scope: !6525)
!8196 = distinct !DISubprogram(name: "ccgSubSurf_getNumVerts", scope: !3, file: !3, line: 2809, type: !8197, scopeLine: 2810, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, retainedNodes: !151)
!8197 = !DISubroutineType(types: !8198)
!8198 = !{!17, !1589}
!8199 = !DILocalVariable(name: "ss", arg: 1, scope: !8196, file: !3, line: 2809, type: !1589)
!8200 = !DILocation(line: 2809, column: 46, scope: !8196)
!8201 = !DILocation(line: 2811, column: 9, scope: !8196)
!8202 = !DILocation(line: 2811, column: 13, scope: !8196)
!8203 = !DILocation(line: 2811, column: 19, scope: !8196)
!8204 = !DILocation(line: 2811, column: 2, scope: !8196)
!8205 = distinct !DISubprogram(name: "ccgSubSurf_getNumEdges", scope: !3, file: !3, line: 2813, type: !8197, scopeLine: 2814, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, retainedNodes: !151)
!8206 = !DILocalVariable(name: "ss", arg: 1, scope: !8205, file: !3, line: 2813, type: !1589)
!8207 = !DILocation(line: 2813, column: 46, scope: !8205)
!8208 = !DILocation(line: 2815, column: 9, scope: !8205)
!8209 = !DILocation(line: 2815, column: 13, scope: !8205)
!8210 = !DILocation(line: 2815, column: 19, scope: !8205)
!8211 = !DILocation(line: 2815, column: 2, scope: !8205)
!8212 = distinct !DISubprogram(name: "ccgSubSurf_getNumFaces", scope: !3, file: !3, line: 2817, type: !8197, scopeLine: 2818, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, retainedNodes: !151)
!8213 = !DILocalVariable(name: "ss", arg: 1, scope: !8212, file: !3, line: 2817, type: !1589)
!8214 = !DILocation(line: 2817, column: 46, scope: !8212)
!8215 = !DILocation(line: 2819, column: 9, scope: !8212)
!8216 = !DILocation(line: 2819, column: 13, scope: !8212)
!8217 = !DILocation(line: 2819, column: 19, scope: !8212)
!8218 = !DILocation(line: 2819, column: 2, scope: !8212)
!8219 = distinct !DISubprogram(name: "ccgSubSurf_getVert", scope: !3, file: !3, line: 2822, type: !8220, scopeLine: 2823, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, retainedNodes: !151)
!8220 = !DISubroutineType(types: !8221)
!8221 = !{!70, !187, !76}
!8222 = !DILocalVariable(name: "ss", arg: 1, scope: !8219, file: !3, line: 2822, type: !187)
!8223 = !DILocation(line: 2822, column: 41, scope: !8219)
!8224 = !DILocalVariable(name: "v", arg: 2, scope: !8219, file: !3, line: 2822, type: !76)
!8225 = !DILocation(line: 2822, column: 56, scope: !8219)
!8226 = !DILocation(line: 2824, column: 35, scope: !8219)
!8227 = !DILocation(line: 2824, column: 39, scope: !8219)
!8228 = !DILocation(line: 2824, column: 45, scope: !8219)
!8229 = !DILocation(line: 2824, column: 21, scope: !8219)
!8230 = !DILocation(line: 2824, column: 9, scope: !8219)
!8231 = !DILocation(line: 2824, column: 2, scope: !8219)
!8232 = distinct !DISubprogram(name: "ccgSubSurf_getEdge", scope: !3, file: !3, line: 2826, type: !8233, scopeLine: 2827, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, retainedNodes: !151)
!8233 = !DISubroutineType(types: !8234)
!8234 = !{!84, !187, !67}
!8235 = !DILocalVariable(name: "ss", arg: 1, scope: !8232, file: !3, line: 2826, type: !187)
!8236 = !DILocation(line: 2826, column: 41, scope: !8232)
!8237 = !DILocalVariable(name: "e", arg: 2, scope: !8232, file: !3, line: 2826, type: !67)
!8238 = !DILocation(line: 2826, column: 56, scope: !8232)
!8239 = !DILocation(line: 2828, column: 35, scope: !8232)
!8240 = !DILocation(line: 2828, column: 39, scope: !8232)
!8241 = !DILocation(line: 2828, column: 45, scope: !8232)
!8242 = !DILocation(line: 2828, column: 21, scope: !8232)
!8243 = !DILocation(line: 2828, column: 9, scope: !8232)
!8244 = !DILocation(line: 2828, column: 2, scope: !8232)
!8245 = distinct !DISubprogram(name: "ccgSubSurf_getFace", scope: !3, file: !3, line: 2830, type: !8246, scopeLine: 2831, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, retainedNodes: !151)
!8246 = !DISubroutineType(types: !8247)
!8247 = !{!97, !187, !103}
!8248 = !DILocalVariable(name: "ss", arg: 1, scope: !8245, file: !3, line: 2830, type: !187)
!8249 = !DILocation(line: 2830, column: 41, scope: !8245)
!8250 = !DILocalVariable(name: "f", arg: 2, scope: !8245, file: !3, line: 2830, type: !103)
!8251 = !DILocation(line: 2830, column: 56, scope: !8245)
!8252 = !DILocation(line: 2832, column: 35, scope: !8245)
!8253 = !DILocation(line: 2832, column: 39, scope: !8245)
!8254 = !DILocation(line: 2832, column: 45, scope: !8245)
!8255 = !DILocation(line: 2832, column: 21, scope: !8245)
!8256 = !DILocation(line: 2832, column: 9, scope: !8245)
!8257 = !DILocation(line: 2832, column: 2, scope: !8245)
!8258 = distinct !DISubprogram(name: "ccgSubSurf_getSubdivisionLevels", scope: !3, file: !3, line: 2835, type: !8197, scopeLine: 2836, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, retainedNodes: !151)
!8259 = !DILocalVariable(name: "ss", arg: 1, scope: !8258, file: !3, line: 2835, type: !1589)
!8260 = !DILocation(line: 2835, column: 55, scope: !8258)
!8261 = !DILocation(line: 2837, column: 9, scope: !8258)
!8262 = !DILocation(line: 2837, column: 13, scope: !8258)
!8263 = !DILocation(line: 2837, column: 2, scope: !8258)
!8264 = distinct !DISubprogram(name: "ccgSubSurf_getEdgeSize", scope: !3, file: !3, line: 2839, type: !8197, scopeLine: 2840, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, retainedNodes: !151)
!8265 = !DILocalVariable(name: "ss", arg: 1, scope: !8264, file: !3, line: 2839, type: !1589)
!8266 = !DILocation(line: 2839, column: 46, scope: !8264)
!8267 = !DILocation(line: 2841, column: 37, scope: !8264)
!8268 = !DILocation(line: 2841, column: 41, scope: !8264)
!8269 = !DILocation(line: 2841, column: 45, scope: !8264)
!8270 = !DILocation(line: 2841, column: 9, scope: !8264)
!8271 = !DILocation(line: 2841, column: 2, scope: !8264)
!8272 = distinct !DISubprogram(name: "ccgSubSurf_getEdgeLevelSize", scope: !3, file: !3, line: 2843, type: !8273, scopeLine: 2844, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, retainedNodes: !151)
!8273 = !DISubroutineType(types: !8274)
!8274 = !{!17, !1589, !17}
!8275 = !DILocalVariable(name: "ss", arg: 1, scope: !8272, file: !3, line: 2843, type: !1589)
!8276 = !DILocation(line: 2843, column: 51, scope: !8272)
!8277 = !DILocalVariable(name: "level", arg: 2, scope: !8272, file: !3, line: 2843, type: !17)
!8278 = !DILocation(line: 2843, column: 59, scope: !8272)
!8279 = !DILocation(line: 2845, column: 6, scope: !8280)
!8280 = distinct !DILexicalBlock(scope: !8272, file: !3, line: 2845, column: 6)
!8281 = !DILocation(line: 2845, column: 12, scope: !8280)
!8282 = !DILocation(line: 2845, column: 16, scope: !8280)
!8283 = !DILocation(line: 2845, column: 19, scope: !8280)
!8284 = !DILocation(line: 2845, column: 27, scope: !8280)
!8285 = !DILocation(line: 2845, column: 31, scope: !8280)
!8286 = !DILocation(line: 2845, column: 25, scope: !8280)
!8287 = !DILocation(line: 2845, column: 6, scope: !8272)
!8288 = !DILocation(line: 2846, column: 3, scope: !8289)
!8289 = distinct !DILexicalBlock(scope: !8280, file: !3, line: 2845, column: 45)
!8290 = !DILocation(line: 2849, column: 23, scope: !8291)
!8291 = distinct !DILexicalBlock(scope: !8280, file: !3, line: 2848, column: 7)
!8292 = !DILocation(line: 2849, column: 10, scope: !8291)
!8293 = !DILocation(line: 2849, column: 3, scope: !8291)
!8294 = !DILocation(line: 2851, column: 1, scope: !8272)
!8295 = distinct !DISubprogram(name: "ccgSubSurf_getGridSize", scope: !3, file: !3, line: 2852, type: !8197, scopeLine: 2853, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, retainedNodes: !151)
!8296 = !DILocalVariable(name: "ss", arg: 1, scope: !8295, file: !3, line: 2852, type: !1589)
!8297 = !DILocation(line: 2852, column: 46, scope: !8295)
!8298 = !DILocation(line: 2854, column: 37, scope: !8295)
!8299 = !DILocation(line: 2854, column: 41, scope: !8295)
!8300 = !DILocation(line: 2854, column: 45, scope: !8295)
!8301 = !DILocation(line: 2854, column: 9, scope: !8295)
!8302 = !DILocation(line: 2854, column: 2, scope: !8295)
!8303 = distinct !DISubprogram(name: "ccgSubSurf_getGridLevelSize", scope: !3, file: !3, line: 2856, type: !8273, scopeLine: 2857, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, retainedNodes: !151)
!8304 = !DILocalVariable(name: "ss", arg: 1, scope: !8303, file: !3, line: 2856, type: !1589)
!8305 = !DILocation(line: 2856, column: 51, scope: !8303)
!8306 = !DILocalVariable(name: "level", arg: 2, scope: !8303, file: !3, line: 2856, type: !17)
!8307 = !DILocation(line: 2856, column: 59, scope: !8303)
!8308 = !DILocation(line: 2858, column: 6, scope: !8309)
!8309 = distinct !DILexicalBlock(scope: !8303, file: !3, line: 2858, column: 6)
!8310 = !DILocation(line: 2858, column: 12, scope: !8309)
!8311 = !DILocation(line: 2858, column: 16, scope: !8309)
!8312 = !DILocation(line: 2858, column: 19, scope: !8309)
!8313 = !DILocation(line: 2858, column: 27, scope: !8309)
!8314 = !DILocation(line: 2858, column: 31, scope: !8309)
!8315 = !DILocation(line: 2858, column: 25, scope: !8309)
!8316 = !DILocation(line: 2858, column: 6, scope: !8303)
!8317 = !DILocation(line: 2859, column: 3, scope: !8318)
!8318 = distinct !DILexicalBlock(scope: !8309, file: !3, line: 2858, column: 45)
!8319 = !DILocation(line: 2862, column: 23, scope: !8320)
!8320 = distinct !DILexicalBlock(scope: !8309, file: !3, line: 2861, column: 7)
!8321 = !DILocation(line: 2862, column: 10, scope: !8320)
!8322 = !DILocation(line: 2862, column: 3, scope: !8320)
!8323 = !DILocation(line: 2864, column: 1, scope: !8303)
!8324 = distinct !DISubprogram(name: "ccgSubSurf_getSimpleSubdiv", scope: !3, file: !3, line: 2866, type: !8197, scopeLine: 2867, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, retainedNodes: !151)
!8325 = !DILocalVariable(name: "ss", arg: 1, scope: !8324, file: !3, line: 2866, type: !1589)
!8326 = !DILocation(line: 2866, column: 50, scope: !8324)
!8327 = !DILocation(line: 2868, column: 9, scope: !8324)
!8328 = !DILocation(line: 2868, column: 13, scope: !8324)
!8329 = !DILocation(line: 2868, column: 21, scope: !8324)
!8330 = !DILocation(line: 2868, column: 2, scope: !8324)
!8331 = distinct !DISubprogram(name: "ccgSubSurf_getVertVertHandle", scope: !3, file: !3, line: 2873, type: !8332, scopeLine: 2874, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, retainedNodes: !151)
!8332 = !DISubroutineType(types: !8333)
!8333 = !{!76, !70}
!8334 = !DILocalVariable(name: "v", arg: 1, scope: !8331, file: !3, line: 2873, type: !70)
!8335 = !DILocation(line: 2873, column: 50, scope: !8331)
!8336 = !DILocation(line: 2875, column: 9, scope: !8331)
!8337 = !DILocation(line: 2875, column: 12, scope: !8331)
!8338 = !DILocation(line: 2875, column: 2, scope: !8331)
!8339 = distinct !DISubprogram(name: "ccgSubSurf_getVertAge", scope: !3, file: !3, line: 2877, type: !8340, scopeLine: 2878, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, retainedNodes: !151)
!8340 = !DISubroutineType(types: !8341)
!8341 = !{!17, !187, !70}
!8342 = !DILocalVariable(name: "ss", arg: 1, scope: !8339, file: !3, line: 2877, type: !187)
!8343 = !DILocation(line: 2877, column: 39, scope: !8339)
!8344 = !DILocalVariable(name: "v", arg: 2, scope: !8339, file: !3, line: 2877, type: !70)
!8345 = !DILocation(line: 2877, column: 52, scope: !8339)
!8346 = !DILocation(line: 2879, column: 6, scope: !8347)
!8347 = distinct !DILexicalBlock(scope: !8339, file: !3, line: 2879, column: 6)
!8348 = !DILocation(line: 2879, column: 10, scope: !8347)
!8349 = !DILocation(line: 2879, column: 6, scope: !8339)
!8350 = !DILocalVariable(name: "userData", scope: !8351, file: !3, line: 2880, type: !142)
!8351 = distinct !DILexicalBlock(scope: !8347, file: !3, line: 2879, column: 24)
!8352 = !DILocation(line: 2880, column: 9, scope: !8351)
!8353 = !DILocation(line: 2880, column: 47, scope: !8351)
!8354 = !DILocation(line: 2880, column: 51, scope: !8351)
!8355 = !DILocation(line: 2880, column: 20, scope: !8351)
!8356 = !DILocation(line: 2881, column: 10, scope: !8351)
!8357 = !DILocation(line: 2881, column: 14, scope: !8351)
!8358 = !DILocation(line: 2881, column: 38, scope: !8351)
!8359 = !DILocation(line: 2881, column: 47, scope: !8351)
!8360 = !DILocation(line: 2881, column: 51, scope: !8351)
!8361 = !DILocation(line: 2881, column: 27, scope: !8351)
!8362 = !DILocation(line: 2881, column: 25, scope: !8351)
!8363 = !DILocation(line: 2881, column: 3, scope: !8351)
!8364 = !DILocation(line: 2884, column: 3, scope: !8365)
!8365 = distinct !DILexicalBlock(scope: !8347, file: !3, line: 2883, column: 7)
!8366 = !DILocation(line: 2886, column: 1, scope: !8339)
!8367 = distinct !DISubprogram(name: "ccgSubSurf_getVertUserData", scope: !3, file: !3, line: 2887, type: !8368, scopeLine: 2888, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, retainedNodes: !151)
!8368 = !DISubroutineType(types: !8369)
!8369 = !{!15, !187, !70}
!8370 = !DILocalVariable(name: "ss", arg: 1, scope: !8367, file: !3, line: 2887, type: !187)
!8371 = !DILocation(line: 2887, column: 46, scope: !8367)
!8372 = !DILocalVariable(name: "v", arg: 2, scope: !8367, file: !3, line: 2887, type: !70)
!8373 = !DILocation(line: 2887, column: 59, scope: !8367)
!8374 = !DILocation(line: 2889, column: 27, scope: !8367)
!8375 = !DILocation(line: 2889, column: 9, scope: !8367)
!8376 = !DILocation(line: 2889, column: 32, scope: !8367)
!8377 = !DILocation(line: 2889, column: 36, scope: !8367)
!8378 = !DILocation(line: 2889, column: 44, scope: !8367)
!8379 = !DILocation(line: 2889, column: 60, scope: !8367)
!8380 = !DILocation(line: 2889, column: 64, scope: !8367)
!8381 = !DILocation(line: 2889, column: 77, scope: !8367)
!8382 = !DILocation(line: 2889, column: 57, scope: !8367)
!8383 = !DILocation(line: 2889, column: 30, scope: !8367)
!8384 = !DILocation(line: 2889, column: 2, scope: !8367)
!8385 = distinct !DISubprogram(name: "VERT_getLevelData", scope: !3, file: !3, line: 345, type: !8386, scopeLine: 346, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !30, retainedNodes: !151)
!8386 = !DISubroutineType(types: !8387)
!8387 = !{!142, !70}
!8388 = !DILocalVariable(name: "v", arg: 1, scope: !8385, file: !3, line: 345, type: !70)
!8389 = !DILocation(line: 345, column: 45, scope: !8385)
!8390 = !DILocation(line: 347, column: 20, scope: !8385)
!8391 = !DILocation(line: 347, column: 19, scope: !8385)
!8392 = !DILocation(line: 347, column: 9, scope: !8385)
!8393 = !DILocation(line: 347, column: 2, scope: !8385)
!8394 = distinct !DISubprogram(name: "ccgSubSurf_getVertNumFaces", scope: !3, file: !3, line: 2891, type: !8395, scopeLine: 2892, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, retainedNodes: !151)
!8395 = !DISubroutineType(types: !8396)
!8396 = !{!17, !70}
!8397 = !DILocalVariable(name: "v", arg: 1, scope: !8394, file: !3, line: 2891, type: !70)
!8398 = !DILocation(line: 2891, column: 41, scope: !8394)
!8399 = !DILocation(line: 2893, column: 9, scope: !8394)
!8400 = !DILocation(line: 2893, column: 12, scope: !8394)
!8401 = !DILocation(line: 2893, column: 2, scope: !8394)
!8402 = distinct !DISubprogram(name: "ccgSubSurf_getVertFace", scope: !3, file: !3, line: 2895, type: !8403, scopeLine: 2896, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, retainedNodes: !151)
!8403 = !DISubroutineType(types: !8404)
!8404 = !{!97, !70, !17}
!8405 = !DILocalVariable(name: "v", arg: 1, scope: !8402, file: !3, line: 2895, type: !70)
!8406 = !DILocation(line: 2895, column: 42, scope: !8402)
!8407 = !DILocalVariable(name: "index", arg: 2, scope: !8402, file: !3, line: 2895, type: !17)
!8408 = !DILocation(line: 2895, column: 49, scope: !8402)
!8409 = !DILocation(line: 2897, column: 6, scope: !8410)
!8410 = distinct !DILexicalBlock(scope: !8402, file: !3, line: 2897, column: 6)
!8411 = !DILocation(line: 2897, column: 12, scope: !8410)
!8412 = !DILocation(line: 2897, column: 16, scope: !8410)
!8413 = !DILocation(line: 2897, column: 19, scope: !8410)
!8414 = !DILocation(line: 2897, column: 28, scope: !8410)
!8415 = !DILocation(line: 2897, column: 31, scope: !8410)
!8416 = !DILocation(line: 2897, column: 25, scope: !8410)
!8417 = !DILocation(line: 2897, column: 6, scope: !8402)
!8418 = !DILocation(line: 2898, column: 3, scope: !8419)
!8419 = distinct !DILexicalBlock(scope: !8410, file: !3, line: 2897, column: 41)
!8420 = !DILocation(line: 2901, column: 10, scope: !8421)
!8421 = distinct !DILexicalBlock(scope: !8410, file: !3, line: 2900, column: 7)
!8422 = !DILocation(line: 2901, column: 13, scope: !8421)
!8423 = !DILocation(line: 2901, column: 19, scope: !8421)
!8424 = !DILocation(line: 2901, column: 3, scope: !8421)
!8425 = !DILocation(line: 2903, column: 1, scope: !8402)
!8426 = distinct !DISubprogram(name: "ccgSubSurf_getVertNumEdges", scope: !3, file: !3, line: 2904, type: !8395, scopeLine: 2905, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, retainedNodes: !151)
!8427 = !DILocalVariable(name: "v", arg: 1, scope: !8426, file: !3, line: 2904, type: !70)
!8428 = !DILocation(line: 2904, column: 41, scope: !8426)
!8429 = !DILocation(line: 2906, column: 9, scope: !8426)
!8430 = !DILocation(line: 2906, column: 12, scope: !8426)
!8431 = !DILocation(line: 2906, column: 2, scope: !8426)
!8432 = distinct !DISubprogram(name: "ccgSubSurf_getVertEdge", scope: !3, file: !3, line: 2908, type: !8433, scopeLine: 2909, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, retainedNodes: !151)
!8433 = !DISubroutineType(types: !8434)
!8434 = !{!84, !70, !17}
!8435 = !DILocalVariable(name: "v", arg: 1, scope: !8432, file: !3, line: 2908, type: !70)
!8436 = !DILocation(line: 2908, column: 42, scope: !8432)
!8437 = !DILocalVariable(name: "index", arg: 2, scope: !8432, file: !3, line: 2908, type: !17)
!8438 = !DILocation(line: 2908, column: 49, scope: !8432)
!8439 = !DILocation(line: 2910, column: 6, scope: !8440)
!8440 = distinct !DILexicalBlock(scope: !8432, file: !3, line: 2910, column: 6)
!8441 = !DILocation(line: 2910, column: 12, scope: !8440)
!8442 = !DILocation(line: 2910, column: 16, scope: !8440)
!8443 = !DILocation(line: 2910, column: 19, scope: !8440)
!8444 = !DILocation(line: 2910, column: 28, scope: !8440)
!8445 = !DILocation(line: 2910, column: 31, scope: !8440)
!8446 = !DILocation(line: 2910, column: 25, scope: !8440)
!8447 = !DILocation(line: 2910, column: 6, scope: !8432)
!8448 = !DILocation(line: 2911, column: 3, scope: !8449)
!8449 = distinct !DILexicalBlock(scope: !8440, file: !3, line: 2910, column: 41)
!8450 = !DILocation(line: 2914, column: 10, scope: !8451)
!8451 = distinct !DILexicalBlock(scope: !8440, file: !3, line: 2913, column: 7)
!8452 = !DILocation(line: 2914, column: 13, scope: !8451)
!8453 = !DILocation(line: 2914, column: 19, scope: !8451)
!8454 = !DILocation(line: 2914, column: 3, scope: !8451)
!8455 = !DILocation(line: 2916, column: 1, scope: !8432)
!8456 = distinct !DISubprogram(name: "ccgSubSurf_getVertData", scope: !3, file: !3, line: 2917, type: !8368, scopeLine: 2918, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, retainedNodes: !151)
!8457 = !DILocalVariable(name: "ss", arg: 1, scope: !8456, file: !3, line: 2917, type: !187)
!8458 = !DILocation(line: 2917, column: 42, scope: !8456)
!8459 = !DILocalVariable(name: "v", arg: 2, scope: !8456, file: !3, line: 2917, type: !70)
!8460 = !DILocation(line: 2917, column: 55, scope: !8456)
!8461 = !DILocation(line: 2919, column: 37, scope: !8456)
!8462 = !DILocation(line: 2919, column: 41, scope: !8456)
!8463 = !DILocation(line: 2919, column: 44, scope: !8456)
!8464 = !DILocation(line: 2919, column: 48, scope: !8456)
!8465 = !DILocation(line: 2919, column: 9, scope: !8456)
!8466 = !DILocation(line: 2919, column: 2, scope: !8456)
!8467 = distinct !DISubprogram(name: "ccgSubSurf_getVertLevelData", scope: !3, file: !3, line: 2921, type: !8468, scopeLine: 2922, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, retainedNodes: !151)
!8468 = !DISubroutineType(types: !8469)
!8469 = !{!15, !187, !70, !17}
!8470 = !DILocalVariable(name: "ss", arg: 1, scope: !8467, file: !3, line: 2921, type: !187)
!8471 = !DILocation(line: 2921, column: 47, scope: !8467)
!8472 = !DILocalVariable(name: "v", arg: 2, scope: !8467, file: !3, line: 2921, type: !70)
!8473 = !DILocation(line: 2921, column: 60, scope: !8467)
!8474 = !DILocalVariable(name: "level", arg: 3, scope: !8467, file: !3, line: 2921, type: !17)
!8475 = !DILocation(line: 2921, column: 67, scope: !8467)
!8476 = !DILocation(line: 2923, column: 6, scope: !8477)
!8477 = distinct !DILexicalBlock(scope: !8467, file: !3, line: 2923, column: 6)
!8478 = !DILocation(line: 2923, column: 12, scope: !8477)
!8479 = !DILocation(line: 2923, column: 16, scope: !8477)
!8480 = !DILocation(line: 2923, column: 19, scope: !8477)
!8481 = !DILocation(line: 2923, column: 27, scope: !8477)
!8482 = !DILocation(line: 2923, column: 31, scope: !8477)
!8483 = !DILocation(line: 2923, column: 25, scope: !8477)
!8484 = !DILocation(line: 2923, column: 6, scope: !8467)
!8485 = !DILocation(line: 2924, column: 3, scope: !8486)
!8486 = distinct !DILexicalBlock(scope: !8477, file: !3, line: 2923, column: 45)
!8487 = !DILocation(line: 2927, column: 22, scope: !8488)
!8488 = distinct !DILexicalBlock(scope: !8477, file: !3, line: 2926, column: 7)
!8489 = !DILocation(line: 2927, column: 25, scope: !8488)
!8490 = !DILocation(line: 2927, column: 32, scope: !8488)
!8491 = !DILocation(line: 2927, column: 36, scope: !8488)
!8492 = !DILocation(line: 2927, column: 44, scope: !8488)
!8493 = !DILocation(line: 2927, column: 10, scope: !8488)
!8494 = !DILocation(line: 2927, column: 3, scope: !8488)
!8495 = !DILocation(line: 2929, column: 1, scope: !8467)
!8496 = distinct !DISubprogram(name: "ccgSubSurf_getEdgeEdgeHandle", scope: !3, file: !3, line: 2933, type: !8497, scopeLine: 2934, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, retainedNodes: !151)
!8497 = !DISubroutineType(types: !8498)
!8498 = !{!67, !84}
!8499 = !DILocalVariable(name: "e", arg: 1, scope: !8496, file: !3, line: 2933, type: !84)
!8500 = !DILocation(line: 2933, column: 50, scope: !8496)
!8501 = !DILocation(line: 2935, column: 9, scope: !8496)
!8502 = !DILocation(line: 2935, column: 12, scope: !8496)
!8503 = !DILocation(line: 2935, column: 2, scope: !8496)
!8504 = distinct !DISubprogram(name: "ccgSubSurf_getEdgeAge", scope: !3, file: !3, line: 2937, type: !8505, scopeLine: 2938, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, retainedNodes: !151)
!8505 = !DISubroutineType(types: !8506)
!8506 = !{!17, !187, !84}
!8507 = !DILocalVariable(name: "ss", arg: 1, scope: !8504, file: !3, line: 2937, type: !187)
!8508 = !DILocation(line: 2937, column: 39, scope: !8504)
!8509 = !DILocalVariable(name: "e", arg: 2, scope: !8504, file: !3, line: 2937, type: !84)
!8510 = !DILocation(line: 2937, column: 52, scope: !8504)
!8511 = !DILocation(line: 2939, column: 6, scope: !8512)
!8512 = distinct !DILexicalBlock(scope: !8504, file: !3, line: 2939, column: 6)
!8513 = !DILocation(line: 2939, column: 10, scope: !8512)
!8514 = !DILocation(line: 2939, column: 6, scope: !8504)
!8515 = !DILocalVariable(name: "userData", scope: !8516, file: !3, line: 2940, type: !142)
!8516 = distinct !DILexicalBlock(scope: !8512, file: !3, line: 2939, column: 24)
!8517 = !DILocation(line: 2940, column: 9, scope: !8516)
!8518 = !DILocation(line: 2940, column: 47, scope: !8516)
!8519 = !DILocation(line: 2940, column: 51, scope: !8516)
!8520 = !DILocation(line: 2940, column: 20, scope: !8516)
!8521 = !DILocation(line: 2941, column: 10, scope: !8516)
!8522 = !DILocation(line: 2941, column: 14, scope: !8516)
!8523 = !DILocation(line: 2941, column: 38, scope: !8516)
!8524 = !DILocation(line: 2941, column: 47, scope: !8516)
!8525 = !DILocation(line: 2941, column: 51, scope: !8516)
!8526 = !DILocation(line: 2941, column: 27, scope: !8516)
!8527 = !DILocation(line: 2941, column: 25, scope: !8516)
!8528 = !DILocation(line: 2941, column: 3, scope: !8516)
!8529 = !DILocation(line: 2944, column: 3, scope: !8530)
!8530 = distinct !DILexicalBlock(scope: !8512, file: !3, line: 2943, column: 7)
!8531 = !DILocation(line: 2946, column: 1, scope: !8504)
!8532 = distinct !DISubprogram(name: "EDGE_getLevelData", scope: !3, file: !3, line: 364, type: !8533, scopeLine: 365, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !30, retainedNodes: !151)
!8533 = !DISubroutineType(types: !8534)
!8534 = !{!142, !84}
!8535 = !DILocalVariable(name: "e", arg: 1, scope: !8532, file: !3, line: 364, type: !84)
!8536 = !DILocation(line: 364, column: 45, scope: !8532)
!8537 = !DILocation(line: 366, column: 20, scope: !8532)
!8538 = !DILocation(line: 366, column: 19, scope: !8532)
!8539 = !DILocation(line: 366, column: 9, scope: !8532)
!8540 = !DILocation(line: 366, column: 2, scope: !8532)
!8541 = distinct !DISubprogram(name: "ccg_edgebase", scope: !3, file: !3, line: 289, type: !157, scopeLine: 290, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !30, retainedNodes: !151)
!8542 = !DILocalVariable(name: "level", arg: 1, scope: !8541, file: !3, line: 289, type: !17)
!8543 = !DILocation(line: 289, column: 33, scope: !8541)
!8544 = !DILocation(line: 294, column: 9, scope: !8541)
!8545 = !DILocation(line: 294, column: 23, scope: !8541)
!8546 = !DILocation(line: 294, column: 20, scope: !8541)
!8547 = !DILocation(line: 294, column: 15, scope: !8541)
!8548 = !DILocation(line: 294, column: 30, scope: !8541)
!8549 = !DILocation(line: 294, column: 2, scope: !8541)
!8550 = distinct !DISubprogram(name: "ccgSubSurf_getEdgeNumFaces", scope: !3, file: !3, line: 2952, type: !8551, scopeLine: 2953, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, retainedNodes: !151)
!8551 = !DISubroutineType(types: !8552)
!8552 = !{!17, !84}
!8553 = !DILocalVariable(name: "e", arg: 1, scope: !8550, file: !3, line: 2952, type: !84)
!8554 = !DILocation(line: 2952, column: 41, scope: !8550)
!8555 = !DILocation(line: 2954, column: 9, scope: !8550)
!8556 = !DILocation(line: 2954, column: 12, scope: !8550)
!8557 = !DILocation(line: 2954, column: 2, scope: !8550)
!8558 = distinct !DISubprogram(name: "ccgSubSurf_getEdgeFace", scope: !3, file: !3, line: 2956, type: !8559, scopeLine: 2957, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, retainedNodes: !151)
!8559 = !DISubroutineType(types: !8560)
!8560 = !{!97, !84, !17}
!8561 = !DILocalVariable(name: "e", arg: 1, scope: !8558, file: !3, line: 2956, type: !84)
!8562 = !DILocation(line: 2956, column: 42, scope: !8558)
!8563 = !DILocalVariable(name: "index", arg: 2, scope: !8558, file: !3, line: 2956, type: !17)
!8564 = !DILocation(line: 2956, column: 49, scope: !8558)
!8565 = !DILocation(line: 2958, column: 6, scope: !8566)
!8566 = distinct !DILexicalBlock(scope: !8558, file: !3, line: 2958, column: 6)
!8567 = !DILocation(line: 2958, column: 12, scope: !8566)
!8568 = !DILocation(line: 2958, column: 16, scope: !8566)
!8569 = !DILocation(line: 2958, column: 19, scope: !8566)
!8570 = !DILocation(line: 2958, column: 28, scope: !8566)
!8571 = !DILocation(line: 2958, column: 31, scope: !8566)
!8572 = !DILocation(line: 2958, column: 25, scope: !8566)
!8573 = !DILocation(line: 2958, column: 6, scope: !8558)
!8574 = !DILocation(line: 2959, column: 3, scope: !8575)
!8575 = distinct !DILexicalBlock(scope: !8566, file: !3, line: 2958, column: 41)
!8576 = !DILocation(line: 2962, column: 10, scope: !8577)
!8577 = distinct !DILexicalBlock(scope: !8566, file: !3, line: 2961, column: 7)
!8578 = !DILocation(line: 2962, column: 13, scope: !8577)
!8579 = !DILocation(line: 2962, column: 19, scope: !8577)
!8580 = !DILocation(line: 2962, column: 3, scope: !8577)
!8581 = !DILocation(line: 2964, column: 1, scope: !8558)
!8582 = distinct !DISubprogram(name: "ccgSubSurf_getEdgeVert0", scope: !3, file: !3, line: 2965, type: !8583, scopeLine: 2966, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, retainedNodes: !151)
!8583 = !DISubroutineType(types: !8584)
!8584 = !{!70, !84}
!8585 = !DILocalVariable(name: "e", arg: 1, scope: !8582, file: !3, line: 2965, type: !84)
!8586 = !DILocation(line: 2965, column: 43, scope: !8582)
!8587 = !DILocation(line: 2967, column: 9, scope: !8582)
!8588 = !DILocation(line: 2967, column: 12, scope: !8582)
!8589 = !DILocation(line: 2967, column: 2, scope: !8582)
!8590 = distinct !DISubprogram(name: "ccgSubSurf_getEdgeVert1", scope: !3, file: !3, line: 2969, type: !8583, scopeLine: 2970, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, retainedNodes: !151)
!8591 = !DILocalVariable(name: "e", arg: 1, scope: !8590, file: !3, line: 2969, type: !84)
!8592 = !DILocation(line: 2969, column: 43, scope: !8590)
!8593 = !DILocation(line: 2971, column: 9, scope: !8590)
!8594 = !DILocation(line: 2971, column: 12, scope: !8590)
!8595 = !DILocation(line: 2971, column: 2, scope: !8590)
!8596 = distinct !DISubprogram(name: "ccgSubSurf_getEdgeDataArray", scope: !3, file: !3, line: 2973, type: !2787, scopeLine: 2974, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, retainedNodes: !151)
!8597 = !DILocalVariable(name: "ss", arg: 1, scope: !8596, file: !3, line: 2973, type: !187)
!8598 = !DILocation(line: 2973, column: 47, scope: !8596)
!8599 = !DILocalVariable(name: "e", arg: 2, scope: !8596, file: !3, line: 2973, type: !84)
!8600 = !DILocation(line: 2973, column: 60, scope: !8596)
!8601 = !DILocation(line: 2975, column: 32, scope: !8596)
!8602 = !DILocation(line: 2975, column: 36, scope: !8596)
!8603 = !DILocation(line: 2975, column: 9, scope: !8596)
!8604 = !DILocation(line: 2975, column: 2, scope: !8596)
!8605 = distinct !DISubprogram(name: "ccgSubSurf_getEdgeData", scope: !3, file: !3, line: 2977, type: !8606, scopeLine: 2978, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, retainedNodes: !151)
!8606 = !DISubroutineType(types: !8607)
!8607 = !{!15, !187, !84, !17}
!8608 = !DILocalVariable(name: "ss", arg: 1, scope: !8605, file: !3, line: 2977, type: !187)
!8609 = !DILocation(line: 2977, column: 42, scope: !8605)
!8610 = !DILocalVariable(name: "e", arg: 2, scope: !8605, file: !3, line: 2977, type: !84)
!8611 = !DILocation(line: 2977, column: 55, scope: !8605)
!8612 = !DILocalVariable(name: "x", arg: 3, scope: !8605, file: !3, line: 2977, type: !17)
!8613 = !DILocation(line: 2977, column: 62, scope: !8605)
!8614 = !DILocation(line: 2979, column: 37, scope: !8605)
!8615 = !DILocation(line: 2979, column: 41, scope: !8605)
!8616 = !DILocation(line: 2979, column: 44, scope: !8605)
!8617 = !DILocation(line: 2979, column: 47, scope: !8605)
!8618 = !DILocation(line: 2979, column: 51, scope: !8605)
!8619 = !DILocation(line: 2979, column: 9, scope: !8605)
!8620 = !DILocation(line: 2979, column: 2, scope: !8605)
!8621 = distinct !DISubprogram(name: "ccgSubSurf_getEdgeLevelData", scope: !3, file: !3, line: 2981, type: !8622, scopeLine: 2982, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, retainedNodes: !151)
!8622 = !DISubroutineType(types: !8623)
!8623 = !{!15, !187, !84, !17, !17}
!8624 = !DILocalVariable(name: "ss", arg: 1, scope: !8621, file: !3, line: 2981, type: !187)
!8625 = !DILocation(line: 2981, column: 47, scope: !8621)
!8626 = !DILocalVariable(name: "e", arg: 2, scope: !8621, file: !3, line: 2981, type: !84)
!8627 = !DILocation(line: 2981, column: 60, scope: !8621)
!8628 = !DILocalVariable(name: "x", arg: 3, scope: !8621, file: !3, line: 2981, type: !17)
!8629 = !DILocation(line: 2981, column: 67, scope: !8621)
!8630 = !DILocalVariable(name: "level", arg: 4, scope: !8621, file: !3, line: 2981, type: !17)
!8631 = !DILocation(line: 2981, column: 74, scope: !8621)
!8632 = !DILocation(line: 2983, column: 6, scope: !8633)
!8633 = distinct !DILexicalBlock(scope: !8621, file: !3, line: 2983, column: 6)
!8634 = !DILocation(line: 2983, column: 12, scope: !8633)
!8635 = !DILocation(line: 2983, column: 16, scope: !8633)
!8636 = !DILocation(line: 2983, column: 19, scope: !8633)
!8637 = !DILocation(line: 2983, column: 27, scope: !8633)
!8638 = !DILocation(line: 2983, column: 31, scope: !8633)
!8639 = !DILocation(line: 2983, column: 25, scope: !8633)
!8640 = !DILocation(line: 2983, column: 6, scope: !8621)
!8641 = !DILocation(line: 2984, column: 3, scope: !8642)
!8642 = distinct !DILexicalBlock(scope: !8633, file: !3, line: 2983, column: 45)
!8643 = !DILocation(line: 2987, column: 22, scope: !8644)
!8644 = distinct !DILexicalBlock(scope: !8633, file: !3, line: 2986, column: 7)
!8645 = !DILocation(line: 2987, column: 25, scope: !8644)
!8646 = !DILocation(line: 2987, column: 32, scope: !8644)
!8647 = !DILocation(line: 2987, column: 35, scope: !8644)
!8648 = !DILocation(line: 2987, column: 39, scope: !8644)
!8649 = !DILocation(line: 2987, column: 47, scope: !8644)
!8650 = !DILocation(line: 2987, column: 10, scope: !8644)
!8651 = !DILocation(line: 2987, column: 3, scope: !8644)
!8652 = !DILocation(line: 2989, column: 1, scope: !8621)
!8653 = distinct !DISubprogram(name: "ccgSubSurf_getEdgeCrease", scope: !3, file: !3, line: 2990, type: !8654, scopeLine: 2991, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, retainedNodes: !151)
!8654 = !DISubroutineType(types: !8655)
!8655 = !{!69, !84}
!8656 = !DILocalVariable(name: "e", arg: 1, scope: !8653, file: !3, line: 2990, type: !84)
!8657 = !DILocation(line: 2990, column: 41, scope: !8653)
!8658 = !DILocation(line: 2992, column: 9, scope: !8653)
!8659 = !DILocation(line: 2992, column: 12, scope: !8653)
!8660 = !DILocation(line: 2992, column: 2, scope: !8653)
!8661 = distinct !DISubprogram(name: "ccgSubSurf_getFaceFaceHandle", scope: !3, file: !3, line: 2997, type: !8662, scopeLine: 2998, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, retainedNodes: !151)
!8662 = !DISubroutineType(types: !8663)
!8663 = !{!103, !97}
!8664 = !DILocalVariable(name: "f", arg: 1, scope: !8661, file: !3, line: 2997, type: !97)
!8665 = !DILocation(line: 2997, column: 50, scope: !8661)
!8666 = !DILocation(line: 2999, column: 9, scope: !8661)
!8667 = !DILocation(line: 2999, column: 12, scope: !8661)
!8668 = !DILocation(line: 2999, column: 2, scope: !8661)
!8669 = distinct !DISubprogram(name: "ccgSubSurf_getFaceAge", scope: !3, file: !3, line: 3001, type: !8670, scopeLine: 3002, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, retainedNodes: !151)
!8670 = !DISubroutineType(types: !8671)
!8671 = !{!17, !187, !97}
!8672 = !DILocalVariable(name: "ss", arg: 1, scope: !8669, file: !3, line: 3001, type: !187)
!8673 = !DILocation(line: 3001, column: 39, scope: !8669)
!8674 = !DILocalVariable(name: "f", arg: 2, scope: !8669, file: !3, line: 3001, type: !97)
!8675 = !DILocation(line: 3001, column: 52, scope: !8669)
!8676 = !DILocation(line: 3003, column: 6, scope: !8677)
!8677 = distinct !DILexicalBlock(scope: !8669, file: !3, line: 3003, column: 6)
!8678 = !DILocation(line: 3003, column: 10, scope: !8677)
!8679 = !DILocation(line: 3003, column: 6, scope: !8669)
!8680 = !DILocalVariable(name: "userData", scope: !8681, file: !3, line: 3004, type: !142)
!8681 = distinct !DILexicalBlock(scope: !8677, file: !3, line: 3003, column: 24)
!8682 = !DILocation(line: 3004, column: 9, scope: !8681)
!8683 = !DILocation(line: 3004, column: 47, scope: !8681)
!8684 = !DILocation(line: 3004, column: 51, scope: !8681)
!8685 = !DILocation(line: 3004, column: 20, scope: !8681)
!8686 = !DILocation(line: 3005, column: 10, scope: !8681)
!8687 = !DILocation(line: 3005, column: 14, scope: !8681)
!8688 = !DILocation(line: 3005, column: 38, scope: !8681)
!8689 = !DILocation(line: 3005, column: 47, scope: !8681)
!8690 = !DILocation(line: 3005, column: 51, scope: !8681)
!8691 = !DILocation(line: 3005, column: 27, scope: !8681)
!8692 = !DILocation(line: 3005, column: 25, scope: !8681)
!8693 = !DILocation(line: 3005, column: 3, scope: !8681)
!8694 = !DILocation(line: 3008, column: 3, scope: !8695)
!8695 = distinct !DILexicalBlock(scope: !8677, file: !3, line: 3007, column: 7)
!8696 = !DILocation(line: 3010, column: 1, scope: !8669)
!8697 = distinct !DISubprogram(name: "ccgSubSurf_getFaceUserData", scope: !3, file: !3, line: 3011, type: !8698, scopeLine: 3012, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, retainedNodes: !151)
!8698 = !DISubroutineType(types: !8699)
!8699 = !{!15, !187, !97}
!8700 = !DILocalVariable(name: "ss", arg: 1, scope: !8697, file: !3, line: 3011, type: !187)
!8701 = !DILocation(line: 3011, column: 46, scope: !8697)
!8702 = !DILocalVariable(name: "f", arg: 2, scope: !8697, file: !3, line: 3011, type: !97)
!8703 = !DILocation(line: 3011, column: 59, scope: !8697)
!8704 = !DILocalVariable(name: "maxGridSize", scope: !8697, file: !3, line: 3013, type: !17)
!8705 = !DILocation(line: 3013, column: 6, scope: !8697)
!8706 = !DILocation(line: 3013, column: 33, scope: !8697)
!8707 = !DILocation(line: 3013, column: 37, scope: !8697)
!8708 = !DILocation(line: 3013, column: 20, scope: !8697)
!8709 = !DILocation(line: 3014, column: 28, scope: !8697)
!8710 = !DILocation(line: 3014, column: 9, scope: !8697)
!8711 = !DILocation(line: 3014, column: 33, scope: !8697)
!8712 = !DILocation(line: 3014, column: 37, scope: !8697)
!8713 = !DILocation(line: 3014, column: 45, scope: !8697)
!8714 = !DILocation(line: 3014, column: 65, scope: !8697)
!8715 = !DILocation(line: 3014, column: 68, scope: !8697)
!8716 = !DILocation(line: 3014, column: 79, scope: !8697)
!8717 = !DILocation(line: 3014, column: 77, scope: !8697)
!8718 = !DILocation(line: 3014, column: 63, scope: !8697)
!8719 = !DILocation(line: 3014, column: 93, scope: !8697)
!8720 = !DILocation(line: 3014, column: 96, scope: !8697)
!8721 = !DILocation(line: 3014, column: 107, scope: !8697)
!8722 = !DILocation(line: 3014, column: 105, scope: !8697)
!8723 = !DILocation(line: 3014, column: 121, scope: !8697)
!8724 = !DILocation(line: 3014, column: 119, scope: !8697)
!8725 = !DILocation(line: 3014, column: 91, scope: !8697)
!8726 = !DILocation(line: 3014, column: 58, scope: !8697)
!8727 = !DILocation(line: 3014, column: 31, scope: !8697)
!8728 = !DILocation(line: 3014, column: 2, scope: !8697)
!8729 = distinct !DISubprogram(name: "ccgSubSurf_getFaceNumVerts", scope: !3, file: !3, line: 3016, type: !8730, scopeLine: 3017, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, retainedNodes: !151)
!8730 = !DISubroutineType(types: !8731)
!8731 = !{!17, !97}
!8732 = !DILocalVariable(name: "f", arg: 1, scope: !8729, file: !3, line: 3016, type: !97)
!8733 = !DILocation(line: 3016, column: 41, scope: !8729)
!8734 = !DILocation(line: 3018, column: 9, scope: !8729)
!8735 = !DILocation(line: 3018, column: 12, scope: !8729)
!8736 = !DILocation(line: 3018, column: 2, scope: !8729)
!8737 = distinct !DISubprogram(name: "ccgSubSurf_getFaceVert", scope: !3, file: !3, line: 3020, type: !8738, scopeLine: 3021, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, retainedNodes: !151)
!8738 = !DISubroutineType(types: !8739)
!8739 = !{!70, !97, !17}
!8740 = !DILocalVariable(name: "f", arg: 1, scope: !8737, file: !3, line: 3020, type: !97)
!8741 = !DILocation(line: 3020, column: 42, scope: !8737)
!8742 = !DILocalVariable(name: "index", arg: 2, scope: !8737, file: !3, line: 3020, type: !17)
!8743 = !DILocation(line: 3020, column: 49, scope: !8737)
!8744 = !DILocation(line: 3022, column: 6, scope: !8745)
!8745 = distinct !DILexicalBlock(scope: !8737, file: !3, line: 3022, column: 6)
!8746 = !DILocation(line: 3022, column: 12, scope: !8745)
!8747 = !DILocation(line: 3022, column: 16, scope: !8745)
!8748 = !DILocation(line: 3022, column: 19, scope: !8745)
!8749 = !DILocation(line: 3022, column: 28, scope: !8745)
!8750 = !DILocation(line: 3022, column: 31, scope: !8745)
!8751 = !DILocation(line: 3022, column: 25, scope: !8745)
!8752 = !DILocation(line: 3022, column: 6, scope: !8737)
!8753 = !DILocation(line: 3023, column: 3, scope: !8754)
!8754 = distinct !DILexicalBlock(scope: !8745, file: !3, line: 3022, column: 41)
!8755 = !DILocation(line: 3026, column: 24, scope: !8756)
!8756 = distinct !DILexicalBlock(scope: !8745, file: !3, line: 3025, column: 7)
!8757 = !DILocation(line: 3026, column: 10, scope: !8756)
!8758 = !DILocation(line: 3026, column: 27, scope: !8756)
!8759 = !DILocation(line: 3026, column: 3, scope: !8756)
!8760 = !DILocation(line: 3028, column: 1, scope: !8737)
!8761 = distinct !DISubprogram(name: "ccgSubSurf_getFaceEdge", scope: !3, file: !3, line: 3029, type: !8762, scopeLine: 3030, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, retainedNodes: !151)
!8762 = !DISubroutineType(types: !8763)
!8763 = !{!84, !97, !17}
!8764 = !DILocalVariable(name: "f", arg: 1, scope: !8761, file: !3, line: 3029, type: !97)
!8765 = !DILocation(line: 3029, column: 42, scope: !8761)
!8766 = !DILocalVariable(name: "index", arg: 2, scope: !8761, file: !3, line: 3029, type: !17)
!8767 = !DILocation(line: 3029, column: 49, scope: !8761)
!8768 = !DILocation(line: 3031, column: 6, scope: !8769)
!8769 = distinct !DILexicalBlock(scope: !8761, file: !3, line: 3031, column: 6)
!8770 = !DILocation(line: 3031, column: 12, scope: !8769)
!8771 = !DILocation(line: 3031, column: 16, scope: !8769)
!8772 = !DILocation(line: 3031, column: 19, scope: !8769)
!8773 = !DILocation(line: 3031, column: 28, scope: !8769)
!8774 = !DILocation(line: 3031, column: 31, scope: !8769)
!8775 = !DILocation(line: 3031, column: 25, scope: !8769)
!8776 = !DILocation(line: 3031, column: 6, scope: !8761)
!8777 = !DILocation(line: 3032, column: 3, scope: !8778)
!8778 = distinct !DILexicalBlock(scope: !8769, file: !3, line: 3031, column: 41)
!8779 = !DILocation(line: 3035, column: 24, scope: !8780)
!8780 = distinct !DILexicalBlock(scope: !8769, file: !3, line: 3034, column: 7)
!8781 = !DILocation(line: 3035, column: 10, scope: !8780)
!8782 = !DILocation(line: 3035, column: 27, scope: !8780)
!8783 = !DILocation(line: 3035, column: 3, scope: !8780)
!8784 = !DILocation(line: 3037, column: 1, scope: !8761)
!8785 = distinct !DISubprogram(name: "ccgSubSurf_getFaceEdgeIndex", scope: !3, file: !3, line: 3038, type: !8786, scopeLine: 3039, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, retainedNodes: !151)
!8786 = !DISubroutineType(types: !8787)
!8787 = !{!17, !97, !84}
!8788 = !DILocalVariable(name: "f", arg: 1, scope: !8785, file: !3, line: 3038, type: !97)
!8789 = !DILocation(line: 3038, column: 42, scope: !8785)
!8790 = !DILocalVariable(name: "e", arg: 2, scope: !8785, file: !3, line: 3038, type: !84)
!8791 = !DILocation(line: 3038, column: 54, scope: !8785)
!8792 = !DILocalVariable(name: "i", scope: !8785, file: !3, line: 3040, type: !17)
!8793 = !DILocation(line: 3040, column: 6, scope: !8785)
!8794 = !DILocation(line: 3042, column: 9, scope: !8795)
!8795 = distinct !DILexicalBlock(scope: !8785, file: !3, line: 3042, column: 2)
!8796 = !DILocation(line: 3042, column: 7, scope: !8795)
!8797 = !DILocation(line: 3042, column: 14, scope: !8798)
!8798 = distinct !DILexicalBlock(scope: !8795, file: !3, line: 3042, column: 2)
!8799 = !DILocation(line: 3042, column: 18, scope: !8798)
!8800 = !DILocation(line: 3042, column: 21, scope: !8798)
!8801 = !DILocation(line: 3042, column: 16, scope: !8798)
!8802 = !DILocation(line: 3042, column: 2, scope: !8795)
!8803 = !DILocation(line: 3043, column: 21, scope: !8804)
!8804 = distinct !DILexicalBlock(scope: !8805, file: !3, line: 3043, column: 7)
!8805 = distinct !DILexicalBlock(scope: !8798, file: !3, line: 3042, column: 36)
!8806 = !DILocation(line: 3043, column: 7, scope: !8804)
!8807 = !DILocation(line: 3043, column: 24, scope: !8804)
!8808 = !DILocation(line: 3043, column: 30, scope: !8804)
!8809 = !DILocation(line: 3043, column: 27, scope: !8804)
!8810 = !DILocation(line: 3043, column: 7, scope: !8805)
!8811 = !DILocation(line: 3044, column: 11, scope: !8812)
!8812 = distinct !DILexicalBlock(scope: !8804, file: !3, line: 3043, column: 33)
!8813 = !DILocation(line: 3044, column: 4, scope: !8812)
!8814 = !DILocation(line: 3046, column: 2, scope: !8805)
!8815 = !DILocation(line: 3042, column: 32, scope: !8798)
!8816 = !DILocation(line: 3042, column: 2, scope: !8798)
!8817 = distinct !{!8817, !8802, !8818}
!8818 = !DILocation(line: 3046, column: 2, scope: !8795)
!8819 = !DILocation(line: 3047, column: 2, scope: !8785)
!8820 = !DILocation(line: 3048, column: 1, scope: !8785)
!8821 = distinct !DISubprogram(name: "ccgSubSurf_getFaceCenterData", scope: !3, file: !3, line: 3049, type: !8822, scopeLine: 3050, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, retainedNodes: !151)
!8822 = !DISubroutineType(types: !8823)
!8823 = !{!15, !97}
!8824 = !DILocalVariable(name: "f", arg: 1, scope: !8821, file: !3, line: 3049, type: !97)
!8825 = !DILocation(line: 3049, column: 45, scope: !8821)
!8826 = !DILocation(line: 3051, column: 28, scope: !8821)
!8827 = !DILocation(line: 3051, column: 9, scope: !8821)
!8828 = !DILocation(line: 3051, column: 2, scope: !8821)
!8829 = distinct !DISubprogram(name: "ccgSubSurf_getFaceGridEdgeDataArray", scope: !3, file: !3, line: 3053, type: !8830, scopeLine: 3054, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, retainedNodes: !151)
!8830 = !DISubroutineType(types: !8831)
!8831 = !{!15, !187, !97, !17}
!8832 = !DILocalVariable(name: "ss", arg: 1, scope: !8829, file: !3, line: 3053, type: !187)
!8833 = !DILocation(line: 3053, column: 55, scope: !8829)
!8834 = !DILocalVariable(name: "f", arg: 2, scope: !8829, file: !3, line: 3053, type: !97)
!8835 = !DILocation(line: 3053, column: 68, scope: !8829)
!8836 = !DILocalVariable(name: "gridIndex", arg: 3, scope: !8829, file: !3, line: 3053, type: !17)
!8837 = !DILocation(line: 3053, column: 75, scope: !8829)
!8838 = !DILocation(line: 3055, column: 40, scope: !8829)
!8839 = !DILocation(line: 3055, column: 44, scope: !8829)
!8840 = !DILocation(line: 3055, column: 47, scope: !8829)
!8841 = !DILocation(line: 3055, column: 9, scope: !8829)
!8842 = !DILocation(line: 3055, column: 2, scope: !8829)
!8843 = distinct !DISubprogram(name: "ccgSubSurf_getFaceGridEdgeData", scope: !3, file: !3, line: 3057, type: !8844, scopeLine: 3058, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, retainedNodes: !151)
!8844 = !DISubroutineType(types: !8845)
!8845 = !{!15, !187, !97, !17, !17}
!8846 = !DILocalVariable(name: "ss", arg: 1, scope: !8843, file: !3, line: 3057, type: !187)
!8847 = !DILocation(line: 3057, column: 50, scope: !8843)
!8848 = !DILocalVariable(name: "f", arg: 2, scope: !8843, file: !3, line: 3057, type: !97)
!8849 = !DILocation(line: 3057, column: 63, scope: !8843)
!8850 = !DILocalVariable(name: "gridIndex", arg: 3, scope: !8843, file: !3, line: 3057, type: !17)
!8851 = !DILocation(line: 3057, column: 70, scope: !8843)
!8852 = !DILocalVariable(name: "x", arg: 4, scope: !8843, file: !3, line: 3057, type: !17)
!8853 = !DILocation(line: 3057, column: 85, scope: !8843)
!8854 = !DILocation(line: 3059, column: 23, scope: !8843)
!8855 = !DILocation(line: 3059, column: 26, scope: !8843)
!8856 = !DILocation(line: 3059, column: 30, scope: !8843)
!8857 = !DILocation(line: 3059, column: 44, scope: !8843)
!8858 = !DILocation(line: 3059, column: 55, scope: !8843)
!8859 = !DILocation(line: 3059, column: 58, scope: !8843)
!8860 = !DILocation(line: 3059, column: 62, scope: !8843)
!8861 = !DILocation(line: 3059, column: 76, scope: !8843)
!8862 = !DILocation(line: 3059, column: 80, scope: !8843)
!8863 = !DILocation(line: 3059, column: 88, scope: !8843)
!8864 = !DILocation(line: 3059, column: 9, scope: !8843)
!8865 = !DILocation(line: 3059, column: 2, scope: !8843)
!8866 = distinct !DISubprogram(name: "ccgSubSurf_getFaceGridDataArray", scope: !3, file: !3, line: 3061, type: !8830, scopeLine: 3062, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, retainedNodes: !151)
!8867 = !DILocalVariable(name: "ss", arg: 1, scope: !8866, file: !3, line: 3061, type: !187)
!8868 = !DILocation(line: 3061, column: 51, scope: !8866)
!8869 = !DILocalVariable(name: "f", arg: 2, scope: !8866, file: !3, line: 3061, type: !97)
!8870 = !DILocation(line: 3061, column: 64, scope: !8866)
!8871 = !DILocalVariable(name: "gridIndex", arg: 3, scope: !8866, file: !3, line: 3061, type: !17)
!8872 = !DILocation(line: 3061, column: 71, scope: !8866)
!8873 = !DILocation(line: 3063, column: 36, scope: !8866)
!8874 = !DILocation(line: 3063, column: 40, scope: !8866)
!8875 = !DILocation(line: 3063, column: 43, scope: !8866)
!8876 = !DILocation(line: 3063, column: 9, scope: !8866)
!8877 = !DILocation(line: 3063, column: 2, scope: !8866)
!8878 = distinct !DISubprogram(name: "ccgSubSurf_getFaceGridData", scope: !3, file: !3, line: 3065, type: !8879, scopeLine: 3066, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, retainedNodes: !151)
!8879 = !DISubroutineType(types: !8880)
!8880 = !{!15, !187, !97, !17, !17, !17}
!8881 = !DILocalVariable(name: "ss", arg: 1, scope: !8878, file: !3, line: 3065, type: !187)
!8882 = !DILocation(line: 3065, column: 46, scope: !8878)
!8883 = !DILocalVariable(name: "f", arg: 2, scope: !8878, file: !3, line: 3065, type: !97)
!8884 = !DILocation(line: 3065, column: 59, scope: !8878)
!8885 = !DILocalVariable(name: "gridIndex", arg: 3, scope: !8878, file: !3, line: 3065, type: !17)
!8886 = !DILocation(line: 3065, column: 66, scope: !8878)
!8887 = !DILocalVariable(name: "x", arg: 4, scope: !8878, file: !3, line: 3065, type: !17)
!8888 = !DILocation(line: 3065, column: 81, scope: !8878)
!8889 = !DILocalVariable(name: "y", arg: 5, scope: !8878, file: !3, line: 3065, type: !17)
!8890 = !DILocation(line: 3065, column: 88, scope: !8878)
!8891 = !DILocation(line: 3067, column: 23, scope: !8878)
!8892 = !DILocation(line: 3067, column: 26, scope: !8878)
!8893 = !DILocation(line: 3067, column: 30, scope: !8878)
!8894 = !DILocation(line: 3067, column: 44, scope: !8878)
!8895 = !DILocation(line: 3067, column: 55, scope: !8878)
!8896 = !DILocation(line: 3067, column: 58, scope: !8878)
!8897 = !DILocation(line: 3067, column: 61, scope: !8878)
!8898 = !DILocation(line: 3067, column: 65, scope: !8878)
!8899 = !DILocation(line: 3067, column: 79, scope: !8878)
!8900 = !DILocation(line: 3067, column: 83, scope: !8878)
!8901 = !DILocation(line: 3067, column: 91, scope: !8878)
!8902 = !DILocation(line: 3067, column: 9, scope: !8878)
!8903 = !DILocation(line: 3067, column: 2, scope: !8878)
!8904 = distinct !DISubprogram(name: "ccgSubSurf_getVertIterator", scope: !3, file: !3, line: 3072, type: !8905, scopeLine: 3073, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, retainedNodes: !151)
!8905 = !DISubroutineType(types: !8906)
!8906 = !{!110, !187}
!8907 = !DILocalVariable(name: "ss", arg: 1, scope: !8904, file: !3, line: 3072, type: !187)
!8908 = !DILocation(line: 3072, column: 57, scope: !8904)
!8909 = !DILocation(line: 3074, column: 48, scope: !8904)
!8910 = !DILocation(line: 3074, column: 52, scope: !8904)
!8911 = !DILocation(line: 3074, column: 29, scope: !8904)
!8912 = !DILocation(line: 3074, column: 9, scope: !8904)
!8913 = !DILocation(line: 3074, column: 2, scope: !8904)
!8914 = distinct !DISubprogram(name: "_ehashIterator_new", scope: !3, file: !3, line: 181, type: !8915, scopeLine: 182, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !30, retainedNodes: !151)
!8915 = !DISubroutineType(types: !8916)
!8916 = !{!119, !124}
!8917 = !DILocalVariable(name: "eh", arg: 1, scope: !8914, file: !3, line: 181, type: !124)
!8918 = !DILocation(line: 181, column: 49, scope: !8914)
!8919 = !DILocalVariable(name: "ehi", scope: !8914, file: !3, line: 183, type: !119)
!8920 = !DILocation(line: 183, column: 17, scope: !8914)
!8921 = !DILocation(line: 183, column: 23, scope: !8914)
!8922 = !DILocation(line: 184, column: 12, scope: !8914)
!8923 = !DILocation(line: 184, column: 2, scope: !8914)
!8924 = !DILocation(line: 184, column: 7, scope: !8914)
!8925 = !DILocation(line: 184, column: 10, scope: !8914)
!8926 = !DILocation(line: 185, column: 2, scope: !8914)
!8927 = !DILocation(line: 185, column: 7, scope: !8914)
!8928 = !DILocation(line: 185, column: 16, scope: !8914)
!8929 = !DILocation(line: 186, column: 2, scope: !8914)
!8930 = !DILocation(line: 186, column: 7, scope: !8914)
!8931 = !DILocation(line: 186, column: 17, scope: !8914)
!8932 = !DILocation(line: 187, column: 2, scope: !8914)
!8933 = !DILocation(line: 187, column: 10, scope: !8914)
!8934 = !DILocation(line: 187, column: 15, scope: !8914)
!8935 = !DILocation(line: 187, column: 9, scope: !8914)
!8936 = !DILocation(line: 188, column: 3, scope: !8937)
!8937 = distinct !DILexicalBlock(scope: !8914, file: !3, line: 187, column: 25)
!8938 = !DILocation(line: 188, column: 8, scope: !8937)
!8939 = !DILocation(line: 188, column: 17, scope: !8937)
!8940 = !DILocation(line: 189, column: 7, scope: !8941)
!8941 = distinct !DILexicalBlock(scope: !8937, file: !3, line: 189, column: 7)
!8942 = !DILocation(line: 189, column: 12, scope: !8941)
!8943 = !DILocation(line: 189, column: 25, scope: !8941)
!8944 = !DILocation(line: 189, column: 30, scope: !8941)
!8945 = !DILocation(line: 189, column: 34, scope: !8941)
!8946 = !DILocation(line: 189, column: 22, scope: !8941)
!8947 = !DILocation(line: 189, column: 7, scope: !8937)
!8948 = !DILocation(line: 190, column: 4, scope: !8941)
!8949 = !DILocation(line: 191, column: 19, scope: !8937)
!8950 = !DILocation(line: 191, column: 24, scope: !8937)
!8951 = !DILocation(line: 191, column: 28, scope: !8937)
!8952 = !DILocation(line: 191, column: 36, scope: !8937)
!8953 = !DILocation(line: 191, column: 41, scope: !8937)
!8954 = !DILocation(line: 191, column: 3, scope: !8937)
!8955 = !DILocation(line: 191, column: 8, scope: !8937)
!8956 = !DILocation(line: 191, column: 17, scope: !8937)
!8957 = distinct !{!8957, !8932, !8958}
!8958 = !DILocation(line: 192, column: 2, scope: !8914)
!8959 = !DILocation(line: 193, column: 9, scope: !8914)
!8960 = !DILocation(line: 193, column: 2, scope: !8914)
!8961 = distinct !DISubprogram(name: "ccgSubSurf_getEdgeIterator", scope: !3, file: !3, line: 3076, type: !8962, scopeLine: 3077, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, retainedNodes: !151)
!8962 = !DISubroutineType(types: !8963)
!8963 = !{!113, !187}
!8964 = !DILocalVariable(name: "ss", arg: 1, scope: !8961, file: !3, line: 3076, type: !187)
!8965 = !DILocation(line: 3076, column: 57, scope: !8961)
!8966 = !DILocation(line: 3078, column: 48, scope: !8961)
!8967 = !DILocation(line: 3078, column: 52, scope: !8961)
!8968 = !DILocation(line: 3078, column: 29, scope: !8961)
!8969 = !DILocation(line: 3078, column: 9, scope: !8961)
!8970 = !DILocation(line: 3078, column: 2, scope: !8961)
!8971 = distinct !DISubprogram(name: "ccgSubSurf_getFaceIterator", scope: !3, file: !3, line: 3080, type: !8972, scopeLine: 3081, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, retainedNodes: !151)
!8972 = !DISubroutineType(types: !8973)
!8973 = !{!116, !187}
!8974 = !DILocalVariable(name: "ss", arg: 1, scope: !8971, file: !3, line: 3080, type: !187)
!8975 = !DILocation(line: 3080, column: 57, scope: !8971)
!8976 = !DILocation(line: 3082, column: 48, scope: !8971)
!8977 = !DILocation(line: 3082, column: 52, scope: !8971)
!8978 = !DILocation(line: 3082, column: 29, scope: !8971)
!8979 = !DILocation(line: 3082, column: 9, scope: !8971)
!8980 = !DILocation(line: 3082, column: 2, scope: !8971)
!8981 = distinct !DISubprogram(name: "ccgVertIterator_getCurrent", scope: !3, file: !3, line: 3085, type: !8982, scopeLine: 3086, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, retainedNodes: !151)
!8982 = !DISubroutineType(types: !8983)
!8983 = !{!70, !110}
!8984 = !DILocalVariable(name: "vi", arg: 1, scope: !8981, file: !3, line: 3085, type: !110)
!8985 = !DILocation(line: 3085, column: 54, scope: !8981)
!8986 = !DILocation(line: 3087, column: 65, scope: !8981)
!8987 = !DILocation(line: 3087, column: 47, scope: !8981)
!8988 = !DILocation(line: 3087, column: 21, scope: !8981)
!8989 = !DILocation(line: 3087, column: 9, scope: !8981)
!8990 = !DILocation(line: 3087, column: 2, scope: !8981)
!8991 = distinct !DISubprogram(name: "_ehashIterator_getCurrent", scope: !3, file: !3, line: 200, type: !8992, scopeLine: 201, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !30, retainedNodes: !151)
!8992 = !DISubroutineType(types: !8993)
!8993 = !{!15, !119}
!8994 = !DILocalVariable(name: "ehi", arg: 1, scope: !8991, file: !3, line: 200, type: !119)
!8995 = !DILocation(line: 200, column: 55, scope: !8991)
!8996 = !DILocation(line: 202, column: 9, scope: !8991)
!8997 = !DILocation(line: 202, column: 14, scope: !8991)
!8998 = !DILocation(line: 202, column: 2, scope: !8991)
!8999 = distinct !DISubprogram(name: "ccgVertIterator_isStopped", scope: !3, file: !3, line: 3089, type: !9000, scopeLine: 3090, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, retainedNodes: !151)
!9000 = !DISubroutineType(types: !9001)
!9001 = !{!17, !110}
!9002 = !DILocalVariable(name: "vi", arg: 1, scope: !8999, file: !3, line: 3089, type: !110)
!9003 = !DILocation(line: 3089, column: 48, scope: !8999)
!9004 = !DILocation(line: 3091, column: 52, scope: !8999)
!9005 = !DILocation(line: 3091, column: 34, scope: !8999)
!9006 = !DILocation(line: 3091, column: 9, scope: !8999)
!9007 = !DILocation(line: 3091, column: 2, scope: !8999)
!9008 = distinct !DISubprogram(name: "_ehashIterator_isStopped", scope: !3, file: !3, line: 217, type: !9009, scopeLine: 218, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !30, retainedNodes: !151)
!9009 = !DISubroutineType(types: !9010)
!9010 = !{!17, !119}
!9011 = !DILocalVariable(name: "ehi", arg: 1, scope: !9008, file: !3, line: 217, type: !119)
!9012 = !DILocation(line: 217, column: 52, scope: !9008)
!9013 = !DILocation(line: 219, column: 10, scope: !9008)
!9014 = !DILocation(line: 219, column: 15, scope: !9008)
!9015 = !DILocation(line: 219, column: 9, scope: !9008)
!9016 = !DILocation(line: 219, column: 2, scope: !9008)
!9017 = distinct !DISubprogram(name: "ccgVertIterator_next", scope: !3, file: !3, line: 3093, type: !9018, scopeLine: 3094, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, retainedNodes: !151)
!9018 = !DISubroutineType(types: !9019)
!9019 = !{null, !110}
!9020 = !DILocalVariable(name: "vi", arg: 1, scope: !9017, file: !3, line: 3093, type: !110)
!9021 = !DILocation(line: 3093, column: 44, scope: !9017)
!9022 = !DILocation(line: 3095, column: 40, scope: !9017)
!9023 = !DILocation(line: 3095, column: 22, scope: !9017)
!9024 = !DILocation(line: 3095, column: 2, scope: !9017)
!9025 = !DILocation(line: 3096, column: 1, scope: !9017)
!9026 = distinct !DISubprogram(name: "_ehashIterator_next", scope: !3, file: !3, line: 205, type: !9027, scopeLine: 206, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !30, retainedNodes: !151)
!9027 = !DISubroutineType(types: !9028)
!9028 = !{null, !119}
!9029 = !DILocalVariable(name: "ehi", arg: 1, scope: !9026, file: !3, line: 205, type: !119)
!9030 = !DILocation(line: 205, column: 48, scope: !9026)
!9031 = !DILocation(line: 207, column: 6, scope: !9032)
!9032 = distinct !DILexicalBlock(scope: !9026, file: !3, line: 207, column: 6)
!9033 = !DILocation(line: 207, column: 11, scope: !9032)
!9034 = !DILocation(line: 207, column: 6, scope: !9026)
!9035 = !DILocation(line: 208, column: 19, scope: !9036)
!9036 = distinct !DILexicalBlock(scope: !9032, file: !3, line: 207, column: 21)
!9037 = !DILocation(line: 208, column: 24, scope: !9036)
!9038 = !DILocation(line: 208, column: 34, scope: !9036)
!9039 = !DILocation(line: 208, column: 3, scope: !9036)
!9040 = !DILocation(line: 208, column: 8, scope: !9036)
!9041 = !DILocation(line: 208, column: 17, scope: !9036)
!9042 = !DILocation(line: 209, column: 3, scope: !9036)
!9043 = !DILocation(line: 209, column: 11, scope: !9036)
!9044 = !DILocation(line: 209, column: 16, scope: !9036)
!9045 = !DILocation(line: 209, column: 10, scope: !9036)
!9046 = !DILocation(line: 210, column: 4, scope: !9047)
!9047 = distinct !DILexicalBlock(scope: !9036, file: !3, line: 209, column: 26)
!9048 = !DILocation(line: 210, column: 9, scope: !9047)
!9049 = !DILocation(line: 210, column: 18, scope: !9047)
!9050 = !DILocation(line: 211, column: 8, scope: !9051)
!9051 = distinct !DILexicalBlock(scope: !9047, file: !3, line: 211, column: 8)
!9052 = !DILocation(line: 211, column: 13, scope: !9051)
!9053 = !DILocation(line: 211, column: 26, scope: !9051)
!9054 = !DILocation(line: 211, column: 31, scope: !9051)
!9055 = !DILocation(line: 211, column: 35, scope: !9051)
!9056 = !DILocation(line: 211, column: 23, scope: !9051)
!9057 = !DILocation(line: 211, column: 8, scope: !9047)
!9058 = !DILocation(line: 212, column: 5, scope: !9051)
!9059 = !DILocation(line: 213, column: 20, scope: !9047)
!9060 = !DILocation(line: 213, column: 25, scope: !9047)
!9061 = !DILocation(line: 213, column: 29, scope: !9047)
!9062 = !DILocation(line: 213, column: 37, scope: !9047)
!9063 = !DILocation(line: 213, column: 42, scope: !9047)
!9064 = !DILocation(line: 213, column: 4, scope: !9047)
!9065 = !DILocation(line: 213, column: 9, scope: !9047)
!9066 = !DILocation(line: 213, column: 18, scope: !9047)
!9067 = distinct !{!9067, !9042, !9068}
!9068 = !DILocation(line: 214, column: 3, scope: !9036)
!9069 = !DILocation(line: 215, column: 2, scope: !9036)
!9070 = !DILocation(line: 216, column: 1, scope: !9026)
!9071 = distinct !DISubprogram(name: "ccgVertIterator_free", scope: !3, file: !3, line: 3097, type: !9018, scopeLine: 3098, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, retainedNodes: !151)
!9072 = !DILocalVariable(name: "vi", arg: 1, scope: !9071, file: !3, line: 3097, type: !110)
!9073 = !DILocation(line: 3097, column: 44, scope: !9071)
!9074 = !DILocation(line: 3099, column: 40, scope: !9071)
!9075 = !DILocation(line: 3099, column: 22, scope: !9071)
!9076 = !DILocation(line: 3099, column: 2, scope: !9071)
!9077 = !DILocation(line: 3100, column: 1, scope: !9071)
!9078 = distinct !DISubprogram(name: "_ehashIterator_free", scope: !3, file: !3, line: 195, type: !9027, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !30, retainedNodes: !151)
!9079 = !DILocalVariable(name: "ehi", arg: 1, scope: !9078, file: !3, line: 195, type: !119)
!9080 = !DILocation(line: 195, column: 48, scope: !9078)
!9081 = !DILocation(line: 197, column: 2, scope: !9078)
!9082 = !DILocation(line: 198, column: 1, scope: !9078)
!9083 = distinct !DISubprogram(name: "ccgEdgeIterator_getCurrent", scope: !3, file: !3, line: 3102, type: !9084, scopeLine: 3103, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, retainedNodes: !151)
!9084 = !DISubroutineType(types: !9085)
!9085 = !{!84, !113}
!9086 = !DILocalVariable(name: "vi", arg: 1, scope: !9083, file: !3, line: 3102, type: !113)
!9087 = !DILocation(line: 3102, column: 54, scope: !9083)
!9088 = !DILocation(line: 3104, column: 65, scope: !9083)
!9089 = !DILocation(line: 3104, column: 47, scope: !9083)
!9090 = !DILocation(line: 3104, column: 21, scope: !9083)
!9091 = !DILocation(line: 3104, column: 9, scope: !9083)
!9092 = !DILocation(line: 3104, column: 2, scope: !9083)
!9093 = distinct !DISubprogram(name: "ccgEdgeIterator_isStopped", scope: !3, file: !3, line: 3106, type: !9094, scopeLine: 3107, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, retainedNodes: !151)
!9094 = !DISubroutineType(types: !9095)
!9095 = !{!17, !113}
!9096 = !DILocalVariable(name: "vi", arg: 1, scope: !9093, file: !3, line: 3106, type: !113)
!9097 = !DILocation(line: 3106, column: 48, scope: !9093)
!9098 = !DILocation(line: 3108, column: 52, scope: !9093)
!9099 = !DILocation(line: 3108, column: 34, scope: !9093)
!9100 = !DILocation(line: 3108, column: 9, scope: !9093)
!9101 = !DILocation(line: 3108, column: 2, scope: !9093)
!9102 = distinct !DISubprogram(name: "ccgEdgeIterator_next", scope: !3, file: !3, line: 3110, type: !9103, scopeLine: 3111, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, retainedNodes: !151)
!9103 = !DISubroutineType(types: !9104)
!9104 = !{null, !113}
!9105 = !DILocalVariable(name: "vi", arg: 1, scope: !9102, file: !3, line: 3110, type: !113)
!9106 = !DILocation(line: 3110, column: 44, scope: !9102)
!9107 = !DILocation(line: 3112, column: 40, scope: !9102)
!9108 = !DILocation(line: 3112, column: 22, scope: !9102)
!9109 = !DILocation(line: 3112, column: 2, scope: !9102)
!9110 = !DILocation(line: 3113, column: 1, scope: !9102)
!9111 = distinct !DISubprogram(name: "ccgEdgeIterator_free", scope: !3, file: !3, line: 3114, type: !9103, scopeLine: 3115, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, retainedNodes: !151)
!9112 = !DILocalVariable(name: "vi", arg: 1, scope: !9111, file: !3, line: 3114, type: !113)
!9113 = !DILocation(line: 3114, column: 44, scope: !9111)
!9114 = !DILocation(line: 3116, column: 40, scope: !9111)
!9115 = !DILocation(line: 3116, column: 22, scope: !9111)
!9116 = !DILocation(line: 3116, column: 2, scope: !9111)
!9117 = !DILocation(line: 3117, column: 1, scope: !9111)
!9118 = distinct !DISubprogram(name: "ccgFaceIterator_getCurrent", scope: !3, file: !3, line: 3119, type: !9119, scopeLine: 3120, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, retainedNodes: !151)
!9119 = !DISubroutineType(types: !9120)
!9120 = !{!97, !116}
!9121 = !DILocalVariable(name: "vi", arg: 1, scope: !9118, file: !3, line: 3119, type: !116)
!9122 = !DILocation(line: 3119, column: 54, scope: !9118)
!9123 = !DILocation(line: 3121, column: 65, scope: !9118)
!9124 = !DILocation(line: 3121, column: 47, scope: !9118)
!9125 = !DILocation(line: 3121, column: 21, scope: !9118)
!9126 = !DILocation(line: 3121, column: 9, scope: !9118)
!9127 = !DILocation(line: 3121, column: 2, scope: !9118)
!9128 = distinct !DISubprogram(name: "ccgFaceIterator_isStopped", scope: !3, file: !3, line: 3123, type: !9129, scopeLine: 3124, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, retainedNodes: !151)
!9129 = !DISubroutineType(types: !9130)
!9130 = !{!17, !116}
!9131 = !DILocalVariable(name: "vi", arg: 1, scope: !9128, file: !3, line: 3123, type: !116)
!9132 = !DILocation(line: 3123, column: 48, scope: !9128)
!9133 = !DILocation(line: 3125, column: 52, scope: !9128)
!9134 = !DILocation(line: 3125, column: 34, scope: !9128)
!9135 = !DILocation(line: 3125, column: 9, scope: !9128)
!9136 = !DILocation(line: 3125, column: 2, scope: !9128)
!9137 = distinct !DISubprogram(name: "ccgFaceIterator_next", scope: !3, file: !3, line: 3127, type: !9138, scopeLine: 3128, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, retainedNodes: !151)
!9138 = !DISubroutineType(types: !9139)
!9139 = !{null, !116}
!9140 = !DILocalVariable(name: "vi", arg: 1, scope: !9137, file: !3, line: 3127, type: !116)
!9141 = !DILocation(line: 3127, column: 44, scope: !9137)
!9142 = !DILocation(line: 3129, column: 40, scope: !9137)
!9143 = !DILocation(line: 3129, column: 22, scope: !9137)
!9144 = !DILocation(line: 3129, column: 2, scope: !9137)
!9145 = !DILocation(line: 3130, column: 1, scope: !9137)
!9146 = distinct !DISubprogram(name: "ccgFaceIterator_free", scope: !3, file: !3, line: 3131, type: !9138, scopeLine: 3132, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, retainedNodes: !151)
!9147 = !DILocalVariable(name: "vi", arg: 1, scope: !9146, file: !3, line: 3131, type: !116)
!9148 = !DILocation(line: 3131, column: 44, scope: !9146)
!9149 = !DILocation(line: 3133, column: 40, scope: !9146)
!9150 = !DILocation(line: 3133, column: 22, scope: !9146)
!9151 = !DILocation(line: 3133, column: 2, scope: !9146)
!9152 = !DILocation(line: 3134, column: 1, scope: !9146)
!9153 = distinct !DISubprogram(name: "ccgSubSurf_getNumFinalVerts", scope: !3, file: !3, line: 3138, type: !8197, scopeLine: 3139, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, retainedNodes: !151)
!9154 = !DILocalVariable(name: "ss", arg: 1, scope: !9153, file: !3, line: 3138, type: !1589)
!9155 = !DILocation(line: 3138, column: 51, scope: !9153)
!9156 = !DILocalVariable(name: "edgeSize", scope: !9153, file: !3, line: 3140, type: !17)
!9157 = !DILocation(line: 3140, column: 6, scope: !9153)
!9158 = !DILocation(line: 3140, column: 30, scope: !9153)
!9159 = !DILocation(line: 3140, column: 34, scope: !9153)
!9160 = !DILocation(line: 3140, column: 17, scope: !9153)
!9161 = !DILocalVariable(name: "gridSize", scope: !9153, file: !3, line: 3141, type: !17)
!9162 = !DILocation(line: 3141, column: 6, scope: !9153)
!9163 = !DILocation(line: 3141, column: 30, scope: !9153)
!9164 = !DILocation(line: 3141, column: 34, scope: !9153)
!9165 = !DILocation(line: 3141, column: 17, scope: !9153)
!9166 = !DILocalVariable(name: "numFinalVerts", scope: !9153, file: !3, line: 3142, type: !17)
!9167 = !DILocation(line: 3142, column: 6, scope: !9153)
!9168 = !DILocation(line: 3142, column: 23, scope: !9153)
!9169 = !DILocation(line: 3142, column: 27, scope: !9153)
!9170 = !DILocation(line: 3142, column: 33, scope: !9153)
!9171 = !DILocation(line: 3143, column: 23, scope: !9153)
!9172 = !DILocation(line: 3143, column: 27, scope: !9153)
!9173 = !DILocation(line: 3143, column: 33, scope: !9153)
!9174 = !DILocation(line: 3143, column: 47, scope: !9153)
!9175 = !DILocation(line: 3143, column: 56, scope: !9153)
!9176 = !DILocation(line: 3143, column: 44, scope: !9153)
!9177 = !DILocation(line: 3142, column: 44, scope: !9153)
!9178 = !DILocation(line: 3144, column: 23, scope: !9153)
!9179 = !DILocation(line: 3144, column: 27, scope: !9153)
!9180 = !DILocation(line: 3144, column: 33, scope: !9153)
!9181 = !DILocation(line: 3143, column: 61, scope: !9153)
!9182 = !DILocation(line: 3145, column: 23, scope: !9153)
!9183 = !DILocation(line: 3145, column: 27, scope: !9153)
!9184 = !DILocation(line: 3145, column: 40, scope: !9153)
!9185 = !DILocation(line: 3145, column: 49, scope: !9153)
!9186 = !DILocation(line: 3145, column: 58, scope: !9153)
!9187 = !DILocation(line: 3145, column: 67, scope: !9153)
!9188 = !DILocation(line: 3145, column: 75, scope: !9153)
!9189 = !DILocation(line: 3145, column: 84, scope: !9153)
!9190 = !DILocation(line: 3145, column: 72, scope: !9153)
!9191 = !DILocation(line: 3145, column: 54, scope: !9153)
!9192 = !DILocation(line: 3145, column: 36, scope: !9153)
!9193 = !DILocation(line: 3144, column: 44, scope: !9153)
!9194 = !DILocation(line: 3147, column: 9, scope: !9153)
!9195 = !DILocation(line: 3147, column: 2, scope: !9153)
!9196 = distinct !DISubprogram(name: "ccgSubSurf_getNumFinalEdges", scope: !3, file: !3, line: 3149, type: !8197, scopeLine: 3150, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, retainedNodes: !151)
!9197 = !DILocalVariable(name: "ss", arg: 1, scope: !9196, file: !3, line: 3149, type: !1589)
!9198 = !DILocation(line: 3149, column: 51, scope: !9196)
!9199 = !DILocalVariable(name: "edgeSize", scope: !9196, file: !3, line: 3151, type: !17)
!9200 = !DILocation(line: 3151, column: 6, scope: !9196)
!9201 = !DILocation(line: 3151, column: 30, scope: !9196)
!9202 = !DILocation(line: 3151, column: 34, scope: !9196)
!9203 = !DILocation(line: 3151, column: 17, scope: !9196)
!9204 = !DILocalVariable(name: "gridSize", scope: !9196, file: !3, line: 3152, type: !17)
!9205 = !DILocation(line: 3152, column: 6, scope: !9196)
!9206 = !DILocation(line: 3152, column: 30, scope: !9196)
!9207 = !DILocation(line: 3152, column: 34, scope: !9196)
!9208 = !DILocation(line: 3152, column: 17, scope: !9196)
!9209 = !DILocalVariable(name: "numFinalEdges", scope: !9196, file: !3, line: 3153, type: !17)
!9210 = !DILocation(line: 3153, column: 6, scope: !9196)
!9211 = !DILocation(line: 3153, column: 23, scope: !9196)
!9212 = !DILocation(line: 3153, column: 27, scope: !9196)
!9213 = !DILocation(line: 3153, column: 33, scope: !9196)
!9214 = !DILocation(line: 3153, column: 47, scope: !9196)
!9215 = !DILocation(line: 3153, column: 56, scope: !9196)
!9216 = !DILocation(line: 3153, column: 44, scope: !9196)
!9217 = !DILocation(line: 3154, column: 23, scope: !9196)
!9218 = !DILocation(line: 3154, column: 27, scope: !9196)
!9219 = !DILocation(line: 3154, column: 40, scope: !9196)
!9220 = !DILocation(line: 3154, column: 49, scope: !9196)
!9221 = !DILocation(line: 3154, column: 62, scope: !9196)
!9222 = !DILocation(line: 3154, column: 71, scope: !9196)
!9223 = !DILocation(line: 3154, column: 79, scope: !9196)
!9224 = !DILocation(line: 3154, column: 88, scope: !9196)
!9225 = !DILocation(line: 3154, column: 76, scope: !9196)
!9226 = !DILocation(line: 3154, column: 58, scope: !9196)
!9227 = !DILocation(line: 3154, column: 54, scope: !9196)
!9228 = !DILocation(line: 3154, column: 36, scope: !9196)
!9229 = !DILocation(line: 3153, column: 61, scope: !9196)
!9230 = !DILocation(line: 3156, column: 9, scope: !9196)
!9231 = !DILocation(line: 3156, column: 2, scope: !9196)
!9232 = distinct !DISubprogram(name: "ccgSubSurf_getNumFinalFaces", scope: !3, file: !3, line: 3158, type: !8197, scopeLine: 3159, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, retainedNodes: !151)
!9233 = !DILocalVariable(name: "ss", arg: 1, scope: !9232, file: !3, line: 3158, type: !1589)
!9234 = !DILocation(line: 3158, column: 51, scope: !9232)
!9235 = !DILocalVariable(name: "gridSize", scope: !9232, file: !3, line: 3160, type: !17)
!9236 = !DILocation(line: 3160, column: 6, scope: !9232)
!9237 = !DILocation(line: 3160, column: 30, scope: !9232)
!9238 = !DILocation(line: 3160, column: 34, scope: !9232)
!9239 = !DILocation(line: 3160, column: 17, scope: !9232)
!9240 = !DILocalVariable(name: "numFinalFaces", scope: !9232, file: !3, line: 3161, type: !17)
!9241 = !DILocation(line: 3161, column: 6, scope: !9232)
!9242 = !DILocation(line: 3161, column: 22, scope: !9232)
!9243 = !DILocation(line: 3161, column: 26, scope: !9232)
!9244 = !DILocation(line: 3161, column: 39, scope: !9232)
!9245 = !DILocation(line: 3161, column: 48, scope: !9232)
!9246 = !DILocation(line: 3161, column: 56, scope: !9232)
!9247 = !DILocation(line: 3161, column: 65, scope: !9232)
!9248 = !DILocation(line: 3161, column: 53, scope: !9232)
!9249 = !DILocation(line: 3161, column: 35, scope: !9232)
!9250 = !DILocation(line: 3162, column: 9, scope: !9232)
!9251 = !DILocation(line: 3162, column: 2, scope: !9232)
!9252 = distinct !DISubprogram(name: "CCG_key", scope: !3, file: !3, line: 3167, type: !9253, scopeLine: 3168, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, retainedNodes: !151)
!9253 = !DISubroutineType(types: !9254)
!9254 = !{null, !9255, !1589, !17}
!9255 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9256, size: 64)
!9256 = !DIDerivedType(tag: DW_TAG_typedef, name: "CCGKey", file: !9257, line: 78, baseType: !9258)
!9257 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_ccg.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!9258 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CCGKey", file: !9257, line: 53, size: 320, elements: !9259)
!9259 = !{!9260, !9261, !9262, !9263, !9264, !9265, !9266, !9267, !9268, !9269}
!9260 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !9258, file: !9257, line: 54, baseType: !17, size: 32)
!9261 = !DIDerivedType(tag: DW_TAG_member, name: "elem_size", scope: !9258, file: !9257, line: 58, baseType: !17, size: 32, offset: 32)
!9262 = !DIDerivedType(tag: DW_TAG_member, name: "grid_size", scope: !9258, file: !9257, line: 61, baseType: !17, size: 32, offset: 64)
!9263 = !DIDerivedType(tag: DW_TAG_member, name: "grid_area", scope: !9258, file: !9257, line: 63, baseType: !17, size: 32, offset: 96)
!9264 = !DIDerivedType(tag: DW_TAG_member, name: "grid_bytes", scope: !9258, file: !9257, line: 65, baseType: !17, size: 32, offset: 128)
!9265 = !DIDerivedType(tag: DW_TAG_member, name: "normal_offset", scope: !9258, file: !9257, line: 69, baseType: !17, size: 32, offset: 160)
!9266 = !DIDerivedType(tag: DW_TAG_member, name: "mask_offset", scope: !9258, file: !9257, line: 73, baseType: !17, size: 32, offset: 192)
!9267 = !DIDerivedType(tag: DW_TAG_member, name: "num_layers", scope: !9258, file: !9257, line: 75, baseType: !17, size: 32, offset: 224)
!9268 = !DIDerivedType(tag: DW_TAG_member, name: "has_normals", scope: !9258, file: !9257, line: 76, baseType: !17, size: 32, offset: 256)
!9269 = !DIDerivedType(tag: DW_TAG_member, name: "has_mask", scope: !9258, file: !9257, line: 77, baseType: !17, size: 32, offset: 288)
!9270 = !DILocalVariable(name: "key", arg: 1, scope: !9252, file: !3, line: 3167, type: !9255)
!9271 = !DILocation(line: 3167, column: 22, scope: !9252)
!9272 = !DILocalVariable(name: "ss", arg: 2, scope: !9252, file: !3, line: 3167, type: !1589)
!9273 = !DILocation(line: 3167, column: 45, scope: !9252)
!9274 = !DILocalVariable(name: "level", arg: 3, scope: !9252, file: !3, line: 3167, type: !17)
!9275 = !DILocation(line: 3167, column: 53, scope: !9252)
!9276 = !DILocation(line: 3169, column: 15, scope: !9252)
!9277 = !DILocation(line: 3169, column: 2, scope: !9252)
!9278 = !DILocation(line: 3169, column: 7, scope: !9252)
!9279 = !DILocation(line: 3169, column: 13, scope: !9252)
!9280 = !DILocation(line: 3171, column: 19, scope: !9252)
!9281 = !DILocation(line: 3171, column: 23, scope: !9252)
!9282 = !DILocation(line: 3171, column: 31, scope: !9252)
!9283 = !DILocation(line: 3171, column: 2, scope: !9252)
!9284 = !DILocation(line: 3171, column: 7, scope: !9252)
!9285 = !DILocation(line: 3171, column: 17, scope: !9252)
!9286 = !DILocation(line: 3172, column: 21, scope: !9252)
!9287 = !DILocation(line: 3172, column: 25, scope: !9252)
!9288 = !DILocation(line: 3172, column: 2, scope: !9252)
!9289 = !DILocation(line: 3172, column: 7, scope: !9252)
!9290 = !DILocation(line: 3172, column: 19, scope: !9252)
!9291 = !DILocation(line: 3173, column: 20, scope: !9252)
!9292 = !DILocation(line: 3173, column: 24, scope: !9252)
!9293 = !DILocation(line: 3173, column: 32, scope: !9252)
!9294 = !DILocation(line: 3173, column: 2, scope: !9252)
!9295 = !DILocation(line: 3173, column: 7, scope: !9252)
!9296 = !DILocation(line: 3173, column: 18, scope: !9252)
!9297 = !DILocation(line: 3177, column: 6, scope: !9298)
!9298 = distinct !DILexicalBlock(scope: !9252, file: !3, line: 3177, column: 6)
!9299 = !DILocation(line: 3177, column: 11, scope: !9298)
!9300 = !DILocation(line: 3177, column: 6, scope: !9252)
!9301 = !DILocation(line: 3178, column: 24, scope: !9298)
!9302 = !DILocation(line: 3178, column: 29, scope: !9298)
!9303 = !DILocation(line: 3178, column: 39, scope: !9298)
!9304 = !DILocation(line: 3178, column: 3, scope: !9298)
!9305 = !DILocation(line: 3178, column: 8, scope: !9298)
!9306 = !DILocation(line: 3178, column: 22, scope: !9298)
!9307 = !DILocation(line: 3180, column: 3, scope: !9298)
!9308 = !DILocation(line: 3180, column: 8, scope: !9298)
!9309 = !DILocation(line: 3180, column: 22, scope: !9298)
!9310 = !DILocation(line: 3182, column: 47, scope: !9252)
!9311 = !DILocation(line: 3182, column: 51, scope: !9252)
!9312 = !DILocation(line: 3182, column: 19, scope: !9252)
!9313 = !DILocation(line: 3182, column: 2, scope: !9252)
!9314 = !DILocation(line: 3182, column: 7, scope: !9252)
!9315 = !DILocation(line: 3182, column: 17, scope: !9252)
!9316 = !DILocation(line: 3183, column: 19, scope: !9252)
!9317 = !DILocation(line: 3183, column: 24, scope: !9252)
!9318 = !DILocation(line: 3183, column: 36, scope: !9252)
!9319 = !DILocation(line: 3183, column: 41, scope: !9252)
!9320 = !DILocation(line: 3183, column: 34, scope: !9252)
!9321 = !DILocation(line: 3183, column: 2, scope: !9252)
!9322 = !DILocation(line: 3183, column: 7, scope: !9252)
!9323 = !DILocation(line: 3183, column: 17, scope: !9252)
!9324 = !DILocation(line: 3184, column: 20, scope: !9252)
!9325 = !DILocation(line: 3184, column: 25, scope: !9252)
!9326 = !DILocation(line: 3184, column: 37, scope: !9252)
!9327 = !DILocation(line: 3184, column: 42, scope: !9252)
!9328 = !DILocation(line: 3184, column: 35, scope: !9252)
!9329 = !DILocation(line: 3184, column: 2, scope: !9252)
!9330 = !DILocation(line: 3184, column: 7, scope: !9252)
!9331 = !DILocation(line: 3184, column: 18, scope: !9252)
!9332 = !DILocation(line: 3186, column: 18, scope: !9252)
!9333 = !DILocation(line: 3186, column: 22, scope: !9252)
!9334 = !DILocation(line: 3186, column: 2, scope: !9252)
!9335 = !DILocation(line: 3186, column: 7, scope: !9252)
!9336 = !DILocation(line: 3186, column: 16, scope: !9252)
!9337 = !DILocation(line: 3187, column: 6, scope: !9338)
!9338 = distinct !DILexicalBlock(scope: !9252, file: !3, line: 3187, column: 6)
!9339 = !DILocation(line: 3187, column: 11, scope: !9338)
!9340 = !DILocation(line: 3187, column: 6, scope: !9252)
!9341 = !DILocation(line: 3188, column: 22, scope: !9338)
!9342 = !DILocation(line: 3188, column: 26, scope: !9338)
!9343 = !DILocation(line: 3188, column: 3, scope: !9338)
!9344 = !DILocation(line: 3188, column: 8, scope: !9338)
!9345 = !DILocation(line: 3188, column: 20, scope: !9338)
!9346 = !DILocation(line: 3190, column: 3, scope: !9338)
!9347 = !DILocation(line: 3190, column: 8, scope: !9338)
!9348 = !DILocation(line: 3190, column: 20, scope: !9338)
!9349 = !DILocation(line: 3191, column: 1, scope: !9252)
!9350 = distinct !DISubprogram(name: "CCG_key_top_level", scope: !3, file: !3, line: 3193, type: !9351, scopeLine: 3194, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, retainedNodes: !151)
!9351 = !DISubroutineType(types: !9352)
!9352 = !{null, !9255, !1589}
!9353 = !DILocalVariable(name: "key", arg: 1, scope: !9350, file: !3, line: 3193, type: !9255)
!9354 = !DILocation(line: 3193, column: 32, scope: !9350)
!9355 = !DILocalVariable(name: "ss", arg: 2, scope: !9350, file: !3, line: 3193, type: !1589)
!9356 = !DILocation(line: 3193, column: 55, scope: !9350)
!9357 = !DILocation(line: 3195, column: 10, scope: !9350)
!9358 = !DILocation(line: 3195, column: 15, scope: !9350)
!9359 = !DILocation(line: 3195, column: 51, scope: !9350)
!9360 = !DILocation(line: 3195, column: 19, scope: !9350)
!9361 = !DILocation(line: 3195, column: 2, scope: !9350)
!9362 = !DILocation(line: 3196, column: 1, scope: !9350)
!9363 = distinct !DISubprogram(name: "_stdAllocator_alloc", scope: !3, file: !3, line: 224, type: !13, scopeLine: 225, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !30, retainedNodes: !151)
!9364 = !DILocalVariable(name: "UNUSED_a", arg: 1, scope: !9363, file: !3, line: 224, type: !16)
!9365 = !DILocation(line: 224, column: 50, scope: !9363)
!9366 = !DILocalVariable(name: "numBytes", arg: 2, scope: !9363, file: !3, line: 224, type: !17)
!9367 = !DILocation(line: 224, column: 65, scope: !9363)
!9368 = !DILocation(line: 226, column: 16, scope: !9363)
!9369 = !DILocation(line: 226, column: 9, scope: !9363)
!9370 = !DILocation(line: 226, column: 2, scope: !9363)
!9371 = distinct !DISubprogram(name: "_stdAllocator_realloc", scope: !3, file: !3, line: 228, type: !20, scopeLine: 229, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !30, retainedNodes: !151)
!9372 = !DILocalVariable(name: "UNUSED_a", arg: 1, scope: !9371, file: !3, line: 228, type: !16)
!9373 = !DILocation(line: 228, column: 52, scope: !9371)
!9374 = !DILocalVariable(name: "ptr", arg: 2, scope: !9371, file: !3, line: 228, type: !15)
!9375 = !DILocation(line: 228, column: 69, scope: !9371)
!9376 = !DILocalVariable(name: "newSize", arg: 3, scope: !9371, file: !3, line: 228, type: !17)
!9377 = !DILocation(line: 228, column: 78, scope: !9371)
!9378 = !DILocalVariable(name: "UNUSED_oldSize", arg: 4, scope: !9371, file: !3, line: 228, type: !17)
!9379 = !DILocation(line: 228, column: 91, scope: !9371)
!9380 = !DILocation(line: 230, column: 17, scope: !9371)
!9381 = !DILocation(line: 230, column: 22, scope: !9371)
!9382 = !DILocation(line: 230, column: 9, scope: !9371)
!9383 = !DILocation(line: 230, column: 2, scope: !9371)
!9384 = distinct !DISubprogram(name: "_stdAllocator_free", scope: !3, file: !3, line: 232, type: !24, scopeLine: 233, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !30, retainedNodes: !151)
!9385 = !DILocalVariable(name: "UNUSED_a", arg: 1, scope: !9384, file: !3, line: 232, type: !16)
!9386 = !DILocation(line: 232, column: 48, scope: !9384)
!9387 = !DILocalVariable(name: "ptr", arg: 2, scope: !9384, file: !3, line: 232, type: !15)
!9388 = !DILocation(line: 232, column: 65, scope: !9384)
!9389 = !DILocation(line: 234, column: 7, scope: !9384)
!9390 = !DILocation(line: 234, column: 2, scope: !9384)
!9391 = !DILocation(line: 235, column: 1, scope: !9384)
!9392 = distinct !DISubprogram(name: "_vert_remEdge", scope: !3, file: !3, line: 529, type: !9393, scopeLine: 530, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !30, retainedNodes: !151)
!9393 = !DISubroutineType(types: !9394)
!9394 = !{null, !70, !84}
!9395 = !DILocalVariable(name: "v", arg: 1, scope: !9392, file: !3, line: 529, type: !70)
!9396 = !DILocation(line: 529, column: 36, scope: !9392)
!9397 = !DILocalVariable(name: "e", arg: 2, scope: !9392, file: !3, line: 529, type: !84)
!9398 = !DILocation(line: 529, column: 48, scope: !9392)
!9399 = !DILocalVariable(name: "i", scope: !9392, file: !3, line: 531, type: !17)
!9400 = !DILocation(line: 531, column: 6, scope: !9392)
!9401 = !DILocation(line: 532, column: 9, scope: !9402)
!9402 = distinct !DILexicalBlock(scope: !9392, file: !3, line: 532, column: 2)
!9403 = !DILocation(line: 532, column: 7, scope: !9402)
!9404 = !DILocation(line: 532, column: 14, scope: !9405)
!9405 = distinct !DILexicalBlock(scope: !9402, file: !3, line: 532, column: 2)
!9406 = !DILocation(line: 532, column: 18, scope: !9405)
!9407 = !DILocation(line: 532, column: 21, scope: !9405)
!9408 = !DILocation(line: 532, column: 16, scope: !9405)
!9409 = !DILocation(line: 532, column: 2, scope: !9402)
!9410 = !DILocation(line: 533, column: 7, scope: !9411)
!9411 = distinct !DILexicalBlock(scope: !9412, file: !3, line: 533, column: 7)
!9412 = distinct !DILexicalBlock(scope: !9405, file: !3, line: 532, column: 36)
!9413 = !DILocation(line: 533, column: 10, scope: !9411)
!9414 = !DILocation(line: 533, column: 16, scope: !9411)
!9415 = !DILocation(line: 533, column: 22, scope: !9411)
!9416 = !DILocation(line: 533, column: 19, scope: !9411)
!9417 = !DILocation(line: 533, column: 7, scope: !9412)
!9418 = !DILocation(line: 534, column: 18, scope: !9419)
!9419 = distinct !DILexicalBlock(scope: !9411, file: !3, line: 533, column: 25)
!9420 = !DILocation(line: 534, column: 21, scope: !9419)
!9421 = !DILocation(line: 534, column: 29, scope: !9419)
!9422 = !DILocation(line: 534, column: 32, scope: !9419)
!9423 = !DILocation(line: 534, column: 27, scope: !9419)
!9424 = !DILocation(line: 534, column: 4, scope: !9419)
!9425 = !DILocation(line: 534, column: 7, scope: !9419)
!9426 = !DILocation(line: 534, column: 13, scope: !9419)
!9427 = !DILocation(line: 534, column: 16, scope: !9419)
!9428 = !DILocation(line: 535, column: 4, scope: !9419)
!9429 = !DILocation(line: 537, column: 2, scope: !9412)
!9430 = !DILocation(line: 532, column: 32, scope: !9405)
!9431 = !DILocation(line: 532, column: 2, scope: !9405)
!9432 = distinct !{!9432, !9409, !9433}
!9433 = !DILocation(line: 537, column: 2, scope: !9402)
!9434 = !DILocation(line: 538, column: 1, scope: !9392)
!9435 = distinct !DISubprogram(name: "_vert_remFace", scope: !3, file: !3, line: 539, type: !9436, scopeLine: 540, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !30, retainedNodes: !151)
!9436 = !DISubroutineType(types: !9437)
!9437 = !{null, !70, !97}
!9438 = !DILocalVariable(name: "v", arg: 1, scope: !9435, file: !3, line: 539, type: !70)
!9439 = !DILocation(line: 539, column: 36, scope: !9435)
!9440 = !DILocalVariable(name: "f", arg: 2, scope: !9435, file: !3, line: 539, type: !97)
!9441 = !DILocation(line: 539, column: 48, scope: !9435)
!9442 = !DILocalVariable(name: "i", scope: !9435, file: !3, line: 541, type: !17)
!9443 = !DILocation(line: 541, column: 6, scope: !9435)
!9444 = !DILocation(line: 542, column: 9, scope: !9445)
!9445 = distinct !DILexicalBlock(scope: !9435, file: !3, line: 542, column: 2)
!9446 = !DILocation(line: 542, column: 7, scope: !9445)
!9447 = !DILocation(line: 542, column: 14, scope: !9448)
!9448 = distinct !DILexicalBlock(scope: !9445, file: !3, line: 542, column: 2)
!9449 = !DILocation(line: 542, column: 18, scope: !9448)
!9450 = !DILocation(line: 542, column: 21, scope: !9448)
!9451 = !DILocation(line: 542, column: 16, scope: !9448)
!9452 = !DILocation(line: 542, column: 2, scope: !9445)
!9453 = !DILocation(line: 543, column: 7, scope: !9454)
!9454 = distinct !DILexicalBlock(scope: !9455, file: !3, line: 543, column: 7)
!9455 = distinct !DILexicalBlock(scope: !9448, file: !3, line: 542, column: 36)
!9456 = !DILocation(line: 543, column: 10, scope: !9454)
!9457 = !DILocation(line: 543, column: 16, scope: !9454)
!9458 = !DILocation(line: 543, column: 22, scope: !9454)
!9459 = !DILocation(line: 543, column: 19, scope: !9454)
!9460 = !DILocation(line: 543, column: 7, scope: !9455)
!9461 = !DILocation(line: 544, column: 18, scope: !9462)
!9462 = distinct !DILexicalBlock(scope: !9454, file: !3, line: 543, column: 25)
!9463 = !DILocation(line: 544, column: 21, scope: !9462)
!9464 = !DILocation(line: 544, column: 29, scope: !9462)
!9465 = !DILocation(line: 544, column: 32, scope: !9462)
!9466 = !DILocation(line: 544, column: 27, scope: !9462)
!9467 = !DILocation(line: 544, column: 4, scope: !9462)
!9468 = !DILocation(line: 544, column: 7, scope: !9462)
!9469 = !DILocation(line: 544, column: 13, scope: !9462)
!9470 = !DILocation(line: 544, column: 16, scope: !9462)
!9471 = !DILocation(line: 545, column: 4, scope: !9462)
!9472 = !DILocation(line: 547, column: 2, scope: !9455)
!9473 = !DILocation(line: 542, column: 32, scope: !9448)
!9474 = !DILocation(line: 542, column: 2, scope: !9448)
!9475 = distinct !{!9475, !9452, !9476}
!9476 = !DILocation(line: 547, column: 2, scope: !9445)
!9477 = !DILocation(line: 548, column: 1, scope: !9435)
!9478 = distinct !DISubprogram(name: "_edge_remFace", scope: !3, file: !3, line: 629, type: !9479, scopeLine: 630, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !30, retainedNodes: !151)
!9479 = !DISubroutineType(types: !9480)
!9480 = !{null, !84, !97}
!9481 = !DILocalVariable(name: "e", arg: 1, scope: !9478, file: !3, line: 629, type: !84)
!9482 = !DILocation(line: 629, column: 36, scope: !9478)
!9483 = !DILocalVariable(name: "f", arg: 2, scope: !9478, file: !3, line: 629, type: !97)
!9484 = !DILocation(line: 629, column: 48, scope: !9478)
!9485 = !DILocalVariable(name: "i", scope: !9478, file: !3, line: 631, type: !17)
!9486 = !DILocation(line: 631, column: 6, scope: !9478)
!9487 = !DILocation(line: 632, column: 9, scope: !9488)
!9488 = distinct !DILexicalBlock(scope: !9478, file: !3, line: 632, column: 2)
!9489 = !DILocation(line: 632, column: 7, scope: !9488)
!9490 = !DILocation(line: 632, column: 14, scope: !9491)
!9491 = distinct !DILexicalBlock(scope: !9488, file: !3, line: 632, column: 2)
!9492 = !DILocation(line: 632, column: 18, scope: !9491)
!9493 = !DILocation(line: 632, column: 21, scope: !9491)
!9494 = !DILocation(line: 632, column: 16, scope: !9491)
!9495 = !DILocation(line: 632, column: 2, scope: !9488)
!9496 = !DILocation(line: 633, column: 7, scope: !9497)
!9497 = distinct !DILexicalBlock(scope: !9498, file: !3, line: 633, column: 7)
!9498 = distinct !DILexicalBlock(scope: !9491, file: !3, line: 632, column: 36)
!9499 = !DILocation(line: 633, column: 10, scope: !9497)
!9500 = !DILocation(line: 633, column: 16, scope: !9497)
!9501 = !DILocation(line: 633, column: 22, scope: !9497)
!9502 = !DILocation(line: 633, column: 19, scope: !9497)
!9503 = !DILocation(line: 633, column: 7, scope: !9498)
!9504 = !DILocation(line: 634, column: 18, scope: !9505)
!9505 = distinct !DILexicalBlock(scope: !9497, file: !3, line: 633, column: 25)
!9506 = !DILocation(line: 634, column: 21, scope: !9505)
!9507 = !DILocation(line: 634, column: 29, scope: !9505)
!9508 = !DILocation(line: 634, column: 32, scope: !9505)
!9509 = !DILocation(line: 634, column: 27, scope: !9505)
!9510 = !DILocation(line: 634, column: 4, scope: !9505)
!9511 = !DILocation(line: 634, column: 7, scope: !9505)
!9512 = !DILocation(line: 634, column: 13, scope: !9505)
!9513 = !DILocation(line: 634, column: 16, scope: !9505)
!9514 = !DILocation(line: 635, column: 4, scope: !9505)
!9515 = !DILocation(line: 637, column: 2, scope: !9498)
!9516 = !DILocation(line: 632, column: 32, scope: !9491)
!9517 = !DILocation(line: 632, column: 2, scope: !9491)
!9518 = distinct !{!9518, !9495, !9519}
!9519 = !DILocation(line: 637, column: 2, scope: !9488)
!9520 = !DILocation(line: 638, column: 1, scope: !9478)
!9521 = distinct !DISubprogram(name: "_vert_addEdge", scope: !3, file: !3, line: 549, type: !9522, scopeLine: 550, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !30, retainedNodes: !151)
!9522 = !DISubroutineType(types: !9523)
!9523 = !{null, !70, !84, !187}
!9524 = !DILocalVariable(name: "v", arg: 1, scope: !9521, file: !3, line: 549, type: !70)
!9525 = !DILocation(line: 549, column: 36, scope: !9521)
!9526 = !DILocalVariable(name: "e", arg: 2, scope: !9521, file: !3, line: 549, type: !84)
!9527 = !DILocation(line: 549, column: 48, scope: !9521)
!9528 = !DILocalVariable(name: "ss", arg: 3, scope: !9521, file: !3, line: 549, type: !187)
!9529 = !DILocation(line: 549, column: 63, scope: !9521)
!9530 = !DILocation(line: 551, column: 13, scope: !9521)
!9531 = !DILocation(line: 551, column: 2, scope: !9521)
!9532 = !DILocation(line: 551, column: 5, scope: !9521)
!9533 = !DILocation(line: 551, column: 11, scope: !9521)
!9534 = !DILocation(line: 552, column: 28, scope: !9521)
!9535 = !DILocation(line: 552, column: 2, scope: !9521)
!9536 = !DILocation(line: 552, column: 5, scope: !9521)
!9537 = !DILocation(line: 552, column: 11, scope: !9521)
!9538 = !DILocation(line: 552, column: 14, scope: !9521)
!9539 = !DILocation(line: 552, column: 22, scope: !9521)
!9540 = !DILocation(line: 552, column: 26, scope: !9521)
!9541 = !DILocation(line: 553, column: 1, scope: !9521)
!9542 = distinct !DISubprogram(name: "_vert_addFace", scope: !3, file: !3, line: 554, type: !9543, scopeLine: 555, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !30, retainedNodes: !151)
!9543 = !DISubroutineType(types: !9544)
!9544 = !{null, !70, !97, !187}
!9545 = !DILocalVariable(name: "v", arg: 1, scope: !9542, file: !3, line: 554, type: !70)
!9546 = !DILocation(line: 554, column: 36, scope: !9542)
!9547 = !DILocalVariable(name: "f", arg: 2, scope: !9542, file: !3, line: 554, type: !97)
!9548 = !DILocation(line: 554, column: 48, scope: !9542)
!9549 = !DILocalVariable(name: "ss", arg: 3, scope: !9542, file: !3, line: 554, type: !187)
!9550 = !DILocation(line: 554, column: 63, scope: !9542)
!9551 = !DILocation(line: 556, column: 13, scope: !9542)
!9552 = !DILocation(line: 556, column: 2, scope: !9542)
!9553 = !DILocation(line: 556, column: 5, scope: !9542)
!9554 = !DILocation(line: 556, column: 11, scope: !9542)
!9555 = !DILocation(line: 557, column: 28, scope: !9542)
!9556 = !DILocation(line: 557, column: 2, scope: !9542)
!9557 = !DILocation(line: 557, column: 5, scope: !9542)
!9558 = !DILocation(line: 557, column: 11, scope: !9542)
!9559 = !DILocation(line: 557, column: 14, scope: !9542)
!9560 = !DILocation(line: 557, column: 22, scope: !9542)
!9561 = !DILocation(line: 557, column: 26, scope: !9542)
!9562 = !DILocation(line: 558, column: 1, scope: !9542)
!9563 = distinct !DISubprogram(name: "_edge_addFace", scope: !3, file: !3, line: 639, type: !9564, scopeLine: 640, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !30, retainedNodes: !151)
!9564 = !DISubroutineType(types: !9565)
!9565 = !{null, !84, !97, !187}
!9566 = !DILocalVariable(name: "e", arg: 1, scope: !9563, file: !3, line: 639, type: !84)
!9567 = !DILocation(line: 639, column: 36, scope: !9563)
!9568 = !DILocalVariable(name: "f", arg: 2, scope: !9563, file: !3, line: 639, type: !97)
!9569 = !DILocation(line: 639, column: 48, scope: !9563)
!9570 = !DILocalVariable(name: "ss", arg: 3, scope: !9563, file: !3, line: 639, type: !187)
!9571 = !DILocation(line: 639, column: 63, scope: !9563)
!9572 = !DILocation(line: 641, column: 13, scope: !9563)
!9573 = !DILocation(line: 641, column: 2, scope: !9563)
!9574 = !DILocation(line: 641, column: 5, scope: !9563)
!9575 = !DILocation(line: 641, column: 11, scope: !9563)
!9576 = !DILocation(line: 642, column: 28, scope: !9563)
!9577 = !DILocation(line: 642, column: 2, scope: !9563)
!9578 = !DILocation(line: 642, column: 5, scope: !9563)
!9579 = !DILocation(line: 642, column: 11, scope: !9563)
!9580 = !DILocation(line: 642, column: 14, scope: !9563)
!9581 = !DILocation(line: 642, column: 22, scope: !9563)
!9582 = !DILocation(line: 642, column: 26, scope: !9563)
!9583 = !DILocation(line: 643, column: 1, scope: !9563)
!9584 = distinct !DISubprogram(name: "EDGE_getSharpness", scope: !3, file: !3, line: 694, type: !9585, scopeLine: 695, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !30, retainedNodes: !151)
!9585 = !DISubroutineType(types: !9586)
!9586 = !{!69, !84, !17}
!9587 = !DILocalVariable(name: "e", arg: 1, scope: !9584, file: !3, line: 694, type: !84)
!9588 = !DILocation(line: 694, column: 41, scope: !9584)
!9589 = !DILocalVariable(name: "lvl", arg: 2, scope: !9584, file: !3, line: 694, type: !17)
!9590 = !DILocation(line: 694, column: 48, scope: !9584)
!9591 = !DILocation(line: 696, column: 7, scope: !9592)
!9592 = distinct !DILexicalBlock(scope: !9584, file: !3, line: 696, column: 6)
!9593 = !DILocation(line: 696, column: 6, scope: !9584)
!9594 = !DILocation(line: 697, column: 10, scope: !9592)
!9595 = !DILocation(line: 697, column: 13, scope: !9592)
!9596 = !DILocation(line: 697, column: 3, scope: !9592)
!9597 = !DILocation(line: 698, column: 12, scope: !9598)
!9598 = distinct !DILexicalBlock(scope: !9592, file: !3, line: 698, column: 11)
!9599 = !DILocation(line: 698, column: 15, scope: !9598)
!9600 = !DILocation(line: 698, column: 11, scope: !9592)
!9601 = !DILocation(line: 699, column: 3, scope: !9598)
!9602 = !DILocation(line: 700, column: 11, scope: !9603)
!9603 = distinct !DILexicalBlock(scope: !9598, file: !3, line: 700, column: 11)
!9604 = !DILocation(line: 700, column: 14, scope: !9603)
!9605 = !DILocation(line: 700, column: 23, scope: !9603)
!9606 = !DILocation(line: 700, column: 21, scope: !9603)
!9607 = !DILocation(line: 700, column: 27, scope: !9603)
!9608 = !DILocation(line: 700, column: 11, scope: !9598)
!9609 = !DILocation(line: 701, column: 3, scope: !9603)
!9610 = !DILocation(line: 703, column: 10, scope: !9603)
!9611 = !DILocation(line: 703, column: 13, scope: !9603)
!9612 = !DILocation(line: 703, column: 22, scope: !9603)
!9613 = !DILocation(line: 703, column: 20, scope: !9603)
!9614 = !DILocation(line: 703, column: 3, scope: !9603)
!9615 = !DILocation(line: 704, column: 1, scope: !9584)
!9616 = distinct !DISubprogram(name: "_edge_isBoundary", scope: !3, file: !3, line: 644, type: !9617, scopeLine: 645, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !30, retainedNodes: !151)
!9617 = !DISubroutineType(types: !9618)
!9618 = !{!17, !9619}
!9619 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9620, size: 64)
!9620 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !85)
!9621 = !DILocalVariable(name: "e", arg: 1, scope: !9616, file: !3, line: 644, type: !9619)
!9622 = !DILocation(line: 644, column: 44, scope: !9616)
!9623 = !DILocation(line: 646, column: 9, scope: !9616)
!9624 = !DILocation(line: 646, column: 12, scope: !9616)
!9625 = !DILocation(line: 646, column: 21, scope: !9616)
!9626 = !DILocation(line: 646, column: 2, scope: !9616)
!9627 = distinct !DISubprogram(name: "VertDataSub", scope: !3, file: !3, line: 482, type: !1585, scopeLine: 483, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !30, retainedNodes: !151)
!9628 = !DILocalVariable(name: "a", arg: 1, scope: !9627, file: !3, line: 482, type: !68)
!9629 = !DILocation(line: 482, column: 31, scope: !9627)
!9630 = !DILocalVariable(name: "b", arg: 2, scope: !9627, file: !3, line: 482, type: !1587)
!9631 = !DILocation(line: 482, column: 48, scope: !9627)
!9632 = !DILocalVariable(name: "ss", arg: 3, scope: !9627, file: !3, line: 482, type: !1589)
!9633 = !DILocation(line: 482, column: 71, scope: !9627)
!9634 = !DILocalVariable(name: "i", scope: !9627, file: !3, line: 484, type: !17)
!9635 = !DILocation(line: 484, column: 6, scope: !9627)
!9636 = !DILocation(line: 485, column: 9, scope: !9637)
!9637 = distinct !DILexicalBlock(scope: !9627, file: !3, line: 485, column: 2)
!9638 = !DILocation(line: 485, column: 7, scope: !9637)
!9639 = !DILocation(line: 485, column: 14, scope: !9640)
!9640 = distinct !DILexicalBlock(scope: !9637, file: !3, line: 485, column: 2)
!9641 = !DILocation(line: 485, column: 18, scope: !9640)
!9642 = !DILocation(line: 485, column: 22, scope: !9640)
!9643 = !DILocation(line: 485, column: 30, scope: !9640)
!9644 = !DILocation(line: 485, column: 16, scope: !9640)
!9645 = !DILocation(line: 485, column: 2, scope: !9637)
!9646 = !DILocation(line: 486, column: 11, scope: !9640)
!9647 = !DILocation(line: 486, column: 13, scope: !9640)
!9648 = !DILocation(line: 486, column: 3, scope: !9640)
!9649 = !DILocation(line: 486, column: 5, scope: !9640)
!9650 = !DILocation(line: 486, column: 8, scope: !9640)
!9651 = !DILocation(line: 485, column: 42, scope: !9640)
!9652 = !DILocation(line: 485, column: 2, scope: !9640)
!9653 = distinct !{!9653, !9645, !9654}
!9654 = !DILocation(line: 486, column: 14, scope: !9637)
!9655 = !DILocation(line: 487, column: 1, scope: !9627)
!9656 = distinct !DISubprogram(name: "VERT_seam", scope: !3, file: !3, line: 597, type: !9657, scopeLine: 598, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !30, retainedNodes: !151)
!9657 = !DISubroutineType(types: !9658)
!9658 = !{!17, !2611}
!9659 = !DILocalVariable(name: "v", arg: 1, scope: !9656, file: !3, line: 597, type: !2611)
!9660 = !DILocation(line: 597, column: 37, scope: !9656)
!9661 = !DILocation(line: 599, column: 11, scope: !9656)
!9662 = !DILocation(line: 599, column: 14, scope: !9656)
!9663 = !DILocation(line: 599, column: 20, scope: !9656)
!9664 = !DILocation(line: 599, column: 34, scope: !9656)
!9665 = !DILocation(line: 599, column: 2, scope: !9656)
!9666 = distinct !DISubprogram(name: "_vert_isBoundary", scope: !3, file: !3, line: 572, type: !9657, scopeLine: 573, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !30, retainedNodes: !151)
!9667 = !DILocalVariable(name: "v", arg: 1, scope: !9666, file: !3, line: 572, type: !2611)
!9668 = !DILocation(line: 572, column: 44, scope: !9666)
!9669 = !DILocalVariable(name: "i", scope: !9666, file: !3, line: 574, type: !17)
!9670 = !DILocation(line: 574, column: 6, scope: !9666)
!9671 = !DILocation(line: 575, column: 9, scope: !9672)
!9672 = distinct !DILexicalBlock(scope: !9666, file: !3, line: 575, column: 2)
!9673 = !DILocation(line: 575, column: 7, scope: !9672)
!9674 = !DILocation(line: 575, column: 14, scope: !9675)
!9675 = distinct !DILexicalBlock(scope: !9672, file: !3, line: 575, column: 2)
!9676 = !DILocation(line: 575, column: 18, scope: !9675)
!9677 = !DILocation(line: 575, column: 21, scope: !9675)
!9678 = !DILocation(line: 575, column: 16, scope: !9675)
!9679 = !DILocation(line: 575, column: 2, scope: !9672)
!9680 = !DILocation(line: 576, column: 24, scope: !9681)
!9681 = distinct !DILexicalBlock(scope: !9675, file: !3, line: 576, column: 7)
!9682 = !DILocation(line: 576, column: 27, scope: !9681)
!9683 = !DILocation(line: 576, column: 33, scope: !9681)
!9684 = !DILocation(line: 576, column: 7, scope: !9681)
!9685 = !DILocation(line: 576, column: 7, scope: !9675)
!9686 = !DILocation(line: 577, column: 4, scope: !9681)
!9687 = !DILocation(line: 576, column: 35, scope: !9681)
!9688 = !DILocation(line: 575, column: 32, scope: !9675)
!9689 = !DILocation(line: 575, column: 2, scope: !9675)
!9690 = distinct !{!9690, !9679, !9691}
!9691 = !DILocation(line: 577, column: 11, scope: !9672)
!9692 = !DILocation(line: 578, column: 2, scope: !9666)
!9693 = !DILocation(line: 579, column: 1, scope: !9666)
!9694 = distinct !DISubprogram(name: "_edge_getOtherVert", scope: !3, file: !3, line: 649, type: !9695, scopeLine: 650, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !30, retainedNodes: !151)
!9695 = !DISubroutineType(types: !9696)
!9696 = !{!70, !84, !70}
!9697 = !DILocalVariable(name: "e", arg: 1, scope: !9694, file: !3, line: 649, type: !84)
!9698 = !DILocation(line: 649, column: 45, scope: !9694)
!9699 = !DILocalVariable(name: "vQ", arg: 2, scope: !9694, file: !3, line: 649, type: !70)
!9700 = !DILocation(line: 649, column: 57, scope: !9694)
!9701 = !DILocation(line: 651, column: 6, scope: !9702)
!9702 = distinct !DILexicalBlock(scope: !9694, file: !3, line: 651, column: 6)
!9703 = !DILocation(line: 651, column: 12, scope: !9702)
!9704 = !DILocation(line: 651, column: 15, scope: !9702)
!9705 = !DILocation(line: 651, column: 9, scope: !9702)
!9706 = !DILocation(line: 651, column: 6, scope: !9694)
!9707 = !DILocation(line: 652, column: 10, scope: !9708)
!9708 = distinct !DILexicalBlock(scope: !9702, file: !3, line: 651, column: 19)
!9709 = !DILocation(line: 652, column: 13, scope: !9708)
!9710 = !DILocation(line: 652, column: 3, scope: !9708)
!9711 = !DILocation(line: 655, column: 10, scope: !9712)
!9712 = distinct !DILexicalBlock(scope: !9702, file: !3, line: 654, column: 7)
!9713 = !DILocation(line: 655, column: 13, scope: !9712)
!9714 = !DILocation(line: 655, column: 3, scope: !9712)
!9715 = !DILocation(line: 657, column: 1, scope: !9694)
!9716 = distinct !DISubprogram(name: "ccg_spacing", scope: !3, file: !3, line: 280, type: !173, scopeLine: 281, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !30, retainedNodes: !151)
!9717 = !DILocalVariable(name: "high_level", arg: 1, scope: !9716, file: !3, line: 280, type: !17)
!9718 = !DILocation(line: 280, column: 32, scope: !9716)
!9719 = !DILocalVariable(name: "low_level", arg: 2, scope: !9716, file: !3, line: 280, type: !17)
!9720 = !DILocation(line: 280, column: 48, scope: !9716)
!9721 = !DILocation(line: 286, column: 15, scope: !9716)
!9722 = !DILocation(line: 286, column: 28, scope: !9716)
!9723 = !DILocation(line: 286, column: 26, scope: !9716)
!9724 = !DILocation(line: 286, column: 11, scope: !9716)
!9725 = !DILocation(line: 286, column: 2, scope: !9716)
!9726 = distinct !DISubprogram(name: "_face_getIFNo", scope: !3, file: !3, line: 759, type: !9727, scopeLine: 760, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !30, retainedNodes: !151)
!9727 = !DISubroutineType(types: !9728)
!9728 = !{!68, !97, !17, !17, !17, !17, !17, !17, !17}
!9729 = !DILocalVariable(name: "f", arg: 1, scope: !9726, file: !3, line: 759, type: !97)
!9730 = !DILocation(line: 759, column: 42, scope: !9726)
!9731 = !DILocalVariable(name: "lvl", arg: 2, scope: !9726, file: !3, line: 759, type: !17)
!9732 = !DILocation(line: 759, column: 49, scope: !9726)
!9733 = !DILocalVariable(name: "S", arg: 3, scope: !9726, file: !3, line: 759, type: !17)
!9734 = !DILocation(line: 759, column: 58, scope: !9726)
!9735 = !DILocalVariable(name: "x", arg: 4, scope: !9726, file: !3, line: 759, type: !17)
!9736 = !DILocation(line: 759, column: 65, scope: !9726)
!9737 = !DILocalVariable(name: "y", arg: 5, scope: !9726, file: !3, line: 759, type: !17)
!9738 = !DILocation(line: 759, column: 72, scope: !9726)
!9739 = !DILocalVariable(name: "levels", arg: 6, scope: !9726, file: !3, line: 759, type: !17)
!9740 = !DILocation(line: 759, column: 79, scope: !9726)
!9741 = !DILocalVariable(name: "dataSize", arg: 7, scope: !9726, file: !3, line: 759, type: !17)
!9742 = !DILocation(line: 759, column: 91, scope: !9726)
!9743 = !DILocalVariable(name: "normalDataOffset", arg: 8, scope: !9726, file: !3, line: 759, type: !17)
!9744 = !DILocation(line: 759, column: 105, scope: !9726)
!9745 = !DILocalVariable(name: "maxGridSize", scope: !9726, file: !3, line: 761, type: !17)
!9746 = !DILocation(line: 761, column: 6, scope: !9726)
!9747 = !DILocation(line: 761, column: 33, scope: !9726)
!9748 = !DILocation(line: 761, column: 20, scope: !9726)
!9749 = !DILocalVariable(name: "spacing", scope: !9726, file: !3, line: 762, type: !17)
!9750 = !DILocation(line: 762, column: 6, scope: !9726)
!9751 = !DILocation(line: 762, column: 28, scope: !9726)
!9752 = !DILocation(line: 762, column: 36, scope: !9726)
!9753 = !DILocation(line: 762, column: 16, scope: !9726)
!9754 = !DILocalVariable(name: "gridBase", scope: !9726, file: !3, line: 763, type: !142)
!9755 = !DILocation(line: 763, column: 8, scope: !9726)
!9756 = !DILocation(line: 763, column: 38, scope: !9726)
!9757 = !DILocation(line: 763, column: 19, scope: !9726)
!9758 = !DILocation(line: 763, column: 43, scope: !9726)
!9759 = !DILocation(line: 763, column: 59, scope: !9726)
!9760 = !DILocation(line: 763, column: 64, scope: !9726)
!9761 = !DILocation(line: 763, column: 78, scope: !9726)
!9762 = !DILocation(line: 763, column: 92, scope: !9726)
!9763 = !DILocation(line: 763, column: 90, scope: !9726)
!9764 = !DILocation(line: 763, column: 76, scope: !9726)
!9765 = !DILocation(line: 763, column: 61, scope: !9726)
!9766 = !DILocation(line: 763, column: 57, scope: !9726)
!9767 = !DILocation(line: 763, column: 52, scope: !9726)
!9768 = !DILocation(line: 763, column: 41, scope: !9726)
!9769 = !DILocation(line: 764, column: 20, scope: !9726)
!9770 = !DILocation(line: 764, column: 29, scope: !9726)
!9771 = !DILocation(line: 764, column: 41, scope: !9726)
!9772 = !DILocation(line: 764, column: 56, scope: !9726)
!9773 = !DILocation(line: 764, column: 60, scope: !9726)
!9774 = !DILocation(line: 764, column: 58, scope: !9726)
!9775 = !DILocation(line: 764, column: 74, scope: !9726)
!9776 = !DILocation(line: 764, column: 72, scope: !9726)
!9777 = !DILocation(line: 764, column: 79, scope: !9726)
!9778 = !DILocation(line: 764, column: 77, scope: !9726)
!9779 = !DILocation(line: 764, column: 53, scope: !9726)
!9780 = !DILocation(line: 764, column: 38, scope: !9726)
!9781 = !DILocation(line: 764, column: 90, scope: !9726)
!9782 = !DILocation(line: 764, column: 88, scope: !9726)
!9783 = !DILocation(line: 764, column: 9, scope: !9726)
!9784 = !DILocation(line: 764, column: 2, scope: !9726)
!9785 = distinct !DISubprogram(name: "_face_calcIFNo", scope: !3, file: !3, line: 817, type: !9786, scopeLine: 818, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !30, retainedNodes: !151)
!9786 = !DISubroutineType(types: !9787)
!9787 = !{null, !97, !17, !17, !17, !17, !68, !17, !17}
!9788 = !DILocalVariable(name: "f", arg: 1, scope: !9785, file: !3, line: 817, type: !97)
!9789 = !DILocation(line: 817, column: 37, scope: !9785)
!9790 = !DILocalVariable(name: "lvl", arg: 2, scope: !9785, file: !3, line: 817, type: !17)
!9791 = !DILocation(line: 817, column: 44, scope: !9785)
!9792 = !DILocalVariable(name: "S", arg: 3, scope: !9785, file: !3, line: 817, type: !17)
!9793 = !DILocation(line: 817, column: 53, scope: !9785)
!9794 = !DILocalVariable(name: "x", arg: 4, scope: !9785, file: !3, line: 817, type: !17)
!9795 = !DILocation(line: 817, column: 60, scope: !9785)
!9796 = !DILocalVariable(name: "y", arg: 5, scope: !9785, file: !3, line: 817, type: !17)
!9797 = !DILocation(line: 817, column: 67, scope: !9785)
!9798 = !DILocalVariable(name: "no", arg: 6, scope: !9785, file: !3, line: 817, type: !68)
!9799 = !DILocation(line: 817, column: 76, scope: !9785)
!9800 = !DILocalVariable(name: "levels", arg: 7, scope: !9785, file: !3, line: 817, type: !17)
!9801 = !DILocation(line: 817, column: 87, scope: !9785)
!9802 = !DILocalVariable(name: "dataSize", arg: 8, scope: !9785, file: !3, line: 817, type: !17)
!9803 = !DILocation(line: 817, column: 99, scope: !9785)
!9804 = !DILocalVariable(name: "a", scope: !9785, file: !3, line: 819, type: !68)
!9805 = !DILocation(line: 819, column: 9, scope: !9785)
!9806 = !DILocation(line: 819, column: 27, scope: !9785)
!9807 = !DILocation(line: 819, column: 30, scope: !9785)
!9808 = !DILocation(line: 819, column: 35, scope: !9785)
!9809 = !DILocation(line: 819, column: 38, scope: !9785)
!9810 = !DILocation(line: 819, column: 40, scope: !9785)
!9811 = !DILocation(line: 819, column: 45, scope: !9785)
!9812 = !DILocation(line: 819, column: 47, scope: !9785)
!9813 = !DILocation(line: 819, column: 52, scope: !9785)
!9814 = !DILocation(line: 819, column: 60, scope: !9785)
!9815 = !DILocation(line: 819, column: 13, scope: !9785)
!9816 = !DILocalVariable(name: "b", scope: !9785, file: !3, line: 820, type: !68)
!9817 = !DILocation(line: 820, column: 9, scope: !9785)
!9818 = !DILocation(line: 820, column: 27, scope: !9785)
!9819 = !DILocation(line: 820, column: 30, scope: !9785)
!9820 = !DILocation(line: 820, column: 35, scope: !9785)
!9821 = !DILocation(line: 820, column: 38, scope: !9785)
!9822 = !DILocation(line: 820, column: 40, scope: !9785)
!9823 = !DILocation(line: 820, column: 45, scope: !9785)
!9824 = !DILocation(line: 820, column: 47, scope: !9785)
!9825 = !DILocation(line: 820, column: 52, scope: !9785)
!9826 = !DILocation(line: 820, column: 60, scope: !9785)
!9827 = !DILocation(line: 820, column: 13, scope: !9785)
!9828 = !DILocalVariable(name: "c", scope: !9785, file: !3, line: 821, type: !68)
!9829 = !DILocation(line: 821, column: 9, scope: !9785)
!9830 = !DILocation(line: 821, column: 27, scope: !9785)
!9831 = !DILocation(line: 821, column: 30, scope: !9785)
!9832 = !DILocation(line: 821, column: 35, scope: !9785)
!9833 = !DILocation(line: 821, column: 38, scope: !9785)
!9834 = !DILocation(line: 821, column: 40, scope: !9785)
!9835 = !DILocation(line: 821, column: 45, scope: !9785)
!9836 = !DILocation(line: 821, column: 47, scope: !9785)
!9837 = !DILocation(line: 821, column: 52, scope: !9785)
!9838 = !DILocation(line: 821, column: 60, scope: !9785)
!9839 = !DILocation(line: 821, column: 13, scope: !9785)
!9840 = !DILocalVariable(name: "d", scope: !9785, file: !3, line: 822, type: !68)
!9841 = !DILocation(line: 822, column: 9, scope: !9785)
!9842 = !DILocation(line: 822, column: 27, scope: !9785)
!9843 = !DILocation(line: 822, column: 30, scope: !9785)
!9844 = !DILocation(line: 822, column: 35, scope: !9785)
!9845 = !DILocation(line: 822, column: 38, scope: !9785)
!9846 = !DILocation(line: 822, column: 40, scope: !9785)
!9847 = !DILocation(line: 822, column: 45, scope: !9785)
!9848 = !DILocation(line: 822, column: 47, scope: !9785)
!9849 = !DILocation(line: 822, column: 52, scope: !9785)
!9850 = !DILocation(line: 822, column: 60, scope: !9785)
!9851 = !DILocation(line: 822, column: 13, scope: !9785)
!9852 = !DILocalVariable(name: "a_cX", scope: !9785, file: !3, line: 823, type: !69)
!9853 = !DILocation(line: 823, column: 8, scope: !9785)
!9854 = !DILocation(line: 823, column: 15, scope: !9785)
!9855 = !DILocation(line: 823, column: 22, scope: !9785)
!9856 = !DILocation(line: 823, column: 20, scope: !9785)
!9857 = !DILocalVariable(name: "a_cY", scope: !9785, file: !3, line: 823, type: !69)
!9858 = !DILocation(line: 823, column: 28, scope: !9785)
!9859 = !DILocation(line: 823, column: 35, scope: !9785)
!9860 = !DILocation(line: 823, column: 42, scope: !9785)
!9861 = !DILocation(line: 823, column: 40, scope: !9785)
!9862 = !DILocalVariable(name: "a_cZ", scope: !9785, file: !3, line: 823, type: !69)
!9863 = !DILocation(line: 823, column: 48, scope: !9785)
!9864 = !DILocation(line: 823, column: 55, scope: !9785)
!9865 = !DILocation(line: 823, column: 62, scope: !9785)
!9866 = !DILocation(line: 823, column: 60, scope: !9785)
!9867 = !DILocalVariable(name: "b_dX", scope: !9785, file: !3, line: 824, type: !69)
!9868 = !DILocation(line: 824, column: 8, scope: !9785)
!9869 = !DILocation(line: 824, column: 15, scope: !9785)
!9870 = !DILocation(line: 824, column: 22, scope: !9785)
!9871 = !DILocation(line: 824, column: 20, scope: !9785)
!9872 = !DILocalVariable(name: "b_dY", scope: !9785, file: !3, line: 824, type: !69)
!9873 = !DILocation(line: 824, column: 28, scope: !9785)
!9874 = !DILocation(line: 824, column: 35, scope: !9785)
!9875 = !DILocation(line: 824, column: 42, scope: !9785)
!9876 = !DILocation(line: 824, column: 40, scope: !9785)
!9877 = !DILocalVariable(name: "b_dZ", scope: !9785, file: !3, line: 824, type: !69)
!9878 = !DILocation(line: 824, column: 48, scope: !9785)
!9879 = !DILocation(line: 824, column: 55, scope: !9785)
!9880 = !DILocation(line: 824, column: 62, scope: !9785)
!9881 = !DILocation(line: 824, column: 60, scope: !9785)
!9882 = !DILocation(line: 826, column: 10, scope: !9785)
!9883 = !DILocation(line: 826, column: 17, scope: !9785)
!9884 = !DILocation(line: 826, column: 15, scope: !9785)
!9885 = !DILocation(line: 826, column: 24, scope: !9785)
!9886 = !DILocation(line: 826, column: 31, scope: !9785)
!9887 = !DILocation(line: 826, column: 29, scope: !9785)
!9888 = !DILocation(line: 826, column: 22, scope: !9785)
!9889 = !DILocation(line: 826, column: 2, scope: !9785)
!9890 = !DILocation(line: 826, column: 8, scope: !9785)
!9891 = !DILocation(line: 827, column: 10, scope: !9785)
!9892 = !DILocation(line: 827, column: 17, scope: !9785)
!9893 = !DILocation(line: 827, column: 15, scope: !9785)
!9894 = !DILocation(line: 827, column: 24, scope: !9785)
!9895 = !DILocation(line: 827, column: 31, scope: !9785)
!9896 = !DILocation(line: 827, column: 29, scope: !9785)
!9897 = !DILocation(line: 827, column: 22, scope: !9785)
!9898 = !DILocation(line: 827, column: 2, scope: !9785)
!9899 = !DILocation(line: 827, column: 8, scope: !9785)
!9900 = !DILocation(line: 828, column: 10, scope: !9785)
!9901 = !DILocation(line: 828, column: 17, scope: !9785)
!9902 = !DILocation(line: 828, column: 15, scope: !9785)
!9903 = !DILocation(line: 828, column: 24, scope: !9785)
!9904 = !DILocation(line: 828, column: 31, scope: !9785)
!9905 = !DILocation(line: 828, column: 29, scope: !9785)
!9906 = !DILocation(line: 828, column: 22, scope: !9785)
!9907 = !DILocation(line: 828, column: 2, scope: !9785)
!9908 = !DILocation(line: 828, column: 8, scope: !9785)
!9909 = !DILocation(line: 830, column: 12, scope: !9785)
!9910 = !DILocation(line: 830, column: 2, scope: !9785)
!9911 = !DILocation(line: 831, column: 1, scope: !9785)
!9912 = distinct !DISubprogram(name: "_vert_getNo", scope: !3, file: !3, line: 585, type: !9913, scopeLine: 586, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !30, retainedNodes: !151)
!9913 = !DISubroutineType(types: !9914)
!9914 = !{!68, !70, !17, !17, !17}
!9915 = !DILocalVariable(name: "v", arg: 1, scope: !9912, file: !3, line: 585, type: !70)
!9916 = !DILocation(line: 585, column: 36, scope: !9912)
!9917 = !DILocalVariable(name: "lvl", arg: 2, scope: !9912, file: !3, line: 585, type: !17)
!9918 = !DILocation(line: 585, column: 43, scope: !9912)
!9919 = !DILocalVariable(name: "dataSize", arg: 3, scope: !9912, file: !3, line: 585, type: !17)
!9920 = !DILocation(line: 585, column: 52, scope: !9912)
!9921 = !DILocalVariable(name: "normalDataOffset", arg: 4, scope: !9912, file: !3, line: 585, type: !17)
!9922 = !DILocation(line: 585, column: 66, scope: !9912)
!9923 = !DILocation(line: 587, column: 38, scope: !9912)
!9924 = !DILocation(line: 587, column: 20, scope: !9912)
!9925 = !DILocation(line: 587, column: 41, scope: !9912)
!9926 = !DILocation(line: 587, column: 47, scope: !9912)
!9927 = !DILocation(line: 587, column: 45, scope: !9912)
!9928 = !DILocation(line: 587, column: 58, scope: !9912)
!9929 = !DILocation(line: 587, column: 56, scope: !9912)
!9930 = !DILocation(line: 587, column: 9, scope: !9912)
!9931 = !DILocation(line: 587, column: 2, scope: !9912)
!9932 = distinct !DISubprogram(name: "_face_getVertIndex", scope: !3, file: !3, line: 766, type: !9933, scopeLine: 767, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !30, retainedNodes: !151)
!9933 = !DISubroutineType(types: !9934)
!9934 = !{!17, !97, !70}
!9935 = !DILocalVariable(name: "f", arg: 1, scope: !9932, file: !3, line: 766, type: !97)
!9936 = !DILocation(line: 766, column: 44, scope: !9932)
!9937 = !DILocalVariable(name: "v", arg: 2, scope: !9932, file: !3, line: 766, type: !70)
!9938 = !DILocation(line: 766, column: 56, scope: !9932)
!9939 = !DILocalVariable(name: "i", scope: !9932, file: !3, line: 768, type: !17)
!9940 = !DILocation(line: 768, column: 6, scope: !9932)
!9941 = !DILocation(line: 769, column: 9, scope: !9942)
!9942 = distinct !DILexicalBlock(scope: !9932, file: !3, line: 769, column: 2)
!9943 = !DILocation(line: 769, column: 7, scope: !9942)
!9944 = !DILocation(line: 769, column: 14, scope: !9945)
!9945 = distinct !DILexicalBlock(scope: !9942, file: !3, line: 769, column: 2)
!9946 = !DILocation(line: 769, column: 18, scope: !9945)
!9947 = !DILocation(line: 769, column: 21, scope: !9945)
!9948 = !DILocation(line: 769, column: 16, scope: !9945)
!9949 = !DILocation(line: 769, column: 2, scope: !9942)
!9950 = !DILocation(line: 770, column: 21, scope: !9951)
!9951 = distinct !DILexicalBlock(scope: !9945, file: !3, line: 770, column: 7)
!9952 = !DILocation(line: 770, column: 7, scope: !9951)
!9953 = !DILocation(line: 770, column: 24, scope: !9951)
!9954 = !DILocation(line: 770, column: 30, scope: !9951)
!9955 = !DILocation(line: 770, column: 27, scope: !9951)
!9956 = !DILocation(line: 770, column: 7, scope: !9945)
!9957 = !DILocation(line: 771, column: 11, scope: !9951)
!9958 = !DILocation(line: 771, column: 4, scope: !9951)
!9959 = !DILocation(line: 769, column: 32, scope: !9945)
!9960 = !DILocation(line: 769, column: 2, scope: !9945)
!9961 = distinct !{!9961, !9949, !9962}
!9962 = !DILocation(line: 771, column: 11, scope: !9942)
!9963 = !DILocation(line: 772, column: 2, scope: !9932)
!9964 = !DILocation(line: 773, column: 1, scope: !9932)
!9965 = distinct !DISubprogram(name: "Normalize", scope: !3, file: !3, line: 303, type: !9966, scopeLine: 304, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !30, retainedNodes: !151)
!9966 = !DISubroutineType(types: !9967)
!9967 = !{null, !68}
!9968 = !DILocalVariable(name: "no", arg: 1, scope: !9965, file: !3, line: 303, type: !68)
!9969 = !DILocation(line: 303, column: 33, scope: !9965)
!9970 = !DILocalVariable(name: "length", scope: !9965, file: !3, line: 305, type: !1588)
!9971 = !DILocation(line: 305, column: 14, scope: !9965)
!9972 = !DILocation(line: 305, column: 29, scope: !9965)
!9973 = !DILocation(line: 305, column: 37, scope: !9965)
!9974 = !DILocation(line: 305, column: 35, scope: !9965)
!9975 = !DILocation(line: 305, column: 45, scope: !9965)
!9976 = !DILocation(line: 305, column: 53, scope: !9965)
!9977 = !DILocation(line: 305, column: 51, scope: !9965)
!9978 = !DILocation(line: 305, column: 43, scope: !9965)
!9979 = !DILocation(line: 305, column: 61, scope: !9965)
!9980 = !DILocation(line: 305, column: 69, scope: !9965)
!9981 = !DILocation(line: 305, column: 67, scope: !9965)
!9982 = !DILocation(line: 305, column: 59, scope: !9965)
!9983 = !DILocation(line: 305, column: 23, scope: !9965)
!9984 = !DILocation(line: 307, column: 6, scope: !9985)
!9985 = distinct !DILexicalBlock(scope: !9965, file: !3, line: 307, column: 6)
!9986 = !DILocation(line: 307, column: 13, scope: !9985)
!9987 = !DILocation(line: 307, column: 6, scope: !9965)
!9988 = !DILocalVariable(name: "length_inv", scope: !9989, file: !3, line: 308, type: !1588)
!9989 = distinct !DILexicalBlock(scope: !9985, file: !3, line: 307, column: 24)
!9990 = !DILocation(line: 308, column: 15, scope: !9989)
!9991 = !DILocation(line: 308, column: 35, scope: !9989)
!9992 = !DILocation(line: 308, column: 33, scope: !9989)
!9993 = !DILocation(line: 310, column: 12, scope: !9989)
!9994 = !DILocation(line: 310, column: 3, scope: !9989)
!9995 = !DILocation(line: 310, column: 9, scope: !9989)
!9996 = !DILocation(line: 311, column: 12, scope: !9989)
!9997 = !DILocation(line: 311, column: 3, scope: !9989)
!9998 = !DILocation(line: 311, column: 9, scope: !9989)
!9999 = !DILocation(line: 312, column: 12, scope: !9989)
!10000 = !DILocation(line: 312, column: 3, scope: !9989)
!10001 = !DILocation(line: 312, column: 9, scope: !9989)
!10002 = !DILocation(line: 313, column: 2, scope: !9989)
!10003 = !DILocalVariable(name: "_a", scope: !10004, file: !3, line: 315, type: !68)
!10004 = distinct !DILexicalBlock(scope: !10005, file: !3, line: 315, column: 3)
!10005 = distinct !DILexicalBlock(scope: !9985, file: !3, line: 314, column: 7)
!10006 = !DILocation(line: 315, column: 3, scope: !10004)
!10007 = !DILocation(line: 317, column: 1, scope: !9965)
!10008 = distinct !DISubprogram(name: "_face_getEdgeIndex", scope: !3, file: !3, line: 774, type: !8786, scopeLine: 775, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !30, retainedNodes: !151)
!10009 = !DILocalVariable(name: "f", arg: 1, scope: !10008, file: !3, line: 774, type: !97)
!10010 = !DILocation(line: 774, column: 44, scope: !10008)
!10011 = !DILocalVariable(name: "e", arg: 2, scope: !10008, file: !3, line: 774, type: !84)
!10012 = !DILocation(line: 774, column: 56, scope: !10008)
!10013 = !DILocalVariable(name: "i", scope: !10008, file: !3, line: 776, type: !17)
!10014 = !DILocation(line: 776, column: 6, scope: !10008)
!10015 = !DILocation(line: 777, column: 9, scope: !10016)
!10016 = distinct !DILexicalBlock(scope: !10008, file: !3, line: 777, column: 2)
!10017 = !DILocation(line: 777, column: 7, scope: !10016)
!10018 = !DILocation(line: 777, column: 14, scope: !10019)
!10019 = distinct !DILexicalBlock(scope: !10016, file: !3, line: 777, column: 2)
!10020 = !DILocation(line: 777, column: 18, scope: !10019)
!10021 = !DILocation(line: 777, column: 21, scope: !10019)
!10022 = !DILocation(line: 777, column: 16, scope: !10019)
!10023 = !DILocation(line: 777, column: 2, scope: !10016)
!10024 = !DILocation(line: 778, column: 21, scope: !10025)
!10025 = distinct !DILexicalBlock(scope: !10019, file: !3, line: 778, column: 7)
!10026 = !DILocation(line: 778, column: 7, scope: !10025)
!10027 = !DILocation(line: 778, column: 24, scope: !10025)
!10028 = !DILocation(line: 778, column: 30, scope: !10025)
!10029 = !DILocation(line: 778, column: 27, scope: !10025)
!10030 = !DILocation(line: 778, column: 7, scope: !10019)
!10031 = !DILocation(line: 779, column: 11, scope: !10025)
!10032 = !DILocation(line: 779, column: 4, scope: !10025)
!10033 = !DILocation(line: 777, column: 32, scope: !10019)
!10034 = !DILocation(line: 777, column: 2, scope: !10019)
!10035 = distinct !{!10035, !10023, !10036}
!10036 = !DILocation(line: 779, column: 11, scope: !10016)
!10037 = !DILocation(line: 780, column: 2, scope: !10008)
!10038 = !DILocation(line: 781, column: 1, scope: !10008)
!10039 = distinct !DISubprogram(name: "_face_getIFNoEdge", scope: !3, file: !3, line: 813, type: !10040, scopeLine: 814, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !30, retainedNodes: !151)
!10040 = !DISubroutineType(types: !10041)
!10041 = !{!68, !97, !84, !17, !17, !17, !17, !17, !17, !17}
!10042 = !DILocalVariable(name: "f", arg: 1, scope: !10039, file: !3, line: 813, type: !97)
!10043 = !DILocation(line: 813, column: 42, scope: !10039)
!10044 = !DILocalVariable(name: "e", arg: 2, scope: !10039, file: !3, line: 813, type: !84)
!10045 = !DILocation(line: 813, column: 54, scope: !10039)
!10046 = !DILocalVariable(name: "f_ed_idx", arg: 3, scope: !10039, file: !3, line: 813, type: !17)
!10047 = !DILocation(line: 813, column: 61, scope: !10039)
!10048 = !DILocalVariable(name: "lvl", arg: 4, scope: !10039, file: !3, line: 813, type: !17)
!10049 = !DILocation(line: 813, column: 75, scope: !10039)
!10050 = !DILocalVariable(name: "eX", arg: 5, scope: !10039, file: !3, line: 813, type: !17)
!10051 = !DILocation(line: 813, column: 84, scope: !10039)
!10052 = !DILocalVariable(name: "eY", arg: 6, scope: !10039, file: !3, line: 813, type: !17)
!10053 = !DILocation(line: 813, column: 92, scope: !10039)
!10054 = !DILocalVariable(name: "levels", arg: 7, scope: !10039, file: !3, line: 813, type: !17)
!10055 = !DILocation(line: 813, column: 100, scope: !10039)
!10056 = !DILocalVariable(name: "dataSize", arg: 8, scope: !10039, file: !3, line: 813, type: !17)
!10057 = !DILocation(line: 813, column: 112, scope: !10039)
!10058 = !DILocalVariable(name: "normalDataOffset", arg: 9, scope: !10039, file: !3, line: 813, type: !17)
!10059 = !DILocation(line: 813, column: 126, scope: !10039)
!10060 = !DILocation(line: 815, column: 47, scope: !10039)
!10061 = !DILocation(line: 815, column: 50, scope: !10039)
!10062 = !DILocation(line: 815, column: 53, scope: !10039)
!10063 = !DILocation(line: 815, column: 63, scope: !10039)
!10064 = !DILocation(line: 815, column: 68, scope: !10039)
!10065 = !DILocation(line: 815, column: 72, scope: !10039)
!10066 = !DILocation(line: 815, column: 76, scope: !10039)
!10067 = !DILocation(line: 815, column: 84, scope: !10039)
!10068 = !DILocation(line: 815, column: 29, scope: !10039)
!10069 = !DILocation(line: 815, column: 96, scope: !10039)
!10070 = !DILocation(line: 815, column: 94, scope: !10039)
!10071 = !DILocation(line: 815, column: 9, scope: !10039)
!10072 = !DILocation(line: 815, column: 2, scope: !10039)
!10073 = distinct !DISubprogram(name: "_face_getIENo", scope: !3, file: !3, line: 745, type: !4192, scopeLine: 746, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !30, retainedNodes: !151)
!10074 = !DILocalVariable(name: "f", arg: 1, scope: !10073, file: !3, line: 745, type: !97)
!10075 = !DILocation(line: 745, column: 41, scope: !10073)
!10076 = !DILocalVariable(name: "lvl", arg: 2, scope: !10073, file: !3, line: 745, type: !17)
!10077 = !DILocation(line: 745, column: 48, scope: !10073)
!10078 = !DILocalVariable(name: "S", arg: 3, scope: !10073, file: !3, line: 745, type: !17)
!10079 = !DILocation(line: 745, column: 57, scope: !10073)
!10080 = !DILocalVariable(name: "x", arg: 4, scope: !10073, file: !3, line: 745, type: !17)
!10081 = !DILocation(line: 745, column: 64, scope: !10073)
!10082 = !DILocalVariable(name: "levels", arg: 5, scope: !10073, file: !3, line: 745, type: !17)
!10083 = !DILocation(line: 745, column: 71, scope: !10073)
!10084 = !DILocalVariable(name: "dataSize", arg: 6, scope: !10073, file: !3, line: 745, type: !17)
!10085 = !DILocation(line: 745, column: 83, scope: !10073)
!10086 = !DILocalVariable(name: "normalDataOffset", arg: 7, scope: !10073, file: !3, line: 745, type: !17)
!10087 = !DILocation(line: 745, column: 97, scope: !10073)
!10088 = !DILocalVariable(name: "maxGridSize", scope: !10073, file: !3, line: 747, type: !17)
!10089 = !DILocation(line: 747, column: 6, scope: !10073)
!10090 = !DILocation(line: 747, column: 33, scope: !10073)
!10091 = !DILocation(line: 747, column: 20, scope: !10073)
!10092 = !DILocalVariable(name: "spacing", scope: !10073, file: !3, line: 748, type: !17)
!10093 = !DILocation(line: 748, column: 6, scope: !10073)
!10094 = !DILocation(line: 748, column: 28, scope: !10073)
!10095 = !DILocation(line: 748, column: 36, scope: !10073)
!10096 = !DILocation(line: 748, column: 16, scope: !10073)
!10097 = !DILocalVariable(name: "gridBase", scope: !10073, file: !3, line: 749, type: !142)
!10098 = !DILocation(line: 749, column: 8, scope: !10073)
!10099 = !DILocation(line: 749, column: 38, scope: !10073)
!10100 = !DILocation(line: 749, column: 19, scope: !10073)
!10101 = !DILocation(line: 749, column: 43, scope: !10073)
!10102 = !DILocation(line: 749, column: 59, scope: !10073)
!10103 = !DILocation(line: 749, column: 64, scope: !10073)
!10104 = !DILocation(line: 749, column: 78, scope: !10073)
!10105 = !DILocation(line: 749, column: 92, scope: !10073)
!10106 = !DILocation(line: 749, column: 90, scope: !10073)
!10107 = !DILocation(line: 749, column: 76, scope: !10073)
!10108 = !DILocation(line: 749, column: 61, scope: !10073)
!10109 = !DILocation(line: 749, column: 57, scope: !10073)
!10110 = !DILocation(line: 749, column: 52, scope: !10073)
!10111 = !DILocation(line: 749, column: 41, scope: !10073)
!10112 = !DILocation(line: 750, column: 10, scope: !10073)
!10113 = !DILocation(line: 750, column: 19, scope: !10073)
!10114 = !DILocation(line: 750, column: 30, scope: !10073)
!10115 = !DILocation(line: 750, column: 28, scope: !10073)
!10116 = !DILocation(line: 750, column: 34, scope: !10073)
!10117 = !DILocation(line: 750, column: 32, scope: !10073)
!10118 = !DILocation(line: 750, column: 44, scope: !10073)
!10119 = !DILocation(line: 750, column: 42, scope: !10073)
!10120 = !DILocation(line: 750, column: 2, scope: !10073)
!10121 = distinct !DISubprogram(name: "_edge_getNo", scope: !3, file: !3, line: 664, type: !10122, scopeLine: 665, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !30, retainedNodes: !151)
!10122 = !DISubroutineType(types: !10123)
!10123 = !{!68, !84, !17, !17, !17, !17}
!10124 = !DILocalVariable(name: "e", arg: 1, scope: !10121, file: !3, line: 664, type: !84)
!10125 = !DILocation(line: 664, column: 36, scope: !10121)
!10126 = !DILocalVariable(name: "lvl", arg: 2, scope: !10121, file: !3, line: 664, type: !17)
!10127 = !DILocation(line: 664, column: 43, scope: !10121)
!10128 = !DILocalVariable(name: "x", arg: 3, scope: !10121, file: !3, line: 664, type: !17)
!10129 = !DILocation(line: 664, column: 52, scope: !10121)
!10130 = !DILocalVariable(name: "dataSize", arg: 4, scope: !10121, file: !3, line: 664, type: !17)
!10131 = !DILocation(line: 664, column: 59, scope: !10121)
!10132 = !DILocalVariable(name: "normalDataOffset", arg: 5, scope: !10121, file: !3, line: 664, type: !17)
!10133 = !DILocation(line: 664, column: 73, scope: !10121)
!10134 = !DILocalVariable(name: "levelBase", scope: !10121, file: !3, line: 666, type: !17)
!10135 = !DILocation(line: 666, column: 6, scope: !10121)
!10136 = !DILocation(line: 666, column: 31, scope: !10121)
!10137 = !DILocation(line: 666, column: 18, scope: !10121)
!10138 = !DILocation(line: 667, column: 38, scope: !10121)
!10139 = !DILocation(line: 667, column: 20, scope: !10121)
!10140 = !DILocation(line: 667, column: 41, scope: !10121)
!10141 = !DILocation(line: 667, column: 53, scope: !10121)
!10142 = !DILocation(line: 667, column: 65, scope: !10121)
!10143 = !DILocation(line: 667, column: 63, scope: !10121)
!10144 = !DILocation(line: 667, column: 50, scope: !10121)
!10145 = !DILocation(line: 667, column: 70, scope: !10121)
!10146 = !DILocation(line: 667, column: 68, scope: !10121)
!10147 = !DILocation(line: 667, column: 9, scope: !10121)
!10148 = !DILocation(line: 667, column: 2, scope: !10121)
!10149 = distinct !DISubprogram(name: "_face_getIFCoEdge", scope: !3, file: !3, line: 782, type: !10150, scopeLine: 783, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !30, retainedNodes: !151)
!10150 = !DISubroutineType(types: !10151)
!10151 = !{!15, !97, !84, !17, !17, !17, !17, !17, !17}
!10152 = !DILocalVariable(name: "f", arg: 1, scope: !10149, file: !3, line: 782, type: !97)
!10153 = !DILocation(line: 782, column: 45, scope: !10149)
!10154 = !DILocalVariable(name: "e", arg: 2, scope: !10149, file: !3, line: 782, type: !84)
!10155 = !DILocation(line: 782, column: 57, scope: !10149)
!10156 = !DILocalVariable(name: "f_ed_idx", arg: 3, scope: !10149, file: !3, line: 782, type: !17)
!10157 = !DILocation(line: 782, column: 64, scope: !10149)
!10158 = !DILocalVariable(name: "lvl", arg: 4, scope: !10149, file: !3, line: 782, type: !17)
!10159 = !DILocation(line: 782, column: 78, scope: !10149)
!10160 = !DILocalVariable(name: "eX", arg: 5, scope: !10149, file: !3, line: 782, type: !17)
!10161 = !DILocation(line: 782, column: 87, scope: !10149)
!10162 = !DILocalVariable(name: "eY", arg: 6, scope: !10149, file: !3, line: 782, type: !17)
!10163 = !DILocation(line: 782, column: 95, scope: !10149)
!10164 = !DILocalVariable(name: "levels", arg: 7, scope: !10149, file: !3, line: 782, type: !17)
!10165 = !DILocation(line: 782, column: 103, scope: !10149)
!10166 = !DILocalVariable(name: "dataSize", arg: 8, scope: !10149, file: !3, line: 782, type: !17)
!10167 = !DILocation(line: 782, column: 115, scope: !10149)
!10168 = !DILocalVariable(name: "maxGridSize", scope: !10149, file: !3, line: 784, type: !17)
!10169 = !DILocation(line: 784, column: 6, scope: !10149)
!10170 = !DILocation(line: 784, column: 33, scope: !10149)
!10171 = !DILocation(line: 784, column: 20, scope: !10149)
!10172 = !DILocalVariable(name: "spacing", scope: !10149, file: !3, line: 785, type: !17)
!10173 = !DILocation(line: 785, column: 6, scope: !10149)
!10174 = !DILocation(line: 785, column: 28, scope: !10149)
!10175 = !DILocation(line: 785, column: 36, scope: !10149)
!10176 = !DILocation(line: 785, column: 16, scope: !10149)
!10177 = !DILocalVariable(name: "x", scope: !10149, file: !3, line: 786, type: !17)
!10178 = !DILocation(line: 786, column: 6, scope: !10149)
!10179 = !DILocalVariable(name: "y", scope: !10149, file: !3, line: 786, type: !17)
!10180 = !DILocation(line: 786, column: 9, scope: !10149)
!10181 = !DILocalVariable(name: "cx", scope: !10149, file: !3, line: 786, type: !17)
!10182 = !DILocation(line: 786, column: 12, scope: !10149)
!10183 = !DILocalVariable(name: "cy", scope: !10149, file: !3, line: 786, type: !17)
!10184 = !DILocation(line: 786, column: 16, scope: !10149)
!10185 = !DILocation(line: 790, column: 7, scope: !10149)
!10186 = !DILocation(line: 790, column: 12, scope: !10149)
!10187 = !DILocation(line: 790, column: 10, scope: !10149)
!10188 = !DILocation(line: 790, column: 5, scope: !10149)
!10189 = !DILocation(line: 791, column: 7, scope: !10149)
!10190 = !DILocation(line: 791, column: 12, scope: !10149)
!10191 = !DILocation(line: 791, column: 10, scope: !10149)
!10192 = !DILocation(line: 791, column: 5, scope: !10149)
!10193 = !DILocation(line: 792, column: 6, scope: !10194)
!10194 = distinct !DILexicalBlock(scope: !10149, file: !3, line: 792, column: 6)
!10195 = !DILocation(line: 792, column: 9, scope: !10194)
!10196 = !DILocation(line: 792, column: 29, scope: !10194)
!10197 = !DILocation(line: 792, column: 15, scope: !10194)
!10198 = !DILocation(line: 792, column: 32, scope: !10194)
!10199 = !DILocation(line: 792, column: 12, scope: !10194)
!10200 = !DILocation(line: 792, column: 6, scope: !10149)
!10201 = !DILocation(line: 793, column: 9, scope: !10202)
!10202 = distinct !DILexicalBlock(scope: !10194, file: !3, line: 792, column: 43)
!10203 = !DILocation(line: 793, column: 21, scope: !10202)
!10204 = !DILocation(line: 793, column: 25, scope: !10202)
!10205 = !DILocation(line: 793, column: 30, scope: !10202)
!10206 = !DILocation(line: 793, column: 36, scope: !10202)
!10207 = !DILocation(line: 793, column: 34, scope: !10202)
!10208 = !DILocation(line: 793, column: 6, scope: !10202)
!10209 = !DILocation(line: 794, column: 2, scope: !10202)
!10210 = !DILocation(line: 795, column: 6, scope: !10149)
!10211 = !DILocation(line: 795, column: 18, scope: !10149)
!10212 = !DILocation(line: 795, column: 24, scope: !10149)
!10213 = !DILocation(line: 795, column: 22, scope: !10149)
!10214 = !DILocation(line: 795, column: 4, scope: !10149)
!10215 = !DILocation(line: 796, column: 6, scope: !10149)
!10216 = !DILocation(line: 796, column: 18, scope: !10149)
!10217 = !DILocation(line: 796, column: 24, scope: !10149)
!10218 = !DILocation(line: 796, column: 22, scope: !10149)
!10219 = !DILocation(line: 796, column: 4, scope: !10149)
!10220 = !DILocation(line: 797, column: 6, scope: !10221)
!10221 = distinct !DILexicalBlock(scope: !10149, file: !3, line: 797, column: 6)
!10222 = !DILocation(line: 797, column: 8, scope: !10221)
!10223 = !DILocation(line: 797, column: 6, scope: !10149)
!10224 = !DILocation(line: 798, column: 15, scope: !10225)
!10225 = distinct !DILexicalBlock(scope: !10221, file: !3, line: 797, column: 13)
!10226 = !DILocation(line: 798, column: 26, scope: !10225)
!10227 = !DILocation(line: 798, column: 29, scope: !10225)
!10228 = !DILocation(line: 798, column: 24, scope: !10225)
!10229 = !DILocation(line: 798, column: 38, scope: !10225)
!10230 = !DILocation(line: 798, column: 45, scope: !10225)
!10231 = !DILocation(line: 798, column: 48, scope: !10225)
!10232 = !DILocation(line: 798, column: 43, scope: !10225)
!10233 = !DILocation(line: 798, column: 12, scope: !10225)
!10234 = !DILocation(line: 799, column: 8, scope: !10225)
!10235 = !DILocation(line: 799, column: 6, scope: !10225)
!10236 = !DILocation(line: 800, column: 9, scope: !10225)
!10237 = !DILocation(line: 800, column: 8, scope: !10225)
!10238 = !DILocation(line: 800, column: 6, scope: !10225)
!10239 = !DILocation(line: 801, column: 2, scope: !10225)
!10240 = !DILocation(line: 802, column: 11, scope: !10241)
!10241 = distinct !DILexicalBlock(scope: !10221, file: !3, line: 802, column: 11)
!10242 = !DILocation(line: 802, column: 13, scope: !10241)
!10243 = !DILocation(line: 802, column: 11, scope: !10221)
!10244 = !DILocation(line: 803, column: 15, scope: !10245)
!10245 = distinct !DILexicalBlock(scope: !10241, file: !3, line: 802, column: 18)
!10246 = !DILocation(line: 803, column: 24, scope: !10245)
!10247 = !DILocation(line: 803, column: 31, scope: !10245)
!10248 = !DILocation(line: 803, column: 34, scope: !10245)
!10249 = !DILocation(line: 803, column: 29, scope: !10245)
!10250 = !DILocation(line: 803, column: 12, scope: !10245)
!10251 = !DILocation(line: 804, column: 9, scope: !10245)
!10252 = !DILocation(line: 804, column: 8, scope: !10245)
!10253 = !DILocation(line: 804, column: 6, scope: !10245)
!10254 = !DILocation(line: 805, column: 8, scope: !10245)
!10255 = !DILocation(line: 805, column: 6, scope: !10245)
!10256 = !DILocation(line: 806, column: 2, scope: !10245)
!10257 = !DILocation(line: 808, column: 8, scope: !10258)
!10258 = distinct !DILexicalBlock(scope: !10241, file: !3, line: 807, column: 7)
!10259 = !DILocation(line: 808, column: 6, scope: !10258)
!10260 = !DILocation(line: 809, column: 8, scope: !10258)
!10261 = !DILocation(line: 809, column: 6, scope: !10258)
!10262 = !DILocation(line: 811, column: 23, scope: !10149)
!10263 = !DILocation(line: 811, column: 26, scope: !10149)
!10264 = !DILocation(line: 811, column: 34, scope: !10149)
!10265 = !DILocation(line: 811, column: 44, scope: !10149)
!10266 = !DILocation(line: 811, column: 48, scope: !10149)
!10267 = !DILocation(line: 811, column: 52, scope: !10149)
!10268 = !DILocation(line: 811, column: 60, scope: !10149)
!10269 = !DILocation(line: 811, column: 9, scope: !10149)
!10270 = !DILocation(line: 811, column: 2, scope: !10149)
!10271 = distinct !DISubprogram(name: "VertDataAvg4", scope: !3, file: !3, line: 496, type: !10272, scopeLine: 500, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !30, retainedNodes: !151)
!10272 = !DISubroutineType(types: !10273)
!10273 = !{null, !68, !1587, !1587, !1587, !1587, !1589}
!10274 = !DILocalVariable(name: "v", arg: 1, scope: !10271, file: !3, line: 496, type: !68)
!10275 = !DILocation(line: 496, column: 32, scope: !10271)
!10276 = !DILocalVariable(name: "a", arg: 2, scope: !10271, file: !3, line: 497, type: !1587)
!10277 = !DILocation(line: 497, column: 38, scope: !10271)
!10278 = !DILocalVariable(name: "b", arg: 3, scope: !10271, file: !3, line: 497, type: !1587)
!10279 = !DILocation(line: 497, column: 55, scope: !10271)
!10280 = !DILocalVariable(name: "c", arg: 4, scope: !10271, file: !3, line: 498, type: !1587)
!10281 = !DILocation(line: 498, column: 38, scope: !10271)
!10282 = !DILocalVariable(name: "d", arg: 5, scope: !10271, file: !3, line: 498, type: !1587)
!10283 = !DILocation(line: 498, column: 55, scope: !10271)
!10284 = !DILocalVariable(name: "ss", arg: 6, scope: !10271, file: !3, line: 499, type: !1589)
!10285 = !DILocation(line: 499, column: 44, scope: !10271)
!10286 = !DILocalVariable(name: "i", scope: !10271, file: !3, line: 501, type: !17)
!10287 = !DILocation(line: 501, column: 6, scope: !10271)
!10288 = !DILocation(line: 502, column: 9, scope: !10289)
!10289 = distinct !DILexicalBlock(scope: !10271, file: !3, line: 502, column: 2)
!10290 = !DILocation(line: 502, column: 7, scope: !10289)
!10291 = !DILocation(line: 502, column: 14, scope: !10292)
!10292 = distinct !DILexicalBlock(scope: !10289, file: !3, line: 502, column: 2)
!10293 = !DILocation(line: 502, column: 18, scope: !10292)
!10294 = !DILocation(line: 502, column: 22, scope: !10292)
!10295 = !DILocation(line: 502, column: 30, scope: !10292)
!10296 = !DILocation(line: 502, column: 16, scope: !10292)
!10297 = !DILocation(line: 502, column: 2, scope: !10289)
!10298 = !DILocation(line: 503, column: 11, scope: !10292)
!10299 = !DILocation(line: 503, column: 13, scope: !10292)
!10300 = !DILocation(line: 503, column: 18, scope: !10292)
!10301 = !DILocation(line: 503, column: 20, scope: !10292)
!10302 = !DILocation(line: 503, column: 16, scope: !10292)
!10303 = !DILocation(line: 503, column: 25, scope: !10292)
!10304 = !DILocation(line: 503, column: 27, scope: !10292)
!10305 = !DILocation(line: 503, column: 23, scope: !10292)
!10306 = !DILocation(line: 503, column: 32, scope: !10292)
!10307 = !DILocation(line: 503, column: 34, scope: !10292)
!10308 = !DILocation(line: 503, column: 30, scope: !10292)
!10309 = !DILocation(line: 503, column: 38, scope: !10292)
!10310 = !DILocation(line: 503, column: 3, scope: !10292)
!10311 = !DILocation(line: 503, column: 5, scope: !10292)
!10312 = !DILocation(line: 503, column: 8, scope: !10292)
!10313 = !DILocation(line: 502, column: 42, scope: !10292)
!10314 = !DILocation(line: 502, column: 2, scope: !10292)
!10315 = distinct !{!10315, !10297, !10316}
!10316 = !DILocation(line: 503, column: 40, scope: !10289)
!10317 = !DILocation(line: 504, column: 1, scope: !10271)
