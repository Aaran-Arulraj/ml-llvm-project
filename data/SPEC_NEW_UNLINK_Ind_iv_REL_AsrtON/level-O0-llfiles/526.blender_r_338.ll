; ModuleID = 'blender/source/blender/render/intern/source/shadbuf.c'
source_filename = "blender/source/blender/render/intern/source/shadbuf.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.Global = type { %struct.Main*, [1024 x i8], [1024 x i8], i8, i8, i8, %struct.ListBase, i8, i8, i8, i16, i16, i16, i8, i16, i32, i32, i8, i32, i32, [200 x i8] }
%struct.Main = type { %struct.Main*, %struct.Main*, [1024 x i8], i16, i16, i16, i16, i64, [16 x i8], i16, %struct.Library*, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, [256 x i8], %struct.EvaluationContext*, %struct.MainLock* }
%struct.Library = type { %struct.ID, %struct.ID*, %struct.FileData*, [1024 x i8], [1024 x i8], %struct.Library*, %struct.PackedFile* }
%struct.ID = type { i8*, i8*, %struct.ID*, %struct.Library*, [66 x i8], i16, i32, i32, i32, %struct.IDProperty* }
%struct.IDProperty = type { %struct.IDProperty*, %struct.IDProperty*, i8, i8, i16, [64 x i8], i32, %struct.IDPropertyData, i32, i32 }
%struct.IDPropertyData = type { i8*, %struct.ListBase, i32, i32 }
%struct.FileData = type opaque
%struct.PackedFile = type opaque
%struct.EvaluationContext = type opaque
%struct.MainLock = type opaque
%struct.ListBase = type { i8*, i8* }
%struct.Render = type { %struct.Render*, %struct.Render*, [74 x i8], i32, i16, i16, i16, i16, i8, %struct.RenderResult*, %struct.RenderResult*, %struct.ListBase, i32, i32, i32, %struct.rcti, %struct.rctf, float, float, float, i32, i32, i32, i32, float, float, float, float, float, float, [3 x float], [3 x [3 x float]], [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], float, float, %struct.SampleTables*, [32 x [2 x float]], [32 x [2 x float]], %struct.ListBase*, [1 x i32], %struct.Main*, %struct.Scene*, %struct.RenderData, %struct.World, %struct.Object*, i32, i32, %struct.ListBase, %struct.RenderEngine*, %struct.RayObject*, %struct.RayFace*, %struct.VlakPrimitive*, float, i8*, %struct.ListBase, float, float, i32, i32, i32, i32, i32, %struct.HaloRen**, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ObjectInstanceRen*, %struct.ListBase, i32, %struct.Image*, %struct.GHash*, %struct.GHash*, %struct.ListBase*, %struct.Material*, %struct.ListBase, %struct.Object*, %struct.ListBase, %struct.ListBase, %struct.MemArena*, void (i8*, %struct.RenderResult*)*, i8*, void (i8*, %struct.RenderResult*)*, i8*, void (i8*, %struct.RenderResult*, %struct.rcti*)*, i8*, void (i8*, %struct.Scene*)*, i8*, void (i8*, %struct.RenderStats*)*, i8*, void (i8*, float)*, i8*, void (i8*, i32)*, i8*, i32 (i8*)*, i8*, %struct.RenderStats, %struct.ReportList*, %struct.ImagePool*, %struct.EvaluationContext* }
%struct.RenderResult = type { %struct.RenderResult*, %struct.RenderResult*, i32, i32, i16, i16, i32*, float*, float*, %struct.rcti, i32, i32, %struct.ListBase, %struct.rcti, %struct.RenderLayer*, i32, i32, i32, i8* }
%struct.RenderLayer = type { %struct.RenderLayer*, %struct.RenderLayer*, [74 x i8], i32, i32, i32, i32, i32, i32, %struct.Material*, %struct.Group*, float*, float*, float*, i32*, i32, i32, i8*, %struct.ListBase }
%struct.Group = type { %struct.ID, %struct.ListBase, i32, [3 x float] }
%struct.rcti = type { i32, i32, i32, i32 }
%struct.rctf = type { float, float, float, float }
%struct.SampleTables = type { [16 x float], [9 x float*], [9 x float*], [256 x i8], i8* }
%struct.Scene = type { %struct.ID, %struct.AnimData*, %struct.Object*, %struct.World*, %struct.Scene*, %struct.ListBase, %struct.Base*, %struct.Object*, [3 x float], [3 x float], [3 x float], [3 x float], i32, i32, i32, i16, i8, [1 x i8], %struct.bNodeTree*, %struct.Editing*, %struct.ToolSettings*, %struct.SceneStats*, %struct.RenderData, %struct.AudioData, %struct.ListBase, %struct.ListBase, i8*, i8*, i8*, i8*, i8*, %struct.DagForest*, i16, i16, i32, %struct.ListBase, %struct.GameFraming, %struct.GameData, %struct.UnitSettings, %struct.bGPdata*, %struct.PhysicsSettings, %struct.MovieClip*, i64, i64, %struct.ColorManagedViewSettings, %struct.ColorManagedDisplaySettings, %struct.ColorManagedColorspaceSettings, %struct.RigidBodyWorld* }
%struct.AnimData = type opaque
%struct.Base = type { %struct.Base*, %struct.Base*, i32, i32, i32, i16, i16, %struct.Object* }
%struct.bNodeTree = type opaque
%struct.Editing = type opaque
%struct.ToolSettings = type { %struct.VPaint*, %struct.VPaint*, %struct.Sculpt*, %struct.UvSculpt*, float, float, float, i16, i16, i8, i8, i8, i8, float, i16, i8, [5 x i8], %struct.ImagePaintSettings, %struct.ParticleEditSettings, float, float, i16, i16, i8, [1 x i8], i16, float, float, float, float, float, float, float, float, float, float, i16, i8, i8, [3 x i8], i8, %struct.Object*, i8, i8, i8, i8, i8, [8 x i8], [8 x i8], i8, i8, i8, i8, i8, i16, i16, i16, i16, i8, i8, i8, i8, i8, i8, i32, i32, i32, i32, i16, i16, i32, float, float, %struct.UnifiedPaintSettings, %struct.MeshStatVis }
%struct.VPaint = type { %struct.Paint, i16, i16, i32, i32*, %struct.MDeformVert*, i8* }
%struct.Paint = type { %struct.Brush*, %struct.Palette*, i8*, [4 x i8], i32, i32, i32 }
%struct.Brush = type opaque
%struct.Palette = type opaque
%struct.MDeformVert = type opaque
%struct.Sculpt = type { %struct.Paint, i32, [3 x i32], float, i32, float, float, %struct.Object*, i8* }
%struct.UvSculpt = type { %struct.Paint }
%struct.ImagePaintSettings = type { %struct.Paint, i16, i16, i16, i16, [2 x i16], i32, i8*, %struct.Image*, %struct.Image*, %struct.Image*, [3 x float], float }
%struct.ParticleEditSettings = type { i16, i16, i16, i16, [7 x %struct.ParticleBrushData], i8*, float, float, i32, i32, i32, i32, %struct.Scene*, %struct.Object* }
%struct.ParticleBrushData = type { i16, i16, i16, i16, i32, float }
%struct.UnifiedPaintSettings = type { i32, float, float, float, [3 x float], [3 x float], i32, [2 x float], float, i32, i32, i8, [7 x i8], float, [2 x float], i32, float, [2 x float], [2 x float], i32, %struct.ColorSpace*, float, i32 }
%struct.ColorSpace = type opaque
%struct.MeshStatVis = type { i8, [2 x i8], i8, float, float, float, float, i8, [3 x i8], float, float, float, float }
%struct.SceneStats = type opaque
%struct.AudioData = type { i32, float, float, float, i32, i16, i16, float, float }
%struct.DagForest = type opaque
%struct.GameFraming = type { [3 x float], i8, i8, i8, i8 }
%struct.GameData = type { %struct.GameFraming, i16, i16, i16, i16, i16, i16, i16, i16, i16, [3 x i16], %struct.GameDome, i16, i16, float, %struct.RecastData, float, float, i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, float, float, float, float, float }
%struct.GameDome = type { i16, i16, i16, i16, float, float, %struct.Text* }
%struct.Text = type opaque
%struct.RecastData = type { float, float, float, float, float, float, float, float, float, float, i32, float, float, i16, i16 }
%struct.UnitSettings = type { float, i8, i8, i16 }
%struct.bGPdata = type opaque
%struct.PhysicsSettings = type { [3 x float], i32, i32, i32 }
%struct.MovieClip = type opaque
%struct.ColorManagedViewSettings = type { i32, i32, [64 x i8], [64 x i8], float, float, %struct.CurveMapping*, i8* }
%struct.CurveMapping = type { i32, i32, i32, i32, %struct.rctf, %struct.rctf, [4 x %struct.CurveMap], [3 x float], [3 x float], [3 x float], [3 x float] }
%struct.CurveMap = type { i16, i16, float, float, float, [2 x float], [2 x float], %struct.CurveMapPoint*, %struct.CurveMapPoint*, %struct.CurveMapPoint*, [2 x float], [2 x float] }
%struct.CurveMapPoint = type { float, float, i16, i16 }
%struct.ColorManagedDisplaySettings = type { [64 x i8] }
%struct.ColorManagedColorspaceSettings = type { [64 x i8] }
%struct.RigidBodyWorld = type opaque
%struct.RenderData = type { %struct.ImageFormatData, %struct.AviCodecData*, %struct.QuicktimeCodecData*, %struct.QuicktimeCodecSettings, %struct.FFMpegCodecData, i32, i32, i32, float, i32, i32, i32, i32, i16, i16, float, float, float, float, float, i16, i16, i16, i16, i16, i16, i32, i16, i16, i16, i16, i16, i16, i32, i32, i16, i16, i32, i32, i16, i16, i16, i16, i16, i8, i8, i32, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, %struct.rctf, %struct.rctf, %struct.rcti, %struct.ListBase, i16, i16, float, float, float, float, i32, float, float, float, float, i16, i16, i16, i16, i16, i16, float, float, i16, i16, float, float, [1024 x i8], i32, i16, i16, [768 x i8], [4 x float], [4 x float], i8, i8, i8, [5 x i8], i32, i16, i16, float, float, i16, i16, float, i16, i16, i32, i16, i16, i16, i16, float, float, %struct.Text*, i32, float, [32 x i8], %struct.BakeData, i32, i32 }
%struct.ImageFormatData = type { i8, i8, i8, i8, i8, i8, i8, i8, i16, i16, float, i8, i8, [6 x i8], %struct.ColorManagedViewSettings, %struct.ColorManagedDisplaySettings }
%struct.AviCodecData = type { i8*, i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [128 x i8] }
%struct.QuicktimeCodecData = type { i8*, i8*, i32, i32, [128 x i8] }
%struct.QuicktimeCodecSettings = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32, i32 }
%struct.FFMpegCodecData = type { i32, i32, i32, i32, i32, i32, i32, i32, float, i32, i32, i32, i32, i32, i32, i32, %struct.IDProperty* }
%struct.BakeData = type { %struct.ImageFormatData, [1024 x i8], i16, i16, i16, i16, float, float, [3 x i8], i8, i8, [3 x i8], [64 x i8] }
%struct.World = type { %struct.ID, %struct.AnimData*, i16, i16, i16, i16, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, i16, i16, i16, i16, i16, i16, i16, i16, float, float, float, float, float, float, float, float, float, float, float, float, i16, i16, i16, i16, float, float, float, float, i16, i16, i16, i16, float, float, float, float, float, float, float, i16, i16, i16, i16, i16, i16, float*, float*, %struct.Ipo*, [18 x %struct.MTex*], i16, i16, [2 x i16], %struct.PreviewImage*, %struct.bNodeTree* }
%struct.Ipo = type opaque
%struct.MTex = type { i16, i16, i16, i16, %struct.Object*, %struct.Tex*, [64 x i8], i8, i8, i8, i8, [3 x float], [3 x float], float, i16, i16, i16, i16, i16, i16, i8, [7 x i8], float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float }
%struct.Tex = type { %struct.ID, %struct.AnimData*, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, float, float, float, float, i32, i32, i16, i16, i16, i16, i32, i32, i32, i32, float, float, float, %struct.ImageUser, %struct.bNodeTree*, %struct.Ipo*, %struct.Image*, %struct.ColorBand*, %struct.EnvMap*, %struct.PreviewImage*, %struct.PointDensity*, %struct.VoxelData*, %struct.OceanTex*, i8, [7 x i8] }
%struct.ImageUser = type { %struct.Scene*, i32, i32, i32, i32, i8, i8, i8, i8, i16, i16, i16, i16, i32 }
%struct.ColorBand = type { i16, i16, i8, i8, i8, [1 x i8], [32 x %struct.CBData] }
%struct.CBData = type { float, float, float, float, float, i32 }
%struct.EnvMap = type { %struct.Object*, %struct.Image*, [6 x %struct.ImBuf*], [4 x [4 x float]], [3 x [3 x float]], i16, i16, float, float, float, i32, i16, i16, i32, i32, i16, i16 }
%struct.ImBuf = type opaque
%struct.PointDensity = type { i16, i16, float, float, i16, i16, i32, i32, %struct.Object*, i32, i16, i16, i8*, float*, float, i16, i16, i16, [3 x i16], float, float, float, float, %struct.ColorBand*, %struct.CurveMapping* }
%struct.VoxelData = type { [3 x i32], i32, i16, i16, i16, i16, i16, i16, i32, %struct.Object*, float, i32, [1024 x i8], float*, i32, i32 }
%struct.OceanTex = type { %struct.Object*, [64 x i8], i32, i32 }
%struct.PreviewImage = type { [2 x i32], [2 x i32], [2 x i16], [2 x i16], [2 x i32*], [2 x %struct.GPUTexture*] }
%struct.GPUTexture = type opaque
%struct.RenderEngine = type opaque
%struct.RayObject = type opaque
%struct.RayFace = type opaque
%struct.VlakPrimitive = type opaque
%struct.HaloRen = type { i16, i16, float, float, float, float, float, float, float, [3 x float], [3 x float], float, float, float, float, i32, i32, i32, i8, i8, i8, i8, i8, i8, i8, i16, float, i32, i32, %struct.Material*, %struct.ImagePool* }
%struct.ObjectInstanceRen = type { %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen*, %struct.ObjectRen*, %struct.Object*, %struct.Object*, i32, i32, i32, [4 x [4 x float]], [4 x [4 x float]], [3 x [3 x float]], i16, [3 x float], [2 x float], [4 x float]*, %struct.VolumePrecache*, float*, i32, %struct.RayObject*, i32 }
%struct.ObjectRen = type { %struct.ObjectRen*, %struct.ObjectRen*, %struct.Object*, %struct.Object*, %struct.Scene*, i32, i32, i32, i32, [2 x [3 x float]], i32, i32, i32, i32, i32, i32, i32, i32, %struct.VertTableNode*, %struct.VlakTableNode*, %struct.StrandTableNode*, %struct.HaloRen**, %struct.StrandBuffer*, [64 x i8]*, [64 x i8]*, i32, i32, i32, [4 x [4 x float]], %struct.RayObject*, %struct.RayFace*, %struct.VlakPrimitive*, %struct.ObjectInstanceRen* }
%struct.VertTableNode = type { %struct.VertRen*, float*, float*, float*, float*, float*, i32* }
%struct.VertRen = type { [3 x float], [3 x float], float*, i32, float, i32 }
%struct.VlakTableNode = type { %struct.VlakRen*, %struct.MTFace*, %struct.MCol*, i32*, i32, i32, float*, float*, %struct.RadFace** }
%struct.VlakRen = type { %struct.VertRen*, %struct.VertRen*, %struct.VertRen*, %struct.VertRen*, [3 x float], %struct.Material*, i8, i8, i8, i32 }
%struct.MTFace = type opaque
%struct.MCol = type opaque
%struct.RadFace = type { [3 x float], [3 x float], [3 x float], [3 x float], float, i32 }
%struct.StrandTableNode = type { %struct.StrandRen*, float*, float*, float*, i32*, %struct.MCol*, float*, i32, i32 }
%struct.StrandRen = type { %struct.StrandVert*, %struct.StrandBuffer*, i32, i32, i32, i32, [3 x float] }
%struct.StrandVert = type { [3 x float], float }
%struct.StrandBuffer = type { %struct.StrandBuffer*, %struct.StrandBuffer*, %struct.StrandVert*, %struct.StrandBound*, i32, i32, %struct.ObjectRen*, %struct.Material*, %struct.StrandSurface*, i32, i32, i32, i32, float, float, float, float, [4 x [4 x float]], i32, i32 }
%struct.StrandBound = type { i32, i32, [2 x [3 x float]] }
%struct.StrandSurface = type { %struct.StrandSurface*, %struct.StrandSurface*, %struct.ObjectRen, [4 x i32]*, [3 x float]*, [3 x float]*, [3 x float]*, [3 x float]*, [3 x float]*, [3 x float]*, i32, i32 }
%struct.VolumePrecache = type { [3 x i32], float*, float*, float*, float*, float* }
%struct.Image = type { %struct.ID, [1024 x i8], %struct.MovieCache*, %struct.GPUTexture*, %struct.anim*, %struct.RenderResult*, [8 x %struct.RenderResult*], i16, i16, i16, i16, i16, i16, i32, i16, i16, i16, i16, i16, i16, i32, i32*, %struct.PackedFile*, %struct.PreviewImage*, float, i32, i16, i16, i32, i32, i8, i8, i16, [4 x float], float, float, %struct.ColorManagedColorspaceSettings, i8, [7 x i8], [8 x %struct.RenderSlot] }
%struct.MovieCache = type opaque
%struct.anim = type opaque
%struct.RenderSlot = type { [64 x i8] }
%struct.GHash = type opaque
%struct.Material = type { %struct.ID, %struct.AnimData*, i16, i16, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, %struct.VolumeSettings, %struct.GameSettings, float, float, float, float, float, float, float, i16, i16, i16, i8, i8, float, float, i16, i16, float, float, float, float, i16, i16, i32, i32, i32, i32, i16, i16, i16, i16, float, float, float, float, float, float, float, float, float, float, [64 x i8], float, float, float, i32, i8, i8, i8, i8, i16, i16, i16, i8, i8, i16, i16, float, float, [4 x float], float, float, i16, i16, %struct.ColorBand*, %struct.ColorBand*, i8, i8, i8, i8, i16, i16, float, float, [18 x %struct.MTex*], %struct.bNodeTree*, %struct.Ipo*, %struct.Group*, %struct.PreviewImage*, float, float, float, float, float, i16, i16, [3 x float], [3 x float], float, float, float, float, float, float, float, i16, i16, i32, i16, i16, [4 x float], i16, i16, i16, i16, i16, [3 x i16], %struct.TexPaintSlot*, %struct.ListBase }
%struct.VolumeSettings = type { float, float, float, float, [3 x float], [3 x float], [3 x float], float, float, float, i16, i16, i16, i16, float, float, float, float }
%struct.GameSettings = type { i32, i32, i32, i32 }
%struct.TexPaintSlot = type { %struct.Image*, i8*, i32, i32 }
%struct.Object = type { %struct.ID, %struct.AnimData*, %struct.SculptSession*, i16, i16, i32, i32, i32, [64 x i8], %struct.Object*, %struct.Object*, %struct.Object*, %struct.Object*, %struct.Object*, %struct.Ipo*, %struct.BoundBox*, %struct.bAction*, %struct.bAction*, %struct.bPose*, i8*, %struct.bGPdata*, %struct.bAnimVizSettings, %struct.bMotionPath*, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, i32, i32, %struct.Material**, i8*, i32, i32, [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [4 x float], [4 x float], [3 x float], [3 x float], float, float, [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i8, i8, i32, i32, i32, i32, i32, float, float, float, float, float, float, float, float, float, float, float, float, i16, i16, i16, i8, i8, i16, i8, i8, float, float, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, float, i16, i16, [4 x float], i32, i32, %struct.BulletSoftBody*, i8, i8, i16, [3 x float], %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.PartDeflect*, %struct.SoftBody*, %struct.Group*, i8, i8, i16, float, %struct.FluidsimSettings*, %struct.CurveCache*, %struct.DerivedMesh*, %struct.DerivedMesh*, i64, i64, i32, i32, %struct.ListBase, %struct.ListBase, %struct.ListBase*, %struct.RigidBodyOb*, %struct.RigidBodyCon*, [2 x float], %struct.ImageUser*, %struct.ListBase, %struct.LodLevel* }
%struct.SculptSession = type opaque
%struct.BoundBox = type { [8 x [3 x float]], i32, i32 }
%struct.bAction = type { %struct.ID, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, i32, i32, i32, i32 }
%struct.bPose = type { %struct.ListBase, %struct.GHash*, i16, i16, i32, i32, float, [3 x float], [3 x float], %struct.ListBase, i32, i32, i8*, i8*, %struct.bAnimVizSettings, [64 x i8] }
%struct.bAnimVizSettings = type { i32, i32, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, i32, i32, i32, i32 }
%struct.bMotionPath = type { %struct.bMotionPathVert*, i32, i32, i32, i32 }
%struct.bMotionPathVert = type { [3 x float], i32 }
%struct.BulletSoftBody = type opaque
%struct.PartDeflect = type opaque
%struct.SoftBody = type opaque
%struct.FluidsimSettings = type opaque
%struct.CurveCache = type opaque
%struct.DerivedMesh = type opaque
%struct.RigidBodyOb = type opaque
%struct.RigidBodyCon = type opaque
%struct.LodLevel = type { %struct.LodLevel*, %struct.LodLevel*, %struct.Object*, i32, float }
%struct.MemArena = type opaque
%struct.RenderStats = type { i32, i32, i32, i32, i32, i32, i32, i16, i16, i16, i16, i16, i16, i8, double, double, i8*, i8*, [64 x i8], float, float }
%struct.ReportList = type opaque
%struct.ImagePool = type opaque
%struct.LampRen = type { %struct.LampRen*, %struct.LampRen*, float, float, float, [3 x float], i16, i32, float, float, float, float, float, float, float, float, float, i32, float, float, [3 x float], float, float, float, float, float, float, i16, float, float, %struct.CurveMapping*, i16, i16, float, i16, i16, i16, i16, i16, float, float, float, float, i16, i16, i16, i16, i16, i16, i16, [1 x i16], [1 x i16], float, float, float, float, %struct.SunSky*, %struct.ShadBuf*, float*, [3 x [3 x float]], float, [3 x float], float, [4 x [4 x float]], [3 x [3 x float]], [8 x [3 x float]], float, %struct.LampShadowSample*, [1 x %struct.RayObject*], [18 x %struct.MTex*], i32, i32 }
%struct.SunSky = type { i16, i16, i16, float, float, float, [3 x float], float, float, float, float, [5 x float], [5 x float], [5 x float], float, float, float, float, float, float, float, float, float, float, float, float, float, float, [3 x float], [3 x float], [3 x float], [3 x float], [3 x float] }
%struct.ShadBuf = type { i16, i16, i16, [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], float*, float*, float, float, float, float, float, [3 x i32], i32, i32, %struct.ListBase, [1 x %struct.ISBData*] }
%struct.ISBData = type { i16*, %struct.ISBShadfacA**, %struct.MemArena*, i32, i32, i32, i32 }
%struct.ISBShadfacA = type { %struct.ISBShadfacA*, i32, i32, float }
%struct.LampShadowSample = type { [16 x %struct.LampShadowSubSample] }
%struct.LampShadowSubSample = type { i32, [4 x float] }
%struct.APixstr = type { [4 x i16], [4 x i32], [4 x i32], [4 x i32], [4 x i16], %struct.APixstr* }
%struct.APixstrand = type { [4 x i16], [4 x i32], [4 x i32], [4 x i32], [4 x i32], [4 x float], [4 x float], %struct.APixstrand* }
%struct.ShadSampleBuf = type { %struct.ShadSampleBuf*, %struct.ShadSampleBuf*, i64*, i8*, %struct.DeepSample**, i32* }
%struct.DeepSample = type { i32, float }
%struct.ShadeInput = type { %struct.Material*, %struct.VlakRen*, %struct.StrandRen*, %struct.ObjectInstanceRen*, %struct.ObjectRen*, i32, [3 x float], i16, %struct.VertRen*, %struct.VertRen*, %struct.VertRen*, i16, i16, i16, i16, i16, [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], i32, i32, float, float, float, float, float, float, [3 x float], [3 x float], [3 x float], float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, i32, [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [4 x float], [4 x float], [3 x float], float, [3 x float], [3 x float], [4 x float], float, [4 x float], [3 x float], [3 x float], [8 x %struct.ShadeInputUV], [8 x %struct.ShadeInputCol], i32, i32, i32, i32, [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], float, float, [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], float, float, [3 x float], [3 x float], [3 x float], i32, i32, i32, [3 x float], i32, i32, i32, [3 x float], float, i8, i8, i16, i16, i16, i32, i32, i32, i32, %struct.Group*, %struct.Material* }
%struct.ShadeInputUV = type { [3 x float], [3 x float], [3 x float], i8* }
%struct.ShadeInputCol = type { [4 x float], i8* }
%struct.RenderPart = type { %struct.RenderPart*, %struct.RenderPart*, %struct.RenderResult*, %struct.ListBase, i32*, i32*, i32*, i32*, i64*, i32*, i32*, i32*, i64*, %struct.rcti, i32, i32, i32, i16, i16, i16, i16, i8* }
%struct.GroupObject = type { %struct.GroupObject*, %struct.GroupObject*, %struct.Object*, i8*, i16, [6 x i8] }
%struct.ISBSampleA = type { [3 x float], i16*, i32, i32, %struct.ISBSampleA* }
%struct.ISBBranch = type { %struct.ISBBranch*, %struct.ISBBranch*, [2 x float], %struct.Boxf, i16, i16, i16, i16, %struct.ISBSample** }
%struct.Boxf = type { float, float, float, float, float, float }
%struct.ISBSample = type { [3 x float], i16*, i32, i32 }
%struct.PixStr = type { %struct.PixStr*, i32, i32, i32, i32, i16, i16 }
%struct.ZSpan = type { i32, i32, i32, i32, i32, i32, float*, float*, float*, float*, float*, float*, float, float, float, float, i32*, i32*, i32*, i32*, i32*, i32*, %struct.APixstr*, %struct.APixstr*, %struct.APixstrand*, %struct.ListBase*, i32, float, i32, i32, i32, float, i8*, void (i8*, i32, i32, i32, i32, i32)*, void (%struct.ZSpan*, i32, i32, float*, float*, float*, float*)*, void (%struct.ZSpan*, i32, i32, float*, float*)* }
%struct.BSPFace = type { %struct.Boxf, float*, float*, float*, float*, i32, i32, i32, i16, i16, float, float, float, [3 x float], [3 x float], [3 x float] }

@G = external dso_local global %struct.Global, align 8
@g_break = internal global i32 0, align 4, !dbg !0
@MEM_freeN = external dso_local global void (i8*)*, align 8
@R = external dso_local global %struct.Render, align 8
@MEM_callocN = external dso_local global i8* (i64, i8*)*, align 8
@.str = private unnamed_addr constant [9 x i8] c"isb data\00", align 1
@.str.1 = private unnamed_addr constant [13 x i8] c"autoclipflag\00", align 1
@give_jitter_tab.tab = internal global [17 x i32] [i32 1, i32 4, i32 9, i32 16, i32 25, i32 36, i32 49, i32 64, i32 81, i32 100, i32 121, i32 144, i32 169, i32 196, i32 225, i32 256, i32 0], align 16, !dbg !2262
@give_jitter_tab.jit = internal global [1496 x [2 x float]] zeroinitializer, align 16, !dbg !2270
@give_jitter_tab.ctab = internal global [17 x i8] zeroinitializer, align 16, !dbg !2275
@MEM_mallocN = external dso_local global i8* (i64, i8*)*, align 8
@.str.2 = private unnamed_addr constant [16 x i8] c"weight tab lamp\00", align 1
@.str.3 = private unnamed_addr constant [8 x i8] c"APixbuf\00", align 1
@.str.4 = private unnamed_addr constant [14 x i8] c"APixbufstrand\00", align 1
@.str.5 = private unnamed_addr constant [16 x i8] c"shad sample buf\00", align 1
@.str.6 = private unnamed_addr constant [11 x i8] c"deeptotbuf\00", align 1
@.str.7 = private unnamed_addr constant [8 x i8] c"deepbuf\00", align 1
@.str.8 = private unnamed_addr constant [11 x i8] c"deepsample\00", align 1
@.str.9 = private unnamed_addr constant [12 x i8] c"cdeepsample\00", align 1
@MEM_mapallocN = external dso_local global i8* (i64, i8*)*, align 8
@.str.10 = private unnamed_addr constant [12 x i8] c"makeshadbuf\00", align 1
@.str.11 = private unnamed_addr constant [13 x i8] c"initshadbuf2\00", align 1
@.str.12 = private unnamed_addr constant [13 x i8] c"initshadbuf3\00", align 1
@.str.13 = private unnamed_addr constant [13 x i8] c"makeshadbuf2\00", align 1
@.str.14 = private unnamed_addr constant [6 x i8] c"tile1\00", align 1
@.str.15 = private unnamed_addr constant [6 x i8] c"Tile2\00", align 1
@.str.16 = private unnamed_addr constant [6 x i8] c"Tile3\00", align 1
@.str.17 = private unnamed_addr constant [10 x i8] c"isb arena\00", align 1
@.str.18 = private unnamed_addr constant [20 x i8] c"isb alpha samplebuf\00", align 1
@.str.19 = private unnamed_addr constant [13 x i8] c"isb shadfacs\00", align 1
@.str.20 = private unnamed_addr constant [22 x i8] c"error in filling bsp\0A\00", align 1
@.str.21 = private unnamed_addr constant [5 x i8] c"xcos\00", align 1
@.str.22 = private unnamed_addr constant [5 x i8] c"ycos\00", align 1
@.str.23 = private unnamed_addr constant [21 x i8] c"error in bsp branch\0A\00", align 1
@.str.24 = private unnamed_addr constant [14 x i8] c"isb samplebuf\00", align 1

; Function Attrs: noinline nounwind uwtable
define dso_local void @makeshadowbuf(%struct.Render* %re, %struct.LampRen* %lar) #0 !dbg !2283 {
entry:
  %re.addr = alloca %struct.Render*, align 8
  %lar.addr = alloca %struct.LampRen*, align 8
  %shb = alloca %struct.ShadBuf*, align 8
  %wsize = alloca float, align 4
  %jitbuf = alloca float*, align 8
  %twozero = alloca [2 x float], align 4
  %angle = alloca float, align 4
  %temp = alloca float, align 4
  store %struct.Render* %re, %struct.Render** %re.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Render** %re.addr, metadata !2456, metadata !DIExpression()), !dbg !2457
  store %struct.LampRen* %lar, %struct.LampRen** %lar.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.LampRen** %lar.addr, metadata !2458, metadata !DIExpression()), !dbg !2459
  call void @llvm.dbg.declare(metadata %struct.ShadBuf** %shb, metadata !2460, metadata !DIExpression()), !dbg !2463
  %0 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !2464
  %shb1 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %0, i32 0, i32 57, !dbg !2465
  %1 = load %struct.ShadBuf*, %struct.ShadBuf** %shb1, align 8, !dbg !2465
  store %struct.ShadBuf* %1, %struct.ShadBuf** %shb, align 8, !dbg !2463
  call void @llvm.dbg.declare(metadata float* %wsize, metadata !2466, metadata !DIExpression()), !dbg !2467
  call void @llvm.dbg.declare(metadata float** %jitbuf, metadata !2468, metadata !DIExpression()), !dbg !2469
  call void @llvm.dbg.declare(metadata [2 x float]* %twozero, metadata !2470, metadata !DIExpression()), !dbg !2471
  %2 = bitcast [2 x float]* %twozero to i8*, !dbg !2471
  call void @llvm.memset.p0i8.i64(i8* align 4 %2, i8 0, i64 8, i1 false), !dbg !2471
  call void @llvm.dbg.declare(metadata float* %angle, metadata !2472, metadata !DIExpression()), !dbg !2473
  call void @llvm.dbg.declare(metadata float* %temp, metadata !2474, metadata !DIExpression()), !dbg !2475
  %3 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !2476
  %bufflag = getelementptr inbounds %struct.LampRen, %struct.LampRen* %3, i32 0, i32 37, !dbg !2478
  %4 = load i16, i16* %bufflag, align 2, !dbg !2478
  %conv = sext i16 %4 to i32, !dbg !2476
  %and = and i32 %conv, 3, !dbg !2479
  %tobool = icmp ne i32 %and, 0, !dbg !2479
  br i1 %tobool, label %if.then, label %if.end, !dbg !2480

if.then:                                          ; preds = %entry
  %5 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !2481
  %6 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !2482
  call void @shadowbuf_autoclip(%struct.Render* %5, %struct.LampRen* %6), !dbg !2483
  br label %if.end, !dbg !2483

if.end:                                           ; preds = %if.then, %entry
  %7 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !2484
  %buftype = getelementptr inbounds %struct.LampRen, %struct.LampRen* %7, i32 0, i32 36, !dbg !2486
  %8 = load i16, i16* %buftype, align 4, !dbg !2486
  %conv2 = sext i16 %8 to i32, !dbg !2484
  %cmp = icmp eq i32 %conv2, 1, !dbg !2487
  br i1 %cmp, label %if.then4, label %if.end5, !dbg !2488

if.then4:                                         ; preds = %if.end
  %9 = load %struct.ShadBuf*, %struct.ShadBuf** %shb, align 8, !dbg !2489
  %size = getelementptr inbounds %struct.ShadBuf, %struct.ShadBuf* %9, i32 0, i32 14, !dbg !2490
  store i32 1024, i32* %size, align 8, !dbg !2491
  br label %if.end5, !dbg !2489

if.end5:                                          ; preds = %if.then4, %if.end
  %10 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !2492
  %spotsi = getelementptr inbounds %struct.LampRen, %struct.LampRen* %10, i32 0, i32 18, !dbg !2493
  %11 = load float, float* %spotsi, align 8, !dbg !2493
  %call = call float @saacos(float %11), !dbg !2494
  store float %call, float* %angle, align 4, !dbg !2495
  %12 = load %struct.ShadBuf*, %struct.ShadBuf** %shb, align 8, !dbg !2496
  %size6 = getelementptr inbounds %struct.ShadBuf, %struct.ShadBuf* %12, i32 0, i32 14, !dbg !2497
  %13 = load i32, i32* %size6, align 8, !dbg !2497
  %conv7 = sitofp i32 %13 to float, !dbg !2496
  %mul = fmul float 5.000000e-01, %conv7, !dbg !2498
  %14 = load float, float* %angle, align 4, !dbg !2499
  %call8 = call float @cosf(float %14) #5, !dbg !2500
  %mul9 = fmul float %mul, %call8, !dbg !2501
  %15 = load float, float* %angle, align 4, !dbg !2502
  %call10 = call float @sinf(float %15) #5, !dbg !2503
  %div = fdiv float %mul9, %call10, !dbg !2504
  store float %div, float* %temp, align 4, !dbg !2505
  %16 = load %struct.ShadBuf*, %struct.ShadBuf** %shb, align 8, !dbg !2506
  %d = getelementptr inbounds %struct.ShadBuf, %struct.ShadBuf* %16, i32 0, i32 8, !dbg !2507
  %17 = load float, float* %d, align 8, !dbg !2507
  %18 = load float, float* %temp, align 4, !dbg !2508
  %div11 = fdiv float %17, %18, !dbg !2509
  %19 = load %struct.ShadBuf*, %struct.ShadBuf** %shb, align 8, !dbg !2510
  %pixsize = getelementptr inbounds %struct.ShadBuf, %struct.ShadBuf* %19, i32 0, i32 10, !dbg !2511
  store float %div11, float* %pixsize, align 8, !dbg !2512
  %20 = load %struct.ShadBuf*, %struct.ShadBuf** %shb, align 8, !dbg !2513
  %pixsize12 = getelementptr inbounds %struct.ShadBuf, %struct.ShadBuf* %20, i32 0, i32 10, !dbg !2514
  %21 = load float, float* %pixsize12, align 8, !dbg !2514
  %22 = load %struct.ShadBuf*, %struct.ShadBuf** %shb, align 8, !dbg !2515
  %size13 = getelementptr inbounds %struct.ShadBuf, %struct.ShadBuf* %22, i32 0, i32 14, !dbg !2516
  %23 = load i32, i32* %size13, align 8, !dbg !2516
  %conv14 = sitofp i32 %23 to float, !dbg !2515
  %div15 = fdiv float %conv14, 2.000000e+00, !dbg !2517
  %mul16 = fmul float %21, %div15, !dbg !2518
  store float %mul16, float* %wsize, align 4, !dbg !2519
  %24 = load %struct.ShadBuf*, %struct.ShadBuf** %shb, align 8, !dbg !2520
  %winmat = getelementptr inbounds %struct.ShadBuf, %struct.ShadBuf* %24, i32 0, i32 5, !dbg !2521
  %arraydecay = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %winmat, i64 0, i64 0, !dbg !2520
  %25 = load float, float* %wsize, align 4, !dbg !2522
  %fneg = fneg float %25, !dbg !2523
  %26 = load float, float* %wsize, align 4, !dbg !2524
  %27 = load float, float* %wsize, align 4, !dbg !2525
  %fneg17 = fneg float %27, !dbg !2526
  %28 = load float, float* %wsize, align 4, !dbg !2527
  %29 = load %struct.ShadBuf*, %struct.ShadBuf** %shb, align 8, !dbg !2528
  %d18 = getelementptr inbounds %struct.ShadBuf, %struct.ShadBuf* %29, i32 0, i32 8, !dbg !2529
  %30 = load float, float* %d18, align 8, !dbg !2529
  %31 = load %struct.ShadBuf*, %struct.ShadBuf** %shb, align 8, !dbg !2530
  %clipend = getelementptr inbounds %struct.ShadBuf, %struct.ShadBuf* %31, i32 0, i32 9, !dbg !2531
  %32 = load float, float* %clipend, align 4, !dbg !2531
  call void @perspective_m4([4 x float]* %arraydecay, float %fneg, float %26, float %fneg17, float %28, float %30, float %32), !dbg !2532
  %33 = load %struct.ShadBuf*, %struct.ShadBuf** %shb, align 8, !dbg !2533
  %persmat = getelementptr inbounds %struct.ShadBuf, %struct.ShadBuf* %33, i32 0, i32 3, !dbg !2534
  %arraydecay19 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %persmat, i64 0, i64 0, !dbg !2533
  %34 = load %struct.ShadBuf*, %struct.ShadBuf** %shb, align 8, !dbg !2535
  %winmat20 = getelementptr inbounds %struct.ShadBuf, %struct.ShadBuf* %34, i32 0, i32 5, !dbg !2536
  %arraydecay21 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %winmat20, i64 0, i64 0, !dbg !2535
  %35 = load %struct.ShadBuf*, %struct.ShadBuf** %shb, align 8, !dbg !2537
  %viewmat = getelementptr inbounds %struct.ShadBuf, %struct.ShadBuf* %35, i32 0, i32 4, !dbg !2538
  %arraydecay22 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %viewmat, i64 0, i64 0, !dbg !2537
  call void @mul_m4_m4m4([4 x float]* %arraydecay19, [4 x float]* %arraydecay21, [4 x float]* %arraydecay22), !dbg !2539
  %36 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !2540
  %buftype23 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %36, i32 0, i32 36, !dbg !2540
  %37 = load i16, i16* %buftype23, align 4, !dbg !2540
  %conv24 = sext i16 %37 to i32, !dbg !2540
  %cmp25 = icmp eq i32 %conv24, 0, !dbg !2540
  br i1 %cmp25, label %if.then36, label %lor.lhs.false, !dbg !2540

lor.lhs.false:                                    ; preds = %if.end5
  %38 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !2540
  %buftype27 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %38, i32 0, i32 36, !dbg !2540
  %39 = load i16, i16* %buftype27, align 4, !dbg !2540
  %conv28 = sext i16 %39 to i32, !dbg !2540
  %cmp29 = icmp eq i32 %conv28, 2, !dbg !2540
  br i1 %cmp29, label %if.then36, label %lor.lhs.false31, !dbg !2540

lor.lhs.false31:                                  ; preds = %lor.lhs.false
  %40 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !2540
  %buftype32 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %40, i32 0, i32 36, !dbg !2540
  %41 = load i16, i16* %buftype32, align 4, !dbg !2540
  %conv33 = sext i16 %41 to i32, !dbg !2540
  %cmp34 = icmp eq i32 %conv33, 3, !dbg !2540
  br i1 %cmp34, label %if.then36, label %if.end64, !dbg !2542

if.then36:                                        ; preds = %lor.lhs.false31, %lor.lhs.false, %if.end5
  %42 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !2543
  %buffers = getelementptr inbounds %struct.LampRen, %struct.LampRen* %42, i32 0, i32 34, !dbg !2545
  %43 = load i16, i16* %buffers, align 8, !dbg !2545
  %44 = load %struct.ShadBuf*, %struct.ShadBuf** %shb, align 8, !dbg !2546
  %totbuf = getelementptr inbounds %struct.ShadBuf, %struct.ShadBuf* %44, i32 0, i32 2, !dbg !2547
  store i16 %43, i16* %totbuf, align 4, !dbg !2548
  call void @BLI_lock_thread(i32 3), !dbg !2549
  %45 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !2550
  %r = getelementptr inbounds %struct.Render, %struct.Render* %45, i32 0, i32 45, !dbg !2551
  %46 = load %struct.ShadBuf*, %struct.ShadBuf** %shb, align 8, !dbg !2552
  %samp = getelementptr inbounds %struct.ShadBuf, %struct.ShadBuf* %46, i32 0, i32 0, !dbg !2553
  %47 = load i16, i16* %samp, align 8, !dbg !2553
  %conv37 = sext i16 %47 to i32, !dbg !2552
  %call38 = call i32 @get_render_shadow_samples(%struct.RenderData* %r, i32 %conv37), !dbg !2554
  %call39 = call float* @give_jitter_tab(i32 %call38), !dbg !2555
  %48 = load %struct.ShadBuf*, %struct.ShadBuf** %shb, align 8, !dbg !2556
  %jit = getelementptr inbounds %struct.ShadBuf, %struct.ShadBuf* %48, i32 0, i32 6, !dbg !2557
  store float* %call39, float** %jit, align 8, !dbg !2558
  %49 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !2559
  %50 = load %struct.ShadBuf*, %struct.ShadBuf** %shb, align 8, !dbg !2560
  %51 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !2561
  %filtertype = getelementptr inbounds %struct.LampRen, %struct.LampRen* %51, i32 0, i32 35, !dbg !2562
  %52 = load i16, i16* %filtertype, align 2, !dbg !2562
  call void @make_jitter_weight_tab(%struct.Render* %49, %struct.ShadBuf* %50, i16 signext %52), !dbg !2563
  call void @BLI_unlock_thread(i32 3), !dbg !2564
  %53 = load %struct.ShadBuf*, %struct.ShadBuf** %shb, align 8, !dbg !2565
  %totbuf40 = getelementptr inbounds %struct.ShadBuf, %struct.ShadBuf* %53, i32 0, i32 2, !dbg !2567
  %54 = load i16, i16* %totbuf40, align 4, !dbg !2567
  %conv41 = sext i16 %54 to i32, !dbg !2565
  %cmp42 = icmp eq i32 %conv41, 4, !dbg !2568
  br i1 %cmp42, label %if.then44, label %if.else, !dbg !2569

if.then44:                                        ; preds = %if.then36
  %call45 = call float* @give_jitter_tab(i32 2), !dbg !2570
  store float* %call45, float** %jitbuf, align 8, !dbg !2571
  br label %if.end55, !dbg !2572

if.else:                                          ; preds = %if.then36
  %55 = load %struct.ShadBuf*, %struct.ShadBuf** %shb, align 8, !dbg !2573
  %totbuf46 = getelementptr inbounds %struct.ShadBuf, %struct.ShadBuf* %55, i32 0, i32 2, !dbg !2575
  %56 = load i16, i16* %totbuf46, align 4, !dbg !2575
  %conv47 = sext i16 %56 to i32, !dbg !2573
  %cmp48 = icmp eq i32 %conv47, 9, !dbg !2576
  br i1 %cmp48, label %if.then50, label %if.else52, !dbg !2577

if.then50:                                        ; preds = %if.else
  %call51 = call float* @give_jitter_tab(i32 3), !dbg !2578
  store float* %call51, float** %jitbuf, align 8, !dbg !2579
  br label %if.end54, !dbg !2580

if.else52:                                        ; preds = %if.else
  %arraydecay53 = getelementptr inbounds [2 x float], [2 x float]* %twozero, i64 0, i64 0, !dbg !2581
  store float* %arraydecay53, float** %jitbuf, align 8, !dbg !2582
  br label %if.end54

if.end54:                                         ; preds = %if.else52, %if.then50
  br label %if.end55

if.end55:                                         ; preds = %if.end54, %if.then44
  %57 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !2583
  %buftype56 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %57, i32 0, i32 36, !dbg !2585
  %58 = load i16, i16* %buftype56, align 4, !dbg !2585
  %conv57 = sext i16 %58 to i32, !dbg !2583
  %cmp58 = icmp eq i32 %conv57, 3, !dbg !2586
  br i1 %cmp58, label %if.then60, label %if.else62, !dbg !2587

if.then60:                                        ; preds = %if.end55
  %59 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !2588
  %60 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !2590
  %61 = load float*, float** %jitbuf, align 8, !dbg !2591
  call void @makedeepshadowbuf(%struct.Render* %59, %struct.LampRen* %60, float* %61), !dbg !2592
  %62 = load %struct.ShadBuf*, %struct.ShadBuf** %shb, align 8, !dbg !2593
  %totbuf61 = getelementptr inbounds %struct.ShadBuf, %struct.ShadBuf* %62, i32 0, i32 2, !dbg !2594
  store i16 1, i16* %totbuf61, align 4, !dbg !2595
  br label %if.end63, !dbg !2596

if.else62:                                        ; preds = %if.end55
  %63 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !2597
  %64 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !2598
  %65 = load float*, float** %jitbuf, align 8, !dbg !2599
  call void @makeflatshadowbuf(%struct.Render* %63, %struct.LampRen* %64, float* %65), !dbg !2600
  br label %if.end63

if.end63:                                         ; preds = %if.else62, %if.then60
  br label %if.end64, !dbg !2601

if.end64:                                         ; preds = %if.end63, %lor.lhs.false31
  ret void, !dbg !2602
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: noinline nounwind uwtable
define internal void @shadowbuf_autoclip(%struct.Render* %re, %struct.LampRen* %lar) #0 !dbg !2603 {
entry:
  %re.addr = alloca %struct.Render*, align 8
  %lar.addr = alloca %struct.LampRen*, align 8
  %obi = alloca %struct.ObjectInstanceRen*, align 8
  %obr = alloca %struct.ObjectRen*, align 8
  %vlr = alloca %struct.VlakRen*, align 8
  %ver = alloca %struct.VertRen*, align 8
  %ma = alloca %struct.Material*, align 8
  %minz = alloca float, align 4
  %maxz = alloca float, align 4
  %vec = alloca [3 x float], align 4
  %viewmat = alloca [4 x [4 x float]], align 16
  %obviewmat = alloca [4 x [4 x float]], align 16
  %lay = alloca i32, align 4
  %i = alloca i32, align 4
  %a = alloca i32, align 4
  %maxtotvert = alloca i32, align 4
  %ok = alloca i32, align 4
  %clipflag = alloca i8*, align 8
  %inpr = alloca float, align 4
  %z = alloca float, align 4
  %delta = alloca float, align 4
  store %struct.Render* %re, %struct.Render** %re.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Render** %re.addr, metadata !2604, metadata !DIExpression()), !dbg !2605
  store %struct.LampRen* %lar, %struct.LampRen** %lar.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.LampRen** %lar.addr, metadata !2606, metadata !DIExpression()), !dbg !2607
  call void @llvm.dbg.declare(metadata %struct.ObjectInstanceRen** %obi, metadata !2608, metadata !DIExpression()), !dbg !2611
  call void @llvm.dbg.declare(metadata %struct.ObjectRen** %obr, metadata !2612, metadata !DIExpression()), !dbg !2613
  call void @llvm.dbg.declare(metadata %struct.VlakRen** %vlr, metadata !2614, metadata !DIExpression()), !dbg !2617
  store %struct.VlakRen* null, %struct.VlakRen** %vlr, align 8, !dbg !2617
  call void @llvm.dbg.declare(metadata %struct.VertRen** %ver, metadata !2618, metadata !DIExpression()), !dbg !2621
  store %struct.VertRen* null, %struct.VertRen** %ver, align 8, !dbg !2621
  call void @llvm.dbg.declare(metadata %struct.Material** %ma, metadata !2622, metadata !DIExpression()), !dbg !2625
  store %struct.Material* null, %struct.Material** %ma, align 8, !dbg !2625
  call void @llvm.dbg.declare(metadata float* %minz, metadata !2626, metadata !DIExpression()), !dbg !2627
  call void @llvm.dbg.declare(metadata float* %maxz, metadata !2628, metadata !DIExpression()), !dbg !2629
  call void @llvm.dbg.declare(metadata [3 x float]* %vec, metadata !2630, metadata !DIExpression()), !dbg !2631
  call void @llvm.dbg.declare(metadata [4 x [4 x float]]* %viewmat, metadata !2632, metadata !DIExpression()), !dbg !2633
  call void @llvm.dbg.declare(metadata [4 x [4 x float]]* %obviewmat, metadata !2634, metadata !DIExpression()), !dbg !2635
  call void @llvm.dbg.declare(metadata i32* %lay, metadata !2636, metadata !DIExpression()), !dbg !2637
  store i32 -1, i32* %lay, align 4, !dbg !2637
  call void @llvm.dbg.declare(metadata i32* %i, metadata !2638, metadata !DIExpression()), !dbg !2639
  call void @llvm.dbg.declare(metadata i32* %a, metadata !2640, metadata !DIExpression()), !dbg !2641
  call void @llvm.dbg.declare(metadata i32* %maxtotvert, metadata !2642, metadata !DIExpression()), !dbg !2643
  call void @llvm.dbg.declare(metadata i32* %ok, metadata !2644, metadata !DIExpression()), !dbg !2645
  store i32 1, i32* %ok, align 4, !dbg !2645
  call void @llvm.dbg.declare(metadata i8** %clipflag, metadata !2646, metadata !DIExpression()), !dbg !2647
  store float 0x46293E5940000000, float* %minz, align 4, !dbg !2648
  store float 0xC6293E5940000000, float* %maxz, align 4, !dbg !2649
  %arraydecay = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %viewmat, i64 0, i64 0, !dbg !2650
  %0 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !2651
  %shb = getelementptr inbounds %struct.LampRen, %struct.LampRen* %0, i32 0, i32 57, !dbg !2652
  %1 = load %struct.ShadBuf*, %struct.ShadBuf** %shb, align 8, !dbg !2652
  %viewmat1 = getelementptr inbounds %struct.ShadBuf, %struct.ShadBuf* %1, i32 0, i32 4, !dbg !2653
  %arraydecay2 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %viewmat1, i64 0, i64 0, !dbg !2651
  call void @copy_m4_m4([4 x float]* %arraydecay, [4 x float]* %arraydecay2), !dbg !2654
  %2 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !2655
  %mode = getelementptr inbounds %struct.LampRen, %struct.LampRen* %2, i32 0, i32 7, !dbg !2657
  %3 = load i32, i32* %mode, align 4, !dbg !2657
  %and = and i32 %3, 32772, !dbg !2658
  %tobool = icmp ne i32 %and, 0, !dbg !2658
  br i1 %tobool, label %if.then, label %if.end, !dbg !2659

if.then:                                          ; preds = %entry
  %4 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !2660
  %lay3 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %4, i32 0, i32 17, !dbg !2661
  %5 = load i32, i32* %lay3, align 4, !dbg !2661
  store i32 %5, i32* %lay, align 4, !dbg !2662
  br label %if.end, !dbg !2663

if.end:                                           ; preds = %if.then, %entry
  store i32 0, i32* %maxtotvert, align 4, !dbg !2664
  %6 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !2665
  %objecttable = getelementptr inbounds %struct.Render, %struct.Render* %6, i32 0, i32 68, !dbg !2667
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %objecttable, i32 0, i32 0, !dbg !2668
  %7 = load i8*, i8** %first, align 8, !dbg !2668
  %8 = bitcast i8* %7 to %struct.ObjectRen*, !dbg !2665
  store %struct.ObjectRen* %8, %struct.ObjectRen** %obr, align 8, !dbg !2669
  br label %for.cond, !dbg !2670

for.cond:                                         ; preds = %for.inc, %if.end
  %9 = load %struct.ObjectRen*, %struct.ObjectRen** %obr, align 8, !dbg !2671
  %tobool4 = icmp ne %struct.ObjectRen* %9, null, !dbg !2673
  br i1 %tobool4, label %for.body, label %for.end, !dbg !2673

for.body:                                         ; preds = %for.cond
  %10 = load %struct.ObjectRen*, %struct.ObjectRen** %obr, align 8, !dbg !2674
  %totvert = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %10, i32 0, i32 10, !dbg !2675
  %11 = load i32, i32* %totvert, align 8, !dbg !2675
  %12 = load i32, i32* %maxtotvert, align 4, !dbg !2676
  %call = call i32 @max_ii(i32 %11, i32 %12), !dbg !2677
  store i32 %call, i32* %maxtotvert, align 4, !dbg !2678
  br label %for.inc, !dbg !2679

for.inc:                                          ; preds = %for.body
  %13 = load %struct.ObjectRen*, %struct.ObjectRen** %obr, align 8, !dbg !2680
  %next = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %13, i32 0, i32 0, !dbg !2681
  %14 = load %struct.ObjectRen*, %struct.ObjectRen** %next, align 8, !dbg !2681
  store %struct.ObjectRen* %14, %struct.ObjectRen** %obr, align 8, !dbg !2682
  br label %for.cond, !dbg !2683, !llvm.loop !2684

for.end:                                          ; preds = %for.cond
  %15 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !2686
  %16 = load i32, i32* %maxtotvert, align 4, !dbg !2687
  %conv = sext i32 %16 to i64, !dbg !2687
  %mul = mul i64 1, %conv, !dbg !2688
  %call5 = call i8* %15(i64 %mul, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.1, i64 0, i64 0)), !dbg !2686
  store i8* %call5, i8** %clipflag, align 8, !dbg !2689
  store i32 0, i32* %i, align 4, !dbg !2690
  %17 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !2692
  %instancetable = getelementptr inbounds %struct.Render, %struct.Render* %17, i32 0, i32 70, !dbg !2693
  %first6 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %instancetable, i32 0, i32 0, !dbg !2694
  %18 = load i8*, i8** %first6, align 8, !dbg !2694
  %19 = bitcast i8* %18 to %struct.ObjectInstanceRen*, !dbg !2692
  store %struct.ObjectInstanceRen* %19, %struct.ObjectInstanceRen** %obi, align 8, !dbg !2695
  br label %for.cond7, !dbg !2696

for.cond7:                                        ; preds = %for.inc120, %for.end
  %20 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi, align 8, !dbg !2697
  %tobool8 = icmp ne %struct.ObjectInstanceRen* %20, null, !dbg !2699
  br i1 %tobool8, label %for.body9, label %for.end123, !dbg !2699

for.body9:                                        ; preds = %for.cond7
  %21 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi, align 8, !dbg !2700
  %obr10 = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %21, i32 0, i32 2, !dbg !2702
  %22 = load %struct.ObjectRen*, %struct.ObjectRen** %obr10, align 8, !dbg !2702
  store %struct.ObjectRen* %22, %struct.ObjectRen** %obr, align 8, !dbg !2703
  %23 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi, align 8, !dbg !2704
  %flag = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %23, i32 0, i32 11, !dbg !2706
  %24 = load i16, i16* %flag, align 8, !dbg !2706
  %conv11 = sext i16 %24 to i32, !dbg !2704
  %and12 = and i32 %conv11, 3, !dbg !2707
  %tobool13 = icmp ne i32 %and12, 0, !dbg !2707
  br i1 %tobool13, label %if.then14, label %if.else, !dbg !2708

if.then14:                                        ; preds = %for.body9
  %arraydecay15 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obviewmat, i64 0, i64 0, !dbg !2709
  %arraydecay16 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %viewmat, i64 0, i64 0, !dbg !2710
  %25 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi, align 8, !dbg !2711
  %mat = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %25, i32 0, i32 8, !dbg !2712
  %arraydecay17 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %mat, i64 0, i64 0, !dbg !2711
  call void @mul_m4_m4m4([4 x float]* %arraydecay15, [4 x float]* %arraydecay16, [4 x float]* %arraydecay17), !dbg !2713
  br label %if.end20, !dbg !2713

if.else:                                          ; preds = %for.body9
  %arraydecay18 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obviewmat, i64 0, i64 0, !dbg !2714
  %arraydecay19 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %viewmat, i64 0, i64 0, !dbg !2715
  call void @copy_m4_m4([4 x float]* %arraydecay18, [4 x float]* %arraydecay19), !dbg !2716
  br label %if.end20

if.end20:                                         ; preds = %if.else, %if.then14
  %26 = load i8*, i8** %clipflag, align 8, !dbg !2717
  %27 = load %struct.ObjectRen*, %struct.ObjectRen** %obr, align 8, !dbg !2718
  %totvert21 = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %27, i32 0, i32 10, !dbg !2719
  %28 = load i32, i32* %totvert21, align 8, !dbg !2719
  %conv22 = sext i32 %28 to i64, !dbg !2718
  %mul23 = mul i64 1, %conv22, !dbg !2720
  call void @llvm.memset.p0i8.i64(i8* align 1 %26, i8 0, i64 %mul23, i1 false), !dbg !2721
  store i32 0, i32* %a, align 4, !dbg !2722
  br label %for.cond24, !dbg !2724

for.cond24:                                       ; preds = %for.inc69, %if.end20
  %29 = load i32, i32* %a, align 4, !dbg !2725
  %30 = load %struct.ObjectRen*, %struct.ObjectRen** %obr, align 8, !dbg !2727
  %totvlak = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %30, i32 0, i32 11, !dbg !2728
  %31 = load i32, i32* %totvlak, align 4, !dbg !2728
  %cmp = icmp slt i32 %29, %31, !dbg !2729
  br i1 %cmp, label %for.body26, label %for.end70, !dbg !2730

for.body26:                                       ; preds = %for.cond24
  %32 = load i32, i32* %a, align 4, !dbg !2731
  %and27 = and i32 %32, 255, !dbg !2734
  %cmp28 = icmp eq i32 %and27, 0, !dbg !2735
  br i1 %cmp28, label %if.then30, label %if.else31, !dbg !2736

if.then30:                                        ; preds = %for.body26
  %33 = load %struct.ObjectRen*, %struct.ObjectRen** %obr, align 8, !dbg !2737
  %vlaknodes = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %33, i32 0, i32 19, !dbg !2738
  %34 = load %struct.VlakTableNode*, %struct.VlakTableNode** %vlaknodes, align 8, !dbg !2738
  %35 = load i32, i32* %a, align 4, !dbg !2739
  %shr = ashr i32 %35, 8, !dbg !2740
  %idxprom = sext i32 %shr to i64, !dbg !2737
  %arrayidx = getelementptr inbounds %struct.VlakTableNode, %struct.VlakTableNode* %34, i64 %idxprom, !dbg !2737
  %vlak = getelementptr inbounds %struct.VlakTableNode, %struct.VlakTableNode* %arrayidx, i32 0, i32 0, !dbg !2741
  %36 = load %struct.VlakRen*, %struct.VlakRen** %vlak, align 8, !dbg !2741
  store %struct.VlakRen* %36, %struct.VlakRen** %vlr, align 8, !dbg !2742
  br label %if.end32, !dbg !2743

if.else31:                                        ; preds = %for.body26
  %37 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !2744
  %incdec.ptr = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %37, i32 1, !dbg !2744
  store %struct.VlakRen* %incdec.ptr, %struct.VlakRen** %vlr, align 8, !dbg !2744
  br label %if.end32

if.end32:                                         ; preds = %if.else31, %if.then30
  %38 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !2745
  %mat33 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %38, i32 0, i32 5, !dbg !2747
  %39 = load %struct.Material*, %struct.Material** %mat33, align 8, !dbg !2747
  %40 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !2748
  %cmp34 = icmp ne %struct.Material* %39, %40, !dbg !2749
  br i1 %cmp34, label %if.then36, label %if.end47, !dbg !2750

if.then36:                                        ; preds = %if.end32
  %41 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !2751
  %mat37 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %41, i32 0, i32 5, !dbg !2753
  %42 = load %struct.Material*, %struct.Material** %mat37, align 8, !dbg !2753
  store %struct.Material* %42, %struct.Material** %ma, align 8, !dbg !2754
  store i32 1, i32* %ok, align 4, !dbg !2755
  %43 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !2756
  %mode2 = getelementptr inbounds %struct.Material, %struct.Material* %43, i32 0, i32 53, !dbg !2758
  %44 = load i32, i32* %mode2, align 4, !dbg !2758
  %and38 = and i32 %44, 1, !dbg !2759
  %cmp39 = icmp eq i32 %and38, 0, !dbg !2760
  br i1 %cmp39, label %if.then45, label %lor.lhs.false, !dbg !2761

lor.lhs.false:                                    ; preds = %if.then36
  %45 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !2762
  %mode41 = getelementptr inbounds %struct.Material, %struct.Material* %45, i32 0, i32 51, !dbg !2763
  %46 = load i32, i32* %mode41, align 4, !dbg !2763
  %and42 = and i32 %46, 33554432, !dbg !2764
  %cmp43 = icmp eq i32 %and42, 0, !dbg !2765
  br i1 %cmp43, label %if.then45, label %if.end46, !dbg !2766

if.then45:                                        ; preds = %lor.lhs.false, %if.then36
  store i32 0, i32* %ok, align 4, !dbg !2767
  br label %if.end46, !dbg !2768

if.end46:                                         ; preds = %if.then45, %lor.lhs.false
  br label %if.end47, !dbg !2769

if.end47:                                         ; preds = %if.end46, %if.end32
  %47 = load i32, i32* %ok, align 4, !dbg !2770
  %tobool48 = icmp ne i32 %47, 0, !dbg !2770
  br i1 %tobool48, label %land.lhs.true, label %if.end68, !dbg !2772

land.lhs.true:                                    ; preds = %if.end47
  %48 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi, align 8, !dbg !2773
  %lay49 = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %48, i32 0, i32 7, !dbg !2774
  %49 = load i32, i32* %lay49, align 8, !dbg !2774
  %50 = load i32, i32* %lay, align 4, !dbg !2775
  %and50 = and i32 %49, %50, !dbg !2776
  %tobool51 = icmp ne i32 %and50, 0, !dbg !2776
  br i1 %tobool51, label %if.then52, label %if.end68, !dbg !2777

if.then52:                                        ; preds = %land.lhs.true
  %51 = load i8*, i8** %clipflag, align 8, !dbg !2778
  %52 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !2780
  %v1 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %52, i32 0, i32 0, !dbg !2781
  %53 = load %struct.VertRen*, %struct.VertRen** %v1, align 8, !dbg !2781
  %index = getelementptr inbounds %struct.VertRen, %struct.VertRen* %53, i32 0, i32 5, !dbg !2782
  %54 = load i32, i32* %index, align 8, !dbg !2782
  %idxprom53 = sext i32 %54 to i64, !dbg !2778
  %arrayidx54 = getelementptr inbounds i8, i8* %51, i64 %idxprom53, !dbg !2778
  store i8 1, i8* %arrayidx54, align 1, !dbg !2783
  %55 = load i8*, i8** %clipflag, align 8, !dbg !2784
  %56 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !2785
  %v2 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %56, i32 0, i32 1, !dbg !2786
  %57 = load %struct.VertRen*, %struct.VertRen** %v2, align 8, !dbg !2786
  %index55 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %57, i32 0, i32 5, !dbg !2787
  %58 = load i32, i32* %index55, align 8, !dbg !2787
  %idxprom56 = sext i32 %58 to i64, !dbg !2784
  %arrayidx57 = getelementptr inbounds i8, i8* %55, i64 %idxprom56, !dbg !2784
  store i8 1, i8* %arrayidx57, align 1, !dbg !2788
  %59 = load i8*, i8** %clipflag, align 8, !dbg !2789
  %60 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !2790
  %v3 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %60, i32 0, i32 2, !dbg !2791
  %61 = load %struct.VertRen*, %struct.VertRen** %v3, align 8, !dbg !2791
  %index58 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %61, i32 0, i32 5, !dbg !2792
  %62 = load i32, i32* %index58, align 8, !dbg !2792
  %idxprom59 = sext i32 %62 to i64, !dbg !2789
  %arrayidx60 = getelementptr inbounds i8, i8* %59, i64 %idxprom59, !dbg !2789
  store i8 1, i8* %arrayidx60, align 1, !dbg !2793
  %63 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !2794
  %v4 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %63, i32 0, i32 3, !dbg !2796
  %64 = load %struct.VertRen*, %struct.VertRen** %v4, align 8, !dbg !2796
  %tobool61 = icmp ne %struct.VertRen* %64, null, !dbg !2794
  br i1 %tobool61, label %if.then62, label %if.end67, !dbg !2797

if.then62:                                        ; preds = %if.then52
  %65 = load i8*, i8** %clipflag, align 8, !dbg !2798
  %66 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !2799
  %v463 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %66, i32 0, i32 3, !dbg !2800
  %67 = load %struct.VertRen*, %struct.VertRen** %v463, align 8, !dbg !2800
  %index64 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %67, i32 0, i32 5, !dbg !2801
  %68 = load i32, i32* %index64, align 8, !dbg !2801
  %idxprom65 = sext i32 %68 to i64, !dbg !2798
  %arrayidx66 = getelementptr inbounds i8, i8* %65, i64 %idxprom65, !dbg !2798
  store i8 1, i8* %arrayidx66, align 1, !dbg !2802
  br label %if.end67, !dbg !2798

if.end67:                                         ; preds = %if.then62, %if.then52
  br label %if.end68, !dbg !2803

if.end68:                                         ; preds = %if.end67, %land.lhs.true, %if.end47
  br label %for.inc69, !dbg !2804

for.inc69:                                        ; preds = %if.end68
  %69 = load i32, i32* %a, align 4, !dbg !2805
  %inc = add nsw i32 %69, 1, !dbg !2805
  store i32 %inc, i32* %a, align 4, !dbg !2805
  br label %for.cond24, !dbg !2806, !llvm.loop !2807

for.end70:                                        ; preds = %for.cond24
  store i32 0, i32* %a, align 4, !dbg !2809
  br label %for.cond71, !dbg !2811

for.cond71:                                       ; preds = %for.inc117, %for.end70
  %70 = load i32, i32* %a, align 4, !dbg !2812
  %71 = load %struct.ObjectRen*, %struct.ObjectRen** %obr, align 8, !dbg !2814
  %totvert72 = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %71, i32 0, i32 10, !dbg !2815
  %72 = load i32, i32* %totvert72, align 8, !dbg !2815
  %cmp73 = icmp slt i32 %70, %72, !dbg !2816
  br i1 %cmp73, label %for.body75, label %for.end119, !dbg !2817

for.body75:                                       ; preds = %for.cond71
  %73 = load i32, i32* %a, align 4, !dbg !2818
  %and76 = and i32 %73, 255, !dbg !2821
  %cmp77 = icmp eq i32 %and76, 0, !dbg !2822
  br i1 %cmp77, label %if.then79, label %if.else81, !dbg !2823

if.then79:                                        ; preds = %for.body75
  %74 = load %struct.ObjectRen*, %struct.ObjectRen** %obr, align 8, !dbg !2824
  %75 = load i32, i32* %a, align 4, !dbg !2825
  %call80 = call %struct.VertRen* @RE_findOrAddVert(%struct.ObjectRen* %74, i32 %75), !dbg !2826
  store %struct.VertRen* %call80, %struct.VertRen** %ver, align 8, !dbg !2827
  br label %if.end83, !dbg !2828

if.else81:                                        ; preds = %for.body75
  %76 = load %struct.VertRen*, %struct.VertRen** %ver, align 8, !dbg !2829
  %incdec.ptr82 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %76, i32 1, !dbg !2829
  store %struct.VertRen* %incdec.ptr82, %struct.VertRen** %ver, align 8, !dbg !2829
  br label %if.end83

if.end83:                                         ; preds = %if.else81, %if.then79
  %77 = load i8*, i8** %clipflag, align 8, !dbg !2830
  %78 = load i32, i32* %a, align 4, !dbg !2832
  %idxprom84 = sext i32 %78 to i64, !dbg !2830
  %arrayidx85 = getelementptr inbounds i8, i8* %77, i64 %idxprom84, !dbg !2830
  %79 = load i8, i8* %arrayidx85, align 1, !dbg !2830
  %tobool86 = icmp ne i8 %79, 0, !dbg !2830
  br i1 %tobool86, label %if.then87, label %if.end116, !dbg !2833

if.then87:                                        ; preds = %if.end83
  %arraydecay88 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !2834
  %80 = load %struct.VertRen*, %struct.VertRen** %ver, align 8, !dbg !2836
  %co = getelementptr inbounds %struct.VertRen, %struct.VertRen* %80, i32 0, i32 0, !dbg !2837
  %arraydecay89 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !2836
  call void @copy_v3_v3(float* %arraydecay88, float* %arraydecay89), !dbg !2838
  %arraydecay90 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obviewmat, i64 0, i64 0, !dbg !2839
  %arraydecay91 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !2840
  call void @mul_m4_v3([4 x float]* %arraydecay90, float* %arraydecay91), !dbg !2841
  %arrayidx92 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 2, !dbg !2842
  %81 = load float, float* %arrayidx92, align 4, !dbg !2842
  %cmp93 = fcmp olt float %81, 0.000000e+00, !dbg !2844
  br i1 %cmp93, label %if.then95, label %if.end115, !dbg !2845

if.then95:                                        ; preds = %if.then87
  call void @llvm.dbg.declare(metadata float* %inpr, metadata !2846, metadata !DIExpression()), !dbg !2848
  call void @llvm.dbg.declare(metadata float* %z, metadata !2849, metadata !DIExpression()), !dbg !2850
  %arrayidx96 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 2, !dbg !2851
  %82 = load float, float* %arrayidx96, align 4, !dbg !2851
  %fneg = fneg float %82, !dbg !2852
  store float %fneg, float* %z, align 4, !dbg !2850
  %arrayidx97 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 2, !dbg !2853
  %83 = load float, float* %arrayidx97, align 4, !dbg !2854
  %mul98 = fmul float %83, 0x3FF3333340000000, !dbg !2854
  store float %mul98, float* %arrayidx97, align 4, !dbg !2854
  %arraydecay99 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !2855
  %call100 = call float @normalize_v3(float* %arraydecay99), !dbg !2856
  %arrayidx101 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 2, !dbg !2857
  %84 = load float, float* %arrayidx101, align 4, !dbg !2857
  %fneg102 = fneg float %84, !dbg !2858
  store float %fneg102, float* %inpr, align 4, !dbg !2859
  %85 = load float, float* %inpr, align 4, !dbg !2860
  %86 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !2862
  %spotsi = getelementptr inbounds %struct.LampRen, %struct.LampRen* %86, i32 0, i32 18, !dbg !2863
  %87 = load float, float* %spotsi, align 8, !dbg !2863
  %cmp103 = fcmp oge float %85, %87, !dbg !2864
  br i1 %cmp103, label %if.then105, label %if.end114, !dbg !2865

if.then105:                                       ; preds = %if.then95
  %88 = load float, float* %z, align 4, !dbg !2866
  %89 = load float, float* %minz, align 4, !dbg !2869
  %cmp106 = fcmp olt float %88, %89, !dbg !2870
  br i1 %cmp106, label %if.then108, label %if.end109, !dbg !2871

if.then108:                                       ; preds = %if.then105
  %90 = load float, float* %z, align 4, !dbg !2872
  store float %90, float* %minz, align 4, !dbg !2873
  br label %if.end109, !dbg !2874

if.end109:                                        ; preds = %if.then108, %if.then105
  %91 = load float, float* %z, align 4, !dbg !2875
  %92 = load float, float* %maxz, align 4, !dbg !2877
  %cmp110 = fcmp ogt float %91, %92, !dbg !2878
  br i1 %cmp110, label %if.then112, label %if.end113, !dbg !2879

if.then112:                                       ; preds = %if.end109
  %93 = load float, float* %z, align 4, !dbg !2880
  store float %93, float* %maxz, align 4, !dbg !2881
  br label %if.end113, !dbg !2882

if.end113:                                        ; preds = %if.then112, %if.end109
  br label %if.end114, !dbg !2883

if.end114:                                        ; preds = %if.end113, %if.then95
  br label %if.end115, !dbg !2884

if.end115:                                        ; preds = %if.end114, %if.then87
  br label %if.end116, !dbg !2885

if.end116:                                        ; preds = %if.end115, %if.end83
  br label %for.inc117, !dbg !2886

for.inc117:                                       ; preds = %if.end116
  %94 = load i32, i32* %a, align 4, !dbg !2887
  %inc118 = add nsw i32 %94, 1, !dbg !2887
  store i32 %inc118, i32* %a, align 4, !dbg !2887
  br label %for.cond71, !dbg !2888, !llvm.loop !2889

for.end119:                                       ; preds = %for.cond71
  br label %for.inc120, !dbg !2891

for.inc120:                                       ; preds = %for.end119
  %95 = load i32, i32* %i, align 4, !dbg !2892
  %inc121 = add nsw i32 %95, 1, !dbg !2892
  store i32 %inc121, i32* %i, align 4, !dbg !2892
  %96 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi, align 8, !dbg !2893
  %next122 = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %96, i32 0, i32 0, !dbg !2894
  %97 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %next122, align 8, !dbg !2894
  store %struct.ObjectInstanceRen* %97, %struct.ObjectInstanceRen** %obi, align 8, !dbg !2895
  br label %for.cond7, !dbg !2896, !llvm.loop !2897

for.end123:                                       ; preds = %for.cond7
  %98 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !2899
  %99 = load i8*, i8** %clipflag, align 8, !dbg !2900
  call void %98(i8* %99), !dbg !2899
  %100 = load float, float* %minz, align 4, !dbg !2901
  %101 = load float, float* %maxz, align 4, !dbg !2903
  %cmp124 = fcmp olt float %100, %101, !dbg !2904
  br i1 %cmp124, label %if.then126, label %if.end156, !dbg !2905

if.then126:                                       ; preds = %for.end123
  call void @llvm.dbg.declare(metadata float* %delta, metadata !2906, metadata !DIExpression()), !dbg !2908
  %102 = load float, float* %maxz, align 4, !dbg !2909
  %103 = load float, float* %minz, align 4, !dbg !2910
  %sub = fsub float %102, %103, !dbg !2911
  store float %sub, float* %delta, align 4, !dbg !2908
  %104 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !2912
  %bufflag = getelementptr inbounds %struct.LampRen, %struct.LampRen* %104, i32 0, i32 37, !dbg !2914
  %105 = load i16, i16* %bufflag, align 2, !dbg !2914
  %conv127 = sext i16 %105 to i32, !dbg !2912
  %and128 = and i32 %conv127, 1, !dbg !2915
  %tobool129 = icmp ne i32 %and128, 0, !dbg !2915
  br i1 %tobool129, label %if.then130, label %if.end134, !dbg !2916

if.then130:                                       ; preds = %if.then126
  %106 = load float, float* %minz, align 4, !dbg !2917
  %107 = load float, float* %delta, align 4, !dbg !2918
  %mul131 = fmul float %107, 0x3F947AE140000000, !dbg !2919
  %sub132 = fsub float %106, %mul131, !dbg !2920
  %108 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !2921
  %shb133 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %108, i32 0, i32 57, !dbg !2922
  %109 = load %struct.ShadBuf*, %struct.ShadBuf** %shb133, align 8, !dbg !2922
  %d = getelementptr inbounds %struct.ShadBuf, %struct.ShadBuf* %109, i32 0, i32 8, !dbg !2923
  store float %sub132, float* %d, align 8, !dbg !2924
  br label %if.end134, !dbg !2921

if.end134:                                        ; preds = %if.then130, %if.then126
  %110 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !2925
  %bufflag135 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %110, i32 0, i32 37, !dbg !2927
  %111 = load i16, i16* %bufflag135, align 2, !dbg !2927
  %conv136 = sext i16 %111 to i32, !dbg !2925
  %and137 = and i32 %conv136, 2, !dbg !2928
  %tobool138 = icmp ne i32 %and137, 0, !dbg !2928
  br i1 %tobool138, label %if.then139, label %if.end142, !dbg !2929

if.then139:                                       ; preds = %if.end134
  %112 = load float, float* %maxz, align 4, !dbg !2930
  %113 = load float, float* %delta, align 4, !dbg !2931
  %mul140 = fmul float %113, 0x3FB99999A0000000, !dbg !2932
  %add = fadd float %112, %mul140, !dbg !2933
  %114 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !2934
  %shb141 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %114, i32 0, i32 57, !dbg !2935
  %115 = load %struct.ShadBuf*, %struct.ShadBuf** %shb141, align 8, !dbg !2935
  %clipend = getelementptr inbounds %struct.ShadBuf, %struct.ShadBuf* %115, i32 0, i32 9, !dbg !2936
  store float %add, float* %clipend, align 4, !dbg !2937
  br label %if.end142, !dbg !2934

if.end142:                                        ; preds = %if.then139, %if.end134
  %116 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !2938
  %clipend143 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %116, i32 0, i32 40, !dbg !2939
  %117 = load float, float* %clipend143, align 8, !dbg !2939
  %118 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !2940
  %clipsta = getelementptr inbounds %struct.LampRen, %struct.LampRen* %118, i32 0, i32 39, !dbg !2941
  %119 = load float, float* %clipsta, align 4, !dbg !2941
  %sub144 = fsub float %117, %119, !dbg !2942
  %120 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !2943
  %shb145 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %120, i32 0, i32 57, !dbg !2944
  %121 = load %struct.ShadBuf*, %struct.ShadBuf** %shb145, align 8, !dbg !2944
  %clipend146 = getelementptr inbounds %struct.ShadBuf, %struct.ShadBuf* %121, i32 0, i32 9, !dbg !2945
  %122 = load float, float* %clipend146, align 4, !dbg !2945
  %123 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !2946
  %shb147 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %123, i32 0, i32 57, !dbg !2947
  %124 = load %struct.ShadBuf*, %struct.ShadBuf** %shb147, align 8, !dbg !2947
  %d148 = getelementptr inbounds %struct.ShadBuf, %struct.ShadBuf* %124, i32 0, i32 8, !dbg !2948
  %125 = load float, float* %d148, align 8, !dbg !2948
  %sub149 = fsub float %122, %125, !dbg !2949
  %div = fdiv float %sub144, %sub149, !dbg !2950
  store float %div, float* %delta, align 4, !dbg !2951
  %126 = load float, float* %delta, align 4, !dbg !2952
  %127 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !2953
  %shb150 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %127, i32 0, i32 57, !dbg !2954
  %128 = load %struct.ShadBuf*, %struct.ShadBuf** %shb150, align 8, !dbg !2954
  %bias = getelementptr inbounds %struct.ShadBuf, %struct.ShadBuf* %128, i32 0, i32 15, !dbg !2955
  %129 = load i32, i32* %bias, align 4, !dbg !2955
  %conv151 = sitofp i32 %129 to float, !dbg !2956
  %mul152 = fmul float %126, %conv151, !dbg !2957
  %conv153 = fptosi float %mul152 to i32, !dbg !2958
  %130 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !2959
  %shb154 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %130, i32 0, i32 57, !dbg !2960
  %131 = load %struct.ShadBuf*, %struct.ShadBuf** %shb154, align 8, !dbg !2960
  %bias155 = getelementptr inbounds %struct.ShadBuf, %struct.ShadBuf* %131, i32 0, i32 15, !dbg !2961
  store i32 %conv153, i32* %bias155, align 4, !dbg !2962
  br label %if.end156, !dbg !2963

if.end156:                                        ; preds = %if.end142, %for.end123
  ret void, !dbg !2964
}

; Function Attrs: noinline nounwind uwtable
define internal float @saacos(float %fac) #0 !dbg !2965 {
entry:
  %retval = alloca float, align 4
  %fac.addr = alloca float, align 4
  store float %fac, float* %fac.addr, align 4
  call void @llvm.dbg.declare(metadata float* %fac.addr, metadata !2969, metadata !DIExpression()), !dbg !2970
  %0 = load float, float* %fac.addr, align 4, !dbg !2971
  %cmp = fcmp ole float %0, -1.000000e+00, !dbg !2971
  br i1 %cmp, label %if.then, label %if.else, !dbg !2973

if.then:                                          ; preds = %entry
  store float 0x400921FB60000000, float* %retval, align 4, !dbg !2974
  br label %return, !dbg !2974

if.else:                                          ; preds = %entry
  %1 = load float, float* %fac.addr, align 4, !dbg !2975
  %cmp1 = fcmp oge float %1, 1.000000e+00, !dbg !2975
  br i1 %cmp1, label %if.then2, label %if.else3, !dbg !2977

if.then2:                                         ; preds = %if.else
  store float 0.000000e+00, float* %retval, align 4, !dbg !2978
  br label %return, !dbg !2978

if.else3:                                         ; preds = %if.else
  %2 = load float, float* %fac.addr, align 4, !dbg !2979
  %call = call float @acosf(float %2) #5, !dbg !2980
  store float %call, float* %retval, align 4, !dbg !2981
  br label %return, !dbg !2981

return:                                           ; preds = %if.else3, %if.then2, %if.then
  %3 = load float, float* %retval, align 4, !dbg !2982
  ret float %3, !dbg !2982
}

; Function Attrs: nounwind
declare dso_local float @cosf(float) #3

; Function Attrs: nounwind
declare dso_local float @sinf(float) #3

declare dso_local void @perspective_m4([4 x float]*, float, float, float, float, float, float) #4

declare dso_local void @mul_m4_m4m4([4 x float]*, [4 x float]*, [4 x float]*) #4

declare dso_local void @BLI_lock_thread(i32) #4

; Function Attrs: noinline nounwind uwtable
define internal float* @give_jitter_tab(i32 %samp) #0 !dbg !2264 {
entry:
  %samp.addr = alloca i32, align 4
  %a = alloca i32, align 4
  %offset = alloca i32, align 4
  store i32 %samp, i32* %samp.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %samp.addr, metadata !2983, metadata !DIExpression()), !dbg !2984
  call void @llvm.dbg.declare(metadata i32* %a, metadata !2985, metadata !DIExpression()), !dbg !2986
  call void @llvm.dbg.declare(metadata i32* %offset, metadata !2987, metadata !DIExpression()), !dbg !2988
  store i32 0, i32* %offset, align 4, !dbg !2988
  %0 = load i32, i32* %samp.addr, align 4, !dbg !2989
  %cmp = icmp slt i32 %0, 2, !dbg !2991
  br i1 %cmp, label %if.then, label %if.else, !dbg !2992

if.then:                                          ; preds = %entry
  store i32 2, i32* %samp.addr, align 4, !dbg !2993
  br label %if.end3, !dbg !2994

if.else:                                          ; preds = %entry
  %1 = load i32, i32* %samp.addr, align 4, !dbg !2995
  %cmp1 = icmp sgt i32 %1, 16, !dbg !2997
  br i1 %cmp1, label %if.then2, label %if.end, !dbg !2998

if.then2:                                         ; preds = %if.else
  store i32 16, i32* %samp.addr, align 4, !dbg !2999
  br label %if.end, !dbg !3000

if.end:                                           ; preds = %if.then2, %if.else
  br label %if.end3

if.end3:                                          ; preds = %if.end, %if.then
  store i32 0, i32* %a, align 4, !dbg !3001
  br label %for.cond, !dbg !3003

for.cond:                                         ; preds = %for.inc, %if.end3
  %2 = load i32, i32* %a, align 4, !dbg !3004
  %3 = load i32, i32* %samp.addr, align 4, !dbg !3006
  %sub = sub nsw i32 %3, 1, !dbg !3007
  %cmp4 = icmp slt i32 %2, %sub, !dbg !3008
  br i1 %cmp4, label %for.body, label %for.end, !dbg !3009

for.body:                                         ; preds = %for.cond
  %4 = load i32, i32* %a, align 4, !dbg !3010
  %idxprom = sext i32 %4 to i64, !dbg !3011
  %arrayidx = getelementptr inbounds [17 x i32], [17 x i32]* @give_jitter_tab.tab, i64 0, i64 %idxprom, !dbg !3011
  %5 = load i32, i32* %arrayidx, align 4, !dbg !3011
  %6 = load i32, i32* %offset, align 4, !dbg !3012
  %add = add nsw i32 %6, %5, !dbg !3012
  store i32 %add, i32* %offset, align 4, !dbg !3012
  br label %for.inc, !dbg !3013

for.inc:                                          ; preds = %for.body
  %7 = load i32, i32* %a, align 4, !dbg !3014
  %inc = add nsw i32 %7, 1, !dbg !3014
  store i32 %inc, i32* %a, align 4, !dbg !3014
  br label %for.cond, !dbg !3015, !llvm.loop !3016

for.end:                                          ; preds = %for.cond
  %8 = load i32, i32* %samp.addr, align 4, !dbg !3018
  %idxprom5 = sext i32 %8 to i64, !dbg !3020
  %arrayidx6 = getelementptr inbounds [17 x i8], [17 x i8]* @give_jitter_tab.ctab, i64 0, i64 %idxprom5, !dbg !3020
  %9 = load i8, i8* %arrayidx6, align 1, !dbg !3020
  %conv = zext i8 %9 to i32, !dbg !3020
  %cmp7 = icmp eq i32 %conv, 0, !dbg !3021
  br i1 %cmp7, label %if.then9, label %if.end14, !dbg !3022

if.then9:                                         ; preds = %for.end
  %10 = load i32, i32* %samp.addr, align 4, !dbg !3023
  %idxprom10 = sext i32 %10 to i64, !dbg !3025
  %arrayidx11 = getelementptr inbounds [17 x i8], [17 x i8]* @give_jitter_tab.ctab, i64 0, i64 %idxprom10, !dbg !3025
  store i8 1, i8* %arrayidx11, align 1, !dbg !3026
  %11 = load i32, i32* %offset, align 4, !dbg !3027
  %idxprom12 = sext i32 %11 to i64, !dbg !3028
  %arrayidx13 = getelementptr inbounds [1496 x [2 x float]], [1496 x [2 x float]]* @give_jitter_tab.jit, i64 0, i64 %idxprom12, !dbg !3028
  %arraydecay = getelementptr inbounds [2 x float], [2 x float]* %arrayidx13, i64 0, i64 0, !dbg !3028
  %12 = bitcast float* %arraydecay to [2 x float]*, !dbg !3029
  %13 = load i32, i32* %samp.addr, align 4, !dbg !3030
  %14 = load i32, i32* %samp.addr, align 4, !dbg !3031
  %mul = mul nsw i32 %13, %14, !dbg !3032
  call void @BLI_jitter_init([2 x float]* %12, i32 %mul), !dbg !3033
  br label %if.end14, !dbg !3034

if.end14:                                         ; preds = %if.then9, %for.end
  %15 = load i32, i32* %offset, align 4, !dbg !3035
  %idxprom15 = sext i32 %15 to i64, !dbg !3036
  %arrayidx16 = getelementptr inbounds [1496 x [2 x float]], [1496 x [2 x float]]* @give_jitter_tab.jit, i64 0, i64 %idxprom15, !dbg !3036
  %arraydecay17 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx16, i64 0, i64 0, !dbg !3036
  ret float* %arraydecay17, !dbg !3037
}

declare dso_local i32 @get_render_shadow_samples(%struct.RenderData*, i32) #4

; Function Attrs: noinline nounwind uwtable
define internal void @make_jitter_weight_tab(%struct.Render* %re, %struct.ShadBuf* %shb, i16 signext %filtertype) #0 !dbg !3038 {
entry:
  %re.addr = alloca %struct.Render*, align 8
  %shb.addr = alloca %struct.ShadBuf*, align 8
  %filtertype.addr = alloca i16, align 2
  %jit = alloca float*, align 8
  %totw = alloca float, align 4
  %samp = alloca i32, align 4
  %a = alloca i32, align 4
  %tot = alloca i32, align 4
  store %struct.Render* %re, %struct.Render** %re.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Render** %re.addr, metadata !3041, metadata !DIExpression()), !dbg !3042
  store %struct.ShadBuf* %shb, %struct.ShadBuf** %shb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ShadBuf** %shb.addr, metadata !3043, metadata !DIExpression()), !dbg !3044
  store i16 %filtertype, i16* %filtertype.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %filtertype.addr, metadata !3045, metadata !DIExpression()), !dbg !3046
  call void @llvm.dbg.declare(metadata float** %jit, metadata !3047, metadata !DIExpression()), !dbg !3048
  call void @llvm.dbg.declare(metadata float* %totw, metadata !3049, metadata !DIExpression()), !dbg !3050
  store float 0.000000e+00, float* %totw, align 4, !dbg !3050
  call void @llvm.dbg.declare(metadata i32* %samp, metadata !3051, metadata !DIExpression()), !dbg !3052
  %0 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !3053
  %r = getelementptr inbounds %struct.Render, %struct.Render* %0, i32 0, i32 45, !dbg !3054
  %1 = load %struct.ShadBuf*, %struct.ShadBuf** %shb.addr, align 8, !dbg !3055
  %samp1 = getelementptr inbounds %struct.ShadBuf, %struct.ShadBuf* %1, i32 0, i32 0, !dbg !3056
  %2 = load i16, i16* %samp1, align 8, !dbg !3056
  %conv = sext i16 %2 to i32, !dbg !3055
  %call = call i32 @get_render_shadow_samples(%struct.RenderData* %r, i32 %conv), !dbg !3057
  store i32 %call, i32* %samp, align 4, !dbg !3052
  call void @llvm.dbg.declare(metadata i32* %a, metadata !3058, metadata !DIExpression()), !dbg !3059
  call void @llvm.dbg.declare(metadata i32* %tot, metadata !3060, metadata !DIExpression()), !dbg !3061
  %3 = load i32, i32* %samp, align 4, !dbg !3062
  %4 = load i32, i32* %samp, align 4, !dbg !3063
  %mul = mul nsw i32 %3, %4, !dbg !3064
  store i32 %mul, i32* %tot, align 4, !dbg !3061
  %5 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !3065
  %6 = load i32, i32* %tot, align 4, !dbg !3066
  %conv2 = sext i32 %6 to i64, !dbg !3066
  %mul3 = mul i64 4, %conv2, !dbg !3067
  %call4 = call i8* %5(i64 %mul3, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.2, i64 0, i64 0)), !dbg !3065
  %7 = bitcast i8* %call4 to float*, !dbg !3065
  %8 = load %struct.ShadBuf*, %struct.ShadBuf** %shb.addr, align 8, !dbg !3068
  %weight = getelementptr inbounds %struct.ShadBuf, %struct.ShadBuf* %8, i32 0, i32 7, !dbg !3069
  store float* %7, float** %weight, align 8, !dbg !3070
  %9 = load %struct.ShadBuf*, %struct.ShadBuf** %shb.addr, align 8, !dbg !3071
  %jit5 = getelementptr inbounds %struct.ShadBuf, %struct.ShadBuf* %9, i32 0, i32 6, !dbg !3073
  %10 = load float*, float** %jit5, align 8, !dbg !3073
  store float* %10, float** %jit, align 8, !dbg !3074
  store i32 0, i32* %a, align 4, !dbg !3075
  br label %for.cond, !dbg !3076

for.cond:                                         ; preds = %for.inc, %entry
  %11 = load i32, i32* %a, align 4, !dbg !3077
  %12 = load i32, i32* %tot, align 4, !dbg !3079
  %cmp = icmp slt i32 %11, %12, !dbg !3080
  br i1 %cmp, label %for.body, label %for.end, !dbg !3081

for.body:                                         ; preds = %for.cond
  %13 = load i16, i16* %filtertype.addr, align 2, !dbg !3082
  %conv7 = sext i16 %13 to i32, !dbg !3082
  %cmp8 = icmp eq i32 %conv7, 1, !dbg !3085
  br i1 %cmp8, label %if.then, label %if.else, !dbg !3086

if.then:                                          ; preds = %for.body
  %14 = load float*, float** %jit, align 8, !dbg !3087
  %arrayidx = getelementptr inbounds float, float* %14, i64 0, !dbg !3087
  %15 = load float, float* %arrayidx, align 4, !dbg !3087
  %16 = load float*, float** %jit, align 8, !dbg !3088
  %arrayidx10 = getelementptr inbounds float, float* %16, i64 0, !dbg !3088
  %17 = load float, float* %arrayidx10, align 4, !dbg !3088
  %mul11 = fmul float %15, %17, !dbg !3089
  %18 = load float*, float** %jit, align 8, !dbg !3090
  %arrayidx12 = getelementptr inbounds float, float* %18, i64 1, !dbg !3090
  %19 = load float, float* %arrayidx12, align 4, !dbg !3090
  %20 = load float*, float** %jit, align 8, !dbg !3091
  %arrayidx13 = getelementptr inbounds float, float* %20, i64 1, !dbg !3091
  %21 = load float, float* %arrayidx13, align 4, !dbg !3091
  %mul14 = fmul float %19, %21, !dbg !3092
  %add = fadd float %mul11, %mul14, !dbg !3093
  %call15 = call float @sqrtf(float %add) #5, !dbg !3094
  %sub = fsub float 0x3FE6B851E0000000, %call15, !dbg !3095
  %22 = load %struct.ShadBuf*, %struct.ShadBuf** %shb.addr, align 8, !dbg !3096
  %weight16 = getelementptr inbounds %struct.ShadBuf, %struct.ShadBuf* %22, i32 0, i32 7, !dbg !3097
  %23 = load float*, float** %weight16, align 8, !dbg !3097
  %24 = load i32, i32* %a, align 4, !dbg !3098
  %idxprom = sext i32 %24 to i64, !dbg !3096
  %arrayidx17 = getelementptr inbounds float, float* %23, i64 %idxprom, !dbg !3096
  store float %sub, float* %arrayidx17, align 4, !dbg !3099
  br label %if.end39, !dbg !3096

if.else:                                          ; preds = %for.body
  %25 = load i16, i16* %filtertype.addr, align 2, !dbg !3100
  %conv18 = sext i16 %25 to i32, !dbg !3100
  %cmp19 = icmp eq i32 %conv18, 2, !dbg !3102
  br i1 %cmp19, label %if.then21, label %if.else35, !dbg !3103

if.then21:                                        ; preds = %if.else
  %26 = load float*, float** %jit, align 8, !dbg !3104
  %arrayidx22 = getelementptr inbounds float, float* %26, i64 0, !dbg !3104
  %27 = load float, float* %arrayidx22, align 4, !dbg !3104
  %28 = load float*, float** %jit, align 8, !dbg !3105
  %arrayidx23 = getelementptr inbounds float, float* %28, i64 0, !dbg !3105
  %29 = load float, float* %arrayidx23, align 4, !dbg !3105
  %mul24 = fmul float %27, %29, !dbg !3106
  %30 = load float*, float** %jit, align 8, !dbg !3107
  %arrayidx25 = getelementptr inbounds float, float* %30, i64 1, !dbg !3107
  %31 = load float, float* %arrayidx25, align 4, !dbg !3107
  %32 = load float*, float** %jit, align 8, !dbg !3108
  %arrayidx26 = getelementptr inbounds float, float* %32, i64 1, !dbg !3108
  %33 = load float, float* %arrayidx26, align 4, !dbg !3108
  %mul27 = fmul float %31, %33, !dbg !3109
  %add28 = fadd float %mul24, %mul27, !dbg !3110
  %call29 = call float @sqrtf(float %add28) #5, !dbg !3111
  %mul30 = fmul float 0x3FFCCCCCC0000000, %call29, !dbg !3112
  %call31 = call float @RE_filter_value(i32 5, float %mul30), !dbg !3113
  %34 = load %struct.ShadBuf*, %struct.ShadBuf** %shb.addr, align 8, !dbg !3114
  %weight32 = getelementptr inbounds %struct.ShadBuf, %struct.ShadBuf* %34, i32 0, i32 7, !dbg !3115
  %35 = load float*, float** %weight32, align 8, !dbg !3115
  %36 = load i32, i32* %a, align 4, !dbg !3116
  %idxprom33 = sext i32 %36 to i64, !dbg !3114
  %arrayidx34 = getelementptr inbounds float, float* %35, i64 %idxprom33, !dbg !3114
  store float %call31, float* %arrayidx34, align 4, !dbg !3117
  br label %if.end, !dbg !3114

if.else35:                                        ; preds = %if.else
  %37 = load %struct.ShadBuf*, %struct.ShadBuf** %shb.addr, align 8, !dbg !3118
  %weight36 = getelementptr inbounds %struct.ShadBuf, %struct.ShadBuf* %37, i32 0, i32 7, !dbg !3119
  %38 = load float*, float** %weight36, align 8, !dbg !3119
  %39 = load i32, i32* %a, align 4, !dbg !3120
  %idxprom37 = sext i32 %39 to i64, !dbg !3118
  %arrayidx38 = getelementptr inbounds float, float* %38, i64 %idxprom37, !dbg !3118
  store float 1.000000e+00, float* %arrayidx38, align 4, !dbg !3121
  br label %if.end

if.end:                                           ; preds = %if.else35, %if.then21
  br label %if.end39

if.end39:                                         ; preds = %if.end, %if.then
  %40 = load %struct.ShadBuf*, %struct.ShadBuf** %shb.addr, align 8, !dbg !3122
  %weight40 = getelementptr inbounds %struct.ShadBuf, %struct.ShadBuf* %40, i32 0, i32 7, !dbg !3123
  %41 = load float*, float** %weight40, align 8, !dbg !3123
  %42 = load i32, i32* %a, align 4, !dbg !3124
  %idxprom41 = sext i32 %42 to i64, !dbg !3122
  %arrayidx42 = getelementptr inbounds float, float* %41, i64 %idxprom41, !dbg !3122
  %43 = load float, float* %arrayidx42, align 4, !dbg !3122
  %44 = load float, float* %totw, align 4, !dbg !3125
  %add43 = fadd float %44, %43, !dbg !3125
  store float %add43, float* %totw, align 4, !dbg !3125
  br label %for.inc, !dbg !3126

for.inc:                                          ; preds = %if.end39
  %45 = load i32, i32* %a, align 4, !dbg !3127
  %inc = add nsw i32 %45, 1, !dbg !3127
  store i32 %inc, i32* %a, align 4, !dbg !3127
  %46 = load float*, float** %jit, align 8, !dbg !3128
  %add.ptr = getelementptr inbounds float, float* %46, i64 2, !dbg !3128
  store float* %add.ptr, float** %jit, align 8, !dbg !3128
  br label %for.cond, !dbg !3129, !llvm.loop !3130

for.end:                                          ; preds = %for.cond
  %47 = load float, float* %totw, align 4, !dbg !3132
  %div = fdiv float 1.000000e+00, %47, !dbg !3133
  store float %div, float* %totw, align 4, !dbg !3134
  store i32 0, i32* %a, align 4, !dbg !3135
  br label %for.cond44, !dbg !3137

for.cond44:                                       ; preds = %for.inc52, %for.end
  %48 = load i32, i32* %a, align 4, !dbg !3138
  %49 = load i32, i32* %tot, align 4, !dbg !3140
  %cmp45 = icmp slt i32 %48, %49, !dbg !3141
  br i1 %cmp45, label %for.body47, label %for.end54, !dbg !3142

for.body47:                                       ; preds = %for.cond44
  %50 = load float, float* %totw, align 4, !dbg !3143
  %51 = load %struct.ShadBuf*, %struct.ShadBuf** %shb.addr, align 8, !dbg !3145
  %weight48 = getelementptr inbounds %struct.ShadBuf, %struct.ShadBuf* %51, i32 0, i32 7, !dbg !3146
  %52 = load float*, float** %weight48, align 8, !dbg !3146
  %53 = load i32, i32* %a, align 4, !dbg !3147
  %idxprom49 = sext i32 %53 to i64, !dbg !3145
  %arrayidx50 = getelementptr inbounds float, float* %52, i64 %idxprom49, !dbg !3145
  %54 = load float, float* %arrayidx50, align 4, !dbg !3148
  %mul51 = fmul float %54, %50, !dbg !3148
  store float %mul51, float* %arrayidx50, align 4, !dbg !3148
  br label %for.inc52, !dbg !3149

for.inc52:                                        ; preds = %for.body47
  %55 = load i32, i32* %a, align 4, !dbg !3150
  %inc53 = add nsw i32 %55, 1, !dbg !3150
  store i32 %inc53, i32* %a, align 4, !dbg !3150
  br label %for.cond44, !dbg !3151, !llvm.loop !3152

for.end54:                                        ; preds = %for.cond44
  ret void, !dbg !3154
}

declare dso_local void @BLI_unlock_thread(i32) #4

; Function Attrs: noinline nounwind uwtable
define internal void @makedeepshadowbuf(%struct.Render* %re, %struct.LampRen* %lar, float* %jitbuf) #0 !dbg !3155 {
entry:
  %re.addr = alloca %struct.Render*, align 8
  %lar.addr = alloca %struct.LampRen*, align 8
  %jitbuf.addr = alloca float*, align 8
  %shb = alloca %struct.ShadBuf*, align 8
  %apixbuf = alloca %struct.APixstr*, align 8
  %apixbufstrand = alloca %struct.APixstrand*, align 8
  %apsmbase = alloca %struct.ListBase, align 8
  store %struct.Render* %re, %struct.Render** %re.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Render** %re.addr, metadata !3158, metadata !DIExpression()), !dbg !3159
  store %struct.LampRen* %lar, %struct.LampRen** %lar.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.LampRen** %lar.addr, metadata !3160, metadata !DIExpression()), !dbg !3161
  store float* %jitbuf, float** %jitbuf.addr, align 8
  call void @llvm.dbg.declare(metadata float** %jitbuf.addr, metadata !3162, metadata !DIExpression()), !dbg !3163
  call void @llvm.dbg.declare(metadata %struct.ShadBuf** %shb, metadata !3164, metadata !DIExpression()), !dbg !3165
  %0 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !3166
  %shb1 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %0, i32 0, i32 57, !dbg !3167
  %1 = load %struct.ShadBuf*, %struct.ShadBuf** %shb1, align 8, !dbg !3167
  store %struct.ShadBuf* %1, %struct.ShadBuf** %shb, align 8, !dbg !3165
  call void @llvm.dbg.declare(metadata %struct.APixstr** %apixbuf, metadata !3168, metadata !DIExpression()), !dbg !3183
  call void @llvm.dbg.declare(metadata %struct.APixstrand** %apixbufstrand, metadata !3184, metadata !DIExpression()), !dbg !3198
  store %struct.APixstrand* null, %struct.APixstrand** %apixbufstrand, align 8, !dbg !3198
  call void @llvm.dbg.declare(metadata %struct.ListBase* %apsmbase, metadata !3199, metadata !DIExpression()), !dbg !3200
  %2 = bitcast %struct.ListBase* %apsmbase to i8*, !dbg !3200
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 16, i1 false), !dbg !3200
  %3 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !3201
  %4 = load %struct.ShadBuf*, %struct.ShadBuf** %shb, align 8, !dbg !3202
  %size = getelementptr inbounds %struct.ShadBuf, %struct.ShadBuf* %4, i32 0, i32 14, !dbg !3203
  %5 = load i32, i32* %size, align 8, !dbg !3203
  %conv = sext i32 %5 to i64, !dbg !3202
  %mul = mul i64 72, %conv, !dbg !3204
  %6 = load %struct.ShadBuf*, %struct.ShadBuf** %shb, align 8, !dbg !3205
  %size2 = getelementptr inbounds %struct.ShadBuf, %struct.ShadBuf* %6, i32 0, i32 14, !dbg !3206
  %7 = load i32, i32* %size2, align 8, !dbg !3206
  %conv3 = sext i32 %7 to i64, !dbg !3205
  %mul4 = mul i64 %mul, %conv3, !dbg !3207
  %call = call i8* %3(i64 %mul4, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.3, i64 0, i64 0)), !dbg !3201
  %8 = bitcast i8* %call to %struct.APixstr*, !dbg !3201
  store %struct.APixstr* %8, %struct.APixstr** %apixbuf, align 8, !dbg !3208
  %9 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !3209
  %totstrand = getelementptr inbounds %struct.Render, %struct.Render* %9, i32 0, i32 63, !dbg !3211
  %10 = load i32, i32* %totstrand, align 4, !dbg !3211
  %tobool = icmp ne i32 %10, 0, !dbg !3209
  br i1 %tobool, label %if.then, label %if.end, !dbg !3212

if.then:                                          ; preds = %entry
  %11 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !3213
  %12 = load %struct.ShadBuf*, %struct.ShadBuf** %shb, align 8, !dbg !3214
  %size5 = getelementptr inbounds %struct.ShadBuf, %struct.ShadBuf* %12, i32 0, i32 14, !dbg !3215
  %13 = load i32, i32* %size5, align 8, !dbg !3215
  %conv6 = sext i32 %13 to i64, !dbg !3214
  %mul7 = mul i64 112, %conv6, !dbg !3216
  %14 = load %struct.ShadBuf*, %struct.ShadBuf** %shb, align 8, !dbg !3217
  %size8 = getelementptr inbounds %struct.ShadBuf, %struct.ShadBuf* %14, i32 0, i32 14, !dbg !3218
  %15 = load i32, i32* %size8, align 8, !dbg !3218
  %conv9 = sext i32 %15 to i64, !dbg !3217
  %mul10 = mul i64 %mul7, %conv9, !dbg !3219
  %call11 = call i8* %11(i64 %mul10, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4, i64 0, i64 0)), !dbg !3213
  %16 = bitcast i8* %call11 to %struct.APixstrand*, !dbg !3213
  store %struct.APixstrand* %16, %struct.APixstrand** %apixbufstrand, align 8, !dbg !3220
  br label %if.end, !dbg !3221

if.end:                                           ; preds = %if.then, %entry
  %17 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !3222
  %18 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !3223
  %19 = load %struct.ShadBuf*, %struct.ShadBuf** %shb, align 8, !dbg !3224
  %persmat = getelementptr inbounds %struct.ShadBuf, %struct.ShadBuf* %19, i32 0, i32 3, !dbg !3225
  %arraydecay = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %persmat, i64 0, i64 0, !dbg !3224
  %20 = load %struct.APixstr*, %struct.APixstr** %apixbuf, align 8, !dbg !3226
  %21 = load %struct.APixstrand*, %struct.APixstrand** %apixbufstrand, align 8, !dbg !3227
  %22 = load %struct.ShadBuf*, %struct.ShadBuf** %shb, align 8, !dbg !3228
  %size12 = getelementptr inbounds %struct.ShadBuf, %struct.ShadBuf* %22, i32 0, i32 14, !dbg !3229
  %23 = load i32, i32* %size12, align 8, !dbg !3229
  %24 = load %struct.ShadBuf*, %struct.ShadBuf** %shb, align 8, !dbg !3230
  %totbuf = getelementptr inbounds %struct.ShadBuf, %struct.ShadBuf* %24, i32 0, i32 2, !dbg !3231
  %25 = load i16, i16* %totbuf, align 4, !dbg !3231
  %conv13 = sext i16 %25 to i32, !dbg !3230
  %26 = load float*, float** %jitbuf.addr, align 8, !dbg !3232
  %27 = bitcast float* %26 to [2 x float]*, !dbg !3233
  call void @zbuffer_abuf_shadow(%struct.Render* %17, %struct.LampRen* %18, [4 x float]* %arraydecay, %struct.APixstr* %20, %struct.APixstrand* %21, %struct.ListBase* %apsmbase, i32 %23, i32 %conv13, [2 x float]* %27), !dbg !3234
  %28 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !3235
  %29 = load %struct.ShadBuf*, %struct.ShadBuf** %shb, align 8, !dbg !3236
  %30 = load %struct.APixstr*, %struct.APixstr** %apixbuf, align 8, !dbg !3237
  %31 = load %struct.APixstrand*, %struct.APixstrand** %apixbufstrand, align 8, !dbg !3238
  call void @compress_deepshadowbuf(%struct.Render* %28, %struct.ShadBuf* %29, %struct.APixstr* %30, %struct.APixstrand* %31), !dbg !3239
  %32 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !3240
  %33 = load %struct.APixstr*, %struct.APixstr** %apixbuf, align 8, !dbg !3241
  %34 = bitcast %struct.APixstr* %33 to i8*, !dbg !3241
  call void %32(i8* %34), !dbg !3240
  %35 = load %struct.APixstrand*, %struct.APixstrand** %apixbufstrand, align 8, !dbg !3242
  %tobool14 = icmp ne %struct.APixstrand* %35, null, !dbg !3242
  br i1 %tobool14, label %if.then15, label %if.end16, !dbg !3244

if.then15:                                        ; preds = %if.end
  %36 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !3245
  %37 = load %struct.APixstrand*, %struct.APixstrand** %apixbufstrand, align 8, !dbg !3246
  %38 = bitcast %struct.APixstrand* %37 to i8*, !dbg !3246
  call void %36(i8* %38), !dbg !3245
  br label %if.end16, !dbg !3245

if.end16:                                         ; preds = %if.then15, %if.end
  call void @freepsA(%struct.ListBase* %apsmbase), !dbg !3247
  ret void, !dbg !3248
}

; Function Attrs: noinline nounwind uwtable
define internal void @makeflatshadowbuf(%struct.Render* %re, %struct.LampRen* %lar, float* %jitbuf) #0 !dbg !3249 {
entry:
  %re.addr = alloca %struct.Render*, align 8
  %lar.addr = alloca %struct.LampRen*, align 8
  %jitbuf.addr = alloca float*, align 8
  %shb = alloca %struct.ShadBuf*, align 8
  %rectz = alloca i32*, align 8
  %samples = alloca i32, align 4
  store %struct.Render* %re, %struct.Render** %re.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Render** %re.addr, metadata !3250, metadata !DIExpression()), !dbg !3251
  store %struct.LampRen* %lar, %struct.LampRen** %lar.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.LampRen** %lar.addr, metadata !3252, metadata !DIExpression()), !dbg !3253
  store float* %jitbuf, float** %jitbuf.addr, align 8
  call void @llvm.dbg.declare(metadata float** %jitbuf.addr, metadata !3254, metadata !DIExpression()), !dbg !3255
  call void @llvm.dbg.declare(metadata %struct.ShadBuf** %shb, metadata !3256, metadata !DIExpression()), !dbg !3257
  %0 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !3258
  %shb1 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %0, i32 0, i32 57, !dbg !3259
  %1 = load %struct.ShadBuf*, %struct.ShadBuf** %shb1, align 8, !dbg !3259
  store %struct.ShadBuf* %1, %struct.ShadBuf** %shb, align 8, !dbg !3257
  call void @llvm.dbg.declare(metadata i32** %rectz, metadata !3260, metadata !DIExpression()), !dbg !3261
  call void @llvm.dbg.declare(metadata i32* %samples, metadata !3262, metadata !DIExpression()), !dbg !3263
  %2 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mapallocN, align 8, !dbg !3264
  %3 = load %struct.ShadBuf*, %struct.ShadBuf** %shb, align 8, !dbg !3265
  %size = getelementptr inbounds %struct.ShadBuf, %struct.ShadBuf* %3, i32 0, i32 14, !dbg !3266
  %4 = load i32, i32* %size, align 8, !dbg !3266
  %conv = sext i32 %4 to i64, !dbg !3265
  %mul = mul i64 4, %conv, !dbg !3267
  %5 = load %struct.ShadBuf*, %struct.ShadBuf** %shb, align 8, !dbg !3268
  %size2 = getelementptr inbounds %struct.ShadBuf, %struct.ShadBuf* %5, i32 0, i32 14, !dbg !3269
  %6 = load i32, i32* %size2, align 8, !dbg !3269
  %conv3 = sext i32 %6 to i64, !dbg !3268
  %mul4 = mul i64 %mul, %conv3, !dbg !3270
  %call = call i8* %2(i64 %mul4, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.10, i64 0, i64 0)), !dbg !3264
  %7 = bitcast i8* %call to i32*, !dbg !3264
  store i32* %7, i32** %rectz, align 8, !dbg !3271
  store i32 0, i32* %samples, align 4, !dbg !3272
  br label %for.cond, !dbg !3274

for.cond:                                         ; preds = %for.inc, %entry
  %8 = load i32, i32* %samples, align 4, !dbg !3275
  %9 = load %struct.ShadBuf*, %struct.ShadBuf** %shb, align 8, !dbg !3277
  %totbuf = getelementptr inbounds %struct.ShadBuf, %struct.ShadBuf* %9, i32 0, i32 2, !dbg !3278
  %10 = load i16, i16* %totbuf, align 4, !dbg !3278
  %conv5 = sext i16 %10 to i32, !dbg !3277
  %cmp = icmp slt i32 %8, %conv5, !dbg !3279
  br i1 %cmp, label %for.body, label %for.end, !dbg !3280

for.body:                                         ; preds = %for.cond
  %11 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !3281
  %12 = load %struct.ShadBuf*, %struct.ShadBuf** %shb, align 8, !dbg !3283
  %persmat = getelementptr inbounds %struct.ShadBuf, %struct.ShadBuf* %12, i32 0, i32 3, !dbg !3284
  %arraydecay = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %persmat, i64 0, i64 0, !dbg !3283
  %13 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !3285
  %14 = load i32*, i32** %rectz, align 8, !dbg !3286
  %15 = load %struct.ShadBuf*, %struct.ShadBuf** %shb, align 8, !dbg !3287
  %size7 = getelementptr inbounds %struct.ShadBuf, %struct.ShadBuf* %15, i32 0, i32 14, !dbg !3288
  %16 = load i32, i32* %size7, align 8, !dbg !3288
  %17 = load float*, float** %jitbuf.addr, align 8, !dbg !3289
  %18 = load i32, i32* %samples, align 4, !dbg !3290
  %mul8 = mul nsw i32 2, %18, !dbg !3291
  %idxprom = sext i32 %mul8 to i64, !dbg !3289
  %arrayidx = getelementptr inbounds float, float* %17, i64 %idxprom, !dbg !3289
  %19 = load float, float* %arrayidx, align 4, !dbg !3289
  %20 = load float*, float** %jitbuf.addr, align 8, !dbg !3292
  %21 = load i32, i32* %samples, align 4, !dbg !3293
  %mul9 = mul nsw i32 2, %21, !dbg !3294
  %add = add nsw i32 %mul9, 1, !dbg !3295
  %idxprom10 = sext i32 %add to i64, !dbg !3292
  %arrayidx11 = getelementptr inbounds float, float* %20, i64 %idxprom10, !dbg !3292
  %22 = load float, float* %arrayidx11, align 4, !dbg !3292
  call void @zbuffer_shadow(%struct.Render* %11, [4 x float]* %arraydecay, %struct.LampRen* %13, i32* %14, i32 %16, float %19, float %22), !dbg !3296
  %23 = load %struct.ShadBuf*, %struct.ShadBuf** %shb, align 8, !dbg !3297
  %24 = load i32*, i32** %rectz, align 8, !dbg !3298
  %25 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !3299
  %mode = getelementptr inbounds %struct.LampRen, %struct.LampRen* %25, i32 0, i32 7, !dbg !3300
  %26 = load i32, i32* %mode, align 4, !dbg !3300
  %and = and i32 %26, 128, !dbg !3301
  call void @compress_shadowbuf(%struct.ShadBuf* %23, i32* %24, i32 %and), !dbg !3302
  %27 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !3303
  %test_break = getelementptr inbounds %struct.Render, %struct.Render* %27, i32 0, i32 96, !dbg !3305
  %28 = load i32 (i8*)*, i32 (i8*)** %test_break, align 8, !dbg !3305
  %29 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !3306
  %tbh = getelementptr inbounds %struct.Render, %struct.Render* %29, i32 0, i32 97, !dbg !3307
  %30 = load i8*, i8** %tbh, align 8, !dbg !3307
  %call12 = call i32 %28(i8* %30), !dbg !3303
  %tobool = icmp ne i32 %call12, 0, !dbg !3303
  br i1 %tobool, label %if.then, label %if.end, !dbg !3308

if.then:                                          ; preds = %for.body
  br label %for.end, !dbg !3309

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !3310

for.inc:                                          ; preds = %if.end
  %31 = load i32, i32* %samples, align 4, !dbg !3311
  %inc = add nsw i32 %31, 1, !dbg !3311
  store i32 %inc, i32* %samples, align 4, !dbg !3311
  br label %for.cond, !dbg !3312, !llvm.loop !3313

for.end:                                          ; preds = %if.then, %for.cond
  %32 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !3315
  %33 = load i32*, i32** %rectz, align 8, !dbg !3316
  %34 = bitcast i32* %33 to i8*, !dbg !3316
  call void %32(i8* %34), !dbg !3315
  ret void, !dbg !3317
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @threaded_makeshadowbufs(%struct.Render* %re) #0 !dbg !3318 {
entry:
  %re.addr = alloca %struct.Render*, align 8
  %threads = alloca %struct.ListBase, align 8
  %lar = alloca %struct.LampRen*, align 8
  %a = alloca i32, align 4
  %totthread = alloca i32, align 4
  %test_break = alloca i32 (i8*)*, align 8
  store %struct.Render* %re, %struct.Render** %re.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Render** %re.addr, metadata !3321, metadata !DIExpression()), !dbg !3322
  call void @llvm.dbg.declare(metadata %struct.ListBase* %threads, metadata !3323, metadata !DIExpression()), !dbg !3324
  call void @llvm.dbg.declare(metadata %struct.LampRen** %lar, metadata !3325, metadata !DIExpression()), !dbg !3326
  call void @llvm.dbg.declare(metadata i32* %a, metadata !3327, metadata !DIExpression()), !dbg !3328
  call void @llvm.dbg.declare(metadata i32* %totthread, metadata !3329, metadata !DIExpression()), !dbg !3330
  store i32 0, i32* %totthread, align 4, !dbg !3330
  call void @llvm.dbg.declare(metadata i32 (i8*)** %test_break, metadata !3331, metadata !DIExpression()), !dbg !3332
  %0 = load i8, i8* getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 13), align 2, !dbg !3333
  %tobool = icmp ne i8 %0, 0, !dbg !3335
  br i1 %tobool, label %if.then, label %if.else, !dbg !3336

if.then:                                          ; preds = %entry
  %1 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !3337
  %lampren = getelementptr inbounds %struct.Render, %struct.Render* %1, i32 0, i32 67, !dbg !3340
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %lampren, i32 0, i32 0, !dbg !3341
  %2 = load i8*, i8** %first, align 8, !dbg !3341
  %3 = bitcast i8* %2 to %struct.LampRen*, !dbg !3337
  store %struct.LampRen* %3, %struct.LampRen** %lar, align 8, !dbg !3342
  br label %for.cond, !dbg !3343

for.cond:                                         ; preds = %for.inc, %if.then
  %4 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !3344
  %tobool1 = icmp ne %struct.LampRen* %4, null, !dbg !3346
  br i1 %tobool1, label %for.body, label %for.end, !dbg !3346

for.body:                                         ; preds = %for.cond
  %5 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !3347
  %shb = getelementptr inbounds %struct.LampRen, %struct.LampRen* %5, i32 0, i32 57, !dbg !3349
  %6 = load %struct.ShadBuf*, %struct.ShadBuf** %shb, align 8, !dbg !3349
  %tobool2 = icmp ne %struct.ShadBuf* %6, null, !dbg !3347
  br i1 %tobool2, label %if.then3, label %if.end, !dbg !3350

if.then3:                                         ; preds = %for.body
  %7 = load i32, i32* %totthread, align 4, !dbg !3351
  %inc = add nsw i32 %7, 1, !dbg !3351
  store i32 %inc, i32* %totthread, align 4, !dbg !3351
  br label %if.end, !dbg !3352

if.end:                                           ; preds = %if.then3, %for.body
  br label %for.inc, !dbg !3349

for.inc:                                          ; preds = %if.end
  %8 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !3353
  %next = getelementptr inbounds %struct.LampRen, %struct.LampRen* %8, i32 0, i32 0, !dbg !3354
  %9 = load %struct.LampRen*, %struct.LampRen** %next, align 8, !dbg !3354
  store %struct.LampRen* %9, %struct.LampRen** %lar, align 8, !dbg !3355
  br label %for.cond, !dbg !3356, !llvm.loop !3357

for.end:                                          ; preds = %for.cond
  %10 = load i32, i32* %totthread, align 4, !dbg !3359
  %11 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !3360
  %r = getelementptr inbounds %struct.Render, %struct.Render* %11, i32 0, i32 45, !dbg !3361
  %threads4 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r, i32 0, i32 14, !dbg !3362
  %12 = load i16, i16* %threads4, align 2, !dbg !3362
  %conv = sext i16 %12 to i32, !dbg !3360
  %call = call i32 @min_ii(i32 %10, i32 %conv), !dbg !3363
  store i32 %call, i32* %totthread, align 4, !dbg !3364
  br label %if.end5, !dbg !3365

if.else:                                          ; preds = %entry
  store i32 1, i32* %totthread, align 4, !dbg !3366
  br label %if.end5

if.end5:                                          ; preds = %if.else, %for.end
  %13 = load i32, i32* %totthread, align 4, !dbg !3367
  %cmp = icmp sle i32 %13, 1, !dbg !3369
  br i1 %cmp, label %if.then7, label %if.else25, !dbg !3370

if.then7:                                         ; preds = %if.end5
  %14 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !3371
  %lampren8 = getelementptr inbounds %struct.Render, %struct.Render* %14, i32 0, i32 67, !dbg !3374
  %first9 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %lampren8, i32 0, i32 0, !dbg !3375
  %15 = load i8*, i8** %first9, align 8, !dbg !3375
  %16 = bitcast i8* %15 to %struct.LampRen*, !dbg !3371
  store %struct.LampRen* %16, %struct.LampRen** %lar, align 8, !dbg !3376
  br label %for.cond10, !dbg !3377

for.cond10:                                       ; preds = %for.inc22, %if.then7
  %17 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !3378
  %tobool11 = icmp ne %struct.LampRen* %17, null, !dbg !3380
  br i1 %tobool11, label %for.body12, label %for.end24, !dbg !3380

for.body12:                                       ; preds = %for.cond10
  %18 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !3381
  %test_break13 = getelementptr inbounds %struct.Render, %struct.Render* %18, i32 0, i32 96, !dbg !3384
  %19 = load i32 (i8*)*, i32 (i8*)** %test_break13, align 8, !dbg !3384
  %20 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !3385
  %tbh = getelementptr inbounds %struct.Render, %struct.Render* %20, i32 0, i32 97, !dbg !3386
  %21 = load i8*, i8** %tbh, align 8, !dbg !3386
  %call14 = call i32 %19(i8* %21), !dbg !3381
  %tobool15 = icmp ne i32 %call14, 0, !dbg !3381
  br i1 %tobool15, label %if.then16, label %if.end17, !dbg !3387

if.then16:                                        ; preds = %for.body12
  br label %for.end24, !dbg !3388

if.end17:                                         ; preds = %for.body12
  %22 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !3389
  %shb18 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %22, i32 0, i32 57, !dbg !3391
  %23 = load %struct.ShadBuf*, %struct.ShadBuf** %shb18, align 8, !dbg !3391
  %tobool19 = icmp ne %struct.ShadBuf* %23, null, !dbg !3389
  br i1 %tobool19, label %if.then20, label %if.end21, !dbg !3392

if.then20:                                        ; preds = %if.end17
  %24 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !3393
  %25 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !3395
  call void @makeshadowbuf(%struct.Render* %24, %struct.LampRen* %25), !dbg !3396
  br label %if.end21, !dbg !3397

if.end21:                                         ; preds = %if.then20, %if.end17
  br label %for.inc22, !dbg !3398

for.inc22:                                        ; preds = %if.end21
  %26 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !3399
  %next23 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %26, i32 0, i32 0, !dbg !3400
  %27 = load %struct.LampRen*, %struct.LampRen** %next23, align 8, !dbg !3400
  store %struct.LampRen* %27, %struct.LampRen** %lar, align 8, !dbg !3401
  br label %for.cond10, !dbg !3402, !llvm.loop !3403

for.end24:                                        ; preds = %if.then16, %for.cond10
  br label %if.end64, !dbg !3405

if.else25:                                        ; preds = %if.end5
  %28 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !3406
  %test_break26 = getelementptr inbounds %struct.Render, %struct.Render* %28, i32 0, i32 96, !dbg !3408
  %29 = load i32 (i8*)*, i32 (i8*)** %test_break26, align 8, !dbg !3408
  store i32 (i8*)* %29, i32 (i8*)** %test_break, align 8, !dbg !3409
  %30 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !3410
  %test_break27 = getelementptr inbounds %struct.Render, %struct.Render* %30, i32 0, i32 96, !dbg !3411
  store i32 (i8*)* @thread_break, i32 (i8*)** %test_break27, align 8, !dbg !3412
  %31 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !3413
  %lampren28 = getelementptr inbounds %struct.Render, %struct.Render* %31, i32 0, i32 67, !dbg !3415
  %first29 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %lampren28, i32 0, i32 0, !dbg !3416
  %32 = load i8*, i8** %first29, align 8, !dbg !3416
  %33 = bitcast i8* %32 to %struct.LampRen*, !dbg !3413
  store %struct.LampRen* %33, %struct.LampRen** %lar, align 8, !dbg !3417
  br label %for.cond30, !dbg !3418

for.cond30:                                       ; preds = %for.inc33, %if.else25
  %34 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !3419
  %tobool31 = icmp ne %struct.LampRen* %34, null, !dbg !3421
  br i1 %tobool31, label %for.body32, label %for.end35, !dbg !3421

for.body32:                                       ; preds = %for.cond30
  %35 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !3422
  %thread_assigned = getelementptr inbounds %struct.LampRen, %struct.LampRen* %35, i32 0, i32 70, !dbg !3424
  store i32 0, i32* %thread_assigned, align 8, !dbg !3425
  %36 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !3426
  %thread_ready = getelementptr inbounds %struct.LampRen, %struct.LampRen* %36, i32 0, i32 71, !dbg !3427
  store i32 0, i32* %thread_ready, align 4, !dbg !3428
  br label %for.inc33, !dbg !3429

for.inc33:                                        ; preds = %for.body32
  %37 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !3430
  %next34 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %37, i32 0, i32 0, !dbg !3431
  %38 = load %struct.LampRen*, %struct.LampRen** %next34, align 8, !dbg !3431
  store %struct.LampRen* %38, %struct.LampRen** %lar, align 8, !dbg !3432
  br label %for.cond30, !dbg !3433, !llvm.loop !3434

for.end35:                                        ; preds = %for.cond30
  %39 = load i32, i32* %totthread, align 4, !dbg !3436
  call void @BLI_init_threads(%struct.ListBase* %threads, i8* (i8*)* @do_shadow_thread, i32 %39), !dbg !3437
  store i32 0, i32* %a, align 4, !dbg !3438
  br label %for.cond36, !dbg !3440

for.cond36:                                       ; preds = %for.inc40, %for.end35
  %40 = load i32, i32* %a, align 4, !dbg !3441
  %41 = load i32, i32* %totthread, align 4, !dbg !3443
  %cmp37 = icmp slt i32 %40, %41, !dbg !3444
  br i1 %cmp37, label %for.body39, label %for.end42, !dbg !3445

for.body39:                                       ; preds = %for.cond36
  %42 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !3446
  %43 = bitcast %struct.Render* %42 to i8*, !dbg !3446
  call void @BLI_insert_thread(%struct.ListBase* %threads, i8* %43), !dbg !3447
  br label %for.inc40, !dbg !3447

for.inc40:                                        ; preds = %for.body39
  %44 = load i32, i32* %a, align 4, !dbg !3448
  %inc41 = add nsw i32 %44, 1, !dbg !3448
  store i32 %inc41, i32* %a, align 4, !dbg !3448
  br label %for.cond36, !dbg !3449, !llvm.loop !3450

for.end42:                                        ; preds = %for.cond36
  br label %do.body, !dbg !3452

do.body:                                          ; preds = %do.cond, %for.end42
  %45 = load i32 (i8*)*, i32 (i8*)** %test_break, align 8, !dbg !3453
  %46 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !3456
  %tbh43 = getelementptr inbounds %struct.Render, %struct.Render* %46, i32 0, i32 97, !dbg !3457
  %47 = load i8*, i8** %tbh43, align 8, !dbg !3457
  %call44 = call i32 %45(i8* %47), !dbg !3453
  store volatile i32 %call44, i32* @g_break, align 4, !dbg !3458
  %tobool45 = icmp ne i32 %call44, 0, !dbg !3458
  br i1 %tobool45, label %if.then46, label %if.end47, !dbg !3459

if.then46:                                        ; preds = %do.body
  br label %do.end, !dbg !3460

if.end47:                                         ; preds = %do.body
  call void @PIL_sleep_ms(i32 50), !dbg !3461
  call void @BLI_lock_thread(i32 3), !dbg !3462
  %48 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !3463
  %lampren48 = getelementptr inbounds %struct.Render, %struct.Render* %48, i32 0, i32 67, !dbg !3465
  %first49 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %lampren48, i32 0, i32 0, !dbg !3466
  %49 = load i8*, i8** %first49, align 8, !dbg !3466
  %50 = bitcast i8* %49 to %struct.LampRen*, !dbg !3463
  store %struct.LampRen* %50, %struct.LampRen** %lar, align 8, !dbg !3467
  br label %for.cond50, !dbg !3468

for.cond50:                                       ; preds = %for.inc59, %if.end47
  %51 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !3469
  %tobool51 = icmp ne %struct.LampRen* %51, null, !dbg !3471
  br i1 %tobool51, label %for.body52, label %for.end61, !dbg !3471

for.body52:                                       ; preds = %for.cond50
  %52 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !3472
  %shb53 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %52, i32 0, i32 57, !dbg !3474
  %53 = load %struct.ShadBuf*, %struct.ShadBuf** %shb53, align 8, !dbg !3474
  %tobool54 = icmp ne %struct.ShadBuf* %53, null, !dbg !3472
  br i1 %tobool54, label %land.lhs.true, label %if.end58, !dbg !3475

land.lhs.true:                                    ; preds = %for.body52
  %54 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !3476
  %thread_ready55 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %54, i32 0, i32 71, !dbg !3477
  %55 = load i32, i32* %thread_ready55, align 4, !dbg !3477
  %tobool56 = icmp ne i32 %55, 0, !dbg !3476
  br i1 %tobool56, label %if.end58, label %if.then57, !dbg !3478

if.then57:                                        ; preds = %land.lhs.true
  br label %for.end61, !dbg !3479

if.end58:                                         ; preds = %land.lhs.true, %for.body52
  br label %for.inc59, !dbg !3477

for.inc59:                                        ; preds = %if.end58
  %56 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !3480
  %next60 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %56, i32 0, i32 0, !dbg !3481
  %57 = load %struct.LampRen*, %struct.LampRen** %next60, align 8, !dbg !3481
  store %struct.LampRen* %57, %struct.LampRen** %lar, align 8, !dbg !3482
  br label %for.cond50, !dbg !3483, !llvm.loop !3484

for.end61:                                        ; preds = %if.then57, %for.cond50
  call void @BLI_unlock_thread(i32 3), !dbg !3486
  br label %do.cond, !dbg !3487

do.cond:                                          ; preds = %for.end61
  %58 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !3488
  %tobool62 = icmp ne %struct.LampRen* %58, null, !dbg !3487
  br i1 %tobool62, label %do.body, label %do.end, !dbg !3487, !llvm.loop !3489

do.end:                                           ; preds = %do.cond, %if.then46
  call void @BLI_end_threads(%struct.ListBase* %threads), !dbg !3491
  %59 = load i32 (i8*)*, i32 (i8*)** %test_break, align 8, !dbg !3492
  %60 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !3493
  %test_break63 = getelementptr inbounds %struct.Render, %struct.Render* %60, i32 0, i32 96, !dbg !3494
  store i32 (i8*)* %59, i32 (i8*)** %test_break63, align 8, !dbg !3495
  store volatile i32 0, i32* @g_break, align 4, !dbg !3496
  br label %if.end64

if.end64:                                         ; preds = %do.end, %for.end24
  ret void, !dbg !3497
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @min_ii(i32 %a, i32 %b) #0 !dbg !3498 {
entry:
  %a.addr = alloca i32, align 4
  %b.addr = alloca i32, align 4
  store i32 %a, i32* %a.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr, metadata !3501, metadata !DIExpression()), !dbg !3502
  store i32 %b, i32* %b.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %b.addr, metadata !3503, metadata !DIExpression()), !dbg !3504
  %0 = load i32, i32* %a.addr, align 4, !dbg !3505
  %1 = load i32, i32* %b.addr, align 4, !dbg !3506
  %cmp = icmp slt i32 %0, %1, !dbg !3507
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !3508

cond.true:                                        ; preds = %entry
  %2 = load i32, i32* %a.addr, align 4, !dbg !3509
  br label %cond.end, !dbg !3508

cond.false:                                       ; preds = %entry
  %3 = load i32, i32* %b.addr, align 4, !dbg !3510
  br label %cond.end, !dbg !3508

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %2, %cond.true ], [ %3, %cond.false ], !dbg !3508
  ret i32 %cond, !dbg !3511
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @thread_break(i8* %UNUSED_arg) #0 !dbg !3512 {
entry:
  %UNUSED_arg.addr = alloca i8*, align 8
  store i8* %UNUSED_arg, i8** %UNUSED_arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %UNUSED_arg.addr, metadata !3513, metadata !DIExpression()), !dbg !3514
  %0 = load volatile i32, i32* @g_break, align 4, !dbg !3515
  ret i32 %0, !dbg !3516
}

declare dso_local void @BLI_init_threads(%struct.ListBase*, i8* (i8*)*, i32) #4

; Function Attrs: noinline nounwind uwtable
define internal i8* @do_shadow_thread(i8* %re_v) #0 !dbg !3517 {
entry:
  %re_v.addr = alloca i8*, align 8
  %re = alloca %struct.Render*, align 8
  %lar = alloca %struct.LampRen*, align 8
  store i8* %re_v, i8** %re_v.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %re_v.addr, metadata !3520, metadata !DIExpression()), !dbg !3521
  call void @llvm.dbg.declare(metadata %struct.Render** %re, metadata !3522, metadata !DIExpression()), !dbg !3523
  %0 = load i8*, i8** %re_v.addr, align 8, !dbg !3524
  %1 = bitcast i8* %0 to %struct.Render*, !dbg !3525
  store %struct.Render* %1, %struct.Render** %re, align 8, !dbg !3523
  call void @llvm.dbg.declare(metadata %struct.LampRen** %lar, metadata !3526, metadata !DIExpression()), !dbg !3527
  br label %do.body, !dbg !3528

do.body:                                          ; preds = %land.end, %entry
  call void @BLI_lock_thread(i32 3), !dbg !3529
  %2 = load %struct.Render*, %struct.Render** %re, align 8, !dbg !3531
  %lampren = getelementptr inbounds %struct.Render, %struct.Render* %2, i32 0, i32 67, !dbg !3533
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %lampren, i32 0, i32 0, !dbg !3534
  %3 = load i8*, i8** %first, align 8, !dbg !3534
  %4 = bitcast i8* %3 to %struct.LampRen*, !dbg !3531
  store %struct.LampRen* %4, %struct.LampRen** %lar, align 8, !dbg !3535
  br label %for.cond, !dbg !3536

for.cond:                                         ; preds = %for.inc, %do.body
  %5 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !3537
  %tobool = icmp ne %struct.LampRen* %5, null, !dbg !3539
  br i1 %tobool, label %for.body, label %for.end, !dbg !3539

for.body:                                         ; preds = %for.cond
  %6 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !3540
  %shb = getelementptr inbounds %struct.LampRen, %struct.LampRen* %6, i32 0, i32 57, !dbg !3543
  %7 = load %struct.ShadBuf*, %struct.ShadBuf** %shb, align 8, !dbg !3543
  %tobool1 = icmp ne %struct.ShadBuf* %7, null, !dbg !3540
  br i1 %tobool1, label %land.lhs.true, label %if.end, !dbg !3544

land.lhs.true:                                    ; preds = %for.body
  %8 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !3545
  %thread_assigned = getelementptr inbounds %struct.LampRen, %struct.LampRen* %8, i32 0, i32 70, !dbg !3546
  %9 = load i32, i32* %thread_assigned, align 8, !dbg !3546
  %tobool2 = icmp ne i32 %9, 0, !dbg !3545
  br i1 %tobool2, label %if.end, label %if.then, !dbg !3547

if.then:                                          ; preds = %land.lhs.true
  %10 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !3548
  %thread_assigned3 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %10, i32 0, i32 70, !dbg !3550
  store i32 1, i32* %thread_assigned3, align 8, !dbg !3551
  br label %for.end, !dbg !3552

if.end:                                           ; preds = %land.lhs.true, %for.body
  br label %for.inc, !dbg !3553

for.inc:                                          ; preds = %if.end
  %11 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !3554
  %next = getelementptr inbounds %struct.LampRen, %struct.LampRen* %11, i32 0, i32 0, !dbg !3555
  %12 = load %struct.LampRen*, %struct.LampRen** %next, align 8, !dbg !3555
  store %struct.LampRen* %12, %struct.LampRen** %lar, align 8, !dbg !3556
  br label %for.cond, !dbg !3557, !llvm.loop !3558

for.end:                                          ; preds = %if.then, %for.cond
  call void @BLI_unlock_thread(i32 3), !dbg !3560
  %13 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !3561
  %tobool4 = icmp ne %struct.LampRen* %13, null, !dbg !3561
  br i1 %tobool4, label %if.then5, label %if.end6, !dbg !3563

if.then5:                                         ; preds = %for.end
  %14 = load %struct.Render*, %struct.Render** %re, align 8, !dbg !3564
  %15 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !3566
  call void @makeshadowbuf(%struct.Render* %14, %struct.LampRen* %15), !dbg !3567
  call void @BLI_lock_thread(i32 3), !dbg !3568
  %16 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !3569
  %thread_ready = getelementptr inbounds %struct.LampRen, %struct.LampRen* %16, i32 0, i32 71, !dbg !3570
  store i32 1, i32* %thread_ready, align 4, !dbg !3571
  call void @BLI_unlock_thread(i32 3), !dbg !3572
  br label %if.end6, !dbg !3573

if.end6:                                          ; preds = %if.then5, %for.end
  br label %do.cond, !dbg !3574

do.cond:                                          ; preds = %if.end6
  %17 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !3575
  %tobool7 = icmp ne %struct.LampRen* %17, null, !dbg !3575
  br i1 %tobool7, label %land.rhs, label %land.end, !dbg !3576

land.rhs:                                         ; preds = %do.cond
  %18 = load %struct.Render*, %struct.Render** %re, align 8, !dbg !3577
  %test_break = getelementptr inbounds %struct.Render, %struct.Render* %18, i32 0, i32 96, !dbg !3578
  %19 = load i32 (i8*)*, i32 (i8*)** %test_break, align 8, !dbg !3578
  %20 = load %struct.Render*, %struct.Render** %re, align 8, !dbg !3579
  %tbh = getelementptr inbounds %struct.Render, %struct.Render* %20, i32 0, i32 97, !dbg !3580
  %21 = load i8*, i8** %tbh, align 8, !dbg !3580
  %call = call i32 %19(i8* %21), !dbg !3577
  %tobool8 = icmp ne i32 %call, 0, !dbg !3581
  %lnot = xor i1 %tobool8, true, !dbg !3581
  br label %land.end

land.end:                                         ; preds = %land.rhs, %do.cond
  %22 = phi i1 [ false, %do.cond ], [ %lnot, %land.rhs ], !dbg !3582
  br i1 %22, label %do.body, label %do.end, !dbg !3574, !llvm.loop !3583

do.end:                                           ; preds = %land.end
  ret i8* null, !dbg !3585
}

declare dso_local void @BLI_insert_thread(%struct.ListBase*, i8*) #4

declare dso_local void @PIL_sleep_ms(i32) #4

declare dso_local void @BLI_end_threads(%struct.ListBase*) #4

; Function Attrs: noinline nounwind uwtable
define dso_local void @freeshadowbuf(%struct.LampRen* %lar) #0 !dbg !3586 {
entry:
  %lar.addr = alloca %struct.LampRen*, align 8
  %shb1 = alloca %struct.ShadBuf*, align 8
  %shsample = alloca %struct.ShadSampleBuf*, align 8
  %b = alloca i32, align 4
  %v = alloca i32, align 4
  %ztile = alloca i64*, align 8
  %ctile = alloca i8*, align 8
  store %struct.LampRen* %lar, %struct.LampRen** %lar.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.LampRen** %lar.addr, metadata !3589, metadata !DIExpression()), !dbg !3590
  %0 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !3591
  %shb = getelementptr inbounds %struct.LampRen, %struct.LampRen* %0, i32 0, i32 57, !dbg !3593
  %1 = load %struct.ShadBuf*, %struct.ShadBuf** %shb, align 8, !dbg !3593
  %tobool = icmp ne %struct.ShadBuf* %1, null, !dbg !3591
  br i1 %tobool, label %if.then, label %if.end41, !dbg !3594

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.ShadBuf** %shb1, metadata !3595, metadata !DIExpression()), !dbg !3597
  %2 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !3598
  %shb2 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %2, i32 0, i32 57, !dbg !3599
  %3 = load %struct.ShadBuf*, %struct.ShadBuf** %shb2, align 8, !dbg !3599
  store %struct.ShadBuf* %3, %struct.ShadBuf** %shb1, align 8, !dbg !3597
  call void @llvm.dbg.declare(metadata %struct.ShadSampleBuf** %shsample, metadata !3600, metadata !DIExpression()), !dbg !3615
  call void @llvm.dbg.declare(metadata i32* %b, metadata !3616, metadata !DIExpression()), !dbg !3617
  call void @llvm.dbg.declare(metadata i32* %v, metadata !3618, metadata !DIExpression()), !dbg !3619
  %4 = load %struct.ShadBuf*, %struct.ShadBuf** %shb1, align 8, !dbg !3620
  %buffers = getelementptr inbounds %struct.ShadBuf, %struct.ShadBuf* %4, i32 0, i32 16, !dbg !3622
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %buffers, i32 0, i32 0, !dbg !3623
  %5 = load i8*, i8** %first, align 8, !dbg !3623
  %6 = bitcast i8* %5 to %struct.ShadSampleBuf*, !dbg !3620
  store %struct.ShadSampleBuf* %6, %struct.ShadSampleBuf** %shsample, align 8, !dbg !3624
  br label %for.cond, !dbg !3625

for.cond:                                         ; preds = %for.inc32, %if.then
  %7 = load %struct.ShadSampleBuf*, %struct.ShadSampleBuf** %shsample, align 8, !dbg !3626
  %tobool3 = icmp ne %struct.ShadSampleBuf* %7, null, !dbg !3628
  br i1 %tobool3, label %for.body, label %for.end33, !dbg !3628

for.body:                                         ; preds = %for.cond
  %8 = load %struct.ShadSampleBuf*, %struct.ShadSampleBuf** %shsample, align 8, !dbg !3629
  %deepbuf = getelementptr inbounds %struct.ShadSampleBuf, %struct.ShadSampleBuf* %8, i32 0, i32 4, !dbg !3632
  %9 = load %struct.DeepSample**, %struct.DeepSample*** %deepbuf, align 8, !dbg !3632
  %tobool4 = icmp ne %struct.DeepSample** %9, null, !dbg !3629
  br i1 %tobool4, label %if.then5, label %if.else, !dbg !3633

if.then5:                                         ; preds = %for.body
  %10 = load %struct.ShadBuf*, %struct.ShadBuf** %shb1, align 8, !dbg !3634
  %size = getelementptr inbounds %struct.ShadBuf, %struct.ShadBuf* %10, i32 0, i32 14, !dbg !3636
  %11 = load i32, i32* %size, align 8, !dbg !3636
  %12 = load %struct.ShadBuf*, %struct.ShadBuf** %shb1, align 8, !dbg !3637
  %size6 = getelementptr inbounds %struct.ShadBuf, %struct.ShadBuf* %12, i32 0, i32 14, !dbg !3638
  %13 = load i32, i32* %size6, align 8, !dbg !3638
  %mul = mul nsw i32 %11, %13, !dbg !3639
  store i32 %mul, i32* %v, align 4, !dbg !3640
  store i32 0, i32* %b, align 4, !dbg !3641
  br label %for.cond7, !dbg !3643

for.cond7:                                        ; preds = %for.inc, %if.then5
  %14 = load i32, i32* %b, align 4, !dbg !3644
  %15 = load i32, i32* %v, align 4, !dbg !3646
  %cmp = icmp slt i32 %14, %15, !dbg !3647
  br i1 %cmp, label %for.body8, label %for.end, !dbg !3648

for.body8:                                        ; preds = %for.cond7
  %16 = load %struct.ShadSampleBuf*, %struct.ShadSampleBuf** %shsample, align 8, !dbg !3649
  %deepbuf9 = getelementptr inbounds %struct.ShadSampleBuf, %struct.ShadSampleBuf* %16, i32 0, i32 4, !dbg !3651
  %17 = load %struct.DeepSample**, %struct.DeepSample*** %deepbuf9, align 8, !dbg !3651
  %18 = load i32, i32* %b, align 4, !dbg !3652
  %idxprom = sext i32 %18 to i64, !dbg !3649
  %arrayidx = getelementptr inbounds %struct.DeepSample*, %struct.DeepSample** %17, i64 %idxprom, !dbg !3649
  %19 = load %struct.DeepSample*, %struct.DeepSample** %arrayidx, align 8, !dbg !3649
  %tobool10 = icmp ne %struct.DeepSample* %19, null, !dbg !3649
  br i1 %tobool10, label %if.then11, label %if.end, !dbg !3653

if.then11:                                        ; preds = %for.body8
  %20 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !3654
  %21 = load %struct.ShadSampleBuf*, %struct.ShadSampleBuf** %shsample, align 8, !dbg !3655
  %deepbuf12 = getelementptr inbounds %struct.ShadSampleBuf, %struct.ShadSampleBuf* %21, i32 0, i32 4, !dbg !3656
  %22 = load %struct.DeepSample**, %struct.DeepSample*** %deepbuf12, align 8, !dbg !3656
  %23 = load i32, i32* %b, align 4, !dbg !3657
  %idxprom13 = sext i32 %23 to i64, !dbg !3655
  %arrayidx14 = getelementptr inbounds %struct.DeepSample*, %struct.DeepSample** %22, i64 %idxprom13, !dbg !3655
  %24 = load %struct.DeepSample*, %struct.DeepSample** %arrayidx14, align 8, !dbg !3655
  %25 = bitcast %struct.DeepSample* %24 to i8*, !dbg !3655
  call void %20(i8* %25), !dbg !3654
  br label %if.end, !dbg !3654

if.end:                                           ; preds = %if.then11, %for.body8
  br label %for.inc, !dbg !3658

for.inc:                                          ; preds = %if.end
  %26 = load i32, i32* %b, align 4, !dbg !3659
  %inc = add nsw i32 %26, 1, !dbg !3659
  store i32 %inc, i32* %b, align 4, !dbg !3659
  br label %for.cond7, !dbg !3660, !llvm.loop !3661

for.end:                                          ; preds = %for.cond7
  %27 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !3663
  %28 = load %struct.ShadSampleBuf*, %struct.ShadSampleBuf** %shsample, align 8, !dbg !3664
  %deepbuf15 = getelementptr inbounds %struct.ShadSampleBuf, %struct.ShadSampleBuf* %28, i32 0, i32 4, !dbg !3665
  %29 = load %struct.DeepSample**, %struct.DeepSample*** %deepbuf15, align 8, !dbg !3665
  %30 = bitcast %struct.DeepSample** %29 to i8*, !dbg !3664
  call void %27(i8* %30), !dbg !3663
  %31 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !3666
  %32 = load %struct.ShadSampleBuf*, %struct.ShadSampleBuf** %shsample, align 8, !dbg !3667
  %totbuf = getelementptr inbounds %struct.ShadSampleBuf, %struct.ShadSampleBuf* %32, i32 0, i32 5, !dbg !3668
  %33 = load i32*, i32** %totbuf, align 8, !dbg !3668
  %34 = bitcast i32* %33 to i8*, !dbg !3667
  call void %31(i8* %34), !dbg !3666
  br label %if.end31, !dbg !3669

if.else:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata i64** %ztile, metadata !3670, metadata !DIExpression()), !dbg !3672
  %35 = load %struct.ShadSampleBuf*, %struct.ShadSampleBuf** %shsample, align 8, !dbg !3673
  %zbuf = getelementptr inbounds %struct.ShadSampleBuf, %struct.ShadSampleBuf* %35, i32 0, i32 2, !dbg !3674
  %36 = load i64*, i64** %zbuf, align 8, !dbg !3674
  store i64* %36, i64** %ztile, align 8, !dbg !3672
  call void @llvm.dbg.declare(metadata i8** %ctile, metadata !3675, metadata !DIExpression()), !dbg !3676
  %37 = load %struct.ShadSampleBuf*, %struct.ShadSampleBuf** %shsample, align 8, !dbg !3677
  %cbuf = getelementptr inbounds %struct.ShadSampleBuf, %struct.ShadSampleBuf* %37, i32 0, i32 3, !dbg !3678
  %38 = load i8*, i8** %cbuf, align 8, !dbg !3678
  store i8* %38, i8** %ctile, align 8, !dbg !3676
  %39 = load %struct.ShadBuf*, %struct.ShadBuf** %shb1, align 8, !dbg !3679
  %size16 = getelementptr inbounds %struct.ShadBuf, %struct.ShadBuf* %39, i32 0, i32 14, !dbg !3680
  %40 = load i32, i32* %size16, align 8, !dbg !3680
  %41 = load %struct.ShadBuf*, %struct.ShadBuf** %shb1, align 8, !dbg !3681
  %size17 = getelementptr inbounds %struct.ShadBuf, %struct.ShadBuf* %41, i32 0, i32 14, !dbg !3682
  %42 = load i32, i32* %size17, align 8, !dbg !3682
  %mul18 = mul nsw i32 %40, %42, !dbg !3683
  %div = sdiv i32 %mul18, 256, !dbg !3684
  store i32 %div, i32* %v, align 4, !dbg !3685
  store i32 0, i32* %b, align 4, !dbg !3686
  br label %for.cond19, !dbg !3688

for.cond19:                                       ; preds = %for.inc25, %if.else
  %43 = load i32, i32* %b, align 4, !dbg !3689
  %44 = load i32, i32* %v, align 4, !dbg !3691
  %cmp20 = icmp slt i32 %43, %44, !dbg !3692
  br i1 %cmp20, label %for.body21, label %for.end28, !dbg !3693

for.body21:                                       ; preds = %for.cond19
  %45 = load i8*, i8** %ctile, align 8, !dbg !3694
  %46 = load i8, i8* %45, align 1, !dbg !3696
  %tobool22 = icmp ne i8 %46, 0, !dbg !3696
  br i1 %tobool22, label %if.then23, label %if.end24, !dbg !3697

if.then23:                                        ; preds = %for.body21
  %47 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !3698
  %48 = load i64*, i64** %ztile, align 8, !dbg !3699
  %49 = load i64, i64* %48, align 8, !dbg !3700
  %50 = inttoptr i64 %49 to i8*, !dbg !3701
  call void %47(i8* %50), !dbg !3698
  br label %if.end24, !dbg !3698

if.end24:                                         ; preds = %if.then23, %for.body21
  br label %for.inc25, !dbg !3694

for.inc25:                                        ; preds = %if.end24
  %51 = load i32, i32* %b, align 4, !dbg !3702
  %inc26 = add nsw i32 %51, 1, !dbg !3702
  store i32 %inc26, i32* %b, align 4, !dbg !3702
  %52 = load i64*, i64** %ztile, align 8, !dbg !3703
  %incdec.ptr = getelementptr inbounds i64, i64* %52, i32 1, !dbg !3703
  store i64* %incdec.ptr, i64** %ztile, align 8, !dbg !3703
  %53 = load i8*, i8** %ctile, align 8, !dbg !3704
  %incdec.ptr27 = getelementptr inbounds i8, i8* %53, i32 1, !dbg !3704
  store i8* %incdec.ptr27, i8** %ctile, align 8, !dbg !3704
  br label %for.cond19, !dbg !3705, !llvm.loop !3706

for.end28:                                        ; preds = %for.cond19
  %54 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !3708
  %55 = load %struct.ShadSampleBuf*, %struct.ShadSampleBuf** %shsample, align 8, !dbg !3709
  %zbuf29 = getelementptr inbounds %struct.ShadSampleBuf, %struct.ShadSampleBuf* %55, i32 0, i32 2, !dbg !3710
  %56 = load i64*, i64** %zbuf29, align 8, !dbg !3710
  %57 = bitcast i64* %56 to i8*, !dbg !3709
  call void %54(i8* %57), !dbg !3708
  %58 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !3711
  %59 = load %struct.ShadSampleBuf*, %struct.ShadSampleBuf** %shsample, align 8, !dbg !3712
  %cbuf30 = getelementptr inbounds %struct.ShadSampleBuf, %struct.ShadSampleBuf* %59, i32 0, i32 3, !dbg !3713
  %60 = load i8*, i8** %cbuf30, align 8, !dbg !3713
  call void %58(i8* %60), !dbg !3711
  br label %if.end31

if.end31:                                         ; preds = %for.end28, %for.end
  br label %for.inc32, !dbg !3714

for.inc32:                                        ; preds = %if.end31
  %61 = load %struct.ShadSampleBuf*, %struct.ShadSampleBuf** %shsample, align 8, !dbg !3715
  %next = getelementptr inbounds %struct.ShadSampleBuf, %struct.ShadSampleBuf* %61, i32 0, i32 0, !dbg !3716
  %62 = load %struct.ShadSampleBuf*, %struct.ShadSampleBuf** %next, align 8, !dbg !3716
  store %struct.ShadSampleBuf* %62, %struct.ShadSampleBuf** %shsample, align 8, !dbg !3717
  br label %for.cond, !dbg !3718, !llvm.loop !3719

for.end33:                                        ; preds = %for.cond
  %63 = load %struct.ShadBuf*, %struct.ShadBuf** %shb1, align 8, !dbg !3721
  %buffers34 = getelementptr inbounds %struct.ShadBuf, %struct.ShadBuf* %63, i32 0, i32 16, !dbg !3722
  call void @BLI_freelistN(%struct.ListBase* %buffers34), !dbg !3723
  %64 = load %struct.ShadBuf*, %struct.ShadBuf** %shb1, align 8, !dbg !3724
  %weight = getelementptr inbounds %struct.ShadBuf, %struct.ShadBuf* %64, i32 0, i32 7, !dbg !3726
  %65 = load float*, float** %weight, align 8, !dbg !3726
  %tobool35 = icmp ne float* %65, null, !dbg !3724
  br i1 %tobool35, label %if.then36, label %if.end38, !dbg !3727

if.then36:                                        ; preds = %for.end33
  %66 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !3728
  %67 = load %struct.ShadBuf*, %struct.ShadBuf** %shb1, align 8, !dbg !3729
  %weight37 = getelementptr inbounds %struct.ShadBuf, %struct.ShadBuf* %67, i32 0, i32 7, !dbg !3730
  %68 = load float*, float** %weight37, align 8, !dbg !3730
  %69 = bitcast float* %68 to i8*, !dbg !3729
  call void %66(i8* %69), !dbg !3728
  br label %if.end38, !dbg !3728

if.end38:                                         ; preds = %if.then36, %for.end33
  %70 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !3731
  %71 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !3732
  %shb39 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %71, i32 0, i32 57, !dbg !3733
  %72 = load %struct.ShadBuf*, %struct.ShadBuf** %shb39, align 8, !dbg !3733
  %73 = bitcast %struct.ShadBuf* %72 to i8*, !dbg !3732
  call void %70(i8* %73), !dbg !3731
  %74 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !3734
  %shb40 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %74, i32 0, i32 57, !dbg !3735
  store %struct.ShadBuf* null, %struct.ShadBuf** %shb40, align 8, !dbg !3736
  br label %if.end41, !dbg !3737

if.end41:                                         ; preds = %if.end38, %entry
  ret void, !dbg !3738
}

declare dso_local void @BLI_freelistN(%struct.ListBase*) #4

; Function Attrs: noinline nounwind uwtable
define dso_local float @testshadowbuf(%struct.Render* %re, %struct.ShadBuf* %shb, float* %co, float* %dxco, float* %dyco, float %inp, float %mat_bias) #0 !dbg !3739 {
entry:
  %retval = alloca float, align 4
  %re.addr = alloca %struct.Render*, align 8
  %shb.addr = alloca %struct.ShadBuf*, align 8
  %co.addr = alloca float*, align 8
  %dxco.addr = alloca float*, align 8
  %dyco.addr = alloca float*, align 8
  %inp.addr = alloca float, align 4
  %mat_bias.addr = alloca float, align 4
  %shsample = alloca %struct.ShadSampleBuf*, align 8
  %fac = alloca float, align 4
  %dco = alloca [3 x float], align 4
  %dx = alloca [3 x float], align 4
  %dy = alloca [3 x float], align 4
  %shadfac = alloca float, align 4
  %xs1 = alloca float, align 4
  %ys1 = alloca float, align 4
  %zs1 = alloca float, align 4
  %jit = alloca float*, align 8
  %weight = alloca float*, align 8
  %xres = alloca float, align 4
  %yres = alloca float, align 4
  %biasf = alloca float, align 4
  %xs = alloca i32, align 4
  %ys = alloca i32, align 4
  %zs = alloca i32, align 4
  %bias = alloca i32, align 4
  %rz = alloca i32*, align 8
  %a = alloca i16, align 2
  %num = alloca i16, align 2
  store %struct.Render* %re, %struct.Render** %re.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Render** %re.addr, metadata !3744, metadata !DIExpression()), !dbg !3745
  store %struct.ShadBuf* %shb, %struct.ShadBuf** %shb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ShadBuf** %shb.addr, metadata !3746, metadata !DIExpression()), !dbg !3747
  store float* %co, float** %co.addr, align 8
  call void @llvm.dbg.declare(metadata float** %co.addr, metadata !3748, metadata !DIExpression()), !dbg !3749
  store float* %dxco, float** %dxco.addr, align 8
  call void @llvm.dbg.declare(metadata float** %dxco.addr, metadata !3750, metadata !DIExpression()), !dbg !3751
  store float* %dyco, float** %dyco.addr, align 8
  call void @llvm.dbg.declare(metadata float** %dyco.addr, metadata !3752, metadata !DIExpression()), !dbg !3753
  store float %inp, float* %inp.addr, align 4
  call void @llvm.dbg.declare(metadata float* %inp.addr, metadata !3754, metadata !DIExpression()), !dbg !3755
  store float %mat_bias, float* %mat_bias.addr, align 4
  call void @llvm.dbg.declare(metadata float* %mat_bias.addr, metadata !3756, metadata !DIExpression()), !dbg !3757
  call void @llvm.dbg.declare(metadata %struct.ShadSampleBuf** %shsample, metadata !3758, metadata !DIExpression()), !dbg !3759
  call void @llvm.dbg.declare(metadata float* %fac, metadata !3760, metadata !DIExpression()), !dbg !3761
  call void @llvm.dbg.declare(metadata [3 x float]* %dco, metadata !3762, metadata !DIExpression()), !dbg !3763
  call void @llvm.dbg.declare(metadata [3 x float]* %dx, metadata !3764, metadata !DIExpression()), !dbg !3765
  call void @llvm.dbg.declare(metadata [3 x float]* %dy, metadata !3766, metadata !DIExpression()), !dbg !3767
  call void @llvm.dbg.declare(metadata float* %shadfac, metadata !3768, metadata !DIExpression()), !dbg !3769
  store float 0.000000e+00, float* %shadfac, align 4, !dbg !3769
  call void @llvm.dbg.declare(metadata float* %xs1, metadata !3770, metadata !DIExpression()), !dbg !3771
  call void @llvm.dbg.declare(metadata float* %ys1, metadata !3772, metadata !DIExpression()), !dbg !3773
  call void @llvm.dbg.declare(metadata float* %zs1, metadata !3774, metadata !DIExpression()), !dbg !3775
  call void @llvm.dbg.declare(metadata float** %jit, metadata !3776, metadata !DIExpression()), !dbg !3777
  call void @llvm.dbg.declare(metadata float** %weight, metadata !3778, metadata !DIExpression()), !dbg !3779
  call void @llvm.dbg.declare(metadata float* %xres, metadata !3780, metadata !DIExpression()), !dbg !3781
  call void @llvm.dbg.declare(metadata float* %yres, metadata !3782, metadata !DIExpression()), !dbg !3783
  call void @llvm.dbg.declare(metadata float* %biasf, metadata !3784, metadata !DIExpression()), !dbg !3785
  call void @llvm.dbg.declare(metadata i32* %xs, metadata !3786, metadata !DIExpression()), !dbg !3787
  call void @llvm.dbg.declare(metadata i32* %ys, metadata !3788, metadata !DIExpression()), !dbg !3789
  call void @llvm.dbg.declare(metadata i32* %zs, metadata !3790, metadata !DIExpression()), !dbg !3791
  call void @llvm.dbg.declare(metadata i32* %bias, metadata !3792, metadata !DIExpression()), !dbg !3793
  call void @llvm.dbg.declare(metadata i32** %rz, metadata !3794, metadata !DIExpression()), !dbg !3795
  call void @llvm.dbg.declare(metadata i16* %a, metadata !3796, metadata !DIExpression()), !dbg !3797
  call void @llvm.dbg.declare(metadata i16* %num, metadata !3798, metadata !DIExpression()), !dbg !3799
  %0 = load %struct.ShadBuf*, %struct.ShadBuf** %shb.addr, align 8, !dbg !3800
  %buffers = getelementptr inbounds %struct.ShadBuf, %struct.ShadBuf* %0, i32 0, i32 16, !dbg !3802
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %buffers, i32 0, i32 0, !dbg !3803
  %1 = load i8*, i8** %first, align 8, !dbg !3803
  %cmp = icmp eq i8* %1, null, !dbg !3804
  br i1 %cmp, label %if.then, label %if.end, !dbg !3805

if.then:                                          ; preds = %entry
  store float 1.000000e+00, float* %retval, align 4, !dbg !3806
  br label %return, !dbg !3806

if.end:                                           ; preds = %entry
  %2 = load float, float* %inp.addr, align 4, !dbg !3807
  %cmp1 = fcmp ole float %2, 0.000000e+00, !dbg !3809
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !3810

if.then2:                                         ; preds = %if.end
  store float 0.000000e+00, float* %retval, align 4, !dbg !3811
  br label %return, !dbg !3811

if.end3:                                          ; preds = %if.end
  %3 = load %struct.ShadBuf*, %struct.ShadBuf** %shb.addr, align 8, !dbg !3812
  %4 = load float*, float** %co.addr, align 8, !dbg !3813
  call void @shadowbuf_project_co(float* %xs1, float* %ys1, float* %zs1, %struct.ShadBuf* %3, float* %4), !dbg !3814
  %5 = load float, float* %zs1, align 4, !dbg !3815
  %cmp4 = fcmp oge float %5, 1.000000e+00, !dbg !3817
  br i1 %cmp4, label %if.then5, label %if.else, !dbg !3818

if.then5:                                         ; preds = %if.end3
  store float 0.000000e+00, float* %retval, align 4, !dbg !3819
  br label %return, !dbg !3819

if.else:                                          ; preds = %if.end3
  %6 = load float, float* %zs1, align 4, !dbg !3820
  %cmp6 = fcmp ole float %6, -1.000000e+00, !dbg !3822
  br i1 %cmp6, label %if.then7, label %if.end8, !dbg !3823

if.then7:                                         ; preds = %if.else
  store float 1.000000e+00, float* %retval, align 4, !dbg !3824
  br label %return, !dbg !3824

if.end8:                                          ; preds = %if.else
  br label %if.end9

if.end9:                                          ; preds = %if.end8
  %7 = load float, float* %zs1, align 4, !dbg !3825
  %mul = fmul float 0x41E0000000000000, %7, !dbg !3826
  %conv = fptosi float %mul to i32, !dbg !3827
  store i32 %conv, i32* %zs, align 4, !dbg !3828
  %8 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !3829
  %r = getelementptr inbounds %struct.Render, %struct.Render* %8, i32 0, i32 45, !dbg !3830
  %9 = load %struct.ShadBuf*, %struct.ShadBuf** %shb.addr, align 8, !dbg !3831
  %samp = getelementptr inbounds %struct.ShadBuf, %struct.ShadBuf* %9, i32 0, i32 0, !dbg !3832
  %10 = load i16, i16* %samp, align 8, !dbg !3832
  %conv10 = sext i16 %10 to i32, !dbg !3831
  %call = call i32 @get_render_shadow_samples(%struct.RenderData* %r, i32 %conv10), !dbg !3833
  %conv11 = trunc i32 %call to i16, !dbg !3833
  store i16 %conv11, i16* %num, align 2, !dbg !3834
  %11 = load i16, i16* %num, align 2, !dbg !3835
  %conv12 = sext i16 %11 to i32, !dbg !3835
  %12 = load i16, i16* %num, align 2, !dbg !3836
  %conv13 = sext i16 %12 to i32, !dbg !3836
  %mul14 = mul nsw i32 %conv12, %conv13, !dbg !3837
  %conv15 = trunc i32 %mul14 to i16, !dbg !3835
  store i16 %conv15, i16* %num, align 2, !dbg !3838
  %13 = load %struct.ShadBuf*, %struct.ShadBuf** %shb.addr, align 8, !dbg !3839
  %soft = getelementptr inbounds %struct.ShadBuf, %struct.ShadBuf* %13, i32 0, i32 11, !dbg !3840
  %14 = load float, float* %soft, align 4, !dbg !3840
  store float %14, float* %fac, align 4, !dbg !3841
  %15 = load float, float* %mat_bias.addr, align 4, !dbg !3842
  %cmp16 = fcmp une float %15, 0.000000e+00, !dbg !3844
  br i1 %cmp16, label %if.then18, label %if.else22, !dbg !3845

if.then18:                                        ; preds = %if.end9
  %16 = load %struct.ShadBuf*, %struct.ShadBuf** %shb.addr, align 8, !dbg !3846
  %bias19 = getelementptr inbounds %struct.ShadBuf, %struct.ShadBuf* %16, i32 0, i32 15, !dbg !3847
  %17 = load i32, i32* %bias19, align 4, !dbg !3847
  %conv20 = sitofp i32 %17 to float, !dbg !3846
  %18 = load float, float* %mat_bias.addr, align 4, !dbg !3848
  %mul21 = fmul float %conv20, %18, !dbg !3849
  store float %mul21, float* %biasf, align 4, !dbg !3850
  br label %if.end25, !dbg !3851

if.else22:                                        ; preds = %if.end9
  %19 = load %struct.ShadBuf*, %struct.ShadBuf** %shb.addr, align 8, !dbg !3852
  %bias23 = getelementptr inbounds %struct.ShadBuf, %struct.ShadBuf* %19, i32 0, i32 15, !dbg !3853
  %20 = load i32, i32* %bias23, align 4, !dbg !3853
  %conv24 = sitofp i32 %20 to float, !dbg !3852
  store float %conv24, float* %biasf, align 4, !dbg !3854
  br label %if.end25

if.end25:                                         ; preds = %if.else22, %if.then18
  %21 = load float, float* %inp.addr, align 4, !dbg !3855
  %22 = load float, float* %inp.addr, align 4, !dbg !3856
  %mul26 = fmul float %21, %22, !dbg !3857
  %sub = fsub float 1.500000e+00, %mul26, !dbg !3858
  %23 = load float, float* %biasf, align 4, !dbg !3859
  %mul27 = fmul float %sub, %23, !dbg !3860
  %conv28 = fptosi float %mul27 to i32, !dbg !3861
  store i32 %conv28, i32* %bias, align 4, !dbg !3862
  %24 = load i16, i16* %num, align 2, !dbg !3863
  %conv29 = sext i16 %24 to i32, !dbg !3863
  %cmp30 = icmp eq i32 %conv29, 1, !dbg !3865
  br i1 %cmp30, label %if.then32, label %if.end39, !dbg !3866

if.then32:                                        ; preds = %if.end25
  %25 = load %struct.ShadBuf*, %struct.ShadBuf** %shb.addr, align 8, !dbg !3867
  %buffers33 = getelementptr inbounds %struct.ShadBuf, %struct.ShadBuf* %25, i32 0, i32 16, !dbg !3870
  %first34 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %buffers33, i32 0, i32 0, !dbg !3871
  %26 = load i8*, i8** %first34, align 8, !dbg !3871
  %27 = bitcast i8* %26 to %struct.ShadSampleBuf*, !dbg !3867
  store %struct.ShadSampleBuf* %27, %struct.ShadSampleBuf** %shsample, align 8, !dbg !3872
  br label %for.cond, !dbg !3873

for.cond:                                         ; preds = %for.inc, %if.then32
  %28 = load %struct.ShadSampleBuf*, %struct.ShadSampleBuf** %shsample, align 8, !dbg !3874
  %tobool = icmp ne %struct.ShadSampleBuf* %28, null, !dbg !3876
  br i1 %tobool, label %for.body, label %for.end, !dbg !3876

for.body:                                         ; preds = %for.cond
  %29 = load %struct.ShadBuf*, %struct.ShadBuf** %shb.addr, align 8, !dbg !3877
  %30 = load %struct.ShadSampleBuf*, %struct.ShadSampleBuf** %shsample, align 8, !dbg !3878
  %31 = load i32, i32* %bias, align 4, !dbg !3879
  %32 = load float, float* %xs1, align 4, !dbg !3880
  %conv35 = fptosi float %32 to i32, !dbg !3881
  %33 = load float, float* %ys1, align 4, !dbg !3882
  %conv36 = fptosi float %33 to i32, !dbg !3883
  %34 = load i32, i32* %zs, align 4, !dbg !3884
  %call37 = call float @readshadowbuf(%struct.ShadBuf* %29, %struct.ShadSampleBuf* %30, i32 %31, i32 %conv35, i32 %conv36, i32 %34), !dbg !3885
  %35 = load float, float* %shadfac, align 4, !dbg !3886
  %add = fadd float %35, %call37, !dbg !3886
  store float %add, float* %shadfac, align 4, !dbg !3886
  br label %for.inc, !dbg !3887

for.inc:                                          ; preds = %for.body
  %36 = load %struct.ShadSampleBuf*, %struct.ShadSampleBuf** %shsample, align 8, !dbg !3888
  %next = getelementptr inbounds %struct.ShadSampleBuf, %struct.ShadSampleBuf* %36, i32 0, i32 0, !dbg !3889
  %37 = load %struct.ShadSampleBuf*, %struct.ShadSampleBuf** %next, align 8, !dbg !3889
  store %struct.ShadSampleBuf* %37, %struct.ShadSampleBuf** %shsample, align 8, !dbg !3890
  br label %for.cond, !dbg !3891, !llvm.loop !3892

for.end:                                          ; preds = %for.cond
  %38 = load float, float* %shadfac, align 4, !dbg !3894
  %39 = load %struct.ShadBuf*, %struct.ShadBuf** %shb.addr, align 8, !dbg !3895
  %totbuf = getelementptr inbounds %struct.ShadBuf, %struct.ShadBuf* %39, i32 0, i32 2, !dbg !3896
  %40 = load i16, i16* %totbuf, align 4, !dbg !3896
  %conv38 = sitofp i16 %40 to float, !dbg !3897
  %div = fdiv float %38, %conv38, !dbg !3898
  store float %div, float* %retval, align 4, !dbg !3899
  br label %return, !dbg !3899

if.end39:                                         ; preds = %if.end25
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %dco, i64 0, i64 0, !dbg !3900
  %41 = load float*, float** %co.addr, align 8, !dbg !3901
  %42 = load float*, float** %dxco.addr, align 8, !dbg !3902
  call void @add_v3_v3v3(float* %arraydecay, float* %41, float* %42), !dbg !3903
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %dx, i64 0, i64 0, !dbg !3904
  %arrayidx40 = getelementptr inbounds [3 x float], [3 x float]* %dx, i64 0, i64 1, !dbg !3905
  %43 = load %struct.ShadBuf*, %struct.ShadBuf** %shb.addr, align 8, !dbg !3906
  %arraydecay41 = getelementptr inbounds [3 x float], [3 x float]* %dco, i64 0, i64 0, !dbg !3907
  call void @shadowbuf_project_co(float* %arrayidx, float* %arrayidx40, float* null, %struct.ShadBuf* %43, float* %arraydecay41), !dbg !3908
  %44 = load float, float* %xs1, align 4, !dbg !3909
  %arrayidx42 = getelementptr inbounds [3 x float], [3 x float]* %dx, i64 0, i64 0, !dbg !3910
  %45 = load float, float* %arrayidx42, align 4, !dbg !3910
  %sub43 = fsub float %44, %45, !dbg !3911
  %arrayidx44 = getelementptr inbounds [3 x float], [3 x float]* %dx, i64 0, i64 0, !dbg !3912
  store float %sub43, float* %arrayidx44, align 4, !dbg !3913
  %46 = load float, float* %ys1, align 4, !dbg !3914
  %arrayidx45 = getelementptr inbounds [3 x float], [3 x float]* %dx, i64 0, i64 1, !dbg !3915
  %47 = load float, float* %arrayidx45, align 4, !dbg !3915
  %sub46 = fsub float %46, %47, !dbg !3916
  %arrayidx47 = getelementptr inbounds [3 x float], [3 x float]* %dx, i64 0, i64 1, !dbg !3917
  store float %sub46, float* %arrayidx47, align 4, !dbg !3918
  %arraydecay48 = getelementptr inbounds [3 x float], [3 x float]* %dco, i64 0, i64 0, !dbg !3919
  %48 = load float*, float** %co.addr, align 8, !dbg !3920
  %49 = load float*, float** %dyco.addr, align 8, !dbg !3921
  call void @add_v3_v3v3(float* %arraydecay48, float* %48, float* %49), !dbg !3922
  %arrayidx49 = getelementptr inbounds [3 x float], [3 x float]* %dy, i64 0, i64 0, !dbg !3923
  %arrayidx50 = getelementptr inbounds [3 x float], [3 x float]* %dy, i64 0, i64 1, !dbg !3924
  %50 = load %struct.ShadBuf*, %struct.ShadBuf** %shb.addr, align 8, !dbg !3925
  %arraydecay51 = getelementptr inbounds [3 x float], [3 x float]* %dco, i64 0, i64 0, !dbg !3926
  call void @shadowbuf_project_co(float* %arrayidx49, float* %arrayidx50, float* null, %struct.ShadBuf* %50, float* %arraydecay51), !dbg !3927
  %51 = load float, float* %xs1, align 4, !dbg !3928
  %arrayidx52 = getelementptr inbounds [3 x float], [3 x float]* %dy, i64 0, i64 0, !dbg !3929
  %52 = load float, float* %arrayidx52, align 4, !dbg !3929
  %sub53 = fsub float %51, %52, !dbg !3930
  %arrayidx54 = getelementptr inbounds [3 x float], [3 x float]* %dy, i64 0, i64 0, !dbg !3931
  store float %sub53, float* %arrayidx54, align 4, !dbg !3932
  %53 = load float, float* %ys1, align 4, !dbg !3933
  %arrayidx55 = getelementptr inbounds [3 x float], [3 x float]* %dy, i64 0, i64 1, !dbg !3934
  %54 = load float, float* %arrayidx55, align 4, !dbg !3934
  %sub56 = fsub float %53, %54, !dbg !3935
  %arrayidx57 = getelementptr inbounds [3 x float], [3 x float]* %dy, i64 0, i64 1, !dbg !3936
  store float %sub56, float* %arrayidx57, align 4, !dbg !3937
  %55 = load float, float* %fac, align 4, !dbg !3938
  %arrayidx58 = getelementptr inbounds [3 x float], [3 x float]* %dx, i64 0, i64 0, !dbg !3939
  %56 = load float, float* %arrayidx58, align 4, !dbg !3939
  %57 = call float @llvm.fabs.f32(float %56), !dbg !3940
  %arrayidx59 = getelementptr inbounds [3 x float], [3 x float]* %dy, i64 0, i64 0, !dbg !3941
  %58 = load float, float* %arrayidx59, align 4, !dbg !3941
  %59 = call float @llvm.fabs.f32(float %58), !dbg !3942
  %add60 = fadd float %57, %59, !dbg !3943
  %mul61 = fmul float %55, %add60, !dbg !3944
  store float %mul61, float* %xres, align 4, !dbg !3945
  %60 = load float, float* %fac, align 4, !dbg !3946
  %arrayidx62 = getelementptr inbounds [3 x float], [3 x float]* %dx, i64 0, i64 1, !dbg !3947
  %61 = load float, float* %arrayidx62, align 4, !dbg !3947
  %62 = call float @llvm.fabs.f32(float %61), !dbg !3948
  %arrayidx63 = getelementptr inbounds [3 x float], [3 x float]* %dy, i64 0, i64 1, !dbg !3949
  %63 = load float, float* %arrayidx63, align 4, !dbg !3949
  %64 = call float @llvm.fabs.f32(float %63), !dbg !3950
  %add64 = fadd float %62, %64, !dbg !3951
  %mul65 = fmul float %60, %add64, !dbg !3952
  store float %mul65, float* %yres, align 4, !dbg !3953
  %65 = load float, float* %xres, align 4, !dbg !3954
  %cmp66 = fcmp olt float %65, 1.000000e+00, !dbg !3956
  br i1 %cmp66, label %if.then68, label %if.end69, !dbg !3957

if.then68:                                        ; preds = %if.end39
  store float 1.000000e+00, float* %xres, align 4, !dbg !3958
  br label %if.end69, !dbg !3959

if.end69:                                         ; preds = %if.then68, %if.end39
  %66 = load float, float* %yres, align 4, !dbg !3960
  %cmp70 = fcmp olt float %66, 1.000000e+00, !dbg !3962
  br i1 %cmp70, label %if.then72, label %if.end73, !dbg !3963

if.then72:                                        ; preds = %if.end69
  store float 1.000000e+00, float* %yres, align 4, !dbg !3964
  br label %if.end73, !dbg !3965

if.end73:                                         ; preds = %if.then72, %if.end69
  %67 = load float, float* %xres, align 4, !dbg !3966
  %mul74 = fmul float %67, 5.000000e-01, !dbg !3967
  %68 = load float, float* %xs1, align 4, !dbg !3968
  %sub75 = fsub float %68, %mul74, !dbg !3968
  store float %sub75, float* %xs1, align 4, !dbg !3968
  %69 = load float, float* %yres, align 4, !dbg !3969
  %mul76 = fmul float %69, 5.000000e-01, !dbg !3970
  %70 = load float, float* %ys1, align 4, !dbg !3971
  %sub77 = fsub float %70, %mul76, !dbg !3971
  store float %sub77, float* %ys1, align 4, !dbg !3971
  %71 = load float, float* %xres, align 4, !dbg !3972
  %cmp78 = fcmp olt float %71, 1.600000e+01, !dbg !3974
  br i1 %cmp78, label %land.lhs.true, label %if.end116, !dbg !3975

land.lhs.true:                                    ; preds = %if.end73
  %72 = load float, float* %yres, align 4, !dbg !3976
  %cmp80 = fcmp olt float %72, 1.600000e+01, !dbg !3977
  br i1 %cmp80, label %if.then82, label %if.end116, !dbg !3978

if.then82:                                        ; preds = %land.lhs.true
  %73 = load %struct.ShadBuf*, %struct.ShadBuf** %shb.addr, align 8, !dbg !3979
  %buffers83 = getelementptr inbounds %struct.ShadBuf, %struct.ShadBuf* %73, i32 0, i32 16, !dbg !3981
  %first84 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %buffers83, i32 0, i32 0, !dbg !3982
  %74 = load i8*, i8** %first84, align 8, !dbg !3982
  %75 = bitcast i8* %74 to %struct.ShadSampleBuf*, !dbg !3979
  store %struct.ShadSampleBuf* %75, %struct.ShadSampleBuf** %shsample, align 8, !dbg !3983
  %76 = load %struct.ShadBuf*, %struct.ShadBuf** %shb.addr, align 8, !dbg !3984
  %77 = load %struct.ShadSampleBuf*, %struct.ShadSampleBuf** %shsample, align 8, !dbg !3986
  %78 = load float, float* %xs1, align 4, !dbg !3987
  %conv85 = fptosi float %78 to i32, !dbg !3988
  %79 = load float, float* %ys1, align 4, !dbg !3989
  %conv86 = fptosi float %79 to i32, !dbg !3990
  %call87 = call i32 @firstreadshadbuf(%struct.ShadBuf* %76, %struct.ShadSampleBuf* %77, i32** %rz, i32 %conv85, i32 %conv86, i32 0), !dbg !3991
  %tobool88 = icmp ne i32 %call87, 0, !dbg !3991
  br i1 %tobool88, label %if.then89, label %if.end115, !dbg !3992

if.then89:                                        ; preds = %if.then82
  %80 = load %struct.ShadBuf*, %struct.ShadBuf** %shb.addr, align 8, !dbg !3993
  %81 = load %struct.ShadSampleBuf*, %struct.ShadSampleBuf** %shsample, align 8, !dbg !3996
  %82 = load float, float* %xs1, align 4, !dbg !3997
  %83 = load float, float* %xres, align 4, !dbg !3998
  %add90 = fadd float %82, %83, !dbg !3999
  %conv91 = fptosi float %add90 to i32, !dbg !4000
  %84 = load float, float* %ys1, align 4, !dbg !4001
  %conv92 = fptosi float %84 to i32, !dbg !4002
  %call93 = call i32 @firstreadshadbuf(%struct.ShadBuf* %80, %struct.ShadSampleBuf* %81, i32** %rz, i32 %conv91, i32 %conv92, i32 1), !dbg !4003
  %tobool94 = icmp ne i32 %call93, 0, !dbg !4003
  br i1 %tobool94, label %if.then95, label %if.end114, !dbg !4004

if.then95:                                        ; preds = %if.then89
  %85 = load %struct.ShadBuf*, %struct.ShadBuf** %shb.addr, align 8, !dbg !4005
  %86 = load %struct.ShadSampleBuf*, %struct.ShadSampleBuf** %shsample, align 8, !dbg !4008
  %87 = load float, float* %xs1, align 4, !dbg !4009
  %conv96 = fptosi float %87 to i32, !dbg !4010
  %88 = load float, float* %ys1, align 4, !dbg !4011
  %89 = load float, float* %yres, align 4, !dbg !4012
  %add97 = fadd float %88, %89, !dbg !4013
  %conv98 = fptosi float %add97 to i32, !dbg !4014
  %call99 = call i32 @firstreadshadbuf(%struct.ShadBuf* %85, %struct.ShadSampleBuf* %86, i32** %rz, i32 %conv96, i32 %conv98, i32 1), !dbg !4015
  %tobool100 = icmp ne i32 %call99, 0, !dbg !4015
  br i1 %tobool100, label %if.then101, label %if.end113, !dbg !4016

if.then101:                                       ; preds = %if.then95
  %90 = load %struct.ShadBuf*, %struct.ShadBuf** %shb.addr, align 8, !dbg !4017
  %91 = load %struct.ShadSampleBuf*, %struct.ShadSampleBuf** %shsample, align 8, !dbg !4020
  %92 = load float, float* %xs1, align 4, !dbg !4021
  %93 = load float, float* %xres, align 4, !dbg !4022
  %add102 = fadd float %92, %93, !dbg !4023
  %conv103 = fptosi float %add102 to i32, !dbg !4024
  %94 = load float, float* %ys1, align 4, !dbg !4025
  %95 = load float, float* %yres, align 4, !dbg !4026
  %add104 = fadd float %94, %95, !dbg !4027
  %conv105 = fptosi float %add104 to i32, !dbg !4028
  %call106 = call i32 @firstreadshadbuf(%struct.ShadBuf* %90, %struct.ShadSampleBuf* %91, i32** %rz, i32 %conv103, i32 %conv105, i32 1), !dbg !4029
  %tobool107 = icmp ne i32 %call106, 0, !dbg !4029
  br i1 %tobool107, label %if.then108, label %if.end112, !dbg !4030

if.then108:                                       ; preds = %if.then101
  %96 = load %struct.ShadBuf*, %struct.ShadBuf** %shb.addr, align 8, !dbg !4031
  %97 = load %struct.ShadSampleBuf*, %struct.ShadSampleBuf** %shsample, align 8, !dbg !4033
  %98 = load i32, i32* %bias, align 4, !dbg !4034
  %99 = load float, float* %xs1, align 4, !dbg !4035
  %conv109 = fptosi float %99 to i32, !dbg !4036
  %100 = load float, float* %ys1, align 4, !dbg !4037
  %conv110 = fptosi float %100 to i32, !dbg !4038
  %101 = load i32, i32* %zs, align 4, !dbg !4039
  %call111 = call float @readshadowbuf(%struct.ShadBuf* %96, %struct.ShadSampleBuf* %97, i32 %98, i32 %conv109, i32 %conv110, i32 %101), !dbg !4040
  store float %call111, float* %retval, align 4, !dbg !4041
  br label %return, !dbg !4041

if.end112:                                        ; preds = %if.then101
  br label %if.end113, !dbg !4042

if.end113:                                        ; preds = %if.end112, %if.then95
  br label %if.end114, !dbg !4043

if.end114:                                        ; preds = %if.end113, %if.then89
  br label %if.end115, !dbg !4044

if.end115:                                        ; preds = %if.end114, %if.then82
  br label %if.end116, !dbg !4045

if.end116:                                        ; preds = %if.end115, %land.lhs.true, %if.end73
  %102 = load %struct.ShadBuf*, %struct.ShadBuf** %shb.addr, align 8, !dbg !4046
  %buffers117 = getelementptr inbounds %struct.ShadBuf, %struct.ShadBuf* %102, i32 0, i32 16, !dbg !4048
  %first118 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %buffers117, i32 0, i32 0, !dbg !4049
  %103 = load i8*, i8** %first118, align 8, !dbg !4049
  %104 = bitcast i8* %103 to %struct.ShadSampleBuf*, !dbg !4046
  store %struct.ShadSampleBuf* %104, %struct.ShadSampleBuf** %shsample, align 8, !dbg !4050
  br label %for.cond119, !dbg !4051

for.cond119:                                      ; preds = %for.inc144, %if.end116
  %105 = load %struct.ShadSampleBuf*, %struct.ShadSampleBuf** %shsample, align 8, !dbg !4052
  %tobool120 = icmp ne %struct.ShadSampleBuf* %105, null, !dbg !4054
  br i1 %tobool120, label %for.body121, label %for.end146, !dbg !4054

for.body121:                                      ; preds = %for.cond119
  %106 = load %struct.ShadBuf*, %struct.ShadBuf** %shb.addr, align 8, !dbg !4055
  %jit122 = getelementptr inbounds %struct.ShadBuf, %struct.ShadBuf* %106, i32 0, i32 6, !dbg !4057
  %107 = load float*, float** %jit122, align 8, !dbg !4057
  store float* %107, float** %jit, align 8, !dbg !4058
  %108 = load %struct.ShadBuf*, %struct.ShadBuf** %shb.addr, align 8, !dbg !4059
  %weight123 = getelementptr inbounds %struct.ShadBuf, %struct.ShadBuf* %108, i32 0, i32 7, !dbg !4060
  %109 = load float*, float** %weight123, align 8, !dbg !4060
  store float* %109, float** %weight, align 8, !dbg !4061
  %110 = load i16, i16* %num, align 2, !dbg !4062
  store i16 %110, i16* %a, align 2, !dbg !4064
  br label %for.cond124, !dbg !4065

for.cond124:                                      ; preds = %for.inc142, %for.body121
  %111 = load i16, i16* %a, align 2, !dbg !4066
  %conv125 = sext i16 %111 to i32, !dbg !4066
  %cmp126 = icmp sgt i32 %conv125, 0, !dbg !4068
  br i1 %cmp126, label %for.body128, label %for.end143, !dbg !4069

for.body128:                                      ; preds = %for.cond124
  %112 = load float, float* %xs1, align 4, !dbg !4070
  %113 = load float, float* %xres, align 4, !dbg !4072
  %114 = load float*, float** %jit, align 8, !dbg !4073
  %arrayidx129 = getelementptr inbounds float, float* %114, i64 0, !dbg !4073
  %115 = load float, float* %arrayidx129, align 4, !dbg !4073
  %add130 = fadd float %115, 5.000000e-01, !dbg !4074
  %mul131 = fmul float %113, %add130, !dbg !4075
  %add132 = fadd float %112, %mul131, !dbg !4076
  %conv133 = fptosi float %add132 to i32, !dbg !4070
  store i32 %conv133, i32* %xs, align 4, !dbg !4077
  %116 = load float, float* %ys1, align 4, !dbg !4078
  %117 = load float, float* %yres, align 4, !dbg !4079
  %118 = load float*, float** %jit, align 8, !dbg !4080
  %arrayidx134 = getelementptr inbounds float, float* %118, i64 1, !dbg !4080
  %119 = load float, float* %arrayidx134, align 4, !dbg !4080
  %add135 = fadd float %119, 5.000000e-01, !dbg !4081
  %mul136 = fmul float %117, %add135, !dbg !4082
  %add137 = fadd float %116, %mul136, !dbg !4083
  %conv138 = fptosi float %add137 to i32, !dbg !4078
  store i32 %conv138, i32* %ys, align 4, !dbg !4084
  %120 = load float*, float** %weight, align 8, !dbg !4085
  %121 = load float, float* %120, align 4, !dbg !4086
  %122 = load %struct.ShadBuf*, %struct.ShadBuf** %shb.addr, align 8, !dbg !4087
  %123 = load %struct.ShadSampleBuf*, %struct.ShadSampleBuf** %shsample, align 8, !dbg !4088
  %124 = load i32, i32* %bias, align 4, !dbg !4089
  %125 = load i32, i32* %xs, align 4, !dbg !4090
  %126 = load i32, i32* %ys, align 4, !dbg !4091
  %127 = load i32, i32* %zs, align 4, !dbg !4092
  %call139 = call float @readshadowbuf(%struct.ShadBuf* %122, %struct.ShadSampleBuf* %123, i32 %124, i32 %125, i32 %126, i32 %127), !dbg !4093
  %mul140 = fmul float %121, %call139, !dbg !4094
  %128 = load float, float* %shadfac, align 4, !dbg !4095
  %add141 = fadd float %128, %mul140, !dbg !4095
  store float %add141, float* %shadfac, align 4, !dbg !4095
  br label %for.inc142, !dbg !4096

for.inc142:                                       ; preds = %for.body128
  %129 = load i16, i16* %a, align 2, !dbg !4097
  %dec = add i16 %129, -1, !dbg !4097
  store i16 %dec, i16* %a, align 2, !dbg !4097
  %130 = load float*, float** %jit, align 8, !dbg !4098
  %add.ptr = getelementptr inbounds float, float* %130, i64 2, !dbg !4098
  store float* %add.ptr, float** %jit, align 8, !dbg !4098
  %131 = load float*, float** %weight, align 8, !dbg !4099
  %incdec.ptr = getelementptr inbounds float, float* %131, i32 1, !dbg !4099
  store float* %incdec.ptr, float** %weight, align 8, !dbg !4099
  br label %for.cond124, !dbg !4100, !llvm.loop !4101

for.end143:                                       ; preds = %for.cond124
  br label %for.inc144, !dbg !4103

for.inc144:                                       ; preds = %for.end143
  %132 = load %struct.ShadSampleBuf*, %struct.ShadSampleBuf** %shsample, align 8, !dbg !4104
  %next145 = getelementptr inbounds %struct.ShadSampleBuf, %struct.ShadSampleBuf* %132, i32 0, i32 0, !dbg !4105
  %133 = load %struct.ShadSampleBuf*, %struct.ShadSampleBuf** %next145, align 8, !dbg !4105
  store %struct.ShadSampleBuf* %133, %struct.ShadSampleBuf** %shsample, align 8, !dbg !4106
  br label %for.cond119, !dbg !4107, !llvm.loop !4108

for.end146:                                       ; preds = %for.cond119
  %134 = load float, float* %shadfac, align 4, !dbg !4110
  %135 = load %struct.ShadBuf*, %struct.ShadBuf** %shb.addr, align 8, !dbg !4111
  %totbuf147 = getelementptr inbounds %struct.ShadBuf, %struct.ShadBuf* %135, i32 0, i32 2, !dbg !4112
  %136 = load i16, i16* %totbuf147, align 4, !dbg !4112
  %conv148 = sitofp i16 %136 to float, !dbg !4113
  %div149 = fdiv float %134, %conv148, !dbg !4114
  store float %div149, float* %retval, align 4, !dbg !4115
  br label %return, !dbg !4115

return:                                           ; preds = %for.end146, %if.then108, %for.end, %if.then7, %if.then5, %if.then2, %if.then
  %137 = load float, float* %retval, align 4, !dbg !4116
  ret float %137, !dbg !4116
}

; Function Attrs: noinline nounwind uwtable
define internal void @shadowbuf_project_co(float* %x, float* %y, float* %z, %struct.ShadBuf* %shb, float* %co) #0 !dbg !4117 {
entry:
  %x.addr = alloca float*, align 8
  %y.addr = alloca float*, align 8
  %z.addr = alloca float*, align 8
  %shb.addr = alloca %struct.ShadBuf*, align 8
  %co.addr = alloca float*, align 8
  %hco = alloca [4 x float], align 16
  %size = alloca float, align 4
  store float* %x, float** %x.addr, align 8
  call void @llvm.dbg.declare(metadata float** %x.addr, metadata !4120, metadata !DIExpression()), !dbg !4121
  store float* %y, float** %y.addr, align 8
  call void @llvm.dbg.declare(metadata float** %y.addr, metadata !4122, metadata !DIExpression()), !dbg !4123
  store float* %z, float** %z.addr, align 8
  call void @llvm.dbg.declare(metadata float** %z.addr, metadata !4124, metadata !DIExpression()), !dbg !4125
  store %struct.ShadBuf* %shb, %struct.ShadBuf** %shb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ShadBuf** %shb.addr, metadata !4126, metadata !DIExpression()), !dbg !4127
  store float* %co, float** %co.addr, align 8
  call void @llvm.dbg.declare(metadata float** %co.addr, metadata !4128, metadata !DIExpression()), !dbg !4129
  call void @llvm.dbg.declare(metadata [4 x float]* %hco, metadata !4130, metadata !DIExpression()), !dbg !4131
  call void @llvm.dbg.declare(metadata float* %size, metadata !4132, metadata !DIExpression()), !dbg !4133
  %0 = load %struct.ShadBuf*, %struct.ShadBuf** %shb.addr, align 8, !dbg !4134
  %size1 = getelementptr inbounds %struct.ShadBuf, %struct.ShadBuf* %0, i32 0, i32 14, !dbg !4135
  %1 = load i32, i32* %size1, align 8, !dbg !4135
  %conv = sitofp i32 %1 to float, !dbg !4136
  %mul = fmul float 5.000000e-01, %conv, !dbg !4137
  store float %mul, float* %size, align 4, !dbg !4133
  %arraydecay = getelementptr inbounds [4 x float], [4 x float]* %hco, i64 0, i64 0, !dbg !4138
  %2 = load float*, float** %co.addr, align 8, !dbg !4139
  call void @copy_v3_v3(float* %arraydecay, float* %2), !dbg !4140
  %arrayidx = getelementptr inbounds [4 x float], [4 x float]* %hco, i64 0, i64 3, !dbg !4141
  store float 1.000000e+00, float* %arrayidx, align 4, !dbg !4142
  %3 = load %struct.ShadBuf*, %struct.ShadBuf** %shb.addr, align 8, !dbg !4143
  %persmat = getelementptr inbounds %struct.ShadBuf, %struct.ShadBuf* %3, i32 0, i32 3, !dbg !4144
  %arraydecay2 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %persmat, i64 0, i64 0, !dbg !4143
  %arraydecay3 = getelementptr inbounds [4 x float], [4 x float]* %hco, i64 0, i64 0, !dbg !4145
  call void @mul_m4_v4([4 x float]* %arraydecay2, float* %arraydecay3), !dbg !4146
  %4 = load float, float* %size, align 4, !dbg !4147
  %arrayidx4 = getelementptr inbounds [4 x float], [4 x float]* %hco, i64 0, i64 0, !dbg !4148
  %5 = load float, float* %arrayidx4, align 16, !dbg !4148
  %arrayidx5 = getelementptr inbounds [4 x float], [4 x float]* %hco, i64 0, i64 3, !dbg !4149
  %6 = load float, float* %arrayidx5, align 4, !dbg !4149
  %div = fdiv float %5, %6, !dbg !4150
  %add = fadd float 1.000000e+00, %div, !dbg !4151
  %mul6 = fmul float %4, %add, !dbg !4152
  %7 = load float*, float** %x.addr, align 8, !dbg !4153
  store float %mul6, float* %7, align 4, !dbg !4154
  %8 = load float, float* %size, align 4, !dbg !4155
  %arrayidx7 = getelementptr inbounds [4 x float], [4 x float]* %hco, i64 0, i64 1, !dbg !4156
  %9 = load float, float* %arrayidx7, align 4, !dbg !4156
  %arrayidx8 = getelementptr inbounds [4 x float], [4 x float]* %hco, i64 0, i64 3, !dbg !4157
  %10 = load float, float* %arrayidx8, align 4, !dbg !4157
  %div9 = fdiv float %9, %10, !dbg !4158
  %add10 = fadd float 1.000000e+00, %div9, !dbg !4159
  %mul11 = fmul float %8, %add10, !dbg !4160
  %11 = load float*, float** %y.addr, align 8, !dbg !4161
  store float %mul11, float* %11, align 4, !dbg !4162
  %12 = load float*, float** %z.addr, align 8, !dbg !4163
  %tobool = icmp ne float* %12, null, !dbg !4163
  br i1 %tobool, label %if.then, label %if.end, !dbg !4165

if.then:                                          ; preds = %entry
  %arrayidx12 = getelementptr inbounds [4 x float], [4 x float]* %hco, i64 0, i64 2, !dbg !4166
  %13 = load float, float* %arrayidx12, align 8, !dbg !4166
  %arrayidx13 = getelementptr inbounds [4 x float], [4 x float]* %hco, i64 0, i64 3, !dbg !4167
  %14 = load float, float* %arrayidx13, align 4, !dbg !4167
  %div14 = fdiv float %13, %14, !dbg !4168
  %15 = load float*, float** %z.addr, align 8, !dbg !4169
  store float %div14, float* %15, align 4, !dbg !4170
  br label %if.end, !dbg !4171

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !4172
}

; Function Attrs: noinline nounwind uwtable
define internal float @readshadowbuf(%struct.ShadBuf* %shb, %struct.ShadSampleBuf* %shsample, i32 %bias, i32 %xs, i32 %ys, i32 %zs) #0 !dbg !4173 {
entry:
  %retval = alloca float, align 4
  %shb.addr = alloca %struct.ShadBuf*, align 8
  %shsample.addr = alloca %struct.ShadSampleBuf*, align 8
  %bias.addr = alloca i32, align 4
  %xs.addr = alloca i32, align 4
  %ys.addr = alloca i32, align 4
  %zs.addr = alloca i32, align 4
  %temp = alloca float, align 4
  %rz = alloca i32*, align 8
  %ofs = alloca i32, align 4
  %zsamp = alloca i32, align 4
  %ct = alloca i8*, align 8
  %cz = alloca i8*, align 8
  store %struct.ShadBuf* %shb, %struct.ShadBuf** %shb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ShadBuf** %shb.addr, metadata !4176, metadata !DIExpression()), !dbg !4177
  store %struct.ShadSampleBuf* %shsample, %struct.ShadSampleBuf** %shsample.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ShadSampleBuf** %shsample.addr, metadata !4178, metadata !DIExpression()), !dbg !4179
  store i32 %bias, i32* %bias.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bias.addr, metadata !4180, metadata !DIExpression()), !dbg !4181
  store i32 %xs, i32* %xs.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %xs.addr, metadata !4182, metadata !DIExpression()), !dbg !4183
  store i32 %ys, i32* %ys.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ys.addr, metadata !4184, metadata !DIExpression()), !dbg !4185
  store i32 %zs, i32* %zs.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %zs.addr, metadata !4186, metadata !DIExpression()), !dbg !4187
  call void @llvm.dbg.declare(metadata float* %temp, metadata !4188, metadata !DIExpression()), !dbg !4189
  call void @llvm.dbg.declare(metadata i32** %rz, metadata !4190, metadata !DIExpression()), !dbg !4191
  call void @llvm.dbg.declare(metadata i32* %ofs, metadata !4192, metadata !DIExpression()), !dbg !4193
  call void @llvm.dbg.declare(metadata i32* %zsamp, metadata !4194, metadata !DIExpression()), !dbg !4195
  store i32 0, i32* %zsamp, align 4, !dbg !4195
  call void @llvm.dbg.declare(metadata i8** %ct, metadata !4196, metadata !DIExpression()), !dbg !4197
  call void @llvm.dbg.declare(metadata i8** %cz, metadata !4198, metadata !DIExpression()), !dbg !4199
  %0 = load i32, i32* %xs.addr, align 4, !dbg !4200
  %cmp = icmp slt i32 %0, 0, !dbg !4202
  br i1 %cmp, label %if.then, label %if.else, !dbg !4203

if.then:                                          ; preds = %entry
  store i32 0, i32* %xs.addr, align 4, !dbg !4204
  br label %if.end4, !dbg !4205

if.else:                                          ; preds = %entry
  %1 = load i32, i32* %xs.addr, align 4, !dbg !4206
  %2 = load %struct.ShadBuf*, %struct.ShadBuf** %shb.addr, align 8, !dbg !4208
  %size = getelementptr inbounds %struct.ShadBuf, %struct.ShadBuf* %2, i32 0, i32 14, !dbg !4209
  %3 = load i32, i32* %size, align 8, !dbg !4209
  %cmp1 = icmp sge i32 %1, %3, !dbg !4210
  br i1 %cmp1, label %if.then2, label %if.end, !dbg !4211

if.then2:                                         ; preds = %if.else
  %4 = load %struct.ShadBuf*, %struct.ShadBuf** %shb.addr, align 8, !dbg !4212
  %size3 = getelementptr inbounds %struct.ShadBuf, %struct.ShadBuf* %4, i32 0, i32 14, !dbg !4213
  %5 = load i32, i32* %size3, align 8, !dbg !4213
  %sub = sub nsw i32 %5, 1, !dbg !4214
  store i32 %sub, i32* %xs.addr, align 4, !dbg !4215
  br label %if.end, !dbg !4216

if.end:                                           ; preds = %if.then2, %if.else
  br label %if.end4

if.end4:                                          ; preds = %if.end, %if.then
  %6 = load i32, i32* %ys.addr, align 4, !dbg !4217
  %cmp5 = icmp slt i32 %6, 0, !dbg !4219
  br i1 %cmp5, label %if.then6, label %if.else7, !dbg !4220

if.then6:                                         ; preds = %if.end4
  store i32 0, i32* %ys.addr, align 4, !dbg !4221
  br label %if.end14, !dbg !4222

if.else7:                                         ; preds = %if.end4
  %7 = load i32, i32* %ys.addr, align 4, !dbg !4223
  %8 = load %struct.ShadBuf*, %struct.ShadBuf** %shb.addr, align 8, !dbg !4225
  %size8 = getelementptr inbounds %struct.ShadBuf, %struct.ShadBuf* %8, i32 0, i32 14, !dbg !4226
  %9 = load i32, i32* %size8, align 8, !dbg !4226
  %cmp9 = icmp sge i32 %7, %9, !dbg !4227
  br i1 %cmp9, label %if.then10, label %if.end13, !dbg !4228

if.then10:                                        ; preds = %if.else7
  %10 = load %struct.ShadBuf*, %struct.ShadBuf** %shb.addr, align 8, !dbg !4229
  %size11 = getelementptr inbounds %struct.ShadBuf, %struct.ShadBuf* %10, i32 0, i32 14, !dbg !4230
  %11 = load i32, i32* %size11, align 8, !dbg !4230
  %sub12 = sub nsw i32 %11, 1, !dbg !4231
  store i32 %sub12, i32* %ys.addr, align 4, !dbg !4232
  br label %if.end13, !dbg !4233

if.end13:                                         ; preds = %if.then10, %if.else7
  br label %if.end14

if.end14:                                         ; preds = %if.end13, %if.then6
  %12 = load %struct.ShadSampleBuf*, %struct.ShadSampleBuf** %shsample.addr, align 8, !dbg !4234
  %deepbuf = getelementptr inbounds %struct.ShadSampleBuf, %struct.ShadSampleBuf* %12, i32 0, i32 4, !dbg !4236
  %13 = load %struct.DeepSample**, %struct.DeepSample*** %deepbuf, align 8, !dbg !4236
  %tobool = icmp ne %struct.DeepSample** %13, null, !dbg !4234
  br i1 %tobool, label %if.then15, label %if.end16, !dbg !4237

if.then15:                                        ; preds = %if.end14
  %14 = load %struct.ShadBuf*, %struct.ShadBuf** %shb.addr, align 8, !dbg !4238
  %15 = load %struct.ShadSampleBuf*, %struct.ShadSampleBuf** %shsample.addr, align 8, !dbg !4239
  %16 = load i32, i32* %bias.addr, align 4, !dbg !4240
  %17 = load i32, i32* %xs.addr, align 4, !dbg !4241
  %18 = load i32, i32* %ys.addr, align 4, !dbg !4242
  %19 = load i32, i32* %zs.addr, align 4, !dbg !4243
  %call = call float @readdeepshadowbuf(%struct.ShadBuf* %14, %struct.ShadSampleBuf* %15, i32 %16, i32 %17, i32 %18, i32 %19), !dbg !4244
  store float %call, float* %retval, align 4, !dbg !4245
  br label %return, !dbg !4245

if.end16:                                         ; preds = %if.end14
  %20 = load i32, i32* %ys.addr, align 4, !dbg !4246
  %shr = ashr i32 %20, 4, !dbg !4247
  %21 = load %struct.ShadBuf*, %struct.ShadBuf** %shb.addr, align 8, !dbg !4248
  %size17 = getelementptr inbounds %struct.ShadBuf, %struct.ShadBuf* %21, i32 0, i32 14, !dbg !4249
  %22 = load i32, i32* %size17, align 8, !dbg !4249
  %shr18 = ashr i32 %22, 4, !dbg !4250
  %mul = mul nsw i32 %shr, %shr18, !dbg !4251
  %23 = load i32, i32* %xs.addr, align 4, !dbg !4252
  %shr19 = ashr i32 %23, 4, !dbg !4253
  %add = add nsw i32 %mul, %shr19, !dbg !4254
  store i32 %add, i32* %ofs, align 4, !dbg !4255
  %24 = load %struct.ShadSampleBuf*, %struct.ShadSampleBuf** %shsample.addr, align 8, !dbg !4256
  %cbuf = getelementptr inbounds %struct.ShadSampleBuf, %struct.ShadSampleBuf* %24, i32 0, i32 3, !dbg !4257
  %25 = load i8*, i8** %cbuf, align 8, !dbg !4257
  %26 = load i32, i32* %ofs, align 4, !dbg !4258
  %idx.ext = sext i32 %26 to i64, !dbg !4259
  %add.ptr = getelementptr inbounds i8, i8* %25, i64 %idx.ext, !dbg !4259
  store i8* %add.ptr, i8** %ct, align 8, !dbg !4260
  %27 = load %struct.ShadSampleBuf*, %struct.ShadSampleBuf** %shsample.addr, align 8, !dbg !4261
  %zbuf = getelementptr inbounds %struct.ShadSampleBuf, %struct.ShadSampleBuf* %27, i32 0, i32 2, !dbg !4262
  %28 = load i64*, i64** %zbuf, align 8, !dbg !4262
  %29 = load i32, i32* %ofs, align 4, !dbg !4263
  %idx.ext20 = sext i32 %29 to i64, !dbg !4264
  %add.ptr21 = getelementptr inbounds i64, i64* %28, i64 %idx.ext20, !dbg !4264
  %30 = bitcast i64* %add.ptr21 to i32**, !dbg !4265
  %31 = load i32*, i32** %30, align 8, !dbg !4265
  store i32* %31, i32** %rz, align 8, !dbg !4266
  %32 = load i8*, i8** %ct, align 8, !dbg !4267
  %33 = load i8, i8* %32, align 1, !dbg !4269
  %conv = zext i8 %33 to i32, !dbg !4269
  %cmp22 = icmp eq i32 %conv, 3, !dbg !4270
  br i1 %cmp22, label %if.then24, label %if.else37, !dbg !4271

if.then24:                                        ; preds = %if.end16
  %34 = load i32*, i32** %rz, align 8, !dbg !4272
  %35 = bitcast i32* %34 to i8*, !dbg !4274
  %36 = load i32, i32* %ys.addr, align 4, !dbg !4275
  %and = and i32 %36, 15, !dbg !4276
  %mul25 = mul nsw i32 48, %and, !dbg !4277
  %idx.ext26 = sext i32 %mul25 to i64, !dbg !4278
  %add.ptr27 = getelementptr inbounds i8, i8* %35, i64 %idx.ext26, !dbg !4278
  %37 = load i32, i32* %xs.addr, align 4, !dbg !4279
  %and28 = and i32 %37, 15, !dbg !4280
  %mul29 = mul nsw i32 3, %and28, !dbg !4281
  %idx.ext30 = sext i32 %mul29 to i64, !dbg !4282
  %add.ptr31 = getelementptr inbounds i8, i8* %add.ptr27, i64 %idx.ext30, !dbg !4282
  store i8* %add.ptr31, i8** %ct, align 8, !dbg !4283
  %38 = bitcast i32* %zsamp to i8*, !dbg !4284
  store i8* %38, i8** %cz, align 8, !dbg !4285
  %39 = load i8*, i8** %ct, align 8, !dbg !4286
  %arrayidx = getelementptr inbounds i8, i8* %39, i64 0, !dbg !4286
  %40 = load i8, i8* %arrayidx, align 1, !dbg !4286
  %41 = load i8*, i8** %cz, align 8, !dbg !4287
  %arrayidx32 = getelementptr inbounds i8, i8* %41, i64 3, !dbg !4287
  store i8 %40, i8* %arrayidx32, align 1, !dbg !4288
  %42 = load i8*, i8** %ct, align 8, !dbg !4289
  %arrayidx33 = getelementptr inbounds i8, i8* %42, i64 1, !dbg !4289
  %43 = load i8, i8* %arrayidx33, align 1, !dbg !4289
  %44 = load i8*, i8** %cz, align 8, !dbg !4290
  %arrayidx34 = getelementptr inbounds i8, i8* %44, i64 2, !dbg !4290
  store i8 %43, i8* %arrayidx34, align 1, !dbg !4291
  %45 = load i8*, i8** %ct, align 8, !dbg !4292
  %arrayidx35 = getelementptr inbounds i8, i8* %45, i64 2, !dbg !4292
  %46 = load i8, i8* %arrayidx35, align 1, !dbg !4292
  %47 = load i8*, i8** %cz, align 8, !dbg !4293
  %arrayidx36 = getelementptr inbounds i8, i8* %47, i64 1, !dbg !4293
  store i8 %46, i8* %arrayidx36, align 1, !dbg !4294
  br label %if.end72, !dbg !4295

if.else37:                                        ; preds = %if.end16
  %48 = load i8*, i8** %ct, align 8, !dbg !4296
  %49 = load i8, i8* %48, align 1, !dbg !4298
  %conv38 = zext i8 %49 to i32, !dbg !4298
  %cmp39 = icmp eq i32 %conv38, 2, !dbg !4299
  br i1 %cmp39, label %if.then41, label %if.else54, !dbg !4300

if.then41:                                        ; preds = %if.else37
  %50 = load i32*, i32** %rz, align 8, !dbg !4301
  %51 = bitcast i32* %50 to i8*, !dbg !4303
  store i8* %51, i8** %ct, align 8, !dbg !4304
  %52 = load i32, i32* %ys.addr, align 4, !dbg !4305
  %and42 = and i32 %52, 15, !dbg !4306
  %mul43 = mul nsw i32 32, %and42, !dbg !4307
  %add44 = add nsw i32 4, %mul43, !dbg !4308
  %53 = load i32, i32* %xs.addr, align 4, !dbg !4309
  %and45 = and i32 %53, 15, !dbg !4310
  %mul46 = mul nsw i32 2, %and45, !dbg !4311
  %add47 = add nsw i32 %add44, %mul46, !dbg !4312
  %54 = load i8*, i8** %ct, align 8, !dbg !4313
  %idx.ext48 = sext i32 %add47 to i64, !dbg !4313
  %add.ptr49 = getelementptr inbounds i8, i8* %54, i64 %idx.ext48, !dbg !4313
  store i8* %add.ptr49, i8** %ct, align 8, !dbg !4313
  %55 = load i32*, i32** %rz, align 8, !dbg !4314
  %56 = load i32, i32* %55, align 4, !dbg !4315
  store i32 %56, i32* %zsamp, align 4, !dbg !4316
  %57 = bitcast i32* %zsamp to i8*, !dbg !4317
  store i8* %57, i8** %cz, align 8, !dbg !4318
  %58 = load i8*, i8** %ct, align 8, !dbg !4319
  %arrayidx50 = getelementptr inbounds i8, i8* %58, i64 0, !dbg !4319
  %59 = load i8, i8* %arrayidx50, align 1, !dbg !4319
  %60 = load i8*, i8** %cz, align 8, !dbg !4320
  %arrayidx51 = getelementptr inbounds i8, i8* %60, i64 2, !dbg !4320
  store i8 %59, i8* %arrayidx51, align 1, !dbg !4321
  %61 = load i8*, i8** %ct, align 8, !dbg !4322
  %arrayidx52 = getelementptr inbounds i8, i8* %61, i64 1, !dbg !4322
  %62 = load i8, i8* %arrayidx52, align 1, !dbg !4322
  %63 = load i8*, i8** %cz, align 8, !dbg !4323
  %arrayidx53 = getelementptr inbounds i8, i8* %63, i64 1, !dbg !4323
  store i8 %62, i8* %arrayidx53, align 1, !dbg !4324
  br label %if.end71, !dbg !4325

if.else54:                                        ; preds = %if.else37
  %64 = load i8*, i8** %ct, align 8, !dbg !4326
  %65 = load i8, i8* %64, align 1, !dbg !4328
  %conv55 = zext i8 %65 to i32, !dbg !4328
  %cmp56 = icmp eq i32 %conv55, 1, !dbg !4329
  br i1 %cmp56, label %if.then58, label %if.else68, !dbg !4330

if.then58:                                        ; preds = %if.else54
  %66 = load i32*, i32** %rz, align 8, !dbg !4331
  %67 = bitcast i32* %66 to i8*, !dbg !4333
  store i8* %67, i8** %ct, align 8, !dbg !4334
  %68 = load i32, i32* %ys.addr, align 4, !dbg !4335
  %and59 = and i32 %68, 15, !dbg !4336
  %mul60 = mul nsw i32 16, %and59, !dbg !4337
  %add61 = add nsw i32 4, %mul60, !dbg !4338
  %69 = load i32, i32* %xs.addr, align 4, !dbg !4339
  %and62 = and i32 %69, 15, !dbg !4340
  %add63 = add nsw i32 %add61, %and62, !dbg !4341
  %70 = load i8*, i8** %ct, align 8, !dbg !4342
  %idx.ext64 = sext i32 %add63 to i64, !dbg !4342
  %add.ptr65 = getelementptr inbounds i8, i8* %70, i64 %idx.ext64, !dbg !4342
  store i8* %add.ptr65, i8** %ct, align 8, !dbg !4342
  %71 = load i32*, i32** %rz, align 8, !dbg !4343
  %72 = load i32, i32* %71, align 4, !dbg !4344
  store i32 %72, i32* %zsamp, align 4, !dbg !4345
  %73 = bitcast i32* %zsamp to i8*, !dbg !4346
  store i8* %73, i8** %cz, align 8, !dbg !4347
  %74 = load i8*, i8** %ct, align 8, !dbg !4348
  %arrayidx66 = getelementptr inbounds i8, i8* %74, i64 0, !dbg !4348
  %75 = load i8, i8* %arrayidx66, align 1, !dbg !4348
  %76 = load i8*, i8** %cz, align 8, !dbg !4349
  %arrayidx67 = getelementptr inbounds i8, i8* %76, i64 1, !dbg !4349
  store i8 %75, i8* %arrayidx67, align 1, !dbg !4350
  br label %if.end70, !dbg !4351

if.else68:                                        ; preds = %if.else54
  %77 = load i32*, i32** %rz, align 8, !dbg !4352
  %78 = ptrtoint i32* %77 to i64, !dbg !4352
  %conv69 = trunc i64 %78 to i32, !dbg !4352
  store i32 %conv69, i32* %zsamp, align 4, !dbg !4354
  br label %if.end70

if.end70:                                         ; preds = %if.else68, %if.then58
  br label %if.end71

if.end71:                                         ; preds = %if.end70, %if.then41
  br label %if.end72

if.end72:                                         ; preds = %if.end71, %if.then24
  %79 = load i32, i32* %zsamp, align 4, !dbg !4355
  %80 = load i32, i32* %zs.addr, align 4, !dbg !4357
  %cmp73 = icmp sgt i32 %79, %80, !dbg !4358
  br i1 %cmp73, label %if.then75, label %if.else76, !dbg !4359

if.then75:                                        ; preds = %if.end72
  store float 1.000000e+00, float* %retval, align 4, !dbg !4360
  br label %return, !dbg !4360

if.else76:                                        ; preds = %if.end72
  %81 = load i32, i32* %zs.addr, align 4, !dbg !4361
  %82 = load i32, i32* %bias.addr, align 4, !dbg !4363
  %add77 = add nsw i32 -2147483136, %82, !dbg !4364
  %cmp78 = icmp slt i32 %81, %add77, !dbg !4365
  br i1 %cmp78, label %if.then80, label %if.else81, !dbg !4366

if.then80:                                        ; preds = %if.else76
  store float 1.000000e+00, float* %retval, align 4, !dbg !4367
  br label %return, !dbg !4367

if.else81:                                        ; preds = %if.else76
  %83 = load i32, i32* %zsamp, align 4, !dbg !4368
  %84 = load i32, i32* %zs.addr, align 4, !dbg !4370
  %85 = load i32, i32* %bias.addr, align 4, !dbg !4371
  %sub82 = sub nsw i32 %84, %85, !dbg !4372
  %cmp83 = icmp slt i32 %83, %sub82, !dbg !4373
  br i1 %cmp83, label %if.then85, label %if.else86, !dbg !4374

if.then85:                                        ; preds = %if.else81
  store float 0.000000e+00, float* %retval, align 4, !dbg !4375
  br label %return, !dbg !4375

if.else86:                                        ; preds = %if.else81
  %86 = load i32, i32* %zs.addr, align 4, !dbg !4376
  %87 = load i32, i32* %zsamp, align 4, !dbg !4378
  %sub87 = sub nsw i32 %86, %87, !dbg !4379
  %conv88 = sitofp i32 %sub87 to float, !dbg !4380
  %88 = load i32, i32* %bias.addr, align 4, !dbg !4381
  %conv89 = sitofp i32 %88 to float, !dbg !4382
  %div = fdiv float %conv88, %conv89, !dbg !4383
  store float %div, float* %temp, align 4, !dbg !4384
  %89 = load float, float* %temp, align 4, !dbg !4385
  %90 = load float, float* %temp, align 4, !dbg !4386
  %mul90 = fmul float %89, %90, !dbg !4387
  %sub91 = fsub float 1.000000e+00, %mul90, !dbg !4388
  store float %sub91, float* %retval, align 4, !dbg !4389
  br label %return, !dbg !4389

return:                                           ; preds = %if.else86, %if.then85, %if.then80, %if.then75, %if.then15
  %91 = load float, float* %retval, align 4, !dbg !4390
  ret float %91, !dbg !4390
}

; Function Attrs: noinline nounwind uwtable
define internal void @add_v3_v3v3(float* %r, float* %a, float* %b) #0 !dbg !4391 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !4395, metadata !DIExpression()), !dbg !4396
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !4397, metadata !DIExpression()), !dbg !4398
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !4399, metadata !DIExpression()), !dbg !4400
  %0 = load float*, float** %a.addr, align 8, !dbg !4401
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !4401
  %1 = load float, float* %arrayidx, align 4, !dbg !4401
  %2 = load float*, float** %b.addr, align 8, !dbg !4402
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !4402
  %3 = load float, float* %arrayidx1, align 4, !dbg !4402
  %add = fadd float %1, %3, !dbg !4403
  %4 = load float*, float** %r.addr, align 8, !dbg !4404
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 0, !dbg !4404
  store float %add, float* %arrayidx2, align 4, !dbg !4405
  %5 = load float*, float** %a.addr, align 8, !dbg !4406
  %arrayidx3 = getelementptr inbounds float, float* %5, i64 1, !dbg !4406
  %6 = load float, float* %arrayidx3, align 4, !dbg !4406
  %7 = load float*, float** %b.addr, align 8, !dbg !4407
  %arrayidx4 = getelementptr inbounds float, float* %7, i64 1, !dbg !4407
  %8 = load float, float* %arrayidx4, align 4, !dbg !4407
  %add5 = fadd float %6, %8, !dbg !4408
  %9 = load float*, float** %r.addr, align 8, !dbg !4409
  %arrayidx6 = getelementptr inbounds float, float* %9, i64 1, !dbg !4409
  store float %add5, float* %arrayidx6, align 4, !dbg !4410
  %10 = load float*, float** %a.addr, align 8, !dbg !4411
  %arrayidx7 = getelementptr inbounds float, float* %10, i64 2, !dbg !4411
  %11 = load float, float* %arrayidx7, align 4, !dbg !4411
  %12 = load float*, float** %b.addr, align 8, !dbg !4412
  %arrayidx8 = getelementptr inbounds float, float* %12, i64 2, !dbg !4412
  %13 = load float, float* %arrayidx8, align 4, !dbg !4412
  %add9 = fadd float %11, %13, !dbg !4413
  %14 = load float*, float** %r.addr, align 8, !dbg !4414
  %arrayidx10 = getelementptr inbounds float, float* %14, i64 2, !dbg !4414
  store float %add9, float* %arrayidx10, align 4, !dbg !4415
  ret void, !dbg !4416
}

; Function Attrs: nounwind readnone speculatable willreturn
declare float @llvm.fabs.f32(float) #1

; Function Attrs: noinline nounwind uwtable
define internal i32 @firstreadshadbuf(%struct.ShadBuf* %shb, %struct.ShadSampleBuf* %shsample, i32** %rz, i32 %xs, i32 %ys, i32 %nr) #0 !dbg !4417 {
entry:
  %retval = alloca i32, align 4
  %shb.addr = alloca %struct.ShadBuf*, align 8
  %shsample.addr = alloca %struct.ShadSampleBuf*, align 8
  %rz.addr = alloca i32**, align 8
  %xs.addr = alloca i32, align 4
  %ys.addr = alloca i32, align 4
  %nr.addr = alloca i32, align 4
  %ofs = alloca i32, align 4
  %ct = alloca i8*, align 8
  store %struct.ShadBuf* %shb, %struct.ShadBuf** %shb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ShadBuf** %shb.addr, metadata !4420, metadata !DIExpression()), !dbg !4421
  store %struct.ShadSampleBuf* %shsample, %struct.ShadSampleBuf** %shsample.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ShadSampleBuf** %shsample.addr, metadata !4422, metadata !DIExpression()), !dbg !4423
  store i32** %rz, i32*** %rz.addr, align 8
  call void @llvm.dbg.declare(metadata i32*** %rz.addr, metadata !4424, metadata !DIExpression()), !dbg !4425
  store i32 %xs, i32* %xs.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %xs.addr, metadata !4426, metadata !DIExpression()), !dbg !4427
  store i32 %ys, i32* %ys.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ys.addr, metadata !4428, metadata !DIExpression()), !dbg !4429
  store i32 %nr, i32* %nr.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %nr.addr, metadata !4430, metadata !DIExpression()), !dbg !4431
  call void @llvm.dbg.declare(metadata i32* %ofs, metadata !4432, metadata !DIExpression()), !dbg !4433
  call void @llvm.dbg.declare(metadata i8** %ct, metadata !4434, metadata !DIExpression()), !dbg !4435
  %0 = load %struct.ShadSampleBuf*, %struct.ShadSampleBuf** %shsample.addr, align 8, !dbg !4436
  %deepbuf = getelementptr inbounds %struct.ShadSampleBuf, %struct.ShadSampleBuf* %0, i32 0, i32 4, !dbg !4438
  %1 = load %struct.DeepSample**, %struct.DeepSample*** %deepbuf, align 8, !dbg !4438
  %tobool = icmp ne %struct.DeepSample** %1, null, !dbg !4436
  br i1 %tobool, label %if.then, label %if.end, !dbg !4439

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !4440
  br label %return, !dbg !4440

if.end:                                           ; preds = %entry
  %2 = load i32, i32* %xs.addr, align 4, !dbg !4441
  %cmp = icmp slt i32 %2, 0, !dbg !4443
  br i1 %cmp, label %if.then1, label %if.else, !dbg !4444

if.then1:                                         ; preds = %if.end
  store i32 0, i32* %xs.addr, align 4, !dbg !4445
  br label %if.end6, !dbg !4446

if.else:                                          ; preds = %if.end
  %3 = load i32, i32* %xs.addr, align 4, !dbg !4447
  %4 = load %struct.ShadBuf*, %struct.ShadBuf** %shb.addr, align 8, !dbg !4449
  %size = getelementptr inbounds %struct.ShadBuf, %struct.ShadBuf* %4, i32 0, i32 14, !dbg !4450
  %5 = load i32, i32* %size, align 8, !dbg !4450
  %cmp2 = icmp sge i32 %3, %5, !dbg !4451
  br i1 %cmp2, label %if.then3, label %if.end5, !dbg !4452

if.then3:                                         ; preds = %if.else
  %6 = load %struct.ShadBuf*, %struct.ShadBuf** %shb.addr, align 8, !dbg !4453
  %size4 = getelementptr inbounds %struct.ShadBuf, %struct.ShadBuf* %6, i32 0, i32 14, !dbg !4454
  %7 = load i32, i32* %size4, align 8, !dbg !4454
  %sub = sub nsw i32 %7, 1, !dbg !4455
  store i32 %sub, i32* %xs.addr, align 4, !dbg !4456
  br label %if.end5, !dbg !4457

if.end5:                                          ; preds = %if.then3, %if.else
  br label %if.end6

if.end6:                                          ; preds = %if.end5, %if.then1
  %8 = load i32, i32* %ys.addr, align 4, !dbg !4458
  %cmp7 = icmp slt i32 %8, 0, !dbg !4460
  br i1 %cmp7, label %if.then8, label %if.else9, !dbg !4461

if.then8:                                         ; preds = %if.end6
  store i32 0, i32* %ys.addr, align 4, !dbg !4462
  br label %if.end16, !dbg !4463

if.else9:                                         ; preds = %if.end6
  %9 = load i32, i32* %ys.addr, align 4, !dbg !4464
  %10 = load %struct.ShadBuf*, %struct.ShadBuf** %shb.addr, align 8, !dbg !4466
  %size10 = getelementptr inbounds %struct.ShadBuf, %struct.ShadBuf* %10, i32 0, i32 14, !dbg !4467
  %11 = load i32, i32* %size10, align 8, !dbg !4467
  %cmp11 = icmp sge i32 %9, %11, !dbg !4468
  br i1 %cmp11, label %if.then12, label %if.end15, !dbg !4469

if.then12:                                        ; preds = %if.else9
  %12 = load %struct.ShadBuf*, %struct.ShadBuf** %shb.addr, align 8, !dbg !4470
  %size13 = getelementptr inbounds %struct.ShadBuf, %struct.ShadBuf* %12, i32 0, i32 14, !dbg !4471
  %13 = load i32, i32* %size13, align 8, !dbg !4471
  %sub14 = sub nsw i32 %13, 1, !dbg !4472
  store i32 %sub14, i32* %ys.addr, align 4, !dbg !4473
  br label %if.end15, !dbg !4474

if.end15:                                         ; preds = %if.then12, %if.else9
  br label %if.end16

if.end16:                                         ; preds = %if.end15, %if.then8
  %14 = load i32, i32* %ys.addr, align 4, !dbg !4475
  %shr = ashr i32 %14, 4, !dbg !4476
  %15 = load %struct.ShadBuf*, %struct.ShadBuf** %shb.addr, align 8, !dbg !4477
  %size17 = getelementptr inbounds %struct.ShadBuf, %struct.ShadBuf* %15, i32 0, i32 14, !dbg !4478
  %16 = load i32, i32* %size17, align 8, !dbg !4478
  %shr18 = ashr i32 %16, 4, !dbg !4479
  %mul = mul nsw i32 %shr, %shr18, !dbg !4480
  %17 = load i32, i32* %xs.addr, align 4, !dbg !4481
  %shr19 = ashr i32 %17, 4, !dbg !4482
  %add = add nsw i32 %mul, %shr19, !dbg !4483
  store i32 %add, i32* %ofs, align 4, !dbg !4484
  %18 = load %struct.ShadSampleBuf*, %struct.ShadSampleBuf** %shsample.addr, align 8, !dbg !4485
  %cbuf = getelementptr inbounds %struct.ShadSampleBuf, %struct.ShadSampleBuf* %18, i32 0, i32 3, !dbg !4486
  %19 = load i8*, i8** %cbuf, align 8, !dbg !4486
  %20 = load i32, i32* %ofs, align 4, !dbg !4487
  %idx.ext = sext i32 %20 to i64, !dbg !4488
  %add.ptr = getelementptr inbounds i8, i8* %19, i64 %idx.ext, !dbg !4488
  store i8* %add.ptr, i8** %ct, align 8, !dbg !4489
  %21 = load i8*, i8** %ct, align 8, !dbg !4490
  %22 = load i8, i8* %21, align 1, !dbg !4492
  %conv = zext i8 %22 to i32, !dbg !4492
  %cmp20 = icmp eq i32 %conv, 0, !dbg !4493
  br i1 %cmp20, label %if.then22, label %if.end37, !dbg !4494

if.then22:                                        ; preds = %if.end16
  %23 = load i32, i32* %nr.addr, align 4, !dbg !4495
  %cmp23 = icmp eq i32 %23, 0, !dbg !4498
  br i1 %cmp23, label %if.then25, label %if.else28, !dbg !4499

if.then25:                                        ; preds = %if.then22
  %24 = load %struct.ShadSampleBuf*, %struct.ShadSampleBuf** %shsample.addr, align 8, !dbg !4500
  %zbuf = getelementptr inbounds %struct.ShadSampleBuf, %struct.ShadSampleBuf* %24, i32 0, i32 2, !dbg !4502
  %25 = load i64*, i64** %zbuf, align 8, !dbg !4502
  %26 = load i32, i32* %ofs, align 4, !dbg !4503
  %idx.ext26 = sext i32 %26 to i64, !dbg !4504
  %add.ptr27 = getelementptr inbounds i64, i64* %25, i64 %idx.ext26, !dbg !4504
  %27 = bitcast i64* %add.ptr27 to i32**, !dbg !4505
  %28 = load i32*, i32** %27, align 8, !dbg !4505
  %29 = load i32**, i32*** %rz.addr, align 8, !dbg !4506
  store i32* %28, i32** %29, align 8, !dbg !4507
  store i32 1, i32* %retval, align 4, !dbg !4508
  br label %return, !dbg !4508

if.else28:                                        ; preds = %if.then22
  %30 = load i32**, i32*** %rz.addr, align 8, !dbg !4509
  %31 = load i32*, i32** %30, align 8, !dbg !4511
  %32 = load %struct.ShadSampleBuf*, %struct.ShadSampleBuf** %shsample.addr, align 8, !dbg !4512
  %zbuf29 = getelementptr inbounds %struct.ShadSampleBuf, %struct.ShadSampleBuf* %32, i32 0, i32 2, !dbg !4513
  %33 = load i64*, i64** %zbuf29, align 8, !dbg !4513
  %34 = load i32, i32* %ofs, align 4, !dbg !4514
  %idx.ext30 = sext i32 %34 to i64, !dbg !4515
  %add.ptr31 = getelementptr inbounds i64, i64* %33, i64 %idx.ext30, !dbg !4515
  %35 = bitcast i64* %add.ptr31 to i32**, !dbg !4516
  %36 = load i32*, i32** %35, align 8, !dbg !4516
  %cmp32 = icmp ne i32* %31, %36, !dbg !4517
  br i1 %cmp32, label %if.then34, label %if.end35, !dbg !4518

if.then34:                                        ; preds = %if.else28
  store i32 0, i32* %retval, align 4, !dbg !4519
  br label %return, !dbg !4519

if.end35:                                         ; preds = %if.else28
  br label %if.end36

if.end36:                                         ; preds = %if.end35
  store i32 1, i32* %retval, align 4, !dbg !4520
  br label %return, !dbg !4520

if.end37:                                         ; preds = %if.end16
  store i32 0, i32* %retval, align 4, !dbg !4521
  br label %return, !dbg !4521

return:                                           ; preds = %if.end37, %if.end36, %if.then34, %if.then25, %if.then
  %37 = load i32, i32* %retval, align 4, !dbg !4522
  ret i32 %37, !dbg !4522
}

; Function Attrs: noinline nounwind uwtable
define dso_local float @shadow_halo(%struct.LampRen* %lar, float* %p1, float* %p2) #0 !dbg !4523 {
entry:
  %retval = alloca float, align 4
  %lar.addr = alloca %struct.LampRen*, align 8
  %p1.addr = alloca float*, align 8
  %p2.addr = alloca float*, align 8
  %shb = alloca %struct.ShadBuf*, align 8
  %shsample = alloca %struct.ShadSampleBuf*, align 8
  %co = alloca [4 x float], align 16
  %siz = alloca float, align 4
  %lambda = alloca float, align 4
  %lambda_o = alloca float, align 4
  %lambda_x = alloca float, align 4
  %lambda_y = alloca float, align 4
  %ldx = alloca float, align 4
  %ldy = alloca float, align 4
  %zf = alloca float, align 4
  %xf1 = alloca float, align 4
  %yf1 = alloca float, align 4
  %zf1 = alloca float, align 4
  %xf2 = alloca float, align 4
  %yf2 = alloca float, align 4
  %zf2 = alloca float, align 4
  %count = alloca float, align 4
  %lightcount = alloca float, align 4
  %x = alloca i32, align 4
  %y = alloca i32, align 4
  %z = alloca i32, align 4
  %xs1 = alloca i32, align 4
  %ys1 = alloca i32, align 4
  %dx = alloca i32, align 4
  %dy = alloca i32, align 4
  store %struct.LampRen* %lar, %struct.LampRen** %lar.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.LampRen** %lar.addr, metadata !4526, metadata !DIExpression()), !dbg !4527
  store float* %p1, float** %p1.addr, align 8
  call void @llvm.dbg.declare(metadata float** %p1.addr, metadata !4528, metadata !DIExpression()), !dbg !4529
  store float* %p2, float** %p2.addr, align 8
  call void @llvm.dbg.declare(metadata float** %p2.addr, metadata !4530, metadata !DIExpression()), !dbg !4531
  call void @llvm.dbg.declare(metadata %struct.ShadBuf** %shb, metadata !4532, metadata !DIExpression()), !dbg !4533
  %0 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !4534
  %shb1 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %0, i32 0, i32 57, !dbg !4535
  %1 = load %struct.ShadBuf*, %struct.ShadBuf** %shb1, align 8, !dbg !4535
  store %struct.ShadBuf* %1, %struct.ShadBuf** %shb, align 8, !dbg !4533
  call void @llvm.dbg.declare(metadata %struct.ShadSampleBuf** %shsample, metadata !4536, metadata !DIExpression()), !dbg !4537
  call void @llvm.dbg.declare(metadata [4 x float]* %co, metadata !4538, metadata !DIExpression()), !dbg !4539
  call void @llvm.dbg.declare(metadata float* %siz, metadata !4540, metadata !DIExpression()), !dbg !4541
  call void @llvm.dbg.declare(metadata float* %lambda, metadata !4542, metadata !DIExpression()), !dbg !4543
  call void @llvm.dbg.declare(metadata float* %lambda_o, metadata !4544, metadata !DIExpression()), !dbg !4545
  call void @llvm.dbg.declare(metadata float* %lambda_x, metadata !4546, metadata !DIExpression()), !dbg !4547
  call void @llvm.dbg.declare(metadata float* %lambda_y, metadata !4548, metadata !DIExpression()), !dbg !4549
  call void @llvm.dbg.declare(metadata float* %ldx, metadata !4550, metadata !DIExpression()), !dbg !4551
  call void @llvm.dbg.declare(metadata float* %ldy, metadata !4552, metadata !DIExpression()), !dbg !4553
  call void @llvm.dbg.declare(metadata float* %zf, metadata !4554, metadata !DIExpression()), !dbg !4555
  call void @llvm.dbg.declare(metadata float* %xf1, metadata !4556, metadata !DIExpression()), !dbg !4557
  call void @llvm.dbg.declare(metadata float* %yf1, metadata !4558, metadata !DIExpression()), !dbg !4559
  call void @llvm.dbg.declare(metadata float* %zf1, metadata !4560, metadata !DIExpression()), !dbg !4561
  call void @llvm.dbg.declare(metadata float* %xf2, metadata !4562, metadata !DIExpression()), !dbg !4563
  call void @llvm.dbg.declare(metadata float* %yf2, metadata !4564, metadata !DIExpression()), !dbg !4565
  call void @llvm.dbg.declare(metadata float* %zf2, metadata !4566, metadata !DIExpression()), !dbg !4567
  call void @llvm.dbg.declare(metadata float* %count, metadata !4568, metadata !DIExpression()), !dbg !4569
  call void @llvm.dbg.declare(metadata float* %lightcount, metadata !4570, metadata !DIExpression()), !dbg !4571
  call void @llvm.dbg.declare(metadata i32* %x, metadata !4572, metadata !DIExpression()), !dbg !4573
  call void @llvm.dbg.declare(metadata i32* %y, metadata !4574, metadata !DIExpression()), !dbg !4575
  call void @llvm.dbg.declare(metadata i32* %z, metadata !4576, metadata !DIExpression()), !dbg !4577
  call void @llvm.dbg.declare(metadata i32* %xs1, metadata !4578, metadata !DIExpression()), !dbg !4579
  call void @llvm.dbg.declare(metadata i32* %ys1, metadata !4580, metadata !DIExpression()), !dbg !4581
  call void @llvm.dbg.declare(metadata i32* %dx, metadata !4582, metadata !DIExpression()), !dbg !4583
  store i32 0, i32* %dx, align 4, !dbg !4583
  call void @llvm.dbg.declare(metadata i32* %dy, metadata !4584, metadata !DIExpression()), !dbg !4585
  store i32 0, i32* %dy, align 4, !dbg !4585
  %2 = load %struct.ShadBuf*, %struct.ShadBuf** %shb, align 8, !dbg !4586
  %size = getelementptr inbounds %struct.ShadBuf, %struct.ShadBuf* %2, i32 0, i32 14, !dbg !4587
  %3 = load i32, i32* %size, align 8, !dbg !4587
  %conv = sitofp i32 %3 to float, !dbg !4588
  %mul = fmul float 5.000000e-01, %conv, !dbg !4589
  store float %mul, float* %siz, align 4, !dbg !4590
  %4 = load float*, float** %p1.addr, align 8, !dbg !4591
  %arrayidx = getelementptr inbounds float, float* %4, i64 0, !dbg !4591
  %5 = load float, float* %arrayidx, align 4, !dbg !4591
  %arrayidx2 = getelementptr inbounds [4 x float], [4 x float]* %co, i64 0, i64 0, !dbg !4592
  store float %5, float* %arrayidx2, align 16, !dbg !4593
  %6 = load float*, float** %p1.addr, align 8, !dbg !4594
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 1, !dbg !4594
  %7 = load float, float* %arrayidx3, align 4, !dbg !4594
  %arrayidx4 = getelementptr inbounds [4 x float], [4 x float]* %co, i64 0, i64 1, !dbg !4595
  store float %7, float* %arrayidx4, align 4, !dbg !4596
  %8 = load float*, float** %p1.addr, align 8, !dbg !4597
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 2, !dbg !4597
  %9 = load float, float* %arrayidx5, align 4, !dbg !4597
  %10 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !4598
  %sh_zfac = getelementptr inbounds %struct.LampRen, %struct.LampRen* %10, i32 0, i32 62, !dbg !4599
  %11 = load float, float* %sh_zfac, align 4, !dbg !4599
  %div = fdiv float %9, %11, !dbg !4600
  %arrayidx6 = getelementptr inbounds [4 x float], [4 x float]* %co, i64 0, i64 2, !dbg !4601
  store float %div, float* %arrayidx6, align 8, !dbg !4602
  %arrayidx7 = getelementptr inbounds [4 x float], [4 x float]* %co, i64 0, i64 3, !dbg !4603
  store float 1.000000e+00, float* %arrayidx7, align 4, !dbg !4604
  %12 = load %struct.ShadBuf*, %struct.ShadBuf** %shb, align 8, !dbg !4605
  %winmat = getelementptr inbounds %struct.ShadBuf, %struct.ShadBuf* %12, i32 0, i32 5, !dbg !4606
  %arraydecay = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %winmat, i64 0, i64 0, !dbg !4605
  %arraydecay8 = getelementptr inbounds [4 x float], [4 x float]* %co, i64 0, i64 0, !dbg !4607
  call void @mul_m4_v4([4 x float]* %arraydecay, float* %arraydecay8), !dbg !4608
  %13 = load float, float* %siz, align 4, !dbg !4609
  %arrayidx9 = getelementptr inbounds [4 x float], [4 x float]* %co, i64 0, i64 0, !dbg !4610
  %14 = load float, float* %arrayidx9, align 16, !dbg !4610
  %arrayidx10 = getelementptr inbounds [4 x float], [4 x float]* %co, i64 0, i64 3, !dbg !4611
  %15 = load float, float* %arrayidx10, align 4, !dbg !4611
  %div11 = fdiv float %14, %15, !dbg !4612
  %add = fadd float 1.000000e+00, %div11, !dbg !4613
  %mul12 = fmul float %13, %add, !dbg !4614
  store float %mul12, float* %xf1, align 4, !dbg !4615
  %16 = load float, float* %siz, align 4, !dbg !4616
  %arrayidx13 = getelementptr inbounds [4 x float], [4 x float]* %co, i64 0, i64 1, !dbg !4617
  %17 = load float, float* %arrayidx13, align 4, !dbg !4617
  %arrayidx14 = getelementptr inbounds [4 x float], [4 x float]* %co, i64 0, i64 3, !dbg !4618
  %18 = load float, float* %arrayidx14, align 4, !dbg !4618
  %div15 = fdiv float %17, %18, !dbg !4619
  %add16 = fadd float 1.000000e+00, %div15, !dbg !4620
  %mul17 = fmul float %16, %add16, !dbg !4621
  store float %mul17, float* %yf1, align 4, !dbg !4622
  %arrayidx18 = getelementptr inbounds [4 x float], [4 x float]* %co, i64 0, i64 2, !dbg !4623
  %19 = load float, float* %arrayidx18, align 8, !dbg !4623
  %arrayidx19 = getelementptr inbounds [4 x float], [4 x float]* %co, i64 0, i64 3, !dbg !4624
  %20 = load float, float* %arrayidx19, align 4, !dbg !4624
  %div20 = fdiv float %19, %20, !dbg !4625
  store float %div20, float* %zf1, align 4, !dbg !4626
  %21 = load float*, float** %p2.addr, align 8, !dbg !4627
  %arrayidx21 = getelementptr inbounds float, float* %21, i64 0, !dbg !4627
  %22 = load float, float* %arrayidx21, align 4, !dbg !4627
  %arrayidx22 = getelementptr inbounds [4 x float], [4 x float]* %co, i64 0, i64 0, !dbg !4628
  store float %22, float* %arrayidx22, align 16, !dbg !4629
  %23 = load float*, float** %p2.addr, align 8, !dbg !4630
  %arrayidx23 = getelementptr inbounds float, float* %23, i64 1, !dbg !4630
  %24 = load float, float* %arrayidx23, align 4, !dbg !4630
  %arrayidx24 = getelementptr inbounds [4 x float], [4 x float]* %co, i64 0, i64 1, !dbg !4631
  store float %24, float* %arrayidx24, align 4, !dbg !4632
  %25 = load float*, float** %p2.addr, align 8, !dbg !4633
  %arrayidx25 = getelementptr inbounds float, float* %25, i64 2, !dbg !4633
  %26 = load float, float* %arrayidx25, align 4, !dbg !4633
  %27 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !4634
  %sh_zfac26 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %27, i32 0, i32 62, !dbg !4635
  %28 = load float, float* %sh_zfac26, align 4, !dbg !4635
  %div27 = fdiv float %26, %28, !dbg !4636
  %arrayidx28 = getelementptr inbounds [4 x float], [4 x float]* %co, i64 0, i64 2, !dbg !4637
  store float %div27, float* %arrayidx28, align 8, !dbg !4638
  %arrayidx29 = getelementptr inbounds [4 x float], [4 x float]* %co, i64 0, i64 3, !dbg !4639
  store float 1.000000e+00, float* %arrayidx29, align 4, !dbg !4640
  %29 = load %struct.ShadBuf*, %struct.ShadBuf** %shb, align 8, !dbg !4641
  %winmat30 = getelementptr inbounds %struct.ShadBuf, %struct.ShadBuf* %29, i32 0, i32 5, !dbg !4642
  %arraydecay31 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %winmat30, i64 0, i64 0, !dbg !4641
  %arraydecay32 = getelementptr inbounds [4 x float], [4 x float]* %co, i64 0, i64 0, !dbg !4643
  call void @mul_m4_v4([4 x float]* %arraydecay31, float* %arraydecay32), !dbg !4644
  %30 = load float, float* %siz, align 4, !dbg !4645
  %arrayidx33 = getelementptr inbounds [4 x float], [4 x float]* %co, i64 0, i64 0, !dbg !4646
  %31 = load float, float* %arrayidx33, align 16, !dbg !4646
  %arrayidx34 = getelementptr inbounds [4 x float], [4 x float]* %co, i64 0, i64 3, !dbg !4647
  %32 = load float, float* %arrayidx34, align 4, !dbg !4647
  %div35 = fdiv float %31, %32, !dbg !4648
  %add36 = fadd float 1.000000e+00, %div35, !dbg !4649
  %mul37 = fmul float %30, %add36, !dbg !4650
  store float %mul37, float* %xf2, align 4, !dbg !4651
  %33 = load float, float* %siz, align 4, !dbg !4652
  %arrayidx38 = getelementptr inbounds [4 x float], [4 x float]* %co, i64 0, i64 1, !dbg !4653
  %34 = load float, float* %arrayidx38, align 4, !dbg !4653
  %arrayidx39 = getelementptr inbounds [4 x float], [4 x float]* %co, i64 0, i64 3, !dbg !4654
  %35 = load float, float* %arrayidx39, align 4, !dbg !4654
  %div40 = fdiv float %34, %35, !dbg !4655
  %add41 = fadd float 1.000000e+00, %div40, !dbg !4656
  %mul42 = fmul float %33, %add41, !dbg !4657
  store float %mul42, float* %yf2, align 4, !dbg !4658
  %arrayidx43 = getelementptr inbounds [4 x float], [4 x float]* %co, i64 0, i64 2, !dbg !4659
  %36 = load float, float* %arrayidx43, align 8, !dbg !4659
  %arrayidx44 = getelementptr inbounds [4 x float], [4 x float]* %co, i64 0, i64 3, !dbg !4660
  %37 = load float, float* %arrayidx44, align 4, !dbg !4660
  %div45 = fdiv float %36, %37, !dbg !4661
  store float %div45, float* %zf2, align 4, !dbg !4662
  %38 = load float, float* %xf1, align 4, !dbg !4663
  %conv46 = fptosi float %38 to i32, !dbg !4664
  store i32 %conv46, i32* %xs1, align 4, !dbg !4665
  %39 = load float, float* %yf1, align 4, !dbg !4666
  %conv47 = fptosi float %39 to i32, !dbg !4667
  store i32 %conv47, i32* %ys1, align 4, !dbg !4668
  %40 = load float, float* %xf1, align 4, !dbg !4669
  %41 = load float, float* %xf2, align 4, !dbg !4671
  %cmp = fcmp une float %40, %41, !dbg !4672
  br i1 %cmp, label %if.then, label %if.else76, !dbg !4673

if.then:                                          ; preds = %entry
  %42 = load float, float* %xf2, align 4, !dbg !4674
  %43 = load float, float* %xf1, align 4, !dbg !4677
  %sub = fsub float %42, %43, !dbg !4678
  %cmp49 = fcmp ogt float %sub, 0.000000e+00, !dbg !4679
  br i1 %cmp49, label %if.then51, label %if.else, !dbg !4680

if.then51:                                        ; preds = %if.then
  %44 = load float, float* %xf1, align 4, !dbg !4681
  %45 = load i32, i32* %xs1, align 4, !dbg !4683
  %conv52 = sitofp i32 %45 to float, !dbg !4683
  %sub53 = fsub float %44, %conv52, !dbg !4684
  %sub54 = fsub float %sub53, 1.000000e+00, !dbg !4685
  %46 = load float, float* %xf1, align 4, !dbg !4686
  %47 = load float, float* %xf2, align 4, !dbg !4687
  %sub55 = fsub float %46, %47, !dbg !4688
  %div56 = fdiv float %sub54, %sub55, !dbg !4689
  store float %div56, float* %lambda_x, align 4, !dbg !4690
  %48 = load %struct.ShadBuf*, %struct.ShadBuf** %shb, align 8, !dbg !4691
  %shadhalostep = getelementptr inbounds %struct.ShadBuf, %struct.ShadBuf* %48, i32 0, i32 1, !dbg !4692
  %49 = load i16, i16* %shadhalostep, align 2, !dbg !4692
  %conv57 = sext i16 %49 to i32, !dbg !4691
  %sub58 = sub nsw i32 0, %conv57, !dbg !4693
  %conv59 = sitofp i32 %sub58 to float, !dbg !4693
  %50 = load float, float* %xf1, align 4, !dbg !4694
  %51 = load float, float* %xf2, align 4, !dbg !4695
  %sub60 = fsub float %50, %51, !dbg !4696
  %div61 = fdiv float %conv59, %sub60, !dbg !4697
  store float %div61, float* %ldx, align 4, !dbg !4698
  %52 = load %struct.ShadBuf*, %struct.ShadBuf** %shb, align 8, !dbg !4699
  %shadhalostep62 = getelementptr inbounds %struct.ShadBuf, %struct.ShadBuf* %52, i32 0, i32 1, !dbg !4700
  %53 = load i16, i16* %shadhalostep62, align 2, !dbg !4700
  %conv63 = sext i16 %53 to i32, !dbg !4699
  store i32 %conv63, i32* %dx, align 4, !dbg !4701
  br label %if.end, !dbg !4702

if.else:                                          ; preds = %if.then
  %54 = load float, float* %xf1, align 4, !dbg !4703
  %55 = load i32, i32* %xs1, align 4, !dbg !4705
  %conv64 = sitofp i32 %55 to float, !dbg !4705
  %sub65 = fsub float %54, %conv64, !dbg !4706
  %56 = load float, float* %xf1, align 4, !dbg !4707
  %57 = load float, float* %xf2, align 4, !dbg !4708
  %sub66 = fsub float %56, %57, !dbg !4709
  %div67 = fdiv float %sub65, %sub66, !dbg !4710
  store float %div67, float* %lambda_x, align 4, !dbg !4711
  %58 = load %struct.ShadBuf*, %struct.ShadBuf** %shb, align 8, !dbg !4712
  %shadhalostep68 = getelementptr inbounds %struct.ShadBuf, %struct.ShadBuf* %58, i32 0, i32 1, !dbg !4713
  %59 = load i16, i16* %shadhalostep68, align 2, !dbg !4713
  %conv69 = sext i16 %59 to i32, !dbg !4712
  %conv70 = sitofp i32 %conv69 to float, !dbg !4712
  %60 = load float, float* %xf1, align 4, !dbg !4714
  %61 = load float, float* %xf2, align 4, !dbg !4715
  %sub71 = fsub float %60, %61, !dbg !4716
  %div72 = fdiv float %conv70, %sub71, !dbg !4717
  store float %div72, float* %ldx, align 4, !dbg !4718
  %62 = load %struct.ShadBuf*, %struct.ShadBuf** %shb, align 8, !dbg !4719
  %shadhalostep73 = getelementptr inbounds %struct.ShadBuf, %struct.ShadBuf* %62, i32 0, i32 1, !dbg !4720
  %63 = load i16, i16* %shadhalostep73, align 2, !dbg !4720
  %conv74 = sext i16 %63 to i32, !dbg !4719
  %sub75 = sub nsw i32 0, %conv74, !dbg !4721
  store i32 %sub75, i32* %dx, align 4, !dbg !4722
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then51
  br label %if.end77, !dbg !4723

if.else76:                                        ; preds = %entry
  store float 1.000000e+00, float* %lambda_x, align 4, !dbg !4724
  store float 0.000000e+00, float* %ldx, align 4, !dbg !4726
  br label %if.end77

if.end77:                                         ; preds = %if.else76, %if.end
  %64 = load float, float* %yf1, align 4, !dbg !4727
  %65 = load float, float* %yf2, align 4, !dbg !4729
  %cmp78 = fcmp une float %64, %65, !dbg !4730
  br i1 %cmp78, label %if.then80, label %if.else112, !dbg !4731

if.then80:                                        ; preds = %if.end77
  %66 = load float, float* %yf2, align 4, !dbg !4732
  %67 = load float, float* %yf1, align 4, !dbg !4735
  %sub81 = fsub float %66, %67, !dbg !4736
  %cmp82 = fcmp ogt float %sub81, 0.000000e+00, !dbg !4737
  br i1 %cmp82, label %if.then84, label %if.else98, !dbg !4738

if.then84:                                        ; preds = %if.then80
  %68 = load float, float* %yf1, align 4, !dbg !4739
  %69 = load i32, i32* %ys1, align 4, !dbg !4741
  %conv85 = sitofp i32 %69 to float, !dbg !4741
  %sub86 = fsub float %68, %conv85, !dbg !4742
  %sub87 = fsub float %sub86, 1.000000e+00, !dbg !4743
  %70 = load float, float* %yf1, align 4, !dbg !4744
  %71 = load float, float* %yf2, align 4, !dbg !4745
  %sub88 = fsub float %70, %71, !dbg !4746
  %div89 = fdiv float %sub87, %sub88, !dbg !4747
  store float %div89, float* %lambda_y, align 4, !dbg !4748
  %72 = load %struct.ShadBuf*, %struct.ShadBuf** %shb, align 8, !dbg !4749
  %shadhalostep90 = getelementptr inbounds %struct.ShadBuf, %struct.ShadBuf* %72, i32 0, i32 1, !dbg !4750
  %73 = load i16, i16* %shadhalostep90, align 2, !dbg !4750
  %conv91 = sext i16 %73 to i32, !dbg !4749
  %sub92 = sub nsw i32 0, %conv91, !dbg !4751
  %conv93 = sitofp i32 %sub92 to float, !dbg !4751
  %74 = load float, float* %yf1, align 4, !dbg !4752
  %75 = load float, float* %yf2, align 4, !dbg !4753
  %sub94 = fsub float %74, %75, !dbg !4754
  %div95 = fdiv float %conv93, %sub94, !dbg !4755
  store float %div95, float* %ldy, align 4, !dbg !4756
  %76 = load %struct.ShadBuf*, %struct.ShadBuf** %shb, align 8, !dbg !4757
  %shadhalostep96 = getelementptr inbounds %struct.ShadBuf, %struct.ShadBuf* %76, i32 0, i32 1, !dbg !4758
  %77 = load i16, i16* %shadhalostep96, align 2, !dbg !4758
  %conv97 = sext i16 %77 to i32, !dbg !4757
  store i32 %conv97, i32* %dy, align 4, !dbg !4759
  br label %if.end111, !dbg !4760

if.else98:                                        ; preds = %if.then80
  %78 = load float, float* %yf1, align 4, !dbg !4761
  %79 = load i32, i32* %ys1, align 4, !dbg !4763
  %conv99 = sitofp i32 %79 to float, !dbg !4763
  %sub100 = fsub float %78, %conv99, !dbg !4764
  %80 = load float, float* %yf1, align 4, !dbg !4765
  %81 = load float, float* %yf2, align 4, !dbg !4766
  %sub101 = fsub float %80, %81, !dbg !4767
  %div102 = fdiv float %sub100, %sub101, !dbg !4768
  store float %div102, float* %lambda_y, align 4, !dbg !4769
  %82 = load %struct.ShadBuf*, %struct.ShadBuf** %shb, align 8, !dbg !4770
  %shadhalostep103 = getelementptr inbounds %struct.ShadBuf, %struct.ShadBuf* %82, i32 0, i32 1, !dbg !4771
  %83 = load i16, i16* %shadhalostep103, align 2, !dbg !4771
  %conv104 = sext i16 %83 to i32, !dbg !4770
  %conv105 = sitofp i32 %conv104 to float, !dbg !4770
  %84 = load float, float* %yf1, align 4, !dbg !4772
  %85 = load float, float* %yf2, align 4, !dbg !4773
  %sub106 = fsub float %84, %85, !dbg !4774
  %div107 = fdiv float %conv105, %sub106, !dbg !4775
  store float %div107, float* %ldy, align 4, !dbg !4776
  %86 = load %struct.ShadBuf*, %struct.ShadBuf** %shb, align 8, !dbg !4777
  %shadhalostep108 = getelementptr inbounds %struct.ShadBuf, %struct.ShadBuf* %86, i32 0, i32 1, !dbg !4778
  %87 = load i16, i16* %shadhalostep108, align 2, !dbg !4778
  %conv109 = sext i16 %87 to i32, !dbg !4777
  %sub110 = sub nsw i32 0, %conv109, !dbg !4779
  store i32 %sub110, i32* %dy, align 4, !dbg !4780
  br label %if.end111

if.end111:                                        ; preds = %if.else98, %if.then84
  br label %if.end113, !dbg !4781

if.else112:                                       ; preds = %if.end77
  store float 1.000000e+00, float* %lambda_y, align 4, !dbg !4782
  store float 0.000000e+00, float* %ldy, align 4, !dbg !4784
  br label %if.end113

if.end113:                                        ; preds = %if.else112, %if.end111
  %88 = load i32, i32* %xs1, align 4, !dbg !4785
  store i32 %88, i32* %x, align 4, !dbg !4786
  %89 = load i32, i32* %ys1, align 4, !dbg !4787
  store i32 %89, i32* %y, align 4, !dbg !4788
  store float 0.000000e+00, float* %lightcount, align 4, !dbg !4789
  store float 0.000000e+00, float* %count, align 4, !dbg !4790
  store float 0.000000e+00, float* %lambda, align 4, !dbg !4791
  br label %do.body, !dbg !4792

do.body:                                          ; preds = %do.cond, %if.end113
  %90 = load float, float* %lambda, align 4, !dbg !4793
  store float %90, float* %lambda_o, align 4, !dbg !4795
  %91 = load float, float* %lambda_x, align 4, !dbg !4796
  %92 = load float, float* %lambda_y, align 4, !dbg !4798
  %cmp114 = fcmp oeq float %91, %92, !dbg !4799
  br i1 %cmp114, label %if.then116, label %if.else121, !dbg !4800

if.then116:                                       ; preds = %do.body
  %93 = load float, float* %ldx, align 4, !dbg !4801
  %94 = load float, float* %lambda_x, align 4, !dbg !4803
  %add117 = fadd float %94, %93, !dbg !4803
  store float %add117, float* %lambda_x, align 4, !dbg !4803
  %95 = load i32, i32* %dx, align 4, !dbg !4804
  %96 = load i32, i32* %x, align 4, !dbg !4805
  %add118 = add nsw i32 %96, %95, !dbg !4805
  store i32 %add118, i32* %x, align 4, !dbg !4805
  %97 = load float, float* %ldy, align 4, !dbg !4806
  %98 = load float, float* %lambda_y, align 4, !dbg !4807
  %add119 = fadd float %98, %97, !dbg !4807
  store float %add119, float* %lambda_y, align 4, !dbg !4807
  %99 = load i32, i32* %dy, align 4, !dbg !4808
  %100 = load i32, i32* %y, align 4, !dbg !4809
  %add120 = add nsw i32 %100, %99, !dbg !4809
  store i32 %add120, i32* %y, align 4, !dbg !4809
  br label %if.end131, !dbg !4810

if.else121:                                       ; preds = %do.body
  %101 = load float, float* %lambda_x, align 4, !dbg !4811
  %102 = load float, float* %lambda_y, align 4, !dbg !4814
  %cmp122 = fcmp olt float %101, %102, !dbg !4815
  br i1 %cmp122, label %if.then124, label %if.else127, !dbg !4816

if.then124:                                       ; preds = %if.else121
  %103 = load float, float* %ldx, align 4, !dbg !4817
  %104 = load float, float* %lambda_x, align 4, !dbg !4819
  %add125 = fadd float %104, %103, !dbg !4819
  store float %add125, float* %lambda_x, align 4, !dbg !4819
  %105 = load i32, i32* %dx, align 4, !dbg !4820
  %106 = load i32, i32* %x, align 4, !dbg !4821
  %add126 = add nsw i32 %106, %105, !dbg !4821
  store i32 %add126, i32* %x, align 4, !dbg !4821
  br label %if.end130, !dbg !4822

if.else127:                                       ; preds = %if.else121
  %107 = load float, float* %ldy, align 4, !dbg !4823
  %108 = load float, float* %lambda_y, align 4, !dbg !4825
  %add128 = fadd float %108, %107, !dbg !4825
  store float %add128, float* %lambda_y, align 4, !dbg !4825
  %109 = load i32, i32* %dy, align 4, !dbg !4826
  %110 = load i32, i32* %y, align 4, !dbg !4827
  %add129 = add nsw i32 %110, %109, !dbg !4827
  store i32 %add129, i32* %y, align 4, !dbg !4827
  br label %if.end130

if.end130:                                        ; preds = %if.else127, %if.then124
  br label %if.end131

if.end131:                                        ; preds = %if.end130, %if.then116
  %111 = load float, float* %lambda_x, align 4, !dbg !4828
  %112 = load float, float* %lambda_y, align 4, !dbg !4829
  %call = call float @min_ff(float %111, float %112), !dbg !4830
  store float %call, float* %lambda, align 4, !dbg !4831
  %113 = load float, float* %lambda, align 4, !dbg !4832
  %114 = load float, float* %lambda_o, align 4, !dbg !4834
  %cmp132 = fcmp oeq float %113, %114, !dbg !4835
  br i1 %cmp132, label %if.then134, label %if.end135, !dbg !4836

if.then134:                                       ; preds = %if.end131
  br label %do.end, !dbg !4837

if.end135:                                        ; preds = %if.end131
  %115 = load float, float* %lambda, align 4, !dbg !4838
  %call136 = call float @min_ff(float %115, float 1.000000e+00), !dbg !4839
  store float %call136, float* %lambda, align 4, !dbg !4840
  %116 = load float, float* %zf1, align 4, !dbg !4841
  %117 = load float, float* %lambda, align 4, !dbg !4842
  %118 = load float, float* %zf2, align 4, !dbg !4843
  %119 = load float, float* %zf1, align 4, !dbg !4844
  %sub137 = fsub float %118, %119, !dbg !4845
  %mul138 = fmul float %117, %sub137, !dbg !4846
  %add139 = fadd float %116, %mul138, !dbg !4847
  store float %add139, float* %zf, align 4, !dbg !4848
  %120 = load %struct.ShadBuf*, %struct.ShadBuf** %shb, align 8, !dbg !4849
  %totbuf = getelementptr inbounds %struct.ShadBuf, %struct.ShadBuf* %120, i32 0, i32 2, !dbg !4850
  %121 = load i16, i16* %totbuf, align 4, !dbg !4850
  %conv140 = sitofp i16 %121 to float, !dbg !4851
  %122 = load float, float* %count, align 4, !dbg !4852
  %add141 = fadd float %122, %conv140, !dbg !4852
  store float %add141, float* %count, align 4, !dbg !4852
  %123 = load float, float* %zf, align 4, !dbg !4853
  %cmp142 = fcmp ole float %123, -1.000000e+00, !dbg !4855
  br i1 %cmp142, label %if.then144, label %if.else146, !dbg !4856

if.then144:                                       ; preds = %if.end135
  %124 = load float, float* %lightcount, align 4, !dbg !4857
  %add145 = fadd float %124, 1.000000e+00, !dbg !4857
  store float %add145, float* %lightcount, align 4, !dbg !4857
  br label %if.end156, !dbg !4858

if.else146:                                       ; preds = %if.end135
  %125 = load float, float* %zf, align 4, !dbg !4859
  %cmp147 = fcmp oge float %125, 1.000000e+00, !dbg !4862
  br i1 %cmp147, label %if.then149, label %if.else150, !dbg !4863

if.then149:                                       ; preds = %if.else146
  store i32 2147479552, i32* %z, align 4, !dbg !4864
  br label %if.end153, !dbg !4865

if.else150:                                       ; preds = %if.else146
  %126 = load float, float* %zf, align 4, !dbg !4866
  %mul151 = fmul float 0x41DFFFFC00000000, %126, !dbg !4867
  %conv152 = fptosi float %mul151 to i32, !dbg !4868
  store i32 %conv152, i32* %z, align 4, !dbg !4869
  br label %if.end153

if.end153:                                        ; preds = %if.else150, %if.then149
  %127 = load %struct.ShadBuf*, %struct.ShadBuf** %shb, align 8, !dbg !4870
  %buffers = getelementptr inbounds %struct.ShadBuf, %struct.ShadBuf* %127, i32 0, i32 16, !dbg !4872
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %buffers, i32 0, i32 0, !dbg !4873
  %128 = load i8*, i8** %first, align 8, !dbg !4873
  %129 = bitcast i8* %128 to %struct.ShadSampleBuf*, !dbg !4870
  store %struct.ShadSampleBuf* %129, %struct.ShadSampleBuf** %shsample, align 8, !dbg !4874
  br label %for.cond, !dbg !4875

for.cond:                                         ; preds = %for.inc, %if.end153
  %130 = load %struct.ShadSampleBuf*, %struct.ShadSampleBuf** %shsample, align 8, !dbg !4876
  %tobool = icmp ne %struct.ShadSampleBuf* %130, null, !dbg !4878
  br i1 %tobool, label %for.body, label %for.end, !dbg !4878

for.body:                                         ; preds = %for.cond
  %131 = load %struct.ShadBuf*, %struct.ShadBuf** %shb, align 8, !dbg !4879
  %132 = load %struct.ShadSampleBuf*, %struct.ShadSampleBuf** %shsample, align 8, !dbg !4880
  %133 = load i32, i32* %x, align 4, !dbg !4881
  %134 = load i32, i32* %y, align 4, !dbg !4882
  %135 = load i32, i32* %z, align 4, !dbg !4883
  %call154 = call float @readshadowbuf_halo(%struct.ShadBuf* %131, %struct.ShadSampleBuf* %132, i32 %133, i32 %134, i32 %135), !dbg !4884
  %136 = load float, float* %lightcount, align 4, !dbg !4885
  %add155 = fadd float %136, %call154, !dbg !4885
  store float %add155, float* %lightcount, align 4, !dbg !4885
  br label %for.inc, !dbg !4886

for.inc:                                          ; preds = %for.body
  %137 = load %struct.ShadSampleBuf*, %struct.ShadSampleBuf** %shsample, align 8, !dbg !4887
  %next = getelementptr inbounds %struct.ShadSampleBuf, %struct.ShadSampleBuf* %137, i32 0, i32 0, !dbg !4888
  %138 = load %struct.ShadSampleBuf*, %struct.ShadSampleBuf** %next, align 8, !dbg !4888
  store %struct.ShadSampleBuf* %138, %struct.ShadSampleBuf** %shsample, align 8, !dbg !4889
  br label %for.cond, !dbg !4890, !llvm.loop !4891

for.end:                                          ; preds = %for.cond
  br label %if.end156

if.end156:                                        ; preds = %for.end, %if.then144
  br label %do.cond, !dbg !4893

do.cond:                                          ; preds = %if.end156
  %139 = load float, float* %lambda, align 4, !dbg !4894
  %cmp157 = fcmp olt float %139, 1.000000e+00, !dbg !4895
  br i1 %cmp157, label %do.body, label %do.end, !dbg !4893, !llvm.loop !4896

do.end:                                           ; preds = %do.cond, %if.then134
  %140 = load float, float* %count, align 4, !dbg !4898
  %cmp159 = fcmp une float %140, 0.000000e+00, !dbg !4900
  br i1 %cmp159, label %if.then161, label %if.end163, !dbg !4901

if.then161:                                       ; preds = %do.end
  %141 = load float, float* %lightcount, align 4, !dbg !4902
  %142 = load float, float* %count, align 4, !dbg !4903
  %div162 = fdiv float %141, %142, !dbg !4904
  store float %div162, float* %retval, align 4, !dbg !4905
  br label %return, !dbg !4905

if.end163:                                        ; preds = %do.end
  store float 0.000000e+00, float* %retval, align 4, !dbg !4906
  br label %return, !dbg !4906

return:                                           ; preds = %if.end163, %if.then161
  %143 = load float, float* %retval, align 4, !dbg !4907
  ret float %143, !dbg !4907
}

declare dso_local void @mul_m4_v4([4 x float]*, float*) #4

; Function Attrs: noinline nounwind uwtable
define internal float @min_ff(float %a, float %b) #0 !dbg !4908 {
entry:
  %a.addr = alloca float, align 4
  %b.addr = alloca float, align 4
  store float %a, float* %a.addr, align 4
  call void @llvm.dbg.declare(metadata float* %a.addr, metadata !4911, metadata !DIExpression()), !dbg !4912
  store float %b, float* %b.addr, align 4
  call void @llvm.dbg.declare(metadata float* %b.addr, metadata !4913, metadata !DIExpression()), !dbg !4914
  %0 = load float, float* %a.addr, align 4, !dbg !4915
  %1 = load float, float* %b.addr, align 4, !dbg !4916
  %cmp = fcmp olt float %0, %1, !dbg !4917
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !4918

cond.true:                                        ; preds = %entry
  %2 = load float, float* %a.addr, align 4, !dbg !4919
  br label %cond.end, !dbg !4918

cond.false:                                       ; preds = %entry
  %3 = load float, float* %b.addr, align 4, !dbg !4920
  br label %cond.end, !dbg !4918

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float [ %2, %cond.true ], [ %3, %cond.false ], !dbg !4918
  ret float %cond, !dbg !4921
}

; Function Attrs: noinline nounwind uwtable
define internal float @readshadowbuf_halo(%struct.ShadBuf* %shb, %struct.ShadSampleBuf* %shsample, i32 %xs, i32 %ys, i32 %zs) #0 !dbg !4922 {
entry:
  %retval = alloca float, align 4
  %shb.addr = alloca %struct.ShadBuf*, align 8
  %shsample.addr = alloca %struct.ShadSampleBuf*, align 8
  %xs.addr = alloca i32, align 4
  %ys.addr = alloca i32, align 4
  %zs.addr = alloca i32, align 4
  %temp = alloca float, align 4
  %rz = alloca i32*, align 8
  %ofs = alloca i32, align 4
  %bias = alloca i32, align 4
  %zbias = alloca i32, align 4
  %zsamp = alloca i32, align 4
  %ct = alloca i8*, align 8
  %cz = alloca i8*, align 8
  store %struct.ShadBuf* %shb, %struct.ShadBuf** %shb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ShadBuf** %shb.addr, metadata !4925, metadata !DIExpression()), !dbg !4926
  store %struct.ShadSampleBuf* %shsample, %struct.ShadSampleBuf** %shsample.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ShadSampleBuf** %shsample.addr, metadata !4927, metadata !DIExpression()), !dbg !4928
  store i32 %xs, i32* %xs.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %xs.addr, metadata !4929, metadata !DIExpression()), !dbg !4930
  store i32 %ys, i32* %ys.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ys.addr, metadata !4931, metadata !DIExpression()), !dbg !4932
  store i32 %zs, i32* %zs.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %zs.addr, metadata !4933, metadata !DIExpression()), !dbg !4934
  call void @llvm.dbg.declare(metadata float* %temp, metadata !4935, metadata !DIExpression()), !dbg !4936
  call void @llvm.dbg.declare(metadata i32** %rz, metadata !4937, metadata !DIExpression()), !dbg !4938
  call void @llvm.dbg.declare(metadata i32* %ofs, metadata !4939, metadata !DIExpression()), !dbg !4940
  call void @llvm.dbg.declare(metadata i32* %bias, metadata !4941, metadata !DIExpression()), !dbg !4942
  call void @llvm.dbg.declare(metadata i32* %zbias, metadata !4943, metadata !DIExpression()), !dbg !4944
  call void @llvm.dbg.declare(metadata i32* %zsamp, metadata !4945, metadata !DIExpression()), !dbg !4946
  call void @llvm.dbg.declare(metadata i8** %ct, metadata !4947, metadata !DIExpression()), !dbg !4948
  call void @llvm.dbg.declare(metadata i8** %cz, metadata !4949, metadata !DIExpression()), !dbg !4950
  %0 = load %struct.ShadBuf*, %struct.ShadBuf** %shb.addr, align 8, !dbg !4951
  %bias1 = getelementptr inbounds %struct.ShadBuf, %struct.ShadBuf* %0, i32 0, i32 15, !dbg !4952
  %1 = load i32, i32* %bias1, align 4, !dbg !4952
  %sub = sub nsw i32 0, %1, !dbg !4953
  store i32 %sub, i32* %bias, align 4, !dbg !4954
  %2 = load i32, i32* %xs.addr, align 4, !dbg !4955
  %cmp = icmp slt i32 %2, 0, !dbg !4957
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !4958

lor.lhs.false:                                    ; preds = %entry
  %3 = load i32, i32* %ys.addr, align 4, !dbg !4959
  %cmp2 = icmp slt i32 %3, 0, !dbg !4960
  br i1 %cmp2, label %if.then, label %if.end, !dbg !4961

if.then:                                          ; preds = %lor.lhs.false, %entry
  store float 0.000000e+00, float* %retval, align 4, !dbg !4962
  br label %return, !dbg !4962

if.end:                                           ; preds = %lor.lhs.false
  %4 = load i32, i32* %xs.addr, align 4, !dbg !4963
  %5 = load %struct.ShadBuf*, %struct.ShadBuf** %shb.addr, align 8, !dbg !4965
  %size = getelementptr inbounds %struct.ShadBuf, %struct.ShadBuf* %5, i32 0, i32 14, !dbg !4966
  %6 = load i32, i32* %size, align 8, !dbg !4966
  %cmp3 = icmp sge i32 %4, %6, !dbg !4967
  br i1 %cmp3, label %if.then7, label %lor.lhs.false4, !dbg !4968

lor.lhs.false4:                                   ; preds = %if.end
  %7 = load i32, i32* %ys.addr, align 4, !dbg !4969
  %8 = load %struct.ShadBuf*, %struct.ShadBuf** %shb.addr, align 8, !dbg !4970
  %size5 = getelementptr inbounds %struct.ShadBuf, %struct.ShadBuf* %8, i32 0, i32 14, !dbg !4971
  %9 = load i32, i32* %size5, align 8, !dbg !4971
  %cmp6 = icmp sge i32 %7, %9, !dbg !4972
  br i1 %cmp6, label %if.then7, label %if.end8, !dbg !4973

if.then7:                                         ; preds = %lor.lhs.false4, %if.end
  store float 0.000000e+00, float* %retval, align 4, !dbg !4974
  br label %return, !dbg !4974

if.end8:                                          ; preds = %lor.lhs.false4
  %10 = load i32, i32* %ys.addr, align 4, !dbg !4975
  %shr = ashr i32 %10, 4, !dbg !4976
  %11 = load %struct.ShadBuf*, %struct.ShadBuf** %shb.addr, align 8, !dbg !4977
  %size9 = getelementptr inbounds %struct.ShadBuf, %struct.ShadBuf* %11, i32 0, i32 14, !dbg !4978
  %12 = load i32, i32* %size9, align 8, !dbg !4978
  %shr10 = ashr i32 %12, 4, !dbg !4979
  %mul = mul nsw i32 %shr, %shr10, !dbg !4980
  %13 = load i32, i32* %xs.addr, align 4, !dbg !4981
  %shr11 = ashr i32 %13, 4, !dbg !4982
  %add = add nsw i32 %mul, %shr11, !dbg !4983
  store i32 %add, i32* %ofs, align 4, !dbg !4984
  %14 = load %struct.ShadSampleBuf*, %struct.ShadSampleBuf** %shsample.addr, align 8, !dbg !4985
  %cbuf = getelementptr inbounds %struct.ShadSampleBuf, %struct.ShadSampleBuf* %14, i32 0, i32 3, !dbg !4986
  %15 = load i8*, i8** %cbuf, align 8, !dbg !4986
  %16 = load i32, i32* %ofs, align 4, !dbg !4987
  %idx.ext = sext i32 %16 to i64, !dbg !4988
  %add.ptr = getelementptr inbounds i8, i8* %15, i64 %idx.ext, !dbg !4988
  store i8* %add.ptr, i8** %ct, align 8, !dbg !4989
  %17 = load %struct.ShadSampleBuf*, %struct.ShadSampleBuf** %shsample.addr, align 8, !dbg !4990
  %zbuf = getelementptr inbounds %struct.ShadSampleBuf, %struct.ShadSampleBuf* %17, i32 0, i32 2, !dbg !4991
  %18 = load i64*, i64** %zbuf, align 8, !dbg !4991
  %19 = load i32, i32* %ofs, align 4, !dbg !4992
  %idx.ext12 = sext i32 %19 to i64, !dbg !4993
  %add.ptr13 = getelementptr inbounds i64, i64* %18, i64 %idx.ext12, !dbg !4993
  %20 = bitcast i64* %add.ptr13 to i32**, !dbg !4994
  %21 = load i32*, i32** %20, align 8, !dbg !4994
  store i32* %21, i32** %rz, align 8, !dbg !4995
  %22 = load i8*, i8** %ct, align 8, !dbg !4996
  %23 = load i8, i8* %22, align 1, !dbg !4998
  %conv = zext i8 %23 to i32, !dbg !4998
  %cmp14 = icmp eq i32 %conv, 3, !dbg !4999
  br i1 %cmp14, label %if.then16, label %if.else, !dbg !5000

if.then16:                                        ; preds = %if.end8
  %24 = load i32*, i32** %rz, align 8, !dbg !5001
  %25 = bitcast i32* %24 to i8*, !dbg !5003
  %26 = load i32, i32* %ys.addr, align 4, !dbg !5004
  %and = and i32 %26, 15, !dbg !5005
  %mul17 = mul nsw i32 48, %and, !dbg !5006
  %idx.ext18 = sext i32 %mul17 to i64, !dbg !5007
  %add.ptr19 = getelementptr inbounds i8, i8* %25, i64 %idx.ext18, !dbg !5007
  %27 = load i32, i32* %xs.addr, align 4, !dbg !5008
  %and20 = and i32 %27, 15, !dbg !5009
  %mul21 = mul nsw i32 3, %and20, !dbg !5010
  %idx.ext22 = sext i32 %mul21 to i64, !dbg !5011
  %add.ptr23 = getelementptr inbounds i8, i8* %add.ptr19, i64 %idx.ext22, !dbg !5011
  store i8* %add.ptr23, i8** %ct, align 8, !dbg !5012
  %28 = bitcast i32* %zsamp to i8*, !dbg !5013
  store i8* %28, i8** %cz, align 8, !dbg !5014
  store i32 0, i32* %zsamp, align 4, !dbg !5015
  %29 = load i8*, i8** %ct, align 8, !dbg !5016
  %arrayidx = getelementptr inbounds i8, i8* %29, i64 0, !dbg !5016
  %30 = load i8, i8* %arrayidx, align 1, !dbg !5016
  %31 = load i8*, i8** %cz, align 8, !dbg !5017
  %arrayidx24 = getelementptr inbounds i8, i8* %31, i64 3, !dbg !5017
  store i8 %30, i8* %arrayidx24, align 1, !dbg !5018
  %32 = load i8*, i8** %ct, align 8, !dbg !5019
  %arrayidx25 = getelementptr inbounds i8, i8* %32, i64 1, !dbg !5019
  %33 = load i8, i8* %arrayidx25, align 1, !dbg !5019
  %34 = load i8*, i8** %cz, align 8, !dbg !5020
  %arrayidx26 = getelementptr inbounds i8, i8* %34, i64 2, !dbg !5020
  store i8 %33, i8* %arrayidx26, align 1, !dbg !5021
  %35 = load i8*, i8** %ct, align 8, !dbg !5022
  %arrayidx27 = getelementptr inbounds i8, i8* %35, i64 2, !dbg !5022
  %36 = load i8, i8* %arrayidx27, align 1, !dbg !5022
  %37 = load i8*, i8** %cz, align 8, !dbg !5023
  %arrayidx28 = getelementptr inbounds i8, i8* %37, i64 1, !dbg !5023
  store i8 %36, i8* %arrayidx28, align 1, !dbg !5024
  br label %if.end63, !dbg !5025

if.else:                                          ; preds = %if.end8
  %38 = load i8*, i8** %ct, align 8, !dbg !5026
  %39 = load i8, i8* %38, align 1, !dbg !5028
  %conv29 = zext i8 %39 to i32, !dbg !5028
  %cmp30 = icmp eq i32 %conv29, 2, !dbg !5029
  br i1 %cmp30, label %if.then32, label %if.else45, !dbg !5030

if.then32:                                        ; preds = %if.else
  %40 = load i32*, i32** %rz, align 8, !dbg !5031
  %41 = bitcast i32* %40 to i8*, !dbg !5033
  store i8* %41, i8** %ct, align 8, !dbg !5034
  %42 = load i32, i32* %ys.addr, align 4, !dbg !5035
  %and33 = and i32 %42, 15, !dbg !5036
  %mul34 = mul nsw i32 32, %and33, !dbg !5037
  %add35 = add nsw i32 4, %mul34, !dbg !5038
  %43 = load i32, i32* %xs.addr, align 4, !dbg !5039
  %and36 = and i32 %43, 15, !dbg !5040
  %mul37 = mul nsw i32 2, %and36, !dbg !5041
  %add38 = add nsw i32 %add35, %mul37, !dbg !5042
  %44 = load i8*, i8** %ct, align 8, !dbg !5043
  %idx.ext39 = sext i32 %add38 to i64, !dbg !5043
  %add.ptr40 = getelementptr inbounds i8, i8* %44, i64 %idx.ext39, !dbg !5043
  store i8* %add.ptr40, i8** %ct, align 8, !dbg !5043
  %45 = load i32*, i32** %rz, align 8, !dbg !5044
  %46 = load i32, i32* %45, align 4, !dbg !5045
  store i32 %46, i32* %zsamp, align 4, !dbg !5046
  %47 = bitcast i32* %zsamp to i8*, !dbg !5047
  store i8* %47, i8** %cz, align 8, !dbg !5048
  %48 = load i8*, i8** %ct, align 8, !dbg !5049
  %arrayidx41 = getelementptr inbounds i8, i8* %48, i64 0, !dbg !5049
  %49 = load i8, i8* %arrayidx41, align 1, !dbg !5049
  %50 = load i8*, i8** %cz, align 8, !dbg !5050
  %arrayidx42 = getelementptr inbounds i8, i8* %50, i64 2, !dbg !5050
  store i8 %49, i8* %arrayidx42, align 1, !dbg !5051
  %51 = load i8*, i8** %ct, align 8, !dbg !5052
  %arrayidx43 = getelementptr inbounds i8, i8* %51, i64 1, !dbg !5052
  %52 = load i8, i8* %arrayidx43, align 1, !dbg !5052
  %53 = load i8*, i8** %cz, align 8, !dbg !5053
  %arrayidx44 = getelementptr inbounds i8, i8* %53, i64 1, !dbg !5053
  store i8 %52, i8* %arrayidx44, align 1, !dbg !5054
  br label %if.end62, !dbg !5055

if.else45:                                        ; preds = %if.else
  %54 = load i8*, i8** %ct, align 8, !dbg !5056
  %55 = load i8, i8* %54, align 1, !dbg !5058
  %conv46 = zext i8 %55 to i32, !dbg !5058
  %cmp47 = icmp eq i32 %conv46, 1, !dbg !5059
  br i1 %cmp47, label %if.then49, label %if.else59, !dbg !5060

if.then49:                                        ; preds = %if.else45
  %56 = load i32*, i32** %rz, align 8, !dbg !5061
  %57 = bitcast i32* %56 to i8*, !dbg !5063
  store i8* %57, i8** %ct, align 8, !dbg !5064
  %58 = load i32, i32* %ys.addr, align 4, !dbg !5065
  %and50 = and i32 %58, 15, !dbg !5066
  %mul51 = mul nsw i32 16, %and50, !dbg !5067
  %add52 = add nsw i32 4, %mul51, !dbg !5068
  %59 = load i32, i32* %xs.addr, align 4, !dbg !5069
  %and53 = and i32 %59, 15, !dbg !5070
  %add54 = add nsw i32 %add52, %and53, !dbg !5071
  %60 = load i8*, i8** %ct, align 8, !dbg !5072
  %idx.ext55 = sext i32 %add54 to i64, !dbg !5072
  %add.ptr56 = getelementptr inbounds i8, i8* %60, i64 %idx.ext55, !dbg !5072
  store i8* %add.ptr56, i8** %ct, align 8, !dbg !5072
  %61 = load i32*, i32** %rz, align 8, !dbg !5073
  %62 = load i32, i32* %61, align 4, !dbg !5074
  store i32 %62, i32* %zsamp, align 4, !dbg !5075
  %63 = bitcast i32* %zsamp to i8*, !dbg !5076
  store i8* %63, i8** %cz, align 8, !dbg !5077
  %64 = load i8*, i8** %ct, align 8, !dbg !5078
  %arrayidx57 = getelementptr inbounds i8, i8* %64, i64 0, !dbg !5078
  %65 = load i8, i8* %arrayidx57, align 1, !dbg !5078
  %66 = load i8*, i8** %cz, align 8, !dbg !5079
  %arrayidx58 = getelementptr inbounds i8, i8* %66, i64 1, !dbg !5079
  store i8 %65, i8* %arrayidx58, align 1, !dbg !5080
  br label %if.end61, !dbg !5081

if.else59:                                        ; preds = %if.else45
  %67 = load i32*, i32** %rz, align 8, !dbg !5082
  %68 = ptrtoint i32* %67 to i64, !dbg !5082
  %conv60 = trunc i64 %68 to i32, !dbg !5082
  store i32 %conv60, i32* %zsamp, align 4, !dbg !5084
  br label %if.end61

if.end61:                                         ; preds = %if.else59, %if.then49
  br label %if.end62

if.end62:                                         ; preds = %if.end61, %if.then32
  br label %if.end63

if.end63:                                         ; preds = %if.end62, %if.then16
  %69 = load i32, i32* %zsamp, align 4, !dbg !5085
  %cmp64 = icmp sge i32 %69, 2147483136, !dbg !5087
  br i1 %cmp64, label %if.then66, label %if.end67, !dbg !5088

if.then66:                                        ; preds = %if.end63
  store float 1.000000e+00, float* %retval, align 4, !dbg !5089
  br label %return, !dbg !5089

if.end67:                                         ; preds = %if.end63
  %70 = load i32, i32* %zsamp, align 4, !dbg !5090
  %71 = load i32, i32* %zs.addr, align 4, !dbg !5092
  %cmp68 = icmp sgt i32 %70, %71, !dbg !5093
  br i1 %cmp68, label %if.then70, label %if.else71, !dbg !5094

if.then70:                                        ; preds = %if.end67
  store float 1.000000e+00, float* %retval, align 4, !dbg !5095
  br label %return, !dbg !5095

if.else71:                                        ; preds = %if.end67
  %72 = load i32, i32* %zs.addr, align 4, !dbg !5096
  %sub72 = sub nsw i32 2147483647, %72, !dbg !5098
  store i32 %sub72, i32* %zbias, align 4, !dbg !5099
  %73 = load i32, i32* %zbias, align 4, !dbg !5100
  %74 = load i32, i32* %bias, align 4, !dbg !5102
  %sub73 = sub nsw i32 0, %74, !dbg !5103
  %cmp74 = icmp sgt i32 %73, %sub73, !dbg !5104
  br i1 %cmp74, label %if.then76, label %if.else82, !dbg !5105

if.then76:                                        ; preds = %if.else71
  %75 = load i32, i32* %zsamp, align 4, !dbg !5106
  %76 = load i32, i32* %zs.addr, align 4, !dbg !5109
  %77 = load i32, i32* %bias, align 4, !dbg !5110
  %sub77 = sub nsw i32 %76, %77, !dbg !5111
  %cmp78 = icmp slt i32 %75, %sub77, !dbg !5112
  br i1 %cmp78, label %if.then80, label %if.end81, !dbg !5113

if.then80:                                        ; preds = %if.then76
  store float 0.000000e+00, float* %retval, align 4, !dbg !5114
  br label %return, !dbg !5114

if.end81:                                         ; preds = %if.then76
  br label %if.end83, !dbg !5115

if.else82:                                        ; preds = %if.else71
  store float 0.000000e+00, float* %retval, align 4, !dbg !5116
  br label %return, !dbg !5116

if.end83:                                         ; preds = %if.end81
  br label %if.end84

if.end84:                                         ; preds = %if.end83
  %78 = load i32, i32* %zs.addr, align 4, !dbg !5117
  %79 = load i32, i32* %zsamp, align 4, !dbg !5118
  %sub85 = sub nsw i32 %78, %79, !dbg !5119
  %conv86 = sitofp i32 %sub85 to float, !dbg !5120
  %80 = load i32, i32* %bias, align 4, !dbg !5121
  %conv87 = sitofp i32 %80 to float, !dbg !5122
  %div = fdiv float %conv86, %conv87, !dbg !5123
  store float %div, float* %temp, align 4, !dbg !5124
  %81 = load float, float* %temp, align 4, !dbg !5125
  %82 = load float, float* %temp, align 4, !dbg !5126
  %mul88 = fmul float %81, %82, !dbg !5127
  %sub89 = fsub float 1.000000e+00, %mul88, !dbg !5128
  store float %sub89, float* %retval, align 4, !dbg !5129
  br label %return, !dbg !5129

return:                                           ; preds = %if.end84, %if.else82, %if.then80, %if.then70, %if.then66, %if.then7, %if.then
  %83 = load float, float* %retval, align 4, !dbg !5130
  ret float %83, !dbg !5130
}

; Function Attrs: noinline nounwind uwtable
define dso_local float @ISB_getshadow(%struct.ShadeInput* %shi, %struct.ShadBuf* %shb) #0 !dbg !5131 {
entry:
  %retval = alloca float, align 4
  %shi.addr = alloca %struct.ShadeInput*, align 8
  %shb.addr = alloca %struct.ShadBuf*, align 8
  %isbdata = alloca %struct.ISBData*, align 8
  %x = alloca i32, align 4
  %y = alloca i32, align 4
  %sp = alloca i16*, align 8
  %sindex = alloca i32, align 4
  %obi = alloca i32, align 4
  %isbsa = alloca %struct.ISBShadfacA*, align 8
  store %struct.ShadeInput* %shi, %struct.ShadeInput** %shi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ShadeInput** %shi.addr, metadata !5275, metadata !DIExpression()), !dbg !5276
  store %struct.ShadBuf* %shb, %struct.ShadBuf** %shb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ShadBuf** %shb.addr, metadata !5277, metadata !DIExpression()), !dbg !5278
  %0 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !5279
  %depth = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %0, i32 0, i32 108, !dbg !5281
  %1 = load i32, i32* %depth, align 8, !dbg !5281
  %cmp = icmp eq i32 %1, 0, !dbg !5282
  br i1 %cmp, label %if.then, label %if.end54, !dbg !5283

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.ISBData** %isbdata, metadata !5284, metadata !DIExpression()), !dbg !5288
  %2 = load %struct.ShadBuf*, %struct.ShadBuf** %shb.addr, align 8, !dbg !5289
  %isb_result = getelementptr inbounds %struct.ShadBuf, %struct.ShadBuf* %2, i32 0, i32 17, !dbg !5290
  %3 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !5291
  %thread = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %3, i32 0, i32 114, !dbg !5292
  %4 = load i16, i16* %thread, align 2, !dbg !5292
  %idxprom = sext i16 %4 to i64, !dbg !5289
  %arrayidx = getelementptr inbounds [1 x %struct.ISBData*], [1 x %struct.ISBData*]* %isb_result, i64 0, i64 %idxprom, !dbg !5289
  %5 = load %struct.ISBData*, %struct.ISBData** %arrayidx, align 8, !dbg !5289
  store %struct.ISBData* %5, %struct.ISBData** %isbdata, align 8, !dbg !5288
  %6 = load %struct.ISBData*, %struct.ISBData** %isbdata, align 8, !dbg !5293
  %tobool = icmp ne %struct.ISBData* %6, null, !dbg !5293
  br i1 %tobool, label %if.then1, label %if.end53, !dbg !5295

if.then1:                                         ; preds = %if.then
  %7 = load %struct.ISBData*, %struct.ISBData** %isbdata, align 8, !dbg !5296
  %shadfacs = getelementptr inbounds %struct.ISBData, %struct.ISBData* %7, i32 0, i32 0, !dbg !5299
  %8 = load i16*, i16** %shadfacs, align 8, !dbg !5299
  %tobool2 = icmp ne i16* %8, null, !dbg !5296
  br i1 %tobool2, label %if.then4, label %lor.lhs.false, !dbg !5300

lor.lhs.false:                                    ; preds = %if.then1
  %9 = load %struct.ISBData*, %struct.ISBData** %isbdata, align 8, !dbg !5301
  %shadfaca = getelementptr inbounds %struct.ISBData, %struct.ISBData* %9, i32 0, i32 1, !dbg !5302
  %10 = load %struct.ISBShadfacA**, %struct.ISBShadfacA*** %shadfaca, align 8, !dbg !5302
  %tobool3 = icmp ne %struct.ISBShadfacA** %10, null, !dbg !5301
  br i1 %tobool3, label %if.then4, label %if.end52, !dbg !5303

if.then4:                                         ; preds = %lor.lhs.false, %if.then1
  call void @llvm.dbg.declare(metadata i32* %x, metadata !5304, metadata !DIExpression()), !dbg !5306
  %11 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !5307
  %xs = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %11, i32 0, i32 103, !dbg !5308
  %12 = load i32, i32* %xs, align 4, !dbg !5308
  %13 = load %struct.ISBData*, %struct.ISBData** %isbdata, align 8, !dbg !5309
  %minx = getelementptr inbounds %struct.ISBData, %struct.ISBData* %13, i32 0, i32 3, !dbg !5310
  %14 = load i32, i32* %minx, align 8, !dbg !5310
  %sub = sub nsw i32 %12, %14, !dbg !5311
  store i32 %sub, i32* %x, align 4, !dbg !5306
  %15 = load i32, i32* %x, align 4, !dbg !5312
  %cmp5 = icmp sge i32 %15, 0, !dbg !5314
  br i1 %cmp5, label %land.lhs.true, label %if.end51, !dbg !5315

land.lhs.true:                                    ; preds = %if.then4
  %16 = load i32, i32* %x, align 4, !dbg !5316
  %17 = load %struct.ISBData*, %struct.ISBData** %isbdata, align 8, !dbg !5317
  %rectx = getelementptr inbounds %struct.ISBData, %struct.ISBData* %17, i32 0, i32 5, !dbg !5318
  %18 = load i32, i32* %rectx, align 8, !dbg !5318
  %cmp6 = icmp slt i32 %16, %18, !dbg !5319
  br i1 %cmp6, label %if.then7, label %if.end51, !dbg !5320

if.then7:                                         ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata i32* %y, metadata !5321, metadata !DIExpression()), !dbg !5323
  %19 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !5324
  %ys = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %19, i32 0, i32 104, !dbg !5325
  %20 = load i32, i32* %ys, align 8, !dbg !5325
  %21 = load %struct.ISBData*, %struct.ISBData** %isbdata, align 8, !dbg !5326
  %miny = getelementptr inbounds %struct.ISBData, %struct.ISBData* %21, i32 0, i32 4, !dbg !5327
  %22 = load i32, i32* %miny, align 4, !dbg !5327
  %sub8 = sub nsw i32 %20, %22, !dbg !5328
  store i32 %sub8, i32* %y, align 4, !dbg !5323
  %23 = load i32, i32* %y, align 4, !dbg !5329
  %cmp9 = icmp sge i32 %23, 0, !dbg !5331
  br i1 %cmp9, label %land.lhs.true10, label %if.end50, !dbg !5332

land.lhs.true10:                                  ; preds = %if.then7
  %24 = load i32, i32* %y, align 4, !dbg !5333
  %25 = load %struct.ISBData*, %struct.ISBData** %isbdata, align 8, !dbg !5334
  %recty = getelementptr inbounds %struct.ISBData, %struct.ISBData* %25, i32 0, i32 6, !dbg !5335
  %26 = load i32, i32* %recty, align 4, !dbg !5335
  %cmp11 = icmp slt i32 %24, %26, !dbg !5336
  br i1 %cmp11, label %if.then12, label %if.end50, !dbg !5337

if.then12:                                        ; preds = %land.lhs.true10
  %27 = load %struct.ISBData*, %struct.ISBData** %isbdata, align 8, !dbg !5338
  %shadfacs13 = getelementptr inbounds %struct.ISBData, %struct.ISBData* %27, i32 0, i32 0, !dbg !5341
  %28 = load i16*, i16** %shadfacs13, align 8, !dbg !5341
  %tobool14 = icmp ne i16* %28, null, !dbg !5338
  br i1 %tobool14, label %if.then15, label %if.else, !dbg !5342

if.then15:                                        ; preds = %if.then12
  call void @llvm.dbg.declare(metadata i16** %sp, metadata !5343, metadata !DIExpression()), !dbg !5347
  %29 = load %struct.ISBData*, %struct.ISBData** %isbdata, align 8, !dbg !5348
  %shadfacs16 = getelementptr inbounds %struct.ISBData, %struct.ISBData* %29, i32 0, i32 0, !dbg !5349
  %30 = load i16*, i16** %shadfacs16, align 8, !dbg !5349
  %31 = load i32, i32* %y, align 4, !dbg !5350
  %32 = load %struct.ISBData*, %struct.ISBData** %isbdata, align 8, !dbg !5351
  %rectx17 = getelementptr inbounds %struct.ISBData, %struct.ISBData* %32, i32 0, i32 5, !dbg !5352
  %33 = load i32, i32* %rectx17, align 8, !dbg !5352
  %mul = mul nsw i32 %31, %33, !dbg !5353
  %idx.ext = sext i32 %mul to i64, !dbg !5354
  %add.ptr = getelementptr inbounds i16, i16* %30, i64 %idx.ext, !dbg !5354
  %34 = load i32, i32* %x, align 4, !dbg !5355
  %idx.ext18 = sext i32 %34 to i64, !dbg !5356
  %add.ptr19 = getelementptr inbounds i16, i16* %add.ptr, i64 %idx.ext18, !dbg !5356
  store i16* %add.ptr19, i16** %sp, align 8, !dbg !5347
  %35 = load i16*, i16** %sp, align 8, !dbg !5357
  %36 = load i16, i16* %35, align 2, !dbg !5358
  %conv = sext i16 %36 to i32, !dbg !5358
  %cmp20 = icmp sge i32 %conv, 4096, !dbg !5359
  br i1 %cmp20, label %cond.true, label %cond.false, !dbg !5358

cond.true:                                        ; preds = %if.then15
  br label %cond.end, !dbg !5358

cond.false:                                       ; preds = %if.then15
  %37 = load i16*, i16** %sp, align 8, !dbg !5360
  %38 = load i16, i16* %37, align 2, !dbg !5361
  %conv22 = sitofp i16 %38 to float, !dbg !5362
  %div = fdiv float %conv22, 4.096000e+03, !dbg !5363
  %sub23 = fsub float 1.000000e+00, %div, !dbg !5364
  br label %cond.end, !dbg !5358

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float [ 0.000000e+00, %cond.true ], [ %sub23, %cond.false ], !dbg !5358
  store float %cond, float* %retval, align 4, !dbg !5365
  br label %return, !dbg !5365

if.else:                                          ; preds = %if.then12
  call void @llvm.dbg.declare(metadata i32* %sindex, metadata !5366, metadata !DIExpression()), !dbg !5368
  %39 = load i32, i32* %y, align 4, !dbg !5369
  %40 = load %struct.ISBData*, %struct.ISBData** %isbdata, align 8, !dbg !5370
  %rectx24 = getelementptr inbounds %struct.ISBData, %struct.ISBData* %40, i32 0, i32 5, !dbg !5371
  %41 = load i32, i32* %rectx24, align 8, !dbg !5371
  %mul25 = mul nsw i32 %39, %41, !dbg !5372
  %42 = load i32, i32* %x, align 4, !dbg !5373
  %add = add nsw i32 %mul25, %42, !dbg !5374
  store i32 %add, i32* %sindex, align 4, !dbg !5368
  call void @llvm.dbg.declare(metadata i32* %obi, metadata !5375, metadata !DIExpression()), !dbg !5376
  %43 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !5377
  %obi26 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %43, i32 0, i32 3, !dbg !5378
  %44 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi26, align 8, !dbg !5378
  %45 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 69), align 8, !dbg !5379
  %sub.ptr.lhs.cast = ptrtoint %struct.ObjectInstanceRen* %44 to i64, !dbg !5380
  %sub.ptr.rhs.cast = ptrtoint %struct.ObjectInstanceRen* %45 to i64, !dbg !5380
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !5380
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 288, !dbg !5380
  %conv27 = trunc i64 %sub.ptr.div to i32, !dbg !5377
  store i32 %conv27, i32* %obi, align 4, !dbg !5376
  call void @llvm.dbg.declare(metadata %struct.ISBShadfacA** %isbsa, metadata !5381, metadata !DIExpression()), !dbg !5382
  %46 = load %struct.ISBData*, %struct.ISBData** %isbdata, align 8, !dbg !5383
  %shadfaca28 = getelementptr inbounds %struct.ISBData, %struct.ISBData* %46, i32 0, i32 1, !dbg !5384
  %47 = load %struct.ISBShadfacA**, %struct.ISBShadfacA*** %shadfaca28, align 8, !dbg !5384
  %48 = load i32, i32* %sindex, align 4, !dbg !5385
  %idx.ext29 = sext i32 %48 to i64, !dbg !5386
  %add.ptr30 = getelementptr inbounds %struct.ISBShadfacA*, %struct.ISBShadfacA** %47, i64 %idx.ext29, !dbg !5386
  %49 = load %struct.ISBShadfacA*, %struct.ISBShadfacA** %add.ptr30, align 8, !dbg !5387
  store %struct.ISBShadfacA* %49, %struct.ISBShadfacA** %isbsa, align 8, !dbg !5382
  br label %while.cond, !dbg !5388

while.cond:                                       ; preds = %if.end, %if.else
  %50 = load %struct.ISBShadfacA*, %struct.ISBShadfacA** %isbsa, align 8, !dbg !5389
  %tobool31 = icmp ne %struct.ISBShadfacA* %50, null, !dbg !5388
  br i1 %tobool31, label %while.body, label %while.end, !dbg !5388

while.body:                                       ; preds = %while.cond
  %51 = load %struct.ISBShadfacA*, %struct.ISBShadfacA** %isbsa, align 8, !dbg !5390
  %facenr = getelementptr inbounds %struct.ISBShadfacA, %struct.ISBShadfacA* %51, i32 0, i32 2, !dbg !5393
  %52 = load i32, i32* %facenr, align 4, !dbg !5393
  %53 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !5394
  %facenr32 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %53, i32 0, i32 5, !dbg !5395
  %54 = load i32, i32* %facenr32, align 8, !dbg !5395
  %add33 = add nsw i32 %54, 1, !dbg !5396
  %cmp34 = icmp eq i32 %52, %add33, !dbg !5397
  br i1 %cmp34, label %land.lhs.true36, label %if.end, !dbg !5398

land.lhs.true36:                                  ; preds = %while.body
  %55 = load %struct.ISBShadfacA*, %struct.ISBShadfacA** %isbsa, align 8, !dbg !5399
  %obi37 = getelementptr inbounds %struct.ISBShadfacA, %struct.ISBShadfacA* %55, i32 0, i32 1, !dbg !5400
  %56 = load i32, i32* %obi37, align 8, !dbg !5400
  %57 = load i32, i32* %obi, align 4, !dbg !5401
  %cmp38 = icmp eq i32 %56, %57, !dbg !5402
  br i1 %cmp38, label %if.then40, label %if.end, !dbg !5403

if.then40:                                        ; preds = %land.lhs.true36
  %58 = load %struct.ISBShadfacA*, %struct.ISBShadfacA** %isbsa, align 8, !dbg !5404
  %shadfac = getelementptr inbounds %struct.ISBShadfacA, %struct.ISBShadfacA* %58, i32 0, i32 3, !dbg !5405
  %59 = load float, float* %shadfac, align 8, !dbg !5405
  %cmp41 = fcmp oge float %59, 1.000000e+00, !dbg !5406
  br i1 %cmp41, label %cond.true43, label %cond.false44, !dbg !5404

cond.true43:                                      ; preds = %if.then40
  br label %cond.end47, !dbg !5404

cond.false44:                                     ; preds = %if.then40
  %60 = load %struct.ISBShadfacA*, %struct.ISBShadfacA** %isbsa, align 8, !dbg !5407
  %shadfac45 = getelementptr inbounds %struct.ISBShadfacA, %struct.ISBShadfacA* %60, i32 0, i32 3, !dbg !5408
  %61 = load float, float* %shadfac45, align 8, !dbg !5408
  %sub46 = fsub float 1.000000e+00, %61, !dbg !5409
  br label %cond.end47, !dbg !5404

cond.end47:                                       ; preds = %cond.false44, %cond.true43
  %cond48 = phi float [ 0.000000e+00, %cond.true43 ], [ %sub46, %cond.false44 ], !dbg !5404
  store float %cond48, float* %retval, align 4, !dbg !5410
  br label %return, !dbg !5410

if.end:                                           ; preds = %land.lhs.true36, %while.body
  %62 = load %struct.ISBShadfacA*, %struct.ISBShadfacA** %isbsa, align 8, !dbg !5411
  %next = getelementptr inbounds %struct.ISBShadfacA, %struct.ISBShadfacA* %62, i32 0, i32 0, !dbg !5412
  %63 = load %struct.ISBShadfacA*, %struct.ISBShadfacA** %next, align 8, !dbg !5412
  store %struct.ISBShadfacA* %63, %struct.ISBShadfacA** %isbsa, align 8, !dbg !5413
  br label %while.cond, !dbg !5388, !llvm.loop !5414

while.end:                                        ; preds = %while.cond
  br label %if.end49

if.end49:                                         ; preds = %while.end
  br label %if.end50, !dbg !5416

if.end50:                                         ; preds = %if.end49, %land.lhs.true10, %if.then7
  br label %if.end51, !dbg !5417

if.end51:                                         ; preds = %if.end50, %land.lhs.true, %if.then4
  br label %if.end52, !dbg !5418

if.end52:                                         ; preds = %if.end51, %lor.lhs.false
  br label %if.end53, !dbg !5419

if.end53:                                         ; preds = %if.end52, %if.then
  br label %if.end54, !dbg !5420

if.end54:                                         ; preds = %if.end53, %entry
  store float 1.000000e+00, float* %retval, align 4, !dbg !5421
  br label %return, !dbg !5421

return:                                           ; preds = %if.end54, %cond.end47, %cond.end
  %64 = load float, float* %retval, align 4, !dbg !5422
  ret float %64, !dbg !5422
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @ISB_create(%struct.RenderPart* %pa, %struct.APixstr* %apixbuf) #0 !dbg !5423 {
entry:
  %pa.addr = alloca %struct.RenderPart*, align 8
  %apixbuf.addr = alloca %struct.APixstr*, align 8
  %go = alloca %struct.GroupObject*, align 8
  %lar = alloca %struct.LampRen*, align 8
  store %struct.RenderPart* %pa, %struct.RenderPart** %pa.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RenderPart** %pa.addr, metadata !5453, metadata !DIExpression()), !dbg !5454
  store %struct.APixstr* %apixbuf, %struct.APixstr** %apixbuf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.APixstr** %apixbuf.addr, metadata !5455, metadata !DIExpression()), !dbg !5456
  call void @llvm.dbg.declare(metadata %struct.GroupObject** %go, metadata !5457, metadata !DIExpression()), !dbg !5469
  %0 = load i8*, i8** getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 66, i32 0), align 8, !dbg !5470
  %1 = bitcast i8* %0 to %struct.GroupObject*, !dbg !5472
  store %struct.GroupObject* %1, %struct.GroupObject** %go, align 8, !dbg !5473
  br label %for.cond, !dbg !5474

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load %struct.GroupObject*, %struct.GroupObject** %go, align 8, !dbg !5475
  %tobool = icmp ne %struct.GroupObject* %2, null, !dbg !5477
  br i1 %tobool, label %for.body, label %for.end, !dbg !5477

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.LampRen** %lar, metadata !5478, metadata !DIExpression()), !dbg !5480
  %3 = load %struct.GroupObject*, %struct.GroupObject** %go, align 8, !dbg !5481
  %lampren = getelementptr inbounds %struct.GroupObject, %struct.GroupObject* %3, i32 0, i32 3, !dbg !5482
  %4 = load i8*, i8** %lampren, align 8, !dbg !5482
  %5 = bitcast i8* %4 to %struct.LampRen*, !dbg !5481
  store %struct.LampRen* %5, %struct.LampRen** %lar, align 8, !dbg !5480
  %6 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !5483
  %type = getelementptr inbounds %struct.LampRen, %struct.LampRen* %6, i32 0, i32 6, !dbg !5485
  %7 = load i16, i16* %type, align 8, !dbg !5485
  %conv = sext i16 %7 to i32, !dbg !5483
  %cmp = icmp eq i32 %conv, 2, !dbg !5486
  br i1 %cmp, label %land.lhs.true, label %if.end10, !dbg !5487

land.lhs.true:                                    ; preds = %for.body
  %8 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !5488
  %shb = getelementptr inbounds %struct.LampRen, %struct.LampRen* %8, i32 0, i32 57, !dbg !5489
  %9 = load %struct.ShadBuf*, %struct.ShadBuf** %shb, align 8, !dbg !5489
  %tobool2 = icmp ne %struct.ShadBuf* %9, null, !dbg !5488
  br i1 %tobool2, label %land.lhs.true3, label %if.end10, !dbg !5490

land.lhs.true3:                                   ; preds = %land.lhs.true
  %10 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !5491
  %buftype = getelementptr inbounds %struct.LampRen, %struct.LampRen* %10, i32 0, i32 36, !dbg !5492
  %11 = load i16, i16* %buftype, align 4, !dbg !5492
  %conv4 = sext i16 %11 to i32, !dbg !5491
  %cmp5 = icmp eq i32 %conv4, 1, !dbg !5493
  br i1 %cmp5, label %if.then, label %if.end10, !dbg !5494

if.then:                                          ; preds = %land.lhs.true3
  %12 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !5495
  %call = call i8* %12(i64 40, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0)), !dbg !5495
  %13 = bitcast i8* %call to %struct.ISBData*, !dbg !5495
  %14 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !5497
  %shb7 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %14, i32 0, i32 57, !dbg !5498
  %15 = load %struct.ShadBuf*, %struct.ShadBuf** %shb7, align 8, !dbg !5498
  %isb_result = getelementptr inbounds %struct.ShadBuf, %struct.ShadBuf* %15, i32 0, i32 17, !dbg !5499
  %16 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !5500
  %thread = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %16, i32 0, i32 20, !dbg !5501
  %17 = load i16, i16* %thread, align 2, !dbg !5501
  %idxprom = sext i16 %17 to i64, !dbg !5497
  %arrayidx = getelementptr inbounds [1 x %struct.ISBData*], [1 x %struct.ISBData*]* %isb_result, i64 0, i64 %idxprom, !dbg !5497
  store %struct.ISBData* %13, %struct.ISBData** %arrayidx, align 8, !dbg !5502
  %18 = load %struct.APixstr*, %struct.APixstr** %apixbuf.addr, align 8, !dbg !5503
  %tobool8 = icmp ne %struct.APixstr* %18, null, !dbg !5503
  br i1 %tobool8, label %if.then9, label %if.else, !dbg !5505

if.then9:                                         ; preds = %if.then
  %19 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !5506
  %20 = load %struct.APixstr*, %struct.APixstr** %apixbuf.addr, align 8, !dbg !5507
  %21 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !5508
  call void @isb_make_buffer_transp(%struct.RenderPart* %19, %struct.APixstr* %20, %struct.LampRen* %21), !dbg !5509
  br label %if.end, !dbg !5509

if.else:                                          ; preds = %if.then
  %22 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !5510
  %23 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !5511
  call void @isb_make_buffer(%struct.RenderPart* %22, %struct.LampRen* %23), !dbg !5512
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then9
  br label %if.end10, !dbg !5513

if.end10:                                         ; preds = %if.end, %land.lhs.true3, %land.lhs.true, %for.body
  br label %for.inc, !dbg !5514

for.inc:                                          ; preds = %if.end10
  %24 = load %struct.GroupObject*, %struct.GroupObject** %go, align 8, !dbg !5515
  %next = getelementptr inbounds %struct.GroupObject, %struct.GroupObject* %24, i32 0, i32 0, !dbg !5516
  %25 = load %struct.GroupObject*, %struct.GroupObject** %next, align 8, !dbg !5516
  store %struct.GroupObject* %25, %struct.GroupObject** %go, align 8, !dbg !5517
  br label %for.cond, !dbg !5518, !llvm.loop !5519

for.end:                                          ; preds = %for.cond
  ret void, !dbg !5521
}

; Function Attrs: noinline nounwind uwtable
define internal void @isb_make_buffer_transp(%struct.RenderPart* %pa, %struct.APixstr* %apixbuf, %struct.LampRen* %lar) #0 !dbg !5522 {
entry:
  %pa.addr = alloca %struct.RenderPart*, align 8
  %apixbuf.addr = alloca %struct.APixstr*, align 8
  %lar.addr = alloca %struct.LampRen*, align 8
  %shb = alloca %struct.ShadBuf*, align 8
  %isbdata = alloca %struct.ISBData*, align 8
  %samp = alloca %struct.ISBSampleA*, align 8
  %samplebuf = alloca [16 x %struct.ISBSampleA**], align 16
  %root = alloca %struct.ISBBranch, align 8
  %memarena = alloca %struct.MemArena*, align 8
  %ap = alloca %struct.APixstr*, align 8
  %x = alloca i32, align 4
  %y = alloca i32, align 4
  %sindex = alloca i32, align 4
  %sample = alloca i32, align 4
  %bsp_err = alloca i32, align 4
  %apn = alloca %struct.APixstr*, align 8
  %xs = alloca float, align 4
  %ys = alloca float, align 4
  %a = alloca i32, align 4
  %obi = alloca %struct.ObjectInstanceRen*, align 8
  %obr = alloca %struct.ObjectRen*, align 8
  %vlr = alloca %struct.VlakRen*, align 8
  %zco = alloca [3 x float], align 4
  %mask = alloca i32, align 4
  %isbsa = alloca %struct.ISBShadfacA**, align 8
  %apn188 = alloca %struct.APixstr*, align 8
  %a192 = alloca i32, align 4
  store %struct.RenderPart* %pa, %struct.RenderPart** %pa.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RenderPart** %pa.addr, metadata !5525, metadata !DIExpression()), !dbg !5526
  store %struct.APixstr* %apixbuf, %struct.APixstr** %apixbuf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.APixstr** %apixbuf.addr, metadata !5527, metadata !DIExpression()), !dbg !5528
  store %struct.LampRen* %lar, %struct.LampRen** %lar.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.LampRen** %lar.addr, metadata !5529, metadata !DIExpression()), !dbg !5530
  call void @llvm.dbg.declare(metadata %struct.ShadBuf** %shb, metadata !5531, metadata !DIExpression()), !dbg !5532
  %0 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !5533
  %shb1 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %0, i32 0, i32 57, !dbg !5534
  %1 = load %struct.ShadBuf*, %struct.ShadBuf** %shb1, align 8, !dbg !5534
  store %struct.ShadBuf* %1, %struct.ShadBuf** %shb, align 8, !dbg !5532
  call void @llvm.dbg.declare(metadata %struct.ISBData** %isbdata, metadata !5535, metadata !DIExpression()), !dbg !5536
  call void @llvm.dbg.declare(metadata %struct.ISBSampleA** %samp, metadata !5537, metadata !DIExpression()), !dbg !5548
  call void @llvm.dbg.declare(metadata [16 x %struct.ISBSampleA**]* %samplebuf, metadata !5549, metadata !DIExpression()), !dbg !5552
  call void @llvm.dbg.declare(metadata %struct.ISBBranch* %root, metadata !5553, metadata !DIExpression()), !dbg !5554
  call void @llvm.dbg.declare(metadata %struct.MemArena** %memarena, metadata !5555, metadata !DIExpression()), !dbg !5558
  call void @llvm.dbg.declare(metadata %struct.APixstr** %ap, metadata !5559, metadata !DIExpression()), !dbg !5560
  call void @llvm.dbg.declare(metadata i32* %x, metadata !5561, metadata !DIExpression()), !dbg !5562
  call void @llvm.dbg.declare(metadata i32* %y, metadata !5563, metadata !DIExpression()), !dbg !5564
  call void @llvm.dbg.declare(metadata i32* %sindex, metadata !5565, metadata !DIExpression()), !dbg !5566
  call void @llvm.dbg.declare(metadata i32* %sample, metadata !5567, metadata !DIExpression()), !dbg !5568
  call void @llvm.dbg.declare(metadata i32* %bsp_err, metadata !5569, metadata !DIExpression()), !dbg !5570
  store i32 0, i32* %bsp_err, align 4, !dbg !5570
  %2 = load %struct.ShadBuf*, %struct.ShadBuf** %shb, align 8, !dbg !5571
  %isb_result = getelementptr inbounds %struct.ShadBuf, %struct.ShadBuf* %2, i32 0, i32 17, !dbg !5572
  %3 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !5573
  %thread = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %3, i32 0, i32 20, !dbg !5574
  %4 = load i16, i16* %thread, align 2, !dbg !5574
  %idxprom = sext i16 %4 to i64, !dbg !5571
  %arrayidx = getelementptr inbounds [1 x %struct.ISBData*], [1 x %struct.ISBData*]* %isb_result, i64 0, i64 %idxprom, !dbg !5571
  %5 = load %struct.ISBData*, %struct.ISBData** %arrayidx, align 8, !dbg !5571
  store %struct.ISBData* %5, %struct.ISBData** %isbdata, align 8, !dbg !5575
  %6 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !5576
  %disprect = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %6, i32 0, i32 13, !dbg !5577
  %xmin = getelementptr inbounds %struct.rcti, %struct.rcti* %disprect, i32 0, i32 0, !dbg !5578
  %7 = load i32, i32* %xmin, align 8, !dbg !5578
  %8 = load %struct.ISBData*, %struct.ISBData** %isbdata, align 8, !dbg !5579
  %minx = getelementptr inbounds %struct.ISBData, %struct.ISBData* %8, i32 0, i32 3, !dbg !5580
  store i32 %7, i32* %minx, align 8, !dbg !5581
  %9 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !5582
  %disprect2 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %9, i32 0, i32 13, !dbg !5583
  %ymin = getelementptr inbounds %struct.rcti, %struct.rcti* %disprect2, i32 0, i32 2, !dbg !5584
  %10 = load i32, i32* %ymin, align 8, !dbg !5584
  %11 = load %struct.ISBData*, %struct.ISBData** %isbdata, align 8, !dbg !5585
  %miny = getelementptr inbounds %struct.ISBData, %struct.ISBData* %11, i32 0, i32 4, !dbg !5586
  store i32 %10, i32* %miny, align 4, !dbg !5587
  %12 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !5588
  %rectx = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %12, i32 0, i32 14, !dbg !5589
  %13 = load i32, i32* %rectx, align 8, !dbg !5589
  %14 = load %struct.ISBData*, %struct.ISBData** %isbdata, align 8, !dbg !5590
  %rectx3 = getelementptr inbounds %struct.ISBData, %struct.ISBData* %14, i32 0, i32 5, !dbg !5591
  store i32 %13, i32* %rectx3, align 8, !dbg !5592
  %15 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !5593
  %recty = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %15, i32 0, i32 15, !dbg !5594
  %16 = load i32, i32* %recty, align 4, !dbg !5594
  %17 = load %struct.ISBData*, %struct.ISBData** %isbdata, align 8, !dbg !5595
  %recty4 = getelementptr inbounds %struct.ISBData, %struct.ISBData* %17, i32 0, i32 6, !dbg !5596
  store i32 %16, i32* %recty4, align 4, !dbg !5597
  %call = call %struct.MemArena* @BLI_memarena_new(i64 2097152, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.17, i64 0, i64 0)), !dbg !5598
  store %struct.MemArena* %call, %struct.MemArena** %memarena, align 8, !dbg !5599
  %18 = load %struct.MemArena*, %struct.MemArena** %memarena, align 8, !dbg !5600
  call void @BLI_memarena_use_calloc(%struct.MemArena* %18), !dbg !5601
  store i32 0, i32* %sample, align 4, !dbg !5602
  br label %for.cond, !dbg !5604

for.cond:                                         ; preds = %for.inc, %entry
  %19 = load i32, i32* %sample, align 4, !dbg !5605
  %20 = load i16, i16* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 5), align 2, !dbg !5607
  %conv = sext i16 %20 to i32, !dbg !5608
  %tobool = icmp ne i32 %conv, 0, !dbg !5608
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !5608

cond.true:                                        ; preds = %for.cond
  %21 = load i16, i16* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 5), align 2, !dbg !5609
  %conv5 = sext i16 %21 to i32, !dbg !5610
  br label %cond.end, !dbg !5608

cond.false:                                       ; preds = %for.cond
  br label %cond.end, !dbg !5608

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv5, %cond.true ], [ 1, %cond.false ], !dbg !5608
  %cmp = icmp slt i32 %19, %cond, !dbg !5611
  br i1 %cmp, label %for.body, label %for.end, !dbg !5612

for.body:                                         ; preds = %cond.end
  %22 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !5613
  %23 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !5614
  %rectx7 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %23, i32 0, i32 14, !dbg !5615
  %24 = load i32, i32* %rectx7, align 8, !dbg !5615
  %conv8 = sext i32 %24 to i64, !dbg !5614
  %mul = mul i64 8, %conv8, !dbg !5616
  %25 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !5617
  %recty9 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %25, i32 0, i32 15, !dbg !5618
  %26 = load i32, i32* %recty9, align 4, !dbg !5618
  %conv10 = sext i32 %26 to i64, !dbg !5617
  %mul11 = mul i64 %mul, %conv10, !dbg !5619
  %call12 = call i8* %22(i64 %mul11, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.18, i64 0, i64 0)), !dbg !5613
  %27 = bitcast i8* %call12 to %struct.ISBSampleA**, !dbg !5613
  %28 = load i32, i32* %sample, align 4, !dbg !5620
  %idxprom13 = sext i32 %28 to i64, !dbg !5621
  %arrayidx14 = getelementptr inbounds [16 x %struct.ISBSampleA**], [16 x %struct.ISBSampleA**]* %samplebuf, i64 0, i64 %idxprom13, !dbg !5621
  store %struct.ISBSampleA** %27, %struct.ISBSampleA*** %arrayidx14, align 8, !dbg !5622
  br label %for.inc, !dbg !5621

for.inc:                                          ; preds = %for.body
  %29 = load i32, i32* %sample, align 4, !dbg !5623
  %inc = add nsw i32 %29, 1, !dbg !5623
  store i32 %inc, i32* %sample, align 4, !dbg !5623
  br label %for.cond, !dbg !5624, !llvm.loop !5625

for.end:                                          ; preds = %cond.end
  %30 = bitcast %struct.ISBBranch* %root to i8*, !dbg !5627
  call void @llvm.memset.p0i8.i64(i8* align 8 %30, i8 0, i64 64, i1 false), !dbg !5627
  %31 = load %struct.ShadBuf*, %struct.ShadBuf** %shb, align 8, !dbg !5628
  %size = getelementptr inbounds %struct.ShadBuf, %struct.ShadBuf* %31, i32 0, i32 14, !dbg !5629
  %32 = load i32, i32* %size, align 8, !dbg !5629
  %conv15 = sitofp i32 %32 to float, !dbg !5630
  %box = getelementptr inbounds %struct.ISBBranch, %struct.ISBBranch* %root, i32 0, i32 3, !dbg !5631
  %xmin16 = getelementptr inbounds %struct.Boxf, %struct.Boxf* %box, i32 0, i32 0, !dbg !5632
  store float %conv15, float* %xmin16, align 8, !dbg !5633
  %33 = load %struct.ShadBuf*, %struct.ShadBuf** %shb, align 8, !dbg !5634
  %size17 = getelementptr inbounds %struct.ShadBuf, %struct.ShadBuf* %33, i32 0, i32 14, !dbg !5635
  %34 = load i32, i32* %size17, align 8, !dbg !5635
  %conv18 = sitofp i32 %34 to float, !dbg !5636
  %box19 = getelementptr inbounds %struct.ISBBranch, %struct.ISBBranch* %root, i32 0, i32 3, !dbg !5637
  %ymin20 = getelementptr inbounds %struct.Boxf, %struct.Boxf* %box19, i32 0, i32 2, !dbg !5638
  store float %conv18, float* %ymin20, align 8, !dbg !5639
  %35 = load %struct.APixstr*, %struct.APixstr** %apixbuf.addr, align 8, !dbg !5640
  store %struct.APixstr* %35, %struct.APixstr** %ap, align 8, !dbg !5642
  store i32 0, i32* %sindex, align 4, !dbg !5643
  store i32 0, i32* %y, align 4, !dbg !5644
  br label %for.cond21, !dbg !5645

for.cond21:                                       ; preds = %for.inc154, %for.end
  %36 = load i32, i32* %y, align 4, !dbg !5646
  %37 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !5648
  %recty22 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %37, i32 0, i32 15, !dbg !5649
  %38 = load i32, i32* %recty22, align 4, !dbg !5649
  %cmp23 = icmp slt i32 %36, %38, !dbg !5650
  br i1 %cmp23, label %for.body25, label %for.end156, !dbg !5651

for.body25:                                       ; preds = %for.cond21
  store i32 0, i32* %x, align 4, !dbg !5652
  br label %for.cond26, !dbg !5655

for.cond26:                                       ; preds = %for.inc150, %for.body25
  %39 = load i32, i32* %x, align 4, !dbg !5656
  %40 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !5658
  %rectx27 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %40, i32 0, i32 14, !dbg !5659
  %41 = load i32, i32* %rectx27, align 8, !dbg !5659
  %cmp28 = icmp slt i32 %39, %41, !dbg !5660
  br i1 %cmp28, label %for.body30, label %for.end153, !dbg !5661

for.body30:                                       ; preds = %for.cond26
  %42 = load %struct.APixstr*, %struct.APixstr** %ap, align 8, !dbg !5662
  %p = getelementptr inbounds %struct.APixstr, %struct.APixstr* %42, i32 0, i32 2, !dbg !5665
  %arrayidx31 = getelementptr inbounds [4 x i32], [4 x i32]* %p, i64 0, i64 0, !dbg !5662
  %43 = load i32, i32* %arrayidx31, align 8, !dbg !5662
  %tobool32 = icmp ne i32 %43, 0, !dbg !5662
  br i1 %tobool32, label %if.then, label %if.end149, !dbg !5666

if.then:                                          ; preds = %for.body30
  call void @llvm.dbg.declare(metadata %struct.APixstr** %apn, metadata !5667, metadata !DIExpression()), !dbg !5669
  call void @llvm.dbg.declare(metadata float* %xs, metadata !5670, metadata !DIExpression()), !dbg !5671
  %44 = load i32, i32* %x, align 4, !dbg !5672
  %45 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !5673
  %disprect33 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %45, i32 0, i32 13, !dbg !5674
  %xmin34 = getelementptr inbounds %struct.rcti, %struct.rcti* %disprect33, i32 0, i32 0, !dbg !5675
  %46 = load i32, i32* %xmin34, align 8, !dbg !5675
  %add = add nsw i32 %44, %46, !dbg !5676
  %conv35 = sitofp i32 %add to float, !dbg !5677
  store float %conv35, float* %xs, align 4, !dbg !5671
  call void @llvm.dbg.declare(metadata float* %ys, metadata !5678, metadata !DIExpression()), !dbg !5679
  %47 = load i32, i32* %y, align 4, !dbg !5680
  %48 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !5681
  %disprect36 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %48, i32 0, i32 13, !dbg !5682
  %ymin37 = getelementptr inbounds %struct.rcti, %struct.rcti* %disprect36, i32 0, i32 2, !dbg !5683
  %49 = load i32, i32* %ymin37, align 8, !dbg !5683
  %add38 = add nsw i32 %47, %49, !dbg !5684
  %conv39 = sitofp i32 %add38 to float, !dbg !5685
  store float %conv39, float* %ys, align 4, !dbg !5679
  %50 = load %struct.APixstr*, %struct.APixstr** %ap, align 8, !dbg !5686
  store %struct.APixstr* %50, %struct.APixstr** %apn, align 8, !dbg !5688
  br label %for.cond40, !dbg !5689

for.cond40:                                       ; preds = %for.inc147, %if.then
  %51 = load %struct.APixstr*, %struct.APixstr** %apn, align 8, !dbg !5690
  %tobool41 = icmp ne %struct.APixstr* %51, null, !dbg !5692
  br i1 %tobool41, label %for.body42, label %for.end148, !dbg !5692

for.body42:                                       ; preds = %for.cond40
  call void @llvm.dbg.declare(metadata i32* %a, metadata !5693, metadata !DIExpression()), !dbg !5695
  store i32 0, i32* %a, align 4, !dbg !5696
  br label %for.cond43, !dbg !5698

for.cond43:                                       ; preds = %for.inc144, %for.body42
  %52 = load i32, i32* %a, align 4, !dbg !5699
  %cmp44 = icmp slt i32 %52, 4, !dbg !5701
  br i1 %cmp44, label %for.body46, label %for.end146, !dbg !5702

for.body46:                                       ; preds = %for.cond43
  %53 = load %struct.APixstr*, %struct.APixstr** %apn, align 8, !dbg !5703
  %p47 = getelementptr inbounds %struct.APixstr, %struct.APixstr* %53, i32 0, i32 2, !dbg !5706
  %54 = load i32, i32* %a, align 4, !dbg !5707
  %idxprom48 = sext i32 %54 to i64, !dbg !5703
  %arrayidx49 = getelementptr inbounds [4 x i32], [4 x i32]* %p47, i64 0, i64 %idxprom48, !dbg !5703
  %55 = load i32, i32* %arrayidx49, align 4, !dbg !5703
  %tobool50 = icmp ne i32 %55, 0, !dbg !5703
  br i1 %tobool50, label %if.then51, label %if.end143, !dbg !5708

if.then51:                                        ; preds = %for.body46
  call void @llvm.dbg.declare(metadata %struct.ObjectInstanceRen** %obi, metadata !5709, metadata !DIExpression()), !dbg !5711
  %56 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 69), align 8, !dbg !5712
  %57 = load %struct.APixstr*, %struct.APixstr** %apn, align 8, !dbg !5713
  %obi52 = getelementptr inbounds %struct.APixstr, %struct.APixstr* %57, i32 0, i32 3, !dbg !5714
  %58 = load i32, i32* %a, align 4, !dbg !5715
  %idxprom53 = sext i32 %58 to i64, !dbg !5713
  %arrayidx54 = getelementptr inbounds [4 x i32], [4 x i32]* %obi52, i64 0, i64 %idxprom53, !dbg !5713
  %59 = load i32, i32* %arrayidx54, align 4, !dbg !5713
  %idxprom55 = sext i32 %59 to i64, !dbg !5716
  %arrayidx56 = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %56, i64 %idxprom55, !dbg !5716
  store %struct.ObjectInstanceRen* %arrayidx56, %struct.ObjectInstanceRen** %obi, align 8, !dbg !5711
  call void @llvm.dbg.declare(metadata %struct.ObjectRen** %obr, metadata !5717, metadata !DIExpression()), !dbg !5718
  %60 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi, align 8, !dbg !5719
  %obr57 = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %60, i32 0, i32 2, !dbg !5720
  %61 = load %struct.ObjectRen*, %struct.ObjectRen** %obr57, align 8, !dbg !5720
  store %struct.ObjectRen* %61, %struct.ObjectRen** %obr, align 8, !dbg !5718
  call void @llvm.dbg.declare(metadata %struct.VlakRen** %vlr, metadata !5721, metadata !DIExpression()), !dbg !5722
  %62 = load %struct.ObjectRen*, %struct.ObjectRen** %obr, align 8, !dbg !5723
  %63 = load %struct.APixstr*, %struct.APixstr** %apn, align 8, !dbg !5724
  %p58 = getelementptr inbounds %struct.APixstr, %struct.APixstr* %63, i32 0, i32 2, !dbg !5725
  %64 = load i32, i32* %a, align 4, !dbg !5726
  %idxprom59 = sext i32 %64 to i64, !dbg !5724
  %arrayidx60 = getelementptr inbounds [4 x i32], [4 x i32]* %p58, i64 0, i64 %idxprom59, !dbg !5724
  %65 = load i32, i32* %arrayidx60, align 4, !dbg !5724
  %sub = sub nsw i32 %65, 1, !dbg !5727
  %and = and i32 %sub, 134217727, !dbg !5728
  %call61 = call %struct.VlakRen* @RE_findOrAddVlak(%struct.ObjectRen* %62, i32 %and), !dbg !5729
  store %struct.VlakRen* %call61, %struct.VlakRen** %vlr, align 8, !dbg !5722
  call void @llvm.dbg.declare(metadata [3 x float]* %zco, metadata !5730, metadata !DIExpression()), !dbg !5731
  %66 = load %struct.APixstr*, %struct.APixstr** %apn, align 8, !dbg !5732
  %shadfac = getelementptr inbounds %struct.APixstr, %struct.APixstr* %66, i32 0, i32 4, !dbg !5733
  %67 = load i32, i32* %a, align 4, !dbg !5734
  %idxprom62 = sext i32 %67 to i64, !dbg !5732
  %arrayidx63 = getelementptr inbounds [4 x i16], [4 x i16]* %shadfac, i64 0, i64 %idxprom62, !dbg !5732
  store i16 0, i16* %arrayidx63, align 2, !dbg !5735
  %68 = load i16, i16* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 5), align 2, !dbg !5736
  %tobool64 = icmp ne i16 %68, 0, !dbg !5738
  br i1 %tobool64, label %if.then65, label %if.else, !dbg !5739

if.then65:                                        ; preds = %if.then51
  store i32 0, i32* %sample, align 4, !dbg !5740
  br label %for.cond66, !dbg !5743

for.cond66:                                       ; preds = %for.inc111, %if.then65
  %69 = load i32, i32* %sample, align 4, !dbg !5744
  %70 = load i16, i16* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 5), align 2, !dbg !5746
  %conv67 = sext i16 %70 to i32, !dbg !5747
  %cmp68 = icmp slt i32 %69, %conv67, !dbg !5748
  br i1 %cmp68, label %for.body70, label %for.end113, !dbg !5749

for.body70:                                       ; preds = %for.cond66
  call void @llvm.dbg.declare(metadata i32* %mask, metadata !5750, metadata !DIExpression()), !dbg !5752
  %71 = load i32, i32* %sample, align 4, !dbg !5753
  %shl = shl i32 1, %71, !dbg !5754
  store i32 %shl, i32* %mask, align 4, !dbg !5752
  %72 = load %struct.APixstr*, %struct.APixstr** %apn, align 8, !dbg !5755
  %mask71 = getelementptr inbounds %struct.APixstr, %struct.APixstr* %72, i32 0, i32 0, !dbg !5757
  %73 = load i32, i32* %a, align 4, !dbg !5758
  %idxprom72 = sext i32 %73 to i64, !dbg !5755
  %arrayidx73 = getelementptr inbounds [4 x i16], [4 x i16]* %mask71, i64 0, i64 %idxprom72, !dbg !5755
  %74 = load i16, i16* %arrayidx73, align 2, !dbg !5755
  %conv74 = zext i16 %74 to i32, !dbg !5755
  %75 = load i32, i32* %mask, align 4, !dbg !5759
  %and75 = and i32 %conv74, %75, !dbg !5760
  %tobool76 = icmp ne i32 %and75, 0, !dbg !5760
  br i1 %tobool76, label %if.then77, label %if.end110, !dbg !5761

if.then77:                                        ; preds = %for.body70
  %76 = load %struct.ShadBuf*, %struct.ShadBuf** %shb, align 8, !dbg !5762
  %77 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi, align 8, !dbg !5765
  %78 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !5766
  %79 = load float, float* %xs, align 4, !dbg !5767
  %80 = load i32, i32* %sample, align 4, !dbg !5768
  %idxprom78 = sext i32 %80 to i64, !dbg !5769
  %arrayidx79 = getelementptr inbounds [32 x [2 x float]], [32 x [2 x float]]* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 39), i64 0, i64 %idxprom78, !dbg !5769
  %arrayidx80 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx79, i64 0, i64 0, !dbg !5769
  %81 = load float, float* %arrayidx80, align 8, !dbg !5769
  %add81 = fadd float %79, %81, !dbg !5770
  %82 = load float, float* %ys, align 4, !dbg !5771
  %83 = load i32, i32* %sample, align 4, !dbg !5772
  %idxprom82 = sext i32 %83 to i64, !dbg !5773
  %arrayidx83 = getelementptr inbounds [32 x [2 x float]], [32 x [2 x float]]* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 39), i64 0, i64 %idxprom82, !dbg !5773
  %arrayidx84 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx83, i64 0, i64 1, !dbg !5773
  %84 = load float, float* %arrayidx84, align 4, !dbg !5773
  %add85 = fadd float %82, %84, !dbg !5774
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %zco, i64 0, i64 0, !dbg !5775
  %call86 = call i32 @viewpixel_to_lampbuf(%struct.ShadBuf* %76, %struct.ObjectInstanceRen* %77, %struct.VlakRen* %78, float %add81, float %add85, float* %arraydecay), !dbg !5776
  %tobool87 = icmp ne i32 %call86, 0, !dbg !5776
  br i1 %tobool87, label %if.then88, label %if.end, !dbg !5777

if.then88:                                        ; preds = %if.then77
  %85 = load i32, i32* %sample, align 4, !dbg !5778
  %idxprom89 = sext i32 %85 to i64, !dbg !5780
  %arrayidx90 = getelementptr inbounds [16 x %struct.ISBSampleA**], [16 x %struct.ISBSampleA**]* %samplebuf, i64 0, i64 %idxprom89, !dbg !5780
  %86 = load %struct.ISBSampleA**, %struct.ISBSampleA*** %arrayidx90, align 8, !dbg !5780
  %87 = load i32, i32* %sindex, align 4, !dbg !5781
  %idx.ext = sext i32 %87 to i64, !dbg !5782
  %add.ptr = getelementptr inbounds %struct.ISBSampleA*, %struct.ISBSampleA** %86, i64 %idx.ext, !dbg !5782
  %88 = load %struct.MemArena*, %struct.MemArena** %memarena, align 8, !dbg !5783
  %call91 = call %struct.ISBSampleA* @isb_alloc_sample_transp(%struct.ISBSampleA** %add.ptr, %struct.MemArena* %88), !dbg !5784
  store %struct.ISBSampleA* %call91, %struct.ISBSampleA** %samp, align 8, !dbg !5785
  %89 = load %struct.APixstr*, %struct.APixstr** %apn, align 8, !dbg !5786
  %obi92 = getelementptr inbounds %struct.APixstr, %struct.APixstr* %89, i32 0, i32 3, !dbg !5787
  %90 = load i32, i32* %a, align 4, !dbg !5788
  %idxprom93 = sext i32 %90 to i64, !dbg !5786
  %arrayidx94 = getelementptr inbounds [4 x i32], [4 x i32]* %obi92, i64 0, i64 %idxprom93, !dbg !5786
  %91 = load i32, i32* %arrayidx94, align 4, !dbg !5786
  %92 = load %struct.ISBSampleA*, %struct.ISBSampleA** %samp, align 8, !dbg !5789
  %obi95 = getelementptr inbounds %struct.ISBSampleA, %struct.ISBSampleA* %92, i32 0, i32 2, !dbg !5790
  store i32 %91, i32* %obi95, align 8, !dbg !5791
  %93 = load %struct.APixstr*, %struct.APixstr** %apn, align 8, !dbg !5792
  %p96 = getelementptr inbounds %struct.APixstr, %struct.APixstr* %93, i32 0, i32 2, !dbg !5793
  %94 = load i32, i32* %a, align 4, !dbg !5794
  %idxprom97 = sext i32 %94 to i64, !dbg !5792
  %arrayidx98 = getelementptr inbounds [4 x i32], [4 x i32]* %p96, i64 0, i64 %idxprom97, !dbg !5792
  %95 = load i32, i32* %arrayidx98, align 4, !dbg !5792
  %and99 = and i32 %95, -134217729, !dbg !5795
  %96 = load %struct.ISBSampleA*, %struct.ISBSampleA** %samp, align 8, !dbg !5796
  %facenr = getelementptr inbounds %struct.ISBSampleA, %struct.ISBSampleA* %96, i32 0, i32 3, !dbg !5797
  store i32 %and99, i32* %facenr, align 4, !dbg !5798
  %97 = load %struct.APixstr*, %struct.APixstr** %apn, align 8, !dbg !5799
  %shadfac100 = getelementptr inbounds %struct.APixstr, %struct.APixstr* %97, i32 0, i32 4, !dbg !5800
  %98 = load i32, i32* %a, align 4, !dbg !5801
  %idxprom101 = sext i32 %98 to i64, !dbg !5799
  %arrayidx102 = getelementptr inbounds [4 x i16], [4 x i16]* %shadfac100, i64 0, i64 %idxprom101, !dbg !5799
  %99 = load %struct.ISBSampleA*, %struct.ISBSampleA** %samp, align 8, !dbg !5802
  %shadfac103 = getelementptr inbounds %struct.ISBSampleA, %struct.ISBSampleA* %99, i32 0, i32 1, !dbg !5803
  store i16* %arrayidx102, i16** %shadfac103, align 8, !dbg !5804
  %100 = load %struct.ISBSampleA*, %struct.ISBSampleA** %samp, align 8, !dbg !5805
  %zco104 = getelementptr inbounds %struct.ISBSampleA, %struct.ISBSampleA* %100, i32 0, i32 0, !dbg !5806
  %arraydecay105 = getelementptr inbounds [3 x float], [3 x float]* %zco104, i64 0, i64 0, !dbg !5805
  %arraydecay106 = getelementptr inbounds [3 x float], [3 x float]* %zco, i64 0, i64 0, !dbg !5807
  call void @copy_v3_v3(float* %arraydecay105, float* %arraydecay106), !dbg !5808
  %box107 = getelementptr inbounds %struct.ISBBranch, %struct.ISBBranch* %root, i32 0, i32 3, !dbg !5809
  %101 = bitcast %struct.Boxf* %box107 to %struct.rctf*, !dbg !5810
  %102 = load %struct.ISBSampleA*, %struct.ISBSampleA** %samp, align 8, !dbg !5811
  %zco108 = getelementptr inbounds %struct.ISBSampleA, %struct.ISBSampleA* %102, i32 0, i32 0, !dbg !5812
  %arraydecay109 = getelementptr inbounds [3 x float], [3 x float]* %zco108, i64 0, i64 0, !dbg !5811
  call void @bound_rectf(%struct.rctf* %101, float* %arraydecay109), !dbg !5813
  br label %if.end, !dbg !5814

if.end:                                           ; preds = %if.then88, %if.then77
  br label %if.end110, !dbg !5815

if.end110:                                        ; preds = %if.end, %for.body70
  br label %for.inc111, !dbg !5816

for.inc111:                                       ; preds = %if.end110
  %103 = load i32, i32* %sample, align 4, !dbg !5817
  %inc112 = add nsw i32 %103, 1, !dbg !5817
  store i32 %inc112, i32* %sample, align 4, !dbg !5817
  br label %for.cond66, !dbg !5818, !llvm.loop !5819

for.end113:                                       ; preds = %for.cond66
  br label %if.end142, !dbg !5821

if.else:                                          ; preds = %if.then51
  %104 = load %struct.ShadBuf*, %struct.ShadBuf** %shb, align 8, !dbg !5822
  %105 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi, align 8, !dbg !5825
  %106 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !5826
  %107 = load float, float* %xs, align 4, !dbg !5827
  %108 = load float, float* %ys, align 4, !dbg !5828
  %arraydecay114 = getelementptr inbounds [3 x float], [3 x float]* %zco, i64 0, i64 0, !dbg !5829
  %call115 = call i32 @viewpixel_to_lampbuf(%struct.ShadBuf* %104, %struct.ObjectInstanceRen* %105, %struct.VlakRen* %106, float %107, float %108, float* %arraydecay114), !dbg !5830
  %tobool116 = icmp ne i32 %call115, 0, !dbg !5830
  br i1 %tobool116, label %if.then117, label %if.end141, !dbg !5831

if.then117:                                       ; preds = %if.else
  %arrayidx118 = getelementptr inbounds [16 x %struct.ISBSampleA**], [16 x %struct.ISBSampleA**]* %samplebuf, i64 0, i64 0, !dbg !5832
  %109 = load %struct.ISBSampleA**, %struct.ISBSampleA*** %arrayidx118, align 16, !dbg !5832
  %110 = load i32, i32* %sindex, align 4, !dbg !5834
  %idx.ext119 = sext i32 %110 to i64, !dbg !5835
  %add.ptr120 = getelementptr inbounds %struct.ISBSampleA*, %struct.ISBSampleA** %109, i64 %idx.ext119, !dbg !5835
  %111 = load %struct.MemArena*, %struct.MemArena** %memarena, align 8, !dbg !5836
  %call121 = call %struct.ISBSampleA* @isb_alloc_sample_transp(%struct.ISBSampleA** %add.ptr120, %struct.MemArena* %111), !dbg !5837
  store %struct.ISBSampleA* %call121, %struct.ISBSampleA** %samp, align 8, !dbg !5838
  %112 = load %struct.APixstr*, %struct.APixstr** %apn, align 8, !dbg !5839
  %obi122 = getelementptr inbounds %struct.APixstr, %struct.APixstr* %112, i32 0, i32 3, !dbg !5840
  %113 = load i32, i32* %a, align 4, !dbg !5841
  %idxprom123 = sext i32 %113 to i64, !dbg !5839
  %arrayidx124 = getelementptr inbounds [4 x i32], [4 x i32]* %obi122, i64 0, i64 %idxprom123, !dbg !5839
  %114 = load i32, i32* %arrayidx124, align 4, !dbg !5839
  %115 = load %struct.ISBSampleA*, %struct.ISBSampleA** %samp, align 8, !dbg !5842
  %obi125 = getelementptr inbounds %struct.ISBSampleA, %struct.ISBSampleA* %115, i32 0, i32 2, !dbg !5843
  store i32 %114, i32* %obi125, align 8, !dbg !5844
  %116 = load %struct.APixstr*, %struct.APixstr** %apn, align 8, !dbg !5845
  %p126 = getelementptr inbounds %struct.APixstr, %struct.APixstr* %116, i32 0, i32 2, !dbg !5846
  %117 = load i32, i32* %a, align 4, !dbg !5847
  %idxprom127 = sext i32 %117 to i64, !dbg !5845
  %arrayidx128 = getelementptr inbounds [4 x i32], [4 x i32]* %p126, i64 0, i64 %idxprom127, !dbg !5845
  %118 = load i32, i32* %arrayidx128, align 4, !dbg !5845
  %and129 = and i32 %118, -134217729, !dbg !5848
  %119 = load %struct.ISBSampleA*, %struct.ISBSampleA** %samp, align 8, !dbg !5849
  %facenr130 = getelementptr inbounds %struct.ISBSampleA, %struct.ISBSampleA* %119, i32 0, i32 3, !dbg !5850
  store i32 %and129, i32* %facenr130, align 4, !dbg !5851
  %120 = load %struct.APixstr*, %struct.APixstr** %apn, align 8, !dbg !5852
  %shadfac131 = getelementptr inbounds %struct.APixstr, %struct.APixstr* %120, i32 0, i32 4, !dbg !5853
  %121 = load i32, i32* %a, align 4, !dbg !5854
  %idxprom132 = sext i32 %121 to i64, !dbg !5852
  %arrayidx133 = getelementptr inbounds [4 x i16], [4 x i16]* %shadfac131, i64 0, i64 %idxprom132, !dbg !5852
  %122 = load %struct.ISBSampleA*, %struct.ISBSampleA** %samp, align 8, !dbg !5855
  %shadfac134 = getelementptr inbounds %struct.ISBSampleA, %struct.ISBSampleA* %122, i32 0, i32 1, !dbg !5856
  store i16* %arrayidx133, i16** %shadfac134, align 8, !dbg !5857
  %123 = load %struct.ISBSampleA*, %struct.ISBSampleA** %samp, align 8, !dbg !5858
  %zco135 = getelementptr inbounds %struct.ISBSampleA, %struct.ISBSampleA* %123, i32 0, i32 0, !dbg !5859
  %arraydecay136 = getelementptr inbounds [3 x float], [3 x float]* %zco135, i64 0, i64 0, !dbg !5858
  %arraydecay137 = getelementptr inbounds [3 x float], [3 x float]* %zco, i64 0, i64 0, !dbg !5860
  call void @copy_v3_v3(float* %arraydecay136, float* %arraydecay137), !dbg !5861
  %box138 = getelementptr inbounds %struct.ISBBranch, %struct.ISBBranch* %root, i32 0, i32 3, !dbg !5862
  %124 = bitcast %struct.Boxf* %box138 to %struct.rctf*, !dbg !5863
  %125 = load %struct.ISBSampleA*, %struct.ISBSampleA** %samp, align 8, !dbg !5864
  %zco139 = getelementptr inbounds %struct.ISBSampleA, %struct.ISBSampleA* %125, i32 0, i32 0, !dbg !5865
  %arraydecay140 = getelementptr inbounds [3 x float], [3 x float]* %zco139, i64 0, i64 0, !dbg !5864
  call void @bound_rectf(%struct.rctf* %124, float* %arraydecay140), !dbg !5866
  br label %if.end141, !dbg !5867

if.end141:                                        ; preds = %if.then117, %if.else
  br label %if.end142

if.end142:                                        ; preds = %if.end141, %for.end113
  br label %if.end143, !dbg !5868

if.end143:                                        ; preds = %if.end142, %for.body46
  br label %for.inc144, !dbg !5869

for.inc144:                                       ; preds = %if.end143
  %126 = load i32, i32* %a, align 4, !dbg !5870
  %inc145 = add nsw i32 %126, 1, !dbg !5870
  store i32 %inc145, i32* %a, align 4, !dbg !5870
  br label %for.cond43, !dbg !5871, !llvm.loop !5872

for.end146:                                       ; preds = %for.cond43
  br label %for.inc147, !dbg !5874

for.inc147:                                       ; preds = %for.end146
  %127 = load %struct.APixstr*, %struct.APixstr** %apn, align 8, !dbg !5875
  %next = getelementptr inbounds %struct.APixstr, %struct.APixstr* %127, i32 0, i32 5, !dbg !5876
  %128 = load %struct.APixstr*, %struct.APixstr** %next, align 8, !dbg !5876
  store %struct.APixstr* %128, %struct.APixstr** %apn, align 8, !dbg !5877
  br label %for.cond40, !dbg !5878, !llvm.loop !5879

for.end148:                                       ; preds = %for.cond40
  br label %if.end149, !dbg !5881

if.end149:                                        ; preds = %for.end148, %for.body30
  br label %for.inc150, !dbg !5882

for.inc150:                                       ; preds = %if.end149
  %129 = load i32, i32* %x, align 4, !dbg !5883
  %inc151 = add nsw i32 %129, 1, !dbg !5883
  store i32 %inc151, i32* %x, align 4, !dbg !5883
  %130 = load i32, i32* %sindex, align 4, !dbg !5884
  %inc152 = add nsw i32 %130, 1, !dbg !5884
  store i32 %inc152, i32* %sindex, align 4, !dbg !5884
  %131 = load %struct.APixstr*, %struct.APixstr** %ap, align 8, !dbg !5885
  %incdec.ptr = getelementptr inbounds %struct.APixstr, %struct.APixstr* %131, i32 1, !dbg !5885
  store %struct.APixstr* %incdec.ptr, %struct.APixstr** %ap, align 8, !dbg !5885
  br label %for.cond26, !dbg !5886, !llvm.loop !5887

for.end153:                                       ; preds = %for.cond26
  br label %for.inc154, !dbg !5889

for.inc154:                                       ; preds = %for.end153
  %132 = load i32, i32* %y, align 4, !dbg !5890
  %inc155 = add nsw i32 %132, 1, !dbg !5890
  store i32 %inc155, i32* %y, align 4, !dbg !5890
  br label %for.cond21, !dbg !5891, !llvm.loop !5892

for.end156:                                       ; preds = %for.cond21
  %box157 = getelementptr inbounds %struct.ISBBranch, %struct.ISBBranch* %root, i32 0, i32 3, !dbg !5894
  %xmin158 = getelementptr inbounds %struct.Boxf, %struct.Boxf* %box157, i32 0, i32 0, !dbg !5896
  %133 = load float, float* %xmin158, align 8, !dbg !5896
  %134 = load %struct.ShadBuf*, %struct.ShadBuf** %shb, align 8, !dbg !5897
  %size159 = getelementptr inbounds %struct.ShadBuf, %struct.ShadBuf* %134, i32 0, i32 14, !dbg !5898
  %135 = load i32, i32* %size159, align 8, !dbg !5898
  %conv160 = sitofp i32 %135 to float, !dbg !5899
  %cmp161 = fcmp une float %133, %conv160, !dbg !5900
  br i1 %cmp161, label %if.then163, label %if.end249, !dbg !5901

if.then163:                                       ; preds = %for.end156
  %136 = load %struct.MemArena*, %struct.MemArena** %memarena, align 8, !dbg !5902
  call void @isb_bsp_split_init(%struct.ISBBranch* %root, %struct.MemArena* %136, i32 8), !dbg !5904
  %137 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !5905
  %138 = load %struct.MemArena*, %struct.MemArena** %memarena, align 8, !dbg !5906
  %arraydecay164 = getelementptr inbounds [16 x %struct.ISBSampleA**], [16 x %struct.ISBSampleA**]* %samplebuf, i64 0, i64 0, !dbg !5907
  %call165 = call i32 @isb_add_samples_transp(%struct.RenderPart* %137, %struct.ISBBranch* %root, %struct.MemArena* %138, %struct.ISBSampleA*** %arraydecay164), !dbg !5908
  store i32 %call165, i32* %bsp_err, align 4, !dbg !5909
  %139 = load i32, i32* %bsp_err, align 4, !dbg !5910
  %cmp166 = icmp eq i32 %139, 0, !dbg !5912
  br i1 %cmp166, label %if.then168, label %if.end248, !dbg !5913

if.then168:                                       ; preds = %if.then163
  call void @llvm.dbg.declare(metadata %struct.ISBShadfacA*** %isbsa, metadata !5914, metadata !DIExpression()), !dbg !5916
  %140 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !5917
  call void @isb_bsp_fillfaces(%struct.Render* @R, %struct.LampRen* %140, %struct.ISBBranch* %root), !dbg !5918
  %141 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !5919
  %142 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !5920
  %rectx169 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %142, i32 0, i32 14, !dbg !5921
  %143 = load i32, i32* %rectx169, align 8, !dbg !5921
  %144 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !5922
  %recty170 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %144, i32 0, i32 15, !dbg !5923
  %145 = load i32, i32* %recty170, align 4, !dbg !5923
  %mul171 = mul nsw i32 %143, %145, !dbg !5924
  %conv172 = sext i32 %mul171 to i64, !dbg !5920
  %mul173 = mul i64 %conv172, 8, !dbg !5925
  %call174 = call i8* %141(i64 %mul173, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.19, i64 0, i64 0)), !dbg !5919
  %146 = bitcast i8* %call174 to %struct.ISBShadfacA**, !dbg !5919
  %147 = load %struct.ISBData*, %struct.ISBData** %isbdata, align 8, !dbg !5926
  %shadfaca = getelementptr inbounds %struct.ISBData, %struct.ISBData* %147, i32 0, i32 1, !dbg !5927
  store %struct.ISBShadfacA** %146, %struct.ISBShadfacA*** %shadfaca, align 8, !dbg !5928
  store %struct.ISBShadfacA** %146, %struct.ISBShadfacA*** %isbsa, align 8, !dbg !5929
  %call175 = call %struct.MemArena* @BLI_memarena_new(i64 1310720, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.17, i64 0, i64 0)), !dbg !5930
  %148 = load %struct.ISBData*, %struct.ISBData** %isbdata, align 8, !dbg !5931
  %memarena176 = getelementptr inbounds %struct.ISBData, %struct.ISBData* %148, i32 0, i32 2, !dbg !5932
  store %struct.MemArena* %call175, %struct.MemArena** %memarena176, align 8, !dbg !5933
  %149 = load %struct.APixstr*, %struct.APixstr** %apixbuf.addr, align 8, !dbg !5934
  store %struct.APixstr* %149, %struct.APixstr** %ap, align 8, !dbg !5936
  %150 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !5937
  %rectx177 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %150, i32 0, i32 14, !dbg !5938
  %151 = load i32, i32* %rectx177, align 8, !dbg !5938
  %152 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !5939
  %recty178 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %152, i32 0, i32 15, !dbg !5940
  %153 = load i32, i32* %recty178, align 4, !dbg !5940
  %mul179 = mul nsw i32 %151, %153, !dbg !5941
  store i32 %mul179, i32* %x, align 4, !dbg !5942
  br label %for.cond180, !dbg !5943

for.cond180:                                      ; preds = %for.inc244, %if.then168
  %154 = load i32, i32* %x, align 4, !dbg !5944
  %cmp181 = icmp sgt i32 %154, 0, !dbg !5946
  br i1 %cmp181, label %for.body183, label %for.end247, !dbg !5947

for.body183:                                      ; preds = %for.cond180
  %155 = load %struct.APixstr*, %struct.APixstr** %ap, align 8, !dbg !5948
  %p184 = getelementptr inbounds %struct.APixstr, %struct.APixstr* %155, i32 0, i32 2, !dbg !5951
  %arrayidx185 = getelementptr inbounds [4 x i32], [4 x i32]* %p184, i64 0, i64 0, !dbg !5948
  %156 = load i32, i32* %arrayidx185, align 8, !dbg !5948
  %tobool186 = icmp ne i32 %156, 0, !dbg !5948
  br i1 %tobool186, label %if.then187, label %if.end243, !dbg !5952

if.then187:                                       ; preds = %for.body183
  call void @llvm.dbg.declare(metadata %struct.APixstr** %apn188, metadata !5953, metadata !DIExpression()), !dbg !5955
  %157 = load %struct.APixstr*, %struct.APixstr** %ap, align 8, !dbg !5956
  store %struct.APixstr* %157, %struct.APixstr** %apn188, align 8, !dbg !5958
  br label %for.cond189, !dbg !5959

for.cond189:                                      ; preds = %for.inc240, %if.then187
  %158 = load %struct.APixstr*, %struct.APixstr** %apn188, align 8, !dbg !5960
  %tobool190 = icmp ne %struct.APixstr* %158, null, !dbg !5962
  br i1 %tobool190, label %for.body191, label %for.end242, !dbg !5962

for.body191:                                      ; preds = %for.cond189
  call void @llvm.dbg.declare(metadata i32* %a192, metadata !5963, metadata !DIExpression()), !dbg !5965
  store i32 0, i32* %a192, align 4, !dbg !5966
  br label %for.cond193, !dbg !5968

for.cond193:                                      ; preds = %for.inc237, %for.body191
  %159 = load i32, i32* %a192, align 4, !dbg !5969
  %cmp194 = icmp slt i32 %159, 4, !dbg !5971
  br i1 %cmp194, label %for.body196, label %for.end239, !dbg !5972

for.body196:                                      ; preds = %for.cond193
  %160 = load %struct.APixstr*, %struct.APixstr** %apn188, align 8, !dbg !5973
  %p197 = getelementptr inbounds %struct.APixstr, %struct.APixstr* %160, i32 0, i32 2, !dbg !5976
  %161 = load i32, i32* %a192, align 4, !dbg !5977
  %idxprom198 = sext i32 %161 to i64, !dbg !5973
  %arrayidx199 = getelementptr inbounds [4 x i32], [4 x i32]* %p197, i64 0, i64 %idxprom198, !dbg !5973
  %162 = load i32, i32* %arrayidx199, align 4, !dbg !5973
  %tobool200 = icmp ne i32 %162, 0, !dbg !5973
  br i1 %tobool200, label %land.lhs.true, label %if.end236, !dbg !5978

land.lhs.true:                                    ; preds = %for.body196
  %163 = load %struct.APixstr*, %struct.APixstr** %apn188, align 8, !dbg !5979
  %shadfac201 = getelementptr inbounds %struct.APixstr, %struct.APixstr* %163, i32 0, i32 4, !dbg !5980
  %164 = load i32, i32* %a192, align 4, !dbg !5981
  %idxprom202 = sext i32 %164 to i64, !dbg !5979
  %arrayidx203 = getelementptr inbounds [4 x i16], [4 x i16]* %shadfac201, i64 0, i64 %idxprom202, !dbg !5979
  %165 = load i16, i16* %arrayidx203, align 2, !dbg !5979
  %conv204 = sext i16 %165 to i32, !dbg !5979
  %tobool205 = icmp ne i32 %conv204, 0, !dbg !5979
  br i1 %tobool205, label %if.then206, label %if.end236, !dbg !5982

if.then206:                                       ; preds = %land.lhs.true
  %166 = load i16, i16* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 5), align 2, !dbg !5983
  %tobool207 = icmp ne i16 %166, 0, !dbg !5986
  br i1 %tobool207, label %if.then208, label %if.else224, !dbg !5987

if.then208:                                       ; preds = %if.then206
  %167 = load %struct.ISBShadfacA**, %struct.ISBShadfacA*** %isbsa, align 8, !dbg !5988
  %168 = load %struct.ISBData*, %struct.ISBData** %isbdata, align 8, !dbg !5989
  %memarena209 = getelementptr inbounds %struct.ISBData, %struct.ISBData* %168, i32 0, i32 2, !dbg !5990
  %169 = load %struct.MemArena*, %struct.MemArena** %memarena209, align 8, !dbg !5990
  %170 = load %struct.APixstr*, %struct.APixstr** %apn188, align 8, !dbg !5991
  %obi210 = getelementptr inbounds %struct.APixstr, %struct.APixstr* %170, i32 0, i32 3, !dbg !5992
  %171 = load i32, i32* %a192, align 4, !dbg !5993
  %idxprom211 = sext i32 %171 to i64, !dbg !5991
  %arrayidx212 = getelementptr inbounds [4 x i32], [4 x i32]* %obi210, i64 0, i64 %idxprom211, !dbg !5991
  %172 = load i32, i32* %arrayidx212, align 4, !dbg !5991
  %173 = load %struct.APixstr*, %struct.APixstr** %apn188, align 8, !dbg !5994
  %p213 = getelementptr inbounds %struct.APixstr, %struct.APixstr* %173, i32 0, i32 2, !dbg !5995
  %174 = load i32, i32* %a192, align 4, !dbg !5996
  %idxprom214 = sext i32 %174 to i64, !dbg !5994
  %arrayidx215 = getelementptr inbounds [4 x i32], [4 x i32]* %p213, i64 0, i64 %idxprom214, !dbg !5994
  %175 = load i32, i32* %arrayidx215, align 4, !dbg !5994
  %176 = load %struct.APixstr*, %struct.APixstr** %apn188, align 8, !dbg !5997
  %shadfac216 = getelementptr inbounds %struct.APixstr, %struct.APixstr* %176, i32 0, i32 4, !dbg !5998
  %177 = load i32, i32* %a192, align 4, !dbg !5999
  %idxprom217 = sext i32 %177 to i64, !dbg !5997
  %arrayidx218 = getelementptr inbounds [4 x i16], [4 x i16]* %shadfac216, i64 0, i64 %idxprom217, !dbg !5997
  %178 = load i16, i16* %arrayidx218, align 2, !dbg !5997
  %179 = load %struct.APixstr*, %struct.APixstr** %apn188, align 8, !dbg !6000
  %mask219 = getelementptr inbounds %struct.APixstr, %struct.APixstr* %179, i32 0, i32 0, !dbg !6001
  %180 = load i32, i32* %a192, align 4, !dbg !6002
  %idxprom220 = sext i32 %180 to i64, !dbg !6000
  %arrayidx221 = getelementptr inbounds [4 x i16], [4 x i16]* %mask219, i64 0, i64 %idxprom220, !dbg !6000
  %181 = load i16, i16* %arrayidx221, align 2, !dbg !6000
  %call222 = call i32 @count_mask(i16 zeroext %181), !dbg !6003
  %conv223 = trunc i32 %call222 to i16, !dbg !6003
  call void @isb_add_shadfac(%struct.ISBShadfacA** %167, %struct.MemArena* %169, i32 %172, i32 %175, i16 signext %178, i16 signext %conv223), !dbg !6004
  br label %if.end235, !dbg !6004

if.else224:                                       ; preds = %if.then206
  %182 = load %struct.ISBShadfacA**, %struct.ISBShadfacA*** %isbsa, align 8, !dbg !6005
  %183 = load %struct.ISBData*, %struct.ISBData** %isbdata, align 8, !dbg !6006
  %memarena225 = getelementptr inbounds %struct.ISBData, %struct.ISBData* %183, i32 0, i32 2, !dbg !6007
  %184 = load %struct.MemArena*, %struct.MemArena** %memarena225, align 8, !dbg !6007
  %185 = load %struct.APixstr*, %struct.APixstr** %apn188, align 8, !dbg !6008
  %obi226 = getelementptr inbounds %struct.APixstr, %struct.APixstr* %185, i32 0, i32 3, !dbg !6009
  %186 = load i32, i32* %a192, align 4, !dbg !6010
  %idxprom227 = sext i32 %186 to i64, !dbg !6008
  %arrayidx228 = getelementptr inbounds [4 x i32], [4 x i32]* %obi226, i64 0, i64 %idxprom227, !dbg !6008
  %187 = load i32, i32* %arrayidx228, align 4, !dbg !6008
  %188 = load %struct.APixstr*, %struct.APixstr** %apn188, align 8, !dbg !6011
  %p229 = getelementptr inbounds %struct.APixstr, %struct.APixstr* %188, i32 0, i32 2, !dbg !6012
  %189 = load i32, i32* %a192, align 4, !dbg !6013
  %idxprom230 = sext i32 %189 to i64, !dbg !6011
  %arrayidx231 = getelementptr inbounds [4 x i32], [4 x i32]* %p229, i64 0, i64 %idxprom230, !dbg !6011
  %190 = load i32, i32* %arrayidx231, align 4, !dbg !6011
  %191 = load %struct.APixstr*, %struct.APixstr** %apn188, align 8, !dbg !6014
  %shadfac232 = getelementptr inbounds %struct.APixstr, %struct.APixstr* %191, i32 0, i32 4, !dbg !6015
  %192 = load i32, i32* %a192, align 4, !dbg !6016
  %idxprom233 = sext i32 %192 to i64, !dbg !6014
  %arrayidx234 = getelementptr inbounds [4 x i16], [4 x i16]* %shadfac232, i64 0, i64 %idxprom233, !dbg !6014
  %193 = load i16, i16* %arrayidx234, align 2, !dbg !6014
  call void @isb_add_shadfac(%struct.ISBShadfacA** %182, %struct.MemArena* %184, i32 %187, i32 %190, i16 signext %193, i16 signext 0), !dbg !6017
  br label %if.end235

if.end235:                                        ; preds = %if.else224, %if.then208
  br label %if.end236, !dbg !6018

if.end236:                                        ; preds = %if.end235, %land.lhs.true, %for.body196
  br label %for.inc237, !dbg !6019

for.inc237:                                       ; preds = %if.end236
  %194 = load i32, i32* %a192, align 4, !dbg !6020
  %inc238 = add nsw i32 %194, 1, !dbg !6020
  store i32 %inc238, i32* %a192, align 4, !dbg !6020
  br label %for.cond193, !dbg !6021, !llvm.loop !6022

for.end239:                                       ; preds = %for.cond193
  br label %for.inc240, !dbg !6024

for.inc240:                                       ; preds = %for.end239
  %195 = load %struct.APixstr*, %struct.APixstr** %apn188, align 8, !dbg !6025
  %next241 = getelementptr inbounds %struct.APixstr, %struct.APixstr* %195, i32 0, i32 5, !dbg !6026
  %196 = load %struct.APixstr*, %struct.APixstr** %next241, align 8, !dbg !6026
  store %struct.APixstr* %196, %struct.APixstr** %apn188, align 8, !dbg !6027
  br label %for.cond189, !dbg !6028, !llvm.loop !6029

for.end242:                                       ; preds = %for.cond189
  br label %if.end243, !dbg !6031

if.end243:                                        ; preds = %for.end242, %for.body183
  br label %for.inc244, !dbg !6032

for.inc244:                                       ; preds = %if.end243
  %197 = load i32, i32* %x, align 4, !dbg !6033
  %dec = add nsw i32 %197, -1, !dbg !6033
  store i32 %dec, i32* %x, align 4, !dbg !6033
  %198 = load %struct.APixstr*, %struct.APixstr** %ap, align 8, !dbg !6034
  %incdec.ptr245 = getelementptr inbounds %struct.APixstr, %struct.APixstr* %198, i32 1, !dbg !6034
  store %struct.APixstr* %incdec.ptr245, %struct.APixstr** %ap, align 8, !dbg !6034
  %199 = load %struct.ISBShadfacA**, %struct.ISBShadfacA*** %isbsa, align 8, !dbg !6035
  %incdec.ptr246 = getelementptr inbounds %struct.ISBShadfacA*, %struct.ISBShadfacA** %199, i32 1, !dbg !6035
  store %struct.ISBShadfacA** %incdec.ptr246, %struct.ISBShadfacA*** %isbsa, align 8, !dbg !6035
  br label %for.cond180, !dbg !6036, !llvm.loop !6037

for.end247:                                       ; preds = %for.cond180
  br label %if.end248, !dbg !6039

if.end248:                                        ; preds = %for.end247, %if.then163
  br label %if.end249, !dbg !6040

if.end249:                                        ; preds = %if.end248, %for.end156
  %200 = load %struct.MemArena*, %struct.MemArena** %memarena, align 8, !dbg !6041
  call void @BLI_memarena_free(%struct.MemArena* %200), !dbg !6042
  store i32 0, i32* %x, align 4, !dbg !6043
  br label %for.cond250, !dbg !6045

for.cond250:                                      ; preds = %for.inc263, %if.end249
  %201 = load i32, i32* %x, align 4, !dbg !6046
  %202 = load i16, i16* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 5), align 2, !dbg !6048
  %conv251 = sext i16 %202 to i32, !dbg !6049
  %tobool252 = icmp ne i32 %conv251, 0, !dbg !6049
  br i1 %tobool252, label %cond.true253, label %cond.false255, !dbg !6049

cond.true253:                                     ; preds = %for.cond250
  %203 = load i16, i16* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 5), align 2, !dbg !6050
  %conv254 = sext i16 %203 to i32, !dbg !6051
  br label %cond.end256, !dbg !6049

cond.false255:                                    ; preds = %for.cond250
  br label %cond.end256, !dbg !6049

cond.end256:                                      ; preds = %cond.false255, %cond.true253
  %cond257 = phi i32 [ %conv254, %cond.true253 ], [ 1, %cond.false255 ], !dbg !6049
  %cmp258 = icmp slt i32 %201, %cond257, !dbg !6052
  br i1 %cmp258, label %for.body260, label %for.end265, !dbg !6053

for.body260:                                      ; preds = %cond.end256
  %204 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !6054
  %205 = load i32, i32* %x, align 4, !dbg !6055
  %idxprom261 = sext i32 %205 to i64, !dbg !6056
  %arrayidx262 = getelementptr inbounds [16 x %struct.ISBSampleA**], [16 x %struct.ISBSampleA**]* %samplebuf, i64 0, i64 %idxprom261, !dbg !6056
  %206 = load %struct.ISBSampleA**, %struct.ISBSampleA*** %arrayidx262, align 8, !dbg !6056
  %207 = bitcast %struct.ISBSampleA** %206 to i8*, !dbg !6056
  call void %204(i8* %207), !dbg !6054
  br label %for.inc263, !dbg !6054

for.inc263:                                       ; preds = %for.body260
  %208 = load i32, i32* %x, align 4, !dbg !6057
  %inc264 = add nsw i32 %208, 1, !dbg !6057
  store i32 %inc264, i32* %x, align 4, !dbg !6057
  br label %for.cond250, !dbg !6058, !llvm.loop !6059

for.end265:                                       ; preds = %cond.end256
  %209 = load i32, i32* %bsp_err, align 4, !dbg !6061
  %tobool266 = icmp ne i32 %209, 0, !dbg !6061
  br i1 %tobool266, label %if.then267, label %if.end269, !dbg !6063

if.then267:                                       ; preds = %for.end265
  %call268 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.20, i64 0, i64 0)), !dbg !6064
  br label %if.end269, !dbg !6064

if.end269:                                        ; preds = %if.then267, %for.end265
  ret void, !dbg !6065
}

; Function Attrs: noinline nounwind uwtable
define internal void @isb_make_buffer(%struct.RenderPart* %pa, %struct.LampRen* %lar) #0 !dbg !6066 {
entry:
  %pa.addr = alloca %struct.RenderPart*, align 8
  %lar.addr = alloca %struct.LampRen*, align 8
  %shb = alloca %struct.ShadBuf*, align 8
  %isbdata = alloca %struct.ISBData*, align 8
  %samp = alloca %struct.ISBSample*, align 8
  %samplebuf = alloca [16 x %struct.ISBSample*], align 16
  %root = alloca %struct.ISBBranch, align 8
  %memarena = alloca %struct.MemArena*, align 8
  %rd = alloca i64*, align 8
  %recto = alloca i32*, align 8
  %rectp = alloca i32*, align 8
  %x = alloca i32, align 4
  %y = alloca i32, align 4
  %sindex = alloca i32, align 4
  %sample = alloca i32, align 4
  %bsp_err = alloca i32, align 4
  %xs = alloca float, align 4
  %ys = alloca float, align 4
  %ps = alloca %struct.PixStr*, align 8
  %mask = alloca i32, align 4
  %obi = alloca %struct.ObjectInstanceRen*, align 8
  %obr = alloca %struct.ObjectRen*, align 8
  %vlr = alloca %struct.VlakRen*, align 8
  %obi113 = alloca %struct.ObjectInstanceRen*, align 8
  %obr116 = alloca %struct.ObjectRen*, align 8
  %vlr118 = alloca %struct.VlakRen*, align 8
  %xs122 = alloca float, align 4
  %ys127 = alloca float, align 4
  %isbsa = alloca %struct.ISBShadfacA**, align 8
  %ps193 = alloca %struct.PixStr*, align 8
  store %struct.RenderPart* %pa, %struct.RenderPart** %pa.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RenderPart** %pa.addr, metadata !6069, metadata !DIExpression()), !dbg !6070
  store %struct.LampRen* %lar, %struct.LampRen** %lar.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.LampRen** %lar.addr, metadata !6071, metadata !DIExpression()), !dbg !6072
  call void @llvm.dbg.declare(metadata %struct.ShadBuf** %shb, metadata !6073, metadata !DIExpression()), !dbg !6074
  %0 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !6075
  %shb1 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %0, i32 0, i32 57, !dbg !6076
  %1 = load %struct.ShadBuf*, %struct.ShadBuf** %shb1, align 8, !dbg !6076
  store %struct.ShadBuf* %1, %struct.ShadBuf** %shb, align 8, !dbg !6074
  call void @llvm.dbg.declare(metadata %struct.ISBData** %isbdata, metadata !6077, metadata !DIExpression()), !dbg !6078
  call void @llvm.dbg.declare(metadata %struct.ISBSample** %samp, metadata !6079, metadata !DIExpression()), !dbg !6080
  call void @llvm.dbg.declare(metadata [16 x %struct.ISBSample*]* %samplebuf, metadata !6081, metadata !DIExpression()), !dbg !6083
  call void @llvm.dbg.declare(metadata %struct.ISBBranch* %root, metadata !6084, metadata !DIExpression()), !dbg !6085
  call void @llvm.dbg.declare(metadata %struct.MemArena** %memarena, metadata !6086, metadata !DIExpression()), !dbg !6087
  call void @llvm.dbg.declare(metadata i64** %rd, metadata !6088, metadata !DIExpression()), !dbg !6089
  call void @llvm.dbg.declare(metadata i32** %recto, metadata !6090, metadata !DIExpression()), !dbg !6091
  call void @llvm.dbg.declare(metadata i32** %rectp, metadata !6092, metadata !DIExpression()), !dbg !6093
  call void @llvm.dbg.declare(metadata i32* %x, metadata !6094, metadata !DIExpression()), !dbg !6095
  call void @llvm.dbg.declare(metadata i32* %y, metadata !6096, metadata !DIExpression()), !dbg !6097
  call void @llvm.dbg.declare(metadata i32* %sindex, metadata !6098, metadata !DIExpression()), !dbg !6099
  call void @llvm.dbg.declare(metadata i32* %sample, metadata !6100, metadata !DIExpression()), !dbg !6101
  call void @llvm.dbg.declare(metadata i32* %bsp_err, metadata !6102, metadata !DIExpression()), !dbg !6103
  store i32 0, i32* %bsp_err, align 4, !dbg !6103
  %2 = load %struct.ShadBuf*, %struct.ShadBuf** %shb, align 8, !dbg !6104
  %isb_result = getelementptr inbounds %struct.ShadBuf, %struct.ShadBuf* %2, i32 0, i32 17, !dbg !6105
  %3 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !6106
  %thread = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %3, i32 0, i32 20, !dbg !6107
  %4 = load i16, i16* %thread, align 2, !dbg !6107
  %idxprom = sext i16 %4 to i64, !dbg !6104
  %arrayidx = getelementptr inbounds [1 x %struct.ISBData*], [1 x %struct.ISBData*]* %isb_result, i64 0, i64 %idxprom, !dbg !6104
  %5 = load %struct.ISBData*, %struct.ISBData** %arrayidx, align 8, !dbg !6104
  store %struct.ISBData* %5, %struct.ISBData** %isbdata, align 8, !dbg !6108
  %6 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !6109
  %disprect = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %6, i32 0, i32 13, !dbg !6110
  %xmin = getelementptr inbounds %struct.rcti, %struct.rcti* %disprect, i32 0, i32 0, !dbg !6111
  %7 = load i32, i32* %xmin, align 8, !dbg !6111
  %8 = load %struct.ISBData*, %struct.ISBData** %isbdata, align 8, !dbg !6112
  %minx = getelementptr inbounds %struct.ISBData, %struct.ISBData* %8, i32 0, i32 3, !dbg !6113
  store i32 %7, i32* %minx, align 8, !dbg !6114
  %9 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !6115
  %disprect2 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %9, i32 0, i32 13, !dbg !6116
  %ymin = getelementptr inbounds %struct.rcti, %struct.rcti* %disprect2, i32 0, i32 2, !dbg !6117
  %10 = load i32, i32* %ymin, align 8, !dbg !6117
  %11 = load %struct.ISBData*, %struct.ISBData** %isbdata, align 8, !dbg !6118
  %miny = getelementptr inbounds %struct.ISBData, %struct.ISBData* %11, i32 0, i32 4, !dbg !6119
  store i32 %10, i32* %miny, align 4, !dbg !6120
  %12 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !6121
  %rectx = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %12, i32 0, i32 14, !dbg !6122
  %13 = load i32, i32* %rectx, align 8, !dbg !6122
  %14 = load %struct.ISBData*, %struct.ISBData** %isbdata, align 8, !dbg !6123
  %rectx3 = getelementptr inbounds %struct.ISBData, %struct.ISBData* %14, i32 0, i32 5, !dbg !6124
  store i32 %13, i32* %rectx3, align 8, !dbg !6125
  %15 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !6126
  %recty = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %15, i32 0, i32 15, !dbg !6127
  %16 = load i32, i32* %recty, align 4, !dbg !6127
  %17 = load %struct.ISBData*, %struct.ISBData** %isbdata, align 8, !dbg !6128
  %recty4 = getelementptr inbounds %struct.ISBData, %struct.ISBData* %17, i32 0, i32 6, !dbg !6129
  store i32 %16, i32* %recty4, align 4, !dbg !6130
  %call = call %struct.MemArena* @BLI_memarena_new(i64 2097152, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.17, i64 0, i64 0)), !dbg !6131
  store %struct.MemArena* %call, %struct.MemArena** %memarena, align 8, !dbg !6132
  %18 = load %struct.MemArena*, %struct.MemArena** %memarena, align 8, !dbg !6133
  call void @BLI_memarena_use_calloc(%struct.MemArena* %18), !dbg !6134
  store i32 0, i32* %sample, align 4, !dbg !6135
  br label %for.cond, !dbg !6137

for.cond:                                         ; preds = %for.inc, %entry
  %19 = load i32, i32* %sample, align 4, !dbg !6138
  %20 = load i16, i16* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 5), align 2, !dbg !6140
  %conv = sext i16 %20 to i32, !dbg !6141
  %tobool = icmp ne i32 %conv, 0, !dbg !6141
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !6141

cond.true:                                        ; preds = %for.cond
  %21 = load i16, i16* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 5), align 2, !dbg !6142
  %conv5 = sext i16 %21 to i32, !dbg !6143
  br label %cond.end, !dbg !6141

cond.false:                                       ; preds = %for.cond
  br label %cond.end, !dbg !6141

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv5, %cond.true ], [ 1, %cond.false ], !dbg !6141
  %cmp = icmp slt i32 %19, %cond, !dbg !6144
  br i1 %cmp, label %for.body, label %for.end, !dbg !6145

for.body:                                         ; preds = %cond.end
  %22 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !6146
  %23 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !6147
  %rectx7 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %23, i32 0, i32 14, !dbg !6148
  %24 = load i32, i32* %rectx7, align 8, !dbg !6148
  %conv8 = sext i32 %24 to i64, !dbg !6147
  %mul = mul i64 32, %conv8, !dbg !6149
  %25 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !6150
  %recty9 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %25, i32 0, i32 15, !dbg !6151
  %26 = load i32, i32* %recty9, align 4, !dbg !6151
  %conv10 = sext i32 %26 to i64, !dbg !6150
  %mul11 = mul i64 %mul, %conv10, !dbg !6152
  %call12 = call i8* %22(i64 %mul11, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.24, i64 0, i64 0)), !dbg !6146
  %27 = bitcast i8* %call12 to %struct.ISBSample*, !dbg !6146
  %28 = load i32, i32* %sample, align 4, !dbg !6153
  %idxprom13 = sext i32 %28 to i64, !dbg !6154
  %arrayidx14 = getelementptr inbounds [16 x %struct.ISBSample*], [16 x %struct.ISBSample*]* %samplebuf, i64 0, i64 %idxprom13, !dbg !6154
  store %struct.ISBSample* %27, %struct.ISBSample** %arrayidx14, align 8, !dbg !6155
  br label %for.inc, !dbg !6154

for.inc:                                          ; preds = %for.body
  %29 = load i32, i32* %sample, align 4, !dbg !6156
  %inc = add nsw i32 %29, 1, !dbg !6156
  store i32 %inc, i32* %sample, align 4, !dbg !6156
  br label %for.cond, !dbg !6157, !llvm.loop !6158

for.end:                                          ; preds = %cond.end
  %30 = load i16, i16* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 5), align 2, !dbg !6160
  %conv15 = sext i16 %30 to i32, !dbg !6162
  %cmp16 = icmp eq i32 %conv15, 0, !dbg !6163
  br i1 %cmp16, label %if.then, label %if.end, !dbg !6164

if.then:                                          ; preds = %for.end
  %31 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !6165
  %32 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !6166
  %rectx18 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %32, i32 0, i32 14, !dbg !6167
  %33 = load i32, i32* %rectx18, align 8, !dbg !6167
  %34 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !6168
  %recty19 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %34, i32 0, i32 15, !dbg !6169
  %35 = load i32, i32* %recty19, align 4, !dbg !6169
  %mul20 = mul nsw i32 %33, %35, !dbg !6170
  %conv21 = sext i32 %mul20 to i64, !dbg !6166
  %mul22 = mul i64 %conv21, 2, !dbg !6171
  %call23 = call i8* %31(i64 %mul22, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.19, i64 0, i64 0)), !dbg !6165
  %36 = bitcast i8* %call23 to i16*, !dbg !6165
  %37 = load %struct.ISBData*, %struct.ISBData** %isbdata, align 8, !dbg !6172
  %shadfacs = getelementptr inbounds %struct.ISBData, %struct.ISBData* %37, i32 0, i32 0, !dbg !6173
  store i16* %36, i16** %shadfacs, align 8, !dbg !6174
  br label %if.end, !dbg !6172

if.end:                                           ; preds = %if.then, %for.end
  %38 = bitcast %struct.ISBBranch* %root to i8*, !dbg !6175
  call void @llvm.memset.p0i8.i64(i8* align 8 %38, i8 0, i64 64, i1 false), !dbg !6175
  %39 = load %struct.ShadBuf*, %struct.ShadBuf** %shb, align 8, !dbg !6176
  %size = getelementptr inbounds %struct.ShadBuf, %struct.ShadBuf* %39, i32 0, i32 14, !dbg !6177
  %40 = load i32, i32* %size, align 8, !dbg !6177
  %conv24 = sitofp i32 %40 to float, !dbg !6178
  %box = getelementptr inbounds %struct.ISBBranch, %struct.ISBBranch* %root, i32 0, i32 3, !dbg !6179
  %xmin25 = getelementptr inbounds %struct.Boxf, %struct.Boxf* %box, i32 0, i32 0, !dbg !6180
  store float %conv24, float* %xmin25, align 8, !dbg !6181
  %41 = load %struct.ShadBuf*, %struct.ShadBuf** %shb, align 8, !dbg !6182
  %size26 = getelementptr inbounds %struct.ShadBuf, %struct.ShadBuf* %41, i32 0, i32 14, !dbg !6183
  %42 = load i32, i32* %size26, align 8, !dbg !6183
  %conv27 = sitofp i32 %42 to float, !dbg !6184
  %box28 = getelementptr inbounds %struct.ISBBranch, %struct.ISBBranch* %root, i32 0, i32 3, !dbg !6185
  %ymin29 = getelementptr inbounds %struct.Boxf, %struct.Boxf* %box28, i32 0, i32 2, !dbg !6186
  store float %conv27, float* %ymin29, align 8, !dbg !6187
  store i32 0, i32* %sindex, align 4, !dbg !6188
  store i32 0, i32* %y, align 4, !dbg !6190
  br label %for.cond30, !dbg !6191

for.cond30:                                       ; preds = %for.inc157, %if.end
  %43 = load i32, i32* %y, align 4, !dbg !6192
  %44 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !6194
  %recty31 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %44, i32 0, i32 15, !dbg !6195
  %45 = load i32, i32* %recty31, align 4, !dbg !6195
  %cmp32 = icmp slt i32 %43, %45, !dbg !6196
  br i1 %cmp32, label %for.body34, label %for.end159, !dbg !6197

for.body34:                                       ; preds = %for.cond30
  store i32 0, i32* %x, align 4, !dbg !6198
  br label %for.cond35, !dbg !6201

for.cond35:                                       ; preds = %for.inc153, %for.body34
  %46 = load i32, i32* %x, align 4, !dbg !6202
  %47 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !6204
  %rectx36 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %47, i32 0, i32 14, !dbg !6205
  %48 = load i32, i32* %rectx36, align 8, !dbg !6205
  %cmp37 = icmp slt i32 %46, %48, !dbg !6206
  br i1 %cmp37, label %for.body39, label %for.end156, !dbg !6207

for.body39:                                       ; preds = %for.cond35
  %49 = load i16, i16* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 5), align 2, !dbg !6208
  %tobool40 = icmp ne i16 %49, 0, !dbg !6211
  br i1 %tobool40, label %if.then41, label %if.else, !dbg !6212

if.then41:                                        ; preds = %for.body39
  %50 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !6213
  %rectdaps = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %50, i32 0, i32 8, !dbg !6215
  %51 = load i64*, i64** %rectdaps, align 8, !dbg !6215
  %52 = load i32, i32* %sindex, align 4, !dbg !6216
  %idx.ext = sext i32 %52 to i64, !dbg !6217
  %add.ptr = getelementptr inbounds i64, i64* %51, i64 %idx.ext, !dbg !6217
  store i64* %add.ptr, i64** %rd, align 8, !dbg !6218
  %53 = load i64*, i64** %rd, align 8, !dbg !6219
  %54 = load i64, i64* %53, align 8, !dbg !6221
  %tobool42 = icmp ne i64 %54, 0, !dbg !6221
  br i1 %tobool42, label %if.then43, label %if.end103, !dbg !6222

if.then43:                                        ; preds = %if.then41
  call void @llvm.dbg.declare(metadata float* %xs, metadata !6223, metadata !DIExpression()), !dbg !6225
  %55 = load i32, i32* %x, align 4, !dbg !6226
  %56 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !6227
  %disprect44 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %56, i32 0, i32 13, !dbg !6228
  %xmin45 = getelementptr inbounds %struct.rcti, %struct.rcti* %disprect44, i32 0, i32 0, !dbg !6229
  %57 = load i32, i32* %xmin45, align 8, !dbg !6229
  %add = add nsw i32 %55, %57, !dbg !6230
  %conv46 = sitofp i32 %add to float, !dbg !6231
  store float %conv46, float* %xs, align 4, !dbg !6225
  call void @llvm.dbg.declare(metadata float* %ys, metadata !6232, metadata !DIExpression()), !dbg !6233
  %58 = load i32, i32* %y, align 4, !dbg !6234
  %59 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !6235
  %disprect47 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %59, i32 0, i32 13, !dbg !6236
  %ymin48 = getelementptr inbounds %struct.rcti, %struct.rcti* %disprect47, i32 0, i32 2, !dbg !6237
  %60 = load i32, i32* %ymin48, align 8, !dbg !6237
  %add49 = add nsw i32 %58, %60, !dbg !6238
  %conv50 = sitofp i32 %add49 to float, !dbg !6239
  store float %conv50, float* %ys, align 4, !dbg !6233
  store i32 0, i32* %sample, align 4, !dbg !6240
  br label %for.cond51, !dbg !6242

for.cond51:                                       ; preds = %for.inc100, %if.then43
  %61 = load i32, i32* %sample, align 4, !dbg !6243
  %62 = load i16, i16* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 5), align 2, !dbg !6245
  %conv52 = sext i16 %62 to i32, !dbg !6246
  %cmp53 = icmp slt i32 %61, %conv52, !dbg !6247
  br i1 %cmp53, label %for.body55, label %for.end102, !dbg !6248

for.body55:                                       ; preds = %for.cond51
  call void @llvm.dbg.declare(metadata %struct.PixStr** %ps, metadata !6249, metadata !DIExpression()), !dbg !6251
  %63 = load i64*, i64** %rd, align 8, !dbg !6252
  %64 = load i64, i64* %63, align 8, !dbg !6253
  %65 = inttoptr i64 %64 to %struct.PixStr*, !dbg !6254
  store %struct.PixStr* %65, %struct.PixStr** %ps, align 8, !dbg !6251
  call void @llvm.dbg.declare(metadata i32* %mask, metadata !6255, metadata !DIExpression()), !dbg !6256
  %66 = load i32, i32* %sample, align 4, !dbg !6257
  %shl = shl i32 1, %66, !dbg !6258
  store i32 %shl, i32* %mask, align 4, !dbg !6256
  br label %while.cond, !dbg !6259

while.cond:                                       ; preds = %if.end61, %for.body55
  %67 = load %struct.PixStr*, %struct.PixStr** %ps, align 8, !dbg !6260
  %tobool56 = icmp ne %struct.PixStr* %67, null, !dbg !6259
  br i1 %tobool56, label %while.body, label %while.end, !dbg !6259

while.body:                                       ; preds = %while.cond
  %68 = load %struct.PixStr*, %struct.PixStr** %ps, align 8, !dbg !6261
  %mask57 = getelementptr inbounds %struct.PixStr, %struct.PixStr* %68, i32 0, i32 5, !dbg !6264
  %69 = load i16, i16* %mask57, align 8, !dbg !6264
  %conv58 = zext i16 %69 to i32, !dbg !6261
  %70 = load i32, i32* %mask, align 4, !dbg !6265
  %and = and i32 %conv58, %70, !dbg !6266
  %tobool59 = icmp ne i32 %and, 0, !dbg !6266
  br i1 %tobool59, label %if.then60, label %if.end61, !dbg !6267

if.then60:                                        ; preds = %while.body
  br label %while.end, !dbg !6268

if.end61:                                         ; preds = %while.body
  %71 = load %struct.PixStr*, %struct.PixStr** %ps, align 8, !dbg !6269
  %next = getelementptr inbounds %struct.PixStr, %struct.PixStr* %71, i32 0, i32 0, !dbg !6270
  %72 = load %struct.PixStr*, %struct.PixStr** %next, align 8, !dbg !6270
  store %struct.PixStr* %72, %struct.PixStr** %ps, align 8, !dbg !6271
  br label %while.cond, !dbg !6259, !llvm.loop !6272

while.end:                                        ; preds = %if.then60, %while.cond
  %73 = load %struct.PixStr*, %struct.PixStr** %ps, align 8, !dbg !6274
  %tobool62 = icmp ne %struct.PixStr* %73, null, !dbg !6274
  br i1 %tobool62, label %land.lhs.true, label %if.end99, !dbg !6276

land.lhs.true:                                    ; preds = %while.end
  %74 = load %struct.PixStr*, %struct.PixStr** %ps, align 8, !dbg !6277
  %facenr = getelementptr inbounds %struct.PixStr, %struct.PixStr* %74, i32 0, i32 2, !dbg !6278
  %75 = load i32, i32* %facenr, align 4, !dbg !6278
  %cmp63 = icmp sgt i32 %75, 0, !dbg !6279
  br i1 %cmp63, label %if.then65, label %if.end99, !dbg !6280

if.then65:                                        ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.ObjectInstanceRen** %obi, metadata !6281, metadata !DIExpression()), !dbg !6283
  %76 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 69), align 8, !dbg !6284
  %77 = load %struct.PixStr*, %struct.PixStr** %ps, align 8, !dbg !6285
  %obi66 = getelementptr inbounds %struct.PixStr, %struct.PixStr* %77, i32 0, i32 1, !dbg !6286
  %78 = load i32, i32* %obi66, align 8, !dbg !6286
  %idxprom67 = sext i32 %78 to i64, !dbg !6287
  %arrayidx68 = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %76, i64 %idxprom67, !dbg !6287
  store %struct.ObjectInstanceRen* %arrayidx68, %struct.ObjectInstanceRen** %obi, align 8, !dbg !6283
  call void @llvm.dbg.declare(metadata %struct.ObjectRen** %obr, metadata !6288, metadata !DIExpression()), !dbg !6289
  %79 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi, align 8, !dbg !6290
  %obr69 = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %79, i32 0, i32 2, !dbg !6291
  %80 = load %struct.ObjectRen*, %struct.ObjectRen** %obr69, align 8, !dbg !6291
  store %struct.ObjectRen* %80, %struct.ObjectRen** %obr, align 8, !dbg !6289
  call void @llvm.dbg.declare(metadata %struct.VlakRen** %vlr, metadata !6292, metadata !DIExpression()), !dbg !6293
  %81 = load %struct.ObjectRen*, %struct.ObjectRen** %obr, align 8, !dbg !6294
  %82 = load %struct.PixStr*, %struct.PixStr** %ps, align 8, !dbg !6295
  %facenr70 = getelementptr inbounds %struct.PixStr, %struct.PixStr* %82, i32 0, i32 2, !dbg !6296
  %83 = load i32, i32* %facenr70, align 4, !dbg !6296
  %sub = sub nsw i32 %83, 1, !dbg !6297
  %and71 = and i32 %sub, 134217727, !dbg !6298
  %call72 = call %struct.VlakRen* @RE_findOrAddVlak(%struct.ObjectRen* %81, i32 %and71), !dbg !6299
  store %struct.VlakRen* %call72, %struct.VlakRen** %vlr, align 8, !dbg !6293
  %84 = load i32, i32* %sample, align 4, !dbg !6300
  %idxprom73 = sext i32 %84 to i64, !dbg !6301
  %arrayidx74 = getelementptr inbounds [16 x %struct.ISBSample*], [16 x %struct.ISBSample*]* %samplebuf, i64 0, i64 %idxprom73, !dbg !6301
  %85 = load %struct.ISBSample*, %struct.ISBSample** %arrayidx74, align 8, !dbg !6301
  %86 = load i32, i32* %sindex, align 4, !dbg !6302
  %idx.ext75 = sext i32 %86 to i64, !dbg !6303
  %add.ptr76 = getelementptr inbounds %struct.ISBSample, %struct.ISBSample* %85, i64 %idx.ext75, !dbg !6303
  store %struct.ISBSample* %add.ptr76, %struct.ISBSample** %samp, align 8, !dbg !6304
  %87 = load %struct.ShadBuf*, %struct.ShadBuf** %shb, align 8, !dbg !6305
  %88 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi, align 8, !dbg !6307
  %89 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !6308
  %90 = load float, float* %xs, align 4, !dbg !6309
  %91 = load i32, i32* %sample, align 4, !dbg !6310
  %idxprom77 = sext i32 %91 to i64, !dbg !6311
  %arrayidx78 = getelementptr inbounds [32 x [2 x float]], [32 x [2 x float]]* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 39), i64 0, i64 %idxprom77, !dbg !6311
  %arrayidx79 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx78, i64 0, i64 0, !dbg !6311
  %92 = load float, float* %arrayidx79, align 8, !dbg !6311
  %add80 = fadd float %90, %92, !dbg !6312
  %93 = load float, float* %ys, align 4, !dbg !6313
  %94 = load i32, i32* %sample, align 4, !dbg !6314
  %idxprom81 = sext i32 %94 to i64, !dbg !6315
  %arrayidx82 = getelementptr inbounds [32 x [2 x float]], [32 x [2 x float]]* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 39), i64 0, i64 %idxprom81, !dbg !6315
  %arrayidx83 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx82, i64 0, i64 1, !dbg !6315
  %95 = load float, float* %arrayidx83, align 4, !dbg !6315
  %add84 = fadd float %93, %95, !dbg !6316
  %96 = load %struct.ISBSample*, %struct.ISBSample** %samp, align 8, !dbg !6317
  %zco = getelementptr inbounds %struct.ISBSample, %struct.ISBSample* %96, i32 0, i32 0, !dbg !6318
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %zco, i64 0, i64 0, !dbg !6317
  %call85 = call i32 @viewpixel_to_lampbuf(%struct.ShadBuf* %87, %struct.ObjectInstanceRen* %88, %struct.VlakRen* %89, float %add80, float %add84, float* %arraydecay), !dbg !6319
  %tobool86 = icmp ne i32 %call85, 0, !dbg !6319
  br i1 %tobool86, label %if.then87, label %if.end98, !dbg !6320

if.then87:                                        ; preds = %if.then65
  %97 = load %struct.PixStr*, %struct.PixStr** %ps, align 8, !dbg !6321
  %obi88 = getelementptr inbounds %struct.PixStr, %struct.PixStr* %97, i32 0, i32 1, !dbg !6323
  %98 = load i32, i32* %obi88, align 8, !dbg !6323
  %99 = load %struct.ISBSample*, %struct.ISBSample** %samp, align 8, !dbg !6324
  %obi89 = getelementptr inbounds %struct.ISBSample, %struct.ISBSample* %99, i32 0, i32 2, !dbg !6325
  store i32 %98, i32* %obi89, align 8, !dbg !6326
  %100 = load %struct.PixStr*, %struct.PixStr** %ps, align 8, !dbg !6327
  %facenr90 = getelementptr inbounds %struct.PixStr, %struct.PixStr* %100, i32 0, i32 2, !dbg !6328
  %101 = load i32, i32* %facenr90, align 4, !dbg !6328
  %and91 = and i32 %101, -134217729, !dbg !6329
  %102 = load %struct.ISBSample*, %struct.ISBSample** %samp, align 8, !dbg !6330
  %facenr92 = getelementptr inbounds %struct.ISBSample, %struct.ISBSample* %102, i32 0, i32 3, !dbg !6331
  store i32 %and91, i32* %facenr92, align 4, !dbg !6332
  %103 = load %struct.PixStr*, %struct.PixStr** %ps, align 8, !dbg !6333
  %shadfac = getelementptr inbounds %struct.PixStr, %struct.PixStr* %103, i32 0, i32 6, !dbg !6334
  store i16 0, i16* %shadfac, align 2, !dbg !6335
  %104 = load %struct.PixStr*, %struct.PixStr** %ps, align 8, !dbg !6336
  %shadfac93 = getelementptr inbounds %struct.PixStr, %struct.PixStr* %104, i32 0, i32 6, !dbg !6337
  %105 = load %struct.ISBSample*, %struct.ISBSample** %samp, align 8, !dbg !6338
  %shadfac94 = getelementptr inbounds %struct.ISBSample, %struct.ISBSample* %105, i32 0, i32 1, !dbg !6339
  store i16* %shadfac93, i16** %shadfac94, align 8, !dbg !6340
  %box95 = getelementptr inbounds %struct.ISBBranch, %struct.ISBBranch* %root, i32 0, i32 3, !dbg !6341
  %106 = bitcast %struct.Boxf* %box95 to %struct.rctf*, !dbg !6342
  %107 = load %struct.ISBSample*, %struct.ISBSample** %samp, align 8, !dbg !6343
  %zco96 = getelementptr inbounds %struct.ISBSample, %struct.ISBSample* %107, i32 0, i32 0, !dbg !6344
  %arraydecay97 = getelementptr inbounds [3 x float], [3 x float]* %zco96, i64 0, i64 0, !dbg !6343
  call void @bound_rectf(%struct.rctf* %106, float* %arraydecay97), !dbg !6345
  br label %if.end98, !dbg !6346

if.end98:                                         ; preds = %if.then87, %if.then65
  br label %if.end99, !dbg !6347

if.end99:                                         ; preds = %if.end98, %land.lhs.true, %while.end
  br label %for.inc100, !dbg !6348

for.inc100:                                       ; preds = %if.end99
  %108 = load i32, i32* %sample, align 4, !dbg !6349
  %inc101 = add nsw i32 %108, 1, !dbg !6349
  store i32 %inc101, i32* %sample, align 4, !dbg !6349
  br label %for.cond51, !dbg !6350, !llvm.loop !6351

for.end102:                                       ; preds = %for.cond51
  br label %if.end103, !dbg !6353

if.end103:                                        ; preds = %for.end102, %if.then41
  br label %if.end152, !dbg !6354

if.else:                                          ; preds = %for.body39
  %109 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !6355
  %rectp104 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %109, i32 0, i32 5, !dbg !6357
  %110 = load i32*, i32** %rectp104, align 8, !dbg !6357
  %111 = load i32, i32* %sindex, align 4, !dbg !6358
  %idx.ext105 = sext i32 %111 to i64, !dbg !6359
  %add.ptr106 = getelementptr inbounds i32, i32* %110, i64 %idx.ext105, !dbg !6359
  store i32* %add.ptr106, i32** %rectp, align 8, !dbg !6360
  %112 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !6361
  %recto107 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %112, i32 0, i32 4, !dbg !6362
  %113 = load i32*, i32** %recto107, align 8, !dbg !6362
  %114 = load i32, i32* %sindex, align 4, !dbg !6363
  %idx.ext108 = sext i32 %114 to i64, !dbg !6364
  %add.ptr109 = getelementptr inbounds i32, i32* %113, i64 %idx.ext108, !dbg !6364
  store i32* %add.ptr109, i32** %recto, align 8, !dbg !6365
  %115 = load i32*, i32** %rectp, align 8, !dbg !6366
  %116 = load i32, i32* %115, align 4, !dbg !6368
  %cmp110 = icmp sgt i32 %116, 0, !dbg !6369
  br i1 %cmp110, label %if.then112, label %if.end151, !dbg !6370

if.then112:                                       ; preds = %if.else
  call void @llvm.dbg.declare(metadata %struct.ObjectInstanceRen** %obi113, metadata !6371, metadata !DIExpression()), !dbg !6373
  %117 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 69), align 8, !dbg !6374
  %118 = load i32*, i32** %recto, align 8, !dbg !6375
  %119 = load i32, i32* %118, align 4, !dbg !6376
  %idxprom114 = sext i32 %119 to i64, !dbg !6377
  %arrayidx115 = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %117, i64 %idxprom114, !dbg !6377
  store %struct.ObjectInstanceRen* %arrayidx115, %struct.ObjectInstanceRen** %obi113, align 8, !dbg !6373
  call void @llvm.dbg.declare(metadata %struct.ObjectRen** %obr116, metadata !6378, metadata !DIExpression()), !dbg !6379
  %120 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi113, align 8, !dbg !6380
  %obr117 = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %120, i32 0, i32 2, !dbg !6381
  %121 = load %struct.ObjectRen*, %struct.ObjectRen** %obr117, align 8, !dbg !6381
  store %struct.ObjectRen* %121, %struct.ObjectRen** %obr116, align 8, !dbg !6379
  call void @llvm.dbg.declare(metadata %struct.VlakRen** %vlr118, metadata !6382, metadata !DIExpression()), !dbg !6383
  %122 = load %struct.ObjectRen*, %struct.ObjectRen** %obr116, align 8, !dbg !6384
  %123 = load i32*, i32** %rectp, align 8, !dbg !6385
  %124 = load i32, i32* %123, align 4, !dbg !6386
  %sub119 = sub nsw i32 %124, 1, !dbg !6387
  %and120 = and i32 %sub119, 134217727, !dbg !6388
  %call121 = call %struct.VlakRen* @RE_findOrAddVlak(%struct.ObjectRen* %122, i32 %and120), !dbg !6389
  store %struct.VlakRen* %call121, %struct.VlakRen** %vlr118, align 8, !dbg !6383
  call void @llvm.dbg.declare(metadata float* %xs122, metadata !6390, metadata !DIExpression()), !dbg !6391
  %125 = load i32, i32* %x, align 4, !dbg !6392
  %126 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !6393
  %disprect123 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %126, i32 0, i32 13, !dbg !6394
  %xmin124 = getelementptr inbounds %struct.rcti, %struct.rcti* %disprect123, i32 0, i32 0, !dbg !6395
  %127 = load i32, i32* %xmin124, align 8, !dbg !6395
  %add125 = add nsw i32 %125, %127, !dbg !6396
  %conv126 = sitofp i32 %add125 to float, !dbg !6397
  store float %conv126, float* %xs122, align 4, !dbg !6391
  call void @llvm.dbg.declare(metadata float* %ys127, metadata !6398, metadata !DIExpression()), !dbg !6399
  %128 = load i32, i32* %y, align 4, !dbg !6400
  %129 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !6401
  %disprect128 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %129, i32 0, i32 13, !dbg !6402
  %ymin129 = getelementptr inbounds %struct.rcti, %struct.rcti* %disprect128, i32 0, i32 2, !dbg !6403
  %130 = load i32, i32* %ymin129, align 8, !dbg !6403
  %add130 = add nsw i32 %128, %130, !dbg !6404
  %conv131 = sitofp i32 %add130 to float, !dbg !6405
  store float %conv131, float* %ys127, align 4, !dbg !6399
  %arrayidx132 = getelementptr inbounds [16 x %struct.ISBSample*], [16 x %struct.ISBSample*]* %samplebuf, i64 0, i64 0, !dbg !6406
  %131 = load %struct.ISBSample*, %struct.ISBSample** %arrayidx132, align 16, !dbg !6406
  %132 = load i32, i32* %sindex, align 4, !dbg !6407
  %idx.ext133 = sext i32 %132 to i64, !dbg !6408
  %add.ptr134 = getelementptr inbounds %struct.ISBSample, %struct.ISBSample* %131, i64 %idx.ext133, !dbg !6408
  store %struct.ISBSample* %add.ptr134, %struct.ISBSample** %samp, align 8, !dbg !6409
  %133 = load %struct.ShadBuf*, %struct.ShadBuf** %shb, align 8, !dbg !6410
  %134 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi113, align 8, !dbg !6412
  %135 = load %struct.VlakRen*, %struct.VlakRen** %vlr118, align 8, !dbg !6413
  %136 = load float, float* %xs122, align 4, !dbg !6414
  %137 = load float, float* %ys127, align 4, !dbg !6415
  %138 = load %struct.ISBSample*, %struct.ISBSample** %samp, align 8, !dbg !6416
  %zco135 = getelementptr inbounds %struct.ISBSample, %struct.ISBSample* %138, i32 0, i32 0, !dbg !6417
  %arraydecay136 = getelementptr inbounds [3 x float], [3 x float]* %zco135, i64 0, i64 0, !dbg !6416
  %call137 = call i32 @viewpixel_to_lampbuf(%struct.ShadBuf* %133, %struct.ObjectInstanceRen* %134, %struct.VlakRen* %135, float %136, float %137, float* %arraydecay136), !dbg !6418
  %tobool138 = icmp ne i32 %call137, 0, !dbg !6418
  br i1 %tobool138, label %if.then139, label %if.end150, !dbg !6419

if.then139:                                       ; preds = %if.then112
  %139 = load i32*, i32** %recto, align 8, !dbg !6420
  %140 = load i32, i32* %139, align 4, !dbg !6422
  %141 = load %struct.ISBSample*, %struct.ISBSample** %samp, align 8, !dbg !6423
  %obi140 = getelementptr inbounds %struct.ISBSample, %struct.ISBSample* %141, i32 0, i32 2, !dbg !6424
  store i32 %140, i32* %obi140, align 8, !dbg !6425
  %142 = load i32*, i32** %rectp, align 8, !dbg !6426
  %143 = load i32, i32* %142, align 4, !dbg !6427
  %and141 = and i32 %143, -134217729, !dbg !6428
  %144 = load %struct.ISBSample*, %struct.ISBSample** %samp, align 8, !dbg !6429
  %facenr142 = getelementptr inbounds %struct.ISBSample, %struct.ISBSample* %144, i32 0, i32 3, !dbg !6430
  store i32 %and141, i32* %facenr142, align 4, !dbg !6431
  %145 = load %struct.ISBData*, %struct.ISBData** %isbdata, align 8, !dbg !6432
  %shadfacs143 = getelementptr inbounds %struct.ISBData, %struct.ISBData* %145, i32 0, i32 0, !dbg !6433
  %146 = load i16*, i16** %shadfacs143, align 8, !dbg !6433
  %147 = load i32, i32* %sindex, align 4, !dbg !6434
  %idx.ext144 = sext i32 %147 to i64, !dbg !6435
  %add.ptr145 = getelementptr inbounds i16, i16* %146, i64 %idx.ext144, !dbg !6435
  %148 = load %struct.ISBSample*, %struct.ISBSample** %samp, align 8, !dbg !6436
  %shadfac146 = getelementptr inbounds %struct.ISBSample, %struct.ISBSample* %148, i32 0, i32 1, !dbg !6437
  store i16* %add.ptr145, i16** %shadfac146, align 8, !dbg !6438
  %box147 = getelementptr inbounds %struct.ISBBranch, %struct.ISBBranch* %root, i32 0, i32 3, !dbg !6439
  %149 = bitcast %struct.Boxf* %box147 to %struct.rctf*, !dbg !6440
  %150 = load %struct.ISBSample*, %struct.ISBSample** %samp, align 8, !dbg !6441
  %zco148 = getelementptr inbounds %struct.ISBSample, %struct.ISBSample* %150, i32 0, i32 0, !dbg !6442
  %arraydecay149 = getelementptr inbounds [3 x float], [3 x float]* %zco148, i64 0, i64 0, !dbg !6441
  call void @bound_rectf(%struct.rctf* %149, float* %arraydecay149), !dbg !6443
  br label %if.end150, !dbg !6444

if.end150:                                        ; preds = %if.then139, %if.then112
  br label %if.end151, !dbg !6445

if.end151:                                        ; preds = %if.end150, %if.else
  br label %if.end152

if.end152:                                        ; preds = %if.end151, %if.end103
  br label %for.inc153, !dbg !6446

for.inc153:                                       ; preds = %if.end152
  %151 = load i32, i32* %x, align 4, !dbg !6447
  %inc154 = add nsw i32 %151, 1, !dbg !6447
  store i32 %inc154, i32* %x, align 4, !dbg !6447
  %152 = load i32, i32* %sindex, align 4, !dbg !6448
  %inc155 = add nsw i32 %152, 1, !dbg !6448
  store i32 %inc155, i32* %sindex, align 4, !dbg !6448
  br label %for.cond35, !dbg !6449, !llvm.loop !6450

for.end156:                                       ; preds = %for.cond35
  br label %for.inc157, !dbg !6452

for.inc157:                                       ; preds = %for.end156
  %153 = load i32, i32* %y, align 4, !dbg !6453
  %inc158 = add nsw i32 %153, 1, !dbg !6453
  store i32 %inc158, i32* %y, align 4, !dbg !6453
  br label %for.cond30, !dbg !6454, !llvm.loop !6455

for.end159:                                       ; preds = %for.cond30
  %box160 = getelementptr inbounds %struct.ISBBranch, %struct.ISBBranch* %root, i32 0, i32 3, !dbg !6457
  %xmin161 = getelementptr inbounds %struct.Boxf, %struct.Boxf* %box160, i32 0, i32 0, !dbg !6459
  %154 = load float, float* %xmin161, align 8, !dbg !6459
  %155 = load %struct.ShadBuf*, %struct.ShadBuf** %shb, align 8, !dbg !6460
  %size162 = getelementptr inbounds %struct.ShadBuf, %struct.ShadBuf* %155, i32 0, i32 14, !dbg !6461
  %156 = load i32, i32* %size162, align 8, !dbg !6461
  %conv163 = sitofp i32 %156 to float, !dbg !6462
  %cmp164 = fcmp une float %154, %conv163, !dbg !6463
  br i1 %cmp164, label %if.then166, label %if.else216, !dbg !6464

if.then166:                                       ; preds = %for.end159
  %157 = load %struct.MemArena*, %struct.MemArena** %memarena, align 8, !dbg !6465
  call void @isb_bsp_split_init(%struct.ISBBranch* %root, %struct.MemArena* %157, i32 8), !dbg !6467
  %158 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !6468
  %159 = load %struct.MemArena*, %struct.MemArena** %memarena, align 8, !dbg !6469
  %arraydecay167 = getelementptr inbounds [16 x %struct.ISBSample*], [16 x %struct.ISBSample*]* %samplebuf, i64 0, i64 0, !dbg !6470
  %call168 = call i32 @isb_add_samples(%struct.RenderPart* %158, %struct.ISBBranch* %root, %struct.MemArena* %159, %struct.ISBSample** %arraydecay167), !dbg !6471
  store i32 %call168, i32* %bsp_err, align 4, !dbg !6472
  %160 = load i32, i32* %bsp_err, align 4, !dbg !6473
  %cmp169 = icmp eq i32 %160, 0, !dbg !6475
  br i1 %cmp169, label %if.then171, label %if.end215, !dbg !6476

if.then171:                                       ; preds = %if.then166
  %161 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !6477
  call void @isb_bsp_fillfaces(%struct.Render* @R, %struct.LampRen* %161, %struct.ISBBranch* %root), !dbg !6479
  %162 = load i16, i16* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 5), align 2, !dbg !6480
  %tobool172 = icmp ne i16 %162, 0, !dbg !6482
  br i1 %tobool172, label %if.then173, label %if.end214, !dbg !6483

if.then173:                                       ; preds = %if.then171
  call void @llvm.dbg.declare(metadata %struct.ISBShadfacA*** %isbsa, metadata !6484, metadata !DIExpression()), !dbg !6486
  %163 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !6487
  %164 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !6488
  %rectx174 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %164, i32 0, i32 14, !dbg !6489
  %165 = load i32, i32* %rectx174, align 8, !dbg !6489
  %166 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !6490
  %recty175 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %166, i32 0, i32 15, !dbg !6491
  %167 = load i32, i32* %recty175, align 4, !dbg !6491
  %mul176 = mul nsw i32 %165, %167, !dbg !6492
  %conv177 = sext i32 %mul176 to i64, !dbg !6488
  %mul178 = mul i64 %conv177, 8, !dbg !6493
  %call179 = call i8* %163(i64 %mul178, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.19, i64 0, i64 0)), !dbg !6487
  %168 = bitcast i8* %call179 to %struct.ISBShadfacA**, !dbg !6487
  %169 = load %struct.ISBData*, %struct.ISBData** %isbdata, align 8, !dbg !6494
  %shadfaca = getelementptr inbounds %struct.ISBData, %struct.ISBData* %169, i32 0, i32 1, !dbg !6495
  store %struct.ISBShadfacA** %168, %struct.ISBShadfacA*** %shadfaca, align 8, !dbg !6496
  store %struct.ISBShadfacA** %168, %struct.ISBShadfacA*** %isbsa, align 8, !dbg !6486
  %call180 = call %struct.MemArena* @BLI_memarena_new(i64 1310720, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.17, i64 0, i64 0)), !dbg !6497
  %170 = load %struct.ISBData*, %struct.ISBData** %isbdata, align 8, !dbg !6498
  %memarena181 = getelementptr inbounds %struct.ISBData, %struct.ISBData* %170, i32 0, i32 2, !dbg !6499
  store %struct.MemArena* %call180, %struct.MemArena** %memarena181, align 8, !dbg !6500
  %171 = load %struct.ISBData*, %struct.ISBData** %isbdata, align 8, !dbg !6501
  %memarena182 = getelementptr inbounds %struct.ISBData, %struct.ISBData* %171, i32 0, i32 2, !dbg !6502
  %172 = load %struct.MemArena*, %struct.MemArena** %memarena182, align 8, !dbg !6502
  call void @BLI_memarena_use_calloc(%struct.MemArena* %172), !dbg !6503
  %173 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !6504
  %rectdaps183 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %173, i32 0, i32 8, !dbg !6506
  %174 = load i64*, i64** %rectdaps183, align 8, !dbg !6506
  store i64* %174, i64** %rd, align 8, !dbg !6507
  %175 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !6508
  %rectx184 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %175, i32 0, i32 14, !dbg !6509
  %176 = load i32, i32* %rectx184, align 8, !dbg !6509
  %177 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !6510
  %recty185 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %177, i32 0, i32 15, !dbg !6511
  %178 = load i32, i32* %recty185, align 4, !dbg !6511
  %mul186 = mul nsw i32 %176, %178, !dbg !6512
  store i32 %mul186, i32* %x, align 4, !dbg !6513
  br label %for.cond187, !dbg !6514

for.cond187:                                      ; preds = %for.inc211, %if.then173
  %179 = load i32, i32* %x, align 4, !dbg !6515
  %cmp188 = icmp sgt i32 %179, 0, !dbg !6517
  br i1 %cmp188, label %for.body190, label %for.end213, !dbg !6518

for.body190:                                      ; preds = %for.cond187
  %180 = load i64*, i64** %rd, align 8, !dbg !6519
  %181 = load i64, i64* %180, align 8, !dbg !6522
  %tobool191 = icmp ne i64 %181, 0, !dbg !6522
  br i1 %tobool191, label %if.then192, label %if.end210, !dbg !6523

if.then192:                                       ; preds = %for.body190
  call void @llvm.dbg.declare(metadata %struct.PixStr** %ps193, metadata !6524, metadata !DIExpression()), !dbg !6526
  %182 = load i64*, i64** %rd, align 8, !dbg !6527
  %183 = load i64, i64* %182, align 8, !dbg !6528
  %184 = inttoptr i64 %183 to %struct.PixStr*, !dbg !6529
  store %struct.PixStr* %184, %struct.PixStr** %ps193, align 8, !dbg !6526
  br label %while.cond194, !dbg !6530

while.cond194:                                    ; preds = %if.end207, %if.then192
  %185 = load %struct.PixStr*, %struct.PixStr** %ps193, align 8, !dbg !6531
  %tobool195 = icmp ne %struct.PixStr* %185, null, !dbg !6530
  br i1 %tobool195, label %while.body196, label %while.end209, !dbg !6530

while.body196:                                    ; preds = %while.cond194
  %186 = load %struct.PixStr*, %struct.PixStr** %ps193, align 8, !dbg !6532
  %shadfac197 = getelementptr inbounds %struct.PixStr, %struct.PixStr* %186, i32 0, i32 6, !dbg !6535
  %187 = load i16, i16* %shadfac197, align 2, !dbg !6535
  %tobool198 = icmp ne i16 %187, 0, !dbg !6532
  br i1 %tobool198, label %if.then199, label %if.end207, !dbg !6536

if.then199:                                       ; preds = %while.body196
  %188 = load %struct.ISBShadfacA**, %struct.ISBShadfacA*** %isbsa, align 8, !dbg !6537
  %189 = load %struct.ISBData*, %struct.ISBData** %isbdata, align 8, !dbg !6538
  %memarena200 = getelementptr inbounds %struct.ISBData, %struct.ISBData* %189, i32 0, i32 2, !dbg !6539
  %190 = load %struct.MemArena*, %struct.MemArena** %memarena200, align 8, !dbg !6539
  %191 = load %struct.PixStr*, %struct.PixStr** %ps193, align 8, !dbg !6540
  %obi201 = getelementptr inbounds %struct.PixStr, %struct.PixStr* %191, i32 0, i32 1, !dbg !6541
  %192 = load i32, i32* %obi201, align 8, !dbg !6541
  %193 = load %struct.PixStr*, %struct.PixStr** %ps193, align 8, !dbg !6542
  %facenr202 = getelementptr inbounds %struct.PixStr, %struct.PixStr* %193, i32 0, i32 2, !dbg !6543
  %194 = load i32, i32* %facenr202, align 4, !dbg !6543
  %195 = load %struct.PixStr*, %struct.PixStr** %ps193, align 8, !dbg !6544
  %shadfac203 = getelementptr inbounds %struct.PixStr, %struct.PixStr* %195, i32 0, i32 6, !dbg !6545
  %196 = load i16, i16* %shadfac203, align 2, !dbg !6545
  %197 = load %struct.PixStr*, %struct.PixStr** %ps193, align 8, !dbg !6546
  %mask204 = getelementptr inbounds %struct.PixStr, %struct.PixStr* %197, i32 0, i32 5, !dbg !6547
  %198 = load i16, i16* %mask204, align 8, !dbg !6547
  %call205 = call i32 @count_mask(i16 zeroext %198), !dbg !6548
  %conv206 = trunc i32 %call205 to i16, !dbg !6548
  call void @isb_add_shadfac(%struct.ISBShadfacA** %188, %struct.MemArena* %190, i32 %192, i32 %194, i16 signext %196, i16 signext %conv206), !dbg !6549
  br label %if.end207, !dbg !6549

if.end207:                                        ; preds = %if.then199, %while.body196
  %199 = load %struct.PixStr*, %struct.PixStr** %ps193, align 8, !dbg !6550
  %next208 = getelementptr inbounds %struct.PixStr, %struct.PixStr* %199, i32 0, i32 0, !dbg !6551
  %200 = load %struct.PixStr*, %struct.PixStr** %next208, align 8, !dbg !6551
  store %struct.PixStr* %200, %struct.PixStr** %ps193, align 8, !dbg !6552
  br label %while.cond194, !dbg !6530, !llvm.loop !6553

while.end209:                                     ; preds = %while.cond194
  br label %if.end210, !dbg !6555

if.end210:                                        ; preds = %while.end209, %for.body190
  br label %for.inc211, !dbg !6556

for.inc211:                                       ; preds = %if.end210
  %201 = load i32, i32* %x, align 4, !dbg !6557
  %dec = add nsw i32 %201, -1, !dbg !6557
  store i32 %dec, i32* %x, align 4, !dbg !6557
  %202 = load i64*, i64** %rd, align 8, !dbg !6558
  %incdec.ptr = getelementptr inbounds i64, i64* %202, i32 1, !dbg !6558
  store i64* %incdec.ptr, i64** %rd, align 8, !dbg !6558
  %203 = load %struct.ISBShadfacA**, %struct.ISBShadfacA*** %isbsa, align 8, !dbg !6559
  %incdec.ptr212 = getelementptr inbounds %struct.ISBShadfacA*, %struct.ISBShadfacA** %203, i32 1, !dbg !6559
  store %struct.ISBShadfacA** %incdec.ptr212, %struct.ISBShadfacA*** %isbsa, align 8, !dbg !6559
  br label %for.cond187, !dbg !6560, !llvm.loop !6561

for.end213:                                       ; preds = %for.cond187
  br label %if.end214, !dbg !6563

if.end214:                                        ; preds = %for.end213, %if.then171
  br label %if.end215, !dbg !6564

if.end215:                                        ; preds = %if.end214, %if.then166
  br label %if.end223, !dbg !6565

if.else216:                                       ; preds = %for.end159
  %204 = load %struct.ISBData*, %struct.ISBData** %isbdata, align 8, !dbg !6566
  %shadfacs217 = getelementptr inbounds %struct.ISBData, %struct.ISBData* %204, i32 0, i32 0, !dbg !6569
  %205 = load i16*, i16** %shadfacs217, align 8, !dbg !6569
  %tobool218 = icmp ne i16* %205, null, !dbg !6566
  br i1 %tobool218, label %if.then219, label %if.end222, !dbg !6570

if.then219:                                       ; preds = %if.else216
  %206 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !6571
  %207 = load %struct.ISBData*, %struct.ISBData** %isbdata, align 8, !dbg !6573
  %shadfacs220 = getelementptr inbounds %struct.ISBData, %struct.ISBData* %207, i32 0, i32 0, !dbg !6574
  %208 = load i16*, i16** %shadfacs220, align 8, !dbg !6574
  %209 = bitcast i16* %208 to i8*, !dbg !6573
  call void %206(i8* %209), !dbg !6571
  %210 = load %struct.ISBData*, %struct.ISBData** %isbdata, align 8, !dbg !6575
  %shadfacs221 = getelementptr inbounds %struct.ISBData, %struct.ISBData* %210, i32 0, i32 0, !dbg !6576
  store i16* null, i16** %shadfacs221, align 8, !dbg !6577
  br label %if.end222, !dbg !6578

if.end222:                                        ; preds = %if.then219, %if.else216
  br label %if.end223

if.end223:                                        ; preds = %if.end222, %if.end215
  %211 = load %struct.MemArena*, %struct.MemArena** %memarena, align 8, !dbg !6579
  call void @BLI_memarena_free(%struct.MemArena* %211), !dbg !6580
  store i32 0, i32* %x, align 4, !dbg !6581
  br label %for.cond224, !dbg !6583

for.cond224:                                      ; preds = %for.inc237, %if.end223
  %212 = load i32, i32* %x, align 4, !dbg !6584
  %213 = load i16, i16* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 5), align 2, !dbg !6586
  %conv225 = sext i16 %213 to i32, !dbg !6587
  %tobool226 = icmp ne i32 %conv225, 0, !dbg !6587
  br i1 %tobool226, label %cond.true227, label %cond.false229, !dbg !6587

cond.true227:                                     ; preds = %for.cond224
  %214 = load i16, i16* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 5), align 2, !dbg !6588
  %conv228 = sext i16 %214 to i32, !dbg !6589
  br label %cond.end230, !dbg !6587

cond.false229:                                    ; preds = %for.cond224
  br label %cond.end230, !dbg !6587

cond.end230:                                      ; preds = %cond.false229, %cond.true227
  %cond231 = phi i32 [ %conv228, %cond.true227 ], [ 1, %cond.false229 ], !dbg !6587
  %cmp232 = icmp slt i32 %212, %cond231, !dbg !6590
  br i1 %cmp232, label %for.body234, label %for.end239, !dbg !6591

for.body234:                                      ; preds = %cond.end230
  %215 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !6592
  %216 = load i32, i32* %x, align 4, !dbg !6593
  %idxprom235 = sext i32 %216 to i64, !dbg !6594
  %arrayidx236 = getelementptr inbounds [16 x %struct.ISBSample*], [16 x %struct.ISBSample*]* %samplebuf, i64 0, i64 %idxprom235, !dbg !6594
  %217 = load %struct.ISBSample*, %struct.ISBSample** %arrayidx236, align 8, !dbg !6594
  %218 = bitcast %struct.ISBSample* %217 to i8*, !dbg !6594
  call void %215(i8* %218), !dbg !6592
  br label %for.inc237, !dbg !6592

for.inc237:                                       ; preds = %for.body234
  %219 = load i32, i32* %x, align 4, !dbg !6595
  %inc238 = add nsw i32 %219, 1, !dbg !6595
  store i32 %inc238, i32* %x, align 4, !dbg !6595
  br label %for.cond224, !dbg !6596, !llvm.loop !6597

for.end239:                                       ; preds = %cond.end230
  %220 = load i32, i32* %bsp_err, align 4, !dbg !6599
  %tobool240 = icmp ne i32 %220, 0, !dbg !6599
  br i1 %tobool240, label %if.then241, label %if.end243, !dbg !6601

if.then241:                                       ; preds = %for.end239
  %call242 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.20, i64 0, i64 0)), !dbg !6602
  br label %if.end243, !dbg !6602

if.end243:                                        ; preds = %if.then241, %for.end239
  ret void, !dbg !6603
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @ISB_free(%struct.RenderPart* %pa) #0 !dbg !6604 {
entry:
  %pa.addr = alloca %struct.RenderPart*, align 8
  %go = alloca %struct.GroupObject*, align 8
  %lar = alloca %struct.LampRen*, align 8
  %isbdata = alloca %struct.ISBData*, align 8
  store %struct.RenderPart* %pa, %struct.RenderPart** %pa.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RenderPart** %pa.addr, metadata !6607, metadata !DIExpression()), !dbg !6608
  call void @llvm.dbg.declare(metadata %struct.GroupObject** %go, metadata !6609, metadata !DIExpression()), !dbg !6610
  %0 = load i8*, i8** getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 66, i32 0), align 8, !dbg !6611
  %1 = bitcast i8* %0 to %struct.GroupObject*, !dbg !6613
  store %struct.GroupObject* %1, %struct.GroupObject** %go, align 8, !dbg !6614
  br label %for.cond, !dbg !6615

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load %struct.GroupObject*, %struct.GroupObject** %go, align 8, !dbg !6616
  %tobool = icmp ne %struct.GroupObject* %2, null, !dbg !6618
  br i1 %tobool, label %for.body, label %for.end, !dbg !6618

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.LampRen** %lar, metadata !6619, metadata !DIExpression()), !dbg !6621
  %3 = load %struct.GroupObject*, %struct.GroupObject** %go, align 8, !dbg !6622
  %lampren = getelementptr inbounds %struct.GroupObject, %struct.GroupObject* %3, i32 0, i32 3, !dbg !6623
  %4 = load i8*, i8** %lampren, align 8, !dbg !6623
  %5 = bitcast i8* %4 to %struct.LampRen*, !dbg !6622
  store %struct.LampRen* %5, %struct.LampRen** %lar, align 8, !dbg !6621
  %6 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !6624
  %type = getelementptr inbounds %struct.LampRen, %struct.LampRen* %6, i32 0, i32 6, !dbg !6626
  %7 = load i16, i16* %type, align 8, !dbg !6626
  %conv = sext i16 %7 to i32, !dbg !6624
  %cmp = icmp eq i32 %conv, 2, !dbg !6627
  br i1 %cmp, label %land.lhs.true, label %if.end27, !dbg !6628

land.lhs.true:                                    ; preds = %for.body
  %8 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !6629
  %shb = getelementptr inbounds %struct.LampRen, %struct.LampRen* %8, i32 0, i32 57, !dbg !6630
  %9 = load %struct.ShadBuf*, %struct.ShadBuf** %shb, align 8, !dbg !6630
  %tobool2 = icmp ne %struct.ShadBuf* %9, null, !dbg !6629
  br i1 %tobool2, label %land.lhs.true3, label %if.end27, !dbg !6631

land.lhs.true3:                                   ; preds = %land.lhs.true
  %10 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !6632
  %buftype = getelementptr inbounds %struct.LampRen, %struct.LampRen* %10, i32 0, i32 36, !dbg !6633
  %11 = load i16, i16* %buftype, align 4, !dbg !6633
  %conv4 = sext i16 %11 to i32, !dbg !6632
  %cmp5 = icmp eq i32 %conv4, 1, !dbg !6634
  br i1 %cmp5, label %if.then, label %if.end27, !dbg !6635

if.then:                                          ; preds = %land.lhs.true3
  call void @llvm.dbg.declare(metadata %struct.ISBData** %isbdata, metadata !6636, metadata !DIExpression()), !dbg !6638
  %12 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !6639
  %shb7 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %12, i32 0, i32 57, !dbg !6640
  %13 = load %struct.ShadBuf*, %struct.ShadBuf** %shb7, align 8, !dbg !6640
  %isb_result = getelementptr inbounds %struct.ShadBuf, %struct.ShadBuf* %13, i32 0, i32 17, !dbg !6641
  %14 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !6642
  %thread = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %14, i32 0, i32 20, !dbg !6643
  %15 = load i16, i16* %thread, align 2, !dbg !6643
  %idxprom = sext i16 %15 to i64, !dbg !6639
  %arrayidx = getelementptr inbounds [1 x %struct.ISBData*], [1 x %struct.ISBData*]* %isb_result, i64 0, i64 %idxprom, !dbg !6639
  %16 = load %struct.ISBData*, %struct.ISBData** %arrayidx, align 8, !dbg !6639
  store %struct.ISBData* %16, %struct.ISBData** %isbdata, align 8, !dbg !6638
  %17 = load %struct.ISBData*, %struct.ISBData** %isbdata, align 8, !dbg !6644
  %tobool8 = icmp ne %struct.ISBData* %17, null, !dbg !6644
  br i1 %tobool8, label %if.then9, label %if.end26, !dbg !6646

if.then9:                                         ; preds = %if.then
  %18 = load %struct.ISBData*, %struct.ISBData** %isbdata, align 8, !dbg !6647
  %shadfacs = getelementptr inbounds %struct.ISBData, %struct.ISBData* %18, i32 0, i32 0, !dbg !6650
  %19 = load i16*, i16** %shadfacs, align 8, !dbg !6650
  %tobool10 = icmp ne i16* %19, null, !dbg !6647
  br i1 %tobool10, label %if.then11, label %if.end, !dbg !6651

if.then11:                                        ; preds = %if.then9
  %20 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !6652
  %21 = load %struct.ISBData*, %struct.ISBData** %isbdata, align 8, !dbg !6653
  %shadfacs12 = getelementptr inbounds %struct.ISBData, %struct.ISBData* %21, i32 0, i32 0, !dbg !6654
  %22 = load i16*, i16** %shadfacs12, align 8, !dbg !6654
  %23 = bitcast i16* %22 to i8*, !dbg !6653
  call void %20(i8* %23), !dbg !6652
  br label %if.end, !dbg !6652

if.end:                                           ; preds = %if.then11, %if.then9
  %24 = load %struct.ISBData*, %struct.ISBData** %isbdata, align 8, !dbg !6655
  %shadfaca = getelementptr inbounds %struct.ISBData, %struct.ISBData* %24, i32 0, i32 1, !dbg !6657
  %25 = load %struct.ISBShadfacA**, %struct.ISBShadfacA*** %shadfaca, align 8, !dbg !6657
  %tobool13 = icmp ne %struct.ISBShadfacA** %25, null, !dbg !6655
  br i1 %tobool13, label %if.then14, label %if.end16, !dbg !6658

if.then14:                                        ; preds = %if.end
  %26 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !6659
  %27 = load %struct.ISBData*, %struct.ISBData** %isbdata, align 8, !dbg !6660
  %shadfaca15 = getelementptr inbounds %struct.ISBData, %struct.ISBData* %27, i32 0, i32 1, !dbg !6661
  %28 = load %struct.ISBShadfacA**, %struct.ISBShadfacA*** %shadfaca15, align 8, !dbg !6661
  %29 = bitcast %struct.ISBShadfacA** %28 to i8*, !dbg !6660
  call void %26(i8* %29), !dbg !6659
  br label %if.end16, !dbg !6659

if.end16:                                         ; preds = %if.then14, %if.end
  %30 = load %struct.ISBData*, %struct.ISBData** %isbdata, align 8, !dbg !6662
  %memarena = getelementptr inbounds %struct.ISBData, %struct.ISBData* %30, i32 0, i32 2, !dbg !6664
  %31 = load %struct.MemArena*, %struct.MemArena** %memarena, align 8, !dbg !6664
  %tobool17 = icmp ne %struct.MemArena* %31, null, !dbg !6662
  br i1 %tobool17, label %if.then18, label %if.end20, !dbg !6665

if.then18:                                        ; preds = %if.end16
  %32 = load %struct.ISBData*, %struct.ISBData** %isbdata, align 8, !dbg !6666
  %memarena19 = getelementptr inbounds %struct.ISBData, %struct.ISBData* %32, i32 0, i32 2, !dbg !6667
  %33 = load %struct.MemArena*, %struct.MemArena** %memarena19, align 8, !dbg !6667
  call void @BLI_memarena_free(%struct.MemArena* %33), !dbg !6668
  br label %if.end20, !dbg !6668

if.end20:                                         ; preds = %if.then18, %if.end16
  %34 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !6669
  %35 = load %struct.ISBData*, %struct.ISBData** %isbdata, align 8, !dbg !6670
  %36 = bitcast %struct.ISBData* %35 to i8*, !dbg !6670
  call void %34(i8* %36), !dbg !6669
  %37 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !6671
  %shb21 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %37, i32 0, i32 57, !dbg !6672
  %38 = load %struct.ShadBuf*, %struct.ShadBuf** %shb21, align 8, !dbg !6672
  %isb_result22 = getelementptr inbounds %struct.ShadBuf, %struct.ShadBuf* %38, i32 0, i32 17, !dbg !6673
  %39 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !6674
  %thread23 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %39, i32 0, i32 20, !dbg !6675
  %40 = load i16, i16* %thread23, align 2, !dbg !6675
  %idxprom24 = sext i16 %40 to i64, !dbg !6671
  %arrayidx25 = getelementptr inbounds [1 x %struct.ISBData*], [1 x %struct.ISBData*]* %isb_result22, i64 0, i64 %idxprom24, !dbg !6671
  store %struct.ISBData* null, %struct.ISBData** %arrayidx25, align 8, !dbg !6676
  br label %if.end26, !dbg !6677

if.end26:                                         ; preds = %if.end20, %if.then
  br label %if.end27, !dbg !6678

if.end27:                                         ; preds = %if.end26, %land.lhs.true3, %land.lhs.true, %for.body
  br label %for.inc, !dbg !6679

for.inc:                                          ; preds = %if.end27
  %41 = load %struct.GroupObject*, %struct.GroupObject** %go, align 8, !dbg !6680
  %next = getelementptr inbounds %struct.GroupObject, %struct.GroupObject* %41, i32 0, i32 0, !dbg !6681
  %42 = load %struct.GroupObject*, %struct.GroupObject** %next, align 8, !dbg !6681
  store %struct.GroupObject* %42, %struct.GroupObject** %go, align 8, !dbg !6682
  br label %for.cond, !dbg !6683, !llvm.loop !6684

for.end:                                          ; preds = %for.cond
  ret void, !dbg !6686
}

declare dso_local void @BLI_memarena_free(%struct.MemArena*) #4

declare dso_local void @copy_m4_m4([4 x float]*, [4 x float]*) #4

; Function Attrs: noinline nounwind uwtable
define internal i32 @max_ii(i32 %a, i32 %b) #0 !dbg !6687 {
entry:
  %a.addr = alloca i32, align 4
  %b.addr = alloca i32, align 4
  store i32 %a, i32* %a.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr, metadata !6688, metadata !DIExpression()), !dbg !6689
  store i32 %b, i32* %b.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %b.addr, metadata !6690, metadata !DIExpression()), !dbg !6691
  %0 = load i32, i32* %b.addr, align 4, !dbg !6692
  %1 = load i32, i32* %a.addr, align 4, !dbg !6693
  %cmp = icmp slt i32 %0, %1, !dbg !6694
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !6695

cond.true:                                        ; preds = %entry
  %2 = load i32, i32* %a.addr, align 4, !dbg !6696
  br label %cond.end, !dbg !6695

cond.false:                                       ; preds = %entry
  %3 = load i32, i32* %b.addr, align 4, !dbg !6697
  br label %cond.end, !dbg !6695

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %2, %cond.true ], [ %3, %cond.false ], !dbg !6695
  ret i32 %cond, !dbg !6698
}

declare dso_local %struct.VertRen* @RE_findOrAddVert(%struct.ObjectRen*, i32) #4

; Function Attrs: noinline nounwind uwtable
define internal void @copy_v3_v3(float* %r, float* %a) #0 !dbg !6699 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !6702, metadata !DIExpression()), !dbg !6703
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !6704, metadata !DIExpression()), !dbg !6705
  %0 = load float*, float** %a.addr, align 8, !dbg !6706
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !6706
  %1 = load float, float* %arrayidx, align 4, !dbg !6706
  %2 = load float*, float** %r.addr, align 8, !dbg !6707
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !6707
  store float %1, float* %arrayidx1, align 4, !dbg !6708
  %3 = load float*, float** %a.addr, align 8, !dbg !6709
  %arrayidx2 = getelementptr inbounds float, float* %3, i64 1, !dbg !6709
  %4 = load float, float* %arrayidx2, align 4, !dbg !6709
  %5 = load float*, float** %r.addr, align 8, !dbg !6710
  %arrayidx3 = getelementptr inbounds float, float* %5, i64 1, !dbg !6710
  store float %4, float* %arrayidx3, align 4, !dbg !6711
  %6 = load float*, float** %a.addr, align 8, !dbg !6712
  %arrayidx4 = getelementptr inbounds float, float* %6, i64 2, !dbg !6712
  %7 = load float, float* %arrayidx4, align 4, !dbg !6712
  %8 = load float*, float** %r.addr, align 8, !dbg !6713
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 2, !dbg !6713
  store float %7, float* %arrayidx5, align 4, !dbg !6714
  ret void, !dbg !6715
}

declare dso_local void @mul_m4_v3([4 x float]*, float*) #4

; Function Attrs: noinline nounwind uwtable
define internal float @normalize_v3(float* %n) #0 !dbg !6716 {
entry:
  %n.addr = alloca float*, align 8
  store float* %n, float** %n.addr, align 8
  call void @llvm.dbg.declare(metadata float** %n.addr, metadata !6719, metadata !DIExpression()), !dbg !6720
  %0 = load float*, float** %n.addr, align 8, !dbg !6721
  %1 = load float*, float** %n.addr, align 8, !dbg !6722
  %call = call float @normalize_v3_v3(float* %0, float* %1), !dbg !6723
  ret float %call, !dbg !6724
}

; Function Attrs: noinline nounwind uwtable
define internal float @normalize_v3_v3(float* %r, float* %a) #0 !dbg !6725 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  %d = alloca float, align 4
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !6728, metadata !DIExpression()), !dbg !6729
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !6730, metadata !DIExpression()), !dbg !6731
  call void @llvm.dbg.declare(metadata float* %d, metadata !6732, metadata !DIExpression()), !dbg !6733
  %0 = load float*, float** %a.addr, align 8, !dbg !6734
  %1 = load float*, float** %a.addr, align 8, !dbg !6735
  %call = call float @dot_v3v3(float* %0, float* %1), !dbg !6736
  store float %call, float* %d, align 4, !dbg !6733
  %2 = load float, float* %d, align 4, !dbg !6737
  %cmp = fcmp ogt float %2, 0x38AA95A5C0000000, !dbg !6739
  br i1 %cmp, label %if.then, label %if.else, !dbg !6740

if.then:                                          ; preds = %entry
  %3 = load float, float* %d, align 4, !dbg !6741
  %call1 = call float @sqrtf(float %3) #5, !dbg !6743
  store float %call1, float* %d, align 4, !dbg !6744
  %4 = load float*, float** %r.addr, align 8, !dbg !6745
  %5 = load float*, float** %a.addr, align 8, !dbg !6746
  %6 = load float, float* %d, align 4, !dbg !6747
  %div = fdiv float 1.000000e+00, %6, !dbg !6748
  call void @mul_v3_v3fl(float* %4, float* %5, float %div), !dbg !6749
  br label %if.end, !dbg !6750

if.else:                                          ; preds = %entry
  %7 = load float*, float** %r.addr, align 8, !dbg !6751
  call void @zero_v3(float* %7), !dbg !6753
  store float 0.000000e+00, float* %d, align 4, !dbg !6754
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %8 = load float, float* %d, align 4, !dbg !6755
  ret float %8, !dbg !6756
}

; Function Attrs: noinline nounwind uwtable
define internal float @dot_v3v3(float* %a, float* %b) #0 !dbg !6757 {
entry:
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !6760, metadata !DIExpression()), !dbg !6761
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !6762, metadata !DIExpression()), !dbg !6763
  %0 = load float*, float** %a.addr, align 8, !dbg !6764
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !6764
  %1 = load float, float* %arrayidx, align 4, !dbg !6764
  %2 = load float*, float** %b.addr, align 8, !dbg !6765
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !6765
  %3 = load float, float* %arrayidx1, align 4, !dbg !6765
  %mul = fmul float %1, %3, !dbg !6766
  %4 = load float*, float** %a.addr, align 8, !dbg !6767
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 1, !dbg !6767
  %5 = load float, float* %arrayidx2, align 4, !dbg !6767
  %6 = load float*, float** %b.addr, align 8, !dbg !6768
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 1, !dbg !6768
  %7 = load float, float* %arrayidx3, align 4, !dbg !6768
  %mul4 = fmul float %5, %7, !dbg !6769
  %add = fadd float %mul, %mul4, !dbg !6770
  %8 = load float*, float** %a.addr, align 8, !dbg !6771
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 2, !dbg !6771
  %9 = load float, float* %arrayidx5, align 4, !dbg !6771
  %10 = load float*, float** %b.addr, align 8, !dbg !6772
  %arrayidx6 = getelementptr inbounds float, float* %10, i64 2, !dbg !6772
  %11 = load float, float* %arrayidx6, align 4, !dbg !6772
  %mul7 = fmul float %9, %11, !dbg !6773
  %add8 = fadd float %add, %mul7, !dbg !6774
  ret float %add8, !dbg !6775
}

; Function Attrs: nounwind
declare dso_local float @sqrtf(float) #3

; Function Attrs: noinline nounwind uwtable
define internal void @mul_v3_v3fl(float* %r, float* %a, float %f) #0 !dbg !6776 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  %f.addr = alloca float, align 4
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !6779, metadata !DIExpression()), !dbg !6780
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !6781, metadata !DIExpression()), !dbg !6782
  store float %f, float* %f.addr, align 4
  call void @llvm.dbg.declare(metadata float* %f.addr, metadata !6783, metadata !DIExpression()), !dbg !6784
  %0 = load float*, float** %a.addr, align 8, !dbg !6785
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !6785
  %1 = load float, float* %arrayidx, align 4, !dbg !6785
  %2 = load float, float* %f.addr, align 4, !dbg !6786
  %mul = fmul float %1, %2, !dbg !6787
  %3 = load float*, float** %r.addr, align 8, !dbg !6788
  %arrayidx1 = getelementptr inbounds float, float* %3, i64 0, !dbg !6788
  store float %mul, float* %arrayidx1, align 4, !dbg !6789
  %4 = load float*, float** %a.addr, align 8, !dbg !6790
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 1, !dbg !6790
  %5 = load float, float* %arrayidx2, align 4, !dbg !6790
  %6 = load float, float* %f.addr, align 4, !dbg !6791
  %mul3 = fmul float %5, %6, !dbg !6792
  %7 = load float*, float** %r.addr, align 8, !dbg !6793
  %arrayidx4 = getelementptr inbounds float, float* %7, i64 1, !dbg !6793
  store float %mul3, float* %arrayidx4, align 4, !dbg !6794
  %8 = load float*, float** %a.addr, align 8, !dbg !6795
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 2, !dbg !6795
  %9 = load float, float* %arrayidx5, align 4, !dbg !6795
  %10 = load float, float* %f.addr, align 4, !dbg !6796
  %mul6 = fmul float %9, %10, !dbg !6797
  %11 = load float*, float** %r.addr, align 8, !dbg !6798
  %arrayidx7 = getelementptr inbounds float, float* %11, i64 2, !dbg !6798
  store float %mul6, float* %arrayidx7, align 4, !dbg !6799
  ret void, !dbg !6800
}

; Function Attrs: noinline nounwind uwtable
define internal void @zero_v3(float* %r) #0 !dbg !6801 {
entry:
  %r.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !6804, metadata !DIExpression()), !dbg !6805
  %0 = load float*, float** %r.addr, align 8, !dbg !6806
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !6806
  store float 0.000000e+00, float* %arrayidx, align 4, !dbg !6807
  %1 = load float*, float** %r.addr, align 8, !dbg !6808
  %arrayidx1 = getelementptr inbounds float, float* %1, i64 1, !dbg !6808
  store float 0.000000e+00, float* %arrayidx1, align 4, !dbg !6809
  %2 = load float*, float** %r.addr, align 8, !dbg !6810
  %arrayidx2 = getelementptr inbounds float, float* %2, i64 2, !dbg !6810
  store float 0.000000e+00, float* %arrayidx2, align 4, !dbg !6811
  ret void, !dbg !6812
}

; Function Attrs: nounwind
declare dso_local float @acosf(float) #3

declare dso_local void @BLI_jitter_init([2 x float]*, i32) #4

declare dso_local float @RE_filter_value(i32, float) #4

declare dso_local void @zbuffer_abuf_shadow(%struct.Render*, %struct.LampRen*, [4 x float]*, %struct.APixstr*, %struct.APixstrand*, %struct.ListBase*, i32, i32, [2 x float]*) #4

; Function Attrs: noinline nounwind uwtable
define internal void @compress_deepshadowbuf(%struct.Render* %re, %struct.ShadBuf* %shb, %struct.APixstr* %apixbuf, %struct.APixstrand* %apixbufstrand) #0 !dbg !6813 {
entry:
  %re.addr = alloca %struct.Render*, align 8
  %shb.addr = alloca %struct.ShadBuf*, align 8
  %apixbuf.addr = alloca %struct.APixstr*, align 8
  %apixbufstrand.addr = alloca %struct.APixstrand*, align 8
  %shsample = alloca %struct.ShadSampleBuf*, align 8
  %ds = alloca [16 x %struct.DeepSample*], align 16
  %sampleds = alloca [16 x %struct.DeepSample*], align 16
  %dsb = alloca %struct.DeepSample*, align 8
  %newbuf = alloca %struct.DeepSample*, align 8
  %ap = alloca %struct.APixstr*, align 8
  %apn = alloca %struct.APixstr*, align 8
  %aps = alloca %struct.APixstrand*, align 8
  %apns = alloca %struct.APixstrand*, align 8
  %visibility = alloca float, align 4
  %totbuf = alloca i32, align 4
  %totbuf_f = alloca float, align 4
  %totbuf_f_inv = alloca float, align 4
  %size = alloca i32, align 4
  %a = alloca i32, align 4
  %b = alloca i32, align 4
  %c = alloca i32, align 4
  %tot = alloca i32, align 4
  %minz = alloca i32, align 4
  %found = alloca i32, align 4
  %prevtot = alloca i32, align 4
  %newtot = alloca i32, align 4
  %sampletot = alloca [16 x i32], align 16
  %totsample = alloca i32, align 4
  %totsamplec = alloca i32, align 4
  store %struct.Render* %re, %struct.Render** %re.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Render** %re.addr, metadata !6816, metadata !DIExpression()), !dbg !6817
  store %struct.ShadBuf* %shb, %struct.ShadBuf** %shb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ShadBuf** %shb.addr, metadata !6818, metadata !DIExpression()), !dbg !6819
  store %struct.APixstr* %apixbuf, %struct.APixstr** %apixbuf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.APixstr** %apixbuf.addr, metadata !6820, metadata !DIExpression()), !dbg !6821
  store %struct.APixstrand* %apixbufstrand, %struct.APixstrand** %apixbufstrand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.APixstrand** %apixbufstrand.addr, metadata !6822, metadata !DIExpression()), !dbg !6823
  call void @llvm.dbg.declare(metadata %struct.ShadSampleBuf** %shsample, metadata !6824, metadata !DIExpression()), !dbg !6825
  call void @llvm.dbg.declare(metadata [16 x %struct.DeepSample*]* %ds, metadata !6826, metadata !DIExpression()), !dbg !6828
  call void @llvm.dbg.declare(metadata [16 x %struct.DeepSample*]* %sampleds, metadata !6829, metadata !DIExpression()), !dbg !6830
  call void @llvm.dbg.declare(metadata %struct.DeepSample** %dsb, metadata !6831, metadata !DIExpression()), !dbg !6832
  call void @llvm.dbg.declare(metadata %struct.DeepSample** %newbuf, metadata !6833, metadata !DIExpression()), !dbg !6834
  call void @llvm.dbg.declare(metadata %struct.APixstr** %ap, metadata !6835, metadata !DIExpression()), !dbg !6836
  call void @llvm.dbg.declare(metadata %struct.APixstr** %apn, metadata !6837, metadata !DIExpression()), !dbg !6838
  call void @llvm.dbg.declare(metadata %struct.APixstrand** %aps, metadata !6839, metadata !DIExpression()), !dbg !6840
  call void @llvm.dbg.declare(metadata %struct.APixstrand** %apns, metadata !6841, metadata !DIExpression()), !dbg !6842
  call void @llvm.dbg.declare(metadata float* %visibility, metadata !6843, metadata !DIExpression()), !dbg !6844
  call void @llvm.dbg.declare(metadata i32* %totbuf, metadata !6845, metadata !DIExpression()), !dbg !6847
  %0 = load %struct.ShadBuf*, %struct.ShadBuf** %shb.addr, align 8, !dbg !6848
  %totbuf1 = getelementptr inbounds %struct.ShadBuf, %struct.ShadBuf* %0, i32 0, i32 2, !dbg !6849
  %1 = load i16, i16* %totbuf1, align 4, !dbg !6849
  %conv = sext i16 %1 to i32, !dbg !6848
  store i32 %conv, i32* %totbuf, align 4, !dbg !6847
  call void @llvm.dbg.declare(metadata float* %totbuf_f, metadata !6850, metadata !DIExpression()), !dbg !6851
  %2 = load %struct.ShadBuf*, %struct.ShadBuf** %shb.addr, align 8, !dbg !6852
  %totbuf2 = getelementptr inbounds %struct.ShadBuf, %struct.ShadBuf* %2, i32 0, i32 2, !dbg !6853
  %3 = load i16, i16* %totbuf2, align 4, !dbg !6853
  %conv3 = sitofp i16 %3 to float, !dbg !6854
  store float %conv3, float* %totbuf_f, align 4, !dbg !6851
  call void @llvm.dbg.declare(metadata float* %totbuf_f_inv, metadata !6855, metadata !DIExpression()), !dbg !6856
  %4 = load float, float* %totbuf_f, align 4, !dbg !6857
  %div = fdiv float 1.000000e+00, %4, !dbg !6858
  store float %div, float* %totbuf_f_inv, align 4, !dbg !6856
  call void @llvm.dbg.declare(metadata i32* %size, metadata !6859, metadata !DIExpression()), !dbg !6860
  %5 = load %struct.ShadBuf*, %struct.ShadBuf** %shb.addr, align 8, !dbg !6861
  %size4 = getelementptr inbounds %struct.ShadBuf, %struct.ShadBuf* %5, i32 0, i32 14, !dbg !6862
  %6 = load i32, i32* %size4, align 8, !dbg !6862
  store i32 %6, i32* %size, align 4, !dbg !6860
  call void @llvm.dbg.declare(metadata i32* %a, metadata !6863, metadata !DIExpression()), !dbg !6864
  call void @llvm.dbg.declare(metadata i32* %b, metadata !6865, metadata !DIExpression()), !dbg !6866
  call void @llvm.dbg.declare(metadata i32* %c, metadata !6867, metadata !DIExpression()), !dbg !6868
  call void @llvm.dbg.declare(metadata i32* %tot, metadata !6869, metadata !DIExpression()), !dbg !6870
  call void @llvm.dbg.declare(metadata i32* %minz, metadata !6871, metadata !DIExpression()), !dbg !6872
  call void @llvm.dbg.declare(metadata i32* %found, metadata !6873, metadata !DIExpression()), !dbg !6874
  call void @llvm.dbg.declare(metadata i32* %prevtot, metadata !6875, metadata !DIExpression()), !dbg !6876
  call void @llvm.dbg.declare(metadata i32* %newtot, metadata !6877, metadata !DIExpression()), !dbg !6878
  call void @llvm.dbg.declare(metadata [16 x i32]* %sampletot, metadata !6879, metadata !DIExpression()), !dbg !6881
  call void @llvm.dbg.declare(metadata i32* %totsample, metadata !6882, metadata !DIExpression()), !dbg !6883
  store i32 0, i32* %totsample, align 4, !dbg !6883
  call void @llvm.dbg.declare(metadata i32* %totsamplec, metadata !6884, metadata !DIExpression()), !dbg !6885
  store i32 0, i32* %totsamplec, align 4, !dbg !6885
  %7 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !6886
  %call = call i8* %7(i64 48, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.5, i64 0, i64 0)), !dbg !6886
  %8 = bitcast i8* %call to %struct.ShadSampleBuf*, !dbg !6886
  store %struct.ShadSampleBuf* %8, %struct.ShadSampleBuf** %shsample, align 8, !dbg !6887
  %9 = load %struct.ShadBuf*, %struct.ShadBuf** %shb.addr, align 8, !dbg !6888
  %buffers = getelementptr inbounds %struct.ShadBuf, %struct.ShadBuf* %9, i32 0, i32 16, !dbg !6889
  %10 = load %struct.ShadSampleBuf*, %struct.ShadSampleBuf** %shsample, align 8, !dbg !6890
  %11 = bitcast %struct.ShadSampleBuf* %10 to i8*, !dbg !6890
  call void @BLI_addtail(%struct.ListBase* %buffers, i8* %11), !dbg !6891
  %12 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !6892
  %13 = load i32, i32* %size, align 4, !dbg !6893
  %conv5 = sext i32 %13 to i64, !dbg !6893
  %mul = mul i64 4, %conv5, !dbg !6894
  %14 = load i32, i32* %size, align 4, !dbg !6895
  %conv6 = sext i32 %14 to i64, !dbg !6895
  %mul7 = mul i64 %mul, %conv6, !dbg !6896
  %call8 = call i8* %12(i64 %mul7, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.6, i64 0, i64 0)), !dbg !6892
  %15 = bitcast i8* %call8 to i32*, !dbg !6892
  %16 = load %struct.ShadSampleBuf*, %struct.ShadSampleBuf** %shsample, align 8, !dbg !6897
  %totbuf9 = getelementptr inbounds %struct.ShadSampleBuf, %struct.ShadSampleBuf* %16, i32 0, i32 5, !dbg !6898
  store i32* %15, i32** %totbuf9, align 8, !dbg !6899
  %17 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !6900
  %18 = load i32, i32* %size, align 4, !dbg !6901
  %conv10 = sext i32 %18 to i64, !dbg !6901
  %mul11 = mul i64 8, %conv10, !dbg !6902
  %19 = load i32, i32* %size, align 4, !dbg !6903
  %conv12 = sext i32 %19 to i64, !dbg !6903
  %mul13 = mul i64 %mul11, %conv12, !dbg !6904
  %call14 = call i8* %17(i64 %mul13, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.7, i64 0, i64 0)), !dbg !6900
  %20 = bitcast i8* %call14 to %struct.DeepSample**, !dbg !6900
  %21 = load %struct.ShadSampleBuf*, %struct.ShadSampleBuf** %shsample, align 8, !dbg !6905
  %deepbuf = getelementptr inbounds %struct.ShadSampleBuf, %struct.ShadSampleBuf* %21, i32 0, i32 4, !dbg !6906
  store %struct.DeepSample** %20, %struct.DeepSample*** %deepbuf, align 8, !dbg !6907
  %22 = load %struct.APixstr*, %struct.APixstr** %apixbuf.addr, align 8, !dbg !6908
  store %struct.APixstr* %22, %struct.APixstr** %ap, align 8, !dbg !6909
  %23 = load %struct.APixstrand*, %struct.APixstrand** %apixbufstrand.addr, align 8, !dbg !6910
  store %struct.APixstrand* %23, %struct.APixstrand** %aps, align 8, !dbg !6911
  store i32 0, i32* %a, align 4, !dbg !6912
  br label %for.cond, !dbg !6914

for.cond:                                         ; preds = %for.inc502, %entry
  %24 = load i32, i32* %a, align 4, !dbg !6915
  %25 = load i32, i32* %size, align 4, !dbg !6917
  %26 = load i32, i32* %size, align 4, !dbg !6918
  %mul15 = mul nsw i32 %25, %26, !dbg !6919
  %cmp = icmp slt i32 %24, %mul15, !dbg !6920
  br i1 %cmp, label %for.body, label %for.end506, !dbg !6921

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %c, align 4, !dbg !6922
  br label %for.cond17, !dbg !6925

for.cond17:                                       ; preds = %for.inc, %for.body
  %27 = load i32, i32* %c, align 4, !dbg !6926
  %28 = load i32, i32* %totbuf, align 4, !dbg !6928
  %cmp18 = icmp slt i32 %27, %28, !dbg !6929
  br i1 %cmp18, label %for.body20, label %for.end, !dbg !6930

for.body20:                                       ; preds = %for.cond17
  %29 = load i32, i32* %c, align 4, !dbg !6931
  %idxprom = sext i32 %29 to i64, !dbg !6932
  %arrayidx = getelementptr inbounds [16 x i32], [16 x i32]* %sampletot, i64 0, i64 %idxprom, !dbg !6932
  store i32 0, i32* %arrayidx, align 4, !dbg !6933
  br label %for.inc, !dbg !6932

for.inc:                                          ; preds = %for.body20
  %30 = load i32, i32* %c, align 4, !dbg !6934
  %inc = add nsw i32 %30, 1, !dbg !6934
  store i32 %inc, i32* %c, align 4, !dbg !6934
  br label %for.cond17, !dbg !6935, !llvm.loop !6936

for.end:                                          ; preds = %for.cond17
  store i32 0, i32* %tot, align 4, !dbg !6938
  %31 = load %struct.APixstr*, %struct.APixstr** %ap, align 8, !dbg !6939
  store %struct.APixstr* %31, %struct.APixstr** %apn, align 8, !dbg !6941
  br label %for.cond21, !dbg !6942

for.cond21:                                       ; preds = %for.inc49, %for.end
  %32 = load %struct.APixstr*, %struct.APixstr** %apn, align 8, !dbg !6943
  %tobool = icmp ne %struct.APixstr* %32, null, !dbg !6945
  br i1 %tobool, label %for.body22, label %for.end50, !dbg !6945

for.body22:                                       ; preds = %for.cond21
  store i32 0, i32* %b, align 4, !dbg !6946
  br label %for.cond23, !dbg !6948

for.cond23:                                       ; preds = %for.inc46, %for.body22
  %33 = load i32, i32* %b, align 4, !dbg !6949
  %cmp24 = icmp slt i32 %33, 4, !dbg !6951
  br i1 %cmp24, label %for.body26, label %for.end48, !dbg !6952

for.body26:                                       ; preds = %for.cond23
  %34 = load %struct.APixstr*, %struct.APixstr** %apn, align 8, !dbg !6953
  %p = getelementptr inbounds %struct.APixstr, %struct.APixstr* %34, i32 0, i32 2, !dbg !6955
  %35 = load i32, i32* %b, align 4, !dbg !6956
  %idxprom27 = sext i32 %35 to i64, !dbg !6953
  %arrayidx28 = getelementptr inbounds [4 x i32], [4 x i32]* %p, i64 0, i64 %idxprom27, !dbg !6953
  %36 = load i32, i32* %arrayidx28, align 4, !dbg !6953
  %tobool29 = icmp ne i32 %36, 0, !dbg !6953
  br i1 %tobool29, label %if.then, label %if.end45, !dbg !6957

if.then:                                          ; preds = %for.body26
  store i32 0, i32* %c, align 4, !dbg !6958
  br label %for.cond30, !dbg !6960

for.cond30:                                       ; preds = %for.inc42, %if.then
  %37 = load i32, i32* %c, align 4, !dbg !6961
  %38 = load i32, i32* %totbuf, align 4, !dbg !6963
  %cmp31 = icmp slt i32 %37, %38, !dbg !6964
  br i1 %cmp31, label %for.body33, label %for.end44, !dbg !6965

for.body33:                                       ; preds = %for.cond30
  %39 = load %struct.APixstr*, %struct.APixstr** %apn, align 8, !dbg !6966
  %mask = getelementptr inbounds %struct.APixstr, %struct.APixstr* %39, i32 0, i32 0, !dbg !6968
  %40 = load i32, i32* %b, align 4, !dbg !6969
  %idxprom34 = sext i32 %40 to i64, !dbg !6966
  %arrayidx35 = getelementptr inbounds [4 x i16], [4 x i16]* %mask, i64 0, i64 %idxprom34, !dbg !6966
  %41 = load i16, i16* %arrayidx35, align 2, !dbg !6966
  %conv36 = zext i16 %41 to i32, !dbg !6966
  %42 = load i32, i32* %c, align 4, !dbg !6970
  %shl = shl i32 1, %42, !dbg !6971
  %and = and i32 %conv36, %shl, !dbg !6972
  %tobool37 = icmp ne i32 %and, 0, !dbg !6972
  br i1 %tobool37, label %if.then38, label %if.end, !dbg !6973

if.then38:                                        ; preds = %for.body33
  %43 = load i32, i32* %c, align 4, !dbg !6974
  %idxprom39 = sext i32 %43 to i64, !dbg !6975
  %arrayidx40 = getelementptr inbounds [16 x i32], [16 x i32]* %sampletot, i64 0, i64 %idxprom39, !dbg !6975
  %44 = load i32, i32* %arrayidx40, align 4, !dbg !6976
  %inc41 = add nsw i32 %44, 1, !dbg !6976
  store i32 %inc41, i32* %arrayidx40, align 4, !dbg !6976
  br label %if.end, !dbg !6975

if.end:                                           ; preds = %if.then38, %for.body33
  br label %for.inc42, !dbg !6977

for.inc42:                                        ; preds = %if.end
  %45 = load i32, i32* %c, align 4, !dbg !6978
  %inc43 = add nsw i32 %45, 1, !dbg !6978
  store i32 %inc43, i32* %c, align 4, !dbg !6978
  br label %for.cond30, !dbg !6979, !llvm.loop !6980

for.end44:                                        ; preds = %for.cond30
  br label %if.end45, !dbg !6981

if.end45:                                         ; preds = %for.end44, %for.body26
  br label %for.inc46, !dbg !6982

for.inc46:                                        ; preds = %if.end45
  %46 = load i32, i32* %b, align 4, !dbg !6983
  %inc47 = add nsw i32 %46, 1, !dbg !6983
  store i32 %inc47, i32* %b, align 4, !dbg !6983
  br label %for.cond23, !dbg !6984, !llvm.loop !6985

for.end48:                                        ; preds = %for.cond23
  br label %for.inc49, !dbg !6986

for.inc49:                                        ; preds = %for.end48
  %47 = load %struct.APixstr*, %struct.APixstr** %apn, align 8, !dbg !6987
  %next = getelementptr inbounds %struct.APixstr, %struct.APixstr* %47, i32 0, i32 5, !dbg !6988
  %48 = load %struct.APixstr*, %struct.APixstr** %next, align 8, !dbg !6988
  store %struct.APixstr* %48, %struct.APixstr** %apn, align 8, !dbg !6989
  br label %for.cond21, !dbg !6990, !llvm.loop !6991

for.end50:                                        ; preds = %for.cond21
  %49 = load %struct.APixstrand*, %struct.APixstrand** %apixbufstrand.addr, align 8, !dbg !6993
  %tobool51 = icmp ne %struct.APixstrand* %49, null, !dbg !6993
  br i1 %tobool51, label %if.then52, label %if.end91, !dbg !6995

if.then52:                                        ; preds = %for.end50
  %50 = load %struct.APixstrand*, %struct.APixstrand** %aps, align 8, !dbg !6996
  store %struct.APixstrand* %50, %struct.APixstrand** %apns, align 8, !dbg !6999
  br label %for.cond53, !dbg !7000

for.cond53:                                       ; preds = %for.inc88, %if.then52
  %51 = load %struct.APixstrand*, %struct.APixstrand** %apns, align 8, !dbg !7001
  %tobool54 = icmp ne %struct.APixstrand* %51, null, !dbg !7003
  br i1 %tobool54, label %for.body55, label %for.end90, !dbg !7003

for.body55:                                       ; preds = %for.cond53
  store i32 0, i32* %b, align 4, !dbg !7004
  br label %for.cond56, !dbg !7006

for.cond56:                                       ; preds = %for.inc85, %for.body55
  %52 = load i32, i32* %b, align 4, !dbg !7007
  %cmp57 = icmp slt i32 %52, 4, !dbg !7009
  br i1 %cmp57, label %for.body59, label %for.end87, !dbg !7010

for.body59:                                       ; preds = %for.cond56
  %53 = load %struct.APixstrand*, %struct.APixstrand** %apns, align 8, !dbg !7011
  %p60 = getelementptr inbounds %struct.APixstrand, %struct.APixstrand* %53, i32 0, i32 2, !dbg !7013
  %54 = load i32, i32* %b, align 4, !dbg !7014
  %idxprom61 = sext i32 %54 to i64, !dbg !7011
  %arrayidx62 = getelementptr inbounds [4 x i32], [4 x i32]* %p60, i64 0, i64 %idxprom61, !dbg !7011
  %55 = load i32, i32* %arrayidx62, align 4, !dbg !7011
  %tobool63 = icmp ne i32 %55, 0, !dbg !7011
  br i1 %tobool63, label %if.then64, label %if.end84, !dbg !7015

if.then64:                                        ; preds = %for.body59
  store i32 0, i32* %c, align 4, !dbg !7016
  br label %for.cond65, !dbg !7018

for.cond65:                                       ; preds = %for.inc81, %if.then64
  %56 = load i32, i32* %c, align 4, !dbg !7019
  %57 = load i32, i32* %totbuf, align 4, !dbg !7021
  %cmp66 = icmp slt i32 %56, %57, !dbg !7022
  br i1 %cmp66, label %for.body68, label %for.end83, !dbg !7023

for.body68:                                       ; preds = %for.cond65
  %58 = load %struct.APixstrand*, %struct.APixstrand** %apns, align 8, !dbg !7024
  %mask69 = getelementptr inbounds %struct.APixstrand, %struct.APixstrand* %58, i32 0, i32 0, !dbg !7026
  %59 = load i32, i32* %b, align 4, !dbg !7027
  %idxprom70 = sext i32 %59 to i64, !dbg !7024
  %arrayidx71 = getelementptr inbounds [4 x i16], [4 x i16]* %mask69, i64 0, i64 %idxprom70, !dbg !7024
  %60 = load i16, i16* %arrayidx71, align 2, !dbg !7024
  %conv72 = zext i16 %60 to i32, !dbg !7024
  %61 = load i32, i32* %c, align 4, !dbg !7028
  %shl73 = shl i32 1, %61, !dbg !7029
  %and74 = and i32 %conv72, %shl73, !dbg !7030
  %tobool75 = icmp ne i32 %and74, 0, !dbg !7030
  br i1 %tobool75, label %if.then76, label %if.end80, !dbg !7031

if.then76:                                        ; preds = %for.body68
  %62 = load i32, i32* %c, align 4, !dbg !7032
  %idxprom77 = sext i32 %62 to i64, !dbg !7033
  %arrayidx78 = getelementptr inbounds [16 x i32], [16 x i32]* %sampletot, i64 0, i64 %idxprom77, !dbg !7033
  %63 = load i32, i32* %arrayidx78, align 4, !dbg !7034
  %inc79 = add nsw i32 %63, 1, !dbg !7034
  store i32 %inc79, i32* %arrayidx78, align 4, !dbg !7034
  br label %if.end80, !dbg !7033

if.end80:                                         ; preds = %if.then76, %for.body68
  br label %for.inc81, !dbg !7035

for.inc81:                                        ; preds = %if.end80
  %64 = load i32, i32* %c, align 4, !dbg !7036
  %inc82 = add nsw i32 %64, 1, !dbg !7036
  store i32 %inc82, i32* %c, align 4, !dbg !7036
  br label %for.cond65, !dbg !7037, !llvm.loop !7038

for.end83:                                        ; preds = %for.cond65
  br label %if.end84, !dbg !7039

if.end84:                                         ; preds = %for.end83, %for.body59
  br label %for.inc85, !dbg !7040

for.inc85:                                        ; preds = %if.end84
  %65 = load i32, i32* %b, align 4, !dbg !7041
  %inc86 = add nsw i32 %65, 1, !dbg !7041
  store i32 %inc86, i32* %b, align 4, !dbg !7041
  br label %for.cond56, !dbg !7042, !llvm.loop !7043

for.end87:                                        ; preds = %for.cond56
  br label %for.inc88, !dbg !7044

for.inc88:                                        ; preds = %for.end87
  %66 = load %struct.APixstrand*, %struct.APixstrand** %apns, align 8, !dbg !7045
  %next89 = getelementptr inbounds %struct.APixstrand, %struct.APixstrand* %66, i32 0, i32 7, !dbg !7046
  %67 = load %struct.APixstrand*, %struct.APixstrand** %next89, align 8, !dbg !7046
  store %struct.APixstrand* %67, %struct.APixstrand** %apns, align 8, !dbg !7047
  br label %for.cond53, !dbg !7048, !llvm.loop !7049

for.end90:                                        ; preds = %for.cond53
  br label %if.end91, !dbg !7051

if.end91:                                         ; preds = %for.end90, %for.end50
  store i32 0, i32* %c, align 4, !dbg !7052
  br label %for.cond92, !dbg !7054

for.cond92:                                       ; preds = %for.inc98, %if.end91
  %68 = load i32, i32* %c, align 4, !dbg !7055
  %69 = load i32, i32* %totbuf, align 4, !dbg !7057
  %cmp93 = icmp slt i32 %68, %69, !dbg !7058
  br i1 %cmp93, label %for.body95, label %for.end100, !dbg !7059

for.body95:                                       ; preds = %for.cond92
  %70 = load i32, i32* %c, align 4, !dbg !7060
  %idxprom96 = sext i32 %70 to i64, !dbg !7061
  %arrayidx97 = getelementptr inbounds [16 x i32], [16 x i32]* %sampletot, i64 0, i64 %idxprom96, !dbg !7061
  %71 = load i32, i32* %arrayidx97, align 4, !dbg !7061
  %72 = load i32, i32* %tot, align 4, !dbg !7062
  %add = add nsw i32 %72, %71, !dbg !7062
  store i32 %add, i32* %tot, align 4, !dbg !7062
  br label %for.inc98, !dbg !7063

for.inc98:                                        ; preds = %for.body95
  %73 = load i32, i32* %c, align 4, !dbg !7064
  %inc99 = add nsw i32 %73, 1, !dbg !7064
  store i32 %inc99, i32* %c, align 4, !dbg !7064
  br label %for.cond92, !dbg !7065, !llvm.loop !7066

for.end100:                                       ; preds = %for.cond92
  %74 = load i32, i32* %tot, align 4, !dbg !7068
  %cmp101 = icmp eq i32 %74, 0, !dbg !7070
  br i1 %cmp101, label %if.then103, label %if.end110, !dbg !7071

if.then103:                                       ; preds = %for.end100
  %75 = load %struct.ShadSampleBuf*, %struct.ShadSampleBuf** %shsample, align 8, !dbg !7072
  %deepbuf104 = getelementptr inbounds %struct.ShadSampleBuf, %struct.ShadSampleBuf* %75, i32 0, i32 4, !dbg !7074
  %76 = load %struct.DeepSample**, %struct.DeepSample*** %deepbuf104, align 8, !dbg !7074
  %77 = load i32, i32* %a, align 4, !dbg !7075
  %idxprom105 = sext i32 %77 to i64, !dbg !7072
  %arrayidx106 = getelementptr inbounds %struct.DeepSample*, %struct.DeepSample** %76, i64 %idxprom105, !dbg !7072
  store %struct.DeepSample* null, %struct.DeepSample** %arrayidx106, align 8, !dbg !7076
  %78 = load %struct.ShadSampleBuf*, %struct.ShadSampleBuf** %shsample, align 8, !dbg !7077
  %totbuf107 = getelementptr inbounds %struct.ShadSampleBuf, %struct.ShadSampleBuf* %78, i32 0, i32 5, !dbg !7078
  %79 = load i32*, i32** %totbuf107, align 8, !dbg !7078
  %80 = load i32, i32* %a, align 4, !dbg !7079
  %idxprom108 = sext i32 %80 to i64, !dbg !7077
  %arrayidx109 = getelementptr inbounds i32, i32* %79, i64 %idxprom108, !dbg !7077
  store i32 0, i32* %arrayidx109, align 4, !dbg !7080
  br label %for.inc502, !dbg !7081

if.end110:                                        ; preds = %for.end100
  %81 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !7082
  %82 = load i32, i32* %tot, align 4, !dbg !7083
  %conv111 = sext i32 %82 to i64, !dbg !7083
  %mul112 = mul i64 8, %conv111, !dbg !7084
  %mul113 = mul i64 %mul112, 2, !dbg !7085
  %call114 = call i8* %81(i64 %mul113, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.8, i64 0, i64 0)), !dbg !7082
  %83 = bitcast i8* %call114 to %struct.DeepSample*, !dbg !7082
  %arrayidx115 = getelementptr inbounds [16 x %struct.DeepSample*], [16 x %struct.DeepSample*]* %sampleds, i64 0, i64 0, !dbg !7086
  store %struct.DeepSample* %83, %struct.DeepSample** %arrayidx115, align 16, !dbg !7087
  %arrayidx116 = getelementptr inbounds [16 x %struct.DeepSample*], [16 x %struct.DeepSample*]* %ds, i64 0, i64 0, !dbg !7088
  store %struct.DeepSample* %83, %struct.DeepSample** %arrayidx116, align 16, !dbg !7089
  store i32 1, i32* %c, align 4, !dbg !7090
  br label %for.cond117, !dbg !7092

for.cond117:                                      ; preds = %for.inc131, %if.end110
  %84 = load i32, i32* %c, align 4, !dbg !7093
  %85 = load i32, i32* %totbuf, align 4, !dbg !7095
  %cmp118 = icmp slt i32 %84, %85, !dbg !7096
  br i1 %cmp118, label %for.body120, label %for.end133, !dbg !7097

for.body120:                                      ; preds = %for.cond117
  %86 = load i32, i32* %c, align 4, !dbg !7098
  %sub = sub nsw i32 %86, 1, !dbg !7099
  %idxprom121 = sext i32 %sub to i64, !dbg !7100
  %arrayidx122 = getelementptr inbounds [16 x %struct.DeepSample*], [16 x %struct.DeepSample*]* %sampleds, i64 0, i64 %idxprom121, !dbg !7100
  %87 = load %struct.DeepSample*, %struct.DeepSample** %arrayidx122, align 8, !dbg !7100
  %88 = load i32, i32* %c, align 4, !dbg !7101
  %sub123 = sub nsw i32 %88, 1, !dbg !7102
  %idxprom124 = sext i32 %sub123 to i64, !dbg !7103
  %arrayidx125 = getelementptr inbounds [16 x i32], [16 x i32]* %sampletot, i64 0, i64 %idxprom124, !dbg !7103
  %89 = load i32, i32* %arrayidx125, align 4, !dbg !7103
  %mul126 = mul nsw i32 %89, 2, !dbg !7104
  %idx.ext = sext i32 %mul126 to i64, !dbg !7105
  %add.ptr = getelementptr inbounds %struct.DeepSample, %struct.DeepSample* %87, i64 %idx.ext, !dbg !7105
  %90 = load i32, i32* %c, align 4, !dbg !7106
  %idxprom127 = sext i32 %90 to i64, !dbg !7107
  %arrayidx128 = getelementptr inbounds [16 x %struct.DeepSample*], [16 x %struct.DeepSample*]* %sampleds, i64 0, i64 %idxprom127, !dbg !7107
  store %struct.DeepSample* %add.ptr, %struct.DeepSample** %arrayidx128, align 8, !dbg !7108
  %91 = load i32, i32* %c, align 4, !dbg !7109
  %idxprom129 = sext i32 %91 to i64, !dbg !7110
  %arrayidx130 = getelementptr inbounds [16 x %struct.DeepSample*], [16 x %struct.DeepSample*]* %ds, i64 0, i64 %idxprom129, !dbg !7110
  store %struct.DeepSample* %add.ptr, %struct.DeepSample** %arrayidx130, align 8, !dbg !7111
  br label %for.inc131, !dbg !7110

for.inc131:                                       ; preds = %for.body120
  %92 = load i32, i32* %c, align 4, !dbg !7112
  %inc132 = add nsw i32 %92, 1, !dbg !7112
  store i32 %inc132, i32* %c, align 4, !dbg !7112
  br label %for.cond117, !dbg !7113, !llvm.loop !7114

for.end133:                                       ; preds = %for.cond117
  %93 = load %struct.APixstr*, %struct.APixstr** %ap, align 8, !dbg !7116
  store %struct.APixstr* %93, %struct.APixstr** %apn, align 8, !dbg !7118
  br label %for.cond134, !dbg !7119

for.cond134:                                      ; preds = %for.inc193, %for.end133
  %94 = load %struct.APixstr*, %struct.APixstr** %apn, align 8, !dbg !7120
  %tobool135 = icmp ne %struct.APixstr* %94, null, !dbg !7122
  br i1 %tobool135, label %for.body136, label %for.end195, !dbg !7122

for.body136:                                      ; preds = %for.cond134
  store i32 0, i32* %b, align 4, !dbg !7123
  br label %for.cond137, !dbg !7126

for.cond137:                                      ; preds = %for.inc190, %for.body136
  %95 = load i32, i32* %b, align 4, !dbg !7127
  %cmp138 = icmp slt i32 %95, 4, !dbg !7129
  br i1 %cmp138, label %for.body140, label %for.end192, !dbg !7130

for.body140:                                      ; preds = %for.cond137
  %96 = load %struct.APixstr*, %struct.APixstr** %apn, align 8, !dbg !7131
  %p141 = getelementptr inbounds %struct.APixstr, %struct.APixstr* %96, i32 0, i32 2, !dbg !7134
  %97 = load i32, i32* %b, align 4, !dbg !7135
  %idxprom142 = sext i32 %97 to i64, !dbg !7131
  %arrayidx143 = getelementptr inbounds [4 x i32], [4 x i32]* %p141, i64 0, i64 %idxprom142, !dbg !7131
  %98 = load i32, i32* %arrayidx143, align 4, !dbg !7131
  %tobool144 = icmp ne i32 %98, 0, !dbg !7131
  br i1 %tobool144, label %if.then145, label %if.end189, !dbg !7136

if.then145:                                       ; preds = %for.body140
  store i32 0, i32* %c, align 4, !dbg !7137
  br label %for.cond146, !dbg !7140

for.cond146:                                      ; preds = %for.inc186, %if.then145
  %99 = load i32, i32* %c, align 4, !dbg !7141
  %100 = load i32, i32* %totbuf, align 4, !dbg !7143
  %cmp147 = icmp slt i32 %99, %100, !dbg !7144
  br i1 %cmp147, label %for.body149, label %for.end188, !dbg !7145

for.body149:                                      ; preds = %for.cond146
  %101 = load %struct.APixstr*, %struct.APixstr** %apn, align 8, !dbg !7146
  %mask150 = getelementptr inbounds %struct.APixstr, %struct.APixstr* %101, i32 0, i32 0, !dbg !7149
  %102 = load i32, i32* %b, align 4, !dbg !7150
  %idxprom151 = sext i32 %102 to i64, !dbg !7146
  %arrayidx152 = getelementptr inbounds [4 x i16], [4 x i16]* %mask150, i64 0, i64 %idxprom151, !dbg !7146
  %103 = load i16, i16* %arrayidx152, align 2, !dbg !7146
  %conv153 = zext i16 %103 to i32, !dbg !7146
  %104 = load i32, i32* %c, align 4, !dbg !7151
  %shl154 = shl i32 1, %104, !dbg !7152
  %and155 = and i32 %conv153, %shl154, !dbg !7153
  %tobool156 = icmp ne i32 %and155, 0, !dbg !7153
  br i1 %tobool156, label %if.then157, label %if.end185, !dbg !7154

if.then157:                                       ; preds = %for.body149
  %105 = load %struct.APixstr*, %struct.APixstr** %apn, align 8, !dbg !7155
  %z = getelementptr inbounds %struct.APixstr, %struct.APixstr* %105, i32 0, i32 1, !dbg !7157
  %106 = load i32, i32* %b, align 4, !dbg !7158
  %idxprom158 = sext i32 %106 to i64, !dbg !7155
  %arrayidx159 = getelementptr inbounds [4 x i32], [4 x i32]* %z, i64 0, i64 %idxprom158, !dbg !7155
  %107 = load i32, i32* %arrayidx159, align 4, !dbg !7155
  %108 = load i32, i32* %c, align 4, !dbg !7159
  %idxprom160 = sext i32 %108 to i64, !dbg !7160
  %arrayidx161 = getelementptr inbounds [16 x %struct.DeepSample*], [16 x %struct.DeepSample*]* %ds, i64 0, i64 %idxprom160, !dbg !7160
  %109 = load %struct.DeepSample*, %struct.DeepSample** %arrayidx161, align 8, !dbg !7160
  %z162 = getelementptr inbounds %struct.DeepSample, %struct.DeepSample* %109, i32 0, i32 0, !dbg !7161
  store i32 %107, i32* %z162, align 4, !dbg !7162
  %110 = load i32, i32* %c, align 4, !dbg !7163
  %idxprom163 = sext i32 %110 to i64, !dbg !7164
  %arrayidx164 = getelementptr inbounds [16 x %struct.DeepSample*], [16 x %struct.DeepSample*]* %ds, i64 0, i64 %idxprom163, !dbg !7164
  %111 = load %struct.DeepSample*, %struct.DeepSample** %arrayidx164, align 8, !dbg !7164
  %v = getelementptr inbounds %struct.DeepSample, %struct.DeepSample* %111, i32 0, i32 1, !dbg !7165
  store float 1.000000e+00, float* %v, align 4, !dbg !7166
  %112 = load i32, i32* %c, align 4, !dbg !7167
  %idxprom165 = sext i32 %112 to i64, !dbg !7168
  %arrayidx166 = getelementptr inbounds [16 x %struct.DeepSample*], [16 x %struct.DeepSample*]* %ds, i64 0, i64 %idxprom165, !dbg !7168
  %113 = load %struct.DeepSample*, %struct.DeepSample** %arrayidx166, align 8, !dbg !7169
  %incdec.ptr = getelementptr inbounds %struct.DeepSample, %struct.DeepSample* %113, i32 1, !dbg !7169
  store %struct.DeepSample* %incdec.ptr, %struct.DeepSample** %arrayidx166, align 8, !dbg !7169
  %114 = load %struct.APixstr*, %struct.APixstr** %apn, align 8, !dbg !7170
  %z167 = getelementptr inbounds %struct.APixstr, %struct.APixstr* %114, i32 0, i32 1, !dbg !7171
  %115 = load i32, i32* %b, align 4, !dbg !7172
  %idxprom168 = sext i32 %115 to i64, !dbg !7170
  %arrayidx169 = getelementptr inbounds [4 x i32], [4 x i32]* %z167, i64 0, i64 %idxprom168, !dbg !7170
  %116 = load i32, i32* %arrayidx169, align 4, !dbg !7170
  %117 = load i32, i32* %c, align 4, !dbg !7173
  %idxprom170 = sext i32 %117 to i64, !dbg !7174
  %arrayidx171 = getelementptr inbounds [16 x %struct.DeepSample*], [16 x %struct.DeepSample*]* %ds, i64 0, i64 %idxprom170, !dbg !7174
  %118 = load %struct.DeepSample*, %struct.DeepSample** %arrayidx171, align 8, !dbg !7174
  %z172 = getelementptr inbounds %struct.DeepSample, %struct.DeepSample* %118, i32 0, i32 0, !dbg !7175
  store i32 %116, i32* %z172, align 4, !dbg !7176
  %119 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !7177
  %120 = load %struct.APixstr*, %struct.APixstr** %apn, align 8, !dbg !7178
  %obi = getelementptr inbounds %struct.APixstr, %struct.APixstr* %120, i32 0, i32 3, !dbg !7179
  %121 = load i32, i32* %b, align 4, !dbg !7180
  %idxprom173 = sext i32 %121 to i64, !dbg !7178
  %arrayidx174 = getelementptr inbounds [4 x i32], [4 x i32]* %obi, i64 0, i64 %idxprom173, !dbg !7178
  %122 = load i32, i32* %arrayidx174, align 4, !dbg !7178
  %123 = load %struct.APixstr*, %struct.APixstr** %apn, align 8, !dbg !7181
  %p175 = getelementptr inbounds %struct.APixstr, %struct.APixstr* %123, i32 0, i32 2, !dbg !7182
  %124 = load i32, i32* %b, align 4, !dbg !7183
  %idxprom176 = sext i32 %124 to i64, !dbg !7181
  %arrayidx177 = getelementptr inbounds [4 x i32], [4 x i32]* %p175, i64 0, i64 %idxprom176, !dbg !7181
  %125 = load i32, i32* %arrayidx177, align 4, !dbg !7181
  %call178 = call float @deep_alpha(%struct.Render* %119, i32 %122, i32 %125, i32 0), !dbg !7184
  %126 = load i32, i32* %c, align 4, !dbg !7185
  %idxprom179 = sext i32 %126 to i64, !dbg !7186
  %arrayidx180 = getelementptr inbounds [16 x %struct.DeepSample*], [16 x %struct.DeepSample*]* %ds, i64 0, i64 %idxprom179, !dbg !7186
  %127 = load %struct.DeepSample*, %struct.DeepSample** %arrayidx180, align 8, !dbg !7186
  %v181 = getelementptr inbounds %struct.DeepSample, %struct.DeepSample* %127, i32 0, i32 1, !dbg !7187
  store float %call178, float* %v181, align 4, !dbg !7188
  %128 = load i32, i32* %c, align 4, !dbg !7189
  %idxprom182 = sext i32 %128 to i64, !dbg !7190
  %arrayidx183 = getelementptr inbounds [16 x %struct.DeepSample*], [16 x %struct.DeepSample*]* %ds, i64 0, i64 %idxprom182, !dbg !7190
  %129 = load %struct.DeepSample*, %struct.DeepSample** %arrayidx183, align 8, !dbg !7191
  %incdec.ptr184 = getelementptr inbounds %struct.DeepSample, %struct.DeepSample* %129, i32 1, !dbg !7191
  store %struct.DeepSample* %incdec.ptr184, %struct.DeepSample** %arrayidx183, align 8, !dbg !7191
  br label %if.end185, !dbg !7192

if.end185:                                        ; preds = %if.then157, %for.body149
  br label %for.inc186, !dbg !7193

for.inc186:                                       ; preds = %if.end185
  %130 = load i32, i32* %c, align 4, !dbg !7194
  %inc187 = add nsw i32 %130, 1, !dbg !7194
  store i32 %inc187, i32* %c, align 4, !dbg !7194
  br label %for.cond146, !dbg !7195, !llvm.loop !7196

for.end188:                                       ; preds = %for.cond146
  br label %if.end189, !dbg !7198

if.end189:                                        ; preds = %for.end188, %for.body140
  br label %for.inc190, !dbg !7199

for.inc190:                                       ; preds = %if.end189
  %131 = load i32, i32* %b, align 4, !dbg !7200
  %inc191 = add nsw i32 %131, 1, !dbg !7200
  store i32 %inc191, i32* %b, align 4, !dbg !7200
  br label %for.cond137, !dbg !7201, !llvm.loop !7202

for.end192:                                       ; preds = %for.cond137
  br label %for.inc193, !dbg !7204

for.inc193:                                       ; preds = %for.end192
  %132 = load %struct.APixstr*, %struct.APixstr** %apn, align 8, !dbg !7205
  %next194 = getelementptr inbounds %struct.APixstr, %struct.APixstr* %132, i32 0, i32 5, !dbg !7206
  %133 = load %struct.APixstr*, %struct.APixstr** %next194, align 8, !dbg !7206
  store %struct.APixstr* %133, %struct.APixstr** %apn, align 8, !dbg !7207
  br label %for.cond134, !dbg !7208, !llvm.loop !7209

for.end195:                                       ; preds = %for.cond134
  %134 = load %struct.APixstrand*, %struct.APixstrand** %apixbufstrand.addr, align 8, !dbg !7211
  %tobool196 = icmp ne %struct.APixstrand* %134, null, !dbg !7211
  br i1 %tobool196, label %if.then197, label %if.end264, !dbg !7213

if.then197:                                       ; preds = %for.end195
  %135 = load %struct.APixstrand*, %struct.APixstrand** %aps, align 8, !dbg !7214
  store %struct.APixstrand* %135, %struct.APixstrand** %apns, align 8, !dbg !7217
  br label %for.cond198, !dbg !7218

for.cond198:                                      ; preds = %for.inc261, %if.then197
  %136 = load %struct.APixstrand*, %struct.APixstrand** %apns, align 8, !dbg !7219
  %tobool199 = icmp ne %struct.APixstrand* %136, null, !dbg !7221
  br i1 %tobool199, label %for.body200, label %for.end263, !dbg !7221

for.body200:                                      ; preds = %for.cond198
  store i32 0, i32* %b, align 4, !dbg !7222
  br label %for.cond201, !dbg !7225

for.cond201:                                      ; preds = %for.inc258, %for.body200
  %137 = load i32, i32* %b, align 4, !dbg !7226
  %cmp202 = icmp slt i32 %137, 4, !dbg !7228
  br i1 %cmp202, label %for.body204, label %for.end260, !dbg !7229

for.body204:                                      ; preds = %for.cond201
  %138 = load %struct.APixstrand*, %struct.APixstrand** %apns, align 8, !dbg !7230
  %p205 = getelementptr inbounds %struct.APixstrand, %struct.APixstrand* %138, i32 0, i32 2, !dbg !7233
  %139 = load i32, i32* %b, align 4, !dbg !7234
  %idxprom206 = sext i32 %139 to i64, !dbg !7230
  %arrayidx207 = getelementptr inbounds [4 x i32], [4 x i32]* %p205, i64 0, i64 %idxprom206, !dbg !7230
  %140 = load i32, i32* %arrayidx207, align 4, !dbg !7230
  %tobool208 = icmp ne i32 %140, 0, !dbg !7230
  br i1 %tobool208, label %if.then209, label %if.end257, !dbg !7235

if.then209:                                       ; preds = %for.body204
  store i32 0, i32* %c, align 4, !dbg !7236
  br label %for.cond210, !dbg !7239

for.cond210:                                      ; preds = %for.inc254, %if.then209
  %141 = load i32, i32* %c, align 4, !dbg !7240
  %142 = load i32, i32* %totbuf, align 4, !dbg !7242
  %cmp211 = icmp slt i32 %141, %142, !dbg !7243
  br i1 %cmp211, label %for.body213, label %for.end256, !dbg !7244

for.body213:                                      ; preds = %for.cond210
  %143 = load %struct.APixstrand*, %struct.APixstrand** %apns, align 8, !dbg !7245
  %mask214 = getelementptr inbounds %struct.APixstrand, %struct.APixstrand* %143, i32 0, i32 0, !dbg !7248
  %144 = load i32, i32* %b, align 4, !dbg !7249
  %idxprom215 = sext i32 %144 to i64, !dbg !7245
  %arrayidx216 = getelementptr inbounds [4 x i16], [4 x i16]* %mask214, i64 0, i64 %idxprom215, !dbg !7245
  %145 = load i16, i16* %arrayidx216, align 2, !dbg !7245
  %conv217 = zext i16 %145 to i32, !dbg !7245
  %146 = load i32, i32* %c, align 4, !dbg !7250
  %shl218 = shl i32 1, %146, !dbg !7251
  %and219 = and i32 %conv217, %shl218, !dbg !7252
  %tobool220 = icmp ne i32 %and219, 0, !dbg !7252
  br i1 %tobool220, label %if.then221, label %if.end253, !dbg !7253

if.then221:                                       ; preds = %for.body213
  %147 = load %struct.APixstrand*, %struct.APixstrand** %apns, align 8, !dbg !7254
  %z222 = getelementptr inbounds %struct.APixstrand, %struct.APixstrand* %147, i32 0, i32 1, !dbg !7256
  %148 = load i32, i32* %b, align 4, !dbg !7257
  %idxprom223 = sext i32 %148 to i64, !dbg !7254
  %arrayidx224 = getelementptr inbounds [4 x i32], [4 x i32]* %z222, i64 0, i64 %idxprom223, !dbg !7254
  %149 = load i32, i32* %arrayidx224, align 4, !dbg !7254
  %150 = load i32, i32* %c, align 4, !dbg !7258
  %idxprom225 = sext i32 %150 to i64, !dbg !7259
  %arrayidx226 = getelementptr inbounds [16 x %struct.DeepSample*], [16 x %struct.DeepSample*]* %ds, i64 0, i64 %idxprom225, !dbg !7259
  %151 = load %struct.DeepSample*, %struct.DeepSample** %arrayidx226, align 8, !dbg !7259
  %z227 = getelementptr inbounds %struct.DeepSample, %struct.DeepSample* %151, i32 0, i32 0, !dbg !7260
  store i32 %149, i32* %z227, align 4, !dbg !7261
  %152 = load i32, i32* %c, align 4, !dbg !7262
  %idxprom228 = sext i32 %152 to i64, !dbg !7263
  %arrayidx229 = getelementptr inbounds [16 x %struct.DeepSample*], [16 x %struct.DeepSample*]* %ds, i64 0, i64 %idxprom228, !dbg !7263
  %153 = load %struct.DeepSample*, %struct.DeepSample** %arrayidx229, align 8, !dbg !7263
  %v230 = getelementptr inbounds %struct.DeepSample, %struct.DeepSample* %153, i32 0, i32 1, !dbg !7264
  store float 1.000000e+00, float* %v230, align 4, !dbg !7265
  %154 = load i32, i32* %c, align 4, !dbg !7266
  %idxprom231 = sext i32 %154 to i64, !dbg !7267
  %arrayidx232 = getelementptr inbounds [16 x %struct.DeepSample*], [16 x %struct.DeepSample*]* %ds, i64 0, i64 %idxprom231, !dbg !7267
  %155 = load %struct.DeepSample*, %struct.DeepSample** %arrayidx232, align 8, !dbg !7268
  %incdec.ptr233 = getelementptr inbounds %struct.DeepSample, %struct.DeepSample* %155, i32 1, !dbg !7268
  store %struct.DeepSample* %incdec.ptr233, %struct.DeepSample** %arrayidx232, align 8, !dbg !7268
  %156 = load %struct.APixstrand*, %struct.APixstrand** %apns, align 8, !dbg !7269
  %z234 = getelementptr inbounds %struct.APixstrand, %struct.APixstrand* %156, i32 0, i32 1, !dbg !7270
  %157 = load i32, i32* %b, align 4, !dbg !7271
  %idxprom235 = sext i32 %157 to i64, !dbg !7269
  %arrayidx236 = getelementptr inbounds [4 x i32], [4 x i32]* %z234, i64 0, i64 %idxprom235, !dbg !7269
  %158 = load i32, i32* %arrayidx236, align 4, !dbg !7269
  %159 = load i32, i32* %c, align 4, !dbg !7272
  %idxprom237 = sext i32 %159 to i64, !dbg !7273
  %arrayidx238 = getelementptr inbounds [16 x %struct.DeepSample*], [16 x %struct.DeepSample*]* %ds, i64 0, i64 %idxprom237, !dbg !7273
  %160 = load %struct.DeepSample*, %struct.DeepSample** %arrayidx238, align 8, !dbg !7273
  %z239 = getelementptr inbounds %struct.DeepSample, %struct.DeepSample* %160, i32 0, i32 0, !dbg !7274
  store i32 %158, i32* %z239, align 4, !dbg !7275
  %161 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !7276
  %162 = load %struct.APixstrand*, %struct.APixstrand** %apns, align 8, !dbg !7277
  %obi240 = getelementptr inbounds %struct.APixstrand, %struct.APixstrand* %162, i32 0, i32 3, !dbg !7278
  %163 = load i32, i32* %b, align 4, !dbg !7279
  %idxprom241 = sext i32 %163 to i64, !dbg !7277
  %arrayidx242 = getelementptr inbounds [4 x i32], [4 x i32]* %obi240, i64 0, i64 %idxprom241, !dbg !7277
  %164 = load i32, i32* %arrayidx242, align 4, !dbg !7277
  %165 = load %struct.APixstrand*, %struct.APixstrand** %apns, align 8, !dbg !7280
  %p243 = getelementptr inbounds %struct.APixstrand, %struct.APixstrand* %165, i32 0, i32 2, !dbg !7281
  %166 = load i32, i32* %b, align 4, !dbg !7282
  %idxprom244 = sext i32 %166 to i64, !dbg !7280
  %arrayidx245 = getelementptr inbounds [4 x i32], [4 x i32]* %p243, i64 0, i64 %idxprom244, !dbg !7280
  %167 = load i32, i32* %arrayidx245, align 4, !dbg !7280
  %call246 = call float @deep_alpha(%struct.Render* %161, i32 %164, i32 %167, i32 1), !dbg !7283
  %168 = load i32, i32* %c, align 4, !dbg !7284
  %idxprom247 = sext i32 %168 to i64, !dbg !7285
  %arrayidx248 = getelementptr inbounds [16 x %struct.DeepSample*], [16 x %struct.DeepSample*]* %ds, i64 0, i64 %idxprom247, !dbg !7285
  %169 = load %struct.DeepSample*, %struct.DeepSample** %arrayidx248, align 8, !dbg !7285
  %v249 = getelementptr inbounds %struct.DeepSample, %struct.DeepSample* %169, i32 0, i32 1, !dbg !7286
  store float %call246, float* %v249, align 4, !dbg !7287
  %170 = load i32, i32* %c, align 4, !dbg !7288
  %idxprom250 = sext i32 %170 to i64, !dbg !7289
  %arrayidx251 = getelementptr inbounds [16 x %struct.DeepSample*], [16 x %struct.DeepSample*]* %ds, i64 0, i64 %idxprom250, !dbg !7289
  %171 = load %struct.DeepSample*, %struct.DeepSample** %arrayidx251, align 8, !dbg !7290
  %incdec.ptr252 = getelementptr inbounds %struct.DeepSample, %struct.DeepSample* %171, i32 1, !dbg !7290
  store %struct.DeepSample* %incdec.ptr252, %struct.DeepSample** %arrayidx251, align 8, !dbg !7290
  br label %if.end253, !dbg !7291

if.end253:                                        ; preds = %if.then221, %for.body213
  br label %for.inc254, !dbg !7292

for.inc254:                                       ; preds = %if.end253
  %172 = load i32, i32* %c, align 4, !dbg !7293
  %inc255 = add nsw i32 %172, 1, !dbg !7293
  store i32 %inc255, i32* %c, align 4, !dbg !7293
  br label %for.cond210, !dbg !7294, !llvm.loop !7295

for.end256:                                       ; preds = %for.cond210
  br label %if.end257, !dbg !7297

if.end257:                                        ; preds = %for.end256, %for.body204
  br label %for.inc258, !dbg !7298

for.inc258:                                       ; preds = %if.end257
  %173 = load i32, i32* %b, align 4, !dbg !7299
  %inc259 = add nsw i32 %173, 1, !dbg !7299
  store i32 %inc259, i32* %b, align 4, !dbg !7299
  br label %for.cond201, !dbg !7300, !llvm.loop !7301

for.end260:                                       ; preds = %for.cond201
  br label %for.inc261, !dbg !7303

for.inc261:                                       ; preds = %for.end260
  %174 = load %struct.APixstrand*, %struct.APixstrand** %apns, align 8, !dbg !7304
  %next262 = getelementptr inbounds %struct.APixstrand, %struct.APixstrand* %174, i32 0, i32 7, !dbg !7305
  %175 = load %struct.APixstrand*, %struct.APixstrand** %next262, align 8, !dbg !7305
  store %struct.APixstrand* %175, %struct.APixstrand** %apns, align 8, !dbg !7306
  br label %for.cond198, !dbg !7307, !llvm.loop !7308

for.end263:                                       ; preds = %for.cond198
  br label %if.end264, !dbg !7310

if.end264:                                        ; preds = %for.end263, %for.end195
  store i32 0, i32* %c, align 4, !dbg !7311
  br label %for.cond265, !dbg !7313

for.cond265:                                      ; preds = %for.inc384, %if.end264
  %176 = load i32, i32* %c, align 4, !dbg !7314
  %177 = load i32, i32* %totbuf, align 4, !dbg !7316
  %cmp266 = icmp slt i32 %176, %177, !dbg !7317
  br i1 %cmp266, label %for.body268, label %for.end386, !dbg !7318

for.body268:                                      ; preds = %for.cond265
  %178 = load i32, i32* %c, align 4, !dbg !7319
  %idxprom269 = sext i32 %178 to i64, !dbg !7321
  %arrayidx270 = getelementptr inbounds [16 x %struct.DeepSample*], [16 x %struct.DeepSample*]* %sampleds, i64 0, i64 %idxprom269, !dbg !7321
  %179 = load %struct.DeepSample*, %struct.DeepSample** %arrayidx270, align 8, !dbg !7321
  %180 = bitcast %struct.DeepSample* %179 to i8*, !dbg !7321
  %181 = load i32, i32* %c, align 4, !dbg !7322
  %idxprom271 = sext i32 %181 to i64, !dbg !7323
  %arrayidx272 = getelementptr inbounds [16 x i32], [16 x i32]* %sampletot, i64 0, i64 %idxprom271, !dbg !7323
  %182 = load i32, i32* %arrayidx272, align 4, !dbg !7323
  %conv273 = sext i32 %182 to i64, !dbg !7323
  call void @qsort(i8* %180, i64 %conv273, i64 16, i32 (i8*, i8*)* @verg_deepsample), !dbg !7324
  store float 1.000000e+00, float* %visibility, align 4, !dbg !7325
  %183 = load i32, i32* %c, align 4, !dbg !7326
  %idxprom274 = sext i32 %183 to i64, !dbg !7327
  %arrayidx275 = getelementptr inbounds [16 x %struct.DeepSample*], [16 x %struct.DeepSample*]* %sampleds, i64 0, i64 %idxprom274, !dbg !7327
  %184 = load %struct.DeepSample*, %struct.DeepSample** %arrayidx275, align 8, !dbg !7327
  %185 = load i32, i32* %c, align 4, !dbg !7328
  %idxprom276 = sext i32 %185 to i64, !dbg !7329
  %arrayidx277 = getelementptr inbounds [16 x %struct.DeepSample*], [16 x %struct.DeepSample*]* %ds, i64 0, i64 %idxprom276, !dbg !7329
  store %struct.DeepSample* %184, %struct.DeepSample** %arrayidx277, align 8, !dbg !7330
  store i32 0, i32* %b, align 4, !dbg !7331
  br label %for.cond278, !dbg !7333

for.cond278:                                      ; preds = %for.inc301, %for.body268
  %186 = load i32, i32* %b, align 4, !dbg !7334
  %187 = load i32, i32* %c, align 4, !dbg !7336
  %idxprom279 = sext i32 %187 to i64, !dbg !7337
  %arrayidx280 = getelementptr inbounds [16 x i32], [16 x i32]* %sampletot, i64 0, i64 %idxprom279, !dbg !7337
  %188 = load i32, i32* %arrayidx280, align 4, !dbg !7337
  %cmp281 = icmp slt i32 %186, %188, !dbg !7338
  br i1 %cmp281, label %for.body283, label %for.end303, !dbg !7339

for.body283:                                      ; preds = %for.cond278
  %189 = load float, float* %visibility, align 4, !dbg !7340
  %190 = load i32, i32* %c, align 4, !dbg !7342
  %idxprom284 = sext i32 %190 to i64, !dbg !7343
  %arrayidx285 = getelementptr inbounds [16 x %struct.DeepSample*], [16 x %struct.DeepSample*]* %ds, i64 0, i64 %idxprom284, !dbg !7343
  %191 = load %struct.DeepSample*, %struct.DeepSample** %arrayidx285, align 8, !dbg !7343
  %v286 = getelementptr inbounds %struct.DeepSample, %struct.DeepSample* %191, i32 0, i32 1, !dbg !7344
  store float %189, float* %v286, align 4, !dbg !7345
  %192 = load i32, i32* %c, align 4, !dbg !7346
  %idxprom287 = sext i32 %192 to i64, !dbg !7347
  %arrayidx288 = getelementptr inbounds [16 x %struct.DeepSample*], [16 x %struct.DeepSample*]* %ds, i64 0, i64 %idxprom287, !dbg !7347
  %193 = load %struct.DeepSample*, %struct.DeepSample** %arrayidx288, align 8, !dbg !7348
  %incdec.ptr289 = getelementptr inbounds %struct.DeepSample, %struct.DeepSample* %193, i32 1, !dbg !7348
  store %struct.DeepSample* %incdec.ptr289, %struct.DeepSample** %arrayidx288, align 8, !dbg !7348
  %194 = load i32, i32* %c, align 4, !dbg !7349
  %idxprom290 = sext i32 %194 to i64, !dbg !7350
  %arrayidx291 = getelementptr inbounds [16 x %struct.DeepSample*], [16 x %struct.DeepSample*]* %ds, i64 0, i64 %idxprom290, !dbg !7350
  %195 = load %struct.DeepSample*, %struct.DeepSample** %arrayidx291, align 8, !dbg !7350
  %v292 = getelementptr inbounds %struct.DeepSample, %struct.DeepSample* %195, i32 0, i32 1, !dbg !7351
  %196 = load float, float* %v292, align 4, !dbg !7351
  %sub293 = fsub float 1.000000e+00, %196, !dbg !7352
  %197 = load float, float* %visibility, align 4, !dbg !7353
  %mul294 = fmul float %197, %sub293, !dbg !7353
  store float %mul294, float* %visibility, align 4, !dbg !7353
  %198 = load float, float* %visibility, align 4, !dbg !7354
  %199 = load i32, i32* %c, align 4, !dbg !7355
  %idxprom295 = sext i32 %199 to i64, !dbg !7356
  %arrayidx296 = getelementptr inbounds [16 x %struct.DeepSample*], [16 x %struct.DeepSample*]* %ds, i64 0, i64 %idxprom295, !dbg !7356
  %200 = load %struct.DeepSample*, %struct.DeepSample** %arrayidx296, align 8, !dbg !7356
  %v297 = getelementptr inbounds %struct.DeepSample, %struct.DeepSample* %200, i32 0, i32 1, !dbg !7357
  store float %198, float* %v297, align 4, !dbg !7358
  %201 = load i32, i32* %c, align 4, !dbg !7359
  %idxprom298 = sext i32 %201 to i64, !dbg !7360
  %arrayidx299 = getelementptr inbounds [16 x %struct.DeepSample*], [16 x %struct.DeepSample*]* %ds, i64 0, i64 %idxprom298, !dbg !7360
  %202 = load %struct.DeepSample*, %struct.DeepSample** %arrayidx299, align 8, !dbg !7361
  %incdec.ptr300 = getelementptr inbounds %struct.DeepSample, %struct.DeepSample* %202, i32 1, !dbg !7361
  store %struct.DeepSample* %incdec.ptr300, %struct.DeepSample** %arrayidx299, align 8, !dbg !7361
  br label %for.inc301, !dbg !7362

for.inc301:                                       ; preds = %for.body283
  %203 = load i32, i32* %b, align 4, !dbg !7363
  %inc302 = add nsw i32 %203, 1, !dbg !7363
  store i32 %inc302, i32* %b, align 4, !dbg !7363
  br label %for.cond278, !dbg !7364, !llvm.loop !7365

for.end303:                                       ; preds = %for.cond278
  %204 = load i32, i32* %c, align 4, !dbg !7367
  %idxprom304 = sext i32 %204 to i64, !dbg !7368
  %arrayidx305 = getelementptr inbounds [16 x %struct.DeepSample*], [16 x %struct.DeepSample*]* %sampleds, i64 0, i64 %idxprom304, !dbg !7368
  %205 = load %struct.DeepSample*, %struct.DeepSample** %arrayidx305, align 8, !dbg !7368
  %206 = load i32, i32* %c, align 4, !dbg !7369
  %idxprom306 = sext i32 %206 to i64, !dbg !7370
  %arrayidx307 = getelementptr inbounds [16 x %struct.DeepSample*], [16 x %struct.DeepSample*]* %ds, i64 0, i64 %idxprom306, !dbg !7370
  store %struct.DeepSample* %205, %struct.DeepSample** %arrayidx307, align 8, !dbg !7371
  store i32 0, i32* %b, align 4, !dbg !7372
  br label %for.cond308, !dbg !7374

for.cond308:                                      ; preds = %for.inc374, %for.end303
  %207 = load i32, i32* %b, align 4, !dbg !7375
  %208 = load i32, i32* %c, align 4, !dbg !7377
  %idxprom309 = sext i32 %208 to i64, !dbg !7378
  %arrayidx310 = getelementptr inbounds [16 x i32], [16 x i32]* %sampletot, i64 0, i64 %idxprom309, !dbg !7378
  %209 = load i32, i32* %arrayidx310, align 4, !dbg !7378
  %cmp311 = icmp slt i32 %207, %209, !dbg !7379
  br i1 %cmp311, label %for.body313, label %for.end376, !dbg !7380

for.body313:                                      ; preds = %for.cond308
  %210 = load i32, i32* %b, align 4, !dbg !7381
  %add314 = add nsw i32 %210, 1, !dbg !7384
  %211 = load i32, i32* %c, align 4, !dbg !7385
  %idxprom315 = sext i32 %211 to i64, !dbg !7386
  %arrayidx316 = getelementptr inbounds [16 x i32], [16 x i32]* %sampletot, i64 0, i64 %idxprom315, !dbg !7386
  %212 = load i32, i32* %arrayidx316, align 4, !dbg !7386
  %cmp317 = icmp slt i32 %add314, %212, !dbg !7387
  br i1 %cmp317, label %if.then319, label %if.else, !dbg !7388

if.then319:                                       ; preds = %for.body313
  %213 = load i32, i32* %c, align 4, !dbg !7389
  %idxprom320 = sext i32 %213 to i64, !dbg !7391
  %arrayidx321 = getelementptr inbounds [16 x %struct.DeepSample*], [16 x %struct.DeepSample*]* %ds, i64 0, i64 %idxprom320, !dbg !7391
  %214 = load %struct.DeepSample*, %struct.DeepSample** %arrayidx321, align 8, !dbg !7391
  %z322 = getelementptr inbounds %struct.DeepSample, %struct.DeepSample* %214, i32 0, i32 0, !dbg !7392
  %215 = load i32, i32* %z322, align 4, !dbg !7392
  %shr = ashr i32 %215, 1, !dbg !7393
  %216 = load i32, i32* %c, align 4, !dbg !7394
  %idxprom323 = sext i32 %216 to i64, !dbg !7395
  %arrayidx324 = getelementptr inbounds [16 x %struct.DeepSample*], [16 x %struct.DeepSample*]* %ds, i64 0, i64 %idxprom323, !dbg !7395
  %217 = load %struct.DeepSample*, %struct.DeepSample** %arrayidx324, align 8, !dbg !7395
  %add.ptr325 = getelementptr inbounds %struct.DeepSample, %struct.DeepSample* %217, i64 2, !dbg !7396
  %z326 = getelementptr inbounds %struct.DeepSample, %struct.DeepSample* %add.ptr325, i32 0, i32 0, !dbg !7397
  %218 = load i32, i32* %z326, align 4, !dbg !7397
  %shr327 = ashr i32 %218, 1, !dbg !7398
  %add328 = add nsw i32 %shr, %shr327, !dbg !7399
  %219 = load i32, i32* %c, align 4, !dbg !7400
  %idxprom329 = sext i32 %219 to i64, !dbg !7401
  %arrayidx330 = getelementptr inbounds [16 x %struct.DeepSample*], [16 x %struct.DeepSample*]* %ds, i64 0, i64 %idxprom329, !dbg !7401
  %220 = load %struct.DeepSample*, %struct.DeepSample** %arrayidx330, align 8, !dbg !7401
  %z331 = getelementptr inbounds %struct.DeepSample, %struct.DeepSample* %220, i32 0, i32 0, !dbg !7402
  store i32 %add328, i32* %z331, align 4, !dbg !7403
  %221 = load i32, i32* %c, align 4, !dbg !7404
  %idxprom332 = sext i32 %221 to i64, !dbg !7405
  %arrayidx333 = getelementptr inbounds [16 x %struct.DeepSample*], [16 x %struct.DeepSample*]* %ds, i64 0, i64 %idxprom332, !dbg !7405
  %222 = load %struct.DeepSample*, %struct.DeepSample** %arrayidx333, align 8, !dbg !7406
  %incdec.ptr334 = getelementptr inbounds %struct.DeepSample, %struct.DeepSample* %222, i32 1, !dbg !7406
  store %struct.DeepSample* %incdec.ptr334, %struct.DeepSample** %arrayidx333, align 8, !dbg !7406
  %223 = load i32, i32* %c, align 4, !dbg !7407
  %idxprom335 = sext i32 %223 to i64, !dbg !7408
  %arrayidx336 = getelementptr inbounds [16 x %struct.DeepSample*], [16 x %struct.DeepSample*]* %ds, i64 0, i64 %idxprom335, !dbg !7408
  %224 = load %struct.DeepSample*, %struct.DeepSample** %arrayidx336, align 8, !dbg !7408
  %z337 = getelementptr inbounds %struct.DeepSample, %struct.DeepSample* %224, i32 0, i32 0, !dbg !7409
  %225 = load i32, i32* %z337, align 4, !dbg !7409
  %shr338 = ashr i32 %225, 1, !dbg !7410
  %226 = load i32, i32* %c, align 4, !dbg !7411
  %idxprom339 = sext i32 %226 to i64, !dbg !7412
  %arrayidx340 = getelementptr inbounds [16 x %struct.DeepSample*], [16 x %struct.DeepSample*]* %ds, i64 0, i64 %idxprom339, !dbg !7412
  %227 = load %struct.DeepSample*, %struct.DeepSample** %arrayidx340, align 8, !dbg !7412
  %add.ptr341 = getelementptr inbounds %struct.DeepSample, %struct.DeepSample* %227, i64 2, !dbg !7413
  %z342 = getelementptr inbounds %struct.DeepSample, %struct.DeepSample* %add.ptr341, i32 0, i32 0, !dbg !7414
  %228 = load i32, i32* %z342, align 4, !dbg !7414
  %shr343 = ashr i32 %228, 1, !dbg !7415
  %add344 = add nsw i32 %shr338, %shr343, !dbg !7416
  %229 = load i32, i32* %c, align 4, !dbg !7417
  %idxprom345 = sext i32 %229 to i64, !dbg !7418
  %arrayidx346 = getelementptr inbounds [16 x %struct.DeepSample*], [16 x %struct.DeepSample*]* %ds, i64 0, i64 %idxprom345, !dbg !7418
  %230 = load %struct.DeepSample*, %struct.DeepSample** %arrayidx346, align 8, !dbg !7418
  %z347 = getelementptr inbounds %struct.DeepSample, %struct.DeepSample* %230, i32 0, i32 0, !dbg !7419
  store i32 %add344, i32* %z347, align 4, !dbg !7420
  %231 = load i32, i32* %c, align 4, !dbg !7421
  %idxprom348 = sext i32 %231 to i64, !dbg !7422
  %arrayidx349 = getelementptr inbounds [16 x %struct.DeepSample*], [16 x %struct.DeepSample*]* %ds, i64 0, i64 %idxprom348, !dbg !7422
  %232 = load %struct.DeepSample*, %struct.DeepSample** %arrayidx349, align 8, !dbg !7423
  %incdec.ptr350 = getelementptr inbounds %struct.DeepSample, %struct.DeepSample* %232, i32 1, !dbg !7423
  store %struct.DeepSample* %incdec.ptr350, %struct.DeepSample** %arrayidx349, align 8, !dbg !7423
  br label %if.end373, !dbg !7424

if.else:                                          ; preds = %for.body313
  %233 = load i32, i32* %c, align 4, !dbg !7425
  %idxprom351 = sext i32 %233 to i64, !dbg !7427
  %arrayidx352 = getelementptr inbounds [16 x %struct.DeepSample*], [16 x %struct.DeepSample*]* %ds, i64 0, i64 %idxprom351, !dbg !7427
  %234 = load %struct.DeepSample*, %struct.DeepSample** %arrayidx352, align 8, !dbg !7427
  %z353 = getelementptr inbounds %struct.DeepSample, %struct.DeepSample* %234, i32 0, i32 0, !dbg !7428
  %235 = load i32, i32* %z353, align 4, !dbg !7428
  %shr354 = ashr i32 %235, 1, !dbg !7429
  %add355 = add nsw i32 %shr354, 1073741823, !dbg !7430
  %236 = load i32, i32* %c, align 4, !dbg !7431
  %idxprom356 = sext i32 %236 to i64, !dbg !7432
  %arrayidx357 = getelementptr inbounds [16 x %struct.DeepSample*], [16 x %struct.DeepSample*]* %ds, i64 0, i64 %idxprom356, !dbg !7432
  %237 = load %struct.DeepSample*, %struct.DeepSample** %arrayidx357, align 8, !dbg !7432
  %z358 = getelementptr inbounds %struct.DeepSample, %struct.DeepSample* %237, i32 0, i32 0, !dbg !7433
  store i32 %add355, i32* %z358, align 4, !dbg !7434
  %238 = load i32, i32* %c, align 4, !dbg !7435
  %idxprom359 = sext i32 %238 to i64, !dbg !7436
  %arrayidx360 = getelementptr inbounds [16 x %struct.DeepSample*], [16 x %struct.DeepSample*]* %ds, i64 0, i64 %idxprom359, !dbg !7436
  %239 = load %struct.DeepSample*, %struct.DeepSample** %arrayidx360, align 8, !dbg !7437
  %incdec.ptr361 = getelementptr inbounds %struct.DeepSample, %struct.DeepSample* %239, i32 1, !dbg !7437
  store %struct.DeepSample* %incdec.ptr361, %struct.DeepSample** %arrayidx360, align 8, !dbg !7437
  %240 = load i32, i32* %c, align 4, !dbg !7438
  %idxprom362 = sext i32 %240 to i64, !dbg !7439
  %arrayidx363 = getelementptr inbounds [16 x %struct.DeepSample*], [16 x %struct.DeepSample*]* %ds, i64 0, i64 %idxprom362, !dbg !7439
  %241 = load %struct.DeepSample*, %struct.DeepSample** %arrayidx363, align 8, !dbg !7439
  %z364 = getelementptr inbounds %struct.DeepSample, %struct.DeepSample* %241, i32 0, i32 0, !dbg !7440
  %242 = load i32, i32* %z364, align 4, !dbg !7440
  %shr365 = ashr i32 %242, 1, !dbg !7441
  %add366 = add nsw i32 %shr365, 1073741823, !dbg !7442
  %243 = load i32, i32* %c, align 4, !dbg !7443
  %idxprom367 = sext i32 %243 to i64, !dbg !7444
  %arrayidx368 = getelementptr inbounds [16 x %struct.DeepSample*], [16 x %struct.DeepSample*]* %ds, i64 0, i64 %idxprom367, !dbg !7444
  %244 = load %struct.DeepSample*, %struct.DeepSample** %arrayidx368, align 8, !dbg !7444
  %z369 = getelementptr inbounds %struct.DeepSample, %struct.DeepSample* %244, i32 0, i32 0, !dbg !7445
  store i32 %add366, i32* %z369, align 4, !dbg !7446
  %245 = load i32, i32* %c, align 4, !dbg !7447
  %idxprom370 = sext i32 %245 to i64, !dbg !7448
  %arrayidx371 = getelementptr inbounds [16 x %struct.DeepSample*], [16 x %struct.DeepSample*]* %ds, i64 0, i64 %idxprom370, !dbg !7448
  %246 = load %struct.DeepSample*, %struct.DeepSample** %arrayidx371, align 8, !dbg !7449
  %incdec.ptr372 = getelementptr inbounds %struct.DeepSample, %struct.DeepSample* %246, i32 1, !dbg !7449
  store %struct.DeepSample* %incdec.ptr372, %struct.DeepSample** %arrayidx371, align 8, !dbg !7449
  br label %if.end373

if.end373:                                        ; preds = %if.else, %if.then319
  br label %for.inc374, !dbg !7450

for.inc374:                                       ; preds = %if.end373
  %247 = load i32, i32* %b, align 4, !dbg !7451
  %inc375 = add nsw i32 %247, 1, !dbg !7451
  store i32 %inc375, i32* %b, align 4, !dbg !7451
  br label %for.cond308, !dbg !7452, !llvm.loop !7453

for.end376:                                       ; preds = %for.cond308
  %248 = load i32, i32* %c, align 4, !dbg !7455
  %idxprom377 = sext i32 %248 to i64, !dbg !7456
  %arrayidx378 = getelementptr inbounds [16 x %struct.DeepSample*], [16 x %struct.DeepSample*]* %sampleds, i64 0, i64 %idxprom377, !dbg !7456
  %249 = load %struct.DeepSample*, %struct.DeepSample** %arrayidx378, align 8, !dbg !7456
  %250 = load i32, i32* %c, align 4, !dbg !7457
  %idxprom379 = sext i32 %250 to i64, !dbg !7458
  %arrayidx380 = getelementptr inbounds [16 x %struct.DeepSample*], [16 x %struct.DeepSample*]* %ds, i64 0, i64 %idxprom379, !dbg !7458
  store %struct.DeepSample* %249, %struct.DeepSample** %arrayidx380, align 8, !dbg !7459
  %251 = load i32, i32* %c, align 4, !dbg !7460
  %idxprom381 = sext i32 %251 to i64, !dbg !7461
  %arrayidx382 = getelementptr inbounds [16 x i32], [16 x i32]* %sampletot, i64 0, i64 %idxprom381, !dbg !7461
  %252 = load i32, i32* %arrayidx382, align 4, !dbg !7462
  %mul383 = mul nsw i32 %252, 2, !dbg !7462
  store i32 %mul383, i32* %arrayidx382, align 4, !dbg !7462
  br label %for.inc384, !dbg !7463

for.inc384:                                       ; preds = %for.end376
  %253 = load i32, i32* %c, align 4, !dbg !7464
  %inc385 = add nsw i32 %253, 1, !dbg !7464
  store i32 %inc385, i32* %c, align 4, !dbg !7464
  br label %for.cond265, !dbg !7465, !llvm.loop !7466

for.end386:                                       ; preds = %for.cond265
  %254 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !7468
  %255 = load i32, i32* %tot, align 4, !dbg !7469
  %conv387 = sext i32 %255 to i64, !dbg !7469
  %mul388 = mul i64 8, %conv387, !dbg !7470
  %mul389 = mul i64 %mul388, 2, !dbg !7471
  %call390 = call i8* %254(i64 %mul389, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.8, i64 0, i64 0)), !dbg !7468
  %256 = bitcast i8* %call390 to %struct.DeepSample*, !dbg !7468
  %257 = load %struct.ShadSampleBuf*, %struct.ShadSampleBuf** %shsample, align 8, !dbg !7472
  %deepbuf391 = getelementptr inbounds %struct.ShadSampleBuf, %struct.ShadSampleBuf* %257, i32 0, i32 4, !dbg !7473
  %258 = load %struct.DeepSample**, %struct.DeepSample*** %deepbuf391, align 8, !dbg !7473
  %259 = load i32, i32* %a, align 4, !dbg !7474
  %idxprom392 = sext i32 %259 to i64, !dbg !7472
  %arrayidx393 = getelementptr inbounds %struct.DeepSample*, %struct.DeepSample** %258, i64 %idxprom392, !dbg !7472
  store %struct.DeepSample* %256, %struct.DeepSample** %arrayidx393, align 8, !dbg !7475
  %260 = load %struct.ShadSampleBuf*, %struct.ShadSampleBuf** %shsample, align 8, !dbg !7476
  %totbuf394 = getelementptr inbounds %struct.ShadSampleBuf, %struct.ShadSampleBuf* %260, i32 0, i32 5, !dbg !7477
  %261 = load i32*, i32** %totbuf394, align 8, !dbg !7477
  %262 = load i32, i32* %a, align 4, !dbg !7478
  %idxprom395 = sext i32 %262 to i64, !dbg !7476
  %arrayidx396 = getelementptr inbounds i32, i32* %261, i64 %idxprom395, !dbg !7476
  store i32 0, i32* %arrayidx396, align 4, !dbg !7479
  %263 = load %struct.ShadSampleBuf*, %struct.ShadSampleBuf** %shsample, align 8, !dbg !7480
  %deepbuf397 = getelementptr inbounds %struct.ShadSampleBuf, %struct.ShadSampleBuf* %263, i32 0, i32 4, !dbg !7481
  %264 = load %struct.DeepSample**, %struct.DeepSample*** %deepbuf397, align 8, !dbg !7481
  %265 = load i32, i32* %a, align 4, !dbg !7482
  %idxprom398 = sext i32 %265 to i64, !dbg !7480
  %arrayidx399 = getelementptr inbounds %struct.DeepSample*, %struct.DeepSample** %264, i64 %idxprom398, !dbg !7480
  %266 = load %struct.DeepSample*, %struct.DeepSample** %arrayidx399, align 8, !dbg !7480
  store %struct.DeepSample* %266, %struct.DeepSample** %dsb, align 8, !dbg !7483
  br label %while.body, !dbg !7484

while.body:                                       ; preds = %for.end386, %for.end464
  store i32 0, i32* %minz, align 4, !dbg !7485
  store i32 0, i32* %found, align 4, !dbg !7487
  store i32 0, i32* %c, align 4, !dbg !7488
  br label %for.cond400, !dbg !7490

for.cond400:                                      ; preds = %for.inc418, %while.body
  %267 = load i32, i32* %c, align 4, !dbg !7491
  %268 = load i32, i32* %totbuf, align 4, !dbg !7493
  %cmp401 = icmp slt i32 %267, %268, !dbg !7494
  br i1 %cmp401, label %for.body403, label %for.end420, !dbg !7495

for.body403:                                      ; preds = %for.cond400
  %269 = load i32, i32* %c, align 4, !dbg !7496
  %idxprom404 = sext i32 %269 to i64, !dbg !7499
  %arrayidx405 = getelementptr inbounds [16 x i32], [16 x i32]* %sampletot, i64 0, i64 %idxprom404, !dbg !7499
  %270 = load i32, i32* %arrayidx405, align 4, !dbg !7499
  %tobool406 = icmp ne i32 %270, 0, !dbg !7499
  br i1 %tobool406, label %land.lhs.true, label %if.end417, !dbg !7500

land.lhs.true:                                    ; preds = %for.body403
  %271 = load i32, i32* %found, align 4, !dbg !7501
  %tobool407 = icmp ne i32 %271, 0, !dbg !7501
  br i1 %tobool407, label %lor.lhs.false, label %if.then413, !dbg !7502

lor.lhs.false:                                    ; preds = %land.lhs.true
  %272 = load i32, i32* %c, align 4, !dbg !7503
  %idxprom408 = sext i32 %272 to i64, !dbg !7504
  %arrayidx409 = getelementptr inbounds [16 x %struct.DeepSample*], [16 x %struct.DeepSample*]* %ds, i64 0, i64 %idxprom408, !dbg !7504
  %273 = load %struct.DeepSample*, %struct.DeepSample** %arrayidx409, align 8, !dbg !7504
  %z410 = getelementptr inbounds %struct.DeepSample, %struct.DeepSample* %273, i32 0, i32 0, !dbg !7505
  %274 = load i32, i32* %z410, align 4, !dbg !7505
  %275 = load i32, i32* %minz, align 4, !dbg !7506
  %cmp411 = icmp slt i32 %274, %275, !dbg !7507
  br i1 %cmp411, label %if.then413, label %if.end417, !dbg !7508

if.then413:                                       ; preds = %lor.lhs.false, %land.lhs.true
  %276 = load i32, i32* %c, align 4, !dbg !7509
  %idxprom414 = sext i32 %276 to i64, !dbg !7511
  %arrayidx415 = getelementptr inbounds [16 x %struct.DeepSample*], [16 x %struct.DeepSample*]* %ds, i64 0, i64 %idxprom414, !dbg !7511
  %277 = load %struct.DeepSample*, %struct.DeepSample** %arrayidx415, align 8, !dbg !7511
  %z416 = getelementptr inbounds %struct.DeepSample, %struct.DeepSample* %277, i32 0, i32 0, !dbg !7512
  %278 = load i32, i32* %z416, align 4, !dbg !7512
  store i32 %278, i32* %minz, align 4, !dbg !7513
  store i32 1, i32* %found, align 4, !dbg !7514
  br label %if.end417, !dbg !7515

if.end417:                                        ; preds = %if.then413, %lor.lhs.false, %for.body403
  br label %for.inc418, !dbg !7516

for.inc418:                                       ; preds = %if.end417
  %279 = load i32, i32* %c, align 4, !dbg !7517
  %inc419 = add nsw i32 %279, 1, !dbg !7517
  store i32 %inc419, i32* %c, align 4, !dbg !7517
  br label %for.cond400, !dbg !7518, !llvm.loop !7519

for.end420:                                       ; preds = %for.cond400
  %280 = load i32, i32* %found, align 4, !dbg !7521
  %tobool421 = icmp ne i32 %280, 0, !dbg !7521
  br i1 %tobool421, label %if.end423, label %if.then422, !dbg !7523

if.then422:                                       ; preds = %for.end420
  br label %while.end, !dbg !7524

if.end423:                                        ; preds = %for.end420
  %281 = load i32, i32* %minz, align 4, !dbg !7525
  %282 = load %struct.DeepSample*, %struct.DeepSample** %dsb, align 8, !dbg !7526
  %z424 = getelementptr inbounds %struct.DeepSample, %struct.DeepSample* %282, i32 0, i32 0, !dbg !7527
  store i32 %281, i32* %z424, align 4, !dbg !7528
  %283 = load %struct.DeepSample*, %struct.DeepSample** %dsb, align 8, !dbg !7529
  %v425 = getelementptr inbounds %struct.DeepSample, %struct.DeepSample* %283, i32 0, i32 1, !dbg !7530
  store float 0.000000e+00, float* %v425, align 4, !dbg !7531
  store float 0.000000e+00, float* %visibility, align 4, !dbg !7532
  store i32 0, i32* %c, align 4, !dbg !7533
  br label %for.cond426, !dbg !7535

for.cond426:                                      ; preds = %for.inc462, %if.end423
  %284 = load i32, i32* %c, align 4, !dbg !7536
  %285 = load i32, i32* %totbuf, align 4, !dbg !7538
  %cmp427 = icmp slt i32 %284, %285, !dbg !7539
  br i1 %cmp427, label %for.body429, label %for.end464, !dbg !7540

for.body429:                                      ; preds = %for.cond426
  %286 = load i32, i32* %c, align 4, !dbg !7541
  %idxprom430 = sext i32 %286 to i64, !dbg !7544
  %arrayidx431 = getelementptr inbounds [16 x i32], [16 x i32]* %sampletot, i64 0, i64 %idxprom430, !dbg !7544
  %287 = load i32, i32* %arrayidx431, align 4, !dbg !7544
  %tobool432 = icmp ne i32 %287, 0, !dbg !7544
  br i1 %tobool432, label %land.lhs.true433, label %if.end445, !dbg !7545

land.lhs.true433:                                 ; preds = %for.body429
  %288 = load i32, i32* %c, align 4, !dbg !7546
  %idxprom434 = sext i32 %288 to i64, !dbg !7547
  %arrayidx435 = getelementptr inbounds [16 x %struct.DeepSample*], [16 x %struct.DeepSample*]* %ds, i64 0, i64 %idxprom434, !dbg !7547
  %289 = load %struct.DeepSample*, %struct.DeepSample** %arrayidx435, align 8, !dbg !7547
  %z436 = getelementptr inbounds %struct.DeepSample, %struct.DeepSample* %289, i32 0, i32 0, !dbg !7548
  %290 = load i32, i32* %z436, align 4, !dbg !7548
  %291 = load i32, i32* %minz, align 4, !dbg !7549
  %cmp437 = icmp eq i32 %290, %291, !dbg !7550
  br i1 %cmp437, label %if.then439, label %if.end445, !dbg !7551

if.then439:                                       ; preds = %land.lhs.true433
  %292 = load i32, i32* %c, align 4, !dbg !7552
  %idxprom440 = sext i32 %292 to i64, !dbg !7554
  %arrayidx441 = getelementptr inbounds [16 x %struct.DeepSample*], [16 x %struct.DeepSample*]* %ds, i64 0, i64 %idxprom440, !dbg !7554
  %293 = load %struct.DeepSample*, %struct.DeepSample** %arrayidx441, align 8, !dbg !7555
  %incdec.ptr442 = getelementptr inbounds %struct.DeepSample, %struct.DeepSample* %293, i32 1, !dbg !7555
  store %struct.DeepSample* %incdec.ptr442, %struct.DeepSample** %arrayidx441, align 8, !dbg !7555
  %294 = load i32, i32* %c, align 4, !dbg !7556
  %idxprom443 = sext i32 %294 to i64, !dbg !7557
  %arrayidx444 = getelementptr inbounds [16 x i32], [16 x i32]* %sampletot, i64 0, i64 %idxprom443, !dbg !7557
  %295 = load i32, i32* %arrayidx444, align 4, !dbg !7558
  %dec = add nsw i32 %295, -1, !dbg !7558
  store i32 %dec, i32* %arrayidx444, align 4, !dbg !7558
  br label %if.end445, !dbg !7559

if.end445:                                        ; preds = %if.then439, %land.lhs.true433, %for.body429
  %296 = load i32, i32* %c, align 4, !dbg !7560
  %idxprom446 = sext i32 %296 to i64, !dbg !7562
  %arrayidx447 = getelementptr inbounds [16 x %struct.DeepSample*], [16 x %struct.DeepSample*]* %sampleds, i64 0, i64 %idxprom446, !dbg !7562
  %297 = load %struct.DeepSample*, %struct.DeepSample** %arrayidx447, align 8, !dbg !7562
  %298 = load i32, i32* %c, align 4, !dbg !7563
  %idxprom448 = sext i32 %298 to i64, !dbg !7564
  %arrayidx449 = getelementptr inbounds [16 x %struct.DeepSample*], [16 x %struct.DeepSample*]* %ds, i64 0, i64 %idxprom448, !dbg !7564
  %299 = load %struct.DeepSample*, %struct.DeepSample** %arrayidx449, align 8, !dbg !7564
  %cmp450 = icmp eq %struct.DeepSample* %297, %299, !dbg !7565
  br i1 %cmp450, label %if.then452, label %if.else454, !dbg !7566

if.then452:                                       ; preds = %if.end445
  %300 = load float, float* %totbuf_f_inv, align 4, !dbg !7567
  %301 = load float, float* %visibility, align 4, !dbg !7568
  %add453 = fadd float %301, %300, !dbg !7568
  store float %add453, float* %visibility, align 4, !dbg !7568
  br label %if.end461, !dbg !7569

if.else454:                                       ; preds = %if.end445
  %302 = load i32, i32* %c, align 4, !dbg !7570
  %idxprom455 = sext i32 %302 to i64, !dbg !7571
  %arrayidx456 = getelementptr inbounds [16 x %struct.DeepSample*], [16 x %struct.DeepSample*]* %ds, i64 0, i64 %idxprom455, !dbg !7571
  %303 = load %struct.DeepSample*, %struct.DeepSample** %arrayidx456, align 8, !dbg !7571
  %add.ptr457 = getelementptr inbounds %struct.DeepSample, %struct.DeepSample* %303, i64 -1, !dbg !7572
  %v458 = getelementptr inbounds %struct.DeepSample, %struct.DeepSample* %add.ptr457, i32 0, i32 1, !dbg !7573
  %304 = load float, float* %v458, align 4, !dbg !7573
  %305 = load float, float* %totbuf_f, align 4, !dbg !7574
  %div459 = fdiv float %304, %305, !dbg !7575
  %306 = load float, float* %visibility, align 4, !dbg !7576
  %add460 = fadd float %306, %div459, !dbg !7576
  store float %add460, float* %visibility, align 4, !dbg !7576
  br label %if.end461

if.end461:                                        ; preds = %if.else454, %if.then452
  br label %for.inc462, !dbg !7577

for.inc462:                                       ; preds = %if.end461
  %307 = load i32, i32* %c, align 4, !dbg !7578
  %inc463 = add nsw i32 %307, 1, !dbg !7578
  store i32 %inc463, i32* %c, align 4, !dbg !7578
  br label %for.cond426, !dbg !7579, !llvm.loop !7580

for.end464:                                       ; preds = %for.cond426
  %308 = load float, float* %visibility, align 4, !dbg !7582
  %309 = load %struct.DeepSample*, %struct.DeepSample** %dsb, align 8, !dbg !7583
  %v465 = getelementptr inbounds %struct.DeepSample, %struct.DeepSample* %309, i32 0, i32 1, !dbg !7584
  store float %308, float* %v465, align 4, !dbg !7585
  %310 = load %struct.DeepSample*, %struct.DeepSample** %dsb, align 8, !dbg !7586
  %incdec.ptr466 = getelementptr inbounds %struct.DeepSample, %struct.DeepSample* %310, i32 1, !dbg !7586
  store %struct.DeepSample* %incdec.ptr466, %struct.DeepSample** %dsb, align 8, !dbg !7586
  %311 = load %struct.ShadSampleBuf*, %struct.ShadSampleBuf** %shsample, align 8, !dbg !7587
  %totbuf467 = getelementptr inbounds %struct.ShadSampleBuf, %struct.ShadSampleBuf* %311, i32 0, i32 5, !dbg !7588
  %312 = load i32*, i32** %totbuf467, align 8, !dbg !7588
  %313 = load i32, i32* %a, align 4, !dbg !7589
  %idxprom468 = sext i32 %313 to i64, !dbg !7587
  %arrayidx469 = getelementptr inbounds i32, i32* %312, i64 %idxprom468, !dbg !7587
  %314 = load i32, i32* %arrayidx469, align 4, !dbg !7590
  %inc470 = add nsw i32 %314, 1, !dbg !7590
  store i32 %inc470, i32* %arrayidx469, align 4, !dbg !7590
  br label %while.body, !dbg !7484, !llvm.loop !7591

while.end:                                        ; preds = %if.then422
  %315 = load %struct.ShadSampleBuf*, %struct.ShadSampleBuf** %shsample, align 8, !dbg !7593
  %totbuf471 = getelementptr inbounds %struct.ShadSampleBuf, %struct.ShadSampleBuf* %315, i32 0, i32 5, !dbg !7594
  %316 = load i32*, i32** %totbuf471, align 8, !dbg !7594
  %317 = load i32, i32* %a, align 4, !dbg !7595
  %idxprom472 = sext i32 %317 to i64, !dbg !7593
  %arrayidx473 = getelementptr inbounds i32, i32* %316, i64 %idxprom472, !dbg !7593
  %318 = load i32, i32* %arrayidx473, align 4, !dbg !7593
  store i32 %318, i32* %prevtot, align 4, !dbg !7596
  %319 = load i32, i32* %prevtot, align 4, !dbg !7597
  %320 = load i32, i32* %totsample, align 4, !dbg !7598
  %add474 = add nsw i32 %320, %319, !dbg !7598
  store i32 %add474, i32* %totsample, align 4, !dbg !7598
  %321 = load %struct.ShadSampleBuf*, %struct.ShadSampleBuf** %shsample, align 8, !dbg !7599
  %deepbuf475 = getelementptr inbounds %struct.ShadSampleBuf, %struct.ShadSampleBuf* %321, i32 0, i32 4, !dbg !7600
  %322 = load %struct.DeepSample**, %struct.DeepSample*** %deepbuf475, align 8, !dbg !7600
  %323 = load i32, i32* %a, align 4, !dbg !7601
  %idxprom476 = sext i32 %323 to i64, !dbg !7599
  %arrayidx477 = getelementptr inbounds %struct.DeepSample*, %struct.DeepSample** %322, i64 %idxprom476, !dbg !7599
  %324 = load %struct.DeepSample*, %struct.DeepSample** %arrayidx477, align 8, !dbg !7599
  %325 = load i32, i32* %prevtot, align 4, !dbg !7602
  %326 = load %struct.ShadBuf*, %struct.ShadBuf** %shb.addr, align 8, !dbg !7603
  %compressthresh = getelementptr inbounds %struct.ShadBuf, %struct.ShadBuf* %326, i32 0, i32 12, !dbg !7604
  %327 = load float, float* %compressthresh, align 8, !dbg !7604
  %call478 = call i32 @compress_deepsamples(%struct.DeepSample* %324, i32 %325, float %327), !dbg !7605
  store i32 %call478, i32* %newtot, align 4, !dbg !7606
  %328 = load i32, i32* %newtot, align 4, !dbg !7607
  %329 = load %struct.ShadSampleBuf*, %struct.ShadSampleBuf** %shsample, align 8, !dbg !7608
  %totbuf479 = getelementptr inbounds %struct.ShadSampleBuf, %struct.ShadSampleBuf* %329, i32 0, i32 5, !dbg !7609
  %330 = load i32*, i32** %totbuf479, align 8, !dbg !7609
  %331 = load i32, i32* %a, align 4, !dbg !7610
  %idxprom480 = sext i32 %331 to i64, !dbg !7608
  %arrayidx481 = getelementptr inbounds i32, i32* %330, i64 %idxprom480, !dbg !7608
  store i32 %328, i32* %arrayidx481, align 4, !dbg !7611
  %332 = load i32, i32* %newtot, align 4, !dbg !7612
  %333 = load i32, i32* %totsamplec, align 4, !dbg !7613
  %add482 = add nsw i32 %333, %332, !dbg !7613
  store i32 %add482, i32* %totsamplec, align 4, !dbg !7613
  %334 = load i32, i32* %newtot, align 4, !dbg !7614
  %335 = load i32, i32* %prevtot, align 4, !dbg !7616
  %cmp483 = icmp slt i32 %334, %335, !dbg !7617
  br i1 %cmp483, label %if.then485, label %if.end500, !dbg !7618

if.then485:                                       ; preds = %while.end
  %336 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !7619
  %337 = load i32, i32* %newtot, align 4, !dbg !7621
  %conv486 = sext i32 %337 to i64, !dbg !7621
  %mul487 = mul i64 8, %conv486, !dbg !7622
  %call488 = call i8* %336(i64 %mul487, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.9, i64 0, i64 0)), !dbg !7619
  %338 = bitcast i8* %call488 to %struct.DeepSample*, !dbg !7619
  store %struct.DeepSample* %338, %struct.DeepSample** %newbuf, align 8, !dbg !7623
  %339 = load %struct.DeepSample*, %struct.DeepSample** %newbuf, align 8, !dbg !7624
  %340 = bitcast %struct.DeepSample* %339 to i8*, !dbg !7625
  %341 = load %struct.ShadSampleBuf*, %struct.ShadSampleBuf** %shsample, align 8, !dbg !7626
  %deepbuf489 = getelementptr inbounds %struct.ShadSampleBuf, %struct.ShadSampleBuf* %341, i32 0, i32 4, !dbg !7627
  %342 = load %struct.DeepSample**, %struct.DeepSample*** %deepbuf489, align 8, !dbg !7627
  %343 = load i32, i32* %a, align 4, !dbg !7628
  %idxprom490 = sext i32 %343 to i64, !dbg !7626
  %arrayidx491 = getelementptr inbounds %struct.DeepSample*, %struct.DeepSample** %342, i64 %idxprom490, !dbg !7626
  %344 = load %struct.DeepSample*, %struct.DeepSample** %arrayidx491, align 8, !dbg !7626
  %345 = bitcast %struct.DeepSample* %344 to i8*, !dbg !7625
  %346 = load i32, i32* %newtot, align 4, !dbg !7629
  %conv492 = sext i32 %346 to i64, !dbg !7629
  %mul493 = mul i64 8, %conv492, !dbg !7630
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %340, i8* align 4 %345, i64 %mul493, i1 false), !dbg !7625
  %347 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !7631
  %348 = load %struct.ShadSampleBuf*, %struct.ShadSampleBuf** %shsample, align 8, !dbg !7632
  %deepbuf494 = getelementptr inbounds %struct.ShadSampleBuf, %struct.ShadSampleBuf* %348, i32 0, i32 4, !dbg !7633
  %349 = load %struct.DeepSample**, %struct.DeepSample*** %deepbuf494, align 8, !dbg !7633
  %350 = load i32, i32* %a, align 4, !dbg !7634
  %idxprom495 = sext i32 %350 to i64, !dbg !7632
  %arrayidx496 = getelementptr inbounds %struct.DeepSample*, %struct.DeepSample** %349, i64 %idxprom495, !dbg !7632
  %351 = load %struct.DeepSample*, %struct.DeepSample** %arrayidx496, align 8, !dbg !7632
  %352 = bitcast %struct.DeepSample* %351 to i8*, !dbg !7632
  call void %347(i8* %352), !dbg !7631
  %353 = load %struct.DeepSample*, %struct.DeepSample** %newbuf, align 8, !dbg !7635
  %354 = load %struct.ShadSampleBuf*, %struct.ShadSampleBuf** %shsample, align 8, !dbg !7636
  %deepbuf497 = getelementptr inbounds %struct.ShadSampleBuf, %struct.ShadSampleBuf* %354, i32 0, i32 4, !dbg !7637
  %355 = load %struct.DeepSample**, %struct.DeepSample*** %deepbuf497, align 8, !dbg !7637
  %356 = load i32, i32* %a, align 4, !dbg !7638
  %idxprom498 = sext i32 %356 to i64, !dbg !7636
  %arrayidx499 = getelementptr inbounds %struct.DeepSample*, %struct.DeepSample** %355, i64 %idxprom498, !dbg !7636
  store %struct.DeepSample* %353, %struct.DeepSample** %arrayidx499, align 8, !dbg !7639
  br label %if.end500, !dbg !7640

if.end500:                                        ; preds = %if.then485, %while.end
  %357 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !7641
  %arrayidx501 = getelementptr inbounds [16 x %struct.DeepSample*], [16 x %struct.DeepSample*]* %sampleds, i64 0, i64 0, !dbg !7642
  %358 = load %struct.DeepSample*, %struct.DeepSample** %arrayidx501, align 16, !dbg !7642
  %359 = bitcast %struct.DeepSample* %358 to i8*, !dbg !7642
  call void %357(i8* %359), !dbg !7641
  br label %for.inc502, !dbg !7643

for.inc502:                                       ; preds = %if.end500, %if.then103
  %360 = load i32, i32* %a, align 4, !dbg !7644
  %inc503 = add nsw i32 %360, 1, !dbg !7644
  store i32 %inc503, i32* %a, align 4, !dbg !7644
  %361 = load %struct.APixstr*, %struct.APixstr** %ap, align 8, !dbg !7645
  %incdec.ptr504 = getelementptr inbounds %struct.APixstr, %struct.APixstr* %361, i32 1, !dbg !7645
  store %struct.APixstr* %incdec.ptr504, %struct.APixstr** %ap, align 8, !dbg !7645
  %362 = load %struct.APixstrand*, %struct.APixstrand** %aps, align 8, !dbg !7646
  %incdec.ptr505 = getelementptr inbounds %struct.APixstrand, %struct.APixstrand* %362, i32 1, !dbg !7646
  store %struct.APixstrand* %incdec.ptr505, %struct.APixstrand** %aps, align 8, !dbg !7646
  br label %for.cond, !dbg !7647, !llvm.loop !7648

for.end506:                                       ; preds = %for.cond
  ret void, !dbg !7650
}

declare dso_local void @freepsA(%struct.ListBase*) #4

declare dso_local void @BLI_addtail(%struct.ListBase*, i8*) #4

; Function Attrs: noinline nounwind uwtable
define internal float @deep_alpha(%struct.Render* %re, i32 %obinr, i32 %facenr, i32 %strand) #0 !dbg !7651 {
entry:
  %re.addr = alloca %struct.Render*, align 8
  %obinr.addr = alloca i32, align 4
  %facenr.addr = alloca i32, align 4
  %strand.addr = alloca i32, align 4
  %obi = alloca %struct.ObjectInstanceRen*, align 8
  %ma = alloca %struct.Material*, align 8
  %strand1 = alloca %struct.StrandRen*, align 8
  %vlr = alloca %struct.VlakRen*, align 8
  store %struct.Render* %re, %struct.Render** %re.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Render** %re.addr, metadata !7654, metadata !DIExpression()), !dbg !7655
  store i32 %obinr, i32* %obinr.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %obinr.addr, metadata !7656, metadata !DIExpression()), !dbg !7657
  store i32 %facenr, i32* %facenr.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %facenr.addr, metadata !7658, metadata !DIExpression()), !dbg !7659
  store i32 %strand, i32* %strand.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %strand.addr, metadata !7660, metadata !DIExpression()), !dbg !7661
  call void @llvm.dbg.declare(metadata %struct.ObjectInstanceRen** %obi, metadata !7662, metadata !DIExpression()), !dbg !7663
  %0 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !7664
  %objectinstance = getelementptr inbounds %struct.Render, %struct.Render* %0, i32 0, i32 69, !dbg !7665
  %1 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %objectinstance, align 8, !dbg !7665
  %2 = load i32, i32* %obinr.addr, align 4, !dbg !7666
  %idxprom = sext i32 %2 to i64, !dbg !7664
  %arrayidx = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %1, i64 %idxprom, !dbg !7664
  store %struct.ObjectInstanceRen* %arrayidx, %struct.ObjectInstanceRen** %obi, align 8, !dbg !7663
  call void @llvm.dbg.declare(metadata %struct.Material** %ma, metadata !7667, metadata !DIExpression()), !dbg !7668
  %3 = load i32, i32* %strand.addr, align 4, !dbg !7669
  %tobool = icmp ne i32 %3, 0, !dbg !7669
  br i1 %tobool, label %if.then, label %if.else, !dbg !7671

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.StrandRen** %strand1, metadata !7672, metadata !DIExpression()), !dbg !7676
  %4 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi, align 8, !dbg !7677
  %obr = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %4, i32 0, i32 2, !dbg !7678
  %5 = load %struct.ObjectRen*, %struct.ObjectRen** %obr, align 8, !dbg !7678
  %6 = load i32, i32* %facenr.addr, align 4, !dbg !7679
  %sub = sub nsw i32 %6, 1, !dbg !7680
  %call = call %struct.StrandRen* @RE_findOrAddStrand(%struct.ObjectRen* %5, i32 %sub), !dbg !7681
  store %struct.StrandRen* %call, %struct.StrandRen** %strand1, align 8, !dbg !7676
  %7 = load %struct.StrandRen*, %struct.StrandRen** %strand1, align 8, !dbg !7682
  %buffer = getelementptr inbounds %struct.StrandRen, %struct.StrandRen* %7, i32 0, i32 1, !dbg !7683
  %8 = load %struct.StrandBuffer*, %struct.StrandBuffer** %buffer, align 8, !dbg !7683
  %ma2 = getelementptr inbounds %struct.StrandBuffer, %struct.StrandBuffer* %8, i32 0, i32 7, !dbg !7684
  %9 = load %struct.Material*, %struct.Material** %ma2, align 8, !dbg !7684
  store %struct.Material* %9, %struct.Material** %ma, align 8, !dbg !7685
  br label %if.end, !dbg !7686

if.else:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.VlakRen** %vlr, metadata !7687, metadata !DIExpression()), !dbg !7689
  %10 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi, align 8, !dbg !7690
  %obr3 = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %10, i32 0, i32 2, !dbg !7691
  %11 = load %struct.ObjectRen*, %struct.ObjectRen** %obr3, align 8, !dbg !7691
  %12 = load i32, i32* %facenr.addr, align 4, !dbg !7692
  %sub4 = sub nsw i32 %12, 1, !dbg !7693
  %and = and i32 %sub4, 134217727, !dbg !7694
  %call5 = call %struct.VlakRen* @RE_findOrAddVlak(%struct.ObjectRen* %11, i32 %and), !dbg !7695
  store %struct.VlakRen* %call5, %struct.VlakRen** %vlr, align 8, !dbg !7689
  %13 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !7696
  %mat = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %13, i32 0, i32 5, !dbg !7697
  %14 = load %struct.Material*, %struct.Material** %mat, align 8, !dbg !7697
  store %struct.Material* %14, %struct.Material** %ma, align 8, !dbg !7698
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %15 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !7699
  %shad_alpha = getelementptr inbounds %struct.Material, %struct.Material* %15, i32 0, i32 72, !dbg !7700
  %16 = load float, float* %shad_alpha, align 4, !dbg !7700
  ret float %16, !dbg !7701
}

declare dso_local void @qsort(i8*, i64, i64, i32 (i8*, i8*)*) #4

; Function Attrs: noinline nounwind uwtable
define internal i32 @verg_deepsample(i8* %poin1, i8* %poin2) #0 !dbg !7702 {
entry:
  %retval = alloca i32, align 4
  %poin1.addr = alloca i8*, align 8
  %poin2.addr = alloca i8*, align 8
  %ds1 = alloca %struct.DeepSample*, align 8
  %ds2 = alloca %struct.DeepSample*, align 8
  store i8* %poin1, i8** %poin1.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %poin1.addr, metadata !7707, metadata !DIExpression()), !dbg !7708
  store i8* %poin2, i8** %poin2.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %poin2.addr, metadata !7709, metadata !DIExpression()), !dbg !7710
  call void @llvm.dbg.declare(metadata %struct.DeepSample** %ds1, metadata !7711, metadata !DIExpression()), !dbg !7712
  %0 = load i8*, i8** %poin1.addr, align 8, !dbg !7713
  %1 = bitcast i8* %0 to %struct.DeepSample*, !dbg !7714
  store %struct.DeepSample* %1, %struct.DeepSample** %ds1, align 8, !dbg !7712
  call void @llvm.dbg.declare(metadata %struct.DeepSample** %ds2, metadata !7715, metadata !DIExpression()), !dbg !7716
  %2 = load i8*, i8** %poin2.addr, align 8, !dbg !7717
  %3 = bitcast i8* %2 to %struct.DeepSample*, !dbg !7718
  store %struct.DeepSample* %3, %struct.DeepSample** %ds2, align 8, !dbg !7716
  %4 = load %struct.DeepSample*, %struct.DeepSample** %ds1, align 8, !dbg !7719
  %z = getelementptr inbounds %struct.DeepSample, %struct.DeepSample* %4, i32 0, i32 0, !dbg !7721
  %5 = load i32, i32* %z, align 4, !dbg !7721
  %6 = load %struct.DeepSample*, %struct.DeepSample** %ds2, align 8, !dbg !7722
  %z1 = getelementptr inbounds %struct.DeepSample, %struct.DeepSample* %6, i32 0, i32 0, !dbg !7723
  %7 = load i32, i32* %z1, align 4, !dbg !7723
  %cmp = icmp slt i32 %5, %7, !dbg !7724
  br i1 %cmp, label %if.then, label %if.else, !dbg !7725

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval, align 4, !dbg !7726
  br label %return, !dbg !7726

if.else:                                          ; preds = %entry
  %8 = load %struct.DeepSample*, %struct.DeepSample** %ds1, align 8, !dbg !7727
  %z2 = getelementptr inbounds %struct.DeepSample, %struct.DeepSample* %8, i32 0, i32 0, !dbg !7729
  %9 = load i32, i32* %z2, align 4, !dbg !7729
  %10 = load %struct.DeepSample*, %struct.DeepSample** %ds2, align 8, !dbg !7730
  %z3 = getelementptr inbounds %struct.DeepSample, %struct.DeepSample* %10, i32 0, i32 0, !dbg !7731
  %11 = load i32, i32* %z3, align 4, !dbg !7731
  %cmp4 = icmp eq i32 %9, %11, !dbg !7732
  br i1 %cmp4, label %if.then5, label %if.else6, !dbg !7733

if.then5:                                         ; preds = %if.else
  store i32 0, i32* %retval, align 4, !dbg !7734
  br label %return, !dbg !7734

if.else6:                                         ; preds = %if.else
  store i32 1, i32* %retval, align 4, !dbg !7735
  br label %return, !dbg !7735

return:                                           ; preds = %if.else6, %if.then5, %if.then
  %12 = load i32, i32* %retval, align 4, !dbg !7736
  ret i32 %12, !dbg !7736
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @compress_deepsamples(%struct.DeepSample* %dsample, i32 %tot, float %epsilon) #0 !dbg !7737 {
entry:
  %dsample.addr = alloca %struct.DeepSample*, align 8
  %tot.addr = alloca i32, align 4
  %epsilon.addr = alloca float, align 4
  %ds = alloca %struct.DeepSample*, align 8
  %newds = alloca %struct.DeepSample*, align 8
  %v = alloca float, align 4
  %slope = alloca double, align 8
  %slopemin = alloca double, align 8
  %slopemax = alloca double, align 8
  %min = alloca double, align 8
  %max = alloca double, align 8
  %div = alloca double, align 8
  %newmin = alloca double, align 8
  %newmax = alloca double, align 8
  %a = alloca i32, align 4
  %first = alloca i32, align 4
  %z = alloca i32, align 4
  %newtot = alloca i32, align 4
  store %struct.DeepSample* %dsample, %struct.DeepSample** %dsample.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DeepSample** %dsample.addr, metadata !7740, metadata !DIExpression()), !dbg !7741
  store i32 %tot, i32* %tot.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %tot.addr, metadata !7742, metadata !DIExpression()), !dbg !7743
  store float %epsilon, float* %epsilon.addr, align 4
  call void @llvm.dbg.declare(metadata float* %epsilon.addr, metadata !7744, metadata !DIExpression()), !dbg !7745
  call void @llvm.dbg.declare(metadata %struct.DeepSample** %ds, metadata !7746, metadata !DIExpression()), !dbg !7747
  call void @llvm.dbg.declare(metadata %struct.DeepSample** %newds, metadata !7748, metadata !DIExpression()), !dbg !7749
  call void @llvm.dbg.declare(metadata float* %v, metadata !7750, metadata !DIExpression()), !dbg !7751
  call void @llvm.dbg.declare(metadata double* %slope, metadata !7752, metadata !DIExpression()), !dbg !7753
  call void @llvm.dbg.declare(metadata double* %slopemin, metadata !7754, metadata !DIExpression()), !dbg !7755
  call void @llvm.dbg.declare(metadata double* %slopemax, metadata !7756, metadata !DIExpression()), !dbg !7757
  call void @llvm.dbg.declare(metadata double* %min, metadata !7758, metadata !DIExpression()), !dbg !7759
  call void @llvm.dbg.declare(metadata double* %max, metadata !7760, metadata !DIExpression()), !dbg !7761
  call void @llvm.dbg.declare(metadata double* %div, metadata !7762, metadata !DIExpression()), !dbg !7763
  call void @llvm.dbg.declare(metadata double* %newmin, metadata !7764, metadata !DIExpression()), !dbg !7765
  call void @llvm.dbg.declare(metadata double* %newmax, metadata !7766, metadata !DIExpression()), !dbg !7767
  call void @llvm.dbg.declare(metadata i32* %a, metadata !7768, metadata !DIExpression()), !dbg !7769
  call void @llvm.dbg.declare(metadata i32* %first, metadata !7770, metadata !DIExpression()), !dbg !7771
  call void @llvm.dbg.declare(metadata i32* %z, metadata !7772, metadata !DIExpression()), !dbg !7773
  call void @llvm.dbg.declare(metadata i32* %newtot, metadata !7774, metadata !DIExpression()), !dbg !7775
  store i32 0, i32* %newtot, align 4, !dbg !7775
  %0 = load %struct.DeepSample*, %struct.DeepSample** %dsample.addr, align 8, !dbg !7776
  store %struct.DeepSample* %0, %struct.DeepSample** %ds, align 8, !dbg !7777
  %1 = load %struct.DeepSample*, %struct.DeepSample** %dsample.addr, align 8, !dbg !7778
  store %struct.DeepSample* %1, %struct.DeepSample** %newds, align 8, !dbg !7779
  store i32 0, i32* %a, align 4, !dbg !7780
  %2 = load i32, i32* %a, align 4, !dbg !7781
  %inc = add nsw i32 %2, 1, !dbg !7781
  store i32 %inc, i32* %a, align 4, !dbg !7781
  %3 = load %struct.DeepSample*, %struct.DeepSample** %ds, align 8, !dbg !7783
  %incdec.ptr = getelementptr inbounds %struct.DeepSample, %struct.DeepSample* %3, i32 1, !dbg !7783
  store %struct.DeepSample* %incdec.ptr, %struct.DeepSample** %ds, align 8, !dbg !7783
  br label %for.cond, !dbg !7784

for.cond:                                         ; preds = %for.inc75, %entry
  %4 = load i32, i32* %a, align 4, !dbg !7785
  %5 = load i32, i32* %tot.addr, align 4, !dbg !7787
  %cmp = icmp slt i32 %4, %5, !dbg !7788
  br i1 %cmp, label %for.body, label %for.end78, !dbg !7789

for.body:                                         ; preds = %for.cond
  store double 0.000000e+00, double* %slopemin, align 8, !dbg !7790
  store double 0.000000e+00, double* %slopemax, align 8, !dbg !7792
  store i32 1, i32* %first, align 4, !dbg !7793
  br label %for.cond1, !dbg !7794

for.cond1:                                        ; preds = %for.inc, %for.body
  %6 = load i32, i32* %a, align 4, !dbg !7795
  %7 = load i32, i32* %tot.addr, align 4, !dbg !7798
  %cmp2 = icmp slt i32 %6, %7, !dbg !7799
  br i1 %cmp2, label %for.body3, label %for.end, !dbg !7800

for.body3:                                        ; preds = %for.cond1
  %8 = load %struct.DeepSample*, %struct.DeepSample** %ds, align 8, !dbg !7801
  %z4 = getelementptr inbounds %struct.DeepSample, %struct.DeepSample* %8, i32 0, i32 0, !dbg !7804
  %9 = load i32, i32* %z4, align 4, !dbg !7804
  %10 = load %struct.DeepSample*, %struct.DeepSample** %newds, align 8, !dbg !7805
  %z5 = getelementptr inbounds %struct.DeepSample, %struct.DeepSample* %10, i32 0, i32 0, !dbg !7806
  %11 = load i32, i32* %z5, align 4, !dbg !7806
  %cmp6 = icmp eq i32 %9, %11, !dbg !7807
  br i1 %cmp6, label %if.then, label %if.else, !dbg !7808

if.then:                                          ; preds = %for.body3
  %12 = load %struct.DeepSample*, %struct.DeepSample** %newds, align 8, !dbg !7809
  %v7 = getelementptr inbounds %struct.DeepSample, %struct.DeepSample* %12, i32 0, i32 1, !dbg !7812
  %13 = load float, float* %v7, align 4, !dbg !7812
  %14 = load %struct.DeepSample*, %struct.DeepSample** %ds, align 8, !dbg !7813
  %v8 = getelementptr inbounds %struct.DeepSample, %struct.DeepSample* %14, i32 0, i32 1, !dbg !7814
  %15 = load float, float* %v8, align 4, !dbg !7814
  %sub = fsub float %13, %15, !dbg !7815
  %16 = call float @llvm.fabs.f32(float %sub), !dbg !7816
  %17 = load float, float* %epsilon.addr, align 4, !dbg !7817
  %cmp9 = fcmp ole float %16, %17, !dbg !7818
  br i1 %cmp9, label %if.end, label %if.then10, !dbg !7819

if.then10:                                        ; preds = %if.then
  br label %for.end, !dbg !7820

if.end:                                           ; preds = %if.then
  br label %if.end42, !dbg !7822

if.else:                                          ; preds = %for.body3
  %18 = load %struct.DeepSample*, %struct.DeepSample** %ds, align 8, !dbg !7823
  %z11 = getelementptr inbounds %struct.DeepSample, %struct.DeepSample* %18, i32 0, i32 0, !dbg !7825
  %19 = load i32, i32* %z11, align 4, !dbg !7825
  %conv = sitofp i32 %19 to double, !dbg !7826
  %20 = load %struct.DeepSample*, %struct.DeepSample** %newds, align 8, !dbg !7827
  %z12 = getelementptr inbounds %struct.DeepSample, %struct.DeepSample* %20, i32 0, i32 0, !dbg !7828
  %21 = load i32, i32* %z12, align 4, !dbg !7828
  %conv13 = sitofp i32 %21 to double, !dbg !7829
  %sub14 = fsub double %conv, %conv13, !dbg !7830
  %div15 = fdiv double 0x41DFFFFFFFC00000, %sub14, !dbg !7831
  store double %div15, double* %div, align 8, !dbg !7832
  %22 = load %struct.DeepSample*, %struct.DeepSample** %ds, align 8, !dbg !7833
  %v16 = getelementptr inbounds %struct.DeepSample, %struct.DeepSample* %22, i32 0, i32 1, !dbg !7834
  %23 = load float, float* %v16, align 4, !dbg !7834
  %24 = load float, float* %epsilon.addr, align 4, !dbg !7835
  %sub17 = fsub float %23, %24, !dbg !7836
  %25 = load %struct.DeepSample*, %struct.DeepSample** %newds, align 8, !dbg !7837
  %v18 = getelementptr inbounds %struct.DeepSample, %struct.DeepSample* %25, i32 0, i32 1, !dbg !7838
  %26 = load float, float* %v18, align 4, !dbg !7838
  %sub19 = fsub float %sub17, %26, !dbg !7839
  %conv20 = fpext float %sub19 to double, !dbg !7840
  %27 = load double, double* %div, align 8, !dbg !7841
  %mul = fmul double %conv20, %27, !dbg !7842
  store double %mul, double* %min, align 8, !dbg !7843
  %28 = load %struct.DeepSample*, %struct.DeepSample** %ds, align 8, !dbg !7844
  %v21 = getelementptr inbounds %struct.DeepSample, %struct.DeepSample* %28, i32 0, i32 1, !dbg !7845
  %29 = load float, float* %v21, align 4, !dbg !7845
  %30 = load float, float* %epsilon.addr, align 4, !dbg !7846
  %add = fadd float %29, %30, !dbg !7847
  %31 = load %struct.DeepSample*, %struct.DeepSample** %newds, align 8, !dbg !7848
  %v22 = getelementptr inbounds %struct.DeepSample, %struct.DeepSample* %31, i32 0, i32 1, !dbg !7849
  %32 = load float, float* %v22, align 4, !dbg !7849
  %sub23 = fsub float %add, %32, !dbg !7850
  %conv24 = fpext float %sub23 to double, !dbg !7851
  %33 = load double, double* %div, align 8, !dbg !7852
  %mul25 = fmul double %conv24, %33, !dbg !7853
  store double %mul25, double* %max, align 8, !dbg !7854
  %34 = load i32, i32* %first, align 4, !dbg !7855
  %tobool = icmp ne i32 %34, 0, !dbg !7855
  br i1 %tobool, label %if.then26, label %if.else27, !dbg !7857

if.then26:                                        ; preds = %if.else
  %35 = load double, double* %min, align 8, !dbg !7858
  store double %35, double* %newmin, align 8, !dbg !7860
  %36 = load double, double* %max, align 8, !dbg !7861
  store double %36, double* %newmax, align 8, !dbg !7862
  store i32 0, i32* %first, align 4, !dbg !7863
  br label %if.end41, !dbg !7864

if.else27:                                        ; preds = %if.else
  %37 = load double, double* %slopemin, align 8, !dbg !7865
  %38 = load double, double* %min, align 8, !dbg !7865
  %cmp28 = fcmp ogt double %37, %38, !dbg !7865
  br i1 %cmp28, label %cond.true, label %cond.false, !dbg !7865

cond.true:                                        ; preds = %if.else27
  %39 = load double, double* %slopemin, align 8, !dbg !7865
  br label %cond.end, !dbg !7865

cond.false:                                       ; preds = %if.else27
  %40 = load double, double* %min, align 8, !dbg !7865
  br label %cond.end, !dbg !7865

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi double [ %39, %cond.true ], [ %40, %cond.false ], !dbg !7865
  store double %cond, double* %newmin, align 8, !dbg !7867
  %41 = load double, double* %slopemax, align 8, !dbg !7868
  %42 = load double, double* %max, align 8, !dbg !7868
  %cmp30 = fcmp olt double %41, %42, !dbg !7868
  br i1 %cmp30, label %cond.true32, label %cond.false33, !dbg !7868

cond.true32:                                      ; preds = %cond.end
  %43 = load double, double* %slopemax, align 8, !dbg !7868
  br label %cond.end34, !dbg !7868

cond.false33:                                     ; preds = %cond.end
  %44 = load double, double* %max, align 8, !dbg !7868
  br label %cond.end34, !dbg !7868

cond.end34:                                       ; preds = %cond.false33, %cond.true32
  %cond35 = phi double [ %43, %cond.true32 ], [ %44, %cond.false33 ], !dbg !7868
  store double %cond35, double* %newmax, align 8, !dbg !7869
  %45 = load double, double* %newmin, align 8, !dbg !7870
  %46 = load double, double* %newmax, align 8, !dbg !7872
  %cmp36 = fcmp ogt double %45, %46, !dbg !7873
  br i1 %cmp36, label %if.then38, label %if.end40, !dbg !7874

if.then38:                                        ; preds = %cond.end34
  %47 = load %struct.DeepSample*, %struct.DeepSample** %ds, align 8, !dbg !7875
  %incdec.ptr39 = getelementptr inbounds %struct.DeepSample, %struct.DeepSample* %47, i32 -1, !dbg !7875
  store %struct.DeepSample* %incdec.ptr39, %struct.DeepSample** %ds, align 8, !dbg !7875
  %48 = load i32, i32* %a, align 4, !dbg !7877
  %dec = add nsw i32 %48, -1, !dbg !7877
  store i32 %dec, i32* %a, align 4, !dbg !7877
  br label %for.end, !dbg !7878

if.end40:                                         ; preds = %cond.end34
  br label %if.end41

if.end41:                                         ; preds = %if.end40, %if.then26
  %49 = load double, double* %newmin, align 8, !dbg !7879
  store double %49, double* %slopemin, align 8, !dbg !7880
  %50 = load double, double* %newmax, align 8, !dbg !7881
  store double %50, double* %slopemax, align 8, !dbg !7882
  br label %if.end42

if.end42:                                         ; preds = %if.end41, %if.end
  br label %for.inc, !dbg !7883

for.inc:                                          ; preds = %if.end42
  %51 = load i32, i32* %a, align 4, !dbg !7884
  %inc43 = add nsw i32 %51, 1, !dbg !7884
  store i32 %inc43, i32* %a, align 4, !dbg !7884
  %52 = load %struct.DeepSample*, %struct.DeepSample** %ds, align 8, !dbg !7885
  %incdec.ptr44 = getelementptr inbounds %struct.DeepSample, %struct.DeepSample* %52, i32 1, !dbg !7885
  store %struct.DeepSample* %incdec.ptr44, %struct.DeepSample** %ds, align 8, !dbg !7885
  br label %for.cond1, !dbg !7886, !llvm.loop !7887

for.end:                                          ; preds = %if.then38, %if.then10, %for.cond1
  %53 = load i32, i32* %a, align 4, !dbg !7889
  %54 = load i32, i32* %tot.addr, align 4, !dbg !7891
  %cmp45 = icmp eq i32 %53, %54, !dbg !7892
  br i1 %cmp45, label %if.then47, label %if.end50, !dbg !7893

if.then47:                                        ; preds = %for.end
  %55 = load %struct.DeepSample*, %struct.DeepSample** %ds, align 8, !dbg !7894
  %incdec.ptr48 = getelementptr inbounds %struct.DeepSample, %struct.DeepSample* %55, i32 -1, !dbg !7894
  store %struct.DeepSample* %incdec.ptr48, %struct.DeepSample** %ds, align 8, !dbg !7894
  %56 = load i32, i32* %a, align 4, !dbg !7896
  %dec49 = add nsw i32 %56, -1, !dbg !7896
  store i32 %dec49, i32* %a, align 4, !dbg !7896
  br label %if.end50, !dbg !7897

if.end50:                                         ; preds = %if.then47, %for.end
  %57 = load %struct.DeepSample*, %struct.DeepSample** %ds, align 8, !dbg !7898
  %z51 = getelementptr inbounds %struct.DeepSample, %struct.DeepSample* %57, i32 0, i32 0, !dbg !7899
  %58 = load i32, i32* %z51, align 4, !dbg !7899
  store i32 %58, i32* %z, align 4, !dbg !7900
  %59 = load i32, i32* %first, align 4, !dbg !7901
  %tobool52 = icmp ne i32 %59, 0, !dbg !7901
  br i1 %tobool52, label %if.then56, label %lor.lhs.false, !dbg !7903

lor.lhs.false:                                    ; preds = %if.end50
  %60 = load i32, i32* %a, align 4, !dbg !7904
  %61 = load i32, i32* %tot.addr, align 4, !dbg !7905
  %sub53 = sub nsw i32 %61, 1, !dbg !7906
  %cmp54 = icmp eq i32 %60, %sub53, !dbg !7907
  br i1 %cmp54, label %if.then56, label %if.else58, !dbg !7908

if.then56:                                        ; preds = %lor.lhs.false, %if.end50
  %62 = load %struct.DeepSample*, %struct.DeepSample** %ds, align 8, !dbg !7909
  %v57 = getelementptr inbounds %struct.DeepSample, %struct.DeepSample* %62, i32 0, i32 1, !dbg !7911
  %63 = load float, float* %v57, align 4, !dbg !7911
  store float %63, float* %v, align 4, !dbg !7912
  br label %if.end70, !dbg !7913

if.else58:                                        ; preds = %lor.lhs.false
  %64 = load double, double* %slopemin, align 8, !dbg !7914
  %65 = load double, double* %slopemax, align 8, !dbg !7916
  %add59 = fadd double %64, %65, !dbg !7917
  %mul60 = fmul double %add59, 5.000000e-01, !dbg !7918
  store double %mul60, double* %slope, align 8, !dbg !7919
  %66 = load %struct.DeepSample*, %struct.DeepSample** %newds, align 8, !dbg !7920
  %v61 = getelementptr inbounds %struct.DeepSample, %struct.DeepSample* %66, i32 0, i32 1, !dbg !7921
  %67 = load float, float* %v61, align 4, !dbg !7921
  %conv62 = fpext float %67 to double, !dbg !7922
  %68 = load double, double* %slope, align 8, !dbg !7923
  %69 = load i32, i32* %z, align 4, !dbg !7924
  %70 = load %struct.DeepSample*, %struct.DeepSample** %newds, align 8, !dbg !7925
  %z63 = getelementptr inbounds %struct.DeepSample, %struct.DeepSample* %70, i32 0, i32 0, !dbg !7926
  %71 = load i32, i32* %z63, align 4, !dbg !7926
  %sub64 = sub nsw i32 %69, %71, !dbg !7927
  %conv65 = sitofp i32 %sub64 to double, !dbg !7928
  %div66 = fdiv double %conv65, 0x41DFFFFFFFC00000, !dbg !7929
  %mul67 = fmul double %68, %div66, !dbg !7930
  %add68 = fadd double %conv62, %mul67, !dbg !7931
  %conv69 = fptrunc double %add68 to float, !dbg !7922
  store float %conv69, float* %v, align 4, !dbg !7932
  br label %if.end70

if.end70:                                         ; preds = %if.else58, %if.then56
  %72 = load %struct.DeepSample*, %struct.DeepSample** %newds, align 8, !dbg !7933
  %incdec.ptr71 = getelementptr inbounds %struct.DeepSample, %struct.DeepSample* %72, i32 1, !dbg !7933
  store %struct.DeepSample* %incdec.ptr71, %struct.DeepSample** %newds, align 8, !dbg !7933
  %73 = load i32, i32* %newtot, align 4, !dbg !7934
  %inc72 = add nsw i32 %73, 1, !dbg !7934
  store i32 %inc72, i32* %newtot, align 4, !dbg !7934
  %74 = load i32, i32* %z, align 4, !dbg !7935
  %75 = load %struct.DeepSample*, %struct.DeepSample** %newds, align 8, !dbg !7936
  %z73 = getelementptr inbounds %struct.DeepSample, %struct.DeepSample* %75, i32 0, i32 0, !dbg !7937
  store i32 %74, i32* %z73, align 4, !dbg !7938
  %76 = load float, float* %v, align 4, !dbg !7939
  %77 = load %struct.DeepSample*, %struct.DeepSample** %newds, align 8, !dbg !7940
  %v74 = getelementptr inbounds %struct.DeepSample, %struct.DeepSample* %77, i32 0, i32 1, !dbg !7941
  store float %76, float* %v74, align 4, !dbg !7942
  br label %for.inc75, !dbg !7943

for.inc75:                                        ; preds = %if.end70
  %78 = load i32, i32* %a, align 4, !dbg !7944
  %inc76 = add nsw i32 %78, 1, !dbg !7944
  store i32 %inc76, i32* %a, align 4, !dbg !7944
  %79 = load %struct.DeepSample*, %struct.DeepSample** %ds, align 8, !dbg !7945
  %incdec.ptr77 = getelementptr inbounds %struct.DeepSample, %struct.DeepSample* %79, i32 1, !dbg !7945
  store %struct.DeepSample* %incdec.ptr77, %struct.DeepSample** %ds, align 8, !dbg !7945
  br label %for.cond, !dbg !7946, !llvm.loop !7947

for.end78:                                        ; preds = %for.cond
  %80 = load i32, i32* %newtot, align 4, !dbg !7949
  %cmp79 = icmp eq i32 %80, 0, !dbg !7951
  br i1 %cmp79, label %if.then86, label %lor.lhs.false81, !dbg !7952

lor.lhs.false81:                                  ; preds = %for.end78
  %81 = load %struct.DeepSample*, %struct.DeepSample** %newds, align 8, !dbg !7953
  %v82 = getelementptr inbounds %struct.DeepSample, %struct.DeepSample* %81, i32 0, i32 1, !dbg !7954
  %82 = load float, float* %v82, align 4, !dbg !7954
  %83 = load %struct.DeepSample*, %struct.DeepSample** %newds, align 8, !dbg !7955
  %add.ptr = getelementptr inbounds %struct.DeepSample, %struct.DeepSample* %83, i64 -1, !dbg !7956
  %v83 = getelementptr inbounds %struct.DeepSample, %struct.DeepSample* %add.ptr, i32 0, i32 1, !dbg !7957
  %84 = load float, float* %v83, align 4, !dbg !7957
  %cmp84 = fcmp une float %82, %84, !dbg !7958
  br i1 %cmp84, label %if.then86, label %if.end88, !dbg !7959

if.then86:                                        ; preds = %lor.lhs.false81, %for.end78
  %85 = load i32, i32* %newtot, align 4, !dbg !7960
  %inc87 = add nsw i32 %85, 1, !dbg !7960
  store i32 %inc87, i32* %newtot, align 4, !dbg !7960
  br label %if.end88, !dbg !7961

if.end88:                                         ; preds = %if.then86, %lor.lhs.false81
  %86 = load i32, i32* %newtot, align 4, !dbg !7962
  ret i32 %86, !dbg !7963
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #2

declare dso_local %struct.StrandRen* @RE_findOrAddStrand(%struct.ObjectRen*, i32) #4

declare dso_local %struct.VlakRen* @RE_findOrAddVlak(%struct.ObjectRen*, i32) #4

declare dso_local void @zbuffer_shadow(%struct.Render*, [4 x float]*, %struct.LampRen*, i32*, i32, float, float) #4

; Function Attrs: noinline nounwind uwtable
define internal void @compress_shadowbuf(%struct.ShadBuf* %shb, i32* %rectz, i32 %square) #0 !dbg !7964 {
entry:
  %shb.addr = alloca %struct.ShadBuf*, align 8
  %rectz.addr = alloca i32*, align 8
  %square.addr = alloca i32, align 4
  %shsample = alloca %struct.ShadSampleBuf*, align 8
  %dist = alloca float, align 4
  %ztile = alloca i64*, align 8
  %rz = alloca i32*, align 8
  %rz1 = alloca i32*, align 8
  %verg = alloca i32, align 4
  %verg1 = alloca i32, align 4
  %size = alloca i32, align 4
  %a = alloca i32, align 4
  %x = alloca i32, align 4
  %y = alloca i32, align 4
  %minx = alloca i32, align 4
  %miny = alloca i32, align 4
  %byt1 = alloca i32, align 4
  %byt2 = alloca i32, align 4
  %rc = alloca i8*, align 8
  %rcline = alloca i8*, align 8
  %ctile = alloca i8*, align 8
  %zt = alloca i8*, align 8
  store %struct.ShadBuf* %shb, %struct.ShadBuf** %shb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ShadBuf** %shb.addr, metadata !7967, metadata !DIExpression()), !dbg !7968
  store i32* %rectz, i32** %rectz.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %rectz.addr, metadata !7969, metadata !DIExpression()), !dbg !7970
  store i32 %square, i32* %square.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %square.addr, metadata !7971, metadata !DIExpression()), !dbg !7972
  call void @llvm.dbg.declare(metadata %struct.ShadSampleBuf** %shsample, metadata !7973, metadata !DIExpression()), !dbg !7974
  call void @llvm.dbg.declare(metadata float* %dist, metadata !7975, metadata !DIExpression()), !dbg !7976
  call void @llvm.dbg.declare(metadata i64** %ztile, metadata !7977, metadata !DIExpression()), !dbg !7978
  call void @llvm.dbg.declare(metadata i32** %rz, metadata !7979, metadata !DIExpression()), !dbg !7980
  call void @llvm.dbg.declare(metadata i32** %rz1, metadata !7981, metadata !DIExpression()), !dbg !7982
  call void @llvm.dbg.declare(metadata i32* %verg, metadata !7983, metadata !DIExpression()), !dbg !7984
  call void @llvm.dbg.declare(metadata i32* %verg1, metadata !7985, metadata !DIExpression()), !dbg !7986
  call void @llvm.dbg.declare(metadata i32* %size, metadata !7987, metadata !DIExpression()), !dbg !7988
  %0 = load %struct.ShadBuf*, %struct.ShadBuf** %shb.addr, align 8, !dbg !7989
  %size1 = getelementptr inbounds %struct.ShadBuf, %struct.ShadBuf* %0, i32 0, i32 14, !dbg !7990
  %1 = load i32, i32* %size1, align 8, !dbg !7990
  store i32 %1, i32* %size, align 4, !dbg !7988
  call void @llvm.dbg.declare(metadata i32* %a, metadata !7991, metadata !DIExpression()), !dbg !7992
  call void @llvm.dbg.declare(metadata i32* %x, metadata !7993, metadata !DIExpression()), !dbg !7994
  call void @llvm.dbg.declare(metadata i32* %y, metadata !7995, metadata !DIExpression()), !dbg !7996
  call void @llvm.dbg.declare(metadata i32* %minx, metadata !7997, metadata !DIExpression()), !dbg !7998
  call void @llvm.dbg.declare(metadata i32* %miny, metadata !7999, metadata !DIExpression()), !dbg !8000
  call void @llvm.dbg.declare(metadata i32* %byt1, metadata !8001, metadata !DIExpression()), !dbg !8002
  call void @llvm.dbg.declare(metadata i32* %byt2, metadata !8003, metadata !DIExpression()), !dbg !8004
  call void @llvm.dbg.declare(metadata i8** %rc, metadata !8005, metadata !DIExpression()), !dbg !8006
  call void @llvm.dbg.declare(metadata i8** %rcline, metadata !8007, metadata !DIExpression()), !dbg !8008
  call void @llvm.dbg.declare(metadata i8** %ctile, metadata !8009, metadata !DIExpression()), !dbg !8010
  call void @llvm.dbg.declare(metadata i8** %zt, metadata !8011, metadata !DIExpression()), !dbg !8012
  %2 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !8013
  %call = call i8* %2(i64 48, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.5, i64 0, i64 0)), !dbg !8013
  %3 = bitcast i8* %call to %struct.ShadSampleBuf*, !dbg !8013
  store %struct.ShadSampleBuf* %3, %struct.ShadSampleBuf** %shsample, align 8, !dbg !8014
  %4 = load %struct.ShadBuf*, %struct.ShadBuf** %shb.addr, align 8, !dbg !8015
  %buffers = getelementptr inbounds %struct.ShadBuf, %struct.ShadBuf* %4, i32 0, i32 16, !dbg !8016
  %5 = load %struct.ShadSampleBuf*, %struct.ShadSampleBuf** %shsample, align 8, !dbg !8017
  %6 = bitcast %struct.ShadSampleBuf* %5 to i8*, !dbg !8017
  call void @BLI_addtail(%struct.ListBase* %buffers, i8* %6), !dbg !8018
  %7 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !8019
  %8 = load i32, i32* %size, align 4, !dbg !8020
  %9 = load i32, i32* %size, align 4, !dbg !8021
  %mul = mul nsw i32 %8, %9, !dbg !8022
  %conv = sext i32 %mul to i64, !dbg !8023
  %mul2 = mul i64 8, %conv, !dbg !8024
  %div = udiv i64 %mul2, 256, !dbg !8025
  %call3 = call i8* %7(i64 %div, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.11, i64 0, i64 0)), !dbg !8019
  %10 = bitcast i8* %call3 to i64*, !dbg !8019
  %11 = load %struct.ShadSampleBuf*, %struct.ShadSampleBuf** %shsample, align 8, !dbg !8026
  %zbuf = getelementptr inbounds %struct.ShadSampleBuf, %struct.ShadSampleBuf* %11, i32 0, i32 2, !dbg !8027
  store i64* %10, i64** %zbuf, align 8, !dbg !8028
  %12 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !8029
  %13 = load i32, i32* %size, align 4, !dbg !8030
  %14 = load i32, i32* %size, align 4, !dbg !8031
  %mul4 = mul nsw i32 %13, %14, !dbg !8032
  %div5 = sdiv i32 %mul4, 256, !dbg !8033
  %conv6 = sext i32 %div5 to i64, !dbg !8034
  %call7 = call i8* %12(i64 %conv6, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.12, i64 0, i64 0)), !dbg !8029
  %15 = load %struct.ShadSampleBuf*, %struct.ShadSampleBuf** %shsample, align 8, !dbg !8035
  %cbuf = getelementptr inbounds %struct.ShadSampleBuf, %struct.ShadSampleBuf* %15, i32 0, i32 3, !dbg !8036
  store i8* %call7, i8** %cbuf, align 8, !dbg !8037
  %16 = load %struct.ShadSampleBuf*, %struct.ShadSampleBuf** %shsample, align 8, !dbg !8038
  %zbuf8 = getelementptr inbounds %struct.ShadSampleBuf, %struct.ShadSampleBuf* %16, i32 0, i32 2, !dbg !8039
  %17 = load i64*, i64** %zbuf8, align 8, !dbg !8039
  store i64* %17, i64** %ztile, align 8, !dbg !8040
  %18 = load %struct.ShadSampleBuf*, %struct.ShadSampleBuf** %shsample, align 8, !dbg !8041
  %cbuf9 = getelementptr inbounds %struct.ShadSampleBuf, %struct.ShadSampleBuf* %18, i32 0, i32 3, !dbg !8042
  %19 = load i8*, i8** %cbuf9, align 8, !dbg !8042
  store i8* %19, i8** %ctile, align 8, !dbg !8043
  %20 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !8044
  %call10 = call i8* %20(i64 1028, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.13, i64 0, i64 0)), !dbg !8044
  store i8* %call10, i8** %rcline, align 8, !dbg !8045
  store i32 0, i32* %y, align 4, !dbg !8046
  br label %for.cond, !dbg !8048

for.cond:                                         ; preds = %for.inc144, %entry
  %21 = load i32, i32* %y, align 4, !dbg !8049
  %22 = load i32, i32* %size, align 4, !dbg !8051
  %cmp = icmp slt i32 %21, %22, !dbg !8052
  br i1 %cmp, label %for.body, label %for.end146, !dbg !8053

for.body:                                         ; preds = %for.cond
  %23 = load i32, i32* %y, align 4, !dbg !8054
  %24 = load i32, i32* %size, align 4, !dbg !8057
  %div12 = sdiv i32 %24, 2, !dbg !8058
  %cmp13 = icmp slt i32 %23, %div12, !dbg !8059
  br i1 %cmp13, label %if.then, label %if.else, !dbg !8060

if.then:                                          ; preds = %for.body
  %25 = load i32, i32* %y, align 4, !dbg !8061
  %add = add nsw i32 %25, 15, !dbg !8062
  %26 = load i32, i32* %size, align 4, !dbg !8063
  %div15 = sdiv i32 %26, 2, !dbg !8064
  %sub = sub nsw i32 %add, %div15, !dbg !8065
  store i32 %sub, i32* %miny, align 4, !dbg !8066
  br label %if.end, !dbg !8067

if.else:                                          ; preds = %for.body
  %27 = load i32, i32* %y, align 4, !dbg !8068
  %28 = load i32, i32* %size, align 4, !dbg !8069
  %div16 = sdiv i32 %28, 2, !dbg !8070
  %sub17 = sub nsw i32 %27, %div16, !dbg !8071
  store i32 %sub17, i32* %miny, align 4, !dbg !8072
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  store i32 0, i32* %x, align 4, !dbg !8073
  br label %for.cond18, !dbg !8075

for.cond18:                                       ; preds = %for.inc141, %if.end
  %29 = load i32, i32* %x, align 4, !dbg !8076
  %30 = load i32, i32* %size, align 4, !dbg !8078
  %cmp19 = icmp slt i32 %29, %30, !dbg !8079
  br i1 %cmp19, label %for.body21, label %for.end143, !dbg !8080

for.body21:                                       ; preds = %for.cond18
  %31 = load i32, i32* %size, align 4, !dbg !8081
  %div22 = sdiv i32 %31, 2, !dbg !8083
  store i32 %div22, i32* %a, align 4, !dbg !8084
  %32 = load i32, i32* %x, align 4, !dbg !8085
  %33 = load i32, i32* %a, align 4, !dbg !8087
  %cmp23 = icmp slt i32 %32, %33, !dbg !8088
  br i1 %cmp23, label %if.then25, label %if.else28, !dbg !8089

if.then25:                                        ; preds = %for.body21
  %34 = load i32, i32* %x, align 4, !dbg !8090
  %add26 = add nsw i32 %34, 15, !dbg !8091
  %35 = load i32, i32* %a, align 4, !dbg !8092
  %sub27 = sub nsw i32 %add26, %35, !dbg !8093
  store i32 %sub27, i32* %minx, align 4, !dbg !8094
  br label %if.end30, !dbg !8095

if.else28:                                        ; preds = %for.body21
  %36 = load i32, i32* %x, align 4, !dbg !8096
  %37 = load i32, i32* %a, align 4, !dbg !8097
  %sub29 = sub nsw i32 %36, %37, !dbg !8098
  store i32 %sub29, i32* %minx, align 4, !dbg !8099
  br label %if.end30

if.end30:                                         ; preds = %if.else28, %if.then25
  %38 = load i32, i32* %minx, align 4, !dbg !8100
  %39 = load i32, i32* %minx, align 4, !dbg !8101
  %mul31 = mul nsw i32 %38, %39, !dbg !8102
  %40 = load i32, i32* %miny, align 4, !dbg !8103
  %41 = load i32, i32* %miny, align 4, !dbg !8104
  %mul32 = mul nsw i32 %40, %41, !dbg !8105
  %add33 = add nsw i32 %mul31, %mul32, !dbg !8106
  %conv34 = sitofp i32 %add33 to float, !dbg !8107
  %call35 = call float @sqrtf(float %conv34) #5, !dbg !8108
  store float %call35, float* %dist, align 4, !dbg !8109
  %42 = load i32, i32* %square.addr, align 4, !dbg !8110
  %cmp36 = icmp eq i32 %42, 0, !dbg !8112
  br i1 %cmp36, label %land.lhs.true, label %if.else43, !dbg !8113

land.lhs.true:                                    ; preds = %if.end30
  %43 = load float, float* %dist, align 4, !dbg !8114
  %44 = load i32, i32* %a, align 4, !dbg !8115
  %add38 = add nsw i32 %44, 12, !dbg !8116
  %conv39 = sitofp i32 %add38 to float, !dbg !8117
  %cmp40 = fcmp ogt float %43, %conv39, !dbg !8118
  br i1 %cmp40, label %if.then42, label %if.else43, !dbg !8119

if.then42:                                        ; preds = %land.lhs.true
  store i32 256, i32* %a, align 4, !dbg !8120
  store i32 0, i32* %verg, align 4, !dbg !8122
  %add.ptr = getelementptr inbounds i32, i32* %verg, i64 1, !dbg !8123
  store i32* %add.ptr, i32** %rz1, align 8, !dbg !8124
  br label %if.end53, !dbg !8125

if.else43:                                        ; preds = %land.lhs.true, %if.end30
  %45 = load i32*, i32** %rectz.addr, align 8, !dbg !8126
  %46 = load i32, i32* %size, align 4, !dbg !8128
  %47 = load i32, i32* %x, align 4, !dbg !8129
  %48 = load i32, i32* %y, align 4, !dbg !8130
  %49 = load i8*, i8** %rcline, align 8, !dbg !8131
  call void @copy_to_ztile(i32* %45, i32 %46, i32 %47, i32 %48, i32 16, i8* %49), !dbg !8132
  %50 = load i8*, i8** %rcline, align 8, !dbg !8133
  %51 = bitcast i8* %50 to i32*, !dbg !8134
  store i32* %51, i32** %rz1, align 8, !dbg !8135
  %52 = load i32*, i32** %rz1, align 8, !dbg !8136
  %53 = load i32, i32* %52, align 4, !dbg !8137
  %and = and i32 %53, -256, !dbg !8138
  store i32 %and, i32* %verg, align 4, !dbg !8139
  store i32 0, i32* %a, align 4, !dbg !8140
  br label %for.cond44, !dbg !8142

for.cond44:                                       ; preds = %for.inc, %if.else43
  %54 = load i32, i32* %a, align 4, !dbg !8143
  %cmp45 = icmp slt i32 %54, 256, !dbg !8145
  br i1 %cmp45, label %for.body47, label %for.end, !dbg !8146

for.body47:                                       ; preds = %for.cond44
  %55 = load i32*, i32** %rz1, align 8, !dbg !8147
  %56 = load i32, i32* %55, align 4, !dbg !8150
  %and48 = and i32 %56, -256, !dbg !8151
  %57 = load i32, i32* %verg, align 4, !dbg !8152
  %cmp49 = icmp ne i32 %and48, %57, !dbg !8153
  br i1 %cmp49, label %if.then51, label %if.end52, !dbg !8154

if.then51:                                        ; preds = %for.body47
  br label %for.end, !dbg !8155

if.end52:                                         ; preds = %for.body47
  br label %for.inc, !dbg !8156

for.inc:                                          ; preds = %if.end52
  %58 = load i32, i32* %a, align 4, !dbg !8157
  %inc = add nsw i32 %58, 1, !dbg !8157
  store i32 %inc, i32* %a, align 4, !dbg !8157
  %59 = load i32*, i32** %rz1, align 8, !dbg !8158
  %incdec.ptr = getelementptr inbounds i32, i32* %59, i32 1, !dbg !8158
  store i32* %incdec.ptr, i32** %rz1, align 8, !dbg !8158
  br label %for.cond44, !dbg !8159, !llvm.loop !8160

for.end:                                          ; preds = %if.then51, %for.cond44
  br label %if.end53

if.end53:                                         ; preds = %for.end, %if.then42
  %60 = load i32, i32* %a, align 4, !dbg !8162
  %cmp54 = icmp eq i32 %60, 256, !dbg !8164
  br i1 %cmp54, label %if.then56, label %if.else59, !dbg !8165

if.then56:                                        ; preds = %if.end53
  %61 = load i8*, i8** %ctile, align 8, !dbg !8166
  store i8 0, i8* %61, align 1, !dbg !8168
  %62 = load i32*, i32** %rz1, align 8, !dbg !8169
  %add.ptr57 = getelementptr inbounds i32, i32* %62, i64 -1, !dbg !8170
  %63 = load i32, i32* %add.ptr57, align 4, !dbg !8171
  %conv58 = sext i32 %63 to i64, !dbg !8171
  %64 = load i64*, i64** %ztile, align 8, !dbg !8172
  store i64 %conv58, i64* %64, align 8, !dbg !8173
  br label %if.end138, !dbg !8174

if.else59:                                        ; preds = %if.end53
  %65 = load i8*, i8** %rcline, align 8, !dbg !8175
  store i8* %65, i8** %rc, align 8, !dbg !8177
  %66 = load i8*, i8** %rcline, align 8, !dbg !8178
  %67 = bitcast i8* %66 to i32*, !dbg !8179
  store i32* %67, i32** %rz1, align 8, !dbg !8180
  %68 = load i8*, i8** %rc, align 8, !dbg !8181
  %arrayidx = getelementptr inbounds i8, i8* %68, i64 3, !dbg !8181
  %69 = load i8, i8* %arrayidx, align 1, !dbg !8181
  %conv60 = zext i8 %69 to i32, !dbg !8181
  store i32 %conv60, i32* %verg, align 4, !dbg !8182
  %70 = load i8*, i8** %rc, align 8, !dbg !8183
  %arrayidx61 = getelementptr inbounds i8, i8* %70, i64 2, !dbg !8183
  %71 = load i8, i8* %arrayidx61, align 1, !dbg !8183
  %conv62 = zext i8 %71 to i32, !dbg !8183
  store i32 %conv62, i32* %verg1, align 4, !dbg !8184
  %72 = load i8*, i8** %rc, align 8, !dbg !8185
  %add.ptr63 = getelementptr inbounds i8, i8* %72, i64 4, !dbg !8185
  store i8* %add.ptr63, i8** %rc, align 8, !dbg !8185
  store i32 1, i32* %byt1, align 4, !dbg !8186
  store i32 1, i32* %byt2, align 4, !dbg !8187
  store i32 1, i32* %a, align 4, !dbg !8188
  br label %for.cond64, !dbg !8190

for.cond64:                                       ; preds = %for.inc82, %if.else59
  %73 = load i32, i32* %a, align 4, !dbg !8191
  %cmp65 = icmp slt i32 %73, 256, !dbg !8193
  br i1 %cmp65, label %for.body67, label %for.end85, !dbg !8194

for.body67:                                       ; preds = %for.cond64
  %74 = load i32, i32* %verg, align 4, !dbg !8195
  %75 = load i8*, i8** %rc, align 8, !dbg !8197
  %arrayidx68 = getelementptr inbounds i8, i8* %75, i64 3, !dbg !8197
  %76 = load i8, i8* %arrayidx68, align 1, !dbg !8197
  %conv69 = zext i8 %76 to i32, !dbg !8197
  %cmp70 = icmp eq i32 %74, %conv69, !dbg !8198
  %conv71 = zext i1 %cmp70 to i32, !dbg !8198
  %77 = load i32, i32* %byt1, align 4, !dbg !8199
  %and72 = and i32 %77, %conv71, !dbg !8199
  store i32 %and72, i32* %byt1, align 4, !dbg !8199
  %78 = load i32, i32* %verg1, align 4, !dbg !8200
  %79 = load i8*, i8** %rc, align 8, !dbg !8201
  %arrayidx73 = getelementptr inbounds i8, i8* %79, i64 2, !dbg !8201
  %80 = load i8, i8* %arrayidx73, align 1, !dbg !8201
  %conv74 = zext i8 %80 to i32, !dbg !8201
  %cmp75 = icmp eq i32 %78, %conv74, !dbg !8202
  %conv76 = zext i1 %cmp75 to i32, !dbg !8202
  %81 = load i32, i32* %byt2, align 4, !dbg !8203
  %and77 = and i32 %81, %conv76, !dbg !8203
  store i32 %and77, i32* %byt2, align 4, !dbg !8203
  %82 = load i32, i32* %byt1, align 4, !dbg !8204
  %cmp78 = icmp eq i32 %82, 0, !dbg !8206
  br i1 %cmp78, label %if.then80, label %if.end81, !dbg !8207

if.then80:                                        ; preds = %for.body67
  br label %for.end85, !dbg !8208

if.end81:                                         ; preds = %for.body67
  br label %for.inc82, !dbg !8209

for.inc82:                                        ; preds = %if.end81
  %83 = load i32, i32* %a, align 4, !dbg !8210
  %inc83 = add nsw i32 %83, 1, !dbg !8210
  store i32 %inc83, i32* %a, align 4, !dbg !8210
  %84 = load i8*, i8** %rc, align 8, !dbg !8211
  %add.ptr84 = getelementptr inbounds i8, i8* %84, i64 4, !dbg !8211
  store i8* %add.ptr84, i8** %rc, align 8, !dbg !8211
  br label %for.cond64, !dbg !8212, !llvm.loop !8213

for.end85:                                        ; preds = %if.then80, %for.cond64
  %85 = load i32, i32* %byt1, align 4, !dbg !8215
  %tobool = icmp ne i32 %85, 0, !dbg !8215
  br i1 %tobool, label %land.lhs.true86, label %if.else101, !dbg !8217

land.lhs.true86:                                  ; preds = %for.end85
  %86 = load i32, i32* %byt2, align 4, !dbg !8218
  %tobool87 = icmp ne i32 %86, 0, !dbg !8218
  br i1 %tobool87, label %if.then88, label %if.else101, !dbg !8219

if.then88:                                        ; preds = %land.lhs.true86
  %87 = load i8*, i8** %ctile, align 8, !dbg !8220
  store i8 1, i8* %87, align 1, !dbg !8222
  %88 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !8223
  %call89 = call i8* %88(i64 260, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.14, i64 0, i64 0)), !dbg !8223
  %89 = ptrtoint i8* %call89 to i64, !dbg !8224
  %90 = load i64*, i64** %ztile, align 8, !dbg !8225
  store i64 %89, i64* %90, align 8, !dbg !8226
  %91 = load i64*, i64** %ztile, align 8, !dbg !8227
  %92 = load i64, i64* %91, align 8, !dbg !8228
  %93 = inttoptr i64 %92 to i32*, !dbg !8229
  store i32* %93, i32** %rz, align 8, !dbg !8230
  %94 = load i32*, i32** %rz1, align 8, !dbg !8231
  %95 = load i32, i32* %94, align 4, !dbg !8232
  %96 = load i32*, i32** %rz, align 8, !dbg !8233
  store i32 %95, i32* %96, align 4, !dbg !8234
  %97 = load i32*, i32** %rz, align 8, !dbg !8235
  %add.ptr90 = getelementptr inbounds i32, i32* %97, i64 1, !dbg !8236
  %98 = bitcast i32* %add.ptr90 to i8*, !dbg !8237
  store i8* %98, i8** %zt, align 8, !dbg !8238
  %99 = load i8*, i8** %rcline, align 8, !dbg !8239
  store i8* %99, i8** %rc, align 8, !dbg !8240
  store i32 0, i32* %a, align 4, !dbg !8241
  br label %for.cond91, !dbg !8243

for.cond91:                                       ; preds = %for.inc96, %if.then88
  %100 = load i32, i32* %a, align 4, !dbg !8244
  %cmp92 = icmp slt i32 %100, 256, !dbg !8246
  br i1 %cmp92, label %for.body94, label %for.end100, !dbg !8247

for.body94:                                       ; preds = %for.cond91
  %101 = load i8*, i8** %rc, align 8, !dbg !8248
  %arrayidx95 = getelementptr inbounds i8, i8* %101, i64 1, !dbg !8248
  %102 = load i8, i8* %arrayidx95, align 1, !dbg !8248
  %103 = load i8*, i8** %zt, align 8, !dbg !8249
  store i8 %102, i8* %103, align 1, !dbg !8250
  br label %for.inc96, !dbg !8251

for.inc96:                                        ; preds = %for.body94
  %104 = load i32, i32* %a, align 4, !dbg !8252
  %inc97 = add nsw i32 %104, 1, !dbg !8252
  store i32 %inc97, i32* %a, align 4, !dbg !8252
  %105 = load i8*, i8** %zt, align 8, !dbg !8253
  %incdec.ptr98 = getelementptr inbounds i8, i8* %105, i32 1, !dbg !8253
  store i8* %incdec.ptr98, i8** %zt, align 8, !dbg !8253
  %106 = load i8*, i8** %rc, align 8, !dbg !8254
  %add.ptr99 = getelementptr inbounds i8, i8* %106, i64 4, !dbg !8254
  store i8* %add.ptr99, i8** %rc, align 8, !dbg !8254
  br label %for.cond91, !dbg !8255, !llvm.loop !8256

for.end100:                                       ; preds = %for.cond91
  br label %if.end137, !dbg !8258

if.else101:                                       ; preds = %land.lhs.true86, %for.end85
  %107 = load i32, i32* %byt1, align 4, !dbg !8259
  %tobool102 = icmp ne i32 %107, 0, !dbg !8259
  br i1 %tobool102, label %if.then103, label %if.else119, !dbg !8261

if.then103:                                       ; preds = %if.else101
  %108 = load i8*, i8** %ctile, align 8, !dbg !8262
  store i8 2, i8* %108, align 1, !dbg !8264
  %109 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !8265
  %call104 = call i8* %109(i64 516, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.15, i64 0, i64 0)), !dbg !8265
  %110 = ptrtoint i8* %call104 to i64, !dbg !8266
  %111 = load i64*, i64** %ztile, align 8, !dbg !8267
  store i64 %110, i64* %111, align 8, !dbg !8268
  %112 = load i64*, i64** %ztile, align 8, !dbg !8269
  %113 = load i64, i64* %112, align 8, !dbg !8270
  %114 = inttoptr i64 %113 to i32*, !dbg !8271
  store i32* %114, i32** %rz, align 8, !dbg !8272
  %115 = load i32*, i32** %rz1, align 8, !dbg !8273
  %116 = load i32, i32* %115, align 4, !dbg !8274
  %117 = load i32*, i32** %rz, align 8, !dbg !8275
  store i32 %116, i32* %117, align 4, !dbg !8276
  %118 = load i32*, i32** %rz, align 8, !dbg !8277
  %add.ptr105 = getelementptr inbounds i32, i32* %118, i64 1, !dbg !8278
  %119 = bitcast i32* %add.ptr105 to i8*, !dbg !8279
  store i8* %119, i8** %zt, align 8, !dbg !8280
  %120 = load i8*, i8** %rcline, align 8, !dbg !8281
  store i8* %120, i8** %rc, align 8, !dbg !8282
  store i32 0, i32* %a, align 4, !dbg !8283
  br label %for.cond106, !dbg !8285

for.cond106:                                      ; preds = %for.inc114, %if.then103
  %121 = load i32, i32* %a, align 4, !dbg !8286
  %cmp107 = icmp slt i32 %121, 256, !dbg !8288
  br i1 %cmp107, label %for.body109, label %for.end118, !dbg !8289

for.body109:                                      ; preds = %for.cond106
  %122 = load i8*, i8** %rc, align 8, !dbg !8290
  %arrayidx110 = getelementptr inbounds i8, i8* %122, i64 2, !dbg !8290
  %123 = load i8, i8* %arrayidx110, align 1, !dbg !8290
  %124 = load i8*, i8** %zt, align 8, !dbg !8292
  %arrayidx111 = getelementptr inbounds i8, i8* %124, i64 0, !dbg !8292
  store i8 %123, i8* %arrayidx111, align 1, !dbg !8293
  %125 = load i8*, i8** %rc, align 8, !dbg !8294
  %arrayidx112 = getelementptr inbounds i8, i8* %125, i64 1, !dbg !8294
  %126 = load i8, i8* %arrayidx112, align 1, !dbg !8294
  %127 = load i8*, i8** %zt, align 8, !dbg !8295
  %arrayidx113 = getelementptr inbounds i8, i8* %127, i64 1, !dbg !8295
  store i8 %126, i8* %arrayidx113, align 1, !dbg !8296
  br label %for.inc114, !dbg !8297

for.inc114:                                       ; preds = %for.body109
  %128 = load i32, i32* %a, align 4, !dbg !8298
  %inc115 = add nsw i32 %128, 1, !dbg !8298
  store i32 %inc115, i32* %a, align 4, !dbg !8298
  %129 = load i8*, i8** %zt, align 8, !dbg !8299
  %add.ptr116 = getelementptr inbounds i8, i8* %129, i64 2, !dbg !8299
  store i8* %add.ptr116, i8** %zt, align 8, !dbg !8299
  %130 = load i8*, i8** %rc, align 8, !dbg !8300
  %add.ptr117 = getelementptr inbounds i8, i8* %130, i64 4, !dbg !8300
  store i8* %add.ptr117, i8** %rc, align 8, !dbg !8300
  br label %for.cond106, !dbg !8301, !llvm.loop !8302

for.end118:                                       ; preds = %for.cond106
  br label %if.end136, !dbg !8304

if.else119:                                       ; preds = %if.else101
  %131 = load i8*, i8** %ctile, align 8, !dbg !8305
  store i8 3, i8* %131, align 1, !dbg !8307
  %132 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !8308
  %call120 = call i8* %132(i64 768, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.16, i64 0, i64 0)), !dbg !8308
  %133 = ptrtoint i8* %call120 to i64, !dbg !8309
  %134 = load i64*, i64** %ztile, align 8, !dbg !8310
  store i64 %133, i64* %134, align 8, !dbg !8311
  %135 = load i64*, i64** %ztile, align 8, !dbg !8312
  %136 = load i64, i64* %135, align 8, !dbg !8313
  %137 = inttoptr i64 %136 to i8*, !dbg !8314
  store i8* %137, i8** %zt, align 8, !dbg !8315
  %138 = load i8*, i8** %rcline, align 8, !dbg !8316
  store i8* %138, i8** %rc, align 8, !dbg !8317
  store i32 0, i32* %a, align 4, !dbg !8318
  br label %for.cond121, !dbg !8320

for.cond121:                                      ; preds = %for.inc131, %if.else119
  %139 = load i32, i32* %a, align 4, !dbg !8321
  %cmp122 = icmp slt i32 %139, 256, !dbg !8323
  br i1 %cmp122, label %for.body124, label %for.end135, !dbg !8324

for.body124:                                      ; preds = %for.cond121
  %140 = load i8*, i8** %rc, align 8, !dbg !8325
  %arrayidx125 = getelementptr inbounds i8, i8* %140, i64 3, !dbg !8325
  %141 = load i8, i8* %arrayidx125, align 1, !dbg !8325
  %142 = load i8*, i8** %zt, align 8, !dbg !8327
  %arrayidx126 = getelementptr inbounds i8, i8* %142, i64 0, !dbg !8327
  store i8 %141, i8* %arrayidx126, align 1, !dbg !8328
  %143 = load i8*, i8** %rc, align 8, !dbg !8329
  %arrayidx127 = getelementptr inbounds i8, i8* %143, i64 2, !dbg !8329
  %144 = load i8, i8* %arrayidx127, align 1, !dbg !8329
  %145 = load i8*, i8** %zt, align 8, !dbg !8330
  %arrayidx128 = getelementptr inbounds i8, i8* %145, i64 1, !dbg !8330
  store i8 %144, i8* %arrayidx128, align 1, !dbg !8331
  %146 = load i8*, i8** %rc, align 8, !dbg !8332
  %arrayidx129 = getelementptr inbounds i8, i8* %146, i64 1, !dbg !8332
  %147 = load i8, i8* %arrayidx129, align 1, !dbg !8332
  %148 = load i8*, i8** %zt, align 8, !dbg !8333
  %arrayidx130 = getelementptr inbounds i8, i8* %148, i64 2, !dbg !8333
  store i8 %147, i8* %arrayidx130, align 1, !dbg !8334
  br label %for.inc131, !dbg !8335

for.inc131:                                       ; preds = %for.body124
  %149 = load i32, i32* %a, align 4, !dbg !8336
  %inc132 = add nsw i32 %149, 1, !dbg !8336
  store i32 %inc132, i32* %a, align 4, !dbg !8336
  %150 = load i8*, i8** %zt, align 8, !dbg !8337
  %add.ptr133 = getelementptr inbounds i8, i8* %150, i64 3, !dbg !8337
  store i8* %add.ptr133, i8** %zt, align 8, !dbg !8337
  %151 = load i8*, i8** %rc, align 8, !dbg !8338
  %add.ptr134 = getelementptr inbounds i8, i8* %151, i64 4, !dbg !8338
  store i8* %add.ptr134, i8** %rc, align 8, !dbg !8338
  br label %for.cond121, !dbg !8339, !llvm.loop !8340

for.end135:                                       ; preds = %for.cond121
  br label %if.end136

if.end136:                                        ; preds = %for.end135, %for.end118
  br label %if.end137

if.end137:                                        ; preds = %if.end136, %for.end100
  br label %if.end138

if.end138:                                        ; preds = %if.end137, %if.then56
  %152 = load i64*, i64** %ztile, align 8, !dbg !8342
  %incdec.ptr139 = getelementptr inbounds i64, i64* %152, i32 1, !dbg !8342
  store i64* %incdec.ptr139, i64** %ztile, align 8, !dbg !8342
  %153 = load i8*, i8** %ctile, align 8, !dbg !8343
  %incdec.ptr140 = getelementptr inbounds i8, i8* %153, i32 1, !dbg !8343
  store i8* %incdec.ptr140, i8** %ctile, align 8, !dbg !8343
  br label %for.inc141, !dbg !8344

for.inc141:                                       ; preds = %if.end138
  %154 = load i32, i32* %x, align 4, !dbg !8345
  %add142 = add nsw i32 %154, 16, !dbg !8345
  store i32 %add142, i32* %x, align 4, !dbg !8345
  br label %for.cond18, !dbg !8346, !llvm.loop !8347

for.end143:                                       ; preds = %for.cond18
  br label %for.inc144, !dbg !8349

for.inc144:                                       ; preds = %for.end143
  %155 = load i32, i32* %y, align 4, !dbg !8350
  %add145 = add nsw i32 %155, 16, !dbg !8350
  store i32 %add145, i32* %y, align 4, !dbg !8350
  br label %for.cond, !dbg !8351, !llvm.loop !8352

for.end146:                                       ; preds = %for.cond
  %156 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !8354
  %157 = load i8*, i8** %rcline, align 8, !dbg !8355
  call void %156(i8* %157), !dbg !8354
  ret void, !dbg !8356
}

; Function Attrs: noinline nounwind uwtable
define internal void @copy_to_ztile(i32* %rectz, i32 %size, i32 %x1, i32 %y1, i32 %tile, i8* %r1) #0 !dbg !8357 {
entry:
  %rectz.addr = alloca i32*, align 8
  %size.addr = alloca i32, align 4
  %x1.addr = alloca i32, align 4
  %y1.addr = alloca i32, align 4
  %tile.addr = alloca i32, align 4
  %r1.addr = alloca i8*, align 8
  %len4 = alloca i32, align 4
  %rz = alloca i32*, align 8
  %x2 = alloca i32, align 4
  %y2 = alloca i32, align 4
  store i32* %rectz, i32** %rectz.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %rectz.addr, metadata !8360, metadata !DIExpression()), !dbg !8361
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !8362, metadata !DIExpression()), !dbg !8363
  store i32 %x1, i32* %x1.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x1.addr, metadata !8364, metadata !DIExpression()), !dbg !8365
  store i32 %y1, i32* %y1.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %y1.addr, metadata !8366, metadata !DIExpression()), !dbg !8367
  store i32 %tile, i32* %tile.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %tile.addr, metadata !8368, metadata !DIExpression()), !dbg !8369
  store i8* %r1, i8** %r1.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %r1.addr, metadata !8370, metadata !DIExpression()), !dbg !8371
  call void @llvm.dbg.declare(metadata i32* %len4, metadata !8372, metadata !DIExpression()), !dbg !8373
  call void @llvm.dbg.declare(metadata i32** %rz, metadata !8374, metadata !DIExpression()), !dbg !8375
  call void @llvm.dbg.declare(metadata i32* %x2, metadata !8376, metadata !DIExpression()), !dbg !8377
  call void @llvm.dbg.declare(metadata i32* %y2, metadata !8378, metadata !DIExpression()), !dbg !8379
  %0 = load i32, i32* %x1.addr, align 4, !dbg !8380
  %1 = load i32, i32* %tile.addr, align 4, !dbg !8381
  %add = add nsw i32 %0, %1, !dbg !8382
  store i32 %add, i32* %x2, align 4, !dbg !8383
  %2 = load i32, i32* %y1.addr, align 4, !dbg !8384
  %3 = load i32, i32* %tile.addr, align 4, !dbg !8385
  %add1 = add nsw i32 %2, %3, !dbg !8386
  store i32 %add1, i32* %y2, align 4, !dbg !8387
  %4 = load i32, i32* %x2, align 4, !dbg !8388
  %5 = load i32, i32* %size.addr, align 4, !dbg !8390
  %cmp = icmp sge i32 %4, %5, !dbg !8391
  br i1 %cmp, label %if.then, label %if.end, !dbg !8392

if.then:                                          ; preds = %entry
  %6 = load i32, i32* %size.addr, align 4, !dbg !8393
  %sub = sub nsw i32 %6, 1, !dbg !8394
  store i32 %sub, i32* %x2, align 4, !dbg !8395
  br label %if.end, !dbg !8396

if.end:                                           ; preds = %if.then, %entry
  %7 = load i32, i32* %y2, align 4, !dbg !8397
  %8 = load i32, i32* %size.addr, align 4, !dbg !8399
  %cmp2 = icmp sge i32 %7, %8, !dbg !8400
  br i1 %cmp2, label %if.then3, label %if.end5, !dbg !8401

if.then3:                                         ; preds = %if.end
  %9 = load i32, i32* %size.addr, align 4, !dbg !8402
  %sub4 = sub nsw i32 %9, 1, !dbg !8403
  store i32 %sub4, i32* %y2, align 4, !dbg !8404
  br label %if.end5, !dbg !8405

if.end5:                                          ; preds = %if.then3, %if.end
  %10 = load i32, i32* %x1.addr, align 4, !dbg !8406
  %11 = load i32, i32* %x2, align 4, !dbg !8408
  %cmp6 = icmp sge i32 %10, %11, !dbg !8409
  br i1 %cmp6, label %if.then8, label %lor.lhs.false, !dbg !8410

lor.lhs.false:                                    ; preds = %if.end5
  %12 = load i32, i32* %y1.addr, align 4, !dbg !8411
  %13 = load i32, i32* %y2, align 4, !dbg !8412
  %cmp7 = icmp sge i32 %12, %13, !dbg !8413
  br i1 %cmp7, label %if.then8, label %if.end9, !dbg !8414

if.then8:                                         ; preds = %lor.lhs.false, %if.end5
  br label %for.end, !dbg !8415

if.end9:                                          ; preds = %lor.lhs.false
  %14 = load i32, i32* %x2, align 4, !dbg !8416
  %15 = load i32, i32* %x1.addr, align 4, !dbg !8417
  %sub10 = sub nsw i32 %14, %15, !dbg !8418
  %mul = mul nsw i32 4, %sub10, !dbg !8419
  store i32 %mul, i32* %len4, align 4, !dbg !8420
  %16 = load i32*, i32** %rectz.addr, align 8, !dbg !8421
  %17 = load i32, i32* %size.addr, align 4, !dbg !8422
  %18 = load i32, i32* %y1.addr, align 4, !dbg !8423
  %mul11 = mul nsw i32 %17, %18, !dbg !8424
  %idx.ext = sext i32 %mul11 to i64, !dbg !8425
  %add.ptr = getelementptr inbounds i32, i32* %16, i64 %idx.ext, !dbg !8425
  %19 = load i32, i32* %x1.addr, align 4, !dbg !8426
  %idx.ext12 = sext i32 %19 to i64, !dbg !8427
  %add.ptr13 = getelementptr inbounds i32, i32* %add.ptr, i64 %idx.ext12, !dbg !8427
  store i32* %add.ptr13, i32** %rz, align 8, !dbg !8428
  br label %for.cond, !dbg !8429

for.cond:                                         ; preds = %for.inc, %if.end9
  %20 = load i32, i32* %y1.addr, align 4, !dbg !8430
  %21 = load i32, i32* %y2, align 4, !dbg !8433
  %cmp14 = icmp slt i32 %20, %21, !dbg !8434
  br i1 %cmp14, label %for.body, label %for.end, !dbg !8435

for.body:                                         ; preds = %for.cond
  %22 = load i8*, i8** %r1.addr, align 8, !dbg !8436
  %23 = load i32*, i32** %rz, align 8, !dbg !8438
  %24 = bitcast i32* %23 to i8*, !dbg !8439
  %25 = load i32, i32* %len4, align 4, !dbg !8440
  %conv = sext i32 %25 to i64, !dbg !8440
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %22, i8* align 4 %24, i64 %conv, i1 false), !dbg !8439
  %26 = load i32, i32* %size.addr, align 4, !dbg !8441
  %27 = load i32*, i32** %rz, align 8, !dbg !8442
  %idx.ext15 = sext i32 %26 to i64, !dbg !8442
  %add.ptr16 = getelementptr inbounds i32, i32* %27, i64 %idx.ext15, !dbg !8442
  store i32* %add.ptr16, i32** %rz, align 8, !dbg !8442
  %28 = load i32, i32* %len4, align 4, !dbg !8443
  %29 = load i8*, i8** %r1.addr, align 8, !dbg !8444
  %idx.ext17 = sext i32 %28 to i64, !dbg !8444
  %add.ptr18 = getelementptr inbounds i8, i8* %29, i64 %idx.ext17, !dbg !8444
  store i8* %add.ptr18, i8** %r1.addr, align 8, !dbg !8444
  br label %for.inc, !dbg !8445

for.inc:                                          ; preds = %for.body
  %30 = load i32, i32* %y1.addr, align 4, !dbg !8446
  %inc = add nsw i32 %30, 1, !dbg !8446
  store i32 %inc, i32* %y1.addr, align 4, !dbg !8446
  br label %for.cond, !dbg !8447, !llvm.loop !8448

for.end:                                          ; preds = %if.then8, %for.cond
  ret void, !dbg !8450
}

; Function Attrs: noinline nounwind uwtable
define internal float @readdeepshadowbuf(%struct.ShadBuf* %shb, %struct.ShadSampleBuf* %shsample, i32 %bias, i32 %xs, i32 %ys, i32 %zs) #0 !dbg !8451 {
entry:
  %retval = alloca float, align 4
  %shb.addr = alloca %struct.ShadBuf*, align 8
  %shsample.addr = alloca %struct.ShadSampleBuf*, align 8
  %bias.addr = alloca i32, align 4
  %xs.addr = alloca i32, align 4
  %ys.addr = alloca i32, align 4
  %zs.addr = alloca i32, align 4
  %v = alloca float, align 4
  %biasv = alloca float, align 4
  %biast = alloca float, align 4
  %ofs = alloca i32, align 4
  %tot = alloca i32, align 4
  store %struct.ShadBuf* %shb, %struct.ShadBuf** %shb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ShadBuf** %shb.addr, metadata !8452, metadata !DIExpression()), !dbg !8453
  store %struct.ShadSampleBuf* %shsample, %struct.ShadSampleBuf** %shsample.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ShadSampleBuf** %shsample.addr, metadata !8454, metadata !DIExpression()), !dbg !8455
  store i32 %bias, i32* %bias.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bias.addr, metadata !8456, metadata !DIExpression()), !dbg !8457
  store i32 %xs, i32* %xs.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %xs.addr, metadata !8458, metadata !DIExpression()), !dbg !8459
  store i32 %ys, i32* %ys.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ys.addr, metadata !8460, metadata !DIExpression()), !dbg !8461
  store i32 %zs, i32* %zs.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %zs.addr, metadata !8462, metadata !DIExpression()), !dbg !8463
  call void @llvm.dbg.declare(metadata float* %v, metadata !8464, metadata !DIExpression()), !dbg !8465
  call void @llvm.dbg.declare(metadata float* %biasv, metadata !8466, metadata !DIExpression()), !dbg !8467
  call void @llvm.dbg.declare(metadata float* %biast, metadata !8468, metadata !DIExpression()), !dbg !8469
  call void @llvm.dbg.declare(metadata i32* %ofs, metadata !8470, metadata !DIExpression()), !dbg !8471
  call void @llvm.dbg.declare(metadata i32* %tot, metadata !8472, metadata !DIExpression()), !dbg !8473
  %0 = load i32, i32* %zs.addr, align 4, !dbg !8474
  %1 = load i32, i32* %bias.addr, align 4, !dbg !8476
  %add = add nsw i32 -2147483136, %1, !dbg !8477
  %cmp = icmp slt i32 %0, %add, !dbg !8478
  br i1 %cmp, label %if.then, label %if.end, !dbg !8479

if.then:                                          ; preds = %entry
  store float 1.000000e+00, float* %retval, align 4, !dbg !8480
  br label %return, !dbg !8480

if.end:                                           ; preds = %entry
  %2 = load i32, i32* %ys.addr, align 4, !dbg !8481
  %3 = load %struct.ShadBuf*, %struct.ShadBuf** %shb.addr, align 8, !dbg !8482
  %size = getelementptr inbounds %struct.ShadBuf, %struct.ShadBuf* %3, i32 0, i32 14, !dbg !8483
  %4 = load i32, i32* %size, align 8, !dbg !8483
  %mul = mul nsw i32 %2, %4, !dbg !8484
  %5 = load i32, i32* %xs.addr, align 4, !dbg !8485
  %add1 = add nsw i32 %mul, %5, !dbg !8486
  store i32 %add1, i32* %ofs, align 4, !dbg !8487
  %6 = load %struct.ShadSampleBuf*, %struct.ShadSampleBuf** %shsample.addr, align 8, !dbg !8488
  %totbuf = getelementptr inbounds %struct.ShadSampleBuf, %struct.ShadSampleBuf* %6, i32 0, i32 5, !dbg !8489
  %7 = load i32*, i32** %totbuf, align 8, !dbg !8489
  %8 = load i32, i32* %ofs, align 4, !dbg !8490
  %idxprom = sext i32 %8 to i64, !dbg !8488
  %arrayidx = getelementptr inbounds i32, i32* %7, i64 %idxprom, !dbg !8488
  %9 = load i32, i32* %arrayidx, align 4, !dbg !8488
  store i32 %9, i32* %tot, align 4, !dbg !8491
  %10 = load i32, i32* %tot, align 4, !dbg !8492
  %cmp2 = icmp eq i32 %10, 0, !dbg !8494
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !8495

if.then3:                                         ; preds = %if.end
  store float 1.000000e+00, float* %retval, align 4, !dbg !8496
  br label %return, !dbg !8496

if.end4:                                          ; preds = %if.end
  %11 = load %struct.ShadSampleBuf*, %struct.ShadSampleBuf** %shsample.addr, align 8, !dbg !8497
  %deepbuf = getelementptr inbounds %struct.ShadSampleBuf, %struct.ShadSampleBuf* %11, i32 0, i32 4, !dbg !8498
  %12 = load %struct.DeepSample**, %struct.DeepSample*** %deepbuf, align 8, !dbg !8498
  %13 = load i32, i32* %ofs, align 4, !dbg !8499
  %idxprom5 = sext i32 %13 to i64, !dbg !8497
  %arrayidx6 = getelementptr inbounds %struct.DeepSample*, %struct.DeepSample** %12, i64 %idxprom5, !dbg !8497
  %14 = load %struct.DeepSample*, %struct.DeepSample** %arrayidx6, align 8, !dbg !8497
  %15 = load i32, i32* %tot, align 4, !dbg !8500
  %16 = load i32, i32* %zs.addr, align 4, !dbg !8501
  %17 = load i32, i32* %bias.addr, align 4, !dbg !8502
  %call = call float @readdeepvisibility(%struct.DeepSample* %14, i32 %15, i32 %16, i32 %17, float* %biast), !dbg !8503
  store float %call, float* %v, align 4, !dbg !8504
  %18 = load float, float* %biast, align 4, !dbg !8505
  %cmp7 = fcmp une float %18, 0.000000e+00, !dbg !8507
  br i1 %cmp7, label %if.then8, label %if.end17, !dbg !8508

if.then8:                                         ; preds = %if.end4
  %19 = load %struct.ShadSampleBuf*, %struct.ShadSampleBuf** %shsample.addr, align 8, !dbg !8509
  %deepbuf9 = getelementptr inbounds %struct.ShadSampleBuf, %struct.ShadSampleBuf* %19, i32 0, i32 4, !dbg !8511
  %20 = load %struct.DeepSample**, %struct.DeepSample*** %deepbuf9, align 8, !dbg !8511
  %21 = load i32, i32* %ofs, align 4, !dbg !8512
  %idxprom10 = sext i32 %21 to i64, !dbg !8509
  %arrayidx11 = getelementptr inbounds %struct.DeepSample*, %struct.DeepSample** %20, i64 %idxprom10, !dbg !8509
  %22 = load %struct.DeepSample*, %struct.DeepSample** %arrayidx11, align 8, !dbg !8509
  %23 = load i32, i32* %tot, align 4, !dbg !8513
  %24 = load i32, i32* %zs.addr, align 4, !dbg !8514
  %call12 = call float @readdeepvisibility(%struct.DeepSample* %22, i32 %23, i32 %24, i32 0, float* null), !dbg !8515
  store float %call12, float* %biasv, align 4, !dbg !8516
  %25 = load float, float* %biast, align 4, !dbg !8517
  %26 = load float, float* %biast, align 4, !dbg !8518
  %mul13 = fmul float %25, %26, !dbg !8519
  store float %mul13, float* %biast, align 4, !dbg !8520
  %27 = load float, float* %biast, align 4, !dbg !8521
  %sub = fsub float 1.000000e+00, %27, !dbg !8522
  %28 = load float, float* %v, align 4, !dbg !8523
  %mul14 = fmul float %sub, %28, !dbg !8524
  %29 = load float, float* %biast, align 4, !dbg !8525
  %30 = load float, float* %biasv, align 4, !dbg !8526
  %mul15 = fmul float %29, %30, !dbg !8527
  %add16 = fadd float %mul14, %mul15, !dbg !8528
  store float %add16, float* %retval, align 4, !dbg !8529
  br label %return, !dbg !8529

if.end17:                                         ; preds = %if.end4
  %31 = load float, float* %v, align 4, !dbg !8530
  store float %31, float* %retval, align 4, !dbg !8531
  br label %return, !dbg !8531

return:                                           ; preds = %if.end17, %if.then8, %if.then3, %if.then
  %32 = load float, float* %retval, align 4, !dbg !8532
  ret float %32, !dbg !8532
}

; Function Attrs: noinline nounwind uwtable
define internal float @readdeepvisibility(%struct.DeepSample* %dsample, i32 %tot, i32 %z, i32 %bias, float* %biast) #0 !dbg !8533 {
entry:
  %retval = alloca float, align 4
  %dsample.addr = alloca %struct.DeepSample*, align 8
  %tot.addr = alloca i32, align 4
  %z.addr = alloca i32, align 4
  %bias.addr = alloca i32, align 4
  %biast.addr = alloca float*, align 8
  %ds = alloca %struct.DeepSample*, align 8
  %prevds = alloca %struct.DeepSample*, align 8
  %t = alloca float, align 4
  %a = alloca i32, align 4
  store %struct.DeepSample* %dsample, %struct.DeepSample** %dsample.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DeepSample** %dsample.addr, metadata !8536, metadata !DIExpression()), !dbg !8537
  store i32 %tot, i32* %tot.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %tot.addr, metadata !8538, metadata !DIExpression()), !dbg !8539
  store i32 %z, i32* %z.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %z.addr, metadata !8540, metadata !DIExpression()), !dbg !8541
  store i32 %bias, i32* %bias.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bias.addr, metadata !8542, metadata !DIExpression()), !dbg !8543
  store float* %biast, float** %biast.addr, align 8
  call void @llvm.dbg.declare(metadata float** %biast.addr, metadata !8544, metadata !DIExpression()), !dbg !8545
  call void @llvm.dbg.declare(metadata %struct.DeepSample** %ds, metadata !8546, metadata !DIExpression()), !dbg !8547
  call void @llvm.dbg.declare(metadata %struct.DeepSample** %prevds, metadata !8548, metadata !DIExpression()), !dbg !8549
  call void @llvm.dbg.declare(metadata float* %t, metadata !8550, metadata !DIExpression()), !dbg !8551
  call void @llvm.dbg.declare(metadata i32* %a, metadata !8552, metadata !DIExpression()), !dbg !8553
  %0 = load %struct.DeepSample*, %struct.DeepSample** %dsample.addr, align 8, !dbg !8554
  store %struct.DeepSample* %0, %struct.DeepSample** %ds, align 8, !dbg !8555
  store i32 0, i32* %a, align 4, !dbg !8556
  br label %for.cond, !dbg !8558

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i32, i32* %a, align 4, !dbg !8559
  %2 = load i32, i32* %tot.addr, align 4, !dbg !8561
  %cmp = icmp slt i32 %1, %2, !dbg !8562
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !8563

land.rhs:                                         ; preds = %for.cond
  %3 = load i32, i32* %z.addr, align 4, !dbg !8564
  %4 = load i32, i32* %bias.addr, align 4, !dbg !8565
  %sub = sub nsw i32 %3, %4, !dbg !8566
  %5 = load %struct.DeepSample*, %struct.DeepSample** %ds, align 8, !dbg !8567
  %z1 = getelementptr inbounds %struct.DeepSample, %struct.DeepSample* %5, i32 0, i32 0, !dbg !8568
  %6 = load i32, i32* %z1, align 4, !dbg !8568
  %cmp2 = icmp sgt i32 %sub, %6, !dbg !8569
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond
  %7 = phi i1 [ false, %for.cond ], [ %cmp2, %land.rhs ], !dbg !8570
  br i1 %7, label %for.body, label %for.end, !dbg !8571

for.body:                                         ; preds = %land.end
  br label %for.inc, !dbg !8572

for.inc:                                          ; preds = %for.body
  %8 = load i32, i32* %a, align 4, !dbg !8574
  %inc = add nsw i32 %8, 1, !dbg !8574
  store i32 %inc, i32* %a, align 4, !dbg !8574
  %9 = load %struct.DeepSample*, %struct.DeepSample** %ds, align 8, !dbg !8575
  %incdec.ptr = getelementptr inbounds %struct.DeepSample, %struct.DeepSample* %9, i32 1, !dbg !8575
  store %struct.DeepSample* %incdec.ptr, %struct.DeepSample** %ds, align 8, !dbg !8575
  br label %for.cond, !dbg !8576, !llvm.loop !8577

for.end:                                          ; preds = %land.end
  %10 = load i32, i32* %a, align 4, !dbg !8579
  %11 = load i32, i32* %tot.addr, align 4, !dbg !8581
  %cmp3 = icmp eq i32 %10, %11, !dbg !8582
  br i1 %cmp3, label %if.then, label %if.end5, !dbg !8583

if.then:                                          ; preds = %for.end
  %12 = load float*, float** %biast.addr, align 8, !dbg !8584
  %tobool = icmp ne float* %12, null, !dbg !8584
  br i1 %tobool, label %if.then4, label %if.end, !dbg !8587

if.then4:                                         ; preds = %if.then
  %13 = load float*, float** %biast.addr, align 8, !dbg !8588
  store float 0.000000e+00, float* %13, align 4, !dbg !8589
  br label %if.end, !dbg !8590

if.end:                                           ; preds = %if.then4, %if.then
  %14 = load %struct.DeepSample*, %struct.DeepSample** %ds, align 8, !dbg !8591
  %add.ptr = getelementptr inbounds %struct.DeepSample, %struct.DeepSample* %14, i64 -1, !dbg !8592
  %v = getelementptr inbounds %struct.DeepSample, %struct.DeepSample* %add.ptr, i32 0, i32 1, !dbg !8593
  %15 = load float, float* %v, align 4, !dbg !8593
  store float %15, float* %retval, align 4, !dbg !8594
  br label %return, !dbg !8594

if.end5:                                          ; preds = %for.end
  %16 = load float*, float** %biast.addr, align 8, !dbg !8595
  %tobool6 = icmp ne float* %16, null, !dbg !8595
  br i1 %tobool6, label %if.then7, label %if.end15, !dbg !8597

if.then7:                                         ; preds = %if.end5
  %17 = load i32, i32* %z.addr, align 4, !dbg !8598
  %18 = load %struct.DeepSample*, %struct.DeepSample** %ds, align 8, !dbg !8601
  %z8 = getelementptr inbounds %struct.DeepSample, %struct.DeepSample* %18, i32 0, i32 0, !dbg !8602
  %19 = load i32, i32* %z8, align 4, !dbg !8602
  %cmp9 = icmp sgt i32 %17, %19, !dbg !8603
  br i1 %cmp9, label %if.then10, label %if.else, !dbg !8604

if.then10:                                        ; preds = %if.then7
  %20 = load i32, i32* %z.addr, align 4, !dbg !8605
  %21 = load %struct.DeepSample*, %struct.DeepSample** %ds, align 8, !dbg !8606
  %z11 = getelementptr inbounds %struct.DeepSample, %struct.DeepSample* %21, i32 0, i32 0, !dbg !8607
  %22 = load i32, i32* %z11, align 4, !dbg !8607
  %sub12 = sub nsw i32 %20, %22, !dbg !8608
  %conv = sitofp i32 %sub12 to float, !dbg !8609
  %23 = load i32, i32* %bias.addr, align 4, !dbg !8610
  %conv13 = sitofp i32 %23 to float, !dbg !8611
  %div = fdiv float %conv, %conv13, !dbg !8612
  %24 = load float*, float** %biast.addr, align 8, !dbg !8613
  store float %div, float* %24, align 4, !dbg !8614
  br label %if.end14, !dbg !8615

if.else:                                          ; preds = %if.then7
  %25 = load float*, float** %biast.addr, align 8, !dbg !8616
  store float 0.000000e+00, float* %25, align 4, !dbg !8617
  br label %if.end14

if.end14:                                         ; preds = %if.else, %if.then10
  br label %if.end15, !dbg !8618

if.end15:                                         ; preds = %if.end14, %if.end5
  %26 = load i32, i32* %a, align 4, !dbg !8619
  %cmp16 = icmp eq i32 %26, 0, !dbg !8621
  br i1 %cmp16, label %if.then18, label %if.end19, !dbg !8622

if.then18:                                        ; preds = %if.end15
  store float 1.000000e+00, float* %retval, align 4, !dbg !8623
  br label %return, !dbg !8623

if.end19:                                         ; preds = %if.end15
  %27 = load %struct.DeepSample*, %struct.DeepSample** %ds, align 8, !dbg !8624
  %add.ptr20 = getelementptr inbounds %struct.DeepSample, %struct.DeepSample* %27, i64 -1, !dbg !8625
  store %struct.DeepSample* %add.ptr20, %struct.DeepSample** %prevds, align 8, !dbg !8626
  %28 = load i32, i32* %z.addr, align 4, !dbg !8627
  %29 = load i32, i32* %bias.addr, align 4, !dbg !8628
  %sub21 = sub nsw i32 %28, %29, !dbg !8629
  %conv22 = sitofp i32 %sub21 to float, !dbg !8630
  %30 = load %struct.DeepSample*, %struct.DeepSample** %prevds, align 8, !dbg !8631
  %z23 = getelementptr inbounds %struct.DeepSample, %struct.DeepSample* %30, i32 0, i32 0, !dbg !8632
  %31 = load i32, i32* %z23, align 4, !dbg !8632
  %conv24 = sitofp i32 %31 to float, !dbg !8633
  %sub25 = fsub float %conv22, %conv24, !dbg !8634
  %32 = load %struct.DeepSample*, %struct.DeepSample** %ds, align 8, !dbg !8635
  %z26 = getelementptr inbounds %struct.DeepSample, %struct.DeepSample* %32, i32 0, i32 0, !dbg !8636
  %33 = load i32, i32* %z26, align 4, !dbg !8636
  %conv27 = sitofp i32 %33 to float, !dbg !8637
  %34 = load %struct.DeepSample*, %struct.DeepSample** %prevds, align 8, !dbg !8638
  %z28 = getelementptr inbounds %struct.DeepSample, %struct.DeepSample* %34, i32 0, i32 0, !dbg !8639
  %35 = load i32, i32* %z28, align 4, !dbg !8639
  %conv29 = sitofp i32 %35 to float, !dbg !8640
  %sub30 = fsub float %conv27, %conv29, !dbg !8641
  %div31 = fdiv float %sub25, %sub30, !dbg !8642
  store float %div31, float* %t, align 4, !dbg !8643
  %36 = load float, float* %t, align 4, !dbg !8644
  %37 = load %struct.DeepSample*, %struct.DeepSample** %ds, align 8, !dbg !8645
  %v32 = getelementptr inbounds %struct.DeepSample, %struct.DeepSample* %37, i32 0, i32 1, !dbg !8646
  %38 = load float, float* %v32, align 4, !dbg !8646
  %mul = fmul float %36, %38, !dbg !8647
  %39 = load float, float* %t, align 4, !dbg !8648
  %sub33 = fsub float 1.000000e+00, %39, !dbg !8649
  %40 = load %struct.DeepSample*, %struct.DeepSample** %prevds, align 8, !dbg !8650
  %v34 = getelementptr inbounds %struct.DeepSample, %struct.DeepSample* %40, i32 0, i32 1, !dbg !8651
  %41 = load float, float* %v34, align 4, !dbg !8651
  %mul35 = fmul float %sub33, %41, !dbg !8652
  %add = fadd float %mul, %mul35, !dbg !8653
  store float %add, float* %retval, align 4, !dbg !8654
  br label %return, !dbg !8654

return:                                           ; preds = %if.end19, %if.then18, %if.end
  %42 = load float, float* %retval, align 4, !dbg !8655
  ret float %42, !dbg !8655
}

declare dso_local %struct.MemArena* @BLI_memarena_new(i64, i8*) #4

declare dso_local void @BLI_memarena_use_calloc(%struct.MemArena*) #4

; Function Attrs: noinline nounwind uwtable
define internal i32 @viewpixel_to_lampbuf(%struct.ShadBuf* %shb, %struct.ObjectInstanceRen* %obi, %struct.VlakRen* %vlr, float %x, float %y, float* %co_r) #0 !dbg !8656 {
entry:
  %retval = alloca i32, align 4
  %shb.addr = alloca %struct.ShadBuf*, align 8
  %obi.addr = alloca %struct.ObjectInstanceRen*, align 8
  %vlr.addr = alloca %struct.VlakRen*, align 8
  %x.addr = alloca float, align 4
  %y.addr = alloca float, align 4
  %co_r.addr = alloca float*, align 8
  %hoco = alloca [4 x float], align 16
  %v1 = alloca [3 x float], align 4
  %nor = alloca [3 x float], align 4
  %dface = alloca float, align 4
  %fac = alloca float, align 4
  %siz = alloca float, align 4
  %fx = alloca float, align 4
  %fy = alloca float, align 4
  %div45 = alloca float, align 4
  %view = alloca [3 x float], align 4
  store %struct.ShadBuf* %shb, %struct.ShadBuf** %shb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ShadBuf** %shb.addr, metadata !8659, metadata !DIExpression()), !dbg !8660
  store %struct.ObjectInstanceRen* %obi, %struct.ObjectInstanceRen** %obi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ObjectInstanceRen** %obi.addr, metadata !8661, metadata !DIExpression()), !dbg !8662
  store %struct.VlakRen* %vlr, %struct.VlakRen** %vlr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VlakRen** %vlr.addr, metadata !8663, metadata !DIExpression()), !dbg !8664
  store float %x, float* %x.addr, align 4
  call void @llvm.dbg.declare(metadata float* %x.addr, metadata !8665, metadata !DIExpression()), !dbg !8666
  store float %y, float* %y.addr, align 4
  call void @llvm.dbg.declare(metadata float* %y.addr, metadata !8667, metadata !DIExpression()), !dbg !8668
  store float* %co_r, float** %co_r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %co_r.addr, metadata !8669, metadata !DIExpression()), !dbg !8670
  call void @llvm.dbg.declare(metadata [4 x float]* %hoco, metadata !8671, metadata !DIExpression()), !dbg !8672
  call void @llvm.dbg.declare(metadata [3 x float]* %v1, metadata !8673, metadata !DIExpression()), !dbg !8674
  call void @llvm.dbg.declare(metadata [3 x float]* %nor, metadata !8675, metadata !DIExpression()), !dbg !8676
  call void @llvm.dbg.declare(metadata float* %dface, metadata !8677, metadata !DIExpression()), !dbg !8678
  call void @llvm.dbg.declare(metadata float* %fac, metadata !8679, metadata !DIExpression()), !dbg !8680
  call void @llvm.dbg.declare(metadata float* %siz, metadata !8681, metadata !DIExpression()), !dbg !8682
  %0 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi.addr, align 8, !dbg !8683
  %1 = load %struct.VlakRen*, %struct.VlakRen** %vlr.addr, align 8, !dbg !8684
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %nor, i64 0, i64 0, !dbg !8685
  call void @RE_vlakren_get_normal(%struct.Render* @R, %struct.ObjectInstanceRen* %0, %struct.VlakRen* %1, float* %arraydecay), !dbg !8686
  %arraydecay1 = getelementptr inbounds [3 x float], [3 x float]* %v1, i64 0, i64 0, !dbg !8687
  %2 = load %struct.VlakRen*, %struct.VlakRen** %vlr.addr, align 8, !dbg !8688
  %v12 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %2, i32 0, i32 0, !dbg !8689
  %3 = load %struct.VertRen*, %struct.VertRen** %v12, align 8, !dbg !8689
  %co = getelementptr inbounds %struct.VertRen, %struct.VertRen* %3, i32 0, i32 0, !dbg !8690
  %arraydecay3 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !8688
  call void @copy_v3_v3(float* %arraydecay1, float* %arraydecay3), !dbg !8691
  %4 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi.addr, align 8, !dbg !8692
  %flag = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %4, i32 0, i32 11, !dbg !8694
  %5 = load i16, i16* %flag, align 8, !dbg !8694
  %conv = sext i16 %5 to i32, !dbg !8692
  %and = and i32 %conv, 3, !dbg !8695
  %tobool = icmp ne i32 %and, 0, !dbg !8695
  br i1 %tobool, label %if.then, label %if.end, !dbg !8696

if.then:                                          ; preds = %entry
  %6 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi.addr, align 8, !dbg !8697
  %mat = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %6, i32 0, i32 8, !dbg !8698
  %arraydecay4 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %mat, i64 0, i64 0, !dbg !8697
  %arraydecay5 = getelementptr inbounds [3 x float], [3 x float]* %v1, i64 0, i64 0, !dbg !8699
  call void @mul_m4_v3([4 x float]* %arraydecay4, float* %arraydecay5), !dbg !8700
  br label %if.end, !dbg !8700

if.end:                                           ; preds = %if.then, %entry
  %arraydecay6 = getelementptr inbounds [3 x float], [3 x float]* %v1, i64 0, i64 0, !dbg !8701
  %arraydecay7 = getelementptr inbounds [3 x float], [3 x float]* %nor, i64 0, i64 0, !dbg !8702
  %call = call float @dot_v3v3(float* %arraydecay6, float* %arraydecay7), !dbg !8703
  store float %call, float* %dface, align 4, !dbg !8704
  %arrayidx = getelementptr inbounds [4 x float], [4 x float]* %hoco, i64 0, i64 3, !dbg !8705
  store float 1.000000e+00, float* %arrayidx, align 4, !dbg !8706
  %7 = load i32, i32* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 45, i32 47), align 8, !dbg !8707
  %and8 = and i32 %7, 8, !dbg !8709
  %tobool9 = icmp ne i32 %and8, 0, !dbg !8709
  br i1 %tobool9, label %if.then10, label %if.else44, !dbg !8710

if.then10:                                        ; preds = %if.end
  call void @llvm.dbg.declare(metadata float* %fx, metadata !8711, metadata !DIExpression()), !dbg !8713
  %8 = load i32, i32* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 13), align 4, !dbg !8714
  %conv11 = sitofp i32 %8 to float, !dbg !8715
  %9 = load float, float* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 35, i64 0, i64 0), align 8, !dbg !8716
  %mul = fmul float %conv11, %9, !dbg !8717
  %div = fdiv float 2.000000e+00, %mul, !dbg !8718
  store float %div, float* %fx, align 4, !dbg !8713
  call void @llvm.dbg.declare(metadata float* %fy, metadata !8719, metadata !DIExpression()), !dbg !8720
  %10 = load i32, i32* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 14), align 8, !dbg !8721
  %conv12 = sitofp i32 %10 to float, !dbg !8722
  %11 = load float, float* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 35, i64 1, i64 1), align 4, !dbg !8723
  %mul13 = fmul float %conv12, %11, !dbg !8724
  %div14 = fdiv float 2.000000e+00, %mul13, !dbg !8725
  store float %div14, float* %fy, align 4, !dbg !8720
  %12 = load float, float* %x.addr, align 4, !dbg !8726
  %13 = load i32, i32* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 13), align 4, !dbg !8727
  %conv15 = sitofp i32 %13 to float, !dbg !8728
  %mul16 = fmul float 5.000000e-01, %conv15, !dbg !8729
  %sub = fsub float %12, %mul16, !dbg !8730
  %14 = load float, float* %fx, align 4, !dbg !8731
  %mul17 = fmul float %sub, %14, !dbg !8732
  %15 = load float, float* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 35, i64 3, i64 0), align 8, !dbg !8733
  %16 = load float, float* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 35, i64 0, i64 0), align 8, !dbg !8734
  %div18 = fdiv float %15, %16, !dbg !8735
  %sub19 = fsub float %mul17, %div18, !dbg !8736
  %arrayidx20 = getelementptr inbounds [4 x float], [4 x float]* %hoco, i64 0, i64 0, !dbg !8737
  store float %sub19, float* %arrayidx20, align 16, !dbg !8738
  %17 = load float, float* %y.addr, align 4, !dbg !8739
  %18 = load i32, i32* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 14), align 8, !dbg !8740
  %conv21 = sitofp i32 %18 to float, !dbg !8741
  %mul22 = fmul float 5.000000e-01, %conv21, !dbg !8742
  %sub23 = fsub float %17, %mul22, !dbg !8743
  %19 = load float, float* %fy, align 4, !dbg !8744
  %mul24 = fmul float %sub23, %19, !dbg !8745
  %20 = load float, float* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 35, i64 3, i64 1), align 4, !dbg !8746
  %21 = load float, float* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 35, i64 1, i64 1), align 4, !dbg !8747
  %div25 = fdiv float %20, %21, !dbg !8748
  %sub26 = fsub float %mul24, %div25, !dbg !8749
  %arrayidx27 = getelementptr inbounds [4 x float], [4 x float]* %hoco, i64 0, i64 1, !dbg !8750
  store float %sub26, float* %arrayidx27, align 4, !dbg !8751
  %arrayidx28 = getelementptr inbounds [3 x float], [3 x float]* %nor, i64 0, i64 2, !dbg !8752
  %22 = load float, float* %arrayidx28, align 4, !dbg !8752
  %cmp = fcmp une float %22, 0.000000e+00, !dbg !8754
  br i1 %cmp, label %if.then30, label %if.else, !dbg !8755

if.then30:                                        ; preds = %if.then10
  %23 = load float, float* %dface, align 4, !dbg !8756
  %arrayidx31 = getelementptr inbounds [3 x float], [3 x float]* %nor, i64 0, i64 0, !dbg !8757
  %24 = load float, float* %arrayidx31, align 4, !dbg !8757
  %arrayidx32 = getelementptr inbounds [4 x float], [4 x float]* %hoco, i64 0, i64 0, !dbg !8758
  %25 = load float, float* %arrayidx32, align 16, !dbg !8758
  %mul33 = fmul float %24, %25, !dbg !8759
  %sub34 = fsub float %23, %mul33, !dbg !8760
  %arrayidx35 = getelementptr inbounds [3 x float], [3 x float]* %nor, i64 0, i64 1, !dbg !8761
  %26 = load float, float* %arrayidx35, align 4, !dbg !8761
  %arrayidx36 = getelementptr inbounds [4 x float], [4 x float]* %hoco, i64 0, i64 1, !dbg !8762
  %27 = load float, float* %arrayidx36, align 4, !dbg !8762
  %mul37 = fmul float %26, %27, !dbg !8763
  %sub38 = fsub float %sub34, %mul37, !dbg !8764
  %arrayidx39 = getelementptr inbounds [3 x float], [3 x float]* %nor, i64 0, i64 2, !dbg !8765
  %28 = load float, float* %arrayidx39, align 4, !dbg !8765
  %div40 = fdiv float %sub38, %28, !dbg !8766
  %arrayidx41 = getelementptr inbounds [4 x float], [4 x float]* %hoco, i64 0, i64 2, !dbg !8767
  store float %div40, float* %arrayidx41, align 8, !dbg !8768
  br label %if.end43, !dbg !8767

if.else:                                          ; preds = %if.then10
  %arrayidx42 = getelementptr inbounds [4 x float], [4 x float]* %hoco, i64 0, i64 2, !dbg !8769
  store float 0.000000e+00, float* %arrayidx42, align 8, !dbg !8770
  br label %if.end43

if.end43:                                         ; preds = %if.else, %if.then30
  br label %if.end64, !dbg !8771

if.else44:                                        ; preds = %if.end
  call void @llvm.dbg.declare(metadata float* %div45, metadata !8772, metadata !DIExpression()), !dbg !8774
  call void @llvm.dbg.declare(metadata [3 x float]* %view, metadata !8775, metadata !DIExpression()), !dbg !8776
  %arraydecay46 = getelementptr inbounds [3 x float], [3 x float]* %view, i64 0, i64 0, !dbg !8777
  %29 = load float, float* %x.addr, align 4, !dbg !8778
  %30 = load float, float* %y.addr, align 4, !dbg !8779
  call void @calc_view_vector(float* %arraydecay46, float %29, float %30), !dbg !8780
  %arraydecay47 = getelementptr inbounds [3 x float], [3 x float]* %nor, i64 0, i64 0, !dbg !8781
  %arraydecay48 = getelementptr inbounds [3 x float], [3 x float]* %view, i64 0, i64 0, !dbg !8782
  %call49 = call float @dot_v3v3(float* %arraydecay47, float* %arraydecay48), !dbg !8783
  store float %call49, float* %div45, align 4, !dbg !8784
  %31 = load float, float* %div45, align 4, !dbg !8785
  %cmp50 = fcmp oeq float %31, 0.000000e+00, !dbg !8787
  br i1 %cmp50, label %if.then52, label %if.end53, !dbg !8788

if.then52:                                        ; preds = %if.else44
  store i32 0, i32* %retval, align 4, !dbg !8789
  br label %return, !dbg !8789

if.end53:                                         ; preds = %if.else44
  %32 = load float, float* %dface, align 4, !dbg !8790
  %33 = load float, float* %div45, align 4, !dbg !8791
  %div54 = fdiv float %32, %33, !dbg !8792
  store float %div54, float* %fac, align 4, !dbg !8793
  %34 = load float, float* %fac, align 4, !dbg !8794
  %arrayidx55 = getelementptr inbounds [3 x float], [3 x float]* %view, i64 0, i64 0, !dbg !8795
  %35 = load float, float* %arrayidx55, align 4, !dbg !8795
  %mul56 = fmul float %34, %35, !dbg !8796
  %arrayidx57 = getelementptr inbounds [4 x float], [4 x float]* %hoco, i64 0, i64 0, !dbg !8797
  store float %mul56, float* %arrayidx57, align 16, !dbg !8798
  %36 = load float, float* %fac, align 4, !dbg !8799
  %arrayidx58 = getelementptr inbounds [3 x float], [3 x float]* %view, i64 0, i64 1, !dbg !8800
  %37 = load float, float* %arrayidx58, align 4, !dbg !8800
  %mul59 = fmul float %36, %37, !dbg !8801
  %arrayidx60 = getelementptr inbounds [4 x float], [4 x float]* %hoco, i64 0, i64 1, !dbg !8802
  store float %mul59, float* %arrayidx60, align 4, !dbg !8803
  %38 = load float, float* %fac, align 4, !dbg !8804
  %arrayidx61 = getelementptr inbounds [3 x float], [3 x float]* %view, i64 0, i64 2, !dbg !8805
  %39 = load float, float* %arrayidx61, align 4, !dbg !8805
  %mul62 = fmul float %38, %39, !dbg !8806
  %arrayidx63 = getelementptr inbounds [4 x float], [4 x float]* %hoco, i64 0, i64 2, !dbg !8807
  store float %mul62, float* %arrayidx63, align 8, !dbg !8808
  br label %if.end64

if.end64:                                         ; preds = %if.end53, %if.end43
  %40 = load %struct.ShadBuf*, %struct.ShadBuf** %shb.addr, align 8, !dbg !8809
  %persmat = getelementptr inbounds %struct.ShadBuf, %struct.ShadBuf* %40, i32 0, i32 3, !dbg !8810
  %arraydecay65 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %persmat, i64 0, i64 0, !dbg !8809
  %arraydecay66 = getelementptr inbounds [4 x float], [4 x float]* %hoco, i64 0, i64 0, !dbg !8811
  call void @mul_m4_v4([4 x float]* %arraydecay65, float* %arraydecay66), !dbg !8812
  %arrayidx67 = getelementptr inbounds [4 x float], [4 x float]* %hoco, i64 0, i64 3, !dbg !8813
  %41 = load float, float* %arrayidx67, align 4, !dbg !8813
  %42 = call float @llvm.fabs.f32(float %41), !dbg !8814
  store float %42, float* %fac, align 4, !dbg !8815
  %arrayidx68 = getelementptr inbounds [4 x float], [4 x float]* %hoco, i64 0, i64 0, !dbg !8816
  %43 = load float, float* %arrayidx68, align 16, !dbg !8816
  %44 = load float, float* %fac, align 4, !dbg !8818
  %fneg = fneg float %44, !dbg !8819
  %cmp69 = fcmp olt float %43, %fneg, !dbg !8820
  br i1 %cmp69, label %if.then74, label %lor.lhs.false, !dbg !8821

lor.lhs.false:                                    ; preds = %if.end64
  %arrayidx71 = getelementptr inbounds [4 x float], [4 x float]* %hoco, i64 0, i64 0, !dbg !8822
  %45 = load float, float* %arrayidx71, align 16, !dbg !8822
  %46 = load float, float* %fac, align 4, !dbg !8823
  %cmp72 = fcmp ogt float %45, %46, !dbg !8824
  br i1 %cmp72, label %if.then74, label %if.end75, !dbg !8825

if.then74:                                        ; preds = %lor.lhs.false, %if.end64
  store i32 0, i32* %retval, align 4, !dbg !8826
  br label %return, !dbg !8826

if.end75:                                         ; preds = %lor.lhs.false
  %arrayidx76 = getelementptr inbounds [4 x float], [4 x float]* %hoco, i64 0, i64 1, !dbg !8827
  %47 = load float, float* %arrayidx76, align 4, !dbg !8827
  %48 = load float, float* %fac, align 4, !dbg !8829
  %fneg77 = fneg float %48, !dbg !8830
  %cmp78 = fcmp olt float %47, %fneg77, !dbg !8831
  br i1 %cmp78, label %if.then84, label %lor.lhs.false80, !dbg !8832

lor.lhs.false80:                                  ; preds = %if.end75
  %arrayidx81 = getelementptr inbounds [4 x float], [4 x float]* %hoco, i64 0, i64 1, !dbg !8833
  %49 = load float, float* %arrayidx81, align 4, !dbg !8833
  %50 = load float, float* %fac, align 4, !dbg !8834
  %cmp82 = fcmp ogt float %49, %50, !dbg !8835
  br i1 %cmp82, label %if.then84, label %if.end85, !dbg !8836

if.then84:                                        ; preds = %lor.lhs.false80, %if.end75
  store i32 0, i32* %retval, align 4, !dbg !8837
  br label %return, !dbg !8837

if.end85:                                         ; preds = %lor.lhs.false80
  %arrayidx86 = getelementptr inbounds [4 x float], [4 x float]* %hoco, i64 0, i64 2, !dbg !8838
  %51 = load float, float* %arrayidx86, align 8, !dbg !8838
  %52 = load float, float* %fac, align 4, !dbg !8840
  %fneg87 = fneg float %52, !dbg !8841
  %cmp88 = fcmp olt float %51, %fneg87, !dbg !8842
  br i1 %cmp88, label %if.then94, label %lor.lhs.false90, !dbg !8843

lor.lhs.false90:                                  ; preds = %if.end85
  %arrayidx91 = getelementptr inbounds [4 x float], [4 x float]* %hoco, i64 0, i64 2, !dbg !8844
  %53 = load float, float* %arrayidx91, align 8, !dbg !8844
  %54 = load float, float* %fac, align 4, !dbg !8845
  %cmp92 = fcmp ogt float %53, %54, !dbg !8846
  br i1 %cmp92, label %if.then94, label %if.end95, !dbg !8847

if.then94:                                        ; preds = %lor.lhs.false90, %if.end85
  store i32 0, i32* %retval, align 4, !dbg !8848
  br label %return, !dbg !8848

if.end95:                                         ; preds = %lor.lhs.false90
  %55 = load %struct.ShadBuf*, %struct.ShadBuf** %shb.addr, align 8, !dbg !8849
  %size = getelementptr inbounds %struct.ShadBuf, %struct.ShadBuf* %55, i32 0, i32 14, !dbg !8850
  %56 = load i32, i32* %size, align 8, !dbg !8850
  %conv96 = sitofp i32 %56 to float, !dbg !8851
  %mul97 = fmul float 5.000000e-01, %conv96, !dbg !8852
  store float %mul97, float* %siz, align 4, !dbg !8853
  %57 = load float, float* %siz, align 4, !dbg !8854
  %arrayidx98 = getelementptr inbounds [4 x float], [4 x float]* %hoco, i64 0, i64 0, !dbg !8855
  %58 = load float, float* %arrayidx98, align 16, !dbg !8855
  %arrayidx99 = getelementptr inbounds [4 x float], [4 x float]* %hoco, i64 0, i64 3, !dbg !8856
  %59 = load float, float* %arrayidx99, align 4, !dbg !8856
  %div100 = fdiv float %58, %59, !dbg !8857
  %add = fadd float 1.000000e+00, %div100, !dbg !8858
  %mul101 = fmul float %57, %add, !dbg !8859
  %sub102 = fsub float %mul101, 5.000000e-01, !dbg !8860
  %60 = load float*, float** %co_r.addr, align 8, !dbg !8861
  %arrayidx103 = getelementptr inbounds float, float* %60, i64 0, !dbg !8861
  store float %sub102, float* %arrayidx103, align 4, !dbg !8862
  %61 = load float, float* %siz, align 4, !dbg !8863
  %arrayidx104 = getelementptr inbounds [4 x float], [4 x float]* %hoco, i64 0, i64 1, !dbg !8864
  %62 = load float, float* %arrayidx104, align 4, !dbg !8864
  %arrayidx105 = getelementptr inbounds [4 x float], [4 x float]* %hoco, i64 0, i64 3, !dbg !8865
  %63 = load float, float* %arrayidx105, align 4, !dbg !8865
  %div106 = fdiv float %62, %63, !dbg !8866
  %add107 = fadd float 1.000000e+00, %div106, !dbg !8867
  %mul108 = fmul float %61, %add107, !dbg !8868
  %sub109 = fsub float %mul108, 5.000000e-01, !dbg !8869
  %64 = load float*, float** %co_r.addr, align 8, !dbg !8870
  %arrayidx110 = getelementptr inbounds float, float* %64, i64 1, !dbg !8870
  store float %sub109, float* %arrayidx110, align 4, !dbg !8871
  %arrayidx111 = getelementptr inbounds [4 x float], [4 x float]* %hoco, i64 0, i64 2, !dbg !8872
  %65 = load float, float* %arrayidx111, align 8, !dbg !8872
  %arrayidx112 = getelementptr inbounds [4 x float], [4 x float]* %hoco, i64 0, i64 3, !dbg !8873
  %66 = load float, float* %arrayidx112, align 4, !dbg !8873
  %div113 = fdiv float %65, %66, !dbg !8874
  %mul114 = fmul float 0x41E0000000000000, %div113, !dbg !8875
  %67 = load float*, float** %co_r.addr, align 8, !dbg !8876
  %arrayidx115 = getelementptr inbounds float, float* %67, i64 2, !dbg !8876
  store float %mul114, float* %arrayidx115, align 4, !dbg !8877
  %68 = load %struct.ShadBuf*, %struct.ShadBuf** %shb.addr, align 8, !dbg !8878
  %bias = getelementptr inbounds %struct.ShadBuf, %struct.ShadBuf* %68, i32 0, i32 15, !dbg !8879
  %69 = load i32, i32* %bias, align 4, !dbg !8879
  %conv116 = sitofp i32 %69 to float, !dbg !8878
  %mul117 = fmul float 0x3FA99999A0000000, %conv116, !dbg !8880
  %70 = load float*, float** %co_r.addr, align 8, !dbg !8881
  %arrayidx118 = getelementptr inbounds float, float* %70, i64 2, !dbg !8881
  %71 = load float, float* %arrayidx118, align 4, !dbg !8882
  %sub119 = fsub float %71, %mul117, !dbg !8882
  store float %sub119, float* %arrayidx118, align 4, !dbg !8882
  store i32 1, i32* %retval, align 4, !dbg !8883
  br label %return, !dbg !8883

return:                                           ; preds = %if.end95, %if.then94, %if.then84, %if.then74, %if.then52
  %72 = load i32, i32* %retval, align 4, !dbg !8884
  ret i32 %72, !dbg !8884
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.ISBSampleA* @isb_alloc_sample_transp(%struct.ISBSampleA** %isbsa, %struct.MemArena* %mem) #0 !dbg !8885 {
entry:
  %isbsa.addr = alloca %struct.ISBSampleA**, align 8
  %mem.addr = alloca %struct.MemArena*, align 8
  %new = alloca %struct.ISBSampleA*, align 8
  store %struct.ISBSampleA** %isbsa, %struct.ISBSampleA*** %isbsa.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ISBSampleA*** %isbsa.addr, metadata !8888, metadata !DIExpression()), !dbg !8889
  store %struct.MemArena* %mem, %struct.MemArena** %mem.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MemArena** %mem.addr, metadata !8890, metadata !DIExpression()), !dbg !8891
  call void @llvm.dbg.declare(metadata %struct.ISBSampleA** %new, metadata !8892, metadata !DIExpression()), !dbg !8893
  %0 = load %struct.MemArena*, %struct.MemArena** %mem.addr, align 8, !dbg !8894
  %call = call i8* @BLI_memarena_alloc(%struct.MemArena* %0, i64 40), !dbg !8895
  %1 = bitcast i8* %call to %struct.ISBSampleA*, !dbg !8895
  store %struct.ISBSampleA* %1, %struct.ISBSampleA** %new, align 8, !dbg !8896
  %2 = load %struct.ISBSampleA**, %struct.ISBSampleA*** %isbsa.addr, align 8, !dbg !8897
  %3 = load %struct.ISBSampleA*, %struct.ISBSampleA** %2, align 8, !dbg !8899
  %tobool = icmp ne %struct.ISBSampleA* %3, null, !dbg !8899
  br i1 %tobool, label %if.then, label %if.else, !dbg !8900

if.then:                                          ; preds = %entry
  %4 = load %struct.ISBSampleA**, %struct.ISBSampleA*** %isbsa.addr, align 8, !dbg !8901
  %5 = load %struct.ISBSampleA*, %struct.ISBSampleA** %4, align 8, !dbg !8902
  %6 = load %struct.ISBSampleA*, %struct.ISBSampleA** %new, align 8, !dbg !8903
  %next = getelementptr inbounds %struct.ISBSampleA, %struct.ISBSampleA* %6, i32 0, i32 4, !dbg !8904
  store %struct.ISBSampleA* %5, %struct.ISBSampleA** %next, align 8, !dbg !8905
  br label %if.end, !dbg !8903

if.else:                                          ; preds = %entry
  %7 = load %struct.ISBSampleA*, %struct.ISBSampleA** %new, align 8, !dbg !8906
  %next1 = getelementptr inbounds %struct.ISBSampleA, %struct.ISBSampleA* %7, i32 0, i32 4, !dbg !8907
  store %struct.ISBSampleA* null, %struct.ISBSampleA** %next1, align 8, !dbg !8908
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %8 = load %struct.ISBSampleA*, %struct.ISBSampleA** %new, align 8, !dbg !8909
  %9 = load %struct.ISBSampleA**, %struct.ISBSampleA*** %isbsa.addr, align 8, !dbg !8910
  store %struct.ISBSampleA* %8, %struct.ISBSampleA** %9, align 8, !dbg !8911
  %10 = load %struct.ISBSampleA*, %struct.ISBSampleA** %new, align 8, !dbg !8912
  ret %struct.ISBSampleA* %10, !dbg !8913
}

; Function Attrs: noinline nounwind uwtable
define internal void @bound_rectf(%struct.rctf* %box, float* %v1) #0 !dbg !8914 {
entry:
  %box.addr = alloca %struct.rctf*, align 8
  %v1.addr = alloca float*, align 8
  store %struct.rctf* %box, %struct.rctf** %box.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rctf** %box.addr, metadata !8917, metadata !DIExpression()), !dbg !8918
  store float* %v1, float** %v1.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v1.addr, metadata !8919, metadata !DIExpression()), !dbg !8920
  %0 = load float*, float** %v1.addr, align 8, !dbg !8921
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !8921
  %1 = load float, float* %arrayidx, align 4, !dbg !8921
  %2 = load %struct.rctf*, %struct.rctf** %box.addr, align 8, !dbg !8923
  %xmin = getelementptr inbounds %struct.rctf, %struct.rctf* %2, i32 0, i32 0, !dbg !8924
  %3 = load float, float* %xmin, align 4, !dbg !8924
  %cmp = fcmp olt float %1, %3, !dbg !8925
  br i1 %cmp, label %if.then, label %if.end, !dbg !8926

if.then:                                          ; preds = %entry
  %4 = load float*, float** %v1.addr, align 8, !dbg !8927
  %arrayidx1 = getelementptr inbounds float, float* %4, i64 0, !dbg !8927
  %5 = load float, float* %arrayidx1, align 4, !dbg !8927
  %6 = load %struct.rctf*, %struct.rctf** %box.addr, align 8, !dbg !8928
  %xmin2 = getelementptr inbounds %struct.rctf, %struct.rctf* %6, i32 0, i32 0, !dbg !8929
  store float %5, float* %xmin2, align 4, !dbg !8930
  br label %if.end, !dbg !8928

if.end:                                           ; preds = %if.then, %entry
  %7 = load float*, float** %v1.addr, align 8, !dbg !8931
  %arrayidx3 = getelementptr inbounds float, float* %7, i64 0, !dbg !8931
  %8 = load float, float* %arrayidx3, align 4, !dbg !8931
  %9 = load %struct.rctf*, %struct.rctf** %box.addr, align 8, !dbg !8933
  %xmax = getelementptr inbounds %struct.rctf, %struct.rctf* %9, i32 0, i32 1, !dbg !8934
  %10 = load float, float* %xmax, align 4, !dbg !8934
  %cmp4 = fcmp ogt float %8, %10, !dbg !8935
  br i1 %cmp4, label %if.then5, label %if.end8, !dbg !8936

if.then5:                                         ; preds = %if.end
  %11 = load float*, float** %v1.addr, align 8, !dbg !8937
  %arrayidx6 = getelementptr inbounds float, float* %11, i64 0, !dbg !8937
  %12 = load float, float* %arrayidx6, align 4, !dbg !8937
  %13 = load %struct.rctf*, %struct.rctf** %box.addr, align 8, !dbg !8938
  %xmax7 = getelementptr inbounds %struct.rctf, %struct.rctf* %13, i32 0, i32 1, !dbg !8939
  store float %12, float* %xmax7, align 4, !dbg !8940
  br label %if.end8, !dbg !8938

if.end8:                                          ; preds = %if.then5, %if.end
  %14 = load float*, float** %v1.addr, align 8, !dbg !8941
  %arrayidx9 = getelementptr inbounds float, float* %14, i64 1, !dbg !8941
  %15 = load float, float* %arrayidx9, align 4, !dbg !8941
  %16 = load %struct.rctf*, %struct.rctf** %box.addr, align 8, !dbg !8943
  %ymin = getelementptr inbounds %struct.rctf, %struct.rctf* %16, i32 0, i32 2, !dbg !8944
  %17 = load float, float* %ymin, align 4, !dbg !8944
  %cmp10 = fcmp olt float %15, %17, !dbg !8945
  br i1 %cmp10, label %if.then11, label %if.end14, !dbg !8946

if.then11:                                        ; preds = %if.end8
  %18 = load float*, float** %v1.addr, align 8, !dbg !8947
  %arrayidx12 = getelementptr inbounds float, float* %18, i64 1, !dbg !8947
  %19 = load float, float* %arrayidx12, align 4, !dbg !8947
  %20 = load %struct.rctf*, %struct.rctf** %box.addr, align 8, !dbg !8948
  %ymin13 = getelementptr inbounds %struct.rctf, %struct.rctf* %20, i32 0, i32 2, !dbg !8949
  store float %19, float* %ymin13, align 4, !dbg !8950
  br label %if.end14, !dbg !8948

if.end14:                                         ; preds = %if.then11, %if.end8
  %21 = load float*, float** %v1.addr, align 8, !dbg !8951
  %arrayidx15 = getelementptr inbounds float, float* %21, i64 1, !dbg !8951
  %22 = load float, float* %arrayidx15, align 4, !dbg !8951
  %23 = load %struct.rctf*, %struct.rctf** %box.addr, align 8, !dbg !8953
  %ymax = getelementptr inbounds %struct.rctf, %struct.rctf* %23, i32 0, i32 3, !dbg !8954
  %24 = load float, float* %ymax, align 4, !dbg !8954
  %cmp16 = fcmp ogt float %22, %24, !dbg !8955
  br i1 %cmp16, label %if.then17, label %if.end20, !dbg !8956

if.then17:                                        ; preds = %if.end14
  %25 = load float*, float** %v1.addr, align 8, !dbg !8957
  %arrayidx18 = getelementptr inbounds float, float* %25, i64 1, !dbg !8957
  %26 = load float, float* %arrayidx18, align 4, !dbg !8957
  %27 = load %struct.rctf*, %struct.rctf** %box.addr, align 8, !dbg !8958
  %ymax19 = getelementptr inbounds %struct.rctf, %struct.rctf* %27, i32 0, i32 3, !dbg !8959
  store float %26, float* %ymax19, align 4, !dbg !8960
  br label %if.end20, !dbg !8958

if.end20:                                         ; preds = %if.then17, %if.end14
  ret void, !dbg !8961
}

; Function Attrs: noinline nounwind uwtable
define internal void @isb_bsp_split_init(%struct.ISBBranch* %root, %struct.MemArena* %mem, i32 %level) #0 !dbg !8962 {
entry:
  %root.addr = alloca %struct.ISBBranch*, align 8
  %mem.addr = alloca %struct.MemArena*, align 8
  %level.addr = alloca i32, align 4
  %left = alloca %struct.ISBBranch*, align 8
  %right = alloca %struct.ISBBranch*, align 8
  %i = alloca i32, align 4
  store %struct.ISBBranch* %root, %struct.ISBBranch** %root.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ISBBranch** %root.addr, metadata !8965, metadata !DIExpression()), !dbg !8966
  store %struct.MemArena* %mem, %struct.MemArena** %mem.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MemArena** %mem.addr, metadata !8967, metadata !DIExpression()), !dbg !8968
  store i32 %level, i32* %level.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %level.addr, metadata !8969, metadata !DIExpression()), !dbg !8970
  %0 = load i32, i32* %level.addr, align 4, !dbg !8971
  %cmp = icmp sgt i32 %0, 0, !dbg !8973
  br i1 %cmp, label %if.then, label %if.else49, !dbg !8974

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.ISBBranch** %left, metadata !8975, metadata !DIExpression()), !dbg !8977
  call void @llvm.dbg.declare(metadata %struct.ISBBranch** %right, metadata !8978, metadata !DIExpression()), !dbg !8979
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8980, metadata !DIExpression()), !dbg !8981
  %1 = load %struct.ISBBranch*, %struct.ISBBranch** %root.addr, align 8, !dbg !8982
  %box = getelementptr inbounds %struct.ISBBranch, %struct.ISBBranch* %1, i32 0, i32 3, !dbg !8983
  %xmin = getelementptr inbounds %struct.Boxf, %struct.Boxf* %box, i32 0, i32 0, !dbg !8984
  %2 = load float, float* %xmin, align 8, !dbg !8984
  %3 = load %struct.ISBBranch*, %struct.ISBBranch** %root.addr, align 8, !dbg !8985
  %box1 = getelementptr inbounds %struct.ISBBranch, %struct.ISBBranch* %3, i32 0, i32 3, !dbg !8986
  %xmax = getelementptr inbounds %struct.Boxf, %struct.Boxf* %box1, i32 0, i32 1, !dbg !8987
  %4 = load float, float* %xmax, align 4, !dbg !8987
  %add = fadd float %2, %4, !dbg !8988
  %mul = fmul float 5.000000e-01, %add, !dbg !8989
  %5 = load %struct.ISBBranch*, %struct.ISBBranch** %root.addr, align 8, !dbg !8990
  %divider = getelementptr inbounds %struct.ISBBranch, %struct.ISBBranch* %5, i32 0, i32 2, !dbg !8991
  %arrayidx = getelementptr inbounds [2 x float], [2 x float]* %divider, i64 0, i64 0, !dbg !8990
  store float %mul, float* %arrayidx, align 8, !dbg !8992
  %6 = load %struct.ISBBranch*, %struct.ISBBranch** %root.addr, align 8, !dbg !8993
  %box2 = getelementptr inbounds %struct.ISBBranch, %struct.ISBBranch* %6, i32 0, i32 3, !dbg !8994
  %ymin = getelementptr inbounds %struct.Boxf, %struct.Boxf* %box2, i32 0, i32 2, !dbg !8995
  %7 = load float, float* %ymin, align 8, !dbg !8995
  %8 = load %struct.ISBBranch*, %struct.ISBBranch** %root.addr, align 8, !dbg !8996
  %box3 = getelementptr inbounds %struct.ISBBranch, %struct.ISBBranch* %8, i32 0, i32 3, !dbg !8997
  %ymax = getelementptr inbounds %struct.Boxf, %struct.Boxf* %box3, i32 0, i32 3, !dbg !8998
  %9 = load float, float* %ymax, align 4, !dbg !8998
  %add4 = fadd float %7, %9, !dbg !8999
  %mul5 = fmul float 5.000000e-01, %add4, !dbg !9000
  %10 = load %struct.ISBBranch*, %struct.ISBBranch** %root.addr, align 8, !dbg !9001
  %divider6 = getelementptr inbounds %struct.ISBBranch, %struct.ISBBranch* %10, i32 0, i32 2, !dbg !9002
  %arrayidx7 = getelementptr inbounds [2 x float], [2 x float]* %divider6, i64 0, i64 1, !dbg !9001
  store float %mul5, float* %arrayidx7, align 4, !dbg !9003
  %11 = load %struct.ISBBranch*, %struct.ISBBranch** %root.addr, align 8, !dbg !9004
  %box8 = getelementptr inbounds %struct.ISBBranch, %struct.ISBBranch* %11, i32 0, i32 3, !dbg !9004
  %xmax9 = getelementptr inbounds %struct.Boxf, %struct.Boxf* %box8, i32 0, i32 1, !dbg !9004
  %12 = load float, float* %xmax9, align 4, !dbg !9004
  %13 = load %struct.ISBBranch*, %struct.ISBBranch** %root.addr, align 8, !dbg !9004
  %box10 = getelementptr inbounds %struct.ISBBranch, %struct.ISBBranch* %13, i32 0, i32 3, !dbg !9004
  %xmin11 = getelementptr inbounds %struct.Boxf, %struct.Boxf* %box10, i32 0, i32 0, !dbg !9004
  %14 = load float, float* %xmin11, align 8, !dbg !9004
  %sub = fsub float %12, %14, !dbg !9004
  %15 = load %struct.ISBBranch*, %struct.ISBBranch** %root.addr, align 8, !dbg !9006
  %box12 = getelementptr inbounds %struct.ISBBranch, %struct.ISBBranch* %15, i32 0, i32 3, !dbg !9006
  %ymax13 = getelementptr inbounds %struct.Boxf, %struct.Boxf* %box12, i32 0, i32 3, !dbg !9006
  %16 = load float, float* %ymax13, align 4, !dbg !9006
  %17 = load %struct.ISBBranch*, %struct.ISBBranch** %root.addr, align 8, !dbg !9006
  %box14 = getelementptr inbounds %struct.ISBBranch, %struct.ISBBranch* %17, i32 0, i32 3, !dbg !9006
  %ymin15 = getelementptr inbounds %struct.Boxf, %struct.Boxf* %box14, i32 0, i32 2, !dbg !9006
  %18 = load float, float* %ymin15, align 8, !dbg !9006
  %sub16 = fsub float %16, %18, !dbg !9006
  %cmp17 = fcmp ogt float %sub, %sub16, !dbg !9007
  br i1 %cmp17, label %if.then18, label %if.else, !dbg !9008

if.then18:                                        ; preds = %if.then
  %19 = load %struct.ISBBranch*, %struct.ISBBranch** %root.addr, align 8, !dbg !9009
  %index = getelementptr inbounds %struct.ISBBranch, %struct.ISBBranch* %19, i32 0, i32 5, !dbg !9010
  store i16 0, i16* %index, align 2, !dbg !9011
  store i32 0, i32* %i, align 4, !dbg !9012
  br label %if.end, !dbg !9013

if.else:                                          ; preds = %if.then
  %20 = load %struct.ISBBranch*, %struct.ISBBranch** %root.addr, align 8, !dbg !9014
  %index19 = getelementptr inbounds %struct.ISBBranch, %struct.ISBBranch* %20, i32 0, i32 5, !dbg !9015
  store i16 1, i16* %index19, align 2, !dbg !9016
  store i32 1, i32* %i, align 4, !dbg !9017
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then18
  %21 = load %struct.MemArena*, %struct.MemArena** %mem.addr, align 8, !dbg !9018
  %call = call i8* @BLI_memarena_alloc(%struct.MemArena* %21, i64 64), !dbg !9019
  %22 = bitcast i8* %call to %struct.ISBBranch*, !dbg !9019
  %23 = load %struct.ISBBranch*, %struct.ISBBranch** %root.addr, align 8, !dbg !9020
  %left20 = getelementptr inbounds %struct.ISBBranch, %struct.ISBBranch* %23, i32 0, i32 0, !dbg !9021
  store %struct.ISBBranch* %22, %struct.ISBBranch** %left20, align 8, !dbg !9022
  store %struct.ISBBranch* %22, %struct.ISBBranch** %left, align 8, !dbg !9023
  %24 = load %struct.MemArena*, %struct.MemArena** %mem.addr, align 8, !dbg !9024
  %call21 = call i8* @BLI_memarena_alloc(%struct.MemArena* %24, i64 64), !dbg !9025
  %25 = bitcast i8* %call21 to %struct.ISBBranch*, !dbg !9025
  %26 = load %struct.ISBBranch*, %struct.ISBBranch** %root.addr, align 8, !dbg !9026
  %right22 = getelementptr inbounds %struct.ISBBranch, %struct.ISBBranch* %26, i32 0, i32 1, !dbg !9027
  store %struct.ISBBranch* %25, %struct.ISBBranch** %right22, align 8, !dbg !9028
  store %struct.ISBBranch* %25, %struct.ISBBranch** %right, align 8, !dbg !9029
  %27 = load %struct.ISBBranch*, %struct.ISBBranch** %left, align 8, !dbg !9030
  %box23 = getelementptr inbounds %struct.ISBBranch, %struct.ISBBranch* %27, i32 0, i32 3, !dbg !9031
  %28 = load %struct.ISBBranch*, %struct.ISBBranch** %root.addr, align 8, !dbg !9032
  %box24 = getelementptr inbounds %struct.ISBBranch, %struct.ISBBranch* %28, i32 0, i32 3, !dbg !9033
  %29 = bitcast %struct.Boxf* %box23 to i8*, !dbg !9033
  %30 = bitcast %struct.Boxf* %box24 to i8*, !dbg !9033
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %29, i8* align 8 %30, i64 24, i1 false), !dbg !9033
  %31 = load %struct.ISBBranch*, %struct.ISBBranch** %right, align 8, !dbg !9034
  %box25 = getelementptr inbounds %struct.ISBBranch, %struct.ISBBranch* %31, i32 0, i32 3, !dbg !9035
  %32 = load %struct.ISBBranch*, %struct.ISBBranch** %root.addr, align 8, !dbg !9036
  %box26 = getelementptr inbounds %struct.ISBBranch, %struct.ISBBranch* %32, i32 0, i32 3, !dbg !9037
  %33 = bitcast %struct.Boxf* %box25 to i8*, !dbg !9037
  %34 = bitcast %struct.Boxf* %box26 to i8*, !dbg !9037
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %33, i8* align 8 %34, i64 24, i1 false), !dbg !9037
  %35 = load i32, i32* %i, align 4, !dbg !9038
  %cmp27 = icmp eq i32 %35, 0, !dbg !9040
  br i1 %cmp27, label %if.then28, label %if.else37, !dbg !9041

if.then28:                                        ; preds = %if.end
  %36 = load %struct.ISBBranch*, %struct.ISBBranch** %root.addr, align 8, !dbg !9042
  %divider29 = getelementptr inbounds %struct.ISBBranch, %struct.ISBBranch* %36, i32 0, i32 2, !dbg !9044
  %arrayidx30 = getelementptr inbounds [2 x float], [2 x float]* %divider29, i64 0, i64 0, !dbg !9042
  %37 = load float, float* %arrayidx30, align 8, !dbg !9042
  %38 = load %struct.ISBBranch*, %struct.ISBBranch** %left, align 8, !dbg !9045
  %box31 = getelementptr inbounds %struct.ISBBranch, %struct.ISBBranch* %38, i32 0, i32 3, !dbg !9046
  %xmax32 = getelementptr inbounds %struct.Boxf, %struct.Boxf* %box31, i32 0, i32 1, !dbg !9047
  store float %37, float* %xmax32, align 4, !dbg !9048
  %39 = load %struct.ISBBranch*, %struct.ISBBranch** %root.addr, align 8, !dbg !9049
  %divider33 = getelementptr inbounds %struct.ISBBranch, %struct.ISBBranch* %39, i32 0, i32 2, !dbg !9050
  %arrayidx34 = getelementptr inbounds [2 x float], [2 x float]* %divider33, i64 0, i64 0, !dbg !9049
  %40 = load float, float* %arrayidx34, align 8, !dbg !9049
  %41 = load %struct.ISBBranch*, %struct.ISBBranch** %right, align 8, !dbg !9051
  %box35 = getelementptr inbounds %struct.ISBBranch, %struct.ISBBranch* %41, i32 0, i32 3, !dbg !9052
  %xmin36 = getelementptr inbounds %struct.Boxf, %struct.Boxf* %box35, i32 0, i32 0, !dbg !9053
  store float %40, float* %xmin36, align 8, !dbg !9054
  br label %if.end46, !dbg !9055

if.else37:                                        ; preds = %if.end
  %42 = load %struct.ISBBranch*, %struct.ISBBranch** %root.addr, align 8, !dbg !9056
  %divider38 = getelementptr inbounds %struct.ISBBranch, %struct.ISBBranch* %42, i32 0, i32 2, !dbg !9058
  %arrayidx39 = getelementptr inbounds [2 x float], [2 x float]* %divider38, i64 0, i64 1, !dbg !9056
  %43 = load float, float* %arrayidx39, align 4, !dbg !9056
  %44 = load %struct.ISBBranch*, %struct.ISBBranch** %left, align 8, !dbg !9059
  %box40 = getelementptr inbounds %struct.ISBBranch, %struct.ISBBranch* %44, i32 0, i32 3, !dbg !9060
  %ymax41 = getelementptr inbounds %struct.Boxf, %struct.Boxf* %box40, i32 0, i32 3, !dbg !9061
  store float %43, float* %ymax41, align 4, !dbg !9062
  %45 = load %struct.ISBBranch*, %struct.ISBBranch** %root.addr, align 8, !dbg !9063
  %divider42 = getelementptr inbounds %struct.ISBBranch, %struct.ISBBranch* %45, i32 0, i32 2, !dbg !9064
  %arrayidx43 = getelementptr inbounds [2 x float], [2 x float]* %divider42, i64 0, i64 1, !dbg !9063
  %46 = load float, float* %arrayidx43, align 4, !dbg !9063
  %47 = load %struct.ISBBranch*, %struct.ISBBranch** %right, align 8, !dbg !9065
  %box44 = getelementptr inbounds %struct.ISBBranch, %struct.ISBBranch* %47, i32 0, i32 3, !dbg !9066
  %ymin45 = getelementptr inbounds %struct.Boxf, %struct.Boxf* %box44, i32 0, i32 2, !dbg !9067
  store float %46, float* %ymin45, align 8, !dbg !9068
  br label %if.end46

if.end46:                                         ; preds = %if.else37, %if.then28
  %48 = load %struct.ISBBranch*, %struct.ISBBranch** %left, align 8, !dbg !9069
  %49 = load %struct.MemArena*, %struct.MemArena** %mem.addr, align 8, !dbg !9070
  %50 = load i32, i32* %level.addr, align 4, !dbg !9071
  %sub47 = sub nsw i32 %50, 1, !dbg !9072
  call void @isb_bsp_split_init(%struct.ISBBranch* %48, %struct.MemArena* %49, i32 %sub47), !dbg !9073
  %51 = load %struct.ISBBranch*, %struct.ISBBranch** %right, align 8, !dbg !9074
  %52 = load %struct.MemArena*, %struct.MemArena** %mem.addr, align 8, !dbg !9075
  %53 = load i32, i32* %level.addr, align 4, !dbg !9076
  %sub48 = sub nsw i32 %53, 1, !dbg !9077
  call void @isb_bsp_split_init(%struct.ISBBranch* %51, %struct.MemArena* %52, i32 %sub48), !dbg !9078
  br label %if.end51, !dbg !9079

if.else49:                                        ; preds = %entry
  %54 = load %struct.MemArena*, %struct.MemArena** %mem.addr, align 8, !dbg !9080
  %call50 = call i8* @BLI_memarena_alloc(%struct.MemArena* %54, i64 1024), !dbg !9082
  %55 = bitcast i8* %call50 to %struct.ISBSample**, !dbg !9082
  %56 = load %struct.ISBBranch*, %struct.ISBBranch** %root.addr, align 8, !dbg !9083
  %samples = getelementptr inbounds %struct.ISBBranch, %struct.ISBBranch* %56, i32 0, i32 8, !dbg !9084
  store %struct.ISBSample** %55, %struct.ISBSample*** %samples, align 8, !dbg !9085
  br label %if.end51

if.end51:                                         ; preds = %if.else49, %if.end46
  ret void, !dbg !9086
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @isb_add_samples_transp(%struct.RenderPart* %pa, %struct.ISBBranch* %root, %struct.MemArena* %memarena, %struct.ISBSampleA*** %samplebuf) #0 !dbg !9087 {
entry:
  %pa.addr = alloca %struct.RenderPart*, align 8
  %root.addr = alloca %struct.ISBBranch*, align 8
  %memarena.addr = alloca %struct.MemArena*, align 8
  %samplebuf.addr = alloca %struct.ISBSampleA***, align 8
  %xi = alloca i32, align 4
  %yi = alloca i32, align 4
  %xcos = alloca i32*, align 8
  %ycos = alloca i32*, align 8
  %sample = alloca i32, align 4
  %bsp_err = alloca i32, align 4
  %samp = alloca %struct.ISBSampleA**, align 8
  %samp1 = alloca %struct.ISBSampleA*, align 8
  %y = alloca i32, align 4
  %x = alloca i32, align 4
  store %struct.RenderPart* %pa, %struct.RenderPart** %pa.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RenderPart** %pa.addr, metadata !9091, metadata !DIExpression()), !dbg !9092
  store %struct.ISBBranch* %root, %struct.ISBBranch** %root.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ISBBranch** %root.addr, metadata !9093, metadata !DIExpression()), !dbg !9094
  store %struct.MemArena* %memarena, %struct.MemArena** %memarena.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MemArena** %memarena.addr, metadata !9095, metadata !DIExpression()), !dbg !9096
  store %struct.ISBSampleA*** %samplebuf, %struct.ISBSampleA**** %samplebuf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ISBSampleA**** %samplebuf.addr, metadata !9097, metadata !DIExpression()), !dbg !9098
  call void @llvm.dbg.declare(metadata i32* %xi, metadata !9099, metadata !DIExpression()), !dbg !9100
  call void @llvm.dbg.declare(metadata i32* %yi, metadata !9101, metadata !DIExpression()), !dbg !9102
  call void @llvm.dbg.declare(metadata i32** %xcos, metadata !9103, metadata !DIExpression()), !dbg !9104
  call void @llvm.dbg.declare(metadata i32** %ycos, metadata !9105, metadata !DIExpression()), !dbg !9106
  call void @llvm.dbg.declare(metadata i32* %sample, metadata !9107, metadata !DIExpression()), !dbg !9108
  call void @llvm.dbg.declare(metadata i32* %bsp_err, metadata !9109, metadata !DIExpression()), !dbg !9110
  store i32 0, i32* %bsp_err, align 4, !dbg !9110
  %0 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !9111
  %1 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !9112
  %rectx = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %1, i32 0, i32 14, !dbg !9113
  %2 = load i32, i32* %rectx, align 8, !dbg !9113
  %conv = sext i32 %2 to i64, !dbg !9112
  %mul = mul i64 %conv, 4, !dbg !9114
  %call = call i8* %0(i64 %mul, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.21, i64 0, i64 0)), !dbg !9111
  %3 = bitcast i8* %call to i32*, !dbg !9111
  store i32* %3, i32** %xcos, align 8, !dbg !9115
  %4 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !9116
  %5 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !9117
  %recty = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %5, i32 0, i32 15, !dbg !9118
  %6 = load i32, i32* %recty, align 4, !dbg !9118
  %conv1 = sext i32 %6 to i64, !dbg !9117
  %mul2 = mul i64 %conv1, 4, !dbg !9119
  %call3 = call i8* %4(i64 %mul2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.22, i64 0, i64 0)), !dbg !9116
  %7 = bitcast i8* %call3 to i32*, !dbg !9116
  store i32* %7, i32** %ycos, align 8, !dbg !9120
  store i32 0, i32* %xi, align 4, !dbg !9121
  br label %for.cond, !dbg !9123

for.cond:                                         ; preds = %for.inc, %entry
  %8 = load i32, i32* %xi, align 4, !dbg !9124
  %9 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !9126
  %rectx4 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %9, i32 0, i32 14, !dbg !9127
  %10 = load i32, i32* %rectx4, align 8, !dbg !9127
  %cmp = icmp slt i32 %8, %10, !dbg !9128
  br i1 %cmp, label %for.body, label %for.end, !dbg !9129

for.body:                                         ; preds = %for.cond
  %11 = load i32, i32* %xi, align 4, !dbg !9130
  %12 = load i32*, i32** %xcos, align 8, !dbg !9131
  %13 = load i32, i32* %xi, align 4, !dbg !9132
  %idxprom = sext i32 %13 to i64, !dbg !9131
  %arrayidx = getelementptr inbounds i32, i32* %12, i64 %idxprom, !dbg !9131
  store i32 %11, i32* %arrayidx, align 4, !dbg !9133
  br label %for.inc, !dbg !9131

for.inc:                                          ; preds = %for.body
  %14 = load i32, i32* %xi, align 4, !dbg !9134
  %inc = add nsw i32 %14, 1, !dbg !9134
  store i32 %inc, i32* %xi, align 4, !dbg !9134
  br label %for.cond, !dbg !9135, !llvm.loop !9136

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %yi, align 4, !dbg !9138
  br label %for.cond6, !dbg !9140

for.cond6:                                        ; preds = %for.inc13, %for.end
  %15 = load i32, i32* %yi, align 4, !dbg !9141
  %16 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !9143
  %recty7 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %16, i32 0, i32 15, !dbg !9144
  %17 = load i32, i32* %recty7, align 4, !dbg !9144
  %cmp8 = icmp slt i32 %15, %17, !dbg !9145
  br i1 %cmp8, label %for.body10, label %for.end15, !dbg !9146

for.body10:                                       ; preds = %for.cond6
  %18 = load i32, i32* %yi, align 4, !dbg !9147
  %19 = load i32*, i32** %ycos, align 8, !dbg !9148
  %20 = load i32, i32* %yi, align 4, !dbg !9149
  %idxprom11 = sext i32 %20 to i64, !dbg !9148
  %arrayidx12 = getelementptr inbounds i32, i32* %19, i64 %idxprom11, !dbg !9148
  store i32 %18, i32* %arrayidx12, align 4, !dbg !9150
  br label %for.inc13, !dbg !9148

for.inc13:                                        ; preds = %for.body10
  %21 = load i32, i32* %yi, align 4, !dbg !9151
  %inc14 = add nsw i32 %21, 1, !dbg !9151
  store i32 %inc14, i32* %yi, align 4, !dbg !9151
  br label %for.cond6, !dbg !9152, !llvm.loop !9153

for.end15:                                        ; preds = %for.cond6
  %22 = load i32*, i32** %xcos, align 8, !dbg !9155
  %23 = bitcast i32* %22 to i8*, !dbg !9155
  %24 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !9156
  %rectx16 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %24, i32 0, i32 14, !dbg !9157
  %25 = load i32, i32* %rectx16, align 8, !dbg !9157
  call void @BLI_array_randomize(i8* %23, i32 4, i32 %25, i32 12345), !dbg !9158
  %26 = load i32*, i32** %ycos, align 8, !dbg !9159
  %27 = bitcast i32* %26 to i8*, !dbg !9159
  %28 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !9160
  %recty17 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %28, i32 0, i32 15, !dbg !9161
  %29 = load i32, i32* %recty17, align 4, !dbg !9161
  call void @BLI_array_randomize(i8* %27, i32 4, i32 %29, i32 54321), !dbg !9162
  store i32 0, i32* %sample, align 4, !dbg !9163
  br label %for.cond18, !dbg !9165

for.cond18:                                       ; preds = %for.inc53, %for.end15
  %30 = load i32, i32* %sample, align 4, !dbg !9166
  %31 = load i16, i16* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 5), align 2, !dbg !9168
  %conv19 = sext i16 %31 to i32, !dbg !9169
  %tobool = icmp ne i32 %conv19, 0, !dbg !9169
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !9169

cond.true:                                        ; preds = %for.cond18
  %32 = load i16, i16* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 5), align 2, !dbg !9170
  %conv20 = sext i16 %32 to i32, !dbg !9171
  br label %cond.end, !dbg !9169

cond.false:                                       ; preds = %for.cond18
  br label %cond.end, !dbg !9169

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv20, %cond.true ], [ 1, %cond.false ], !dbg !9169
  %cmp21 = icmp slt i32 %30, %cond, !dbg !9172
  br i1 %cmp21, label %for.body23, label %for.end55, !dbg !9173

for.body23:                                       ; preds = %cond.end
  call void @llvm.dbg.declare(metadata %struct.ISBSampleA*** %samp, metadata !9174, metadata !DIExpression()), !dbg !9176
  %33 = load %struct.ISBSampleA***, %struct.ISBSampleA**** %samplebuf.addr, align 8, !dbg !9177
  %34 = load i32, i32* %sample, align 4, !dbg !9178
  %idxprom24 = sext i32 %34 to i64, !dbg !9177
  %arrayidx25 = getelementptr inbounds %struct.ISBSampleA**, %struct.ISBSampleA*** %33, i64 %idxprom24, !dbg !9177
  %35 = load %struct.ISBSampleA**, %struct.ISBSampleA*** %arrayidx25, align 8, !dbg !9177
  store %struct.ISBSampleA** %35, %struct.ISBSampleA*** %samp, align 8, !dbg !9176
  call void @llvm.dbg.declare(metadata %struct.ISBSampleA** %samp1, metadata !9179, metadata !DIExpression()), !dbg !9180
  store i32 0, i32* %yi, align 4, !dbg !9181
  br label %for.cond26, !dbg !9183

for.cond26:                                       ; preds = %for.inc50, %for.body23
  %36 = load i32, i32* %yi, align 4, !dbg !9184
  %37 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !9186
  %recty27 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %37, i32 0, i32 15, !dbg !9187
  %38 = load i32, i32* %recty27, align 4, !dbg !9187
  %cmp28 = icmp slt i32 %36, %38, !dbg !9188
  br i1 %cmp28, label %for.body30, label %for.end52, !dbg !9189

for.body30:                                       ; preds = %for.cond26
  call void @llvm.dbg.declare(metadata i32* %y, metadata !9190, metadata !DIExpression()), !dbg !9192
  %39 = load i32*, i32** %ycos, align 8, !dbg !9193
  %40 = load i32, i32* %yi, align 4, !dbg !9194
  %idxprom31 = sext i32 %40 to i64, !dbg !9193
  %arrayidx32 = getelementptr inbounds i32, i32* %39, i64 %idxprom31, !dbg !9193
  %41 = load i32, i32* %arrayidx32, align 4, !dbg !9193
  store i32 %41, i32* %y, align 4, !dbg !9192
  store i32 0, i32* %xi, align 4, !dbg !9195
  br label %for.cond33, !dbg !9197

for.cond33:                                       ; preds = %for.inc46, %for.body30
  %42 = load i32, i32* %xi, align 4, !dbg !9198
  %43 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !9200
  %rectx34 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %43, i32 0, i32 14, !dbg !9201
  %44 = load i32, i32* %rectx34, align 8, !dbg !9201
  %cmp35 = icmp slt i32 %42, %44, !dbg !9202
  br i1 %cmp35, label %for.body37, label %for.end48, !dbg !9203

for.body37:                                       ; preds = %for.cond33
  call void @llvm.dbg.declare(metadata i32* %x, metadata !9204, metadata !DIExpression()), !dbg !9206
  %45 = load i32*, i32** %xcos, align 8, !dbg !9207
  %46 = load i32, i32* %xi, align 4, !dbg !9208
  %idxprom38 = sext i32 %46 to i64, !dbg !9207
  %arrayidx39 = getelementptr inbounds i32, i32* %45, i64 %idxprom38, !dbg !9207
  %47 = load i32, i32* %arrayidx39, align 4, !dbg !9207
  store i32 %47, i32* %x, align 4, !dbg !9206
  %48 = load %struct.ISBSampleA**, %struct.ISBSampleA*** %samp, align 8, !dbg !9209
  %49 = load i32, i32* %y, align 4, !dbg !9210
  %50 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !9211
  %rectx40 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %50, i32 0, i32 14, !dbg !9212
  %51 = load i32, i32* %rectx40, align 8, !dbg !9212
  %mul41 = mul nsw i32 %49, %51, !dbg !9213
  %idx.ext = sext i32 %mul41 to i64, !dbg !9214
  %add.ptr = getelementptr inbounds %struct.ISBSampleA*, %struct.ISBSampleA** %48, i64 %idx.ext, !dbg !9214
  %52 = load i32, i32* %x, align 4, !dbg !9215
  %idx.ext42 = sext i32 %52 to i64, !dbg !9216
  %add.ptr43 = getelementptr inbounds %struct.ISBSampleA*, %struct.ISBSampleA** %add.ptr, i64 %idx.ext42, !dbg !9216
  %53 = load %struct.ISBSampleA*, %struct.ISBSampleA** %add.ptr43, align 8, !dbg !9217
  store %struct.ISBSampleA* %53, %struct.ISBSampleA** %samp1, align 8, !dbg !9218
  br label %while.cond, !dbg !9219

while.cond:                                       ; preds = %while.body, %for.body37
  %54 = load %struct.ISBSampleA*, %struct.ISBSampleA** %samp1, align 8, !dbg !9220
  %tobool44 = icmp ne %struct.ISBSampleA* %54, null, !dbg !9219
  br i1 %tobool44, label %while.body, label %while.end, !dbg !9219

while.body:                                       ; preds = %while.cond
  %55 = load %struct.ISBBranch*, %struct.ISBBranch** %root.addr, align 8, !dbg !9221
  %56 = load %struct.MemArena*, %struct.MemArena** %memarena.addr, align 8, !dbg !9223
  %57 = load %struct.ISBSampleA*, %struct.ISBSampleA** %samp1, align 8, !dbg !9224
  %58 = bitcast %struct.ISBSampleA* %57 to %struct.ISBSample*, !dbg !9225
  %call45 = call i32 @isb_bsp_insert(%struct.ISBBranch* %55, %struct.MemArena* %56, %struct.ISBSample* %58), !dbg !9226
  %59 = load i32, i32* %bsp_err, align 4, !dbg !9227
  %or = or i32 %59, %call45, !dbg !9227
  store i32 %or, i32* %bsp_err, align 4, !dbg !9227
  %60 = load %struct.ISBSampleA*, %struct.ISBSampleA** %samp1, align 8, !dbg !9228
  %next = getelementptr inbounds %struct.ISBSampleA, %struct.ISBSampleA* %60, i32 0, i32 4, !dbg !9229
  %61 = load %struct.ISBSampleA*, %struct.ISBSampleA** %next, align 8, !dbg !9229
  store %struct.ISBSampleA* %61, %struct.ISBSampleA** %samp1, align 8, !dbg !9230
  br label %while.cond, !dbg !9219, !llvm.loop !9231

while.end:                                        ; preds = %while.cond
  br label %for.inc46, !dbg !9233

for.inc46:                                        ; preds = %while.end
  %62 = load i32, i32* %xi, align 4, !dbg !9234
  %inc47 = add nsw i32 %62, 1, !dbg !9234
  store i32 %inc47, i32* %xi, align 4, !dbg !9234
  br label %for.cond33, !dbg !9235, !llvm.loop !9236

for.end48:                                        ; preds = %for.cond33
  %63 = load i32, i32* %bsp_err, align 4, !dbg !9238
  %tobool49 = icmp ne i32 %63, 0, !dbg !9238
  br i1 %tobool49, label %if.then, label %if.end, !dbg !9240

if.then:                                          ; preds = %for.end48
  br label %for.end52, !dbg !9241

if.end:                                           ; preds = %for.end48
  br label %for.inc50, !dbg !9242

for.inc50:                                        ; preds = %if.end
  %64 = load i32, i32* %yi, align 4, !dbg !9243
  %inc51 = add nsw i32 %64, 1, !dbg !9243
  store i32 %inc51, i32* %yi, align 4, !dbg !9243
  br label %for.cond26, !dbg !9244, !llvm.loop !9245

for.end52:                                        ; preds = %if.then, %for.cond26
  br label %for.inc53, !dbg !9247

for.inc53:                                        ; preds = %for.end52
  %65 = load i32, i32* %sample, align 4, !dbg !9248
  %inc54 = add nsw i32 %65, 1, !dbg !9248
  store i32 %inc54, i32* %sample, align 4, !dbg !9248
  br label %for.cond18, !dbg !9249, !llvm.loop !9250

for.end55:                                        ; preds = %cond.end
  %66 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !9252
  %67 = load i32*, i32** %xcos, align 8, !dbg !9253
  %68 = bitcast i32* %67 to i8*, !dbg !9253
  call void %66(i8* %68), !dbg !9252
  %69 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !9254
  %70 = load i32*, i32** %ycos, align 8, !dbg !9255
  %71 = bitcast i32* %70 to i8*, !dbg !9255
  call void %69(i8* %71), !dbg !9254
  %72 = load i32, i32* %bsp_err, align 4, !dbg !9256
  ret i32 %72, !dbg !9257
}

; Function Attrs: noinline nounwind uwtable
define internal void @isb_bsp_fillfaces(%struct.Render* %re, %struct.LampRen* %lar, %struct.ISBBranch* %root) #0 !dbg !9258 {
entry:
  %re.addr = alloca %struct.Render*, align 8
  %lar.addr = alloca %struct.LampRen*, align 8
  %root.addr = alloca %struct.ISBBranch*, align 8
  %obi = alloca %struct.ObjectInstanceRen*, align 8
  %obr = alloca %struct.ObjectRen*, align 8
  %shb = alloca %struct.ShadBuf*, align 8
  %zspan = alloca %struct.ZSpan, align 8
  %zspanstrand = alloca %struct.ZSpan, align 8
  %vlr = alloca %struct.VlakRen*, align 8
  %ma = alloca %struct.Material*, align 8
  %minmaxf = alloca [4 x float], align 16
  %winmat = alloca [4 x [4 x float]], align 16
  %size = alloca i32, align 4
  %i = alloca i32, align 4
  %a = alloca i32, align 4
  %ok = alloca i32, align 4
  %lay = alloca i32, align 4
  %hoco = alloca [4 x [4 x float]], align 16
  %c1 = alloca i32, align 4
  %c2 = alloca i32, align 4
  %c3 = alloca i32, align 4
  %c4 = alloca i32, align 4
  %d1 = alloca i32, align 4
  %d2 = alloca i32, align 4
  %d3 = alloca i32, align 4
  %d4 = alloca i32, align 4
  %partclip = alloca i32, align 4
  store %struct.Render* %re, %struct.Render** %re.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Render** %re.addr, metadata !9261, metadata !DIExpression()), !dbg !9262
  store %struct.LampRen* %lar, %struct.LampRen** %lar.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.LampRen** %lar.addr, metadata !9263, metadata !DIExpression()), !dbg !9264
  store %struct.ISBBranch* %root, %struct.ISBBranch** %root.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ISBBranch** %root.addr, metadata !9265, metadata !DIExpression()), !dbg !9266
  call void @llvm.dbg.declare(metadata %struct.ObjectInstanceRen** %obi, metadata !9267, metadata !DIExpression()), !dbg !9268
  call void @llvm.dbg.declare(metadata %struct.ObjectRen** %obr, metadata !9269, metadata !DIExpression()), !dbg !9270
  call void @llvm.dbg.declare(metadata %struct.ShadBuf** %shb, metadata !9271, metadata !DIExpression()), !dbg !9272
  %0 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !9273
  %shb1 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %0, i32 0, i32 57, !dbg !9274
  %1 = load %struct.ShadBuf*, %struct.ShadBuf** %shb1, align 8, !dbg !9274
  store %struct.ShadBuf* %1, %struct.ShadBuf** %shb, align 8, !dbg !9272
  call void @llvm.dbg.declare(metadata %struct.ZSpan* %zspan, metadata !9275, metadata !DIExpression()), !dbg !9326
  call void @llvm.dbg.declare(metadata %struct.ZSpan* %zspanstrand, metadata !9327, metadata !DIExpression()), !dbg !9328
  call void @llvm.dbg.declare(metadata %struct.VlakRen** %vlr, metadata !9329, metadata !DIExpression()), !dbg !9330
  store %struct.VlakRen* null, %struct.VlakRen** %vlr, align 8, !dbg !9330
  call void @llvm.dbg.declare(metadata %struct.Material** %ma, metadata !9331, metadata !DIExpression()), !dbg !9332
  store %struct.Material* null, %struct.Material** %ma, align 8, !dbg !9332
  call void @llvm.dbg.declare(metadata [4 x float]* %minmaxf, metadata !9333, metadata !DIExpression()), !dbg !9334
  call void @llvm.dbg.declare(metadata [4 x [4 x float]]* %winmat, metadata !9335, metadata !DIExpression()), !dbg !9336
  call void @llvm.dbg.declare(metadata i32* %size, metadata !9337, metadata !DIExpression()), !dbg !9338
  %2 = load %struct.ShadBuf*, %struct.ShadBuf** %shb, align 8, !dbg !9339
  %size2 = getelementptr inbounds %struct.ShadBuf, %struct.ShadBuf* %2, i32 0, i32 14, !dbg !9340
  %3 = load i32, i32* %size2, align 8, !dbg !9340
  store i32 %3, i32* %size, align 4, !dbg !9338
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9341, metadata !DIExpression()), !dbg !9342
  call void @llvm.dbg.declare(metadata i32* %a, metadata !9343, metadata !DIExpression()), !dbg !9344
  call void @llvm.dbg.declare(metadata i32* %ok, metadata !9345, metadata !DIExpression()), !dbg !9346
  store i32 1, i32* %ok, align 4, !dbg !9346
  call void @llvm.dbg.declare(metadata i32* %lay, metadata !9347, metadata !DIExpression()), !dbg !9348
  store i32 -1, i32* %lay, align 4, !dbg !9348
  %4 = load %struct.ISBBranch*, %struct.ISBBranch** %root.addr, align 8, !dbg !9349
  call void @isb_bsp_recalc_box(%struct.ISBBranch* %4), !dbg !9350
  %5 = load %struct.ISBBranch*, %struct.ISBBranch** %root.addr, align 8, !dbg !9351
  %box = getelementptr inbounds %struct.ISBBranch, %struct.ISBBranch* %5, i32 0, i32 3, !dbg !9352
  %xmin = getelementptr inbounds %struct.Boxf, %struct.Boxf* %box, i32 0, i32 0, !dbg !9353
  %6 = load float, float* %xmin, align 8, !dbg !9353
  %mul = fmul float 2.000000e+00, %6, !dbg !9354
  %7 = load i32, i32* %size, align 4, !dbg !9355
  %conv = sitofp i32 %7 to float, !dbg !9355
  %sub = fsub float %mul, %conv, !dbg !9356
  %sub3 = fsub float %sub, 2.000000e+00, !dbg !9357
  %8 = load i32, i32* %size, align 4, !dbg !9358
  %conv4 = sitofp i32 %8 to float, !dbg !9358
  %div = fdiv float %sub3, %conv4, !dbg !9359
  %arrayidx = getelementptr inbounds [4 x float], [4 x float]* %minmaxf, i64 0, i64 0, !dbg !9360
  store float %div, float* %arrayidx, align 16, !dbg !9361
  %9 = load %struct.ISBBranch*, %struct.ISBBranch** %root.addr, align 8, !dbg !9362
  %box5 = getelementptr inbounds %struct.ISBBranch, %struct.ISBBranch* %9, i32 0, i32 3, !dbg !9363
  %xmax = getelementptr inbounds %struct.Boxf, %struct.Boxf* %box5, i32 0, i32 1, !dbg !9364
  %10 = load float, float* %xmax, align 4, !dbg !9364
  %mul6 = fmul float 2.000000e+00, %10, !dbg !9365
  %11 = load i32, i32* %size, align 4, !dbg !9366
  %conv7 = sitofp i32 %11 to float, !dbg !9366
  %sub8 = fsub float %mul6, %conv7, !dbg !9367
  %add = fadd float %sub8, 2.000000e+00, !dbg !9368
  %12 = load i32, i32* %size, align 4, !dbg !9369
  %conv9 = sitofp i32 %12 to float, !dbg !9369
  %div10 = fdiv float %add, %conv9, !dbg !9370
  %arrayidx11 = getelementptr inbounds [4 x float], [4 x float]* %minmaxf, i64 0, i64 1, !dbg !9371
  store float %div10, float* %arrayidx11, align 4, !dbg !9372
  %13 = load %struct.ISBBranch*, %struct.ISBBranch** %root.addr, align 8, !dbg !9373
  %box12 = getelementptr inbounds %struct.ISBBranch, %struct.ISBBranch* %13, i32 0, i32 3, !dbg !9374
  %ymin = getelementptr inbounds %struct.Boxf, %struct.Boxf* %box12, i32 0, i32 2, !dbg !9375
  %14 = load float, float* %ymin, align 8, !dbg !9375
  %mul13 = fmul float 2.000000e+00, %14, !dbg !9376
  %15 = load i32, i32* %size, align 4, !dbg !9377
  %conv14 = sitofp i32 %15 to float, !dbg !9377
  %sub15 = fsub float %mul13, %conv14, !dbg !9378
  %sub16 = fsub float %sub15, 2.000000e+00, !dbg !9379
  %16 = load i32, i32* %size, align 4, !dbg !9380
  %conv17 = sitofp i32 %16 to float, !dbg !9380
  %div18 = fdiv float %sub16, %conv17, !dbg !9381
  %arrayidx19 = getelementptr inbounds [4 x float], [4 x float]* %minmaxf, i64 0, i64 2, !dbg !9382
  store float %div18, float* %arrayidx19, align 8, !dbg !9383
  %17 = load %struct.ISBBranch*, %struct.ISBBranch** %root.addr, align 8, !dbg !9384
  %box20 = getelementptr inbounds %struct.ISBBranch, %struct.ISBBranch* %17, i32 0, i32 3, !dbg !9385
  %ymax = getelementptr inbounds %struct.Boxf, %struct.Boxf* %box20, i32 0, i32 3, !dbg !9386
  %18 = load float, float* %ymax, align 4, !dbg !9386
  %mul21 = fmul float 2.000000e+00, %18, !dbg !9387
  %19 = load i32, i32* %size, align 4, !dbg !9388
  %conv22 = sitofp i32 %19 to float, !dbg !9388
  %sub23 = fsub float %mul21, %conv22, !dbg !9389
  %add24 = fadd float %sub23, 2.000000e+00, !dbg !9390
  %20 = load i32, i32* %size, align 4, !dbg !9391
  %conv25 = sitofp i32 %20 to float, !dbg !9391
  %div26 = fdiv float %add24, %conv25, !dbg !9392
  %arrayidx27 = getelementptr inbounds [4 x float], [4 x float]* %minmaxf, i64 0, i64 3, !dbg !9393
  store float %div26, float* %arrayidx27, align 4, !dbg !9394
  %21 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !9395
  %mode = getelementptr inbounds %struct.LampRen, %struct.LampRen* %21, i32 0, i32 7, !dbg !9397
  %22 = load i32, i32* %mode, align 4, !dbg !9397
  %and = and i32 %22, 32772, !dbg !9398
  %tobool = icmp ne i32 %and, 0, !dbg !9398
  br i1 %tobool, label %if.then, label %if.end, !dbg !9399

if.then:                                          ; preds = %entry
  %23 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !9400
  %lay28 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %23, i32 0, i32 17, !dbg !9401
  %24 = load i32, i32* %lay28, align 4, !dbg !9401
  store i32 %24, i32* %lay, align 4, !dbg !9402
  br label %if.end, !dbg !9403

if.end:                                           ; preds = %if.then, %entry
  %25 = load i32, i32* %size, align 4, !dbg !9404
  %26 = load i32, i32* %size, align 4, !dbg !9405
  %27 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !9406
  %clipcrop = getelementptr inbounds %struct.Render, %struct.Render* %27, i32 0, i32 19, !dbg !9407
  %28 = load float, float* %clipcrop, align 4, !dbg !9407
  call void @zbuf_alloc_span(%struct.ZSpan* %zspan, i32 %25, i32 %26, float %28), !dbg !9408
  %29 = load i32, i32* %size, align 4, !dbg !9409
  %conv29 = sitofp i32 %29 to float, !dbg !9410
  %div30 = fdiv float %conv29, 2.000000e+00, !dbg !9411
  %zmulx = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %zspan, i32 0, i32 12, !dbg !9412
  store float %div30, float* %zmulx, align 8, !dbg !9413
  %30 = load i32, i32* %size, align 4, !dbg !9414
  %conv31 = sitofp i32 %30 to float, !dbg !9415
  %div32 = fdiv float %conv31, 2.000000e+00, !dbg !9416
  %zmuly = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %zspan, i32 0, i32 13, !dbg !9417
  store float %div32, float* %zmuly, align 4, !dbg !9418
  %zofsx = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %zspan, i32 0, i32 14, !dbg !9419
  store float -5.000000e-01, float* %zofsx, align 8, !dbg !9420
  %zofsy = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %zspan, i32 0, i32 15, !dbg !9421
  store float -5.000000e-01, float* %zofsy, align 4, !dbg !9422
  %31 = load %struct.ISBBranch*, %struct.ISBBranch** %root.addr, align 8, !dbg !9423
  %32 = bitcast %struct.ISBBranch* %31 to i32*, !dbg !9424
  %rectz = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %zspan, i32 0, i32 16, !dbg !9425
  store i32* %32, i32** %rectz, align 8, !dbg !9426
  %33 = bitcast %struct.ZSpan* %zspanstrand to i8*, !dbg !9427
  %34 = bitcast %struct.ZSpan* %zspan to i8*, !dbg !9427
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %33, i8* align 8 %34, i64 224, i1 false), !dbg !9427
  %zbuffunc = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %zspan, i32 0, i32 34, !dbg !9428
  store void (%struct.ZSpan*, i32, i32, float*, float*, float*, float*)* @isb_bsp_test_face, void (%struct.ZSpan*, i32, i32, float*, float*, float*, float*)** %zbuffunc, align 8, !dbg !9429
  %zbuffunc33 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %zspanstrand, i32 0, i32 34, !dbg !9430
  store void (%struct.ZSpan*, i32, i32, float*, float*, float*, float*)* @isb_bsp_test_strand, void (%struct.ZSpan*, i32, i32, float*, float*, float*, float*)** %zbuffunc33, align 8, !dbg !9431
  store i32 0, i32* %i, align 4, !dbg !9432
  %35 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !9434
  %instancetable = getelementptr inbounds %struct.Render, %struct.Render* %35, i32 0, i32 70, !dbg !9435
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %instancetable, i32 0, i32 0, !dbg !9436
  %36 = load i8*, i8** %first, align 8, !dbg !9436
  %37 = bitcast i8* %36 to %struct.ObjectInstanceRen*, !dbg !9434
  store %struct.ObjectInstanceRen* %37, %struct.ObjectInstanceRen** %obi, align 8, !dbg !9437
  br label %for.cond, !dbg !9438

for.cond:                                         ; preds = %for.inc220, %if.end
  %38 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi, align 8, !dbg !9439
  %tobool34 = icmp ne %struct.ObjectInstanceRen* %38, null, !dbg !9441
  br i1 %tobool34, label %for.body, label %for.end222, !dbg !9441

for.body:                                         ; preds = %for.cond
  %39 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi, align 8, !dbg !9442
  %obr35 = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %39, i32 0, i32 2, !dbg !9444
  %40 = load %struct.ObjectRen*, %struct.ObjectRen** %obr35, align 8, !dbg !9444
  store %struct.ObjectRen* %40, %struct.ObjectRen** %obr, align 8, !dbg !9445
  %41 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi, align 8, !dbg !9446
  %flag = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %41, i32 0, i32 11, !dbg !9448
  %42 = load i16, i16* %flag, align 8, !dbg !9448
  %conv36 = sext i16 %42 to i32, !dbg !9446
  %and37 = and i32 %conv36, 3, !dbg !9449
  %tobool38 = icmp ne i32 %and37, 0, !dbg !9449
  br i1 %tobool38, label %if.then39, label %if.else, !dbg !9450

if.then39:                                        ; preds = %for.body
  %arraydecay = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %winmat, i64 0, i64 0, !dbg !9451
  %43 = load %struct.ShadBuf*, %struct.ShadBuf** %shb, align 8, !dbg !9452
  %persmat = getelementptr inbounds %struct.ShadBuf, %struct.ShadBuf* %43, i32 0, i32 3, !dbg !9453
  %arraydecay40 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %persmat, i64 0, i64 0, !dbg !9452
  %44 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi, align 8, !dbg !9454
  %mat = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %44, i32 0, i32 8, !dbg !9455
  %arraydecay41 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %mat, i64 0, i64 0, !dbg !9454
  call void @mul_m4_m4m4([4 x float]* %arraydecay, [4 x float]* %arraydecay40, [4 x float]* %arraydecay41), !dbg !9456
  br label %if.end45, !dbg !9456

if.else:                                          ; preds = %for.body
  %arraydecay42 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %winmat, i64 0, i64 0, !dbg !9457
  %45 = load %struct.ShadBuf*, %struct.ShadBuf** %shb, align 8, !dbg !9458
  %persmat43 = getelementptr inbounds %struct.ShadBuf, %struct.ShadBuf* %45, i32 0, i32 3, !dbg !9459
  %arraydecay44 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %persmat43, i64 0, i64 0, !dbg !9458
  call void @copy_m4_m4([4 x float]* %arraydecay42, [4 x float]* %arraydecay44), !dbg !9460
  br label %if.end45

if.end45:                                         ; preds = %if.else, %if.then39
  store i32 0, i32* %a, align 4, !dbg !9461
  br label %for.cond46, !dbg !9463

for.cond46:                                       ; preds = %for.inc, %if.end45
  %46 = load i32, i32* %a, align 4, !dbg !9464
  %47 = load %struct.ObjectRen*, %struct.ObjectRen** %obr, align 8, !dbg !9466
  %totvlak = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %47, i32 0, i32 11, !dbg !9467
  %48 = load i32, i32* %totvlak, align 4, !dbg !9467
  %cmp = icmp slt i32 %46, %48, !dbg !9468
  br i1 %cmp, label %for.body48, label %for.end, !dbg !9469

for.body48:                                       ; preds = %for.cond46
  %49 = load i32, i32* %a, align 4, !dbg !9470
  %and49 = and i32 %49, 255, !dbg !9473
  %cmp50 = icmp eq i32 %and49, 0, !dbg !9474
  br i1 %cmp50, label %if.then52, label %if.else54, !dbg !9475

if.then52:                                        ; preds = %for.body48
  %50 = load %struct.ObjectRen*, %struct.ObjectRen** %obr, align 8, !dbg !9476
  %vlaknodes = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %50, i32 0, i32 19, !dbg !9477
  %51 = load %struct.VlakTableNode*, %struct.VlakTableNode** %vlaknodes, align 8, !dbg !9477
  %52 = load i32, i32* %a, align 4, !dbg !9478
  %shr = ashr i32 %52, 8, !dbg !9479
  %idxprom = sext i32 %shr to i64, !dbg !9476
  %arrayidx53 = getelementptr inbounds %struct.VlakTableNode, %struct.VlakTableNode* %51, i64 %idxprom, !dbg !9476
  %vlak = getelementptr inbounds %struct.VlakTableNode, %struct.VlakTableNode* %arrayidx53, i32 0, i32 0, !dbg !9480
  %53 = load %struct.VlakRen*, %struct.VlakRen** %vlak, align 8, !dbg !9480
  store %struct.VlakRen* %53, %struct.VlakRen** %vlr, align 8, !dbg !9481
  br label %if.end55, !dbg !9482

if.else54:                                        ; preds = %for.body48
  %54 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !9483
  %incdec.ptr = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %54, i32 1, !dbg !9483
  store %struct.VlakRen* %incdec.ptr, %struct.VlakRen** %vlr, align 8, !dbg !9483
  br label %if.end55

if.end55:                                         ; preds = %if.else54, %if.then52
  %55 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !9484
  %mat56 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %55, i32 0, i32 5, !dbg !9486
  %56 = load %struct.Material*, %struct.Material** %mat56, align 8, !dbg !9486
  %57 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !9487
  %cmp57 = icmp ne %struct.Material* %56, %57, !dbg !9488
  br i1 %cmp57, label %if.then59, label %if.end77, !dbg !9489

if.then59:                                        ; preds = %if.end55
  %58 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !9490
  %mat60 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %58, i32 0, i32 5, !dbg !9492
  %59 = load %struct.Material*, %struct.Material** %mat60, align 8, !dbg !9492
  store %struct.Material* %59, %struct.Material** %ma, align 8, !dbg !9493
  store i32 1, i32* %ok, align 4, !dbg !9494
  %60 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !9495
  %mode2 = getelementptr inbounds %struct.Material, %struct.Material* %60, i32 0, i32 53, !dbg !9497
  %61 = load i32, i32* %mode2, align 4, !dbg !9497
  %and61 = and i32 %61, 1, !dbg !9498
  %cmp62 = icmp eq i32 %and61, 0, !dbg !9499
  br i1 %cmp62, label %if.then68, label %lor.lhs.false, !dbg !9500

lor.lhs.false:                                    ; preds = %if.then59
  %62 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !9501
  %mode64 = getelementptr inbounds %struct.Material, %struct.Material* %62, i32 0, i32 51, !dbg !9502
  %63 = load i32, i32* %mode64, align 4, !dbg !9502
  %and65 = and i32 %63, 33554432, !dbg !9503
  %cmp66 = icmp eq i32 %and65, 0, !dbg !9504
  br i1 %cmp66, label %if.then68, label %if.end69, !dbg !9505

if.then68:                                        ; preds = %lor.lhs.false, %if.then59
  store i32 0, i32* %ok, align 4, !dbg !9506
  br label %if.end69, !dbg !9507

if.end69:                                         ; preds = %if.then68, %lor.lhs.false
  %64 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !9508
  %material_type = getelementptr inbounds %struct.Material, %struct.Material* %64, i32 0, i32 2, !dbg !9510
  %65 = load i16, i16* %material_type, align 8, !dbg !9510
  %conv70 = sext i16 %65 to i32, !dbg !9508
  %cmp71 = icmp eq i32 %conv70, 3, !dbg !9511
  br i1 %cmp71, label %if.then73, label %if.end74, !dbg !9512

if.then73:                                        ; preds = %if.end69
  store i32 0, i32* %ok, align 4, !dbg !9513
  br label %if.end74, !dbg !9514

if.end74:                                         ; preds = %if.then73, %if.end69
  %66 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !9515
  %shad_alpha = getelementptr inbounds %struct.Material, %struct.Material* %66, i32 0, i32 72, !dbg !9516
  %67 = load float, float* %shad_alpha, align 4, !dbg !9516
  %shad_alpha75 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %zspan, i32 0, i32 27, !dbg !9517
  store float %67, float* %shad_alpha75, align 4, !dbg !9518
  %shad_alpha76 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %zspanstrand, i32 0, i32 27, !dbg !9519
  store float %67, float* %shad_alpha76, align 4, !dbg !9520
  br label %if.end77, !dbg !9521

if.end77:                                         ; preds = %if.end74, %if.end55
  %68 = load i32, i32* %ok, align 4, !dbg !9522
  %tobool78 = icmp ne i32 %68, 0, !dbg !9522
  br i1 %tobool78, label %land.lhs.true, label %if.end219, !dbg !9524

land.lhs.true:                                    ; preds = %if.end77
  %69 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi, align 8, !dbg !9525
  %lay79 = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %69, i32 0, i32 7, !dbg !9526
  %70 = load i32, i32* %lay79, align 8, !dbg !9526
  %71 = load i32, i32* %lay, align 4, !dbg !9527
  %and80 = and i32 %70, %71, !dbg !9528
  %tobool81 = icmp ne i32 %and80, 0, !dbg !9528
  br i1 %tobool81, label %if.then82, label %if.end219, !dbg !9529

if.then82:                                        ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata [4 x [4 x float]]* %hoco, metadata !9530, metadata !DIExpression()), !dbg !9532
  call void @llvm.dbg.declare(metadata i32* %c1, metadata !9533, metadata !DIExpression()), !dbg !9534
  call void @llvm.dbg.declare(metadata i32* %c2, metadata !9535, metadata !DIExpression()), !dbg !9536
  call void @llvm.dbg.declare(metadata i32* %c3, metadata !9537, metadata !DIExpression()), !dbg !9538
  call void @llvm.dbg.declare(metadata i32* %c4, metadata !9539, metadata !DIExpression()), !dbg !9540
  store i32 0, i32* %c4, align 4, !dbg !9540
  call void @llvm.dbg.declare(metadata i32* %d1, metadata !9541, metadata !DIExpression()), !dbg !9542
  call void @llvm.dbg.declare(metadata i32* %d2, metadata !9543, metadata !DIExpression()), !dbg !9544
  call void @llvm.dbg.declare(metadata i32* %d3, metadata !9545, metadata !DIExpression()), !dbg !9546
  call void @llvm.dbg.declare(metadata i32* %d4, metadata !9547, metadata !DIExpression()), !dbg !9548
  store i32 0, i32* %d4, align 4, !dbg !9548
  call void @llvm.dbg.declare(metadata i32* %partclip, metadata !9549, metadata !DIExpression()), !dbg !9550
  %72 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !9551
  %v1 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %72, i32 0, i32 0, !dbg !9552
  %73 = load %struct.VertRen*, %struct.VertRen** %v1, align 8, !dbg !9552
  %co = getelementptr inbounds %struct.VertRen, %struct.VertRen* %73, i32 0, i32 0, !dbg !9553
  %arraydecay83 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !9551
  %arraydecay84 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %winmat, i64 0, i64 0, !dbg !9554
  %arrayidx85 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %hoco, i64 0, i64 0, !dbg !9555
  %arraydecay86 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx85, i64 0, i64 0, !dbg !9555
  call void @projectvert(float* %arraydecay83, [4 x float]* %arraydecay84, float* %arraydecay86), !dbg !9556
  %arrayidx87 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %hoco, i64 0, i64 0, !dbg !9557
  %arraydecay88 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx87, i64 0, i64 0, !dbg !9557
  %arraydecay89 = getelementptr inbounds [4 x float], [4 x float]* %minmaxf, i64 0, i64 0, !dbg !9558
  %call = call i32 @testclip_minmax(float* %arraydecay88, float* %arraydecay89), !dbg !9559
  store i32 %call, i32* %d1, align 4, !dbg !9560
  %74 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !9561
  %v2 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %74, i32 0, i32 1, !dbg !9562
  %75 = load %struct.VertRen*, %struct.VertRen** %v2, align 8, !dbg !9562
  %co90 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %75, i32 0, i32 0, !dbg !9563
  %arraydecay91 = getelementptr inbounds [3 x float], [3 x float]* %co90, i64 0, i64 0, !dbg !9561
  %arraydecay92 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %winmat, i64 0, i64 0, !dbg !9564
  %arrayidx93 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %hoco, i64 0, i64 1, !dbg !9565
  %arraydecay94 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx93, i64 0, i64 0, !dbg !9565
  call void @projectvert(float* %arraydecay91, [4 x float]* %arraydecay92, float* %arraydecay94), !dbg !9566
  %arrayidx95 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %hoco, i64 0, i64 1, !dbg !9567
  %arraydecay96 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx95, i64 0, i64 0, !dbg !9567
  %arraydecay97 = getelementptr inbounds [4 x float], [4 x float]* %minmaxf, i64 0, i64 0, !dbg !9568
  %call98 = call i32 @testclip_minmax(float* %arraydecay96, float* %arraydecay97), !dbg !9569
  store i32 %call98, i32* %d2, align 4, !dbg !9570
  %76 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !9571
  %v3 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %76, i32 0, i32 2, !dbg !9572
  %77 = load %struct.VertRen*, %struct.VertRen** %v3, align 8, !dbg !9572
  %co99 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %77, i32 0, i32 0, !dbg !9573
  %arraydecay100 = getelementptr inbounds [3 x float], [3 x float]* %co99, i64 0, i64 0, !dbg !9571
  %arraydecay101 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %winmat, i64 0, i64 0, !dbg !9574
  %arrayidx102 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %hoco, i64 0, i64 2, !dbg !9575
  %arraydecay103 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx102, i64 0, i64 0, !dbg !9575
  call void @projectvert(float* %arraydecay100, [4 x float]* %arraydecay101, float* %arraydecay103), !dbg !9576
  %arrayidx104 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %hoco, i64 0, i64 2, !dbg !9577
  %arraydecay105 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx104, i64 0, i64 0, !dbg !9577
  %arraydecay106 = getelementptr inbounds [4 x float], [4 x float]* %minmaxf, i64 0, i64 0, !dbg !9578
  %call107 = call i32 @testclip_minmax(float* %arraydecay105, float* %arraydecay106), !dbg !9579
  store i32 %call107, i32* %d3, align 4, !dbg !9580
  %78 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !9581
  %v4 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %78, i32 0, i32 3, !dbg !9583
  %79 = load %struct.VertRen*, %struct.VertRen** %v4, align 8, !dbg !9583
  %tobool108 = icmp ne %struct.VertRen* %79, null, !dbg !9581
  br i1 %tobool108, label %if.then109, label %if.end120, !dbg !9584

if.then109:                                       ; preds = %if.then82
  %80 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !9585
  %v4110 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %80, i32 0, i32 3, !dbg !9587
  %81 = load %struct.VertRen*, %struct.VertRen** %v4110, align 8, !dbg !9587
  %co111 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %81, i32 0, i32 0, !dbg !9588
  %arraydecay112 = getelementptr inbounds [3 x float], [3 x float]* %co111, i64 0, i64 0, !dbg !9585
  %arraydecay113 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %winmat, i64 0, i64 0, !dbg !9589
  %arrayidx114 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %hoco, i64 0, i64 3, !dbg !9590
  %arraydecay115 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx114, i64 0, i64 0, !dbg !9590
  call void @projectvert(float* %arraydecay112, [4 x float]* %arraydecay113, float* %arraydecay115), !dbg !9591
  %arrayidx116 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %hoco, i64 0, i64 3, !dbg !9592
  %arraydecay117 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx116, i64 0, i64 0, !dbg !9592
  %arraydecay118 = getelementptr inbounds [4 x float], [4 x float]* %minmaxf, i64 0, i64 0, !dbg !9593
  %call119 = call i32 @testclip_minmax(float* %arraydecay117, float* %arraydecay118), !dbg !9594
  store i32 %call119, i32* %d4, align 4, !dbg !9595
  br label %if.end120, !dbg !9596

if.end120:                                        ; preds = %if.then109, %if.then82
  %82 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !9597
  %v4121 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %82, i32 0, i32 3, !dbg !9599
  %83 = load %struct.VertRen*, %struct.VertRen** %v4121, align 8, !dbg !9599
  %tobool122 = icmp ne %struct.VertRen* %83, null, !dbg !9597
  br i1 %tobool122, label %if.then123, label %if.else127, !dbg !9600

if.then123:                                       ; preds = %if.end120
  %84 = load i32, i32* %d1, align 4, !dbg !9601
  %85 = load i32, i32* %d2, align 4, !dbg !9602
  %and124 = and i32 %84, %85, !dbg !9603
  %86 = load i32, i32* %d3, align 4, !dbg !9604
  %and125 = and i32 %and124, %86, !dbg !9605
  %87 = load i32, i32* %d4, align 4, !dbg !9606
  %and126 = and i32 %and125, %87, !dbg !9607
  store i32 %and126, i32* %partclip, align 4, !dbg !9608
  br label %if.end130, !dbg !9609

if.else127:                                       ; preds = %if.end120
  %88 = load i32, i32* %d1, align 4, !dbg !9610
  %89 = load i32, i32* %d2, align 4, !dbg !9611
  %and128 = and i32 %88, %89, !dbg !9612
  %90 = load i32, i32* %d3, align 4, !dbg !9613
  %and129 = and i32 %and128, %90, !dbg !9614
  store i32 %and129, i32* %partclip, align 4, !dbg !9615
  br label %if.end130

if.end130:                                        ; preds = %if.else127, %if.then123
  %91 = load i32, i32* %partclip, align 4, !dbg !9616
  %cmp131 = icmp eq i32 %91, 0, !dbg !9618
  br i1 %cmp131, label %if.then133, label %if.end218, !dbg !9619

if.then133:                                       ; preds = %if.end130
  %arrayidx134 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %hoco, i64 0, i64 0, !dbg !9620
  %arraydecay135 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx134, i64 0, i64 0, !dbg !9620
  %call136 = call i32 @testclip(float* %arraydecay135), !dbg !9622
  store i32 %call136, i32* %c1, align 4, !dbg !9623
  %arrayidx137 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %hoco, i64 0, i64 1, !dbg !9624
  %arraydecay138 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx137, i64 0, i64 0, !dbg !9624
  %call139 = call i32 @testclip(float* %arraydecay138), !dbg !9625
  store i32 %call139, i32* %c2, align 4, !dbg !9626
  %arrayidx140 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %hoco, i64 0, i64 2, !dbg !9627
  %arraydecay141 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx140, i64 0, i64 0, !dbg !9627
  %call142 = call i32 @testclip(float* %arraydecay141), !dbg !9628
  store i32 %call142, i32* %c3, align 4, !dbg !9629
  %92 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !9630
  %v4143 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %92, i32 0, i32 3, !dbg !9632
  %93 = load %struct.VertRen*, %struct.VertRen** %v4143, align 8, !dbg !9632
  %tobool144 = icmp ne %struct.VertRen* %93, null, !dbg !9630
  br i1 %tobool144, label %if.then145, label %if.end149, !dbg !9633

if.then145:                                       ; preds = %if.then133
  %arrayidx146 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %hoco, i64 0, i64 3, !dbg !9634
  %arraydecay147 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx146, i64 0, i64 0, !dbg !9634
  %call148 = call i32 @testclip(float* %arraydecay147), !dbg !9635
  store i32 %call148, i32* %c4, align 4, !dbg !9636
  br label %if.end149, !dbg !9637

if.end149:                                        ; preds = %if.then145, %if.then133
  %94 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !9638
  %material_type150 = getelementptr inbounds %struct.Material, %struct.Material* %94, i32 0, i32 2, !dbg !9640
  %95 = load i16, i16* %material_type150, align 8, !dbg !9640
  %conv151 = sext i16 %95 to i32, !dbg !9638
  %cmp152 = icmp eq i32 %conv151, 3, !dbg !9641
  br i1 %cmp152, label %if.then154, label %if.else179, !dbg !9642

if.then154:                                       ; preds = %if.end149
  %96 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !9643
  %v4155 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %96, i32 0, i32 3, !dbg !9646
  %97 = load %struct.VertRen*, %struct.VertRen** %v4155, align 8, !dbg !9646
  %tobool156 = icmp ne %struct.VertRen* %97, null, !dbg !9643
  br i1 %tobool156, label %if.then157, label %if.else168, !dbg !9647

if.then157:                                       ; preds = %if.then154
  %98 = load i32, i32* %i, align 4, !dbg !9648
  %99 = load i32, i32* %a, align 4, !dbg !9649
  %add158 = add nsw i32 %99, 1, !dbg !9650
  %100 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !9651
  %ec = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %100, i32 0, i32 8, !dbg !9652
  %101 = load i8, i8* %ec, align 2, !dbg !9652
  %conv159 = zext i8 %101 to i32, !dbg !9651
  %arrayidx160 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %hoco, i64 0, i64 0, !dbg !9653
  %arraydecay161 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx160, i64 0, i64 0, !dbg !9653
  %arrayidx162 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %hoco, i64 0, i64 1, !dbg !9654
  %arraydecay163 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx162, i64 0, i64 0, !dbg !9654
  %arrayidx164 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %hoco, i64 0, i64 2, !dbg !9655
  %arraydecay165 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx164, i64 0, i64 0, !dbg !9655
  %arrayidx166 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %hoco, i64 0, i64 3, !dbg !9656
  %arraydecay167 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx166, i64 0, i64 0, !dbg !9656
  %102 = load i32, i32* %c1, align 4, !dbg !9657
  %103 = load i32, i32* %c2, align 4, !dbg !9658
  %104 = load i32, i32* %c3, align 4, !dbg !9659
  %105 = load i32, i32* %c4, align 4, !dbg !9660
  call void @zbufclipwire(%struct.ZSpan* %zspan, i32 %98, i32 %add158, i32 %conv159, float* %arraydecay161, float* %arraydecay163, float* %arraydecay165, float* %arraydecay167, i32 %102, i32 %103, i32 %104, i32 %105), !dbg !9661
  br label %if.end178, !dbg !9661

if.else168:                                       ; preds = %if.then154
  %106 = load i32, i32* %i, align 4, !dbg !9662
  %107 = load i32, i32* %a, align 4, !dbg !9663
  %add169 = add nsw i32 %107, 1, !dbg !9664
  %108 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !9665
  %ec170 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %108, i32 0, i32 8, !dbg !9666
  %109 = load i8, i8* %ec170, align 2, !dbg !9666
  %conv171 = zext i8 %109 to i32, !dbg !9665
  %arrayidx172 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %hoco, i64 0, i64 0, !dbg !9667
  %arraydecay173 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx172, i64 0, i64 0, !dbg !9667
  %arrayidx174 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %hoco, i64 0, i64 1, !dbg !9668
  %arraydecay175 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx174, i64 0, i64 0, !dbg !9668
  %arrayidx176 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %hoco, i64 0, i64 2, !dbg !9669
  %arraydecay177 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx176, i64 0, i64 0, !dbg !9669
  %110 = load i32, i32* %c1, align 4, !dbg !9670
  %111 = load i32, i32* %c2, align 4, !dbg !9671
  %112 = load i32, i32* %c3, align 4, !dbg !9672
  call void @zbufclipwire(%struct.ZSpan* %zspan, i32 %106, i32 %add169, i32 %conv171, float* %arraydecay173, float* %arraydecay175, float* %arraydecay177, float* null, i32 %110, i32 %111, i32 %112, i32 0), !dbg !9673
  br label %if.end178

if.end178:                                        ; preds = %if.else168, %if.then157
  br label %if.end217, !dbg !9674

if.else179:                                       ; preds = %if.end149
  %113 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !9675
  %v4180 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %113, i32 0, i32 3, !dbg !9677
  %114 = load %struct.VertRen*, %struct.VertRen** %v4180, align 8, !dbg !9677
  %tobool181 = icmp ne %struct.VertRen* %114, null, !dbg !9675
  br i1 %tobool181, label %if.then182, label %if.else208, !dbg !9678

if.then182:                                       ; preds = %if.else179
  %115 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !9679
  %flag183 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %115, i32 0, i32 7, !dbg !9682
  %116 = load i8, i8* %flag183, align 1, !dbg !9682
  %conv184 = zext i8 %116 to i32, !dbg !9679
  %and185 = and i32 %conv184, 4, !dbg !9683
  %tobool186 = icmp ne i32 %and185, 0, !dbg !9683
  br i1 %tobool186, label %if.then187, label %if.else197, !dbg !9684

if.then187:                                       ; preds = %if.then182
  %117 = load i32, i32* %i, align 4, !dbg !9685
  %118 = load i32, i32* %a, align 4, !dbg !9686
  %add188 = add nsw i32 %118, 1, !dbg !9687
  %arrayidx189 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %hoco, i64 0, i64 0, !dbg !9688
  %arraydecay190 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx189, i64 0, i64 0, !dbg !9688
  %arrayidx191 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %hoco, i64 0, i64 1, !dbg !9689
  %arraydecay192 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx191, i64 0, i64 0, !dbg !9689
  %arrayidx193 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %hoco, i64 0, i64 2, !dbg !9690
  %arraydecay194 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx193, i64 0, i64 0, !dbg !9690
  %arrayidx195 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %hoco, i64 0, i64 3, !dbg !9691
  %arraydecay196 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx195, i64 0, i64 0, !dbg !9691
  %119 = load i32, i32* %c1, align 4, !dbg !9692
  %120 = load i32, i32* %c2, align 4, !dbg !9693
  %121 = load i32, i32* %c3, align 4, !dbg !9694
  %122 = load i32, i32* %c4, align 4, !dbg !9695
  call void @zbufclip4(%struct.ZSpan* %zspanstrand, i32 %117, i32 %add188, float* %arraydecay190, float* %arraydecay192, float* %arraydecay194, float* %arraydecay196, i32 %119, i32 %120, i32 %121, i32 %122), !dbg !9696
  br label %if.end207, !dbg !9696

if.else197:                                       ; preds = %if.then182
  %123 = load i32, i32* %i, align 4, !dbg !9697
  %124 = load i32, i32* %a, align 4, !dbg !9698
  %add198 = add nsw i32 %124, 1, !dbg !9699
  %arrayidx199 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %hoco, i64 0, i64 0, !dbg !9700
  %arraydecay200 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx199, i64 0, i64 0, !dbg !9700
  %arrayidx201 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %hoco, i64 0, i64 1, !dbg !9701
  %arraydecay202 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx201, i64 0, i64 0, !dbg !9701
  %arrayidx203 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %hoco, i64 0, i64 2, !dbg !9702
  %arraydecay204 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx203, i64 0, i64 0, !dbg !9702
  %arrayidx205 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %hoco, i64 0, i64 3, !dbg !9703
  %arraydecay206 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx205, i64 0, i64 0, !dbg !9703
  %125 = load i32, i32* %c1, align 4, !dbg !9704
  %126 = load i32, i32* %c2, align 4, !dbg !9705
  %127 = load i32, i32* %c3, align 4, !dbg !9706
  %128 = load i32, i32* %c4, align 4, !dbg !9707
  call void @zbufclip4(%struct.ZSpan* %zspan, i32 %123, i32 %add198, float* %arraydecay200, float* %arraydecay202, float* %arraydecay204, float* %arraydecay206, i32 %125, i32 %126, i32 %127, i32 %128), !dbg !9708
  br label %if.end207

if.end207:                                        ; preds = %if.else197, %if.then187
  br label %if.end216, !dbg !9709

if.else208:                                       ; preds = %if.else179
  %129 = load i32, i32* %i, align 4, !dbg !9710
  %130 = load i32, i32* %a, align 4, !dbg !9711
  %add209 = add nsw i32 %130, 1, !dbg !9712
  %arrayidx210 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %hoco, i64 0, i64 0, !dbg !9713
  %arraydecay211 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx210, i64 0, i64 0, !dbg !9713
  %arrayidx212 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %hoco, i64 0, i64 1, !dbg !9714
  %arraydecay213 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx212, i64 0, i64 0, !dbg !9714
  %arrayidx214 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %hoco, i64 0, i64 2, !dbg !9715
  %arraydecay215 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx214, i64 0, i64 0, !dbg !9715
  %131 = load i32, i32* %c1, align 4, !dbg !9716
  %132 = load i32, i32* %c2, align 4, !dbg !9717
  %133 = load i32, i32* %c3, align 4, !dbg !9718
  call void @zbufclip(%struct.ZSpan* %zspan, i32 %129, i32 %add209, float* %arraydecay211, float* %arraydecay213, float* %arraydecay215, i32 %131, i32 %132, i32 %133), !dbg !9719
  br label %if.end216

if.end216:                                        ; preds = %if.else208, %if.end207
  br label %if.end217

if.end217:                                        ; preds = %if.end216, %if.end178
  br label %if.end218, !dbg !9720

if.end218:                                        ; preds = %if.end217, %if.end130
  br label %if.end219, !dbg !9721

if.end219:                                        ; preds = %if.end218, %land.lhs.true, %if.end77
  br label %for.inc, !dbg !9722

for.inc:                                          ; preds = %if.end219
  %134 = load i32, i32* %a, align 4, !dbg !9723
  %inc = add nsw i32 %134, 1, !dbg !9723
  store i32 %inc, i32* %a, align 4, !dbg !9723
  br label %for.cond46, !dbg !9724, !llvm.loop !9725

for.end:                                          ; preds = %for.cond46
  br label %for.inc220, !dbg !9727

for.inc220:                                       ; preds = %for.end
  %135 = load i32, i32* %i, align 4, !dbg !9728
  %inc221 = add nsw i32 %135, 1, !dbg !9728
  store i32 %inc221, i32* %i, align 4, !dbg !9728
  %136 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi, align 8, !dbg !9729
  %next = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %136, i32 0, i32 0, !dbg !9730
  %137 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %next, align 8, !dbg !9730
  store %struct.ObjectInstanceRen* %137, %struct.ObjectInstanceRen** %obi, align 8, !dbg !9731
  br label %for.cond, !dbg !9732, !llvm.loop !9733

for.end222:                                       ; preds = %for.cond
  call void @zbuf_free_span(%struct.ZSpan* %zspan), !dbg !9735
  ret void, !dbg !9736
}

; Function Attrs: noinline nounwind uwtable
define internal void @isb_add_shadfac(%struct.ISBShadfacA** %isbsapp, %struct.MemArena* %mem, i32 %obi, i32 %facenr, i16 signext %shadfac, i16 signext %samples) #0 !dbg !9737 {
entry:
  %isbsapp.addr = alloca %struct.ISBShadfacA**, align 8
  %mem.addr = alloca %struct.MemArena*, align 8
  %obi.addr = alloca i32, align 4
  %facenr.addr = alloca i32, align 4
  %shadfac.addr = alloca i16, align 2
  %samples.addr = alloca i16, align 2
  %new = alloca %struct.ISBShadfacA*, align 8
  %shadfacf = alloca float, align 4
  store %struct.ISBShadfacA** %isbsapp, %struct.ISBShadfacA*** %isbsapp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ISBShadfacA*** %isbsapp.addr, metadata !9740, metadata !DIExpression()), !dbg !9741
  store %struct.MemArena* %mem, %struct.MemArena** %mem.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MemArena** %mem.addr, metadata !9742, metadata !DIExpression()), !dbg !9743
  store i32 %obi, i32* %obi.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %obi.addr, metadata !9744, metadata !DIExpression()), !dbg !9745
  store i32 %facenr, i32* %facenr.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %facenr.addr, metadata !9746, metadata !DIExpression()), !dbg !9747
  store i16 %shadfac, i16* %shadfac.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %shadfac.addr, metadata !9748, metadata !DIExpression()), !dbg !9749
  store i16 %samples, i16* %samples.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %samples.addr, metadata !9750, metadata !DIExpression()), !dbg !9751
  call void @llvm.dbg.declare(metadata %struct.ISBShadfacA** %new, metadata !9752, metadata !DIExpression()), !dbg !9753
  call void @llvm.dbg.declare(metadata float* %shadfacf, metadata !9754, metadata !DIExpression()), !dbg !9755
  %0 = load i16, i16* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 5), align 2, !dbg !9756
  %tobool = icmp ne i16 %0, 0, !dbg !9758
  br i1 %tobool, label %if.then, label %if.else, !dbg !9759

if.then:                                          ; preds = %entry
  %1 = load i16, i16* %shadfac.addr, align 2, !dbg !9760
  %conv = sitofp i16 %1 to float, !dbg !9761
  %2 = load i16, i16* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 5), align 2, !dbg !9762
  %conv1 = sext i16 %2 to i32, !dbg !9763
  %conv2 = sitofp i32 %conv1 to float, !dbg !9763
  %mul = fmul float %conv, %conv2, !dbg !9764
  %3 = load i16, i16* %samples.addr, align 2, !dbg !9765
  %conv3 = sext i16 %3 to i32, !dbg !9765
  %conv4 = sitofp i32 %conv3 to float, !dbg !9765
  %mul5 = fmul float 4.096000e+03, %conv4, !dbg !9766
  %div = fdiv float %mul, %mul5, !dbg !9767
  store float %div, float* %shadfacf, align 4, !dbg !9768
  br label %if.end, !dbg !9769

if.else:                                          ; preds = %entry
  %4 = load i16, i16* %shadfac.addr, align 2, !dbg !9770
  %conv6 = sitofp i16 %4 to float, !dbg !9771
  %div7 = fdiv float %conv6, 4.096000e+03, !dbg !9772
  store float %div7, float* %shadfacf, align 4, !dbg !9773
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %5 = load %struct.MemArena*, %struct.MemArena** %mem.addr, align 8, !dbg !9774
  %call = call i8* @BLI_memarena_alloc(%struct.MemArena* %5, i64 24), !dbg !9775
  %6 = bitcast i8* %call to %struct.ISBShadfacA*, !dbg !9775
  store %struct.ISBShadfacA* %6, %struct.ISBShadfacA** %new, align 8, !dbg !9776
  %7 = load i32, i32* %obi.addr, align 4, !dbg !9777
  %8 = load %struct.ISBShadfacA*, %struct.ISBShadfacA** %new, align 8, !dbg !9778
  %obi8 = getelementptr inbounds %struct.ISBShadfacA, %struct.ISBShadfacA* %8, i32 0, i32 1, !dbg !9779
  store i32 %7, i32* %obi8, align 8, !dbg !9780
  %9 = load i32, i32* %facenr.addr, align 4, !dbg !9781
  %and = and i32 %9, -134217729, !dbg !9782
  %10 = load %struct.ISBShadfacA*, %struct.ISBShadfacA** %new, align 8, !dbg !9783
  %facenr9 = getelementptr inbounds %struct.ISBShadfacA, %struct.ISBShadfacA* %10, i32 0, i32 2, !dbg !9784
  store i32 %and, i32* %facenr9, align 4, !dbg !9785
  %11 = load float, float* %shadfacf, align 4, !dbg !9786
  %12 = load %struct.ISBShadfacA*, %struct.ISBShadfacA** %new, align 8, !dbg !9787
  %shadfac10 = getelementptr inbounds %struct.ISBShadfacA, %struct.ISBShadfacA* %12, i32 0, i32 3, !dbg !9788
  store float %11, float* %shadfac10, align 8, !dbg !9789
  %13 = load %struct.ISBShadfacA**, %struct.ISBShadfacA*** %isbsapp.addr, align 8, !dbg !9790
  %14 = load %struct.ISBShadfacA*, %struct.ISBShadfacA** %13, align 8, !dbg !9792
  %tobool11 = icmp ne %struct.ISBShadfacA* %14, null, !dbg !9792
  br i1 %tobool11, label %if.then12, label %if.else13, !dbg !9793

if.then12:                                        ; preds = %if.end
  %15 = load %struct.ISBShadfacA**, %struct.ISBShadfacA*** %isbsapp.addr, align 8, !dbg !9794
  %16 = load %struct.ISBShadfacA*, %struct.ISBShadfacA** %15, align 8, !dbg !9795
  %17 = load %struct.ISBShadfacA*, %struct.ISBShadfacA** %new, align 8, !dbg !9796
  %next = getelementptr inbounds %struct.ISBShadfacA, %struct.ISBShadfacA* %17, i32 0, i32 0, !dbg !9797
  store %struct.ISBShadfacA* %16, %struct.ISBShadfacA** %next, align 8, !dbg !9798
  br label %if.end15, !dbg !9796

if.else13:                                        ; preds = %if.end
  %18 = load %struct.ISBShadfacA*, %struct.ISBShadfacA** %new, align 8, !dbg !9799
  %next14 = getelementptr inbounds %struct.ISBShadfacA, %struct.ISBShadfacA* %18, i32 0, i32 0, !dbg !9800
  store %struct.ISBShadfacA* null, %struct.ISBShadfacA** %next14, align 8, !dbg !9801
  br label %if.end15

if.end15:                                         ; preds = %if.else13, %if.then12
  %19 = load %struct.ISBShadfacA*, %struct.ISBShadfacA** %new, align 8, !dbg !9802
  %20 = load %struct.ISBShadfacA**, %struct.ISBShadfacA*** %isbsapp.addr, align 8, !dbg !9803
  store %struct.ISBShadfacA* %19, %struct.ISBShadfacA** %20, align 8, !dbg !9804
  ret void, !dbg !9805
}

declare dso_local i32 @count_mask(i16 zeroext) #4

declare dso_local i32 @printf(i8*, ...) #4

declare dso_local void @RE_vlakren_get_normal(%struct.Render*, %struct.ObjectInstanceRen*, %struct.VlakRen*, float*) #4

declare dso_local void @calc_view_vector(float*, float, float) #4

declare dso_local i8* @BLI_memarena_alloc(%struct.MemArena*, i64) #4

declare dso_local void @BLI_array_randomize(i8*, i32, i32, i32) #4

; Function Attrs: noinline nounwind uwtable
define internal i32 @isb_bsp_insert(%struct.ISBBranch* %root, %struct.MemArena* %memarena, %struct.ISBSample* %sample) #0 !dbg !9806 {
entry:
  %retval = alloca i32, align 4
  %root.addr = alloca %struct.ISBBranch*, align 8
  %memarena.addr = alloca %struct.MemArena*, align 8
  %sample.addr = alloca %struct.ISBSample*, align 8
  %bspn = alloca %struct.ISBBranch*, align 8
  %zco = alloca float*, align 8
  %i = alloca i32, align 4
  store %struct.ISBBranch* %root, %struct.ISBBranch** %root.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ISBBranch** %root.addr, metadata !9809, metadata !DIExpression()), !dbg !9810
  store %struct.MemArena* %memarena, %struct.MemArena** %memarena.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MemArena** %memarena.addr, metadata !9811, metadata !DIExpression()), !dbg !9812
  store %struct.ISBSample* %sample, %struct.ISBSample** %sample.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ISBSample** %sample.addr, metadata !9813, metadata !DIExpression()), !dbg !9814
  call void @llvm.dbg.declare(metadata %struct.ISBBranch** %bspn, metadata !9815, metadata !DIExpression()), !dbg !9816
  %0 = load %struct.ISBBranch*, %struct.ISBBranch** %root.addr, align 8, !dbg !9817
  store %struct.ISBBranch* %0, %struct.ISBBranch** %bspn, align 8, !dbg !9816
  call void @llvm.dbg.declare(metadata float** %zco, metadata !9818, metadata !DIExpression()), !dbg !9819
  %1 = load %struct.ISBSample*, %struct.ISBSample** %sample.addr, align 8, !dbg !9820
  %zco1 = getelementptr inbounds %struct.ISBSample, %struct.ISBSample* %1, i32 0, i32 0, !dbg !9821
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %zco1, i64 0, i64 0, !dbg !9820
  store float* %arraydecay, float** %zco, align 8, !dbg !9819
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9822, metadata !DIExpression()), !dbg !9823
  store i32 0, i32* %i, align 4, !dbg !9823
  %2 = load %struct.ISBBranch*, %struct.ISBBranch** %root.addr, align 8, !dbg !9824
  %totsamp = getelementptr inbounds %struct.ISBBranch, %struct.ISBBranch* %2, i32 0, i32 4, !dbg !9825
  %3 = load i16, i16* %totsamp, align 8, !dbg !9826
  %inc = add i16 %3, 1, !dbg !9826
  store i16 %inc, i16* %totsamp, align 8, !dbg !9826
  br label %while.cond, !dbg !9827

while.cond:                                       ; preds = %if.end, %entry
  %4 = load %struct.ISBBranch*, %struct.ISBBranch** %bspn, align 8, !dbg !9828
  %left = getelementptr inbounds %struct.ISBBranch, %struct.ISBBranch* %4, i32 0, i32 0, !dbg !9829
  %5 = load %struct.ISBBranch*, %struct.ISBBranch** %left, align 8, !dbg !9829
  %tobool = icmp ne %struct.ISBBranch* %5, null, !dbg !9827
  br i1 %tobool, label %while.body, label %while.end, !dbg !9827

while.body:                                       ; preds = %while.cond
  %6 = load float*, float** %zco, align 8, !dbg !9830
  %7 = load %struct.ISBBranch*, %struct.ISBBranch** %bspn, align 8, !dbg !9833
  %index = getelementptr inbounds %struct.ISBBranch, %struct.ISBBranch* %7, i32 0, i32 5, !dbg !9834
  %8 = load i16, i16* %index, align 2, !dbg !9834
  %idxprom = sext i16 %8 to i64, !dbg !9830
  %arrayidx = getelementptr inbounds float, float* %6, i64 %idxprom, !dbg !9830
  %9 = load float, float* %arrayidx, align 4, !dbg !9830
  %10 = load %struct.ISBBranch*, %struct.ISBBranch** %bspn, align 8, !dbg !9835
  %divider = getelementptr inbounds %struct.ISBBranch, %struct.ISBBranch* %10, i32 0, i32 2, !dbg !9836
  %11 = load %struct.ISBBranch*, %struct.ISBBranch** %bspn, align 8, !dbg !9837
  %index2 = getelementptr inbounds %struct.ISBBranch, %struct.ISBBranch* %11, i32 0, i32 5, !dbg !9838
  %12 = load i16, i16* %index2, align 2, !dbg !9838
  %idxprom3 = sext i16 %12 to i64, !dbg !9835
  %arrayidx4 = getelementptr inbounds [2 x float], [2 x float]* %divider, i64 0, i64 %idxprom3, !dbg !9835
  %13 = load float, float* %arrayidx4, align 4, !dbg !9835
  %cmp = fcmp ole float %9, %13, !dbg !9839
  br i1 %cmp, label %if.then, label %if.else, !dbg !9840

if.then:                                          ; preds = %while.body
  %14 = load %struct.ISBBranch*, %struct.ISBBranch** %bspn, align 8, !dbg !9841
  %left5 = getelementptr inbounds %struct.ISBBranch, %struct.ISBBranch* %14, i32 0, i32 0, !dbg !9842
  %15 = load %struct.ISBBranch*, %struct.ISBBranch** %left5, align 8, !dbg !9842
  store %struct.ISBBranch* %15, %struct.ISBBranch** %bspn, align 8, !dbg !9843
  br label %if.end, !dbg !9844

if.else:                                          ; preds = %while.body
  %16 = load %struct.ISBBranch*, %struct.ISBBranch** %bspn, align 8, !dbg !9845
  %right = getelementptr inbounds %struct.ISBBranch, %struct.ISBBranch* %16, i32 0, i32 1, !dbg !9846
  %17 = load %struct.ISBBranch*, %struct.ISBBranch** %right, align 8, !dbg !9846
  store %struct.ISBBranch* %17, %struct.ISBBranch** %bspn, align 8, !dbg !9847
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %18 = load i32, i32* %i, align 4, !dbg !9848
  %inc6 = add nsw i32 %18, 1, !dbg !9848
  store i32 %inc6, i32* %i, align 4, !dbg !9848
  br label %while.cond, !dbg !9827, !llvm.loop !9849

while.end:                                        ; preds = %while.cond
  %19 = load %struct.ISBBranch*, %struct.ISBBranch** %bspn, align 8, !dbg !9851
  %totsamp7 = getelementptr inbounds %struct.ISBBranch, %struct.ISBBranch* %19, i32 0, i32 4, !dbg !9853
  %20 = load i16, i16* %totsamp7, align 8, !dbg !9853
  %conv = sext i16 %20 to i32, !dbg !9851
  %cmp8 = icmp eq i32 %conv, 128, !dbg !9854
  br i1 %cmp8, label %if.then10, label %if.end11, !dbg !9855

if.then10:                                        ; preds = %while.end
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.23, i64 0, i64 0)), !dbg !9856
  store i32 1, i32* %retval, align 4, !dbg !9858
  br label %return, !dbg !9858

if.end11:                                         ; preds = %while.end
  %21 = load %struct.ISBSample*, %struct.ISBSample** %sample.addr, align 8, !dbg !9859
  %22 = load %struct.ISBBranch*, %struct.ISBBranch** %bspn, align 8, !dbg !9860
  %samples = getelementptr inbounds %struct.ISBBranch, %struct.ISBBranch* %22, i32 0, i32 8, !dbg !9861
  %23 = load %struct.ISBSample**, %struct.ISBSample*** %samples, align 8, !dbg !9861
  %24 = load %struct.ISBBranch*, %struct.ISBBranch** %bspn, align 8, !dbg !9862
  %totsamp12 = getelementptr inbounds %struct.ISBBranch, %struct.ISBBranch* %24, i32 0, i32 4, !dbg !9863
  %25 = load i16, i16* %totsamp12, align 8, !dbg !9863
  %idxprom13 = sext i16 %25 to i64, !dbg !9860
  %arrayidx14 = getelementptr inbounds %struct.ISBSample*, %struct.ISBSample** %23, i64 %idxprom13, !dbg !9860
  store %struct.ISBSample* %21, %struct.ISBSample** %arrayidx14, align 8, !dbg !9864
  %26 = load %struct.ISBBranch*, %struct.ISBBranch** %bspn, align 8, !dbg !9865
  %totsamp15 = getelementptr inbounds %struct.ISBBranch, %struct.ISBBranch* %26, i32 0, i32 4, !dbg !9866
  %27 = load i16, i16* %totsamp15, align 8, !dbg !9867
  %inc16 = add i16 %27, 1, !dbg !9867
  store i16 %inc16, i16* %totsamp15, align 8, !dbg !9867
  %28 = load %struct.ISBBranch*, %struct.ISBBranch** %bspn, align 8, !dbg !9868
  %totsamp17 = getelementptr inbounds %struct.ISBBranch, %struct.ISBBranch* %28, i32 0, i32 4, !dbg !9870
  %29 = load i16, i16* %totsamp17, align 8, !dbg !9870
  %conv18 = sext i16 %29 to i32, !dbg !9868
  %cmp19 = icmp eq i32 %conv18, 128, !dbg !9871
  br i1 %cmp19, label %if.then21, label %if.end27, !dbg !9872

if.then21:                                        ; preds = %if.end11
  %30 = load i32, i32* %i, align 4, !dbg !9873
  %cmp22 = icmp eq i32 %30, 32, !dbg !9876
  br i1 %cmp22, label %if.then24, label %if.end26, !dbg !9877

if.then24:                                        ; preds = %if.then21
  %31 = load %struct.ISBBranch*, %struct.ISBBranch** %bspn, align 8, !dbg !9878
  %totsamp25 = getelementptr inbounds %struct.ISBBranch, %struct.ISBBranch* %31, i32 0, i32 4, !dbg !9880
  %32 = load i16, i16* %totsamp25, align 8, !dbg !9881
  %dec = add i16 %32, -1, !dbg !9881
  store i16 %dec, i16* %totsamp25, align 8, !dbg !9881
  store i32 1, i32* %retval, align 4, !dbg !9882
  br label %return, !dbg !9882

if.end26:                                         ; preds = %if.then21
  %33 = load %struct.ISBBranch*, %struct.ISBBranch** %bspn, align 8, !dbg !9883
  %34 = load %struct.MemArena*, %struct.MemArena** %memarena.addr, align 8, !dbg !9884
  call void @isb_bsp_split(%struct.ISBBranch* %33, %struct.MemArena* %34), !dbg !9885
  br label %if.end27, !dbg !9886

if.end27:                                         ; preds = %if.end26, %if.end11
  store i32 0, i32* %retval, align 4, !dbg !9887
  br label %return, !dbg !9887

return:                                           ; preds = %if.end27, %if.then24, %if.then10
  %35 = load i32, i32* %retval, align 4, !dbg !9888
  ret i32 %35, !dbg !9888
}

; Function Attrs: noinline nounwind uwtable
define internal void @isb_bsp_split(%struct.ISBBranch* %root, %struct.MemArena* %mem) #0 !dbg !9889 {
entry:
  %root.addr = alloca %struct.ISBBranch*, align 8
  %mem.addr = alloca %struct.MemArena*, align 8
  %left = alloca %struct.ISBBranch*, align 8
  %right = alloca %struct.ISBBranch*, align 8
  %samples = alloca [128 x %struct.ISBSample*], align 16
  %a = alloca i32, align 4
  %i = alloca i32, align 4
  %comp = alloca i32, align 4
  store %struct.ISBBranch* %root, %struct.ISBBranch** %root.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ISBBranch** %root.addr, metadata !9892, metadata !DIExpression()), !dbg !9893
  store %struct.MemArena* %mem, %struct.MemArena** %mem.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MemArena** %mem.addr, metadata !9894, metadata !DIExpression()), !dbg !9895
  call void @llvm.dbg.declare(metadata %struct.ISBBranch** %left, metadata !9896, metadata !DIExpression()), !dbg !9897
  call void @llvm.dbg.declare(metadata %struct.ISBBranch** %right, metadata !9898, metadata !DIExpression()), !dbg !9899
  call void @llvm.dbg.declare(metadata [128 x %struct.ISBSample*]* %samples, metadata !9900, metadata !DIExpression()), !dbg !9902
  call void @llvm.dbg.declare(metadata i32* %a, metadata !9903, metadata !DIExpression()), !dbg !9904
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9905, metadata !DIExpression()), !dbg !9906
  %0 = load %struct.ISBBranch*, %struct.ISBBranch** %root.addr, align 8, !dbg !9907
  %divider = getelementptr inbounds %struct.ISBBranch, %struct.ISBBranch* %0, i32 0, i32 2, !dbg !9908
  %arrayidx = getelementptr inbounds [2 x float], [2 x float]* %divider, i64 0, i64 1, !dbg !9907
  store float 0.000000e+00, float* %arrayidx, align 4, !dbg !9909
  %1 = load %struct.ISBBranch*, %struct.ISBBranch** %root.addr, align 8, !dbg !9910
  %divider1 = getelementptr inbounds %struct.ISBBranch, %struct.ISBBranch* %1, i32 0, i32 2, !dbg !9911
  %arrayidx2 = getelementptr inbounds [2 x float], [2 x float]* %divider1, i64 0, i64 0, !dbg !9910
  store float 0.000000e+00, float* %arrayidx2, align 8, !dbg !9912
  store i32 127, i32* %a, align 4, !dbg !9913
  br label %for.cond, !dbg !9915

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load i32, i32* %a, align 4, !dbg !9916
  %cmp = icmp sge i32 %2, 0, !dbg !9918
  br i1 %cmp, label %for.body, label %for.end, !dbg !9919

for.body:                                         ; preds = %for.cond
  %3 = load %struct.ISBBranch*, %struct.ISBBranch** %root.addr, align 8, !dbg !9920
  %samples3 = getelementptr inbounds %struct.ISBBranch, %struct.ISBBranch* %3, i32 0, i32 8, !dbg !9922
  %4 = load %struct.ISBSample**, %struct.ISBSample*** %samples3, align 8, !dbg !9922
  %5 = load i32, i32* %a, align 4, !dbg !9923
  %idxprom = sext i32 %5 to i64, !dbg !9920
  %arrayidx4 = getelementptr inbounds %struct.ISBSample*, %struct.ISBSample** %4, i64 %idxprom, !dbg !9920
  %6 = load %struct.ISBSample*, %struct.ISBSample** %arrayidx4, align 8, !dbg !9920
  %zco = getelementptr inbounds %struct.ISBSample, %struct.ISBSample* %6, i32 0, i32 0, !dbg !9924
  %arrayidx5 = getelementptr inbounds [3 x float], [3 x float]* %zco, i64 0, i64 0, !dbg !9920
  %7 = load float, float* %arrayidx5, align 8, !dbg !9920
  %8 = load %struct.ISBBranch*, %struct.ISBBranch** %root.addr, align 8, !dbg !9925
  %divider6 = getelementptr inbounds %struct.ISBBranch, %struct.ISBBranch* %8, i32 0, i32 2, !dbg !9926
  %arrayidx7 = getelementptr inbounds [2 x float], [2 x float]* %divider6, i64 0, i64 0, !dbg !9925
  %9 = load float, float* %arrayidx7, align 8, !dbg !9927
  %add = fadd float %9, %7, !dbg !9927
  store float %add, float* %arrayidx7, align 8, !dbg !9927
  %10 = load %struct.ISBBranch*, %struct.ISBBranch** %root.addr, align 8, !dbg !9928
  %samples8 = getelementptr inbounds %struct.ISBBranch, %struct.ISBBranch* %10, i32 0, i32 8, !dbg !9929
  %11 = load %struct.ISBSample**, %struct.ISBSample*** %samples8, align 8, !dbg !9929
  %12 = load i32, i32* %a, align 4, !dbg !9930
  %idxprom9 = sext i32 %12 to i64, !dbg !9928
  %arrayidx10 = getelementptr inbounds %struct.ISBSample*, %struct.ISBSample** %11, i64 %idxprom9, !dbg !9928
  %13 = load %struct.ISBSample*, %struct.ISBSample** %arrayidx10, align 8, !dbg !9928
  %zco11 = getelementptr inbounds %struct.ISBSample, %struct.ISBSample* %13, i32 0, i32 0, !dbg !9931
  %arrayidx12 = getelementptr inbounds [3 x float], [3 x float]* %zco11, i64 0, i64 1, !dbg !9928
  %14 = load float, float* %arrayidx12, align 4, !dbg !9928
  %15 = load %struct.ISBBranch*, %struct.ISBBranch** %root.addr, align 8, !dbg !9932
  %divider13 = getelementptr inbounds %struct.ISBBranch, %struct.ISBBranch* %15, i32 0, i32 2, !dbg !9933
  %arrayidx14 = getelementptr inbounds [2 x float], [2 x float]* %divider13, i64 0, i64 1, !dbg !9932
  %16 = load float, float* %arrayidx14, align 4, !dbg !9934
  %add15 = fadd float %16, %14, !dbg !9934
  store float %add15, float* %arrayidx14, align 4, !dbg !9934
  br label %for.inc, !dbg !9935

for.inc:                                          ; preds = %for.body
  %17 = load i32, i32* %a, align 4, !dbg !9936
  %dec = add nsw i32 %17, -1, !dbg !9936
  store i32 %dec, i32* %a, align 4, !dbg !9936
  br label %for.cond, !dbg !9937, !llvm.loop !9938

for.end:                                          ; preds = %for.cond
  %18 = load %struct.ISBBranch*, %struct.ISBBranch** %root.addr, align 8, !dbg !9940
  %divider16 = getelementptr inbounds %struct.ISBBranch, %struct.ISBBranch* %18, i32 0, i32 2, !dbg !9941
  %arrayidx17 = getelementptr inbounds [2 x float], [2 x float]* %divider16, i64 0, i64 0, !dbg !9940
  %19 = load float, float* %arrayidx17, align 8, !dbg !9942
  %div = fdiv float %19, 1.280000e+02, !dbg !9942
  store float %div, float* %arrayidx17, align 8, !dbg !9942
  %20 = load %struct.ISBBranch*, %struct.ISBBranch** %root.addr, align 8, !dbg !9943
  %divider18 = getelementptr inbounds %struct.ISBBranch, %struct.ISBBranch* %20, i32 0, i32 2, !dbg !9944
  %arrayidx19 = getelementptr inbounds [2 x float], [2 x float]* %divider18, i64 0, i64 1, !dbg !9943
  %21 = load float, float* %arrayidx19, align 4, !dbg !9945
  %div20 = fdiv float %21, 1.280000e+02, !dbg !9945
  store float %div20, float* %arrayidx19, align 4, !dbg !9945
  %22 = load %struct.ISBBranch*, %struct.ISBBranch** %root.addr, align 8, !dbg !9946
  %box = getelementptr inbounds %struct.ISBBranch, %struct.ISBBranch* %22, i32 0, i32 3, !dbg !9946
  %xmax = getelementptr inbounds %struct.Boxf, %struct.Boxf* %box, i32 0, i32 1, !dbg !9946
  %23 = load float, float* %xmax, align 4, !dbg !9946
  %24 = load %struct.ISBBranch*, %struct.ISBBranch** %root.addr, align 8, !dbg !9946
  %box21 = getelementptr inbounds %struct.ISBBranch, %struct.ISBBranch* %24, i32 0, i32 3, !dbg !9946
  %xmin = getelementptr inbounds %struct.Boxf, %struct.Boxf* %box21, i32 0, i32 0, !dbg !9946
  %25 = load float, float* %xmin, align 8, !dbg !9946
  %sub = fsub float %23, %25, !dbg !9946
  %26 = load %struct.ISBBranch*, %struct.ISBBranch** %root.addr, align 8, !dbg !9948
  %box22 = getelementptr inbounds %struct.ISBBranch, %struct.ISBBranch* %26, i32 0, i32 3, !dbg !9948
  %ymax = getelementptr inbounds %struct.Boxf, %struct.Boxf* %box22, i32 0, i32 3, !dbg !9948
  %27 = load float, float* %ymax, align 4, !dbg !9948
  %28 = load %struct.ISBBranch*, %struct.ISBBranch** %root.addr, align 8, !dbg !9948
  %box23 = getelementptr inbounds %struct.ISBBranch, %struct.ISBBranch* %28, i32 0, i32 3, !dbg !9948
  %ymin = getelementptr inbounds %struct.Boxf, %struct.Boxf* %box23, i32 0, i32 2, !dbg !9948
  %29 = load float, float* %ymin, align 8, !dbg !9948
  %sub24 = fsub float %27, %29, !dbg !9948
  %cmp25 = fcmp ogt float %sub, %sub24, !dbg !9949
  br i1 %cmp25, label %if.then, label %if.else, !dbg !9950

if.then:                                          ; preds = %for.end
  %30 = load %struct.ISBBranch*, %struct.ISBBranch** %root.addr, align 8, !dbg !9951
  %index = getelementptr inbounds %struct.ISBBranch, %struct.ISBBranch* %30, i32 0, i32 5, !dbg !9952
  store i16 0, i16* %index, align 2, !dbg !9953
  store i32 0, i32* %i, align 4, !dbg !9954
  br label %if.end, !dbg !9955

if.else:                                          ; preds = %for.end
  %31 = load %struct.ISBBranch*, %struct.ISBBranch** %root.addr, align 8, !dbg !9956
  %index26 = getelementptr inbounds %struct.ISBBranch, %struct.ISBBranch* %31, i32 0, i32 5, !dbg !9957
  store i16 1, i16* %index26, align 2, !dbg !9958
  store i32 1, i32* %i, align 4, !dbg !9959
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %32 = load %struct.MemArena*, %struct.MemArena** %mem.addr, align 8, !dbg !9960
  %call = call i8* @BLI_memarena_alloc(%struct.MemArena* %32, i64 64), !dbg !9961
  %33 = bitcast i8* %call to %struct.ISBBranch*, !dbg !9961
  %34 = load %struct.ISBBranch*, %struct.ISBBranch** %root.addr, align 8, !dbg !9962
  %left27 = getelementptr inbounds %struct.ISBBranch, %struct.ISBBranch* %34, i32 0, i32 0, !dbg !9963
  store %struct.ISBBranch* %33, %struct.ISBBranch** %left27, align 8, !dbg !9964
  store %struct.ISBBranch* %33, %struct.ISBBranch** %left, align 8, !dbg !9965
  %35 = load %struct.MemArena*, %struct.MemArena** %mem.addr, align 8, !dbg !9966
  %call28 = call i8* @BLI_memarena_alloc(%struct.MemArena* %35, i64 64), !dbg !9967
  %36 = bitcast i8* %call28 to %struct.ISBBranch*, !dbg !9967
  %37 = load %struct.ISBBranch*, %struct.ISBBranch** %root.addr, align 8, !dbg !9968
  %right29 = getelementptr inbounds %struct.ISBBranch, %struct.ISBBranch* %37, i32 0, i32 1, !dbg !9969
  store %struct.ISBBranch* %36, %struct.ISBBranch** %right29, align 8, !dbg !9970
  store %struct.ISBBranch* %36, %struct.ISBBranch** %right, align 8, !dbg !9971
  %38 = load %struct.MemArena*, %struct.MemArena** %mem.addr, align 8, !dbg !9972
  %call30 = call i8* @BLI_memarena_alloc(%struct.MemArena* %38, i64 1024), !dbg !9973
  %39 = bitcast i8* %call30 to %struct.ISBSample**, !dbg !9973
  %40 = load %struct.ISBBranch*, %struct.ISBBranch** %left, align 8, !dbg !9974
  %samples31 = getelementptr inbounds %struct.ISBBranch, %struct.ISBBranch* %40, i32 0, i32 8, !dbg !9975
  store %struct.ISBSample** %39, %struct.ISBSample*** %samples31, align 8, !dbg !9976
  %arraydecay = getelementptr inbounds [128 x %struct.ISBSample*], [128 x %struct.ISBSample*]* %samples, i64 0, i64 0, !dbg !9977
  %41 = load %struct.ISBBranch*, %struct.ISBBranch** %right, align 8, !dbg !9978
  %samples32 = getelementptr inbounds %struct.ISBBranch, %struct.ISBBranch* %41, i32 0, i32 8, !dbg !9979
  store %struct.ISBSample** %arraydecay, %struct.ISBSample*** %samples32, align 8, !dbg !9980
  store i32 127, i32* %a, align 4, !dbg !9981
  br label %for.cond33, !dbg !9983

for.cond33:                                       ; preds = %for.inc81, %if.end
  %42 = load i32, i32* %a, align 4, !dbg !9984
  %cmp34 = icmp sge i32 %42, 0, !dbg !9986
  br i1 %cmp34, label %for.body35, label %for.end83, !dbg !9987

for.body35:                                       ; preds = %for.cond33
  call void @llvm.dbg.declare(metadata i32* %comp, metadata !9988, metadata !DIExpression()), !dbg !9990
  store i32 0, i32* %comp, align 4, !dbg !9990
  %43 = load %struct.ISBBranch*, %struct.ISBBranch** %root.addr, align 8, !dbg !9991
  %samples36 = getelementptr inbounds %struct.ISBBranch, %struct.ISBBranch* %43, i32 0, i32 8, !dbg !9993
  %44 = load %struct.ISBSample**, %struct.ISBSample*** %samples36, align 8, !dbg !9993
  %45 = load i32, i32* %a, align 4, !dbg !9994
  %idxprom37 = sext i32 %45 to i64, !dbg !9991
  %arrayidx38 = getelementptr inbounds %struct.ISBSample*, %struct.ISBSample** %44, i64 %idxprom37, !dbg !9991
  %46 = load %struct.ISBSample*, %struct.ISBSample** %arrayidx38, align 8, !dbg !9991
  %zco39 = getelementptr inbounds %struct.ISBSample, %struct.ISBSample* %46, i32 0, i32 0, !dbg !9995
  %47 = load i32, i32* %i, align 4, !dbg !9996
  %idxprom40 = sext i32 %47 to i64, !dbg !9991
  %arrayidx41 = getelementptr inbounds [3 x float], [3 x float]* %zco39, i64 0, i64 %idxprom40, !dbg !9991
  %48 = load float, float* %arrayidx41, align 4, !dbg !9991
  %49 = load %struct.ISBBranch*, %struct.ISBBranch** %root.addr, align 8, !dbg !9997
  %divider42 = getelementptr inbounds %struct.ISBBranch, %struct.ISBBranch* %49, i32 0, i32 2, !dbg !9998
  %50 = load i32, i32* %i, align 4, !dbg !9999
  %idxprom43 = sext i32 %50 to i64, !dbg !9997
  %arrayidx44 = getelementptr inbounds [2 x float], [2 x float]* %divider42, i64 0, i64 %idxprom43, !dbg !9997
  %51 = load float, float* %arrayidx44, align 4, !dbg !9997
  %cmp45 = fcmp oeq float %48, %51, !dbg !10000
  br i1 %cmp45, label %if.then46, label %if.else47, !dbg !10001

if.then46:                                        ; preds = %for.body35
  %52 = load i32, i32* %a, align 4, !dbg !10002
  %and = and i32 %52, 1, !dbg !10003
  store i32 %and, i32* %comp, align 4, !dbg !10004
  br label %if.end60, !dbg !10005

if.else47:                                        ; preds = %for.body35
  %53 = load %struct.ISBBranch*, %struct.ISBBranch** %root.addr, align 8, !dbg !10006
  %samples48 = getelementptr inbounds %struct.ISBBranch, %struct.ISBBranch* %53, i32 0, i32 8, !dbg !10008
  %54 = load %struct.ISBSample**, %struct.ISBSample*** %samples48, align 8, !dbg !10008
  %55 = load i32, i32* %a, align 4, !dbg !10009
  %idxprom49 = sext i32 %55 to i64, !dbg !10006
  %arrayidx50 = getelementptr inbounds %struct.ISBSample*, %struct.ISBSample** %54, i64 %idxprom49, !dbg !10006
  %56 = load %struct.ISBSample*, %struct.ISBSample** %arrayidx50, align 8, !dbg !10006
  %zco51 = getelementptr inbounds %struct.ISBSample, %struct.ISBSample* %56, i32 0, i32 0, !dbg !10010
  %57 = load i32, i32* %i, align 4, !dbg !10011
  %idxprom52 = sext i32 %57 to i64, !dbg !10006
  %arrayidx53 = getelementptr inbounds [3 x float], [3 x float]* %zco51, i64 0, i64 %idxprom52, !dbg !10006
  %58 = load float, float* %arrayidx53, align 4, !dbg !10006
  %59 = load %struct.ISBBranch*, %struct.ISBBranch** %root.addr, align 8, !dbg !10012
  %divider54 = getelementptr inbounds %struct.ISBBranch, %struct.ISBBranch* %59, i32 0, i32 2, !dbg !10013
  %60 = load i32, i32* %i, align 4, !dbg !10014
  %idxprom55 = sext i32 %60 to i64, !dbg !10012
  %arrayidx56 = getelementptr inbounds [2 x float], [2 x float]* %divider54, i64 0, i64 %idxprom55, !dbg !10012
  %61 = load float, float* %arrayidx56, align 4, !dbg !10012
  %cmp57 = fcmp olt float %58, %61, !dbg !10015
  br i1 %cmp57, label %if.then58, label %if.end59, !dbg !10016

if.then58:                                        ; preds = %if.else47
  store i32 1, i32* %comp, align 4, !dbg !10017
  br label %if.end59, !dbg !10018

if.end59:                                         ; preds = %if.then58, %if.else47
  br label %if.end60

if.end60:                                         ; preds = %if.end59, %if.then46
  %62 = load i32, i32* %comp, align 4, !dbg !10019
  %cmp61 = icmp eq i32 %62, 1, !dbg !10021
  br i1 %cmp61, label %if.then62, label %if.else70, !dbg !10022

if.then62:                                        ; preds = %if.end60
  %63 = load %struct.ISBBranch*, %struct.ISBBranch** %root.addr, align 8, !dbg !10023
  %samples63 = getelementptr inbounds %struct.ISBBranch, %struct.ISBBranch* %63, i32 0, i32 8, !dbg !10025
  %64 = load %struct.ISBSample**, %struct.ISBSample*** %samples63, align 8, !dbg !10025
  %65 = load i32, i32* %a, align 4, !dbg !10026
  %idxprom64 = sext i32 %65 to i64, !dbg !10023
  %arrayidx65 = getelementptr inbounds %struct.ISBSample*, %struct.ISBSample** %64, i64 %idxprom64, !dbg !10023
  %66 = load %struct.ISBSample*, %struct.ISBSample** %arrayidx65, align 8, !dbg !10023
  %67 = load %struct.ISBBranch*, %struct.ISBBranch** %left, align 8, !dbg !10027
  %samples66 = getelementptr inbounds %struct.ISBBranch, %struct.ISBBranch* %67, i32 0, i32 8, !dbg !10028
  %68 = load %struct.ISBSample**, %struct.ISBSample*** %samples66, align 8, !dbg !10028
  %69 = load %struct.ISBBranch*, %struct.ISBBranch** %left, align 8, !dbg !10029
  %totsamp = getelementptr inbounds %struct.ISBBranch, %struct.ISBBranch* %69, i32 0, i32 4, !dbg !10030
  %70 = load i16, i16* %totsamp, align 8, !dbg !10030
  %idxprom67 = sext i16 %70 to i64, !dbg !10027
  %arrayidx68 = getelementptr inbounds %struct.ISBSample*, %struct.ISBSample** %68, i64 %idxprom67, !dbg !10027
  store %struct.ISBSample* %66, %struct.ISBSample** %arrayidx68, align 8, !dbg !10031
  %71 = load %struct.ISBBranch*, %struct.ISBBranch** %left, align 8, !dbg !10032
  %totsamp69 = getelementptr inbounds %struct.ISBBranch, %struct.ISBBranch* %71, i32 0, i32 4, !dbg !10033
  %72 = load i16, i16* %totsamp69, align 8, !dbg !10034
  %inc = add i16 %72, 1, !dbg !10034
  store i16 %inc, i16* %totsamp69, align 8, !dbg !10034
  br label %if.end80, !dbg !10035

if.else70:                                        ; preds = %if.end60
  %73 = load %struct.ISBBranch*, %struct.ISBBranch** %root.addr, align 8, !dbg !10036
  %samples71 = getelementptr inbounds %struct.ISBBranch, %struct.ISBBranch* %73, i32 0, i32 8, !dbg !10038
  %74 = load %struct.ISBSample**, %struct.ISBSample*** %samples71, align 8, !dbg !10038
  %75 = load i32, i32* %a, align 4, !dbg !10039
  %idxprom72 = sext i32 %75 to i64, !dbg !10036
  %arrayidx73 = getelementptr inbounds %struct.ISBSample*, %struct.ISBSample** %74, i64 %idxprom72, !dbg !10036
  %76 = load %struct.ISBSample*, %struct.ISBSample** %arrayidx73, align 8, !dbg !10036
  %77 = load %struct.ISBBranch*, %struct.ISBBranch** %right, align 8, !dbg !10040
  %samples74 = getelementptr inbounds %struct.ISBBranch, %struct.ISBBranch* %77, i32 0, i32 8, !dbg !10041
  %78 = load %struct.ISBSample**, %struct.ISBSample*** %samples74, align 8, !dbg !10041
  %79 = load %struct.ISBBranch*, %struct.ISBBranch** %right, align 8, !dbg !10042
  %totsamp75 = getelementptr inbounds %struct.ISBBranch, %struct.ISBBranch* %79, i32 0, i32 4, !dbg !10043
  %80 = load i16, i16* %totsamp75, align 8, !dbg !10043
  %idxprom76 = sext i16 %80 to i64, !dbg !10040
  %arrayidx77 = getelementptr inbounds %struct.ISBSample*, %struct.ISBSample** %78, i64 %idxprom76, !dbg !10040
  store %struct.ISBSample* %76, %struct.ISBSample** %arrayidx77, align 8, !dbg !10044
  %81 = load %struct.ISBBranch*, %struct.ISBBranch** %right, align 8, !dbg !10045
  %totsamp78 = getelementptr inbounds %struct.ISBBranch, %struct.ISBBranch* %81, i32 0, i32 4, !dbg !10046
  %82 = load i16, i16* %totsamp78, align 8, !dbg !10047
  %inc79 = add i16 %82, 1, !dbg !10047
  store i16 %inc79, i16* %totsamp78, align 8, !dbg !10047
  br label %if.end80

if.end80:                                         ; preds = %if.else70, %if.then62
  br label %for.inc81, !dbg !10048

for.inc81:                                        ; preds = %if.end80
  %83 = load i32, i32* %a, align 4, !dbg !10049
  %dec82 = add nsw i32 %83, -1, !dbg !10049
  store i32 %dec82, i32* %a, align 4, !dbg !10049
  br label %for.cond33, !dbg !10050, !llvm.loop !10051

for.end83:                                        ; preds = %for.cond33
  %84 = load %struct.ISBBranch*, %struct.ISBBranch** %root.addr, align 8, !dbg !10053
  %samples84 = getelementptr inbounds %struct.ISBBranch, %struct.ISBBranch* %84, i32 0, i32 8, !dbg !10054
  %85 = load %struct.ISBSample**, %struct.ISBSample*** %samples84, align 8, !dbg !10054
  %86 = bitcast %struct.ISBSample** %85 to i8*, !dbg !10055
  %arraydecay85 = getelementptr inbounds [128 x %struct.ISBSample*], [128 x %struct.ISBSample*]* %samples, i64 0, i64 0, !dbg !10055
  %87 = bitcast %struct.ISBSample** %arraydecay85 to i8*, !dbg !10055
  %88 = load %struct.ISBBranch*, %struct.ISBBranch** %right, align 8, !dbg !10056
  %totsamp86 = getelementptr inbounds %struct.ISBBranch, %struct.ISBBranch* %88, i32 0, i32 4, !dbg !10057
  %89 = load i16, i16* %totsamp86, align 8, !dbg !10057
  %conv = sext i16 %89 to i64, !dbg !10056
  %mul = mul i64 %conv, 8, !dbg !10058
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %86, i8* align 16 %87, i64 %mul, i1 false), !dbg !10055
  %90 = load %struct.ISBBranch*, %struct.ISBBranch** %root.addr, align 8, !dbg !10059
  %samples87 = getelementptr inbounds %struct.ISBBranch, %struct.ISBBranch* %90, i32 0, i32 8, !dbg !10060
  %91 = load %struct.ISBSample**, %struct.ISBSample*** %samples87, align 8, !dbg !10060
  %92 = load %struct.ISBBranch*, %struct.ISBBranch** %right, align 8, !dbg !10061
  %samples88 = getelementptr inbounds %struct.ISBBranch, %struct.ISBBranch* %92, i32 0, i32 8, !dbg !10062
  store %struct.ISBSample** %91, %struct.ISBSample*** %samples88, align 8, !dbg !10063
  %93 = load %struct.ISBBranch*, %struct.ISBBranch** %root.addr, align 8, !dbg !10064
  %samples89 = getelementptr inbounds %struct.ISBBranch, %struct.ISBBranch* %93, i32 0, i32 8, !dbg !10065
  store %struct.ISBSample** null, %struct.ISBSample*** %samples89, align 8, !dbg !10066
  %94 = load %struct.ISBBranch*, %struct.ISBBranch** %left, align 8, !dbg !10067
  %box90 = getelementptr inbounds %struct.ISBBranch, %struct.ISBBranch* %94, i32 0, i32 3, !dbg !10068
  %95 = load %struct.ISBBranch*, %struct.ISBBranch** %root.addr, align 8, !dbg !10069
  %box91 = getelementptr inbounds %struct.ISBBranch, %struct.ISBBranch* %95, i32 0, i32 3, !dbg !10070
  %96 = bitcast %struct.Boxf* %box90 to i8*, !dbg !10070
  %97 = bitcast %struct.Boxf* %box91 to i8*, !dbg !10070
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %96, i8* align 8 %97, i64 24, i1 false), !dbg !10070
  %98 = load %struct.ISBBranch*, %struct.ISBBranch** %right, align 8, !dbg !10071
  %box92 = getelementptr inbounds %struct.ISBBranch, %struct.ISBBranch* %98, i32 0, i32 3, !dbg !10072
  %99 = load %struct.ISBBranch*, %struct.ISBBranch** %root.addr, align 8, !dbg !10073
  %box93 = getelementptr inbounds %struct.ISBBranch, %struct.ISBBranch* %99, i32 0, i32 3, !dbg !10074
  %100 = bitcast %struct.Boxf* %box92 to i8*, !dbg !10074
  %101 = bitcast %struct.Boxf* %box93 to i8*, !dbg !10074
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %100, i8* align 8 %101, i64 24, i1 false), !dbg !10074
  %102 = load i32, i32* %i, align 4, !dbg !10075
  %cmp94 = icmp eq i32 %102, 0, !dbg !10077
  br i1 %cmp94, label %if.then96, label %if.else105, !dbg !10078

if.then96:                                        ; preds = %for.end83
  %103 = load %struct.ISBBranch*, %struct.ISBBranch** %root.addr, align 8, !dbg !10079
  %divider97 = getelementptr inbounds %struct.ISBBranch, %struct.ISBBranch* %103, i32 0, i32 2, !dbg !10081
  %arrayidx98 = getelementptr inbounds [2 x float], [2 x float]* %divider97, i64 0, i64 0, !dbg !10079
  %104 = load float, float* %arrayidx98, align 8, !dbg !10079
  %105 = load %struct.ISBBranch*, %struct.ISBBranch** %left, align 8, !dbg !10082
  %box99 = getelementptr inbounds %struct.ISBBranch, %struct.ISBBranch* %105, i32 0, i32 3, !dbg !10083
  %xmax100 = getelementptr inbounds %struct.Boxf, %struct.Boxf* %box99, i32 0, i32 1, !dbg !10084
  store float %104, float* %xmax100, align 4, !dbg !10085
  %106 = load %struct.ISBBranch*, %struct.ISBBranch** %root.addr, align 8, !dbg !10086
  %divider101 = getelementptr inbounds %struct.ISBBranch, %struct.ISBBranch* %106, i32 0, i32 2, !dbg !10087
  %arrayidx102 = getelementptr inbounds [2 x float], [2 x float]* %divider101, i64 0, i64 0, !dbg !10086
  %107 = load float, float* %arrayidx102, align 8, !dbg !10086
  %108 = load %struct.ISBBranch*, %struct.ISBBranch** %right, align 8, !dbg !10088
  %box103 = getelementptr inbounds %struct.ISBBranch, %struct.ISBBranch* %108, i32 0, i32 3, !dbg !10089
  %xmin104 = getelementptr inbounds %struct.Boxf, %struct.Boxf* %box103, i32 0, i32 0, !dbg !10090
  store float %107, float* %xmin104, align 8, !dbg !10091
  br label %if.end114, !dbg !10092

if.else105:                                       ; preds = %for.end83
  %109 = load %struct.ISBBranch*, %struct.ISBBranch** %root.addr, align 8, !dbg !10093
  %divider106 = getelementptr inbounds %struct.ISBBranch, %struct.ISBBranch* %109, i32 0, i32 2, !dbg !10095
  %arrayidx107 = getelementptr inbounds [2 x float], [2 x float]* %divider106, i64 0, i64 1, !dbg !10093
  %110 = load float, float* %arrayidx107, align 4, !dbg !10093
  %111 = load %struct.ISBBranch*, %struct.ISBBranch** %left, align 8, !dbg !10096
  %box108 = getelementptr inbounds %struct.ISBBranch, %struct.ISBBranch* %111, i32 0, i32 3, !dbg !10097
  %ymax109 = getelementptr inbounds %struct.Boxf, %struct.Boxf* %box108, i32 0, i32 3, !dbg !10098
  store float %110, float* %ymax109, align 4, !dbg !10099
  %112 = load %struct.ISBBranch*, %struct.ISBBranch** %root.addr, align 8, !dbg !10100
  %divider110 = getelementptr inbounds %struct.ISBBranch, %struct.ISBBranch* %112, i32 0, i32 2, !dbg !10101
  %arrayidx111 = getelementptr inbounds [2 x float], [2 x float]* %divider110, i64 0, i64 1, !dbg !10100
  %113 = load float, float* %arrayidx111, align 4, !dbg !10100
  %114 = load %struct.ISBBranch*, %struct.ISBBranch** %right, align 8, !dbg !10102
  %box112 = getelementptr inbounds %struct.ISBBranch, %struct.ISBBranch* %114, i32 0, i32 3, !dbg !10103
  %ymin113 = getelementptr inbounds %struct.Boxf, %struct.Boxf* %box112, i32 0, i32 2, !dbg !10104
  store float %113, float* %ymin113, align 8, !dbg !10105
  br label %if.end114

if.end114:                                        ; preds = %if.else105, %if.then96
  ret void, !dbg !10106
}

; Function Attrs: noinline nounwind uwtable
define internal void @isb_bsp_recalc_box(%struct.ISBBranch* %root) #0 !dbg !10107 {
entry:
  %root.addr = alloca %struct.ISBBranch*, align 8
  %a = alloca i32, align 4
  store %struct.ISBBranch* %root, %struct.ISBBranch** %root.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ISBBranch** %root.addr, metadata !10110, metadata !DIExpression()), !dbg !10111
  %0 = load %struct.ISBBranch*, %struct.ISBBranch** %root.addr, align 8, !dbg !10112
  %left = getelementptr inbounds %struct.ISBBranch, %struct.ISBBranch* %0, i32 0, i32 0, !dbg !10114
  %1 = load %struct.ISBBranch*, %struct.ISBBranch** %left, align 8, !dbg !10114
  %tobool = icmp ne %struct.ISBBranch* %1, null, !dbg !10112
  br i1 %tobool, label %if.then, label %if.else, !dbg !10115

if.then:                                          ; preds = %entry
  %2 = load %struct.ISBBranch*, %struct.ISBBranch** %root.addr, align 8, !dbg !10116
  %left1 = getelementptr inbounds %struct.ISBBranch, %struct.ISBBranch* %2, i32 0, i32 0, !dbg !10118
  %3 = load %struct.ISBBranch*, %struct.ISBBranch** %left1, align 8, !dbg !10118
  call void @isb_bsp_recalc_box(%struct.ISBBranch* %3), !dbg !10119
  %4 = load %struct.ISBBranch*, %struct.ISBBranch** %root.addr, align 8, !dbg !10120
  %right = getelementptr inbounds %struct.ISBBranch, %struct.ISBBranch* %4, i32 0, i32 1, !dbg !10121
  %5 = load %struct.ISBBranch*, %struct.ISBBranch** %right, align 8, !dbg !10121
  call void @isb_bsp_recalc_box(%struct.ISBBranch* %5), !dbg !10122
  br label %if.end7, !dbg !10123

if.else:                                          ; preds = %entry
  %6 = load %struct.ISBBranch*, %struct.ISBBranch** %root.addr, align 8, !dbg !10124
  %totsamp = getelementptr inbounds %struct.ISBBranch, %struct.ISBBranch* %6, i32 0, i32 4, !dbg !10126
  %7 = load i16, i16* %totsamp, align 8, !dbg !10126
  %tobool2 = icmp ne i16 %7, 0, !dbg !10124
  br i1 %tobool2, label %if.then3, label %if.end, !dbg !10127

if.then3:                                         ; preds = %if.else
  call void @llvm.dbg.declare(metadata i32* %a, metadata !10128, metadata !DIExpression()), !dbg !10130
  %8 = load %struct.ISBBranch*, %struct.ISBBranch** %root.addr, align 8, !dbg !10131
  %box = getelementptr inbounds %struct.ISBBranch, %struct.ISBBranch* %8, i32 0, i32 3, !dbg !10132
  call void @init_box(%struct.Boxf* %box), !dbg !10133
  %9 = load %struct.ISBBranch*, %struct.ISBBranch** %root.addr, align 8, !dbg !10134
  %totsamp4 = getelementptr inbounds %struct.ISBBranch, %struct.ISBBranch* %9, i32 0, i32 4, !dbg !10136
  %10 = load i16, i16* %totsamp4, align 8, !dbg !10136
  %conv = sext i16 %10 to i32, !dbg !10134
  %sub = sub nsw i32 %conv, 1, !dbg !10137
  store i32 %sub, i32* %a, align 4, !dbg !10138
  br label %for.cond, !dbg !10139

for.cond:                                         ; preds = %for.inc, %if.then3
  %11 = load i32, i32* %a, align 4, !dbg !10140
  %cmp = icmp sge i32 %11, 0, !dbg !10142
  br i1 %cmp, label %for.body, label %for.end, !dbg !10143

for.body:                                         ; preds = %for.cond
  %12 = load %struct.ISBBranch*, %struct.ISBBranch** %root.addr, align 8, !dbg !10144
  %box6 = getelementptr inbounds %struct.ISBBranch, %struct.ISBBranch* %12, i32 0, i32 3, !dbg !10145
  %13 = load %struct.ISBBranch*, %struct.ISBBranch** %root.addr, align 8, !dbg !10146
  %samples = getelementptr inbounds %struct.ISBBranch, %struct.ISBBranch* %13, i32 0, i32 8, !dbg !10147
  %14 = load %struct.ISBSample**, %struct.ISBSample*** %samples, align 8, !dbg !10147
  %15 = load i32, i32* %a, align 4, !dbg !10148
  %idxprom = sext i32 %15 to i64, !dbg !10146
  %arrayidx = getelementptr inbounds %struct.ISBSample*, %struct.ISBSample** %14, i64 %idxprom, !dbg !10146
  %16 = load %struct.ISBSample*, %struct.ISBSample** %arrayidx, align 8, !dbg !10146
  %zco = getelementptr inbounds %struct.ISBSample, %struct.ISBSample* %16, i32 0, i32 0, !dbg !10149
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %zco, i64 0, i64 0, !dbg !10146
  call void @bound_boxf(%struct.Boxf* %box6, float* %arraydecay), !dbg !10150
  br label %for.inc, !dbg !10150

for.inc:                                          ; preds = %for.body
  %17 = load i32, i32* %a, align 4, !dbg !10151
  %dec = add nsw i32 %17, -1, !dbg !10151
  store i32 %dec, i32* %a, align 4, !dbg !10151
  br label %for.cond, !dbg !10152, !llvm.loop !10153

for.end:                                          ; preds = %for.cond
  br label %if.end, !dbg !10155

if.end:                                           ; preds = %for.end, %if.else
  br label %if.end7

if.end7:                                          ; preds = %if.end, %if.then
  ret void, !dbg !10156
}

declare dso_local void @zbuf_alloc_span(%struct.ZSpan*, i32, i32, float) #4

; Function Attrs: noinline nounwind uwtable
define internal void @isb_bsp_test_face(%struct.ZSpan* %zspan, i32 %obi, i32 %zvlnr, float* %v1, float* %v2, float* %v3, float* %v4) #0 !dbg !10157 {
entry:
  %zspan.addr = alloca %struct.ZSpan*, align 8
  %obi.addr = alloca i32, align 4
  %zvlnr.addr = alloca i32, align 4
  %v1.addr = alloca float*, align 8
  %v2.addr = alloca float*, align 8
  %v3.addr = alloca float*, align 8
  %v4.addr = alloca float*, align 8
  %face = alloca %struct.BSPFace, align 8
  store %struct.ZSpan* %zspan, %struct.ZSpan** %zspan.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ZSpan** %zspan.addr, metadata !10161, metadata !DIExpression()), !dbg !10162
  store i32 %obi, i32* %obi.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %obi.addr, metadata !10163, metadata !DIExpression()), !dbg !10164
  store i32 %zvlnr, i32* %zvlnr.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %zvlnr.addr, metadata !10165, metadata !DIExpression()), !dbg !10166
  store float* %v1, float** %v1.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v1.addr, metadata !10167, metadata !DIExpression()), !dbg !10168
  store float* %v2, float** %v2.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v2.addr, metadata !10169, metadata !DIExpression()), !dbg !10170
  store float* %v3, float** %v3.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v3.addr, metadata !10171, metadata !DIExpression()), !dbg !10172
  store float* %v4, float** %v4.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v4.addr, metadata !10173, metadata !DIExpression()), !dbg !10174
  call void @llvm.dbg.declare(metadata %struct.BSPFace* %face, metadata !10175, metadata !DIExpression()), !dbg !10195
  %0 = load float*, float** %v1.addr, align 8, !dbg !10196
  %v11 = getelementptr inbounds %struct.BSPFace, %struct.BSPFace* %face, i32 0, i32 1, !dbg !10197
  store float* %0, float** %v11, align 8, !dbg !10198
  %1 = load float*, float** %v2.addr, align 8, !dbg !10199
  %v22 = getelementptr inbounds %struct.BSPFace, %struct.BSPFace* %face, i32 0, i32 2, !dbg !10200
  store float* %1, float** %v22, align 8, !dbg !10201
  %2 = load float*, float** %v3.addr, align 8, !dbg !10202
  %v33 = getelementptr inbounds %struct.BSPFace, %struct.BSPFace* %face, i32 0, i32 3, !dbg !10203
  store float* %2, float** %v33, align 8, !dbg !10204
  %3 = load float*, float** %v4.addr, align 8, !dbg !10205
  %v44 = getelementptr inbounds %struct.BSPFace, %struct.BSPFace* %face, i32 0, i32 4, !dbg !10206
  store float* %3, float** %v44, align 8, !dbg !10207
  %4 = load i32, i32* %obi.addr, align 4, !dbg !10208
  %obi5 = getelementptr inbounds %struct.BSPFace, %struct.BSPFace* %face, i32 0, i32 5, !dbg !10209
  store i32 %4, i32* %obi5, align 8, !dbg !10210
  %5 = load i32, i32* %zvlnr.addr, align 4, !dbg !10211
  %and = and i32 %5, -134217729, !dbg !10212
  %facenr = getelementptr inbounds %struct.BSPFace, %struct.BSPFace* %face, i32 0, i32 6, !dbg !10213
  store i32 %and, i32* %facenr, align 4, !dbg !10214
  %type = getelementptr inbounds %struct.BSPFace, %struct.BSPFace* %face, i32 0, i32 7, !dbg !10215
  store i32 0, i32* %type, align 8, !dbg !10216
  %6 = load i16, i16* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 5), align 2, !dbg !10217
  %tobool = icmp ne i16 %6, 0, !dbg !10219
  br i1 %tobool, label %if.then, label %if.else, !dbg !10220

if.then:                                          ; preds = %entry
  %7 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !10221
  %shad_alpha = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %7, i32 0, i32 27, !dbg !10222
  %8 = load float, float* %shad_alpha, align 4, !dbg !10222
  %mul = fmul float 4.096000e+03, %8, !dbg !10223
  %9 = load i16, i16* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 5), align 2, !dbg !10224
  %conv = sitofp i16 %9 to float, !dbg !10225
  %div = fdiv float %mul, %conv, !dbg !10226
  %conv6 = fpext float %div to double, !dbg !10227
  %10 = call double @llvm.ceil.f64(double %conv6), !dbg !10228
  %conv7 = fptosi double %10 to i16, !dbg !10229
  %shad_alpha8 = getelementptr inbounds %struct.BSPFace, %struct.BSPFace* %face, i32 0, i32 8, !dbg !10230
  store i16 %conv7, i16* %shad_alpha8, align 4, !dbg !10231
  br label %if.end, !dbg !10232

if.else:                                          ; preds = %entry
  %11 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !10233
  %shad_alpha9 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %11, i32 0, i32 27, !dbg !10234
  %12 = load float, float* %shad_alpha9, align 4, !dbg !10234
  %mul10 = fmul float 4.096000e+03, %12, !dbg !10235
  %conv11 = fpext float %mul10 to double, !dbg !10236
  %13 = call double @llvm.ceil.f64(double %conv11), !dbg !10237
  %conv12 = fptosi double %13 to i16, !dbg !10238
  %shad_alpha13 = getelementptr inbounds %struct.BSPFace, %struct.BSPFace* %face, i32 0, i32 8, !dbg !10239
  store i16 %conv12, i16* %shad_alpha13, align 4, !dbg !10240
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %14 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !10241
  %shad_alpha14 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %14, i32 0, i32 27, !dbg !10242
  %15 = load float, float* %shad_alpha14, align 4, !dbg !10242
  %cmp = fcmp oeq float %15, 1.000000e+00, !dbg !10243
  %conv15 = zext i1 %cmp to i32, !dbg !10243
  %conv16 = trunc i32 %conv15 to i16, !dbg !10244
  %is_full = getelementptr inbounds %struct.BSPFace, %struct.BSPFace* %face, i32 0, i32 9, !dbg !10245
  store i16 %conv16, i16* %is_full, align 2, !dbg !10246
  %box = getelementptr inbounds %struct.BSPFace, %struct.BSPFace* %face, i32 0, i32 0, !dbg !10247
  call void @init_box(%struct.Boxf* %box), !dbg !10248
  %box17 = getelementptr inbounds %struct.BSPFace, %struct.BSPFace* %face, i32 0, i32 0, !dbg !10249
  %16 = load float*, float** %v1.addr, align 8, !dbg !10250
  call void @bound_boxf(%struct.Boxf* %box17, float* %16), !dbg !10251
  %box18 = getelementptr inbounds %struct.BSPFace, %struct.BSPFace* %face, i32 0, i32 0, !dbg !10252
  %17 = load float*, float** %v2.addr, align 8, !dbg !10253
  call void @bound_boxf(%struct.Boxf* %box18, float* %17), !dbg !10254
  %box19 = getelementptr inbounds %struct.BSPFace, %struct.BSPFace* %face, i32 0, i32 0, !dbg !10255
  %18 = load float*, float** %v3.addr, align 8, !dbg !10256
  call void @bound_boxf(%struct.Boxf* %box19, float* %18), !dbg !10257
  %19 = load float*, float** %v4.addr, align 8, !dbg !10258
  %tobool20 = icmp ne float* %19, null, !dbg !10258
  br i1 %tobool20, label %if.then21, label %if.end23, !dbg !10260

if.then21:                                        ; preds = %if.end
  %box22 = getelementptr inbounds %struct.BSPFace, %struct.BSPFace* %face, i32 0, i32 0, !dbg !10261
  %20 = load float*, float** %v4.addr, align 8, !dbg !10262
  call void @bound_boxf(%struct.Boxf* %box22, float* %20), !dbg !10263
  br label %if.end23, !dbg !10263

if.end23:                                         ; preds = %if.then21, %if.end
  %21 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !10264
  %rectz = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %21, i32 0, i32 16, !dbg !10265
  %22 = load i32*, i32** %rectz, align 8, !dbg !10265
  %23 = bitcast i32* %22 to %struct.ISBBranch*, !dbg !10266
  call void @isb_bsp_face_inside(%struct.ISBBranch* %23, %struct.BSPFace* %face), !dbg !10267
  ret void, !dbg !10268
}

; Function Attrs: noinline nounwind uwtable
define internal void @isb_bsp_test_strand(%struct.ZSpan* %zspan, i32 %obi, i32 %zvlnr, float* %v1, float* %v2, float* %v3, float* %v4) #0 !dbg !10269 {
entry:
  %zspan.addr = alloca %struct.ZSpan*, align 8
  %obi.addr = alloca i32, align 4
  %zvlnr.addr = alloca i32, align 4
  %v1.addr = alloca float*, align 8
  %v2.addr = alloca float*, align 8
  %v3.addr = alloca float*, align 8
  %v4.addr = alloca float*, align 8
  %face = alloca %struct.BSPFace, align 8
  store %struct.ZSpan* %zspan, %struct.ZSpan** %zspan.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ZSpan** %zspan.addr, metadata !10270, metadata !DIExpression()), !dbg !10271
  store i32 %obi, i32* %obi.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %obi.addr, metadata !10272, metadata !DIExpression()), !dbg !10273
  store i32 %zvlnr, i32* %zvlnr.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %zvlnr.addr, metadata !10274, metadata !DIExpression()), !dbg !10275
  store float* %v1, float** %v1.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v1.addr, metadata !10276, metadata !DIExpression()), !dbg !10277
  store float* %v2, float** %v2.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v2.addr, metadata !10278, metadata !DIExpression()), !dbg !10279
  store float* %v3, float** %v3.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v3.addr, metadata !10280, metadata !DIExpression()), !dbg !10281
  store float* %v4, float** %v4.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v4.addr, metadata !10282, metadata !DIExpression()), !dbg !10283
  call void @llvm.dbg.declare(metadata %struct.BSPFace* %face, metadata !10284, metadata !DIExpression()), !dbg !10285
  %0 = load float*, float** %v1.addr, align 8, !dbg !10286
  %v11 = getelementptr inbounds %struct.BSPFace, %struct.BSPFace* %face, i32 0, i32 1, !dbg !10287
  store float* %0, float** %v11, align 8, !dbg !10288
  %1 = load float*, float** %v2.addr, align 8, !dbg !10289
  %v22 = getelementptr inbounds %struct.BSPFace, %struct.BSPFace* %face, i32 0, i32 2, !dbg !10290
  store float* %1, float** %v22, align 8, !dbg !10291
  %2 = load float*, float** %v3.addr, align 8, !dbg !10292
  %v33 = getelementptr inbounds %struct.BSPFace, %struct.BSPFace* %face, i32 0, i32 3, !dbg !10293
  store float* %2, float** %v33, align 8, !dbg !10294
  %3 = load float*, float** %v4.addr, align 8, !dbg !10295
  %v44 = getelementptr inbounds %struct.BSPFace, %struct.BSPFace* %face, i32 0, i32 4, !dbg !10296
  store float* %3, float** %v44, align 8, !dbg !10297
  %4 = load i32, i32* %obi.addr, align 4, !dbg !10298
  %obi5 = getelementptr inbounds %struct.BSPFace, %struct.BSPFace* %face, i32 0, i32 5, !dbg !10299
  store i32 %4, i32* %obi5, align 8, !dbg !10300
  %5 = load i32, i32* %zvlnr.addr, align 4, !dbg !10301
  %and = and i32 %5, -134217729, !dbg !10302
  %facenr = getelementptr inbounds %struct.BSPFace, %struct.BSPFace* %face, i32 0, i32 6, !dbg !10303
  store i32 %and, i32* %facenr, align 4, !dbg !10304
  %type = getelementptr inbounds %struct.BSPFace, %struct.BSPFace* %face, i32 0, i32 7, !dbg !10305
  store i32 4, i32* %type, align 8, !dbg !10306
  %6 = load i16, i16* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 5), align 2, !dbg !10307
  %tobool = icmp ne i16 %6, 0, !dbg !10309
  br i1 %tobool, label %if.then, label %if.else, !dbg !10310

if.then:                                          ; preds = %entry
  %7 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !10311
  %shad_alpha = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %7, i32 0, i32 27, !dbg !10312
  %8 = load float, float* %shad_alpha, align 4, !dbg !10312
  %mul = fmul float 4.096000e+03, %8, !dbg !10313
  %9 = load i16, i16* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 5), align 2, !dbg !10314
  %conv = sitofp i16 %9 to float, !dbg !10315
  %div = fdiv float %mul, %conv, !dbg !10316
  %conv6 = fpext float %div to double, !dbg !10317
  %10 = call double @llvm.ceil.f64(double %conv6), !dbg !10318
  %conv7 = fptosi double %10 to i16, !dbg !10319
  %shad_alpha8 = getelementptr inbounds %struct.BSPFace, %struct.BSPFace* %face, i32 0, i32 8, !dbg !10320
  store i16 %conv7, i16* %shad_alpha8, align 4, !dbg !10321
  br label %if.end, !dbg !10322

if.else:                                          ; preds = %entry
  %11 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !10323
  %shad_alpha9 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %11, i32 0, i32 27, !dbg !10324
  %12 = load float, float* %shad_alpha9, align 4, !dbg !10324
  %mul10 = fmul float 4.096000e+03, %12, !dbg !10325
  %conv11 = fpext float %mul10 to double, !dbg !10326
  %13 = call double @llvm.ceil.f64(double %conv11), !dbg !10327
  %conv12 = fptosi double %13 to i16, !dbg !10328
  %shad_alpha13 = getelementptr inbounds %struct.BSPFace, %struct.BSPFace* %face, i32 0, i32 8, !dbg !10329
  store i16 %conv12, i16* %shad_alpha13, align 4, !dbg !10330
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %14 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !10331
  %shad_alpha14 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %14, i32 0, i32 27, !dbg !10332
  %15 = load float, float* %shad_alpha14, align 4, !dbg !10332
  %cmp = fcmp oeq float %15, 1.000000e+00, !dbg !10333
  %conv15 = zext i1 %cmp to i32, !dbg !10333
  %conv16 = trunc i32 %conv15 to i16, !dbg !10334
  %is_full = getelementptr inbounds %struct.BSPFace, %struct.BSPFace* %face, i32 0, i32 9, !dbg !10335
  store i16 %conv16, i16* %is_full, align 2, !dbg !10336
  %box = getelementptr inbounds %struct.BSPFace, %struct.BSPFace* %face, i32 0, i32 0, !dbg !10337
  call void @init_box(%struct.Boxf* %box), !dbg !10338
  %box17 = getelementptr inbounds %struct.BSPFace, %struct.BSPFace* %face, i32 0, i32 0, !dbg !10339
  %16 = load float*, float** %v1.addr, align 8, !dbg !10340
  call void @bound_boxf(%struct.Boxf* %box17, float* %16), !dbg !10341
  %box18 = getelementptr inbounds %struct.BSPFace, %struct.BSPFace* %face, i32 0, i32 0, !dbg !10342
  %17 = load float*, float** %v2.addr, align 8, !dbg !10343
  call void @bound_boxf(%struct.Boxf* %box18, float* %17), !dbg !10344
  %box19 = getelementptr inbounds %struct.BSPFace, %struct.BSPFace* %face, i32 0, i32 0, !dbg !10345
  %18 = load float*, float** %v3.addr, align 8, !dbg !10346
  call void @bound_boxf(%struct.Boxf* %box19, float* %18), !dbg !10347
  %19 = load float*, float** %v4.addr, align 8, !dbg !10348
  %tobool20 = icmp ne float* %19, null, !dbg !10348
  br i1 %tobool20, label %if.then21, label %if.end23, !dbg !10350

if.then21:                                        ; preds = %if.end
  %box22 = getelementptr inbounds %struct.BSPFace, %struct.BSPFace* %face, i32 0, i32 0, !dbg !10351
  %20 = load float*, float** %v4.addr, align 8, !dbg !10352
  call void @bound_boxf(%struct.Boxf* %box22, float* %20), !dbg !10353
  br label %if.end23, !dbg !10353

if.end23:                                         ; preds = %if.then21, %if.end
  call void @bspface_init_strand(%struct.BSPFace* %face), !dbg !10354
  %21 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !10355
  %rectz = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %21, i32 0, i32 16, !dbg !10356
  %22 = load i32*, i32** %rectz, align 8, !dbg !10356
  %23 = bitcast i32* %22 to %struct.ISBBranch*, !dbg !10357
  call void @isb_bsp_face_inside(%struct.ISBBranch* %23, %struct.BSPFace* %face), !dbg !10358
  ret void, !dbg !10359
}

declare dso_local void @projectvert(float*, [4 x float]*, float*) #4

; Function Attrs: noinline nounwind uwtable
define internal i32 @testclip_minmax(float* %ho, float* %minmax) #0 !dbg !10360 {
entry:
  %ho.addr = alloca float*, align 8
  %minmax.addr = alloca float*, align 8
  %wco = alloca float, align 4
  %flag = alloca i32, align 4
  store float* %ho, float** %ho.addr, align 8
  call void @llvm.dbg.declare(metadata float** %ho.addr, metadata !10363, metadata !DIExpression()), !dbg !10364
  store float* %minmax, float** %minmax.addr, align 8
  call void @llvm.dbg.declare(metadata float** %minmax.addr, metadata !10365, metadata !DIExpression()), !dbg !10366
  call void @llvm.dbg.declare(metadata float* %wco, metadata !10367, metadata !DIExpression()), !dbg !10368
  %0 = load float*, float** %ho.addr, align 8, !dbg !10369
  %arrayidx = getelementptr inbounds float, float* %0, i64 3, !dbg !10369
  %1 = load float, float* %arrayidx, align 4, !dbg !10369
  store float %1, float* %wco, align 4, !dbg !10368
  call void @llvm.dbg.declare(metadata i32* %flag, metadata !10370, metadata !DIExpression()), !dbg !10371
  store i32 0, i32* %flag, align 4, !dbg !10371
  %2 = load float*, float** %ho.addr, align 8, !dbg !10372
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !10372
  %3 = load float, float* %arrayidx1, align 4, !dbg !10372
  %4 = load float*, float** %minmax.addr, align 8, !dbg !10374
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 1, !dbg !10374
  %5 = load float, float* %arrayidx2, align 4, !dbg !10374
  %6 = load float, float* %wco, align 4, !dbg !10375
  %mul = fmul float %5, %6, !dbg !10376
  %cmp = fcmp ogt float %3, %mul, !dbg !10377
  br i1 %cmp, label %if.then, label %if.else, !dbg !10378

if.then:                                          ; preds = %entry
  store i32 1, i32* %flag, align 4, !dbg !10379
  br label %if.end8, !dbg !10380

if.else:                                          ; preds = %entry
  %7 = load float*, float** %ho.addr, align 8, !dbg !10381
  %arrayidx3 = getelementptr inbounds float, float* %7, i64 0, !dbg !10381
  %8 = load float, float* %arrayidx3, align 4, !dbg !10381
  %9 = load float*, float** %minmax.addr, align 8, !dbg !10383
  %arrayidx4 = getelementptr inbounds float, float* %9, i64 0, !dbg !10383
  %10 = load float, float* %arrayidx4, align 4, !dbg !10383
  %11 = load float, float* %wco, align 4, !dbg !10384
  %mul5 = fmul float %10, %11, !dbg !10385
  %cmp6 = fcmp olt float %8, %mul5, !dbg !10386
  br i1 %cmp6, label %if.then7, label %if.end, !dbg !10387

if.then7:                                         ; preds = %if.else
  store i32 2, i32* %flag, align 4, !dbg !10388
  br label %if.end, !dbg !10389

if.end:                                           ; preds = %if.then7, %if.else
  br label %if.end8

if.end8:                                          ; preds = %if.end, %if.then
  %12 = load float*, float** %ho.addr, align 8, !dbg !10390
  %arrayidx9 = getelementptr inbounds float, float* %12, i64 1, !dbg !10390
  %13 = load float, float* %arrayidx9, align 4, !dbg !10390
  %14 = load float*, float** %minmax.addr, align 8, !dbg !10392
  %arrayidx10 = getelementptr inbounds float, float* %14, i64 3, !dbg !10392
  %15 = load float, float* %arrayidx10, align 4, !dbg !10392
  %16 = load float, float* %wco, align 4, !dbg !10393
  %mul11 = fmul float %15, %16, !dbg !10394
  %cmp12 = fcmp ogt float %13, %mul11, !dbg !10395
  br i1 %cmp12, label %if.then13, label %if.else14, !dbg !10396

if.then13:                                        ; preds = %if.end8
  %17 = load i32, i32* %flag, align 4, !dbg !10397
  %or = or i32 %17, 4, !dbg !10397
  store i32 %or, i32* %flag, align 4, !dbg !10397
  br label %if.end22, !dbg !10398

if.else14:                                        ; preds = %if.end8
  %18 = load float*, float** %ho.addr, align 8, !dbg !10399
  %arrayidx15 = getelementptr inbounds float, float* %18, i64 1, !dbg !10399
  %19 = load float, float* %arrayidx15, align 4, !dbg !10399
  %20 = load float*, float** %minmax.addr, align 8, !dbg !10401
  %arrayidx16 = getelementptr inbounds float, float* %20, i64 2, !dbg !10401
  %21 = load float, float* %arrayidx16, align 4, !dbg !10401
  %22 = load float, float* %wco, align 4, !dbg !10402
  %mul17 = fmul float %21, %22, !dbg !10403
  %cmp18 = fcmp olt float %19, %mul17, !dbg !10404
  br i1 %cmp18, label %if.then19, label %if.end21, !dbg !10405

if.then19:                                        ; preds = %if.else14
  %23 = load i32, i32* %flag, align 4, !dbg !10406
  %or20 = or i32 %23, 8, !dbg !10406
  store i32 %or20, i32* %flag, align 4, !dbg !10406
  br label %if.end21, !dbg !10407

if.end21:                                         ; preds = %if.then19, %if.else14
  br label %if.end22

if.end22:                                         ; preds = %if.end21, %if.then13
  %24 = load i32, i32* %flag, align 4, !dbg !10408
  ret i32 %24, !dbg !10409
}

declare dso_local i32 @testclip(float*) #4

declare dso_local void @zbufclipwire(%struct.ZSpan*, i32, i32, i32, float*, float*, float*, float*, i32, i32, i32, i32) #4

declare dso_local void @zbufclip4(%struct.ZSpan*, i32, i32, float*, float*, float*, float*, i32, i32, i32, i32) #4

declare dso_local void @zbufclip(%struct.ZSpan*, i32, i32, float*, float*, float*, i32, i32, i32) #4

declare dso_local void @zbuf_free_span(%struct.ZSpan*) #4

; Function Attrs: noinline nounwind uwtable
define internal void @init_box(%struct.Boxf* %box) #0 !dbg !10410 {
entry:
  %box.addr = alloca %struct.Boxf*, align 8
  store %struct.Boxf* %box, %struct.Boxf** %box.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Boxf** %box.addr, metadata !10414, metadata !DIExpression()), !dbg !10415
  %0 = load %struct.Boxf*, %struct.Boxf** %box.addr, align 8, !dbg !10416
  %xmin = getelementptr inbounds %struct.Boxf, %struct.Boxf* %0, i32 0, i32 0, !dbg !10417
  store float 1.000000e+06, float* %xmin, align 4, !dbg !10418
  %1 = load %struct.Boxf*, %struct.Boxf** %box.addr, align 8, !dbg !10419
  %xmax = getelementptr inbounds %struct.Boxf, %struct.Boxf* %1, i32 0, i32 1, !dbg !10420
  store float 0.000000e+00, float* %xmax, align 4, !dbg !10421
  %2 = load %struct.Boxf*, %struct.Boxf** %box.addr, align 8, !dbg !10422
  %ymin = getelementptr inbounds %struct.Boxf, %struct.Boxf* %2, i32 0, i32 2, !dbg !10423
  store float 1.000000e+06, float* %ymin, align 4, !dbg !10424
  %3 = load %struct.Boxf*, %struct.Boxf** %box.addr, align 8, !dbg !10425
  %ymax = getelementptr inbounds %struct.Boxf, %struct.Boxf* %3, i32 0, i32 3, !dbg !10426
  store float 0.000000e+00, float* %ymax, align 4, !dbg !10427
  %4 = load %struct.Boxf*, %struct.Boxf** %box.addr, align 8, !dbg !10428
  %zmin = getelementptr inbounds %struct.Boxf, %struct.Boxf* %4, i32 0, i32 4, !dbg !10429
  store float 0x41E0000000000000, float* %zmin, align 4, !dbg !10430
  %5 = load %struct.Boxf*, %struct.Boxf** %box.addr, align 8, !dbg !10431
  %zmax = getelementptr inbounds %struct.Boxf, %struct.Boxf* %5, i32 0, i32 5, !dbg !10432
  store float 0xC1E0000000000000, float* %zmax, align 4, !dbg !10433
  ret void, !dbg !10434
}

; Function Attrs: noinline nounwind uwtable
define internal void @bound_boxf(%struct.Boxf* %box, float* %v1) #0 !dbg !10435 {
entry:
  %box.addr = alloca %struct.Boxf*, align 8
  %v1.addr = alloca float*, align 8
  store %struct.Boxf* %box, %struct.Boxf** %box.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Boxf** %box.addr, metadata !10438, metadata !DIExpression()), !dbg !10439
  store float* %v1, float** %v1.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v1.addr, metadata !10440, metadata !DIExpression()), !dbg !10441
  %0 = load float*, float** %v1.addr, align 8, !dbg !10442
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !10442
  %1 = load float, float* %arrayidx, align 4, !dbg !10442
  %2 = load %struct.Boxf*, %struct.Boxf** %box.addr, align 8, !dbg !10444
  %xmin = getelementptr inbounds %struct.Boxf, %struct.Boxf* %2, i32 0, i32 0, !dbg !10445
  %3 = load float, float* %xmin, align 4, !dbg !10445
  %cmp = fcmp olt float %1, %3, !dbg !10446
  br i1 %cmp, label %if.then, label %if.end, !dbg !10447

if.then:                                          ; preds = %entry
  %4 = load float*, float** %v1.addr, align 8, !dbg !10448
  %arrayidx1 = getelementptr inbounds float, float* %4, i64 0, !dbg !10448
  %5 = load float, float* %arrayidx1, align 4, !dbg !10448
  %6 = load %struct.Boxf*, %struct.Boxf** %box.addr, align 8, !dbg !10449
  %xmin2 = getelementptr inbounds %struct.Boxf, %struct.Boxf* %6, i32 0, i32 0, !dbg !10450
  store float %5, float* %xmin2, align 4, !dbg !10451
  br label %if.end, !dbg !10449

if.end:                                           ; preds = %if.then, %entry
  %7 = load float*, float** %v1.addr, align 8, !dbg !10452
  %arrayidx3 = getelementptr inbounds float, float* %7, i64 0, !dbg !10452
  %8 = load float, float* %arrayidx3, align 4, !dbg !10452
  %9 = load %struct.Boxf*, %struct.Boxf** %box.addr, align 8, !dbg !10454
  %xmax = getelementptr inbounds %struct.Boxf, %struct.Boxf* %9, i32 0, i32 1, !dbg !10455
  %10 = load float, float* %xmax, align 4, !dbg !10455
  %cmp4 = fcmp ogt float %8, %10, !dbg !10456
  br i1 %cmp4, label %if.then5, label %if.end8, !dbg !10457

if.then5:                                         ; preds = %if.end
  %11 = load float*, float** %v1.addr, align 8, !dbg !10458
  %arrayidx6 = getelementptr inbounds float, float* %11, i64 0, !dbg !10458
  %12 = load float, float* %arrayidx6, align 4, !dbg !10458
  %13 = load %struct.Boxf*, %struct.Boxf** %box.addr, align 8, !dbg !10459
  %xmax7 = getelementptr inbounds %struct.Boxf, %struct.Boxf* %13, i32 0, i32 1, !dbg !10460
  store float %12, float* %xmax7, align 4, !dbg !10461
  br label %if.end8, !dbg !10459

if.end8:                                          ; preds = %if.then5, %if.end
  %14 = load float*, float** %v1.addr, align 8, !dbg !10462
  %arrayidx9 = getelementptr inbounds float, float* %14, i64 1, !dbg !10462
  %15 = load float, float* %arrayidx9, align 4, !dbg !10462
  %16 = load %struct.Boxf*, %struct.Boxf** %box.addr, align 8, !dbg !10464
  %ymin = getelementptr inbounds %struct.Boxf, %struct.Boxf* %16, i32 0, i32 2, !dbg !10465
  %17 = load float, float* %ymin, align 4, !dbg !10465
  %cmp10 = fcmp olt float %15, %17, !dbg !10466
  br i1 %cmp10, label %if.then11, label %if.end14, !dbg !10467

if.then11:                                        ; preds = %if.end8
  %18 = load float*, float** %v1.addr, align 8, !dbg !10468
  %arrayidx12 = getelementptr inbounds float, float* %18, i64 1, !dbg !10468
  %19 = load float, float* %arrayidx12, align 4, !dbg !10468
  %20 = load %struct.Boxf*, %struct.Boxf** %box.addr, align 8, !dbg !10469
  %ymin13 = getelementptr inbounds %struct.Boxf, %struct.Boxf* %20, i32 0, i32 2, !dbg !10470
  store float %19, float* %ymin13, align 4, !dbg !10471
  br label %if.end14, !dbg !10469

if.end14:                                         ; preds = %if.then11, %if.end8
  %21 = load float*, float** %v1.addr, align 8, !dbg !10472
  %arrayidx15 = getelementptr inbounds float, float* %21, i64 1, !dbg !10472
  %22 = load float, float* %arrayidx15, align 4, !dbg !10472
  %23 = load %struct.Boxf*, %struct.Boxf** %box.addr, align 8, !dbg !10474
  %ymax = getelementptr inbounds %struct.Boxf, %struct.Boxf* %23, i32 0, i32 3, !dbg !10475
  %24 = load float, float* %ymax, align 4, !dbg !10475
  %cmp16 = fcmp ogt float %22, %24, !dbg !10476
  br i1 %cmp16, label %if.then17, label %if.end20, !dbg !10477

if.then17:                                        ; preds = %if.end14
  %25 = load float*, float** %v1.addr, align 8, !dbg !10478
  %arrayidx18 = getelementptr inbounds float, float* %25, i64 1, !dbg !10478
  %26 = load float, float* %arrayidx18, align 4, !dbg !10478
  %27 = load %struct.Boxf*, %struct.Boxf** %box.addr, align 8, !dbg !10479
  %ymax19 = getelementptr inbounds %struct.Boxf, %struct.Boxf* %27, i32 0, i32 3, !dbg !10480
  store float %26, float* %ymax19, align 4, !dbg !10481
  br label %if.end20, !dbg !10479

if.end20:                                         ; preds = %if.then17, %if.end14
  %28 = load float*, float** %v1.addr, align 8, !dbg !10482
  %arrayidx21 = getelementptr inbounds float, float* %28, i64 2, !dbg !10482
  %29 = load float, float* %arrayidx21, align 4, !dbg !10482
  %30 = load %struct.Boxf*, %struct.Boxf** %box.addr, align 8, !dbg !10484
  %zmin = getelementptr inbounds %struct.Boxf, %struct.Boxf* %30, i32 0, i32 4, !dbg !10485
  %31 = load float, float* %zmin, align 4, !dbg !10485
  %cmp22 = fcmp olt float %29, %31, !dbg !10486
  br i1 %cmp22, label %if.then23, label %if.end26, !dbg !10487

if.then23:                                        ; preds = %if.end20
  %32 = load float*, float** %v1.addr, align 8, !dbg !10488
  %arrayidx24 = getelementptr inbounds float, float* %32, i64 2, !dbg !10488
  %33 = load float, float* %arrayidx24, align 4, !dbg !10488
  %34 = load %struct.Boxf*, %struct.Boxf** %box.addr, align 8, !dbg !10489
  %zmin25 = getelementptr inbounds %struct.Boxf, %struct.Boxf* %34, i32 0, i32 4, !dbg !10490
  store float %33, float* %zmin25, align 4, !dbg !10491
  br label %if.end26, !dbg !10489

if.end26:                                         ; preds = %if.then23, %if.end20
  %35 = load float*, float** %v1.addr, align 8, !dbg !10492
  %arrayidx27 = getelementptr inbounds float, float* %35, i64 2, !dbg !10492
  %36 = load float, float* %arrayidx27, align 4, !dbg !10492
  %37 = load %struct.Boxf*, %struct.Boxf** %box.addr, align 8, !dbg !10494
  %zmax = getelementptr inbounds %struct.Boxf, %struct.Boxf* %37, i32 0, i32 5, !dbg !10495
  %38 = load float, float* %zmax, align 4, !dbg !10495
  %cmp28 = fcmp ogt float %36, %38, !dbg !10496
  br i1 %cmp28, label %if.then29, label %if.end32, !dbg !10497

if.then29:                                        ; preds = %if.end26
  %39 = load float*, float** %v1.addr, align 8, !dbg !10498
  %arrayidx30 = getelementptr inbounds float, float* %39, i64 2, !dbg !10498
  %40 = load float, float* %arrayidx30, align 4, !dbg !10498
  %41 = load %struct.Boxf*, %struct.Boxf** %box.addr, align 8, !dbg !10499
  %zmax31 = getelementptr inbounds %struct.Boxf, %struct.Boxf* %41, i32 0, i32 5, !dbg !10500
  store float %40, float* %zmax31, align 4, !dbg !10501
  br label %if.end32, !dbg !10499

if.end32:                                         ; preds = %if.then29, %if.end26
  ret void, !dbg !10502
}

; Function Attrs: nounwind readnone speculatable willreturn
declare double @llvm.ceil.f64(double) #1

; Function Attrs: noinline nounwind uwtable
define internal void @isb_bsp_face_inside(%struct.ISBBranch* %bspn, %struct.BSPFace* %face) #0 !dbg !10503 {
entry:
  %bspn.addr = alloca %struct.ISBBranch*, align 8
  %face.addr = alloca %struct.BSPFace*, align 8
  %a = alloca i32, align 4
  %samp = alloca %struct.ISBSample*, align 8
  %inshadow = alloca i32, align 4
  store %struct.ISBBranch* %bspn, %struct.ISBBranch** %bspn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ISBBranch** %bspn.addr, metadata !10507, metadata !DIExpression()), !dbg !10508
  store %struct.BSPFace* %face, %struct.BSPFace** %face.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BSPFace** %face.addr, metadata !10509, metadata !DIExpression()), !dbg !10510
  %0 = load %struct.ISBBranch*, %struct.ISBBranch** %bspn.addr, align 8, !dbg !10511
  %left = getelementptr inbounds %struct.ISBBranch, %struct.ISBBranch* %0, i32 0, i32 0, !dbg !10513
  %1 = load %struct.ISBBranch*, %struct.ISBBranch** %left, align 8, !dbg !10513
  %tobool = icmp ne %struct.ISBBranch* %1, null, !dbg !10511
  br i1 %tobool, label %if.then, label %if.else31, !dbg !10514

if.then:                                          ; preds = %entry
  %2 = load %struct.ISBBranch*, %struct.ISBBranch** %bspn.addr, align 8, !dbg !10515
  %index = getelementptr inbounds %struct.ISBBranch, %struct.ISBBranch* %2, i32 0, i32 5, !dbg !10518
  %3 = load i16, i16* %index, align 2, !dbg !10518
  %conv = sext i16 %3 to i32, !dbg !10515
  %cmp = icmp eq i32 %conv, 0, !dbg !10519
  br i1 %cmp, label %if.then2, label %if.else, !dbg !10520

if.then2:                                         ; preds = %if.then
  %4 = load %struct.BSPFace*, %struct.BSPFace** %face.addr, align 8, !dbg !10521
  %box = getelementptr inbounds %struct.BSPFace, %struct.BSPFace* %4, i32 0, i32 0, !dbg !10524
  %xmin = getelementptr inbounds %struct.Boxf, %struct.Boxf* %box, i32 0, i32 0, !dbg !10525
  %5 = load float, float* %xmin, align 8, !dbg !10525
  %6 = load %struct.ISBBranch*, %struct.ISBBranch** %bspn.addr, align 8, !dbg !10526
  %divider = getelementptr inbounds %struct.ISBBranch, %struct.ISBBranch* %6, i32 0, i32 2, !dbg !10527
  %arrayidx = getelementptr inbounds [2 x float], [2 x float]* %divider, i64 0, i64 0, !dbg !10526
  %7 = load float, float* %arrayidx, align 8, !dbg !10526
  %cmp3 = fcmp ole float %5, %7, !dbg !10528
  br i1 %cmp3, label %if.then5, label %if.end, !dbg !10529

if.then5:                                         ; preds = %if.then2
  %8 = load %struct.ISBBranch*, %struct.ISBBranch** %bspn.addr, align 8, !dbg !10530
  %left6 = getelementptr inbounds %struct.ISBBranch, %struct.ISBBranch* %8, i32 0, i32 0, !dbg !10531
  %9 = load %struct.ISBBranch*, %struct.ISBBranch** %left6, align 8, !dbg !10531
  %10 = load %struct.BSPFace*, %struct.BSPFace** %face.addr, align 8, !dbg !10532
  call void @isb_bsp_face_inside(%struct.ISBBranch* %9, %struct.BSPFace* %10), !dbg !10533
  br label %if.end, !dbg !10533

if.end:                                           ; preds = %if.then5, %if.then2
  %11 = load %struct.BSPFace*, %struct.BSPFace** %face.addr, align 8, !dbg !10534
  %box7 = getelementptr inbounds %struct.BSPFace, %struct.BSPFace* %11, i32 0, i32 0, !dbg !10536
  %xmax = getelementptr inbounds %struct.Boxf, %struct.Boxf* %box7, i32 0, i32 1, !dbg !10537
  %12 = load float, float* %xmax, align 4, !dbg !10537
  %13 = load %struct.ISBBranch*, %struct.ISBBranch** %bspn.addr, align 8, !dbg !10538
  %divider8 = getelementptr inbounds %struct.ISBBranch, %struct.ISBBranch* %13, i32 0, i32 2, !dbg !10539
  %arrayidx9 = getelementptr inbounds [2 x float], [2 x float]* %divider8, i64 0, i64 0, !dbg !10538
  %14 = load float, float* %arrayidx9, align 8, !dbg !10538
  %cmp10 = fcmp ogt float %12, %14, !dbg !10540
  br i1 %cmp10, label %if.then12, label %if.end13, !dbg !10541

if.then12:                                        ; preds = %if.end
  %15 = load %struct.ISBBranch*, %struct.ISBBranch** %bspn.addr, align 8, !dbg !10542
  %right = getelementptr inbounds %struct.ISBBranch, %struct.ISBBranch* %15, i32 0, i32 1, !dbg !10543
  %16 = load %struct.ISBBranch*, %struct.ISBBranch** %right, align 8, !dbg !10543
  %17 = load %struct.BSPFace*, %struct.BSPFace** %face.addr, align 8, !dbg !10544
  call void @isb_bsp_face_inside(%struct.ISBBranch* %16, %struct.BSPFace* %17), !dbg !10545
  br label %if.end13, !dbg !10545

if.end13:                                         ; preds = %if.then12, %if.end
  br label %if.end30, !dbg !10546

if.else:                                          ; preds = %if.then
  %18 = load %struct.BSPFace*, %struct.BSPFace** %face.addr, align 8, !dbg !10547
  %box14 = getelementptr inbounds %struct.BSPFace, %struct.BSPFace* %18, i32 0, i32 0, !dbg !10550
  %ymin = getelementptr inbounds %struct.Boxf, %struct.Boxf* %box14, i32 0, i32 2, !dbg !10551
  %19 = load float, float* %ymin, align 8, !dbg !10551
  %20 = load %struct.ISBBranch*, %struct.ISBBranch** %bspn.addr, align 8, !dbg !10552
  %divider15 = getelementptr inbounds %struct.ISBBranch, %struct.ISBBranch* %20, i32 0, i32 2, !dbg !10553
  %arrayidx16 = getelementptr inbounds [2 x float], [2 x float]* %divider15, i64 0, i64 1, !dbg !10552
  %21 = load float, float* %arrayidx16, align 4, !dbg !10552
  %cmp17 = fcmp ole float %19, %21, !dbg !10554
  br i1 %cmp17, label %if.then19, label %if.end21, !dbg !10555

if.then19:                                        ; preds = %if.else
  %22 = load %struct.ISBBranch*, %struct.ISBBranch** %bspn.addr, align 8, !dbg !10556
  %left20 = getelementptr inbounds %struct.ISBBranch, %struct.ISBBranch* %22, i32 0, i32 0, !dbg !10557
  %23 = load %struct.ISBBranch*, %struct.ISBBranch** %left20, align 8, !dbg !10557
  %24 = load %struct.BSPFace*, %struct.BSPFace** %face.addr, align 8, !dbg !10558
  call void @isb_bsp_face_inside(%struct.ISBBranch* %23, %struct.BSPFace* %24), !dbg !10559
  br label %if.end21, !dbg !10559

if.end21:                                         ; preds = %if.then19, %if.else
  %25 = load %struct.BSPFace*, %struct.BSPFace** %face.addr, align 8, !dbg !10560
  %box22 = getelementptr inbounds %struct.BSPFace, %struct.BSPFace* %25, i32 0, i32 0, !dbg !10562
  %ymax = getelementptr inbounds %struct.Boxf, %struct.Boxf* %box22, i32 0, i32 3, !dbg !10563
  %26 = load float, float* %ymax, align 4, !dbg !10563
  %27 = load %struct.ISBBranch*, %struct.ISBBranch** %bspn.addr, align 8, !dbg !10564
  %divider23 = getelementptr inbounds %struct.ISBBranch, %struct.ISBBranch* %27, i32 0, i32 2, !dbg !10565
  %arrayidx24 = getelementptr inbounds [2 x float], [2 x float]* %divider23, i64 0, i64 1, !dbg !10564
  %28 = load float, float* %arrayidx24, align 4, !dbg !10564
  %cmp25 = fcmp ogt float %26, %28, !dbg !10566
  br i1 %cmp25, label %if.then27, label %if.end29, !dbg !10567

if.then27:                                        ; preds = %if.end21
  %29 = load %struct.ISBBranch*, %struct.ISBBranch** %bspn.addr, align 8, !dbg !10568
  %right28 = getelementptr inbounds %struct.ISBBranch, %struct.ISBBranch* %29, i32 0, i32 1, !dbg !10569
  %30 = load %struct.ISBBranch*, %struct.ISBBranch** %right28, align 8, !dbg !10569
  %31 = load %struct.BSPFace*, %struct.BSPFace** %face.addr, align 8, !dbg !10570
  call void @isb_bsp_face_inside(%struct.ISBBranch* %30, %struct.BSPFace* %31), !dbg !10571
  br label %if.end29, !dbg !10571

if.end29:                                         ; preds = %if.then27, %if.end21
  br label %if.end30

if.end30:                                         ; preds = %if.end29, %if.end13
  br label %if.end130, !dbg !10572

if.else31:                                        ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %a, metadata !10573, metadata !DIExpression()), !dbg !10575
  %32 = load %struct.ISBBranch*, %struct.ISBBranch** %bspn.addr, align 8, !dbg !10576
  %totsamp = getelementptr inbounds %struct.ISBBranch, %struct.ISBBranch* %32, i32 0, i32 4, !dbg !10578
  %33 = load i16, i16* %totsamp, align 8, !dbg !10578
  %conv32 = sext i16 %33 to i32, !dbg !10576
  %cmp33 = icmp eq i32 %conv32, 0, !dbg !10579
  br i1 %cmp33, label %if.then35, label %if.end36, !dbg !10580

if.then35:                                        ; preds = %if.else31
  br label %if.end130, !dbg !10581

if.end36:                                         ; preds = %if.else31
  %34 = load %struct.ISBBranch*, %struct.ISBBranch** %bspn.addr, align 8, !dbg !10582
  %totsamp37 = getelementptr inbounds %struct.ISBBranch, %struct.ISBBranch* %34, i32 0, i32 4, !dbg !10584
  %35 = load i16, i16* %totsamp37, align 8, !dbg !10584
  %conv38 = sext i16 %35 to i32, !dbg !10582
  %36 = load %struct.ISBBranch*, %struct.ISBBranch** %bspn.addr, align 8, !dbg !10585
  %full = getelementptr inbounds %struct.ISBBranch, %struct.ISBBranch* %36, i32 0, i32 6, !dbg !10586
  %37 = load i16, i16* %full, align 4, !dbg !10586
  %conv39 = sext i16 %37 to i32, !dbg !10585
  %cmp40 = icmp eq i32 %conv38, %conv39, !dbg !10587
  br i1 %cmp40, label %if.then42, label %if.end43, !dbg !10588

if.then42:                                        ; preds = %if.end36
  br label %if.end130, !dbg !10589

if.end43:                                         ; preds = %if.end36
  %38 = load %struct.ISBBranch*, %struct.ISBBranch** %bspn.addr, align 8, !dbg !10590
  %box44 = getelementptr inbounds %struct.ISBBranch, %struct.ISBBranch* %38, i32 0, i32 3, !dbg !10592
  %zmax = getelementptr inbounds %struct.Boxf, %struct.Boxf* %box44, i32 0, i32 5, !dbg !10593
  %39 = load float, float* %zmax, align 4, !dbg !10593
  %40 = load %struct.BSPFace*, %struct.BSPFace** %face.addr, align 8, !dbg !10594
  %box45 = getelementptr inbounds %struct.BSPFace, %struct.BSPFace* %40, i32 0, i32 0, !dbg !10595
  %zmin = getelementptr inbounds %struct.Boxf, %struct.Boxf* %box45, i32 0, i32 4, !dbg !10596
  %41 = load float, float* %zmin, align 8, !dbg !10596
  %cmp46 = fcmp olt float %39, %41, !dbg !10597
  br i1 %cmp46, label %if.then48, label %if.end49, !dbg !10598

if.then48:                                        ; preds = %if.end43
  br label %if.end130, !dbg !10599

if.end49:                                         ; preds = %if.end43
  %42 = load %struct.BSPFace*, %struct.BSPFace** %face.addr, align 8, !dbg !10600
  %box50 = getelementptr inbounds %struct.BSPFace, %struct.BSPFace* %42, i32 0, i32 0, !dbg !10602
  %43 = bitcast %struct.Boxf* %box50 to %struct.rctf*, !dbg !10603
  %44 = load %struct.ISBBranch*, %struct.ISBBranch** %bspn.addr, align 8, !dbg !10604
  %box51 = getelementptr inbounds %struct.ISBBranch, %struct.ISBBranch* %44, i32 0, i32 3, !dbg !10605
  %45 = bitcast %struct.Boxf* %box51 to %struct.rctf*, !dbg !10606
  %call = call zeroext i8 @BLI_rctf_isect(%struct.rctf* %43, %struct.rctf* %45, %struct.rctf* null), !dbg !10607
  %conv52 = zext i8 %call to i32, !dbg !10607
  %cmp53 = icmp eq i32 0, %conv52, !dbg !10608
  br i1 %cmp53, label %if.then55, label %if.end56, !dbg !10609

if.then55:                                        ; preds = %if.end49
  br label %if.end130, !dbg !10610

if.end56:                                         ; preds = %if.end49
  %46 = load %struct.ISBBranch*, %struct.ISBBranch** %bspn.addr, align 8, !dbg !10611
  %totsamp57 = getelementptr inbounds %struct.ISBBranch, %struct.ISBBranch* %46, i32 0, i32 4, !dbg !10613
  %47 = load i16, i16* %totsamp57, align 8, !dbg !10613
  %conv58 = sext i16 %47 to i32, !dbg !10611
  %sub = sub nsw i32 %conv58, 1, !dbg !10614
  store i32 %sub, i32* %a, align 4, !dbg !10615
  br label %for.cond, !dbg !10616

for.cond:                                         ; preds = %for.inc, %if.end56
  %48 = load i32, i32* %a, align 4, !dbg !10617
  %cmp59 = icmp sge i32 %48, 0, !dbg !10619
  br i1 %cmp59, label %for.body, label %for.end, !dbg !10620

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.ISBSample** %samp, metadata !10621, metadata !DIExpression()), !dbg !10623
  %49 = load %struct.ISBBranch*, %struct.ISBBranch** %bspn.addr, align 8, !dbg !10624
  %samples = getelementptr inbounds %struct.ISBBranch, %struct.ISBBranch* %49, i32 0, i32 8, !dbg !10625
  %50 = load %struct.ISBSample**, %struct.ISBSample*** %samples, align 8, !dbg !10625
  %51 = load i32, i32* %a, align 4, !dbg !10626
  %idxprom = sext i32 %51 to i64, !dbg !10624
  %arrayidx61 = getelementptr inbounds %struct.ISBSample*, %struct.ISBSample** %50, i64 %idxprom, !dbg !10624
  %52 = load %struct.ISBSample*, %struct.ISBSample** %arrayidx61, align 8, !dbg !10624
  store %struct.ISBSample* %52, %struct.ISBSample** %samp, align 8, !dbg !10623
  %53 = load %struct.ISBSample*, %struct.ISBSample** %samp, align 8, !dbg !10627
  %facenr = getelementptr inbounds %struct.ISBSample, %struct.ISBSample* %53, i32 0, i32 3, !dbg !10629
  %54 = load i32, i32* %facenr, align 4, !dbg !10629
  %55 = load %struct.BSPFace*, %struct.BSPFace** %face.addr, align 8, !dbg !10630
  %facenr62 = getelementptr inbounds %struct.BSPFace, %struct.BSPFace* %55, i32 0, i32 6, !dbg !10631
  %56 = load i32, i32* %facenr62, align 4, !dbg !10631
  %cmp63 = icmp ne i32 %54, %56, !dbg !10632
  br i1 %cmp63, label %land.lhs.true, label %lor.lhs.false, !dbg !10633

lor.lhs.false:                                    ; preds = %for.body
  %57 = load %struct.ISBSample*, %struct.ISBSample** %samp, align 8, !dbg !10634
  %obi = getelementptr inbounds %struct.ISBSample, %struct.ISBSample* %57, i32 0, i32 2, !dbg !10635
  %58 = load i32, i32* %obi, align 8, !dbg !10635
  %59 = load %struct.BSPFace*, %struct.BSPFace** %face.addr, align 8, !dbg !10636
  %obi65 = getelementptr inbounds %struct.BSPFace, %struct.BSPFace* %59, i32 0, i32 5, !dbg !10637
  %60 = load i32, i32* %obi65, align 8, !dbg !10637
  %cmp66 = icmp ne i32 %58, %60, !dbg !10638
  br i1 %cmp66, label %land.lhs.true, label %if.end129, !dbg !10639

land.lhs.true:                                    ; preds = %lor.lhs.false, %for.body
  %61 = load %struct.ISBSample*, %struct.ISBSample** %samp, align 8, !dbg !10640
  %shadfac = getelementptr inbounds %struct.ISBSample, %struct.ISBSample* %61, i32 0, i32 1, !dbg !10641
  %62 = load i16*, i16** %shadfac, align 8, !dbg !10641
  %tobool68 = icmp ne i16* %62, null, !dbg !10640
  br i1 %tobool68, label %if.then69, label %if.end129, !dbg !10642

if.then69:                                        ; preds = %land.lhs.true
  %63 = load %struct.BSPFace*, %struct.BSPFace** %face.addr, align 8, !dbg !10643
  %box70 = getelementptr inbounds %struct.BSPFace, %struct.BSPFace* %63, i32 0, i32 0, !dbg !10646
  %zmin71 = getelementptr inbounds %struct.Boxf, %struct.Boxf* %box70, i32 0, i32 4, !dbg !10647
  %64 = load float, float* %zmin71, align 8, !dbg !10647
  %65 = load %struct.ISBSample*, %struct.ISBSample** %samp, align 8, !dbg !10648
  %zco = getelementptr inbounds %struct.ISBSample, %struct.ISBSample* %65, i32 0, i32 0, !dbg !10649
  %arrayidx72 = getelementptr inbounds [3 x float], [3 x float]* %zco, i64 0, i64 2, !dbg !10648
  %66 = load float, float* %arrayidx72, align 8, !dbg !10648
  %cmp73 = fcmp olt float %64, %66, !dbg !10650
  br i1 %cmp73, label %if.then75, label %if.end128, !dbg !10651

if.then75:                                        ; preds = %if.then69
  %67 = load %struct.BSPFace*, %struct.BSPFace** %face.addr, align 8, !dbg !10652
  %box76 = getelementptr inbounds %struct.BSPFace, %struct.BSPFace* %67, i32 0, i32 0, !dbg !10655
  %68 = bitcast %struct.Boxf* %box76 to %struct.rctf*, !dbg !10656
  %69 = load %struct.ISBSample*, %struct.ISBSample** %samp, align 8, !dbg !10657
  %zco77 = getelementptr inbounds %struct.ISBSample, %struct.ISBSample* %69, i32 0, i32 0, !dbg !10658
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %zco77, i64 0, i64 0, !dbg !10657
  %call78 = call zeroext i8 @BLI_rctf_isect_pt_v(%struct.rctf* %68, float* %arraydecay), !dbg !10659
  %tobool79 = icmp ne i8 %call78, 0, !dbg !10659
  br i1 %tobool79, label %if.then80, label %if.end127, !dbg !10660

if.then80:                                        ; preds = %if.then75
  call void @llvm.dbg.declare(metadata i32* %inshadow, metadata !10661, metadata !DIExpression()), !dbg !10663
  store i32 0, i32* %inshadow, align 4, !dbg !10663
  %70 = load %struct.BSPFace*, %struct.BSPFace** %face.addr, align 8, !dbg !10664
  %type = getelementptr inbounds %struct.BSPFace, %struct.BSPFace* %70, i32 0, i32 7, !dbg !10666
  %71 = load i32, i32* %type, align 8, !dbg !10666
  %tobool81 = icmp ne i32 %71, 0, !dbg !10664
  br i1 %tobool81, label %if.then82, label %if.else89, !dbg !10667

if.then82:                                        ; preds = %if.then80
  %72 = load %struct.ISBSample*, %struct.ISBSample** %samp, align 8, !dbg !10668
  %zco83 = getelementptr inbounds %struct.ISBSample, %struct.ISBSample* %72, i32 0, i32 0, !dbg !10671
  %arraydecay84 = getelementptr inbounds [3 x float], [3 x float]* %zco83, i64 0, i64 0, !dbg !10668
  %73 = load %struct.BSPFace*, %struct.BSPFace** %face.addr, align 8, !dbg !10672
  %call85 = call i32 @point_behind_strand(float* %arraydecay84, %struct.BSPFace* %73), !dbg !10673
  %tobool86 = icmp ne i32 %call85, 0, !dbg !10673
  br i1 %tobool86, label %if.then87, label %if.end88, !dbg !10674

if.then87:                                        ; preds = %if.then82
  store i32 1, i32* %inshadow, align 4, !dbg !10675
  br label %if.end88, !dbg !10676

if.end88:                                         ; preds = %if.then87, %if.then82
  br label %if.end108, !dbg !10677

if.else89:                                        ; preds = %if.then80
  %74 = load %struct.ISBSample*, %struct.ISBSample** %samp, align 8, !dbg !10678
  %zco90 = getelementptr inbounds %struct.ISBSample, %struct.ISBSample* %74, i32 0, i32 0, !dbg !10680
  %arraydecay91 = getelementptr inbounds [3 x float], [3 x float]* %zco90, i64 0, i64 0, !dbg !10678
  %75 = load %struct.BSPFace*, %struct.BSPFace** %face.addr, align 8, !dbg !10681
  %v1 = getelementptr inbounds %struct.BSPFace, %struct.BSPFace* %75, i32 0, i32 1, !dbg !10682
  %76 = load float*, float** %v1, align 8, !dbg !10682
  %77 = load %struct.BSPFace*, %struct.BSPFace** %face.addr, align 8, !dbg !10683
  %v2 = getelementptr inbounds %struct.BSPFace, %struct.BSPFace* %77, i32 0, i32 2, !dbg !10684
  %78 = load float*, float** %v2, align 8, !dbg !10684
  %79 = load %struct.BSPFace*, %struct.BSPFace** %face.addr, align 8, !dbg !10685
  %v3 = getelementptr inbounds %struct.BSPFace, %struct.BSPFace* %79, i32 0, i32 3, !dbg !10686
  %80 = load float*, float** %v3, align 8, !dbg !10686
  %call92 = call i32 @point_behind_tria2d(float* %arraydecay91, float* %76, float* %78, float* %80), !dbg !10687
  %tobool93 = icmp ne i32 %call92, 0, !dbg !10687
  br i1 %tobool93, label %if.then94, label %if.else95, !dbg !10688

if.then94:                                        ; preds = %if.else89
  store i32 1, i32* %inshadow, align 4, !dbg !10689
  br label %if.end107, !dbg !10690

if.else95:                                        ; preds = %if.else89
  %81 = load %struct.BSPFace*, %struct.BSPFace** %face.addr, align 8, !dbg !10691
  %v4 = getelementptr inbounds %struct.BSPFace, %struct.BSPFace* %81, i32 0, i32 4, !dbg !10693
  %82 = load float*, float** %v4, align 8, !dbg !10693
  %tobool96 = icmp ne float* %82, null, !dbg !10691
  br i1 %tobool96, label %land.lhs.true97, label %if.end106, !dbg !10694

land.lhs.true97:                                  ; preds = %if.else95
  %83 = load %struct.ISBSample*, %struct.ISBSample** %samp, align 8, !dbg !10695
  %zco98 = getelementptr inbounds %struct.ISBSample, %struct.ISBSample* %83, i32 0, i32 0, !dbg !10696
  %arraydecay99 = getelementptr inbounds [3 x float], [3 x float]* %zco98, i64 0, i64 0, !dbg !10695
  %84 = load %struct.BSPFace*, %struct.BSPFace** %face.addr, align 8, !dbg !10697
  %v1100 = getelementptr inbounds %struct.BSPFace, %struct.BSPFace* %84, i32 0, i32 1, !dbg !10698
  %85 = load float*, float** %v1100, align 8, !dbg !10698
  %86 = load %struct.BSPFace*, %struct.BSPFace** %face.addr, align 8, !dbg !10699
  %v3101 = getelementptr inbounds %struct.BSPFace, %struct.BSPFace* %86, i32 0, i32 3, !dbg !10700
  %87 = load float*, float** %v3101, align 8, !dbg !10700
  %88 = load %struct.BSPFace*, %struct.BSPFace** %face.addr, align 8, !dbg !10701
  %v4102 = getelementptr inbounds %struct.BSPFace, %struct.BSPFace* %88, i32 0, i32 4, !dbg !10702
  %89 = load float*, float** %v4102, align 8, !dbg !10702
  %call103 = call i32 @point_behind_tria2d(float* %arraydecay99, float* %85, float* %87, float* %89), !dbg !10703
  %tobool104 = icmp ne i32 %call103, 0, !dbg !10703
  br i1 %tobool104, label %if.then105, label %if.end106, !dbg !10704

if.then105:                                       ; preds = %land.lhs.true97
  store i32 1, i32* %inshadow, align 4, !dbg !10705
  br label %if.end106, !dbg !10706

if.end106:                                        ; preds = %if.then105, %land.lhs.true97, %if.else95
  br label %if.end107

if.end107:                                        ; preds = %if.end106, %if.then94
  br label %if.end108

if.end108:                                        ; preds = %if.end107, %if.end88
  %90 = load i32, i32* %inshadow, align 4, !dbg !10707
  %tobool109 = icmp ne i32 %90, 0, !dbg !10707
  br i1 %tobool109, label %if.then110, label %if.end126, !dbg !10709

if.then110:                                       ; preds = %if.end108
  %91 = load %struct.BSPFace*, %struct.BSPFace** %face.addr, align 8, !dbg !10710
  %shad_alpha = getelementptr inbounds %struct.BSPFace, %struct.BSPFace* %91, i32 0, i32 8, !dbg !10712
  %92 = load i16, i16* %shad_alpha, align 4, !dbg !10712
  %conv111 = sext i16 %92 to i32, !dbg !10710
  %93 = load %struct.ISBSample*, %struct.ISBSample** %samp, align 8, !dbg !10713
  %shadfac112 = getelementptr inbounds %struct.ISBSample, %struct.ISBSample* %93, i32 0, i32 1, !dbg !10714
  %94 = load i16*, i16** %shadfac112, align 8, !dbg !10714
  %95 = load i16, i16* %94, align 2, !dbg !10715
  %conv113 = sext i16 %95 to i32, !dbg !10715
  %add = add nsw i32 %conv113, %conv111, !dbg !10715
  %conv114 = trunc i32 %add to i16, !dbg !10715
  store i16 %conv114, i16* %94, align 2, !dbg !10715
  %96 = load %struct.ISBSample*, %struct.ISBSample** %samp, align 8, !dbg !10716
  %shadfac115 = getelementptr inbounds %struct.ISBSample, %struct.ISBSample* %96, i32 0, i32 1, !dbg !10718
  %97 = load i16*, i16** %shadfac115, align 8, !dbg !10718
  %98 = load i16, i16* %97, align 2, !dbg !10719
  %conv116 = sext i16 %98 to i32, !dbg !10719
  %cmp117 = icmp sge i32 %conv116, 4096, !dbg !10720
  br i1 %cmp117, label %if.then122, label %lor.lhs.false119, !dbg !10721

lor.lhs.false119:                                 ; preds = %if.then110
  %99 = load %struct.BSPFace*, %struct.BSPFace** %face.addr, align 8, !dbg !10722
  %is_full = getelementptr inbounds %struct.BSPFace, %struct.BSPFace* %99, i32 0, i32 9, !dbg !10723
  %100 = load i16, i16* %is_full, align 2, !dbg !10723
  %conv120 = sext i16 %100 to i32, !dbg !10722
  %tobool121 = icmp ne i32 %conv120, 0, !dbg !10722
  br i1 %tobool121, label %if.then122, label %if.end125, !dbg !10724

if.then122:                                       ; preds = %lor.lhs.false119, %if.then110
  %101 = load %struct.ISBBranch*, %struct.ISBBranch** %bspn.addr, align 8, !dbg !10725
  %full123 = getelementptr inbounds %struct.ISBBranch, %struct.ISBBranch* %101, i32 0, i32 6, !dbg !10727
  %102 = load i16, i16* %full123, align 4, !dbg !10728
  %inc = add i16 %102, 1, !dbg !10728
  store i16 %inc, i16* %full123, align 4, !dbg !10728
  %103 = load %struct.ISBSample*, %struct.ISBSample** %samp, align 8, !dbg !10729
  %shadfac124 = getelementptr inbounds %struct.ISBSample, %struct.ISBSample* %103, i32 0, i32 1, !dbg !10730
  store i16* null, i16** %shadfac124, align 8, !dbg !10731
  br label %if.end125, !dbg !10732

if.end125:                                        ; preds = %if.then122, %lor.lhs.false119
  br label %if.end126, !dbg !10733

if.end126:                                        ; preds = %if.end125, %if.end108
  br label %if.end127, !dbg !10734

if.end127:                                        ; preds = %if.end126, %if.then75
  br label %if.end128, !dbg !10735

if.end128:                                        ; preds = %if.end127, %if.then69
  br label %if.end129, !dbg !10736

if.end129:                                        ; preds = %if.end128, %land.lhs.true, %lor.lhs.false
  br label %for.inc, !dbg !10737

for.inc:                                          ; preds = %if.end129
  %104 = load i32, i32* %a, align 4, !dbg !10738
  %dec = add nsw i32 %104, -1, !dbg !10738
  store i32 %dec, i32* %a, align 4, !dbg !10738
  br label %for.cond, !dbg !10739, !llvm.loop !10740

for.end:                                          ; preds = %for.cond
  br label %if.end130

if.end130:                                        ; preds = %if.then35, %if.then42, %if.then48, %if.then55, %for.end, %if.end30
  ret void, !dbg !10742
}

declare dso_local zeroext i8 @BLI_rctf_isect(%struct.rctf*, %struct.rctf*, %struct.rctf*) #4

declare dso_local zeroext i8 @BLI_rctf_isect_pt_v(%struct.rctf*, float*) #4

; Function Attrs: noinline nounwind uwtable
define internal i32 @point_behind_strand(float* %p, %struct.BSPFace* %face) #0 !dbg !10743 {
entry:
  %retval = alloca i32, align 4
  %p.addr = alloca float*, align 8
  %face.addr = alloca %struct.BSPFace*, align 8
  %dist = alloca float, align 4
  %rc = alloca [2 x float], align 4
  %pt = alloca [2 x float], align 4
  %lambda = alloca float, align 4
  %zval = alloca float, align 4
  store float* %p, float** %p.addr, align 8
  call void @llvm.dbg.declare(metadata float** %p.addr, metadata !10746, metadata !DIExpression()), !dbg !10747
  store %struct.BSPFace* %face, %struct.BSPFace** %face.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BSPFace** %face.addr, metadata !10748, metadata !DIExpression()), !dbg !10749
  call void @llvm.dbg.declare(metadata float* %dist, metadata !10750, metadata !DIExpression()), !dbg !10751
  call void @llvm.dbg.declare(metadata [2 x float]* %rc, metadata !10752, metadata !DIExpression()), !dbg !10753
  call void @llvm.dbg.declare(metadata [2 x float]* %pt, metadata !10754, metadata !DIExpression()), !dbg !10755
  %0 = load %struct.BSPFace*, %struct.BSPFace** %face.addr, align 8, !dbg !10756
  %len = getelementptr inbounds %struct.BSPFace, %struct.BSPFace* %0, i32 0, i32 12, !dbg !10758
  %1 = load float, float* %len, align 8, !dbg !10758
  %cmp = fcmp oeq float %1, 0.000000e+00, !dbg !10759
  br i1 %cmp, label %if.then, label %if.else, !dbg !10760

if.then:                                          ; preds = %entry
  %2 = load float*, float** %p.addr, align 8, !dbg !10761
  %arrayidx = getelementptr inbounds float, float* %2, i64 0, !dbg !10761
  %3 = load float, float* %arrayidx, align 4, !dbg !10761
  %4 = load %struct.BSPFace*, %struct.BSPFace** %face.addr, align 8, !dbg !10763
  %vec1 = getelementptr inbounds %struct.BSPFace, %struct.BSPFace* %4, i32 0, i32 13, !dbg !10764
  %arrayidx1 = getelementptr inbounds [3 x float], [3 x float]* %vec1, i64 0, i64 0, !dbg !10763
  %5 = load float, float* %arrayidx1, align 4, !dbg !10763
  %sub = fsub float %3, %5, !dbg !10765
  %arrayidx2 = getelementptr inbounds [2 x float], [2 x float]* %rc, i64 0, i64 0, !dbg !10766
  store float %sub, float* %arrayidx2, align 4, !dbg !10767
  %6 = load float*, float** %p.addr, align 8, !dbg !10768
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 1, !dbg !10768
  %7 = load float, float* %arrayidx3, align 4, !dbg !10768
  %8 = load %struct.BSPFace*, %struct.BSPFace** %face.addr, align 8, !dbg !10769
  %vec14 = getelementptr inbounds %struct.BSPFace, %struct.BSPFace* %8, i32 0, i32 13, !dbg !10770
  %arrayidx5 = getelementptr inbounds [3 x float], [3 x float]* %vec14, i64 0, i64 1, !dbg !10769
  %9 = load float, float* %arrayidx5, align 4, !dbg !10769
  %sub6 = fsub float %7, %9, !dbg !10771
  %arrayidx7 = getelementptr inbounds [2 x float], [2 x float]* %rc, i64 0, i64 1, !dbg !10772
  store float %sub6, float* %arrayidx7, align 4, !dbg !10773
  %arraydecay = getelementptr inbounds [2 x float], [2 x float]* %rc, i64 0, i64 0, !dbg !10774
  %call = call float @len_v2(float* %arraydecay), !dbg !10775
  store float %call, float* %dist, align 4, !dbg !10776
  %10 = load float, float* %dist, align 4, !dbg !10777
  %11 = load %struct.BSPFace*, %struct.BSPFace** %face.addr, align 8, !dbg !10779
  %radline = getelementptr inbounds %struct.BSPFace, %struct.BSPFace* %11, i32 0, i32 10, !dbg !10780
  %12 = load float, float* %radline, align 8, !dbg !10780
  %cmp8 = fcmp olt float %10, %12, !dbg !10781
  br i1 %cmp8, label %if.then9, label %if.end, !dbg !10782

if.then9:                                         ; preds = %if.then
  store i32 1, i32* %retval, align 4, !dbg !10783
  br label %return, !dbg !10783

if.end:                                           ; preds = %if.then
  br label %if.end69, !dbg !10784

if.else:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata float* %lambda, metadata !10785, metadata !DIExpression()), !dbg !10787
  %13 = load %struct.BSPFace*, %struct.BSPFace** %face.addr, align 8, !dbg !10788
  %rc10 = getelementptr inbounds %struct.BSPFace, %struct.BSPFace* %13, i32 0, i32 15, !dbg !10789
  %arrayidx11 = getelementptr inbounds [3 x float], [3 x float]* %rc10, i64 0, i64 0, !dbg !10788
  %14 = load float, float* %arrayidx11, align 4, !dbg !10788
  %15 = load float*, float** %p.addr, align 8, !dbg !10790
  %arrayidx12 = getelementptr inbounds float, float* %15, i64 0, !dbg !10790
  %16 = load float, float* %arrayidx12, align 4, !dbg !10790
  %17 = load %struct.BSPFace*, %struct.BSPFace** %face.addr, align 8, !dbg !10791
  %vec113 = getelementptr inbounds %struct.BSPFace, %struct.BSPFace* %17, i32 0, i32 13, !dbg !10792
  %arrayidx14 = getelementptr inbounds [3 x float], [3 x float]* %vec113, i64 0, i64 0, !dbg !10791
  %18 = load float, float* %arrayidx14, align 4, !dbg !10791
  %sub15 = fsub float %16, %18, !dbg !10793
  %mul = fmul float %14, %sub15, !dbg !10794
  %19 = load %struct.BSPFace*, %struct.BSPFace** %face.addr, align 8, !dbg !10795
  %rc16 = getelementptr inbounds %struct.BSPFace, %struct.BSPFace* %19, i32 0, i32 15, !dbg !10796
  %arrayidx17 = getelementptr inbounds [3 x float], [3 x float]* %rc16, i64 0, i64 1, !dbg !10795
  %20 = load float, float* %arrayidx17, align 4, !dbg !10795
  %21 = load float*, float** %p.addr, align 8, !dbg !10797
  %arrayidx18 = getelementptr inbounds float, float* %21, i64 1, !dbg !10797
  %22 = load float, float* %arrayidx18, align 4, !dbg !10797
  %23 = load %struct.BSPFace*, %struct.BSPFace** %face.addr, align 8, !dbg !10798
  %vec119 = getelementptr inbounds %struct.BSPFace, %struct.BSPFace* %23, i32 0, i32 13, !dbg !10799
  %arrayidx20 = getelementptr inbounds [3 x float], [3 x float]* %vec119, i64 0, i64 1, !dbg !10798
  %24 = load float, float* %arrayidx20, align 4, !dbg !10798
  %sub21 = fsub float %22, %24, !dbg !10800
  %mul22 = fmul float %20, %sub21, !dbg !10801
  %add = fadd float %mul, %mul22, !dbg !10802
  %25 = load %struct.BSPFace*, %struct.BSPFace** %face.addr, align 8, !dbg !10803
  %len23 = getelementptr inbounds %struct.BSPFace, %struct.BSPFace* %25, i32 0, i32 12, !dbg !10804
  %26 = load float, float* %len23, align 8, !dbg !10804
  %mul24 = fmul float %add, %26, !dbg !10805
  store float %mul24, float* %lambda, align 4, !dbg !10787
  %27 = load float, float* %lambda, align 4, !dbg !10806
  %28 = load %struct.BSPFace*, %struct.BSPFace** %face.addr, align 8, !dbg !10808
  %radline_end = getelementptr inbounds %struct.BSPFace, %struct.BSPFace* %28, i32 0, i32 11, !dbg !10809
  %29 = load float, float* %radline_end, align 4, !dbg !10809
  %fneg = fneg float %29, !dbg !10810
  %cmp25 = fcmp ogt float %27, %fneg, !dbg !10811
  br i1 %cmp25, label %land.lhs.true, label %if.end68, !dbg !10812

land.lhs.true:                                    ; preds = %if.else
  %30 = load float, float* %lambda, align 4, !dbg !10813
  %31 = load %struct.BSPFace*, %struct.BSPFace** %face.addr, align 8, !dbg !10814
  %radline_end26 = getelementptr inbounds %struct.BSPFace, %struct.BSPFace* %31, i32 0, i32 11, !dbg !10815
  %32 = load float, float* %radline_end26, align 4, !dbg !10815
  %add27 = fadd float 1.000000e+00, %32, !dbg !10816
  %cmp28 = fcmp olt float %30, %add27, !dbg !10817
  br i1 %cmp28, label %if.then29, label %if.end68, !dbg !10818

if.then29:                                        ; preds = %land.lhs.true
  %33 = load float, float* %lambda, align 4, !dbg !10819
  %34 = load %struct.BSPFace*, %struct.BSPFace** %face.addr, align 8, !dbg !10821
  %rc30 = getelementptr inbounds %struct.BSPFace, %struct.BSPFace* %34, i32 0, i32 15, !dbg !10822
  %arrayidx31 = getelementptr inbounds [3 x float], [3 x float]* %rc30, i64 0, i64 0, !dbg !10821
  %35 = load float, float* %arrayidx31, align 4, !dbg !10821
  %mul32 = fmul float %33, %35, !dbg !10823
  %36 = load %struct.BSPFace*, %struct.BSPFace** %face.addr, align 8, !dbg !10824
  %vec133 = getelementptr inbounds %struct.BSPFace, %struct.BSPFace* %36, i32 0, i32 13, !dbg !10825
  %arrayidx34 = getelementptr inbounds [3 x float], [3 x float]* %vec133, i64 0, i64 0, !dbg !10824
  %37 = load float, float* %arrayidx34, align 4, !dbg !10824
  %add35 = fadd float %mul32, %37, !dbg !10826
  %arrayidx36 = getelementptr inbounds [2 x float], [2 x float]* %pt, i64 0, i64 0, !dbg !10827
  store float %add35, float* %arrayidx36, align 4, !dbg !10828
  %38 = load float, float* %lambda, align 4, !dbg !10829
  %39 = load %struct.BSPFace*, %struct.BSPFace** %face.addr, align 8, !dbg !10830
  %rc37 = getelementptr inbounds %struct.BSPFace, %struct.BSPFace* %39, i32 0, i32 15, !dbg !10831
  %arrayidx38 = getelementptr inbounds [3 x float], [3 x float]* %rc37, i64 0, i64 1, !dbg !10830
  %40 = load float, float* %arrayidx38, align 4, !dbg !10830
  %mul39 = fmul float %38, %40, !dbg !10832
  %41 = load %struct.BSPFace*, %struct.BSPFace** %face.addr, align 8, !dbg !10833
  %vec140 = getelementptr inbounds %struct.BSPFace, %struct.BSPFace* %41, i32 0, i32 13, !dbg !10834
  %arrayidx41 = getelementptr inbounds [3 x float], [3 x float]* %vec140, i64 0, i64 1, !dbg !10833
  %42 = load float, float* %arrayidx41, align 4, !dbg !10833
  %add42 = fadd float %mul39, %42, !dbg !10835
  %arrayidx43 = getelementptr inbounds [2 x float], [2 x float]* %pt, i64 0, i64 1, !dbg !10836
  store float %add42, float* %arrayidx43, align 4, !dbg !10837
  %arrayidx44 = getelementptr inbounds [2 x float], [2 x float]* %pt, i64 0, i64 0, !dbg !10838
  %43 = load float, float* %arrayidx44, align 4, !dbg !10838
  %44 = load float*, float** %p.addr, align 8, !dbg !10839
  %arrayidx45 = getelementptr inbounds float, float* %44, i64 0, !dbg !10839
  %45 = load float, float* %arrayidx45, align 4, !dbg !10839
  %sub46 = fsub float %43, %45, !dbg !10840
  %arrayidx47 = getelementptr inbounds [2 x float], [2 x float]* %rc, i64 0, i64 0, !dbg !10841
  store float %sub46, float* %arrayidx47, align 4, !dbg !10842
  %arrayidx48 = getelementptr inbounds [2 x float], [2 x float]* %pt, i64 0, i64 1, !dbg !10843
  %46 = load float, float* %arrayidx48, align 4, !dbg !10843
  %47 = load float*, float** %p.addr, align 8, !dbg !10844
  %arrayidx49 = getelementptr inbounds float, float* %47, i64 1, !dbg !10844
  %48 = load float, float* %arrayidx49, align 4, !dbg !10844
  %sub50 = fsub float %46, %48, !dbg !10845
  %arrayidx51 = getelementptr inbounds [2 x float], [2 x float]* %rc, i64 0, i64 1, !dbg !10846
  store float %sub50, float* %arrayidx51, align 4, !dbg !10847
  %arraydecay52 = getelementptr inbounds [2 x float], [2 x float]* %rc, i64 0, i64 0, !dbg !10848
  %call53 = call float @len_v2(float* %arraydecay52), !dbg !10849
  store float %call53, float* %dist, align 4, !dbg !10850
  %49 = load float, float* %dist, align 4, !dbg !10851
  %50 = load %struct.BSPFace*, %struct.BSPFace** %face.addr, align 8, !dbg !10853
  %radline54 = getelementptr inbounds %struct.BSPFace, %struct.BSPFace* %50, i32 0, i32 10, !dbg !10854
  %51 = load float, float* %radline54, align 8, !dbg !10854
  %cmp55 = fcmp olt float %49, %51, !dbg !10855
  br i1 %cmp55, label %if.then56, label %if.end67, !dbg !10856

if.then56:                                        ; preds = %if.then29
  call void @llvm.dbg.declare(metadata float* %zval, metadata !10857, metadata !DIExpression()), !dbg !10859
  %52 = load %struct.BSPFace*, %struct.BSPFace** %face.addr, align 8, !dbg !10860
  %vec157 = getelementptr inbounds %struct.BSPFace, %struct.BSPFace* %52, i32 0, i32 13, !dbg !10861
  %arrayidx58 = getelementptr inbounds [3 x float], [3 x float]* %vec157, i64 0, i64 2, !dbg !10860
  %53 = load float, float* %arrayidx58, align 4, !dbg !10860
  %54 = load float, float* %lambda, align 4, !dbg !10862
  %55 = load %struct.BSPFace*, %struct.BSPFace** %face.addr, align 8, !dbg !10863
  %rc59 = getelementptr inbounds %struct.BSPFace, %struct.BSPFace* %55, i32 0, i32 15, !dbg !10864
  %arrayidx60 = getelementptr inbounds [3 x float], [3 x float]* %rc59, i64 0, i64 2, !dbg !10863
  %56 = load float, float* %arrayidx60, align 4, !dbg !10863
  %mul61 = fmul float %54, %56, !dbg !10865
  %add62 = fadd float %53, %mul61, !dbg !10866
  store float %add62, float* %zval, align 4, !dbg !10859
  %57 = load float*, float** %p.addr, align 8, !dbg !10867
  %arrayidx63 = getelementptr inbounds float, float* %57, i64 2, !dbg !10867
  %58 = load float, float* %arrayidx63, align 4, !dbg !10867
  %59 = load float, float* %zval, align 4, !dbg !10869
  %cmp64 = fcmp ogt float %58, %59, !dbg !10870
  br i1 %cmp64, label %if.then65, label %if.end66, !dbg !10871

if.then65:                                        ; preds = %if.then56
  store i32 1, i32* %retval, align 4, !dbg !10872
  br label %return, !dbg !10872

if.end66:                                         ; preds = %if.then56
  br label %if.end67, !dbg !10873

if.end67:                                         ; preds = %if.end66, %if.then29
  br label %if.end68, !dbg !10874

if.end68:                                         ; preds = %if.end67, %land.lhs.true, %if.else
  br label %if.end69

if.end69:                                         ; preds = %if.end68, %if.end
  store i32 0, i32* %retval, align 4, !dbg !10875
  br label %return, !dbg !10875

return:                                           ; preds = %if.end69, %if.then65, %if.then9
  %60 = load i32, i32* %retval, align 4, !dbg !10876
  ret i32 %60, !dbg !10876
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @point_behind_tria2d(float* %p, float* %v1, float* %v2, float* %v3) #0 !dbg !10877 {
entry:
  %retval = alloca i32, align 4
  %p.addr = alloca float*, align 8
  %v1.addr = alloca float*, align 8
  %v2.addr = alloca float*, align 8
  %v3.addr = alloca float*, align 8
  %a = alloca [2 x float], align 4
  %c = alloca [2 x float], align 4
  %h = alloca [2 x float], align 4
  %div = alloca float, align 4
  %u = alloca float, align 4
  %v = alloca float, align 4
  %z = alloca float, align 4
  store float* %p, float** %p.addr, align 8
  call void @llvm.dbg.declare(metadata float** %p.addr, metadata !10880, metadata !DIExpression()), !dbg !10881
  store float* %v1, float** %v1.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v1.addr, metadata !10882, metadata !DIExpression()), !dbg !10883
  store float* %v2, float** %v2.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v2.addr, metadata !10884, metadata !DIExpression()), !dbg !10885
  store float* %v3, float** %v3.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v3.addr, metadata !10886, metadata !DIExpression()), !dbg !10887
  call void @llvm.dbg.declare(metadata [2 x float]* %a, metadata !10888, metadata !DIExpression()), !dbg !10889
  call void @llvm.dbg.declare(metadata [2 x float]* %c, metadata !10890, metadata !DIExpression()), !dbg !10891
  call void @llvm.dbg.declare(metadata [2 x float]* %h, metadata !10892, metadata !DIExpression()), !dbg !10893
  call void @llvm.dbg.declare(metadata float* %div, metadata !10894, metadata !DIExpression()), !dbg !10895
  call void @llvm.dbg.declare(metadata float* %u, metadata !10896, metadata !DIExpression()), !dbg !10897
  call void @llvm.dbg.declare(metadata float* %v, metadata !10898, metadata !DIExpression()), !dbg !10899
  %0 = load float*, float** %v2.addr, align 8, !dbg !10900
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !10900
  %1 = load float, float* %arrayidx, align 4, !dbg !10900
  %2 = load float*, float** %v1.addr, align 8, !dbg !10901
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !10901
  %3 = load float, float* %arrayidx1, align 4, !dbg !10901
  %sub = fsub float %1, %3, !dbg !10902
  %arrayidx2 = getelementptr inbounds [2 x float], [2 x float]* %a, i64 0, i64 0, !dbg !10903
  store float %sub, float* %arrayidx2, align 4, !dbg !10904
  %4 = load float*, float** %v2.addr, align 8, !dbg !10905
  %arrayidx3 = getelementptr inbounds float, float* %4, i64 1, !dbg !10905
  %5 = load float, float* %arrayidx3, align 4, !dbg !10905
  %6 = load float*, float** %v1.addr, align 8, !dbg !10906
  %arrayidx4 = getelementptr inbounds float, float* %6, i64 1, !dbg !10906
  %7 = load float, float* %arrayidx4, align 4, !dbg !10906
  %sub5 = fsub float %5, %7, !dbg !10907
  %arrayidx6 = getelementptr inbounds [2 x float], [2 x float]* %a, i64 0, i64 1, !dbg !10908
  store float %sub5, float* %arrayidx6, align 4, !dbg !10909
  %8 = load float*, float** %v3.addr, align 8, !dbg !10910
  %arrayidx7 = getelementptr inbounds float, float* %8, i64 0, !dbg !10910
  %9 = load float, float* %arrayidx7, align 4, !dbg !10910
  %10 = load float*, float** %v1.addr, align 8, !dbg !10911
  %arrayidx8 = getelementptr inbounds float, float* %10, i64 0, !dbg !10911
  %11 = load float, float* %arrayidx8, align 4, !dbg !10911
  %sub9 = fsub float %9, %11, !dbg !10912
  %arrayidx10 = getelementptr inbounds [2 x float], [2 x float]* %c, i64 0, i64 0, !dbg !10913
  store float %sub9, float* %arrayidx10, align 4, !dbg !10914
  %12 = load float*, float** %v3.addr, align 8, !dbg !10915
  %arrayidx11 = getelementptr inbounds float, float* %12, i64 1, !dbg !10915
  %13 = load float, float* %arrayidx11, align 4, !dbg !10915
  %14 = load float*, float** %v1.addr, align 8, !dbg !10916
  %arrayidx12 = getelementptr inbounds float, float* %14, i64 1, !dbg !10916
  %15 = load float, float* %arrayidx12, align 4, !dbg !10916
  %sub13 = fsub float %13, %15, !dbg !10917
  %arrayidx14 = getelementptr inbounds [2 x float], [2 x float]* %c, i64 0, i64 1, !dbg !10918
  store float %sub13, float* %arrayidx14, align 4, !dbg !10919
  %arrayidx15 = getelementptr inbounds [2 x float], [2 x float]* %a, i64 0, i64 0, !dbg !10920
  %16 = load float, float* %arrayidx15, align 4, !dbg !10920
  %arrayidx16 = getelementptr inbounds [2 x float], [2 x float]* %c, i64 0, i64 1, !dbg !10921
  %17 = load float, float* %arrayidx16, align 4, !dbg !10921
  %mul = fmul float %16, %17, !dbg !10922
  %arrayidx17 = getelementptr inbounds [2 x float], [2 x float]* %a, i64 0, i64 1, !dbg !10923
  %18 = load float, float* %arrayidx17, align 4, !dbg !10923
  %arrayidx18 = getelementptr inbounds [2 x float], [2 x float]* %c, i64 0, i64 0, !dbg !10924
  %19 = load float, float* %arrayidx18, align 4, !dbg !10924
  %mul19 = fmul float %18, %19, !dbg !10925
  %sub20 = fsub float %mul, %mul19, !dbg !10926
  store float %sub20, float* %div, align 4, !dbg !10927
  %20 = load float, float* %div, align 4, !dbg !10928
  %cmp = fcmp oeq float %20, 0.000000e+00, !dbg !10930
  br i1 %cmp, label %if.then, label %if.end, !dbg !10931

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !10932
  br label %return, !dbg !10932

if.end:                                           ; preds = %entry
  %21 = load float*, float** %p.addr, align 8, !dbg !10933
  %arrayidx21 = getelementptr inbounds float, float* %21, i64 0, !dbg !10933
  %22 = load float, float* %arrayidx21, align 4, !dbg !10933
  %23 = load float*, float** %v1.addr, align 8, !dbg !10934
  %arrayidx22 = getelementptr inbounds float, float* %23, i64 0, !dbg !10934
  %24 = load float, float* %arrayidx22, align 4, !dbg !10934
  %sub23 = fsub float %22, %24, !dbg !10935
  %arrayidx24 = getelementptr inbounds [2 x float], [2 x float]* %h, i64 0, i64 0, !dbg !10936
  store float %sub23, float* %arrayidx24, align 4, !dbg !10937
  %25 = load float*, float** %p.addr, align 8, !dbg !10938
  %arrayidx25 = getelementptr inbounds float, float* %25, i64 1, !dbg !10938
  %26 = load float, float* %arrayidx25, align 4, !dbg !10938
  %27 = load float*, float** %v1.addr, align 8, !dbg !10939
  %arrayidx26 = getelementptr inbounds float, float* %27, i64 1, !dbg !10939
  %28 = load float, float* %arrayidx26, align 4, !dbg !10939
  %sub27 = fsub float %26, %28, !dbg !10940
  %arrayidx28 = getelementptr inbounds [2 x float], [2 x float]* %h, i64 0, i64 1, !dbg !10941
  store float %sub27, float* %arrayidx28, align 4, !dbg !10942
  %29 = load float, float* %div, align 4, !dbg !10943
  %div29 = fdiv float 1.000000e+00, %29, !dbg !10944
  store float %div29, float* %div, align 4, !dbg !10945
  %arrayidx30 = getelementptr inbounds [2 x float], [2 x float]* %h, i64 0, i64 0, !dbg !10946
  %30 = load float, float* %arrayidx30, align 4, !dbg !10946
  %arrayidx31 = getelementptr inbounds [2 x float], [2 x float]* %c, i64 0, i64 1, !dbg !10947
  %31 = load float, float* %arrayidx31, align 4, !dbg !10947
  %mul32 = fmul float %30, %31, !dbg !10948
  %arrayidx33 = getelementptr inbounds [2 x float], [2 x float]* %h, i64 0, i64 1, !dbg !10949
  %32 = load float, float* %arrayidx33, align 4, !dbg !10949
  %arrayidx34 = getelementptr inbounds [2 x float], [2 x float]* %c, i64 0, i64 0, !dbg !10950
  %33 = load float, float* %arrayidx34, align 4, !dbg !10950
  %mul35 = fmul float %32, %33, !dbg !10951
  %sub36 = fsub float %mul32, %mul35, !dbg !10952
  %34 = load float, float* %div, align 4, !dbg !10953
  %mul37 = fmul float %sub36, %34, !dbg !10954
  store float %mul37, float* %u, align 4, !dbg !10955
  %35 = load float, float* %u, align 4, !dbg !10956
  %cmp38 = fcmp oge float %35, 0.000000e+00, !dbg !10958
  br i1 %cmp38, label %if.then39, label %if.end68, !dbg !10959

if.then39:                                        ; preds = %if.end
  %arrayidx40 = getelementptr inbounds [2 x float], [2 x float]* %a, i64 0, i64 0, !dbg !10960
  %36 = load float, float* %arrayidx40, align 4, !dbg !10960
  %arrayidx41 = getelementptr inbounds [2 x float], [2 x float]* %h, i64 0, i64 1, !dbg !10962
  %37 = load float, float* %arrayidx41, align 4, !dbg !10962
  %mul42 = fmul float %36, %37, !dbg !10963
  %arrayidx43 = getelementptr inbounds [2 x float], [2 x float]* %a, i64 0, i64 1, !dbg !10964
  %38 = load float, float* %arrayidx43, align 4, !dbg !10964
  %arrayidx44 = getelementptr inbounds [2 x float], [2 x float]* %h, i64 0, i64 0, !dbg !10965
  %39 = load float, float* %arrayidx44, align 4, !dbg !10965
  %mul45 = fmul float %38, %39, !dbg !10966
  %sub46 = fsub float %mul42, %mul45, !dbg !10967
  %40 = load float, float* %div, align 4, !dbg !10968
  %mul47 = fmul float %sub46, %40, !dbg !10969
  store float %mul47, float* %v, align 4, !dbg !10970
  %41 = load float, float* %v, align 4, !dbg !10971
  %cmp48 = fcmp oge float %41, 0.000000e+00, !dbg !10973
  br i1 %cmp48, label %if.then49, label %if.end67, !dbg !10974

if.then49:                                        ; preds = %if.then39
  %42 = load float, float* %u, align 4, !dbg !10975
  %43 = load float, float* %v, align 4, !dbg !10978
  %add = fadd float %42, %43, !dbg !10979
  %cmp50 = fcmp ole float %add, 1.000000e+00, !dbg !10980
  br i1 %cmp50, label %if.then51, label %if.end66, !dbg !10981

if.then51:                                        ; preds = %if.then49
  call void @llvm.dbg.declare(metadata float* %z, metadata !10982, metadata !DIExpression()), !dbg !10984
  %44 = load float, float* %u, align 4, !dbg !10985
  %sub52 = fsub float 1.000000e+00, %44, !dbg !10986
  %45 = load float, float* %v, align 4, !dbg !10987
  %sub53 = fsub float %sub52, %45, !dbg !10988
  %46 = load float*, float** %v1.addr, align 8, !dbg !10989
  %arrayidx54 = getelementptr inbounds float, float* %46, i64 2, !dbg !10989
  %47 = load float, float* %arrayidx54, align 4, !dbg !10989
  %mul55 = fmul float %sub53, %47, !dbg !10990
  %48 = load float, float* %u, align 4, !dbg !10991
  %49 = load float*, float** %v2.addr, align 8, !dbg !10992
  %arrayidx56 = getelementptr inbounds float, float* %49, i64 2, !dbg !10992
  %50 = load float, float* %arrayidx56, align 4, !dbg !10992
  %mul57 = fmul float %48, %50, !dbg !10993
  %add58 = fadd float %mul55, %mul57, !dbg !10994
  %51 = load float, float* %v, align 4, !dbg !10995
  %52 = load float*, float** %v3.addr, align 8, !dbg !10996
  %arrayidx59 = getelementptr inbounds float, float* %52, i64 2, !dbg !10996
  %53 = load float, float* %arrayidx59, align 4, !dbg !10996
  %mul60 = fmul float %51, %53, !dbg !10997
  %add61 = fadd float %add58, %mul60, !dbg !10998
  store float %add61, float* %z, align 4, !dbg !10984
  %54 = load float, float* %z, align 4, !dbg !10999
  %55 = load float*, float** %p.addr, align 8, !dbg !11001
  %arrayidx62 = getelementptr inbounds float, float* %55, i64 2, !dbg !11001
  %56 = load float, float* %arrayidx62, align 4, !dbg !11001
  %cmp63 = fcmp ole float %54, %56, !dbg !11002
  br i1 %cmp63, label %if.then64, label %if.end65, !dbg !11003

if.then64:                                        ; preds = %if.then51
  store i32 1, i32* %retval, align 4, !dbg !11004
  br label %return, !dbg !11004

if.end65:                                         ; preds = %if.then51
  br label %if.end66, !dbg !11005

if.end66:                                         ; preds = %if.end65, %if.then49
  br label %if.end67, !dbg !11006

if.end67:                                         ; preds = %if.end66, %if.then39
  br label %if.end68, !dbg !11007

if.end68:                                         ; preds = %if.end67, %if.end
  store i32 0, i32* %retval, align 4, !dbg !11008
  br label %return, !dbg !11008

return:                                           ; preds = %if.end68, %if.then64, %if.then
  %57 = load i32, i32* %retval, align 4, !dbg !11009
  ret i32 %57, !dbg !11009
}

; Function Attrs: noinline nounwind uwtable
define internal float @len_v2(float* %v) #0 !dbg !11010 {
entry:
  %v.addr = alloca float*, align 8
  store float* %v, float** %v.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v.addr, metadata !11013, metadata !DIExpression()), !dbg !11014
  %0 = load float*, float** %v.addr, align 8, !dbg !11015
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !11015
  %1 = load float, float* %arrayidx, align 4, !dbg !11015
  %2 = load float*, float** %v.addr, align 8, !dbg !11016
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !11016
  %3 = load float, float* %arrayidx1, align 4, !dbg !11016
  %mul = fmul float %1, %3, !dbg !11017
  %4 = load float*, float** %v.addr, align 8, !dbg !11018
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 1, !dbg !11018
  %5 = load float, float* %arrayidx2, align 4, !dbg !11018
  %6 = load float*, float** %v.addr, align 8, !dbg !11019
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 1, !dbg !11019
  %7 = load float, float* %arrayidx3, align 4, !dbg !11019
  %mul4 = fmul float %5, %7, !dbg !11020
  %add = fadd float %mul, %mul4, !dbg !11021
  %call = call float @sqrtf(float %add) #5, !dbg !11022
  ret float %call, !dbg !11023
}

; Function Attrs: noinline nounwind uwtable
define internal void @bspface_init_strand(%struct.BSPFace* %face) #0 !dbg !11024 {
entry:
  %face.addr = alloca %struct.BSPFace*, align 8
  store %struct.BSPFace* %face, %struct.BSPFace** %face.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BSPFace** %face.addr, metadata !11027, metadata !DIExpression()), !dbg !11028
  %0 = load %struct.BSPFace*, %struct.BSPFace** %face.addr, align 8, !dbg !11029
  %v1 = getelementptr inbounds %struct.BSPFace, %struct.BSPFace* %0, i32 0, i32 1, !dbg !11030
  %1 = load float*, float** %v1, align 8, !dbg !11030
  %2 = load %struct.BSPFace*, %struct.BSPFace** %face.addr, align 8, !dbg !11031
  %v2 = getelementptr inbounds %struct.BSPFace, %struct.BSPFace* %2, i32 0, i32 2, !dbg !11032
  %3 = load float*, float** %v2, align 8, !dbg !11032
  %call = call float @len_v2v2(float* %1, float* %3), !dbg !11033
  %mul = fmul float 5.000000e-01, %call, !dbg !11034
  %4 = load %struct.BSPFace*, %struct.BSPFace** %face.addr, align 8, !dbg !11035
  %radline = getelementptr inbounds %struct.BSPFace, %struct.BSPFace* %4, i32 0, i32 10, !dbg !11036
  store float %mul, float* %radline, align 8, !dbg !11037
  %5 = load %struct.BSPFace*, %struct.BSPFace** %face.addr, align 8, !dbg !11038
  %vec1 = getelementptr inbounds %struct.BSPFace, %struct.BSPFace* %5, i32 0, i32 13, !dbg !11039
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %vec1, i64 0, i64 0, !dbg !11038
  %6 = load %struct.BSPFace*, %struct.BSPFace** %face.addr, align 8, !dbg !11040
  %v11 = getelementptr inbounds %struct.BSPFace, %struct.BSPFace* %6, i32 0, i32 1, !dbg !11041
  %7 = load float*, float** %v11, align 8, !dbg !11041
  %8 = load %struct.BSPFace*, %struct.BSPFace** %face.addr, align 8, !dbg !11042
  %v22 = getelementptr inbounds %struct.BSPFace, %struct.BSPFace* %8, i32 0, i32 2, !dbg !11043
  %9 = load float*, float** %v22, align 8, !dbg !11043
  call void @mid_v3_v3v3(float* %arraydecay, float* %7, float* %9), !dbg !11044
  %10 = load %struct.BSPFace*, %struct.BSPFace** %face.addr, align 8, !dbg !11045
  %v4 = getelementptr inbounds %struct.BSPFace, %struct.BSPFace* %10, i32 0, i32 4, !dbg !11047
  %11 = load float*, float** %v4, align 8, !dbg !11047
  %tobool = icmp ne float* %11, null, !dbg !11045
  br i1 %tobool, label %if.then, label %if.else, !dbg !11048

if.then:                                          ; preds = %entry
  %12 = load %struct.BSPFace*, %struct.BSPFace** %face.addr, align 8, !dbg !11049
  %vec2 = getelementptr inbounds %struct.BSPFace, %struct.BSPFace* %12, i32 0, i32 14, !dbg !11050
  %arraydecay3 = getelementptr inbounds [3 x float], [3 x float]* %vec2, i64 0, i64 0, !dbg !11049
  %13 = load %struct.BSPFace*, %struct.BSPFace** %face.addr, align 8, !dbg !11051
  %v3 = getelementptr inbounds %struct.BSPFace, %struct.BSPFace* %13, i32 0, i32 3, !dbg !11052
  %14 = load float*, float** %v3, align 8, !dbg !11052
  %15 = load %struct.BSPFace*, %struct.BSPFace** %face.addr, align 8, !dbg !11053
  %v44 = getelementptr inbounds %struct.BSPFace, %struct.BSPFace* %15, i32 0, i32 4, !dbg !11054
  %16 = load float*, float** %v44, align 8, !dbg !11054
  call void @mid_v3_v3v3(float* %arraydecay3, float* %14, float* %16), !dbg !11055
  br label %if.end, !dbg !11055

if.else:                                          ; preds = %entry
  %17 = load %struct.BSPFace*, %struct.BSPFace** %face.addr, align 8, !dbg !11056
  %vec25 = getelementptr inbounds %struct.BSPFace, %struct.BSPFace* %17, i32 0, i32 14, !dbg !11057
  %arraydecay6 = getelementptr inbounds [3 x float], [3 x float]* %vec25, i64 0, i64 0, !dbg !11056
  %18 = load %struct.BSPFace*, %struct.BSPFace** %face.addr, align 8, !dbg !11058
  %v37 = getelementptr inbounds %struct.BSPFace, %struct.BSPFace* %18, i32 0, i32 3, !dbg !11059
  %19 = load float*, float** %v37, align 8, !dbg !11059
  call void @copy_v3_v3(float* %arraydecay6, float* %19), !dbg !11060
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %20 = load %struct.BSPFace*, %struct.BSPFace** %face.addr, align 8, !dbg !11061
  %vec28 = getelementptr inbounds %struct.BSPFace, %struct.BSPFace* %20, i32 0, i32 14, !dbg !11062
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %vec28, i64 0, i64 0, !dbg !11061
  %21 = load float, float* %arrayidx, align 8, !dbg !11061
  %22 = load %struct.BSPFace*, %struct.BSPFace** %face.addr, align 8, !dbg !11063
  %vec19 = getelementptr inbounds %struct.BSPFace, %struct.BSPFace* %22, i32 0, i32 13, !dbg !11064
  %arrayidx10 = getelementptr inbounds [3 x float], [3 x float]* %vec19, i64 0, i64 0, !dbg !11063
  %23 = load float, float* %arrayidx10, align 4, !dbg !11063
  %sub = fsub float %21, %23, !dbg !11065
  %24 = load %struct.BSPFace*, %struct.BSPFace** %face.addr, align 8, !dbg !11066
  %rc = getelementptr inbounds %struct.BSPFace, %struct.BSPFace* %24, i32 0, i32 15, !dbg !11067
  %arrayidx11 = getelementptr inbounds [3 x float], [3 x float]* %rc, i64 0, i64 0, !dbg !11066
  store float %sub, float* %arrayidx11, align 4, !dbg !11068
  %25 = load %struct.BSPFace*, %struct.BSPFace** %face.addr, align 8, !dbg !11069
  %vec212 = getelementptr inbounds %struct.BSPFace, %struct.BSPFace* %25, i32 0, i32 14, !dbg !11070
  %arrayidx13 = getelementptr inbounds [3 x float], [3 x float]* %vec212, i64 0, i64 1, !dbg !11069
  %26 = load float, float* %arrayidx13, align 4, !dbg !11069
  %27 = load %struct.BSPFace*, %struct.BSPFace** %face.addr, align 8, !dbg !11071
  %vec114 = getelementptr inbounds %struct.BSPFace, %struct.BSPFace* %27, i32 0, i32 13, !dbg !11072
  %arrayidx15 = getelementptr inbounds [3 x float], [3 x float]* %vec114, i64 0, i64 1, !dbg !11071
  %28 = load float, float* %arrayidx15, align 4, !dbg !11071
  %sub16 = fsub float %26, %28, !dbg !11073
  %29 = load %struct.BSPFace*, %struct.BSPFace** %face.addr, align 8, !dbg !11074
  %rc17 = getelementptr inbounds %struct.BSPFace, %struct.BSPFace* %29, i32 0, i32 15, !dbg !11075
  %arrayidx18 = getelementptr inbounds [3 x float], [3 x float]* %rc17, i64 0, i64 1, !dbg !11074
  store float %sub16, float* %arrayidx18, align 4, !dbg !11076
  %30 = load %struct.BSPFace*, %struct.BSPFace** %face.addr, align 8, !dbg !11077
  %vec219 = getelementptr inbounds %struct.BSPFace, %struct.BSPFace* %30, i32 0, i32 14, !dbg !11078
  %arrayidx20 = getelementptr inbounds [3 x float], [3 x float]* %vec219, i64 0, i64 2, !dbg !11077
  %31 = load float, float* %arrayidx20, align 8, !dbg !11077
  %32 = load %struct.BSPFace*, %struct.BSPFace** %face.addr, align 8, !dbg !11079
  %vec121 = getelementptr inbounds %struct.BSPFace, %struct.BSPFace* %32, i32 0, i32 13, !dbg !11080
  %arrayidx22 = getelementptr inbounds [3 x float], [3 x float]* %vec121, i64 0, i64 2, !dbg !11079
  %33 = load float, float* %arrayidx22, align 4, !dbg !11079
  %sub23 = fsub float %31, %33, !dbg !11081
  %34 = load %struct.BSPFace*, %struct.BSPFace** %face.addr, align 8, !dbg !11082
  %rc24 = getelementptr inbounds %struct.BSPFace, %struct.BSPFace* %34, i32 0, i32 15, !dbg !11083
  %arrayidx25 = getelementptr inbounds [3 x float], [3 x float]* %rc24, i64 0, i64 2, !dbg !11082
  store float %sub23, float* %arrayidx25, align 4, !dbg !11084
  %35 = load %struct.BSPFace*, %struct.BSPFace** %face.addr, align 8, !dbg !11085
  %rc26 = getelementptr inbounds %struct.BSPFace, %struct.BSPFace* %35, i32 0, i32 15, !dbg !11086
  %arrayidx27 = getelementptr inbounds [3 x float], [3 x float]* %rc26, i64 0, i64 0, !dbg !11085
  %36 = load float, float* %arrayidx27, align 4, !dbg !11085
  %37 = load %struct.BSPFace*, %struct.BSPFace** %face.addr, align 8, !dbg !11087
  %rc28 = getelementptr inbounds %struct.BSPFace, %struct.BSPFace* %37, i32 0, i32 15, !dbg !11088
  %arrayidx29 = getelementptr inbounds [3 x float], [3 x float]* %rc28, i64 0, i64 0, !dbg !11087
  %38 = load float, float* %arrayidx29, align 4, !dbg !11087
  %mul30 = fmul float %36, %38, !dbg !11089
  %39 = load %struct.BSPFace*, %struct.BSPFace** %face.addr, align 8, !dbg !11090
  %rc31 = getelementptr inbounds %struct.BSPFace, %struct.BSPFace* %39, i32 0, i32 15, !dbg !11091
  %arrayidx32 = getelementptr inbounds [3 x float], [3 x float]* %rc31, i64 0, i64 1, !dbg !11090
  %40 = load float, float* %arrayidx32, align 4, !dbg !11090
  %41 = load %struct.BSPFace*, %struct.BSPFace** %face.addr, align 8, !dbg !11092
  %rc33 = getelementptr inbounds %struct.BSPFace, %struct.BSPFace* %41, i32 0, i32 15, !dbg !11093
  %arrayidx34 = getelementptr inbounds [3 x float], [3 x float]* %rc33, i64 0, i64 1, !dbg !11092
  %42 = load float, float* %arrayidx34, align 4, !dbg !11092
  %mul35 = fmul float %40, %42, !dbg !11094
  %add = fadd float %mul30, %mul35, !dbg !11095
  %43 = load %struct.BSPFace*, %struct.BSPFace** %face.addr, align 8, !dbg !11096
  %len = getelementptr inbounds %struct.BSPFace, %struct.BSPFace* %43, i32 0, i32 12, !dbg !11097
  store float %add, float* %len, align 8, !dbg !11098
  %44 = load %struct.BSPFace*, %struct.BSPFace** %face.addr, align 8, !dbg !11099
  %len36 = getelementptr inbounds %struct.BSPFace, %struct.BSPFace* %44, i32 0, i32 12, !dbg !11101
  %45 = load float, float* %len36, align 8, !dbg !11101
  %cmp = fcmp une float %45, 0.000000e+00, !dbg !11102
  br i1 %cmp, label %if.then37, label %if.end44, !dbg !11103

if.then37:                                        ; preds = %if.end
  %46 = load %struct.BSPFace*, %struct.BSPFace** %face.addr, align 8, !dbg !11104
  %radline38 = getelementptr inbounds %struct.BSPFace, %struct.BSPFace* %46, i32 0, i32 10, !dbg !11106
  %47 = load float, float* %radline38, align 8, !dbg !11106
  %48 = load %struct.BSPFace*, %struct.BSPFace** %face.addr, align 8, !dbg !11107
  %len39 = getelementptr inbounds %struct.BSPFace, %struct.BSPFace* %48, i32 0, i32 12, !dbg !11108
  %49 = load float, float* %len39, align 8, !dbg !11108
  %call40 = call float @sqrtf(float %49) #5, !dbg !11109
  %div = fdiv float %47, %call40, !dbg !11110
  %50 = load %struct.BSPFace*, %struct.BSPFace** %face.addr, align 8, !dbg !11111
  %radline_end = getelementptr inbounds %struct.BSPFace, %struct.BSPFace* %50, i32 0, i32 11, !dbg !11112
  store float %div, float* %radline_end, align 4, !dbg !11113
  %51 = load %struct.BSPFace*, %struct.BSPFace** %face.addr, align 8, !dbg !11114
  %len41 = getelementptr inbounds %struct.BSPFace, %struct.BSPFace* %51, i32 0, i32 12, !dbg !11115
  %52 = load float, float* %len41, align 8, !dbg !11115
  %div42 = fdiv float 1.000000e+00, %52, !dbg !11116
  %53 = load %struct.BSPFace*, %struct.BSPFace** %face.addr, align 8, !dbg !11117
  %len43 = getelementptr inbounds %struct.BSPFace, %struct.BSPFace* %53, i32 0, i32 12, !dbg !11118
  store float %div42, float* %len43, align 8, !dbg !11119
  br label %if.end44, !dbg !11120

if.end44:                                         ; preds = %if.then37, %if.end
  ret void, !dbg !11121
}

; Function Attrs: noinline nounwind uwtable
define internal float @len_v2v2(float* %v1, float* %v2) #0 !dbg !11122 {
entry:
  %v1.addr = alloca float*, align 8
  %v2.addr = alloca float*, align 8
  %x = alloca float, align 4
  %y = alloca float, align 4
  store float* %v1, float** %v1.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v1.addr, metadata !11123, metadata !DIExpression()), !dbg !11124
  store float* %v2, float** %v2.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v2.addr, metadata !11125, metadata !DIExpression()), !dbg !11126
  call void @llvm.dbg.declare(metadata float* %x, metadata !11127, metadata !DIExpression()), !dbg !11128
  call void @llvm.dbg.declare(metadata float* %y, metadata !11129, metadata !DIExpression()), !dbg !11130
  %0 = load float*, float** %v1.addr, align 8, !dbg !11131
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !11131
  %1 = load float, float* %arrayidx, align 4, !dbg !11131
  %2 = load float*, float** %v2.addr, align 8, !dbg !11132
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !11132
  %3 = load float, float* %arrayidx1, align 4, !dbg !11132
  %sub = fsub float %1, %3, !dbg !11133
  store float %sub, float* %x, align 4, !dbg !11134
  %4 = load float*, float** %v1.addr, align 8, !dbg !11135
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 1, !dbg !11135
  %5 = load float, float* %arrayidx2, align 4, !dbg !11135
  %6 = load float*, float** %v2.addr, align 8, !dbg !11136
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 1, !dbg !11136
  %7 = load float, float* %arrayidx3, align 4, !dbg !11136
  %sub4 = fsub float %5, %7, !dbg !11137
  store float %sub4, float* %y, align 4, !dbg !11138
  %8 = load float, float* %x, align 4, !dbg !11139
  %9 = load float, float* %x, align 4, !dbg !11140
  %mul = fmul float %8, %9, !dbg !11141
  %10 = load float, float* %y, align 4, !dbg !11142
  %11 = load float, float* %y, align 4, !dbg !11143
  %mul5 = fmul float %10, %11, !dbg !11144
  %add = fadd float %mul, %mul5, !dbg !11145
  %call = call float @sqrtf(float %add) #5, !dbg !11146
  ret float %call, !dbg !11147
}

declare dso_local void @mid_v3_v3v3(float*, float*, float*) #4

; Function Attrs: noinline nounwind uwtable
define internal i32 @isb_add_samples(%struct.RenderPart* %pa, %struct.ISBBranch* %root, %struct.MemArena* %memarena, %struct.ISBSample** %samplebuf) #0 !dbg !11148 {
entry:
  %pa.addr = alloca %struct.RenderPart*, align 8
  %root.addr = alloca %struct.ISBBranch*, align 8
  %memarena.addr = alloca %struct.MemArena*, align 8
  %samplebuf.addr = alloca %struct.ISBSample**, align 8
  %xi = alloca i32, align 4
  %yi = alloca i32, align 4
  %xcos = alloca i32*, align 8
  %ycos = alloca i32*, align 8
  %sample = alloca i32, align 4
  %bsp_err = alloca i32, align 4
  %samp = alloca %struct.ISBSample*, align 8
  %samp1 = alloca %struct.ISBSample*, align 8
  %y = alloca i32, align 4
  %x = alloca i32, align 4
  store %struct.RenderPart* %pa, %struct.RenderPart** %pa.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RenderPart** %pa.addr, metadata !11151, metadata !DIExpression()), !dbg !11152
  store %struct.ISBBranch* %root, %struct.ISBBranch** %root.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ISBBranch** %root.addr, metadata !11153, metadata !DIExpression()), !dbg !11154
  store %struct.MemArena* %memarena, %struct.MemArena** %memarena.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MemArena** %memarena.addr, metadata !11155, metadata !DIExpression()), !dbg !11156
  store %struct.ISBSample** %samplebuf, %struct.ISBSample*** %samplebuf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ISBSample*** %samplebuf.addr, metadata !11157, metadata !DIExpression()), !dbg !11158
  call void @llvm.dbg.declare(metadata i32* %xi, metadata !11159, metadata !DIExpression()), !dbg !11160
  call void @llvm.dbg.declare(metadata i32* %yi, metadata !11161, metadata !DIExpression()), !dbg !11162
  call void @llvm.dbg.declare(metadata i32** %xcos, metadata !11163, metadata !DIExpression()), !dbg !11164
  call void @llvm.dbg.declare(metadata i32** %ycos, metadata !11165, metadata !DIExpression()), !dbg !11166
  call void @llvm.dbg.declare(metadata i32* %sample, metadata !11167, metadata !DIExpression()), !dbg !11168
  call void @llvm.dbg.declare(metadata i32* %bsp_err, metadata !11169, metadata !DIExpression()), !dbg !11170
  store i32 0, i32* %bsp_err, align 4, !dbg !11170
  %0 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !11171
  %1 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !11172
  %rectx = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %1, i32 0, i32 14, !dbg !11173
  %2 = load i32, i32* %rectx, align 8, !dbg !11173
  %conv = sext i32 %2 to i64, !dbg !11172
  %mul = mul i64 %conv, 4, !dbg !11174
  %call = call i8* %0(i64 %mul, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.21, i64 0, i64 0)), !dbg !11171
  %3 = bitcast i8* %call to i32*, !dbg !11171
  store i32* %3, i32** %xcos, align 8, !dbg !11175
  %4 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !11176
  %5 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !11177
  %recty = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %5, i32 0, i32 15, !dbg !11178
  %6 = load i32, i32* %recty, align 4, !dbg !11178
  %conv1 = sext i32 %6 to i64, !dbg !11177
  %mul2 = mul i64 %conv1, 4, !dbg !11179
  %call3 = call i8* %4(i64 %mul2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.22, i64 0, i64 0)), !dbg !11176
  %7 = bitcast i8* %call3 to i32*, !dbg !11176
  store i32* %7, i32** %ycos, align 8, !dbg !11180
  store i32 0, i32* %xi, align 4, !dbg !11181
  br label %for.cond, !dbg !11183

for.cond:                                         ; preds = %for.inc, %entry
  %8 = load i32, i32* %xi, align 4, !dbg !11184
  %9 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !11186
  %rectx4 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %9, i32 0, i32 14, !dbg !11187
  %10 = load i32, i32* %rectx4, align 8, !dbg !11187
  %cmp = icmp slt i32 %8, %10, !dbg !11188
  br i1 %cmp, label %for.body, label %for.end, !dbg !11189

for.body:                                         ; preds = %for.cond
  %11 = load i32, i32* %xi, align 4, !dbg !11190
  %12 = load i32*, i32** %xcos, align 8, !dbg !11191
  %13 = load i32, i32* %xi, align 4, !dbg !11192
  %idxprom = sext i32 %13 to i64, !dbg !11191
  %arrayidx = getelementptr inbounds i32, i32* %12, i64 %idxprom, !dbg !11191
  store i32 %11, i32* %arrayidx, align 4, !dbg !11193
  br label %for.inc, !dbg !11191

for.inc:                                          ; preds = %for.body
  %14 = load i32, i32* %xi, align 4, !dbg !11194
  %inc = add nsw i32 %14, 1, !dbg !11194
  store i32 %inc, i32* %xi, align 4, !dbg !11194
  br label %for.cond, !dbg !11195, !llvm.loop !11196

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %yi, align 4, !dbg !11198
  br label %for.cond6, !dbg !11200

for.cond6:                                        ; preds = %for.inc13, %for.end
  %15 = load i32, i32* %yi, align 4, !dbg !11201
  %16 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !11203
  %recty7 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %16, i32 0, i32 15, !dbg !11204
  %17 = load i32, i32* %recty7, align 4, !dbg !11204
  %cmp8 = icmp slt i32 %15, %17, !dbg !11205
  br i1 %cmp8, label %for.body10, label %for.end15, !dbg !11206

for.body10:                                       ; preds = %for.cond6
  %18 = load i32, i32* %yi, align 4, !dbg !11207
  %19 = load i32*, i32** %ycos, align 8, !dbg !11208
  %20 = load i32, i32* %yi, align 4, !dbg !11209
  %idxprom11 = sext i32 %20 to i64, !dbg !11208
  %arrayidx12 = getelementptr inbounds i32, i32* %19, i64 %idxprom11, !dbg !11208
  store i32 %18, i32* %arrayidx12, align 4, !dbg !11210
  br label %for.inc13, !dbg !11208

for.inc13:                                        ; preds = %for.body10
  %21 = load i32, i32* %yi, align 4, !dbg !11211
  %inc14 = add nsw i32 %21, 1, !dbg !11211
  store i32 %inc14, i32* %yi, align 4, !dbg !11211
  br label %for.cond6, !dbg !11212, !llvm.loop !11213

for.end15:                                        ; preds = %for.cond6
  %22 = load i32*, i32** %xcos, align 8, !dbg !11215
  %23 = bitcast i32* %22 to i8*, !dbg !11215
  %24 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !11216
  %rectx16 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %24, i32 0, i32 14, !dbg !11217
  %25 = load i32, i32* %rectx16, align 8, !dbg !11217
  call void @BLI_array_randomize(i8* %23, i32 4, i32 %25, i32 12345), !dbg !11218
  %26 = load i32*, i32** %ycos, align 8, !dbg !11219
  %27 = bitcast i32* %26 to i8*, !dbg !11219
  %28 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !11220
  %recty17 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %28, i32 0, i32 15, !dbg !11221
  %29 = load i32, i32* %recty17, align 4, !dbg !11221
  call void @BLI_array_randomize(i8* %27, i32 4, i32 %29, i32 54321), !dbg !11222
  store i32 0, i32* %sample, align 4, !dbg !11223
  br label %for.cond18, !dbg !11225

for.cond18:                                       ; preds = %for.inc55, %for.end15
  %30 = load i32, i32* %sample, align 4, !dbg !11226
  %31 = load i16, i16* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 5), align 2, !dbg !11228
  %conv19 = sext i16 %31 to i32, !dbg !11229
  %tobool = icmp ne i32 %conv19, 0, !dbg !11229
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !11229

cond.true:                                        ; preds = %for.cond18
  %32 = load i16, i16* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 5), align 2, !dbg !11230
  %conv20 = sext i16 %32 to i32, !dbg !11231
  br label %cond.end, !dbg !11229

cond.false:                                       ; preds = %for.cond18
  br label %cond.end, !dbg !11229

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv20, %cond.true ], [ 1, %cond.false ], !dbg !11229
  %cmp21 = icmp slt i32 %30, %cond, !dbg !11232
  br i1 %cmp21, label %for.body23, label %for.end57, !dbg !11233

for.body23:                                       ; preds = %cond.end
  call void @llvm.dbg.declare(metadata %struct.ISBSample** %samp, metadata !11234, metadata !DIExpression()), !dbg !11236
  %33 = load %struct.ISBSample**, %struct.ISBSample*** %samplebuf.addr, align 8, !dbg !11237
  %34 = load i32, i32* %sample, align 4, !dbg !11238
  %idxprom24 = sext i32 %34 to i64, !dbg !11237
  %arrayidx25 = getelementptr inbounds %struct.ISBSample*, %struct.ISBSample** %33, i64 %idxprom24, !dbg !11237
  %35 = load %struct.ISBSample*, %struct.ISBSample** %arrayidx25, align 8, !dbg !11237
  store %struct.ISBSample* %35, %struct.ISBSample** %samp, align 8, !dbg !11236
  call void @llvm.dbg.declare(metadata %struct.ISBSample** %samp1, metadata !11239, metadata !DIExpression()), !dbg !11240
  store i32 0, i32* %yi, align 4, !dbg !11241
  br label %for.cond26, !dbg !11243

for.cond26:                                       ; preds = %for.inc52, %for.body23
  %36 = load i32, i32* %yi, align 4, !dbg !11244
  %37 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !11246
  %recty27 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %37, i32 0, i32 15, !dbg !11247
  %38 = load i32, i32* %recty27, align 4, !dbg !11247
  %cmp28 = icmp slt i32 %36, %38, !dbg !11248
  br i1 %cmp28, label %for.body30, label %for.end54, !dbg !11249

for.body30:                                       ; preds = %for.cond26
  call void @llvm.dbg.declare(metadata i32* %y, metadata !11250, metadata !DIExpression()), !dbg !11252
  %39 = load i32*, i32** %ycos, align 8, !dbg !11253
  %40 = load i32, i32* %yi, align 4, !dbg !11254
  %idxprom31 = sext i32 %40 to i64, !dbg !11253
  %arrayidx32 = getelementptr inbounds i32, i32* %39, i64 %idxprom31, !dbg !11253
  %41 = load i32, i32* %arrayidx32, align 4, !dbg !11253
  store i32 %41, i32* %y, align 4, !dbg !11252
  store i32 0, i32* %xi, align 4, !dbg !11255
  br label %for.cond33, !dbg !11257

for.cond33:                                       ; preds = %for.inc46, %for.body30
  %42 = load i32, i32* %xi, align 4, !dbg !11258
  %43 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !11260
  %rectx34 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %43, i32 0, i32 14, !dbg !11261
  %44 = load i32, i32* %rectx34, align 8, !dbg !11261
  %cmp35 = icmp slt i32 %42, %44, !dbg !11262
  br i1 %cmp35, label %for.body37, label %for.end48, !dbg !11263

for.body37:                                       ; preds = %for.cond33
  call void @llvm.dbg.declare(metadata i32* %x, metadata !11264, metadata !DIExpression()), !dbg !11266
  %45 = load i32*, i32** %xcos, align 8, !dbg !11267
  %46 = load i32, i32* %xi, align 4, !dbg !11268
  %idxprom38 = sext i32 %46 to i64, !dbg !11267
  %arrayidx39 = getelementptr inbounds i32, i32* %45, i64 %idxprom38, !dbg !11267
  %47 = load i32, i32* %arrayidx39, align 4, !dbg !11267
  store i32 %47, i32* %x, align 4, !dbg !11266
  %48 = load %struct.ISBSample*, %struct.ISBSample** %samp, align 8, !dbg !11269
  %49 = load i32, i32* %y, align 4, !dbg !11270
  %50 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !11271
  %rectx40 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %50, i32 0, i32 14, !dbg !11272
  %51 = load i32, i32* %rectx40, align 8, !dbg !11272
  %mul41 = mul nsw i32 %49, %51, !dbg !11273
  %idx.ext = sext i32 %mul41 to i64, !dbg !11274
  %add.ptr = getelementptr inbounds %struct.ISBSample, %struct.ISBSample* %48, i64 %idx.ext, !dbg !11274
  %52 = load i32, i32* %x, align 4, !dbg !11275
  %idx.ext42 = sext i32 %52 to i64, !dbg !11276
  %add.ptr43 = getelementptr inbounds %struct.ISBSample, %struct.ISBSample* %add.ptr, i64 %idx.ext42, !dbg !11276
  store %struct.ISBSample* %add.ptr43, %struct.ISBSample** %samp1, align 8, !dbg !11277
  %53 = load %struct.ISBSample*, %struct.ISBSample** %samp1, align 8, !dbg !11278
  %facenr = getelementptr inbounds %struct.ISBSample, %struct.ISBSample* %53, i32 0, i32 3, !dbg !11280
  %54 = load i32, i32* %facenr, align 4, !dbg !11280
  %tobool44 = icmp ne i32 %54, 0, !dbg !11278
  br i1 %tobool44, label %if.then, label %if.end, !dbg !11281

if.then:                                          ; preds = %for.body37
  %55 = load %struct.ISBBranch*, %struct.ISBBranch** %root.addr, align 8, !dbg !11282
  %56 = load %struct.MemArena*, %struct.MemArena** %memarena.addr, align 8, !dbg !11283
  %57 = load %struct.ISBSample*, %struct.ISBSample** %samp1, align 8, !dbg !11284
  %call45 = call i32 @isb_bsp_insert(%struct.ISBBranch* %55, %struct.MemArena* %56, %struct.ISBSample* %57), !dbg !11285
  %58 = load i32, i32* %bsp_err, align 4, !dbg !11286
  %or = or i32 %58, %call45, !dbg !11286
  store i32 %or, i32* %bsp_err, align 4, !dbg !11286
  br label %if.end, !dbg !11287

if.end:                                           ; preds = %if.then, %for.body37
  br label %for.inc46, !dbg !11288

for.inc46:                                        ; preds = %if.end
  %59 = load i32, i32* %xi, align 4, !dbg !11289
  %inc47 = add nsw i32 %59, 1, !dbg !11289
  store i32 %inc47, i32* %xi, align 4, !dbg !11289
  br label %for.cond33, !dbg !11290, !llvm.loop !11291

for.end48:                                        ; preds = %for.cond33
  %60 = load i32, i32* %bsp_err, align 4, !dbg !11293
  %tobool49 = icmp ne i32 %60, 0, !dbg !11293
  br i1 %tobool49, label %if.then50, label %if.end51, !dbg !11295

if.then50:                                        ; preds = %for.end48
  br label %for.end54, !dbg !11296

if.end51:                                         ; preds = %for.end48
  br label %for.inc52, !dbg !11297

for.inc52:                                        ; preds = %if.end51
  %61 = load i32, i32* %yi, align 4, !dbg !11298
  %inc53 = add nsw i32 %61, 1, !dbg !11298
  store i32 %inc53, i32* %yi, align 4, !dbg !11298
  br label %for.cond26, !dbg !11299, !llvm.loop !11300

for.end54:                                        ; preds = %if.then50, %for.cond26
  br label %for.inc55, !dbg !11302

for.inc55:                                        ; preds = %for.end54
  %62 = load i32, i32* %sample, align 4, !dbg !11303
  %inc56 = add nsw i32 %62, 1, !dbg !11303
  store i32 %inc56, i32* %sample, align 4, !dbg !11303
  br label %for.cond18, !dbg !11304, !llvm.loop !11305

for.end57:                                        ; preds = %cond.end
  %63 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !11307
  %64 = load i32*, i32** %xcos, align 8, !dbg !11308
  %65 = bitcast i32* %64 to i8*, !dbg !11308
  call void %63(i8* %65), !dbg !11307
  %66 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !11309
  %67 = load i32*, i32** %ycos, align 8, !dbg !11310
  %68 = bitcast i32* %67 to i8*, !dbg !11310
  call void %66(i8* %68), !dbg !11309
  %69 = load i32, i32* %bsp_err, align 4, !dbg !11311
  ret i32 %69, !dbg !11312
}

attributes #0 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable willreturn }
attributes #2 = { argmemonly nounwind willreturn }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }

!llvm.dbg.cu = !{!2}
!llvm.module.flags = !{!2279, !2280, !2281}
!llvm.ident = !{!2282}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "g_break", scope: !2, file: !3, line: 839, type: !2278, isLocal: true, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !5, globals: !2261, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "blender/source/blender/render/intern/source/shadbuf.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!4 = !{}
!5 = !{!6, !7, !8, !9, !13, !21, !22, !26, !23, !27, !29, !2210, !2211, !2213, !2214, !43, !2224, !2248}
!6 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!7 = !DIBasicType(name: "float", size: 32, encoding: DW_ATE_float)
!8 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!9 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10, size: 64)
!10 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 64, elements: !11)
!11 = !{!12}
!12 = !DISubrange(count: 2)
!13 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14, size: 64)
!14 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !15)
!15 = !DIDerivedType(tag: DW_TAG_typedef, name: "DeepSample", file: !16, line: 287, baseType: !17)
!16 = !DIFile(filename: "blender/source/blender/render/intern/include/render_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!17 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DeepSample", file: !16, line: 284, size: 64, elements: !18)
!18 = !{!19, !20}
!19 = !DIDerivedType(tag: DW_TAG_member, name: "z", scope: !17, file: !16, line: 285, baseType: !8, size: 32)
!20 = !DIDerivedType(tag: DW_TAG_member, name: "v", scope: !17, file: !16, line: 286, baseType: !7, size: 32, offset: 32)
!21 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!22 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !23, size: 64)
!23 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintptr_t", file: !24, line: 90, baseType: !25)
!24 = !DIFile(filename: "/usr/include/stdint.h", directory: "")
!25 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!26 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8, size: 64)
!27 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !28, size: 64)
!28 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!29 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !30, size: 64)
!30 = !DIDerivedType(tag: DW_TAG_typedef, name: "Render", file: !31, line: 58, baseType: !32)
!31 = !DIFile(filename: "blender/source/blender/render/extern/include/RE_pipeline.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!32 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Render", file: !16, line: 126, size: 49920, elements: !33)
!33 = !{!34, !36, !37, !41, !42, !44, !45, !46, !47, !49, !1717, !1718, !1719, !1726, !1727, !1728, !1729, !1730, !1731, !1732, !1733, !1734, !1735, !1736, !1737, !1738, !1739, !1740, !1741, !1742, !1743, !1744, !1745, !1746, !1747, !1748, !1749, !1750, !1751, !1770, !1773, !1774, !1775, !1777, !1835, !1838, !1840, !1842, !1843, !1844, !1845, !1846, !1849, !1852, !1855, !1858, !1859, !1860, !1861, !1862, !1863, !1864, !1865, !1866, !1867, !1868, !1907, !1908, !1909, !1910, !2124, !2125, !2126, !2127, !2128, !2129, !2130, !2131, !2132, !2133, !2134, !2135, !2139, !2143, !2144, !2145, !2146, !2151, !2152, !2156, !2157, !2188, !2189, !2193, !2194, !2198, !2199, !2203, !2204, !2205, !2208, !2209}
!34 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !32, file: !16, line: 128, baseType: !35, size: 64)
!35 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !32, size: 64)
!36 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !32, file: !16, line: 128, baseType: !35, size: 64, offset: 64)
!37 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !32, file: !16, line: 129, baseType: !38, size: 592, offset: 128)
!38 = !DICompositeType(tag: DW_TAG_array_type, baseType: !28, size: 592, elements: !39)
!39 = !{!40}
!40 = !DISubrange(count: 74)
!41 = !DIDerivedType(tag: DW_TAG_member, name: "slot", scope: !32, file: !16, line: 130, baseType: !8, size: 32, offset: 736)
!42 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !32, file: !16, line: 133, baseType: !43, size: 16, offset: 768)
!43 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!44 = !DIDerivedType(tag: DW_TAG_member, name: "osa", scope: !32, file: !16, line: 133, baseType: !43, size: 16, offset: 784)
!45 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !32, file: !16, line: 133, baseType: !43, size: 16, offset: 800)
!46 = !DIDerivedType(tag: DW_TAG_member, name: "result_ok", scope: !32, file: !16, line: 133, baseType: !43, size: 16, offset: 816)
!47 = !DIDerivedType(tag: DW_TAG_member, name: "scene_color_manage", scope: !32, file: !16, line: 136, baseType: !48, size: 8, offset: 832)
!48 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!49 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !32, file: !16, line: 139, baseType: !50, size: 64, offset: 896)
!50 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !51, size: 64)
!51 = !DIDerivedType(tag: DW_TAG_typedef, name: "RenderResult", file: !31, line: 148, baseType: !52)
!52 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RenderResult", file: !31, line: 110, size: 1152, elements: !53)
!53 = !{!54, !56, !57, !58, !59, !60, !61, !62, !64, !65, !74, !75, !76, !83, !85, !1713, !1714, !1715, !1716}
!54 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !52, file: !31, line: 111, baseType: !55, size: 64)
!55 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !52, size: 64)
!56 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !52, file: !31, line: 111, baseType: !55, size: 64, offset: 64)
!57 = !DIDerivedType(tag: DW_TAG_member, name: "rectx", scope: !52, file: !31, line: 114, baseType: !8, size: 32, offset: 128)
!58 = !DIDerivedType(tag: DW_TAG_member, name: "recty", scope: !52, file: !31, line: 114, baseType: !8, size: 32, offset: 160)
!59 = !DIDerivedType(tag: DW_TAG_member, name: "crop", scope: !52, file: !31, line: 115, baseType: !43, size: 16, offset: 192)
!60 = !DIDerivedType(tag: DW_TAG_member, name: "sample_nr", scope: !52, file: !31, line: 115, baseType: !43, size: 16, offset: 208)
!61 = !DIDerivedType(tag: DW_TAG_member, name: "rect32", scope: !52, file: !31, line: 118, baseType: !26, size: 64, offset: 256)
!62 = !DIDerivedType(tag: DW_TAG_member, name: "rectf", scope: !52, file: !31, line: 120, baseType: !63, size: 64, offset: 320)
!63 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!64 = !DIDerivedType(tag: DW_TAG_member, name: "rectz", scope: !52, file: !31, line: 122, baseType: !63, size: 64, offset: 384)
!65 = !DIDerivedType(tag: DW_TAG_member, name: "tilerect", scope: !52, file: !31, line: 125, baseType: !66, size: 128, offset: 448)
!66 = !DIDerivedType(tag: DW_TAG_typedef, name: "rcti", file: !67, line: 89, baseType: !68)
!67 = !DIFile(filename: "blender/source/blender/makesdna/DNA_vec_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!68 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcti", file: !67, line: 86, size: 128, elements: !69)
!69 = !{!70, !71, !72, !73}
!70 = !DIDerivedType(tag: DW_TAG_member, name: "xmin", scope: !68, file: !67, line: 87, baseType: !8, size: 32)
!71 = !DIDerivedType(tag: DW_TAG_member, name: "xmax", scope: !68, file: !67, line: 87, baseType: !8, size: 32, offset: 32)
!72 = !DIDerivedType(tag: DW_TAG_member, name: "ymin", scope: !68, file: !67, line: 88, baseType: !8, size: 32, offset: 64)
!73 = !DIDerivedType(tag: DW_TAG_member, name: "ymax", scope: !68, file: !67, line: 88, baseType: !8, size: 32, offset: 96)
!74 = !DIDerivedType(tag: DW_TAG_member, name: "xof", scope: !52, file: !31, line: 127, baseType: !8, size: 32, offset: 576)
!75 = !DIDerivedType(tag: DW_TAG_member, name: "yof", scope: !52, file: !31, line: 127, baseType: !8, size: 32, offset: 608)
!76 = !DIDerivedType(tag: DW_TAG_member, name: "layers", scope: !52, file: !31, line: 130, baseType: !77, size: 128, offset: 640)
!77 = !DIDerivedType(tag: DW_TAG_typedef, name: "ListBase", file: !78, line: 71, baseType: !79)
!78 = !DIFile(filename: "blender/source/blender/makesdna/DNA_listBase.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!79 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ListBase", file: !78, line: 69, size: 128, elements: !80)
!80 = !{!81, !82}
!81 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !79, file: !78, line: 70, baseType: !6, size: 64)
!82 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !79, file: !78, line: 70, baseType: !6, size: 64, offset: 64)
!83 = !DIDerivedType(tag: DW_TAG_member, name: "renrect", scope: !52, file: !31, line: 133, baseType: !84, size: 128, offset: 768)
!84 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !66)
!85 = !DIDerivedType(tag: DW_TAG_member, name: "renlay", scope: !52, file: !31, line: 134, baseType: !86, size: 64, offset: 896)
!86 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !87, size: 64)
!87 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !88)
!88 = !DIDerivedType(tag: DW_TAG_typedef, name: "RenderLayer", file: !31, line: 108, baseType: !89)
!89 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RenderLayer", file: !31, line: 85, size: 1600, elements: !90)
!90 = !{!91, !93, !94, !95, !97, !98, !99, !100, !101, !102, !1704, !1705, !1706, !1707, !1708, !1709, !1710, !1711, !1712}
!91 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !89, file: !31, line: 86, baseType: !92, size: 64)
!92 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !89, size: 64)
!93 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !89, file: !31, line: 86, baseType: !92, size: 64, offset: 64)
!94 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !89, file: !31, line: 89, baseType: !38, size: 592, offset: 128)
!95 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !89, file: !31, line: 90, baseType: !96, size: 32, offset: 736)
!96 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!97 = !DIDerivedType(tag: DW_TAG_member, name: "lay_zmask", scope: !89, file: !31, line: 90, baseType: !96, size: 32, offset: 768)
!98 = !DIDerivedType(tag: DW_TAG_member, name: "lay_exclude", scope: !89, file: !31, line: 90, baseType: !96, size: 32, offset: 800)
!99 = !DIDerivedType(tag: DW_TAG_member, name: "layflag", scope: !89, file: !31, line: 91, baseType: !8, size: 32, offset: 832)
!100 = !DIDerivedType(tag: DW_TAG_member, name: "passflag", scope: !89, file: !31, line: 91, baseType: !8, size: 32, offset: 864)
!101 = !DIDerivedType(tag: DW_TAG_member, name: "pass_xor", scope: !89, file: !31, line: 91, baseType: !8, size: 32, offset: 896)
!102 = !DIDerivedType(tag: DW_TAG_member, name: "mat_override", scope: !89, file: !31, line: 93, baseType: !103, size: 64, offset: 960)
!103 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !104, size: 64)
!104 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Material", file: !105, line: 93, size: 7552, elements: !106)
!105 = !DIFile(filename: "blender/source/blender/makesdna/DNA_material_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!106 = !{!107, !169, !173, !174, !175, !176, !177, !178, !179, !180, !181, !182, !183, !184, !185, !186, !187, !188, !189, !190, !191, !192, !193, !194, !195, !196, !197, !198, !222, !229, !230, !231, !232, !233, !234, !235, !236, !237, !238, !239, !240, !241, !242, !243, !244, !245, !246, !247, !248, !249, !250, !251, !252, !253, !254, !255, !256, !257, !258, !259, !260, !261, !262, !263, !264, !265, !266, !267, !268, !269, !270, !271, !272, !273, !274, !275, !276, !277, !278, !279, !280, !281, !282, !283, !284, !285, !286, !287, !291, !292, !293, !294, !295, !322, !323, !324, !325, !326, !327, !328, !329, !330, !331, !1663, !1664, !1665, !1666, !1667, !1668, !1669, !1670, !1671, !1672, !1673, !1674, !1675, !1676, !1677, !1678, !1679, !1680, !1681, !1682, !1683, !1684, !1685, !1686, !1687, !1688, !1689, !1690, !1691, !1692, !1693, !1694, !1695, !1703}
!107 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !104, file: !105, line: 94, baseType: !108, size: 960)
!108 = !DIDerivedType(tag: DW_TAG_typedef, name: "ID", file: !109, line: 130, baseType: !110)
!109 = !DIFile(filename: "blender/source/blender/makesdna/DNA_ID.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!110 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ID", file: !109, line: 117, size: 960, elements: !111)
!111 = !{!112, !113, !114, !116, !135, !139, !140, !141, !142, !143}
!112 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !110, file: !109, line: 118, baseType: !6, size: 64)
!113 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !110, file: !109, line: 118, baseType: !6, size: 64, offset: 64)
!114 = !DIDerivedType(tag: DW_TAG_member, name: "newid", scope: !110, file: !109, line: 119, baseType: !115, size: 64, offset: 128)
!115 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !110, size: 64)
!116 = !DIDerivedType(tag: DW_TAG_member, name: "lib", scope: !110, file: !109, line: 120, baseType: !117, size: 64, offset: 192)
!117 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !118, size: 64)
!118 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Library", file: !109, line: 136, size: 17600, elements: !119)
!119 = !{!120, !121, !123, !126, !130, !131, !132}
!120 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !118, file: !109, line: 137, baseType: !108, size: 960)
!121 = !DIDerivedType(tag: DW_TAG_member, name: "idblock", scope: !118, file: !109, line: 138, baseType: !122, size: 64, offset: 960)
!122 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !108, size: 64)
!123 = !DIDerivedType(tag: DW_TAG_member, name: "filedata", scope: !118, file: !109, line: 139, baseType: !124, size: 64, offset: 1024)
!124 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !125, size: 64)
!125 = !DICompositeType(tag: DW_TAG_structure_type, name: "FileData", file: !109, line: 43, flags: DIFlagFwdDecl)
!126 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !118, file: !109, line: 140, baseType: !127, size: 8192, offset: 1088)
!127 = !DICompositeType(tag: DW_TAG_array_type, baseType: !28, size: 8192, elements: !128)
!128 = !{!129}
!129 = !DISubrange(count: 1024)
!130 = !DIDerivedType(tag: DW_TAG_member, name: "filepath", scope: !118, file: !109, line: 141, baseType: !127, size: 8192, offset: 9280)
!131 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !118, file: !109, line: 148, baseType: !117, size: 64, offset: 17472)
!132 = !DIDerivedType(tag: DW_TAG_member, name: "packedfile", scope: !118, file: !109, line: 150, baseType: !133, size: 64, offset: 17536)
!133 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !134, size: 64)
!134 = !DICompositeType(tag: DW_TAG_structure_type, name: "PackedFile", file: !109, line: 45, flags: DIFlagFwdDecl)
!135 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !110, file: !109, line: 121, baseType: !136, size: 528, offset: 256)
!136 = !DICompositeType(tag: DW_TAG_array_type, baseType: !28, size: 528, elements: !137)
!137 = !{!138}
!138 = !DISubrange(count: 66)
!139 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !110, file: !109, line: 126, baseType: !43, size: 16, offset: 784)
!140 = !DIDerivedType(tag: DW_TAG_member, name: "us", scope: !110, file: !109, line: 127, baseType: !8, size: 32, offset: 800)
!141 = !DIDerivedType(tag: DW_TAG_member, name: "icon_id", scope: !110, file: !109, line: 128, baseType: !8, size: 32, offset: 832)
!142 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !110, file: !109, line: 128, baseType: !8, size: 32, offset: 864)
!143 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !110, file: !109, line: 129, baseType: !144, size: 64, offset: 896)
!144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !145, size: 64)
!145 = !DIDerivedType(tag: DW_TAG_typedef, name: "IDProperty", file: !109, line: 75, baseType: !146)
!146 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "IDProperty", file: !109, line: 62, size: 1024, elements: !147)
!147 = !{!148, !150, !151, !152, !153, !154, !158, !159, !167, !168}
!148 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !146, file: !109, line: 63, baseType: !149, size: 64)
!149 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !146, size: 64)
!150 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !146, file: !109, line: 63, baseType: !149, size: 64, offset: 64)
!151 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !146, file: !109, line: 64, baseType: !28, size: 8, offset: 128)
!152 = !DIDerivedType(tag: DW_TAG_member, name: "subtype", scope: !146, file: !109, line: 64, baseType: !28, size: 8, offset: 136)
!153 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !146, file: !109, line: 65, baseType: !43, size: 16, offset: 144)
!154 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !146, file: !109, line: 66, baseType: !155, size: 512, offset: 160)
!155 = !DICompositeType(tag: DW_TAG_array_type, baseType: !28, size: 512, elements: !156)
!156 = !{!157}
!157 = !DISubrange(count: 64)
!158 = !DIDerivedType(tag: DW_TAG_member, name: "saved", scope: !146, file: !109, line: 67, baseType: !8, size: 32, offset: 672)
!159 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !146, file: !109, line: 69, baseType: !160, size: 256, offset: 704)
!160 = !DIDerivedType(tag: DW_TAG_typedef, name: "IDPropertyData", file: !109, line: 60, baseType: !161)
!161 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "IDPropertyData", file: !109, line: 48, size: 256, elements: !162)
!162 = !{!163, !164, !165, !166}
!163 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !161, file: !109, line: 49, baseType: !6, size: 64)
!164 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !161, file: !109, line: 58, baseType: !77, size: 128, offset: 64)
!165 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !161, file: !109, line: 59, baseType: !8, size: 32, offset: 192)
!166 = !DIDerivedType(tag: DW_TAG_member, name: "val2", scope: !161, file: !109, line: 59, baseType: !8, size: 32, offset: 224)
!167 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !146, file: !109, line: 70, baseType: !8, size: 32, offset: 960)
!168 = !DIDerivedType(tag: DW_TAG_member, name: "totallen", scope: !146, file: !109, line: 74, baseType: !8, size: 32, offset: 992)
!169 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !104, file: !105, line: 95, baseType: !170, size: 64, offset: 960)
!170 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !171, size: 64)
!171 = !DICompositeType(tag: DW_TAG_structure_type, name: "AnimData", file: !172, line: 42, flags: DIFlagFwdDecl)
!172 = !DIFile(filename: "blender/source/blender/makesdna/DNA_lamp_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!173 = !DIDerivedType(tag: DW_TAG_member, name: "material_type", scope: !104, file: !105, line: 97, baseType: !43, size: 16, offset: 1024)
!174 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !104, file: !105, line: 97, baseType: !43, size: 16, offset: 1040)
!175 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !104, file: !105, line: 99, baseType: !7, size: 32, offset: 1056)
!176 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !104, file: !105, line: 99, baseType: !7, size: 32, offset: 1088)
!177 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !104, file: !105, line: 99, baseType: !7, size: 32, offset: 1120)
!178 = !DIDerivedType(tag: DW_TAG_member, name: "specr", scope: !104, file: !105, line: 100, baseType: !7, size: 32, offset: 1152)
!179 = !DIDerivedType(tag: DW_TAG_member, name: "specg", scope: !104, file: !105, line: 100, baseType: !7, size: 32, offset: 1184)
!180 = !DIDerivedType(tag: DW_TAG_member, name: "specb", scope: !104, file: !105, line: 100, baseType: !7, size: 32, offset: 1216)
!181 = !DIDerivedType(tag: DW_TAG_member, name: "mirr", scope: !104, file: !105, line: 101, baseType: !7, size: 32, offset: 1248)
!182 = !DIDerivedType(tag: DW_TAG_member, name: "mirg", scope: !104, file: !105, line: 101, baseType: !7, size: 32, offset: 1280)
!183 = !DIDerivedType(tag: DW_TAG_member, name: "mirb", scope: !104, file: !105, line: 101, baseType: !7, size: 32, offset: 1312)
!184 = !DIDerivedType(tag: DW_TAG_member, name: "ambr", scope: !104, file: !105, line: 102, baseType: !7, size: 32, offset: 1344)
!185 = !DIDerivedType(tag: DW_TAG_member, name: "ambb", scope: !104, file: !105, line: 102, baseType: !7, size: 32, offset: 1376)
!186 = !DIDerivedType(tag: DW_TAG_member, name: "ambg", scope: !104, file: !105, line: 102, baseType: !7, size: 32, offset: 1408)
!187 = !DIDerivedType(tag: DW_TAG_member, name: "amb", scope: !104, file: !105, line: 103, baseType: !7, size: 32, offset: 1440)
!188 = !DIDerivedType(tag: DW_TAG_member, name: "emit", scope: !104, file: !105, line: 103, baseType: !7, size: 32, offset: 1472)
!189 = !DIDerivedType(tag: DW_TAG_member, name: "ang", scope: !104, file: !105, line: 103, baseType: !7, size: 32, offset: 1504)
!190 = !DIDerivedType(tag: DW_TAG_member, name: "spectra", scope: !104, file: !105, line: 103, baseType: !7, size: 32, offset: 1536)
!191 = !DIDerivedType(tag: DW_TAG_member, name: "ray_mirror", scope: !104, file: !105, line: 103, baseType: !7, size: 32, offset: 1568)
!192 = !DIDerivedType(tag: DW_TAG_member, name: "alpha", scope: !104, file: !105, line: 104, baseType: !7, size: 32, offset: 1600)
!193 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !104, file: !105, line: 104, baseType: !7, size: 32, offset: 1632)
!194 = !DIDerivedType(tag: DW_TAG_member, name: "spec", scope: !104, file: !105, line: 104, baseType: !7, size: 32, offset: 1664)
!195 = !DIDerivedType(tag: DW_TAG_member, name: "zoffs", scope: !104, file: !105, line: 104, baseType: !7, size: 32, offset: 1696)
!196 = !DIDerivedType(tag: DW_TAG_member, name: "add", scope: !104, file: !105, line: 104, baseType: !7, size: 32, offset: 1728)
!197 = !DIDerivedType(tag: DW_TAG_member, name: "translucency", scope: !104, file: !105, line: 105, baseType: !7, size: 32, offset: 1760)
!198 = !DIDerivedType(tag: DW_TAG_member, name: "vol", scope: !104, file: !105, line: 108, baseType: !199, size: 704, offset: 1792)
!199 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VolumeSettings", file: !105, line: 53, size: 704, elements: !200)
!200 = !{!201, !202, !203, !204, !205, !209, !210, !211, !212, !213, !214, !215, !216, !217, !218, !219, !220, !221}
!201 = !DIDerivedType(tag: DW_TAG_member, name: "density", scope: !199, file: !105, line: 54, baseType: !7, size: 32)
!202 = !DIDerivedType(tag: DW_TAG_member, name: "emission", scope: !199, file: !105, line: 55, baseType: !7, size: 32, offset: 32)
!203 = !DIDerivedType(tag: DW_TAG_member, name: "scattering", scope: !199, file: !105, line: 56, baseType: !7, size: 32, offset: 64)
!204 = !DIDerivedType(tag: DW_TAG_member, name: "reflection", scope: !199, file: !105, line: 57, baseType: !7, size: 32, offset: 96)
!205 = !DIDerivedType(tag: DW_TAG_member, name: "emission_col", scope: !199, file: !105, line: 59, baseType: !206, size: 96, offset: 128)
!206 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 96, elements: !207)
!207 = !{!208}
!208 = !DISubrange(count: 3)
!209 = !DIDerivedType(tag: DW_TAG_member, name: "transmission_col", scope: !199, file: !105, line: 60, baseType: !206, size: 96, offset: 224)
!210 = !DIDerivedType(tag: DW_TAG_member, name: "reflection_col", scope: !199, file: !105, line: 61, baseType: !206, size: 96, offset: 320)
!211 = !DIDerivedType(tag: DW_TAG_member, name: "density_scale", scope: !199, file: !105, line: 63, baseType: !7, size: 32, offset: 416)
!212 = !DIDerivedType(tag: DW_TAG_member, name: "depth_cutoff", scope: !199, file: !105, line: 64, baseType: !7, size: 32, offset: 448)
!213 = !DIDerivedType(tag: DW_TAG_member, name: "asymmetry", scope: !199, file: !105, line: 65, baseType: !7, size: 32, offset: 480)
!214 = !DIDerivedType(tag: DW_TAG_member, name: "stepsize_type", scope: !199, file: !105, line: 67, baseType: !43, size: 16, offset: 512)
!215 = !DIDerivedType(tag: DW_TAG_member, name: "shadeflag", scope: !199, file: !105, line: 68, baseType: !43, size: 16, offset: 528)
!216 = !DIDerivedType(tag: DW_TAG_member, name: "shade_type", scope: !199, file: !105, line: 69, baseType: !43, size: 16, offset: 544)
!217 = !DIDerivedType(tag: DW_TAG_member, name: "precache_resolution", scope: !199, file: !105, line: 70, baseType: !43, size: 16, offset: 560)
!218 = !DIDerivedType(tag: DW_TAG_member, name: "stepsize", scope: !199, file: !105, line: 72, baseType: !7, size: 32, offset: 576)
!219 = !DIDerivedType(tag: DW_TAG_member, name: "ms_diff", scope: !199, file: !105, line: 73, baseType: !7, size: 32, offset: 608)
!220 = !DIDerivedType(tag: DW_TAG_member, name: "ms_intensity", scope: !199, file: !105, line: 74, baseType: !7, size: 32, offset: 640)
!221 = !DIDerivedType(tag: DW_TAG_member, name: "ms_spread", scope: !199, file: !105, line: 75, baseType: !7, size: 32, offset: 672)
!222 = !DIDerivedType(tag: DW_TAG_member, name: "game", scope: !104, file: !105, line: 109, baseType: !223, size: 128, offset: 2496)
!223 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameSettings", file: !105, line: 79, size: 128, elements: !224)
!224 = !{!225, !226, !227, !228}
!225 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !223, file: !105, line: 80, baseType: !8, size: 32)
!226 = !DIDerivedType(tag: DW_TAG_member, name: "alpha_blend", scope: !223, file: !105, line: 81, baseType: !8, size: 32, offset: 32)
!227 = !DIDerivedType(tag: DW_TAG_member, name: "face_orientation", scope: !223, file: !105, line: 82, baseType: !8, size: 32, offset: 64)
!228 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !223, file: !105, line: 83, baseType: !8, size: 32, offset: 96)
!229 = !DIDerivedType(tag: DW_TAG_member, name: "fresnel_mir", scope: !104, file: !105, line: 111, baseType: !7, size: 32, offset: 2624)
!230 = !DIDerivedType(tag: DW_TAG_member, name: "fresnel_mir_i", scope: !104, file: !105, line: 111, baseType: !7, size: 32, offset: 2656)
!231 = !DIDerivedType(tag: DW_TAG_member, name: "fresnel_tra", scope: !104, file: !105, line: 112, baseType: !7, size: 32, offset: 2688)
!232 = !DIDerivedType(tag: DW_TAG_member, name: "fresnel_tra_i", scope: !104, file: !105, line: 112, baseType: !7, size: 32, offset: 2720)
!233 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !104, file: !105, line: 113, baseType: !7, size: 32, offset: 2752)
!234 = !DIDerivedType(tag: DW_TAG_member, name: "tx_limit", scope: !104, file: !105, line: 114, baseType: !7, size: 32, offset: 2784)
!235 = !DIDerivedType(tag: DW_TAG_member, name: "tx_falloff", scope: !104, file: !105, line: 114, baseType: !7, size: 32, offset: 2816)
!236 = !DIDerivedType(tag: DW_TAG_member, name: "ray_depth", scope: !104, file: !105, line: 115, baseType: !43, size: 16, offset: 2848)
!237 = !DIDerivedType(tag: DW_TAG_member, name: "ray_depth_tra", scope: !104, file: !105, line: 115, baseType: !43, size: 16, offset: 2864)
!238 = !DIDerivedType(tag: DW_TAG_member, name: "har", scope: !104, file: !105, line: 116, baseType: !43, size: 16, offset: 2880)
!239 = !DIDerivedType(tag: DW_TAG_member, name: "seed1", scope: !104, file: !105, line: 117, baseType: !28, size: 8, offset: 2896)
!240 = !DIDerivedType(tag: DW_TAG_member, name: "seed2", scope: !104, file: !105, line: 117, baseType: !28, size: 8, offset: 2904)
!241 = !DIDerivedType(tag: DW_TAG_member, name: "gloss_mir", scope: !104, file: !105, line: 119, baseType: !7, size: 32, offset: 2912)
!242 = !DIDerivedType(tag: DW_TAG_member, name: "gloss_tra", scope: !104, file: !105, line: 119, baseType: !7, size: 32, offset: 2944)
!243 = !DIDerivedType(tag: DW_TAG_member, name: "samp_gloss_mir", scope: !104, file: !105, line: 120, baseType: !43, size: 16, offset: 2976)
!244 = !DIDerivedType(tag: DW_TAG_member, name: "samp_gloss_tra", scope: !104, file: !105, line: 120, baseType: !43, size: 16, offset: 2992)
!245 = !DIDerivedType(tag: DW_TAG_member, name: "adapt_thresh_mir", scope: !104, file: !105, line: 121, baseType: !7, size: 32, offset: 3008)
!246 = !DIDerivedType(tag: DW_TAG_member, name: "adapt_thresh_tra", scope: !104, file: !105, line: 121, baseType: !7, size: 32, offset: 3040)
!247 = !DIDerivedType(tag: DW_TAG_member, name: "aniso_gloss_mir", scope: !104, file: !105, line: 122, baseType: !7, size: 32, offset: 3072)
!248 = !DIDerivedType(tag: DW_TAG_member, name: "dist_mir", scope: !104, file: !105, line: 123, baseType: !7, size: 32, offset: 3104)
!249 = !DIDerivedType(tag: DW_TAG_member, name: "fadeto_mir", scope: !104, file: !105, line: 124, baseType: !43, size: 16, offset: 3136)
!250 = !DIDerivedType(tag: DW_TAG_member, name: "shade_flag", scope: !104, file: !105, line: 125, baseType: !43, size: 16, offset: 3152)
!251 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !104, file: !105, line: 127, baseType: !8, size: 32, offset: 3168)
!252 = !DIDerivedType(tag: DW_TAG_member, name: "mode_l", scope: !104, file: !105, line: 127, baseType: !8, size: 32, offset: 3200)
!253 = !DIDerivedType(tag: DW_TAG_member, name: "mode2", scope: !104, file: !105, line: 128, baseType: !8, size: 32, offset: 3232)
!254 = !DIDerivedType(tag: DW_TAG_member, name: "mode2_l", scope: !104, file: !105, line: 128, baseType: !8, size: 32, offset: 3264)
!255 = !DIDerivedType(tag: DW_TAG_member, name: "flarec", scope: !104, file: !105, line: 129, baseType: !43, size: 16, offset: 3296)
!256 = !DIDerivedType(tag: DW_TAG_member, name: "starc", scope: !104, file: !105, line: 129, baseType: !43, size: 16, offset: 3312)
!257 = !DIDerivedType(tag: DW_TAG_member, name: "linec", scope: !104, file: !105, line: 129, baseType: !43, size: 16, offset: 3328)
!258 = !DIDerivedType(tag: DW_TAG_member, name: "ringc", scope: !104, file: !105, line: 129, baseType: !43, size: 16, offset: 3344)
!259 = !DIDerivedType(tag: DW_TAG_member, name: "hasize", scope: !104, file: !105, line: 130, baseType: !7, size: 32, offset: 3360)
!260 = !DIDerivedType(tag: DW_TAG_member, name: "flaresize", scope: !104, file: !105, line: 130, baseType: !7, size: 32, offset: 3392)
!261 = !DIDerivedType(tag: DW_TAG_member, name: "subsize", scope: !104, file: !105, line: 130, baseType: !7, size: 32, offset: 3424)
!262 = !DIDerivedType(tag: DW_TAG_member, name: "flareboost", scope: !104, file: !105, line: 130, baseType: !7, size: 32, offset: 3456)
!263 = !DIDerivedType(tag: DW_TAG_member, name: "strand_sta", scope: !104, file: !105, line: 131, baseType: !7, size: 32, offset: 3488)
!264 = !DIDerivedType(tag: DW_TAG_member, name: "strand_end", scope: !104, file: !105, line: 131, baseType: !7, size: 32, offset: 3520)
!265 = !DIDerivedType(tag: DW_TAG_member, name: "strand_ease", scope: !104, file: !105, line: 131, baseType: !7, size: 32, offset: 3552)
!266 = !DIDerivedType(tag: DW_TAG_member, name: "strand_surfnor", scope: !104, file: !105, line: 131, baseType: !7, size: 32, offset: 3584)
!267 = !DIDerivedType(tag: DW_TAG_member, name: "strand_min", scope: !104, file: !105, line: 132, baseType: !7, size: 32, offset: 3616)
!268 = !DIDerivedType(tag: DW_TAG_member, name: "strand_widthfade", scope: !104, file: !105, line: 132, baseType: !7, size: 32, offset: 3648)
!269 = !DIDerivedType(tag: DW_TAG_member, name: "strand_uvname", scope: !104, file: !105, line: 133, baseType: !155, size: 512, offset: 3680)
!270 = !DIDerivedType(tag: DW_TAG_member, name: "sbias", scope: !104, file: !105, line: 135, baseType: !7, size: 32, offset: 4192)
!271 = !DIDerivedType(tag: DW_TAG_member, name: "lbias", scope: !104, file: !105, line: 136, baseType: !7, size: 32, offset: 4224)
!272 = !DIDerivedType(tag: DW_TAG_member, name: "shad_alpha", scope: !104, file: !105, line: 137, baseType: !7, size: 32, offset: 4256)
!273 = !DIDerivedType(tag: DW_TAG_member, name: "septex", scope: !104, file: !105, line: 138, baseType: !8, size: 32, offset: 4288)
!274 = !DIDerivedType(tag: DW_TAG_member, name: "rgbsel", scope: !104, file: !105, line: 141, baseType: !28, size: 8, offset: 4320)
!275 = !DIDerivedType(tag: DW_TAG_member, name: "texact", scope: !104, file: !105, line: 141, baseType: !28, size: 8, offset: 4328)
!276 = !DIDerivedType(tag: DW_TAG_member, name: "pr_type", scope: !104, file: !105, line: 141, baseType: !28, size: 8, offset: 4336)
!277 = !DIDerivedType(tag: DW_TAG_member, name: "use_nodes", scope: !104, file: !105, line: 141, baseType: !28, size: 8, offset: 4344)
!278 = !DIDerivedType(tag: DW_TAG_member, name: "pr_lamp", scope: !104, file: !105, line: 142, baseType: !43, size: 16, offset: 4352)
!279 = !DIDerivedType(tag: DW_TAG_member, name: "pr_texture", scope: !104, file: !105, line: 142, baseType: !43, size: 16, offset: 4368)
!280 = !DIDerivedType(tag: DW_TAG_member, name: "ml_flag", scope: !104, file: !105, line: 142, baseType: !43, size: 16, offset: 4384)
!281 = !DIDerivedType(tag: DW_TAG_member, name: "mapflag", scope: !104, file: !105, line: 145, baseType: !28, size: 8, offset: 4400)
!282 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !104, file: !105, line: 145, baseType: !28, size: 8, offset: 4408)
!283 = !DIDerivedType(tag: DW_TAG_member, name: "diff_shader", scope: !104, file: !105, line: 148, baseType: !43, size: 16, offset: 4416)
!284 = !DIDerivedType(tag: DW_TAG_member, name: "spec_shader", scope: !104, file: !105, line: 148, baseType: !43, size: 16, offset: 4432)
!285 = !DIDerivedType(tag: DW_TAG_member, name: "roughness", scope: !104, file: !105, line: 149, baseType: !7, size: 32, offset: 4448)
!286 = !DIDerivedType(tag: DW_TAG_member, name: "refrac", scope: !104, file: !105, line: 149, baseType: !7, size: 32, offset: 4480)
!287 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !104, file: !105, line: 152, baseType: !288, size: 128, offset: 4512)
!288 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 128, elements: !289)
!289 = !{!290}
!290 = !DISubrange(count: 4)
!291 = !DIDerivedType(tag: DW_TAG_member, name: "rms", scope: !104, file: !105, line: 153, baseType: !7, size: 32, offset: 4640)
!292 = !DIDerivedType(tag: DW_TAG_member, name: "darkness", scope: !104, file: !105, line: 154, baseType: !7, size: 32, offset: 4672)
!293 = !DIDerivedType(tag: DW_TAG_member, name: "texco", scope: !104, file: !105, line: 157, baseType: !43, size: 16, offset: 4704)
!294 = !DIDerivedType(tag: DW_TAG_member, name: "mapto", scope: !104, file: !105, line: 157, baseType: !43, size: 16, offset: 4720)
!295 = !DIDerivedType(tag: DW_TAG_member, name: "ramp_col", scope: !104, file: !105, line: 160, baseType: !296, size: 64, offset: 4736)
!296 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !297, size: 64)
!297 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorBand", file: !298, line: 113, size: 6208, elements: !299)
!298 = !DIFile(filename: "blender/source/blender/makesdna/DNA_texture_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!299 = !{!300, !301, !302, !303, !304, !305, !309}
!300 = !DIDerivedType(tag: DW_TAG_member, name: "tot", scope: !297, file: !298, line: 114, baseType: !43, size: 16)
!301 = !DIDerivedType(tag: DW_TAG_member, name: "cur", scope: !297, file: !298, line: 114, baseType: !43, size: 16, offset: 16)
!302 = !DIDerivedType(tag: DW_TAG_member, name: "ipotype", scope: !297, file: !298, line: 115, baseType: !28, size: 8, offset: 32)
!303 = !DIDerivedType(tag: DW_TAG_member, name: "ipotype_hue", scope: !297, file: !298, line: 115, baseType: !28, size: 8, offset: 40)
!304 = !DIDerivedType(tag: DW_TAG_member, name: "color_mode", scope: !297, file: !298, line: 116, baseType: !28, size: 8, offset: 48)
!305 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !297, file: !298, line: 117, baseType: !306, size: 8, offset: 56)
!306 = !DICompositeType(tag: DW_TAG_array_type, baseType: !28, size: 8, elements: !307)
!307 = !{!308}
!308 = !DISubrange(count: 1)
!309 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !297, file: !298, line: 119, baseType: !310, size: 6144, offset: 64)
!310 = !DICompositeType(tag: DW_TAG_array_type, baseType: !311, size: 6144, elements: !320)
!311 = !DIDerivedType(tag: DW_TAG_typedef, name: "CBData", file: !298, line: 109, baseType: !312)
!312 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CBData", file: !298, line: 106, size: 192, elements: !313)
!313 = !{!314, !315, !316, !317, !318, !319}
!314 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !312, file: !298, line: 107, baseType: !7, size: 32)
!315 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !312, file: !298, line: 107, baseType: !7, size: 32, offset: 32)
!316 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !312, file: !298, line: 107, baseType: !7, size: 32, offset: 64)
!317 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !312, file: !298, line: 107, baseType: !7, size: 32, offset: 96)
!318 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !312, file: !298, line: 107, baseType: !7, size: 32, offset: 128)
!319 = !DIDerivedType(tag: DW_TAG_member, name: "cur", scope: !312, file: !298, line: 108, baseType: !8, size: 32, offset: 160)
!320 = !{!321}
!321 = !DISubrange(count: 32)
!322 = !DIDerivedType(tag: DW_TAG_member, name: "ramp_spec", scope: !104, file: !105, line: 161, baseType: !296, size: 64, offset: 4800)
!323 = !DIDerivedType(tag: DW_TAG_member, name: "rampin_col", scope: !104, file: !105, line: 162, baseType: !28, size: 8, offset: 4864)
!324 = !DIDerivedType(tag: DW_TAG_member, name: "rampin_spec", scope: !104, file: !105, line: 162, baseType: !28, size: 8, offset: 4872)
!325 = !DIDerivedType(tag: DW_TAG_member, name: "rampblend_col", scope: !104, file: !105, line: 163, baseType: !28, size: 8, offset: 4880)
!326 = !DIDerivedType(tag: DW_TAG_member, name: "rampblend_spec", scope: !104, file: !105, line: 163, baseType: !28, size: 8, offset: 4888)
!327 = !DIDerivedType(tag: DW_TAG_member, name: "ramp_show", scope: !104, file: !105, line: 164, baseType: !43, size: 16, offset: 4896)
!328 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !104, file: !105, line: 164, baseType: !43, size: 16, offset: 4912)
!329 = !DIDerivedType(tag: DW_TAG_member, name: "rampfac_col", scope: !104, file: !105, line: 165, baseType: !7, size: 32, offset: 4928)
!330 = !DIDerivedType(tag: DW_TAG_member, name: "rampfac_spec", scope: !104, file: !105, line: 165, baseType: !7, size: 32, offset: 4960)
!331 = !DIDerivedType(tag: DW_TAG_member, name: "mtex", scope: !104, file: !105, line: 167, baseType: !332, size: 1152, offset: 4992)
!332 = !DICompositeType(tag: DW_TAG_array_type, baseType: !333, size: 1152, elements: !1661)
!333 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !334, size: 64)
!334 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MTex", file: !298, line: 57, size: 2496, elements: !335)
!335 = !{!336, !337, !338, !339, !340, !1456, !1602, !1603, !1604, !1605, !1606, !1607, !1608, !1609, !1610, !1611, !1612, !1613, !1614, !1615, !1616, !1617, !1618, !1619, !1620, !1621, !1622, !1623, !1624, !1625, !1626, !1627, !1628, !1629, !1630, !1631, !1632, !1633, !1634, !1635, !1636, !1637, !1638, !1639, !1640, !1641, !1642, !1643, !1644, !1645, !1646, !1647, !1648, !1649, !1650, !1651, !1652, !1653, !1654, !1655, !1656, !1657, !1658, !1659, !1660}
!336 = !DIDerivedType(tag: DW_TAG_member, name: "texco", scope: !334, file: !298, line: 59, baseType: !43, size: 16)
!337 = !DIDerivedType(tag: DW_TAG_member, name: "mapto", scope: !334, file: !298, line: 59, baseType: !43, size: 16, offset: 16)
!338 = !DIDerivedType(tag: DW_TAG_member, name: "maptoneg", scope: !334, file: !298, line: 59, baseType: !43, size: 16, offset: 32)
!339 = !DIDerivedType(tag: DW_TAG_member, name: "blendtype", scope: !334, file: !298, line: 59, baseType: !43, size: 16, offset: 48)
!340 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !334, file: !298, line: 60, baseType: !341, size: 64, offset: 64)
!341 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !342, size: 64)
!342 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Object", file: !343, line: 115, size: 11392, elements: !344)
!343 = !DIFile(filename: "blender/source/blender/makesdna/DNA_object_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!344 = !{!345, !346, !347, !350, !351, !352, !353, !354, !355, !356, !357, !358, !359, !360, !361, !364, !374, !388, !389, !430, !431, !435, !436, !452, !453, !454, !455, !456, !457, !458, !460, !461, !462, !463, !464, !465, !466, !467, !468, !469, !470, !471, !472, !473, !474, !475, !476, !477, !480, !481, !482, !483, !484, !485, !486, !487, !488, !489, !490, !491, !492, !493, !494, !495, !496, !497, !498, !499, !500, !501, !502, !503, !504, !505, !506, !507, !508, !509, !510, !511, !512, !513, !515, !516, !517, !518, !519, !520, !521, !522, !523, !524, !525, !526, !527, !528, !529, !530, !531, !532, !533, !534, !537, !538, !539, !540, !541, !542, !543, !544, !545, !548, !551, !560, !561, !562, !563, !564, !567, !570, !573, !574, !579, !580, !581, !582, !583, !584, !586, !589, !592, !593, !1444, !1445}
!345 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !342, file: !343, line: 116, baseType: !108, size: 960)
!346 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !342, file: !343, line: 117, baseType: !170, size: 64, offset: 960)
!347 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt", scope: !342, file: !343, line: 119, baseType: !348, size: 64, offset: 1024)
!348 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !349, size: 64)
!349 = !DICompositeType(tag: DW_TAG_structure_type, name: "SculptSession", file: !343, line: 57, flags: DIFlagFwdDecl)
!350 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !342, file: !343, line: 121, baseType: !43, size: 16, offset: 1088)
!351 = !DIDerivedType(tag: DW_TAG_member, name: "partype", scope: !342, file: !343, line: 121, baseType: !43, size: 16, offset: 1104)
!352 = !DIDerivedType(tag: DW_TAG_member, name: "par1", scope: !342, file: !343, line: 122, baseType: !8, size: 32, offset: 1120)
!353 = !DIDerivedType(tag: DW_TAG_member, name: "par2", scope: !342, file: !343, line: 122, baseType: !8, size: 32, offset: 1152)
!354 = !DIDerivedType(tag: DW_TAG_member, name: "par3", scope: !342, file: !343, line: 122, baseType: !8, size: 32, offset: 1184)
!355 = !DIDerivedType(tag: DW_TAG_member, name: "parsubstr", scope: !342, file: !343, line: 123, baseType: !155, size: 512, offset: 1216)
!356 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !342, file: !343, line: 124, baseType: !341, size: 64, offset: 1728)
!357 = !DIDerivedType(tag: DW_TAG_member, name: "track", scope: !342, file: !343, line: 124, baseType: !341, size: 64, offset: 1792)
!358 = !DIDerivedType(tag: DW_TAG_member, name: "proxy", scope: !342, file: !343, line: 127, baseType: !341, size: 64, offset: 1856)
!359 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_group", scope: !342, file: !343, line: 127, baseType: !341, size: 64, offset: 1920)
!360 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_from", scope: !342, file: !343, line: 127, baseType: !341, size: 64, offset: 1984)
!361 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !342, file: !343, line: 128, baseType: !362, size: 64, offset: 2048)
!362 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !363, size: 64)
!363 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ipo", file: !172, line: 45, flags: DIFlagFwdDecl)
!364 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !342, file: !343, line: 130, baseType: !365, size: 64, offset: 2112)
!365 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !366, size: 64)
!366 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BoundBox", file: !343, line: 97, size: 832, elements: !367)
!367 = !{!368, !372, !373}
!368 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !366, file: !343, line: 98, baseType: !369, size: 768)
!369 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 768, elements: !370)
!370 = !{!371, !208}
!371 = !DISubrange(count: 8)
!372 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !366, file: !343, line: 99, baseType: !8, size: 32, offset: 768)
!373 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !366, file: !343, line: 99, baseType: !8, size: 32, offset: 800)
!374 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !342, file: !343, line: 131, baseType: !375, size: 64, offset: 2176)
!375 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !376, size: 64)
!376 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bAction", file: !377, line: 486, size: 1600, elements: !378)
!377 = !DIFile(filename: "blender/source/blender/makesdna/DNA_action_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!378 = !{!379, !380, !381, !382, !383, !384, !385, !386, !387}
!379 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !376, file: !377, line: 487, baseType: !108, size: 960)
!380 = !DIDerivedType(tag: DW_TAG_member, name: "curves", scope: !376, file: !377, line: 489, baseType: !77, size: 128, offset: 960)
!381 = !DIDerivedType(tag: DW_TAG_member, name: "chanbase", scope: !376, file: !377, line: 490, baseType: !77, size: 128, offset: 1088)
!382 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !376, file: !377, line: 491, baseType: !77, size: 128, offset: 1216)
!383 = !DIDerivedType(tag: DW_TAG_member, name: "markers", scope: !376, file: !377, line: 492, baseType: !77, size: 128, offset: 1344)
!384 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !376, file: !377, line: 494, baseType: !8, size: 32, offset: 1472)
!385 = !DIDerivedType(tag: DW_TAG_member, name: "active_marker", scope: !376, file: !377, line: 495, baseType: !8, size: 32, offset: 1504)
!386 = !DIDerivedType(tag: DW_TAG_member, name: "idroot", scope: !376, file: !377, line: 497, baseType: !8, size: 32, offset: 1536)
!387 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !376, file: !377, line: 498, baseType: !8, size: 32, offset: 1568)
!388 = !DIDerivedType(tag: DW_TAG_member, name: "poselib", scope: !342, file: !343, line: 132, baseType: !375, size: 64, offset: 2240)
!389 = !DIDerivedType(tag: DW_TAG_member, name: "pose", scope: !342, file: !343, line: 133, baseType: !390, size: 64, offset: 2304)
!390 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !391, size: 64)
!391 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bPose", file: !377, line: 334, size: 1728, elements: !392)
!392 = !{!393, !394, !397, !398, !399, !400, !401, !402, !403, !404, !405, !406, !407, !408, !409, !429}
!393 = !DIDerivedType(tag: DW_TAG_member, name: "chanbase", scope: !391, file: !377, line: 335, baseType: !77, size: 128)
!394 = !DIDerivedType(tag: DW_TAG_member, name: "chanhash", scope: !391, file: !377, line: 336, baseType: !395, size: 64, offset: 128)
!395 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !396, size: 64)
!396 = !DICompositeType(tag: DW_TAG_structure_type, name: "GHash", file: !377, line: 47, flags: DIFlagFwdDecl)
!397 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !391, file: !377, line: 338, baseType: !43, size: 16, offset: 192)
!398 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !391, file: !377, line: 338, baseType: !43, size: 16, offset: 208)
!399 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_layer", scope: !391, file: !377, line: 339, baseType: !96, size: 32, offset: 224)
!400 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !391, file: !377, line: 340, baseType: !8, size: 32, offset: 256)
!401 = !DIDerivedType(tag: DW_TAG_member, name: "ctime", scope: !391, file: !377, line: 342, baseType: !7, size: 32, offset: 288)
!402 = !DIDerivedType(tag: DW_TAG_member, name: "stride_offset", scope: !391, file: !377, line: 343, baseType: !206, size: 96, offset: 320)
!403 = !DIDerivedType(tag: DW_TAG_member, name: "cyclic_offset", scope: !391, file: !377, line: 344, baseType: !206, size: 96, offset: 416)
!404 = !DIDerivedType(tag: DW_TAG_member, name: "agroups", scope: !391, file: !377, line: 347, baseType: !77, size: 128, offset: 512)
!405 = !DIDerivedType(tag: DW_TAG_member, name: "active_group", scope: !391, file: !377, line: 349, baseType: !8, size: 32, offset: 640)
!406 = !DIDerivedType(tag: DW_TAG_member, name: "iksolver", scope: !391, file: !377, line: 350, baseType: !8, size: 32, offset: 672)
!407 = !DIDerivedType(tag: DW_TAG_member, name: "ikdata", scope: !391, file: !377, line: 351, baseType: !6, size: 64, offset: 704)
!408 = !DIDerivedType(tag: DW_TAG_member, name: "ikparam", scope: !391, file: !377, line: 352, baseType: !6, size: 64, offset: 768)
!409 = !DIDerivedType(tag: DW_TAG_member, name: "avs", scope: !391, file: !377, line: 354, baseType: !410, size: 384, offset: 832)
!410 = !DIDerivedType(tag: DW_TAG_typedef, name: "bAnimVizSettings", file: !377, line: 116, baseType: !411)
!411 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bAnimVizSettings", file: !377, line: 94, size: 384, elements: !412)
!412 = !{!413, !414, !415, !416, !417, !418, !419, !420, !421, !422, !423, !424, !425, !426, !427, !428}
!413 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_sf", scope: !411, file: !377, line: 96, baseType: !8, size: 32)
!414 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_ef", scope: !411, file: !377, line: 96, baseType: !8, size: 32, offset: 32)
!415 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_bc", scope: !411, file: !377, line: 97, baseType: !8, size: 32, offset: 64)
!416 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_ac", scope: !411, file: !377, line: 97, baseType: !8, size: 32, offset: 96)
!417 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_type", scope: !411, file: !377, line: 99, baseType: !43, size: 16, offset: 128)
!418 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_step", scope: !411, file: !377, line: 100, baseType: !43, size: 16, offset: 144)
!419 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_flag", scope: !411, file: !377, line: 102, baseType: !43, size: 16, offset: 160)
!420 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !411, file: !377, line: 105, baseType: !43, size: 16, offset: 176)
!421 = !DIDerivedType(tag: DW_TAG_member, name: "path_type", scope: !411, file: !377, line: 108, baseType: !43, size: 16, offset: 192)
!422 = !DIDerivedType(tag: DW_TAG_member, name: "path_step", scope: !411, file: !377, line: 109, baseType: !43, size: 16, offset: 208)
!423 = !DIDerivedType(tag: DW_TAG_member, name: "path_viewflag", scope: !411, file: !377, line: 111, baseType: !43, size: 16, offset: 224)
!424 = !DIDerivedType(tag: DW_TAG_member, name: "path_bakeflag", scope: !411, file: !377, line: 112, baseType: !43, size: 16, offset: 240)
!425 = !DIDerivedType(tag: DW_TAG_member, name: "path_sf", scope: !411, file: !377, line: 114, baseType: !8, size: 32, offset: 256)
!426 = !DIDerivedType(tag: DW_TAG_member, name: "path_ef", scope: !411, file: !377, line: 114, baseType: !8, size: 32, offset: 288)
!427 = !DIDerivedType(tag: DW_TAG_member, name: "path_bc", scope: !411, file: !377, line: 115, baseType: !8, size: 32, offset: 320)
!428 = !DIDerivedType(tag: DW_TAG_member, name: "path_ac", scope: !411, file: !377, line: 115, baseType: !8, size: 32, offset: 352)
!429 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_act_bone", scope: !391, file: !377, line: 355, baseType: !155, size: 512, offset: 1216)
!430 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !342, file: !343, line: 134, baseType: !6, size: 64, offset: 2368)
!431 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !342, file: !343, line: 136, baseType: !432, size: 64, offset: 2432)
!432 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !433, size: 64)
!433 = !DICompositeType(tag: DW_TAG_structure_type, name: "bGPdata", file: !434, line: 61, flags: DIFlagFwdDecl)
!434 = !DIFile(filename: "blender/source/blender/makesdna/DNA_scene_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!435 = !DIDerivedType(tag: DW_TAG_member, name: "avs", scope: !342, file: !343, line: 138, baseType: !410, size: 384, offset: 2496)
!436 = !DIDerivedType(tag: DW_TAG_member, name: "mpath", scope: !342, file: !343, line: 139, baseType: !437, size: 64, offset: 2880)
!437 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !438, size: 64)
!438 = !DIDerivedType(tag: DW_TAG_typedef, name: "bMotionPath", file: !377, line: 80, baseType: !439)
!439 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bMotionPath", file: !377, line: 72, size: 192, elements: !440)
!440 = !{!441, !448, !449, !450, !451}
!441 = !DIDerivedType(tag: DW_TAG_member, name: "points", scope: !439, file: !377, line: 73, baseType: !442, size: 64)
!442 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !443, size: 64)
!443 = !DIDerivedType(tag: DW_TAG_typedef, name: "bMotionPathVert", file: !377, line: 59, baseType: !444)
!444 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bMotionPathVert", file: !377, line: 56, size: 128, elements: !445)
!445 = !{!446, !447}
!446 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !444, file: !377, line: 57, baseType: !206, size: 96)
!447 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !444, file: !377, line: 58, baseType: !8, size: 32, offset: 96)
!448 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !439, file: !377, line: 74, baseType: !8, size: 32, offset: 64)
!449 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame", scope: !439, file: !377, line: 76, baseType: !8, size: 32, offset: 96)
!450 = !DIDerivedType(tag: DW_TAG_member, name: "end_frame", scope: !439, file: !377, line: 77, baseType: !8, size: 32, offset: 128)
!451 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !439, file: !377, line: 79, baseType: !8, size: 32, offset: 160)
!452 = !DIDerivedType(tag: DW_TAG_member, name: "constraintChannels", scope: !342, file: !343, line: 141, baseType: !77, size: 128, offset: 2944)
!453 = !DIDerivedType(tag: DW_TAG_member, name: "effect", scope: !342, file: !343, line: 142, baseType: !77, size: 128, offset: 3072)
!454 = !DIDerivedType(tag: DW_TAG_member, name: "defbase", scope: !342, file: !343, line: 143, baseType: !77, size: 128, offset: 3200)
!455 = !DIDerivedType(tag: DW_TAG_member, name: "modifiers", scope: !342, file: !343, line: 144, baseType: !77, size: 128, offset: 3328)
!456 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !342, file: !343, line: 146, baseType: !8, size: 32, offset: 3456)
!457 = !DIDerivedType(tag: DW_TAG_member, name: "restore_mode", scope: !342, file: !343, line: 147, baseType: !8, size: 32, offset: 3488)
!458 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !342, file: !343, line: 150, baseType: !459, size: 64, offset: 3520)
!459 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !103, size: 64)
!460 = !DIDerivedType(tag: DW_TAG_member, name: "matbits", scope: !342, file: !343, line: 151, baseType: !27, size: 64, offset: 3584)
!461 = !DIDerivedType(tag: DW_TAG_member, name: "totcol", scope: !342, file: !343, line: 152, baseType: !8, size: 32, offset: 3648)
!462 = !DIDerivedType(tag: DW_TAG_member, name: "actcol", scope: !342, file: !343, line: 153, baseType: !8, size: 32, offset: 3680)
!463 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !342, file: !343, line: 156, baseType: !206, size: 96, offset: 3712)
!464 = !DIDerivedType(tag: DW_TAG_member, name: "dloc", scope: !342, file: !343, line: 156, baseType: !206, size: 96, offset: 3808)
!465 = !DIDerivedType(tag: DW_TAG_member, name: "orig", scope: !342, file: !343, line: 156, baseType: !206, size: 96, offset: 3904)
!466 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !342, file: !343, line: 157, baseType: !206, size: 96, offset: 4000)
!467 = !DIDerivedType(tag: DW_TAG_member, name: "dsize", scope: !342, file: !343, line: 158, baseType: !206, size: 96, offset: 4096)
!468 = !DIDerivedType(tag: DW_TAG_member, name: "dscale", scope: !342, file: !343, line: 159, baseType: !206, size: 96, offset: 4192)
!469 = !DIDerivedType(tag: DW_TAG_member, name: "rot", scope: !342, file: !343, line: 160, baseType: !206, size: 96, offset: 4288)
!470 = !DIDerivedType(tag: DW_TAG_member, name: "drot", scope: !342, file: !343, line: 160, baseType: !206, size: 96, offset: 4384)
!471 = !DIDerivedType(tag: DW_TAG_member, name: "quat", scope: !342, file: !343, line: 161, baseType: !288, size: 128, offset: 4480)
!472 = !DIDerivedType(tag: DW_TAG_member, name: "dquat", scope: !342, file: !343, line: 161, baseType: !288, size: 128, offset: 4608)
!473 = !DIDerivedType(tag: DW_TAG_member, name: "rotAxis", scope: !342, file: !343, line: 162, baseType: !206, size: 96, offset: 4736)
!474 = !DIDerivedType(tag: DW_TAG_member, name: "drotAxis", scope: !342, file: !343, line: 162, baseType: !206, size: 96, offset: 4832)
!475 = !DIDerivedType(tag: DW_TAG_member, name: "rotAngle", scope: !342, file: !343, line: 163, baseType: !7, size: 32, offset: 4928)
!476 = !DIDerivedType(tag: DW_TAG_member, name: "drotAngle", scope: !342, file: !343, line: 163, baseType: !7, size: 32, offset: 4960)
!477 = !DIDerivedType(tag: DW_TAG_member, name: "obmat", scope: !342, file: !343, line: 164, baseType: !478, size: 512, offset: 4992)
!478 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 512, elements: !479)
!479 = !{!290, !290}
!480 = !DIDerivedType(tag: DW_TAG_member, name: "parentinv", scope: !342, file: !343, line: 165, baseType: !478, size: 512, offset: 5504)
!481 = !DIDerivedType(tag: DW_TAG_member, name: "constinv", scope: !342, file: !343, line: 166, baseType: !478, size: 512, offset: 6016)
!482 = !DIDerivedType(tag: DW_TAG_member, name: "imat", scope: !342, file: !343, line: 167, baseType: !478, size: 512, offset: 6528)
!483 = !DIDerivedType(tag: DW_TAG_member, name: "imat_ren", scope: !342, file: !343, line: 176, baseType: !478, size: 512, offset: 7040)
!484 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !342, file: !343, line: 178, baseType: !96, size: 32, offset: 7552)
!485 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !342, file: !343, line: 180, baseType: !43, size: 16, offset: 7584)
!486 = !DIDerivedType(tag: DW_TAG_member, name: "colbits", scope: !342, file: !343, line: 181, baseType: !43, size: 16, offset: 7600)
!487 = !DIDerivedType(tag: DW_TAG_member, name: "transflag", scope: !342, file: !343, line: 183, baseType: !43, size: 16, offset: 7616)
!488 = !DIDerivedType(tag: DW_TAG_member, name: "protectflag", scope: !342, file: !343, line: 183, baseType: !43, size: 16, offset: 7632)
!489 = !DIDerivedType(tag: DW_TAG_member, name: "trackflag", scope: !342, file: !343, line: 184, baseType: !43, size: 16, offset: 7648)
!490 = !DIDerivedType(tag: DW_TAG_member, name: "upflag", scope: !342, file: !343, line: 184, baseType: !43, size: 16, offset: 7664)
!491 = !DIDerivedType(tag: DW_TAG_member, name: "nlaflag", scope: !342, file: !343, line: 185, baseType: !43, size: 16, offset: 7680)
!492 = !DIDerivedType(tag: DW_TAG_member, name: "ipoflag", scope: !342, file: !343, line: 186, baseType: !43, size: 16, offset: 7696)
!493 = !DIDerivedType(tag: DW_TAG_member, name: "scaflag", scope: !342, file: !343, line: 187, baseType: !43, size: 16, offset: 7712)
!494 = !DIDerivedType(tag: DW_TAG_member, name: "scavisflag", scope: !342, file: !343, line: 188, baseType: !28, size: 8, offset: 7728)
!495 = !DIDerivedType(tag: DW_TAG_member, name: "depsflag", scope: !342, file: !343, line: 189, baseType: !28, size: 8, offset: 7736)
!496 = !DIDerivedType(tag: DW_TAG_member, name: "dupon", scope: !342, file: !343, line: 192, baseType: !8, size: 32, offset: 7744)
!497 = !DIDerivedType(tag: DW_TAG_member, name: "dupoff", scope: !342, file: !343, line: 192, baseType: !8, size: 32, offset: 7776)
!498 = !DIDerivedType(tag: DW_TAG_member, name: "dupsta", scope: !342, file: !343, line: 192, baseType: !8, size: 32, offset: 7808)
!499 = !DIDerivedType(tag: DW_TAG_member, name: "dupend", scope: !342, file: !343, line: 192, baseType: !8, size: 32, offset: 7840)
!500 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !342, file: !343, line: 194, baseType: !8, size: 32, offset: 7872)
!501 = !DIDerivedType(tag: DW_TAG_member, name: "mass", scope: !342, file: !343, line: 202, baseType: !7, size: 32, offset: 7904)
!502 = !DIDerivedType(tag: DW_TAG_member, name: "damping", scope: !342, file: !343, line: 202, baseType: !7, size: 32, offset: 7936)
!503 = !DIDerivedType(tag: DW_TAG_member, name: "inertia", scope: !342, file: !343, line: 202, baseType: !7, size: 32, offset: 7968)
!504 = !DIDerivedType(tag: DW_TAG_member, name: "formfactor", scope: !342, file: !343, line: 211, baseType: !7, size: 32, offset: 8000)
!505 = !DIDerivedType(tag: DW_TAG_member, name: "rdamping", scope: !342, file: !343, line: 212, baseType: !7, size: 32, offset: 8032)
!506 = !DIDerivedType(tag: DW_TAG_member, name: "margin", scope: !342, file: !343, line: 213, baseType: !7, size: 32, offset: 8064)
!507 = !DIDerivedType(tag: DW_TAG_member, name: "max_vel", scope: !342, file: !343, line: 214, baseType: !7, size: 32, offset: 8096)
!508 = !DIDerivedType(tag: DW_TAG_member, name: "min_vel", scope: !342, file: !343, line: 215, baseType: !7, size: 32, offset: 8128)
!509 = !DIDerivedType(tag: DW_TAG_member, name: "obstacleRad", scope: !342, file: !343, line: 216, baseType: !7, size: 32, offset: 8160)
!510 = !DIDerivedType(tag: DW_TAG_member, name: "step_height", scope: !342, file: !343, line: 219, baseType: !7, size: 32, offset: 8192)
!511 = !DIDerivedType(tag: DW_TAG_member, name: "jump_speed", scope: !342, file: !343, line: 220, baseType: !7, size: 32, offset: 8224)
!512 = !DIDerivedType(tag: DW_TAG_member, name: "fall_speed", scope: !342, file: !343, line: 221, baseType: !7, size: 32, offset: 8256)
!513 = !DIDerivedType(tag: DW_TAG_member, name: "col_group", scope: !342, file: !343, line: 224, baseType: !514, size: 16, offset: 8288)
!514 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!515 = !DIDerivedType(tag: DW_TAG_member, name: "col_mask", scope: !342, file: !343, line: 224, baseType: !514, size: 16, offset: 8304)
!516 = !DIDerivedType(tag: DW_TAG_member, name: "rotmode", scope: !342, file: !343, line: 226, baseType: !43, size: 16, offset: 8320)
!517 = !DIDerivedType(tag: DW_TAG_member, name: "boundtype", scope: !342, file: !343, line: 228, baseType: !28, size: 8, offset: 8336)
!518 = !DIDerivedType(tag: DW_TAG_member, name: "collision_boundtype", scope: !342, file: !343, line: 229, baseType: !28, size: 8, offset: 8344)
!519 = !DIDerivedType(tag: DW_TAG_member, name: "dtx", scope: !342, file: !343, line: 231, baseType: !43, size: 16, offset: 8352)
!520 = !DIDerivedType(tag: DW_TAG_member, name: "dt", scope: !342, file: !343, line: 232, baseType: !28, size: 8, offset: 8368)
!521 = !DIDerivedType(tag: DW_TAG_member, name: "empty_drawtype", scope: !342, file: !343, line: 233, baseType: !28, size: 8, offset: 8376)
!522 = !DIDerivedType(tag: DW_TAG_member, name: "empty_drawsize", scope: !342, file: !343, line: 234, baseType: !7, size: 32, offset: 8384)
!523 = !DIDerivedType(tag: DW_TAG_member, name: "dupfacesca", scope: !342, file: !343, line: 235, baseType: !7, size: 32, offset: 8416)
!524 = !DIDerivedType(tag: DW_TAG_member, name: "prop", scope: !342, file: !343, line: 237, baseType: !77, size: 128, offset: 8448)
!525 = !DIDerivedType(tag: DW_TAG_member, name: "sensors", scope: !342, file: !343, line: 238, baseType: !77, size: 128, offset: 8576)
!526 = !DIDerivedType(tag: DW_TAG_member, name: "controllers", scope: !342, file: !343, line: 239, baseType: !77, size: 128, offset: 8704)
!527 = !DIDerivedType(tag: DW_TAG_member, name: "actuators", scope: !342, file: !343, line: 240, baseType: !77, size: 128, offset: 8832)
!528 = !DIDerivedType(tag: DW_TAG_member, name: "sf", scope: !342, file: !343, line: 242, baseType: !7, size: 32, offset: 8960)
!529 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !342, file: !343, line: 244, baseType: !43, size: 16, offset: 8992)
!530 = !DIDerivedType(tag: DW_TAG_member, name: "actdef", scope: !342, file: !343, line: 245, baseType: !514, size: 16, offset: 9008)
!531 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !342, file: !343, line: 246, baseType: !288, size: 128, offset: 9024)
!532 = !DIDerivedType(tag: DW_TAG_member, name: "gameflag", scope: !342, file: !343, line: 248, baseType: !8, size: 32, offset: 9152)
!533 = !DIDerivedType(tag: DW_TAG_member, name: "gameflag2", scope: !342, file: !343, line: 249, baseType: !8, size: 32, offset: 9184)
!534 = !DIDerivedType(tag: DW_TAG_member, name: "bsoft", scope: !342, file: !343, line: 251, baseType: !535, size: 64, offset: 9216)
!535 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !536, size: 64)
!536 = !DICompositeType(tag: DW_TAG_structure_type, name: "BulletSoftBody", file: !343, line: 251, flags: DIFlagFwdDecl)
!537 = !DIDerivedType(tag: DW_TAG_member, name: "restrictflag", scope: !342, file: !343, line: 253, baseType: !28, size: 8, offset: 9280)
!538 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !342, file: !343, line: 254, baseType: !28, size: 8, offset: 9288)
!539 = !DIDerivedType(tag: DW_TAG_member, name: "softflag", scope: !342, file: !343, line: 255, baseType: !43, size: 16, offset: 9296)
!540 = !DIDerivedType(tag: DW_TAG_member, name: "anisotropicFriction", scope: !342, file: !343, line: 256, baseType: !206, size: 96, offset: 9312)
!541 = !DIDerivedType(tag: DW_TAG_member, name: "constraints", scope: !342, file: !343, line: 258, baseType: !77, size: 128, offset: 9408)
!542 = !DIDerivedType(tag: DW_TAG_member, name: "nlastrips", scope: !342, file: !343, line: 259, baseType: !77, size: 128, offset: 9536)
!543 = !DIDerivedType(tag: DW_TAG_member, name: "hooks", scope: !342, file: !343, line: 260, baseType: !77, size: 128, offset: 9664)
!544 = !DIDerivedType(tag: DW_TAG_member, name: "particlesystem", scope: !342, file: !343, line: 261, baseType: !77, size: 128, offset: 9792)
!545 = !DIDerivedType(tag: DW_TAG_member, name: "pd", scope: !342, file: !343, line: 263, baseType: !546, size: 64, offset: 9920)
!546 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !547, size: 64)
!547 = !DICompositeType(tag: DW_TAG_structure_type, name: "PartDeflect", file: !343, line: 52, flags: DIFlagFwdDecl)
!548 = !DIDerivedType(tag: DW_TAG_member, name: "soft", scope: !342, file: !343, line: 264, baseType: !549, size: 64, offset: 9984)
!549 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !550, size: 64)
!550 = !DICompositeType(tag: DW_TAG_structure_type, name: "SoftBody", file: !343, line: 53, flags: DIFlagFwdDecl)
!551 = !DIDerivedType(tag: DW_TAG_member, name: "dup_group", scope: !342, file: !343, line: 265, baseType: !552, size: 64, offset: 10048)
!552 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !553, size: 64)
!553 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Group", file: !554, line: 51, size: 1216, elements: !555)
!554 = !DIFile(filename: "blender/source/blender/makesdna/DNA_group_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!555 = !{!556, !557, !558, !559}
!556 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !553, file: !554, line: 52, baseType: !108, size: 960)
!557 = !DIDerivedType(tag: DW_TAG_member, name: "gobject", scope: !553, file: !554, line: 54, baseType: !77, size: 128, offset: 960)
!558 = !DIDerivedType(tag: DW_TAG_member, name: "layer", scope: !553, file: !554, line: 59, baseType: !96, size: 32, offset: 1088)
!559 = !DIDerivedType(tag: DW_TAG_member, name: "dupli_ofs", scope: !553, file: !554, line: 60, baseType: !206, size: 96, offset: 1120)
!560 = !DIDerivedType(tag: DW_TAG_member, name: "body_type", scope: !342, file: !343, line: 267, baseType: !28, size: 8, offset: 10112)
!561 = !DIDerivedType(tag: DW_TAG_member, name: "shapeflag", scope: !342, file: !343, line: 268, baseType: !28, size: 8, offset: 10120)
!562 = !DIDerivedType(tag: DW_TAG_member, name: "shapenr", scope: !342, file: !343, line: 269, baseType: !43, size: 16, offset: 10128)
!563 = !DIDerivedType(tag: DW_TAG_member, name: "smoothresh", scope: !342, file: !343, line: 270, baseType: !7, size: 32, offset: 10144)
!564 = !DIDerivedType(tag: DW_TAG_member, name: "fluidsimSettings", scope: !342, file: !343, line: 272, baseType: !565, size: 64, offset: 10176)
!565 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !566, size: 64)
!566 = !DICompositeType(tag: DW_TAG_structure_type, name: "FluidsimSettings", file: !343, line: 54, flags: DIFlagFwdDecl)
!567 = !DIDerivedType(tag: DW_TAG_member, name: "curve_cache", scope: !342, file: !343, line: 275, baseType: !568, size: 64, offset: 10240)
!568 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !569, size: 64)
!569 = !DICompositeType(tag: DW_TAG_structure_type, name: "CurveCache", file: !343, line: 275, flags: DIFlagFwdDecl)
!570 = !DIDerivedType(tag: DW_TAG_member, name: "derivedDeform", scope: !342, file: !343, line: 277, baseType: !571, size: 64, offset: 10304)
!571 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !572, size: 64)
!572 = !DICompositeType(tag: DW_TAG_structure_type, name: "DerivedMesh", file: !343, line: 56, flags: DIFlagFwdDecl)
!573 = !DIDerivedType(tag: DW_TAG_member, name: "derivedFinal", scope: !342, file: !343, line: 277, baseType: !571, size: 64, offset: 10368)
!574 = !DIDerivedType(tag: DW_TAG_member, name: "lastDataMask", scope: !342, file: !343, line: 278, baseType: !575, size: 64, offset: 10432)
!575 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !576, line: 27, baseType: !577)
!576 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdint-uintn.h", directory: "")
!577 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint64_t", file: !578, line: 45, baseType: !25)
!578 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "")
!579 = !DIDerivedType(tag: DW_TAG_member, name: "customdata_mask", scope: !342, file: !343, line: 279, baseType: !575, size: 64, offset: 10496)
!580 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !342, file: !343, line: 280, baseType: !96, size: 32, offset: 10560)
!581 = !DIDerivedType(tag: DW_TAG_member, name: "init_state", scope: !342, file: !343, line: 281, baseType: !96, size: 32, offset: 10592)
!582 = !DIDerivedType(tag: DW_TAG_member, name: "gpulamp", scope: !342, file: !343, line: 283, baseType: !77, size: 128, offset: 10624)
!583 = !DIDerivedType(tag: DW_TAG_member, name: "pc_ids", scope: !342, file: !343, line: 284, baseType: !77, size: 128, offset: 10752)
!584 = !DIDerivedType(tag: DW_TAG_member, name: "duplilist", scope: !342, file: !343, line: 285, baseType: !585, size: 64, offset: 10880)
!585 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !77, size: 64)
!586 = !DIDerivedType(tag: DW_TAG_member, name: "rigidbody_object", scope: !342, file: !343, line: 287, baseType: !587, size: 64, offset: 10944)
!587 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !588, size: 64)
!588 = !DICompositeType(tag: DW_TAG_structure_type, name: "RigidBodyOb", file: !343, line: 59, flags: DIFlagFwdDecl)
!589 = !DIDerivedType(tag: DW_TAG_member, name: "rigidbody_constraint", scope: !342, file: !343, line: 288, baseType: !590, size: 64, offset: 11008)
!590 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !591, size: 64)
!591 = !DICompositeType(tag: DW_TAG_structure_type, name: "RigidBodyCon", file: !343, line: 288, flags: DIFlagFwdDecl)
!592 = !DIDerivedType(tag: DW_TAG_member, name: "ima_ofs", scope: !342, file: !343, line: 290, baseType: !10, size: 64, offset: 11072)
!593 = !DIDerivedType(tag: DW_TAG_member, name: "iuser", scope: !342, file: !343, line: 291, baseType: !594, size: 64, offset: 11136)
!594 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !595, size: 64)
!595 = !DIDerivedType(tag: DW_TAG_typedef, name: "ImageUser", file: !596, line: 65, baseType: !597)
!596 = !DIFile(filename: "blender/source/blender/makesdna/DNA_image_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!597 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ImageUser", file: !596, line: 50, size: 320, elements: !598)
!598 = !{!599, !1431, !1432, !1433, !1434, !1435, !1436, !1437, !1438, !1439, !1440, !1441, !1442, !1443}
!599 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !597, file: !596, line: 51, baseType: !600, size: 64)
!600 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !601, size: 64)
!601 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Scene", file: !434, line: 1216, size: 39680, elements: !602)
!602 = !{!603, !604, !605, !606, !705, !706, !707, !719, !720, !721, !722, !723, !724, !725, !726, !727, !728, !729, !730, !731, !734, !1011, !1014, !1304, !1316, !1317, !1318, !1319, !1320, !1321, !1322, !1323, !1326, !1327, !1328, !1329, !1330, !1338, !1405, !1412, !1413, !1420, !1423, !1424, !1425, !1426, !1427, !1428}
!603 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !601, file: !434, line: 1217, baseType: !108, size: 960)
!604 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !601, file: !434, line: 1218, baseType: !170, size: 64, offset: 960)
!605 = !DIDerivedType(tag: DW_TAG_member, name: "camera", scope: !601, file: !434, line: 1220, baseType: !341, size: 64, offset: 1024)
!606 = !DIDerivedType(tag: DW_TAG_member, name: "world", scope: !601, file: !434, line: 1221, baseType: !607, size: 64, offset: 1088)
!607 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !608, size: 64)
!608 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "World", file: !609, line: 52, size: 4224, elements: !610)
!609 = !DIFile(filename: "blender/source/blender/makesdna/DNA_world_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!610 = !{!611, !612, !613, !614, !615, !616, !617, !618, !619, !620, !621, !622, !623, !624, !625, !626, !627, !628, !629, !630, !631, !632, !633, !634, !635, !636, !637, !638, !639, !640, !641, !642, !643, !644, !645, !646, !647, !648, !649, !650, !651, !652, !653, !654, !655, !656, !657, !658, !659, !660, !661, !662, !663, !664, !665, !666, !667, !668, !669, !670, !671, !672, !673, !674, !675, !676, !677, !678, !679, !680, !681, !682, !683, !684, !686, !702}
!611 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !608, file: !609, line: 53, baseType: !108, size: 960)
!612 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !608, file: !609, line: 54, baseType: !170, size: 64, offset: 960)
!613 = !DIDerivedType(tag: DW_TAG_member, name: "colormodel", scope: !608, file: !609, line: 56, baseType: !43, size: 16, offset: 1024)
!614 = !DIDerivedType(tag: DW_TAG_member, name: "totex", scope: !608, file: !609, line: 56, baseType: !43, size: 16, offset: 1040)
!615 = !DIDerivedType(tag: DW_TAG_member, name: "texact", scope: !608, file: !609, line: 57, baseType: !43, size: 16, offset: 1056)
!616 = !DIDerivedType(tag: DW_TAG_member, name: "mistype", scope: !608, file: !609, line: 57, baseType: !43, size: 16, offset: 1072)
!617 = !DIDerivedType(tag: DW_TAG_member, name: "horr", scope: !608, file: !609, line: 59, baseType: !7, size: 32, offset: 1088)
!618 = !DIDerivedType(tag: DW_TAG_member, name: "horg", scope: !608, file: !609, line: 59, baseType: !7, size: 32, offset: 1120)
!619 = !DIDerivedType(tag: DW_TAG_member, name: "horb", scope: !608, file: !609, line: 59, baseType: !7, size: 32, offset: 1152)
!620 = !DIDerivedType(tag: DW_TAG_member, name: "zenr", scope: !608, file: !609, line: 60, baseType: !7, size: 32, offset: 1184)
!621 = !DIDerivedType(tag: DW_TAG_member, name: "zeng", scope: !608, file: !609, line: 60, baseType: !7, size: 32, offset: 1216)
!622 = !DIDerivedType(tag: DW_TAG_member, name: "zenb", scope: !608, file: !609, line: 60, baseType: !7, size: 32, offset: 1248)
!623 = !DIDerivedType(tag: DW_TAG_member, name: "ambr", scope: !608, file: !609, line: 61, baseType: !7, size: 32, offset: 1280)
!624 = !DIDerivedType(tag: DW_TAG_member, name: "ambg", scope: !608, file: !609, line: 61, baseType: !7, size: 32, offset: 1312)
!625 = !DIDerivedType(tag: DW_TAG_member, name: "ambb", scope: !608, file: !609, line: 61, baseType: !7, size: 32, offset: 1344)
!626 = !DIDerivedType(tag: DW_TAG_member, name: "exposure", scope: !608, file: !609, line: 68, baseType: !7, size: 32, offset: 1376)
!627 = !DIDerivedType(tag: DW_TAG_member, name: "exp", scope: !608, file: !609, line: 68, baseType: !7, size: 32, offset: 1408)
!628 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !608, file: !609, line: 68, baseType: !7, size: 32, offset: 1440)
!629 = !DIDerivedType(tag: DW_TAG_member, name: "linfac", scope: !608, file: !609, line: 69, baseType: !7, size: 32, offset: 1472)
!630 = !DIDerivedType(tag: DW_TAG_member, name: "logfac", scope: !608, file: !609, line: 69, baseType: !7, size: 32, offset: 1504)
!631 = !DIDerivedType(tag: DW_TAG_member, name: "gravity", scope: !608, file: !609, line: 74, baseType: !7, size: 32, offset: 1536)
!632 = !DIDerivedType(tag: DW_TAG_member, name: "activityBoxRadius", scope: !608, file: !609, line: 79, baseType: !7, size: 32, offset: 1568)
!633 = !DIDerivedType(tag: DW_TAG_member, name: "skytype", scope: !608, file: !609, line: 81, baseType: !43, size: 16, offset: 1600)
!634 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !608, file: !609, line: 91, baseType: !43, size: 16, offset: 1616)
!635 = !DIDerivedType(tag: DW_TAG_member, name: "occlusionRes", scope: !608, file: !609, line: 92, baseType: !43, size: 16, offset: 1632)
!636 = !DIDerivedType(tag: DW_TAG_member, name: "physicsEngine", scope: !608, file: !609, line: 93, baseType: !43, size: 16, offset: 1648)
!637 = !DIDerivedType(tag: DW_TAG_member, name: "ticrate", scope: !608, file: !609, line: 94, baseType: !43, size: 16, offset: 1664)
!638 = !DIDerivedType(tag: DW_TAG_member, name: "maxlogicstep", scope: !608, file: !609, line: 94, baseType: !43, size: 16, offset: 1680)
!639 = !DIDerivedType(tag: DW_TAG_member, name: "physubstep", scope: !608, file: !609, line: 94, baseType: !43, size: 16, offset: 1696)
!640 = !DIDerivedType(tag: DW_TAG_member, name: "maxphystep", scope: !608, file: !609, line: 94, baseType: !43, size: 16, offset: 1712)
!641 = !DIDerivedType(tag: DW_TAG_member, name: "misi", scope: !608, file: !609, line: 96, baseType: !7, size: 32, offset: 1728)
!642 = !DIDerivedType(tag: DW_TAG_member, name: "miststa", scope: !608, file: !609, line: 96, baseType: !7, size: 32, offset: 1760)
!643 = !DIDerivedType(tag: DW_TAG_member, name: "mistdist", scope: !608, file: !609, line: 96, baseType: !7, size: 32, offset: 1792)
!644 = !DIDerivedType(tag: DW_TAG_member, name: "misthi", scope: !608, file: !609, line: 96, baseType: !7, size: 32, offset: 1824)
!645 = !DIDerivedType(tag: DW_TAG_member, name: "starr", scope: !608, file: !609, line: 98, baseType: !7, size: 32, offset: 1856)
!646 = !DIDerivedType(tag: DW_TAG_member, name: "starg", scope: !608, file: !609, line: 98, baseType: !7, size: 32, offset: 1888)
!647 = !DIDerivedType(tag: DW_TAG_member, name: "starb", scope: !608, file: !609, line: 98, baseType: !7, size: 32, offset: 1920)
!648 = !DIDerivedType(tag: DW_TAG_member, name: "stark", scope: !608, file: !609, line: 98, baseType: !7, size: 32, offset: 1952)
!649 = !DIDerivedType(tag: DW_TAG_member, name: "starsize", scope: !608, file: !609, line: 99, baseType: !7, size: 32, offset: 1984)
!650 = !DIDerivedType(tag: DW_TAG_member, name: "starmindist", scope: !608, file: !609, line: 99, baseType: !7, size: 32, offset: 2016)
!651 = !DIDerivedType(tag: DW_TAG_member, name: "stardist", scope: !608, file: !609, line: 100, baseType: !7, size: 32, offset: 2048)
!652 = !DIDerivedType(tag: DW_TAG_member, name: "starcolnoise", scope: !608, file: !609, line: 100, baseType: !7, size: 32, offset: 2080)
!653 = !DIDerivedType(tag: DW_TAG_member, name: "dofsta", scope: !608, file: !609, line: 103, baseType: !43, size: 16, offset: 2112)
!654 = !DIDerivedType(tag: DW_TAG_member, name: "dofend", scope: !608, file: !609, line: 103, baseType: !43, size: 16, offset: 2128)
!655 = !DIDerivedType(tag: DW_TAG_member, name: "dofmin", scope: !608, file: !609, line: 103, baseType: !43, size: 16, offset: 2144)
!656 = !DIDerivedType(tag: DW_TAG_member, name: "dofmax", scope: !608, file: !609, line: 103, baseType: !43, size: 16, offset: 2160)
!657 = !DIDerivedType(tag: DW_TAG_member, name: "aodist", scope: !608, file: !609, line: 106, baseType: !7, size: 32, offset: 2176)
!658 = !DIDerivedType(tag: DW_TAG_member, name: "aodistfac", scope: !608, file: !609, line: 106, baseType: !7, size: 32, offset: 2208)
!659 = !DIDerivedType(tag: DW_TAG_member, name: "aoenergy", scope: !608, file: !609, line: 106, baseType: !7, size: 32, offset: 2240)
!660 = !DIDerivedType(tag: DW_TAG_member, name: "aobias", scope: !608, file: !609, line: 106, baseType: !7, size: 32, offset: 2272)
!661 = !DIDerivedType(tag: DW_TAG_member, name: "aomode", scope: !608, file: !609, line: 107, baseType: !43, size: 16, offset: 2304)
!662 = !DIDerivedType(tag: DW_TAG_member, name: "aosamp", scope: !608, file: !609, line: 107, baseType: !43, size: 16, offset: 2320)
!663 = !DIDerivedType(tag: DW_TAG_member, name: "aomix", scope: !608, file: !609, line: 107, baseType: !43, size: 16, offset: 2336)
!664 = !DIDerivedType(tag: DW_TAG_member, name: "aocolor", scope: !608, file: !609, line: 107, baseType: !43, size: 16, offset: 2352)
!665 = !DIDerivedType(tag: DW_TAG_member, name: "ao_adapt_thresh", scope: !608, file: !609, line: 108, baseType: !7, size: 32, offset: 2368)
!666 = !DIDerivedType(tag: DW_TAG_member, name: "ao_adapt_speed_fac", scope: !608, file: !609, line: 108, baseType: !7, size: 32, offset: 2400)
!667 = !DIDerivedType(tag: DW_TAG_member, name: "ao_approx_error", scope: !608, file: !609, line: 109, baseType: !7, size: 32, offset: 2432)
!668 = !DIDerivedType(tag: DW_TAG_member, name: "ao_approx_correction", scope: !608, file: !609, line: 109, baseType: !7, size: 32, offset: 2464)
!669 = !DIDerivedType(tag: DW_TAG_member, name: "ao_indirect_energy", scope: !608, file: !609, line: 110, baseType: !7, size: 32, offset: 2496)
!670 = !DIDerivedType(tag: DW_TAG_member, name: "ao_env_energy", scope: !608, file: !609, line: 110, baseType: !7, size: 32, offset: 2528)
!671 = !DIDerivedType(tag: DW_TAG_member, name: "ao_pad2", scope: !608, file: !609, line: 110, baseType: !7, size: 32, offset: 2560)
!672 = !DIDerivedType(tag: DW_TAG_member, name: "ao_indirect_bounces", scope: !608, file: !609, line: 111, baseType: !43, size: 16, offset: 2592)
!673 = !DIDerivedType(tag: DW_TAG_member, name: "ao_pad", scope: !608, file: !609, line: 111, baseType: !43, size: 16, offset: 2608)
!674 = !DIDerivedType(tag: DW_TAG_member, name: "ao_samp_method", scope: !608, file: !609, line: 112, baseType: !43, size: 16, offset: 2624)
!675 = !DIDerivedType(tag: DW_TAG_member, name: "ao_gather_method", scope: !608, file: !609, line: 112, baseType: !43, size: 16, offset: 2640)
!676 = !DIDerivedType(tag: DW_TAG_member, name: "ao_approx_passes", scope: !608, file: !609, line: 112, baseType: !43, size: 16, offset: 2656)
!677 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !608, file: !609, line: 115, baseType: !43, size: 16, offset: 2672)
!678 = !DIDerivedType(tag: DW_TAG_member, name: "aosphere", scope: !608, file: !609, line: 118, baseType: !63, size: 64, offset: 2688)
!679 = !DIDerivedType(tag: DW_TAG_member, name: "aotables", scope: !608, file: !609, line: 118, baseType: !63, size: 64, offset: 2752)
!680 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !608, file: !609, line: 121, baseType: !362, size: 64, offset: 2816)
!681 = !DIDerivedType(tag: DW_TAG_member, name: "mtex", scope: !608, file: !609, line: 122, baseType: !332, size: 1152, offset: 2880)
!682 = !DIDerivedType(tag: DW_TAG_member, name: "pr_texture", scope: !608, file: !609, line: 123, baseType: !43, size: 16, offset: 4032)
!683 = !DIDerivedType(tag: DW_TAG_member, name: "use_nodes", scope: !608, file: !609, line: 123, baseType: !43, size: 16, offset: 4048)
!684 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !608, file: !609, line: 123, baseType: !685, size: 32, offset: 4064)
!685 = !DICompositeType(tag: DW_TAG_array_type, baseType: !43, size: 32, elements: !11)
!686 = !DIDerivedType(tag: DW_TAG_member, name: "preview", scope: !608, file: !609, line: 126, baseType: !687, size: 64, offset: 4096)
!687 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !688, size: 64)
!688 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PreviewImage", file: !109, line: 159, size: 448, elements: !689)
!689 = !{!690, !692, !693, !694, !695, !698}
!690 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !688, file: !109, line: 161, baseType: !691, size: 64)
!691 = !DICompositeType(tag: DW_TAG_array_type, baseType: !96, size: 64, elements: !11)
!692 = !DIDerivedType(tag: DW_TAG_member, name: "h", scope: !688, file: !109, line: 162, baseType: !691, size: 64, offset: 64)
!693 = !DIDerivedType(tag: DW_TAG_member, name: "changed", scope: !688, file: !109, line: 163, baseType: !685, size: 32, offset: 128)
!694 = !DIDerivedType(tag: DW_TAG_member, name: "changed_timestamp", scope: !688, file: !109, line: 164, baseType: !685, size: 32, offset: 160)
!695 = !DIDerivedType(tag: DW_TAG_member, name: "rect", scope: !688, file: !109, line: 165, baseType: !696, size: 128, offset: 192)
!696 = !DICompositeType(tag: DW_TAG_array_type, baseType: !697, size: 128, elements: !11)
!697 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !96, size: 64)
!698 = !DIDerivedType(tag: DW_TAG_member, name: "gputexture", scope: !688, file: !109, line: 166, baseType: !699, size: 128, offset: 320)
!699 = !DICompositeType(tag: DW_TAG_array_type, baseType: !700, size: 128, elements: !11)
!700 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !701, size: 64)
!701 = !DICompositeType(tag: DW_TAG_structure_type, name: "GPUTexture", file: !109, line: 46, flags: DIFlagFwdDecl)
!702 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !608, file: !609, line: 129, baseType: !703, size: 64, offset: 4160)
!703 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !704, size: 64)
!704 = !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeTree", file: !172, line: 43, flags: DIFlagFwdDecl)
!705 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !601, file: !434, line: 1223, baseType: !600, size: 64, offset: 1152)
!706 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !601, file: !434, line: 1225, baseType: !77, size: 128, offset: 1216)
!707 = !DIDerivedType(tag: DW_TAG_member, name: "basact", scope: !601, file: !434, line: 1226, baseType: !708, size: 64, offset: 1344)
!708 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !709, size: 64)
!709 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Base", file: !434, line: 69, size: 320, elements: !710)
!710 = !{!711, !712, !713, !714, !715, !716, !717, !718}
!711 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !709, file: !434, line: 70, baseType: !708, size: 64)
!712 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !709, file: !434, line: 70, baseType: !708, size: 64, offset: 64)
!713 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !709, file: !434, line: 71, baseType: !96, size: 32, offset: 128)
!714 = !DIDerivedType(tag: DW_TAG_member, name: "selcol", scope: !709, file: !434, line: 71, baseType: !96, size: 32, offset: 160)
!715 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !709, file: !434, line: 72, baseType: !8, size: 32, offset: 192)
!716 = !DIDerivedType(tag: DW_TAG_member, name: "sx", scope: !709, file: !434, line: 73, baseType: !43, size: 16, offset: 224)
!717 = !DIDerivedType(tag: DW_TAG_member, name: "sy", scope: !709, file: !434, line: 73, baseType: !43, size: 16, offset: 240)
!718 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !709, file: !434, line: 74, baseType: !341, size: 64, offset: 256)
!719 = !DIDerivedType(tag: DW_TAG_member, name: "obedit", scope: !601, file: !434, line: 1227, baseType: !341, size: 64, offset: 1408)
!720 = !DIDerivedType(tag: DW_TAG_member, name: "cursor", scope: !601, file: !434, line: 1229, baseType: !206, size: 96, offset: 1472)
!721 = !DIDerivedType(tag: DW_TAG_member, name: "twcent", scope: !601, file: !434, line: 1230, baseType: !206, size: 96, offset: 1568)
!722 = !DIDerivedType(tag: DW_TAG_member, name: "twmin", scope: !601, file: !434, line: 1231, baseType: !206, size: 96, offset: 1664)
!723 = !DIDerivedType(tag: DW_TAG_member, name: "twmax", scope: !601, file: !434, line: 1231, baseType: !206, size: 96, offset: 1760)
!724 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !601, file: !434, line: 1233, baseType: !96, size: 32, offset: 1856)
!725 = !DIDerivedType(tag: DW_TAG_member, name: "layact", scope: !601, file: !434, line: 1234, baseType: !8, size: 32, offset: 1888)
!726 = !DIDerivedType(tag: DW_TAG_member, name: "lay_updated", scope: !601, file: !434, line: 1235, baseType: !96, size: 32, offset: 1920)
!727 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !601, file: !434, line: 1237, baseType: !43, size: 16, offset: 1952)
!728 = !DIDerivedType(tag: DW_TAG_member, name: "use_nodes", scope: !601, file: !434, line: 1239, baseType: !28, size: 8, offset: 1968)
!729 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !601, file: !434, line: 1240, baseType: !306, size: 8, offset: 1976)
!730 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !601, file: !434, line: 1242, baseType: !703, size: 64, offset: 1984)
!731 = !DIDerivedType(tag: DW_TAG_member, name: "ed", scope: !601, file: !434, line: 1244, baseType: !732, size: 64, offset: 2048)
!732 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !733, size: 64)
!733 = !DICompositeType(tag: DW_TAG_structure_type, name: "Editing", file: !434, line: 59, flags: DIFlagFwdDecl)
!734 = !DIDerivedType(tag: DW_TAG_member, name: "toolsettings", scope: !601, file: !434, line: 1246, baseType: !735, size: 64, offset: 2112)
!735 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !736, size: 64)
!736 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ToolSettings", file: !434, line: 1067, size: 5184, elements: !737)
!737 = !{!738, !767, !768, !783, !789, !790, !791, !792, !793, !794, !795, !796, !797, !798, !799, !800, !801, !805, !883, !910, !911, !912, !913, !914, !915, !916, !917, !918, !919, !920, !921, !922, !923, !924, !925, !926, !927, !928, !929, !930, !932, !933, !934, !935, !936, !937, !938, !939, !941, !942, !943, !944, !945, !946, !947, !948, !949, !950, !951, !952, !953, !954, !955, !956, !957, !958, !959, !960, !961, !962, !963, !964, !965, !966, !994}
!738 = !DIDerivedType(tag: DW_TAG_member, name: "vpaint", scope: !736, file: !434, line: 1068, baseType: !739, size: 64)
!739 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !740, size: 64)
!740 = !DIDerivedType(tag: DW_TAG_typedef, name: "VPaint", file: !434, line: 934, baseType: !741)
!741 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VPaint", file: !434, line: 925, size: 576, elements: !742)
!742 = !{!743, !759, !760, !761, !762, !763, !766}
!743 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !741, file: !434, line: 926, baseType: !744, size: 320)
!744 = !DIDerivedType(tag: DW_TAG_typedef, name: "Paint", file: !434, line: 830, baseType: !745)
!745 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Paint", file: !434, line: 813, size: 320, elements: !746)
!746 = !{!747, !750, !753, !754, !756, !757, !758}
!747 = !DIDerivedType(tag: DW_TAG_member, name: "brush", scope: !745, file: !434, line: 814, baseType: !748, size: 64)
!748 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !749, size: 64)
!749 = !DICompositeType(tag: DW_TAG_structure_type, name: "Brush", file: !434, line: 51, flags: DIFlagFwdDecl)
!750 = !DIDerivedType(tag: DW_TAG_member, name: "palette", scope: !745, file: !434, line: 815, baseType: !751, size: 64, offset: 64)
!751 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !752, size: 64)
!752 = !DICompositeType(tag: DW_TAG_structure_type, name: "Palette", file: !434, line: 815, flags: DIFlagFwdDecl)
!753 = !DIDerivedType(tag: DW_TAG_member, name: "paint_cursor", scope: !745, file: !434, line: 818, baseType: !6, size: 64, offset: 128)
!754 = !DIDerivedType(tag: DW_TAG_member, name: "paint_cursor_col", scope: !745, file: !434, line: 819, baseType: !755, size: 32, offset: 192)
!755 = !DICompositeType(tag: DW_TAG_array_type, baseType: !48, size: 32, elements: !289)
!756 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !745, file: !434, line: 822, baseType: !8, size: 32, offset: 224)
!757 = !DIDerivedType(tag: DW_TAG_member, name: "num_input_samples", scope: !745, file: !434, line: 826, baseType: !8, size: 32, offset: 256)
!758 = !DIDerivedType(tag: DW_TAG_member, name: "symmetry_flags", scope: !745, file: !434, line: 829, baseType: !8, size: 32, offset: 288)
!759 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !741, file: !434, line: 928, baseType: !43, size: 16, offset: 320)
!760 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !741, file: !434, line: 928, baseType: !43, size: 16, offset: 336)
!761 = !DIDerivedType(tag: DW_TAG_member, name: "tot", scope: !741, file: !434, line: 929, baseType: !8, size: 32, offset: 352)
!762 = !DIDerivedType(tag: DW_TAG_member, name: "vpaint_prev", scope: !741, file: !434, line: 930, baseType: !697, size: 64, offset: 384)
!763 = !DIDerivedType(tag: DW_TAG_member, name: "wpaint_prev", scope: !741, file: !434, line: 931, baseType: !764, size: 64, offset: 448)
!764 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !765, size: 64)
!765 = !DICompositeType(tag: DW_TAG_structure_type, name: "MDeformVert", file: !434, line: 931, flags: DIFlagFwdDecl)
!766 = !DIDerivedType(tag: DW_TAG_member, name: "paintcursor", scope: !741, file: !434, line: 933, baseType: !6, size: 64, offset: 512)
!767 = !DIDerivedType(tag: DW_TAG_member, name: "wpaint", scope: !736, file: !434, line: 1069, baseType: !739, size: 64, offset: 64)
!768 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt", scope: !736, file: !434, line: 1070, baseType: !769, size: 64, offset: 128)
!769 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !770, size: 64)
!770 = !DIDerivedType(tag: DW_TAG_typedef, name: "Sculpt", file: !434, line: 916, baseType: !771)
!771 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Sculpt", file: !434, line: 891, size: 704, elements: !772)
!772 = !{!773, !774, !775, !777, !778, !779, !780, !781, !782}
!773 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !771, file: !434, line: 892, baseType: !744, size: 320)
!774 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !771, file: !434, line: 896, baseType: !8, size: 32, offset: 320)
!775 = !DIDerivedType(tag: DW_TAG_member, name: "radial_symm", scope: !771, file: !434, line: 900, baseType: !776, size: 96, offset: 352)
!776 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 96, elements: !207)
!777 = !DIDerivedType(tag: DW_TAG_member, name: "detail_size", scope: !771, file: !434, line: 903, baseType: !7, size: 32, offset: 448)
!778 = !DIDerivedType(tag: DW_TAG_member, name: "symmetrize_direction", scope: !771, file: !434, line: 906, baseType: !8, size: 32, offset: 480)
!779 = !DIDerivedType(tag: DW_TAG_member, name: "gravity_factor", scope: !771, file: !434, line: 909, baseType: !7, size: 32, offset: 512)
!780 = !DIDerivedType(tag: DW_TAG_member, name: "constant_detail", scope: !771, file: !434, line: 912, baseType: !7, size: 32, offset: 544)
!781 = !DIDerivedType(tag: DW_TAG_member, name: "gravity_object", scope: !771, file: !434, line: 914, baseType: !341, size: 64, offset: 576)
!782 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !771, file: !434, line: 915, baseType: !6, size: 64, offset: 640)
!783 = !DIDerivedType(tag: DW_TAG_member, name: "uvsculpt", scope: !736, file: !434, line: 1071, baseType: !784, size: 64, offset: 192)
!784 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !785, size: 64)
!785 = !DIDerivedType(tag: DW_TAG_typedef, name: "UvSculpt", file: !434, line: 920, baseType: !786)
!786 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "UvSculpt", file: !434, line: 918, size: 320, elements: !787)
!787 = !{!788}
!788 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !786, file: !434, line: 919, baseType: !744, size: 320)
!789 = !DIDerivedType(tag: DW_TAG_member, name: "vgroup_weight", scope: !736, file: !434, line: 1075, baseType: !7, size: 32, offset: 256)
!790 = !DIDerivedType(tag: DW_TAG_member, name: "doublimit", scope: !736, file: !434, line: 1077, baseType: !7, size: 32, offset: 288)
!791 = !DIDerivedType(tag: DW_TAG_member, name: "normalsize", scope: !736, file: !434, line: 1078, baseType: !7, size: 32, offset: 320)
!792 = !DIDerivedType(tag: DW_TAG_member, name: "automerge", scope: !736, file: !434, line: 1079, baseType: !43, size: 16, offset: 352)
!793 = !DIDerivedType(tag: DW_TAG_member, name: "selectmode", scope: !736, file: !434, line: 1082, baseType: !43, size: 16, offset: 368)
!794 = !DIDerivedType(tag: DW_TAG_member, name: "unwrapper", scope: !736, file: !434, line: 1085, baseType: !28, size: 8, offset: 384)
!795 = !DIDerivedType(tag: DW_TAG_member, name: "uvcalc_flag", scope: !736, file: !434, line: 1086, baseType: !28, size: 8, offset: 392)
!796 = !DIDerivedType(tag: DW_TAG_member, name: "uv_flag", scope: !736, file: !434, line: 1087, baseType: !28, size: 8, offset: 400)
!797 = !DIDerivedType(tag: DW_TAG_member, name: "uv_selectmode", scope: !736, file: !434, line: 1088, baseType: !28, size: 8, offset: 408)
!798 = !DIDerivedType(tag: DW_TAG_member, name: "uvcalc_margin", scope: !736, file: !434, line: 1090, baseType: !7, size: 32, offset: 416)
!799 = !DIDerivedType(tag: DW_TAG_member, name: "autoik_chainlen", scope: !736, file: !434, line: 1093, baseType: !43, size: 16, offset: 448)
!800 = !DIDerivedType(tag: DW_TAG_member, name: "gpencil_flags", scope: !736, file: !434, line: 1096, baseType: !28, size: 8, offset: 464)
!801 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !736, file: !434, line: 1098, baseType: !802, size: 40, offset: 472)
!802 = !DICompositeType(tag: DW_TAG_array_type, baseType: !28, size: 40, elements: !803)
!803 = !{!804}
!804 = !DISubrange(count: 5)
!805 = !DIDerivedType(tag: DW_TAG_member, name: "imapaint", scope: !736, file: !434, line: 1101, baseType: !806, size: 832, offset: 512)
!806 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ImagePaintSettings", file: !434, line: 836, size: 832, elements: !807)
!807 = !{!808, !809, !810, !811, !812, !813, !814, !815, !816, !879, !880, !881, !882}
!808 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !806, file: !434, line: 837, baseType: !744, size: 320)
!809 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !806, file: !434, line: 839, baseType: !43, size: 16, offset: 320)
!810 = !DIDerivedType(tag: DW_TAG_member, name: "missing_data", scope: !806, file: !434, line: 839, baseType: !43, size: 16, offset: 336)
!811 = !DIDerivedType(tag: DW_TAG_member, name: "seam_bleed", scope: !806, file: !434, line: 842, baseType: !43, size: 16, offset: 352)
!812 = !DIDerivedType(tag: DW_TAG_member, name: "normal_angle", scope: !806, file: !434, line: 842, baseType: !43, size: 16, offset: 368)
!813 = !DIDerivedType(tag: DW_TAG_member, name: "screen_grab_size", scope: !806, file: !434, line: 843, baseType: !685, size: 32, offset: 384)
!814 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !806, file: !434, line: 845, baseType: !8, size: 32, offset: 416)
!815 = !DIDerivedType(tag: DW_TAG_member, name: "paintcursor", scope: !806, file: !434, line: 847, baseType: !6, size: 64, offset: 448)
!816 = !DIDerivedType(tag: DW_TAG_member, name: "stencil", scope: !806, file: !434, line: 848, baseType: !817, size: 64, offset: 512)
!817 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !818, size: 64)
!818 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Image", file: !596, line: 77, size: 15424, elements: !819)
!819 = !{!820, !821, !822, !825, !826, !829, !830, !833, !834, !835, !836, !837, !838, !839, !840, !841, !842, !843, !844, !845, !846, !847, !848, !849, !850, !851, !852, !853, !854, !855, !856, !857, !858, !859, !860, !861, !862, !868, !869, !873}
!820 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !818, file: !596, line: 78, baseType: !108, size: 960)
!821 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !818, file: !596, line: 80, baseType: !127, size: 8192, offset: 960)
!822 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !818, file: !596, line: 82, baseType: !823, size: 64, offset: 9152)
!823 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !824, size: 64)
!824 = !DICompositeType(tag: DW_TAG_structure_type, name: "MovieCache", file: !596, line: 43, flags: DIFlagFwdDecl)
!825 = !DIDerivedType(tag: DW_TAG_member, name: "gputexture", scope: !818, file: !596, line: 83, baseType: !700, size: 64, offset: 9216)
!826 = !DIDerivedType(tag: DW_TAG_member, name: "anim", scope: !818, file: !596, line: 86, baseType: !827, size: 64, offset: 9280)
!827 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !828, size: 64)
!828 = !DICompositeType(tag: DW_TAG_structure_type, name: "anim", file: !596, line: 41, flags: DIFlagFwdDecl)
!829 = !DIDerivedType(tag: DW_TAG_member, name: "rr", scope: !818, file: !596, line: 87, baseType: !55, size: 64, offset: 9344)
!830 = !DIDerivedType(tag: DW_TAG_member, name: "renders", scope: !818, file: !596, line: 89, baseType: !831, size: 512, offset: 9408)
!831 = !DICompositeType(tag: DW_TAG_array_type, baseType: !55, size: 512, elements: !832)
!832 = !{!371}
!833 = !DIDerivedType(tag: DW_TAG_member, name: "render_slot", scope: !818, file: !596, line: 90, baseType: !43, size: 16, offset: 9920)
!834 = !DIDerivedType(tag: DW_TAG_member, name: "last_render_slot", scope: !818, file: !596, line: 90, baseType: !43, size: 16, offset: 9936)
!835 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !818, file: !596, line: 92, baseType: !43, size: 16, offset: 9952)
!836 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !818, file: !596, line: 92, baseType: !43, size: 16, offset: 9968)
!837 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !818, file: !596, line: 93, baseType: !43, size: 16, offset: 9984)
!838 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !818, file: !596, line: 93, baseType: !43, size: 16, offset: 10000)
!839 = !DIDerivedType(tag: DW_TAG_member, name: "lastframe", scope: !818, file: !596, line: 94, baseType: !8, size: 32, offset: 10016)
!840 = !DIDerivedType(tag: DW_TAG_member, name: "tpageflag", scope: !818, file: !596, line: 97, baseType: !43, size: 16, offset: 10048)
!841 = !DIDerivedType(tag: DW_TAG_member, name: "totbind", scope: !818, file: !596, line: 97, baseType: !43, size: 16, offset: 10064)
!842 = !DIDerivedType(tag: DW_TAG_member, name: "xrep", scope: !818, file: !596, line: 98, baseType: !43, size: 16, offset: 10080)
!843 = !DIDerivedType(tag: DW_TAG_member, name: "yrep", scope: !818, file: !596, line: 98, baseType: !43, size: 16, offset: 10096)
!844 = !DIDerivedType(tag: DW_TAG_member, name: "twsta", scope: !818, file: !596, line: 99, baseType: !43, size: 16, offset: 10112)
!845 = !DIDerivedType(tag: DW_TAG_member, name: "twend", scope: !818, file: !596, line: 99, baseType: !43, size: 16, offset: 10128)
!846 = !DIDerivedType(tag: DW_TAG_member, name: "bindcode", scope: !818, file: !596, line: 100, baseType: !96, size: 32, offset: 10144)
!847 = !DIDerivedType(tag: DW_TAG_member, name: "repbind", scope: !818, file: !596, line: 101, baseType: !697, size: 64, offset: 10176)
!848 = !DIDerivedType(tag: DW_TAG_member, name: "packedfile", scope: !818, file: !596, line: 103, baseType: !133, size: 64, offset: 10240)
!849 = !DIDerivedType(tag: DW_TAG_member, name: "preview", scope: !818, file: !596, line: 104, baseType: !687, size: 64, offset: 10304)
!850 = !DIDerivedType(tag: DW_TAG_member, name: "lastupdate", scope: !818, file: !596, line: 107, baseType: !7, size: 32, offset: 10368)
!851 = !DIDerivedType(tag: DW_TAG_member, name: "lastused", scope: !818, file: !596, line: 108, baseType: !8, size: 32, offset: 10400)
!852 = !DIDerivedType(tag: DW_TAG_member, name: "animspeed", scope: !818, file: !596, line: 109, baseType: !43, size: 16, offset: 10432)
!853 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !818, file: !596, line: 110, baseType: !43, size: 16, offset: 10448)
!854 = !DIDerivedType(tag: DW_TAG_member, name: "gen_x", scope: !818, file: !596, line: 113, baseType: !8, size: 32, offset: 10464)
!855 = !DIDerivedType(tag: DW_TAG_member, name: "gen_y", scope: !818, file: !596, line: 113, baseType: !8, size: 32, offset: 10496)
!856 = !DIDerivedType(tag: DW_TAG_member, name: "gen_type", scope: !818, file: !596, line: 114, baseType: !28, size: 8, offset: 10528)
!857 = !DIDerivedType(tag: DW_TAG_member, name: "gen_flag", scope: !818, file: !596, line: 114, baseType: !28, size: 8, offset: 10536)
!858 = !DIDerivedType(tag: DW_TAG_member, name: "gen_depth", scope: !818, file: !596, line: 115, baseType: !43, size: 16, offset: 10544)
!859 = !DIDerivedType(tag: DW_TAG_member, name: "gen_color", scope: !818, file: !596, line: 116, baseType: !288, size: 128, offset: 10560)
!860 = !DIDerivedType(tag: DW_TAG_member, name: "aspx", scope: !818, file: !596, line: 119, baseType: !7, size: 32, offset: 10688)
!861 = !DIDerivedType(tag: DW_TAG_member, name: "aspy", scope: !818, file: !596, line: 119, baseType: !7, size: 32, offset: 10720)
!862 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace_settings", scope: !818, file: !596, line: 122, baseType: !863, size: 512, offset: 10752)
!863 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorManagedColorspaceSettings", file: !864, line: 182, baseType: !865)
!864 = !DIFile(filename: "blender/source/blender/makesdna/DNA_color_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!865 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorManagedColorspaceSettings", file: !864, line: 180, size: 512, elements: !866)
!866 = !{!867}
!867 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !865, file: !864, line: 181, baseType: !155, size: 512)
!868 = !DIDerivedType(tag: DW_TAG_member, name: "alpha_mode", scope: !818, file: !596, line: 123, baseType: !28, size: 8, offset: 11264)
!869 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !818, file: !596, line: 125, baseType: !870, size: 56, offset: 11272)
!870 = !DICompositeType(tag: DW_TAG_array_type, baseType: !28, size: 56, elements: !871)
!871 = !{!872}
!872 = !DISubrange(count: 7)
!873 = !DIDerivedType(tag: DW_TAG_member, name: "render_slots", scope: !818, file: !596, line: 126, baseType: !874, size: 4096, offset: 11328)
!874 = !DICompositeType(tag: DW_TAG_array_type, baseType: !875, size: 4096, elements: !832)
!875 = !DIDerivedType(tag: DW_TAG_typedef, name: "RenderSlot", file: !596, line: 69, baseType: !876)
!876 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RenderSlot", file: !596, line: 67, size: 512, elements: !877)
!877 = !{!878}
!878 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !876, file: !596, line: 68, baseType: !155, size: 512)
!879 = !DIDerivedType(tag: DW_TAG_member, name: "clone", scope: !806, file: !434, line: 849, baseType: !817, size: 64, offset: 576)
!880 = !DIDerivedType(tag: DW_TAG_member, name: "canvas", scope: !806, file: !434, line: 850, baseType: !817, size: 64, offset: 640)
!881 = !DIDerivedType(tag: DW_TAG_member, name: "stencil_col", scope: !806, file: !434, line: 851, baseType: !206, size: 96, offset: 704)
!882 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !806, file: !434, line: 852, baseType: !7, size: 32, offset: 800)
!883 = !DIDerivedType(tag: DW_TAG_member, name: "particle", scope: !736, file: !434, line: 1104, baseType: !884, size: 1344, offset: 1344)
!884 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParticleEditSettings", file: !434, line: 867, size: 1344, elements: !885)
!885 = !{!886, !887, !888, !889, !890, !901, !902, !903, !904, !905, !906, !907, !908, !909}
!886 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !884, file: !434, line: 868, baseType: !43, size: 16)
!887 = !DIDerivedType(tag: DW_TAG_member, name: "totrekey", scope: !884, file: !434, line: 869, baseType: !43, size: 16, offset: 16)
!888 = !DIDerivedType(tag: DW_TAG_member, name: "totaddkey", scope: !884, file: !434, line: 870, baseType: !43, size: 16, offset: 32)
!889 = !DIDerivedType(tag: DW_TAG_member, name: "brushtype", scope: !884, file: !434, line: 871, baseType: !43, size: 16, offset: 48)
!890 = !DIDerivedType(tag: DW_TAG_member, name: "brush", scope: !884, file: !434, line: 873, baseType: !891, size: 896, offset: 64)
!891 = !DICompositeType(tag: DW_TAG_array_type, baseType: !892, size: 896, elements: !871)
!892 = !DIDerivedType(tag: DW_TAG_typedef, name: "ParticleBrushData", file: !434, line: 864, baseType: !893)
!893 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParticleBrushData", file: !434, line: 859, size: 128, elements: !894)
!894 = !{!895, !896, !897, !898, !899, !900}
!895 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !893, file: !434, line: 860, baseType: !43, size: 16)
!896 = !DIDerivedType(tag: DW_TAG_member, name: "step", scope: !893, file: !434, line: 861, baseType: !43, size: 16, offset: 16)
!897 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !893, file: !434, line: 861, baseType: !43, size: 16, offset: 32)
!898 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !893, file: !434, line: 861, baseType: !43, size: 16, offset: 48)
!899 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !893, file: !434, line: 862, baseType: !8, size: 32, offset: 64)
!900 = !DIDerivedType(tag: DW_TAG_member, name: "strength", scope: !893, file: !434, line: 863, baseType: !7, size: 32, offset: 96)
!901 = !DIDerivedType(tag: DW_TAG_member, name: "paintcursor", scope: !884, file: !434, line: 874, baseType: !6, size: 64, offset: 960)
!902 = !DIDerivedType(tag: DW_TAG_member, name: "emitterdist", scope: !884, file: !434, line: 876, baseType: !7, size: 32, offset: 1024)
!903 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !884, file: !434, line: 876, baseType: !7, size: 32, offset: 1056)
!904 = !DIDerivedType(tag: DW_TAG_member, name: "selectmode", scope: !884, file: !434, line: 878, baseType: !8, size: 32, offset: 1088)
!905 = !DIDerivedType(tag: DW_TAG_member, name: "edittype", scope: !884, file: !434, line: 879, baseType: !8, size: 32, offset: 1120)
!906 = !DIDerivedType(tag: DW_TAG_member, name: "draw_step", scope: !884, file: !434, line: 881, baseType: !8, size: 32, offset: 1152)
!907 = !DIDerivedType(tag: DW_TAG_member, name: "fade_frames", scope: !884, file: !434, line: 881, baseType: !8, size: 32, offset: 1184)
!908 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !884, file: !434, line: 883, baseType: !600, size: 64, offset: 1216)
!909 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !884, file: !434, line: 884, baseType: !341, size: 64, offset: 1280)
!910 = !DIDerivedType(tag: DW_TAG_member, name: "proportional_size", scope: !736, file: !434, line: 1107, baseType: !7, size: 32, offset: 2688)
!911 = !DIDerivedType(tag: DW_TAG_member, name: "select_thresh", scope: !736, file: !434, line: 1110, baseType: !7, size: 32, offset: 2720)
!912 = !DIDerivedType(tag: DW_TAG_member, name: "autokey_mode", scope: !736, file: !434, line: 1113, baseType: !43, size: 16, offset: 2752)
!913 = !DIDerivedType(tag: DW_TAG_member, name: "autokey_flag", scope: !736, file: !434, line: 1113, baseType: !43, size: 16, offset: 2768)
!914 = !DIDerivedType(tag: DW_TAG_member, name: "multires_subdiv_type", scope: !736, file: !434, line: 1116, baseType: !28, size: 8, offset: 2784)
!915 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !736, file: !434, line: 1117, baseType: !306, size: 8, offset: 2792)
!916 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_resolution", scope: !736, file: !434, line: 1120, baseType: !43, size: 16, offset: 2800)
!917 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_threshold_internal", scope: !736, file: !434, line: 1121, baseType: !7, size: 32, offset: 2816)
!918 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_threshold_external", scope: !736, file: !434, line: 1122, baseType: !7, size: 32, offset: 2848)
!919 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_length_ratio", scope: !736, file: !434, line: 1123, baseType: !7, size: 32, offset: 2880)
!920 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_length_limit", scope: !736, file: !434, line: 1124, baseType: !7, size: 32, offset: 2912)
!921 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_angle_limit", scope: !736, file: !434, line: 1125, baseType: !7, size: 32, offset: 2944)
!922 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_correlation_limit", scope: !736, file: !434, line: 1126, baseType: !7, size: 32, offset: 2976)
!923 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_symmetry_limit", scope: !736, file: !434, line: 1127, baseType: !7, size: 32, offset: 3008)
!924 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_angle_weight", scope: !736, file: !434, line: 1128, baseType: !7, size: 32, offset: 3040)
!925 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_length_weight", scope: !736, file: !434, line: 1129, baseType: !7, size: 32, offset: 3072)
!926 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_distance_weight", scope: !736, file: !434, line: 1130, baseType: !7, size: 32, offset: 3104)
!927 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_options", scope: !736, file: !434, line: 1131, baseType: !43, size: 16, offset: 3136)
!928 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_postpro", scope: !736, file: !434, line: 1132, baseType: !28, size: 8, offset: 3152)
!929 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_postpro_passes", scope: !736, file: !434, line: 1133, baseType: !28, size: 8, offset: 3160)
!930 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_subdivisions", scope: !736, file: !434, line: 1134, baseType: !931, size: 24, offset: 3168)
!931 = !DICompositeType(tag: DW_TAG_array_type, baseType: !28, size: 24, elements: !207)
!932 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_multi_level", scope: !736, file: !434, line: 1135, baseType: !28, size: 8, offset: 3192)
!933 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_template", scope: !736, file: !434, line: 1138, baseType: !341, size: 64, offset: 3200)
!934 = !DIDerivedType(tag: DW_TAG_member, name: "bone_sketching", scope: !736, file: !434, line: 1139, baseType: !28, size: 8, offset: 3264)
!935 = !DIDerivedType(tag: DW_TAG_member, name: "bone_sketching_convert", scope: !736, file: !434, line: 1140, baseType: !28, size: 8, offset: 3272)
!936 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_subdivision_number", scope: !736, file: !434, line: 1141, baseType: !28, size: 8, offset: 3280)
!937 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_options", scope: !736, file: !434, line: 1142, baseType: !28, size: 8, offset: 3288)
!938 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_roll", scope: !736, file: !434, line: 1143, baseType: !28, size: 8, offset: 3296)
!939 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_side_string", scope: !736, file: !434, line: 1144, baseType: !940, size: 64, offset: 3304)
!940 = !DICompositeType(tag: DW_TAG_array_type, baseType: !28, size: 64, elements: !832)
!941 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_num_string", scope: !736, file: !434, line: 1145, baseType: !940, size: 64, offset: 3368)
!942 = !DIDerivedType(tag: DW_TAG_member, name: "edge_mode", scope: !736, file: !434, line: 1148, baseType: !28, size: 8, offset: 3432)
!943 = !DIDerivedType(tag: DW_TAG_member, name: "edge_mode_live_unwrap", scope: !736, file: !434, line: 1149, baseType: !28, size: 8, offset: 3440)
!944 = !DIDerivedType(tag: DW_TAG_member, name: "snap_mode", scope: !736, file: !434, line: 1152, baseType: !28, size: 8, offset: 3448)
!945 = !DIDerivedType(tag: DW_TAG_member, name: "snap_node_mode", scope: !736, file: !434, line: 1152, baseType: !28, size: 8, offset: 3456)
!946 = !DIDerivedType(tag: DW_TAG_member, name: "snap_uv_mode", scope: !736, file: !434, line: 1153, baseType: !28, size: 8, offset: 3464)
!947 = !DIDerivedType(tag: DW_TAG_member, name: "snap_flag", scope: !736, file: !434, line: 1154, baseType: !43, size: 16, offset: 3472)
!948 = !DIDerivedType(tag: DW_TAG_member, name: "snap_target", scope: !736, file: !434, line: 1154, baseType: !43, size: 16, offset: 3488)
!949 = !DIDerivedType(tag: DW_TAG_member, name: "proportional", scope: !736, file: !434, line: 1155, baseType: !43, size: 16, offset: 3504)
!950 = !DIDerivedType(tag: DW_TAG_member, name: "prop_mode", scope: !736, file: !434, line: 1155, baseType: !43, size: 16, offset: 3520)
!951 = !DIDerivedType(tag: DW_TAG_member, name: "proportional_objects", scope: !736, file: !434, line: 1156, baseType: !28, size: 8, offset: 3536)
!952 = !DIDerivedType(tag: DW_TAG_member, name: "proportional_mask", scope: !736, file: !434, line: 1157, baseType: !28, size: 8, offset: 3544)
!953 = !DIDerivedType(tag: DW_TAG_member, name: "auto_normalize", scope: !736, file: !434, line: 1159, baseType: !28, size: 8, offset: 3552)
!954 = !DIDerivedType(tag: DW_TAG_member, name: "multipaint", scope: !736, file: !434, line: 1160, baseType: !28, size: 8, offset: 3560)
!955 = !DIDerivedType(tag: DW_TAG_member, name: "weightuser", scope: !736, file: !434, line: 1161, baseType: !28, size: 8, offset: 3568)
!956 = !DIDerivedType(tag: DW_TAG_member, name: "vgroupsubset", scope: !736, file: !434, line: 1162, baseType: !28, size: 8, offset: 3576)
!957 = !DIDerivedType(tag: DW_TAG_member, name: "use_uv_sculpt", scope: !736, file: !434, line: 1165, baseType: !8, size: 32, offset: 3584)
!958 = !DIDerivedType(tag: DW_TAG_member, name: "uv_sculpt_settings", scope: !736, file: !434, line: 1166, baseType: !8, size: 32, offset: 3616)
!959 = !DIDerivedType(tag: DW_TAG_member, name: "uv_sculpt_tool", scope: !736, file: !434, line: 1167, baseType: !8, size: 32, offset: 3648)
!960 = !DIDerivedType(tag: DW_TAG_member, name: "uv_relax_method", scope: !736, file: !434, line: 1168, baseType: !8, size: 32, offset: 3680)
!961 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_settings", scope: !736, file: !434, line: 1171, baseType: !43, size: 16, offset: 3712)
!962 = !DIDerivedType(tag: DW_TAG_member, name: "pad5", scope: !736, file: !434, line: 1171, baseType: !43, size: 16, offset: 3728)
!963 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_unified_size", scope: !736, file: !434, line: 1172, baseType: !8, size: 32, offset: 3744)
!964 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_unified_unprojected_radius", scope: !736, file: !434, line: 1173, baseType: !7, size: 32, offset: 3776)
!965 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_unified_alpha", scope: !736, file: !434, line: 1174, baseType: !7, size: 32, offset: 3808)
!966 = !DIDerivedType(tag: DW_TAG_member, name: "unified_paint_settings", scope: !736, file: !434, line: 1177, baseType: !967, size: 1024, offset: 3840)
!967 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "UnifiedPaintSettings", file: !434, line: 963, size: 1024, elements: !968)
!968 = !{!969, !970, !971, !972, !973, !974, !975, !976, !977, !978, !979, !980, !981, !982, !983, !984, !985, !986, !987, !988, !989, !992, !993}
!969 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !967, file: !434, line: 965, baseType: !8, size: 32)
!970 = !DIDerivedType(tag: DW_TAG_member, name: "unprojected_radius", scope: !967, file: !434, line: 968, baseType: !7, size: 32, offset: 32)
!971 = !DIDerivedType(tag: DW_TAG_member, name: "alpha", scope: !967, file: !434, line: 971, baseType: !7, size: 32, offset: 64)
!972 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !967, file: !434, line: 974, baseType: !7, size: 32, offset: 96)
!973 = !DIDerivedType(tag: DW_TAG_member, name: "rgb", scope: !967, file: !434, line: 977, baseType: !206, size: 96, offset: 128)
!974 = !DIDerivedType(tag: DW_TAG_member, name: "secondary_rgb", scope: !967, file: !434, line: 979, baseType: !206, size: 96, offset: 224)
!975 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !967, file: !434, line: 982, baseType: !8, size: 32, offset: 320)
!976 = !DIDerivedType(tag: DW_TAG_member, name: "last_rake", scope: !967, file: !434, line: 987, baseType: !10, size: 64, offset: 352)
!977 = !DIDerivedType(tag: DW_TAG_member, name: "brush_rotation", scope: !967, file: !434, line: 989, baseType: !7, size: 32, offset: 416)
!978 = !DIDerivedType(tag: DW_TAG_member, name: "draw_anchored", scope: !967, file: !434, line: 994, baseType: !8, size: 32, offset: 448)
!979 = !DIDerivedType(tag: DW_TAG_member, name: "anchored_size", scope: !967, file: !434, line: 995, baseType: !8, size: 32, offset: 480)
!980 = !DIDerivedType(tag: DW_TAG_member, name: "draw_inverted", scope: !967, file: !434, line: 997, baseType: !28, size: 8, offset: 512)
!981 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !967, file: !434, line: 998, baseType: !870, size: 56, offset: 520)
!982 = !DIDerivedType(tag: DW_TAG_member, name: "overlap_factor", scope: !967, file: !434, line: 1000, baseType: !7, size: 32, offset: 576)
!983 = !DIDerivedType(tag: DW_TAG_member, name: "anchored_initial_mouse", scope: !967, file: !434, line: 1003, baseType: !10, size: 64, offset: 608)
!984 = !DIDerivedType(tag: DW_TAG_member, name: "stroke_active", scope: !967, file: !434, line: 1006, baseType: !8, size: 32, offset: 672)
!985 = !DIDerivedType(tag: DW_TAG_member, name: "size_pressure_value", scope: !967, file: !434, line: 1009, baseType: !7, size: 32, offset: 704)
!986 = !DIDerivedType(tag: DW_TAG_member, name: "tex_mouse", scope: !967, file: !434, line: 1012, baseType: !10, size: 64, offset: 736)
!987 = !DIDerivedType(tag: DW_TAG_member, name: "mask_tex_mouse", scope: !967, file: !434, line: 1015, baseType: !10, size: 64, offset: 800)
!988 = !DIDerivedType(tag: DW_TAG_member, name: "do_linear_conversion", scope: !967, file: !434, line: 1018, baseType: !8, size: 32, offset: 864)
!989 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !967, file: !434, line: 1019, baseType: !990, size: 64, offset: 896)
!990 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !991, size: 64)
!991 = !DICompositeType(tag: DW_TAG_structure_type, name: "ColorSpace", file: !434, line: 63, flags: DIFlagFwdDecl)
!992 = !DIDerivedType(tag: DW_TAG_member, name: "pixel_radius", scope: !967, file: !434, line: 1023, baseType: !7, size: 32, offset: 960)
!993 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !967, file: !434, line: 1024, baseType: !8, size: 32, offset: 992)
!994 = !DIDerivedType(tag: DW_TAG_member, name: "statvis", scope: !736, file: !434, line: 1179, baseType: !995, size: 320, offset: 4864)
!995 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MeshStatVis", file: !434, line: 1043, size: 320, elements: !996)
!996 = !{!997, !998, !1000, !1001, !1002, !1003, !1004, !1005, !1006, !1007, !1008, !1009, !1010}
!997 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !995, file: !434, line: 1044, baseType: !28, size: 8)
!998 = !DIDerivedType(tag: DW_TAG_member, name: "_pad1", scope: !995, file: !434, line: 1045, baseType: !999, size: 16, offset: 8)
!999 = !DICompositeType(tag: DW_TAG_array_type, baseType: !28, size: 16, elements: !11)
!1000 = !DIDerivedType(tag: DW_TAG_member, name: "overhang_axis", scope: !995, file: !434, line: 1048, baseType: !28, size: 8, offset: 24)
!1001 = !DIDerivedType(tag: DW_TAG_member, name: "overhang_min", scope: !995, file: !434, line: 1049, baseType: !7, size: 32, offset: 32)
!1002 = !DIDerivedType(tag: DW_TAG_member, name: "overhang_max", scope: !995, file: !434, line: 1049, baseType: !7, size: 32, offset: 64)
!1003 = !DIDerivedType(tag: DW_TAG_member, name: "thickness_min", scope: !995, file: !434, line: 1052, baseType: !7, size: 32, offset: 96)
!1004 = !DIDerivedType(tag: DW_TAG_member, name: "thickness_max", scope: !995, file: !434, line: 1052, baseType: !7, size: 32, offset: 128)
!1005 = !DIDerivedType(tag: DW_TAG_member, name: "thickness_samples", scope: !995, file: !434, line: 1053, baseType: !28, size: 8, offset: 160)
!1006 = !DIDerivedType(tag: DW_TAG_member, name: "_pad2", scope: !995, file: !434, line: 1054, baseType: !931, size: 24, offset: 168)
!1007 = !DIDerivedType(tag: DW_TAG_member, name: "distort_min", scope: !995, file: !434, line: 1057, baseType: !7, size: 32, offset: 192)
!1008 = !DIDerivedType(tag: DW_TAG_member, name: "distort_max", scope: !995, file: !434, line: 1057, baseType: !7, size: 32, offset: 224)
!1009 = !DIDerivedType(tag: DW_TAG_member, name: "sharp_min", scope: !995, file: !434, line: 1060, baseType: !7, size: 32, offset: 256)
!1010 = !DIDerivedType(tag: DW_TAG_member, name: "sharp_max", scope: !995, file: !434, line: 1060, baseType: !7, size: 32, offset: 288)
!1011 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !601, file: !434, line: 1247, baseType: !1012, size: 64, offset: 2176)
!1012 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1013, size: 64)
!1013 = !DICompositeType(tag: DW_TAG_structure_type, name: "SceneStats", file: !434, line: 60, flags: DIFlagFwdDecl)
!1014 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !601, file: !434, line: 1251, baseType: !1015, size: 31872, offset: 2240)
!1015 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RenderData", file: !434, line: 403, size: 31872, elements: !1016)
!1016 = !{!1017, !1099, !1119, !1128, !1148, !1168, !1169, !1170, !1171, !1172, !1173, !1174, !1175, !1176, !1177, !1178, !1179, !1180, !1181, !1182, !1183, !1184, !1185, !1186, !1187, !1188, !1189, !1190, !1191, !1192, !1193, !1194, !1195, !1196, !1197, !1198, !1199, !1200, !1201, !1202, !1203, !1204, !1205, !1206, !1207, !1208, !1209, !1210, !1211, !1212, !1213, !1214, !1215, !1216, !1217, !1218, !1219, !1220, !1221, !1222, !1223, !1224, !1225, !1226, !1227, !1228, !1229, !1230, !1231, !1232, !1233, !1234, !1235, !1236, !1237, !1238, !1239, !1240, !1241, !1242, !1243, !1244, !1245, !1246, !1247, !1248, !1249, !1250, !1251, !1255, !1256, !1257, !1258, !1259, !1260, !1261, !1262, !1263, !1264, !1265, !1266, !1267, !1268, !1269, !1270, !1271, !1272, !1273, !1274, !1275, !1276, !1277, !1278, !1282, !1283, !1284, !1286, !1302, !1303}
!1017 = !DIDerivedType(tag: DW_TAG_member, name: "im_format", scope: !1015, file: !434, line: 404, baseType: !1018, size: 1984)
!1018 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ImageFormatData", file: !434, line: 259, size: 1984, elements: !1019)
!1019 = !{!1020, !1021, !1022, !1023, !1024, !1025, !1026, !1027, !1028, !1029, !1030, !1031, !1032, !1033, !1037, !1094}
!1020 = !DIDerivedType(tag: DW_TAG_member, name: "imtype", scope: !1018, file: !434, line: 260, baseType: !28, size: 8)
!1021 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !1018, file: !434, line: 263, baseType: !28, size: 8, offset: 8)
!1022 = !DIDerivedType(tag: DW_TAG_member, name: "planes", scope: !1018, file: !434, line: 266, baseType: !28, size: 8, offset: 16)
!1023 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1018, file: !434, line: 267, baseType: !28, size: 8, offset: 24)
!1024 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !1018, file: !434, line: 269, baseType: !28, size: 8, offset: 32)
!1025 = !DIDerivedType(tag: DW_TAG_member, name: "compress", scope: !1018, file: !434, line: 270, baseType: !28, size: 8, offset: 40)
!1026 = !DIDerivedType(tag: DW_TAG_member, name: "exr_codec", scope: !1018, file: !434, line: 276, baseType: !28, size: 8, offset: 48)
!1027 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_flag", scope: !1018, file: !434, line: 279, baseType: !28, size: 8, offset: 56)
!1028 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_white", scope: !1018, file: !434, line: 280, baseType: !43, size: 16, offset: 64)
!1029 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_black", scope: !1018, file: !434, line: 280, baseType: !43, size: 16, offset: 80)
!1030 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_gamma", scope: !1018, file: !434, line: 281, baseType: !7, size: 32, offset: 96)
!1031 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_flag", scope: !1018, file: !434, line: 284, baseType: !28, size: 8, offset: 128)
!1032 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_codec", scope: !1018, file: !434, line: 285, baseType: !28, size: 8, offset: 136)
!1033 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1018, file: !434, line: 287, baseType: !1034, size: 48, offset: 144)
!1034 = !DICompositeType(tag: DW_TAG_array_type, baseType: !28, size: 48, elements: !1035)
!1035 = !{!1036}
!1036 = !DISubrange(count: 6)
!1037 = !DIDerivedType(tag: DW_TAG_member, name: "view_settings", scope: !1018, file: !434, line: 290, baseType: !1038, size: 1280, offset: 192)
!1038 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorManagedViewSettings", file: !864, line: 174, baseType: !1039)
!1039 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorManagedViewSettings", file: !864, line: 166, size: 1280, elements: !1040)
!1040 = !{!1041, !1042, !1043, !1044, !1045, !1046, !1047, !1093}
!1041 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1039, file: !864, line: 167, baseType: !8, size: 32)
!1042 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1039, file: !864, line: 167, baseType: !8, size: 32, offset: 32)
!1043 = !DIDerivedType(tag: DW_TAG_member, name: "look", scope: !1039, file: !864, line: 168, baseType: !155, size: 512, offset: 64)
!1044 = !DIDerivedType(tag: DW_TAG_member, name: "view_transform", scope: !1039, file: !864, line: 169, baseType: !155, size: 512, offset: 576)
!1045 = !DIDerivedType(tag: DW_TAG_member, name: "exposure", scope: !1039, file: !864, line: 170, baseType: !7, size: 32, offset: 1088)
!1046 = !DIDerivedType(tag: DW_TAG_member, name: "gamma", scope: !1039, file: !864, line: 171, baseType: !7, size: 32, offset: 1120)
!1047 = !DIDerivedType(tag: DW_TAG_member, name: "curve_mapping", scope: !1039, file: !864, line: 172, baseType: !1048, size: 64, offset: 1152)
!1048 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1049, size: 64)
!1049 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveMapping", file: !864, line: 72, size: 3072, elements: !1050)
!1050 = !{!1051, !1052, !1053, !1054, !1055, !1063, !1064, !1089, !1090, !1091, !1092}
!1051 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1049, file: !864, line: 73, baseType: !8, size: 32)
!1052 = !DIDerivedType(tag: DW_TAG_member, name: "cur", scope: !1049, file: !864, line: 73, baseType: !8, size: 32, offset: 32)
!1053 = !DIDerivedType(tag: DW_TAG_member, name: "preset", scope: !1049, file: !864, line: 74, baseType: !8, size: 32, offset: 64)
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "changed_timestamp", scope: !1049, file: !864, line: 75, baseType: !8, size: 32, offset: 96)
!1055 = !DIDerivedType(tag: DW_TAG_member, name: "curr", scope: !1049, file: !864, line: 77, baseType: !1056, size: 128, offset: 128)
!1056 = !DIDerivedType(tag: DW_TAG_typedef, name: "rctf", file: !67, line: 95, baseType: !1057)
!1057 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rctf", file: !67, line: 92, size: 128, elements: !1058)
!1058 = !{!1059, !1060, !1061, !1062}
!1059 = !DIDerivedType(tag: DW_TAG_member, name: "xmin", scope: !1057, file: !67, line: 93, baseType: !7, size: 32)
!1060 = !DIDerivedType(tag: DW_TAG_member, name: "xmax", scope: !1057, file: !67, line: 93, baseType: !7, size: 32, offset: 32)
!1061 = !DIDerivedType(tag: DW_TAG_member, name: "ymin", scope: !1057, file: !67, line: 94, baseType: !7, size: 32, offset: 64)
!1062 = !DIDerivedType(tag: DW_TAG_member, name: "ymax", scope: !1057, file: !67, line: 94, baseType: !7, size: 32, offset: 96)
!1063 = !DIDerivedType(tag: DW_TAG_member, name: "clipr", scope: !1049, file: !864, line: 77, baseType: !1056, size: 128, offset: 256)
!1064 = !DIDerivedType(tag: DW_TAG_member, name: "cm", scope: !1049, file: !864, line: 79, baseType: !1065, size: 2304, offset: 384)
!1065 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1066, size: 2304, elements: !289)
!1066 = !DIDerivedType(tag: DW_TAG_typedef, name: "CurveMap", file: !864, line: 67, baseType: !1067)
!1067 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveMap", file: !864, line: 55, size: 576, elements: !1068)
!1068 = !{!1069, !1070, !1071, !1072, !1073, !1074, !1075, !1076, !1085, !1086, !1087, !1088}
!1069 = !DIDerivedType(tag: DW_TAG_member, name: "totpoint", scope: !1067, file: !864, line: 56, baseType: !43, size: 16)
!1070 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1067, file: !864, line: 56, baseType: !43, size: 16, offset: 16)
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !1067, file: !864, line: 58, baseType: !7, size: 32, offset: 32)
!1072 = !DIDerivedType(tag: DW_TAG_member, name: "mintable", scope: !1067, file: !864, line: 59, baseType: !7, size: 32, offset: 64)
!1073 = !DIDerivedType(tag: DW_TAG_member, name: "maxtable", scope: !1067, file: !864, line: 59, baseType: !7, size: 32, offset: 96)
!1074 = !DIDerivedType(tag: DW_TAG_member, name: "ext_in", scope: !1067, file: !864, line: 60, baseType: !10, size: 64, offset: 128)
!1075 = !DIDerivedType(tag: DW_TAG_member, name: "ext_out", scope: !1067, file: !864, line: 60, baseType: !10, size: 64, offset: 192)
!1076 = !DIDerivedType(tag: DW_TAG_member, name: "curve", scope: !1067, file: !864, line: 61, baseType: !1077, size: 64, offset: 256)
!1077 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1078, size: 64)
!1078 = !DIDerivedType(tag: DW_TAG_typedef, name: "CurveMapPoint", file: !864, line: 47, baseType: !1079)
!1079 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveMapPoint", file: !864, line: 44, size: 96, elements: !1080)
!1080 = !{!1081, !1082, !1083, !1084}
!1081 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1079, file: !864, line: 45, baseType: !7, size: 32)
!1082 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !1079, file: !864, line: 45, baseType: !7, size: 32, offset: 32)
!1083 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1079, file: !864, line: 46, baseType: !43, size: 16, offset: 64)
!1084 = !DIDerivedType(tag: DW_TAG_member, name: "shorty", scope: !1079, file: !864, line: 46, baseType: !43, size: 16, offset: 80)
!1085 = !DIDerivedType(tag: DW_TAG_member, name: "table", scope: !1067, file: !864, line: 62, baseType: !1077, size: 64, offset: 320)
!1086 = !DIDerivedType(tag: DW_TAG_member, name: "premultable", scope: !1067, file: !864, line: 64, baseType: !1077, size: 64, offset: 384)
!1087 = !DIDerivedType(tag: DW_TAG_member, name: "premul_ext_in", scope: !1067, file: !864, line: 65, baseType: !10, size: 64, offset: 448)
!1088 = !DIDerivedType(tag: DW_TAG_member, name: "premul_ext_out", scope: !1067, file: !864, line: 66, baseType: !10, size: 64, offset: 512)
!1089 = !DIDerivedType(tag: DW_TAG_member, name: "black", scope: !1049, file: !864, line: 80, baseType: !206, size: 96, offset: 2688)
!1090 = !DIDerivedType(tag: DW_TAG_member, name: "white", scope: !1049, file: !864, line: 80, baseType: !206, size: 96, offset: 2784)
!1091 = !DIDerivedType(tag: DW_TAG_member, name: "bwmul", scope: !1049, file: !864, line: 81, baseType: !206, size: 96, offset: 2880)
!1092 = !DIDerivedType(tag: DW_TAG_member, name: "sample", scope: !1049, file: !864, line: 83, baseType: !206, size: 96, offset: 2976)
!1093 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1039, file: !864, line: 173, baseType: !6, size: 64, offset: 1216)
!1094 = !DIDerivedType(tag: DW_TAG_member, name: "display_settings", scope: !1018, file: !434, line: 291, baseType: !1095, size: 512, offset: 1472)
!1095 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorManagedDisplaySettings", file: !864, line: 178, baseType: !1096)
!1096 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorManagedDisplaySettings", file: !864, line: 176, size: 512, elements: !1097)
!1097 = !{!1098}
!1098 = !DIDerivedType(tag: DW_TAG_member, name: "display_device", scope: !1096, file: !864, line: 177, baseType: !155, size: 512)
!1099 = !DIDerivedType(tag: DW_TAG_member, name: "avicodecdata", scope: !1015, file: !434, line: 406, baseType: !1100, size: 64, offset: 1984)
!1100 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1101, size: 64)
!1101 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AviCodecData", file: !434, line: 80, size: 1472, elements: !1102)
!1102 = !{!1103, !1104, !1105, !1106, !1107, !1108, !1109, !1110, !1111, !1112, !1113, !1114, !1115}
!1103 = !DIDerivedType(tag: DW_TAG_member, name: "lpFormat", scope: !1101, file: !434, line: 81, baseType: !6, size: 64)
!1104 = !DIDerivedType(tag: DW_TAG_member, name: "lpParms", scope: !1101, file: !434, line: 82, baseType: !6, size: 64, offset: 64)
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "cbFormat", scope: !1101, file: !434, line: 83, baseType: !96, size: 32, offset: 128)
!1106 = !DIDerivedType(tag: DW_TAG_member, name: "cbParms", scope: !1101, file: !434, line: 84, baseType: !96, size: 32, offset: 160)
!1107 = !DIDerivedType(tag: DW_TAG_member, name: "fccType", scope: !1101, file: !434, line: 86, baseType: !96, size: 32, offset: 192)
!1108 = !DIDerivedType(tag: DW_TAG_member, name: "fccHandler", scope: !1101, file: !434, line: 87, baseType: !96, size: 32, offset: 224)
!1109 = !DIDerivedType(tag: DW_TAG_member, name: "dwKeyFrameEvery", scope: !1101, file: !434, line: 88, baseType: !96, size: 32, offset: 256)
!1110 = !DIDerivedType(tag: DW_TAG_member, name: "dwQuality", scope: !1101, file: !434, line: 89, baseType: !96, size: 32, offset: 288)
!1111 = !DIDerivedType(tag: DW_TAG_member, name: "dwBytesPerSecond", scope: !1101, file: !434, line: 90, baseType: !96, size: 32, offset: 320)
!1112 = !DIDerivedType(tag: DW_TAG_member, name: "dwFlags", scope: !1101, file: !434, line: 91, baseType: !96, size: 32, offset: 352)
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "dwInterleaveEvery", scope: !1101, file: !434, line: 92, baseType: !96, size: 32, offset: 384)
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1101, file: !434, line: 93, baseType: !96, size: 32, offset: 416)
!1115 = !DIDerivedType(tag: DW_TAG_member, name: "avicodecname", scope: !1101, file: !434, line: 95, baseType: !1116, size: 1024, offset: 448)
!1116 = !DICompositeType(tag: DW_TAG_array_type, baseType: !28, size: 1024, elements: !1117)
!1117 = !{!1118}
!1118 = !DISubrange(count: 128)
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "qtcodecdata", scope: !1015, file: !434, line: 407, baseType: !1120, size: 64, offset: 2048)
!1120 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1121, size: 64)
!1121 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "QuicktimeCodecData", file: !434, line: 98, size: 1216, elements: !1122)
!1122 = !{!1123, !1124, !1125, !1126, !1127}
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "cdParms", scope: !1121, file: !434, line: 100, baseType: !6, size: 64)
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1121, file: !434, line: 101, baseType: !6, size: 64, offset: 64)
!1125 = !DIDerivedType(tag: DW_TAG_member, name: "cdSize", scope: !1121, file: !434, line: 103, baseType: !96, size: 32, offset: 128)
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1121, file: !434, line: 104, baseType: !96, size: 32, offset: 160)
!1127 = !DIDerivedType(tag: DW_TAG_member, name: "qtcodecname", scope: !1121, file: !434, line: 106, baseType: !1116, size: 1024, offset: 192)
!1128 = !DIDerivedType(tag: DW_TAG_member, name: "qtcodecsettings", scope: !1015, file: !434, line: 408, baseType: !1129, size: 512, offset: 2112)
!1129 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "QuicktimeCodecSettings", file: !434, line: 109, size: 512, elements: !1130)
!1130 = !{!1131, !1132, !1133, !1134, !1135, !1136, !1137, !1138, !1139, !1140, !1141, !1142, !1143, !1144, !1145, !1146, !1147}
!1131 = !DIDerivedType(tag: DW_TAG_member, name: "codecType", scope: !1129, file: !434, line: 111, baseType: !8, size: 32)
!1132 = !DIDerivedType(tag: DW_TAG_member, name: "codecSpatialQuality", scope: !1129, file: !434, line: 112, baseType: !8, size: 32, offset: 32)
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "codec", scope: !1129, file: !434, line: 115, baseType: !8, size: 32, offset: 64)
!1134 = !DIDerivedType(tag: DW_TAG_member, name: "codecFlags", scope: !1129, file: !434, line: 116, baseType: !8, size: 32, offset: 96)
!1135 = !DIDerivedType(tag: DW_TAG_member, name: "colorDepth", scope: !1129, file: !434, line: 117, baseType: !8, size: 32, offset: 128)
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "codecTemporalQuality", scope: !1129, file: !434, line: 118, baseType: !8, size: 32, offset: 160)
!1137 = !DIDerivedType(tag: DW_TAG_member, name: "minSpatialQuality", scope: !1129, file: !434, line: 119, baseType: !8, size: 32, offset: 192)
!1138 = !DIDerivedType(tag: DW_TAG_member, name: "minTemporalQuality", scope: !1129, file: !434, line: 120, baseType: !8, size: 32, offset: 224)
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "keyFrameRate", scope: !1129, file: !434, line: 121, baseType: !8, size: 32, offset: 256)
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "bitRate", scope: !1129, file: !434, line: 122, baseType: !8, size: 32, offset: 288)
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "audiocodecType", scope: !1129, file: !434, line: 125, baseType: !8, size: 32, offset: 320)
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "audioSampleRate", scope: !1129, file: !434, line: 126, baseType: !8, size: 32, offset: 352)
!1143 = !DIDerivedType(tag: DW_TAG_member, name: "audioBitDepth", scope: !1129, file: !434, line: 127, baseType: !43, size: 16, offset: 384)
!1144 = !DIDerivedType(tag: DW_TAG_member, name: "audioChannels", scope: !1129, file: !434, line: 128, baseType: !43, size: 16, offset: 400)
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "audioCodecFlags", scope: !1129, file: !434, line: 129, baseType: !8, size: 32, offset: 416)
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "audioBitRate", scope: !1129, file: !434, line: 130, baseType: !8, size: 32, offset: 448)
!1147 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1129, file: !434, line: 131, baseType: !8, size: 32, offset: 480)
!1148 = !DIDerivedType(tag: DW_TAG_member, name: "ffcodecdata", scope: !1015, file: !434, line: 409, baseType: !1149, size: 576, offset: 2624)
!1149 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FFMpegCodecData", file: !434, line: 134, size: 576, elements: !1150)
!1150 = !{!1151, !1152, !1153, !1154, !1155, !1156, !1157, !1158, !1159, !1160, !1161, !1162, !1163, !1164, !1165, !1166, !1167}
!1151 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1149, file: !434, line: 135, baseType: !8, size: 32)
!1152 = !DIDerivedType(tag: DW_TAG_member, name: "codec", scope: !1149, file: !434, line: 136, baseType: !8, size: 32, offset: 32)
!1153 = !DIDerivedType(tag: DW_TAG_member, name: "audio_codec", scope: !1149, file: !434, line: 137, baseType: !8, size: 32, offset: 64)
!1154 = !DIDerivedType(tag: DW_TAG_member, name: "video_bitrate", scope: !1149, file: !434, line: 138, baseType: !8, size: 32, offset: 96)
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "audio_bitrate", scope: !1149, file: !434, line: 139, baseType: !8, size: 32, offset: 128)
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "audio_mixrate", scope: !1149, file: !434, line: 140, baseType: !8, size: 32, offset: 160)
!1157 = !DIDerivedType(tag: DW_TAG_member, name: "audio_channels", scope: !1149, file: !434, line: 141, baseType: !8, size: 32, offset: 192)
!1158 = !DIDerivedType(tag: DW_TAG_member, name: "audio_pad", scope: !1149, file: !434, line: 142, baseType: !8, size: 32, offset: 224)
!1159 = !DIDerivedType(tag: DW_TAG_member, name: "audio_volume", scope: !1149, file: !434, line: 143, baseType: !7, size: 32, offset: 256)
!1160 = !DIDerivedType(tag: DW_TAG_member, name: "gop_size", scope: !1149, file: !434, line: 144, baseType: !8, size: 32, offset: 288)
!1161 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1149, file: !434, line: 145, baseType: !8, size: 32, offset: 320)
!1162 = !DIDerivedType(tag: DW_TAG_member, name: "rc_min_rate", scope: !1149, file: !434, line: 147, baseType: !8, size: 32, offset: 352)
!1163 = !DIDerivedType(tag: DW_TAG_member, name: "rc_max_rate", scope: !1149, file: !434, line: 148, baseType: !8, size: 32, offset: 384)
!1164 = !DIDerivedType(tag: DW_TAG_member, name: "rc_buffer_size", scope: !1149, file: !434, line: 149, baseType: !8, size: 32, offset: 416)
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "mux_packet_size", scope: !1149, file: !434, line: 150, baseType: !8, size: 32, offset: 448)
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "mux_rate", scope: !1149, file: !434, line: 151, baseType: !8, size: 32, offset: 480)
!1167 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !1149, file: !434, line: 152, baseType: !144, size: 64, offset: 512)
!1168 = !DIDerivedType(tag: DW_TAG_member, name: "cfra", scope: !1015, file: !434, line: 411, baseType: !8, size: 32, offset: 3200)
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !1015, file: !434, line: 411, baseType: !8, size: 32, offset: 3232)
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "efra", scope: !1015, file: !434, line: 411, baseType: !8, size: 32, offset: 3264)
!1171 = !DIDerivedType(tag: DW_TAG_member, name: "subframe", scope: !1015, file: !434, line: 412, baseType: !7, size: 32, offset: 3296)
!1172 = !DIDerivedType(tag: DW_TAG_member, name: "psfra", scope: !1015, file: !434, line: 413, baseType: !8, size: 32, offset: 3328)
!1173 = !DIDerivedType(tag: DW_TAG_member, name: "pefra", scope: !1015, file: !434, line: 413, baseType: !8, size: 32, offset: 3360)
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "images", scope: !1015, file: !434, line: 415, baseType: !8, size: 32, offset: 3392)
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "framapto", scope: !1015, file: !434, line: 415, baseType: !8, size: 32, offset: 3424)
!1176 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1015, file: !434, line: 416, baseType: !43, size: 16, offset: 3456)
!1177 = !DIDerivedType(tag: DW_TAG_member, name: "threads", scope: !1015, file: !434, line: 416, baseType: !43, size: 16, offset: 3472)
!1178 = !DIDerivedType(tag: DW_TAG_member, name: "framelen", scope: !1015, file: !434, line: 418, baseType: !7, size: 32, offset: 3488)
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "blurfac", scope: !1015, file: !434, line: 418, baseType: !7, size: 32, offset: 3520)
!1180 = !DIDerivedType(tag: DW_TAG_member, name: "edgeR", scope: !1015, file: !434, line: 421, baseType: !7, size: 32, offset: 3552)
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "edgeG", scope: !1015, file: !434, line: 421, baseType: !7, size: 32, offset: 3584)
!1182 = !DIDerivedType(tag: DW_TAG_member, name: "edgeB", scope: !1015, file: !434, line: 421, baseType: !7, size: 32, offset: 3616)
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "fullscreen", scope: !1015, file: !434, line: 425, baseType: !43, size: 16, offset: 3648)
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "xplay", scope: !1015, file: !434, line: 425, baseType: !43, size: 16, offset: 3664)
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "yplay", scope: !1015, file: !434, line: 425, baseType: !43, size: 16, offset: 3680)
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "freqplay", scope: !1015, file: !434, line: 426, baseType: !43, size: 16, offset: 3696)
!1187 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !1015, file: !434, line: 428, baseType: !43, size: 16, offset: 3712)
!1188 = !DIDerivedType(tag: DW_TAG_member, name: "attrib", scope: !1015, file: !434, line: 428, baseType: !43, size: 16, offset: 3728)
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "frame_step", scope: !1015, file: !434, line: 431, baseType: !8, size: 32, offset: 3744)
!1190 = !DIDerivedType(tag: DW_TAG_member, name: "stereomode", scope: !1015, file: !434, line: 433, baseType: !43, size: 16, offset: 3776)
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "dimensionspreset", scope: !1015, file: !434, line: 435, baseType: !43, size: 16, offset: 3792)
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "filtertype", scope: !1015, file: !434, line: 437, baseType: !43, size: 16, offset: 3808)
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1015, file: !434, line: 439, baseType: !43, size: 16, offset: 3824)
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "maximsize", scope: !1015, file: !434, line: 441, baseType: !43, size: 16, offset: 3840)
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "pad6", scope: !1015, file: !434, line: 443, baseType: !43, size: 16, offset: 3856)
!1196 = !DIDerivedType(tag: DW_TAG_member, name: "xsch", scope: !1015, file: !434, line: 449, baseType: !8, size: 32, offset: 3872)
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "ysch", scope: !1015, file: !434, line: 453, baseType: !8, size: 32, offset: 3904)
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "xparts", scope: !1015, file: !434, line: 458, baseType: !43, size: 16, offset: 3936)
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "yparts", scope: !1015, file: !434, line: 462, baseType: !43, size: 16, offset: 3952)
!1200 = !DIDerivedType(tag: DW_TAG_member, name: "tilex", scope: !1015, file: !434, line: 467, baseType: !8, size: 32, offset: 3968)
!1201 = !DIDerivedType(tag: DW_TAG_member, name: "tiley", scope: !1015, file: !434, line: 467, baseType: !8, size: 32, offset: 4000)
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "planes", scope: !1015, file: !434, line: 469, baseType: !43, size: 16, offset: 4032)
!1203 = !DIDerivedType(tag: DW_TAG_member, name: "imtype", scope: !1015, file: !434, line: 469, baseType: !43, size: 16, offset: 4048)
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "subimtype", scope: !1015, file: !434, line: 469, baseType: !43, size: 16, offset: 4064)
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !1015, file: !434, line: 469, baseType: !43, size: 16, offset: 4080)
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "displaymode", scope: !1015, file: !434, line: 474, baseType: !43, size: 16, offset: 4096)
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "use_lock_interface", scope: !1015, file: !434, line: 475, baseType: !28, size: 8, offset: 4112)
!1208 = !DIDerivedType(tag: DW_TAG_member, name: "pad7", scope: !1015, file: !434, line: 476, baseType: !28, size: 8, offset: 4120)
!1209 = !DIDerivedType(tag: DW_TAG_member, name: "scemode", scope: !1015, file: !434, line: 481, baseType: !8, size: 32, offset: 4128)
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1015, file: !434, line: 486, baseType: !8, size: 32, offset: 4160)
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "raytrace_options", scope: !1015, file: !434, line: 491, baseType: !8, size: 32, offset: 4192)
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "raytrace_structure", scope: !1015, file: !434, line: 496, baseType: !43, size: 16, offset: 4224)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1015, file: !434, line: 498, baseType: !43, size: 16, offset: 4240)
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "ocres", scope: !1015, file: !434, line: 501, baseType: !43, size: 16, offset: 4256)
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !1015, file: !434, line: 502, baseType: !43, size: 16, offset: 4272)
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "alphamode", scope: !1015, file: !434, line: 508, baseType: !43, size: 16, offset: 4288)
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "osa", scope: !1015, file: !434, line: 513, baseType: !43, size: 16, offset: 4304)
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "frs_sec", scope: !1015, file: !434, line: 515, baseType: !43, size: 16, offset: 4320)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "edgeint", scope: !1015, file: !434, line: 515, baseType: !43, size: 16, offset: 4336)
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "safety", scope: !1015, file: !434, line: 519, baseType: !1056, size: 128, offset: 4352)
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "border", scope: !1015, file: !434, line: 519, baseType: !1056, size: 128, offset: 4480)
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "disprect", scope: !1015, file: !434, line: 520, baseType: !66, size: 128, offset: 4608)
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "layers", scope: !1015, file: !434, line: 523, baseType: !77, size: 128, offset: 4736)
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "actlay", scope: !1015, file: !434, line: 524, baseType: !43, size: 16, offset: 4864)
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "mblur_samples", scope: !1015, file: !434, line: 527, baseType: !43, size: 16, offset: 4880)
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "xasp", scope: !1015, file: !434, line: 532, baseType: !7, size: 32, offset: 4896)
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "yasp", scope: !1015, file: !434, line: 532, baseType: !7, size: 32, offset: 4928)
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "frs_sec_base", scope: !1015, file: !434, line: 534, baseType: !7, size: 32, offset: 4960)
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "gauss", scope: !1015, file: !434, line: 538, baseType: !7, size: 32, offset: 4992)
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "color_mgt_flag", scope: !1015, file: !434, line: 542, baseType: !8, size: 32, offset: 5024)
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "postgamma", scope: !1015, file: !434, line: 545, baseType: !7, size: 32, offset: 5056)
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "posthue", scope: !1015, file: !434, line: 545, baseType: !7, size: 32, offset: 5088)
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "postsat", scope: !1015, file: !434, line: 545, baseType: !7, size: 32, offset: 5120)
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "dither_intensity", scope: !1015, file: !434, line: 548, baseType: !7, size: 32, offset: 5152)
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "bake_osa", scope: !1015, file: !434, line: 551, baseType: !43, size: 16, offset: 5184)
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "bake_filter", scope: !1015, file: !434, line: 551, baseType: !43, size: 16, offset: 5200)
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "bake_mode", scope: !1015, file: !434, line: 551, baseType: !43, size: 16, offset: 5216)
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "bake_flag", scope: !1015, file: !434, line: 551, baseType: !43, size: 16, offset: 5232)
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "bake_normal_space", scope: !1015, file: !434, line: 552, baseType: !43, size: 16, offset: 5248)
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "bake_quad_split", scope: !1015, file: !434, line: 552, baseType: !43, size: 16, offset: 5264)
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "bake_maxdist", scope: !1015, file: !434, line: 553, baseType: !7, size: 32, offset: 5280)
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "bake_biasdist", scope: !1015, file: !434, line: 553, baseType: !7, size: 32, offset: 5312)
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "bake_samples", scope: !1015, file: !434, line: 554, baseType: !43, size: 16, offset: 5344)
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "bake_pad", scope: !1015, file: !434, line: 554, baseType: !43, size: 16, offset: 5360)
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "bake_user_scale", scope: !1015, file: !434, line: 555, baseType: !7, size: 32, offset: 5376)
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "bake_pad1", scope: !1015, file: !434, line: 555, baseType: !7, size: 32, offset: 5408)
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "pic", scope: !1015, file: !434, line: 558, baseType: !127, size: 8192, offset: 5440)
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "stamp", scope: !1015, file: !434, line: 561, baseType: !8, size: 32, offset: 13632)
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "stamp_font_id", scope: !1015, file: !434, line: 562, baseType: !43, size: 16, offset: 13664)
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !1015, file: !434, line: 562, baseType: !43, size: 16, offset: 13680)
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "stamp_udata", scope: !1015, file: !434, line: 565, baseType: !1252, size: 6144, offset: 13696)
!1252 = !DICompositeType(tag: DW_TAG_array_type, baseType: !28, size: 6144, elements: !1253)
!1253 = !{!1254}
!1254 = !DISubrange(count: 768)
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "fg_stamp", scope: !1015, file: !434, line: 568, baseType: !288, size: 128, offset: 19840)
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "bg_stamp", scope: !1015, file: !434, line: 569, baseType: !288, size: 128, offset: 19968)
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "seq_prev_type", scope: !1015, file: !434, line: 572, baseType: !28, size: 8, offset: 20096)
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "seq_rend_type", scope: !1015, file: !434, line: 573, baseType: !28, size: 8, offset: 20104)
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "seq_flag", scope: !1015, file: !434, line: 574, baseType: !28, size: 8, offset: 20112)
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "pad5", scope: !1015, file: !434, line: 575, baseType: !802, size: 40, offset: 20120)
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_flag", scope: !1015, file: !434, line: 578, baseType: !8, size: 32, offset: 20160)
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_subsurf", scope: !1015, file: !434, line: 579, baseType: !43, size: 16, offset: 20192)
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_shadowsamples", scope: !1015, file: !434, line: 580, baseType: !43, size: 16, offset: 20208)
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_particles", scope: !1015, file: !434, line: 581, baseType: !7, size: 32, offset: 20224)
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_aosss", scope: !1015, file: !434, line: 582, baseType: !7, size: 32, offset: 20256)
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "cineonwhite", scope: !1015, file: !434, line: 585, baseType: !43, size: 16, offset: 20288)
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "cineonblack", scope: !1015, file: !434, line: 585, baseType: !43, size: 16, offset: 20304)
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "cineongamma", scope: !1015, file: !434, line: 586, baseType: !7, size: 32, offset: 20320)
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_preset", scope: !1015, file: !434, line: 589, baseType: !43, size: 16, offset: 20352)
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_depth", scope: !1015, file: !434, line: 589, baseType: !43, size: 16, offset: 20368)
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "rpad3", scope: !1015, file: !434, line: 590, baseType: !8, size: 32, offset: 20384)
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "domeres", scope: !1015, file: !434, line: 593, baseType: !43, size: 16, offset: 20416)
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "domemode", scope: !1015, file: !434, line: 593, baseType: !43, size: 16, offset: 20432)
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "domeangle", scope: !1015, file: !434, line: 594, baseType: !43, size: 16, offset: 20448)
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "dometilt", scope: !1015, file: !434, line: 594, baseType: !43, size: 16, offset: 20464)
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "domeresbuf", scope: !1015, file: !434, line: 595, baseType: !7, size: 32, offset: 20480)
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1015, file: !434, line: 596, baseType: !7, size: 32, offset: 20512)
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "dometext", scope: !1015, file: !434, line: 597, baseType: !1279, size: 64, offset: 20544)
!1279 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1280, size: 64)
!1280 = !DICompositeType(tag: DW_TAG_structure_type, name: "Text", file: !1281, line: 50, flags: DIFlagFwdDecl)
!1281 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_scene.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "line_thickness_mode", scope: !1015, file: !434, line: 600, baseType: !8, size: 32, offset: 20608)
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "unit_line_thickness", scope: !1015, file: !434, line: 601, baseType: !7, size: 32, offset: 20640)
!1284 = !DIDerivedType(tag: DW_TAG_member, name: "engine", scope: !1015, file: !434, line: 604, baseType: !1285, size: 256, offset: 20672)
!1285 = !DICompositeType(tag: DW_TAG_array_type, baseType: !28, size: 256, elements: !320)
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "bake", scope: !1015, file: !434, line: 607, baseType: !1287, size: 10880, offset: 20928)
!1287 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BakeData", file: !434, line: 364, size: 10880, elements: !1288)
!1288 = !{!1289, !1290, !1291, !1292, !1293, !1294, !1295, !1296, !1297, !1298, !1299, !1300, !1301}
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "im_format", scope: !1287, file: !434, line: 365, baseType: !1018, size: 1984)
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "filepath", scope: !1287, file: !434, line: 367, baseType: !127, size: 8192, offset: 1984)
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1287, file: !434, line: 369, baseType: !43, size: 16, offset: 10176)
!1292 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1287, file: !434, line: 369, baseType: !43, size: 16, offset: 10192)
!1293 = !DIDerivedType(tag: DW_TAG_member, name: "margin", scope: !1287, file: !434, line: 370, baseType: !43, size: 16, offset: 10208)
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1287, file: !434, line: 370, baseType: !43, size: 16, offset: 10224)
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "cage_extrusion", scope: !1287, file: !434, line: 372, baseType: !7, size: 32, offset: 10240)
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1287, file: !434, line: 373, baseType: !7, size: 32, offset: 10272)
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "normal_swizzle", scope: !1287, file: !434, line: 375, baseType: !931, size: 24, offset: 10304)
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "normal_space", scope: !1287, file: !434, line: 376, baseType: !28, size: 8, offset: 10328)
!1299 = !DIDerivedType(tag: DW_TAG_member, name: "save_mode", scope: !1287, file: !434, line: 378, baseType: !28, size: 8, offset: 10336)
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1287, file: !434, line: 379, baseType: !931, size: 24, offset: 10344)
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "cage", scope: !1287, file: !434, line: 381, baseType: !155, size: 512, offset: 10368)
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "preview_start_resolution", scope: !1015, file: !434, line: 609, baseType: !8, size: 32, offset: 31808)
!1303 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1015, file: !434, line: 610, baseType: !8, size: 32, offset: 31840)
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "audio", scope: !601, file: !434, line: 1252, baseType: !1305, size: 256, offset: 34112)
!1305 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AudioData", file: !434, line: 158, size: 256, elements: !1306)
!1306 = !{!1307, !1308, !1309, !1310, !1311, !1312, !1313, !1314, !1315}
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "mixrate", scope: !1305, file: !434, line: 159, baseType: !8, size: 32)
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "main", scope: !1305, file: !434, line: 160, baseType: !7, size: 32, offset: 32)
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "speed_of_sound", scope: !1305, file: !434, line: 161, baseType: !7, size: 32, offset: 64)
!1310 = !DIDerivedType(tag: DW_TAG_member, name: "doppler_factor", scope: !1305, file: !434, line: 162, baseType: !7, size: 32, offset: 96)
!1311 = !DIDerivedType(tag: DW_TAG_member, name: "distance_model", scope: !1305, file: !434, line: 163, baseType: !8, size: 32, offset: 128)
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1305, file: !434, line: 164, baseType: !43, size: 16, offset: 160)
!1313 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1305, file: !434, line: 165, baseType: !43, size: 16, offset: 176)
!1314 = !DIDerivedType(tag: DW_TAG_member, name: "volume", scope: !1305, file: !434, line: 166, baseType: !7, size: 32, offset: 192)
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1305, file: !434, line: 167, baseType: !7, size: 32, offset: 224)
!1316 = !DIDerivedType(tag: DW_TAG_member, name: "markers", scope: !601, file: !434, line: 1254, baseType: !77, size: 128, offset: 34368)
!1317 = !DIDerivedType(tag: DW_TAG_member, name: "transform_spaces", scope: !601, file: !434, line: 1255, baseType: !77, size: 128, offset: 34496)
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "sound_scene", scope: !601, file: !434, line: 1257, baseType: !6, size: 64, offset: 34624)
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "sound_scene_handle", scope: !601, file: !434, line: 1258, baseType: !6, size: 64, offset: 34688)
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "sound_scrub_handle", scope: !601, file: !434, line: 1259, baseType: !6, size: 64, offset: 34752)
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "speaker_handles", scope: !601, file: !434, line: 1260, baseType: !6, size: 64, offset: 34816)
!1322 = !DIDerivedType(tag: DW_TAG_member, name: "fps_info", scope: !601, file: !434, line: 1262, baseType: !6, size: 64, offset: 34880)
!1323 = !DIDerivedType(tag: DW_TAG_member, name: "theDag", scope: !601, file: !434, line: 1265, baseType: !1324, size: 64, offset: 34944)
!1324 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1325, size: 64)
!1325 = !DICompositeType(tag: DW_TAG_structure_type, name: "DagForest", file: !434, line: 1265, flags: DIFlagFwdDecl)
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "dagflags", scope: !601, file: !434, line: 1266, baseType: !43, size: 16, offset: 35008)
!1327 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !601, file: !434, line: 1267, baseType: !43, size: 16, offset: 35024)
!1328 = !DIDerivedType(tag: DW_TAG_member, name: "active_keyingset", scope: !601, file: !434, line: 1270, baseType: !8, size: 32, offset: 35040)
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "keyingsets", scope: !601, file: !434, line: 1271, baseType: !77, size: 128, offset: 35072)
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "framing", scope: !601, file: !434, line: 1274, baseType: !1331, size: 128, offset: 35200)
!1331 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameFraming", file: !434, line: 650, size: 128, elements: !1332)
!1332 = !{!1333, !1334, !1335, !1336, !1337}
!1333 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !1331, file: !434, line: 651, baseType: !206, size: 96)
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1331, file: !434, line: 652, baseType: !28, size: 8, offset: 96)
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1331, file: !434, line: 652, baseType: !28, size: 8, offset: 104)
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1331, file: !434, line: 652, baseType: !28, size: 8, offset: 112)
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !1331, file: !434, line: 652, baseType: !28, size: 8, offset: 120)
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "gm", scope: !601, file: !434, line: 1275, baseType: !1339, size: 1472, offset: 35328)
!1339 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameData", file: !434, line: 676, size: 1472, elements: !1340)
!1340 = !{!1341, !1342, !1343, !1344, !1345, !1346, !1347, !1348, !1349, !1350, !1351, !1353, !1363, !1364, !1365, !1366, !1385, !1386, !1387, !1388, !1389, !1390, !1391, !1392, !1393, !1394, !1395, !1396, !1397, !1398, !1399, !1400, !1401, !1402, !1403, !1404}
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "framing", scope: !1339, file: !434, line: 679, baseType: !1331, size: 128)
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "playerflag", scope: !1339, file: !434, line: 680, baseType: !43, size: 16, offset: 128)
!1343 = !DIDerivedType(tag: DW_TAG_member, name: "xplay", scope: !1339, file: !434, line: 680, baseType: !43, size: 16, offset: 144)
!1344 = !DIDerivedType(tag: DW_TAG_member, name: "yplay", scope: !1339, file: !434, line: 680, baseType: !43, size: 16, offset: 160)
!1345 = !DIDerivedType(tag: DW_TAG_member, name: "freqplay", scope: !1339, file: !434, line: 680, baseType: !43, size: 16, offset: 176)
!1346 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !1339, file: !434, line: 681, baseType: !43, size: 16, offset: 192)
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "attrib", scope: !1339, file: !434, line: 681, baseType: !43, size: 16, offset: 208)
!1348 = !DIDerivedType(tag: DW_TAG_member, name: "rt1", scope: !1339, file: !434, line: 681, baseType: !43, size: 16, offset: 224)
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "rt2", scope: !1339, file: !434, line: 681, baseType: !43, size: 16, offset: 240)
!1350 = !DIDerivedType(tag: DW_TAG_member, name: "aasamples", scope: !1339, file: !434, line: 682, baseType: !43, size: 16, offset: 256)
!1351 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !1339, file: !434, line: 682, baseType: !1352, size: 48, offset: 272)
!1352 = !DICompositeType(tag: DW_TAG_array_type, baseType: !43, size: 48, elements: !207)
!1353 = !DIDerivedType(tag: DW_TAG_member, name: "dome", scope: !1339, file: !434, line: 685, baseType: !1354, size: 192, offset: 320)
!1354 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameDome", file: !434, line: 633, size: 192, elements: !1355)
!1355 = !{!1356, !1357, !1358, !1359, !1360, !1361, !1362}
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "res", scope: !1354, file: !434, line: 634, baseType: !43, size: 16)
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1354, file: !434, line: 634, baseType: !43, size: 16, offset: 16)
!1358 = !DIDerivedType(tag: DW_TAG_member, name: "angle", scope: !1354, file: !434, line: 635, baseType: !43, size: 16, offset: 32)
!1359 = !DIDerivedType(tag: DW_TAG_member, name: "tilt", scope: !1354, file: !434, line: 635, baseType: !43, size: 16, offset: 48)
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "resbuf", scope: !1354, file: !434, line: 636, baseType: !7, size: 32, offset: 64)
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1354, file: !434, line: 636, baseType: !7, size: 32, offset: 96)
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "warptext", scope: !1354, file: !434, line: 637, baseType: !1279, size: 64, offset: 128)
!1363 = !DIDerivedType(tag: DW_TAG_member, name: "stereoflag", scope: !1339, file: !434, line: 686, baseType: !43, size: 16, offset: 512)
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "stereomode", scope: !1339, file: !434, line: 686, baseType: !43, size: 16, offset: 528)
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "eyeseparation", scope: !1339, file: !434, line: 687, baseType: !7, size: 32, offset: 544)
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "recastData", scope: !1339, file: !434, line: 688, baseType: !1367, size: 448, offset: 576)
!1367 = !DIDerivedType(tag: DW_TAG_typedef, name: "RecastData", file: !434, line: 674, baseType: !1368)
!1368 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RecastData", file: !434, line: 659, size: 448, elements: !1369)
!1369 = !{!1370, !1371, !1372, !1373, !1374, !1375, !1376, !1377, !1378, !1379, !1380, !1381, !1382, !1383, !1384}
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "cellsize", scope: !1368, file: !434, line: 660, baseType: !7, size: 32)
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "cellheight", scope: !1368, file: !434, line: 661, baseType: !7, size: 32, offset: 32)
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "agentmaxslope", scope: !1368, file: !434, line: 662, baseType: !7, size: 32, offset: 64)
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "agentmaxclimb", scope: !1368, file: !434, line: 663, baseType: !7, size: 32, offset: 96)
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "agentheight", scope: !1368, file: !434, line: 664, baseType: !7, size: 32, offset: 128)
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "agentradius", scope: !1368, file: !434, line: 665, baseType: !7, size: 32, offset: 160)
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "edgemaxlen", scope: !1368, file: !434, line: 666, baseType: !7, size: 32, offset: 192)
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "edgemaxerror", scope: !1368, file: !434, line: 667, baseType: !7, size: 32, offset: 224)
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "regionminsize", scope: !1368, file: !434, line: 668, baseType: !7, size: 32, offset: 256)
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "regionmergesize", scope: !1368, file: !434, line: 669, baseType: !7, size: 32, offset: 288)
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "vertsperpoly", scope: !1368, file: !434, line: 670, baseType: !8, size: 32, offset: 320)
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "detailsampledist", scope: !1368, file: !434, line: 671, baseType: !7, size: 32, offset: 352)
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "detailsamplemaxerror", scope: !1368, file: !434, line: 672, baseType: !7, size: 32, offset: 384)
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1368, file: !434, line: 673, baseType: !43, size: 16, offset: 416)
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1368, file: !434, line: 673, baseType: !43, size: 16, offset: 432)
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "gravity", scope: !1339, file: !434, line: 692, baseType: !7, size: 32, offset: 1024)
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "activityBoxRadius", scope: !1339, file: !434, line: 697, baseType: !7, size: 32, offset: 1056)
!1387 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1339, file: !434, line: 703, baseType: !8, size: 32, offset: 1088)
!1388 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1339, file: !434, line: 704, baseType: !43, size: 16, offset: 1120)
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "matmode", scope: !1339, file: !434, line: 704, baseType: !43, size: 16, offset: 1136)
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "occlusionRes", scope: !1339, file: !434, line: 705, baseType: !43, size: 16, offset: 1152)
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "physicsEngine", scope: !1339, file: !434, line: 706, baseType: !43, size: 16, offset: 1168)
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "exitkey", scope: !1339, file: !434, line: 707, baseType: !43, size: 16, offset: 1184)
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "vsync", scope: !1339, file: !434, line: 708, baseType: !43, size: 16, offset: 1200)
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "ticrate", scope: !1339, file: !434, line: 709, baseType: !43, size: 16, offset: 1216)
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "maxlogicstep", scope: !1339, file: !434, line: 709, baseType: !43, size: 16, offset: 1232)
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "physubstep", scope: !1339, file: !434, line: 709, baseType: !43, size: 16, offset: 1248)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "maxphystep", scope: !1339, file: !434, line: 709, baseType: !43, size: 16, offset: 1264)
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "obstacleSimulation", scope: !1339, file: !434, line: 710, baseType: !43, size: 16, offset: 1280)
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "raster_storage", scope: !1339, file: !434, line: 711, baseType: !43, size: 16, offset: 1296)
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "levelHeight", scope: !1339, file: !434, line: 712, baseType: !7, size: 32, offset: 1312)
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "deactivationtime", scope: !1339, file: !434, line: 713, baseType: !7, size: 32, offset: 1344)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "lineardeactthreshold", scope: !1339, file: !434, line: 713, baseType: !7, size: 32, offset: 1376)
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "angulardeactthreshold", scope: !1339, file: !434, line: 713, baseType: !7, size: 32, offset: 1408)
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1339, file: !434, line: 713, baseType: !7, size: 32, offset: 1440)
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "unit", scope: !601, file: !434, line: 1278, baseType: !1406, size: 64, offset: 36800)
!1406 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "UnitSettings", file: !434, line: 1197, size: 64, elements: !1407)
!1407 = !{!1408, !1409, !1410, !1411}
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "scale_length", scope: !1406, file: !434, line: 1199, baseType: !7, size: 32)
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "system", scope: !1406, file: !434, line: 1200, baseType: !28, size: 8, offset: 32)
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "system_rotation", scope: !1406, file: !434, line: 1201, baseType: !28, size: 8, offset: 40)
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1406, file: !434, line: 1202, baseType: !43, size: 16, offset: 48)
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !601, file: !434, line: 1281, baseType: !432, size: 64, offset: 36864)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "physics_settings", scope: !601, file: !434, line: 1284, baseType: !1414, size: 192, offset: 36928)
!1414 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PhysicsSettings", file: !434, line: 1208, size: 192, elements: !1415)
!1415 = !{!1416, !1417, !1418, !1419}
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "gravity", scope: !1414, file: !434, line: 1209, baseType: !206, size: 96)
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1414, file: !434, line: 1210, baseType: !8, size: 32, offset: 96)
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "quick_cache_step", scope: !1414, file: !434, line: 1210, baseType: !8, size: 32, offset: 128)
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !1414, file: !434, line: 1210, baseType: !8, size: 32, offset: 160)
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "clip", scope: !601, file: !434, line: 1287, baseType: !1421, size: 64, offset: 37120)
!1421 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1422, size: 64)
!1422 = !DICompositeType(tag: DW_TAG_structure_type, name: "MovieClip", file: !434, line: 62, flags: DIFlagFwdDecl)
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "customdata_mask", scope: !601, file: !434, line: 1289, baseType: !575, size: 64, offset: 37184)
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "customdata_mask_modal", scope: !601, file: !434, line: 1290, baseType: !575, size: 64, offset: 37248)
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "view_settings", scope: !601, file: !434, line: 1293, baseType: !1038, size: 1280, offset: 37312)
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "display_settings", scope: !601, file: !434, line: 1294, baseType: !1095, size: 512, offset: 38592)
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "sequencer_colorspace_settings", scope: !601, file: !434, line: 1295, baseType: !863, size: 512, offset: 39104)
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "rigidbody_world", scope: !601, file: !434, line: 1298, baseType: !1429, size: 64, offset: 39616)
!1429 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1430, size: 64)
!1430 = !DICompositeType(tag: DW_TAG_structure_type, name: "RigidBodyWorld", file: !434, line: 1298, flags: DIFlagFwdDecl)
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "framenr", scope: !597, file: !596, line: 53, baseType: !8, size: 32, offset: 64)
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "frames", scope: !597, file: !596, line: 54, baseType: !8, size: 32, offset: 96)
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !597, file: !596, line: 55, baseType: !8, size: 32, offset: 128)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !597, file: !596, line: 55, baseType: !8, size: 32, offset: 160)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "fie_ima", scope: !597, file: !596, line: 56, baseType: !28, size: 8, offset: 192)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "cycl", scope: !597, file: !596, line: 56, baseType: !28, size: 8, offset: 200)
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !597, file: !596, line: 57, baseType: !28, size: 8, offset: 208)
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !597, file: !596, line: 57, baseType: !28, size: 8, offset: 216)
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "multi_index", scope: !597, file: !596, line: 59, baseType: !43, size: 16, offset: 224)
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "layer", scope: !597, file: !596, line: 59, baseType: !43, size: 16, offset: 240)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "pass", scope: !597, file: !596, line: 59, baseType: !43, size: 16, offset: 256)
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !597, file: !596, line: 61, baseType: !43, size: 16, offset: 272)
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !597, file: !596, line: 63, baseType: !8, size: 32, offset: 288)
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "lodlevels", scope: !342, file: !343, line: 293, baseType: !77, size: 128, offset: 11200)
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "currentlod", scope: !342, file: !343, line: 294, baseType: !1446, size: 64, offset: 11328)
!1446 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1447, size: 64)
!1447 = !DIDerivedType(tag: DW_TAG_typedef, name: "LodLevel", file: !343, line: 113, baseType: !1448)
!1448 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "LodLevel", file: !343, line: 108, size: 256, elements: !1449)
!1449 = !{!1450, !1452, !1453, !1454, !1455}
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1448, file: !343, line: 109, baseType: !1451, size: 64)
!1451 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1448, size: 64)
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1448, file: !343, line: 109, baseType: !1451, size: 64, offset: 64)
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !1448, file: !343, line: 110, baseType: !341, size: 64, offset: 128)
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1448, file: !343, line: 111, baseType: !8, size: 32, offset: 192)
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "distance", scope: !1448, file: !343, line: 112, baseType: !7, size: 32, offset: 224)
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "tex", scope: !334, file: !298, line: 61, baseType: !1457, size: 64, offset: 128)
!1457 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1458, size: 64)
!1458 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Tex", file: !298, line: 202, size: 3328, elements: !1459)
!1459 = !{!1460, !1461, !1462, !1463, !1464, !1465, !1466, !1467, !1468, !1469, !1470, !1471, !1472, !1473, !1474, !1475, !1476, !1477, !1478, !1479, !1480, !1481, !1482, !1483, !1484, !1485, !1486, !1487, !1488, !1489, !1490, !1491, !1492, !1493, !1494, !1495, !1496, !1497, !1498, !1499, !1500, !1501, !1502, !1503, !1504, !1505, !1506, !1507, !1508, !1509, !1510, !1511, !1512, !1513, !1514, !1515, !1516, !1542, !1543, !1572, !1592, !1600, !1601}
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1458, file: !298, line: 203, baseType: !108, size: 960)
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !1458, file: !298, line: 204, baseType: !170, size: 64, offset: 960)
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "noisesize", scope: !1458, file: !298, line: 206, baseType: !7, size: 32, offset: 1024)
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "turbul", scope: !1458, file: !298, line: 206, baseType: !7, size: 32, offset: 1056)
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "bright", scope: !1458, file: !298, line: 207, baseType: !7, size: 32, offset: 1088)
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "contrast", scope: !1458, file: !298, line: 207, baseType: !7, size: 32, offset: 1120)
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "saturation", scope: !1458, file: !298, line: 207, baseType: !7, size: 32, offset: 1152)
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "rfac", scope: !1458, file: !298, line: 207, baseType: !7, size: 32, offset: 1184)
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "gfac", scope: !1458, file: !298, line: 207, baseType: !7, size: 32, offset: 1216)
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "bfac", scope: !1458, file: !298, line: 207, baseType: !7, size: 32, offset: 1248)
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "filtersize", scope: !1458, file: !298, line: 208, baseType: !7, size: 32, offset: 1280)
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1458, file: !298, line: 208, baseType: !7, size: 32, offset: 1312)
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "mg_H", scope: !1458, file: !298, line: 211, baseType: !7, size: 32, offset: 1344)
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "mg_lacunarity", scope: !1458, file: !298, line: 211, baseType: !7, size: 32, offset: 1376)
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "mg_octaves", scope: !1458, file: !298, line: 211, baseType: !7, size: 32, offset: 1408)
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "mg_offset", scope: !1458, file: !298, line: 211, baseType: !7, size: 32, offset: 1440)
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "mg_gain", scope: !1458, file: !298, line: 211, baseType: !7, size: 32, offset: 1472)
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "dist_amount", scope: !1458, file: !298, line: 214, baseType: !7, size: 32, offset: 1504)
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "ns_outscale", scope: !1458, file: !298, line: 214, baseType: !7, size: 32, offset: 1536)
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "vn_w1", scope: !1458, file: !298, line: 217, baseType: !7, size: 32, offset: 1568)
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "vn_w2", scope: !1458, file: !298, line: 218, baseType: !7, size: 32, offset: 1600)
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "vn_w3", scope: !1458, file: !298, line: 219, baseType: !7, size: 32, offset: 1632)
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "vn_w4", scope: !1458, file: !298, line: 220, baseType: !7, size: 32, offset: 1664)
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "vn_mexp", scope: !1458, file: !298, line: 221, baseType: !7, size: 32, offset: 1696)
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "vn_distm", scope: !1458, file: !298, line: 222, baseType: !43, size: 16, offset: 1728)
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "vn_coltype", scope: !1458, file: !298, line: 222, baseType: !43, size: 16, offset: 1744)
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "noisedepth", scope: !1458, file: !298, line: 224, baseType: !43, size: 16, offset: 1760)
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "noisetype", scope: !1458, file: !298, line: 224, baseType: !43, size: 16, offset: 1776)
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "noisebasis", scope: !1458, file: !298, line: 227, baseType: !43, size: 16, offset: 1792)
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "noisebasis2", scope: !1458, file: !298, line: 227, baseType: !43, size: 16, offset: 1808)
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "imaflag", scope: !1458, file: !298, line: 229, baseType: !43, size: 16, offset: 1824)
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1458, file: !298, line: 229, baseType: !43, size: 16, offset: 1840)
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1458, file: !298, line: 230, baseType: !43, size: 16, offset: 1856)
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "stype", scope: !1458, file: !298, line: 230, baseType: !43, size: 16, offset: 1872)
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "cropxmin", scope: !1458, file: !298, line: 232, baseType: !7, size: 32, offset: 1888)
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "cropymin", scope: !1458, file: !298, line: 232, baseType: !7, size: 32, offset: 1920)
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "cropxmax", scope: !1458, file: !298, line: 232, baseType: !7, size: 32, offset: 1952)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "cropymax", scope: !1458, file: !298, line: 232, baseType: !7, size: 32, offset: 1984)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "texfilter", scope: !1458, file: !298, line: 233, baseType: !8, size: 32, offset: 2016)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "afmax", scope: !1458, file: !298, line: 234, baseType: !8, size: 32, offset: 2048)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "xrepeat", scope: !1458, file: !298, line: 235, baseType: !43, size: 16, offset: 2080)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "yrepeat", scope: !1458, file: !298, line: 235, baseType: !43, size: 16, offset: 2096)
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "extend", scope: !1458, file: !298, line: 236, baseType: !43, size: 16, offset: 2112)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "fie_ima", scope: !1458, file: !298, line: 239, baseType: !43, size: 16, offset: 2128)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !1458, file: !298, line: 240, baseType: !8, size: 32, offset: 2144)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "frames", scope: !1458, file: !298, line: 241, baseType: !8, size: 32, offset: 2176)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1458, file: !298, line: 241, baseType: !8, size: 32, offset: 2208)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !1458, file: !298, line: 241, baseType: !8, size: 32, offset: 2240)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "checkerdist", scope: !1458, file: !298, line: 243, baseType: !7, size: 32, offset: 2272)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "nabla", scope: !1458, file: !298, line: 243, baseType: !7, size: 32, offset: 2304)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1458, file: !298, line: 244, baseType: !7, size: 32, offset: 2336)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "iuser", scope: !1458, file: !298, line: 246, baseType: !597, size: 320, offset: 2368)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !1458, file: !298, line: 248, baseType: !703, size: 64, offset: 2688)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !1458, file: !298, line: 249, baseType: !362, size: 64, offset: 2752)
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "ima", scope: !1458, file: !298, line: 250, baseType: !817, size: 64, offset: 2816)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "coba", scope: !1458, file: !298, line: 251, baseType: !296, size: 64, offset: 2880)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "env", scope: !1458, file: !298, line: 252, baseType: !1517, size: 64, offset: 2944)
!1517 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1518, size: 64)
!1518 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "EnvMap", file: !298, line: 122, size: 1600, elements: !1519)
!1519 = !{!1520, !1521, !1522, !1526, !1527, !1530, !1531, !1532, !1533, !1534, !1535, !1536, !1537, !1538, !1539, !1540, !1541}
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !1518, file: !298, line: 123, baseType: !341, size: 64)
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "ima", scope: !1518, file: !298, line: 124, baseType: !817, size: 64, offset: 64)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "cube", scope: !1518, file: !298, line: 125, baseType: !1523, size: 384, offset: 128)
!1523 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1524, size: 384, elements: !1035)
!1524 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1525, size: 64)
!1525 = !DICompositeType(tag: DW_TAG_structure_type, name: "ImBuf", file: !864, line: 136, flags: DIFlagFwdDecl)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "imat", scope: !1518, file: !298, line: 126, baseType: !478, size: 512, offset: 512)
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "obimat", scope: !1518, file: !298, line: 127, baseType: !1528, size: 288, offset: 1024)
!1528 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 288, elements: !1529)
!1529 = !{!208, !208}
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1518, file: !298, line: 128, baseType: !43, size: 16, offset: 1312)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "stype", scope: !1518, file: !298, line: 128, baseType: !43, size: 16, offset: 1328)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "clipsta", scope: !1518, file: !298, line: 129, baseType: !7, size: 32, offset: 1344)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "clipend", scope: !1518, file: !298, line: 129, baseType: !7, size: 32, offset: 1376)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "viewscale", scope: !1518, file: !298, line: 130, baseType: !7, size: 32, offset: 1408)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "notlay", scope: !1518, file: !298, line: 131, baseType: !96, size: 32, offset: 1440)
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "cuberes", scope: !1518, file: !298, line: 132, baseType: !43, size: 16, offset: 1472)
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !1518, file: !298, line: 132, baseType: !43, size: 16, offset: 1488)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !1518, file: !298, line: 133, baseType: !8, size: 32, offset: 1504)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "lastframe", scope: !1518, file: !298, line: 133, baseType: !8, size: 32, offset: 1536)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !1518, file: !298, line: 134, baseType: !43, size: 16, offset: 1568)
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "lastsize", scope: !1518, file: !298, line: 134, baseType: !43, size: 16, offset: 1584)
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "preview", scope: !1458, file: !298, line: 253, baseType: !687, size: 64, offset: 3008)
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "pd", scope: !1458, file: !298, line: 254, baseType: !1544, size: 64, offset: 3072)
!1544 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1545, size: 64)
!1545 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PointDensity", file: !298, line: 137, size: 832, elements: !1546)
!1546 = !{!1547, !1548, !1549, !1550, !1551, !1552, !1553, !1554, !1555, !1556, !1557, !1558, !1559, !1560, !1561, !1562, !1563, !1564, !1565, !1566, !1567, !1568, !1569, !1570, !1571}
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1545, file: !298, line: 138, baseType: !43, size: 16)
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "falloff_type", scope: !1545, file: !298, line: 140, baseType: !43, size: 16, offset: 16)
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "falloff_softness", scope: !1545, file: !298, line: 141, baseType: !7, size: 32, offset: 32)
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "radius", scope: !1545, file: !298, line: 142, baseType: !7, size: 32, offset: 64)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !1545, file: !298, line: 143, baseType: !43, size: 16, offset: 96)
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "color_source", scope: !1545, file: !298, line: 144, baseType: !43, size: 16, offset: 112)
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "totpoints", scope: !1545, file: !298, line: 145, baseType: !8, size: 32, offset: 128)
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "pdpad", scope: !1545, file: !298, line: 147, baseType: !8, size: 32, offset: 160)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !1545, file: !298, line: 149, baseType: !341, size: 64, offset: 192)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "psys", scope: !1545, file: !298, line: 150, baseType: !8, size: 32, offset: 256)
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "psys_cache_space", scope: !1545, file: !298, line: 151, baseType: !43, size: 16, offset: 288)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "ob_cache_space", scope: !1545, file: !298, line: 152, baseType: !43, size: 16, offset: 304)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "point_tree", scope: !1545, file: !298, line: 154, baseType: !6, size: 64, offset: 320)
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "point_data", scope: !1545, file: !298, line: 155, baseType: !63, size: 64, offset: 384)
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "noise_size", scope: !1545, file: !298, line: 157, baseType: !7, size: 32, offset: 448)
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "noise_depth", scope: !1545, file: !298, line: 158, baseType: !43, size: 16, offset: 480)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "noise_influence", scope: !1545, file: !298, line: 159, baseType: !43, size: 16, offset: 496)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "noise_basis", scope: !1545, file: !298, line: 160, baseType: !43, size: 16, offset: 512)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "pdpad3", scope: !1545, file: !298, line: 161, baseType: !1352, size: 48, offset: 528)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "noise_fac", scope: !1545, file: !298, line: 162, baseType: !7, size: 32, offset: 576)
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "speed_scale", scope: !1545, file: !298, line: 164, baseType: !7, size: 32, offset: 608)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "falloff_speed_scale", scope: !1545, file: !298, line: 164, baseType: !7, size: 32, offset: 640)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "pdpad2", scope: !1545, file: !298, line: 164, baseType: !7, size: 32, offset: 672)
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "coba", scope: !1545, file: !298, line: 165, baseType: !296, size: 64, offset: 704)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "falloff_curve", scope: !1545, file: !298, line: 167, baseType: !1048, size: 64, offset: 768)
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "vd", scope: !1458, file: !298, line: 255, baseType: !1573, size: 64, offset: 3136)
!1573 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1574, size: 64)
!1574 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VoxelData", file: !298, line: 170, size: 8704, elements: !1575)
!1575 = !{!1576, !1577, !1578, !1579, !1580, !1581, !1582, !1583, !1584, !1585, !1586, !1587, !1588, !1589, !1590, !1591}
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "resol", scope: !1574, file: !298, line: 171, baseType: !776, size: 96)
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "interp_type", scope: !1574, file: !298, line: 172, baseType: !8, size: 32, offset: 96)
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "file_format", scope: !1574, file: !298, line: 173, baseType: !43, size: 16, offset: 128)
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1574, file: !298, line: 174, baseType: !43, size: 16, offset: 144)
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "extend", scope: !1574, file: !298, line: 175, baseType: !43, size: 16, offset: 160)
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "smoked_type", scope: !1574, file: !298, line: 176, baseType: !43, size: 16, offset: 176)
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "data_type", scope: !1574, file: !298, line: 177, baseType: !43, size: 16, offset: 192)
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1574, file: !298, line: 178, baseType: !43, size: 16, offset: 208)
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "_pad", scope: !1574, file: !298, line: 179, baseType: !8, size: 32, offset: 224)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !1574, file: !298, line: 181, baseType: !341, size: 64, offset: 256)
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "int_multiplier", scope: !1574, file: !298, line: 182, baseType: !7, size: 32, offset: 320)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "still_frame", scope: !1574, file: !298, line: 183, baseType: !8, size: 32, offset: 352)
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "source_path", scope: !1574, file: !298, line: 184, baseType: !127, size: 8192, offset: 384)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "dataset", scope: !1574, file: !298, line: 187, baseType: !63, size: 64, offset: 8576)
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "cachedframe", scope: !1574, file: !298, line: 188, baseType: !8, size: 32, offset: 8640)
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !1574, file: !298, line: 189, baseType: !8, size: 32, offset: 8672)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "ot", scope: !1458, file: !298, line: 256, baseType: !1593, size: 64, offset: 3200)
!1593 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1594, size: 64)
!1594 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "OceanTex", file: !298, line: 193, size: 640, elements: !1595)
!1595 = !{!1596, !1597, !1598, !1599}
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !1594, file: !298, line: 194, baseType: !341, size: 64)
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "oceanmod", scope: !1594, file: !298, line: 195, baseType: !155, size: 512, offset: 64)
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "output", scope: !1594, file: !298, line: 197, baseType: !8, size: 32, offset: 576)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1594, file: !298, line: 198, baseType: !8, size: 32, offset: 608)
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "use_nodes", scope: !1458, file: !298, line: 258, baseType: !28, size: 8, offset: 3264)
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1458, file: !298, line: 259, baseType: !870, size: 56, offset: 3272)
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "uvname", scope: !334, file: !298, line: 62, baseType: !155, size: 512, offset: 192)
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "projx", scope: !334, file: !298, line: 64, baseType: !28, size: 8, offset: 704)
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "projy", scope: !334, file: !298, line: 64, baseType: !28, size: 8, offset: 712)
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "projz", scope: !334, file: !298, line: 64, baseType: !28, size: 8, offset: 720)
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "mapping", scope: !334, file: !298, line: 64, baseType: !28, size: 8, offset: 728)
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "ofs", scope: !334, file: !298, line: 65, baseType: !206, size: 96, offset: 736)
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !334, file: !298, line: 65, baseType: !206, size: 96, offset: 832)
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "rot", scope: !334, file: !298, line: 65, baseType: !7, size: 32, offset: 928)
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "texflag", scope: !334, file: !298, line: 67, baseType: !43, size: 16, offset: 960)
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "colormodel", scope: !334, file: !298, line: 67, baseType: !43, size: 16, offset: 976)
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "pmapto", scope: !334, file: !298, line: 67, baseType: !43, size: 16, offset: 992)
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "pmaptoneg", scope: !334, file: !298, line: 67, baseType: !43, size: 16, offset: 1008)
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "normapspace", scope: !334, file: !298, line: 68, baseType: !43, size: 16, offset: 1024)
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "which_output", scope: !334, file: !298, line: 68, baseType: !43, size: 16, offset: 1040)
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "brush_map_mode", scope: !334, file: !298, line: 69, baseType: !28, size: 8, offset: 1056)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !334, file: !298, line: 69, baseType: !870, size: 56, offset: 1064)
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !334, file: !298, line: 70, baseType: !7, size: 32, offset: 1120)
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !334, file: !298, line: 70, baseType: !7, size: 32, offset: 1152)
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !334, file: !298, line: 70, baseType: !7, size: 32, offset: 1184)
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "k", scope: !334, file: !298, line: 70, baseType: !7, size: 32, offset: 1216)
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "def_var", scope: !334, file: !298, line: 71, baseType: !7, size: 32, offset: 1248)
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !334, file: !298, line: 71, baseType: !7, size: 32, offset: 1280)
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "colfac", scope: !334, file: !298, line: 74, baseType: !7, size: 32, offset: 1312)
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "varfac", scope: !334, file: !298, line: 74, baseType: !7, size: 32, offset: 1344)
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "norfac", scope: !334, file: !298, line: 77, baseType: !7, size: 32, offset: 1376)
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "dispfac", scope: !334, file: !298, line: 77, baseType: !7, size: 32, offset: 1408)
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "warpfac", scope: !334, file: !298, line: 77, baseType: !7, size: 32, offset: 1440)
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "colspecfac", scope: !334, file: !298, line: 78, baseType: !7, size: 32, offset: 1472)
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "mirrfac", scope: !334, file: !298, line: 78, baseType: !7, size: 32, offset: 1504)
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "alphafac", scope: !334, file: !298, line: 78, baseType: !7, size: 32, offset: 1536)
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "difffac", scope: !334, file: !298, line: 79, baseType: !7, size: 32, offset: 1568)
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "specfac", scope: !334, file: !298, line: 79, baseType: !7, size: 32, offset: 1600)
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "emitfac", scope: !334, file: !298, line: 79, baseType: !7, size: 32, offset: 1632)
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "hardfac", scope: !334, file: !298, line: 79, baseType: !7, size: 32, offset: 1664)
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "raymirrfac", scope: !334, file: !298, line: 80, baseType: !7, size: 32, offset: 1696)
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "translfac", scope: !334, file: !298, line: 80, baseType: !7, size: 32, offset: 1728)
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "ambfac", scope: !334, file: !298, line: 80, baseType: !7, size: 32, offset: 1760)
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "colemitfac", scope: !334, file: !298, line: 81, baseType: !7, size: 32, offset: 1792)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "colreflfac", scope: !334, file: !298, line: 81, baseType: !7, size: 32, offset: 1824)
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "coltransfac", scope: !334, file: !298, line: 81, baseType: !7, size: 32, offset: 1856)
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "densfac", scope: !334, file: !298, line: 82, baseType: !7, size: 32, offset: 1888)
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "scatterfac", scope: !334, file: !298, line: 82, baseType: !7, size: 32, offset: 1920)
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "reflfac", scope: !334, file: !298, line: 82, baseType: !7, size: 32, offset: 1952)
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "timefac", scope: !334, file: !298, line: 85, baseType: !7, size: 32, offset: 1984)
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "lengthfac", scope: !334, file: !298, line: 85, baseType: !7, size: 32, offset: 2016)
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "clumpfac", scope: !334, file: !298, line: 85, baseType: !7, size: 32, offset: 2048)
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "dampfac", scope: !334, file: !298, line: 85, baseType: !7, size: 32, offset: 2080)
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "kinkfac", scope: !334, file: !298, line: 86, baseType: !7, size: 32, offset: 2112)
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "roughfac", scope: !334, file: !298, line: 86, baseType: !7, size: 32, offset: 2144)
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "padensfac", scope: !334, file: !298, line: 86, baseType: !7, size: 32, offset: 2176)
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "gravityfac", scope: !334, file: !298, line: 86, baseType: !7, size: 32, offset: 2208)
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "lifefac", scope: !334, file: !298, line: 87, baseType: !7, size: 32, offset: 2240)
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "sizefac", scope: !334, file: !298, line: 87, baseType: !7, size: 32, offset: 2272)
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "ivelfac", scope: !334, file: !298, line: 87, baseType: !7, size: 32, offset: 2304)
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "fieldfac", scope: !334, file: !298, line: 87, baseType: !7, size: 32, offset: 2336)
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "shadowfac", scope: !334, file: !298, line: 90, baseType: !7, size: 32, offset: 2368)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "zenupfac", scope: !334, file: !298, line: 93, baseType: !7, size: 32, offset: 2400)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "zendownfac", scope: !334, file: !298, line: 93, baseType: !7, size: 32, offset: 2432)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "blendfac", scope: !334, file: !298, line: 93, baseType: !7, size: 32, offset: 2464)
!1661 = !{!1662}
!1662 = !DISubrange(count: 18)
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !104, file: !105, line: 168, baseType: !703, size: 64, offset: 6144)
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !104, file: !105, line: 169, baseType: !362, size: 64, offset: 6208)
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !104, file: !105, line: 170, baseType: !552, size: 64, offset: 6272)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "preview", scope: !104, file: !105, line: 171, baseType: !687, size: 64, offset: 6336)
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "friction", scope: !104, file: !105, line: 174, baseType: !7, size: 32, offset: 6400)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "fh", scope: !104, file: !105, line: 174, baseType: !7, size: 32, offset: 6432)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "reflect", scope: !104, file: !105, line: 174, baseType: !7, size: 32, offset: 6464)
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "fhdist", scope: !104, file: !105, line: 175, baseType: !7, size: 32, offset: 6496)
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "xyfrict", scope: !104, file: !105, line: 175, baseType: !7, size: 32, offset: 6528)
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "dynamode", scope: !104, file: !105, line: 176, baseType: !43, size: 16, offset: 6560)
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !104, file: !105, line: 176, baseType: !43, size: 16, offset: 6576)
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "sss_radius", scope: !104, file: !105, line: 179, baseType: !206, size: 96, offset: 6592)
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "sss_col", scope: !104, file: !105, line: 179, baseType: !206, size: 96, offset: 6688)
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "sss_error", scope: !104, file: !105, line: 180, baseType: !7, size: 32, offset: 6784)
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "sss_scale", scope: !104, file: !105, line: 180, baseType: !7, size: 32, offset: 6816)
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "sss_ior", scope: !104, file: !105, line: 180, baseType: !7, size: 32, offset: 6848)
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "sss_colfac", scope: !104, file: !105, line: 181, baseType: !7, size: 32, offset: 6880)
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "sss_texfac", scope: !104, file: !105, line: 181, baseType: !7, size: 32, offset: 6912)
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "sss_front", scope: !104, file: !105, line: 182, baseType: !7, size: 32, offset: 6944)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "sss_back", scope: !104, file: !105, line: 182, baseType: !7, size: 32, offset: 6976)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "sss_flag", scope: !104, file: !105, line: 183, baseType: !43, size: 16, offset: 7008)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "sss_preset", scope: !104, file: !105, line: 183, baseType: !43, size: 16, offset: 7024)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "mapto_textured", scope: !104, file: !105, line: 185, baseType: !8, size: 32, offset: 7040)
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "shadowonly_flag", scope: !104, file: !105, line: 186, baseType: !43, size: 16, offset: 7072)
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !104, file: !105, line: 187, baseType: !43, size: 16, offset: 7088)
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "line_col", scope: !104, file: !105, line: 190, baseType: !288, size: 128, offset: 7104)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "line_priority", scope: !104, file: !105, line: 191, baseType: !43, size: 16, offset: 7232)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "vcol_alpha", scope: !104, file: !105, line: 192, baseType: !43, size: 16, offset: 7248)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "paint_active_slot", scope: !104, file: !105, line: 195, baseType: !43, size: 16, offset: 7264)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "paint_clone_slot", scope: !104, file: !105, line: 196, baseType: !43, size: 16, offset: 7280)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "tot_slots", scope: !104, file: !105, line: 197, baseType: !43, size: 16, offset: 7296)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !104, file: !105, line: 198, baseType: !1352, size: 48, offset: 7312)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "texpaintslot", scope: !104, file: !105, line: 200, baseType: !1696, size: 64, offset: 7360)
!1696 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1697, size: 64)
!1697 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "TexPaintSlot", file: !105, line: 86, size: 192, elements: !1698)
!1698 = !{!1699, !1700, !1701, !1702}
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "ima", scope: !1697, file: !105, line: 87, baseType: !817, size: 64)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "uvname", scope: !1697, file: !105, line: 88, baseType: !27, size: 64, offset: 64)
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1697, file: !105, line: 89, baseType: !8, size: 32, offset: 128)
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1697, file: !105, line: 90, baseType: !8, size: 32, offset: 160)
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "gpumaterial", scope: !104, file: !105, line: 202, baseType: !77, size: 128, offset: 7424)
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "light_override", scope: !89, file: !31, line: 94, baseType: !552, size: 64, offset: 1024)
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "rectf", scope: !89, file: !31, line: 96, baseType: !63, size: 64, offset: 1088)
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "acolrect", scope: !89, file: !31, line: 97, baseType: !63, size: 64, offset: 1152)
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "scolrect", scope: !89, file: !31, line: 98, baseType: !63, size: 64, offset: 1216)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "display_buffer", scope: !89, file: !31, line: 99, baseType: !26, size: 64, offset: 1280)
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "rectx", scope: !89, file: !31, line: 101, baseType: !8, size: 32, offset: 1344)
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "recty", scope: !89, file: !31, line: 101, baseType: !8, size: 32, offset: 1376)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "exrhandle", scope: !89, file: !31, line: 104, baseType: !6, size: 64, offset: 1408)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "passes", scope: !89, file: !31, line: 106, baseType: !77, size: 128, offset: 1472)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "do_exr_tile", scope: !52, file: !31, line: 137, baseType: !8, size: 32, offset: 960)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "framenr", scope: !52, file: !31, line: 140, baseType: !8, size: 32, offset: 992)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "have_combined", scope: !52, file: !31, line: 143, baseType: !8, size: 32, offset: 1024)
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "text", scope: !52, file: !31, line: 146, baseType: !27, size: 64, offset: 1088)
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "pushedresult", scope: !32, file: !16, line: 141, baseType: !50, size: 64, offset: 960)
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "fullresult", scope: !32, file: !16, line: 143, baseType: !77, size: 128, offset: 1024)
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "resultmutex", scope: !32, file: !16, line: 147, baseType: !1720, size: 32, offset: 1152)
!1720 = !DIDerivedType(tag: DW_TAG_typedef, name: "ThreadRWMutex", file: !1721, line: 148, baseType: !1722)
!1721 = !DIFile(filename: "blender/source/blender/blenlib/BLI_threads.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1722 = !DIDerivedType(tag: DW_TAG_typedef, name: "spec_null_rwlock_t", file: !1723, line: 10, baseType: !1724)
!1723 = !DIFile(filename: "include/spec_pthread.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1724 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !576, line: 26, baseType: !1725)
!1725 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint32_t", file: !578, line: 42, baseType: !96)
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "winx", scope: !32, file: !16, line: 150, baseType: !8, size: 32, offset: 1184)
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "winy", scope: !32, file: !16, line: 150, baseType: !8, size: 32, offset: 1216)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "disprect", scope: !32, file: !16, line: 152, baseType: !66, size: 128, offset: 1248)
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "viewplane", scope: !32, file: !16, line: 153, baseType: !1056, size: 128, offset: 1376)
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "viewdx", scope: !32, file: !16, line: 154, baseType: !7, size: 32, offset: 1504)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "viewdy", scope: !32, file: !16, line: 154, baseType: !7, size: 32, offset: 1536)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "clipcrop", scope: !32, file: !16, line: 155, baseType: !7, size: 32, offset: 1568)
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "rectx", scope: !32, file: !16, line: 158, baseType: !8, size: 32, offset: 1600)
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "recty", scope: !32, file: !16, line: 158, baseType: !8, size: 32, offset: 1632)
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "partx", scope: !32, file: !16, line: 162, baseType: !8, size: 32, offset: 1664)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "party", scope: !32, file: !16, line: 162, baseType: !8, size: 32, offset: 1696)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "ycor", scope: !32, file: !16, line: 165, baseType: !7, size: 32, offset: 1728)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "panophi", scope: !32, file: !16, line: 167, baseType: !7, size: 32, offset: 1760)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "panosi", scope: !32, file: !16, line: 167, baseType: !7, size: 32, offset: 1792)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "panoco", scope: !32, file: !16, line: 167, baseType: !7, size: 32, offset: 1824)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "panodxp", scope: !32, file: !16, line: 167, baseType: !7, size: 32, offset: 1856)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "panodxv", scope: !32, file: !16, line: 167, baseType: !7, size: 32, offset: 1888)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "grvec", scope: !32, file: !16, line: 170, baseType: !206, size: 96, offset: 1920)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "imat", scope: !32, file: !16, line: 171, baseType: !1528, size: 288, offset: 2016)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "viewmat", scope: !32, file: !16, line: 172, baseType: !478, size: 512, offset: 2304)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "viewinv", scope: !32, file: !16, line: 172, baseType: !478, size: 512, offset: 2816)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "viewmat_orig", scope: !32, file: !16, line: 173, baseType: !478, size: 512, offset: 3328)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "winmat", scope: !32, file: !16, line: 174, baseType: !478, size: 512, offset: 3840)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "clipsta", scope: !32, file: !16, line: 177, baseType: !7, size: 32, offset: 4352)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "clipend", scope: !32, file: !16, line: 178, baseType: !7, size: 32, offset: 4384)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "samples", scope: !32, file: !16, line: 181, baseType: !1752, size: 64, offset: 4416)
!1752 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1753, size: 64)
!1753 = !DIDerivedType(tag: DW_TAG_typedef, name: "SampleTables", file: !16, line: 77, baseType: !1754)
!1754 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SampleTables", file: !16, line: 72, size: 3776, elements: !1755)
!1755 = !{!1756, !1760, !1764, !1765, !1769}
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "centLut", scope: !1754, file: !16, line: 73, baseType: !1757, size: 512)
!1757 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 512, elements: !1758)
!1758 = !{!1759}
!1759 = !DISubrange(count: 16)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "fmask1", scope: !1754, file: !16, line: 74, baseType: !1761, size: 576, offset: 512)
!1761 = !DICompositeType(tag: DW_TAG_array_type, baseType: !63, size: 576, elements: !1762)
!1762 = !{!1763}
!1763 = !DISubrange(count: 9)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "fmask2", scope: !1754, file: !16, line: 74, baseType: !1761, size: 576, offset: 1088)
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "cmask", scope: !1754, file: !16, line: 75, baseType: !1766, size: 2048, offset: 1664)
!1766 = !DICompositeType(tag: DW_TAG_array_type, baseType: !28, size: 2048, elements: !1767)
!1767 = !{!1768}
!1768 = !DISubrange(count: 256)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "centmask", scope: !1754, file: !16, line: 75, baseType: !27, size: 64, offset: 3712)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "jit", scope: !32, file: !16, line: 182, baseType: !1771, size: 2048, offset: 4480)
!1771 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 2048, elements: !1772)
!1772 = !{!321, !12}
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "mblur_jit", scope: !32, file: !16, line: 183, baseType: !1771, size: 2048, offset: 6528)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "qmcsamplers", scope: !32, file: !16, line: 184, baseType: !585, size: 64, offset: 8576)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "shadowsamplenr", scope: !32, file: !16, line: 187, baseType: !1776, size: 32, offset: 8640)
!1776 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 32, elements: !307)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "main", scope: !32, file: !16, line: 190, baseType: !1778, size: 64, offset: 8704)
!1778 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1779, size: 64)
!1779 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Main", file: !1780, line: 53, size: 15232, elements: !1781)
!1780 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_main.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1781 = !{!1782, !1783, !1784, !1785, !1786, !1787, !1788, !1789, !1790, !1792, !1793, !1794, !1795, !1796, !1797, !1798, !1799, !1800, !1801, !1802, !1803, !1804, !1805, !1806, !1807, !1808, !1809, !1810, !1811, !1812, !1813, !1814, !1815, !1816, !1817, !1818, !1819, !1820, !1821, !1822, !1823, !1824, !1825, !1826, !1827, !1828, !1829, !1832}
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1779, file: !1780, line: 54, baseType: !1778, size: 64)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1779, file: !1780, line: 54, baseType: !1778, size: 64, offset: 64)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1779, file: !1780, line: 55, baseType: !127, size: 8192, offset: 128)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "versionfile", scope: !1779, file: !1780, line: 56, baseType: !43, size: 16, offset: 8320)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "subversionfile", scope: !1779, file: !1780, line: 56, baseType: !43, size: 16, offset: 8336)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "minversionfile", scope: !1779, file: !1780, line: 57, baseType: !43, size: 16, offset: 8352)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "minsubversionfile", scope: !1779, file: !1780, line: 57, baseType: !43, size: 16, offset: 8368)
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "build_commit_timestamp", scope: !1779, file: !1780, line: 58, baseType: !575, size: 64, offset: 8384)
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "build_hash", scope: !1779, file: !1780, line: 59, baseType: !1791, size: 128, offset: 8448)
!1791 = !DICompositeType(tag: DW_TAG_array_type, baseType: !28, size: 128, elements: !1758)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "recovered", scope: !1779, file: !1780, line: 60, baseType: !43, size: 16, offset: 8576)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "curlib", scope: !1779, file: !1780, line: 62, baseType: !117, size: 64, offset: 8640)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !1779, file: !1780, line: 63, baseType: !77, size: 128, offset: 8704)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "library", scope: !1779, file: !1780, line: 64, baseType: !77, size: 128, offset: 8832)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !1779, file: !1780, line: 65, baseType: !77, size: 128, offset: 8960)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "mesh", scope: !1779, file: !1780, line: 66, baseType: !77, size: 128, offset: 9088)
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "curve", scope: !1779, file: !1780, line: 67, baseType: !77, size: 128, offset: 9216)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "mball", scope: !1779, file: !1780, line: 68, baseType: !77, size: 128, offset: 9344)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !1779, file: !1780, line: 69, baseType: !77, size: 128, offset: 9472)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "tex", scope: !1779, file: !1780, line: 70, baseType: !77, size: 128, offset: 9600)
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "image", scope: !1779, file: !1780, line: 71, baseType: !77, size: 128, offset: 9728)
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "latt", scope: !1779, file: !1780, line: 72, baseType: !77, size: 128, offset: 9856)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "lamp", scope: !1779, file: !1780, line: 73, baseType: !77, size: 128, offset: 9984)
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "camera", scope: !1779, file: !1780, line: 74, baseType: !77, size: 128, offset: 10112)
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !1779, file: !1780, line: 75, baseType: !77, size: 128, offset: 10240)
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !1779, file: !1780, line: 76, baseType: !77, size: 128, offset: 10368)
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "world", scope: !1779, file: !1780, line: 77, baseType: !77, size: 128, offset: 10496)
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "screen", scope: !1779, file: !1780, line: 78, baseType: !77, size: 128, offset: 10624)
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "script", scope: !1779, file: !1780, line: 79, baseType: !77, size: 128, offset: 10752)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "vfont", scope: !1779, file: !1780, line: 80, baseType: !77, size: 128, offset: 10880)
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "text", scope: !1779, file: !1780, line: 81, baseType: !77, size: 128, offset: 11008)
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "speaker", scope: !1779, file: !1780, line: 82, baseType: !77, size: 128, offset: 11136)
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "sound", scope: !1779, file: !1780, line: 83, baseType: !77, size: 128, offset: 11264)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !1779, file: !1780, line: 84, baseType: !77, size: 128, offset: 11392)
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "armature", scope: !1779, file: !1780, line: 85, baseType: !77, size: 128, offset: 11520)
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !1779, file: !1780, line: 86, baseType: !77, size: 128, offset: 11648)
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !1779, file: !1780, line: 87, baseType: !77, size: 128, offset: 11776)
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "brush", scope: !1779, file: !1780, line: 88, baseType: !77, size: 128, offset: 11904)
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "particle", scope: !1779, file: !1780, line: 89, baseType: !77, size: 128, offset: 12032)
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "palettes", scope: !1779, file: !1780, line: 90, baseType: !77, size: 128, offset: 12160)
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "paintcurves", scope: !1779, file: !1780, line: 91, baseType: !77, size: 128, offset: 12288)
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "wm", scope: !1779, file: !1780, line: 92, baseType: !77, size: 128, offset: 12416)
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "gpencil", scope: !1779, file: !1780, line: 93, baseType: !77, size: 128, offset: 12544)
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "movieclip", scope: !1779, file: !1780, line: 94, baseType: !77, size: 128, offset: 12672)
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !1779, file: !1780, line: 95, baseType: !77, size: 128, offset: 12800)
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "linestyle", scope: !1779, file: !1780, line: 96, baseType: !77, size: 128, offset: 12928)
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "id_tag_update", scope: !1779, file: !1780, line: 98, baseType: !1766, size: 2048, offset: 13056)
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "eval_ctx", scope: !1779, file: !1780, line: 101, baseType: !1830, size: 64, offset: 15104)
!1830 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1831, size: 64)
!1831 = !DICompositeType(tag: DW_TAG_structure_type, name: "EvaluationContext", file: !1281, line: 42, flags: DIFlagFwdDecl)
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1779, file: !1780, line: 103, baseType: !1833, size: 64, offset: 15168)
!1833 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1834, size: 64)
!1834 = !DICompositeType(tag: DW_TAG_structure_type, name: "MainLock", file: !1780, line: 51, flags: DIFlagFwdDecl)
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !32, file: !16, line: 191, baseType: !1836, size: 64, offset: 8768)
!1836 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1837, size: 64)
!1837 = !DIDerivedType(tag: DW_TAG_typedef, name: "Scene", file: !434, line: 1299, baseType: !601)
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !32, file: !16, line: 192, baseType: !1839, size: 31872, offset: 8832)
!1839 = !DIDerivedType(tag: DW_TAG_typedef, name: "RenderData", file: !434, line: 611, baseType: !1015)
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "wrld", scope: !32, file: !16, line: 193, baseType: !1841, size: 4224, offset: 40704)
!1841 = !DIDerivedType(tag: DW_TAG_typedef, name: "World", file: !609, line: 131, baseType: !608)
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "camera_override", scope: !32, file: !16, line: 194, baseType: !341, size: 64, offset: 44928)
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !32, file: !16, line: 195, baseType: !96, size: 32, offset: 44992)
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "layer_override", scope: !32, file: !16, line: 195, baseType: !96, size: 32, offset: 45024)
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "parts", scope: !32, file: !16, line: 197, baseType: !77, size: 128, offset: 45056)
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "engine", scope: !32, file: !16, line: 200, baseType: !1847, size: 64, offset: 45184)
!1847 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1848, size: 64)
!1848 = !DICompositeType(tag: DW_TAG_structure_type, name: "RenderEngine", file: !16, line: 65, flags: DIFlagFwdDecl)
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "raytree", scope: !32, file: !16, line: 203, baseType: !1850, size: 64, offset: 45248)
!1850 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1851, size: 64)
!1851 = !DICompositeType(tag: DW_TAG_structure_type, name: "RayObject", file: !16, line: 63, flags: DIFlagFwdDecl)
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "rayfaces", scope: !32, file: !16, line: 204, baseType: !1853, size: 64, offset: 45312)
!1853 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1854, size: 64)
!1854 = !DICompositeType(tag: DW_TAG_structure_type, name: "RayFace", file: !16, line: 64, flags: DIFlagFwdDecl)
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "rayprimitives", scope: !32, file: !16, line: 205, baseType: !1856, size: 64, offset: 45376)
!1856 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1857, size: 64)
!1857 = !DICompositeType(tag: DW_TAG_structure_type, name: "VlakPrimitive", file: !16, line: 205, flags: DIFlagFwdDecl)
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "maxdist", scope: !32, file: !16, line: 206, baseType: !7, size: 32, offset: 45440)
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "occlusiontree", scope: !32, file: !16, line: 209, baseType: !6, size: 64, offset: 45504)
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "strandsurface", scope: !32, file: !16, line: 210, baseType: !77, size: 128, offset: 45568)
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "mblur_offs", scope: !32, file: !16, line: 213, baseType: !7, size: 32, offset: 45696)
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "field_offs", scope: !32, file: !16, line: 213, baseType: !7, size: 32, offset: 45728)
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "totvlak", scope: !32, file: !16, line: 216, baseType: !8, size: 32, offset: 45760)
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "totvert", scope: !32, file: !16, line: 216, baseType: !8, size: 32, offset: 45792)
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "tothalo", scope: !32, file: !16, line: 216, baseType: !8, size: 32, offset: 45824)
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "totstrand", scope: !32, file: !16, line: 216, baseType: !8, size: 32, offset: 45856)
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "totlamp", scope: !32, file: !16, line: 216, baseType: !8, size: 32, offset: 45888)
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "sortedhalos", scope: !32, file: !16, line: 217, baseType: !1869, size: 64, offset: 45952)
!1869 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1870, size: 64)
!1870 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1871, size: 64)
!1871 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "HaloRen", file: !16, line: 413, size: 1024, elements: !1872)
!1872 = !{!1873, !1874, !1875, !1876, !1877, !1878, !1879, !1880, !1881, !1882, !1883, !1884, !1885, !1886, !1887, !1888, !1889, !1890, !1891, !1892, !1893, !1894, !1895, !1896, !1897, !1898, !1899, !1900, !1901, !1902, !1903}
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "miny", scope: !1871, file: !16, line: 414, baseType: !43, size: 16)
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "maxy", scope: !1871, file: !16, line: 414, baseType: !43, size: 16, offset: 16)
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "alfa", scope: !1871, file: !16, line: 415, baseType: !7, size: 32, offset: 32)
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "xs", scope: !1871, file: !16, line: 415, baseType: !7, size: 32, offset: 64)
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "ys", scope: !1871, file: !16, line: 415, baseType: !7, size: 32, offset: 96)
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "rad", scope: !1871, file: !16, line: 415, baseType: !7, size: 32, offset: 128)
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "radsq", scope: !1871, file: !16, line: 415, baseType: !7, size: 32, offset: 160)
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "sin", scope: !1871, file: !16, line: 415, baseType: !7, size: 32, offset: 192)
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "cos", scope: !1871, file: !16, line: 415, baseType: !7, size: 32, offset: 224)
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !1871, file: !16, line: 415, baseType: !206, size: 96, offset: 256)
!1883 = !DIDerivedType(tag: DW_TAG_member, name: "no", scope: !1871, file: !16, line: 415, baseType: !206, size: 96, offset: 352)
!1884 = !DIDerivedType(tag: DW_TAG_member, name: "hard", scope: !1871, file: !16, line: 416, baseType: !7, size: 32, offset: 448)
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !1871, file: !16, line: 416, baseType: !7, size: 32, offset: 480)
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !1871, file: !16, line: 416, baseType: !7, size: 32, offset: 512)
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !1871, file: !16, line: 416, baseType: !7, size: 32, offset: 544)
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "zs", scope: !1871, file: !16, line: 417, baseType: !8, size: 32, offset: 576)
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "zd", scope: !1871, file: !16, line: 417, baseType: !8, size: 32, offset: 608)
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "zBufDist", scope: !1871, file: !16, line: 418, baseType: !8, size: 32, offset: 640)
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "starpoints", scope: !1871, file: !16, line: 419, baseType: !28, size: 8, offset: 672)
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1871, file: !16, line: 419, baseType: !28, size: 8, offset: 680)
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "add", scope: !1871, file: !16, line: 419, baseType: !28, size: 8, offset: 688)
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "tex", scope: !1871, file: !16, line: 419, baseType: !28, size: 8, offset: 696)
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "linec", scope: !1871, file: !16, line: 420, baseType: !28, size: 8, offset: 704)
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "ringc", scope: !1871, file: !16, line: 420, baseType: !28, size: 8, offset: 712)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "seed", scope: !1871, file: !16, line: 420, baseType: !28, size: 8, offset: 720)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "flarec", scope: !1871, file: !16, line: 421, baseType: !43, size: 16, offset: 736)
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "hasize", scope: !1871, file: !16, line: 422, baseType: !7, size: 32, offset: 768)
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "pixels", scope: !1871, file: !16, line: 423, baseType: !8, size: 32, offset: 800)
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !1871, file: !16, line: 424, baseType: !96, size: 32, offset: 832)
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !1871, file: !16, line: 425, baseType: !103, size: 64, offset: 896)
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "pool", scope: !1871, file: !16, line: 426, baseType: !1904, size: 64, offset: 960)
!1904 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1905, size: 64)
!1905 = !DICompositeType(tag: DW_TAG_structure_type, name: "ImagePool", file: !1906, line: 197, flags: DIFlagFwdDecl)
!1906 = !DIFile(filename: "blender/source/blender/render/extern/include/RE_shader_ext.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "lights", scope: !32, file: !16, line: 219, baseType: !77, size: 128, offset: 46016)
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "lampren", scope: !32, file: !16, line: 220, baseType: !77, size: 128, offset: 46144)
!1909 = !DIDerivedType(tag: DW_TAG_member, name: "objecttable", scope: !32, file: !16, line: 222, baseType: !77, size: 128, offset: 46272)
!1910 = !DIDerivedType(tag: DW_TAG_member, name: "objectinstance", scope: !32, file: !16, line: 224, baseType: !1911, size: 64, offset: 46400)
!1911 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1912, size: 64)
!1912 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ObjectInstanceRen", file: !16, line: 345, size: 2304, elements: !1913)
!1913 = !{!1914, !1915, !1916, !2095, !2098, !2099, !2100, !2101, !2102, !2103, !2104, !2105, !2106, !2107, !2108, !2110, !2120, !2121, !2122, !2123}
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1912, file: !16, line: 346, baseType: !1911, size: 64)
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1912, file: !16, line: 346, baseType: !1911, size: 64, offset: 64)
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "obr", scope: !1912, file: !16, line: 348, baseType: !1917, size: 64, offset: 128)
!1917 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1918, size: 64)
!1918 = !DIDerivedType(tag: DW_TAG_typedef, name: "ObjectRen", file: !16, line: 343, baseType: !1919)
!1919 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ObjectRen", file: !16, line: 315, size: 2240, elements: !1920)
!1920 = !{!1921, !1923, !1924, !1925, !1926, !1927, !1928, !1929, !1930, !1931, !1934, !1935, !1936, !1937, !1938, !1939, !1940, !1941, !1942, !1963, !2003, !2082, !2083, !2084, !2086, !2087, !2088, !2089, !2090, !2091, !2092, !2093, !2094}
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1919, file: !16, line: 316, baseType: !1922, size: 64)
!1922 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1919, size: 64)
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1919, file: !16, line: 316, baseType: !1922, size: 64, offset: 64)
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "ob", scope: !1919, file: !16, line: 317, baseType: !341, size: 64, offset: 128)
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "par", scope: !1919, file: !16, line: 317, baseType: !341, size: 64, offset: 192)
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "sce", scope: !1919, file: !16, line: 318, baseType: !600, size: 64, offset: 256)
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1919, file: !16, line: 319, baseType: !8, size: 32, offset: 320)
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "psysindex", scope: !1919, file: !16, line: 319, baseType: !8, size: 32, offset: 352)
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1919, file: !16, line: 319, baseType: !8, size: 32, offset: 384)
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !1919, file: !16, line: 319, baseType: !8, size: 32, offset: 416)
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "boundbox", scope: !1919, file: !16, line: 321, baseType: !1932, size: 192, offset: 448)
!1932 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 192, elements: !1933)
!1933 = !{!12, !208}
!1934 = !DIDerivedType(tag: DW_TAG_member, name: "totvert", scope: !1919, file: !16, line: 323, baseType: !8, size: 32, offset: 640)
!1935 = !DIDerivedType(tag: DW_TAG_member, name: "totvlak", scope: !1919, file: !16, line: 323, baseType: !8, size: 32, offset: 672)
!1936 = !DIDerivedType(tag: DW_TAG_member, name: "totstrand", scope: !1919, file: !16, line: 323, baseType: !8, size: 32, offset: 704)
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "tothalo", scope: !1919, file: !16, line: 323, baseType: !8, size: 32, offset: 736)
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "vertnodeslen", scope: !1919, file: !16, line: 324, baseType: !8, size: 32, offset: 768)
!1939 = !DIDerivedType(tag: DW_TAG_member, name: "vlaknodeslen", scope: !1919, file: !16, line: 324, baseType: !8, size: 32, offset: 800)
!1940 = !DIDerivedType(tag: DW_TAG_member, name: "strandnodeslen", scope: !1919, file: !16, line: 324, baseType: !8, size: 32, offset: 832)
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "blohalen", scope: !1919, file: !16, line: 324, baseType: !8, size: 32, offset: 864)
!1942 = !DIDerivedType(tag: DW_TAG_member, name: "vertnodes", scope: !1919, file: !16, line: 325, baseType: !1943, size: 64, offset: 896)
!1943 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1944, size: 64)
!1944 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VertTableNode", file: !1945, line: 60, size: 448, elements: !1946)
!1945 = !DIFile(filename: "blender/source/blender/render/intern/include/renderdatabase.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1946 = !{!1947, !1957, !1958, !1959, !1960, !1961, !1962}
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "vert", scope: !1944, file: !1945, line: 61, baseType: !1948, size: 64)
!1948 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1949, size: 64)
!1949 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VertRen", file: !16, line: 372, size: 384, elements: !1950)
!1950 = !{!1951, !1952, !1953, !1954, !1955, !1956}
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !1949, file: !16, line: 373, baseType: !206, size: 96)
!1952 = !DIDerivedType(tag: DW_TAG_member, name: "n", scope: !1949, file: !16, line: 374, baseType: !206, size: 96, offset: 96)
!1953 = !DIDerivedType(tag: DW_TAG_member, name: "orco", scope: !1949, file: !16, line: 375, baseType: !63, size: 64, offset: 192)
!1954 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1949, file: !16, line: 376, baseType: !96, size: 32, offset: 256)
!1955 = !DIDerivedType(tag: DW_TAG_member, name: "accum", scope: !1949, file: !16, line: 378, baseType: !7, size: 32, offset: 288)
!1956 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1949, file: !16, line: 379, baseType: !8, size: 32, offset: 320)
!1957 = !DIDerivedType(tag: DW_TAG_member, name: "rad", scope: !1944, file: !1945, line: 62, baseType: !63, size: 64, offset: 64)
!1958 = !DIDerivedType(tag: DW_TAG_member, name: "strand", scope: !1944, file: !1945, line: 63, baseType: !63, size: 64, offset: 128)
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "tangent", scope: !1944, file: !1945, line: 64, baseType: !63, size: 64, offset: 192)
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "stress", scope: !1944, file: !1945, line: 65, baseType: !63, size: 64, offset: 256)
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "winspeed", scope: !1944, file: !1945, line: 66, baseType: !63, size: 64, offset: 320)
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "origindex", scope: !1944, file: !1945, line: 68, baseType: !26, size: 64, offset: 384)
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "vlaknodes", scope: !1919, file: !16, line: 326, baseType: !1964, size: 64, offset: 960)
!1964 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1965, size: 64)
!1965 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VlakTableNode", file: !1945, line: 71, size: 512, elements: !1966)
!1966 = !{!1967, !1981, !1984, !1987, !1988, !1989, !1990, !1991, !1992}
!1967 = !DIDerivedType(tag: DW_TAG_member, name: "vlak", scope: !1965, file: !1945, line: 72, baseType: !1968, size: 64)
!1968 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1969, size: 64)
!1969 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VlakRen", file: !16, line: 400, size: 512, elements: !1970)
!1970 = !{!1971, !1972, !1973, !1974, !1975, !1976, !1977, !1978, !1979, !1980}
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !1969, file: !16, line: 401, baseType: !1948, size: 64)
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !1969, file: !16, line: 401, baseType: !1948, size: 64, offset: 64)
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !1969, file: !16, line: 401, baseType: !1948, size: 64, offset: 128)
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !1969, file: !16, line: 401, baseType: !1948, size: 64, offset: 192)
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "n", scope: !1969, file: !16, line: 402, baseType: !206, size: 96, offset: 256)
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !1969, file: !16, line: 403, baseType: !103, size: 64, offset: 384)
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "puno", scope: !1969, file: !16, line: 404, baseType: !28, size: 8, offset: 448)
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1969, file: !16, line: 405, baseType: !28, size: 8, offset: 456)
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "ec", scope: !1969, file: !16, line: 405, baseType: !28, size: 8, offset: 464)
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1969, file: !16, line: 410, baseType: !8, size: 32, offset: 480)
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "mtface", scope: !1965, file: !1945, line: 73, baseType: !1982, size: 64, offset: 64)
!1982 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1983, size: 64)
!1983 = !DICompositeType(tag: DW_TAG_structure_type, name: "MTFace", file: !16, line: 391, flags: DIFlagFwdDecl)
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "mcol", scope: !1965, file: !1945, line: 74, baseType: !1985, size: 64, offset: 128)
!1985 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1986, size: 64)
!1986 = !DICompositeType(tag: DW_TAG_structure_type, name: "MCol", file: !1945, line: 47, flags: DIFlagFwdDecl)
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "origindex", scope: !1965, file: !1945, line: 76, baseType: !26, size: 64, offset: 192)
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "totmtface", scope: !1965, file: !1945, line: 77, baseType: !8, size: 32, offset: 256)
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "totmcol", scope: !1965, file: !1945, line: 77, baseType: !8, size: 32, offset: 288)
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "surfnor", scope: !1965, file: !1945, line: 78, baseType: !63, size: 64, offset: 320)
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "tangent", scope: !1965, file: !1945, line: 79, baseType: !63, size: 64, offset: 384)
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "radface", scope: !1965, file: !1945, line: 80, baseType: !1993, size: 64, offset: 448)
!1993 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1994, size: 64)
!1994 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1995, size: 64)
!1995 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RadFace", file: !16, line: 394, size: 448, elements: !1996)
!1996 = !{!1997, !1998, !1999, !2000, !2001, !2002}
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "unshot", scope: !1995, file: !16, line: 395, baseType: !206, size: 96)
!1998 = !DIDerivedType(tag: DW_TAG_member, name: "totrad", scope: !1995, file: !16, line: 395, baseType: !206, size: 96, offset: 96)
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "norm", scope: !1995, file: !16, line: 396, baseType: !206, size: 96, offset: 192)
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "cent", scope: !1995, file: !16, line: 396, baseType: !206, size: 96, offset: 288)
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "area", scope: !1995, file: !16, line: 396, baseType: !7, size: 32, offset: 384)
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1995, file: !16, line: 397, baseType: !8, size: 32, offset: 416)
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "strandnodes", scope: !1919, file: !16, line: 327, baseType: !2004, size: 64, offset: 1024)
!2004 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2005, size: 64)
!2005 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StrandTableNode", file: !1945, line: 83, size: 512, elements: !2006)
!2006 = !{!2007, !2074, !2075, !2076, !2077, !2078, !2079, !2080, !2081}
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "strand", scope: !2005, file: !1945, line: 84, baseType: !2008, size: 64)
!2008 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2009, size: 64)
!2009 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StrandRen", file: !16, line: 475, size: 384, elements: !2010)
!2010 = !{!2011, !2018, !2069, !2070, !2071, !2072, !2073}
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "vert", scope: !2009, file: !16, line: 476, baseType: !2012, size: 64)
!2012 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2013, size: 64)
!2013 = !DIDerivedType(tag: DW_TAG_typedef, name: "StrandVert", file: !16, line: 434, baseType: !2014)
!2014 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StrandVert", file: !16, line: 431, size: 128, elements: !2015)
!2015 = !{!2016, !2017}
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !2014, file: !16, line: 432, baseType: !206, size: 96)
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "strandco", scope: !2014, file: !16, line: 433, baseType: !7, size: 32, offset: 96)
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !2009, file: !16, line: 477, baseType: !2019, size: 64, offset: 64)
!2019 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2020, size: 64)
!2020 = !DIDerivedType(tag: DW_TAG_typedef, name: "StrandBuffer", file: !16, line: 473, baseType: !2021)
!2021 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StrandBuffer", file: !16, line: 455, size: 1344, elements: !2022)
!2022 = !{!2023, !2025, !2026, !2028, !2035, !2036, !2037, !2038, !2039, !2058, !2059, !2060, !2061, !2062, !2063, !2064, !2065, !2066, !2067, !2068}
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2021, file: !16, line: 456, baseType: !2024, size: 64)
!2024 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2021, size: 64)
!2025 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2021, file: !16, line: 456, baseType: !2024, size: 64, offset: 64)
!2026 = !DIDerivedType(tag: DW_TAG_member, name: "vert", scope: !2021, file: !16, line: 457, baseType: !2027, size: 64, offset: 128)
!2027 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2014, size: 64)
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "bound", scope: !2021, file: !16, line: 458, baseType: !2029, size: 64, offset: 192)
!2029 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2030, size: 64)
!2030 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StrandBound", file: !16, line: 450, size: 256, elements: !2031)
!2031 = !{!2032, !2033, !2034}
!2032 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2030, file: !16, line: 451, baseType: !8, size: 32)
!2033 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !2030, file: !16, line: 451, baseType: !8, size: 32, offset: 32)
!2034 = !DIDerivedType(tag: DW_TAG_member, name: "boundbox", scope: !2030, file: !16, line: 452, baseType: !1932, size: 192, offset: 64)
!2035 = !DIDerivedType(tag: DW_TAG_member, name: "totvert", scope: !2021, file: !16, line: 459, baseType: !8, size: 32, offset: 256)
!2036 = !DIDerivedType(tag: DW_TAG_member, name: "totbound", scope: !2021, file: !16, line: 459, baseType: !8, size: 32, offset: 288)
!2037 = !DIDerivedType(tag: DW_TAG_member, name: "obr", scope: !2021, file: !16, line: 461, baseType: !1922, size: 64, offset: 320)
!2038 = !DIDerivedType(tag: DW_TAG_member, name: "ma", scope: !2021, file: !16, line: 462, baseType: !103, size: 64, offset: 384)
!2039 = !DIDerivedType(tag: DW_TAG_member, name: "surface", scope: !2021, file: !16, line: 463, baseType: !2040, size: 64, offset: 448)
!2040 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2041, size: 64)
!2041 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StrandSurface", file: !16, line: 436, size: 2880, elements: !2042)
!2042 = !{!2043, !2044, !2045, !2046, !2049, !2051, !2052, !2053, !2054, !2055, !2056, !2057}
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2041, file: !16, line: 437, baseType: !2040, size: 64)
!2044 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2041, file: !16, line: 437, baseType: !2040, size: 64, offset: 64)
!2045 = !DIDerivedType(tag: DW_TAG_member, name: "obr", scope: !2041, file: !16, line: 438, baseType: !1918, size: 2240, offset: 128)
!2046 = !DIDerivedType(tag: DW_TAG_member, name: "face", scope: !2041, file: !16, line: 439, baseType: !2047, size: 64, offset: 2368)
!2047 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2048, size: 64)
!2048 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 128, elements: !289)
!2049 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !2041, file: !16, line: 440, baseType: !2050, size: 64, offset: 2432)
!2050 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !206, size: 64)
!2051 = !DIDerivedType(tag: DW_TAG_member, name: "ao", scope: !2041, file: !16, line: 442, baseType: !2050, size: 64, offset: 2496)
!2052 = !DIDerivedType(tag: DW_TAG_member, name: "env", scope: !2041, file: !16, line: 443, baseType: !2050, size: 64, offset: 2560)
!2053 = !DIDerivedType(tag: DW_TAG_member, name: "indirect", scope: !2041, file: !16, line: 444, baseType: !2050, size: 64, offset: 2624)
!2054 = !DIDerivedType(tag: DW_TAG_member, name: "prevco", scope: !2041, file: !16, line: 446, baseType: !2050, size: 64, offset: 2688)
!2055 = !DIDerivedType(tag: DW_TAG_member, name: "nextco", scope: !2041, file: !16, line: 446, baseType: !2050, size: 64, offset: 2752)
!2056 = !DIDerivedType(tag: DW_TAG_member, name: "totvert", scope: !2041, file: !16, line: 447, baseType: !8, size: 32, offset: 2816)
!2057 = !DIDerivedType(tag: DW_TAG_member, name: "totface", scope: !2041, file: !16, line: 447, baseType: !8, size: 32, offset: 2848)
!2058 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !2021, file: !16, line: 464, baseType: !96, size: 32, offset: 512)
!2059 = !DIDerivedType(tag: DW_TAG_member, name: "overrideuv", scope: !2021, file: !16, line: 465, baseType: !8, size: 32, offset: 544)
!2060 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2021, file: !16, line: 466, baseType: !8, size: 32, offset: 576)
!2061 = !DIDerivedType(tag: DW_TAG_member, name: "maxdepth", scope: !2021, file: !16, line: 466, baseType: !8, size: 32, offset: 608)
!2062 = !DIDerivedType(tag: DW_TAG_member, name: "adaptcos", scope: !2021, file: !16, line: 467, baseType: !7, size: 32, offset: 640)
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "minwidth", scope: !2021, file: !16, line: 467, baseType: !7, size: 32, offset: 672)
!2064 = !DIDerivedType(tag: DW_TAG_member, name: "widthfade", scope: !2021, file: !16, line: 467, baseType: !7, size: 32, offset: 704)
!2065 = !DIDerivedType(tag: DW_TAG_member, name: "maxwidth", scope: !2021, file: !16, line: 469, baseType: !7, size: 32, offset: 736)
!2066 = !DIDerivedType(tag: DW_TAG_member, name: "winmat", scope: !2021, file: !16, line: 471, baseType: !478, size: 512, offset: 768)
!2067 = !DIDerivedType(tag: DW_TAG_member, name: "winx", scope: !2021, file: !16, line: 472, baseType: !8, size: 32, offset: 1280)
!2068 = !DIDerivedType(tag: DW_TAG_member, name: "winy", scope: !2021, file: !16, line: 472, baseType: !8, size: 32, offset: 1312)
!2069 = !DIDerivedType(tag: DW_TAG_member, name: "totvert", scope: !2009, file: !16, line: 478, baseType: !8, size: 32, offset: 128)
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2009, file: !16, line: 478, baseType: !8, size: 32, offset: 160)
!2071 = !DIDerivedType(tag: DW_TAG_member, name: "clip", scope: !2009, file: !16, line: 479, baseType: !8, size: 32, offset: 192)
!2072 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !2009, file: !16, line: 479, baseType: !8, size: 32, offset: 224)
!2073 = !DIDerivedType(tag: DW_TAG_member, name: "orco", scope: !2009, file: !16, line: 480, baseType: !206, size: 96, offset: 256)
!2074 = !DIDerivedType(tag: DW_TAG_member, name: "winspeed", scope: !2005, file: !1945, line: 85, baseType: !63, size: 64, offset: 64)
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "surfnor", scope: !2005, file: !1945, line: 86, baseType: !63, size: 64, offset: 128)
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "simplify", scope: !2005, file: !1945, line: 87, baseType: !63, size: 64, offset: 192)
!2077 = !DIDerivedType(tag: DW_TAG_member, name: "face", scope: !2005, file: !1945, line: 88, baseType: !26, size: 64, offset: 256)
!2078 = !DIDerivedType(tag: DW_TAG_member, name: "mcol", scope: !2005, file: !1945, line: 89, baseType: !1985, size: 64, offset: 320)
!2079 = !DIDerivedType(tag: DW_TAG_member, name: "uv", scope: !2005, file: !1945, line: 90, baseType: !63, size: 64, offset: 384)
!2080 = !DIDerivedType(tag: DW_TAG_member, name: "totuv", scope: !2005, file: !1945, line: 91, baseType: !8, size: 32, offset: 448)
!2081 = !DIDerivedType(tag: DW_TAG_member, name: "totmcol", scope: !2005, file: !1945, line: 91, baseType: !8, size: 32, offset: 480)
!2082 = !DIDerivedType(tag: DW_TAG_member, name: "bloha", scope: !1919, file: !16, line: 328, baseType: !1869, size: 64, offset: 1088)
!2083 = !DIDerivedType(tag: DW_TAG_member, name: "strandbuf", scope: !1919, file: !16, line: 329, baseType: !2024, size: 64, offset: 1152)
!2084 = !DIDerivedType(tag: DW_TAG_member, name: "mtface", scope: !1919, file: !16, line: 331, baseType: !2085, size: 64, offset: 1216)
!2085 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !155, size: 64)
!2086 = !DIDerivedType(tag: DW_TAG_member, name: "mcol", scope: !1919, file: !16, line: 332, baseType: !2085, size: 64, offset: 1280)
!2087 = !DIDerivedType(tag: DW_TAG_member, name: "actmtface", scope: !1919, file: !16, line: 333, baseType: !8, size: 32, offset: 1344)
!2088 = !DIDerivedType(tag: DW_TAG_member, name: "actmcol", scope: !1919, file: !16, line: 333, baseType: !8, size: 32, offset: 1376)
!2089 = !DIDerivedType(tag: DW_TAG_member, name: "bakemtface", scope: !1919, file: !16, line: 333, baseType: !8, size: 32, offset: 1408)
!2090 = !DIDerivedType(tag: DW_TAG_member, name: "obmat", scope: !1919, file: !16, line: 335, baseType: !478, size: 512, offset: 1440)
!2091 = !DIDerivedType(tag: DW_TAG_member, name: "raytree", scope: !1919, file: !16, line: 338, baseType: !1850, size: 64, offset: 1984)
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "rayfaces", scope: !1919, file: !16, line: 339, baseType: !1853, size: 64, offset: 2048)
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "rayprimitives", scope: !1919, file: !16, line: 340, baseType: !1856, size: 64, offset: 2112)
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "rayobi", scope: !1919, file: !16, line: 341, baseType: !1911, size: 64, offset: 2176)
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "ob", scope: !1912, file: !16, line: 349, baseType: !2096, size: 64, offset: 192)
!2096 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2097, size: 64)
!2097 = !DIDerivedType(tag: DW_TAG_typedef, name: "Object", file: !343, line: 295, baseType: !342)
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "par", scope: !1912, file: !16, line: 349, baseType: !2096, size: 64, offset: 256)
!2099 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1912, file: !16, line: 350, baseType: !8, size: 32, offset: 320)
!2100 = !DIDerivedType(tag: DW_TAG_member, name: "psysindex", scope: !1912, file: !16, line: 350, baseType: !8, size: 32, offset: 352)
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !1912, file: !16, line: 350, baseType: !8, size: 32, offset: 384)
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !1912, file: !16, line: 352, baseType: !478, size: 512, offset: 416)
!2103 = !DIDerivedType(tag: DW_TAG_member, name: "imat", scope: !1912, file: !16, line: 352, baseType: !478, size: 512, offset: 928)
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "nmat", scope: !1912, file: !16, line: 353, baseType: !1528, size: 288, offset: 1440)
!2105 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1912, file: !16, line: 354, baseType: !43, size: 16, offset: 1728)
!2106 = !DIDerivedType(tag: DW_TAG_member, name: "dupliorco", scope: !1912, file: !16, line: 356, baseType: !206, size: 96, offset: 1760)
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "dupliuv", scope: !1912, file: !16, line: 356, baseType: !10, size: 64, offset: 1856)
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "duplitexmat", scope: !1912, file: !16, line: 357, baseType: !2109, size: 64, offset: 1920)
!2109 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !288, size: 64)
!2110 = !DIDerivedType(tag: DW_TAG_member, name: "volume_precache", scope: !1912, file: !16, line: 359, baseType: !2111, size: 64, offset: 1984)
!2111 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2112, size: 64)
!2112 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VolumePrecache", file: !16, line: 513, size: 448, elements: !2113)
!2113 = !{!2114, !2115, !2116, !2117, !2118, !2119}
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "res", scope: !2112, file: !16, line: 514, baseType: !776, size: 96)
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "bbmin", scope: !2112, file: !16, line: 515, baseType: !63, size: 64, offset: 128)
!2116 = !DIDerivedType(tag: DW_TAG_member, name: "bbmax", scope: !2112, file: !16, line: 515, baseType: !63, size: 64, offset: 192)
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "data_r", scope: !2112, file: !16, line: 516, baseType: !63, size: 64, offset: 256)
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "data_g", scope: !2112, file: !16, line: 517, baseType: !63, size: 64, offset: 320)
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "data_b", scope: !2112, file: !16, line: 518, baseType: !63, size: 64, offset: 384)
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "vectors", scope: !1912, file: !16, line: 361, baseType: !63, size: 64, offset: 2048)
!2121 = !DIDerivedType(tag: DW_TAG_member, name: "totvector", scope: !1912, file: !16, line: 362, baseType: !8, size: 32, offset: 2112)
!2122 = !DIDerivedType(tag: DW_TAG_member, name: "raytree", scope: !1912, file: !16, line: 365, baseType: !1850, size: 64, offset: 2176)
!2123 = !DIDerivedType(tag: DW_TAG_member, name: "transform_primitives", scope: !1912, file: !16, line: 366, baseType: !8, size: 32, offset: 2240)
!2124 = !DIDerivedType(tag: DW_TAG_member, name: "instancetable", scope: !32, file: !16, line: 225, baseType: !77, size: 128, offset: 46464)
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "totinstance", scope: !32, file: !16, line: 226, baseType: !8, size: 32, offset: 46592)
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "bakebuf", scope: !32, file: !16, line: 228, baseType: !817, size: 64, offset: 46656)
!2127 = !DIDerivedType(tag: DW_TAG_member, name: "orco_hash", scope: !32, file: !16, line: 230, baseType: !395, size: 64, offset: 46720)
!2128 = !DIDerivedType(tag: DW_TAG_member, name: "sss_hash", scope: !32, file: !16, line: 232, baseType: !395, size: 64, offset: 46784)
!2129 = !DIDerivedType(tag: DW_TAG_member, name: "sss_points", scope: !32, file: !16, line: 233, baseType: !585, size: 64, offset: 46848)
!2130 = !DIDerivedType(tag: DW_TAG_member, name: "sss_mat", scope: !32, file: !16, line: 234, baseType: !103, size: 64, offset: 46912)
!2131 = !DIDerivedType(tag: DW_TAG_member, name: "customdata_names", scope: !32, file: !16, line: 236, baseType: !77, size: 128, offset: 46976)
!2132 = !DIDerivedType(tag: DW_TAG_member, name: "excludeob", scope: !32, file: !16, line: 238, baseType: !341, size: 64, offset: 47104)
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "render_volumes_inside", scope: !32, file: !16, line: 239, baseType: !77, size: 128, offset: 47168)
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "volumes", scope: !32, file: !16, line: 240, baseType: !77, size: 128, offset: 47296)
!2135 = !DIDerivedType(tag: DW_TAG_member, name: "memArena", scope: !32, file: !16, line: 250, baseType: !2136, size: 64, offset: 47424)
!2136 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2137, size: 64)
!2137 = !DICompositeType(tag: DW_TAG_structure_type, name: "MemArena", file: !2138, line: 52, flags: DIFlagFwdDecl)
!2138 = !DIFile(filename: "blender/source/blender/blenlib/BLI_memarena.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "display_init", scope: !32, file: !16, line: 253, baseType: !2140, size: 64, offset: 47488)
!2140 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2141, size: 64)
!2141 = !DISubroutineType(types: !2142)
!2142 = !{null, !6, !50}
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "dih", scope: !32, file: !16, line: 254, baseType: !6, size: 64, offset: 47552)
!2144 = !DIDerivedType(tag: DW_TAG_member, name: "display_clear", scope: !32, file: !16, line: 255, baseType: !2140, size: 64, offset: 47616)
!2145 = !DIDerivedType(tag: DW_TAG_member, name: "dch", scope: !32, file: !16, line: 256, baseType: !6, size: 64, offset: 47680)
!2146 = !DIDerivedType(tag: DW_TAG_member, name: "display_update", scope: !32, file: !16, line: 257, baseType: !2147, size: 64, offset: 47744)
!2147 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2148, size: 64)
!2148 = !DISubroutineType(types: !2149)
!2149 = !{null, !6, !50, !2150}
!2150 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !84, size: 64)
!2151 = !DIDerivedType(tag: DW_TAG_member, name: "duh", scope: !32, file: !16, line: 258, baseType: !6, size: 64, offset: 47808)
!2152 = !DIDerivedType(tag: DW_TAG_member, name: "current_scene_update", scope: !32, file: !16, line: 259, baseType: !2153, size: 64, offset: 47872)
!2153 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2154, size: 64)
!2154 = !DISubroutineType(types: !2155)
!2155 = !{null, !6, !600}
!2156 = !DIDerivedType(tag: DW_TAG_member, name: "suh", scope: !32, file: !16, line: 260, baseType: !6, size: 64, offset: 47936)
!2157 = !DIDerivedType(tag: DW_TAG_member, name: "stats_draw", scope: !32, file: !16, line: 262, baseType: !2158, size: 64, offset: 48000)
!2158 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2159, size: 64)
!2159 = !DISubroutineType(types: !2160)
!2160 = !{null, !6, !2161}
!2161 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2162, size: 64)
!2162 = !DIDerivedType(tag: DW_TAG_typedef, name: "RenderStats", file: !31, line: 160, baseType: !2163)
!2163 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RenderStats", file: !31, line: 151, size: 1216, elements: !2164)
!2164 = !{!2165, !2166, !2167, !2168, !2169, !2170, !2171, !2172, !2173, !2174, !2175, !2176, !2177, !2178, !2179, !2180, !2181, !2184, !2185, !2186, !2187}
!2165 = !DIDerivedType(tag: DW_TAG_member, name: "cfra", scope: !2163, file: !31, line: 152, baseType: !8, size: 32)
!2166 = !DIDerivedType(tag: DW_TAG_member, name: "totface", scope: !2163, file: !31, line: 153, baseType: !8, size: 32, offset: 32)
!2167 = !DIDerivedType(tag: DW_TAG_member, name: "totvert", scope: !2163, file: !31, line: 153, baseType: !8, size: 32, offset: 64)
!2168 = !DIDerivedType(tag: DW_TAG_member, name: "totstrand", scope: !2163, file: !31, line: 153, baseType: !8, size: 32, offset: 96)
!2169 = !DIDerivedType(tag: DW_TAG_member, name: "tothalo", scope: !2163, file: !31, line: 153, baseType: !8, size: 32, offset: 128)
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "totlamp", scope: !2163, file: !31, line: 153, baseType: !8, size: 32, offset: 160)
!2171 = !DIDerivedType(tag: DW_TAG_member, name: "totpart", scope: !2163, file: !31, line: 153, baseType: !8, size: 32, offset: 192)
!2172 = !DIDerivedType(tag: DW_TAG_member, name: "curfield", scope: !2163, file: !31, line: 154, baseType: !43, size: 16, offset: 224)
!2173 = !DIDerivedType(tag: DW_TAG_member, name: "curblur", scope: !2163, file: !31, line: 154, baseType: !43, size: 16, offset: 240)
!2174 = !DIDerivedType(tag: DW_TAG_member, name: "curpart", scope: !2163, file: !31, line: 154, baseType: !43, size: 16, offset: 256)
!2175 = !DIDerivedType(tag: DW_TAG_member, name: "partsdone", scope: !2163, file: !31, line: 154, baseType: !43, size: 16, offset: 272)
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "convertdone", scope: !2163, file: !31, line: 154, baseType: !43, size: 16, offset: 288)
!2177 = !DIDerivedType(tag: DW_TAG_member, name: "curfsa", scope: !2163, file: !31, line: 154, baseType: !43, size: 16, offset: 304)
!2178 = !DIDerivedType(tag: DW_TAG_member, name: "localview", scope: !2163, file: !31, line: 155, baseType: !48, size: 8, offset: 320)
!2179 = !DIDerivedType(tag: DW_TAG_member, name: "starttime", scope: !2163, file: !31, line: 156, baseType: !21, size: 64, offset: 384)
!2180 = !DIDerivedType(tag: DW_TAG_member, name: "lastframetime", scope: !2163, file: !31, line: 156, baseType: !21, size: 64, offset: 448)
!2181 = !DIDerivedType(tag: DW_TAG_member, name: "infostr", scope: !2163, file: !31, line: 157, baseType: !2182, size: 64, offset: 512)
!2182 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2183, size: 64)
!2183 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !28)
!2184 = !DIDerivedType(tag: DW_TAG_member, name: "statstr", scope: !2163, file: !31, line: 157, baseType: !2182, size: 64, offset: 576)
!2185 = !DIDerivedType(tag: DW_TAG_member, name: "scene_name", scope: !2163, file: !31, line: 158, baseType: !155, size: 512, offset: 640)
!2186 = !DIDerivedType(tag: DW_TAG_member, name: "mem_used", scope: !2163, file: !31, line: 159, baseType: !7, size: 32, offset: 1152)
!2187 = !DIDerivedType(tag: DW_TAG_member, name: "mem_peak", scope: !2163, file: !31, line: 159, baseType: !7, size: 32, offset: 1184)
!2188 = !DIDerivedType(tag: DW_TAG_member, name: "sdh", scope: !32, file: !16, line: 263, baseType: !6, size: 64, offset: 48064)
!2189 = !DIDerivedType(tag: DW_TAG_member, name: "progress", scope: !32, file: !16, line: 264, baseType: !2190, size: 64, offset: 48128)
!2190 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2191, size: 64)
!2191 = !DISubroutineType(types: !2192)
!2192 = !{null, !6, !7}
!2193 = !DIDerivedType(tag: DW_TAG_member, name: "prh", scope: !32, file: !16, line: 265, baseType: !6, size: 64, offset: 48192)
!2194 = !DIDerivedType(tag: DW_TAG_member, name: "draw_lock", scope: !32, file: !16, line: 267, baseType: !2195, size: 64, offset: 48256)
!2195 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2196, size: 64)
!2196 = !DISubroutineType(types: !2197)
!2197 = !{null, !6, !8}
!2198 = !DIDerivedType(tag: DW_TAG_member, name: "dlh", scope: !32, file: !16, line: 268, baseType: !6, size: 64, offset: 48320)
!2199 = !DIDerivedType(tag: DW_TAG_member, name: "test_break", scope: !32, file: !16, line: 269, baseType: !2200, size: 64, offset: 48384)
!2200 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2201, size: 64)
!2201 = !DISubroutineType(types: !2202)
!2202 = !{!8, !6}
!2203 = !DIDerivedType(tag: DW_TAG_member, name: "tbh", scope: !32, file: !16, line: 270, baseType: !6, size: 64, offset: 48448)
!2204 = !DIDerivedType(tag: DW_TAG_member, name: "i", scope: !32, file: !16, line: 272, baseType: !2162, size: 1216, offset: 48512)
!2205 = !DIDerivedType(tag: DW_TAG_member, name: "reports", scope: !32, file: !16, line: 274, baseType: !2206, size: 64, offset: 49728)
!2206 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2207, size: 64)
!2207 = !DICompositeType(tag: DW_TAG_structure_type, name: "ReportList", file: !31, line: 45, flags: DIFlagFwdDecl)
!2208 = !DIDerivedType(tag: DW_TAG_member, name: "pool", scope: !32, file: !16, line: 276, baseType: !1904, size: 64, offset: 49792)
!2209 = !DIDerivedType(tag: DW_TAG_member, name: "eval_ctx", scope: !32, file: !16, line: 277, baseType: !1830, size: 64, offset: 49856)
!2210 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !26, size: 64)
!2211 = !DIDerivedType(tag: DW_TAG_typedef, name: "intptr_t", file: !24, line: 87, baseType: !2212)
!2212 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!2213 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1056, size: 64)
!2214 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2215, size: 64)
!2215 = !DIDerivedType(tag: DW_TAG_typedef, name: "ISBSample", file: !2216, line: 86, baseType: !2217)
!2216 = !DIFile(filename: "blender/source/blender/render/intern/include/shadbuf.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2217 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ISBSample", file: !2216, line: 81, size: 256, elements: !2218)
!2218 = !{!2219, !2220, !2222, !2223}
!2219 = !DIDerivedType(tag: DW_TAG_member, name: "zco", scope: !2217, file: !2216, line: 82, baseType: !206, size: 96)
!2220 = !DIDerivedType(tag: DW_TAG_member, name: "shadfac", scope: !2217, file: !2216, line: 83, baseType: !2221, size: 64, offset: 128)
!2221 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !43, size: 64)
!2222 = !DIDerivedType(tag: DW_TAG_member, name: "obi", scope: !2217, file: !2216, line: 84, baseType: !8, size: 32, offset: 192)
!2223 = !DIDerivedType(tag: DW_TAG_member, name: "facenr", scope: !2217, file: !2216, line: 85, baseType: !8, size: 32, offset: 224)
!2224 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2225, size: 64)
!2225 = !DIDerivedType(tag: DW_TAG_typedef, name: "ISBBranch", file: !3, line: 1456, baseType: !2226)
!2226 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ISBBranch", file: !3, line: 1450, size: 512, elements: !2227)
!2227 = !{!2228, !2230, !2231, !2232, !2242, !2243, !2244, !2245, !2246}
!2228 = !DIDerivedType(tag: DW_TAG_member, name: "left", scope: !2226, file: !3, line: 1451, baseType: !2229, size: 64)
!2229 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2226, size: 64)
!2230 = !DIDerivedType(tag: DW_TAG_member, name: "right", scope: !2226, file: !3, line: 1451, baseType: !2229, size: 64, offset: 64)
!2231 = !DIDerivedType(tag: DW_TAG_member, name: "divider", scope: !2226, file: !3, line: 1452, baseType: !10, size: 64, offset: 128)
!2232 = !DIDerivedType(tag: DW_TAG_member, name: "box", scope: !2226, file: !3, line: 1453, baseType: !2233, size: 192, offset: 192)
!2233 = !DIDerivedType(tag: DW_TAG_typedef, name: "Boxf", file: !3, line: 1448, baseType: !2234)
!2234 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Boxf", file: !3, line: 1444, size: 192, elements: !2235)
!2235 = !{!2236, !2237, !2238, !2239, !2240, !2241}
!2236 = !DIDerivedType(tag: DW_TAG_member, name: "xmin", scope: !2234, file: !3, line: 1445, baseType: !7, size: 32)
!2237 = !DIDerivedType(tag: DW_TAG_member, name: "xmax", scope: !2234, file: !3, line: 1445, baseType: !7, size: 32, offset: 32)
!2238 = !DIDerivedType(tag: DW_TAG_member, name: "ymin", scope: !2234, file: !3, line: 1446, baseType: !7, size: 32, offset: 64)
!2239 = !DIDerivedType(tag: DW_TAG_member, name: "ymax", scope: !2234, file: !3, line: 1446, baseType: !7, size: 32, offset: 96)
!2240 = !DIDerivedType(tag: DW_TAG_member, name: "zmin", scope: !2234, file: !3, line: 1447, baseType: !7, size: 32, offset: 128)
!2241 = !DIDerivedType(tag: DW_TAG_member, name: "zmax", scope: !2234, file: !3, line: 1447, baseType: !7, size: 32, offset: 160)
!2242 = !DIDerivedType(tag: DW_TAG_member, name: "totsamp", scope: !2226, file: !3, line: 1454, baseType: !43, size: 16, offset: 384)
!2243 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !2226, file: !3, line: 1454, baseType: !43, size: 16, offset: 400)
!2244 = !DIDerivedType(tag: DW_TAG_member, name: "full", scope: !2226, file: !3, line: 1454, baseType: !43, size: 16, offset: 416)
!2245 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !2226, file: !3, line: 1454, baseType: !43, size: 16, offset: 432)
!2246 = !DIDerivedType(tag: DW_TAG_member, name: "samples", scope: !2226, file: !3, line: 1455, baseType: !2247, size: 64, offset: 448)
!2247 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2214, size: 64)
!2248 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2249, size: 64)
!2249 = !DIDerivedType(tag: DW_TAG_typedef, name: "PixStr", file: !2250, line: 54, baseType: !2251)
!2250 = !DIFile(filename: "blender/source/blender/render/intern/include/rendercore.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2251 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PixStr", file: !2250, line: 49, size: 256, elements: !2252)
!2252 = !{!2253, !2255, !2256, !2257, !2258, !2259, !2260}
!2253 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2251, file: !2250, line: 50, baseType: !2254, size: 64)
!2254 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2251, size: 64)
!2255 = !DIDerivedType(tag: DW_TAG_member, name: "obi", scope: !2251, file: !2250, line: 51, baseType: !8, size: 32, offset: 64)
!2256 = !DIDerivedType(tag: DW_TAG_member, name: "facenr", scope: !2251, file: !2250, line: 51, baseType: !8, size: 32, offset: 96)
!2257 = !DIDerivedType(tag: DW_TAG_member, name: "z", scope: !2251, file: !2250, line: 51, baseType: !8, size: 32, offset: 128)
!2258 = !DIDerivedType(tag: DW_TAG_member, name: "maskz", scope: !2251, file: !2250, line: 51, baseType: !8, size: 32, offset: 160)
!2259 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !2251, file: !2250, line: 52, baseType: !514, size: 16, offset: 192)
!2260 = !DIDerivedType(tag: DW_TAG_member, name: "shadfac", scope: !2251, file: !2250, line: 53, baseType: !43, size: 16, offset: 208)
!2261 = !{!2262, !2270, !2275, !0}
!2262 = !DIGlobalVariableExpression(var: !2263, expr: !DIExpression())
!2263 = distinct !DIGlobalVariable(name: "tab", scope: !2264, file: !3, line: 132, type: !2267, isLocal: true, isDefinition: true)
!2264 = distinct !DISubprogram(name: "give_jitter_tab", scope: !3, file: !3, line: 126, type: !2265, scopeLine: 127, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!2265 = !DISubroutineType(types: !2266)
!2266 = !{!63, !8}
!2267 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 544, elements: !2268)
!2268 = !{!2269}
!2269 = !DISubrange(count: 17)
!2270 = !DIGlobalVariableExpression(var: !2271, expr: !DIExpression())
!2271 = distinct !DIGlobalVariable(name: "jit", scope: !2264, file: !3, line: 133, type: !2272, isLocal: true, isDefinition: true)
!2272 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 95744, elements: !2273)
!2273 = !{!2274, !12}
!2274 = !DISubrange(count: 1496)
!2275 = !DIGlobalVariableExpression(var: !2276, expr: !DIExpression())
!2276 = distinct !DIGlobalVariable(name: "ctab", scope: !2264, file: !3, line: 134, type: !2277, isLocal: true, isDefinition: true)
!2277 = !DICompositeType(tag: DW_TAG_array_type, baseType: !28, size: 136, elements: !2268)
!2278 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !8)
!2279 = !{i32 7, !"Dwarf Version", i32 4}
!2280 = !{i32 2, !"Debug Info Version", i32 3}
!2281 = !{i32 1, !"wchar_size", i32 4}
!2282 = !{!"clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)"}
!2283 = distinct !DISubprogram(name: "makeshadowbuf", scope: !3, file: !3, line: 764, type: !2284, scopeLine: 765, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !4)
!2284 = !DISubroutineType(types: !2285)
!2285 = !{null, !29, !2286}
!2286 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2287, size: 64)
!2287 = !DIDerivedType(tag: DW_TAG_typedef, name: "LampRen", file: !16, line: 615, baseType: !2288)
!2288 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "LampRen", file: !16, line: 540, size: 5376, elements: !2289)
!2289 = !{!2290, !2292, !2293, !2294, !2295, !2296, !2297, !2298, !2299, !2300, !2301, !2302, !2303, !2304, !2305, !2306, !2307, !2308, !2309, !2310, !2311, !2312, !2313, !2314, !2315, !2316, !2317, !2318, !2319, !2320, !2321, !2322, !2323, !2324, !2325, !2326, !2327, !2328, !2329, !2330, !2331, !2332, !2333, !2334, !2335, !2336, !2337, !2338, !2339, !2340, !2341, !2343, !2344, !2345, !2346, !2347, !2348, !2387, !2430, !2431, !2432, !2433, !2434, !2435, !2436, !2437, !2438, !2439, !2451, !2453, !2454, !2455}
!2290 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2288, file: !16, line: 541, baseType: !2291, size: 64)
!2291 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2288, size: 64)
!2292 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2288, file: !16, line: 541, baseType: !2291, size: 64, offset: 64)
!2293 = !DIDerivedType(tag: DW_TAG_member, name: "xs", scope: !2288, file: !16, line: 543, baseType: !7, size: 32, offset: 128)
!2294 = !DIDerivedType(tag: DW_TAG_member, name: "ys", scope: !2288, file: !16, line: 543, baseType: !7, size: 32, offset: 160)
!2295 = !DIDerivedType(tag: DW_TAG_member, name: "dist", scope: !2288, file: !16, line: 543, baseType: !7, size: 32, offset: 192)
!2296 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !2288, file: !16, line: 544, baseType: !206, size: 96, offset: 224)
!2297 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2288, file: !16, line: 545, baseType: !43, size: 16, offset: 320)
!2298 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2288, file: !16, line: 546, baseType: !8, size: 32, offset: 352)
!2299 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !2288, file: !16, line: 547, baseType: !7, size: 32, offset: 384)
!2300 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !2288, file: !16, line: 547, baseType: !7, size: 32, offset: 416)
!2301 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !2288, file: !16, line: 547, baseType: !7, size: 32, offset: 448)
!2302 = !DIDerivedType(tag: DW_TAG_member, name: "k", scope: !2288, file: !16, line: 547, baseType: !7, size: 32, offset: 480)
!2303 = !DIDerivedType(tag: DW_TAG_member, name: "shdwr", scope: !2288, file: !16, line: 548, baseType: !7, size: 32, offset: 512)
!2304 = !DIDerivedType(tag: DW_TAG_member, name: "shdwg", scope: !2288, file: !16, line: 548, baseType: !7, size: 32, offset: 544)
!2305 = !DIDerivedType(tag: DW_TAG_member, name: "shdwb", scope: !2288, file: !16, line: 548, baseType: !7, size: 32, offset: 576)
!2306 = !DIDerivedType(tag: DW_TAG_member, name: "energy", scope: !2288, file: !16, line: 549, baseType: !7, size: 32, offset: 608)
!2307 = !DIDerivedType(tag: DW_TAG_member, name: "haint", scope: !2288, file: !16, line: 549, baseType: !7, size: 32, offset: 640)
!2308 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !2288, file: !16, line: 550, baseType: !8, size: 32, offset: 672)
!2309 = !DIDerivedType(tag: DW_TAG_member, name: "spotsi", scope: !2288, file: !16, line: 551, baseType: !7, size: 32, offset: 704)
!2310 = !DIDerivedType(tag: DW_TAG_member, name: "spotbl", scope: !2288, file: !16, line: 551, baseType: !7, size: 32, offset: 736)
!2311 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !2288, file: !16, line: 552, baseType: !206, size: 96, offset: 768)
!2312 = !DIDerivedType(tag: DW_TAG_member, name: "xsp", scope: !2288, file: !16, line: 553, baseType: !7, size: 32, offset: 864)
!2313 = !DIDerivedType(tag: DW_TAG_member, name: "ysp", scope: !2288, file: !16, line: 553, baseType: !7, size: 32, offset: 896)
!2314 = !DIDerivedType(tag: DW_TAG_member, name: "distkw", scope: !2288, file: !16, line: 553, baseType: !7, size: 32, offset: 928)
!2315 = !DIDerivedType(tag: DW_TAG_member, name: "inpr", scope: !2288, file: !16, line: 553, baseType: !7, size: 32, offset: 960)
!2316 = !DIDerivedType(tag: DW_TAG_member, name: "halokw", scope: !2288, file: !16, line: 554, baseType: !7, size: 32, offset: 992)
!2317 = !DIDerivedType(tag: DW_TAG_member, name: "halo", scope: !2288, file: !16, line: 554, baseType: !7, size: 32, offset: 1024)
!2318 = !DIDerivedType(tag: DW_TAG_member, name: "falloff_type", scope: !2288, file: !16, line: 556, baseType: !43, size: 16, offset: 1056)
!2319 = !DIDerivedType(tag: DW_TAG_member, name: "ld1", scope: !2288, file: !16, line: 557, baseType: !7, size: 32, offset: 1088)
!2320 = !DIDerivedType(tag: DW_TAG_member, name: "ld2", scope: !2288, file: !16, line: 557, baseType: !7, size: 32, offset: 1120)
!2321 = !DIDerivedType(tag: DW_TAG_member, name: "curfalloff", scope: !2288, file: !16, line: 558, baseType: !1048, size: 64, offset: 1152)
!2322 = !DIDerivedType(tag: DW_TAG_member, name: "bufsize", scope: !2288, file: !16, line: 562, baseType: !43, size: 16, offset: 1216)
!2323 = !DIDerivedType(tag: DW_TAG_member, name: "samp", scope: !2288, file: !16, line: 564, baseType: !43, size: 16, offset: 1232)
!2324 = !DIDerivedType(tag: DW_TAG_member, name: "soft", scope: !2288, file: !16, line: 566, baseType: !7, size: 32, offset: 1248)
!2325 = !DIDerivedType(tag: DW_TAG_member, name: "buffers", scope: !2288, file: !16, line: 568, baseType: !43, size: 16, offset: 1280)
!2326 = !DIDerivedType(tag: DW_TAG_member, name: "filtertype", scope: !2288, file: !16, line: 568, baseType: !43, size: 16, offset: 1296)
!2327 = !DIDerivedType(tag: DW_TAG_member, name: "buftype", scope: !2288, file: !16, line: 570, baseType: !43, size: 16, offset: 1312)
!2328 = !DIDerivedType(tag: DW_TAG_member, name: "bufflag", scope: !2288, file: !16, line: 572, baseType: !43, size: 16, offset: 1328)
!2329 = !DIDerivedType(tag: DW_TAG_member, name: "shadhalostep", scope: !2288, file: !16, line: 574, baseType: !43, size: 16, offset: 1344)
!2330 = !DIDerivedType(tag: DW_TAG_member, name: "clipsta", scope: !2288, file: !16, line: 576, baseType: !7, size: 32, offset: 1376)
!2331 = !DIDerivedType(tag: DW_TAG_member, name: "clipend", scope: !2288, file: !16, line: 578, baseType: !7, size: 32, offset: 1408)
!2332 = !DIDerivedType(tag: DW_TAG_member, name: "bias", scope: !2288, file: !16, line: 580, baseType: !7, size: 32, offset: 1440)
!2333 = !DIDerivedType(tag: DW_TAG_member, name: "compressthresh", scope: !2288, file: !16, line: 582, baseType: !7, size: 32, offset: 1472)
!2334 = !DIDerivedType(tag: DW_TAG_member, name: "ray_samp", scope: !2288, file: !16, line: 584, baseType: !43, size: 16, offset: 1504)
!2335 = !DIDerivedType(tag: DW_TAG_member, name: "ray_sampy", scope: !2288, file: !16, line: 584, baseType: !43, size: 16, offset: 1520)
!2336 = !DIDerivedType(tag: DW_TAG_member, name: "ray_sampz", scope: !2288, file: !16, line: 584, baseType: !43, size: 16, offset: 1536)
!2337 = !DIDerivedType(tag: DW_TAG_member, name: "ray_samp_method", scope: !2288, file: !16, line: 584, baseType: !43, size: 16, offset: 1552)
!2338 = !DIDerivedType(tag: DW_TAG_member, name: "ray_samp_type", scope: !2288, file: !16, line: 584, baseType: !43, size: 16, offset: 1568)
!2339 = !DIDerivedType(tag: DW_TAG_member, name: "area_shape", scope: !2288, file: !16, line: 584, baseType: !43, size: 16, offset: 1584)
!2340 = !DIDerivedType(tag: DW_TAG_member, name: "ray_totsamp", scope: !2288, file: !16, line: 584, baseType: !43, size: 16, offset: 1600)
!2341 = !DIDerivedType(tag: DW_TAG_member, name: "xold", scope: !2288, file: !16, line: 585, baseType: !2342, size: 16, offset: 1616)
!2342 = !DICompositeType(tag: DW_TAG_array_type, baseType: !43, size: 16, elements: !307)
!2343 = !DIDerivedType(tag: DW_TAG_member, name: "yold", scope: !2288, file: !16, line: 585, baseType: !2342, size: 16, offset: 1632)
!2344 = !DIDerivedType(tag: DW_TAG_member, name: "area_size", scope: !2288, file: !16, line: 586, baseType: !7, size: 32, offset: 1664)
!2345 = !DIDerivedType(tag: DW_TAG_member, name: "area_sizey", scope: !2288, file: !16, line: 586, baseType: !7, size: 32, offset: 1696)
!2346 = !DIDerivedType(tag: DW_TAG_member, name: "area_sizez", scope: !2288, file: !16, line: 586, baseType: !7, size: 32, offset: 1728)
!2347 = !DIDerivedType(tag: DW_TAG_member, name: "adapt_thresh", scope: !2288, file: !16, line: 587, baseType: !7, size: 32, offset: 1760)
!2348 = !DIDerivedType(tag: DW_TAG_member, name: "sunsky", scope: !2288, file: !16, line: 590, baseType: !2349, size: 64, offset: 1792)
!2349 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2350, size: 64)
!2350 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SunSky", file: !2351, line: 32, size: 1792, elements: !2352)
!2351 = !DIFile(filename: "blender/source/blender/render/intern/include/sunsky.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2352 = !{!2353, !2354, !2355, !2356, !2357, !2358, !2359, !2360, !2361, !2362, !2363, !2364, !2366, !2367, !2368, !2369, !2370, !2371, !2372, !2373, !2374, !2375, !2376, !2377, !2378, !2379, !2380, !2381, !2382, !2383, !2384, !2385, !2386}
!2353 = !DIDerivedType(tag: DW_TAG_member, name: "effect_type", scope: !2350, file: !2351, line: 33, baseType: !43, size: 16)
!2354 = !DIDerivedType(tag: DW_TAG_member, name: "skyblendtype", scope: !2350, file: !2351, line: 33, baseType: !43, size: 16, offset: 16)
!2355 = !DIDerivedType(tag: DW_TAG_member, name: "sky_colorspace", scope: !2350, file: !2351, line: 33, baseType: !43, size: 16, offset: 32)
!2356 = !DIDerivedType(tag: DW_TAG_member, name: "turbidity", scope: !2350, file: !2351, line: 34, baseType: !7, size: 32, offset: 64)
!2357 = !DIDerivedType(tag: DW_TAG_member, name: "theta", scope: !2350, file: !2351, line: 35, baseType: !7, size: 32, offset: 96)
!2358 = !DIDerivedType(tag: DW_TAG_member, name: "phi", scope: !2350, file: !2351, line: 35, baseType: !7, size: 32, offset: 128)
!2359 = !DIDerivedType(tag: DW_TAG_member, name: "toSun", scope: !2350, file: !2351, line: 37, baseType: !206, size: 96, offset: 160)
!2360 = !DIDerivedType(tag: DW_TAG_member, name: "sunSolidAngle", scope: !2350, file: !2351, line: 40, baseType: !7, size: 32, offset: 256)
!2361 = !DIDerivedType(tag: DW_TAG_member, name: "zenith_Y", scope: !2350, file: !2351, line: 42, baseType: !7, size: 32, offset: 288)
!2362 = !DIDerivedType(tag: DW_TAG_member, name: "zenith_x", scope: !2350, file: !2351, line: 42, baseType: !7, size: 32, offset: 320)
!2363 = !DIDerivedType(tag: DW_TAG_member, name: "zenith_y", scope: !2350, file: !2351, line: 42, baseType: !7, size: 32, offset: 352)
!2364 = !DIDerivedType(tag: DW_TAG_member, name: "perez_Y", scope: !2350, file: !2351, line: 44, baseType: !2365, size: 160, offset: 384)
!2365 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 160, elements: !803)
!2366 = !DIDerivedType(tag: DW_TAG_member, name: "perez_x", scope: !2350, file: !2351, line: 44, baseType: !2365, size: 160, offset: 544)
!2367 = !DIDerivedType(tag: DW_TAG_member, name: "perez_y", scope: !2350, file: !2351, line: 44, baseType: !2365, size: 160, offset: 704)
!2368 = !DIDerivedType(tag: DW_TAG_member, name: "horizon_brightness", scope: !2350, file: !2351, line: 47, baseType: !7, size: 32, offset: 864)
!2369 = !DIDerivedType(tag: DW_TAG_member, name: "spread", scope: !2350, file: !2351, line: 48, baseType: !7, size: 32, offset: 896)
!2370 = !DIDerivedType(tag: DW_TAG_member, name: "sun_brightness", scope: !2350, file: !2351, line: 49, baseType: !7, size: 32, offset: 928)
!2371 = !DIDerivedType(tag: DW_TAG_member, name: "sun_size", scope: !2350, file: !2351, line: 50, baseType: !7, size: 32, offset: 960)
!2372 = !DIDerivedType(tag: DW_TAG_member, name: "backscattered_light", scope: !2350, file: !2351, line: 51, baseType: !7, size: 32, offset: 992)
!2373 = !DIDerivedType(tag: DW_TAG_member, name: "skyblendfac", scope: !2350, file: !2351, line: 52, baseType: !7, size: 32, offset: 1024)
!2374 = !DIDerivedType(tag: DW_TAG_member, name: "sky_exposure", scope: !2350, file: !2351, line: 53, baseType: !7, size: 32, offset: 1056)
!2375 = !DIDerivedType(tag: DW_TAG_member, name: "atm_HGg", scope: !2350, file: !2351, line: 55, baseType: !7, size: 32, offset: 1088)
!2376 = !DIDerivedType(tag: DW_TAG_member, name: "atm_SunIntensity", scope: !2350, file: !2351, line: 57, baseType: !7, size: 32, offset: 1120)
!2377 = !DIDerivedType(tag: DW_TAG_member, name: "atm_InscatteringMultiplier", scope: !2350, file: !2351, line: 58, baseType: !7, size: 32, offset: 1152)
!2378 = !DIDerivedType(tag: DW_TAG_member, name: "atm_ExtinctionMultiplier", scope: !2350, file: !2351, line: 59, baseType: !7, size: 32, offset: 1184)
!2379 = !DIDerivedType(tag: DW_TAG_member, name: "atm_BetaRayMultiplier", scope: !2350, file: !2351, line: 60, baseType: !7, size: 32, offset: 1216)
!2380 = !DIDerivedType(tag: DW_TAG_member, name: "atm_BetaMieMultiplier", scope: !2350, file: !2351, line: 61, baseType: !7, size: 32, offset: 1248)
!2381 = !DIDerivedType(tag: DW_TAG_member, name: "atm_DistanceMultiplier", scope: !2350, file: !2351, line: 62, baseType: !7, size: 32, offset: 1280)
!2382 = !DIDerivedType(tag: DW_TAG_member, name: "atm_BetaRay", scope: !2350, file: !2351, line: 64, baseType: !206, size: 96, offset: 1312)
!2383 = !DIDerivedType(tag: DW_TAG_member, name: "atm_BetaDashRay", scope: !2350, file: !2351, line: 65, baseType: !206, size: 96, offset: 1408)
!2384 = !DIDerivedType(tag: DW_TAG_member, name: "atm_BetaMie", scope: !2350, file: !2351, line: 66, baseType: !206, size: 96, offset: 1504)
!2385 = !DIDerivedType(tag: DW_TAG_member, name: "atm_BetaDashMie", scope: !2350, file: !2351, line: 67, baseType: !206, size: 96, offset: 1600)
!2386 = !DIDerivedType(tag: DW_TAG_member, name: "atm_BetaRM", scope: !2350, file: !2351, line: 68, baseType: !206, size: 96, offset: 1696)
!2387 = !DIDerivedType(tag: DW_TAG_member, name: "shb", scope: !2288, file: !16, line: 592, baseType: !2388, size: 64, offset: 1856)
!2388 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2389, size: 64)
!2389 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ShadBuf", file: !16, line: 297, size: 2240, elements: !2390)
!2390 = !{!2391, !2392, !2393, !2394, !2395, !2396, !2397, !2398, !2399, !2400, !2401, !2402, !2403, !2404, !2405, !2406, !2407, !2408}
!2391 = !DIDerivedType(tag: DW_TAG_member, name: "samp", scope: !2389, file: !16, line: 299, baseType: !43, size: 16)
!2392 = !DIDerivedType(tag: DW_TAG_member, name: "shadhalostep", scope: !2389, file: !16, line: 299, baseType: !43, size: 16, offset: 16)
!2393 = !DIDerivedType(tag: DW_TAG_member, name: "totbuf", scope: !2389, file: !16, line: 299, baseType: !43, size: 16, offset: 32)
!2394 = !DIDerivedType(tag: DW_TAG_member, name: "persmat", scope: !2389, file: !16, line: 300, baseType: !478, size: 512, offset: 64)
!2395 = !DIDerivedType(tag: DW_TAG_member, name: "viewmat", scope: !2389, file: !16, line: 301, baseType: !478, size: 512, offset: 576)
!2396 = !DIDerivedType(tag: DW_TAG_member, name: "winmat", scope: !2389, file: !16, line: 302, baseType: !478, size: 512, offset: 1088)
!2397 = !DIDerivedType(tag: DW_TAG_member, name: "jit", scope: !2389, file: !16, line: 303, baseType: !63, size: 64, offset: 1600)
!2398 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !2389, file: !16, line: 303, baseType: !63, size: 64, offset: 1664)
!2399 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !2389, file: !16, line: 304, baseType: !7, size: 32, offset: 1728)
!2400 = !DIDerivedType(tag: DW_TAG_member, name: "clipend", scope: !2389, file: !16, line: 304, baseType: !7, size: 32, offset: 1760)
!2401 = !DIDerivedType(tag: DW_TAG_member, name: "pixsize", scope: !2389, file: !16, line: 304, baseType: !7, size: 32, offset: 1792)
!2402 = !DIDerivedType(tag: DW_TAG_member, name: "soft", scope: !2389, file: !16, line: 304, baseType: !7, size: 32, offset: 1824)
!2403 = !DIDerivedType(tag: DW_TAG_member, name: "compressthresh", scope: !2389, file: !16, line: 304, baseType: !7, size: 32, offset: 1856)
!2404 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !2389, file: !16, line: 305, baseType: !776, size: 96, offset: 1888)
!2405 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2389, file: !16, line: 306, baseType: !8, size: 32, offset: 1984)
!2406 = !DIDerivedType(tag: DW_TAG_member, name: "bias", scope: !2389, file: !16, line: 306, baseType: !8, size: 32, offset: 2016)
!2407 = !DIDerivedType(tag: DW_TAG_member, name: "buffers", scope: !2389, file: !16, line: 307, baseType: !77, size: 128, offset: 2048)
!2408 = !DIDerivedType(tag: DW_TAG_member, name: "isb_result", scope: !2389, file: !16, line: 310, baseType: !2409, size: 64, offset: 2176)
!2409 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2410, size: 64, elements: !307)
!2410 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2411, size: 64)
!2411 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ISBData", file: !2216, line: 106, size: 320, elements: !2412)
!2412 = !{!2413, !2414, !2425, !2426, !2427, !2428, !2429}
!2413 = !DIDerivedType(tag: DW_TAG_member, name: "shadfacs", scope: !2411, file: !2216, line: 107, baseType: !2221, size: 64)
!2414 = !DIDerivedType(tag: DW_TAG_member, name: "shadfaca", scope: !2411, file: !2216, line: 108, baseType: !2415, size: 64, offset: 64)
!2415 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2416, size: 64)
!2416 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2417, size: 64)
!2417 = !DIDerivedType(tag: DW_TAG_typedef, name: "ISBShadfacA", file: !2216, line: 103, baseType: !2418)
!2418 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ISBShadfacA", file: !2216, line: 98, size: 192, elements: !2419)
!2419 = !{!2420, !2422, !2423, !2424}
!2420 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2418, file: !2216, line: 99, baseType: !2421, size: 64)
!2421 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2418, size: 64)
!2422 = !DIDerivedType(tag: DW_TAG_member, name: "obi", scope: !2418, file: !2216, line: 100, baseType: !8, size: 32, offset: 64)
!2423 = !DIDerivedType(tag: DW_TAG_member, name: "facenr", scope: !2418, file: !2216, line: 101, baseType: !8, size: 32, offset: 96)
!2424 = !DIDerivedType(tag: DW_TAG_member, name: "shadfac", scope: !2418, file: !2216, line: 102, baseType: !7, size: 32, offset: 128)
!2425 = !DIDerivedType(tag: DW_TAG_member, name: "memarena", scope: !2411, file: !2216, line: 109, baseType: !2136, size: 64, offset: 128)
!2426 = !DIDerivedType(tag: DW_TAG_member, name: "minx", scope: !2411, file: !2216, line: 110, baseType: !8, size: 32, offset: 192)
!2427 = !DIDerivedType(tag: DW_TAG_member, name: "miny", scope: !2411, file: !2216, line: 110, baseType: !8, size: 32, offset: 224)
!2428 = !DIDerivedType(tag: DW_TAG_member, name: "rectx", scope: !2411, file: !2216, line: 110, baseType: !8, size: 32, offset: 256)
!2429 = !DIDerivedType(tag: DW_TAG_member, name: "recty", scope: !2411, file: !2216, line: 110, baseType: !8, size: 32, offset: 288)
!2430 = !DIDerivedType(tag: DW_TAG_member, name: "jitter", scope: !2288, file: !16, line: 593, baseType: !63, size: 64, offset: 1920)
!2431 = !DIDerivedType(tag: DW_TAG_member, name: "imat", scope: !2288, file: !16, line: 595, baseType: !1528, size: 288, offset: 1984)
!2432 = !DIDerivedType(tag: DW_TAG_member, name: "spottexfac", scope: !2288, file: !16, line: 596, baseType: !7, size: 32, offset: 2272)
!2433 = !DIDerivedType(tag: DW_TAG_member, name: "sh_invcampos", scope: !2288, file: !16, line: 597, baseType: !206, size: 96, offset: 2304)
!2434 = !DIDerivedType(tag: DW_TAG_member, name: "sh_zfac", scope: !2288, file: !16, line: 597, baseType: !7, size: 32, offset: 2400)
!2435 = !DIDerivedType(tag: DW_TAG_member, name: "lampmat", scope: !2288, file: !16, line: 599, baseType: !478, size: 512, offset: 2432)
!2436 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !2288, file: !16, line: 601, baseType: !1528, size: 288, offset: 2944)
!2437 = !DIDerivedType(tag: DW_TAG_member, name: "area", scope: !2288, file: !16, line: 602, baseType: !369, size: 768, offset: 3232)
!2438 = !DIDerivedType(tag: DW_TAG_member, name: "areasize", scope: !2288, file: !16, line: 602, baseType: !7, size: 32, offset: 4000)
!2439 = !DIDerivedType(tag: DW_TAG_member, name: "shadsamp", scope: !2288, file: !16, line: 605, baseType: !2440, size: 64, offset: 4032)
!2440 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2441, size: 64)
!2441 = !DIDerivedType(tag: DW_TAG_typedef, name: "LampShadowSample", file: !16, line: 538, baseType: !2442)
!2442 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "LampShadowSample", file: !16, line: 536, size: 2560, elements: !2443)
!2443 = !{!2444}
!2444 = !DIDerivedType(tag: DW_TAG_member, name: "s", scope: !2442, file: !16, line: 537, baseType: !2445, size: 2560)
!2445 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2446, size: 2560, elements: !1758)
!2446 = !DIDerivedType(tag: DW_TAG_typedef, name: "LampShadowSubSample", file: !16, line: 534, baseType: !2447)
!2447 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "LampShadowSubSample", file: !16, line: 531, size: 160, elements: !2448)
!2448 = !{!2449, !2450}
!2449 = !DIDerivedType(tag: DW_TAG_member, name: "samplenr", scope: !2447, file: !16, line: 532, baseType: !8, size: 32)
!2450 = !DIDerivedType(tag: DW_TAG_member, name: "shadfac", scope: !2447, file: !16, line: 533, baseType: !288, size: 128, offset: 32)
!2451 = !DIDerivedType(tag: DW_TAG_member, name: "last_hit", scope: !2288, file: !16, line: 608, baseType: !2452, size: 64, offset: 4096)
!2452 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1850, size: 64, elements: !307)
!2453 = !DIDerivedType(tag: DW_TAG_member, name: "mtex", scope: !2288, file: !16, line: 610, baseType: !332, size: 1152, offset: 4160)
!2454 = !DIDerivedType(tag: DW_TAG_member, name: "thread_assigned", scope: !2288, file: !16, line: 613, baseType: !8, size: 32, offset: 5312)
!2455 = !DIDerivedType(tag: DW_TAG_member, name: "thread_ready", scope: !2288, file: !16, line: 614, baseType: !8, size: 32, offset: 5344)
!2456 = !DILocalVariable(name: "re", arg: 1, scope: !2283, file: !3, line: 764, type: !29)
!2457 = !DILocation(line: 764, column: 28, scope: !2283)
!2458 = !DILocalVariable(name: "lar", arg: 2, scope: !2283, file: !3, line: 764, type: !2286)
!2459 = !DILocation(line: 764, column: 41, scope: !2283)
!2460 = !DILocalVariable(name: "shb", scope: !2283, file: !3, line: 766, type: !2461)
!2461 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2462, size: 64)
!2462 = !DIDerivedType(tag: DW_TAG_typedef, name: "ShadBuf", file: !16, line: 311, baseType: !2389)
!2463 = !DILocation(line: 766, column: 11, scope: !2283)
!2464 = !DILocation(line: 766, column: 16, scope: !2283)
!2465 = !DILocation(line: 766, column: 21, scope: !2283)
!2466 = !DILocalVariable(name: "wsize", scope: !2283, file: !3, line: 767, type: !7)
!2467 = !DILocation(line: 767, column: 8, scope: !2283)
!2468 = !DILocalVariable(name: "jitbuf", scope: !2283, file: !3, line: 767, type: !63)
!2469 = !DILocation(line: 767, column: 16, scope: !2283)
!2470 = !DILocalVariable(name: "twozero", scope: !2283, file: !3, line: 767, type: !10)
!2471 = !DILocation(line: 767, column: 24, scope: !2283)
!2472 = !DILocalVariable(name: "angle", scope: !2283, file: !3, line: 767, type: !7)
!2473 = !DILocation(line: 767, column: 50, scope: !2283)
!2474 = !DILocalVariable(name: "temp", scope: !2283, file: !3, line: 767, type: !7)
!2475 = !DILocation(line: 767, column: 57, scope: !2283)
!2476 = !DILocation(line: 769, column: 6, scope: !2477)
!2477 = distinct !DILexicalBlock(scope: !2283, file: !3, line: 769, column: 6)
!2478 = !DILocation(line: 769, column: 11, scope: !2477)
!2479 = !DILocation(line: 769, column: 19, scope: !2477)
!2480 = !DILocation(line: 769, column: 6, scope: !2283)
!2481 = !DILocation(line: 770, column: 22, scope: !2477)
!2482 = !DILocation(line: 770, column: 26, scope: !2477)
!2483 = !DILocation(line: 770, column: 3, scope: !2477)
!2484 = !DILocation(line: 773, column: 6, scope: !2485)
!2485 = distinct !DILexicalBlock(scope: !2283, file: !3, line: 773, column: 6)
!2486 = !DILocation(line: 773, column: 11, scope: !2485)
!2487 = !DILocation(line: 773, column: 18, scope: !2485)
!2488 = !DILocation(line: 773, column: 6, scope: !2283)
!2489 = !DILocation(line: 774, column: 3, scope: !2485)
!2490 = !DILocation(line: 774, column: 8, scope: !2485)
!2491 = !DILocation(line: 774, column: 12, scope: !2485)
!2492 = !DILocation(line: 779, column: 16, scope: !2283)
!2493 = !DILocation(line: 779, column: 21, scope: !2283)
!2494 = !DILocation(line: 779, column: 9, scope: !2283)
!2495 = !DILocation(line: 779, column: 7, scope: !2283)
!2496 = !DILocation(line: 780, column: 16, scope: !2283)
!2497 = !DILocation(line: 780, column: 21, scope: !2283)
!2498 = !DILocation(line: 780, column: 14, scope: !2283)
!2499 = !DILocation(line: 780, column: 33, scope: !2283)
!2500 = !DILocation(line: 780, column: 28, scope: !2283)
!2501 = !DILocation(line: 780, column: 26, scope: !2283)
!2502 = !DILocation(line: 780, column: 47, scope: !2283)
!2503 = !DILocation(line: 780, column: 42, scope: !2283)
!2504 = !DILocation(line: 780, column: 40, scope: !2283)
!2505 = !DILocation(line: 780, column: 7, scope: !2283)
!2506 = !DILocation(line: 781, column: 17, scope: !2283)
!2507 = !DILocation(line: 781, column: 22, scope: !2283)
!2508 = !DILocation(line: 781, column: 25, scope: !2283)
!2509 = !DILocation(line: 781, column: 24, scope: !2283)
!2510 = !DILocation(line: 781, column: 2, scope: !2283)
!2511 = !DILocation(line: 781, column: 7, scope: !2283)
!2512 = !DILocation(line: 781, column: 14, scope: !2283)
!2513 = !DILocation(line: 782, column: 9, scope: !2283)
!2514 = !DILocation(line: 782, column: 14, scope: !2283)
!2515 = !DILocation(line: 782, column: 23, scope: !2283)
!2516 = !DILocation(line: 782, column: 28, scope: !2283)
!2517 = !DILocation(line: 782, column: 32, scope: !2283)
!2518 = !DILocation(line: 782, column: 21, scope: !2283)
!2519 = !DILocation(line: 782, column: 7, scope: !2283)
!2520 = !DILocation(line: 784, column: 17, scope: !2283)
!2521 = !DILocation(line: 784, column: 22, scope: !2283)
!2522 = !DILocation(line: 784, column: 31, scope: !2283)
!2523 = !DILocation(line: 784, column: 30, scope: !2283)
!2524 = !DILocation(line: 784, column: 38, scope: !2283)
!2525 = !DILocation(line: 784, column: 46, scope: !2283)
!2526 = !DILocation(line: 784, column: 45, scope: !2283)
!2527 = !DILocation(line: 784, column: 53, scope: !2283)
!2528 = !DILocation(line: 784, column: 60, scope: !2283)
!2529 = !DILocation(line: 784, column: 65, scope: !2283)
!2530 = !DILocation(line: 784, column: 68, scope: !2283)
!2531 = !DILocation(line: 784, column: 73, scope: !2283)
!2532 = !DILocation(line: 784, column: 2, scope: !2283)
!2533 = !DILocation(line: 785, column: 14, scope: !2283)
!2534 = !DILocation(line: 785, column: 19, scope: !2283)
!2535 = !DILocation(line: 785, column: 28, scope: !2283)
!2536 = !DILocation(line: 785, column: 33, scope: !2283)
!2537 = !DILocation(line: 785, column: 41, scope: !2283)
!2538 = !DILocation(line: 785, column: 46, scope: !2283)
!2539 = !DILocation(line: 785, column: 2, scope: !2283)
!2540 = !DILocation(line: 787, column: 6, scope: !2541)
!2541 = distinct !DILexicalBlock(scope: !2283, file: !3, line: 787, column: 6)
!2542 = !DILocation(line: 787, column: 6, scope: !2283)
!2543 = !DILocation(line: 788, column: 16, scope: !2544)
!2544 = distinct !DILexicalBlock(scope: !2541, file: !3, line: 787, column: 83)
!2545 = !DILocation(line: 788, column: 21, scope: !2544)
!2546 = !DILocation(line: 788, column: 3, scope: !2544)
!2547 = !DILocation(line: 788, column: 8, scope: !2544)
!2548 = !DILocation(line: 788, column: 14, scope: !2544)
!2549 = !DILocation(line: 791, column: 3, scope: !2544)
!2550 = !DILocation(line: 792, column: 56, scope: !2544)
!2551 = !DILocation(line: 792, column: 60, scope: !2544)
!2552 = !DILocation(line: 792, column: 63, scope: !2544)
!2553 = !DILocation(line: 792, column: 68, scope: !2544)
!2554 = !DILocation(line: 792, column: 29, scope: !2544)
!2555 = !DILocation(line: 792, column: 13, scope: !2544)
!2556 = !DILocation(line: 792, column: 3, scope: !2544)
!2557 = !DILocation(line: 792, column: 8, scope: !2544)
!2558 = !DILocation(line: 792, column: 11, scope: !2544)
!2559 = !DILocation(line: 793, column: 26, scope: !2544)
!2560 = !DILocation(line: 793, column: 30, scope: !2544)
!2561 = !DILocation(line: 793, column: 35, scope: !2544)
!2562 = !DILocation(line: 793, column: 40, scope: !2544)
!2563 = !DILocation(line: 793, column: 3, scope: !2544)
!2564 = !DILocation(line: 794, column: 3, scope: !2544)
!2565 = !DILocation(line: 796, column: 7, scope: !2566)
!2566 = distinct !DILexicalBlock(scope: !2544, file: !3, line: 796, column: 7)
!2567 = !DILocation(line: 796, column: 12, scope: !2566)
!2568 = !DILocation(line: 796, column: 18, scope: !2566)
!2569 = !DILocation(line: 796, column: 7, scope: !2544)
!2570 = !DILocation(line: 796, column: 31, scope: !2566)
!2571 = !DILocation(line: 796, column: 29, scope: !2566)
!2572 = !DILocation(line: 796, column: 23, scope: !2566)
!2573 = !DILocation(line: 797, column: 12, scope: !2574)
!2574 = distinct !DILexicalBlock(scope: !2566, file: !3, line: 797, column: 12)
!2575 = !DILocation(line: 797, column: 17, scope: !2574)
!2576 = !DILocation(line: 797, column: 23, scope: !2574)
!2577 = !DILocation(line: 797, column: 12, scope: !2566)
!2578 = !DILocation(line: 797, column: 36, scope: !2574)
!2579 = !DILocation(line: 797, column: 34, scope: !2574)
!2580 = !DILocation(line: 797, column: 28, scope: !2574)
!2581 = !DILocation(line: 798, column: 16, scope: !2574)
!2582 = !DILocation(line: 798, column: 14, scope: !2574)
!2583 = !DILocation(line: 801, column: 7, scope: !2584)
!2584 = distinct !DILexicalBlock(scope: !2544, file: !3, line: 801, column: 7)
!2585 = !DILocation(line: 801, column: 12, scope: !2584)
!2586 = !DILocation(line: 801, column: 20, scope: !2584)
!2587 = !DILocation(line: 801, column: 7, scope: !2544)
!2588 = !DILocation(line: 802, column: 22, scope: !2589)
!2589 = distinct !DILexicalBlock(scope: !2584, file: !3, line: 801, column: 40)
!2590 = !DILocation(line: 802, column: 26, scope: !2589)
!2591 = !DILocation(line: 802, column: 31, scope: !2589)
!2592 = !DILocation(line: 802, column: 4, scope: !2589)
!2593 = !DILocation(line: 803, column: 4, scope: !2589)
!2594 = !DILocation(line: 803, column: 9, scope: !2589)
!2595 = !DILocation(line: 803, column: 15, scope: !2589)
!2596 = !DILocation(line: 804, column: 3, scope: !2589)
!2597 = !DILocation(line: 806, column: 22, scope: !2584)
!2598 = !DILocation(line: 806, column: 26, scope: !2584)
!2599 = !DILocation(line: 806, column: 31, scope: !2584)
!2600 = !DILocation(line: 806, column: 4, scope: !2584)
!2601 = !DILocation(line: 809, column: 2, scope: !2544)
!2602 = !DILocation(line: 810, column: 1, scope: !2283)
!2603 = distinct !DISubprogram(name: "shadowbuf_autoclip", scope: !3, file: !3, line: 620, type: !2284, scopeLine: 621, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!2604 = !DILocalVariable(name: "re", arg: 1, scope: !2603, file: !3, line: 620, type: !29)
!2605 = !DILocation(line: 620, column: 40, scope: !2603)
!2606 = !DILocalVariable(name: "lar", arg: 2, scope: !2603, file: !3, line: 620, type: !2286)
!2607 = !DILocation(line: 620, column: 53, scope: !2603)
!2608 = !DILocalVariable(name: "obi", scope: !2603, file: !3, line: 622, type: !2609)
!2609 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2610, size: 64)
!2610 = !DIDerivedType(tag: DW_TAG_typedef, name: "ObjectInstanceRen", file: !16, line: 368, baseType: !1912)
!2611 = !DILocation(line: 622, column: 21, scope: !2603)
!2612 = !DILocalVariable(name: "obr", scope: !2603, file: !3, line: 623, type: !1917)
!2613 = !DILocation(line: 623, column: 13, scope: !2603)
!2614 = !DILocalVariable(name: "vlr", scope: !2603, file: !3, line: 624, type: !2615)
!2615 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2616, size: 64)
!2616 = !DIDerivedType(tag: DW_TAG_typedef, name: "VlakRen", file: !16, line: 411, baseType: !1969)
!2617 = !DILocation(line: 624, column: 11, scope: !2603)
!2618 = !DILocalVariable(name: "ver", scope: !2603, file: !3, line: 625, type: !2619)
!2619 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2620, size: 64)
!2620 = !DIDerivedType(tag: DW_TAG_typedef, name: "VertRen", file: !16, line: 380, baseType: !1949)
!2621 = !DILocation(line: 625, column: 11, scope: !2603)
!2622 = !DILocalVariable(name: "ma", scope: !2603, file: !3, line: 626, type: !2623)
!2623 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2624, size: 64)
!2624 = !DIDerivedType(tag: DW_TAG_typedef, name: "Material", file: !105, line: 203, baseType: !104)
!2625 = !DILocation(line: 626, column: 12, scope: !2603)
!2626 = !DILocalVariable(name: "minz", scope: !2603, file: !3, line: 627, type: !7)
!2627 = !DILocation(line: 627, column: 8, scope: !2603)
!2628 = !DILocalVariable(name: "maxz", scope: !2603, file: !3, line: 627, type: !7)
!2629 = !DILocation(line: 627, column: 14, scope: !2603)
!2630 = !DILocalVariable(name: "vec", scope: !2603, file: !3, line: 627, type: !206)
!2631 = !DILocation(line: 627, column: 20, scope: !2603)
!2632 = !DILocalVariable(name: "viewmat", scope: !2603, file: !3, line: 627, type: !478)
!2633 = !DILocation(line: 627, column: 28, scope: !2603)
!2634 = !DILocalVariable(name: "obviewmat", scope: !2603, file: !3, line: 627, type: !478)
!2635 = !DILocation(line: 627, column: 43, scope: !2603)
!2636 = !DILocalVariable(name: "lay", scope: !2603, file: !3, line: 628, type: !96)
!2637 = !DILocation(line: 628, column: 15, scope: !2603)
!2638 = !DILocalVariable(name: "i", scope: !2603, file: !3, line: 629, type: !8)
!2639 = !DILocation(line: 629, column: 6, scope: !2603)
!2640 = !DILocalVariable(name: "a", scope: !2603, file: !3, line: 629, type: !8)
!2641 = !DILocation(line: 629, column: 9, scope: !2603)
!2642 = !DILocalVariable(name: "maxtotvert", scope: !2603, file: !3, line: 629, type: !8)
!2643 = !DILocation(line: 629, column: 12, scope: !2603)
!2644 = !DILocalVariable(name: "ok", scope: !2603, file: !3, line: 629, type: !8)
!2645 = !DILocation(line: 629, column: 24, scope: !2603)
!2646 = !DILocalVariable(name: "clipflag", scope: !2603, file: !3, line: 630, type: !27)
!2647 = !DILocation(line: 630, column: 8, scope: !2603)
!2648 = !DILocation(line: 632, column: 6, scope: !2603)
!2649 = !DILocation(line: 632, column: 21, scope: !2603)
!2650 = !DILocation(line: 633, column: 13, scope: !2603)
!2651 = !DILocation(line: 633, column: 22, scope: !2603)
!2652 = !DILocation(line: 633, column: 27, scope: !2603)
!2653 = !DILocation(line: 633, column: 32, scope: !2603)
!2654 = !DILocation(line: 633, column: 2, scope: !2603)
!2655 = !DILocation(line: 635, column: 6, scope: !2656)
!2656 = distinct !DILexicalBlock(scope: !2603, file: !3, line: 635, column: 6)
!2657 = !DILocation(line: 635, column: 11, scope: !2656)
!2658 = !DILocation(line: 635, column: 16, scope: !2656)
!2659 = !DILocation(line: 635, column: 6, scope: !2603)
!2660 = !DILocation(line: 635, column: 51, scope: !2656)
!2661 = !DILocation(line: 635, column: 56, scope: !2656)
!2662 = !DILocation(line: 635, column: 49, scope: !2656)
!2663 = !DILocation(line: 635, column: 46, scope: !2656)
!2664 = !DILocation(line: 637, column: 12, scope: !2603)
!2665 = !DILocation(line: 638, column: 11, scope: !2666)
!2666 = distinct !DILexicalBlock(scope: !2603, file: !3, line: 638, column: 2)
!2667 = !DILocation(line: 638, column: 15, scope: !2666)
!2668 = !DILocation(line: 638, column: 27, scope: !2666)
!2669 = !DILocation(line: 638, column: 10, scope: !2666)
!2670 = !DILocation(line: 638, column: 7, scope: !2666)
!2671 = !DILocation(line: 638, column: 34, scope: !2672)
!2672 = distinct !DILexicalBlock(scope: !2666, file: !3, line: 638, column: 2)
!2673 = !DILocation(line: 638, column: 2, scope: !2666)
!2674 = !DILocation(line: 639, column: 23, scope: !2672)
!2675 = !DILocation(line: 639, column: 28, scope: !2672)
!2676 = !DILocation(line: 639, column: 37, scope: !2672)
!2677 = !DILocation(line: 639, column: 16, scope: !2672)
!2678 = !DILocation(line: 639, column: 14, scope: !2672)
!2679 = !DILocation(line: 639, column: 3, scope: !2672)
!2680 = !DILocation(line: 638, column: 43, scope: !2672)
!2681 = !DILocation(line: 638, column: 48, scope: !2672)
!2682 = !DILocation(line: 638, column: 42, scope: !2672)
!2683 = !DILocation(line: 638, column: 2, scope: !2672)
!2684 = distinct !{!2684, !2673, !2685}
!2685 = !DILocation(line: 639, column: 47, scope: !2666)
!2686 = !DILocation(line: 641, column: 12, scope: !2603)
!2687 = !DILocation(line: 641, column: 37, scope: !2603)
!2688 = !DILocation(line: 641, column: 36, scope: !2603)
!2689 = !DILocation(line: 641, column: 10, scope: !2603)
!2690 = !DILocation(line: 644, column: 8, scope: !2691)
!2691 = distinct !DILexicalBlock(scope: !2603, file: !3, line: 644, column: 2)
!2692 = !DILocation(line: 644, column: 16, scope: !2691)
!2693 = !DILocation(line: 644, column: 20, scope: !2691)
!2694 = !DILocation(line: 644, column: 34, scope: !2691)
!2695 = !DILocation(line: 644, column: 15, scope: !2691)
!2696 = !DILocation(line: 644, column: 7, scope: !2691)
!2697 = !DILocation(line: 644, column: 41, scope: !2698)
!2698 = distinct !DILexicalBlock(scope: !2691, file: !3, line: 644, column: 2)
!2699 = !DILocation(line: 644, column: 2, scope: !2691)
!2700 = !DILocation(line: 645, column: 8, scope: !2701)
!2701 = distinct !DILexicalBlock(scope: !2698, file: !3, line: 644, column: 66)
!2702 = !DILocation(line: 645, column: 13, scope: !2701)
!2703 = !DILocation(line: 645, column: 6, scope: !2701)
!2704 = !DILocation(line: 647, column: 7, scope: !2705)
!2705 = distinct !DILexicalBlock(scope: !2701, file: !3, line: 647, column: 7)
!2706 = !DILocation(line: 647, column: 12, scope: !2705)
!2707 = !DILocation(line: 647, column: 17, scope: !2705)
!2708 = !DILocation(line: 647, column: 7, scope: !2701)
!2709 = !DILocation(line: 648, column: 16, scope: !2705)
!2710 = !DILocation(line: 648, column: 27, scope: !2705)
!2711 = !DILocation(line: 648, column: 36, scope: !2705)
!2712 = !DILocation(line: 648, column: 41, scope: !2705)
!2713 = !DILocation(line: 648, column: 4, scope: !2705)
!2714 = !DILocation(line: 650, column: 15, scope: !2705)
!2715 = !DILocation(line: 650, column: 26, scope: !2705)
!2716 = !DILocation(line: 650, column: 4, scope: !2705)
!2717 = !DILocation(line: 652, column: 10, scope: !2701)
!2718 = !DILocation(line: 652, column: 36, scope: !2701)
!2719 = !DILocation(line: 652, column: 41, scope: !2701)
!2720 = !DILocation(line: 652, column: 35, scope: !2701)
!2721 = !DILocation(line: 652, column: 3, scope: !2701)
!2722 = !DILocation(line: 655, column: 9, scope: !2723)
!2723 = distinct !DILexicalBlock(scope: !2701, file: !3, line: 655, column: 3)
!2724 = !DILocation(line: 655, column: 8, scope: !2723)
!2725 = !DILocation(line: 655, column: 13, scope: !2726)
!2726 = distinct !DILexicalBlock(scope: !2723, file: !3, line: 655, column: 3)
!2727 = !DILocation(line: 655, column: 15, scope: !2726)
!2728 = !DILocation(line: 655, column: 20, scope: !2726)
!2729 = !DILocation(line: 655, column: 14, scope: !2726)
!2730 = !DILocation(line: 655, column: 3, scope: !2723)
!2731 = !DILocation(line: 656, column: 9, scope: !2732)
!2732 = distinct !DILexicalBlock(scope: !2733, file: !3, line: 656, column: 8)
!2733 = distinct !DILexicalBlock(scope: !2726, file: !3, line: 655, column: 34)
!2734 = !DILocation(line: 656, column: 11, scope: !2732)
!2735 = !DILocation(line: 656, column: 17, scope: !2732)
!2736 = !DILocation(line: 656, column: 8, scope: !2733)
!2737 = !DILocation(line: 656, column: 27, scope: !2732)
!2738 = !DILocation(line: 656, column: 32, scope: !2732)
!2739 = !DILocation(line: 656, column: 42, scope: !2732)
!2740 = !DILocation(line: 656, column: 43, scope: !2732)
!2741 = !DILocation(line: 656, column: 48, scope: !2732)
!2742 = !DILocation(line: 656, column: 25, scope: !2732)
!2743 = !DILocation(line: 656, column: 22, scope: !2732)
!2744 = !DILocation(line: 657, column: 12, scope: !2732)
!2745 = !DILocation(line: 660, column: 8, scope: !2746)
!2746 = distinct !DILexicalBlock(scope: !2733, file: !3, line: 660, column: 8)
!2747 = !DILocation(line: 660, column: 13, scope: !2746)
!2748 = !DILocation(line: 660, column: 19, scope: !2746)
!2749 = !DILocation(line: 660, column: 16, scope: !2746)
!2750 = !DILocation(line: 660, column: 8, scope: !2733)
!2751 = !DILocation(line: 661, column: 9, scope: !2752)
!2752 = distinct !DILexicalBlock(scope: !2746, file: !3, line: 660, column: 23)
!2753 = !DILocation(line: 661, column: 14, scope: !2752)
!2754 = !DILocation(line: 661, column: 7, scope: !2752)
!2755 = !DILocation(line: 662, column: 7, scope: !2752)
!2756 = !DILocation(line: 663, column: 10, scope: !2757)
!2757 = distinct !DILexicalBlock(scope: !2752, file: !3, line: 663, column: 9)
!2758 = !DILocation(line: 663, column: 14, scope: !2757)
!2759 = !DILocation(line: 663, column: 20, scope: !2757)
!2760 = !DILocation(line: 663, column: 36, scope: !2757)
!2761 = !DILocation(line: 663, column: 40, scope: !2757)
!2762 = !DILocation(line: 663, column: 44, scope: !2757)
!2763 = !DILocation(line: 663, column: 48, scope: !2757)
!2764 = !DILocation(line: 663, column: 53, scope: !2757)
!2765 = !DILocation(line: 663, column: 66, scope: !2757)
!2766 = !DILocation(line: 663, column: 9, scope: !2752)
!2767 = !DILocation(line: 663, column: 73, scope: !2757)
!2768 = !DILocation(line: 663, column: 71, scope: !2757)
!2769 = !DILocation(line: 664, column: 4, scope: !2752)
!2770 = !DILocation(line: 666, column: 8, scope: !2771)
!2771 = distinct !DILexicalBlock(scope: !2733, file: !3, line: 666, column: 8)
!2772 = !DILocation(line: 666, column: 11, scope: !2771)
!2773 = !DILocation(line: 666, column: 15, scope: !2771)
!2774 = !DILocation(line: 666, column: 20, scope: !2771)
!2775 = !DILocation(line: 666, column: 26, scope: !2771)
!2776 = !DILocation(line: 666, column: 24, scope: !2771)
!2777 = !DILocation(line: 666, column: 8, scope: !2733)
!2778 = !DILocation(line: 667, column: 5, scope: !2779)
!2779 = distinct !DILexicalBlock(scope: !2771, file: !3, line: 666, column: 32)
!2780 = !DILocation(line: 667, column: 14, scope: !2779)
!2781 = !DILocation(line: 667, column: 19, scope: !2779)
!2782 = !DILocation(line: 667, column: 23, scope: !2779)
!2783 = !DILocation(line: 667, column: 29, scope: !2779)
!2784 = !DILocation(line: 668, column: 5, scope: !2779)
!2785 = !DILocation(line: 668, column: 14, scope: !2779)
!2786 = !DILocation(line: 668, column: 19, scope: !2779)
!2787 = !DILocation(line: 668, column: 23, scope: !2779)
!2788 = !DILocation(line: 668, column: 29, scope: !2779)
!2789 = !DILocation(line: 669, column: 5, scope: !2779)
!2790 = !DILocation(line: 669, column: 14, scope: !2779)
!2791 = !DILocation(line: 669, column: 19, scope: !2779)
!2792 = !DILocation(line: 669, column: 23, scope: !2779)
!2793 = !DILocation(line: 669, column: 29, scope: !2779)
!2794 = !DILocation(line: 670, column: 9, scope: !2795)
!2795 = distinct !DILexicalBlock(scope: !2779, file: !3, line: 670, column: 9)
!2796 = !DILocation(line: 670, column: 14, scope: !2795)
!2797 = !DILocation(line: 670, column: 9, scope: !2779)
!2798 = !DILocation(line: 670, column: 18, scope: !2795)
!2799 = !DILocation(line: 670, column: 27, scope: !2795)
!2800 = !DILocation(line: 670, column: 32, scope: !2795)
!2801 = !DILocation(line: 670, column: 36, scope: !2795)
!2802 = !DILocation(line: 670, column: 42, scope: !2795)
!2803 = !DILocation(line: 671, column: 4, scope: !2779)
!2804 = !DILocation(line: 672, column: 3, scope: !2733)
!2805 = !DILocation(line: 655, column: 30, scope: !2726)
!2806 = !DILocation(line: 655, column: 3, scope: !2726)
!2807 = distinct !{!2807, !2730, !2808}
!2808 = !DILocation(line: 672, column: 3, scope: !2723)
!2809 = !DILocation(line: 675, column: 9, scope: !2810)
!2810 = distinct !DILexicalBlock(scope: !2701, file: !3, line: 675, column: 3)
!2811 = !DILocation(line: 675, column: 8, scope: !2810)
!2812 = !DILocation(line: 675, column: 13, scope: !2813)
!2813 = distinct !DILexicalBlock(scope: !2810, file: !3, line: 675, column: 3)
!2814 = !DILocation(line: 675, column: 16, scope: !2813)
!2815 = !DILocation(line: 675, column: 21, scope: !2813)
!2816 = !DILocation(line: 675, column: 14, scope: !2813)
!2817 = !DILocation(line: 675, column: 3, scope: !2810)
!2818 = !DILocation(line: 676, column: 9, scope: !2819)
!2819 = distinct !DILexicalBlock(scope: !2820, file: !3, line: 676, column: 8)
!2820 = distinct !DILexicalBlock(scope: !2813, file: !3, line: 675, column: 34)
!2821 = !DILocation(line: 676, column: 11, scope: !2819)
!2822 = !DILocation(line: 676, column: 17, scope: !2819)
!2823 = !DILocation(line: 676, column: 8, scope: !2820)
!2824 = !DILocation(line: 676, column: 44, scope: !2819)
!2825 = !DILocation(line: 676, column: 49, scope: !2819)
!2826 = !DILocation(line: 676, column: 27, scope: !2819)
!2827 = !DILocation(line: 676, column: 25, scope: !2819)
!2828 = !DILocation(line: 676, column: 22, scope: !2819)
!2829 = !DILocation(line: 677, column: 12, scope: !2819)
!2830 = !DILocation(line: 679, column: 8, scope: !2831)
!2831 = distinct !DILexicalBlock(scope: !2820, file: !3, line: 679, column: 8)
!2832 = !DILocation(line: 679, column: 17, scope: !2831)
!2833 = !DILocation(line: 679, column: 8, scope: !2820)
!2834 = !DILocation(line: 680, column: 16, scope: !2835)
!2835 = distinct !DILexicalBlock(scope: !2831, file: !3, line: 679, column: 21)
!2836 = !DILocation(line: 680, column: 21, scope: !2835)
!2837 = !DILocation(line: 680, column: 26, scope: !2835)
!2838 = !DILocation(line: 680, column: 5, scope: !2835)
!2839 = !DILocation(line: 681, column: 15, scope: !2835)
!2840 = !DILocation(line: 681, column: 26, scope: !2835)
!2841 = !DILocation(line: 681, column: 5, scope: !2835)
!2842 = !DILocation(line: 683, column: 9, scope: !2843)
!2843 = distinct !DILexicalBlock(scope: !2835, file: !3, line: 683, column: 9)
!2844 = !DILocation(line: 683, column: 16, scope: !2843)
!2845 = !DILocation(line: 683, column: 9, scope: !2835)
!2846 = !DILocalVariable(name: "inpr", scope: !2847, file: !3, line: 684, type: !7)
!2847 = distinct !DILexicalBlock(scope: !2843, file: !3, line: 683, column: 24)
!2848 = !DILocation(line: 684, column: 12, scope: !2847)
!2849 = !DILocalVariable(name: "z", scope: !2847, file: !3, line: 684, type: !7)
!2850 = !DILocation(line: 684, column: 18, scope: !2847)
!2851 = !DILocation(line: 684, column: 22, scope: !2847)
!2852 = !DILocation(line: 684, column: 21, scope: !2847)
!2853 = !DILocation(line: 688, column: 6, scope: !2847)
!2854 = !DILocation(line: 688, column: 12, scope: !2847)
!2855 = !DILocation(line: 689, column: 19, scope: !2847)
!2856 = !DILocation(line: 689, column: 6, scope: !2847)
!2857 = !DILocation(line: 690, column: 14, scope: !2847)
!2858 = !DILocation(line: 690, column: 12, scope: !2847)
!2859 = !DILocation(line: 690, column: 10, scope: !2847)
!2860 = !DILocation(line: 692, column: 10, scope: !2861)
!2861 = distinct !DILexicalBlock(scope: !2847, file: !3, line: 692, column: 10)
!2862 = !DILocation(line: 692, column: 16, scope: !2861)
!2863 = !DILocation(line: 692, column: 21, scope: !2861)
!2864 = !DILocation(line: 692, column: 14, scope: !2861)
!2865 = !DILocation(line: 692, column: 10, scope: !2847)
!2866 = !DILocation(line: 693, column: 11, scope: !2867)
!2867 = distinct !DILexicalBlock(scope: !2868, file: !3, line: 693, column: 11)
!2868 = distinct !DILexicalBlock(scope: !2861, file: !3, line: 692, column: 29)
!2869 = !DILocation(line: 693, column: 13, scope: !2867)
!2870 = !DILocation(line: 693, column: 12, scope: !2867)
!2871 = !DILocation(line: 693, column: 11, scope: !2868)
!2872 = !DILocation(line: 693, column: 25, scope: !2867)
!2873 = !DILocation(line: 693, column: 23, scope: !2867)
!2874 = !DILocation(line: 693, column: 19, scope: !2867)
!2875 = !DILocation(line: 694, column: 11, scope: !2876)
!2876 = distinct !DILexicalBlock(scope: !2868, file: !3, line: 694, column: 11)
!2877 = !DILocation(line: 694, column: 13, scope: !2876)
!2878 = !DILocation(line: 694, column: 12, scope: !2876)
!2879 = !DILocation(line: 694, column: 11, scope: !2868)
!2880 = !DILocation(line: 694, column: 25, scope: !2876)
!2881 = !DILocation(line: 694, column: 23, scope: !2876)
!2882 = !DILocation(line: 694, column: 19, scope: !2876)
!2883 = !DILocation(line: 695, column: 6, scope: !2868)
!2884 = !DILocation(line: 696, column: 5, scope: !2847)
!2885 = !DILocation(line: 697, column: 4, scope: !2835)
!2886 = !DILocation(line: 698, column: 3, scope: !2820)
!2887 = !DILocation(line: 675, column: 30, scope: !2813)
!2888 = !DILocation(line: 675, column: 3, scope: !2813)
!2889 = distinct !{!2889, !2817, !2890}
!2890 = !DILocation(line: 698, column: 3, scope: !2810)
!2891 = !DILocation(line: 699, column: 2, scope: !2701)
!2892 = !DILocation(line: 644, column: 47, scope: !2698)
!2893 = !DILocation(line: 644, column: 55, scope: !2698)
!2894 = !DILocation(line: 644, column: 60, scope: !2698)
!2895 = !DILocation(line: 644, column: 54, scope: !2698)
!2896 = !DILocation(line: 644, column: 2, scope: !2698)
!2897 = distinct !{!2897, !2699, !2898}
!2898 = !DILocation(line: 699, column: 2, scope: !2691)
!2899 = !DILocation(line: 701, column: 2, scope: !2603)
!2900 = !DILocation(line: 701, column: 12, scope: !2603)
!2901 = !DILocation(line: 704, column: 6, scope: !2902)
!2902 = distinct !DILexicalBlock(scope: !2603, file: !3, line: 704, column: 6)
!2903 = !DILocation(line: 704, column: 13, scope: !2902)
!2904 = !DILocation(line: 704, column: 11, scope: !2902)
!2905 = !DILocation(line: 704, column: 6, scope: !2603)
!2906 = !DILocalVariable(name: "delta", scope: !2907, file: !3, line: 705, type: !7)
!2907 = distinct !DILexicalBlock(scope: !2902, file: !3, line: 704, column: 19)
!2908 = !DILocation(line: 705, column: 9, scope: !2907)
!2909 = !DILocation(line: 705, column: 17, scope: !2907)
!2910 = !DILocation(line: 705, column: 24, scope: !2907)
!2911 = !DILocation(line: 705, column: 22, scope: !2907)
!2912 = !DILocation(line: 708, column: 7, scope: !2913)
!2913 = distinct !DILexicalBlock(scope: !2907, file: !3, line: 708, column: 7)
!2914 = !DILocation(line: 708, column: 12, scope: !2913)
!2915 = !DILocation(line: 708, column: 20, scope: !2913)
!2916 = !DILocation(line: 708, column: 7, scope: !2907)
!2917 = !DILocation(line: 709, column: 17, scope: !2913)
!2918 = !DILocation(line: 709, column: 24, scope: !2913)
!2919 = !DILocation(line: 709, column: 29, scope: !2913)
!2920 = !DILocation(line: 709, column: 22, scope: !2913)
!2921 = !DILocation(line: 709, column: 4, scope: !2913)
!2922 = !DILocation(line: 709, column: 9, scope: !2913)
!2923 = !DILocation(line: 709, column: 14, scope: !2913)
!2924 = !DILocation(line: 709, column: 15, scope: !2913)
!2925 = !DILocation(line: 710, column: 7, scope: !2926)
!2926 = distinct !DILexicalBlock(scope: !2907, file: !3, line: 710, column: 7)
!2927 = !DILocation(line: 710, column: 12, scope: !2926)
!2928 = !DILocation(line: 710, column: 20, scope: !2926)
!2929 = !DILocation(line: 710, column: 7, scope: !2907)
!2930 = !DILocation(line: 711, column: 23, scope: !2926)
!2931 = !DILocation(line: 711, column: 30, scope: !2926)
!2932 = !DILocation(line: 711, column: 35, scope: !2926)
!2933 = !DILocation(line: 711, column: 28, scope: !2926)
!2934 = !DILocation(line: 711, column: 4, scope: !2926)
!2935 = !DILocation(line: 711, column: 9, scope: !2926)
!2936 = !DILocation(line: 711, column: 14, scope: !2926)
!2937 = !DILocation(line: 711, column: 21, scope: !2926)
!2938 = !DILocation(line: 714, column: 11, scope: !2907)
!2939 = !DILocation(line: 714, column: 16, scope: !2907)
!2940 = !DILocation(line: 714, column: 24, scope: !2907)
!2941 = !DILocation(line: 714, column: 29, scope: !2907)
!2942 = !DILocation(line: 714, column: 23, scope: !2907)
!2943 = !DILocation(line: 714, column: 39, scope: !2907)
!2944 = !DILocation(line: 714, column: 44, scope: !2907)
!2945 = !DILocation(line: 714, column: 49, scope: !2907)
!2946 = !DILocation(line: 714, column: 57, scope: !2907)
!2947 = !DILocation(line: 714, column: 62, scope: !2907)
!2948 = !DILocation(line: 714, column: 67, scope: !2907)
!2949 = !DILocation(line: 714, column: 56, scope: !2907)
!2950 = !DILocation(line: 714, column: 37, scope: !2907)
!2951 = !DILocation(line: 714, column: 8, scope: !2907)
!2952 = !DILocation(line: 716, column: 26, scope: !2907)
!2953 = !DILocation(line: 716, column: 39, scope: !2907)
!2954 = !DILocation(line: 716, column: 44, scope: !2907)
!2955 = !DILocation(line: 716, column: 49, scope: !2907)
!2956 = !DILocation(line: 716, column: 32, scope: !2907)
!2957 = !DILocation(line: 716, column: 31, scope: !2907)
!2958 = !DILocation(line: 716, column: 19, scope: !2907)
!2959 = !DILocation(line: 716, column: 3, scope: !2907)
!2960 = !DILocation(line: 716, column: 8, scope: !2907)
!2961 = !DILocation(line: 716, column: 13, scope: !2907)
!2962 = !DILocation(line: 716, column: 17, scope: !2907)
!2963 = !DILocation(line: 717, column: 2, scope: !2907)
!2964 = !DILocation(line: 718, column: 1, scope: !2603)
!2965 = distinct !DISubprogram(name: "saacos", scope: !2966, file: !2966, line: 66, type: !2967, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!2966 = !DIFile(filename: "blender/source/blender/blenlib/intern/math_base_inline.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2967 = !DISubroutineType(types: !2968)
!2968 = !{!7, !7}
!2969 = !DILocalVariable(name: "fac", arg: 1, scope: !2965, file: !2966, line: 66, type: !7)
!2970 = !DILocation(line: 66, column: 28, scope: !2965)
!2971 = !DILocation(line: 68, column: 11, scope: !2972)
!2972 = distinct !DILexicalBlock(scope: !2965, file: !2966, line: 68, column: 11)
!2973 = !DILocation(line: 68, column: 11, scope: !2965)
!2974 = !DILocation(line: 68, column: 35, scope: !2972)
!2975 = !DILocation(line: 69, column: 11, scope: !2976)
!2976 = distinct !DILexicalBlock(scope: !2972, file: !2966, line: 69, column: 11)
!2977 = !DILocation(line: 69, column: 11, scope: !2972)
!2978 = !DILocation(line: 69, column: 35, scope: !2976)
!2979 = !DILocation(line: 70, column: 48, scope: !2976)
!2980 = !DILocation(line: 70, column: 42, scope: !2976)
!2981 = !DILocation(line: 70, column: 35, scope: !2976)
!2982 = !DILocation(line: 71, column: 1, scope: !2965)
!2983 = !DILocalVariable(name: "samp", arg: 1, scope: !2264, file: !3, line: 126, type: !8)
!2984 = !DILocation(line: 126, column: 35, scope: !2264)
!2985 = !DILocalVariable(name: "a", scope: !2264, file: !3, line: 135, type: !8)
!2986 = !DILocation(line: 135, column: 6, scope: !2264)
!2987 = !DILocalVariable(name: "offset", scope: !2264, file: !3, line: 135, type: !8)
!2988 = !DILocation(line: 135, column: 9, scope: !2264)
!2989 = !DILocation(line: 137, column: 6, scope: !2990)
!2990 = distinct !DILexicalBlock(scope: !2264, file: !3, line: 137, column: 6)
!2991 = !DILocation(line: 137, column: 10, scope: !2990)
!2992 = !DILocation(line: 137, column: 6, scope: !2264)
!2993 = !DILocation(line: 137, column: 18, scope: !2990)
!2994 = !DILocation(line: 137, column: 14, scope: !2990)
!2995 = !DILocation(line: 138, column: 11, scope: !2996)
!2996 = distinct !DILexicalBlock(scope: !2990, file: !3, line: 138, column: 11)
!2997 = !DILocation(line: 138, column: 15, scope: !2996)
!2998 = !DILocation(line: 138, column: 11, scope: !2990)
!2999 = !DILocation(line: 138, column: 24, scope: !2996)
!3000 = !DILocation(line: 138, column: 20, scope: !2996)
!3001 = !DILocation(line: 140, column: 8, scope: !3002)
!3002 = distinct !DILexicalBlock(scope: !2264, file: !3, line: 140, column: 2)
!3003 = !DILocation(line: 140, column: 7, scope: !3002)
!3004 = !DILocation(line: 140, column: 12, scope: !3005)
!3005 = distinct !DILexicalBlock(scope: !3002, file: !3, line: 140, column: 2)
!3006 = !DILocation(line: 140, column: 14, scope: !3005)
!3007 = !DILocation(line: 140, column: 18, scope: !3005)
!3008 = !DILocation(line: 140, column: 13, scope: !3005)
!3009 = !DILocation(line: 140, column: 2, scope: !3002)
!3010 = !DILocation(line: 140, column: 40, scope: !3005)
!3011 = !DILocation(line: 140, column: 36, scope: !3005)
!3012 = !DILocation(line: 140, column: 33, scope: !3005)
!3013 = !DILocation(line: 140, column: 27, scope: !3005)
!3014 = !DILocation(line: 140, column: 23, scope: !3005)
!3015 = !DILocation(line: 140, column: 2, scope: !3005)
!3016 = distinct !{!3016, !3009, !3017}
!3017 = !DILocation(line: 140, column: 41, scope: !3002)
!3018 = !DILocation(line: 142, column: 11, scope: !3019)
!3019 = distinct !DILexicalBlock(scope: !2264, file: !3, line: 142, column: 6)
!3020 = !DILocation(line: 142, column: 6, scope: !3019)
!3021 = !DILocation(line: 142, column: 16, scope: !3019)
!3022 = !DILocation(line: 142, column: 6, scope: !2264)
!3023 = !DILocation(line: 143, column: 8, scope: !3024)
!3024 = distinct !DILexicalBlock(scope: !3019, file: !3, line: 142, column: 21)
!3025 = !DILocation(line: 143, column: 3, scope: !3024)
!3026 = !DILocation(line: 143, column: 13, scope: !3024)
!3027 = !DILocation(line: 144, column: 37, scope: !3024)
!3028 = !DILocation(line: 144, column: 33, scope: !3024)
!3029 = !DILocation(line: 144, column: 19, scope: !3024)
!3030 = !DILocation(line: 144, column: 46, scope: !3024)
!3031 = !DILocation(line: 144, column: 51, scope: !3024)
!3032 = !DILocation(line: 144, column: 50, scope: !3024)
!3033 = !DILocation(line: 144, column: 3, scope: !3024)
!3034 = !DILocation(line: 145, column: 2, scope: !3024)
!3035 = !DILocation(line: 147, column: 13, scope: !2264)
!3036 = !DILocation(line: 147, column: 9, scope: !2264)
!3037 = !DILocation(line: 147, column: 2, scope: !2264)
!3038 = distinct !DISubprogram(name: "make_jitter_weight_tab", scope: !3, file: !3, line: 151, type: !3039, scopeLine: 152, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!3039 = !DISubroutineType(types: !3040)
!3040 = !{null, !29, !2461, !43}
!3041 = !DILocalVariable(name: "re", arg: 1, scope: !3038, file: !3, line: 151, type: !29)
!3042 = !DILocation(line: 151, column: 44, scope: !3038)
!3043 = !DILocalVariable(name: "shb", arg: 2, scope: !3038, file: !3, line: 151, type: !2461)
!3044 = !DILocation(line: 151, column: 57, scope: !3038)
!3045 = !DILocalVariable(name: "filtertype", arg: 3, scope: !3038, file: !3, line: 151, type: !43)
!3046 = !DILocation(line: 151, column: 68, scope: !3038)
!3047 = !DILocalVariable(name: "jit", scope: !3038, file: !3, line: 153, type: !63)
!3048 = !DILocation(line: 153, column: 9, scope: !3038)
!3049 = !DILocalVariable(name: "totw", scope: !3038, file: !3, line: 153, type: !7)
!3050 = !DILocation(line: 153, column: 14, scope: !3038)
!3051 = !DILocalVariable(name: "samp", scope: !3038, file: !3, line: 154, type: !8)
!3052 = !DILocation(line: 154, column: 6, scope: !3038)
!3053 = !DILocation(line: 154, column: 39, scope: !3038)
!3054 = !DILocation(line: 154, column: 43, scope: !3038)
!3055 = !DILocation(line: 154, column: 46, scope: !3038)
!3056 = !DILocation(line: 154, column: 51, scope: !3038)
!3057 = !DILocation(line: 154, column: 12, scope: !3038)
!3058 = !DILocalVariable(name: "a", scope: !3038, file: !3, line: 155, type: !8)
!3059 = !DILocation(line: 155, column: 6, scope: !3038)
!3060 = !DILocalVariable(name: "tot", scope: !3038, file: !3, line: 155, type: !8)
!3061 = !DILocation(line: 155, column: 9, scope: !3038)
!3062 = !DILocation(line: 155, column: 13, scope: !3038)
!3063 = !DILocation(line: 155, column: 18, scope: !3038)
!3064 = !DILocation(line: 155, column: 17, scope: !3038)
!3065 = !DILocation(line: 157, column: 15, scope: !3038)
!3066 = !DILocation(line: 157, column: 41, scope: !3038)
!3067 = !DILocation(line: 157, column: 40, scope: !3038)
!3068 = !DILocation(line: 157, column: 2, scope: !3038)
!3069 = !DILocation(line: 157, column: 7, scope: !3038)
!3070 = !DILocation(line: 157, column: 13, scope: !3038)
!3071 = !DILocation(line: 159, column: 12, scope: !3072)
!3072 = distinct !DILexicalBlock(scope: !3038, file: !3, line: 159, column: 2)
!3073 = !DILocation(line: 159, column: 17, scope: !3072)
!3074 = !DILocation(line: 159, column: 10, scope: !3072)
!3075 = !DILocation(line: 159, column: 23, scope: !3072)
!3076 = !DILocation(line: 159, column: 7, scope: !3072)
!3077 = !DILocation(line: 159, column: 27, scope: !3078)
!3078 = distinct !DILexicalBlock(scope: !3072, file: !3, line: 159, column: 2)
!3079 = !DILocation(line: 159, column: 29, scope: !3078)
!3080 = !DILocation(line: 159, column: 28, scope: !3078)
!3081 = !DILocation(line: 159, column: 2, scope: !3072)
!3082 = !DILocation(line: 160, column: 7, scope: !3083)
!3083 = distinct !DILexicalBlock(scope: !3084, file: !3, line: 160, column: 7)
!3084 = distinct !DILexicalBlock(scope: !3078, file: !3, line: 159, column: 47)
!3085 = !DILocation(line: 160, column: 17, scope: !3083)
!3086 = !DILocation(line: 160, column: 7, scope: !3084)
!3087 = !DILocation(line: 161, column: 35, scope: !3083)
!3088 = !DILocation(line: 161, column: 44, scope: !3083)
!3089 = !DILocation(line: 161, column: 42, scope: !3083)
!3090 = !DILocation(line: 161, column: 53, scope: !3083)
!3091 = !DILocation(line: 161, column: 62, scope: !3083)
!3092 = !DILocation(line: 161, column: 60, scope: !3083)
!3093 = !DILocation(line: 161, column: 51, scope: !3083)
!3094 = !DILocation(line: 161, column: 29, scope: !3083)
!3095 = !DILocation(line: 161, column: 27, scope: !3083)
!3096 = !DILocation(line: 161, column: 4, scope: !3083)
!3097 = !DILocation(line: 161, column: 9, scope: !3083)
!3098 = !DILocation(line: 161, column: 16, scope: !3083)
!3099 = !DILocation(line: 161, column: 19, scope: !3083)
!3100 = !DILocation(line: 162, column: 12, scope: !3101)
!3101 = distinct !DILexicalBlock(scope: !3083, file: !3, line: 162, column: 12)
!3102 = !DILocation(line: 162, column: 22, scope: !3101)
!3103 = !DILocation(line: 162, column: 12, scope: !3083)
!3104 = !DILocation(line: 163, column: 66, scope: !3101)
!3105 = !DILocation(line: 163, column: 75, scope: !3101)
!3106 = !DILocation(line: 163, column: 73, scope: !3101)
!3107 = !DILocation(line: 163, column: 84, scope: !3101)
!3108 = !DILocation(line: 163, column: 93, scope: !3101)
!3109 = !DILocation(line: 163, column: 91, scope: !3101)
!3110 = !DILocation(line: 163, column: 82, scope: !3101)
!3111 = !DILocation(line: 163, column: 60, scope: !3101)
!3112 = !DILocation(line: 163, column: 58, scope: !3101)
!3113 = !DILocation(line: 163, column: 21, scope: !3101)
!3114 = !DILocation(line: 163, column: 4, scope: !3101)
!3115 = !DILocation(line: 163, column: 9, scope: !3101)
!3116 = !DILocation(line: 163, column: 16, scope: !3101)
!3117 = !DILocation(line: 163, column: 19, scope: !3101)
!3118 = !DILocation(line: 165, column: 4, scope: !3101)
!3119 = !DILocation(line: 165, column: 9, scope: !3101)
!3120 = !DILocation(line: 165, column: 16, scope: !3101)
!3121 = !DILocation(line: 165, column: 18, scope: !3101)
!3122 = !DILocation(line: 167, column: 10, scope: !3084)
!3123 = !DILocation(line: 167, column: 15, scope: !3084)
!3124 = !DILocation(line: 167, column: 22, scope: !3084)
!3125 = !DILocation(line: 167, column: 7, scope: !3084)
!3126 = !DILocation(line: 168, column: 2, scope: !3084)
!3127 = !DILocation(line: 159, column: 35, scope: !3078)
!3128 = !DILocation(line: 159, column: 42, scope: !3078)
!3129 = !DILocation(line: 159, column: 2, scope: !3078)
!3130 = distinct !{!3130, !3081, !3131}
!3131 = !DILocation(line: 168, column: 2, scope: !3072)
!3132 = !DILocation(line: 170, column: 13, scope: !3038)
!3133 = !DILocation(line: 170, column: 12, scope: !3038)
!3134 = !DILocation(line: 170, column: 6, scope: !3038)
!3135 = !DILocation(line: 171, column: 8, scope: !3136)
!3136 = distinct !DILexicalBlock(scope: !3038, file: !3, line: 171, column: 2)
!3137 = !DILocation(line: 171, column: 7, scope: !3136)
!3138 = !DILocation(line: 171, column: 12, scope: !3139)
!3139 = distinct !DILexicalBlock(scope: !3136, file: !3, line: 171, column: 2)
!3140 = !DILocation(line: 171, column: 14, scope: !3139)
!3141 = !DILocation(line: 171, column: 13, scope: !3139)
!3142 = !DILocation(line: 171, column: 2, scope: !3136)
!3143 = !DILocation(line: 172, column: 20, scope: !3144)
!3144 = distinct !DILexicalBlock(scope: !3139, file: !3, line: 171, column: 24)
!3145 = !DILocation(line: 172, column: 3, scope: !3144)
!3146 = !DILocation(line: 172, column: 8, scope: !3144)
!3147 = !DILocation(line: 172, column: 15, scope: !3144)
!3148 = !DILocation(line: 172, column: 17, scope: !3144)
!3149 = !DILocation(line: 173, column: 2, scope: !3144)
!3150 = !DILocation(line: 171, column: 20, scope: !3139)
!3151 = !DILocation(line: 171, column: 2, scope: !3139)
!3152 = distinct !{!3152, !3142, !3153}
!3153 = !DILocation(line: 173, column: 2, scope: !3136)
!3154 = !DILocation(line: 174, column: 1, scope: !3038)
!3155 = distinct !DISubprogram(name: "makedeepshadowbuf", scope: !3, file: !3, line: 740, type: !3156, scopeLine: 741, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!3156 = !DISubroutineType(types: !3157)
!3157 = !{null, !29, !2286, !63}
!3158 = !DILocalVariable(name: "re", arg: 1, scope: !3155, file: !3, line: 740, type: !29)
!3159 = !DILocation(line: 740, column: 39, scope: !3155)
!3160 = !DILocalVariable(name: "lar", arg: 2, scope: !3155, file: !3, line: 740, type: !2286)
!3161 = !DILocation(line: 740, column: 52, scope: !3155)
!3162 = !DILocalVariable(name: "jitbuf", arg: 3, scope: !3155, file: !3, line: 740, type: !63)
!3163 = !DILocation(line: 740, column: 64, scope: !3155)
!3164 = !DILocalVariable(name: "shb", scope: !3155, file: !3, line: 742, type: !2461)
!3165 = !DILocation(line: 742, column: 11, scope: !3155)
!3166 = !DILocation(line: 742, column: 16, scope: !3155)
!3167 = !DILocation(line: 742, column: 21, scope: !3155)
!3168 = !DILocalVariable(name: "apixbuf", scope: !3155, file: !3, line: 743, type: !3169)
!3169 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3170, size: 64)
!3170 = !DIDerivedType(tag: DW_TAG_typedef, name: "APixstr", file: !3171, line: 71, baseType: !3172)
!3171 = !DIFile(filename: "blender/source/blender/render/intern/include/zbuf.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!3172 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "APixstr", file: !3171, line: 64, size: 576, elements: !3173)
!3173 = !{!3174, !3176, !3177, !3178, !3179, !3181}
!3174 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !3172, file: !3171, line: 65, baseType: !3175, size: 64)
!3175 = !DICompositeType(tag: DW_TAG_array_type, baseType: !514, size: 64, elements: !289)
!3176 = !DIDerivedType(tag: DW_TAG_member, name: "z", scope: !3172, file: !3171, line: 66, baseType: !2048, size: 128, offset: 64)
!3177 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !3172, file: !3171, line: 67, baseType: !2048, size: 128, offset: 192)
!3178 = !DIDerivedType(tag: DW_TAG_member, name: "obi", scope: !3172, file: !3171, line: 68, baseType: !2048, size: 128, offset: 320)
!3179 = !DIDerivedType(tag: DW_TAG_member, name: "shadfac", scope: !3172, file: !3171, line: 69, baseType: !3180, size: 64, offset: 448)
!3180 = !DICompositeType(tag: DW_TAG_array_type, baseType: !43, size: 64, elements: !289)
!3181 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3172, file: !3171, line: 70, baseType: !3182, size: 64, offset: 512)
!3182 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3172, size: 64)
!3183 = !DILocation(line: 743, column: 11, scope: !3155)
!3184 = !DILocalVariable(name: "apixbufstrand", scope: !3155, file: !3, line: 744, type: !3185)
!3185 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3186, size: 64)
!3186 = !DIDerivedType(tag: DW_TAG_typedef, name: "APixstrand", file: !3171, line: 81, baseType: !3187)
!3187 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "APixstrand", file: !3171, line: 73, size: 896, elements: !3188)
!3188 = !{!3189, !3190, !3191, !3192, !3193, !3194, !3195, !3196}
!3189 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !3187, file: !3171, line: 74, baseType: !3175, size: 64)
!3190 = !DIDerivedType(tag: DW_TAG_member, name: "z", scope: !3187, file: !3171, line: 75, baseType: !2048, size: 128, offset: 64)
!3191 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !3187, file: !3171, line: 76, baseType: !2048, size: 128, offset: 192)
!3192 = !DIDerivedType(tag: DW_TAG_member, name: "obi", scope: !3187, file: !3171, line: 77, baseType: !2048, size: 128, offset: 320)
!3193 = !DIDerivedType(tag: DW_TAG_member, name: "seg", scope: !3187, file: !3171, line: 78, baseType: !2048, size: 128, offset: 448)
!3194 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !3187, file: !3171, line: 79, baseType: !288, size: 128, offset: 576)
!3195 = !DIDerivedType(tag: DW_TAG_member, name: "v", scope: !3187, file: !3171, line: 79, baseType: !288, size: 128, offset: 704)
!3196 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3187, file: !3171, line: 80, baseType: !3197, size: 64, offset: 832)
!3197 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3187, size: 64)
!3198 = !DILocation(line: 744, column: 14, scope: !3155)
!3199 = !DILocalVariable(name: "apsmbase", scope: !3155, file: !3, line: 745, type: !77)
!3200 = !DILocation(line: 745, column: 11, scope: !3155)
!3201 = !DILocation(line: 748, column: 11, scope: !3155)
!3202 = !DILocation(line: 748, column: 39, scope: !3155)
!3203 = !DILocation(line: 748, column: 44, scope: !3155)
!3204 = !DILocation(line: 748, column: 38, scope: !3155)
!3205 = !DILocation(line: 748, column: 49, scope: !3155)
!3206 = !DILocation(line: 748, column: 54, scope: !3155)
!3207 = !DILocation(line: 748, column: 48, scope: !3155)
!3208 = !DILocation(line: 748, column: 9, scope: !3155)
!3209 = !DILocation(line: 749, column: 6, scope: !3210)
!3210 = distinct !DILexicalBlock(scope: !3155, file: !3, line: 749, column: 6)
!3211 = !DILocation(line: 749, column: 10, scope: !3210)
!3212 = !DILocation(line: 749, column: 6, scope: !3155)
!3213 = !DILocation(line: 750, column: 18, scope: !3210)
!3214 = !DILocation(line: 750, column: 49, scope: !3210)
!3215 = !DILocation(line: 750, column: 54, scope: !3210)
!3216 = !DILocation(line: 750, column: 48, scope: !3210)
!3217 = !DILocation(line: 750, column: 59, scope: !3210)
!3218 = !DILocation(line: 750, column: 64, scope: !3210)
!3219 = !DILocation(line: 750, column: 58, scope: !3210)
!3220 = !DILocation(line: 750, column: 16, scope: !3210)
!3221 = !DILocation(line: 750, column: 3, scope: !3210)
!3222 = !DILocation(line: 752, column: 22, scope: !3155)
!3223 = !DILocation(line: 752, column: 26, scope: !3155)
!3224 = !DILocation(line: 752, column: 31, scope: !3155)
!3225 = !DILocation(line: 752, column: 36, scope: !3155)
!3226 = !DILocation(line: 752, column: 45, scope: !3155)
!3227 = !DILocation(line: 752, column: 54, scope: !3155)
!3228 = !DILocation(line: 752, column: 80, scope: !3155)
!3229 = !DILocation(line: 752, column: 85, scope: !3155)
!3230 = !DILocation(line: 753, column: 3, scope: !3155)
!3231 = !DILocation(line: 753, column: 8, scope: !3155)
!3232 = !DILocation(line: 753, column: 29, scope: !3155)
!3233 = !DILocation(line: 753, column: 16, scope: !3155)
!3234 = !DILocation(line: 752, column: 2, scope: !3155)
!3235 = !DILocation(line: 756, column: 25, scope: !3155)
!3236 = !DILocation(line: 756, column: 29, scope: !3155)
!3237 = !DILocation(line: 756, column: 34, scope: !3155)
!3238 = !DILocation(line: 756, column: 43, scope: !3155)
!3239 = !DILocation(line: 756, column: 2, scope: !3155)
!3240 = !DILocation(line: 758, column: 2, scope: !3155)
!3241 = !DILocation(line: 758, column: 12, scope: !3155)
!3242 = !DILocation(line: 759, column: 6, scope: !3243)
!3243 = distinct !DILexicalBlock(scope: !3155, file: !3, line: 759, column: 6)
!3244 = !DILocation(line: 759, column: 6, scope: !3155)
!3245 = !DILocation(line: 760, column: 3, scope: !3243)
!3246 = !DILocation(line: 760, column: 13, scope: !3243)
!3247 = !DILocation(line: 761, column: 2, scope: !3155)
!3248 = !DILocation(line: 762, column: 1, scope: !3155)
!3249 = distinct !DISubprogram(name: "makeflatshadowbuf", scope: !3, file: !3, line: 720, type: !3156, scopeLine: 721, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!3250 = !DILocalVariable(name: "re", arg: 1, scope: !3249, file: !3, line: 720, type: !29)
!3251 = !DILocation(line: 720, column: 39, scope: !3249)
!3252 = !DILocalVariable(name: "lar", arg: 2, scope: !3249, file: !3, line: 720, type: !2286)
!3253 = !DILocation(line: 720, column: 52, scope: !3249)
!3254 = !DILocalVariable(name: "jitbuf", arg: 3, scope: !3249, file: !3, line: 720, type: !63)
!3255 = !DILocation(line: 720, column: 64, scope: !3249)
!3256 = !DILocalVariable(name: "shb", scope: !3249, file: !3, line: 722, type: !2461)
!3257 = !DILocation(line: 722, column: 11, scope: !3249)
!3258 = !DILocation(line: 722, column: 16, scope: !3249)
!3259 = !DILocation(line: 722, column: 21, scope: !3249)
!3260 = !DILocalVariable(name: "rectz", scope: !3249, file: !3, line: 723, type: !26)
!3261 = !DILocation(line: 723, column: 7, scope: !3249)
!3262 = !DILocalVariable(name: "samples", scope: !3249, file: !3, line: 723, type: !8)
!3263 = !DILocation(line: 723, column: 14, scope: !3249)
!3264 = !DILocation(line: 726, column: 9, scope: !3249)
!3265 = !DILocation(line: 726, column: 35, scope: !3249)
!3266 = !DILocation(line: 726, column: 40, scope: !3249)
!3267 = !DILocation(line: 726, column: 34, scope: !3249)
!3268 = !DILocation(line: 726, column: 45, scope: !3249)
!3269 = !DILocation(line: 726, column: 50, scope: !3249)
!3270 = !DILocation(line: 726, column: 44, scope: !3249)
!3271 = !DILocation(line: 726, column: 7, scope: !3249)
!3272 = !DILocation(line: 728, column: 14, scope: !3273)
!3273 = distinct !DILexicalBlock(scope: !3249, file: !3, line: 728, column: 2)
!3274 = !DILocation(line: 728, column: 7, scope: !3273)
!3275 = !DILocation(line: 728, column: 18, scope: !3276)
!3276 = distinct !DILexicalBlock(scope: !3273, file: !3, line: 728, column: 2)
!3277 = !DILocation(line: 728, column: 26, scope: !3276)
!3278 = !DILocation(line: 728, column: 31, scope: !3276)
!3279 = !DILocation(line: 728, column: 25, scope: !3276)
!3280 = !DILocation(line: 728, column: 2, scope: !3273)
!3281 = !DILocation(line: 729, column: 18, scope: !3282)
!3282 = distinct !DILexicalBlock(scope: !3276, file: !3, line: 728, column: 50)
!3283 = !DILocation(line: 729, column: 22, scope: !3282)
!3284 = !DILocation(line: 729, column: 27, scope: !3282)
!3285 = !DILocation(line: 729, column: 36, scope: !3282)
!3286 = !DILocation(line: 729, column: 41, scope: !3282)
!3287 = !DILocation(line: 729, column: 48, scope: !3282)
!3288 = !DILocation(line: 729, column: 53, scope: !3282)
!3289 = !DILocation(line: 729, column: 59, scope: !3282)
!3290 = !DILocation(line: 729, column: 68, scope: !3282)
!3291 = !DILocation(line: 729, column: 67, scope: !3282)
!3292 = !DILocation(line: 729, column: 78, scope: !3282)
!3293 = !DILocation(line: 729, column: 87, scope: !3282)
!3294 = !DILocation(line: 729, column: 86, scope: !3282)
!3295 = !DILocation(line: 729, column: 94, scope: !3282)
!3296 = !DILocation(line: 729, column: 3, scope: !3282)
!3297 = !DILocation(line: 731, column: 22, scope: !3282)
!3298 = !DILocation(line: 731, column: 27, scope: !3282)
!3299 = !DILocation(line: 731, column: 34, scope: !3282)
!3300 = !DILocation(line: 731, column: 39, scope: !3282)
!3301 = !DILocation(line: 731, column: 44, scope: !3282)
!3302 = !DILocation(line: 731, column: 3, scope: !3282)
!3303 = !DILocation(line: 733, column: 7, scope: !3304)
!3304 = distinct !DILexicalBlock(scope: !3282, file: !3, line: 733, column: 7)
!3305 = !DILocation(line: 733, column: 11, scope: !3304)
!3306 = !DILocation(line: 733, column: 22, scope: !3304)
!3307 = !DILocation(line: 733, column: 26, scope: !3304)
!3308 = !DILocation(line: 733, column: 7, scope: !3282)
!3309 = !DILocation(line: 734, column: 4, scope: !3304)
!3310 = !DILocation(line: 735, column: 2, scope: !3282)
!3311 = !DILocation(line: 728, column: 46, scope: !3276)
!3312 = !DILocation(line: 728, column: 2, scope: !3276)
!3313 = distinct !{!3313, !3280, !3314}
!3314 = !DILocation(line: 735, column: 2, scope: !3273)
!3315 = !DILocation(line: 737, column: 2, scope: !3249)
!3316 = !DILocation(line: 737, column: 12, scope: !3249)
!3317 = !DILocation(line: 738, column: 1, scope: !3249)
!3318 = distinct !DISubprogram(name: "threaded_makeshadowbufs", scope: !3, file: !3, line: 845, type: !3319, scopeLine: 846, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !4)
!3319 = !DISubroutineType(types: !3320)
!3320 = !{null, !29}
!3321 = !DILocalVariable(name: "re", arg: 1, scope: !3318, file: !3, line: 845, type: !29)
!3322 = !DILocation(line: 845, column: 38, scope: !3318)
!3323 = !DILocalVariable(name: "threads", scope: !3318, file: !3, line: 847, type: !77)
!3324 = !DILocation(line: 847, column: 11, scope: !3318)
!3325 = !DILocalVariable(name: "lar", scope: !3318, file: !3, line: 848, type: !2286)
!3326 = !DILocation(line: 848, column: 11, scope: !3318)
!3327 = !DILocalVariable(name: "a", scope: !3318, file: !3, line: 849, type: !8)
!3328 = !DILocation(line: 849, column: 6, scope: !3318)
!3329 = !DILocalVariable(name: "totthread", scope: !3318, file: !3, line: 849, type: !8)
!3330 = !DILocation(line: 849, column: 9, scope: !3318)
!3331 = !DILocalVariable(name: "test_break", scope: !3318, file: !3, line: 850, type: !2200)
!3332 = !DILocation(line: 850, column: 8, scope: !3318)
!3333 = !DILocation(line: 853, column: 8, scope: !3334)
!3334 = distinct !DILexicalBlock(scope: !3318, file: !3, line: 853, column: 6)
!3335 = !DILocation(line: 853, column: 6, scope: !3334)
!3336 = !DILocation(line: 853, column: 6, scope: !3318)
!3337 = !DILocation(line: 854, column: 12, scope: !3338)
!3338 = distinct !DILexicalBlock(scope: !3339, file: !3, line: 854, column: 3)
!3339 = distinct !DILexicalBlock(scope: !3334, file: !3, line: 853, column: 22)
!3340 = !DILocation(line: 854, column: 16, scope: !3338)
!3341 = !DILocation(line: 854, column: 24, scope: !3338)
!3342 = !DILocation(line: 854, column: 11, scope: !3338)
!3343 = !DILocation(line: 854, column: 8, scope: !3338)
!3344 = !DILocation(line: 854, column: 31, scope: !3345)
!3345 = distinct !DILexicalBlock(scope: !3338, file: !3, line: 854, column: 3)
!3346 = !DILocation(line: 854, column: 3, scope: !3338)
!3347 = !DILocation(line: 855, column: 8, scope: !3348)
!3348 = distinct !DILexicalBlock(scope: !3345, file: !3, line: 855, column: 8)
!3349 = !DILocation(line: 855, column: 13, scope: !3348)
!3350 = !DILocation(line: 855, column: 8, scope: !3345)
!3351 = !DILocation(line: 856, column: 14, scope: !3348)
!3352 = !DILocation(line: 856, column: 5, scope: !3348)
!3353 = !DILocation(line: 854, column: 41, scope: !3345)
!3354 = !DILocation(line: 854, column: 46, scope: !3345)
!3355 = !DILocation(line: 854, column: 39, scope: !3345)
!3356 = !DILocation(line: 854, column: 3, scope: !3345)
!3357 = distinct !{!3357, !3346, !3358}
!3358 = !DILocation(line: 856, column: 14, scope: !3338)
!3359 = !DILocation(line: 858, column: 22, scope: !3339)
!3360 = !DILocation(line: 858, column: 33, scope: !3339)
!3361 = !DILocation(line: 858, column: 37, scope: !3339)
!3362 = !DILocation(line: 858, column: 39, scope: !3339)
!3363 = !DILocation(line: 858, column: 15, scope: !3339)
!3364 = !DILocation(line: 858, column: 13, scope: !3339)
!3365 = !DILocation(line: 859, column: 2, scope: !3339)
!3366 = !DILocation(line: 861, column: 13, scope: !3334)
!3367 = !DILocation(line: 863, column: 6, scope: !3368)
!3368 = distinct !DILexicalBlock(scope: !3318, file: !3, line: 863, column: 6)
!3369 = !DILocation(line: 863, column: 16, scope: !3368)
!3370 = !DILocation(line: 863, column: 6, scope: !3318)
!3371 = !DILocation(line: 864, column: 12, scope: !3372)
!3372 = distinct !DILexicalBlock(scope: !3373, file: !3, line: 864, column: 3)
!3373 = distinct !DILexicalBlock(scope: !3368, file: !3, line: 863, column: 22)
!3374 = !DILocation(line: 864, column: 16, scope: !3372)
!3375 = !DILocation(line: 864, column: 24, scope: !3372)
!3376 = !DILocation(line: 864, column: 11, scope: !3372)
!3377 = !DILocation(line: 864, column: 8, scope: !3372)
!3378 = !DILocation(line: 864, column: 31, scope: !3379)
!3379 = distinct !DILexicalBlock(scope: !3372, file: !3, line: 864, column: 3)
!3380 = !DILocation(line: 864, column: 3, scope: !3372)
!3381 = !DILocation(line: 865, column: 8, scope: !3382)
!3382 = distinct !DILexicalBlock(scope: !3383, file: !3, line: 865, column: 8)
!3383 = distinct !DILexicalBlock(scope: !3379, file: !3, line: 864, column: 52)
!3384 = !DILocation(line: 865, column: 12, scope: !3382)
!3385 = !DILocation(line: 865, column: 23, scope: !3382)
!3386 = !DILocation(line: 865, column: 27, scope: !3382)
!3387 = !DILocation(line: 865, column: 8, scope: !3383)
!3388 = !DILocation(line: 865, column: 33, scope: !3382)
!3389 = !DILocation(line: 866, column: 8, scope: !3390)
!3390 = distinct !DILexicalBlock(scope: !3383, file: !3, line: 866, column: 8)
!3391 = !DILocation(line: 866, column: 13, scope: !3390)
!3392 = !DILocation(line: 866, column: 8, scope: !3383)
!3393 = !DILocation(line: 868, column: 19, scope: !3394)
!3394 = distinct !DILexicalBlock(scope: !3390, file: !3, line: 866, column: 18)
!3395 = !DILocation(line: 868, column: 23, scope: !3394)
!3396 = !DILocation(line: 868, column: 5, scope: !3394)
!3397 = !DILocation(line: 869, column: 4, scope: !3394)
!3398 = !DILocation(line: 870, column: 3, scope: !3383)
!3399 = !DILocation(line: 864, column: 41, scope: !3379)
!3400 = !DILocation(line: 864, column: 46, scope: !3379)
!3401 = !DILocation(line: 864, column: 39, scope: !3379)
!3402 = !DILocation(line: 864, column: 3, scope: !3379)
!3403 = distinct !{!3403, !3380, !3404}
!3404 = !DILocation(line: 870, column: 3, scope: !3372)
!3405 = !DILocation(line: 871, column: 2, scope: !3373)
!3406 = !DILocation(line: 874, column: 15, scope: !3407)
!3407 = distinct !DILexicalBlock(scope: !3368, file: !3, line: 872, column: 7)
!3408 = !DILocation(line: 874, column: 19, scope: !3407)
!3409 = !DILocation(line: 874, column: 13, scope: !3407)
!3410 = !DILocation(line: 875, column: 3, scope: !3407)
!3411 = !DILocation(line: 875, column: 7, scope: !3407)
!3412 = !DILocation(line: 875, column: 17, scope: !3407)
!3413 = !DILocation(line: 877, column: 12, scope: !3414)
!3414 = distinct !DILexicalBlock(scope: !3407, file: !3, line: 877, column: 3)
!3415 = !DILocation(line: 877, column: 16, scope: !3414)
!3416 = !DILocation(line: 877, column: 24, scope: !3414)
!3417 = !DILocation(line: 877, column: 11, scope: !3414)
!3418 = !DILocation(line: 877, column: 8, scope: !3414)
!3419 = !DILocation(line: 877, column: 31, scope: !3420)
!3420 = distinct !DILexicalBlock(scope: !3414, file: !3, line: 877, column: 3)
!3421 = !DILocation(line: 877, column: 3, scope: !3414)
!3422 = !DILocation(line: 878, column: 4, scope: !3423)
!3423 = distinct !DILexicalBlock(scope: !3420, file: !3, line: 877, column: 52)
!3424 = !DILocation(line: 878, column: 9, scope: !3423)
!3425 = !DILocation(line: 878, column: 24, scope: !3423)
!3426 = !DILocation(line: 879, column: 4, scope: !3423)
!3427 = !DILocation(line: 879, column: 9, scope: !3423)
!3428 = !DILocation(line: 879, column: 21, scope: !3423)
!3429 = !DILocation(line: 880, column: 3, scope: !3423)
!3430 = !DILocation(line: 877, column: 41, scope: !3420)
!3431 = !DILocation(line: 877, column: 46, scope: !3420)
!3432 = !DILocation(line: 877, column: 39, scope: !3420)
!3433 = !DILocation(line: 877, column: 3, scope: !3420)
!3434 = distinct !{!3434, !3421, !3435}
!3435 = !DILocation(line: 880, column: 3, scope: !3414)
!3436 = !DILocation(line: 882, column: 48, scope: !3407)
!3437 = !DILocation(line: 882, column: 3, scope: !3407)
!3438 = !DILocation(line: 884, column: 9, scope: !3439)
!3439 = distinct !DILexicalBlock(scope: !3407, file: !3, line: 884, column: 3)
!3440 = !DILocation(line: 884, column: 8, scope: !3439)
!3441 = !DILocation(line: 884, column: 13, scope: !3442)
!3442 = distinct !DILexicalBlock(scope: !3439, file: !3, line: 884, column: 3)
!3443 = !DILocation(line: 884, column: 15, scope: !3442)
!3444 = !DILocation(line: 884, column: 14, scope: !3442)
!3445 = !DILocation(line: 884, column: 3, scope: !3439)
!3446 = !DILocation(line: 885, column: 32, scope: !3442)
!3447 = !DILocation(line: 885, column: 4, scope: !3442)
!3448 = !DILocation(line: 884, column: 27, scope: !3442)
!3449 = !DILocation(line: 884, column: 3, scope: !3442)
!3450 = distinct !{!3450, !3445, !3451}
!3451 = !DILocation(line: 885, column: 34, scope: !3439)
!3452 = !DILocation(line: 888, column: 3, scope: !3407)
!3453 = !DILocation(line: 889, column: 17, scope: !3454)
!3454 = distinct !DILexicalBlock(scope: !3455, file: !3, line: 889, column: 8)
!3455 = distinct !DILexicalBlock(scope: !3407, file: !3, line: 888, column: 6)
!3456 = !DILocation(line: 889, column: 28, scope: !3454)
!3457 = !DILocation(line: 889, column: 32, scope: !3454)
!3458 = !DILocation(line: 889, column: 16, scope: !3454)
!3459 = !DILocation(line: 889, column: 8, scope: !3455)
!3460 = !DILocation(line: 890, column: 5, scope: !3454)
!3461 = !DILocation(line: 892, column: 4, scope: !3455)
!3462 = !DILocation(line: 894, column: 4, scope: !3455)
!3463 = !DILocation(line: 895, column: 13, scope: !3464)
!3464 = distinct !DILexicalBlock(scope: !3455, file: !3, line: 895, column: 4)
!3465 = !DILocation(line: 895, column: 17, scope: !3464)
!3466 = !DILocation(line: 895, column: 25, scope: !3464)
!3467 = !DILocation(line: 895, column: 12, scope: !3464)
!3468 = !DILocation(line: 895, column: 9, scope: !3464)
!3469 = !DILocation(line: 895, column: 32, scope: !3470)
!3470 = distinct !DILexicalBlock(scope: !3464, file: !3, line: 895, column: 4)
!3471 = !DILocation(line: 895, column: 4, scope: !3464)
!3472 = !DILocation(line: 896, column: 9, scope: !3473)
!3473 = distinct !DILexicalBlock(scope: !3470, file: !3, line: 896, column: 9)
!3474 = !DILocation(line: 896, column: 14, scope: !3473)
!3475 = !DILocation(line: 896, column: 18, scope: !3473)
!3476 = !DILocation(line: 896, column: 22, scope: !3473)
!3477 = !DILocation(line: 896, column: 27, scope: !3473)
!3478 = !DILocation(line: 896, column: 9, scope: !3470)
!3479 = !DILocation(line: 897, column: 6, scope: !3473)
!3480 = !DILocation(line: 895, column: 42, scope: !3470)
!3481 = !DILocation(line: 895, column: 47, scope: !3470)
!3482 = !DILocation(line: 895, column: 40, scope: !3470)
!3483 = !DILocation(line: 895, column: 4, scope: !3470)
!3484 = distinct !{!3484, !3471, !3485}
!3485 = !DILocation(line: 897, column: 6, scope: !3464)
!3486 = !DILocation(line: 898, column: 4, scope: !3455)
!3487 = !DILocation(line: 899, column: 3, scope: !3455)
!3488 = !DILocation(line: 899, column: 12, scope: !3407)
!3489 = distinct !{!3489, !3452, !3490}
!3490 = !DILocation(line: 899, column: 15, scope: !3407)
!3491 = !DILocation(line: 901, column: 3, scope: !3407)
!3492 = !DILocation(line: 904, column: 19, scope: !3407)
!3493 = !DILocation(line: 904, column: 3, scope: !3407)
!3494 = !DILocation(line: 904, column: 7, scope: !3407)
!3495 = !DILocation(line: 904, column: 17, scope: !3407)
!3496 = !DILocation(line: 905, column: 10, scope: !3407)
!3497 = !DILocation(line: 907, column: 1, scope: !3318)
!3498 = distinct !DISubprogram(name: "min_ii", scope: !2966, file: !2966, line: 211, type: !3499, scopeLine: 212, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!3499 = !DISubroutineType(types: !3500)
!3500 = !{!8, !8, !8}
!3501 = !DILocalVariable(name: "a", arg: 1, scope: !3498, file: !2966, line: 211, type: !8)
!3502 = !DILocation(line: 211, column: 24, scope: !3498)
!3503 = !DILocalVariable(name: "b", arg: 2, scope: !3498, file: !2966, line: 211, type: !8)
!3504 = !DILocation(line: 211, column: 31, scope: !3498)
!3505 = !DILocation(line: 213, column: 10, scope: !3498)
!3506 = !DILocation(line: 213, column: 14, scope: !3498)
!3507 = !DILocation(line: 213, column: 12, scope: !3498)
!3508 = !DILocation(line: 213, column: 9, scope: !3498)
!3509 = !DILocation(line: 213, column: 19, scope: !3498)
!3510 = !DILocation(line: 213, column: 23, scope: !3498)
!3511 = !DILocation(line: 213, column: 2, scope: !3498)
!3512 = distinct !DISubprogram(name: "thread_break", scope: !3, file: !3, line: 840, type: !2201, scopeLine: 841, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!3513 = !DILocalVariable(name: "UNUSED_arg", arg: 1, scope: !3512, file: !3, line: 840, type: !6)
!3514 = !DILocation(line: 840, column: 31, scope: !3512)
!3515 = !DILocation(line: 842, column: 9, scope: !3512)
!3516 = !DILocation(line: 842, column: 2, scope: !3512)
!3517 = distinct !DISubprogram(name: "do_shadow_thread", scope: !3, file: !3, line: 812, type: !3518, scopeLine: 813, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!3518 = !DISubroutineType(types: !3519)
!3519 = !{!6, !6}
!3520 = !DILocalVariable(name: "re_v", arg: 1, scope: !3517, file: !3, line: 812, type: !6)
!3521 = !DILocation(line: 812, column: 37, scope: !3517)
!3522 = !DILocalVariable(name: "re", scope: !3517, file: !3, line: 814, type: !29)
!3523 = !DILocation(line: 814, column: 10, scope: !3517)
!3524 = !DILocation(line: 814, column: 25, scope: !3517)
!3525 = !DILocation(line: 814, column: 15, scope: !3517)
!3526 = !DILocalVariable(name: "lar", scope: !3517, file: !3, line: 815, type: !2286)
!3527 = !DILocation(line: 815, column: 11, scope: !3517)
!3528 = !DILocation(line: 817, column: 2, scope: !3517)
!3529 = !DILocation(line: 818, column: 3, scope: !3530)
!3530 = distinct !DILexicalBlock(scope: !3517, file: !3, line: 817, column: 5)
!3531 = !DILocation(line: 819, column: 12, scope: !3532)
!3532 = distinct !DILexicalBlock(scope: !3530, file: !3, line: 819, column: 3)
!3533 = !DILocation(line: 819, column: 16, scope: !3532)
!3534 = !DILocation(line: 819, column: 24, scope: !3532)
!3535 = !DILocation(line: 819, column: 11, scope: !3532)
!3536 = !DILocation(line: 819, column: 8, scope: !3532)
!3537 = !DILocation(line: 819, column: 31, scope: !3538)
!3538 = distinct !DILexicalBlock(scope: !3532, file: !3, line: 819, column: 3)
!3539 = !DILocation(line: 819, column: 3, scope: !3532)
!3540 = !DILocation(line: 820, column: 8, scope: !3541)
!3541 = distinct !DILexicalBlock(scope: !3542, file: !3, line: 820, column: 8)
!3542 = distinct !DILexicalBlock(scope: !3538, file: !3, line: 819, column: 51)
!3543 = !DILocation(line: 820, column: 13, scope: !3541)
!3544 = !DILocation(line: 820, column: 17, scope: !3541)
!3545 = !DILocation(line: 820, column: 21, scope: !3541)
!3546 = !DILocation(line: 820, column: 26, scope: !3541)
!3547 = !DILocation(line: 820, column: 8, scope: !3542)
!3548 = !DILocation(line: 821, column: 5, scope: !3549)
!3549 = distinct !DILexicalBlock(scope: !3541, file: !3, line: 820, column: 43)
!3550 = !DILocation(line: 821, column: 10, scope: !3549)
!3551 = !DILocation(line: 821, column: 25, scope: !3549)
!3552 = !DILocation(line: 822, column: 5, scope: !3549)
!3553 = !DILocation(line: 824, column: 3, scope: !3542)
!3554 = !DILocation(line: 819, column: 40, scope: !3538)
!3555 = !DILocation(line: 819, column: 45, scope: !3538)
!3556 = !DILocation(line: 819, column: 39, scope: !3538)
!3557 = !DILocation(line: 819, column: 3, scope: !3538)
!3558 = distinct !{!3558, !3539, !3559}
!3559 = !DILocation(line: 824, column: 3, scope: !3532)
!3560 = !DILocation(line: 825, column: 3, scope: !3530)
!3561 = !DILocation(line: 828, column: 7, scope: !3562)
!3562 = distinct !DILexicalBlock(scope: !3530, file: !3, line: 828, column: 7)
!3563 = !DILocation(line: 828, column: 7, scope: !3530)
!3564 = !DILocation(line: 829, column: 18, scope: !3565)
!3565 = distinct !DILexicalBlock(scope: !3562, file: !3, line: 828, column: 12)
!3566 = !DILocation(line: 829, column: 22, scope: !3565)
!3567 = !DILocation(line: 829, column: 4, scope: !3565)
!3568 = !DILocation(line: 830, column: 4, scope: !3565)
!3569 = !DILocation(line: 831, column: 4, scope: !3565)
!3570 = !DILocation(line: 831, column: 9, scope: !3565)
!3571 = !DILocation(line: 831, column: 21, scope: !3565)
!3572 = !DILocation(line: 832, column: 4, scope: !3565)
!3573 = !DILocation(line: 833, column: 3, scope: !3565)
!3574 = !DILocation(line: 834, column: 2, scope: !3530)
!3575 = !DILocation(line: 834, column: 11, scope: !3517)
!3576 = !DILocation(line: 834, column: 15, scope: !3517)
!3577 = !DILocation(line: 834, column: 19, scope: !3517)
!3578 = !DILocation(line: 834, column: 23, scope: !3517)
!3579 = !DILocation(line: 834, column: 34, scope: !3517)
!3580 = !DILocation(line: 834, column: 38, scope: !3517)
!3581 = !DILocation(line: 834, column: 18, scope: !3517)
!3582 = !DILocation(line: 0, scope: !3517)
!3583 = distinct !{!3583, !3528, !3584}
!3584 = !DILocation(line: 834, column: 42, scope: !3517)
!3585 = !DILocation(line: 836, column: 2, scope: !3517)
!3586 = distinct !DISubprogram(name: "freeshadowbuf", scope: !3, file: !3, line: 909, type: !3587, scopeLine: 910, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !4)
!3587 = !DISubroutineType(types: !3588)
!3588 = !{null, !2286}
!3589 = !DILocalVariable(name: "lar", arg: 1, scope: !3586, file: !3, line: 909, type: !2286)
!3590 = !DILocation(line: 909, column: 29, scope: !3586)
!3591 = !DILocation(line: 911, column: 6, scope: !3592)
!3592 = distinct !DILexicalBlock(scope: !3586, file: !3, line: 911, column: 6)
!3593 = !DILocation(line: 911, column: 11, scope: !3592)
!3594 = !DILocation(line: 911, column: 6, scope: !3586)
!3595 = !DILocalVariable(name: "shb", scope: !3596, file: !3, line: 912, type: !2461)
!3596 = distinct !DILexicalBlock(scope: !3592, file: !3, line: 911, column: 16)
!3597 = !DILocation(line: 912, column: 12, scope: !3596)
!3598 = !DILocation(line: 912, column: 17, scope: !3596)
!3599 = !DILocation(line: 912, column: 22, scope: !3596)
!3600 = !DILocalVariable(name: "shsample", scope: !3596, file: !3, line: 913, type: !3601)
!3601 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3602, size: 64)
!3602 = !DIDerivedType(tag: DW_TAG_typedef, name: "ShadSampleBuf", file: !16, line: 295, baseType: !3603)
!3603 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ShadSampleBuf", file: !16, line: 289, size: 384, elements: !3604)
!3604 = !{!3605, !3607, !3608, !3610, !3611, !3614}
!3605 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3603, file: !16, line: 290, baseType: !3606, size: 64)
!3606 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3603, size: 64)
!3607 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3603, file: !16, line: 290, baseType: !3606, size: 64, offset: 64)
!3608 = !DIDerivedType(tag: DW_TAG_member, name: "zbuf", scope: !3603, file: !16, line: 291, baseType: !3609, size: 64, offset: 128)
!3609 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2211, size: 64)
!3610 = !DIDerivedType(tag: DW_TAG_member, name: "cbuf", scope: !3603, file: !16, line: 292, baseType: !27, size: 64, offset: 192)
!3611 = !DIDerivedType(tag: DW_TAG_member, name: "deepbuf", scope: !3603, file: !16, line: 293, baseType: !3612, size: 64, offset: 256)
!3612 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3613, size: 64)
!3613 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15, size: 64)
!3614 = !DIDerivedType(tag: DW_TAG_member, name: "totbuf", scope: !3603, file: !16, line: 294, baseType: !26, size: 64, offset: 320)
!3615 = !DILocation(line: 913, column: 18, scope: !3596)
!3616 = !DILocalVariable(name: "b", scope: !3596, file: !3, line: 914, type: !8)
!3617 = !DILocation(line: 914, column: 7, scope: !3596)
!3618 = !DILocalVariable(name: "v", scope: !3596, file: !3, line: 914, type: !8)
!3619 = !DILocation(line: 914, column: 10, scope: !3596)
!3620 = !DILocation(line: 916, column: 18, scope: !3621)
!3621 = distinct !DILexicalBlock(scope: !3596, file: !3, line: 916, column: 3)
!3622 = !DILocation(line: 916, column: 23, scope: !3621)
!3623 = !DILocation(line: 916, column: 31, scope: !3621)
!3624 = !DILocation(line: 916, column: 16, scope: !3621)
!3625 = !DILocation(line: 916, column: 8, scope: !3621)
!3626 = !DILocation(line: 916, column: 38, scope: !3627)
!3627 = distinct !DILexicalBlock(scope: !3621, file: !3, line: 916, column: 3)
!3628 = !DILocation(line: 916, column: 3, scope: !3621)
!3629 = !DILocation(line: 917, column: 8, scope: !3630)
!3630 = distinct !DILexicalBlock(scope: !3631, file: !3, line: 917, column: 8)
!3631 = distinct !DILexicalBlock(scope: !3627, file: !3, line: 916, column: 74)
!3632 = !DILocation(line: 917, column: 18, scope: !3630)
!3633 = !DILocation(line: 917, column: 8, scope: !3631)
!3634 = !DILocation(line: 918, column: 8, scope: !3635)
!3635 = distinct !DILexicalBlock(scope: !3630, file: !3, line: 917, column: 27)
!3636 = !DILocation(line: 918, column: 13, scope: !3635)
!3637 = !DILocation(line: 918, column: 18, scope: !3635)
!3638 = !DILocation(line: 918, column: 23, scope: !3635)
!3639 = !DILocation(line: 918, column: 17, scope: !3635)
!3640 = !DILocation(line: 918, column: 6, scope: !3635)
!3641 = !DILocation(line: 919, column: 11, scope: !3642)
!3642 = distinct !DILexicalBlock(scope: !3635, file: !3, line: 919, column: 5)
!3643 = !DILocation(line: 919, column: 10, scope: !3642)
!3644 = !DILocation(line: 919, column: 15, scope: !3645)
!3645 = distinct !DILexicalBlock(scope: !3642, file: !3, line: 919, column: 5)
!3646 = !DILocation(line: 919, column: 17, scope: !3645)
!3647 = !DILocation(line: 919, column: 16, scope: !3645)
!3648 = !DILocation(line: 919, column: 5, scope: !3642)
!3649 = !DILocation(line: 920, column: 10, scope: !3650)
!3650 = distinct !DILexicalBlock(scope: !3645, file: !3, line: 920, column: 10)
!3651 = !DILocation(line: 920, column: 20, scope: !3650)
!3652 = !DILocation(line: 920, column: 28, scope: !3650)
!3653 = !DILocation(line: 920, column: 10, scope: !3645)
!3654 = !DILocation(line: 921, column: 7, scope: !3650)
!3655 = !DILocation(line: 921, column: 17, scope: !3650)
!3656 = !DILocation(line: 921, column: 27, scope: !3650)
!3657 = !DILocation(line: 921, column: 35, scope: !3650)
!3658 = !DILocation(line: 920, column: 29, scope: !3650)
!3659 = !DILocation(line: 919, column: 21, scope: !3645)
!3660 = !DILocation(line: 919, column: 5, scope: !3645)
!3661 = distinct !{!3661, !3648, !3662}
!3662 = !DILocation(line: 921, column: 37, scope: !3642)
!3663 = !DILocation(line: 923, column: 5, scope: !3635)
!3664 = !DILocation(line: 923, column: 15, scope: !3635)
!3665 = !DILocation(line: 923, column: 25, scope: !3635)
!3666 = !DILocation(line: 924, column: 5, scope: !3635)
!3667 = !DILocation(line: 924, column: 15, scope: !3635)
!3668 = !DILocation(line: 924, column: 25, scope: !3635)
!3669 = !DILocation(line: 925, column: 4, scope: !3635)
!3670 = !DILocalVariable(name: "ztile", scope: !3671, file: !3, line: 927, type: !3609)
!3671 = distinct !DILexicalBlock(scope: !3630, file: !3, line: 926, column: 9)
!3672 = !DILocation(line: 927, column: 15, scope: !3671)
!3673 = !DILocation(line: 927, column: 22, scope: !3671)
!3674 = !DILocation(line: 927, column: 32, scope: !3671)
!3675 = !DILocalVariable(name: "ctile", scope: !3671, file: !3, line: 928, type: !2182)
!3676 = !DILocation(line: 928, column: 17, scope: !3671)
!3677 = !DILocation(line: 928, column: 24, scope: !3671)
!3678 = !DILocation(line: 928, column: 34, scope: !3671)
!3679 = !DILocation(line: 930, column: 9, scope: !3671)
!3680 = !DILocation(line: 930, column: 14, scope: !3671)
!3681 = !DILocation(line: 930, column: 19, scope: !3671)
!3682 = !DILocation(line: 930, column: 24, scope: !3671)
!3683 = !DILocation(line: 930, column: 18, scope: !3671)
!3684 = !DILocation(line: 930, column: 29, scope: !3671)
!3685 = !DILocation(line: 930, column: 6, scope: !3671)
!3686 = !DILocation(line: 931, column: 11, scope: !3687)
!3687 = distinct !DILexicalBlock(scope: !3671, file: !3, line: 931, column: 5)
!3688 = !DILocation(line: 931, column: 10, scope: !3687)
!3689 = !DILocation(line: 931, column: 15, scope: !3690)
!3690 = distinct !DILexicalBlock(scope: !3687, file: !3, line: 931, column: 5)
!3691 = !DILocation(line: 931, column: 17, scope: !3690)
!3692 = !DILocation(line: 931, column: 16, scope: !3690)
!3693 = !DILocation(line: 931, column: 5, scope: !3687)
!3694 = !DILocation(line: 932, column: 11, scope: !3695)
!3695 = distinct !DILexicalBlock(scope: !3690, file: !3, line: 932, column: 10)
!3696 = !DILocation(line: 932, column: 10, scope: !3695)
!3697 = !DILocation(line: 932, column: 10, scope: !3690)
!3698 = !DILocation(line: 932, column: 18, scope: !3695)
!3699 = !DILocation(line: 932, column: 38, scope: !3695)
!3700 = !DILocation(line: 932, column: 37, scope: !3695)
!3701 = !DILocation(line: 932, column: 28, scope: !3695)
!3702 = !DILocation(line: 931, column: 21, scope: !3690)
!3703 = !DILocation(line: 931, column: 30, scope: !3690)
!3704 = !DILocation(line: 931, column: 39, scope: !3690)
!3705 = !DILocation(line: 931, column: 5, scope: !3690)
!3706 = distinct !{!3706, !3693, !3707}
!3707 = !DILocation(line: 932, column: 43, scope: !3687)
!3708 = !DILocation(line: 934, column: 5, scope: !3671)
!3709 = !DILocation(line: 934, column: 15, scope: !3671)
!3710 = !DILocation(line: 934, column: 25, scope: !3671)
!3711 = !DILocation(line: 935, column: 5, scope: !3671)
!3712 = !DILocation(line: 935, column: 15, scope: !3671)
!3713 = !DILocation(line: 935, column: 25, scope: !3671)
!3714 = !DILocation(line: 937, column: 3, scope: !3631)
!3715 = !DILocation(line: 916, column: 58, scope: !3627)
!3716 = !DILocation(line: 916, column: 68, scope: !3627)
!3717 = !DILocation(line: 916, column: 56, scope: !3627)
!3718 = !DILocation(line: 916, column: 3, scope: !3627)
!3719 = distinct !{!3719, !3628, !3720}
!3720 = !DILocation(line: 937, column: 3, scope: !3621)
!3721 = !DILocation(line: 938, column: 18, scope: !3596)
!3722 = !DILocation(line: 938, column: 23, scope: !3596)
!3723 = !DILocation(line: 938, column: 3, scope: !3596)
!3724 = !DILocation(line: 940, column: 7, scope: !3725)
!3725 = distinct !DILexicalBlock(scope: !3596, file: !3, line: 940, column: 7)
!3726 = !DILocation(line: 940, column: 12, scope: !3725)
!3727 = !DILocation(line: 940, column: 7, scope: !3596)
!3728 = !DILocation(line: 940, column: 20, scope: !3725)
!3729 = !DILocation(line: 940, column: 30, scope: !3725)
!3730 = !DILocation(line: 940, column: 35, scope: !3725)
!3731 = !DILocation(line: 941, column: 3, scope: !3596)
!3732 = !DILocation(line: 941, column: 13, scope: !3596)
!3733 = !DILocation(line: 941, column: 18, scope: !3596)
!3734 = !DILocation(line: 943, column: 3, scope: !3596)
!3735 = !DILocation(line: 943, column: 8, scope: !3596)
!3736 = !DILocation(line: 943, column: 11, scope: !3596)
!3737 = !DILocation(line: 944, column: 2, scope: !3596)
!3738 = !DILocation(line: 945, column: 1, scope: !3586)
!3739 = distinct !DISubprogram(name: "testshadowbuf", scope: !3, file: !3, line: 1122, type: !3740, scopeLine: 1123, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !4)
!3740 = !DISubroutineType(types: !3741)
!3741 = !{!7, !29, !2461, !3742, !3742, !3742, !7, !7}
!3742 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3743, size: 64)
!3743 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7)
!3744 = !DILocalVariable(name: "re", arg: 1, scope: !3739, file: !3, line: 1122, type: !29)
!3745 = !DILocation(line: 1122, column: 29, scope: !3739)
!3746 = !DILocalVariable(name: "shb", arg: 2, scope: !3739, file: !3, line: 1122, type: !2461)
!3747 = !DILocation(line: 1122, column: 42, scope: !3739)
!3748 = !DILocalVariable(name: "co", arg: 3, scope: !3739, file: !3, line: 1122, type: !3742)
!3749 = !DILocation(line: 1122, column: 59, scope: !3739)
!3750 = !DILocalVariable(name: "dxco", arg: 4, scope: !3739, file: !3, line: 1122, type: !3742)
!3751 = !DILocation(line: 1122, column: 78, scope: !3739)
!3752 = !DILocalVariable(name: "dyco", arg: 5, scope: !3739, file: !3, line: 1122, type: !3742)
!3753 = !DILocation(line: 1122, column: 99, scope: !3739)
!3754 = !DILocalVariable(name: "inp", arg: 6, scope: !3739, file: !3, line: 1122, type: !7)
!3755 = !DILocation(line: 1122, column: 114, scope: !3739)
!3756 = !DILocalVariable(name: "mat_bias", arg: 7, scope: !3739, file: !3, line: 1122, type: !7)
!3757 = !DILocation(line: 1122, column: 125, scope: !3739)
!3758 = !DILocalVariable(name: "shsample", scope: !3739, file: !3, line: 1124, type: !3601)
!3759 = !DILocation(line: 1124, column: 17, scope: !3739)
!3760 = !DILocalVariable(name: "fac", scope: !3739, file: !3, line: 1125, type: !7)
!3761 = !DILocation(line: 1125, column: 8, scope: !3739)
!3762 = !DILocalVariable(name: "dco", scope: !3739, file: !3, line: 1125, type: !206)
!3763 = !DILocation(line: 1125, column: 13, scope: !3739)
!3764 = !DILocalVariable(name: "dx", scope: !3739, file: !3, line: 1125, type: !206)
!3765 = !DILocation(line: 1125, column: 21, scope: !3739)
!3766 = !DILocalVariable(name: "dy", scope: !3739, file: !3, line: 1125, type: !206)
!3767 = !DILocation(line: 1125, column: 28, scope: !3739)
!3768 = !DILocalVariable(name: "shadfac", scope: !3739, file: !3, line: 1125, type: !7)
!3769 = !DILocation(line: 1125, column: 35, scope: !3739)
!3770 = !DILocalVariable(name: "xs1", scope: !3739, file: !3, line: 1126, type: !7)
!3771 = !DILocation(line: 1126, column: 8, scope: !3739)
!3772 = !DILocalVariable(name: "ys1", scope: !3739, file: !3, line: 1126, type: !7)
!3773 = !DILocation(line: 1126, column: 13, scope: !3739)
!3774 = !DILocalVariable(name: "zs1", scope: !3739, file: !3, line: 1126, type: !7)
!3775 = !DILocation(line: 1126, column: 18, scope: !3739)
!3776 = !DILocalVariable(name: "jit", scope: !3739, file: !3, line: 1126, type: !63)
!3777 = !DILocation(line: 1126, column: 24, scope: !3739)
!3778 = !DILocalVariable(name: "weight", scope: !3739, file: !3, line: 1126, type: !63)
!3779 = !DILocation(line: 1126, column: 30, scope: !3739)
!3780 = !DILocalVariable(name: "xres", scope: !3739, file: !3, line: 1126, type: !7)
!3781 = !DILocation(line: 1126, column: 38, scope: !3739)
!3782 = !DILocalVariable(name: "yres", scope: !3739, file: !3, line: 1126, type: !7)
!3783 = !DILocation(line: 1126, column: 44, scope: !3739)
!3784 = !DILocalVariable(name: "biasf", scope: !3739, file: !3, line: 1126, type: !7)
!3785 = !DILocation(line: 1126, column: 50, scope: !3739)
!3786 = !DILocalVariable(name: "xs", scope: !3739, file: !3, line: 1127, type: !8)
!3787 = !DILocation(line: 1127, column: 6, scope: !3739)
!3788 = !DILocalVariable(name: "ys", scope: !3739, file: !3, line: 1127, type: !8)
!3789 = !DILocation(line: 1127, column: 10, scope: !3739)
!3790 = !DILocalVariable(name: "zs", scope: !3739, file: !3, line: 1127, type: !8)
!3791 = !DILocation(line: 1127, column: 14, scope: !3739)
!3792 = !DILocalVariable(name: "bias", scope: !3739, file: !3, line: 1127, type: !8)
!3793 = !DILocation(line: 1127, column: 18, scope: !3739)
!3794 = !DILocalVariable(name: "rz", scope: !3739, file: !3, line: 1127, type: !26)
!3795 = !DILocation(line: 1127, column: 25, scope: !3739)
!3796 = !DILocalVariable(name: "a", scope: !3739, file: !3, line: 1128, type: !43)
!3797 = !DILocation(line: 1128, column: 8, scope: !3739)
!3798 = !DILocalVariable(name: "num", scope: !3739, file: !3, line: 1128, type: !43)
!3799 = !DILocation(line: 1128, column: 11, scope: !3739)
!3800 = !DILocation(line: 1131, column: 6, scope: !3801)
!3801 = distinct !DILexicalBlock(scope: !3739, file: !3, line: 1131, column: 6)
!3802 = !DILocation(line: 1131, column: 11, scope: !3801)
!3803 = !DILocation(line: 1131, column: 19, scope: !3801)
!3804 = !DILocation(line: 1131, column: 24, scope: !3801)
!3805 = !DILocation(line: 1131, column: 6, scope: !3739)
!3806 = !DILocation(line: 1132, column: 3, scope: !3801)
!3807 = !DILocation(line: 1135, column: 6, scope: !3808)
!3808 = distinct !DILexicalBlock(scope: !3739, file: !3, line: 1135, column: 6)
!3809 = !DILocation(line: 1135, column: 10, scope: !3808)
!3810 = !DILocation(line: 1135, column: 6, scope: !3739)
!3811 = !DILocation(line: 1136, column: 3, scope: !3808)
!3812 = !DILocation(line: 1139, column: 41, scope: !3739)
!3813 = !DILocation(line: 1139, column: 46, scope: !3739)
!3814 = !DILocation(line: 1139, column: 2, scope: !3739)
!3815 = !DILocation(line: 1143, column: 6, scope: !3816)
!3816 = distinct !DILexicalBlock(scope: !3739, file: !3, line: 1143, column: 6)
!3817 = !DILocation(line: 1143, column: 9, scope: !3816)
!3818 = !DILocation(line: 1143, column: 6, scope: !3739)
!3819 = !DILocation(line: 1144, column: 3, scope: !3816)
!3820 = !DILocation(line: 1145, column: 11, scope: !3821)
!3821 = distinct !DILexicalBlock(scope: !3816, file: !3, line: 1145, column: 11)
!3822 = !DILocation(line: 1145, column: 14, scope: !3821)
!3823 = !DILocation(line: 1145, column: 11, scope: !3816)
!3824 = !DILocation(line: 1146, column: 3, scope: !3821)
!3825 = !DILocation(line: 1148, column: 26, scope: !3739)
!3826 = !DILocation(line: 1148, column: 25, scope: !3739)
!3827 = !DILocation(line: 1148, column: 6, scope: !3739)
!3828 = !DILocation(line: 1148, column: 4, scope: !3739)
!3829 = !DILocation(line: 1151, column: 34, scope: !3739)
!3830 = !DILocation(line: 1151, column: 38, scope: !3739)
!3831 = !DILocation(line: 1151, column: 41, scope: !3739)
!3832 = !DILocation(line: 1151, column: 46, scope: !3739)
!3833 = !DILocation(line: 1151, column: 7, scope: !3739)
!3834 = !DILocation(line: 1151, column: 5, scope: !3739)
!3835 = !DILocation(line: 1152, column: 7, scope: !3739)
!3836 = !DILocation(line: 1152, column: 11, scope: !3739)
!3837 = !DILocation(line: 1152, column: 10, scope: !3739)
!3838 = !DILocation(line: 1152, column: 5, scope: !3739)
!3839 = !DILocation(line: 1153, column: 7, scope: !3739)
!3840 = !DILocation(line: 1153, column: 12, scope: !3739)
!3841 = !DILocation(line: 1153, column: 5, scope: !3739)
!3842 = !DILocation(line: 1156, column: 6, scope: !3843)
!3843 = distinct !DILexicalBlock(scope: !3739, file: !3, line: 1156, column: 6)
!3844 = !DILocation(line: 1156, column: 14, scope: !3843)
!3845 = !DILocation(line: 1156, column: 6, scope: !3739)
!3846 = !DILocation(line: 1156, column: 29, scope: !3843)
!3847 = !DILocation(line: 1156, column: 34, scope: !3843)
!3848 = !DILocation(line: 1156, column: 39, scope: !3843)
!3849 = !DILocation(line: 1156, column: 38, scope: !3843)
!3850 = !DILocation(line: 1156, column: 27, scope: !3843)
!3851 = !DILocation(line: 1156, column: 22, scope: !3843)
!3852 = !DILocation(line: 1157, column: 14, scope: !3843)
!3853 = !DILocation(line: 1157, column: 19, scope: !3843)
!3854 = !DILocation(line: 1157, column: 12, scope: !3843)
!3855 = !DILocation(line: 1160, column: 14, scope: !3739)
!3856 = !DILocation(line: 1160, column: 18, scope: !3739)
!3857 = !DILocation(line: 1160, column: 17, scope: !3739)
!3858 = !DILocation(line: 1160, column: 13, scope: !3739)
!3859 = !DILocation(line: 1160, column: 23, scope: !3739)
!3860 = !DILocation(line: 1160, column: 22, scope: !3739)
!3861 = !DILocation(line: 1160, column: 8, scope: !3739)
!3862 = !DILocation(line: 1160, column: 6, scope: !3739)
!3863 = !DILocation(line: 1163, column: 6, scope: !3864)
!3864 = distinct !DILexicalBlock(scope: !3739, file: !3, line: 1163, column: 6)
!3865 = !DILocation(line: 1163, column: 9, scope: !3864)
!3866 = !DILocation(line: 1163, column: 6, scope: !3739)
!3867 = !DILocation(line: 1164, column: 18, scope: !3868)
!3868 = distinct !DILexicalBlock(scope: !3869, file: !3, line: 1164, column: 3)
!3869 = distinct !DILexicalBlock(scope: !3864, file: !3, line: 1163, column: 14)
!3870 = !DILocation(line: 1164, column: 23, scope: !3868)
!3871 = !DILocation(line: 1164, column: 31, scope: !3868)
!3872 = !DILocation(line: 1164, column: 16, scope: !3868)
!3873 = !DILocation(line: 1164, column: 8, scope: !3868)
!3874 = !DILocation(line: 1164, column: 38, scope: !3875)
!3875 = distinct !DILexicalBlock(scope: !3868, file: !3, line: 1164, column: 3)
!3876 = !DILocation(line: 1164, column: 3, scope: !3868)
!3877 = !DILocation(line: 1165, column: 29, scope: !3875)
!3878 = !DILocation(line: 1165, column: 34, scope: !3875)
!3879 = !DILocation(line: 1165, column: 44, scope: !3875)
!3880 = !DILocation(line: 1165, column: 55, scope: !3875)
!3881 = !DILocation(line: 1165, column: 50, scope: !3875)
!3882 = !DILocation(line: 1165, column: 65, scope: !3875)
!3883 = !DILocation(line: 1165, column: 60, scope: !3875)
!3884 = !DILocation(line: 1165, column: 70, scope: !3875)
!3885 = !DILocation(line: 1165, column: 15, scope: !3875)
!3886 = !DILocation(line: 1165, column: 12, scope: !3875)
!3887 = !DILocation(line: 1165, column: 4, scope: !3875)
!3888 = !DILocation(line: 1164, column: 58, scope: !3875)
!3889 = !DILocation(line: 1164, column: 68, scope: !3875)
!3890 = !DILocation(line: 1164, column: 56, scope: !3875)
!3891 = !DILocation(line: 1164, column: 3, scope: !3875)
!3892 = distinct !{!3892, !3876, !3893}
!3893 = !DILocation(line: 1165, column: 72, scope: !3868)
!3894 = !DILocation(line: 1167, column: 10, scope: !3869)
!3895 = !DILocation(line: 1167, column: 25, scope: !3869)
!3896 = !DILocation(line: 1167, column: 30, scope: !3869)
!3897 = !DILocation(line: 1167, column: 18, scope: !3869)
!3898 = !DILocation(line: 1167, column: 17, scope: !3869)
!3899 = !DILocation(line: 1167, column: 3, scope: !3869)
!3900 = !DILocation(line: 1171, column: 14, scope: !3739)
!3901 = !DILocation(line: 1171, column: 19, scope: !3739)
!3902 = !DILocation(line: 1171, column: 23, scope: !3739)
!3903 = !DILocation(line: 1171, column: 2, scope: !3739)
!3904 = !DILocation(line: 1172, column: 24, scope: !3739)
!3905 = !DILocation(line: 1172, column: 32, scope: !3739)
!3906 = !DILocation(line: 1172, column: 45, scope: !3739)
!3907 = !DILocation(line: 1172, column: 50, scope: !3739)
!3908 = !DILocation(line: 1172, column: 2, scope: !3739)
!3909 = !DILocation(line: 1173, column: 9, scope: !3739)
!3910 = !DILocation(line: 1173, column: 15, scope: !3739)
!3911 = !DILocation(line: 1173, column: 13, scope: !3739)
!3912 = !DILocation(line: 1173, column: 2, scope: !3739)
!3913 = !DILocation(line: 1173, column: 7, scope: !3739)
!3914 = !DILocation(line: 1174, column: 9, scope: !3739)
!3915 = !DILocation(line: 1174, column: 15, scope: !3739)
!3916 = !DILocation(line: 1174, column: 13, scope: !3739)
!3917 = !DILocation(line: 1174, column: 2, scope: !3739)
!3918 = !DILocation(line: 1174, column: 7, scope: !3739)
!3919 = !DILocation(line: 1176, column: 14, scope: !3739)
!3920 = !DILocation(line: 1176, column: 19, scope: !3739)
!3921 = !DILocation(line: 1176, column: 23, scope: !3739)
!3922 = !DILocation(line: 1176, column: 2, scope: !3739)
!3923 = !DILocation(line: 1177, column: 24, scope: !3739)
!3924 = !DILocation(line: 1177, column: 32, scope: !3739)
!3925 = !DILocation(line: 1177, column: 45, scope: !3739)
!3926 = !DILocation(line: 1177, column: 50, scope: !3739)
!3927 = !DILocation(line: 1177, column: 2, scope: !3739)
!3928 = !DILocation(line: 1178, column: 9, scope: !3739)
!3929 = !DILocation(line: 1178, column: 15, scope: !3739)
!3930 = !DILocation(line: 1178, column: 13, scope: !3739)
!3931 = !DILocation(line: 1178, column: 2, scope: !3739)
!3932 = !DILocation(line: 1178, column: 7, scope: !3739)
!3933 = !DILocation(line: 1179, column: 9, scope: !3739)
!3934 = !DILocation(line: 1179, column: 15, scope: !3739)
!3935 = !DILocation(line: 1179, column: 13, scope: !3739)
!3936 = !DILocation(line: 1179, column: 2, scope: !3739)
!3937 = !DILocation(line: 1179, column: 7, scope: !3739)
!3938 = !DILocation(line: 1181, column: 9, scope: !3739)
!3939 = !DILocation(line: 1181, column: 22, scope: !3739)
!3940 = !DILocation(line: 1181, column: 16, scope: !3739)
!3941 = !DILocation(line: 1181, column: 37, scope: !3739)
!3942 = !DILocation(line: 1181, column: 31, scope: !3739)
!3943 = !DILocation(line: 1181, column: 29, scope: !3739)
!3944 = !DILocation(line: 1181, column: 13, scope: !3739)
!3945 = !DILocation(line: 1181, column: 7, scope: !3739)
!3946 = !DILocation(line: 1182, column: 9, scope: !3739)
!3947 = !DILocation(line: 1182, column: 22, scope: !3739)
!3948 = !DILocation(line: 1182, column: 16, scope: !3739)
!3949 = !DILocation(line: 1182, column: 37, scope: !3739)
!3950 = !DILocation(line: 1182, column: 31, scope: !3739)
!3951 = !DILocation(line: 1182, column: 29, scope: !3739)
!3952 = !DILocation(line: 1182, column: 13, scope: !3739)
!3953 = !DILocation(line: 1182, column: 7, scope: !3739)
!3954 = !DILocation(line: 1183, column: 6, scope: !3955)
!3955 = distinct !DILexicalBlock(scope: !3739, file: !3, line: 1183, column: 6)
!3956 = !DILocation(line: 1183, column: 10, scope: !3955)
!3957 = !DILocation(line: 1183, column: 6, scope: !3739)
!3958 = !DILocation(line: 1183, column: 21, scope: !3955)
!3959 = !DILocation(line: 1183, column: 17, scope: !3955)
!3960 = !DILocation(line: 1184, column: 6, scope: !3961)
!3961 = distinct !DILexicalBlock(scope: !3739, file: !3, line: 1184, column: 6)
!3962 = !DILocation(line: 1184, column: 10, scope: !3961)
!3963 = !DILocation(line: 1184, column: 6, scope: !3739)
!3964 = !DILocation(line: 1184, column: 21, scope: !3961)
!3965 = !DILocation(line: 1184, column: 17, scope: !3961)
!3966 = !DILocation(line: 1187, column: 9, scope: !3739)
!3967 = !DILocation(line: 1187, column: 13, scope: !3739)
!3968 = !DILocation(line: 1187, column: 6, scope: !3739)
!3969 = !DILocation(line: 1188, column: 9, scope: !3739)
!3970 = !DILocation(line: 1188, column: 13, scope: !3739)
!3971 = !DILocation(line: 1188, column: 6, scope: !3739)
!3972 = !DILocation(line: 1191, column: 6, scope: !3973)
!3973 = distinct !DILexicalBlock(scope: !3739, file: !3, line: 1191, column: 6)
!3974 = !DILocation(line: 1191, column: 10, scope: !3973)
!3975 = !DILocation(line: 1191, column: 17, scope: !3973)
!3976 = !DILocation(line: 1191, column: 20, scope: !3973)
!3977 = !DILocation(line: 1191, column: 24, scope: !3973)
!3978 = !DILocation(line: 1191, column: 6, scope: !3739)
!3979 = !DILocation(line: 1192, column: 13, scope: !3980)
!3980 = distinct !DILexicalBlock(scope: !3973, file: !3, line: 1191, column: 32)
!3981 = !DILocation(line: 1192, column: 18, scope: !3980)
!3982 = !DILocation(line: 1192, column: 26, scope: !3980)
!3983 = !DILocation(line: 1192, column: 11, scope: !3980)
!3984 = !DILocation(line: 1193, column: 24, scope: !3985)
!3985 = distinct !DILexicalBlock(scope: !3980, file: !3, line: 1193, column: 7)
!3986 = !DILocation(line: 1193, column: 29, scope: !3985)
!3987 = !DILocation(line: 1193, column: 49, scope: !3985)
!3988 = !DILocation(line: 1193, column: 44, scope: !3985)
!3989 = !DILocation(line: 1193, column: 59, scope: !3985)
!3990 = !DILocation(line: 1193, column: 54, scope: !3985)
!3991 = !DILocation(line: 1193, column: 7, scope: !3985)
!3992 = !DILocation(line: 1193, column: 7, scope: !3980)
!3993 = !DILocation(line: 1194, column: 25, scope: !3994)
!3994 = distinct !DILexicalBlock(scope: !3995, file: !3, line: 1194, column: 8)
!3995 = distinct !DILexicalBlock(scope: !3985, file: !3, line: 1193, column: 68)
!3996 = !DILocation(line: 1194, column: 30, scope: !3994)
!3997 = !DILocation(line: 1194, column: 51, scope: !3994)
!3998 = !DILocation(line: 1194, column: 55, scope: !3994)
!3999 = !DILocation(line: 1194, column: 54, scope: !3994)
!4000 = !DILocation(line: 1194, column: 45, scope: !3994)
!4001 = !DILocation(line: 1194, column: 67, scope: !3994)
!4002 = !DILocation(line: 1194, column: 62, scope: !3994)
!4003 = !DILocation(line: 1194, column: 8, scope: !3994)
!4004 = !DILocation(line: 1194, column: 8, scope: !3995)
!4005 = !DILocation(line: 1195, column: 26, scope: !4006)
!4006 = distinct !DILexicalBlock(scope: !4007, file: !3, line: 1195, column: 9)
!4007 = distinct !DILexicalBlock(scope: !3994, file: !3, line: 1194, column: 76)
!4008 = !DILocation(line: 1195, column: 31, scope: !4006)
!4009 = !DILocation(line: 1195, column: 51, scope: !4006)
!4010 = !DILocation(line: 1195, column: 46, scope: !4006)
!4011 = !DILocation(line: 1195, column: 62, scope: !4006)
!4012 = !DILocation(line: 1195, column: 66, scope: !4006)
!4013 = !DILocation(line: 1195, column: 65, scope: !4006)
!4014 = !DILocation(line: 1195, column: 56, scope: !4006)
!4015 = !DILocation(line: 1195, column: 9, scope: !4006)
!4016 = !DILocation(line: 1195, column: 9, scope: !4007)
!4017 = !DILocation(line: 1196, column: 27, scope: !4018)
!4018 = distinct !DILexicalBlock(scope: !4019, file: !3, line: 1196, column: 10)
!4019 = distinct !DILexicalBlock(scope: !4006, file: !3, line: 1195, column: 77)
!4020 = !DILocation(line: 1196, column: 32, scope: !4018)
!4021 = !DILocation(line: 1196, column: 53, scope: !4018)
!4022 = !DILocation(line: 1196, column: 57, scope: !4018)
!4023 = !DILocation(line: 1196, column: 56, scope: !4018)
!4024 = !DILocation(line: 1196, column: 47, scope: !4018)
!4025 = !DILocation(line: 1196, column: 70, scope: !4018)
!4026 = !DILocation(line: 1196, column: 74, scope: !4018)
!4027 = !DILocation(line: 1196, column: 73, scope: !4018)
!4028 = !DILocation(line: 1196, column: 64, scope: !4018)
!4029 = !DILocation(line: 1196, column: 10, scope: !4018)
!4030 = !DILocation(line: 1196, column: 10, scope: !4019)
!4031 = !DILocation(line: 1197, column: 28, scope: !4032)
!4032 = distinct !DILexicalBlock(scope: !4018, file: !3, line: 1196, column: 85)
!4033 = !DILocation(line: 1197, column: 33, scope: !4032)
!4034 = !DILocation(line: 1197, column: 43, scope: !4032)
!4035 = !DILocation(line: 1197, column: 54, scope: !4032)
!4036 = !DILocation(line: 1197, column: 49, scope: !4032)
!4037 = !DILocation(line: 1197, column: 64, scope: !4032)
!4038 = !DILocation(line: 1197, column: 59, scope: !4032)
!4039 = !DILocation(line: 1197, column: 69, scope: !4032)
!4040 = !DILocation(line: 1197, column: 14, scope: !4032)
!4041 = !DILocation(line: 1197, column: 7, scope: !4032)
!4042 = !DILocation(line: 1199, column: 5, scope: !4019)
!4043 = !DILocation(line: 1200, column: 4, scope: !4007)
!4044 = !DILocation(line: 1201, column: 3, scope: !3995)
!4045 = !DILocation(line: 1202, column: 2, scope: !3980)
!4046 = !DILocation(line: 1205, column: 17, scope: !4047)
!4047 = distinct !DILexicalBlock(scope: !3739, file: !3, line: 1205, column: 2)
!4048 = !DILocation(line: 1205, column: 22, scope: !4047)
!4049 = !DILocation(line: 1205, column: 30, scope: !4047)
!4050 = !DILocation(line: 1205, column: 15, scope: !4047)
!4051 = !DILocation(line: 1205, column: 7, scope: !4047)
!4052 = !DILocation(line: 1205, column: 37, scope: !4053)
!4053 = distinct !DILexicalBlock(scope: !4047, file: !3, line: 1205, column: 2)
!4054 = !DILocation(line: 1205, column: 2, scope: !4047)
!4055 = !DILocation(line: 1206, column: 8, scope: !4056)
!4056 = distinct !DILexicalBlock(scope: !4053, file: !3, line: 1205, column: 73)
!4057 = !DILocation(line: 1206, column: 13, scope: !4056)
!4058 = !DILocation(line: 1206, column: 6, scope: !4056)
!4059 = !DILocation(line: 1207, column: 11, scope: !4056)
!4060 = !DILocation(line: 1207, column: 16, scope: !4056)
!4061 = !DILocation(line: 1207, column: 9, scope: !4056)
!4062 = !DILocation(line: 1209, column: 10, scope: !4063)
!4063 = distinct !DILexicalBlock(scope: !4056, file: !3, line: 1209, column: 3)
!4064 = !DILocation(line: 1209, column: 9, scope: !4063)
!4065 = !DILocation(line: 1209, column: 8, scope: !4063)
!4066 = !DILocation(line: 1209, column: 15, scope: !4067)
!4067 = distinct !DILexicalBlock(scope: !4063, file: !3, line: 1209, column: 3)
!4068 = !DILocation(line: 1209, column: 16, scope: !4067)
!4069 = !DILocation(line: 1209, column: 3, scope: !4063)
!4070 = !DILocation(line: 1213, column: 8, scope: !4071)
!4071 = distinct !DILexicalBlock(scope: !4067, file: !3, line: 1209, column: 43)
!4072 = !DILocation(line: 1213, column: 14, scope: !4071)
!4073 = !DILocation(line: 1213, column: 20, scope: !4071)
!4074 = !DILocation(line: 1213, column: 27, scope: !4071)
!4075 = !DILocation(line: 1213, column: 18, scope: !4071)
!4076 = !DILocation(line: 1213, column: 12, scope: !4071)
!4077 = !DILocation(line: 1213, column: 6, scope: !4071)
!4078 = !DILocation(line: 1214, column: 8, scope: !4071)
!4079 = !DILocation(line: 1214, column: 14, scope: !4071)
!4080 = !DILocation(line: 1214, column: 20, scope: !4071)
!4081 = !DILocation(line: 1214, column: 27, scope: !4071)
!4082 = !DILocation(line: 1214, column: 18, scope: !4071)
!4083 = !DILocation(line: 1214, column: 12, scope: !4071)
!4084 = !DILocation(line: 1214, column: 6, scope: !4071)
!4085 = !DILocation(line: 1216, column: 15, scope: !4071)
!4086 = !DILocation(line: 1216, column: 14, scope: !4071)
!4087 = !DILocation(line: 1216, column: 38, scope: !4071)
!4088 = !DILocation(line: 1216, column: 43, scope: !4071)
!4089 = !DILocation(line: 1216, column: 53, scope: !4071)
!4090 = !DILocation(line: 1216, column: 59, scope: !4071)
!4091 = !DILocation(line: 1216, column: 63, scope: !4071)
!4092 = !DILocation(line: 1216, column: 67, scope: !4071)
!4093 = !DILocation(line: 1216, column: 24, scope: !4071)
!4094 = !DILocation(line: 1216, column: 22, scope: !4071)
!4095 = !DILocation(line: 1216, column: 11, scope: !4071)
!4096 = !DILocation(line: 1217, column: 3, scope: !4071)
!4097 = !DILocation(line: 1209, column: 21, scope: !4067)
!4098 = !DILocation(line: 1209, column: 28, scope: !4067)
!4099 = !DILocation(line: 1209, column: 39, scope: !4067)
!4100 = !DILocation(line: 1209, column: 3, scope: !4067)
!4101 = distinct !{!4101, !4069, !4102}
!4102 = !DILocation(line: 1217, column: 3, scope: !4063)
!4103 = !DILocation(line: 1218, column: 2, scope: !4056)
!4104 = !DILocation(line: 1205, column: 57, scope: !4053)
!4105 = !DILocation(line: 1205, column: 67, scope: !4053)
!4106 = !DILocation(line: 1205, column: 55, scope: !4053)
!4107 = !DILocation(line: 1205, column: 2, scope: !4053)
!4108 = distinct !{!4108, !4054, !4109}
!4109 = !DILocation(line: 1218, column: 2, scope: !4047)
!4110 = !DILocation(line: 1221, column: 9, scope: !3739)
!4111 = !DILocation(line: 1221, column: 24, scope: !3739)
!4112 = !DILocation(line: 1221, column: 29, scope: !3739)
!4113 = !DILocation(line: 1221, column: 17, scope: !3739)
!4114 = !DILocation(line: 1221, column: 16, scope: !3739)
!4115 = !DILocation(line: 1221, column: 2, scope: !3739)
!4116 = !DILocation(line: 1222, column: 1, scope: !3739)
!4117 = distinct !DISubprogram(name: "shadowbuf_project_co", scope: !3, file: !3, line: 1106, type: !4118, scopeLine: 1107, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!4118 = !DISubroutineType(types: !4119)
!4119 = !{null, !63, !63, !63, !2461, !3742}
!4120 = !DILocalVariable(name: "x", arg: 1, scope: !4117, file: !3, line: 1106, type: !63)
!4121 = !DILocation(line: 1106, column: 41, scope: !4117)
!4122 = !DILocalVariable(name: "y", arg: 2, scope: !4117, file: !3, line: 1106, type: !63)
!4123 = !DILocation(line: 1106, column: 51, scope: !4117)
!4124 = !DILocalVariable(name: "z", arg: 3, scope: !4117, file: !3, line: 1106, type: !63)
!4125 = !DILocation(line: 1106, column: 61, scope: !4117)
!4126 = !DILocalVariable(name: "shb", arg: 4, scope: !4117, file: !3, line: 1106, type: !2461)
!4127 = !DILocation(line: 1106, column: 73, scope: !4117)
!4128 = !DILocalVariable(name: "co", arg: 5, scope: !4117, file: !3, line: 1106, type: !3742)
!4129 = !DILocation(line: 1106, column: 90, scope: !4117)
!4130 = !DILocalVariable(name: "hco", scope: !4117, file: !3, line: 1108, type: !288)
!4131 = !DILocation(line: 1108, column: 8, scope: !4117)
!4132 = !DILocalVariable(name: "size", scope: !4117, file: !3, line: 1108, type: !7)
!4133 = !DILocation(line: 1108, column: 16, scope: !4117)
!4134 = !DILocation(line: 1108, column: 34, scope: !4117)
!4135 = !DILocation(line: 1108, column: 39, scope: !4117)
!4136 = !DILocation(line: 1108, column: 27, scope: !4117)
!4137 = !DILocation(line: 1108, column: 26, scope: !4117)
!4138 = !DILocation(line: 1110, column: 13, scope: !4117)
!4139 = !DILocation(line: 1110, column: 18, scope: !4117)
!4140 = !DILocation(line: 1110, column: 2, scope: !4117)
!4141 = !DILocation(line: 1111, column: 2, scope: !4117)
!4142 = !DILocation(line: 1111, column: 8, scope: !4117)
!4143 = !DILocation(line: 1113, column: 12, scope: !4117)
!4144 = !DILocation(line: 1113, column: 17, scope: !4117)
!4145 = !DILocation(line: 1113, column: 26, scope: !4117)
!4146 = !DILocation(line: 1113, column: 2, scope: !4117)
!4147 = !DILocation(line: 1115, column: 6, scope: !4117)
!4148 = !DILocation(line: 1115, column: 17, scope: !4117)
!4149 = !DILocation(line: 1115, column: 24, scope: !4117)
!4150 = !DILocation(line: 1115, column: 23, scope: !4117)
!4151 = !DILocation(line: 1115, column: 16, scope: !4117)
!4152 = !DILocation(line: 1115, column: 10, scope: !4117)
!4153 = !DILocation(line: 1115, column: 3, scope: !4117)
!4154 = !DILocation(line: 1115, column: 4, scope: !4117)
!4155 = !DILocation(line: 1116, column: 6, scope: !4117)
!4156 = !DILocation(line: 1116, column: 17, scope: !4117)
!4157 = !DILocation(line: 1116, column: 24, scope: !4117)
!4158 = !DILocation(line: 1116, column: 23, scope: !4117)
!4159 = !DILocation(line: 1116, column: 16, scope: !4117)
!4160 = !DILocation(line: 1116, column: 10, scope: !4117)
!4161 = !DILocation(line: 1116, column: 3, scope: !4117)
!4162 = !DILocation(line: 1116, column: 4, scope: !4117)
!4163 = !DILocation(line: 1117, column: 6, scope: !4164)
!4164 = distinct !DILexicalBlock(scope: !4117, file: !3, line: 1117, column: 6)
!4165 = !DILocation(line: 1117, column: 6, scope: !4117)
!4166 = !DILocation(line: 1117, column: 14, scope: !4164)
!4167 = !DILocation(line: 1117, column: 21, scope: !4164)
!4168 = !DILocation(line: 1117, column: 20, scope: !4164)
!4169 = !DILocation(line: 1117, column: 10, scope: !4164)
!4170 = !DILocation(line: 1117, column: 11, scope: !4164)
!4171 = !DILocation(line: 1117, column: 9, scope: !4164)
!4172 = !DILocation(line: 1118, column: 1, scope: !4117)
!4173 = distinct !DISubprogram(name: "readshadowbuf", scope: !3, file: !3, line: 1039, type: !4174, scopeLine: 1040, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!4174 = !DISubroutineType(types: !4175)
!4175 = !{!7, !2461, !3601, !8, !8, !8, !8}
!4176 = !DILocalVariable(name: "shb", arg: 1, scope: !4173, file: !3, line: 1039, type: !2461)
!4177 = !DILocation(line: 1039, column: 37, scope: !4173)
!4178 = !DILocalVariable(name: "shsample", arg: 2, scope: !4173, file: !3, line: 1039, type: !3601)
!4179 = !DILocation(line: 1039, column: 57, scope: !4173)
!4180 = !DILocalVariable(name: "bias", arg: 3, scope: !4173, file: !3, line: 1039, type: !8)
!4181 = !DILocation(line: 1039, column: 71, scope: !4173)
!4182 = !DILocalVariable(name: "xs", arg: 4, scope: !4173, file: !3, line: 1039, type: !8)
!4183 = !DILocation(line: 1039, column: 81, scope: !4173)
!4184 = !DILocalVariable(name: "ys", arg: 5, scope: !4173, file: !3, line: 1039, type: !8)
!4185 = !DILocation(line: 1039, column: 89, scope: !4173)
!4186 = !DILocalVariable(name: "zs", arg: 6, scope: !4173, file: !3, line: 1039, type: !8)
!4187 = !DILocation(line: 1039, column: 97, scope: !4173)
!4188 = !DILocalVariable(name: "temp", scope: !4173, file: !3, line: 1041, type: !7)
!4189 = !DILocation(line: 1041, column: 8, scope: !4173)
!4190 = !DILocalVariable(name: "rz", scope: !4173, file: !3, line: 1042, type: !26)
!4191 = !DILocation(line: 1042, column: 7, scope: !4173)
!4192 = !DILocalVariable(name: "ofs", scope: !4173, file: !3, line: 1042, type: !8)
!4193 = !DILocation(line: 1042, column: 11, scope: !4173)
!4194 = !DILocalVariable(name: "zsamp", scope: !4173, file: !3, line: 1043, type: !8)
!4195 = !DILocation(line: 1043, column: 6, scope: !4173)
!4196 = !DILocalVariable(name: "ct", scope: !4173, file: !3, line: 1044, type: !27)
!4197 = !DILocation(line: 1044, column: 8, scope: !4173)
!4198 = !DILocalVariable(name: "cz", scope: !4173, file: !3, line: 1044, type: !27)
!4199 = !DILocation(line: 1044, column: 13, scope: !4173)
!4200 = !DILocation(line: 1051, column: 6, scope: !4201)
!4201 = distinct !DILexicalBlock(scope: !4173, file: !3, line: 1051, column: 6)
!4202 = !DILocation(line: 1051, column: 8, scope: !4201)
!4203 = !DILocation(line: 1051, column: 6, scope: !4173)
!4204 = !DILocation(line: 1051, column: 14, scope: !4201)
!4205 = !DILocation(line: 1051, column: 12, scope: !4201)
!4206 = !DILocation(line: 1051, column: 28, scope: !4207)
!4207 = distinct !DILexicalBlock(scope: !4201, file: !3, line: 1051, column: 28)
!4208 = !DILocation(line: 1051, column: 32, scope: !4207)
!4209 = !DILocation(line: 1051, column: 37, scope: !4207)
!4210 = !DILocation(line: 1051, column: 30, scope: !4207)
!4211 = !DILocation(line: 1051, column: 28, scope: !4201)
!4212 = !DILocation(line: 1051, column: 47, scope: !4207)
!4213 = !DILocation(line: 1051, column: 52, scope: !4207)
!4214 = !DILocation(line: 1051, column: 56, scope: !4207)
!4215 = !DILocation(line: 1051, column: 45, scope: !4207)
!4216 = !DILocation(line: 1051, column: 43, scope: !4207)
!4217 = !DILocation(line: 1052, column: 6, scope: !4218)
!4218 = distinct !DILexicalBlock(scope: !4173, file: !3, line: 1052, column: 6)
!4219 = !DILocation(line: 1052, column: 8, scope: !4218)
!4220 = !DILocation(line: 1052, column: 6, scope: !4173)
!4221 = !DILocation(line: 1052, column: 14, scope: !4218)
!4222 = !DILocation(line: 1052, column: 12, scope: !4218)
!4223 = !DILocation(line: 1052, column: 28, scope: !4224)
!4224 = distinct !DILexicalBlock(scope: !4218, file: !3, line: 1052, column: 28)
!4225 = !DILocation(line: 1052, column: 32, scope: !4224)
!4226 = !DILocation(line: 1052, column: 37, scope: !4224)
!4227 = !DILocation(line: 1052, column: 30, scope: !4224)
!4228 = !DILocation(line: 1052, column: 28, scope: !4218)
!4229 = !DILocation(line: 1052, column: 47, scope: !4224)
!4230 = !DILocation(line: 1052, column: 52, scope: !4224)
!4231 = !DILocation(line: 1052, column: 56, scope: !4224)
!4232 = !DILocation(line: 1052, column: 45, scope: !4224)
!4233 = !DILocation(line: 1052, column: 43, scope: !4224)
!4234 = !DILocation(line: 1054, column: 6, scope: !4235)
!4235 = distinct !DILexicalBlock(scope: !4173, file: !3, line: 1054, column: 6)
!4236 = !DILocation(line: 1054, column: 16, scope: !4235)
!4237 = !DILocation(line: 1054, column: 6, scope: !4173)
!4238 = !DILocation(line: 1055, column: 28, scope: !4235)
!4239 = !DILocation(line: 1055, column: 33, scope: !4235)
!4240 = !DILocation(line: 1055, column: 43, scope: !4235)
!4241 = !DILocation(line: 1055, column: 49, scope: !4235)
!4242 = !DILocation(line: 1055, column: 53, scope: !4235)
!4243 = !DILocation(line: 1055, column: 57, scope: !4235)
!4244 = !DILocation(line: 1055, column: 10, scope: !4235)
!4245 = !DILocation(line: 1055, column: 3, scope: !4235)
!4246 = !DILocation(line: 1058, column: 8, scope: !4173)
!4247 = !DILocation(line: 1058, column: 10, scope: !4173)
!4248 = !DILocation(line: 1058, column: 16, scope: !4173)
!4249 = !DILocation(line: 1058, column: 21, scope: !4173)
!4250 = !DILocation(line: 1058, column: 25, scope: !4173)
!4251 = !DILocation(line: 1058, column: 14, scope: !4173)
!4252 = !DILocation(line: 1058, column: 33, scope: !4173)
!4253 = !DILocation(line: 1058, column: 35, scope: !4173)
!4254 = !DILocation(line: 1058, column: 30, scope: !4173)
!4255 = !DILocation(line: 1058, column: 5, scope: !4173)
!4256 = !DILocation(line: 1059, column: 6, scope: !4173)
!4257 = !DILocation(line: 1059, column: 16, scope: !4173)
!4258 = !DILocation(line: 1059, column: 21, scope: !4173)
!4259 = !DILocation(line: 1059, column: 20, scope: !4173)
!4260 = !DILocation(line: 1059, column: 4, scope: !4173)
!4261 = !DILocation(line: 1060, column: 18, scope: !4173)
!4262 = !DILocation(line: 1060, column: 28, scope: !4173)
!4263 = !DILocation(line: 1060, column: 33, scope: !4173)
!4264 = !DILocation(line: 1060, column: 32, scope: !4173)
!4265 = !DILocation(line: 1060, column: 6, scope: !4173)
!4266 = !DILocation(line: 1060, column: 4, scope: !4173)
!4267 = !DILocation(line: 1062, column: 7, scope: !4268)
!4268 = distinct !DILexicalBlock(scope: !4173, file: !3, line: 1062, column: 6)
!4269 = !DILocation(line: 1062, column: 6, scope: !4268)
!4270 = !DILocation(line: 1062, column: 9, scope: !4268)
!4271 = !DILocation(line: 1062, column: 6, scope: !4173)
!4272 = !DILocation(line: 1063, column: 16, scope: !4273)
!4273 = distinct !DILexicalBlock(scope: !4268, file: !3, line: 1062, column: 14)
!4274 = !DILocation(line: 1063, column: 8, scope: !4273)
!4275 = !DILocation(line: 1063, column: 26, scope: !4273)
!4276 = !DILocation(line: 1063, column: 29, scope: !4273)
!4277 = !DILocation(line: 1063, column: 24, scope: !4273)
!4278 = !DILocation(line: 1063, column: 19, scope: !4273)
!4279 = !DILocation(line: 1063, column: 38, scope: !4273)
!4280 = !DILocation(line: 1063, column: 41, scope: !4273)
!4281 = !DILocation(line: 1063, column: 36, scope: !4273)
!4282 = !DILocation(line: 1063, column: 34, scope: !4273)
!4283 = !DILocation(line: 1063, column: 5, scope: !4273)
!4284 = !DILocation(line: 1064, column: 7, scope: !4273)
!4285 = !DILocation(line: 1064, column: 5, scope: !4273)
!4286 = !DILocation(line: 1065, column: 14, scope: !4273)
!4287 = !DILocation(line: 1065, column: 3, scope: !4273)
!4288 = !DILocation(line: 1065, column: 12, scope: !4273)
!4289 = !DILocation(line: 1066, column: 14, scope: !4273)
!4290 = !DILocation(line: 1066, column: 3, scope: !4273)
!4291 = !DILocation(line: 1066, column: 12, scope: !4273)
!4292 = !DILocation(line: 1067, column: 14, scope: !4273)
!4293 = !DILocation(line: 1067, column: 3, scope: !4273)
!4294 = !DILocation(line: 1067, column: 12, scope: !4273)
!4295 = !DILocation(line: 1068, column: 2, scope: !4273)
!4296 = !DILocation(line: 1069, column: 12, scope: !4297)
!4297 = distinct !DILexicalBlock(scope: !4268, file: !3, line: 1069, column: 11)
!4298 = !DILocation(line: 1069, column: 11, scope: !4297)
!4299 = !DILocation(line: 1069, column: 14, scope: !4297)
!4300 = !DILocation(line: 1069, column: 11, scope: !4268)
!4301 = !DILocation(line: 1070, column: 16, scope: !4302)
!4302 = distinct !DILexicalBlock(scope: !4297, file: !3, line: 1069, column: 19)
!4303 = !DILocation(line: 1070, column: 8, scope: !4302)
!4304 = !DILocation(line: 1070, column: 5, scope: !4302)
!4305 = !DILocation(line: 1071, column: 16, scope: !4302)
!4306 = !DILocation(line: 1071, column: 19, scope: !4302)
!4307 = !DILocation(line: 1071, column: 14, scope: !4302)
!4308 = !DILocation(line: 1071, column: 9, scope: !4302)
!4309 = !DILocation(line: 1071, column: 28, scope: !4302)
!4310 = !DILocation(line: 1071, column: 31, scope: !4302)
!4311 = !DILocation(line: 1071, column: 26, scope: !4302)
!4312 = !DILocation(line: 1071, column: 24, scope: !4302)
!4313 = !DILocation(line: 1071, column: 5, scope: !4302)
!4314 = !DILocation(line: 1072, column: 11, scope: !4302)
!4315 = !DILocation(line: 1072, column: 10, scope: !4302)
!4316 = !DILocation(line: 1072, column: 8, scope: !4302)
!4317 = !DILocation(line: 1074, column: 7, scope: !4302)
!4318 = !DILocation(line: 1074, column: 5, scope: !4302)
!4319 = !DILocation(line: 1075, column: 14, scope: !4302)
!4320 = !DILocation(line: 1075, column: 3, scope: !4302)
!4321 = !DILocation(line: 1075, column: 12, scope: !4302)
!4322 = !DILocation(line: 1076, column: 14, scope: !4302)
!4323 = !DILocation(line: 1076, column: 3, scope: !4302)
!4324 = !DILocation(line: 1076, column: 12, scope: !4302)
!4325 = !DILocation(line: 1077, column: 2, scope: !4302)
!4326 = !DILocation(line: 1078, column: 12, scope: !4327)
!4327 = distinct !DILexicalBlock(scope: !4297, file: !3, line: 1078, column: 11)
!4328 = !DILocation(line: 1078, column: 11, scope: !4327)
!4329 = !DILocation(line: 1078, column: 14, scope: !4327)
!4330 = !DILocation(line: 1078, column: 11, scope: !4297)
!4331 = !DILocation(line: 1079, column: 16, scope: !4332)
!4332 = distinct !DILexicalBlock(scope: !4327, file: !3, line: 1078, column: 19)
!4333 = !DILocation(line: 1079, column: 8, scope: !4332)
!4334 = !DILocation(line: 1079, column: 5, scope: !4332)
!4335 = !DILocation(line: 1080, column: 14, scope: !4332)
!4336 = !DILocation(line: 1080, column: 17, scope: !4332)
!4337 = !DILocation(line: 1080, column: 12, scope: !4332)
!4338 = !DILocation(line: 1080, column: 9, scope: !4332)
!4339 = !DILocation(line: 1080, column: 24, scope: !4332)
!4340 = !DILocation(line: 1080, column: 27, scope: !4332)
!4341 = !DILocation(line: 1080, column: 22, scope: !4332)
!4342 = !DILocation(line: 1080, column: 5, scope: !4332)
!4343 = !DILocation(line: 1081, column: 11, scope: !4332)
!4344 = !DILocation(line: 1081, column: 10, scope: !4332)
!4345 = !DILocation(line: 1081, column: 8, scope: !4332)
!4346 = !DILocation(line: 1083, column: 7, scope: !4332)
!4347 = !DILocation(line: 1083, column: 5, scope: !4332)
!4348 = !DILocation(line: 1084, column: 14, scope: !4332)
!4349 = !DILocation(line: 1084, column: 3, scope: !4332)
!4350 = !DILocation(line: 1084, column: 12, scope: !4332)
!4351 = !DILocation(line: 1086, column: 2, scope: !4332)
!4352 = !DILocation(line: 1090, column: 10, scope: !4353)
!4353 = distinct !DILexicalBlock(scope: !4327, file: !3, line: 1087, column: 7)
!4354 = !DILocation(line: 1090, column: 8, scope: !4353)
!4355 = !DILocation(line: 1095, column: 6, scope: !4356)
!4356 = distinct !DILexicalBlock(scope: !4173, file: !3, line: 1095, column: 6)
!4357 = !DILocation(line: 1095, column: 14, scope: !4356)
!4358 = !DILocation(line: 1095, column: 12, scope: !4356)
!4359 = !DILocation(line: 1095, column: 6, scope: !4173)
!4360 = !DILocation(line: 1095, column: 18, scope: !4356)
!4361 = !DILocation(line: 1096, column: 11, scope: !4362)
!4362 = distinct !DILexicalBlock(scope: !4356, file: !3, line: 1096, column: 11)
!4363 = !DILocation(line: 1096, column: 31, scope: !4362)
!4364 = !DILocation(line: 1096, column: 29, scope: !4362)
!4365 = !DILocation(line: 1096, column: 14, scope: !4362)
!4366 = !DILocation(line: 1096, column: 11, scope: !4356)
!4367 = !DILocation(line: 1096, column: 37, scope: !4362)
!4368 = !DILocation(line: 1097, column: 11, scope: !4369)
!4369 = distinct !DILexicalBlock(scope: !4362, file: !3, line: 1097, column: 11)
!4370 = !DILocation(line: 1097, column: 19, scope: !4369)
!4371 = !DILocation(line: 1097, column: 22, scope: !4369)
!4372 = !DILocation(line: 1097, column: 21, scope: !4369)
!4373 = !DILocation(line: 1097, column: 17, scope: !4369)
!4374 = !DILocation(line: 1097, column: 11, scope: !4362)
!4375 = !DILocation(line: 1097, column: 28, scope: !4369)
!4376 = !DILocation(line: 1100, column: 20, scope: !4377)
!4377 = distinct !DILexicalBlock(scope: !4369, file: !3, line: 1098, column: 7)
!4378 = !DILocation(line: 1100, column: 24, scope: !4377)
!4379 = !DILocation(line: 1100, column: 22, scope: !4377)
!4380 = !DILocation(line: 1100, column: 12, scope: !4377)
!4381 = !DILocation(line: 1100, column: 40, scope: !4377)
!4382 = !DILocation(line: 1100, column: 33, scope: !4377)
!4383 = !DILocation(line: 1100, column: 32, scope: !4377)
!4384 = !DILocation(line: 1100, column: 7, scope: !4377)
!4385 = !DILocation(line: 1101, column: 17, scope: !4377)
!4386 = !DILocation(line: 1101, column: 22, scope: !4377)
!4387 = !DILocation(line: 1101, column: 21, scope: !4377)
!4388 = !DILocation(line: 1101, column: 15, scope: !4377)
!4389 = !DILocation(line: 1101, column: 3, scope: !4377)
!4390 = !DILocation(line: 1104, column: 1, scope: !4173)
!4391 = distinct !DISubprogram(name: "add_v3_v3v3", scope: !4392, file: !4392, line: 309, type: !4393, scopeLine: 310, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!4392 = !DIFile(filename: "blender/source/blender/blenlib/intern/math_vector_inline.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!4393 = !DISubroutineType(types: !4394)
!4394 = !{null, !63, !3742, !3742}
!4395 = !DILocalVariable(name: "r", arg: 1, scope: !4391, file: !4392, line: 309, type: !63)
!4396 = !DILocation(line: 309, column: 32, scope: !4391)
!4397 = !DILocalVariable(name: "a", arg: 2, scope: !4391, file: !4392, line: 309, type: !3742)
!4398 = !DILocation(line: 309, column: 50, scope: !4391)
!4399 = !DILocalVariable(name: "b", arg: 3, scope: !4391, file: !4392, line: 309, type: !3742)
!4400 = !DILocation(line: 309, column: 68, scope: !4391)
!4401 = !DILocation(line: 311, column: 9, scope: !4391)
!4402 = !DILocation(line: 311, column: 16, scope: !4391)
!4403 = !DILocation(line: 311, column: 14, scope: !4391)
!4404 = !DILocation(line: 311, column: 2, scope: !4391)
!4405 = !DILocation(line: 311, column: 7, scope: !4391)
!4406 = !DILocation(line: 312, column: 9, scope: !4391)
!4407 = !DILocation(line: 312, column: 16, scope: !4391)
!4408 = !DILocation(line: 312, column: 14, scope: !4391)
!4409 = !DILocation(line: 312, column: 2, scope: !4391)
!4410 = !DILocation(line: 312, column: 7, scope: !4391)
!4411 = !DILocation(line: 313, column: 9, scope: !4391)
!4412 = !DILocation(line: 313, column: 16, scope: !4391)
!4413 = !DILocation(line: 313, column: 14, scope: !4391)
!4414 = !DILocation(line: 313, column: 2, scope: !4391)
!4415 = !DILocation(line: 313, column: 7, scope: !4391)
!4416 = !DILocation(line: 314, column: 1, scope: !4391)
!4417 = distinct !DISubprogram(name: "firstreadshadbuf", scope: !3, file: !3, line: 948, type: !4418, scopeLine: 949, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!4418 = !DISubroutineType(types: !4419)
!4419 = !{!8, !2461, !3601, !2210, !8, !8, !8}
!4420 = !DILocalVariable(name: "shb", arg: 1, scope: !4417, file: !3, line: 948, type: !2461)
!4421 = !DILocation(line: 948, column: 38, scope: !4417)
!4422 = !DILocalVariable(name: "shsample", arg: 2, scope: !4417, file: !3, line: 948, type: !3601)
!4423 = !DILocation(line: 948, column: 58, scope: !4417)
!4424 = !DILocalVariable(name: "rz", arg: 3, scope: !4417, file: !3, line: 948, type: !2210)
!4425 = !DILocation(line: 948, column: 74, scope: !4417)
!4426 = !DILocalVariable(name: "xs", arg: 4, scope: !4417, file: !3, line: 948, type: !8)
!4427 = !DILocation(line: 948, column: 82, scope: !4417)
!4428 = !DILocalVariable(name: "ys", arg: 5, scope: !4417, file: !3, line: 948, type: !8)
!4429 = !DILocation(line: 948, column: 90, scope: !4417)
!4430 = !DILocalVariable(name: "nr", arg: 6, scope: !4417, file: !3, line: 948, type: !8)
!4431 = !DILocation(line: 948, column: 98, scope: !4417)
!4432 = !DILocalVariable(name: "ofs", scope: !4417, file: !3, line: 951, type: !8)
!4433 = !DILocation(line: 951, column: 6, scope: !4417)
!4434 = !DILocalVariable(name: "ct", scope: !4417, file: !3, line: 952, type: !2182)
!4435 = !DILocation(line: 952, column: 14, scope: !4417)
!4436 = !DILocation(line: 954, column: 6, scope: !4437)
!4437 = distinct !DILexicalBlock(scope: !4417, file: !3, line: 954, column: 6)
!4438 = !DILocation(line: 954, column: 16, scope: !4437)
!4439 = !DILocation(line: 954, column: 6, scope: !4417)
!4440 = !DILocation(line: 955, column: 3, scope: !4437)
!4441 = !DILocation(line: 958, column: 6, scope: !4442)
!4442 = distinct !DILexicalBlock(scope: !4417, file: !3, line: 958, column: 6)
!4443 = !DILocation(line: 958, column: 8, scope: !4442)
!4444 = !DILocation(line: 958, column: 6, scope: !4417)
!4445 = !DILocation(line: 958, column: 14, scope: !4442)
!4446 = !DILocation(line: 958, column: 12, scope: !4442)
!4447 = !DILocation(line: 958, column: 28, scope: !4448)
!4448 = distinct !DILexicalBlock(scope: !4442, file: !3, line: 958, column: 28)
!4449 = !DILocation(line: 958, column: 32, scope: !4448)
!4450 = !DILocation(line: 958, column: 37, scope: !4448)
!4451 = !DILocation(line: 958, column: 30, scope: !4448)
!4452 = !DILocation(line: 958, column: 28, scope: !4442)
!4453 = !DILocation(line: 958, column: 47, scope: !4448)
!4454 = !DILocation(line: 958, column: 52, scope: !4448)
!4455 = !DILocation(line: 958, column: 56, scope: !4448)
!4456 = !DILocation(line: 958, column: 45, scope: !4448)
!4457 = !DILocation(line: 958, column: 43, scope: !4448)
!4458 = !DILocation(line: 959, column: 6, scope: !4459)
!4459 = distinct !DILexicalBlock(scope: !4417, file: !3, line: 959, column: 6)
!4460 = !DILocation(line: 959, column: 8, scope: !4459)
!4461 = !DILocation(line: 959, column: 6, scope: !4417)
!4462 = !DILocation(line: 959, column: 14, scope: !4459)
!4463 = !DILocation(line: 959, column: 12, scope: !4459)
!4464 = !DILocation(line: 959, column: 28, scope: !4465)
!4465 = distinct !DILexicalBlock(scope: !4459, file: !3, line: 959, column: 28)
!4466 = !DILocation(line: 959, column: 32, scope: !4465)
!4467 = !DILocation(line: 959, column: 37, scope: !4465)
!4468 = !DILocation(line: 959, column: 30, scope: !4465)
!4469 = !DILocation(line: 959, column: 28, scope: !4459)
!4470 = !DILocation(line: 959, column: 47, scope: !4465)
!4471 = !DILocation(line: 959, column: 52, scope: !4465)
!4472 = !DILocation(line: 959, column: 56, scope: !4465)
!4473 = !DILocation(line: 959, column: 45, scope: !4465)
!4474 = !DILocation(line: 959, column: 43, scope: !4465)
!4475 = !DILocation(line: 962, column: 8, scope: !4417)
!4476 = !DILocation(line: 962, column: 10, scope: !4417)
!4477 = !DILocation(line: 962, column: 16, scope: !4417)
!4478 = !DILocation(line: 962, column: 21, scope: !4417)
!4479 = !DILocation(line: 962, column: 25, scope: !4417)
!4480 = !DILocation(line: 962, column: 14, scope: !4417)
!4481 = !DILocation(line: 962, column: 33, scope: !4417)
!4482 = !DILocation(line: 962, column: 35, scope: !4417)
!4483 = !DILocation(line: 962, column: 30, scope: !4417)
!4484 = !DILocation(line: 962, column: 5, scope: !4417)
!4485 = !DILocation(line: 963, column: 6, scope: !4417)
!4486 = !DILocation(line: 963, column: 16, scope: !4417)
!4487 = !DILocation(line: 963, column: 21, scope: !4417)
!4488 = !DILocation(line: 963, column: 20, scope: !4417)
!4489 = !DILocation(line: 963, column: 4, scope: !4417)
!4490 = !DILocation(line: 964, column: 7, scope: !4491)
!4491 = distinct !DILexicalBlock(scope: !4417, file: !3, line: 964, column: 6)
!4492 = !DILocation(line: 964, column: 6, scope: !4491)
!4493 = !DILocation(line: 964, column: 9, scope: !4491)
!4494 = !DILocation(line: 964, column: 6, scope: !4417)
!4495 = !DILocation(line: 965, column: 7, scope: !4496)
!4496 = distinct !DILexicalBlock(scope: !4497, file: !3, line: 965, column: 7)
!4497 = distinct !DILexicalBlock(scope: !4491, file: !3, line: 964, column: 14)
!4498 = !DILocation(line: 965, column: 9, scope: !4496)
!4499 = !DILocation(line: 965, column: 7, scope: !4497)
!4500 = !DILocation(line: 966, column: 21, scope: !4501)
!4501 = distinct !DILexicalBlock(scope: !4496, file: !3, line: 965, column: 14)
!4502 = !DILocation(line: 966, column: 31, scope: !4501)
!4503 = !DILocation(line: 966, column: 36, scope: !4501)
!4504 = !DILocation(line: 966, column: 35, scope: !4501)
!4505 = !DILocation(line: 966, column: 9, scope: !4501)
!4506 = !DILocation(line: 966, column: 5, scope: !4501)
!4507 = !DILocation(line: 966, column: 7, scope: !4501)
!4508 = !DILocation(line: 967, column: 4, scope: !4501)
!4509 = !DILocation(line: 969, column: 13, scope: !4510)
!4510 = distinct !DILexicalBlock(scope: !4496, file: !3, line: 969, column: 12)
!4511 = !DILocation(line: 969, column: 12, scope: !4510)
!4512 = !DILocation(line: 969, column: 30, scope: !4510)
!4513 = !DILocation(line: 969, column: 40, scope: !4510)
!4514 = !DILocation(line: 969, column: 45, scope: !4510)
!4515 = !DILocation(line: 969, column: 44, scope: !4510)
!4516 = !DILocation(line: 969, column: 18, scope: !4510)
!4517 = !DILocation(line: 969, column: 15, scope: !4510)
!4518 = !DILocation(line: 969, column: 12, scope: !4496)
!4519 = !DILocation(line: 969, column: 53, scope: !4510)
!4520 = !DILocation(line: 971, column: 3, scope: !4497)
!4521 = !DILocation(line: 974, column: 2, scope: !4417)
!4522 = !DILocation(line: 975, column: 1, scope: !4417)
!4523 = distinct !DISubprogram(name: "shadow_halo", scope: !3, file: !3, line: 1298, type: !4524, scopeLine: 1299, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !4)
!4524 = !DISubroutineType(types: !4525)
!4525 = !{!7, !2286, !3742, !3742}
!4526 = !DILocalVariable(name: "lar", arg: 1, scope: !4523, file: !3, line: 1298, type: !2286)
!4527 = !DILocation(line: 1298, column: 28, scope: !4523)
!4528 = !DILocalVariable(name: "p1", arg: 2, scope: !4523, file: !3, line: 1298, type: !3742)
!4529 = !DILocation(line: 1298, column: 45, scope: !4523)
!4530 = !DILocalVariable(name: "p2", arg: 3, scope: !4523, file: !3, line: 1298, type: !3742)
!4531 = !DILocation(line: 1298, column: 64, scope: !4523)
!4532 = !DILocalVariable(name: "shb", scope: !4523, file: !3, line: 1301, type: !2461)
!4533 = !DILocation(line: 1301, column: 11, scope: !4523)
!4534 = !DILocation(line: 1301, column: 16, scope: !4523)
!4535 = !DILocation(line: 1301, column: 21, scope: !4523)
!4536 = !DILocalVariable(name: "shsample", scope: !4523, file: !3, line: 1302, type: !3601)
!4537 = !DILocation(line: 1302, column: 17, scope: !4523)
!4538 = !DILocalVariable(name: "co", scope: !4523, file: !3, line: 1303, type: !288)
!4539 = !DILocation(line: 1303, column: 8, scope: !4523)
!4540 = !DILocalVariable(name: "siz", scope: !4523, file: !3, line: 1303, type: !7)
!4541 = !DILocation(line: 1303, column: 15, scope: !4523)
!4542 = !DILocalVariable(name: "lambda", scope: !4523, file: !3, line: 1304, type: !7)
!4543 = !DILocation(line: 1304, column: 8, scope: !4523)
!4544 = !DILocalVariable(name: "lambda_o", scope: !4523, file: !3, line: 1304, type: !7)
!4545 = !DILocation(line: 1304, column: 16, scope: !4523)
!4546 = !DILocalVariable(name: "lambda_x", scope: !4523, file: !3, line: 1304, type: !7)
!4547 = !DILocation(line: 1304, column: 26, scope: !4523)
!4548 = !DILocalVariable(name: "lambda_y", scope: !4523, file: !3, line: 1304, type: !7)
!4549 = !DILocation(line: 1304, column: 36, scope: !4523)
!4550 = !DILocalVariable(name: "ldx", scope: !4523, file: !3, line: 1304, type: !7)
!4551 = !DILocation(line: 1304, column: 46, scope: !4523)
!4552 = !DILocalVariable(name: "ldy", scope: !4523, file: !3, line: 1304, type: !7)
!4553 = !DILocation(line: 1304, column: 51, scope: !4523)
!4554 = !DILocalVariable(name: "zf", scope: !4523, file: !3, line: 1305, type: !7)
!4555 = !DILocation(line: 1305, column: 8, scope: !4523)
!4556 = !DILocalVariable(name: "xf1", scope: !4523, file: !3, line: 1305, type: !7)
!4557 = !DILocation(line: 1305, column: 12, scope: !4523)
!4558 = !DILocalVariable(name: "yf1", scope: !4523, file: !3, line: 1305, type: !7)
!4559 = !DILocation(line: 1305, column: 17, scope: !4523)
!4560 = !DILocalVariable(name: "zf1", scope: !4523, file: !3, line: 1305, type: !7)
!4561 = !DILocation(line: 1305, column: 22, scope: !4523)
!4562 = !DILocalVariable(name: "xf2", scope: !4523, file: !3, line: 1305, type: !7)
!4563 = !DILocation(line: 1305, column: 27, scope: !4523)
!4564 = !DILocalVariable(name: "yf2", scope: !4523, file: !3, line: 1305, type: !7)
!4565 = !DILocation(line: 1305, column: 32, scope: !4523)
!4566 = !DILocalVariable(name: "zf2", scope: !4523, file: !3, line: 1305, type: !7)
!4567 = !DILocation(line: 1305, column: 37, scope: !4523)
!4568 = !DILocalVariable(name: "count", scope: !4523, file: !3, line: 1306, type: !7)
!4569 = !DILocation(line: 1306, column: 8, scope: !4523)
!4570 = !DILocalVariable(name: "lightcount", scope: !4523, file: !3, line: 1306, type: !7)
!4571 = !DILocation(line: 1306, column: 15, scope: !4523)
!4572 = !DILocalVariable(name: "x", scope: !4523, file: !3, line: 1307, type: !8)
!4573 = !DILocation(line: 1307, column: 6, scope: !4523)
!4574 = !DILocalVariable(name: "y", scope: !4523, file: !3, line: 1307, type: !8)
!4575 = !DILocation(line: 1307, column: 9, scope: !4523)
!4576 = !DILocalVariable(name: "z", scope: !4523, file: !3, line: 1307, type: !8)
!4577 = !DILocation(line: 1307, column: 12, scope: !4523)
!4578 = !DILocalVariable(name: "xs1", scope: !4523, file: !3, line: 1307, type: !8)
!4579 = !DILocation(line: 1307, column: 15, scope: !4523)
!4580 = !DILocalVariable(name: "ys1", scope: !4523, file: !3, line: 1307, type: !8)
!4581 = !DILocation(line: 1307, column: 20, scope: !4523)
!4582 = !DILocalVariable(name: "dx", scope: !4523, file: !3, line: 1308, type: !8)
!4583 = !DILocation(line: 1308, column: 6, scope: !4523)
!4584 = !DILocalVariable(name: "dy", scope: !4523, file: !3, line: 1308, type: !8)
!4585 = !DILocation(line: 1308, column: 14, scope: !4523)
!4586 = !DILocation(line: 1310, column: 19, scope: !4523)
!4587 = !DILocation(line: 1310, column: 24, scope: !4523)
!4588 = !DILocation(line: 1310, column: 12, scope: !4523)
!4589 = !DILocation(line: 1310, column: 11, scope: !4523)
!4590 = !DILocation(line: 1310, column: 5, scope: !4523)
!4591 = !DILocation(line: 1312, column: 9, scope: !4523)
!4592 = !DILocation(line: 1312, column: 2, scope: !4523)
!4593 = !DILocation(line: 1312, column: 7, scope: !4523)
!4594 = !DILocation(line: 1313, column: 9, scope: !4523)
!4595 = !DILocation(line: 1313, column: 2, scope: !4523)
!4596 = !DILocation(line: 1313, column: 7, scope: !4523)
!4597 = !DILocation(line: 1314, column: 9, scope: !4523)
!4598 = !DILocation(line: 1314, column: 15, scope: !4523)
!4599 = !DILocation(line: 1314, column: 20, scope: !4523)
!4600 = !DILocation(line: 1314, column: 14, scope: !4523)
!4601 = !DILocation(line: 1314, column: 2, scope: !4523)
!4602 = !DILocation(line: 1314, column: 7, scope: !4523)
!4603 = !DILocation(line: 1315, column: 2, scope: !4523)
!4604 = !DILocation(line: 1315, column: 7, scope: !4523)
!4605 = !DILocation(line: 1316, column: 12, scope: !4523)
!4606 = !DILocation(line: 1316, column: 17, scope: !4523)
!4607 = !DILocation(line: 1316, column: 25, scope: !4523)
!4608 = !DILocation(line: 1316, column: 2, scope: !4523)
!4609 = !DILocation(line: 1317, column: 7, scope: !4523)
!4610 = !DILocation(line: 1317, column: 17, scope: !4523)
!4611 = !DILocation(line: 1317, column: 23, scope: !4523)
!4612 = !DILocation(line: 1317, column: 22, scope: !4523)
!4613 = !DILocation(line: 1317, column: 16, scope: !4523)
!4614 = !DILocation(line: 1317, column: 10, scope: !4523)
!4615 = !DILocation(line: 1317, column: 5, scope: !4523)
!4616 = !DILocation(line: 1318, column: 7, scope: !4523)
!4617 = !DILocation(line: 1318, column: 17, scope: !4523)
!4618 = !DILocation(line: 1318, column: 23, scope: !4523)
!4619 = !DILocation(line: 1318, column: 22, scope: !4523)
!4620 = !DILocation(line: 1318, column: 16, scope: !4523)
!4621 = !DILocation(line: 1318, column: 10, scope: !4523)
!4622 = !DILocation(line: 1318, column: 5, scope: !4523)
!4623 = !DILocation(line: 1319, column: 8, scope: !4523)
!4624 = !DILocation(line: 1319, column: 14, scope: !4523)
!4625 = !DILocation(line: 1319, column: 13, scope: !4523)
!4626 = !DILocation(line: 1319, column: 5, scope: !4523)
!4627 = !DILocation(line: 1322, column: 9, scope: !4523)
!4628 = !DILocation(line: 1322, column: 2, scope: !4523)
!4629 = !DILocation(line: 1322, column: 7, scope: !4523)
!4630 = !DILocation(line: 1323, column: 9, scope: !4523)
!4631 = !DILocation(line: 1323, column: 2, scope: !4523)
!4632 = !DILocation(line: 1323, column: 7, scope: !4523)
!4633 = !DILocation(line: 1324, column: 9, scope: !4523)
!4634 = !DILocation(line: 1324, column: 15, scope: !4523)
!4635 = !DILocation(line: 1324, column: 20, scope: !4523)
!4636 = !DILocation(line: 1324, column: 14, scope: !4523)
!4637 = !DILocation(line: 1324, column: 2, scope: !4523)
!4638 = !DILocation(line: 1324, column: 7, scope: !4523)
!4639 = !DILocation(line: 1325, column: 2, scope: !4523)
!4640 = !DILocation(line: 1325, column: 7, scope: !4523)
!4641 = !DILocation(line: 1326, column: 12, scope: !4523)
!4642 = !DILocation(line: 1326, column: 17, scope: !4523)
!4643 = !DILocation(line: 1326, column: 25, scope: !4523)
!4644 = !DILocation(line: 1326, column: 2, scope: !4523)
!4645 = !DILocation(line: 1327, column: 7, scope: !4523)
!4646 = !DILocation(line: 1327, column: 17, scope: !4523)
!4647 = !DILocation(line: 1327, column: 23, scope: !4523)
!4648 = !DILocation(line: 1327, column: 22, scope: !4523)
!4649 = !DILocation(line: 1327, column: 16, scope: !4523)
!4650 = !DILocation(line: 1327, column: 10, scope: !4523)
!4651 = !DILocation(line: 1327, column: 5, scope: !4523)
!4652 = !DILocation(line: 1328, column: 7, scope: !4523)
!4653 = !DILocation(line: 1328, column: 17, scope: !4523)
!4654 = !DILocation(line: 1328, column: 23, scope: !4523)
!4655 = !DILocation(line: 1328, column: 22, scope: !4523)
!4656 = !DILocation(line: 1328, column: 16, scope: !4523)
!4657 = !DILocation(line: 1328, column: 10, scope: !4523)
!4658 = !DILocation(line: 1328, column: 5, scope: !4523)
!4659 = !DILocation(line: 1329, column: 8, scope: !4523)
!4660 = !DILocation(line: 1329, column: 14, scope: !4523)
!4661 = !DILocation(line: 1329, column: 13, scope: !4523)
!4662 = !DILocation(line: 1329, column: 5, scope: !4523)
!4663 = !DILocation(line: 1333, column: 12, scope: !4523)
!4664 = !DILocation(line: 1333, column: 7, scope: !4523)
!4665 = !DILocation(line: 1333, column: 5, scope: !4523)
!4666 = !DILocation(line: 1334, column: 12, scope: !4523)
!4667 = !DILocation(line: 1334, column: 7, scope: !4523)
!4668 = !DILocation(line: 1334, column: 5, scope: !4523)
!4669 = !DILocation(line: 1336, column: 6, scope: !4670)
!4670 = distinct !DILexicalBlock(scope: !4523, file: !3, line: 1336, column: 6)
!4671 = !DILocation(line: 1336, column: 13, scope: !4670)
!4672 = !DILocation(line: 1336, column: 10, scope: !4670)
!4673 = !DILocation(line: 1336, column: 6, scope: !4523)
!4674 = !DILocation(line: 1337, column: 7, scope: !4675)
!4675 = distinct !DILexicalBlock(scope: !4676, file: !3, line: 1337, column: 7)
!4676 = distinct !DILexicalBlock(scope: !4670, file: !3, line: 1336, column: 18)
!4677 = !DILocation(line: 1337, column: 11, scope: !4675)
!4678 = !DILocation(line: 1337, column: 10, scope: !4675)
!4679 = !DILocation(line: 1337, column: 15, scope: !4675)
!4680 = !DILocation(line: 1337, column: 7, scope: !4676)
!4681 = !DILocation(line: 1338, column: 15, scope: !4682)
!4682 = distinct !DILexicalBlock(scope: !4675, file: !3, line: 1337, column: 23)
!4683 = !DILocation(line: 1338, column: 19, scope: !4682)
!4684 = !DILocation(line: 1338, column: 18, scope: !4682)
!4685 = !DILocation(line: 1338, column: 22, scope: !4682)
!4686 = !DILocation(line: 1338, column: 30, scope: !4682)
!4687 = !DILocation(line: 1338, column: 34, scope: !4682)
!4688 = !DILocation(line: 1338, column: 33, scope: !4682)
!4689 = !DILocation(line: 1338, column: 28, scope: !4682)
!4690 = !DILocation(line: 1338, column: 12, scope: !4682)
!4691 = !DILocation(line: 1339, column: 10, scope: !4682)
!4692 = !DILocation(line: 1339, column: 15, scope: !4682)
!4693 = !DILocation(line: 1339, column: 9, scope: !4682)
!4694 = !DILocation(line: 1339, column: 29, scope: !4682)
!4695 = !DILocation(line: 1339, column: 33, scope: !4682)
!4696 = !DILocation(line: 1339, column: 32, scope: !4682)
!4697 = !DILocation(line: 1339, column: 27, scope: !4682)
!4698 = !DILocation(line: 1339, column: 7, scope: !4682)
!4699 = !DILocation(line: 1340, column: 8, scope: !4682)
!4700 = !DILocation(line: 1340, column: 13, scope: !4682)
!4701 = !DILocation(line: 1340, column: 6, scope: !4682)
!4702 = !DILocation(line: 1341, column: 3, scope: !4682)
!4703 = !DILocation(line: 1343, column: 15, scope: !4704)
!4704 = distinct !DILexicalBlock(scope: !4675, file: !3, line: 1342, column: 8)
!4705 = !DILocation(line: 1343, column: 19, scope: !4704)
!4706 = !DILocation(line: 1343, column: 18, scope: !4704)
!4707 = !DILocation(line: 1343, column: 25, scope: !4704)
!4708 = !DILocation(line: 1343, column: 29, scope: !4704)
!4709 = !DILocation(line: 1343, column: 28, scope: !4704)
!4710 = !DILocation(line: 1343, column: 23, scope: !4704)
!4711 = !DILocation(line: 1343, column: 12, scope: !4704)
!4712 = !DILocation(line: 1344, column: 9, scope: !4704)
!4713 = !DILocation(line: 1344, column: 14, scope: !4704)
!4714 = !DILocation(line: 1344, column: 28, scope: !4704)
!4715 = !DILocation(line: 1344, column: 32, scope: !4704)
!4716 = !DILocation(line: 1344, column: 31, scope: !4704)
!4717 = !DILocation(line: 1344, column: 26, scope: !4704)
!4718 = !DILocation(line: 1344, column: 7, scope: !4704)
!4719 = !DILocation(line: 1345, column: 9, scope: !4704)
!4720 = !DILocation(line: 1345, column: 14, scope: !4704)
!4721 = !DILocation(line: 1345, column: 8, scope: !4704)
!4722 = !DILocation(line: 1345, column: 6, scope: !4704)
!4723 = !DILocation(line: 1347, column: 2, scope: !4676)
!4724 = !DILocation(line: 1349, column: 11, scope: !4725)
!4725 = distinct !DILexicalBlock(scope: !4670, file: !3, line: 1348, column: 7)
!4726 = !DILocation(line: 1350, column: 6, scope: !4725)
!4727 = !DILocation(line: 1353, column: 6, scope: !4728)
!4728 = distinct !DILexicalBlock(scope: !4523, file: !3, line: 1353, column: 6)
!4729 = !DILocation(line: 1353, column: 13, scope: !4728)
!4730 = !DILocation(line: 1353, column: 10, scope: !4728)
!4731 = !DILocation(line: 1353, column: 6, scope: !4523)
!4732 = !DILocation(line: 1354, column: 7, scope: !4733)
!4733 = distinct !DILexicalBlock(scope: !4734, file: !3, line: 1354, column: 7)
!4734 = distinct !DILexicalBlock(scope: !4728, file: !3, line: 1353, column: 18)
!4735 = !DILocation(line: 1354, column: 11, scope: !4733)
!4736 = !DILocation(line: 1354, column: 10, scope: !4733)
!4737 = !DILocation(line: 1354, column: 15, scope: !4733)
!4738 = !DILocation(line: 1354, column: 7, scope: !4734)
!4739 = !DILocation(line: 1355, column: 15, scope: !4740)
!4740 = distinct !DILexicalBlock(scope: !4733, file: !3, line: 1354, column: 23)
!4741 = !DILocation(line: 1355, column: 19, scope: !4740)
!4742 = !DILocation(line: 1355, column: 18, scope: !4740)
!4743 = !DILocation(line: 1355, column: 22, scope: !4740)
!4744 = !DILocation(line: 1355, column: 30, scope: !4740)
!4745 = !DILocation(line: 1355, column: 34, scope: !4740)
!4746 = !DILocation(line: 1355, column: 33, scope: !4740)
!4747 = !DILocation(line: 1355, column: 28, scope: !4740)
!4748 = !DILocation(line: 1355, column: 12, scope: !4740)
!4749 = !DILocation(line: 1356, column: 10, scope: !4740)
!4750 = !DILocation(line: 1356, column: 15, scope: !4740)
!4751 = !DILocation(line: 1356, column: 9, scope: !4740)
!4752 = !DILocation(line: 1356, column: 29, scope: !4740)
!4753 = !DILocation(line: 1356, column: 33, scope: !4740)
!4754 = !DILocation(line: 1356, column: 32, scope: !4740)
!4755 = !DILocation(line: 1356, column: 27, scope: !4740)
!4756 = !DILocation(line: 1356, column: 7, scope: !4740)
!4757 = !DILocation(line: 1357, column: 8, scope: !4740)
!4758 = !DILocation(line: 1357, column: 13, scope: !4740)
!4759 = !DILocation(line: 1357, column: 6, scope: !4740)
!4760 = !DILocation(line: 1358, column: 3, scope: !4740)
!4761 = !DILocation(line: 1360, column: 15, scope: !4762)
!4762 = distinct !DILexicalBlock(scope: !4733, file: !3, line: 1359, column: 8)
!4763 = !DILocation(line: 1360, column: 19, scope: !4762)
!4764 = !DILocation(line: 1360, column: 18, scope: !4762)
!4765 = !DILocation(line: 1360, column: 25, scope: !4762)
!4766 = !DILocation(line: 1360, column: 29, scope: !4762)
!4767 = !DILocation(line: 1360, column: 28, scope: !4762)
!4768 = !DILocation(line: 1360, column: 23, scope: !4762)
!4769 = !DILocation(line: 1360, column: 12, scope: !4762)
!4770 = !DILocation(line: 1361, column: 9, scope: !4762)
!4771 = !DILocation(line: 1361, column: 14, scope: !4762)
!4772 = !DILocation(line: 1361, column: 28, scope: !4762)
!4773 = !DILocation(line: 1361, column: 32, scope: !4762)
!4774 = !DILocation(line: 1361, column: 31, scope: !4762)
!4775 = !DILocation(line: 1361, column: 26, scope: !4762)
!4776 = !DILocation(line: 1361, column: 7, scope: !4762)
!4777 = !DILocation(line: 1362, column: 9, scope: !4762)
!4778 = !DILocation(line: 1362, column: 14, scope: !4762)
!4779 = !DILocation(line: 1362, column: 8, scope: !4762)
!4780 = !DILocation(line: 1362, column: 6, scope: !4762)
!4781 = !DILocation(line: 1364, column: 2, scope: !4734)
!4782 = !DILocation(line: 1366, column: 11, scope: !4783)
!4783 = distinct !DILexicalBlock(scope: !4728, file: !3, line: 1365, column: 7)
!4784 = !DILocation(line: 1367, column: 6, scope: !4783)
!4785 = !DILocation(line: 1370, column: 5, scope: !4523)
!4786 = !DILocation(line: 1370, column: 3, scope: !4523)
!4787 = !DILocation(line: 1371, column: 5, scope: !4523)
!4788 = !DILocation(line: 1371, column: 3, scope: !4523)
!4789 = !DILocation(line: 1372, column: 27, scope: !4523)
!4790 = !DILocation(line: 1372, column: 15, scope: !4523)
!4791 = !DILocation(line: 1372, column: 8, scope: !4523)
!4792 = !DILocation(line: 1376, column: 2, scope: !4523)
!4793 = !DILocation(line: 1377, column: 13, scope: !4794)
!4794 = distinct !DILexicalBlock(scope: !4523, file: !3, line: 1376, column: 5)
!4795 = !DILocation(line: 1377, column: 11, scope: !4794)
!4796 = !DILocation(line: 1379, column: 7, scope: !4797)
!4797 = distinct !DILexicalBlock(scope: !4794, file: !3, line: 1379, column: 7)
!4798 = !DILocation(line: 1379, column: 17, scope: !4797)
!4799 = !DILocation(line: 1379, column: 15, scope: !4797)
!4800 = !DILocation(line: 1379, column: 7, scope: !4794)
!4801 = !DILocation(line: 1380, column: 15, scope: !4802)
!4802 = distinct !DILexicalBlock(scope: !4797, file: !3, line: 1379, column: 27)
!4803 = !DILocation(line: 1380, column: 12, scope: !4802)
!4804 = !DILocation(line: 1381, column: 8, scope: !4802)
!4805 = !DILocation(line: 1381, column: 5, scope: !4802)
!4806 = !DILocation(line: 1382, column: 15, scope: !4802)
!4807 = !DILocation(line: 1382, column: 12, scope: !4802)
!4808 = !DILocation(line: 1383, column: 8, scope: !4802)
!4809 = !DILocation(line: 1383, column: 5, scope: !4802)
!4810 = !DILocation(line: 1384, column: 3, scope: !4802)
!4811 = !DILocation(line: 1386, column: 8, scope: !4812)
!4812 = distinct !DILexicalBlock(scope: !4813, file: !3, line: 1386, column: 8)
!4813 = distinct !DILexicalBlock(scope: !4797, file: !3, line: 1385, column: 8)
!4814 = !DILocation(line: 1386, column: 17, scope: !4812)
!4815 = !DILocation(line: 1386, column: 16, scope: !4812)
!4816 = !DILocation(line: 1386, column: 8, scope: !4813)
!4817 = !DILocation(line: 1387, column: 16, scope: !4818)
!4818 = distinct !DILexicalBlock(scope: !4812, file: !3, line: 1386, column: 27)
!4819 = !DILocation(line: 1387, column: 13, scope: !4818)
!4820 = !DILocation(line: 1388, column: 9, scope: !4818)
!4821 = !DILocation(line: 1388, column: 6, scope: !4818)
!4822 = !DILocation(line: 1389, column: 4, scope: !4818)
!4823 = !DILocation(line: 1391, column: 16, scope: !4824)
!4824 = distinct !DILexicalBlock(scope: !4812, file: !3, line: 1390, column: 9)
!4825 = !DILocation(line: 1391, column: 13, scope: !4824)
!4826 = !DILocation(line: 1392, column: 9, scope: !4824)
!4827 = !DILocation(line: 1392, column: 6, scope: !4824)
!4828 = !DILocation(line: 1396, column: 19, scope: !4794)
!4829 = !DILocation(line: 1396, column: 29, scope: !4794)
!4830 = !DILocation(line: 1396, column: 12, scope: !4794)
!4831 = !DILocation(line: 1396, column: 10, scope: !4794)
!4832 = !DILocation(line: 1399, column: 7, scope: !4833)
!4833 = distinct !DILexicalBlock(scope: !4794, file: !3, line: 1399, column: 7)
!4834 = !DILocation(line: 1399, column: 15, scope: !4833)
!4835 = !DILocation(line: 1399, column: 13, scope: !4833)
!4836 = !DILocation(line: 1399, column: 7, scope: !4794)
!4837 = !DILocation(line: 1399, column: 25, scope: !4833)
!4838 = !DILocation(line: 1402, column: 19, scope: !4794)
!4839 = !DILocation(line: 1402, column: 12, scope: !4794)
!4840 = !DILocation(line: 1402, column: 10, scope: !4794)
!4841 = !DILocation(line: 1404, column: 7, scope: !4794)
!4842 = !DILocation(line: 1404, column: 13, scope: !4794)
!4843 = !DILocation(line: 1404, column: 21, scope: !4794)
!4844 = !DILocation(line: 1404, column: 25, scope: !4794)
!4845 = !DILocation(line: 1404, column: 24, scope: !4794)
!4846 = !DILocation(line: 1404, column: 19, scope: !4794)
!4847 = !DILocation(line: 1404, column: 11, scope: !4794)
!4848 = !DILocation(line: 1404, column: 5, scope: !4794)
!4849 = !DILocation(line: 1405, column: 18, scope: !4794)
!4850 = !DILocation(line: 1405, column: 23, scope: !4794)
!4851 = !DILocation(line: 1405, column: 11, scope: !4794)
!4852 = !DILocation(line: 1405, column: 8, scope: !4794)
!4853 = !DILocation(line: 1407, column: 7, scope: !4854)
!4854 = distinct !DILexicalBlock(scope: !4794, file: !3, line: 1407, column: 7)
!4855 = !DILocation(line: 1407, column: 9, scope: !4854)
!4856 = !DILocation(line: 1407, column: 7, scope: !4794)
!4857 = !DILocation(line: 1407, column: 30, scope: !4854)
!4858 = !DILocation(line: 1407, column: 19, scope: !4854)
!4859 = !DILocation(line: 1411, column: 8, scope: !4860)
!4860 = distinct !DILexicalBlock(scope: !4861, file: !3, line: 1411, column: 8)
!4861 = distinct !DILexicalBlock(scope: !4854, file: !3, line: 1408, column: 8)
!4862 = !DILocation(line: 1411, column: 10, scope: !4860)
!4863 = !DILocation(line: 1411, column: 8, scope: !4861)
!4864 = !DILocation(line: 1411, column: 19, scope: !4860)
!4865 = !DILocation(line: 1411, column: 18, scope: !4860)
!4866 = !DILocation(line: 1412, column: 29, scope: !4860)
!4867 = !DILocation(line: 1412, column: 28, scope: !4860)
!4868 = !DILocation(line: 1412, column: 12, scope: !4860)
!4869 = !DILocation(line: 1412, column: 10, scope: !4860)
!4870 = !DILocation(line: 1414, column: 19, scope: !4871)
!4871 = distinct !DILexicalBlock(scope: !4861, file: !3, line: 1414, column: 4)
!4872 = !DILocation(line: 1414, column: 24, scope: !4871)
!4873 = !DILocation(line: 1414, column: 32, scope: !4871)
!4874 = !DILocation(line: 1414, column: 17, scope: !4871)
!4875 = !DILocation(line: 1414, column: 9, scope: !4871)
!4876 = !DILocation(line: 1414, column: 39, scope: !4877)
!4877 = distinct !DILexicalBlock(scope: !4871, file: !3, line: 1414, column: 4)
!4878 = !DILocation(line: 1414, column: 4, scope: !4871)
!4879 = !DILocation(line: 1415, column: 37, scope: !4877)
!4880 = !DILocation(line: 1415, column: 42, scope: !4877)
!4881 = !DILocation(line: 1415, column: 52, scope: !4877)
!4882 = !DILocation(line: 1415, column: 55, scope: !4877)
!4883 = !DILocation(line: 1415, column: 58, scope: !4877)
!4884 = !DILocation(line: 1415, column: 18, scope: !4877)
!4885 = !DILocation(line: 1415, column: 15, scope: !4877)
!4886 = !DILocation(line: 1415, column: 5, scope: !4877)
!4887 = !DILocation(line: 1414, column: 59, scope: !4877)
!4888 = !DILocation(line: 1414, column: 69, scope: !4877)
!4889 = !DILocation(line: 1414, column: 57, scope: !4877)
!4890 = !DILocation(line: 1414, column: 4, scope: !4877)
!4891 = distinct !{!4891, !4878, !4892}
!4892 = !DILocation(line: 1415, column: 59, scope: !4871)
!4893 = !DILocation(line: 1418, column: 2, scope: !4794)
!4894 = !DILocation(line: 1419, column: 9, scope: !4523)
!4895 = !DILocation(line: 1419, column: 16, scope: !4523)
!4896 = distinct !{!4896, !4792, !4897}
!4897 = !DILocation(line: 1419, column: 22, scope: !4523)
!4898 = !DILocation(line: 1421, column: 6, scope: !4899)
!4899 = distinct !DILexicalBlock(scope: !4523, file: !3, line: 1421, column: 6)
!4900 = !DILocation(line: 1421, column: 11, scope: !4899)
!4901 = !DILocation(line: 1421, column: 6, scope: !4523)
!4902 = !DILocation(line: 1421, column: 27, scope: !4899)
!4903 = !DILocation(line: 1421, column: 38, scope: !4899)
!4904 = !DILocation(line: 1421, column: 37, scope: !4899)
!4905 = !DILocation(line: 1421, column: 19, scope: !4899)
!4906 = !DILocation(line: 1422, column: 2, scope: !4523)
!4907 = !DILocation(line: 1424, column: 1, scope: !4523)
!4908 = distinct !DISubprogram(name: "min_ff", scope: !2966, file: !2966, line: 202, type: !4909, scopeLine: 203, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!4909 = !DISubroutineType(types: !4910)
!4910 = !{!7, !7, !7}
!4911 = !DILocalVariable(name: "a", arg: 1, scope: !4908, file: !2966, line: 202, type: !7)
!4912 = !DILocation(line: 202, column: 28, scope: !4908)
!4913 = !DILocalVariable(name: "b", arg: 2, scope: !4908, file: !2966, line: 202, type: !7)
!4914 = !DILocation(line: 202, column: 37, scope: !4908)
!4915 = !DILocation(line: 204, column: 10, scope: !4908)
!4916 = !DILocation(line: 204, column: 14, scope: !4908)
!4917 = !DILocation(line: 204, column: 12, scope: !4908)
!4918 = !DILocation(line: 204, column: 9, scope: !4908)
!4919 = !DILocation(line: 204, column: 19, scope: !4908)
!4920 = !DILocation(line: 204, column: 23, scope: !4908)
!4921 = !DILocation(line: 204, column: 2, scope: !4908)
!4922 = distinct !DISubprogram(name: "readshadowbuf_halo", scope: !3, file: !3, line: 1226, type: !4923, scopeLine: 1227, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!4923 = !DISubroutineType(types: !4924)
!4924 = !{!7, !2461, !3601, !8, !8, !8}
!4925 = !DILocalVariable(name: "shb", arg: 1, scope: !4922, file: !3, line: 1226, type: !2461)
!4926 = !DILocation(line: 1226, column: 42, scope: !4922)
!4927 = !DILocalVariable(name: "shsample", arg: 2, scope: !4922, file: !3, line: 1226, type: !3601)
!4928 = !DILocation(line: 1226, column: 62, scope: !4922)
!4929 = !DILocalVariable(name: "xs", arg: 3, scope: !4922, file: !3, line: 1226, type: !8)
!4930 = !DILocation(line: 1226, column: 76, scope: !4922)
!4931 = !DILocalVariable(name: "ys", arg: 4, scope: !4922, file: !3, line: 1226, type: !8)
!4932 = !DILocation(line: 1226, column: 84, scope: !4922)
!4933 = !DILocalVariable(name: "zs", arg: 5, scope: !4922, file: !3, line: 1226, type: !8)
!4934 = !DILocation(line: 1226, column: 92, scope: !4922)
!4935 = !DILocalVariable(name: "temp", scope: !4922, file: !3, line: 1228, type: !7)
!4936 = !DILocation(line: 1228, column: 8, scope: !4922)
!4937 = !DILocalVariable(name: "rz", scope: !4922, file: !3, line: 1229, type: !26)
!4938 = !DILocation(line: 1229, column: 7, scope: !4922)
!4939 = !DILocalVariable(name: "ofs", scope: !4922, file: !3, line: 1229, type: !8)
!4940 = !DILocation(line: 1229, column: 11, scope: !4922)
!4941 = !DILocalVariable(name: "bias", scope: !4922, file: !3, line: 1230, type: !8)
!4942 = !DILocation(line: 1230, column: 6, scope: !4922)
!4943 = !DILocalVariable(name: "zbias", scope: !4922, file: !3, line: 1230, type: !8)
!4944 = !DILocation(line: 1230, column: 12, scope: !4922)
!4945 = !DILocalVariable(name: "zsamp", scope: !4922, file: !3, line: 1230, type: !8)
!4946 = !DILocation(line: 1230, column: 19, scope: !4922)
!4947 = !DILocalVariable(name: "ct", scope: !4922, file: !3, line: 1231, type: !27)
!4948 = !DILocation(line: 1231, column: 8, scope: !4922)
!4949 = !DILocalVariable(name: "cz", scope: !4922, file: !3, line: 1231, type: !27)
!4950 = !DILocation(line: 1231, column: 13, scope: !4922)
!4951 = !DILocation(line: 1234, column: 9, scope: !4922)
!4952 = !DILocation(line: 1234, column: 14, scope: !4922)
!4953 = !DILocation(line: 1234, column: 8, scope: !4922)
!4954 = !DILocation(line: 1234, column: 6, scope: !4922)
!4955 = !DILocation(line: 1237, column: 6, scope: !4956)
!4956 = distinct !DILexicalBlock(scope: !4922, file: !3, line: 1237, column: 6)
!4957 = !DILocation(line: 1237, column: 8, scope: !4956)
!4958 = !DILocation(line: 1237, column: 11, scope: !4956)
!4959 = !DILocation(line: 1237, column: 14, scope: !4956)
!4960 = !DILocation(line: 1237, column: 16, scope: !4956)
!4961 = !DILocation(line: 1237, column: 6, scope: !4922)
!4962 = !DILocation(line: 1237, column: 20, scope: !4956)
!4963 = !DILocation(line: 1238, column: 6, scope: !4964)
!4964 = distinct !DILexicalBlock(scope: !4922, file: !3, line: 1238, column: 6)
!4965 = !DILocation(line: 1238, column: 10, scope: !4964)
!4966 = !DILocation(line: 1238, column: 15, scope: !4964)
!4967 = !DILocation(line: 1238, column: 8, scope: !4964)
!4968 = !DILocation(line: 1238, column: 20, scope: !4964)
!4969 = !DILocation(line: 1238, column: 23, scope: !4964)
!4970 = !DILocation(line: 1238, column: 27, scope: !4964)
!4971 = !DILocation(line: 1238, column: 32, scope: !4964)
!4972 = !DILocation(line: 1238, column: 25, scope: !4964)
!4973 = !DILocation(line: 1238, column: 6, scope: !4922)
!4974 = !DILocation(line: 1238, column: 38, scope: !4964)
!4975 = !DILocation(line: 1241, column: 8, scope: !4922)
!4976 = !DILocation(line: 1241, column: 10, scope: !4922)
!4977 = !DILocation(line: 1241, column: 16, scope: !4922)
!4978 = !DILocation(line: 1241, column: 21, scope: !4922)
!4979 = !DILocation(line: 1241, column: 25, scope: !4922)
!4980 = !DILocation(line: 1241, column: 14, scope: !4922)
!4981 = !DILocation(line: 1241, column: 33, scope: !4922)
!4982 = !DILocation(line: 1241, column: 35, scope: !4922)
!4983 = !DILocation(line: 1241, column: 30, scope: !4922)
!4984 = !DILocation(line: 1241, column: 5, scope: !4922)
!4985 = !DILocation(line: 1242, column: 6, scope: !4922)
!4986 = !DILocation(line: 1242, column: 16, scope: !4922)
!4987 = !DILocation(line: 1242, column: 21, scope: !4922)
!4988 = !DILocation(line: 1242, column: 20, scope: !4922)
!4989 = !DILocation(line: 1242, column: 4, scope: !4922)
!4990 = !DILocation(line: 1243, column: 18, scope: !4922)
!4991 = !DILocation(line: 1243, column: 28, scope: !4922)
!4992 = !DILocation(line: 1243, column: 33, scope: !4922)
!4993 = !DILocation(line: 1243, column: 32, scope: !4922)
!4994 = !DILocation(line: 1243, column: 6, scope: !4922)
!4995 = !DILocation(line: 1243, column: 4, scope: !4922)
!4996 = !DILocation(line: 1245, column: 7, scope: !4997)
!4997 = distinct !DILexicalBlock(scope: !4922, file: !3, line: 1245, column: 6)
!4998 = !DILocation(line: 1245, column: 6, scope: !4997)
!4999 = !DILocation(line: 1245, column: 9, scope: !4997)
!5000 = !DILocation(line: 1245, column: 6, scope: !4922)
!5001 = !DILocation(line: 1246, column: 16, scope: !5002)
!5002 = distinct !DILexicalBlock(scope: !4997, file: !3, line: 1245, column: 14)
!5003 = !DILocation(line: 1246, column: 8, scope: !5002)
!5004 = !DILocation(line: 1246, column: 26, scope: !5002)
!5005 = !DILocation(line: 1246, column: 29, scope: !5002)
!5006 = !DILocation(line: 1246, column: 24, scope: !5002)
!5007 = !DILocation(line: 1246, column: 19, scope: !5002)
!5008 = !DILocation(line: 1246, column: 38, scope: !5002)
!5009 = !DILocation(line: 1246, column: 41, scope: !5002)
!5010 = !DILocation(line: 1246, column: 36, scope: !5002)
!5011 = !DILocation(line: 1246, column: 34, scope: !5002)
!5012 = !DILocation(line: 1246, column: 5, scope: !5002)
!5013 = !DILocation(line: 1247, column: 7, scope: !5002)
!5014 = !DILocation(line: 1247, column: 5, scope: !5002)
!5015 = !DILocation(line: 1248, column: 8, scope: !5002)
!5016 = !DILocation(line: 1249, column: 14, scope: !5002)
!5017 = !DILocation(line: 1249, column: 3, scope: !5002)
!5018 = !DILocation(line: 1249, column: 12, scope: !5002)
!5019 = !DILocation(line: 1250, column: 14, scope: !5002)
!5020 = !DILocation(line: 1250, column: 3, scope: !5002)
!5021 = !DILocation(line: 1250, column: 12, scope: !5002)
!5022 = !DILocation(line: 1251, column: 14, scope: !5002)
!5023 = !DILocation(line: 1251, column: 3, scope: !5002)
!5024 = !DILocation(line: 1251, column: 12, scope: !5002)
!5025 = !DILocation(line: 1252, column: 2, scope: !5002)
!5026 = !DILocation(line: 1253, column: 12, scope: !5027)
!5027 = distinct !DILexicalBlock(scope: !4997, file: !3, line: 1253, column: 11)
!5028 = !DILocation(line: 1253, column: 11, scope: !5027)
!5029 = !DILocation(line: 1253, column: 14, scope: !5027)
!5030 = !DILocation(line: 1253, column: 11, scope: !4997)
!5031 = !DILocation(line: 1254, column: 16, scope: !5032)
!5032 = distinct !DILexicalBlock(scope: !5027, file: !3, line: 1253, column: 19)
!5033 = !DILocation(line: 1254, column: 8, scope: !5032)
!5034 = !DILocation(line: 1254, column: 5, scope: !5032)
!5035 = !DILocation(line: 1255, column: 16, scope: !5032)
!5036 = !DILocation(line: 1255, column: 19, scope: !5032)
!5037 = !DILocation(line: 1255, column: 14, scope: !5032)
!5038 = !DILocation(line: 1255, column: 9, scope: !5032)
!5039 = !DILocation(line: 1255, column: 28, scope: !5032)
!5040 = !DILocation(line: 1255, column: 31, scope: !5032)
!5041 = !DILocation(line: 1255, column: 26, scope: !5032)
!5042 = !DILocation(line: 1255, column: 24, scope: !5032)
!5043 = !DILocation(line: 1255, column: 5, scope: !5032)
!5044 = !DILocation(line: 1256, column: 11, scope: !5032)
!5045 = !DILocation(line: 1256, column: 10, scope: !5032)
!5046 = !DILocation(line: 1256, column: 8, scope: !5032)
!5047 = !DILocation(line: 1258, column: 7, scope: !5032)
!5048 = !DILocation(line: 1258, column: 5, scope: !5032)
!5049 = !DILocation(line: 1259, column: 14, scope: !5032)
!5050 = !DILocation(line: 1259, column: 3, scope: !5032)
!5051 = !DILocation(line: 1259, column: 12, scope: !5032)
!5052 = !DILocation(line: 1260, column: 14, scope: !5032)
!5053 = !DILocation(line: 1260, column: 3, scope: !5032)
!5054 = !DILocation(line: 1260, column: 12, scope: !5032)
!5055 = !DILocation(line: 1261, column: 2, scope: !5032)
!5056 = !DILocation(line: 1262, column: 12, scope: !5057)
!5057 = distinct !DILexicalBlock(scope: !5027, file: !3, line: 1262, column: 11)
!5058 = !DILocation(line: 1262, column: 11, scope: !5057)
!5059 = !DILocation(line: 1262, column: 14, scope: !5057)
!5060 = !DILocation(line: 1262, column: 11, scope: !5027)
!5061 = !DILocation(line: 1263, column: 16, scope: !5062)
!5062 = distinct !DILexicalBlock(scope: !5057, file: !3, line: 1262, column: 19)
!5063 = !DILocation(line: 1263, column: 8, scope: !5062)
!5064 = !DILocation(line: 1263, column: 5, scope: !5062)
!5065 = !DILocation(line: 1264, column: 14, scope: !5062)
!5066 = !DILocation(line: 1264, column: 17, scope: !5062)
!5067 = !DILocation(line: 1264, column: 12, scope: !5062)
!5068 = !DILocation(line: 1264, column: 9, scope: !5062)
!5069 = !DILocation(line: 1264, column: 24, scope: !5062)
!5070 = !DILocation(line: 1264, column: 27, scope: !5062)
!5071 = !DILocation(line: 1264, column: 22, scope: !5062)
!5072 = !DILocation(line: 1264, column: 5, scope: !5062)
!5073 = !DILocation(line: 1265, column: 11, scope: !5062)
!5074 = !DILocation(line: 1265, column: 10, scope: !5062)
!5075 = !DILocation(line: 1265, column: 8, scope: !5062)
!5076 = !DILocation(line: 1267, column: 7, scope: !5062)
!5077 = !DILocation(line: 1267, column: 5, scope: !5062)
!5078 = !DILocation(line: 1268, column: 14, scope: !5062)
!5079 = !DILocation(line: 1268, column: 3, scope: !5062)
!5080 = !DILocation(line: 1268, column: 12, scope: !5062)
!5081 = !DILocation(line: 1270, column: 2, scope: !5062)
!5082 = !DILocation(line: 1274, column: 10, scope: !5083)
!5083 = distinct !DILexicalBlock(scope: !5057, file: !3, line: 1271, column: 7)
!5084 = !DILocation(line: 1274, column: 8, scope: !5083)
!5085 = !DILocation(line: 1279, column: 6, scope: !5086)
!5086 = distinct !DILexicalBlock(scope: !4922, file: !3, line: 1279, column: 6)
!5087 = !DILocation(line: 1279, column: 12, scope: !5086)
!5088 = !DILocation(line: 1279, column: 6, scope: !4922)
!5089 = !DILocation(line: 1279, column: 27, scope: !5086)
!5090 = !DILocation(line: 1281, column: 6, scope: !5091)
!5091 = distinct !DILexicalBlock(scope: !4922, file: !3, line: 1281, column: 6)
!5092 = !DILocation(line: 1281, column: 14, scope: !5091)
!5093 = !DILocation(line: 1281, column: 12, scope: !5091)
!5094 = !DILocation(line: 1281, column: 6, scope: !4922)
!5095 = !DILocation(line: 1281, column: 18, scope: !5091)
!5096 = !DILocation(line: 1284, column: 23, scope: !5097)
!5097 = distinct !DILexicalBlock(scope: !5091, file: !3, line: 1282, column: 7)
!5098 = !DILocation(line: 1284, column: 21, scope: !5097)
!5099 = !DILocation(line: 1284, column: 8, scope: !5097)
!5100 = !DILocation(line: 1285, column: 7, scope: !5101)
!5101 = distinct !DILexicalBlock(scope: !5097, file: !3, line: 1285, column: 7)
!5102 = !DILocation(line: 1285, column: 16, scope: !5101)
!5103 = !DILocation(line: 1285, column: 15, scope: !5101)
!5104 = !DILocation(line: 1285, column: 13, scope: !5101)
!5105 = !DILocation(line: 1285, column: 7, scope: !5097)
!5106 = !DILocation(line: 1286, column: 9, scope: !5107)
!5107 = distinct !DILexicalBlock(scope: !5108, file: !3, line: 1286, column: 9)
!5108 = distinct !DILexicalBlock(scope: !5101, file: !3, line: 1285, column: 22)
!5109 = !DILocation(line: 1286, column: 17, scope: !5107)
!5110 = !DILocation(line: 1286, column: 20, scope: !5107)
!5111 = !DILocation(line: 1286, column: 19, scope: !5107)
!5112 = !DILocation(line: 1286, column: 15, scope: !5107)
!5113 = !DILocation(line: 1286, column: 9, scope: !5108)
!5114 = !DILocation(line: 1286, column: 26, scope: !5107)
!5115 = !DILocation(line: 1287, column: 3, scope: !5108)
!5116 = !DILocation(line: 1288, column: 8, scope: !5101)
!5117 = !DILocation(line: 1293, column: 19, scope: !4922)
!5118 = !DILocation(line: 1293, column: 23, scope: !4922)
!5119 = !DILocation(line: 1293, column: 21, scope: !4922)
!5120 = !DILocation(line: 1293, column: 11, scope: !4922)
!5121 = !DILocation(line: 1293, column: 39, scope: !4922)
!5122 = !DILocation(line: 1293, column: 32, scope: !4922)
!5123 = !DILocation(line: 1293, column: 31, scope: !4922)
!5124 = !DILocation(line: 1293, column: 6, scope: !4922)
!5125 = !DILocation(line: 1294, column: 16, scope: !4922)
!5126 = !DILocation(line: 1294, column: 21, scope: !4922)
!5127 = !DILocation(line: 1294, column: 20, scope: !4922)
!5128 = !DILocation(line: 1294, column: 14, scope: !4922)
!5129 = !DILocation(line: 1294, column: 2, scope: !4922)
!5130 = !DILocation(line: 1295, column: 1, scope: !4922)
!5131 = distinct !DISubprogram(name: "ISB_getshadow", scope: !3, file: !3, line: 2562, type: !5132, scopeLine: 2563, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !4)
!5132 = !DISubroutineType(types: !5133)
!5133 = !{!7, !5134, !2461}
!5134 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5135, size: 64)
!5135 = !DIDerivedType(tag: DW_TAG_typedef, name: "ShadeInput", file: !1906, line: 186, baseType: !5136)
!5136 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ShadeInput", file: !1906, line: 98, size: 11776, elements: !5137)
!5137 = !{!5138, !5139, !5140, !5141, !5142, !5143, !5144, !5145, !5146, !5147, !5148, !5149, !5150, !5151, !5152, !5153, !5154, !5155, !5156, !5157, !5158, !5159, !5160, !5161, !5162, !5163, !5164, !5165, !5166, !5167, !5168, !5169, !5170, !5171, !5172, !5173, !5174, !5175, !5176, !5177, !5178, !5179, !5180, !5181, !5182, !5183, !5184, !5185, !5186, !5187, !5188, !5189, !5190, !5191, !5192, !5193, !5194, !5195, !5196, !5197, !5198, !5199, !5200, !5201, !5202, !5203, !5204, !5205, !5206, !5207, !5208, !5209, !5210, !5219, !5226, !5227, !5228, !5229, !5230, !5231, !5232, !5233, !5234, !5235, !5236, !5237, !5238, !5239, !5240, !5241, !5242, !5243, !5244, !5245, !5246, !5247, !5248, !5249, !5250, !5251, !5252, !5253, !5254, !5255, !5256, !5257, !5258, !5259, !5260, !5261, !5262, !5263, !5264, !5265, !5266, !5267, !5268, !5269, !5270, !5271, !5272, !5273, !5274}
!5138 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !5136, file: !1906, line: 102, baseType: !103, size: 64)
!5139 = !DIDerivedType(tag: DW_TAG_member, name: "vlr", scope: !5136, file: !1906, line: 103, baseType: !1968, size: 64, offset: 64)
!5140 = !DIDerivedType(tag: DW_TAG_member, name: "strand", scope: !5136, file: !1906, line: 104, baseType: !2008, size: 64, offset: 128)
!5141 = !DIDerivedType(tag: DW_TAG_member, name: "obi", scope: !5136, file: !1906, line: 105, baseType: !1911, size: 64, offset: 192)
!5142 = !DIDerivedType(tag: DW_TAG_member, name: "obr", scope: !5136, file: !1906, line: 106, baseType: !1922, size: 64, offset: 256)
!5143 = !DIDerivedType(tag: DW_TAG_member, name: "facenr", scope: !5136, file: !1906, line: 107, baseType: !8, size: 32, offset: 320)
!5144 = !DIDerivedType(tag: DW_TAG_member, name: "facenor", scope: !5136, file: !1906, line: 108, baseType: !206, size: 96, offset: 352)
!5145 = !DIDerivedType(tag: DW_TAG_member, name: "flippednor", scope: !5136, file: !1906, line: 109, baseType: !43, size: 16, offset: 448)
!5146 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !5136, file: !1906, line: 110, baseType: !1948, size: 64, offset: 512)
!5147 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !5136, file: !1906, line: 110, baseType: !1948, size: 64, offset: 576)
!5148 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !5136, file: !1906, line: 110, baseType: !1948, size: 64, offset: 640)
!5149 = !DIDerivedType(tag: DW_TAG_member, name: "i1", scope: !5136, file: !1906, line: 111, baseType: !43, size: 16, offset: 704)
!5150 = !DIDerivedType(tag: DW_TAG_member, name: "i2", scope: !5136, file: !1906, line: 111, baseType: !43, size: 16, offset: 720)
!5151 = !DIDerivedType(tag: DW_TAG_member, name: "i3", scope: !5136, file: !1906, line: 111, baseType: !43, size: 16, offset: 736)
!5152 = !DIDerivedType(tag: DW_TAG_member, name: "puno", scope: !5136, file: !1906, line: 112, baseType: !43, size: 16, offset: 752)
!5153 = !DIDerivedType(tag: DW_TAG_member, name: "osatex", scope: !5136, file: !1906, line: 113, baseType: !43, size: 16, offset: 768)
!5154 = !DIDerivedType(tag: DW_TAG_member, name: "vn", scope: !5136, file: !1906, line: 114, baseType: !206, size: 96, offset: 800)
!5155 = !DIDerivedType(tag: DW_TAG_member, name: "vno", scope: !5136, file: !1906, line: 114, baseType: !206, size: 96, offset: 896)
!5156 = !DIDerivedType(tag: DW_TAG_member, name: "n1", scope: !5136, file: !1906, line: 115, baseType: !206, size: 96, offset: 992)
!5157 = !DIDerivedType(tag: DW_TAG_member, name: "n2", scope: !5136, file: !1906, line: 115, baseType: !206, size: 96, offset: 1088)
!5158 = !DIDerivedType(tag: DW_TAG_member, name: "n3", scope: !5136, file: !1906, line: 115, baseType: !206, size: 96, offset: 1184)
!5159 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !5136, file: !1906, line: 116, baseType: !8, size: 32, offset: 1280)
!5160 = !DIDerivedType(tag: DW_TAG_member, name: "mode2", scope: !5136, file: !1906, line: 116, baseType: !8, size: 32, offset: 1312)
!5161 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !5136, file: !1906, line: 119, baseType: !7, size: 32, offset: 1344)
!5162 = !DIDerivedType(tag: DW_TAG_member, name: "v", scope: !5136, file: !1906, line: 119, baseType: !7, size: 32, offset: 1376)
!5163 = !DIDerivedType(tag: DW_TAG_member, name: "dx_u", scope: !5136, file: !1906, line: 119, baseType: !7, size: 32, offset: 1408)
!5164 = !DIDerivedType(tag: DW_TAG_member, name: "dx_v", scope: !5136, file: !1906, line: 119, baseType: !7, size: 32, offset: 1440)
!5165 = !DIDerivedType(tag: DW_TAG_member, name: "dy_u", scope: !5136, file: !1906, line: 119, baseType: !7, size: 32, offset: 1472)
!5166 = !DIDerivedType(tag: DW_TAG_member, name: "dy_v", scope: !5136, file: !1906, line: 119, baseType: !7, size: 32, offset: 1504)
!5167 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !5136, file: !1906, line: 120, baseType: !206, size: 96, offset: 1536)
!5168 = !DIDerivedType(tag: DW_TAG_member, name: "view", scope: !5136, file: !1906, line: 120, baseType: !206, size: 96, offset: 1632)
!5169 = !DIDerivedType(tag: DW_TAG_member, name: "camera_co", scope: !5136, file: !1906, line: 120, baseType: !206, size: 96, offset: 1728)
!5170 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !5136, file: !1906, line: 124, baseType: !7, size: 32, offset: 1824)
!5171 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !5136, file: !1906, line: 124, baseType: !7, size: 32, offset: 1856)
!5172 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !5136, file: !1906, line: 124, baseType: !7, size: 32, offset: 1888)
!5173 = !DIDerivedType(tag: DW_TAG_member, name: "specr", scope: !5136, file: !1906, line: 125, baseType: !7, size: 32, offset: 1920)
!5174 = !DIDerivedType(tag: DW_TAG_member, name: "specg", scope: !5136, file: !1906, line: 125, baseType: !7, size: 32, offset: 1952)
!5175 = !DIDerivedType(tag: DW_TAG_member, name: "specb", scope: !5136, file: !1906, line: 125, baseType: !7, size: 32, offset: 1984)
!5176 = !DIDerivedType(tag: DW_TAG_member, name: "mirr", scope: !5136, file: !1906, line: 126, baseType: !7, size: 32, offset: 2016)
!5177 = !DIDerivedType(tag: DW_TAG_member, name: "mirg", scope: !5136, file: !1906, line: 126, baseType: !7, size: 32, offset: 2048)
!5178 = !DIDerivedType(tag: DW_TAG_member, name: "mirb", scope: !5136, file: !1906, line: 126, baseType: !7, size: 32, offset: 2080)
!5179 = !DIDerivedType(tag: DW_TAG_member, name: "ambr", scope: !5136, file: !1906, line: 127, baseType: !7, size: 32, offset: 2112)
!5180 = !DIDerivedType(tag: DW_TAG_member, name: "ambb", scope: !5136, file: !1906, line: 127, baseType: !7, size: 32, offset: 2144)
!5181 = !DIDerivedType(tag: DW_TAG_member, name: "ambg", scope: !5136, file: !1906, line: 127, baseType: !7, size: 32, offset: 2176)
!5182 = !DIDerivedType(tag: DW_TAG_member, name: "amb", scope: !5136, file: !1906, line: 129, baseType: !7, size: 32, offset: 2208)
!5183 = !DIDerivedType(tag: DW_TAG_member, name: "emit", scope: !5136, file: !1906, line: 129, baseType: !7, size: 32, offset: 2240)
!5184 = !DIDerivedType(tag: DW_TAG_member, name: "ang", scope: !5136, file: !1906, line: 129, baseType: !7, size: 32, offset: 2272)
!5185 = !DIDerivedType(tag: DW_TAG_member, name: "spectra", scope: !5136, file: !1906, line: 129, baseType: !7, size: 32, offset: 2304)
!5186 = !DIDerivedType(tag: DW_TAG_member, name: "ray_mirror", scope: !5136, file: !1906, line: 129, baseType: !7, size: 32, offset: 2336)
!5187 = !DIDerivedType(tag: DW_TAG_member, name: "alpha", scope: !5136, file: !1906, line: 130, baseType: !7, size: 32, offset: 2368)
!5188 = !DIDerivedType(tag: DW_TAG_member, name: "refl", scope: !5136, file: !1906, line: 130, baseType: !7, size: 32, offset: 2400)
!5189 = !DIDerivedType(tag: DW_TAG_member, name: "spec", scope: !5136, file: !1906, line: 130, baseType: !7, size: 32, offset: 2432)
!5190 = !DIDerivedType(tag: DW_TAG_member, name: "zoffs", scope: !5136, file: !1906, line: 130, baseType: !7, size: 32, offset: 2464)
!5191 = !DIDerivedType(tag: DW_TAG_member, name: "add", scope: !5136, file: !1906, line: 130, baseType: !7, size: 32, offset: 2496)
!5192 = !DIDerivedType(tag: DW_TAG_member, name: "translucency", scope: !5136, file: !1906, line: 131, baseType: !7, size: 32, offset: 2528)
!5193 = !DIDerivedType(tag: DW_TAG_member, name: "har", scope: !5136, file: !1906, line: 135, baseType: !8, size: 32, offset: 2560)
!5194 = !DIDerivedType(tag: DW_TAG_member, name: "lo", scope: !5136, file: !1906, line: 138, baseType: !206, size: 96, offset: 2592)
!5195 = !DIDerivedType(tag: DW_TAG_member, name: "gl", scope: !5136, file: !1906, line: 138, baseType: !206, size: 96, offset: 2688)
!5196 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !5136, file: !1906, line: 138, baseType: !206, size: 96, offset: 2784)
!5197 = !DIDerivedType(tag: DW_TAG_member, name: "orn", scope: !5136, file: !1906, line: 138, baseType: !206, size: 96, offset: 2880)
!5198 = !DIDerivedType(tag: DW_TAG_member, name: "winco", scope: !5136, file: !1906, line: 138, baseType: !206, size: 96, offset: 2976)
!5199 = !DIDerivedType(tag: DW_TAG_member, name: "vcol", scope: !5136, file: !1906, line: 138, baseType: !288, size: 128, offset: 3072)
!5200 = !DIDerivedType(tag: DW_TAG_member, name: "refcol", scope: !5136, file: !1906, line: 139, baseType: !288, size: 128, offset: 3200)
!5201 = !DIDerivedType(tag: DW_TAG_member, name: "displace", scope: !5136, file: !1906, line: 139, baseType: !206, size: 96, offset: 3328)
!5202 = !DIDerivedType(tag: DW_TAG_member, name: "strandco", scope: !5136, file: !1906, line: 140, baseType: !7, size: 32, offset: 3424)
!5203 = !DIDerivedType(tag: DW_TAG_member, name: "tang", scope: !5136, file: !1906, line: 140, baseType: !206, size: 96, offset: 3456)
!5204 = !DIDerivedType(tag: DW_TAG_member, name: "nmapnorm", scope: !5136, file: !1906, line: 140, baseType: !206, size: 96, offset: 3552)
!5205 = !DIDerivedType(tag: DW_TAG_member, name: "nmaptang", scope: !5136, file: !1906, line: 140, baseType: !288, size: 128, offset: 3648)
!5206 = !DIDerivedType(tag: DW_TAG_member, name: "stress", scope: !5136, file: !1906, line: 140, baseType: !7, size: 32, offset: 3776)
!5207 = !DIDerivedType(tag: DW_TAG_member, name: "winspeed", scope: !5136, file: !1906, line: 140, baseType: !288, size: 128, offset: 3808)
!5208 = !DIDerivedType(tag: DW_TAG_member, name: "duplilo", scope: !5136, file: !1906, line: 141, baseType: !206, size: 96, offset: 3936)
!5209 = !DIDerivedType(tag: DW_TAG_member, name: "dupliuv", scope: !5136, file: !1906, line: 141, baseType: !206, size: 96, offset: 4032)
!5210 = !DIDerivedType(tag: DW_TAG_member, name: "uv", scope: !5136, file: !1906, line: 143, baseType: !5211, size: 3072, offset: 4160)
!5211 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5212, size: 3072, elements: !832)
!5212 = !DIDerivedType(tag: DW_TAG_typedef, name: "ShadeInputUV", file: !1906, line: 90, baseType: !5213)
!5213 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ShadeInputUV", file: !1906, line: 87, size: 384, elements: !5214)
!5214 = !{!5215, !5216, !5217, !5218}
!5215 = !DIDerivedType(tag: DW_TAG_member, name: "dxuv", scope: !5213, file: !1906, line: 88, baseType: !206, size: 96)
!5216 = !DIDerivedType(tag: DW_TAG_member, name: "dyuv", scope: !5213, file: !1906, line: 88, baseType: !206, size: 96, offset: 96)
!5217 = !DIDerivedType(tag: DW_TAG_member, name: "uv", scope: !5213, file: !1906, line: 88, baseType: !206, size: 96, offset: 192)
!5218 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !5213, file: !1906, line: 89, baseType: !27, size: 64, offset: 320)
!5219 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !5136, file: !1906, line: 144, baseType: !5220, size: 1536, offset: 7232)
!5220 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5221, size: 1536, elements: !832)
!5221 = !DIDerivedType(tag: DW_TAG_typedef, name: "ShadeInputCol", file: !1906, line: 95, baseType: !5222)
!5222 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ShadeInputCol", file: !1906, line: 92, size: 192, elements: !5223)
!5223 = !{!5224, !5225}
!5224 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !5222, file: !1906, line: 93, baseType: !288, size: 128)
!5225 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !5222, file: !1906, line: 94, baseType: !27, size: 64, offset: 128)
!5226 = !DIDerivedType(tag: DW_TAG_member, name: "totuv", scope: !5136, file: !1906, line: 145, baseType: !8, size: 32, offset: 8768)
!5227 = !DIDerivedType(tag: DW_TAG_member, name: "totcol", scope: !5136, file: !1906, line: 145, baseType: !8, size: 32, offset: 8800)
!5228 = !DIDerivedType(tag: DW_TAG_member, name: "actuv", scope: !5136, file: !1906, line: 145, baseType: !8, size: 32, offset: 8832)
!5229 = !DIDerivedType(tag: DW_TAG_member, name: "actcol", scope: !5136, file: !1906, line: 145, baseType: !8, size: 32, offset: 8864)
!5230 = !DIDerivedType(tag: DW_TAG_member, name: "dxco", scope: !5136, file: !1906, line: 148, baseType: !206, size: 96, offset: 8896)
!5231 = !DIDerivedType(tag: DW_TAG_member, name: "dyco", scope: !5136, file: !1906, line: 148, baseType: !206, size: 96, offset: 8992)
!5232 = !DIDerivedType(tag: DW_TAG_member, name: "dxlo", scope: !5136, file: !1906, line: 149, baseType: !206, size: 96, offset: 9088)
!5233 = !DIDerivedType(tag: DW_TAG_member, name: "dylo", scope: !5136, file: !1906, line: 149, baseType: !206, size: 96, offset: 9184)
!5234 = !DIDerivedType(tag: DW_TAG_member, name: "dxgl", scope: !5136, file: !1906, line: 149, baseType: !206, size: 96, offset: 9280)
!5235 = !DIDerivedType(tag: DW_TAG_member, name: "dygl", scope: !5136, file: !1906, line: 149, baseType: !206, size: 96, offset: 9376)
!5236 = !DIDerivedType(tag: DW_TAG_member, name: "dxref", scope: !5136, file: !1906, line: 150, baseType: !206, size: 96, offset: 9472)
!5237 = !DIDerivedType(tag: DW_TAG_member, name: "dyref", scope: !5136, file: !1906, line: 150, baseType: !206, size: 96, offset: 9568)
!5238 = !DIDerivedType(tag: DW_TAG_member, name: "dxorn", scope: !5136, file: !1906, line: 150, baseType: !206, size: 96, offset: 9664)
!5239 = !DIDerivedType(tag: DW_TAG_member, name: "dyorn", scope: !5136, file: !1906, line: 150, baseType: !206, size: 96, offset: 9760)
!5240 = !DIDerivedType(tag: DW_TAG_member, name: "dxno", scope: !5136, file: !1906, line: 151, baseType: !206, size: 96, offset: 9856)
!5241 = !DIDerivedType(tag: DW_TAG_member, name: "dyno", scope: !5136, file: !1906, line: 151, baseType: !206, size: 96, offset: 9952)
!5242 = !DIDerivedType(tag: DW_TAG_member, name: "dxview", scope: !5136, file: !1906, line: 151, baseType: !7, size: 32, offset: 10048)
!5243 = !DIDerivedType(tag: DW_TAG_member, name: "dyview", scope: !5136, file: !1906, line: 151, baseType: !7, size: 32, offset: 10080)
!5244 = !DIDerivedType(tag: DW_TAG_member, name: "dxlv", scope: !5136, file: !1906, line: 152, baseType: !206, size: 96, offset: 10112)
!5245 = !DIDerivedType(tag: DW_TAG_member, name: "dylv", scope: !5136, file: !1906, line: 152, baseType: !206, size: 96, offset: 10208)
!5246 = !DIDerivedType(tag: DW_TAG_member, name: "dxwin", scope: !5136, file: !1906, line: 153, baseType: !206, size: 96, offset: 10304)
!5247 = !DIDerivedType(tag: DW_TAG_member, name: "dywin", scope: !5136, file: !1906, line: 153, baseType: !206, size: 96, offset: 10400)
!5248 = !DIDerivedType(tag: DW_TAG_member, name: "dxrefract", scope: !5136, file: !1906, line: 154, baseType: !206, size: 96, offset: 10496)
!5249 = !DIDerivedType(tag: DW_TAG_member, name: "dyrefract", scope: !5136, file: !1906, line: 154, baseType: !206, size: 96, offset: 10592)
!5250 = !DIDerivedType(tag: DW_TAG_member, name: "dxstrand", scope: !5136, file: !1906, line: 155, baseType: !7, size: 32, offset: 10688)
!5251 = !DIDerivedType(tag: DW_TAG_member, name: "dystrand", scope: !5136, file: !1906, line: 155, baseType: !7, size: 32, offset: 10720)
!5252 = !DIDerivedType(tag: DW_TAG_member, name: "ao", scope: !5136, file: !1906, line: 158, baseType: !206, size: 96, offset: 10752)
!5253 = !DIDerivedType(tag: DW_TAG_member, name: "indirect", scope: !5136, file: !1906, line: 158, baseType: !206, size: 96, offset: 10848)
!5254 = !DIDerivedType(tag: DW_TAG_member, name: "env", scope: !5136, file: !1906, line: 158, baseType: !206, size: 96, offset: 10944)
!5255 = !DIDerivedType(tag: DW_TAG_member, name: "xs", scope: !5136, file: !1906, line: 160, baseType: !8, size: 32, offset: 11040)
!5256 = !DIDerivedType(tag: DW_TAG_member, name: "ys", scope: !5136, file: !1906, line: 160, baseType: !8, size: 32, offset: 11072)
!5257 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !5136, file: !1906, line: 161, baseType: !8, size: 32, offset: 11104)
!5258 = !DIDerivedType(tag: DW_TAG_member, name: "scanco", scope: !5136, file: !1906, line: 162, baseType: !206, size: 96, offset: 11136)
!5259 = !DIDerivedType(tag: DW_TAG_member, name: "samplenr", scope: !5136, file: !1906, line: 164, baseType: !8, size: 32, offset: 11232)
!5260 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !5136, file: !1906, line: 165, baseType: !8, size: 32, offset: 11264)
!5261 = !DIDerivedType(tag: DW_TAG_member, name: "volume_depth", scope: !5136, file: !1906, line: 166, baseType: !8, size: 32, offset: 11296)
!5262 = !DIDerivedType(tag: DW_TAG_member, name: "surfnor", scope: !5136, file: !1906, line: 169, baseType: !206, size: 96, offset: 11328)
!5263 = !DIDerivedType(tag: DW_TAG_member, name: "surfdist", scope: !5136, file: !1906, line: 169, baseType: !7, size: 32, offset: 11424)
!5264 = !DIDerivedType(tag: DW_TAG_member, name: "do_preview", scope: !5136, file: !1906, line: 172, baseType: !48, size: 8, offset: 11456)
!5265 = !DIDerivedType(tag: DW_TAG_member, name: "do_manage", scope: !5136, file: !1906, line: 173, baseType: !48, size: 8, offset: 11464)
!5266 = !DIDerivedType(tag: DW_TAG_member, name: "thread", scope: !5136, file: !1906, line: 174, baseType: !43, size: 16, offset: 11472)
!5267 = !DIDerivedType(tag: DW_TAG_member, name: "sample", scope: !5136, file: !1906, line: 174, baseType: !43, size: 16, offset: 11488)
!5268 = !DIDerivedType(tag: DW_TAG_member, name: "nodes", scope: !5136, file: !1906, line: 175, baseType: !43, size: 16, offset: 11504)
!5269 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !5136, file: !1906, line: 177, baseType: !96, size: 32, offset: 11520)
!5270 = !DIDerivedType(tag: DW_TAG_member, name: "layflag", scope: !5136, file: !1906, line: 178, baseType: !8, size: 32, offset: 11552)
!5271 = !DIDerivedType(tag: DW_TAG_member, name: "passflag", scope: !5136, file: !1906, line: 178, baseType: !8, size: 32, offset: 11584)
!5272 = !DIDerivedType(tag: DW_TAG_member, name: "combinedflag", scope: !5136, file: !1906, line: 178, baseType: !8, size: 32, offset: 11616)
!5273 = !DIDerivedType(tag: DW_TAG_member, name: "light_override", scope: !5136, file: !1906, line: 179, baseType: !552, size: 64, offset: 11648)
!5274 = !DIDerivedType(tag: DW_TAG_member, name: "mat_override", scope: !5136, file: !1906, line: 180, baseType: !103, size: 64, offset: 11712)
!5275 = !DILocalVariable(name: "shi", arg: 1, scope: !5131, file: !3, line: 2562, type: !5134)
!5276 = !DILocation(line: 2562, column: 33, scope: !5131)
!5277 = !DILocalVariable(name: "shb", arg: 2, scope: !5131, file: !3, line: 2562, type: !2461)
!5278 = !DILocation(line: 2562, column: 47, scope: !5131)
!5279 = !DILocation(line: 2565, column: 6, scope: !5280)
!5280 = distinct !DILexicalBlock(scope: !5131, file: !3, line: 2565, column: 6)
!5281 = !DILocation(line: 2565, column: 11, scope: !5280)
!5282 = !DILocation(line: 2565, column: 16, scope: !5280)
!5283 = !DILocation(line: 2565, column: 6, scope: !5131)
!5284 = !DILocalVariable(name: "isbdata", scope: !5285, file: !3, line: 2566, type: !5286)
!5285 = distinct !DILexicalBlock(scope: !5280, file: !3, line: 2565, column: 21)
!5286 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5287, size: 64)
!5287 = !DIDerivedType(tag: DW_TAG_typedef, name: "ISBData", file: !2216, line: 111, baseType: !2411)
!5288 = !DILocation(line: 2566, column: 12, scope: !5285)
!5289 = !DILocation(line: 2566, column: 21, scope: !5285)
!5290 = !DILocation(line: 2566, column: 26, scope: !5285)
!5291 = !DILocation(line: 2566, column: 37, scope: !5285)
!5292 = !DILocation(line: 2566, column: 42, scope: !5285)
!5293 = !DILocation(line: 2568, column: 7, scope: !5294)
!5294 = distinct !DILexicalBlock(scope: !5285, file: !3, line: 2568, column: 7)
!5295 = !DILocation(line: 2568, column: 7, scope: !5285)
!5296 = !DILocation(line: 2569, column: 8, scope: !5297)
!5297 = distinct !DILexicalBlock(scope: !5298, file: !3, line: 2569, column: 8)
!5298 = distinct !DILexicalBlock(scope: !5294, file: !3, line: 2568, column: 16)
!5299 = !DILocation(line: 2569, column: 17, scope: !5297)
!5300 = !DILocation(line: 2569, column: 26, scope: !5297)
!5301 = !DILocation(line: 2569, column: 29, scope: !5297)
!5302 = !DILocation(line: 2569, column: 38, scope: !5297)
!5303 = !DILocation(line: 2569, column: 8, scope: !5298)
!5304 = !DILocalVariable(name: "x", scope: !5305, file: !3, line: 2570, type: !8)
!5305 = distinct !DILexicalBlock(scope: !5297, file: !3, line: 2569, column: 48)
!5306 = !DILocation(line: 2570, column: 9, scope: !5305)
!5307 = !DILocation(line: 2570, column: 12, scope: !5305)
!5308 = !DILocation(line: 2570, column: 17, scope: !5305)
!5309 = !DILocation(line: 2570, column: 22, scope: !5305)
!5310 = !DILocation(line: 2570, column: 31, scope: !5305)
!5311 = !DILocation(line: 2570, column: 20, scope: !5305)
!5312 = !DILocation(line: 2572, column: 9, scope: !5313)
!5313 = distinct !DILexicalBlock(scope: !5305, file: !3, line: 2572, column: 9)
!5314 = !DILocation(line: 2572, column: 11, scope: !5313)
!5315 = !DILocation(line: 2572, column: 16, scope: !5313)
!5316 = !DILocation(line: 2572, column: 19, scope: !5313)
!5317 = !DILocation(line: 2572, column: 23, scope: !5313)
!5318 = !DILocation(line: 2572, column: 32, scope: !5313)
!5319 = !DILocation(line: 2572, column: 21, scope: !5313)
!5320 = !DILocation(line: 2572, column: 9, scope: !5305)
!5321 = !DILocalVariable(name: "y", scope: !5322, file: !3, line: 2573, type: !8)
!5322 = distinct !DILexicalBlock(scope: !5313, file: !3, line: 2572, column: 39)
!5323 = !DILocation(line: 2573, column: 10, scope: !5322)
!5324 = !DILocation(line: 2573, column: 13, scope: !5322)
!5325 = !DILocation(line: 2573, column: 18, scope: !5322)
!5326 = !DILocation(line: 2573, column: 23, scope: !5322)
!5327 = !DILocation(line: 2573, column: 32, scope: !5322)
!5328 = !DILocation(line: 2573, column: 21, scope: !5322)
!5329 = !DILocation(line: 2575, column: 10, scope: !5330)
!5330 = distinct !DILexicalBlock(scope: !5322, file: !3, line: 2575, column: 10)
!5331 = !DILocation(line: 2575, column: 12, scope: !5330)
!5332 = !DILocation(line: 2575, column: 17, scope: !5330)
!5333 = !DILocation(line: 2575, column: 20, scope: !5330)
!5334 = !DILocation(line: 2575, column: 24, scope: !5330)
!5335 = !DILocation(line: 2575, column: 33, scope: !5330)
!5336 = !DILocation(line: 2575, column: 22, scope: !5330)
!5337 = !DILocation(line: 2575, column: 10, scope: !5322)
!5338 = !DILocation(line: 2576, column: 11, scope: !5339)
!5339 = distinct !DILexicalBlock(scope: !5340, file: !3, line: 2576, column: 11)
!5340 = distinct !DILexicalBlock(scope: !5330, file: !3, line: 2575, column: 40)
!5341 = !DILocation(line: 2576, column: 20, scope: !5339)
!5342 = !DILocation(line: 2576, column: 11, scope: !5340)
!5343 = !DILocalVariable(name: "sp", scope: !5344, file: !3, line: 2577, type: !5345)
!5344 = distinct !DILexicalBlock(scope: !5339, file: !3, line: 2576, column: 30)
!5345 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5346, size: 64)
!5346 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !43)
!5347 = !DILocation(line: 2577, column: 21, scope: !5344)
!5348 = !DILocation(line: 2577, column: 25, scope: !5344)
!5349 = !DILocation(line: 2577, column: 34, scope: !5344)
!5350 = !DILocation(line: 2577, column: 45, scope: !5344)
!5351 = !DILocation(line: 2577, column: 47, scope: !5344)
!5352 = !DILocation(line: 2577, column: 56, scope: !5344)
!5353 = !DILocation(line: 2577, column: 46, scope: !5344)
!5354 = !DILocation(line: 2577, column: 43, scope: !5344)
!5355 = !DILocation(line: 2577, column: 64, scope: !5344)
!5356 = !DILocation(line: 2577, column: 62, scope: !5344)
!5357 = !DILocation(line: 2578, column: 16, scope: !5344)
!5358 = !DILocation(line: 2578, column: 15, scope: !5344)
!5359 = !DILocation(line: 2578, column: 18, scope: !5344)
!5360 = !DILocation(line: 2578, column: 46, scope: !5344)
!5361 = !DILocation(line: 2578, column: 45, scope: !5344)
!5362 = !DILocation(line: 2578, column: 38, scope: !5344)
!5363 = !DILocation(line: 2578, column: 49, scope: !5344)
!5364 = !DILocation(line: 2578, column: 35, scope: !5344)
!5365 = !DILocation(line: 2578, column: 8, scope: !5344)
!5366 = !DILocalVariable(name: "sindex", scope: !5367, file: !3, line: 2581, type: !8)
!5367 = distinct !DILexicalBlock(scope: !5339, file: !3, line: 2580, column: 12)
!5368 = !DILocation(line: 2581, column: 12, scope: !5367)
!5369 = !DILocation(line: 2581, column: 20, scope: !5367)
!5370 = !DILocation(line: 2581, column: 22, scope: !5367)
!5371 = !DILocation(line: 2581, column: 31, scope: !5367)
!5372 = !DILocation(line: 2581, column: 21, scope: !5367)
!5373 = !DILocation(line: 2581, column: 39, scope: !5367)
!5374 = !DILocation(line: 2581, column: 37, scope: !5367)
!5375 = !DILocalVariable(name: "obi", scope: !5367, file: !3, line: 2582, type: !8)
!5376 = !DILocation(line: 2582, column: 12, scope: !5367)
!5377 = !DILocation(line: 2582, column: 17, scope: !5367)
!5378 = !DILocation(line: 2582, column: 22, scope: !5367)
!5379 = !DILocation(line: 2582, column: 30, scope: !5367)
!5380 = !DILocation(line: 2582, column: 26, scope: !5367)
!5381 = !DILocalVariable(name: "isbsa", scope: !5367, file: !3, line: 2583, type: !2416)
!5382 = !DILocation(line: 2583, column: 21, scope: !5367)
!5383 = !DILocation(line: 2583, column: 30, scope: !5367)
!5384 = !DILocation(line: 2583, column: 39, scope: !5367)
!5385 = !DILocation(line: 2583, column: 50, scope: !5367)
!5386 = !DILocation(line: 2583, column: 48, scope: !5367)
!5387 = !DILocation(line: 2583, column: 28, scope: !5367)
!5388 = !DILocation(line: 2585, column: 8, scope: !5367)
!5389 = !DILocation(line: 2585, column: 15, scope: !5367)
!5390 = !DILocation(line: 2586, column: 13, scope: !5391)
!5391 = distinct !DILexicalBlock(scope: !5392, file: !3, line: 2586, column: 13)
!5392 = distinct !DILexicalBlock(scope: !5367, file: !3, line: 2585, column: 22)
!5393 = !DILocation(line: 2586, column: 20, scope: !5391)
!5394 = !DILocation(line: 2586, column: 28, scope: !5391)
!5395 = !DILocation(line: 2586, column: 33, scope: !5391)
!5396 = !DILocation(line: 2586, column: 39, scope: !5391)
!5397 = !DILocation(line: 2586, column: 26, scope: !5391)
!5398 = !DILocation(line: 2586, column: 42, scope: !5391)
!5399 = !DILocation(line: 2586, column: 45, scope: !5391)
!5400 = !DILocation(line: 2586, column: 52, scope: !5391)
!5401 = !DILocation(line: 2586, column: 57, scope: !5391)
!5402 = !DILocation(line: 2586, column: 55, scope: !5391)
!5403 = !DILocation(line: 2586, column: 13, scope: !5392)
!5404 = !DILocation(line: 2587, column: 17, scope: !5391)
!5405 = !DILocation(line: 2587, column: 24, scope: !5391)
!5406 = !DILocation(line: 2587, column: 31, scope: !5391)
!5407 = !DILocation(line: 2587, column: 50, scope: !5391)
!5408 = !DILocation(line: 2587, column: 57, scope: !5391)
!5409 = !DILocation(line: 2587, column: 48, scope: !5391)
!5410 = !DILocation(line: 2587, column: 10, scope: !5391)
!5411 = !DILocation(line: 2588, column: 16, scope: !5392)
!5412 = !DILocation(line: 2588, column: 23, scope: !5392)
!5413 = !DILocation(line: 2588, column: 14, scope: !5392)
!5414 = distinct !{!5414, !5388, !5415}
!5415 = !DILocation(line: 2589, column: 8, scope: !5367)
!5416 = !DILocation(line: 2591, column: 6, scope: !5340)
!5417 = !DILocation(line: 2592, column: 5, scope: !5322)
!5418 = !DILocation(line: 2593, column: 4, scope: !5305)
!5419 = !DILocation(line: 2594, column: 3, scope: !5298)
!5420 = !DILocation(line: 2595, column: 2, scope: !5285)
!5421 = !DILocation(line: 2596, column: 2, scope: !5131)
!5422 = !DILocation(line: 2597, column: 1, scope: !5131)
!5423 = distinct !DISubprogram(name: "ISB_create", scope: !3, file: !3, line: 2600, type: !5424, scopeLine: 2601, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !4)
!5424 = !DISubroutineType(types: !5425)
!5425 = !{null, !5426, !3169}
!5426 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5427, size: 64)
!5427 = !DIDerivedType(tag: DW_TAG_typedef, name: "RenderPart", file: !16, line: 117, baseType: !5428)
!5428 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RenderPart", file: !16, line: 93, size: 1280, elements: !5429)
!5429 = !{!5430, !5432, !5433, !5434, !5435, !5436, !5437, !5438, !5439, !5440, !5441, !5442, !5443, !5444, !5445, !5446, !5447, !5448, !5449, !5450, !5451, !5452}
!5430 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !5428, file: !16, line: 94, baseType: !5431, size: 64)
!5431 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5428, size: 64)
!5432 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !5428, file: !16, line: 94, baseType: !5431, size: 64, offset: 64)
!5433 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !5428, file: !16, line: 96, baseType: !50, size: 64, offset: 128)
!5434 = !DIDerivedType(tag: DW_TAG_member, name: "fullresult", scope: !5428, file: !16, line: 97, baseType: !77, size: 128, offset: 192)
!5435 = !DIDerivedType(tag: DW_TAG_member, name: "recto", scope: !5428, file: !16, line: 99, baseType: !26, size: 64, offset: 320)
!5436 = !DIDerivedType(tag: DW_TAG_member, name: "rectp", scope: !5428, file: !16, line: 100, baseType: !26, size: 64, offset: 384)
!5437 = !DIDerivedType(tag: DW_TAG_member, name: "rectz", scope: !5428, file: !16, line: 101, baseType: !26, size: 64, offset: 448)
!5438 = !DIDerivedType(tag: DW_TAG_member, name: "rectmask", scope: !5428, file: !16, line: 102, baseType: !26, size: 64, offset: 512)
!5439 = !DIDerivedType(tag: DW_TAG_member, name: "rectdaps", scope: !5428, file: !16, line: 103, baseType: !3609, size: 64, offset: 576)
!5440 = !DIDerivedType(tag: DW_TAG_member, name: "rectbacko", scope: !5428, file: !16, line: 104, baseType: !26, size: 64, offset: 640)
!5441 = !DIDerivedType(tag: DW_TAG_member, name: "rectbackp", scope: !5428, file: !16, line: 105, baseType: !26, size: 64, offset: 704)
!5442 = !DIDerivedType(tag: DW_TAG_member, name: "rectbackz", scope: !5428, file: !16, line: 106, baseType: !26, size: 64, offset: 768)
!5443 = !DIDerivedType(tag: DW_TAG_member, name: "rectall", scope: !5428, file: !16, line: 107, baseType: !3609, size: 64, offset: 832)
!5444 = !DIDerivedType(tag: DW_TAG_member, name: "disprect", scope: !5428, file: !16, line: 109, baseType: !66, size: 128, offset: 896)
!5445 = !DIDerivedType(tag: DW_TAG_member, name: "rectx", scope: !5428, file: !16, line: 110, baseType: !8, size: 32, offset: 1024)
!5446 = !DIDerivedType(tag: DW_TAG_member, name: "recty", scope: !5428, file: !16, line: 110, baseType: !8, size: 32, offset: 1056)
!5447 = !DIDerivedType(tag: DW_TAG_member, name: "nr", scope: !5428, file: !16, line: 111, baseType: !8, size: 32, offset: 1088)
!5448 = !DIDerivedType(tag: DW_TAG_member, name: "crop", scope: !5428, file: !16, line: 112, baseType: !43, size: 16, offset: 1120)
!5449 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !5428, file: !16, line: 112, baseType: !43, size: 16, offset: 1136)
!5450 = !DIDerivedType(tag: DW_TAG_member, name: "sample", scope: !5428, file: !16, line: 113, baseType: !43, size: 16, offset: 1152)
!5451 = !DIDerivedType(tag: DW_TAG_member, name: "thread", scope: !5428, file: !16, line: 114, baseType: !43, size: 16, offset: 1168)
!5452 = !DIDerivedType(tag: DW_TAG_member, name: "clipflag", scope: !5428, file: !16, line: 116, baseType: !27, size: 64, offset: 1216)
!5453 = !DILocalVariable(name: "pa", arg: 1, scope: !5423, file: !3, line: 2600, type: !5426)
!5454 = !DILocation(line: 2600, column: 29, scope: !5423)
!5455 = !DILocalVariable(name: "apixbuf", arg: 2, scope: !5423, file: !3, line: 2600, type: !3169)
!5456 = !DILocation(line: 2600, column: 42, scope: !5423)
!5457 = !DILocalVariable(name: "go", scope: !5423, file: !3, line: 2602, type: !5458)
!5458 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5459, size: 64)
!5459 = !DIDerivedType(tag: DW_TAG_typedef, name: "GroupObject", file: !554, line: 48, baseType: !5460)
!5460 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GroupObject", file: !554, line: 42, size: 320, elements: !5461)
!5461 = !{!5462, !5464, !5465, !5466, !5467, !5468}
!5462 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !5460, file: !554, line: 43, baseType: !5463, size: 64)
!5463 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5460, size: 64)
!5464 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !5460, file: !554, line: 43, baseType: !5463, size: 64, offset: 64)
!5465 = !DIDerivedType(tag: DW_TAG_member, name: "ob", scope: !5460, file: !554, line: 44, baseType: !341, size: 64, offset: 128)
!5466 = !DIDerivedType(tag: DW_TAG_member, name: "lampren", scope: !5460, file: !554, line: 45, baseType: !6, size: 64, offset: 192)
!5467 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !5460, file: !554, line: 46, baseType: !43, size: 16, offset: 256)
!5468 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !5460, file: !554, line: 47, baseType: !1034, size: 48, offset: 272)
!5469 = !DILocation(line: 2602, column: 15, scope: !5423)
!5470 = !DILocation(line: 2605, column: 19, scope: !5471)
!5471 = distinct !DILexicalBlock(scope: !5423, file: !3, line: 2605, column: 2)
!5472 = !DILocation(line: 2605, column: 10, scope: !5471)
!5473 = !DILocation(line: 2605, column: 9, scope: !5471)
!5474 = !DILocation(line: 2605, column: 7, scope: !5471)
!5475 = !DILocation(line: 2605, column: 26, scope: !5476)
!5476 = distinct !DILexicalBlock(scope: !5471, file: !3, line: 2605, column: 2)
!5477 = !DILocation(line: 2605, column: 2, scope: !5471)
!5478 = !DILocalVariable(name: "lar", scope: !5479, file: !3, line: 2606, type: !2286)
!5479 = distinct !DILexicalBlock(scope: !5476, file: !3, line: 2605, column: 44)
!5480 = !DILocation(line: 2606, column: 12, scope: !5479)
!5481 = !DILocation(line: 2606, column: 17, scope: !5479)
!5482 = !DILocation(line: 2606, column: 21, scope: !5479)
!5483 = !DILocation(line: 2608, column: 7, scope: !5484)
!5484 = distinct !DILexicalBlock(scope: !5479, file: !3, line: 2608, column: 7)
!5485 = !DILocation(line: 2608, column: 12, scope: !5484)
!5486 = !DILocation(line: 2608, column: 16, scope: !5484)
!5487 = !DILocation(line: 2608, column: 26, scope: !5484)
!5488 = !DILocation(line: 2608, column: 29, scope: !5484)
!5489 = !DILocation(line: 2608, column: 34, scope: !5484)
!5490 = !DILocation(line: 2608, column: 38, scope: !5484)
!5491 = !DILocation(line: 2608, column: 41, scope: !5484)
!5492 = !DILocation(line: 2608, column: 46, scope: !5484)
!5493 = !DILocation(line: 2608, column: 53, scope: !5484)
!5494 = !DILocation(line: 2608, column: 7, scope: !5479)
!5495 = !DILocation(line: 2611, column: 38, scope: !5496)
!5496 = distinct !DILexicalBlock(scope: !5484, file: !3, line: 2608, column: 77)
!5497 = !DILocation(line: 2611, column: 4, scope: !5496)
!5498 = !DILocation(line: 2611, column: 9, scope: !5496)
!5499 = !DILocation(line: 2611, column: 14, scope: !5496)
!5500 = !DILocation(line: 2611, column: 25, scope: !5496)
!5501 = !DILocation(line: 2611, column: 29, scope: !5496)
!5502 = !DILocation(line: 2611, column: 36, scope: !5496)
!5503 = !DILocation(line: 2613, column: 8, scope: !5504)
!5504 = distinct !DILexicalBlock(scope: !5496, file: !3, line: 2613, column: 8)
!5505 = !DILocation(line: 2613, column: 8, scope: !5496)
!5506 = !DILocation(line: 2614, column: 28, scope: !5504)
!5507 = !DILocation(line: 2614, column: 32, scope: !5504)
!5508 = !DILocation(line: 2614, column: 41, scope: !5504)
!5509 = !DILocation(line: 2614, column: 5, scope: !5504)
!5510 = !DILocation(line: 2616, column: 21, scope: !5504)
!5511 = !DILocation(line: 2616, column: 25, scope: !5504)
!5512 = !DILocation(line: 2616, column: 5, scope: !5504)
!5513 = !DILocation(line: 2617, column: 3, scope: !5496)
!5514 = !DILocation(line: 2618, column: 2, scope: !5479)
!5515 = !DILocation(line: 2605, column: 34, scope: !5476)
!5516 = !DILocation(line: 2605, column: 38, scope: !5476)
!5517 = !DILocation(line: 2605, column: 32, scope: !5476)
!5518 = !DILocation(line: 2605, column: 2, scope: !5476)
!5519 = distinct !{!5519, !5477, !5520}
!5520 = !DILocation(line: 2618, column: 2, scope: !5471)
!5521 = !DILocation(line: 2619, column: 1, scope: !5423)
!5522 = distinct !DISubprogram(name: "isb_make_buffer_transp", scope: !3, file: !3, line: 2413, type: !5523, scopeLine: 2414, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!5523 = !DISubroutineType(types: !5524)
!5524 = !{null, !5426, !3169, !2286}
!5525 = !DILocalVariable(name: "pa", arg: 1, scope: !5522, file: !3, line: 2413, type: !5426)
!5526 = !DILocation(line: 2413, column: 48, scope: !5522)
!5527 = !DILocalVariable(name: "apixbuf", arg: 2, scope: !5522, file: !3, line: 2413, type: !3169)
!5528 = !DILocation(line: 2413, column: 61, scope: !5522)
!5529 = !DILocalVariable(name: "lar", arg: 3, scope: !5522, file: !3, line: 2413, type: !2286)
!5530 = !DILocation(line: 2413, column: 79, scope: !5522)
!5531 = !DILocalVariable(name: "shb", scope: !5522, file: !3, line: 2415, type: !2461)
!5532 = !DILocation(line: 2415, column: 11, scope: !5522)
!5533 = !DILocation(line: 2415, column: 16, scope: !5522)
!5534 = !DILocation(line: 2415, column: 21, scope: !5522)
!5535 = !DILocalVariable(name: "isbdata", scope: !5522, file: !3, line: 2416, type: !5286)
!5536 = !DILocation(line: 2416, column: 11, scope: !5522)
!5537 = !DILocalVariable(name: "samp", scope: !5522, file: !3, line: 2417, type: !5538)
!5538 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5539, size: 64)
!5539 = !DIDerivedType(tag: DW_TAG_typedef, name: "ISBSampleA", file: !2216, line: 95, baseType: !5540)
!5540 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ISBSampleA", file: !2216, line: 89, size: 320, elements: !5541)
!5541 = !{!5542, !5543, !5544, !5545, !5546}
!5542 = !DIDerivedType(tag: DW_TAG_member, name: "zco", scope: !5540, file: !2216, line: 90, baseType: !206, size: 96)
!5543 = !DIDerivedType(tag: DW_TAG_member, name: "shadfac", scope: !5540, file: !2216, line: 91, baseType: !2221, size: 64, offset: 128)
!5544 = !DIDerivedType(tag: DW_TAG_member, name: "obi", scope: !5540, file: !2216, line: 92, baseType: !8, size: 32, offset: 192)
!5545 = !DIDerivedType(tag: DW_TAG_member, name: "facenr", scope: !5540, file: !2216, line: 93, baseType: !8, size: 32, offset: 224)
!5546 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !5540, file: !2216, line: 94, baseType: !5547, size: 64, offset: 256)
!5547 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5540, size: 64)
!5548 = !DILocation(line: 2417, column: 14, scope: !5522)
!5549 = !DILocalVariable(name: "samplebuf", scope: !5522, file: !3, line: 2417, type: !5550)
!5550 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5551, size: 1024, elements: !1758)
!5551 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5538, size: 64)
!5552 = !DILocation(line: 2417, column: 22, scope: !5522)
!5553 = !DILocalVariable(name: "root", scope: !5522, file: !3, line: 2418, type: !2225)
!5554 = !DILocation(line: 2418, column: 12, scope: !5522)
!5555 = !DILocalVariable(name: "memarena", scope: !5522, file: !3, line: 2419, type: !5556)
!5556 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5557, size: 64)
!5557 = !DIDerivedType(tag: DW_TAG_typedef, name: "MemArena", file: !2138, line: 53, baseType: !2137)
!5558 = !DILocation(line: 2419, column: 12, scope: !5522)
!5559 = !DILocalVariable(name: "ap", scope: !5522, file: !3, line: 2420, type: !3169)
!5560 = !DILocation(line: 2420, column: 11, scope: !5522)
!5561 = !DILocalVariable(name: "x", scope: !5522, file: !3, line: 2421, type: !8)
!5562 = !DILocation(line: 2421, column: 6, scope: !5522)
!5563 = !DILocalVariable(name: "y", scope: !5522, file: !3, line: 2421, type: !8)
!5564 = !DILocation(line: 2421, column: 9, scope: !5522)
!5565 = !DILocalVariable(name: "sindex", scope: !5522, file: !3, line: 2421, type: !8)
!5566 = !DILocation(line: 2421, column: 12, scope: !5522)
!5567 = !DILocalVariable(name: "sample", scope: !5522, file: !3, line: 2421, type: !8)
!5568 = !DILocation(line: 2421, column: 20, scope: !5522)
!5569 = !DILocalVariable(name: "bsp_err", scope: !5522, file: !3, line: 2421, type: !8)
!5570 = !DILocation(line: 2421, column: 28, scope: !5522)
!5571 = !DILocation(line: 2424, column: 11, scope: !5522)
!5572 = !DILocation(line: 2424, column: 16, scope: !5522)
!5573 = !DILocation(line: 2424, column: 27, scope: !5522)
!5574 = !DILocation(line: 2424, column: 31, scope: !5522)
!5575 = !DILocation(line: 2424, column: 9, scope: !5522)
!5576 = !DILocation(line: 2427, column: 17, scope: !5522)
!5577 = !DILocation(line: 2427, column: 21, scope: !5522)
!5578 = !DILocation(line: 2427, column: 30, scope: !5522)
!5579 = !DILocation(line: 2427, column: 2, scope: !5522)
!5580 = !DILocation(line: 2427, column: 11, scope: !5522)
!5581 = !DILocation(line: 2427, column: 15, scope: !5522)
!5582 = !DILocation(line: 2428, column: 17, scope: !5522)
!5583 = !DILocation(line: 2428, column: 21, scope: !5522)
!5584 = !DILocation(line: 2428, column: 30, scope: !5522)
!5585 = !DILocation(line: 2428, column: 2, scope: !5522)
!5586 = !DILocation(line: 2428, column: 11, scope: !5522)
!5587 = !DILocation(line: 2428, column: 15, scope: !5522)
!5588 = !DILocation(line: 2429, column: 18, scope: !5522)
!5589 = !DILocation(line: 2429, column: 22, scope: !5522)
!5590 = !DILocation(line: 2429, column: 2, scope: !5522)
!5591 = !DILocation(line: 2429, column: 11, scope: !5522)
!5592 = !DILocation(line: 2429, column: 16, scope: !5522)
!5593 = !DILocation(line: 2430, column: 18, scope: !5522)
!5594 = !DILocation(line: 2430, column: 22, scope: !5522)
!5595 = !DILocation(line: 2430, column: 2, scope: !5522)
!5596 = !DILocation(line: 2430, column: 11, scope: !5522)
!5597 = !DILocation(line: 2430, column: 16, scope: !5522)
!5598 = !DILocation(line: 2433, column: 13, scope: !5522)
!5599 = !DILocation(line: 2433, column: 11, scope: !5522)
!5600 = !DILocation(line: 2434, column: 26, scope: !5522)
!5601 = !DILocation(line: 2434, column: 2, scope: !5522)
!5602 = !DILocation(line: 2437, column: 13, scope: !5603)
!5603 = distinct !DILexicalBlock(scope: !5522, file: !3, line: 2437, column: 2)
!5604 = !DILocation(line: 2437, column: 7, scope: !5603)
!5605 = !DILocation(line: 2437, column: 17, scope: !5606)
!5606 = distinct !DILexicalBlock(scope: !5603, file: !3, line: 2437, column: 2)
!5607 = !DILocation(line: 2437, column: 27, scope: !5606)
!5608 = !DILocation(line: 2437, column: 25, scope: !5606)
!5609 = !DILocation(line: 2437, column: 33, scope: !5606)
!5610 = !DILocation(line: 2437, column: 31, scope: !5606)
!5611 = !DILocation(line: 2437, column: 23, scope: !5606)
!5612 = !DILocation(line: 2437, column: 2, scope: !5603)
!5613 = !DILocation(line: 2438, column: 22, scope: !5606)
!5614 = !DILocation(line: 2438, column: 49, scope: !5606)
!5615 = !DILocation(line: 2438, column: 53, scope: !5606)
!5616 = !DILocation(line: 2438, column: 48, scope: !5606)
!5617 = !DILocation(line: 2438, column: 59, scope: !5606)
!5618 = !DILocation(line: 2438, column: 63, scope: !5606)
!5619 = !DILocation(line: 2438, column: 58, scope: !5606)
!5620 = !DILocation(line: 2438, column: 13, scope: !5606)
!5621 = !DILocation(line: 2438, column: 3, scope: !5606)
!5622 = !DILocation(line: 2438, column: 20, scope: !5606)
!5623 = !DILocation(line: 2437, column: 47, scope: !5606)
!5624 = !DILocation(line: 2437, column: 2, scope: !5606)
!5625 = distinct !{!5625, !5612, !5626}
!5626 = !DILocation(line: 2438, column: 91, scope: !5603)
!5627 = !DILocation(line: 2441, column: 2, scope: !5522)
!5628 = !DILocation(line: 2442, column: 25, scope: !5522)
!5629 = !DILocation(line: 2442, column: 30, scope: !5522)
!5630 = !DILocation(line: 2442, column: 18, scope: !5522)
!5631 = !DILocation(line: 2442, column: 7, scope: !5522)
!5632 = !DILocation(line: 2442, column: 11, scope: !5522)
!5633 = !DILocation(line: 2442, column: 16, scope: !5522)
!5634 = !DILocation(line: 2443, column: 25, scope: !5522)
!5635 = !DILocation(line: 2443, column: 30, scope: !5522)
!5636 = !DILocation(line: 2443, column: 18, scope: !5522)
!5637 = !DILocation(line: 2443, column: 7, scope: !5522)
!5638 = !DILocation(line: 2443, column: 11, scope: !5522)
!5639 = !DILocation(line: 2443, column: 16, scope: !5522)
!5640 = !DILocation(line: 2446, column: 11, scope: !5641)
!5641 = distinct !DILexicalBlock(scope: !5522, file: !3, line: 2446, column: 2)
!5642 = !DILocation(line: 2446, column: 9, scope: !5641)
!5643 = !DILocation(line: 2446, column: 26, scope: !5641)
!5644 = !DILocation(line: 2446, column: 31, scope: !5641)
!5645 = !DILocation(line: 2446, column: 7, scope: !5641)
!5646 = !DILocation(line: 2446, column: 35, scope: !5647)
!5647 = distinct !DILexicalBlock(scope: !5641, file: !3, line: 2446, column: 2)
!5648 = !DILocation(line: 2446, column: 37, scope: !5647)
!5649 = !DILocation(line: 2446, column: 41, scope: !5647)
!5650 = !DILocation(line: 2446, column: 36, scope: !5647)
!5651 = !DILocation(line: 2446, column: 2, scope: !5641)
!5652 = !DILocation(line: 2447, column: 9, scope: !5653)
!5653 = distinct !DILexicalBlock(scope: !5654, file: !3, line: 2447, column: 3)
!5654 = distinct !DILexicalBlock(scope: !5647, file: !3, line: 2446, column: 53)
!5655 = !DILocation(line: 2447, column: 8, scope: !5653)
!5656 = !DILocation(line: 2447, column: 13, scope: !5657)
!5657 = distinct !DILexicalBlock(scope: !5653, file: !3, line: 2447, column: 3)
!5658 = !DILocation(line: 2447, column: 15, scope: !5657)
!5659 = !DILocation(line: 2447, column: 19, scope: !5657)
!5660 = !DILocation(line: 2447, column: 14, scope: !5657)
!5661 = !DILocation(line: 2447, column: 3, scope: !5653)
!5662 = !DILocation(line: 2449, column: 8, scope: !5663)
!5663 = distinct !DILexicalBlock(scope: !5664, file: !3, line: 2449, column: 8)
!5664 = distinct !DILexicalBlock(scope: !5657, file: !3, line: 2447, column: 47)
!5665 = !DILocation(line: 2449, column: 12, scope: !5663)
!5666 = !DILocation(line: 2449, column: 8, scope: !5664)
!5667 = !DILocalVariable(name: "apn", scope: !5668, file: !3, line: 2450, type: !3169)
!5668 = distinct !DILexicalBlock(scope: !5663, file: !3, line: 2449, column: 18)
!5669 = !DILocation(line: 2450, column: 14, scope: !5668)
!5670 = !DILocalVariable(name: "xs", scope: !5668, file: !3, line: 2451, type: !7)
!5671 = !DILocation(line: 2451, column: 11, scope: !5668)
!5672 = !DILocation(line: 2451, column: 23, scope: !5668)
!5673 = !DILocation(line: 2451, column: 27, scope: !5668)
!5674 = !DILocation(line: 2451, column: 31, scope: !5668)
!5675 = !DILocation(line: 2451, column: 40, scope: !5668)
!5676 = !DILocation(line: 2451, column: 25, scope: !5668)
!5677 = !DILocation(line: 2451, column: 15, scope: !5668)
!5678 = !DILocalVariable(name: "ys", scope: !5668, file: !3, line: 2452, type: !7)
!5679 = !DILocation(line: 2452, column: 11, scope: !5668)
!5680 = !DILocation(line: 2452, column: 23, scope: !5668)
!5681 = !DILocation(line: 2452, column: 27, scope: !5668)
!5682 = !DILocation(line: 2452, column: 31, scope: !5668)
!5683 = !DILocation(line: 2452, column: 40, scope: !5668)
!5684 = !DILocation(line: 2452, column: 25, scope: !5668)
!5685 = !DILocation(line: 2452, column: 15, scope: !5668)
!5686 = !DILocation(line: 2454, column: 14, scope: !5687)
!5687 = distinct !DILexicalBlock(scope: !5668, file: !3, line: 2454, column: 5)
!5688 = !DILocation(line: 2454, column: 13, scope: !5687)
!5689 = !DILocation(line: 2454, column: 10, scope: !5687)
!5690 = !DILocation(line: 2454, column: 18, scope: !5691)
!5691 = distinct !DILexicalBlock(scope: !5687, file: !3, line: 2454, column: 5)
!5692 = !DILocation(line: 2454, column: 5, scope: !5687)
!5693 = !DILocalVariable(name: "a", scope: !5694, file: !3, line: 2455, type: !8)
!5694 = distinct !DILexicalBlock(scope: !5691, file: !3, line: 2454, column: 39)
!5695 = !DILocation(line: 2455, column: 10, scope: !5694)
!5696 = !DILocation(line: 2456, column: 12, scope: !5697)
!5697 = distinct !DILexicalBlock(scope: !5694, file: !3, line: 2456, column: 6)
!5698 = !DILocation(line: 2456, column: 11, scope: !5697)
!5699 = !DILocation(line: 2456, column: 16, scope: !5700)
!5700 = distinct !DILexicalBlock(scope: !5697, file: !3, line: 2456, column: 6)
!5701 = !DILocation(line: 2456, column: 17, scope: !5700)
!5702 = !DILocation(line: 2456, column: 6, scope: !5697)
!5703 = !DILocation(line: 2457, column: 11, scope: !5704)
!5704 = distinct !DILexicalBlock(scope: !5705, file: !3, line: 2457, column: 11)
!5705 = distinct !DILexicalBlock(scope: !5700, file: !3, line: 2456, column: 26)
!5706 = !DILocation(line: 2457, column: 16, scope: !5704)
!5707 = !DILocation(line: 2457, column: 18, scope: !5704)
!5708 = !DILocation(line: 2457, column: 11, scope: !5705)
!5709 = !DILocalVariable(name: "obi", scope: !5710, file: !3, line: 2458, type: !2609)
!5710 = distinct !DILexicalBlock(scope: !5704, file: !3, line: 2457, column: 22)
!5711 = !DILocation(line: 2458, column: 27, scope: !5710)
!5712 = !DILocation(line: 2458, column: 35, scope: !5710)
!5713 = !DILocation(line: 2458, column: 50, scope: !5710)
!5714 = !DILocation(line: 2458, column: 55, scope: !5710)
!5715 = !DILocation(line: 2458, column: 59, scope: !5710)
!5716 = !DILocation(line: 2458, column: 33, scope: !5710)
!5717 = !DILocalVariable(name: "obr", scope: !5710, file: !3, line: 2459, type: !1917)
!5718 = !DILocation(line: 2459, column: 19, scope: !5710)
!5719 = !DILocation(line: 2459, column: 24, scope: !5710)
!5720 = !DILocation(line: 2459, column: 29, scope: !5710)
!5721 = !DILocalVariable(name: "vlr", scope: !5710, file: !3, line: 2460, type: !2615)
!5722 = !DILocation(line: 2460, column: 17, scope: !5710)
!5723 = !DILocation(line: 2460, column: 39, scope: !5710)
!5724 = !DILocation(line: 2460, column: 45, scope: !5710)
!5725 = !DILocation(line: 2460, column: 50, scope: !5710)
!5726 = !DILocation(line: 2460, column: 52, scope: !5710)
!5727 = !DILocation(line: 2460, column: 54, scope: !5710)
!5728 = !DILocation(line: 2460, column: 58, scope: !5710)
!5729 = !DILocation(line: 2460, column: 22, scope: !5710)
!5730 = !DILocalVariable(name: "zco", scope: !5710, file: !3, line: 2461, type: !206)
!5731 = !DILocation(line: 2461, column: 14, scope: !5710)
!5732 = !DILocation(line: 2464, column: 8, scope: !5710)
!5733 = !DILocation(line: 2464, column: 13, scope: !5710)
!5734 = !DILocation(line: 2464, column: 21, scope: !5710)
!5735 = !DILocation(line: 2464, column: 23, scope: !5710)
!5736 = !DILocation(line: 2466, column: 14, scope: !5737)
!5737 = distinct !DILexicalBlock(scope: !5710, file: !3, line: 2466, column: 12)
!5738 = !DILocation(line: 2466, column: 12, scope: !5737)
!5739 = !DILocation(line: 2466, column: 12, scope: !5710)
!5740 = !DILocation(line: 2467, column: 20, scope: !5741)
!5741 = distinct !DILexicalBlock(scope: !5742, file: !3, line: 2467, column: 9)
!5742 = distinct !DILexicalBlock(scope: !5737, file: !3, line: 2466, column: 19)
!5743 = !DILocation(line: 2467, column: 14, scope: !5741)
!5744 = !DILocation(line: 2467, column: 24, scope: !5745)
!5745 = distinct !DILexicalBlock(scope: !5741, file: !3, line: 2467, column: 9)
!5746 = !DILocation(line: 2467, column: 33, scope: !5745)
!5747 = !DILocation(line: 2467, column: 31, scope: !5745)
!5748 = !DILocation(line: 2467, column: 30, scope: !5745)
!5749 = !DILocation(line: 2467, column: 9, scope: !5741)
!5750 = !DILocalVariable(name: "mask", scope: !5751, file: !3, line: 2468, type: !8)
!5751 = distinct !DILexicalBlock(scope: !5745, file: !3, line: 2467, column: 48)
!5752 = !DILocation(line: 2468, column: 14, scope: !5751)
!5753 = !DILocation(line: 2468, column: 24, scope: !5751)
!5754 = !DILocation(line: 2468, column: 22, scope: !5751)
!5755 = !DILocation(line: 2470, column: 14, scope: !5756)
!5756 = distinct !DILexicalBlock(scope: !5751, file: !3, line: 2470, column: 14)
!5757 = !DILocation(line: 2470, column: 19, scope: !5756)
!5758 = !DILocation(line: 2470, column: 24, scope: !5756)
!5759 = !DILocation(line: 2470, column: 29, scope: !5756)
!5760 = !DILocation(line: 2470, column: 27, scope: !5756)
!5761 = !DILocation(line: 2470, column: 14, scope: !5751)
!5762 = !DILocation(line: 2473, column: 36, scope: !5763)
!5763 = distinct !DILexicalBlock(scope: !5764, file: !3, line: 2473, column: 15)
!5764 = distinct !DILexicalBlock(scope: !5756, file: !3, line: 2470, column: 35)
!5765 = !DILocation(line: 2473, column: 41, scope: !5763)
!5766 = !DILocation(line: 2473, column: 46, scope: !5763)
!5767 = !DILocation(line: 2473, column: 51, scope: !5763)
!5768 = !DILocation(line: 2473, column: 62, scope: !5763)
!5769 = !DILocation(line: 2473, column: 56, scope: !5763)
!5770 = !DILocation(line: 2473, column: 54, scope: !5763)
!5771 = !DILocation(line: 2473, column: 74, scope: !5763)
!5772 = !DILocation(line: 2473, column: 85, scope: !5763)
!5773 = !DILocation(line: 2473, column: 79, scope: !5763)
!5774 = !DILocation(line: 2473, column: 77, scope: !5763)
!5775 = !DILocation(line: 2473, column: 97, scope: !5763)
!5776 = !DILocation(line: 2473, column: 15, scope: !5763)
!5777 = !DILocation(line: 2473, column: 15, scope: !5764)
!5778 = !DILocation(line: 2474, column: 52, scope: !5779)
!5779 = distinct !DILexicalBlock(scope: !5763, file: !3, line: 2473, column: 103)
!5780 = !DILocation(line: 2474, column: 42, scope: !5779)
!5781 = !DILocation(line: 2474, column: 62, scope: !5779)
!5782 = !DILocation(line: 2474, column: 60, scope: !5779)
!5783 = !DILocation(line: 2474, column: 70, scope: !5779)
!5784 = !DILocation(line: 2474, column: 18, scope: !5779)
!5785 = !DILocation(line: 2474, column: 16, scope: !5779)
!5786 = !DILocation(line: 2475, column: 23, scope: !5779)
!5787 = !DILocation(line: 2475, column: 28, scope: !5779)
!5788 = !DILocation(line: 2475, column: 32, scope: !5779)
!5789 = !DILocation(line: 2475, column: 12, scope: !5779)
!5790 = !DILocation(line: 2475, column: 18, scope: !5779)
!5791 = !DILocation(line: 2475, column: 21, scope: !5779)
!5792 = !DILocation(line: 2476, column: 26, scope: !5779)
!5793 = !DILocation(line: 2476, column: 31, scope: !5779)
!5794 = !DILocation(line: 2476, column: 33, scope: !5779)
!5795 = !DILocation(line: 2476, column: 36, scope: !5779)
!5796 = !DILocation(line: 2476, column: 12, scope: !5779)
!5797 = !DILocation(line: 2476, column: 18, scope: !5779)
!5798 = !DILocation(line: 2476, column: 24, scope: !5779)
!5799 = !DILocation(line: 2477, column: 28, scope: !5779)
!5800 = !DILocation(line: 2477, column: 33, scope: !5779)
!5801 = !DILocation(line: 2477, column: 41, scope: !5779)
!5802 = !DILocation(line: 2477, column: 12, scope: !5779)
!5803 = !DILocation(line: 2477, column: 18, scope: !5779)
!5804 = !DILocation(line: 2477, column: 25, scope: !5779)
!5805 = !DILocation(line: 2479, column: 23, scope: !5779)
!5806 = !DILocation(line: 2479, column: 29, scope: !5779)
!5807 = !DILocation(line: 2479, column: 34, scope: !5779)
!5808 = !DILocation(line: 2479, column: 12, scope: !5779)
!5809 = !DILocation(line: 2480, column: 38, scope: !5779)
!5810 = !DILocation(line: 2480, column: 24, scope: !5779)
!5811 = !DILocation(line: 2480, column: 43, scope: !5779)
!5812 = !DILocation(line: 2480, column: 49, scope: !5779)
!5813 = !DILocation(line: 2480, column: 12, scope: !5779)
!5814 = !DILocation(line: 2481, column: 11, scope: !5779)
!5815 = !DILocation(line: 2482, column: 10, scope: !5764)
!5816 = !DILocation(line: 2483, column: 9, scope: !5751)
!5817 = !DILocation(line: 2467, column: 44, scope: !5745)
!5818 = !DILocation(line: 2467, column: 9, scope: !5745)
!5819 = distinct !{!5819, !5749, !5820}
!5820 = !DILocation(line: 2483, column: 9, scope: !5741)
!5821 = !DILocation(line: 2484, column: 8, scope: !5742)
!5822 = !DILocation(line: 2488, column: 34, scope: !5823)
!5823 = distinct !DILexicalBlock(scope: !5824, file: !3, line: 2488, column: 13)
!5824 = distinct !DILexicalBlock(scope: !5737, file: !3, line: 2485, column: 13)
!5825 = !DILocation(line: 2488, column: 39, scope: !5823)
!5826 = !DILocation(line: 2488, column: 44, scope: !5823)
!5827 = !DILocation(line: 2488, column: 49, scope: !5823)
!5828 = !DILocation(line: 2488, column: 53, scope: !5823)
!5829 = !DILocation(line: 2488, column: 57, scope: !5823)
!5830 = !DILocation(line: 2488, column: 13, scope: !5823)
!5831 = !DILocation(line: 2488, column: 13, scope: !5824)
!5832 = !DILocation(line: 2490, column: 40, scope: !5833)
!5833 = distinct !DILexicalBlock(scope: !5823, file: !3, line: 2488, column: 63)
!5834 = !DILocation(line: 2490, column: 55, scope: !5833)
!5835 = !DILocation(line: 2490, column: 53, scope: !5833)
!5836 = !DILocation(line: 2490, column: 63, scope: !5833)
!5837 = !DILocation(line: 2490, column: 16, scope: !5833)
!5838 = !DILocation(line: 2490, column: 14, scope: !5833)
!5839 = !DILocation(line: 2491, column: 21, scope: !5833)
!5840 = !DILocation(line: 2491, column: 26, scope: !5833)
!5841 = !DILocation(line: 2491, column: 30, scope: !5833)
!5842 = !DILocation(line: 2491, column: 10, scope: !5833)
!5843 = !DILocation(line: 2491, column: 16, scope: !5833)
!5844 = !DILocation(line: 2491, column: 19, scope: !5833)
!5845 = !DILocation(line: 2492, column: 24, scope: !5833)
!5846 = !DILocation(line: 2492, column: 29, scope: !5833)
!5847 = !DILocation(line: 2492, column: 31, scope: !5833)
!5848 = !DILocation(line: 2492, column: 34, scope: !5833)
!5849 = !DILocation(line: 2492, column: 10, scope: !5833)
!5850 = !DILocation(line: 2492, column: 16, scope: !5833)
!5851 = !DILocation(line: 2492, column: 22, scope: !5833)
!5852 = !DILocation(line: 2493, column: 26, scope: !5833)
!5853 = !DILocation(line: 2493, column: 31, scope: !5833)
!5854 = !DILocation(line: 2493, column: 39, scope: !5833)
!5855 = !DILocation(line: 2493, column: 10, scope: !5833)
!5856 = !DILocation(line: 2493, column: 16, scope: !5833)
!5857 = !DILocation(line: 2493, column: 23, scope: !5833)
!5858 = !DILocation(line: 2495, column: 21, scope: !5833)
!5859 = !DILocation(line: 2495, column: 27, scope: !5833)
!5860 = !DILocation(line: 2495, column: 32, scope: !5833)
!5861 = !DILocation(line: 2495, column: 10, scope: !5833)
!5862 = !DILocation(line: 2496, column: 36, scope: !5833)
!5863 = !DILocation(line: 2496, column: 22, scope: !5833)
!5864 = !DILocation(line: 2496, column: 41, scope: !5833)
!5865 = !DILocation(line: 2496, column: 47, scope: !5833)
!5866 = !DILocation(line: 2496, column: 10, scope: !5833)
!5867 = !DILocation(line: 2497, column: 9, scope: !5833)
!5868 = !DILocation(line: 2499, column: 7, scope: !5710)
!5869 = !DILocation(line: 2500, column: 6, scope: !5705)
!5870 = !DILocation(line: 2456, column: 22, scope: !5700)
!5871 = !DILocation(line: 2456, column: 6, scope: !5700)
!5872 = distinct !{!5872, !5702, !5873}
!5873 = !DILocation(line: 2500, column: 6, scope: !5697)
!5874 = !DILocation(line: 2501, column: 5, scope: !5694)
!5875 = !DILocation(line: 2454, column: 28, scope: !5691)
!5876 = !DILocation(line: 2454, column: 33, scope: !5691)
!5877 = !DILocation(line: 2454, column: 26, scope: !5691)
!5878 = !DILocation(line: 2454, column: 5, scope: !5691)
!5879 = distinct !{!5879, !5692, !5880}
!5880 = !DILocation(line: 2501, column: 5, scope: !5687)
!5881 = !DILocation(line: 2502, column: 4, scope: !5668)
!5882 = !DILocation(line: 2503, column: 3, scope: !5664)
!5883 = !DILocation(line: 2447, column: 27, scope: !5657)
!5884 = !DILocation(line: 2447, column: 37, scope: !5657)
!5885 = !DILocation(line: 2447, column: 43, scope: !5657)
!5886 = !DILocation(line: 2447, column: 3, scope: !5657)
!5887 = distinct !{!5887, !5661, !5888}
!5888 = !DILocation(line: 2503, column: 3, scope: !5653)
!5889 = !DILocation(line: 2504, column: 2, scope: !5654)
!5890 = !DILocation(line: 2446, column: 49, scope: !5647)
!5891 = !DILocation(line: 2446, column: 2, scope: !5647)
!5892 = distinct !{!5892, !5651, !5893}
!5893 = !DILocation(line: 2504, column: 2, scope: !5641)
!5894 = !DILocation(line: 2507, column: 11, scope: !5895)
!5895 = distinct !DILexicalBlock(scope: !5522, file: !3, line: 2507, column: 6)
!5896 = !DILocation(line: 2507, column: 15, scope: !5895)
!5897 = !DILocation(line: 2507, column: 30, scope: !5895)
!5898 = !DILocation(line: 2507, column: 35, scope: !5895)
!5899 = !DILocation(line: 2507, column: 23, scope: !5895)
!5900 = !DILocation(line: 2507, column: 20, scope: !5895)
!5901 = !DILocation(line: 2507, column: 6, scope: !5522)
!5902 = !DILocation(line: 2510, column: 29, scope: !5903)
!5903 = distinct !DILexicalBlock(scope: !5895, file: !3, line: 2507, column: 41)
!5904 = !DILocation(line: 2510, column: 3, scope: !5903)
!5905 = !DILocation(line: 2513, column: 35, scope: !5903)
!5906 = !DILocation(line: 2513, column: 46, scope: !5903)
!5907 = !DILocation(line: 2513, column: 56, scope: !5903)
!5908 = !DILocation(line: 2513, column: 12, scope: !5903)
!5909 = !DILocation(line: 2513, column: 10, scope: !5903)
!5910 = !DILocation(line: 2515, column: 7, scope: !5911)
!5911 = distinct !DILexicalBlock(scope: !5903, file: !3, line: 2515, column: 7)
!5912 = !DILocation(line: 2515, column: 14, scope: !5911)
!5913 = !DILocation(line: 2515, column: 7, scope: !5903)
!5914 = !DILocalVariable(name: "isbsa", scope: !5915, file: !3, line: 2516, type: !2415)
!5915 = distinct !DILexicalBlock(scope: !5911, file: !3, line: 2515, column: 19)
!5916 = !DILocation(line: 2516, column: 18, scope: !5915)
!5917 = !DILocation(line: 2519, column: 26, scope: !5915)
!5918 = !DILocation(line: 2519, column: 4, scope: !5915)
!5919 = !DILocation(line: 2522, column: 30, scope: !5915)
!5920 = !DILocation(line: 2522, column: 42, scope: !5915)
!5921 = !DILocation(line: 2522, column: 46, scope: !5915)
!5922 = !DILocation(line: 2522, column: 52, scope: !5915)
!5923 = !DILocation(line: 2522, column: 56, scope: !5915)
!5924 = !DILocation(line: 2522, column: 51, scope: !5915)
!5925 = !DILocation(line: 2522, column: 61, scope: !5915)
!5926 = !DILocation(line: 2522, column: 11, scope: !5915)
!5927 = !DILocation(line: 2522, column: 20, scope: !5915)
!5928 = !DILocation(line: 2522, column: 28, scope: !5915)
!5929 = !DILocation(line: 2522, column: 9, scope: !5915)
!5930 = !DILocation(line: 2524, column: 24, scope: !5915)
!5931 = !DILocation(line: 2524, column: 4, scope: !5915)
!5932 = !DILocation(line: 2524, column: 13, scope: !5915)
!5933 = !DILocation(line: 2524, column: 22, scope: !5915)
!5934 = !DILocation(line: 2526, column: 13, scope: !5935)
!5935 = distinct !DILexicalBlock(scope: !5915, file: !3, line: 2526, column: 4)
!5936 = !DILocation(line: 2526, column: 11, scope: !5935)
!5937 = !DILocation(line: 2526, column: 24, scope: !5935)
!5938 = !DILocation(line: 2526, column: 28, scope: !5935)
!5939 = !DILocation(line: 2526, column: 34, scope: !5935)
!5940 = !DILocation(line: 2526, column: 38, scope: !5935)
!5941 = !DILocation(line: 2526, column: 33, scope: !5935)
!5942 = !DILocation(line: 2526, column: 23, scope: !5935)
!5943 = !DILocation(line: 2526, column: 9, scope: !5935)
!5944 = !DILocation(line: 2526, column: 45, scope: !5945)
!5945 = distinct !DILexicalBlock(scope: !5935, file: !3, line: 2526, column: 4)
!5946 = !DILocation(line: 2526, column: 46, scope: !5945)
!5947 = !DILocation(line: 2526, column: 4, scope: !5935)
!5948 = !DILocation(line: 2528, column: 9, scope: !5949)
!5949 = distinct !DILexicalBlock(scope: !5950, file: !3, line: 2528, column: 9)
!5950 = distinct !DILexicalBlock(scope: !5945, file: !3, line: 2526, column: 70)
!5951 = !DILocation(line: 2528, column: 13, scope: !5949)
!5952 = !DILocation(line: 2528, column: 9, scope: !5950)
!5953 = !DILocalVariable(name: "apn", scope: !5954, file: !3, line: 2529, type: !3169)
!5954 = distinct !DILexicalBlock(scope: !5949, file: !3, line: 2528, column: 19)
!5955 = !DILocation(line: 2529, column: 15, scope: !5954)
!5956 = !DILocation(line: 2530, column: 15, scope: !5957)
!5957 = distinct !DILexicalBlock(scope: !5954, file: !3, line: 2530, column: 6)
!5958 = !DILocation(line: 2530, column: 14, scope: !5957)
!5959 = !DILocation(line: 2530, column: 11, scope: !5957)
!5960 = !DILocation(line: 2530, column: 19, scope: !5961)
!5961 = distinct !DILexicalBlock(scope: !5957, file: !3, line: 2530, column: 6)
!5962 = !DILocation(line: 2530, column: 6, scope: !5957)
!5963 = !DILocalVariable(name: "a", scope: !5964, file: !3, line: 2531, type: !8)
!5964 = distinct !DILexicalBlock(scope: !5961, file: !3, line: 2530, column: 40)
!5965 = !DILocation(line: 2531, column: 11, scope: !5964)
!5966 = !DILocation(line: 2532, column: 13, scope: !5967)
!5967 = distinct !DILexicalBlock(scope: !5964, file: !3, line: 2532, column: 7)
!5968 = !DILocation(line: 2532, column: 12, scope: !5967)
!5969 = !DILocation(line: 2532, column: 17, scope: !5970)
!5970 = distinct !DILexicalBlock(scope: !5967, file: !3, line: 2532, column: 7)
!5971 = !DILocation(line: 2532, column: 18, scope: !5970)
!5972 = !DILocation(line: 2532, column: 7, scope: !5967)
!5973 = !DILocation(line: 2533, column: 12, scope: !5974)
!5974 = distinct !DILexicalBlock(scope: !5975, file: !3, line: 2533, column: 12)
!5975 = distinct !DILexicalBlock(scope: !5970, file: !3, line: 2532, column: 27)
!5976 = !DILocation(line: 2533, column: 17, scope: !5974)
!5977 = !DILocation(line: 2533, column: 19, scope: !5974)
!5978 = !DILocation(line: 2533, column: 22, scope: !5974)
!5979 = !DILocation(line: 2533, column: 25, scope: !5974)
!5980 = !DILocation(line: 2533, column: 30, scope: !5974)
!5981 = !DILocation(line: 2533, column: 38, scope: !5974)
!5982 = !DILocation(line: 2533, column: 12, scope: !5975)
!5983 = !DILocation(line: 2534, column: 15, scope: !5984)
!5984 = distinct !DILexicalBlock(scope: !5985, file: !3, line: 2534, column: 13)
!5985 = distinct !DILexicalBlock(scope: !5974, file: !3, line: 2533, column: 42)
!5986 = !DILocation(line: 2534, column: 13, scope: !5984)
!5987 = !DILocation(line: 2534, column: 13, scope: !5985)
!5988 = !DILocation(line: 2535, column: 26, scope: !5984)
!5989 = !DILocation(line: 2535, column: 33, scope: !5984)
!5990 = !DILocation(line: 2535, column: 42, scope: !5984)
!5991 = !DILocation(line: 2535, column: 52, scope: !5984)
!5992 = !DILocation(line: 2535, column: 57, scope: !5984)
!5993 = !DILocation(line: 2535, column: 61, scope: !5984)
!5994 = !DILocation(line: 2535, column: 65, scope: !5984)
!5995 = !DILocation(line: 2535, column: 70, scope: !5984)
!5996 = !DILocation(line: 2535, column: 72, scope: !5984)
!5997 = !DILocation(line: 2535, column: 76, scope: !5984)
!5998 = !DILocation(line: 2535, column: 81, scope: !5984)
!5999 = !DILocation(line: 2535, column: 89, scope: !5984)
!6000 = !DILocation(line: 2535, column: 104, scope: !5984)
!6001 = !DILocation(line: 2535, column: 109, scope: !5984)
!6002 = !DILocation(line: 2535, column: 114, scope: !5984)
!6003 = !DILocation(line: 2535, column: 93, scope: !5984)
!6004 = !DILocation(line: 2535, column: 10, scope: !5984)
!6005 = !DILocation(line: 2537, column: 26, scope: !5984)
!6006 = !DILocation(line: 2537, column: 33, scope: !5984)
!6007 = !DILocation(line: 2537, column: 42, scope: !5984)
!6008 = !DILocation(line: 2537, column: 52, scope: !5984)
!6009 = !DILocation(line: 2537, column: 57, scope: !5984)
!6010 = !DILocation(line: 2537, column: 61, scope: !5984)
!6011 = !DILocation(line: 2537, column: 65, scope: !5984)
!6012 = !DILocation(line: 2537, column: 70, scope: !5984)
!6013 = !DILocation(line: 2537, column: 72, scope: !5984)
!6014 = !DILocation(line: 2537, column: 76, scope: !5984)
!6015 = !DILocation(line: 2537, column: 81, scope: !5984)
!6016 = !DILocation(line: 2537, column: 89, scope: !5984)
!6017 = !DILocation(line: 2537, column: 10, scope: !5984)
!6018 = !DILocation(line: 2538, column: 8, scope: !5985)
!6019 = !DILocation(line: 2539, column: 7, scope: !5975)
!6020 = !DILocation(line: 2532, column: 23, scope: !5970)
!6021 = !DILocation(line: 2532, column: 7, scope: !5970)
!6022 = distinct !{!6022, !5972, !6023}
!6023 = !DILocation(line: 2539, column: 7, scope: !5967)
!6024 = !DILocation(line: 2540, column: 6, scope: !5964)
!6025 = !DILocation(line: 2530, column: 29, scope: !5961)
!6026 = !DILocation(line: 2530, column: 34, scope: !5961)
!6027 = !DILocation(line: 2530, column: 27, scope: !5961)
!6028 = !DILocation(line: 2530, column: 6, scope: !5961)
!6029 = distinct !{!6029, !5962, !6030}
!6030 = !DILocation(line: 2540, column: 6, scope: !5957)
!6031 = !DILocation(line: 2541, column: 5, scope: !5954)
!6032 = !DILocation(line: 2542, column: 4, scope: !5950)
!6033 = !DILocation(line: 2526, column: 51, scope: !5945)
!6034 = !DILocation(line: 2526, column: 57, scope: !5945)
!6035 = !DILocation(line: 2526, column: 66, scope: !5945)
!6036 = !DILocation(line: 2526, column: 4, scope: !5945)
!6037 = distinct !{!6037, !5947, !6038}
!6038 = !DILocation(line: 2542, column: 4, scope: !5935)
!6039 = !DILocation(line: 2543, column: 3, scope: !5915)
!6040 = !DILocation(line: 2544, column: 2, scope: !5903)
!6041 = !DILocation(line: 2547, column: 20, scope: !5522)
!6042 = !DILocation(line: 2547, column: 2, scope: !5522)
!6043 = !DILocation(line: 2550, column: 8, scope: !6044)
!6044 = distinct !DILexicalBlock(scope: !5522, file: !3, line: 2550, column: 2)
!6045 = !DILocation(line: 2550, column: 7, scope: !6044)
!6046 = !DILocation(line: 2550, column: 12, scope: !6047)
!6047 = distinct !DILexicalBlock(scope: !6044, file: !3, line: 2550, column: 2)
!6048 = !DILocation(line: 2550, column: 17, scope: !6047)
!6049 = !DILocation(line: 2550, column: 15, scope: !6047)
!6050 = !DILocation(line: 2550, column: 23, scope: !6047)
!6051 = !DILocation(line: 2550, column: 21, scope: !6047)
!6052 = !DILocation(line: 2550, column: 13, scope: !6047)
!6053 = !DILocation(line: 2550, column: 2, scope: !6044)
!6054 = !DILocation(line: 2551, column: 3, scope: !6047)
!6055 = !DILocation(line: 2551, column: 23, scope: !6047)
!6056 = !DILocation(line: 2551, column: 13, scope: !6047)
!6057 = !DILocation(line: 2550, column: 32, scope: !6047)
!6058 = !DILocation(line: 2550, column: 2, scope: !6047)
!6059 = distinct !{!6059, !6053, !6060}
!6060 = !DILocation(line: 2551, column: 25, scope: !6044)
!6061 = !DILocation(line: 2553, column: 6, scope: !6062)
!6062 = distinct !DILexicalBlock(scope: !5522, file: !3, line: 2553, column: 6)
!6063 = !DILocation(line: 2553, column: 6, scope: !5522)
!6064 = !DILocation(line: 2553, column: 15, scope: !6062)
!6065 = !DILocation(line: 2554, column: 1, scope: !5522)
!6066 = distinct !DISubprogram(name: "isb_make_buffer", scope: !3, file: !3, line: 2205, type: !6067, scopeLine: 2206, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!6067 = !DISubroutineType(types: !6068)
!6068 = !{null, !5426, !2286}
!6069 = !DILocalVariable(name: "pa", arg: 1, scope: !6066, file: !3, line: 2205, type: !5426)
!6070 = !DILocation(line: 2205, column: 41, scope: !6066)
!6071 = !DILocalVariable(name: "lar", arg: 2, scope: !6066, file: !3, line: 2205, type: !2286)
!6072 = !DILocation(line: 2205, column: 54, scope: !6066)
!6073 = !DILocalVariable(name: "shb", scope: !6066, file: !3, line: 2207, type: !2461)
!6074 = !DILocation(line: 2207, column: 11, scope: !6066)
!6075 = !DILocation(line: 2207, column: 16, scope: !6066)
!6076 = !DILocation(line: 2207, column: 21, scope: !6066)
!6077 = !DILocalVariable(name: "isbdata", scope: !6066, file: !3, line: 2208, type: !5286)
!6078 = !DILocation(line: 2208, column: 11, scope: !6066)
!6079 = !DILocalVariable(name: "samp", scope: !6066, file: !3, line: 2209, type: !2214)
!6080 = !DILocation(line: 2209, column: 13, scope: !6066)
!6081 = !DILocalVariable(name: "samplebuf", scope: !6066, file: !3, line: 2209, type: !6082)
!6082 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2214, size: 1024, elements: !1758)
!6083 = !DILocation(line: 2209, column: 20, scope: !6066)
!6084 = !DILocalVariable(name: "root", scope: !6066, file: !3, line: 2210, type: !2225)
!6085 = !DILocation(line: 2210, column: 12, scope: !6066)
!6086 = !DILocalVariable(name: "memarena", scope: !6066, file: !3, line: 2211, type: !5556)
!6087 = !DILocation(line: 2211, column: 12, scope: !6066)
!6088 = !DILocalVariable(name: "rd", scope: !6066, file: !3, line: 2212, type: !3609)
!6089 = !DILocation(line: 2212, column: 12, scope: !6066)
!6090 = !DILocalVariable(name: "recto", scope: !6066, file: !3, line: 2213, type: !26)
!6091 = !DILocation(line: 2213, column: 7, scope: !6066)
!6092 = !DILocalVariable(name: "rectp", scope: !6066, file: !3, line: 2213, type: !26)
!6093 = !DILocation(line: 2213, column: 15, scope: !6066)
!6094 = !DILocalVariable(name: "x", scope: !6066, file: !3, line: 2213, type: !8)
!6095 = !DILocation(line: 2213, column: 22, scope: !6066)
!6096 = !DILocalVariable(name: "y", scope: !6066, file: !3, line: 2213, type: !8)
!6097 = !DILocation(line: 2213, column: 25, scope: !6066)
!6098 = !DILocalVariable(name: "sindex", scope: !6066, file: !3, line: 2213, type: !8)
!6099 = !DILocation(line: 2213, column: 28, scope: !6066)
!6100 = !DILocalVariable(name: "sample", scope: !6066, file: !3, line: 2213, type: !8)
!6101 = !DILocation(line: 2213, column: 36, scope: !6066)
!6102 = !DILocalVariable(name: "bsp_err", scope: !6066, file: !3, line: 2213, type: !8)
!6103 = !DILocation(line: 2213, column: 44, scope: !6066)
!6104 = !DILocation(line: 2216, column: 11, scope: !6066)
!6105 = !DILocation(line: 2216, column: 16, scope: !6066)
!6106 = !DILocation(line: 2216, column: 27, scope: !6066)
!6107 = !DILocation(line: 2216, column: 31, scope: !6066)
!6108 = !DILocation(line: 2216, column: 9, scope: !6066)
!6109 = !DILocation(line: 2219, column: 17, scope: !6066)
!6110 = !DILocation(line: 2219, column: 21, scope: !6066)
!6111 = !DILocation(line: 2219, column: 30, scope: !6066)
!6112 = !DILocation(line: 2219, column: 2, scope: !6066)
!6113 = !DILocation(line: 2219, column: 11, scope: !6066)
!6114 = !DILocation(line: 2219, column: 15, scope: !6066)
!6115 = !DILocation(line: 2220, column: 17, scope: !6066)
!6116 = !DILocation(line: 2220, column: 21, scope: !6066)
!6117 = !DILocation(line: 2220, column: 30, scope: !6066)
!6118 = !DILocation(line: 2220, column: 2, scope: !6066)
!6119 = !DILocation(line: 2220, column: 11, scope: !6066)
!6120 = !DILocation(line: 2220, column: 15, scope: !6066)
!6121 = !DILocation(line: 2221, column: 18, scope: !6066)
!6122 = !DILocation(line: 2221, column: 22, scope: !6066)
!6123 = !DILocation(line: 2221, column: 2, scope: !6066)
!6124 = !DILocation(line: 2221, column: 11, scope: !6066)
!6125 = !DILocation(line: 2221, column: 16, scope: !6066)
!6126 = !DILocation(line: 2222, column: 18, scope: !6066)
!6127 = !DILocation(line: 2222, column: 22, scope: !6066)
!6128 = !DILocation(line: 2222, column: 2, scope: !6066)
!6129 = !DILocation(line: 2222, column: 11, scope: !6066)
!6130 = !DILocation(line: 2222, column: 16, scope: !6066)
!6131 = !DILocation(line: 2225, column: 13, scope: !6066)
!6132 = !DILocation(line: 2225, column: 11, scope: !6066)
!6133 = !DILocation(line: 2226, column: 26, scope: !6066)
!6134 = !DILocation(line: 2226, column: 2, scope: !6066)
!6135 = !DILocation(line: 2229, column: 13, scope: !6136)
!6136 = distinct !DILexicalBlock(scope: !6066, file: !3, line: 2229, column: 2)
!6137 = !DILocation(line: 2229, column: 7, scope: !6136)
!6138 = !DILocation(line: 2229, column: 17, scope: !6139)
!6139 = distinct !DILexicalBlock(scope: !6136, file: !3, line: 2229, column: 2)
!6140 = !DILocation(line: 2229, column: 27, scope: !6139)
!6141 = !DILocation(line: 2229, column: 25, scope: !6139)
!6142 = !DILocation(line: 2229, column: 33, scope: !6139)
!6143 = !DILocation(line: 2229, column: 31, scope: !6139)
!6144 = !DILocation(line: 2229, column: 23, scope: !6139)
!6145 = !DILocation(line: 2229, column: 2, scope: !6136)
!6146 = !DILocation(line: 2230, column: 22, scope: !6139)
!6147 = !DILocation(line: 2230, column: 52, scope: !6139)
!6148 = !DILocation(line: 2230, column: 56, scope: !6139)
!6149 = !DILocation(line: 2230, column: 51, scope: !6139)
!6150 = !DILocation(line: 2230, column: 62, scope: !6139)
!6151 = !DILocation(line: 2230, column: 66, scope: !6139)
!6152 = !DILocation(line: 2230, column: 61, scope: !6139)
!6153 = !DILocation(line: 2230, column: 13, scope: !6139)
!6154 = !DILocation(line: 2230, column: 3, scope: !6139)
!6155 = !DILocation(line: 2230, column: 20, scope: !6139)
!6156 = !DILocation(line: 2229, column: 47, scope: !6139)
!6157 = !DILocation(line: 2229, column: 2, scope: !6139)
!6158 = distinct !{!6158, !6145, !6159}
!6159 = !DILocation(line: 2230, column: 88, scope: !6136)
!6160 = !DILocation(line: 2233, column: 8, scope: !6161)
!6161 = distinct !DILexicalBlock(scope: !6066, file: !3, line: 2233, column: 6)
!6162 = !DILocation(line: 2233, column: 6, scope: !6161)
!6163 = !DILocation(line: 2233, column: 11, scope: !6161)
!6164 = !DILocation(line: 2233, column: 6, scope: !6066)
!6165 = !DILocation(line: 2234, column: 22, scope: !6161)
!6166 = !DILocation(line: 2234, column: 34, scope: !6161)
!6167 = !DILocation(line: 2234, column: 38, scope: !6161)
!6168 = !DILocation(line: 2234, column: 44, scope: !6161)
!6169 = !DILocation(line: 2234, column: 48, scope: !6161)
!6170 = !DILocation(line: 2234, column: 43, scope: !6161)
!6171 = !DILocation(line: 2234, column: 53, scope: !6161)
!6172 = !DILocation(line: 2234, column: 3, scope: !6161)
!6173 = !DILocation(line: 2234, column: 12, scope: !6161)
!6174 = !DILocation(line: 2234, column: 20, scope: !6161)
!6175 = !DILocation(line: 2237, column: 2, scope: !6066)
!6176 = !DILocation(line: 2238, column: 25, scope: !6066)
!6177 = !DILocation(line: 2238, column: 30, scope: !6066)
!6178 = !DILocation(line: 2238, column: 18, scope: !6066)
!6179 = !DILocation(line: 2238, column: 7, scope: !6066)
!6180 = !DILocation(line: 2238, column: 11, scope: !6066)
!6181 = !DILocation(line: 2238, column: 16, scope: !6066)
!6182 = !DILocation(line: 2239, column: 25, scope: !6066)
!6183 = !DILocation(line: 2239, column: 30, scope: !6066)
!6184 = !DILocation(line: 2239, column: 18, scope: !6066)
!6185 = !DILocation(line: 2239, column: 7, scope: !6066)
!6186 = !DILocation(line: 2239, column: 11, scope: !6066)
!6187 = !DILocation(line: 2239, column: 16, scope: !6066)
!6188 = !DILocation(line: 2242, column: 13, scope: !6189)
!6189 = distinct !DILexicalBlock(scope: !6066, file: !3, line: 2242, column: 2)
!6190 = !DILocation(line: 2242, column: 18, scope: !6189)
!6191 = !DILocation(line: 2242, column: 7, scope: !6189)
!6192 = !DILocation(line: 2242, column: 22, scope: !6193)
!6193 = distinct !DILexicalBlock(scope: !6189, file: !3, line: 2242, column: 2)
!6194 = !DILocation(line: 2242, column: 24, scope: !6193)
!6195 = !DILocation(line: 2242, column: 28, scope: !6193)
!6196 = !DILocation(line: 2242, column: 23, scope: !6193)
!6197 = !DILocation(line: 2242, column: 2, scope: !6189)
!6198 = !DILocation(line: 2243, column: 9, scope: !6199)
!6199 = distinct !DILexicalBlock(scope: !6200, file: !3, line: 2243, column: 3)
!6200 = distinct !DILexicalBlock(scope: !6193, file: !3, line: 2242, column: 40)
!6201 = !DILocation(line: 2243, column: 8, scope: !6199)
!6202 = !DILocation(line: 2243, column: 13, scope: !6203)
!6203 = distinct !DILexicalBlock(scope: !6199, file: !3, line: 2243, column: 3)
!6204 = !DILocation(line: 2243, column: 15, scope: !6203)
!6205 = !DILocation(line: 2243, column: 19, scope: !6203)
!6206 = !DILocation(line: 2243, column: 14, scope: !6203)
!6207 = !DILocation(line: 2243, column: 3, scope: !6199)
!6208 = !DILocation(line: 2247, column: 10, scope: !6209)
!6209 = distinct !DILexicalBlock(scope: !6210, file: !3, line: 2247, column: 8)
!6210 = distinct !DILexicalBlock(scope: !6203, file: !3, line: 2243, column: 41)
!6211 = !DILocation(line: 2247, column: 8, scope: !6209)
!6212 = !DILocation(line: 2247, column: 8, scope: !6210)
!6213 = !DILocation(line: 2248, column: 9, scope: !6214)
!6214 = distinct !DILexicalBlock(scope: !6209, file: !3, line: 2247, column: 15)
!6215 = !DILocation(line: 2248, column: 13, scope: !6214)
!6216 = !DILocation(line: 2248, column: 24, scope: !6214)
!6217 = !DILocation(line: 2248, column: 22, scope: !6214)
!6218 = !DILocation(line: 2248, column: 7, scope: !6214)
!6219 = !DILocation(line: 2249, column: 10, scope: !6220)
!6220 = distinct !DILexicalBlock(scope: !6214, file: !3, line: 2249, column: 9)
!6221 = !DILocation(line: 2249, column: 9, scope: !6220)
!6222 = !DILocation(line: 2249, column: 9, scope: !6214)
!6223 = !DILocalVariable(name: "xs", scope: !6224, file: !3, line: 2250, type: !7)
!6224 = distinct !DILexicalBlock(scope: !6220, file: !3, line: 2249, column: 14)
!6225 = !DILocation(line: 2250, column: 12, scope: !6224)
!6226 = !DILocation(line: 2250, column: 24, scope: !6224)
!6227 = !DILocation(line: 2250, column: 28, scope: !6224)
!6228 = !DILocation(line: 2250, column: 32, scope: !6224)
!6229 = !DILocation(line: 2250, column: 41, scope: !6224)
!6230 = !DILocation(line: 2250, column: 26, scope: !6224)
!6231 = !DILocation(line: 2250, column: 16, scope: !6224)
!6232 = !DILocalVariable(name: "ys", scope: !6224, file: !3, line: 2251, type: !7)
!6233 = !DILocation(line: 2251, column: 12, scope: !6224)
!6234 = !DILocation(line: 2251, column: 24, scope: !6224)
!6235 = !DILocation(line: 2251, column: 28, scope: !6224)
!6236 = !DILocation(line: 2251, column: 32, scope: !6224)
!6237 = !DILocation(line: 2251, column: 41, scope: !6224)
!6238 = !DILocation(line: 2251, column: 26, scope: !6224)
!6239 = !DILocation(line: 2251, column: 16, scope: !6224)
!6240 = !DILocation(line: 2253, column: 17, scope: !6241)
!6241 = distinct !DILexicalBlock(scope: !6224, file: !3, line: 2253, column: 6)
!6242 = !DILocation(line: 2253, column: 11, scope: !6241)
!6243 = !DILocation(line: 2253, column: 21, scope: !6244)
!6244 = distinct !DILexicalBlock(scope: !6241, file: !3, line: 2253, column: 6)
!6245 = !DILocation(line: 2253, column: 30, scope: !6244)
!6246 = !DILocation(line: 2253, column: 28, scope: !6244)
!6247 = !DILocation(line: 2253, column: 27, scope: !6244)
!6248 = !DILocation(line: 2253, column: 6, scope: !6241)
!6249 = !DILocalVariable(name: "ps", scope: !6250, file: !3, line: 2254, type: !2248)
!6250 = distinct !DILexicalBlock(scope: !6244, file: !3, line: 2253, column: 45)
!6251 = !DILocation(line: 2254, column: 15, scope: !6250)
!6252 = !DILocation(line: 2254, column: 31, scope: !6250)
!6253 = !DILocation(line: 2254, column: 30, scope: !6250)
!6254 = !DILocation(line: 2254, column: 19, scope: !6250)
!6255 = !DILocalVariable(name: "mask", scope: !6250, file: !3, line: 2255, type: !8)
!6256 = !DILocation(line: 2255, column: 11, scope: !6250)
!6257 = !DILocation(line: 2255, column: 21, scope: !6250)
!6258 = !DILocation(line: 2255, column: 19, scope: !6250)
!6259 = !DILocation(line: 2257, column: 7, scope: !6250)
!6260 = !DILocation(line: 2257, column: 14, scope: !6250)
!6261 = !DILocation(line: 2258, column: 12, scope: !6262)
!6262 = distinct !DILexicalBlock(scope: !6263, file: !3, line: 2258, column: 12)
!6263 = distinct !DILexicalBlock(scope: !6250, file: !3, line: 2257, column: 18)
!6264 = !DILocation(line: 2258, column: 16, scope: !6262)
!6265 = !DILocation(line: 2258, column: 23, scope: !6262)
!6266 = !DILocation(line: 2258, column: 21, scope: !6262)
!6267 = !DILocation(line: 2258, column: 12, scope: !6263)
!6268 = !DILocation(line: 2259, column: 9, scope: !6262)
!6269 = !DILocation(line: 2260, column: 12, scope: !6263)
!6270 = !DILocation(line: 2260, column: 16, scope: !6263)
!6271 = !DILocation(line: 2260, column: 10, scope: !6263)
!6272 = distinct !{!6272, !6259, !6273}
!6273 = !DILocation(line: 2261, column: 7, scope: !6250)
!6274 = !DILocation(line: 2262, column: 11, scope: !6275)
!6275 = distinct !DILexicalBlock(scope: !6250, file: !3, line: 2262, column: 11)
!6276 = !DILocation(line: 2262, column: 14, scope: !6275)
!6277 = !DILocation(line: 2262, column: 17, scope: !6275)
!6278 = !DILocation(line: 2262, column: 21, scope: !6275)
!6279 = !DILocation(line: 2262, column: 27, scope: !6275)
!6280 = !DILocation(line: 2262, column: 11, scope: !6250)
!6281 = !DILocalVariable(name: "obi", scope: !6282, file: !3, line: 2263, type: !2609)
!6282 = distinct !DILexicalBlock(scope: !6275, file: !3, line: 2262, column: 31)
!6283 = !DILocation(line: 2263, column: 27, scope: !6282)
!6284 = !DILocation(line: 2263, column: 35, scope: !6282)
!6285 = !DILocation(line: 2263, column: 50, scope: !6282)
!6286 = !DILocation(line: 2263, column: 54, scope: !6282)
!6287 = !DILocation(line: 2263, column: 33, scope: !6282)
!6288 = !DILocalVariable(name: "obr", scope: !6282, file: !3, line: 2264, type: !1917)
!6289 = !DILocation(line: 2264, column: 19, scope: !6282)
!6290 = !DILocation(line: 2264, column: 24, scope: !6282)
!6291 = !DILocation(line: 2264, column: 29, scope: !6282)
!6292 = !DILocalVariable(name: "vlr", scope: !6282, file: !3, line: 2265, type: !2615)
!6293 = !DILocation(line: 2265, column: 17, scope: !6282)
!6294 = !DILocation(line: 2265, column: 39, scope: !6282)
!6295 = !DILocation(line: 2265, column: 45, scope: !6282)
!6296 = !DILocation(line: 2265, column: 49, scope: !6282)
!6297 = !DILocation(line: 2265, column: 55, scope: !6282)
!6298 = !DILocation(line: 2265, column: 59, scope: !6282)
!6299 = !DILocation(line: 2265, column: 22, scope: !6282)
!6300 = !DILocation(line: 2267, column: 24, scope: !6282)
!6301 = !DILocation(line: 2267, column: 14, scope: !6282)
!6302 = !DILocation(line: 2267, column: 34, scope: !6282)
!6303 = !DILocation(line: 2267, column: 32, scope: !6282)
!6304 = !DILocation(line: 2267, column: 12, scope: !6282)
!6305 = !DILocation(line: 2269, column: 33, scope: !6306)
!6306 = distinct !DILexicalBlock(scope: !6282, file: !3, line: 2269, column: 12)
!6307 = !DILocation(line: 2269, column: 38, scope: !6306)
!6308 = !DILocation(line: 2269, column: 43, scope: !6306)
!6309 = !DILocation(line: 2269, column: 48, scope: !6306)
!6310 = !DILocation(line: 2269, column: 59, scope: !6306)
!6311 = !DILocation(line: 2269, column: 53, scope: !6306)
!6312 = !DILocation(line: 2269, column: 51, scope: !6306)
!6313 = !DILocation(line: 2269, column: 71, scope: !6306)
!6314 = !DILocation(line: 2269, column: 82, scope: !6306)
!6315 = !DILocation(line: 2269, column: 76, scope: !6306)
!6316 = !DILocation(line: 2269, column: 74, scope: !6306)
!6317 = !DILocation(line: 2269, column: 94, scope: !6306)
!6318 = !DILocation(line: 2269, column: 100, scope: !6306)
!6319 = !DILocation(line: 2269, column: 12, scope: !6306)
!6320 = !DILocation(line: 2269, column: 12, scope: !6282)
!6321 = !DILocation(line: 2270, column: 20, scope: !6322)
!6322 = distinct !DILexicalBlock(scope: !6306, file: !3, line: 2269, column: 106)
!6323 = !DILocation(line: 2270, column: 24, scope: !6322)
!6324 = !DILocation(line: 2270, column: 9, scope: !6322)
!6325 = !DILocation(line: 2270, column: 15, scope: !6322)
!6326 = !DILocation(line: 2270, column: 18, scope: !6322)
!6327 = !DILocation(line: 2271, column: 23, scope: !6322)
!6328 = !DILocation(line: 2271, column: 27, scope: !6322)
!6329 = !DILocation(line: 2271, column: 34, scope: !6322)
!6330 = !DILocation(line: 2271, column: 9, scope: !6322)
!6331 = !DILocation(line: 2271, column: 15, scope: !6322)
!6332 = !DILocation(line: 2271, column: 21, scope: !6322)
!6333 = !DILocation(line: 2272, column: 9, scope: !6322)
!6334 = !DILocation(line: 2272, column: 13, scope: !6322)
!6335 = !DILocation(line: 2272, column: 20, scope: !6322)
!6336 = !DILocation(line: 2273, column: 25, scope: !6322)
!6337 = !DILocation(line: 2273, column: 29, scope: !6322)
!6338 = !DILocation(line: 2273, column: 9, scope: !6322)
!6339 = !DILocation(line: 2273, column: 15, scope: !6322)
!6340 = !DILocation(line: 2273, column: 22, scope: !6322)
!6341 = !DILocation(line: 2274, column: 35, scope: !6322)
!6342 = !DILocation(line: 2274, column: 21, scope: !6322)
!6343 = !DILocation(line: 2274, column: 40, scope: !6322)
!6344 = !DILocation(line: 2274, column: 46, scope: !6322)
!6345 = !DILocation(line: 2274, column: 9, scope: !6322)
!6346 = !DILocation(line: 2275, column: 8, scope: !6322)
!6347 = !DILocation(line: 2276, column: 7, scope: !6282)
!6348 = !DILocation(line: 2277, column: 6, scope: !6250)
!6349 = !DILocation(line: 2253, column: 41, scope: !6244)
!6350 = !DILocation(line: 2253, column: 6, scope: !6244)
!6351 = distinct !{!6351, !6248, !6352}
!6352 = !DILocation(line: 2277, column: 6, scope: !6241)
!6353 = !DILocation(line: 2278, column: 5, scope: !6224)
!6354 = !DILocation(line: 2279, column: 4, scope: !6214)
!6355 = !DILocation(line: 2281, column: 12, scope: !6356)
!6356 = distinct !DILexicalBlock(scope: !6209, file: !3, line: 2280, column: 9)
!6357 = !DILocation(line: 2281, column: 16, scope: !6356)
!6358 = !DILocation(line: 2281, column: 24, scope: !6356)
!6359 = !DILocation(line: 2281, column: 22, scope: !6356)
!6360 = !DILocation(line: 2281, column: 10, scope: !6356)
!6361 = !DILocation(line: 2282, column: 12, scope: !6356)
!6362 = !DILocation(line: 2282, column: 16, scope: !6356)
!6363 = !DILocation(line: 2282, column: 24, scope: !6356)
!6364 = !DILocation(line: 2282, column: 22, scope: !6356)
!6365 = !DILocation(line: 2282, column: 10, scope: !6356)
!6366 = !DILocation(line: 2283, column: 10, scope: !6367)
!6367 = distinct !DILexicalBlock(scope: !6356, file: !3, line: 2283, column: 9)
!6368 = !DILocation(line: 2283, column: 9, scope: !6367)
!6369 = !DILocation(line: 2283, column: 15, scope: !6367)
!6370 = !DILocation(line: 2283, column: 9, scope: !6356)
!6371 = !DILocalVariable(name: "obi", scope: !6372, file: !3, line: 2284, type: !2609)
!6372 = distinct !DILexicalBlock(scope: !6367, file: !3, line: 2283, column: 19)
!6373 = !DILocation(line: 2284, column: 25, scope: !6372)
!6374 = !DILocation(line: 2284, column: 33, scope: !6372)
!6375 = !DILocation(line: 2284, column: 49, scope: !6372)
!6376 = !DILocation(line: 2284, column: 48, scope: !6372)
!6377 = !DILocation(line: 2284, column: 31, scope: !6372)
!6378 = !DILocalVariable(name: "obr", scope: !6372, file: !3, line: 2285, type: !1917)
!6379 = !DILocation(line: 2285, column: 17, scope: !6372)
!6380 = !DILocation(line: 2285, column: 22, scope: !6372)
!6381 = !DILocation(line: 2285, column: 27, scope: !6372)
!6382 = !DILocalVariable(name: "vlr", scope: !6372, file: !3, line: 2286, type: !2615)
!6383 = !DILocation(line: 2286, column: 15, scope: !6372)
!6384 = !DILocation(line: 2286, column: 37, scope: !6372)
!6385 = !DILocation(line: 2286, column: 44, scope: !6372)
!6386 = !DILocation(line: 2286, column: 43, scope: !6372)
!6387 = !DILocation(line: 2286, column: 49, scope: !6372)
!6388 = !DILocation(line: 2286, column: 53, scope: !6372)
!6389 = !DILocation(line: 2286, column: 20, scope: !6372)
!6390 = !DILocalVariable(name: "xs", scope: !6372, file: !3, line: 2287, type: !7)
!6391 = !DILocation(line: 2287, column: 12, scope: !6372)
!6392 = !DILocation(line: 2287, column: 24, scope: !6372)
!6393 = !DILocation(line: 2287, column: 28, scope: !6372)
!6394 = !DILocation(line: 2287, column: 32, scope: !6372)
!6395 = !DILocation(line: 2287, column: 41, scope: !6372)
!6396 = !DILocation(line: 2287, column: 26, scope: !6372)
!6397 = !DILocation(line: 2287, column: 16, scope: !6372)
!6398 = !DILocalVariable(name: "ys", scope: !6372, file: !3, line: 2288, type: !7)
!6399 = !DILocation(line: 2288, column: 12, scope: !6372)
!6400 = !DILocation(line: 2288, column: 24, scope: !6372)
!6401 = !DILocation(line: 2288, column: 28, scope: !6372)
!6402 = !DILocation(line: 2288, column: 32, scope: !6372)
!6403 = !DILocation(line: 2288, column: 41, scope: !6372)
!6404 = !DILocation(line: 2288, column: 26, scope: !6372)
!6405 = !DILocation(line: 2288, column: 16, scope: !6372)
!6406 = !DILocation(line: 2290, column: 12, scope: !6372)
!6407 = !DILocation(line: 2290, column: 27, scope: !6372)
!6408 = !DILocation(line: 2290, column: 25, scope: !6372)
!6409 = !DILocation(line: 2290, column: 10, scope: !6372)
!6410 = !DILocation(line: 2292, column: 31, scope: !6411)
!6411 = distinct !DILexicalBlock(scope: !6372, file: !3, line: 2292, column: 10)
!6412 = !DILocation(line: 2292, column: 36, scope: !6411)
!6413 = !DILocation(line: 2292, column: 41, scope: !6411)
!6414 = !DILocation(line: 2292, column: 46, scope: !6411)
!6415 = !DILocation(line: 2292, column: 50, scope: !6411)
!6416 = !DILocation(line: 2292, column: 54, scope: !6411)
!6417 = !DILocation(line: 2292, column: 60, scope: !6411)
!6418 = !DILocation(line: 2292, column: 10, scope: !6411)
!6419 = !DILocation(line: 2292, column: 10, scope: !6372)
!6420 = !DILocation(line: 2293, column: 19, scope: !6421)
!6421 = distinct !DILexicalBlock(scope: !6411, file: !3, line: 2292, column: 66)
!6422 = !DILocation(line: 2293, column: 18, scope: !6421)
!6423 = !DILocation(line: 2293, column: 7, scope: !6421)
!6424 = !DILocation(line: 2293, column: 13, scope: !6421)
!6425 = !DILocation(line: 2293, column: 16, scope: !6421)
!6426 = !DILocation(line: 2294, column: 22, scope: !6421)
!6427 = !DILocation(line: 2294, column: 21, scope: !6421)
!6428 = !DILocation(line: 2294, column: 28, scope: !6421)
!6429 = !DILocation(line: 2294, column: 7, scope: !6421)
!6430 = !DILocation(line: 2294, column: 13, scope: !6421)
!6431 = !DILocation(line: 2294, column: 19, scope: !6421)
!6432 = !DILocation(line: 2295, column: 22, scope: !6421)
!6433 = !DILocation(line: 2295, column: 31, scope: !6421)
!6434 = !DILocation(line: 2295, column: 42, scope: !6421)
!6435 = !DILocation(line: 2295, column: 40, scope: !6421)
!6436 = !DILocation(line: 2295, column: 7, scope: !6421)
!6437 = !DILocation(line: 2295, column: 13, scope: !6421)
!6438 = !DILocation(line: 2295, column: 20, scope: !6421)
!6439 = !DILocation(line: 2296, column: 33, scope: !6421)
!6440 = !DILocation(line: 2296, column: 19, scope: !6421)
!6441 = !DILocation(line: 2296, column: 38, scope: !6421)
!6442 = !DILocation(line: 2296, column: 44, scope: !6421)
!6443 = !DILocation(line: 2296, column: 7, scope: !6421)
!6444 = !DILocation(line: 2297, column: 6, scope: !6421)
!6445 = !DILocation(line: 2298, column: 5, scope: !6372)
!6446 = !DILocation(line: 2300, column: 3, scope: !6210)
!6447 = !DILocation(line: 2243, column: 27, scope: !6203)
!6448 = !DILocation(line: 2243, column: 37, scope: !6203)
!6449 = !DILocation(line: 2243, column: 3, scope: !6203)
!6450 = distinct !{!6450, !6207, !6451}
!6451 = !DILocation(line: 2300, column: 3, scope: !6199)
!6452 = !DILocation(line: 2301, column: 2, scope: !6200)
!6453 = !DILocation(line: 2242, column: 36, scope: !6193)
!6454 = !DILocation(line: 2242, column: 2, scope: !6193)
!6455 = distinct !{!6455, !6197, !6456}
!6456 = !DILocation(line: 2301, column: 2, scope: !6189)
!6457 = !DILocation(line: 2304, column: 11, scope: !6458)
!6458 = distinct !DILexicalBlock(scope: !6066, file: !3, line: 2304, column: 6)
!6459 = !DILocation(line: 2304, column: 15, scope: !6458)
!6460 = !DILocation(line: 2304, column: 30, scope: !6458)
!6461 = !DILocation(line: 2304, column: 35, scope: !6458)
!6462 = !DILocation(line: 2304, column: 23, scope: !6458)
!6463 = !DILocation(line: 2304, column: 20, scope: !6458)
!6464 = !DILocation(line: 2304, column: 6, scope: !6066)
!6465 = !DILocation(line: 2307, column: 29, scope: !6466)
!6466 = distinct !DILexicalBlock(scope: !6458, file: !3, line: 2304, column: 41)
!6467 = !DILocation(line: 2307, column: 3, scope: !6466)
!6468 = !DILocation(line: 2310, column: 28, scope: !6466)
!6469 = !DILocation(line: 2310, column: 39, scope: !6466)
!6470 = !DILocation(line: 2310, column: 49, scope: !6466)
!6471 = !DILocation(line: 2310, column: 12, scope: !6466)
!6472 = !DILocation(line: 2310, column: 10, scope: !6466)
!6473 = !DILocation(line: 2312, column: 7, scope: !6474)
!6474 = distinct !DILexicalBlock(scope: !6466, file: !3, line: 2312, column: 7)
!6475 = !DILocation(line: 2312, column: 14, scope: !6474)
!6476 = !DILocation(line: 2312, column: 7, scope: !6466)
!6477 = !DILocation(line: 2315, column: 26, scope: !6478)
!6478 = distinct !DILexicalBlock(scope: !6474, file: !3, line: 2312, column: 19)
!6479 = !DILocation(line: 2315, column: 4, scope: !6478)
!6480 = !DILocation(line: 2318, column: 10, scope: !6481)
!6481 = distinct !DILexicalBlock(scope: !6478, file: !3, line: 2318, column: 8)
!6482 = !DILocation(line: 2318, column: 8, scope: !6481)
!6483 = !DILocation(line: 2318, column: 8, scope: !6478)
!6484 = !DILocalVariable(name: "isbsa", scope: !6485, file: !3, line: 2319, type: !2415)
!6485 = distinct !DILexicalBlock(scope: !6481, file: !3, line: 2318, column: 15)
!6486 = !DILocation(line: 2319, column: 19, scope: !6485)
!6487 = !DILocation(line: 2319, column: 45, scope: !6485)
!6488 = !DILocation(line: 2319, column: 57, scope: !6485)
!6489 = !DILocation(line: 2319, column: 61, scope: !6485)
!6490 = !DILocation(line: 2319, column: 67, scope: !6485)
!6491 = !DILocation(line: 2319, column: 71, scope: !6485)
!6492 = !DILocation(line: 2319, column: 66, scope: !6485)
!6493 = !DILocation(line: 2319, column: 76, scope: !6485)
!6494 = !DILocation(line: 2319, column: 26, scope: !6485)
!6495 = !DILocation(line: 2319, column: 35, scope: !6485)
!6496 = !DILocation(line: 2319, column: 43, scope: !6485)
!6497 = !DILocation(line: 2321, column: 25, scope: !6485)
!6498 = !DILocation(line: 2321, column: 5, scope: !6485)
!6499 = !DILocation(line: 2321, column: 14, scope: !6485)
!6500 = !DILocation(line: 2321, column: 23, scope: !6485)
!6501 = !DILocation(line: 2322, column: 29, scope: !6485)
!6502 = !DILocation(line: 2322, column: 38, scope: !6485)
!6503 = !DILocation(line: 2322, column: 5, scope: !6485)
!6504 = !DILocation(line: 2324, column: 14, scope: !6505)
!6505 = distinct !DILexicalBlock(scope: !6485, file: !3, line: 2324, column: 5)
!6506 = !DILocation(line: 2324, column: 18, scope: !6505)
!6507 = !DILocation(line: 2324, column: 12, scope: !6505)
!6508 = !DILocation(line: 2324, column: 30, scope: !6505)
!6509 = !DILocation(line: 2324, column: 34, scope: !6505)
!6510 = !DILocation(line: 2324, column: 40, scope: !6505)
!6511 = !DILocation(line: 2324, column: 44, scope: !6505)
!6512 = !DILocation(line: 2324, column: 39, scope: !6505)
!6513 = !DILocation(line: 2324, column: 29, scope: !6505)
!6514 = !DILocation(line: 2324, column: 10, scope: !6505)
!6515 = !DILocation(line: 2324, column: 51, scope: !6516)
!6516 = distinct !DILexicalBlock(scope: !6505, file: !3, line: 2324, column: 5)
!6517 = !DILocation(line: 2324, column: 52, scope: !6516)
!6518 = !DILocation(line: 2324, column: 5, scope: !6505)
!6519 = !DILocation(line: 2326, column: 11, scope: !6520)
!6520 = distinct !DILexicalBlock(scope: !6521, file: !3, line: 2326, column: 10)
!6521 = distinct !DILexicalBlock(scope: !6516, file: !3, line: 2324, column: 76)
!6522 = !DILocation(line: 2326, column: 10, scope: !6520)
!6523 = !DILocation(line: 2326, column: 10, scope: !6521)
!6524 = !DILocalVariable(name: "ps", scope: !6525, file: !3, line: 2327, type: !2248)
!6525 = distinct !DILexicalBlock(scope: !6520, file: !3, line: 2326, column: 15)
!6526 = !DILocation(line: 2327, column: 15, scope: !6525)
!6527 = !DILocation(line: 2327, column: 31, scope: !6525)
!6528 = !DILocation(line: 2327, column: 30, scope: !6525)
!6529 = !DILocation(line: 2327, column: 19, scope: !6525)
!6530 = !DILocation(line: 2328, column: 7, scope: !6525)
!6531 = !DILocation(line: 2328, column: 14, scope: !6525)
!6532 = !DILocation(line: 2329, column: 12, scope: !6533)
!6533 = distinct !DILexicalBlock(scope: !6534, file: !3, line: 2329, column: 12)
!6534 = distinct !DILexicalBlock(scope: !6525, file: !3, line: 2328, column: 18)
!6535 = !DILocation(line: 2329, column: 16, scope: !6533)
!6536 = !DILocation(line: 2329, column: 12, scope: !6534)
!6537 = !DILocation(line: 2330, column: 25, scope: !6533)
!6538 = !DILocation(line: 2330, column: 32, scope: !6533)
!6539 = !DILocation(line: 2330, column: 41, scope: !6533)
!6540 = !DILocation(line: 2330, column: 51, scope: !6533)
!6541 = !DILocation(line: 2330, column: 55, scope: !6533)
!6542 = !DILocation(line: 2330, column: 60, scope: !6533)
!6543 = !DILocation(line: 2330, column: 64, scope: !6533)
!6544 = !DILocation(line: 2330, column: 72, scope: !6533)
!6545 = !DILocation(line: 2330, column: 76, scope: !6533)
!6546 = !DILocation(line: 2330, column: 96, scope: !6533)
!6547 = !DILocation(line: 2330, column: 100, scope: !6533)
!6548 = !DILocation(line: 2330, column: 85, scope: !6533)
!6549 = !DILocation(line: 2330, column: 9, scope: !6533)
!6550 = !DILocation(line: 2331, column: 12, scope: !6534)
!6551 = !DILocation(line: 2331, column: 16, scope: !6534)
!6552 = !DILocation(line: 2331, column: 10, scope: !6534)
!6553 = distinct !{!6553, !6530, !6554}
!6554 = !DILocation(line: 2332, column: 7, scope: !6525)
!6555 = !DILocation(line: 2333, column: 6, scope: !6525)
!6556 = !DILocation(line: 2334, column: 5, scope: !6521)
!6557 = !DILocation(line: 2324, column: 57, scope: !6516)
!6558 = !DILocation(line: 2324, column: 63, scope: !6516)
!6559 = !DILocation(line: 2324, column: 72, scope: !6516)
!6560 = !DILocation(line: 2324, column: 5, scope: !6516)
!6561 = distinct !{!6561, !6518, !6562}
!6562 = !DILocation(line: 2334, column: 5, scope: !6505)
!6563 = !DILocation(line: 2335, column: 4, scope: !6485)
!6564 = !DILocation(line: 2336, column: 3, scope: !6478)
!6565 = !DILocation(line: 2337, column: 2, scope: !6466)
!6566 = !DILocation(line: 2339, column: 7, scope: !6567)
!6567 = distinct !DILexicalBlock(scope: !6568, file: !3, line: 2339, column: 7)
!6568 = distinct !DILexicalBlock(scope: !6458, file: !3, line: 2338, column: 7)
!6569 = !DILocation(line: 2339, column: 16, scope: !6567)
!6570 = !DILocation(line: 2339, column: 7, scope: !6568)
!6571 = !DILocation(line: 2340, column: 4, scope: !6572)
!6572 = distinct !DILexicalBlock(scope: !6567, file: !3, line: 2339, column: 26)
!6573 = !DILocation(line: 2340, column: 14, scope: !6572)
!6574 = !DILocation(line: 2340, column: 23, scope: !6572)
!6575 = !DILocation(line: 2341, column: 4, scope: !6572)
!6576 = !DILocation(line: 2341, column: 13, scope: !6572)
!6577 = !DILocation(line: 2341, column: 21, scope: !6572)
!6578 = !DILocation(line: 2342, column: 3, scope: !6572)
!6579 = !DILocation(line: 2346, column: 20, scope: !6066)
!6580 = !DILocation(line: 2346, column: 2, scope: !6066)
!6581 = !DILocation(line: 2349, column: 8, scope: !6582)
!6582 = distinct !DILexicalBlock(scope: !6066, file: !3, line: 2349, column: 2)
!6583 = !DILocation(line: 2349, column: 7, scope: !6582)
!6584 = !DILocation(line: 2349, column: 12, scope: !6585)
!6585 = distinct !DILexicalBlock(scope: !6582, file: !3, line: 2349, column: 2)
!6586 = !DILocation(line: 2349, column: 17, scope: !6585)
!6587 = !DILocation(line: 2349, column: 15, scope: !6585)
!6588 = !DILocation(line: 2349, column: 23, scope: !6585)
!6589 = !DILocation(line: 2349, column: 21, scope: !6585)
!6590 = !DILocation(line: 2349, column: 13, scope: !6585)
!6591 = !DILocation(line: 2349, column: 2, scope: !6582)
!6592 = !DILocation(line: 2350, column: 3, scope: !6585)
!6593 = !DILocation(line: 2350, column: 23, scope: !6585)
!6594 = !DILocation(line: 2350, column: 13, scope: !6585)
!6595 = !DILocation(line: 2349, column: 32, scope: !6585)
!6596 = !DILocation(line: 2349, column: 2, scope: !6585)
!6597 = distinct !{!6597, !6591, !6598}
!6598 = !DILocation(line: 2350, column: 25, scope: !6582)
!6599 = !DILocation(line: 2352, column: 6, scope: !6600)
!6600 = distinct !DILexicalBlock(scope: !6066, file: !3, line: 2352, column: 6)
!6601 = !DILocation(line: 2352, column: 6, scope: !6066)
!6602 = !DILocation(line: 2352, column: 15, scope: !6600)
!6603 = !DILocation(line: 2353, column: 1, scope: !6066)
!6604 = distinct !DISubprogram(name: "ISB_free", scope: !3, file: !3, line: 2623, type: !6605, scopeLine: 2624, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !4)
!6605 = !DISubroutineType(types: !6606)
!6606 = !{null, !5426}
!6607 = !DILocalVariable(name: "pa", arg: 1, scope: !6604, file: !3, line: 2623, type: !5426)
!6608 = !DILocation(line: 2623, column: 27, scope: !6604)
!6609 = !DILocalVariable(name: "go", scope: !6604, file: !3, line: 2625, type: !5458)
!6610 = !DILocation(line: 2625, column: 15, scope: !6604)
!6611 = !DILocation(line: 2628, column: 19, scope: !6612)
!6612 = distinct !DILexicalBlock(scope: !6604, file: !3, line: 2628, column: 2)
!6613 = !DILocation(line: 2628, column: 10, scope: !6612)
!6614 = !DILocation(line: 2628, column: 9, scope: !6612)
!6615 = !DILocation(line: 2628, column: 7, scope: !6612)
!6616 = !DILocation(line: 2628, column: 26, scope: !6617)
!6617 = distinct !DILexicalBlock(scope: !6612, file: !3, line: 2628, column: 2)
!6618 = !DILocation(line: 2628, column: 2, scope: !6612)
!6619 = !DILocalVariable(name: "lar", scope: !6620, file: !3, line: 2629, type: !2286)
!6620 = distinct !DILexicalBlock(scope: !6617, file: !3, line: 2628, column: 44)
!6621 = !DILocation(line: 2629, column: 12, scope: !6620)
!6622 = !DILocation(line: 2629, column: 17, scope: !6620)
!6623 = !DILocation(line: 2629, column: 21, scope: !6620)
!6624 = !DILocation(line: 2631, column: 7, scope: !6625)
!6625 = distinct !DILexicalBlock(scope: !6620, file: !3, line: 2631, column: 7)
!6626 = !DILocation(line: 2631, column: 12, scope: !6625)
!6627 = !DILocation(line: 2631, column: 16, scope: !6625)
!6628 = !DILocation(line: 2631, column: 26, scope: !6625)
!6629 = !DILocation(line: 2631, column: 29, scope: !6625)
!6630 = !DILocation(line: 2631, column: 34, scope: !6625)
!6631 = !DILocation(line: 2631, column: 38, scope: !6625)
!6632 = !DILocation(line: 2631, column: 41, scope: !6625)
!6633 = !DILocation(line: 2631, column: 46, scope: !6625)
!6634 = !DILocation(line: 2631, column: 53, scope: !6625)
!6635 = !DILocation(line: 2631, column: 7, scope: !6620)
!6636 = !DILocalVariable(name: "isbdata", scope: !6637, file: !3, line: 2632, type: !5286)
!6637 = distinct !DILexicalBlock(scope: !6625, file: !3, line: 2631, column: 77)
!6638 = !DILocation(line: 2632, column: 13, scope: !6637)
!6639 = !DILocation(line: 2632, column: 22, scope: !6637)
!6640 = !DILocation(line: 2632, column: 27, scope: !6637)
!6641 = !DILocation(line: 2632, column: 32, scope: !6637)
!6642 = !DILocation(line: 2632, column: 43, scope: !6637)
!6643 = !DILocation(line: 2632, column: 47, scope: !6637)
!6644 = !DILocation(line: 2634, column: 8, scope: !6645)
!6645 = distinct !DILexicalBlock(scope: !6637, file: !3, line: 2634, column: 8)
!6646 = !DILocation(line: 2634, column: 8, scope: !6637)
!6647 = !DILocation(line: 2635, column: 9, scope: !6648)
!6648 = distinct !DILexicalBlock(scope: !6649, file: !3, line: 2635, column: 9)
!6649 = distinct !DILexicalBlock(scope: !6645, file: !3, line: 2634, column: 17)
!6650 = !DILocation(line: 2635, column: 18, scope: !6648)
!6651 = !DILocation(line: 2635, column: 9, scope: !6649)
!6652 = !DILocation(line: 2636, column: 6, scope: !6648)
!6653 = !DILocation(line: 2636, column: 16, scope: !6648)
!6654 = !DILocation(line: 2636, column: 25, scope: !6648)
!6655 = !DILocation(line: 2637, column: 9, scope: !6656)
!6656 = distinct !DILexicalBlock(scope: !6649, file: !3, line: 2637, column: 9)
!6657 = !DILocation(line: 2637, column: 18, scope: !6656)
!6658 = !DILocation(line: 2637, column: 9, scope: !6649)
!6659 = !DILocation(line: 2638, column: 6, scope: !6656)
!6660 = !DILocation(line: 2638, column: 16, scope: !6656)
!6661 = !DILocation(line: 2638, column: 25, scope: !6656)
!6662 = !DILocation(line: 2640, column: 9, scope: !6663)
!6663 = distinct !DILexicalBlock(scope: !6649, file: !3, line: 2640, column: 9)
!6664 = !DILocation(line: 2640, column: 18, scope: !6663)
!6665 = !DILocation(line: 2640, column: 9, scope: !6649)
!6666 = !DILocation(line: 2641, column: 24, scope: !6663)
!6667 = !DILocation(line: 2641, column: 33, scope: !6663)
!6668 = !DILocation(line: 2641, column: 6, scope: !6663)
!6669 = !DILocation(line: 2643, column: 5, scope: !6649)
!6670 = !DILocation(line: 2643, column: 15, scope: !6649)
!6671 = !DILocation(line: 2644, column: 5, scope: !6649)
!6672 = !DILocation(line: 2644, column: 10, scope: !6649)
!6673 = !DILocation(line: 2644, column: 15, scope: !6649)
!6674 = !DILocation(line: 2644, column: 26, scope: !6649)
!6675 = !DILocation(line: 2644, column: 30, scope: !6649)
!6676 = !DILocation(line: 2644, column: 37, scope: !6649)
!6677 = !DILocation(line: 2645, column: 4, scope: !6649)
!6678 = !DILocation(line: 2646, column: 3, scope: !6637)
!6679 = !DILocation(line: 2647, column: 2, scope: !6620)
!6680 = !DILocation(line: 2628, column: 34, scope: !6617)
!6681 = !DILocation(line: 2628, column: 38, scope: !6617)
!6682 = !DILocation(line: 2628, column: 32, scope: !6617)
!6683 = !DILocation(line: 2628, column: 2, scope: !6617)
!6684 = distinct !{!6684, !6618, !6685}
!6685 = !DILocation(line: 2647, column: 2, scope: !6612)
!6686 = !DILocation(line: 2648, column: 1, scope: !6604)
!6687 = distinct !DISubprogram(name: "max_ii", scope: !2966, file: !2966, line: 215, type: !3499, scopeLine: 216, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!6688 = !DILocalVariable(name: "a", arg: 1, scope: !6687, file: !2966, line: 215, type: !8)
!6689 = !DILocation(line: 215, column: 24, scope: !6687)
!6690 = !DILocalVariable(name: "b", arg: 2, scope: !6687, file: !2966, line: 215, type: !8)
!6691 = !DILocation(line: 215, column: 31, scope: !6687)
!6692 = !DILocation(line: 217, column: 10, scope: !6687)
!6693 = !DILocation(line: 217, column: 14, scope: !6687)
!6694 = !DILocation(line: 217, column: 12, scope: !6687)
!6695 = !DILocation(line: 217, column: 9, scope: !6687)
!6696 = !DILocation(line: 217, column: 19, scope: !6687)
!6697 = !DILocation(line: 217, column: 23, scope: !6687)
!6698 = !DILocation(line: 217, column: 2, scope: !6687)
!6699 = distinct !DISubprogram(name: "copy_v3_v3", scope: !4392, file: !4392, line: 64, type: !6700, scopeLine: 65, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!6700 = !DISubroutineType(types: !6701)
!6701 = !{null, !63, !3742}
!6702 = !DILocalVariable(name: "r", arg: 1, scope: !6699, file: !4392, line: 64, type: !63)
!6703 = !DILocation(line: 64, column: 31, scope: !6699)
!6704 = !DILocalVariable(name: "a", arg: 2, scope: !6699, file: !4392, line: 64, type: !3742)
!6705 = !DILocation(line: 64, column: 49, scope: !6699)
!6706 = !DILocation(line: 66, column: 9, scope: !6699)
!6707 = !DILocation(line: 66, column: 2, scope: !6699)
!6708 = !DILocation(line: 66, column: 7, scope: !6699)
!6709 = !DILocation(line: 67, column: 9, scope: !6699)
!6710 = !DILocation(line: 67, column: 2, scope: !6699)
!6711 = !DILocation(line: 67, column: 7, scope: !6699)
!6712 = !DILocation(line: 68, column: 9, scope: !6699)
!6713 = !DILocation(line: 68, column: 2, scope: !6699)
!6714 = !DILocation(line: 68, column: 7, scope: !6699)
!6715 = !DILocation(line: 69, column: 1, scope: !6699)
!6716 = distinct !DISubprogram(name: "normalize_v3", scope: !4392, file: !4392, line: 830, type: !6717, scopeLine: 831, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!6717 = !DISubroutineType(types: !6718)
!6718 = !{!7, !63}
!6719 = !DILocalVariable(name: "n", arg: 1, scope: !6716, file: !4392, line: 830, type: !63)
!6720 = !DILocation(line: 830, column: 34, scope: !6716)
!6721 = !DILocation(line: 832, column: 25, scope: !6716)
!6722 = !DILocation(line: 832, column: 28, scope: !6716)
!6723 = !DILocation(line: 832, column: 9, scope: !6716)
!6724 = !DILocation(line: 832, column: 2, scope: !6716)
!6725 = distinct !DISubprogram(name: "normalize_v3_v3", scope: !4392, file: !4392, line: 788, type: !6726, scopeLine: 789, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!6726 = !DISubroutineType(types: !6727)
!6727 = !{!7, !63, !3742}
!6728 = !DILocalVariable(name: "r", arg: 1, scope: !6725, file: !4392, line: 788, type: !63)
!6729 = !DILocation(line: 788, column: 37, scope: !6725)
!6730 = !DILocalVariable(name: "a", arg: 2, scope: !6725, file: !4392, line: 788, type: !3742)
!6731 = !DILocation(line: 788, column: 55, scope: !6725)
!6732 = !DILocalVariable(name: "d", scope: !6725, file: !4392, line: 790, type: !7)
!6733 = !DILocation(line: 790, column: 8, scope: !6725)
!6734 = !DILocation(line: 790, column: 21, scope: !6725)
!6735 = !DILocation(line: 790, column: 24, scope: !6725)
!6736 = !DILocation(line: 790, column: 12, scope: !6725)
!6737 = !DILocation(line: 794, column: 6, scope: !6738)
!6738 = distinct !DILexicalBlock(scope: !6725, file: !4392, line: 794, column: 6)
!6739 = !DILocation(line: 794, column: 8, scope: !6738)
!6740 = !DILocation(line: 794, column: 6, scope: !6725)
!6741 = !DILocation(line: 795, column: 13, scope: !6742)
!6742 = distinct !DILexicalBlock(scope: !6738, file: !4392, line: 794, column: 20)
!6743 = !DILocation(line: 795, column: 7, scope: !6742)
!6744 = !DILocation(line: 795, column: 5, scope: !6742)
!6745 = !DILocation(line: 796, column: 15, scope: !6742)
!6746 = !DILocation(line: 796, column: 18, scope: !6742)
!6747 = !DILocation(line: 796, column: 28, scope: !6742)
!6748 = !DILocation(line: 796, column: 26, scope: !6742)
!6749 = !DILocation(line: 796, column: 3, scope: !6742)
!6750 = !DILocation(line: 797, column: 2, scope: !6742)
!6751 = !DILocation(line: 799, column: 11, scope: !6752)
!6752 = distinct !DILexicalBlock(scope: !6738, file: !4392, line: 798, column: 7)
!6753 = !DILocation(line: 799, column: 3, scope: !6752)
!6754 = !DILocation(line: 800, column: 5, scope: !6752)
!6755 = !DILocation(line: 803, column: 9, scope: !6725)
!6756 = !DILocation(line: 803, column: 2, scope: !6725)
!6757 = distinct !DISubprogram(name: "dot_v3v3", scope: !4392, file: !4392, line: 619, type: !6758, scopeLine: 620, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!6758 = !DISubroutineType(types: !6759)
!6759 = !{!7, !3742, !3742}
!6760 = !DILocalVariable(name: "a", arg: 1, scope: !6757, file: !4392, line: 619, type: !3742)
!6761 = !DILocation(line: 619, column: 36, scope: !6757)
!6762 = !DILocalVariable(name: "b", arg: 2, scope: !6757, file: !4392, line: 619, type: !3742)
!6763 = !DILocation(line: 619, column: 54, scope: !6757)
!6764 = !DILocation(line: 621, column: 9, scope: !6757)
!6765 = !DILocation(line: 621, column: 16, scope: !6757)
!6766 = !DILocation(line: 621, column: 14, scope: !6757)
!6767 = !DILocation(line: 621, column: 23, scope: !6757)
!6768 = !DILocation(line: 621, column: 30, scope: !6757)
!6769 = !DILocation(line: 621, column: 28, scope: !6757)
!6770 = !DILocation(line: 621, column: 21, scope: !6757)
!6771 = !DILocation(line: 621, column: 37, scope: !6757)
!6772 = !DILocation(line: 621, column: 44, scope: !6757)
!6773 = !DILocation(line: 621, column: 42, scope: !6757)
!6774 = !DILocation(line: 621, column: 35, scope: !6757)
!6775 = !DILocation(line: 621, column: 2, scope: !6757)
!6776 = distinct !DISubprogram(name: "mul_v3_v3fl", scope: !4392, file: !4392, line: 399, type: !6777, scopeLine: 400, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!6777 = !DISubroutineType(types: !6778)
!6778 = !{null, !63, !3742, !7}
!6779 = !DILocalVariable(name: "r", arg: 1, scope: !6776, file: !4392, line: 399, type: !63)
!6780 = !DILocation(line: 399, column: 32, scope: !6776)
!6781 = !DILocalVariable(name: "a", arg: 2, scope: !6776, file: !4392, line: 399, type: !3742)
!6782 = !DILocation(line: 399, column: 50, scope: !6776)
!6783 = !DILocalVariable(name: "f", arg: 3, scope: !6776, file: !4392, line: 399, type: !7)
!6784 = !DILocation(line: 399, column: 62, scope: !6776)
!6785 = !DILocation(line: 401, column: 9, scope: !6776)
!6786 = !DILocation(line: 401, column: 16, scope: !6776)
!6787 = !DILocation(line: 401, column: 14, scope: !6776)
!6788 = !DILocation(line: 401, column: 2, scope: !6776)
!6789 = !DILocation(line: 401, column: 7, scope: !6776)
!6790 = !DILocation(line: 402, column: 9, scope: !6776)
!6791 = !DILocation(line: 402, column: 16, scope: !6776)
!6792 = !DILocation(line: 402, column: 14, scope: !6776)
!6793 = !DILocation(line: 402, column: 2, scope: !6776)
!6794 = !DILocation(line: 402, column: 7, scope: !6776)
!6795 = !DILocation(line: 403, column: 9, scope: !6776)
!6796 = !DILocation(line: 403, column: 16, scope: !6776)
!6797 = !DILocation(line: 403, column: 14, scope: !6776)
!6798 = !DILocation(line: 403, column: 2, scope: !6776)
!6799 = !DILocation(line: 403, column: 7, scope: !6776)
!6800 = !DILocation(line: 404, column: 1, scope: !6776)
!6801 = distinct !DISubprogram(name: "zero_v3", scope: !4392, file: !4392, line: 43, type: !6802, scopeLine: 44, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!6802 = !DISubroutineType(types: !6803)
!6803 = !{null, !63}
!6804 = !DILocalVariable(name: "r", arg: 1, scope: !6801, file: !4392, line: 43, type: !63)
!6805 = !DILocation(line: 43, column: 28, scope: !6801)
!6806 = !DILocation(line: 45, column: 2, scope: !6801)
!6807 = !DILocation(line: 45, column: 7, scope: !6801)
!6808 = !DILocation(line: 46, column: 2, scope: !6801)
!6809 = !DILocation(line: 46, column: 7, scope: !6801)
!6810 = !DILocation(line: 47, column: 2, scope: !6801)
!6811 = !DILocation(line: 47, column: 7, scope: !6801)
!6812 = !DILocation(line: 48, column: 1, scope: !6801)
!6813 = distinct !DISubprogram(name: "compress_deepshadowbuf", scope: !3, file: !3, line: 308, type: !6814, scopeLine: 309, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!6814 = !DISubroutineType(types: !6815)
!6815 = !{null, !29, !2461, !3169, !3185}
!6816 = !DILocalVariable(name: "re", arg: 1, scope: !6813, file: !3, line: 308, type: !29)
!6817 = !DILocation(line: 308, column: 44, scope: !6813)
!6818 = !DILocalVariable(name: "shb", arg: 2, scope: !6813, file: !3, line: 308, type: !2461)
!6819 = !DILocation(line: 308, column: 57, scope: !6813)
!6820 = !DILocalVariable(name: "apixbuf", arg: 3, scope: !6813, file: !3, line: 308, type: !3169)
!6821 = !DILocation(line: 308, column: 71, scope: !6813)
!6822 = !DILocalVariable(name: "apixbufstrand", arg: 4, scope: !6813, file: !3, line: 308, type: !3185)
!6823 = !DILocation(line: 308, column: 92, scope: !6813)
!6824 = !DILocalVariable(name: "shsample", scope: !6813, file: !3, line: 310, type: !3601)
!6825 = !DILocation(line: 310, column: 17, scope: !6813)
!6826 = !DILocalVariable(name: "ds", scope: !6813, file: !3, line: 311, type: !6827)
!6827 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3613, size: 1024, elements: !1758)
!6828 = !DILocation(line: 311, column: 14, scope: !6813)
!6829 = !DILocalVariable(name: "sampleds", scope: !6813, file: !3, line: 311, type: !6827)
!6830 = !DILocation(line: 311, column: 31, scope: !6813)
!6831 = !DILocalVariable(name: "dsb", scope: !6813, file: !3, line: 311, type: !3613)
!6832 = !DILocation(line: 311, column: 54, scope: !6813)
!6833 = !DILocalVariable(name: "newbuf", scope: !6813, file: !3, line: 311, type: !3613)
!6834 = !DILocation(line: 311, column: 60, scope: !6813)
!6835 = !DILocalVariable(name: "ap", scope: !6813, file: !3, line: 312, type: !3169)
!6836 = !DILocation(line: 312, column: 11, scope: !6813)
!6837 = !DILocalVariable(name: "apn", scope: !6813, file: !3, line: 312, type: !3169)
!6838 = !DILocation(line: 312, column: 16, scope: !6813)
!6839 = !DILocalVariable(name: "aps", scope: !6813, file: !3, line: 313, type: !3185)
!6840 = !DILocation(line: 313, column: 14, scope: !6813)
!6841 = !DILocalVariable(name: "apns", scope: !6813, file: !3, line: 313, type: !3185)
!6842 = !DILocation(line: 313, column: 20, scope: !6813)
!6843 = !DILocalVariable(name: "visibility", scope: !6813, file: !3, line: 314, type: !7)
!6844 = !DILocation(line: 314, column: 8, scope: !6813)
!6845 = !DILocalVariable(name: "totbuf", scope: !6813, file: !3, line: 316, type: !6846)
!6846 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8)
!6847 = !DILocation(line: 316, column: 12, scope: !6813)
!6848 = !DILocation(line: 316, column: 20, scope: !6813)
!6849 = !DILocation(line: 316, column: 25, scope: !6813)
!6850 = !DILocalVariable(name: "totbuf_f", scope: !6813, file: !3, line: 317, type: !3743)
!6851 = !DILocation(line: 317, column: 14, scope: !6813)
!6852 = !DILocation(line: 317, column: 31, scope: !6813)
!6853 = !DILocation(line: 317, column: 36, scope: !6813)
!6854 = !DILocation(line: 317, column: 24, scope: !6813)
!6855 = !DILocalVariable(name: "totbuf_f_inv", scope: !6813, file: !3, line: 318, type: !3743)
!6856 = !DILocation(line: 318, column: 14, scope: !6813)
!6857 = !DILocation(line: 318, column: 33, scope: !6813)
!6858 = !DILocation(line: 318, column: 32, scope: !6813)
!6859 = !DILocalVariable(name: "size", scope: !6813, file: !3, line: 319, type: !6846)
!6860 = !DILocation(line: 319, column: 12, scope: !6813)
!6861 = !DILocation(line: 319, column: 18, scope: !6813)
!6862 = !DILocation(line: 319, column: 23, scope: !6813)
!6863 = !DILocalVariable(name: "a", scope: !6813, file: !3, line: 321, type: !8)
!6864 = !DILocation(line: 321, column: 6, scope: !6813)
!6865 = !DILocalVariable(name: "b", scope: !6813, file: !3, line: 321, type: !8)
!6866 = !DILocation(line: 321, column: 9, scope: !6813)
!6867 = !DILocalVariable(name: "c", scope: !6813, file: !3, line: 321, type: !8)
!6868 = !DILocation(line: 321, column: 12, scope: !6813)
!6869 = !DILocalVariable(name: "tot", scope: !6813, file: !3, line: 321, type: !8)
!6870 = !DILocation(line: 321, column: 15, scope: !6813)
!6871 = !DILocalVariable(name: "minz", scope: !6813, file: !3, line: 321, type: !8)
!6872 = !DILocation(line: 321, column: 20, scope: !6813)
!6873 = !DILocalVariable(name: "found", scope: !6813, file: !3, line: 321, type: !8)
!6874 = !DILocation(line: 321, column: 26, scope: !6813)
!6875 = !DILocalVariable(name: "prevtot", scope: !6813, file: !3, line: 321, type: !8)
!6876 = !DILocation(line: 321, column: 33, scope: !6813)
!6877 = !DILocalVariable(name: "newtot", scope: !6813, file: !3, line: 321, type: !8)
!6878 = !DILocation(line: 321, column: 42, scope: !6813)
!6879 = !DILocalVariable(name: "sampletot", scope: !6813, file: !3, line: 322, type: !6880)
!6880 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 512, elements: !1758)
!6881 = !DILocation(line: 322, column: 6, scope: !6813)
!6882 = !DILocalVariable(name: "totsample", scope: !6813, file: !3, line: 322, type: !8)
!6883 = !DILocation(line: 322, column: 29, scope: !6813)
!6884 = !DILocalVariable(name: "totsamplec", scope: !6813, file: !3, line: 322, type: !8)
!6885 = !DILocation(line: 322, column: 44, scope: !6813)
!6886 = !DILocation(line: 324, column: 12, scope: !6813)
!6887 = !DILocation(line: 324, column: 10, scope: !6813)
!6888 = !DILocation(line: 325, column: 15, scope: !6813)
!6889 = !DILocation(line: 325, column: 20, scope: !6813)
!6890 = !DILocation(line: 325, column: 29, scope: !6813)
!6891 = !DILocation(line: 325, column: 2, scope: !6813)
!6892 = !DILocation(line: 327, column: 21, scope: !6813)
!6893 = !DILocation(line: 327, column: 47, scope: !6813)
!6894 = !DILocation(line: 327, column: 45, scope: !6813)
!6895 = !DILocation(line: 327, column: 54, scope: !6813)
!6896 = !DILocation(line: 327, column: 52, scope: !6813)
!6897 = !DILocation(line: 327, column: 2, scope: !6813)
!6898 = !DILocation(line: 327, column: 12, scope: !6813)
!6899 = !DILocation(line: 327, column: 19, scope: !6813)
!6900 = !DILocation(line: 328, column: 22, scope: !6813)
!6901 = !DILocation(line: 328, column: 57, scope: !6813)
!6902 = !DILocation(line: 328, column: 55, scope: !6813)
!6903 = !DILocation(line: 328, column: 64, scope: !6813)
!6904 = !DILocation(line: 328, column: 62, scope: !6813)
!6905 = !DILocation(line: 328, column: 2, scope: !6813)
!6906 = !DILocation(line: 328, column: 12, scope: !6813)
!6907 = !DILocation(line: 328, column: 20, scope: !6813)
!6908 = !DILocation(line: 330, column: 6, scope: !6813)
!6909 = !DILocation(line: 330, column: 4, scope: !6813)
!6910 = !DILocation(line: 331, column: 7, scope: !6813)
!6911 = !DILocation(line: 331, column: 5, scope: !6813)
!6912 = !DILocation(line: 332, column: 8, scope: !6913)
!6913 = distinct !DILexicalBlock(scope: !6813, file: !3, line: 332, column: 2)
!6914 = !DILocation(line: 332, column: 7, scope: !6913)
!6915 = !DILocation(line: 332, column: 12, scope: !6916)
!6916 = distinct !DILexicalBlock(scope: !6913, file: !3, line: 332, column: 2)
!6917 = !DILocation(line: 332, column: 14, scope: !6916)
!6918 = !DILocation(line: 332, column: 19, scope: !6916)
!6919 = !DILocation(line: 332, column: 18, scope: !6916)
!6920 = !DILocation(line: 332, column: 13, scope: !6916)
!6921 = !DILocation(line: 332, column: 2, scope: !6913)
!6922 = !DILocation(line: 334, column: 9, scope: !6923)
!6923 = distinct !DILexicalBlock(scope: !6924, file: !3, line: 334, column: 3)
!6924 = distinct !DILexicalBlock(scope: !6916, file: !3, line: 332, column: 43)
!6925 = !DILocation(line: 334, column: 8, scope: !6923)
!6926 = !DILocation(line: 334, column: 13, scope: !6927)
!6927 = distinct !DILexicalBlock(scope: !6923, file: !3, line: 334, column: 3)
!6928 = !DILocation(line: 334, column: 15, scope: !6927)
!6929 = !DILocation(line: 334, column: 14, scope: !6927)
!6930 = !DILocation(line: 334, column: 3, scope: !6923)
!6931 = !DILocation(line: 335, column: 14, scope: !6927)
!6932 = !DILocation(line: 335, column: 4, scope: !6927)
!6933 = !DILocation(line: 335, column: 16, scope: !6927)
!6934 = !DILocation(line: 334, column: 24, scope: !6927)
!6935 = !DILocation(line: 334, column: 3, scope: !6927)
!6936 = distinct !{!6936, !6930, !6937}
!6937 = !DILocation(line: 335, column: 18, scope: !6923)
!6938 = !DILocation(line: 337, column: 6, scope: !6924)
!6939 = !DILocation(line: 338, column: 12, scope: !6940)
!6940 = distinct !DILexicalBlock(scope: !6924, file: !3, line: 338, column: 3)
!6941 = !DILocation(line: 338, column: 11, scope: !6940)
!6942 = !DILocation(line: 338, column: 8, scope: !6940)
!6943 = !DILocation(line: 338, column: 16, scope: !6944)
!6944 = distinct !DILexicalBlock(scope: !6940, file: !3, line: 338, column: 3)
!6945 = !DILocation(line: 338, column: 3, scope: !6940)
!6946 = !DILocation(line: 339, column: 10, scope: !6947)
!6947 = distinct !DILexicalBlock(scope: !6944, file: !3, line: 339, column: 4)
!6948 = !DILocation(line: 339, column: 9, scope: !6947)
!6949 = !DILocation(line: 339, column: 14, scope: !6950)
!6950 = distinct !DILexicalBlock(scope: !6947, file: !3, line: 339, column: 4)
!6951 = !DILocation(line: 339, column: 15, scope: !6950)
!6952 = !DILocation(line: 339, column: 4, scope: !6947)
!6953 = !DILocation(line: 340, column: 9, scope: !6954)
!6954 = distinct !DILexicalBlock(scope: !6950, file: !3, line: 340, column: 9)
!6955 = !DILocation(line: 340, column: 14, scope: !6954)
!6956 = !DILocation(line: 340, column: 16, scope: !6954)
!6957 = !DILocation(line: 340, column: 9, scope: !6950)
!6958 = !DILocation(line: 341, column: 12, scope: !6959)
!6959 = distinct !DILexicalBlock(scope: !6954, file: !3, line: 341, column: 6)
!6960 = !DILocation(line: 341, column: 11, scope: !6959)
!6961 = !DILocation(line: 341, column: 16, scope: !6962)
!6962 = distinct !DILexicalBlock(scope: !6959, file: !3, line: 341, column: 6)
!6963 = !DILocation(line: 341, column: 18, scope: !6962)
!6964 = !DILocation(line: 341, column: 17, scope: !6962)
!6965 = !DILocation(line: 341, column: 6, scope: !6959)
!6966 = !DILocation(line: 342, column: 11, scope: !6967)
!6967 = distinct !DILexicalBlock(scope: !6962, file: !3, line: 342, column: 11)
!6968 = !DILocation(line: 342, column: 16, scope: !6967)
!6969 = !DILocation(line: 342, column: 21, scope: !6967)
!6970 = !DILocation(line: 342, column: 30, scope: !6967)
!6971 = !DILocation(line: 342, column: 28, scope: !6967)
!6972 = !DILocation(line: 342, column: 24, scope: !6967)
!6973 = !DILocation(line: 342, column: 11, scope: !6962)
!6974 = !DILocation(line: 343, column: 18, scope: !6967)
!6975 = !DILocation(line: 343, column: 8, scope: !6967)
!6976 = !DILocation(line: 343, column: 20, scope: !6967)
!6977 = !DILocation(line: 342, column: 31, scope: !6967)
!6978 = !DILocation(line: 341, column: 27, scope: !6962)
!6979 = !DILocation(line: 341, column: 6, scope: !6962)
!6980 = distinct !{!6980, !6965, !6981}
!6981 = !DILocation(line: 343, column: 20, scope: !6959)
!6982 = !DILocation(line: 340, column: 17, scope: !6954)
!6983 = !DILocation(line: 339, column: 20, scope: !6950)
!6984 = !DILocation(line: 339, column: 4, scope: !6950)
!6985 = distinct !{!6985, !6952, !6986}
!6986 = !DILocation(line: 343, column: 20, scope: !6947)
!6987 = !DILocation(line: 338, column: 25, scope: !6944)
!6988 = !DILocation(line: 338, column: 30, scope: !6944)
!6989 = !DILocation(line: 338, column: 24, scope: !6944)
!6990 = !DILocation(line: 338, column: 3, scope: !6944)
!6991 = distinct !{!6991, !6945, !6992}
!6992 = !DILocation(line: 343, column: 20, scope: !6940)
!6993 = !DILocation(line: 345, column: 7, scope: !6994)
!6994 = distinct !DILexicalBlock(scope: !6924, file: !3, line: 345, column: 7)
!6995 = !DILocation(line: 345, column: 7, scope: !6924)
!6996 = !DILocation(line: 346, column: 14, scope: !6997)
!6997 = distinct !DILexicalBlock(scope: !6998, file: !3, line: 346, column: 4)
!6998 = distinct !DILexicalBlock(scope: !6994, file: !3, line: 345, column: 22)
!6999 = !DILocation(line: 346, column: 13, scope: !6997)
!7000 = !DILocation(line: 346, column: 9, scope: !6997)
!7001 = !DILocation(line: 346, column: 19, scope: !7002)
!7002 = distinct !DILexicalBlock(scope: !6997, file: !3, line: 346, column: 4)
!7003 = !DILocation(line: 346, column: 4, scope: !6997)
!7004 = !DILocation(line: 347, column: 11, scope: !7005)
!7005 = distinct !DILexicalBlock(scope: !7002, file: !3, line: 347, column: 5)
!7006 = !DILocation(line: 347, column: 10, scope: !7005)
!7007 = !DILocation(line: 347, column: 15, scope: !7008)
!7008 = distinct !DILexicalBlock(scope: !7005, file: !3, line: 347, column: 5)
!7009 = !DILocation(line: 347, column: 16, scope: !7008)
!7010 = !DILocation(line: 347, column: 5, scope: !7005)
!7011 = !DILocation(line: 348, column: 10, scope: !7012)
!7012 = distinct !DILexicalBlock(scope: !7008, file: !3, line: 348, column: 10)
!7013 = !DILocation(line: 348, column: 16, scope: !7012)
!7014 = !DILocation(line: 348, column: 18, scope: !7012)
!7015 = !DILocation(line: 348, column: 10, scope: !7008)
!7016 = !DILocation(line: 349, column: 13, scope: !7017)
!7017 = distinct !DILexicalBlock(scope: !7012, file: !3, line: 349, column: 7)
!7018 = !DILocation(line: 349, column: 12, scope: !7017)
!7019 = !DILocation(line: 349, column: 17, scope: !7020)
!7020 = distinct !DILexicalBlock(scope: !7017, file: !3, line: 349, column: 7)
!7021 = !DILocation(line: 349, column: 19, scope: !7020)
!7022 = !DILocation(line: 349, column: 18, scope: !7020)
!7023 = !DILocation(line: 349, column: 7, scope: !7017)
!7024 = !DILocation(line: 350, column: 12, scope: !7025)
!7025 = distinct !DILexicalBlock(scope: !7020, file: !3, line: 350, column: 12)
!7026 = !DILocation(line: 350, column: 18, scope: !7025)
!7027 = !DILocation(line: 350, column: 23, scope: !7025)
!7028 = !DILocation(line: 350, column: 32, scope: !7025)
!7029 = !DILocation(line: 350, column: 30, scope: !7025)
!7030 = !DILocation(line: 350, column: 26, scope: !7025)
!7031 = !DILocation(line: 350, column: 12, scope: !7020)
!7032 = !DILocation(line: 351, column: 19, scope: !7025)
!7033 = !DILocation(line: 351, column: 9, scope: !7025)
!7034 = !DILocation(line: 351, column: 21, scope: !7025)
!7035 = !DILocation(line: 350, column: 33, scope: !7025)
!7036 = !DILocation(line: 349, column: 28, scope: !7020)
!7037 = !DILocation(line: 349, column: 7, scope: !7020)
!7038 = distinct !{!7038, !7023, !7039}
!7039 = !DILocation(line: 351, column: 21, scope: !7017)
!7040 = !DILocation(line: 348, column: 19, scope: !7012)
!7041 = !DILocation(line: 347, column: 21, scope: !7008)
!7042 = !DILocation(line: 347, column: 5, scope: !7008)
!7043 = distinct !{!7043, !7010, !7044}
!7044 = !DILocation(line: 351, column: 21, scope: !7005)
!7045 = !DILocation(line: 346, column: 30, scope: !7002)
!7046 = !DILocation(line: 346, column: 36, scope: !7002)
!7047 = !DILocation(line: 346, column: 29, scope: !7002)
!7048 = !DILocation(line: 346, column: 4, scope: !7002)
!7049 = distinct !{!7049, !7003, !7050}
!7050 = !DILocation(line: 351, column: 21, scope: !6997)
!7051 = !DILocation(line: 352, column: 3, scope: !6998)
!7052 = !DILocation(line: 354, column: 9, scope: !7053)
!7053 = distinct !DILexicalBlock(scope: !6924, file: !3, line: 354, column: 3)
!7054 = !DILocation(line: 354, column: 8, scope: !7053)
!7055 = !DILocation(line: 354, column: 13, scope: !7056)
!7056 = distinct !DILexicalBlock(scope: !7053, file: !3, line: 354, column: 3)
!7057 = !DILocation(line: 354, column: 15, scope: !7056)
!7058 = !DILocation(line: 354, column: 14, scope: !7056)
!7059 = !DILocation(line: 354, column: 3, scope: !7053)
!7060 = !DILocation(line: 355, column: 21, scope: !7056)
!7061 = !DILocation(line: 355, column: 11, scope: !7056)
!7062 = !DILocation(line: 355, column: 8, scope: !7056)
!7063 = !DILocation(line: 355, column: 4, scope: !7056)
!7064 = !DILocation(line: 354, column: 24, scope: !7056)
!7065 = !DILocation(line: 354, column: 3, scope: !7056)
!7066 = distinct !{!7066, !7059, !7067}
!7067 = !DILocation(line: 355, column: 22, scope: !7053)
!7068 = !DILocation(line: 357, column: 7, scope: !7069)
!7069 = distinct !DILexicalBlock(scope: !6924, file: !3, line: 357, column: 7)
!7070 = !DILocation(line: 357, column: 11, scope: !7069)
!7071 = !DILocation(line: 357, column: 7, scope: !6924)
!7072 = !DILocation(line: 358, column: 4, scope: !7073)
!7073 = distinct !DILexicalBlock(scope: !7069, file: !3, line: 357, column: 17)
!7074 = !DILocation(line: 358, column: 14, scope: !7073)
!7075 = !DILocation(line: 358, column: 22, scope: !7073)
!7076 = !DILocation(line: 358, column: 24, scope: !7073)
!7077 = !DILocation(line: 359, column: 4, scope: !7073)
!7078 = !DILocation(line: 359, column: 14, scope: !7073)
!7079 = !DILocation(line: 359, column: 21, scope: !7073)
!7080 = !DILocation(line: 359, column: 23, scope: !7073)
!7081 = !DILocation(line: 360, column: 4, scope: !7073)
!7082 = !DILocation(line: 364, column: 23, scope: !6924)
!7083 = !DILocation(line: 364, column: 54, scope: !6924)
!7084 = !DILocation(line: 364, column: 53, scope: !6924)
!7085 = !DILocation(line: 364, column: 57, scope: !6924)
!7086 = !DILocation(line: 364, column: 10, scope: !6924)
!7087 = !DILocation(line: 364, column: 21, scope: !6924)
!7088 = !DILocation(line: 364, column: 3, scope: !6924)
!7089 = !DILocation(line: 364, column: 8, scope: !6924)
!7090 = !DILocation(line: 365, column: 9, scope: !7091)
!7091 = distinct !DILexicalBlock(scope: !6924, file: !3, line: 365, column: 3)
!7092 = !DILocation(line: 365, column: 8, scope: !7091)
!7093 = !DILocation(line: 365, column: 13, scope: !7094)
!7094 = distinct !DILexicalBlock(scope: !7091, file: !3, line: 365, column: 3)
!7095 = !DILocation(line: 365, column: 15, scope: !7094)
!7096 = !DILocation(line: 365, column: 14, scope: !7094)
!7097 = !DILocation(line: 365, column: 3, scope: !7091)
!7098 = !DILocation(line: 366, column: 33, scope: !7094)
!7099 = !DILocation(line: 366, column: 34, scope: !7094)
!7100 = !DILocation(line: 366, column: 24, scope: !7094)
!7101 = !DILocation(line: 366, column: 50, scope: !7094)
!7102 = !DILocation(line: 366, column: 51, scope: !7094)
!7103 = !DILocation(line: 366, column: 40, scope: !7094)
!7104 = !DILocation(line: 366, column: 54, scope: !7094)
!7105 = !DILocation(line: 366, column: 38, scope: !7094)
!7106 = !DILocation(line: 366, column: 20, scope: !7094)
!7107 = !DILocation(line: 366, column: 11, scope: !7094)
!7108 = !DILocation(line: 366, column: 22, scope: !7094)
!7109 = !DILocation(line: 366, column: 7, scope: !7094)
!7110 = !DILocation(line: 366, column: 4, scope: !7094)
!7111 = !DILocation(line: 366, column: 9, scope: !7094)
!7112 = !DILocation(line: 365, column: 24, scope: !7094)
!7113 = !DILocation(line: 365, column: 3, scope: !7094)
!7114 = distinct !{!7114, !7097, !7115}
!7115 = !DILocation(line: 366, column: 55, scope: !7091)
!7116 = !DILocation(line: 368, column: 12, scope: !7117)
!7117 = distinct !DILexicalBlock(scope: !6924, file: !3, line: 368, column: 3)
!7118 = !DILocation(line: 368, column: 11, scope: !7117)
!7119 = !DILocation(line: 368, column: 8, scope: !7117)
!7120 = !DILocation(line: 368, column: 16, scope: !7121)
!7121 = distinct !DILexicalBlock(scope: !7117, file: !3, line: 368, column: 3)
!7122 = !DILocation(line: 368, column: 3, scope: !7117)
!7123 = !DILocation(line: 369, column: 10, scope: !7124)
!7124 = distinct !DILexicalBlock(scope: !7125, file: !3, line: 369, column: 4)
!7125 = distinct !DILexicalBlock(scope: !7121, file: !3, line: 368, column: 36)
!7126 = !DILocation(line: 369, column: 9, scope: !7124)
!7127 = !DILocation(line: 369, column: 14, scope: !7128)
!7128 = distinct !DILexicalBlock(scope: !7124, file: !3, line: 369, column: 4)
!7129 = !DILocation(line: 369, column: 15, scope: !7128)
!7130 = !DILocation(line: 369, column: 4, scope: !7124)
!7131 = !DILocation(line: 370, column: 9, scope: !7132)
!7132 = distinct !DILexicalBlock(scope: !7133, file: !3, line: 370, column: 9)
!7133 = distinct !DILexicalBlock(scope: !7128, file: !3, line: 369, column: 24)
!7134 = !DILocation(line: 370, column: 14, scope: !7132)
!7135 = !DILocation(line: 370, column: 16, scope: !7132)
!7136 = !DILocation(line: 370, column: 9, scope: !7133)
!7137 = !DILocation(line: 371, column: 12, scope: !7138)
!7138 = distinct !DILexicalBlock(scope: !7139, file: !3, line: 371, column: 6)
!7139 = distinct !DILexicalBlock(scope: !7132, file: !3, line: 370, column: 20)
!7140 = !DILocation(line: 371, column: 11, scope: !7138)
!7141 = !DILocation(line: 371, column: 16, scope: !7142)
!7142 = distinct !DILexicalBlock(scope: !7138, file: !3, line: 371, column: 6)
!7143 = !DILocation(line: 371, column: 18, scope: !7142)
!7144 = !DILocation(line: 371, column: 17, scope: !7142)
!7145 = !DILocation(line: 371, column: 6, scope: !7138)
!7146 = !DILocation(line: 372, column: 11, scope: !7147)
!7147 = distinct !DILexicalBlock(scope: !7148, file: !3, line: 372, column: 11)
!7148 = distinct !DILexicalBlock(scope: !7142, file: !3, line: 371, column: 31)
!7149 = !DILocation(line: 372, column: 16, scope: !7147)
!7150 = !DILocation(line: 372, column: 21, scope: !7147)
!7151 = !DILocation(line: 372, column: 30, scope: !7147)
!7152 = !DILocation(line: 372, column: 28, scope: !7147)
!7153 = !DILocation(line: 372, column: 24, scope: !7147)
!7154 = !DILocation(line: 372, column: 11, scope: !7148)
!7155 = !DILocation(line: 374, column: 18, scope: !7156)
!7156 = distinct !DILexicalBlock(scope: !7147, file: !3, line: 372, column: 34)
!7157 = !DILocation(line: 374, column: 23, scope: !7156)
!7158 = !DILocation(line: 374, column: 25, scope: !7156)
!7159 = !DILocation(line: 374, column: 11, scope: !7156)
!7160 = !DILocation(line: 374, column: 8, scope: !7156)
!7161 = !DILocation(line: 374, column: 15, scope: !7156)
!7162 = !DILocation(line: 374, column: 16, scope: !7156)
!7163 = !DILocation(line: 375, column: 11, scope: !7156)
!7164 = !DILocation(line: 375, column: 8, scope: !7156)
!7165 = !DILocation(line: 375, column: 15, scope: !7156)
!7166 = !DILocation(line: 375, column: 16, scope: !7156)
!7167 = !DILocation(line: 376, column: 11, scope: !7156)
!7168 = !DILocation(line: 376, column: 8, scope: !7156)
!7169 = !DILocation(line: 376, column: 13, scope: !7156)
!7170 = !DILocation(line: 377, column: 18, scope: !7156)
!7171 = !DILocation(line: 377, column: 23, scope: !7156)
!7172 = !DILocation(line: 377, column: 25, scope: !7156)
!7173 = !DILocation(line: 377, column: 11, scope: !7156)
!7174 = !DILocation(line: 377, column: 8, scope: !7156)
!7175 = !DILocation(line: 377, column: 15, scope: !7156)
!7176 = !DILocation(line: 377, column: 16, scope: !7156)
!7177 = !DILocation(line: 378, column: 29, scope: !7156)
!7178 = !DILocation(line: 378, column: 33, scope: !7156)
!7179 = !DILocation(line: 378, column: 38, scope: !7156)
!7180 = !DILocation(line: 378, column: 42, scope: !7156)
!7181 = !DILocation(line: 378, column: 46, scope: !7156)
!7182 = !DILocation(line: 378, column: 51, scope: !7156)
!7183 = !DILocation(line: 378, column: 53, scope: !7156)
!7184 = !DILocation(line: 378, column: 18, scope: !7156)
!7185 = !DILocation(line: 378, column: 11, scope: !7156)
!7186 = !DILocation(line: 378, column: 8, scope: !7156)
!7187 = !DILocation(line: 378, column: 15, scope: !7156)
!7188 = !DILocation(line: 378, column: 16, scope: !7156)
!7189 = !DILocation(line: 379, column: 11, scope: !7156)
!7190 = !DILocation(line: 379, column: 8, scope: !7156)
!7191 = !DILocation(line: 379, column: 13, scope: !7156)
!7192 = !DILocation(line: 380, column: 7, scope: !7156)
!7193 = !DILocation(line: 381, column: 6, scope: !7148)
!7194 = !DILocation(line: 371, column: 27, scope: !7142)
!7195 = !DILocation(line: 371, column: 6, scope: !7142)
!7196 = distinct !{!7196, !7145, !7197}
!7197 = !DILocation(line: 381, column: 6, scope: !7138)
!7198 = !DILocation(line: 382, column: 5, scope: !7139)
!7199 = !DILocation(line: 383, column: 4, scope: !7133)
!7200 = !DILocation(line: 369, column: 20, scope: !7128)
!7201 = !DILocation(line: 369, column: 4, scope: !7128)
!7202 = distinct !{!7202, !7130, !7203}
!7203 = !DILocation(line: 383, column: 4, scope: !7124)
!7204 = !DILocation(line: 384, column: 3, scope: !7125)
!7205 = !DILocation(line: 368, column: 25, scope: !7121)
!7206 = !DILocation(line: 368, column: 30, scope: !7121)
!7207 = !DILocation(line: 368, column: 24, scope: !7121)
!7208 = !DILocation(line: 368, column: 3, scope: !7121)
!7209 = distinct !{!7209, !7122, !7210}
!7210 = !DILocation(line: 384, column: 3, scope: !7117)
!7211 = !DILocation(line: 386, column: 7, scope: !7212)
!7212 = distinct !DILexicalBlock(scope: !6924, file: !3, line: 386, column: 7)
!7213 = !DILocation(line: 386, column: 7, scope: !6924)
!7214 = !DILocation(line: 387, column: 14, scope: !7215)
!7215 = distinct !DILexicalBlock(scope: !7216, file: !3, line: 387, column: 4)
!7216 = distinct !DILexicalBlock(scope: !7212, file: !3, line: 386, column: 22)
!7217 = !DILocation(line: 387, column: 13, scope: !7215)
!7218 = !DILocation(line: 387, column: 9, scope: !7215)
!7219 = !DILocation(line: 387, column: 19, scope: !7220)
!7220 = distinct !DILexicalBlock(scope: !7215, file: !3, line: 387, column: 4)
!7221 = !DILocation(line: 387, column: 4, scope: !7215)
!7222 = !DILocation(line: 388, column: 11, scope: !7223)
!7223 = distinct !DILexicalBlock(scope: !7224, file: !3, line: 388, column: 5)
!7224 = distinct !DILexicalBlock(scope: !7220, file: !3, line: 387, column: 42)
!7225 = !DILocation(line: 388, column: 10, scope: !7223)
!7226 = !DILocation(line: 388, column: 15, scope: !7227)
!7227 = distinct !DILexicalBlock(scope: !7223, file: !3, line: 388, column: 5)
!7228 = !DILocation(line: 388, column: 16, scope: !7227)
!7229 = !DILocation(line: 388, column: 5, scope: !7223)
!7230 = !DILocation(line: 389, column: 10, scope: !7231)
!7231 = distinct !DILexicalBlock(scope: !7232, file: !3, line: 389, column: 10)
!7232 = distinct !DILexicalBlock(scope: !7227, file: !3, line: 388, column: 25)
!7233 = !DILocation(line: 389, column: 16, scope: !7231)
!7234 = !DILocation(line: 389, column: 18, scope: !7231)
!7235 = !DILocation(line: 389, column: 10, scope: !7232)
!7236 = !DILocation(line: 390, column: 13, scope: !7237)
!7237 = distinct !DILexicalBlock(scope: !7238, file: !3, line: 390, column: 7)
!7238 = distinct !DILexicalBlock(scope: !7231, file: !3, line: 389, column: 22)
!7239 = !DILocation(line: 390, column: 12, scope: !7237)
!7240 = !DILocation(line: 390, column: 17, scope: !7241)
!7241 = distinct !DILexicalBlock(scope: !7237, file: !3, line: 390, column: 7)
!7242 = !DILocation(line: 390, column: 19, scope: !7241)
!7243 = !DILocation(line: 390, column: 18, scope: !7241)
!7244 = !DILocation(line: 390, column: 7, scope: !7237)
!7245 = !DILocation(line: 391, column: 12, scope: !7246)
!7246 = distinct !DILexicalBlock(scope: !7247, file: !3, line: 391, column: 12)
!7247 = distinct !DILexicalBlock(scope: !7241, file: !3, line: 390, column: 32)
!7248 = !DILocation(line: 391, column: 18, scope: !7246)
!7249 = !DILocation(line: 391, column: 23, scope: !7246)
!7250 = !DILocation(line: 391, column: 32, scope: !7246)
!7251 = !DILocation(line: 391, column: 30, scope: !7246)
!7252 = !DILocation(line: 391, column: 26, scope: !7246)
!7253 = !DILocation(line: 391, column: 12, scope: !7247)
!7254 = !DILocation(line: 393, column: 19, scope: !7255)
!7255 = distinct !DILexicalBlock(scope: !7246, file: !3, line: 391, column: 36)
!7256 = !DILocation(line: 393, column: 25, scope: !7255)
!7257 = !DILocation(line: 393, column: 27, scope: !7255)
!7258 = !DILocation(line: 393, column: 12, scope: !7255)
!7259 = !DILocation(line: 393, column: 9, scope: !7255)
!7260 = !DILocation(line: 393, column: 16, scope: !7255)
!7261 = !DILocation(line: 393, column: 17, scope: !7255)
!7262 = !DILocation(line: 394, column: 12, scope: !7255)
!7263 = !DILocation(line: 394, column: 9, scope: !7255)
!7264 = !DILocation(line: 394, column: 16, scope: !7255)
!7265 = !DILocation(line: 394, column: 17, scope: !7255)
!7266 = !DILocation(line: 395, column: 12, scope: !7255)
!7267 = !DILocation(line: 395, column: 9, scope: !7255)
!7268 = !DILocation(line: 395, column: 14, scope: !7255)
!7269 = !DILocation(line: 396, column: 19, scope: !7255)
!7270 = !DILocation(line: 396, column: 25, scope: !7255)
!7271 = !DILocation(line: 396, column: 27, scope: !7255)
!7272 = !DILocation(line: 396, column: 12, scope: !7255)
!7273 = !DILocation(line: 396, column: 9, scope: !7255)
!7274 = !DILocation(line: 396, column: 16, scope: !7255)
!7275 = !DILocation(line: 396, column: 17, scope: !7255)
!7276 = !DILocation(line: 397, column: 30, scope: !7255)
!7277 = !DILocation(line: 397, column: 34, scope: !7255)
!7278 = !DILocation(line: 397, column: 40, scope: !7255)
!7279 = !DILocation(line: 397, column: 44, scope: !7255)
!7280 = !DILocation(line: 397, column: 48, scope: !7255)
!7281 = !DILocation(line: 397, column: 54, scope: !7255)
!7282 = !DILocation(line: 397, column: 56, scope: !7255)
!7283 = !DILocation(line: 397, column: 19, scope: !7255)
!7284 = !DILocation(line: 397, column: 12, scope: !7255)
!7285 = !DILocation(line: 397, column: 9, scope: !7255)
!7286 = !DILocation(line: 397, column: 16, scope: !7255)
!7287 = !DILocation(line: 397, column: 17, scope: !7255)
!7288 = !DILocation(line: 398, column: 12, scope: !7255)
!7289 = !DILocation(line: 398, column: 9, scope: !7255)
!7290 = !DILocation(line: 398, column: 14, scope: !7255)
!7291 = !DILocation(line: 399, column: 8, scope: !7255)
!7292 = !DILocation(line: 400, column: 7, scope: !7247)
!7293 = !DILocation(line: 390, column: 28, scope: !7241)
!7294 = !DILocation(line: 390, column: 7, scope: !7241)
!7295 = distinct !{!7295, !7244, !7296}
!7296 = !DILocation(line: 400, column: 7, scope: !7237)
!7297 = !DILocation(line: 401, column: 6, scope: !7238)
!7298 = !DILocation(line: 402, column: 5, scope: !7232)
!7299 = !DILocation(line: 388, column: 21, scope: !7227)
!7300 = !DILocation(line: 388, column: 5, scope: !7227)
!7301 = distinct !{!7301, !7229, !7302}
!7302 = !DILocation(line: 402, column: 5, scope: !7223)
!7303 = !DILocation(line: 403, column: 4, scope: !7224)
!7304 = !DILocation(line: 387, column: 30, scope: !7220)
!7305 = !DILocation(line: 387, column: 36, scope: !7220)
!7306 = !DILocation(line: 387, column: 29, scope: !7220)
!7307 = !DILocation(line: 387, column: 4, scope: !7220)
!7308 = distinct !{!7308, !7221, !7309}
!7309 = !DILocation(line: 403, column: 4, scope: !7215)
!7310 = !DILocation(line: 404, column: 3, scope: !7216)
!7311 = !DILocation(line: 406, column: 9, scope: !7312)
!7312 = distinct !DILexicalBlock(scope: !6924, file: !3, line: 406, column: 3)
!7313 = !DILocation(line: 406, column: 8, scope: !7312)
!7314 = !DILocation(line: 406, column: 13, scope: !7315)
!7315 = distinct !DILexicalBlock(scope: !7312, file: !3, line: 406, column: 3)
!7316 = !DILocation(line: 406, column: 15, scope: !7315)
!7317 = !DILocation(line: 406, column: 14, scope: !7315)
!7318 = !DILocation(line: 406, column: 3, scope: !7312)
!7319 = !DILocation(line: 408, column: 19, scope: !7320)
!7320 = distinct !DILexicalBlock(scope: !7315, file: !3, line: 406, column: 28)
!7321 = !DILocation(line: 408, column: 10, scope: !7320)
!7322 = !DILocation(line: 408, column: 33, scope: !7320)
!7323 = !DILocation(line: 408, column: 23, scope: !7320)
!7324 = !DILocation(line: 408, column: 4, scope: !7320)
!7325 = !DILocation(line: 411, column: 14, scope: !7320)
!7326 = !DILocation(line: 412, column: 20, scope: !7320)
!7327 = !DILocation(line: 412, column: 11, scope: !7320)
!7328 = !DILocation(line: 412, column: 7, scope: !7320)
!7329 = !DILocation(line: 412, column: 4, scope: !7320)
!7330 = !DILocation(line: 412, column: 9, scope: !7320)
!7331 = !DILocation(line: 414, column: 10, scope: !7332)
!7332 = distinct !DILexicalBlock(scope: !7320, file: !3, line: 414, column: 4)
!7333 = !DILocation(line: 414, column: 9, scope: !7332)
!7334 = !DILocation(line: 414, column: 14, scope: !7335)
!7335 = distinct !DILexicalBlock(scope: !7332, file: !3, line: 414, column: 4)
!7336 = !DILocation(line: 414, column: 26, scope: !7335)
!7337 = !DILocation(line: 414, column: 16, scope: !7335)
!7338 = !DILocation(line: 414, column: 15, scope: !7335)
!7339 = !DILocation(line: 414, column: 4, scope: !7332)
!7340 = !DILocation(line: 416, column: 15, scope: !7341)
!7341 = distinct !DILexicalBlock(scope: !7335, file: !3, line: 414, column: 35)
!7342 = !DILocation(line: 416, column: 8, scope: !7341)
!7343 = !DILocation(line: 416, column: 5, scope: !7341)
!7344 = !DILocation(line: 416, column: 12, scope: !7341)
!7345 = !DILocation(line: 416, column: 13, scope: !7341)
!7346 = !DILocation(line: 417, column: 8, scope: !7341)
!7347 = !DILocation(line: 417, column: 5, scope: !7341)
!7348 = !DILocation(line: 417, column: 10, scope: !7341)
!7349 = !DILocation(line: 419, column: 27, scope: !7341)
!7350 = !DILocation(line: 419, column: 24, scope: !7341)
!7351 = !DILocation(line: 419, column: 31, scope: !7341)
!7352 = !DILocation(line: 419, column: 23, scope: !7341)
!7353 = !DILocation(line: 419, column: 16, scope: !7341)
!7354 = !DILocation(line: 420, column: 15, scope: !7341)
!7355 = !DILocation(line: 420, column: 8, scope: !7341)
!7356 = !DILocation(line: 420, column: 5, scope: !7341)
!7357 = !DILocation(line: 420, column: 12, scope: !7341)
!7358 = !DILocation(line: 420, column: 13, scope: !7341)
!7359 = !DILocation(line: 421, column: 8, scope: !7341)
!7360 = !DILocation(line: 421, column: 5, scope: !7341)
!7361 = !DILocation(line: 421, column: 10, scope: !7341)
!7362 = !DILocation(line: 422, column: 4, scope: !7341)
!7363 = !DILocation(line: 414, column: 31, scope: !7335)
!7364 = !DILocation(line: 414, column: 4, scope: !7335)
!7365 = distinct !{!7365, !7339, !7366}
!7366 = !DILocation(line: 422, column: 4, scope: !7332)
!7367 = !DILocation(line: 425, column: 20, scope: !7320)
!7368 = !DILocation(line: 425, column: 11, scope: !7320)
!7369 = !DILocation(line: 425, column: 7, scope: !7320)
!7370 = !DILocation(line: 425, column: 4, scope: !7320)
!7371 = !DILocation(line: 425, column: 9, scope: !7320)
!7372 = !DILocation(line: 426, column: 10, scope: !7373)
!7373 = distinct !DILexicalBlock(scope: !7320, file: !3, line: 426, column: 4)
!7374 = !DILocation(line: 426, column: 9, scope: !7373)
!7375 = !DILocation(line: 426, column: 14, scope: !7376)
!7376 = distinct !DILexicalBlock(scope: !7373, file: !3, line: 426, column: 4)
!7377 = !DILocation(line: 426, column: 26, scope: !7376)
!7378 = !DILocation(line: 426, column: 16, scope: !7376)
!7379 = !DILocation(line: 426, column: 15, scope: !7376)
!7380 = !DILocation(line: 426, column: 4, scope: !7373)
!7381 = !DILocation(line: 427, column: 9, scope: !7382)
!7382 = distinct !DILexicalBlock(scope: !7383, file: !3, line: 427, column: 9)
!7383 = distinct !DILexicalBlock(scope: !7376, file: !3, line: 426, column: 35)
!7384 = !DILocation(line: 427, column: 10, scope: !7382)
!7385 = !DILocation(line: 427, column: 25, scope: !7382)
!7386 = !DILocation(line: 427, column: 15, scope: !7382)
!7387 = !DILocation(line: 427, column: 13, scope: !7382)
!7388 = !DILocation(line: 427, column: 9, scope: !7383)
!7389 = !DILocation(line: 428, column: 20, scope: !7390)
!7390 = distinct !DILexicalBlock(scope: !7382, file: !3, line: 427, column: 29)
!7391 = !DILocation(line: 428, column: 17, scope: !7390)
!7392 = !DILocation(line: 428, column: 24, scope: !7390)
!7393 = !DILocation(line: 428, column: 25, scope: !7390)
!7394 = !DILocation(line: 428, column: 37, scope: !7390)
!7395 = !DILocation(line: 428, column: 34, scope: !7390)
!7396 = !DILocation(line: 428, column: 39, scope: !7390)
!7397 = !DILocation(line: 428, column: 44, scope: !7390)
!7398 = !DILocation(line: 428, column: 45, scope: !7390)
!7399 = !DILocation(line: 428, column: 30, scope: !7390)
!7400 = !DILocation(line: 428, column: 9, scope: !7390)
!7401 = !DILocation(line: 428, column: 6, scope: !7390)
!7402 = !DILocation(line: 428, column: 13, scope: !7390)
!7403 = !DILocation(line: 428, column: 14, scope: !7390)
!7404 = !DILocation(line: 429, column: 9, scope: !7390)
!7405 = !DILocation(line: 429, column: 6, scope: !7390)
!7406 = !DILocation(line: 429, column: 11, scope: !7390)
!7407 = !DILocation(line: 430, column: 20, scope: !7390)
!7408 = !DILocation(line: 430, column: 17, scope: !7390)
!7409 = !DILocation(line: 430, column: 24, scope: !7390)
!7410 = !DILocation(line: 430, column: 25, scope: !7390)
!7411 = !DILocation(line: 430, column: 37, scope: !7390)
!7412 = !DILocation(line: 430, column: 34, scope: !7390)
!7413 = !DILocation(line: 430, column: 39, scope: !7390)
!7414 = !DILocation(line: 430, column: 44, scope: !7390)
!7415 = !DILocation(line: 430, column: 45, scope: !7390)
!7416 = !DILocation(line: 430, column: 30, scope: !7390)
!7417 = !DILocation(line: 430, column: 9, scope: !7390)
!7418 = !DILocation(line: 430, column: 6, scope: !7390)
!7419 = !DILocation(line: 430, column: 13, scope: !7390)
!7420 = !DILocation(line: 430, column: 14, scope: !7390)
!7421 = !DILocation(line: 431, column: 9, scope: !7390)
!7422 = !DILocation(line: 431, column: 6, scope: !7390)
!7423 = !DILocation(line: 431, column: 11, scope: !7390)
!7424 = !DILocation(line: 432, column: 5, scope: !7390)
!7425 = !DILocation(line: 434, column: 20, scope: !7426)
!7426 = distinct !DILexicalBlock(scope: !7382, file: !3, line: 433, column: 10)
!7427 = !DILocation(line: 434, column: 17, scope: !7426)
!7428 = !DILocation(line: 434, column: 24, scope: !7426)
!7429 = !DILocation(line: 434, column: 25, scope: !7426)
!7430 = !DILocation(line: 434, column: 30, scope: !7426)
!7431 = !DILocation(line: 434, column: 9, scope: !7426)
!7432 = !DILocation(line: 434, column: 6, scope: !7426)
!7433 = !DILocation(line: 434, column: 13, scope: !7426)
!7434 = !DILocation(line: 434, column: 14, scope: !7426)
!7435 = !DILocation(line: 435, column: 9, scope: !7426)
!7436 = !DILocation(line: 435, column: 6, scope: !7426)
!7437 = !DILocation(line: 435, column: 11, scope: !7426)
!7438 = !DILocation(line: 436, column: 20, scope: !7426)
!7439 = !DILocation(line: 436, column: 17, scope: !7426)
!7440 = !DILocation(line: 436, column: 24, scope: !7426)
!7441 = !DILocation(line: 436, column: 25, scope: !7426)
!7442 = !DILocation(line: 436, column: 30, scope: !7426)
!7443 = !DILocation(line: 436, column: 9, scope: !7426)
!7444 = !DILocation(line: 436, column: 6, scope: !7426)
!7445 = !DILocation(line: 436, column: 13, scope: !7426)
!7446 = !DILocation(line: 436, column: 14, scope: !7426)
!7447 = !DILocation(line: 437, column: 9, scope: !7426)
!7448 = !DILocation(line: 437, column: 6, scope: !7426)
!7449 = !DILocation(line: 437, column: 11, scope: !7426)
!7450 = !DILocation(line: 439, column: 4, scope: !7383)
!7451 = !DILocation(line: 426, column: 31, scope: !7376)
!7452 = !DILocation(line: 426, column: 4, scope: !7376)
!7453 = distinct !{!7453, !7380, !7454}
!7454 = !DILocation(line: 439, column: 4, scope: !7373)
!7455 = !DILocation(line: 442, column: 20, scope: !7320)
!7456 = !DILocation(line: 442, column: 11, scope: !7320)
!7457 = !DILocation(line: 442, column: 7, scope: !7320)
!7458 = !DILocation(line: 442, column: 4, scope: !7320)
!7459 = !DILocation(line: 442, column: 9, scope: !7320)
!7460 = !DILocation(line: 443, column: 14, scope: !7320)
!7461 = !DILocation(line: 443, column: 4, scope: !7320)
!7462 = !DILocation(line: 443, column: 17, scope: !7320)
!7463 = !DILocation(line: 444, column: 3, scope: !7320)
!7464 = !DILocation(line: 406, column: 24, scope: !7315)
!7465 = !DILocation(line: 406, column: 3, scope: !7315)
!7466 = distinct !{!7466, !7318, !7467}
!7467 = !DILocation(line: 444, column: 3, scope: !7312)
!7468 = !DILocation(line: 446, column: 25, scope: !6924)
!7469 = !DILocation(line: 446, column: 56, scope: !6924)
!7470 = !DILocation(line: 446, column: 55, scope: !6924)
!7471 = !DILocation(line: 446, column: 59, scope: !6924)
!7472 = !DILocation(line: 446, column: 3, scope: !6924)
!7473 = !DILocation(line: 446, column: 13, scope: !6924)
!7474 = !DILocation(line: 446, column: 21, scope: !6924)
!7475 = !DILocation(line: 446, column: 23, scope: !6924)
!7476 = !DILocation(line: 447, column: 3, scope: !6924)
!7477 = !DILocation(line: 447, column: 13, scope: !6924)
!7478 = !DILocation(line: 447, column: 20, scope: !6924)
!7479 = !DILocation(line: 447, column: 22, scope: !6924)
!7480 = !DILocation(line: 450, column: 8, scope: !6924)
!7481 = !DILocation(line: 450, column: 18, scope: !6924)
!7482 = !DILocation(line: 450, column: 26, scope: !6924)
!7483 = !DILocation(line: 450, column: 6, scope: !6924)
!7484 = !DILocation(line: 451, column: 3, scope: !6924)
!7485 = !DILocation(line: 452, column: 8, scope: !7486)
!7486 = distinct !DILexicalBlock(scope: !6924, file: !3, line: 451, column: 13)
!7487 = !DILocation(line: 453, column: 9, scope: !7486)
!7488 = !DILocation(line: 455, column: 10, scope: !7489)
!7489 = distinct !DILexicalBlock(scope: !7486, file: !3, line: 455, column: 4)
!7490 = !DILocation(line: 455, column: 9, scope: !7489)
!7491 = !DILocation(line: 455, column: 14, scope: !7492)
!7492 = distinct !DILexicalBlock(scope: !7489, file: !3, line: 455, column: 4)
!7493 = !DILocation(line: 455, column: 16, scope: !7492)
!7494 = !DILocation(line: 455, column: 15, scope: !7492)
!7495 = !DILocation(line: 455, column: 4, scope: !7489)
!7496 = !DILocation(line: 456, column: 19, scope: !7497)
!7497 = distinct !DILexicalBlock(scope: !7498, file: !3, line: 456, column: 9)
!7498 = distinct !DILexicalBlock(scope: !7492, file: !3, line: 455, column: 29)
!7499 = !DILocation(line: 456, column: 9, scope: !7497)
!7500 = !DILocation(line: 456, column: 22, scope: !7497)
!7501 = !DILocation(line: 456, column: 27, scope: !7497)
!7502 = !DILocation(line: 456, column: 33, scope: !7497)
!7503 = !DILocation(line: 456, column: 39, scope: !7497)
!7504 = !DILocation(line: 456, column: 36, scope: !7497)
!7505 = !DILocation(line: 456, column: 43, scope: !7497)
!7506 = !DILocation(line: 456, column: 47, scope: !7497)
!7507 = !DILocation(line: 456, column: 45, scope: !7497)
!7508 = !DILocation(line: 456, column: 9, scope: !7498)
!7509 = !DILocation(line: 457, column: 15, scope: !7510)
!7510 = distinct !DILexicalBlock(scope: !7497, file: !3, line: 456, column: 54)
!7511 = !DILocation(line: 457, column: 12, scope: !7510)
!7512 = !DILocation(line: 457, column: 19, scope: !7510)
!7513 = !DILocation(line: 457, column: 10, scope: !7510)
!7514 = !DILocation(line: 458, column: 11, scope: !7510)
!7515 = !DILocation(line: 459, column: 5, scope: !7510)
!7516 = !DILocation(line: 460, column: 4, scope: !7498)
!7517 = !DILocation(line: 455, column: 25, scope: !7492)
!7518 = !DILocation(line: 455, column: 4, scope: !7492)
!7519 = distinct !{!7519, !7495, !7520}
!7520 = !DILocation(line: 460, column: 4, scope: !7489)
!7521 = !DILocation(line: 462, column: 9, scope: !7522)
!7522 = distinct !DILexicalBlock(scope: !7486, file: !3, line: 462, column: 8)
!7523 = !DILocation(line: 462, column: 8, scope: !7486)
!7524 = !DILocation(line: 463, column: 5, scope: !7522)
!7525 = !DILocation(line: 465, column: 12, scope: !7486)
!7526 = !DILocation(line: 465, column: 4, scope: !7486)
!7527 = !DILocation(line: 465, column: 9, scope: !7486)
!7528 = !DILocation(line: 465, column: 10, scope: !7486)
!7529 = !DILocation(line: 466, column: 4, scope: !7486)
!7530 = !DILocation(line: 466, column: 9, scope: !7486)
!7531 = !DILocation(line: 466, column: 10, scope: !7486)
!7532 = !DILocation(line: 468, column: 14, scope: !7486)
!7533 = !DILocation(line: 469, column: 10, scope: !7534)
!7534 = distinct !DILexicalBlock(scope: !7486, file: !3, line: 469, column: 4)
!7535 = !DILocation(line: 469, column: 9, scope: !7534)
!7536 = !DILocation(line: 469, column: 14, scope: !7537)
!7537 = distinct !DILexicalBlock(scope: !7534, file: !3, line: 469, column: 4)
!7538 = !DILocation(line: 469, column: 16, scope: !7537)
!7539 = !DILocation(line: 469, column: 15, scope: !7537)
!7540 = !DILocation(line: 469, column: 4, scope: !7534)
!7541 = !DILocation(line: 470, column: 19, scope: !7542)
!7542 = distinct !DILexicalBlock(scope: !7543, file: !3, line: 470, column: 9)
!7543 = distinct !DILexicalBlock(scope: !7537, file: !3, line: 469, column: 29)
!7544 = !DILocation(line: 470, column: 9, scope: !7542)
!7545 = !DILocation(line: 470, column: 22, scope: !7542)
!7546 = !DILocation(line: 470, column: 28, scope: !7542)
!7547 = !DILocation(line: 470, column: 25, scope: !7542)
!7548 = !DILocation(line: 470, column: 32, scope: !7542)
!7549 = !DILocation(line: 470, column: 37, scope: !7542)
!7550 = !DILocation(line: 470, column: 34, scope: !7542)
!7551 = !DILocation(line: 470, column: 9, scope: !7543)
!7552 = !DILocation(line: 471, column: 9, scope: !7553)
!7553 = distinct !DILexicalBlock(scope: !7542, file: !3, line: 470, column: 43)
!7554 = !DILocation(line: 471, column: 6, scope: !7553)
!7555 = !DILocation(line: 471, column: 11, scope: !7553)
!7556 = !DILocation(line: 472, column: 16, scope: !7553)
!7557 = !DILocation(line: 472, column: 6, scope: !7553)
!7558 = !DILocation(line: 472, column: 18, scope: !7553)
!7559 = !DILocation(line: 473, column: 5, scope: !7553)
!7560 = !DILocation(line: 475, column: 18, scope: !7561)
!7561 = distinct !DILexicalBlock(scope: !7543, file: !3, line: 475, column: 9)
!7562 = !DILocation(line: 475, column: 9, scope: !7561)
!7563 = !DILocation(line: 475, column: 27, scope: !7561)
!7564 = !DILocation(line: 475, column: 24, scope: !7561)
!7565 = !DILocation(line: 475, column: 21, scope: !7561)
!7566 = !DILocation(line: 475, column: 9, scope: !7543)
!7567 = !DILocation(line: 476, column: 20, scope: !7561)
!7568 = !DILocation(line: 476, column: 17, scope: !7561)
!7569 = !DILocation(line: 476, column: 6, scope: !7561)
!7570 = !DILocation(line: 478, column: 24, scope: !7561)
!7571 = !DILocation(line: 478, column: 21, scope: !7561)
!7572 = !DILocation(line: 478, column: 26, scope: !7561)
!7573 = !DILocation(line: 478, column: 31, scope: !7561)
!7574 = !DILocation(line: 478, column: 35, scope: !7561)
!7575 = !DILocation(line: 478, column: 33, scope: !7561)
!7576 = !DILocation(line: 478, column: 17, scope: !7561)
!7577 = !DILocation(line: 479, column: 4, scope: !7543)
!7578 = !DILocation(line: 469, column: 25, scope: !7537)
!7579 = !DILocation(line: 469, column: 4, scope: !7537)
!7580 = distinct !{!7580, !7540, !7581}
!7581 = !DILocation(line: 479, column: 4, scope: !7534)
!7582 = !DILocation(line: 481, column: 12, scope: !7486)
!7583 = !DILocation(line: 481, column: 4, scope: !7486)
!7584 = !DILocation(line: 481, column: 9, scope: !7486)
!7585 = !DILocation(line: 481, column: 10, scope: !7486)
!7586 = !DILocation(line: 482, column: 7, scope: !7486)
!7587 = !DILocation(line: 483, column: 4, scope: !7486)
!7588 = !DILocation(line: 483, column: 14, scope: !7486)
!7589 = !DILocation(line: 483, column: 21, scope: !7486)
!7590 = !DILocation(line: 483, column: 23, scope: !7486)
!7591 = distinct !{!7591, !7484, !7592}
!7592 = !DILocation(line: 484, column: 3, scope: !6924)
!7593 = !DILocation(line: 486, column: 12, scope: !6924)
!7594 = !DILocation(line: 486, column: 22, scope: !6924)
!7595 = !DILocation(line: 486, column: 29, scope: !6924)
!7596 = !DILocation(line: 486, column: 10, scope: !6924)
!7597 = !DILocation(line: 487, column: 16, scope: !6924)
!7598 = !DILocation(line: 487, column: 13, scope: !6924)
!7599 = !DILocation(line: 489, column: 32, scope: !6924)
!7600 = !DILocation(line: 489, column: 42, scope: !6924)
!7601 = !DILocation(line: 489, column: 50, scope: !6924)
!7602 = !DILocation(line: 489, column: 54, scope: !6924)
!7603 = !DILocation(line: 489, column: 63, scope: !6924)
!7604 = !DILocation(line: 489, column: 68, scope: !6924)
!7605 = !DILocation(line: 489, column: 11, scope: !6924)
!7606 = !DILocation(line: 489, column: 9, scope: !6924)
!7607 = !DILocation(line: 490, column: 24, scope: !6924)
!7608 = !DILocation(line: 490, column: 3, scope: !6924)
!7609 = !DILocation(line: 490, column: 13, scope: !6924)
!7610 = !DILocation(line: 490, column: 20, scope: !6924)
!7611 = !DILocation(line: 490, column: 22, scope: !6924)
!7612 = !DILocation(line: 491, column: 17, scope: !6924)
!7613 = !DILocation(line: 491, column: 14, scope: !6924)
!7614 = !DILocation(line: 493, column: 7, scope: !7615)
!7615 = distinct !DILexicalBlock(scope: !6924, file: !3, line: 493, column: 7)
!7616 = !DILocation(line: 493, column: 16, scope: !7615)
!7617 = !DILocation(line: 493, column: 14, scope: !7615)
!7618 = !DILocation(line: 493, column: 7, scope: !6924)
!7619 = !DILocation(line: 494, column: 12, scope: !7620)
!7620 = distinct !DILexicalBlock(scope: !7615, file: !3, line: 493, column: 25)
!7621 = !DILocation(line: 494, column: 43, scope: !7620)
!7622 = !DILocation(line: 494, column: 42, scope: !7620)
!7623 = !DILocation(line: 494, column: 10, scope: !7620)
!7624 = !DILocation(line: 495, column: 11, scope: !7620)
!7625 = !DILocation(line: 495, column: 4, scope: !7620)
!7626 = !DILocation(line: 495, column: 19, scope: !7620)
!7627 = !DILocation(line: 495, column: 29, scope: !7620)
!7628 = !DILocation(line: 495, column: 37, scope: !7620)
!7629 = !DILocation(line: 495, column: 60, scope: !7620)
!7630 = !DILocation(line: 495, column: 59, scope: !7620)
!7631 = !DILocation(line: 496, column: 4, scope: !7620)
!7632 = !DILocation(line: 496, column: 14, scope: !7620)
!7633 = !DILocation(line: 496, column: 24, scope: !7620)
!7634 = !DILocation(line: 496, column: 32, scope: !7620)
!7635 = !DILocation(line: 497, column: 26, scope: !7620)
!7636 = !DILocation(line: 497, column: 4, scope: !7620)
!7637 = !DILocation(line: 497, column: 14, scope: !7620)
!7638 = !DILocation(line: 497, column: 22, scope: !7620)
!7639 = !DILocation(line: 497, column: 24, scope: !7620)
!7640 = !DILocation(line: 498, column: 3, scope: !7620)
!7641 = !DILocation(line: 500, column: 3, scope: !6924)
!7642 = !DILocation(line: 500, column: 13, scope: !6924)
!7643 = !DILocation(line: 501, column: 2, scope: !6924)
!7644 = !DILocation(line: 332, column: 26, scope: !6916)
!7645 = !DILocation(line: 332, column: 32, scope: !6916)
!7646 = !DILocation(line: 332, column: 39, scope: !6916)
!7647 = !DILocation(line: 332, column: 2, scope: !6916)
!7648 = distinct !{!7648, !6921, !7649}
!7649 = !DILocation(line: 501, column: 2, scope: !6913)
!7650 = !DILocation(line: 504, column: 1, scope: !6813)
!7651 = distinct !DISubprogram(name: "deep_alpha", scope: !3, file: !3, line: 291, type: !7652, scopeLine: 292, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!7652 = !DISubroutineType(types: !7653)
!7653 = !{!7, !29, !8, !8, !8}
!7654 = !DILocalVariable(name: "re", arg: 1, scope: !7651, file: !3, line: 291, type: !29)
!7655 = !DILocation(line: 291, column: 33, scope: !7651)
!7656 = !DILocalVariable(name: "obinr", arg: 2, scope: !7651, file: !3, line: 291, type: !8)
!7657 = !DILocation(line: 291, column: 41, scope: !7651)
!7658 = !DILocalVariable(name: "facenr", arg: 3, scope: !7651, file: !3, line: 291, type: !8)
!7659 = !DILocation(line: 291, column: 52, scope: !7651)
!7660 = !DILocalVariable(name: "strand", arg: 4, scope: !7651, file: !3, line: 291, type: !8)
!7661 = !DILocation(line: 291, column: 64, scope: !7651)
!7662 = !DILocalVariable(name: "obi", scope: !7651, file: !3, line: 293, type: !2609)
!7663 = !DILocation(line: 293, column: 21, scope: !7651)
!7664 = !DILocation(line: 293, column: 27, scope: !7651)
!7665 = !DILocation(line: 293, column: 31, scope: !7651)
!7666 = !DILocation(line: 293, column: 46, scope: !7651)
!7667 = !DILocalVariable(name: "ma", scope: !7651, file: !3, line: 294, type: !2623)
!7668 = !DILocation(line: 294, column: 12, scope: !7651)
!7669 = !DILocation(line: 296, column: 6, scope: !7670)
!7670 = distinct !DILexicalBlock(scope: !7651, file: !3, line: 296, column: 6)
!7671 = !DILocation(line: 296, column: 6, scope: !7651)
!7672 = !DILocalVariable(name: "strand", scope: !7673, file: !3, line: 297, type: !7674)
!7673 = distinct !DILexicalBlock(scope: !7670, file: !3, line: 296, column: 14)
!7674 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7675, size: 64)
!7675 = !DIDerivedType(tag: DW_TAG_typedef, name: "StrandRen", file: !16, line: 481, baseType: !2009)
!7676 = !DILocation(line: 297, column: 14, scope: !7673)
!7677 = !DILocation(line: 297, column: 41, scope: !7673)
!7678 = !DILocation(line: 297, column: 46, scope: !7673)
!7679 = !DILocation(line: 297, column: 51, scope: !7673)
!7680 = !DILocation(line: 297, column: 57, scope: !7673)
!7681 = !DILocation(line: 297, column: 22, scope: !7673)
!7682 = !DILocation(line: 298, column: 7, scope: !7673)
!7683 = !DILocation(line: 298, column: 15, scope: !7673)
!7684 = !DILocation(line: 298, column: 23, scope: !7673)
!7685 = !DILocation(line: 298, column: 5, scope: !7673)
!7686 = !DILocation(line: 299, column: 2, scope: !7673)
!7687 = !DILocalVariable(name: "vlr", scope: !7688, file: !3, line: 301, type: !2615)
!7688 = distinct !DILexicalBlock(scope: !7670, file: !3, line: 300, column: 7)
!7689 = !DILocation(line: 301, column: 12, scope: !7688)
!7690 = !DILocation(line: 301, column: 34, scope: !7688)
!7691 = !DILocation(line: 301, column: 39, scope: !7688)
!7692 = !DILocation(line: 301, column: 45, scope: !7688)
!7693 = !DILocation(line: 301, column: 51, scope: !7688)
!7694 = !DILocation(line: 301, column: 55, scope: !7688)
!7695 = !DILocation(line: 301, column: 17, scope: !7688)
!7696 = !DILocation(line: 302, column: 7, scope: !7688)
!7697 = !DILocation(line: 302, column: 12, scope: !7688)
!7698 = !DILocation(line: 302, column: 5, scope: !7688)
!7699 = !DILocation(line: 305, column: 9, scope: !7651)
!7700 = !DILocation(line: 305, column: 13, scope: !7651)
!7701 = !DILocation(line: 305, column: 2, scope: !7651)
!7702 = distinct !DISubprogram(name: "verg_deepsample", scope: !3, file: !3, line: 176, type: !7703, scopeLine: 177, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!7703 = !DISubroutineType(types: !7704)
!7704 = !{!8, !7705, !7705}
!7705 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7706, size: 64)
!7706 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!7707 = !DILocalVariable(name: "poin1", arg: 1, scope: !7702, file: !3, line: 176, type: !7705)
!7708 = !DILocation(line: 176, column: 40, scope: !7702)
!7709 = !DILocalVariable(name: "poin2", arg: 2, scope: !7702, file: !3, line: 176, type: !7705)
!7710 = !DILocation(line: 176, column: 59, scope: !7702)
!7711 = !DILocalVariable(name: "ds1", scope: !7702, file: !3, line: 178, type: !13)
!7712 = !DILocation(line: 178, column: 20, scope: !7702)
!7713 = !DILocation(line: 178, column: 44, scope: !7702)
!7714 = !DILocation(line: 178, column: 25, scope: !7702)
!7715 = !DILocalVariable(name: "ds2", scope: !7702, file: !3, line: 179, type: !13)
!7716 = !DILocation(line: 179, column: 20, scope: !7702)
!7717 = !DILocation(line: 179, column: 44, scope: !7702)
!7718 = !DILocation(line: 179, column: 25, scope: !7702)
!7719 = !DILocation(line: 181, column: 6, scope: !7720)
!7720 = distinct !DILexicalBlock(scope: !7702, file: !3, line: 181, column: 6)
!7721 = !DILocation(line: 181, column: 11, scope: !7720)
!7722 = !DILocation(line: 181, column: 15, scope: !7720)
!7723 = !DILocation(line: 181, column: 20, scope: !7720)
!7724 = !DILocation(line: 181, column: 13, scope: !7720)
!7725 = !DILocation(line: 181, column: 6, scope: !7702)
!7726 = !DILocation(line: 181, column: 23, scope: !7720)
!7727 = !DILocation(line: 182, column: 11, scope: !7728)
!7728 = distinct !DILexicalBlock(scope: !7720, file: !3, line: 182, column: 11)
!7729 = !DILocation(line: 182, column: 16, scope: !7728)
!7730 = !DILocation(line: 182, column: 21, scope: !7728)
!7731 = !DILocation(line: 182, column: 26, scope: !7728)
!7732 = !DILocation(line: 182, column: 18, scope: !7728)
!7733 = !DILocation(line: 182, column: 11, scope: !7720)
!7734 = !DILocation(line: 182, column: 29, scope: !7728)
!7735 = !DILocation(line: 183, column: 7, scope: !7728)
!7736 = !DILocation(line: 184, column: 1, scope: !7702)
!7737 = distinct !DISubprogram(name: "compress_deepsamples", scope: !3, file: !3, line: 186, type: !7738, scopeLine: 187, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!7738 = !DISubroutineType(types: !7739)
!7739 = !{!8, !3613, !8, !7}
!7740 = !DILocalVariable(name: "dsample", arg: 1, scope: !7737, file: !3, line: 186, type: !3613)
!7741 = !DILocation(line: 186, column: 45, scope: !7737)
!7742 = !DILocalVariable(name: "tot", arg: 2, scope: !7737, file: !3, line: 186, type: !8)
!7743 = !DILocation(line: 186, column: 58, scope: !7737)
!7744 = !DILocalVariable(name: "epsilon", arg: 3, scope: !7737, file: !3, line: 186, type: !7)
!7745 = !DILocation(line: 186, column: 69, scope: !7737)
!7746 = !DILocalVariable(name: "ds", scope: !7737, file: !3, line: 190, type: !3613)
!7747 = !DILocation(line: 190, column: 14, scope: !7737)
!7748 = !DILocalVariable(name: "newds", scope: !7737, file: !3, line: 190, type: !3613)
!7749 = !DILocation(line: 190, column: 19, scope: !7737)
!7750 = !DILocalVariable(name: "v", scope: !7737, file: !3, line: 191, type: !7)
!7751 = !DILocation(line: 191, column: 8, scope: !7737)
!7752 = !DILocalVariable(name: "slope", scope: !7737, file: !3, line: 192, type: !21)
!7753 = !DILocation(line: 192, column: 9, scope: !7737)
!7754 = !DILocalVariable(name: "slopemin", scope: !7737, file: !3, line: 192, type: !21)
!7755 = !DILocation(line: 192, column: 16, scope: !7737)
!7756 = !DILocalVariable(name: "slopemax", scope: !7737, file: !3, line: 192, type: !21)
!7757 = !DILocation(line: 192, column: 26, scope: !7737)
!7758 = !DILocalVariable(name: "min", scope: !7737, file: !3, line: 192, type: !21)
!7759 = !DILocation(line: 192, column: 36, scope: !7737)
!7760 = !DILocalVariable(name: "max", scope: !7737, file: !3, line: 192, type: !21)
!7761 = !DILocation(line: 192, column: 41, scope: !7737)
!7762 = !DILocalVariable(name: "div", scope: !7737, file: !3, line: 192, type: !21)
!7763 = !DILocation(line: 192, column: 46, scope: !7737)
!7764 = !DILocalVariable(name: "newmin", scope: !7737, file: !3, line: 192, type: !21)
!7765 = !DILocation(line: 192, column: 51, scope: !7737)
!7766 = !DILocalVariable(name: "newmax", scope: !7737, file: !3, line: 192, type: !21)
!7767 = !DILocation(line: 192, column: 59, scope: !7737)
!7768 = !DILocalVariable(name: "a", scope: !7737, file: !3, line: 193, type: !8)
!7769 = !DILocation(line: 193, column: 6, scope: !7737)
!7770 = !DILocalVariable(name: "first", scope: !7737, file: !3, line: 193, type: !8)
!7771 = !DILocation(line: 193, column: 9, scope: !7737)
!7772 = !DILocalVariable(name: "z", scope: !7737, file: !3, line: 193, type: !8)
!7773 = !DILocation(line: 193, column: 16, scope: !7737)
!7774 = !DILocalVariable(name: "newtot", scope: !7737, file: !3, line: 193, type: !8)
!7775 = !DILocation(line: 193, column: 19, scope: !7737)
!7776 = !DILocation(line: 204, column: 6, scope: !7737)
!7777 = !DILocation(line: 204, column: 4, scope: !7737)
!7778 = !DILocation(line: 205, column: 9, scope: !7737)
!7779 = !DILocation(line: 205, column: 7, scope: !7737)
!7780 = !DILocation(line: 206, column: 3, scope: !7737)
!7781 = !DILocation(line: 209, column: 8, scope: !7782)
!7782 = distinct !DILexicalBlock(scope: !7737, file: !3, line: 209, column: 2)
!7783 = !DILocation(line: 209, column: 14, scope: !7782)
!7784 = !DILocation(line: 209, column: 7, scope: !7782)
!7785 = !DILocation(line: 209, column: 18, scope: !7786)
!7786 = distinct !DILexicalBlock(scope: !7782, file: !3, line: 209, column: 2)
!7787 = !DILocation(line: 209, column: 20, scope: !7786)
!7788 = !DILocation(line: 209, column: 19, scope: !7786)
!7789 = !DILocation(line: 209, column: 2, scope: !7782)
!7790 = !DILocation(line: 210, column: 11, scope: !7791)
!7791 = distinct !DILexicalBlock(scope: !7786, file: !3, line: 209, column: 36)
!7792 = !DILocation(line: 211, column: 11, scope: !7791)
!7793 = !DILocation(line: 212, column: 8, scope: !7791)
!7794 = !DILocation(line: 214, column: 3, scope: !7791)
!7795 = !DILocation(line: 214, column: 10, scope: !7796)
!7796 = distinct !DILexicalBlock(scope: !7797, file: !3, line: 214, column: 3)
!7797 = distinct !DILexicalBlock(scope: !7791, file: !3, line: 214, column: 3)
!7798 = !DILocation(line: 214, column: 12, scope: !7796)
!7799 = !DILocation(line: 214, column: 11, scope: !7796)
!7800 = !DILocation(line: 214, column: 3, scope: !7797)
!7801 = !DILocation(line: 216, column: 8, scope: !7802)
!7802 = distinct !DILexicalBlock(scope: !7803, file: !3, line: 216, column: 8)
!7803 = distinct !DILexicalBlock(scope: !7796, file: !3, line: 214, column: 28)
!7804 = !DILocation(line: 216, column: 12, scope: !7802)
!7805 = !DILocation(line: 216, column: 17, scope: !7802)
!7806 = !DILocation(line: 216, column: 24, scope: !7802)
!7807 = !DILocation(line: 216, column: 14, scope: !7802)
!7808 = !DILocation(line: 216, column: 8, scope: !7803)
!7809 = !DILocation(line: 219, column: 17, scope: !7810)
!7810 = distinct !DILexicalBlock(scope: !7811, file: !3, line: 219, column: 9)
!7811 = distinct !DILexicalBlock(scope: !7802, file: !3, line: 216, column: 27)
!7812 = !DILocation(line: 219, column: 24, scope: !7810)
!7813 = !DILocation(line: 219, column: 28, scope: !7810)
!7814 = !DILocation(line: 219, column: 32, scope: !7810)
!7815 = !DILocation(line: 219, column: 26, scope: !7810)
!7816 = !DILocation(line: 219, column: 11, scope: !7810)
!7817 = !DILocation(line: 219, column: 38, scope: !7810)
!7818 = !DILocation(line: 219, column: 35, scope: !7810)
!7819 = !DILocation(line: 219, column: 9, scope: !7811)
!7820 = !DILocation(line: 220, column: 6, scope: !7821)
!7821 = distinct !DILexicalBlock(scope: !7810, file: !3, line: 219, column: 48)
!7822 = !DILocation(line: 222, column: 4, scope: !7811)
!7823 = !DILocation(line: 225, column: 40, scope: !7824)
!7824 = distinct !DILexicalBlock(scope: !7802, file: !3, line: 223, column: 9)
!7825 = !DILocation(line: 225, column: 44, scope: !7824)
!7826 = !DILocation(line: 225, column: 32, scope: !7824)
!7827 = !DILocation(line: 225, column: 56, scope: !7824)
!7828 = !DILocation(line: 225, column: 63, scope: !7824)
!7829 = !DILocation(line: 225, column: 48, scope: !7824)
!7830 = !DILocation(line: 225, column: 46, scope: !7824)
!7831 = !DILocation(line: 225, column: 29, scope: !7824)
!7832 = !DILocation(line: 225, column: 8, scope: !7824)
!7833 = !DILocation(line: 226, column: 20, scope: !7824)
!7834 = !DILocation(line: 226, column: 24, scope: !7824)
!7835 = !DILocation(line: 226, column: 28, scope: !7824)
!7836 = !DILocation(line: 226, column: 26, scope: !7824)
!7837 = !DILocation(line: 226, column: 39, scope: !7824)
!7838 = !DILocation(line: 226, column: 46, scope: !7824)
!7839 = !DILocation(line: 226, column: 37, scope: !7824)
!7840 = !DILocation(line: 226, column: 10, scope: !7824)
!7841 = !DILocation(line: 226, column: 51, scope: !7824)
!7842 = !DILocation(line: 226, column: 49, scope: !7824)
!7843 = !DILocation(line: 226, column: 8, scope: !7824)
!7844 = !DILocation(line: 227, column: 20, scope: !7824)
!7845 = !DILocation(line: 227, column: 24, scope: !7824)
!7846 = !DILocation(line: 227, column: 28, scope: !7824)
!7847 = !DILocation(line: 227, column: 26, scope: !7824)
!7848 = !DILocation(line: 227, column: 39, scope: !7824)
!7849 = !DILocation(line: 227, column: 46, scope: !7824)
!7850 = !DILocation(line: 227, column: 37, scope: !7824)
!7851 = !DILocation(line: 227, column: 10, scope: !7824)
!7852 = !DILocation(line: 227, column: 51, scope: !7824)
!7853 = !DILocation(line: 227, column: 49, scope: !7824)
!7854 = !DILocation(line: 227, column: 8, scope: !7824)
!7855 = !DILocation(line: 230, column: 9, scope: !7856)
!7856 = distinct !DILexicalBlock(scope: !7824, file: !3, line: 230, column: 9)
!7857 = !DILocation(line: 230, column: 9, scope: !7824)
!7858 = !DILocation(line: 231, column: 14, scope: !7859)
!7859 = distinct !DILexicalBlock(scope: !7856, file: !3, line: 230, column: 16)
!7860 = !DILocation(line: 231, column: 12, scope: !7859)
!7861 = !DILocation(line: 232, column: 14, scope: !7859)
!7862 = !DILocation(line: 232, column: 12, scope: !7859)
!7863 = !DILocation(line: 233, column: 11, scope: !7859)
!7864 = !DILocation(line: 234, column: 5, scope: !7859)
!7865 = !DILocation(line: 236, column: 14, scope: !7866)
!7866 = distinct !DILexicalBlock(scope: !7856, file: !3, line: 235, column: 10)
!7867 = !DILocation(line: 236, column: 12, scope: !7866)
!7868 = !DILocation(line: 237, column: 14, scope: !7866)
!7869 = !DILocation(line: 237, column: 12, scope: !7866)
!7870 = !DILocation(line: 240, column: 10, scope: !7871)
!7871 = distinct !DILexicalBlock(scope: !7866, file: !3, line: 240, column: 10)
!7872 = !DILocation(line: 240, column: 19, scope: !7871)
!7873 = !DILocation(line: 240, column: 17, scope: !7871)
!7874 = !DILocation(line: 240, column: 10, scope: !7866)
!7875 = !DILocation(line: 241, column: 9, scope: !7876)
!7876 = distinct !DILexicalBlock(scope: !7871, file: !3, line: 240, column: 27)
!7877 = !DILocation(line: 242, column: 8, scope: !7876)
!7878 = !DILocation(line: 243, column: 7, scope: !7876)
!7879 = !DILocation(line: 247, column: 15, scope: !7824)
!7880 = !DILocation(line: 247, column: 13, scope: !7824)
!7881 = !DILocation(line: 248, column: 15, scope: !7824)
!7882 = !DILocation(line: 248, column: 13, scope: !7824)
!7883 = !DILocation(line: 250, column: 3, scope: !7803)
!7884 = !DILocation(line: 214, column: 18, scope: !7796)
!7885 = !DILocation(line: 214, column: 24, scope: !7796)
!7886 = !DILocation(line: 214, column: 3, scope: !7796)
!7887 = distinct !{!7887, !7800, !7888}
!7888 = !DILocation(line: 250, column: 3, scope: !7797)
!7889 = !DILocation(line: 252, column: 7, scope: !7890)
!7890 = distinct !DILexicalBlock(scope: !7791, file: !3, line: 252, column: 7)
!7891 = !DILocation(line: 252, column: 12, scope: !7890)
!7892 = !DILocation(line: 252, column: 9, scope: !7890)
!7893 = !DILocation(line: 252, column: 7, scope: !7791)
!7894 = !DILocation(line: 253, column: 6, scope: !7895)
!7895 = distinct !DILexicalBlock(scope: !7890, file: !3, line: 252, column: 17)
!7896 = !DILocation(line: 254, column: 5, scope: !7895)
!7897 = !DILocation(line: 255, column: 3, scope: !7895)
!7898 = !DILocation(line: 258, column: 6, scope: !7791)
!7899 = !DILocation(line: 258, column: 10, scope: !7791)
!7900 = !DILocation(line: 258, column: 4, scope: !7791)
!7901 = !DILocation(line: 260, column: 7, scope: !7902)
!7902 = distinct !DILexicalBlock(scope: !7791, file: !3, line: 260, column: 7)
!7903 = !DILocation(line: 260, column: 13, scope: !7902)
!7904 = !DILocation(line: 260, column: 16, scope: !7902)
!7905 = !DILocation(line: 260, column: 19, scope: !7902)
!7906 = !DILocation(line: 260, column: 22, scope: !7902)
!7907 = !DILocation(line: 260, column: 17, scope: !7902)
!7908 = !DILocation(line: 260, column: 7, scope: !7791)
!7909 = !DILocation(line: 262, column: 7, scope: !7910)
!7910 = distinct !DILexicalBlock(scope: !7902, file: !3, line: 260, column: 26)
!7911 = !DILocation(line: 262, column: 11, scope: !7910)
!7912 = !DILocation(line: 262, column: 5, scope: !7910)
!7913 = !DILocation(line: 263, column: 3, scope: !7910)
!7914 = !DILocation(line: 266, column: 13, scope: !7915)
!7915 = distinct !DILexicalBlock(scope: !7902, file: !3, line: 264, column: 8)
!7916 = !DILocation(line: 266, column: 24, scope: !7915)
!7917 = !DILocation(line: 266, column: 22, scope: !7915)
!7918 = !DILocation(line: 266, column: 34, scope: !7915)
!7919 = !DILocation(line: 266, column: 10, scope: !7915)
!7920 = !DILocation(line: 267, column: 16, scope: !7915)
!7921 = !DILocation(line: 267, column: 23, scope: !7915)
!7922 = !DILocation(line: 267, column: 8, scope: !7915)
!7923 = !DILocation(line: 267, column: 27, scope: !7915)
!7924 = !DILocation(line: 267, column: 45, scope: !7915)
!7925 = !DILocation(line: 267, column: 49, scope: !7915)
!7926 = !DILocation(line: 267, column: 56, scope: !7915)
!7927 = !DILocation(line: 267, column: 47, scope: !7915)
!7928 = !DILocation(line: 267, column: 36, scope: !7915)
!7929 = !DILocation(line: 267, column: 59, scope: !7915)
!7930 = !DILocation(line: 267, column: 33, scope: !7915)
!7931 = !DILocation(line: 267, column: 25, scope: !7915)
!7932 = !DILocation(line: 267, column: 6, scope: !7915)
!7933 = !DILocation(line: 270, column: 8, scope: !7791)
!7934 = !DILocation(line: 271, column: 9, scope: !7791)
!7935 = !DILocation(line: 273, column: 13, scope: !7791)
!7936 = !DILocation(line: 273, column: 3, scope: !7791)
!7937 = !DILocation(line: 273, column: 10, scope: !7791)
!7938 = !DILocation(line: 273, column: 11, scope: !7791)
!7939 = !DILocation(line: 274, column: 13, scope: !7791)
!7940 = !DILocation(line: 274, column: 3, scope: !7791)
!7941 = !DILocation(line: 274, column: 10, scope: !7791)
!7942 = !DILocation(line: 274, column: 11, scope: !7791)
!7943 = !DILocation(line: 275, column: 2, scope: !7791)
!7944 = !DILocation(line: 209, column: 26, scope: !7786)
!7945 = !DILocation(line: 209, column: 32, scope: !7786)
!7946 = !DILocation(line: 209, column: 2, scope: !7786)
!7947 = distinct !{!7947, !7789, !7948}
!7948 = !DILocation(line: 275, column: 2, scope: !7782)
!7949 = !DILocation(line: 277, column: 6, scope: !7950)
!7950 = distinct !DILexicalBlock(scope: !7737, file: !3, line: 277, column: 6)
!7951 = !DILocation(line: 277, column: 13, scope: !7950)
!7952 = !DILocation(line: 277, column: 18, scope: !7950)
!7953 = !DILocation(line: 277, column: 22, scope: !7950)
!7954 = !DILocation(line: 277, column: 29, scope: !7950)
!7955 = !DILocation(line: 277, column: 35, scope: !7950)
!7956 = !DILocation(line: 277, column: 40, scope: !7950)
!7957 = !DILocation(line: 277, column: 45, scope: !7950)
!7958 = !DILocation(line: 277, column: 31, scope: !7950)
!7959 = !DILocation(line: 277, column: 6, scope: !7737)
!7960 = !DILocation(line: 278, column: 9, scope: !7950)
!7961 = !DILocation(line: 278, column: 3, scope: !7950)
!7962 = !DILocation(line: 288, column: 9, scope: !7737)
!7963 = !DILocation(line: 288, column: 2, scope: !7737)
!7964 = distinct !DISubprogram(name: "compress_shadowbuf", scope: !3, file: !3, line: 507, type: !7965, scopeLine: 508, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!7965 = !DISubroutineType(types: !7966)
!7966 = !{null, !2461, !26, !8}
!7967 = !DILocalVariable(name: "shb", arg: 1, scope: !7964, file: !3, line: 507, type: !2461)
!7968 = !DILocation(line: 507, column: 41, scope: !7964)
!7969 = !DILocalVariable(name: "rectz", arg: 2, scope: !7964, file: !3, line: 507, type: !26)
!7970 = !DILocation(line: 507, column: 51, scope: !7964)
!7971 = !DILocalVariable(name: "square", arg: 3, scope: !7964, file: !3, line: 507, type: !8)
!7972 = !DILocation(line: 507, column: 62, scope: !7964)
!7973 = !DILocalVariable(name: "shsample", scope: !7964, file: !3, line: 509, type: !3601)
!7974 = !DILocation(line: 509, column: 17, scope: !7964)
!7975 = !DILocalVariable(name: "dist", scope: !7964, file: !3, line: 510, type: !7)
!7976 = !DILocation(line: 510, column: 8, scope: !7964)
!7977 = !DILocalVariable(name: "ztile", scope: !7964, file: !3, line: 511, type: !22)
!7978 = !DILocation(line: 511, column: 13, scope: !7964)
!7979 = !DILocalVariable(name: "rz", scope: !7964, file: !3, line: 512, type: !26)
!7980 = !DILocation(line: 512, column: 7, scope: !7964)
!7981 = !DILocalVariable(name: "rz1", scope: !7964, file: !3, line: 512, type: !26)
!7982 = !DILocation(line: 512, column: 12, scope: !7964)
!7983 = !DILocalVariable(name: "verg", scope: !7964, file: !3, line: 512, type: !8)
!7984 = !DILocation(line: 512, column: 17, scope: !7964)
!7985 = !DILocalVariable(name: "verg1", scope: !7964, file: !3, line: 512, type: !8)
!7986 = !DILocation(line: 512, column: 23, scope: !7964)
!7987 = !DILocalVariable(name: "size", scope: !7964, file: !3, line: 512, type: !8)
!7988 = !DILocation(line: 512, column: 30, scope: !7964)
!7989 = !DILocation(line: 512, column: 36, scope: !7964)
!7990 = !DILocation(line: 512, column: 41, scope: !7964)
!7991 = !DILocalVariable(name: "a", scope: !7964, file: !3, line: 513, type: !8)
!7992 = !DILocation(line: 513, column: 6, scope: !7964)
!7993 = !DILocalVariable(name: "x", scope: !7964, file: !3, line: 513, type: !8)
!7994 = !DILocation(line: 513, column: 9, scope: !7964)
!7995 = !DILocalVariable(name: "y", scope: !7964, file: !3, line: 513, type: !8)
!7996 = !DILocation(line: 513, column: 12, scope: !7964)
!7997 = !DILocalVariable(name: "minx", scope: !7964, file: !3, line: 513, type: !8)
!7998 = !DILocation(line: 513, column: 15, scope: !7964)
!7999 = !DILocalVariable(name: "miny", scope: !7964, file: !3, line: 513, type: !8)
!8000 = !DILocation(line: 513, column: 21, scope: !7964)
!8001 = !DILocalVariable(name: "byt1", scope: !7964, file: !3, line: 513, type: !8)
!8002 = !DILocation(line: 513, column: 27, scope: !7964)
!8003 = !DILocalVariable(name: "byt2", scope: !7964, file: !3, line: 513, type: !8)
!8004 = !DILocation(line: 513, column: 33, scope: !7964)
!8005 = !DILocalVariable(name: "rc", scope: !7964, file: !3, line: 514, type: !27)
!8006 = !DILocation(line: 514, column: 8, scope: !7964)
!8007 = !DILocalVariable(name: "rcline", scope: !7964, file: !3, line: 514, type: !27)
!8008 = !DILocation(line: 514, column: 13, scope: !7964)
!8009 = !DILocalVariable(name: "ctile", scope: !7964, file: !3, line: 514, type: !27)
!8010 = !DILocation(line: 514, column: 22, scope: !7964)
!8011 = !DILocalVariable(name: "zt", scope: !7964, file: !3, line: 514, type: !27)
!8012 = !DILocation(line: 514, column: 30, scope: !7964)
!8013 = !DILocation(line: 516, column: 12, scope: !7964)
!8014 = !DILocation(line: 516, column: 10, scope: !7964)
!8015 = !DILocation(line: 517, column: 15, scope: !7964)
!8016 = !DILocation(line: 517, column: 20, scope: !7964)
!8017 = !DILocation(line: 517, column: 29, scope: !7964)
!8018 = !DILocation(line: 517, column: 2, scope: !7964)
!8019 = !DILocation(line: 519, column: 18, scope: !7964)
!8020 = !DILocation(line: 519, column: 49, scope: !7964)
!8021 = !DILocation(line: 519, column: 54, scope: !7964)
!8022 = !DILocation(line: 519, column: 53, scope: !7964)
!8023 = !DILocation(line: 519, column: 48, scope: !7964)
!8024 = !DILocation(line: 519, column: 47, scope: !7964)
!8025 = !DILocation(line: 519, column: 59, scope: !7964)
!8026 = !DILocation(line: 519, column: 2, scope: !7964)
!8027 = !DILocation(line: 519, column: 12, scope: !7964)
!8028 = !DILocation(line: 519, column: 16, scope: !7964)
!8029 = !DILocation(line: 520, column: 18, scope: !7964)
!8030 = !DILocation(line: 520, column: 31, scope: !7964)
!8031 = !DILocation(line: 520, column: 36, scope: !7964)
!8032 = !DILocation(line: 520, column: 35, scope: !7964)
!8033 = !DILocation(line: 520, column: 41, scope: !7964)
!8034 = !DILocation(line: 520, column: 30, scope: !7964)
!8035 = !DILocation(line: 520, column: 2, scope: !7964)
!8036 = !DILocation(line: 520, column: 12, scope: !7964)
!8037 = !DILocation(line: 520, column: 16, scope: !7964)
!8038 = !DILocation(line: 522, column: 22, scope: !7964)
!8039 = !DILocation(line: 522, column: 32, scope: !7964)
!8040 = !DILocation(line: 522, column: 7, scope: !7964)
!8041 = !DILocation(line: 523, column: 9, scope: !7964)
!8042 = !DILocation(line: 523, column: 19, scope: !7964)
!8043 = !DILocation(line: 523, column: 7, scope: !7964)
!8044 = !DILocation(line: 526, column: 10, scope: !7964)
!8045 = !DILocation(line: 526, column: 8, scope: !7964)
!8046 = !DILocation(line: 528, column: 8, scope: !8047)
!8047 = distinct !DILexicalBlock(scope: !7964, file: !3, line: 528, column: 2)
!8048 = !DILocation(line: 528, column: 7, scope: !8047)
!8049 = !DILocation(line: 528, column: 12, scope: !8050)
!8050 = distinct !DILexicalBlock(scope: !8047, file: !3, line: 528, column: 2)
!8051 = !DILocation(line: 528, column: 14, scope: !8050)
!8052 = !DILocation(line: 528, column: 13, scope: !8050)
!8053 = !DILocation(line: 528, column: 2, scope: !8047)
!8054 = !DILocation(line: 529, column: 7, scope: !8055)
!8055 = distinct !DILexicalBlock(scope: !8056, file: !3, line: 529, column: 7)
!8056 = distinct !DILexicalBlock(scope: !8050, file: !3, line: 528, column: 27)
!8057 = !DILocation(line: 529, column: 10, scope: !8055)
!8058 = !DILocation(line: 529, column: 14, scope: !8055)
!8059 = !DILocation(line: 529, column: 8, scope: !8055)
!8060 = !DILocation(line: 529, column: 7, scope: !8056)
!8061 = !DILocation(line: 529, column: 24, scope: !8055)
!8062 = !DILocation(line: 529, column: 25, scope: !8055)
!8063 = !DILocation(line: 529, column: 29, scope: !8055)
!8064 = !DILocation(line: 529, column: 33, scope: !8055)
!8065 = !DILocation(line: 529, column: 28, scope: !8055)
!8066 = !DILocation(line: 529, column: 22, scope: !8055)
!8067 = !DILocation(line: 529, column: 18, scope: !8055)
!8068 = !DILocation(line: 530, column: 14, scope: !8055)
!8069 = !DILocation(line: 530, column: 16, scope: !8055)
!8070 = !DILocation(line: 530, column: 20, scope: !8055)
!8071 = !DILocation(line: 530, column: 15, scope: !8055)
!8072 = !DILocation(line: 530, column: 12, scope: !8055)
!8073 = !DILocation(line: 532, column: 9, scope: !8074)
!8074 = distinct !DILexicalBlock(scope: !8056, file: !3, line: 532, column: 3)
!8075 = !DILocation(line: 532, column: 8, scope: !8074)
!8076 = !DILocation(line: 532, column: 13, scope: !8077)
!8077 = distinct !DILexicalBlock(scope: !8074, file: !3, line: 532, column: 3)
!8078 = !DILocation(line: 532, column: 15, scope: !8077)
!8079 = !DILocation(line: 532, column: 14, scope: !8077)
!8080 = !DILocation(line: 532, column: 3, scope: !8074)
!8081 = !DILocation(line: 535, column: 7, scope: !8082)
!8082 = distinct !DILexicalBlock(scope: !8077, file: !3, line: 532, column: 28)
!8083 = !DILocation(line: 535, column: 11, scope: !8082)
!8084 = !DILocation(line: 535, column: 5, scope: !8082)
!8085 = !DILocation(line: 536, column: 8, scope: !8086)
!8086 = distinct !DILexicalBlock(scope: !8082, file: !3, line: 536, column: 8)
!8087 = !DILocation(line: 536, column: 11, scope: !8086)
!8088 = !DILocation(line: 536, column: 9, scope: !8086)
!8089 = !DILocation(line: 536, column: 8, scope: !8082)
!8090 = !DILocation(line: 536, column: 20, scope: !8086)
!8091 = !DILocation(line: 536, column: 21, scope: !8086)
!8092 = !DILocation(line: 536, column: 25, scope: !8086)
!8093 = !DILocation(line: 536, column: 24, scope: !8086)
!8094 = !DILocation(line: 536, column: 18, scope: !8086)
!8095 = !DILocation(line: 536, column: 14, scope: !8086)
!8096 = !DILocation(line: 537, column: 15, scope: !8086)
!8097 = !DILocation(line: 537, column: 17, scope: !8086)
!8098 = !DILocation(line: 537, column: 16, scope: !8086)
!8099 = !DILocation(line: 537, column: 13, scope: !8086)
!8100 = !DILocation(line: 539, column: 25, scope: !8082)
!8101 = !DILocation(line: 539, column: 32, scope: !8082)
!8102 = !DILocation(line: 539, column: 30, scope: !8082)
!8103 = !DILocation(line: 539, column: 39, scope: !8082)
!8104 = !DILocation(line: 539, column: 46, scope: !8082)
!8105 = !DILocation(line: 539, column: 44, scope: !8082)
!8106 = !DILocation(line: 539, column: 37, scope: !8082)
!8107 = !DILocation(line: 539, column: 17, scope: !8082)
!8108 = !DILocation(line: 539, column: 11, scope: !8082)
!8109 = !DILocation(line: 539, column: 9, scope: !8082)
!8110 = !DILocation(line: 541, column: 8, scope: !8111)
!8111 = distinct !DILexicalBlock(scope: !8082, file: !3, line: 541, column: 8)
!8112 = !DILocation(line: 541, column: 14, scope: !8111)
!8113 = !DILocation(line: 541, column: 18, scope: !8111)
!8114 = !DILocation(line: 541, column: 21, scope: !8111)
!8115 = !DILocation(line: 541, column: 34, scope: !8111)
!8116 = !DILocation(line: 541, column: 35, scope: !8111)
!8117 = !DILocation(line: 541, column: 26, scope: !8111)
!8118 = !DILocation(line: 541, column: 25, scope: !8111)
!8119 = !DILocation(line: 541, column: 8, scope: !8082)
!8120 = !DILocation(line: 542, column: 6, scope: !8121)
!8121 = distinct !DILexicalBlock(scope: !8111, file: !3, line: 541, column: 41)
!8122 = !DILocation(line: 542, column: 17, scope: !8121)
!8123 = !DILocation(line: 543, column: 17, scope: !8121)
!8124 = !DILocation(line: 543, column: 8, scope: !8121)
!8125 = !DILocation(line: 544, column: 4, scope: !8121)
!8126 = !DILocation(line: 546, column: 19, scope: !8127)
!8127 = distinct !DILexicalBlock(scope: !8111, file: !3, line: 545, column: 9)
!8128 = !DILocation(line: 546, column: 26, scope: !8127)
!8129 = !DILocation(line: 546, column: 32, scope: !8127)
!8130 = !DILocation(line: 546, column: 35, scope: !8127)
!8131 = !DILocation(line: 546, column: 42, scope: !8127)
!8132 = !DILocation(line: 546, column: 5, scope: !8127)
!8133 = !DILocation(line: 547, column: 17, scope: !8127)
!8134 = !DILocation(line: 547, column: 10, scope: !8127)
!8135 = !DILocation(line: 547, column: 8, scope: !8127)
!8136 = !DILocation(line: 549, column: 13, scope: !8127)
!8137 = !DILocation(line: 549, column: 12, scope: !8127)
!8138 = !DILocation(line: 549, column: 17, scope: !8127)
!8139 = !DILocation(line: 549, column: 9, scope: !8127)
!8140 = !DILocation(line: 551, column: 11, scope: !8141)
!8141 = distinct !DILexicalBlock(scope: !8127, file: !3, line: 551, column: 5)
!8142 = !DILocation(line: 551, column: 10, scope: !8141)
!8143 = !DILocation(line: 551, column: 14, scope: !8144)
!8144 = distinct !DILexicalBlock(scope: !8141, file: !3, line: 551, column: 5)
!8145 = !DILocation(line: 551, column: 15, scope: !8144)
!8146 = !DILocation(line: 551, column: 5, scope: !8141)
!8147 = !DILocation(line: 552, column: 13, scope: !8148)
!8148 = distinct !DILexicalBlock(scope: !8149, file: !3, line: 552, column: 11)
!8149 = distinct !DILexicalBlock(scope: !8144, file: !3, line: 551, column: 32)
!8150 = !DILocation(line: 552, column: 12, scope: !8148)
!8151 = !DILocation(line: 552, column: 17, scope: !8148)
!8152 = !DILocation(line: 552, column: 33, scope: !8148)
!8153 = !DILocation(line: 552, column: 31, scope: !8148)
!8154 = !DILocation(line: 552, column: 11, scope: !8149)
!8155 = !DILocation(line: 552, column: 39, scope: !8148)
!8156 = !DILocation(line: 553, column: 5, scope: !8149)
!8157 = !DILocation(line: 551, column: 21, scope: !8144)
!8158 = !DILocation(line: 551, column: 28, scope: !8144)
!8159 = !DILocation(line: 551, column: 5, scope: !8144)
!8160 = distinct !{!8160, !8146, !8161}
!8161 = !DILocation(line: 553, column: 5, scope: !8141)
!8162 = !DILocation(line: 555, column: 8, scope: !8163)
!8163 = distinct !DILexicalBlock(scope: !8082, file: !3, line: 555, column: 8)
!8164 = !DILocation(line: 555, column: 9, scope: !8163)
!8165 = !DILocation(line: 555, column: 8, scope: !8082)
!8166 = !DILocation(line: 556, column: 6, scope: !8167)
!8167 = distinct !DILexicalBlock(scope: !8163, file: !3, line: 555, column: 16)
!8168 = !DILocation(line: 556, column: 11, scope: !8167)
!8169 = !DILocation(line: 557, column: 15, scope: !8167)
!8170 = !DILocation(line: 557, column: 18, scope: !8167)
!8171 = !DILocation(line: 557, column: 13, scope: !8167)
!8172 = !DILocation(line: 557, column: 6, scope: !8167)
!8173 = !DILocation(line: 557, column: 11, scope: !8167)
!8174 = !DILocation(line: 558, column: 4, scope: !8167)
!8175 = !DILocation(line: 563, column: 9, scope: !8176)
!8176 = distinct !DILexicalBlock(scope: !8163, file: !3, line: 559, column: 9)
!8177 = !DILocation(line: 563, column: 7, scope: !8176)
!8178 = !DILocation(line: 564, column: 17, scope: !8176)
!8179 = !DILocation(line: 564, column: 10, scope: !8176)
!8180 = !DILocation(line: 564, column: 8, scope: !8176)
!8181 = !DILocation(line: 565, column: 12, scope: !8176)
!8182 = !DILocation(line: 565, column: 9, scope: !8176)
!8183 = !DILocation(line: 566, column: 12, scope: !8176)
!8184 = !DILocation(line: 566, column: 10, scope: !8176)
!8185 = !DILocation(line: 567, column: 7, scope: !8176)
!8186 = !DILocation(line: 568, column: 9, scope: !8176)
!8187 = !DILocation(line: 568, column: 18, scope: !8176)
!8188 = !DILocation(line: 569, column: 11, scope: !8189)
!8189 = distinct !DILexicalBlock(scope: !8176, file: !3, line: 569, column: 5)
!8190 = !DILocation(line: 569, column: 10, scope: !8189)
!8191 = !DILocation(line: 569, column: 14, scope: !8192)
!8192 = distinct !DILexicalBlock(scope: !8189, file: !3, line: 569, column: 5)
!8193 = !DILocation(line: 569, column: 15, scope: !8192)
!8194 = !DILocation(line: 569, column: 5, scope: !8189)
!8195 = !DILocation(line: 570, column: 15, scope: !8196)
!8196 = distinct !DILexicalBlock(scope: !8192, file: !3, line: 569, column: 32)
!8197 = !DILocation(line: 570, column: 21, scope: !8196)
!8198 = !DILocation(line: 570, column: 19, scope: !8196)
!8199 = !DILocation(line: 570, column: 11, scope: !8196)
!8200 = !DILocation(line: 571, column: 15, scope: !8196)
!8201 = !DILocation(line: 571, column: 22, scope: !8196)
!8202 = !DILocation(line: 571, column: 20, scope: !8196)
!8203 = !DILocation(line: 571, column: 11, scope: !8196)
!8204 = !DILocation(line: 573, column: 10, scope: !8205)
!8205 = distinct !DILexicalBlock(scope: !8196, file: !3, line: 573, column: 10)
!8206 = !DILocation(line: 573, column: 14, scope: !8205)
!8207 = !DILocation(line: 573, column: 10, scope: !8196)
!8208 = !DILocation(line: 573, column: 19, scope: !8205)
!8209 = !DILocation(line: 574, column: 5, scope: !8196)
!8210 = !DILocation(line: 569, column: 21, scope: !8192)
!8211 = !DILocation(line: 569, column: 27, scope: !8192)
!8212 = !DILocation(line: 569, column: 5, scope: !8192)
!8213 = distinct !{!8213, !8194, !8214}
!8214 = !DILocation(line: 574, column: 5, scope: !8189)
!8215 = !DILocation(line: 575, column: 9, scope: !8216)
!8216 = distinct !DILexicalBlock(scope: !8176, file: !3, line: 575, column: 9)
!8217 = !DILocation(line: 575, column: 14, scope: !8216)
!8218 = !DILocation(line: 575, column: 17, scope: !8216)
!8219 = !DILocation(line: 575, column: 9, scope: !8176)
!8220 = !DILocation(line: 576, column: 7, scope: !8221)
!8221 = distinct !DILexicalBlock(scope: !8216, file: !3, line: 575, column: 23)
!8222 = !DILocation(line: 576, column: 12, scope: !8221)
!8223 = !DILocation(line: 577, column: 25, scope: !8221)
!8224 = !DILocation(line: 577, column: 14, scope: !8221)
!8225 = !DILocation(line: 577, column: 7, scope: !8221)
!8226 = !DILocation(line: 577, column: 12, scope: !8221)
!8227 = !DILocation(line: 578, column: 18, scope: !8221)
!8228 = !DILocation(line: 578, column: 17, scope: !8221)
!8229 = !DILocation(line: 578, column: 10, scope: !8221)
!8230 = !DILocation(line: 578, column: 8, scope: !8221)
!8231 = !DILocation(line: 579, column: 12, scope: !8221)
!8232 = !DILocation(line: 579, column: 11, scope: !8221)
!8233 = !DILocation(line: 579, column: 7, scope: !8221)
!8234 = !DILocation(line: 579, column: 9, scope: !8221)
!8235 = !DILocation(line: 581, column: 19, scope: !8221)
!8236 = !DILocation(line: 581, column: 21, scope: !8221)
!8237 = !DILocation(line: 581, column: 10, scope: !8221)
!8238 = !DILocation(line: 581, column: 8, scope: !8221)
!8239 = !DILocation(line: 582, column: 10, scope: !8221)
!8240 = !DILocation(line: 582, column: 8, scope: !8221)
!8241 = !DILocation(line: 583, column: 12, scope: !8242)
!8242 = distinct !DILexicalBlock(scope: !8221, file: !3, line: 583, column: 6)
!8243 = !DILocation(line: 583, column: 11, scope: !8242)
!8244 = !DILocation(line: 583, column: 16, scope: !8245)
!8245 = distinct !DILexicalBlock(scope: !8242, file: !3, line: 583, column: 6)
!8246 = !DILocation(line: 583, column: 17, scope: !8245)
!8247 = !DILocation(line: 583, column: 6, scope: !8242)
!8248 = !DILocation(line: 583, column: 46, scope: !8245)
!8249 = !DILocation(line: 583, column: 42, scope: !8245)
!8250 = !DILocation(line: 583, column: 44, scope: !8245)
!8251 = !DILocation(line: 583, column: 41, scope: !8245)
!8252 = !DILocation(line: 583, column: 24, scope: !8245)
!8253 = !DILocation(line: 583, column: 30, scope: !8245)
!8254 = !DILocation(line: 583, column: 36, scope: !8245)
!8255 = !DILocation(line: 583, column: 6, scope: !8245)
!8256 = distinct !{!8256, !8247, !8257}
!8257 = !DILocation(line: 583, column: 54, scope: !8242)
!8258 = !DILocation(line: 584, column: 5, scope: !8221)
!8259 = !DILocation(line: 585, column: 14, scope: !8260)
!8260 = distinct !DILexicalBlock(scope: !8216, file: !3, line: 585, column: 14)
!8261 = !DILocation(line: 585, column: 14, scope: !8216)
!8262 = !DILocation(line: 586, column: 7, scope: !8263)
!8263 = distinct !DILexicalBlock(scope: !8260, file: !3, line: 585, column: 20)
!8264 = !DILocation(line: 586, column: 12, scope: !8263)
!8265 = !DILocation(line: 587, column: 25, scope: !8263)
!8266 = !DILocation(line: 587, column: 14, scope: !8263)
!8267 = !DILocation(line: 587, column: 7, scope: !8263)
!8268 = !DILocation(line: 587, column: 12, scope: !8263)
!8269 = !DILocation(line: 588, column: 18, scope: !8263)
!8270 = !DILocation(line: 588, column: 17, scope: !8263)
!8271 = !DILocation(line: 588, column: 10, scope: !8263)
!8272 = !DILocation(line: 588, column: 8, scope: !8263)
!8273 = !DILocation(line: 589, column: 12, scope: !8263)
!8274 = !DILocation(line: 589, column: 11, scope: !8263)
!8275 = !DILocation(line: 589, column: 7, scope: !8263)
!8276 = !DILocation(line: 589, column: 9, scope: !8263)
!8277 = !DILocation(line: 591, column: 19, scope: !8263)
!8278 = !DILocation(line: 591, column: 21, scope: !8263)
!8279 = !DILocation(line: 591, column: 10, scope: !8263)
!8280 = !DILocation(line: 591, column: 8, scope: !8263)
!8281 = !DILocation(line: 592, column: 10, scope: !8263)
!8282 = !DILocation(line: 592, column: 8, scope: !8263)
!8283 = !DILocation(line: 593, column: 12, scope: !8284)
!8284 = distinct !DILexicalBlock(scope: !8263, file: !3, line: 593, column: 6)
!8285 = !DILocation(line: 593, column: 11, scope: !8284)
!8286 = !DILocation(line: 593, column: 16, scope: !8287)
!8287 = distinct !DILexicalBlock(scope: !8284, file: !3, line: 593, column: 6)
!8288 = !DILocation(line: 593, column: 17, scope: !8287)
!8289 = !DILocation(line: 593, column: 6, scope: !8284)
!8290 = !DILocation(line: 594, column: 14, scope: !8291)
!8291 = distinct !DILexicalBlock(scope: !8287, file: !3, line: 593, column: 42)
!8292 = !DILocation(line: 594, column: 7, scope: !8291)
!8293 = !DILocation(line: 594, column: 12, scope: !8291)
!8294 = !DILocation(line: 595, column: 14, scope: !8291)
!8295 = !DILocation(line: 595, column: 7, scope: !8291)
!8296 = !DILocation(line: 595, column: 12, scope: !8291)
!8297 = !DILocation(line: 596, column: 6, scope: !8291)
!8298 = !DILocation(line: 593, column: 24, scope: !8287)
!8299 = !DILocation(line: 593, column: 30, scope: !8287)
!8300 = !DILocation(line: 593, column: 37, scope: !8287)
!8301 = !DILocation(line: 593, column: 6, scope: !8287)
!8302 = distinct !{!8302, !8289, !8303}
!8303 = !DILocation(line: 596, column: 6, scope: !8284)
!8304 = !DILocation(line: 597, column: 5, scope: !8263)
!8305 = !DILocation(line: 599, column: 7, scope: !8306)
!8306 = distinct !DILexicalBlock(scope: !8260, file: !3, line: 598, column: 10)
!8307 = !DILocation(line: 599, column: 12, scope: !8306)
!8308 = !DILocation(line: 600, column: 25, scope: !8306)
!8309 = !DILocation(line: 600, column: 14, scope: !8306)
!8310 = !DILocation(line: 600, column: 7, scope: !8306)
!8311 = !DILocation(line: 600, column: 12, scope: !8306)
!8312 = !DILocation(line: 602, column: 19, scope: !8306)
!8313 = !DILocation(line: 602, column: 18, scope: !8306)
!8314 = !DILocation(line: 602, column: 10, scope: !8306)
!8315 = !DILocation(line: 602, column: 8, scope: !8306)
!8316 = !DILocation(line: 603, column: 10, scope: !8306)
!8317 = !DILocation(line: 603, column: 8, scope: !8306)
!8318 = !DILocation(line: 604, column: 12, scope: !8319)
!8319 = distinct !DILexicalBlock(scope: !8306, file: !3, line: 604, column: 6)
!8320 = !DILocation(line: 604, column: 11, scope: !8319)
!8321 = !DILocation(line: 604, column: 16, scope: !8322)
!8322 = distinct !DILexicalBlock(scope: !8319, file: !3, line: 604, column: 6)
!8323 = !DILocation(line: 604, column: 17, scope: !8322)
!8324 = !DILocation(line: 604, column: 6, scope: !8319)
!8325 = !DILocation(line: 605, column: 14, scope: !8326)
!8326 = distinct !DILexicalBlock(scope: !8322, file: !3, line: 604, column: 42)
!8327 = !DILocation(line: 605, column: 7, scope: !8326)
!8328 = !DILocation(line: 605, column: 12, scope: !8326)
!8329 = !DILocation(line: 606, column: 14, scope: !8326)
!8330 = !DILocation(line: 606, column: 7, scope: !8326)
!8331 = !DILocation(line: 606, column: 12, scope: !8326)
!8332 = !DILocation(line: 607, column: 14, scope: !8326)
!8333 = !DILocation(line: 607, column: 7, scope: !8326)
!8334 = !DILocation(line: 607, column: 12, scope: !8326)
!8335 = !DILocation(line: 608, column: 6, scope: !8326)
!8336 = !DILocation(line: 604, column: 24, scope: !8322)
!8337 = !DILocation(line: 604, column: 30, scope: !8322)
!8338 = !DILocation(line: 604, column: 37, scope: !8322)
!8339 = !DILocation(line: 604, column: 6, scope: !8322)
!8340 = distinct !{!8340, !8324, !8341}
!8341 = !DILocation(line: 608, column: 6, scope: !8319)
!8342 = !DILocation(line: 611, column: 9, scope: !8082)
!8343 = !DILocation(line: 612, column: 9, scope: !8082)
!8344 = !DILocation(line: 613, column: 3, scope: !8082)
!8345 = !DILocation(line: 532, column: 22, scope: !8077)
!8346 = !DILocation(line: 532, column: 3, scope: !8077)
!8347 = distinct !{!8347, !8080, !8348}
!8348 = !DILocation(line: 613, column: 3, scope: !8074)
!8349 = !DILocation(line: 614, column: 2, scope: !8056)
!8350 = !DILocation(line: 528, column: 21, scope: !8050)
!8351 = !DILocation(line: 528, column: 2, scope: !8050)
!8352 = distinct !{!8352, !8053, !8353}
!8353 = !DILocation(line: 614, column: 2, scope: !8047)
!8354 = !DILocation(line: 616, column: 2, scope: !7964)
!8355 = !DILocation(line: 616, column: 12, scope: !7964)
!8356 = !DILocation(line: 617, column: 1, scope: !7964)
!8357 = distinct !DISubprogram(name: "copy_to_ztile", scope: !3, file: !3, line: 89, type: !8358, scopeLine: 90, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!8358 = !DISubroutineType(types: !8359)
!8359 = !{null, !26, !8, !8, !8, !8, !27}
!8360 = !DILocalVariable(name: "rectz", arg: 1, scope: !8357, file: !3, line: 89, type: !26)
!8361 = !DILocation(line: 89, column: 32, scope: !8357)
!8362 = !DILocalVariable(name: "size", arg: 2, scope: !8357, file: !3, line: 89, type: !8)
!8363 = !DILocation(line: 89, column: 43, scope: !8357)
!8364 = !DILocalVariable(name: "x1", arg: 3, scope: !8357, file: !3, line: 89, type: !8)
!8365 = !DILocation(line: 89, column: 53, scope: !8357)
!8366 = !DILocalVariable(name: "y1", arg: 4, scope: !8357, file: !3, line: 89, type: !8)
!8367 = !DILocation(line: 89, column: 61, scope: !8357)
!8368 = !DILocalVariable(name: "tile", arg: 5, scope: !8357, file: !3, line: 89, type: !8)
!8369 = !DILocation(line: 89, column: 69, scope: !8357)
!8370 = !DILocalVariable(name: "r1", arg: 6, scope: !8357, file: !3, line: 89, type: !27)
!8371 = !DILocation(line: 89, column: 81, scope: !8357)
!8372 = !DILocalVariable(name: "len4", scope: !8357, file: !3, line: 91, type: !8)
!8373 = !DILocation(line: 91, column: 6, scope: !8357)
!8374 = !DILocalVariable(name: "rz", scope: !8357, file: !3, line: 91, type: !26)
!8375 = !DILocation(line: 91, column: 13, scope: !8357)
!8376 = !DILocalVariable(name: "x2", scope: !8357, file: !3, line: 92, type: !8)
!8377 = !DILocation(line: 92, column: 6, scope: !8357)
!8378 = !DILocalVariable(name: "y2", scope: !8357, file: !3, line: 92, type: !8)
!8379 = !DILocation(line: 92, column: 10, scope: !8357)
!8380 = !DILocation(line: 94, column: 6, scope: !8357)
!8381 = !DILocation(line: 94, column: 9, scope: !8357)
!8382 = !DILocation(line: 94, column: 8, scope: !8357)
!8383 = !DILocation(line: 94, column: 4, scope: !8357)
!8384 = !DILocation(line: 95, column: 6, scope: !8357)
!8385 = !DILocation(line: 95, column: 9, scope: !8357)
!8386 = !DILocation(line: 95, column: 8, scope: !8357)
!8387 = !DILocation(line: 95, column: 4, scope: !8357)
!8388 = !DILocation(line: 96, column: 6, scope: !8389)
!8389 = distinct !DILexicalBlock(scope: !8357, file: !3, line: 96, column: 6)
!8390 = !DILocation(line: 96, column: 10, scope: !8389)
!8391 = !DILocation(line: 96, column: 8, scope: !8389)
!8392 = !DILocation(line: 96, column: 6, scope: !8357)
!8393 = !DILocation(line: 96, column: 20, scope: !8389)
!8394 = !DILocation(line: 96, column: 24, scope: !8389)
!8395 = !DILocation(line: 96, column: 18, scope: !8389)
!8396 = !DILocation(line: 96, column: 16, scope: !8389)
!8397 = !DILocation(line: 97, column: 6, scope: !8398)
!8398 = distinct !DILexicalBlock(scope: !8357, file: !3, line: 97, column: 6)
!8399 = !DILocation(line: 97, column: 10, scope: !8398)
!8400 = !DILocation(line: 97, column: 8, scope: !8398)
!8401 = !DILocation(line: 97, column: 6, scope: !8357)
!8402 = !DILocation(line: 97, column: 20, scope: !8398)
!8403 = !DILocation(line: 97, column: 24, scope: !8398)
!8404 = !DILocation(line: 97, column: 18, scope: !8398)
!8405 = !DILocation(line: 97, column: 16, scope: !8398)
!8406 = !DILocation(line: 99, column: 6, scope: !8407)
!8407 = distinct !DILexicalBlock(scope: !8357, file: !3, line: 99, column: 6)
!8408 = !DILocation(line: 99, column: 10, scope: !8407)
!8409 = !DILocation(line: 99, column: 8, scope: !8407)
!8410 = !DILocation(line: 99, column: 13, scope: !8407)
!8411 = !DILocation(line: 99, column: 16, scope: !8407)
!8412 = !DILocation(line: 99, column: 20, scope: !8407)
!8413 = !DILocation(line: 99, column: 18, scope: !8407)
!8414 = !DILocation(line: 99, column: 6, scope: !8357)
!8415 = !DILocation(line: 99, column: 24, scope: !8407)
!8416 = !DILocation(line: 101, column: 11, scope: !8357)
!8417 = !DILocation(line: 101, column: 15, scope: !8357)
!8418 = !DILocation(line: 101, column: 13, scope: !8357)
!8419 = !DILocation(line: 101, column: 9, scope: !8357)
!8420 = !DILocation(line: 101, column: 6, scope: !8357)
!8421 = !DILocation(line: 102, column: 6, scope: !8357)
!8422 = !DILocation(line: 102, column: 14, scope: !8357)
!8423 = !DILocation(line: 102, column: 19, scope: !8357)
!8424 = !DILocation(line: 102, column: 18, scope: !8357)
!8425 = !DILocation(line: 102, column: 12, scope: !8357)
!8426 = !DILocation(line: 102, column: 24, scope: !8357)
!8427 = !DILocation(line: 102, column: 22, scope: !8357)
!8428 = !DILocation(line: 102, column: 4, scope: !8357)
!8429 = !DILocation(line: 103, column: 2, scope: !8357)
!8430 = !DILocation(line: 103, column: 9, scope: !8431)
!8431 = distinct !DILexicalBlock(scope: !8432, file: !3, line: 103, column: 2)
!8432 = distinct !DILexicalBlock(scope: !8357, file: !3, line: 103, column: 2)
!8433 = !DILocation(line: 103, column: 12, scope: !8431)
!8434 = !DILocation(line: 103, column: 11, scope: !8431)
!8435 = !DILocation(line: 103, column: 2, scope: !8432)
!8436 = !DILocation(line: 104, column: 10, scope: !8437)
!8437 = distinct !DILexicalBlock(scope: !8431, file: !3, line: 103, column: 22)
!8438 = !DILocation(line: 104, column: 14, scope: !8437)
!8439 = !DILocation(line: 104, column: 3, scope: !8437)
!8440 = !DILocation(line: 104, column: 18, scope: !8437)
!8441 = !DILocation(line: 105, column: 8, scope: !8437)
!8442 = !DILocation(line: 105, column: 5, scope: !8437)
!8443 = !DILocation(line: 106, column: 8, scope: !8437)
!8444 = !DILocation(line: 106, column: 5, scope: !8437)
!8445 = !DILocation(line: 107, column: 2, scope: !8437)
!8446 = !DILocation(line: 103, column: 18, scope: !8431)
!8447 = !DILocation(line: 103, column: 2, scope: !8431)
!8448 = distinct !{!8448, !8435, !8449}
!8449 = !DILocation(line: 107, column: 2, scope: !8432)
!8450 = !DILocation(line: 108, column: 1, scope: !8357)
!8451 = distinct !DISubprogram(name: "readdeepshadowbuf", scope: !3, file: !3, line: 1011, type: !4174, scopeLine: 1012, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!8452 = !DILocalVariable(name: "shb", arg: 1, scope: !8451, file: !3, line: 1011, type: !2461)
!8453 = !DILocation(line: 1011, column: 41, scope: !8451)
!8454 = !DILocalVariable(name: "shsample", arg: 2, scope: !8451, file: !3, line: 1011, type: !3601)
!8455 = !DILocation(line: 1011, column: 61, scope: !8451)
!8456 = !DILocalVariable(name: "bias", arg: 3, scope: !8451, file: !3, line: 1011, type: !8)
!8457 = !DILocation(line: 1011, column: 75, scope: !8451)
!8458 = !DILocalVariable(name: "xs", arg: 4, scope: !8451, file: !3, line: 1011, type: !8)
!8459 = !DILocation(line: 1011, column: 85, scope: !8451)
!8460 = !DILocalVariable(name: "ys", arg: 5, scope: !8451, file: !3, line: 1011, type: !8)
!8461 = !DILocation(line: 1011, column: 93, scope: !8451)
!8462 = !DILocalVariable(name: "zs", arg: 6, scope: !8451, file: !3, line: 1011, type: !8)
!8463 = !DILocation(line: 1011, column: 101, scope: !8451)
!8464 = !DILocalVariable(name: "v", scope: !8451, file: !3, line: 1013, type: !7)
!8465 = !DILocation(line: 1013, column: 8, scope: !8451)
!8466 = !DILocalVariable(name: "biasv", scope: !8451, file: !3, line: 1013, type: !7)
!8467 = !DILocation(line: 1013, column: 11, scope: !8451)
!8468 = !DILocalVariable(name: "biast", scope: !8451, file: !3, line: 1013, type: !7)
!8469 = !DILocation(line: 1013, column: 18, scope: !8451)
!8470 = !DILocalVariable(name: "ofs", scope: !8451, file: !3, line: 1014, type: !8)
!8471 = !DILocation(line: 1014, column: 6, scope: !8451)
!8472 = !DILocalVariable(name: "tot", scope: !8451, file: !3, line: 1014, type: !8)
!8473 = !DILocation(line: 1014, column: 11, scope: !8451)
!8474 = !DILocation(line: 1016, column: 6, scope: !8475)
!8475 = distinct !DILexicalBlock(scope: !8451, file: !3, line: 1016, column: 6)
!8476 = !DILocation(line: 1016, column: 26, scope: !8475)
!8477 = !DILocation(line: 1016, column: 24, scope: !8475)
!8478 = !DILocation(line: 1016, column: 9, scope: !8475)
!8479 = !DILocation(line: 1016, column: 6, scope: !8451)
!8480 = !DILocation(line: 1017, column: 3, scope: !8475)
!8481 = !DILocation(line: 1020, column: 7, scope: !8451)
!8482 = !DILocation(line: 1020, column: 10, scope: !8451)
!8483 = !DILocation(line: 1020, column: 15, scope: !8451)
!8484 = !DILocation(line: 1020, column: 9, scope: !8451)
!8485 = !DILocation(line: 1020, column: 22, scope: !8451)
!8486 = !DILocation(line: 1020, column: 20, scope: !8451)
!8487 = !DILocation(line: 1020, column: 5, scope: !8451)
!8488 = !DILocation(line: 1021, column: 7, scope: !8451)
!8489 = !DILocation(line: 1021, column: 17, scope: !8451)
!8490 = !DILocation(line: 1021, column: 24, scope: !8451)
!8491 = !DILocation(line: 1021, column: 5, scope: !8451)
!8492 = !DILocation(line: 1022, column: 6, scope: !8493)
!8493 = distinct !DILexicalBlock(scope: !8451, file: !3, line: 1022, column: 6)
!8494 = !DILocation(line: 1022, column: 10, scope: !8493)
!8495 = !DILocation(line: 1022, column: 6, scope: !8451)
!8496 = !DILocation(line: 1023, column: 3, scope: !8493)
!8497 = !DILocation(line: 1025, column: 24, scope: !8451)
!8498 = !DILocation(line: 1025, column: 34, scope: !8451)
!8499 = !DILocation(line: 1025, column: 42, scope: !8451)
!8500 = !DILocation(line: 1025, column: 48, scope: !8451)
!8501 = !DILocation(line: 1025, column: 53, scope: !8451)
!8502 = !DILocation(line: 1025, column: 57, scope: !8451)
!8503 = !DILocation(line: 1025, column: 5, scope: !8451)
!8504 = !DILocation(line: 1025, column: 3, scope: !8451)
!8505 = !DILocation(line: 1027, column: 6, scope: !8506)
!8506 = distinct !DILexicalBlock(scope: !8451, file: !3, line: 1027, column: 6)
!8507 = !DILocation(line: 1027, column: 12, scope: !8506)
!8508 = !DILocation(line: 1027, column: 6, scope: !8451)
!8509 = !DILocation(line: 1029, column: 30, scope: !8510)
!8510 = distinct !DILexicalBlock(scope: !8506, file: !3, line: 1027, column: 21)
!8511 = !DILocation(line: 1029, column: 40, scope: !8510)
!8512 = !DILocation(line: 1029, column: 48, scope: !8510)
!8513 = !DILocation(line: 1029, column: 54, scope: !8510)
!8514 = !DILocation(line: 1029, column: 59, scope: !8510)
!8515 = !DILocation(line: 1029, column: 11, scope: !8510)
!8516 = !DILocation(line: 1029, column: 9, scope: !8510)
!8517 = !DILocation(line: 1031, column: 10, scope: !8510)
!8518 = !DILocation(line: 1031, column: 16, scope: !8510)
!8519 = !DILocation(line: 1031, column: 15, scope: !8510)
!8520 = !DILocation(line: 1031, column: 8, scope: !8510)
!8521 = !DILocation(line: 1032, column: 16, scope: !8510)
!8522 = !DILocation(line: 1032, column: 15, scope: !8510)
!8523 = !DILocation(line: 1032, column: 23, scope: !8510)
!8524 = !DILocation(line: 1032, column: 22, scope: !8510)
!8525 = !DILocation(line: 1032, column: 27, scope: !8510)
!8526 = !DILocation(line: 1032, column: 33, scope: !8510)
!8527 = !DILocation(line: 1032, column: 32, scope: !8510)
!8528 = !DILocation(line: 1032, column: 25, scope: !8510)
!8529 = !DILocation(line: 1032, column: 3, scope: !8510)
!8530 = !DILocation(line: 1035, column: 9, scope: !8451)
!8531 = !DILocation(line: 1035, column: 2, scope: !8451)
!8532 = !DILocation(line: 1036, column: 1, scope: !8451)
!8533 = distinct !DISubprogram(name: "readdeepvisibility", scope: !3, file: !3, line: 977, type: !8534, scopeLine: 978, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!8534 = !DISubroutineType(types: !8535)
!8535 = !{!7, !3613, !8, !8, !8, !63}
!8536 = !DILocalVariable(name: "dsample", arg: 1, scope: !8533, file: !3, line: 977, type: !3613)
!8537 = !DILocation(line: 977, column: 45, scope: !8533)
!8538 = !DILocalVariable(name: "tot", arg: 2, scope: !8533, file: !3, line: 977, type: !8)
!8539 = !DILocation(line: 977, column: 58, scope: !8533)
!8540 = !DILocalVariable(name: "z", arg: 3, scope: !8533, file: !3, line: 977, type: !8)
!8541 = !DILocation(line: 977, column: 67, scope: !8533)
!8542 = !DILocalVariable(name: "bias", arg: 4, scope: !8533, file: !3, line: 977, type: !8)
!8543 = !DILocation(line: 977, column: 74, scope: !8533)
!8544 = !DILocalVariable(name: "biast", arg: 5, scope: !8533, file: !3, line: 977, type: !63)
!8545 = !DILocation(line: 977, column: 87, scope: !8533)
!8546 = !DILocalVariable(name: "ds", scope: !8533, file: !3, line: 979, type: !3613)
!8547 = !DILocation(line: 979, column: 14, scope: !8533)
!8548 = !DILocalVariable(name: "prevds", scope: !8533, file: !3, line: 979, type: !3613)
!8549 = !DILocation(line: 979, column: 19, scope: !8533)
!8550 = !DILocalVariable(name: "t", scope: !8533, file: !3, line: 980, type: !7)
!8551 = !DILocation(line: 980, column: 8, scope: !8533)
!8552 = !DILocalVariable(name: "a", scope: !8533, file: !3, line: 981, type: !8)
!8553 = !DILocation(line: 981, column: 6, scope: !8533)
!8554 = !DILocation(line: 985, column: 6, scope: !8533)
!8555 = !DILocation(line: 985, column: 4, scope: !8533)
!8556 = !DILocation(line: 986, column: 8, scope: !8557)
!8557 = distinct !DILexicalBlock(scope: !8533, file: !3, line: 986, column: 2)
!8558 = !DILocation(line: 986, column: 7, scope: !8557)
!8559 = !DILocation(line: 986, column: 12, scope: !8560)
!8560 = distinct !DILexicalBlock(scope: !8557, file: !3, line: 986, column: 2)
!8561 = !DILocation(line: 986, column: 14, scope: !8560)
!8562 = !DILocation(line: 986, column: 13, scope: !8560)
!8563 = !DILocation(line: 986, column: 18, scope: !8560)
!8564 = !DILocation(line: 986, column: 22, scope: !8560)
!8565 = !DILocation(line: 986, column: 24, scope: !8560)
!8566 = !DILocation(line: 986, column: 23, scope: !8560)
!8567 = !DILocation(line: 986, column: 31, scope: !8560)
!8568 = !DILocation(line: 986, column: 35, scope: !8560)
!8569 = !DILocation(line: 986, column: 29, scope: !8560)
!8570 = !DILocation(line: 0, scope: !8560)
!8571 = !DILocation(line: 986, column: 2, scope: !8557)
!8572 = !DILocation(line: 986, column: 51, scope: !8573)
!8573 = distinct !DILexicalBlock(scope: !8560, file: !3, line: 986, column: 50)
!8574 = !DILocation(line: 986, column: 40, scope: !8560)
!8575 = !DILocation(line: 986, column: 46, scope: !8560)
!8576 = !DILocation(line: 986, column: 2, scope: !8560)
!8577 = distinct !{!8577, !8571, !8578}
!8578 = !DILocation(line: 986, column: 51, scope: !8557)
!8579 = !DILocation(line: 988, column: 6, scope: !8580)
!8580 = distinct !DILexicalBlock(scope: !8533, file: !3, line: 988, column: 6)
!8581 = !DILocation(line: 988, column: 11, scope: !8580)
!8582 = !DILocation(line: 988, column: 8, scope: !8580)
!8583 = !DILocation(line: 988, column: 6, scope: !8533)
!8584 = !DILocation(line: 989, column: 7, scope: !8585)
!8585 = distinct !DILexicalBlock(scope: !8586, file: !3, line: 989, column: 7)
!8586 = distinct !DILexicalBlock(scope: !8580, file: !3, line: 988, column: 16)
!8587 = !DILocation(line: 989, column: 7, scope: !8586)
!8588 = !DILocation(line: 990, column: 5, scope: !8585)
!8589 = !DILocation(line: 990, column: 10, scope: !8585)
!8590 = !DILocation(line: 990, column: 4, scope: !8585)
!8591 = !DILocation(line: 991, column: 11, scope: !8586)
!8592 = !DILocation(line: 991, column: 13, scope: !8586)
!8593 = !DILocation(line: 991, column: 18, scope: !8586)
!8594 = !DILocation(line: 991, column: 3, scope: !8586)
!8595 = !DILocation(line: 995, column: 6, scope: !8596)
!8596 = distinct !DILexicalBlock(scope: !8533, file: !3, line: 995, column: 6)
!8597 = !DILocation(line: 995, column: 6, scope: !8533)
!8598 = !DILocation(line: 996, column: 7, scope: !8599)
!8599 = distinct !DILexicalBlock(scope: !8600, file: !3, line: 996, column: 7)
!8600 = distinct !DILexicalBlock(scope: !8596, file: !3, line: 995, column: 13)
!8601 = !DILocation(line: 996, column: 11, scope: !8599)
!8602 = !DILocation(line: 996, column: 15, scope: !8599)
!8603 = !DILocation(line: 996, column: 9, scope: !8599)
!8604 = !DILocation(line: 996, column: 7, scope: !8600)
!8605 = !DILocation(line: 997, column: 20, scope: !8599)
!8606 = !DILocation(line: 997, column: 24, scope: !8599)
!8607 = !DILocation(line: 997, column: 28, scope: !8599)
!8608 = !DILocation(line: 997, column: 22, scope: !8599)
!8609 = !DILocation(line: 997, column: 12, scope: !8599)
!8610 = !DILocation(line: 997, column: 38, scope: !8599)
!8611 = !DILocation(line: 997, column: 31, scope: !8599)
!8612 = !DILocation(line: 997, column: 30, scope: !8599)
!8613 = !DILocation(line: 997, column: 5, scope: !8599)
!8614 = !DILocation(line: 997, column: 10, scope: !8599)
!8615 = !DILocation(line: 997, column: 4, scope: !8599)
!8616 = !DILocation(line: 999, column: 5, scope: !8599)
!8617 = !DILocation(line: 999, column: 10, scope: !8599)
!8618 = !DILocation(line: 1000, column: 2, scope: !8600)
!8619 = !DILocation(line: 1002, column: 6, scope: !8620)
!8620 = distinct !DILexicalBlock(scope: !8533, file: !3, line: 1002, column: 6)
!8621 = !DILocation(line: 1002, column: 8, scope: !8620)
!8622 = !DILocation(line: 1002, column: 6, scope: !8533)
!8623 = !DILocation(line: 1003, column: 3, scope: !8620)
!8624 = !DILocation(line: 1006, column: 10, scope: !8533)
!8625 = !DILocation(line: 1006, column: 12, scope: !8533)
!8626 = !DILocation(line: 1006, column: 8, scope: !8533)
!8627 = !DILocation(line: 1007, column: 14, scope: !8533)
!8628 = !DILocation(line: 1007, column: 16, scope: !8533)
!8629 = !DILocation(line: 1007, column: 15, scope: !8533)
!8630 = !DILocation(line: 1007, column: 6, scope: !8533)
!8631 = !DILocation(line: 1007, column: 31, scope: !8533)
!8632 = !DILocation(line: 1007, column: 39, scope: !8533)
!8633 = !DILocation(line: 1007, column: 24, scope: !8533)
!8634 = !DILocation(line: 1007, column: 22, scope: !8533)
!8635 = !DILocation(line: 1007, column: 50, scope: !8533)
!8636 = !DILocation(line: 1007, column: 54, scope: !8533)
!8637 = !DILocation(line: 1007, column: 43, scope: !8533)
!8638 = !DILocation(line: 1007, column: 65, scope: !8533)
!8639 = !DILocation(line: 1007, column: 73, scope: !8533)
!8640 = !DILocation(line: 1007, column: 58, scope: !8533)
!8641 = !DILocation(line: 1007, column: 56, scope: !8533)
!8642 = !DILocation(line: 1007, column: 41, scope: !8533)
!8643 = !DILocation(line: 1007, column: 3, scope: !8533)
!8644 = !DILocation(line: 1008, column: 9, scope: !8533)
!8645 = !DILocation(line: 1008, column: 11, scope: !8533)
!8646 = !DILocation(line: 1008, column: 15, scope: !8533)
!8647 = !DILocation(line: 1008, column: 10, scope: !8533)
!8648 = !DILocation(line: 1008, column: 25, scope: !8533)
!8649 = !DILocation(line: 1008, column: 24, scope: !8533)
!8650 = !DILocation(line: 1008, column: 28, scope: !8533)
!8651 = !DILocation(line: 1008, column: 36, scope: !8533)
!8652 = !DILocation(line: 1008, column: 27, scope: !8533)
!8653 = !DILocation(line: 1008, column: 17, scope: !8533)
!8654 = !DILocation(line: 1008, column: 2, scope: !8533)
!8655 = !DILocation(line: 1009, column: 1, scope: !8533)
!8656 = distinct !DISubprogram(name: "viewpixel_to_lampbuf", scope: !3, file: !3, line: 2073, type: !8657, scopeLine: 2074, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!8657 = !DISubroutineType(types: !8658)
!8658 = !{!8, !2461, !2609, !2615, !7, !7, !63}
!8659 = !DILocalVariable(name: "shb", arg: 1, scope: !8656, file: !3, line: 2073, type: !2461)
!8660 = !DILocation(line: 2073, column: 42, scope: !8656)
!8661 = !DILocalVariable(name: "obi", arg: 2, scope: !8656, file: !3, line: 2073, type: !2609)
!8662 = !DILocation(line: 2073, column: 66, scope: !8656)
!8663 = !DILocalVariable(name: "vlr", arg: 3, scope: !8656, file: !3, line: 2073, type: !2615)
!8664 = !DILocation(line: 2073, column: 80, scope: !8656)
!8665 = !DILocalVariable(name: "x", arg: 4, scope: !8656, file: !3, line: 2073, type: !7)
!8666 = !DILocation(line: 2073, column: 91, scope: !8656)
!8667 = !DILocalVariable(name: "y", arg: 5, scope: !8656, file: !3, line: 2073, type: !7)
!8668 = !DILocation(line: 2073, column: 100, scope: !8656)
!8669 = !DILocalVariable(name: "co_r", arg: 6, scope: !8656, file: !3, line: 2073, type: !63)
!8670 = !DILocation(line: 2073, column: 109, scope: !8656)
!8671 = !DILocalVariable(name: "hoco", scope: !8656, file: !3, line: 2075, type: !288)
!8672 = !DILocation(line: 2075, column: 8, scope: !8656)
!8673 = !DILocalVariable(name: "v1", scope: !8656, file: !3, line: 2075, type: !206)
!8674 = !DILocation(line: 2075, column: 17, scope: !8656)
!8675 = !DILocalVariable(name: "nor", scope: !8656, file: !3, line: 2075, type: !206)
!8676 = !DILocation(line: 2075, column: 24, scope: !8656)
!8677 = !DILocalVariable(name: "dface", scope: !8656, file: !3, line: 2076, type: !7)
!8678 = !DILocation(line: 2076, column: 8, scope: !8656)
!8679 = !DILocalVariable(name: "fac", scope: !8656, file: !3, line: 2076, type: !7)
!8680 = !DILocation(line: 2076, column: 15, scope: !8656)
!8681 = !DILocalVariable(name: "siz", scope: !8656, file: !3, line: 2076, type: !7)
!8682 = !DILocation(line: 2076, column: 20, scope: !8656)
!8683 = !DILocation(line: 2078, column: 28, scope: !8656)
!8684 = !DILocation(line: 2078, column: 33, scope: !8656)
!8685 = !DILocation(line: 2078, column: 38, scope: !8656)
!8686 = !DILocation(line: 2078, column: 2, scope: !8656)
!8687 = !DILocation(line: 2079, column: 13, scope: !8656)
!8688 = !DILocation(line: 2079, column: 17, scope: !8656)
!8689 = !DILocation(line: 2079, column: 22, scope: !8656)
!8690 = !DILocation(line: 2079, column: 26, scope: !8656)
!8691 = !DILocation(line: 2079, column: 2, scope: !8656)
!8692 = !DILocation(line: 2080, column: 6, scope: !8693)
!8693 = distinct !DILexicalBlock(scope: !8656, file: !3, line: 2080, column: 6)
!8694 = !DILocation(line: 2080, column: 11, scope: !8693)
!8695 = !DILocation(line: 2080, column: 16, scope: !8693)
!8696 = !DILocation(line: 2080, column: 6, scope: !8656)
!8697 = !DILocation(line: 2081, column: 13, scope: !8693)
!8698 = !DILocation(line: 2081, column: 18, scope: !8693)
!8699 = !DILocation(line: 2081, column: 23, scope: !8693)
!8700 = !DILocation(line: 2081, column: 3, scope: !8693)
!8701 = !DILocation(line: 2084, column: 19, scope: !8656)
!8702 = !DILocation(line: 2084, column: 23, scope: !8656)
!8703 = !DILocation(line: 2084, column: 10, scope: !8656)
!8704 = !DILocation(line: 2084, column: 8, scope: !8656)
!8705 = !DILocation(line: 2085, column: 2, scope: !8656)
!8706 = !DILocation(line: 2085, column: 9, scope: !8656)
!8707 = !DILocation(line: 2088, column: 10, scope: !8708)
!8708 = distinct !DILexicalBlock(scope: !8656, file: !3, line: 2088, column: 6)
!8709 = !DILocation(line: 2088, column: 15, scope: !8708)
!8710 = !DILocation(line: 2088, column: 6, scope: !8656)
!8711 = !DILocalVariable(name: "fx", scope: !8712, file: !3, line: 2090, type: !7)
!8712 = distinct !DILexicalBlock(scope: !8708, file: !3, line: 2088, column: 26)
!8713 = !DILocation(line: 2090, column: 9, scope: !8712)
!8714 = !DILocation(line: 2090, column: 21, scope: !8712)
!8715 = !DILocation(line: 2090, column: 19, scope: !8712)
!8716 = !DILocation(line: 2090, column: 26, scope: !8712)
!8717 = !DILocation(line: 2090, column: 25, scope: !8712)
!8718 = !DILocation(line: 2090, column: 17, scope: !8712)
!8719 = !DILocalVariable(name: "fy", scope: !8712, file: !3, line: 2091, type: !7)
!8720 = !DILocation(line: 2091, column: 9, scope: !8712)
!8721 = !DILocation(line: 2091, column: 21, scope: !8712)
!8722 = !DILocation(line: 2091, column: 19, scope: !8712)
!8723 = !DILocation(line: 2091, column: 26, scope: !8712)
!8724 = !DILocation(line: 2091, column: 25, scope: !8712)
!8725 = !DILocation(line: 2091, column: 17, scope: !8712)
!8726 = !DILocation(line: 2093, column: 13, scope: !8712)
!8727 = !DILocation(line: 2093, column: 24, scope: !8712)
!8728 = !DILocation(line: 2093, column: 22, scope: !8712)
!8729 = !DILocation(line: 2093, column: 21, scope: !8712)
!8730 = !DILocation(line: 2093, column: 15, scope: !8712)
!8731 = !DILocation(line: 2093, column: 30, scope: !8712)
!8732 = !DILocation(line: 2093, column: 29, scope: !8712)
!8733 = !DILocation(line: 2093, column: 35, scope: !8712)
!8734 = !DILocation(line: 2093, column: 50, scope: !8712)
!8735 = !DILocation(line: 2093, column: 49, scope: !8712)
!8736 = !DILocation(line: 2093, column: 33, scope: !8712)
!8737 = !DILocation(line: 2093, column: 3, scope: !8712)
!8738 = !DILocation(line: 2093, column: 10, scope: !8712)
!8739 = !DILocation(line: 2094, column: 13, scope: !8712)
!8740 = !DILocation(line: 2094, column: 24, scope: !8712)
!8741 = !DILocation(line: 2094, column: 22, scope: !8712)
!8742 = !DILocation(line: 2094, column: 21, scope: !8712)
!8743 = !DILocation(line: 2094, column: 15, scope: !8712)
!8744 = !DILocation(line: 2094, column: 30, scope: !8712)
!8745 = !DILocation(line: 2094, column: 29, scope: !8712)
!8746 = !DILocation(line: 2094, column: 35, scope: !8712)
!8747 = !DILocation(line: 2094, column: 50, scope: !8712)
!8748 = !DILocation(line: 2094, column: 49, scope: !8712)
!8749 = !DILocation(line: 2094, column: 33, scope: !8712)
!8750 = !DILocation(line: 2094, column: 3, scope: !8712)
!8751 = !DILocation(line: 2094, column: 10, scope: !8712)
!8752 = !DILocation(line: 2097, column: 7, scope: !8753)
!8753 = distinct !DILexicalBlock(scope: !8712, file: !3, line: 2097, column: 7)
!8754 = !DILocation(line: 2097, column: 13, scope: !8753)
!8755 = !DILocation(line: 2097, column: 7, scope: !8712)
!8756 = !DILocation(line: 2098, column: 14, scope: !8753)
!8757 = !DILocation(line: 2098, column: 22, scope: !8753)
!8758 = !DILocation(line: 2098, column: 29, scope: !8753)
!8759 = !DILocation(line: 2098, column: 28, scope: !8753)
!8760 = !DILocation(line: 2098, column: 20, scope: !8753)
!8761 = !DILocation(line: 2098, column: 39, scope: !8753)
!8762 = !DILocation(line: 2098, column: 46, scope: !8753)
!8763 = !DILocation(line: 2098, column: 45, scope: !8753)
!8764 = !DILocation(line: 2098, column: 37, scope: !8753)
!8765 = !DILocation(line: 2098, column: 55, scope: !8753)
!8766 = !DILocation(line: 2098, column: 54, scope: !8753)
!8767 = !DILocation(line: 2098, column: 4, scope: !8753)
!8768 = !DILocation(line: 2098, column: 11, scope: !8753)
!8769 = !DILocation(line: 2100, column: 4, scope: !8753)
!8770 = !DILocation(line: 2100, column: 11, scope: !8753)
!8771 = !DILocation(line: 2101, column: 2, scope: !8712)
!8772 = !DILocalVariable(name: "div", scope: !8773, file: !3, line: 2103, type: !7)
!8773 = distinct !DILexicalBlock(scope: !8708, file: !3, line: 2102, column: 7)
!8774 = !DILocation(line: 2103, column: 9, scope: !8773)
!8775 = !DILocalVariable(name: "view", scope: !8773, file: !3, line: 2103, type: !206)
!8776 = !DILocation(line: 2103, column: 14, scope: !8773)
!8777 = !DILocation(line: 2105, column: 20, scope: !8773)
!8778 = !DILocation(line: 2105, column: 26, scope: !8773)
!8779 = !DILocation(line: 2105, column: 29, scope: !8773)
!8780 = !DILocation(line: 2105, column: 3, scope: !8773)
!8781 = !DILocation(line: 2107, column: 18, scope: !8773)
!8782 = !DILocation(line: 2107, column: 23, scope: !8773)
!8783 = !DILocation(line: 2107, column: 9, scope: !8773)
!8784 = !DILocation(line: 2107, column: 7, scope: !8773)
!8785 = !DILocation(line: 2108, column: 7, scope: !8786)
!8786 = distinct !DILexicalBlock(scope: !8773, file: !3, line: 2108, column: 7)
!8787 = !DILocation(line: 2108, column: 10, scope: !8786)
!8788 = !DILocation(line: 2108, column: 7, scope: !8773)
!8789 = !DILocation(line: 2109, column: 4, scope: !8786)
!8790 = !DILocation(line: 2111, column: 8, scope: !8773)
!8791 = !DILocation(line: 2111, column: 14, scope: !8773)
!8792 = !DILocation(line: 2111, column: 13, scope: !8773)
!8793 = !DILocation(line: 2111, column: 6, scope: !8773)
!8794 = !DILocation(line: 2113, column: 12, scope: !8773)
!8795 = !DILocation(line: 2113, column: 16, scope: !8773)
!8796 = !DILocation(line: 2113, column: 15, scope: !8773)
!8797 = !DILocation(line: 2113, column: 3, scope: !8773)
!8798 = !DILocation(line: 2113, column: 10, scope: !8773)
!8799 = !DILocation(line: 2114, column: 12, scope: !8773)
!8800 = !DILocation(line: 2114, column: 16, scope: !8773)
!8801 = !DILocation(line: 2114, column: 15, scope: !8773)
!8802 = !DILocation(line: 2114, column: 3, scope: !8773)
!8803 = !DILocation(line: 2114, column: 10, scope: !8773)
!8804 = !DILocation(line: 2115, column: 12, scope: !8773)
!8805 = !DILocation(line: 2115, column: 16, scope: !8773)
!8806 = !DILocation(line: 2115, column: 15, scope: !8773)
!8807 = !DILocation(line: 2115, column: 3, scope: !8773)
!8808 = !DILocation(line: 2115, column: 10, scope: !8773)
!8809 = !DILocation(line: 2119, column: 12, scope: !8656)
!8810 = !DILocation(line: 2119, column: 17, scope: !8656)
!8811 = !DILocation(line: 2119, column: 26, scope: !8656)
!8812 = !DILocation(line: 2119, column: 2, scope: !8656)
!8813 = !DILocation(line: 2123, column: 14, scope: !8656)
!8814 = !DILocation(line: 2123, column: 8, scope: !8656)
!8815 = !DILocation(line: 2123, column: 6, scope: !8656)
!8816 = !DILocation(line: 2124, column: 6, scope: !8817)
!8817 = distinct !DILexicalBlock(scope: !8656, file: !3, line: 2124, column: 6)
!8818 = !DILocation(line: 2124, column: 15, scope: !8817)
!8819 = !DILocation(line: 2124, column: 14, scope: !8817)
!8820 = !DILocation(line: 2124, column: 13, scope: !8817)
!8821 = !DILocation(line: 2124, column: 19, scope: !8817)
!8822 = !DILocation(line: 2124, column: 22, scope: !8817)
!8823 = !DILocation(line: 2124, column: 30, scope: !8817)
!8824 = !DILocation(line: 2124, column: 29, scope: !8817)
!8825 = !DILocation(line: 2124, column: 6, scope: !8656)
!8826 = !DILocation(line: 2125, column: 3, scope: !8817)
!8827 = !DILocation(line: 2126, column: 6, scope: !8828)
!8828 = distinct !DILexicalBlock(scope: !8656, file: !3, line: 2126, column: 6)
!8829 = !DILocation(line: 2126, column: 15, scope: !8828)
!8830 = !DILocation(line: 2126, column: 14, scope: !8828)
!8831 = !DILocation(line: 2126, column: 13, scope: !8828)
!8832 = !DILocation(line: 2126, column: 19, scope: !8828)
!8833 = !DILocation(line: 2126, column: 22, scope: !8828)
!8834 = !DILocation(line: 2126, column: 30, scope: !8828)
!8835 = !DILocation(line: 2126, column: 29, scope: !8828)
!8836 = !DILocation(line: 2126, column: 6, scope: !8656)
!8837 = !DILocation(line: 2127, column: 3, scope: !8828)
!8838 = !DILocation(line: 2128, column: 6, scope: !8839)
!8839 = distinct !DILexicalBlock(scope: !8656, file: !3, line: 2128, column: 6)
!8840 = !DILocation(line: 2128, column: 15, scope: !8839)
!8841 = !DILocation(line: 2128, column: 14, scope: !8839)
!8842 = !DILocation(line: 2128, column: 13, scope: !8839)
!8843 = !DILocation(line: 2128, column: 19, scope: !8839)
!8844 = !DILocation(line: 2128, column: 22, scope: !8839)
!8845 = !DILocation(line: 2128, column: 30, scope: !8839)
!8846 = !DILocation(line: 2128, column: 29, scope: !8839)
!8847 = !DILocation(line: 2128, column: 6, scope: !8656)
!8848 = !DILocation(line: 2129, column: 3, scope: !8839)
!8849 = !DILocation(line: 2131, column: 19, scope: !8656)
!8850 = !DILocation(line: 2131, column: 24, scope: !8656)
!8851 = !DILocation(line: 2131, column: 12, scope: !8656)
!8852 = !DILocation(line: 2131, column: 11, scope: !8656)
!8853 = !DILocation(line: 2131, column: 5, scope: !8656)
!8854 = !DILocation(line: 2132, column: 11, scope: !8656)
!8855 = !DILocation(line: 2132, column: 21, scope: !8656)
!8856 = !DILocation(line: 2132, column: 29, scope: !8656)
!8857 = !DILocation(line: 2132, column: 28, scope: !8656)
!8858 = !DILocation(line: 2132, column: 20, scope: !8656)
!8859 = !DILocation(line: 2132, column: 14, scope: !8656)
!8860 = !DILocation(line: 2132, column: 38, scope: !8656)
!8861 = !DILocation(line: 2132, column: 2, scope: !8656)
!8862 = !DILocation(line: 2132, column: 9, scope: !8656)
!8863 = !DILocation(line: 2133, column: 11, scope: !8656)
!8864 = !DILocation(line: 2133, column: 21, scope: !8656)
!8865 = !DILocation(line: 2133, column: 29, scope: !8656)
!8866 = !DILocation(line: 2133, column: 28, scope: !8656)
!8867 = !DILocation(line: 2133, column: 20, scope: !8656)
!8868 = !DILocation(line: 2133, column: 14, scope: !8656)
!8869 = !DILocation(line: 2133, column: 38, scope: !8656)
!8870 = !DILocation(line: 2133, column: 2, scope: !8656)
!8871 = !DILocation(line: 2133, column: 9, scope: !8656)
!8872 = !DILocation(line: 2134, column: 32, scope: !8656)
!8873 = !DILocation(line: 2134, column: 40, scope: !8656)
!8874 = !DILocation(line: 2134, column: 39, scope: !8656)
!8875 = !DILocation(line: 2134, column: 30, scope: !8656)
!8876 = !DILocation(line: 2134, column: 2, scope: !8656)
!8877 = !DILocation(line: 2134, column: 9, scope: !8656)
!8878 = !DILocation(line: 2137, column: 19, scope: !8656)
!8879 = !DILocation(line: 2137, column: 24, scope: !8656)
!8880 = !DILocation(line: 2137, column: 18, scope: !8656)
!8881 = !DILocation(line: 2137, column: 2, scope: !8656)
!8882 = !DILocation(line: 2137, column: 10, scope: !8656)
!8883 = !DILocation(line: 2139, column: 2, scope: !8656)
!8884 = !DILocation(line: 2140, column: 1, scope: !8656)
!8885 = distinct !DISubprogram(name: "isb_alloc_sample_transp", scope: !3, file: !3, line: 2356, type: !8886, scopeLine: 2357, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!8886 = !DISubroutineType(types: !8887)
!8887 = !{!5538, !5551, !5556}
!8888 = !DILocalVariable(name: "isbsa", arg: 1, scope: !8885, file: !3, line: 2356, type: !5551)
!8889 = !DILocation(line: 2356, column: 57, scope: !8885)
!8890 = !DILocalVariable(name: "mem", arg: 2, scope: !8885, file: !3, line: 2356, type: !5556)
!8891 = !DILocation(line: 2356, column: 74, scope: !8885)
!8892 = !DILocalVariable(name: "new", scope: !8885, file: !3, line: 2358, type: !5538)
!8893 = !DILocation(line: 2358, column: 14, scope: !8885)
!8894 = !DILocation(line: 2360, column: 26, scope: !8885)
!8895 = !DILocation(line: 2360, column: 7, scope: !8885)
!8896 = !DILocation(line: 2360, column: 5, scope: !8885)
!8897 = !DILocation(line: 2361, column: 7, scope: !8898)
!8898 = distinct !DILexicalBlock(scope: !8885, file: !3, line: 2361, column: 6)
!8899 = !DILocation(line: 2361, column: 6, scope: !8898)
!8900 = !DILocation(line: 2361, column: 6, scope: !8885)
!8901 = !DILocation(line: 2362, column: 16, scope: !8898)
!8902 = !DILocation(line: 2362, column: 15, scope: !8898)
!8903 = !DILocation(line: 2362, column: 3, scope: !8898)
!8904 = !DILocation(line: 2362, column: 8, scope: !8898)
!8905 = !DILocation(line: 2362, column: 12, scope: !8898)
!8906 = !DILocation(line: 2364, column: 3, scope: !8898)
!8907 = !DILocation(line: 2364, column: 8, scope: !8898)
!8908 = !DILocation(line: 2364, column: 12, scope: !8898)
!8909 = !DILocation(line: 2366, column: 10, scope: !8885)
!8910 = !DILocation(line: 2366, column: 3, scope: !8885)
!8911 = !DILocation(line: 2366, column: 8, scope: !8885)
!8912 = !DILocation(line: 2367, column: 9, scope: !8885)
!8913 = !DILocation(line: 2367, column: 2, scope: !8885)
!8914 = distinct !DISubprogram(name: "bound_rectf", scope: !3, file: !3, line: 1494, type: !8915, scopeLine: 1495, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!8915 = !DISubroutineType(types: !8916)
!8916 = !{null, !2213, !3742}
!8917 = !DILocalVariable(name: "box", arg: 1, scope: !8914, file: !3, line: 1494, type: !2213)
!8918 = !DILocation(line: 1494, column: 31, scope: !8914)
!8919 = !DILocalVariable(name: "v1", arg: 2, scope: !8914, file: !3, line: 1494, type: !3742)
!8920 = !DILocation(line: 1494, column: 48, scope: !8914)
!8921 = !DILocation(line: 1496, column: 6, scope: !8922)
!8922 = distinct !DILexicalBlock(scope: !8914, file: !3, line: 1496, column: 6)
!8923 = !DILocation(line: 1496, column: 14, scope: !8922)
!8924 = !DILocation(line: 1496, column: 19, scope: !8922)
!8925 = !DILocation(line: 1496, column: 12, scope: !8922)
!8926 = !DILocation(line: 1496, column: 6, scope: !8914)
!8927 = !DILocation(line: 1496, column: 37, scope: !8922)
!8928 = !DILocation(line: 1496, column: 25, scope: !8922)
!8929 = !DILocation(line: 1496, column: 30, scope: !8922)
!8930 = !DILocation(line: 1496, column: 35, scope: !8922)
!8931 = !DILocation(line: 1497, column: 6, scope: !8932)
!8932 = distinct !DILexicalBlock(scope: !8914, file: !3, line: 1497, column: 6)
!8933 = !DILocation(line: 1497, column: 14, scope: !8932)
!8934 = !DILocation(line: 1497, column: 19, scope: !8932)
!8935 = !DILocation(line: 1497, column: 12, scope: !8932)
!8936 = !DILocation(line: 1497, column: 6, scope: !8914)
!8937 = !DILocation(line: 1497, column: 37, scope: !8932)
!8938 = !DILocation(line: 1497, column: 25, scope: !8932)
!8939 = !DILocation(line: 1497, column: 30, scope: !8932)
!8940 = !DILocation(line: 1497, column: 35, scope: !8932)
!8941 = !DILocation(line: 1498, column: 6, scope: !8942)
!8942 = distinct !DILexicalBlock(scope: !8914, file: !3, line: 1498, column: 6)
!8943 = !DILocation(line: 1498, column: 14, scope: !8942)
!8944 = !DILocation(line: 1498, column: 19, scope: !8942)
!8945 = !DILocation(line: 1498, column: 12, scope: !8942)
!8946 = !DILocation(line: 1498, column: 6, scope: !8914)
!8947 = !DILocation(line: 1498, column: 37, scope: !8942)
!8948 = !DILocation(line: 1498, column: 25, scope: !8942)
!8949 = !DILocation(line: 1498, column: 30, scope: !8942)
!8950 = !DILocation(line: 1498, column: 35, scope: !8942)
!8951 = !DILocation(line: 1499, column: 6, scope: !8952)
!8952 = distinct !DILexicalBlock(scope: !8914, file: !3, line: 1499, column: 6)
!8953 = !DILocation(line: 1499, column: 14, scope: !8952)
!8954 = !DILocation(line: 1499, column: 19, scope: !8952)
!8955 = !DILocation(line: 1499, column: 12, scope: !8952)
!8956 = !DILocation(line: 1499, column: 6, scope: !8914)
!8957 = !DILocation(line: 1499, column: 37, scope: !8952)
!8958 = !DILocation(line: 1499, column: 25, scope: !8952)
!8959 = !DILocation(line: 1499, column: 30, scope: !8952)
!8960 = !DILocation(line: 1499, column: 35, scope: !8952)
!8961 = !DILocation(line: 1500, column: 1, scope: !8914)
!8962 = distinct !DISubprogram(name: "isb_bsp_split_init", scope: !3, file: !3, line: 1504, type: !8963, scopeLine: 1505, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!8963 = !DISubroutineType(types: !8964)
!8964 = !{null, !2224, !5556, !8}
!8965 = !DILocalVariable(name: "root", arg: 1, scope: !8962, file: !3, line: 1504, type: !2224)
!8966 = !DILocation(line: 1504, column: 43, scope: !8962)
!8967 = !DILocalVariable(name: "mem", arg: 2, scope: !8962, file: !3, line: 1504, type: !5556)
!8968 = !DILocation(line: 1504, column: 59, scope: !8962)
!8969 = !DILocalVariable(name: "level", arg: 3, scope: !8962, file: !3, line: 1504, type: !8)
!8970 = !DILocation(line: 1504, column: 68, scope: !8962)
!8971 = !DILocation(line: 1508, column: 6, scope: !8972)
!8972 = distinct !DILexicalBlock(scope: !8962, file: !3, line: 1508, column: 6)
!8973 = !DILocation(line: 1508, column: 12, scope: !8972)
!8974 = !DILocation(line: 1508, column: 6, scope: !8962)
!8975 = !DILocalVariable(name: "left", scope: !8976, file: !3, line: 1509, type: !2224)
!8976 = distinct !DILexicalBlock(scope: !8972, file: !3, line: 1508, column: 17)
!8977 = !DILocation(line: 1509, column: 14, scope: !8976)
!8978 = !DILocalVariable(name: "right", scope: !8976, file: !3, line: 1509, type: !2224)
!8979 = !DILocation(line: 1509, column: 21, scope: !8976)
!8980 = !DILocalVariable(name: "i", scope: !8976, file: !3, line: 1510, type: !8)
!8981 = !DILocation(line: 1510, column: 7, scope: !8976)
!8982 = !DILocation(line: 1513, column: 27, scope: !8976)
!8983 = !DILocation(line: 1513, column: 33, scope: !8976)
!8984 = !DILocation(line: 1513, column: 37, scope: !8976)
!8985 = !DILocation(line: 1513, column: 42, scope: !8976)
!8986 = !DILocation(line: 1513, column: 48, scope: !8976)
!8987 = !DILocation(line: 1513, column: 52, scope: !8976)
!8988 = !DILocation(line: 1513, column: 41, scope: !8976)
!8989 = !DILocation(line: 1513, column: 25, scope: !8976)
!8990 = !DILocation(line: 1513, column: 3, scope: !8976)
!8991 = !DILocation(line: 1513, column: 9, scope: !8976)
!8992 = !DILocation(line: 1513, column: 19, scope: !8976)
!8993 = !DILocation(line: 1514, column: 27, scope: !8976)
!8994 = !DILocation(line: 1514, column: 33, scope: !8976)
!8995 = !DILocation(line: 1514, column: 37, scope: !8976)
!8996 = !DILocation(line: 1514, column: 42, scope: !8976)
!8997 = !DILocation(line: 1514, column: 48, scope: !8976)
!8998 = !DILocation(line: 1514, column: 52, scope: !8976)
!8999 = !DILocation(line: 1514, column: 41, scope: !8976)
!9000 = !DILocation(line: 1514, column: 25, scope: !8976)
!9001 = !DILocation(line: 1514, column: 3, scope: !8976)
!9002 = !DILocation(line: 1514, column: 9, scope: !8976)
!9003 = !DILocation(line: 1514, column: 19, scope: !8976)
!9004 = !DILocation(line: 1517, column: 7, scope: !9005)
!9005 = distinct !DILexicalBlock(scope: !8976, file: !3, line: 1517, column: 7)
!9006 = !DILocation(line: 1517, column: 32, scope: !9005)
!9007 = !DILocation(line: 1517, column: 30, scope: !9005)
!9008 = !DILocation(line: 1517, column: 7, scope: !8976)
!9009 = !DILocation(line: 1518, column: 8, scope: !9005)
!9010 = !DILocation(line: 1518, column: 14, scope: !9005)
!9011 = !DILocation(line: 1518, column: 20, scope: !9005)
!9012 = !DILocation(line: 1518, column: 6, scope: !9005)
!9013 = !DILocation(line: 1518, column: 4, scope: !9005)
!9014 = !DILocation(line: 1520, column: 8, scope: !9005)
!9015 = !DILocation(line: 1520, column: 14, scope: !9005)
!9016 = !DILocation(line: 1520, column: 20, scope: !9005)
!9017 = !DILocation(line: 1520, column: 6, scope: !9005)
!9018 = !DILocation(line: 1522, column: 40, scope: !8976)
!9019 = !DILocation(line: 1522, column: 21, scope: !8976)
!9020 = !DILocation(line: 1522, column: 9, scope: !8976)
!9021 = !DILocation(line: 1522, column: 15, scope: !8976)
!9022 = !DILocation(line: 1522, column: 19, scope: !8976)
!9023 = !DILocation(line: 1522, column: 7, scope: !8976)
!9024 = !DILocation(line: 1523, column: 42, scope: !8976)
!9025 = !DILocation(line: 1523, column: 23, scope: !8976)
!9026 = !DILocation(line: 1523, column: 10, scope: !8976)
!9027 = !DILocation(line: 1523, column: 16, scope: !8976)
!9028 = !DILocation(line: 1523, column: 21, scope: !8976)
!9029 = !DILocation(line: 1523, column: 8, scope: !8976)
!9030 = !DILocation(line: 1526, column: 3, scope: !8976)
!9031 = !DILocation(line: 1526, column: 9, scope: !8976)
!9032 = !DILocation(line: 1526, column: 14, scope: !8976)
!9033 = !DILocation(line: 1526, column: 20, scope: !8976)
!9034 = !DILocation(line: 1527, column: 3, scope: !8976)
!9035 = !DILocation(line: 1527, column: 10, scope: !8976)
!9036 = !DILocation(line: 1527, column: 15, scope: !8976)
!9037 = !DILocation(line: 1527, column: 21, scope: !8976)
!9038 = !DILocation(line: 1528, column: 7, scope: !9039)
!9039 = distinct !DILexicalBlock(scope: !8976, file: !3, line: 1528, column: 7)
!9040 = !DILocation(line: 1528, column: 8, scope: !9039)
!9041 = !DILocation(line: 1528, column: 7, scope: !8976)
!9042 = !DILocation(line: 1529, column: 21, scope: !9043)
!9043 = distinct !DILexicalBlock(scope: !9039, file: !3, line: 1528, column: 13)
!9044 = !DILocation(line: 1529, column: 27, scope: !9043)
!9045 = !DILocation(line: 1529, column: 4, scope: !9043)
!9046 = !DILocation(line: 1529, column: 10, scope: !9043)
!9047 = !DILocation(line: 1529, column: 14, scope: !9043)
!9048 = !DILocation(line: 1529, column: 19, scope: !9043)
!9049 = !DILocation(line: 1530, column: 22, scope: !9043)
!9050 = !DILocation(line: 1530, column: 28, scope: !9043)
!9051 = !DILocation(line: 1530, column: 4, scope: !9043)
!9052 = !DILocation(line: 1530, column: 11, scope: !9043)
!9053 = !DILocation(line: 1530, column: 15, scope: !9043)
!9054 = !DILocation(line: 1530, column: 20, scope: !9043)
!9055 = !DILocation(line: 1531, column: 3, scope: !9043)
!9056 = !DILocation(line: 1533, column: 21, scope: !9057)
!9057 = distinct !DILexicalBlock(scope: !9039, file: !3, line: 1532, column: 8)
!9058 = !DILocation(line: 1533, column: 27, scope: !9057)
!9059 = !DILocation(line: 1533, column: 4, scope: !9057)
!9060 = !DILocation(line: 1533, column: 10, scope: !9057)
!9061 = !DILocation(line: 1533, column: 14, scope: !9057)
!9062 = !DILocation(line: 1533, column: 19, scope: !9057)
!9063 = !DILocation(line: 1534, column: 22, scope: !9057)
!9064 = !DILocation(line: 1534, column: 28, scope: !9057)
!9065 = !DILocation(line: 1534, column: 4, scope: !9057)
!9066 = !DILocation(line: 1534, column: 11, scope: !9057)
!9067 = !DILocation(line: 1534, column: 15, scope: !9057)
!9068 = !DILocation(line: 1534, column: 20, scope: !9057)
!9069 = !DILocation(line: 1536, column: 22, scope: !8976)
!9070 = !DILocation(line: 1536, column: 28, scope: !8976)
!9071 = !DILocation(line: 1536, column: 33, scope: !8976)
!9072 = !DILocation(line: 1536, column: 38, scope: !8976)
!9073 = !DILocation(line: 1536, column: 3, scope: !8976)
!9074 = !DILocation(line: 1537, column: 22, scope: !8976)
!9075 = !DILocation(line: 1537, column: 29, scope: !8976)
!9076 = !DILocation(line: 1537, column: 34, scope: !8976)
!9077 = !DILocation(line: 1537, column: 39, scope: !8976)
!9078 = !DILocation(line: 1537, column: 3, scope: !8976)
!9079 = !DILocation(line: 1538, column: 2, scope: !8976)
!9080 = !DILocation(line: 1541, column: 37, scope: !9081)
!9081 = distinct !DILexicalBlock(scope: !8972, file: !3, line: 1539, column: 7)
!9082 = !DILocation(line: 1541, column: 18, scope: !9081)
!9083 = !DILocation(line: 1541, column: 3, scope: !9081)
!9084 = !DILocation(line: 1541, column: 9, scope: !9081)
!9085 = !DILocation(line: 1541, column: 16, scope: !9081)
!9086 = !DILocation(line: 1543, column: 1, scope: !8962)
!9087 = distinct !DISubprogram(name: "isb_add_samples_transp", scope: !3, file: !3, line: 2371, type: !9088, scopeLine: 2372, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!9088 = !DISubroutineType(types: !9089)
!9089 = !{!8, !5426, !2224, !5556, !9090}
!9090 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5551, size: 64)
!9091 = !DILocalVariable(name: "pa", arg: 1, scope: !9087, file: !3, line: 2371, type: !5426)
!9092 = !DILocation(line: 2371, column: 47, scope: !9087)
!9093 = !DILocalVariable(name: "root", arg: 2, scope: !9087, file: !3, line: 2371, type: !2224)
!9094 = !DILocation(line: 2371, column: 62, scope: !9087)
!9095 = !DILocalVariable(name: "memarena", arg: 3, scope: !9087, file: !3, line: 2371, type: !5556)
!9096 = !DILocation(line: 2371, column: 78, scope: !9087)
!9097 = !DILocalVariable(name: "samplebuf", arg: 4, scope: !9087, file: !3, line: 2371, type: !9090)
!9098 = !DILocation(line: 2371, column: 102, scope: !9087)
!9099 = !DILocalVariable(name: "xi", scope: !9087, file: !3, line: 2373, type: !8)
!9100 = !DILocation(line: 2373, column: 6, scope: !9087)
!9101 = !DILocalVariable(name: "yi", scope: !9087, file: !3, line: 2373, type: !8)
!9102 = !DILocation(line: 2373, column: 10, scope: !9087)
!9103 = !DILocalVariable(name: "xcos", scope: !9087, file: !3, line: 2373, type: !26)
!9104 = !DILocation(line: 2373, column: 15, scope: !9087)
!9105 = !DILocalVariable(name: "ycos", scope: !9087, file: !3, line: 2373, type: !26)
!9106 = !DILocation(line: 2373, column: 22, scope: !9087)
!9107 = !DILocalVariable(name: "sample", scope: !9087, file: !3, line: 2374, type: !8)
!9108 = !DILocation(line: 2374, column: 6, scope: !9087)
!9109 = !DILocalVariable(name: "bsp_err", scope: !9087, file: !3, line: 2374, type: !8)
!9110 = !DILocation(line: 2374, column: 14, scope: !9087)
!9111 = !DILocation(line: 2377, column: 8, scope: !9087)
!9112 = !DILocation(line: 2377, column: 20, scope: !9087)
!9113 = !DILocation(line: 2377, column: 24, scope: !9087)
!9114 = !DILocation(line: 2377, column: 29, scope: !9087)
!9115 = !DILocation(line: 2377, column: 6, scope: !9087)
!9116 = !DILocation(line: 2378, column: 8, scope: !9087)
!9117 = !DILocation(line: 2378, column: 20, scope: !9087)
!9118 = !DILocation(line: 2378, column: 24, scope: !9087)
!9119 = !DILocation(line: 2378, column: 29, scope: !9087)
!9120 = !DILocation(line: 2378, column: 6, scope: !9087)
!9121 = !DILocation(line: 2379, column: 9, scope: !9122)
!9122 = distinct !DILexicalBlock(scope: !9087, file: !3, line: 2379, column: 2)
!9123 = !DILocation(line: 2379, column: 7, scope: !9122)
!9124 = !DILocation(line: 2379, column: 13, scope: !9125)
!9125 = distinct !DILexicalBlock(scope: !9122, file: !3, line: 2379, column: 2)
!9126 = !DILocation(line: 2379, column: 16, scope: !9125)
!9127 = !DILocation(line: 2379, column: 20, scope: !9125)
!9128 = !DILocation(line: 2379, column: 15, scope: !9125)
!9129 = !DILocation(line: 2379, column: 2, scope: !9122)
!9130 = !DILocation(line: 2380, column: 13, scope: !9125)
!9131 = !DILocation(line: 2380, column: 3, scope: !9125)
!9132 = !DILocation(line: 2380, column: 8, scope: !9125)
!9133 = !DILocation(line: 2380, column: 11, scope: !9125)
!9134 = !DILocation(line: 2379, column: 29, scope: !9125)
!9135 = !DILocation(line: 2379, column: 2, scope: !9125)
!9136 = distinct !{!9136, !9129, !9137}
!9137 = !DILocation(line: 2380, column: 13, scope: !9122)
!9138 = !DILocation(line: 2381, column: 9, scope: !9139)
!9139 = distinct !DILexicalBlock(scope: !9087, file: !3, line: 2381, column: 2)
!9140 = !DILocation(line: 2381, column: 7, scope: !9139)
!9141 = !DILocation(line: 2381, column: 13, scope: !9142)
!9142 = distinct !DILexicalBlock(scope: !9139, file: !3, line: 2381, column: 2)
!9143 = !DILocation(line: 2381, column: 16, scope: !9142)
!9144 = !DILocation(line: 2381, column: 20, scope: !9142)
!9145 = !DILocation(line: 2381, column: 15, scope: !9142)
!9146 = !DILocation(line: 2381, column: 2, scope: !9139)
!9147 = !DILocation(line: 2382, column: 13, scope: !9142)
!9148 = !DILocation(line: 2382, column: 3, scope: !9142)
!9149 = !DILocation(line: 2382, column: 8, scope: !9142)
!9150 = !DILocation(line: 2382, column: 11, scope: !9142)
!9151 = !DILocation(line: 2381, column: 29, scope: !9142)
!9152 = !DILocation(line: 2381, column: 2, scope: !9142)
!9153 = distinct !{!9153, !9146, !9154}
!9154 = !DILocation(line: 2382, column: 13, scope: !9139)
!9155 = !DILocation(line: 2383, column: 22, scope: !9087)
!9156 = !DILocation(line: 2383, column: 41, scope: !9087)
!9157 = !DILocation(line: 2383, column: 45, scope: !9087)
!9158 = !DILocation(line: 2383, column: 2, scope: !9087)
!9159 = !DILocation(line: 2384, column: 22, scope: !9087)
!9160 = !DILocation(line: 2384, column: 41, scope: !9087)
!9161 = !DILocation(line: 2384, column: 45, scope: !9087)
!9162 = !DILocation(line: 2384, column: 2, scope: !9087)
!9163 = !DILocation(line: 2386, column: 13, scope: !9164)
!9164 = distinct !DILexicalBlock(scope: !9087, file: !3, line: 2386, column: 2)
!9165 = !DILocation(line: 2386, column: 7, scope: !9164)
!9166 = !DILocation(line: 2386, column: 17, scope: !9167)
!9167 = distinct !DILexicalBlock(scope: !9164, file: !3, line: 2386, column: 2)
!9168 = !DILocation(line: 2386, column: 27, scope: !9167)
!9169 = !DILocation(line: 2386, column: 25, scope: !9167)
!9170 = !DILocation(line: 2386, column: 33, scope: !9167)
!9171 = !DILocation(line: 2386, column: 31, scope: !9167)
!9172 = !DILocation(line: 2386, column: 23, scope: !9167)
!9173 = !DILocation(line: 2386, column: 2, scope: !9164)
!9174 = !DILocalVariable(name: "samp", scope: !9175, file: !3, line: 2387, type: !5551)
!9175 = distinct !DILexicalBlock(scope: !9167, file: !3, line: 2386, column: 51)
!9176 = !DILocation(line: 2387, column: 16, scope: !9175)
!9177 = !DILocation(line: 2387, column: 22, scope: !9175)
!9178 = !DILocation(line: 2387, column: 32, scope: !9175)
!9179 = !DILocalVariable(name: "samp1", scope: !9175, file: !3, line: 2387, type: !5538)
!9180 = !DILocation(line: 2387, column: 42, scope: !9175)
!9181 = !DILocation(line: 2389, column: 10, scope: !9182)
!9182 = distinct !DILexicalBlock(scope: !9175, file: !3, line: 2389, column: 3)
!9183 = !DILocation(line: 2389, column: 8, scope: !9182)
!9184 = !DILocation(line: 2389, column: 14, scope: !9185)
!9185 = distinct !DILexicalBlock(scope: !9182, file: !3, line: 2389, column: 3)
!9186 = !DILocation(line: 2389, column: 17, scope: !9185)
!9187 = !DILocation(line: 2389, column: 21, scope: !9185)
!9188 = !DILocation(line: 2389, column: 16, scope: !9185)
!9189 = !DILocation(line: 2389, column: 3, scope: !9182)
!9190 = !DILocalVariable(name: "y", scope: !9191, file: !3, line: 2390, type: !8)
!9191 = distinct !DILexicalBlock(scope: !9185, file: !3, line: 2389, column: 34)
!9192 = !DILocation(line: 2390, column: 8, scope: !9191)
!9193 = !DILocation(line: 2390, column: 11, scope: !9191)
!9194 = !DILocation(line: 2390, column: 16, scope: !9191)
!9195 = !DILocation(line: 2391, column: 11, scope: !9196)
!9196 = distinct !DILexicalBlock(scope: !9191, file: !3, line: 2391, column: 4)
!9197 = !DILocation(line: 2391, column: 9, scope: !9196)
!9198 = !DILocation(line: 2391, column: 15, scope: !9199)
!9199 = distinct !DILexicalBlock(scope: !9196, file: !3, line: 2391, column: 4)
!9200 = !DILocation(line: 2391, column: 18, scope: !9199)
!9201 = !DILocation(line: 2391, column: 22, scope: !9199)
!9202 = !DILocation(line: 2391, column: 17, scope: !9199)
!9203 = !DILocation(line: 2391, column: 4, scope: !9196)
!9204 = !DILocalVariable(name: "x", scope: !9205, file: !3, line: 2392, type: !8)
!9205 = distinct !DILexicalBlock(scope: !9199, file: !3, line: 2391, column: 35)
!9206 = !DILocation(line: 2392, column: 9, scope: !9205)
!9207 = !DILocation(line: 2392, column: 12, scope: !9205)
!9208 = !DILocation(line: 2392, column: 17, scope: !9205)
!9209 = !DILocation(line: 2394, column: 14, scope: !9205)
!9210 = !DILocation(line: 2394, column: 21, scope: !9205)
!9211 = !DILocation(line: 2394, column: 23, scope: !9205)
!9212 = !DILocation(line: 2394, column: 27, scope: !9205)
!9213 = !DILocation(line: 2394, column: 22, scope: !9205)
!9214 = !DILocation(line: 2394, column: 19, scope: !9205)
!9215 = !DILocation(line: 2394, column: 35, scope: !9205)
!9216 = !DILocation(line: 2394, column: 33, scope: !9205)
!9217 = !DILocation(line: 2394, column: 12, scope: !9205)
!9218 = !DILocation(line: 2394, column: 10, scope: !9205)
!9219 = !DILocation(line: 2395, column: 5, scope: !9205)
!9220 = !DILocation(line: 2395, column: 12, scope: !9205)
!9221 = !DILocation(line: 2396, column: 32, scope: !9222)
!9222 = distinct !DILexicalBlock(scope: !9205, file: !3, line: 2395, column: 19)
!9223 = !DILocation(line: 2396, column: 38, scope: !9222)
!9224 = !DILocation(line: 2396, column: 61, scope: !9222)
!9225 = !DILocation(line: 2396, column: 48, scope: !9222)
!9226 = !DILocation(line: 2396, column: 17, scope: !9222)
!9227 = !DILocation(line: 2396, column: 14, scope: !9222)
!9228 = !DILocation(line: 2397, column: 13, scope: !9222)
!9229 = !DILocation(line: 2397, column: 20, scope: !9222)
!9230 = !DILocation(line: 2397, column: 11, scope: !9222)
!9231 = distinct !{!9231, !9219, !9232}
!9232 = !DILocation(line: 2398, column: 5, scope: !9205)
!9233 = !DILocation(line: 2399, column: 4, scope: !9205)
!9234 = !DILocation(line: 2391, column: 31, scope: !9199)
!9235 = !DILocation(line: 2391, column: 4, scope: !9199)
!9236 = distinct !{!9236, !9203, !9237}
!9237 = !DILocation(line: 2399, column: 4, scope: !9196)
!9238 = !DILocation(line: 2400, column: 8, scope: !9239)
!9239 = distinct !DILexicalBlock(scope: !9191, file: !3, line: 2400, column: 8)
!9240 = !DILocation(line: 2400, column: 8, scope: !9191)
!9241 = !DILocation(line: 2400, column: 17, scope: !9239)
!9242 = !DILocation(line: 2401, column: 3, scope: !9191)
!9243 = !DILocation(line: 2389, column: 30, scope: !9185)
!9244 = !DILocation(line: 2389, column: 3, scope: !9185)
!9245 = distinct !{!9245, !9189, !9246}
!9246 = !DILocation(line: 2401, column: 3, scope: !9182)
!9247 = !DILocation(line: 2402, column: 2, scope: !9175)
!9248 = !DILocation(line: 2386, column: 47, scope: !9167)
!9249 = !DILocation(line: 2386, column: 2, scope: !9167)
!9250 = distinct !{!9250, !9173, !9251}
!9251 = !DILocation(line: 2402, column: 2, scope: !9164)
!9252 = !DILocation(line: 2404, column: 2, scope: !9087)
!9253 = !DILocation(line: 2404, column: 12, scope: !9087)
!9254 = !DILocation(line: 2405, column: 2, scope: !9087)
!9255 = !DILocation(line: 2405, column: 12, scope: !9087)
!9256 = !DILocation(line: 2407, column: 9, scope: !9087)
!9257 = !DILocation(line: 2407, column: 2, scope: !9087)
!9258 = distinct !DISubprogram(name: "isb_bsp_fillfaces", scope: !3, file: !3, line: 1959, type: !9259, scopeLine: 1960, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!9259 = !DISubroutineType(types: !9260)
!9260 = !{null, !29, !2286, !2224}
!9261 = !DILocalVariable(name: "re", arg: 1, scope: !9258, file: !3, line: 1959, type: !29)
!9262 = !DILocation(line: 1959, column: 39, scope: !9258)
!9263 = !DILocalVariable(name: "lar", arg: 2, scope: !9258, file: !3, line: 1959, type: !2286)
!9264 = !DILocation(line: 1959, column: 52, scope: !9258)
!9265 = !DILocalVariable(name: "root", arg: 3, scope: !9258, file: !3, line: 1959, type: !2224)
!9266 = !DILocation(line: 1959, column: 68, scope: !9258)
!9267 = !DILocalVariable(name: "obi", scope: !9258, file: !3, line: 1961, type: !2609)
!9268 = !DILocation(line: 1961, column: 21, scope: !9258)
!9269 = !DILocalVariable(name: "obr", scope: !9258, file: !3, line: 1962, type: !1917)
!9270 = !DILocation(line: 1962, column: 13, scope: !9258)
!9271 = !DILocalVariable(name: "shb", scope: !9258, file: !3, line: 1963, type: !2461)
!9272 = !DILocation(line: 1963, column: 11, scope: !9258)
!9273 = !DILocation(line: 1963, column: 16, scope: !9258)
!9274 = !DILocation(line: 1963, column: 21, scope: !9258)
!9275 = !DILocalVariable(name: "zspan", scope: !9258, file: !3, line: 1964, type: !9276)
!9276 = !DIDerivedType(tag: DW_TAG_typedef, name: "ZSpan", file: !3171, line: 120, baseType: !9277)
!9277 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ZSpan", file: !3171, line: 89, size: 1792, elements: !9278)
!9278 = !{!9279, !9280, !9281, !9282, !9283, !9284, !9285, !9286, !9287, !9288, !9289, !9290, !9291, !9292, !9293, !9294, !9295, !9296, !9297, !9298, !9299, !9300, !9301, !9302, !9303, !9304, !9306, !9307, !9308, !9309, !9310, !9311, !9312, !9313, !9317, !9322}
!9279 = !DIDerivedType(tag: DW_TAG_member, name: "rectx", scope: !9277, file: !3171, line: 90, baseType: !8, size: 32)
!9280 = !DIDerivedType(tag: DW_TAG_member, name: "recty", scope: !9277, file: !3171, line: 90, baseType: !8, size: 32, offset: 32)
!9281 = !DIDerivedType(tag: DW_TAG_member, name: "miny1", scope: !9277, file: !3171, line: 92, baseType: !8, size: 32, offset: 64)
!9282 = !DIDerivedType(tag: DW_TAG_member, name: "maxy1", scope: !9277, file: !3171, line: 92, baseType: !8, size: 32, offset: 96)
!9283 = !DIDerivedType(tag: DW_TAG_member, name: "miny2", scope: !9277, file: !3171, line: 92, baseType: !8, size: 32, offset: 128)
!9284 = !DIDerivedType(tag: DW_TAG_member, name: "maxy2", scope: !9277, file: !3171, line: 92, baseType: !8, size: 32, offset: 160)
!9285 = !DIDerivedType(tag: DW_TAG_member, name: "minp1", scope: !9277, file: !3171, line: 93, baseType: !3742, size: 64, offset: 192)
!9286 = !DIDerivedType(tag: DW_TAG_member, name: "maxp1", scope: !9277, file: !3171, line: 93, baseType: !3742, size: 64, offset: 256)
!9287 = !DIDerivedType(tag: DW_TAG_member, name: "minp2", scope: !9277, file: !3171, line: 93, baseType: !3742, size: 64, offset: 320)
!9288 = !DIDerivedType(tag: DW_TAG_member, name: "maxp2", scope: !9277, file: !3171, line: 93, baseType: !3742, size: 64, offset: 384)
!9289 = !DIDerivedType(tag: DW_TAG_member, name: "span1", scope: !9277, file: !3171, line: 94, baseType: !63, size: 64, offset: 448)
!9290 = !DIDerivedType(tag: DW_TAG_member, name: "span2", scope: !9277, file: !3171, line: 94, baseType: !63, size: 64, offset: 512)
!9291 = !DIDerivedType(tag: DW_TAG_member, name: "zmulx", scope: !9277, file: !3171, line: 96, baseType: !7, size: 32, offset: 576)
!9292 = !DIDerivedType(tag: DW_TAG_member, name: "zmuly", scope: !9277, file: !3171, line: 96, baseType: !7, size: 32, offset: 608)
!9293 = !DIDerivedType(tag: DW_TAG_member, name: "zofsx", scope: !9277, file: !3171, line: 96, baseType: !7, size: 32, offset: 640)
!9294 = !DIDerivedType(tag: DW_TAG_member, name: "zofsy", scope: !9277, file: !3171, line: 96, baseType: !7, size: 32, offset: 672)
!9295 = !DIDerivedType(tag: DW_TAG_member, name: "rectz", scope: !9277, file: !3171, line: 98, baseType: !26, size: 64, offset: 704)
!9296 = !DIDerivedType(tag: DW_TAG_member, name: "arectz", scope: !9277, file: !3171, line: 98, baseType: !26, size: 64, offset: 768)
!9297 = !DIDerivedType(tag: DW_TAG_member, name: "rectz1", scope: !9277, file: !3171, line: 99, baseType: !26, size: 64, offset: 832)
!9298 = !DIDerivedType(tag: DW_TAG_member, name: "rectp", scope: !9277, file: !3171, line: 100, baseType: !26, size: 64, offset: 896)
!9299 = !DIDerivedType(tag: DW_TAG_member, name: "recto", scope: !9277, file: !3171, line: 101, baseType: !26, size: 64, offset: 960)
!9300 = !DIDerivedType(tag: DW_TAG_member, name: "rectmask", scope: !9277, file: !3171, line: 102, baseType: !26, size: 64, offset: 1024)
!9301 = !DIDerivedType(tag: DW_TAG_member, name: "apixbuf", scope: !9277, file: !3171, line: 103, baseType: !3169, size: 64, offset: 1088)
!9302 = !DIDerivedType(tag: DW_TAG_member, name: "curpstr", scope: !9277, file: !3171, line: 103, baseType: !3169, size: 64, offset: 1152)
!9303 = !DIDerivedType(tag: DW_TAG_member, name: "curpstrand", scope: !9277, file: !3171, line: 104, baseType: !3185, size: 64, offset: 1216)
!9304 = !DIDerivedType(tag: DW_TAG_member, name: "apsmbase", scope: !9277, file: !3171, line: 105, baseType: !9305, size: 64, offset: 1280)
!9305 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !79, size: 64)
!9306 = !DIDerivedType(tag: DW_TAG_member, name: "polygon_offset", scope: !9277, file: !3171, line: 107, baseType: !8, size: 32, offset: 1344)
!9307 = !DIDerivedType(tag: DW_TAG_member, name: "shad_alpha", scope: !9277, file: !3171, line: 108, baseType: !7, size: 32, offset: 1376)
!9308 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !9277, file: !3171, line: 109, baseType: !8, size: 32, offset: 1408)
!9309 = !DIDerivedType(tag: DW_TAG_member, name: "apsmcounter", scope: !9277, file: !3171, line: 109, baseType: !8, size: 32, offset: 1440)
!9310 = !DIDerivedType(tag: DW_TAG_member, name: "apstrandmcounter", scope: !9277, file: !3171, line: 110, baseType: !8, size: 32, offset: 1472)
!9311 = !DIDerivedType(tag: DW_TAG_member, name: "clipcrop", scope: !9277, file: !3171, line: 112, baseType: !7, size: 32, offset: 1504)
!9312 = !DIDerivedType(tag: DW_TAG_member, name: "sss_handle", scope: !9277, file: !3171, line: 114, baseType: !6, size: 64, offset: 1536)
!9313 = !DIDerivedType(tag: DW_TAG_member, name: "sss_func", scope: !9277, file: !3171, line: 115, baseType: !9314, size: 64, offset: 1600)
!9314 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9315, size: 64)
!9315 = !DISubroutineType(types: !9316)
!9316 = !{null, !6, !8, !8, !8, !8, !8}
!9317 = !DIDerivedType(tag: DW_TAG_member, name: "zbuffunc", scope: !9277, file: !3171, line: 117, baseType: !9318, size: 64, offset: 1664)
!9318 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9319, size: 64)
!9319 = !DISubroutineType(types: !9320)
!9320 = !{null, !9321, !8, !8, !3742, !3742, !3742, !3742}
!9321 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9277, size: 64)
!9322 = !DIDerivedType(tag: DW_TAG_member, name: "zbuflinefunc", scope: !9277, file: !3171, line: 118, baseType: !9323, size: 64, offset: 1728)
!9323 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9324, size: 64)
!9324 = !DISubroutineType(types: !9325)
!9325 = !{null, !9321, !8, !8, !3742, !3742}
!9326 = !DILocation(line: 1964, column: 8, scope: !9258)
!9327 = !DILocalVariable(name: "zspanstrand", scope: !9258, file: !3, line: 1964, type: !9276)
!9328 = !DILocation(line: 1964, column: 15, scope: !9258)
!9329 = !DILocalVariable(name: "vlr", scope: !9258, file: !3, line: 1965, type: !2615)
!9330 = !DILocation(line: 1965, column: 11, scope: !9258)
!9331 = !DILocalVariable(name: "ma", scope: !9258, file: !3, line: 1966, type: !2623)
!9332 = !DILocation(line: 1966, column: 12, scope: !9258)
!9333 = !DILocalVariable(name: "minmaxf", scope: !9258, file: !3, line: 1967, type: !288)
!9334 = !DILocation(line: 1967, column: 8, scope: !9258)
!9335 = !DILocalVariable(name: "winmat", scope: !9258, file: !3, line: 1967, type: !478)
!9336 = !DILocation(line: 1967, column: 20, scope: !9258)
!9337 = !DILocalVariable(name: "size", scope: !9258, file: !3, line: 1968, type: !8)
!9338 = !DILocation(line: 1968, column: 6, scope: !9258)
!9339 = !DILocation(line: 1968, column: 12, scope: !9258)
!9340 = !DILocation(line: 1968, column: 17, scope: !9258)
!9341 = !DILocalVariable(name: "i", scope: !9258, file: !3, line: 1969, type: !8)
!9342 = !DILocation(line: 1969, column: 6, scope: !9258)
!9343 = !DILocalVariable(name: "a", scope: !9258, file: !3, line: 1969, type: !8)
!9344 = !DILocation(line: 1969, column: 9, scope: !9258)
!9345 = !DILocalVariable(name: "ok", scope: !9258, file: !3, line: 1969, type: !8)
!9346 = !DILocation(line: 1969, column: 12, scope: !9258)
!9347 = !DILocalVariable(name: "lay", scope: !9258, file: !3, line: 1969, type: !8)
!9348 = !DILocation(line: 1969, column: 18, scope: !9258)
!9349 = !DILocation(line: 1972, column: 21, scope: !9258)
!9350 = !DILocation(line: 1972, column: 2, scope: !9258)
!9351 = !DILocation(line: 1975, column: 20, scope: !9258)
!9352 = !DILocation(line: 1975, column: 26, scope: !9258)
!9353 = !DILocation(line: 1975, column: 30, scope: !9258)
!9354 = !DILocation(line: 1975, column: 19, scope: !9258)
!9355 = !DILocation(line: 1975, column: 37, scope: !9258)
!9356 = !DILocation(line: 1975, column: 35, scope: !9258)
!9357 = !DILocation(line: 1975, column: 41, scope: !9258)
!9358 = !DILocation(line: 1975, column: 48, scope: !9258)
!9359 = !DILocation(line: 1975, column: 47, scope: !9258)
!9360 = !DILocation(line: 1975, column: 2, scope: !9258)
!9361 = !DILocation(line: 1975, column: 12, scope: !9258)
!9362 = !DILocation(line: 1976, column: 20, scope: !9258)
!9363 = !DILocation(line: 1976, column: 26, scope: !9258)
!9364 = !DILocation(line: 1976, column: 30, scope: !9258)
!9365 = !DILocation(line: 1976, column: 19, scope: !9258)
!9366 = !DILocation(line: 1976, column: 37, scope: !9258)
!9367 = !DILocation(line: 1976, column: 35, scope: !9258)
!9368 = !DILocation(line: 1976, column: 41, scope: !9258)
!9369 = !DILocation(line: 1976, column: 48, scope: !9258)
!9370 = !DILocation(line: 1976, column: 47, scope: !9258)
!9371 = !DILocation(line: 1976, column: 2, scope: !9258)
!9372 = !DILocation(line: 1976, column: 12, scope: !9258)
!9373 = !DILocation(line: 1977, column: 20, scope: !9258)
!9374 = !DILocation(line: 1977, column: 26, scope: !9258)
!9375 = !DILocation(line: 1977, column: 30, scope: !9258)
!9376 = !DILocation(line: 1977, column: 19, scope: !9258)
!9377 = !DILocation(line: 1977, column: 37, scope: !9258)
!9378 = !DILocation(line: 1977, column: 35, scope: !9258)
!9379 = !DILocation(line: 1977, column: 41, scope: !9258)
!9380 = !DILocation(line: 1977, column: 48, scope: !9258)
!9381 = !DILocation(line: 1977, column: 47, scope: !9258)
!9382 = !DILocation(line: 1977, column: 2, scope: !9258)
!9383 = !DILocation(line: 1977, column: 12, scope: !9258)
!9384 = !DILocation(line: 1978, column: 20, scope: !9258)
!9385 = !DILocation(line: 1978, column: 26, scope: !9258)
!9386 = !DILocation(line: 1978, column: 30, scope: !9258)
!9387 = !DILocation(line: 1978, column: 19, scope: !9258)
!9388 = !DILocation(line: 1978, column: 37, scope: !9258)
!9389 = !DILocation(line: 1978, column: 35, scope: !9258)
!9390 = !DILocation(line: 1978, column: 41, scope: !9258)
!9391 = !DILocation(line: 1978, column: 48, scope: !9258)
!9392 = !DILocation(line: 1978, column: 47, scope: !9258)
!9393 = !DILocation(line: 1978, column: 2, scope: !9258)
!9394 = !DILocation(line: 1978, column: 12, scope: !9258)
!9395 = !DILocation(line: 1980, column: 6, scope: !9396)
!9396 = distinct !DILexicalBlock(scope: !9258, file: !3, line: 1980, column: 6)
!9397 = !DILocation(line: 1980, column: 11, scope: !9396)
!9398 = !DILocation(line: 1980, column: 16, scope: !9396)
!9399 = !DILocation(line: 1980, column: 6, scope: !9258)
!9400 = !DILocation(line: 1980, column: 51, scope: !9396)
!9401 = !DILocation(line: 1980, column: 56, scope: !9396)
!9402 = !DILocation(line: 1980, column: 49, scope: !9396)
!9403 = !DILocation(line: 1980, column: 46, scope: !9396)
!9404 = !DILocation(line: 1983, column: 26, scope: !9258)
!9405 = !DILocation(line: 1983, column: 32, scope: !9258)
!9406 = !DILocation(line: 1983, column: 38, scope: !9258)
!9407 = !DILocation(line: 1983, column: 42, scope: !9258)
!9408 = !DILocation(line: 1983, column: 2, scope: !9258)
!9409 = !DILocation(line: 1985, column: 24, scope: !9258)
!9410 = !DILocation(line: 1985, column: 17, scope: !9258)
!9411 = !DILocation(line: 1985, column: 29, scope: !9258)
!9412 = !DILocation(line: 1985, column: 8, scope: !9258)
!9413 = !DILocation(line: 1985, column: 13, scope: !9258)
!9414 = !DILocation(line: 1986, column: 24, scope: !9258)
!9415 = !DILocation(line: 1986, column: 17, scope: !9258)
!9416 = !DILocation(line: 1986, column: 29, scope: !9258)
!9417 = !DILocation(line: 1986, column: 8, scope: !9258)
!9418 = !DILocation(line: 1986, column: 13, scope: !9258)
!9419 = !DILocation(line: 1987, column: 8, scope: !9258)
!9420 = !DILocation(line: 1987, column: 13, scope: !9258)
!9421 = !DILocation(line: 1988, column: 8, scope: !9258)
!9422 = !DILocation(line: 1988, column: 13, scope: !9258)
!9423 = !DILocation(line: 1991, column: 22, scope: !9258)
!9424 = !DILocation(line: 1991, column: 15, scope: !9258)
!9425 = !DILocation(line: 1991, column: 8, scope: !9258)
!9426 = !DILocation(line: 1991, column: 13, scope: !9258)
!9427 = !DILocation(line: 1994, column: 15, scope: !9258)
!9428 = !DILocation(line: 1996, column: 8, scope: !9258)
!9429 = !DILocation(line: 1996, column: 16, scope: !9258)
!9430 = !DILocation(line: 1997, column: 14, scope: !9258)
!9431 = !DILocation(line: 1997, column: 22, scope: !9258)
!9432 = !DILocation(line: 1999, column: 8, scope: !9433)
!9433 = distinct !DILexicalBlock(scope: !9258, file: !3, line: 1999, column: 2)
!9434 = !DILocation(line: 1999, column: 16, scope: !9433)
!9435 = !DILocation(line: 1999, column: 20, scope: !9433)
!9436 = !DILocation(line: 1999, column: 34, scope: !9433)
!9437 = !DILocation(line: 1999, column: 15, scope: !9433)
!9438 = !DILocation(line: 1999, column: 7, scope: !9433)
!9439 = !DILocation(line: 1999, column: 41, scope: !9440)
!9440 = distinct !DILexicalBlock(scope: !9433, file: !3, line: 1999, column: 2)
!9441 = !DILocation(line: 1999, column: 2, scope: !9433)
!9442 = !DILocation(line: 2000, column: 8, scope: !9443)
!9443 = distinct !DILexicalBlock(scope: !9440, file: !3, line: 1999, column: 66)
!9444 = !DILocation(line: 2000, column: 13, scope: !9443)
!9445 = !DILocation(line: 2000, column: 6, scope: !9443)
!9446 = !DILocation(line: 2002, column: 7, scope: !9447)
!9447 = distinct !DILexicalBlock(scope: !9443, file: !3, line: 2002, column: 7)
!9448 = !DILocation(line: 2002, column: 12, scope: !9447)
!9449 = !DILocation(line: 2002, column: 17, scope: !9447)
!9450 = !DILocation(line: 2002, column: 7, scope: !9443)
!9451 = !DILocation(line: 2003, column: 16, scope: !9447)
!9452 = !DILocation(line: 2003, column: 24, scope: !9447)
!9453 = !DILocation(line: 2003, column: 29, scope: !9447)
!9454 = !DILocation(line: 2003, column: 38, scope: !9447)
!9455 = !DILocation(line: 2003, column: 43, scope: !9447)
!9456 = !DILocation(line: 2003, column: 4, scope: !9447)
!9457 = !DILocation(line: 2005, column: 15, scope: !9447)
!9458 = !DILocation(line: 2005, column: 23, scope: !9447)
!9459 = !DILocation(line: 2005, column: 28, scope: !9447)
!9460 = !DILocation(line: 2005, column: 4, scope: !9447)
!9461 = !DILocation(line: 2007, column: 9, scope: !9462)
!9462 = distinct !DILexicalBlock(scope: !9443, file: !3, line: 2007, column: 3)
!9463 = !DILocation(line: 2007, column: 8, scope: !9462)
!9464 = !DILocation(line: 2007, column: 13, scope: !9465)
!9465 = distinct !DILexicalBlock(scope: !9462, file: !3, line: 2007, column: 3)
!9466 = !DILocation(line: 2007, column: 15, scope: !9465)
!9467 = !DILocation(line: 2007, column: 20, scope: !9465)
!9468 = !DILocation(line: 2007, column: 14, scope: !9465)
!9469 = !DILocation(line: 2007, column: 3, scope: !9462)
!9470 = !DILocation(line: 2009, column: 9, scope: !9471)
!9471 = distinct !DILexicalBlock(scope: !9472, file: !3, line: 2009, column: 8)
!9472 = distinct !DILexicalBlock(scope: !9465, file: !3, line: 2007, column: 34)
!9473 = !DILocation(line: 2009, column: 11, scope: !9471)
!9474 = !DILocation(line: 2009, column: 17, scope: !9471)
!9475 = !DILocation(line: 2009, column: 8, scope: !9472)
!9476 = !DILocation(line: 2009, column: 27, scope: !9471)
!9477 = !DILocation(line: 2009, column: 32, scope: !9471)
!9478 = !DILocation(line: 2009, column: 42, scope: !9471)
!9479 = !DILocation(line: 2009, column: 43, scope: !9471)
!9480 = !DILocation(line: 2009, column: 48, scope: !9471)
!9481 = !DILocation(line: 2009, column: 25, scope: !9471)
!9482 = !DILocation(line: 2009, column: 22, scope: !9471)
!9483 = !DILocation(line: 2010, column: 12, scope: !9471)
!9484 = !DILocation(line: 2013, column: 8, scope: !9485)
!9485 = distinct !DILexicalBlock(scope: !9472, file: !3, line: 2013, column: 8)
!9486 = !DILocation(line: 2013, column: 13, scope: !9485)
!9487 = !DILocation(line: 2013, column: 19, scope: !9485)
!9488 = !DILocation(line: 2013, column: 16, scope: !9485)
!9489 = !DILocation(line: 2013, column: 8, scope: !9472)
!9490 = !DILocation(line: 2014, column: 9, scope: !9491)
!9491 = distinct !DILexicalBlock(scope: !9485, file: !3, line: 2013, column: 23)
!9492 = !DILocation(line: 2014, column: 14, scope: !9491)
!9493 = !DILocation(line: 2014, column: 7, scope: !9491)
!9494 = !DILocation(line: 2015, column: 7, scope: !9491)
!9495 = !DILocation(line: 2016, column: 10, scope: !9496)
!9496 = distinct !DILexicalBlock(scope: !9491, file: !3, line: 2016, column: 9)
!9497 = !DILocation(line: 2016, column: 14, scope: !9496)
!9498 = !DILocation(line: 2016, column: 20, scope: !9496)
!9499 = !DILocation(line: 2016, column: 36, scope: !9496)
!9500 = !DILocation(line: 2016, column: 40, scope: !9496)
!9501 = !DILocation(line: 2016, column: 44, scope: !9496)
!9502 = !DILocation(line: 2016, column: 48, scope: !9496)
!9503 = !DILocation(line: 2016, column: 53, scope: !9496)
!9504 = !DILocation(line: 2016, column: 66, scope: !9496)
!9505 = !DILocation(line: 2016, column: 9, scope: !9491)
!9506 = !DILocation(line: 2016, column: 73, scope: !9496)
!9507 = !DILocation(line: 2016, column: 71, scope: !9496)
!9508 = !DILocation(line: 2017, column: 9, scope: !9509)
!9509 = distinct !DILexicalBlock(scope: !9491, file: !3, line: 2017, column: 9)
!9510 = !DILocation(line: 2017, column: 13, scope: !9509)
!9511 = !DILocation(line: 2017, column: 27, scope: !9509)
!9512 = !DILocation(line: 2017, column: 9, scope: !9491)
!9513 = !DILocation(line: 2017, column: 46, scope: !9509)
!9514 = !DILocation(line: 2017, column: 44, scope: !9509)
!9515 = !DILocation(line: 2018, column: 47, scope: !9491)
!9516 = !DILocation(line: 2018, column: 51, scope: !9491)
!9517 = !DILocation(line: 2018, column: 35, scope: !9491)
!9518 = !DILocation(line: 2018, column: 45, scope: !9491)
!9519 = !DILocation(line: 2018, column: 17, scope: !9491)
!9520 = !DILocation(line: 2018, column: 27, scope: !9491)
!9521 = !DILocation(line: 2019, column: 4, scope: !9491)
!9522 = !DILocation(line: 2021, column: 8, scope: !9523)
!9523 = distinct !DILexicalBlock(scope: !9472, file: !3, line: 2021, column: 8)
!9524 = !DILocation(line: 2021, column: 11, scope: !9523)
!9525 = !DILocation(line: 2021, column: 15, scope: !9523)
!9526 = !DILocation(line: 2021, column: 20, scope: !9523)
!9527 = !DILocation(line: 2021, column: 26, scope: !9523)
!9528 = !DILocation(line: 2021, column: 24, scope: !9523)
!9529 = !DILocation(line: 2021, column: 8, scope: !9472)
!9530 = !DILocalVariable(name: "hoco", scope: !9531, file: !3, line: 2022, type: !478)
!9531 = distinct !DILexicalBlock(scope: !9523, file: !3, line: 2021, column: 32)
!9532 = !DILocation(line: 2022, column: 11, scope: !9531)
!9533 = !DILocalVariable(name: "c1", scope: !9531, file: !3, line: 2023, type: !8)
!9534 = !DILocation(line: 2023, column: 9, scope: !9531)
!9535 = !DILocalVariable(name: "c2", scope: !9531, file: !3, line: 2023, type: !8)
!9536 = !DILocation(line: 2023, column: 13, scope: !9531)
!9537 = !DILocalVariable(name: "c3", scope: !9531, file: !3, line: 2023, type: !8)
!9538 = !DILocation(line: 2023, column: 17, scope: !9531)
!9539 = !DILocalVariable(name: "c4", scope: !9531, file: !3, line: 2023, type: !8)
!9540 = !DILocation(line: 2023, column: 21, scope: !9531)
!9541 = !DILocalVariable(name: "d1", scope: !9531, file: !3, line: 2024, type: !8)
!9542 = !DILocation(line: 2024, column: 9, scope: !9531)
!9543 = !DILocalVariable(name: "d2", scope: !9531, file: !3, line: 2024, type: !8)
!9544 = !DILocation(line: 2024, column: 13, scope: !9531)
!9545 = !DILocalVariable(name: "d3", scope: !9531, file: !3, line: 2024, type: !8)
!9546 = !DILocation(line: 2024, column: 17, scope: !9531)
!9547 = !DILocalVariable(name: "d4", scope: !9531, file: !3, line: 2024, type: !8)
!9548 = !DILocation(line: 2024, column: 21, scope: !9531)
!9549 = !DILocalVariable(name: "partclip", scope: !9531, file: !3, line: 2025, type: !8)
!9550 = !DILocation(line: 2025, column: 9, scope: !9531)
!9551 = !DILocation(line: 2028, column: 17, scope: !9531)
!9552 = !DILocation(line: 2028, column: 22, scope: !9531)
!9553 = !DILocation(line: 2028, column: 26, scope: !9531)
!9554 = !DILocation(line: 2028, column: 30, scope: !9531)
!9555 = !DILocation(line: 2028, column: 38, scope: !9531)
!9556 = !DILocation(line: 2028, column: 5, scope: !9531)
!9557 = !DILocation(line: 2028, column: 68, scope: !9531)
!9558 = !DILocation(line: 2028, column: 77, scope: !9531)
!9559 = !DILocation(line: 2028, column: 52, scope: !9531)
!9560 = !DILocation(line: 2028, column: 50, scope: !9531)
!9561 = !DILocation(line: 2029, column: 17, scope: !9531)
!9562 = !DILocation(line: 2029, column: 22, scope: !9531)
!9563 = !DILocation(line: 2029, column: 26, scope: !9531)
!9564 = !DILocation(line: 2029, column: 30, scope: !9531)
!9565 = !DILocation(line: 2029, column: 38, scope: !9531)
!9566 = !DILocation(line: 2029, column: 5, scope: !9531)
!9567 = !DILocation(line: 2029, column: 68, scope: !9531)
!9568 = !DILocation(line: 2029, column: 77, scope: !9531)
!9569 = !DILocation(line: 2029, column: 52, scope: !9531)
!9570 = !DILocation(line: 2029, column: 50, scope: !9531)
!9571 = !DILocation(line: 2030, column: 17, scope: !9531)
!9572 = !DILocation(line: 2030, column: 22, scope: !9531)
!9573 = !DILocation(line: 2030, column: 26, scope: !9531)
!9574 = !DILocation(line: 2030, column: 30, scope: !9531)
!9575 = !DILocation(line: 2030, column: 38, scope: !9531)
!9576 = !DILocation(line: 2030, column: 5, scope: !9531)
!9577 = !DILocation(line: 2030, column: 68, scope: !9531)
!9578 = !DILocation(line: 2030, column: 77, scope: !9531)
!9579 = !DILocation(line: 2030, column: 52, scope: !9531)
!9580 = !DILocation(line: 2030, column: 50, scope: !9531)
!9581 = !DILocation(line: 2031, column: 9, scope: !9582)
!9582 = distinct !DILexicalBlock(scope: !9531, file: !3, line: 2031, column: 9)
!9583 = !DILocation(line: 2031, column: 14, scope: !9582)
!9584 = !DILocation(line: 2031, column: 9, scope: !9531)
!9585 = !DILocation(line: 2032, column: 18, scope: !9586)
!9586 = distinct !DILexicalBlock(scope: !9582, file: !3, line: 2031, column: 18)
!9587 = !DILocation(line: 2032, column: 23, scope: !9586)
!9588 = !DILocation(line: 2032, column: 27, scope: !9586)
!9589 = !DILocation(line: 2032, column: 31, scope: !9586)
!9590 = !DILocation(line: 2032, column: 39, scope: !9586)
!9591 = !DILocation(line: 2032, column: 6, scope: !9586)
!9592 = !DILocation(line: 2032, column: 69, scope: !9586)
!9593 = !DILocation(line: 2032, column: 78, scope: !9586)
!9594 = !DILocation(line: 2032, column: 53, scope: !9586)
!9595 = !DILocation(line: 2032, column: 51, scope: !9586)
!9596 = !DILocation(line: 2033, column: 5, scope: !9586)
!9597 = !DILocation(line: 2036, column: 9, scope: !9598)
!9598 = distinct !DILexicalBlock(scope: !9531, file: !3, line: 2036, column: 9)
!9599 = !DILocation(line: 2036, column: 14, scope: !9598)
!9600 = !DILocation(line: 2036, column: 9, scope: !9531)
!9601 = !DILocation(line: 2036, column: 28, scope: !9598)
!9602 = !DILocation(line: 2036, column: 33, scope: !9598)
!9603 = !DILocation(line: 2036, column: 31, scope: !9598)
!9604 = !DILocation(line: 2036, column: 38, scope: !9598)
!9605 = !DILocation(line: 2036, column: 36, scope: !9598)
!9606 = !DILocation(line: 2036, column: 43, scope: !9598)
!9607 = !DILocation(line: 2036, column: 41, scope: !9598)
!9608 = !DILocation(line: 2036, column: 26, scope: !9598)
!9609 = !DILocation(line: 2036, column: 18, scope: !9598)
!9610 = !DILocation(line: 2037, column: 20, scope: !9598)
!9611 = !DILocation(line: 2037, column: 25, scope: !9598)
!9612 = !DILocation(line: 2037, column: 23, scope: !9598)
!9613 = !DILocation(line: 2037, column: 30, scope: !9598)
!9614 = !DILocation(line: 2037, column: 28, scope: !9598)
!9615 = !DILocation(line: 2037, column: 18, scope: !9598)
!9616 = !DILocation(line: 2039, column: 9, scope: !9617)
!9617 = distinct !DILexicalBlock(scope: !9531, file: !3, line: 2039, column: 9)
!9618 = !DILocation(line: 2039, column: 17, scope: !9617)
!9619 = !DILocation(line: 2039, column: 9, scope: !9531)
!9620 = !DILocation(line: 2042, column: 19, scope: !9621)
!9621 = distinct !DILexicalBlock(scope: !9617, file: !3, line: 2039, column: 22)
!9622 = !DILocation(line: 2042, column: 10, scope: !9621)
!9623 = !DILocation(line: 2042, column: 8, scope: !9621)
!9624 = !DILocation(line: 2043, column: 19, scope: !9621)
!9625 = !DILocation(line: 2043, column: 10, scope: !9621)
!9626 = !DILocation(line: 2043, column: 8, scope: !9621)
!9627 = !DILocation(line: 2044, column: 19, scope: !9621)
!9628 = !DILocation(line: 2044, column: 10, scope: !9621)
!9629 = !DILocation(line: 2044, column: 8, scope: !9621)
!9630 = !DILocation(line: 2045, column: 10, scope: !9631)
!9631 = distinct !DILexicalBlock(scope: !9621, file: !3, line: 2045, column: 10)
!9632 = !DILocation(line: 2045, column: 15, scope: !9631)
!9633 = !DILocation(line: 2045, column: 10, scope: !9621)
!9634 = !DILocation(line: 2046, column: 20, scope: !9631)
!9635 = !DILocation(line: 2046, column: 11, scope: !9631)
!9636 = !DILocation(line: 2046, column: 9, scope: !9631)
!9637 = !DILocation(line: 2046, column: 7, scope: !9631)
!9638 = !DILocation(line: 2049, column: 10, scope: !9639)
!9639 = distinct !DILexicalBlock(scope: !9621, file: !3, line: 2049, column: 10)
!9640 = !DILocation(line: 2049, column: 14, scope: !9639)
!9641 = !DILocation(line: 2049, column: 28, scope: !9639)
!9642 = !DILocation(line: 2049, column: 10, scope: !9621)
!9643 = !DILocation(line: 2050, column: 11, scope: !9644)
!9644 = distinct !DILexicalBlock(scope: !9645, file: !3, line: 2050, column: 11)
!9645 = distinct !DILexicalBlock(scope: !9639, file: !3, line: 2049, column: 45)
!9646 = !DILocation(line: 2050, column: 16, scope: !9644)
!9647 = !DILocation(line: 2050, column: 11, scope: !9645)
!9648 = !DILocation(line: 2051, column: 29, scope: !9644)
!9649 = !DILocation(line: 2051, column: 32, scope: !9644)
!9650 = !DILocation(line: 2051, column: 33, scope: !9644)
!9651 = !DILocation(line: 2051, column: 37, scope: !9644)
!9652 = !DILocation(line: 2051, column: 42, scope: !9644)
!9653 = !DILocation(line: 2051, column: 46, scope: !9644)
!9654 = !DILocation(line: 2051, column: 55, scope: !9644)
!9655 = !DILocation(line: 2051, column: 64, scope: !9644)
!9656 = !DILocation(line: 2051, column: 73, scope: !9644)
!9657 = !DILocation(line: 2051, column: 82, scope: !9644)
!9658 = !DILocation(line: 2051, column: 86, scope: !9644)
!9659 = !DILocation(line: 2051, column: 90, scope: !9644)
!9660 = !DILocation(line: 2051, column: 94, scope: !9644)
!9661 = !DILocation(line: 2051, column: 8, scope: !9644)
!9662 = !DILocation(line: 2053, column: 29, scope: !9644)
!9663 = !DILocation(line: 2053, column: 32, scope: !9644)
!9664 = !DILocation(line: 2053, column: 33, scope: !9644)
!9665 = !DILocation(line: 2053, column: 37, scope: !9644)
!9666 = !DILocation(line: 2053, column: 42, scope: !9644)
!9667 = !DILocation(line: 2053, column: 46, scope: !9644)
!9668 = !DILocation(line: 2053, column: 55, scope: !9644)
!9669 = !DILocation(line: 2053, column: 64, scope: !9644)
!9670 = !DILocation(line: 2053, column: 79, scope: !9644)
!9671 = !DILocation(line: 2053, column: 83, scope: !9644)
!9672 = !DILocation(line: 2053, column: 87, scope: !9644)
!9673 = !DILocation(line: 2053, column: 8, scope: !9644)
!9674 = !DILocation(line: 2054, column: 6, scope: !9645)
!9675 = !DILocation(line: 2055, column: 15, scope: !9676)
!9676 = distinct !DILexicalBlock(scope: !9639, file: !3, line: 2055, column: 15)
!9677 = !DILocation(line: 2055, column: 20, scope: !9676)
!9678 = !DILocation(line: 2055, column: 15, scope: !9639)
!9679 = !DILocation(line: 2056, column: 11, scope: !9680)
!9680 = distinct !DILexicalBlock(scope: !9681, file: !3, line: 2056, column: 11)
!9681 = distinct !DILexicalBlock(scope: !9676, file: !3, line: 2055, column: 24)
!9682 = !DILocation(line: 2056, column: 16, scope: !9680)
!9683 = !DILocation(line: 2056, column: 21, scope: !9680)
!9684 = !DILocation(line: 2056, column: 11, scope: !9681)
!9685 = !DILocation(line: 2057, column: 32, scope: !9680)
!9686 = !DILocation(line: 2057, column: 35, scope: !9680)
!9687 = !DILocation(line: 2057, column: 36, scope: !9680)
!9688 = !DILocation(line: 2057, column: 40, scope: !9680)
!9689 = !DILocation(line: 2057, column: 49, scope: !9680)
!9690 = !DILocation(line: 2057, column: 58, scope: !9680)
!9691 = !DILocation(line: 2057, column: 67, scope: !9680)
!9692 = !DILocation(line: 2057, column: 76, scope: !9680)
!9693 = !DILocation(line: 2057, column: 80, scope: !9680)
!9694 = !DILocation(line: 2057, column: 84, scope: !9680)
!9695 = !DILocation(line: 2057, column: 88, scope: !9680)
!9696 = !DILocation(line: 2057, column: 8, scope: !9680)
!9697 = !DILocation(line: 2059, column: 26, scope: !9680)
!9698 = !DILocation(line: 2059, column: 29, scope: !9680)
!9699 = !DILocation(line: 2059, column: 30, scope: !9680)
!9700 = !DILocation(line: 2059, column: 34, scope: !9680)
!9701 = !DILocation(line: 2059, column: 43, scope: !9680)
!9702 = !DILocation(line: 2059, column: 52, scope: !9680)
!9703 = !DILocation(line: 2059, column: 61, scope: !9680)
!9704 = !DILocation(line: 2059, column: 70, scope: !9680)
!9705 = !DILocation(line: 2059, column: 74, scope: !9680)
!9706 = !DILocation(line: 2059, column: 78, scope: !9680)
!9707 = !DILocation(line: 2059, column: 82, scope: !9680)
!9708 = !DILocation(line: 2059, column: 8, scope: !9680)
!9709 = !DILocation(line: 2060, column: 6, scope: !9681)
!9710 = !DILocation(line: 2062, column: 24, scope: !9676)
!9711 = !DILocation(line: 2062, column: 27, scope: !9676)
!9712 = !DILocation(line: 2062, column: 28, scope: !9676)
!9713 = !DILocation(line: 2062, column: 32, scope: !9676)
!9714 = !DILocation(line: 2062, column: 41, scope: !9676)
!9715 = !DILocation(line: 2062, column: 50, scope: !9676)
!9716 = !DILocation(line: 2062, column: 59, scope: !9676)
!9717 = !DILocation(line: 2062, column: 63, scope: !9676)
!9718 = !DILocation(line: 2062, column: 67, scope: !9676)
!9719 = !DILocation(line: 2062, column: 7, scope: !9676)
!9720 = !DILocation(line: 2064, column: 5, scope: !9621)
!9721 = !DILocation(line: 2065, column: 4, scope: !9531)
!9722 = !DILocation(line: 2066, column: 3, scope: !9472)
!9723 = !DILocation(line: 2007, column: 30, scope: !9465)
!9724 = !DILocation(line: 2007, column: 3, scope: !9465)
!9725 = distinct !{!9725, !9469, !9726}
!9726 = !DILocation(line: 2066, column: 3, scope: !9462)
!9727 = !DILocation(line: 2067, column: 2, scope: !9443)
!9728 = !DILocation(line: 1999, column: 47, scope: !9440)
!9729 = !DILocation(line: 1999, column: 55, scope: !9440)
!9730 = !DILocation(line: 1999, column: 60, scope: !9440)
!9731 = !DILocation(line: 1999, column: 54, scope: !9440)
!9732 = !DILocation(line: 1999, column: 2, scope: !9440)
!9733 = distinct !{!9733, !9441, !9734}
!9734 = !DILocation(line: 2067, column: 2, scope: !9433)
!9735 = !DILocation(line: 2069, column: 2, scope: !9258)
!9736 = !DILocation(line: 2070, column: 1, scope: !9258)
!9737 = distinct !DISubprogram(name: "isb_add_shadfac", scope: !3, file: !3, line: 2143, type: !9738, scopeLine: 2144, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!9738 = !DISubroutineType(types: !9739)
!9739 = !{null, !2415, !5556, !8, !8, !43, !43}
!9740 = !DILocalVariable(name: "isbsapp", arg: 1, scope: !9737, file: !3, line: 2143, type: !2415)
!9741 = !DILocation(line: 2143, column: 43, scope: !9737)
!9742 = !DILocalVariable(name: "mem", arg: 2, scope: !9737, file: !3, line: 2143, type: !5556)
!9743 = !DILocation(line: 2143, column: 62, scope: !9737)
!9744 = !DILocalVariable(name: "obi", arg: 3, scope: !9737, file: !3, line: 2143, type: !8)
!9745 = !DILocation(line: 2143, column: 71, scope: !9737)
!9746 = !DILocalVariable(name: "facenr", arg: 4, scope: !9737, file: !3, line: 2143, type: !8)
!9747 = !DILocation(line: 2143, column: 80, scope: !9737)
!9748 = !DILocalVariable(name: "shadfac", arg: 5, scope: !9737, file: !3, line: 2143, type: !43)
!9749 = !DILocation(line: 2143, column: 94, scope: !9737)
!9750 = !DILocalVariable(name: "samples", arg: 6, scope: !9737, file: !3, line: 2143, type: !43)
!9751 = !DILocation(line: 2143, column: 109, scope: !9737)
!9752 = !DILocalVariable(name: "new", scope: !9737, file: !3, line: 2145, type: !2416)
!9753 = !DILocation(line: 2145, column: 15, scope: !9737)
!9754 = !DILocalVariable(name: "shadfacf", scope: !9737, file: !3, line: 2146, type: !7)
!9755 = !DILocation(line: 2146, column: 8, scope: !9737)
!9756 = !DILocation(line: 2149, column: 8, scope: !9757)
!9757 = distinct !DILexicalBlock(scope: !9737, file: !3, line: 2149, column: 6)
!9758 = !DILocation(line: 2149, column: 6, scope: !9757)
!9759 = !DILocation(line: 2149, column: 6, scope: !9737)
!9760 = !DILocation(line: 2150, column: 21, scope: !9757)
!9761 = !DILocation(line: 2150, column: 14, scope: !9757)
!9762 = !DILocation(line: 2150, column: 31, scope: !9757)
!9763 = !DILocation(line: 2150, column: 29, scope: !9757)
!9764 = !DILocation(line: 2150, column: 28, scope: !9757)
!9765 = !DILocation(line: 2150, column: 45, scope: !9757)
!9766 = !DILocation(line: 2150, column: 44, scope: !9757)
!9767 = !DILocation(line: 2150, column: 35, scope: !9757)
!9768 = !DILocation(line: 2150, column: 11, scope: !9757)
!9769 = !DILocation(line: 2150, column: 3, scope: !9757)
!9770 = !DILocation(line: 2152, column: 21, scope: !9757)
!9771 = !DILocation(line: 2152, column: 14, scope: !9757)
!9772 = !DILocation(line: 2152, column: 29, scope: !9757)
!9773 = !DILocation(line: 2152, column: 11, scope: !9757)
!9774 = !DILocation(line: 2154, column: 26, scope: !9737)
!9775 = !DILocation(line: 2154, column: 7, scope: !9737)
!9776 = !DILocation(line: 2154, column: 5, scope: !9737)
!9777 = !DILocation(line: 2155, column: 12, scope: !9737)
!9778 = !DILocation(line: 2155, column: 2, scope: !9737)
!9779 = !DILocation(line: 2155, column: 7, scope: !9737)
!9780 = !DILocation(line: 2155, column: 10, scope: !9737)
!9781 = !DILocation(line: 2156, column: 15, scope: !9737)
!9782 = !DILocation(line: 2156, column: 22, scope: !9737)
!9783 = !DILocation(line: 2156, column: 2, scope: !9737)
!9784 = !DILocation(line: 2156, column: 7, scope: !9737)
!9785 = !DILocation(line: 2156, column: 13, scope: !9737)
!9786 = !DILocation(line: 2157, column: 16, scope: !9737)
!9787 = !DILocation(line: 2157, column: 2, scope: !9737)
!9788 = !DILocation(line: 2157, column: 7, scope: !9737)
!9789 = !DILocation(line: 2157, column: 14, scope: !9737)
!9790 = !DILocation(line: 2158, column: 7, scope: !9791)
!9791 = distinct !DILexicalBlock(scope: !9737, file: !3, line: 2158, column: 6)
!9792 = !DILocation(line: 2158, column: 6, scope: !9791)
!9793 = !DILocation(line: 2158, column: 6, scope: !9737)
!9794 = !DILocation(line: 2159, column: 16, scope: !9791)
!9795 = !DILocation(line: 2159, column: 15, scope: !9791)
!9796 = !DILocation(line: 2159, column: 3, scope: !9791)
!9797 = !DILocation(line: 2159, column: 8, scope: !9791)
!9798 = !DILocation(line: 2159, column: 12, scope: !9791)
!9799 = !DILocation(line: 2161, column: 3, scope: !9791)
!9800 = !DILocation(line: 2161, column: 8, scope: !9791)
!9801 = !DILocation(line: 2161, column: 12, scope: !9791)
!9802 = !DILocation(line: 2163, column: 12, scope: !9737)
!9803 = !DILocation(line: 2163, column: 3, scope: !9737)
!9804 = !DILocation(line: 2163, column: 10, scope: !9737)
!9805 = !DILocation(line: 2164, column: 1, scope: !9737)
!9806 = distinct !DISubprogram(name: "isb_bsp_insert", scope: !3, file: !3, line: 1614, type: !9807, scopeLine: 1615, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!9807 = !DISubroutineType(types: !9808)
!9808 = !{!8, !2224, !5556, !2214}
!9809 = !DILocalVariable(name: "root", arg: 1, scope: !9806, file: !3, line: 1614, type: !2224)
!9810 = !DILocation(line: 1614, column: 38, scope: !9806)
!9811 = !DILocalVariable(name: "memarena", arg: 2, scope: !9806, file: !3, line: 1614, type: !5556)
!9812 = !DILocation(line: 1614, column: 54, scope: !9806)
!9813 = !DILocalVariable(name: "sample", arg: 3, scope: !9806, file: !3, line: 1614, type: !2214)
!9814 = !DILocation(line: 1614, column: 75, scope: !9806)
!9815 = !DILocalVariable(name: "bspn", scope: !9806, file: !3, line: 1616, type: !2224)
!9816 = !DILocation(line: 1616, column: 13, scope: !9806)
!9817 = !DILocation(line: 1616, column: 19, scope: !9806)
!9818 = !DILocalVariable(name: "zco", scope: !9806, file: !3, line: 1617, type: !3742)
!9819 = !DILocation(line: 1617, column: 15, scope: !9806)
!9820 = !DILocation(line: 1617, column: 20, scope: !9806)
!9821 = !DILocation(line: 1617, column: 28, scope: !9806)
!9822 = !DILocalVariable(name: "i", scope: !9806, file: !3, line: 1618, type: !8)
!9823 = !DILocation(line: 1618, column: 6, scope: !9806)
!9824 = !DILocation(line: 1621, column: 2, scope: !9806)
!9825 = !DILocation(line: 1621, column: 8, scope: !9806)
!9826 = !DILocation(line: 1621, column: 15, scope: !9806)
!9827 = !DILocation(line: 1624, column: 2, scope: !9806)
!9828 = !DILocation(line: 1624, column: 9, scope: !9806)
!9829 = !DILocation(line: 1624, column: 15, scope: !9806)
!9830 = !DILocation(line: 1625, column: 7, scope: !9831)
!9831 = distinct !DILexicalBlock(scope: !9832, file: !3, line: 1625, column: 7)
!9832 = distinct !DILexicalBlock(scope: !9806, file: !3, line: 1624, column: 21)
!9833 = !DILocation(line: 1625, column: 11, scope: !9831)
!9834 = !DILocation(line: 1625, column: 17, scope: !9831)
!9835 = !DILocation(line: 1625, column: 27, scope: !9831)
!9836 = !DILocation(line: 1625, column: 33, scope: !9831)
!9837 = !DILocation(line: 1625, column: 41, scope: !9831)
!9838 = !DILocation(line: 1625, column: 47, scope: !9831)
!9839 = !DILocation(line: 1625, column: 24, scope: !9831)
!9840 = !DILocation(line: 1625, column: 7, scope: !9832)
!9841 = !DILocation(line: 1626, column: 10, scope: !9831)
!9842 = !DILocation(line: 1626, column: 16, scope: !9831)
!9843 = !DILocation(line: 1626, column: 8, scope: !9831)
!9844 = !DILocation(line: 1626, column: 4, scope: !9831)
!9845 = !DILocation(line: 1628, column: 10, scope: !9831)
!9846 = !DILocation(line: 1628, column: 16, scope: !9831)
!9847 = !DILocation(line: 1628, column: 8, scope: !9831)
!9848 = !DILocation(line: 1629, column: 4, scope: !9832)
!9849 = distinct !{!9849, !9827, !9850}
!9850 = !DILocation(line: 1630, column: 2, scope: !9806)
!9851 = !DILocation(line: 1633, column: 6, scope: !9852)
!9852 = distinct !DILexicalBlock(scope: !9806, file: !3, line: 1633, column: 6)
!9853 = !DILocation(line: 1633, column: 12, scope: !9852)
!9854 = !DILocation(line: 1633, column: 19, scope: !9852)
!9855 = !DILocation(line: 1633, column: 6, scope: !9806)
!9856 = !DILocation(line: 1634, column: 3, scope: !9857)
!9857 = distinct !DILexicalBlock(scope: !9852, file: !3, line: 1633, column: 36)
!9858 = !DILocation(line: 1635, column: 3, scope: !9857)
!9859 = !DILocation(line: 1639, column: 32, scope: !9806)
!9860 = !DILocation(line: 1639, column: 2, scope: !9806)
!9861 = !DILocation(line: 1639, column: 8, scope: !9806)
!9862 = !DILocation(line: 1639, column: 16, scope: !9806)
!9863 = !DILocation(line: 1639, column: 22, scope: !9806)
!9864 = !DILocation(line: 1639, column: 30, scope: !9806)
!9865 = !DILocation(line: 1640, column: 2, scope: !9806)
!9866 = !DILocation(line: 1640, column: 8, scope: !9806)
!9867 = !DILocation(line: 1640, column: 15, scope: !9806)
!9868 = !DILocation(line: 1643, column: 6, scope: !9869)
!9869 = distinct !DILexicalBlock(scope: !9806, file: !3, line: 1643, column: 6)
!9870 = !DILocation(line: 1643, column: 12, scope: !9869)
!9871 = !DILocation(line: 1643, column: 19, scope: !9869)
!9872 = !DILocation(line: 1643, column: 6, scope: !9806)
!9873 = !DILocation(line: 1644, column: 7, scope: !9874)
!9874 = distinct !DILexicalBlock(scope: !9875, file: !3, line: 1644, column: 7)
!9875 = distinct !DILexicalBlock(scope: !9869, file: !3, line: 1643, column: 36)
!9876 = !DILocation(line: 1644, column: 8, scope: !9874)
!9877 = !DILocation(line: 1644, column: 7, scope: !9875)
!9878 = !DILocation(line: 1645, column: 4, scope: !9879)
!9879 = distinct !DILexicalBlock(scope: !9874, file: !3, line: 1644, column: 24)
!9880 = !DILocation(line: 1645, column: 10, scope: !9879)
!9881 = !DILocation(line: 1645, column: 17, scope: !9879)
!9882 = !DILocation(line: 1646, column: 4, scope: !9879)
!9883 = !DILocation(line: 1648, column: 17, scope: !9875)
!9884 = !DILocation(line: 1648, column: 23, scope: !9875)
!9885 = !DILocation(line: 1648, column: 3, scope: !9875)
!9886 = !DILocation(line: 1649, column: 2, scope: !9875)
!9887 = !DILocation(line: 1650, column: 2, scope: !9806)
!9888 = !DILocation(line: 1651, column: 1, scope: !9806)
!9889 = distinct !DISubprogram(name: "isb_bsp_split", scope: !3, file: !3, line: 1546, type: !9890, scopeLine: 1547, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!9890 = !DISubroutineType(types: !9891)
!9891 = !{null, !2224, !5556}
!9892 = !DILocalVariable(name: "root", arg: 1, scope: !9889, file: !3, line: 1546, type: !2224)
!9893 = !DILocation(line: 1546, column: 38, scope: !9889)
!9894 = !DILocalVariable(name: "mem", arg: 2, scope: !9889, file: !3, line: 1546, type: !5556)
!9895 = !DILocation(line: 1546, column: 54, scope: !9889)
!9896 = !DILocalVariable(name: "left", scope: !9889, file: !3, line: 1548, type: !2224)
!9897 = !DILocation(line: 1548, column: 13, scope: !9889)
!9898 = !DILocalVariable(name: "right", scope: !9889, file: !3, line: 1548, type: !2224)
!9899 = !DILocation(line: 1548, column: 20, scope: !9889)
!9900 = !DILocalVariable(name: "samples", scope: !9889, file: !3, line: 1549, type: !9901)
!9901 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2214, size: 8192, elements: !1117)
!9902 = !DILocation(line: 1549, column: 13, scope: !9889)
!9903 = !DILocalVariable(name: "a", scope: !9889, file: !3, line: 1550, type: !8)
!9904 = !DILocation(line: 1550, column: 6, scope: !9889)
!9905 = !DILocalVariable(name: "i", scope: !9889, file: !3, line: 1550, type: !8)
!9906 = !DILocation(line: 1550, column: 9, scope: !9889)
!9907 = !DILocation(line: 1553, column: 20, scope: !9889)
!9908 = !DILocation(line: 1553, column: 26, scope: !9889)
!9909 = !DILocation(line: 1553, column: 36, scope: !9889)
!9910 = !DILocation(line: 1553, column: 2, scope: !9889)
!9911 = !DILocation(line: 1553, column: 8, scope: !9889)
!9912 = !DILocation(line: 1553, column: 18, scope: !9889)
!9913 = !DILocation(line: 1554, column: 8, scope: !9914)
!9914 = distinct !DILexicalBlock(scope: !9889, file: !3, line: 1554, column: 2)
!9915 = !DILocation(line: 1554, column: 7, scope: !9914)
!9916 = !DILocation(line: 1554, column: 26, scope: !9917)
!9917 = distinct !DILexicalBlock(scope: !9914, file: !3, line: 1554, column: 2)
!9918 = !DILocation(line: 1554, column: 27, scope: !9917)
!9919 = !DILocation(line: 1554, column: 2, scope: !9914)
!9920 = !DILocation(line: 1555, column: 22, scope: !9921)
!9921 = distinct !DILexicalBlock(scope: !9917, file: !3, line: 1554, column: 37)
!9922 = !DILocation(line: 1555, column: 28, scope: !9921)
!9923 = !DILocation(line: 1555, column: 36, scope: !9921)
!9924 = !DILocation(line: 1555, column: 40, scope: !9921)
!9925 = !DILocation(line: 1555, column: 3, scope: !9921)
!9926 = !DILocation(line: 1555, column: 9, scope: !9921)
!9927 = !DILocation(line: 1555, column: 19, scope: !9921)
!9928 = !DILocation(line: 1556, column: 22, scope: !9921)
!9929 = !DILocation(line: 1556, column: 28, scope: !9921)
!9930 = !DILocation(line: 1556, column: 36, scope: !9921)
!9931 = !DILocation(line: 1556, column: 40, scope: !9921)
!9932 = !DILocation(line: 1556, column: 3, scope: !9921)
!9933 = !DILocation(line: 1556, column: 9, scope: !9921)
!9934 = !DILocation(line: 1556, column: 19, scope: !9921)
!9935 = !DILocation(line: 1557, column: 2, scope: !9921)
!9936 = !DILocation(line: 1554, column: 33, scope: !9917)
!9937 = !DILocation(line: 1554, column: 2, scope: !9917)
!9938 = distinct !{!9938, !9919, !9939}
!9939 = !DILocation(line: 1557, column: 2, scope: !9914)
!9940 = !DILocation(line: 1558, column: 2, scope: !9889)
!9941 = !DILocation(line: 1558, column: 8, scope: !9889)
!9942 = !DILocation(line: 1558, column: 18, scope: !9889)
!9943 = !DILocation(line: 1559, column: 2, scope: !9889)
!9944 = !DILocation(line: 1559, column: 8, scope: !9889)
!9945 = !DILocation(line: 1559, column: 18, scope: !9889)
!9946 = !DILocation(line: 1562, column: 6, scope: !9947)
!9947 = distinct !DILexicalBlock(scope: !9889, file: !3, line: 1562, column: 6)
!9948 = !DILocation(line: 1562, column: 31, scope: !9947)
!9949 = !DILocation(line: 1562, column: 29, scope: !9947)
!9950 = !DILocation(line: 1562, column: 6, scope: !9889)
!9951 = !DILocation(line: 1563, column: 7, scope: !9947)
!9952 = !DILocation(line: 1563, column: 13, scope: !9947)
!9953 = !DILocation(line: 1563, column: 19, scope: !9947)
!9954 = !DILocation(line: 1563, column: 5, scope: !9947)
!9955 = !DILocation(line: 1563, column: 3, scope: !9947)
!9956 = !DILocation(line: 1565, column: 7, scope: !9947)
!9957 = !DILocation(line: 1565, column: 13, scope: !9947)
!9958 = !DILocation(line: 1565, column: 19, scope: !9947)
!9959 = !DILocation(line: 1565, column: 5, scope: !9947)
!9960 = !DILocation(line: 1568, column: 39, scope: !9889)
!9961 = !DILocation(line: 1568, column: 20, scope: !9889)
!9962 = !DILocation(line: 1568, column: 8, scope: !9889)
!9963 = !DILocation(line: 1568, column: 14, scope: !9889)
!9964 = !DILocation(line: 1568, column: 18, scope: !9889)
!9965 = !DILocation(line: 1568, column: 6, scope: !9889)
!9966 = !DILocation(line: 1569, column: 41, scope: !9889)
!9967 = !DILocation(line: 1569, column: 22, scope: !9889)
!9968 = !DILocation(line: 1569, column: 9, scope: !9889)
!9969 = !DILocation(line: 1569, column: 15, scope: !9889)
!9970 = !DILocation(line: 1569, column: 20, scope: !9889)
!9971 = !DILocation(line: 1569, column: 7, scope: !9889)
!9972 = !DILocation(line: 1572, column: 37, scope: !9889)
!9973 = !DILocation(line: 1572, column: 18, scope: !9889)
!9974 = !DILocation(line: 1572, column: 2, scope: !9889)
!9975 = !DILocation(line: 1572, column: 8, scope: !9889)
!9976 = !DILocation(line: 1572, column: 16, scope: !9889)
!9977 = !DILocation(line: 1573, column: 19, scope: !9889)
!9978 = !DILocation(line: 1573, column: 2, scope: !9889)
!9979 = !DILocation(line: 1573, column: 9, scope: !9889)
!9980 = !DILocation(line: 1573, column: 17, scope: !9889)
!9981 = !DILocation(line: 1576, column: 8, scope: !9982)
!9982 = distinct !DILexicalBlock(scope: !9889, file: !3, line: 1576, column: 2)
!9983 = !DILocation(line: 1576, column: 7, scope: !9982)
!9984 = !DILocation(line: 1576, column: 26, scope: !9985)
!9985 = distinct !DILexicalBlock(scope: !9982, file: !3, line: 1576, column: 2)
!9986 = !DILocation(line: 1576, column: 27, scope: !9985)
!9987 = !DILocation(line: 1576, column: 2, scope: !9982)
!9988 = !DILocalVariable(name: "comp", scope: !9989, file: !3, line: 1577, type: !8)
!9989 = distinct !DILexicalBlock(scope: !9985, file: !3, line: 1576, column: 37)
!9990 = !DILocation(line: 1577, column: 7, scope: !9989)
!9991 = !DILocation(line: 1579, column: 7, scope: !9992)
!9992 = distinct !DILexicalBlock(scope: !9989, file: !3, line: 1579, column: 7)
!9993 = !DILocation(line: 1579, column: 13, scope: !9992)
!9994 = !DILocation(line: 1579, column: 21, scope: !9992)
!9995 = !DILocation(line: 1579, column: 25, scope: !9992)
!9996 = !DILocation(line: 1579, column: 29, scope: !9992)
!9997 = !DILocation(line: 1579, column: 35, scope: !9992)
!9998 = !DILocation(line: 1579, column: 41, scope: !9992)
!9999 = !DILocation(line: 1579, column: 49, scope: !9992)
!10000 = !DILocation(line: 1579, column: 32, scope: !9992)
!10001 = !DILocation(line: 1579, column: 7, scope: !9989)
!10002 = !DILocation(line: 1580, column: 10, scope: !9992)
!10003 = !DILocation(line: 1580, column: 12, scope: !9992)
!10004 = !DILocation(line: 1580, column: 8, scope: !9992)
!10005 = !DILocation(line: 1580, column: 4, scope: !9992)
!10006 = !DILocation(line: 1581, column: 12, scope: !10007)
!10007 = distinct !DILexicalBlock(scope: !9992, file: !3, line: 1581, column: 12)
!10008 = !DILocation(line: 1581, column: 18, scope: !10007)
!10009 = !DILocation(line: 1581, column: 26, scope: !10007)
!10010 = !DILocation(line: 1581, column: 30, scope: !10007)
!10011 = !DILocation(line: 1581, column: 34, scope: !10007)
!10012 = !DILocation(line: 1581, column: 39, scope: !10007)
!10013 = !DILocation(line: 1581, column: 45, scope: !10007)
!10014 = !DILocation(line: 1581, column: 53, scope: !10007)
!10015 = !DILocation(line: 1581, column: 37, scope: !10007)
!10016 = !DILocation(line: 1581, column: 12, scope: !9992)
!10017 = !DILocation(line: 1582, column: 8, scope: !10007)
!10018 = !DILocation(line: 1582, column: 4, scope: !10007)
!10019 = !DILocation(line: 1584, column: 7, scope: !10020)
!10020 = distinct !DILexicalBlock(scope: !9989, file: !3, line: 1584, column: 7)
!10021 = !DILocation(line: 1584, column: 11, scope: !10020)
!10022 = !DILocation(line: 1584, column: 7, scope: !9989)
!10023 = !DILocation(line: 1585, column: 34, scope: !10024)
!10024 = distinct !DILexicalBlock(scope: !10020, file: !3, line: 1584, column: 16)
!10025 = !DILocation(line: 1585, column: 40, scope: !10024)
!10026 = !DILocation(line: 1585, column: 48, scope: !10024)
!10027 = !DILocation(line: 1585, column: 4, scope: !10024)
!10028 = !DILocation(line: 1585, column: 10, scope: !10024)
!10029 = !DILocation(line: 1585, column: 18, scope: !10024)
!10030 = !DILocation(line: 1585, column: 24, scope: !10024)
!10031 = !DILocation(line: 1585, column: 32, scope: !10024)
!10032 = !DILocation(line: 1586, column: 4, scope: !10024)
!10033 = !DILocation(line: 1586, column: 10, scope: !10024)
!10034 = !DILocation(line: 1586, column: 17, scope: !10024)
!10035 = !DILocation(line: 1587, column: 3, scope: !10024)
!10036 = !DILocation(line: 1589, column: 36, scope: !10037)
!10037 = distinct !DILexicalBlock(scope: !10020, file: !3, line: 1588, column: 8)
!10038 = !DILocation(line: 1589, column: 42, scope: !10037)
!10039 = !DILocation(line: 1589, column: 50, scope: !10037)
!10040 = !DILocation(line: 1589, column: 4, scope: !10037)
!10041 = !DILocation(line: 1589, column: 11, scope: !10037)
!10042 = !DILocation(line: 1589, column: 19, scope: !10037)
!10043 = !DILocation(line: 1589, column: 26, scope: !10037)
!10044 = !DILocation(line: 1589, column: 34, scope: !10037)
!10045 = !DILocation(line: 1590, column: 4, scope: !10037)
!10046 = !DILocation(line: 1590, column: 11, scope: !10037)
!10047 = !DILocation(line: 1590, column: 18, scope: !10037)
!10048 = !DILocation(line: 1592, column: 2, scope: !9989)
!10049 = !DILocation(line: 1576, column: 33, scope: !9985)
!10050 = !DILocation(line: 1576, column: 2, scope: !9985)
!10051 = distinct !{!10051, !9987, !10052}
!10052 = !DILocation(line: 1592, column: 2, scope: !9982)
!10053 = !DILocation(line: 1595, column: 9, scope: !9889)
!10054 = !DILocation(line: 1595, column: 15, scope: !9889)
!10055 = !DILocation(line: 1595, column: 2, scope: !9889)
!10056 = !DILocation(line: 1595, column: 33, scope: !9889)
!10057 = !DILocation(line: 1595, column: 40, scope: !9889)
!10058 = !DILocation(line: 1595, column: 47, scope: !9889)
!10059 = !DILocation(line: 1596, column: 18, scope: !9889)
!10060 = !DILocation(line: 1596, column: 24, scope: !9889)
!10061 = !DILocation(line: 1596, column: 2, scope: !9889)
!10062 = !DILocation(line: 1596, column: 9, scope: !9889)
!10063 = !DILocation(line: 1596, column: 16, scope: !9889)
!10064 = !DILocation(line: 1597, column: 2, scope: !9889)
!10065 = !DILocation(line: 1597, column: 8, scope: !9889)
!10066 = !DILocation(line: 1597, column: 15, scope: !9889)
!10067 = !DILocation(line: 1600, column: 2, scope: !9889)
!10068 = !DILocation(line: 1600, column: 8, scope: !9889)
!10069 = !DILocation(line: 1600, column: 13, scope: !9889)
!10070 = !DILocation(line: 1600, column: 19, scope: !9889)
!10071 = !DILocation(line: 1601, column: 2, scope: !9889)
!10072 = !DILocation(line: 1601, column: 9, scope: !9889)
!10073 = !DILocation(line: 1601, column: 14, scope: !9889)
!10074 = !DILocation(line: 1601, column: 20, scope: !9889)
!10075 = !DILocation(line: 1602, column: 6, scope: !10076)
!10076 = distinct !DILexicalBlock(scope: !9889, file: !3, line: 1602, column: 6)
!10077 = !DILocation(line: 1602, column: 7, scope: !10076)
!10078 = !DILocation(line: 1602, column: 6, scope: !9889)
!10079 = !DILocation(line: 1603, column: 20, scope: !10080)
!10080 = distinct !DILexicalBlock(scope: !10076, file: !3, line: 1602, column: 12)
!10081 = !DILocation(line: 1603, column: 26, scope: !10080)
!10082 = !DILocation(line: 1603, column: 3, scope: !10080)
!10083 = !DILocation(line: 1603, column: 9, scope: !10080)
!10084 = !DILocation(line: 1603, column: 13, scope: !10080)
!10085 = !DILocation(line: 1603, column: 18, scope: !10080)
!10086 = !DILocation(line: 1604, column: 21, scope: !10080)
!10087 = !DILocation(line: 1604, column: 27, scope: !10080)
!10088 = !DILocation(line: 1604, column: 3, scope: !10080)
!10089 = !DILocation(line: 1604, column: 10, scope: !10080)
!10090 = !DILocation(line: 1604, column: 14, scope: !10080)
!10091 = !DILocation(line: 1604, column: 19, scope: !10080)
!10092 = !DILocation(line: 1605, column: 2, scope: !10080)
!10093 = !DILocation(line: 1607, column: 20, scope: !10094)
!10094 = distinct !DILexicalBlock(scope: !10076, file: !3, line: 1606, column: 7)
!10095 = !DILocation(line: 1607, column: 26, scope: !10094)
!10096 = !DILocation(line: 1607, column: 3, scope: !10094)
!10097 = !DILocation(line: 1607, column: 9, scope: !10094)
!10098 = !DILocation(line: 1607, column: 13, scope: !10094)
!10099 = !DILocation(line: 1607, column: 18, scope: !10094)
!10100 = !DILocation(line: 1608, column: 21, scope: !10094)
!10101 = !DILocation(line: 1608, column: 27, scope: !10094)
!10102 = !DILocation(line: 1608, column: 3, scope: !10094)
!10103 = !DILocation(line: 1608, column: 10, scope: !10094)
!10104 = !DILocation(line: 1608, column: 14, scope: !10094)
!10105 = !DILocation(line: 1608, column: 19, scope: !10094)
!10106 = !DILocation(line: 1610, column: 1, scope: !9889)
!10107 = distinct !DISubprogram(name: "isb_bsp_recalc_box", scope: !3, file: !3, line: 1863, type: !10108, scopeLine: 1864, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!10108 = !DISubroutineType(types: !10109)
!10109 = !{null, !2224}
!10110 = !DILocalVariable(name: "root", arg: 1, scope: !10107, file: !3, line: 1863, type: !2224)
!10111 = !DILocation(line: 1863, column: 43, scope: !10107)
!10112 = !DILocation(line: 1865, column: 6, scope: !10113)
!10113 = distinct !DILexicalBlock(scope: !10107, file: !3, line: 1865, column: 6)
!10114 = !DILocation(line: 1865, column: 12, scope: !10113)
!10115 = !DILocation(line: 1865, column: 6, scope: !10107)
!10116 = !DILocation(line: 1866, column: 22, scope: !10117)
!10117 = distinct !DILexicalBlock(scope: !10113, file: !3, line: 1865, column: 18)
!10118 = !DILocation(line: 1866, column: 28, scope: !10117)
!10119 = !DILocation(line: 1866, column: 3, scope: !10117)
!10120 = !DILocation(line: 1867, column: 22, scope: !10117)
!10121 = !DILocation(line: 1867, column: 28, scope: !10117)
!10122 = !DILocation(line: 1867, column: 3, scope: !10117)
!10123 = !DILocation(line: 1868, column: 2, scope: !10117)
!10124 = !DILocation(line: 1869, column: 11, scope: !10125)
!10125 = distinct !DILexicalBlock(scope: !10113, file: !3, line: 1869, column: 11)
!10126 = !DILocation(line: 1869, column: 17, scope: !10125)
!10127 = !DILocation(line: 1869, column: 11, scope: !10113)
!10128 = !DILocalVariable(name: "a", scope: !10129, file: !3, line: 1870, type: !8)
!10129 = distinct !DILexicalBlock(scope: !10125, file: !3, line: 1869, column: 26)
!10130 = !DILocation(line: 1870, column: 7, scope: !10129)
!10131 = !DILocation(line: 1872, column: 13, scope: !10129)
!10132 = !DILocation(line: 1872, column: 19, scope: !10129)
!10133 = !DILocation(line: 1872, column: 3, scope: !10129)
!10134 = !DILocation(line: 1873, column: 10, scope: !10135)
!10135 = distinct !DILexicalBlock(scope: !10129, file: !3, line: 1873, column: 3)
!10136 = !DILocation(line: 1873, column: 16, scope: !10135)
!10137 = !DILocation(line: 1873, column: 23, scope: !10135)
!10138 = !DILocation(line: 1873, column: 9, scope: !10135)
!10139 = !DILocation(line: 1873, column: 8, scope: !10135)
!10140 = !DILocation(line: 1873, column: 27, scope: !10141)
!10141 = distinct !DILexicalBlock(scope: !10135, file: !3, line: 1873, column: 3)
!10142 = !DILocation(line: 1873, column: 28, scope: !10141)
!10143 = !DILocation(line: 1873, column: 3, scope: !10135)
!10144 = !DILocation(line: 1874, column: 16, scope: !10141)
!10145 = !DILocation(line: 1874, column: 22, scope: !10141)
!10146 = !DILocation(line: 1874, column: 27, scope: !10141)
!10147 = !DILocation(line: 1874, column: 33, scope: !10141)
!10148 = !DILocation(line: 1874, column: 41, scope: !10141)
!10149 = !DILocation(line: 1874, column: 45, scope: !10141)
!10150 = !DILocation(line: 1874, column: 4, scope: !10141)
!10151 = !DILocation(line: 1873, column: 34, scope: !10141)
!10152 = !DILocation(line: 1873, column: 3, scope: !10141)
!10153 = distinct !{!10153, !10143, !10154}
!10154 = !DILocation(line: 1874, column: 48, scope: !10135)
!10155 = !DILocation(line: 1875, column: 2, scope: !10129)
!10156 = !DILocation(line: 1876, column: 1, scope: !10107)
!10157 = distinct !DISubprogram(name: "isb_bsp_test_face", scope: !3, file: !3, line: 1914, type: !10158, scopeLine: 1916, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!10158 = !DISubroutineType(types: !10159)
!10159 = !{null, !10160, !8, !8, !3742, !3742, !3742, !3742}
!10160 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9276, size: 64)
!10161 = !DILocalVariable(name: "zspan", arg: 1, scope: !10157, file: !3, line: 1914, type: !10160)
!10162 = !DILocation(line: 1914, column: 38, scope: !10157)
!10163 = !DILocalVariable(name: "obi", arg: 2, scope: !10157, file: !3, line: 1914, type: !8)
!10164 = !DILocation(line: 1914, column: 49, scope: !10157)
!10165 = !DILocalVariable(name: "zvlnr", arg: 3, scope: !10157, file: !3, line: 1914, type: !8)
!10166 = !DILocation(line: 1914, column: 58, scope: !10157)
!10167 = !DILocalVariable(name: "v1", arg: 4, scope: !10157, file: !3, line: 1915, type: !3742)
!10168 = !DILocation(line: 1915, column: 44, scope: !10157)
!10169 = !DILocalVariable(name: "v2", arg: 5, scope: !10157, file: !3, line: 1915, type: !3742)
!10170 = !DILocation(line: 1915, column: 61, scope: !10157)
!10171 = !DILocalVariable(name: "v3", arg: 6, scope: !10157, file: !3, line: 1915, type: !3742)
!10172 = !DILocation(line: 1915, column: 78, scope: !10157)
!10173 = !DILocalVariable(name: "v4", arg: 7, scope: !10157, file: !3, line: 1915, type: !3742)
!10174 = !DILocation(line: 1915, column: 95, scope: !10157)
!10175 = !DILocalVariable(name: "face", scope: !10157, file: !3, line: 1917, type: !10176)
!10176 = !DIDerivedType(tag: DW_TAG_typedef, name: "BSPFace", file: !3, line: 1469, baseType: !10177)
!10177 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BSPFace", file: !3, line: 1458, size: 960, elements: !10178)
!10178 = !{!10179, !10180, !10181, !10182, !10183, !10184, !10185, !10186, !10187, !10188, !10189, !10190, !10191, !10192, !10193, !10194}
!10179 = !DIDerivedType(tag: DW_TAG_member, name: "box", scope: !10177, file: !3, line: 1459, baseType: !2233, size: 192)
!10180 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !10177, file: !3, line: 1460, baseType: !3742, size: 64, offset: 192)
!10181 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !10177, file: !3, line: 1460, baseType: !3742, size: 64, offset: 256)
!10182 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !10177, file: !3, line: 1460, baseType: !3742, size: 64, offset: 320)
!10183 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !10177, file: !3, line: 1460, baseType: !3742, size: 64, offset: 384)
!10184 = !DIDerivedType(tag: DW_TAG_member, name: "obi", scope: !10177, file: !3, line: 1461, baseType: !8, size: 32, offset: 448)
!10185 = !DIDerivedType(tag: DW_TAG_member, name: "facenr", scope: !10177, file: !3, line: 1462, baseType: !8, size: 32, offset: 480)
!10186 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !10177, file: !3, line: 1463, baseType: !8, size: 32, offset: 512)
!10187 = !DIDerivedType(tag: DW_TAG_member, name: "shad_alpha", scope: !10177, file: !3, line: 1464, baseType: !43, size: 16, offset: 544)
!10188 = !DIDerivedType(tag: DW_TAG_member, name: "is_full", scope: !10177, file: !3, line: 1464, baseType: !43, size: 16, offset: 560)
!10189 = !DIDerivedType(tag: DW_TAG_member, name: "radline", scope: !10177, file: !3, line: 1467, baseType: !7, size: 32, offset: 576)
!10190 = !DIDerivedType(tag: DW_TAG_member, name: "radline_end", scope: !10177, file: !3, line: 1467, baseType: !7, size: 32, offset: 608)
!10191 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !10177, file: !3, line: 1467, baseType: !7, size: 32, offset: 640)
!10192 = !DIDerivedType(tag: DW_TAG_member, name: "vec1", scope: !10177, file: !3, line: 1468, baseType: !206, size: 96, offset: 672)
!10193 = !DIDerivedType(tag: DW_TAG_member, name: "vec2", scope: !10177, file: !3, line: 1468, baseType: !206, size: 96, offset: 768)
!10194 = !DIDerivedType(tag: DW_TAG_member, name: "rc", scope: !10177, file: !3, line: 1468, baseType: !206, size: 96, offset: 864)
!10195 = !DILocation(line: 1917, column: 10, scope: !10157)
!10196 = !DILocation(line: 1919, column: 11, scope: !10157)
!10197 = !DILocation(line: 1919, column: 7, scope: !10157)
!10198 = !DILocation(line: 1919, column: 9, scope: !10157)
!10199 = !DILocation(line: 1920, column: 11, scope: !10157)
!10200 = !DILocation(line: 1920, column: 7, scope: !10157)
!10201 = !DILocation(line: 1920, column: 9, scope: !10157)
!10202 = !DILocation(line: 1921, column: 11, scope: !10157)
!10203 = !DILocation(line: 1921, column: 7, scope: !10157)
!10204 = !DILocation(line: 1921, column: 9, scope: !10157)
!10205 = !DILocation(line: 1922, column: 11, scope: !10157)
!10206 = !DILocation(line: 1922, column: 7, scope: !10157)
!10207 = !DILocation(line: 1922, column: 9, scope: !10157)
!10208 = !DILocation(line: 1923, column: 12, scope: !10157)
!10209 = !DILocation(line: 1923, column: 7, scope: !10157)
!10210 = !DILocation(line: 1923, column: 10, scope: !10157)
!10211 = !DILocation(line: 1924, column: 15, scope: !10157)
!10212 = !DILocation(line: 1924, column: 21, scope: !10157)
!10213 = !DILocation(line: 1924, column: 7, scope: !10157)
!10214 = !DILocation(line: 1924, column: 13, scope: !10157)
!10215 = !DILocation(line: 1925, column: 7, scope: !10157)
!10216 = !DILocation(line: 1925, column: 11, scope: !10157)
!10217 = !DILocation(line: 1926, column: 8, scope: !10218)
!10218 = distinct !DILexicalBlock(scope: !10157, file: !3, line: 1926, column: 6)
!10219 = !DILocation(line: 1926, column: 6, scope: !10218)
!10220 = !DILocation(line: 1926, column: 6, scope: !10157)
!10221 = !DILocation(line: 1927, column: 40, scope: !10218)
!10222 = !DILocation(line: 1927, column: 47, scope: !10218)
!10223 = !DILocation(line: 1927, column: 39, scope: !10218)
!10224 = !DILocation(line: 1927, column: 67, scope: !10218)
!10225 = !DILocation(line: 1927, column: 58, scope: !10218)
!10226 = !DILocation(line: 1927, column: 57, scope: !10218)
!10227 = !DILocation(line: 1927, column: 32, scope: !10218)
!10228 = !DILocation(line: 1927, column: 27, scope: !10218)
!10229 = !DILocation(line: 1927, column: 20, scope: !10218)
!10230 = !DILocation(line: 1927, column: 8, scope: !10218)
!10231 = !DILocation(line: 1927, column: 18, scope: !10218)
!10232 = !DILocation(line: 1927, column: 3, scope: !10218)
!10233 = !DILocation(line: 1929, column: 40, scope: !10218)
!10234 = !DILocation(line: 1929, column: 47, scope: !10218)
!10235 = !DILocation(line: 1929, column: 39, scope: !10218)
!10236 = !DILocation(line: 1929, column: 32, scope: !10218)
!10237 = !DILocation(line: 1929, column: 27, scope: !10218)
!10238 = !DILocation(line: 1929, column: 20, scope: !10218)
!10239 = !DILocation(line: 1929, column: 8, scope: !10218)
!10240 = !DILocation(line: 1929, column: 18, scope: !10218)
!10241 = !DILocation(line: 1931, column: 17, scope: !10157)
!10242 = !DILocation(line: 1931, column: 24, scope: !10157)
!10243 = !DILocation(line: 1931, column: 34, scope: !10157)
!10244 = !DILocation(line: 1931, column: 16, scope: !10157)
!10245 = !DILocation(line: 1931, column: 7, scope: !10157)
!10246 = !DILocation(line: 1931, column: 14, scope: !10157)
!10247 = !DILocation(line: 1934, column: 17, scope: !10157)
!10248 = !DILocation(line: 1934, column: 2, scope: !10157)
!10249 = !DILocation(line: 1935, column: 19, scope: !10157)
!10250 = !DILocation(line: 1935, column: 24, scope: !10157)
!10251 = !DILocation(line: 1935, column: 2, scope: !10157)
!10252 = !DILocation(line: 1936, column: 19, scope: !10157)
!10253 = !DILocation(line: 1936, column: 24, scope: !10157)
!10254 = !DILocation(line: 1936, column: 2, scope: !10157)
!10255 = !DILocation(line: 1937, column: 19, scope: !10157)
!10256 = !DILocation(line: 1937, column: 24, scope: !10157)
!10257 = !DILocation(line: 1937, column: 2, scope: !10157)
!10258 = !DILocation(line: 1938, column: 6, scope: !10259)
!10259 = distinct !DILexicalBlock(scope: !10157, file: !3, line: 1938, column: 6)
!10260 = !DILocation(line: 1938, column: 6, scope: !10157)
!10261 = !DILocation(line: 1939, column: 20, scope: !10259)
!10262 = !DILocation(line: 1939, column: 25, scope: !10259)
!10263 = !DILocation(line: 1939, column: 3, scope: !10259)
!10264 = !DILocation(line: 1941, column: 35, scope: !10157)
!10265 = !DILocation(line: 1941, column: 42, scope: !10157)
!10266 = !DILocation(line: 1941, column: 22, scope: !10157)
!10267 = !DILocation(line: 1941, column: 2, scope: !10157)
!10268 = !DILocation(line: 1942, column: 1, scope: !10157)
!10269 = distinct !DISubprogram(name: "isb_bsp_test_strand", scope: !3, file: !3, line: 1879, type: !10158, scopeLine: 1881, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!10270 = !DILocalVariable(name: "zspan", arg: 1, scope: !10269, file: !3, line: 1879, type: !10160)
!10271 = !DILocation(line: 1879, column: 40, scope: !10269)
!10272 = !DILocalVariable(name: "obi", arg: 2, scope: !10269, file: !3, line: 1879, type: !8)
!10273 = !DILocation(line: 1879, column: 51, scope: !10269)
!10274 = !DILocalVariable(name: "zvlnr", arg: 3, scope: !10269, file: !3, line: 1879, type: !8)
!10275 = !DILocation(line: 1879, column: 60, scope: !10269)
!10276 = !DILocalVariable(name: "v1", arg: 4, scope: !10269, file: !3, line: 1880, type: !3742)
!10277 = !DILocation(line: 1880, column: 46, scope: !10269)
!10278 = !DILocalVariable(name: "v2", arg: 5, scope: !10269, file: !3, line: 1880, type: !3742)
!10279 = !DILocation(line: 1880, column: 63, scope: !10269)
!10280 = !DILocalVariable(name: "v3", arg: 6, scope: !10269, file: !3, line: 1880, type: !3742)
!10281 = !DILocation(line: 1880, column: 80, scope: !10269)
!10282 = !DILocalVariable(name: "v4", arg: 7, scope: !10269, file: !3, line: 1880, type: !3742)
!10283 = !DILocation(line: 1880, column: 97, scope: !10269)
!10284 = !DILocalVariable(name: "face", scope: !10269, file: !3, line: 1882, type: !10176)
!10285 = !DILocation(line: 1882, column: 10, scope: !10269)
!10286 = !DILocation(line: 1884, column: 11, scope: !10269)
!10287 = !DILocation(line: 1884, column: 7, scope: !10269)
!10288 = !DILocation(line: 1884, column: 9, scope: !10269)
!10289 = !DILocation(line: 1885, column: 11, scope: !10269)
!10290 = !DILocation(line: 1885, column: 7, scope: !10269)
!10291 = !DILocation(line: 1885, column: 9, scope: !10269)
!10292 = !DILocation(line: 1886, column: 11, scope: !10269)
!10293 = !DILocation(line: 1886, column: 7, scope: !10269)
!10294 = !DILocation(line: 1886, column: 9, scope: !10269)
!10295 = !DILocation(line: 1887, column: 11, scope: !10269)
!10296 = !DILocation(line: 1887, column: 7, scope: !10269)
!10297 = !DILocation(line: 1887, column: 9, scope: !10269)
!10298 = !DILocation(line: 1888, column: 12, scope: !10269)
!10299 = !DILocation(line: 1888, column: 7, scope: !10269)
!10300 = !DILocation(line: 1888, column: 10, scope: !10269)
!10301 = !DILocation(line: 1889, column: 15, scope: !10269)
!10302 = !DILocation(line: 1889, column: 21, scope: !10269)
!10303 = !DILocation(line: 1889, column: 7, scope: !10269)
!10304 = !DILocation(line: 1889, column: 13, scope: !10269)
!10305 = !DILocation(line: 1890, column: 7, scope: !10269)
!10306 = !DILocation(line: 1890, column: 11, scope: !10269)
!10307 = !DILocation(line: 1891, column: 8, scope: !10308)
!10308 = distinct !DILexicalBlock(scope: !10269, file: !3, line: 1891, column: 6)
!10309 = !DILocation(line: 1891, column: 6, scope: !10308)
!10310 = !DILocation(line: 1891, column: 6, scope: !10269)
!10311 = !DILocation(line: 1892, column: 40, scope: !10308)
!10312 = !DILocation(line: 1892, column: 47, scope: !10308)
!10313 = !DILocation(line: 1892, column: 39, scope: !10308)
!10314 = !DILocation(line: 1892, column: 67, scope: !10308)
!10315 = !DILocation(line: 1892, column: 58, scope: !10308)
!10316 = !DILocation(line: 1892, column: 57, scope: !10308)
!10317 = !DILocation(line: 1892, column: 32, scope: !10308)
!10318 = !DILocation(line: 1892, column: 27, scope: !10308)
!10319 = !DILocation(line: 1892, column: 20, scope: !10308)
!10320 = !DILocation(line: 1892, column: 8, scope: !10308)
!10321 = !DILocation(line: 1892, column: 18, scope: !10308)
!10322 = !DILocation(line: 1892, column: 3, scope: !10308)
!10323 = !DILocation(line: 1894, column: 40, scope: !10308)
!10324 = !DILocation(line: 1894, column: 47, scope: !10308)
!10325 = !DILocation(line: 1894, column: 39, scope: !10308)
!10326 = !DILocation(line: 1894, column: 32, scope: !10308)
!10327 = !DILocation(line: 1894, column: 27, scope: !10308)
!10328 = !DILocation(line: 1894, column: 20, scope: !10308)
!10329 = !DILocation(line: 1894, column: 8, scope: !10308)
!10330 = !DILocation(line: 1894, column: 18, scope: !10308)
!10331 = !DILocation(line: 1896, column: 17, scope: !10269)
!10332 = !DILocation(line: 1896, column: 24, scope: !10269)
!10333 = !DILocation(line: 1896, column: 34, scope: !10269)
!10334 = !DILocation(line: 1896, column: 16, scope: !10269)
!10335 = !DILocation(line: 1896, column: 7, scope: !10269)
!10336 = !DILocation(line: 1896, column: 14, scope: !10269)
!10337 = !DILocation(line: 1899, column: 17, scope: !10269)
!10338 = !DILocation(line: 1899, column: 2, scope: !10269)
!10339 = !DILocation(line: 1900, column: 19, scope: !10269)
!10340 = !DILocation(line: 1900, column: 24, scope: !10269)
!10341 = !DILocation(line: 1900, column: 2, scope: !10269)
!10342 = !DILocation(line: 1901, column: 19, scope: !10269)
!10343 = !DILocation(line: 1901, column: 24, scope: !10269)
!10344 = !DILocation(line: 1901, column: 2, scope: !10269)
!10345 = !DILocation(line: 1902, column: 19, scope: !10269)
!10346 = !DILocation(line: 1902, column: 24, scope: !10269)
!10347 = !DILocation(line: 1902, column: 2, scope: !10269)
!10348 = !DILocation(line: 1903, column: 6, scope: !10349)
!10349 = distinct !DILexicalBlock(scope: !10269, file: !3, line: 1903, column: 6)
!10350 = !DILocation(line: 1903, column: 6, scope: !10269)
!10351 = !DILocation(line: 1904, column: 20, scope: !10349)
!10352 = !DILocation(line: 1904, column: 25, scope: !10349)
!10353 = !DILocation(line: 1904, column: 3, scope: !10349)
!10354 = !DILocation(line: 1907, column: 2, scope: !10269)
!10355 = !DILocation(line: 1909, column: 35, scope: !10269)
!10356 = !DILocation(line: 1909, column: 42, scope: !10269)
!10357 = !DILocation(line: 1909, column: 22, scope: !10269)
!10358 = !DILocation(line: 1909, column: 2, scope: !10269)
!10359 = !DILocation(line: 1911, column: 1, scope: !10269)
!10360 = distinct !DISubprogram(name: "testclip_minmax", scope: !3, file: !3, line: 1944, type: !10361, scopeLine: 1945, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!10361 = !DISubroutineType(types: !10362)
!10362 = !{!8, !3742, !3742}
!10363 = !DILocalVariable(name: "ho", arg: 1, scope: !10360, file: !3, line: 1944, type: !3742)
!10364 = !DILocation(line: 1944, column: 40, scope: !10360)
!10365 = !DILocalVariable(name: "minmax", arg: 2, scope: !10360, file: !3, line: 1944, type: !3742)
!10366 = !DILocation(line: 1944, column: 59, scope: !10360)
!10367 = !DILocalVariable(name: "wco", scope: !10360, file: !3, line: 1946, type: !7)
!10368 = !DILocation(line: 1946, column: 8, scope: !10360)
!10369 = !DILocation(line: 1946, column: 13, scope: !10360)
!10370 = !DILocalVariable(name: "flag", scope: !10360, file: !3, line: 1947, type: !8)
!10371 = !DILocation(line: 1947, column: 6, scope: !10360)
!10372 = !DILocation(line: 1949, column: 7, scope: !10373)
!10373 = distinct !DILexicalBlock(scope: !10360, file: !3, line: 1949, column: 7)
!10374 = !DILocation(line: 1949, column: 15, scope: !10373)
!10375 = !DILocation(line: 1949, column: 25, scope: !10373)
!10376 = !DILocation(line: 1949, column: 24, scope: !10373)
!10377 = !DILocation(line: 1949, column: 13, scope: !10373)
!10378 = !DILocation(line: 1949, column: 7, scope: !10360)
!10379 = !DILocation(line: 1949, column: 35, scope: !10373)
!10380 = !DILocation(line: 1949, column: 30, scope: !10373)
!10381 = !DILocation(line: 1950, column: 12, scope: !10382)
!10382 = distinct !DILexicalBlock(scope: !10373, file: !3, line: 1950, column: 12)
!10383 = !DILocation(line: 1950, column: 19, scope: !10382)
!10384 = !DILocation(line: 1950, column: 29, scope: !10382)
!10385 = !DILocation(line: 1950, column: 28, scope: !10382)
!10386 = !DILocation(line: 1950, column: 17, scope: !10382)
!10387 = !DILocation(line: 1950, column: 12, scope: !10373)
!10388 = !DILocation(line: 1950, column: 39, scope: !10382)
!10389 = !DILocation(line: 1950, column: 34, scope: !10382)
!10390 = !DILocation(line: 1952, column: 7, scope: !10391)
!10391 = distinct !DILexicalBlock(scope: !10360, file: !3, line: 1952, column: 7)
!10392 = !DILocation(line: 1952, column: 15, scope: !10391)
!10393 = !DILocation(line: 1952, column: 25, scope: !10391)
!10394 = !DILocation(line: 1952, column: 24, scope: !10391)
!10395 = !DILocation(line: 1952, column: 13, scope: !10391)
!10396 = !DILocation(line: 1952, column: 7, scope: !10360)
!10397 = !DILocation(line: 1952, column: 35, scope: !10391)
!10398 = !DILocation(line: 1952, column: 30, scope: !10391)
!10399 = !DILocation(line: 1953, column: 12, scope: !10400)
!10400 = distinct !DILexicalBlock(scope: !10391, file: !3, line: 1953, column: 12)
!10401 = !DILocation(line: 1953, column: 19, scope: !10400)
!10402 = !DILocation(line: 1953, column: 29, scope: !10400)
!10403 = !DILocation(line: 1953, column: 28, scope: !10400)
!10404 = !DILocation(line: 1953, column: 17, scope: !10400)
!10405 = !DILocation(line: 1953, column: 12, scope: !10391)
!10406 = !DILocation(line: 1953, column: 39, scope: !10400)
!10407 = !DILocation(line: 1953, column: 34, scope: !10400)
!10408 = !DILocation(line: 1955, column: 9, scope: !10360)
!10409 = !DILocation(line: 1955, column: 2, scope: !10360)
!10410 = distinct !DISubprogram(name: "init_box", scope: !3, file: !3, line: 1472, type: !10411, scopeLine: 1473, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!10411 = !DISubroutineType(types: !10412)
!10412 = !{null, !10413}
!10413 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2233, size: 64)
!10414 = !DILocalVariable(name: "box", arg: 1, scope: !10410, file: !3, line: 1472, type: !10413)
!10415 = !DILocation(line: 1472, column: 28, scope: !10410)
!10416 = !DILocation(line: 1474, column: 2, scope: !10410)
!10417 = !DILocation(line: 1474, column: 7, scope: !10410)
!10418 = !DILocation(line: 1474, column: 12, scope: !10410)
!10419 = !DILocation(line: 1475, column: 2, scope: !10410)
!10420 = !DILocation(line: 1475, column: 7, scope: !10410)
!10421 = !DILocation(line: 1475, column: 12, scope: !10410)
!10422 = !DILocation(line: 1476, column: 2, scope: !10410)
!10423 = !DILocation(line: 1476, column: 7, scope: !10410)
!10424 = !DILocation(line: 1476, column: 12, scope: !10410)
!10425 = !DILocation(line: 1477, column: 2, scope: !10410)
!10426 = !DILocation(line: 1477, column: 7, scope: !10410)
!10427 = !DILocation(line: 1477, column: 12, scope: !10410)
!10428 = !DILocation(line: 1478, column: 2, scope: !10410)
!10429 = !DILocation(line: 1478, column: 7, scope: !10410)
!10430 = !DILocation(line: 1478, column: 11, scope: !10410)
!10431 = !DILocation(line: 1479, column: 2, scope: !10410)
!10432 = !DILocation(line: 1479, column: 7, scope: !10410)
!10433 = !DILocation(line: 1479, column: 11, scope: !10410)
!10434 = !DILocation(line: 1480, column: 1, scope: !10410)
!10435 = distinct !DISubprogram(name: "bound_boxf", scope: !3, file: !3, line: 1483, type: !10436, scopeLine: 1484, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!10436 = !DISubroutineType(types: !10437)
!10437 = !{null, !10413, !3742}
!10438 = !DILocalVariable(name: "box", arg: 1, scope: !10435, file: !3, line: 1483, type: !10413)
!10439 = !DILocation(line: 1483, column: 30, scope: !10435)
!10440 = !DILocalVariable(name: "v1", arg: 2, scope: !10435, file: !3, line: 1483, type: !3742)
!10441 = !DILocation(line: 1483, column: 47, scope: !10435)
!10442 = !DILocation(line: 1485, column: 6, scope: !10443)
!10443 = distinct !DILexicalBlock(scope: !10435, file: !3, line: 1485, column: 6)
!10444 = !DILocation(line: 1485, column: 14, scope: !10443)
!10445 = !DILocation(line: 1485, column: 19, scope: !10443)
!10446 = !DILocation(line: 1485, column: 12, scope: !10443)
!10447 = !DILocation(line: 1485, column: 6, scope: !10435)
!10448 = !DILocation(line: 1485, column: 37, scope: !10443)
!10449 = !DILocation(line: 1485, column: 25, scope: !10443)
!10450 = !DILocation(line: 1485, column: 30, scope: !10443)
!10451 = !DILocation(line: 1485, column: 35, scope: !10443)
!10452 = !DILocation(line: 1486, column: 6, scope: !10453)
!10453 = distinct !DILexicalBlock(scope: !10435, file: !3, line: 1486, column: 6)
!10454 = !DILocation(line: 1486, column: 14, scope: !10453)
!10455 = !DILocation(line: 1486, column: 19, scope: !10453)
!10456 = !DILocation(line: 1486, column: 12, scope: !10453)
!10457 = !DILocation(line: 1486, column: 6, scope: !10435)
!10458 = !DILocation(line: 1486, column: 37, scope: !10453)
!10459 = !DILocation(line: 1486, column: 25, scope: !10453)
!10460 = !DILocation(line: 1486, column: 30, scope: !10453)
!10461 = !DILocation(line: 1486, column: 35, scope: !10453)
!10462 = !DILocation(line: 1487, column: 6, scope: !10463)
!10463 = distinct !DILexicalBlock(scope: !10435, file: !3, line: 1487, column: 6)
!10464 = !DILocation(line: 1487, column: 14, scope: !10463)
!10465 = !DILocation(line: 1487, column: 19, scope: !10463)
!10466 = !DILocation(line: 1487, column: 12, scope: !10463)
!10467 = !DILocation(line: 1487, column: 6, scope: !10435)
!10468 = !DILocation(line: 1487, column: 37, scope: !10463)
!10469 = !DILocation(line: 1487, column: 25, scope: !10463)
!10470 = !DILocation(line: 1487, column: 30, scope: !10463)
!10471 = !DILocation(line: 1487, column: 35, scope: !10463)
!10472 = !DILocation(line: 1488, column: 6, scope: !10473)
!10473 = distinct !DILexicalBlock(scope: !10435, file: !3, line: 1488, column: 6)
!10474 = !DILocation(line: 1488, column: 14, scope: !10473)
!10475 = !DILocation(line: 1488, column: 19, scope: !10473)
!10476 = !DILocation(line: 1488, column: 12, scope: !10473)
!10477 = !DILocation(line: 1488, column: 6, scope: !10435)
!10478 = !DILocation(line: 1488, column: 37, scope: !10473)
!10479 = !DILocation(line: 1488, column: 25, scope: !10473)
!10480 = !DILocation(line: 1488, column: 30, scope: !10473)
!10481 = !DILocation(line: 1488, column: 35, scope: !10473)
!10482 = !DILocation(line: 1489, column: 6, scope: !10483)
!10483 = distinct !DILexicalBlock(scope: !10435, file: !3, line: 1489, column: 6)
!10484 = !DILocation(line: 1489, column: 14, scope: !10483)
!10485 = !DILocation(line: 1489, column: 19, scope: !10483)
!10486 = !DILocation(line: 1489, column: 12, scope: !10483)
!10487 = !DILocation(line: 1489, column: 6, scope: !10435)
!10488 = !DILocation(line: 1489, column: 36, scope: !10483)
!10489 = !DILocation(line: 1489, column: 25, scope: !10483)
!10490 = !DILocation(line: 1489, column: 30, scope: !10483)
!10491 = !DILocation(line: 1489, column: 34, scope: !10483)
!10492 = !DILocation(line: 1490, column: 6, scope: !10493)
!10493 = distinct !DILexicalBlock(scope: !10435, file: !3, line: 1490, column: 6)
!10494 = !DILocation(line: 1490, column: 14, scope: !10493)
!10495 = !DILocation(line: 1490, column: 19, scope: !10493)
!10496 = !DILocation(line: 1490, column: 12, scope: !10493)
!10497 = !DILocation(line: 1490, column: 6, scope: !10435)
!10498 = !DILocation(line: 1490, column: 36, scope: !10493)
!10499 = !DILocation(line: 1490, column: 25, scope: !10493)
!10500 = !DILocation(line: 1490, column: 30, scope: !10493)
!10501 = !DILocation(line: 1490, column: 34, scope: !10493)
!10502 = !DILocation(line: 1491, column: 1, scope: !10435)
!10503 = distinct !DISubprogram(name: "isb_bsp_face_inside", scope: !3, file: !3, line: 1792, type: !10504, scopeLine: 1793, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!10504 = !DISubroutineType(types: !10505)
!10505 = !{null, !2224, !10506}
!10506 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10176, size: 64)
!10507 = !DILocalVariable(name: "bspn", arg: 1, scope: !10503, file: !3, line: 1792, type: !2224)
!10508 = !DILocation(line: 1792, column: 44, scope: !10503)
!10509 = !DILocalVariable(name: "face", arg: 2, scope: !10503, file: !3, line: 1792, type: !10506)
!10510 = !DILocation(line: 1792, column: 59, scope: !10503)
!10511 = !DILocation(line: 1796, column: 6, scope: !10512)
!10512 = distinct !DILexicalBlock(scope: !10503, file: !3, line: 1796, column: 6)
!10513 = !DILocation(line: 1796, column: 12, scope: !10512)
!10514 = !DILocation(line: 1796, column: 6, scope: !10503)
!10515 = !DILocation(line: 1798, column: 7, scope: !10516)
!10516 = distinct !DILexicalBlock(scope: !10517, file: !3, line: 1798, column: 7)
!10517 = distinct !DILexicalBlock(scope: !10512, file: !3, line: 1796, column: 18)
!10518 = !DILocation(line: 1798, column: 13, scope: !10516)
!10519 = !DILocation(line: 1798, column: 18, scope: !10516)
!10520 = !DILocation(line: 1798, column: 7, scope: !10517)
!10521 = !DILocation(line: 1799, column: 8, scope: !10522)
!10522 = distinct !DILexicalBlock(scope: !10523, file: !3, line: 1799, column: 8)
!10523 = distinct !DILexicalBlock(scope: !10516, file: !3, line: 1798, column: 23)
!10524 = !DILocation(line: 1799, column: 14, scope: !10522)
!10525 = !DILocation(line: 1799, column: 18, scope: !10522)
!10526 = !DILocation(line: 1799, column: 26, scope: !10522)
!10527 = !DILocation(line: 1799, column: 32, scope: !10522)
!10528 = !DILocation(line: 1799, column: 23, scope: !10522)
!10529 = !DILocation(line: 1799, column: 8, scope: !10523)
!10530 = !DILocation(line: 1800, column: 25, scope: !10522)
!10531 = !DILocation(line: 1800, column: 31, scope: !10522)
!10532 = !DILocation(line: 1800, column: 37, scope: !10522)
!10533 = !DILocation(line: 1800, column: 5, scope: !10522)
!10534 = !DILocation(line: 1801, column: 8, scope: !10535)
!10535 = distinct !DILexicalBlock(scope: !10523, file: !3, line: 1801, column: 8)
!10536 = !DILocation(line: 1801, column: 14, scope: !10535)
!10537 = !DILocation(line: 1801, column: 18, scope: !10535)
!10538 = !DILocation(line: 1801, column: 25, scope: !10535)
!10539 = !DILocation(line: 1801, column: 31, scope: !10535)
!10540 = !DILocation(line: 1801, column: 23, scope: !10535)
!10541 = !DILocation(line: 1801, column: 8, scope: !10523)
!10542 = !DILocation(line: 1802, column: 25, scope: !10535)
!10543 = !DILocation(line: 1802, column: 31, scope: !10535)
!10544 = !DILocation(line: 1802, column: 38, scope: !10535)
!10545 = !DILocation(line: 1802, column: 5, scope: !10535)
!10546 = !DILocation(line: 1803, column: 3, scope: !10523)
!10547 = !DILocation(line: 1805, column: 8, scope: !10548)
!10548 = distinct !DILexicalBlock(scope: !10549, file: !3, line: 1805, column: 8)
!10549 = distinct !DILexicalBlock(scope: !10516, file: !3, line: 1804, column: 8)
!10550 = !DILocation(line: 1805, column: 14, scope: !10548)
!10551 = !DILocation(line: 1805, column: 18, scope: !10548)
!10552 = !DILocation(line: 1805, column: 26, scope: !10548)
!10553 = !DILocation(line: 1805, column: 32, scope: !10548)
!10554 = !DILocation(line: 1805, column: 23, scope: !10548)
!10555 = !DILocation(line: 1805, column: 8, scope: !10549)
!10556 = !DILocation(line: 1806, column: 25, scope: !10548)
!10557 = !DILocation(line: 1806, column: 31, scope: !10548)
!10558 = !DILocation(line: 1806, column: 37, scope: !10548)
!10559 = !DILocation(line: 1806, column: 5, scope: !10548)
!10560 = !DILocation(line: 1807, column: 8, scope: !10561)
!10561 = distinct !DILexicalBlock(scope: !10549, file: !3, line: 1807, column: 8)
!10562 = !DILocation(line: 1807, column: 14, scope: !10561)
!10563 = !DILocation(line: 1807, column: 18, scope: !10561)
!10564 = !DILocation(line: 1807, column: 25, scope: !10561)
!10565 = !DILocation(line: 1807, column: 31, scope: !10561)
!10566 = !DILocation(line: 1807, column: 23, scope: !10561)
!10567 = !DILocation(line: 1807, column: 8, scope: !10549)
!10568 = !DILocation(line: 1808, column: 25, scope: !10561)
!10569 = !DILocation(line: 1808, column: 31, scope: !10561)
!10570 = !DILocation(line: 1808, column: 38, scope: !10561)
!10571 = !DILocation(line: 1808, column: 5, scope: !10561)
!10572 = !DILocation(line: 1810, column: 2, scope: !10517)
!10573 = !DILocalVariable(name: "a", scope: !10574, file: !3, line: 1813, type: !8)
!10574 = distinct !DILexicalBlock(scope: !10512, file: !3, line: 1811, column: 7)
!10575 = !DILocation(line: 1813, column: 7, scope: !10574)
!10576 = !DILocation(line: 1815, column: 7, scope: !10577)
!10577 = distinct !DILexicalBlock(scope: !10574, file: !3, line: 1815, column: 7)
!10578 = !DILocation(line: 1815, column: 13, scope: !10577)
!10579 = !DILocation(line: 1815, column: 20, scope: !10577)
!10580 = !DILocation(line: 1815, column: 7, scope: !10574)
!10581 = !DILocation(line: 1815, column: 25, scope: !10577)
!10582 = !DILocation(line: 1818, column: 7, scope: !10583)
!10583 = distinct !DILexicalBlock(scope: !10574, file: !3, line: 1818, column: 7)
!10584 = !DILocation(line: 1818, column: 13, scope: !10583)
!10585 = !DILocation(line: 1818, column: 22, scope: !10583)
!10586 = !DILocation(line: 1818, column: 28, scope: !10583)
!10587 = !DILocation(line: 1818, column: 20, scope: !10583)
!10588 = !DILocation(line: 1818, column: 7, scope: !10574)
!10589 = !DILocation(line: 1819, column: 4, scope: !10583)
!10590 = !DILocation(line: 1822, column: 7, scope: !10591)
!10591 = distinct !DILexicalBlock(scope: !10574, file: !3, line: 1822, column: 7)
!10592 = !DILocation(line: 1822, column: 13, scope: !10591)
!10593 = !DILocation(line: 1822, column: 17, scope: !10591)
!10594 = !DILocation(line: 1822, column: 24, scope: !10591)
!10595 = !DILocation(line: 1822, column: 30, scope: !10591)
!10596 = !DILocation(line: 1822, column: 34, scope: !10591)
!10597 = !DILocation(line: 1822, column: 22, scope: !10591)
!10598 = !DILocation(line: 1822, column: 7, scope: !10574)
!10599 = !DILocation(line: 1823, column: 4, scope: !10591)
!10600 = !DILocation(line: 1826, column: 34, scope: !10601)
!10601 = distinct !DILexicalBlock(scope: !10574, file: !3, line: 1826, column: 7)
!10602 = !DILocation(line: 1826, column: 40, scope: !10601)
!10603 = !DILocation(line: 1826, column: 25, scope: !10601)
!10604 = !DILocation(line: 1826, column: 54, scope: !10601)
!10605 = !DILocation(line: 1826, column: 60, scope: !10601)
!10606 = !DILocation(line: 1826, column: 45, scope: !10601)
!10607 = !DILocation(line: 1826, column: 10, scope: !10601)
!10608 = !DILocation(line: 1826, column: 8, scope: !10601)
!10609 = !DILocation(line: 1826, column: 7, scope: !10574)
!10610 = !DILocation(line: 1827, column: 4, scope: !10601)
!10611 = !DILocation(line: 1830, column: 10, scope: !10612)
!10612 = distinct !DILexicalBlock(scope: !10574, file: !3, line: 1830, column: 3)
!10613 = !DILocation(line: 1830, column: 16, scope: !10612)
!10614 = !DILocation(line: 1830, column: 23, scope: !10612)
!10615 = !DILocation(line: 1830, column: 9, scope: !10612)
!10616 = !DILocation(line: 1830, column: 8, scope: !10612)
!10617 = !DILocation(line: 1830, column: 27, scope: !10618)
!10618 = distinct !DILexicalBlock(scope: !10612, file: !3, line: 1830, column: 3)
!10619 = !DILocation(line: 1830, column: 28, scope: !10618)
!10620 = !DILocation(line: 1830, column: 3, scope: !10612)
!10621 = !DILocalVariable(name: "samp", scope: !10622, file: !3, line: 1831, type: !2214)
!10622 = distinct !DILexicalBlock(scope: !10618, file: !3, line: 1830, column: 38)
!10623 = !DILocation(line: 1831, column: 15, scope: !10622)
!10624 = !DILocation(line: 1831, column: 21, scope: !10622)
!10625 = !DILocation(line: 1831, column: 27, scope: !10622)
!10626 = !DILocation(line: 1831, column: 35, scope: !10622)
!10627 = !DILocation(line: 1833, column: 9, scope: !10628)
!10628 = distinct !DILexicalBlock(scope: !10622, file: !3, line: 1833, column: 8)
!10629 = !DILocation(line: 1833, column: 15, scope: !10628)
!10630 = !DILocation(line: 1833, column: 23, scope: !10628)
!10631 = !DILocation(line: 1833, column: 29, scope: !10628)
!10632 = !DILocation(line: 1833, column: 21, scope: !10628)
!10633 = !DILocation(line: 1833, column: 36, scope: !10628)
!10634 = !DILocation(line: 1833, column: 39, scope: !10628)
!10635 = !DILocation(line: 1833, column: 45, scope: !10628)
!10636 = !DILocation(line: 1833, column: 50, scope: !10628)
!10637 = !DILocation(line: 1833, column: 56, scope: !10628)
!10638 = !DILocation(line: 1833, column: 48, scope: !10628)
!10639 = !DILocation(line: 1833, column: 61, scope: !10628)
!10640 = !DILocation(line: 1833, column: 64, scope: !10628)
!10641 = !DILocation(line: 1833, column: 70, scope: !10628)
!10642 = !DILocation(line: 1833, column: 8, scope: !10622)
!10643 = !DILocation(line: 1834, column: 9, scope: !10644)
!10644 = distinct !DILexicalBlock(scope: !10645, file: !3, line: 1834, column: 9)
!10645 = distinct !DILexicalBlock(scope: !10628, file: !3, line: 1833, column: 79)
!10646 = !DILocation(line: 1834, column: 15, scope: !10644)
!10647 = !DILocation(line: 1834, column: 19, scope: !10644)
!10648 = !DILocation(line: 1834, column: 26, scope: !10644)
!10649 = !DILocation(line: 1834, column: 32, scope: !10644)
!10650 = !DILocation(line: 1834, column: 24, scope: !10644)
!10651 = !DILocation(line: 1834, column: 9, scope: !10645)
!10652 = !DILocation(line: 1835, column: 39, scope: !10653)
!10653 = distinct !DILexicalBlock(scope: !10654, file: !3, line: 1835, column: 10)
!10654 = distinct !DILexicalBlock(scope: !10644, file: !3, line: 1834, column: 40)
!10655 = !DILocation(line: 1835, column: 45, scope: !10653)
!10656 = !DILocation(line: 1835, column: 30, scope: !10653)
!10657 = !DILocation(line: 1835, column: 50, scope: !10653)
!10658 = !DILocation(line: 1835, column: 56, scope: !10653)
!10659 = !DILocation(line: 1835, column: 10, scope: !10653)
!10660 = !DILocation(line: 1835, column: 10, scope: !10654)
!10661 = !DILocalVariable(name: "inshadow", scope: !10662, file: !3, line: 1836, type: !8)
!10662 = distinct !DILexicalBlock(scope: !10653, file: !3, line: 1835, column: 62)
!10663 = !DILocation(line: 1836, column: 11, scope: !10662)
!10664 = !DILocation(line: 1838, column: 11, scope: !10665)
!10665 = distinct !DILexicalBlock(scope: !10662, file: !3, line: 1838, column: 11)
!10666 = !DILocation(line: 1838, column: 17, scope: !10665)
!10667 = !DILocation(line: 1838, column: 11, scope: !10662)
!10668 = !DILocation(line: 1839, column: 32, scope: !10669)
!10669 = distinct !DILexicalBlock(scope: !10670, file: !3, line: 1839, column: 12)
!10670 = distinct !DILexicalBlock(scope: !10665, file: !3, line: 1838, column: 23)
!10671 = !DILocation(line: 1839, column: 38, scope: !10669)
!10672 = !DILocation(line: 1839, column: 43, scope: !10669)
!10673 = !DILocation(line: 1839, column: 12, scope: !10669)
!10674 = !DILocation(line: 1839, column: 12, scope: !10670)
!10675 = !DILocation(line: 1840, column: 17, scope: !10669)
!10676 = !DILocation(line: 1840, column: 9, scope: !10669)
!10677 = !DILocation(line: 1841, column: 7, scope: !10670)
!10678 = !DILocation(line: 1842, column: 37, scope: !10679)
!10679 = distinct !DILexicalBlock(scope: !10665, file: !3, line: 1842, column: 17)
!10680 = !DILocation(line: 1842, column: 43, scope: !10679)
!10681 = !DILocation(line: 1842, column: 48, scope: !10679)
!10682 = !DILocation(line: 1842, column: 54, scope: !10679)
!10683 = !DILocation(line: 1842, column: 58, scope: !10679)
!10684 = !DILocation(line: 1842, column: 64, scope: !10679)
!10685 = !DILocation(line: 1842, column: 68, scope: !10679)
!10686 = !DILocation(line: 1842, column: 74, scope: !10679)
!10687 = !DILocation(line: 1842, column: 17, scope: !10679)
!10688 = !DILocation(line: 1842, column: 17, scope: !10665)
!10689 = !DILocation(line: 1843, column: 16, scope: !10679)
!10690 = !DILocation(line: 1843, column: 8, scope: !10679)
!10691 = !DILocation(line: 1844, column: 16, scope: !10692)
!10692 = distinct !DILexicalBlock(scope: !10679, file: !3, line: 1844, column: 16)
!10693 = !DILocation(line: 1844, column: 22, scope: !10692)
!10694 = !DILocation(line: 1844, column: 25, scope: !10692)
!10695 = !DILocation(line: 1844, column: 48, scope: !10692)
!10696 = !DILocation(line: 1844, column: 54, scope: !10692)
!10697 = !DILocation(line: 1844, column: 59, scope: !10692)
!10698 = !DILocation(line: 1844, column: 65, scope: !10692)
!10699 = !DILocation(line: 1844, column: 69, scope: !10692)
!10700 = !DILocation(line: 1844, column: 75, scope: !10692)
!10701 = !DILocation(line: 1844, column: 79, scope: !10692)
!10702 = !DILocation(line: 1844, column: 85, scope: !10692)
!10703 = !DILocation(line: 1844, column: 28, scope: !10692)
!10704 = !DILocation(line: 1844, column: 16, scope: !10679)
!10705 = !DILocation(line: 1845, column: 16, scope: !10692)
!10706 = !DILocation(line: 1845, column: 8, scope: !10692)
!10707 = !DILocation(line: 1847, column: 11, scope: !10708)
!10708 = distinct !DILexicalBlock(scope: !10662, file: !3, line: 1847, column: 11)
!10709 = !DILocation(line: 1847, column: 11, scope: !10662)
!10710 = !DILocation(line: 1848, column: 28, scope: !10711)
!10711 = distinct !DILexicalBlock(scope: !10708, file: !3, line: 1847, column: 21)
!10712 = !DILocation(line: 1848, column: 34, scope: !10711)
!10713 = !DILocation(line: 1848, column: 10, scope: !10711)
!10714 = !DILocation(line: 1848, column: 16, scope: !10711)
!10715 = !DILocation(line: 1848, column: 25, scope: !10711)
!10716 = !DILocation(line: 1850, column: 14, scope: !10717)
!10717 = distinct !DILexicalBlock(scope: !10711, file: !3, line: 1850, column: 12)
!10718 = !DILocation(line: 1850, column: 20, scope: !10717)
!10719 = !DILocation(line: 1850, column: 12, scope: !10717)
!10720 = !DILocation(line: 1850, column: 29, scope: !10717)
!10721 = !DILocation(line: 1850, column: 37, scope: !10717)
!10722 = !DILocation(line: 1850, column: 40, scope: !10717)
!10723 = !DILocation(line: 1850, column: 46, scope: !10717)
!10724 = !DILocation(line: 1850, column: 12, scope: !10711)
!10725 = !DILocation(line: 1851, column: 9, scope: !10726)
!10726 = distinct !DILexicalBlock(scope: !10717, file: !3, line: 1850, column: 55)
!10727 = !DILocation(line: 1851, column: 15, scope: !10726)
!10728 = !DILocation(line: 1851, column: 19, scope: !10726)
!10729 = !DILocation(line: 1852, column: 9, scope: !10726)
!10730 = !DILocation(line: 1852, column: 15, scope: !10726)
!10731 = !DILocation(line: 1852, column: 22, scope: !10726)
!10732 = !DILocation(line: 1853, column: 8, scope: !10726)
!10733 = !DILocation(line: 1854, column: 7, scope: !10711)
!10734 = !DILocation(line: 1855, column: 6, scope: !10662)
!10735 = !DILocation(line: 1856, column: 5, scope: !10654)
!10736 = !DILocation(line: 1857, column: 4, scope: !10645)
!10737 = !DILocation(line: 1858, column: 3, scope: !10622)
!10738 = !DILocation(line: 1830, column: 34, scope: !10618)
!10739 = !DILocation(line: 1830, column: 3, scope: !10618)
!10740 = distinct !{!10740, !10620, !10741}
!10741 = !DILocation(line: 1858, column: 3, scope: !10612)
!10742 = !DILocation(line: 1860, column: 1, scope: !10503)
!10743 = distinct !DISubprogram(name: "point_behind_strand", scope: !3, file: !3, line: 1678, type: !10744, scopeLine: 1679, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!10744 = !DISubroutineType(types: !10745)
!10745 = !{!8, !3742, !10506}
!10746 = !DILocalVariable(name: "p", arg: 1, scope: !10743, file: !3, line: 1678, type: !3742)
!10747 = !DILocation(line: 1678, column: 44, scope: !10743)
!10748 = !DILocalVariable(name: "face", arg: 2, scope: !10743, file: !3, line: 1678, type: !10506)
!10749 = !DILocation(line: 1678, column: 59, scope: !10743)
!10750 = !DILocalVariable(name: "dist", scope: !10743, file: !3, line: 1681, type: !7)
!10751 = !DILocation(line: 1681, column: 8, scope: !10743)
!10752 = !DILocalVariable(name: "rc", scope: !10743, file: !3, line: 1681, type: !10)
!10753 = !DILocation(line: 1681, column: 14, scope: !10743)
!10754 = !DILocalVariable(name: "pt", scope: !10743, file: !3, line: 1681, type: !10)
!10755 = !DILocation(line: 1681, column: 21, scope: !10743)
!10756 = !DILocation(line: 1685, column: 6, scope: !10757)
!10757 = distinct !DILexicalBlock(scope: !10743, file: !3, line: 1685, column: 6)
!10758 = !DILocation(line: 1685, column: 12, scope: !10757)
!10759 = !DILocation(line: 1685, column: 15, scope: !10757)
!10760 = !DILocation(line: 1685, column: 6, scope: !10743)
!10761 = !DILocation(line: 1686, column: 10, scope: !10762)
!10762 = distinct !DILexicalBlock(scope: !10757, file: !3, line: 1685, column: 23)
!10763 = !DILocation(line: 1686, column: 15, scope: !10762)
!10764 = !DILocation(line: 1686, column: 21, scope: !10762)
!10765 = !DILocation(line: 1686, column: 14, scope: !10762)
!10766 = !DILocation(line: 1686, column: 3, scope: !10762)
!10767 = !DILocation(line: 1686, column: 8, scope: !10762)
!10768 = !DILocation(line: 1687, column: 10, scope: !10762)
!10769 = !DILocation(line: 1687, column: 15, scope: !10762)
!10770 = !DILocation(line: 1687, column: 21, scope: !10762)
!10771 = !DILocation(line: 1687, column: 14, scope: !10762)
!10772 = !DILocation(line: 1687, column: 3, scope: !10762)
!10773 = !DILocation(line: 1687, column: 8, scope: !10762)
!10774 = !DILocation(line: 1688, column: 17, scope: !10762)
!10775 = !DILocation(line: 1688, column: 10, scope: !10762)
!10776 = !DILocation(line: 1688, column: 8, scope: !10762)
!10777 = !DILocation(line: 1690, column: 7, scope: !10778)
!10778 = distinct !DILexicalBlock(scope: !10762, file: !3, line: 1690, column: 7)
!10779 = !DILocation(line: 1690, column: 14, scope: !10778)
!10780 = !DILocation(line: 1690, column: 20, scope: !10778)
!10781 = !DILocation(line: 1690, column: 12, scope: !10778)
!10782 = !DILocation(line: 1690, column: 7, scope: !10762)
!10783 = !DILocation(line: 1691, column: 4, scope: !10778)
!10784 = !DILocation(line: 1692, column: 2, scope: !10762)
!10785 = !DILocalVariable(name: "lambda", scope: !10786, file: !3, line: 1694, type: !7)
!10786 = distinct !DILexicalBlock(scope: !10757, file: !3, line: 1693, column: 7)
!10787 = !DILocation(line: 1694, column: 9, scope: !10786)
!10788 = !DILocation(line: 1694, column: 19, scope: !10786)
!10789 = !DILocation(line: 1694, column: 25, scope: !10786)
!10790 = !DILocation(line: 1694, column: 32, scope: !10786)
!10791 = !DILocation(line: 1694, column: 37, scope: !10786)
!10792 = !DILocation(line: 1694, column: 43, scope: !10786)
!10793 = !DILocation(line: 1694, column: 36, scope: !10786)
!10794 = !DILocation(line: 1694, column: 30, scope: !10786)
!10795 = !DILocation(line: 1694, column: 54, scope: !10786)
!10796 = !DILocation(line: 1694, column: 60, scope: !10786)
!10797 = !DILocation(line: 1694, column: 67, scope: !10786)
!10798 = !DILocation(line: 1694, column: 72, scope: !10786)
!10799 = !DILocation(line: 1694, column: 78, scope: !10786)
!10800 = !DILocation(line: 1694, column: 71, scope: !10786)
!10801 = !DILocation(line: 1694, column: 65, scope: !10786)
!10802 = !DILocation(line: 1694, column: 52, scope: !10786)
!10803 = !DILocation(line: 1694, column: 89, scope: !10786)
!10804 = !DILocation(line: 1694, column: 95, scope: !10786)
!10805 = !DILocation(line: 1694, column: 88, scope: !10786)
!10806 = !DILocation(line: 1696, column: 7, scope: !10807)
!10807 = distinct !DILexicalBlock(scope: !10786, file: !3, line: 1696, column: 7)
!10808 = !DILocation(line: 1696, column: 17, scope: !10807)
!10809 = !DILocation(line: 1696, column: 23, scope: !10807)
!10810 = !DILocation(line: 1696, column: 16, scope: !10807)
!10811 = !DILocation(line: 1696, column: 14, scope: !10807)
!10812 = !DILocation(line: 1696, column: 35, scope: !10807)
!10813 = !DILocation(line: 1696, column: 38, scope: !10807)
!10814 = !DILocation(line: 1696, column: 52, scope: !10807)
!10815 = !DILocation(line: 1696, column: 58, scope: !10807)
!10816 = !DILocation(line: 1696, column: 51, scope: !10807)
!10817 = !DILocation(line: 1696, column: 45, scope: !10807)
!10818 = !DILocation(line: 1696, column: 7, scope: !10786)
!10819 = !DILocation(line: 1700, column: 11, scope: !10820)
!10820 = distinct !DILexicalBlock(scope: !10807, file: !3, line: 1696, column: 71)
!10821 = !DILocation(line: 1700, column: 18, scope: !10820)
!10822 = !DILocation(line: 1700, column: 24, scope: !10820)
!10823 = !DILocation(line: 1700, column: 17, scope: !10820)
!10824 = !DILocation(line: 1700, column: 30, scope: !10820)
!10825 = !DILocation(line: 1700, column: 36, scope: !10820)
!10826 = !DILocation(line: 1700, column: 29, scope: !10820)
!10827 = !DILocation(line: 1700, column: 4, scope: !10820)
!10828 = !DILocation(line: 1700, column: 9, scope: !10820)
!10829 = !DILocation(line: 1701, column: 11, scope: !10820)
!10830 = !DILocation(line: 1701, column: 18, scope: !10820)
!10831 = !DILocation(line: 1701, column: 24, scope: !10820)
!10832 = !DILocation(line: 1701, column: 17, scope: !10820)
!10833 = !DILocation(line: 1701, column: 30, scope: !10820)
!10834 = !DILocation(line: 1701, column: 36, scope: !10820)
!10835 = !DILocation(line: 1701, column: 29, scope: !10820)
!10836 = !DILocation(line: 1701, column: 4, scope: !10820)
!10837 = !DILocation(line: 1701, column: 9, scope: !10820)
!10838 = !DILocation(line: 1703, column: 11, scope: !10820)
!10839 = !DILocation(line: 1703, column: 17, scope: !10820)
!10840 = !DILocation(line: 1703, column: 16, scope: !10820)
!10841 = !DILocation(line: 1703, column: 4, scope: !10820)
!10842 = !DILocation(line: 1703, column: 9, scope: !10820)
!10843 = !DILocation(line: 1704, column: 11, scope: !10820)
!10844 = !DILocation(line: 1704, column: 17, scope: !10820)
!10845 = !DILocation(line: 1704, column: 16, scope: !10820)
!10846 = !DILocation(line: 1704, column: 4, scope: !10820)
!10847 = !DILocation(line: 1704, column: 9, scope: !10820)
!10848 = !DILocation(line: 1705, column: 18, scope: !10820)
!10849 = !DILocation(line: 1705, column: 11, scope: !10820)
!10850 = !DILocation(line: 1705, column: 9, scope: !10820)
!10851 = !DILocation(line: 1707, column: 8, scope: !10852)
!10852 = distinct !DILexicalBlock(scope: !10820, file: !3, line: 1707, column: 8)
!10853 = !DILocation(line: 1707, column: 15, scope: !10852)
!10854 = !DILocation(line: 1707, column: 21, scope: !10852)
!10855 = !DILocation(line: 1707, column: 13, scope: !10852)
!10856 = !DILocation(line: 1707, column: 8, scope: !10820)
!10857 = !DILocalVariable(name: "zval", scope: !10858, file: !3, line: 1708, type: !7)
!10858 = distinct !DILexicalBlock(scope: !10852, file: !3, line: 1707, column: 30)
!10859 = !DILocation(line: 1708, column: 11, scope: !10858)
!10860 = !DILocation(line: 1708, column: 17, scope: !10858)
!10861 = !DILocation(line: 1708, column: 23, scope: !10858)
!10862 = !DILocation(line: 1708, column: 33, scope: !10858)
!10863 = !DILocation(line: 1708, column: 40, scope: !10858)
!10864 = !DILocation(line: 1708, column: 46, scope: !10858)
!10865 = !DILocation(line: 1708, column: 39, scope: !10858)
!10866 = !DILocation(line: 1708, column: 31, scope: !10858)
!10867 = !DILocation(line: 1709, column: 9, scope: !10868)
!10868 = distinct !DILexicalBlock(scope: !10858, file: !3, line: 1709, column: 9)
!10869 = !DILocation(line: 1709, column: 16, scope: !10868)
!10870 = !DILocation(line: 1709, column: 14, scope: !10868)
!10871 = !DILocation(line: 1709, column: 9, scope: !10858)
!10872 = !DILocation(line: 1710, column: 6, scope: !10868)
!10873 = !DILocation(line: 1711, column: 4, scope: !10858)
!10874 = !DILocation(line: 1712, column: 3, scope: !10820)
!10875 = !DILocation(line: 1714, column: 2, scope: !10743)
!10876 = !DILocation(line: 1715, column: 1, scope: !10743)
!10877 = distinct !DISubprogram(name: "point_behind_tria2d", scope: !3, file: !3, line: 1719, type: !10878, scopeLine: 1720, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!10878 = !DISubroutineType(types: !10879)
!10879 = !{!8, !3742, !3742, !3742, !3742}
!10880 = !DILocalVariable(name: "p", arg: 1, scope: !10877, file: !3, line: 1719, type: !3742)
!10881 = !DILocation(line: 1719, column: 44, scope: !10877)
!10882 = !DILocalVariable(name: "v1", arg: 2, scope: !10877, file: !3, line: 1719, type: !3742)
!10883 = !DILocation(line: 1719, column: 62, scope: !10877)
!10884 = !DILocalVariable(name: "v2", arg: 3, scope: !10877, file: !3, line: 1719, type: !3742)
!10885 = !DILocation(line: 1719, column: 81, scope: !10877)
!10886 = !DILocalVariable(name: "v3", arg: 4, scope: !10877, file: !3, line: 1719, type: !3742)
!10887 = !DILocation(line: 1719, column: 100, scope: !10877)
!10888 = !DILocalVariable(name: "a", scope: !10877, file: !3, line: 1721, type: !10)
!10889 = !DILocation(line: 1721, column: 8, scope: !10877)
!10890 = !DILocalVariable(name: "c", scope: !10877, file: !3, line: 1721, type: !10)
!10891 = !DILocation(line: 1721, column: 14, scope: !10877)
!10892 = !DILocalVariable(name: "h", scope: !10877, file: !3, line: 1721, type: !10)
!10893 = !DILocation(line: 1721, column: 20, scope: !10877)
!10894 = !DILocalVariable(name: "div", scope: !10877, file: !3, line: 1721, type: !7)
!10895 = !DILocation(line: 1721, column: 26, scope: !10877)
!10896 = !DILocalVariable(name: "u", scope: !10877, file: !3, line: 1722, type: !7)
!10897 = !DILocation(line: 1722, column: 8, scope: !10877)
!10898 = !DILocalVariable(name: "v", scope: !10877, file: !3, line: 1722, type: !7)
!10899 = !DILocation(line: 1722, column: 11, scope: !10877)
!10900 = !DILocation(line: 1724, column: 9, scope: !10877)
!10901 = !DILocation(line: 1724, column: 17, scope: !10877)
!10902 = !DILocation(line: 1724, column: 15, scope: !10877)
!10903 = !DILocation(line: 1724, column: 2, scope: !10877)
!10904 = !DILocation(line: 1724, column: 7, scope: !10877)
!10905 = !DILocation(line: 1725, column: 9, scope: !10877)
!10906 = !DILocation(line: 1725, column: 17, scope: !10877)
!10907 = !DILocation(line: 1725, column: 15, scope: !10877)
!10908 = !DILocation(line: 1725, column: 2, scope: !10877)
!10909 = !DILocation(line: 1725, column: 7, scope: !10877)
!10910 = !DILocation(line: 1726, column: 9, scope: !10877)
!10911 = !DILocation(line: 1726, column: 17, scope: !10877)
!10912 = !DILocation(line: 1726, column: 15, scope: !10877)
!10913 = !DILocation(line: 1726, column: 2, scope: !10877)
!10914 = !DILocation(line: 1726, column: 7, scope: !10877)
!10915 = !DILocation(line: 1727, column: 9, scope: !10877)
!10916 = !DILocation(line: 1727, column: 17, scope: !10877)
!10917 = !DILocation(line: 1727, column: 15, scope: !10877)
!10918 = !DILocation(line: 1727, column: 2, scope: !10877)
!10919 = !DILocation(line: 1727, column: 7, scope: !10877)
!10920 = !DILocation(line: 1729, column: 8, scope: !10877)
!10921 = !DILocation(line: 1729, column: 13, scope: !10877)
!10922 = !DILocation(line: 1729, column: 12, scope: !10877)
!10923 = !DILocation(line: 1729, column: 20, scope: !10877)
!10924 = !DILocation(line: 1729, column: 25, scope: !10877)
!10925 = !DILocation(line: 1729, column: 24, scope: !10877)
!10926 = !DILocation(line: 1729, column: 18, scope: !10877)
!10927 = !DILocation(line: 1729, column: 6, scope: !10877)
!10928 = !DILocation(line: 1730, column: 6, scope: !10929)
!10929 = distinct !DILexicalBlock(scope: !10877, file: !3, line: 1730, column: 6)
!10930 = !DILocation(line: 1730, column: 9, scope: !10929)
!10931 = !DILocation(line: 1730, column: 6, scope: !10877)
!10932 = !DILocation(line: 1731, column: 3, scope: !10929)
!10933 = !DILocation(line: 1733, column: 9, scope: !10877)
!10934 = !DILocation(line: 1733, column: 16, scope: !10877)
!10935 = !DILocation(line: 1733, column: 14, scope: !10877)
!10936 = !DILocation(line: 1733, column: 2, scope: !10877)
!10937 = !DILocation(line: 1733, column: 7, scope: !10877)
!10938 = !DILocation(line: 1734, column: 9, scope: !10877)
!10939 = !DILocation(line: 1734, column: 16, scope: !10877)
!10940 = !DILocation(line: 1734, column: 14, scope: !10877)
!10941 = !DILocation(line: 1734, column: 2, scope: !10877)
!10942 = !DILocation(line: 1734, column: 7, scope: !10877)
!10943 = !DILocation(line: 1736, column: 13, scope: !10877)
!10944 = !DILocation(line: 1736, column: 12, scope: !10877)
!10945 = !DILocation(line: 1736, column: 6, scope: !10877)
!10946 = !DILocation(line: 1738, column: 7, scope: !10877)
!10947 = !DILocation(line: 1738, column: 12, scope: !10877)
!10948 = !DILocation(line: 1738, column: 11, scope: !10877)
!10949 = !DILocation(line: 1738, column: 19, scope: !10877)
!10950 = !DILocation(line: 1738, column: 24, scope: !10877)
!10951 = !DILocation(line: 1738, column: 23, scope: !10877)
!10952 = !DILocation(line: 1738, column: 17, scope: !10877)
!10953 = !DILocation(line: 1738, column: 30, scope: !10877)
!10954 = !DILocation(line: 1738, column: 29, scope: !10877)
!10955 = !DILocation(line: 1738, column: 4, scope: !10877)
!10956 = !DILocation(line: 1739, column: 6, scope: !10957)
!10957 = distinct !DILexicalBlock(scope: !10877, file: !3, line: 1739, column: 6)
!10958 = !DILocation(line: 1739, column: 8, scope: !10957)
!10959 = !DILocation(line: 1739, column: 6, scope: !10877)
!10960 = !DILocation(line: 1740, column: 8, scope: !10961)
!10961 = distinct !DILexicalBlock(scope: !10957, file: !3, line: 1739, column: 17)
!10962 = !DILocation(line: 1740, column: 13, scope: !10961)
!10963 = !DILocation(line: 1740, column: 12, scope: !10961)
!10964 = !DILocation(line: 1740, column: 20, scope: !10961)
!10965 = !DILocation(line: 1740, column: 25, scope: !10961)
!10966 = !DILocation(line: 1740, column: 24, scope: !10961)
!10967 = !DILocation(line: 1740, column: 18, scope: !10961)
!10968 = !DILocation(line: 1740, column: 31, scope: !10961)
!10969 = !DILocation(line: 1740, column: 30, scope: !10961)
!10970 = !DILocation(line: 1740, column: 5, scope: !10961)
!10971 = !DILocation(line: 1741, column: 7, scope: !10972)
!10972 = distinct !DILexicalBlock(scope: !10961, file: !3, line: 1741, column: 7)
!10973 = !DILocation(line: 1741, column: 9, scope: !10972)
!10974 = !DILocation(line: 1741, column: 7, scope: !10961)
!10975 = !DILocation(line: 1742, column: 9, scope: !10976)
!10976 = distinct !DILexicalBlock(scope: !10977, file: !3, line: 1742, column: 9)
!10977 = distinct !DILexicalBlock(scope: !10972, file: !3, line: 1741, column: 18)
!10978 = !DILocation(line: 1742, column: 13, scope: !10976)
!10979 = !DILocation(line: 1742, column: 11, scope: !10976)
!10980 = !DILocation(line: 1742, column: 15, scope: !10976)
!10981 = !DILocation(line: 1742, column: 9, scope: !10977)
!10982 = !DILocalVariable(name: "z", scope: !10983, file: !3, line: 1744, type: !7)
!10983 = distinct !DILexicalBlock(scope: !10976, file: !3, line: 1742, column: 24)
!10984 = !DILocation(line: 1744, column: 11, scope: !10983)
!10985 = !DILocation(line: 1744, column: 21, scope: !10983)
!10986 = !DILocation(line: 1744, column: 20, scope: !10983)
!10987 = !DILocation(line: 1744, column: 23, scope: !10983)
!10988 = !DILocation(line: 1744, column: 22, scope: !10983)
!10989 = !DILocation(line: 1744, column: 26, scope: !10983)
!10990 = !DILocation(line: 1744, column: 25, scope: !10983)
!10991 = !DILocation(line: 1744, column: 34, scope: !10983)
!10992 = !DILocation(line: 1744, column: 36, scope: !10983)
!10993 = !DILocation(line: 1744, column: 35, scope: !10983)
!10994 = !DILocation(line: 1744, column: 32, scope: !10983)
!10995 = !DILocation(line: 1744, column: 44, scope: !10983)
!10996 = !DILocation(line: 1744, column: 46, scope: !10983)
!10997 = !DILocation(line: 1744, column: 45, scope: !10983)
!10998 = !DILocation(line: 1744, column: 42, scope: !10983)
!10999 = !DILocation(line: 1745, column: 9, scope: !11000)
!11000 = distinct !DILexicalBlock(scope: !10983, file: !3, line: 1745, column: 9)
!11001 = !DILocation(line: 1745, column: 14, scope: !11000)
!11002 = !DILocation(line: 1745, column: 11, scope: !11000)
!11003 = !DILocation(line: 1745, column: 9, scope: !10983)
!11004 = !DILocation(line: 1746, column: 6, scope: !11000)
!11005 = !DILocation(line: 1747, column: 4, scope: !10983)
!11006 = !DILocation(line: 1748, column: 3, scope: !10977)
!11007 = !DILocation(line: 1749, column: 2, scope: !10961)
!11008 = !DILocation(line: 1751, column: 2, scope: !10877)
!11009 = !DILocation(line: 1752, column: 1, scope: !10877)
!11010 = distinct !DISubprogram(name: "len_v2", scope: !4392, file: !4392, line: 691, type: !11011, scopeLine: 692, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!11011 = !DISubroutineType(types: !11012)
!11012 = !{!7, !3742}
!11013 = !DILocalVariable(name: "v", arg: 1, scope: !11010, file: !4392, line: 691, type: !3742)
!11014 = !DILocation(line: 691, column: 34, scope: !11010)
!11015 = !DILocation(line: 693, column: 15, scope: !11010)
!11016 = !DILocation(line: 693, column: 22, scope: !11010)
!11017 = !DILocation(line: 693, column: 20, scope: !11010)
!11018 = !DILocation(line: 693, column: 29, scope: !11010)
!11019 = !DILocation(line: 693, column: 36, scope: !11010)
!11020 = !DILocation(line: 693, column: 34, scope: !11010)
!11021 = !DILocation(line: 693, column: 27, scope: !11010)
!11022 = !DILocation(line: 693, column: 9, scope: !11010)
!11023 = !DILocation(line: 693, column: 2, scope: !11010)
!11024 = distinct !DISubprogram(name: "bspface_init_strand", scope: !3, file: !3, line: 1654, type: !11025, scopeLine: 1655, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!11025 = !DISubroutineType(types: !11026)
!11026 = !{null, !10506}
!11027 = !DILocalVariable(name: "face", arg: 1, scope: !11024, file: !3, line: 1654, type: !10506)
!11028 = !DILocation(line: 1654, column: 42, scope: !11024)
!11029 = !DILocation(line: 1657, column: 32, scope: !11024)
!11030 = !DILocation(line: 1657, column: 38, scope: !11024)
!11031 = !DILocation(line: 1657, column: 42, scope: !11024)
!11032 = !DILocation(line: 1657, column: 48, scope: !11024)
!11033 = !DILocation(line: 1657, column: 23, scope: !11024)
!11034 = !DILocation(line: 1657, column: 21, scope: !11024)
!11035 = !DILocation(line: 1657, column: 2, scope: !11024)
!11036 = !DILocation(line: 1657, column: 8, scope: !11024)
!11037 = !DILocation(line: 1657, column: 15, scope: !11024)
!11038 = !DILocation(line: 1659, column: 14, scope: !11024)
!11039 = !DILocation(line: 1659, column: 20, scope: !11024)
!11040 = !DILocation(line: 1659, column: 26, scope: !11024)
!11041 = !DILocation(line: 1659, column: 32, scope: !11024)
!11042 = !DILocation(line: 1659, column: 36, scope: !11024)
!11043 = !DILocation(line: 1659, column: 42, scope: !11024)
!11044 = !DILocation(line: 1659, column: 2, scope: !11024)
!11045 = !DILocation(line: 1660, column: 6, scope: !11046)
!11046 = distinct !DILexicalBlock(scope: !11024, file: !3, line: 1660, column: 6)
!11047 = !DILocation(line: 1660, column: 12, scope: !11046)
!11048 = !DILocation(line: 1660, column: 6, scope: !11024)
!11049 = !DILocation(line: 1661, column: 15, scope: !11046)
!11050 = !DILocation(line: 1661, column: 21, scope: !11046)
!11051 = !DILocation(line: 1661, column: 27, scope: !11046)
!11052 = !DILocation(line: 1661, column: 33, scope: !11046)
!11053 = !DILocation(line: 1661, column: 37, scope: !11046)
!11054 = !DILocation(line: 1661, column: 43, scope: !11046)
!11055 = !DILocation(line: 1661, column: 3, scope: !11046)
!11056 = !DILocation(line: 1663, column: 14, scope: !11046)
!11057 = !DILocation(line: 1663, column: 20, scope: !11046)
!11058 = !DILocation(line: 1663, column: 26, scope: !11046)
!11059 = !DILocation(line: 1663, column: 32, scope: !11046)
!11060 = !DILocation(line: 1663, column: 3, scope: !11046)
!11061 = !DILocation(line: 1665, column: 15, scope: !11024)
!11062 = !DILocation(line: 1665, column: 21, scope: !11024)
!11063 = !DILocation(line: 1665, column: 29, scope: !11024)
!11064 = !DILocation(line: 1665, column: 35, scope: !11024)
!11065 = !DILocation(line: 1665, column: 28, scope: !11024)
!11066 = !DILocation(line: 1665, column: 2, scope: !11024)
!11067 = !DILocation(line: 1665, column: 8, scope: !11024)
!11068 = !DILocation(line: 1665, column: 13, scope: !11024)
!11069 = !DILocation(line: 1666, column: 15, scope: !11024)
!11070 = !DILocation(line: 1666, column: 21, scope: !11024)
!11071 = !DILocation(line: 1666, column: 29, scope: !11024)
!11072 = !DILocation(line: 1666, column: 35, scope: !11024)
!11073 = !DILocation(line: 1666, column: 28, scope: !11024)
!11074 = !DILocation(line: 1666, column: 2, scope: !11024)
!11075 = !DILocation(line: 1666, column: 8, scope: !11024)
!11076 = !DILocation(line: 1666, column: 13, scope: !11024)
!11077 = !DILocation(line: 1667, column: 15, scope: !11024)
!11078 = !DILocation(line: 1667, column: 21, scope: !11024)
!11079 = !DILocation(line: 1667, column: 29, scope: !11024)
!11080 = !DILocation(line: 1667, column: 35, scope: !11024)
!11081 = !DILocation(line: 1667, column: 28, scope: !11024)
!11082 = !DILocation(line: 1667, column: 2, scope: !11024)
!11083 = !DILocation(line: 1667, column: 8, scope: !11024)
!11084 = !DILocation(line: 1667, column: 13, scope: !11024)
!11085 = !DILocation(line: 1669, column: 13, scope: !11024)
!11086 = !DILocation(line: 1669, column: 19, scope: !11024)
!11087 = !DILocation(line: 1669, column: 25, scope: !11024)
!11088 = !DILocation(line: 1669, column: 31, scope: !11024)
!11089 = !DILocation(line: 1669, column: 24, scope: !11024)
!11090 = !DILocation(line: 1669, column: 38, scope: !11024)
!11091 = !DILocation(line: 1669, column: 44, scope: !11024)
!11092 = !DILocation(line: 1669, column: 50, scope: !11024)
!11093 = !DILocation(line: 1669, column: 56, scope: !11024)
!11094 = !DILocation(line: 1669, column: 49, scope: !11024)
!11095 = !DILocation(line: 1669, column: 36, scope: !11024)
!11096 = !DILocation(line: 1669, column: 2, scope: !11024)
!11097 = !DILocation(line: 1669, column: 8, scope: !11024)
!11098 = !DILocation(line: 1669, column: 11, scope: !11024)
!11099 = !DILocation(line: 1671, column: 6, scope: !11100)
!11100 = distinct !DILexicalBlock(scope: !11024, file: !3, line: 1671, column: 6)
!11101 = !DILocation(line: 1671, column: 12, scope: !11100)
!11102 = !DILocation(line: 1671, column: 16, scope: !11100)
!11103 = !DILocation(line: 1671, column: 6, scope: !11024)
!11104 = !DILocation(line: 1672, column: 23, scope: !11105)
!11105 = distinct !DILexicalBlock(scope: !11100, file: !3, line: 1671, column: 25)
!11106 = !DILocation(line: 1672, column: 29, scope: !11105)
!11107 = !DILocation(line: 1672, column: 45, scope: !11105)
!11108 = !DILocation(line: 1672, column: 51, scope: !11105)
!11109 = !DILocation(line: 1672, column: 39, scope: !11105)
!11110 = !DILocation(line: 1672, column: 37, scope: !11105)
!11111 = !DILocation(line: 1672, column: 3, scope: !11105)
!11112 = !DILocation(line: 1672, column: 9, scope: !11105)
!11113 = !DILocation(line: 1672, column: 21, scope: !11105)
!11114 = !DILocation(line: 1673, column: 22, scope: !11105)
!11115 = !DILocation(line: 1673, column: 28, scope: !11105)
!11116 = !DILocation(line: 1673, column: 20, scope: !11105)
!11117 = !DILocation(line: 1673, column: 3, scope: !11105)
!11118 = !DILocation(line: 1673, column: 9, scope: !11105)
!11119 = !DILocation(line: 1673, column: 13, scope: !11105)
!11120 = !DILocation(line: 1674, column: 2, scope: !11105)
!11121 = !DILocation(line: 1675, column: 1, scope: !11024)
!11122 = distinct !DISubprogram(name: "len_v2v2", scope: !4392, file: !4392, line: 696, type: !6758, scopeLine: 697, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!11123 = !DILocalVariable(name: "v1", arg: 1, scope: !11122, file: !4392, line: 696, type: !3742)
!11124 = !DILocation(line: 696, column: 36, scope: !11122)
!11125 = !DILocalVariable(name: "v2", arg: 2, scope: !11122, file: !4392, line: 696, type: !3742)
!11126 = !DILocation(line: 696, column: 55, scope: !11122)
!11127 = !DILocalVariable(name: "x", scope: !11122, file: !4392, line: 698, type: !7)
!11128 = !DILocation(line: 698, column: 8, scope: !11122)
!11129 = !DILocalVariable(name: "y", scope: !11122, file: !4392, line: 698, type: !7)
!11130 = !DILocation(line: 698, column: 11, scope: !11122)
!11131 = !DILocation(line: 700, column: 6, scope: !11122)
!11132 = !DILocation(line: 700, column: 14, scope: !11122)
!11133 = !DILocation(line: 700, column: 12, scope: !11122)
!11134 = !DILocation(line: 700, column: 4, scope: !11122)
!11135 = !DILocation(line: 701, column: 6, scope: !11122)
!11136 = !DILocation(line: 701, column: 14, scope: !11122)
!11137 = !DILocation(line: 701, column: 12, scope: !11122)
!11138 = !DILocation(line: 701, column: 4, scope: !11122)
!11139 = !DILocation(line: 702, column: 15, scope: !11122)
!11140 = !DILocation(line: 702, column: 19, scope: !11122)
!11141 = !DILocation(line: 702, column: 17, scope: !11122)
!11142 = !DILocation(line: 702, column: 23, scope: !11122)
!11143 = !DILocation(line: 702, column: 27, scope: !11122)
!11144 = !DILocation(line: 702, column: 25, scope: !11122)
!11145 = !DILocation(line: 702, column: 21, scope: !11122)
!11146 = !DILocation(line: 702, column: 9, scope: !11122)
!11147 = !DILocation(line: 702, column: 2, scope: !11122)
!11148 = distinct !DISubprogram(name: "isb_add_samples", scope: !3, file: !3, line: 2167, type: !11149, scopeLine: 2168, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!11149 = !DISubroutineType(types: !11150)
!11150 = !{!8, !5426, !2224, !5556, !2247}
!11151 = !DILocalVariable(name: "pa", arg: 1, scope: !11148, file: !3, line: 2167, type: !5426)
!11152 = !DILocation(line: 2167, column: 40, scope: !11148)
!11153 = !DILocalVariable(name: "root", arg: 2, scope: !11148, file: !3, line: 2167, type: !2224)
!11154 = !DILocation(line: 2167, column: 55, scope: !11148)
!11155 = !DILocalVariable(name: "memarena", arg: 3, scope: !11148, file: !3, line: 2167, type: !5556)
!11156 = !DILocation(line: 2167, column: 71, scope: !11148)
!11157 = !DILocalVariable(name: "samplebuf", arg: 4, scope: !11148, file: !3, line: 2167, type: !2247)
!11158 = !DILocation(line: 2167, column: 93, scope: !11148)
!11159 = !DILocalVariable(name: "xi", scope: !11148, file: !3, line: 2169, type: !8)
!11160 = !DILocation(line: 2169, column: 6, scope: !11148)
!11161 = !DILocalVariable(name: "yi", scope: !11148, file: !3, line: 2169, type: !8)
!11162 = !DILocation(line: 2169, column: 10, scope: !11148)
!11163 = !DILocalVariable(name: "xcos", scope: !11148, file: !3, line: 2169, type: !26)
!11164 = !DILocation(line: 2169, column: 15, scope: !11148)
!11165 = !DILocalVariable(name: "ycos", scope: !11148, file: !3, line: 2169, type: !26)
!11166 = !DILocation(line: 2169, column: 22, scope: !11148)
!11167 = !DILocalVariable(name: "sample", scope: !11148, file: !3, line: 2170, type: !8)
!11168 = !DILocation(line: 2170, column: 6, scope: !11148)
!11169 = !DILocalVariable(name: "bsp_err", scope: !11148, file: !3, line: 2170, type: !8)
!11170 = !DILocation(line: 2170, column: 14, scope: !11148)
!11171 = !DILocation(line: 2173, column: 8, scope: !11148)
!11172 = !DILocation(line: 2173, column: 20, scope: !11148)
!11173 = !DILocation(line: 2173, column: 24, scope: !11148)
!11174 = !DILocation(line: 2173, column: 29, scope: !11148)
!11175 = !DILocation(line: 2173, column: 6, scope: !11148)
!11176 = !DILocation(line: 2174, column: 8, scope: !11148)
!11177 = !DILocation(line: 2174, column: 20, scope: !11148)
!11178 = !DILocation(line: 2174, column: 24, scope: !11148)
!11179 = !DILocation(line: 2174, column: 29, scope: !11148)
!11180 = !DILocation(line: 2174, column: 6, scope: !11148)
!11181 = !DILocation(line: 2175, column: 9, scope: !11182)
!11182 = distinct !DILexicalBlock(scope: !11148, file: !3, line: 2175, column: 2)
!11183 = !DILocation(line: 2175, column: 7, scope: !11182)
!11184 = !DILocation(line: 2175, column: 13, scope: !11185)
!11185 = distinct !DILexicalBlock(scope: !11182, file: !3, line: 2175, column: 2)
!11186 = !DILocation(line: 2175, column: 16, scope: !11185)
!11187 = !DILocation(line: 2175, column: 20, scope: !11185)
!11188 = !DILocation(line: 2175, column: 15, scope: !11185)
!11189 = !DILocation(line: 2175, column: 2, scope: !11182)
!11190 = !DILocation(line: 2176, column: 13, scope: !11185)
!11191 = !DILocation(line: 2176, column: 3, scope: !11185)
!11192 = !DILocation(line: 2176, column: 8, scope: !11185)
!11193 = !DILocation(line: 2176, column: 11, scope: !11185)
!11194 = !DILocation(line: 2175, column: 29, scope: !11185)
!11195 = !DILocation(line: 2175, column: 2, scope: !11185)
!11196 = distinct !{!11196, !11189, !11197}
!11197 = !DILocation(line: 2176, column: 13, scope: !11182)
!11198 = !DILocation(line: 2177, column: 9, scope: !11199)
!11199 = distinct !DILexicalBlock(scope: !11148, file: !3, line: 2177, column: 2)
!11200 = !DILocation(line: 2177, column: 7, scope: !11199)
!11201 = !DILocation(line: 2177, column: 13, scope: !11202)
!11202 = distinct !DILexicalBlock(scope: !11199, file: !3, line: 2177, column: 2)
!11203 = !DILocation(line: 2177, column: 16, scope: !11202)
!11204 = !DILocation(line: 2177, column: 20, scope: !11202)
!11205 = !DILocation(line: 2177, column: 15, scope: !11202)
!11206 = !DILocation(line: 2177, column: 2, scope: !11199)
!11207 = !DILocation(line: 2178, column: 13, scope: !11202)
!11208 = !DILocation(line: 2178, column: 3, scope: !11202)
!11209 = !DILocation(line: 2178, column: 8, scope: !11202)
!11210 = !DILocation(line: 2178, column: 11, scope: !11202)
!11211 = !DILocation(line: 2177, column: 29, scope: !11202)
!11212 = !DILocation(line: 2177, column: 2, scope: !11202)
!11213 = distinct !{!11213, !11206, !11214}
!11214 = !DILocation(line: 2178, column: 13, scope: !11199)
!11215 = !DILocation(line: 2179, column: 22, scope: !11148)
!11216 = !DILocation(line: 2179, column: 41, scope: !11148)
!11217 = !DILocation(line: 2179, column: 45, scope: !11148)
!11218 = !DILocation(line: 2179, column: 2, scope: !11148)
!11219 = !DILocation(line: 2180, column: 22, scope: !11148)
!11220 = !DILocation(line: 2180, column: 41, scope: !11148)
!11221 = !DILocation(line: 2180, column: 45, scope: !11148)
!11222 = !DILocation(line: 2180, column: 2, scope: !11148)
!11223 = !DILocation(line: 2182, column: 13, scope: !11224)
!11224 = distinct !DILexicalBlock(scope: !11148, file: !3, line: 2182, column: 2)
!11225 = !DILocation(line: 2182, column: 7, scope: !11224)
!11226 = !DILocation(line: 2182, column: 17, scope: !11227)
!11227 = distinct !DILexicalBlock(scope: !11224, file: !3, line: 2182, column: 2)
!11228 = !DILocation(line: 2182, column: 27, scope: !11227)
!11229 = !DILocation(line: 2182, column: 25, scope: !11227)
!11230 = !DILocation(line: 2182, column: 33, scope: !11227)
!11231 = !DILocation(line: 2182, column: 31, scope: !11227)
!11232 = !DILocation(line: 2182, column: 23, scope: !11227)
!11233 = !DILocation(line: 2182, column: 2, scope: !11224)
!11234 = !DILocalVariable(name: "samp", scope: !11235, file: !3, line: 2183, type: !2214)
!11235 = distinct !DILexicalBlock(scope: !11227, file: !3, line: 2182, column: 51)
!11236 = !DILocation(line: 2183, column: 14, scope: !11235)
!11237 = !DILocation(line: 2183, column: 20, scope: !11235)
!11238 = !DILocation(line: 2183, column: 30, scope: !11235)
!11239 = !DILocalVariable(name: "samp1", scope: !11235, file: !3, line: 2183, type: !2214)
!11240 = !DILocation(line: 2183, column: 40, scope: !11235)
!11241 = !DILocation(line: 2185, column: 10, scope: !11242)
!11242 = distinct !DILexicalBlock(scope: !11235, file: !3, line: 2185, column: 3)
!11243 = !DILocation(line: 2185, column: 8, scope: !11242)
!11244 = !DILocation(line: 2185, column: 14, scope: !11245)
!11245 = distinct !DILexicalBlock(scope: !11242, file: !3, line: 2185, column: 3)
!11246 = !DILocation(line: 2185, column: 17, scope: !11245)
!11247 = !DILocation(line: 2185, column: 21, scope: !11245)
!11248 = !DILocation(line: 2185, column: 16, scope: !11245)
!11249 = !DILocation(line: 2185, column: 3, scope: !11242)
!11250 = !DILocalVariable(name: "y", scope: !11251, file: !3, line: 2186, type: !8)
!11251 = distinct !DILexicalBlock(scope: !11245, file: !3, line: 2185, column: 34)
!11252 = !DILocation(line: 2186, column: 8, scope: !11251)
!11253 = !DILocation(line: 2186, column: 11, scope: !11251)
!11254 = !DILocation(line: 2186, column: 16, scope: !11251)
!11255 = !DILocation(line: 2187, column: 11, scope: !11256)
!11256 = distinct !DILexicalBlock(scope: !11251, file: !3, line: 2187, column: 4)
!11257 = !DILocation(line: 2187, column: 9, scope: !11256)
!11258 = !DILocation(line: 2187, column: 15, scope: !11259)
!11259 = distinct !DILexicalBlock(scope: !11256, file: !3, line: 2187, column: 4)
!11260 = !DILocation(line: 2187, column: 18, scope: !11259)
!11261 = !DILocation(line: 2187, column: 22, scope: !11259)
!11262 = !DILocation(line: 2187, column: 17, scope: !11259)
!11263 = !DILocation(line: 2187, column: 4, scope: !11256)
!11264 = !DILocalVariable(name: "x", scope: !11265, file: !3, line: 2188, type: !8)
!11265 = distinct !DILexicalBlock(scope: !11259, file: !3, line: 2187, column: 35)
!11266 = !DILocation(line: 2188, column: 9, scope: !11265)
!11267 = !DILocation(line: 2188, column: 12, scope: !11265)
!11268 = !DILocation(line: 2188, column: 17, scope: !11265)
!11269 = !DILocation(line: 2189, column: 12, scope: !11265)
!11270 = !DILocation(line: 2189, column: 19, scope: !11265)
!11271 = !DILocation(line: 2189, column: 21, scope: !11265)
!11272 = !DILocation(line: 2189, column: 25, scope: !11265)
!11273 = !DILocation(line: 2189, column: 20, scope: !11265)
!11274 = !DILocation(line: 2189, column: 17, scope: !11265)
!11275 = !DILocation(line: 2189, column: 33, scope: !11265)
!11276 = !DILocation(line: 2189, column: 31, scope: !11265)
!11277 = !DILocation(line: 2189, column: 10, scope: !11265)
!11278 = !DILocation(line: 2190, column: 9, scope: !11279)
!11279 = distinct !DILexicalBlock(scope: !11265, file: !3, line: 2190, column: 9)
!11280 = !DILocation(line: 2190, column: 16, scope: !11279)
!11281 = !DILocation(line: 2190, column: 9, scope: !11265)
!11282 = !DILocation(line: 2191, column: 32, scope: !11279)
!11283 = !DILocation(line: 2191, column: 38, scope: !11279)
!11284 = !DILocation(line: 2191, column: 48, scope: !11279)
!11285 = !DILocation(line: 2191, column: 17, scope: !11279)
!11286 = !DILocation(line: 2191, column: 14, scope: !11279)
!11287 = !DILocation(line: 2191, column: 6, scope: !11279)
!11288 = !DILocation(line: 2192, column: 4, scope: !11265)
!11289 = !DILocation(line: 2187, column: 31, scope: !11259)
!11290 = !DILocation(line: 2187, column: 4, scope: !11259)
!11291 = distinct !{!11291, !11263, !11292}
!11292 = !DILocation(line: 2192, column: 4, scope: !11256)
!11293 = !DILocation(line: 2193, column: 8, scope: !11294)
!11294 = distinct !DILexicalBlock(scope: !11251, file: !3, line: 2193, column: 8)
!11295 = !DILocation(line: 2193, column: 8, scope: !11251)
!11296 = !DILocation(line: 2193, column: 17, scope: !11294)
!11297 = !DILocation(line: 2194, column: 3, scope: !11251)
!11298 = !DILocation(line: 2185, column: 30, scope: !11245)
!11299 = !DILocation(line: 2185, column: 3, scope: !11245)
!11300 = distinct !{!11300, !11249, !11301}
!11301 = !DILocation(line: 2194, column: 3, scope: !11242)
!11302 = !DILocation(line: 2195, column: 2, scope: !11235)
!11303 = !DILocation(line: 2182, column: 47, scope: !11227)
!11304 = !DILocation(line: 2182, column: 2, scope: !11227)
!11305 = distinct !{!11305, !11233, !11306}
!11306 = !DILocation(line: 2195, column: 2, scope: !11224)
!11307 = !DILocation(line: 2197, column: 2, scope: !11148)
!11308 = !DILocation(line: 2197, column: 12, scope: !11148)
!11309 = !DILocation(line: 2198, column: 2, scope: !11148)
!11310 = !DILocation(line: 2198, column: 12, scope: !11148)
!11311 = !DILocation(line: 2200, column: 9, scope: !11148)
!11312 = !DILocation(line: 2200, column: 2, scope: !11148)
