; ModuleID = 'pp_ctl.c'
source_filename = "pp_ctl.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.sv = type { i8*, i32, i32, %union.anon }
%union.anon = type { i8* }
%struct.op = type { %struct.op*, %struct.op*, {}*, i64, i16, i8, i8 }
%struct.stackinfo = type { %struct.av*, %struct.context*, %struct.stackinfo*, %struct.stackinfo*, i32, i32, i32, i32 }
%struct.av = type { %struct.xpvav*, i32, i32, %union.anon.0 }
%struct.xpvav = type { %struct.hv*, %union._xmgu, i64, i64, %struct.sv** }
%struct.hv = type { %struct.xpvhv*, i32, i32, %union.anon.5 }
%struct.xpvhv = type { %struct.hv*, %union._xmgu, i64, i64 }
%union.anon.5 = type { i8* }
%union._xmgu = type { %struct.magic* }
%struct.magic = type { %struct.magic*, %struct.mgvtbl*, i16, i8, i8, i64, %struct.sv*, i8* }
%struct.mgvtbl = type { i32 (%struct.sv*, %struct.magic*)*, i32 (%struct.sv*, %struct.magic*)*, i32 (%struct.sv*, %struct.magic*)*, i32 (%struct.sv*, %struct.magic*)*, i32 (%struct.sv*, %struct.magic*)*, i32 (%struct.sv*, %struct.magic*, %struct.sv*, i8*, i32)*, i32 (%struct.magic*, %struct.clone_params*)*, i32 (%struct.sv*, %struct.magic*)* }
%struct.clone_params = type { %struct.av*, i64, %struct.interpreter*, %struct.interpreter*, %struct.av* }
%struct.interpreter = type { i8 }
%union.anon.0 = type { i8* }
%struct.context = type { %union.anon.16 }
%union.anon.16 = type { %struct.subst }
%struct.subst = type { i8, i8, i16, i32, i64, i64, i8*, %struct.sv*, %struct.sv*, i8*, i8*, i8*, i8*, %struct.p5rx* }
%struct.p5rx = type { %struct.regexp*, i32, i32, %union.anon.7 }
%struct.regexp = type { %struct.hv*, %union._xmgu, i64, %union.anon.6, %struct.regexp_engine*, %struct.p5rx*, %struct.hv*, i32, i64, i64, i64, %struct.reg_substr_data*, i32, i32, i8*, i32, i32, %struct.regexp_paren_pair*, i8*, %struct.sv*, i64, i64, i64, i64, i16, %struct.cv* }
%union.anon.6 = type { i64 }
%struct.regexp_engine = type { %struct.p5rx* (%struct.sv*, i32)*, i32 (%struct.p5rx*, i8*, i8*, i8*, i64, %struct.sv*, i8*, i32)*, i8* (%struct.p5rx*, %struct.sv*, i8*, i8*, i8*, i32, %struct.re_scream_pos_data_s*)*, %struct.sv* (%struct.p5rx*)*, void (%struct.p5rx*)*, void (%struct.p5rx*, i32, %struct.sv*)*, void (%struct.p5rx*, i32, %struct.sv*)*, i32 (%struct.p5rx*, %struct.sv*, i32)*, %struct.sv* (%struct.p5rx*, %struct.sv*, %struct.sv*, i32)*, %struct.sv* (%struct.p5rx*, %struct.sv*, i32)*, %struct.sv* (%struct.p5rx*)*, %struct.p5rx* (%struct.sv**, i32, %struct.op*, %struct.regexp_engine*, %struct.p5rx*, i8*, i32, i32)* }
%struct.re_scream_pos_data_s = type { i8**, i64* }
%struct.reg_substr_data = type { i8, [3 x %struct.reg_substr_datum] }
%struct.reg_substr_datum = type { i64, i64, %struct.sv*, %struct.sv*, i64 }
%struct.regexp_paren_pair = type { i64, i64, i64 }
%struct.cv = type { %struct.xpvcv*, i32, i32, %union.anon.3 }
%struct.xpvcv = type { %struct.hv*, %union._xmgu, i64, %union.anon.9, %struct.hv*, %union.anon.10, %union.anon.11, %union.anon.12, i8*, %union.anon.13, %struct.cv*, i32, i32, i32 }
%union.anon.9 = type { i64 }
%union.anon.10 = type { %struct.op* }
%union.anon.11 = type { %struct.op* }
%union.anon.12 = type { %struct.gv* }
%struct.gv = type { %struct.xpvgv*, i32, i32, %union.anon.4 }
%struct.xpvgv = type { %struct.hv*, %union._xmgu, i64, %union.anon.8, %union._xivu, %union._xnvu }
%union.anon.8 = type { i64 }
%union._xivu = type { i64 }
%union._xnvu = type { double }
%union.anon.4 = type { i8* }
%union.anon.13 = type { %struct.padlist* }
%struct.padlist = type { i64, %struct.av**, i32, i32 }
%union.anon.3 = type { i8* }
%union.anon.7 = type { i8* }
%struct.pmop = type { %struct.op*, %struct.op*, %struct.op* ()*, i64, i16, i8, i8, %struct.op*, %struct.op*, %struct.p5rx*, i32, %union.anon.18, %union.anon.19, %struct.op* }
%union.anon.18 = type { %struct.op* }
%union.anon.19 = type { %struct.op* }
%struct.cop = type { %struct.op*, %struct.op*, %struct.op* ()*, i64, i16, i8, i8, i32, %struct.hv*, %struct.gv*, i32, i32, i64*, %struct.refcounted_he* }
%struct.refcounted_he = type { %struct.refcounted_he*, %struct.hek*, %union.anon.17, i32, [1 x i8] }
%struct.hek = type { i32, i32, [1 x i8] }
%union.anon.17 = type { i64 }
%struct.yy_parser = type { %struct.yy_parser*, %union.YYSTYPE, i32, i32, i32, i32, %struct.yy_stack_frame*, %struct.yy_stack_frame*, i32, i32, i8*, i8*, i8, i8, i8, i8, i32, %struct.op*, %struct.op*, %struct.sv*, i16, i16, i32, %struct.sv*, i32, i32, i8, i8, i8, i8, i32, %struct._sublex_info, %struct.yy_lexshared*, %struct.sv*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32, i16, i8, i8, %struct.hv*, %struct._PerlIO**, %struct.av*, i8, [5 x %union.YYSTYPE], [5 x i32], i32, %struct.cop*, [256 x i8], i32, i32, i8, i8, i8 }
%union.YYSTYPE = type { i8* }
%struct.yy_stack_frame = type { %union.YYSTYPE, i16, i32, %struct.cv* }
%struct._sublex_info = type { i8, i16, %struct.op*, %struct.sv* }
%struct.yy_lexshared = type { %struct.yy_lexshared*, %struct.sv*, i8*, i8*, %struct.sv* }
%struct._PerlIO = type opaque
%struct.jmpenv = type { [1 x %struct.__jmp_buf_tag], %struct.jmpenv*, i32, i8 }
%struct.__jmp_buf_tag = type { [8 x i64], i32, %struct.__sigset_t }
%struct.__sigset_t = type { [16 x i64] }
%union.any = type { i8* }
%struct.block = type { i8, i8, i16, i32, %struct.cop*, i32, i32, %struct.pmop*, %union.anon.20 }
%union.anon.20 = type { %struct.block_sub }
%struct.block_sub = type { %struct.op*, %struct.cv*, %struct.av*, %struct.av*, i32, %struct.av* }
%struct.gp = type { %struct.sv*, %struct.io*, %struct.cv*, i32, i32, %struct.hv*, %struct.av*, %struct.cv*, %struct.gv*, i32, %struct.hek* }
%struct.io = type { %struct.xpvio*, i32, i32, %union.anon.2 }
%struct.xpvio = type { %struct.hv*, %union._xmgu, i64, %union.anon.14, %union._xivu, %struct._PerlIO**, %union.anon.15, i64, i64, i64, i8*, %struct.gv*, i8*, %struct.gv*, i8*, %struct.gv*, i8, i8 }
%union.anon.14 = type { i64 }
%union.anon.15 = type { %struct.__dirstream* }
%struct.__dirstream = type opaque
%union.anon.2 = type { i8* }
%struct.logop = type { %struct.op*, %struct.op*, %struct.op* ()*, i64, i16, i8, i8, %struct.op*, %struct.op* }
%struct.xpv = type { %struct.hv*, %union._xmgu, i64, %union.anon.26 }
%union.anon.26 = type { i64 }
%struct.xpvmg = type { %struct.hv*, %union._xmgu, i64, %union.anon.30, %union._xivu, %union._xnvu }
%union.anon.30 = type { i64 }
%struct.xpvnv = type { %struct.hv*, %union._xmgu, i64, %union.anon.27, %union._xivu, %union._xnvu }
%union.anon.27 = type { i64 }
%struct.xpviv = type { %struct.hv*, %union._xmgu, i64, %union.anon.28, %union._xivu }
%union.anon.28 = type { i64 }
%struct.listop = type { %struct.op*, %struct.op*, %struct.op* ()*, i64, i16, i8, i8, %struct.op*, %struct.op* }
%struct.unop = type { %struct.op*, %struct.op*, %struct.op* ()*, i64, i16, i8, i8, %struct.op* }
%struct.xpvuv = type { %struct.hv*, %union._xmgu, i64, %union.anon.29, %union._xivu }
%union.anon.29 = type { i64 }
%struct.block_eval = type { %struct.op*, %struct.sv*, %struct.op*, %struct.sv*, %struct.cv*, %struct.jmpenv* }
%struct.block_loop = type { i32, %struct.loop*, %union.anon.21, %union.anon.22 }
%struct.loop = type { %struct.op*, %struct.op*, %struct.op* ()*, i64, i16, i8, i8, %struct.op*, %struct.op*, %struct.op*, %struct.op*, %struct.op* }
%union.anon.21 = type { %struct.sv** }
%union.anon.22 = type { %struct.anon.23 }
%struct.anon.23 = type { %struct.av*, i64 }
%struct.anon.25 = type { %struct.sv*, %struct.sv* }
%struct.block_format = type { %struct.op*, %struct.cv*, %struct.gv*, %struct.gv* }
%struct.he = type { %struct.he*, %struct.hek*, %union.anon.1 }
%union.anon.1 = type { %struct.sv* }
%struct.xpvhv_aux = type { %union._xhvnameu, %struct.av*, %struct.he*, i32, i32, %struct.mro_meta*, i32, i32, i32, i32 }
%union._xhvnameu = type { %struct.hek* }
%struct.mro_meta = type { %struct.hv*, %struct.sv*, %struct.hv*, i32, i32, %struct.mro_alg*, %struct.hv*, %struct.hv*, i32 }
%struct.mro_alg = type { %struct.av* (%struct.hv*, i32)*, i8*, i16, i16, i32 }
%struct.anon.24 = type { i64, i64 }
%struct.pvop = type { %struct.op*, %struct.op*, %struct.op* ()*, i64, i16, i8, i8, i8* }
%struct.stat = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }
%struct.timespec = type { i64, i64 }
%struct.block_hooks = type { i32, void (i32)*, void (%struct.op**)*, void (%struct.op**)*, void (%struct.op*)* }
%struct.svop = type { %struct.op*, %struct.op*, %struct.op* ()*, i64, i16, i8, i8, %struct.sv* }
%struct.block_givwhen = type { %struct.op* }
%union.XOPRETANY = type { i8* }

@PL_stack_sp = external dso_local global %struct.sv**, align 8
@PL_stack_max = external dso_local global %struct.sv**, align 8
@PL_op = external dso_local global %struct.op*, align 8
@PL_sv_undef = external dso_local global %struct.sv, align 8
@PL_curstackinfo = external dso_local global %struct.stackinfo*, align 8
@PL_sv_yes = external dso_local global %struct.sv, align 8
@PL_sv_no = external dso_local global %struct.sv, align 8
@PL_tainted = external dso_local global i8, align 1
@PL_stack_base = external dso_local global %struct.sv**, align 8
@PL_markstack_ptr = external dso_local global i32*, align 8
@PL_curpad = external dso_local global %struct.sv**, align 8
@PL_defgv = external dso_local global %struct.gv*, align 8
@PL_tainting = external dso_local global i8, align 1
@PL_curpm = external dso_local global %struct.pmop*, align 8
@PL_sig_pending = external dso_local global i32, align 4
@PL_signalhook = external dso_local global void ()*, align 8
@.str = private unnamed_addr constant [18 x i8] c"Substitution loop\00", align 1
@PL_curcop = external dso_local global %struct.cop*, align 8
@PL_savestack_ix = external dso_local global i32, align 4
@PL_chopset = external dso_local global i8*, align 8
@PL_formtarget = external dso_local global %struct.sv*, align 8
@.str.1 = private unnamed_addr constant [28 x i8] c"Not enough format arguments\00", align 1
@PL_charclass = external dso_local constant [0 x i32], align 4
@PL_utf8skip = external dso_local constant [0 x i8], align 1
@.str.2 = private unnamed_addr constant [8 x i8] c"%#0*.*f\00", align 1
@.str.3 = private unnamed_addr constant [7 x i8] c"%0*.*f\00", align 1
@.str.4 = private unnamed_addr constant [7 x i8] c"%#*.*f\00", align 1
@.str.5 = private unnamed_addr constant [6 x i8] c"%*.*f\00", align 1
@.str.6 = private unnamed_addr constant [4 x i8] c"   \00", align 1
@PL_tmps_floor = external dso_local global i64, align 8
@PL_tmps_ix = external dso_local global i64, align 8
@PL_tmps_max = external dso_local global i64, align 8
@PL_tmps_stack = external dso_local global %struct.sv**, align 8
@PL_Sv = external dso_local global %struct.sv*, align 8
@PL_last_in_gv = external dso_local global %struct.gv*, align 8
@.str.7 = private unnamed_addr constant [2 x i8] c".\00", align 1
@.str.8 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.9 = private unnamed_addr constant [37 x i8] c"Range iterator outside integer range\00", align 1
@.str.10 = private unnamed_addr constant [33 x i8] c"Out of memory during list extend\00", align 1
@.str.11 = private unnamed_addr constant [3 x i8] c"E0\00", align 1
@.str.12 = private unnamed_addr constant [22 x i8] c"panic: bad gimme: %d\0A\00", align 1
@PL_scopestack = external dso_local global i32*, align 8
@PL_in_eval = external dso_local global i8, align 1
@PL_eval_root = external dso_local global %struct.op*, align 8
@.str.13 = private unnamed_addr constant [18 x i8] c"\09(in cleanup) %-p\00", align 1
@PL_errgv = external dso_local global %struct.gv*, align 8
@PL_errors = external dso_local global %struct.sv*, align 8
@.str.14 = private unnamed_addr constant [4 x i8] c"%-p\00", align 1
@PL_parser = external dso_local global %struct.yy_parser*, align 8
@PL_curstack = external dso_local global %struct.av*, align 8
@PL_markstack = external dso_local global i32*, align 8
@PL_scopestack_ix = external dso_local global i32, align 4
@PL_stderrgv = external dso_local global %struct.gv*, align 8
@.str.15 = private unnamed_addr constant [12 x i8] c"panic: die \00", align 1
@PL_incgv = external dso_local global %struct.gv*, align 8
@.str.16 = private unnamed_addr constant [33 x i8] c"%-pCompilation failed in require\00", align 1
@.str.17 = private unnamed_addr constant [15 x i8] c"Unknown error\0A\00", align 1
@PL_restartjmpenv = external dso_local global %struct.jmpenv*, align 8
@PL_restartop = external dso_local global %struct.op*, align 8
@PL_top_env = external dso_local global %struct.jmpenv*, align 8
@.str.18 = private unnamed_addr constant [22 x i8] c"panic: top_env, v=%d\0A\00", align 1
@PL_DBsub = external dso_local global %struct.gv*, align 8
@.str.19 = private unnamed_addr constant [10 x i8] c"(unknown)\00", align 1
@.str.20 = private unnamed_addr constant [7 x i8] c"(eval)\00", align 1
@PL_debstash = external dso_local global %struct.hv*, align 8
@PL_dbargs = external dso_local global %struct.av*, align 8
@.str.21 = private unnamed_addr constant [18 x i8] zeroinitializer, align 1
@PL_dowarn = external dso_local global i8, align 1
@.str.22 = private unnamed_addr constant [15 x i8] c"warnings::Bits\00", align 1
@.str.23 = private unnamed_addr constant [4 x i8] c"all\00", align 1
@.str.24 = private unnamed_addr constant [18 x i8] c"UUUUUUUUUUUUUUUUU\00", align 1
@PL_DBcontrol = external dso_local global [3 x i64], align 16
@PL_DBgv = external dso_local global %struct.gv*, align 8
@.str.25 = private unnamed_addr constant [26 x i8] c"No DB::DB routine defined\00", align 1
@PL_debug = external dso_local global i32, align 4
@PL_savestack = external dso_local global %union.any*, align 8
@PL_savestack_max = external dso_local global i32, align 4
@PL_markstack_max = external dso_local global i32*, align 8
@PL_comppad = external dso_local global %struct.av*, align 8
@.str.26 = private unnamed_addr constant [34 x i8] c"Assigned value is not a reference\00", align 1
@.str.27 = private unnamed_addr constant [34 x i8] c"Can't return outside a subroutine\00", align 1
@.str.28 = private unnamed_addr constant [32 x i8] c"%-p did not return a true value\00", align 1
@.str.29 = private unnamed_addr constant [23 x i8] c"panic: return, type=%u\00", align 1
@.str.30 = private unnamed_addr constant [5 x i8] c"last\00", align 1
@.str.31 = private unnamed_addr constant [21 x i8] c"panic: last, type=%u\00", align 1
@.str.32 = private unnamed_addr constant [5 x i8] c"next\00", align 1
@.str.33 = private unnamed_addr constant [5 x i8] c"redo\00", align 1
@Perl_pp_goto.must_have_label = internal constant i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.34, i32 0, i32 0), align 8
@.str.34 = private unnamed_addr constant [21 x i8] c"goto must have label\00", align 1
@.str.35 = private unnamed_addr constant [31 x i8] c"Goto undefined subroutine &%-p\00", align 1
@.str.36 = private unnamed_addr constant [26 x i8] c"Goto undefined subroutine\00", align 1
@.str.37 = private unnamed_addr constant [43 x i8] c"Can't goto subroutine outside a subroutine\00", align 1
@.str.38 = private unnamed_addr constant [42 x i8] c"Can't goto subroutine from an eval-string\00", align 1
@.str.39 = private unnamed_addr constant [41 x i8] c"Can't goto subroutine from an eval-block\00", align 1
@.str.40 = private unnamed_addr constant [60 x i8] c"Can't goto subroutine from a sort sub (or similar callback)\00", align 1
@PL_perldb = external dso_local global i32, align 4
@.str.41 = private unnamed_addr constant [9 x i8] c"DB::goto\00", align 1
@.str.42 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@PL_lastgotoprobe = external dso_local global %struct.op*, align 8
@PL_main_root = external dso_local global %struct.op*, align 8
@.str.43 = private unnamed_addr constant [35 x i8] c"Can't \22goto\22 out of a pseudo block\00", align 1
@.str.44 = private unnamed_addr constant [29 x i8] c"panic: goto, type=%u, ix=%ld\00", align 1
@.str.45 = private unnamed_addr constant [26 x i8] c"Can't find label %d%lu%4p\00", align 1
@.str.46 = private unnamed_addr constant [47 x i8] c"Can't \22goto\22 into the middle of a foreach loop\00", align 1
@.str.47 = private unnamed_addr constant [53 x i8] c"Use of \22goto\22 to jump into a construct is deprecated\00", align 1
@.str.48 = private unnamed_addr constant [31 x i8] c"panic: docatch: illegal ix=%ld\00", align 1
@PL_do_undump = external dso_local global i8, align 1
@PL_exit_flags = external dso_local global i8, align 1
@PL_compiling = external dso_local global %struct.cop, align 8
@PL_cop_seqmax = external dso_local global i32, align 4
@PL_main_cv = external dso_local global %struct.cv*, align 8
@PL_patchlevel = external dso_local global %struct.sv*, align 8
@.str.49 = private unnamed_addr constant [8 x i8] c"version\00", align 1
@.str.50 = private unnamed_addr constant [49 x i8] c"Perls since %-p too modern--this is %-p, stopped\00", align 1
@.str.51 = private unnamed_addr constant [9 x i8] c"original\00", align 1
@.str.52 = private unnamed_addr constant [3 x i8] c"qv\00", align 1
@.str.53 = private unnamed_addr constant [3 x i8] c".0\00", align 1
@.str.54 = private unnamed_addr constant [45 x i8] c"Perl %-p required--this is only %-p, stopped\00", align 1
@.str.55 = private unnamed_addr constant [9 x i8] c"v%d.%d.0\00", align 1
@.str.56 = private unnamed_addr constant [65 x i8] c"Perl %-p required (did you mean %-p?)--this is only %-p, stopped\00", align 1
@.str.57 = private unnamed_addr constant [41 x i8] c"Missing or undefined argument to require\00", align 1
@.str.58 = private unnamed_addr constant [9 x i8] c"pathname\00", align 1
@.str.59 = private unnamed_addr constant [8 x i8] c"require\00", align 1
@.str.60 = private unnamed_addr constant [22 x i8] c"Can't locate %s:   %s\00", align 1
@.str.61 = private unnamed_addr constant [60 x i8] c"Attempt to reload %s aborted.\0ACompilation failed in require\00", align 1
@.str.62 = private unnamed_addr constant [17 x i8] c"/loader/0x%lx/%s\00", align 1
@.str.63 = private unnamed_addr constant [4 x i8] c"INC\00", align 1
@.str.64 = private unnamed_addr constant [10 x i8] c"/dev/null\00", align 1
@.str.65 = private unnamed_addr constant [2 x i8] c"r\00", align 1
@.str.66 = private unnamed_addr constant [11 x i8] c"@INC entry\00", align 1
@.str.67 = private unnamed_addr constant [26 x i8] c"Can't locate %s:   %s: %s\00", align 1
@.str.68 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.69 = private unnamed_addr constant [4 x i8] c".pm\00", align 1
@.str.70 = private unnamed_addr constant [31 x i8] c" (you may need to install the \00", align 1
@.str.71 = private unnamed_addr constant [3 x i8] c"::\00", align 1
@.str.72 = private unnamed_addr constant [9 x i8] c" module)\00", align 1
@.str.73 = private unnamed_addr constant [3 x i8] c".h\00", align 1
@.str.74 = private unnamed_addr constant [47 x i8] c" (change .h to .ph maybe?) (did you run h2ph?)\00", align 1
@.str.75 = private unnamed_addr constant [4 x i8] c".ph\00", align 1
@.str.76 = private unnamed_addr constant [21 x i8] c" (did you run h2ph?)\00", align 1
@.str.77 = private unnamed_addr constant [47 x i8] c"Can't locate %s in @INC%-p (@INC contains:%-p)\00", align 1
@.str.78 = private unnamed_addr constant [16 x i8] c"Can't locate %s\00", align 1
@PL_eval_start = external dso_local global %struct.op*, align 8
@PL_breakable_sub_gen = external dso_local global i32, align 4
@.str.79 = private unnamed_addr constant [5 x i8] c"eval\00", align 1
@.str.80 = private unnamed_addr constant [21 x i8] c"_<(eval %lu)[%s:%ld]\00", align 1
@PL_evalseq = external dso_local global i32, align 4
@.str.81 = private unnamed_addr constant [13 x i8] c"_<(eval %lu)\00", align 1
@PL_curstash = external dso_local global %struct.hv*, align 8
@PL_defstash = external dso_local global %struct.hv*, align 8
@.str.82 = private unnamed_addr constant [33 x i8] c"Can't \22%s\22 outside a topicalizer\00", align 1
@.str.83 = private unnamed_addr constant [8 x i8] c"default\00", align 1
@.str.84 = private unnamed_addr constant [5 x i8] c"when\00", align 1
@.str.85 = private unnamed_addr constant [38 x i8] c"Can't \22continue\22 outside a when block\00", align 1
@.str.86 = private unnamed_addr constant [36 x i8] c"Can't \22break\22 outside a given block\00", align 1
@.str.87 = private unnamed_addr constant [36 x i8] c"Can't \22break\22 in a loop topicalizer\00", align 1
@.str.88 = private unnamed_addr constant [6 x i8] c"undef\00", align 1
@.str.89 = private unnamed_addr constant [17 x i8] c"a readonly value\00", align 1
@.str.90 = private unnamed_addr constant [12 x i8] c"a temporary\00", align 1
@.str.91 = private unnamed_addr constant [39 x i8] c"Can't return %s from lvalue subroutine\00", align 1
@.str.92 = private unnamed_addr constant [41 x i8] c"Can't return a %s from lvalue subroutine\00", align 1
@.str.93 = private unnamed_addr constant [15 x i8] c"readonly value\00", align 1
@.str.94 = private unnamed_addr constant [10 x i8] c"temporary\00", align 1
@.str.95 = private unnamed_addr constant [32 x i8] c"Can't \22%s\22 outside a loop block\00", align 1
@.str.96 = private unnamed_addr constant [29 x i8] c"Label not found for \22%s %-p\22\00", align 1
@.str.97 = private unnamed_addr constant [18 x i8] c"Exiting %s via %s\00", align 1
@context_name = internal constant [12 x i8*] [i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.98, i32 0, i32 0), i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.99, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.79, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.101, i32 0, i32 0)], align 16
@PL_op_name = external dso_local constant [0 x i8*], align 8
@.str.98 = private unnamed_addr constant [13 x i8] c"pseudo-block\00", align 1
@.str.99 = private unnamed_addr constant [11 x i8] c"subroutine\00", align 1
@.str.100 = private unnamed_addr constant [7 x i8] c"format\00", align 1
@.str.101 = private unnamed_addr constant [13 x i8] c"substitution\00", align 1
@S_dofindlabel.too_deep = internal constant i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.102, i32 0, i32 0), align 8
@.str.102 = private unnamed_addr constant [36 x i8] c"Target of goto is too deeply nested\00", align 1
@.str.103 = private unnamed_addr constant [42 x i8] c"Invalid \\0 character in %s for %s: %s\\0%s\00", align 1
@.str.104 = private unnamed_addr constant [2 x i8] c"c\00", align 1
@.str.105 = private unnamed_addr constant [2 x i8] c":\00", align 1
@PL_beginav = external dso_local global %struct.av*, align 8
@PL_unitcheckav = external dso_local global %struct.av*, align 8
@PL_compcv = external dso_local global %struct.cv*, align 8
@PL_hintgv = external dso_local global %struct.gv*, align 8
@PL_blockhooks = external dso_local global %struct.av*, align 8
@.str.106 = private unnamed_addr constant [18 x i8] c"Compilation error\00", align 1
@.str.107 = private unnamed_addr constant [14 x i8] c"DB::postponed\00", align 1
@PL_statusvalue = external dso_local global i32, align 4
@PL_runops = external dso_local global i32 ()*, align 8
@.str.108 = private unnamed_addr constant [60 x i8] c"Smart matching a non-overloaded object breaks encapsulation\00", align 1
@.str.109 = private unnamed_addr constant [25 x i8] c"Null picture in formline\00", align 1
@PL_magic_vtables = external dso_local constant [31 x %struct.mgvtbl], align 16
@.str.110 = private unnamed_addr constant [54 x i8] c"Repeated format line will never terminate (~~ and @#)\00", align 1

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.op* @Perl_pp_wantarray() #0 {
entry:
  %retval = alloca %struct.op*, align 8
  %sp = alloca %struct.sv**, align 8
  %cxix = alloca i32, align 4
  %cx = alloca %struct.context*, align 8
  %0 = load %struct.sv**, %struct.sv*** @PL_stack_sp, align 8
  store %struct.sv** %0, %struct.sv*** %sp, align 8
  br label %do.body

do.body:                                          ; preds = %entry
  %1 = load %struct.sv**, %struct.sv*** @PL_stack_max, align 8
  %2 = load %struct.sv**, %struct.sv*** %sp, align 8
  %sub.ptr.lhs.cast = ptrtoint %struct.sv** %1 to i64
  %sub.ptr.rhs.cast = ptrtoint %struct.sv** %2 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 8
  %cmp = icmp slt i64 %sub.ptr.div, 1
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %do.body
  br i1 true, label %if.then, label %if.end

cond.false:                                       ; preds = %do.body
  br i1 false, label %if.then, label %if.end

if.then:                                          ; preds = %cond.false, %cond.true
  %3 = load %struct.sv**, %struct.sv*** %sp, align 8
  %4 = load %struct.sv**, %struct.sv*** %sp, align 8
  %call = call %struct.sv** @Perl_stack_grow(%struct.sv** %3, %struct.sv** %4, i64 1)
  store %struct.sv** %call, %struct.sv*** %sp, align 8
  %5 = load %struct.sv**, %struct.sv*** %sp, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %cond.false, %cond.true
  br label %do.end

do.end:                                           ; preds = %if.end
  %6 = load %struct.op*, %struct.op** @PL_op, align 8
  %op_private = getelementptr inbounds %struct.op, %struct.op* %6, i32 0, i32 6
  %7 = load i8, i8* %op_private, align 1
  %conv = zext i8 %7 to i32
  %and = and i32 %conv, 128
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %if.then1, label %if.else

if.then1:                                         ; preds = %do.end
  %call2 = call %struct.context* @Perl_caller_cx(i32 1, %struct.context** null)
  store %struct.context* %call2, %struct.context** %cx, align 8
  %tobool3 = icmp ne %struct.context* %call2, null
  br i1 %tobool3, label %if.end5, label %if.then4

if.then4:                                         ; preds = %if.then1
  %8 = load %struct.sv**, %struct.sv*** %sp, align 8
  %incdec.ptr = getelementptr inbounds %struct.sv*, %struct.sv** %8, i32 1
  store %struct.sv** %incdec.ptr, %struct.sv*** %sp, align 8
  store %struct.sv* @PL_sv_undef, %struct.sv** %incdec.ptr, align 8
  %9 = load %struct.sv**, %struct.sv*** %sp, align 8
  store %struct.sv** %9, %struct.sv*** @PL_stack_sp, align 8
  %10 = load %struct.op*, %struct.op** @PL_op, align 8
  %op_next = getelementptr inbounds %struct.op, %struct.op* %10, i32 0, i32 0
  %11 = load %struct.op*, %struct.op** %op_next, align 8
  store %struct.op* %11, %struct.op** %retval, align 8
  br label %return

if.end5:                                          ; preds = %if.then1
  br label %if.end14

if.else:                                          ; preds = %do.end
  %12 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %si_cxstack = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %12, i32 0, i32 1
  %13 = load %struct.context*, %struct.context** %si_cxstack, align 8
  %14 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %si_cxix = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %14, i32 0, i32 4
  %15 = load i32, i32* %si_cxix, align 8
  %call6 = call i32 @S_dopoptosub_at(%struct.context* %13, i32 %15)
  store i32 %call6, i32* %cxix, align 4
  %16 = load i32, i32* %cxix, align 4
  %cmp7 = icmp slt i32 %16, 0
  br i1 %cmp7, label %if.then9, label %if.end12

if.then9:                                         ; preds = %if.else
  %17 = load %struct.sv**, %struct.sv*** %sp, align 8
  %incdec.ptr10 = getelementptr inbounds %struct.sv*, %struct.sv** %17, i32 1
  store %struct.sv** %incdec.ptr10, %struct.sv*** %sp, align 8
  store %struct.sv* @PL_sv_undef, %struct.sv** %incdec.ptr10, align 8
  %18 = load %struct.sv**, %struct.sv*** %sp, align 8
  store %struct.sv** %18, %struct.sv*** @PL_stack_sp, align 8
  %19 = load %struct.op*, %struct.op** @PL_op, align 8
  %op_next11 = getelementptr inbounds %struct.op, %struct.op* %19, i32 0, i32 0
  %20 = load %struct.op*, %struct.op** %op_next11, align 8
  store %struct.op* %20, %struct.op** %retval, align 8
  br label %return

if.end12:                                         ; preds = %if.else
  %21 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %si_cxstack13 = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %21, i32 0, i32 1
  %22 = load %struct.context*, %struct.context** %si_cxstack13, align 8
  %23 = load i32, i32* %cxix, align 4
  %idxprom = sext i32 %23 to i64
  %arrayidx = getelementptr inbounds %struct.context, %struct.context* %22, i64 %idxprom
  store %struct.context* %arrayidx, %struct.context** %cx, align 8
  br label %if.end14

if.end14:                                         ; preds = %if.end12, %if.end5
  %24 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u = getelementptr inbounds %struct.context, %struct.context* %24, i32 0, i32 0
  %cx_blk = bitcast %union.anon.16* %cx_u to %struct.block*
  %blku_gimme = getelementptr inbounds %struct.block, %struct.block* %cx_blk, i32 0, i32 1
  %25 = load i8, i8* %blku_gimme, align 1
  %conv15 = zext i8 %25 to i32
  switch i32 %conv15, label %sw.default [
    i32 3, label %sw.bb
    i32 2, label %sw.bb18
  ]

sw.bb:                                            ; preds = %if.end14
  %26 = load %struct.sv**, %struct.sv*** %sp, align 8
  %incdec.ptr16 = getelementptr inbounds %struct.sv*, %struct.sv** %26, i32 1
  store %struct.sv** %incdec.ptr16, %struct.sv*** %sp, align 8
  store %struct.sv* @PL_sv_yes, %struct.sv** %incdec.ptr16, align 8
  %27 = load %struct.sv**, %struct.sv*** %sp, align 8
  store %struct.sv** %27, %struct.sv*** @PL_stack_sp, align 8
  %28 = load %struct.op*, %struct.op** @PL_op, align 8
  %op_next17 = getelementptr inbounds %struct.op, %struct.op* %28, i32 0, i32 0
  %29 = load %struct.op*, %struct.op** %op_next17, align 8
  store %struct.op* %29, %struct.op** %retval, align 8
  br label %return

sw.bb18:                                          ; preds = %if.end14
  %30 = load %struct.sv**, %struct.sv*** %sp, align 8
  %incdec.ptr19 = getelementptr inbounds %struct.sv*, %struct.sv** %30, i32 1
  store %struct.sv** %incdec.ptr19, %struct.sv*** %sp, align 8
  store %struct.sv* @PL_sv_no, %struct.sv** %incdec.ptr19, align 8
  %31 = load %struct.sv**, %struct.sv*** %sp, align 8
  store %struct.sv** %31, %struct.sv*** @PL_stack_sp, align 8
  %32 = load %struct.op*, %struct.op** @PL_op, align 8
  %op_next20 = getelementptr inbounds %struct.op, %struct.op* %32, i32 0, i32 0
  %33 = load %struct.op*, %struct.op** %op_next20, align 8
  store %struct.op* %33, %struct.op** %retval, align 8
  br label %return

sw.default:                                       ; preds = %if.end14
  %34 = load %struct.sv**, %struct.sv*** %sp, align 8
  %incdec.ptr21 = getelementptr inbounds %struct.sv*, %struct.sv** %34, i32 1
  store %struct.sv** %incdec.ptr21, %struct.sv*** %sp, align 8
  store %struct.sv* @PL_sv_undef, %struct.sv** %incdec.ptr21, align 8
  %35 = load %struct.sv**, %struct.sv*** %sp, align 8
  store %struct.sv** %35, %struct.sv*** @PL_stack_sp, align 8
  %36 = load %struct.op*, %struct.op** @PL_op, align 8
  %op_next22 = getelementptr inbounds %struct.op, %struct.op* %36, i32 0, i32 0
  %37 = load %struct.op*, %struct.op** %op_next22, align 8
  store %struct.op* %37, %struct.op** %retval, align 8
  br label %return

return:                                           ; preds = %sw.default, %sw.bb18, %sw.bb, %if.then9, %if.then4
  %38 = load %struct.op*, %struct.op** %retval, align 8
  ret %struct.op* %38
}

declare dso_local %struct.sv** @Perl_stack_grow(%struct.sv**, %struct.sv**, i64) #1

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.context* @Perl_caller_cx(i32 %count, %struct.context** %dbcxp) #0 {
entry:
  %retval = alloca %struct.context*, align 8
  %count.addr = alloca i32, align 4
  %dbcxp.addr = alloca %struct.context**, align 8
  %cxix = alloca i32, align 4
  %cx = alloca %struct.context*, align 8
  %ccstack = alloca %struct.context*, align 8
  %top_si = alloca %struct.stackinfo*, align 8
  %dbcxix = alloca i32, align 4
  store i32 %count, i32* %count.addr, align 4
  store %struct.context** %dbcxp, %struct.context*** %dbcxp.addr, align 8
  %0 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %si_cxstack = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %0, i32 0, i32 1
  %1 = load %struct.context*, %struct.context** %si_cxstack, align 8
  %2 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %si_cxix = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %2, i32 0, i32 4
  %3 = load i32, i32* %si_cxix, align 8
  %call = call i32 @S_dopoptosub_at(%struct.context* %1, i32 %3)
  store i32 %call, i32* %cxix, align 4
  %4 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %si_cxstack1 = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %4, i32 0, i32 1
  %5 = load %struct.context*, %struct.context** %si_cxstack1, align 8
  store %struct.context* %5, %struct.context** %ccstack, align 8
  %6 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  store %struct.stackinfo* %6, %struct.stackinfo** %top_si, align 8
  br label %for.cond

for.cond:                                         ; preds = %if.end22, %entry
  br label %while.cond

while.cond:                                       ; preds = %while.body, %for.cond
  %7 = load i32, i32* %cxix, align 4
  %cmp = icmp slt i32 %7, 0
  br i1 %cmp, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %while.cond
  %8 = load %struct.stackinfo*, %struct.stackinfo** %top_si, align 8
  %si_type = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %8, i32 0, i32 6
  %9 = load i32, i32* %si_type, align 8
  %cmp2 = icmp ne i32 %9, 1
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %10 = phi i1 [ false, %while.cond ], [ %cmp2, %land.rhs ]
  br i1 %10, label %while.body, label %while.end

while.body:                                       ; preds = %land.end
  %11 = load %struct.stackinfo*, %struct.stackinfo** %top_si, align 8
  %si_prev = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %11, i32 0, i32 2
  %12 = load %struct.stackinfo*, %struct.stackinfo** %si_prev, align 8
  store %struct.stackinfo* %12, %struct.stackinfo** %top_si, align 8
  %13 = load %struct.stackinfo*, %struct.stackinfo** %top_si, align 8
  %si_cxstack3 = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %13, i32 0, i32 1
  %14 = load %struct.context*, %struct.context** %si_cxstack3, align 8
  store %struct.context* %14, %struct.context** %ccstack, align 8
  %15 = load %struct.context*, %struct.context** %ccstack, align 8
  %16 = load %struct.stackinfo*, %struct.stackinfo** %top_si, align 8
  %si_cxix4 = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %16, i32 0, i32 4
  %17 = load i32, i32* %si_cxix4, align 8
  %call5 = call i32 @S_dopoptosub_at(%struct.context* %15, i32 %17)
  store i32 %call5, i32* %cxix, align 4
  br label %while.cond

while.end:                                        ; preds = %land.end
  %18 = load i32, i32* %cxix, align 4
  %cmp6 = icmp slt i32 %18, 0
  br i1 %cmp6, label %if.then, label %if.end

if.then:                                          ; preds = %while.end
  store %struct.context* null, %struct.context** %retval, align 8
  br label %return

if.end:                                           ; preds = %while.end
  %19 = load %struct.gv*, %struct.gv** @PL_DBsub, align 8
  %tobool = icmp ne %struct.gv* %19, null
  br i1 %tobool, label %land.lhs.true, label %if.end19

land.lhs.true:                                    ; preds = %if.end
  %20 = load %struct.gv*, %struct.gv** @PL_DBsub, align 8
  %sv_u = getelementptr inbounds %struct.gv, %struct.gv* %20, i32 0, i32 3
  %svu_gp = bitcast %union.anon.4* %sv_u to %struct.gp**
  %21 = load %struct.gp*, %struct.gp** %svu_gp, align 8
  %add.ptr = getelementptr inbounds %struct.gp, %struct.gp* %21, i64 0
  %gp_cv = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr, i32 0, i32 2
  %22 = load %struct.cv*, %struct.cv** %gp_cv, align 8
  %add.ptr7 = getelementptr inbounds %struct.cv, %struct.cv* %22, i64 0
  %tobool8 = icmp ne %struct.cv* %add.ptr7, null
  br i1 %tobool8, label %land.lhs.true9, label %if.end19

land.lhs.true9:                                   ; preds = %land.lhs.true
  %23 = load i32, i32* %cxix, align 4
  %cmp10 = icmp sge i32 %23, 0
  br i1 %cmp10, label %land.lhs.true11, label %if.end19

land.lhs.true11:                                  ; preds = %land.lhs.true9
  %24 = load %struct.context*, %struct.context** %ccstack, align 8
  %25 = load i32, i32* %cxix, align 4
  %idxprom = sext i32 %25 to i64
  %arrayidx = getelementptr inbounds %struct.context, %struct.context* %24, i64 %idxprom
  %cx_u = getelementptr inbounds %struct.context, %struct.context* %arrayidx, i32 0, i32 0
  %cx_blk = bitcast %union.anon.16* %cx_u to %struct.block*
  %blk_u = getelementptr inbounds %struct.block, %struct.block* %cx_blk, i32 0, i32 8
  %blku_sub = bitcast %union.anon.20* %blk_u to %struct.block_sub*
  %cv = getelementptr inbounds %struct.block_sub, %struct.block_sub* %blku_sub, i32 0, i32 1
  %26 = load %struct.cv*, %struct.cv** %cv, align 8
  %27 = load %struct.gv*, %struct.gv** @PL_DBsub, align 8
  %sv_u12 = getelementptr inbounds %struct.gv, %struct.gv* %27, i32 0, i32 3
  %svu_gp13 = bitcast %union.anon.4* %sv_u12 to %struct.gp**
  %28 = load %struct.gp*, %struct.gp** %svu_gp13, align 8
  %add.ptr14 = getelementptr inbounds %struct.gp, %struct.gp* %28, i64 0
  %gp_cv15 = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr14, i32 0, i32 2
  %29 = load %struct.cv*, %struct.cv** %gp_cv15, align 8
  %add.ptr16 = getelementptr inbounds %struct.cv, %struct.cv* %29, i64 0
  %cmp17 = icmp eq %struct.cv* %26, %add.ptr16
  br i1 %cmp17, label %if.then18, label %if.end19

if.then18:                                        ; preds = %land.lhs.true11
  %30 = load i32, i32* %count.addr, align 4
  %inc = add nsw i32 %30, 1
  store i32 %inc, i32* %count.addr, align 4
  br label %if.end19

if.end19:                                         ; preds = %if.then18, %land.lhs.true11, %land.lhs.true9, %land.lhs.true, %if.end
  %31 = load i32, i32* %count.addr, align 4
  %dec = add nsw i32 %31, -1
  store i32 %dec, i32* %count.addr, align 4
  %tobool20 = icmp ne i32 %31, 0
  br i1 %tobool20, label %if.end22, label %if.then21

if.then21:                                        ; preds = %if.end19
  br label %for.end

if.end22:                                         ; preds = %if.end19
  %32 = load %struct.context*, %struct.context** %ccstack, align 8
  %33 = load i32, i32* %cxix, align 4
  %sub = sub nsw i32 %33, 1
  %call23 = call i32 @S_dopoptosub_at(%struct.context* %32, i32 %sub)
  store i32 %call23, i32* %cxix, align 4
  br label %for.cond

for.end:                                          ; preds = %if.then21
  %34 = load %struct.context*, %struct.context** %ccstack, align 8
  %35 = load i32, i32* %cxix, align 4
  %idxprom24 = sext i32 %35 to i64
  %arrayidx25 = getelementptr inbounds %struct.context, %struct.context* %34, i64 %idxprom24
  store %struct.context* %arrayidx25, %struct.context** %cx, align 8
  %36 = load %struct.context**, %struct.context*** %dbcxp.addr, align 8
  %tobool26 = icmp ne %struct.context** %36, null
  br i1 %tobool26, label %if.then27, label %if.end28

if.then27:                                        ; preds = %for.end
  %37 = load %struct.context*, %struct.context** %cx, align 8
  %38 = load %struct.context**, %struct.context*** %dbcxp.addr, align 8
  store %struct.context* %37, %struct.context** %38, align 8
  br label %if.end28

if.end28:                                         ; preds = %if.then27, %for.end
  %39 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u29 = getelementptr inbounds %struct.context, %struct.context* %39, i32 0, i32 0
  %cx_subst = bitcast %union.anon.16* %cx_u29 to %struct.subst*
  %sbu_type = getelementptr inbounds %struct.subst, %struct.subst* %cx_subst, i32 0, i32 0
  %40 = load i8, i8* %sbu_type, align 8
  %conv = zext i8 %40 to i32
  %and = and i32 %conv, 15
  %cmp30 = icmp eq i32 %and, 8
  br i1 %cmp30, label %if.then39, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end28
  %41 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u32 = getelementptr inbounds %struct.context, %struct.context* %41, i32 0, i32 0
  %cx_subst33 = bitcast %union.anon.16* %cx_u32 to %struct.subst*
  %sbu_type34 = getelementptr inbounds %struct.subst, %struct.subst* %cx_subst33, i32 0, i32 0
  %42 = load i8, i8* %sbu_type34, align 8
  %conv35 = zext i8 %42 to i32
  %and36 = and i32 %conv35, 15
  %cmp37 = icmp eq i32 %and36, 9
  br i1 %cmp37, label %if.then39, label %if.end72

if.then39:                                        ; preds = %lor.lhs.false, %if.end28
  %43 = load %struct.context*, %struct.context** %ccstack, align 8
  %44 = load i32, i32* %cxix, align 4
  %sub40 = sub nsw i32 %44, 1
  %call41 = call i32 @S_dopoptosub_at(%struct.context* %43, i32 %sub40)
  store i32 %call41, i32* %dbcxix, align 4
  %45 = load %struct.gv*, %struct.gv** @PL_DBsub, align 8
  %tobool42 = icmp ne %struct.gv* %45, null
  br i1 %tobool42, label %land.lhs.true43, label %if.end71

land.lhs.true43:                                  ; preds = %if.then39
  %46 = load %struct.gv*, %struct.gv** @PL_DBsub, align 8
  %sv_u44 = getelementptr inbounds %struct.gv, %struct.gv* %46, i32 0, i32 3
  %svu_gp45 = bitcast %union.anon.4* %sv_u44 to %struct.gp**
  %47 = load %struct.gp*, %struct.gp** %svu_gp45, align 8
  %add.ptr46 = getelementptr inbounds %struct.gp, %struct.gp* %47, i64 0
  %gp_cv47 = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr46, i32 0, i32 2
  %48 = load %struct.cv*, %struct.cv** %gp_cv47, align 8
  %add.ptr48 = getelementptr inbounds %struct.cv, %struct.cv* %48, i64 0
  %tobool49 = icmp ne %struct.cv* %add.ptr48, null
  br i1 %tobool49, label %land.lhs.true50, label %if.end71

land.lhs.true50:                                  ; preds = %land.lhs.true43
  %49 = load i32, i32* %dbcxix, align 4
  %cmp51 = icmp sge i32 %49, 0
  br i1 %cmp51, label %land.lhs.true53, label %if.end71

land.lhs.true53:                                  ; preds = %land.lhs.true50
  %50 = load %struct.context*, %struct.context** %ccstack, align 8
  %51 = load i32, i32* %dbcxix, align 4
  %idxprom54 = sext i32 %51 to i64
  %arrayidx55 = getelementptr inbounds %struct.context, %struct.context* %50, i64 %idxprom54
  %cx_u56 = getelementptr inbounds %struct.context, %struct.context* %arrayidx55, i32 0, i32 0
  %cx_blk57 = bitcast %union.anon.16* %cx_u56 to %struct.block*
  %blk_u58 = getelementptr inbounds %struct.block, %struct.block* %cx_blk57, i32 0, i32 8
  %blku_sub59 = bitcast %union.anon.20* %blk_u58 to %struct.block_sub*
  %cv60 = getelementptr inbounds %struct.block_sub, %struct.block_sub* %blku_sub59, i32 0, i32 1
  %52 = load %struct.cv*, %struct.cv** %cv60, align 8
  %53 = load %struct.gv*, %struct.gv** @PL_DBsub, align 8
  %sv_u61 = getelementptr inbounds %struct.gv, %struct.gv* %53, i32 0, i32 3
  %svu_gp62 = bitcast %union.anon.4* %sv_u61 to %struct.gp**
  %54 = load %struct.gp*, %struct.gp** %svu_gp62, align 8
  %add.ptr63 = getelementptr inbounds %struct.gp, %struct.gp* %54, i64 0
  %gp_cv64 = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr63, i32 0, i32 2
  %55 = load %struct.cv*, %struct.cv** %gp_cv64, align 8
  %add.ptr65 = getelementptr inbounds %struct.cv, %struct.cv* %55, i64 0
  %cmp66 = icmp eq %struct.cv* %52, %add.ptr65
  br i1 %cmp66, label %if.then68, label %if.end71

if.then68:                                        ; preds = %land.lhs.true53
  %56 = load %struct.context*, %struct.context** %ccstack, align 8
  %57 = load i32, i32* %dbcxix, align 4
  %idxprom69 = sext i32 %57 to i64
  %arrayidx70 = getelementptr inbounds %struct.context, %struct.context* %56, i64 %idxprom69
  store %struct.context* %arrayidx70, %struct.context** %cx, align 8
  br label %if.end71

if.end71:                                         ; preds = %if.then68, %land.lhs.true53, %land.lhs.true50, %land.lhs.true43, %if.then39
  br label %if.end72

if.end72:                                         ; preds = %if.end71, %lor.lhs.false
  %58 = load %struct.context*, %struct.context** %cx, align 8
  store %struct.context* %58, %struct.context** %retval, align 8
  br label %return

return:                                           ; preds = %if.end72, %if.then
  %59 = load %struct.context*, %struct.context** %retval, align 8
  ret %struct.context* %59
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @S_dopoptosub_at(%struct.context* %cxstk, i32 %startingblock) #0 {
entry:
  %retval = alloca i32, align 4
  %cxstk.addr = alloca %struct.context*, align 8
  %startingblock.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %cx = alloca %struct.context*, align 8
  store %struct.context* %cxstk, %struct.context** %cxstk.addr, align 8
  store i32 %startingblock, i32* %startingblock.addr, align 4
  %0 = load i32, i32* %startingblock.addr, align 4
  store i32 %0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i32, i32* %i, align 4
  %cmp = icmp sge i32 %1, 0
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %2 = load %struct.context*, %struct.context** %cxstk.addr, align 8
  %3 = load i32, i32* %i, align 4
  %idxprom = sext i32 %3 to i64
  %arrayidx = getelementptr inbounds %struct.context, %struct.context* %2, i64 %idxprom
  store %struct.context* %arrayidx, %struct.context** %cx, align 8
  %4 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u = getelementptr inbounds %struct.context, %struct.context* %4, i32 0, i32 0
  %cx_subst = bitcast %union.anon.16* %cx_u to %struct.subst*
  %sbu_type = getelementptr inbounds %struct.subst, %struct.subst* %cx_subst, i32 0, i32 0
  %5 = load i8, i8* %sbu_type, align 8
  %conv = zext i8 %5 to i32
  %and = and i32 %conv, 15
  switch i32 %and, label %sw.default [
    i32 8, label %sw.bb
    i32 10, label %sw.bb6
    i32 9, label %sw.bb6
  ]

sw.default:                                       ; preds = %for.body
  br label %for.inc

sw.bb:                                            ; preds = %for.body
  %6 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u1 = getelementptr inbounds %struct.context, %struct.context* %6, i32 0, i32 0
  %cx_subst2 = bitcast %union.anon.16* %cx_u1 to %struct.subst*
  %sbu_type3 = getelementptr inbounds %struct.subst, %struct.subst* %cx_subst2, i32 0, i32 0
  %7 = load i8, i8* %sbu_type3, align 8
  %conv4 = zext i8 %7 to i32
  %and5 = and i32 %conv4, 128
  %tobool = icmp ne i32 %and5, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %sw.bb
  br label %for.inc

if.end:                                           ; preds = %sw.bb
  br label %sw.bb6

sw.bb6:                                           ; preds = %for.body, %for.body, %if.end
  %8 = load i32, i32* %i, align 4
  store i32 %8, i32* %retval, align 4
  br label %return

for.inc:                                          ; preds = %if.then, %sw.default
  %9 = load i32, i32* %i, align 4
  %dec = add nsw i32 %9, -1
  store i32 %dec, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %10 = load i32, i32* %i, align 4
  store i32 %10, i32* %retval, align 4
  br label %return

return:                                           ; preds = %for.end, %sw.bb6
  %11 = load i32, i32* %retval, align 4
  ret i32 %11
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.op* @Perl_pp_regcreset() #0 {
entry:
  store i8 0, i8* @PL_tainted, align 1
  %0 = load %struct.op*, %struct.op** @PL_op, align 8
  %op_next = getelementptr inbounds %struct.op, %struct.op* %0, i32 0, i32 0
  %1 = load %struct.op*, %struct.op** %op_next, align 8
  ret %struct.op* %1
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.op* @Perl_pp_regcomp() #0 {
entry:
  %sp = alloca %struct.sv**, align 8
  %pm = alloca %struct.pmop*, align 8
  %args = alloca %struct.sv**, align 8
  %nargs = alloca i32, align 4
  %re = alloca %struct.p5rx*, align 8
  %new_re = alloca %struct.p5rx*, align 8
  %eng = alloca %struct.regexp_engine*, align 8
  %is_bare_re = alloca i8, align 1
  %mark = alloca %struct.sv**, align 8
  %tmp = alloca %struct.p5rx*, align 8
  %lhs = alloca %struct.sv*, align 8
  %was_tainted = alloca i8, align 1
  %0 = load %struct.sv**, %struct.sv*** @PL_stack_sp, align 8
  store %struct.sv** %0, %struct.sv*** %sp, align 8
  %1 = load %struct.op*, %struct.op** @PL_op, align 8
  %2 = bitcast %struct.op* %1 to %struct.logop*
  %op_other = getelementptr inbounds %struct.logop, %struct.logop* %2, i32 0, i32 8
  %3 = load %struct.op*, %struct.op** %op_other, align 8
  %4 = bitcast %struct.op* %3 to %struct.pmop*
  store %struct.pmop* %4, %struct.pmop** %pm, align 8
  store %struct.p5rx* null, %struct.p5rx** %re, align 8
  store i8 0, i8* %is_bare_re, align 1
  %5 = load %struct.op*, %struct.op** @PL_op, align 8
  %op_flags = getelementptr inbounds %struct.op, %struct.op* %5, i32 0, i32 5
  %6 = load i8, i8* %op_flags, align 2
  %conv = zext i8 %6 to i32
  %and = and i32 %conv, 64
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %7 = load %struct.sv**, %struct.sv*** @PL_stack_base, align 8
  %8 = load i32*, i32** @PL_markstack_ptr, align 8
  %incdec.ptr = getelementptr inbounds i32, i32* %8, i32 -1
  store i32* %incdec.ptr, i32** @PL_markstack_ptr, align 8
  %9 = load i32, i32* %8, align 4
  %idx.ext = sext i32 %9 to i64
  %add.ptr = getelementptr inbounds %struct.sv*, %struct.sv** %7, i64 %idx.ext
  store %struct.sv** %add.ptr, %struct.sv*** %mark, align 8
  %10 = load %struct.sv**, %struct.sv*** %sp, align 8
  %11 = load %struct.sv**, %struct.sv*** %mark, align 8
  %sub.ptr.lhs.cast = ptrtoint %struct.sv** %10 to i64
  %sub.ptr.rhs.cast = ptrtoint %struct.sv** %11 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 8
  %conv1 = trunc i64 %sub.ptr.div to i32
  store i32 %conv1, i32* %nargs, align 4
  %12 = load %struct.sv**, %struct.sv*** %mark, align 8
  %incdec.ptr2 = getelementptr inbounds %struct.sv*, %struct.sv** %12, i32 1
  store %struct.sv** %incdec.ptr2, %struct.sv*** %mark, align 8
  store %struct.sv** %incdec.ptr2, %struct.sv*** %args, align 8
  br label %if.end

if.else:                                          ; preds = %entry
  store i32 1, i32* %nargs, align 4
  %13 = load %struct.sv**, %struct.sv*** %sp, align 8
  store %struct.sv** %13, %struct.sv*** %args, align 8
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %14 = load %struct.pmop*, %struct.pmop** %pm, align 8
  %op_pmregexp = getelementptr inbounds %struct.pmop, %struct.pmop* %14, i32 0, i32 9
  %15 = load %struct.p5rx*, %struct.p5rx** %op_pmregexp, align 8
  store %struct.p5rx* %15, %struct.p5rx** %re, align 8
  %16 = load %struct.p5rx*, %struct.p5rx** %re, align 8
  %tobool3 = icmp ne %struct.p5rx* %16, null
  br i1 %tobool3, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end
  %17 = load %struct.p5rx*, %struct.p5rx** %re, align 8
  %call = call %struct.regexp* @S_ReANY(%struct.p5rx* %17)
  %engine = getelementptr inbounds %struct.regexp, %struct.regexp* %call, i32 0, i32 4
  %18 = load %struct.regexp_engine*, %struct.regexp_engine** %engine, align 8
  br label %cond.end

cond.false:                                       ; preds = %if.end
  %call4 = call %struct.regexp_engine* @Perl_current_re_engine()
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.regexp_engine* [ %18, %cond.true ], [ %call4, %cond.false ]
  store %struct.regexp_engine* %cond, %struct.regexp_engine** %eng, align 8
  %19 = load %struct.regexp_engine*, %struct.regexp_engine** %eng, align 8
  %op_comp = getelementptr inbounds %struct.regexp_engine, %struct.regexp_engine* %19, i32 0, i32 11
  %20 = load %struct.p5rx* (%struct.sv**, i32, %struct.op*, %struct.regexp_engine*, %struct.p5rx*, i8*, i32, i32)*, %struct.p5rx* (%struct.sv**, i32, %struct.op*, %struct.regexp_engine*, %struct.p5rx*, i8*, i32, i32)** %op_comp, align 8
  %tobool5 = icmp ne %struct.p5rx* (%struct.sv**, i32, %struct.op*, %struct.regexp_engine*, %struct.p5rx*, i8*, i32, i32)* %20, null
  br i1 %tobool5, label %cond.true6, label %cond.false8

cond.true6:                                       ; preds = %cond.end
  %21 = load %struct.regexp_engine*, %struct.regexp_engine** %eng, align 8
  %op_comp7 = getelementptr inbounds %struct.regexp_engine, %struct.regexp_engine* %21, i32 0, i32 11
  %22 = load %struct.p5rx* (%struct.sv**, i32, %struct.op*, %struct.regexp_engine*, %struct.p5rx*, i8*, i32, i32)*, %struct.p5rx* (%struct.sv**, i32, %struct.op*, %struct.regexp_engine*, %struct.p5rx*, i8*, i32, i32)** %op_comp7, align 8
  br label %cond.end9

cond.false8:                                      ; preds = %cond.end
  br label %cond.end9

cond.end9:                                        ; preds = %cond.false8, %cond.true6
  %cond10 = phi %struct.p5rx* (%struct.sv**, i32, %struct.op*, %struct.regexp_engine*, %struct.p5rx*, i8*, i32, i32)* [ %22, %cond.true6 ], [ @Perl_re_op_compile, %cond.false8 ]
  %23 = load %struct.sv**, %struct.sv*** %args, align 8
  %24 = load i32, i32* %nargs, align 4
  %25 = load %struct.pmop*, %struct.pmop** %pm, align 8
  %op_code_list = getelementptr inbounds %struct.pmop, %struct.pmop* %25, i32 0, i32 13
  %26 = load %struct.op*, %struct.op** %op_code_list, align 8
  %27 = load %struct.regexp_engine*, %struct.regexp_engine** %eng, align 8
  %28 = load %struct.p5rx*, %struct.p5rx** %re, align 8
  %29 = load %struct.pmop*, %struct.pmop** %pm, align 8
  %op_pmflags = getelementptr inbounds %struct.pmop, %struct.pmop* %29, i32 0, i32 10
  %30 = load i32, i32* %op_pmflags, align 8
  %and11 = and i32 %30, 4095
  %31 = load %struct.pmop*, %struct.pmop** %pm, align 8
  %op_pmflags12 = getelementptr inbounds %struct.pmop, %struct.pmop* %31, i32 0, i32 10
  %32 = load i32, i32* %op_pmflags12, align 8
  %33 = load %struct.op*, %struct.op** @PL_op, align 8
  %op_flags13 = getelementptr inbounds %struct.op, %struct.op* %33, i32 0, i32 5
  %34 = load i8, i8* %op_flags13, align 2
  %conv14 = zext i8 %34 to i32
  %and15 = and i32 %conv14, 128
  %tobool16 = icmp ne i32 %and15, 0
  %35 = zext i1 %tobool16 to i64
  %cond17 = select i1 %tobool16, i32 -2147483648, i32 0
  %or = or i32 %32, %cond17
  %call18 = call %struct.p5rx* %cond10(%struct.sv** %23, i32 %24, %struct.op* %26, %struct.regexp_engine* %27, %struct.p5rx* %28, i8* %is_bare_re, i32 %and11, i32 %or)
  store %struct.p5rx* %call18, %struct.p5rx** %new_re, align 8
  %36 = load %struct.pmop*, %struct.pmop** %pm, align 8
  %op_pmflags19 = getelementptr inbounds %struct.pmop, %struct.pmop* %36, i32 0, i32 10
  %37 = load i32, i32* %op_pmflags19, align 8
  %and20 = and i32 %37, 268435456
  %tobool21 = icmp ne i32 %and20, 0
  br i1 %tobool21, label %if.then22, label %if.end25

if.then22:                                        ; preds = %cond.end9
  %38 = load %struct.sv**, %struct.sv*** @PL_curpad, align 8
  %39 = load %struct.op*, %struct.op** @PL_op, align 8
  %op_targ = getelementptr inbounds %struct.op, %struct.op* %39, i32 0, i32 3
  %40 = load i64, i64* %op_targ, align 8
  %arrayidx = getelementptr inbounds %struct.sv*, %struct.sv** %38, i64 %40
  %41 = load %struct.sv*, %struct.sv** %arrayidx, align 8
  %42 = bitcast %struct.sv* %41 to i8*
  %43 = bitcast i8* %42 to %struct.sv*
  %call23 = call %struct.sv* @S_SvREFCNT_inc(%struct.sv* %43)
  %44 = bitcast %struct.sv* %call23 to %struct.cv*
  %45 = load %struct.p5rx*, %struct.p5rx** %new_re, align 8
  %call24 = call %struct.regexp* @S_ReANY(%struct.p5rx* %45)
  %qr_anoncv = getelementptr inbounds %struct.regexp, %struct.regexp* %call24, i32 0, i32 25
  store %struct.cv* %44, %struct.cv** %qr_anoncv, align 8
  br label %if.end25

if.end25:                                         ; preds = %if.then22, %cond.end9
  %46 = load i8, i8* %is_bare_re, align 1
  %tobool26 = trunc i8 %46 to i1
  br i1 %tobool26, label %if.then27, label %if.end72

if.then27:                                        ; preds = %if.end25
  %47 = load %struct.pmop*, %struct.pmop** %pm, align 8
  %op_type = getelementptr inbounds %struct.pmop, %struct.pmop* %47, i32 0, i32 4
  %bf.load = load i16, i16* %op_type, align 8
  %bf.clear = and i16 %bf.load, 511
  %bf.cast = zext i16 %bf.clear to i32
  %cmp = icmp eq i32 %bf.cast, 31
  br i1 %cmp, label %if.then29, label %if.end70

if.then29:                                        ; preds = %if.then27
  %48 = load i8, i8* @PL_tainted, align 1
  %tobool30 = trunc i8 %48 to i1
  %frombool = zext i1 %tobool30 to i8
  store i8 %frombool, i8* %was_tainted, align 1
  %49 = load %struct.pmop*, %struct.pmop** %pm, align 8
  %op_flags31 = getelementptr inbounds %struct.pmop, %struct.pmop* %49, i32 0, i32 5
  %50 = load i8, i8* %op_flags31, align 2
  %conv32 = zext i8 %50 to i32
  %and33 = and i32 %conv32, 64
  %tobool34 = icmp ne i32 %and33, 0
  br i1 %tobool34, label %if.then35, label %if.else37

if.then35:                                        ; preds = %if.then29
  %51 = load %struct.sv**, %struct.sv*** %args, align 8
  %arrayidx36 = getelementptr inbounds %struct.sv*, %struct.sv** %51, i64 -1
  %52 = load %struct.sv*, %struct.sv** %arrayidx36, align 8
  store %struct.sv* %52, %struct.sv** %lhs, align 8
  br label %if.end61

if.else37:                                        ; preds = %if.then29
  %53 = load %struct.pmop*, %struct.pmop** %pm, align 8
  %op_targ38 = getelementptr inbounds %struct.pmop, %struct.pmop* %53, i32 0, i32 3
  %54 = load i64, i64* %op_targ38, align 8
  %tobool39 = icmp ne i64 %54, 0
  br i1 %tobool39, label %if.then40, label %if.else43

if.then40:                                        ; preds = %if.else37
  %55 = load %struct.sv**, %struct.sv*** @PL_curpad, align 8
  %56 = load %struct.pmop*, %struct.pmop** %pm, align 8
  %op_targ41 = getelementptr inbounds %struct.pmop, %struct.pmop* %56, i32 0, i32 3
  %57 = load i64, i64* %op_targ41, align 8
  %arrayidx42 = getelementptr inbounds %struct.sv*, %struct.sv** %55, i64 %57
  %58 = load %struct.sv*, %struct.sv** %arrayidx42, align 8
  store %struct.sv* %58, %struct.sv** %lhs, align 8
  br label %if.end60

if.else43:                                        ; preds = %if.else37
  %59 = load %struct.gv*, %struct.gv** @PL_defgv, align 8
  %sv_u = getelementptr inbounds %struct.gv, %struct.gv* %59, i32 0, i32 3
  %svu_gp = bitcast %union.anon.4* %sv_u to %struct.gp**
  %60 = load %struct.gp*, %struct.gp** %svu_gp, align 8
  %add.ptr44 = getelementptr inbounds %struct.gp, %struct.gp* %60, i64 0
  %gp_sv = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr44, i32 0, i32 0
  %61 = load %struct.sv*, %struct.sv** %gp_sv, align 8
  %tobool45 = icmp ne %struct.sv* %61, null
  br i1 %tobool45, label %cond.true46, label %cond.false51

cond.true46:                                      ; preds = %if.else43
  %62 = load %struct.gv*, %struct.gv** @PL_defgv, align 8
  %sv_u47 = getelementptr inbounds %struct.gv, %struct.gv* %62, i32 0, i32 3
  %svu_gp48 = bitcast %union.anon.4* %sv_u47 to %struct.gp**
  %63 = load %struct.gp*, %struct.gp** %svu_gp48, align 8
  %add.ptr49 = getelementptr inbounds %struct.gp, %struct.gp* %63, i64 0
  %gp_sv50 = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr49, i32 0, i32 0
  br label %cond.end57

cond.false51:                                     ; preds = %if.else43
  %64 = load %struct.gv*, %struct.gv** @PL_defgv, align 8
  %call52 = call %struct.gv* @Perl_gv_add_by_type(%struct.gv* %64, i32 0)
  %sv_u53 = getelementptr inbounds %struct.gv, %struct.gv* %call52, i32 0, i32 3
  %svu_gp54 = bitcast %union.anon.4* %sv_u53 to %struct.gp**
  %65 = load %struct.gp*, %struct.gp** %svu_gp54, align 8
  %add.ptr55 = getelementptr inbounds %struct.gp, %struct.gp* %65, i64 0
  %gp_sv56 = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr55, i32 0, i32 0
  br label %cond.end57

cond.end57:                                       ; preds = %cond.false51, %cond.true46
  %cond58 = phi %struct.sv** [ %gp_sv50, %cond.true46 ], [ %gp_sv56, %cond.false51 ]
  %66 = load %struct.sv*, %struct.sv** %cond58, align 8
  %add.ptr59 = getelementptr inbounds %struct.sv, %struct.sv* %66, i64 0
  store %struct.sv* %add.ptr59, %struct.sv** %lhs, align 8
  br label %if.end60

if.end60:                                         ; preds = %cond.end57, %if.then40
  br label %if.end61

if.end61:                                         ; preds = %if.end60, %if.then35
  %67 = load %struct.sv*, %struct.sv** %lhs, align 8
  %sv_flags = getelementptr inbounds %struct.sv, %struct.sv* %67, i32 0, i32 2
  %68 = load i32, i32* %sv_flags, align 4
  %and62 = and i32 %68, 2097152
  %tobool63 = icmp ne i32 %and62, 0
  br i1 %tobool63, label %cond.true64, label %cond.false65

cond.true64:                                      ; preds = %if.end61
  br i1 true, label %land.rhs, label %land.end

cond.false65:                                     ; preds = %if.end61
  br i1 false, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %cond.false65, %cond.true64
  %69 = load %struct.sv*, %struct.sv** %lhs, align 8
  %call66 = call i32 @Perl_mg_get(%struct.sv* %69)
  %tobool67 = icmp ne i32 %call66, 0
  br label %land.end

land.end:                                         ; preds = %land.rhs, %cond.false65, %cond.true64
  %70 = phi i1 [ false, %cond.false65 ], [ false, %cond.true64 ], [ %tobool67, %land.rhs ]
  %land.ext = zext i1 %70 to i32
  %71 = load i8, i8* %was_tainted, align 1
  %tobool68 = trunc i8 %71 to i1
  %frombool69 = zext i1 %tobool68 to i8
  store i8 %frombool69, i8* @PL_tainted, align 1
  br label %if.end70

if.end70:                                         ; preds = %land.end, %if.then27
  %72 = load %struct.p5rx*, %struct.p5rx** %new_re, align 8
  %call71 = call %struct.p5rx* @Perl_reg_temp_copy(%struct.p5rx* null, %struct.p5rx* %72)
  store %struct.p5rx* %call71, %struct.p5rx** %tmp, align 8
  %73 = load %struct.p5rx*, %struct.p5rx** %new_re, align 8
  %74 = bitcast %struct.p5rx* %73 to i8*
  %75 = bitcast i8* %74 to %struct.sv*
  call void @S_SvREFCNT_dec(%struct.sv* %75)
  %76 = load %struct.p5rx*, %struct.p5rx** %tmp, align 8
  store %struct.p5rx* %76, %struct.p5rx** %new_re, align 8
  br label %if.end72

if.end72:                                         ; preds = %if.end70, %if.end25
  %77 = load %struct.p5rx*, %struct.p5rx** %re, align 8
  %78 = load %struct.p5rx*, %struct.p5rx** %new_re, align 8
  %cmp73 = icmp ne %struct.p5rx* %77, %78
  br i1 %cmp73, label %if.then75, label %if.end77

if.then75:                                        ; preds = %if.end72
  %79 = load %struct.p5rx*, %struct.p5rx** %re, align 8
  %80 = bitcast %struct.p5rx* %79 to i8*
  %81 = bitcast i8* %80 to %struct.sv*
  call void @S_SvREFCNT_dec(%struct.sv* %81)
  %82 = load %struct.p5rx*, %struct.p5rx** %new_re, align 8
  %83 = load %struct.pmop*, %struct.pmop** %pm, align 8
  %op_pmregexp76 = getelementptr inbounds %struct.pmop, %struct.pmop* %83, i32 0, i32 9
  store %struct.p5rx* %82, %struct.p5rx** %op_pmregexp76, align 8
  br label %if.end77

if.end77:                                         ; preds = %if.then75, %if.end72
  %84 = load i8, i8* @PL_tainting, align 1
  %tobool78 = trunc i8 %84 to i1
  br i1 %tobool78, label %land.lhs.true, label %if.end91

land.lhs.true:                                    ; preds = %if.end77
  %85 = load i8, i8* @PL_tainted, align 1
  %tobool80 = trunc i8 %85 to i1
  br i1 %tobool80, label %if.then82, label %if.end91

if.then82:                                        ; preds = %land.lhs.true
  br label %do.body

do.body:                                          ; preds = %if.then82
  %86 = load i8, i8* @PL_tainting, align 1
  %tobool83 = trunc i8 %86 to i1
  br i1 %tobool83, label %cond.true85, label %cond.false86

cond.true85:                                      ; preds = %do.body
  br i1 true, label %if.then87, label %if.end88

cond.false86:                                     ; preds = %do.body
  br i1 false, label %if.then87, label %if.end88

if.then87:                                        ; preds = %cond.false86, %cond.true85
  %87 = load %struct.p5rx*, %struct.p5rx** %new_re, align 8
  %88 = bitcast %struct.p5rx* %87 to %struct.sv*
  call void @Perl_sv_magic(%struct.sv* %88, %struct.sv* null, i32 116, i8* null, i32 0)
  br label %if.end88

if.end88:                                         ; preds = %if.then87, %cond.false86, %cond.true85
  br label %do.end

do.end:                                           ; preds = %if.end88
  %89 = load %struct.p5rx*, %struct.p5rx** %new_re, align 8
  %call89 = call %struct.regexp* @S_ReANY(%struct.p5rx* %89)
  %extflags = getelementptr inbounds %struct.regexp, %struct.regexp* %call89, i32 0, i32 7
  %90 = load i32, i32* %extflags, align 8
  %or90 = or i32 %90, 134217728
  store i32 %or90, i32* %extflags, align 8
  br label %if.end91

if.end91:                                         ; preds = %do.end, %land.lhs.true, %if.end77
  %91 = load %struct.pmop*, %struct.pmop** %pm, align 8
  %op_pmregexp92 = getelementptr inbounds %struct.pmop, %struct.pmop* %91, i32 0, i32 9
  %92 = load %struct.p5rx*, %struct.p5rx** %op_pmregexp92, align 8
  %sv_any = getelementptr inbounds %struct.p5rx, %struct.p5rx* %92, i32 0, i32 0
  %93 = load %struct.regexp*, %struct.regexp** %sv_any, align 8
  %94 = bitcast %struct.regexp* %93 to %struct.xpv*
  %xpv_cur = getelementptr inbounds %struct.xpv, %struct.xpv* %94, i32 0, i32 2
  %95 = load i64, i64* %xpv_cur, align 8
  %96 = load %struct.pmop*, %struct.pmop** %pm, align 8
  %op_pmregexp93 = getelementptr inbounds %struct.pmop, %struct.pmop* %96, i32 0, i32 9
  %97 = load %struct.p5rx*, %struct.p5rx** %op_pmregexp93, align 8
  %call94 = call %struct.regexp* @S_ReANY(%struct.p5rx* %97)
  %pre_prefix = getelementptr inbounds %struct.regexp, %struct.regexp* %call94, i32 0, i32 24
  %bf.load95 = load i16, i16* %pre_prefix, align 8
  %bf.clear96 = and i16 %bf.load95, 15
  %bf.cast97 = zext i16 %bf.clear96 to i32
  %conv98 = zext i32 %bf.cast97 to i64
  %sub = sub i64 %95, %conv98
  %sub99 = sub i64 %sub, 1
  %tobool100 = icmp ne i64 %sub99, 0
  br i1 %tobool100, label %if.end104, label %land.lhs.true101

land.lhs.true101:                                 ; preds = %if.end91
  %98 = load %struct.pmop*, %struct.pmop** @PL_curpm, align 8
  %tobool102 = icmp ne %struct.pmop* %98, null
  br i1 %tobool102, label %if.then103, label %if.end104

if.then103:                                       ; preds = %land.lhs.true101
  %99 = load %struct.pmop*, %struct.pmop** @PL_curpm, align 8
  store %struct.pmop* %99, %struct.pmop** %pm, align 8
  br label %if.end104

if.end104:                                        ; preds = %if.then103, %land.lhs.true101, %if.end91
  %100 = load %struct.pmop*, %struct.pmop** %pm, align 8
  %op_pmflags105 = getelementptr inbounds %struct.pmop, %struct.pmop* %100, i32 0, i32 10
  %101 = load i32, i32* %op_pmflags105, align 8
  %and106 = and i32 %101, 8388608
  %tobool107 = icmp ne i32 %and106, 0
  br i1 %tobool107, label %if.then108, label %if.end113

if.then108:                                       ; preds = %if.end104
  %102 = load %struct.pmop*, %struct.pmop** %pm, align 8
  %op_private = getelementptr inbounds %struct.pmop, %struct.pmop* %102, i32 0, i32 6
  %103 = load i8, i8* %op_private, align 1
  %conv109 = zext i8 %103 to i32
  %and110 = and i32 %conv109, -65
  %conv111 = trunc i32 %and110 to i8
  store i8 %conv111, i8* %op_private, align 1
  %104 = load %struct.op*, %struct.op** @PL_op, align 8
  %op_next = getelementptr inbounds %struct.op, %struct.op* %104, i32 0, i32 0
  %105 = load %struct.op*, %struct.op** %op_next, align 8
  %106 = load %struct.op*, %struct.op** @PL_op, align 8
  %107 = bitcast %struct.op* %106 to %struct.logop*
  %op_first = getelementptr inbounds %struct.logop, %struct.logop* %107, i32 0, i32 7
  %108 = load %struct.op*, %struct.op** %op_first, align 8
  %op_next112 = getelementptr inbounds %struct.op, %struct.op* %108, i32 0, i32 0
  store %struct.op* %105, %struct.op** %op_next112, align 8
  br label %if.end113

if.end113:                                        ; preds = %if.then108, %if.end104
  %109 = load %struct.sv**, %struct.sv*** %args, align 8
  %add.ptr114 = getelementptr inbounds %struct.sv*, %struct.sv** %109, i64 -1
  store %struct.sv** %add.ptr114, %struct.sv*** %sp, align 8
  %110 = load %struct.sv**, %struct.sv*** %sp, align 8
  store %struct.sv** %110, %struct.sv*** @PL_stack_sp, align 8
  %111 = load %struct.op*, %struct.op** @PL_op, align 8
  %op_next115 = getelementptr inbounds %struct.op, %struct.op* %111, i32 0, i32 0
  %112 = load %struct.op*, %struct.op** %op_next115, align 8
  ret %struct.op* %112
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.regexp* @S_ReANY(%struct.p5rx* %re) #0 {
entry:
  %re.addr = alloca %struct.p5rx*, align 8
  store %struct.p5rx* %re, %struct.p5rx** %re.addr, align 8
  %0 = load %struct.p5rx*, %struct.p5rx** %re.addr, align 8
  %sv_u = getelementptr inbounds %struct.p5rx, %struct.p5rx* %0, i32 0, i32 3
  %svu_rx = bitcast %union.anon.7* %sv_u to %struct.regexp**
  %1 = load %struct.regexp*, %struct.regexp** %svu_rx, align 8
  ret %struct.regexp* %1
}

declare dso_local %struct.regexp_engine* @Perl_current_re_engine() #1

declare dso_local %struct.p5rx* @Perl_re_op_compile(%struct.sv**, i32, %struct.op*, %struct.regexp_engine*, %struct.p5rx*, i8*, i32, i32) #1

; Function Attrs: noinline nounwind uwtable
define internal %struct.sv* @S_SvREFCNT_inc(%struct.sv* %sv) #0 {
entry:
  %sv.addr = alloca %struct.sv*, align 8
  store %struct.sv* %sv, %struct.sv** %sv.addr, align 8
  %0 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %cmp = icmp ne %struct.sv* %0, null
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  br i1 true, label %if.then, label %if.end

cond.false:                                       ; preds = %entry
  br i1 false, label %if.then, label %if.end

if.then:                                          ; preds = %cond.false, %cond.true
  %1 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %sv_refcnt = getelementptr inbounds %struct.sv, %struct.sv* %1, i32 0, i32 1
  %2 = load i32, i32* %sv_refcnt, align 8
  %inc = add i32 %2, 1
  store i32 %inc, i32* %sv_refcnt, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %cond.false, %cond.true
  %3 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  ret %struct.sv* %3
}

declare dso_local %struct.gv* @Perl_gv_add_by_type(%struct.gv*, i32) #1

declare dso_local i32 @Perl_mg_get(%struct.sv*) #1

declare dso_local %struct.p5rx* @Perl_reg_temp_copy(%struct.p5rx*, %struct.p5rx*) #1

; Function Attrs: noinline nounwind uwtable
define internal void @S_SvREFCNT_dec(%struct.sv* %sv) #0 {
entry:
  %sv.addr = alloca %struct.sv*, align 8
  %rc = alloca i32, align 4
  store %struct.sv* %sv, %struct.sv** %sv.addr, align 8
  %0 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %cmp = icmp ne %struct.sv* %0, null
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  br i1 true, label %if.then, label %if.end6

cond.false:                                       ; preds = %entry
  br i1 false, label %if.then, label %if.end6

if.then:                                          ; preds = %cond.false, %cond.true
  %1 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %sv_refcnt = getelementptr inbounds %struct.sv, %struct.sv* %1, i32 0, i32 1
  %2 = load i32, i32* %sv_refcnt, align 8
  store i32 %2, i32* %rc, align 4
  %3 = load i32, i32* %rc, align 4
  %cmp1 = icmp ugt i32 %3, 1
  br i1 %cmp1, label %cond.true2, label %cond.false3

cond.true2:                                       ; preds = %if.then
  br i1 true, label %if.then4, label %if.else

cond.false3:                                      ; preds = %if.then
  br i1 false, label %if.then4, label %if.else

if.then4:                                         ; preds = %cond.false3, %cond.true2
  %4 = load i32, i32* %rc, align 4
  %sub = sub i32 %4, 1
  %5 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %sv_refcnt5 = getelementptr inbounds %struct.sv, %struct.sv* %5, i32 0, i32 1
  store i32 %sub, i32* %sv_refcnt5, align 8
  br label %if.end

if.else:                                          ; preds = %cond.false3, %cond.true2
  %6 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %7 = load i32, i32* %rc, align 4
  call void @Perl_sv_free2(%struct.sv* %6, i32 %7)
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then4
  br label %if.end6

if.end6:                                          ; preds = %if.end, %cond.false, %cond.true
  ret void
}

declare dso_local void @Perl_sv_magic(%struct.sv*, %struct.sv*, i32, i8*, i32) #1

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.op* @Perl_pp_substcont() #0 {
entry:
  %retval = alloca %struct.op*, align 8
  %sp = alloca %struct.sv**, align 8
  %cx = alloca %struct.context*, align 8
  %pm = alloca %struct.pmop*, align 8
  %dstr = alloca %struct.sv*, align 8
  %s = alloca i8*, align 8
  %m = alloca i8*, align 8
  %orig = alloca i8*, align 8
  %rx = alloca %struct.p5rx*, align 8
  %nsv = alloca %struct.sv*, align 8
  %old = alloca %struct.p5rx*, align 8
  %saviters = alloca i64, align 8
  %targ = alloca %struct.sv*, align 8
  %zok = alloca i64, align 8
  %sv = alloca %struct.sv*, align 8
  %mg = alloca %struct.magic*, align 8
  %0 = load %struct.sv**, %struct.sv*** @PL_stack_sp, align 8
  store %struct.sv** %0, %struct.sv*** %sp, align 8
  %1 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %si_cxstack = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %1, i32 0, i32 1
  %2 = load %struct.context*, %struct.context** %si_cxstack, align 8
  %3 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %si_cxix = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %3, i32 0, i32 4
  %4 = load i32, i32* %si_cxix, align 8
  %idxprom = sext i32 %4 to i64
  %arrayidx = getelementptr inbounds %struct.context, %struct.context* %2, i64 %idxprom
  store %struct.context* %arrayidx, %struct.context** %cx, align 8
  %5 = load %struct.op*, %struct.op** @PL_op, align 8
  %6 = bitcast %struct.op* %5 to %struct.logop*
  %op_other = getelementptr inbounds %struct.logop, %struct.logop* %6, i32 0, i32 8
  %7 = load %struct.op*, %struct.op** %op_other, align 8
  %8 = bitcast %struct.op* %7 to %struct.pmop*
  store %struct.pmop* %8, %struct.pmop** %pm, align 8
  %9 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u = getelementptr inbounds %struct.context, %struct.context* %9, i32 0, i32 0
  %cx_subst = bitcast %union.anon.16* %cx_u to %struct.subst*
  %sbu_dstr = getelementptr inbounds %struct.subst, %struct.subst* %cx_subst, i32 0, i32 7
  %10 = load %struct.sv*, %struct.sv** %sbu_dstr, align 8
  store %struct.sv* %10, %struct.sv** %dstr, align 8
  %11 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u1 = getelementptr inbounds %struct.context, %struct.context* %11, i32 0, i32 0
  %cx_subst2 = bitcast %union.anon.16* %cx_u1 to %struct.subst*
  %sbu_s = getelementptr inbounds %struct.subst, %struct.subst* %cx_subst2, i32 0, i32 9
  %12 = load i8*, i8** %sbu_s, align 8
  store i8* %12, i8** %s, align 8
  %13 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u3 = getelementptr inbounds %struct.context, %struct.context* %13, i32 0, i32 0
  %cx_subst4 = bitcast %union.anon.16* %cx_u3 to %struct.subst*
  %sbu_m = getelementptr inbounds %struct.subst, %struct.subst* %cx_subst4, i32 0, i32 10
  %14 = load i8*, i8** %sbu_m, align 8
  store i8* %14, i8** %m, align 8
  %15 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u5 = getelementptr inbounds %struct.context, %struct.context* %15, i32 0, i32 0
  %cx_subst6 = bitcast %union.anon.16* %cx_u5 to %struct.subst*
  %sbu_orig = getelementptr inbounds %struct.subst, %struct.subst* %cx_subst6, i32 0, i32 6
  %16 = load i8*, i8** %sbu_orig, align 8
  store i8* %16, i8** %orig, align 8
  %17 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u7 = getelementptr inbounds %struct.context, %struct.context* %17, i32 0, i32 0
  %cx_subst8 = bitcast %union.anon.16* %cx_u7 to %struct.subst*
  %sbu_rx = getelementptr inbounds %struct.subst, %struct.subst* %cx_subst8, i32 0, i32 13
  %18 = load %struct.p5rx*, %struct.p5rx** %sbu_rx, align 8
  store %struct.p5rx* %18, %struct.p5rx** %rx, align 8
  store %struct.sv* null, %struct.sv** %nsv, align 8
  %19 = load %struct.pmop*, %struct.pmop** %pm, align 8
  %op_pmregexp = getelementptr inbounds %struct.pmop, %struct.pmop* %19, i32 0, i32 9
  %20 = load %struct.p5rx*, %struct.p5rx** %op_pmregexp, align 8
  store %struct.p5rx* %20, %struct.p5rx** %old, align 8
  %21 = load i32, i32* @PL_sig_pending, align 4
  %tobool = icmp ne i32 %21, 0
  br i1 %tobool, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  br i1 true, label %if.then, label %if.end

cond.false:                                       ; preds = %entry
  br i1 false, label %if.then, label %if.end

if.then:                                          ; preds = %cond.false, %cond.true
  %22 = load void ()*, void ()** @PL_signalhook, align 8
  call void %22()
  br label %if.end

if.end:                                           ; preds = %if.then, %cond.false, %cond.true
  %23 = load %struct.p5rx*, %struct.p5rx** %old, align 8
  %24 = load %struct.p5rx*, %struct.p5rx** %rx, align 8
  %cmp = icmp ne %struct.p5rx* %23, %24
  br i1 %cmp, label %if.then9, label %if.end14

if.then9:                                         ; preds = %if.end
  %25 = load %struct.p5rx*, %struct.p5rx** %old, align 8
  %tobool10 = icmp ne %struct.p5rx* %25, null
  br i1 %tobool10, label %if.then11, label %if.end12

if.then11:                                        ; preds = %if.then9
  %26 = load %struct.p5rx*, %struct.p5rx** %old, align 8
  %27 = bitcast %struct.p5rx* %26 to i8*
  %28 = bitcast i8* %27 to %struct.sv*
  call void @S_SvREFCNT_dec(%struct.sv* %28)
  br label %if.end12

if.end12:                                         ; preds = %if.then11, %if.then9
  %29 = load %struct.p5rx*, %struct.p5rx** %rx, align 8
  %30 = bitcast %struct.p5rx* %29 to i8*
  %31 = bitcast i8* %30 to %struct.sv*
  %call = call %struct.sv* @S_SvREFCNT_inc(%struct.sv* %31)
  %32 = bitcast %struct.sv* %call to %struct.p5rx*
  %33 = load %struct.pmop*, %struct.pmop** %pm, align 8
  %op_pmregexp13 = getelementptr inbounds %struct.pmop, %struct.pmop* %33, i32 0, i32 9
  store %struct.p5rx* %32, %struct.p5rx** %op_pmregexp13, align 8
  br label %if.end14

if.end14:                                         ; preds = %if.end12, %if.end
  %34 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u15 = getelementptr inbounds %struct.context, %struct.context* %34, i32 0, i32 0
  %cx_subst16 = bitcast %union.anon.16* %cx_u15 to %struct.subst*
  %sbu_rxres = getelementptr inbounds %struct.subst, %struct.subst* %cx_subst16, i32 0, i32 12
  %35 = load %struct.p5rx*, %struct.p5rx** %rx, align 8
  call void @S_rxres_restore(i8** %sbu_rxres, %struct.p5rx* %35)
  %36 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u17 = getelementptr inbounds %struct.context, %struct.context* %36, i32 0, i32 0
  %cx_subst18 = bitcast %union.anon.16* %cx_u17 to %struct.subst*
  %sbu_iters = getelementptr inbounds %struct.subst, %struct.subst* %cx_subst18, i32 0, i32 4
  %37 = load i64, i64* %sbu_iters, align 8
  %inc = add nsw i64 %37, 1
  store i64 %inc, i64* %sbu_iters, align 8
  %tobool19 = icmp ne i64 %37, 0
  br i1 %tobool19, label %if.then20, label %if.end336

if.then20:                                        ; preds = %if.end14
  %38 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u21 = getelementptr inbounds %struct.context, %struct.context* %38, i32 0, i32 0
  %cx_subst22 = bitcast %union.anon.16* %cx_u21 to %struct.subst*
  %sbu_iters23 = getelementptr inbounds %struct.subst, %struct.subst* %cx_subst22, i32 0, i32 4
  %39 = load i64, i64* %sbu_iters23, align 8
  store i64 %39, i64* %saviters, align 8
  %40 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u24 = getelementptr inbounds %struct.context, %struct.context* %40, i32 0, i32 0
  %cx_subst25 = bitcast %union.anon.16* %cx_u24 to %struct.subst*
  %sbu_iters26 = getelementptr inbounds %struct.subst, %struct.subst* %cx_subst25, i32 0, i32 4
  %41 = load i64, i64* %sbu_iters26, align 8
  %42 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u27 = getelementptr inbounds %struct.context, %struct.context* %42, i32 0, i32 0
  %cx_subst28 = bitcast %union.anon.16* %cx_u27 to %struct.subst*
  %sbu_maxiters = getelementptr inbounds %struct.subst, %struct.subst* %cx_subst28, i32 0, i32 5
  %43 = load i64, i64* %sbu_maxiters, align 8
  %cmp29 = icmp sgt i64 %41, %43
  br i1 %cmp29, label %if.then30, label %if.end32

if.then30:                                        ; preds = %if.then20
  %call31 = call %struct.op* (i8*, ...) @Perl_die(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0))
  store %struct.op* %call31, %struct.op** %retval, align 8
  br label %return

if.end32:                                         ; preds = %if.then20
  %44 = load %struct.sv**, %struct.sv*** %sp, align 8
  %45 = load %struct.sv*, %struct.sv** %44, align 8
  %sv_flags = getelementptr inbounds %struct.sv, %struct.sv* %45, i32 0, i32 2
  %46 = load i32, i32* %sv_flags, align 4
  %and = and i32 %46, 2097152
  %tobool33 = icmp ne i32 %and, 0
  br i1 %tobool33, label %cond.true34, label %cond.false35

cond.true34:                                      ; preds = %if.end32
  br i1 true, label %land.rhs, label %land.end

cond.false35:                                     ; preds = %if.end32
  br i1 false, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %cond.false35, %cond.true34
  %47 = load %struct.sv**, %struct.sv*** %sp, align 8
  %48 = load %struct.sv*, %struct.sv** %47, align 8
  %call36 = call i32 @Perl_mg_get(%struct.sv* %48)
  %tobool37 = icmp ne i32 %call36, 0
  br label %land.end

land.end:                                         ; preds = %land.rhs, %cond.false35, %cond.true34
  %49 = phi i1 [ false, %cond.false35 ], [ false, %cond.true34 ], [ %tobool37, %land.rhs ]
  %land.ext = zext i1 %49 to i32
  %50 = load %struct.sv**, %struct.sv*** %sp, align 8
  %51 = load %struct.sv*, %struct.sv** %50, align 8
  %sv_flags38 = getelementptr inbounds %struct.sv, %struct.sv* %51, i32 0, i32 2
  %52 = load i32, i32* %sv_flags38, align 4
  %and39 = and i32 %52, 14680064
  %tobool40 = icmp ne i32 %and39, 0
  br i1 %tobool40, label %land.lhs.true, label %if.end46

land.lhs.true:                                    ; preds = %land.end
  %53 = load %struct.sv**, %struct.sv*** %sp, align 8
  %54 = load %struct.sv*, %struct.sv** %53, align 8
  %call41 = call zeroext i1 @Perl_sv_tainted(%struct.sv* %54)
  br i1 %call41, label %if.then42, label %if.end46

if.then42:                                        ; preds = %land.lhs.true
  %55 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u43 = getelementptr inbounds %struct.context, %struct.context* %55, i32 0, i32 0
  %cx_subst44 = bitcast %union.anon.16* %cx_u43 to %struct.subst*
  %sbu_rxtainted = getelementptr inbounds %struct.subst, %struct.subst* %cx_subst44, i32 0, i32 2
  %56 = load i16, i16* %sbu_rxtainted, align 2
  %conv = zext i16 %56 to i32
  %or = or i32 %conv, 4
  %conv45 = trunc i32 %or to i16
  store i16 %conv45, i16* %sbu_rxtainted, align 2
  br label %if.end46

if.end46:                                         ; preds = %if.then42, %land.lhs.true, %land.end
  %57 = load %struct.sv*, %struct.sv** %dstr, align 8
  %58 = load %struct.sv**, %struct.sv*** %sp, align 8
  %incdec.ptr = getelementptr inbounds %struct.sv*, %struct.sv** %58, i32 -1
  store %struct.sv** %incdec.ptr, %struct.sv*** %sp, align 8
  %59 = load %struct.sv*, %struct.sv** %58, align 8
  call void @Perl_sv_catsv_flags(%struct.sv* %57, %struct.sv* %59, i32 0)
  %60 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u47 = getelementptr inbounds %struct.context, %struct.context* %60, i32 0, i32 0
  %cx_subst48 = bitcast %union.anon.16* %cx_u47 to %struct.subst*
  %sbu_type = getelementptr inbounds %struct.subst, %struct.subst* %cx_subst48, i32 0, i32 0
  %61 = load i8, i8* %sbu_type, align 8
  %conv49 = zext i8 %61 to i32
  %and50 = and i32 %conv49, 16
  %tobool51 = icmp ne i32 %and50, 0
  br i1 %tobool51, label %if.then65, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end46
  %62 = load i8*, i8** %s, align 8
  %63 = load i8*, i8** %orig, align 8
  %cmp52 = icmp ult i8* %62, %63
  br i1 %cmp52, label %if.then65, label %lor.lhs.false54

lor.lhs.false54:                                  ; preds = %lor.lhs.false
  %64 = load %struct.p5rx*, %struct.p5rx** %rx, align 8
  %call55 = call %struct.regexp* @S_ReANY(%struct.p5rx* %64)
  %engine = getelementptr inbounds %struct.regexp, %struct.regexp* %call55, i32 0, i32 4
  %65 = load %struct.regexp_engine*, %struct.regexp_engine** %engine, align 8
  %exec = getelementptr inbounds %struct.regexp_engine, %struct.regexp_engine* %65, i32 0, i32 1
  %66 = load i32 (%struct.p5rx*, i8*, i8*, i8*, i64, %struct.sv*, i8*, i32)*, i32 (%struct.p5rx*, i8*, i8*, i8*, i64, %struct.sv*, i8*, i32)** %exec, align 8
  %67 = load %struct.p5rx*, %struct.p5rx** %rx, align 8
  %68 = load i8*, i8** %s, align 8
  %69 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u56 = getelementptr inbounds %struct.context, %struct.context* %69, i32 0, i32 0
  %cx_subst57 = bitcast %union.anon.16* %cx_u56 to %struct.subst*
  %sbu_strend = getelementptr inbounds %struct.subst, %struct.subst* %cx_subst57, i32 0, i32 11
  %70 = load i8*, i8** %sbu_strend, align 8
  %71 = load i8*, i8** %orig, align 8
  %72 = load i8*, i8** %s, align 8
  %73 = load i8*, i8** %m, align 8
  %cmp58 = icmp eq i8* %72, %73
  %conv59 = zext i1 %cmp58 to i32
  %conv60 = sext i32 %conv59 to i64
  %74 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u61 = getelementptr inbounds %struct.context, %struct.context* %74, i32 0, i32 0
  %cx_subst62 = bitcast %union.anon.16* %cx_u61 to %struct.subst*
  %sbu_targ = getelementptr inbounds %struct.subst, %struct.subst* %cx_subst62, i32 0, i32 8
  %75 = load %struct.sv*, %struct.sv** %sbu_targ, align 8
  %call63 = call i32 %66(%struct.p5rx* %67, i8* %68, i8* %70, i8* %71, i64 %conv60, %struct.sv* %75, i8* null, i32 152)
  %tobool64 = icmp ne i32 %call63, 0
  br i1 %tobool64, label %if.end332, label %if.then65

if.then65:                                        ; preds = %lor.lhs.false54, %lor.lhs.false, %if.end46
  %76 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u66 = getelementptr inbounds %struct.context, %struct.context* %76, i32 0, i32 0
  %cx_subst67 = bitcast %union.anon.16* %cx_u66 to %struct.subst*
  %sbu_targ68 = getelementptr inbounds %struct.subst, %struct.subst* %cx_subst67, i32 0, i32 8
  %77 = load %struct.sv*, %struct.sv** %sbu_targ68, align 8
  store %struct.sv* %77, %struct.sv** %targ, align 8
  %78 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u69 = getelementptr inbounds %struct.context, %struct.context* %78, i32 0, i32 0
  %cx_subst70 = bitcast %union.anon.16* %cx_u69 to %struct.subst*
  %sbu_strend71 = getelementptr inbounds %struct.subst, %struct.subst* %cx_subst70, i32 0, i32 11
  %79 = load i8*, i8** %sbu_strend71, align 8
  %80 = load i8*, i8** %s, align 8
  %cmp72 = icmp ugt i8* %79, %80
  br i1 %cmp72, label %if.then74, label %if.end110

if.then74:                                        ; preds = %if.then65
  %81 = load %struct.sv*, %struct.sv** %dstr, align 8
  %sv_flags75 = getelementptr inbounds %struct.sv, %struct.sv* %81, i32 0, i32 2
  %82 = load i32, i32* %sv_flags75, align 4
  %and76 = and i32 %82, 536870912
  %tobool77 = icmp ne i32 %and76, 0
  br i1 %tobool77, label %land.lhs.true78, label %if.else102

land.lhs.true78:                                  ; preds = %if.then74
  %83 = load %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_hints = getelementptr inbounds %struct.cop, %struct.cop* %83, i32 0, i32 10
  %84 = load i32, i32* %cop_hints, align 8
  %add = add i32 %84, 0
  %and79 = and i32 %add, 8
  %tobool80 = icmp ne i32 %and79, 0
  br i1 %tobool80, label %if.else102, label %land.lhs.true81

land.lhs.true81:                                  ; preds = %land.lhs.true78
  %85 = load %struct.sv*, %struct.sv** %targ, align 8
  %sv_flags82 = getelementptr inbounds %struct.sv, %struct.sv* %85, i32 0, i32 2
  %86 = load i32, i32* %sv_flags82, align 4
  %and83 = and i32 %86, 536870912
  %tobool84 = icmp ne i32 %and83, 0
  br i1 %tobool84, label %if.else102, label %if.then85

if.then85:                                        ; preds = %land.lhs.true81
  br label %do.body

do.body:                                          ; preds = %if.then85
  %87 = load %struct.sv*, %struct.sv** %nsv, align 8
  %tobool86 = icmp ne %struct.sv* %87, null
  br i1 %tobool86, label %if.else, label %if.then87

if.then87:                                        ; preds = %do.body
  %88 = load i8*, i8** %s, align 8
  %89 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u88 = getelementptr inbounds %struct.context, %struct.context* %89, i32 0, i32 0
  %cx_subst89 = bitcast %union.anon.16* %cx_u88 to %struct.subst*
  %sbu_strend90 = getelementptr inbounds %struct.subst, %struct.subst* %cx_subst89, i32 0, i32 11
  %90 = load i8*, i8** %sbu_strend90, align 8
  %91 = load i8*, i8** %s, align 8
  %sub.ptr.lhs.cast = ptrtoint i8* %90 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %91 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %call91 = call %struct.sv* @Perl_newSVpvn_flags(i8* %88, i64 %sub.ptr.sub, i32 524288)
  store %struct.sv* %call91, %struct.sv** %nsv, align 8
  br label %if.end98

if.else:                                          ; preds = %do.body
  %92 = load %struct.sv*, %struct.sv** %nsv, align 8
  %93 = load i8*, i8** %s, align 8
  %94 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u92 = getelementptr inbounds %struct.context, %struct.context* %94, i32 0, i32 0
  %cx_subst93 = bitcast %union.anon.16* %cx_u92 to %struct.subst*
  %sbu_strend94 = getelementptr inbounds %struct.subst, %struct.subst* %cx_subst93, i32 0, i32 11
  %95 = load i8*, i8** %sbu_strend94, align 8
  %96 = load i8*, i8** %s, align 8
  %sub.ptr.lhs.cast95 = ptrtoint i8* %95 to i64
  %sub.ptr.rhs.cast96 = ptrtoint i8* %96 to i64
  %sub.ptr.sub97 = sub i64 %sub.ptr.lhs.cast95, %sub.ptr.rhs.cast96
  call void @Perl_sv_setpvn(%struct.sv* %92, i8* %93, i64 %sub.ptr.sub97)
  br label %if.end98

if.end98:                                         ; preds = %if.else, %if.then87
  %97 = load %struct.sv*, %struct.sv** %nsv, align 8
  %sv_flags99 = getelementptr inbounds %struct.sv, %struct.sv* %97, i32 0, i32 2
  %98 = load i32, i32* %sv_flags99, align 4
  %and100 = and i32 %98, -536870913
  store i32 %and100, i32* %sv_flags99, align 4
  %99 = load %struct.sv*, %struct.sv** %nsv, align 8
  %call101 = call i64 @Perl_sv_utf8_upgrade_flags_grow(%struct.sv* %99, i32 2, i64 0)
  %100 = load %struct.sv*, %struct.sv** %dstr, align 8
  %101 = load %struct.sv*, %struct.sv** %nsv, align 8
  call void @Perl_sv_catsv_flags(%struct.sv* %100, %struct.sv* %101, i32 0)
  br label %do.end

do.end:                                           ; preds = %if.end98
  br label %if.end109

if.else102:                                       ; preds = %land.lhs.true81, %land.lhs.true78, %if.then74
  %102 = load %struct.sv*, %struct.sv** %dstr, align 8
  %103 = load i8*, i8** %s, align 8
  %104 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u103 = getelementptr inbounds %struct.context, %struct.context* %104, i32 0, i32 0
  %cx_subst104 = bitcast %union.anon.16* %cx_u103 to %struct.subst*
  %sbu_strend105 = getelementptr inbounds %struct.subst, %struct.subst* %cx_subst104, i32 0, i32 11
  %105 = load i8*, i8** %sbu_strend105, align 8
  %106 = load i8*, i8** %s, align 8
  %sub.ptr.lhs.cast106 = ptrtoint i8* %105 to i64
  %sub.ptr.rhs.cast107 = ptrtoint i8* %106 to i64
  %sub.ptr.sub108 = sub i64 %sub.ptr.lhs.cast106, %sub.ptr.rhs.cast107
  call void @Perl_sv_catpvn_flags(%struct.sv* %102, i8* %103, i64 %sub.ptr.sub108, i32 0)
  br label %if.end109

if.end109:                                        ; preds = %if.else102, %do.end
  br label %if.end110

if.end110:                                        ; preds = %if.end109, %if.then65
  %107 = load %struct.p5rx*, %struct.p5rx** %rx, align 8
  %call111 = call %struct.regexp* @S_ReANY(%struct.p5rx* %107)
  %extflags = getelementptr inbounds %struct.regexp, %struct.regexp* %call111, i32 0, i32 7
  %108 = load i32, i32* %extflags, align 8
  %and112 = and i32 %108, 67108864
  %tobool113 = icmp ne i32 %and112, 0
  br i1 %tobool113, label %if.then114, label %if.end121

if.then114:                                       ; preds = %if.end110
  %109 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u115 = getelementptr inbounds %struct.context, %struct.context* %109, i32 0, i32 0
  %cx_subst116 = bitcast %union.anon.16* %cx_u115 to %struct.subst*
  %sbu_rxtainted117 = getelementptr inbounds %struct.subst, %struct.subst* %cx_subst116, i32 0, i32 2
  %110 = load i16, i16* %sbu_rxtainted117, align 2
  %conv118 = zext i16 %110 to i32
  %or119 = or i32 %conv118, 2
  %conv120 = trunc i32 %or119 to i16
  store i16 %conv120, i16* %sbu_rxtainted117, align 2
  br label %if.end121

if.end121:                                        ; preds = %if.then114, %if.end110
  %111 = load %struct.pmop*, %struct.pmop** %pm, align 8
  %op_pmflags = getelementptr inbounds %struct.pmop, %struct.pmop* %111, i32 0, i32 10
  %112 = load i32, i32* %op_pmflags, align 8
  %and122 = and i32 %112, 134217728
  %tobool123 = icmp ne i32 %and122, 0
  br i1 %tobool123, label %if.then124, label %if.else126

if.then124:                                       ; preds = %if.end121
  %113 = load %struct.sv*, %struct.sv** %dstr, align 8
  %114 = load %struct.sv**, %struct.sv*** %sp, align 8
  %incdec.ptr125 = getelementptr inbounds %struct.sv*, %struct.sv** %114, i32 1
  store %struct.sv** %incdec.ptr125, %struct.sv*** %sp, align 8
  store %struct.sv* %113, %struct.sv** %incdec.ptr125, align 8
  %115 = load %struct.sv*, %struct.sv** %dstr, align 8
  store %struct.sv* %115, %struct.sv** %targ, align 8
  br label %if.end221

if.else126:                                       ; preds = %if.end121
  %116 = load %struct.sv*, %struct.sv** %targ, align 8
  %sv_flags127 = getelementptr inbounds %struct.sv, %struct.sv* %116, i32 0, i32 2
  %117 = load i32, i32* %sv_flags127, align 4
  %and128 = and i32 %117, 427886592
  %tobool129 = icmp ne i32 %and128, 0
  br i1 %tobool129, label %if.then130, label %if.end131

if.then130:                                       ; preds = %if.else126
  %118 = load %struct.sv*, %struct.sv** %targ, align 8
  call void @Perl_sv_force_normal_flags(%struct.sv* %118, i32 4)
  br label %if.end131

if.end131:                                        ; preds = %if.then130, %if.else126
  %119 = load %struct.sv*, %struct.sv** %targ, align 8
  %sv_flags132 = getelementptr inbounds %struct.sv, %struct.sv* %119, i32 0, i32 2
  %120 = load i32, i32* %sv_flags132, align 4
  %and133 = and i32 %120, 255
  %cmp134 = icmp eq i32 %and133, 9
  br i1 %cmp134, label %if.then136, label %if.end137

if.then136:                                       ; preds = %if.end131
  call void @Perl_croak_no_modify()
  br label %if.end137

if.end137:                                        ; preds = %if.then136, %if.end131
  br label %do.body138

do.body138:                                       ; preds = %if.end137
  %121 = load %struct.sv*, %struct.sv** %targ, align 8
  %sv_any = getelementptr inbounds %struct.sv, %struct.sv* %121, i32 0, i32 0
  %122 = load i8*, i8** %sv_any, align 8
  %123 = bitcast i8* %122 to %struct.xpv*
  %xpv_len_u = getelementptr inbounds %struct.xpv, %struct.xpv* %123, i32 0, i32 3
  %xpvlenu_len = bitcast %union.anon.26* %xpv_len_u to i64*
  %124 = load i64, i64* %xpvlenu_len, align 8
  %tobool139 = icmp ne i64 %124, 0
  br i1 %tobool139, label %if.then140, label %if.end178

if.then140:                                       ; preds = %do.body138
  %125 = load %struct.sv*, %struct.sv** %targ, align 8
  %sv_flags141 = getelementptr inbounds %struct.sv, %struct.sv* %125, i32 0, i32 2
  %126 = load i32, i32* %sv_flags141, align 4
  %and142 = and i32 %126, 33554432
  %tobool143 = icmp ne i32 %and142, 0
  br i1 %tobool143, label %cond.true144, label %cond.false145

cond.true144:                                     ; preds = %if.then140
  br i1 true, label %if.then146, label %if.end175

cond.false145:                                    ; preds = %if.then140
  br i1 false, label %if.then146, label %if.end175

if.then146:                                       ; preds = %cond.false145, %cond.true144
  br label %do.body147

do.body147:                                       ; preds = %if.then146
  %127 = load %struct.sv*, %struct.sv** %targ, align 8
  %sv_flags148 = getelementptr inbounds %struct.sv, %struct.sv* %127, i32 0, i32 2
  %128 = load i32, i32* %sv_flags148, align 4
  %and149 = and i32 %128, 33554432
  %tobool150 = icmp ne i32 %and149, 0
  br i1 %tobool150, label %if.then151, label %if.else162

if.then151:                                       ; preds = %do.body147
  %129 = load %struct.sv*, %struct.sv** %targ, align 8
  %sv_u = getelementptr inbounds %struct.sv, %struct.sv* %129, i32 0, i32 3
  %svu_pv = bitcast %union.anon* %sv_u to i8**
  %130 = load i8*, i8** %svu_pv, align 8
  %add.ptr = getelementptr inbounds i8, i8* %130, i64 0
  %arrayidx152 = getelementptr inbounds i8, i8* %add.ptr, i64 -1
  %131 = load i8, i8* %arrayidx152, align 1
  %conv153 = zext i8 %131 to i64
  store i64 %conv153, i64* %zok, align 8
  %132 = load i64, i64* %zok, align 8
  %tobool154 = icmp ne i64 %132, 0
  br i1 %tobool154, label %if.end161, label %if.then155

if.then155:                                       ; preds = %if.then151
  %133 = bitcast i64* %zok to i8*
  %134 = load %struct.sv*, %struct.sv** %targ, align 8
  %sv_u156 = getelementptr inbounds %struct.sv, %struct.sv* %134, i32 0, i32 3
  %svu_pv157 = bitcast %union.anon* %sv_u156 to i8**
  %135 = load i8*, i8** %svu_pv157, align 8
  %add.ptr158 = getelementptr inbounds i8, i8* %135, i64 0
  %add.ptr159 = getelementptr inbounds i8, i8* %add.ptr158, i64 -1
  %add.ptr160 = getelementptr inbounds i8, i8* %add.ptr159, i64 -8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %133, i8* align 1 %add.ptr160, i64 8, i1 false)
  br label %if.end161

if.end161:                                        ; preds = %if.then155, %if.then151
  br label %if.end163

if.else162:                                       ; preds = %do.body147
  store i64 0, i64* %zok, align 8
  br label %if.end163

if.end163:                                        ; preds = %if.else162, %if.end161
  br label %do.end164

do.end164:                                        ; preds = %if.end163
  br label %do.body165

do.body165:                                       ; preds = %do.end164
  %136 = load %struct.sv*, %struct.sv** %targ, align 8
  %sv_u166 = getelementptr inbounds %struct.sv, %struct.sv* %136, i32 0, i32 3
  %svu_pv167 = bitcast %union.anon* %sv_u166 to i8**
  %137 = load i8*, i8** %svu_pv167, align 8
  %add.ptr168 = getelementptr inbounds i8, i8* %137, i64 0
  %138 = load i64, i64* %zok, align 8
  %idx.neg = sub i64 0, %138
  %add.ptr169 = getelementptr inbounds i8, i8* %add.ptr168, i64 %idx.neg
  %139 = load %struct.sv*, %struct.sv** %targ, align 8
  %sv_u170 = getelementptr inbounds %struct.sv, %struct.sv* %139, i32 0, i32 3
  %svu_pv171 = bitcast %union.anon* %sv_u170 to i8**
  store i8* %add.ptr169, i8** %svu_pv171, align 8
  br label %do.end172

do.end172:                                        ; preds = %do.body165
  %140 = load %struct.sv*, %struct.sv** %targ, align 8
  %sv_flags173 = getelementptr inbounds %struct.sv, %struct.sv* %140, i32 0, i32 2
  %141 = load i32, i32* %sv_flags173, align 4
  %and174 = and i32 %141, -33554433
  store i32 %and174, i32* %sv_flags173, align 4
  br label %if.end175

if.end175:                                        ; preds = %do.end172, %cond.false145, %cond.true144
  %142 = load %struct.sv*, %struct.sv** %targ, align 8
  %sv_u176 = getelementptr inbounds %struct.sv, %struct.sv* %142, i32 0, i32 3
  %svu_pv177 = bitcast %union.anon* %sv_u176 to i8**
  %143 = load i8*, i8** %svu_pv177, align 8
  call void @Perl_safesysfree(i8* %143)
  br label %if.end178

if.end178:                                        ; preds = %if.end175, %do.body138
  br label %do.end179

do.end179:                                        ; preds = %if.end178
  br label %do.body180

do.body180:                                       ; preds = %do.end179
  %144 = load %struct.sv*, %struct.sv** %dstr, align 8
  %sv_u181 = getelementptr inbounds %struct.sv, %struct.sv* %144, i32 0, i32 3
  %svu_pv182 = bitcast %union.anon* %sv_u181 to i8**
  %145 = load i8*, i8** %svu_pv182, align 8
  %146 = load %struct.sv*, %struct.sv** %targ, align 8
  %sv_u183 = getelementptr inbounds %struct.sv, %struct.sv* %146, i32 0, i32 3
  %svu_pv184 = bitcast %union.anon* %sv_u183 to i8**
  store i8* %145, i8** %svu_pv184, align 8
  br label %do.end185

do.end185:                                        ; preds = %do.body180
  br label %do.body186

do.body186:                                       ; preds = %do.end185
  %147 = load %struct.sv*, %struct.sv** %dstr, align 8
  %sv_any187 = getelementptr inbounds %struct.sv, %struct.sv* %147, i32 0, i32 0
  %148 = load i8*, i8** %sv_any187, align 8
  %149 = bitcast i8* %148 to %struct.xpv*
  %xpv_cur = getelementptr inbounds %struct.xpv, %struct.xpv* %149, i32 0, i32 2
  %150 = load i64, i64* %xpv_cur, align 8
  %151 = load %struct.sv*, %struct.sv** %targ, align 8
  %sv_any188 = getelementptr inbounds %struct.sv, %struct.sv* %151, i32 0, i32 0
  %152 = load i8*, i8** %sv_any188, align 8
  %153 = bitcast i8* %152 to %struct.xpv*
  %xpv_cur189 = getelementptr inbounds %struct.xpv, %struct.xpv* %153, i32 0, i32 2
  store i64 %150, i64* %xpv_cur189, align 8
  br label %do.end190

do.end190:                                        ; preds = %do.body186
  br label %do.body191

do.body191:                                       ; preds = %do.end190
  %154 = load %struct.sv*, %struct.sv** %dstr, align 8
  %sv_any192 = getelementptr inbounds %struct.sv, %struct.sv* %154, i32 0, i32 0
  %155 = load i8*, i8** %sv_any192, align 8
  %156 = bitcast i8* %155 to %struct.xpv*
  %xpv_len_u193 = getelementptr inbounds %struct.xpv, %struct.xpv* %156, i32 0, i32 3
  %xpvlenu_len194 = bitcast %union.anon.26* %xpv_len_u193 to i64*
  %157 = load i64, i64* %xpvlenu_len194, align 8
  %158 = load %struct.sv*, %struct.sv** %targ, align 8
  %sv_any195 = getelementptr inbounds %struct.sv, %struct.sv* %158, i32 0, i32 0
  %159 = load i8*, i8** %sv_any195, align 8
  %160 = bitcast i8* %159 to %struct.xpv*
  %xpv_len_u196 = getelementptr inbounds %struct.xpv, %struct.xpv* %160, i32 0, i32 3
  %xpvlenu_len197 = bitcast %union.anon.26* %xpv_len_u196 to i64*
  store i64 %157, i64* %xpvlenu_len197, align 8
  br label %do.end198

do.end198:                                        ; preds = %do.body191
  %161 = load %struct.sv*, %struct.sv** %dstr, align 8
  %sv_flags199 = getelementptr inbounds %struct.sv, %struct.sv* %161, i32 0, i32 2
  %162 = load i32, i32* %sv_flags199, align 4
  %and200 = and i32 %162, 536870912
  %tobool201 = icmp ne i32 %and200, 0
  br i1 %tobool201, label %land.lhs.true202, label %if.end210

land.lhs.true202:                                 ; preds = %do.end198
  %163 = load %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_hints203 = getelementptr inbounds %struct.cop, %struct.cop* %163, i32 0, i32 10
  %164 = load i32, i32* %cop_hints203, align 8
  %add204 = add i32 %164, 0
  %and205 = and i32 %add204, 8
  %tobool206 = icmp ne i32 %and205, 0
  br i1 %tobool206, label %if.end210, label %if.then207

if.then207:                                       ; preds = %land.lhs.true202
  %165 = load %struct.sv*, %struct.sv** %targ, align 8
  %sv_flags208 = getelementptr inbounds %struct.sv, %struct.sv* %165, i32 0, i32 2
  %166 = load i32, i32* %sv_flags208, align 4
  %or209 = or i32 %166, 536870912
  store i32 %or209, i32* %sv_flags208, align 4
  br label %if.end210

if.end210:                                        ; preds = %if.then207, %land.lhs.true202, %do.end198
  br label %do.body211

do.body211:                                       ; preds = %if.end210
  %167 = load %struct.sv*, %struct.sv** %dstr, align 8
  %sv_u212 = getelementptr inbounds %struct.sv, %struct.sv* %167, i32 0, i32 3
  %svu_pv213 = bitcast %union.anon* %sv_u212 to i8**
  store i8* null, i8** %svu_pv213, align 8
  br label %do.end214

do.end214:                                        ; preds = %do.body211
  store i8 0, i8* @PL_tainted, align 1
  %call215 = call %struct.sv* @Perl_sv_newmortal()
  %168 = load %struct.sv**, %struct.sv*** %sp, align 8
  %incdec.ptr216 = getelementptr inbounds %struct.sv*, %struct.sv** %168, i32 1
  store %struct.sv** %incdec.ptr216, %struct.sv*** %sp, align 8
  store %struct.sv* %call215, %struct.sv** %incdec.ptr216, align 8
  %169 = load i64, i64* %saviters, align 8
  %sub = sub nsw i64 %169, 1
  call void @Perl_sv_setiv(%struct.sv* %call215, i64 %sub)
  %170 = load %struct.sv*, %struct.sv** %targ, align 8
  %sv_flags217 = getelementptr inbounds %struct.sv, %struct.sv* %170, i32 0, i32 2
  %171 = load i32, i32* %sv_flags217, align 4
  %and218 = and i32 %171, 2147418367
  store i32 %and218, i32* %sv_flags217, align 4
  %172 = load %struct.sv*, %struct.sv** %targ, align 8
  %sv_flags219 = getelementptr inbounds %struct.sv, %struct.sv* %172, i32 0, i32 2
  %173 = load i32, i32* %sv_flags219, align 4
  %or220 = or i32 %173, 17408
  store i32 %or220, i32* %sv_flags219, align 4
  br label %if.end221

if.end221:                                        ; preds = %do.end214, %if.then124
  %174 = load i8, i8* @PL_tainting, align 1
  %tobool222 = trunc i8 %174 to i1
  br i1 %tobool222, label %if.then223, label %if.end295

if.then223:                                       ; preds = %if.end221
  %175 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u224 = getelementptr inbounds %struct.context, %struct.context* %175, i32 0, i32 0
  %cx_subst225 = bitcast %union.anon.16* %cx_u224 to %struct.subst*
  %sbu_rxtainted226 = getelementptr inbounds %struct.subst, %struct.subst* %cx_subst225, i32 0, i32 2
  %176 = load i16, i16* %sbu_rxtainted226, align 2
  %conv227 = zext i16 %176 to i32
  %and228 = and i32 %conv227, 2
  %tobool229 = icmp ne i32 %and228, 0
  br i1 %tobool229, label %if.then238, label %lor.lhs.false230

lor.lhs.false230:                                 ; preds = %if.then223
  %177 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u231 = getelementptr inbounds %struct.context, %struct.context* %177, i32 0, i32 0
  %cx_subst232 = bitcast %union.anon.16* %cx_u231 to %struct.subst*
  %sbu_rxtainted233 = getelementptr inbounds %struct.subst, %struct.subst* %cx_subst232, i32 0, i32 2
  %178 = load i16, i16* %sbu_rxtainted233, align 2
  %conv234 = zext i16 %178 to i32
  %and235 = and i32 %conv234, 9
  %cmp236 = icmp eq i32 %and235, 9
  br i1 %cmp236, label %if.then238, label %if.end242

if.then238:                                       ; preds = %lor.lhs.false230, %if.then223
  %179 = load %struct.p5rx*, %struct.p5rx** %rx, align 8
  %call239 = call %struct.regexp* @S_ReANY(%struct.p5rx* %179)
  %extflags240 = getelementptr inbounds %struct.regexp, %struct.regexp* %call239, i32 0, i32 7
  %180 = load i32, i32* %extflags240, align 8
  %or241 = or i32 %180, 67108864
  store i32 %or241, i32* %extflags240, align 8
  br label %if.end242

if.end242:                                        ; preds = %if.then238, %lor.lhs.false230
  %181 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u243 = getelementptr inbounds %struct.context, %struct.context* %181, i32 0, i32 0
  %cx_subst244 = bitcast %union.anon.16* %cx_u243 to %struct.subst*
  %sbu_rxtainted245 = getelementptr inbounds %struct.subst, %struct.subst* %cx_subst244, i32 0, i32 2
  %182 = load i16, i16* %sbu_rxtainted245, align 2
  %conv246 = zext i16 %182 to i32
  %and247 = and i32 %conv246, 16
  %tobool248 = icmp ne i32 %and247, 0
  br i1 %tobool248, label %if.end265, label %land.lhs.true249

land.lhs.true249:                                 ; preds = %if.end242
  %183 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u250 = getelementptr inbounds %struct.context, %struct.context* %183, i32 0, i32 0
  %cx_subst251 = bitcast %union.anon.16* %cx_u250 to %struct.subst*
  %sbu_rxtainted252 = getelementptr inbounds %struct.subst, %struct.subst* %cx_subst251, i32 0, i32 2
  %184 = load i16, i16* %sbu_rxtainted252, align 2
  %conv253 = zext i16 %184 to i32
  %and254 = and i32 %conv253, 3
  %tobool255 = icmp ne i32 %and254, 0
  br i1 %tobool255, label %if.then256, label %if.end265

if.then256:                                       ; preds = %land.lhs.true249
  br label %do.body257

do.body257:                                       ; preds = %if.then256
  %185 = load i8, i8* @PL_tainting, align 1
  %tobool258 = trunc i8 %185 to i1
  br i1 %tobool258, label %cond.true260, label %cond.false261

cond.true260:                                     ; preds = %do.body257
  br i1 true, label %if.then262, label %if.end263

cond.false261:                                    ; preds = %do.body257
  br i1 false, label %if.then262, label %if.end263

if.then262:                                       ; preds = %cond.false261, %cond.true260
  %186 = load %struct.sv**, %struct.sv*** %sp, align 8
  %187 = load %struct.sv*, %struct.sv** %186, align 8
  call void @Perl_sv_magic(%struct.sv* %187, %struct.sv* null, i32 116, i8* null, i32 0)
  br label %if.end263

if.end263:                                        ; preds = %if.then262, %cond.false261, %cond.true260
  br label %do.end264

do.end264:                                        ; preds = %if.end263
  br label %if.end265

if.end265:                                        ; preds = %do.end264, %land.lhs.true249, %if.end242
  %188 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u266 = getelementptr inbounds %struct.context, %struct.context* %188, i32 0, i32 0
  %cx_subst267 = bitcast %union.anon.16* %cx_u266 to %struct.subst*
  %sbu_rxtainted268 = getelementptr inbounds %struct.subst, %struct.subst* %cx_subst267, i32 0, i32 2
  %189 = load i16, i16* %sbu_rxtainted268, align 2
  %conv269 = zext i16 %189 to i32
  %and270 = and i32 %conv269, 7
  %tobool271 = icmp ne i32 %and270, 0
  %190 = zext i1 %tobool271 to i64
  %cond = select i1 %tobool271, i32 1, i32 0
  %tobool272 = icmp ne i32 %cond, 0
  %frombool = zext i1 %tobool272 to i8
  store i8 %frombool, i8* @PL_tainted, align 1
  br label %do.body273

do.body273:                                       ; preds = %if.end265
  %191 = load i8, i8* @PL_tainting, align 1
  %tobool274 = trunc i8 %191 to i1
  br i1 %tobool274, label %cond.true276, label %cond.false277

cond.true276:                                     ; preds = %do.body273
  br i1 true, label %if.then278, label %if.end293

cond.false277:                                    ; preds = %do.body273
  br i1 false, label %if.then278, label %if.end293

if.then278:                                       ; preds = %cond.false277, %cond.true276
  %192 = load i8, i8* @PL_tainted, align 1
  %tobool279 = trunc i8 %192 to i1
  br i1 %tobool279, label %cond.true281, label %cond.false282

cond.true281:                                     ; preds = %if.then278
  br i1 true, label %if.then283, label %if.end292

cond.false282:                                    ; preds = %if.then278
  br i1 false, label %if.then283, label %if.end292

if.then283:                                       ; preds = %cond.false282, %cond.true281
  br label %do.body284

do.body284:                                       ; preds = %if.then283
  %193 = load i8, i8* @PL_tainting, align 1
  %tobool285 = trunc i8 %193 to i1
  br i1 %tobool285, label %cond.true287, label %cond.false288

cond.true287:                                     ; preds = %do.body284
  br i1 true, label %if.then289, label %if.end290

cond.false288:                                    ; preds = %do.body284
  br i1 false, label %if.then289, label %if.end290

if.then289:                                       ; preds = %cond.false288, %cond.true287
  %194 = load %struct.sv*, %struct.sv** %targ, align 8
  call void @Perl_sv_magic(%struct.sv* %194, %struct.sv* null, i32 116, i8* null, i32 0)
  br label %if.end290

if.end290:                                        ; preds = %if.then289, %cond.false288, %cond.true287
  br label %do.end291

do.end291:                                        ; preds = %if.end290
  br label %if.end292

if.end292:                                        ; preds = %do.end291, %cond.false282, %cond.true281
  br label %if.end293

if.end293:                                        ; preds = %if.end292, %cond.false277, %cond.true276
  br label %do.end294

do.end294:                                        ; preds = %if.end293
  br label %if.end295

if.end295:                                        ; preds = %do.end294, %if.end221
  br label %do.body296

do.body296:                                       ; preds = %if.end295
  %195 = load %struct.sv*, %struct.sv** %targ, align 8
  %sv_flags297 = getelementptr inbounds %struct.sv, %struct.sv* %195, i32 0, i32 2
  %196 = load i32, i32* %sv_flags297, align 4
  %and298 = and i32 %196, 4194304
  %tobool299 = icmp ne i32 %and298, 0
  br i1 %tobool299, label %cond.true300, label %cond.false301

cond.true300:                                     ; preds = %do.body296
  br i1 true, label %if.then302, label %if.end304

cond.false301:                                    ; preds = %do.body296
  br i1 false, label %if.then302, label %if.end304

if.then302:                                       ; preds = %cond.false301, %cond.true300
  %197 = load %struct.sv*, %struct.sv** %targ, align 8
  %call303 = call i32 @Perl_mg_set(%struct.sv* %197)
  br label %if.end304

if.end304:                                        ; preds = %if.then302, %cond.false301, %cond.true300
  br label %do.end305

do.end305:                                        ; preds = %if.end304
  store i8 0, i8* @PL_tainted, align 1
  br label %do.body306

do.body306:                                       ; preds = %do.end305
  %198 = load i32, i32* @PL_savestack_ix, align 4
  %199 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u307 = getelementptr inbounds %struct.context, %struct.context* %199, i32 0, i32 0
  %cx_subst308 = bitcast %union.anon.16* %cx_u307 to %struct.subst*
  %sbu_oldsave = getelementptr inbounds %struct.subst, %struct.subst* %cx_subst308, i32 0, i32 3
  %200 = load i32, i32* %sbu_oldsave, align 4
  %cmp309 = icmp sgt i32 %198, %200
  br i1 %cmp309, label %if.then311, label %if.end315

if.then311:                                       ; preds = %do.body306
  %201 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u312 = getelementptr inbounds %struct.context, %struct.context* %201, i32 0, i32 0
  %cx_subst313 = bitcast %union.anon.16* %cx_u312 to %struct.subst*
  %sbu_oldsave314 = getelementptr inbounds %struct.subst, %struct.subst* %cx_subst313, i32 0, i32 3
  %202 = load i32, i32* %sbu_oldsave314, align 4
  call void @Perl_leave_scope(i32 %202)
  br label %if.end315

if.end315:                                        ; preds = %if.then311, %do.body306
  br label %do.end316

do.end316:                                        ; preds = %if.end315
  %203 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %si_cxstack317 = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %203, i32 0, i32 1
  %204 = load %struct.context*, %struct.context** %si_cxstack317, align 8
  %205 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %si_cxix318 = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %205, i32 0, i32 4
  %206 = load i32, i32* %si_cxix318, align 8
  %dec = add nsw i32 %206, -1
  store i32 %dec, i32* %si_cxix318, align 8
  %idxprom319 = sext i32 %206 to i64
  %arrayidx320 = getelementptr inbounds %struct.context, %struct.context* %204, i64 %idxprom319
  store %struct.context* %arrayidx320, %struct.context** %cx, align 8
  %207 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u321 = getelementptr inbounds %struct.context, %struct.context* %207, i32 0, i32 0
  %cx_subst322 = bitcast %union.anon.16* %cx_u321 to %struct.subst*
  %sbu_rxres323 = getelementptr inbounds %struct.subst, %struct.subst* %cx_subst322, i32 0, i32 12
  call void @S_rxres_free(i8** %sbu_rxres323)
  %208 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u324 = getelementptr inbounds %struct.context, %struct.context* %208, i32 0, i32 0
  %cx_subst325 = bitcast %union.anon.16* %cx_u324 to %struct.subst*
  %sbu_rx326 = getelementptr inbounds %struct.subst, %struct.subst* %cx_subst325, i32 0, i32 13
  %209 = load %struct.p5rx*, %struct.p5rx** %sbu_rx326, align 8
  %210 = bitcast %struct.p5rx* %209 to i8*
  %211 = bitcast i8* %210 to %struct.sv*
  call void @S_SvREFCNT_dec(%struct.sv* %211)
  %212 = load i32, i32* @PL_sig_pending, align 4
  %tobool327 = icmp ne i32 %212, 0
  br i1 %tobool327, label %cond.true328, label %cond.false329

cond.true328:                                     ; preds = %do.end316
  br i1 true, label %if.then330, label %if.end331

cond.false329:                                    ; preds = %do.end316
  br i1 false, label %if.then330, label %if.end331

if.then330:                                       ; preds = %cond.false329, %cond.true328
  %213 = load void ()*, void ()** @PL_signalhook, align 8
  call void %213()
  br label %if.end331

if.end331:                                        ; preds = %if.then330, %cond.false329, %cond.true328
  %214 = load %struct.sv**, %struct.sv*** %sp, align 8
  store %struct.sv** %214, %struct.sv*** @PL_stack_sp, align 8
  %215 = load %struct.pmop*, %struct.pmop** %pm, align 8
  %op_next = getelementptr inbounds %struct.pmop, %struct.pmop* %215, i32 0, i32 0
  %216 = load %struct.op*, %struct.op** %op_next, align 8
  store %struct.op* %216, %struct.op** %retval, align 8
  br label %return

if.end332:                                        ; preds = %lor.lhs.false54
  %217 = load i64, i64* %saviters, align 8
  %218 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u333 = getelementptr inbounds %struct.context, %struct.context* %218, i32 0, i32 0
  %cx_subst334 = bitcast %union.anon.16* %cx_u333 to %struct.subst*
  %sbu_iters335 = getelementptr inbounds %struct.subst, %struct.subst* %cx_subst334, i32 0, i32 4
  store i64 %217, i64* %sbu_iters335, align 8
  br label %if.end336

if.end336:                                        ; preds = %if.end332, %if.end14
  %219 = load %struct.p5rx*, %struct.p5rx** %rx, align 8
  %call337 = call %struct.regexp* @S_ReANY(%struct.p5rx* %219)
  %extflags338 = getelementptr inbounds %struct.regexp, %struct.regexp* %call337, i32 0, i32 7
  %220 = load i32, i32* %extflags338, align 8
  %and339 = and i32 %220, 33554432
  %tobool340 = icmp ne i32 %and339, 0
  br i1 %tobool340, label %land.lhs.true341, label %if.end365

land.lhs.true341:                                 ; preds = %if.end336
  %221 = load %struct.p5rx*, %struct.p5rx** %rx, align 8
  %call342 = call %struct.regexp* @S_ReANY(%struct.p5rx* %221)
  %subbeg = getelementptr inbounds %struct.regexp, %struct.regexp* %call342, i32 0, i32 18
  %222 = load i8*, i8** %subbeg, align 8
  %223 = load i8*, i8** %orig, align 8
  %cmp343 = icmp ne i8* %222, %223
  br i1 %cmp343, label %if.then345, label %if.end365

if.then345:                                       ; preds = %land.lhs.true341
  %224 = load i8*, i8** %s, align 8
  store i8* %224, i8** %m, align 8
  %225 = load i8*, i8** %orig, align 8
  store i8* %225, i8** %s, align 8
  %226 = load %struct.p5rx*, %struct.p5rx** %rx, align 8
  %call346 = call %struct.regexp* @S_ReANY(%struct.p5rx* %226)
  %subbeg347 = getelementptr inbounds %struct.regexp, %struct.regexp* %call346, i32 0, i32 18
  %227 = load i8*, i8** %subbeg347, align 8
  store i8* %227, i8** %orig, align 8
  %228 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u348 = getelementptr inbounds %struct.context, %struct.context* %228, i32 0, i32 0
  %cx_subst349 = bitcast %union.anon.16* %cx_u348 to %struct.subst*
  %sbu_orig350 = getelementptr inbounds %struct.subst, %struct.subst* %cx_subst349, i32 0, i32 6
  store i8* %227, i8** %sbu_orig350, align 8
  %229 = load i8*, i8** %orig, align 8
  %230 = load i8*, i8** %m, align 8
  %231 = load i8*, i8** %s, align 8
  %sub.ptr.lhs.cast351 = ptrtoint i8* %230 to i64
  %sub.ptr.rhs.cast352 = ptrtoint i8* %231 to i64
  %sub.ptr.sub353 = sub i64 %sub.ptr.lhs.cast351, %sub.ptr.rhs.cast352
  %add.ptr354 = getelementptr inbounds i8, i8* %229, i64 %sub.ptr.sub353
  store i8* %add.ptr354, i8** %s, align 8
  %232 = load i8*, i8** %s, align 8
  %233 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u355 = getelementptr inbounds %struct.context, %struct.context* %233, i32 0, i32 0
  %cx_subst356 = bitcast %union.anon.16* %cx_u355 to %struct.subst*
  %sbu_strend357 = getelementptr inbounds %struct.subst, %struct.subst* %cx_subst356, i32 0, i32 11
  %234 = load i8*, i8** %sbu_strend357, align 8
  %235 = load i8*, i8** %m, align 8
  %sub.ptr.lhs.cast358 = ptrtoint i8* %234 to i64
  %sub.ptr.rhs.cast359 = ptrtoint i8* %235 to i64
  %sub.ptr.sub360 = sub i64 %sub.ptr.lhs.cast358, %sub.ptr.rhs.cast359
  %add.ptr361 = getelementptr inbounds i8, i8* %232, i64 %sub.ptr.sub360
  %236 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u362 = getelementptr inbounds %struct.context, %struct.context* %236, i32 0, i32 0
  %cx_subst363 = bitcast %union.anon.16* %cx_u362 to %struct.subst*
  %sbu_strend364 = getelementptr inbounds %struct.subst, %struct.subst* %cx_subst363, i32 0, i32 11
  store i8* %add.ptr361, i8** %sbu_strend364, align 8
  br label %if.end365

if.end365:                                        ; preds = %if.then345, %land.lhs.true341, %if.end336
  %237 = load %struct.p5rx*, %struct.p5rx** %rx, align 8
  %call366 = call %struct.regexp* @S_ReANY(%struct.p5rx* %237)
  %offs = getelementptr inbounds %struct.regexp, %struct.regexp* %call366, i32 0, i32 17
  %238 = load %struct.regexp_paren_pair*, %struct.regexp_paren_pair** %offs, align 8
  %arrayidx367 = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %238, i64 0
  %start = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %arrayidx367, i32 0, i32 0
  %239 = load i64, i64* %start, align 8
  %240 = load i8*, i8** %orig, align 8
  %add.ptr368 = getelementptr inbounds i8, i8* %240, i64 %239
  store i8* %add.ptr368, i8** %m, align 8
  %241 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u369 = getelementptr inbounds %struct.context, %struct.context* %241, i32 0, i32 0
  %cx_subst370 = bitcast %union.anon.16* %cx_u369 to %struct.subst*
  %sbu_m371 = getelementptr inbounds %struct.subst, %struct.subst* %cx_subst370, i32 0, i32 10
  store i8* %add.ptr368, i8** %sbu_m371, align 8
  %242 = load i8*, i8** %m, align 8
  %243 = load i8*, i8** %s, align 8
  %cmp372 = icmp ugt i8* %242, %243
  br i1 %cmp372, label %if.then374, label %if.end412

if.then374:                                       ; preds = %if.end365
  %244 = load %struct.sv*, %struct.sv** %dstr, align 8
  %sv_flags375 = getelementptr inbounds %struct.sv, %struct.sv* %244, i32 0, i32 2
  %245 = load i32, i32* %sv_flags375, align 4
  %and376 = and i32 %245, 536870912
  %tobool377 = icmp ne i32 %and376, 0
  br i1 %tobool377, label %land.lhs.true378, label %if.else407

land.lhs.true378:                                 ; preds = %if.then374
  %246 = load %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_hints379 = getelementptr inbounds %struct.cop, %struct.cop* %246, i32 0, i32 10
  %247 = load i32, i32* %cop_hints379, align 8
  %add380 = add i32 %247, 0
  %and381 = and i32 %add380, 8
  %tobool382 = icmp ne i32 %and381, 0
  br i1 %tobool382, label %if.else407, label %land.lhs.true383

land.lhs.true383:                                 ; preds = %land.lhs.true378
  %248 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u384 = getelementptr inbounds %struct.context, %struct.context* %248, i32 0, i32 0
  %cx_subst385 = bitcast %union.anon.16* %cx_u384 to %struct.subst*
  %sbu_targ386 = getelementptr inbounds %struct.subst, %struct.subst* %cx_subst385, i32 0, i32 8
  %249 = load %struct.sv*, %struct.sv** %sbu_targ386, align 8
  %sv_flags387 = getelementptr inbounds %struct.sv, %struct.sv* %249, i32 0, i32 2
  %250 = load i32, i32* %sv_flags387, align 4
  %and388 = and i32 %250, 536870912
  %tobool389 = icmp ne i32 %and388, 0
  br i1 %tobool389, label %if.else407, label %if.then390

if.then390:                                       ; preds = %land.lhs.true383
  br label %do.body391

do.body391:                                       ; preds = %if.then390
  %251 = load %struct.sv*, %struct.sv** %nsv, align 8
  %tobool392 = icmp ne %struct.sv* %251, null
  br i1 %tobool392, label %if.else398, label %if.then393

if.then393:                                       ; preds = %do.body391
  %252 = load i8*, i8** %s, align 8
  %253 = load i8*, i8** %m, align 8
  %254 = load i8*, i8** %s, align 8
  %sub.ptr.lhs.cast394 = ptrtoint i8* %253 to i64
  %sub.ptr.rhs.cast395 = ptrtoint i8* %254 to i64
  %sub.ptr.sub396 = sub i64 %sub.ptr.lhs.cast394, %sub.ptr.rhs.cast395
  %call397 = call %struct.sv* @Perl_newSVpvn_flags(i8* %252, i64 %sub.ptr.sub396, i32 524288)
  store %struct.sv* %call397, %struct.sv** %nsv, align 8
  br label %if.end402

if.else398:                                       ; preds = %do.body391
  %255 = load %struct.sv*, %struct.sv** %nsv, align 8
  %256 = load i8*, i8** %s, align 8
  %257 = load i8*, i8** %m, align 8
  %258 = load i8*, i8** %s, align 8
  %sub.ptr.lhs.cast399 = ptrtoint i8* %257 to i64
  %sub.ptr.rhs.cast400 = ptrtoint i8* %258 to i64
  %sub.ptr.sub401 = sub i64 %sub.ptr.lhs.cast399, %sub.ptr.rhs.cast400
  call void @Perl_sv_setpvn(%struct.sv* %255, i8* %256, i64 %sub.ptr.sub401)
  br label %if.end402

if.end402:                                        ; preds = %if.else398, %if.then393
  %259 = load %struct.sv*, %struct.sv** %nsv, align 8
  %sv_flags403 = getelementptr inbounds %struct.sv, %struct.sv* %259, i32 0, i32 2
  %260 = load i32, i32* %sv_flags403, align 4
  %and404 = and i32 %260, -536870913
  store i32 %and404, i32* %sv_flags403, align 4
  %261 = load %struct.sv*, %struct.sv** %nsv, align 8
  %call405 = call i64 @Perl_sv_utf8_upgrade_flags_grow(%struct.sv* %261, i32 2, i64 0)
  %262 = load %struct.sv*, %struct.sv** %dstr, align 8
  %263 = load %struct.sv*, %struct.sv** %nsv, align 8
  call void @Perl_sv_catsv_flags(%struct.sv* %262, %struct.sv* %263, i32 0)
  br label %do.end406

do.end406:                                        ; preds = %if.end402
  br label %if.end411

if.else407:                                       ; preds = %land.lhs.true383, %land.lhs.true378, %if.then374
  %264 = load %struct.sv*, %struct.sv** %dstr, align 8
  %265 = load i8*, i8** %s, align 8
  %266 = load i8*, i8** %m, align 8
  %267 = load i8*, i8** %s, align 8
  %sub.ptr.lhs.cast408 = ptrtoint i8* %266 to i64
  %sub.ptr.rhs.cast409 = ptrtoint i8* %267 to i64
  %sub.ptr.sub410 = sub i64 %sub.ptr.lhs.cast408, %sub.ptr.rhs.cast409
  call void @Perl_sv_catpvn_flags(%struct.sv* %264, i8* %265, i64 %sub.ptr.sub410, i32 0)
  br label %if.end411

if.end411:                                        ; preds = %if.else407, %do.end406
  br label %if.end412

if.end412:                                        ; preds = %if.end411, %if.end365
  %268 = load %struct.p5rx*, %struct.p5rx** %rx, align 8
  %call413 = call %struct.regexp* @S_ReANY(%struct.p5rx* %268)
  %offs414 = getelementptr inbounds %struct.regexp, %struct.regexp* %call413, i32 0, i32 17
  %269 = load %struct.regexp_paren_pair*, %struct.regexp_paren_pair** %offs414, align 8
  %arrayidx415 = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %269, i64 0
  %end = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %arrayidx415, i32 0, i32 1
  %270 = load i64, i64* %end, align 8
  %271 = load i8*, i8** %orig, align 8
  %add.ptr416 = getelementptr inbounds i8, i8* %271, i64 %270
  %272 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u417 = getelementptr inbounds %struct.context, %struct.context* %272, i32 0, i32 0
  %cx_subst418 = bitcast %union.anon.16* %cx_u417 to %struct.subst*
  %sbu_s419 = getelementptr inbounds %struct.subst, %struct.subst* %cx_subst418, i32 0, i32 9
  store i8* %add.ptr416, i8** %sbu_s419, align 8
  %273 = load %struct.pmop*, %struct.pmop** %pm, align 8
  %op_pmflags420 = getelementptr inbounds %struct.pmop, %struct.pmop* %273, i32 0, i32 10
  %274 = load i32, i32* %op_pmflags420, align 8
  %and421 = and i32 %274, 134217728
  %tobool422 = icmp ne i32 %and421, 0
  br i1 %tobool422, label %cond.true423, label %cond.false427

cond.true423:                                     ; preds = %if.end412
  %275 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u424 = getelementptr inbounds %struct.context, %struct.context* %275, i32 0, i32 0
  %cx_subst425 = bitcast %union.anon.16* %cx_u424 to %struct.subst*
  %sbu_dstr426 = getelementptr inbounds %struct.subst, %struct.subst* %cx_subst425, i32 0, i32 7
  %276 = load %struct.sv*, %struct.sv** %sbu_dstr426, align 8
  br label %cond.end

cond.false427:                                    ; preds = %if.end412
  %277 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u428 = getelementptr inbounds %struct.context, %struct.context* %277, i32 0, i32 0
  %cx_subst429 = bitcast %union.anon.16* %cx_u428 to %struct.subst*
  %sbu_targ430 = getelementptr inbounds %struct.subst, %struct.subst* %cx_subst429, i32 0, i32 8
  %278 = load %struct.sv*, %struct.sv** %sbu_targ430, align 8
  br label %cond.end

cond.end:                                         ; preds = %cond.false427, %cond.true423
  %cond431 = phi %struct.sv* [ %276, %cond.true423 ], [ %278, %cond.false427 ]
  store %struct.sv* %cond431, %struct.sv** %sv, align 8
  %279 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_flags432 = getelementptr inbounds %struct.sv, %struct.sv* %279, i32 0, i32 2
  %280 = load i32, i32* %sv_flags432, align 4
  %and433 = and i32 %280, 1024
  %tobool434 = icmp ne i32 %and433, 0
  br i1 %tobool434, label %if.end447, label %if.then435

if.then435:                                       ; preds = %cond.end
  %281 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_flags436 = getelementptr inbounds %struct.sv, %struct.sv* %281, i32 0, i32 2
  %282 = load i32, i32* %sv_flags436, align 4
  %and437 = and i32 %282, 430018304
  %cmp438 = icmp eq i32 %and437, 1024
  br i1 %cmp438, label %cond.true440, label %cond.false443

cond.true440:                                     ; preds = %if.then435
  %283 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_u441 = getelementptr inbounds %struct.sv, %struct.sv* %283, i32 0, i32 3
  %svu_pv442 = bitcast %union.anon* %sv_u441 to i8**
  %284 = load i8*, i8** %svu_pv442, align 8
  br label %cond.end445

cond.false443:                                    ; preds = %if.then435
  %285 = load %struct.sv*, %struct.sv** %sv, align 8
  %call444 = call i8* @Perl_sv_pvn_force_flags(%struct.sv* %285, i64* null, i32 0)
  br label %cond.end445

cond.end445:                                      ; preds = %cond.false443, %cond.true440
  %cond446 = phi i8* [ %284, %cond.true440 ], [ %call444, %cond.false443 ]
  br label %if.end447

if.end447:                                        ; preds = %cond.end445, %cond.end
  %286 = load %struct.sv*, %struct.sv** %sv, align 8
  %call448 = call %struct.magic* @Perl_mg_find_mglob(%struct.sv* %286)
  store %struct.magic* %call448, %struct.magic** %mg, align 8
  %tobool449 = icmp ne %struct.magic* %call448, null
  br i1 %tobool449, label %if.end452, label %if.then450

if.then450:                                       ; preds = %if.end447
  %287 = load %struct.sv*, %struct.sv** %sv, align 8
  %call451 = call %struct.magic* @Perl_sv_magicext_mglob(%struct.sv* %287)
  store %struct.magic* %call451, %struct.magic** %mg, align 8
  br label %if.end452

if.end452:                                        ; preds = %if.then450, %if.end447
  %288 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_flags453 = getelementptr inbounds %struct.sv, %struct.sv* %288, i32 0, i32 2
  %289 = load i32, i32* %sv_flags453, align 4
  %and454 = and i32 %289, 1024
  %tobool455 = icmp ne i32 %and454, 0
  br i1 %tobool455, label %land.lhs.true456, label %cond.false471

land.lhs.true456:                                 ; preds = %if.end452
  %290 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_flags457 = getelementptr inbounds %struct.sv, %struct.sv* %290, i32 0, i32 2
  %291 = load i32, i32* %sv_flags457, align 4
  %and458 = and i32 %291, 2097152
  %tobool459 = icmp ne i32 %and458, 0
  br i1 %tobool459, label %lor.lhs.false460, label %cond.true463

lor.lhs.false460:                                 ; preds = %land.lhs.true456
  %292 = load %struct.sv*, %struct.sv** %sv, align 8
  %call461 = call zeroext i1 @S_sv_only_taint_gmagic(%struct.sv* %292)
  br i1 %call461, label %cond.true463, label %cond.false471

cond.true463:                                     ; preds = %lor.lhs.false460, %land.lhs.true456
  %293 = load i8*, i8** %m, align 8
  %294 = load i8*, i8** %orig, align 8
  %sub.ptr.lhs.cast464 = ptrtoint i8* %293 to i64
  %sub.ptr.rhs.cast465 = ptrtoint i8* %294 to i64
  %sub.ptr.sub466 = sub i64 %sub.ptr.lhs.cast464, %sub.ptr.rhs.cast465
  %295 = load %struct.magic*, %struct.magic** %mg, align 8
  %mg_len = getelementptr inbounds %struct.magic, %struct.magic* %295, i32 0, i32 5
  store i64 %sub.ptr.sub466, i64* %mg_len, align 8
  %296 = load %struct.magic*, %struct.magic** %mg, align 8
  %mg_flags = getelementptr inbounds %struct.magic, %struct.magic* %296, i32 0, i32 4
  %297 = load i8, i8* %mg_flags, align 1
  %conv467 = zext i8 %297 to i32
  %or468 = or i32 %conv467, 64
  %conv469 = trunc i32 %or468 to i8
  store i8 %conv469, i8* %mg_flags, align 1
  %conv470 = zext i8 %conv469 to i32
  br label %cond.end502

cond.false471:                                    ; preds = %lor.lhs.false460, %if.end452
  %298 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_flags472 = getelementptr inbounds %struct.sv, %struct.sv* %298, i32 0, i32 2
  %299 = load i32, i32* %sv_flags472, align 4
  %and473 = and i32 %299, 536870912
  %tobool474 = icmp ne i32 %and473, 0
  br i1 %tobool474, label %land.lhs.true475, label %cond.false490

land.lhs.true475:                                 ; preds = %cond.false471
  %300 = load %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_hints476 = getelementptr inbounds %struct.cop, %struct.cop* %300, i32 0, i32 10
  %301 = load i32, i32* %cop_hints476, align 8
  %add477 = add i32 %301, 0
  %and478 = and i32 %add477, 8
  %tobool479 = icmp ne i32 %and478, 0
  br i1 %tobool479, label %cond.false490, label %cond.true480

cond.true480:                                     ; preds = %land.lhs.true475
  %302 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_u481 = getelementptr inbounds %struct.sv, %struct.sv* %302, i32 0, i32 3
  %svu_pv482 = bitcast %union.anon* %sv_u481 to i8**
  %303 = load i8*, i8** %svu_pv482, align 8
  %304 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_u483 = getelementptr inbounds %struct.sv, %struct.sv* %304, i32 0, i32 3
  %svu_pv484 = bitcast %union.anon* %sv_u483 to i8**
  %305 = load i8*, i8** %svu_pv484, align 8
  %306 = load i8*, i8** %m, align 8
  %307 = load i8*, i8** %orig, align 8
  %sub.ptr.lhs.cast485 = ptrtoint i8* %306 to i64
  %sub.ptr.rhs.cast486 = ptrtoint i8* %307 to i64
  %sub.ptr.sub487 = sub i64 %sub.ptr.lhs.cast485, %sub.ptr.rhs.cast486
  %add.ptr488 = getelementptr inbounds i8, i8* %305, i64 %sub.ptr.sub487
  %call489 = call i64 @Perl_utf8_length(i8* %303, i8* %add.ptr488)
  br label %cond.end494

cond.false490:                                    ; preds = %land.lhs.true475, %cond.false471
  %308 = load i8*, i8** %m, align 8
  %309 = load i8*, i8** %orig, align 8
  %sub.ptr.lhs.cast491 = ptrtoint i8* %308 to i64
  %sub.ptr.rhs.cast492 = ptrtoint i8* %309 to i64
  %sub.ptr.sub493 = sub i64 %sub.ptr.lhs.cast491, %sub.ptr.rhs.cast492
  br label %cond.end494

cond.end494:                                      ; preds = %cond.false490, %cond.true480
  %cond495 = phi i64 [ %call489, %cond.true480 ], [ %sub.ptr.sub493, %cond.false490 ]
  %310 = load %struct.magic*, %struct.magic** %mg, align 8
  %mg_len496 = getelementptr inbounds %struct.magic, %struct.magic* %310, i32 0, i32 5
  store i64 %cond495, i64* %mg_len496, align 8
  %311 = load %struct.magic*, %struct.magic** %mg, align 8
  %mg_flags497 = getelementptr inbounds %struct.magic, %struct.magic* %311, i32 0, i32 4
  %312 = load i8, i8* %mg_flags497, align 1
  %conv498 = zext i8 %312 to i32
  %and499 = and i32 %conv498, -65
  %conv500 = trunc i32 %and499 to i8
  store i8 %conv500, i8* %mg_flags497, align 1
  %conv501 = zext i8 %conv500 to i32
  br label %cond.end502

cond.end502:                                      ; preds = %cond.end494, %cond.true463
  %cond503 = phi i32 [ %conv470, %cond.true463 ], [ %conv501, %cond.end494 ]
  %313 = load %struct.p5rx*, %struct.p5rx** %old, align 8
  %314 = load %struct.p5rx*, %struct.p5rx** %rx, align 8
  %cmp504 = icmp ne %struct.p5rx* %313, %314
  br i1 %cmp504, label %if.then506, label %if.end508

if.then506:                                       ; preds = %cond.end502
  %315 = load %struct.p5rx*, %struct.p5rx** %rx, align 8
  %316 = bitcast %struct.p5rx* %315 to i8*
  %317 = bitcast i8* %316 to %struct.sv*
  %call507 = call %struct.sv* @S_SvREFCNT_inc(%struct.sv* %317)
  %318 = bitcast %struct.sv* %call507 to %struct.p5rx*
  br label %if.end508

if.end508:                                        ; preds = %if.then506, %cond.end502
  %319 = load i8, i8* @PL_tainting, align 1
  %tobool509 = trunc i8 %319 to i1
  br i1 %tobool509, label %if.then510, label %if.end577

if.then510:                                       ; preds = %if.end508
  %320 = load %struct.p5rx*, %struct.p5rx** %rx, align 8
  %call511 = call %struct.regexp* @S_ReANY(%struct.p5rx* %320)
  %extflags512 = getelementptr inbounds %struct.regexp, %struct.regexp* %call511, i32 0, i32 7
  %321 = load i32, i32* %extflags512, align 8
  %and513 = and i32 %321, 67108864
  %tobool514 = icmp ne i32 %and513, 0
  br i1 %tobool514, label %if.then515, label %if.end522

if.then515:                                       ; preds = %if.then510
  %322 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u516 = getelementptr inbounds %struct.context, %struct.context* %322, i32 0, i32 0
  %cx_subst517 = bitcast %union.anon.16* %cx_u516 to %struct.subst*
  %sbu_rxtainted518 = getelementptr inbounds %struct.subst, %struct.subst* %cx_subst517, i32 0, i32 2
  %323 = load i16, i16* %sbu_rxtainted518, align 2
  %conv519 = zext i16 %323 to i32
  %or520 = or i32 %conv519, 2
  %conv521 = trunc i32 %or520 to i16
  store i16 %conv521, i16* %sbu_rxtainted518, align 2
  br label %if.end522

if.end522:                                        ; preds = %if.then515, %if.then510
  %324 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u523 = getelementptr inbounds %struct.context, %struct.context* %324, i32 0, i32 0
  %cx_subst524 = bitcast %union.anon.16* %cx_u523 to %struct.subst*
  %sbu_rxtainted525 = getelementptr inbounds %struct.subst, %struct.subst* %cx_subst524, i32 0, i32 2
  %325 = load i16, i16* %sbu_rxtainted525, align 2
  %conv526 = zext i16 %325 to i32
  %and527 = and i32 %conv526, 2
  %tobool528 = icmp ne i32 %and527, 0
  br i1 %tobool528, label %if.then537, label %lor.lhs.false529

lor.lhs.false529:                                 ; preds = %if.end522
  %326 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u530 = getelementptr inbounds %struct.context, %struct.context* %326, i32 0, i32 0
  %cx_subst531 = bitcast %union.anon.16* %cx_u530 to %struct.subst*
  %sbu_rxtainted532 = getelementptr inbounds %struct.subst, %struct.subst* %cx_subst531, i32 0, i32 2
  %327 = load i16, i16* %sbu_rxtainted532, align 2
  %conv533 = zext i16 %327 to i32
  %and534 = and i32 %conv533, 9
  %cmp535 = icmp eq i32 %and534, 9
  br i1 %cmp535, label %if.then537, label %if.end541

if.then537:                                       ; preds = %lor.lhs.false529, %if.end522
  %328 = load %struct.p5rx*, %struct.p5rx** %rx, align 8
  %call538 = call %struct.regexp* @S_ReANY(%struct.p5rx* %328)
  %extflags539 = getelementptr inbounds %struct.regexp, %struct.regexp* %call538, i32 0, i32 7
  %329 = load i32, i32* %extflags539, align 8
  %or540 = or i32 %329, 67108864
  store i32 %or540, i32* %extflags539, align 8
  br label %if.end541

if.end541:                                        ; preds = %if.then537, %lor.lhs.false529
  %330 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u542 = getelementptr inbounds %struct.context, %struct.context* %330, i32 0, i32 0
  %cx_subst543 = bitcast %union.anon.16* %cx_u542 to %struct.subst*
  %sbu_iters544 = getelementptr inbounds %struct.subst, %struct.subst* %cx_subst543, i32 0, i32 4
  %331 = load i64, i64* %sbu_iters544, align 8
  %cmp545 = icmp sgt i64 %331, 1
  br i1 %cmp545, label %land.lhs.true547, label %if.end576

land.lhs.true547:                                 ; preds = %if.end541
  %332 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u548 = getelementptr inbounds %struct.context, %struct.context* %332, i32 0, i32 0
  %cx_subst549 = bitcast %union.anon.16* %cx_u548 to %struct.subst*
  %sbu_rxtainted550 = getelementptr inbounds %struct.subst, %struct.subst* %cx_subst549, i32 0, i32 2
  %333 = load i16, i16* %sbu_rxtainted550, align 2
  %conv551 = zext i16 %333 to i32
  %and552 = and i32 %conv551, 7
  %tobool553 = icmp ne i32 %and552, 0
  br i1 %tobool553, label %if.then554, label %if.end576

if.then554:                                       ; preds = %land.lhs.true547
  br label %do.body555

do.body555:                                       ; preds = %if.then554
  %334 = load i8, i8* @PL_tainting, align 1
  %tobool556 = trunc i8 %334 to i1
  br i1 %tobool556, label %cond.true558, label %cond.false559

cond.true558:                                     ; preds = %do.body555
  br i1 true, label %if.then560, label %if.end574

cond.false559:                                    ; preds = %do.body555
  br i1 false, label %if.then560, label %if.end574

if.then560:                                       ; preds = %cond.false559, %cond.true558
  %335 = load %struct.pmop*, %struct.pmop** %pm, align 8
  %op_pmflags561 = getelementptr inbounds %struct.pmop, %struct.pmop* %335, i32 0, i32 10
  %336 = load i32, i32* %op_pmflags561, align 8
  %and562 = and i32 %336, 134217728
  %tobool563 = icmp ne i32 %and562, 0
  br i1 %tobool563, label %cond.true564, label %cond.false568

cond.true564:                                     ; preds = %if.then560
  %337 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u565 = getelementptr inbounds %struct.context, %struct.context* %337, i32 0, i32 0
  %cx_subst566 = bitcast %union.anon.16* %cx_u565 to %struct.subst*
  %sbu_dstr567 = getelementptr inbounds %struct.subst, %struct.subst* %cx_subst566, i32 0, i32 7
  %338 = load %struct.sv*, %struct.sv** %sbu_dstr567, align 8
  br label %cond.end572

cond.false568:                                    ; preds = %if.then560
  %339 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u569 = getelementptr inbounds %struct.context, %struct.context* %339, i32 0, i32 0
  %cx_subst570 = bitcast %union.anon.16* %cx_u569 to %struct.subst*
  %sbu_targ571 = getelementptr inbounds %struct.subst, %struct.subst* %cx_subst570, i32 0, i32 8
  %340 = load %struct.sv*, %struct.sv** %sbu_targ571, align 8
  br label %cond.end572

cond.end572:                                      ; preds = %cond.false568, %cond.true564
  %cond573 = phi %struct.sv* [ %338, %cond.true564 ], [ %340, %cond.false568 ]
  call void @Perl_sv_magic(%struct.sv* %cond573, %struct.sv* null, i32 116, i8* null, i32 0)
  br label %if.end574

if.end574:                                        ; preds = %cond.end572, %cond.false559, %cond.true558
  br label %do.end575

do.end575:                                        ; preds = %if.end574
  br label %if.end576

if.end576:                                        ; preds = %do.end575, %land.lhs.true547, %if.end541
  store i8 0, i8* @PL_tainted, align 1
  br label %if.end577

if.end577:                                        ; preds = %if.end576, %if.end508
  %341 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u578 = getelementptr inbounds %struct.context, %struct.context* %341, i32 0, i32 0
  %cx_subst579 = bitcast %union.anon.16* %cx_u578 to %struct.subst*
  %sbu_rxres580 = getelementptr inbounds %struct.subst, %struct.subst* %cx_subst579, i32 0, i32 12
  %342 = load %struct.p5rx*, %struct.p5rx** %rx, align 8
  call void @Perl_rxres_save(i8** %sbu_rxres580, %struct.p5rx* %342)
  %343 = load %struct.pmop*, %struct.pmop** %pm, align 8
  store %struct.pmop* %343, %struct.pmop** @PL_curpm, align 8
  %344 = load %struct.sv**, %struct.sv*** %sp, align 8
  store %struct.sv** %344, %struct.sv*** @PL_stack_sp, align 8
  %345 = load %struct.pmop*, %struct.pmop** %pm, align 8
  %op_pmstashstartu = getelementptr inbounds %struct.pmop, %struct.pmop* %345, i32 0, i32 12
  %op_pmreplstart = bitcast %union.anon.19* %op_pmstashstartu to %struct.op**
  %346 = load %struct.op*, %struct.op** %op_pmreplstart, align 8
  store %struct.op* %346, %struct.op** %retval, align 8
  br label %return

return:                                           ; preds = %if.end577, %if.end331, %if.then30
  %347 = load %struct.op*, %struct.op** %retval, align 8
  ret %struct.op* %347
}

; Function Attrs: noinline nounwind uwtable
define internal void @S_rxres_restore(i8** %rsp, %struct.p5rx* %rx) #0 {
entry:
  %rsp.addr = alloca i8**, align 8
  %rx.addr = alloca %struct.p5rx*, align 8
  %p = alloca i64*, align 8
  %i = alloca i32, align 4
  store i8** %rsp, i8*** %rsp.addr, align 8
  store %struct.p5rx* %rx, %struct.p5rx** %rx.addr, align 8
  %0 = load i8**, i8*** %rsp.addr, align 8
  %1 = load i8*, i8** %0, align 8
  %2 = bitcast i8* %1 to i64*
  store i64* %2, i64** %p, align 8
  br label %do.body

do.body:                                          ; preds = %entry
  %3 = load %struct.p5rx*, %struct.p5rx** %rx.addr, align 8
  %call = call %struct.regexp* @S_ReANY(%struct.p5rx* %3)
  %saved_copy = getelementptr inbounds %struct.regexp, %struct.regexp* %call, i32 0, i32 19
  %4 = load %struct.sv*, %struct.sv** %saved_copy, align 8
  %tobool = icmp ne %struct.sv* %4, null
  br i1 %tobool, label %if.then, label %if.end7

if.then:                                          ; preds = %do.body
  %5 = load %struct.p5rx*, %struct.p5rx** %rx.addr, align 8
  %call1 = call %struct.regexp* @S_ReANY(%struct.p5rx* %5)
  %saved_copy2 = getelementptr inbounds %struct.regexp, %struct.regexp* %call1, i32 0, i32 19
  %6 = load %struct.sv*, %struct.sv** %saved_copy2, align 8
  %sv_flags = getelementptr inbounds %struct.sv, %struct.sv* %6, i32 0, i32 2
  %7 = load i32, i32* %sv_flags, align 4
  %and = and i32 %7, 427886592
  %tobool3 = icmp ne i32 %and, 0
  br i1 %tobool3, label %if.then4, label %if.end

if.then4:                                         ; preds = %if.then
  %8 = load %struct.p5rx*, %struct.p5rx** %rx.addr, align 8
  %call5 = call %struct.regexp* @S_ReANY(%struct.p5rx* %8)
  %saved_copy6 = getelementptr inbounds %struct.regexp, %struct.regexp* %call5, i32 0, i32 19
  %9 = load %struct.sv*, %struct.sv** %saved_copy6, align 8
  call void @Perl_sv_force_normal_flags(%struct.sv* %9, i32 4)
  br label %if.end

if.end:                                           ; preds = %if.then4, %if.then
  br label %if.end7

if.end7:                                          ; preds = %if.end, %do.body
  %10 = load %struct.p5rx*, %struct.p5rx** %rx.addr, align 8
  %call8 = call %struct.regexp* @S_ReANY(%struct.p5rx* %10)
  %extflags = getelementptr inbounds %struct.regexp, %struct.regexp* %call8, i32 0, i32 7
  %11 = load i32, i32* %extflags, align 8
  %and9 = and i32 %11, 33554432
  %tobool10 = icmp ne i32 %and9, 0
  br i1 %tobool10, label %if.then11, label %if.end16

if.then11:                                        ; preds = %if.end7
  %12 = load %struct.p5rx*, %struct.p5rx** %rx.addr, align 8
  %call12 = call %struct.regexp* @S_ReANY(%struct.p5rx* %12)
  %subbeg = getelementptr inbounds %struct.regexp, %struct.regexp* %call12, i32 0, i32 18
  %13 = load i8*, i8** %subbeg, align 8
  call void @Perl_safesysfree(i8* %13)
  %14 = load %struct.p5rx*, %struct.p5rx** %rx.addr, align 8
  %call13 = call %struct.regexp* @S_ReANY(%struct.p5rx* %14)
  %extflags14 = getelementptr inbounds %struct.regexp, %struct.regexp* %call13, i32 0, i32 7
  %15 = load i32, i32* %extflags14, align 8
  %and15 = and i32 %15, -33554433
  store i32 %and15, i32* %extflags14, align 8
  br label %if.end16

if.end16:                                         ; preds = %if.then11, %if.end7
  br label %do.end

do.end:                                           ; preds = %if.end16
  %16 = load i64*, i64** %p, align 8
  %17 = load i64, i64* %16, align 8
  %tobool17 = icmp ne i64 %17, 0
  br i1 %tobool17, label %cond.true, label %cond.false

cond.true:                                        ; preds = %do.end
  %18 = load %struct.p5rx*, %struct.p5rx** %rx.addr, align 8
  %call18 = call %struct.regexp* @S_ReANY(%struct.p5rx* %18)
  %extflags19 = getelementptr inbounds %struct.regexp, %struct.regexp* %call18, i32 0, i32 7
  %19 = load i32, i32* %extflags19, align 8
  %or = or i32 %19, 33554432
  store i32 %or, i32* %extflags19, align 8
  br label %cond.end

cond.false:                                       ; preds = %do.end
  %20 = load %struct.p5rx*, %struct.p5rx** %rx.addr, align 8
  %call20 = call %struct.regexp* @S_ReANY(%struct.p5rx* %20)
  %extflags21 = getelementptr inbounds %struct.regexp, %struct.regexp* %call20, i32 0, i32 7
  %21 = load i32, i32* %extflags21, align 8
  %and22 = and i32 %21, -33554433
  store i32 %and22, i32* %extflags21, align 8
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %or, %cond.true ], [ %and22, %cond.false ]
  %22 = load i64*, i64** %p, align 8
  %incdec.ptr = getelementptr inbounds i64, i64* %22, i32 1
  store i64* %incdec.ptr, i64** %p, align 8
  store i64 0, i64* %22, align 8
  %23 = load i64*, i64** %p, align 8
  %incdec.ptr23 = getelementptr inbounds i64, i64* %23, i32 1
  store i64* %incdec.ptr23, i64** %p, align 8
  %24 = load i64, i64* %23, align 8
  %conv = trunc i64 %24 to i32
  %25 = load %struct.p5rx*, %struct.p5rx** %rx.addr, align 8
  %call24 = call %struct.regexp* @S_ReANY(%struct.p5rx* %25)
  %nparens = getelementptr inbounds %struct.regexp, %struct.regexp* %call24, i32 0, i32 12
  store i32 %conv, i32* %nparens, align 8
  %26 = load %struct.p5rx*, %struct.p5rx** %rx.addr, align 8
  %call25 = call %struct.regexp* @S_ReANY(%struct.p5rx* %26)
  %saved_copy26 = getelementptr inbounds %struct.regexp, %struct.regexp* %call25, i32 0, i32 19
  %27 = load %struct.sv*, %struct.sv** %saved_copy26, align 8
  %tobool27 = icmp ne %struct.sv* %27, null
  br i1 %tobool27, label %if.then28, label %if.end31

if.then28:                                        ; preds = %cond.end
  %28 = load %struct.p5rx*, %struct.p5rx** %rx.addr, align 8
  %call29 = call %struct.regexp* @S_ReANY(%struct.p5rx* %28)
  %saved_copy30 = getelementptr inbounds %struct.regexp, %struct.regexp* %call29, i32 0, i32 19
  %29 = load %struct.sv*, %struct.sv** %saved_copy30, align 8
  %30 = bitcast %struct.sv* %29 to i8*
  %31 = bitcast i8* %30 to %struct.sv*
  call void @S_SvREFCNT_dec(%struct.sv* %31)
  br label %if.end31

if.end31:                                         ; preds = %if.then28, %cond.end
  %32 = load i64*, i64** %p, align 8
  %33 = load i64, i64* %32, align 8
  %34 = inttoptr i64 %33 to %struct.sv*
  %35 = load %struct.p5rx*, %struct.p5rx** %rx.addr, align 8
  %call32 = call %struct.regexp* @S_ReANY(%struct.p5rx* %35)
  %saved_copy33 = getelementptr inbounds %struct.regexp, %struct.regexp* %call32, i32 0, i32 19
  store %struct.sv* %34, %struct.sv** %saved_copy33, align 8
  %36 = load i64*, i64** %p, align 8
  %incdec.ptr34 = getelementptr inbounds i64, i64* %36, i32 1
  store i64* %incdec.ptr34, i64** %p, align 8
  store i64 0, i64* %36, align 8
  %37 = load i64*, i64** %p, align 8
  %incdec.ptr35 = getelementptr inbounds i64, i64* %37, i32 1
  store i64* %incdec.ptr35, i64** %p, align 8
  %38 = load i64, i64* %37, align 8
  %39 = inttoptr i64 %38 to i8*
  %40 = load %struct.p5rx*, %struct.p5rx** %rx.addr, align 8
  %call36 = call %struct.regexp* @S_ReANY(%struct.p5rx* %40)
  %subbeg37 = getelementptr inbounds %struct.regexp, %struct.regexp* %call36, i32 0, i32 18
  store i8* %39, i8** %subbeg37, align 8
  %41 = load i64*, i64** %p, align 8
  %incdec.ptr38 = getelementptr inbounds i64, i64* %41, i32 1
  store i64* %incdec.ptr38, i64** %p, align 8
  %42 = load i64, i64* %41, align 8
  %conv39 = trunc i64 %42 to i32
  %conv40 = sext i32 %conv39 to i64
  %43 = load %struct.p5rx*, %struct.p5rx** %rx.addr, align 8
  %call41 = call %struct.regexp* @S_ReANY(%struct.p5rx* %43)
  %sublen = getelementptr inbounds %struct.regexp, %struct.regexp* %call41, i32 0, i32 20
  store i64 %conv40, i64* %sublen, align 8
  %44 = load i64*, i64** %p, align 8
  %incdec.ptr42 = getelementptr inbounds i64, i64* %44, i32 1
  store i64* %incdec.ptr42, i64** %p, align 8
  %45 = load i64, i64* %44, align 8
  %conv43 = trunc i64 %45 to i32
  %conv44 = sext i32 %conv43 to i64
  %46 = load %struct.p5rx*, %struct.p5rx** %rx.addr, align 8
  %call45 = call %struct.regexp* @S_ReANY(%struct.p5rx* %46)
  %suboffset = getelementptr inbounds %struct.regexp, %struct.regexp* %call45, i32 0, i32 21
  store i64 %conv44, i64* %suboffset, align 8
  %47 = load i64*, i64** %p, align 8
  %incdec.ptr46 = getelementptr inbounds i64, i64* %47, i32 1
  store i64* %incdec.ptr46, i64** %p, align 8
  %48 = load i64, i64* %47, align 8
  %conv47 = trunc i64 %48 to i32
  %conv48 = sext i32 %conv47 to i64
  %49 = load %struct.p5rx*, %struct.p5rx** %rx.addr, align 8
  %call49 = call %struct.regexp* @S_ReANY(%struct.p5rx* %49)
  %subcoffset = getelementptr inbounds %struct.regexp, %struct.regexp* %call49, i32 0, i32 22
  store i64 %conv48, i64* %subcoffset, align 8
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end31
  %50 = load i32, i32* %i, align 4
  %51 = load %struct.p5rx*, %struct.p5rx** %rx.addr, align 8
  %call50 = call %struct.regexp* @S_ReANY(%struct.p5rx* %51)
  %nparens51 = getelementptr inbounds %struct.regexp, %struct.regexp* %call50, i32 0, i32 12
  %52 = load i32, i32* %nparens51, align 8
  %cmp = icmp ule i32 %50, %52
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %53 = load i64*, i64** %p, align 8
  %incdec.ptr53 = getelementptr inbounds i64, i64* %53, i32 1
  store i64* %incdec.ptr53, i64** %p, align 8
  %54 = load i64, i64* %53, align 8
  %conv54 = trunc i64 %54 to i32
  %conv55 = sext i32 %conv54 to i64
  %55 = load %struct.p5rx*, %struct.p5rx** %rx.addr, align 8
  %call56 = call %struct.regexp* @S_ReANY(%struct.p5rx* %55)
  %offs = getelementptr inbounds %struct.regexp, %struct.regexp* %call56, i32 0, i32 17
  %56 = load %struct.regexp_paren_pair*, %struct.regexp_paren_pair** %offs, align 8
  %57 = load i32, i32* %i, align 4
  %idxprom = zext i32 %57 to i64
  %arrayidx = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %56, i64 %idxprom
  %start = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %arrayidx, i32 0, i32 0
  store i64 %conv55, i64* %start, align 8
  %58 = load i64*, i64** %p, align 8
  %incdec.ptr57 = getelementptr inbounds i64, i64* %58, i32 1
  store i64* %incdec.ptr57, i64** %p, align 8
  %59 = load i64, i64* %58, align 8
  %conv58 = trunc i64 %59 to i32
  %conv59 = sext i32 %conv58 to i64
  %60 = load %struct.p5rx*, %struct.p5rx** %rx.addr, align 8
  %call60 = call %struct.regexp* @S_ReANY(%struct.p5rx* %60)
  %offs61 = getelementptr inbounds %struct.regexp, %struct.regexp* %call60, i32 0, i32 17
  %61 = load %struct.regexp_paren_pair*, %struct.regexp_paren_pair** %offs61, align 8
  %62 = load i32, i32* %i, align 4
  %idxprom62 = zext i32 %62 to i64
  %arrayidx63 = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %61, i64 %idxprom62
  %end = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %arrayidx63, i32 0, i32 1
  store i64 %conv59, i64* %end, align 8
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %63 = load i32, i32* %i, align 4
  %inc = add i32 %63, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  ret void
}

declare dso_local %struct.op* @Perl_die(i8*, ...) #1

declare dso_local zeroext i1 @Perl_sv_tainted(%struct.sv*) #1

declare dso_local void @Perl_sv_catsv_flags(%struct.sv*, %struct.sv*, i32) #1

declare dso_local %struct.sv* @Perl_newSVpvn_flags(i8*, i64, i32) #1

declare dso_local void @Perl_sv_setpvn(%struct.sv*, i8*, i64) #1

declare dso_local i64 @Perl_sv_utf8_upgrade_flags_grow(%struct.sv*, i32, i64) #1

declare dso_local void @Perl_sv_catpvn_flags(%struct.sv*, i8*, i64, i32) #1

declare dso_local void @Perl_sv_force_normal_flags(%struct.sv*, i32) #1

declare dso_local void @Perl_croak_no_modify() #1

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #2

declare dso_local void @Perl_safesysfree(i8*) #1

declare dso_local void @Perl_sv_setiv(%struct.sv*, i64) #1

declare dso_local %struct.sv* @Perl_sv_newmortal() #1

declare dso_local i32 @Perl_mg_set(%struct.sv*) #1

declare dso_local void @Perl_leave_scope(i32) #1

; Function Attrs: noinline nounwind uwtable
define internal void @S_rxres_free(i8** %rsp) #0 {
entry:
  %rsp.addr = alloca i8**, align 8
  %p = alloca i64*, align 8
  %tmp = alloca i8*, align 8
  store i8** %rsp, i8*** %rsp.addr, align 8
  %0 = load i8**, i8*** %rsp.addr, align 8
  %1 = load i8*, i8** %0, align 8
  %2 = bitcast i8* %1 to i64*
  store i64* %2, i64** %p, align 8
  %3 = load i64*, i64** %p, align 8
  %tobool = icmp ne i64* %3, null
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %4 = load i64*, i64** %p, align 8
  %5 = load i64, i64* %4, align 8
  %6 = inttoptr i64 %5 to i8*
  store i8* %6, i8** %tmp, align 8
  %7 = load i64*, i64** %p, align 8
  %arrayidx = getelementptr inbounds i64, i64* %7, i64 2
  %8 = load i64, i64* %arrayidx, align 8
  %9 = inttoptr i64 %8 to %struct.sv*
  %10 = bitcast %struct.sv* %9 to i8*
  %11 = bitcast i8* %10 to %struct.sv*
  call void @S_SvREFCNT_dec(%struct.sv* %11)
  %12 = load i8*, i8** %tmp, align 8
  call void @Perl_safesysfree(i8* %12)
  %13 = load i64*, i64** %p, align 8
  %14 = bitcast i64* %13 to i8*
  call void @Perl_safesysfree(i8* %14)
  %15 = load i8**, i8*** %rsp.addr, align 8
  store i8* null, i8** %15, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  ret void
}

declare dso_local i8* @Perl_sv_pvn_force_flags(%struct.sv*, i64*, i32) #1

declare dso_local %struct.magic* @Perl_mg_find_mglob(%struct.sv*) #1

declare dso_local %struct.magic* @Perl_sv_magicext_mglob(%struct.sv*) #1

; Function Attrs: noinline nounwind uwtable
define internal zeroext i1 @S_sv_only_taint_gmagic(%struct.sv* %sv) #0 {
entry:
  %retval = alloca i1, align 1
  %sv.addr = alloca %struct.sv*, align 8
  %mg = alloca %struct.magic*, align 8
  store %struct.sv* %sv, %struct.sv** %sv.addr, align 8
  %0 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %sv_any = getelementptr inbounds %struct.sv, %struct.sv* %0, i32 0, i32 0
  %1 = load i8*, i8** %sv_any, align 8
  %2 = bitcast i8* %1 to %struct.xpvmg*
  %xmg_u = getelementptr inbounds %struct.xpvmg, %struct.xpvmg* %2, i32 0, i32 1
  %xmg_magic = bitcast %union._xmgu* %xmg_u to %struct.magic**
  %3 = load %struct.magic*, %struct.magic** %xmg_magic, align 8
  store %struct.magic* %3, %struct.magic** %mg, align 8
  br label %while.cond

while.cond:                                       ; preds = %if.end, %entry
  %4 = load %struct.magic*, %struct.magic** %mg, align 8
  %tobool = icmp ne %struct.magic* %4, null
  br i1 %tobool, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %5 = load %struct.magic*, %struct.magic** %mg, align 8
  %mg_type = getelementptr inbounds %struct.magic, %struct.magic* %5, i32 0, i32 3
  %6 = load i8, i8* %mg_type, align 2
  %conv = sext i8 %6 to i32
  %cmp = icmp ne i32 %conv, 116
  br i1 %cmp, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %while.body
  %7 = load %struct.magic*, %struct.magic** %mg, align 8
  %mg_flags = getelementptr inbounds %struct.magic, %struct.magic* %7, i32 0, i32 4
  %8 = load i8, i8* %mg_flags, align 1
  %conv2 = zext i8 %8 to i32
  %and = and i32 %conv2, 4
  %tobool3 = icmp ne i32 %and, 0
  br i1 %tobool3, label %if.end, label %land.lhs.true4

land.lhs.true4:                                   ; preds = %land.lhs.true
  %9 = load %struct.magic*, %struct.magic** %mg, align 8
  %mg_virtual = getelementptr inbounds %struct.magic, %struct.magic* %9, i32 0, i32 1
  %10 = load %struct.mgvtbl*, %struct.mgvtbl** %mg_virtual, align 8
  %svt_get = getelementptr inbounds %struct.mgvtbl, %struct.mgvtbl* %10, i32 0, i32 0
  %11 = load i32 (%struct.sv*, %struct.magic*)*, i32 (%struct.sv*, %struct.magic*)** %svt_get, align 8
  %tobool5 = icmp ne i32 (%struct.sv*, %struct.magic*)* %11, null
  br i1 %tobool5, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true4
  store i1 false, i1* %retval, align 1
  br label %return

if.end:                                           ; preds = %land.lhs.true4, %land.lhs.true, %while.body
  %12 = load %struct.magic*, %struct.magic** %mg, align 8
  %mg_moremagic = getelementptr inbounds %struct.magic, %struct.magic* %12, i32 0, i32 0
  %13 = load %struct.magic*, %struct.magic** %mg_moremagic, align 8
  store %struct.magic* %13, %struct.magic** %mg, align 8
  br label %while.cond

while.end:                                        ; preds = %while.cond
  store i1 true, i1* %retval, align 1
  br label %return

return:                                           ; preds = %while.end, %if.then
  %14 = load i1, i1* %retval, align 1
  ret i1 %14
}

declare dso_local i64 @Perl_utf8_length(i8*, i8*) #1

; Function Attrs: noinline nounwind uwtable
define dso_local void @Perl_rxres_save(i8** %rsp, %struct.p5rx* %rx) #0 {
entry:
  %rsp.addr = alloca i8**, align 8
  %rx.addr = alloca %struct.p5rx*, align 8
  %p = alloca i64*, align 8
  %i = alloca i32, align 4
  store i8** %rsp, i8*** %rsp.addr, align 8
  store %struct.p5rx* %rx, %struct.p5rx** %rx.addr, align 8
  %0 = load i8**, i8*** %rsp.addr, align 8
  %1 = load i8*, i8** %0, align 8
  %2 = bitcast i8* %1 to i64*
  store i64* %2, i64** %p, align 8
  %3 = load i64*, i64** %p, align 8
  %tobool = icmp ne i64* %3, null
  br i1 %tobool, label %lor.lhs.false, label %if.then

lor.lhs.false:                                    ; preds = %entry
  %4 = load i64*, i64** %p, align 8
  %arrayidx = getelementptr inbounds i64, i64* %4, i64 1
  %5 = load i64, i64* %arrayidx, align 8
  %6 = load %struct.p5rx*, %struct.p5rx** %rx.addr, align 8
  %call = call %struct.regexp* @S_ReANY(%struct.p5rx* %6)
  %nparens = getelementptr inbounds %struct.regexp, %struct.regexp* %call, i32 0, i32 12
  %7 = load i32, i32* %nparens, align 8
  %conv = zext i32 %7 to i64
  %cmp = icmp ult i64 %5, %conv
  br i1 %cmp, label %if.then, label %if.end13

if.then:                                          ; preds = %lor.lhs.false, %entry
  %8 = load %struct.p5rx*, %struct.p5rx** %rx.addr, align 8
  %call2 = call %struct.regexp* @S_ReANY(%struct.p5rx* %8)
  %nparens3 = getelementptr inbounds %struct.regexp, %struct.regexp* %call2, i32 0, i32 12
  %9 = load i32, i32* %nparens3, align 8
  %add = add i32 %9, 1
  %mul = mul i32 %add, 2
  %add4 = add i32 7, %mul
  store i32 %add4, i32* %i, align 4
  %10 = load i64*, i64** %p, align 8
  %tobool5 = icmp ne i64* %10, null
  br i1 %tobool5, label %if.else, label %if.then6

if.then6:                                         ; preds = %if.then
  %11 = load i32, i32* %i, align 4
  %conv7 = zext i32 %11 to i64
  %mul8 = mul i64 %conv7, 8
  %call9 = call i8* @Perl_safesysmalloc(i64 %mul8)
  %12 = bitcast i8* %call9 to i64*
  store i64* %12, i64** %p, align 8
  br label %if.end

if.else:                                          ; preds = %if.then
  %13 = load i64*, i64** %p, align 8
  %14 = bitcast i64* %13 to i8*
  %15 = load i32, i32* %i, align 4
  %conv10 = zext i32 %15 to i64
  %mul11 = mul i64 %conv10, 8
  %call12 = call i8* @Perl_safesysrealloc(i8* %14, i64 %mul11)
  %16 = bitcast i8* %call12 to i64*
  store i64* %16, i64** %p, align 8
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then6
  %17 = load i64*, i64** %p, align 8
  %18 = bitcast i64* %17 to i8*
  %19 = load i8**, i8*** %rsp.addr, align 8
  store i8* %18, i8** %19, align 8
  br label %if.end13

if.end13:                                         ; preds = %if.end, %lor.lhs.false
  %20 = load %struct.p5rx*, %struct.p5rx** %rx.addr, align 8
  %call14 = call %struct.regexp* @S_ReANY(%struct.p5rx* %20)
  %extflags = getelementptr inbounds %struct.regexp, %struct.regexp* %call14, i32 0, i32 7
  %21 = load i32, i32* %extflags, align 8
  %and = and i32 %21, 33554432
  %tobool15 = icmp ne i32 %and, 0
  br i1 %tobool15, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end13
  %22 = load %struct.p5rx*, %struct.p5rx** %rx.addr, align 8
  %call16 = call %struct.regexp* @S_ReANY(%struct.p5rx* %22)
  %subbeg = getelementptr inbounds %struct.regexp, %struct.regexp* %call16, i32 0, i32 18
  %23 = load i8*, i8** %subbeg, align 8
  br label %cond.end

cond.false:                                       ; preds = %if.end13
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %23, %cond.true ], [ null, %cond.false ]
  %24 = ptrtoint i8* %cond to i64
  %25 = load i64*, i64** %p, align 8
  %incdec.ptr = getelementptr inbounds i64, i64* %25, i32 1
  store i64* %incdec.ptr, i64** %p, align 8
  store i64 %24, i64* %25, align 8
  %26 = load %struct.p5rx*, %struct.p5rx** %rx.addr, align 8
  %call17 = call %struct.regexp* @S_ReANY(%struct.p5rx* %26)
  %extflags18 = getelementptr inbounds %struct.regexp, %struct.regexp* %call17, i32 0, i32 7
  %27 = load i32, i32* %extflags18, align 8
  %and19 = and i32 %27, -33554433
  store i32 %and19, i32* %extflags18, align 8
  %28 = load %struct.p5rx*, %struct.p5rx** %rx.addr, align 8
  %call20 = call %struct.regexp* @S_ReANY(%struct.p5rx* %28)
  %nparens21 = getelementptr inbounds %struct.regexp, %struct.regexp* %call20, i32 0, i32 12
  %29 = load i32, i32* %nparens21, align 8
  %conv22 = zext i32 %29 to i64
  %30 = load i64*, i64** %p, align 8
  %incdec.ptr23 = getelementptr inbounds i64, i64* %30, i32 1
  store i64* %incdec.ptr23, i64** %p, align 8
  store i64 %conv22, i64* %30, align 8
  %31 = load %struct.p5rx*, %struct.p5rx** %rx.addr, align 8
  %call24 = call %struct.regexp* @S_ReANY(%struct.p5rx* %31)
  %saved_copy = getelementptr inbounds %struct.regexp, %struct.regexp* %call24, i32 0, i32 19
  %32 = load %struct.sv*, %struct.sv** %saved_copy, align 8
  %33 = ptrtoint %struct.sv* %32 to i64
  %34 = load i64*, i64** %p, align 8
  %incdec.ptr25 = getelementptr inbounds i64, i64* %34, i32 1
  store i64* %incdec.ptr25, i64** %p, align 8
  store i64 %33, i64* %34, align 8
  %35 = load %struct.p5rx*, %struct.p5rx** %rx.addr, align 8
  %call26 = call %struct.regexp* @S_ReANY(%struct.p5rx* %35)
  %saved_copy27 = getelementptr inbounds %struct.regexp, %struct.regexp* %call26, i32 0, i32 19
  store %struct.sv* null, %struct.sv** %saved_copy27, align 8
  %36 = load %struct.p5rx*, %struct.p5rx** %rx.addr, align 8
  %call28 = call %struct.regexp* @S_ReANY(%struct.p5rx* %36)
  %subbeg29 = getelementptr inbounds %struct.regexp, %struct.regexp* %call28, i32 0, i32 18
  %37 = load i8*, i8** %subbeg29, align 8
  %38 = ptrtoint i8* %37 to i64
  %39 = load i64*, i64** %p, align 8
  %incdec.ptr30 = getelementptr inbounds i64, i64* %39, i32 1
  store i64* %incdec.ptr30, i64** %p, align 8
  store i64 %38, i64* %39, align 8
  %40 = load %struct.p5rx*, %struct.p5rx** %rx.addr, align 8
  %call31 = call %struct.regexp* @S_ReANY(%struct.p5rx* %40)
  %sublen = getelementptr inbounds %struct.regexp, %struct.regexp* %call31, i32 0, i32 20
  %41 = load i64, i64* %sublen, align 8
  %42 = load i64*, i64** %p, align 8
  %incdec.ptr32 = getelementptr inbounds i64, i64* %42, i32 1
  store i64* %incdec.ptr32, i64** %p, align 8
  store i64 %41, i64* %42, align 8
  %43 = load %struct.p5rx*, %struct.p5rx** %rx.addr, align 8
  %call33 = call %struct.regexp* @S_ReANY(%struct.p5rx* %43)
  %suboffset = getelementptr inbounds %struct.regexp, %struct.regexp* %call33, i32 0, i32 21
  %44 = load i64, i64* %suboffset, align 8
  %45 = load i64*, i64** %p, align 8
  %incdec.ptr34 = getelementptr inbounds i64, i64* %45, i32 1
  store i64* %incdec.ptr34, i64** %p, align 8
  store i64 %44, i64* %45, align 8
  %46 = load %struct.p5rx*, %struct.p5rx** %rx.addr, align 8
  %call35 = call %struct.regexp* @S_ReANY(%struct.p5rx* %46)
  %subcoffset = getelementptr inbounds %struct.regexp, %struct.regexp* %call35, i32 0, i32 22
  %47 = load i64, i64* %subcoffset, align 8
  %48 = load i64*, i64** %p, align 8
  %incdec.ptr36 = getelementptr inbounds i64, i64* %48, i32 1
  store i64* %incdec.ptr36, i64** %p, align 8
  store i64 %47, i64* %48, align 8
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %cond.end
  %49 = load i32, i32* %i, align 4
  %50 = load %struct.p5rx*, %struct.p5rx** %rx.addr, align 8
  %call37 = call %struct.regexp* @S_ReANY(%struct.p5rx* %50)
  %nparens38 = getelementptr inbounds %struct.regexp, %struct.regexp* %call37, i32 0, i32 12
  %51 = load i32, i32* %nparens38, align 8
  %cmp39 = icmp ule i32 %49, %51
  br i1 %cmp39, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %52 = load %struct.p5rx*, %struct.p5rx** %rx.addr, align 8
  %call41 = call %struct.regexp* @S_ReANY(%struct.p5rx* %52)
  %offs = getelementptr inbounds %struct.regexp, %struct.regexp* %call41, i32 0, i32 17
  %53 = load %struct.regexp_paren_pair*, %struct.regexp_paren_pair** %offs, align 8
  %54 = load i32, i32* %i, align 4
  %idxprom = zext i32 %54 to i64
  %arrayidx42 = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %53, i64 %idxprom
  %start = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %arrayidx42, i32 0, i32 0
  %55 = load i64, i64* %start, align 8
  %56 = load i64*, i64** %p, align 8
  %incdec.ptr43 = getelementptr inbounds i64, i64* %56, i32 1
  store i64* %incdec.ptr43, i64** %p, align 8
  store i64 %55, i64* %56, align 8
  %57 = load %struct.p5rx*, %struct.p5rx** %rx.addr, align 8
  %call44 = call %struct.regexp* @S_ReANY(%struct.p5rx* %57)
  %offs45 = getelementptr inbounds %struct.regexp, %struct.regexp* %call44, i32 0, i32 17
  %58 = load %struct.regexp_paren_pair*, %struct.regexp_paren_pair** %offs45, align 8
  %59 = load i32, i32* %i, align 4
  %idxprom46 = zext i32 %59 to i64
  %arrayidx47 = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %58, i64 %idxprom46
  %end = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %arrayidx47, i32 0, i32 1
  %60 = load i64, i64* %end, align 8
  %61 = load i64*, i64** %p, align 8
  %incdec.ptr48 = getelementptr inbounds i64, i64* %61, i32 1
  store i64* %incdec.ptr48, i64** %p, align 8
  store i64 %60, i64* %61, align 8
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %62 = load i32, i32* %i, align 4
  %inc = add i32 %62, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  ret void
}

declare dso_local i8* @Perl_safesysmalloc(i64) #1

declare dso_local i8* @Perl_safesysrealloc(i8*, i64) #1

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.op* @Perl_pp_formline() #0 {
entry:
  %retval = alloca %struct.op*, align 8
  %sp = alloca %struct.sv**, align 8
  %mark = alloca %struct.sv**, align 8
  %origmark = alloca i32, align 4
  %tmpForm = alloca %struct.sv*, align 8
  %formsv = alloca %struct.sv*, align 8
  %fpc = alloca i32*, align 8
  %t = alloca i8*, align 8
  %f = alloca i8*, align 8
  %arg = alloca i32, align 4
  %sv = alloca %struct.sv*, align 8
  %item = alloca i8*, align 8
  %itemsize = alloca i32, align 4
  %itembytes = alloca i32, align 4
  %fieldsize = alloca i32, align 4
  %lines = alloca i32, align 4
  %chopspace = alloca i8, align 1
  %chophere = alloca i8*, align 8
  %linemark = alloca i64, align 8
  %value = alloca double, align 8
  %gotsome = alloca i8, align 1
  %len = alloca i64, align 8
  %linemax = alloca i64, align 8
  %item_is_utf8 = alloca i8, align 1
  %targ_is_utf8 = alloca i8, align 1
  %fmt = alloca i8*, align 8
  %mg = alloca %struct.magic*, align 8
  %source = alloca i8*, align 8
  %to_copy = alloca i64, align 8
  %trans = alloca i8, align 1
  %s = alloca i8*, align 8
  %send = alloca i8*, align 8
  %s197 = alloca i8*, align 8
  %send212 = alloca i8*, align 8
  %size = alloca i32, align 4
  %s319 = alloca i8*, align 8
  %oneline = alloca i8, align 1
  %s359 = alloca i8*, align 8
  %send374 = alloca i8*, align 8
  %tmp = alloca i8*, align 8
  %grow = alloca i64, align 8
  %s440 = alloca i8*, align 8
  %s500 = alloca i8*, align 8
  %send501 = alloca i8*, align 8
  %ch = alloca i32, align 4
  %max = alloca i64, align 8
  %len603 = alloca i32, align 4
  %s641 = alloca i8*, align 8
  %send642 = alloca i8*, align 8
  %s1 = alloca i8*, align 8
  %0 = load %struct.sv**, %struct.sv*** @PL_stack_sp, align 8
  store %struct.sv** %0, %struct.sv*** %sp, align 8
  %1 = load %struct.sv**, %struct.sv*** @PL_stack_base, align 8
  %2 = load i32*, i32** @PL_markstack_ptr, align 8
  %incdec.ptr = getelementptr inbounds i32, i32* %2, i32 -1
  store i32* %incdec.ptr, i32** @PL_markstack_ptr, align 8
  %3 = load i32, i32* %2, align 4
  %idx.ext = sext i32 %3 to i64
  %add.ptr = getelementptr inbounds %struct.sv*, %struct.sv** %1, i64 %idx.ext
  store %struct.sv** %add.ptr, %struct.sv*** %mark, align 8
  %4 = load %struct.sv**, %struct.sv*** %mark, align 8
  %5 = load %struct.sv**, %struct.sv*** @PL_stack_base, align 8
  %sub.ptr.lhs.cast = ptrtoint %struct.sv** %4 to i64
  %sub.ptr.rhs.cast = ptrtoint %struct.sv** %5 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 8
  %conv = trunc i64 %sub.ptr.div to i32
  store i32 %conv, i32* %origmark, align 4
  %6 = load %struct.sv**, %struct.sv*** %mark, align 8
  %incdec.ptr1 = getelementptr inbounds %struct.sv*, %struct.sv** %6, i32 1
  store %struct.sv** %incdec.ptr1, %struct.sv*** %mark, align 8
  %7 = load %struct.sv*, %struct.sv** %incdec.ptr1, align 8
  store %struct.sv* %7, %struct.sv** %tmpForm, align 8
  store %struct.sv* null, %struct.sv** %sv, align 8
  store i8* null, i8** %item, align 8
  store i32 0, i32* %itemsize, align 4
  store i32 0, i32* %itembytes, align 4
  store i32 0, i32* %fieldsize, align 4
  store i32 0, i32* %lines, align 4
  %8 = load i8*, i8** @PL_chopset, align 8
  %call = call i8* @strchr(i8* %8, i32 32) #8
  %cmp = icmp ne i8* %call, null
  %frombool = zext i1 %cmp to i8
  store i8 %frombool, i8* %chopspace, align 1
  store i8* null, i8** %chophere, align 8
  store i64 0, i64* %linemark, align 8
  store i8 0, i8* %gotsome, align 1
  store i8 0, i8* %item_is_utf8, align 1
  store i8 0, i8* %targ_is_utf8, align 1
  store %struct.magic* null, %struct.magic** %mg, align 8
  %9 = load %struct.sv*, %struct.sv** %tmpForm, align 8
  %call3 = call %struct.magic* @S_doparseform(%struct.sv* %9)
  store %struct.magic* %call3, %struct.magic** %mg, align 8
  %10 = load %struct.magic*, %struct.magic** %mg, align 8
  %mg_ptr = getelementptr inbounds %struct.magic, %struct.magic* %10, i32 0, i32 7
  %11 = load i8*, i8** %mg_ptr, align 8
  %12 = bitcast i8* %11 to i32*
  store i32* %12, i32** %fpc, align 8
  %13 = load %struct.magic*, %struct.magic** %mg, align 8
  %mg_obj = getelementptr inbounds %struct.magic, %struct.magic* %13, i32 0, i32 6
  %14 = load %struct.sv*, %struct.sv** %mg_obj, align 8
  store %struct.sv* %14, %struct.sv** %formsv, align 8
  %15 = load %struct.sv*, %struct.sv** @PL_formtarget, align 8
  %sv_flags = getelementptr inbounds %struct.sv, %struct.sv* %15, i32 0, i32 2
  %16 = load i32, i32* %sv_flags, align 4
  %and = and i32 %16, 430018304
  %cmp4 = icmp eq i32 %and, 1024
  br i1 %cmp4, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %17 = load %struct.sv*, %struct.sv** @PL_formtarget, align 8
  %sv_any = getelementptr inbounds %struct.sv, %struct.sv* %17, i32 0, i32 0
  %18 = load i8*, i8** %sv_any, align 8
  %19 = bitcast i8* %18 to %struct.xpv*
  %xpv_cur = getelementptr inbounds %struct.xpv, %struct.xpv* %19, i32 0, i32 2
  %20 = load i64, i64* %xpv_cur, align 8
  store i64 %20, i64* %len, align 8
  %21 = load %struct.sv*, %struct.sv** @PL_formtarget, align 8
  %sv_u = getelementptr inbounds %struct.sv, %struct.sv* %21, i32 0, i32 3
  %svu_pv = bitcast %union.anon* %sv_u to i8**
  %22 = load i8*, i8** %svu_pv, align 8
  br label %cond.end

cond.false:                                       ; preds = %entry
  %23 = load %struct.sv*, %struct.sv** @PL_formtarget, align 8
  %call6 = call i8* @Perl_sv_pvn_force_flags(%struct.sv* %23, i64* %len, i32 2)
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %22, %cond.true ], [ %call6, %cond.false ]
  %24 = load %struct.sv*, %struct.sv** %tmpForm, align 8
  %sv_flags7 = getelementptr inbounds %struct.sv, %struct.sv* %24, i32 0, i32 2
  %25 = load i32, i32* %sv_flags7, align 4
  %and8 = and i32 %25, 14680064
  %tobool = icmp ne i32 %and8, 0
  br i1 %tobool, label %land.lhs.true, label %lor.lhs.false

land.lhs.true:                                    ; preds = %cond.end
  %26 = load %struct.sv*, %struct.sv** %tmpForm, align 8
  %call9 = call zeroext i1 @Perl_sv_tainted(%struct.sv* %26)
  br i1 %call9, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true, %cond.end
  %27 = load %struct.sv*, %struct.sv** %formsv, align 8
  %sv_flags11 = getelementptr inbounds %struct.sv, %struct.sv* %27, i32 0, i32 2
  %28 = load i32, i32* %sv_flags11, align 4
  %and12 = and i32 %28, 14680064
  %tobool13 = icmp ne i32 %and12, 0
  br i1 %tobool13, label %land.lhs.true14, label %if.end22

land.lhs.true14:                                  ; preds = %lor.lhs.false
  %29 = load %struct.sv*, %struct.sv** %formsv, align 8
  %call15 = call zeroext i1 @Perl_sv_tainted(%struct.sv* %29)
  br i1 %call15, label %if.then, label %if.end22

if.then:                                          ; preds = %land.lhs.true14, %land.lhs.true
  br label %do.body

do.body:                                          ; preds = %if.then
  %30 = load i8, i8* @PL_tainting, align 1
  %tobool17 = trunc i8 %30 to i1
  br i1 %tobool17, label %cond.true19, label %cond.false20

cond.true19:                                      ; preds = %do.body
  br i1 true, label %if.then21, label %if.end

cond.false20:                                     ; preds = %do.body
  br i1 false, label %if.then21, label %if.end

if.then21:                                        ; preds = %cond.false20, %cond.true19
  %31 = load %struct.sv*, %struct.sv** @PL_formtarget, align 8
  call void @Perl_sv_magic(%struct.sv* %31, %struct.sv* null, i32 116, i8* null, i32 0)
  br label %if.end

if.end:                                           ; preds = %if.then21, %cond.false20, %cond.true19
  br label %do.end

do.end:                                           ; preds = %if.end
  br label %if.end22

if.end22:                                         ; preds = %do.end, %land.lhs.true14, %lor.lhs.false
  %32 = load %struct.sv*, %struct.sv** @PL_formtarget, align 8
  %sv_flags23 = getelementptr inbounds %struct.sv, %struct.sv* %32, i32 0, i32 2
  %33 = load i32, i32* %sv_flags23, align 4
  %and24 = and i32 %33, 536870912
  %tobool25 = icmp ne i32 %and24, 0
  br i1 %tobool25, label %land.lhs.true26, label %if.end30

land.lhs.true26:                                  ; preds = %if.end22
  %34 = load %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_hints = getelementptr inbounds %struct.cop, %struct.cop* %34, i32 0, i32 10
  %35 = load i32, i32* %cop_hints, align 8
  %add = add i32 %35, 0
  %and27 = and i32 %add, 8
  %tobool28 = icmp ne i32 %and27, 0
  br i1 %tobool28, label %if.end30, label %if.then29

if.then29:                                        ; preds = %land.lhs.true26
  store i8 1, i8* %targ_is_utf8, align 1
  br label %if.end30

if.end30:                                         ; preds = %if.then29, %land.lhs.true26, %if.end22
  %36 = load %struct.sv*, %struct.sv** %formsv, align 8
  %sv_any31 = getelementptr inbounds %struct.sv, %struct.sv* %36, i32 0, i32 0
  %37 = load i8*, i8** %sv_any31, align 8
  %38 = bitcast i8* %37 to %struct.xpv*
  %xpv_cur32 = getelementptr inbounds %struct.xpv, %struct.xpv* %38, i32 0, i32 2
  %39 = load i64, i64* %xpv_cur32, align 8
  %40 = load %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_hints33 = getelementptr inbounds %struct.cop, %struct.cop* %40, i32 0, i32 10
  %41 = load i32, i32* %cop_hints33, align 8
  %add34 = add i32 %41, 0
  %and35 = and i32 %add34, 8
  %tobool36 = icmp ne i32 %and35, 0
  %42 = zext i1 %tobool36 to i64
  %cond37 = select i1 %tobool36, i32 1, i32 3
  %conv38 = sext i32 %cond37 to i64
  %mul = mul i64 %39, %conv38
  %add39 = add i64 %mul, 1
  store i64 %add39, i64* %linemax, align 8
  %43 = load %struct.sv*, %struct.sv** @PL_formtarget, align 8
  %sv_flags40 = getelementptr inbounds %struct.sv, %struct.sv* %43, i32 0, i32 2
  %44 = load i32, i32* %sv_flags40, align 4
  %and41 = and i32 %44, 268435456
  %tobool42 = icmp ne i32 %and41, 0
  br i1 %tobool42, label %cond.true49, label %lor.lhs.false43

lor.lhs.false43:                                  ; preds = %if.end30
  %45 = load %struct.sv*, %struct.sv** @PL_formtarget, align 8
  %sv_any44 = getelementptr inbounds %struct.sv, %struct.sv* %45, i32 0, i32 0
  %46 = load i8*, i8** %sv_any44, align 8
  %47 = bitcast i8* %46 to %struct.xpv*
  %xpv_len_u = getelementptr inbounds %struct.xpv, %struct.xpv* %47, i32 0, i32 3
  %xpvlenu_len = bitcast %union.anon.26* %xpv_len_u to i64*
  %48 = load i64, i64* %xpvlenu_len, align 8
  %49 = load i64, i64* %len, align 8
  %50 = load i64, i64* %linemax, align 8
  %add45 = add i64 %49, %50
  %add46 = add i64 %add45, 1
  %cmp47 = icmp ult i64 %48, %add46
  br i1 %cmp47, label %cond.true49, label %cond.false53

cond.true49:                                      ; preds = %lor.lhs.false43, %if.end30
  %51 = load %struct.sv*, %struct.sv** @PL_formtarget, align 8
  %52 = load i64, i64* %len, align 8
  %53 = load i64, i64* %linemax, align 8
  %add50 = add i64 %52, %53
  %add51 = add i64 %add50, 1
  %call52 = call i8* @Perl_sv_grow(%struct.sv* %51, i64 %add51)
  br label %cond.end56

cond.false53:                                     ; preds = %lor.lhs.false43
  %54 = load %struct.sv*, %struct.sv** @PL_formtarget, align 8
  %sv_u54 = getelementptr inbounds %struct.sv, %struct.sv* %54, i32 0, i32 3
  %svu_pv55 = bitcast %union.anon* %sv_u54 to i8**
  %55 = load i8*, i8** %svu_pv55, align 8
  br label %cond.end56

cond.end56:                                       ; preds = %cond.false53, %cond.true49
  %cond57 = phi i8* [ %call52, %cond.true49 ], [ %55, %cond.false53 ]
  store i8* %cond57, i8** %t, align 8
  %56 = load i64, i64* %len, align 8
  %57 = load i8*, i8** %t, align 8
  %add.ptr58 = getelementptr inbounds i8, i8* %57, i64 %56
  store i8* %add.ptr58, i8** %t, align 8
  %58 = load %struct.sv*, %struct.sv** %formsv, align 8
  %sv_flags59 = getelementptr inbounds %struct.sv, %struct.sv* %58, i32 0, i32 2
  %59 = load i32, i32* %sv_flags59, align 4
  %and60 = and i32 %59, 2098176
  %cmp61 = icmp eq i32 %and60, 1024
  br i1 %cmp61, label %cond.true63, label %cond.false69

cond.true63:                                      ; preds = %cond.end56
  %60 = load %struct.sv*, %struct.sv** %formsv, align 8
  %sv_any64 = getelementptr inbounds %struct.sv, %struct.sv* %60, i32 0, i32 0
  %61 = load i8*, i8** %sv_any64, align 8
  %62 = bitcast i8* %61 to %struct.xpv*
  %xpv_cur65 = getelementptr inbounds %struct.xpv, %struct.xpv* %62, i32 0, i32 2
  %63 = load i64, i64* %xpv_cur65, align 8
  store i64 %63, i64* %len, align 8
  %64 = load %struct.sv*, %struct.sv** %formsv, align 8
  %sv_u66 = getelementptr inbounds %struct.sv, %struct.sv* %64, i32 0, i32 3
  %svu_pv67 = bitcast %union.anon* %sv_u66 to i8**
  %65 = load i8*, i8** %svu_pv67, align 8
  %add.ptr68 = getelementptr inbounds i8, i8* %65, i64 0
  br label %cond.end71

cond.false69:                                     ; preds = %cond.end56
  %66 = load %struct.sv*, %struct.sv** %formsv, align 8
  %call70 = call i8* @Perl_sv_2pv_flags(%struct.sv* %66, i64* %len, i32 34)
  br label %cond.end71

cond.end71:                                       ; preds = %cond.false69, %cond.true63
  %cond72 = phi i8* [ %add.ptr68, %cond.true63 ], [ %call70, %cond.false69 ]
  store i8* %cond72, i8** %f, align 8
  br label %for.cond

for.cond:                                         ; preds = %sw.epilog, %cond.end71
  %67 = load i32*, i32** %fpc, align 8
  %incdec.ptr73 = getelementptr inbounds i32, i32* %67, i32 1
  store i32* %incdec.ptr73, i32** %fpc, align 8
  %68 = load i32, i32* %67, align 4
  switch i32 %68, label %sw.epilog [
    i32 1, label %sw.bb
    i32 2, label %sw.bb79
    i32 3, label %sw.bb107
    i32 4, label %sw.bb111
    i32 5, label %sw.bb136
    i32 6, label %sw.bb196
    i32 7, label %sw.bb289
    i32 8, label %sw.bb300
    i32 9, label %sw.bb313
    i32 10, label %sw.bb315
    i32 17, label %sw.bb353
    i32 11, label %sw.bb354
    i32 16, label %sw.bb541
    i32 12, label %sw.bb546
    i32 13, label %sw.bb608
    i32 14, label %sw.bb626
    i32 15, label %sw.bb640
    i32 0, label %sw.bb701
  ]

sw.bb:                                            ; preds = %for.cond
  %69 = load i8*, i8** %t, align 8
  %70 = load %struct.sv*, %struct.sv** @PL_formtarget, align 8
  %sv_u74 = getelementptr inbounds %struct.sv, %struct.sv* %70, i32 0, i32 3
  %svu_pv75 = bitcast %union.anon* %sv_u74 to i8**
  %71 = load i8*, i8** %svu_pv75, align 8
  %sub.ptr.lhs.cast76 = ptrtoint i8* %69 to i64
  %sub.ptr.rhs.cast77 = ptrtoint i8* %71 to i64
  %sub.ptr.sub78 = sub i64 %sub.ptr.lhs.cast76, %sub.ptr.rhs.cast77
  store i64 %sub.ptr.sub78, i64* %linemark, align 8
  %72 = load i32, i32* %lines, align 4
  %inc = add nsw i32 %72, 1
  store i32 %inc, i32* %lines, align 4
  store i8 0, i8* %gotsome, align 1
  br label %sw.epilog

sw.bb79:                                          ; preds = %for.cond
  %73 = load i32*, i32** %fpc, align 8
  %incdec.ptr80 = getelementptr inbounds i32, i32* %73, i32 1
  store i32* %incdec.ptr80, i32** %fpc, align 8
  %74 = load i32, i32* %73, align 4
  %conv81 = zext i32 %74 to i64
  store i64 %conv81, i64* %to_copy, align 8
  %75 = load i8*, i8** %f, align 8
  store i8* %75, i8** %source, align 8
  %76 = load i64, i64* %to_copy, align 8
  %77 = load i8*, i8** %f, align 8
  %add.ptr82 = getelementptr inbounds i8, i8* %77, i64 %76
  store i8* %add.ptr82, i8** %f, align 8
  store i8 126, i8* %trans, align 1
  %78 = load i8, i8* %targ_is_utf8, align 1
  %tobool83 = trunc i8 %78 to i1
  br i1 %tobool83, label %cond.true85, label %cond.false95

cond.true85:                                      ; preds = %sw.bb79
  %79 = load %struct.sv*, %struct.sv** %formsv, align 8
  %sv_flags86 = getelementptr inbounds %struct.sv, %struct.sv* %79, i32 0, i32 2
  %80 = load i32, i32* %sv_flags86, align 4
  %and87 = and i32 %80, 536870912
  %tobool88 = icmp ne i32 %and87, 0
  br i1 %tobool88, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %cond.true85
  %81 = load %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_hints89 = getelementptr inbounds %struct.cop, %struct.cop* %81, i32 0, i32 10
  %82 = load i32, i32* %cop_hints89, align 8
  %add90 = add i32 %82, 0
  %and91 = and i32 %add90, 8
  %tobool92 = icmp ne i32 %and91, 0
  %lnot = xor i1 %tobool92, true
  br label %land.end

land.end:                                         ; preds = %land.rhs, %cond.true85
  %83 = phi i1 [ false, %cond.true85 ], [ %lnot, %land.rhs ]
  %lnot93 = xor i1 %83, true
  %lnot94 = xor i1 %lnot93, true
  %lnot.ext = zext i1 %lnot94 to i32
  br label %cond.end103

cond.false95:                                     ; preds = %sw.bb79
  %84 = load %struct.sv*, %struct.sv** %formsv, align 8
  %sv_flags96 = getelementptr inbounds %struct.sv, %struct.sv* %84, i32 0, i32 2
  %85 = load i32, i32* %sv_flags96, align 4
  %and97 = and i32 %85, 536870912
  %tobool98 = icmp ne i32 %and97, 0
  %lnot99 = xor i1 %tobool98, true
  %lnot101 = xor i1 %lnot99, true
  %lnot.ext102 = zext i1 %lnot101 to i32
  br label %cond.end103

cond.end103:                                      ; preds = %cond.false95, %land.end
  %cond104 = phi i32 [ %lnot.ext, %land.end ], [ %lnot.ext102, %cond.false95 ]
  %tobool105 = icmp ne i32 %cond104, 0
  %frombool106 = zext i1 %tobool105 to i8
  store i8 %frombool106, i8* %item_is_utf8, align 1
  br label %append

sw.bb107:                                         ; preds = %for.cond
  %86 = load i32*, i32** %fpc, align 8
  %incdec.ptr108 = getelementptr inbounds i32, i32* %86, i32 1
  store i32* %incdec.ptr108, i32** %fpc, align 8
  %87 = load i32, i32* %86, align 4
  %88 = load i8*, i8** %f, align 8
  %idx.ext109 = zext i32 %87 to i64
  %add.ptr110 = getelementptr inbounds i8, i8* %88, i64 %idx.ext109
  store i8* %add.ptr110, i8** %f, align 8
  br label %sw.epilog

sw.bb111:                                         ; preds = %for.cond
  %89 = load i32*, i32** %fpc, align 8
  %incdec.ptr112 = getelementptr inbounds i32, i32* %89, i32 1
  store i32* %incdec.ptr112, i32** %fpc, align 8
  %90 = load i32, i32* %89, align 4
  store i32 %90, i32* %arg, align 4
  %91 = load i32, i32* %arg, align 4
  %92 = load i8*, i8** %f, align 8
  %idx.ext113 = sext i32 %91 to i64
  %add.ptr114 = getelementptr inbounds i8, i8* %92, i64 %idx.ext113
  store i8* %add.ptr114, i8** %f, align 8
  %93 = load i32, i32* %arg, align 4
  store i32 %93, i32* %fieldsize, align 4
  %94 = load %struct.sv**, %struct.sv*** %mark, align 8
  %95 = load %struct.sv**, %struct.sv*** %sp, align 8
  %cmp115 = icmp ult %struct.sv** %94, %95
  br i1 %cmp115, label %if.then117, label %if.else

if.then117:                                       ; preds = %sw.bb111
  %96 = load %struct.sv**, %struct.sv*** %mark, align 8
  %incdec.ptr118 = getelementptr inbounds %struct.sv*, %struct.sv** %96, i32 1
  store %struct.sv** %incdec.ptr118, %struct.sv*** %mark, align 8
  %97 = load %struct.sv*, %struct.sv** %incdec.ptr118, align 8
  store %struct.sv* %97, %struct.sv** %sv, align 8
  br label %if.end119

if.else:                                          ; preds = %sw.bb111
  store %struct.sv* @PL_sv_no, %struct.sv** %sv, align 8
  call void (i32, i8*, ...) @Perl_ck_warner(i32 28, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.1, i64 0, i64 0))
  br label %if.end119

if.end119:                                        ; preds = %if.else, %if.then117
  %98 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_flags120 = getelementptr inbounds %struct.sv, %struct.sv* %98, i32 0, i32 2
  %99 = load i32, i32* %sv_flags120, align 4
  %and121 = and i32 %99, 14680064
  %tobool122 = icmp ne i32 %and121, 0
  br i1 %tobool122, label %land.lhs.true123, label %if.end135

land.lhs.true123:                                 ; preds = %if.end119
  %100 = load %struct.sv*, %struct.sv** %sv, align 8
  %call124 = call zeroext i1 @Perl_sv_tainted(%struct.sv* %100)
  br i1 %call124, label %if.then126, label %if.end135

if.then126:                                       ; preds = %land.lhs.true123
  br label %do.body127

do.body127:                                       ; preds = %if.then126
  %101 = load i8, i8* @PL_tainting, align 1
  %tobool128 = trunc i8 %101 to i1
  br i1 %tobool128, label %cond.true130, label %cond.false131

cond.true130:                                     ; preds = %do.body127
  br i1 true, label %if.then132, label %if.end133

cond.false131:                                    ; preds = %do.body127
  br i1 false, label %if.then132, label %if.end133

if.then132:                                       ; preds = %cond.false131, %cond.true130
  %102 = load %struct.sv*, %struct.sv** @PL_formtarget, align 8
  call void @Perl_sv_magic(%struct.sv* %102, %struct.sv* null, i32 116, i8* null, i32 0)
  br label %if.end133

if.end133:                                        ; preds = %if.then132, %cond.false131, %cond.true130
  br label %do.end134

do.end134:                                        ; preds = %if.end133
  br label %if.end135

if.end135:                                        ; preds = %do.end134, %land.lhs.true123, %if.end119
  br label %sw.epilog

sw.bb136:                                         ; preds = %for.cond
  %103 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_flags137 = getelementptr inbounds %struct.sv, %struct.sv* %103, i32 0, i32 2
  %104 = load i32, i32* %sv_flags137, align 4
  %and138 = and i32 %104, 2098176
  %cmp139 = icmp eq i32 %and138, 1024
  br i1 %cmp139, label %cond.true141, label %cond.false147

cond.true141:                                     ; preds = %sw.bb136
  %105 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_any142 = getelementptr inbounds %struct.sv, %struct.sv* %105, i32 0, i32 0
  %106 = load i8*, i8** %sv_any142, align 8
  %107 = bitcast i8* %106 to %struct.xpv*
  %xpv_cur143 = getelementptr inbounds %struct.xpv, %struct.xpv* %107, i32 0, i32 2
  %108 = load i64, i64* %xpv_cur143, align 8
  store i64 %108, i64* %len, align 8
  %109 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_u144 = getelementptr inbounds %struct.sv, %struct.sv* %109, i32 0, i32 3
  %svu_pv145 = bitcast %union.anon* %sv_u144 to i8**
  %110 = load i8*, i8** %svu_pv145, align 8
  %add.ptr146 = getelementptr inbounds i8, i8* %110, i64 0
  br label %cond.end149

cond.false147:                                    ; preds = %sw.bb136
  %111 = load %struct.sv*, %struct.sv** %sv, align 8
  %call148 = call i8* @Perl_sv_2pv_flags(%struct.sv* %111, i64* %len, i32 34)
  br label %cond.end149

cond.end149:                                      ; preds = %cond.false147, %cond.true141
  %cond150 = phi i8* [ %add.ptr146, %cond.true141 ], [ %call148, %cond.false147 ]
  store i8* %cond150, i8** %item, align 8
  store i8* %cond150, i8** %s, align 8
  %112 = load i8*, i8** %s, align 8
  %113 = load i64, i64* %len, align 8
  %add.ptr151 = getelementptr inbounds i8, i8* %112, i64 %113
  store i8* %add.ptr151, i8** %send, align 8
  store i32 0, i32* %itemsize, align 4
  %114 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_flags152 = getelementptr inbounds %struct.sv, %struct.sv* %114, i32 0, i32 2
  %115 = load i32, i32* %sv_flags152, align 4
  %and153 = and i32 %115, 536870912
  %tobool154 = icmp ne i32 %and153, 0
  br i1 %tobool154, label %land.rhs155, label %land.end162

land.rhs155:                                      ; preds = %cond.end149
  %116 = load %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_hints156 = getelementptr inbounds %struct.cop, %struct.cop* %116, i32 0, i32 10
  %117 = load i32, i32* %cop_hints156, align 8
  %add157 = add i32 %117, 0
  %and158 = and i32 %add157, 8
  %tobool159 = icmp ne i32 %and158, 0
  %lnot160 = xor i1 %tobool159, true
  br label %land.end162

land.end162:                                      ; preds = %land.rhs155, %cond.end149
  %118 = phi i1 [ false, %cond.end149 ], [ %lnot160, %land.rhs155 ]
  %frombool163 = zext i1 %118 to i8
  store i8 %frombool163, i8* %item_is_utf8, align 1
  br label %while.cond

while.cond:                                       ; preds = %if.end191, %land.end162
  %119 = load i8*, i8** %s, align 8
  %120 = load i8*, i8** %send, align 8
  %cmp164 = icmp ult i8* %119, %120
  br i1 %cmp164, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %121 = load i8*, i8** %s, align 8
  %122 = load i8, i8* %121, align 1
  %idxprom = zext i8 %122 to i64
  %arrayidx = getelementptr inbounds [0 x i32], [0 x i32]* @PL_charclass, i64 0, i64 %idxprom
  %123 = load i32, i32* %arrayidx, align 4
  %and166 = and i32 %123, 24576
  %cmp167 = icmp eq i32 %and166, 24576
  br i1 %cmp167, label %if.else170, label %if.then169

if.then169:                                       ; preds = %while.body
  store i8 1, i8* %gotsome, align 1
  br label %if.end176

if.else170:                                       ; preds = %while.body
  %124 = load i8*, i8** %s, align 8
  %125 = load i8, i8* %124, align 1
  %conv171 = sext i8 %125 to i32
  %cmp172 = icmp eq i32 %conv171, 10
  br i1 %cmp172, label %if.then174, label %if.end175

if.then174:                                       ; preds = %if.else170
  br label %while.end

if.end175:                                        ; preds = %if.else170
  br label %if.end176

if.end176:                                        ; preds = %if.end175, %if.then169
  %126 = load i8, i8* %item_is_utf8, align 1
  %tobool177 = trunc i8 %126 to i1
  br i1 %tobool177, label %if.then178, label %if.else184

if.then178:                                       ; preds = %if.end176
  %127 = load i8*, i8** %s, align 8
  %128 = load i8, i8* %127, align 1
  %idxprom179 = zext i8 %128 to i64
  %arrayidx180 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_utf8skip, i64 0, i64 %idxprom179
  %129 = load i8, i8* %arrayidx180, align 1
  %conv181 = zext i8 %129 to i32
  %130 = load i8*, i8** %s, align 8
  %idx.ext182 = sext i32 %conv181 to i64
  %add.ptr183 = getelementptr inbounds i8, i8* %130, i64 %idx.ext182
  store i8* %add.ptr183, i8** %s, align 8
  br label %if.end186

if.else184:                                       ; preds = %if.end176
  %131 = load i8*, i8** %s, align 8
  %incdec.ptr185 = getelementptr inbounds i8, i8* %131, i32 1
  store i8* %incdec.ptr185, i8** %s, align 8
  br label %if.end186

if.end186:                                        ; preds = %if.else184, %if.then178
  %132 = load i32, i32* %itemsize, align 4
  %inc187 = add nsw i32 %132, 1
  store i32 %inc187, i32* %itemsize, align 4
  %133 = load i32, i32* %itemsize, align 4
  %134 = load i32, i32* %fieldsize, align 4
  %cmp188 = icmp eq i32 %133, %134
  br i1 %cmp188, label %if.then190, label %if.end191

if.then190:                                       ; preds = %if.end186
  br label %while.end

if.end191:                                        ; preds = %if.end186
  br label %while.cond

while.end:                                        ; preds = %if.then190, %if.then174, %while.cond
  %135 = load i8*, i8** %s, align 8
  %136 = load i8*, i8** %item, align 8
  %sub.ptr.lhs.cast192 = ptrtoint i8* %135 to i64
  %sub.ptr.rhs.cast193 = ptrtoint i8* %136 to i64
  %sub.ptr.sub194 = sub i64 %sub.ptr.lhs.cast192, %sub.ptr.rhs.cast193
  %conv195 = trunc i64 %sub.ptr.sub194 to i32
  store i32 %conv195, i32* %itembytes, align 4
  %137 = load i8*, i8** %s, align 8
  store i8* %137, i8** %chophere, align 8
  br label %sw.epilog

sw.bb196:                                         ; preds = %for.cond
  %138 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_flags198 = getelementptr inbounds %struct.sv, %struct.sv* %138, i32 0, i32 2
  %139 = load i32, i32* %sv_flags198, align 4
  %and199 = and i32 %139, 2098176
  %cmp200 = icmp eq i32 %and199, 1024
  br i1 %cmp200, label %cond.true202, label %cond.false208

cond.true202:                                     ; preds = %sw.bb196
  %140 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_any203 = getelementptr inbounds %struct.sv, %struct.sv* %140, i32 0, i32 0
  %141 = load i8*, i8** %sv_any203, align 8
  %142 = bitcast i8* %141 to %struct.xpv*
  %xpv_cur204 = getelementptr inbounds %struct.xpv, %struct.xpv* %142, i32 0, i32 2
  %143 = load i64, i64* %xpv_cur204, align 8
  store i64 %143, i64* %len, align 8
  %144 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_u205 = getelementptr inbounds %struct.sv, %struct.sv* %144, i32 0, i32 3
  %svu_pv206 = bitcast %union.anon* %sv_u205 to i8**
  %145 = load i8*, i8** %svu_pv206, align 8
  %add.ptr207 = getelementptr inbounds i8, i8* %145, i64 0
  br label %cond.end210

cond.false208:                                    ; preds = %sw.bb196
  %146 = load %struct.sv*, %struct.sv** %sv, align 8
  %call209 = call i8* @Perl_sv_2pv_flags(%struct.sv* %146, i64* %len, i32 34)
  br label %cond.end210

cond.end210:                                      ; preds = %cond.false208, %cond.true202
  %cond211 = phi i8* [ %add.ptr207, %cond.true202 ], [ %call209, %cond.false208 ]
  store i8* %cond211, i8** %item, align 8
  store i8* %cond211, i8** %s197, align 8
  %147 = load i8*, i8** %s197, align 8
  %148 = load i64, i64* %len, align 8
  %add.ptr213 = getelementptr inbounds i8, i8* %147, i64 %148
  store i8* %add.ptr213, i8** %send212, align 8
  store i32 0, i32* %size, align 4
  store i8* null, i8** %chophere, align 8
  %149 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_flags214 = getelementptr inbounds %struct.sv, %struct.sv* %149, i32 0, i32 2
  %150 = load i32, i32* %sv_flags214, align 4
  %and215 = and i32 %150, 536870912
  %tobool216 = icmp ne i32 %and215, 0
  br i1 %tobool216, label %land.rhs217, label %land.end224

land.rhs217:                                      ; preds = %cond.end210
  %151 = load %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_hints218 = getelementptr inbounds %struct.cop, %struct.cop* %151, i32 0, i32 10
  %152 = load i32, i32* %cop_hints218, align 8
  %add219 = add i32 %152, 0
  %and220 = and i32 %add219, 8
  %tobool221 = icmp ne i32 %and220, 0
  %lnot222 = xor i1 %tobool221, true
  br label %land.end224

land.end224:                                      ; preds = %land.rhs217, %cond.end210
  %153 = phi i1 [ false, %cond.end210 ], [ %lnot222, %land.rhs217 ]
  %frombool225 = zext i1 %153 to i8
  store i8 %frombool225, i8* %item_is_utf8, align 1
  br label %while.cond226

while.cond226:                                    ; preds = %if.end276, %land.end224
  %154 = load i8*, i8** %s197, align 8
  %155 = load i8*, i8** %send212, align 8
  %cmp227 = icmp ult i8* %154, %155
  br i1 %cmp227, label %while.body229, label %while.end278

while.body229:                                    ; preds = %while.cond226
  %156 = load i8*, i8** %s197, align 8
  %157 = load i8, i8* %156, align 1
  %idxprom230 = zext i8 %157 to i64
  %arrayidx231 = getelementptr inbounds [0 x i32], [0 x i32]* @PL_charclass, i64 0, i64 %idxprom230
  %158 = load i32, i32* %arrayidx231, align 4
  %and232 = and i32 %158, 17408
  %cmp233 = icmp eq i32 %and232, 17408
  br i1 %cmp233, label %if.then235, label %if.else248

if.then235:                                       ; preds = %while.body229
  %159 = load i8*, i8** %s197, align 8
  %160 = load i8, i8* %159, align 1
  %conv236 = sext i8 %160 to i32
  %cmp237 = icmp eq i32 %conv236, 13
  br i1 %cmp237, label %if.then239, label %if.end240

if.then239:                                       ; preds = %if.then235
  %161 = load i8*, i8** %s197, align 8
  store i8* %161, i8** %chophere, align 8
  %162 = load i32, i32* %size, align 4
  store i32 %162, i32* %itemsize, align 4
  br label %while.end278

if.end240:                                        ; preds = %if.then235
  %163 = load i8, i8* %chopspace, align 1
  %tobool241 = trunc i8 %163 to i1
  br i1 %tobool241, label %if.then242, label %if.end243

if.then242:                                       ; preds = %if.end240
  %164 = load i8*, i8** %s197, align 8
  store i8* %164, i8** %chophere, align 8
  %165 = load i32, i32* %size, align 4
  store i32 %165, i32* %itemsize, align 4
  br label %if.end243

if.end243:                                        ; preds = %if.then242, %if.end240
  %166 = load i32, i32* %size, align 4
  %167 = load i32, i32* %fieldsize, align 4
  %cmp244 = icmp eq i32 %166, %167
  br i1 %cmp244, label %if.then246, label %if.end247

if.then246:                                       ; preds = %if.end243
  br label %while.end278

if.end247:                                        ; preds = %if.end243
  br label %if.end266

if.else248:                                       ; preds = %while.body229
  %168 = load i8*, i8** @PL_chopset, align 8
  %169 = load i8*, i8** %s197, align 8
  %170 = load i8, i8* %169, align 1
  %conv249 = sext i8 %170 to i32
  %call250 = call i8* @strchr(i8* %168, i32 %conv249) #8
  %tobool251 = icmp ne i8* %call250, null
  br i1 %tobool251, label %if.then252, label %if.end254

if.then252:                                       ; preds = %if.else248
  %171 = load i8*, i8** %s197, align 8
  %add.ptr253 = getelementptr inbounds i8, i8* %171, i64 1
  store i8* %add.ptr253, i8** %chophere, align 8
  %172 = load i32, i32* %size, align 4
  store i32 %172, i32* %itemsize, align 4
  br label %if.end254

if.end254:                                        ; preds = %if.then252, %if.else248
  %173 = load i32, i32* %size, align 4
  %174 = load i32, i32* %fieldsize, align 4
  %cmp255 = icmp eq i32 %173, %174
  br i1 %cmp255, label %if.then257, label %if.end258

if.then257:                                       ; preds = %if.end254
  br label %while.end278

if.end258:                                        ; preds = %if.end254
  %175 = load i8*, i8** %s197, align 8
  %176 = load i8, i8* %175, align 1
  %idxprom259 = zext i8 %176 to i64
  %arrayidx260 = getelementptr inbounds [0 x i32], [0 x i32]* @PL_charclass, i64 0, i64 %idxprom259
  %177 = load i32, i32* %arrayidx260, align 4
  %and261 = and i32 %177, 24576
  %cmp262 = icmp eq i32 %and261, 24576
  br i1 %cmp262, label %if.end265, label %if.then264

if.then264:                                       ; preds = %if.end258
  store i8 1, i8* %gotsome, align 1
  br label %if.end265

if.end265:                                        ; preds = %if.then264, %if.end258
  br label %if.end266

if.end266:                                        ; preds = %if.end265, %if.end247
  %178 = load i8, i8* %item_is_utf8, align 1
  %tobool267 = trunc i8 %178 to i1
  br i1 %tobool267, label %if.then268, label %if.else274

if.then268:                                       ; preds = %if.end266
  %179 = load i8*, i8** %s197, align 8
  %180 = load i8, i8* %179, align 1
  %idxprom269 = zext i8 %180 to i64
  %arrayidx270 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_utf8skip, i64 0, i64 %idxprom269
  %181 = load i8, i8* %arrayidx270, align 1
  %conv271 = zext i8 %181 to i32
  %182 = load i8*, i8** %s197, align 8
  %idx.ext272 = sext i32 %conv271 to i64
  %add.ptr273 = getelementptr inbounds i8, i8* %182, i64 %idx.ext272
  store i8* %add.ptr273, i8** %s197, align 8
  br label %if.end276

if.else274:                                       ; preds = %if.end266
  %183 = load i8*, i8** %s197, align 8
  %incdec.ptr275 = getelementptr inbounds i8, i8* %183, i32 1
  store i8* %incdec.ptr275, i8** %s197, align 8
  br label %if.end276

if.end276:                                        ; preds = %if.else274, %if.then268
  %184 = load i32, i32* %size, align 4
  %inc277 = add nsw i32 %184, 1
  store i32 %inc277, i32* %size, align 4
  br label %while.cond226

while.end278:                                     ; preds = %if.then257, %if.then246, %if.then239, %while.cond226
  %185 = load i8*, i8** %chophere, align 8
  %tobool279 = icmp ne i8* %185, null
  br i1 %tobool279, label %lor.lhs.false280, label %if.then283

lor.lhs.false280:                                 ; preds = %while.end278
  %186 = load i8*, i8** %s197, align 8
  %187 = load i8*, i8** %send212, align 8
  %cmp281 = icmp eq i8* %186, %187
  br i1 %cmp281, label %if.then283, label %if.end284

if.then283:                                       ; preds = %lor.lhs.false280, %while.end278
  %188 = load i8*, i8** %s197, align 8
  store i8* %188, i8** %chophere, align 8
  %189 = load i32, i32* %size, align 4
  store i32 %189, i32* %itemsize, align 4
  br label %if.end284

if.end284:                                        ; preds = %if.then283, %lor.lhs.false280
  %190 = load i8*, i8** %chophere, align 8
  %191 = load i8*, i8** %item, align 8
  %sub.ptr.lhs.cast285 = ptrtoint i8* %190 to i64
  %sub.ptr.rhs.cast286 = ptrtoint i8* %191 to i64
  %sub.ptr.sub287 = sub i64 %sub.ptr.lhs.cast285, %sub.ptr.rhs.cast286
  %conv288 = trunc i64 %sub.ptr.sub287 to i32
  store i32 %conv288, i32* %itembytes, align 4
  br label %sw.epilog

sw.bb289:                                         ; preds = %for.cond
  %192 = load i32, i32* %fieldsize, align 4
  %193 = load i32, i32* %itemsize, align 4
  %sub = sub nsw i32 %192, %193
  store i32 %sub, i32* %arg, align 4
  %194 = load i32, i32* %arg, align 4
  %tobool290 = icmp ne i32 %194, 0
  br i1 %tobool290, label %if.then291, label %if.end299

if.then291:                                       ; preds = %sw.bb289
  %195 = load i32, i32* %arg, align 4
  %196 = load i32, i32* %fieldsize, align 4
  %sub292 = sub nsw i32 %196, %195
  store i32 %sub292, i32* %fieldsize, align 4
  br label %while.cond293

while.cond293:                                    ; preds = %while.body296, %if.then291
  %197 = load i32, i32* %arg, align 4
  %dec = add nsw i32 %197, -1
  store i32 %dec, i32* %arg, align 4
  %cmp294 = icmp sgt i32 %197, 0
  br i1 %cmp294, label %while.body296, label %while.end298

while.body296:                                    ; preds = %while.cond293
  %198 = load i8*, i8** %t, align 8
  %incdec.ptr297 = getelementptr inbounds i8, i8* %198, i32 1
  store i8* %incdec.ptr297, i8** %t, align 8
  store i8 32, i8* %198, align 1
  br label %while.cond293

while.end298:                                     ; preds = %while.cond293
  br label %if.end299

if.end299:                                        ; preds = %while.end298, %sw.bb289
  br label %sw.epilog

sw.bb300:                                         ; preds = %for.cond
  %199 = load i32, i32* %fieldsize, align 4
  %200 = load i32, i32* %itemsize, align 4
  %sub301 = sub nsw i32 %199, %200
  store i32 %sub301, i32* %arg, align 4
  %201 = load i32, i32* %arg, align 4
  %tobool302 = icmp ne i32 %201, 0
  br i1 %tobool302, label %if.then303, label %if.end312

if.then303:                                       ; preds = %sw.bb300
  %202 = load i32, i32* %arg, align 4
  %div = sdiv i32 %202, 2
  store i32 %div, i32* %arg, align 4
  %203 = load i32, i32* %arg, align 4
  %204 = load i32, i32* %fieldsize, align 4
  %sub304 = sub nsw i32 %204, %203
  store i32 %sub304, i32* %fieldsize, align 4
  br label %while.cond305

while.cond305:                                    ; preds = %while.body309, %if.then303
  %205 = load i32, i32* %arg, align 4
  %dec306 = add nsw i32 %205, -1
  store i32 %dec306, i32* %arg, align 4
  %cmp307 = icmp sgt i32 %205, 0
  br i1 %cmp307, label %while.body309, label %while.end311

while.body309:                                    ; preds = %while.cond305
  %206 = load i8*, i8** %t, align 8
  %incdec.ptr310 = getelementptr inbounds i8, i8* %206, i32 1
  store i8* %incdec.ptr310, i8** %t, align 8
  store i8 32, i8* %206, align 1
  br label %while.cond305

while.end311:                                     ; preds = %while.cond305
  br label %if.end312

if.end312:                                        ; preds = %while.end311, %sw.bb300
  br label %sw.epilog

sw.bb313:                                         ; preds = %for.cond
  %207 = load i32, i32* %itembytes, align 4
  %conv314 = sext i32 %207 to i64
  store i64 %conv314, i64* %to_copy, align 8
  %208 = load i8*, i8** %item, align 8
  store i8* %208, i8** %source, align 8
  store i8 1, i8* %trans, align 1
  br label %append

sw.bb315:                                         ; preds = %for.cond
  %209 = load %struct.sv*, %struct.sv** %sv, align 8
  %cmp316 = icmp ne %struct.sv* %209, @PL_sv_no
  br i1 %cmp316, label %if.then318, label %if.end352

if.then318:                                       ; preds = %sw.bb315
  %210 = load i8*, i8** %chophere, align 8
  store i8* %210, i8** %s319, align 8
  %211 = load i8, i8* %chopspace, align 1
  %tobool320 = trunc i8 %211 to i1
  br i1 %tobool320, label %if.then321, label %if.end331

if.then321:                                       ; preds = %if.then318
  br label %while.cond322

while.cond322:                                    ; preds = %while.body328, %if.then321
  %212 = load i8*, i8** %s319, align 8
  %213 = load i8, i8* %212, align 1
  %idxprom323 = zext i8 %213 to i64
  %arrayidx324 = getelementptr inbounds [0 x i32], [0 x i32]* @PL_charclass, i64 0, i64 %idxprom323
  %214 = load i32, i32* %arrayidx324, align 4
  %and325 = and i32 %214, 17408
  %cmp326 = icmp eq i32 %and325, 17408
  br i1 %cmp326, label %while.body328, label %while.end330

while.body328:                                    ; preds = %while.cond322
  %215 = load i8*, i8** %s319, align 8
  %incdec.ptr329 = getelementptr inbounds i8, i8* %215, i32 1
  store i8* %incdec.ptr329, i8** %s319, align 8
  br label %while.cond322

while.end330:                                     ; preds = %while.cond322
  br label %if.end331

if.end331:                                        ; preds = %while.end330, %if.then318
  %216 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_flags332 = getelementptr inbounds %struct.sv, %struct.sv* %216, i32 0, i32 2
  %217 = load i32, i32* %sv_flags332, align 4
  %and333 = and i32 %217, 16384
  %tobool334 = icmp ne i32 %and333, 0
  br i1 %tobool334, label %if.then335, label %if.else336

if.then335:                                       ; preds = %if.end331
  %218 = load %struct.sv*, %struct.sv** %sv, align 8
  %219 = load i8*, i8** %s319, align 8
  call void @Perl_sv_chop(%struct.sv* %218, i8* %219)
  br label %if.end341

if.else336:                                       ; preds = %if.end331
  %220 = load %struct.sv*, %struct.sv** %sv, align 8
  %221 = load i8*, i8** %s319, align 8
  %222 = load i64, i64* %len, align 8
  %223 = load i8*, i8** %s319, align 8
  %224 = load i8*, i8** %item, align 8
  %sub.ptr.lhs.cast337 = ptrtoint i8* %223 to i64
  %sub.ptr.rhs.cast338 = ptrtoint i8* %224 to i64
  %sub.ptr.sub339 = sub i64 %sub.ptr.lhs.cast337, %sub.ptr.rhs.cast338
  %sub340 = sub i64 %222, %sub.ptr.sub339
  call void @Perl_sv_setpvn(%struct.sv* %220, i8* %221, i64 %sub340)
  br label %if.end341

if.end341:                                        ; preds = %if.else336, %if.then335
  br label %do.body342

do.body342:                                       ; preds = %if.end341
  %225 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_flags343 = getelementptr inbounds %struct.sv, %struct.sv* %225, i32 0, i32 2
  %226 = load i32, i32* %sv_flags343, align 4
  %and344 = and i32 %226, 4194304
  %tobool345 = icmp ne i32 %and344, 0
  br i1 %tobool345, label %cond.true346, label %cond.false347

cond.true346:                                     ; preds = %do.body342
  br i1 true, label %if.then348, label %if.end350

cond.false347:                                    ; preds = %do.body342
  br i1 false, label %if.then348, label %if.end350

if.then348:                                       ; preds = %cond.false347, %cond.true346
  %227 = load %struct.sv*, %struct.sv** %sv, align 8
  %call349 = call i32 @Perl_mg_set(%struct.sv* %227)
  br label %if.end350

if.end350:                                        ; preds = %if.then348, %cond.false347, %cond.true346
  br label %do.end351

do.end351:                                        ; preds = %if.end350
  br label %sw.epilog

if.end352:                                        ; preds = %sw.bb315
  br label %sw.bb353

sw.bb353:                                         ; preds = %for.cond, %if.end352
  store i8 0, i8* %chopspace, align 1
  br label %sw.bb354

sw.bb354:                                         ; preds = %for.cond, %sw.bb353
  %228 = load i32*, i32** %fpc, align 8
  %arrayidx355 = getelementptr inbounds i32, i32* %228, i64 -1
  %229 = load i32, i32* %arrayidx355, align 4
  %cmp356 = icmp eq i32 %229, 17
  %frombool358 = zext i1 %cmp356 to i8
  store i8 %frombool358, i8* %oneline, align 1
  %230 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_flags360 = getelementptr inbounds %struct.sv, %struct.sv* %230, i32 0, i32 2
  %231 = load i32, i32* %sv_flags360, align 4
  %and361 = and i32 %231, 2098176
  %cmp362 = icmp eq i32 %and361, 1024
  br i1 %cmp362, label %cond.true364, label %cond.false370

cond.true364:                                     ; preds = %sw.bb354
  %232 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_any365 = getelementptr inbounds %struct.sv, %struct.sv* %232, i32 0, i32 0
  %233 = load i8*, i8** %sv_any365, align 8
  %234 = bitcast i8* %233 to %struct.xpv*
  %xpv_cur366 = getelementptr inbounds %struct.xpv, %struct.xpv* %234, i32 0, i32 2
  %235 = load i64, i64* %xpv_cur366, align 8
  store i64 %235, i64* %len, align 8
  %236 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_u367 = getelementptr inbounds %struct.sv, %struct.sv* %236, i32 0, i32 3
  %svu_pv368 = bitcast %union.anon* %sv_u367 to i8**
  %237 = load i8*, i8** %svu_pv368, align 8
  %add.ptr369 = getelementptr inbounds i8, i8* %237, i64 0
  br label %cond.end372

cond.false370:                                    ; preds = %sw.bb354
  %238 = load %struct.sv*, %struct.sv** %sv, align 8
  %call371 = call i8* @Perl_sv_2pv_flags(%struct.sv* %238, i64* %len, i32 34)
  br label %cond.end372

cond.end372:                                      ; preds = %cond.false370, %cond.true364
  %cond373 = phi i8* [ %add.ptr369, %cond.true364 ], [ %call371, %cond.false370 ]
  store i8* %cond373, i8** %item, align 8
  store i8* %cond373, i8** %s359, align 8
  %239 = load i8*, i8** %s359, align 8
  %240 = load i64, i64* %len, align 8
  %add.ptr375 = getelementptr inbounds i8, i8* %239, i64 %240
  store i8* %add.ptr375, i8** %send374, align 8
  %241 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_flags376 = getelementptr inbounds %struct.sv, %struct.sv* %241, i32 0, i32 2
  %242 = load i32, i32* %sv_flags376, align 4
  %and377 = and i32 %242, 536870912
  %tobool378 = icmp ne i32 %and377, 0
  br i1 %tobool378, label %land.rhs379, label %land.end386

land.rhs379:                                      ; preds = %cond.end372
  %243 = load %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_hints380 = getelementptr inbounds %struct.cop, %struct.cop* %243, i32 0, i32 10
  %244 = load i32, i32* %cop_hints380, align 8
  %add381 = add i32 %244, 0
  %and382 = and i32 %add381, 8
  %tobool383 = icmp ne i32 %and382, 0
  %lnot384 = xor i1 %tobool383, true
  br label %land.end386

land.end386:                                      ; preds = %land.rhs379, %cond.end372
  %245 = phi i1 [ false, %cond.end372 ], [ %lnot384, %land.rhs379 ]
  %frombool387 = zext i1 %245 to i8
  store i8 %frombool387, i8* %item_is_utf8, align 1
  %246 = load i8*, i8** %s359, align 8
  %247 = load i64, i64* %len, align 8
  %add.ptr388 = getelementptr inbounds i8, i8* %246, i64 %247
  store i8* %add.ptr388, i8** %chophere, align 8
  %248 = load i64, i64* %len, align 8
  %tobool389 = icmp ne i64 %248, 0
  br i1 %tobool389, label %if.end391, label %if.then390

if.then390:                                       ; preds = %land.end386
  br label %sw.epilog

if.end391:                                        ; preds = %land.end386
  store i8 0, i8* %trans, align 1
  store i8 1, i8* %gotsome, align 1
  %249 = load i8*, i8** %s359, align 8
  store i8* %249, i8** %source, align 8
  %250 = load i64, i64* %len, align 8
  store i64 %250, i64* %to_copy, align 8
  br label %while.cond392

while.cond392:                                    ; preds = %if.end416, %if.end391
  %251 = load i8*, i8** %s359, align 8
  %252 = load i8*, i8** %send374, align 8
  %cmp393 = icmp ult i8* %251, %252
  br i1 %cmp393, label %while.body395, label %while.end417

while.body395:                                    ; preds = %while.cond392
  %253 = load i8*, i8** %s359, align 8
  %incdec.ptr396 = getelementptr inbounds i8, i8* %253, i32 1
  store i8* %incdec.ptr396, i8** %s359, align 8
  %254 = load i8, i8* %253, align 1
  %conv397 = sext i8 %254 to i32
  %cmp398 = icmp eq i32 %conv397, 10
  br i1 %cmp398, label %if.then400, label %if.end416

if.then400:                                       ; preds = %while.body395
  %255 = load i8, i8* %oneline, align 1
  %tobool401 = trunc i8 %255 to i1
  br i1 %tobool401, label %if.then402, label %if.else407

if.then402:                                       ; preds = %if.then400
  %256 = load i8*, i8** %s359, align 8
  %257 = load i8*, i8** %item, align 8
  %sub.ptr.lhs.cast403 = ptrtoint i8* %256 to i64
  %sub.ptr.rhs.cast404 = ptrtoint i8* %257 to i64
  %sub.ptr.sub405 = sub i64 %sub.ptr.lhs.cast403, %sub.ptr.rhs.cast404
  %sub406 = sub nsw i64 %sub.ptr.sub405, 1
  store i64 %sub406, i64* %to_copy, align 8
  %258 = load i8*, i8** %s359, align 8
  store i8* %258, i8** %chophere, align 8
  br label %while.end417

if.else407:                                       ; preds = %if.then400
  %259 = load i8*, i8** %s359, align 8
  %260 = load i8*, i8** %send374, align 8
  %cmp408 = icmp eq i8* %259, %260
  br i1 %cmp408, label %if.then410, label %if.else412

if.then410:                                       ; preds = %if.else407
  %261 = load i64, i64* %to_copy, align 8
  %dec411 = add i64 %261, -1
  store i64 %dec411, i64* %to_copy, align 8
  br label %if.end414

if.else412:                                       ; preds = %if.else407
  %262 = load i32, i32* %lines, align 4
  %inc413 = add nsw i32 %262, 1
  store i32 %inc413, i32* %lines, align 4
  br label %if.end414

if.end414:                                        ; preds = %if.else412, %if.then410
  br label %if.end415

if.end415:                                        ; preds = %if.end414
  br label %if.end416

if.end416:                                        ; preds = %if.end415, %while.body395
  br label %while.cond392

while.end417:                                     ; preds = %if.then402, %while.cond392
  br label %append

append:                                           ; preds = %while.end417, %sw.bb313, %cond.end103
  store i8* null, i8** %tmp, align 8
  store i64 0, i64* %grow, align 8
  br label %do.body418

do.body418:                                       ; preds = %append
  %263 = load i8*, i8** %t, align 8
  %264 = load %struct.sv*, %struct.sv** @PL_formtarget, align 8
  %sv_u419 = getelementptr inbounds %struct.sv, %struct.sv* %264, i32 0, i32 3
  %svu_pv420 = bitcast %union.anon* %sv_u419 to i8**
  %265 = load i8*, i8** %svu_pv420, align 8
  %add.ptr421 = getelementptr inbounds i8, i8* %265, i64 0
  %sub.ptr.lhs.cast422 = ptrtoint i8* %263 to i64
  %sub.ptr.rhs.cast423 = ptrtoint i8* %add.ptr421 to i64
  %sub.ptr.sub424 = sub i64 %sub.ptr.lhs.cast422, %sub.ptr.rhs.cast423
  %266 = load %struct.sv*, %struct.sv** @PL_formtarget, align 8
  %sv_any425 = getelementptr inbounds %struct.sv, %struct.sv* %266, i32 0, i32 0
  %267 = load i8*, i8** %sv_any425, align 8
  %268 = bitcast i8* %267 to %struct.xpv*
  %xpv_cur426 = getelementptr inbounds %struct.xpv, %struct.xpv* %268, i32 0, i32 2
  store i64 %sub.ptr.sub424, i64* %xpv_cur426, align 8
  br label %do.end427

do.end427:                                        ; preds = %do.body418
  %269 = load i8, i8* %targ_is_utf8, align 1
  %tobool428 = trunc i8 %269 to i1
  br i1 %tobool428, label %land.lhs.true430, label %if.else434

land.lhs.true430:                                 ; preds = %do.end427
  %270 = load i8, i8* %item_is_utf8, align 1
  %tobool431 = trunc i8 %270 to i1
  br i1 %tobool431, label %if.else434, label %if.then432

if.then432:                                       ; preds = %land.lhs.true430
  %271 = load i8*, i8** %source, align 8
  %call433 = call i8* @Perl_bytes_to_utf8(i8* %271, i64* %to_copy)
  store i8* %call433, i8** %tmp, align 8
  store i8* %call433, i8** %source, align 8
  br label %if.end460

if.else434:                                       ; preds = %land.lhs.true430, %do.end427
  %272 = load i8, i8* %item_is_utf8, align 1
  %tobool435 = trunc i8 %272 to i1
  br i1 %tobool435, label %land.lhs.true437, label %if.end459

land.lhs.true437:                                 ; preds = %if.else434
  %273 = load i8, i8* %targ_is_utf8, align 1
  %tobool438 = trunc i8 %273 to i1
  br i1 %tobool438, label %if.end459, label %if.then439

if.then439:                                       ; preds = %land.lhs.true437
  %274 = load %struct.sv*, %struct.sv** @PL_formtarget, align 8
  %call441 = call i64 @Perl_sv_utf8_upgrade_flags_grow(%struct.sv* %274, i32 0, i64 0)
  store i8 1, i8* %targ_is_utf8, align 1
  %275 = load %struct.sv*, %struct.sv** @PL_formtarget, align 8
  %sv_u442 = getelementptr inbounds %struct.sv, %struct.sv* %275, i32 0, i32 3
  %svu_pv443 = bitcast %union.anon* %sv_u442 to i8**
  %276 = load i8*, i8** %svu_pv443, align 8
  store i8* %276, i8** %s440, align 8
  %277 = load i64, i64* %linemax, align 8
  store i64 %277, i64* %grow, align 8
  br label %while.cond444

while.cond444:                                    ; preds = %while.body447, %if.then439
  %278 = load i64, i64* %linemark, align 8
  %dec445 = add i64 %278, -1
  store i64 %dec445, i64* %linemark, align 8
  %tobool446 = icmp ne i64 %278, 0
  br i1 %tobool446, label %while.body447, label %while.end453

while.body447:                                    ; preds = %while.cond444
  %279 = load i8*, i8** %s440, align 8
  %280 = load i8, i8* %279, align 1
  %idxprom448 = zext i8 %280 to i64
  %arrayidx449 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_utf8skip, i64 0, i64 %idxprom448
  %281 = load i8, i8* %arrayidx449, align 1
  %conv450 = zext i8 %281 to i32
  %282 = load i8*, i8** %s440, align 8
  %idx.ext451 = sext i32 %conv450 to i64
  %add.ptr452 = getelementptr inbounds i8, i8* %282, i64 %idx.ext451
  store i8* %add.ptr452, i8** %s440, align 8
  br label %while.cond444

while.end453:                                     ; preds = %while.cond444
  %283 = load i8*, i8** %s440, align 8
  %284 = load %struct.sv*, %struct.sv** @PL_formtarget, align 8
  %sv_u454 = getelementptr inbounds %struct.sv, %struct.sv* %284, i32 0, i32 3
  %svu_pv455 = bitcast %union.anon* %sv_u454 to i8**
  %285 = load i8*, i8** %svu_pv455, align 8
  %sub.ptr.lhs.cast456 = ptrtoint i8* %283 to i64
  %sub.ptr.rhs.cast457 = ptrtoint i8* %285 to i64
  %sub.ptr.sub458 = sub i64 %sub.ptr.lhs.cast456, %sub.ptr.rhs.cast457
  store i64 %sub.ptr.sub458, i64* %linemark, align 8
  br label %if.end459

if.end459:                                        ; preds = %while.end453, %land.lhs.true437, %if.else434
  br label %if.end460

if.end460:                                        ; preds = %if.end459, %if.then432
  %286 = load i8, i8* %trans, align 1
  %tobool461 = icmp ne i8 %286, 0
  br i1 %tobool461, label %if.end464, label %if.then462

if.then462:                                       ; preds = %if.end460
  %287 = load i64, i64* %linemax, align 8
  %288 = load i64, i64* %to_copy, align 8
  %add463 = add i64 %287, %288
  store i64 %add463, i64* %grow, align 8
  br label %if.end464

if.end464:                                        ; preds = %if.then462, %if.end460
  %289 = load i64, i64* %grow, align 8
  %tobool465 = icmp ne i64 %289, 0
  br i1 %tobool465, label %if.then466, label %if.end491

if.then466:                                       ; preds = %if.end464
  %290 = load %struct.sv*, %struct.sv** @PL_formtarget, align 8
  %sv_flags467 = getelementptr inbounds %struct.sv, %struct.sv* %290, i32 0, i32 2
  %291 = load i32, i32* %sv_flags467, align 4
  %and468 = and i32 %291, 268435456
  %tobool469 = icmp ne i32 %and468, 0
  br i1 %tobool469, label %cond.true480, label %lor.lhs.false470

lor.lhs.false470:                                 ; preds = %if.then466
  %292 = load %struct.sv*, %struct.sv** @PL_formtarget, align 8
  %sv_any471 = getelementptr inbounds %struct.sv, %struct.sv* %292, i32 0, i32 0
  %293 = load i8*, i8** %sv_any471, align 8
  %294 = bitcast i8* %293 to %struct.xpv*
  %xpv_len_u472 = getelementptr inbounds %struct.xpv, %struct.xpv* %294, i32 0, i32 3
  %xpvlenu_len473 = bitcast %union.anon.26* %xpv_len_u472 to i64*
  %295 = load i64, i64* %xpvlenu_len473, align 8
  %296 = load %struct.sv*, %struct.sv** @PL_formtarget, align 8
  %sv_any474 = getelementptr inbounds %struct.sv, %struct.sv* %296, i32 0, i32 0
  %297 = load i8*, i8** %sv_any474, align 8
  %298 = bitcast i8* %297 to %struct.xpv*
  %xpv_cur475 = getelementptr inbounds %struct.xpv, %struct.xpv* %298, i32 0, i32 2
  %299 = load i64, i64* %xpv_cur475, align 8
  %300 = load i64, i64* %grow, align 8
  %add476 = add i64 %299, %300
  %add477 = add i64 %add476, 1
  %cmp478 = icmp ult i64 %295, %add477
  br i1 %cmp478, label %cond.true480, label %cond.false486

cond.true480:                                     ; preds = %lor.lhs.false470, %if.then466
  %301 = load %struct.sv*, %struct.sv** @PL_formtarget, align 8
  %302 = load %struct.sv*, %struct.sv** @PL_formtarget, align 8
  %sv_any481 = getelementptr inbounds %struct.sv, %struct.sv* %302, i32 0, i32 0
  %303 = load i8*, i8** %sv_any481, align 8
  %304 = bitcast i8* %303 to %struct.xpv*
  %xpv_cur482 = getelementptr inbounds %struct.xpv, %struct.xpv* %304, i32 0, i32 2
  %305 = load i64, i64* %xpv_cur482, align 8
  %306 = load i64, i64* %grow, align 8
  %add483 = add i64 %305, %306
  %add484 = add i64 %add483, 1
  %call485 = call i8* @Perl_sv_grow(%struct.sv* %301, i64 %add484)
  br label %cond.end489

cond.false486:                                    ; preds = %lor.lhs.false470
  %307 = load %struct.sv*, %struct.sv** @PL_formtarget, align 8
  %sv_u487 = getelementptr inbounds %struct.sv, %struct.sv* %307, i32 0, i32 3
  %svu_pv488 = bitcast %union.anon* %sv_u487 to i8**
  %308 = load i8*, i8** %svu_pv488, align 8
  br label %cond.end489

cond.end489:                                      ; preds = %cond.false486, %cond.true480
  %cond490 = phi i8* [ %call485, %cond.true480 ], [ %308, %cond.false486 ]
  br label %if.end491

if.end491:                                        ; preds = %cond.end489, %if.end464
  %309 = load %struct.sv*, %struct.sv** @PL_formtarget, align 8
  %sv_u492 = getelementptr inbounds %struct.sv, %struct.sv* %309, i32 0, i32 3
  %svu_pv493 = bitcast %union.anon* %sv_u492 to i8**
  %310 = load i8*, i8** %svu_pv493, align 8
  %311 = load %struct.sv*, %struct.sv** @PL_formtarget, align 8
  %sv_any494 = getelementptr inbounds %struct.sv, %struct.sv* %311, i32 0, i32 0
  %312 = load i8*, i8** %sv_any494, align 8
  %313 = bitcast i8* %312 to %struct.xpv*
  %xpv_cur495 = getelementptr inbounds %struct.xpv, %struct.xpv* %313, i32 0, i32 2
  %314 = load i64, i64* %xpv_cur495, align 8
  %add.ptr496 = getelementptr inbounds i8, i8* %310, i64 %314
  store i8* %add.ptr496, i8** %t, align 8
  %315 = load i8*, i8** %t, align 8
  %316 = load i8*, i8** %source, align 8
  %317 = load i64, i64* %to_copy, align 8
  %mul497 = mul i64 %317, 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %315, i8* align 1 %316, i64 %mul497, i1 false)
  %318 = load i8, i8* %trans, align 1
  %tobool498 = icmp ne i8 %318, 0
  br i1 %tobool498, label %if.then499, label %if.end529

if.then499:                                       ; preds = %if.end491
  %319 = load i8*, i8** %t, align 8
  store i8* %319, i8** %s500, align 8
  %320 = load i8*, i8** %s500, align 8
  %321 = load i64, i64* %to_copy, align 8
  %add.ptr502 = getelementptr inbounds i8, i8* %320, i64 %321
  store i8* %add.ptr502, i8** %send501, align 8
  br label %while.cond503

while.cond503:                                    ; preds = %if.end526, %if.then499
  %322 = load i8*, i8** %s500, align 8
  %323 = load i8*, i8** %send501, align 8
  %cmp504 = icmp ult i8* %322, %323
  br i1 %cmp504, label %while.body506, label %while.end528

while.body506:                                    ; preds = %while.cond503
  %324 = load i8*, i8** %s500, align 8
  %325 = load i8, i8* %324, align 1
  %conv507 = zext i8 %325 to i32
  store i32 %conv507, i32* %ch, align 4
  %326 = load i8, i8* %trans, align 1
  %conv508 = sext i8 %326 to i32
  %cmp509 = icmp eq i32 %conv508, 126
  br i1 %cmp509, label %cond.true511, label %cond.false514

cond.true511:                                     ; preds = %while.body506
  %327 = load i32, i32* %ch, align 4
  %cmp512 = icmp eq i32 %327, 126
  br i1 %cmp512, label %if.then525, label %if.end526

cond.false514:                                    ; preds = %while.body506
  %328 = load i32, i32* %ch, align 4
  %conv515 = sext i32 %328 to i64
  %and516 = and i64 %conv515, -256
  %tobool517 = icmp ne i64 %and516, 0
  br i1 %tobool517, label %if.end526, label %land.lhs.true518

land.lhs.true518:                                 ; preds = %cond.false514
  %329 = load i32, i32* %ch, align 4
  %conv519 = trunc i32 %329 to i8
  %idxprom520 = zext i8 %conv519 to i64
  %arrayidx521 = getelementptr inbounds [0 x i32], [0 x i32]* @PL_charclass, i64 0, i64 %idxprom520
  %330 = load i32, i32* %arrayidx521, align 4
  %and522 = and i32 %330, 24576
  %cmp523 = icmp eq i32 %and522, 24576
  br i1 %cmp523, label %if.then525, label %if.end526

if.then525:                                       ; preds = %land.lhs.true518, %cond.true511
  %331 = load i8*, i8** %s500, align 8
  store i8 32, i8* %331, align 1
  br label %if.end526

if.end526:                                        ; preds = %if.then525, %land.lhs.true518, %cond.false514, %cond.true511
  %332 = load i8*, i8** %s500, align 8
  %incdec.ptr527 = getelementptr inbounds i8, i8* %332, i32 1
  store i8* %incdec.ptr527, i8** %s500, align 8
  br label %while.cond503

while.end528:                                     ; preds = %while.cond503
  br label %if.end529

if.end529:                                        ; preds = %while.end528, %if.end491
  %333 = load i64, i64* %to_copy, align 8
  %334 = load i8*, i8** %t, align 8
  %add.ptr530 = getelementptr inbounds i8, i8* %334, i64 %333
  store i8* %add.ptr530, i8** %t, align 8
  br label %do.body531

do.body531:                                       ; preds = %if.end529
  %335 = load %struct.sv*, %struct.sv** @PL_formtarget, align 8
  %sv_any532 = getelementptr inbounds %struct.sv, %struct.sv* %335, i32 0, i32 0
  %336 = load i8*, i8** %sv_any532, align 8
  %337 = bitcast i8* %336 to %struct.xpv*
  %xpv_cur533 = getelementptr inbounds %struct.xpv, %struct.xpv* %337, i32 0, i32 2
  %338 = load i64, i64* %xpv_cur533, align 8
  %339 = load i64, i64* %to_copy, align 8
  %add534 = add i64 %338, %339
  %340 = load %struct.sv*, %struct.sv** @PL_formtarget, align 8
  %sv_any535 = getelementptr inbounds %struct.sv, %struct.sv* %340, i32 0, i32 0
  %341 = load i8*, i8** %sv_any535, align 8
  %342 = bitcast i8* %341 to %struct.xpv*
  %xpv_cur536 = getelementptr inbounds %struct.xpv, %struct.xpv* %342, i32 0, i32 2
  store i64 %add534, i64* %xpv_cur536, align 8
  br label %do.end537

do.end537:                                        ; preds = %do.body531
  %343 = load i8*, i8** %tmp, align 8
  %tobool538 = icmp ne i8* %343, null
  br i1 %tobool538, label %if.then539, label %if.end540

if.then539:                                       ; preds = %do.end537
  %344 = load i8*, i8** %tmp, align 8
  call void @Perl_safesysfree(i8* %344)
  br label %if.end540

if.end540:                                        ; preds = %if.then539, %do.end537
  br label %sw.epilog

sw.bb541:                                         ; preds = %for.cond
  %345 = load i32*, i32** %fpc, align 8
  %incdec.ptr542 = getelementptr inbounds i32, i32* %345, i32 1
  store i32* %incdec.ptr542, i32** %fpc, align 8
  %346 = load i32, i32* %345, align 4
  store i32 %346, i32* %arg, align 4
  %347 = load i32, i32* %arg, align 4
  %and543 = and i32 %347, 536870912
  %tobool544 = icmp ne i32 %and543, 0
  %348 = zext i1 %tobool544 to i64
  %cond545 = select i1 %tobool544, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.3, i64 0, i64 0)
  store i8* %cond545, i8** %fmt, align 8
  br label %ff_dec

sw.bb546:                                         ; preds = %for.cond
  %349 = load i32*, i32** %fpc, align 8
  %incdec.ptr547 = getelementptr inbounds i32, i32* %349, i32 1
  store i32* %incdec.ptr547, i32** %fpc, align 8
  %350 = load i32, i32* %349, align 4
  store i32 %350, i32* %arg, align 4
  %351 = load i32, i32* %arg, align 4
  %and548 = and i32 %351, 536870912
  %tobool549 = icmp ne i32 %and548, 0
  %352 = zext i1 %tobool549 to i64
  %cond550 = select i1 %tobool549, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5, i64 0, i64 0)
  store i8* %cond550, i8** %fmt, align 8
  br label %ff_dec

ff_dec:                                           ; preds = %sw.bb546, %sw.bb541
  %353 = load i32, i32* %arg, align 4
  %and551 = and i32 %353, 1073741824
  %tobool552 = icmp ne i32 %and551, 0
  br i1 %tobool552, label %land.lhs.true553, label %if.end574

land.lhs.true553:                                 ; preds = %ff_dec
  %354 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_flags554 = getelementptr inbounds %struct.sv, %struct.sv* %354, i32 0, i32 2
  %355 = load i32, i32* %sv_flags554, align 4
  %and555 = and i32 %355, 65280
  %tobool556 = icmp ne i32 %and555, 0
  br i1 %tobool556, label %if.end574, label %lor.lhs.false557

lor.lhs.false557:                                 ; preds = %land.lhs.true553
  %356 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_flags558 = getelementptr inbounds %struct.sv, %struct.sv* %356, i32 0, i32 2
  %357 = load i32, i32* %sv_flags558, align 4
  %and559 = and i32 %357, 255
  %cmp560 = icmp eq i32 %and559, 8
  br i1 %cmp560, label %if.end574, label %lor.lhs.false562

lor.lhs.false562:                                 ; preds = %lor.lhs.false557
  %358 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_flags563 = getelementptr inbounds %struct.sv, %struct.sv* %358, i32 0, i32 2
  %359 = load i32, i32* %sv_flags563, align 4
  %and564 = and i32 %359, 16826623
  %cmp565 = icmp eq i32 %and564, 16777226
  br i1 %cmp565, label %if.end574, label %if.then567

if.then567:                                       ; preds = %lor.lhs.false562
  %360 = load i32, i32* %fieldsize, align 4
  store i32 %360, i32* %arg, align 4
  br label %while.cond568

while.cond568:                                    ; preds = %while.body571, %if.then567
  %361 = load i32, i32* %arg, align 4
  %dec569 = add nsw i32 %361, -1
  store i32 %dec569, i32* %arg, align 4
  %tobool570 = icmp ne i32 %361, 0
  br i1 %tobool570, label %while.body571, label %while.end573

while.body571:                                    ; preds = %while.cond568
  %362 = load i8*, i8** %t, align 8
  %incdec.ptr572 = getelementptr inbounds i8, i8* %362, i32 1
  store i8* %incdec.ptr572, i8** %t, align 8
  store i8 32, i8* %362, align 1
  br label %while.cond568

while.end573:                                     ; preds = %while.cond568
  br label %sw.epilog

if.end574:                                        ; preds = %lor.lhs.false562, %lor.lhs.false557, %land.lhs.true553, %ff_dec
  store i8 1, i8* %gotsome, align 1
  %363 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_flags575 = getelementptr inbounds %struct.sv, %struct.sv* %363, i32 0, i32 2
  %364 = load i32, i32* %sv_flags575, align 4
  %and576 = and i32 %364, 2097664
  %cmp577 = icmp eq i32 %and576, 512
  br i1 %cmp577, label %cond.true579, label %cond.false581

cond.true579:                                     ; preds = %if.end574
  %365 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_any580 = getelementptr inbounds %struct.sv, %struct.sv* %365, i32 0, i32 0
  %366 = load i8*, i8** %sv_any580, align 8
  %367 = bitcast i8* %366 to %struct.xpvnv*
  %xnv_u = getelementptr inbounds %struct.xpvnv, %struct.xpvnv* %367, i32 0, i32 5
  %xnv_nv = bitcast %union._xnvu* %xnv_u to double*
  %368 = load double, double* %xnv_nv, align 8
  br label %cond.end583

cond.false581:                                    ; preds = %if.end574
  %369 = load %struct.sv*, %struct.sv** %sv, align 8
  %call582 = call double @Perl_sv_2nv_flags(%struct.sv* %369, i32 2)
  br label %cond.end583

cond.end583:                                      ; preds = %cond.false581, %cond.true579
  %cond584 = phi double [ %368, %cond.true579 ], [ %call582, %cond.false581 ]
  store double %cond584, double* %value, align 8
  %370 = load double, double* %value, align 8
  %371 = load i32, i32* %fieldsize, align 4
  %372 = load i32, i32* %arg, align 4
  %call585 = call zeroext i1 @S_num_overflow(double %370, i32 %371, i32 %372)
  br i1 %call585, label %if.then586, label %if.end593

if.then586:                                       ; preds = %cond.end583
  %373 = load i32, i32* %fieldsize, align 4
  store i32 %373, i32* %arg, align 4
  br label %while.cond587

while.cond587:                                    ; preds = %while.body590, %if.then586
  %374 = load i32, i32* %arg, align 4
  %dec588 = add nsw i32 %374, -1
  store i32 %dec588, i32* %arg, align 4
  %tobool589 = icmp ne i32 %374, 0
  br i1 %tobool589, label %while.body590, label %while.end592

while.body590:                                    ; preds = %while.cond587
  %375 = load i8*, i8** %t, align 8
  %incdec.ptr591 = getelementptr inbounds i8, i8* %375, i32 1
  store i8* %incdec.ptr591, i8** %t, align 8
  store i8 35, i8* %375, align 1
  br label %while.cond587

while.end592:                                     ; preds = %while.cond587
  br label %sw.epilog

if.end593:                                        ; preds = %cond.end583
  %376 = load %struct.sv*, %struct.sv** @PL_formtarget, align 8
  %sv_any594 = getelementptr inbounds %struct.sv, %struct.sv* %376, i32 0, i32 0
  %377 = load i8*, i8** %sv_any594, align 8
  %378 = bitcast i8* %377 to %struct.xpv*
  %xpv_len_u595 = getelementptr inbounds %struct.xpv, %struct.xpv* %378, i32 0, i32 3
  %xpvlenu_len596 = bitcast %union.anon.26* %xpv_len_u595 to i64*
  %379 = load i64, i64* %xpvlenu_len596, align 8
  %380 = load i8*, i8** %t, align 8
  %381 = load %struct.sv*, %struct.sv** @PL_formtarget, align 8
  %sv_u597 = getelementptr inbounds %struct.sv, %struct.sv* %381, i32 0, i32 3
  %svu_pv598 = bitcast %union.anon* %sv_u597 to i8**
  %382 = load i8*, i8** %svu_pv598, align 8
  %sub.ptr.lhs.cast599 = ptrtoint i8* %380 to i64
  %sub.ptr.rhs.cast600 = ptrtoint i8* %382 to i64
  %sub.ptr.sub601 = sub i64 %sub.ptr.lhs.cast599, %sub.ptr.rhs.cast600
  %sub602 = sub i64 %379, %sub.ptr.sub601
  store i64 %sub602, i64* %max, align 8
  %383 = load i32, i32* %arg, align 4
  %and604 = and i32 %383, -1610612737
  store i32 %and604, i32* %arg, align 4
  %384 = load i8*, i8** %t, align 8
  %385 = load i64, i64* %max, align 8
  %386 = load i8*, i8** %fmt, align 8
  %387 = load i32, i32* %fieldsize, align 4
  %388 = load i32, i32* %arg, align 4
  %389 = load double, double* %value, align 8
  %call605 = call i32 (i8*, i64, i8*, ...) @Perl_my_snprintf(i8* %384, i64 %385, i8* %386, i32 %387, i32 %388, double %389)
  store i32 %call605, i32* %len603, align 4
  %390 = load i32, i32* %len603, align 4
  %391 = load i32, i32* %fieldsize, align 4
  %392 = load i8*, i8** %t, align 8
  %idx.ext606 = sext i32 %391 to i64
  %add.ptr607 = getelementptr inbounds i8, i8* %392, i64 %idx.ext606
  store i8* %add.ptr607, i8** %t, align 8
  br label %sw.epilog

sw.bb608:                                         ; preds = %for.cond
  %393 = load i8*, i8** %f, align 8
  %incdec.ptr609 = getelementptr inbounds i8, i8* %393, i32 1
  store i8* %incdec.ptr609, i8** %f, align 8
  br label %while.cond610

while.cond610:                                    ; preds = %while.body622, %sw.bb608
  %394 = load i8*, i8** %t, align 8
  %incdec.ptr611 = getelementptr inbounds i8, i8* %394, i32 -1
  store i8* %incdec.ptr611, i8** %t, align 8
  %395 = load %struct.sv*, %struct.sv** @PL_formtarget, align 8
  %sv_u612 = getelementptr inbounds %struct.sv, %struct.sv* %395, i32 0, i32 3
  %svu_pv613 = bitcast %union.anon* %sv_u612 to i8**
  %396 = load i8*, i8** %svu_pv613, align 8
  %397 = load i64, i64* %linemark, align 8
  %add.ptr614 = getelementptr inbounds i8, i8* %396, i64 %397
  %cmp615 = icmp ugt i8* %394, %add.ptr614
  br i1 %cmp615, label %land.rhs617, label %land.end621

land.rhs617:                                      ; preds = %while.cond610
  %398 = load i8*, i8** %t, align 8
  %399 = load i8, i8* %398, align 1
  %conv618 = sext i8 %399 to i32
  %cmp619 = icmp eq i32 %conv618, 32
  br label %land.end621

land.end621:                                      ; preds = %land.rhs617, %while.cond610
  %400 = phi i1 [ false, %while.cond610 ], [ %cmp619, %land.rhs617 ]
  br i1 %400, label %while.body622, label %while.end623

while.body622:                                    ; preds = %land.end621
  br label %while.cond610

while.end623:                                     ; preds = %land.end621
  %401 = load i8*, i8** %t, align 8
  %incdec.ptr624 = getelementptr inbounds i8, i8* %401, i32 1
  store i8* %incdec.ptr624, i8** %t, align 8
  %402 = load i8*, i8** %t, align 8
  %incdec.ptr625 = getelementptr inbounds i8, i8* %402, i32 1
  store i8* %incdec.ptr625, i8** %t, align 8
  store i8 10, i8* %402, align 1
  br label %sw.epilog

sw.bb626:                                         ; preds = %for.cond
  %403 = load i32*, i32** %fpc, align 8
  %incdec.ptr627 = getelementptr inbounds i32, i32* %403, i32 1
  store i32* %incdec.ptr627, i32** %fpc, align 8
  %404 = load i32, i32* %403, align 4
  store i32 %404, i32* %arg, align 4
  %405 = load i8, i8* %gotsome, align 1
  %tobool628 = trunc i8 %405 to i1
  br i1 %tobool628, label %if.then629, label %if.else634

if.then629:                                       ; preds = %sw.bb626
  %406 = load i32, i32* %arg, align 4
  %tobool630 = icmp ne i32 %406, 0
  br i1 %tobool630, label %if.then631, label %if.end633

if.then631:                                       ; preds = %if.then629
  %407 = load i32*, i32** %fpc, align 8
  %incdec.ptr632 = getelementptr inbounds i32, i32* %407, i32 -1
  store i32* %incdec.ptr632, i32** %fpc, align 8
  br label %end

if.end633:                                        ; preds = %if.then629
  br label %if.end639

if.else634:                                       ; preds = %sw.bb626
  %408 = load %struct.sv*, %struct.sv** @PL_formtarget, align 8
  %sv_u635 = getelementptr inbounds %struct.sv, %struct.sv* %408, i32 0, i32 3
  %svu_pv636 = bitcast %union.anon* %sv_u635 to i8**
  %409 = load i8*, i8** %svu_pv636, align 8
  %410 = load i64, i64* %linemark, align 8
  %add.ptr637 = getelementptr inbounds i8, i8* %409, i64 %410
  store i8* %add.ptr637, i8** %t, align 8
  %411 = load i32, i32* %lines, align 4
  %dec638 = add nsw i32 %411, -1
  store i32 %dec638, i32* %lines, align 4
  br label %if.end639

if.end639:                                        ; preds = %if.else634, %if.end633
  br label %sw.epilog

sw.bb640:                                         ; preds = %for.cond
  %412 = load i8*, i8** %chophere, align 8
  store i8* %412, i8** %s641, align 8
  %413 = load i8*, i8** %item, align 8
  %414 = load i64, i64* %len, align 8
  %add.ptr643 = getelementptr inbounds i8, i8* %413, i64 %414
  store i8* %add.ptr643, i8** %send642, align 8
  %415 = load i8, i8* %chopspace, align 1
  %tobool644 = trunc i8 %415 to i1
  br i1 %tobool644, label %if.then645, label %if.end659

if.then645:                                       ; preds = %sw.bb640
  br label %while.cond646

while.cond646:                                    ; preds = %while.body656, %if.then645
  %416 = load i8*, i8** %s641, align 8
  %417 = load i8, i8* %416, align 1
  %idxprom647 = zext i8 %417 to i64
  %arrayidx648 = getelementptr inbounds [0 x i32], [0 x i32]* @PL_charclass, i64 0, i64 %idxprom647
  %418 = load i32, i32* %arrayidx648, align 4
  %and649 = and i32 %418, 17408
  %cmp650 = icmp eq i32 %and649, 17408
  br i1 %cmp650, label %land.rhs652, label %land.end655

land.rhs652:                                      ; preds = %while.cond646
  %419 = load i8*, i8** %s641, align 8
  %420 = load i8*, i8** %send642, align 8
  %cmp653 = icmp ult i8* %419, %420
  br label %land.end655

land.end655:                                      ; preds = %land.rhs652, %while.cond646
  %421 = phi i1 [ false, %while.cond646 ], [ %cmp653, %land.rhs652 ]
  br i1 %421, label %while.body656, label %while.end658

while.body656:                                    ; preds = %land.end655
  %422 = load i8*, i8** %s641, align 8
  %incdec.ptr657 = getelementptr inbounds i8, i8* %422, i32 1
  store i8* %incdec.ptr657, i8** %s641, align 8
  br label %while.cond646

while.end658:                                     ; preds = %land.end655
  br label %if.end659

if.end659:                                        ; preds = %while.end658, %sw.bb640
  %423 = load i8*, i8** %s641, align 8
  %424 = load i8*, i8** %send642, align 8
  %cmp660 = icmp ult i8* %423, %424
  br i1 %cmp660, label %if.then662, label %if.end700

if.then662:                                       ; preds = %if.end659
  %425 = load i32, i32* %fieldsize, align 4
  %426 = load i32, i32* %itemsize, align 4
  %sub663 = sub nsw i32 %425, %426
  store i32 %sub663, i32* %arg, align 4
  %427 = load i32, i32* %arg, align 4
  %tobool664 = icmp ne i32 %427, 0
  br i1 %tobool664, label %if.then665, label %if.end674

if.then665:                                       ; preds = %if.then662
  %428 = load i32, i32* %arg, align 4
  %429 = load i32, i32* %fieldsize, align 4
  %sub666 = sub nsw i32 %429, %428
  store i32 %sub666, i32* %fieldsize, align 4
  br label %while.cond667

while.cond667:                                    ; preds = %while.body671, %if.then665
  %430 = load i32, i32* %arg, align 4
  %dec668 = add nsw i32 %430, -1
  store i32 %dec668, i32* %arg, align 4
  %cmp669 = icmp sgt i32 %430, 0
  br i1 %cmp669, label %while.body671, label %while.end673

while.body671:                                    ; preds = %while.cond667
  %431 = load i8*, i8** %t, align 8
  %incdec.ptr672 = getelementptr inbounds i8, i8* %431, i32 1
  store i8* %incdec.ptr672, i8** %t, align 8
  store i8 32, i8* %431, align 1
  br label %while.cond667

while.end673:                                     ; preds = %while.cond667
  br label %if.end674

if.end674:                                        ; preds = %while.end673, %if.then662
  %432 = load i8*, i8** %t, align 8
  %add.ptr675 = getelementptr inbounds i8, i8* %432, i64 -3
  store i8* %add.ptr675, i8** %s1, align 8
  %433 = load i8*, i8** %s1, align 8
  %call676 = call i32 @strncmp(i8* %433, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.6, i64 0, i64 0), i64 3) #8
  %tobool677 = icmp ne i32 %call676, 0
  br i1 %tobool677, label %if.end696, label %if.then678

if.then678:                                       ; preds = %if.end674
  br label %while.cond679

while.cond679:                                    ; preds = %while.body693, %if.then678
  %434 = load i8*, i8** %s1, align 8
  %435 = load %struct.sv*, %struct.sv** @PL_formtarget, align 8
  %sv_u680 = getelementptr inbounds %struct.sv, %struct.sv* %435, i32 0, i32 3
  %svu_pv681 = bitcast %union.anon* %sv_u680 to i8**
  %436 = load i8*, i8** %svu_pv681, align 8
  %add.ptr682 = getelementptr inbounds i8, i8* %436, i64 0
  %cmp683 = icmp ugt i8* %434, %add.ptr682
  br i1 %cmp683, label %land.rhs685, label %land.end692

land.rhs685:                                      ; preds = %while.cond679
  %437 = load i8*, i8** %s1, align 8
  %arrayidx686 = getelementptr inbounds i8, i8* %437, i64 -1
  %438 = load i8, i8* %arrayidx686, align 1
  %idxprom687 = zext i8 %438 to i64
  %arrayidx688 = getelementptr inbounds [0 x i32], [0 x i32]* @PL_charclass, i64 0, i64 %idxprom687
  %439 = load i32, i32* %arrayidx688, align 4
  %and689 = and i32 %439, 17408
  %cmp690 = icmp eq i32 %and689, 17408
  br label %land.end692

land.end692:                                      ; preds = %land.rhs685, %while.cond679
  %440 = phi i1 [ false, %while.cond679 ], [ %cmp690, %land.rhs685 ]
  br i1 %440, label %while.body693, label %while.end695

while.body693:                                    ; preds = %land.end692
  %441 = load i8*, i8** %s1, align 8
  %incdec.ptr694 = getelementptr inbounds i8, i8* %441, i32 -1
  store i8* %incdec.ptr694, i8** %s1, align 8
  br label %while.cond679

while.end695:                                     ; preds = %land.end692
  br label %if.end696

if.end696:                                        ; preds = %while.end695, %if.end674
  %442 = load i8*, i8** %s1, align 8
  %incdec.ptr697 = getelementptr inbounds i8, i8* %442, i32 1
  store i8* %incdec.ptr697, i8** %s1, align 8
  store i8 46, i8* %442, align 1
  %443 = load i8*, i8** %s1, align 8
  %incdec.ptr698 = getelementptr inbounds i8, i8* %443, i32 1
  store i8* %incdec.ptr698, i8** %s1, align 8
  store i8 46, i8* %443, align 1
  %444 = load i8*, i8** %s1, align 8
  %incdec.ptr699 = getelementptr inbounds i8, i8* %444, i32 1
  store i8* %incdec.ptr699, i8** %s1, align 8
  store i8 46, i8* %444, align 1
  br label %if.end700

if.end700:                                        ; preds = %if.end696, %if.end659
  br label %sw.epilog

sw.bb701:                                         ; preds = %for.cond
  br label %end

end:                                              ; preds = %sw.bb701, %if.then631
  %445 = load i8*, i8** %t, align 8
  store i8 0, i8* %445, align 1
  br label %do.body702

do.body702:                                       ; preds = %end
  %446 = load i8*, i8** %t, align 8
  %447 = load %struct.sv*, %struct.sv** @PL_formtarget, align 8
  %sv_u703 = getelementptr inbounds %struct.sv, %struct.sv* %447, i32 0, i32 3
  %svu_pv704 = bitcast %union.anon* %sv_u703 to i8**
  %448 = load i8*, i8** %svu_pv704, align 8
  %add.ptr705 = getelementptr inbounds i8, i8* %448, i64 0
  %sub.ptr.lhs.cast706 = ptrtoint i8* %446 to i64
  %sub.ptr.rhs.cast707 = ptrtoint i8* %add.ptr705 to i64
  %sub.ptr.sub708 = sub i64 %sub.ptr.lhs.cast706, %sub.ptr.rhs.cast707
  %449 = load %struct.sv*, %struct.sv** @PL_formtarget, align 8
  %sv_any709 = getelementptr inbounds %struct.sv, %struct.sv* %449, i32 0, i32 0
  %450 = load i8*, i8** %sv_any709, align 8
  %451 = bitcast i8* %450 to %struct.xpv*
  %xpv_cur710 = getelementptr inbounds %struct.xpv, %struct.xpv* %451, i32 0, i32 2
  store i64 %sub.ptr.sub708, i64* %xpv_cur710, align 8
  br label %do.end711

do.end711:                                        ; preds = %do.body702
  %452 = load i8, i8* %targ_is_utf8, align 1
  %tobool712 = trunc i8 %452 to i1
  br i1 %tobool712, label %if.then713, label %if.end715

if.then713:                                       ; preds = %do.end711
  %453 = load %struct.sv*, %struct.sv** @PL_formtarget, align 8
  %sv_flags714 = getelementptr inbounds %struct.sv, %struct.sv* %453, i32 0, i32 2
  %454 = load i32, i32* %sv_flags714, align 4
  %or = or i32 %454, 536870912
  store i32 %or, i32* %sv_flags714, align 4
  br label %if.end715

if.end715:                                        ; preds = %if.then713, %do.end711
  %455 = load i32, i32* %lines, align 4
  %conv716 = sext i32 %455 to i64
  %456 = load %struct.sv*, %struct.sv** @PL_formtarget, align 8
  %sv_any717 = getelementptr inbounds %struct.sv, %struct.sv* %456, i32 0, i32 0
  %457 = load i8*, i8** %sv_any717, align 8
  %458 = bitcast i8* %457 to %struct.xpviv*
  %xiv_u = getelementptr inbounds %struct.xpviv, %struct.xpviv* %458, i32 0, i32 4
  %xivu_iv = bitcast %union._xivu* %xiv_u to i64*
  %459 = load i64, i64* %xivu_iv, align 8
  %add718 = add nsw i64 %459, %conv716
  store i64 %add718, i64* %xivu_iv, align 8
  %460 = load %struct.sv**, %struct.sv*** @PL_stack_base, align 8
  %461 = load i32, i32* %origmark, align 4
  %idx.ext719 = sext i32 %461 to i64
  %add.ptr720 = getelementptr inbounds %struct.sv*, %struct.sv** %460, i64 %idx.ext719
  store %struct.sv** %add.ptr720, %struct.sv*** %sp, align 8
  %462 = load i32*, i32** %fpc, align 8
  %arrayidx721 = getelementptr inbounds i32, i32* %462, i64 -1
  %463 = load i32, i32* %arrayidx721, align 4
  %cmp722 = icmp eq i32 %463, 14
  br i1 %cmp722, label %if.then724, label %if.else725

if.then724:                                       ; preds = %if.end715
  %464 = load %struct.sv**, %struct.sv*** %sp, align 8
  store %struct.sv** %464, %struct.sv*** @PL_stack_sp, align 8
  %465 = load %struct.op*, %struct.op** @PL_op, align 8
  %466 = bitcast %struct.op* %465 to %struct.listop*
  %op_first = getelementptr inbounds %struct.listop, %struct.listop* %466, i32 0, i32 7
  %467 = load %struct.op*, %struct.op** %op_first, align 8
  store %struct.op* %467, %struct.op** %retval, align 8
  br label %return

if.else725:                                       ; preds = %if.end715
  %468 = load %struct.sv**, %struct.sv*** %sp, align 8
  %incdec.ptr726 = getelementptr inbounds %struct.sv*, %struct.sv** %468, i32 1
  store %struct.sv** %incdec.ptr726, %struct.sv*** %sp, align 8
  store %struct.sv* @PL_sv_yes, %struct.sv** %incdec.ptr726, align 8
  %469 = load %struct.sv**, %struct.sv*** %sp, align 8
  store %struct.sv** %469, %struct.sv*** @PL_stack_sp, align 8
  %470 = load %struct.op*, %struct.op** @PL_op, align 8
  %op_next = getelementptr inbounds %struct.op, %struct.op* %470, i32 0, i32 0
  %471 = load %struct.op*, %struct.op** %op_next, align 8
  store %struct.op* %471, %struct.op** %retval, align 8
  br label %return

sw.epilog:                                        ; preds = %for.cond, %if.end700, %if.end639, %while.end623, %if.end593, %while.end592, %while.end573, %if.end540, %if.then390, %do.end351, %if.end312, %if.end299, %if.end284, %while.end, %if.end135, %sw.bb107, %sw.bb
  br label %for.cond

return:                                           ; preds = %if.else725, %if.then724
  %472 = load %struct.op*, %struct.op** %retval, align 8
  ret %struct.op* %472
}

; Function Attrs: nounwind readonly
declare dso_local i8* @strchr(i8*, i32) #3

; Function Attrs: noinline nounwind uwtable
define internal %struct.magic* @S_doparseform(%struct.sv* %sv) #0 {
entry:
  %retval = alloca %struct.magic*, align 8
  %sv.addr = alloca %struct.sv*, align 8
  %len = alloca i64, align 8
  %s = alloca i8*, align 8
  %send = alloca i8*, align 8
  %base = alloca i8*, align 8
  %skipspaces = alloca i32, align 4
  %noblank = alloca i8, align 1
  %repeat = alloca i8, align 1
  %postspace = alloca i8, align 1
  %fops = alloca i32*, align 8
  %fpc = alloca i32*, align 8
  %linepc = alloca i32*, align 8
  %arg = alloca i32, align 4
  %ischop = alloca i8, align 1
  %unchopnum = alloca i8, align 1
  %maxops = alloca i32, align 4
  %mg = alloca %struct.magic*, align 8
  %sv_copy = alloca %struct.sv*, align 8
  %old = alloca %struct.sv*, align 8
  %f = alloca i8*, align 8
  %f255 = alloca i8*, align 8
  %prespace = alloca i32, align 4
  %ismore = alloca i8, align 1
  store %struct.sv* %sv, %struct.sv** %sv.addr, align 8
  %0 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %sv_flags = getelementptr inbounds %struct.sv, %struct.sv* %0, i32 0, i32 2
  %1 = load i32, i32* %sv_flags, align 4
  %and = and i32 %1, 2098176
  %cmp = icmp eq i32 %and, 1024
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %2 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %sv_any = getelementptr inbounds %struct.sv, %struct.sv* %2, i32 0, i32 0
  %3 = load i8*, i8** %sv_any, align 8
  %4 = bitcast i8* %3 to %struct.xpv*
  %xpv_cur = getelementptr inbounds %struct.xpv, %struct.xpv* %4, i32 0, i32 2
  %5 = load i64, i64* %xpv_cur, align 8
  store i64 %5, i64* %len, align 8
  %6 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %sv_u = getelementptr inbounds %struct.sv, %struct.sv* %6, i32 0, i32 3
  %svu_pv = bitcast %union.anon* %sv_u to i8**
  %7 = load i8*, i8** %svu_pv, align 8
  br label %cond.end

cond.false:                                       ; preds = %entry
  %8 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %call = call i8* @Perl_sv_2pv_flags(%struct.sv* %8, i64* %len, i32 2)
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %7, %cond.true ], [ %call, %cond.false ]
  store i8* %cond, i8** %s, align 8
  store i8* null, i8** %base, align 8
  store i32 0, i32* %skipspaces, align 4
  store i8 0, i8* %noblank, align 1
  store i8 0, i8* %repeat, align 1
  store i8 0, i8* %postspace, align 1
  store i32* null, i32** %linepc, align 8
  store i8 0, i8* %unchopnum, align 1
  store i32 12, i32* %maxops, align 4
  store %struct.magic* null, %struct.magic** %mg, align 8
  %9 = load i64, i64* %len, align 8
  %cmp1 = icmp eq i64 %9, 0
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; preds = %cond.end
  call void (i8*, ...) @Perl_croak(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.109, i64 0, i64 0))
  br label %if.end

if.end:                                           ; preds = %if.then, %cond.end
  %10 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %sv_flags2 = getelementptr inbounds %struct.sv, %struct.sv* %10, i32 0, i32 2
  %11 = load i32, i32* %sv_flags2, align 4
  %and3 = and i32 %11, 255
  %cmp4 = icmp uge i32 %and3, 7
  br i1 %cmp4, label %if.then5, label %if.else

if.then5:                                         ; preds = %if.end
  %12 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %call6 = call %struct.magic* @Perl_mg_find(%struct.sv* %12, i32 102)
  store %struct.magic* %call6, %struct.magic** %mg, align 8
  br label %if.end7

if.else:                                          ; preds = %if.end
  %13 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  call void @Perl_sv_upgrade(%struct.sv* %13, i32 7)
  br label %if.end7

if.end7:                                          ; preds = %if.else, %if.then5
  %14 = load %struct.magic*, %struct.magic** %mg, align 8
  %tobool = icmp ne %struct.magic* %14, null
  br i1 %tobool, label %if.then8, label %if.else35

if.then8:                                         ; preds = %if.end7
  %15 = load %struct.magic*, %struct.magic** %mg, align 8
  %mg_obj = getelementptr inbounds %struct.magic, %struct.magic* %15, i32 0, i32 6
  %16 = load %struct.sv*, %struct.sv** %mg_obj, align 8
  store %struct.sv* %16, %struct.sv** %old, align 8
  %17 = load %struct.sv*, %struct.sv** %old, align 8
  %sv_flags9 = getelementptr inbounds %struct.sv, %struct.sv* %17, i32 0, i32 2
  %18 = load i32, i32* %sv_flags9, align 4
  %and10 = and i32 %18, 536870912
  %tobool11 = icmp ne i32 %and10, 0
  %lnot = xor i1 %tobool11, true
  %lnot12 = xor i1 %lnot, true
  %lnot.ext = zext i1 %lnot12 to i32
  %19 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %sv_flags13 = getelementptr inbounds %struct.sv, %struct.sv* %19, i32 0, i32 2
  %20 = load i32, i32* %sv_flags13, align 4
  %and14 = and i32 %20, 536870912
  %tobool15 = icmp ne i32 %and14, 0
  %lnot16 = xor i1 %tobool15, true
  %lnot18 = xor i1 %lnot16, true
  %lnot.ext19 = zext i1 %lnot18 to i32
  %xor = xor i32 %lnot.ext, %lnot.ext19
  %tobool20 = icmp ne i32 %xor, 0
  br i1 %tobool20, label %if.end32, label %land.lhs.true

land.lhs.true:                                    ; preds = %if.then8
  %21 = load i64, i64* %len, align 8
  %22 = load %struct.sv*, %struct.sv** %old, align 8
  %sv_any21 = getelementptr inbounds %struct.sv, %struct.sv* %22, i32 0, i32 0
  %23 = load i8*, i8** %sv_any21, align 8
  %24 = bitcast i8* %23 to %struct.xpv*
  %xpv_cur22 = getelementptr inbounds %struct.xpv, %struct.xpv* %24, i32 0, i32 2
  %25 = load i64, i64* %xpv_cur22, align 8
  %cmp23 = icmp eq i64 %21, %25
  br i1 %cmp23, label %land.lhs.true24, label %if.end32

land.lhs.true24:                                  ; preds = %land.lhs.true
  %26 = load %struct.sv*, %struct.sv** %old, align 8
  %sv_u25 = getelementptr inbounds %struct.sv, %struct.sv* %26, i32 0, i32 3
  %svu_pv26 = bitcast %union.anon* %sv_u25 to i8**
  %27 = load i8*, i8** %svu_pv26, align 8
  %28 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %sv_u27 = getelementptr inbounds %struct.sv, %struct.sv* %28, i32 0, i32 3
  %svu_pv28 = bitcast %union.anon* %sv_u27 to i8**
  %29 = load i8*, i8** %svu_pv28, align 8
  %30 = load i64, i64* %len, align 8
  %call29 = call i32 @strncmp(i8* %27, i8* %29, i64 %30) #8
  %tobool30 = icmp ne i32 %call29, 0
  br i1 %tobool30, label %if.end32, label %if.then31

if.then31:                                        ; preds = %land.lhs.true24
  %31 = load %struct.magic*, %struct.magic** %mg, align 8
  store %struct.magic* %31, %struct.magic** %retval, align 8
  br label %return

if.end32:                                         ; preds = %land.lhs.true24, %land.lhs.true, %if.then8
  %32 = load %struct.magic*, %struct.magic** %mg, align 8
  %mg_ptr = getelementptr inbounds %struct.magic, %struct.magic* %32, i32 0, i32 7
  %33 = load i8*, i8** %mg_ptr, align 8
  call void @Perl_safesysfree(i8* %33)
  %34 = load %struct.magic*, %struct.magic** %mg, align 8
  %mg_ptr33 = getelementptr inbounds %struct.magic, %struct.magic* %34, i32 0, i32 7
  store i8* null, i8** %mg_ptr33, align 8
  %35 = load %struct.sv*, %struct.sv** %old, align 8
  %36 = bitcast %struct.sv* %35 to i8*
  %37 = bitcast i8* %36 to %struct.sv*
  call void @S_SvREFCNT_dec(%struct.sv* %37)
  %38 = load %struct.magic*, %struct.magic** %mg, align 8
  %mg_obj34 = getelementptr inbounds %struct.magic, %struct.magic* %38, i32 0, i32 6
  store %struct.sv* null, %struct.sv** %mg_obj34, align 8
  br label %if.end37

if.else35:                                        ; preds = %if.end7
  %39 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %call36 = call %struct.magic* @Perl_sv_magicext(%struct.sv* %39, %struct.sv* null, i32 102, %struct.mgvtbl* getelementptr inbounds ([31 x %struct.mgvtbl], [31 x %struct.mgvtbl]* @PL_magic_vtables, i64 0, i64 23), i8* null, i32 0)
  store %struct.magic* %call36, %struct.magic** %mg, align 8
  br label %if.end37

if.end37:                                         ; preds = %if.else35, %if.end32
  %40 = load i8*, i8** %s, align 8
  %41 = load i64, i64* %len, align 8
  %42 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %sv_flags38 = getelementptr inbounds %struct.sv, %struct.sv* %42, i32 0, i32 2
  %43 = load i32, i32* %sv_flags38, align 4
  %and39 = and i32 %43, 536870912
  %tobool40 = icmp ne i32 %and39, 0
  %44 = zext i1 %tobool40 to i64
  %cond41 = select i1 %tobool40, i32 536870912, i32 0
  %call42 = call %struct.sv* @Perl_newSVpvn_flags(i8* %40, i64 %41, i32 %cond41)
  store %struct.sv* %call42, %struct.sv** %sv_copy, align 8
  %45 = load %struct.sv*, %struct.sv** %sv_copy, align 8
  %sv_flags43 = getelementptr inbounds %struct.sv, %struct.sv* %45, i32 0, i32 2
  %46 = load i32, i32* %sv_flags43, align 4
  %and44 = and i32 %46, 2098176
  %cmp45 = icmp eq i32 %and44, 1024
  br i1 %cmp45, label %cond.true46, label %cond.false51

cond.true46:                                      ; preds = %if.end37
  %47 = load %struct.sv*, %struct.sv** %sv_copy, align 8
  %sv_any47 = getelementptr inbounds %struct.sv, %struct.sv* %47, i32 0, i32 0
  %48 = load i8*, i8** %sv_any47, align 8
  %49 = bitcast i8* %48 to %struct.xpv*
  %xpv_cur48 = getelementptr inbounds %struct.xpv, %struct.xpv* %49, i32 0, i32 2
  %50 = load i64, i64* %xpv_cur48, align 8
  store i64 %50, i64* %len, align 8
  %51 = load %struct.sv*, %struct.sv** %sv_copy, align 8
  %sv_u49 = getelementptr inbounds %struct.sv, %struct.sv* %51, i32 0, i32 3
  %svu_pv50 = bitcast %union.anon* %sv_u49 to i8**
  %52 = load i8*, i8** %svu_pv50, align 8
  br label %cond.end53

cond.false51:                                     ; preds = %if.end37
  %53 = load %struct.sv*, %struct.sv** %sv_copy, align 8
  %call52 = call i8* @Perl_sv_2pv_flags(%struct.sv* %53, i64* %len, i32 2)
  br label %cond.end53

cond.end53:                                       ; preds = %cond.false51, %cond.true46
  %cond54 = phi i8* [ %52, %cond.true46 ], [ %call52, %cond.false51 ]
  store i8* %cond54, i8** %s, align 8
  %54 = load i8*, i8** %s, align 8
  %55 = load i64, i64* %len, align 8
  %add.ptr = getelementptr inbounds i8, i8* %54, i64 %55
  store i8* %add.ptr, i8** %send, align 8
  %56 = load i8*, i8** %s, align 8
  store i8* %56, i8** %base, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %cond.end53
  %57 = load i8*, i8** %s, align 8
  %58 = load i8*, i8** %send, align 8
  %cmp55 = icmp ule i8* %57, %58
  br i1 %cmp55, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %59 = load i8*, i8** %s, align 8
  %60 = load i8, i8* %59, align 1
  %conv = sext i8 %60 to i32
  %cmp56 = icmp eq i32 %conv, 10
  br i1 %cmp56, label %if.then65, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %for.body
  %61 = load i8*, i8** %s, align 8
  %62 = load i8, i8* %61, align 1
  %conv58 = sext i8 %62 to i32
  %cmp59 = icmp eq i32 %conv58, 64
  br i1 %cmp59, label %if.then65, label %lor.lhs.false61

lor.lhs.false61:                                  ; preds = %lor.lhs.false
  %63 = load i8*, i8** %s, align 8
  %64 = load i8, i8* %63, align 1
  %conv62 = sext i8 %64 to i32
  %cmp63 = icmp eq i32 %conv62, 94
  br i1 %cmp63, label %if.then65, label %if.end66

if.then65:                                        ; preds = %lor.lhs.false61, %lor.lhs.false, %for.body
  %65 = load i32, i32* %maxops, align 4
  %add = add nsw i32 %65, 10
  store i32 %add, i32* %maxops, align 4
  br label %if.end66

if.end66:                                         ; preds = %if.then65, %lor.lhs.false61
  br label %for.inc

for.inc:                                          ; preds = %if.end66
  %66 = load i8*, i8** %s, align 8
  %incdec.ptr = getelementptr inbounds i8, i8* %66, i32 1
  store i8* %incdec.ptr, i8** %s, align 8
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %67 = load i8*, i8** %base, align 8
  store i8* %67, i8** %s, align 8
  store i8* null, i8** %base, align 8
  %68 = load i32, i32* %maxops, align 4
  %conv67 = sext i32 %68 to i64
  %mul = mul i64 %conv67, 4
  %call68 = call i8* @Perl_safesysmalloc(i64 %mul)
  %69 = bitcast i8* %call68 to i32*
  store i32* %69, i32** %fops, align 8
  %70 = load i32*, i32** %fops, align 8
  store i32* %70, i32** %fpc, align 8
  %71 = load i8*, i8** %s, align 8
  %72 = load i8*, i8** %send, align 8
  %cmp69 = icmp ult i8* %71, %72
  br i1 %cmp69, label %if.then71, label %if.end73

if.then71:                                        ; preds = %for.end
  %73 = load i32*, i32** %fpc, align 8
  store i32* %73, i32** %linepc, align 8
  %74 = load i32*, i32** %fpc, align 8
  %incdec.ptr72 = getelementptr inbounds i32, i32* %74, i32 1
  store i32* %incdec.ptr72, i32** %fpc, align 8
  store i32 1, i32* %74, align 4
  store i8 0, i8* %repeat, align 1
  store i8 0, i8* %noblank, align 1
  %75 = load i8*, i8** %s, align 8
  store i8* %75, i8** %base, align 8
  br label %if.end73

if.end73:                                         ; preds = %if.then71, %for.end
  br label %while.cond

while.cond:                                       ; preds = %if.end366, %if.end137, %if.then89, %sw.bb84, %sw.default, %if.end73
  %76 = load i8*, i8** %s, align 8
  %77 = load i8*, i8** %send, align 8
  %cmp74 = icmp ule i8* %76, %77
  br i1 %cmp74, label %while.body, label %while.end367

while.body:                                       ; preds = %while.cond
  %78 = load i8*, i8** %s, align 8
  %incdec.ptr76 = getelementptr inbounds i8, i8* %78, i32 1
  store i8* %incdec.ptr76, i8** %s, align 8
  %79 = load i8, i8* %78, align 1
  %conv77 = sext i8 %79 to i32
  switch i32 %conv77, label %sw.default [
    i32 126, label %sw.bb
    i32 32, label %sw.bb84
    i32 9, label %sw.bb84
    i32 0, label %sw.bb86
    i32 10, label %sw.bb91
    i32 64, label %sw.bb138
    i32 94, label %sw.bb138
  ]

sw.default:                                       ; preds = %while.body
  store i32 0, i32* %skipspaces, align 4
  br label %while.cond

sw.bb:                                            ; preds = %while.body
  %80 = load i8*, i8** %s, align 8
  %81 = load i8, i8* %80, align 1
  %conv78 = sext i8 %81 to i32
  %cmp79 = icmp eq i32 %conv78, 126
  br i1 %cmp79, label %if.then81, label %if.end83

if.then81:                                        ; preds = %sw.bb
  store i8 1, i8* %repeat, align 1
  %82 = load i32, i32* %skipspaces, align 4
  %inc = add nsw i32 %82, 1
  store i32 %inc, i32* %skipspaces, align 4
  %83 = load i8*, i8** %s, align 8
  %incdec.ptr82 = getelementptr inbounds i8, i8* %83, i32 1
  store i8* %incdec.ptr82, i8** %s, align 8
  br label %if.end83

if.end83:                                         ; preds = %if.then81, %sw.bb
  store i8 1, i8* %noblank, align 1
  br label %sw.bb84

sw.bb84:                                          ; preds = %while.body, %while.body, %if.end83
  %84 = load i32, i32* %skipspaces, align 4
  %inc85 = add nsw i32 %84, 1
  store i32 %inc85, i32* %skipspaces, align 4
  br label %while.cond

sw.bb86:                                          ; preds = %while.body
  %85 = load i8*, i8** %s, align 8
  %86 = load i8*, i8** %send, align 8
  %cmp87 = icmp ult i8* %85, %86
  br i1 %cmp87, label %if.then89, label %if.end90

if.then89:                                        ; preds = %sw.bb86
  store i32 0, i32* %skipspaces, align 4
  br label %while.cond

if.end90:                                         ; preds = %sw.bb86
  br label %sw.bb91

sw.bb91:                                          ; preds = %while.body, %if.end90
  %87 = load i8*, i8** %s, align 8
  %88 = load i8*, i8** %base, align 8
  %sub.ptr.lhs.cast = ptrtoint i8* %87 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %88 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %conv92 = trunc i64 %sub.ptr.sub to i32
  store i32 %conv92, i32* %arg, align 4
  %89 = load i32, i32* %skipspaces, align 4
  %inc93 = add nsw i32 %89, 1
  store i32 %inc93, i32* %skipspaces, align 4
  %90 = load i32, i32* %skipspaces, align 4
  %91 = load i32, i32* %arg, align 4
  %sub = sub nsw i32 %91, %90
  store i32 %sub, i32* %arg, align 4
  %92 = load i32, i32* %arg, align 4
  %tobool94 = icmp ne i32 %92, 0
  br i1 %tobool94, label %if.then95, label %if.end102

if.then95:                                        ; preds = %sw.bb91
  %93 = load i8, i8* %postspace, align 1
  %tobool96 = trunc i8 %93 to i1
  br i1 %tobool96, label %if.then97, label %if.end99

if.then97:                                        ; preds = %if.then95
  %94 = load i32*, i32** %fpc, align 8
  %incdec.ptr98 = getelementptr inbounds i32, i32* %94, i32 1
  store i32* %incdec.ptr98, i32** %fpc, align 8
  store i32 7, i32* %94, align 4
  br label %if.end99

if.end99:                                         ; preds = %if.then97, %if.then95
  %95 = load i32*, i32** %fpc, align 8
  %incdec.ptr100 = getelementptr inbounds i32, i32* %95, i32 1
  store i32* %incdec.ptr100, i32** %fpc, align 8
  store i32 2, i32* %95, align 4
  %96 = load i32, i32* %arg, align 4
  %97 = load i32*, i32** %fpc, align 8
  %incdec.ptr101 = getelementptr inbounds i32, i32* %97, i32 1
  store i32* %incdec.ptr101, i32** %fpc, align 8
  store i32 %96, i32* %97, align 4
  br label %if.end102

if.end102:                                        ; preds = %if.end99, %sw.bb91
  store i8 0, i8* %postspace, align 1
  %98 = load i8*, i8** %s, align 8
  %99 = load i8*, i8** %send, align 8
  %cmp103 = icmp ule i8* %98, %99
  br i1 %cmp103, label %if.then105, label %if.end106

if.then105:                                       ; preds = %if.end102
  %100 = load i32, i32* %skipspaces, align 4
  %dec = add nsw i32 %100, -1
  store i32 %dec, i32* %skipspaces, align 4
  br label %if.end106

if.end106:                                        ; preds = %if.then105, %if.end102
  %101 = load i32, i32* %skipspaces, align 4
  %tobool107 = icmp ne i32 %101, 0
  br i1 %tobool107, label %if.then108, label %if.end111

if.then108:                                       ; preds = %if.end106
  %102 = load i32*, i32** %fpc, align 8
  %incdec.ptr109 = getelementptr inbounds i32, i32* %102, i32 1
  store i32* %incdec.ptr109, i32** %fpc, align 8
  store i32 3, i32* %102, align 4
  %103 = load i32, i32* %skipspaces, align 4
  %104 = load i32*, i32** %fpc, align 8
  %incdec.ptr110 = getelementptr inbounds i32, i32* %104, i32 1
  store i32* %incdec.ptr110, i32** %fpc, align 8
  store i32 %103, i32* %104, align 4
  br label %if.end111

if.end111:                                        ; preds = %if.then108, %if.end106
  store i32 0, i32* %skipspaces, align 4
  %105 = load i8*, i8** %s, align 8
  %106 = load i8*, i8** %send, align 8
  %cmp112 = icmp ule i8* %105, %106
  br i1 %cmp112, label %if.then114, label %if.end116

if.then114:                                       ; preds = %if.end111
  %107 = load i32*, i32** %fpc, align 8
  %incdec.ptr115 = getelementptr inbounds i32, i32* %107, i32 1
  store i32* %incdec.ptr115, i32** %fpc, align 8
  store i32 13, i32* %107, align 4
  br label %if.end116

if.end116:                                        ; preds = %if.then114, %if.end111
  %108 = load i8, i8* %noblank, align 1
  %tobool117 = trunc i8 %108 to i1
  br i1 %tobool117, label %if.then118, label %if.end130

if.then118:                                       ; preds = %if.end116
  %109 = load i32*, i32** %fpc, align 8
  %incdec.ptr119 = getelementptr inbounds i32, i32* %109, i32 1
  store i32* %incdec.ptr119, i32** %fpc, align 8
  store i32 14, i32* %109, align 4
  %110 = load i8, i8* %repeat, align 1
  %tobool120 = trunc i8 %110 to i1
  br i1 %tobool120, label %if.then121, label %if.else127

if.then121:                                       ; preds = %if.then118
  %111 = load i32*, i32** %fpc, align 8
  %112 = load i32*, i32** %linepc, align 8
  %sub.ptr.lhs.cast122 = ptrtoint i32* %111 to i64
  %sub.ptr.rhs.cast123 = ptrtoint i32* %112 to i64
  %sub.ptr.sub124 = sub i64 %sub.ptr.lhs.cast122, %sub.ptr.rhs.cast123
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub124, 4
  %add125 = add nsw i64 %sub.ptr.div, 1
  %conv126 = trunc i64 %add125 to i32
  store i32 %conv126, i32* %arg, align 4
  br label %if.end128

if.else127:                                       ; preds = %if.then118
  store i32 0, i32* %arg, align 4
  br label %if.end128

if.end128:                                        ; preds = %if.else127, %if.then121
  %113 = load i32, i32* %arg, align 4
  %114 = load i32*, i32** %fpc, align 8
  %incdec.ptr129 = getelementptr inbounds i32, i32* %114, i32 1
  store i32* %incdec.ptr129, i32** %fpc, align 8
  store i32 %113, i32* %114, align 4
  br label %if.end130

if.end130:                                        ; preds = %if.end128, %if.end116
  %115 = load i8*, i8** %s, align 8
  %116 = load i8*, i8** %send, align 8
  %cmp131 = icmp ult i8* %115, %116
  br i1 %cmp131, label %if.then133, label %if.else135

if.then133:                                       ; preds = %if.end130
  %117 = load i32*, i32** %fpc, align 8
  store i32* %117, i32** %linepc, align 8
  %118 = load i32*, i32** %fpc, align 8
  %incdec.ptr134 = getelementptr inbounds i32, i32* %118, i32 1
  store i32* %incdec.ptr134, i32** %fpc, align 8
  store i32 1, i32* %118, align 4
  store i8 0, i8* %repeat, align 1
  store i8 0, i8* %noblank, align 1
  %119 = load i8*, i8** %s, align 8
  store i8* %119, i8** %base, align 8
  br label %if.end137

if.else135:                                       ; preds = %if.end130
  %120 = load i8*, i8** %s, align 8
  %incdec.ptr136 = getelementptr inbounds i8, i8* %120, i32 1
  store i8* %incdec.ptr136, i8** %s, align 8
  br label %if.end137

if.end137:                                        ; preds = %if.else135, %if.then133
  br label %while.cond

sw.bb138:                                         ; preds = %while.body, %while.body
  %121 = load i8*, i8** %s, align 8
  %arrayidx = getelementptr inbounds i8, i8* %121, i64 -1
  %122 = load i8, i8* %arrayidx, align 1
  %conv139 = sext i8 %122 to i32
  %cmp140 = icmp eq i32 %conv139, 94
  %frombool = zext i1 %cmp140 to i8
  store i8 %frombool, i8* %ischop, align 1
  %123 = load i8, i8* %postspace, align 1
  %tobool142 = trunc i8 %123 to i1
  br i1 %tobool142, label %if.then143, label %if.end145

if.then143:                                       ; preds = %sw.bb138
  %124 = load i32*, i32** %fpc, align 8
  %incdec.ptr144 = getelementptr inbounds i32, i32* %124, i32 1
  store i32* %incdec.ptr144, i32** %fpc, align 8
  store i32 7, i32* %124, align 4
  store i8 0, i8* %postspace, align 1
  br label %if.end145

if.end145:                                        ; preds = %if.then143, %sw.bb138
  %125 = load i8*, i8** %s, align 8
  %126 = load i8*, i8** %base, align 8
  %sub.ptr.lhs.cast146 = ptrtoint i8* %125 to i64
  %sub.ptr.rhs.cast147 = ptrtoint i8* %126 to i64
  %sub.ptr.sub148 = sub i64 %sub.ptr.lhs.cast146, %sub.ptr.rhs.cast147
  %sub149 = sub nsw i64 %sub.ptr.sub148, 1
  %conv150 = trunc i64 %sub149 to i32
  store i32 %conv150, i32* %arg, align 4
  %127 = load i32, i32* %arg, align 4
  %tobool151 = icmp ne i32 %127, 0
  br i1 %tobool151, label %if.then152, label %if.end155

if.then152:                                       ; preds = %if.end145
  %128 = load i32*, i32** %fpc, align 8
  %incdec.ptr153 = getelementptr inbounds i32, i32* %128, i32 1
  store i32* %incdec.ptr153, i32** %fpc, align 8
  store i32 2, i32* %128, align 4
  %129 = load i32, i32* %arg, align 4
  %130 = load i32*, i32** %fpc, align 8
  %incdec.ptr154 = getelementptr inbounds i32, i32* %130, i32 1
  store i32* %incdec.ptr154, i32** %fpc, align 8
  store i32 %129, i32* %130, align 4
  br label %if.end155

if.end155:                                        ; preds = %if.then152, %if.end145
  %131 = load i8*, i8** %s, align 8
  %add.ptr156 = getelementptr inbounds i8, i8* %131, i64 -1
  store i8* %add.ptr156, i8** %base, align 8
  %132 = load i32*, i32** %fpc, align 8
  %incdec.ptr157 = getelementptr inbounds i32, i32* %132, i32 1
  store i32* %incdec.ptr157, i32** %fpc, align 8
  store i32 4, i32* %132, align 4
  %133 = load i8*, i8** %s, align 8
  %134 = load i8, i8* %133, align 1
  %conv158 = sext i8 %134 to i32
  %cmp159 = icmp eq i32 %conv158, 42
  br i1 %cmp159, label %if.then161, label %if.else171

if.then161:                                       ; preds = %if.end155
  %135 = load i8*, i8** %s, align 8
  %incdec.ptr162 = getelementptr inbounds i8, i8* %135, i32 1
  store i8* %incdec.ptr162, i8** %s, align 8
  %136 = load i32*, i32** %fpc, align 8
  %incdec.ptr163 = getelementptr inbounds i32, i32* %136, i32 1
  store i32* %incdec.ptr163, i32** %fpc, align 8
  store i32 2, i32* %136, align 4
  %137 = load i8, i8* %ischop, align 1
  %tobool164 = trunc i8 %137 to i1
  br i1 %tobool164, label %if.then165, label %if.else168

if.then165:                                       ; preds = %if.then161
  %138 = load i32*, i32** %fpc, align 8
  %incdec.ptr166 = getelementptr inbounds i32, i32* %138, i32 1
  store i32* %incdec.ptr166, i32** %fpc, align 8
  store i32 17, i32* %138, align 4
  %139 = load i32*, i32** %fpc, align 8
  %incdec.ptr167 = getelementptr inbounds i32, i32* %139, i32 1
  store i32* %incdec.ptr167, i32** %fpc, align 8
  store i32 10, i32* %139, align 4
  br label %if.end170

if.else168:                                       ; preds = %if.then161
  %140 = load i32*, i32** %fpc, align 8
  %incdec.ptr169 = getelementptr inbounds i32, i32* %140, i32 1
  store i32* %incdec.ptr169, i32** %fpc, align 8
  store i32 11, i32* %140, align 4
  br label %if.end170

if.end170:                                        ; preds = %if.else168, %if.then165
  br label %if.end366

if.else171:                                       ; preds = %if.end155
  %141 = load i8*, i8** %s, align 8
  %142 = load i8, i8* %141, align 1
  %conv172 = sext i8 %142 to i32
  %cmp173 = icmp eq i32 %conv172, 35
  br i1 %cmp173, label %if.then184, label %lor.lhs.false175

lor.lhs.false175:                                 ; preds = %if.else171
  %143 = load i8*, i8** %s, align 8
  %144 = load i8, i8* %143, align 1
  %conv176 = sext i8 %144 to i32
  %cmp177 = icmp eq i32 %conv176, 46
  br i1 %cmp177, label %land.lhs.true179, label %if.else229

land.lhs.true179:                                 ; preds = %lor.lhs.false175
  %145 = load i8*, i8** %s, align 8
  %arrayidx180 = getelementptr inbounds i8, i8* %145, i64 1
  %146 = load i8, i8* %arrayidx180, align 1
  %conv181 = sext i8 %146 to i32
  %cmp182 = icmp eq i32 %conv181, 35
  br i1 %cmp182, label %if.then184, label %if.else229

if.then184:                                       ; preds = %land.lhs.true179, %if.else171
  %147 = load i8, i8* %ischop, align 1
  %tobool185 = trunc i8 %147 to i1
  %148 = zext i1 %tobool185 to i64
  %cond187 = select i1 %tobool185, i32 1073741824, i32 0
  store i32 %cond187, i32* %arg, align 4
  %149 = load i8*, i8** %s, align 8
  %add.ptr188 = getelementptr inbounds i8, i8* %149, i64 -1
  store i8* %add.ptr188, i8** %base, align 8
  br label %while.cond189

while.cond189:                                    ; preds = %while.body193, %if.then184
  %150 = load i8*, i8** %s, align 8
  %151 = load i8, i8* %150, align 1
  %conv190 = sext i8 %151 to i32
  %cmp191 = icmp eq i32 %conv190, 35
  br i1 %cmp191, label %while.body193, label %while.end

while.body193:                                    ; preds = %while.cond189
  %152 = load i8*, i8** %s, align 8
  %incdec.ptr194 = getelementptr inbounds i8, i8* %152, i32 1
  store i8* %incdec.ptr194, i8** %s, align 8
  br label %while.cond189

while.end:                                        ; preds = %while.cond189
  %153 = load i8*, i8** %s, align 8
  %154 = load i8, i8* %153, align 1
  %conv195 = sext i8 %154 to i32
  %cmp196 = icmp eq i32 %conv195, 46
  br i1 %cmp196, label %if.then198, label %if.end213

if.then198:                                       ; preds = %while.end
  %155 = load i8*, i8** %s, align 8
  %incdec.ptr199 = getelementptr inbounds i8, i8* %155, i32 1
  store i8* %incdec.ptr199, i8** %s, align 8
  store i8* %incdec.ptr199, i8** %f, align 8
  br label %while.cond200

while.cond200:                                    ; preds = %while.body204, %if.then198
  %156 = load i8*, i8** %s, align 8
  %157 = load i8, i8* %156, align 1
  %conv201 = sext i8 %157 to i32
  %cmp202 = icmp eq i32 %conv201, 35
  br i1 %cmp202, label %while.body204, label %while.end206

while.body204:                                    ; preds = %while.cond200
  %158 = load i8*, i8** %s, align 8
  %incdec.ptr205 = getelementptr inbounds i8, i8* %158, i32 1
  store i8* %incdec.ptr205, i8** %s, align 8
  br label %while.cond200

while.end206:                                     ; preds = %while.cond200
  %159 = load i8*, i8** %s, align 8
  %160 = load i8*, i8** %f, align 8
  %sub.ptr.lhs.cast207 = ptrtoint i8* %159 to i64
  %sub.ptr.rhs.cast208 = ptrtoint i8* %160 to i64
  %sub.ptr.sub209 = sub i64 %sub.ptr.lhs.cast207, %sub.ptr.rhs.cast208
  %add210 = add nsw i64 536870912, %sub.ptr.sub209
  %161 = load i32, i32* %arg, align 4
  %conv211 = sext i32 %161 to i64
  %or = or i64 %conv211, %add210
  %conv212 = trunc i64 %or to i32
  store i32 %conv212, i32* %arg, align 4
  br label %if.end213

if.end213:                                        ; preds = %while.end206, %while.end
  %162 = load i8*, i8** %s, align 8
  %163 = load i8*, i8** %base, align 8
  %sub.ptr.lhs.cast214 = ptrtoint i8* %162 to i64
  %sub.ptr.rhs.cast215 = ptrtoint i8* %163 to i64
  %sub.ptr.sub216 = sub i64 %sub.ptr.lhs.cast214, %sub.ptr.rhs.cast215
  %conv217 = trunc i64 %sub.ptr.sub216 to i32
  %164 = load i32*, i32** %fpc, align 8
  %incdec.ptr218 = getelementptr inbounds i32, i32* %164, i32 1
  store i32* %incdec.ptr218, i32** %fpc, align 8
  store i32 %conv217, i32* %164, align 4
  %165 = load i32*, i32** %fpc, align 8
  %incdec.ptr219 = getelementptr inbounds i32, i32* %165, i32 1
  store i32* %incdec.ptr219, i32** %fpc, align 8
  store i32 12, i32* %165, align 4
  %166 = load i32, i32* %arg, align 4
  %167 = load i32*, i32** %fpc, align 8
  %incdec.ptr220 = getelementptr inbounds i32, i32* %167, i32 1
  store i32* %incdec.ptr220, i32** %fpc, align 8
  store i32 %166, i32* %167, align 4
  %168 = load i8, i8* %ischop, align 1
  %tobool221 = trunc i8 %168 to i1
  %lnot222 = xor i1 %tobool221, true
  %lnot.ext223 = zext i1 %lnot222 to i32
  %169 = load i8, i8* %unchopnum, align 1
  %tobool224 = trunc i8 %169 to i1
  %conv225 = zext i1 %tobool224 to i32
  %or226 = or i32 %conv225, %lnot.ext223
  %tobool227 = icmp ne i32 %or226, 0
  %frombool228 = zext i1 %tobool227 to i8
  store i8 %frombool228, i8* %unchopnum, align 1
  br label %if.end365

if.else229:                                       ; preds = %land.lhs.true179, %lor.lhs.false175
  %170 = load i8*, i8** %s, align 8
  %171 = load i8, i8* %170, align 1
  %conv230 = sext i8 %171 to i32
  %cmp231 = icmp eq i32 %conv230, 48
  br i1 %cmp231, label %land.lhs.true233, label %if.else287

land.lhs.true233:                                 ; preds = %if.else229
  %172 = load i8*, i8** %s, align 8
  %arrayidx234 = getelementptr inbounds i8, i8* %172, i64 1
  %173 = load i8, i8* %arrayidx234, align 1
  %conv235 = sext i8 %173 to i32
  %cmp236 = icmp eq i32 %conv235, 35
  br i1 %cmp236, label %if.then238, label %if.else287

if.then238:                                       ; preds = %land.lhs.true233
  %174 = load i8, i8* %ischop, align 1
  %tobool239 = trunc i8 %174 to i1
  %175 = zext i1 %tobool239 to i64
  %cond241 = select i1 %tobool239, i32 1073741824, i32 0
  store i32 %cond241, i32* %arg, align 4
  %176 = load i8*, i8** %s, align 8
  %add.ptr242 = getelementptr inbounds i8, i8* %176, i64 -1
  store i8* %add.ptr242, i8** %base, align 8
  %177 = load i8*, i8** %s, align 8
  %incdec.ptr243 = getelementptr inbounds i8, i8* %177, i32 1
  store i8* %incdec.ptr243, i8** %s, align 8
  br label %while.cond244

while.cond244:                                    ; preds = %while.body248, %if.then238
  %178 = load i8*, i8** %s, align 8
  %179 = load i8, i8* %178, align 1
  %conv245 = sext i8 %179 to i32
  %cmp246 = icmp eq i32 %conv245, 35
  br i1 %cmp246, label %while.body248, label %while.end250

while.body248:                                    ; preds = %while.cond244
  %180 = load i8*, i8** %s, align 8
  %incdec.ptr249 = getelementptr inbounds i8, i8* %180, i32 1
  store i8* %incdec.ptr249, i8** %s, align 8
  br label %while.cond244

while.end250:                                     ; preds = %while.cond244
  %181 = load i8*, i8** %s, align 8
  %182 = load i8, i8* %181, align 1
  %conv251 = sext i8 %182 to i32
  %cmp252 = icmp eq i32 %conv251, 46
  br i1 %cmp252, label %if.then254, label %if.end271

if.then254:                                       ; preds = %while.end250
  %183 = load i8*, i8** %s, align 8
  %incdec.ptr256 = getelementptr inbounds i8, i8* %183, i32 1
  store i8* %incdec.ptr256, i8** %s, align 8
  store i8* %incdec.ptr256, i8** %f255, align 8
  br label %while.cond257

while.cond257:                                    ; preds = %while.body261, %if.then254
  %184 = load i8*, i8** %s, align 8
  %185 = load i8, i8* %184, align 1
  %conv258 = sext i8 %185 to i32
  %cmp259 = icmp eq i32 %conv258, 35
  br i1 %cmp259, label %while.body261, label %while.end263

while.body261:                                    ; preds = %while.cond257
  %186 = load i8*, i8** %s, align 8
  %incdec.ptr262 = getelementptr inbounds i8, i8* %186, i32 1
  store i8* %incdec.ptr262, i8** %s, align 8
  br label %while.cond257

while.end263:                                     ; preds = %while.cond257
  %187 = load i8*, i8** %s, align 8
  %188 = load i8*, i8** %f255, align 8
  %sub.ptr.lhs.cast264 = ptrtoint i8* %187 to i64
  %sub.ptr.rhs.cast265 = ptrtoint i8* %188 to i64
  %sub.ptr.sub266 = sub i64 %sub.ptr.lhs.cast264, %sub.ptr.rhs.cast265
  %add267 = add nsw i64 536870912, %sub.ptr.sub266
  %189 = load i32, i32* %arg, align 4
  %conv268 = sext i32 %189 to i64
  %or269 = or i64 %conv268, %add267
  %conv270 = trunc i64 %or269 to i32
  store i32 %conv270, i32* %arg, align 4
  br label %if.end271

if.end271:                                        ; preds = %while.end263, %while.end250
  %190 = load i8*, i8** %s, align 8
  %191 = load i8*, i8** %base, align 8
  %sub.ptr.lhs.cast272 = ptrtoint i8* %190 to i64
  %sub.ptr.rhs.cast273 = ptrtoint i8* %191 to i64
  %sub.ptr.sub274 = sub i64 %sub.ptr.lhs.cast272, %sub.ptr.rhs.cast273
  %conv275 = trunc i64 %sub.ptr.sub274 to i32
  %192 = load i32*, i32** %fpc, align 8
  %incdec.ptr276 = getelementptr inbounds i32, i32* %192, i32 1
  store i32* %incdec.ptr276, i32** %fpc, align 8
  store i32 %conv275, i32* %192, align 4
  %193 = load i32*, i32** %fpc, align 8
  %incdec.ptr277 = getelementptr inbounds i32, i32* %193, i32 1
  store i32* %incdec.ptr277, i32** %fpc, align 8
  store i32 16, i32* %193, align 4
  %194 = load i32, i32* %arg, align 4
  %195 = load i32*, i32** %fpc, align 8
  %incdec.ptr278 = getelementptr inbounds i32, i32* %195, i32 1
  store i32* %incdec.ptr278, i32** %fpc, align 8
  store i32 %194, i32* %195, align 4
  %196 = load i8, i8* %ischop, align 1
  %tobool279 = trunc i8 %196 to i1
  %lnot280 = xor i1 %tobool279, true
  %lnot.ext281 = zext i1 %lnot280 to i32
  %197 = load i8, i8* %unchopnum, align 1
  %tobool282 = trunc i8 %197 to i1
  %conv283 = zext i1 %tobool282 to i32
  %or284 = or i32 %conv283, %lnot.ext281
  %tobool285 = icmp ne i32 %or284, 0
  %frombool286 = zext i1 %tobool285 to i8
  store i8 %frombool286, i8* %unchopnum, align 1
  br label %if.end364

if.else287:                                       ; preds = %land.lhs.true233, %if.else229
  store i32 0, i32* %prespace, align 4
  store i8 0, i8* %ismore, align 1
  %198 = load i8*, i8** %s, align 8
  %199 = load i8, i8* %198, align 1
  %conv288 = sext i8 %199 to i32
  %cmp289 = icmp eq i32 %conv288, 62
  br i1 %cmp289, label %if.then291, label %if.else299

if.then291:                                       ; preds = %if.else287
  br label %while.cond292

while.cond292:                                    ; preds = %while.body297, %if.then291
  %200 = load i8*, i8** %s, align 8
  %incdec.ptr293 = getelementptr inbounds i8, i8* %200, i32 1
  store i8* %incdec.ptr293, i8** %s, align 8
  %201 = load i8, i8* %incdec.ptr293, align 1
  %conv294 = sext i8 %201 to i32
  %cmp295 = icmp eq i32 %conv294, 62
  br i1 %cmp295, label %while.body297, label %while.end298

while.body297:                                    ; preds = %while.cond292
  br label %while.cond292

while.end298:                                     ; preds = %while.cond292
  store i32 7, i32* %prespace, align 4
  br label %if.end325

if.else299:                                       ; preds = %if.else287
  %202 = load i8*, i8** %s, align 8
  %203 = load i8, i8* %202, align 1
  %conv300 = sext i8 %203 to i32
  %cmp301 = icmp eq i32 %conv300, 124
  br i1 %cmp301, label %if.then303, label %if.else311

if.then303:                                       ; preds = %if.else299
  br label %while.cond304

while.cond304:                                    ; preds = %while.body309, %if.then303
  %204 = load i8*, i8** %s, align 8
  %incdec.ptr305 = getelementptr inbounds i8, i8* %204, i32 1
  store i8* %incdec.ptr305, i8** %s, align 8
  %205 = load i8, i8* %incdec.ptr305, align 1
  %conv306 = sext i8 %205 to i32
  %cmp307 = icmp eq i32 %conv306, 124
  br i1 %cmp307, label %while.body309, label %while.end310

while.body309:                                    ; preds = %while.cond304
  br label %while.cond304

while.end310:                                     ; preds = %while.cond304
  store i32 8, i32* %prespace, align 4
  store i8 1, i8* %postspace, align 1
  br label %if.end324

if.else311:                                       ; preds = %if.else299
  %206 = load i8*, i8** %s, align 8
  %207 = load i8, i8* %206, align 1
  %conv312 = sext i8 %207 to i32
  %cmp313 = icmp eq i32 %conv312, 60
  br i1 %cmp313, label %if.then315, label %if.end323

if.then315:                                       ; preds = %if.else311
  br label %while.cond316

while.cond316:                                    ; preds = %while.body321, %if.then315
  %208 = load i8*, i8** %s, align 8
  %incdec.ptr317 = getelementptr inbounds i8, i8* %208, i32 1
  store i8* %incdec.ptr317, i8** %s, align 8
  %209 = load i8, i8* %incdec.ptr317, align 1
  %conv318 = sext i8 %209 to i32
  %cmp319 = icmp eq i32 %conv318, 60
  br i1 %cmp319, label %while.body321, label %while.end322

while.body321:                                    ; preds = %while.cond316
  br label %while.cond316

while.end322:                                     ; preds = %while.cond316
  br label %if.end323

if.end323:                                        ; preds = %while.end322, %if.else311
  store i8 1, i8* %postspace, align 1
  br label %if.end324

if.end324:                                        ; preds = %if.end323, %while.end310
  br label %if.end325

if.end325:                                        ; preds = %if.end324, %while.end298
  %210 = load i8*, i8** %s, align 8
  %211 = load i8, i8* %210, align 1
  %conv326 = sext i8 %211 to i32
  %cmp327 = icmp eq i32 %conv326, 46
  br i1 %cmp327, label %land.lhs.true329, label %if.end341

land.lhs.true329:                                 ; preds = %if.end325
  %212 = load i8*, i8** %s, align 8
  %arrayidx330 = getelementptr inbounds i8, i8* %212, i64 1
  %213 = load i8, i8* %arrayidx330, align 1
  %conv331 = sext i8 %213 to i32
  %cmp332 = icmp eq i32 %conv331, 46
  br i1 %cmp332, label %land.lhs.true334, label %if.end341

land.lhs.true334:                                 ; preds = %land.lhs.true329
  %214 = load i8*, i8** %s, align 8
  %arrayidx335 = getelementptr inbounds i8, i8* %214, i64 2
  %215 = load i8, i8* %arrayidx335, align 1
  %conv336 = sext i8 %215 to i32
  %cmp337 = icmp eq i32 %conv336, 46
  br i1 %cmp337, label %if.then339, label %if.end341

if.then339:                                       ; preds = %land.lhs.true334
  %216 = load i8*, i8** %s, align 8
  %add.ptr340 = getelementptr inbounds i8, i8* %216, i64 3
  store i8* %add.ptr340, i8** %s, align 8
  store i8 1, i8* %ismore, align 1
  br label %if.end341

if.end341:                                        ; preds = %if.then339, %land.lhs.true334, %land.lhs.true329, %if.end325
  %217 = load i8*, i8** %s, align 8
  %218 = load i8*, i8** %base, align 8
  %sub.ptr.lhs.cast342 = ptrtoint i8* %217 to i64
  %sub.ptr.rhs.cast343 = ptrtoint i8* %218 to i64
  %sub.ptr.sub344 = sub i64 %sub.ptr.lhs.cast342, %sub.ptr.rhs.cast343
  %conv345 = trunc i64 %sub.ptr.sub344 to i32
  %219 = load i32*, i32** %fpc, align 8
  %incdec.ptr346 = getelementptr inbounds i32, i32* %219, i32 1
  store i32* %incdec.ptr346, i32** %fpc, align 8
  store i32 %conv345, i32* %219, align 4
  %220 = load i8, i8* %ischop, align 1
  %tobool347 = trunc i8 %220 to i1
  %221 = zext i1 %tobool347 to i64
  %cond349 = select i1 %tobool347, i32 6, i32 5
  %222 = load i32*, i32** %fpc, align 8
  %incdec.ptr350 = getelementptr inbounds i32, i32* %222, i32 1
  store i32* %incdec.ptr350, i32** %fpc, align 8
  store i32 %cond349, i32* %222, align 4
  %223 = load i32, i32* %prespace, align 4
  %tobool351 = icmp ne i32 %223, 0
  br i1 %tobool351, label %if.then352, label %if.end354

if.then352:                                       ; preds = %if.end341
  %224 = load i32, i32* %prespace, align 4
  %225 = load i32*, i32** %fpc, align 8
  %incdec.ptr353 = getelementptr inbounds i32, i32* %225, i32 1
  store i32* %incdec.ptr353, i32** %fpc, align 8
  store i32 %224, i32* %225, align 4
  br label %if.end354

if.end354:                                        ; preds = %if.then352, %if.end341
  %226 = load i32*, i32** %fpc, align 8
  %incdec.ptr355 = getelementptr inbounds i32, i32* %226, i32 1
  store i32* %incdec.ptr355, i32** %fpc, align 8
  store i32 9, i32* %226, align 4
  %227 = load i8, i8* %ismore, align 1
  %tobool356 = trunc i8 %227 to i1
  br i1 %tobool356, label %if.then357, label %if.end359

if.then357:                                       ; preds = %if.end354
  %228 = load i32*, i32** %fpc, align 8
  %incdec.ptr358 = getelementptr inbounds i32, i32* %228, i32 1
  store i32* %incdec.ptr358, i32** %fpc, align 8
  store i32 15, i32* %228, align 4
  br label %if.end359

if.end359:                                        ; preds = %if.then357, %if.end354
  %229 = load i8, i8* %ischop, align 1
  %tobool360 = trunc i8 %229 to i1
  br i1 %tobool360, label %if.then361, label %if.end363

if.then361:                                       ; preds = %if.end359
  %230 = load i32*, i32** %fpc, align 8
  %incdec.ptr362 = getelementptr inbounds i32, i32* %230, i32 1
  store i32* %incdec.ptr362, i32** %fpc, align 8
  store i32 10, i32* %230, align 4
  br label %if.end363

if.end363:                                        ; preds = %if.then361, %if.end359
  br label %if.end364

if.end364:                                        ; preds = %if.end363, %if.end271
  br label %if.end365

if.end365:                                        ; preds = %if.end364, %if.end213
  br label %if.end366

if.end366:                                        ; preds = %if.end365, %if.end170
  %231 = load i8*, i8** %s, align 8
  store i8* %231, i8** %base, align 8
  store i32 0, i32* %skipspaces, align 4
  br label %while.cond

while.end367:                                     ; preds = %while.cond
  %232 = load i32*, i32** %fpc, align 8
  %incdec.ptr368 = getelementptr inbounds i32, i32* %232, i32 1
  store i32* %incdec.ptr368, i32** %fpc, align 8
  store i32 0, i32* %232, align 4
  %233 = load i32*, i32** %fpc, align 8
  %234 = load i32*, i32** %fops, align 8
  %sub.ptr.lhs.cast369 = ptrtoint i32* %233 to i64
  %sub.ptr.rhs.cast370 = ptrtoint i32* %234 to i64
  %sub.ptr.sub371 = sub i64 %sub.ptr.lhs.cast369, %sub.ptr.rhs.cast370
  %sub.ptr.div372 = sdiv exact i64 %sub.ptr.sub371, 4
  %conv373 = trunc i64 %sub.ptr.div372 to i32
  store i32 %conv373, i32* %arg, align 4
  %235 = load i32*, i32** %fops, align 8
  %236 = bitcast i32* %235 to i8*
  %237 = load %struct.magic*, %struct.magic** %mg, align 8
  %mg_ptr374 = getelementptr inbounds %struct.magic, %struct.magic* %237, i32 0, i32 7
  store i8* %236, i8** %mg_ptr374, align 8
  %238 = load i32, i32* %arg, align 4
  %conv375 = sext i32 %238 to i64
  %mul376 = mul i64 %conv375, 4
  %239 = load %struct.magic*, %struct.magic** %mg, align 8
  %mg_len = getelementptr inbounds %struct.magic, %struct.magic* %239, i32 0, i32 5
  store i64 %mul376, i64* %mg_len, align 8
  %240 = load %struct.sv*, %struct.sv** %sv_copy, align 8
  %241 = load %struct.magic*, %struct.magic** %mg, align 8
  %mg_obj377 = getelementptr inbounds %struct.magic, %struct.magic* %241, i32 0, i32 6
  store %struct.sv* %240, %struct.sv** %mg_obj377, align 8
  %242 = load %struct.magic*, %struct.magic** %mg, align 8
  %mg_flags = getelementptr inbounds %struct.magic, %struct.magic* %242, i32 0, i32 4
  %243 = load i8, i8* %mg_flags, align 1
  %conv378 = zext i8 %243 to i32
  %or379 = or i32 %conv378, 2
  %conv380 = trunc i32 %or379 to i8
  store i8 %conv380, i8* %mg_flags, align 1
  %244 = load i8, i8* %unchopnum, align 1
  %tobool381 = trunc i8 %244 to i1
  br i1 %tobool381, label %land.lhs.true383, label %if.end388

land.lhs.true383:                                 ; preds = %while.end367
  %245 = load i8, i8* %repeat, align 1
  %tobool384 = trunc i8 %245 to i1
  br i1 %tobool384, label %if.then386, label %if.end388

if.then386:                                       ; preds = %land.lhs.true383
  %call387 = call %struct.op* (i8*, ...) @Perl_die(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.110, i64 0, i64 0))
  br label %if.end388

if.end388:                                        ; preds = %if.then386, %land.lhs.true383, %while.end367
  %246 = load %struct.magic*, %struct.magic** %mg, align 8
  store %struct.magic* %246, %struct.magic** %retval, align 8
  br label %return

return:                                           ; preds = %if.end388, %if.then31
  %247 = load %struct.magic*, %struct.magic** %retval, align 8
  ret %struct.magic* %247
}

declare dso_local i8* @Perl_sv_grow(%struct.sv*, i64) #1

declare dso_local i8* @Perl_sv_2pv_flags(%struct.sv*, i64*, i32) #1

declare dso_local void @Perl_ck_warner(i32, i8*, ...) #1

declare dso_local void @Perl_sv_chop(%struct.sv*, i8*) #1

declare dso_local i8* @Perl_bytes_to_utf8(i8*, i64*) #1

declare dso_local double @Perl_sv_2nv_flags(%struct.sv*, i32) #1

; Function Attrs: noinline nounwind uwtable
define internal zeroext i1 @S_num_overflow(double %value, i32 %fldsize, i32 %frcsize) #0 {
entry:
  %value.addr = alloca double, align 8
  %fldsize.addr = alloca i32, align 4
  %frcsize.addr = alloca i32, align 4
  %pwr = alloca double, align 8
  %eps = alloca double, align 8
  %res = alloca i8, align 1
  %intsize = alloca i32, align 4
  store double %value, double* %value.addr, align 8
  store i32 %fldsize, i32* %fldsize.addr, align 4
  store i32 %frcsize, i32* %frcsize.addr, align 4
  store double 1.000000e+00, double* %pwr, align 8
  store double 5.000000e-01, double* %eps, align 8
  store i8 0, i8* %res, align 1
  %0 = load i32, i32* %fldsize.addr, align 4
  %1 = load double, double* %value.addr, align 8
  %cmp = fcmp olt double %1, 0.000000e+00
  %2 = zext i1 %cmp to i64
  %cond = select i1 %cmp, i32 1, i32 0
  %sub = sub nsw i32 %0, %cond
  store i32 %sub, i32* %intsize, align 4
  %3 = load i32, i32* %frcsize.addr, align 4
  %and = and i32 %3, 536870912
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %4 = load i32, i32* %intsize, align 4
  %dec = add nsw i32 %4, -1
  store i32 %dec, i32* %intsize, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %5 = load i32, i32* %frcsize.addr, align 4
  %and1 = and i32 %5, -1610612737
  store i32 %and1, i32* %frcsize.addr, align 4
  %6 = load i32, i32* %frcsize.addr, align 4
  %7 = load i32, i32* %intsize, align 4
  %sub2 = sub nsw i32 %7, %6
  store i32 %sub2, i32* %intsize, align 4
  br label %while.cond

while.cond:                                       ; preds = %while.body, %if.end
  %8 = load i32, i32* %intsize, align 4
  %dec3 = add nsw i32 %8, -1
  store i32 %dec3, i32* %intsize, align 4
  %tobool4 = icmp ne i32 %8, 0
  br i1 %tobool4, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %9 = load double, double* %pwr, align 8
  %mul = fmul double %9, 1.000000e+01
  store double %mul, double* %pwr, align 8
  br label %while.cond

while.end:                                        ; preds = %while.cond
  br label %while.cond5

while.cond5:                                      ; preds = %while.body8, %while.end
  %10 = load i32, i32* %frcsize.addr, align 4
  %dec6 = add nsw i32 %10, -1
  store i32 %dec6, i32* %frcsize.addr, align 4
  %tobool7 = icmp ne i32 %10, 0
  br i1 %tobool7, label %while.body8, label %while.end9

while.body8:                                      ; preds = %while.cond5
  %11 = load double, double* %eps, align 8
  %div = fdiv double %11, 1.000000e+01
  store double %div, double* %eps, align 8
  br label %while.cond5

while.end9:                                       ; preds = %while.cond5
  %12 = load double, double* %value.addr, align 8
  %cmp10 = fcmp oge double %12, 0.000000e+00
  br i1 %cmp10, label %if.then11, label %if.else

if.then11:                                        ; preds = %while.end9
  %13 = load double, double* %value.addr, align 8
  %14 = load double, double* %eps, align 8
  %add = fadd double %13, %14
  %15 = load double, double* %pwr, align 8
  %cmp12 = fcmp oge double %add, %15
  br i1 %cmp12, label %if.then13, label %if.end14

if.then13:                                        ; preds = %if.then11
  store i8 1, i8* %res, align 1
  br label %if.end14

if.end14:                                         ; preds = %if.then13, %if.then11
  br label %if.end19

if.else:                                          ; preds = %while.end9
  %16 = load double, double* %value.addr, align 8
  %17 = load double, double* %eps, align 8
  %sub15 = fsub double %16, %17
  %18 = load double, double* %pwr, align 8
  %fneg = fneg double %18
  %cmp16 = fcmp ole double %sub15, %fneg
  br i1 %cmp16, label %if.then17, label %if.end18

if.then17:                                        ; preds = %if.else
  store i8 1, i8* %res, align 1
  br label %if.end18

if.end18:                                         ; preds = %if.then17, %if.else
  br label %if.end19

if.end19:                                         ; preds = %if.end18, %if.end14
  %19 = load i8, i8* %res, align 1
  %tobool20 = trunc i8 %19 to i1
  ret i1 %tobool20
}

declare dso_local i32 @Perl_my_snprintf(i8*, i64, i8*, ...) #1

; Function Attrs: nounwind readonly
declare dso_local i32 @strncmp(i8*, i8*, i64) #3

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.op* @Perl_pp_grepstart() #0 {
entry:
  %retval = alloca %struct.op*, align 8
  %sp = alloca %struct.sv**, align 8
  %src = alloca %struct.sv*, align 8
  %0 = load %struct.sv**, %struct.sv*** @PL_stack_sp, align 8
  store %struct.sv** %0, %struct.sv*** %sp, align 8
  %1 = load %struct.sv**, %struct.sv*** @PL_stack_base, align 8
  %2 = load i32*, i32** @PL_markstack_ptr, align 8
  %3 = load i32, i32* %2, align 4
  %idx.ext = sext i32 %3 to i64
  %add.ptr = getelementptr inbounds %struct.sv*, %struct.sv** %1, i64 %idx.ext
  %4 = load %struct.sv**, %struct.sv*** %sp, align 8
  %cmp = icmp eq %struct.sv** %add.ptr, %4
  br i1 %cmp, label %if.then, label %if.end19

if.then:                                          ; preds = %entry
  %5 = load i32*, i32** @PL_markstack_ptr, align 8
  %incdec.ptr = getelementptr inbounds i32, i32* %5, i32 -1
  store i32* %incdec.ptr, i32** @PL_markstack_ptr, align 8
  %6 = load i32, i32* %5, align 4
  %7 = load %struct.op*, %struct.op** @PL_op, align 8
  %op_flags = getelementptr inbounds %struct.op, %struct.op* %7, i32 0, i32 5
  %8 = load i8, i8* %op_flags, align 2
  %conv = zext i8 %8 to i32
  %and = and i32 %conv, 3
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.then
  %9 = load %struct.op*, %struct.op** @PL_op, align 8
  %op_flags1 = getelementptr inbounds %struct.op, %struct.op* %9, i32 0, i32 5
  %10 = load i8, i8* %op_flags1, align 2
  %conv2 = zext i8 %10 to i32
  %and3 = and i32 %conv2, 3
  br label %cond.end

cond.false:                                       ; preds = %if.then
  %call = call i32 @Perl_block_gimme()
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %and3, %cond.true ], [ %call, %cond.false ]
  %cmp4 = icmp eq i32 %cond, 2
  br i1 %cmp4, label %if.then6, label %if.end17

if.then6:                                         ; preds = %cond.end
  br label %do.body

do.body:                                          ; preds = %if.then6
  br label %do.body7

do.body7:                                         ; preds = %do.body
  %11 = load %struct.sv**, %struct.sv*** @PL_stack_max, align 8
  %12 = load %struct.sv**, %struct.sv*** %sp, align 8
  %sub.ptr.lhs.cast = ptrtoint %struct.sv** %11 to i64
  %sub.ptr.rhs.cast = ptrtoint %struct.sv** %12 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 8
  %cmp8 = icmp slt i64 %sub.ptr.div, 1
  br i1 %cmp8, label %cond.true10, label %cond.false11

cond.true10:                                      ; preds = %do.body7
  br i1 true, label %if.then12, label %if.end

cond.false11:                                     ; preds = %do.body7
  br i1 false, label %if.then12, label %if.end

if.then12:                                        ; preds = %cond.false11, %cond.true10
  %13 = load %struct.sv**, %struct.sv*** %sp, align 8
  %14 = load %struct.sv**, %struct.sv*** %sp, align 8
  %call13 = call %struct.sv** @Perl_stack_grow(%struct.sv** %13, %struct.sv** %14, i64 1)
  store %struct.sv** %call13, %struct.sv*** %sp, align 8
  %15 = load %struct.sv**, %struct.sv*** %sp, align 8
  br label %if.end

if.end:                                           ; preds = %if.then12, %cond.false11, %cond.true10
  br label %do.end

do.end:                                           ; preds = %if.end
  %call14 = call %struct.sv* @Perl_sv_newmortal()
  %16 = load %struct.sv**, %struct.sv*** %sp, align 8
  %incdec.ptr15 = getelementptr inbounds %struct.sv*, %struct.sv** %16, i32 1
  store %struct.sv** %incdec.ptr15, %struct.sv*** %sp, align 8
  store %struct.sv* %call14, %struct.sv** %incdec.ptr15, align 8
  call void @Perl_sv_setiv(%struct.sv* %call14, i64 0)
  br label %do.end16

do.end16:                                         ; preds = %do.end
  br label %if.end17

if.end17:                                         ; preds = %do.end16, %cond.end
  %17 = load %struct.sv**, %struct.sv*** %sp, align 8
  store %struct.sv** %17, %struct.sv*** @PL_stack_sp, align 8
  %18 = load %struct.op*, %struct.op** @PL_op, align 8
  %op_next = getelementptr inbounds %struct.op, %struct.op* %18, i32 0, i32 0
  %19 = load %struct.op*, %struct.op** %op_next, align 8
  %op_next18 = getelementptr inbounds %struct.op, %struct.op* %19, i32 0, i32 0
  %20 = load %struct.op*, %struct.op** %op_next18, align 8
  store %struct.op* %20, %struct.op** %retval, align 8
  br label %return

if.end19:                                         ; preds = %entry
  %21 = load %struct.sv**, %struct.sv*** @PL_stack_base, align 8
  %22 = load i32*, i32** @PL_markstack_ptr, align 8
  %23 = load i32, i32* %22, align 4
  %idx.ext20 = sext i32 %23 to i64
  %add.ptr21 = getelementptr inbounds %struct.sv*, %struct.sv** %21, i64 %idx.ext20
  %add.ptr22 = getelementptr inbounds %struct.sv*, %struct.sv** %add.ptr21, i64 1
  store %struct.sv** %add.ptr22, %struct.sv*** @PL_stack_sp, align 8
  %call23 = call %struct.op* @Perl_pp_pushmark()
  %call24 = call %struct.op* @Perl_pp_pushmark()
  call void @Perl_push_scope()
  call void @Perl_save_strlen(i64* @PL_tmps_floor)
  %24 = load i64, i64* @PL_tmps_ix, align 8
  store i64 %24, i64* @PL_tmps_floor, align 8
  %25 = load %struct.op*, %struct.op** @PL_op, align 8
  %op_private = getelementptr inbounds %struct.op, %struct.op* %25, i32 0, i32 6
  %26 = load i8, i8* %op_private, align 1
  %conv25 = zext i8 %26 to i32
  %and26 = and i32 %conv25, 2
  %tobool27 = icmp ne i32 %and26, 0
  br i1 %tobool27, label %if.then28, label %if.else

if.then28:                                        ; preds = %if.end19
  %27 = load %struct.sv**, %struct.sv*** @PL_curpad, align 8
  %28 = load %struct.op*, %struct.op** @PL_op, align 8
  %op_targ = getelementptr inbounds %struct.op, %struct.op* %28, i32 0, i32 3
  %29 = load i64, i64* %op_targ, align 8
  %arrayidx = getelementptr inbounds %struct.sv*, %struct.sv** %27, i64 %29
  call void @Perl_save_sptr(%struct.sv** %arrayidx)
  br label %if.end35

if.else:                                          ; preds = %if.end19
  %30 = load %struct.gv*, %struct.gv** @PL_defgv, align 8
  call void @Perl_save_gp(%struct.gv* %30, i32 0)
  %31 = load %struct.gv*, %struct.gv** @PL_defgv, align 8
  %sv_any = getelementptr inbounds %struct.gv, %struct.gv* %31, i32 0, i32 0
  %32 = load %struct.xpvgv*, %struct.xpvgv** %sv_any, align 8
  %xpv_cur = getelementptr inbounds %struct.xpvgv, %struct.xpvgv* %32, i32 0, i32 2
  %33 = load i64, i64* %xpv_cur, align 8
  %and29 = and i64 %33, -2
  store i64 %and29, i64* %xpv_cur, align 8
  %34 = load %struct.gv*, %struct.gv** @PL_defgv, align 8
  %sv_u = getelementptr inbounds %struct.gv, %struct.gv* %34, i32 0, i32 3
  %svu_gp = bitcast %union.anon.4* %sv_u to %struct.gp**
  %35 = load %struct.gp*, %struct.gp** %svu_gp, align 8
  %add.ptr30 = getelementptr inbounds %struct.gp, %struct.gp* %35, i64 0
  %gp_sv = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr30, i32 0, i32 0
  call void @Perl_save_generic_svref(%struct.sv** %gp_sv)
  %36 = load %struct.gv*, %struct.gv** @PL_defgv, align 8
  %sv_u31 = getelementptr inbounds %struct.gv, %struct.gv* %36, i32 0, i32 3
  %svu_gp32 = bitcast %union.anon.4* %sv_u31 to %struct.gp**
  %37 = load %struct.gp*, %struct.gp** %svu_gp32, align 8
  %add.ptr33 = getelementptr inbounds %struct.gp, %struct.gp* %37, i64 0
  %gp_sv34 = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr33, i32 0, i32 0
  store %struct.sv* null, %struct.sv** %gp_sv34, align 8
  br label %if.end35

if.end35:                                         ; preds = %if.else, %if.then28
  call void @Perl_push_scope()
  call void @Perl_save_vptr(i8* bitcast (%struct.pmop** @PL_curpm to i8*))
  %38 = load %struct.sv**, %struct.sv*** @PL_stack_base, align 8
  %39 = load i32*, i32** @PL_markstack_ptr, align 8
  %40 = load i32, i32* %39, align 4
  %idxprom = sext i32 %40 to i64
  %arrayidx36 = getelementptr inbounds %struct.sv*, %struct.sv** %38, i64 %idxprom
  %41 = load %struct.sv*, %struct.sv** %arrayidx36, align 8
  store %struct.sv* %41, %struct.sv** %src, align 8
  %42 = load %struct.sv*, %struct.sv** %src, align 8
  %sv_flags = getelementptr inbounds %struct.sv, %struct.sv* %42, i32 0, i32 2
  %43 = load i32, i32* %sv_flags, align 4
  %and37 = and i32 %43, 131072
  %tobool38 = icmp ne i32 %and37, 0
  br i1 %tobool38, label %if.then39, label %if.end43

if.then39:                                        ; preds = %if.end35
  %44 = load %struct.sv*, %struct.sv** %src, align 8
  %call40 = call %struct.sv* @Perl_sv_mortalcopy_flags(%struct.sv* %44, i32 1538)
  %45 = load %struct.sv**, %struct.sv*** @PL_stack_base, align 8
  %46 = load i32*, i32** @PL_markstack_ptr, align 8
  %47 = load i32, i32* %46, align 4
  %idxprom41 = sext i32 %47 to i64
  %arrayidx42 = getelementptr inbounds %struct.sv*, %struct.sv** %45, i64 %idxprom41
  store %struct.sv* %call40, %struct.sv** %arrayidx42, align 8
  store %struct.sv* %call40, %struct.sv** %src, align 8
  %48 = load i64, i64* @PL_tmps_floor, align 8
  %inc = add nsw i64 %48, 1
  store i64 %inc, i64* @PL_tmps_floor, align 8
  br label %if.end43

if.end43:                                         ; preds = %if.then39, %if.end35
  %49 = load %struct.sv*, %struct.sv** %src, align 8
  %sv_flags44 = getelementptr inbounds %struct.sv, %struct.sv* %49, i32 0, i32 2
  %50 = load i32, i32* %sv_flags44, align 4
  %and45 = and i32 %50, -524289
  store i32 %and45, i32* %sv_flags44, align 4
  %51 = load %struct.op*, %struct.op** @PL_op, align 8
  %op_private46 = getelementptr inbounds %struct.op, %struct.op* %51, i32 0, i32 6
  %52 = load i8, i8* %op_private46, align 1
  %conv47 = zext i8 %52 to i32
  %and48 = and i32 %conv47, 2
  %tobool49 = icmp ne i32 %and48, 0
  br i1 %tobool49, label %if.then50, label %if.else53

if.then50:                                        ; preds = %if.end43
  %53 = load %struct.sv*, %struct.sv** %src, align 8
  %54 = load %struct.sv**, %struct.sv*** @PL_curpad, align 8
  %55 = load %struct.op*, %struct.op** @PL_op, align 8
  %op_targ51 = getelementptr inbounds %struct.op, %struct.op* %55, i32 0, i32 3
  %56 = load i64, i64* %op_targ51, align 8
  %arrayidx52 = getelementptr inbounds %struct.sv*, %struct.sv** %54, i64 %56
  store %struct.sv* %53, %struct.sv** %arrayidx52, align 8
  br label %if.end63

if.else53:                                        ; preds = %if.end43
  %57 = load %struct.gv*, %struct.gv** @PL_defgv, align 8
  %sv_u54 = getelementptr inbounds %struct.gv, %struct.gv* %57, i32 0, i32 3
  %svu_gp55 = bitcast %union.anon.4* %sv_u54 to %struct.gp**
  %58 = load %struct.gp*, %struct.gp** %svu_gp55, align 8
  %add.ptr56 = getelementptr inbounds %struct.gp, %struct.gp* %58, i64 0
  %gp_sv57 = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr56, i32 0, i32 0
  %59 = load %struct.sv*, %struct.sv** %gp_sv57, align 8
  %60 = bitcast %struct.sv* %59 to i8*
  %61 = bitcast i8* %60 to %struct.sv*
  call void @S_SvREFCNT_dec(%struct.sv* %61)
  %62 = load %struct.sv*, %struct.sv** %src, align 8
  %63 = bitcast %struct.sv* %62 to i8*
  %64 = bitcast i8* %63 to %struct.sv*
  %call58 = call %struct.sv* @S_SvREFCNT_inc(%struct.sv* %64)
  %65 = load %struct.gv*, %struct.gv** @PL_defgv, align 8
  %sv_u59 = getelementptr inbounds %struct.gv, %struct.gv* %65, i32 0, i32 3
  %svu_gp60 = bitcast %union.anon.4* %sv_u59 to %struct.gp**
  %66 = load %struct.gp*, %struct.gp** %svu_gp60, align 8
  %add.ptr61 = getelementptr inbounds %struct.gp, %struct.gp* %66, i64 0
  %gp_sv62 = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr61, i32 0, i32 0
  store %struct.sv* %call58, %struct.sv** %gp_sv62, align 8
  br label %if.end63

if.end63:                                         ; preds = %if.else53, %if.then50
  %67 = load %struct.sv**, %struct.sv*** %sp, align 8
  store %struct.sv** %67, %struct.sv*** @PL_stack_sp, align 8
  %68 = load %struct.op*, %struct.op** @PL_op, align 8
  %op_type = getelementptr inbounds %struct.op, %struct.op* %68, i32 0, i32 4
  %bf.load = load i16, i16* %op_type, align 8
  %bf.clear = and i16 %bf.load, 511
  %bf.cast = zext i16 %bf.clear to i32
  %cmp64 = icmp eq i32 %bf.cast, 171
  br i1 %cmp64, label %if.then66, label %if.end68

if.then66:                                        ; preds = %if.end63
  %call67 = call %struct.op* @Perl_pp_pushmark()
  br label %if.end68

if.end68:                                         ; preds = %if.then66, %if.end63
  %69 = load %struct.op*, %struct.op** @PL_op, align 8
  %op_next69 = getelementptr inbounds %struct.op, %struct.op* %69, i32 0, i32 0
  %70 = load %struct.op*, %struct.op** %op_next69, align 8
  %71 = bitcast %struct.op* %70 to %struct.logop*
  %op_other = getelementptr inbounds %struct.logop, %struct.logop* %71, i32 0, i32 8
  %72 = load %struct.op*, %struct.op** %op_other, align 8
  store %struct.op* %72, %struct.op** %retval, align 8
  br label %return

return:                                           ; preds = %if.end68, %if.end17
  %73 = load %struct.op*, %struct.op** %retval, align 8
  ret %struct.op* %73
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @Perl_block_gimme() #0 {
entry:
  %retval = alloca i32, align 4
  %cxix = alloca i32, align 4
  %0 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %si_cxstack = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %0, i32 0, i32 1
  %1 = load %struct.context*, %struct.context** %si_cxstack, align 8
  %2 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %si_cxix = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %2, i32 0, i32 4
  %3 = load i32, i32* %si_cxix, align 8
  %call = call i32 @S_dopoptosub_at(%struct.context* %1, i32 %3)
  store i32 %call, i32* %cxix, align 4
  %4 = load i32, i32* %cxix, align 4
  %cmp = icmp slt i32 %4, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 1, i32* %retval, align 4
  br label %return

if.end:                                           ; preds = %entry
  %5 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %si_cxstack1 = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %5, i32 0, i32 1
  %6 = load %struct.context*, %struct.context** %si_cxstack1, align 8
  %7 = load i32, i32* %cxix, align 4
  %idxprom = sext i32 %7 to i64
  %arrayidx = getelementptr inbounds %struct.context, %struct.context* %6, i64 %idxprom
  %cx_u = getelementptr inbounds %struct.context, %struct.context* %arrayidx, i32 0, i32 0
  %cx_blk = bitcast %union.anon.16* %cx_u to %struct.block*
  %blku_gimme = getelementptr inbounds %struct.block, %struct.block* %cx_blk, i32 0, i32 1
  %8 = load i8, i8* %blku_gimme, align 1
  %conv = zext i8 %8 to i32
  switch i32 %conv, label %sw.default [
    i32 1, label %sw.bb
    i32 2, label %sw.bb2
    i32 3, label %sw.bb3
  ]

sw.bb:                                            ; preds = %if.end
  store i32 1, i32* %retval, align 4
  br label %return

sw.bb2:                                           ; preds = %if.end
  store i32 2, i32* %retval, align 4
  br label %return

sw.bb3:                                           ; preds = %if.end
  store i32 3, i32* %retval, align 4
  br label %return

sw.default:                                       ; preds = %if.end
  %9 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %si_cxstack4 = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %9, i32 0, i32 1
  %10 = load %struct.context*, %struct.context** %si_cxstack4, align 8
  %11 = load i32, i32* %cxix, align 4
  %idxprom5 = sext i32 %11 to i64
  %arrayidx6 = getelementptr inbounds %struct.context, %struct.context* %10, i64 %idxprom5
  %cx_u7 = getelementptr inbounds %struct.context, %struct.context* %arrayidx6, i32 0, i32 0
  %cx_blk8 = bitcast %union.anon.16* %cx_u7 to %struct.block*
  %blku_gimme9 = getelementptr inbounds %struct.block, %struct.block* %cx_blk8, i32 0, i32 1
  %12 = load i8, i8* %blku_gimme9, align 1
  %conv10 = zext i8 %12 to i32
  call void (i8*, ...) @Perl_croak(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.12, i64 0, i64 0), i32 %conv10)
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default
  store i32 0, i32* %retval, align 4
  br label %return

return:                                           ; preds = %sw.epilog, %sw.bb3, %sw.bb2, %sw.bb, %if.then
  %13 = load i32, i32* %retval, align 4
  ret i32 %13
}

declare dso_local %struct.op* @Perl_pp_pushmark() #1

declare dso_local void @Perl_push_scope() #1

declare dso_local void @Perl_save_strlen(i64*) #1

declare dso_local void @Perl_save_sptr(%struct.sv**) #1

declare dso_local void @Perl_save_gp(%struct.gv*, i32) #1

declare dso_local void @Perl_save_generic_svref(%struct.sv**) #1

declare dso_local void @Perl_save_vptr(i8*) #1

declare dso_local %struct.sv* @Perl_sv_mortalcopy_flags(%struct.sv*, i32) #1

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.op* @Perl_pp_mapwhile() #0 {
entry:
  %retval = alloca %struct.op*, align 8
  %sp = alloca %struct.sv**, align 8
  %gimme = alloca i32, align 4
  %items = alloca i32, align 4
  %count = alloca i32, align 4
  %shift = alloca i32, align 4
  %src = alloca %struct.sv**, align 8
  %dst = alloca %struct.sv**, align 8
  %tmpsbase = alloca i32, align 4
  %i = alloca i32, align 4
  %eMiX = alloca i64, align 8
  %sv = alloca %struct.sv*, align 8
  %sv149 = alloca %struct.sv*, align 8
  %targ = alloca %struct.sv*, align 8
  %src196 = alloca %struct.sv*, align 8
  %0 = load %struct.sv**, %struct.sv*** @PL_stack_sp, align 8
  store %struct.sv** %0, %struct.sv*** %sp, align 8
  %1 = load %struct.op*, %struct.op** @PL_op, align 8
  %op_flags = getelementptr inbounds %struct.op, %struct.op* %1, i32 0, i32 5
  %2 = load i8, i8* %op_flags, align 2
  %conv = zext i8 %2 to i32
  %and = and i32 %conv, 3
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %3 = load %struct.op*, %struct.op** @PL_op, align 8
  %op_flags1 = getelementptr inbounds %struct.op, %struct.op* %3, i32 0, i32 5
  %4 = load i8, i8* %op_flags1, align 2
  %conv2 = zext i8 %4 to i32
  %and3 = and i32 %conv2, 3
  br label %cond.end

cond.false:                                       ; preds = %entry
  %call = call i32 @Perl_block_gimme()
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %and3, %cond.true ], [ %call, %cond.false ]
  store i32 %cond, i32* %gimme, align 4
  %5 = load %struct.sv**, %struct.sv*** %sp, align 8
  %6 = load %struct.sv**, %struct.sv*** @PL_stack_base, align 8
  %sub.ptr.lhs.cast = ptrtoint %struct.sv** %5 to i64
  %sub.ptr.rhs.cast = ptrtoint %struct.sv** %6 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 8
  %7 = load i32*, i32** @PL_markstack_ptr, align 8
  %8 = load i32, i32* %7, align 4
  %conv4 = sext i32 %8 to i64
  %sub = sub nsw i64 %sub.ptr.div, %conv4
  %conv5 = trunc i64 %sub to i32
  store i32 %conv5, i32* %items, align 4
  %9 = load i32*, i32** @PL_markstack_ptr, align 8
  %arrayidx = getelementptr inbounds i32, i32* %9, i64 -1
  %10 = load i32, i32* %arrayidx, align 4
  %inc = add nsw i32 %10, 1
  store i32 %inc, i32* %arrayidx, align 4
  %11 = load i32, i32* %items, align 4
  %tobool6 = icmp ne i32 %11, 0
  br i1 %tobool6, label %land.lhs.true, label %if.else123

land.lhs.true:                                    ; preds = %cond.end
  %12 = load i32, i32* %gimme, align 4
  %cmp = icmp ne i32 %12, 1
  br i1 %cmp, label %if.then, label %if.else123

if.then:                                          ; preds = %land.lhs.true
  %13 = load i32, i32* %items, align 4
  %14 = load i32*, i32** @PL_markstack_ptr, align 8
  %arrayidx8 = getelementptr inbounds i32, i32* %14, i64 -1
  %15 = load i32, i32* %arrayidx8, align 4
  %16 = load i32*, i32** @PL_markstack_ptr, align 8
  %arrayidx9 = getelementptr inbounds i32, i32* %16, i64 -2
  %17 = load i32, i32* %arrayidx9, align 4
  %sub10 = sub nsw i32 %15, %17
  %cmp11 = icmp sgt i32 %13, %sub10
  br i1 %cmp11, label %if.then13, label %if.end47

if.then13:                                        ; preds = %if.then
  %18 = load i32, i32* %items, align 4
  %19 = load i32*, i32** @PL_markstack_ptr, align 8
  %arrayidx14 = getelementptr inbounds i32, i32* %19, i64 -1
  %20 = load i32, i32* %arrayidx14, align 4
  %21 = load i32*, i32** @PL_markstack_ptr, align 8
  %arrayidx15 = getelementptr inbounds i32, i32* %21, i64 -2
  %22 = load i32, i32* %arrayidx15, align 4
  %sub16 = sub nsw i32 %20, %22
  %sub17 = sub nsw i32 %18, %sub16
  store i32 %sub17, i32* %shift, align 4
  %23 = load %struct.sv**, %struct.sv*** %sp, align 8
  %24 = load %struct.sv**, %struct.sv*** @PL_stack_base, align 8
  %sub.ptr.lhs.cast18 = ptrtoint %struct.sv** %23 to i64
  %sub.ptr.rhs.cast19 = ptrtoint %struct.sv** %24 to i64
  %sub.ptr.sub20 = sub i64 %sub.ptr.lhs.cast18, %sub.ptr.rhs.cast19
  %sub.ptr.div21 = sdiv exact i64 %sub.ptr.sub20, 8
  %25 = load i32*, i32** @PL_markstack_ptr, align 8
  %arrayidx22 = getelementptr inbounds i32, i32* %25, i64 -1
  %26 = load i32, i32* %arrayidx22, align 4
  %sub23 = sub nsw i32 %26, 1
  %conv24 = sext i32 %sub23 to i64
  %sub25 = sub nsw i64 %sub.ptr.div21, %conv24
  %conv26 = trunc i64 %sub25 to i32
  store i32 %conv26, i32* %count, align 4
  %27 = load i32, i32* %shift, align 4
  %28 = load i32, i32* %count, align 4
  %cmp27 = icmp slt i32 %27, %28
  br i1 %cmp27, label %if.then29, label %if.end

if.then29:                                        ; preds = %if.then13
  %29 = load i32, i32* %count, align 4
  store i32 %29, i32* %shift, align 4
  br label %if.end

if.end:                                           ; preds = %if.then29, %if.then13
  br label %do.body

do.body:                                          ; preds = %if.end
  %30 = load %struct.sv**, %struct.sv*** @PL_stack_max, align 8
  %31 = load %struct.sv**, %struct.sv*** %sp, align 8
  %sub.ptr.lhs.cast30 = ptrtoint %struct.sv** %30 to i64
  %sub.ptr.rhs.cast31 = ptrtoint %struct.sv** %31 to i64
  %sub.ptr.sub32 = sub i64 %sub.ptr.lhs.cast30, %sub.ptr.rhs.cast31
  %sub.ptr.div33 = sdiv exact i64 %sub.ptr.sub32, 8
  %32 = load i32, i32* %shift, align 4
  %conv34 = sext i32 %32 to i64
  %cmp35 = icmp slt i64 %sub.ptr.div33, %conv34
  br i1 %cmp35, label %cond.true37, label %cond.false38

cond.true37:                                      ; preds = %do.body
  br i1 true, label %if.then39, label %if.end42

cond.false38:                                     ; preds = %do.body
  br i1 false, label %if.then39, label %if.end42

if.then39:                                        ; preds = %cond.false38, %cond.true37
  %33 = load %struct.sv**, %struct.sv*** %sp, align 8
  %34 = load %struct.sv**, %struct.sv*** %sp, align 8
  %35 = load i32, i32* %shift, align 4
  %conv40 = sext i32 %35 to i64
  %call41 = call %struct.sv** @Perl_stack_grow(%struct.sv** %33, %struct.sv** %34, i64 %conv40)
  store %struct.sv** %call41, %struct.sv*** %sp, align 8
  %36 = load %struct.sv**, %struct.sv*** %sp, align 8
  br label %if.end42

if.end42:                                         ; preds = %if.then39, %cond.false38, %cond.true37
  br label %do.end

do.end:                                           ; preds = %if.end42
  %37 = load %struct.sv**, %struct.sv*** %sp, align 8
  store %struct.sv** %37, %struct.sv*** %src, align 8
  %38 = load i32, i32* %shift, align 4
  %39 = load %struct.sv**, %struct.sv*** %sp, align 8
  %idx.ext = sext i32 %38 to i64
  %add.ptr = getelementptr inbounds %struct.sv*, %struct.sv** %39, i64 %idx.ext
  store %struct.sv** %add.ptr, %struct.sv*** %sp, align 8
  store %struct.sv** %add.ptr, %struct.sv*** %dst, align 8
  %40 = load i32, i32* %shift, align 4
  %41 = load i32*, i32** @PL_markstack_ptr, align 8
  %arrayidx43 = getelementptr inbounds i32, i32* %41, i64 -1
  %42 = load i32, i32* %arrayidx43, align 4
  %add = add nsw i32 %42, %40
  store i32 %add, i32* %arrayidx43, align 4
  %43 = load i32, i32* %shift, align 4
  %44 = load i32*, i32** @PL_markstack_ptr, align 8
  %45 = load i32, i32* %44, align 4
  %add44 = add nsw i32 %45, %43
  store i32 %add44, i32* %44, align 4
  br label %while.cond

while.cond:                                       ; preds = %while.body, %do.end
  %46 = load i32, i32* %count, align 4
  %dec = add nsw i32 %46, -1
  store i32 %dec, i32* %count, align 4
  %tobool45 = icmp ne i32 %46, 0
  br i1 %tobool45, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %47 = load %struct.sv**, %struct.sv*** %src, align 8
  %incdec.ptr = getelementptr inbounds %struct.sv*, %struct.sv** %47, i32 -1
  store %struct.sv** %incdec.ptr, %struct.sv*** %src, align 8
  %48 = load %struct.sv*, %struct.sv** %47, align 8
  %49 = load %struct.sv**, %struct.sv*** %dst, align 8
  %incdec.ptr46 = getelementptr inbounds %struct.sv*, %struct.sv** %49, i32 -1
  store %struct.sv** %incdec.ptr46, %struct.sv*** %dst, align 8
  store %struct.sv* %48, %struct.sv** %49, align 8
  br label %while.cond

while.end:                                        ; preds = %while.cond
  br label %if.end47

if.end47:                                         ; preds = %while.end, %if.then
  %50 = load %struct.sv**, %struct.sv*** @PL_stack_base, align 8
  %51 = load i32, i32* %items, align 4
  %52 = load i32*, i32** @PL_markstack_ptr, align 8
  %arrayidx48 = getelementptr inbounds i32, i32* %52, i64 -2
  %53 = load i32, i32* %arrayidx48, align 4
  %add49 = add nsw i32 %53, %51
  store i32 %add49, i32* %arrayidx48, align 4
  %idx.ext50 = sext i32 %add49 to i64
  %add.ptr51 = getelementptr inbounds %struct.sv*, %struct.sv** %50, i64 %idx.ext50
  %add.ptr52 = getelementptr inbounds %struct.sv*, %struct.sv** %add.ptr51, i64 -1
  store %struct.sv** %add.ptr52, %struct.sv*** %dst, align 8
  %54 = load i32, i32* %gimme, align 4
  %cmp53 = icmp eq i32 %54, 3
  br i1 %cmp53, label %if.then55, label %if.else

if.then55:                                        ; preds = %if.end47
  %55 = load i32, i32* %items, align 4
  store i32 %55, i32* %i, align 4
  br label %do.body56

do.body56:                                        ; preds = %if.then55
  %56 = load i64, i64* @PL_tmps_ix, align 8
  %57 = load i32, i32* %items, align 4
  %conv57 = sext i32 %57 to i64
  %add58 = add nsw i64 %56, %conv57
  store i64 %add58, i64* %eMiX, align 8
  %58 = load i64, i64* %eMiX, align 8
  %59 = load i64, i64* @PL_tmps_max, align 8
  %cmp59 = icmp sge i64 %58, %59
  br i1 %cmp59, label %cond.true61, label %cond.false62

cond.true61:                                      ; preds = %do.body56
  br i1 true, label %if.then63, label %if.end65

cond.false62:                                     ; preds = %do.body56
  br i1 false, label %if.then63, label %if.end65

if.then63:                                        ; preds = %cond.false62, %cond.true61
  %60 = load i64, i64* %eMiX, align 8
  %call64 = call i64 @Perl_tmps_grow_p(i64 %60)
  br label %if.end65

if.end65:                                         ; preds = %if.then63, %cond.false62, %cond.true61
  br label %do.end66

do.end66:                                         ; preds = %if.end65
  %61 = load i64, i64* @PL_tmps_floor, align 8
  %add67 = add nsw i64 %61, 1
  %conv68 = trunc i64 %add67 to i32
  store i32 %conv68, i32* %tmpsbase, align 4
  %62 = load %struct.sv**, %struct.sv*** @PL_tmps_stack, align 8
  %63 = load i32, i32* %tmpsbase, align 4
  %idx.ext69 = sext i32 %63 to i64
  %add.ptr70 = getelementptr inbounds %struct.sv*, %struct.sv** %62, i64 %idx.ext69
  %64 = load i32, i32* %items, align 4
  %idx.ext71 = sext i32 %64 to i64
  %add.ptr72 = getelementptr inbounds %struct.sv*, %struct.sv** %add.ptr70, i64 %idx.ext71
  %65 = bitcast %struct.sv** %add.ptr72 to i8*
  %66 = load %struct.sv**, %struct.sv*** @PL_tmps_stack, align 8
  %67 = load i32, i32* %tmpsbase, align 4
  %idx.ext73 = sext i32 %67 to i64
  %add.ptr74 = getelementptr inbounds %struct.sv*, %struct.sv** %66, i64 %idx.ext73
  %68 = bitcast %struct.sv** %add.ptr74 to i8*
  %69 = load i64, i64* @PL_tmps_ix, align 8
  %70 = load i64, i64* @PL_tmps_floor, align 8
  %sub75 = sub nsw i64 %69, %70
  %mul = mul i64 %sub75, 8
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %65, i8* align 1 %68, i64 %mul, i1 false)
  %71 = load i32, i32* %items, align 4
  %conv76 = sext i32 %71 to i64
  %72 = load i64, i64* @PL_tmps_ix, align 8
  %add77 = add nsw i64 %72, %conv76
  store i64 %add77, i64* @PL_tmps_ix, align 8
  br label %while.cond78

while.cond78:                                     ; preds = %if.end88, %do.end66
  %73 = load i32, i32* %i, align 4
  %dec79 = add nsw i32 %73, -1
  store i32 %dec79, i32* %i, align 4
  %cmp80 = icmp sgt i32 %73, 0
  br i1 %cmp80, label %while.body82, label %while.end93

while.body82:                                     ; preds = %while.cond78
  %74 = load %struct.sv**, %struct.sv*** %sp, align 8
  %incdec.ptr83 = getelementptr inbounds %struct.sv*, %struct.sv** %74, i32 -1
  store %struct.sv** %incdec.ptr83, %struct.sv*** %sp, align 8
  %75 = load %struct.sv*, %struct.sv** %74, align 8
  store %struct.sv* %75, %struct.sv** %sv, align 8
  %76 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_flags = getelementptr inbounds %struct.sv, %struct.sv* %76, i32 0, i32 2
  %77 = load i32, i32* %sv_flags, align 4
  %and84 = and i32 %77, 524288
  %tobool85 = icmp ne i32 %and84, 0
  br i1 %tobool85, label %if.end88, label %if.then86

if.then86:                                        ; preds = %while.body82
  %78 = load %struct.sv*, %struct.sv** %sv, align 8
  %call87 = call %struct.sv* @Perl_sv_mortalcopy_flags(%struct.sv* %78, i32 1538)
  store %struct.sv* %call87, %struct.sv** %sv, align 8
  br label %if.end88

if.end88:                                         ; preds = %if.then86, %while.body82
  %79 = load %struct.sv*, %struct.sv** %sv, align 8
  %80 = load %struct.sv**, %struct.sv*** %dst, align 8
  %incdec.ptr89 = getelementptr inbounds %struct.sv*, %struct.sv** %80, i32 -1
  store %struct.sv** %incdec.ptr89, %struct.sv*** %dst, align 8
  store %struct.sv* %79, %struct.sv** %80, align 8
  %81 = load %struct.sv*, %struct.sv** %sv, align 8
  %82 = bitcast %struct.sv* %81 to i8*
  %83 = bitcast i8* %82 to %struct.sv*
  %call90 = call %struct.sv* @S_SvREFCNT_inc(%struct.sv* %83)
  %84 = load %struct.sv**, %struct.sv*** @PL_tmps_stack, align 8
  %85 = load i32, i32* %tmpsbase, align 4
  %inc91 = add nsw i32 %85, 1
  store i32 %inc91, i32* %tmpsbase, align 4
  %idxprom = sext i32 %85 to i64
  %arrayidx92 = getelementptr inbounds %struct.sv*, %struct.sv** %84, i64 %idxprom
  store %struct.sv* %call90, %struct.sv** %arrayidx92, align 8
  br label %while.cond78

while.end93:                                      ; preds = %while.cond78
  %86 = load i32, i32* %items, align 4
  %conv94 = sext i32 %86 to i64
  %87 = load i64, i64* @PL_tmps_floor, align 8
  %add95 = add nsw i64 %87, %conv94
  store i64 %add95, i64* @PL_tmps_floor, align 8
  %88 = load i64, i64* @PL_tmps_ix, align 8
  %89 = load i64, i64* @PL_tmps_floor, align 8
  %cmp96 = icmp sgt i64 %88, %89
  br i1 %cmp96, label %if.then98, label %if.end99

if.then98:                                        ; preds = %while.end93
  call void @Perl_free_tmps()
  br label %if.end99

if.end99:                                         ; preds = %if.then98, %while.end93
  %90 = load i32, i32* %items, align 4
  store i32 %90, i32* %i, align 4
  br label %while.cond100

while.cond100:                                    ; preds = %while.body104, %if.end99
  %91 = load i32, i32* %i, align 4
  %dec101 = add nsw i32 %91, -1
  store i32 %dec101, i32* %i, align 4
  %cmp102 = icmp sgt i32 %91, 0
  br i1 %cmp102, label %while.body104, label %while.end109

while.body104:                                    ; preds = %while.cond100
  %92 = load %struct.sv**, %struct.sv*** @PL_tmps_stack, align 8
  %93 = load i32, i32* %tmpsbase, align 4
  %dec105 = add nsw i32 %93, -1
  store i32 %dec105, i32* %tmpsbase, align 4
  %idxprom106 = sext i32 %dec105 to i64
  %arrayidx107 = getelementptr inbounds %struct.sv*, %struct.sv** %92, i64 %idxprom106
  %94 = load %struct.sv*, %struct.sv** %arrayidx107, align 8
  %sv_flags108 = getelementptr inbounds %struct.sv, %struct.sv* %94, i32 0, i32 2
  %95 = load i32, i32* %sv_flags108, align 4
  %or = or i32 %95, 524288
  store i32 %or, i32* %sv_flags108, align 4
  br label %while.cond100

while.end109:                                     ; preds = %while.cond100
  br label %if.end122

if.else:                                          ; preds = %if.end47
  br label %while.cond110

while.cond110:                                    ; preds = %while.body114, %if.else
  %96 = load i32, i32* %items, align 4
  %dec111 = add nsw i32 %96, -1
  store i32 %dec111, i32* %items, align 4
  %cmp112 = icmp sgt i32 %96, 0
  br i1 %cmp112, label %while.body114, label %while.end117

while.body114:                                    ; preds = %while.cond110
  %97 = load %struct.sv**, %struct.sv*** %sp, align 8
  %incdec.ptr115 = getelementptr inbounds %struct.sv*, %struct.sv** %97, i32 -1
  store %struct.sv** %incdec.ptr115, %struct.sv*** %sp, align 8
  %98 = load %struct.sv*, %struct.sv** %97, align 8
  %99 = load %struct.sv**, %struct.sv*** %dst, align 8
  %incdec.ptr116 = getelementptr inbounds %struct.sv*, %struct.sv** %99, i32 -1
  store %struct.sv** %incdec.ptr116, %struct.sv*** %dst, align 8
  store %struct.sv* @PL_sv_undef, %struct.sv** %99, align 8
  br label %while.cond110

while.end117:                                     ; preds = %while.cond110
  %100 = load i64, i64* @PL_tmps_ix, align 8
  %101 = load i64, i64* @PL_tmps_floor, align 8
  %cmp118 = icmp sgt i64 %100, %101
  br i1 %cmp118, label %if.then120, label %if.end121

if.then120:                                       ; preds = %while.end117
  call void @Perl_free_tmps()
  br label %if.end121

if.end121:                                        ; preds = %if.then120, %while.end117
  br label %if.end122

if.end122:                                        ; preds = %if.end121, %while.end109
  br label %if.end128

if.else123:                                       ; preds = %land.lhs.true, %cond.end
  %102 = load i64, i64* @PL_tmps_ix, align 8
  %103 = load i64, i64* @PL_tmps_floor, align 8
  %cmp124 = icmp sgt i64 %102, %103
  br i1 %cmp124, label %if.then126, label %if.end127

if.then126:                                       ; preds = %if.else123
  call void @Perl_free_tmps()
  br label %if.end127

if.end127:                                        ; preds = %if.then126, %if.else123
  br label %if.end128

if.end128:                                        ; preds = %if.end127, %if.end122
  call void @Perl_pop_scope()
  %104 = load i32*, i32** @PL_markstack_ptr, align 8
  %arrayidx129 = getelementptr inbounds i32, i32* %104, i64 -1
  %105 = load i32, i32* %arrayidx129, align 4
  %106 = load i32*, i32** @PL_markstack_ptr, align 8
  %107 = load i32, i32* %106, align 4
  %cmp130 = icmp sgt i32 %105, %107
  br i1 %cmp130, label %if.then132, label %if.else195

if.then132:                                       ; preds = %if.end128
  %108 = load i32*, i32** @PL_markstack_ptr, align 8
  %incdec.ptr133 = getelementptr inbounds i32, i32* %108, i32 -1
  store i32* %incdec.ptr133, i32** @PL_markstack_ptr, align 8
  %109 = load i32, i32* %108, align 4
  call void @Perl_pop_scope()
  %110 = load i32*, i32** @PL_markstack_ptr, align 8
  %incdec.ptr134 = getelementptr inbounds i32, i32* %110, i32 -1
  store i32* %incdec.ptr134, i32** @PL_markstack_ptr, align 8
  %111 = load i32, i32* %110, align 4
  %112 = load i32*, i32** @PL_markstack_ptr, align 8
  %113 = load i32, i32* %112, align 4
  %dec135 = add nsw i32 %113, -1
  store i32 %dec135, i32* %112, align 4
  %114 = load i32*, i32** @PL_markstack_ptr, align 8
  %arrayidx136 = getelementptr inbounds i32, i32* %114, i64 -1
  %115 = load i32, i32* %arrayidx136, align 4
  %sub137 = sub nsw i32 %dec135, %115
  store i32 %sub137, i32* %items, align 4
  %116 = load i32*, i32** @PL_markstack_ptr, align 8
  %incdec.ptr138 = getelementptr inbounds i32, i32* %116, i32 -1
  store i32* %incdec.ptr138, i32** @PL_markstack_ptr, align 8
  %117 = load i32, i32* %116, align 4
  %118 = load %struct.sv**, %struct.sv*** @PL_stack_base, align 8
  %119 = load i32*, i32** @PL_markstack_ptr, align 8
  %incdec.ptr139 = getelementptr inbounds i32, i32* %119, i32 -1
  store i32* %incdec.ptr139, i32** @PL_markstack_ptr, align 8
  %120 = load i32, i32* %119, align 4
  %idx.ext140 = sext i32 %120 to i64
  %add.ptr141 = getelementptr inbounds %struct.sv*, %struct.sv** %118, i64 %idx.ext140
  store %struct.sv** %add.ptr141, %struct.sv*** %sp, align 8
  %121 = load i32, i32* %gimme, align 4
  %cmp142 = icmp eq i32 %121, 2
  br i1 %cmp142, label %if.then144, label %if.else187

if.then144:                                       ; preds = %if.then132
  %122 = load %struct.op*, %struct.op** @PL_op, align 8
  %op_private = getelementptr inbounds %struct.op, %struct.op* %122, i32 0, i32 6
  %123 = load i8, i8* %op_private, align 1
  %conv145 = zext i8 %123 to i32
  %and146 = and i32 %conv145, 2
  %tobool147 = icmp ne i32 %and146, 0
  br i1 %tobool147, label %if.then148, label %if.else153

if.then148:                                       ; preds = %if.then144
  %call150 = call %struct.sv* @Perl_sv_newmortal()
  store %struct.sv* %call150, %struct.sv** %sv149, align 8
  %124 = load %struct.sv*, %struct.sv** %sv149, align 8
  %125 = load i32, i32* %items, align 4
  %conv151 = sext i32 %125 to i64
  call void @Perl_sv_setiv(%struct.sv* %124, i64 %conv151)
  %126 = load %struct.sv*, %struct.sv** %sv149, align 8
  %127 = load %struct.sv**, %struct.sv*** %sp, align 8
  %incdec.ptr152 = getelementptr inbounds %struct.sv*, %struct.sv** %127, i32 1
  store %struct.sv** %incdec.ptr152, %struct.sv*** %sp, align 8
  store %struct.sv* %126, %struct.sv** %incdec.ptr152, align 8
  br label %if.end186

if.else153:                                       ; preds = %if.then144
  %128 = load %struct.sv**, %struct.sv*** @PL_curpad, align 8
  %129 = load %struct.op*, %struct.op** @PL_op, align 8
  %op_targ = getelementptr inbounds %struct.op, %struct.op* %129, i32 0, i32 3
  %130 = load i64, i64* %op_targ, align 8
  %arrayidx154 = getelementptr inbounds %struct.sv*, %struct.sv** %128, i64 %130
  %131 = load %struct.sv*, %struct.sv** %arrayidx154, align 8
  store %struct.sv* %131, %struct.sv** %targ, align 8
  br label %do.body155

do.body155:                                       ; preds = %if.else153
  %132 = load %struct.sv*, %struct.sv** %targ, align 8
  %133 = load i32, i32* %items, align 4
  %conv156 = sext i32 %133 to i64
  call void @Perl_sv_setiv(%struct.sv* %132, i64 %conv156)
  br label %do.body157

do.body157:                                       ; preds = %do.body155
  br label %do.body158

do.body158:                                       ; preds = %do.body157
  %134 = load %struct.sv*, %struct.sv** %targ, align 8
  %sv_flags159 = getelementptr inbounds %struct.sv, %struct.sv* %134, i32 0, i32 2
  %135 = load i32, i32* %sv_flags159, align 4
  %and160 = and i32 %135, 4194304
  %tobool161 = icmp ne i32 %and160, 0
  br i1 %tobool161, label %cond.true162, label %cond.false163

cond.true162:                                     ; preds = %do.body158
  br i1 true, label %if.then164, label %if.end166

cond.false163:                                    ; preds = %do.body158
  br i1 false, label %if.then164, label %if.end166

if.then164:                                       ; preds = %cond.false163, %cond.true162
  %136 = load %struct.sv*, %struct.sv** %targ, align 8
  %call165 = call i32 @Perl_mg_set(%struct.sv* %136)
  br label %if.end166

if.end166:                                        ; preds = %if.then164, %cond.false163, %cond.true162
  br label %do.end167

do.end167:                                        ; preds = %if.end166
  br label %do.body168

do.body168:                                       ; preds = %do.end167
  br label %do.body169

do.body169:                                       ; preds = %do.body168
  %137 = load %struct.sv**, %struct.sv*** @PL_stack_max, align 8
  %138 = load %struct.sv**, %struct.sv*** %sp, align 8
  %sub.ptr.lhs.cast170 = ptrtoint %struct.sv** %137 to i64
  %sub.ptr.rhs.cast171 = ptrtoint %struct.sv** %138 to i64
  %sub.ptr.sub172 = sub i64 %sub.ptr.lhs.cast170, %sub.ptr.rhs.cast171
  %sub.ptr.div173 = sdiv exact i64 %sub.ptr.sub172, 8
  %cmp174 = icmp slt i64 %sub.ptr.div173, 1
  br i1 %cmp174, label %cond.true176, label %cond.false177

cond.true176:                                     ; preds = %do.body169
  br i1 true, label %if.then178, label %if.end180

cond.false177:                                    ; preds = %do.body169
  br i1 false, label %if.then178, label %if.end180

if.then178:                                       ; preds = %cond.false177, %cond.true176
  %139 = load %struct.sv**, %struct.sv*** %sp, align 8
  %140 = load %struct.sv**, %struct.sv*** %sp, align 8
  %call179 = call %struct.sv** @Perl_stack_grow(%struct.sv** %139, %struct.sv** %140, i64 1)
  store %struct.sv** %call179, %struct.sv*** %sp, align 8
  %141 = load %struct.sv**, %struct.sv*** %sp, align 8
  br label %if.end180

if.end180:                                        ; preds = %if.then178, %cond.false177, %cond.true176
  br label %do.end181

do.end181:                                        ; preds = %if.end180
  %142 = load %struct.sv*, %struct.sv** %targ, align 8
  %143 = load %struct.sv**, %struct.sv*** %sp, align 8
  %incdec.ptr182 = getelementptr inbounds %struct.sv*, %struct.sv** %143, i32 1
  store %struct.sv** %incdec.ptr182, %struct.sv*** %sp, align 8
  store %struct.sv* %142, %struct.sv** %incdec.ptr182, align 8
  br label %do.end183

do.end183:                                        ; preds = %do.end181
  br label %do.end184

do.end184:                                        ; preds = %do.end183
  br label %do.end185

do.end185:                                        ; preds = %do.end184
  br label %if.end186

if.end186:                                        ; preds = %do.end185, %if.then148
  br label %if.end194

if.else187:                                       ; preds = %if.then132
  %144 = load i32, i32* %gimme, align 4
  %cmp188 = icmp eq i32 %144, 3
  br i1 %cmp188, label %if.then190, label %if.end193

if.then190:                                       ; preds = %if.else187
  %145 = load i32, i32* %items, align 4
  %146 = load %struct.sv**, %struct.sv*** %sp, align 8
  %idx.ext191 = sext i32 %145 to i64
  %add.ptr192 = getelementptr inbounds %struct.sv*, %struct.sv** %146, i64 %idx.ext191
  store %struct.sv** %add.ptr192, %struct.sv*** %sp, align 8
  br label %if.end193

if.end193:                                        ; preds = %if.then190, %if.else187
  br label %if.end194

if.end194:                                        ; preds = %if.end193, %if.end186
  %147 = load %struct.sv**, %struct.sv*** %sp, align 8
  store %struct.sv** %147, %struct.sv*** @PL_stack_sp, align 8
  %148 = load %struct.op*, %struct.op** @PL_op, align 8
  %op_next = getelementptr inbounds %struct.op, %struct.op* %148, i32 0, i32 0
  %149 = load %struct.op*, %struct.op** %op_next, align 8
  store %struct.op* %149, %struct.op** %retval, align 8
  br label %return

if.else195:                                       ; preds = %if.end128
  call void @Perl_push_scope()
  call void @Perl_save_vptr(i8* bitcast (%struct.pmop** @PL_curpm to i8*))
  %150 = load %struct.sv**, %struct.sv*** @PL_stack_base, align 8
  %151 = load i32*, i32** @PL_markstack_ptr, align 8
  %arrayidx197 = getelementptr inbounds i32, i32* %151, i64 -1
  %152 = load i32, i32* %arrayidx197, align 4
  %idxprom198 = sext i32 %152 to i64
  %arrayidx199 = getelementptr inbounds %struct.sv*, %struct.sv** %150, i64 %idxprom198
  %153 = load %struct.sv*, %struct.sv** %arrayidx199, align 8
  store %struct.sv* %153, %struct.sv** %src196, align 8
  %154 = load %struct.sv*, %struct.sv** %src196, align 8
  %sv_flags200 = getelementptr inbounds %struct.sv, %struct.sv* %154, i32 0, i32 2
  %155 = load i32, i32* %sv_flags200, align 4
  %and201 = and i32 %155, 131072
  %tobool202 = icmp ne i32 %and201, 0
  br i1 %tobool202, label %if.then203, label %if.end205

if.then203:                                       ; preds = %if.else195
  %156 = load %struct.sv*, %struct.sv** %src196, align 8
  %call204 = call %struct.sv* @Perl_sv_mortalcopy_flags(%struct.sv* %156, i32 1538)
  store %struct.sv* %call204, %struct.sv** %src196, align 8
  br label %if.end205

if.end205:                                        ; preds = %if.then203, %if.else195
  %157 = load %struct.sv*, %struct.sv** %src196, align 8
  %sv_flags206 = getelementptr inbounds %struct.sv, %struct.sv* %157, i32 0, i32 2
  %158 = load i32, i32* %sv_flags206, align 4
  %and207 = and i32 %158, -524289
  store i32 %and207, i32* %sv_flags206, align 4
  %159 = load %struct.op*, %struct.op** @PL_op, align 8
  %op_private208 = getelementptr inbounds %struct.op, %struct.op* %159, i32 0, i32 6
  %160 = load i8, i8* %op_private208, align 1
  %conv209 = zext i8 %160 to i32
  %and210 = and i32 %conv209, 2
  %tobool211 = icmp ne i32 %and210, 0
  br i1 %tobool211, label %if.then212, label %if.else215

if.then212:                                       ; preds = %if.end205
  %161 = load %struct.sv*, %struct.sv** %src196, align 8
  %162 = load %struct.sv**, %struct.sv*** @PL_curpad, align 8
  %163 = load %struct.op*, %struct.op** @PL_op, align 8
  %op_targ213 = getelementptr inbounds %struct.op, %struct.op* %163, i32 0, i32 3
  %164 = load i64, i64* %op_targ213, align 8
  %arrayidx214 = getelementptr inbounds %struct.sv*, %struct.sv** %162, i64 %164
  store %struct.sv* %161, %struct.sv** %arrayidx214, align 8
  br label %if.end222

if.else215:                                       ; preds = %if.end205
  %165 = load %struct.gv*, %struct.gv** @PL_defgv, align 8
  %sv_u = getelementptr inbounds %struct.gv, %struct.gv* %165, i32 0, i32 3
  %svu_gp = bitcast %union.anon.4* %sv_u to %struct.gp**
  %166 = load %struct.gp*, %struct.gp** %svu_gp, align 8
  %add.ptr216 = getelementptr inbounds %struct.gp, %struct.gp* %166, i64 0
  %gp_sv = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr216, i32 0, i32 0
  %167 = load %struct.sv*, %struct.sv** %gp_sv, align 8
  %168 = bitcast %struct.sv* %167 to i8*
  %169 = bitcast i8* %168 to %struct.sv*
  call void @S_SvREFCNT_dec(%struct.sv* %169)
  %170 = load %struct.sv*, %struct.sv** %src196, align 8
  %171 = bitcast %struct.sv* %170 to i8*
  %172 = bitcast i8* %171 to %struct.sv*
  %call217 = call %struct.sv* @S_SvREFCNT_inc(%struct.sv* %172)
  %173 = load %struct.gv*, %struct.gv** @PL_defgv, align 8
  %sv_u218 = getelementptr inbounds %struct.gv, %struct.gv* %173, i32 0, i32 3
  %svu_gp219 = bitcast %union.anon.4* %sv_u218 to %struct.gp**
  %174 = load %struct.gp*, %struct.gp** %svu_gp219, align 8
  %add.ptr220 = getelementptr inbounds %struct.gp, %struct.gp* %174, i64 0
  %gp_sv221 = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr220, i32 0, i32 0
  store %struct.sv* %call217, %struct.sv** %gp_sv221, align 8
  br label %if.end222

if.end222:                                        ; preds = %if.else215, %if.then212
  %175 = load %struct.sv**, %struct.sv*** %sp, align 8
  store %struct.sv** %175, %struct.sv*** @PL_stack_sp, align 8
  %176 = load %struct.op*, %struct.op** @PL_op, align 8
  %177 = bitcast %struct.op* %176 to %struct.logop*
  %op_other = getelementptr inbounds %struct.logop, %struct.logop* %177, i32 0, i32 8
  %178 = load %struct.op*, %struct.op** %op_other, align 8
  store %struct.op* %178, %struct.op** %retval, align 8
  br label %return

return:                                           ; preds = %if.end222, %if.end194
  %179 = load %struct.op*, %struct.op** %retval, align 8
  ret %struct.op* %179
}

declare dso_local i64 @Perl_tmps_grow_p(i64) #1

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #2

declare dso_local void @Perl_free_tmps() #1

declare dso_local void @Perl_pop_scope() #1

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.op* @Perl_pp_range() #0 {
entry:
  %retval = alloca %struct.op*, align 8
  %0 = load %struct.op*, %struct.op** @PL_op, align 8
  %op_flags = getelementptr inbounds %struct.op, %struct.op* %0, i32 0, i32 5
  %1 = load i8, i8* %op_flags, align 2
  %conv = zext i8 %1 to i32
  %and = and i32 %conv, 3
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %2 = load %struct.op*, %struct.op** @PL_op, align 8
  %op_flags1 = getelementptr inbounds %struct.op, %struct.op* %2, i32 0, i32 5
  %3 = load i8, i8* %op_flags1, align 2
  %conv2 = zext i8 %3 to i32
  %and3 = and i32 %conv2, 3
  br label %cond.end

cond.false:                                       ; preds = %entry
  %call = call i32 @Perl_block_gimme()
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %and3, %cond.true ], [ %call, %cond.false ]
  %cmp = icmp eq i32 %cond, 3
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %cond.end
  %4 = load %struct.op*, %struct.op** @PL_op, align 8
  %op_next = getelementptr inbounds %struct.op, %struct.op* %4, i32 0, i32 0
  %5 = load %struct.op*, %struct.op** %op_next, align 8
  store %struct.op* %5, %struct.op** %retval, align 8
  br label %return

if.end:                                           ; preds = %cond.end
  %6 = load %struct.sv**, %struct.sv*** @PL_curpad, align 8
  %7 = load %struct.op*, %struct.op** @PL_op, align 8
  %op_targ = getelementptr inbounds %struct.op, %struct.op* %7, i32 0, i32 3
  %8 = load i64, i64* %op_targ, align 8
  %arrayidx = getelementptr inbounds %struct.sv*, %struct.sv** %6, i64 %8
  %9 = load %struct.sv*, %struct.sv** %arrayidx, align 8
  store %struct.sv* %9, %struct.sv** @PL_Sv, align 8
  %10 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %tobool5 = icmp ne %struct.sv* %10, null
  br i1 %tobool5, label %cond.true6, label %cond.false7

cond.true6:                                       ; preds = %if.end
  br i1 true, label %land.rhs, label %land.end87

cond.false7:                                      ; preds = %if.end
  br i1 false, label %land.rhs, label %land.end87

land.rhs:                                         ; preds = %cond.false7, %cond.true6
  %11 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %sv_flags = getelementptr inbounds %struct.sv, %struct.sv* %11, i32 0, i32 2
  %12 = load i32, i32* %sv_flags, align 4
  %and8 = and i32 %12, 2097152
  %tobool9 = icmp ne i32 %and8, 0
  br i1 %tobool9, label %cond.true10, label %cond.false11

cond.true10:                                      ; preds = %land.rhs
  br i1 true, label %cond.true12, label %cond.false15

cond.false11:                                     ; preds = %land.rhs
  br i1 false, label %cond.true12, label %cond.false15

cond.true12:                                      ; preds = %cond.false11, %cond.true10
  %13 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %call13 = call zeroext i1 @Perl_sv_2bool_flags(%struct.sv* %13, i32 2)
  %conv14 = zext i1 %call13 to i32
  br label %cond.end84

cond.false15:                                     ; preds = %cond.false11, %cond.true10
  %14 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %sv_flags16 = getelementptr inbounds %struct.sv, %struct.sv* %14, i32 0, i32 2
  %15 = load i32, i32* %sv_flags16, align 4
  %and17 = and i32 %15, 65280
  %tobool18 = icmp ne i32 %and17, 0
  br i1 %tobool18, label %cond.false29, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %cond.false15
  %16 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %sv_flags19 = getelementptr inbounds %struct.sv, %struct.sv* %16, i32 0, i32 2
  %17 = load i32, i32* %sv_flags19, align 4
  %and20 = and i32 %17, 255
  %cmp21 = icmp eq i32 %and20, 8
  br i1 %cmp21, label %cond.false29, label %lor.lhs.false23

lor.lhs.false23:                                  ; preds = %lor.lhs.false
  %18 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %sv_flags24 = getelementptr inbounds %struct.sv, %struct.sv* %18, i32 0, i32 2
  %19 = load i32, i32* %sv_flags24, align 4
  %and25 = and i32 %19, 16826623
  %cmp26 = icmp eq i32 %and25, 16777226
  br i1 %cmp26, label %cond.false29, label %cond.true28

cond.true28:                                      ; preds = %lor.lhs.false23
  br label %cond.end82

cond.false29:                                     ; preds = %lor.lhs.false23, %lor.lhs.false, %cond.false15
  %20 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %sv_flags30 = getelementptr inbounds %struct.sv, %struct.sv* %20, i32 0, i32 2
  %21 = load i32, i32* %sv_flags30, align 4
  %and31 = and i32 %21, 1024
  %tobool32 = icmp ne i32 %and31, 0
  br i1 %tobool32, label %cond.true33, label %cond.false47

cond.true33:                                      ; preds = %cond.false29
  %22 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %sv_any = getelementptr inbounds %struct.sv, %struct.sv* %22, i32 0, i32 0
  %23 = load i8*, i8** %sv_any, align 8
  %24 = bitcast i8* %23 to %struct.xpv*
  %tobool34 = icmp ne %struct.xpv* %24, null
  br i1 %tobool34, label %land.rhs35, label %land.end46

land.rhs35:                                       ; preds = %cond.true33
  %25 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %sv_any36 = getelementptr inbounds %struct.sv, %struct.sv* %25, i32 0, i32 0
  %26 = load i8*, i8** %sv_any36, align 8
  %27 = bitcast i8* %26 to %struct.xpv*
  %xpv_cur = getelementptr inbounds %struct.xpv, %struct.xpv* %27, i32 0, i32 2
  %28 = load i64, i64* %xpv_cur, align 8
  %cmp37 = icmp ugt i64 %28, 1
  br i1 %cmp37, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %land.rhs35
  %29 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %sv_any39 = getelementptr inbounds %struct.sv, %struct.sv* %29, i32 0, i32 0
  %30 = load i8*, i8** %sv_any39, align 8
  %31 = bitcast i8* %30 to %struct.xpv*
  %xpv_cur40 = getelementptr inbounds %struct.xpv, %struct.xpv* %31, i32 0, i32 2
  %32 = load i64, i64* %xpv_cur40, align 8
  %tobool41 = icmp ne i64 %32, 0
  br i1 %tobool41, label %land.rhs42, label %land.end

land.rhs42:                                       ; preds = %lor.rhs
  %33 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %sv_u = getelementptr inbounds %struct.sv, %struct.sv* %33, i32 0, i32 3
  %svu_pv = bitcast %union.anon* %sv_u to i8**
  %34 = load i8*, i8** %svu_pv, align 8
  %35 = load i8, i8* %34, align 1
  %conv43 = sext i8 %35 to i32
  %cmp44 = icmp ne i32 %conv43, 48
  br label %land.end

land.end:                                         ; preds = %land.rhs42, %lor.rhs
  %36 = phi i1 [ false, %lor.rhs ], [ %cmp44, %land.rhs42 ]
  br label %lor.end

lor.end:                                          ; preds = %land.end, %land.rhs35
  %37 = phi i1 [ true, %land.rhs35 ], [ %36, %land.end ]
  br label %land.end46

land.end46:                                       ; preds = %lor.end, %cond.true33
  %38 = phi i1 [ false, %cond.true33 ], [ %37, %lor.end ]
  %land.ext = zext i1 %38 to i32
  br label %cond.end80

cond.false47:                                     ; preds = %cond.false29
  %39 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %sv_flags48 = getelementptr inbounds %struct.sv, %struct.sv* %39, i32 0, i32 2
  %40 = load i32, i32* %sv_flags48, align 4
  %and49 = and i32 %40, 768
  %tobool50 = icmp ne i32 %and49, 0
  br i1 %tobool50, label %cond.true51, label %cond.false75

cond.true51:                                      ; preds = %cond.false47
  %41 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %sv_flags52 = getelementptr inbounds %struct.sv, %struct.sv* %41, i32 0, i32 2
  %42 = load i32, i32* %sv_flags52, align 4
  %and53 = and i32 %42, 256
  %tobool54 = icmp ne i32 %and53, 0
  br i1 %tobool54, label %land.lhs.true, label %lor.rhs58

land.lhs.true:                                    ; preds = %cond.true51
  %43 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %sv_any55 = getelementptr inbounds %struct.sv, %struct.sv* %43, i32 0, i32 0
  %44 = load i8*, i8** %sv_any55, align 8
  %45 = bitcast i8* %44 to %struct.xpviv*
  %xiv_u = getelementptr inbounds %struct.xpviv, %struct.xpviv* %45, i32 0, i32 4
  %xivu_iv = bitcast %union._xivu* %xiv_u to i64*
  %46 = load i64, i64* %xivu_iv, align 8
  %cmp56 = icmp ne i64 %46, 0
  br i1 %cmp56, label %lor.end74, label %lor.rhs58

lor.rhs58:                                        ; preds = %land.lhs.true, %cond.true51
  %47 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %sv_flags59 = getelementptr inbounds %struct.sv, %struct.sv* %47, i32 0, i32 2
  %48 = load i32, i32* %sv_flags59, align 4
  %and60 = and i32 %48, 512
  %tobool61 = icmp ne i32 %and60, 0
  br i1 %tobool61, label %land.rhs62, label %land.end72

land.rhs62:                                       ; preds = %lor.rhs58
  %49 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %sv_any63 = getelementptr inbounds %struct.sv, %struct.sv* %49, i32 0, i32 0
  %50 = load i8*, i8** %sv_any63, align 8
  %51 = bitcast i8* %50 to %struct.xpvnv*
  %xnv_u = getelementptr inbounds %struct.xpvnv, %struct.xpvnv* %51, i32 0, i32 5
  %xnv_nv = bitcast %union._xnvu* %xnv_u to double*
  %52 = load double, double* %xnv_nv, align 8
  %cmp64 = fcmp uno double %52, %52
  br i1 %cmp64, label %lor.end71, label %lor.rhs65

lor.rhs65:                                        ; preds = %land.rhs62
  %53 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %sv_any66 = getelementptr inbounds %struct.sv, %struct.sv* %53, i32 0, i32 0
  %54 = load i8*, i8** %sv_any66, align 8
  %55 = bitcast i8* %54 to %struct.xpvnv*
  %xnv_u67 = getelementptr inbounds %struct.xpvnv, %struct.xpvnv* %55, i32 0, i32 5
  %xnv_nv68 = bitcast %union._xnvu* %xnv_u67 to double*
  %56 = load double, double* %xnv_nv68, align 8
  %cmp69 = fcmp une double %56, 0.000000e+00
  br label %lor.end71

lor.end71:                                        ; preds = %lor.rhs65, %land.rhs62
  %57 = phi i1 [ true, %land.rhs62 ], [ %cmp69, %lor.rhs65 ]
  br label %land.end72

land.end72:                                       ; preds = %lor.end71, %lor.rhs58
  %58 = phi i1 [ false, %lor.rhs58 ], [ %57, %lor.end71 ]
  br label %lor.end74

lor.end74:                                        ; preds = %land.end72, %land.lhs.true
  %59 = phi i1 [ true, %land.lhs.true ], [ %58, %land.end72 ]
  %lor.ext = zext i1 %59 to i32
  br label %cond.end78

cond.false75:                                     ; preds = %cond.false47
  %60 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %call76 = call zeroext i1 @Perl_sv_2bool_flags(%struct.sv* %60, i32 0)
  %conv77 = zext i1 %call76 to i32
  br label %cond.end78

cond.end78:                                       ; preds = %cond.false75, %lor.end74
  %cond79 = phi i32 [ %lor.ext, %lor.end74 ], [ %conv77, %cond.false75 ]
  br label %cond.end80

cond.end80:                                       ; preds = %cond.end78, %land.end46
  %cond81 = phi i32 [ %land.ext, %land.end46 ], [ %cond79, %cond.end78 ]
  br label %cond.end82

cond.end82:                                       ; preds = %cond.end80, %cond.true28
  %cond83 = phi i32 [ 0, %cond.true28 ], [ %cond81, %cond.end80 ]
  br label %cond.end84

cond.end84:                                       ; preds = %cond.end82, %cond.true12
  %cond85 = phi i32 [ %conv14, %cond.true12 ], [ %cond83, %cond.end82 ]
  %tobool86 = icmp ne i32 %cond85, 0
  br label %land.end87

land.end87:                                       ; preds = %cond.end84, %cond.false7, %cond.true6
  %61 = phi i1 [ false, %cond.false7 ], [ false, %cond.true6 ], [ %tobool86, %cond.end84 ]
  br i1 %61, label %if.then89, label %if.else

if.then89:                                        ; preds = %land.end87
  %62 = load %struct.op*, %struct.op** @PL_op, align 8
  %63 = bitcast %struct.op* %62 to %struct.logop*
  %op_other = getelementptr inbounds %struct.logop, %struct.logop* %63, i32 0, i32 8
  %64 = load %struct.op*, %struct.op** %op_other, align 8
  store %struct.op* %64, %struct.op** %retval, align 8
  br label %return

if.else:                                          ; preds = %land.end87
  %65 = load %struct.op*, %struct.op** @PL_op, align 8
  %op_next90 = getelementptr inbounds %struct.op, %struct.op* %65, i32 0, i32 0
  %66 = load %struct.op*, %struct.op** %op_next90, align 8
  store %struct.op* %66, %struct.op** %retval, align 8
  br label %return

return:                                           ; preds = %if.else, %if.then89, %if.then
  %67 = load %struct.op*, %struct.op** %retval, align 8
  ret %struct.op* %67
}

declare dso_local zeroext i1 @Perl_sv_2bool_flags(%struct.sv*, i32) #1

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.op* @Perl_pp_flip() #0 {
entry:
  %retval = alloca %struct.op*, align 8
  %sp = alloca %struct.sv**, align 8
  %sv = alloca %struct.sv*, align 8
  %targ = alloca %struct.sv*, align 8
  %flip = alloca i32, align 4
  %gv = alloca %struct.gv*, align 8
  %0 = load %struct.sv**, %struct.sv*** @PL_stack_sp, align 8
  store %struct.sv** %0, %struct.sv*** %sp, align 8
  %1 = load %struct.op*, %struct.op** @PL_op, align 8
  %op_flags = getelementptr inbounds %struct.op, %struct.op* %1, i32 0, i32 5
  %2 = load i8, i8* %op_flags, align 2
  %conv = zext i8 %2 to i32
  %and = and i32 %conv, 3
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %3 = load %struct.op*, %struct.op** @PL_op, align 8
  %op_flags1 = getelementptr inbounds %struct.op, %struct.op* %3, i32 0, i32 5
  %4 = load i8, i8* %op_flags1, align 2
  %conv2 = zext i8 %4 to i32
  %and3 = and i32 %conv2, 3
  br label %cond.end

cond.false:                                       ; preds = %entry
  %call = call i32 @Perl_block_gimme()
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %and3, %cond.true ], [ %call, %cond.false ]
  %cmp = icmp eq i32 %cond, 3
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %cond.end
  %5 = load %struct.sv**, %struct.sv*** %sp, align 8
  store %struct.sv** %5, %struct.sv*** @PL_stack_sp, align 8
  %6 = load %struct.op*, %struct.op** @PL_op, align 8
  %7 = bitcast %struct.op* %6 to %struct.unop*
  %op_first = getelementptr inbounds %struct.unop, %struct.unop* %7, i32 0, i32 7
  %8 = load %struct.op*, %struct.op** %op_first, align 8
  %9 = bitcast %struct.op* %8 to %struct.logop*
  %op_other = getelementptr inbounds %struct.logop, %struct.logop* %9, i32 0, i32 8
  %10 = load %struct.op*, %struct.op** %op_other, align 8
  store %struct.op* %10, %struct.op** %retval, align 8
  br label %return

if.else:                                          ; preds = %cond.end
  %11 = load %struct.sv**, %struct.sv*** %sp, align 8
  %12 = load %struct.sv*, %struct.sv** %11, align 8
  store %struct.sv* %12, %struct.sv** %sv, align 8
  %13 = load %struct.sv**, %struct.sv*** @PL_curpad, align 8
  %14 = load %struct.op*, %struct.op** @PL_op, align 8
  %op_targ = getelementptr inbounds %struct.op, %struct.op* %14, i32 0, i32 3
  %15 = load i64, i64* %op_targ, align 8
  %arrayidx = getelementptr inbounds %struct.sv*, %struct.sv** %13, i64 %15
  %16 = load %struct.sv*, %struct.sv** %arrayidx, align 8
  store %struct.sv* %16, %struct.sv** %targ, align 8
  store i32 0, i32* %flip, align 4
  %17 = load %struct.op*, %struct.op** @PL_op, align 8
  %op_private = getelementptr inbounds %struct.op, %struct.op* %17, i32 0, i32 6
  %18 = load i8, i8* %op_private, align 1
  %conv5 = zext i8 %18 to i32
  %and6 = and i32 %conv5, 64
  %tobool7 = icmp ne i32 %and6, 0
  br i1 %tobool7, label %if.then8, label %if.else92

if.then8:                                         ; preds = %if.else
  %19 = load %struct.gv*, %struct.gv** @PL_last_in_gv, align 8
  %tobool9 = icmp ne %struct.gv* %19, null
  br i1 %tobool9, label %land.lhs.true, label %cond.false24

land.lhs.true:                                    ; preds = %if.then8
  %20 = load %struct.gv*, %struct.gv** @PL_last_in_gv, align 8
  %21 = bitcast %struct.gv* %20 to %struct.sv*
  %sv_flags = getelementptr inbounds %struct.sv, %struct.sv* %21, i32 0, i32 2
  %22 = load i32, i32* %sv_flags, align 4
  %and10 = and i32 %22, 255
  %cmp11 = icmp eq i32 %and10, 9
  br i1 %cmp11, label %land.lhs.true17, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true
  %23 = load %struct.gv*, %struct.gv** @PL_last_in_gv, align 8
  %24 = bitcast %struct.gv* %23 to %struct.sv*
  %sv_flags13 = getelementptr inbounds %struct.sv, %struct.sv* %24, i32 0, i32 2
  %25 = load i32, i32* %sv_flags13, align 4
  %and14 = and i32 %25, 255
  %cmp15 = icmp eq i32 %and14, 10
  br i1 %cmp15, label %land.lhs.true17, label %cond.false24

land.lhs.true17:                                  ; preds = %lor.lhs.false, %land.lhs.true
  %26 = load %struct.gv*, %struct.gv** @PL_last_in_gv, align 8
  %sv_u = getelementptr inbounds %struct.gv, %struct.gv* %26, i32 0, i32 3
  %svu_gp = bitcast %union.anon.4* %sv_u to %struct.gp**
  %27 = load %struct.gp*, %struct.gp** %svu_gp, align 8
  %add.ptr = getelementptr inbounds %struct.gp, %struct.gp* %27, i64 0
  %tobool18 = icmp ne %struct.gp* %add.ptr, null
  br i1 %tobool18, label %cond.true19, label %cond.false24

cond.true19:                                      ; preds = %land.lhs.true17
  %28 = load %struct.gv*, %struct.gv** @PL_last_in_gv, align 8
  %sv_u20 = getelementptr inbounds %struct.gv, %struct.gv* %28, i32 0, i32 3
  %svu_gp21 = bitcast %union.anon.4* %sv_u20 to %struct.gp**
  %29 = load %struct.gp*, %struct.gp** %svu_gp21, align 8
  %add.ptr22 = getelementptr inbounds %struct.gp, %struct.gp* %29, i64 0
  %gp_io = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr22, i32 0, i32 1
  %30 = load %struct.io*, %struct.io** %gp_io, align 8
  %tobool23 = icmp ne %struct.io* %30, null
  br i1 %tobool23, label %if.then25, label %if.else44

cond.false24:                                     ; preds = %land.lhs.true17, %lor.lhs.false, %if.then8
  br i1 false, label %if.then25, label %if.else44

if.then25:                                        ; preds = %cond.false24, %cond.true19
  %31 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_flags26 = getelementptr inbounds %struct.sv, %struct.sv* %31, i32 0, i32 2
  %32 = load i32, i32* %sv_flags26, align 4
  %and27 = and i32 %32, 2097408
  %cmp28 = icmp eq i32 %and27, 256
  br i1 %cmp28, label %cond.true30, label %cond.false31

cond.true30:                                      ; preds = %if.then25
  %33 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_any = getelementptr inbounds %struct.sv, %struct.sv* %33, i32 0, i32 0
  %34 = load i8*, i8** %sv_any, align 8
  %35 = bitcast i8* %34 to %struct.xpviv*
  %xiv_u = getelementptr inbounds %struct.xpviv, %struct.xpviv* %35, i32 0, i32 4
  %xivu_iv = bitcast %union._xivu* %xiv_u to i64*
  %36 = load i64, i64* %xivu_iv, align 8
  br label %cond.end33

cond.false31:                                     ; preds = %if.then25
  %37 = load %struct.sv*, %struct.sv** %sv, align 8
  %call32 = call i64 @Perl_sv_2iv_flags(%struct.sv* %37, i32 2)
  br label %cond.end33

cond.end33:                                       ; preds = %cond.false31, %cond.true30
  %cond34 = phi i64 [ %36, %cond.true30 ], [ %call32, %cond.false31 ]
  %38 = load %struct.gv*, %struct.gv** @PL_last_in_gv, align 8
  %sv_u35 = getelementptr inbounds %struct.gv, %struct.gv* %38, i32 0, i32 3
  %svu_gp36 = bitcast %union.anon.4* %sv_u35 to %struct.gp**
  %39 = load %struct.gp*, %struct.gp** %svu_gp36, align 8
  %add.ptr37 = getelementptr inbounds %struct.gp, %struct.gp* %39, i64 0
  %gp_io38 = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr37, i32 0, i32 1
  %40 = load %struct.io*, %struct.io** %gp_io38, align 8
  %sv_any39 = getelementptr inbounds %struct.io, %struct.io* %40, i32 0, i32 0
  %41 = load %struct.xpvio*, %struct.xpvio** %sv_any39, align 8
  %xiv_u40 = getelementptr inbounds %struct.xpvio, %struct.xpvio* %41, i32 0, i32 4
  %xivu_iv41 = bitcast %union._xivu* %xiv_u40 to i64*
  %42 = load i64, i64* %xivu_iv41, align 8
  %cmp42 = icmp eq i64 %cond34, %42
  %conv43 = zext i1 %cmp42 to i32
  store i32 %conv43, i32* %flip, align 4
  br label %if.end91

if.else44:                                        ; preds = %cond.false24, %cond.true19
  %call45 = call %struct.gv* @Perl_gv_fetchpvn_flags(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7, i64 0, i64 0), i64 1, i32 129, i32 3)
  store %struct.gv* %call45, %struct.gv** %gv, align 8
  %43 = load %struct.gv*, %struct.gv** %gv, align 8
  %tobool46 = icmp ne %struct.gv* %43, null
  br i1 %tobool46, label %land.lhs.true47, label %if.end

land.lhs.true47:                                  ; preds = %if.else44
  %44 = load %struct.gv*, %struct.gv** %gv, align 8
  %sv_u48 = getelementptr inbounds %struct.gv, %struct.gv* %44, i32 0, i32 3
  %svu_gp49 = bitcast %union.anon.4* %sv_u48 to %struct.gp**
  %45 = load %struct.gp*, %struct.gp** %svu_gp49, align 8
  %add.ptr50 = getelementptr inbounds %struct.gp, %struct.gp* %45, i64 0
  %gp_sv = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr50, i32 0, i32 0
  %46 = load %struct.sv*, %struct.sv** %gp_sv, align 8
  %tobool51 = icmp ne %struct.sv* %46, null
  br i1 %tobool51, label %if.then52, label %if.end

if.then52:                                        ; preds = %land.lhs.true47
  %47 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_flags53 = getelementptr inbounds %struct.sv, %struct.sv* %47, i32 0, i32 2
  %48 = load i32, i32* %sv_flags53, align 4
  %and54 = and i32 %48, 2097408
  %cmp55 = icmp eq i32 %and54, 256
  br i1 %cmp55, label %cond.true57, label %cond.false61

cond.true57:                                      ; preds = %if.then52
  %49 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_any58 = getelementptr inbounds %struct.sv, %struct.sv* %49, i32 0, i32 0
  %50 = load i8*, i8** %sv_any58, align 8
  %51 = bitcast i8* %50 to %struct.xpviv*
  %xiv_u59 = getelementptr inbounds %struct.xpviv, %struct.xpviv* %51, i32 0, i32 4
  %xivu_iv60 = bitcast %union._xivu* %xiv_u59 to i64*
  %52 = load i64, i64* %xivu_iv60, align 8
  br label %cond.end63

cond.false61:                                     ; preds = %if.then52
  %53 = load %struct.sv*, %struct.sv** %sv, align 8
  %call62 = call i64 @Perl_sv_2iv_flags(%struct.sv* %53, i32 2)
  br label %cond.end63

cond.end63:                                       ; preds = %cond.false61, %cond.true57
  %cond64 = phi i64 [ %52, %cond.true57 ], [ %call62, %cond.false61 ]
  %54 = load %struct.gv*, %struct.gv** %gv, align 8
  %sv_u65 = getelementptr inbounds %struct.gv, %struct.gv* %54, i32 0, i32 3
  %svu_gp66 = bitcast %union.anon.4* %sv_u65 to %struct.gp**
  %55 = load %struct.gp*, %struct.gp** %svu_gp66, align 8
  %add.ptr67 = getelementptr inbounds %struct.gp, %struct.gp* %55, i64 0
  %gp_sv68 = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr67, i32 0, i32 0
  %56 = load %struct.sv*, %struct.sv** %gp_sv68, align 8
  %sv_flags69 = getelementptr inbounds %struct.sv, %struct.sv* %56, i32 0, i32 2
  %57 = load i32, i32* %sv_flags69, align 4
  %and70 = and i32 %57, 2097408
  %cmp71 = icmp eq i32 %and70, 256
  br i1 %cmp71, label %cond.true73, label %cond.false81

cond.true73:                                      ; preds = %cond.end63
  %58 = load %struct.gv*, %struct.gv** %gv, align 8
  %sv_u74 = getelementptr inbounds %struct.gv, %struct.gv* %58, i32 0, i32 3
  %svu_gp75 = bitcast %union.anon.4* %sv_u74 to %struct.gp**
  %59 = load %struct.gp*, %struct.gp** %svu_gp75, align 8
  %add.ptr76 = getelementptr inbounds %struct.gp, %struct.gp* %59, i64 0
  %gp_sv77 = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr76, i32 0, i32 0
  %60 = load %struct.sv*, %struct.sv** %gp_sv77, align 8
  %sv_any78 = getelementptr inbounds %struct.sv, %struct.sv* %60, i32 0, i32 0
  %61 = load i8*, i8** %sv_any78, align 8
  %62 = bitcast i8* %61 to %struct.xpviv*
  %xiv_u79 = getelementptr inbounds %struct.xpviv, %struct.xpviv* %62, i32 0, i32 4
  %xivu_iv80 = bitcast %union._xivu* %xiv_u79 to i64*
  %63 = load i64, i64* %xivu_iv80, align 8
  br label %cond.end87

cond.false81:                                     ; preds = %cond.end63
  %64 = load %struct.gv*, %struct.gv** %gv, align 8
  %sv_u82 = getelementptr inbounds %struct.gv, %struct.gv* %64, i32 0, i32 3
  %svu_gp83 = bitcast %union.anon.4* %sv_u82 to %struct.gp**
  %65 = load %struct.gp*, %struct.gp** %svu_gp83, align 8
  %add.ptr84 = getelementptr inbounds %struct.gp, %struct.gp* %65, i64 0
  %gp_sv85 = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr84, i32 0, i32 0
  %66 = load %struct.sv*, %struct.sv** %gp_sv85, align 8
  %call86 = call i64 @Perl_sv_2iv_flags(%struct.sv* %66, i32 2)
  br label %cond.end87

cond.end87:                                       ; preds = %cond.false81, %cond.true73
  %cond88 = phi i64 [ %63, %cond.true73 ], [ %call86, %cond.false81 ]
  %cmp89 = icmp eq i64 %cond64, %cond88
  %conv90 = zext i1 %cmp89 to i32
  store i32 %conv90, i32* %flip, align 4
  br label %if.end

if.end:                                           ; preds = %cond.end87, %land.lhs.true47, %if.else44
  br label %if.end91

if.end91:                                         ; preds = %if.end, %cond.end33
  br label %if.end184

if.else92:                                        ; preds = %if.else
  %67 = load %struct.sv*, %struct.sv** %sv, align 8
  %tobool93 = icmp ne %struct.sv* %67, null
  br i1 %tobool93, label %cond.true94, label %cond.false95

cond.true94:                                      ; preds = %if.else92
  br i1 true, label %land.rhs, label %land.end182

cond.false95:                                     ; preds = %if.else92
  br i1 false, label %land.rhs, label %land.end182

land.rhs:                                         ; preds = %cond.false95, %cond.true94
  %68 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_flags96 = getelementptr inbounds %struct.sv, %struct.sv* %68, i32 0, i32 2
  %69 = load i32, i32* %sv_flags96, align 4
  %and97 = and i32 %69, 2097152
  %tobool98 = icmp ne i32 %and97, 0
  br i1 %tobool98, label %cond.true99, label %cond.false100

cond.true99:                                      ; preds = %land.rhs
  br i1 true, label %cond.true101, label %cond.false104

cond.false100:                                    ; preds = %land.rhs
  br i1 false, label %cond.true101, label %cond.false104

cond.true101:                                     ; preds = %cond.false100, %cond.true99
  %70 = load %struct.sv*, %struct.sv** %sv, align 8
  %call102 = call zeroext i1 @Perl_sv_2bool_flags(%struct.sv* %70, i32 2)
  %conv103 = zext i1 %call102 to i32
  br label %cond.end179

cond.false104:                                    ; preds = %cond.false100, %cond.true99
  %71 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_flags105 = getelementptr inbounds %struct.sv, %struct.sv* %71, i32 0, i32 2
  %72 = load i32, i32* %sv_flags105, align 4
  %and106 = and i32 %72, 65280
  %tobool107 = icmp ne i32 %and106, 0
  br i1 %tobool107, label %cond.false119, label %lor.lhs.false108

lor.lhs.false108:                                 ; preds = %cond.false104
  %73 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_flags109 = getelementptr inbounds %struct.sv, %struct.sv* %73, i32 0, i32 2
  %74 = load i32, i32* %sv_flags109, align 4
  %and110 = and i32 %74, 255
  %cmp111 = icmp eq i32 %and110, 8
  br i1 %cmp111, label %cond.false119, label %lor.lhs.false113

lor.lhs.false113:                                 ; preds = %lor.lhs.false108
  %75 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_flags114 = getelementptr inbounds %struct.sv, %struct.sv* %75, i32 0, i32 2
  %76 = load i32, i32* %sv_flags114, align 4
  %and115 = and i32 %76, 16826623
  %cmp116 = icmp eq i32 %and115, 16777226
  br i1 %cmp116, label %cond.false119, label %cond.true118

cond.true118:                                     ; preds = %lor.lhs.false113
  br label %cond.end177

cond.false119:                                    ; preds = %lor.lhs.false113, %lor.lhs.false108, %cond.false104
  %77 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_flags120 = getelementptr inbounds %struct.sv, %struct.sv* %77, i32 0, i32 2
  %78 = load i32, i32* %sv_flags120, align 4
  %and121 = and i32 %78, 1024
  %tobool122 = icmp ne i32 %and121, 0
  br i1 %tobool122, label %cond.true123, label %cond.false139

cond.true123:                                     ; preds = %cond.false119
  %79 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_any124 = getelementptr inbounds %struct.sv, %struct.sv* %79, i32 0, i32 0
  %80 = load i8*, i8** %sv_any124, align 8
  %81 = bitcast i8* %80 to %struct.xpv*
  %tobool125 = icmp ne %struct.xpv* %81, null
  br i1 %tobool125, label %land.rhs126, label %land.end138

land.rhs126:                                      ; preds = %cond.true123
  %82 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_any127 = getelementptr inbounds %struct.sv, %struct.sv* %82, i32 0, i32 0
  %83 = load i8*, i8** %sv_any127, align 8
  %84 = bitcast i8* %83 to %struct.xpv*
  %xpv_cur = getelementptr inbounds %struct.xpv, %struct.xpv* %84, i32 0, i32 2
  %85 = load i64, i64* %xpv_cur, align 8
  %cmp128 = icmp ugt i64 %85, 1
  br i1 %cmp128, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %land.rhs126
  %86 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_any130 = getelementptr inbounds %struct.sv, %struct.sv* %86, i32 0, i32 0
  %87 = load i8*, i8** %sv_any130, align 8
  %88 = bitcast i8* %87 to %struct.xpv*
  %xpv_cur131 = getelementptr inbounds %struct.xpv, %struct.xpv* %88, i32 0, i32 2
  %89 = load i64, i64* %xpv_cur131, align 8
  %tobool132 = icmp ne i64 %89, 0
  br i1 %tobool132, label %land.rhs133, label %land.end

land.rhs133:                                      ; preds = %lor.rhs
  %90 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_u134 = getelementptr inbounds %struct.sv, %struct.sv* %90, i32 0, i32 3
  %svu_pv = bitcast %union.anon* %sv_u134 to i8**
  %91 = load i8*, i8** %svu_pv, align 8
  %92 = load i8, i8* %91, align 1
  %conv135 = sext i8 %92 to i32
  %cmp136 = icmp ne i32 %conv135, 48
  br label %land.end

land.end:                                         ; preds = %land.rhs133, %lor.rhs
  %93 = phi i1 [ false, %lor.rhs ], [ %cmp136, %land.rhs133 ]
  br label %lor.end

lor.end:                                          ; preds = %land.end, %land.rhs126
  %94 = phi i1 [ true, %land.rhs126 ], [ %93, %land.end ]
  br label %land.end138

land.end138:                                      ; preds = %lor.end, %cond.true123
  %95 = phi i1 [ false, %cond.true123 ], [ %94, %lor.end ]
  %land.ext = zext i1 %95 to i32
  br label %cond.end175

cond.false139:                                    ; preds = %cond.false119
  %96 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_flags140 = getelementptr inbounds %struct.sv, %struct.sv* %96, i32 0, i32 2
  %97 = load i32, i32* %sv_flags140, align 4
  %and141 = and i32 %97, 768
  %tobool142 = icmp ne i32 %and141, 0
  br i1 %tobool142, label %cond.true143, label %cond.false170

cond.true143:                                     ; preds = %cond.false139
  %98 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_flags144 = getelementptr inbounds %struct.sv, %struct.sv* %98, i32 0, i32 2
  %99 = load i32, i32* %sv_flags144, align 4
  %and145 = and i32 %99, 256
  %tobool146 = icmp ne i32 %and145, 0
  br i1 %tobool146, label %land.lhs.true147, label %lor.rhs153

land.lhs.true147:                                 ; preds = %cond.true143
  %100 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_any148 = getelementptr inbounds %struct.sv, %struct.sv* %100, i32 0, i32 0
  %101 = load i8*, i8** %sv_any148, align 8
  %102 = bitcast i8* %101 to %struct.xpviv*
  %xiv_u149 = getelementptr inbounds %struct.xpviv, %struct.xpviv* %102, i32 0, i32 4
  %xivu_iv150 = bitcast %union._xivu* %xiv_u149 to i64*
  %103 = load i64, i64* %xivu_iv150, align 8
  %cmp151 = icmp ne i64 %103, 0
  br i1 %cmp151, label %lor.end169, label %lor.rhs153

lor.rhs153:                                       ; preds = %land.lhs.true147, %cond.true143
  %104 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_flags154 = getelementptr inbounds %struct.sv, %struct.sv* %104, i32 0, i32 2
  %105 = load i32, i32* %sv_flags154, align 4
  %and155 = and i32 %105, 512
  %tobool156 = icmp ne i32 %and155, 0
  br i1 %tobool156, label %land.rhs157, label %land.end167

land.rhs157:                                      ; preds = %lor.rhs153
  %106 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_any158 = getelementptr inbounds %struct.sv, %struct.sv* %106, i32 0, i32 0
  %107 = load i8*, i8** %sv_any158, align 8
  %108 = bitcast i8* %107 to %struct.xpvnv*
  %xnv_u = getelementptr inbounds %struct.xpvnv, %struct.xpvnv* %108, i32 0, i32 5
  %xnv_nv = bitcast %union._xnvu* %xnv_u to double*
  %109 = load double, double* %xnv_nv, align 8
  %cmp159 = fcmp uno double %109, %109
  br i1 %cmp159, label %lor.end166, label %lor.rhs160

lor.rhs160:                                       ; preds = %land.rhs157
  %110 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_any161 = getelementptr inbounds %struct.sv, %struct.sv* %110, i32 0, i32 0
  %111 = load i8*, i8** %sv_any161, align 8
  %112 = bitcast i8* %111 to %struct.xpvnv*
  %xnv_u162 = getelementptr inbounds %struct.xpvnv, %struct.xpvnv* %112, i32 0, i32 5
  %xnv_nv163 = bitcast %union._xnvu* %xnv_u162 to double*
  %113 = load double, double* %xnv_nv163, align 8
  %cmp164 = fcmp une double %113, 0.000000e+00
  br label %lor.end166

lor.end166:                                       ; preds = %lor.rhs160, %land.rhs157
  %114 = phi i1 [ true, %land.rhs157 ], [ %cmp164, %lor.rhs160 ]
  br label %land.end167

land.end167:                                      ; preds = %lor.end166, %lor.rhs153
  %115 = phi i1 [ false, %lor.rhs153 ], [ %114, %lor.end166 ]
  br label %lor.end169

lor.end169:                                       ; preds = %land.end167, %land.lhs.true147
  %116 = phi i1 [ true, %land.lhs.true147 ], [ %115, %land.end167 ]
  %lor.ext = zext i1 %116 to i32
  br label %cond.end173

cond.false170:                                    ; preds = %cond.false139
  %117 = load %struct.sv*, %struct.sv** %sv, align 8
  %call171 = call zeroext i1 @Perl_sv_2bool_flags(%struct.sv* %117, i32 0)
  %conv172 = zext i1 %call171 to i32
  br label %cond.end173

cond.end173:                                      ; preds = %cond.false170, %lor.end169
  %cond174 = phi i32 [ %lor.ext, %lor.end169 ], [ %conv172, %cond.false170 ]
  br label %cond.end175

cond.end175:                                      ; preds = %cond.end173, %land.end138
  %cond176 = phi i32 [ %land.ext, %land.end138 ], [ %cond174, %cond.end173 ]
  br label %cond.end177

cond.end177:                                      ; preds = %cond.end175, %cond.true118
  %cond178 = phi i32 [ 0, %cond.true118 ], [ %cond176, %cond.end175 ]
  br label %cond.end179

cond.end179:                                      ; preds = %cond.end177, %cond.true101
  %cond180 = phi i32 [ %conv103, %cond.true101 ], [ %cond178, %cond.end177 ]
  %tobool181 = icmp ne i32 %cond180, 0
  br label %land.end182

land.end182:                                      ; preds = %cond.end179, %cond.false95, %cond.true94
  %118 = phi i1 [ false, %cond.false95 ], [ false, %cond.true94 ], [ %tobool181, %cond.end179 ]
  %land.ext183 = zext i1 %118 to i32
  store i32 %land.ext183, i32* %flip, align 4
  br label %if.end184

if.end184:                                        ; preds = %land.end182, %if.end91
  %119 = load i32, i32* %flip, align 4
  %tobool185 = icmp ne i32 %119, 0
  br i1 %tobool185, label %if.then186, label %if.end198

if.then186:                                       ; preds = %if.end184
  %120 = load %struct.sv**, %struct.sv*** @PL_curpad, align 8
  %121 = load %struct.op*, %struct.op** @PL_op, align 8
  %122 = bitcast %struct.op* %121 to %struct.unop*
  %op_first187 = getelementptr inbounds %struct.unop, %struct.unop* %122, i32 0, i32 7
  %123 = load %struct.op*, %struct.op** %op_first187, align 8
  %op_targ188 = getelementptr inbounds %struct.op, %struct.op* %123, i32 0, i32 3
  %124 = load i64, i64* %op_targ188, align 8
  %arrayidx189 = getelementptr inbounds %struct.sv*, %struct.sv** %120, i64 %124
  %125 = load %struct.sv*, %struct.sv** %arrayidx189, align 8
  call void @Perl_sv_setiv(%struct.sv* %125, i64 1)
  %126 = load %struct.op*, %struct.op** @PL_op, align 8
  %op_flags190 = getelementptr inbounds %struct.op, %struct.op* %126, i32 0, i32 5
  %127 = load i8, i8* %op_flags190, align 2
  %conv191 = zext i8 %127 to i32
  %and192 = and i32 %conv191, 128
  %tobool193 = icmp ne i32 %and192, 0
  br i1 %tobool193, label %if.then194, label %if.else195

if.then194:                                       ; preds = %if.then186
  %128 = load %struct.sv*, %struct.sv** %targ, align 8
  call void @Perl_sv_setiv(%struct.sv* %128, i64 1)
  %129 = load %struct.sv*, %struct.sv** %targ, align 8
  %130 = load %struct.sv**, %struct.sv*** %sp, align 8
  store %struct.sv* %129, %struct.sv** %130, align 8
  %131 = load %struct.sv**, %struct.sv*** %sp, align 8
  store %struct.sv** %131, %struct.sv*** @PL_stack_sp, align 8
  %132 = load %struct.op*, %struct.op** @PL_op, align 8
  %op_next = getelementptr inbounds %struct.op, %struct.op* %132, i32 0, i32 0
  %133 = load %struct.op*, %struct.op** %op_next, align 8
  store %struct.op* %133, %struct.op** %retval, align 8
  br label %return

if.else195:                                       ; preds = %if.then186
  %134 = load %struct.sv*, %struct.sv** %targ, align 8
  call void @Perl_sv_setiv(%struct.sv* %134, i64 0)
  %135 = load %struct.sv**, %struct.sv*** %sp, align 8
  %incdec.ptr = getelementptr inbounds %struct.sv*, %struct.sv** %135, i32 -1
  store %struct.sv** %incdec.ptr, %struct.sv*** %sp, align 8
  %136 = load %struct.sv**, %struct.sv*** %sp, align 8
  store %struct.sv** %136, %struct.sv*** @PL_stack_sp, align 8
  %137 = load %struct.op*, %struct.op** @PL_op, align 8
  %138 = bitcast %struct.op* %137 to %struct.unop*
  %op_first196 = getelementptr inbounds %struct.unop, %struct.unop* %138, i32 0, i32 7
  %139 = load %struct.op*, %struct.op** %op_first196, align 8
  %140 = bitcast %struct.op* %139 to %struct.logop*
  %op_other197 = getelementptr inbounds %struct.logop, %struct.logop* %140, i32 0, i32 8
  %141 = load %struct.op*, %struct.op** %op_other197, align 8
  store %struct.op* %141, %struct.op** %retval, align 8
  br label %return

if.end198:                                        ; preds = %if.end184
  %142 = load %struct.sv*, %struct.sv** %targ, align 8
  call void @Perl_sv_setpvn(%struct.sv* %142, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.8, i64 0, i64 0), i64 0)
  %143 = load %struct.sv*, %struct.sv** %targ, align 8
  %144 = load %struct.sv**, %struct.sv*** %sp, align 8
  store %struct.sv* %143, %struct.sv** %144, align 8
  %145 = load %struct.sv**, %struct.sv*** %sp, align 8
  store %struct.sv** %145, %struct.sv*** @PL_stack_sp, align 8
  %146 = load %struct.op*, %struct.op** @PL_op, align 8
  %op_next199 = getelementptr inbounds %struct.op, %struct.op* %146, i32 0, i32 0
  %147 = load %struct.op*, %struct.op** %op_next199, align 8
  store %struct.op* %147, %struct.op** %retval, align 8
  br label %return

return:                                           ; preds = %if.end198, %if.else195, %if.then194, %if.then
  %148 = load %struct.op*, %struct.op** %retval, align 8
  ret %struct.op* %148
}

declare dso_local i64 @Perl_sv_2iv_flags(%struct.sv*, i32) #1

declare dso_local %struct.gv* @Perl_gv_fetchpvn_flags(i8*, i64, i32, i32) #1

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.op* @Perl_pp_flop() #0 {
entry:
  %retval = alloca %struct.op*, align 8
  %sp = alloca %struct.sv**, align 8
  %right = alloca %struct.sv*, align 8
  %left = alloca %struct.sv*, align 8
  %i = alloca i64, align 8
  %j = alloca i64, align 8
  %n = alloca i64, align 8
  %overflow = alloca i8, align 1
  %eMiX = alloca i64, align 8
  %sv = alloca %struct.sv*, align 8
  %len = alloca i64, align 8
  %llen = alloca i64, align 8
  %lpv = alloca i8*, align 8
  %tmps = alloca i8*, align 8
  %sv308 = alloca %struct.sv*, align 8
  %sv352 = alloca %struct.sv*, align 8
  %targ = alloca %struct.sv*, align 8
  %flop = alloca i32, align 4
  %gv = alloca %struct.gv*, align 8
  %0 = load %struct.sv**, %struct.sv*** @PL_stack_sp, align 8
  store %struct.sv** %0, %struct.sv*** %sp, align 8
  %1 = load %struct.op*, %struct.op** @PL_op, align 8
  %op_flags = getelementptr inbounds %struct.op, %struct.op* %1, i32 0, i32 5
  %2 = load i8, i8* %op_flags, align 2
  %conv = zext i8 %2 to i32
  %and = and i32 %conv, 3
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %3 = load %struct.op*, %struct.op** @PL_op, align 8
  %op_flags1 = getelementptr inbounds %struct.op, %struct.op* %3, i32 0, i32 5
  %4 = load i8, i8* %op_flags1, align 2
  %conv2 = zext i8 %4 to i32
  %and3 = and i32 %conv2, 3
  br label %cond.end

cond.false:                                       ; preds = %entry
  %call = call i32 @Perl_block_gimme()
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %and3, %cond.true ], [ %call, %cond.false ]
  %cmp = icmp eq i32 %cond, 3
  br i1 %cmp, label %if.then, label %if.else351

if.then:                                          ; preds = %cond.end
  %5 = load %struct.sv**, %struct.sv*** %sp, align 8
  %incdec.ptr = getelementptr inbounds %struct.sv*, %struct.sv** %5, i32 -1
  store %struct.sv** %incdec.ptr, %struct.sv*** %sp, align 8
  %6 = load %struct.sv*, %struct.sv** %5, align 8
  store %struct.sv* %6, %struct.sv** %right, align 8
  %7 = load %struct.sv**, %struct.sv*** %sp, align 8
  %incdec.ptr5 = getelementptr inbounds %struct.sv*, %struct.sv** %7, i32 -1
  store %struct.sv** %incdec.ptr5, %struct.sv*** %sp, align 8
  %8 = load %struct.sv*, %struct.sv** %7, align 8
  store %struct.sv* %8, %struct.sv** %left, align 8
  %9 = load %struct.sv*, %struct.sv** %left, align 8
  %sv_flags = getelementptr inbounds %struct.sv, %struct.sv* %9, i32 0, i32 2
  %10 = load i32, i32* %sv_flags, align 4
  %and6 = and i32 %10, 2097152
  %tobool7 = icmp ne i32 %and6, 0
  br i1 %tobool7, label %cond.true8, label %cond.false9

cond.true8:                                       ; preds = %if.then
  br i1 true, label %land.rhs, label %land.end

cond.false9:                                      ; preds = %if.then
  br i1 false, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %cond.false9, %cond.true8
  %11 = load %struct.sv*, %struct.sv** %left, align 8
  %call10 = call i32 @Perl_mg_get(%struct.sv* %11)
  %tobool11 = icmp ne i32 %call10, 0
  br label %land.end

land.end:                                         ; preds = %land.rhs, %cond.false9, %cond.true8
  %12 = phi i1 [ false, %cond.false9 ], [ false, %cond.true8 ], [ %tobool11, %land.rhs ]
  %land.ext = zext i1 %12 to i32
  %13 = load %struct.sv*, %struct.sv** %right, align 8
  %sv_flags12 = getelementptr inbounds %struct.sv, %struct.sv* %13, i32 0, i32 2
  %14 = load i32, i32* %sv_flags12, align 4
  %and13 = and i32 %14, 2097152
  %tobool14 = icmp ne i32 %and13, 0
  br i1 %tobool14, label %cond.true15, label %cond.false16

cond.true15:                                      ; preds = %land.end
  br i1 true, label %land.rhs17, label %land.end20

cond.false16:                                     ; preds = %land.end
  br i1 false, label %land.rhs17, label %land.end20

land.rhs17:                                       ; preds = %cond.false16, %cond.true15
  %15 = load %struct.sv*, %struct.sv** %right, align 8
  %call18 = call i32 @Perl_mg_get(%struct.sv* %15)
  %tobool19 = icmp ne i32 %call18, 0
  br label %land.end20

land.end20:                                       ; preds = %land.rhs17, %cond.false16, %cond.true15
  %16 = phi i1 [ false, %cond.false16 ], [ false, %cond.true15 ], [ %tobool19, %land.rhs17 ]
  %land.ext21 = zext i1 %16 to i32
  %17 = load %struct.sv*, %struct.sv** %left, align 8
  %sv_flags22 = getelementptr inbounds %struct.sv, %struct.sv* %17, i32 0, i32 2
  %18 = load i32, i32* %sv_flags22, align 4
  %and23 = and i32 %18, 12288
  %tobool24 = icmp ne i32 %and23, 0
  br i1 %tobool24, label %if.then133, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.end20
  %19 = load %struct.sv*, %struct.sv** %left, align 8
  %sv_flags25 = getelementptr inbounds %struct.sv, %struct.sv* %19, i32 0, i32 2
  %20 = load i32, i32* %sv_flags25, align 4
  %and26 = and i32 %20, 65280
  %tobool27 = icmp ne i32 %and26, 0
  br i1 %tobool27, label %land.lhs.true, label %lor.lhs.false28

lor.lhs.false28:                                  ; preds = %lor.lhs.false
  %21 = load %struct.sv*, %struct.sv** %left, align 8
  %sv_flags29 = getelementptr inbounds %struct.sv, %struct.sv* %21, i32 0, i32 2
  %22 = load i32, i32* %sv_flags29, align 4
  %and30 = and i32 %22, 255
  %cmp31 = icmp eq i32 %and30, 8
  br i1 %cmp31, label %land.lhs.true, label %lor.lhs.false33

lor.lhs.false33:                                  ; preds = %lor.lhs.false28
  %23 = load %struct.sv*, %struct.sv** %left, align 8
  %sv_flags34 = getelementptr inbounds %struct.sv, %struct.sv* %23, i32 0, i32 2
  %24 = load i32, i32* %sv_flags34, align 4
  %and35 = and i32 %24, 16826623
  %cmp36 = icmp eq i32 %and35, 16777226
  br i1 %cmp36, label %land.lhs.true, label %lor.lhs.false41

land.lhs.true:                                    ; preds = %lor.lhs.false33, %lor.lhs.false28, %lor.lhs.false
  %25 = load %struct.sv*, %struct.sv** %left, align 8
  %sv_flags38 = getelementptr inbounds %struct.sv, %struct.sv* %25, i32 0, i32 2
  %26 = load i32, i32* %sv_flags38, align 4
  %and39 = and i32 %26, 16384
  %tobool40 = icmp ne i32 %and39, 0
  br i1 %tobool40, label %lor.lhs.false41, label %if.then133

lor.lhs.false41:                                  ; preds = %land.lhs.true, %lor.lhs.false33
  %27 = load %struct.sv*, %struct.sv** %right, align 8
  %sv_flags42 = getelementptr inbounds %struct.sv, %struct.sv* %27, i32 0, i32 2
  %28 = load i32, i32* %sv_flags42, align 4
  %and43 = and i32 %28, 12288
  %tobool44 = icmp ne i32 %and43, 0
  br i1 %tobool44, label %if.then133, label %lor.lhs.false45

lor.lhs.false45:                                  ; preds = %lor.lhs.false41
  %29 = load %struct.sv*, %struct.sv** %right, align 8
  %sv_flags46 = getelementptr inbounds %struct.sv, %struct.sv* %29, i32 0, i32 2
  %30 = load i32, i32* %sv_flags46, align 4
  %and47 = and i32 %30, 65280
  %tobool48 = icmp ne i32 %and47, 0
  br i1 %tobool48, label %land.lhs.true59, label %lor.lhs.false49

lor.lhs.false49:                                  ; preds = %lor.lhs.false45
  %31 = load %struct.sv*, %struct.sv** %right, align 8
  %sv_flags50 = getelementptr inbounds %struct.sv, %struct.sv* %31, i32 0, i32 2
  %32 = load i32, i32* %sv_flags50, align 4
  %and51 = and i32 %32, 255
  %cmp52 = icmp eq i32 %and51, 8
  br i1 %cmp52, label %land.lhs.true59, label %lor.lhs.false54

lor.lhs.false54:                                  ; preds = %lor.lhs.false49
  %33 = load %struct.sv*, %struct.sv** %right, align 8
  %sv_flags55 = getelementptr inbounds %struct.sv, %struct.sv* %33, i32 0, i32 2
  %34 = load i32, i32* %sv_flags55, align 4
  %and56 = and i32 %34, 16826623
  %cmp57 = icmp eq i32 %and56, 16777226
  br i1 %cmp57, label %land.lhs.true59, label %lor.lhs.false63

land.lhs.true59:                                  ; preds = %lor.lhs.false54, %lor.lhs.false49, %lor.lhs.false45
  %35 = load %struct.sv*, %struct.sv** %right, align 8
  %sv_flags60 = getelementptr inbounds %struct.sv, %struct.sv* %35, i32 0, i32 2
  %36 = load i32, i32* %sv_flags60, align 4
  %and61 = and i32 %36, 16384
  %tobool62 = icmp ne i32 %and61, 0
  br i1 %tobool62, label %lor.lhs.false63, label %if.then133

lor.lhs.false63:                                  ; preds = %land.lhs.true59, %lor.lhs.false54
  %37 = load %struct.sv*, %struct.sv** %left, align 8
  %sv_flags64 = getelementptr inbounds %struct.sv, %struct.sv* %37, i32 0, i32 2
  %38 = load i32, i32* %sv_flags64, align 4
  %and65 = and i32 %38, 65280
  %tobool66 = icmp ne i32 %and65, 0
  br i1 %tobool66, label %lor.lhs.false91, label %lor.lhs.false67

lor.lhs.false67:                                  ; preds = %lor.lhs.false63
  %39 = load %struct.sv*, %struct.sv** %left, align 8
  %sv_flags68 = getelementptr inbounds %struct.sv, %struct.sv* %39, i32 0, i32 2
  %40 = load i32, i32* %sv_flags68, align 4
  %and69 = and i32 %40, 255
  %cmp70 = icmp eq i32 %and69, 8
  br i1 %cmp70, label %lor.lhs.false91, label %lor.lhs.false72

lor.lhs.false72:                                  ; preds = %lor.lhs.false67
  %41 = load %struct.sv*, %struct.sv** %left, align 8
  %sv_flags73 = getelementptr inbounds %struct.sv, %struct.sv* %41, i32 0, i32 2
  %42 = load i32, i32* %sv_flags73, align 4
  %and74 = and i32 %42, 16826623
  %cmp75 = icmp eq i32 %and74, 16777226
  br i1 %cmp75, label %lor.lhs.false91, label %land.lhs.true77

land.lhs.true77:                                  ; preds = %lor.lhs.false72
  %43 = load %struct.sv*, %struct.sv** %right, align 8
  %sv_flags78 = getelementptr inbounds %struct.sv, %struct.sv* %43, i32 0, i32 2
  %44 = load i32, i32* %sv_flags78, align 4
  %and79 = and i32 %44, 65280
  %tobool80 = icmp ne i32 %and79, 0
  br i1 %tobool80, label %land.lhs.true116, label %lor.lhs.false81

lor.lhs.false81:                                  ; preds = %land.lhs.true77
  %45 = load %struct.sv*, %struct.sv** %right, align 8
  %sv_flags82 = getelementptr inbounds %struct.sv, %struct.sv* %45, i32 0, i32 2
  %46 = load i32, i32* %sv_flags82, align 4
  %and83 = and i32 %46, 255
  %cmp84 = icmp eq i32 %and83, 8
  br i1 %cmp84, label %land.lhs.true116, label %lor.lhs.false86

lor.lhs.false86:                                  ; preds = %lor.lhs.false81
  %47 = load %struct.sv*, %struct.sv** %right, align 8
  %sv_flags87 = getelementptr inbounds %struct.sv, %struct.sv* %47, i32 0, i32 2
  %48 = load i32, i32* %sv_flags87, align 4
  %and88 = and i32 %48, 16826623
  %cmp89 = icmp eq i32 %and88, 16777226
  br i1 %cmp89, label %land.lhs.true116, label %lor.lhs.false91

lor.lhs.false91:                                  ; preds = %lor.lhs.false86, %lor.lhs.false72, %lor.lhs.false67, %lor.lhs.false63
  %49 = load %struct.sv*, %struct.sv** %left, align 8
  %sv_flags92 = getelementptr inbounds %struct.sv, %struct.sv* %49, i32 0, i32 2
  %50 = load i32, i32* %sv_flags92, align 4
  %and93 = and i32 %50, 65280
  %tobool94 = icmp ne i32 %and93, 0
  br i1 %tobool94, label %lor.lhs.false105, label %lor.lhs.false95

lor.lhs.false95:                                  ; preds = %lor.lhs.false91
  %51 = load %struct.sv*, %struct.sv** %left, align 8
  %sv_flags96 = getelementptr inbounds %struct.sv, %struct.sv* %51, i32 0, i32 2
  %52 = load i32, i32* %sv_flags96, align 4
  %and97 = and i32 %52, 255
  %cmp98 = icmp eq i32 %and97, 8
  br i1 %cmp98, label %lor.lhs.false105, label %lor.lhs.false100

lor.lhs.false100:                                 ; preds = %lor.lhs.false95
  %53 = load %struct.sv*, %struct.sv** %left, align 8
  %sv_flags101 = getelementptr inbounds %struct.sv, %struct.sv* %53, i32 0, i32 2
  %54 = load i32, i32* %sv_flags101, align 4
  %and102 = and i32 %54, 16826623
  %cmp103 = icmp eq i32 %and102, 16777226
  br i1 %cmp103, label %lor.lhs.false105, label %land.lhs.true108

lor.lhs.false105:                                 ; preds = %lor.lhs.false100, %lor.lhs.false95, %lor.lhs.false91
  %55 = load %struct.sv*, %struct.sv** %left, align 8
  %call106 = call i32 @Perl_looks_like_number(%struct.sv* %55)
  %tobool107 = icmp ne i32 %call106, 0
  br i1 %tobool107, label %land.lhs.true108, label %if.else280

land.lhs.true108:                                 ; preds = %lor.lhs.false105, %lor.lhs.false100
  %56 = load %struct.sv*, %struct.sv** %left, align 8
  %sv_flags109 = getelementptr inbounds %struct.sv, %struct.sv* %56, i32 0, i32 2
  %57 = load i32, i32* %sv_flags109, align 4
  %and110 = and i32 %57, 16384
  %tobool111 = icmp ne i32 %and110, 0
  br i1 %tobool111, label %land.lhs.true112, label %if.else280

land.lhs.true112:                                 ; preds = %land.lhs.true108
  %58 = load %struct.sv*, %struct.sv** %left, align 8
  %sv_u = getelementptr inbounds %struct.sv, %struct.sv* %58, i32 0, i32 3
  %svu_pv = bitcast %union.anon* %sv_u to i8**
  %59 = load i8*, i8** %svu_pv, align 8
  %add.ptr = getelementptr inbounds i8, i8* %59, i64 0
  %60 = load i8, i8* %add.ptr, align 1
  %conv113 = sext i8 %60 to i32
  %cmp114 = icmp ne i32 %conv113, 48
  br i1 %cmp114, label %land.lhs.true116, label %if.else280

land.lhs.true116:                                 ; preds = %land.lhs.true112, %lor.lhs.false86, %lor.lhs.false81, %land.lhs.true77
  %61 = load %struct.sv*, %struct.sv** %right, align 8
  %sv_flags117 = getelementptr inbounds %struct.sv, %struct.sv* %61, i32 0, i32 2
  %62 = load i32, i32* %sv_flags117, align 4
  %and118 = and i32 %62, 65280
  %tobool119 = icmp ne i32 %and118, 0
  br i1 %tobool119, label %lor.lhs.false130, label %lor.lhs.false120

lor.lhs.false120:                                 ; preds = %land.lhs.true116
  %63 = load %struct.sv*, %struct.sv** %right, align 8
  %sv_flags121 = getelementptr inbounds %struct.sv, %struct.sv* %63, i32 0, i32 2
  %64 = load i32, i32* %sv_flags121, align 4
  %and122 = and i32 %64, 255
  %cmp123 = icmp eq i32 %and122, 8
  br i1 %cmp123, label %lor.lhs.false130, label %lor.lhs.false125

lor.lhs.false125:                                 ; preds = %lor.lhs.false120
  %65 = load %struct.sv*, %struct.sv** %right, align 8
  %sv_flags126 = getelementptr inbounds %struct.sv, %struct.sv* %65, i32 0, i32 2
  %66 = load i32, i32* %sv_flags126, align 4
  %and127 = and i32 %66, 16826623
  %cmp128 = icmp eq i32 %and127, 16777226
  br i1 %cmp128, label %lor.lhs.false130, label %if.then133

lor.lhs.false130:                                 ; preds = %lor.lhs.false125, %lor.lhs.false120, %land.lhs.true116
  %67 = load %struct.sv*, %struct.sv** %right, align 8
  %call131 = call i32 @Perl_looks_like_number(%struct.sv* %67)
  %tobool132 = icmp ne i32 %call131, 0
  br i1 %tobool132, label %if.then133, label %if.else280

if.then133:                                       ; preds = %lor.lhs.false130, %lor.lhs.false125, %land.lhs.true59, %lor.lhs.false41, %land.lhs.true, %land.end20
  %68 = load %struct.sv*, %struct.sv** %left, align 8
  %sv_flags134 = getelementptr inbounds %struct.sv, %struct.sv* %68, i32 0, i32 2
  %69 = load i32, i32* %sv_flags134, align 4
  %and135 = and i32 %69, 65280
  %tobool136 = icmp ne i32 %and135, 0
  br i1 %tobool136, label %land.lhs.true147, label %lor.lhs.false137

lor.lhs.false137:                                 ; preds = %if.then133
  %70 = load %struct.sv*, %struct.sv** %left, align 8
  %sv_flags138 = getelementptr inbounds %struct.sv, %struct.sv* %70, i32 0, i32 2
  %71 = load i32, i32* %sv_flags138, align 4
  %and139 = and i32 %71, 255
  %cmp140 = icmp eq i32 %and139, 8
  br i1 %cmp140, label %land.lhs.true147, label %lor.lhs.false142

lor.lhs.false142:                                 ; preds = %lor.lhs.false137
  %72 = load %struct.sv*, %struct.sv** %left, align 8
  %sv_flags143 = getelementptr inbounds %struct.sv, %struct.sv* %72, i32 0, i32 2
  %73 = load i32, i32* %sv_flags143, align 4
  %and144 = and i32 %73, 16826623
  %cmp145 = icmp eq i32 %and144, 16777226
  br i1 %cmp145, label %land.lhs.true147, label %lor.lhs.false162

land.lhs.true147:                                 ; preds = %lor.lhs.false142, %lor.lhs.false137, %if.then133
  %74 = load %struct.sv*, %struct.sv** %left, align 8
  %sv_flags148 = getelementptr inbounds %struct.sv, %struct.sv* %74, i32 0, i32 2
  %75 = load i32, i32* %sv_flags148, align 4
  %and149 = and i32 %75, 256
  %tobool150 = icmp ne i32 %and149, 0
  br i1 %tobool150, label %lor.lhs.false162, label %land.lhs.true151

land.lhs.true151:                                 ; preds = %land.lhs.true147
  %76 = load %struct.sv*, %struct.sv** %left, align 8
  %sv_flags152 = getelementptr inbounds %struct.sv, %struct.sv* %76, i32 0, i32 2
  %77 = load i32, i32* %sv_flags152, align 4
  %and153 = and i32 %77, 512
  %tobool154 = icmp ne i32 %and153, 0
  br i1 %tobool154, label %cond.true155, label %cond.false156

cond.true155:                                     ; preds = %land.lhs.true151
  %78 = load %struct.sv*, %struct.sv** %left, align 8
  %sv_any = getelementptr inbounds %struct.sv, %struct.sv* %78, i32 0, i32 0
  %79 = load i8*, i8** %sv_any, align 8
  %80 = bitcast i8* %79 to %struct.xpvnv*
  %xnv_u = getelementptr inbounds %struct.xpvnv, %struct.xpvnv* %80, i32 0, i32 5
  %xnv_nv = bitcast %union._xnvu* %xnv_u to double*
  %81 = load double, double* %xnv_nv, align 8
  br label %cond.end158

cond.false156:                                    ; preds = %land.lhs.true151
  %82 = load %struct.sv*, %struct.sv** %left, align 8
  %call157 = call double @Perl_sv_2nv_flags(%struct.sv* %82, i32 0)
  br label %cond.end158

cond.end158:                                      ; preds = %cond.false156, %cond.true155
  %cond159 = phi double [ %81, %cond.true155 ], [ %call157, %cond.false156 ]
  %cmp160 = fcmp olt double %cond159, 0xC3E0000000000000
  br i1 %cmp160, label %if.then211, label %lor.lhs.false162

lor.lhs.false162:                                 ; preds = %cond.end158, %land.lhs.true147, %lor.lhs.false142
  %83 = load %struct.sv*, %struct.sv** %right, align 8
  %sv_flags163 = getelementptr inbounds %struct.sv, %struct.sv* %83, i32 0, i32 2
  %84 = load i32, i32* %sv_flags163, align 4
  %and164 = and i32 %84, 65280
  %tobool165 = icmp ne i32 %and164, 0
  br i1 %tobool165, label %land.lhs.true176, label %lor.lhs.false166

lor.lhs.false166:                                 ; preds = %lor.lhs.false162
  %85 = load %struct.sv*, %struct.sv** %right, align 8
  %sv_flags167 = getelementptr inbounds %struct.sv, %struct.sv* %85, i32 0, i32 2
  %86 = load i32, i32* %sv_flags167, align 4
  %and168 = and i32 %86, 255
  %cmp169 = icmp eq i32 %and168, 8
  br i1 %cmp169, label %land.lhs.true176, label %lor.lhs.false171

lor.lhs.false171:                                 ; preds = %lor.lhs.false166
  %87 = load %struct.sv*, %struct.sv** %right, align 8
  %sv_flags172 = getelementptr inbounds %struct.sv, %struct.sv* %87, i32 0, i32 2
  %88 = load i32, i32* %sv_flags172, align 4
  %and173 = and i32 %88, 16826623
  %cmp174 = icmp eq i32 %and173, 16777226
  br i1 %cmp174, label %land.lhs.true176, label %if.end

land.lhs.true176:                                 ; preds = %lor.lhs.false171, %lor.lhs.false166, %lor.lhs.false162
  %89 = load %struct.sv*, %struct.sv** %right, align 8
  %sv_flags177 = getelementptr inbounds %struct.sv, %struct.sv* %89, i32 0, i32 2
  %90 = load i32, i32* %sv_flags177, align 4
  %and178 = and i32 %90, 256
  %tobool179 = icmp ne i32 %and178, 0
  br i1 %tobool179, label %cond.true180, label %cond.false197

cond.true180:                                     ; preds = %land.lhs.true176
  %91 = load %struct.sv*, %struct.sv** %right, align 8
  %sv_flags181 = getelementptr inbounds %struct.sv, %struct.sv* %91, i32 0, i32 2
  %92 = load i32, i32* %sv_flags181, align 4
  %and182 = and i32 %92, -2147483648
  %tobool183 = icmp ne i32 %and182, 0
  br i1 %tobool183, label %land.lhs.true184, label %if.end

land.lhs.true184:                                 ; preds = %cond.true180
  %93 = load %struct.sv*, %struct.sv** %right, align 8
  %sv_flags185 = getelementptr inbounds %struct.sv, %struct.sv* %93, i32 0, i32 2
  %94 = load i32, i32* %sv_flags185, align 4
  %and186 = and i32 %94, -2145386240
  %cmp187 = icmp eq i32 %and186, -2147483392
  br i1 %cmp187, label %cond.true189, label %cond.false191

cond.true189:                                     ; preds = %land.lhs.true184
  %95 = load %struct.sv*, %struct.sv** %right, align 8
  %sv_any190 = getelementptr inbounds %struct.sv, %struct.sv* %95, i32 0, i32 0
  %96 = load i8*, i8** %sv_any190, align 8
  %97 = bitcast i8* %96 to %struct.xpvuv*
  %xuv_u = getelementptr inbounds %struct.xpvuv, %struct.xpvuv* %97, i32 0, i32 4
  %xivu_uv = bitcast %union._xivu* %xuv_u to i64*
  %98 = load i64, i64* %xivu_uv, align 8
  br label %cond.end193

cond.false191:                                    ; preds = %land.lhs.true184
  %99 = load %struct.sv*, %struct.sv** %right, align 8
  %call192 = call i64 @Perl_sv_2uv_flags(%struct.sv* %99, i32 2)
  br label %cond.end193

cond.end193:                                      ; preds = %cond.false191, %cond.true189
  %cond194 = phi i64 [ %98, %cond.true189 ], [ %call192, %cond.false191 ]
  %cmp195 = icmp ugt i64 %cond194, 9223372036854775807
  br i1 %cmp195, label %if.then211, label %if.end

cond.false197:                                    ; preds = %land.lhs.true176
  %100 = load %struct.sv*, %struct.sv** %right, align 8
  %sv_flags198 = getelementptr inbounds %struct.sv, %struct.sv* %100, i32 0, i32 2
  %101 = load i32, i32* %sv_flags198, align 4
  %and199 = and i32 %101, 512
  %tobool200 = icmp ne i32 %and199, 0
  br i1 %tobool200, label %cond.true201, label %cond.false205

cond.true201:                                     ; preds = %cond.false197
  %102 = load %struct.sv*, %struct.sv** %right, align 8
  %sv_any202 = getelementptr inbounds %struct.sv, %struct.sv* %102, i32 0, i32 0
  %103 = load i8*, i8** %sv_any202, align 8
  %104 = bitcast i8* %103 to %struct.xpvnv*
  %xnv_u203 = getelementptr inbounds %struct.xpvnv, %struct.xpvnv* %104, i32 0, i32 5
  %xnv_nv204 = bitcast %union._xnvu* %xnv_u203 to double*
  %105 = load double, double* %xnv_nv204, align 8
  br label %cond.end207

cond.false205:                                    ; preds = %cond.false197
  %106 = load %struct.sv*, %struct.sv** %right, align 8
  %call206 = call double @Perl_sv_2nv_flags(%struct.sv* %106, i32 0)
  br label %cond.end207

cond.end207:                                      ; preds = %cond.false205, %cond.true201
  %cond208 = phi double [ %105, %cond.true201 ], [ %call206, %cond.false205 ]
  %cmp209 = fcmp ogt double %cond208, 0x43E0000000000000
  br i1 %cmp209, label %if.then211, label %if.end

if.then211:                                       ; preds = %cond.end207, %cond.end193, %cond.end158
  %call212 = call %struct.op* (i8*, ...) @Perl_die(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.9, i64 0, i64 0))
  store %struct.op* %call212, %struct.op** %retval, align 8
  br label %return

if.end:                                           ; preds = %cond.end207, %cond.end193, %cond.true180, %lor.lhs.false171
  %107 = load %struct.sv*, %struct.sv** %left, align 8
  %sv_flags213 = getelementptr inbounds %struct.sv, %struct.sv* %107, i32 0, i32 2
  %108 = load i32, i32* %sv_flags213, align 4
  %and214 = and i32 %108, 256
  %tobool215 = icmp ne i32 %and214, 0
  br i1 %tobool215, label %cond.true216, label %cond.false218

cond.true216:                                     ; preds = %if.end
  %109 = load %struct.sv*, %struct.sv** %left, align 8
  %sv_any217 = getelementptr inbounds %struct.sv, %struct.sv* %109, i32 0, i32 0
  %110 = load i8*, i8** %sv_any217, align 8
  %111 = bitcast i8* %110 to %struct.xpviv*
  %xiv_u = getelementptr inbounds %struct.xpviv, %struct.xpviv* %111, i32 0, i32 4
  %xivu_iv = bitcast %union._xivu* %xiv_u to i64*
  %112 = load i64, i64* %xivu_iv, align 8
  br label %cond.end220

cond.false218:                                    ; preds = %if.end
  %113 = load %struct.sv*, %struct.sv** %left, align 8
  %call219 = call i64 @Perl_sv_2iv_flags(%struct.sv* %113, i32 0)
  br label %cond.end220

cond.end220:                                      ; preds = %cond.false218, %cond.true216
  %cond221 = phi i64 [ %112, %cond.true216 ], [ %call219, %cond.false218 ]
  store i64 %cond221, i64* %i, align 8
  %114 = load %struct.sv*, %struct.sv** %right, align 8
  %sv_flags222 = getelementptr inbounds %struct.sv, %struct.sv* %114, i32 0, i32 2
  %115 = load i32, i32* %sv_flags222, align 4
  %and223 = and i32 %115, 256
  %tobool224 = icmp ne i32 %and223, 0
  br i1 %tobool224, label %cond.true225, label %cond.false229

cond.true225:                                     ; preds = %cond.end220
  %116 = load %struct.sv*, %struct.sv** %right, align 8
  %sv_any226 = getelementptr inbounds %struct.sv, %struct.sv* %116, i32 0, i32 0
  %117 = load i8*, i8** %sv_any226, align 8
  %118 = bitcast i8* %117 to %struct.xpviv*
  %xiv_u227 = getelementptr inbounds %struct.xpviv, %struct.xpviv* %118, i32 0, i32 4
  %xivu_iv228 = bitcast %union._xivu* %xiv_u227 to i64*
  %119 = load i64, i64* %xivu_iv228, align 8
  br label %cond.end231

cond.false229:                                    ; preds = %cond.end220
  %120 = load %struct.sv*, %struct.sv** %right, align 8
  %call230 = call i64 @Perl_sv_2iv_flags(%struct.sv* %120, i32 0)
  br label %cond.end231

cond.end231:                                      ; preds = %cond.false229, %cond.true225
  %cond232 = phi i64 [ %119, %cond.true225 ], [ %call230, %cond.false229 ]
  store i64 %cond232, i64* %j, align 8
  %121 = load i64, i64* %j, align 8
  %122 = load i64, i64* %i, align 8
  %cmp233 = icmp sge i64 %121, %122
  br i1 %cmp233, label %if.then235, label %if.else

if.then235:                                       ; preds = %cond.end231
  %123 = load i64, i64* %i, align 8
  %cmp236 = icmp sle i64 %123, 0
  br i1 %cmp236, label %land.rhs238, label %land.end241

land.rhs238:                                      ; preds = %if.then235
  %124 = load i64, i64* %j, align 8
  %125 = load i64, i64* %i, align 8
  %add = add nsw i64 9223372036854775807, %125
  %sub = sub nsw i64 %add, 1
  %cmp239 = icmp sgt i64 %124, %sub
  br label %land.end241

land.end241:                                      ; preds = %land.rhs238, %if.then235
  %126 = phi i1 [ false, %if.then235 ], [ %cmp239, %land.rhs238 ]
  %frombool = zext i1 %126 to i8
  store i8 %frombool, i8* %overflow, align 1
  %127 = load i8, i8* %overflow, align 1
  %tobool243 = trunc i8 %127 to i1
  br i1 %tobool243, label %if.end251, label %if.then244

if.then244:                                       ; preds = %land.end241
  %128 = load i64, i64* %j, align 8
  %129 = load i64, i64* %i, align 8
  %sub245 = sub nsw i64 %128, %129
  %add246 = add nsw i64 %sub245, 1
  store i64 %add246, i64* %n, align 8
  %130 = load i64, i64* %n, align 8
  %cmp247 = icmp slt i64 %130, 1
  br i1 %cmp247, label %if.then249, label %if.end250

if.then249:                                       ; preds = %if.then244
  store i8 1, i8* %overflow, align 1
  br label %if.end250

if.end250:                                        ; preds = %if.then249, %if.then244
  br label %if.end251

if.end251:                                        ; preds = %if.end250, %land.end241
  %131 = load i8, i8* %overflow, align 1
  %tobool252 = trunc i8 %131 to i1
  br i1 %tobool252, label %if.then253, label %if.end254

if.then253:                                       ; preds = %if.end251
  call void (i8*, ...) @Perl_croak(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.10, i64 0, i64 0))
  br label %if.end254

if.end254:                                        ; preds = %if.then253, %if.end251
  br label %do.body

do.body:                                          ; preds = %if.end254
  %132 = load i64, i64* @PL_tmps_ix, align 8
  %133 = load i64, i64* %n, align 8
  %add255 = add nsw i64 %132, %133
  store i64 %add255, i64* %eMiX, align 8
  %134 = load i64, i64* %eMiX, align 8
  %135 = load i64, i64* @PL_tmps_max, align 8
  %cmp256 = icmp sge i64 %134, %135
  br i1 %cmp256, label %cond.true258, label %cond.false259

cond.true258:                                     ; preds = %do.body
  br i1 true, label %if.then260, label %if.end262

cond.false259:                                    ; preds = %do.body
  br i1 false, label %if.then260, label %if.end262

if.then260:                                       ; preds = %cond.false259, %cond.true258
  %136 = load i64, i64* %eMiX, align 8
  %call261 = call i64 @Perl_tmps_grow_p(i64 %136)
  br label %if.end262

if.end262:                                        ; preds = %if.then260, %cond.false259, %cond.true258
  br label %do.end

do.end:                                           ; preds = %if.end262
  br label %do.body263

do.body263:                                       ; preds = %do.end
  %137 = load %struct.sv**, %struct.sv*** @PL_stack_max, align 8
  %138 = load %struct.sv**, %struct.sv*** %sp, align 8
  %sub.ptr.lhs.cast = ptrtoint %struct.sv** %137 to i64
  %sub.ptr.rhs.cast = ptrtoint %struct.sv** %138 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 8
  %139 = load i64, i64* %n, align 8
  %cmp264 = icmp slt i64 %sub.ptr.div, %139
  br i1 %cmp264, label %cond.true266, label %cond.false267

cond.true266:                                     ; preds = %do.body263
  br i1 true, label %if.then268, label %if.end270

cond.false267:                                    ; preds = %do.body263
  br i1 false, label %if.then268, label %if.end270

if.then268:                                       ; preds = %cond.false267, %cond.true266
  %140 = load %struct.sv**, %struct.sv*** %sp, align 8
  %141 = load %struct.sv**, %struct.sv*** %sp, align 8
  %142 = load i64, i64* %n, align 8
  %call269 = call %struct.sv** @Perl_stack_grow(%struct.sv** %140, %struct.sv** %141, i64 %142)
  store %struct.sv** %call269, %struct.sv*** %sp, align 8
  %143 = load %struct.sv**, %struct.sv*** %sp, align 8
  br label %if.end270

if.end270:                                        ; preds = %if.then268, %cond.false267, %cond.true266
  br label %do.end271

do.end271:                                        ; preds = %if.end270
  br label %if.end272

if.else:                                          ; preds = %cond.end231
  store i64 0, i64* %n, align 8
  br label %if.end272

if.end272:                                        ; preds = %if.else, %do.end271
  br label %while.cond

while.cond:                                       ; preds = %if.end279, %if.end272
  %144 = load i64, i64* %n, align 8
  %dec = add nsw i64 %144, -1
  store i64 %dec, i64* %n, align 8
  %tobool273 = icmp ne i64 %144, 0
  br i1 %tobool273, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %145 = load i64, i64* %i, align 8
  %call274 = call %struct.sv* @Perl_newSViv(i64 %145)
  %call275 = call %struct.sv* @Perl_sv_2mortal(%struct.sv* %call274)
  store %struct.sv* %call275, %struct.sv** %sv, align 8
  %146 = load %struct.sv*, %struct.sv** %sv, align 8
  %147 = load %struct.sv**, %struct.sv*** %sp, align 8
  %incdec.ptr276 = getelementptr inbounds %struct.sv*, %struct.sv** %147, i32 1
  store %struct.sv** %incdec.ptr276, %struct.sv*** %sp, align 8
  store %struct.sv* %146, %struct.sv** %incdec.ptr276, align 8
  %148 = load i64, i64* %n, align 8
  %tobool277 = icmp ne i64 %148, 0
  br i1 %tobool277, label %if.then278, label %if.end279

if.then278:                                       ; preds = %while.body
  %149 = load i64, i64* %i, align 8
  %inc = add nsw i64 %149, 1
  store i64 %inc, i64* %i, align 8
  br label %if.end279

if.end279:                                        ; preds = %if.then278, %while.body
  br label %while.cond

while.end:                                        ; preds = %while.cond
  br label %if.end350

if.else280:                                       ; preds = %lor.lhs.false130, %land.lhs.true112, %land.lhs.true108, %lor.lhs.false105
  %150 = load %struct.sv*, %struct.sv** %left, align 8
  %sv_flags281 = getelementptr inbounds %struct.sv, %struct.sv* %150, i32 0, i32 2
  %151 = load i32, i32* %sv_flags281, align 4
  %and282 = and i32 %151, 2098176
  %cmp283 = icmp eq i32 %and282, 1024
  br i1 %cmp283, label %cond.true285, label %cond.false290

cond.true285:                                     ; preds = %if.else280
  %152 = load %struct.sv*, %struct.sv** %left, align 8
  %sv_any286 = getelementptr inbounds %struct.sv, %struct.sv* %152, i32 0, i32 0
  %153 = load i8*, i8** %sv_any286, align 8
  %154 = bitcast i8* %153 to %struct.xpv*
  %xpv_cur = getelementptr inbounds %struct.xpv, %struct.xpv* %154, i32 0, i32 2
  %155 = load i64, i64* %xpv_cur, align 8
  store i64 %155, i64* %llen, align 8
  %156 = load %struct.sv*, %struct.sv** %left, align 8
  %sv_u287 = getelementptr inbounds %struct.sv, %struct.sv* %156, i32 0, i32 3
  %svu_pv288 = bitcast %union.anon* %sv_u287 to i8**
  %157 = load i8*, i8** %svu_pv288, align 8
  %add.ptr289 = getelementptr inbounds i8, i8* %157, i64 0
  br label %cond.end292

cond.false290:                                    ; preds = %if.else280
  %158 = load %struct.sv*, %struct.sv** %left, align 8
  %call291 = call i8* @Perl_sv_2pv_flags(%struct.sv* %158, i64* %llen, i32 32)
  br label %cond.end292

cond.end292:                                      ; preds = %cond.false290, %cond.true285
  %cond293 = phi i8* [ %add.ptr289, %cond.true285 ], [ %call291, %cond.false290 ]
  store i8* %cond293, i8** %lpv, align 8
  %159 = load %struct.sv*, %struct.sv** %right, align 8
  %sv_flags294 = getelementptr inbounds %struct.sv, %struct.sv* %159, i32 0, i32 2
  %160 = load i32, i32* %sv_flags294, align 4
  %and295 = and i32 %160, 2098176
  %cmp296 = icmp eq i32 %and295, 1024
  br i1 %cmp296, label %cond.true298, label %cond.false304

cond.true298:                                     ; preds = %cond.end292
  %161 = load %struct.sv*, %struct.sv** %right, align 8
  %sv_any299 = getelementptr inbounds %struct.sv, %struct.sv* %161, i32 0, i32 0
  %162 = load i8*, i8** %sv_any299, align 8
  %163 = bitcast i8* %162 to %struct.xpv*
  %xpv_cur300 = getelementptr inbounds %struct.xpv, %struct.xpv* %163, i32 0, i32 2
  %164 = load i64, i64* %xpv_cur300, align 8
  store i64 %164, i64* %len, align 8
  %165 = load %struct.sv*, %struct.sv** %right, align 8
  %sv_u301 = getelementptr inbounds %struct.sv, %struct.sv* %165, i32 0, i32 3
  %svu_pv302 = bitcast %union.anon* %sv_u301 to i8**
  %166 = load i8*, i8** %svu_pv302, align 8
  %add.ptr303 = getelementptr inbounds i8, i8* %166, i64 0
  br label %cond.end306

cond.false304:                                    ; preds = %cond.end292
  %167 = load %struct.sv*, %struct.sv** %right, align 8
  %call305 = call i8* @Perl_sv_2pv_flags(%struct.sv* %167, i64* %len, i32 32)
  br label %cond.end306

cond.end306:                                      ; preds = %cond.false304, %cond.true298
  %cond307 = phi i8* [ %add.ptr303, %cond.true298 ], [ %call305, %cond.false304 ]
  store i8* %cond307, i8** %tmps, align 8
  %168 = load i8*, i8** %lpv, align 8
  %169 = load i64, i64* %llen, align 8
  %170 = load %struct.sv*, %struct.sv** %left, align 8
  %sv_flags309 = getelementptr inbounds %struct.sv, %struct.sv* %170, i32 0, i32 2
  %171 = load i32, i32* %sv_flags309, align 4
  %and310 = and i32 %171, 536870912
  %or = or i32 %and310, 524288
  %call311 = call %struct.sv* @Perl_newSVpvn_flags(i8* %168, i64 %169, i32 %or)
  store %struct.sv* %call311, %struct.sv** %sv308, align 8
  br label %while.cond312

while.cond312:                                    ; preds = %if.end346, %cond.end306
  %172 = load %struct.sv*, %struct.sv** %sv308, align 8
  %sv_flags313 = getelementptr inbounds %struct.sv, %struct.sv* %172, i32 0, i32 2
  %173 = load i32, i32* %sv_flags313, align 4
  %and314 = and i32 %173, 12288
  %tobool315 = icmp ne i32 %and314, 0
  br i1 %tobool315, label %land.end321, label %land.rhs316

land.rhs316:                                      ; preds = %while.cond312
  %174 = load %struct.sv*, %struct.sv** %sv308, align 8
  %sv_any317 = getelementptr inbounds %struct.sv, %struct.sv* %174, i32 0, i32 0
  %175 = load i8*, i8** %sv_any317, align 8
  %176 = bitcast i8* %175 to %struct.xpv*
  %xpv_cur318 = getelementptr inbounds %struct.xpv, %struct.xpv* %176, i32 0, i32 2
  %177 = load i64, i64* %xpv_cur318, align 8
  %178 = load i64, i64* %len, align 8
  %cmp319 = icmp ule i64 %177, %178
  br label %land.end321

land.end321:                                      ; preds = %land.rhs316, %while.cond312
  %179 = phi i1 [ false, %while.cond312 ], [ %cmp319, %land.rhs316 ]
  br i1 %179, label %while.body323, label %while.end349

while.body323:                                    ; preds = %land.end321
  br label %do.body324

do.body324:                                       ; preds = %while.body323
  br label %do.body325

do.body325:                                       ; preds = %do.body324
  %180 = load %struct.sv**, %struct.sv*** @PL_stack_max, align 8
  %181 = load %struct.sv**, %struct.sv*** %sp, align 8
  %sub.ptr.lhs.cast326 = ptrtoint %struct.sv** %180 to i64
  %sub.ptr.rhs.cast327 = ptrtoint %struct.sv** %181 to i64
  %sub.ptr.sub328 = sub i64 %sub.ptr.lhs.cast326, %sub.ptr.rhs.cast327
  %sub.ptr.div329 = sdiv exact i64 %sub.ptr.sub328, 8
  %cmp330 = icmp slt i64 %sub.ptr.div329, 1
  br i1 %cmp330, label %cond.true332, label %cond.false333

cond.true332:                                     ; preds = %do.body325
  br i1 true, label %if.then334, label %if.end336

cond.false333:                                    ; preds = %do.body325
  br i1 false, label %if.then334, label %if.end336

if.then334:                                       ; preds = %cond.false333, %cond.true332
  %182 = load %struct.sv**, %struct.sv*** %sp, align 8
  %183 = load %struct.sv**, %struct.sv*** %sp, align 8
  %call335 = call %struct.sv** @Perl_stack_grow(%struct.sv** %182, %struct.sv** %183, i64 1)
  store %struct.sv** %call335, %struct.sv*** %sp, align 8
  %184 = load %struct.sv**, %struct.sv*** %sp, align 8
  br label %if.end336

if.end336:                                        ; preds = %if.then334, %cond.false333, %cond.true332
  br label %do.end337

do.end337:                                        ; preds = %if.end336
  %185 = load %struct.sv*, %struct.sv** %sv308, align 8
  %186 = load %struct.sv**, %struct.sv*** %sp, align 8
  %incdec.ptr338 = getelementptr inbounds %struct.sv*, %struct.sv** %186, i32 1
  store %struct.sv** %incdec.ptr338, %struct.sv*** %sp, align 8
  store %struct.sv* %185, %struct.sv** %incdec.ptr338, align 8
  br label %do.end339

do.end339:                                        ; preds = %do.end337
  %187 = load %struct.sv*, %struct.sv** %sv308, align 8
  %sv_u340 = getelementptr inbounds %struct.sv, %struct.sv* %187, i32 0, i32 3
  %svu_pv341 = bitcast %union.anon* %sv_u340 to i8**
  %188 = load i8*, i8** %svu_pv341, align 8
  %add.ptr342 = getelementptr inbounds i8, i8* %188, i64 0
  %189 = load i8*, i8** %tmps, align 8
  %call343 = call i32 @strcmp(i8* %add.ptr342, i8* %189) #8
  %tobool344 = icmp ne i32 %call343, 0
  br i1 %tobool344, label %if.end346, label %if.then345

if.then345:                                       ; preds = %do.end339
  br label %while.end349

if.end346:                                        ; preds = %do.end339
  %190 = load %struct.sv*, %struct.sv** %sv308, align 8
  %call347 = call %struct.sv* @Perl_newSVsv(%struct.sv* %190)
  %call348 = call %struct.sv* @Perl_sv_2mortal(%struct.sv* %call347)
  store %struct.sv* %call348, %struct.sv** %sv308, align 8
  %191 = load %struct.sv*, %struct.sv** %sv308, align 8
  call void @Perl_sv_inc(%struct.sv* %191)
  br label %while.cond312

while.end349:                                     ; preds = %if.then345, %land.end321
  br label %if.end350

if.end350:                                        ; preds = %while.end349, %while.end
  br label %if.end557

if.else351:                                       ; preds = %cond.end
  %192 = load %struct.sv**, %struct.sv*** %sp, align 8
  %193 = load %struct.sv*, %struct.sv** %192, align 8
  store %struct.sv* %193, %struct.sv** %sv352, align 8
  %194 = load %struct.sv**, %struct.sv*** @PL_curpad, align 8
  %195 = load %struct.op*, %struct.op** @PL_op, align 8
  %196 = bitcast %struct.op* %195 to %struct.unop*
  %op_first = getelementptr inbounds %struct.unop, %struct.unop* %196, i32 0, i32 7
  %197 = load %struct.op*, %struct.op** %op_first, align 8
  %op_targ = getelementptr inbounds %struct.op, %struct.op* %197, i32 0, i32 3
  %198 = load i64, i64* %op_targ, align 8
  %arrayidx = getelementptr inbounds %struct.sv*, %struct.sv** %194, i64 %198
  %199 = load %struct.sv*, %struct.sv** %arrayidx, align 8
  store %struct.sv* %199, %struct.sv** %targ, align 8
  store i32 0, i32* %flop, align 4
  %200 = load %struct.sv*, %struct.sv** %targ, align 8
  call void @Perl_sv_inc(%struct.sv* %200)
  %201 = load %struct.op*, %struct.op** @PL_op, align 8
  %op_private = getelementptr inbounds %struct.op, %struct.op* %201, i32 0, i32 6
  %202 = load i8, i8* %op_private, align 1
  %conv353 = zext i8 %202 to i32
  %and354 = and i32 %conv353, 64
  %tobool355 = icmp ne i32 %and354, 0
  br i1 %tobool355, label %if.then356, label %if.else449

if.then356:                                       ; preds = %if.else351
  %203 = load %struct.gv*, %struct.gv** @PL_last_in_gv, align 8
  %tobool357 = icmp ne %struct.gv* %203, null
  br i1 %tobool357, label %land.lhs.true358, label %cond.false377

land.lhs.true358:                                 ; preds = %if.then356
  %204 = load %struct.gv*, %struct.gv** @PL_last_in_gv, align 8
  %205 = bitcast %struct.gv* %204 to %struct.sv*
  %sv_flags359 = getelementptr inbounds %struct.sv, %struct.sv* %205, i32 0, i32 2
  %206 = load i32, i32* %sv_flags359, align 4
  %and360 = and i32 %206, 255
  %cmp361 = icmp eq i32 %and360, 9
  br i1 %cmp361, label %land.lhs.true368, label %lor.lhs.false363

lor.lhs.false363:                                 ; preds = %land.lhs.true358
  %207 = load %struct.gv*, %struct.gv** @PL_last_in_gv, align 8
  %208 = bitcast %struct.gv* %207 to %struct.sv*
  %sv_flags364 = getelementptr inbounds %struct.sv, %struct.sv* %208, i32 0, i32 2
  %209 = load i32, i32* %sv_flags364, align 4
  %and365 = and i32 %209, 255
  %cmp366 = icmp eq i32 %and365, 10
  br i1 %cmp366, label %land.lhs.true368, label %cond.false377

land.lhs.true368:                                 ; preds = %lor.lhs.false363, %land.lhs.true358
  %210 = load %struct.gv*, %struct.gv** @PL_last_in_gv, align 8
  %sv_u369 = getelementptr inbounds %struct.gv, %struct.gv* %210, i32 0, i32 3
  %svu_gp = bitcast %union.anon.4* %sv_u369 to %struct.gp**
  %211 = load %struct.gp*, %struct.gp** %svu_gp, align 8
  %add.ptr370 = getelementptr inbounds %struct.gp, %struct.gp* %211, i64 0
  %tobool371 = icmp ne %struct.gp* %add.ptr370, null
  br i1 %tobool371, label %cond.true372, label %cond.false377

cond.true372:                                     ; preds = %land.lhs.true368
  %212 = load %struct.gv*, %struct.gv** @PL_last_in_gv, align 8
  %sv_u373 = getelementptr inbounds %struct.gv, %struct.gv* %212, i32 0, i32 3
  %svu_gp374 = bitcast %union.anon.4* %sv_u373 to %struct.gp**
  %213 = load %struct.gp*, %struct.gp** %svu_gp374, align 8
  %add.ptr375 = getelementptr inbounds %struct.gp, %struct.gp* %213, i64 0
  %gp_io = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr375, i32 0, i32 1
  %214 = load %struct.io*, %struct.io** %gp_io, align 8
  %tobool376 = icmp ne %struct.io* %214, null
  br i1 %tobool376, label %if.then378, label %if.else400

cond.false377:                                    ; preds = %land.lhs.true368, %lor.lhs.false363, %if.then356
  br i1 false, label %if.then378, label %if.else400

if.then378:                                       ; preds = %cond.false377, %cond.true372
  %215 = load %struct.sv*, %struct.sv** %sv352, align 8
  %sv_flags379 = getelementptr inbounds %struct.sv, %struct.sv* %215, i32 0, i32 2
  %216 = load i32, i32* %sv_flags379, align 4
  %and380 = and i32 %216, 2097408
  %cmp381 = icmp eq i32 %and380, 256
  br i1 %cmp381, label %cond.true383, label %cond.false387

cond.true383:                                     ; preds = %if.then378
  %217 = load %struct.sv*, %struct.sv** %sv352, align 8
  %sv_any384 = getelementptr inbounds %struct.sv, %struct.sv* %217, i32 0, i32 0
  %218 = load i8*, i8** %sv_any384, align 8
  %219 = bitcast i8* %218 to %struct.xpviv*
  %xiv_u385 = getelementptr inbounds %struct.xpviv, %struct.xpviv* %219, i32 0, i32 4
  %xivu_iv386 = bitcast %union._xivu* %xiv_u385 to i64*
  %220 = load i64, i64* %xivu_iv386, align 8
  br label %cond.end389

cond.false387:                                    ; preds = %if.then378
  %221 = load %struct.sv*, %struct.sv** %sv352, align 8
  %call388 = call i64 @Perl_sv_2iv_flags(%struct.sv* %221, i32 2)
  br label %cond.end389

cond.end389:                                      ; preds = %cond.false387, %cond.true383
  %cond390 = phi i64 [ %220, %cond.true383 ], [ %call388, %cond.false387 ]
  %222 = load %struct.gv*, %struct.gv** @PL_last_in_gv, align 8
  %sv_u391 = getelementptr inbounds %struct.gv, %struct.gv* %222, i32 0, i32 3
  %svu_gp392 = bitcast %union.anon.4* %sv_u391 to %struct.gp**
  %223 = load %struct.gp*, %struct.gp** %svu_gp392, align 8
  %add.ptr393 = getelementptr inbounds %struct.gp, %struct.gp* %223, i64 0
  %gp_io394 = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr393, i32 0, i32 1
  %224 = load %struct.io*, %struct.io** %gp_io394, align 8
  %sv_any395 = getelementptr inbounds %struct.io, %struct.io* %224, i32 0, i32 0
  %225 = load %struct.xpvio*, %struct.xpvio** %sv_any395, align 8
  %xiv_u396 = getelementptr inbounds %struct.xpvio, %struct.xpvio* %225, i32 0, i32 4
  %xivu_iv397 = bitcast %union._xivu* %xiv_u396 to i64*
  %226 = load i64, i64* %xivu_iv397, align 8
  %cmp398 = icmp eq i64 %cond390, %226
  %conv399 = zext i1 %cmp398 to i32
  store i32 %conv399, i32* %flop, align 4
  br label %if.end448

if.else400:                                       ; preds = %cond.false377, %cond.true372
  %call401 = call %struct.gv* @Perl_gv_fetchpvn_flags(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7, i64 0, i64 0), i64 1, i32 129, i32 3)
  store %struct.gv* %call401, %struct.gv** %gv, align 8
  %227 = load %struct.gv*, %struct.gv** %gv, align 8
  %tobool402 = icmp ne %struct.gv* %227, null
  br i1 %tobool402, label %land.lhs.true403, label %if.end447

land.lhs.true403:                                 ; preds = %if.else400
  %228 = load %struct.gv*, %struct.gv** %gv, align 8
  %sv_u404 = getelementptr inbounds %struct.gv, %struct.gv* %228, i32 0, i32 3
  %svu_gp405 = bitcast %union.anon.4* %sv_u404 to %struct.gp**
  %229 = load %struct.gp*, %struct.gp** %svu_gp405, align 8
  %add.ptr406 = getelementptr inbounds %struct.gp, %struct.gp* %229, i64 0
  %gp_sv = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr406, i32 0, i32 0
  %230 = load %struct.sv*, %struct.sv** %gp_sv, align 8
  %tobool407 = icmp ne %struct.sv* %230, null
  br i1 %tobool407, label %if.then408, label %if.end447

if.then408:                                       ; preds = %land.lhs.true403
  %231 = load %struct.sv*, %struct.sv** %sv352, align 8
  %sv_flags409 = getelementptr inbounds %struct.sv, %struct.sv* %231, i32 0, i32 2
  %232 = load i32, i32* %sv_flags409, align 4
  %and410 = and i32 %232, 2097408
  %cmp411 = icmp eq i32 %and410, 256
  br i1 %cmp411, label %cond.true413, label %cond.false417

cond.true413:                                     ; preds = %if.then408
  %233 = load %struct.sv*, %struct.sv** %sv352, align 8
  %sv_any414 = getelementptr inbounds %struct.sv, %struct.sv* %233, i32 0, i32 0
  %234 = load i8*, i8** %sv_any414, align 8
  %235 = bitcast i8* %234 to %struct.xpviv*
  %xiv_u415 = getelementptr inbounds %struct.xpviv, %struct.xpviv* %235, i32 0, i32 4
  %xivu_iv416 = bitcast %union._xivu* %xiv_u415 to i64*
  %236 = load i64, i64* %xivu_iv416, align 8
  br label %cond.end419

cond.false417:                                    ; preds = %if.then408
  %237 = load %struct.sv*, %struct.sv** %sv352, align 8
  %call418 = call i64 @Perl_sv_2iv_flags(%struct.sv* %237, i32 2)
  br label %cond.end419

cond.end419:                                      ; preds = %cond.false417, %cond.true413
  %cond420 = phi i64 [ %236, %cond.true413 ], [ %call418, %cond.false417 ]
  %238 = load %struct.gv*, %struct.gv** %gv, align 8
  %sv_u421 = getelementptr inbounds %struct.gv, %struct.gv* %238, i32 0, i32 3
  %svu_gp422 = bitcast %union.anon.4* %sv_u421 to %struct.gp**
  %239 = load %struct.gp*, %struct.gp** %svu_gp422, align 8
  %add.ptr423 = getelementptr inbounds %struct.gp, %struct.gp* %239, i64 0
  %gp_sv424 = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr423, i32 0, i32 0
  %240 = load %struct.sv*, %struct.sv** %gp_sv424, align 8
  %sv_flags425 = getelementptr inbounds %struct.sv, %struct.sv* %240, i32 0, i32 2
  %241 = load i32, i32* %sv_flags425, align 4
  %and426 = and i32 %241, 2097408
  %cmp427 = icmp eq i32 %and426, 256
  br i1 %cmp427, label %cond.true429, label %cond.false437

cond.true429:                                     ; preds = %cond.end419
  %242 = load %struct.gv*, %struct.gv** %gv, align 8
  %sv_u430 = getelementptr inbounds %struct.gv, %struct.gv* %242, i32 0, i32 3
  %svu_gp431 = bitcast %union.anon.4* %sv_u430 to %struct.gp**
  %243 = load %struct.gp*, %struct.gp** %svu_gp431, align 8
  %add.ptr432 = getelementptr inbounds %struct.gp, %struct.gp* %243, i64 0
  %gp_sv433 = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr432, i32 0, i32 0
  %244 = load %struct.sv*, %struct.sv** %gp_sv433, align 8
  %sv_any434 = getelementptr inbounds %struct.sv, %struct.sv* %244, i32 0, i32 0
  %245 = load i8*, i8** %sv_any434, align 8
  %246 = bitcast i8* %245 to %struct.xpviv*
  %xiv_u435 = getelementptr inbounds %struct.xpviv, %struct.xpviv* %246, i32 0, i32 4
  %xivu_iv436 = bitcast %union._xivu* %xiv_u435 to i64*
  %247 = load i64, i64* %xivu_iv436, align 8
  br label %cond.end443

cond.false437:                                    ; preds = %cond.end419
  %248 = load %struct.gv*, %struct.gv** %gv, align 8
  %sv_u438 = getelementptr inbounds %struct.gv, %struct.gv* %248, i32 0, i32 3
  %svu_gp439 = bitcast %union.anon.4* %sv_u438 to %struct.gp**
  %249 = load %struct.gp*, %struct.gp** %svu_gp439, align 8
  %add.ptr440 = getelementptr inbounds %struct.gp, %struct.gp* %249, i64 0
  %gp_sv441 = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr440, i32 0, i32 0
  %250 = load %struct.sv*, %struct.sv** %gp_sv441, align 8
  %call442 = call i64 @Perl_sv_2iv_flags(%struct.sv* %250, i32 2)
  br label %cond.end443

cond.end443:                                      ; preds = %cond.false437, %cond.true429
  %cond444 = phi i64 [ %247, %cond.true429 ], [ %call442, %cond.false437 ]
  %cmp445 = icmp eq i64 %cond420, %cond444
  %conv446 = zext i1 %cmp445 to i32
  store i32 %conv446, i32* %flop, align 4
  br label %if.end447

if.end447:                                        ; preds = %cond.end443, %land.lhs.true403, %if.else400
  br label %if.end448

if.end448:                                        ; preds = %if.end447, %cond.end389
  br label %if.end549

if.else449:                                       ; preds = %if.else351
  %251 = load %struct.sv*, %struct.sv** %sv352, align 8
  %tobool450 = icmp ne %struct.sv* %251, null
  br i1 %tobool450, label %cond.true451, label %cond.false452

cond.true451:                                     ; preds = %if.else449
  br i1 true, label %land.rhs453, label %land.end547

cond.false452:                                    ; preds = %if.else449
  br i1 false, label %land.rhs453, label %land.end547

land.rhs453:                                      ; preds = %cond.false452, %cond.true451
  %252 = load %struct.sv*, %struct.sv** %sv352, align 8
  %sv_flags454 = getelementptr inbounds %struct.sv, %struct.sv* %252, i32 0, i32 2
  %253 = load i32, i32* %sv_flags454, align 4
  %and455 = and i32 %253, 2097152
  %tobool456 = icmp ne i32 %and455, 0
  br i1 %tobool456, label %cond.true457, label %cond.false458

cond.true457:                                     ; preds = %land.rhs453
  br i1 true, label %cond.true459, label %cond.false462

cond.false458:                                    ; preds = %land.rhs453
  br i1 false, label %cond.true459, label %cond.false462

cond.true459:                                     ; preds = %cond.false458, %cond.true457
  %254 = load %struct.sv*, %struct.sv** %sv352, align 8
  %call460 = call zeroext i1 @Perl_sv_2bool_flags(%struct.sv* %254, i32 2)
  %conv461 = zext i1 %call460 to i32
  br label %cond.end544

cond.false462:                                    ; preds = %cond.false458, %cond.true457
  %255 = load %struct.sv*, %struct.sv** %sv352, align 8
  %sv_flags463 = getelementptr inbounds %struct.sv, %struct.sv* %255, i32 0, i32 2
  %256 = load i32, i32* %sv_flags463, align 4
  %and464 = and i32 %256, 65280
  %tobool465 = icmp ne i32 %and464, 0
  br i1 %tobool465, label %cond.false477, label %lor.lhs.false466

lor.lhs.false466:                                 ; preds = %cond.false462
  %257 = load %struct.sv*, %struct.sv** %sv352, align 8
  %sv_flags467 = getelementptr inbounds %struct.sv, %struct.sv* %257, i32 0, i32 2
  %258 = load i32, i32* %sv_flags467, align 4
  %and468 = and i32 %258, 255
  %cmp469 = icmp eq i32 %and468, 8
  br i1 %cmp469, label %cond.false477, label %lor.lhs.false471

lor.lhs.false471:                                 ; preds = %lor.lhs.false466
  %259 = load %struct.sv*, %struct.sv** %sv352, align 8
  %sv_flags472 = getelementptr inbounds %struct.sv, %struct.sv* %259, i32 0, i32 2
  %260 = load i32, i32* %sv_flags472, align 4
  %and473 = and i32 %260, 16826623
  %cmp474 = icmp eq i32 %and473, 16777226
  br i1 %cmp474, label %cond.false477, label %cond.true476

cond.true476:                                     ; preds = %lor.lhs.false471
  br label %cond.end542

cond.false477:                                    ; preds = %lor.lhs.false471, %lor.lhs.false466, %cond.false462
  %261 = load %struct.sv*, %struct.sv** %sv352, align 8
  %sv_flags478 = getelementptr inbounds %struct.sv, %struct.sv* %261, i32 0, i32 2
  %262 = load i32, i32* %sv_flags478, align 4
  %and479 = and i32 %262, 1024
  %tobool480 = icmp ne i32 %and479, 0
  br i1 %tobool480, label %cond.true481, label %cond.false502

cond.true481:                                     ; preds = %cond.false477
  %263 = load %struct.sv*, %struct.sv** %sv352, align 8
  %sv_any482 = getelementptr inbounds %struct.sv, %struct.sv* %263, i32 0, i32 0
  %264 = load i8*, i8** %sv_any482, align 8
  %265 = bitcast i8* %264 to %struct.xpv*
  %tobool483 = icmp ne %struct.xpv* %265, null
  br i1 %tobool483, label %land.rhs484, label %land.end500

land.rhs484:                                      ; preds = %cond.true481
  %266 = load %struct.sv*, %struct.sv** %sv352, align 8
  %sv_any485 = getelementptr inbounds %struct.sv, %struct.sv* %266, i32 0, i32 0
  %267 = load i8*, i8** %sv_any485, align 8
  %268 = bitcast i8* %267 to %struct.xpv*
  %xpv_cur486 = getelementptr inbounds %struct.xpv, %struct.xpv* %268, i32 0, i32 2
  %269 = load i64, i64* %xpv_cur486, align 8
  %cmp487 = icmp ugt i64 %269, 1
  br i1 %cmp487, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %land.rhs484
  %270 = load %struct.sv*, %struct.sv** %sv352, align 8
  %sv_any489 = getelementptr inbounds %struct.sv, %struct.sv* %270, i32 0, i32 0
  %271 = load i8*, i8** %sv_any489, align 8
  %272 = bitcast i8* %271 to %struct.xpv*
  %xpv_cur490 = getelementptr inbounds %struct.xpv, %struct.xpv* %272, i32 0, i32 2
  %273 = load i64, i64* %xpv_cur490, align 8
  %tobool491 = icmp ne i64 %273, 0
  br i1 %tobool491, label %land.rhs492, label %land.end498

land.rhs492:                                      ; preds = %lor.rhs
  %274 = load %struct.sv*, %struct.sv** %sv352, align 8
  %sv_u493 = getelementptr inbounds %struct.sv, %struct.sv* %274, i32 0, i32 3
  %svu_pv494 = bitcast %union.anon* %sv_u493 to i8**
  %275 = load i8*, i8** %svu_pv494, align 8
  %276 = load i8, i8* %275, align 1
  %conv495 = sext i8 %276 to i32
  %cmp496 = icmp ne i32 %conv495, 48
  br label %land.end498

land.end498:                                      ; preds = %land.rhs492, %lor.rhs
  %277 = phi i1 [ false, %lor.rhs ], [ %cmp496, %land.rhs492 ]
  br label %lor.end

lor.end:                                          ; preds = %land.end498, %land.rhs484
  %278 = phi i1 [ true, %land.rhs484 ], [ %277, %land.end498 ]
  br label %land.end500

land.end500:                                      ; preds = %lor.end, %cond.true481
  %279 = phi i1 [ false, %cond.true481 ], [ %278, %lor.end ]
  %land.ext501 = zext i1 %279 to i32
  br label %cond.end540

cond.false502:                                    ; preds = %cond.false477
  %280 = load %struct.sv*, %struct.sv** %sv352, align 8
  %sv_flags503 = getelementptr inbounds %struct.sv, %struct.sv* %280, i32 0, i32 2
  %281 = load i32, i32* %sv_flags503, align 4
  %and504 = and i32 %281, 768
  %tobool505 = icmp ne i32 %and504, 0
  br i1 %tobool505, label %cond.true506, label %cond.false535

cond.true506:                                     ; preds = %cond.false502
  %282 = load %struct.sv*, %struct.sv** %sv352, align 8
  %sv_flags507 = getelementptr inbounds %struct.sv, %struct.sv* %282, i32 0, i32 2
  %283 = load i32, i32* %sv_flags507, align 4
  %and508 = and i32 %283, 256
  %tobool509 = icmp ne i32 %and508, 0
  br i1 %tobool509, label %land.lhs.true510, label %lor.rhs516

land.lhs.true510:                                 ; preds = %cond.true506
  %284 = load %struct.sv*, %struct.sv** %sv352, align 8
  %sv_any511 = getelementptr inbounds %struct.sv, %struct.sv* %284, i32 0, i32 0
  %285 = load i8*, i8** %sv_any511, align 8
  %286 = bitcast i8* %285 to %struct.xpviv*
  %xiv_u512 = getelementptr inbounds %struct.xpviv, %struct.xpviv* %286, i32 0, i32 4
  %xivu_iv513 = bitcast %union._xivu* %xiv_u512 to i64*
  %287 = load i64, i64* %xivu_iv513, align 8
  %cmp514 = icmp ne i64 %287, 0
  br i1 %cmp514, label %lor.end534, label %lor.rhs516

lor.rhs516:                                       ; preds = %land.lhs.true510, %cond.true506
  %288 = load %struct.sv*, %struct.sv** %sv352, align 8
  %sv_flags517 = getelementptr inbounds %struct.sv, %struct.sv* %288, i32 0, i32 2
  %289 = load i32, i32* %sv_flags517, align 4
  %and518 = and i32 %289, 512
  %tobool519 = icmp ne i32 %and518, 0
  br i1 %tobool519, label %land.rhs520, label %land.end532

land.rhs520:                                      ; preds = %lor.rhs516
  %290 = load %struct.sv*, %struct.sv** %sv352, align 8
  %sv_any521 = getelementptr inbounds %struct.sv, %struct.sv* %290, i32 0, i32 0
  %291 = load i8*, i8** %sv_any521, align 8
  %292 = bitcast i8* %291 to %struct.xpvnv*
  %xnv_u522 = getelementptr inbounds %struct.xpvnv, %struct.xpvnv* %292, i32 0, i32 5
  %xnv_nv523 = bitcast %union._xnvu* %xnv_u522 to double*
  %293 = load double, double* %xnv_nv523, align 8
  %cmp524 = fcmp uno double %293, %293
  br i1 %cmp524, label %lor.end531, label %lor.rhs525

lor.rhs525:                                       ; preds = %land.rhs520
  %294 = load %struct.sv*, %struct.sv** %sv352, align 8
  %sv_any526 = getelementptr inbounds %struct.sv, %struct.sv* %294, i32 0, i32 0
  %295 = load i8*, i8** %sv_any526, align 8
  %296 = bitcast i8* %295 to %struct.xpvnv*
  %xnv_u527 = getelementptr inbounds %struct.xpvnv, %struct.xpvnv* %296, i32 0, i32 5
  %xnv_nv528 = bitcast %union._xnvu* %xnv_u527 to double*
  %297 = load double, double* %xnv_nv528, align 8
  %cmp529 = fcmp une double %297, 0.000000e+00
  br label %lor.end531

lor.end531:                                       ; preds = %lor.rhs525, %land.rhs520
  %298 = phi i1 [ true, %land.rhs520 ], [ %cmp529, %lor.rhs525 ]
  br label %land.end532

land.end532:                                      ; preds = %lor.end531, %lor.rhs516
  %299 = phi i1 [ false, %lor.rhs516 ], [ %298, %lor.end531 ]
  br label %lor.end534

lor.end534:                                       ; preds = %land.end532, %land.lhs.true510
  %300 = phi i1 [ true, %land.lhs.true510 ], [ %299, %land.end532 ]
  %lor.ext = zext i1 %300 to i32
  br label %cond.end538

cond.false535:                                    ; preds = %cond.false502
  %301 = load %struct.sv*, %struct.sv** %sv352, align 8
  %call536 = call zeroext i1 @Perl_sv_2bool_flags(%struct.sv* %301, i32 0)
  %conv537 = zext i1 %call536 to i32
  br label %cond.end538

cond.end538:                                      ; preds = %cond.false535, %lor.end534
  %cond539 = phi i32 [ %lor.ext, %lor.end534 ], [ %conv537, %cond.false535 ]
  br label %cond.end540

cond.end540:                                      ; preds = %cond.end538, %land.end500
  %cond541 = phi i32 [ %land.ext501, %land.end500 ], [ %cond539, %cond.end538 ]
  br label %cond.end542

cond.end542:                                      ; preds = %cond.end540, %cond.true476
  %cond543 = phi i32 [ 0, %cond.true476 ], [ %cond541, %cond.end540 ]
  br label %cond.end544

cond.end544:                                      ; preds = %cond.end542, %cond.true459
  %cond545 = phi i32 [ %conv461, %cond.true459 ], [ %cond543, %cond.end542 ]
  %tobool546 = icmp ne i32 %cond545, 0
  br label %land.end547

land.end547:                                      ; preds = %cond.end544, %cond.false452, %cond.true451
  %302 = phi i1 [ false, %cond.false452 ], [ false, %cond.true451 ], [ %tobool546, %cond.end544 ]
  %land.ext548 = zext i1 %302 to i32
  store i32 %land.ext548, i32* %flop, align 4
  br label %if.end549

if.end549:                                        ; preds = %land.end547, %if.end448
  %303 = load i32, i32* %flop, align 4
  %tobool550 = icmp ne i32 %303, 0
  br i1 %tobool550, label %if.then551, label %if.end556

if.then551:                                       ; preds = %if.end549
  %304 = load %struct.sv**, %struct.sv*** @PL_curpad, align 8
  %305 = load %struct.op*, %struct.op** @PL_op, align 8
  %306 = bitcast %struct.op* %305 to %struct.unop*
  %op_first552 = getelementptr inbounds %struct.unop, %struct.unop* %306, i32 0, i32 7
  %307 = load %struct.op*, %struct.op** %op_first552, align 8
  %308 = bitcast %struct.op* %307 to %struct.unop*
  %op_first553 = getelementptr inbounds %struct.unop, %struct.unop* %308, i32 0, i32 7
  %309 = load %struct.op*, %struct.op** %op_first553, align 8
  %op_targ554 = getelementptr inbounds %struct.op, %struct.op* %309, i32 0, i32 3
  %310 = load i64, i64* %op_targ554, align 8
  %arrayidx555 = getelementptr inbounds %struct.sv*, %struct.sv** %304, i64 %310
  %311 = load %struct.sv*, %struct.sv** %arrayidx555, align 8
  call void @Perl_sv_setiv(%struct.sv* %311, i64 0)
  %312 = load %struct.sv*, %struct.sv** %targ, align 8
  call void @Perl_sv_catpvn_flags(%struct.sv* %312, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.11, i64 0, i64 0), i64 2, i32 2)
  br label %if.end556

if.end556:                                        ; preds = %if.then551, %if.end549
  %313 = load %struct.sv*, %struct.sv** %targ, align 8
  %314 = load %struct.sv**, %struct.sv*** %sp, align 8
  store %struct.sv* %313, %struct.sv** %314, align 8
  br label %if.end557

if.end557:                                        ; preds = %if.end556, %if.end350
  %315 = load %struct.sv**, %struct.sv*** %sp, align 8
  store %struct.sv** %315, %struct.sv*** @PL_stack_sp, align 8
  %316 = load %struct.op*, %struct.op** @PL_op, align 8
  %op_next = getelementptr inbounds %struct.op, %struct.op* %316, i32 0, i32 0
  %317 = load %struct.op*, %struct.op** %op_next, align 8
  store %struct.op* %317, %struct.op** %retval, align 8
  br label %return

return:                                           ; preds = %if.end557, %if.then211
  %318 = load %struct.op*, %struct.op** %retval, align 8
  ret %struct.op* %318
}

declare dso_local i32 @Perl_looks_like_number(%struct.sv*) #1

declare dso_local i64 @Perl_sv_2uv_flags(%struct.sv*, i32) #1

declare dso_local void @Perl_croak(i8*, ...) #1

declare dso_local %struct.sv* @Perl_sv_2mortal(%struct.sv*) #1

declare dso_local %struct.sv* @Perl_newSViv(i64) #1

; Function Attrs: nounwind readonly
declare dso_local i32 @strcmp(i8*, i8*) #3

declare dso_local %struct.sv* @Perl_newSVsv(%struct.sv*) #1

declare dso_local void @Perl_sv_inc(%struct.sv*) #1

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @Perl_dowantarray() #0 {
entry:
  %gimme = alloca i32, align 4
  %call = call i32 @Perl_block_gimme()
  store i32 %call, i32* %gimme, align 4
  %0 = load i32, i32* %gimme, align 4
  %cmp = icmp eq i32 %0, 1
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  br label %cond.end

cond.false:                                       ; preds = %entry
  %1 = load i32, i32* %gimme, align 4
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 2, %cond.true ], [ %1, %cond.false ]
  ret i32 %cond
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @Perl_is_lvalue_sub() #0 {
entry:
  %retval = alloca i32, align 4
  %cxix = alloca i32, align 4
  %0 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %si_cxstack = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %0, i32 0, i32 1
  %1 = load %struct.context*, %struct.context** %si_cxstack, align 8
  %2 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %si_cxix = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %2, i32 0, i32 4
  %3 = load i32, i32* %si_cxix, align 8
  %call = call i32 @S_dopoptosub_at(%struct.context* %1, i32 %3)
  store i32 %call, i32* %cxix, align 4
  %4 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %si_cxstack1 = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %4, i32 0, i32 1
  %5 = load %struct.context*, %struct.context** %si_cxstack1, align 8
  %6 = load i32, i32* %cxix, align 4
  %idx.ext = sext i32 %6 to i64
  %add.ptr = getelementptr inbounds %struct.context, %struct.context* %5, i64 %idx.ext
  %cx_u = getelementptr inbounds %struct.context, %struct.context* %add.ptr, i32 0, i32 0
  %cx_blk = bitcast %union.anon.16* %cx_u to %struct.block*
  %blku_u16 = getelementptr inbounds %struct.block, %struct.block* %cx_blk, i32 0, i32 2
  %7 = load i16, i16* %blku_u16, align 2
  %conv = zext i16 %7 to i32
  %and = and i32 %conv, 255
  %add = add nsw i32 0, %and
  %tobool = icmp ne i32 %add, 0
  br i1 %tobool, label %land.lhs.true, label %if.else

land.lhs.true:                                    ; preds = %entry
  %8 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %si_cxstack2 = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %8, i32 0, i32 1
  %9 = load %struct.context*, %struct.context** %si_cxstack2, align 8
  %10 = load i32, i32* %cxix, align 4
  %idxprom = sext i32 %10 to i64
  %arrayidx = getelementptr inbounds %struct.context, %struct.context* %9, i64 %idxprom
  %cx_u3 = getelementptr inbounds %struct.context, %struct.context* %arrayidx, i32 0, i32 0
  %cx_blk4 = bitcast %union.anon.16* %cx_u3 to %struct.block*
  %blk_u = getelementptr inbounds %struct.block, %struct.block* %cx_blk4, i32 0, i32 8
  %blku_sub = bitcast %union.anon.20* %blk_u to %struct.block_sub*
  %cv = getelementptr inbounds %struct.block_sub, %struct.block_sub* %blku_sub, i32 0, i32 1
  %11 = load %struct.cv*, %struct.cv** %cv, align 8
  %sv_any = getelementptr inbounds %struct.cv, %struct.cv* %11, i32 0, i32 0
  %12 = load %struct.xpvcv*, %struct.xpvcv** %sv_any, align 8
  %13 = bitcast %struct.xpvcv* %12 to i8*
  %14 = bitcast i8* %13 to %struct.xpvcv*
  %xcv_flags = getelementptr inbounds %struct.xpvcv, %struct.xpvcv* %14, i32 0, i32 12
  %15 = load i32, i32* %xcv_flags, align 4
  %and5 = and i32 %15, 2
  %tobool6 = icmp ne i32 %and5, 0
  br i1 %tobool6, label %if.then, label %if.else

if.then:                                          ; preds = %land.lhs.true
  %16 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %si_cxstack7 = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %16, i32 0, i32 1
  %17 = load %struct.context*, %struct.context** %si_cxstack7, align 8
  %18 = load i32, i32* %cxix, align 4
  %idx.ext8 = sext i32 %18 to i64
  %add.ptr9 = getelementptr inbounds %struct.context, %struct.context* %17, i64 %idx.ext8
  %cx_u10 = getelementptr inbounds %struct.context, %struct.context* %add.ptr9, i32 0, i32 0
  %cx_blk11 = bitcast %union.anon.16* %cx_u10 to %struct.block*
  %blku_u1612 = getelementptr inbounds %struct.block, %struct.block* %cx_blk11, i32 0, i32 2
  %19 = load i16, i16* %blku_u1612, align 2
  %conv13 = zext i16 %19 to i32
  %and14 = and i32 %conv13, 255
  %add15 = add nsw i32 0, %and14
  store i32 %add15, i32* %retval, align 4
  br label %return

if.else:                                          ; preds = %land.lhs.true, %entry
  store i32 0, i32* %retval, align 4
  br label %return

return:                                           ; preds = %if.else, %if.then
  %20 = load i32, i32* %retval, align 4
  ret i32 %20
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @Perl_was_lvalue_sub() #0 {
entry:
  %retval = alloca i32, align 4
  %cxix = alloca i32, align 4
  %0 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %si_cxstack = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %0, i32 0, i32 1
  %1 = load %struct.context*, %struct.context** %si_cxstack, align 8
  %2 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %si_cxix = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %2, i32 0, i32 4
  %3 = load i32, i32* %si_cxix, align 8
  %sub = sub nsw i32 %3, 1
  %call = call i32 @S_dopoptosub_at(%struct.context* %1, i32 %sub)
  store i32 %call, i32* %cxix, align 4
  %4 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %si_cxstack1 = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %4, i32 0, i32 1
  %5 = load %struct.context*, %struct.context** %si_cxstack1, align 8
  %6 = load i32, i32* %cxix, align 4
  %idx.ext = sext i32 %6 to i64
  %add.ptr = getelementptr inbounds %struct.context, %struct.context* %5, i64 %idx.ext
  %cx_u = getelementptr inbounds %struct.context, %struct.context* %add.ptr, i32 0, i32 0
  %cx_blk = bitcast %union.anon.16* %cx_u to %struct.block*
  %blku_u16 = getelementptr inbounds %struct.block, %struct.block* %cx_blk, i32 0, i32 2
  %7 = load i16, i16* %blku_u16, align 2
  %conv = zext i16 %7 to i32
  %and = and i32 %conv, 255
  %add = add nsw i32 0, %and
  %tobool = icmp ne i32 %add, 0
  br i1 %tobool, label %land.lhs.true, label %if.else

land.lhs.true:                                    ; preds = %entry
  %8 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %si_cxstack2 = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %8, i32 0, i32 1
  %9 = load %struct.context*, %struct.context** %si_cxstack2, align 8
  %10 = load i32, i32* %cxix, align 4
  %idxprom = sext i32 %10 to i64
  %arrayidx = getelementptr inbounds %struct.context, %struct.context* %9, i64 %idxprom
  %cx_u3 = getelementptr inbounds %struct.context, %struct.context* %arrayidx, i32 0, i32 0
  %cx_blk4 = bitcast %union.anon.16* %cx_u3 to %struct.block*
  %blk_u = getelementptr inbounds %struct.block, %struct.block* %cx_blk4, i32 0, i32 8
  %blku_sub = bitcast %union.anon.20* %blk_u to %struct.block_sub*
  %cv = getelementptr inbounds %struct.block_sub, %struct.block_sub* %blku_sub, i32 0, i32 1
  %11 = load %struct.cv*, %struct.cv** %cv, align 8
  %sv_any = getelementptr inbounds %struct.cv, %struct.cv* %11, i32 0, i32 0
  %12 = load %struct.xpvcv*, %struct.xpvcv** %sv_any, align 8
  %13 = bitcast %struct.xpvcv* %12 to i8*
  %14 = bitcast i8* %13 to %struct.xpvcv*
  %xcv_flags = getelementptr inbounds %struct.xpvcv, %struct.xpvcv* %14, i32 0, i32 12
  %15 = load i32, i32* %xcv_flags, align 4
  %and5 = and i32 %15, 2
  %tobool6 = icmp ne i32 %and5, 0
  br i1 %tobool6, label %if.then, label %if.else

if.then:                                          ; preds = %land.lhs.true
  %16 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %si_cxstack7 = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %16, i32 0, i32 1
  %17 = load %struct.context*, %struct.context** %si_cxstack7, align 8
  %18 = load i32, i32* %cxix, align 4
  %idx.ext8 = sext i32 %18 to i64
  %add.ptr9 = getelementptr inbounds %struct.context, %struct.context* %17, i64 %idx.ext8
  %cx_u10 = getelementptr inbounds %struct.context, %struct.context* %add.ptr9, i32 0, i32 0
  %cx_blk11 = bitcast %union.anon.16* %cx_u10 to %struct.block*
  %blku_u1612 = getelementptr inbounds %struct.block, %struct.block* %cx_blk11, i32 0, i32 2
  %19 = load i16, i16* %blku_u1612, align 2
  %conv13 = zext i16 %19 to i32
  %and14 = and i32 %conv13, 255
  %add15 = add nsw i32 0, %and14
  store i32 %add15, i32* %retval, align 4
  br label %return

if.else:                                          ; preds = %land.lhs.true, %entry
  store i32 0, i32* %retval, align 4
  br label %return

return:                                           ; preds = %if.else, %if.then
  %20 = load i32, i32* %retval, align 4
  ret i32 %20
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @Perl_dounwind(i32 %cxix) #0 {
entry:
  %cxix.addr = alloca i32, align 4
  %optype = alloca i32, align 4
  %sv = alloca %struct.sv*, align 8
  %cx = alloca %struct.context*, align 8
  %olddepth = alloca i32, align 4
  %fill = alloca i64, align 8
  %cv261 = alloca %struct.cv*, align 8
  %dfuot = alloca %struct.gv*, align 8
  store i32 %cxix, i32* %cxix.addr, align 4
  %0 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %tobool = icmp ne %struct.stackinfo* %0, null
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  br label %return

if.end:                                           ; preds = %entry
  br label %while.cond

while.cond:                                       ; preds = %sw.epilog, %sw.bb, %if.end
  %1 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %si_cxix = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %1, i32 0, i32 4
  %2 = load i32, i32* %si_cxix, align 8
  %3 = load i32, i32* %cxix.addr, align 4
  %cmp = icmp sgt i32 %2, %3
  br i1 %cmp, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %4 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %si_cxstack = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %4, i32 0, i32 1
  %5 = load %struct.context*, %struct.context** %si_cxstack, align 8
  %6 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %si_cxix1 = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %6, i32 0, i32 4
  %7 = load i32, i32* %si_cxix1, align 8
  %idxprom = sext i32 %7 to i64
  %arrayidx = getelementptr inbounds %struct.context, %struct.context* %5, i64 %idxprom
  store %struct.context* %arrayidx, %struct.context** %cx, align 8
  %8 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u = getelementptr inbounds %struct.context, %struct.context* %8, i32 0, i32 0
  %cx_subst = bitcast %union.anon.16* %cx_u to %struct.subst*
  %sbu_type = getelementptr inbounds %struct.subst, %struct.subst* %cx_subst, i32 0, i32 0
  %9 = load i8, i8* %sbu_type, align 8
  %conv = zext i8 %9 to i32
  %and = and i32 %conv, 15
  switch i32 %and, label %sw.epilog [
    i32 11, label %sw.bb
    i32 8, label %sw.bb10
    i32 10, label %sw.bb166
    i32 7, label %sw.bb217
    i32 6, label %sw.bb217
    i32 4, label %sw.bb217
    i32 5, label %sw.bb217
    i32 0, label %sw.bb251
    i32 9, label %sw.bb252
  ]

sw.bb:                                            ; preds = %while.body
  %10 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %si_cxstack2 = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %10, i32 0, i32 1
  %11 = load %struct.context*, %struct.context** %si_cxstack2, align 8
  %12 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %si_cxix3 = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %12, i32 0, i32 4
  %13 = load i32, i32* %si_cxix3, align 8
  %dec = add nsw i32 %13, -1
  store i32 %dec, i32* %si_cxix3, align 8
  %idxprom4 = sext i32 %13 to i64
  %arrayidx5 = getelementptr inbounds %struct.context, %struct.context* %11, i64 %idxprom4
  store %struct.context* %arrayidx5, %struct.context** %cx, align 8
  %14 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u6 = getelementptr inbounds %struct.context, %struct.context* %14, i32 0, i32 0
  %cx_subst7 = bitcast %union.anon.16* %cx_u6 to %struct.subst*
  %sbu_rxres = getelementptr inbounds %struct.subst, %struct.subst* %cx_subst7, i32 0, i32 12
  call void @S_rxres_free(i8** %sbu_rxres)
  %15 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u8 = getelementptr inbounds %struct.context, %struct.context* %15, i32 0, i32 0
  %cx_subst9 = bitcast %union.anon.16* %cx_u8 to %struct.subst*
  %sbu_rx = getelementptr inbounds %struct.subst, %struct.subst* %cx_subst9, i32 0, i32 13
  %16 = load %struct.p5rx*, %struct.p5rx** %sbu_rx, align 8
  %17 = bitcast %struct.p5rx* %16 to i8*
  %18 = bitcast i8* %17 to %struct.sv*
  call void @S_SvREFCNT_dec(%struct.sv* %18)
  br label %while.cond

sw.bb10:                                          ; preds = %while.body
  br label %do.body

do.body:                                          ; preds = %sw.bb10
  %19 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u11 = getelementptr inbounds %struct.context, %struct.context* %19, i32 0, i32 0
  %cx_blk = bitcast %union.anon.16* %cx_u11 to %struct.block*
  %blk_u = getelementptr inbounds %struct.block, %struct.block* %cx_blk, i32 0, i32 8
  %blku_sub = bitcast %union.anon.20* %blk_u to %struct.block_sub*
  %olddepth12 = getelementptr inbounds %struct.block_sub, %struct.block_sub* %blku_sub, i32 0, i32 4
  %20 = load i32, i32* %olddepth12, align 8
  store i32 %20, i32* %olddepth, align 4
  %21 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u13 = getelementptr inbounds %struct.context, %struct.context* %21, i32 0, i32 0
  %cx_blk14 = bitcast %union.anon.16* %cx_u13 to %struct.block*
  %blku_u16 = getelementptr inbounds %struct.block, %struct.block* %cx_blk14, i32 0, i32 2
  %22 = load i16, i16* %blku_u16, align 2
  %conv15 = zext i16 %22 to i32
  %and16 = and i32 %conv15, 256
  %tobool17 = icmp ne i32 %and16, 0
  br i1 %tobool17, label %if.end137, label %if.then18

if.then18:                                        ; preds = %do.body
  %23 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u19 = getelementptr inbounds %struct.context, %struct.context* %23, i32 0, i32 0
  %cx_blk20 = bitcast %union.anon.16* %cx_u19 to %struct.block*
  %blku_u1621 = getelementptr inbounds %struct.block, %struct.block* %cx_blk20, i32 0, i32 2
  %24 = load i16, i16* %blku_u1621, align 2
  %conv22 = zext i16 %24 to i32
  %or = or i32 %conv22, 256
  %conv23 = trunc i32 %or to i16
  store i16 %conv23, i16* %blku_u1621, align 2
  %25 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u24 = getelementptr inbounds %struct.context, %struct.context* %25, i32 0, i32 0
  %cx_subst25 = bitcast %union.anon.16* %cx_u24 to %struct.subst*
  %sbu_type26 = getelementptr inbounds %struct.subst, %struct.subst* %cx_subst25, i32 0, i32 0
  %26 = load i8, i8* %sbu_type26, align 8
  %conv27 = zext i8 %26 to i32
  %and28 = and i32 %conv27, 32
  %cmp29 = icmp eq i32 %and28, 32
  br i1 %cmp29, label %if.then31, label %if.end136

if.then31:                                        ; preds = %if.then18
  br label %do.body32

do.body32:                                        ; preds = %if.then31
  %27 = load %struct.gv*, %struct.gv** @PL_defgv, align 8
  %sv_u = getelementptr inbounds %struct.gv, %struct.gv* %27, i32 0, i32 3
  %svu_gp = bitcast %union.anon.4* %sv_u to %struct.gp**
  %28 = load %struct.gp*, %struct.gp** %svu_gp, align 8
  %add.ptr = getelementptr inbounds %struct.gp, %struct.gp* %28, i64 0
  %gp_av = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr, i32 0, i32 6
  %29 = load %struct.av*, %struct.av** %gp_av, align 8
  %30 = bitcast %struct.av* %29 to i8*
  %31 = bitcast i8* %30 to %struct.sv*
  call void @S_SvREFCNT_dec(%struct.sv* %31)
  %32 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u33 = getelementptr inbounds %struct.context, %struct.context* %32, i32 0, i32 0
  %cx_blk34 = bitcast %union.anon.16* %cx_u33 to %struct.block*
  %blk_u35 = getelementptr inbounds %struct.block, %struct.block* %cx_blk34, i32 0, i32 8
  %blku_sub36 = bitcast %union.anon.20* %blk_u35 to %struct.block_sub*
  %savearray = getelementptr inbounds %struct.block_sub, %struct.block_sub* %blku_sub36, i32 0, i32 2
  %33 = load %struct.av*, %struct.av** %savearray, align 8
  %34 = load %struct.gv*, %struct.gv** @PL_defgv, align 8
  %sv_u37 = getelementptr inbounds %struct.gv, %struct.gv* %34, i32 0, i32 3
  %svu_gp38 = bitcast %union.anon.4* %sv_u37 to %struct.gp**
  %35 = load %struct.gp*, %struct.gp** %svu_gp38, align 8
  %add.ptr39 = getelementptr inbounds %struct.gp, %struct.gp* %35, i64 0
  %gp_av40 = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr39, i32 0, i32 6
  store %struct.av* %33, %struct.av** %gp_av40, align 8
  br label %do.end

do.end:                                           ; preds = %do.body32
  %36 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u41 = getelementptr inbounds %struct.context, %struct.context* %36, i32 0, i32 0
  %cx_blk42 = bitcast %union.anon.16* %cx_u41 to %struct.block*
  %blk_u43 = getelementptr inbounds %struct.block, %struct.block* %cx_blk42, i32 0, i32 8
  %blku_sub44 = bitcast %union.anon.20* %blk_u43 to %struct.block_sub*
  %argarray = getelementptr inbounds %struct.block_sub, %struct.block_sub* %blku_sub44, i32 0, i32 3
  %37 = load %struct.av*, %struct.av** %argarray, align 8
  %sv_flags = getelementptr inbounds %struct.av, %struct.av* %37, i32 0, i32 2
  %38 = load i32, i32* %sv_flags, align 4
  %and45 = and i32 %38, 1073741824
  %tobool46 = icmp ne i32 %and45, 0
  br i1 %tobool46, label %if.then47, label %if.else

if.then47:                                        ; preds = %do.end
  %39 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u48 = getelementptr inbounds %struct.context, %struct.context* %39, i32 0, i32 0
  %cx_blk49 = bitcast %union.anon.16* %cx_u48 to %struct.block*
  %blk_u50 = getelementptr inbounds %struct.block, %struct.block* %cx_blk49, i32 0, i32 8
  %blku_sub51 = bitcast %union.anon.20* %blk_u50 to %struct.block_sub*
  %argarray52 = getelementptr inbounds %struct.block_sub, %struct.block_sub* %blku_sub51, i32 0, i32 3
  %40 = load %struct.av*, %struct.av** %argarray52, align 8
  %sv_any = getelementptr inbounds %struct.av, %struct.av* %40, i32 0, i32 0
  %41 = load %struct.xpvav*, %struct.xpvav** %sv_any, align 8
  %xav_fill = getelementptr inbounds %struct.xpvav, %struct.xpvav* %41, i32 0, i32 2
  %42 = load i64, i64* %xav_fill, align 8
  store i64 %42, i64* %fill, align 8
  %43 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u53 = getelementptr inbounds %struct.context, %struct.context* %43, i32 0, i32 0
  %cx_blk54 = bitcast %union.anon.16* %cx_u53 to %struct.block*
  %blk_u55 = getelementptr inbounds %struct.block, %struct.block* %cx_blk54, i32 0, i32 8
  %blku_sub56 = bitcast %union.anon.20* %blk_u55 to %struct.block_sub*
  %argarray57 = getelementptr inbounds %struct.block_sub, %struct.block_sub* %blku_sub56, i32 0, i32 3
  %44 = load %struct.av*, %struct.av** %argarray57, align 8
  %45 = bitcast %struct.av* %44 to i8*
  %46 = bitcast i8* %45 to %struct.sv*
  call void @S_SvREFCNT_dec_NN(%struct.sv* %46)
  %call = call %struct.sv* @Perl_newSV_type(i32 11)
  %47 = bitcast %struct.sv* %call to i8*
  %48 = bitcast i8* %47 to %struct.av*
  %49 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u58 = getelementptr inbounds %struct.context, %struct.context* %49, i32 0, i32 0
  %cx_blk59 = bitcast %union.anon.16* %cx_u58 to %struct.block*
  %blk_u60 = getelementptr inbounds %struct.block, %struct.block* %cx_blk59, i32 0, i32 8
  %blku_sub61 = bitcast %union.anon.20* %blk_u60 to %struct.block_sub*
  %argarray62 = getelementptr inbounds %struct.block_sub, %struct.block_sub* %blku_sub61, i32 0, i32 3
  store %struct.av* %48, %struct.av** %argarray62, align 8
  %50 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u63 = getelementptr inbounds %struct.context, %struct.context* %50, i32 0, i32 0
  %cx_blk64 = bitcast %union.anon.16* %cx_u63 to %struct.block*
  %blk_u65 = getelementptr inbounds %struct.block, %struct.block* %cx_blk64, i32 0, i32 8
  %blku_sub66 = bitcast %union.anon.20* %blk_u65 to %struct.block_sub*
  %argarray67 = getelementptr inbounds %struct.block_sub, %struct.block_sub* %blku_sub66, i32 0, i32 3
  %51 = load %struct.av*, %struct.av** %argarray67, align 8
  %52 = load i64, i64* %fill, align 8
  call void @Perl_av_extend(%struct.av* %51, i64 %52)
  %53 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u68 = getelementptr inbounds %struct.context, %struct.context* %53, i32 0, i32 0
  %cx_blk69 = bitcast %union.anon.16* %cx_u68 to %struct.block*
  %blk_u70 = getelementptr inbounds %struct.block, %struct.block* %cx_blk69, i32 0, i32 8
  %blku_sub71 = bitcast %union.anon.20* %blk_u70 to %struct.block_sub*
  %argarray72 = getelementptr inbounds %struct.block_sub, %struct.block_sub* %blku_sub71, i32 0, i32 3
  %54 = load %struct.av*, %struct.av** %argarray72, align 8
  %sv_flags73 = getelementptr inbounds %struct.av, %struct.av* %54, i32 0, i32 2
  %55 = load i32, i32* %sv_flags73, align 4
  %and74 = and i32 %55, -1073741825
  store i32 %and74, i32* %sv_flags73, align 4
  %56 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u75 = getelementptr inbounds %struct.context, %struct.context* %56, i32 0, i32 0
  %cx_blk76 = bitcast %union.anon.16* %cx_u75 to %struct.block*
  %blk_u77 = getelementptr inbounds %struct.block, %struct.block* %cx_blk76, i32 0, i32 8
  %blku_sub78 = bitcast %union.anon.20* %blk_u77 to %struct.block_sub*
  %argarray79 = getelementptr inbounds %struct.block_sub, %struct.block_sub* %blku_sub78, i32 0, i32 3
  %57 = load %struct.av*, %struct.av** %argarray79, align 8
  %sv_flags80 = getelementptr inbounds %struct.av, %struct.av* %57, i32 0, i32 2
  %58 = load i32, i32* %sv_flags80, align 4
  %or81 = or i32 %58, -2147483648
  store i32 %or81, i32* %sv_flags80, align 4
  %59 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u82 = getelementptr inbounds %struct.context, %struct.context* %59, i32 0, i32 0
  %cx_blk83 = bitcast %union.anon.16* %cx_u82 to %struct.block*
  %blk_u84 = getelementptr inbounds %struct.block, %struct.block* %cx_blk83, i32 0, i32 8
  %blku_sub85 = bitcast %union.anon.20* %blk_u84 to %struct.block_sub*
  %argarray86 = getelementptr inbounds %struct.block_sub, %struct.block_sub* %blku_sub85, i32 0, i32 3
  %60 = load %struct.av*, %struct.av** %argarray86, align 8
  %61 = bitcast %struct.av* %60 to i8*
  %62 = bitcast i8* %61 to %struct.sv*
  %63 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u87 = getelementptr inbounds %struct.context, %struct.context* %63, i32 0, i32 0
  %cx_blk88 = bitcast %union.anon.16* %cx_u87 to %struct.block*
  %blk_u89 = getelementptr inbounds %struct.block, %struct.block* %cx_blk88, i32 0, i32 8
  %blku_sub90 = bitcast %union.anon.20* %blk_u89 to %struct.block_sub*
  %oldcomppad = getelementptr inbounds %struct.block_sub, %struct.block_sub* %blku_sub90, i32 0, i32 5
  %64 = load %struct.av*, %struct.av** %oldcomppad, align 8
  %65 = bitcast %struct.av* %64 to i8*
  %66 = bitcast i8* %65 to %struct.av*
  %sv_u91 = getelementptr inbounds %struct.av, %struct.av* %66, i32 0, i32 3
  %svu_array = bitcast %union.anon.0* %sv_u91 to %struct.sv***
  %67 = load %struct.sv**, %struct.sv*** %svu_array, align 8
  %arrayidx92 = getelementptr inbounds %struct.sv*, %struct.sv** %67, i64 0
  store %struct.sv* %62, %struct.sv** %arrayidx92, align 8
  br label %if.end135

if.else:                                          ; preds = %do.end
  br label %do.body93

do.body93:                                        ; preds = %if.else
  %68 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u94 = getelementptr inbounds %struct.context, %struct.context* %68, i32 0, i32 0
  %cx_blk95 = bitcast %union.anon.16* %cx_u94 to %struct.block*
  %blk_u96 = getelementptr inbounds %struct.block, %struct.block* %cx_blk95, i32 0, i32 8
  %blku_sub97 = bitcast %union.anon.20* %blk_u96 to %struct.block_sub*
  %argarray98 = getelementptr inbounds %struct.block_sub, %struct.block_sub* %blku_sub97, i32 0, i32 3
  %69 = load %struct.av*, %struct.av** %argarray98, align 8
  %sv_u99 = getelementptr inbounds %struct.av, %struct.av* %69, i32 0, i32 3
  %svu_array100 = bitcast %union.anon.0* %sv_u99 to %struct.sv***
  %70 = load %struct.sv**, %struct.sv*** %svu_array100, align 8
  %71 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u101 = getelementptr inbounds %struct.context, %struct.context* %71, i32 0, i32 0
  %cx_blk102 = bitcast %union.anon.16* %cx_u101 to %struct.block*
  %blk_u103 = getelementptr inbounds %struct.block, %struct.block* %cx_blk102, i32 0, i32 8
  %blku_sub104 = bitcast %union.anon.20* %blk_u103 to %struct.block_sub*
  %argarray105 = getelementptr inbounds %struct.block_sub, %struct.block_sub* %blku_sub104, i32 0, i32 3
  %72 = load %struct.av*, %struct.av** %argarray105, align 8
  %sv_any106 = getelementptr inbounds %struct.av, %struct.av* %72, i32 0, i32 0
  %73 = load %struct.xpvav*, %struct.xpvav** %sv_any106, align 8
  %xav_alloc = getelementptr inbounds %struct.xpvav, %struct.xpvav* %73, i32 0, i32 4
  %74 = load %struct.sv**, %struct.sv*** %xav_alloc, align 8
  %sub.ptr.lhs.cast = ptrtoint %struct.sv** %70 to i64
  %sub.ptr.rhs.cast = ptrtoint %struct.sv** %74 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 8
  %75 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u107 = getelementptr inbounds %struct.context, %struct.context* %75, i32 0, i32 0
  %cx_blk108 = bitcast %union.anon.16* %cx_u107 to %struct.block*
  %blk_u109 = getelementptr inbounds %struct.block, %struct.block* %cx_blk108, i32 0, i32 8
  %blku_sub110 = bitcast %union.anon.20* %blk_u109 to %struct.block_sub*
  %argarray111 = getelementptr inbounds %struct.block_sub, %struct.block_sub* %blku_sub110, i32 0, i32 3
  %76 = load %struct.av*, %struct.av** %argarray111, align 8
  %sv_any112 = getelementptr inbounds %struct.av, %struct.av* %76, i32 0, i32 0
  %77 = load %struct.xpvav*, %struct.xpvav** %sv_any112, align 8
  %xav_max = getelementptr inbounds %struct.xpvav, %struct.xpvav* %77, i32 0, i32 3
  %78 = load i64, i64* %xav_max, align 8
  %add = add nsw i64 %78, %sub.ptr.div
  store i64 %add, i64* %xav_max, align 8
  %79 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u113 = getelementptr inbounds %struct.context, %struct.context* %79, i32 0, i32 0
  %cx_blk114 = bitcast %union.anon.16* %cx_u113 to %struct.block*
  %blk_u115 = getelementptr inbounds %struct.block, %struct.block* %cx_blk114, i32 0, i32 8
  %blku_sub116 = bitcast %union.anon.20* %blk_u115 to %struct.block_sub*
  %argarray117 = getelementptr inbounds %struct.block_sub, %struct.block_sub* %blku_sub116, i32 0, i32 3
  %80 = load %struct.av*, %struct.av** %argarray117, align 8
  %sv_any118 = getelementptr inbounds %struct.av, %struct.av* %80, i32 0, i32 0
  %81 = load %struct.xpvav*, %struct.xpvav** %sv_any118, align 8
  %xav_alloc119 = getelementptr inbounds %struct.xpvav, %struct.xpvav* %81, i32 0, i32 4
  %82 = load %struct.sv**, %struct.sv*** %xav_alloc119, align 8
  %83 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u120 = getelementptr inbounds %struct.context, %struct.context* %83, i32 0, i32 0
  %cx_blk121 = bitcast %union.anon.16* %cx_u120 to %struct.block*
  %blk_u122 = getelementptr inbounds %struct.block, %struct.block* %cx_blk121, i32 0, i32 8
  %blku_sub123 = bitcast %union.anon.20* %blk_u122 to %struct.block_sub*
  %argarray124 = getelementptr inbounds %struct.block_sub, %struct.block_sub* %blku_sub123, i32 0, i32 3
  %84 = load %struct.av*, %struct.av** %argarray124, align 8
  %sv_u125 = getelementptr inbounds %struct.av, %struct.av* %84, i32 0, i32 3
  %svu_array126 = bitcast %union.anon.0* %sv_u125 to %struct.sv***
  store %struct.sv** %82, %struct.sv*** %svu_array126, align 8
  %85 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u127 = getelementptr inbounds %struct.context, %struct.context* %85, i32 0, i32 0
  %cx_blk128 = bitcast %union.anon.16* %cx_u127 to %struct.block*
  %blk_u129 = getelementptr inbounds %struct.block, %struct.block* %cx_blk128, i32 0, i32 8
  %blku_sub130 = bitcast %union.anon.20* %blk_u129 to %struct.block_sub*
  %argarray131 = getelementptr inbounds %struct.block_sub, %struct.block_sub* %blku_sub130, i32 0, i32 3
  %86 = load %struct.av*, %struct.av** %argarray131, align 8
  %sv_any132 = getelementptr inbounds %struct.av, %struct.av* %86, i32 0, i32 0
  %87 = load %struct.xpvav*, %struct.xpvav** %sv_any132, align 8
  %xav_fill133 = getelementptr inbounds %struct.xpvav, %struct.xpvav* %87, i32 0, i32 2
  store i64 -1, i64* %xav_fill133, align 8
  br label %do.end134

do.end134:                                        ; preds = %do.body93
  br label %if.end135

if.end135:                                        ; preds = %do.end134, %if.then47
  br label %if.end136

if.end136:                                        ; preds = %if.end135, %if.then18
  br label %if.end137

if.end137:                                        ; preds = %if.end136, %do.body
  %88 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u138 = getelementptr inbounds %struct.context, %struct.context* %88, i32 0, i32 0
  %cx_blk139 = bitcast %union.anon.16* %cx_u138 to %struct.block*
  %blk_u140 = getelementptr inbounds %struct.block, %struct.block* %cx_blk139, i32 0, i32 8
  %blku_sub141 = bitcast %union.anon.20* %blk_u140 to %struct.block_sub*
  %cv = getelementptr inbounds %struct.block_sub, %struct.block_sub* %blku_sub141, i32 0, i32 1
  %89 = load %struct.cv*, %struct.cv** %cv, align 8
  %90 = bitcast %struct.cv* %89 to i8*
  %91 = bitcast i8* %90 to %struct.sv*
  store %struct.sv* %91, %struct.sv** %sv, align 8
  br label %do.body142

do.body142:                                       ; preds = %if.end137
  %92 = load i32, i32* @PL_savestack_ix, align 4
  %93 = load i32*, i32** @PL_scopestack, align 8
  %94 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u143 = getelementptr inbounds %struct.context, %struct.context* %94, i32 0, i32 0
  %cx_blk144 = bitcast %union.anon.16* %cx_u143 to %struct.block*
  %blku_oldscopesp = getelementptr inbounds %struct.block, %struct.block* %cx_blk144, i32 0, i32 6
  %95 = load i32, i32* %blku_oldscopesp, align 4
  %sub = sub nsw i32 %95, 1
  %idxprom145 = sext i32 %sub to i64
  %arrayidx146 = getelementptr inbounds i32, i32* %93, i64 %idxprom145
  %96 = load i32, i32* %arrayidx146, align 4
  %cmp147 = icmp sgt i32 %92, %96
  br i1 %cmp147, label %if.then149, label %if.end156

if.then149:                                       ; preds = %do.body142
  %97 = load i32*, i32** @PL_scopestack, align 8
  %98 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u150 = getelementptr inbounds %struct.context, %struct.context* %98, i32 0, i32 0
  %cx_blk151 = bitcast %union.anon.16* %cx_u150 to %struct.block*
  %blku_oldscopesp152 = getelementptr inbounds %struct.block, %struct.block* %cx_blk151, i32 0, i32 6
  %99 = load i32, i32* %blku_oldscopesp152, align 4
  %sub153 = sub nsw i32 %99, 1
  %idxprom154 = sext i32 %sub153 to i64
  %arrayidx155 = getelementptr inbounds i32, i32* %97, i64 %idxprom154
  %100 = load i32, i32* %arrayidx155, align 4
  call void @Perl_leave_scope(i32 %100)
  br label %if.end156

if.end156:                                        ; preds = %if.then149, %do.body142
  br label %do.end157

do.end157:                                        ; preds = %if.end156
  %101 = load %struct.sv*, %struct.sv** %sv, align 8
  %tobool158 = icmp ne %struct.sv* %101, null
  br i1 %tobool158, label %land.lhs.true, label %if.end162

land.lhs.true:                                    ; preds = %do.end157
  %102 = load i32, i32* %olddepth, align 4
  %103 = load %struct.sv*, %struct.sv** %sv, align 8
  %104 = bitcast %struct.sv* %103 to %struct.cv*
  %call159 = call i32* @S_CvDEPTHp(%struct.cv* %104)
  store i32 %102, i32* %call159, align 4
  %tobool160 = icmp ne i32 %102, 0
  br i1 %tobool160, label %if.then161, label %if.end162

if.then161:                                       ; preds = %land.lhs.true
  store %struct.sv* null, %struct.sv** %sv, align 8
  br label %if.end162

if.end162:                                        ; preds = %if.then161, %land.lhs.true, %do.end157
  br label %do.end163

do.end163:                                        ; preds = %if.end162
  br label %do.body164

do.body164:                                       ; preds = %do.end163
  %105 = load %struct.sv*, %struct.sv** %sv, align 8
  %106 = bitcast %struct.sv* %105 to i8*
  %107 = bitcast i8* %106 to %struct.sv*
  call void @S_SvREFCNT_dec(%struct.sv* %107)
  br label %do.end165

do.end165:                                        ; preds = %do.body164
  br label %sw.epilog

sw.bb166:                                         ; preds = %while.body
  br label %do.body167

do.body167:                                       ; preds = %sw.bb166
  %108 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u168 = getelementptr inbounds %struct.context, %struct.context* %108, i32 0, i32 0
  %cx_blk169 = bitcast %union.anon.16* %cx_u168 to %struct.block*
  %blku_u16170 = getelementptr inbounds %struct.block, %struct.block* %cx_blk169, i32 0, i32 2
  %109 = load i16, i16* %blku_u16170, align 2
  %conv171 = zext i16 %109 to i32
  %and172 = and i32 %conv171, 127
  %conv173 = trunc i32 %and172 to i8
  store i8 %conv173, i8* @PL_in_eval, align 1
  %110 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u174 = getelementptr inbounds %struct.context, %struct.context* %110, i32 0, i32 0
  %cx_blk175 = bitcast %union.anon.16* %cx_u174 to %struct.block*
  %blku_u16176 = getelementptr inbounds %struct.block, %struct.block* %cx_blk175, i32 0, i32 2
  %111 = load i16, i16* %blku_u16176, align 2
  %conv177 = zext i16 %111 to i32
  %shr = ashr i32 %conv177, 7
  store i32 %shr, i32* %optype, align 4
  %112 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u178 = getelementptr inbounds %struct.context, %struct.context* %112, i32 0, i32 0
  %cx_blk179 = bitcast %union.anon.16* %cx_u178 to %struct.block*
  %blk_u180 = getelementptr inbounds %struct.block, %struct.block* %cx_blk179, i32 0, i32 8
  %blku_eval = bitcast %union.anon.20* %blk_u180 to %struct.block_eval*
  %old_eval_root = getelementptr inbounds %struct.block_eval, %struct.block_eval* %blku_eval, i32 0, i32 2
  %113 = load %struct.op*, %struct.op** %old_eval_root, align 8
  store %struct.op* %113, %struct.op** @PL_eval_root, align 8
  %114 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u181 = getelementptr inbounds %struct.context, %struct.context* %114, i32 0, i32 0
  %cx_blk182 = bitcast %union.anon.16* %cx_u181 to %struct.block*
  %blk_u183 = getelementptr inbounds %struct.block, %struct.block* %cx_blk182, i32 0, i32 8
  %blku_eval184 = bitcast %union.anon.20* %blk_u183 to %struct.block_eval*
  %cur_text = getelementptr inbounds %struct.block_eval, %struct.block_eval* %blku_eval184, i32 0, i32 3
  %115 = load %struct.sv*, %struct.sv** %cur_text, align 8
  %tobool185 = icmp ne %struct.sv* %115, null
  br i1 %tobool185, label %land.lhs.true186, label %if.end202

land.lhs.true186:                                 ; preds = %do.body167
  %116 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u187 = getelementptr inbounds %struct.context, %struct.context* %116, i32 0, i32 0
  %cx_blk188 = bitcast %union.anon.16* %cx_u187 to %struct.block*
  %blk_u189 = getelementptr inbounds %struct.block, %struct.block* %cx_blk188, i32 0, i32 8
  %blku_eval190 = bitcast %union.anon.20* %blk_u189 to %struct.block_eval*
  %cur_text191 = getelementptr inbounds %struct.block_eval, %struct.block_eval* %blku_eval190, i32 0, i32 3
  %117 = load %struct.sv*, %struct.sv** %cur_text191, align 8
  %sv_flags192 = getelementptr inbounds %struct.sv, %struct.sv* %117, i32 0, i32 2
  %118 = load i32, i32* %sv_flags192, align 4
  %and193 = and i32 %118, 49152
  %cmp194 = icmp eq i32 %and193, 49152
  br i1 %cmp194, label %if.then196, label %if.end202

if.then196:                                       ; preds = %land.lhs.true186
  %119 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u197 = getelementptr inbounds %struct.context, %struct.context* %119, i32 0, i32 0
  %cx_blk198 = bitcast %union.anon.16* %cx_u197 to %struct.block*
  %blk_u199 = getelementptr inbounds %struct.block, %struct.block* %cx_blk198, i32 0, i32 8
  %blku_eval200 = bitcast %union.anon.20* %blk_u199 to %struct.block_eval*
  %cur_text201 = getelementptr inbounds %struct.block_eval, %struct.block_eval* %blku_eval200, i32 0, i32 3
  %120 = load %struct.sv*, %struct.sv** %cur_text201, align 8
  %121 = bitcast %struct.sv* %120 to i8*
  %122 = bitcast i8* %121 to %struct.sv*
  call void @S_SvREFCNT_dec_NN(%struct.sv* %122)
  br label %if.end202

if.end202:                                        ; preds = %if.then196, %land.lhs.true186, %do.body167
  %123 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u203 = getelementptr inbounds %struct.context, %struct.context* %123, i32 0, i32 0
  %cx_blk204 = bitcast %union.anon.16* %cx_u203 to %struct.block*
  %blk_u205 = getelementptr inbounds %struct.block, %struct.block* %cx_blk204, i32 0, i32 8
  %blku_eval206 = bitcast %union.anon.20* %blk_u205 to %struct.block_eval*
  %old_namesv = getelementptr inbounds %struct.block_eval, %struct.block_eval* %blku_eval206, i32 0, i32 1
  %124 = load %struct.sv*, %struct.sv** %old_namesv, align 8
  %tobool207 = icmp ne %struct.sv* %124, null
  br i1 %tobool207, label %if.then208, label %if.end215

if.then208:                                       ; preds = %if.end202
  %125 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u209 = getelementptr inbounds %struct.context, %struct.context* %125, i32 0, i32 0
  %cx_blk210 = bitcast %union.anon.16* %cx_u209 to %struct.block*
  %blk_u211 = getelementptr inbounds %struct.block, %struct.block* %cx_blk210, i32 0, i32 8
  %blku_eval212 = bitcast %union.anon.20* %blk_u211 to %struct.block_eval*
  %old_namesv213 = getelementptr inbounds %struct.block_eval, %struct.block_eval* %blku_eval212, i32 0, i32 1
  %126 = load %struct.sv*, %struct.sv** %old_namesv213, align 8
  %call214 = call %struct.sv* @Perl_sv_2mortal(%struct.sv* %126)
  br label %if.end215

if.end215:                                        ; preds = %if.then208, %if.end202
  br label %do.end216

do.end216:                                        ; preds = %if.end215
  br label %sw.epilog

sw.bb217:                                         ; preds = %while.body, %while.body, %while.body, %while.body
  %127 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u218 = getelementptr inbounds %struct.context, %struct.context* %127, i32 0, i32 0
  %cx_subst219 = bitcast %union.anon.16* %cx_u218 to %struct.subst*
  %sbu_type220 = getelementptr inbounds %struct.subst, %struct.subst* %cx_subst219, i32 0, i32 0
  %128 = load i8, i8* %sbu_type220, align 8
  %conv221 = zext i8 %128 to i32
  %and222 = and i32 %conv221, 15
  %cmp223 = icmp eq i32 %and222, 6
  br i1 %cmp223, label %if.then225, label %if.end235

if.then225:                                       ; preds = %sw.bb217
  %129 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u226 = getelementptr inbounds %struct.context, %struct.context* %129, i32 0, i32 0
  %cx_blk227 = bitcast %union.anon.16* %cx_u226 to %struct.block*
  %blk_u228 = getelementptr inbounds %struct.block, %struct.block* %cx_blk227, i32 0, i32 8
  %blku_loop = bitcast %union.anon.20* %blk_u228 to %struct.block_loop*
  %state_u = getelementptr inbounds %struct.block_loop, %struct.block_loop* %blku_loop, i32 0, i32 3
  %lazysv = bitcast %union.anon.22* %state_u to %struct.anon.25*
  %cur = getelementptr inbounds %struct.anon.25, %struct.anon.25* %lazysv, i32 0, i32 0
  %130 = load %struct.sv*, %struct.sv** %cur, align 8
  %131 = bitcast %struct.sv* %130 to i8*
  %132 = bitcast i8* %131 to %struct.sv*
  call void @S_SvREFCNT_dec_NN(%struct.sv* %132)
  %133 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u229 = getelementptr inbounds %struct.context, %struct.context* %133, i32 0, i32 0
  %cx_blk230 = bitcast %union.anon.16* %cx_u229 to %struct.block*
  %blk_u231 = getelementptr inbounds %struct.block, %struct.block* %cx_blk230, i32 0, i32 8
  %blku_loop232 = bitcast %union.anon.20* %blk_u231 to %struct.block_loop*
  %state_u233 = getelementptr inbounds %struct.block_loop, %struct.block_loop* %blku_loop232, i32 0, i32 3
  %lazysv234 = bitcast %union.anon.22* %state_u233 to %struct.anon.25*
  %end = getelementptr inbounds %struct.anon.25, %struct.anon.25* %lazysv234, i32 0, i32 1
  %134 = load %struct.sv*, %struct.sv** %end, align 8
  %135 = bitcast %struct.sv* %134 to i8*
  %136 = bitcast i8* %135 to %struct.sv*
  call void @S_SvREFCNT_dec_NN(%struct.sv* %136)
  br label %if.end235

if.end235:                                        ; preds = %if.then225, %sw.bb217
  %137 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u236 = getelementptr inbounds %struct.context, %struct.context* %137, i32 0, i32 0
  %cx_subst237 = bitcast %union.anon.16* %cx_u236 to %struct.subst*
  %sbu_type238 = getelementptr inbounds %struct.subst, %struct.subst* %cx_subst237, i32 0, i32 0
  %138 = load i8, i8* %sbu_type238, align 8
  %conv239 = zext i8 %138 to i32
  %and240 = and i32 %conv239, 15
  %cmp241 = icmp eq i32 %and240, 4
  br i1 %cmp241, label %if.then243, label %if.end250

if.then243:                                       ; preds = %if.end235
  %139 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u244 = getelementptr inbounds %struct.context, %struct.context* %139, i32 0, i32 0
  %cx_blk245 = bitcast %union.anon.16* %cx_u244 to %struct.block*
  %blk_u246 = getelementptr inbounds %struct.block, %struct.block* %cx_blk245, i32 0, i32 8
  %blku_loop247 = bitcast %union.anon.20* %blk_u246 to %struct.block_loop*
  %state_u248 = getelementptr inbounds %struct.block_loop, %struct.block_loop* %blku_loop247, i32 0, i32 3
  %ary = bitcast %union.anon.22* %state_u248 to %struct.anon.23*
  %ary249 = getelementptr inbounds %struct.anon.23, %struct.anon.23* %ary, i32 0, i32 0
  %140 = load %struct.av*, %struct.av** %ary249, align 8
  %141 = bitcast %struct.av* %140 to i8*
  %142 = bitcast i8* %141 to %struct.sv*
  call void @S_SvREFCNT_dec(%struct.sv* %142)
  br label %if.end250

if.end250:                                        ; preds = %if.then243, %if.end235
  br label %sw.epilog

sw.bb251:                                         ; preds = %while.body
  br label %sw.epilog

sw.bb252:                                         ; preds = %while.body
  br label %do.body253

do.body253:                                       ; preds = %sw.bb252
  %143 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u254 = getelementptr inbounds %struct.context, %struct.context* %143, i32 0, i32 0
  %cx_blk255 = bitcast %union.anon.16* %cx_u254 to %struct.block*
  %blku_u16256 = getelementptr inbounds %struct.block, %struct.block* %cx_blk255, i32 0, i32 2
  %144 = load i16, i16* %blku_u16256, align 2
  %conv257 = zext i16 %144 to i32
  %and258 = and i32 %conv257, 256
  %tobool259 = icmp ne i32 %and258, 0
  br i1 %tobool259, label %if.end304, label %if.then260

if.then260:                                       ; preds = %do.body253
  %145 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u262 = getelementptr inbounds %struct.context, %struct.context* %145, i32 0, i32 0
  %cx_blk263 = bitcast %union.anon.16* %cx_u262 to %struct.block*
  %blk_u264 = getelementptr inbounds %struct.block, %struct.block* %cx_blk263, i32 0, i32 8
  %blku_format = bitcast %union.anon.20* %blk_u264 to %struct.block_format*
  %cv265 = getelementptr inbounds %struct.block_format, %struct.block_format* %blku_format, i32 0, i32 1
  %146 = load %struct.cv*, %struct.cv** %cv265, align 8
  store %struct.cv* %146, %struct.cv** %cv261, align 8
  %147 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u266 = getelementptr inbounds %struct.context, %struct.context* %147, i32 0, i32 0
  %cx_blk267 = bitcast %union.anon.16* %cx_u266 to %struct.block*
  %blk_u268 = getelementptr inbounds %struct.block, %struct.block* %cx_blk267, i32 0, i32 8
  %blku_format269 = bitcast %union.anon.20* %blk_u268 to %struct.block_format*
  %dfoutgv = getelementptr inbounds %struct.block_format, %struct.block_format* %blku_format269, i32 0, i32 3
  %148 = load %struct.gv*, %struct.gv** %dfoutgv, align 8
  store %struct.gv* %148, %struct.gv** %dfuot, align 8
  %149 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u270 = getelementptr inbounds %struct.context, %struct.context* %149, i32 0, i32 0
  %cx_blk271 = bitcast %union.anon.16* %cx_u270 to %struct.block*
  %blku_u16272 = getelementptr inbounds %struct.block, %struct.block* %cx_blk271, i32 0, i32 2
  %150 = load i16, i16* %blku_u16272, align 2
  %conv273 = zext i16 %150 to i32
  %or274 = or i32 %conv273, 256
  %conv275 = trunc i32 %or274 to i16
  store i16 %conv275, i16* %blku_u16272, align 2
  %151 = load %struct.gv*, %struct.gv** %dfuot, align 8
  call void @Perl_setdefout(%struct.gv* %151)
  br label %do.body276

do.body276:                                       ; preds = %if.then260
  %152 = load i32, i32* @PL_savestack_ix, align 4
  %153 = load i32*, i32** @PL_scopestack, align 8
  %154 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u277 = getelementptr inbounds %struct.context, %struct.context* %154, i32 0, i32 0
  %cx_blk278 = bitcast %union.anon.16* %cx_u277 to %struct.block*
  %blku_oldscopesp279 = getelementptr inbounds %struct.block, %struct.block* %cx_blk278, i32 0, i32 6
  %155 = load i32, i32* %blku_oldscopesp279, align 4
  %sub280 = sub nsw i32 %155, 1
  %idxprom281 = sext i32 %sub280 to i64
  %arrayidx282 = getelementptr inbounds i32, i32* %153, i64 %idxprom281
  %156 = load i32, i32* %arrayidx282, align 4
  %cmp283 = icmp sgt i32 %152, %156
  br i1 %cmp283, label %if.then285, label %if.end292

if.then285:                                       ; preds = %do.body276
  %157 = load i32*, i32** @PL_scopestack, align 8
  %158 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u286 = getelementptr inbounds %struct.context, %struct.context* %158, i32 0, i32 0
  %cx_blk287 = bitcast %union.anon.16* %cx_u286 to %struct.block*
  %blku_oldscopesp288 = getelementptr inbounds %struct.block, %struct.block* %cx_blk287, i32 0, i32 6
  %159 = load i32, i32* %blku_oldscopesp288, align 4
  %sub289 = sub nsw i32 %159, 1
  %idxprom290 = sext i32 %sub289 to i64
  %arrayidx291 = getelementptr inbounds i32, i32* %157, i64 %idxprom290
  %160 = load i32, i32* %arrayidx291, align 4
  call void @Perl_leave_scope(i32 %160)
  br label %if.end292

if.end292:                                        ; preds = %if.then285, %do.body276
  br label %do.end293

do.end293:                                        ; preds = %if.end292
  %161 = load %struct.cv*, %struct.cv** %cv261, align 8
  %call294 = call i32* @S_CvDEPTHp(%struct.cv* %161)
  %162 = load i32, i32* %call294, align 4
  %dec295 = add nsw i32 %162, -1
  store i32 %dec295, i32* %call294, align 4
  %tobool296 = icmp ne i32 %dec295, 0
  br i1 %tobool296, label %if.end303, label %if.then297

if.then297:                                       ; preds = %do.end293
  %163 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u298 = getelementptr inbounds %struct.context, %struct.context* %163, i32 0, i32 0
  %cx_blk299 = bitcast %union.anon.16* %cx_u298 to %struct.block*
  %blk_u300 = getelementptr inbounds %struct.block, %struct.block* %cx_blk299, i32 0, i32 8
  %blku_format301 = bitcast %union.anon.20* %blk_u300 to %struct.block_format*
  %cv302 = getelementptr inbounds %struct.block_format, %struct.block_format* %blku_format301, i32 0, i32 1
  %164 = load %struct.cv*, %struct.cv** %cv302, align 8
  %165 = bitcast %struct.cv* %164 to i8*
  %166 = bitcast i8* %165 to %struct.sv*
  call void @S_SvREFCNT_dec_NN(%struct.sv* %166)
  br label %if.end303

if.end303:                                        ; preds = %if.then297, %do.end293
  %167 = load %struct.gv*, %struct.gv** %dfuot, align 8
  %168 = bitcast %struct.gv* %167 to i8*
  %169 = bitcast i8* %168 to %struct.sv*
  call void @S_SvREFCNT_dec_NN(%struct.sv* %169)
  br label %if.end304

if.end304:                                        ; preds = %if.end303, %do.body253
  br label %do.end305

do.end305:                                        ; preds = %if.end304
  br label %sw.epilog

sw.epilog:                                        ; preds = %while.body, %do.end305, %sw.bb251, %if.end250, %do.end216, %do.end165
  %170 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %si_cxix306 = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %170, i32 0, i32 4
  %171 = load i32, i32* %si_cxix306, align 8
  %dec307 = add nsw i32 %171, -1
  store i32 %dec307, i32* %si_cxix306, align 8
  br label %while.cond

while.end:                                        ; preds = %while.cond
  %172 = load i32, i32* %optype, align 4
  br label %return

return:                                           ; preds = %while.end, %if.then
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @S_SvREFCNT_dec_NN(%struct.sv* %sv) #0 {
entry:
  %sv.addr = alloca %struct.sv*, align 8
  %rc = alloca i32, align 4
  store %struct.sv* %sv, %struct.sv** %sv.addr, align 8
  %0 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %sv_refcnt = getelementptr inbounds %struct.sv, %struct.sv* %0, i32 0, i32 1
  %1 = load i32, i32* %sv_refcnt, align 8
  store i32 %1, i32* %rc, align 4
  %2 = load i32, i32* %rc, align 4
  %cmp = icmp ugt i32 %2, 1
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  br i1 true, label %if.then, label %if.else

cond.false:                                       ; preds = %entry
  br i1 false, label %if.then, label %if.else

if.then:                                          ; preds = %cond.false, %cond.true
  %3 = load i32, i32* %rc, align 4
  %sub = sub i32 %3, 1
  %4 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %sv_refcnt1 = getelementptr inbounds %struct.sv, %struct.sv* %4, i32 0, i32 1
  store i32 %sub, i32* %sv_refcnt1, align 8
  br label %if.end

if.else:                                          ; preds = %cond.false, %cond.true
  %5 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %6 = load i32, i32* %rc, align 4
  call void @Perl_sv_free2(%struct.sv* %5, i32 %6)
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void
}

declare dso_local %struct.sv* @Perl_newSV_type(i32) #1

declare dso_local void @Perl_av_extend(%struct.av*, i64) #1

; Function Attrs: noinline nounwind uwtable
define internal i32* @S_CvDEPTHp(%struct.cv* %sv) #0 {
entry:
  %sv.addr = alloca %struct.cv*, align 8
  store %struct.cv* %sv, %struct.cv** %sv.addr, align 8
  %0 = load %struct.cv*, %struct.cv** %sv.addr, align 8
  %sv_any = getelementptr inbounds %struct.cv, %struct.cv* %0, i32 0, i32 0
  %1 = load %struct.xpvcv*, %struct.xpvcv** %sv_any, align 8
  %xcv_depth = getelementptr inbounds %struct.xpvcv, %struct.xpvcv* %1, i32 0, i32 13
  ret i32* %xcv_depth
}

declare dso_local void @Perl_setdefout(%struct.gv*) #1

; Function Attrs: noinline nounwind uwtable
define dso_local void @Perl_qerror(%struct.sv* %err) #0 {
entry:
  %err.addr = alloca %struct.sv*, align 8
  store %struct.sv* %err, %struct.sv** %err.addr, align 8
  %0 = load i8, i8* @PL_in_eval, align 1
  %tobool = icmp ne i8 %0, 0
  br i1 %tobool, label %if.then, label %if.else12

if.then:                                          ; preds = %entry
  %1 = load i8, i8* @PL_in_eval, align 1
  %conv = zext i8 %1 to i32
  %and = and i32 %conv, 4
  %tobool1 = icmp ne i32 %and, 0
  br i1 %tobool1, label %if.then2, label %if.else

if.then2:                                         ; preds = %if.then
  %2 = load %struct.sv*, %struct.sv** %err.addr, align 8
  %3 = bitcast %struct.sv* %2 to i8*
  call void (i32, i8*, ...) @Perl_ck_warner(i32 12, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.13, i64 0, i64 0), i8* %3)
  br label %if.end

if.else:                                          ; preds = %if.then
  %4 = load %struct.gv*, %struct.gv** @PL_errgv, align 8
  %sv_u = getelementptr inbounds %struct.gv, %struct.gv* %4, i32 0, i32 3
  %svu_gp = bitcast %union.anon.4* %sv_u to %struct.gp**
  %5 = load %struct.gp*, %struct.gp** %svu_gp, align 8
  %add.ptr = getelementptr inbounds %struct.gp, %struct.gp* %5, i64 0
  %gp_sv = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr, i32 0, i32 0
  %6 = load %struct.sv*, %struct.sv** %gp_sv, align 8
  %tobool3 = icmp ne %struct.sv* %6, null
  br i1 %tobool3, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.else
  %7 = load %struct.gv*, %struct.gv** @PL_errgv, align 8
  %sv_u4 = getelementptr inbounds %struct.gv, %struct.gv* %7, i32 0, i32 3
  %svu_gp5 = bitcast %union.anon.4* %sv_u4 to %struct.gp**
  %8 = load %struct.gp*, %struct.gp** %svu_gp5, align 8
  %add.ptr6 = getelementptr inbounds %struct.gp, %struct.gp* %8, i64 0
  %gp_sv7 = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr6, i32 0, i32 0
  br label %cond.end

cond.false:                                       ; preds = %if.else
  %9 = load %struct.gv*, %struct.gv** @PL_errgv, align 8
  %call = call %struct.gv* @Perl_gv_add_by_type(%struct.gv* %9, i32 0)
  %sv_u8 = getelementptr inbounds %struct.gv, %struct.gv* %call, i32 0, i32 3
  %svu_gp9 = bitcast %union.anon.4* %sv_u8 to %struct.gp**
  %10 = load %struct.gp*, %struct.gp** %svu_gp9, align 8
  %add.ptr10 = getelementptr inbounds %struct.gp, %struct.gp* %10, i64 0
  %gp_sv11 = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr10, i32 0, i32 0
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.sv** [ %gp_sv7, %cond.true ], [ %gp_sv11, %cond.false ]
  %11 = load %struct.sv*, %struct.sv** %cond, align 8
  %12 = load %struct.sv*, %struct.sv** %err.addr, align 8
  call void @Perl_sv_catsv_flags(%struct.sv* %11, %struct.sv* %12, i32 2)
  br label %if.end

if.end:                                           ; preds = %cond.end, %if.then2
  br label %if.end17

if.else12:                                        ; preds = %entry
  %13 = load %struct.sv*, %struct.sv** @PL_errors, align 8
  %tobool13 = icmp ne %struct.sv* %13, null
  br i1 %tobool13, label %if.then14, label %if.else15

if.then14:                                        ; preds = %if.else12
  %14 = load %struct.sv*, %struct.sv** @PL_errors, align 8
  %15 = load %struct.sv*, %struct.sv** %err.addr, align 8
  call void @Perl_sv_catsv_flags(%struct.sv* %14, %struct.sv* %15, i32 2)
  br label %if.end16

if.else15:                                        ; preds = %if.else12
  %16 = load %struct.sv*, %struct.sv** %err.addr, align 8
  %17 = bitcast %struct.sv* %16 to i8*
  call void (i8*, ...) @Perl_warn(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.14, i64 0, i64 0), i8* %17)
  br label %if.end16

if.end16:                                         ; preds = %if.else15, %if.then14
  br label %if.end17

if.end17:                                         ; preds = %if.end16, %if.end
  %18 = load %struct.yy_parser*, %struct.yy_parser** @PL_parser, align 8
  %tobool18 = icmp ne %struct.yy_parser* %18, null
  br i1 %tobool18, label %if.then19, label %if.end20

if.then19:                                        ; preds = %if.end17
  %19 = load %struct.yy_parser*, %struct.yy_parser** @PL_parser, align 8
  %error_count = getelementptr inbounds %struct.yy_parser, %struct.yy_parser* %19, i32 0, i32 44
  %20 = load i8, i8* %error_count, align 1
  %inc = add i8 %20, 1
  store i8 %inc, i8* %error_count, align 1
  br label %if.end20

if.end20:                                         ; preds = %if.then19, %if.end17
  ret void
}

declare dso_local void @Perl_warn(i8*, ...) #1

; Function Attrs: noinline nounwind uwtable
define dso_local void @Perl_die_unwind(%struct.sv* %msv) #0 {
entry:
  %msv.addr = alloca %struct.sv*, align 8
  %exceptsv = alloca %struct.sv*, align 8
  %in_eval = alloca i8, align 1
  %cxix = alloca i32, align 4
  %gimme = alloca i32, align 4
  %sp = alloca %struct.sv**, align 8
  %prev = alloca %struct.stackinfo*, align 8
  %optype = alloca i32, align 4
  %namesv = alloca %struct.sv*, align 8
  %cx = alloca %struct.context*, align 8
  %newsp = alloca %struct.sv**, align 8
  %restartjmpenv = alloca %struct.jmpenv*, align 8
  %restartop = alloca %struct.op*, align 8
  %msglen = alloca i64, align 8
  %message = alloca i8*, align 8
  store %struct.sv* %msv, %struct.sv** %msv.addr, align 8
  %0 = load %struct.sv*, %struct.sv** %msv.addr, align 8
  %call = call %struct.sv* @Perl_sv_mortalcopy_flags(%struct.sv* %0, i32 1538)
  store %struct.sv* %call, %struct.sv** %exceptsv, align 8
  %1 = load i8, i8* @PL_in_eval, align 1
  store i8 %1, i8* %in_eval, align 1
  %2 = load i8, i8* %in_eval, align 1
  %tobool = icmp ne i8 %2, 0
  br i1 %tobool, label %if.then, label %if.end280

if.then:                                          ; preds = %entry
  %3 = load i8, i8* %in_eval, align 1
  %conv = zext i8 %3 to i32
  %and = and i32 %conv, 4
  %tobool1 = icmp ne i32 %and, 0
  br i1 %tobool1, label %if.end, label %if.then2

if.then2:                                         ; preds = %if.then
  %4 = load %struct.sv*, %struct.sv** %exceptsv, align 8
  %sv_flags = getelementptr inbounds %struct.sv, %struct.sv* %4, i32 0, i32 2
  %5 = load i32, i32* %sv_flags, align 4
  %and3 = and i32 %5, -524289
  store i32 %and3, i32* %sv_flags, align 4
  %6 = load %struct.gv*, %struct.gv** @PL_errgv, align 8
  %sv_u = getelementptr inbounds %struct.gv, %struct.gv* %6, i32 0, i32 3
  %svu_gp = bitcast %union.anon.4* %sv_u to %struct.gp**
  %7 = load %struct.gp*, %struct.gp** %svu_gp, align 8
  %add.ptr = getelementptr inbounds %struct.gp, %struct.gp* %7, i64 0
  %gp_sv = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr, i32 0, i32 0
  %8 = load %struct.sv*, %struct.sv** %gp_sv, align 8
  %tobool4 = icmp ne %struct.sv* %8, null
  br i1 %tobool4, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.then2
  %9 = load %struct.gv*, %struct.gv** @PL_errgv, align 8
  %sv_u5 = getelementptr inbounds %struct.gv, %struct.gv* %9, i32 0, i32 3
  %svu_gp6 = bitcast %union.anon.4* %sv_u5 to %struct.gp**
  %10 = load %struct.gp*, %struct.gp** %svu_gp6, align 8
  %add.ptr7 = getelementptr inbounds %struct.gp, %struct.gp* %10, i64 0
  %gp_sv8 = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr7, i32 0, i32 0
  br label %cond.end

cond.false:                                       ; preds = %if.then2
  %11 = load %struct.gv*, %struct.gv** @PL_errgv, align 8
  %call9 = call %struct.gv* @Perl_gv_add_by_type(%struct.gv* %11, i32 0)
  %sv_u10 = getelementptr inbounds %struct.gv, %struct.gv* %call9, i32 0, i32 3
  %svu_gp11 = bitcast %union.anon.4* %sv_u10 to %struct.gp**
  %12 = load %struct.gp*, %struct.gp** %svu_gp11, align 8
  %add.ptr12 = getelementptr inbounds %struct.gp, %struct.gp* %12, i64 0
  %gp_sv13 = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr12, i32 0, i32 0
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.sv** [ %gp_sv8, %cond.true ], [ %gp_sv13, %cond.false ]
  %13 = load %struct.sv*, %struct.sv** %cond, align 8
  %14 = load %struct.sv*, %struct.sv** %exceptsv, align 8
  call void @Perl_sv_setsv_flags(%struct.sv* %13, %struct.sv* %14, i32 1538)
  br label %if.end

if.end:                                           ; preds = %cond.end, %if.then
  %15 = load i8, i8* %in_eval, align 1
  %conv14 = zext i8 %15 to i32
  %and15 = and i32 %conv14, 4
  %tobool16 = icmp ne i32 %and15, 0
  br i1 %tobool16, label %if.then17, label %if.end18

if.then17:                                        ; preds = %if.end
  %16 = load %struct.sv*, %struct.sv** %exceptsv, align 8
  %17 = bitcast %struct.sv* %16 to i8*
  call void (i32, i8*, ...) @Perl_ck_warner(i32 12, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.13, i64 0, i64 0), i8* %17)
  br label %if.end18

if.end18:                                         ; preds = %if.then17, %if.end
  br label %while.cond

while.cond:                                       ; preds = %do.end36, %if.end18
  %18 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %si_cxix = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %18, i32 0, i32 4
  %19 = load i32, i32* %si_cxix, align 8
  %call19 = call i32 @S_dopoptoeval(i32 %19)
  store i32 %call19, i32* %cxix, align 4
  %cmp = icmp slt i32 %call19, 0
  br i1 %cmp, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %while.cond
  %20 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %si_prev = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %20, i32 0, i32 2
  %21 = load %struct.stackinfo*, %struct.stackinfo** %si_prev, align 8
  %tobool21 = icmp ne %struct.stackinfo* %21, null
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %22 = phi i1 [ false, %while.cond ], [ %tobool21, %land.rhs ]
  br i1 %22, label %while.body, label %while.end

while.body:                                       ; preds = %land.end
  call void @Perl_dounwind(i32 -1)
  br label %do.body

do.body:                                          ; preds = %while.body
  %23 = load %struct.sv**, %struct.sv*** @PL_stack_sp, align 8
  store %struct.sv** %23, %struct.sv*** %sp, align 8
  %24 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %si_prev22 = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %24, i32 0, i32 2
  %25 = load %struct.stackinfo*, %struct.stackinfo** %si_prev22, align 8
  store %struct.stackinfo* %25, %struct.stackinfo** %prev, align 8
  %26 = load %struct.stackinfo*, %struct.stackinfo** %prev, align 8
  %tobool23 = icmp ne %struct.stackinfo* %26, null
  br i1 %tobool23, label %if.end25, label %if.then24

if.then24:                                        ; preds = %do.body
  call void @Perl_croak_popstack()
  br label %if.end25

if.end25:                                         ; preds = %if.then24, %do.body
  br label %do.body26

do.body26:                                        ; preds = %if.end25
  %27 = load %struct.sv**, %struct.sv*** %sp, align 8
  %28 = load %struct.sv**, %struct.sv*** @PL_stack_base, align 8
  %sub.ptr.lhs.cast = ptrtoint %struct.sv** %27 to i64
  %sub.ptr.rhs.cast = ptrtoint %struct.sv** %28 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 8
  %29 = load %struct.av*, %struct.av** @PL_curstack, align 8
  %sv_any = getelementptr inbounds %struct.av, %struct.av* %29, i32 0, i32 0
  %30 = load %struct.xpvav*, %struct.xpvav** %sv_any, align 8
  %xav_fill = getelementptr inbounds %struct.xpvav, %struct.xpvav* %30, i32 0, i32 2
  store i64 %sub.ptr.div, i64* %xav_fill, align 8
  %31 = load %struct.stackinfo*, %struct.stackinfo** %prev, align 8
  %si_stack = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %31, i32 0, i32 0
  %32 = load %struct.av*, %struct.av** %si_stack, align 8
  %sv_u27 = getelementptr inbounds %struct.av, %struct.av* %32, i32 0, i32 3
  %svu_array = bitcast %union.anon.0* %sv_u27 to %struct.sv***
  %33 = load %struct.sv**, %struct.sv*** %svu_array, align 8
  store %struct.sv** %33, %struct.sv*** @PL_stack_base, align 8
  %34 = load %struct.sv**, %struct.sv*** @PL_stack_base, align 8
  %35 = load %struct.stackinfo*, %struct.stackinfo** %prev, align 8
  %si_stack28 = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %35, i32 0, i32 0
  %36 = load %struct.av*, %struct.av** %si_stack28, align 8
  %sv_any29 = getelementptr inbounds %struct.av, %struct.av* %36, i32 0, i32 0
  %37 = load %struct.xpvav*, %struct.xpvav** %sv_any29, align 8
  %xav_max = getelementptr inbounds %struct.xpvav, %struct.xpvav* %37, i32 0, i32 3
  %38 = load i64, i64* %xav_max, align 8
  %add.ptr30 = getelementptr inbounds %struct.sv*, %struct.sv** %34, i64 %38
  store %struct.sv** %add.ptr30, %struct.sv*** @PL_stack_max, align 8
  %39 = load %struct.sv**, %struct.sv*** @PL_stack_base, align 8
  %40 = load %struct.stackinfo*, %struct.stackinfo** %prev, align 8
  %si_stack31 = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %40, i32 0, i32 0
  %41 = load %struct.av*, %struct.av** %si_stack31, align 8
  %sv_any32 = getelementptr inbounds %struct.av, %struct.av* %41, i32 0, i32 0
  %42 = load %struct.xpvav*, %struct.xpvav** %sv_any32, align 8
  %xav_fill33 = getelementptr inbounds %struct.xpvav, %struct.xpvav* %42, i32 0, i32 2
  %43 = load i64, i64* %xav_fill33, align 8
  %add.ptr34 = getelementptr inbounds %struct.sv*, %struct.sv** %39, i64 %43
  store %struct.sv** %add.ptr34, %struct.sv*** @PL_stack_sp, align 8
  store %struct.sv** %add.ptr34, %struct.sv*** %sp, align 8
  %44 = load %struct.stackinfo*, %struct.stackinfo** %prev, align 8
  %si_stack35 = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %44, i32 0, i32 0
  %45 = load %struct.av*, %struct.av** %si_stack35, align 8
  store %struct.av* %45, %struct.av** @PL_curstack, align 8
  br label %do.end

do.end:                                           ; preds = %do.body26
  %46 = load %struct.stackinfo*, %struct.stackinfo** %prev, align 8
  store %struct.stackinfo* %46, %struct.stackinfo** @PL_curstackinfo, align 8
  br label %do.end36

do.end36:                                         ; preds = %do.end
  br label %while.cond

while.end:                                        ; preds = %land.end
  %47 = load i32, i32* %cxix, align 4
  %cmp37 = icmp sge i32 %47, 0
  br i1 %cmp37, label %if.then39, label %if.end279

if.then39:                                        ; preds = %while.end
  %48 = load i32, i32* %cxix, align 4
  %49 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %si_cxix40 = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %49, i32 0, i32 4
  %50 = load i32, i32* %si_cxix40, align 8
  %cmp41 = icmp slt i32 %48, %50
  br i1 %cmp41, label %if.then43, label %if.end44

if.then43:                                        ; preds = %if.then39
  %51 = load i32, i32* %cxix, align 4
  call void @Perl_dounwind(i32 %51)
  br label %if.end44

if.end44:                                         ; preds = %if.then43, %if.then39
  %52 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %si_cxstack = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %52, i32 0, i32 1
  %53 = load %struct.context*, %struct.context** %si_cxstack, align 8
  %54 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %si_cxix45 = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %54, i32 0, i32 4
  %55 = load i32, i32* %si_cxix45, align 8
  %dec = add nsw i32 %55, -1
  store i32 %dec, i32* %si_cxix45, align 8
  %idxprom = sext i32 %55 to i64
  %arrayidx = getelementptr inbounds %struct.context, %struct.context* %53, i64 %idxprom
  store %struct.context* %arrayidx, %struct.context** %cx, align 8
  %56 = load %struct.sv**, %struct.sv*** @PL_stack_base, align 8
  %57 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u = getelementptr inbounds %struct.context, %struct.context* %57, i32 0, i32 0
  %cx_blk = bitcast %union.anon.16* %cx_u to %struct.block*
  %blku_oldsp = getelementptr inbounds %struct.block, %struct.block* %cx_blk, i32 0, i32 3
  %58 = load i32, i32* %blku_oldsp, align 4
  %idx.ext = sext i32 %58 to i64
  %add.ptr46 = getelementptr inbounds %struct.sv*, %struct.sv** %56, i64 %idx.ext
  store %struct.sv** %add.ptr46, %struct.sv*** %newsp, align 8
  %59 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u47 = getelementptr inbounds %struct.context, %struct.context* %59, i32 0, i32 0
  %cx_blk48 = bitcast %union.anon.16* %cx_u47 to %struct.block*
  %blku_oldcop = getelementptr inbounds %struct.block, %struct.block* %cx_blk48, i32 0, i32 4
  %60 = load %struct.cop*, %struct.cop** %blku_oldcop, align 8
  store %struct.cop* %60, %struct.cop** @PL_curcop, align 8
  %61 = load i32*, i32** @PL_markstack, align 8
  %62 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u49 = getelementptr inbounds %struct.context, %struct.context* %62, i32 0, i32 0
  %cx_blk50 = bitcast %union.anon.16* %cx_u49 to %struct.block*
  %blku_oldmarksp = getelementptr inbounds %struct.block, %struct.block* %cx_blk50, i32 0, i32 5
  %63 = load i32, i32* %blku_oldmarksp, align 8
  %idx.ext51 = sext i32 %63 to i64
  %add.ptr52 = getelementptr inbounds i32, i32* %61, i64 %idx.ext51
  store i32* %add.ptr52, i32** @PL_markstack_ptr, align 8
  %64 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u53 = getelementptr inbounds %struct.context, %struct.context* %64, i32 0, i32 0
  %cx_blk54 = bitcast %union.anon.16* %cx_u53 to %struct.block*
  %blku_oldscopesp = getelementptr inbounds %struct.block, %struct.block* %cx_blk54, i32 0, i32 6
  %65 = load i32, i32* %blku_oldscopesp, align 4
  store i32 %65, i32* @PL_scopestack_ix, align 4
  %66 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u55 = getelementptr inbounds %struct.context, %struct.context* %66, i32 0, i32 0
  %cx_blk56 = bitcast %union.anon.16* %cx_u55 to %struct.block*
  %blku_oldpm = getelementptr inbounds %struct.block, %struct.block* %cx_blk56, i32 0, i32 7
  %67 = load %struct.pmop*, %struct.pmop** %blku_oldpm, align 8
  store %struct.pmop* %67, %struct.pmop** @PL_curpm, align 8
  %68 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u57 = getelementptr inbounds %struct.context, %struct.context* %68, i32 0, i32 0
  %cx_blk58 = bitcast %union.anon.16* %cx_u57 to %struct.block*
  %blku_gimme = getelementptr inbounds %struct.block, %struct.block* %cx_blk58, i32 0, i32 1
  %69 = load i8, i8* %blku_gimme, align 1
  %conv59 = zext i8 %69 to i32
  store i32 %conv59, i32* %gimme, align 4
  %70 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u60 = getelementptr inbounds %struct.context, %struct.context* %70, i32 0, i32 0
  %cx_subst = bitcast %union.anon.16* %cx_u60 to %struct.subst*
  %sbu_type = getelementptr inbounds %struct.subst, %struct.subst* %cx_subst, i32 0, i32 0
  %71 = load i8, i8* %sbu_type, align 8
  %conv61 = zext i8 %71 to i32
  %and62 = and i32 %conv61, 15
  %cmp63 = icmp ne i32 %and62, 10
  br i1 %cmp63, label %if.then65, label %if.end139

if.then65:                                        ; preds = %if.end44
  %72 = load %struct.sv*, %struct.sv** %exceptsv, align 8
  store %struct.sv* %72, %struct.sv** @PL_Sv, align 8
  %73 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %sv_flags66 = getelementptr inbounds %struct.sv, %struct.sv* %73, i32 0, i32 2
  %74 = load i32, i32* %sv_flags66, align 4
  %and67 = and i32 %74, 2098176
  %cmp68 = icmp eq i32 %and67, 1024
  br i1 %cmp68, label %cond.true70, label %cond.false74

cond.true70:                                      ; preds = %if.then65
  %75 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %sv_any71 = getelementptr inbounds %struct.sv, %struct.sv* %75, i32 0, i32 0
  %76 = load i8*, i8** %sv_any71, align 8
  %77 = bitcast i8* %76 to %struct.xpv*
  %xpv_cur = getelementptr inbounds %struct.xpv, %struct.xpv* %77, i32 0, i32 2
  %78 = load i64, i64* %xpv_cur, align 8
  store i64 %78, i64* %msglen, align 8
  %79 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %sv_u72 = getelementptr inbounds %struct.sv, %struct.sv* %79, i32 0, i32 3
  %svu_pv = bitcast %union.anon* %sv_u72 to i8**
  %80 = load i8*, i8** %svu_pv, align 8
  %add.ptr73 = getelementptr inbounds i8, i8* %80, i64 0
  br label %cond.end76

cond.false74:                                     ; preds = %if.then65
  %81 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %call75 = call i8* @Perl_sv_2pv_flags(%struct.sv* %81, i64* %msglen, i32 34)
  br label %cond.end76

cond.end76:                                       ; preds = %cond.false74, %cond.true70
  %cond77 = phi i8* [ %add.ptr73, %cond.true70 ], [ %call75, %cond.false74 ]
  store i8* %cond77, i8** %message, align 8
  %82 = load %struct.gv*, %struct.gv** @PL_stderrgv, align 8
  %tobool78 = icmp ne %struct.gv* %82, null
  br i1 %tobool78, label %land.lhs.true, label %cond.false102

land.lhs.true:                                    ; preds = %cond.end76
  %83 = load %struct.gv*, %struct.gv** @PL_stderrgv, align 8
  %sv_flags79 = getelementptr inbounds %struct.gv, %struct.gv* %83, i32 0, i32 2
  %84 = load i32, i32* %sv_flags79, align 4
  %and80 = and i32 %84, 255
  %cmp81 = icmp eq i32 %and80, 9
  br i1 %cmp81, label %land.lhs.true83, label %cond.false102

land.lhs.true83:                                  ; preds = %land.lhs.true
  %85 = load %struct.gv*, %struct.gv** @PL_stderrgv, align 8
  %sv_u84 = getelementptr inbounds %struct.gv, %struct.gv* %85, i32 0, i32 3
  %svu_gp85 = bitcast %union.anon.4* %sv_u84 to %struct.gp**
  %86 = load %struct.gp*, %struct.gp** %svu_gp85, align 8
  %add.ptr86 = getelementptr inbounds %struct.gp, %struct.gp* %86, i64 0
  %gp_io = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr86, i32 0, i32 1
  %87 = load %struct.io*, %struct.io** %gp_io, align 8
  %tobool87 = icmp ne %struct.io* %87, null
  br i1 %tobool87, label %land.lhs.true88, label %cond.false102

land.lhs.true88:                                  ; preds = %land.lhs.true83
  %88 = load %struct.gv*, %struct.gv** @PL_stderrgv, align 8
  %sv_u89 = getelementptr inbounds %struct.gv, %struct.gv* %88, i32 0, i32 3
  %svu_gp90 = bitcast %union.anon.4* %sv_u89 to %struct.gp**
  %89 = load %struct.gp*, %struct.gp** %svu_gp90, align 8
  %add.ptr91 = getelementptr inbounds %struct.gp, %struct.gp* %89, i64 0
  %gp_io92 = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr91, i32 0, i32 1
  %90 = load %struct.io*, %struct.io** %gp_io92, align 8
  %sv_any93 = getelementptr inbounds %struct.io, %struct.io* %90, i32 0, i32 0
  %91 = load %struct.xpvio*, %struct.xpvio** %sv_any93, align 8
  %xio_ofp = getelementptr inbounds %struct.xpvio, %struct.xpvio* %91, i32 0, i32 5
  %92 = load %struct._PerlIO**, %struct._PerlIO*** %xio_ofp, align 8
  %tobool94 = icmp ne %struct._PerlIO** %92, null
  br i1 %tobool94, label %cond.true95, label %cond.false102

cond.true95:                                      ; preds = %land.lhs.true88
  %93 = load %struct.gv*, %struct.gv** @PL_stderrgv, align 8
  %sv_u96 = getelementptr inbounds %struct.gv, %struct.gv* %93, i32 0, i32 3
  %svu_gp97 = bitcast %union.anon.4* %sv_u96 to %struct.gp**
  %94 = load %struct.gp*, %struct.gp** %svu_gp97, align 8
  %add.ptr98 = getelementptr inbounds %struct.gp, %struct.gp* %94, i64 0
  %gp_io99 = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr98, i32 0, i32 1
  %95 = load %struct.io*, %struct.io** %gp_io99, align 8
  %sv_any100 = getelementptr inbounds %struct.io, %struct.io* %95, i32 0, i32 0
  %96 = load %struct.xpvio*, %struct.xpvio** %sv_any100, align 8
  %xio_ofp101 = getelementptr inbounds %struct.xpvio, %struct.xpvio* %96, i32 0, i32 5
  %97 = load %struct._PerlIO**, %struct._PerlIO*** %xio_ofp101, align 8
  br label %cond.end104

cond.false102:                                    ; preds = %land.lhs.true88, %land.lhs.true83, %land.lhs.true, %cond.end76
  %call103 = call %struct._PerlIO** @Perl_PerlIO_stderr()
  br label %cond.end104

cond.end104:                                      ; preds = %cond.false102, %cond.true95
  %cond105 = phi %struct._PerlIO** [ %97, %cond.true95 ], [ %call103, %cond.false102 ]
  %call106 = call i64 @Perl_PerlIO_write(%struct._PerlIO** %cond105, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.15, i64 0, i64 0), i64 11)
  %98 = load %struct.gv*, %struct.gv** @PL_stderrgv, align 8
  %tobool107 = icmp ne %struct.gv* %98, null
  br i1 %tobool107, label %land.lhs.true108, label %cond.false134

land.lhs.true108:                                 ; preds = %cond.end104
  %99 = load %struct.gv*, %struct.gv** @PL_stderrgv, align 8
  %sv_flags109 = getelementptr inbounds %struct.gv, %struct.gv* %99, i32 0, i32 2
  %100 = load i32, i32* %sv_flags109, align 4
  %and110 = and i32 %100, 255
  %cmp111 = icmp eq i32 %and110, 9
  br i1 %cmp111, label %land.lhs.true113, label %cond.false134

land.lhs.true113:                                 ; preds = %land.lhs.true108
  %101 = load %struct.gv*, %struct.gv** @PL_stderrgv, align 8
  %sv_u114 = getelementptr inbounds %struct.gv, %struct.gv* %101, i32 0, i32 3
  %svu_gp115 = bitcast %union.anon.4* %sv_u114 to %struct.gp**
  %102 = load %struct.gp*, %struct.gp** %svu_gp115, align 8
  %add.ptr116 = getelementptr inbounds %struct.gp, %struct.gp* %102, i64 0
  %gp_io117 = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr116, i32 0, i32 1
  %103 = load %struct.io*, %struct.io** %gp_io117, align 8
  %tobool118 = icmp ne %struct.io* %103, null
  br i1 %tobool118, label %land.lhs.true119, label %cond.false134

land.lhs.true119:                                 ; preds = %land.lhs.true113
  %104 = load %struct.gv*, %struct.gv** @PL_stderrgv, align 8
  %sv_u120 = getelementptr inbounds %struct.gv, %struct.gv* %104, i32 0, i32 3
  %svu_gp121 = bitcast %union.anon.4* %sv_u120 to %struct.gp**
  %105 = load %struct.gp*, %struct.gp** %svu_gp121, align 8
  %add.ptr122 = getelementptr inbounds %struct.gp, %struct.gp* %105, i64 0
  %gp_io123 = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr122, i32 0, i32 1
  %106 = load %struct.io*, %struct.io** %gp_io123, align 8
  %sv_any124 = getelementptr inbounds %struct.io, %struct.io* %106, i32 0, i32 0
  %107 = load %struct.xpvio*, %struct.xpvio** %sv_any124, align 8
  %xio_ofp125 = getelementptr inbounds %struct.xpvio, %struct.xpvio* %107, i32 0, i32 5
  %108 = load %struct._PerlIO**, %struct._PerlIO*** %xio_ofp125, align 8
  %tobool126 = icmp ne %struct._PerlIO** %108, null
  br i1 %tobool126, label %cond.true127, label %cond.false134

cond.true127:                                     ; preds = %land.lhs.true119
  %109 = load %struct.gv*, %struct.gv** @PL_stderrgv, align 8
  %sv_u128 = getelementptr inbounds %struct.gv, %struct.gv* %109, i32 0, i32 3
  %svu_gp129 = bitcast %union.anon.4* %sv_u128 to %struct.gp**
  %110 = load %struct.gp*, %struct.gp** %svu_gp129, align 8
  %add.ptr130 = getelementptr inbounds %struct.gp, %struct.gp* %110, i64 0
  %gp_io131 = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr130, i32 0, i32 1
  %111 = load %struct.io*, %struct.io** %gp_io131, align 8
  %sv_any132 = getelementptr inbounds %struct.io, %struct.io* %111, i32 0, i32 0
  %112 = load %struct.xpvio*, %struct.xpvio** %sv_any132, align 8
  %xio_ofp133 = getelementptr inbounds %struct.xpvio, %struct.xpvio* %112, i32 0, i32 5
  %113 = load %struct._PerlIO**, %struct._PerlIO*** %xio_ofp133, align 8
  br label %cond.end136

cond.false134:                                    ; preds = %land.lhs.true119, %land.lhs.true113, %land.lhs.true108, %cond.end104
  %call135 = call %struct._PerlIO** @Perl_PerlIO_stderr()
  br label %cond.end136

cond.end136:                                      ; preds = %cond.false134, %cond.true127
  %cond137 = phi %struct._PerlIO** [ %113, %cond.true127 ], [ %call135, %cond.false134 ]
  %114 = load i8*, i8** %message, align 8
  %115 = load i64, i64* %msglen, align 8
  %call138 = call i64 @Perl_PerlIO_write(%struct._PerlIO** %cond137, i8* %114, i64 %115)
  call void @Perl_my_exit(i32 1)
  br label %if.end139

if.end139:                                        ; preds = %cond.end136, %if.end44
  br label %do.body140

do.body140:                                       ; preds = %if.end139
  %116 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u141 = getelementptr inbounds %struct.context, %struct.context* %116, i32 0, i32 0
  %cx_blk142 = bitcast %union.anon.16* %cx_u141 to %struct.block*
  %blku_u16 = getelementptr inbounds %struct.block, %struct.block* %cx_blk142, i32 0, i32 2
  %117 = load i16, i16* %blku_u16, align 2
  %conv143 = zext i16 %117 to i32
  %and144 = and i32 %conv143, 127
  %conv145 = trunc i32 %and144 to i8
  store i8 %conv145, i8* @PL_in_eval, align 1
  %118 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u146 = getelementptr inbounds %struct.context, %struct.context* %118, i32 0, i32 0
  %cx_blk147 = bitcast %union.anon.16* %cx_u146 to %struct.block*
  %blku_u16148 = getelementptr inbounds %struct.block, %struct.block* %cx_blk147, i32 0, i32 2
  %119 = load i16, i16* %blku_u16148, align 2
  %conv149 = zext i16 %119 to i32
  %shr = ashr i32 %conv149, 7
  store i32 %shr, i32* %optype, align 4
  %120 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u150 = getelementptr inbounds %struct.context, %struct.context* %120, i32 0, i32 0
  %cx_blk151 = bitcast %union.anon.16* %cx_u150 to %struct.block*
  %blk_u = getelementptr inbounds %struct.block, %struct.block* %cx_blk151, i32 0, i32 8
  %blku_eval = bitcast %union.anon.20* %blk_u to %struct.block_eval*
  %old_eval_root = getelementptr inbounds %struct.block_eval, %struct.block_eval* %blku_eval, i32 0, i32 2
  %121 = load %struct.op*, %struct.op** %old_eval_root, align 8
  store %struct.op* %121, %struct.op** @PL_eval_root, align 8
  %122 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u152 = getelementptr inbounds %struct.context, %struct.context* %122, i32 0, i32 0
  %cx_blk153 = bitcast %union.anon.16* %cx_u152 to %struct.block*
  %blk_u154 = getelementptr inbounds %struct.block, %struct.block* %cx_blk153, i32 0, i32 8
  %blku_eval155 = bitcast %union.anon.20* %blk_u154 to %struct.block_eval*
  %cur_text = getelementptr inbounds %struct.block_eval, %struct.block_eval* %blku_eval155, i32 0, i32 3
  %123 = load %struct.sv*, %struct.sv** %cur_text, align 8
  %tobool156 = icmp ne %struct.sv* %123, null
  br i1 %tobool156, label %land.lhs.true157, label %if.end173

land.lhs.true157:                                 ; preds = %do.body140
  %124 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u158 = getelementptr inbounds %struct.context, %struct.context* %124, i32 0, i32 0
  %cx_blk159 = bitcast %union.anon.16* %cx_u158 to %struct.block*
  %blk_u160 = getelementptr inbounds %struct.block, %struct.block* %cx_blk159, i32 0, i32 8
  %blku_eval161 = bitcast %union.anon.20* %blk_u160 to %struct.block_eval*
  %cur_text162 = getelementptr inbounds %struct.block_eval, %struct.block_eval* %blku_eval161, i32 0, i32 3
  %125 = load %struct.sv*, %struct.sv** %cur_text162, align 8
  %sv_flags163 = getelementptr inbounds %struct.sv, %struct.sv* %125, i32 0, i32 2
  %126 = load i32, i32* %sv_flags163, align 4
  %and164 = and i32 %126, 49152
  %cmp165 = icmp eq i32 %and164, 49152
  br i1 %cmp165, label %if.then167, label %if.end173

if.then167:                                       ; preds = %land.lhs.true157
  %127 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u168 = getelementptr inbounds %struct.context, %struct.context* %127, i32 0, i32 0
  %cx_blk169 = bitcast %union.anon.16* %cx_u168 to %struct.block*
  %blk_u170 = getelementptr inbounds %struct.block, %struct.block* %cx_blk169, i32 0, i32 8
  %blku_eval171 = bitcast %union.anon.20* %blk_u170 to %struct.block_eval*
  %cur_text172 = getelementptr inbounds %struct.block_eval, %struct.block_eval* %blku_eval171, i32 0, i32 3
  %128 = load %struct.sv*, %struct.sv** %cur_text172, align 8
  %129 = bitcast %struct.sv* %128 to i8*
  %130 = bitcast i8* %129 to %struct.sv*
  call void @S_SvREFCNT_dec_NN(%struct.sv* %130)
  br label %if.end173

if.end173:                                        ; preds = %if.then167, %land.lhs.true157, %do.body140
  %131 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u174 = getelementptr inbounds %struct.context, %struct.context* %131, i32 0, i32 0
  %cx_blk175 = bitcast %union.anon.16* %cx_u174 to %struct.block*
  %blk_u176 = getelementptr inbounds %struct.block, %struct.block* %cx_blk175, i32 0, i32 8
  %blku_eval177 = bitcast %union.anon.20* %blk_u176 to %struct.block_eval*
  %old_namesv = getelementptr inbounds %struct.block_eval, %struct.block_eval* %blku_eval177, i32 0, i32 1
  %132 = load %struct.sv*, %struct.sv** %old_namesv, align 8
  %tobool178 = icmp ne %struct.sv* %132, null
  br i1 %tobool178, label %if.then179, label %if.end186

if.then179:                                       ; preds = %if.end173
  %133 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u180 = getelementptr inbounds %struct.context, %struct.context* %133, i32 0, i32 0
  %cx_blk181 = bitcast %union.anon.16* %cx_u180 to %struct.block*
  %blk_u182 = getelementptr inbounds %struct.block, %struct.block* %cx_blk181, i32 0, i32 8
  %blku_eval183 = bitcast %union.anon.20* %blk_u182 to %struct.block_eval*
  %old_namesv184 = getelementptr inbounds %struct.block_eval, %struct.block_eval* %blku_eval183, i32 0, i32 1
  %134 = load %struct.sv*, %struct.sv** %old_namesv184, align 8
  %call185 = call %struct.sv* @Perl_sv_2mortal(%struct.sv* %134)
  br label %if.end186

if.end186:                                        ; preds = %if.then179, %if.end173
  br label %do.end187

do.end187:                                        ; preds = %if.end186
  %135 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u188 = getelementptr inbounds %struct.context, %struct.context* %135, i32 0, i32 0
  %cx_blk189 = bitcast %union.anon.16* %cx_u188 to %struct.block*
  %blk_u190 = getelementptr inbounds %struct.block, %struct.block* %cx_blk189, i32 0, i32 8
  %blku_eval191 = bitcast %union.anon.20* %blk_u190 to %struct.block_eval*
  %old_namesv192 = getelementptr inbounds %struct.block_eval, %struct.block_eval* %blku_eval191, i32 0, i32 1
  %136 = load %struct.sv*, %struct.sv** %old_namesv192, align 8
  store %struct.sv* %136, %struct.sv** %namesv, align 8
  %137 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u193 = getelementptr inbounds %struct.context, %struct.context* %137, i32 0, i32 0
  %cx_blk194 = bitcast %union.anon.16* %cx_u193 to %struct.block*
  %blk_u195 = getelementptr inbounds %struct.block, %struct.block* %cx_blk194, i32 0, i32 8
  %blku_eval196 = bitcast %union.anon.20* %blk_u195 to %struct.block_eval*
  %cur_top_env = getelementptr inbounds %struct.block_eval, %struct.block_eval* %blku_eval196, i32 0, i32 5
  %138 = load %struct.jmpenv*, %struct.jmpenv** %cur_top_env, align 8
  store %struct.jmpenv* %138, %struct.jmpenv** %restartjmpenv, align 8
  %139 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u197 = getelementptr inbounds %struct.context, %struct.context* %139, i32 0, i32 0
  %cx_blk198 = bitcast %union.anon.16* %cx_u197 to %struct.block*
  %blk_u199 = getelementptr inbounds %struct.block, %struct.block* %cx_blk198, i32 0, i32 8
  %blku_eval200 = bitcast %union.anon.20* %blk_u199 to %struct.block_eval*
  %retop = getelementptr inbounds %struct.block_eval, %struct.block_eval* %blku_eval200, i32 0, i32 0
  %140 = load %struct.op*, %struct.op** %retop, align 8
  store %struct.op* %140, %struct.op** %restartop, align 8
  %141 = load i32, i32* %gimme, align 4
  %cmp201 = icmp eq i32 %141, 2
  br i1 %cmp201, label %if.then203, label %if.end204

if.then203:                                       ; preds = %do.end187
  %142 = load %struct.sv**, %struct.sv*** %newsp, align 8
  %incdec.ptr = getelementptr inbounds %struct.sv*, %struct.sv** %142, i32 1
  store %struct.sv** %incdec.ptr, %struct.sv*** %newsp, align 8
  store %struct.sv* @PL_sv_undef, %struct.sv** %incdec.ptr, align 8
  br label %if.end204

if.end204:                                        ; preds = %if.then203, %do.end187
  %143 = load %struct.sv**, %struct.sv*** %newsp, align 8
  store %struct.sv** %143, %struct.sv*** @PL_stack_sp, align 8
  call void @Perl_pop_scope()
  %144 = load i32, i32* %optype, align 4
  %cmp205 = icmp eq i32 %144, 339
  br i1 %cmp205, label %if.then207, label %if.end248

if.then207:                                       ; preds = %if.end204
  %145 = load %struct.gv*, %struct.gv** @PL_incgv, align 8
  %sv_u208 = getelementptr inbounds %struct.gv, %struct.gv* %145, i32 0, i32 3
  %svu_gp209 = bitcast %union.anon.4* %sv_u208 to %struct.gp**
  %146 = load %struct.gp*, %struct.gp** %svu_gp209, align 8
  %add.ptr210 = getelementptr inbounds %struct.gp, %struct.gp* %146, i64 0
  %gp_hv = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr210, i32 0, i32 5
  %147 = load %struct.hv*, %struct.hv** %gp_hv, align 8
  %tobool211 = icmp ne %struct.hv* %147, null
  br i1 %tobool211, label %cond.true212, label %cond.false217

cond.true212:                                     ; preds = %if.then207
  %148 = load %struct.gv*, %struct.gv** @PL_incgv, align 8
  %sv_u213 = getelementptr inbounds %struct.gv, %struct.gv* %148, i32 0, i32 3
  %svu_gp214 = bitcast %union.anon.4* %sv_u213 to %struct.gp**
  %149 = load %struct.gp*, %struct.gp** %svu_gp214, align 8
  %add.ptr215 = getelementptr inbounds %struct.gp, %struct.gp* %149, i64 0
  %gp_hv216 = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr215, i32 0, i32 5
  %150 = load %struct.hv*, %struct.hv** %gp_hv216, align 8
  br label %cond.end223

cond.false217:                                    ; preds = %if.then207
  %151 = load %struct.gv*, %struct.gv** @PL_incgv, align 8
  %call218 = call %struct.gv* @Perl_gv_add_by_type(%struct.gv* %151, i32 12)
  %sv_u219 = getelementptr inbounds %struct.gv, %struct.gv* %call218, i32 0, i32 3
  %svu_gp220 = bitcast %union.anon.4* %sv_u219 to %struct.gp**
  %152 = load %struct.gp*, %struct.gp** %svu_gp220, align 8
  %add.ptr221 = getelementptr inbounds %struct.gp, %struct.gp* %152, i64 0
  %gp_hv222 = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr221, i32 0, i32 5
  %153 = load %struct.hv*, %struct.hv** %gp_hv222, align 8
  br label %cond.end223

cond.end223:                                      ; preds = %cond.false217, %cond.true212
  %cond224 = phi %struct.hv* [ %150, %cond.true212 ], [ %153, %cond.false217 ]
  %154 = load %struct.sv*, %struct.sv** %namesv, align 8
  %sv_u225 = getelementptr inbounds %struct.sv, %struct.sv* %154, i32 0, i32 3
  %svu_pv226 = bitcast %union.anon* %sv_u225 to i8**
  %155 = load i8*, i8** %svu_pv226, align 8
  %add.ptr227 = getelementptr inbounds i8, i8* %155, i64 0
  %156 = load %struct.sv*, %struct.sv** %namesv, align 8
  %sv_flags228 = getelementptr inbounds %struct.sv, %struct.sv* %156, i32 0, i32 2
  %157 = load i32, i32* %sv_flags228, align 4
  %and229 = and i32 %157, 536870912
  %tobool230 = icmp ne i32 %and229, 0
  br i1 %tobool230, label %cond.true231, label %cond.false235

cond.true231:                                     ; preds = %cond.end223
  %158 = load %struct.sv*, %struct.sv** %namesv, align 8
  %sv_any232 = getelementptr inbounds %struct.sv, %struct.sv* %158, i32 0, i32 0
  %159 = load i8*, i8** %sv_any232, align 8
  %160 = bitcast i8* %159 to %struct.xpv*
  %xpv_cur233 = getelementptr inbounds %struct.xpv, %struct.xpv* %160, i32 0, i32 2
  %161 = load i64, i64* %xpv_cur233, align 8
  %conv234 = trunc i64 %161 to i32
  %sub = sub nsw i32 0, %conv234
  br label %cond.end239

cond.false235:                                    ; preds = %cond.end223
  %162 = load %struct.sv*, %struct.sv** %namesv, align 8
  %sv_any236 = getelementptr inbounds %struct.sv, %struct.sv* %162, i32 0, i32 0
  %163 = load i8*, i8** %sv_any236, align 8
  %164 = bitcast i8* %163 to %struct.xpv*
  %xpv_cur237 = getelementptr inbounds %struct.xpv, %struct.xpv* %164, i32 0, i32 2
  %165 = load i64, i64* %xpv_cur237, align 8
  %conv238 = trunc i64 %165 to i32
  br label %cond.end239

cond.end239:                                      ; preds = %cond.false235, %cond.true231
  %cond240 = phi i32 [ %sub, %cond.true231 ], [ %conv238, %cond.false235 ]
  %call241 = call i8* @Perl_hv_common_key_len(%struct.hv* %cond224, i8* %add.ptr227, i32 %cond240, i32 36, %struct.sv* @PL_sv_undef, i32 0)
  %166 = bitcast i8* %call241 to %struct.sv**
  %167 = load %struct.sv*, %struct.sv** %exceptsv, align 8
  %tobool242 = icmp ne %struct.sv* %167, null
  br i1 %tobool242, label %cond.true243, label %cond.false244

cond.true243:                                     ; preds = %cond.end239
  %168 = load %struct.sv*, %struct.sv** %exceptsv, align 8
  br label %cond.end246

cond.false244:                                    ; preds = %cond.end239
  %call245 = call %struct.sv* @Perl_newSVpvn_flags(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.17, i64 0, i64 0), i64 14, i32 524288)
  br label %cond.end246

cond.end246:                                      ; preds = %cond.false244, %cond.true243
  %cond247 = phi %struct.sv* [ %168, %cond.true243 ], [ %call245, %cond.false244 ]
  %169 = bitcast %struct.sv* %cond247 to i8*
  call void (i8*, ...) @Perl_croak(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.16, i64 0, i64 0), i8* %169)
  br label %if.end248

if.end248:                                        ; preds = %cond.end246, %if.end204
  %170 = load i8, i8* %in_eval, align 1
  %conv249 = zext i8 %170 to i32
  %and250 = and i32 %conv249, 4
  %tobool251 = icmp ne i32 %and250, 0
  br i1 %tobool251, label %if.end271, label %if.then252

if.then252:                                       ; preds = %if.end248
  %171 = load %struct.gv*, %struct.gv** @PL_errgv, align 8
  %sv_u253 = getelementptr inbounds %struct.gv, %struct.gv* %171, i32 0, i32 3
  %svu_gp254 = bitcast %union.anon.4* %sv_u253 to %struct.gp**
  %172 = load %struct.gp*, %struct.gp** %svu_gp254, align 8
  %add.ptr255 = getelementptr inbounds %struct.gp, %struct.gp* %172, i64 0
  %gp_sv256 = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr255, i32 0, i32 0
  %173 = load %struct.sv*, %struct.sv** %gp_sv256, align 8
  %tobool257 = icmp ne %struct.sv* %173, null
  br i1 %tobool257, label %cond.true258, label %cond.false263

cond.true258:                                     ; preds = %if.then252
  %174 = load %struct.gv*, %struct.gv** @PL_errgv, align 8
  %sv_u259 = getelementptr inbounds %struct.gv, %struct.gv* %174, i32 0, i32 3
  %svu_gp260 = bitcast %union.anon.4* %sv_u259 to %struct.gp**
  %175 = load %struct.gp*, %struct.gp** %svu_gp260, align 8
  %add.ptr261 = getelementptr inbounds %struct.gp, %struct.gp* %175, i64 0
  %gp_sv262 = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr261, i32 0, i32 0
  br label %cond.end269

cond.false263:                                    ; preds = %if.then252
  %176 = load %struct.gv*, %struct.gv** @PL_errgv, align 8
  %call264 = call %struct.gv* @Perl_gv_add_by_type(%struct.gv* %176, i32 0)
  %sv_u265 = getelementptr inbounds %struct.gv, %struct.gv* %call264, i32 0, i32 3
  %svu_gp266 = bitcast %union.anon.4* %sv_u265 to %struct.gp**
  %177 = load %struct.gp*, %struct.gp** %svu_gp266, align 8
  %add.ptr267 = getelementptr inbounds %struct.gp, %struct.gp* %177, i64 0
  %gp_sv268 = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr267, i32 0, i32 0
  br label %cond.end269

cond.end269:                                      ; preds = %cond.false263, %cond.true258
  %cond270 = phi %struct.sv** [ %gp_sv262, %cond.true258 ], [ %gp_sv268, %cond.false263 ]
  %178 = load %struct.sv*, %struct.sv** %cond270, align 8
  %179 = load %struct.sv*, %struct.sv** %exceptsv, align 8
  call void @Perl_sv_setsv_flags(%struct.sv* %178, %struct.sv* %179, i32 1538)
  br label %if.end271

if.end271:                                        ; preds = %cond.end269, %if.end248
  %180 = load %struct.jmpenv*, %struct.jmpenv** %restartjmpenv, align 8
  store %struct.jmpenv* %180, %struct.jmpenv** @PL_restartjmpenv, align 8
  %181 = load %struct.op*, %struct.op** %restartop, align 8
  store %struct.op* %181, %struct.op** @PL_restartop, align 8
  br label %do.body272

do.body272:                                       ; preds = %if.end271
  %182 = load %struct.jmpenv*, %struct.jmpenv** @PL_top_env, align 8
  %je_prev = getelementptr inbounds %struct.jmpenv, %struct.jmpenv* %182, i32 0, i32 1
  %183 = load %struct.jmpenv*, %struct.jmpenv** %je_prev, align 8
  %tobool273 = icmp ne %struct.jmpenv* %183, null
  br i1 %tobool273, label %if.then274, label %if.end275

if.then274:                                       ; preds = %do.body272
  %184 = load %struct.jmpenv*, %struct.jmpenv** @PL_top_env, align 8
  %je_buf = getelementptr inbounds %struct.jmpenv, %struct.jmpenv* %184, i32 0, i32 0
  %arraydecay = getelementptr inbounds [1 x %struct.__jmp_buf_tag], [1 x %struct.__jmp_buf_tag]* %je_buf, i64 0, i64 0
  call void @siglongjmp(%struct.__jmp_buf_tag* %arraydecay, i32 3) #9
  unreachable

if.end275:                                        ; preds = %do.body272
  %call276 = call %struct._PerlIO** @Perl_PerlIO_stderr()
  %call277 = call i32 (%struct._PerlIO**, i8*, ...) @PerlIO_printf(%struct._PerlIO** %call276, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.18, i64 0, i64 0), i32 3)
  call void @exit(i32 1) #9
  unreachable

do.end278:                                        ; No predecessors!
  br label %if.end279

if.end279:                                        ; preds = %do.end278, %while.end
  br label %if.end280

if.end280:                                        ; preds = %if.end279, %entry
  %185 = load %struct.sv*, %struct.sv** %exceptsv, align 8
  call void @Perl_write_to_stderr(%struct.sv* %185)
  call void @Perl_my_failure_exit()
  ret void
}

declare dso_local void @Perl_sv_setsv_flags(%struct.sv*, %struct.sv*, i32) #1

; Function Attrs: noinline nounwind uwtable
define internal i32 @S_dopoptoeval(i32 %startingblock) #0 {
entry:
  %retval = alloca i32, align 4
  %startingblock.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %cx = alloca %struct.context*, align 8
  store i32 %startingblock, i32* %startingblock.addr, align 4
  %0 = load i32, i32* %startingblock.addr, align 4
  store i32 %0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i32, i32* %i, align 4
  %cmp = icmp sge i32 %1, 0
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %2 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %si_cxstack = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %2, i32 0, i32 1
  %3 = load %struct.context*, %struct.context** %si_cxstack, align 8
  %4 = load i32, i32* %i, align 4
  %idxprom = sext i32 %4 to i64
  %arrayidx = getelementptr inbounds %struct.context, %struct.context* %3, i64 %idxprom
  store %struct.context* %arrayidx, %struct.context** %cx, align 8
  %5 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u = getelementptr inbounds %struct.context, %struct.context* %5, i32 0, i32 0
  %cx_subst = bitcast %union.anon.16* %cx_u to %struct.subst*
  %sbu_type = getelementptr inbounds %struct.subst, %struct.subst* %cx_subst, i32 0, i32 0
  %6 = load i8, i8* %sbu_type, align 8
  %conv = zext i8 %6 to i32
  %and = and i32 %conv, 15
  switch i32 %and, label %sw.default [
    i32 10, label %sw.bb
  ]

sw.default:                                       ; preds = %for.body
  br label %for.inc

sw.bb:                                            ; preds = %for.body
  %7 = load i32, i32* %i, align 4
  store i32 %7, i32* %retval, align 4
  br label %return

for.inc:                                          ; preds = %sw.default
  %8 = load i32, i32* %i, align 4
  %dec = add nsw i32 %8, -1
  store i32 %dec, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %9 = load i32, i32* %i, align 4
  store i32 %9, i32* %retval, align 4
  br label %return

return:                                           ; preds = %for.end, %sw.bb
  %10 = load i32, i32* %retval, align 4
  ret i32 %10
}

declare dso_local void @Perl_croak_popstack() #1

declare dso_local i64 @Perl_PerlIO_write(%struct._PerlIO**, i8*, i64) #1

declare dso_local %struct._PerlIO** @Perl_PerlIO_stderr() #1

declare dso_local void @Perl_my_exit(i32) #1

declare dso_local i8* @Perl_hv_common_key_len(%struct.hv*, i8*, i32, i32, %struct.sv*, i32) #1

; Function Attrs: noreturn nounwind
declare dso_local void @siglongjmp(%struct.__jmp_buf_tag*, i32) #4

declare dso_local i32 @PerlIO_printf(%struct._PerlIO**, i8*, ...) #1

; Function Attrs: noreturn nounwind
declare dso_local void @exit(i32) #4

declare dso_local void @Perl_write_to_stderr(%struct.sv*) #1

declare dso_local void @Perl_my_failure_exit() #1

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.op* @Perl_pp_xor() #0 {
entry:
  %retval = alloca %struct.op*, align 8
  %sp = alloca %struct.sv**, align 8
  %right = alloca %struct.sv*, align 8
  %left = alloca %struct.sv*, align 8
  %0 = load %struct.sv**, %struct.sv*** @PL_stack_sp, align 8
  store %struct.sv** %0, %struct.sv*** %sp, align 8
  %1 = load %struct.sv**, %struct.sv*** %sp, align 8
  %incdec.ptr = getelementptr inbounds %struct.sv*, %struct.sv** %1, i32 -1
  store %struct.sv** %incdec.ptr, %struct.sv*** %sp, align 8
  %2 = load %struct.sv*, %struct.sv** %1, align 8
  store %struct.sv* %2, %struct.sv** %right, align 8
  %3 = load %struct.sv**, %struct.sv*** %sp, align 8
  %4 = load %struct.sv*, %struct.sv** %3, align 8
  store %struct.sv* %4, %struct.sv** %left, align 8
  %5 = load %struct.sv*, %struct.sv** %left, align 8
  %tobool = icmp ne %struct.sv* %5, null
  br i1 %tobool, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  br i1 true, label %land.rhs, label %land.end74

cond.false:                                       ; preds = %entry
  br i1 false, label %land.rhs, label %land.end74

land.rhs:                                         ; preds = %cond.false, %cond.true
  %6 = load %struct.sv*, %struct.sv** %left, align 8
  %sv_flags = getelementptr inbounds %struct.sv, %struct.sv* %6, i32 0, i32 2
  %7 = load i32, i32* %sv_flags, align 4
  %and = and i32 %7, 2097152
  %tobool1 = icmp ne i32 %and, 0
  br i1 %tobool1, label %cond.true2, label %cond.false3

cond.true2:                                       ; preds = %land.rhs
  br i1 true, label %cond.true4, label %cond.false5

cond.false3:                                      ; preds = %land.rhs
  br i1 false, label %cond.true4, label %cond.false5

cond.true4:                                       ; preds = %cond.false3, %cond.true2
  %8 = load %struct.sv*, %struct.sv** %left, align 8
  %call = call zeroext i1 @Perl_sv_2bool_flags(%struct.sv* %8, i32 2)
  %conv = zext i1 %call to i32
  br label %cond.end71

cond.false5:                                      ; preds = %cond.false3, %cond.true2
  %9 = load %struct.sv*, %struct.sv** %left, align 8
  %sv_flags6 = getelementptr inbounds %struct.sv, %struct.sv* %9, i32 0, i32 2
  %10 = load i32, i32* %sv_flags6, align 4
  %and7 = and i32 %10, 65280
  %tobool8 = icmp ne i32 %and7, 0
  br i1 %tobool8, label %cond.false18, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %cond.false5
  %11 = load %struct.sv*, %struct.sv** %left, align 8
  %sv_flags9 = getelementptr inbounds %struct.sv, %struct.sv* %11, i32 0, i32 2
  %12 = load i32, i32* %sv_flags9, align 4
  %and10 = and i32 %12, 255
  %cmp = icmp eq i32 %and10, 8
  br i1 %cmp, label %cond.false18, label %lor.lhs.false12

lor.lhs.false12:                                  ; preds = %lor.lhs.false
  %13 = load %struct.sv*, %struct.sv** %left, align 8
  %sv_flags13 = getelementptr inbounds %struct.sv, %struct.sv* %13, i32 0, i32 2
  %14 = load i32, i32* %sv_flags13, align 4
  %and14 = and i32 %14, 16826623
  %cmp15 = icmp eq i32 %and14, 16777226
  br i1 %cmp15, label %cond.false18, label %cond.true17

cond.true17:                                      ; preds = %lor.lhs.false12
  br label %cond.end69

cond.false18:                                     ; preds = %lor.lhs.false12, %lor.lhs.false, %cond.false5
  %15 = load %struct.sv*, %struct.sv** %left, align 8
  %sv_flags19 = getelementptr inbounds %struct.sv, %struct.sv* %15, i32 0, i32 2
  %16 = load i32, i32* %sv_flags19, align 4
  %and20 = and i32 %16, 1024
  %tobool21 = icmp ne i32 %and20, 0
  br i1 %tobool21, label %cond.true22, label %cond.false36

cond.true22:                                      ; preds = %cond.false18
  %17 = load %struct.sv*, %struct.sv** %left, align 8
  %sv_any = getelementptr inbounds %struct.sv, %struct.sv* %17, i32 0, i32 0
  %18 = load i8*, i8** %sv_any, align 8
  %19 = bitcast i8* %18 to %struct.xpv*
  %tobool23 = icmp ne %struct.xpv* %19, null
  br i1 %tobool23, label %land.rhs24, label %land.end35

land.rhs24:                                       ; preds = %cond.true22
  %20 = load %struct.sv*, %struct.sv** %left, align 8
  %sv_any25 = getelementptr inbounds %struct.sv, %struct.sv* %20, i32 0, i32 0
  %21 = load i8*, i8** %sv_any25, align 8
  %22 = bitcast i8* %21 to %struct.xpv*
  %xpv_cur = getelementptr inbounds %struct.xpv, %struct.xpv* %22, i32 0, i32 2
  %23 = load i64, i64* %xpv_cur, align 8
  %cmp26 = icmp ugt i64 %23, 1
  br i1 %cmp26, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %land.rhs24
  %24 = load %struct.sv*, %struct.sv** %left, align 8
  %sv_any28 = getelementptr inbounds %struct.sv, %struct.sv* %24, i32 0, i32 0
  %25 = load i8*, i8** %sv_any28, align 8
  %26 = bitcast i8* %25 to %struct.xpv*
  %xpv_cur29 = getelementptr inbounds %struct.xpv, %struct.xpv* %26, i32 0, i32 2
  %27 = load i64, i64* %xpv_cur29, align 8
  %tobool30 = icmp ne i64 %27, 0
  br i1 %tobool30, label %land.rhs31, label %land.end

land.rhs31:                                       ; preds = %lor.rhs
  %28 = load %struct.sv*, %struct.sv** %left, align 8
  %sv_u = getelementptr inbounds %struct.sv, %struct.sv* %28, i32 0, i32 3
  %svu_pv = bitcast %union.anon* %sv_u to i8**
  %29 = load i8*, i8** %svu_pv, align 8
  %30 = load i8, i8* %29, align 1
  %conv32 = sext i8 %30 to i32
  %cmp33 = icmp ne i32 %conv32, 48
  br label %land.end

land.end:                                         ; preds = %land.rhs31, %lor.rhs
  %31 = phi i1 [ false, %lor.rhs ], [ %cmp33, %land.rhs31 ]
  br label %lor.end

lor.end:                                          ; preds = %land.end, %land.rhs24
  %32 = phi i1 [ true, %land.rhs24 ], [ %31, %land.end ]
  br label %land.end35

land.end35:                                       ; preds = %lor.end, %cond.true22
  %33 = phi i1 [ false, %cond.true22 ], [ %32, %lor.end ]
  %land.ext = zext i1 %33 to i32
  br label %cond.end67

cond.false36:                                     ; preds = %cond.false18
  %34 = load %struct.sv*, %struct.sv** %left, align 8
  %sv_flags37 = getelementptr inbounds %struct.sv, %struct.sv* %34, i32 0, i32 2
  %35 = load i32, i32* %sv_flags37, align 4
  %and38 = and i32 %35, 768
  %tobool39 = icmp ne i32 %and38, 0
  br i1 %tobool39, label %cond.true40, label %cond.false64

cond.true40:                                      ; preds = %cond.false36
  %36 = load %struct.sv*, %struct.sv** %left, align 8
  %sv_flags41 = getelementptr inbounds %struct.sv, %struct.sv* %36, i32 0, i32 2
  %37 = load i32, i32* %sv_flags41, align 4
  %and42 = and i32 %37, 256
  %tobool43 = icmp ne i32 %and42, 0
  br i1 %tobool43, label %land.lhs.true, label %lor.rhs47

land.lhs.true:                                    ; preds = %cond.true40
  %38 = load %struct.sv*, %struct.sv** %left, align 8
  %sv_any44 = getelementptr inbounds %struct.sv, %struct.sv* %38, i32 0, i32 0
  %39 = load i8*, i8** %sv_any44, align 8
  %40 = bitcast i8* %39 to %struct.xpviv*
  %xiv_u = getelementptr inbounds %struct.xpviv, %struct.xpviv* %40, i32 0, i32 4
  %xivu_iv = bitcast %union._xivu* %xiv_u to i64*
  %41 = load i64, i64* %xivu_iv, align 8
  %cmp45 = icmp ne i64 %41, 0
  br i1 %cmp45, label %lor.end63, label %lor.rhs47

lor.rhs47:                                        ; preds = %land.lhs.true, %cond.true40
  %42 = load %struct.sv*, %struct.sv** %left, align 8
  %sv_flags48 = getelementptr inbounds %struct.sv, %struct.sv* %42, i32 0, i32 2
  %43 = load i32, i32* %sv_flags48, align 4
  %and49 = and i32 %43, 512
  %tobool50 = icmp ne i32 %and49, 0
  br i1 %tobool50, label %land.rhs51, label %land.end61

land.rhs51:                                       ; preds = %lor.rhs47
  %44 = load %struct.sv*, %struct.sv** %left, align 8
  %sv_any52 = getelementptr inbounds %struct.sv, %struct.sv* %44, i32 0, i32 0
  %45 = load i8*, i8** %sv_any52, align 8
  %46 = bitcast i8* %45 to %struct.xpvnv*
  %xnv_u = getelementptr inbounds %struct.xpvnv, %struct.xpvnv* %46, i32 0, i32 5
  %xnv_nv = bitcast %union._xnvu* %xnv_u to double*
  %47 = load double, double* %xnv_nv, align 8
  %cmp53 = fcmp uno double %47, %47
  br i1 %cmp53, label %lor.end60, label %lor.rhs54

lor.rhs54:                                        ; preds = %land.rhs51
  %48 = load %struct.sv*, %struct.sv** %left, align 8
  %sv_any55 = getelementptr inbounds %struct.sv, %struct.sv* %48, i32 0, i32 0
  %49 = load i8*, i8** %sv_any55, align 8
  %50 = bitcast i8* %49 to %struct.xpvnv*
  %xnv_u56 = getelementptr inbounds %struct.xpvnv, %struct.xpvnv* %50, i32 0, i32 5
  %xnv_nv57 = bitcast %union._xnvu* %xnv_u56 to double*
  %51 = load double, double* %xnv_nv57, align 8
  %cmp58 = fcmp une double %51, 0.000000e+00
  br label %lor.end60

lor.end60:                                        ; preds = %lor.rhs54, %land.rhs51
  %52 = phi i1 [ true, %land.rhs51 ], [ %cmp58, %lor.rhs54 ]
  br label %land.end61

land.end61:                                       ; preds = %lor.end60, %lor.rhs47
  %53 = phi i1 [ false, %lor.rhs47 ], [ %52, %lor.end60 ]
  br label %lor.end63

lor.end63:                                        ; preds = %land.end61, %land.lhs.true
  %54 = phi i1 [ true, %land.lhs.true ], [ %53, %land.end61 ]
  %lor.ext = zext i1 %54 to i32
  br label %cond.end

cond.false64:                                     ; preds = %cond.false36
  %55 = load %struct.sv*, %struct.sv** %left, align 8
  %call65 = call zeroext i1 @Perl_sv_2bool_flags(%struct.sv* %55, i32 0)
  %conv66 = zext i1 %call65 to i32
  br label %cond.end

cond.end:                                         ; preds = %cond.false64, %lor.end63
  %cond = phi i32 [ %lor.ext, %lor.end63 ], [ %conv66, %cond.false64 ]
  br label %cond.end67

cond.end67:                                       ; preds = %cond.end, %land.end35
  %cond68 = phi i32 [ %land.ext, %land.end35 ], [ %cond, %cond.end ]
  br label %cond.end69

cond.end69:                                       ; preds = %cond.end67, %cond.true17
  %cond70 = phi i32 [ 0, %cond.true17 ], [ %cond68, %cond.end67 ]
  br label %cond.end71

cond.end71:                                       ; preds = %cond.end69, %cond.true4
  %cond72 = phi i32 [ %conv, %cond.true4 ], [ %cond70, %cond.end69 ]
  %tobool73 = icmp ne i32 %cond72, 0
  br label %land.end74

land.end74:                                       ; preds = %cond.end71, %cond.false, %cond.true
  %56 = phi i1 [ false, %cond.false ], [ false, %cond.true ], [ %tobool73, %cond.end71 ]
  %land.ext75 = zext i1 %56 to i32
  %57 = load %struct.sv*, %struct.sv** %right, align 8
  %tobool76 = icmp ne %struct.sv* %57, null
  br i1 %tobool76, label %cond.true77, label %cond.false78

cond.true77:                                      ; preds = %land.end74
  br i1 true, label %land.rhs79, label %land.end178

cond.false78:                                     ; preds = %land.end74
  br i1 false, label %land.rhs79, label %land.end178

land.rhs79:                                       ; preds = %cond.false78, %cond.true77
  %58 = load %struct.sv*, %struct.sv** %right, align 8
  %sv_flags80 = getelementptr inbounds %struct.sv, %struct.sv* %58, i32 0, i32 2
  %59 = load i32, i32* %sv_flags80, align 4
  %and81 = and i32 %59, 2097152
  %tobool82 = icmp ne i32 %and81, 0
  br i1 %tobool82, label %cond.true83, label %cond.false84

cond.true83:                                      ; preds = %land.rhs79
  br i1 true, label %cond.true85, label %cond.false88

cond.false84:                                     ; preds = %land.rhs79
  br i1 false, label %cond.true85, label %cond.false88

cond.true85:                                      ; preds = %cond.false84, %cond.true83
  %60 = load %struct.sv*, %struct.sv** %right, align 8
  %call86 = call zeroext i1 @Perl_sv_2bool_flags(%struct.sv* %60, i32 2)
  %conv87 = zext i1 %call86 to i32
  br label %cond.end175

cond.false88:                                     ; preds = %cond.false84, %cond.true83
  %61 = load %struct.sv*, %struct.sv** %right, align 8
  %sv_flags89 = getelementptr inbounds %struct.sv, %struct.sv* %61, i32 0, i32 2
  %62 = load i32, i32* %sv_flags89, align 4
  %and90 = and i32 %62, 65280
  %tobool91 = icmp ne i32 %and90, 0
  br i1 %tobool91, label %cond.false103, label %lor.lhs.false92

lor.lhs.false92:                                  ; preds = %cond.false88
  %63 = load %struct.sv*, %struct.sv** %right, align 8
  %sv_flags93 = getelementptr inbounds %struct.sv, %struct.sv* %63, i32 0, i32 2
  %64 = load i32, i32* %sv_flags93, align 4
  %and94 = and i32 %64, 255
  %cmp95 = icmp eq i32 %and94, 8
  br i1 %cmp95, label %cond.false103, label %lor.lhs.false97

lor.lhs.false97:                                  ; preds = %lor.lhs.false92
  %65 = load %struct.sv*, %struct.sv** %right, align 8
  %sv_flags98 = getelementptr inbounds %struct.sv, %struct.sv* %65, i32 0, i32 2
  %66 = load i32, i32* %sv_flags98, align 4
  %and99 = and i32 %66, 16826623
  %cmp100 = icmp eq i32 %and99, 16777226
  br i1 %cmp100, label %cond.false103, label %cond.true102

cond.true102:                                     ; preds = %lor.lhs.false97
  br label %cond.end173

cond.false103:                                    ; preds = %lor.lhs.false97, %lor.lhs.false92, %cond.false88
  %67 = load %struct.sv*, %struct.sv** %right, align 8
  %sv_flags104 = getelementptr inbounds %struct.sv, %struct.sv* %67, i32 0, i32 2
  %68 = load i32, i32* %sv_flags104, align 4
  %and105 = and i32 %68, 1024
  %tobool106 = icmp ne i32 %and105, 0
  br i1 %tobool106, label %cond.true107, label %cond.false131

cond.true107:                                     ; preds = %cond.false103
  %69 = load %struct.sv*, %struct.sv** %right, align 8
  %sv_any108 = getelementptr inbounds %struct.sv, %struct.sv* %69, i32 0, i32 0
  %70 = load i8*, i8** %sv_any108, align 8
  %71 = bitcast i8* %70 to %struct.xpv*
  %tobool109 = icmp ne %struct.xpv* %71, null
  br i1 %tobool109, label %land.rhs110, label %land.end129

land.rhs110:                                      ; preds = %cond.true107
  %72 = load %struct.sv*, %struct.sv** %right, align 8
  %sv_any111 = getelementptr inbounds %struct.sv, %struct.sv* %72, i32 0, i32 0
  %73 = load i8*, i8** %sv_any111, align 8
  %74 = bitcast i8* %73 to %struct.xpv*
  %xpv_cur112 = getelementptr inbounds %struct.xpv, %struct.xpv* %74, i32 0, i32 2
  %75 = load i64, i64* %xpv_cur112, align 8
  %cmp113 = icmp ugt i64 %75, 1
  br i1 %cmp113, label %lor.end127, label %lor.rhs115

lor.rhs115:                                       ; preds = %land.rhs110
  %76 = load %struct.sv*, %struct.sv** %right, align 8
  %sv_any116 = getelementptr inbounds %struct.sv, %struct.sv* %76, i32 0, i32 0
  %77 = load i8*, i8** %sv_any116, align 8
  %78 = bitcast i8* %77 to %struct.xpv*
  %xpv_cur117 = getelementptr inbounds %struct.xpv, %struct.xpv* %78, i32 0, i32 2
  %79 = load i64, i64* %xpv_cur117, align 8
  %tobool118 = icmp ne i64 %79, 0
  br i1 %tobool118, label %land.rhs119, label %land.end125

land.rhs119:                                      ; preds = %lor.rhs115
  %80 = load %struct.sv*, %struct.sv** %right, align 8
  %sv_u120 = getelementptr inbounds %struct.sv, %struct.sv* %80, i32 0, i32 3
  %svu_pv121 = bitcast %union.anon* %sv_u120 to i8**
  %81 = load i8*, i8** %svu_pv121, align 8
  %82 = load i8, i8* %81, align 1
  %conv122 = sext i8 %82 to i32
  %cmp123 = icmp ne i32 %conv122, 48
  br label %land.end125

land.end125:                                      ; preds = %land.rhs119, %lor.rhs115
  %83 = phi i1 [ false, %lor.rhs115 ], [ %cmp123, %land.rhs119 ]
  br label %lor.end127

lor.end127:                                       ; preds = %land.end125, %land.rhs110
  %84 = phi i1 [ true, %land.rhs110 ], [ %83, %land.end125 ]
  br label %land.end129

land.end129:                                      ; preds = %lor.end127, %cond.true107
  %85 = phi i1 [ false, %cond.true107 ], [ %84, %lor.end127 ]
  %land.ext130 = zext i1 %85 to i32
  br label %cond.end171

cond.false131:                                    ; preds = %cond.false103
  %86 = load %struct.sv*, %struct.sv** %right, align 8
  %sv_flags132 = getelementptr inbounds %struct.sv, %struct.sv* %86, i32 0, i32 2
  %87 = load i32, i32* %sv_flags132, align 4
  %and133 = and i32 %87, 768
  %tobool134 = icmp ne i32 %and133, 0
  br i1 %tobool134, label %cond.true135, label %cond.false166

cond.true135:                                     ; preds = %cond.false131
  %88 = load %struct.sv*, %struct.sv** %right, align 8
  %sv_flags136 = getelementptr inbounds %struct.sv, %struct.sv* %88, i32 0, i32 2
  %89 = load i32, i32* %sv_flags136, align 4
  %and137 = and i32 %89, 256
  %tobool138 = icmp ne i32 %and137, 0
  br i1 %tobool138, label %land.lhs.true139, label %lor.rhs145

land.lhs.true139:                                 ; preds = %cond.true135
  %90 = load %struct.sv*, %struct.sv** %right, align 8
  %sv_any140 = getelementptr inbounds %struct.sv, %struct.sv* %90, i32 0, i32 0
  %91 = load i8*, i8** %sv_any140, align 8
  %92 = bitcast i8* %91 to %struct.xpviv*
  %xiv_u141 = getelementptr inbounds %struct.xpviv, %struct.xpviv* %92, i32 0, i32 4
  %xivu_iv142 = bitcast %union._xivu* %xiv_u141 to i64*
  %93 = load i64, i64* %xivu_iv142, align 8
  %cmp143 = icmp ne i64 %93, 0
  br i1 %cmp143, label %lor.end164, label %lor.rhs145

lor.rhs145:                                       ; preds = %land.lhs.true139, %cond.true135
  %94 = load %struct.sv*, %struct.sv** %right, align 8
  %sv_flags146 = getelementptr inbounds %struct.sv, %struct.sv* %94, i32 0, i32 2
  %95 = load i32, i32* %sv_flags146, align 4
  %and147 = and i32 %95, 512
  %tobool148 = icmp ne i32 %and147, 0
  br i1 %tobool148, label %land.rhs149, label %land.end162

land.rhs149:                                      ; preds = %lor.rhs145
  %96 = load %struct.sv*, %struct.sv** %right, align 8
  %sv_any150 = getelementptr inbounds %struct.sv, %struct.sv* %96, i32 0, i32 0
  %97 = load i8*, i8** %sv_any150, align 8
  %98 = bitcast i8* %97 to %struct.xpvnv*
  %xnv_u151 = getelementptr inbounds %struct.xpvnv, %struct.xpvnv* %98, i32 0, i32 5
  %xnv_nv152 = bitcast %union._xnvu* %xnv_u151 to double*
  %99 = load double, double* %xnv_nv152, align 8
  %cmp153 = fcmp uno double %99, %99
  br i1 %cmp153, label %lor.end160, label %lor.rhs154

lor.rhs154:                                       ; preds = %land.rhs149
  %100 = load %struct.sv*, %struct.sv** %right, align 8
  %sv_any155 = getelementptr inbounds %struct.sv, %struct.sv* %100, i32 0, i32 0
  %101 = load i8*, i8** %sv_any155, align 8
  %102 = bitcast i8* %101 to %struct.xpvnv*
  %xnv_u156 = getelementptr inbounds %struct.xpvnv, %struct.xpvnv* %102, i32 0, i32 5
  %xnv_nv157 = bitcast %union._xnvu* %xnv_u156 to double*
  %103 = load double, double* %xnv_nv157, align 8
  %cmp158 = fcmp une double %103, 0.000000e+00
  br label %lor.end160

lor.end160:                                       ; preds = %lor.rhs154, %land.rhs149
  %104 = phi i1 [ true, %land.rhs149 ], [ %cmp158, %lor.rhs154 ]
  br label %land.end162

land.end162:                                      ; preds = %lor.end160, %lor.rhs145
  %105 = phi i1 [ false, %lor.rhs145 ], [ %104, %lor.end160 ]
  br label %lor.end164

lor.end164:                                       ; preds = %land.end162, %land.lhs.true139
  %106 = phi i1 [ true, %land.lhs.true139 ], [ %105, %land.end162 ]
  %lor.ext165 = zext i1 %106 to i32
  br label %cond.end169

cond.false166:                                    ; preds = %cond.false131
  %107 = load %struct.sv*, %struct.sv** %right, align 8
  %call167 = call zeroext i1 @Perl_sv_2bool_flags(%struct.sv* %107, i32 0)
  %conv168 = zext i1 %call167 to i32
  br label %cond.end169

cond.end169:                                      ; preds = %cond.false166, %lor.end164
  %cond170 = phi i32 [ %lor.ext165, %lor.end164 ], [ %conv168, %cond.false166 ]
  br label %cond.end171

cond.end171:                                      ; preds = %cond.end169, %land.end129
  %cond172 = phi i32 [ %land.ext130, %land.end129 ], [ %cond170, %cond.end169 ]
  br label %cond.end173

cond.end173:                                      ; preds = %cond.end171, %cond.true102
  %cond174 = phi i32 [ 0, %cond.true102 ], [ %cond172, %cond.end171 ]
  br label %cond.end175

cond.end175:                                      ; preds = %cond.end173, %cond.true85
  %cond176 = phi i32 [ %conv87, %cond.true85 ], [ %cond174, %cond.end173 ]
  %tobool177 = icmp ne i32 %cond176, 0
  br label %land.end178

land.end178:                                      ; preds = %cond.end175, %cond.false78, %cond.true77
  %108 = phi i1 [ false, %cond.false78 ], [ false, %cond.true77 ], [ %tobool177, %cond.end175 ]
  %land.ext179 = zext i1 %108 to i32
  %cmp180 = icmp ne i32 %land.ext75, %land.ext179
  br i1 %cmp180, label %if.then, label %if.else

if.then:                                          ; preds = %land.end178
  %109 = load %struct.sv**, %struct.sv*** %sp, align 8
  store %struct.sv* @PL_sv_yes, %struct.sv** %109, align 8
  %110 = load %struct.sv**, %struct.sv*** %sp, align 8
  store %struct.sv** %110, %struct.sv*** @PL_stack_sp, align 8
  %111 = load %struct.op*, %struct.op** @PL_op, align 8
  %op_next = getelementptr inbounds %struct.op, %struct.op* %111, i32 0, i32 0
  %112 = load %struct.op*, %struct.op** %op_next, align 8
  store %struct.op* %112, %struct.op** %retval, align 8
  br label %return

if.else:                                          ; preds = %land.end178
  %113 = load %struct.sv**, %struct.sv*** %sp, align 8
  store %struct.sv* @PL_sv_no, %struct.sv** %113, align 8
  %114 = load %struct.sv**, %struct.sv*** %sp, align 8
  store %struct.sv** %114, %struct.sv*** @PL_stack_sp, align 8
  %115 = load %struct.op*, %struct.op** @PL_op, align 8
  %op_next182 = getelementptr inbounds %struct.op, %struct.op* %115, i32 0, i32 0
  %116 = load %struct.op*, %struct.op** %op_next182, align 8
  store %struct.op* %116, %struct.op** %retval, align 8
  br label %return

return:                                           ; preds = %if.else, %if.then
  %117 = load %struct.op*, %struct.op** %retval, align 8
  ret %struct.op* %117
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.op* @Perl_pp_caller() #0 {
entry:
  %retval = alloca %struct.op*, align 8
  %sp = alloca %struct.sv**, align 8
  %cx = alloca %struct.context*, align 8
  %dbcx = alloca %struct.context*, align 8
  %gimme = alloca i32, align 4
  %stash_hek = alloca %struct.hek*, align 8
  %count = alloca i32, align 4
  %has_arg = alloca i8, align 1
  %lcop = alloca %struct.cop*, align 8
  %targ = alloca %struct.sv*, align 8
  %targ168 = alloca %struct.sv*, align 8
  %cur_text = alloca %struct.sv*, align 8
  %ary = alloca %struct.av*, align 8
  %off = alloca i64, align 8
  %mask = alloca %struct.sv*, align 8
  %old_warnings = alloca i64*, align 8
  %bits_all = alloca %struct.sv**, align 8
  %bits = alloca %struct.hv*, align 8
  %0 = load %struct.sv**, %struct.sv*** @PL_stack_sp, align 8
  store %struct.sv** %0, %struct.sv*** %sp, align 8
  %1 = load %struct.op*, %struct.op** @PL_op, align 8
  %op_flags = getelementptr inbounds %struct.op, %struct.op* %1, i32 0, i32 5
  %2 = load i8, i8* %op_flags, align 2
  %conv = zext i8 %2 to i32
  %and = and i32 %conv, 3
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %3 = load %struct.op*, %struct.op** @PL_op, align 8
  %op_flags1 = getelementptr inbounds %struct.op, %struct.op* %3, i32 0, i32 5
  %4 = load i8, i8* %op_flags1, align 2
  %conv2 = zext i8 %4 to i32
  %and3 = and i32 %conv2, 3
  br label %cond.end

cond.false:                                       ; preds = %entry
  %call = call i32 @Perl_block_gimme()
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %and3, %cond.true ], [ %call, %cond.false ]
  store i32 %cond, i32* %gimme, align 4
  store i32 0, i32* %count, align 4
  %5 = load %struct.op*, %struct.op** @PL_op, align 8
  %op_private = getelementptr inbounds %struct.op, %struct.op* %5, i32 0, i32 6
  %6 = load i8, i8* %op_private, align 1
  %conv4 = zext i8 %6 to i32
  %and5 = and i32 %conv4, 15
  %tobool6 = icmp ne i32 %and5, 0
  br i1 %tobool6, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %cond.end
  %7 = load %struct.sv**, %struct.sv*** %sp, align 8
  %8 = load %struct.sv*, %struct.sv** %7, align 8
  %tobool7 = icmp ne %struct.sv* %8, null
  br label %land.end

land.end:                                         ; preds = %land.rhs, %cond.end
  %9 = phi i1 [ false, %cond.end ], [ %tobool7, %land.rhs ]
  %frombool = zext i1 %9 to i8
  store i8 %frombool, i8* %has_arg, align 1
  %10 = load %struct.op*, %struct.op** @PL_op, align 8
  %op_private8 = getelementptr inbounds %struct.op, %struct.op* %10, i32 0, i32 6
  %11 = load i8, i8* %op_private8, align 1
  %conv9 = zext i8 %11 to i32
  %and10 = and i32 %conv9, 15
  %tobool11 = icmp ne i32 %and10, 0
  br i1 %tobool11, label %if.then, label %if.end23

if.then:                                          ; preds = %land.end
  %12 = load i8, i8* %has_arg, align 1
  %tobool12 = trunc i8 %12 to i1
  br i1 %tobool12, label %if.then13, label %if.else

if.then13:                                        ; preds = %if.then
  %13 = load %struct.sv**, %struct.sv*** %sp, align 8
  %incdec.ptr = getelementptr inbounds %struct.sv*, %struct.sv** %13, i32 -1
  store %struct.sv** %incdec.ptr, %struct.sv*** %sp, align 8
  %14 = load %struct.sv*, %struct.sv** %13, align 8
  store %struct.sv* %14, %struct.sv** @PL_Sv, align 8
  %15 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %sv_flags = getelementptr inbounds %struct.sv, %struct.sv* %15, i32 0, i32 2
  %16 = load i32, i32* %sv_flags, align 4
  %and14 = and i32 %16, 2097408
  %cmp = icmp eq i32 %and14, 256
  br i1 %cmp, label %cond.true16, label %cond.false17

cond.true16:                                      ; preds = %if.then13
  %17 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %sv_any = getelementptr inbounds %struct.sv, %struct.sv* %17, i32 0, i32 0
  %18 = load i8*, i8** %sv_any, align 8
  %19 = bitcast i8* %18 to %struct.xpviv*
  %xiv_u = getelementptr inbounds %struct.xpviv, %struct.xpviv* %19, i32 0, i32 4
  %xivu_iv = bitcast %union._xivu* %xiv_u to i64*
  %20 = load i64, i64* %xivu_iv, align 8
  br label %cond.end19

cond.false17:                                     ; preds = %if.then13
  %21 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %call18 = call i64 @Perl_sv_2iv_flags(%struct.sv* %21, i32 2)
  br label %cond.end19

cond.end19:                                       ; preds = %cond.false17, %cond.true16
  %cond20 = phi i64 [ %20, %cond.true16 ], [ %call18, %cond.false17 ]
  %conv21 = trunc i64 %cond20 to i32
  store i32 %conv21, i32* %count, align 4
  br label %if.end

if.else:                                          ; preds = %if.then
  %22 = load %struct.sv**, %struct.sv*** %sp, align 8
  %incdec.ptr22 = getelementptr inbounds %struct.sv*, %struct.sv** %22, i32 -1
  store %struct.sv** %incdec.ptr22, %struct.sv*** %sp, align 8
  %23 = load %struct.sv*, %struct.sv** %22, align 8
  br label %if.end

if.end:                                           ; preds = %if.else, %cond.end19
  br label %if.end23

if.end23:                                         ; preds = %if.end, %land.end
  %24 = load i32, i32* %count, align 4
  %25 = load %struct.op*, %struct.op** @PL_op, align 8
  %op_private24 = getelementptr inbounds %struct.op, %struct.op* %25, i32 0, i32 6
  %26 = load i8, i8* %op_private24, align 1
  %conv25 = zext i8 %26 to i32
  %and26 = and i32 %conv25, 128
  %tobool27 = icmp ne i32 %and26, 0
  %lnot = xor i1 %tobool27, true
  %lnot28 = xor i1 %lnot, true
  %lnot.ext = zext i1 %lnot28 to i32
  %add = add nsw i32 %24, %lnot.ext
  %call29 = call %struct.context* @Perl_caller_cx(i32 %add, %struct.context** %dbcx)
  store %struct.context* %call29, %struct.context** %cx, align 8
  %27 = load %struct.context*, %struct.context** %cx, align 8
  %tobool30 = icmp ne %struct.context* %27, null
  br i1 %tobool30, label %if.end45, label %if.then31

if.then31:                                        ; preds = %if.end23
  %28 = load i32, i32* %gimme, align 4
  %cmp32 = icmp ne i32 %28, 3
  br i1 %cmp32, label %if.then34, label %if.end43

if.then34:                                        ; preds = %if.then31
  br label %do.body

do.body:                                          ; preds = %if.then34
  %29 = load %struct.sv**, %struct.sv*** @PL_stack_max, align 8
  %30 = load %struct.sv**, %struct.sv*** %sp, align 8
  %sub.ptr.lhs.cast = ptrtoint %struct.sv** %29 to i64
  %sub.ptr.rhs.cast = ptrtoint %struct.sv** %30 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 8
  %cmp35 = icmp slt i64 %sub.ptr.div, 1
  br i1 %cmp35, label %cond.true37, label %cond.false38

cond.true37:                                      ; preds = %do.body
  br i1 true, label %if.then39, label %if.end41

cond.false38:                                     ; preds = %do.body
  br i1 false, label %if.then39, label %if.end41

if.then39:                                        ; preds = %cond.false38, %cond.true37
  %31 = load %struct.sv**, %struct.sv*** %sp, align 8
  %32 = load %struct.sv**, %struct.sv*** %sp, align 8
  %call40 = call %struct.sv** @Perl_stack_grow(%struct.sv** %31, %struct.sv** %32, i64 1)
  store %struct.sv** %call40, %struct.sv*** %sp, align 8
  %33 = load %struct.sv**, %struct.sv*** %sp, align 8
  br label %if.end41

if.end41:                                         ; preds = %if.then39, %cond.false38, %cond.true37
  br label %do.end

do.end:                                           ; preds = %if.end41
  %34 = load %struct.sv**, %struct.sv*** %sp, align 8
  %incdec.ptr42 = getelementptr inbounds %struct.sv*, %struct.sv** %34, i32 1
  store %struct.sv** %incdec.ptr42, %struct.sv*** %sp, align 8
  store %struct.sv* @PL_sv_undef, %struct.sv** %incdec.ptr42, align 8
  %35 = load %struct.sv**, %struct.sv*** %sp, align 8
  store %struct.sv** %35, %struct.sv*** @PL_stack_sp, align 8
  %36 = load %struct.op*, %struct.op** @PL_op, align 8
  %op_next = getelementptr inbounds %struct.op, %struct.op* %36, i32 0, i32 0
  %37 = load %struct.op*, %struct.op** %op_next, align 8
  store %struct.op* %37, %struct.op** %retval, align 8
  br label %return

if.end43:                                         ; preds = %if.then31
  %38 = load %struct.sv**, %struct.sv*** %sp, align 8
  store %struct.sv** %38, %struct.sv*** @PL_stack_sp, align 8
  %39 = load %struct.op*, %struct.op** @PL_op, align 8
  %op_next44 = getelementptr inbounds %struct.op, %struct.op* %39, i32 0, i32 0
  %40 = load %struct.op*, %struct.op** %op_next44, align 8
  store %struct.op* %40, %struct.op** %retval, align 8
  br label %return

if.end45:                                         ; preds = %if.end23
  %41 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u = getelementptr inbounds %struct.context, %struct.context* %41, i32 0, i32 0
  %cx_blk = bitcast %union.anon.16* %cx_u to %struct.block*
  %blku_oldcop = getelementptr inbounds %struct.block, %struct.block* %cx_blk, i32 0, i32 4
  %42 = load %struct.cop*, %struct.cop** %blku_oldcop, align 8
  %cop_stash = getelementptr inbounds %struct.cop, %struct.cop* %42, i32 0, i32 8
  %43 = load %struct.hv*, %struct.hv** %cop_stash, align 8
  %sv_flags46 = getelementptr inbounds %struct.hv, %struct.hv* %43, i32 0, i32 2
  %44 = load i32, i32* %sv_flags46, align 4
  %and47 = and i32 %44, 255
  %cmp48 = icmp eq i32 %and47, 12
  br i1 %cmp48, label %cond.true50, label %cond.false123

cond.true50:                                      ; preds = %if.end45
  %45 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u51 = getelementptr inbounds %struct.context, %struct.context* %45, i32 0, i32 0
  %cx_blk52 = bitcast %union.anon.16* %cx_u51 to %struct.block*
  %blku_oldcop53 = getelementptr inbounds %struct.block, %struct.block* %cx_blk52, i32 0, i32 4
  %46 = load %struct.cop*, %struct.cop** %blku_oldcop53, align 8
  %cop_stash54 = getelementptr inbounds %struct.cop, %struct.cop* %46, i32 0, i32 8
  %47 = load %struct.hv*, %struct.hv** %cop_stash54, align 8
  %sv_flags55 = getelementptr inbounds %struct.hv, %struct.hv* %47, i32 0, i32 2
  %48 = load i32, i32* %sv_flags55, align 4
  %and56 = and i32 %48, 33554432
  %tobool57 = icmp ne i32 %and56, 0
  br i1 %tobool57, label %land.lhs.true, label %cond.false120

land.lhs.true:                                    ; preds = %cond.true50
  %49 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u58 = getelementptr inbounds %struct.context, %struct.context* %49, i32 0, i32 0
  %cx_blk59 = bitcast %union.anon.16* %cx_u58 to %struct.block*
  %blku_oldcop60 = getelementptr inbounds %struct.block, %struct.block* %cx_blk59, i32 0, i32 4
  %50 = load %struct.cop*, %struct.cop** %blku_oldcop60, align 8
  %cop_stash61 = getelementptr inbounds %struct.cop, %struct.cop* %50, i32 0, i32 8
  %51 = load %struct.hv*, %struct.hv** %cop_stash61, align 8
  %sv_u = getelementptr inbounds %struct.hv, %struct.hv* %51, i32 0, i32 3
  %svu_hash = bitcast %union.anon.5* %sv_u to %struct.he***
  %52 = load %struct.he**, %struct.he*** %svu_hash, align 8
  %53 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u62 = getelementptr inbounds %struct.context, %struct.context* %53, i32 0, i32 0
  %cx_blk63 = bitcast %union.anon.16* %cx_u62 to %struct.block*
  %blku_oldcop64 = getelementptr inbounds %struct.block, %struct.block* %cx_blk63, i32 0, i32 4
  %54 = load %struct.cop*, %struct.cop** %blku_oldcop64, align 8
  %cop_stash65 = getelementptr inbounds %struct.cop, %struct.cop* %54, i32 0, i32 8
  %55 = load %struct.hv*, %struct.hv** %cop_stash65, align 8
  %sv_any66 = getelementptr inbounds %struct.hv, %struct.hv* %55, i32 0, i32 0
  %56 = load %struct.xpvhv*, %struct.xpvhv** %sv_any66, align 8
  %xhv_max = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %56, i32 0, i32 3
  %57 = load i64, i64* %xhv_max, align 8
  %add67 = add i64 %57, 1
  %arrayidx = getelementptr inbounds %struct.he*, %struct.he** %52, i64 %add67
  %58 = bitcast %struct.he** %arrayidx to %struct.xpvhv_aux*
  %xhv_name_u = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %58, i32 0, i32 0
  %xhvnameu_name = bitcast %union._xhvnameu* %xhv_name_u to %struct.hek**
  %59 = load %struct.hek*, %struct.hek** %xhvnameu_name, align 8
  %tobool68 = icmp ne %struct.hek* %59, null
  br i1 %tobool68, label %cond.true69, label %cond.false120

cond.true69:                                      ; preds = %land.lhs.true
  %60 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u70 = getelementptr inbounds %struct.context, %struct.context* %60, i32 0, i32 0
  %cx_blk71 = bitcast %union.anon.16* %cx_u70 to %struct.block*
  %blku_oldcop72 = getelementptr inbounds %struct.block, %struct.block* %cx_blk71, i32 0, i32 4
  %61 = load %struct.cop*, %struct.cop** %blku_oldcop72, align 8
  %cop_stash73 = getelementptr inbounds %struct.cop, %struct.cop* %61, i32 0, i32 8
  %62 = load %struct.hv*, %struct.hv** %cop_stash73, align 8
  %sv_u74 = getelementptr inbounds %struct.hv, %struct.hv* %62, i32 0, i32 3
  %svu_hash75 = bitcast %union.anon.5* %sv_u74 to %struct.he***
  %63 = load %struct.he**, %struct.he*** %svu_hash75, align 8
  %64 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u76 = getelementptr inbounds %struct.context, %struct.context* %64, i32 0, i32 0
  %cx_blk77 = bitcast %union.anon.16* %cx_u76 to %struct.block*
  %blku_oldcop78 = getelementptr inbounds %struct.block, %struct.block* %cx_blk77, i32 0, i32 4
  %65 = load %struct.cop*, %struct.cop** %blku_oldcop78, align 8
  %cop_stash79 = getelementptr inbounds %struct.cop, %struct.cop* %65, i32 0, i32 8
  %66 = load %struct.hv*, %struct.hv** %cop_stash79, align 8
  %sv_any80 = getelementptr inbounds %struct.hv, %struct.hv* %66, i32 0, i32 0
  %67 = load %struct.xpvhv*, %struct.xpvhv** %sv_any80, align 8
  %xhv_max81 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %67, i32 0, i32 3
  %68 = load i64, i64* %xhv_max81, align 8
  %add82 = add i64 %68, 1
  %arrayidx83 = getelementptr inbounds %struct.he*, %struct.he** %63, i64 %add82
  %69 = bitcast %struct.he** %arrayidx83 to %struct.xpvhv_aux*
  %xhv_name_count = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %69, i32 0, i32 4
  %70 = load i32, i32* %xhv_name_count, align 4
  %tobool84 = icmp ne i32 %70, 0
  br i1 %tobool84, label %cond.true85, label %cond.false101

cond.true85:                                      ; preds = %cond.true69
  %71 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u86 = getelementptr inbounds %struct.context, %struct.context* %71, i32 0, i32 0
  %cx_blk87 = bitcast %union.anon.16* %cx_u86 to %struct.block*
  %blku_oldcop88 = getelementptr inbounds %struct.block, %struct.block* %cx_blk87, i32 0, i32 4
  %72 = load %struct.cop*, %struct.cop** %blku_oldcop88, align 8
  %cop_stash89 = getelementptr inbounds %struct.cop, %struct.cop* %72, i32 0, i32 8
  %73 = load %struct.hv*, %struct.hv** %cop_stash89, align 8
  %sv_u90 = getelementptr inbounds %struct.hv, %struct.hv* %73, i32 0, i32 3
  %svu_hash91 = bitcast %union.anon.5* %sv_u90 to %struct.he***
  %74 = load %struct.he**, %struct.he*** %svu_hash91, align 8
  %75 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u92 = getelementptr inbounds %struct.context, %struct.context* %75, i32 0, i32 0
  %cx_blk93 = bitcast %union.anon.16* %cx_u92 to %struct.block*
  %blku_oldcop94 = getelementptr inbounds %struct.block, %struct.block* %cx_blk93, i32 0, i32 4
  %76 = load %struct.cop*, %struct.cop** %blku_oldcop94, align 8
  %cop_stash95 = getelementptr inbounds %struct.cop, %struct.cop* %76, i32 0, i32 8
  %77 = load %struct.hv*, %struct.hv** %cop_stash95, align 8
  %sv_any96 = getelementptr inbounds %struct.hv, %struct.hv* %77, i32 0, i32 0
  %78 = load %struct.xpvhv*, %struct.xpvhv** %sv_any96, align 8
  %xhv_max97 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %78, i32 0, i32 3
  %79 = load i64, i64* %xhv_max97, align 8
  %add98 = add i64 %79, 1
  %arrayidx99 = getelementptr inbounds %struct.he*, %struct.he** %74, i64 %add98
  %80 = bitcast %struct.he** %arrayidx99 to %struct.xpvhv_aux*
  %xhv_name_u100 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %80, i32 0, i32 0
  %xhvnameu_names = bitcast %union._xhvnameu* %xhv_name_u100 to %struct.hek***
  %81 = load %struct.hek**, %struct.hek*** %xhvnameu_names, align 8
  %82 = load %struct.hek*, %struct.hek** %81, align 8
  br label %cond.end118

cond.false101:                                    ; preds = %cond.true69
  %83 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u102 = getelementptr inbounds %struct.context, %struct.context* %83, i32 0, i32 0
  %cx_blk103 = bitcast %union.anon.16* %cx_u102 to %struct.block*
  %blku_oldcop104 = getelementptr inbounds %struct.block, %struct.block* %cx_blk103, i32 0, i32 4
  %84 = load %struct.cop*, %struct.cop** %blku_oldcop104, align 8
  %cop_stash105 = getelementptr inbounds %struct.cop, %struct.cop* %84, i32 0, i32 8
  %85 = load %struct.hv*, %struct.hv** %cop_stash105, align 8
  %sv_u106 = getelementptr inbounds %struct.hv, %struct.hv* %85, i32 0, i32 3
  %svu_hash107 = bitcast %union.anon.5* %sv_u106 to %struct.he***
  %86 = load %struct.he**, %struct.he*** %svu_hash107, align 8
  %87 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u108 = getelementptr inbounds %struct.context, %struct.context* %87, i32 0, i32 0
  %cx_blk109 = bitcast %union.anon.16* %cx_u108 to %struct.block*
  %blku_oldcop110 = getelementptr inbounds %struct.block, %struct.block* %cx_blk109, i32 0, i32 4
  %88 = load %struct.cop*, %struct.cop** %blku_oldcop110, align 8
  %cop_stash111 = getelementptr inbounds %struct.cop, %struct.cop* %88, i32 0, i32 8
  %89 = load %struct.hv*, %struct.hv** %cop_stash111, align 8
  %sv_any112 = getelementptr inbounds %struct.hv, %struct.hv* %89, i32 0, i32 0
  %90 = load %struct.xpvhv*, %struct.xpvhv** %sv_any112, align 8
  %xhv_max113 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %90, i32 0, i32 3
  %91 = load i64, i64* %xhv_max113, align 8
  %add114 = add i64 %91, 1
  %arrayidx115 = getelementptr inbounds %struct.he*, %struct.he** %86, i64 %add114
  %92 = bitcast %struct.he** %arrayidx115 to %struct.xpvhv_aux*
  %xhv_name_u116 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %92, i32 0, i32 0
  %xhvnameu_name117 = bitcast %union._xhvnameu* %xhv_name_u116 to %struct.hek**
  %93 = load %struct.hek*, %struct.hek** %xhvnameu_name117, align 8
  br label %cond.end118

cond.end118:                                      ; preds = %cond.false101, %cond.true85
  %cond119 = phi %struct.hek* [ %82, %cond.true85 ], [ %93, %cond.false101 ]
  br label %cond.end121

cond.false120:                                    ; preds = %land.lhs.true, %cond.true50
  br label %cond.end121

cond.end121:                                      ; preds = %cond.false120, %cond.end118
  %cond122 = phi %struct.hek* [ %cond119, %cond.end118 ], [ null, %cond.false120 ]
  br label %cond.end124

cond.false123:                                    ; preds = %if.end45
  br label %cond.end124

cond.end124:                                      ; preds = %cond.false123, %cond.end121
  %cond125 = phi %struct.hek* [ %cond122, %cond.end121 ], [ null, %cond.false123 ]
  store %struct.hek* %cond125, %struct.hek** %stash_hek, align 8
  %94 = load i32, i32* %gimme, align 4
  %cmp126 = icmp ne i32 %94, 3
  br i1 %cmp126, label %if.then128, label %if.end150

if.then128:                                       ; preds = %cond.end124
  br label %do.body129

do.body129:                                       ; preds = %if.then128
  %95 = load %struct.sv**, %struct.sv*** @PL_stack_max, align 8
  %96 = load %struct.sv**, %struct.sv*** %sp, align 8
  %sub.ptr.lhs.cast130 = ptrtoint %struct.sv** %95 to i64
  %sub.ptr.rhs.cast131 = ptrtoint %struct.sv** %96 to i64
  %sub.ptr.sub132 = sub i64 %sub.ptr.lhs.cast130, %sub.ptr.rhs.cast131
  %sub.ptr.div133 = sdiv exact i64 %sub.ptr.sub132, 8
  %cmp134 = icmp slt i64 %sub.ptr.div133, 1
  br i1 %cmp134, label %cond.true136, label %cond.false137

cond.true136:                                     ; preds = %do.body129
  br i1 true, label %if.then138, label %if.end140

cond.false137:                                    ; preds = %do.body129
  br i1 false, label %if.then138, label %if.end140

if.then138:                                       ; preds = %cond.false137, %cond.true136
  %97 = load %struct.sv**, %struct.sv*** %sp, align 8
  %98 = load %struct.sv**, %struct.sv*** %sp, align 8
  %call139 = call %struct.sv** @Perl_stack_grow(%struct.sv** %97, %struct.sv** %98, i64 1)
  store %struct.sv** %call139, %struct.sv*** %sp, align 8
  %99 = load %struct.sv**, %struct.sv*** %sp, align 8
  br label %if.end140

if.end140:                                        ; preds = %if.then138, %cond.false137, %cond.true136
  br label %do.end141

do.end141:                                        ; preds = %if.end140
  %100 = load %struct.hek*, %struct.hek** %stash_hek, align 8
  %tobool142 = icmp ne %struct.hek* %100, null
  br i1 %tobool142, label %if.else145, label %if.then143

if.then143:                                       ; preds = %do.end141
  %101 = load %struct.sv**, %struct.sv*** %sp, align 8
  %incdec.ptr144 = getelementptr inbounds %struct.sv*, %struct.sv** %101, i32 1
  store %struct.sv** %incdec.ptr144, %struct.sv*** %sp, align 8
  store %struct.sv* @PL_sv_undef, %struct.sv** %incdec.ptr144, align 8
  br label %if.end148

if.else145:                                       ; preds = %do.end141
  %102 = load %struct.sv**, %struct.sv*** @PL_curpad, align 8
  %103 = load %struct.op*, %struct.op** @PL_op, align 8
  %op_targ = getelementptr inbounds %struct.op, %struct.op* %103, i32 0, i32 3
  %104 = load i64, i64* %op_targ, align 8
  %arrayidx146 = getelementptr inbounds %struct.sv*, %struct.sv** %102, i64 %104
  %105 = load %struct.sv*, %struct.sv** %arrayidx146, align 8
  store %struct.sv* %105, %struct.sv** %targ, align 8
  %106 = load %struct.sv*, %struct.sv** %targ, align 8
  %107 = load %struct.hek*, %struct.hek** %stash_hek, align 8
  call void @Perl_sv_sethek(%struct.sv* %106, %struct.hek* %107)
  %108 = load %struct.sv*, %struct.sv** %targ, align 8
  %109 = load %struct.sv**, %struct.sv*** %sp, align 8
  %incdec.ptr147 = getelementptr inbounds %struct.sv*, %struct.sv** %109, i32 1
  store %struct.sv** %incdec.ptr147, %struct.sv*** %sp, align 8
  store %struct.sv* %108, %struct.sv** %incdec.ptr147, align 8
  br label %if.end148

if.end148:                                        ; preds = %if.else145, %if.then143
  %110 = load %struct.sv**, %struct.sv*** %sp, align 8
  store %struct.sv** %110, %struct.sv*** @PL_stack_sp, align 8
  %111 = load %struct.op*, %struct.op** @PL_op, align 8
  %op_next149 = getelementptr inbounds %struct.op, %struct.op* %111, i32 0, i32 0
  %112 = load %struct.op*, %struct.op** %op_next149, align 8
  store %struct.op* %112, %struct.op** %retval, align 8
  br label %return

if.end150:                                        ; preds = %cond.end124
  br label %do.body151

do.body151:                                       ; preds = %if.end150
  %113 = load %struct.sv**, %struct.sv*** @PL_stack_max, align 8
  %114 = load %struct.sv**, %struct.sv*** %sp, align 8
  %sub.ptr.lhs.cast152 = ptrtoint %struct.sv** %113 to i64
  %sub.ptr.rhs.cast153 = ptrtoint %struct.sv** %114 to i64
  %sub.ptr.sub154 = sub i64 %sub.ptr.lhs.cast152, %sub.ptr.rhs.cast153
  %sub.ptr.div155 = sdiv exact i64 %sub.ptr.sub154, 8
  %cmp156 = icmp slt i64 %sub.ptr.div155, 11
  br i1 %cmp156, label %cond.true158, label %cond.false159

cond.true158:                                     ; preds = %do.body151
  br i1 true, label %if.then160, label %if.end162

cond.false159:                                    ; preds = %do.body151
  br i1 false, label %if.then160, label %if.end162

if.then160:                                       ; preds = %cond.false159, %cond.true158
  %115 = load %struct.sv**, %struct.sv*** %sp, align 8
  %116 = load %struct.sv**, %struct.sv*** %sp, align 8
  %call161 = call %struct.sv** @Perl_stack_grow(%struct.sv** %115, %struct.sv** %116, i64 11)
  store %struct.sv** %call161, %struct.sv*** %sp, align 8
  %117 = load %struct.sv**, %struct.sv*** %sp, align 8
  br label %if.end162

if.end162:                                        ; preds = %if.then160, %cond.false159, %cond.true158
  br label %do.end163

do.end163:                                        ; preds = %if.end162
  %118 = load %struct.hek*, %struct.hek** %stash_hek, align 8
  %tobool164 = icmp ne %struct.hek* %118, null
  br i1 %tobool164, label %if.else167, label %if.then165

if.then165:                                       ; preds = %do.end163
  %119 = load %struct.sv**, %struct.sv*** %sp, align 8
  %incdec.ptr166 = getelementptr inbounds %struct.sv*, %struct.sv** %119, i32 1
  store %struct.sv** %incdec.ptr166, %struct.sv*** %sp, align 8
  store %struct.sv* @PL_sv_undef, %struct.sv** %incdec.ptr166, align 8
  br label %if.end184

if.else167:                                       ; preds = %do.end163
  %120 = load %struct.sv**, %struct.sv*** @PL_curpad, align 8
  %121 = load %struct.op*, %struct.op** @PL_op, align 8
  %op_targ169 = getelementptr inbounds %struct.op, %struct.op* %121, i32 0, i32 3
  %122 = load i64, i64* %op_targ169, align 8
  %arrayidx170 = getelementptr inbounds %struct.sv*, %struct.sv** %120, i64 %122
  %123 = load %struct.sv*, %struct.sv** %arrayidx170, align 8
  store %struct.sv* %123, %struct.sv** %targ168, align 8
  %124 = load %struct.sv*, %struct.sv** %targ168, align 8
  %125 = load %struct.hek*, %struct.hek** %stash_hek, align 8
  call void @Perl_sv_sethek(%struct.sv* %124, %struct.hek* %125)
  br label %do.body171

do.body171:                                       ; preds = %if.else167
  br label %do.body172

do.body172:                                       ; preds = %do.body171
  %126 = load %struct.sv*, %struct.sv** %targ168, align 8
  %sv_flags173 = getelementptr inbounds %struct.sv, %struct.sv* %126, i32 0, i32 2
  %127 = load i32, i32* %sv_flags173, align 4
  %and174 = and i32 %127, 4194304
  %tobool175 = icmp ne i32 %and174, 0
  br i1 %tobool175, label %cond.true176, label %cond.false177

cond.true176:                                     ; preds = %do.body172
  br i1 true, label %if.then178, label %if.end180

cond.false177:                                    ; preds = %do.body172
  br i1 false, label %if.then178, label %if.end180

if.then178:                                       ; preds = %cond.false177, %cond.true176
  %128 = load %struct.sv*, %struct.sv** %targ168, align 8
  %call179 = call i32 @Perl_mg_set(%struct.sv* %128)
  br label %if.end180

if.end180:                                        ; preds = %if.then178, %cond.false177, %cond.true176
  br label %do.end181

do.end181:                                        ; preds = %if.end180
  %129 = load %struct.sv*, %struct.sv** %targ168, align 8
  %130 = load %struct.sv**, %struct.sv*** %sp, align 8
  %incdec.ptr182 = getelementptr inbounds %struct.sv*, %struct.sv** %130, i32 1
  store %struct.sv** %incdec.ptr182, %struct.sv*** %sp, align 8
  store %struct.sv* %129, %struct.sv** %incdec.ptr182, align 8
  br label %do.end183

do.end183:                                        ; preds = %do.end181
  br label %if.end184

if.end184:                                        ; preds = %do.end183, %if.then165
  %131 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u185 = getelementptr inbounds %struct.context, %struct.context* %131, i32 0, i32 0
  %cx_blk186 = bitcast %union.anon.16* %cx_u185 to %struct.block*
  %blku_oldcop187 = getelementptr inbounds %struct.block, %struct.block* %cx_blk186, i32 0, i32 4
  %132 = load %struct.cop*, %struct.cop** %blku_oldcop187, align 8
  %cop_filegv = getelementptr inbounds %struct.cop, %struct.cop* %132, i32 0, i32 9
  %133 = load %struct.gv*, %struct.gv** %cop_filegv, align 8
  %tobool188 = icmp ne %struct.gv* %133, null
  br i1 %tobool188, label %cond.true189, label %cond.false196

cond.true189:                                     ; preds = %if.end184
  %134 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u190 = getelementptr inbounds %struct.context, %struct.context* %134, i32 0, i32 0
  %cx_blk191 = bitcast %union.anon.16* %cx_u190 to %struct.block*
  %blku_oldcop192 = getelementptr inbounds %struct.block, %struct.block* %cx_blk191, i32 0, i32 4
  %135 = load %struct.cop*, %struct.cop** %blku_oldcop192, align 8
  %cop_filegv193 = getelementptr inbounds %struct.cop, %struct.cop* %135, i32 0, i32 9
  %136 = load %struct.gv*, %struct.gv** %cop_filegv193, align 8
  %sv_any194 = getelementptr inbounds %struct.gv, %struct.gv* %136, i32 0, i32 0
  %137 = load %struct.xpvgv*, %struct.xpvgv** %sv_any194, align 8
  %xiv_u195 = getelementptr inbounds %struct.xpvgv, %struct.xpvgv* %137, i32 0, i32 4
  %xivu_namehek = bitcast %union._xivu* %xiv_u195 to %struct.hek**
  %138 = load %struct.hek*, %struct.hek** %xivu_namehek, align 8
  %hek_key = getelementptr inbounds %struct.hek, %struct.hek* %138, i32 0, i32 2
  %arraydecay = getelementptr inbounds [1 x i8], [1 x i8]* %hek_key, i64 0, i64 0
  %add.ptr = getelementptr inbounds i8, i8* %arraydecay, i64 2
  br label %cond.end197

cond.false196:                                    ; preds = %if.end184
  br label %cond.end197

cond.end197:                                      ; preds = %cond.false196, %cond.true189
  %cond198 = phi i8* [ %add.ptr, %cond.true189 ], [ null, %cond.false196 ]
  %call199 = call %struct.sv* @Perl_newSVpv(i8* %cond198, i64 0)
  %call200 = call %struct.sv* @Perl_sv_2mortal(%struct.sv* %call199)
  %139 = load %struct.sv**, %struct.sv*** %sp, align 8
  %incdec.ptr201 = getelementptr inbounds %struct.sv*, %struct.sv** %139, i32 1
  store %struct.sv** %incdec.ptr201, %struct.sv*** %sp, align 8
  store %struct.sv* %call200, %struct.sv** %incdec.ptr201, align 8
  %140 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u202 = getelementptr inbounds %struct.context, %struct.context* %140, i32 0, i32 0
  %cx_blk203 = bitcast %union.anon.16* %cx_u202 to %struct.block*
  %blku_oldcop204 = getelementptr inbounds %struct.block, %struct.block* %cx_blk203, i32 0, i32 4
  %141 = load %struct.cop*, %struct.cop** %blku_oldcop204, align 8
  %142 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u205 = getelementptr inbounds %struct.context, %struct.context* %142, i32 0, i32 0
  %cx_blk206 = bitcast %union.anon.16* %cx_u205 to %struct.block*
  %blku_oldcop207 = getelementptr inbounds %struct.block, %struct.block* %cx_blk206, i32 0, i32 4
  %143 = load %struct.cop*, %struct.cop** %blku_oldcop207, align 8
  %op_sibling = getelementptr inbounds %struct.cop, %struct.cop* %143, i32 0, i32 1
  %144 = load %struct.op*, %struct.op** %op_sibling, align 8
  %add.ptr208 = getelementptr inbounds %struct.op, %struct.op* %144, i64 0
  %145 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u209 = getelementptr inbounds %struct.context, %struct.context* %145, i32 0, i32 0
  %cx_blk210 = bitcast %union.anon.16* %cx_u209 to %struct.block*
  %blk_u = getelementptr inbounds %struct.block, %struct.block* %cx_blk210, i32 0, i32 8
  %blku_sub = bitcast %union.anon.20* %blk_u to %struct.block_sub*
  %retop = getelementptr inbounds %struct.block_sub, %struct.block_sub* %blku_sub, i32 0, i32 0
  %146 = load %struct.op*, %struct.op** %retop, align 8
  %call211 = call %struct.cop* @Perl_closest_cop(%struct.cop* %141, %struct.op* %add.ptr208, %struct.op* %146, i1 zeroext true)
  store %struct.cop* %call211, %struct.cop** %lcop, align 8
  %147 = load %struct.cop*, %struct.cop** %lcop, align 8
  %tobool212 = icmp ne %struct.cop* %147, null
  br i1 %tobool212, label %if.end217, label %if.then213

if.then213:                                       ; preds = %cond.end197
  %148 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u214 = getelementptr inbounds %struct.context, %struct.context* %148, i32 0, i32 0
  %cx_blk215 = bitcast %union.anon.16* %cx_u214 to %struct.block*
  %blku_oldcop216 = getelementptr inbounds %struct.block, %struct.block* %cx_blk215, i32 0, i32 4
  %149 = load %struct.cop*, %struct.cop** %blku_oldcop216, align 8
  store %struct.cop* %149, %struct.cop** %lcop, align 8
  br label %if.end217

if.end217:                                        ; preds = %if.then213, %cond.end197
  %call218 = call %struct.sv* @Perl_sv_newmortal()
  %150 = load %struct.sv**, %struct.sv*** %sp, align 8
  %incdec.ptr219 = getelementptr inbounds %struct.sv*, %struct.sv** %150, i32 1
  store %struct.sv** %incdec.ptr219, %struct.sv*** %sp, align 8
  store %struct.sv* %call218, %struct.sv** %incdec.ptr219, align 8
  %151 = load %struct.cop*, %struct.cop** %lcop, align 8
  %cop_line = getelementptr inbounds %struct.cop, %struct.cop* %151, i32 0, i32 7
  %152 = load i32, i32* %cop_line, align 4
  %conv220 = sext i32 %152 to i64
  call void @Perl_sv_setiv(%struct.sv* %call218, i64 %conv220)
  %153 = load i8, i8* %has_arg, align 1
  %tobool221 = trunc i8 %153 to i1
  br i1 %tobool221, label %if.end224, label %if.then222

if.then222:                                       ; preds = %if.end217
  %154 = load %struct.sv**, %struct.sv*** %sp, align 8
  store %struct.sv** %154, %struct.sv*** @PL_stack_sp, align 8
  %155 = load %struct.op*, %struct.op** @PL_op, align 8
  %op_next223 = getelementptr inbounds %struct.op, %struct.op* %155, i32 0, i32 0
  %156 = load %struct.op*, %struct.op** %op_next223, align 8
  store %struct.op* %156, %struct.op** %retval, align 8
  br label %return

if.end224:                                        ; preds = %if.end217
  %157 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u225 = getelementptr inbounds %struct.context, %struct.context* %157, i32 0, i32 0
  %cx_subst = bitcast %union.anon.16* %cx_u225 to %struct.subst*
  %sbu_type = getelementptr inbounds %struct.subst, %struct.subst* %cx_subst, i32 0, i32 0
  %158 = load i8, i8* %sbu_type, align 8
  %conv226 = zext i8 %158 to i32
  %and227 = and i32 %conv226, 15
  %cmp228 = icmp eq i32 %and227, 8
  br i1 %cmp228, label %if.then237, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end224
  %159 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u230 = getelementptr inbounds %struct.context, %struct.context* %159, i32 0, i32 0
  %cx_subst231 = bitcast %union.anon.16* %cx_u230 to %struct.subst*
  %sbu_type232 = getelementptr inbounds %struct.subst, %struct.subst* %cx_subst231, i32 0, i32 0
  %160 = load i8, i8* %sbu_type232, align 8
  %conv233 = zext i8 %160 to i32
  %and234 = and i32 %conv233, 15
  %cmp235 = icmp eq i32 %and234, 9
  br i1 %cmp235, label %if.then237, label %if.else276

if.then237:                                       ; preds = %lor.lhs.false, %if.end224
  %161 = load %struct.context*, %struct.context** %dbcx, align 8
  %cx_u238 = getelementptr inbounds %struct.context, %struct.context* %161, i32 0, i32 0
  %cx_blk239 = bitcast %union.anon.16* %cx_u238 to %struct.block*
  %blk_u240 = getelementptr inbounds %struct.block, %struct.block* %cx_blk239, i32 0, i32 8
  %blku_sub241 = bitcast %union.anon.20* %blk_u240 to %struct.block_sub*
  %cv = getelementptr inbounds %struct.block_sub, %struct.block_sub* %blku_sub241, i32 0, i32 1
  %162 = load %struct.cv*, %struct.cv** %cv, align 8
  %sv_any242 = getelementptr inbounds %struct.cv, %struct.cv* %162, i32 0, i32 0
  %163 = load %struct.xpvcv*, %struct.xpvcv** %sv_any242, align 8
  %xcv_gv_u = getelementptr inbounds %struct.xpvcv, %struct.xpvcv* %163, i32 0, i32 7
  %xcv_gv = bitcast %union.anon.12* %xcv_gv_u to %struct.gv**
  %164 = load %struct.gv*, %struct.gv** %xcv_gv, align 8
  %tobool243 = icmp ne %struct.gv* %164, null
  br i1 %tobool243, label %cond.true244, label %cond.false245

cond.true244:                                     ; preds = %if.then237
  br i1 true, label %if.then246, label %if.else263

cond.false245:                                    ; preds = %if.then237
  br i1 false, label %if.then246, label %if.else263

if.then246:                                       ; preds = %cond.false245, %cond.true244
  %165 = load %struct.context*, %struct.context** %dbcx, align 8
  %cx_u247 = getelementptr inbounds %struct.context, %struct.context* %165, i32 0, i32 0
  %cx_blk248 = bitcast %union.anon.16* %cx_u247 to %struct.block*
  %blk_u249 = getelementptr inbounds %struct.block, %struct.block* %cx_blk248, i32 0, i32 8
  %blku_sub250 = bitcast %union.anon.20* %blk_u249 to %struct.block_sub*
  %cv251 = getelementptr inbounds %struct.block_sub, %struct.block_sub* %blku_sub250, i32 0, i32 1
  %166 = load %struct.cv*, %struct.cv** %cv251, align 8
  %call252 = call %struct.sv* @Perl_cv_name(%struct.cv* %166, %struct.sv* null, i32 0)
  %167 = load %struct.sv**, %struct.sv*** %sp, align 8
  %incdec.ptr253 = getelementptr inbounds %struct.sv*, %struct.sv** %167, i32 1
  store %struct.sv** %incdec.ptr253, %struct.sv*** %sp, align 8
  store %struct.sv* %call252, %struct.sv** %incdec.ptr253, align 8
  %168 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u254 = getelementptr inbounds %struct.context, %struct.context* %168, i32 0, i32 0
  %cx_subst255 = bitcast %union.anon.16* %cx_u254 to %struct.subst*
  %sbu_type256 = getelementptr inbounds %struct.subst, %struct.subst* %cx_subst255, i32 0, i32 0
  %169 = load i8, i8* %sbu_type256, align 8
  %conv257 = zext i8 %169 to i32
  %and258 = and i32 %conv257, 32
  %cmp259 = icmp eq i32 %and258, 32
  %170 = zext i1 %cmp259 to i64
  %cond261 = select i1 %cmp259, %struct.sv* @PL_sv_yes, %struct.sv* @PL_sv_no
  %171 = load %struct.sv**, %struct.sv*** %sp, align 8
  %incdec.ptr262 = getelementptr inbounds %struct.sv*, %struct.sv** %171, i32 1
  store %struct.sv** %incdec.ptr262, %struct.sv*** %sp, align 8
  store %struct.sv* %cond261, %struct.sv** %incdec.ptr262, align 8
  br label %if.end275

if.else263:                                       ; preds = %cond.false245, %cond.true244
  %call264 = call %struct.sv* @Perl_newSVpvn_flags(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.19, i64 0, i64 0), i64 9, i32 524288)
  %172 = load %struct.sv**, %struct.sv*** %sp, align 8
  %incdec.ptr265 = getelementptr inbounds %struct.sv*, %struct.sv** %172, i32 1
  store %struct.sv** %incdec.ptr265, %struct.sv*** %sp, align 8
  store %struct.sv* %call264, %struct.sv** %incdec.ptr265, align 8
  %173 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u266 = getelementptr inbounds %struct.context, %struct.context* %173, i32 0, i32 0
  %cx_subst267 = bitcast %union.anon.16* %cx_u266 to %struct.subst*
  %sbu_type268 = getelementptr inbounds %struct.subst, %struct.subst* %cx_subst267, i32 0, i32 0
  %174 = load i8, i8* %sbu_type268, align 8
  %conv269 = zext i8 %174 to i32
  %and270 = and i32 %conv269, 32
  %cmp271 = icmp eq i32 %and270, 32
  %175 = zext i1 %cmp271 to i64
  %cond273 = select i1 %cmp271, %struct.sv* @PL_sv_yes, %struct.sv* @PL_sv_no
  %176 = load %struct.sv**, %struct.sv*** %sp, align 8
  %incdec.ptr274 = getelementptr inbounds %struct.sv*, %struct.sv** %176, i32 1
  store %struct.sv** %incdec.ptr274, %struct.sv*** %sp, align 8
  store %struct.sv* %cond273, %struct.sv** %incdec.ptr274, align 8
  br label %if.end275

if.end275:                                        ; preds = %if.else263, %if.then246
  br label %if.end281

if.else276:                                       ; preds = %lor.lhs.false
  %call277 = call %struct.sv* @Perl_newSVpvn_flags(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.20, i64 0, i64 0), i64 6, i32 524288)
  %177 = load %struct.sv**, %struct.sv*** %sp, align 8
  %incdec.ptr278 = getelementptr inbounds %struct.sv*, %struct.sv** %177, i32 1
  store %struct.sv** %incdec.ptr278, %struct.sv*** %sp, align 8
  store %struct.sv* %call277, %struct.sv** %incdec.ptr278, align 8
  %call279 = call %struct.sv* @Perl_sv_newmortal()
  %178 = load %struct.sv**, %struct.sv*** %sp, align 8
  %incdec.ptr280 = getelementptr inbounds %struct.sv*, %struct.sv** %178, i32 1
  store %struct.sv** %incdec.ptr280, %struct.sv*** %sp, align 8
  store %struct.sv* %call279, %struct.sv** %incdec.ptr280, align 8
  call void @Perl_sv_setiv(%struct.sv* %call279, i64 0)
  br label %if.end281

if.end281:                                        ; preds = %if.else276, %if.end275
  %179 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u282 = getelementptr inbounds %struct.context, %struct.context* %179, i32 0, i32 0
  %cx_blk283 = bitcast %union.anon.16* %cx_u282 to %struct.block*
  %blku_gimme = getelementptr inbounds %struct.block, %struct.block* %cx_blk283, i32 0, i32 1
  %180 = load i8, i8* %blku_gimme, align 1
  %conv284 = zext i8 %180 to i32
  store i32 %conv284, i32* %gimme, align 4
  %181 = load i32, i32* %gimme, align 4
  %cmp285 = icmp eq i32 %181, 1
  br i1 %cmp285, label %if.then287, label %if.else289

if.then287:                                       ; preds = %if.end281
  %182 = load %struct.sv**, %struct.sv*** %sp, align 8
  %incdec.ptr288 = getelementptr inbounds %struct.sv*, %struct.sv** %182, i32 1
  store %struct.sv** %incdec.ptr288, %struct.sv*** %sp, align 8
  store %struct.sv* @PL_sv_undef, %struct.sv** %incdec.ptr288, align 8
  br label %if.end295

if.else289:                                       ; preds = %if.end281
  %183 = load i32, i32* %gimme, align 4
  %and290 = and i32 %183, 3
  %cmp291 = icmp eq i32 %and290, 3
  %184 = zext i1 %cmp291 to i64
  %cond293 = select i1 %cmp291, %struct.sv* @PL_sv_yes, %struct.sv* @PL_sv_no
  %185 = load %struct.sv**, %struct.sv*** %sp, align 8
  %incdec.ptr294 = getelementptr inbounds %struct.sv*, %struct.sv** %185, i32 1
  store %struct.sv** %incdec.ptr294, %struct.sv*** %sp, align 8
  store %struct.sv* %cond293, %struct.sv** %incdec.ptr294, align 8
  br label %if.end295

if.end295:                                        ; preds = %if.else289, %if.then287
  %186 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u296 = getelementptr inbounds %struct.context, %struct.context* %186, i32 0, i32 0
  %cx_subst297 = bitcast %union.anon.16* %cx_u296 to %struct.subst*
  %sbu_type298 = getelementptr inbounds %struct.subst, %struct.subst* %cx_subst297, i32 0, i32 0
  %187 = load i8, i8* %sbu_type298, align 8
  %conv299 = zext i8 %187 to i32
  %and300 = and i32 %conv299, 15
  %cmp301 = icmp eq i32 %and300, 10
  br i1 %cmp301, label %if.then303, label %if.else352

if.then303:                                       ; preds = %if.end295
  %188 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u304 = getelementptr inbounds %struct.context, %struct.context* %188, i32 0, i32 0
  %cx_blk305 = bitcast %union.anon.16* %cx_u304 to %struct.block*
  %blku_u16 = getelementptr inbounds %struct.block, %struct.block* %cx_blk305, i32 0, i32 2
  %189 = load i16, i16* %blku_u16, align 2
  %conv306 = zext i16 %189 to i32
  %shr = ashr i32 %conv306, 7
  %cmp307 = icmp eq i32 %shr, 342
  br i1 %cmp307, label %if.then309, label %if.else331

if.then309:                                       ; preds = %if.then303
  %190 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u310 = getelementptr inbounds %struct.context, %struct.context* %190, i32 0, i32 0
  %cx_blk311 = bitcast %union.anon.16* %cx_u310 to %struct.block*
  %blk_u312 = getelementptr inbounds %struct.block, %struct.block* %cx_blk311, i32 0, i32 8
  %blku_eval = bitcast %union.anon.20* %blk_u312 to %struct.block_eval*
  %cur_text313 = getelementptr inbounds %struct.block_eval, %struct.block_eval* %blku_eval, i32 0, i32 3
  %191 = load %struct.sv*, %struct.sv** %cur_text313, align 8
  store %struct.sv* %191, %struct.sv** %cur_text, align 8
  %192 = load %struct.sv*, %struct.sv** %cur_text, align 8
  %sv_any314 = getelementptr inbounds %struct.sv, %struct.sv* %192, i32 0, i32 0
  %193 = load i8*, i8** %sv_any314, align 8
  %194 = bitcast i8* %193 to %struct.xpv*
  %xpv_cur = getelementptr inbounds %struct.xpv, %struct.xpv* %194, i32 0, i32 2
  %195 = load i64, i64* %xpv_cur, align 8
  %cmp315 = icmp uge i64 %195, 2
  br i1 %cmp315, label %if.then317, label %if.else325

if.then317:                                       ; preds = %if.then309
  %196 = load %struct.sv*, %struct.sv** %cur_text, align 8
  %sv_u318 = getelementptr inbounds %struct.sv, %struct.sv* %196, i32 0, i32 3
  %svu_pv = bitcast %union.anon* %sv_u318 to i8**
  %197 = load i8*, i8** %svu_pv, align 8
  %198 = load %struct.sv*, %struct.sv** %cur_text, align 8
  %sv_any319 = getelementptr inbounds %struct.sv, %struct.sv* %198, i32 0, i32 0
  %199 = load i8*, i8** %sv_any319, align 8
  %200 = bitcast i8* %199 to %struct.xpv*
  %xpv_cur320 = getelementptr inbounds %struct.xpv, %struct.xpv* %200, i32 0, i32 2
  %201 = load i64, i64* %xpv_cur320, align 8
  %sub = sub i64 %201, 2
  %202 = load %struct.sv*, %struct.sv** %cur_text, align 8
  %sv_flags321 = getelementptr inbounds %struct.sv, %struct.sv* %202, i32 0, i32 2
  %203 = load i32, i32* %sv_flags321, align 4
  %and322 = and i32 %203, 536870912
  %or = or i32 %and322, 524288
  %call323 = call %struct.sv* @Perl_newSVpvn_flags(i8* %197, i64 %sub, i32 %or)
  %204 = load %struct.sv**, %struct.sv*** %sp, align 8
  %incdec.ptr324 = getelementptr inbounds %struct.sv*, %struct.sv** %204, i32 1
  store %struct.sv** %incdec.ptr324, %struct.sv*** %sp, align 8
  store %struct.sv* %call323, %struct.sv** %incdec.ptr324, align 8
  br label %if.end329

if.else325:                                       ; preds = %if.then309
  %205 = load %struct.sv*, %struct.sv** %cur_text, align 8
  %call326 = call %struct.sv* @Perl_newSVsv(%struct.sv* %205)
  %call327 = call %struct.sv* @Perl_sv_2mortal(%struct.sv* %call326)
  %206 = load %struct.sv**, %struct.sv*** %sp, align 8
  %incdec.ptr328 = getelementptr inbounds %struct.sv*, %struct.sv** %206, i32 1
  store %struct.sv** %incdec.ptr328, %struct.sv*** %sp, align 8
  store %struct.sv* %call327, %struct.sv** %incdec.ptr328, align 8
  br label %if.end329

if.end329:                                        ; preds = %if.else325, %if.then317
  %207 = load %struct.sv**, %struct.sv*** %sp, align 8
  %incdec.ptr330 = getelementptr inbounds %struct.sv*, %struct.sv** %207, i32 1
  store %struct.sv** %incdec.ptr330, %struct.sv*** %sp, align 8
  store %struct.sv* @PL_sv_no, %struct.sv** %incdec.ptr330, align 8
  br label %if.end351

if.else331:                                       ; preds = %if.then303
  %208 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u332 = getelementptr inbounds %struct.context, %struct.context* %208, i32 0, i32 0
  %cx_blk333 = bitcast %union.anon.16* %cx_u332 to %struct.block*
  %blk_u334 = getelementptr inbounds %struct.block, %struct.block* %cx_blk333, i32 0, i32 8
  %blku_eval335 = bitcast %union.anon.20* %blk_u334 to %struct.block_eval*
  %old_namesv = getelementptr inbounds %struct.block_eval, %struct.block_eval* %blku_eval335, i32 0, i32 1
  %209 = load %struct.sv*, %struct.sv** %old_namesv, align 8
  %tobool336 = icmp ne %struct.sv* %209, null
  br i1 %tobool336, label %if.then337, label %if.else347

if.then337:                                       ; preds = %if.else331
  %210 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u338 = getelementptr inbounds %struct.context, %struct.context* %210, i32 0, i32 0
  %cx_blk339 = bitcast %union.anon.16* %cx_u338 to %struct.block*
  %blk_u340 = getelementptr inbounds %struct.block, %struct.block* %cx_blk339, i32 0, i32 8
  %blku_eval341 = bitcast %union.anon.20* %blk_u340 to %struct.block_eval*
  %old_namesv342 = getelementptr inbounds %struct.block_eval, %struct.block_eval* %blku_eval341, i32 0, i32 1
  %211 = load %struct.sv*, %struct.sv** %old_namesv342, align 8
  %call343 = call %struct.sv* @Perl_newSVsv(%struct.sv* %211)
  %call344 = call %struct.sv* @Perl_sv_2mortal(%struct.sv* %call343)
  %212 = load %struct.sv**, %struct.sv*** %sp, align 8
  %incdec.ptr345 = getelementptr inbounds %struct.sv*, %struct.sv** %212, i32 1
  store %struct.sv** %incdec.ptr345, %struct.sv*** %sp, align 8
  store %struct.sv* %call344, %struct.sv** %incdec.ptr345, align 8
  %213 = load %struct.sv**, %struct.sv*** %sp, align 8
  %incdec.ptr346 = getelementptr inbounds %struct.sv*, %struct.sv** %213, i32 1
  store %struct.sv** %incdec.ptr346, %struct.sv*** %sp, align 8
  store %struct.sv* @PL_sv_yes, %struct.sv** %incdec.ptr346, align 8
  br label %if.end350

if.else347:                                       ; preds = %if.else331
  %214 = load %struct.sv**, %struct.sv*** %sp, align 8
  %incdec.ptr348 = getelementptr inbounds %struct.sv*, %struct.sv** %214, i32 1
  store %struct.sv** %incdec.ptr348, %struct.sv*** %sp, align 8
  store %struct.sv* @PL_sv_undef, %struct.sv** %incdec.ptr348, align 8
  %215 = load %struct.sv**, %struct.sv*** %sp, align 8
  %incdec.ptr349 = getelementptr inbounds %struct.sv*, %struct.sv** %215, i32 1
  store %struct.sv** %incdec.ptr349, %struct.sv*** %sp, align 8
  store %struct.sv* @PL_sv_undef, %struct.sv** %incdec.ptr349, align 8
  br label %if.end350

if.end350:                                        ; preds = %if.else347, %if.then337
  br label %if.end351

if.end351:                                        ; preds = %if.end350, %if.end329
  br label %if.end355

if.else352:                                       ; preds = %if.end295
  %216 = load %struct.sv**, %struct.sv*** %sp, align 8
  %incdec.ptr353 = getelementptr inbounds %struct.sv*, %struct.sv** %216, i32 1
  store %struct.sv** %incdec.ptr353, %struct.sv*** %sp, align 8
  store %struct.sv* @PL_sv_undef, %struct.sv** %incdec.ptr353, align 8
  %217 = load %struct.sv**, %struct.sv*** %sp, align 8
  %incdec.ptr354 = getelementptr inbounds %struct.sv*, %struct.sv** %217, i32 1
  store %struct.sv** %incdec.ptr354, %struct.sv*** %sp, align 8
  store %struct.sv* @PL_sv_undef, %struct.sv** %incdec.ptr354, align 8
  br label %if.end355

if.end355:                                        ; preds = %if.else352, %if.end351
  %218 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u356 = getelementptr inbounds %struct.context, %struct.context* %218, i32 0, i32 0
  %cx_subst357 = bitcast %union.anon.16* %cx_u356 to %struct.subst*
  %sbu_type358 = getelementptr inbounds %struct.subst, %struct.subst* %cx_subst357, i32 0, i32 0
  %219 = load i8, i8* %sbu_type358, align 8
  %conv359 = zext i8 %219 to i32
  %and360 = and i32 %conv359, 15
  %cmp361 = icmp eq i32 %and360, 8
  br i1 %cmp361, label %land.lhs.true363, label %if.end409

land.lhs.true363:                                 ; preds = %if.end355
  %220 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u364 = getelementptr inbounds %struct.context, %struct.context* %220, i32 0, i32 0
  %cx_subst365 = bitcast %union.anon.16* %cx_u364 to %struct.subst*
  %sbu_type366 = getelementptr inbounds %struct.subst, %struct.subst* %cx_subst365, i32 0, i32 0
  %221 = load i8, i8* %sbu_type366, align 8
  %conv367 = zext i8 %221 to i32
  %and368 = and i32 %conv367, 32
  %cmp369 = icmp eq i32 %and368, 32
  br i1 %cmp369, label %land.lhs.true371, label %if.end409

land.lhs.true371:                                 ; preds = %land.lhs.true363
  %222 = load %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_stash372 = getelementptr inbounds %struct.cop, %struct.cop* %222, i32 0, i32 8
  %223 = load %struct.hv*, %struct.hv** %cop_stash372, align 8
  %224 = load %struct.hv*, %struct.hv** @PL_debstash, align 8
  %cmp373 = icmp eq %struct.hv* %223, %224
  br i1 %cmp373, label %if.then375, label %if.end409

if.then375:                                       ; preds = %land.lhs.true371
  %225 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u376 = getelementptr inbounds %struct.context, %struct.context* %225, i32 0, i32 0
  %cx_blk377 = bitcast %union.anon.16* %cx_u376 to %struct.block*
  %blk_u378 = getelementptr inbounds %struct.block, %struct.block* %cx_blk377, i32 0, i32 8
  %blku_sub379 = bitcast %union.anon.20* %blk_u378 to %struct.block_sub*
  %argarray = getelementptr inbounds %struct.block_sub, %struct.block_sub* %blku_sub379, i32 0, i32 3
  %226 = load %struct.av*, %struct.av** %argarray, align 8
  store %struct.av* %226, %struct.av** %ary, align 8
  %227 = load %struct.av*, %struct.av** %ary, align 8
  %sv_u380 = getelementptr inbounds %struct.av, %struct.av* %227, i32 0, i32 3
  %svu_array = bitcast %union.anon.0* %sv_u380 to %struct.sv***
  %228 = load %struct.sv**, %struct.sv*** %svu_array, align 8
  %229 = load %struct.av*, %struct.av** %ary, align 8
  %sv_any381 = getelementptr inbounds %struct.av, %struct.av* %229, i32 0, i32 0
  %230 = load %struct.xpvav*, %struct.xpvav** %sv_any381, align 8
  %xav_alloc = getelementptr inbounds %struct.xpvav, %struct.xpvav* %230, i32 0, i32 4
  %231 = load %struct.sv**, %struct.sv*** %xav_alloc, align 8
  %sub.ptr.lhs.cast382 = ptrtoint %struct.sv** %228 to i64
  %sub.ptr.rhs.cast383 = ptrtoint %struct.sv** %231 to i64
  %sub.ptr.sub384 = sub i64 %sub.ptr.lhs.cast382, %sub.ptr.rhs.cast383
  %sub.ptr.div385 = sdiv exact i64 %sub.ptr.sub384, 8
  store i64 %sub.ptr.div385, i64* %off, align 8
  call void @Perl_init_dbargs()
  %232 = load %struct.av*, %struct.av** @PL_dbargs, align 8
  %sv_any386 = getelementptr inbounds %struct.av, %struct.av* %232, i32 0, i32 0
  %233 = load %struct.xpvav*, %struct.xpvav** %sv_any386, align 8
  %xav_max = getelementptr inbounds %struct.xpvav, %struct.xpvav* %233, i32 0, i32 3
  %234 = load i64, i64* %xav_max, align 8
  %235 = load %struct.av*, %struct.av** %ary, align 8
  %sv_any387 = getelementptr inbounds %struct.av, %struct.av* %235, i32 0, i32 0
  %236 = load %struct.xpvav*, %struct.xpvav** %sv_any387, align 8
  %xav_fill = getelementptr inbounds %struct.xpvav, %struct.xpvav* %236, i32 0, i32 2
  %237 = load i64, i64* %xav_fill, align 8
  %238 = load i64, i64* %off, align 8
  %add388 = add nsw i64 %237, %238
  %cmp389 = icmp slt i64 %234, %add388
  br i1 %cmp389, label %if.then391, label %if.end395

if.then391:                                       ; preds = %if.then375
  %239 = load %struct.av*, %struct.av** @PL_dbargs, align 8
  %240 = load %struct.av*, %struct.av** %ary, align 8
  %sv_any392 = getelementptr inbounds %struct.av, %struct.av* %240, i32 0, i32 0
  %241 = load %struct.xpvav*, %struct.xpvav** %sv_any392, align 8
  %xav_fill393 = getelementptr inbounds %struct.xpvav, %struct.xpvav* %241, i32 0, i32 2
  %242 = load i64, i64* %xav_fill393, align 8
  %243 = load i64, i64* %off, align 8
  %add394 = add nsw i64 %242, %243
  call void @Perl_av_extend(%struct.av* %239, i64 %add394)
  br label %if.end395

if.end395:                                        ; preds = %if.then391, %if.then375
  %244 = load %struct.av*, %struct.av** @PL_dbargs, align 8
  %sv_u396 = getelementptr inbounds %struct.av, %struct.av* %244, i32 0, i32 3
  %svu_array397 = bitcast %union.anon.0* %sv_u396 to %struct.sv***
  %245 = load %struct.sv**, %struct.sv*** %svu_array397, align 8
  %246 = bitcast %struct.sv** %245 to i8*
  %247 = load %struct.av*, %struct.av** %ary, align 8
  %sv_any398 = getelementptr inbounds %struct.av, %struct.av* %247, i32 0, i32 0
  %248 = load %struct.xpvav*, %struct.xpvav** %sv_any398, align 8
  %xav_alloc399 = getelementptr inbounds %struct.xpvav, %struct.xpvav* %248, i32 0, i32 4
  %249 = load %struct.sv**, %struct.sv*** %xav_alloc399, align 8
  %250 = bitcast %struct.sv** %249 to i8*
  %251 = load %struct.av*, %struct.av** %ary, align 8
  %sv_any400 = getelementptr inbounds %struct.av, %struct.av* %251, i32 0, i32 0
  %252 = load %struct.xpvav*, %struct.xpvav** %sv_any400, align 8
  %xav_fill401 = getelementptr inbounds %struct.xpvav, %struct.xpvav* %252, i32 0, i32 2
  %253 = load i64, i64* %xav_fill401, align 8
  %add402 = add nsw i64 %253, 1
  %254 = load i64, i64* %off, align 8
  %add403 = add nsw i64 %add402, %254
  %mul = mul i64 %add403, 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %246, i8* align 1 %250, i64 %mul, i1 false)
  %255 = load %struct.av*, %struct.av** %ary, align 8
  %sv_any404 = getelementptr inbounds %struct.av, %struct.av* %255, i32 0, i32 0
  %256 = load %struct.xpvav*, %struct.xpvav** %sv_any404, align 8
  %xav_fill405 = getelementptr inbounds %struct.xpvav, %struct.xpvav* %256, i32 0, i32 2
  %257 = load i64, i64* %xav_fill405, align 8
  %258 = load i64, i64* %off, align 8
  %add406 = add nsw i64 %257, %258
  %259 = load %struct.av*, %struct.av** @PL_dbargs, align 8
  %sv_any407 = getelementptr inbounds %struct.av, %struct.av* %259, i32 0, i32 0
  %260 = load %struct.xpvav*, %struct.xpvav** %sv_any407, align 8
  %xav_fill408 = getelementptr inbounds %struct.xpvav, %struct.xpvav* %260, i32 0, i32 2
  store i64 %add406, i64* %xav_fill408, align 8
  br label %if.end409

if.end409:                                        ; preds = %if.end395, %land.lhs.true371, %land.lhs.true363, %if.end355
  %call410 = call %struct.sv* @Perl_sv_newmortal()
  %261 = load %struct.sv**, %struct.sv*** %sp, align 8
  %incdec.ptr411 = getelementptr inbounds %struct.sv*, %struct.sv** %261, i32 1
  store %struct.sv** %incdec.ptr411, %struct.sv*** %sp, align 8
  store %struct.sv* %call410, %struct.sv** %incdec.ptr411, align 8
  %262 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u412 = getelementptr inbounds %struct.context, %struct.context* %262, i32 0, i32 0
  %cx_blk413 = bitcast %union.anon.16* %cx_u412 to %struct.block*
  %blku_oldcop414 = getelementptr inbounds %struct.block, %struct.block* %cx_blk413, i32 0, i32 4
  %263 = load %struct.cop*, %struct.cop** %blku_oldcop414, align 8
  %cop_hints = getelementptr inbounds %struct.cop, %struct.cop* %263, i32 0, i32 10
  %264 = load i32, i32* %cop_hints, align 8
  %add415 = add i32 %264, 0
  %conv416 = zext i32 %add415 to i64
  call void @Perl_sv_setiv(%struct.sv* %call410, i64 %conv416)
  %265 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u417 = getelementptr inbounds %struct.context, %struct.context* %265, i32 0, i32 0
  %cx_blk418 = bitcast %union.anon.16* %cx_u417 to %struct.block*
  %blku_oldcop419 = getelementptr inbounds %struct.block, %struct.block* %cx_blk418, i32 0, i32 4
  %266 = load %struct.cop*, %struct.cop** %blku_oldcop419, align 8
  %cop_warnings = getelementptr inbounds %struct.cop, %struct.cop* %266, i32 0, i32 12
  %267 = load i64*, i64** %cop_warnings, align 8
  store i64* %267, i64** %old_warnings, align 8
  %268 = load i64*, i64** %old_warnings, align 8
  %cmp420 = icmp eq i64* %268, getelementptr inbounds (i64, i64* null, i64 2)
  br i1 %cmp420, label %if.then422, label %if.else424

if.then422:                                       ; preds = %if.end409
  %call423 = call %struct.sv* @Perl_newSVpvn(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.21, i64 0, i64 0), i64 17)
  store %struct.sv* %call423, %struct.sv** %mask, align 8
  br label %if.end460

if.else424:                                       ; preds = %if.end409
  %269 = load i64*, i64** %old_warnings, align 8
  %cmp425 = icmp eq i64* %269, null
  br i1 %cmp425, label %land.lhs.true427, label %if.else433

land.lhs.true427:                                 ; preds = %if.else424
  %270 = load i8, i8* @PL_dowarn, align 1
  %conv428 = zext i8 %270 to i32
  %and429 = and i32 %conv428, 1
  %cmp430 = icmp eq i32 %and429, 0
  br i1 %cmp430, label %if.then432, label %if.else433

if.then432:                                       ; preds = %land.lhs.true427
  store %struct.sv* @PL_sv_undef, %struct.sv** %mask, align 8
  br label %if.end459

if.else433:                                       ; preds = %land.lhs.true427, %if.else424
  %271 = load i64*, i64** %old_warnings, align 8
  %cmp434 = icmp eq i64* %271, getelementptr inbounds (i64, i64* null, i64 1)
  br i1 %cmp434, label %if.then443, label %lor.lhs.false436

lor.lhs.false436:                                 ; preds = %if.else433
  %272 = load i64*, i64** %old_warnings, align 8
  %cmp437 = icmp eq i64* %272, null
  br i1 %cmp437, label %land.lhs.true439, label %if.else454

land.lhs.true439:                                 ; preds = %lor.lhs.false436
  %273 = load i8, i8* @PL_dowarn, align 1
  %conv440 = zext i8 %273 to i32
  %and441 = and i32 %conv440, 1
  %tobool442 = icmp ne i32 %and441, 0
  br i1 %tobool442, label %if.then443, label %if.else454

if.then443:                                       ; preds = %land.lhs.true439, %if.else433
  %call444 = call %struct.hv* @Perl_get_hv(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.22, i64 0, i64 0), i32 0)
  store %struct.hv* %call444, %struct.hv** %bits, align 8
  %274 = load %struct.hv*, %struct.hv** %bits, align 8
  %tobool445 = icmp ne %struct.hv* %274, null
  br i1 %tobool445, label %land.lhs.true446, label %if.else451

land.lhs.true446:                                 ; preds = %if.then443
  %275 = load %struct.hv*, %struct.hv** %bits, align 8
  %call447 = call i8* @Perl_hv_common(%struct.hv* %275, %struct.sv* null, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.23, i64 0, i64 0), i64 3, i32 0, i32 32, %struct.sv* null, i32 0)
  %276 = bitcast i8* %call447 to %struct.sv**
  store %struct.sv** %276, %struct.sv*** %bits_all, align 8
  %tobool448 = icmp ne %struct.sv** %276, null
  br i1 %tobool448, label %if.then449, label %if.else451

if.then449:                                       ; preds = %land.lhs.true446
  %277 = load %struct.sv**, %struct.sv*** %bits_all, align 8
  %278 = load %struct.sv*, %struct.sv** %277, align 8
  %call450 = call %struct.sv* @Perl_newSVsv(%struct.sv* %278)
  store %struct.sv* %call450, %struct.sv** %mask, align 8
  br label %if.end453

if.else451:                                       ; preds = %land.lhs.true446, %if.then443
  %call452 = call %struct.sv* @Perl_newSVpvn(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.24, i64 0, i64 0), i64 17)
  store %struct.sv* %call452, %struct.sv** %mask, align 8
  br label %if.end453

if.end453:                                        ; preds = %if.else451, %if.then449
  br label %if.end458

if.else454:                                       ; preds = %land.lhs.true439, %lor.lhs.false436
  %279 = load i64*, i64** %old_warnings, align 8
  %add.ptr455 = getelementptr inbounds i64, i64* %279, i64 1
  %280 = bitcast i64* %add.ptr455 to i8*
  %281 = load i64*, i64** %old_warnings, align 8
  %arrayidx456 = getelementptr inbounds i64, i64* %281, i64 0
  %282 = load i64, i64* %arrayidx456, align 8
  %call457 = call %struct.sv* @Perl_newSVpvn(i8* %280, i64 %282)
  store %struct.sv* %call457, %struct.sv** %mask, align 8
  br label %if.end458

if.end458:                                        ; preds = %if.else454, %if.end453
  br label %if.end459

if.end459:                                        ; preds = %if.end458, %if.then432
  br label %if.end460

if.end460:                                        ; preds = %if.end459, %if.then422
  %283 = load %struct.sv*, %struct.sv** %mask, align 8
  %call461 = call %struct.sv* @Perl_sv_2mortal(%struct.sv* %283)
  %284 = load %struct.sv**, %struct.sv*** %sp, align 8
  %incdec.ptr462 = getelementptr inbounds %struct.sv*, %struct.sv** %284, i32 1
  store %struct.sv** %incdec.ptr462, %struct.sv*** %sp, align 8
  store %struct.sv* %call461, %struct.sv** %incdec.ptr462, align 8
  %285 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u463 = getelementptr inbounds %struct.context, %struct.context* %285, i32 0, i32 0
  %cx_blk464 = bitcast %union.anon.16* %cx_u463 to %struct.block*
  %blku_oldcop465 = getelementptr inbounds %struct.block, %struct.block* %cx_blk464, i32 0, i32 4
  %286 = load %struct.cop*, %struct.cop** %blku_oldcop465, align 8
  %cop_hints_hash = getelementptr inbounds %struct.cop, %struct.cop* %286, i32 0, i32 13
  %287 = load %struct.refcounted_he*, %struct.refcounted_he** %cop_hints_hash, align 8
  %tobool466 = icmp ne %struct.refcounted_he* %287, null
  br i1 %tobool466, label %cond.true467, label %cond.false475

cond.true467:                                     ; preds = %if.end460
  %288 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u468 = getelementptr inbounds %struct.context, %struct.context* %288, i32 0, i32 0
  %cx_blk469 = bitcast %union.anon.16* %cx_u468 to %struct.block*
  %blku_oldcop470 = getelementptr inbounds %struct.block, %struct.block* %cx_blk469, i32 0, i32 4
  %289 = load %struct.cop*, %struct.cop** %blku_oldcop470, align 8
  %cop_hints_hash471 = getelementptr inbounds %struct.cop, %struct.cop* %289, i32 0, i32 13
  %290 = load %struct.refcounted_he*, %struct.refcounted_he** %cop_hints_hash471, align 8
  %call472 = call %struct.hv* @Perl_refcounted_he_chain_2hv(%struct.refcounted_he* %290, i32 0)
  %291 = bitcast %struct.hv* %call472 to i8*
  %292 = bitcast i8* %291 to %struct.sv*
  %call473 = call %struct.sv* @Perl_newRV_noinc(%struct.sv* %292)
  %call474 = call %struct.sv* @Perl_sv_2mortal(%struct.sv* %call473)
  br label %cond.end476

cond.false475:                                    ; preds = %if.end460
  br label %cond.end476

cond.end476:                                      ; preds = %cond.false475, %cond.true467
  %cond477 = phi %struct.sv* [ %call474, %cond.true467 ], [ @PL_sv_undef, %cond.false475 ]
  %293 = load %struct.sv**, %struct.sv*** %sp, align 8
  %incdec.ptr478 = getelementptr inbounds %struct.sv*, %struct.sv** %293, i32 1
  store %struct.sv** %incdec.ptr478, %struct.sv*** %sp, align 8
  store %struct.sv* %cond477, %struct.sv** %incdec.ptr478, align 8
  %294 = load %struct.sv**, %struct.sv*** %sp, align 8
  store %struct.sv** %294, %struct.sv*** @PL_stack_sp, align 8
  %295 = load %struct.op*, %struct.op** @PL_op, align 8
  %op_next479 = getelementptr inbounds %struct.op, %struct.op* %295, i32 0, i32 0
  %296 = load %struct.op*, %struct.op** %op_next479, align 8
  store %struct.op* %296, %struct.op** %retval, align 8
  br label %return

return:                                           ; preds = %cond.end476, %if.then222, %if.end148, %if.end43, %do.end
  %297 = load %struct.op*, %struct.op** %retval, align 8
  ret %struct.op* %297
}

declare dso_local void @Perl_sv_sethek(%struct.sv*, %struct.hek*) #1

declare dso_local %struct.sv* @Perl_newSVpv(i8*, i64) #1

declare dso_local %struct.cop* @Perl_closest_cop(%struct.cop*, %struct.op*, %struct.op*, i1 zeroext) #1

declare dso_local %struct.sv* @Perl_cv_name(%struct.cv*, %struct.sv*, i32) #1

declare dso_local void @Perl_init_dbargs() #1

declare dso_local %struct.sv* @Perl_newSVpvn(i8*, i64) #1

declare dso_local %struct.hv* @Perl_get_hv(i8*, i32) #1

declare dso_local i8* @Perl_hv_common(%struct.hv*, %struct.sv*, i8*, i64, i32, i32, %struct.sv*, i32) #1

declare dso_local %struct.sv* @Perl_newRV_noinc(%struct.sv*) #1

declare dso_local %struct.hv* @Perl_refcounted_he_chain_2hv(%struct.refcounted_he*, i32) #1

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.op* @Perl_pp_reset() #0 {
entry:
  %sp = alloca %struct.sv**, align 8
  %tmps = alloca i8*, align 8
  %len = alloca i64, align 8
  %0 = load %struct.sv**, %struct.sv*** @PL_stack_sp, align 8
  store %struct.sv** %0, %struct.sv*** %sp, align 8
  store i64 0, i64* %len, align 8
  %1 = load %struct.op*, %struct.op** @PL_op, align 8
  %op_private = getelementptr inbounds %struct.op, %struct.op* %1, i32 0, i32 6
  %2 = load i8, i8* %op_private, align 1
  %conv = zext i8 %2 to i32
  %and = and i32 %conv, 15
  %cmp = icmp slt i32 %and, 1
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %3 = load %struct.sv**, %struct.sv*** %sp, align 8
  %4 = load %struct.sv*, %struct.sv** %3, align 8
  %tobool = icmp ne %struct.sv* %4, null
  br i1 %tobool, label %if.else, label %land.lhs.true

land.lhs.true:                                    ; preds = %lor.lhs.false
  %5 = load %struct.sv**, %struct.sv*** %sp, align 8
  %incdec.ptr = getelementptr inbounds %struct.sv*, %struct.sv** %5, i32 -1
  store %struct.sv** %incdec.ptr, %struct.sv*** %sp, align 8
  %6 = load %struct.sv*, %struct.sv** %5, align 8
  %tobool2 = icmp ne %struct.sv* %6, null
  br i1 %tobool2, label %if.else, label %if.then

if.then:                                          ; preds = %land.lhs.true, %entry
  store i8* null, i8** %tmps, align 8
  store i64 0, i64* %len, align 8
  br label %if.end

if.else:                                          ; preds = %land.lhs.true, %lor.lhs.false
  %7 = load %struct.sv**, %struct.sv*** %sp, align 8
  %incdec.ptr3 = getelementptr inbounds %struct.sv*, %struct.sv** %7, i32 -1
  store %struct.sv** %incdec.ptr3, %struct.sv*** %sp, align 8
  %8 = load %struct.sv*, %struct.sv** %7, align 8
  store %struct.sv* %8, %struct.sv** @PL_Sv, align 8
  %9 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %sv_flags = getelementptr inbounds %struct.sv, %struct.sv* %9, i32 0, i32 2
  %10 = load i32, i32* %sv_flags, align 4
  %and4 = and i32 %10, 2098176
  %cmp5 = icmp eq i32 %and4, 1024
  br i1 %cmp5, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.else
  %11 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %sv_any = getelementptr inbounds %struct.sv, %struct.sv* %11, i32 0, i32 0
  %12 = load i8*, i8** %sv_any, align 8
  %13 = bitcast i8* %12 to %struct.xpv*
  %xpv_cur = getelementptr inbounds %struct.xpv, %struct.xpv* %13, i32 0, i32 2
  %14 = load i64, i64* %xpv_cur, align 8
  store i64 %14, i64* %len, align 8
  %15 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %sv_u = getelementptr inbounds %struct.sv, %struct.sv* %15, i32 0, i32 3
  %svu_pv = bitcast %union.anon* %sv_u to i8**
  %16 = load i8*, i8** %svu_pv, align 8
  %add.ptr = getelementptr inbounds i8, i8* %16, i64 0
  br label %cond.end

cond.false:                                       ; preds = %if.else
  %17 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %call = call i8* @Perl_sv_2pv_flags(%struct.sv* %17, i64* %len, i32 34)
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %add.ptr, %cond.true ], [ %call, %cond.false ]
  store i8* %cond, i8** %tmps, align 8
  br label %if.end

if.end:                                           ; preds = %cond.end, %if.then
  %18 = load i8*, i8** %tmps, align 8
  %19 = load i64, i64* %len, align 8
  %20 = load %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_stash = getelementptr inbounds %struct.cop, %struct.cop* %20, i32 0, i32 8
  %21 = load %struct.hv*, %struct.hv** %cop_stash, align 8
  call void @Perl_sv_resetpvn(i8* %18, i64 %19, %struct.hv* %21)
  %22 = load %struct.sv**, %struct.sv*** %sp, align 8
  %incdec.ptr7 = getelementptr inbounds %struct.sv*, %struct.sv** %22, i32 1
  store %struct.sv** %incdec.ptr7, %struct.sv*** %sp, align 8
  store %struct.sv* @PL_sv_yes, %struct.sv** %incdec.ptr7, align 8
  %23 = load %struct.sv**, %struct.sv*** %sp, align 8
  store %struct.sv** %23, %struct.sv*** @PL_stack_sp, align 8
  %24 = load %struct.op*, %struct.op** @PL_op, align 8
  %op_next = getelementptr inbounds %struct.op, %struct.op* %24, i32 0, i32 0
  %25 = load %struct.op*, %struct.op** %op_next, align 8
  ret %struct.op* %25
}

declare dso_local void @Perl_sv_resetpvn(i8*, i64, %struct.hv*) #1

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.op* @Perl_pp_dbstate() #0 {
entry:
  %retval = alloca %struct.op*, align 8
  %sp = alloca %struct.sv**, align 8
  %cx = alloca %struct.context*, align 8
  %gimme = alloca i32, align 4
  %hasargs = alloca i8, align 1
  %gv = alloca %struct.gv*, align 8
  %cv = alloca %struct.cv*, align 8
  %ix = alloca i32, align 4
  %ssp = alloca %union.any*, align 8
  %mark_stack_entry = alloca i32*, align 8
  %0 = load %struct.op*, %struct.op** @PL_op, align 8
  %1 = bitcast %struct.op* %0 to %struct.cop*
  store %struct.cop* %1, %struct.cop** @PL_curcop, align 8
  store i8 0, i8* @PL_tainted, align 1
  %2 = load %struct.sv**, %struct.sv*** @PL_stack_base, align 8
  %3 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %si_cxstack = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %3, i32 0, i32 1
  %4 = load %struct.context*, %struct.context** %si_cxstack, align 8
  %5 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %si_cxix = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %5, i32 0, i32 4
  %6 = load i32, i32* %si_cxix, align 8
  %idxprom = sext i32 %6 to i64
  %arrayidx = getelementptr inbounds %struct.context, %struct.context* %4, i64 %idxprom
  %cx_u = getelementptr inbounds %struct.context, %struct.context* %arrayidx, i32 0, i32 0
  %cx_blk = bitcast %union.anon.16* %cx_u to %struct.block*
  %blku_oldsp = getelementptr inbounds %struct.block, %struct.block* %cx_blk, i32 0, i32 3
  %7 = load i32, i32* %blku_oldsp, align 4
  %idx.ext = sext i32 %7 to i64
  %add.ptr = getelementptr inbounds %struct.sv*, %struct.sv** %2, i64 %idx.ext
  store %struct.sv** %add.ptr, %struct.sv*** @PL_stack_sp, align 8
  %8 = load i64, i64* @PL_tmps_ix, align 8
  %9 = load i64, i64* @PL_tmps_floor, align 8
  %cmp = icmp sgt i64 %8, %9
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void @Perl_free_tmps()
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %10 = load i32, i32* @PL_sig_pending, align 4
  %tobool = icmp ne i32 %10, 0
  br i1 %tobool, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end
  br i1 true, label %if.then1, label %if.end2

cond.false:                                       ; preds = %if.end
  br i1 false, label %if.then1, label %if.end2

if.then1:                                         ; preds = %cond.false, %cond.true
  %11 = load void ()*, void ()** @PL_signalhook, align 8
  call void %11()
  br label %if.end2

if.end2:                                          ; preds = %if.then1, %cond.false, %cond.true
  %12 = load %struct.op*, %struct.op** @PL_op, align 8
  %op_flags = getelementptr inbounds %struct.op, %struct.op* %12, i32 0, i32 5
  %13 = load i8, i8* %op_flags, align 2
  %conv = zext i8 %13 to i32
  %and = and i32 %conv, 128
  %tobool3 = icmp ne i32 %and, 0
  br i1 %tobool3, label %if.then9, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end2
  %14 = load i64, i64* getelementptr inbounds ([3 x i64], [3 x i64]* @PL_DBcontrol, i64 0, i64 0), align 16
  %tobool4 = icmp ne i64 %14, 0
  br i1 %tobool4, label %if.then9, label %lor.lhs.false5

lor.lhs.false5:                                   ; preds = %lor.lhs.false
  %15 = load i64, i64* getelementptr inbounds ([3 x i64], [3 x i64]* @PL_DBcontrol, i64 0, i64 2), align 16
  %tobool6 = icmp ne i64 %15, 0
  br i1 %tobool6, label %if.then9, label %lor.lhs.false7

lor.lhs.false7:                                   ; preds = %lor.lhs.false5
  %16 = load i64, i64* getelementptr inbounds ([3 x i64], [3 x i64]* @PL_DBcontrol, i64 0, i64 1), align 8
  %tobool8 = icmp ne i64 %16, 0
  br i1 %tobool8, label %if.then9, label %if.else171

if.then9:                                         ; preds = %lor.lhs.false7, %lor.lhs.false5, %lor.lhs.false, %if.end2
  %17 = load %struct.sv**, %struct.sv*** @PL_stack_sp, align 8
  store %struct.sv** %17, %struct.sv*** %sp, align 8
  store i32 3, i32* %gimme, align 4
  %18 = load %struct.gv*, %struct.gv** @PL_DBgv, align 8
  store %struct.gv* %18, %struct.gv** %gv, align 8
  store %struct.cv* null, %struct.cv** %cv, align 8
  %19 = load %struct.gv*, %struct.gv** %gv, align 8
  %tobool10 = icmp ne %struct.gv* %19, null
  br i1 %tobool10, label %land.lhs.true, label %if.end27

land.lhs.true:                                    ; preds = %if.then9
  %20 = load %struct.gv*, %struct.gv** %gv, align 8
  %sv_flags = getelementptr inbounds %struct.gv, %struct.gv* %20, i32 0, i32 2
  %21 = load i32, i32* %sv_flags, align 4
  %and11 = and i32 %21, 49152
  %cmp12 = icmp eq i32 %and11, 32768
  br i1 %cmp12, label %land.lhs.true14, label %if.end27

land.lhs.true14:                                  ; preds = %land.lhs.true
  %22 = load %struct.gv*, %struct.gv** %gv, align 8
  %sv_flags15 = getelementptr inbounds %struct.gv, %struct.gv* %22, i32 0, i32 2
  %23 = load i32, i32* %sv_flags15, align 4
  %and16 = and i32 %23, 255
  %cmp17 = icmp eq i32 %and16, 9
  br i1 %cmp17, label %if.then24, label %lor.lhs.false19

lor.lhs.false19:                                  ; preds = %land.lhs.true14
  %24 = load %struct.gv*, %struct.gv** %gv, align 8
  %sv_flags20 = getelementptr inbounds %struct.gv, %struct.gv* %24, i32 0, i32 2
  %25 = load i32, i32* %sv_flags20, align 4
  %and21 = and i32 %25, 255
  %cmp22 = icmp eq i32 %and21, 10
  br i1 %cmp22, label %if.then24, label %if.end27

if.then24:                                        ; preds = %lor.lhs.false19, %land.lhs.true14
  %26 = load %struct.gv*, %struct.gv** %gv, align 8
  %sv_u = getelementptr inbounds %struct.gv, %struct.gv* %26, i32 0, i32 3
  %svu_gp = bitcast %union.anon.4* %sv_u to %struct.gp**
  %27 = load %struct.gp*, %struct.gp** %svu_gp, align 8
  %add.ptr25 = getelementptr inbounds %struct.gp, %struct.gp* %27, i64 0
  %gp_cv = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr25, i32 0, i32 2
  %28 = load %struct.cv*, %struct.cv** %gp_cv, align 8
  %add.ptr26 = getelementptr inbounds %struct.cv, %struct.cv* %28, i64 0
  store %struct.cv* %add.ptr26, %struct.cv** %cv, align 8
  br label %if.end27

if.end27:                                         ; preds = %if.then24, %lor.lhs.false19, %land.lhs.true, %if.then9
  %29 = load %struct.cv*, %struct.cv** %cv, align 8
  %tobool28 = icmp ne %struct.cv* %29, null
  br i1 %tobool28, label %lor.lhs.false29, label %if.then35

lor.lhs.false29:                                  ; preds = %if.end27
  %30 = load %struct.cv*, %struct.cv** %cv, align 8
  %sv_any = getelementptr inbounds %struct.cv, %struct.cv* %30, i32 0, i32 0
  %31 = load %struct.xpvcv*, %struct.xpvcv** %sv_any, align 8
  %32 = bitcast %struct.xpvcv* %31 to i8*
  %33 = bitcast i8* %32 to %struct.xpvcv*
  %xcv_root_u = getelementptr inbounds %struct.xpvcv, %struct.xpvcv* %33, i32 0, i32 6
  %xcv_root = bitcast %union.anon.11* %xcv_root_u to %struct.op**
  %34 = load %struct.op*, %struct.op** %xcv_root, align 8
  %tobool30 = icmp ne %struct.op* %34, null
  br i1 %tobool30, label %if.end36, label %land.lhs.true31

land.lhs.true31:                                  ; preds = %lor.lhs.false29
  %35 = load %struct.cv*, %struct.cv** %cv, align 8
  %sv_any32 = getelementptr inbounds %struct.cv, %struct.cv* %35, i32 0, i32 0
  %36 = load %struct.xpvcv*, %struct.xpvcv** %sv_any32, align 8
  %37 = bitcast %struct.xpvcv* %36 to i8*
  %38 = bitcast i8* %37 to %struct.xpvcv*
  %xcv_root_u33 = getelementptr inbounds %struct.xpvcv, %struct.xpvcv* %38, i32 0, i32 6
  %xcv_xsub = bitcast %union.anon.11* %xcv_root_u33 to void (%struct.cv*)**
  %39 = load void (%struct.cv*)*, void (%struct.cv*)** %xcv_xsub, align 8
  %tobool34 = icmp ne void (%struct.cv*)* %39, null
  br i1 %tobool34, label %if.end36, label %if.then35

if.then35:                                        ; preds = %land.lhs.true31, %if.end27
  %call = call %struct.op* (i8*, ...) @Perl_die(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.25, i64 0, i64 0))
  store %struct.op* %call, %struct.op** %retval, align 8
  br label %return

if.end36:                                         ; preds = %land.lhs.true31, %lor.lhs.false29
  %40 = load %struct.cv*, %struct.cv** %cv, align 8
  %call37 = call i32* @S_CvDEPTHp(%struct.cv* %40)
  %41 = load i32, i32* %call37, align 4
  %cmp38 = icmp sge i32 %41, 1
  br i1 %cmp38, label %land.lhs.true40, label %if.end44

land.lhs.true40:                                  ; preds = %if.end36
  %42 = load volatile i32, i32* @PL_debug, align 4
  %and41 = and i32 %42, 1073741824
  %tobool42 = icmp ne i32 %and41, 0
  br i1 %tobool42, label %if.end44, label %if.then43

if.then43:                                        ; preds = %land.lhs.true40
  %43 = load %struct.op*, %struct.op** @PL_op, align 8
  %op_next = getelementptr inbounds %struct.op, %struct.op* %43, i32 0, i32 0
  %44 = load %struct.op*, %struct.op** %op_next, align 8
  store %struct.op* %44, %struct.op** %retval, align 8
  br label %return

if.end44:                                         ; preds = %land.lhs.true40, %if.end36
  call void @Perl_push_scope()
  call void @Perl_save_strlen(i64* @PL_tmps_floor)
  %45 = load i64, i64* @PL_tmps_ix, align 8
  store i64 %45, i64* @PL_tmps_floor, align 8
  call void @Perl_save_I32(i32* @PL_debug)
  br label %do.body

do.body:                                          ; preds = %if.end44
  %46 = load i32, i32* @PL_savestack_ix, align 4
  store i32 %46, i32* %ix, align 4
  %47 = load %union.any*, %union.any** @PL_savestack, align 8
  %48 = load i32, i32* %ix, align 4
  %idxprom45 = sext i32 %48 to i64
  %arrayidx46 = getelementptr inbounds %union.any, %union.any* %47, i64 %idxprom45
  store %union.any* %arrayidx46, %union.any** %ssp, align 8
  %49 = load %struct.sv**, %struct.sv*** @PL_stack_sp, align 8
  %50 = load %struct.sv**, %struct.sv*** @PL_stack_base, align 8
  %sub.ptr.lhs.cast = ptrtoint %struct.sv** %49 to i64
  %sub.ptr.rhs.cast = ptrtoint %struct.sv** %50 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 8
  %conv47 = trunc i64 %sub.ptr.div to i32
  %51 = load %union.any*, %union.any** %ssp, align 8
  %incdec.ptr = getelementptr inbounds %union.any, %union.any* %51, i32 1
  store %union.any* %incdec.ptr, %union.any** %ssp, align 8
  %any_i32 = bitcast %union.any* %51 to i32*
  store i32 %conv47, i32* %any_i32, align 8
  %52 = load %union.any*, %union.any** %ssp, align 8
  %incdec.ptr48 = getelementptr inbounds %union.any, %union.any* %52, i32 1
  store %union.any* %incdec.ptr48, %union.any** %ssp, align 8
  %any_uv = bitcast %union.any* %52 to i64*
  store i64 20, i64* %any_uv, align 8
  %53 = load i32, i32* %ix, align 4
  %add = add nsw i32 %53, 2
  store i32 %add, i32* %ix, align 4
  %54 = load i32, i32* %ix, align 4
  store i32 %54, i32* @PL_savestack_ix, align 4
  %55 = load i32, i32* %ix, align 4
  %add49 = add nsw i32 %55, 4
  %56 = load i32, i32* @PL_savestack_max, align 4
  %cmp50 = icmp sgt i32 %add49, %56
  br i1 %cmp50, label %cond.true52, label %cond.false53

cond.true52:                                      ; preds = %do.body
  br i1 true, label %if.then54, label %if.end55

cond.false53:                                     ; preds = %do.body
  br i1 false, label %if.then54, label %if.end55

if.then54:                                        ; preds = %cond.false53, %cond.true52
  call void @Perl_savestack_grow()
  br label %if.end55

if.end55:                                         ; preds = %if.then54, %cond.false53, %cond.true52
  br label %do.end

do.end:                                           ; preds = %if.end55
  store volatile i32 0, i32* @PL_debug, align 4
  store i8 0, i8* %hasargs, align 1
  %57 = load %struct.sv**, %struct.sv*** @PL_stack_sp, align 8
  store %struct.sv** %57, %struct.sv*** %sp, align 8
  %58 = load %struct.cv*, %struct.cv** %cv, align 8
  %sv_any56 = getelementptr inbounds %struct.cv, %struct.cv* %58, i32 0, i32 0
  %59 = load %struct.xpvcv*, %struct.xpvcv** %sv_any56, align 8
  %60 = bitcast %struct.xpvcv* %59 to i8*
  %61 = bitcast i8* %60 to %struct.xpvcv*
  %xcv_flags = getelementptr inbounds %struct.xpvcv, %struct.xpvcv* %61, i32 0, i32 12
  %62 = load i32, i32* %xcv_flags, align 4
  %and57 = and i32 %62, 8
  %tobool58 = icmp ne i32 %and57, 0
  br i1 %tobool58, label %if.then59, label %if.else

if.then59:                                        ; preds = %do.end
  br label %do.body60

do.body60:                                        ; preds = %if.then59
  %63 = load i32*, i32** @PL_markstack_ptr, align 8
  %incdec.ptr61 = getelementptr inbounds i32, i32* %63, i32 1
  store i32* %incdec.ptr61, i32** @PL_markstack_ptr, align 8
  store i32* %incdec.ptr61, i32** %mark_stack_entry, align 8
  %64 = load i32*, i32** @PL_markstack_max, align 8
  %cmp62 = icmp eq i32* %incdec.ptr61, %64
  br i1 %cmp62, label %cond.true64, label %cond.false65

cond.true64:                                      ; preds = %do.body60
  br i1 true, label %if.then66, label %if.end68

cond.false65:                                     ; preds = %do.body60
  br i1 false, label %if.then66, label %if.end68

if.then66:                                        ; preds = %cond.false65, %cond.true64
  %call67 = call i32* @Perl_markstack_grow()
  store i32* %call67, i32** %mark_stack_entry, align 8
  br label %if.end68

if.end68:                                         ; preds = %if.then66, %cond.false65, %cond.true64
  %65 = load %struct.sv**, %struct.sv*** %sp, align 8
  %66 = load %struct.sv**, %struct.sv*** @PL_stack_base, align 8
  %sub.ptr.lhs.cast69 = ptrtoint %struct.sv** %65 to i64
  %sub.ptr.rhs.cast70 = ptrtoint %struct.sv** %66 to i64
  %sub.ptr.sub71 = sub i64 %sub.ptr.lhs.cast69, %sub.ptr.rhs.cast70
  %sub.ptr.div72 = sdiv exact i64 %sub.ptr.sub71, 8
  %conv73 = trunc i64 %sub.ptr.div72 to i32
  %67 = load i32*, i32** %mark_stack_entry, align 8
  store i32 %conv73, i32* %67, align 4
  br label %do.end74

do.end74:                                         ; preds = %if.end68
  %68 = load %struct.cv*, %struct.cv** %cv, align 8
  %sv_any75 = getelementptr inbounds %struct.cv, %struct.cv* %68, i32 0, i32 0
  %69 = load %struct.xpvcv*, %struct.xpvcv** %sv_any75, align 8
  %70 = bitcast %struct.xpvcv* %69 to i8*
  %71 = bitcast i8* %70 to %struct.xpvcv*
  %xcv_root_u76 = getelementptr inbounds %struct.xpvcv, %struct.xpvcv* %71, i32 0, i32 6
  %xcv_xsub77 = bitcast %union.anon.11* %xcv_root_u76 to void (%struct.cv*)**
  %72 = load void (%struct.cv*)*, void (%struct.cv*)** %xcv_xsub77, align 8
  %73 = load %struct.cv*, %struct.cv** %cv, align 8
  call void %72(%struct.cv* %73)
  %74 = load i64, i64* @PL_tmps_ix, align 8
  %75 = load i64, i64* @PL_tmps_floor, align 8
  %cmp78 = icmp sgt i64 %74, %75
  br i1 %cmp78, label %if.then80, label %if.end81

if.then80:                                        ; preds = %do.end74
  call void @Perl_free_tmps()
  br label %if.end81

if.end81:                                         ; preds = %if.then80, %do.end74
  call void @Perl_pop_scope()
  %76 = load %struct.op*, %struct.op** @PL_op, align 8
  %op_next82 = getelementptr inbounds %struct.op, %struct.op* %76, i32 0, i32 0
  %77 = load %struct.op*, %struct.op** %op_next82, align 8
  store %struct.op* %77, %struct.op** %retval, align 8
  br label %return

if.else:                                          ; preds = %do.end
  %78 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %si_cxix83 = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %78, i32 0, i32 4
  %79 = load i32, i32* %si_cxix83, align 8
  %80 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %si_cxmax = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %80, i32 0, i32 5
  %81 = load i32, i32* %si_cxmax, align 4
  %cmp84 = icmp slt i32 %79, %81
  br i1 %cmp84, label %cond.true86, label %cond.false88

cond.true86:                                      ; preds = %if.else
  %82 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %si_cxix87 = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %82, i32 0, i32 4
  %83 = load i32, i32* %si_cxix87, align 8
  %inc = add nsw i32 %83, 1
  store i32 %inc, i32* %si_cxix87, align 8
  br label %cond.end

cond.false88:                                     ; preds = %if.else
  %call89 = call i32 @Perl_cxinc()
  %84 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %si_cxix90 = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %84, i32 0, i32 4
  store i32 %call89, i32* %si_cxix90, align 8
  br label %cond.end

cond.end:                                         ; preds = %cond.false88, %cond.true86
  %cond = phi i32 [ %inc, %cond.true86 ], [ %call89, %cond.false88 ]
  %85 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %si_cxstack91 = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %85, i32 0, i32 1
  %86 = load %struct.context*, %struct.context** %si_cxstack91, align 8
  %87 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %si_cxix92 = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %87, i32 0, i32 4
  %88 = load i32, i32* %si_cxix92, align 8
  %idxprom93 = sext i32 %88 to i64
  %arrayidx94 = getelementptr inbounds %struct.context, %struct.context* %86, i64 %idxprom93
  store %struct.context* %arrayidx94, %struct.context** %cx, align 8
  %89 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u95 = getelementptr inbounds %struct.context, %struct.context* %89, i32 0, i32 0
  %cx_subst = bitcast %union.anon.16* %cx_u95 to %struct.subst*
  %sbu_type = getelementptr inbounds %struct.subst, %struct.subst* %cx_subst, i32 0, i32 0
  store i8 8, i8* %sbu_type, align 8
  %90 = load %struct.sv**, %struct.sv*** %sp, align 8
  %91 = load %struct.sv**, %struct.sv*** @PL_stack_base, align 8
  %sub.ptr.lhs.cast96 = ptrtoint %struct.sv** %90 to i64
  %sub.ptr.rhs.cast97 = ptrtoint %struct.sv** %91 to i64
  %sub.ptr.sub98 = sub i64 %sub.ptr.lhs.cast96, %sub.ptr.rhs.cast97
  %sub.ptr.div99 = sdiv exact i64 %sub.ptr.sub98, 8
  %conv100 = trunc i64 %sub.ptr.div99 to i32
  %92 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u101 = getelementptr inbounds %struct.context, %struct.context* %92, i32 0, i32 0
  %cx_blk102 = bitcast %union.anon.16* %cx_u101 to %struct.block*
  %blku_oldsp103 = getelementptr inbounds %struct.block, %struct.block* %cx_blk102, i32 0, i32 3
  store i32 %conv100, i32* %blku_oldsp103, align 4
  %93 = load %struct.cop*, %struct.cop** @PL_curcop, align 8
  %94 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u104 = getelementptr inbounds %struct.context, %struct.context* %94, i32 0, i32 0
  %cx_blk105 = bitcast %union.anon.16* %cx_u104 to %struct.block*
  %blku_oldcop = getelementptr inbounds %struct.block, %struct.block* %cx_blk105, i32 0, i32 4
  store %struct.cop* %93, %struct.cop** %blku_oldcop, align 8
  %95 = load i32*, i32** @PL_markstack_ptr, align 8
  %96 = load i32*, i32** @PL_markstack, align 8
  %sub.ptr.lhs.cast106 = ptrtoint i32* %95 to i64
  %sub.ptr.rhs.cast107 = ptrtoint i32* %96 to i64
  %sub.ptr.sub108 = sub i64 %sub.ptr.lhs.cast106, %sub.ptr.rhs.cast107
  %sub.ptr.div109 = sdiv exact i64 %sub.ptr.sub108, 4
  %conv110 = trunc i64 %sub.ptr.div109 to i32
  %97 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u111 = getelementptr inbounds %struct.context, %struct.context* %97, i32 0, i32 0
  %cx_blk112 = bitcast %union.anon.16* %cx_u111 to %struct.block*
  %blku_oldmarksp = getelementptr inbounds %struct.block, %struct.block* %cx_blk112, i32 0, i32 5
  store i32 %conv110, i32* %blku_oldmarksp, align 8
  %98 = load i32, i32* @PL_scopestack_ix, align 4
  %99 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u113 = getelementptr inbounds %struct.context, %struct.context* %99, i32 0, i32 0
  %cx_blk114 = bitcast %union.anon.16* %cx_u113 to %struct.block*
  %blku_oldscopesp = getelementptr inbounds %struct.block, %struct.block* %cx_blk114, i32 0, i32 6
  store i32 %98, i32* %blku_oldscopesp, align 4
  %100 = load %struct.pmop*, %struct.pmop** @PL_curpm, align 8
  %101 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u115 = getelementptr inbounds %struct.context, %struct.context* %101, i32 0, i32 0
  %cx_blk116 = bitcast %union.anon.16* %cx_u115 to %struct.block*
  %blku_oldpm = getelementptr inbounds %struct.block, %struct.block* %cx_blk116, i32 0, i32 7
  store %struct.pmop* %100, %struct.pmop** %blku_oldpm, align 8
  %102 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u117 = getelementptr inbounds %struct.context, %struct.context* %102, i32 0, i32 0
  %cx_blk118 = bitcast %union.anon.16* %cx_u117 to %struct.block*
  %blku_gimme = getelementptr inbounds %struct.block, %struct.block* %cx_blk118, i32 0, i32 1
  store i8 3, i8* %blku_gimme, align 1
  %103 = load %struct.cv*, %struct.cv** %cv, align 8
  %104 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u119 = getelementptr inbounds %struct.context, %struct.context* %104, i32 0, i32 0
  %cx_blk120 = bitcast %union.anon.16* %cx_u119 to %struct.block*
  %blk_u = getelementptr inbounds %struct.block, %struct.block* %cx_blk120, i32 0, i32 8
  %blku_sub = bitcast %union.anon.20* %blk_u to %struct.block_sub*
  %cv121 = getelementptr inbounds %struct.block_sub, %struct.block_sub* %blku_sub, i32 0, i32 1
  store %struct.cv* %103, %struct.cv** %cv121, align 8
  %105 = load %struct.cv*, %struct.cv** %cv, align 8
  %call122 = call i32* @S_CvDEPTHp(%struct.cv* %105)
  %106 = load i32, i32* %call122, align 4
  %107 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u123 = getelementptr inbounds %struct.context, %struct.context* %107, i32 0, i32 0
  %cx_blk124 = bitcast %union.anon.16* %cx_u123 to %struct.block*
  %blk_u125 = getelementptr inbounds %struct.block, %struct.block* %cx_blk124, i32 0, i32 8
  %blku_sub126 = bitcast %union.anon.20* %blk_u125 to %struct.block_sub*
  %olddepth = getelementptr inbounds %struct.block_sub, %struct.block_sub* %blku_sub126, i32 0, i32 4
  store i32 %106, i32* %olddepth, align 8
  %108 = load i8, i8* %hasargs, align 1
  %conv127 = zext i8 %108 to i32
  %tobool128 = icmp ne i32 %conv127, 0
  %109 = zext i1 %tobool128 to i64
  %cond129 = select i1 %tobool128, i32 32, i32 0
  %110 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u130 = getelementptr inbounds %struct.context, %struct.context* %110, i32 0, i32 0
  %cx_subst131 = bitcast %union.anon.16* %cx_u130 to %struct.subst*
  %sbu_type132 = getelementptr inbounds %struct.subst, %struct.subst* %cx_subst131, i32 0, i32 0
  %111 = load i8, i8* %sbu_type132, align 8
  %conv133 = zext i8 %111 to i32
  %or = or i32 %conv133, %cond129
  %conv134 = trunc i32 %or to i8
  store i8 %conv134, i8* %sbu_type132, align 8
  %112 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u135 = getelementptr inbounds %struct.context, %struct.context* %112, i32 0, i32 0
  %cx_blk136 = bitcast %union.anon.16* %cx_u135 to %struct.block*
  %blk_u137 = getelementptr inbounds %struct.block, %struct.block* %cx_blk136, i32 0, i32 8
  %blku_sub138 = bitcast %union.anon.20* %blk_u137 to %struct.block_sub*
  %retop = getelementptr inbounds %struct.block_sub, %struct.block_sub* %blku_sub138, i32 0, i32 0
  store %struct.op* null, %struct.op** %retop, align 8
  %113 = load %struct.cv*, %struct.cv** %cv, align 8
  %call139 = call i32* @S_CvDEPTHp(%struct.cv* %113)
  %114 = load i32, i32* %call139, align 4
  %tobool140 = icmp ne i32 %114, 0
  br i1 %tobool140, label %if.end145, label %if.then141

if.then141:                                       ; preds = %cond.end
  %115 = load %struct.cv*, %struct.cv** %cv, align 8
  %116 = bitcast %struct.cv* %115 to i8*
  %117 = bitcast i8* %116 to %struct.sv*
  %sv_refcnt = getelementptr inbounds %struct.sv, %struct.sv* %117, i32 0, i32 1
  %118 = load i32, i32* %sv_refcnt, align 8
  %inc142 = add i32 %118, 1
  store i32 %inc142, i32* %sv_refcnt, align 8
  %119 = load %struct.cv*, %struct.cv** %cv, align 8
  %120 = bitcast %struct.cv* %119 to i8*
  %121 = bitcast i8* %120 to %struct.sv*
  %sv_refcnt143 = getelementptr inbounds %struct.sv, %struct.sv* %121, i32 0, i32 1
  %122 = load i32, i32* %sv_refcnt143, align 8
  %inc144 = add i32 %122, 1
  store i32 %inc144, i32* %sv_refcnt143, align 8
  %123 = load %struct.cv*, %struct.cv** %cv, align 8
  %124 = bitcast %struct.cv* %123 to i8*
  %125 = bitcast i8* %124 to %struct.sv*
  %126 = bitcast %struct.sv* %125 to i8*
  call void @Perl_save_pushptr(i8* %126, i32 11)
  br label %if.end145

if.end145:                                        ; preds = %if.then141, %cond.end
  %127 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u146 = getelementptr inbounds %struct.context, %struct.context* %127, i32 0, i32 0
  %cx_blk147 = bitcast %union.anon.16* %cx_u146 to %struct.block*
  %blku_u16 = getelementptr inbounds %struct.block, %struct.block* %cx_blk147, i32 0, i32 2
  store i16 0, i16* %blku_u16, align 2
  %128 = load %struct.op*, %struct.op** @PL_op, align 8
  %op_next148 = getelementptr inbounds %struct.op, %struct.op* %128, i32 0, i32 0
  %129 = load %struct.op*, %struct.op** %op_next148, align 8
  %130 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u149 = getelementptr inbounds %struct.context, %struct.context* %130, i32 0, i32 0
  %cx_blk150 = bitcast %union.anon.16* %cx_u149 to %struct.block*
  %blk_u151 = getelementptr inbounds %struct.block, %struct.block* %cx_blk150, i32 0, i32 8
  %blku_sub152 = bitcast %union.anon.20* %blk_u151 to %struct.block_sub*
  %retop153 = getelementptr inbounds %struct.block_sub, %struct.block_sub* %blku_sub152, i32 0, i32 0
  store %struct.op* %129, %struct.op** %retop153, align 8
  %131 = load %struct.cv*, %struct.cv** %cv, align 8
  %call154 = call i32* @S_CvDEPTHp(%struct.cv* %131)
  %132 = load i32, i32* %call154, align 4
  %inc155 = add nsw i32 %132, 1
  store i32 %inc155, i32* %call154, align 4
  %133 = load %struct.cv*, %struct.cv** %cv, align 8
  %call156 = call i32* @S_CvDEPTHp(%struct.cv* %133)
  %134 = load i32, i32* %call156, align 4
  %cmp157 = icmp sge i32 %134, 2
  br i1 %cmp157, label %if.then159, label %if.end162

if.then159:                                       ; preds = %if.end145
  %135 = load %struct.cv*, %struct.cv** %cv, align 8
  %sv_any160 = getelementptr inbounds %struct.cv, %struct.cv* %135, i32 0, i32 0
  %136 = load %struct.xpvcv*, %struct.xpvcv** %sv_any160, align 8
  %137 = bitcast %struct.xpvcv* %136 to i8*
  %138 = bitcast i8* %137 to %struct.xpvcv*
  %xcv_padlist_u = getelementptr inbounds %struct.xpvcv, %struct.xpvcv* %138, i32 0, i32 9
  %xcv_padlist = bitcast %union.anon.13* %xcv_padlist_u to %struct.padlist**
  %139 = load %struct.padlist*, %struct.padlist** %xcv_padlist, align 8
  %140 = load %struct.cv*, %struct.cv** %cv, align 8
  %call161 = call i32* @S_CvDEPTHp(%struct.cv* %140)
  %141 = load i32, i32* %call161, align 4
  call void @Perl_pad_push(%struct.padlist* %139, i32 %141)
  br label %if.end162

if.end162:                                        ; preds = %if.then159, %if.end145
  %142 = load %struct.av*, %struct.av** @PL_comppad, align 8
  %143 = bitcast %struct.av* %142 to i8*
  %144 = bitcast i8* %143 to %struct.sv*
  %145 = bitcast %struct.sv* %144 to i8*
  call void @Perl_save_pushptr(i8* %145, i32 7)
  %146 = load %struct.cv*, %struct.cv** %cv, align 8
  %sv_any163 = getelementptr inbounds %struct.cv, %struct.cv* %146, i32 0, i32 0
  %147 = load %struct.xpvcv*, %struct.xpvcv** %sv_any163, align 8
  %148 = bitcast %struct.xpvcv* %147 to i8*
  %149 = bitcast i8* %148 to %struct.xpvcv*
  %xcv_padlist_u164 = getelementptr inbounds %struct.xpvcv, %struct.xpvcv* %149, i32 0, i32 9
  %xcv_padlist165 = bitcast %union.anon.13* %xcv_padlist_u164 to %struct.padlist**
  %150 = load %struct.padlist*, %struct.padlist** %xcv_padlist165, align 8
  %xpadl_alloc = getelementptr inbounds %struct.padlist, %struct.padlist* %150, i32 0, i32 1
  %151 = load %struct.av**, %struct.av*** %xpadl_alloc, align 8
  %152 = load %struct.cv*, %struct.cv** %cv, align 8
  %call166 = call i32* @S_CvDEPTHp(%struct.cv* %152)
  %153 = load i32, i32* %call166, align 4
  %idxprom167 = sext i32 %153 to i64
  %arrayidx168 = getelementptr inbounds %struct.av*, %struct.av** %151, i64 %idxprom167
  %154 = load %struct.av*, %struct.av** %arrayidx168, align 8
  store %struct.av* %154, %struct.av** @PL_comppad, align 8
  %155 = load %struct.av*, %struct.av** @PL_comppad, align 8
  %sv_u169 = getelementptr inbounds %struct.av, %struct.av* %155, i32 0, i32 3
  %svu_array = bitcast %union.anon.0* %sv_u169 to %struct.sv***
  %156 = load %struct.sv**, %struct.sv*** %svu_array, align 8
  store %struct.sv** %156, %struct.sv*** @PL_curpad, align 8
  %157 = load %struct.sv**, %struct.sv*** %sp, align 8
  store %struct.sv** %157, %struct.sv*** @PL_stack_sp, align 8
  %158 = load %struct.cv*, %struct.cv** %cv, align 8
  %sv_any170 = getelementptr inbounds %struct.cv, %struct.cv* %158, i32 0, i32 0
  %159 = load %struct.xpvcv*, %struct.xpvcv** %sv_any170, align 8
  %160 = bitcast %struct.xpvcv* %159 to i8*
  %161 = bitcast i8* %160 to %struct.xpvcv*
  %xcv_start_u = getelementptr inbounds %struct.xpvcv, %struct.xpvcv* %161, i32 0, i32 5
  %xcv_start = bitcast %union.anon.10* %xcv_start_u to %struct.op**
  %162 = load %struct.op*, %struct.op** %xcv_start, align 8
  store %struct.op* %162, %struct.op** %retval, align 8
  br label %return

if.else171:                                       ; preds = %lor.lhs.false7
  %163 = load %struct.op*, %struct.op** @PL_op, align 8
  %op_next172 = getelementptr inbounds %struct.op, %struct.op* %163, i32 0, i32 0
  %164 = load %struct.op*, %struct.op** %op_next172, align 8
  store %struct.op* %164, %struct.op** %retval, align 8
  br label %return

return:                                           ; preds = %if.else171, %if.end162, %if.end81, %if.then43, %if.then35
  %165 = load %struct.op*, %struct.op** %retval, align 8
  ret %struct.op* %165
}

declare dso_local void @Perl_save_I32(i32*) #1

declare dso_local void @Perl_savestack_grow() #1

declare dso_local i32* @Perl_markstack_grow() #1

declare dso_local i32 @Perl_cxinc() #1

declare dso_local void @Perl_save_pushptr(i8*, i32) #1

declare dso_local void @Perl_pad_push(%struct.padlist*, i32) #1

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.op* @Perl_pp_enter() #0 {
entry:
  %sp = alloca %struct.sv**, align 8
  %cx = alloca %struct.context*, align 8
  %gimme = alloca i32, align 4
  %0 = load %struct.sv**, %struct.sv*** @PL_stack_sp, align 8
  store %struct.sv** %0, %struct.sv*** %sp, align 8
  %1 = load %struct.op*, %struct.op** @PL_op, align 8
  %op_flags = getelementptr inbounds %struct.op, %struct.op* %1, i32 0, i32 5
  %2 = load i8, i8* %op_flags, align 2
  %conv = zext i8 %2 to i32
  %and = and i32 %conv, 3
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %3 = load %struct.op*, %struct.op** @PL_op, align 8
  %op_flags1 = getelementptr inbounds %struct.op, %struct.op* %3, i32 0, i32 5
  %4 = load i8, i8* %op_flags1, align 2
  %conv2 = zext i8 %4 to i32
  %and3 = and i32 %conv2, 3
  br label %cond.end

cond.false:                                       ; preds = %entry
  %call = call i32 @Perl_block_gimme()
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %and3, %cond.true ], [ %call, %cond.false ]
  store i32 %cond, i32* %gimme, align 4
  call void @Perl_push_scope()
  call void @Perl_save_strlen(i64* @PL_tmps_floor)
  %5 = load i64, i64* @PL_tmps_ix, align 8
  store i64 %5, i64* @PL_tmps_floor, align 8
  %6 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %si_cxix = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %6, i32 0, i32 4
  %7 = load i32, i32* %si_cxix, align 8
  %8 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %si_cxmax = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %8, i32 0, i32 5
  %9 = load i32, i32* %si_cxmax, align 4
  %cmp = icmp slt i32 %7, %9
  br i1 %cmp, label %cond.true5, label %cond.false7

cond.true5:                                       ; preds = %cond.end
  %10 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %si_cxix6 = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %10, i32 0, i32 4
  %11 = load i32, i32* %si_cxix6, align 8
  %inc = add nsw i32 %11, 1
  store i32 %inc, i32* %si_cxix6, align 8
  br label %cond.end10

cond.false7:                                      ; preds = %cond.end
  %call8 = call i32 @Perl_cxinc()
  %12 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %si_cxix9 = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %12, i32 0, i32 4
  store i32 %call8, i32* %si_cxix9, align 8
  br label %cond.end10

cond.end10:                                       ; preds = %cond.false7, %cond.true5
  %cond11 = phi i32 [ %inc, %cond.true5 ], [ %call8, %cond.false7 ]
  %13 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %si_cxstack = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %13, i32 0, i32 1
  %14 = load %struct.context*, %struct.context** %si_cxstack, align 8
  %15 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %si_cxix12 = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %15, i32 0, i32 4
  %16 = load i32, i32* %si_cxix12, align 8
  %idxprom = sext i32 %16 to i64
  %arrayidx = getelementptr inbounds %struct.context, %struct.context* %14, i64 %idxprom
  store %struct.context* %arrayidx, %struct.context** %cx, align 8
  %17 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u = getelementptr inbounds %struct.context, %struct.context* %17, i32 0, i32 0
  %cx_subst = bitcast %union.anon.16* %cx_u to %struct.subst*
  %sbu_type = getelementptr inbounds %struct.subst, %struct.subst* %cx_subst, i32 0, i32 0
  store i8 2, i8* %sbu_type, align 8
  %18 = load %struct.sv**, %struct.sv*** %sp, align 8
  %19 = load %struct.sv**, %struct.sv*** @PL_stack_base, align 8
  %sub.ptr.lhs.cast = ptrtoint %struct.sv** %18 to i64
  %sub.ptr.rhs.cast = ptrtoint %struct.sv** %19 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 8
  %conv13 = trunc i64 %sub.ptr.div to i32
  %20 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u14 = getelementptr inbounds %struct.context, %struct.context* %20, i32 0, i32 0
  %cx_blk = bitcast %union.anon.16* %cx_u14 to %struct.block*
  %blku_oldsp = getelementptr inbounds %struct.block, %struct.block* %cx_blk, i32 0, i32 3
  store i32 %conv13, i32* %blku_oldsp, align 4
  %21 = load %struct.cop*, %struct.cop** @PL_curcop, align 8
  %22 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u15 = getelementptr inbounds %struct.context, %struct.context* %22, i32 0, i32 0
  %cx_blk16 = bitcast %union.anon.16* %cx_u15 to %struct.block*
  %blku_oldcop = getelementptr inbounds %struct.block, %struct.block* %cx_blk16, i32 0, i32 4
  store %struct.cop* %21, %struct.cop** %blku_oldcop, align 8
  %23 = load i32*, i32** @PL_markstack_ptr, align 8
  %24 = load i32*, i32** @PL_markstack, align 8
  %sub.ptr.lhs.cast17 = ptrtoint i32* %23 to i64
  %sub.ptr.rhs.cast18 = ptrtoint i32* %24 to i64
  %sub.ptr.sub19 = sub i64 %sub.ptr.lhs.cast17, %sub.ptr.rhs.cast18
  %sub.ptr.div20 = sdiv exact i64 %sub.ptr.sub19, 4
  %conv21 = trunc i64 %sub.ptr.div20 to i32
  %25 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u22 = getelementptr inbounds %struct.context, %struct.context* %25, i32 0, i32 0
  %cx_blk23 = bitcast %union.anon.16* %cx_u22 to %struct.block*
  %blku_oldmarksp = getelementptr inbounds %struct.block, %struct.block* %cx_blk23, i32 0, i32 5
  store i32 %conv21, i32* %blku_oldmarksp, align 8
  %26 = load i32, i32* @PL_scopestack_ix, align 4
  %27 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u24 = getelementptr inbounds %struct.context, %struct.context* %27, i32 0, i32 0
  %cx_blk25 = bitcast %union.anon.16* %cx_u24 to %struct.block*
  %blku_oldscopesp = getelementptr inbounds %struct.block, %struct.block* %cx_blk25, i32 0, i32 6
  store i32 %26, i32* %blku_oldscopesp, align 4
  %28 = load %struct.pmop*, %struct.pmop** @PL_curpm, align 8
  %29 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u26 = getelementptr inbounds %struct.context, %struct.context* %29, i32 0, i32 0
  %cx_blk27 = bitcast %union.anon.16* %cx_u26 to %struct.block*
  %blku_oldpm = getelementptr inbounds %struct.block, %struct.block* %cx_blk27, i32 0, i32 7
  store %struct.pmop* %28, %struct.pmop** %blku_oldpm, align 8
  %30 = load i32, i32* %gimme, align 4
  %conv28 = trunc i32 %30 to i8
  %31 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u29 = getelementptr inbounds %struct.context, %struct.context* %31, i32 0, i32 0
  %cx_blk30 = bitcast %union.anon.16* %cx_u29 to %struct.block*
  %blku_gimme = getelementptr inbounds %struct.block, %struct.block* %cx_blk30, i32 0, i32 1
  store i8 %conv28, i8* %blku_gimme, align 1
  %32 = load %struct.sv**, %struct.sv*** %sp, align 8
  store %struct.sv** %32, %struct.sv*** @PL_stack_sp, align 8
  %33 = load %struct.op*, %struct.op** @PL_op, align 8
  %op_next = getelementptr inbounds %struct.op, %struct.op* %33, i32 0, i32 0
  %34 = load %struct.op*, %struct.op** %op_next, align 8
  ret %struct.op* %34
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.op* @Perl_pp_leave() #0 {
entry:
  %sp = alloca %struct.sv**, align 8
  %cx = alloca %struct.context*, align 8
  %newsp = alloca %struct.sv**, align 8
  %newpm = alloca %struct.pmop*, align 8
  %gimme = alloca i32, align 4
  %0 = load %struct.sv**, %struct.sv*** @PL_stack_sp, align 8
  store %struct.sv** %0, %struct.sv*** %sp, align 8
  %1 = load %struct.op*, %struct.op** @PL_op, align 8
  %op_flags = getelementptr inbounds %struct.op, %struct.op* %1, i32 0, i32 5
  %2 = load i8, i8* %op_flags, align 2
  %conv = zext i8 %2 to i32
  %and = and i32 %conv, 128
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %3 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %si_cxstack = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %3, i32 0, i32 1
  %4 = load %struct.context*, %struct.context** %si_cxstack, align 8
  %5 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %si_cxix = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %5, i32 0, i32 4
  %6 = load i32, i32* %si_cxix, align 8
  %idxprom = sext i32 %6 to i64
  %arrayidx = getelementptr inbounds %struct.context, %struct.context* %4, i64 %idxprom
  store %struct.context* %arrayidx, %struct.context** %cx, align 8
  %7 = load %struct.pmop*, %struct.pmop** @PL_curpm, align 8
  %8 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u = getelementptr inbounds %struct.context, %struct.context* %8, i32 0, i32 0
  %cx_blk = bitcast %union.anon.16* %cx_u to %struct.block*
  %blku_oldpm = getelementptr inbounds %struct.block, %struct.block* %cx_blk, i32 0, i32 7
  store %struct.pmop* %7, %struct.pmop** %blku_oldpm, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %9 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %si_cxstack1 = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %9, i32 0, i32 1
  %10 = load %struct.context*, %struct.context** %si_cxstack1, align 8
  %11 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %si_cxix2 = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %11, i32 0, i32 4
  %12 = load i32, i32* %si_cxix2, align 8
  %dec = add nsw i32 %12, -1
  store i32 %dec, i32* %si_cxix2, align 8
  %idxprom3 = sext i32 %12 to i64
  %arrayidx4 = getelementptr inbounds %struct.context, %struct.context* %10, i64 %idxprom3
  store %struct.context* %arrayidx4, %struct.context** %cx, align 8
  %13 = load %struct.sv**, %struct.sv*** @PL_stack_base, align 8
  %14 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u5 = getelementptr inbounds %struct.context, %struct.context* %14, i32 0, i32 0
  %cx_blk6 = bitcast %union.anon.16* %cx_u5 to %struct.block*
  %blku_oldsp = getelementptr inbounds %struct.block, %struct.block* %cx_blk6, i32 0, i32 3
  %15 = load i32, i32* %blku_oldsp, align 4
  %idx.ext = sext i32 %15 to i64
  %add.ptr = getelementptr inbounds %struct.sv*, %struct.sv** %13, i64 %idx.ext
  store %struct.sv** %add.ptr, %struct.sv*** %newsp, align 8
  %16 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u7 = getelementptr inbounds %struct.context, %struct.context* %16, i32 0, i32 0
  %cx_blk8 = bitcast %union.anon.16* %cx_u7 to %struct.block*
  %blku_oldcop = getelementptr inbounds %struct.block, %struct.block* %cx_blk8, i32 0, i32 4
  %17 = load %struct.cop*, %struct.cop** %blku_oldcop, align 8
  store %struct.cop* %17, %struct.cop** @PL_curcop, align 8
  %18 = load i32*, i32** @PL_markstack, align 8
  %19 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u9 = getelementptr inbounds %struct.context, %struct.context* %19, i32 0, i32 0
  %cx_blk10 = bitcast %union.anon.16* %cx_u9 to %struct.block*
  %blku_oldmarksp = getelementptr inbounds %struct.block, %struct.block* %cx_blk10, i32 0, i32 5
  %20 = load i32, i32* %blku_oldmarksp, align 8
  %idx.ext11 = sext i32 %20 to i64
  %add.ptr12 = getelementptr inbounds i32, i32* %18, i64 %idx.ext11
  store i32* %add.ptr12, i32** @PL_markstack_ptr, align 8
  %21 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u13 = getelementptr inbounds %struct.context, %struct.context* %21, i32 0, i32 0
  %cx_blk14 = bitcast %union.anon.16* %cx_u13 to %struct.block*
  %blku_oldscopesp = getelementptr inbounds %struct.block, %struct.block* %cx_blk14, i32 0, i32 6
  %22 = load i32, i32* %blku_oldscopesp, align 4
  store i32 %22, i32* @PL_scopestack_ix, align 4
  %23 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u15 = getelementptr inbounds %struct.context, %struct.context* %23, i32 0, i32 0
  %cx_blk16 = bitcast %union.anon.16* %cx_u15 to %struct.block*
  %blku_oldpm17 = getelementptr inbounds %struct.block, %struct.block* %cx_blk16, i32 0, i32 7
  %24 = load %struct.pmop*, %struct.pmop** %blku_oldpm17, align 8
  store %struct.pmop* %24, %struct.pmop** %newpm, align 8
  %25 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u18 = getelementptr inbounds %struct.context, %struct.context* %25, i32 0, i32 0
  %cx_blk19 = bitcast %union.anon.16* %cx_u18 to %struct.block*
  %blku_gimme = getelementptr inbounds %struct.block, %struct.block* %cx_blk19, i32 0, i32 1
  %26 = load i8, i8* %blku_gimme, align 1
  %conv20 = zext i8 %26 to i32
  store i32 %conv20, i32* %gimme, align 4
  %27 = load %struct.op*, %struct.op** @PL_op, align 8
  %op_flags21 = getelementptr inbounds %struct.op, %struct.op* %27, i32 0, i32 5
  %28 = load i8, i8* %op_flags21, align 2
  %conv22 = zext i8 %28 to i32
  %and23 = and i32 %conv22, 3
  %tobool24 = icmp ne i32 %and23, 0
  br i1 %tobool24, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end
  %29 = load %struct.op*, %struct.op** @PL_op, align 8
  %op_flags25 = getelementptr inbounds %struct.op, %struct.op* %29, i32 0, i32 5
  %30 = load i8, i8* %op_flags25, align 2
  %conv26 = zext i8 %30 to i32
  %and27 = and i32 %conv26, 3
  br label %cond.end32

cond.false:                                       ; preds = %if.end
  %31 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %si_cxix28 = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %31, i32 0, i32 4
  %32 = load i32, i32* %si_cxix28, align 8
  %cmp = icmp sge i32 %32, 0
  br i1 %cmp, label %cond.true30, label %cond.false31

cond.true30:                                      ; preds = %cond.false
  %33 = load i32, i32* %gimme, align 4
  br label %cond.end

cond.false31:                                     ; preds = %cond.false
  br label %cond.end

cond.end:                                         ; preds = %cond.false31, %cond.true30
  %cond = phi i32 [ %33, %cond.true30 ], [ 2, %cond.false31 ]
  br label %cond.end32

cond.end32:                                       ; preds = %cond.end, %cond.true
  %cond33 = phi i32 [ %and27, %cond.true ], [ %cond, %cond.end ]
  store i32 %cond33, i32* %gimme, align 4
  %34 = load %struct.sv**, %struct.sv*** %newsp, align 8
  %35 = load %struct.sv**, %struct.sv*** %sp, align 8
  %36 = load %struct.sv**, %struct.sv*** %newsp, align 8
  %37 = load i32, i32* %gimme, align 4
  %38 = load %struct.op*, %struct.op** @PL_op, align 8
  %op_private = getelementptr inbounds %struct.op, %struct.op* %38, i32 0, i32 6
  %39 = load i8, i8* %op_private, align 1
  %conv34 = zext i8 %39 to i32
  %and35 = and i32 %conv34, 128
  %tobool36 = icmp ne i32 %and35, 0
  %call = call %struct.sv** @S_leave_common(%struct.sv** %34, %struct.sv** %35, %struct.sv** %36, i32 %37, i32 655360, i1 zeroext %tobool36)
  store %struct.sv** %call, %struct.sv*** %sp, align 8
  %40 = load %struct.pmop*, %struct.pmop** %newpm, align 8
  store %struct.pmop* %40, %struct.pmop** @PL_curpm, align 8
  call void @Perl_pop_scope()
  %41 = load %struct.sv**, %struct.sv*** %sp, align 8
  store %struct.sv** %41, %struct.sv*** @PL_stack_sp, align 8
  %42 = load %struct.op*, %struct.op** @PL_op, align 8
  %op_next = getelementptr inbounds %struct.op, %struct.op* %42, i32 0, i32 0
  %43 = load %struct.op*, %struct.op** %op_next, align 8
  ret %struct.op* %43
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.sv** @S_leave_common(%struct.sv** %newsp, %struct.sv** %sp, %struct.sv** %mark, i32 %gimme, i32 %flags, i1 zeroext %lvalue) #0 {
entry:
  %retval = alloca %struct.sv**, align 8
  %newsp.addr = alloca %struct.sv**, align 8
  %sp.addr = alloca %struct.sv**, align 8
  %mark.addr = alloca %struct.sv**, align 8
  %gimme.addr = alloca i32, align 4
  %flags.addr = alloca i32, align 4
  %lvalue.addr = alloca i8, align 1
  %padtmp = alloca i8, align 1
  %markoff = alloca i64, align 8
  store %struct.sv** %newsp, %struct.sv*** %newsp.addr, align 8
  store %struct.sv** %sp, %struct.sv*** %sp.addr, align 8
  store %struct.sv** %mark, %struct.sv*** %mark.addr, align 8
  store i32 %gimme, i32* %gimme.addr, align 4
  store i32 %flags, i32* %flags.addr, align 4
  %frombool = zext i1 %lvalue to i8
  store i8 %frombool, i8* %lvalue.addr, align 1
  store i8 0, i8* %padtmp, align 1
  store i8 0, i8* @PL_tainted, align 1
  %0 = load i32, i32* %flags.addr, align 4
  %and = and i32 %0, 131072
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %1 = load i32, i32* %flags.addr, align 4
  %and1 = and i32 %1, -131073
  store i32 %and1, i32* %flags.addr, align 4
  store i8 1, i8* %padtmp, align 1
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %2 = load i32, i32* %gimme.addr, align 4
  %cmp = icmp eq i32 %2, 2
  br i1 %cmp, label %if.then2, label %if.else29

if.then2:                                         ; preds = %if.end
  %3 = load %struct.sv**, %struct.sv*** %mark.addr, align 8
  %4 = load %struct.sv**, %struct.sv*** %sp.addr, align 8
  %cmp3 = icmp ult %struct.sv** %3, %4
  br i1 %cmp3, label %if.then4, label %if.else

if.then4:                                         ; preds = %if.then2
  %5 = load %struct.sv**, %struct.sv*** %sp.addr, align 8
  %6 = load %struct.sv*, %struct.sv** %5, align 8
  %sv_flags = getelementptr inbounds %struct.sv, %struct.sv* %6, i32 0, i32 2
  %7 = load i32, i32* %sv_flags, align 4
  %8 = load i32, i32* %flags.addr, align 4
  %and5 = and i32 %7, %8
  %tobool6 = icmp ne i32 %and5, 0
  br i1 %tobool6, label %cond.true, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.then4
  %9 = load i8, i8* %padtmp, align 1
  %tobool7 = trunc i8 %9 to i1
  br i1 %tobool7, label %land.lhs.true, label %cond.false

land.lhs.true:                                    ; preds = %lor.lhs.false
  %10 = load %struct.sv**, %struct.sv*** %sp.addr, align 8
  %11 = load %struct.sv*, %struct.sv** %10, align 8
  %sv_flags8 = getelementptr inbounds %struct.sv, %struct.sv* %11, i32 0, i32 2
  %12 = load i32, i32* %sv_flags8, align 4
  %and9 = and i32 %12, 131072
  %tobool10 = icmp ne i32 %and9, 0
  br i1 %tobool10, label %cond.true, label %cond.false

cond.true:                                        ; preds = %land.lhs.true, %if.then4
  %13 = load %struct.sv**, %struct.sv*** %sp.addr, align 8
  %14 = load %struct.sv*, %struct.sv** %13, align 8
  br label %cond.end15

cond.false:                                       ; preds = %land.lhs.true, %lor.lhs.false
  %15 = load i8, i8* %lvalue.addr, align 1
  %tobool11 = trunc i8 %15 to i1
  br i1 %tobool11, label %cond.true12, label %cond.false13

cond.true12:                                      ; preds = %cond.false
  %16 = load %struct.sv**, %struct.sv*** %sp.addr, align 8
  %17 = load %struct.sv*, %struct.sv** %16, align 8
  %sv_refcnt = getelementptr inbounds %struct.sv, %struct.sv* %17, i32 0, i32 1
  %18 = load i32, i32* %sv_refcnt, align 8
  %inc = add i32 %18, 1
  store i32 %inc, i32* %sv_refcnt, align 8
  %19 = load %struct.sv**, %struct.sv*** %sp.addr, align 8
  %20 = load %struct.sv*, %struct.sv** %19, align 8
  %21 = bitcast %struct.sv* %20 to i8*
  %22 = bitcast i8* %21 to %struct.sv*
  %call = call %struct.sv* @Perl_sv_2mortal(%struct.sv* %22)
  br label %cond.end

cond.false13:                                     ; preds = %cond.false
  %23 = load %struct.sv**, %struct.sv*** %sp.addr, align 8
  %24 = load %struct.sv*, %struct.sv** %23, align 8
  %call14 = call %struct.sv* @Perl_sv_mortalcopy_flags(%struct.sv* %24, i32 1538)
  br label %cond.end

cond.end:                                         ; preds = %cond.false13, %cond.true12
  %cond = phi %struct.sv* [ %call, %cond.true12 ], [ %call14, %cond.false13 ]
  br label %cond.end15

cond.end15:                                       ; preds = %cond.end, %cond.true
  %cond16 = phi %struct.sv* [ %14, %cond.true ], [ %cond, %cond.end ]
  %25 = load %struct.sv**, %struct.sv*** %newsp.addr, align 8
  %incdec.ptr = getelementptr inbounds %struct.sv*, %struct.sv** %25, i32 1
  store %struct.sv** %incdec.ptr, %struct.sv*** %newsp.addr, align 8
  store %struct.sv* %cond16, %struct.sv** %incdec.ptr, align 8
  br label %if.end28

if.else:                                          ; preds = %if.then2
  %26 = load %struct.sv**, %struct.sv*** %newsp.addr, align 8
  store %struct.sv** %26, %struct.sv*** %mark.addr, align 8
  br label %do.body

do.body:                                          ; preds = %if.else
  %27 = load %struct.sv**, %struct.sv*** @PL_stack_max, align 8
  %28 = load %struct.sv**, %struct.sv*** %mark.addr, align 8
  %sub.ptr.lhs.cast = ptrtoint %struct.sv** %27 to i64
  %sub.ptr.rhs.cast = ptrtoint %struct.sv** %28 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 8
  %cmp17 = icmp slt i64 %sub.ptr.div, 1
  br i1 %cmp17, label %cond.true18, label %cond.false19

cond.true18:                                      ; preds = %do.body
  br i1 true, label %if.then20, label %if.end26

cond.false19:                                     ; preds = %do.body
  br i1 false, label %if.then20, label %if.end26

if.then20:                                        ; preds = %cond.false19, %cond.true18
  %29 = load %struct.sv**, %struct.sv*** %mark.addr, align 8
  %30 = load %struct.sv**, %struct.sv*** @PL_stack_base, align 8
  %sub.ptr.lhs.cast21 = ptrtoint %struct.sv** %29 to i64
  %sub.ptr.rhs.cast22 = ptrtoint %struct.sv** %30 to i64
  %sub.ptr.sub23 = sub i64 %sub.ptr.lhs.cast21, %sub.ptr.rhs.cast22
  %sub.ptr.div24 = sdiv exact i64 %sub.ptr.sub23, 8
  store i64 %sub.ptr.div24, i64* %markoff, align 8
  %31 = load %struct.sv**, %struct.sv*** %sp.addr, align 8
  %32 = load %struct.sv**, %struct.sv*** %mark.addr, align 8
  %call25 = call %struct.sv** @Perl_stack_grow(%struct.sv** %31, %struct.sv** %32, i64 1)
  store %struct.sv** %call25, %struct.sv*** %sp.addr, align 8
  %33 = load %struct.sv**, %struct.sv*** @PL_stack_base, align 8
  %34 = load i64, i64* %markoff, align 8
  %add.ptr = getelementptr inbounds %struct.sv*, %struct.sv** %33, i64 %34
  store %struct.sv** %add.ptr, %struct.sv*** %mark.addr, align 8
  %35 = load %struct.sv**, %struct.sv*** %sp.addr, align 8
  br label %if.end26

if.end26:                                         ; preds = %if.then20, %cond.false19, %cond.true18
  br label %do.end

do.end:                                           ; preds = %if.end26
  %36 = load %struct.sv**, %struct.sv*** %mark.addr, align 8
  %incdec.ptr27 = getelementptr inbounds %struct.sv*, %struct.sv** %36, i32 1
  store %struct.sv** %incdec.ptr27, %struct.sv*** %mark.addr, align 8
  store %struct.sv* @PL_sv_undef, %struct.sv** %incdec.ptr27, align 8
  %37 = load %struct.sv**, %struct.sv*** %mark.addr, align 8
  store %struct.sv** %37, %struct.sv*** %retval, align 8
  br label %return

if.end28:                                         ; preds = %cond.end15
  br label %if.end58

if.else29:                                        ; preds = %if.end
  %38 = load i32, i32* %gimme.addr, align 4
  %cmp30 = icmp eq i32 %38, 3
  br i1 %cmp30, label %if.then31, label %if.end57

if.then31:                                        ; preds = %if.else29
  br label %while.cond

while.cond:                                       ; preds = %if.end56, %if.then31
  %39 = load %struct.sv**, %struct.sv*** %mark.addr, align 8
  %incdec.ptr32 = getelementptr inbounds %struct.sv*, %struct.sv** %39, i32 1
  store %struct.sv** %incdec.ptr32, %struct.sv*** %mark.addr, align 8
  %40 = load %struct.sv**, %struct.sv*** %sp.addr, align 8
  %cmp33 = icmp ule %struct.sv** %incdec.ptr32, %40
  br i1 %cmp33, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %41 = load %struct.sv**, %struct.sv*** %mark.addr, align 8
  %42 = load %struct.sv*, %struct.sv** %41, align 8
  %sv_flags34 = getelementptr inbounds %struct.sv, %struct.sv* %42, i32 0, i32 2
  %43 = load i32, i32* %sv_flags34, align 4
  %44 = load i32, i32* %flags.addr, align 4
  %and35 = and i32 %43, %44
  %tobool36 = icmp ne i32 %and35, 0
  br i1 %tobool36, label %if.then43, label %lor.lhs.false37

lor.lhs.false37:                                  ; preds = %while.body
  %45 = load i8, i8* %padtmp, align 1
  %tobool38 = trunc i8 %45 to i1
  br i1 %tobool38, label %land.lhs.true39, label %if.else45

land.lhs.true39:                                  ; preds = %lor.lhs.false37
  %46 = load %struct.sv**, %struct.sv*** %mark.addr, align 8
  %47 = load %struct.sv*, %struct.sv** %46, align 8
  %sv_flags40 = getelementptr inbounds %struct.sv, %struct.sv* %47, i32 0, i32 2
  %48 = load i32, i32* %sv_flags40, align 4
  %and41 = and i32 %48, 131072
  %tobool42 = icmp ne i32 %and41, 0
  br i1 %tobool42, label %if.then43, label %if.else45

if.then43:                                        ; preds = %land.lhs.true39, %while.body
  %49 = load %struct.sv**, %struct.sv*** %mark.addr, align 8
  %50 = load %struct.sv*, %struct.sv** %49, align 8
  %51 = load %struct.sv**, %struct.sv*** %newsp.addr, align 8
  %incdec.ptr44 = getelementptr inbounds %struct.sv*, %struct.sv** %51, i32 1
  store %struct.sv** %incdec.ptr44, %struct.sv*** %newsp.addr, align 8
  store %struct.sv* %50, %struct.sv** %incdec.ptr44, align 8
  br label %if.end56

if.else45:                                        ; preds = %land.lhs.true39, %lor.lhs.false37
  %52 = load i8, i8* %lvalue.addr, align 1
  %tobool46 = trunc i8 %52 to i1
  br i1 %tobool46, label %cond.true47, label %cond.false51

cond.true47:                                      ; preds = %if.else45
  %53 = load %struct.sv**, %struct.sv*** %mark.addr, align 8
  %54 = load %struct.sv*, %struct.sv** %53, align 8
  %sv_refcnt48 = getelementptr inbounds %struct.sv, %struct.sv* %54, i32 0, i32 1
  %55 = load i32, i32* %sv_refcnt48, align 8
  %inc49 = add i32 %55, 1
  store i32 %inc49, i32* %sv_refcnt48, align 8
  %56 = load %struct.sv**, %struct.sv*** %mark.addr, align 8
  %57 = load %struct.sv*, %struct.sv** %56, align 8
  %58 = bitcast %struct.sv* %57 to i8*
  %59 = bitcast i8* %58 to %struct.sv*
  %call50 = call %struct.sv* @Perl_sv_2mortal(%struct.sv* %59)
  br label %cond.end53

cond.false51:                                     ; preds = %if.else45
  %60 = load %struct.sv**, %struct.sv*** %mark.addr, align 8
  %61 = load %struct.sv*, %struct.sv** %60, align 8
  %call52 = call %struct.sv* @Perl_sv_mortalcopy_flags(%struct.sv* %61, i32 1538)
  br label %cond.end53

cond.end53:                                       ; preds = %cond.false51, %cond.true47
  %cond54 = phi %struct.sv* [ %call50, %cond.true47 ], [ %call52, %cond.false51 ]
  %62 = load %struct.sv**, %struct.sv*** %newsp.addr, align 8
  %incdec.ptr55 = getelementptr inbounds %struct.sv*, %struct.sv** %62, i32 1
  store %struct.sv** %incdec.ptr55, %struct.sv*** %newsp.addr, align 8
  store %struct.sv* %cond54, %struct.sv** %incdec.ptr55, align 8
  store i8 0, i8* @PL_tainted, align 1
  br label %if.end56

if.end56:                                         ; preds = %cond.end53, %if.then43
  br label %while.cond

while.end:                                        ; preds = %while.cond
  br label %if.end57

if.end57:                                         ; preds = %while.end, %if.else29
  br label %if.end58

if.end58:                                         ; preds = %if.end57, %if.end28
  %63 = load %struct.sv**, %struct.sv*** %newsp.addr, align 8
  store %struct.sv** %63, %struct.sv*** %retval, align 8
  br label %return

return:                                           ; preds = %if.end58, %do.end
  %64 = load %struct.sv**, %struct.sv*** %retval, align 8
  ret %struct.sv** %64
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.op* @Perl_pp_enteriter() #0 {
entry:
  %retval = alloca %struct.op*, align 8
  %sp = alloca %struct.sv**, align 8
  %mark = alloca %struct.sv**, align 8
  %cx = alloca %struct.context*, align 8
  %gimme = alloca i32, align 4
  %itervar = alloca i8*, align 8
  %cxtype = alloca i8, align 1
  %gv = alloca %struct.gv*, align 8
  %svp = alloca %struct.sv**, align 8
  %sv = alloca %struct.sv*, align 8
  %maybe_ary = alloca %struct.sv*, align 8
  %sv107 = alloca %struct.sv*, align 8
  %right = alloca %struct.sv*, align 8
  %0 = load %struct.sv**, %struct.sv*** @PL_stack_sp, align 8
  store %struct.sv** %0, %struct.sv*** %sp, align 8
  %1 = load %struct.sv**, %struct.sv*** @PL_stack_base, align 8
  %2 = load i32*, i32** @PL_markstack_ptr, align 8
  %incdec.ptr = getelementptr inbounds i32, i32* %2, i32 -1
  store i32* %incdec.ptr, i32** @PL_markstack_ptr, align 8
  %3 = load i32, i32* %2, align 4
  %idx.ext = sext i32 %3 to i64
  %add.ptr = getelementptr inbounds %struct.sv*, %struct.sv** %1, i64 %idx.ext
  store %struct.sv** %add.ptr, %struct.sv*** %mark, align 8
  %4 = load %struct.op*, %struct.op** @PL_op, align 8
  %op_flags = getelementptr inbounds %struct.op, %struct.op* %4, i32 0, i32 5
  %5 = load i8, i8* %op_flags, align 2
  %conv = zext i8 %5 to i32
  %and = and i32 %conv, 3
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %6 = load %struct.op*, %struct.op** @PL_op, align 8
  %op_flags1 = getelementptr inbounds %struct.op, %struct.op* %6, i32 0, i32 5
  %7 = load i8, i8* %op_flags1, align 2
  %conv2 = zext i8 %7 to i32
  %and3 = and i32 %conv2, 3
  br label %cond.end

cond.false:                                       ; preds = %entry
  %call = call i32 @Perl_block_gimme()
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %and3, %cond.true ], [ %call, %cond.false ]
  store i32 %cond, i32* %gimme, align 4
  store i8 4, i8* %cxtype, align 1
  call void @Perl_push_scope()
  call void @Perl_save_strlen(i64* @PL_tmps_floor)
  %8 = load i64, i64* @PL_tmps_ix, align 8
  store i64 %8, i64* @PL_tmps_floor, align 8
  %9 = load %struct.op*, %struct.op** @PL_op, align 8
  %op_targ = getelementptr inbounds %struct.op, %struct.op* %9, i32 0, i32 3
  %10 = load i64, i64* %op_targ, align 8
  %tobool4 = icmp ne i64 %10, 0
  br i1 %tobool4, label %if.then, label %if.else

if.then:                                          ; preds = %cond.end
  %11 = load %struct.op*, %struct.op** @PL_op, align 8
  %op_private = getelementptr inbounds %struct.op, %struct.op* %11, i32 0, i32 6
  %12 = load i8, i8* %op_private, align 1
  %conv5 = zext i8 %12 to i32
  %and6 = and i32 %conv5, 128
  %tobool7 = icmp ne i32 %and6, 0
  br i1 %tobool7, label %if.then8, label %if.end

if.then8:                                         ; preds = %if.then
  %13 = load %struct.sv**, %struct.sv*** @PL_curpad, align 8
  %14 = load %struct.op*, %struct.op** @PL_op, align 8
  %op_targ9 = getelementptr inbounds %struct.op, %struct.op* %14, i32 0, i32 3
  %15 = load i64, i64* %op_targ9, align 8
  %arrayidx = getelementptr inbounds %struct.sv*, %struct.sv** %13, i64 %15
  %16 = load %struct.sv*, %struct.sv** %arrayidx, align 8
  %17 = bitcast %struct.sv* %16 to i8*
  %18 = bitcast i8* %17 to %struct.sv*
  %call10 = call i32 @S_SvPADSTALE_off(%struct.sv* %18)
  %19 = load %struct.sv**, %struct.sv*** @PL_curpad, align 8
  %20 = load %struct.op*, %struct.op** @PL_op, align 8
  %op_targ11 = getelementptr inbounds %struct.op, %struct.op* %20, i32 0, i32 3
  %21 = load i64, i64* %op_targ11, align 8
  %arrayidx12 = getelementptr inbounds %struct.sv*, %struct.sv** %19, i64 %21
  %22 = load %struct.sv*, %struct.sv** %arrayidx12, align 8
  call void @Perl_save_set_svflags(%struct.sv* %22, i32 262144, i32 262144)
  br label %if.end

if.end:                                           ; preds = %if.then8, %if.then
  %23 = load %struct.op*, %struct.op** @PL_op, align 8
  %op_targ13 = getelementptr inbounds %struct.op, %struct.op* %23, i32 0, i32 3
  %24 = load i64, i64* %op_targ13, align 8
  call void @Perl_save_padsv_and_mortalize(i64 %24)
  %25 = load %struct.sv**, %struct.sv*** @PL_curpad, align 8
  %26 = load %struct.op*, %struct.op** @PL_op, align 8
  %op_targ14 = getelementptr inbounds %struct.op, %struct.op* %26, i32 0, i32 3
  %27 = load i64, i64* %op_targ14, align 8
  %arrayidx15 = getelementptr inbounds %struct.sv*, %struct.sv** %25, i64 %27
  %28 = bitcast %struct.sv** %arrayidx15 to i8*
  store i8* %28, i8** %itervar, align 8
  br label %if.end30

if.else:                                          ; preds = %cond.end
  %29 = load %struct.sv**, %struct.sv*** %sp, align 8
  %30 = load %struct.sv*, %struct.sv** %29, align 8
  %sv_flags = getelementptr inbounds %struct.sv, %struct.sv* %30, i32 0, i32 2
  %31 = load i32, i32* %sv_flags, align 4
  %and16 = and i32 %31, 255
  %cmp = icmp eq i32 %and16, 9
  br i1 %cmp, label %cond.true18, label %cond.false19

cond.true18:                                      ; preds = %if.else
  br i1 true, label %if.then20, label %if.else25

cond.false19:                                     ; preds = %if.else
  br i1 false, label %if.then20, label %if.else25

if.then20:                                        ; preds = %cond.false19, %cond.true18
  %32 = load %struct.sv**, %struct.sv*** %sp, align 8
  %incdec.ptr21 = getelementptr inbounds %struct.sv*, %struct.sv** %32, i32 -1
  store %struct.sv** %incdec.ptr21, %struct.sv*** %sp, align 8
  %33 = load %struct.sv*, %struct.sv** %32, align 8
  %34 = bitcast %struct.sv* %33 to i8*
  %35 = bitcast i8* %34 to %struct.gv*
  store %struct.gv* %35, %struct.gv** %gv, align 8
  %36 = load %struct.gv*, %struct.gv** %gv, align 8
  %sv_u = getelementptr inbounds %struct.gv, %struct.gv* %36, i32 0, i32 3
  %svu_gp = bitcast %union.anon.4* %sv_u to %struct.gp**
  %37 = load %struct.gp*, %struct.gp** %svu_gp, align 8
  %add.ptr22 = getelementptr inbounds %struct.gp, %struct.gp* %37, i64 0
  %gp_sv = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr22, i32 0, i32 0
  store %struct.sv** %gp_sv, %struct.sv*** %svp, align 8
  %38 = load %struct.gv*, %struct.gv** %gv, align 8
  %39 = bitcast %struct.gv* %38 to i8*
  %40 = load %struct.sv**, %struct.sv*** %svp, align 8
  %41 = load %struct.sv*, %struct.sv** %40, align 8
  %42 = bitcast %struct.sv* %41 to i8*
  %43 = bitcast i8* %42 to %struct.sv*
  %call23 = call %struct.sv* @S_SvREFCNT_inc(%struct.sv* %43)
  %44 = bitcast %struct.sv* %call23 to i8*
  call void @Perl_save_pushptrptr(i8* %39, i8* %44, i32 29)
  %call24 = call %struct.sv* @Perl_newSV(i64 0)
  %45 = load %struct.sv**, %struct.sv*** %svp, align 8
  store %struct.sv* %call24, %struct.sv** %45, align 8
  %46 = load %struct.gv*, %struct.gv** %gv, align 8
  %47 = bitcast %struct.gv* %46 to i8*
  store i8* %47, i8** %itervar, align 8
  %48 = load %struct.gv*, %struct.gv** %gv, align 8
  call void @Perl_save_aliased_sv(%struct.gv* %48)
  br label %if.end29

if.else25:                                        ; preds = %cond.false19, %cond.true18
  %49 = load %struct.sv**, %struct.sv*** %sp, align 8
  %incdec.ptr26 = getelementptr inbounds %struct.sv*, %struct.sv** %49, i32 -1
  store %struct.sv** %incdec.ptr26, %struct.sv*** %sp, align 8
  %50 = load %struct.sv*, %struct.sv** %49, align 8
  store %struct.sv* %50, %struct.sv** %sv, align 8
  %51 = load %struct.sv*, %struct.sv** %sv, align 8
  %52 = bitcast %struct.sv* %51 to i8*
  store i8* %52, i8** %itervar, align 8
  %53 = load i8, i8* %cxtype, align 1
  %conv27 = zext i8 %53 to i32
  %or = or i32 %conv27, 32
  %conv28 = trunc i32 %or to i8
  store i8 %conv28, i8* %cxtype, align 1
  br label %if.end29

if.end29:                                         ; preds = %if.else25, %if.then20
  br label %if.end30

if.end30:                                         ; preds = %if.end29, %if.end
  %54 = load %struct.op*, %struct.op** @PL_op, align 8
  %op_private31 = getelementptr inbounds %struct.op, %struct.op* %54, i32 0, i32 6
  %55 = load i8, i8* %op_private31, align 1
  %conv32 = zext i8 %55 to i32
  %and33 = and i32 %conv32, 8
  %tobool34 = icmp ne i32 %and33, 0
  br i1 %tobool34, label %if.then35, label %if.end39

if.then35:                                        ; preds = %if.end30
  %56 = load i8, i8* %cxtype, align 1
  %conv36 = zext i8 %56 to i32
  %or37 = or i32 %conv36, 16
  %conv38 = trunc i32 %or37 to i8
  store i8 %conv38, i8* %cxtype, align 1
  br label %if.end39

if.end39:                                         ; preds = %if.then35, %if.end30
  call void @Perl_push_scope()
  %57 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %si_cxix = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %57, i32 0, i32 4
  %58 = load i32, i32* %si_cxix, align 8
  %59 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %si_cxmax = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %59, i32 0, i32 5
  %60 = load i32, i32* %si_cxmax, align 4
  %cmp40 = icmp slt i32 %58, %60
  br i1 %cmp40, label %cond.true42, label %cond.false44

cond.true42:                                      ; preds = %if.end39
  %61 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %si_cxix43 = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %61, i32 0, i32 4
  %62 = load i32, i32* %si_cxix43, align 8
  %inc = add nsw i32 %62, 1
  store i32 %inc, i32* %si_cxix43, align 8
  br label %cond.end47

cond.false44:                                     ; preds = %if.end39
  %call45 = call i32 @Perl_cxinc()
  %63 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %si_cxix46 = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %63, i32 0, i32 4
  store i32 %call45, i32* %si_cxix46, align 8
  br label %cond.end47

cond.end47:                                       ; preds = %cond.false44, %cond.true42
  %cond48 = phi i32 [ %inc, %cond.true42 ], [ %call45, %cond.false44 ]
  %64 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %si_cxstack = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %64, i32 0, i32 1
  %65 = load %struct.context*, %struct.context** %si_cxstack, align 8
  %66 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %si_cxix49 = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %66, i32 0, i32 4
  %67 = load i32, i32* %si_cxix49, align 8
  %idxprom = sext i32 %67 to i64
  %arrayidx50 = getelementptr inbounds %struct.context, %struct.context* %65, i64 %idxprom
  store %struct.context* %arrayidx50, %struct.context** %cx, align 8
  %68 = load i8, i8* %cxtype, align 1
  %69 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u = getelementptr inbounds %struct.context, %struct.context* %69, i32 0, i32 0
  %cx_subst = bitcast %union.anon.16* %cx_u to %struct.subst*
  %sbu_type = getelementptr inbounds %struct.subst, %struct.subst* %cx_subst, i32 0, i32 0
  store i8 %68, i8* %sbu_type, align 8
  %70 = load %struct.sv**, %struct.sv*** %sp, align 8
  %71 = load %struct.sv**, %struct.sv*** @PL_stack_base, align 8
  %sub.ptr.lhs.cast = ptrtoint %struct.sv** %70 to i64
  %sub.ptr.rhs.cast = ptrtoint %struct.sv** %71 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 8
  %conv51 = trunc i64 %sub.ptr.div to i32
  %72 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u52 = getelementptr inbounds %struct.context, %struct.context* %72, i32 0, i32 0
  %cx_blk = bitcast %union.anon.16* %cx_u52 to %struct.block*
  %blku_oldsp = getelementptr inbounds %struct.block, %struct.block* %cx_blk, i32 0, i32 3
  store i32 %conv51, i32* %blku_oldsp, align 4
  %73 = load %struct.cop*, %struct.cop** @PL_curcop, align 8
  %74 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u53 = getelementptr inbounds %struct.context, %struct.context* %74, i32 0, i32 0
  %cx_blk54 = bitcast %union.anon.16* %cx_u53 to %struct.block*
  %blku_oldcop = getelementptr inbounds %struct.block, %struct.block* %cx_blk54, i32 0, i32 4
  store %struct.cop* %73, %struct.cop** %blku_oldcop, align 8
  %75 = load i32*, i32** @PL_markstack_ptr, align 8
  %76 = load i32*, i32** @PL_markstack, align 8
  %sub.ptr.lhs.cast55 = ptrtoint i32* %75 to i64
  %sub.ptr.rhs.cast56 = ptrtoint i32* %76 to i64
  %sub.ptr.sub57 = sub i64 %sub.ptr.lhs.cast55, %sub.ptr.rhs.cast56
  %sub.ptr.div58 = sdiv exact i64 %sub.ptr.sub57, 4
  %conv59 = trunc i64 %sub.ptr.div58 to i32
  %77 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u60 = getelementptr inbounds %struct.context, %struct.context* %77, i32 0, i32 0
  %cx_blk61 = bitcast %union.anon.16* %cx_u60 to %struct.block*
  %blku_oldmarksp = getelementptr inbounds %struct.block, %struct.block* %cx_blk61, i32 0, i32 5
  store i32 %conv59, i32* %blku_oldmarksp, align 8
  %78 = load i32, i32* @PL_scopestack_ix, align 4
  %79 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u62 = getelementptr inbounds %struct.context, %struct.context* %79, i32 0, i32 0
  %cx_blk63 = bitcast %union.anon.16* %cx_u62 to %struct.block*
  %blku_oldscopesp = getelementptr inbounds %struct.block, %struct.block* %cx_blk63, i32 0, i32 6
  store i32 %78, i32* %blku_oldscopesp, align 4
  %80 = load %struct.pmop*, %struct.pmop** @PL_curpm, align 8
  %81 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u64 = getelementptr inbounds %struct.context, %struct.context* %81, i32 0, i32 0
  %cx_blk65 = bitcast %union.anon.16* %cx_u64 to %struct.block*
  %blku_oldpm = getelementptr inbounds %struct.block, %struct.block* %cx_blk65, i32 0, i32 7
  store %struct.pmop* %80, %struct.pmop** %blku_oldpm, align 8
  %82 = load i32, i32* %gimme, align 4
  %conv66 = trunc i32 %82 to i8
  %83 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u67 = getelementptr inbounds %struct.context, %struct.context* %83, i32 0, i32 0
  %cx_blk68 = bitcast %union.anon.16* %cx_u67 to %struct.block*
  %blku_gimme = getelementptr inbounds %struct.block, %struct.block* %cx_blk68, i32 0, i32 1
  store i8 %conv66, i8* %blku_gimme, align 1
  %84 = load %struct.sv**, %struct.sv*** %mark, align 8
  %85 = load %struct.sv**, %struct.sv*** @PL_stack_base, align 8
  %sub.ptr.lhs.cast69 = ptrtoint %struct.sv** %84 to i64
  %sub.ptr.rhs.cast70 = ptrtoint %struct.sv** %85 to i64
  %sub.ptr.sub71 = sub i64 %sub.ptr.lhs.cast69, %sub.ptr.rhs.cast70
  %sub.ptr.div72 = sdiv exact i64 %sub.ptr.sub71, 8
  %conv73 = trunc i64 %sub.ptr.div72 to i32
  %86 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u74 = getelementptr inbounds %struct.context, %struct.context* %86, i32 0, i32 0
  %cx_blk75 = bitcast %union.anon.16* %cx_u74 to %struct.block*
  %blk_u = getelementptr inbounds %struct.block, %struct.block* %cx_blk75, i32 0, i32 8
  %blku_loop = bitcast %union.anon.20* %blk_u to %struct.block_loop*
  %resetsp = getelementptr inbounds %struct.block_loop, %struct.block_loop* %blku_loop, i32 0, i32 0
  store i32 %conv73, i32* %resetsp, align 8
  %87 = load %struct.op*, %struct.op** @PL_op, align 8
  %88 = bitcast %struct.op* %87 to %struct.loop*
  %89 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u76 = getelementptr inbounds %struct.context, %struct.context* %89, i32 0, i32 0
  %cx_blk77 = bitcast %union.anon.16* %cx_u76 to %struct.block*
  %blk_u78 = getelementptr inbounds %struct.block, %struct.block* %cx_blk77, i32 0, i32 8
  %blku_loop79 = bitcast %union.anon.20* %blk_u78 to %struct.block_loop*
  %my_op = getelementptr inbounds %struct.block_loop, %struct.block_loop* %blku_loop79, i32 0, i32 1
  store %struct.loop* %88, %struct.loop** %my_op, align 8
  %90 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u80 = getelementptr inbounds %struct.context, %struct.context* %90, i32 0, i32 0
  %cx_blk81 = bitcast %union.anon.16* %cx_u80 to %struct.block*
  %blk_u82 = getelementptr inbounds %struct.block, %struct.block* %cx_blk81, i32 0, i32 8
  %blku_loop83 = bitcast %union.anon.20* %blk_u82 to %struct.block_loop*
  %state_u = getelementptr inbounds %struct.block_loop, %struct.block_loop* %blku_loop83, i32 0, i32 3
  %ary = bitcast %union.anon.22* %state_u to %struct.anon.23*
  %ary84 = getelementptr inbounds %struct.anon.23, %struct.anon.23* %ary, i32 0, i32 0
  store %struct.av* null, %struct.av** %ary84, align 8
  %91 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u85 = getelementptr inbounds %struct.context, %struct.context* %91, i32 0, i32 0
  %cx_blk86 = bitcast %union.anon.16* %cx_u85 to %struct.block*
  %blk_u87 = getelementptr inbounds %struct.block, %struct.block* %cx_blk86, i32 0, i32 8
  %blku_loop88 = bitcast %union.anon.20* %blk_u87 to %struct.block_loop*
  %state_u89 = getelementptr inbounds %struct.block_loop, %struct.block_loop* %blku_loop88, i32 0, i32 3
  %ary90 = bitcast %union.anon.22* %state_u89 to %struct.anon.23*
  %ix = getelementptr inbounds %struct.anon.23, %struct.anon.23* %ary90, i32 0, i32 1
  store i64 0, i64* %ix, align 8
  %92 = load i8*, i8** %itervar, align 8
  %93 = bitcast i8* %92 to %struct.sv**
  %94 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u91 = getelementptr inbounds %struct.context, %struct.context* %94, i32 0, i32 0
  %cx_blk92 = bitcast %union.anon.16* %cx_u91 to %struct.block*
  %blk_u93 = getelementptr inbounds %struct.block, %struct.block* %cx_blk92, i32 0, i32 8
  %blku_loop94 = bitcast %union.anon.20* %blk_u93 to %struct.block_loop*
  %itervar_u = getelementptr inbounds %struct.block_loop, %struct.block_loop* %blku_loop94, i32 0, i32 2
  %svp95 = bitcast %union.anon.21* %itervar_u to %struct.sv***
  store %struct.sv** %93, %struct.sv*** %svp95, align 8
  %95 = load %struct.op*, %struct.op** @PL_op, align 8
  %op_flags96 = getelementptr inbounds %struct.op, %struct.op* %95, i32 0, i32 5
  %96 = load i8, i8* %op_flags96, align 2
  %conv97 = zext i8 %96 to i32
  %and98 = and i32 %conv97, 64
  %tobool99 = icmp ne i32 %and98, 0
  br i1 %tobool99, label %if.then100, label %if.else449

if.then100:                                       ; preds = %cond.end47
  %97 = load %struct.sv**, %struct.sv*** %sp, align 8
  %incdec.ptr101 = getelementptr inbounds %struct.sv*, %struct.sv** %97, i32 -1
  store %struct.sv** %incdec.ptr101, %struct.sv*** %sp, align 8
  %98 = load %struct.sv*, %struct.sv** %97, align 8
  store %struct.sv* %98, %struct.sv** %maybe_ary, align 8
  %99 = load %struct.sv*, %struct.sv** %maybe_ary, align 8
  %sv_flags102 = getelementptr inbounds %struct.sv, %struct.sv* %99, i32 0, i32 2
  %100 = load i32, i32* %sv_flags102, align 4
  %and103 = and i32 %100, 255
  %cmp104 = icmp ne i32 %and103, 11
  br i1 %cmp104, label %if.then106, label %if.else393

if.then106:                                       ; preds = %if.then100
  %101 = load %struct.sv**, %struct.sv*** %sp, align 8
  %incdec.ptr108 = getelementptr inbounds %struct.sv*, %struct.sv** %101, i32 -1
  store %struct.sv** %incdec.ptr108, %struct.sv*** %sp, align 8
  %102 = load %struct.sv*, %struct.sv** %101, align 8
  store %struct.sv* %102, %struct.sv** %sv107, align 8
  %103 = load %struct.sv*, %struct.sv** %maybe_ary, align 8
  store %struct.sv* %103, %struct.sv** %right, align 8
  %104 = load i8, i8* %cxtype, align 1
  %conv109 = zext i8 %104 to i32
  %and110 = and i32 %conv109, 32
  %tobool111 = icmp ne i32 %and110, 0
  br i1 %tobool111, label %cond.true112, label %cond.false113

cond.true112:                                     ; preds = %if.then106
  br i1 true, label %if.then114, label %if.end116

cond.false113:                                    ; preds = %if.then106
  br i1 false, label %if.then114, label %if.end116

if.then114:                                       ; preds = %cond.false113, %cond.true112
  %call115 = call %struct.op* (i8*, ...) @Perl_die(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.26, i64 0, i64 0))
  store %struct.op* %call115, %struct.op** %retval, align 8
  br label %return

if.end116:                                        ; preds = %cond.false113, %cond.true112
  %105 = load %struct.sv*, %struct.sv** %sv107, align 8
  %sv_flags117 = getelementptr inbounds %struct.sv, %struct.sv* %105, i32 0, i32 2
  %106 = load i32, i32* %sv_flags117, align 4
  %and118 = and i32 %106, 2097152
  %tobool119 = icmp ne i32 %and118, 0
  br i1 %tobool119, label %cond.true120, label %cond.false121

cond.true120:                                     ; preds = %if.end116
  br i1 true, label %land.rhs, label %land.end

cond.false121:                                    ; preds = %if.end116
  br i1 false, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %cond.false121, %cond.true120
  %107 = load %struct.sv*, %struct.sv** %sv107, align 8
  %call122 = call i32 @Perl_mg_get(%struct.sv* %107)
  %tobool123 = icmp ne i32 %call122, 0
  br label %land.end

land.end:                                         ; preds = %land.rhs, %cond.false121, %cond.true120
  %108 = phi i1 [ false, %cond.false121 ], [ false, %cond.true120 ], [ %tobool123, %land.rhs ]
  %land.ext = zext i1 %108 to i32
  %109 = load %struct.sv*, %struct.sv** %right, align 8
  %sv_flags124 = getelementptr inbounds %struct.sv, %struct.sv* %109, i32 0, i32 2
  %110 = load i32, i32* %sv_flags124, align 4
  %and125 = and i32 %110, 2097152
  %tobool126 = icmp ne i32 %and125, 0
  br i1 %tobool126, label %cond.true127, label %cond.false128

cond.true127:                                     ; preds = %land.end
  br i1 true, label %land.rhs129, label %land.end132

cond.false128:                                    ; preds = %land.end
  br i1 false, label %land.rhs129, label %land.end132

land.rhs129:                                      ; preds = %cond.false128, %cond.true127
  %111 = load %struct.sv*, %struct.sv** %right, align 8
  %call130 = call i32 @Perl_mg_get(%struct.sv* %111)
  %tobool131 = icmp ne i32 %call130, 0
  br label %land.end132

land.end132:                                      ; preds = %land.rhs129, %cond.false128, %cond.true127
  %112 = phi i1 [ false, %cond.false128 ], [ false, %cond.true127 ], [ %tobool131, %land.rhs129 ]
  %land.ext133 = zext i1 %112 to i32
  %113 = load %struct.sv*, %struct.sv** %sv107, align 8
  %sv_flags134 = getelementptr inbounds %struct.sv, %struct.sv* %113, i32 0, i32 2
  %114 = load i32, i32* %sv_flags134, align 4
  %and135 = and i32 %114, 12288
  %tobool136 = icmp ne i32 %and135, 0
  br i1 %tobool136, label %if.then247, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.end132
  %115 = load %struct.sv*, %struct.sv** %sv107, align 8
  %sv_flags137 = getelementptr inbounds %struct.sv, %struct.sv* %115, i32 0, i32 2
  %116 = load i32, i32* %sv_flags137, align 4
  %and138 = and i32 %116, 65280
  %tobool139 = icmp ne i32 %and138, 0
  br i1 %tobool139, label %land.lhs.true, label %lor.lhs.false140

lor.lhs.false140:                                 ; preds = %lor.lhs.false
  %117 = load %struct.sv*, %struct.sv** %sv107, align 8
  %sv_flags141 = getelementptr inbounds %struct.sv, %struct.sv* %117, i32 0, i32 2
  %118 = load i32, i32* %sv_flags141, align 4
  %and142 = and i32 %118, 255
  %cmp143 = icmp eq i32 %and142, 8
  br i1 %cmp143, label %land.lhs.true, label %lor.lhs.false145

lor.lhs.false145:                                 ; preds = %lor.lhs.false140
  %119 = load %struct.sv*, %struct.sv** %sv107, align 8
  %sv_flags146 = getelementptr inbounds %struct.sv, %struct.sv* %119, i32 0, i32 2
  %120 = load i32, i32* %sv_flags146, align 4
  %and147 = and i32 %120, 16826623
  %cmp148 = icmp eq i32 %and147, 16777226
  br i1 %cmp148, label %land.lhs.true, label %lor.lhs.false153

land.lhs.true:                                    ; preds = %lor.lhs.false145, %lor.lhs.false140, %lor.lhs.false
  %121 = load %struct.sv*, %struct.sv** %sv107, align 8
  %sv_flags150 = getelementptr inbounds %struct.sv, %struct.sv* %121, i32 0, i32 2
  %122 = load i32, i32* %sv_flags150, align 4
  %and151 = and i32 %122, 16384
  %tobool152 = icmp ne i32 %and151, 0
  br i1 %tobool152, label %lor.lhs.false153, label %if.then247

lor.lhs.false153:                                 ; preds = %land.lhs.true, %lor.lhs.false145
  %123 = load %struct.sv*, %struct.sv** %right, align 8
  %sv_flags154 = getelementptr inbounds %struct.sv, %struct.sv* %123, i32 0, i32 2
  %124 = load i32, i32* %sv_flags154, align 4
  %and155 = and i32 %124, 12288
  %tobool156 = icmp ne i32 %and155, 0
  br i1 %tobool156, label %if.then247, label %lor.lhs.false157

lor.lhs.false157:                                 ; preds = %lor.lhs.false153
  %125 = load %struct.sv*, %struct.sv** %right, align 8
  %sv_flags158 = getelementptr inbounds %struct.sv, %struct.sv* %125, i32 0, i32 2
  %126 = load i32, i32* %sv_flags158, align 4
  %and159 = and i32 %126, 65280
  %tobool160 = icmp ne i32 %and159, 0
  br i1 %tobool160, label %land.lhs.true171, label %lor.lhs.false161

lor.lhs.false161:                                 ; preds = %lor.lhs.false157
  %127 = load %struct.sv*, %struct.sv** %right, align 8
  %sv_flags162 = getelementptr inbounds %struct.sv, %struct.sv* %127, i32 0, i32 2
  %128 = load i32, i32* %sv_flags162, align 4
  %and163 = and i32 %128, 255
  %cmp164 = icmp eq i32 %and163, 8
  br i1 %cmp164, label %land.lhs.true171, label %lor.lhs.false166

lor.lhs.false166:                                 ; preds = %lor.lhs.false161
  %129 = load %struct.sv*, %struct.sv** %right, align 8
  %sv_flags167 = getelementptr inbounds %struct.sv, %struct.sv* %129, i32 0, i32 2
  %130 = load i32, i32* %sv_flags167, align 4
  %and168 = and i32 %130, 16826623
  %cmp169 = icmp eq i32 %and168, 16777226
  br i1 %cmp169, label %land.lhs.true171, label %lor.lhs.false175

land.lhs.true171:                                 ; preds = %lor.lhs.false166, %lor.lhs.false161, %lor.lhs.false157
  %131 = load %struct.sv*, %struct.sv** %right, align 8
  %sv_flags172 = getelementptr inbounds %struct.sv, %struct.sv* %131, i32 0, i32 2
  %132 = load i32, i32* %sv_flags172, align 4
  %and173 = and i32 %132, 16384
  %tobool174 = icmp ne i32 %and173, 0
  br i1 %tobool174, label %lor.lhs.false175, label %if.then247

lor.lhs.false175:                                 ; preds = %land.lhs.true171, %lor.lhs.false166
  %133 = load %struct.sv*, %struct.sv** %sv107, align 8
  %sv_flags176 = getelementptr inbounds %struct.sv, %struct.sv* %133, i32 0, i32 2
  %134 = load i32, i32* %sv_flags176, align 4
  %and177 = and i32 %134, 65280
  %tobool178 = icmp ne i32 %and177, 0
  br i1 %tobool178, label %lor.lhs.false203, label %lor.lhs.false179

lor.lhs.false179:                                 ; preds = %lor.lhs.false175
  %135 = load %struct.sv*, %struct.sv** %sv107, align 8
  %sv_flags180 = getelementptr inbounds %struct.sv, %struct.sv* %135, i32 0, i32 2
  %136 = load i32, i32* %sv_flags180, align 4
  %and181 = and i32 %136, 255
  %cmp182 = icmp eq i32 %and181, 8
  br i1 %cmp182, label %lor.lhs.false203, label %lor.lhs.false184

lor.lhs.false184:                                 ; preds = %lor.lhs.false179
  %137 = load %struct.sv*, %struct.sv** %sv107, align 8
  %sv_flags185 = getelementptr inbounds %struct.sv, %struct.sv* %137, i32 0, i32 2
  %138 = load i32, i32* %sv_flags185, align 4
  %and186 = and i32 %138, 16826623
  %cmp187 = icmp eq i32 %and186, 16777226
  br i1 %cmp187, label %lor.lhs.false203, label %land.lhs.true189

land.lhs.true189:                                 ; preds = %lor.lhs.false184
  %139 = load %struct.sv*, %struct.sv** %right, align 8
  %sv_flags190 = getelementptr inbounds %struct.sv, %struct.sv* %139, i32 0, i32 2
  %140 = load i32, i32* %sv_flags190, align 4
  %and191 = and i32 %140, 65280
  %tobool192 = icmp ne i32 %and191, 0
  br i1 %tobool192, label %land.lhs.true230, label %lor.lhs.false193

lor.lhs.false193:                                 ; preds = %land.lhs.true189
  %141 = load %struct.sv*, %struct.sv** %right, align 8
  %sv_flags194 = getelementptr inbounds %struct.sv, %struct.sv* %141, i32 0, i32 2
  %142 = load i32, i32* %sv_flags194, align 4
  %and195 = and i32 %142, 255
  %cmp196 = icmp eq i32 %and195, 8
  br i1 %cmp196, label %land.lhs.true230, label %lor.lhs.false198

lor.lhs.false198:                                 ; preds = %lor.lhs.false193
  %143 = load %struct.sv*, %struct.sv** %right, align 8
  %sv_flags199 = getelementptr inbounds %struct.sv, %struct.sv* %143, i32 0, i32 2
  %144 = load i32, i32* %sv_flags199, align 4
  %and200 = and i32 %144, 16826623
  %cmp201 = icmp eq i32 %and200, 16777226
  br i1 %cmp201, label %land.lhs.true230, label %lor.lhs.false203

lor.lhs.false203:                                 ; preds = %lor.lhs.false198, %lor.lhs.false184, %lor.lhs.false179, %lor.lhs.false175
  %145 = load %struct.sv*, %struct.sv** %sv107, align 8
  %sv_flags204 = getelementptr inbounds %struct.sv, %struct.sv* %145, i32 0, i32 2
  %146 = load i32, i32* %sv_flags204, align 4
  %and205 = and i32 %146, 65280
  %tobool206 = icmp ne i32 %and205, 0
  br i1 %tobool206, label %lor.lhs.false217, label %lor.lhs.false207

lor.lhs.false207:                                 ; preds = %lor.lhs.false203
  %147 = load %struct.sv*, %struct.sv** %sv107, align 8
  %sv_flags208 = getelementptr inbounds %struct.sv, %struct.sv* %147, i32 0, i32 2
  %148 = load i32, i32* %sv_flags208, align 4
  %and209 = and i32 %148, 255
  %cmp210 = icmp eq i32 %and209, 8
  br i1 %cmp210, label %lor.lhs.false217, label %lor.lhs.false212

lor.lhs.false212:                                 ; preds = %lor.lhs.false207
  %149 = load %struct.sv*, %struct.sv** %sv107, align 8
  %sv_flags213 = getelementptr inbounds %struct.sv, %struct.sv* %149, i32 0, i32 2
  %150 = load i32, i32* %sv_flags213, align 4
  %and214 = and i32 %150, 16826623
  %cmp215 = icmp eq i32 %and214, 16777226
  br i1 %cmp215, label %lor.lhs.false217, label %land.lhs.true220

lor.lhs.false217:                                 ; preds = %lor.lhs.false212, %lor.lhs.false207, %lor.lhs.false203
  %151 = load %struct.sv*, %struct.sv** %sv107, align 8
  %call218 = call i32 @Perl_looks_like_number(%struct.sv* %151)
  %tobool219 = icmp ne i32 %call218, 0
  br i1 %tobool219, label %land.lhs.true220, label %if.else298

land.lhs.true220:                                 ; preds = %lor.lhs.false217, %lor.lhs.false212
  %152 = load %struct.sv*, %struct.sv** %sv107, align 8
  %sv_flags221 = getelementptr inbounds %struct.sv, %struct.sv* %152, i32 0, i32 2
  %153 = load i32, i32* %sv_flags221, align 4
  %and222 = and i32 %153, 16384
  %tobool223 = icmp ne i32 %and222, 0
  br i1 %tobool223, label %land.lhs.true224, label %if.else298

land.lhs.true224:                                 ; preds = %land.lhs.true220
  %154 = load %struct.sv*, %struct.sv** %sv107, align 8
  %sv_u225 = getelementptr inbounds %struct.sv, %struct.sv* %154, i32 0, i32 3
  %svu_pv = bitcast %union.anon* %sv_u225 to i8**
  %155 = load i8*, i8** %svu_pv, align 8
  %add.ptr226 = getelementptr inbounds i8, i8* %155, i64 0
  %156 = load i8, i8* %add.ptr226, align 1
  %conv227 = sext i8 %156 to i32
  %cmp228 = icmp ne i32 %conv227, 48
  br i1 %cmp228, label %land.lhs.true230, label %if.else298

land.lhs.true230:                                 ; preds = %land.lhs.true224, %lor.lhs.false198, %lor.lhs.false193, %land.lhs.true189
  %157 = load %struct.sv*, %struct.sv** %right, align 8
  %sv_flags231 = getelementptr inbounds %struct.sv, %struct.sv* %157, i32 0, i32 2
  %158 = load i32, i32* %sv_flags231, align 4
  %and232 = and i32 %158, 65280
  %tobool233 = icmp ne i32 %and232, 0
  br i1 %tobool233, label %lor.lhs.false244, label %lor.lhs.false234

lor.lhs.false234:                                 ; preds = %land.lhs.true230
  %159 = load %struct.sv*, %struct.sv** %right, align 8
  %sv_flags235 = getelementptr inbounds %struct.sv, %struct.sv* %159, i32 0, i32 2
  %160 = load i32, i32* %sv_flags235, align 4
  %and236 = and i32 %160, 255
  %cmp237 = icmp eq i32 %and236, 8
  br i1 %cmp237, label %lor.lhs.false244, label %lor.lhs.false239

lor.lhs.false239:                                 ; preds = %lor.lhs.false234
  %161 = load %struct.sv*, %struct.sv** %right, align 8
  %sv_flags240 = getelementptr inbounds %struct.sv, %struct.sv* %161, i32 0, i32 2
  %162 = load i32, i32* %sv_flags240, align 4
  %and241 = and i32 %162, 16826623
  %cmp242 = icmp eq i32 %and241, 16777226
  br i1 %cmp242, label %lor.lhs.false244, label %if.then247

lor.lhs.false244:                                 ; preds = %lor.lhs.false239, %lor.lhs.false234, %land.lhs.true230
  %163 = load %struct.sv*, %struct.sv** %right, align 8
  %call245 = call i32 @Perl_looks_like_number(%struct.sv* %163)
  %tobool246 = icmp ne i32 %call245, 0
  br i1 %tobool246, label %if.then247, label %if.else298

if.then247:                                       ; preds = %lor.lhs.false244, %lor.lhs.false239, %land.lhs.true171, %lor.lhs.false153, %land.lhs.true, %land.end132
  %164 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u248 = getelementptr inbounds %struct.context, %struct.context* %164, i32 0, i32 0
  %cx_subst249 = bitcast %union.anon.16* %cx_u248 to %struct.subst*
  %sbu_type250 = getelementptr inbounds %struct.subst, %struct.subst* %cx_subst249, i32 0, i32 0
  %165 = load i8, i8* %sbu_type250, align 8
  %conv251 = zext i8 %165 to i32
  %and252 = and i32 %conv251, -16
  %conv253 = trunc i32 %and252 to i8
  store i8 %conv253, i8* %sbu_type250, align 8
  %166 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u254 = getelementptr inbounds %struct.context, %struct.context* %166, i32 0, i32 0
  %cx_subst255 = bitcast %union.anon.16* %cx_u254 to %struct.subst*
  %sbu_type256 = getelementptr inbounds %struct.subst, %struct.subst* %cx_subst255, i32 0, i32 0
  %167 = load i8, i8* %sbu_type256, align 8
  %conv257 = zext i8 %167 to i32
  %or258 = or i32 %conv257, 7
  %conv259 = trunc i32 %or258 to i8
  store i8 %conv259, i8* %sbu_type256, align 8
  %168 = load %struct.sv*, %struct.sv** %sv107, align 8
  %call260 = call zeroext i1 @S_outside_integer(%struct.sv* %168)
  br i1 %call260, label %if.then265, label %lor.lhs.false262

lor.lhs.false262:                                 ; preds = %if.then247
  %169 = load %struct.sv*, %struct.sv** %right, align 8
  %call263 = call zeroext i1 @S_outside_integer(%struct.sv* %169)
  br i1 %call263, label %if.then265, label %if.end267

if.then265:                                       ; preds = %lor.lhs.false262, %if.then247
  %call266 = call %struct.op* (i8*, ...) @Perl_die(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.9, i64 0, i64 0))
  store %struct.op* %call266, %struct.op** %retval, align 8
  br label %return

if.end267:                                        ; preds = %lor.lhs.false262
  %170 = load %struct.sv*, %struct.sv** %sv107, align 8
  %sv_flags268 = getelementptr inbounds %struct.sv, %struct.sv* %170, i32 0, i32 2
  %171 = load i32, i32* %sv_flags268, align 4
  %and269 = and i32 %171, 256
  %tobool270 = icmp ne i32 %and269, 0
  br i1 %tobool270, label %cond.true271, label %cond.false272

cond.true271:                                     ; preds = %if.end267
  %172 = load %struct.sv*, %struct.sv** %sv107, align 8
  %sv_any = getelementptr inbounds %struct.sv, %struct.sv* %172, i32 0, i32 0
  %173 = load i8*, i8** %sv_any, align 8
  %174 = bitcast i8* %173 to %struct.xpviv*
  %xiv_u = getelementptr inbounds %struct.xpviv, %struct.xpviv* %174, i32 0, i32 4
  %xivu_iv = bitcast %union._xivu* %xiv_u to i64*
  %175 = load i64, i64* %xivu_iv, align 8
  br label %cond.end274

cond.false272:                                    ; preds = %if.end267
  %176 = load %struct.sv*, %struct.sv** %sv107, align 8
  %call273 = call i64 @Perl_sv_2iv_flags(%struct.sv* %176, i32 0)
  br label %cond.end274

cond.end274:                                      ; preds = %cond.false272, %cond.true271
  %cond275 = phi i64 [ %175, %cond.true271 ], [ %call273, %cond.false272 ]
  %177 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u276 = getelementptr inbounds %struct.context, %struct.context* %177, i32 0, i32 0
  %cx_blk277 = bitcast %union.anon.16* %cx_u276 to %struct.block*
  %blk_u278 = getelementptr inbounds %struct.block, %struct.block* %cx_blk277, i32 0, i32 8
  %blku_loop279 = bitcast %union.anon.20* %blk_u278 to %struct.block_loop*
  %state_u280 = getelementptr inbounds %struct.block_loop, %struct.block_loop* %blku_loop279, i32 0, i32 3
  %lazyiv = bitcast %union.anon.22* %state_u280 to %struct.anon.24*
  %cur = getelementptr inbounds %struct.anon.24, %struct.anon.24* %lazyiv, i32 0, i32 0
  store i64 %cond275, i64* %cur, align 8
  %178 = load %struct.sv*, %struct.sv** %right, align 8
  %sv_flags281 = getelementptr inbounds %struct.sv, %struct.sv* %178, i32 0, i32 2
  %179 = load i32, i32* %sv_flags281, align 4
  %and282 = and i32 %179, 256
  %tobool283 = icmp ne i32 %and282, 0
  br i1 %tobool283, label %cond.true284, label %cond.false288

cond.true284:                                     ; preds = %cond.end274
  %180 = load %struct.sv*, %struct.sv** %right, align 8
  %sv_any285 = getelementptr inbounds %struct.sv, %struct.sv* %180, i32 0, i32 0
  %181 = load i8*, i8** %sv_any285, align 8
  %182 = bitcast i8* %181 to %struct.xpviv*
  %xiv_u286 = getelementptr inbounds %struct.xpviv, %struct.xpviv* %182, i32 0, i32 4
  %xivu_iv287 = bitcast %union._xivu* %xiv_u286 to i64*
  %183 = load i64, i64* %xivu_iv287, align 8
  br label %cond.end290

cond.false288:                                    ; preds = %cond.end274
  %184 = load %struct.sv*, %struct.sv** %right, align 8
  %call289 = call i64 @Perl_sv_2iv_flags(%struct.sv* %184, i32 0)
  br label %cond.end290

cond.end290:                                      ; preds = %cond.false288, %cond.true284
  %cond291 = phi i64 [ %183, %cond.true284 ], [ %call289, %cond.false288 ]
  %185 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u292 = getelementptr inbounds %struct.context, %struct.context* %185, i32 0, i32 0
  %cx_blk293 = bitcast %union.anon.16* %cx_u292 to %struct.block*
  %blk_u294 = getelementptr inbounds %struct.block, %struct.block* %cx_blk293, i32 0, i32 8
  %blku_loop295 = bitcast %union.anon.20* %blk_u294 to %struct.block_loop*
  %state_u296 = getelementptr inbounds %struct.block_loop, %struct.block_loop* %blku_loop295, i32 0, i32 3
  %lazyiv297 = bitcast %union.anon.22* %state_u296 to %struct.anon.24*
  %end = getelementptr inbounds %struct.anon.24, %struct.anon.24* %lazyiv297, i32 0, i32 1
  store i64 %cond291, i64* %end, align 8
  br label %if.end392

if.else298:                                       ; preds = %lor.lhs.false244, %land.lhs.true224, %land.lhs.true220, %lor.lhs.false217
  %186 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u299 = getelementptr inbounds %struct.context, %struct.context* %186, i32 0, i32 0
  %cx_subst300 = bitcast %union.anon.16* %cx_u299 to %struct.subst*
  %sbu_type301 = getelementptr inbounds %struct.subst, %struct.subst* %cx_subst300, i32 0, i32 0
  %187 = load i8, i8* %sbu_type301, align 8
  %conv302 = zext i8 %187 to i32
  %and303 = and i32 %conv302, -16
  %conv304 = trunc i32 %and303 to i8
  store i8 %conv304, i8* %sbu_type301, align 8
  %188 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u305 = getelementptr inbounds %struct.context, %struct.context* %188, i32 0, i32 0
  %cx_subst306 = bitcast %union.anon.16* %cx_u305 to %struct.subst*
  %sbu_type307 = getelementptr inbounds %struct.subst, %struct.subst* %cx_subst306, i32 0, i32 0
  %189 = load i8, i8* %sbu_type307, align 8
  %conv308 = zext i8 %189 to i32
  %or309 = or i32 %conv308, 6
  %conv310 = trunc i32 %or309 to i8
  store i8 %conv310, i8* %sbu_type307, align 8
  %190 = load %struct.sv*, %struct.sv** %sv107, align 8
  %call311 = call %struct.sv* @Perl_newSVsv(%struct.sv* %190)
  %191 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u312 = getelementptr inbounds %struct.context, %struct.context* %191, i32 0, i32 0
  %cx_blk313 = bitcast %union.anon.16* %cx_u312 to %struct.block*
  %blk_u314 = getelementptr inbounds %struct.block, %struct.block* %cx_blk313, i32 0, i32 8
  %blku_loop315 = bitcast %union.anon.20* %blk_u314 to %struct.block_loop*
  %state_u316 = getelementptr inbounds %struct.block_loop, %struct.block_loop* %blku_loop315, i32 0, i32 3
  %lazysv = bitcast %union.anon.22* %state_u316 to %struct.anon.25*
  %cur317 = getelementptr inbounds %struct.anon.25, %struct.anon.25* %lazysv, i32 0, i32 0
  store %struct.sv* %call311, %struct.sv** %cur317, align 8
  %192 = load %struct.sv*, %struct.sv** %right, align 8
  %193 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u318 = getelementptr inbounds %struct.context, %struct.context* %193, i32 0, i32 0
  %cx_blk319 = bitcast %union.anon.16* %cx_u318 to %struct.block*
  %blk_u320 = getelementptr inbounds %struct.block, %struct.block* %cx_blk319, i32 0, i32 8
  %blku_loop321 = bitcast %union.anon.20* %blk_u320 to %struct.block_loop*
  %state_u322 = getelementptr inbounds %struct.block_loop, %struct.block_loop* %blku_loop321, i32 0, i32 3
  %lazysv323 = bitcast %union.anon.22* %state_u322 to %struct.anon.25*
  %end324 = getelementptr inbounds %struct.anon.25, %struct.anon.25* %lazysv323, i32 0, i32 1
  store %struct.sv* %192, %struct.sv** %end324, align 8
  %194 = load %struct.sv*, %struct.sv** %right, align 8
  %195 = bitcast %struct.sv* %194 to i8*
  %196 = bitcast i8* %195 to %struct.sv*
  %call325 = call %struct.sv* @S_SvREFCNT_inc(%struct.sv* %196)
  %197 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u326 = getelementptr inbounds %struct.context, %struct.context* %197, i32 0, i32 0
  %cx_blk327 = bitcast %union.anon.16* %cx_u326 to %struct.block*
  %blk_u328 = getelementptr inbounds %struct.block, %struct.block* %cx_blk327, i32 0, i32 8
  %blku_loop329 = bitcast %union.anon.20* %blk_u328 to %struct.block_loop*
  %state_u330 = getelementptr inbounds %struct.block_loop, %struct.block_loop* %blku_loop329, i32 0, i32 3
  %lazysv331 = bitcast %union.anon.22* %state_u330 to %struct.anon.25*
  %cur332 = getelementptr inbounds %struct.anon.25, %struct.anon.25* %lazysv331, i32 0, i32 0
  %198 = load %struct.sv*, %struct.sv** %cur332, align 8
  %sv_flags333 = getelementptr inbounds %struct.sv, %struct.sv* %198, i32 0, i32 2
  %199 = load i32, i32* %sv_flags333, align 4
  %and334 = and i32 %199, 430018304
  %cmp335 = icmp eq i32 %and334, 1024
  br i1 %cmp335, label %cond.true337, label %cond.false347

cond.true337:                                     ; preds = %if.else298
  %200 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u338 = getelementptr inbounds %struct.context, %struct.context* %200, i32 0, i32 0
  %cx_blk339 = bitcast %union.anon.16* %cx_u338 to %struct.block*
  %blk_u340 = getelementptr inbounds %struct.block, %struct.block* %cx_blk339, i32 0, i32 8
  %blku_loop341 = bitcast %union.anon.20* %blk_u340 to %struct.block_loop*
  %state_u342 = getelementptr inbounds %struct.block_loop, %struct.block_loop* %blku_loop341, i32 0, i32 3
  %lazysv343 = bitcast %union.anon.22* %state_u342 to %struct.anon.25*
  %cur344 = getelementptr inbounds %struct.anon.25, %struct.anon.25* %lazysv343, i32 0, i32 0
  %201 = load %struct.sv*, %struct.sv** %cur344, align 8
  %sv_u345 = getelementptr inbounds %struct.sv, %struct.sv* %201, i32 0, i32 3
  %svu_pv346 = bitcast %union.anon* %sv_u345 to i8**
  %202 = load i8*, i8** %svu_pv346, align 8
  br label %cond.end356

cond.false347:                                    ; preds = %if.else298
  %203 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u348 = getelementptr inbounds %struct.context, %struct.context* %203, i32 0, i32 0
  %cx_blk349 = bitcast %union.anon.16* %cx_u348 to %struct.block*
  %blk_u350 = getelementptr inbounds %struct.block, %struct.block* %cx_blk349, i32 0, i32 8
  %blku_loop351 = bitcast %union.anon.20* %blk_u350 to %struct.block_loop*
  %state_u352 = getelementptr inbounds %struct.block_loop, %struct.block_loop* %blku_loop351, i32 0, i32 3
  %lazysv353 = bitcast %union.anon.22* %state_u352 to %struct.anon.25*
  %cur354 = getelementptr inbounds %struct.anon.25, %struct.anon.25* %lazysv353, i32 0, i32 0
  %204 = load %struct.sv*, %struct.sv** %cur354, align 8
  %call355 = call i8* @Perl_sv_pvn_force_flags(%struct.sv* %204, i64* null, i32 2)
  br label %cond.end356

cond.end356:                                      ; preds = %cond.false347, %cond.true337
  %cond357 = phi i8* [ %202, %cond.true337 ], [ %call355, %cond.false347 ]
  %205 = load %struct.sv*, %struct.sv** %right, align 8
  %sv_flags358 = getelementptr inbounds %struct.sv, %struct.sv* %205, i32 0, i32 2
  %206 = load i32, i32* %sv_flags358, align 4
  %and359 = and i32 %206, 2098176
  %cmp360 = icmp eq i32 %and359, 1024
  br i1 %cmp360, label %cond.true362, label %cond.false366

cond.true362:                                     ; preds = %cond.end356
  %207 = load %struct.sv*, %struct.sv** %right, align 8
  %sv_u363 = getelementptr inbounds %struct.sv, %struct.sv* %207, i32 0, i32 3
  %svu_pv364 = bitcast %union.anon* %sv_u363 to i8**
  %208 = load i8*, i8** %svu_pv364, align 8
  %add.ptr365 = getelementptr inbounds i8, i8* %208, i64 0
  br label %cond.end368

cond.false366:                                    ; preds = %cond.end356
  %209 = load %struct.sv*, %struct.sv** %right, align 8
  %call367 = call i8* @Perl_sv_2pv_flags(%struct.sv* %209, i64* null, i32 34)
  br label %cond.end368

cond.end368:                                      ; preds = %cond.false366, %cond.true362
  %cond369 = phi i8* [ %add.ptr365, %cond.true362 ], [ %call367, %cond.false366 ]
  %210 = load %struct.sv*, %struct.sv** %right, align 8
  %sv_flags370 = getelementptr inbounds %struct.sv, %struct.sv* %210, i32 0, i32 2
  %211 = load i32, i32* %sv_flags370, align 4
  %and371 = and i32 %211, 65280
  %tobool372 = icmp ne i32 %and371, 0
  br i1 %tobool372, label %if.end391, label %lor.lhs.false373

lor.lhs.false373:                                 ; preds = %cond.end368
  %212 = load %struct.sv*, %struct.sv** %right, align 8
  %sv_flags374 = getelementptr inbounds %struct.sv, %struct.sv* %212, i32 0, i32 2
  %213 = load i32, i32* %sv_flags374, align 4
  %and375 = and i32 %213, 255
  %cmp376 = icmp eq i32 %and375, 8
  br i1 %cmp376, label %if.end391, label %lor.lhs.false378

lor.lhs.false378:                                 ; preds = %lor.lhs.false373
  %214 = load %struct.sv*, %struct.sv** %right, align 8
  %sv_flags379 = getelementptr inbounds %struct.sv, %struct.sv* %214, i32 0, i32 2
  %215 = load i32, i32* %sv_flags379, align 4
  %and380 = and i32 %215, 16826623
  %cmp381 = icmp eq i32 %and380, 16777226
  br i1 %cmp381, label %if.end391, label %if.then383

if.then383:                                       ; preds = %lor.lhs.false378
  %216 = load %struct.sv*, %struct.sv** %right, align 8
  %217 = bitcast %struct.sv* %216 to i8*
  %218 = bitcast i8* %217 to %struct.sv*
  call void @S_SvREFCNT_dec(%struct.sv* %218)
  %219 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u384 = getelementptr inbounds %struct.context, %struct.context* %219, i32 0, i32 0
  %cx_blk385 = bitcast %union.anon.16* %cx_u384 to %struct.block*
  %blk_u386 = getelementptr inbounds %struct.block, %struct.block* %cx_blk385, i32 0, i32 8
  %blku_loop387 = bitcast %union.anon.20* %blk_u386 to %struct.block_loop*
  %state_u388 = getelementptr inbounds %struct.block_loop, %struct.block_loop* %blku_loop387, i32 0, i32 3
  %lazysv389 = bitcast %union.anon.22* %state_u388 to %struct.anon.25*
  %end390 = getelementptr inbounds %struct.anon.25, %struct.anon.25* %lazysv389, i32 0, i32 1
  store %struct.sv* @PL_sv_no, %struct.sv** %end390, align 8
  br label %if.end391

if.end391:                                        ; preds = %if.then383, %lor.lhs.false378, %lor.lhs.false373, %cond.end368
  br label %if.end392

if.end392:                                        ; preds = %if.end391, %cond.end290
  br label %if.end448

if.else393:                                       ; preds = %if.then100
  %220 = load %struct.sv*, %struct.sv** %maybe_ary, align 8
  %221 = bitcast %struct.sv* %220 to i8*
  %222 = bitcast i8* %221 to %struct.av*
  %223 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u394 = getelementptr inbounds %struct.context, %struct.context* %223, i32 0, i32 0
  %cx_blk395 = bitcast %union.anon.16* %cx_u394 to %struct.block*
  %blk_u396 = getelementptr inbounds %struct.block, %struct.block* %cx_blk395, i32 0, i32 8
  %blku_loop397 = bitcast %union.anon.20* %blk_u396 to %struct.block_loop*
  %state_u398 = getelementptr inbounds %struct.block_loop, %struct.block_loop* %blku_loop397, i32 0, i32 3
  %ary399 = bitcast %union.anon.22* %state_u398 to %struct.anon.23*
  %ary400 = getelementptr inbounds %struct.anon.23, %struct.anon.23* %ary399, i32 0, i32 0
  store %struct.av* %222, %struct.av** %ary400, align 8
  %224 = load %struct.sv*, %struct.sv** %maybe_ary, align 8
  %225 = bitcast %struct.sv* %224 to i8*
  %226 = bitcast i8* %225 to %struct.sv*
  %call401 = call %struct.sv* @S_SvREFCNT_inc(%struct.sv* %226)
  %227 = load %struct.op*, %struct.op** @PL_op, align 8
  %op_private402 = getelementptr inbounds %struct.op, %struct.op* %227, i32 0, i32 6
  %228 = load i8, i8* %op_private402, align 1
  %conv403 = zext i8 %228 to i32
  %and404 = and i32 %conv403, 4
  %tobool405 = icmp ne i32 %and404, 0
  br i1 %tobool405, label %cond.true406, label %cond.false438

cond.true406:                                     ; preds = %if.else393
  %229 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u407 = getelementptr inbounds %struct.context, %struct.context* %229, i32 0, i32 0
  %cx_blk408 = bitcast %union.anon.16* %cx_u407 to %struct.block*
  %blk_u409 = getelementptr inbounds %struct.block, %struct.block* %cx_blk408, i32 0, i32 8
  %blku_loop410 = bitcast %union.anon.20* %blk_u409 to %struct.block_loop*
  %state_u411 = getelementptr inbounds %struct.block_loop, %struct.block_loop* %blku_loop410, i32 0, i32 3
  %ary412 = bitcast %union.anon.22* %state_u411 to %struct.anon.23*
  %ary413 = getelementptr inbounds %struct.anon.23, %struct.anon.23* %ary412, i32 0, i32 0
  %230 = load %struct.av*, %struct.av** %ary413, align 8
  %231 = bitcast %struct.av* %230 to %struct.sv*
  %sv_flags414 = getelementptr inbounds %struct.sv, %struct.sv* %231, i32 0, i32 2
  %232 = load i32, i32* %sv_flags414, align 4
  %and415 = and i32 %232, 8388608
  %tobool416 = icmp ne i32 %and415, 0
  br i1 %tobool416, label %cond.true417, label %cond.false427

cond.true417:                                     ; preds = %cond.true406
  %233 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u418 = getelementptr inbounds %struct.context, %struct.context* %233, i32 0, i32 0
  %cx_blk419 = bitcast %union.anon.16* %cx_u418 to %struct.block*
  %blk_u420 = getelementptr inbounds %struct.block, %struct.block* %cx_blk419, i32 0, i32 8
  %blku_loop421 = bitcast %union.anon.20* %blk_u420 to %struct.block_loop*
  %state_u422 = getelementptr inbounds %struct.block_loop, %struct.block_loop* %blku_loop421, i32 0, i32 3
  %ary423 = bitcast %union.anon.22* %state_u422 to %struct.anon.23*
  %ary424 = getelementptr inbounds %struct.anon.23, %struct.anon.23* %ary423, i32 0, i32 0
  %234 = load %struct.av*, %struct.av** %ary424, align 8
  %235 = bitcast %struct.av* %234 to i8*
  %236 = bitcast i8* %235 to %struct.sv*
  %call425 = call i32 @Perl_mg_size(%struct.sv* %236)
  %conv426 = sext i32 %call425 to i64
  br label %cond.end436

cond.false427:                                    ; preds = %cond.true406
  %237 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u428 = getelementptr inbounds %struct.context, %struct.context* %237, i32 0, i32 0
  %cx_blk429 = bitcast %union.anon.16* %cx_u428 to %struct.block*
  %blk_u430 = getelementptr inbounds %struct.block, %struct.block* %cx_blk429, i32 0, i32 8
  %blku_loop431 = bitcast %union.anon.20* %blk_u430 to %struct.block_loop*
  %state_u432 = getelementptr inbounds %struct.block_loop, %struct.block_loop* %blku_loop431, i32 0, i32 3
  %ary433 = bitcast %union.anon.22* %state_u432 to %struct.anon.23*
  %ary434 = getelementptr inbounds %struct.anon.23, %struct.anon.23* %ary433, i32 0, i32 0
  %238 = load %struct.av*, %struct.av** %ary434, align 8
  %sv_any435 = getelementptr inbounds %struct.av, %struct.av* %238, i32 0, i32 0
  %239 = load %struct.xpvav*, %struct.xpvav** %sv_any435, align 8
  %xav_fill = getelementptr inbounds %struct.xpvav, %struct.xpvav* %239, i32 0, i32 2
  %240 = load i64, i64* %xav_fill, align 8
  br label %cond.end436

cond.end436:                                      ; preds = %cond.false427, %cond.true417
  %cond437 = phi i64 [ %conv426, %cond.true417 ], [ %240, %cond.false427 ]
  %add = add nsw i64 %cond437, 1
  br label %cond.end439

cond.false438:                                    ; preds = %if.else393
  br label %cond.end439

cond.end439:                                      ; preds = %cond.false438, %cond.end436
  %cond440 = phi i64 [ %add, %cond.end436 ], [ -1, %cond.false438 ]
  %241 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u441 = getelementptr inbounds %struct.context, %struct.context* %241, i32 0, i32 0
  %cx_blk442 = bitcast %union.anon.16* %cx_u441 to %struct.block*
  %blk_u443 = getelementptr inbounds %struct.block, %struct.block* %cx_blk442, i32 0, i32 8
  %blku_loop444 = bitcast %union.anon.20* %blk_u443 to %struct.block_loop*
  %state_u445 = getelementptr inbounds %struct.block_loop, %struct.block_loop* %blku_loop444, i32 0, i32 3
  %ary446 = bitcast %union.anon.22* %state_u445 to %struct.anon.23*
  %ix447 = getelementptr inbounds %struct.anon.23, %struct.anon.23* %ary446, i32 0, i32 1
  store i64 %cond440, i64* %ix447, align 8
  br label %if.end448

if.end448:                                        ; preds = %cond.end439, %if.end392
  br label %if.end487

if.else449:                                       ; preds = %cond.end47
  %242 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u450 = getelementptr inbounds %struct.context, %struct.context* %242, i32 0, i32 0
  %cx_blk451 = bitcast %union.anon.16* %cx_u450 to %struct.block*
  %blk_u452 = getelementptr inbounds %struct.block, %struct.block* %cx_blk451, i32 0, i32 8
  %blku_loop453 = bitcast %union.anon.20* %blk_u452 to %struct.block_loop*
  %state_u454 = getelementptr inbounds %struct.block_loop, %struct.block_loop* %blku_loop453, i32 0, i32 3
  %ary455 = bitcast %union.anon.22* %state_u454 to %struct.anon.23*
  %ary456 = getelementptr inbounds %struct.anon.23, %struct.anon.23* %ary455, i32 0, i32 0
  store %struct.av* null, %struct.av** %ary456, align 8
  %243 = load %struct.op*, %struct.op** @PL_op, align 8
  %op_private457 = getelementptr inbounds %struct.op, %struct.op* %243, i32 0, i32 6
  %244 = load i8, i8* %op_private457, align 1
  %conv458 = zext i8 %244 to i32
  %and459 = and i32 %conv458, 4
  %tobool460 = icmp ne i32 %and459, 0
  br i1 %tobool460, label %if.then461, label %if.else474

if.then461:                                       ; preds = %if.else449
  %245 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u462 = getelementptr inbounds %struct.context, %struct.context* %245, i32 0, i32 0
  %cx_blk463 = bitcast %union.anon.16* %cx_u462 to %struct.block*
  %blku_oldsp464 = getelementptr inbounds %struct.block, %struct.block* %cx_blk463, i32 0, i32 3
  %246 = load i32, i32* %blku_oldsp464, align 4
  %add465 = add nsw i32 %246, 1
  %conv466 = sext i32 %add465 to i64
  %247 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u467 = getelementptr inbounds %struct.context, %struct.context* %247, i32 0, i32 0
  %cx_blk468 = bitcast %union.anon.16* %cx_u467 to %struct.block*
  %blk_u469 = getelementptr inbounds %struct.block, %struct.block* %cx_blk468, i32 0, i32 8
  %blku_loop470 = bitcast %union.anon.20* %blk_u469 to %struct.block_loop*
  %state_u471 = getelementptr inbounds %struct.block_loop, %struct.block_loop* %blku_loop470, i32 0, i32 3
  %ary472 = bitcast %union.anon.22* %state_u471 to %struct.anon.23*
  %ix473 = getelementptr inbounds %struct.anon.23, %struct.anon.23* %ary472, i32 0, i32 1
  store i64 %conv466, i64* %ix473, align 8
  br label %if.end486

if.else474:                                       ; preds = %if.else449
  %248 = load %struct.sv**, %struct.sv*** %mark, align 8
  %249 = load %struct.sv**, %struct.sv*** @PL_stack_base, align 8
  %sub.ptr.lhs.cast475 = ptrtoint %struct.sv** %248 to i64
  %sub.ptr.rhs.cast476 = ptrtoint %struct.sv** %249 to i64
  %sub.ptr.sub477 = sub i64 %sub.ptr.lhs.cast475, %sub.ptr.rhs.cast476
  %sub.ptr.div478 = sdiv exact i64 %sub.ptr.sub477, 8
  %250 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u479 = getelementptr inbounds %struct.context, %struct.context* %250, i32 0, i32 0
  %cx_blk480 = bitcast %union.anon.16* %cx_u479 to %struct.block*
  %blk_u481 = getelementptr inbounds %struct.block, %struct.block* %cx_blk480, i32 0, i32 8
  %blku_loop482 = bitcast %union.anon.20* %blk_u481 to %struct.block_loop*
  %state_u483 = getelementptr inbounds %struct.block_loop, %struct.block_loop* %blku_loop482, i32 0, i32 3
  %ary484 = bitcast %union.anon.22* %state_u483 to %struct.anon.23*
  %ix485 = getelementptr inbounds %struct.anon.23, %struct.anon.23* %ary484, i32 0, i32 1
  store i64 %sub.ptr.div478, i64* %ix485, align 8
  br label %if.end486

if.end486:                                        ; preds = %if.else474, %if.then461
  br label %if.end487

if.end487:                                        ; preds = %if.end486, %if.end448
  %251 = load %struct.sv**, %struct.sv*** %sp, align 8
  store %struct.sv** %251, %struct.sv*** @PL_stack_sp, align 8
  %252 = load %struct.op*, %struct.op** @PL_op, align 8
  %op_next = getelementptr inbounds %struct.op, %struct.op* %252, i32 0, i32 0
  %253 = load %struct.op*, %struct.op** %op_next, align 8
  store %struct.op* %253, %struct.op** %retval, align 8
  br label %return

return:                                           ; preds = %if.end487, %if.then265, %if.then114
  %254 = load %struct.op*, %struct.op** %retval, align 8
  ret %struct.op* %254
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @S_SvPADSTALE_off(%struct.sv* %sv) #0 {
entry:
  %sv.addr = alloca %struct.sv*, align 8
  store %struct.sv* %sv, %struct.sv** %sv.addr, align 8
  %0 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %sv_flags = getelementptr inbounds %struct.sv, %struct.sv* %0, i32 0, i32 2
  %1 = load i32, i32* %sv_flags, align 4
  %and = and i32 %1, -262145
  store i32 %and, i32* %sv_flags, align 4
  ret i32 %and
}

declare dso_local void @Perl_save_set_svflags(%struct.sv*, i32, i32) #1

declare dso_local void @Perl_save_padsv_and_mortalize(i64) #1

declare dso_local void @Perl_save_pushptrptr(i8*, i8*, i32) #1

declare dso_local %struct.sv* @Perl_newSV(i64) #1

declare dso_local void @Perl_save_aliased_sv(%struct.gv*) #1

; Function Attrs: noinline nounwind uwtable
define internal zeroext i1 @S_outside_integer(%struct.sv* %sv) #0 {
entry:
  %retval = alloca i1, align 1
  %sv.addr = alloca %struct.sv*, align 8
  %nv = alloca double, align 8
  store %struct.sv* %sv, %struct.sv** %sv.addr, align 8
  %0 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %sv_flags = getelementptr inbounds %struct.sv, %struct.sv* %0, i32 0, i32 2
  %1 = load i32, i32* %sv_flags, align 4
  %and = and i32 %1, 65280
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %sv_flags1 = getelementptr inbounds %struct.sv, %struct.sv* %2, i32 0, i32 2
  %3 = load i32, i32* %sv_flags1, align 4
  %and2 = and i32 %3, 255
  %cmp = icmp eq i32 %and2, 8
  br i1 %cmp, label %if.then, label %lor.lhs.false3

lor.lhs.false3:                                   ; preds = %lor.lhs.false
  %4 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %sv_flags4 = getelementptr inbounds %struct.sv, %struct.sv* %4, i32 0, i32 2
  %5 = load i32, i32* %sv_flags4, align 4
  %and5 = and i32 %5, 16826623
  %cmp6 = icmp eq i32 %and5, 16777226
  br i1 %cmp6, label %if.then, label %if.end30

if.then:                                          ; preds = %lor.lhs.false3, %lor.lhs.false, %entry
  %6 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %sv_flags7 = getelementptr inbounds %struct.sv, %struct.sv* %6, i32 0, i32 2
  %7 = load i32, i32* %sv_flags7, align 4
  %and8 = and i32 %7, 512
  %tobool9 = icmp ne i32 %and8, 0
  br i1 %tobool9, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.then
  %8 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %sv_any = getelementptr inbounds %struct.sv, %struct.sv* %8, i32 0, i32 0
  %9 = load i8*, i8** %sv_any, align 8
  %10 = bitcast i8* %9 to %struct.xpvnv*
  %xnv_u = getelementptr inbounds %struct.xpvnv, %struct.xpvnv* %10, i32 0, i32 5
  %xnv_nv = bitcast %union._xnvu* %xnv_u to double*
  %11 = load double, double* %xnv_nv, align 8
  br label %cond.end

cond.false:                                       ; preds = %if.then
  %12 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %call = call double @Perl_sv_2nv_flags(%struct.sv* %12, i32 0)
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi double [ %11, %cond.true ], [ %call, %cond.false ]
  store double %cond, double* %nv, align 8
  %13 = load double, double* %nv, align 8
  %call10 = call zeroext i1 @Perl_isinfnan(double %13)
  br i1 %call10, label %if.then11, label %if.end

if.then11:                                        ; preds = %cond.end
  store i1 true, i1* %retval, align 1
  br label %return

if.end:                                           ; preds = %cond.end
  %14 = load double, double* %nv, align 8
  %cmp12 = fcmp ole double %14, 0xC3E0000000000000
  br i1 %cmp12, label %if.then13, label %if.end14

if.then13:                                        ; preds = %if.end
  store i1 true, i1* %retval, align 1
  br label %return

if.end14:                                         ; preds = %if.end
  %15 = load double, double* %nv, align 8
  %cmp15 = fcmp ogt double %15, 0.000000e+00
  br i1 %cmp15, label %land.lhs.true, label %if.end29

land.lhs.true:                                    ; preds = %if.end14
  %16 = load double, double* %nv, align 8
  %cmp16 = fcmp ogt double %16, 0x43F0000000000000
  br i1 %cmp16, label %if.then28, label %lor.lhs.false17

lor.lhs.false17:                                  ; preds = %land.lhs.true
  %17 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %sv_flags18 = getelementptr inbounds %struct.sv, %struct.sv* %17, i32 0, i32 2
  %18 = load i32, i32* %sv_flags18, align 4
  %and19 = and i32 %18, 256
  %tobool20 = icmp ne i32 %and19, 0
  br i1 %tobool20, label %cond.true21, label %cond.false23

cond.true21:                                      ; preds = %lor.lhs.false17
  %19 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %sv_any22 = getelementptr inbounds %struct.sv, %struct.sv* %19, i32 0, i32 0
  %20 = load i8*, i8** %sv_any22, align 8
  %21 = bitcast i8* %20 to %struct.xpvuv*
  %xuv_u = getelementptr inbounds %struct.xpvuv, %struct.xpvuv* %21, i32 0, i32 4
  %xivu_uv = bitcast %union._xivu* %xuv_u to i64*
  %22 = load i64, i64* %xivu_uv, align 8
  br label %cond.end25

cond.false23:                                     ; preds = %lor.lhs.false17
  %23 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %call24 = call i64 @Perl_sv_2uv_flags(%struct.sv* %23, i32 0)
  br label %cond.end25

cond.end25:                                       ; preds = %cond.false23, %cond.true21
  %cond26 = phi i64 [ %22, %cond.true21 ], [ %call24, %cond.false23 ]
  %cmp27 = icmp ugt i64 %cond26, 9223372036854775807
  br i1 %cmp27, label %if.then28, label %if.end29

if.then28:                                        ; preds = %cond.end25, %land.lhs.true
  store i1 true, i1* %retval, align 1
  br label %return

if.end29:                                         ; preds = %cond.end25, %if.end14
  br label %if.end30

if.end30:                                         ; preds = %if.end29, %lor.lhs.false3
  store i1 false, i1* %retval, align 1
  br label %return

return:                                           ; preds = %if.end30, %if.then28, %if.then13, %if.then11
  %24 = load i1, i1* %retval, align 1
  ret i1 %24
}

declare dso_local i32 @Perl_mg_size(%struct.sv*) #1

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.op* @Perl_pp_enterloop() #0 {
entry:
  %sp = alloca %struct.sv**, align 8
  %cx = alloca %struct.context*, align 8
  %gimme = alloca i32, align 4
  %0 = load %struct.sv**, %struct.sv*** @PL_stack_sp, align 8
  store %struct.sv** %0, %struct.sv*** %sp, align 8
  %1 = load %struct.op*, %struct.op** @PL_op, align 8
  %op_flags = getelementptr inbounds %struct.op, %struct.op* %1, i32 0, i32 5
  %2 = load i8, i8* %op_flags, align 2
  %conv = zext i8 %2 to i32
  %and = and i32 %conv, 3
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %3 = load %struct.op*, %struct.op** @PL_op, align 8
  %op_flags1 = getelementptr inbounds %struct.op, %struct.op* %3, i32 0, i32 5
  %4 = load i8, i8* %op_flags1, align 2
  %conv2 = zext i8 %4 to i32
  %and3 = and i32 %conv2, 3
  br label %cond.end

cond.false:                                       ; preds = %entry
  %call = call i32 @Perl_block_gimme()
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %and3, %cond.true ], [ %call, %cond.false ]
  store i32 %cond, i32* %gimme, align 4
  call void @Perl_push_scope()
  call void @Perl_save_strlen(i64* @PL_tmps_floor)
  %5 = load i64, i64* @PL_tmps_ix, align 8
  store i64 %5, i64* @PL_tmps_floor, align 8
  call void @Perl_push_scope()
  %6 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %si_cxix = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %6, i32 0, i32 4
  %7 = load i32, i32* %si_cxix, align 8
  %8 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %si_cxmax = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %8, i32 0, i32 5
  %9 = load i32, i32* %si_cxmax, align 4
  %cmp = icmp slt i32 %7, %9
  br i1 %cmp, label %cond.true5, label %cond.false7

cond.true5:                                       ; preds = %cond.end
  %10 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %si_cxix6 = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %10, i32 0, i32 4
  %11 = load i32, i32* %si_cxix6, align 8
  %inc = add nsw i32 %11, 1
  store i32 %inc, i32* %si_cxix6, align 8
  br label %cond.end10

cond.false7:                                      ; preds = %cond.end
  %call8 = call i32 @Perl_cxinc()
  %12 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %si_cxix9 = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %12, i32 0, i32 4
  store i32 %call8, i32* %si_cxix9, align 8
  br label %cond.end10

cond.end10:                                       ; preds = %cond.false7, %cond.true5
  %cond11 = phi i32 [ %inc, %cond.true5 ], [ %call8, %cond.false7 ]
  %13 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %si_cxstack = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %13, i32 0, i32 1
  %14 = load %struct.context*, %struct.context** %si_cxstack, align 8
  %15 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %si_cxix12 = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %15, i32 0, i32 4
  %16 = load i32, i32* %si_cxix12, align 8
  %idxprom = sext i32 %16 to i64
  %arrayidx = getelementptr inbounds %struct.context, %struct.context* %14, i64 %idxprom
  store %struct.context* %arrayidx, %struct.context** %cx, align 8
  %17 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u = getelementptr inbounds %struct.context, %struct.context* %17, i32 0, i32 0
  %cx_subst = bitcast %union.anon.16* %cx_u to %struct.subst*
  %sbu_type = getelementptr inbounds %struct.subst, %struct.subst* %cx_subst, i32 0, i32 0
  store i8 5, i8* %sbu_type, align 8
  %18 = load %struct.sv**, %struct.sv*** %sp, align 8
  %19 = load %struct.sv**, %struct.sv*** @PL_stack_base, align 8
  %sub.ptr.lhs.cast = ptrtoint %struct.sv** %18 to i64
  %sub.ptr.rhs.cast = ptrtoint %struct.sv** %19 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 8
  %conv13 = trunc i64 %sub.ptr.div to i32
  %20 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u14 = getelementptr inbounds %struct.context, %struct.context* %20, i32 0, i32 0
  %cx_blk = bitcast %union.anon.16* %cx_u14 to %struct.block*
  %blku_oldsp = getelementptr inbounds %struct.block, %struct.block* %cx_blk, i32 0, i32 3
  store i32 %conv13, i32* %blku_oldsp, align 4
  %21 = load %struct.cop*, %struct.cop** @PL_curcop, align 8
  %22 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u15 = getelementptr inbounds %struct.context, %struct.context* %22, i32 0, i32 0
  %cx_blk16 = bitcast %union.anon.16* %cx_u15 to %struct.block*
  %blku_oldcop = getelementptr inbounds %struct.block, %struct.block* %cx_blk16, i32 0, i32 4
  store %struct.cop* %21, %struct.cop** %blku_oldcop, align 8
  %23 = load i32*, i32** @PL_markstack_ptr, align 8
  %24 = load i32*, i32** @PL_markstack, align 8
  %sub.ptr.lhs.cast17 = ptrtoint i32* %23 to i64
  %sub.ptr.rhs.cast18 = ptrtoint i32* %24 to i64
  %sub.ptr.sub19 = sub i64 %sub.ptr.lhs.cast17, %sub.ptr.rhs.cast18
  %sub.ptr.div20 = sdiv exact i64 %sub.ptr.sub19, 4
  %conv21 = trunc i64 %sub.ptr.div20 to i32
  %25 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u22 = getelementptr inbounds %struct.context, %struct.context* %25, i32 0, i32 0
  %cx_blk23 = bitcast %union.anon.16* %cx_u22 to %struct.block*
  %blku_oldmarksp = getelementptr inbounds %struct.block, %struct.block* %cx_blk23, i32 0, i32 5
  store i32 %conv21, i32* %blku_oldmarksp, align 8
  %26 = load i32, i32* @PL_scopestack_ix, align 4
  %27 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u24 = getelementptr inbounds %struct.context, %struct.context* %27, i32 0, i32 0
  %cx_blk25 = bitcast %union.anon.16* %cx_u24 to %struct.block*
  %blku_oldscopesp = getelementptr inbounds %struct.block, %struct.block* %cx_blk25, i32 0, i32 6
  store i32 %26, i32* %blku_oldscopesp, align 4
  %28 = load %struct.pmop*, %struct.pmop** @PL_curpm, align 8
  %29 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u26 = getelementptr inbounds %struct.context, %struct.context* %29, i32 0, i32 0
  %cx_blk27 = bitcast %union.anon.16* %cx_u26 to %struct.block*
  %blku_oldpm = getelementptr inbounds %struct.block, %struct.block* %cx_blk27, i32 0, i32 7
  store %struct.pmop* %28, %struct.pmop** %blku_oldpm, align 8
  %30 = load i32, i32* %gimme, align 4
  %conv28 = trunc i32 %30 to i8
  %31 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u29 = getelementptr inbounds %struct.context, %struct.context* %31, i32 0, i32 0
  %cx_blk30 = bitcast %union.anon.16* %cx_u29 to %struct.block*
  %blku_gimme = getelementptr inbounds %struct.block, %struct.block* %cx_blk30, i32 0, i32 1
  store i8 %conv28, i8* %blku_gimme, align 1
  %32 = load %struct.sv**, %struct.sv*** %sp, align 8
  %33 = load %struct.sv**, %struct.sv*** @PL_stack_base, align 8
  %sub.ptr.lhs.cast31 = ptrtoint %struct.sv** %32 to i64
  %sub.ptr.rhs.cast32 = ptrtoint %struct.sv** %33 to i64
  %sub.ptr.sub33 = sub i64 %sub.ptr.lhs.cast31, %sub.ptr.rhs.cast32
  %sub.ptr.div34 = sdiv exact i64 %sub.ptr.sub33, 8
  %conv35 = trunc i64 %sub.ptr.div34 to i32
  %34 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u36 = getelementptr inbounds %struct.context, %struct.context* %34, i32 0, i32 0
  %cx_blk37 = bitcast %union.anon.16* %cx_u36 to %struct.block*
  %blk_u = getelementptr inbounds %struct.block, %struct.block* %cx_blk37, i32 0, i32 8
  %blku_loop = bitcast %union.anon.20* %blk_u to %struct.block_loop*
  %resetsp = getelementptr inbounds %struct.block_loop, %struct.block_loop* %blku_loop, i32 0, i32 0
  store i32 %conv35, i32* %resetsp, align 8
  %35 = load %struct.op*, %struct.op** @PL_op, align 8
  %36 = bitcast %struct.op* %35 to %struct.loop*
  %37 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u38 = getelementptr inbounds %struct.context, %struct.context* %37, i32 0, i32 0
  %cx_blk39 = bitcast %union.anon.16* %cx_u38 to %struct.block*
  %blk_u40 = getelementptr inbounds %struct.block, %struct.block* %cx_blk39, i32 0, i32 8
  %blku_loop41 = bitcast %union.anon.20* %blk_u40 to %struct.block_loop*
  %my_op = getelementptr inbounds %struct.block_loop, %struct.block_loop* %blku_loop41, i32 0, i32 1
  store %struct.loop* %36, %struct.loop** %my_op, align 8
  %38 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u42 = getelementptr inbounds %struct.context, %struct.context* %38, i32 0, i32 0
  %cx_blk43 = bitcast %union.anon.16* %cx_u42 to %struct.block*
  %blk_u44 = getelementptr inbounds %struct.block, %struct.block* %cx_blk43, i32 0, i32 8
  %blku_loop45 = bitcast %union.anon.20* %blk_u44 to %struct.block_loop*
  %state_u = getelementptr inbounds %struct.block_loop, %struct.block_loop* %blku_loop45, i32 0, i32 3
  %ary = bitcast %union.anon.22* %state_u to %struct.anon.23*
  %ary46 = getelementptr inbounds %struct.anon.23, %struct.anon.23* %ary, i32 0, i32 0
  store %struct.av* null, %struct.av** %ary46, align 8
  %39 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u47 = getelementptr inbounds %struct.context, %struct.context* %39, i32 0, i32 0
  %cx_blk48 = bitcast %union.anon.16* %cx_u47 to %struct.block*
  %blk_u49 = getelementptr inbounds %struct.block, %struct.block* %cx_blk48, i32 0, i32 8
  %blku_loop50 = bitcast %union.anon.20* %blk_u49 to %struct.block_loop*
  %state_u51 = getelementptr inbounds %struct.block_loop, %struct.block_loop* %blku_loop50, i32 0, i32 3
  %ary52 = bitcast %union.anon.22* %state_u51 to %struct.anon.23*
  %ix = getelementptr inbounds %struct.anon.23, %struct.anon.23* %ary52, i32 0, i32 1
  store i64 0, i64* %ix, align 8
  %40 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u53 = getelementptr inbounds %struct.context, %struct.context* %40, i32 0, i32 0
  %cx_blk54 = bitcast %union.anon.16* %cx_u53 to %struct.block*
  %blk_u55 = getelementptr inbounds %struct.block, %struct.block* %cx_blk54, i32 0, i32 8
  %blku_loop56 = bitcast %union.anon.20* %blk_u55 to %struct.block_loop*
  %itervar_u = getelementptr inbounds %struct.block_loop, %struct.block_loop* %blku_loop56, i32 0, i32 2
  %svp = bitcast %union.anon.21* %itervar_u to %struct.sv***
  store %struct.sv** null, %struct.sv*** %svp, align 8
  %41 = load %struct.sv**, %struct.sv*** %sp, align 8
  store %struct.sv** %41, %struct.sv*** @PL_stack_sp, align 8
  %42 = load %struct.op*, %struct.op** @PL_op, align 8
  %op_next = getelementptr inbounds %struct.op, %struct.op* %42, i32 0, i32 0
  %43 = load %struct.op*, %struct.op** %op_next, align 8
  ret %struct.op* %43
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.op* @Perl_pp_leaveloop() #0 {
entry:
  %sp = alloca %struct.sv**, align 8
  %cx = alloca %struct.context*, align 8
  %gimme = alloca i32, align 4
  %newsp = alloca %struct.sv**, align 8
  %newpm = alloca %struct.pmop*, align 8
  %mark = alloca %struct.sv**, align 8
  %0 = load %struct.sv**, %struct.sv*** @PL_stack_sp, align 8
  store %struct.sv** %0, %struct.sv*** %sp, align 8
  %1 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %si_cxstack = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %1, i32 0, i32 1
  %2 = load %struct.context*, %struct.context** %si_cxstack, align 8
  %3 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %si_cxix = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %3, i32 0, i32 4
  %4 = load i32, i32* %si_cxix, align 8
  %dec = add nsw i32 %4, -1
  store i32 %dec, i32* %si_cxix, align 8
  %idxprom = sext i32 %4 to i64
  %arrayidx = getelementptr inbounds %struct.context, %struct.context* %2, i64 %idxprom
  store %struct.context* %arrayidx, %struct.context** %cx, align 8
  %5 = load %struct.sv**, %struct.sv*** @PL_stack_base, align 8
  %6 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u = getelementptr inbounds %struct.context, %struct.context* %6, i32 0, i32 0
  %cx_blk = bitcast %union.anon.16* %cx_u to %struct.block*
  %blku_oldsp = getelementptr inbounds %struct.block, %struct.block* %cx_blk, i32 0, i32 3
  %7 = load i32, i32* %blku_oldsp, align 4
  %idx.ext = sext i32 %7 to i64
  %add.ptr = getelementptr inbounds %struct.sv*, %struct.sv** %5, i64 %idx.ext
  store %struct.sv** %add.ptr, %struct.sv*** %newsp, align 8
  %8 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u1 = getelementptr inbounds %struct.context, %struct.context* %8, i32 0, i32 0
  %cx_blk2 = bitcast %union.anon.16* %cx_u1 to %struct.block*
  %blku_oldcop = getelementptr inbounds %struct.block, %struct.block* %cx_blk2, i32 0, i32 4
  %9 = load %struct.cop*, %struct.cop** %blku_oldcop, align 8
  store %struct.cop* %9, %struct.cop** @PL_curcop, align 8
  %10 = load i32*, i32** @PL_markstack, align 8
  %11 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u3 = getelementptr inbounds %struct.context, %struct.context* %11, i32 0, i32 0
  %cx_blk4 = bitcast %union.anon.16* %cx_u3 to %struct.block*
  %blku_oldmarksp = getelementptr inbounds %struct.block, %struct.block* %cx_blk4, i32 0, i32 5
  %12 = load i32, i32* %blku_oldmarksp, align 8
  %idx.ext5 = sext i32 %12 to i64
  %add.ptr6 = getelementptr inbounds i32, i32* %10, i64 %idx.ext5
  store i32* %add.ptr6, i32** @PL_markstack_ptr, align 8
  %13 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u7 = getelementptr inbounds %struct.context, %struct.context* %13, i32 0, i32 0
  %cx_blk8 = bitcast %union.anon.16* %cx_u7 to %struct.block*
  %blku_oldscopesp = getelementptr inbounds %struct.block, %struct.block* %cx_blk8, i32 0, i32 6
  %14 = load i32, i32* %blku_oldscopesp, align 4
  store i32 %14, i32* @PL_scopestack_ix, align 4
  %15 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u9 = getelementptr inbounds %struct.context, %struct.context* %15, i32 0, i32 0
  %cx_blk10 = bitcast %union.anon.16* %cx_u9 to %struct.block*
  %blku_oldpm = getelementptr inbounds %struct.block, %struct.block* %cx_blk10, i32 0, i32 7
  %16 = load %struct.pmop*, %struct.pmop** %blku_oldpm, align 8
  store %struct.pmop* %16, %struct.pmop** %newpm, align 8
  %17 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u11 = getelementptr inbounds %struct.context, %struct.context* %17, i32 0, i32 0
  %cx_blk12 = bitcast %union.anon.16* %cx_u11 to %struct.block*
  %blku_gimme = getelementptr inbounds %struct.block, %struct.block* %cx_blk12, i32 0, i32 1
  %18 = load i8, i8* %blku_gimme, align 1
  %conv = zext i8 %18 to i32
  store i32 %conv, i32* %gimme, align 4
  %19 = load %struct.sv**, %struct.sv*** %newsp, align 8
  store %struct.sv** %19, %struct.sv*** %mark, align 8
  %20 = load %struct.sv**, %struct.sv*** @PL_stack_base, align 8
  %21 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u13 = getelementptr inbounds %struct.context, %struct.context* %21, i32 0, i32 0
  %cx_blk14 = bitcast %union.anon.16* %cx_u13 to %struct.block*
  %blk_u = getelementptr inbounds %struct.block, %struct.block* %cx_blk14, i32 0, i32 8
  %blku_loop = bitcast %union.anon.20* %blk_u to %struct.block_loop*
  %resetsp = getelementptr inbounds %struct.block_loop, %struct.block_loop* %blku_loop, i32 0, i32 0
  %22 = load i32, i32* %resetsp, align 8
  %idx.ext15 = sext i32 %22 to i64
  %add.ptr16 = getelementptr inbounds %struct.sv*, %struct.sv** %20, i64 %idx.ext15
  store %struct.sv** %add.ptr16, %struct.sv*** %newsp, align 8
  %23 = load %struct.sv**, %struct.sv*** %newsp, align 8
  %24 = load %struct.sv**, %struct.sv*** %sp, align 8
  %25 = load %struct.sv**, %struct.sv*** %mark, align 8
  %26 = load i32, i32* %gimme, align 4
  %27 = load %struct.op*, %struct.op** @PL_op, align 8
  %op_private = getelementptr inbounds %struct.op, %struct.op* %27, i32 0, i32 6
  %28 = load i8, i8* %op_private, align 1
  %conv17 = zext i8 %28 to i32
  %and = and i32 %conv17, 128
  %tobool = icmp ne i32 %and, 0
  %call = call %struct.sv** @S_leave_common(%struct.sv** %23, %struct.sv** %24, %struct.sv** %25, i32 %26, i32 0, i1 zeroext %tobool)
  store %struct.sv** %call, %struct.sv*** %sp, align 8
  %29 = load %struct.sv**, %struct.sv*** %sp, align 8
  store %struct.sv** %29, %struct.sv*** @PL_stack_sp, align 8
  %30 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u18 = getelementptr inbounds %struct.context, %struct.context* %30, i32 0, i32 0
  %cx_subst = bitcast %union.anon.16* %cx_u18 to %struct.subst*
  %sbu_type = getelementptr inbounds %struct.subst, %struct.subst* %cx_subst, i32 0, i32 0
  %31 = load i8, i8* %sbu_type, align 8
  %conv19 = zext i8 %31 to i32
  %and20 = and i32 %conv19, 15
  %cmp = icmp eq i32 %and20, 6
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %32 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u22 = getelementptr inbounds %struct.context, %struct.context* %32, i32 0, i32 0
  %cx_blk23 = bitcast %union.anon.16* %cx_u22 to %struct.block*
  %blk_u24 = getelementptr inbounds %struct.block, %struct.block* %cx_blk23, i32 0, i32 8
  %blku_loop25 = bitcast %union.anon.20* %blk_u24 to %struct.block_loop*
  %state_u = getelementptr inbounds %struct.block_loop, %struct.block_loop* %blku_loop25, i32 0, i32 3
  %lazysv = bitcast %union.anon.22* %state_u to %struct.anon.25*
  %cur = getelementptr inbounds %struct.anon.25, %struct.anon.25* %lazysv, i32 0, i32 0
  %33 = load %struct.sv*, %struct.sv** %cur, align 8
  %34 = bitcast %struct.sv* %33 to i8*
  %35 = bitcast i8* %34 to %struct.sv*
  call void @S_SvREFCNT_dec_NN(%struct.sv* %35)
  %36 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u26 = getelementptr inbounds %struct.context, %struct.context* %36, i32 0, i32 0
  %cx_blk27 = bitcast %union.anon.16* %cx_u26 to %struct.block*
  %blk_u28 = getelementptr inbounds %struct.block, %struct.block* %cx_blk27, i32 0, i32 8
  %blku_loop29 = bitcast %union.anon.20* %blk_u28 to %struct.block_loop*
  %state_u30 = getelementptr inbounds %struct.block_loop, %struct.block_loop* %blku_loop29, i32 0, i32 3
  %lazysv31 = bitcast %union.anon.22* %state_u30 to %struct.anon.25*
  %end = getelementptr inbounds %struct.anon.25, %struct.anon.25* %lazysv31, i32 0, i32 1
  %37 = load %struct.sv*, %struct.sv** %end, align 8
  %38 = bitcast %struct.sv* %37 to i8*
  %39 = bitcast i8* %38 to %struct.sv*
  call void @S_SvREFCNT_dec_NN(%struct.sv* %39)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %40 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u32 = getelementptr inbounds %struct.context, %struct.context* %40, i32 0, i32 0
  %cx_subst33 = bitcast %union.anon.16* %cx_u32 to %struct.subst*
  %sbu_type34 = getelementptr inbounds %struct.subst, %struct.subst* %cx_subst33, i32 0, i32 0
  %41 = load i8, i8* %sbu_type34, align 8
  %conv35 = zext i8 %41 to i32
  %and36 = and i32 %conv35, 15
  %cmp37 = icmp eq i32 %and36, 4
  br i1 %cmp37, label %if.then39, label %if.end46

if.then39:                                        ; preds = %if.end
  %42 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u40 = getelementptr inbounds %struct.context, %struct.context* %42, i32 0, i32 0
  %cx_blk41 = bitcast %union.anon.16* %cx_u40 to %struct.block*
  %blk_u42 = getelementptr inbounds %struct.block, %struct.block* %cx_blk41, i32 0, i32 8
  %blku_loop43 = bitcast %union.anon.20* %blk_u42 to %struct.block_loop*
  %state_u44 = getelementptr inbounds %struct.block_loop, %struct.block_loop* %blku_loop43, i32 0, i32 3
  %ary = bitcast %union.anon.22* %state_u44 to %struct.anon.23*
  %ary45 = getelementptr inbounds %struct.anon.23, %struct.anon.23* %ary, i32 0, i32 0
  %43 = load %struct.av*, %struct.av** %ary45, align 8
  %44 = bitcast %struct.av* %43 to i8*
  %45 = bitcast i8* %44 to %struct.sv*
  call void @S_SvREFCNT_dec(%struct.sv* %45)
  br label %if.end46

if.end46:                                         ; preds = %if.then39, %if.end
  %46 = load %struct.pmop*, %struct.pmop** %newpm, align 8
  store %struct.pmop* %46, %struct.pmop** @PL_curpm, align 8
  call void @Perl_pop_scope()
  call void @Perl_pop_scope()
  %47 = load %struct.op*, %struct.op** @PL_op, align 8
  %op_next = getelementptr inbounds %struct.op, %struct.op* %47, i32 0, i32 0
  %48 = load %struct.op*, %struct.op** %op_next, align 8
  ret %struct.op* %48
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.op* @Perl_pp_return() #0 {
entry:
  %retval = alloca %struct.op*, align 8
  %sp = alloca %struct.sv**, align 8
  %mark = alloca %struct.sv**, align 8
  %cx = alloca %struct.context*, align 8
  %popsub2 = alloca i8, align 1
  %clear_errsv = alloca i8, align 1
  %lval = alloca i8, align 1
  %gimme = alloca i32, align 4
  %newsp = alloca %struct.sv**, align 8
  %newpm = alloca %struct.pmop*, align 8
  %optype = alloca i32, align 4
  %namesv = alloca %struct.sv*, align 8
  %sv = alloca %struct.sv*, align 8
  %retop = alloca %struct.op*, align 8
  %cxix = alloca i32, align 4
  %cv274 = alloca %struct.cv*, align 8
  %dfuot = alloca %struct.gv*, align 8
  %olddepth = alloca i32, align 4
  %fill = alloca i64, align 8
  %svp = alloca %struct.sv**, align 8
  %errsv = alloca %struct.sv*, align 8
  %0 = load %struct.sv**, %struct.sv*** @PL_stack_sp, align 8
  store %struct.sv** %0, %struct.sv*** %sp, align 8
  %1 = load %struct.sv**, %struct.sv*** @PL_stack_base, align 8
  %2 = load i32*, i32** @PL_markstack_ptr, align 8
  %incdec.ptr = getelementptr inbounds i32, i32* %2, i32 -1
  store i32* %incdec.ptr, i32** @PL_markstack_ptr, align 8
  %3 = load i32, i32* %2, align 4
  %idx.ext = sext i32 %3 to i64
  %add.ptr = getelementptr inbounds %struct.sv*, %struct.sv** %1, i64 %idx.ext
  store %struct.sv** %add.ptr, %struct.sv*** %mark, align 8
  store i8 0, i8* %popsub2, align 1
  store i8 0, i8* %clear_errsv, align 1
  store i8 0, i8* %lval, align 1
  store i32 0, i32* %optype, align 4
  store %struct.op* null, %struct.op** %retop, align 8
  %4 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %si_cxstack = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %4, i32 0, i32 1
  %5 = load %struct.context*, %struct.context** %si_cxstack, align 8
  %6 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %si_cxix = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %6, i32 0, i32 4
  %7 = load i32, i32* %si_cxix, align 8
  %call = call i32 @S_dopoptosub_at(%struct.context* %5, i32 %7)
  store i32 %call, i32* %cxix, align 4
  %8 = load i32, i32* %cxix, align 4
  %cmp = icmp slt i32 %8, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %9 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %si_cxstack1 = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %9, i32 0, i32 1
  %10 = load %struct.context*, %struct.context** %si_cxstack1, align 8
  %cx_u = getelementptr inbounds %struct.context, %struct.context* %10, i32 0, i32 0
  %cx_subst = bitcast %union.anon.16* %cx_u to %struct.subst*
  %sbu_type = getelementptr inbounds %struct.subst, %struct.subst* %cx_subst, i32 0, i32 0
  %11 = load i8, i8* %sbu_type, align 8
  %conv = zext i8 %11 to i32
  %and = and i32 %conv, 16
  %cmp2 = icmp eq i32 %and, 16
  br i1 %cmp2, label %if.then4, label %if.else

if.then4:                                         ; preds = %if.then
  call void @Perl_dounwind(i32 0)
  %12 = load %struct.sv**, %struct.sv*** @PL_stack_sp, align 8
  %13 = load %struct.sv*, %struct.sv** %12, align 8
  %14 = load %struct.sv**, %struct.sv*** @PL_stack_base, align 8
  %arrayidx = getelementptr inbounds %struct.sv*, %struct.sv** %14, i64 1
  store %struct.sv* %13, %struct.sv** %arrayidx, align 8
  %15 = load %struct.sv**, %struct.sv*** @PL_stack_base, align 8
  %add.ptr5 = getelementptr inbounds %struct.sv*, %struct.sv** %15, i64 1
  store %struct.sv** %add.ptr5, %struct.sv*** @PL_stack_sp, align 8
  store %struct.op* null, %struct.op** %retval, align 8
  br label %return

if.else:                                          ; preds = %if.then
  %call6 = call %struct.op* (i8*, ...) @Perl_die(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.27, i64 0, i64 0))
  store %struct.op* %call6, %struct.op** %retval, align 8
  br label %return

if.end:                                           ; preds = %entry
  %16 = load i32, i32* %cxix, align 4
  %17 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %si_cxix7 = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %17, i32 0, i32 4
  %18 = load i32, i32* %si_cxix7, align 8
  %cmp8 = icmp slt i32 %16, %18
  br i1 %cmp8, label %if.then10, label %if.end11

if.then10:                                        ; preds = %if.end
  %19 = load i32, i32* %cxix, align 4
  call void @Perl_dounwind(i32 %19)
  br label %if.end11

if.end11:                                         ; preds = %if.then10, %if.end
  %20 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %si_cxstack12 = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %20, i32 0, i32 1
  %21 = load %struct.context*, %struct.context** %si_cxstack12, align 8
  %22 = load i32, i32* %cxix, align 4
  %idxprom = sext i32 %22 to i64
  %arrayidx13 = getelementptr inbounds %struct.context, %struct.context* %21, i64 %idxprom
  %cx_u14 = getelementptr inbounds %struct.context, %struct.context* %arrayidx13, i32 0, i32 0
  %cx_subst15 = bitcast %union.anon.16* %cx_u14 to %struct.subst*
  %sbu_type16 = getelementptr inbounds %struct.subst, %struct.subst* %cx_subst15, i32 0, i32 0
  %23 = load i8, i8* %sbu_type16, align 8
  %conv17 = zext i8 %23 to i32
  %and18 = and i32 %conv17, 16
  %cmp19 = icmp eq i32 %and18, 16
  br i1 %cmp19, label %if.then21, label %if.end38

if.then21:                                        ; preds = %if.end11
  %24 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %si_cxstack22 = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %24, i32 0, i32 1
  %25 = load %struct.context*, %struct.context** %si_cxstack22, align 8
  %26 = load i32, i32* %cxix, align 4
  %idxprom23 = sext i32 %26 to i64
  %arrayidx24 = getelementptr inbounds %struct.context, %struct.context* %25, i64 %idxprom23
  %cx_u25 = getelementptr inbounds %struct.context, %struct.context* %arrayidx24, i32 0, i32 0
  %cx_blk = bitcast %union.anon.16* %cx_u25 to %struct.block*
  %blku_gimme = getelementptr inbounds %struct.block, %struct.block* %cx_blk, i32 0, i32 1
  %27 = load i8, i8* %blku_gimme, align 1
  %conv26 = zext i8 %27 to i32
  store i32 %conv26, i32* %gimme, align 4
  %28 = load i32, i32* %gimme, align 4
  %cmp27 = icmp eq i32 %28, 1
  br i1 %cmp27, label %if.then29, label %if.else30

if.then29:                                        ; preds = %if.then21
  %29 = load %struct.sv**, %struct.sv*** @PL_stack_base, align 8
  store %struct.sv** %29, %struct.sv*** @PL_stack_sp, align 8
  br label %if.end37

if.else30:                                        ; preds = %if.then21
  %30 = load i32, i32* %gimme, align 4
  %cmp31 = icmp eq i32 %30, 2
  br i1 %cmp31, label %if.then33, label %if.end36

if.then33:                                        ; preds = %if.else30
  %31 = load %struct.sv**, %struct.sv*** @PL_stack_sp, align 8
  %32 = load %struct.sv*, %struct.sv** %31, align 8
  %33 = load %struct.sv**, %struct.sv*** @PL_stack_base, align 8
  %arrayidx34 = getelementptr inbounds %struct.sv*, %struct.sv** %33, i64 1
  store %struct.sv* %32, %struct.sv** %arrayidx34, align 8
  %34 = load %struct.sv**, %struct.sv*** @PL_stack_base, align 8
  %add.ptr35 = getelementptr inbounds %struct.sv*, %struct.sv** %34, i64 1
  store %struct.sv** %add.ptr35, %struct.sv*** @PL_stack_sp, align 8
  br label %if.end36

if.end36:                                         ; preds = %if.then33, %if.else30
  br label %if.end37

if.end37:                                         ; preds = %if.end36, %if.then29
  store %struct.op* null, %struct.op** %retval, align 8
  br label %return

if.end38:                                         ; preds = %if.end11
  %35 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %si_cxstack39 = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %35, i32 0, i32 1
  %36 = load %struct.context*, %struct.context** %si_cxstack39, align 8
  %37 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %si_cxix40 = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %37, i32 0, i32 4
  %38 = load i32, i32* %si_cxix40, align 8
  %dec = add nsw i32 %38, -1
  store i32 %dec, i32* %si_cxix40, align 8
  %idxprom41 = sext i32 %38 to i64
  %arrayidx42 = getelementptr inbounds %struct.context, %struct.context* %36, i64 %idxprom41
  store %struct.context* %arrayidx42, %struct.context** %cx, align 8
  %39 = load %struct.sv**, %struct.sv*** @PL_stack_base, align 8
  %40 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u43 = getelementptr inbounds %struct.context, %struct.context* %40, i32 0, i32 0
  %cx_blk44 = bitcast %union.anon.16* %cx_u43 to %struct.block*
  %blku_oldsp = getelementptr inbounds %struct.block, %struct.block* %cx_blk44, i32 0, i32 3
  %41 = load i32, i32* %blku_oldsp, align 4
  %idx.ext45 = sext i32 %41 to i64
  %add.ptr46 = getelementptr inbounds %struct.sv*, %struct.sv** %39, i64 %idx.ext45
  store %struct.sv** %add.ptr46, %struct.sv*** %newsp, align 8
  %42 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u47 = getelementptr inbounds %struct.context, %struct.context* %42, i32 0, i32 0
  %cx_blk48 = bitcast %union.anon.16* %cx_u47 to %struct.block*
  %blku_oldcop = getelementptr inbounds %struct.block, %struct.block* %cx_blk48, i32 0, i32 4
  %43 = load %struct.cop*, %struct.cop** %blku_oldcop, align 8
  store %struct.cop* %43, %struct.cop** @PL_curcop, align 8
  %44 = load i32*, i32** @PL_markstack, align 8
  %45 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u49 = getelementptr inbounds %struct.context, %struct.context* %45, i32 0, i32 0
  %cx_blk50 = bitcast %union.anon.16* %cx_u49 to %struct.block*
  %blku_oldmarksp = getelementptr inbounds %struct.block, %struct.block* %cx_blk50, i32 0, i32 5
  %46 = load i32, i32* %blku_oldmarksp, align 8
  %idx.ext51 = sext i32 %46 to i64
  %add.ptr52 = getelementptr inbounds i32, i32* %44, i64 %idx.ext51
  store i32* %add.ptr52, i32** @PL_markstack_ptr, align 8
  %47 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u53 = getelementptr inbounds %struct.context, %struct.context* %47, i32 0, i32 0
  %cx_blk54 = bitcast %union.anon.16* %cx_u53 to %struct.block*
  %blku_oldscopesp = getelementptr inbounds %struct.block, %struct.block* %cx_blk54, i32 0, i32 6
  %48 = load i32, i32* %blku_oldscopesp, align 4
  store i32 %48, i32* @PL_scopestack_ix, align 4
  %49 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u55 = getelementptr inbounds %struct.context, %struct.context* %49, i32 0, i32 0
  %cx_blk56 = bitcast %union.anon.16* %cx_u55 to %struct.block*
  %blku_oldpm = getelementptr inbounds %struct.block, %struct.block* %cx_blk56, i32 0, i32 7
  %50 = load %struct.pmop*, %struct.pmop** %blku_oldpm, align 8
  store %struct.pmop* %50, %struct.pmop** %newpm, align 8
  %51 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u57 = getelementptr inbounds %struct.context, %struct.context* %51, i32 0, i32 0
  %cx_blk58 = bitcast %union.anon.16* %cx_u57 to %struct.block*
  %blku_gimme59 = getelementptr inbounds %struct.block, %struct.block* %cx_blk58, i32 0, i32 1
  %52 = load i8, i8* %blku_gimme59, align 1
  %conv60 = zext i8 %52 to i32
  store i32 %conv60, i32* %gimme, align 4
  %53 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u61 = getelementptr inbounds %struct.context, %struct.context* %53, i32 0, i32 0
  %cx_subst62 = bitcast %union.anon.16* %cx_u61 to %struct.subst*
  %sbu_type63 = getelementptr inbounds %struct.subst, %struct.subst* %cx_subst62, i32 0, i32 0
  %54 = load i8, i8* %sbu_type63, align 8
  %conv64 = zext i8 %54 to i32
  %and65 = and i32 %conv64, 15
  switch i32 %and65, label %sw.default [
    i32 8, label %sw.bb
    i32 10, label %sw.bb76
    i32 9, label %sw.bb260
  ]

sw.bb:                                            ; preds = %if.end38
  store i8 1, i8* %popsub2, align 1
  %55 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u66 = getelementptr inbounds %struct.context, %struct.context* %55, i32 0, i32 0
  %cx_blk67 = bitcast %union.anon.16* %cx_u66 to %struct.block*
  %blk_u = getelementptr inbounds %struct.block, %struct.block* %cx_blk67, i32 0, i32 8
  %blku_sub = bitcast %union.anon.20* %blk_u to %struct.block_sub*
  %cv = getelementptr inbounds %struct.block_sub, %struct.block_sub* %blku_sub, i32 0, i32 1
  %56 = load %struct.cv*, %struct.cv** %cv, align 8
  %sv_any = getelementptr inbounds %struct.cv, %struct.cv* %56, i32 0, i32 0
  %57 = load %struct.xpvcv*, %struct.xpvcv** %sv_any, align 8
  %58 = bitcast %struct.xpvcv* %57 to i8*
  %59 = bitcast i8* %58 to %struct.xpvcv*
  %xcv_flags = getelementptr inbounds %struct.xpvcv, %struct.xpvcv* %59, i32 0, i32 12
  %60 = load i32, i32* %xcv_flags, align 4
  %and68 = and i32 %60, 2
  %tobool = icmp ne i32 %and68, 0
  %lnot = xor i1 %tobool, true
  %lnot69 = xor i1 %lnot, true
  %frombool = zext i1 %lnot69 to i8
  store i8 %frombool, i8* %lval, align 1
  %61 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u70 = getelementptr inbounds %struct.context, %struct.context* %61, i32 0, i32 0
  %cx_blk71 = bitcast %union.anon.16* %cx_u70 to %struct.block*
  %blk_u72 = getelementptr inbounds %struct.block, %struct.block* %cx_blk71, i32 0, i32 8
  %blku_sub73 = bitcast %union.anon.20* %blk_u72 to %struct.block_sub*
  %retop74 = getelementptr inbounds %struct.block_sub, %struct.block_sub* %blku_sub73, i32 0, i32 0
  %62 = load %struct.op*, %struct.op** %retop74, align 8
  store %struct.op* %62, %struct.op** %retop, align 8
  %63 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %si_cxix75 = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %63, i32 0, i32 4
  %64 = load i32, i32* %si_cxix75, align 8
  %inc = add nsw i32 %64, 1
  store i32 %inc, i32* %si_cxix75, align 8
  br label %sw.epilog

sw.bb76:                                          ; preds = %if.end38
  %65 = load i8, i8* @PL_in_eval, align 1
  %conv77 = zext i8 %65 to i32
  %and78 = and i32 %conv77, 4
  %tobool79 = icmp ne i32 %and78, 0
  br i1 %tobool79, label %if.end81, label %if.then80

if.then80:                                        ; preds = %sw.bb76
  store i8 1, i8* %clear_errsv, align 1
  br label %if.end81

if.end81:                                         ; preds = %if.then80, %sw.bb76
  br label %do.body

do.body:                                          ; preds = %if.end81
  %66 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u82 = getelementptr inbounds %struct.context, %struct.context* %66, i32 0, i32 0
  %cx_blk83 = bitcast %union.anon.16* %cx_u82 to %struct.block*
  %blku_u16 = getelementptr inbounds %struct.block, %struct.block* %cx_blk83, i32 0, i32 2
  %67 = load i16, i16* %blku_u16, align 2
  %conv84 = zext i16 %67 to i32
  %and85 = and i32 %conv84, 127
  %conv86 = trunc i32 %and85 to i8
  store i8 %conv86, i8* @PL_in_eval, align 1
  %68 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u87 = getelementptr inbounds %struct.context, %struct.context* %68, i32 0, i32 0
  %cx_blk88 = bitcast %union.anon.16* %cx_u87 to %struct.block*
  %blku_u1689 = getelementptr inbounds %struct.block, %struct.block* %cx_blk88, i32 0, i32 2
  %69 = load i16, i16* %blku_u1689, align 2
  %conv90 = zext i16 %69 to i32
  %shr = ashr i32 %conv90, 7
  store i32 %shr, i32* %optype, align 4
  %70 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u91 = getelementptr inbounds %struct.context, %struct.context* %70, i32 0, i32 0
  %cx_blk92 = bitcast %union.anon.16* %cx_u91 to %struct.block*
  %blk_u93 = getelementptr inbounds %struct.block, %struct.block* %cx_blk92, i32 0, i32 8
  %blku_eval = bitcast %union.anon.20* %blk_u93 to %struct.block_eval*
  %old_eval_root = getelementptr inbounds %struct.block_eval, %struct.block_eval* %blku_eval, i32 0, i32 2
  %71 = load %struct.op*, %struct.op** %old_eval_root, align 8
  store %struct.op* %71, %struct.op** @PL_eval_root, align 8
  %72 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u94 = getelementptr inbounds %struct.context, %struct.context* %72, i32 0, i32 0
  %cx_blk95 = bitcast %union.anon.16* %cx_u94 to %struct.block*
  %blk_u96 = getelementptr inbounds %struct.block, %struct.block* %cx_blk95, i32 0, i32 8
  %blku_eval97 = bitcast %union.anon.20* %blk_u96 to %struct.block_eval*
  %cur_text = getelementptr inbounds %struct.block_eval, %struct.block_eval* %blku_eval97, i32 0, i32 3
  %73 = load %struct.sv*, %struct.sv** %cur_text, align 8
  %tobool98 = icmp ne %struct.sv* %73, null
  br i1 %tobool98, label %land.lhs.true, label %if.end113

land.lhs.true:                                    ; preds = %do.body
  %74 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u99 = getelementptr inbounds %struct.context, %struct.context* %74, i32 0, i32 0
  %cx_blk100 = bitcast %union.anon.16* %cx_u99 to %struct.block*
  %blk_u101 = getelementptr inbounds %struct.block, %struct.block* %cx_blk100, i32 0, i32 8
  %blku_eval102 = bitcast %union.anon.20* %blk_u101 to %struct.block_eval*
  %cur_text103 = getelementptr inbounds %struct.block_eval, %struct.block_eval* %blku_eval102, i32 0, i32 3
  %75 = load %struct.sv*, %struct.sv** %cur_text103, align 8
  %sv_flags = getelementptr inbounds %struct.sv, %struct.sv* %75, i32 0, i32 2
  %76 = load i32, i32* %sv_flags, align 4
  %and104 = and i32 %76, 49152
  %cmp105 = icmp eq i32 %and104, 49152
  br i1 %cmp105, label %if.then107, label %if.end113

if.then107:                                       ; preds = %land.lhs.true
  %77 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u108 = getelementptr inbounds %struct.context, %struct.context* %77, i32 0, i32 0
  %cx_blk109 = bitcast %union.anon.16* %cx_u108 to %struct.block*
  %blk_u110 = getelementptr inbounds %struct.block, %struct.block* %cx_blk109, i32 0, i32 8
  %blku_eval111 = bitcast %union.anon.20* %blk_u110 to %struct.block_eval*
  %cur_text112 = getelementptr inbounds %struct.block_eval, %struct.block_eval* %blku_eval111, i32 0, i32 3
  %78 = load %struct.sv*, %struct.sv** %cur_text112, align 8
  %79 = bitcast %struct.sv* %78 to i8*
  %80 = bitcast i8* %79 to %struct.sv*
  call void @S_SvREFCNT_dec_NN(%struct.sv* %80)
  br label %if.end113

if.end113:                                        ; preds = %if.then107, %land.lhs.true, %do.body
  %81 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u114 = getelementptr inbounds %struct.context, %struct.context* %81, i32 0, i32 0
  %cx_blk115 = bitcast %union.anon.16* %cx_u114 to %struct.block*
  %blk_u116 = getelementptr inbounds %struct.block, %struct.block* %cx_blk115, i32 0, i32 8
  %blku_eval117 = bitcast %union.anon.20* %blk_u116 to %struct.block_eval*
  %old_namesv = getelementptr inbounds %struct.block_eval, %struct.block_eval* %blku_eval117, i32 0, i32 1
  %82 = load %struct.sv*, %struct.sv** %old_namesv, align 8
  %tobool118 = icmp ne %struct.sv* %82, null
  br i1 %tobool118, label %if.then119, label %if.end126

if.then119:                                       ; preds = %if.end113
  %83 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u120 = getelementptr inbounds %struct.context, %struct.context* %83, i32 0, i32 0
  %cx_blk121 = bitcast %union.anon.16* %cx_u120 to %struct.block*
  %blk_u122 = getelementptr inbounds %struct.block, %struct.block* %cx_blk121, i32 0, i32 8
  %blku_eval123 = bitcast %union.anon.20* %blk_u122 to %struct.block_eval*
  %old_namesv124 = getelementptr inbounds %struct.block_eval, %struct.block_eval* %blku_eval123, i32 0, i32 1
  %84 = load %struct.sv*, %struct.sv** %old_namesv124, align 8
  %call125 = call %struct.sv* @Perl_sv_2mortal(%struct.sv* %84)
  br label %if.end126

if.end126:                                        ; preds = %if.then119, %if.end113
  br label %do.end

do.end:                                           ; preds = %if.end126
  %85 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u127 = getelementptr inbounds %struct.context, %struct.context* %85, i32 0, i32 0
  %cx_blk128 = bitcast %union.anon.16* %cx_u127 to %struct.block*
  %blk_u129 = getelementptr inbounds %struct.block, %struct.block* %cx_blk128, i32 0, i32 8
  %blku_eval130 = bitcast %union.anon.20* %blk_u129 to %struct.block_eval*
  %old_namesv131 = getelementptr inbounds %struct.block_eval, %struct.block_eval* %blku_eval130, i32 0, i32 1
  %86 = load %struct.sv*, %struct.sv** %old_namesv131, align 8
  store %struct.sv* %86, %struct.sv** %namesv, align 8
  %87 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u132 = getelementptr inbounds %struct.context, %struct.context* %87, i32 0, i32 0
  %cx_blk133 = bitcast %union.anon.16* %cx_u132 to %struct.block*
  %blk_u134 = getelementptr inbounds %struct.block, %struct.block* %cx_blk133, i32 0, i32 8
  %blku_eval135 = bitcast %union.anon.20* %blk_u134 to %struct.block_eval*
  %retop136 = getelementptr inbounds %struct.block_eval, %struct.block_eval* %blku_eval135, i32 0, i32 0
  %88 = load %struct.op*, %struct.op** %retop136, align 8
  store %struct.op* %88, %struct.op** %retop, align 8
  %89 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u137 = getelementptr inbounds %struct.context, %struct.context* %89, i32 0, i32 0
  %cx_subst138 = bitcast %union.anon.16* %cx_u137 to %struct.subst*
  %sbu_type139 = getelementptr inbounds %struct.subst, %struct.subst* %cx_subst138, i32 0, i32 0
  %90 = load i8, i8* %sbu_type139, align 8
  %conv140 = zext i8 %90 to i32
  %and141 = and i32 %conv140, 79
  %cmp142 = icmp eq i32 %and141, 74
  br i1 %cmp142, label %if.then144, label %if.end145

if.then144:                                       ; preds = %do.end
  br label %sw.epilog

if.end145:                                        ; preds = %do.end
  %91 = load i32, i32* %optype, align 4
  %cmp146 = icmp eq i32 %91, 339
  br i1 %cmp146, label %land.lhs.true148, label %if.end259

land.lhs.true148:                                 ; preds = %if.end145
  %92 = load %struct.sv**, %struct.sv*** %mark, align 8
  %93 = load %struct.sv**, %struct.sv*** %sp, align 8
  %cmp149 = icmp eq %struct.sv** %92, %93
  br i1 %cmp149, label %if.then226, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true148
  %94 = load i32, i32* %gimme, align 4
  %cmp151 = icmp eq i32 %94, 2
  br i1 %cmp151, label %land.lhs.true153, label %if.end259

land.lhs.true153:                                 ; preds = %lor.lhs.false
  %95 = load %struct.sv**, %struct.sv*** %sp, align 8
  %96 = load %struct.sv*, %struct.sv** %95, align 8
  %tobool154 = icmp ne %struct.sv* %96, null
  br i1 %tobool154, label %cond.true, label %cond.false

cond.true:                                        ; preds = %land.lhs.true153
  br i1 true, label %land.lhs.true155, label %if.then226

cond.false:                                       ; preds = %land.lhs.true153
  br i1 false, label %land.lhs.true155, label %if.then226

land.lhs.true155:                                 ; preds = %cond.false, %cond.true
  %97 = load %struct.sv**, %struct.sv*** %sp, align 8
  %98 = load %struct.sv*, %struct.sv** %97, align 8
  %sv_flags156 = getelementptr inbounds %struct.sv, %struct.sv* %98, i32 0, i32 2
  %99 = load i32, i32* %sv_flags156, align 4
  %and157 = and i32 %99, 2097152
  %tobool158 = icmp ne i32 %and157, 0
  br i1 %tobool158, label %cond.true159, label %cond.false160

cond.true159:                                     ; preds = %land.lhs.true155
  br i1 true, label %cond.true161, label %cond.false164

cond.false160:                                    ; preds = %land.lhs.true155
  br i1 false, label %cond.true161, label %cond.false164

cond.true161:                                     ; preds = %cond.false160, %cond.true159
  %100 = load %struct.sv**, %struct.sv*** %sp, align 8
  %101 = load %struct.sv*, %struct.sv** %100, align 8
  %call162 = call zeroext i1 @Perl_sv_2bool_flags(%struct.sv* %101, i32 2)
  br i1 %call162, label %if.end259, label %if.then226

cond.false164:                                    ; preds = %cond.false160, %cond.true159
  %102 = load %struct.sv**, %struct.sv*** %sp, align 8
  %103 = load %struct.sv*, %struct.sv** %102, align 8
  %sv_flags165 = getelementptr inbounds %struct.sv, %struct.sv* %103, i32 0, i32 2
  %104 = load i32, i32* %sv_flags165, align 4
  %and166 = and i32 %104, 65280
  %tobool167 = icmp ne i32 %and166, 0
  br i1 %tobool167, label %cond.false179, label %lor.lhs.false168

lor.lhs.false168:                                 ; preds = %cond.false164
  %105 = load %struct.sv**, %struct.sv*** %sp, align 8
  %106 = load %struct.sv*, %struct.sv** %105, align 8
  %sv_flags169 = getelementptr inbounds %struct.sv, %struct.sv* %106, i32 0, i32 2
  %107 = load i32, i32* %sv_flags169, align 4
  %and170 = and i32 %107, 255
  %cmp171 = icmp eq i32 %and170, 8
  br i1 %cmp171, label %cond.false179, label %lor.lhs.false173

lor.lhs.false173:                                 ; preds = %lor.lhs.false168
  %108 = load %struct.sv**, %struct.sv*** %sp, align 8
  %109 = load %struct.sv*, %struct.sv** %108, align 8
  %sv_flags174 = getelementptr inbounds %struct.sv, %struct.sv* %109, i32 0, i32 2
  %110 = load i32, i32* %sv_flags174, align 4
  %and175 = and i32 %110, 16826623
  %cmp176 = icmp eq i32 %and175, 16777226
  br i1 %cmp176, label %cond.false179, label %cond.true178

cond.true178:                                     ; preds = %lor.lhs.false173
  br i1 false, label %if.end259, label %if.then226

cond.false179:                                    ; preds = %lor.lhs.false173, %lor.lhs.false168, %cond.false164
  %111 = load %struct.sv**, %struct.sv*** %sp, align 8
  %112 = load %struct.sv*, %struct.sv** %111, align 8
  %sv_flags180 = getelementptr inbounds %struct.sv, %struct.sv* %112, i32 0, i32 2
  %113 = load i32, i32* %sv_flags180, align 4
  %and181 = and i32 %113, 1024
  %tobool182 = icmp ne i32 %and181, 0
  br i1 %tobool182, label %cond.true183, label %cond.false198

cond.true183:                                     ; preds = %cond.false179
  %114 = load %struct.sv**, %struct.sv*** %sp, align 8
  %115 = load %struct.sv*, %struct.sv** %114, align 8
  %sv_any184 = getelementptr inbounds %struct.sv, %struct.sv* %115, i32 0, i32 0
  %116 = load i8*, i8** %sv_any184, align 8
  %117 = bitcast i8* %116 to %struct.xpv*
  %tobool185 = icmp ne %struct.xpv* %117, null
  br i1 %tobool185, label %land.lhs.true186, label %if.then226

land.lhs.true186:                                 ; preds = %cond.true183
  %118 = load %struct.sv**, %struct.sv*** %sp, align 8
  %119 = load %struct.sv*, %struct.sv** %118, align 8
  %sv_any187 = getelementptr inbounds %struct.sv, %struct.sv* %119, i32 0, i32 0
  %120 = load i8*, i8** %sv_any187, align 8
  %121 = bitcast i8* %120 to %struct.xpv*
  %xpv_cur = getelementptr inbounds %struct.xpv, %struct.xpv* %121, i32 0, i32 2
  %122 = load i64, i64* %xpv_cur, align 8
  %cmp188 = icmp ugt i64 %122, 1
  br i1 %cmp188, label %if.end259, label %lor.lhs.false190

lor.lhs.false190:                                 ; preds = %land.lhs.true186
  %123 = load %struct.sv**, %struct.sv*** %sp, align 8
  %124 = load %struct.sv*, %struct.sv** %123, align 8
  %sv_any191 = getelementptr inbounds %struct.sv, %struct.sv* %124, i32 0, i32 0
  %125 = load i8*, i8** %sv_any191, align 8
  %126 = bitcast i8* %125 to %struct.xpv*
  %xpv_cur192 = getelementptr inbounds %struct.xpv, %struct.xpv* %126, i32 0, i32 2
  %127 = load i64, i64* %xpv_cur192, align 8
  %tobool193 = icmp ne i64 %127, 0
  br i1 %tobool193, label %land.lhs.true194, label %if.then226

land.lhs.true194:                                 ; preds = %lor.lhs.false190
  %128 = load %struct.sv**, %struct.sv*** %sp, align 8
  %129 = load %struct.sv*, %struct.sv** %128, align 8
  %sv_u = getelementptr inbounds %struct.sv, %struct.sv* %129, i32 0, i32 3
  %svu_pv = bitcast %union.anon* %sv_u to i8**
  %130 = load i8*, i8** %svu_pv, align 8
  %131 = load i8, i8* %130, align 1
  %conv195 = sext i8 %131 to i32
  %cmp196 = icmp ne i32 %conv195, 48
  br i1 %cmp196, label %if.end259, label %if.then226

cond.false198:                                    ; preds = %cond.false179
  %132 = load %struct.sv**, %struct.sv*** %sp, align 8
  %133 = load %struct.sv*, %struct.sv** %132, align 8
  %sv_flags199 = getelementptr inbounds %struct.sv, %struct.sv* %133, i32 0, i32 2
  %134 = load i32, i32* %sv_flags199, align 4
  %and200 = and i32 %134, 768
  %tobool201 = icmp ne i32 %and200, 0
  br i1 %tobool201, label %cond.true202, label %cond.false223

cond.true202:                                     ; preds = %cond.false198
  %135 = load %struct.sv**, %struct.sv*** %sp, align 8
  %136 = load %struct.sv*, %struct.sv** %135, align 8
  %sv_flags203 = getelementptr inbounds %struct.sv, %struct.sv* %136, i32 0, i32 2
  %137 = load i32, i32* %sv_flags203, align 4
  %and204 = and i32 %137, 256
  %tobool205 = icmp ne i32 %and204, 0
  br i1 %tobool205, label %land.lhs.true206, label %lor.lhs.false210

land.lhs.true206:                                 ; preds = %cond.true202
  %138 = load %struct.sv**, %struct.sv*** %sp, align 8
  %139 = load %struct.sv*, %struct.sv** %138, align 8
  %sv_any207 = getelementptr inbounds %struct.sv, %struct.sv* %139, i32 0, i32 0
  %140 = load i8*, i8** %sv_any207, align 8
  %141 = bitcast i8* %140 to %struct.xpviv*
  %xiv_u = getelementptr inbounds %struct.xpviv, %struct.xpviv* %141, i32 0, i32 4
  %xivu_iv = bitcast %union._xivu* %xiv_u to i64*
  %142 = load i64, i64* %xivu_iv, align 8
  %cmp208 = icmp ne i64 %142, 0
  br i1 %cmp208, label %if.end259, label %lor.lhs.false210

lor.lhs.false210:                                 ; preds = %land.lhs.true206, %cond.true202
  %143 = load %struct.sv**, %struct.sv*** %sp, align 8
  %144 = load %struct.sv*, %struct.sv** %143, align 8
  %sv_flags211 = getelementptr inbounds %struct.sv, %struct.sv* %144, i32 0, i32 2
  %145 = load i32, i32* %sv_flags211, align 4
  %and212 = and i32 %145, 512
  %tobool213 = icmp ne i32 %and212, 0
  br i1 %tobool213, label %land.lhs.true214, label %if.then226

land.lhs.true214:                                 ; preds = %lor.lhs.false210
  %146 = load %struct.sv**, %struct.sv*** %sp, align 8
  %147 = load %struct.sv*, %struct.sv** %146, align 8
  %sv_any215 = getelementptr inbounds %struct.sv, %struct.sv* %147, i32 0, i32 0
  %148 = load i8*, i8** %sv_any215, align 8
  %149 = bitcast i8* %148 to %struct.xpvnv*
  %xnv_u = getelementptr inbounds %struct.xpvnv, %struct.xpvnv* %149, i32 0, i32 5
  %xnv_nv = bitcast %union._xnvu* %xnv_u to double*
  %150 = load double, double* %xnv_nv, align 8
  %cmp216 = fcmp uno double %150, %150
  br i1 %cmp216, label %if.end259, label %lor.lhs.false217

lor.lhs.false217:                                 ; preds = %land.lhs.true214
  %151 = load %struct.sv**, %struct.sv*** %sp, align 8
  %152 = load %struct.sv*, %struct.sv** %151, align 8
  %sv_any218 = getelementptr inbounds %struct.sv, %struct.sv* %152, i32 0, i32 0
  %153 = load i8*, i8** %sv_any218, align 8
  %154 = bitcast i8* %153 to %struct.xpvnv*
  %xnv_u219 = getelementptr inbounds %struct.xpvnv, %struct.xpvnv* %154, i32 0, i32 5
  %xnv_nv220 = bitcast %union._xnvu* %xnv_u219 to double*
  %155 = load double, double* %xnv_nv220, align 8
  %cmp221 = fcmp une double %155, 0.000000e+00
  br i1 %cmp221, label %if.end259, label %if.then226

cond.false223:                                    ; preds = %cond.false198
  %156 = load %struct.sv**, %struct.sv*** %sp, align 8
  %157 = load %struct.sv*, %struct.sv** %156, align 8
  %call224 = call zeroext i1 @Perl_sv_2bool_flags(%struct.sv* %157, i32 0)
  br i1 %call224, label %if.end259, label %if.then226

if.then226:                                       ; preds = %cond.false223, %lor.lhs.false217, %lor.lhs.false210, %land.lhs.true194, %lor.lhs.false190, %cond.true183, %cond.true178, %cond.true161, %cond.false, %cond.true, %land.lhs.true148
  %158 = load %struct.gv*, %struct.gv** @PL_incgv, align 8
  %sv_u227 = getelementptr inbounds %struct.gv, %struct.gv* %158, i32 0, i32 3
  %svu_gp = bitcast %union.anon.4* %sv_u227 to %struct.gp**
  %159 = load %struct.gp*, %struct.gp** %svu_gp, align 8
  %add.ptr228 = getelementptr inbounds %struct.gp, %struct.gp* %159, i64 0
  %gp_hv = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr228, i32 0, i32 5
  %160 = load %struct.hv*, %struct.hv** %gp_hv, align 8
  %tobool229 = icmp ne %struct.hv* %160, null
  br i1 %tobool229, label %cond.true230, label %cond.false235

cond.true230:                                     ; preds = %if.then226
  %161 = load %struct.gv*, %struct.gv** @PL_incgv, align 8
  %sv_u231 = getelementptr inbounds %struct.gv, %struct.gv* %161, i32 0, i32 3
  %svu_gp232 = bitcast %union.anon.4* %sv_u231 to %struct.gp**
  %162 = load %struct.gp*, %struct.gp** %svu_gp232, align 8
  %add.ptr233 = getelementptr inbounds %struct.gp, %struct.gp* %162, i64 0
  %gp_hv234 = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr233, i32 0, i32 5
  %163 = load %struct.hv*, %struct.hv** %gp_hv234, align 8
  br label %cond.end

cond.false235:                                    ; preds = %if.then226
  %164 = load %struct.gv*, %struct.gv** @PL_incgv, align 8
  %call236 = call %struct.gv* @Perl_gv_add_by_type(%struct.gv* %164, i32 12)
  %sv_u237 = getelementptr inbounds %struct.gv, %struct.gv* %call236, i32 0, i32 3
  %svu_gp238 = bitcast %union.anon.4* %sv_u237 to %struct.gp**
  %165 = load %struct.gp*, %struct.gp** %svu_gp238, align 8
  %add.ptr239 = getelementptr inbounds %struct.gp, %struct.gp* %165, i64 0
  %gp_hv240 = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr239, i32 0, i32 5
  %166 = load %struct.hv*, %struct.hv** %gp_hv240, align 8
  br label %cond.end

cond.end:                                         ; preds = %cond.false235, %cond.true230
  %cond = phi %struct.hv* [ %163, %cond.true230 ], [ %166, %cond.false235 ]
  %167 = load %struct.sv*, %struct.sv** %namesv, align 8
  %sv_u241 = getelementptr inbounds %struct.sv, %struct.sv* %167, i32 0, i32 3
  %svu_pv242 = bitcast %union.anon* %sv_u241 to i8**
  %168 = load i8*, i8** %svu_pv242, align 8
  %add.ptr243 = getelementptr inbounds i8, i8* %168, i64 0
  %169 = load %struct.sv*, %struct.sv** %namesv, align 8
  %sv_flags244 = getelementptr inbounds %struct.sv, %struct.sv* %169, i32 0, i32 2
  %170 = load i32, i32* %sv_flags244, align 4
  %and245 = and i32 %170, 536870912
  %tobool246 = icmp ne i32 %and245, 0
  br i1 %tobool246, label %cond.true247, label %cond.false251

cond.true247:                                     ; preds = %cond.end
  %171 = load %struct.sv*, %struct.sv** %namesv, align 8
  %sv_any248 = getelementptr inbounds %struct.sv, %struct.sv* %171, i32 0, i32 0
  %172 = load i8*, i8** %sv_any248, align 8
  %173 = bitcast i8* %172 to %struct.xpv*
  %xpv_cur249 = getelementptr inbounds %struct.xpv, %struct.xpv* %173, i32 0, i32 2
  %174 = load i64, i64* %xpv_cur249, align 8
  %conv250 = trunc i64 %174 to i32
  %sub = sub nsw i32 0, %conv250
  br label %cond.end255

cond.false251:                                    ; preds = %cond.end
  %175 = load %struct.sv*, %struct.sv** %namesv, align 8
  %sv_any252 = getelementptr inbounds %struct.sv, %struct.sv* %175, i32 0, i32 0
  %176 = load i8*, i8** %sv_any252, align 8
  %177 = bitcast i8* %176 to %struct.xpv*
  %xpv_cur253 = getelementptr inbounds %struct.xpv, %struct.xpv* %177, i32 0, i32 2
  %178 = load i64, i64* %xpv_cur253, align 8
  %conv254 = trunc i64 %178 to i32
  br label %cond.end255

cond.end255:                                      ; preds = %cond.false251, %cond.true247
  %cond256 = phi i32 [ %sub, %cond.true247 ], [ %conv254, %cond.false251 ]
  %call257 = call i8* @Perl_hv_common_key_len(%struct.hv* %cond, i8* %add.ptr243, i32 %cond256, i32 68, %struct.sv* null, i32 0)
  %179 = bitcast i8* %call257 to %struct.sv*
  %180 = load %struct.sv*, %struct.sv** %namesv, align 8
  %181 = bitcast %struct.sv* %180 to i8*
  %call258 = call %struct.op* (i8*, ...) @Perl_die(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.28, i64 0, i64 0), i8* %181)
  store %struct.op* %call258, %struct.op** %retval, align 8
  br label %return

if.end259:                                        ; preds = %cond.false223, %lor.lhs.false217, %land.lhs.true214, %land.lhs.true206, %land.lhs.true194, %land.lhs.true186, %cond.true178, %cond.true161, %lor.lhs.false, %if.end145
  br label %sw.epilog

sw.bb260:                                         ; preds = %if.end38
  %182 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u261 = getelementptr inbounds %struct.context, %struct.context* %182, i32 0, i32 0
  %cx_blk262 = bitcast %union.anon.16* %cx_u261 to %struct.block*
  %blk_u263 = getelementptr inbounds %struct.block, %struct.block* %cx_blk262, i32 0, i32 8
  %blku_sub264 = bitcast %union.anon.20* %blk_u263 to %struct.block_sub*
  %retop265 = getelementptr inbounds %struct.block_sub, %struct.block_sub* %blku_sub264, i32 0, i32 0
  %183 = load %struct.op*, %struct.op** %retop265, align 8
  store %struct.op* %183, %struct.op** %retop, align 8
  br label %do.body266

do.body266:                                       ; preds = %sw.bb260
  %184 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u267 = getelementptr inbounds %struct.context, %struct.context* %184, i32 0, i32 0
  %cx_blk268 = bitcast %union.anon.16* %cx_u267 to %struct.block*
  %blku_u16269 = getelementptr inbounds %struct.block, %struct.block* %cx_blk268, i32 0, i32 2
  %185 = load i16, i16* %blku_u16269, align 2
  %conv270 = zext i16 %185 to i32
  %and271 = and i32 %conv270, 256
  %tobool272 = icmp ne i32 %and271, 0
  br i1 %tobool272, label %if.end316, label %if.then273

if.then273:                                       ; preds = %do.body266
  %186 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u275 = getelementptr inbounds %struct.context, %struct.context* %186, i32 0, i32 0
  %cx_blk276 = bitcast %union.anon.16* %cx_u275 to %struct.block*
  %blk_u277 = getelementptr inbounds %struct.block, %struct.block* %cx_blk276, i32 0, i32 8
  %blku_format = bitcast %union.anon.20* %blk_u277 to %struct.block_format*
  %cv278 = getelementptr inbounds %struct.block_format, %struct.block_format* %blku_format, i32 0, i32 1
  %187 = load %struct.cv*, %struct.cv** %cv278, align 8
  store %struct.cv* %187, %struct.cv** %cv274, align 8
  %188 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u279 = getelementptr inbounds %struct.context, %struct.context* %188, i32 0, i32 0
  %cx_blk280 = bitcast %union.anon.16* %cx_u279 to %struct.block*
  %blk_u281 = getelementptr inbounds %struct.block, %struct.block* %cx_blk280, i32 0, i32 8
  %blku_format282 = bitcast %union.anon.20* %blk_u281 to %struct.block_format*
  %dfoutgv = getelementptr inbounds %struct.block_format, %struct.block_format* %blku_format282, i32 0, i32 3
  %189 = load %struct.gv*, %struct.gv** %dfoutgv, align 8
  store %struct.gv* %189, %struct.gv** %dfuot, align 8
  %190 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u283 = getelementptr inbounds %struct.context, %struct.context* %190, i32 0, i32 0
  %cx_blk284 = bitcast %union.anon.16* %cx_u283 to %struct.block*
  %blku_u16285 = getelementptr inbounds %struct.block, %struct.block* %cx_blk284, i32 0, i32 2
  %191 = load i16, i16* %blku_u16285, align 2
  %conv286 = zext i16 %191 to i32
  %or = or i32 %conv286, 256
  %conv287 = trunc i32 %or to i16
  store i16 %conv287, i16* %blku_u16285, align 2
  %192 = load %struct.gv*, %struct.gv** %dfuot, align 8
  call void @Perl_setdefout(%struct.gv* %192)
  br label %do.body288

do.body288:                                       ; preds = %if.then273
  %193 = load i32, i32* @PL_savestack_ix, align 4
  %194 = load i32*, i32** @PL_scopestack, align 8
  %195 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u289 = getelementptr inbounds %struct.context, %struct.context* %195, i32 0, i32 0
  %cx_blk290 = bitcast %union.anon.16* %cx_u289 to %struct.block*
  %blku_oldscopesp291 = getelementptr inbounds %struct.block, %struct.block* %cx_blk290, i32 0, i32 6
  %196 = load i32, i32* %blku_oldscopesp291, align 4
  %sub292 = sub nsw i32 %196, 1
  %idxprom293 = sext i32 %sub292 to i64
  %arrayidx294 = getelementptr inbounds i32, i32* %194, i64 %idxprom293
  %197 = load i32, i32* %arrayidx294, align 4
  %cmp295 = icmp sgt i32 %193, %197
  br i1 %cmp295, label %if.then297, label %if.end304

if.then297:                                       ; preds = %do.body288
  %198 = load i32*, i32** @PL_scopestack, align 8
  %199 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u298 = getelementptr inbounds %struct.context, %struct.context* %199, i32 0, i32 0
  %cx_blk299 = bitcast %union.anon.16* %cx_u298 to %struct.block*
  %blku_oldscopesp300 = getelementptr inbounds %struct.block, %struct.block* %cx_blk299, i32 0, i32 6
  %200 = load i32, i32* %blku_oldscopesp300, align 4
  %sub301 = sub nsw i32 %200, 1
  %idxprom302 = sext i32 %sub301 to i64
  %arrayidx303 = getelementptr inbounds i32, i32* %198, i64 %idxprom302
  %201 = load i32, i32* %arrayidx303, align 4
  call void @Perl_leave_scope(i32 %201)
  br label %if.end304

if.end304:                                        ; preds = %if.then297, %do.body288
  br label %do.end305

do.end305:                                        ; preds = %if.end304
  %202 = load %struct.cv*, %struct.cv** %cv274, align 8
  %call306 = call i32* @S_CvDEPTHp(%struct.cv* %202)
  %203 = load i32, i32* %call306, align 4
  %dec307 = add nsw i32 %203, -1
  store i32 %dec307, i32* %call306, align 4
  %tobool308 = icmp ne i32 %dec307, 0
  br i1 %tobool308, label %if.end315, label %if.then309

if.then309:                                       ; preds = %do.end305
  %204 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u310 = getelementptr inbounds %struct.context, %struct.context* %204, i32 0, i32 0
  %cx_blk311 = bitcast %union.anon.16* %cx_u310 to %struct.block*
  %blk_u312 = getelementptr inbounds %struct.block, %struct.block* %cx_blk311, i32 0, i32 8
  %blku_format313 = bitcast %union.anon.20* %blk_u312 to %struct.block_format*
  %cv314 = getelementptr inbounds %struct.block_format, %struct.block_format* %blku_format313, i32 0, i32 1
  %205 = load %struct.cv*, %struct.cv** %cv314, align 8
  %206 = bitcast %struct.cv* %205 to i8*
  %207 = bitcast i8* %206 to %struct.sv*
  call void @S_SvREFCNT_dec_NN(%struct.sv* %207)
  br label %if.end315

if.end315:                                        ; preds = %if.then309, %do.end305
  %208 = load %struct.gv*, %struct.gv** %dfuot, align 8
  %209 = bitcast %struct.gv* %208 to i8*
  %210 = bitcast i8* %209 to %struct.sv*
  call void @S_SvREFCNT_dec_NN(%struct.sv* %210)
  br label %if.end316

if.end316:                                        ; preds = %if.end315, %do.body266
  br label %do.end317

do.end317:                                        ; preds = %if.end316
  br label %sw.epilog

sw.default:                                       ; preds = %if.end38
  %211 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u318 = getelementptr inbounds %struct.context, %struct.context* %211, i32 0, i32 0
  %cx_subst319 = bitcast %union.anon.16* %cx_u318 to %struct.subst*
  %sbu_type320 = getelementptr inbounds %struct.subst, %struct.subst* %cx_subst319, i32 0, i32 0
  %212 = load i8, i8* %sbu_type320, align 8
  %conv321 = zext i8 %212 to i32
  %and322 = and i32 %conv321, 15
  %call323 = call %struct.op* (i8*, ...) @Perl_die(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.29, i64 0, i64 0), i32 %and322)
  store %struct.op* %call323, %struct.op** %retval, align 8
  br label %return

sw.epilog:                                        ; preds = %do.end317, %if.end259, %if.then144, %sw.bb
  store i8 0, i8* @PL_tainted, align 1
  %213 = load i8, i8* %lval, align 1
  %tobool324 = trunc i8 %213 to i1
  br i1 %tobool324, label %if.then325, label %if.else326

if.then325:                                       ; preds = %sw.epilog
  %214 = load %struct.sv**, %struct.sv*** %mark, align 8
  %215 = load %struct.sv**, %struct.sv*** %sp, align 8
  %216 = load %struct.sv**, %struct.sv*** %newsp, align 8
  %217 = load i32, i32* %gimme, align 4
  %218 = load %struct.context*, %struct.context** %cx, align 8
  %219 = load %struct.pmop*, %struct.pmop** %newpm, align 8
  call void @S_return_lvalues(%struct.sv** %214, %struct.sv** %215, %struct.sv** %216, i32 %217, %struct.context* %218, %struct.pmop* %219)
  br label %if.end433

if.else326:                                       ; preds = %sw.epilog
  %220 = load i32, i32* %gimme, align 4
  %cmp327 = icmp eq i32 %220, 2
  br i1 %cmp327, label %if.then329, label %if.else404

if.then329:                                       ; preds = %if.else326
  %221 = load %struct.sv**, %struct.sv*** %mark, align 8
  %222 = load %struct.sv**, %struct.sv*** %sp, align 8
  %cmp330 = icmp ult %struct.sv** %221, %222
  br i1 %cmp330, label %if.then332, label %if.else401

if.then332:                                       ; preds = %if.then329
  %223 = load i8, i8* %popsub2, align 1
  %tobool333 = trunc i8 %223 to i1
  br i1 %tobool333, label %if.then334, label %if.else397

if.then334:                                       ; preds = %if.then332
  %224 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u335 = getelementptr inbounds %struct.context, %struct.context* %224, i32 0, i32 0
  %cx_blk336 = bitcast %union.anon.16* %cx_u335 to %struct.block*
  %blk_u337 = getelementptr inbounds %struct.block, %struct.block* %cx_blk336, i32 0, i32 8
  %blku_sub338 = bitcast %union.anon.20* %blk_u337 to %struct.block_sub*
  %cv339 = getelementptr inbounds %struct.block_sub, %struct.block_sub* %blku_sub338, i32 0, i32 1
  %225 = load %struct.cv*, %struct.cv** %cv339, align 8
  %tobool340 = icmp ne %struct.cv* %225, null
  br i1 %tobool340, label %land.lhs.true341, label %if.else378

land.lhs.true341:                                 ; preds = %if.then334
  %226 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u342 = getelementptr inbounds %struct.context, %struct.context* %226, i32 0, i32 0
  %cx_blk343 = bitcast %union.anon.16* %cx_u342 to %struct.block*
  %blk_u344 = getelementptr inbounds %struct.block, %struct.block* %cx_blk343, i32 0, i32 8
  %blku_sub345 = bitcast %union.anon.20* %blk_u344 to %struct.block_sub*
  %cv346 = getelementptr inbounds %struct.block_sub, %struct.block_sub* %blku_sub345, i32 0, i32 1
  %227 = load %struct.cv*, %struct.cv** %cv346, align 8
  %call347 = call i32* @S_CvDEPTHp(%struct.cv* %227)
  %228 = load i32, i32* %call347, align 4
  %cmp348 = icmp sgt i32 %228, 1
  br i1 %cmp348, label %if.then350, label %if.else378

if.then350:                                       ; preds = %land.lhs.true341
  %229 = load %struct.sv**, %struct.sv*** %sp, align 8
  %230 = load %struct.sv*, %struct.sv** %229, align 8
  %sv_flags351 = getelementptr inbounds %struct.sv, %struct.sv* %230, i32 0, i32 2
  %231 = load i32, i32* %sv_flags351, align 4
  %and352 = and i32 %231, 524288
  %tobool353 = icmp ne i32 %and352, 0
  br i1 %tobool353, label %land.lhs.true354, label %if.else369

land.lhs.true354:                                 ; preds = %if.then350
  %232 = load %struct.sv**, %struct.sv*** %sp, align 8
  %233 = load %struct.sv*, %struct.sv** %232, align 8
  %sv_refcnt = getelementptr inbounds %struct.sv, %struct.sv* %233, i32 0, i32 1
  %234 = load i32, i32* %sv_refcnt, align 8
  %cmp355 = icmp eq i32 %234, 1
  br i1 %cmp355, label %land.lhs.true357, label %if.else369

land.lhs.true357:                                 ; preds = %land.lhs.true354
  %235 = load %struct.sv**, %struct.sv*** %sp, align 8
  %236 = load %struct.sv*, %struct.sv** %235, align 8
  %sv_flags358 = getelementptr inbounds %struct.sv, %struct.sv* %236, i32 0, i32 2
  %237 = load i32, i32* %sv_flags358, align 4
  %and359 = and i32 %237, 14680064
  %tobool360 = icmp ne i32 %and359, 0
  br i1 %tobool360, label %if.else369, label %if.then361

if.then361:                                       ; preds = %land.lhs.true357
  %238 = load %struct.sv**, %struct.sv*** %sp, align 8
  %239 = load %struct.sv*, %struct.sv** %238, align 8
  %240 = bitcast %struct.sv* %239 to i8*
  %241 = bitcast i8* %240 to %struct.sv*
  %call362 = call %struct.sv* @S_SvREFCNT_inc(%struct.sv* %241)
  %242 = load %struct.sv**, %struct.sv*** %newsp, align 8
  %incdec.ptr363 = getelementptr inbounds %struct.sv*, %struct.sv** %242, i32 1
  store %struct.sv** %incdec.ptr363, %struct.sv*** %newsp, align 8
  store %struct.sv* %call362, %struct.sv** %incdec.ptr363, align 8
  %243 = load i64, i64* @PL_tmps_ix, align 8
  %244 = load i64, i64* @PL_tmps_floor, align 8
  %cmp364 = icmp sgt i64 %243, %244
  br i1 %cmp364, label %if.then366, label %if.end367

if.then366:                                       ; preds = %if.then361
  call void @Perl_free_tmps()
  br label %if.end367

if.end367:                                        ; preds = %if.then366, %if.then361
  %245 = load %struct.sv**, %struct.sv*** %newsp, align 8
  %246 = load %struct.sv*, %struct.sv** %245, align 8
  %call368 = call %struct.sv* @Perl_sv_2mortal(%struct.sv* %246)
  br label %if.end377

if.else369:                                       ; preds = %land.lhs.true357, %land.lhs.true354, %if.then350
  %247 = load %struct.sv**, %struct.sv*** %sp, align 8
  %248 = load %struct.sv*, %struct.sv** %247, align 8
  %249 = bitcast %struct.sv* %248 to i8*
  %250 = bitcast i8* %249 to %struct.sv*
  %call370 = call %struct.sv* @S_SvREFCNT_inc(%struct.sv* %250)
  store %struct.sv* %call370, %struct.sv** %sv, align 8
  %251 = load i64, i64* @PL_tmps_ix, align 8
  %252 = load i64, i64* @PL_tmps_floor, align 8
  %cmp371 = icmp sgt i64 %251, %252
  br i1 %cmp371, label %if.then373, label %if.end374

if.then373:                                       ; preds = %if.else369
  call void @Perl_free_tmps()
  br label %if.end374

if.end374:                                        ; preds = %if.then373, %if.else369
  %253 = load %struct.sv*, %struct.sv** %sv, align 8
  %call375 = call %struct.sv* @Perl_sv_mortalcopy_flags(%struct.sv* %253, i32 1538)
  %254 = load %struct.sv**, %struct.sv*** %newsp, align 8
  %incdec.ptr376 = getelementptr inbounds %struct.sv*, %struct.sv** %254, i32 1
  store %struct.sv** %incdec.ptr376, %struct.sv*** %newsp, align 8
  store %struct.sv* %call375, %struct.sv** %incdec.ptr376, align 8
  %255 = load %struct.sv*, %struct.sv** %sv, align 8
  %256 = bitcast %struct.sv* %255 to i8*
  %257 = bitcast i8* %256 to %struct.sv*
  call void @S_SvREFCNT_dec(%struct.sv* %257)
  br label %if.end377

if.end377:                                        ; preds = %if.end374, %if.end367
  br label %if.end396

if.else378:                                       ; preds = %land.lhs.true341, %if.then334
  %258 = load %struct.sv**, %struct.sv*** %sp, align 8
  %259 = load %struct.sv*, %struct.sv** %258, align 8
  %sv_flags379 = getelementptr inbounds %struct.sv, %struct.sv* %259, i32 0, i32 2
  %260 = load i32, i32* %sv_flags379, align 4
  %and380 = and i32 %260, 524288
  %tobool381 = icmp ne i32 %and380, 0
  br i1 %tobool381, label %land.lhs.true382, label %if.else392

land.lhs.true382:                                 ; preds = %if.else378
  %261 = load %struct.sv**, %struct.sv*** %sp, align 8
  %262 = load %struct.sv*, %struct.sv** %261, align 8
  %sv_refcnt383 = getelementptr inbounds %struct.sv, %struct.sv* %262, i32 0, i32 1
  %263 = load i32, i32* %sv_refcnt383, align 8
  %cmp384 = icmp eq i32 %263, 1
  br i1 %cmp384, label %land.lhs.true386, label %if.else392

land.lhs.true386:                                 ; preds = %land.lhs.true382
  %264 = load %struct.sv**, %struct.sv*** %sp, align 8
  %265 = load %struct.sv*, %struct.sv** %264, align 8
  %sv_flags387 = getelementptr inbounds %struct.sv, %struct.sv* %265, i32 0, i32 2
  %266 = load i32, i32* %sv_flags387, align 4
  %and388 = and i32 %266, 14680064
  %tobool389 = icmp ne i32 %and388, 0
  br i1 %tobool389, label %if.else392, label %if.then390

if.then390:                                       ; preds = %land.lhs.true386
  %267 = load %struct.sv**, %struct.sv*** %sp, align 8
  %268 = load %struct.sv*, %struct.sv** %267, align 8
  %269 = load %struct.sv**, %struct.sv*** %newsp, align 8
  %incdec.ptr391 = getelementptr inbounds %struct.sv*, %struct.sv** %269, i32 1
  store %struct.sv** %incdec.ptr391, %struct.sv*** %newsp, align 8
  store %struct.sv* %268, %struct.sv** %incdec.ptr391, align 8
  br label %if.end395

if.else392:                                       ; preds = %land.lhs.true386, %land.lhs.true382, %if.else378
  %270 = load %struct.sv**, %struct.sv*** %sp, align 8
  %271 = load %struct.sv*, %struct.sv** %270, align 8
  %call393 = call %struct.sv* @Perl_sv_mortalcopy_flags(%struct.sv* %271, i32 1538)
  %272 = load %struct.sv**, %struct.sv*** %newsp, align 8
  %incdec.ptr394 = getelementptr inbounds %struct.sv*, %struct.sv** %272, i32 1
  store %struct.sv** %incdec.ptr394, %struct.sv*** %newsp, align 8
  store %struct.sv* %call393, %struct.sv** %incdec.ptr394, align 8
  br label %if.end395

if.end395:                                        ; preds = %if.else392, %if.then390
  br label %if.end396

if.end396:                                        ; preds = %if.end395, %if.end377
  br label %if.end400

if.else397:                                       ; preds = %if.then332
  %273 = load %struct.sv**, %struct.sv*** %sp, align 8
  %274 = load %struct.sv*, %struct.sv** %273, align 8
  %call398 = call %struct.sv* @Perl_sv_mortalcopy_flags(%struct.sv* %274, i32 1538)
  %275 = load %struct.sv**, %struct.sv*** %newsp, align 8
  %incdec.ptr399 = getelementptr inbounds %struct.sv*, %struct.sv** %275, i32 1
  store %struct.sv** %incdec.ptr399, %struct.sv*** %newsp, align 8
  store %struct.sv* %call398, %struct.sv** %incdec.ptr399, align 8
  br label %if.end400

if.end400:                                        ; preds = %if.else397, %if.end396
  br label %if.end403

if.else401:                                       ; preds = %if.then329
  %276 = load %struct.sv**, %struct.sv*** %newsp, align 8
  %incdec.ptr402 = getelementptr inbounds %struct.sv*, %struct.sv** %276, i32 1
  store %struct.sv** %incdec.ptr402, %struct.sv*** %newsp, align 8
  store %struct.sv* @PL_sv_undef, %struct.sv** %incdec.ptr402, align 8
  br label %if.end403

if.end403:                                        ; preds = %if.else401, %if.end400
  br label %if.end432

if.else404:                                       ; preds = %if.else326
  %277 = load i32, i32* %gimme, align 4
  %cmp405 = icmp eq i32 %277, 3
  br i1 %cmp405, label %if.then407, label %if.end431

if.then407:                                       ; preds = %if.else404
  br label %while.cond

while.cond:                                       ; preds = %cond.end428, %if.then407
  %278 = load %struct.sv**, %struct.sv*** %mark, align 8
  %incdec.ptr408 = getelementptr inbounds %struct.sv*, %struct.sv** %278, i32 1
  store %struct.sv** %incdec.ptr408, %struct.sv*** %mark, align 8
  %279 = load %struct.sv**, %struct.sv*** %sp, align 8
  %cmp409 = icmp ule %struct.sv** %incdec.ptr408, %279
  br i1 %cmp409, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %280 = load i8, i8* %popsub2, align 1
  %tobool411 = trunc i8 %280 to i1
  br i1 %tobool411, label %land.lhs.true413, label %cond.false426

land.lhs.true413:                                 ; preds = %while.body
  %281 = load %struct.sv**, %struct.sv*** %mark, align 8
  %282 = load %struct.sv*, %struct.sv** %281, align 8
  %sv_flags414 = getelementptr inbounds %struct.sv, %struct.sv* %282, i32 0, i32 2
  %283 = load i32, i32* %sv_flags414, align 4
  %and415 = and i32 %283, 524288
  %tobool416 = icmp ne i32 %and415, 0
  br i1 %tobool416, label %land.lhs.true417, label %cond.false426

land.lhs.true417:                                 ; preds = %land.lhs.true413
  %284 = load %struct.sv**, %struct.sv*** %mark, align 8
  %285 = load %struct.sv*, %struct.sv** %284, align 8
  %sv_refcnt418 = getelementptr inbounds %struct.sv, %struct.sv* %285, i32 0, i32 1
  %286 = load i32, i32* %sv_refcnt418, align 8
  %cmp419 = icmp eq i32 %286, 1
  br i1 %cmp419, label %land.lhs.true421, label %cond.false426

land.lhs.true421:                                 ; preds = %land.lhs.true417
  %287 = load %struct.sv**, %struct.sv*** %mark, align 8
  %288 = load %struct.sv*, %struct.sv** %287, align 8
  %sv_flags422 = getelementptr inbounds %struct.sv, %struct.sv* %288, i32 0, i32 2
  %289 = load i32, i32* %sv_flags422, align 4
  %and423 = and i32 %289, 2097152
  %tobool424 = icmp ne i32 %and423, 0
  br i1 %tobool424, label %cond.false426, label %cond.true425

cond.true425:                                     ; preds = %land.lhs.true421
  %290 = load %struct.sv**, %struct.sv*** %mark, align 8
  %291 = load %struct.sv*, %struct.sv** %290, align 8
  br label %cond.end428

cond.false426:                                    ; preds = %land.lhs.true421, %land.lhs.true417, %land.lhs.true413, %while.body
  %292 = load %struct.sv**, %struct.sv*** %mark, align 8
  %293 = load %struct.sv*, %struct.sv** %292, align 8
  %call427 = call %struct.sv* @Perl_sv_mortalcopy_flags(%struct.sv* %293, i32 1538)
  br label %cond.end428

cond.end428:                                      ; preds = %cond.false426, %cond.true425
  %cond429 = phi %struct.sv* [ %291, %cond.true425 ], [ %call427, %cond.false426 ]
  %294 = load %struct.sv**, %struct.sv*** %newsp, align 8
  %incdec.ptr430 = getelementptr inbounds %struct.sv*, %struct.sv** %294, i32 1
  store %struct.sv** %incdec.ptr430, %struct.sv*** %newsp, align 8
  store %struct.sv* %cond429, %struct.sv** %incdec.ptr430, align 8
  store i8 0, i8* @PL_tainted, align 1
  br label %while.cond

while.end:                                        ; preds = %while.cond
  br label %if.end431

if.end431:                                        ; preds = %while.end, %if.else404
  br label %if.end432

if.end432:                                        ; preds = %if.end431, %if.end403
  %295 = load %struct.sv**, %struct.sv*** %newsp, align 8
  store %struct.sv** %295, %struct.sv*** @PL_stack_sp, align 8
  br label %if.end433

if.end433:                                        ; preds = %if.end432, %if.then325
  call void @Perl_pop_scope()
  %296 = load i8, i8* %popsub2, align 1
  %tobool434 = trunc i8 %296 to i1
  br i1 %tobool434, label %if.then435, label %if.else609

if.then435:                                       ; preds = %if.end433
  %297 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %si_cxix436 = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %297, i32 0, i32 4
  %298 = load i32, i32* %si_cxix436, align 8
  %dec437 = add nsw i32 %298, -1
  store i32 %dec437, i32* %si_cxix436, align 8
  br label %do.body438

do.body438:                                       ; preds = %if.then435
  %299 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u439 = getelementptr inbounds %struct.context, %struct.context* %299, i32 0, i32 0
  %cx_blk440 = bitcast %union.anon.16* %cx_u439 to %struct.block*
  %blk_u441 = getelementptr inbounds %struct.block, %struct.block* %cx_blk440, i32 0, i32 8
  %blku_sub442 = bitcast %union.anon.20* %blk_u441 to %struct.block_sub*
  %olddepth443 = getelementptr inbounds %struct.block_sub, %struct.block_sub* %blku_sub442, i32 0, i32 4
  %300 = load i32, i32* %olddepth443, align 8
  store i32 %300, i32* %olddepth, align 4
  %301 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u444 = getelementptr inbounds %struct.context, %struct.context* %301, i32 0, i32 0
  %cx_blk445 = bitcast %union.anon.16* %cx_u444 to %struct.block*
  %blku_u16446 = getelementptr inbounds %struct.block, %struct.block* %cx_blk445, i32 0, i32 2
  %302 = load i16, i16* %blku_u16446, align 2
  %conv447 = zext i16 %302 to i32
  %and448 = and i32 %conv447, 256
  %tobool449 = icmp ne i32 %and448, 0
  br i1 %tobool449, label %if.end578, label %if.then450

if.then450:                                       ; preds = %do.body438
  %303 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u451 = getelementptr inbounds %struct.context, %struct.context* %303, i32 0, i32 0
  %cx_blk452 = bitcast %union.anon.16* %cx_u451 to %struct.block*
  %blku_u16453 = getelementptr inbounds %struct.block, %struct.block* %cx_blk452, i32 0, i32 2
  %304 = load i16, i16* %blku_u16453, align 2
  %conv454 = zext i16 %304 to i32
  %or455 = or i32 %conv454, 256
  %conv456 = trunc i32 %or455 to i16
  store i16 %conv456, i16* %blku_u16453, align 2
  %305 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u457 = getelementptr inbounds %struct.context, %struct.context* %305, i32 0, i32 0
  %cx_subst458 = bitcast %union.anon.16* %cx_u457 to %struct.subst*
  %sbu_type459 = getelementptr inbounds %struct.subst, %struct.subst* %cx_subst458, i32 0, i32 0
  %306 = load i8, i8* %sbu_type459, align 8
  %conv460 = zext i8 %306 to i32
  %and461 = and i32 %conv460, 32
  %cmp462 = icmp eq i32 %and461, 32
  br i1 %cmp462, label %if.then464, label %if.end577

if.then464:                                       ; preds = %if.then450
  br label %do.body465

do.body465:                                       ; preds = %if.then464
  %307 = load %struct.gv*, %struct.gv** @PL_defgv, align 8
  %sv_u466 = getelementptr inbounds %struct.gv, %struct.gv* %307, i32 0, i32 3
  %svu_gp467 = bitcast %union.anon.4* %sv_u466 to %struct.gp**
  %308 = load %struct.gp*, %struct.gp** %svu_gp467, align 8
  %add.ptr468 = getelementptr inbounds %struct.gp, %struct.gp* %308, i64 0
  %gp_av = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr468, i32 0, i32 6
  %309 = load %struct.av*, %struct.av** %gp_av, align 8
  %310 = bitcast %struct.av* %309 to i8*
  %311 = bitcast i8* %310 to %struct.sv*
  call void @S_SvREFCNT_dec(%struct.sv* %311)
  %312 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u469 = getelementptr inbounds %struct.context, %struct.context* %312, i32 0, i32 0
  %cx_blk470 = bitcast %union.anon.16* %cx_u469 to %struct.block*
  %blk_u471 = getelementptr inbounds %struct.block, %struct.block* %cx_blk470, i32 0, i32 8
  %blku_sub472 = bitcast %union.anon.20* %blk_u471 to %struct.block_sub*
  %savearray = getelementptr inbounds %struct.block_sub, %struct.block_sub* %blku_sub472, i32 0, i32 2
  %313 = load %struct.av*, %struct.av** %savearray, align 8
  %314 = load %struct.gv*, %struct.gv** @PL_defgv, align 8
  %sv_u473 = getelementptr inbounds %struct.gv, %struct.gv* %314, i32 0, i32 3
  %svu_gp474 = bitcast %union.anon.4* %sv_u473 to %struct.gp**
  %315 = load %struct.gp*, %struct.gp** %svu_gp474, align 8
  %add.ptr475 = getelementptr inbounds %struct.gp, %struct.gp* %315, i64 0
  %gp_av476 = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr475, i32 0, i32 6
  store %struct.av* %313, %struct.av** %gp_av476, align 8
  br label %do.end477

do.end477:                                        ; preds = %do.body465
  %316 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u478 = getelementptr inbounds %struct.context, %struct.context* %316, i32 0, i32 0
  %cx_blk479 = bitcast %union.anon.16* %cx_u478 to %struct.block*
  %blk_u480 = getelementptr inbounds %struct.block, %struct.block* %cx_blk479, i32 0, i32 8
  %blku_sub481 = bitcast %union.anon.20* %blk_u480 to %struct.block_sub*
  %argarray = getelementptr inbounds %struct.block_sub, %struct.block_sub* %blku_sub481, i32 0, i32 3
  %317 = load %struct.av*, %struct.av** %argarray, align 8
  %sv_flags482 = getelementptr inbounds %struct.av, %struct.av* %317, i32 0, i32 2
  %318 = load i32, i32* %sv_flags482, align 4
  %and483 = and i32 %318, 1073741824
  %tobool484 = icmp ne i32 %and483, 0
  br i1 %tobool484, label %if.then485, label %if.else533

if.then485:                                       ; preds = %do.end477
  %319 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u486 = getelementptr inbounds %struct.context, %struct.context* %319, i32 0, i32 0
  %cx_blk487 = bitcast %union.anon.16* %cx_u486 to %struct.block*
  %blk_u488 = getelementptr inbounds %struct.block, %struct.block* %cx_blk487, i32 0, i32 8
  %blku_sub489 = bitcast %union.anon.20* %blk_u488 to %struct.block_sub*
  %argarray490 = getelementptr inbounds %struct.block_sub, %struct.block_sub* %blku_sub489, i32 0, i32 3
  %320 = load %struct.av*, %struct.av** %argarray490, align 8
  %sv_any491 = getelementptr inbounds %struct.av, %struct.av* %320, i32 0, i32 0
  %321 = load %struct.xpvav*, %struct.xpvav** %sv_any491, align 8
  %xav_fill = getelementptr inbounds %struct.xpvav, %struct.xpvav* %321, i32 0, i32 2
  %322 = load i64, i64* %xav_fill, align 8
  store i64 %322, i64* %fill, align 8
  %323 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u492 = getelementptr inbounds %struct.context, %struct.context* %323, i32 0, i32 0
  %cx_blk493 = bitcast %union.anon.16* %cx_u492 to %struct.block*
  %blk_u494 = getelementptr inbounds %struct.block, %struct.block* %cx_blk493, i32 0, i32 8
  %blku_sub495 = bitcast %union.anon.20* %blk_u494 to %struct.block_sub*
  %argarray496 = getelementptr inbounds %struct.block_sub, %struct.block_sub* %blku_sub495, i32 0, i32 3
  %324 = load %struct.av*, %struct.av** %argarray496, align 8
  %325 = bitcast %struct.av* %324 to i8*
  %326 = bitcast i8* %325 to %struct.sv*
  call void @S_SvREFCNT_dec_NN(%struct.sv* %326)
  %call497 = call %struct.sv* @Perl_newSV_type(i32 11)
  %327 = bitcast %struct.sv* %call497 to i8*
  %328 = bitcast i8* %327 to %struct.av*
  %329 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u498 = getelementptr inbounds %struct.context, %struct.context* %329, i32 0, i32 0
  %cx_blk499 = bitcast %union.anon.16* %cx_u498 to %struct.block*
  %blk_u500 = getelementptr inbounds %struct.block, %struct.block* %cx_blk499, i32 0, i32 8
  %blku_sub501 = bitcast %union.anon.20* %blk_u500 to %struct.block_sub*
  %argarray502 = getelementptr inbounds %struct.block_sub, %struct.block_sub* %blku_sub501, i32 0, i32 3
  store %struct.av* %328, %struct.av** %argarray502, align 8
  %330 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u503 = getelementptr inbounds %struct.context, %struct.context* %330, i32 0, i32 0
  %cx_blk504 = bitcast %union.anon.16* %cx_u503 to %struct.block*
  %blk_u505 = getelementptr inbounds %struct.block, %struct.block* %cx_blk504, i32 0, i32 8
  %blku_sub506 = bitcast %union.anon.20* %blk_u505 to %struct.block_sub*
  %argarray507 = getelementptr inbounds %struct.block_sub, %struct.block_sub* %blku_sub506, i32 0, i32 3
  %331 = load %struct.av*, %struct.av** %argarray507, align 8
  %332 = load i64, i64* %fill, align 8
  call void @Perl_av_extend(%struct.av* %331, i64 %332)
  %333 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u508 = getelementptr inbounds %struct.context, %struct.context* %333, i32 0, i32 0
  %cx_blk509 = bitcast %union.anon.16* %cx_u508 to %struct.block*
  %blk_u510 = getelementptr inbounds %struct.block, %struct.block* %cx_blk509, i32 0, i32 8
  %blku_sub511 = bitcast %union.anon.20* %blk_u510 to %struct.block_sub*
  %argarray512 = getelementptr inbounds %struct.block_sub, %struct.block_sub* %blku_sub511, i32 0, i32 3
  %334 = load %struct.av*, %struct.av** %argarray512, align 8
  %sv_flags513 = getelementptr inbounds %struct.av, %struct.av* %334, i32 0, i32 2
  %335 = load i32, i32* %sv_flags513, align 4
  %and514 = and i32 %335, -1073741825
  store i32 %and514, i32* %sv_flags513, align 4
  %336 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u515 = getelementptr inbounds %struct.context, %struct.context* %336, i32 0, i32 0
  %cx_blk516 = bitcast %union.anon.16* %cx_u515 to %struct.block*
  %blk_u517 = getelementptr inbounds %struct.block, %struct.block* %cx_blk516, i32 0, i32 8
  %blku_sub518 = bitcast %union.anon.20* %blk_u517 to %struct.block_sub*
  %argarray519 = getelementptr inbounds %struct.block_sub, %struct.block_sub* %blku_sub518, i32 0, i32 3
  %337 = load %struct.av*, %struct.av** %argarray519, align 8
  %sv_flags520 = getelementptr inbounds %struct.av, %struct.av* %337, i32 0, i32 2
  %338 = load i32, i32* %sv_flags520, align 4
  %or521 = or i32 %338, -2147483648
  store i32 %or521, i32* %sv_flags520, align 4
  %339 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u522 = getelementptr inbounds %struct.context, %struct.context* %339, i32 0, i32 0
  %cx_blk523 = bitcast %union.anon.16* %cx_u522 to %struct.block*
  %blk_u524 = getelementptr inbounds %struct.block, %struct.block* %cx_blk523, i32 0, i32 8
  %blku_sub525 = bitcast %union.anon.20* %blk_u524 to %struct.block_sub*
  %argarray526 = getelementptr inbounds %struct.block_sub, %struct.block_sub* %blku_sub525, i32 0, i32 3
  %340 = load %struct.av*, %struct.av** %argarray526, align 8
  %341 = bitcast %struct.av* %340 to i8*
  %342 = bitcast i8* %341 to %struct.sv*
  %343 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u527 = getelementptr inbounds %struct.context, %struct.context* %343, i32 0, i32 0
  %cx_blk528 = bitcast %union.anon.16* %cx_u527 to %struct.block*
  %blk_u529 = getelementptr inbounds %struct.block, %struct.block* %cx_blk528, i32 0, i32 8
  %blku_sub530 = bitcast %union.anon.20* %blk_u529 to %struct.block_sub*
  %oldcomppad = getelementptr inbounds %struct.block_sub, %struct.block_sub* %blku_sub530, i32 0, i32 5
  %344 = load %struct.av*, %struct.av** %oldcomppad, align 8
  %345 = bitcast %struct.av* %344 to i8*
  %346 = bitcast i8* %345 to %struct.av*
  %sv_u531 = getelementptr inbounds %struct.av, %struct.av* %346, i32 0, i32 3
  %svu_array = bitcast %union.anon.0* %sv_u531 to %struct.sv***
  %347 = load %struct.sv**, %struct.sv*** %svu_array, align 8
  %arrayidx532 = getelementptr inbounds %struct.sv*, %struct.sv** %347, i64 0
  store %struct.sv* %342, %struct.sv** %arrayidx532, align 8
  br label %if.end576

if.else533:                                       ; preds = %do.end477
  br label %do.body534

do.body534:                                       ; preds = %if.else533
  %348 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u535 = getelementptr inbounds %struct.context, %struct.context* %348, i32 0, i32 0
  %cx_blk536 = bitcast %union.anon.16* %cx_u535 to %struct.block*
  %blk_u537 = getelementptr inbounds %struct.block, %struct.block* %cx_blk536, i32 0, i32 8
  %blku_sub538 = bitcast %union.anon.20* %blk_u537 to %struct.block_sub*
  %argarray539 = getelementptr inbounds %struct.block_sub, %struct.block_sub* %blku_sub538, i32 0, i32 3
  %349 = load %struct.av*, %struct.av** %argarray539, align 8
  %sv_u540 = getelementptr inbounds %struct.av, %struct.av* %349, i32 0, i32 3
  %svu_array541 = bitcast %union.anon.0* %sv_u540 to %struct.sv***
  %350 = load %struct.sv**, %struct.sv*** %svu_array541, align 8
  %351 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u542 = getelementptr inbounds %struct.context, %struct.context* %351, i32 0, i32 0
  %cx_blk543 = bitcast %union.anon.16* %cx_u542 to %struct.block*
  %blk_u544 = getelementptr inbounds %struct.block, %struct.block* %cx_blk543, i32 0, i32 8
  %blku_sub545 = bitcast %union.anon.20* %blk_u544 to %struct.block_sub*
  %argarray546 = getelementptr inbounds %struct.block_sub, %struct.block_sub* %blku_sub545, i32 0, i32 3
  %352 = load %struct.av*, %struct.av** %argarray546, align 8
  %sv_any547 = getelementptr inbounds %struct.av, %struct.av* %352, i32 0, i32 0
  %353 = load %struct.xpvav*, %struct.xpvav** %sv_any547, align 8
  %xav_alloc = getelementptr inbounds %struct.xpvav, %struct.xpvav* %353, i32 0, i32 4
  %354 = load %struct.sv**, %struct.sv*** %xav_alloc, align 8
  %sub.ptr.lhs.cast = ptrtoint %struct.sv** %350 to i64
  %sub.ptr.rhs.cast = ptrtoint %struct.sv** %354 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 8
  %355 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u548 = getelementptr inbounds %struct.context, %struct.context* %355, i32 0, i32 0
  %cx_blk549 = bitcast %union.anon.16* %cx_u548 to %struct.block*
  %blk_u550 = getelementptr inbounds %struct.block, %struct.block* %cx_blk549, i32 0, i32 8
  %blku_sub551 = bitcast %union.anon.20* %blk_u550 to %struct.block_sub*
  %argarray552 = getelementptr inbounds %struct.block_sub, %struct.block_sub* %blku_sub551, i32 0, i32 3
  %356 = load %struct.av*, %struct.av** %argarray552, align 8
  %sv_any553 = getelementptr inbounds %struct.av, %struct.av* %356, i32 0, i32 0
  %357 = load %struct.xpvav*, %struct.xpvav** %sv_any553, align 8
  %xav_max = getelementptr inbounds %struct.xpvav, %struct.xpvav* %357, i32 0, i32 3
  %358 = load i64, i64* %xav_max, align 8
  %add = add nsw i64 %358, %sub.ptr.div
  store i64 %add, i64* %xav_max, align 8
  %359 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u554 = getelementptr inbounds %struct.context, %struct.context* %359, i32 0, i32 0
  %cx_blk555 = bitcast %union.anon.16* %cx_u554 to %struct.block*
  %blk_u556 = getelementptr inbounds %struct.block, %struct.block* %cx_blk555, i32 0, i32 8
  %blku_sub557 = bitcast %union.anon.20* %blk_u556 to %struct.block_sub*
  %argarray558 = getelementptr inbounds %struct.block_sub, %struct.block_sub* %blku_sub557, i32 0, i32 3
  %360 = load %struct.av*, %struct.av** %argarray558, align 8
  %sv_any559 = getelementptr inbounds %struct.av, %struct.av* %360, i32 0, i32 0
  %361 = load %struct.xpvav*, %struct.xpvav** %sv_any559, align 8
  %xav_alloc560 = getelementptr inbounds %struct.xpvav, %struct.xpvav* %361, i32 0, i32 4
  %362 = load %struct.sv**, %struct.sv*** %xav_alloc560, align 8
  %363 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u561 = getelementptr inbounds %struct.context, %struct.context* %363, i32 0, i32 0
  %cx_blk562 = bitcast %union.anon.16* %cx_u561 to %struct.block*
  %blk_u563 = getelementptr inbounds %struct.block, %struct.block* %cx_blk562, i32 0, i32 8
  %blku_sub564 = bitcast %union.anon.20* %blk_u563 to %struct.block_sub*
  %argarray565 = getelementptr inbounds %struct.block_sub, %struct.block_sub* %blku_sub564, i32 0, i32 3
  %364 = load %struct.av*, %struct.av** %argarray565, align 8
  %sv_u566 = getelementptr inbounds %struct.av, %struct.av* %364, i32 0, i32 3
  %svu_array567 = bitcast %union.anon.0* %sv_u566 to %struct.sv***
  store %struct.sv** %362, %struct.sv*** %svu_array567, align 8
  %365 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u568 = getelementptr inbounds %struct.context, %struct.context* %365, i32 0, i32 0
  %cx_blk569 = bitcast %union.anon.16* %cx_u568 to %struct.block*
  %blk_u570 = getelementptr inbounds %struct.block, %struct.block* %cx_blk569, i32 0, i32 8
  %blku_sub571 = bitcast %union.anon.20* %blk_u570 to %struct.block_sub*
  %argarray572 = getelementptr inbounds %struct.block_sub, %struct.block_sub* %blku_sub571, i32 0, i32 3
  %366 = load %struct.av*, %struct.av** %argarray572, align 8
  %sv_any573 = getelementptr inbounds %struct.av, %struct.av* %366, i32 0, i32 0
  %367 = load %struct.xpvav*, %struct.xpvav** %sv_any573, align 8
  %xav_fill574 = getelementptr inbounds %struct.xpvav, %struct.xpvav* %367, i32 0, i32 2
  store i64 -1, i64* %xav_fill574, align 8
  br label %do.end575

do.end575:                                        ; preds = %do.body534
  br label %if.end576

if.end576:                                        ; preds = %do.end575, %if.then485
  br label %if.end577

if.end577:                                        ; preds = %if.end576, %if.then450
  br label %if.end578

if.end578:                                        ; preds = %if.end577, %do.body438
  %368 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u579 = getelementptr inbounds %struct.context, %struct.context* %368, i32 0, i32 0
  %cx_blk580 = bitcast %union.anon.16* %cx_u579 to %struct.block*
  %blk_u581 = getelementptr inbounds %struct.block, %struct.block* %cx_blk580, i32 0, i32 8
  %blku_sub582 = bitcast %union.anon.20* %blk_u581 to %struct.block_sub*
  %cv583 = getelementptr inbounds %struct.block_sub, %struct.block_sub* %blku_sub582, i32 0, i32 1
  %369 = load %struct.cv*, %struct.cv** %cv583, align 8
  %370 = bitcast %struct.cv* %369 to i8*
  %371 = bitcast i8* %370 to %struct.sv*
  store %struct.sv* %371, %struct.sv** %sv, align 8
  br label %do.body584

do.body584:                                       ; preds = %if.end578
  %372 = load i32, i32* @PL_savestack_ix, align 4
  %373 = load i32*, i32** @PL_scopestack, align 8
  %374 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u585 = getelementptr inbounds %struct.context, %struct.context* %374, i32 0, i32 0
  %cx_blk586 = bitcast %union.anon.16* %cx_u585 to %struct.block*
  %blku_oldscopesp587 = getelementptr inbounds %struct.block, %struct.block* %cx_blk586, i32 0, i32 6
  %375 = load i32, i32* %blku_oldscopesp587, align 4
  %sub588 = sub nsw i32 %375, 1
  %idxprom589 = sext i32 %sub588 to i64
  %arrayidx590 = getelementptr inbounds i32, i32* %373, i64 %idxprom589
  %376 = load i32, i32* %arrayidx590, align 4
  %cmp591 = icmp sgt i32 %372, %376
  br i1 %cmp591, label %if.then593, label %if.end600

if.then593:                                       ; preds = %do.body584
  %377 = load i32*, i32** @PL_scopestack, align 8
  %378 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u594 = getelementptr inbounds %struct.context, %struct.context* %378, i32 0, i32 0
  %cx_blk595 = bitcast %union.anon.16* %cx_u594 to %struct.block*
  %blku_oldscopesp596 = getelementptr inbounds %struct.block, %struct.block* %cx_blk595, i32 0, i32 6
  %379 = load i32, i32* %blku_oldscopesp596, align 4
  %sub597 = sub nsw i32 %379, 1
  %idxprom598 = sext i32 %sub597 to i64
  %arrayidx599 = getelementptr inbounds i32, i32* %377, i64 %idxprom598
  %380 = load i32, i32* %arrayidx599, align 4
  call void @Perl_leave_scope(i32 %380)
  br label %if.end600

if.end600:                                        ; preds = %if.then593, %do.body584
  br label %do.end601

do.end601:                                        ; preds = %if.end600
  %381 = load %struct.sv*, %struct.sv** %sv, align 8
  %tobool602 = icmp ne %struct.sv* %381, null
  br i1 %tobool602, label %land.lhs.true603, label %if.end607

land.lhs.true603:                                 ; preds = %do.end601
  %382 = load i32, i32* %olddepth, align 4
  %383 = load %struct.sv*, %struct.sv** %sv, align 8
  %384 = bitcast %struct.sv* %383 to %struct.cv*
  %call604 = call i32* @S_CvDEPTHp(%struct.cv* %384)
  store i32 %382, i32* %call604, align 4
  %tobool605 = icmp ne i32 %382, 0
  br i1 %tobool605, label %if.then606, label %if.end607

if.then606:                                       ; preds = %land.lhs.true603
  store %struct.sv* null, %struct.sv** %sv, align 8
  br label %if.end607

if.end607:                                        ; preds = %if.then606, %land.lhs.true603, %do.end601
  br label %do.end608

do.end608:                                        ; preds = %if.end607
  br label %if.end610

if.else609:                                       ; preds = %if.end433
  store %struct.sv* null, %struct.sv** %sv, align 8
  br label %if.end610

if.end610:                                        ; preds = %if.else609, %do.end608
  %385 = load %struct.pmop*, %struct.pmop** %newpm, align 8
  store %struct.pmop* %385, %struct.pmop** @PL_curpm, align 8
  br label %do.body611

do.body611:                                       ; preds = %if.end610
  %386 = load %struct.sv*, %struct.sv** %sv, align 8
  %387 = bitcast %struct.sv* %386 to i8*
  %388 = bitcast i8* %387 to %struct.sv*
  call void @S_SvREFCNT_dec(%struct.sv* %388)
  br label %do.end612

do.end612:                                        ; preds = %do.body611
  %389 = load i8, i8* %clear_errsv, align 1
  %tobool613 = trunc i8 %389 to i1
  br i1 %tobool613, label %if.then614, label %if.end641

if.then614:                                       ; preds = %do.end612
  br label %do.body615

do.body615:                                       ; preds = %if.then614
  %390 = load %struct.gv*, %struct.gv** @PL_errgv, align 8
  %sv_u616 = getelementptr inbounds %struct.gv, %struct.gv* %390, i32 0, i32 3
  %svu_gp617 = bitcast %union.anon.4* %sv_u616 to %struct.gp**
  %391 = load %struct.gp*, %struct.gp** %svu_gp617, align 8
  %add.ptr618 = getelementptr inbounds %struct.gp, %struct.gp* %391, i64 0
  %gp_sv = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr618, i32 0, i32 0
  store %struct.sv** %gp_sv, %struct.sv*** %svp, align 8
  %392 = load %struct.sv**, %struct.sv*** %svp, align 8
  %393 = load %struct.sv*, %struct.sv** %392, align 8
  %tobool619 = icmp ne %struct.sv* %393, null
  br i1 %tobool619, label %if.else621, label %if.then620

if.then620:                                       ; preds = %do.body615
  br label %clresv_newemptypv

if.else621:                                       ; preds = %do.body615
  %394 = load %struct.sv**, %struct.sv*** %svp, align 8
  %395 = load %struct.sv*, %struct.sv** %394, align 8
  %sv_flags622 = getelementptr inbounds %struct.sv, %struct.sv* %395, i32 0, i32 2
  %396 = load i32, i32* %sv_flags622, align 4
  %and623 = and i32 %396, 134283264
  %tobool624 = icmp ne i32 %and623, 0
  br i1 %tobool624, label %if.then625, label %if.else627

if.then625:                                       ; preds = %if.else621
  %397 = load %struct.sv**, %struct.sv*** %svp, align 8
  %398 = load %struct.sv*, %struct.sv** %397, align 8
  %399 = bitcast %struct.sv* %398 to i8*
  %400 = bitcast i8* %399 to %struct.sv*
  call void @S_SvREFCNT_dec_NN(%struct.sv* %400)
  br label %clresv_newemptypv

clresv_newemptypv:                                ; preds = %if.then625, %if.then620
  %call626 = call %struct.sv* @Perl_newSVpvn(i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.8, i64 0, i64 0), i64 0)
  %401 = load %struct.sv**, %struct.sv*** %svp, align 8
  store %struct.sv* %call626, %struct.sv** %401, align 8
  br label %if.end638

if.else627:                                       ; preds = %if.else621
  %402 = load %struct.sv**, %struct.sv*** %svp, align 8
  %403 = load %struct.sv*, %struct.sv** %402, align 8
  store %struct.sv* %403, %struct.sv** %errsv, align 8
  %404 = load %struct.sv*, %struct.sv** %errsv, align 8
  call void @Perl_sv_setpvn(%struct.sv* %404, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.8, i64 0, i64 0), i64 0)
  %405 = load %struct.sv*, %struct.sv** %errsv, align 8
  %sv_flags628 = getelementptr inbounds %struct.sv, %struct.sv* %405, i32 0, i32 2
  %406 = load i32, i32* %sv_flags628, align 4
  %and629 = and i32 %406, 1610547455
  store i32 %and629, i32* %sv_flags628, align 4
  %407 = load %struct.sv*, %struct.sv** %errsv, align 8
  %sv_flags630 = getelementptr inbounds %struct.sv, %struct.sv* %407, i32 0, i32 2
  %408 = load i32, i32* %sv_flags630, align 4
  %or631 = or i32 %408, 17408
  store i32 %or631, i32* %sv_flags630, align 4
  %409 = load %struct.sv*, %struct.sv** %errsv, align 8
  %sv_flags632 = getelementptr inbounds %struct.sv, %struct.sv* %409, i32 0, i32 2
  %410 = load i32, i32* %sv_flags632, align 4
  %and633 = and i32 %410, 14680064
  %tobool634 = icmp ne i32 %and633, 0
  br i1 %tobool634, label %if.then635, label %if.end637

if.then635:                                       ; preds = %if.else627
  %411 = load %struct.sv*, %struct.sv** %errsv, align 8
  %call636 = call i32 @Perl_mg_free(%struct.sv* %411)
  br label %if.end637

if.end637:                                        ; preds = %if.then635, %if.else627
  br label %if.end638

if.end638:                                        ; preds = %if.end637, %clresv_newemptypv
  br label %if.end639

if.end639:                                        ; preds = %if.end638
  br label %do.end640

do.end640:                                        ; preds = %if.end639
  br label %if.end641

if.end641:                                        ; preds = %do.end640, %do.end612
  %412 = load %struct.op*, %struct.op** %retop, align 8
  store %struct.op* %412, %struct.op** %retval, align 8
  br label %return

return:                                           ; preds = %if.end641, %sw.default, %cond.end255, %if.end37, %if.else, %if.then4
  %413 = load %struct.op*, %struct.op** %retval, align 8
  ret %struct.op* %413
}

; Function Attrs: noinline nounwind uwtable
define internal void @S_return_lvalues(%struct.sv** %mark, %struct.sv** %sp, %struct.sv** %newsp, i32 %gimme, %struct.context* %cx, %struct.pmop* %newpm) #0 {
entry:
  %mark.addr = alloca %struct.sv**, align 8
  %sp.addr = alloca %struct.sv**, align 8
  %newsp.addr = alloca %struct.sv**, align 8
  %gimme.addr = alloca i32, align 4
  %cx.addr = alloca %struct.context*, align 8
  %newpm.addr = alloca %struct.pmop*, align 8
  %ref = alloca i8, align 1
  %sv = alloca %struct.sv*, align 8
  %what = alloca i8*, align 8
  %olddepth = alloca i32, align 4
  %fill = alloca i64, align 8
  %sv222 = alloca %struct.sv*, align 8
  %ro = alloca i8, align 1
  %sv366 = alloca %struct.sv*, align 8
  %olddepth370 = alloca i32, align 4
  %fill421 = alloca i64, align 8
  store %struct.sv** %mark, %struct.sv*** %mark.addr, align 8
  store %struct.sv** %sp, %struct.sv*** %sp.addr, align 8
  store %struct.sv** %newsp, %struct.sv*** %newsp.addr, align 8
  store i32 %gimme, i32* %gimme.addr, align 4
  store %struct.context* %cx, %struct.context** %cx.addr, align 8
  store %struct.pmop* %newpm, %struct.pmop** %newpm.addr, align 8
  %0 = load %struct.context*, %struct.context** %cx.addr, align 8
  %cx_u = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 0
  %cx_blk = bitcast %union.anon.16* %cx_u to %struct.block*
  %blku_u16 = getelementptr inbounds %struct.block, %struct.block* %cx_blk, i32 0, i32 2
  %1 = load i16, i16* %blku_u16, align 2
  %conv = zext i16 %1 to i32
  %and = and i32 %conv, 255
  %add = add nsw i32 0, %and
  %and1 = and i32 %add, 1
  %tobool = icmp ne i32 %and1, 0
  %lnot = xor i1 %tobool, true
  %lnot2 = xor i1 %lnot, true
  %frombool = zext i1 %lnot2 to i8
  store i8 %frombool, i8* %ref, align 1
  %2 = load i32, i32* %gimme.addr, align 4
  %cmp = icmp eq i32 %2, 2
  br i1 %cmp, label %if.then, label %if.else306

if.then:                                          ; preds = %entry
  %3 = load %struct.context*, %struct.context** %cx.addr, align 8
  %cx_u4 = getelementptr inbounds %struct.context, %struct.context* %3, i32 0, i32 0
  %cx_blk5 = bitcast %union.anon.16* %cx_u4 to %struct.block*
  %blku_u166 = getelementptr inbounds %struct.block, %struct.block* %cx_blk5, i32 0, i32 2
  %4 = load i16, i16* %blku_u166, align 2
  %conv7 = zext i16 %4 to i32
  %and8 = and i32 %conv7, 255
  %add9 = add nsw i32 0, %and8
  %tobool10 = icmp ne i32 %add9, 0
  br i1 %tobool10, label %land.lhs.true, label %if.end191

land.lhs.true:                                    ; preds = %if.then
  %5 = load i8, i8* %ref, align 1
  %tobool11 = trunc i8 %5 to i1
  br i1 %tobool11, label %if.end191, label %if.then12

if.then12:                                        ; preds = %land.lhs.true
  store i8* null, i8** %what, align 8
  %6 = load %struct.sv**, %struct.sv*** %mark.addr, align 8
  %7 = load %struct.sv**, %struct.sv*** %sp.addr, align 8
  %cmp13 = icmp ult %struct.sv** %6, %7
  br i1 %cmp13, label %if.then15, label %if.else32

if.then15:                                        ; preds = %if.then12
  %8 = load %struct.sv**, %struct.sv*** %sp.addr, align 8
  %9 = load %struct.sv*, %struct.sv** %8, align 8
  %sv_flags = getelementptr inbounds %struct.sv, %struct.sv* %9, i32 0, i32 2
  %10 = load i32, i32* %sv_flags, align 4
  %and16 = and i32 %10, 131072
  %tobool17 = icmp ne i32 %and16, 0
  br i1 %tobool17, label %land.lhs.true21, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.then15
  %11 = load %struct.sv**, %struct.sv*** %sp.addr, align 8
  %12 = load %struct.sv*, %struct.sv** %11, align 8
  %sv_flags18 = getelementptr inbounds %struct.sv, %struct.sv* %12, i32 0, i32 2
  %13 = load i32, i32* %sv_flags18, align 4
  %and19 = and i32 %13, 134283264
  %tobool20 = icmp ne i32 %and19, 0
  br i1 %tobool20, label %land.lhs.true21, label %if.else

land.lhs.true21:                                  ; preds = %lor.lhs.false, %if.then15
  %14 = load %struct.sv**, %struct.sv*** %sp.addr, align 8
  %15 = load %struct.sv*, %struct.sv** %14, align 8
  %sv_flags22 = getelementptr inbounds %struct.sv, %struct.sv* %15, i32 0, i32 2
  %16 = load i32, i32* %sv_flags22, align 4
  %and23 = and i32 %16, 4194304
  %tobool24 = icmp ne i32 %and23, 0
  br i1 %tobool24, label %if.else, label %if.then25

if.then25:                                        ; preds = %land.lhs.true21
  %17 = load %struct.sv**, %struct.sv*** %sp.addr, align 8
  %18 = load %struct.sv*, %struct.sv** %17, align 8
  %sv_flags26 = getelementptr inbounds %struct.sv, %struct.sv* %18, i32 0, i32 2
  %19 = load i32, i32* %sv_flags26, align 4
  %and27 = and i32 %19, 134283264
  %tobool28 = icmp ne i32 %and27, 0
  br i1 %tobool28, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.then25
  %20 = load %struct.sv**, %struct.sv*** %sp.addr, align 8
  %21 = load %struct.sv*, %struct.sv** %20, align 8
  %cmp29 = icmp eq %struct.sv* %21, @PL_sv_undef
  %22 = zext i1 %cmp29 to i64
  %cond = select i1 %cmp29, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.88, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.89, i64 0, i64 0)
  br label %cond.end

cond.false:                                       ; preds = %if.then25
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond31 = phi i8* [ %cond, %cond.true ], [ getelementptr inbounds ([12 x i8], [12 x i8]* @.str.90, i64 0, i64 0), %cond.false ]
  store i8* %cond31, i8** %what, align 8
  br label %if.end

if.else:                                          ; preds = %land.lhs.true21, %lor.lhs.false
  br label %copy_sv

if.end:                                           ; preds = %cond.end
  br label %if.end33

if.else32:                                        ; preds = %if.then12
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.88, i64 0, i64 0), i8** %what, align 8
  br label %if.end33

if.end33:                                         ; preds = %if.else32, %if.end
  call void @Perl_pop_scope()
  %23 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %si_cxix = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %23, i32 0, i32 4
  %24 = load i32, i32* %si_cxix, align 8
  %dec = add nsw i32 %24, -1
  store i32 %dec, i32* %si_cxix, align 8
  br label %do.body

do.body:                                          ; preds = %if.end33
  %25 = load %struct.context*, %struct.context** %cx.addr, align 8
  %cx_u34 = getelementptr inbounds %struct.context, %struct.context* %25, i32 0, i32 0
  %cx_blk35 = bitcast %union.anon.16* %cx_u34 to %struct.block*
  %blk_u = getelementptr inbounds %struct.block, %struct.block* %cx_blk35, i32 0, i32 8
  %blku_sub = bitcast %union.anon.20* %blk_u to %struct.block_sub*
  %olddepth36 = getelementptr inbounds %struct.block_sub, %struct.block_sub* %blku_sub, i32 0, i32 4
  %26 = load i32, i32* %olddepth36, align 8
  store i32 %26, i32* %olddepth, align 4
  %27 = load %struct.context*, %struct.context** %cx.addr, align 8
  %cx_u37 = getelementptr inbounds %struct.context, %struct.context* %27, i32 0, i32 0
  %cx_blk38 = bitcast %union.anon.16* %cx_u37 to %struct.block*
  %blku_u1639 = getelementptr inbounds %struct.block, %struct.block* %cx_blk38, i32 0, i32 2
  %28 = load i16, i16* %blku_u1639, align 2
  %conv40 = zext i16 %28 to i32
  %and41 = and i32 %conv40, 256
  %tobool42 = icmp ne i32 %and41, 0
  br i1 %tobool42, label %if.end162, label %if.then43

if.then43:                                        ; preds = %do.body
  %29 = load %struct.context*, %struct.context** %cx.addr, align 8
  %cx_u44 = getelementptr inbounds %struct.context, %struct.context* %29, i32 0, i32 0
  %cx_blk45 = bitcast %union.anon.16* %cx_u44 to %struct.block*
  %blku_u1646 = getelementptr inbounds %struct.block, %struct.block* %cx_blk45, i32 0, i32 2
  %30 = load i16, i16* %blku_u1646, align 2
  %conv47 = zext i16 %30 to i32
  %or = or i32 %conv47, 256
  %conv48 = trunc i32 %or to i16
  store i16 %conv48, i16* %blku_u1646, align 2
  %31 = load %struct.context*, %struct.context** %cx.addr, align 8
  %cx_u49 = getelementptr inbounds %struct.context, %struct.context* %31, i32 0, i32 0
  %cx_subst = bitcast %union.anon.16* %cx_u49 to %struct.subst*
  %sbu_type = getelementptr inbounds %struct.subst, %struct.subst* %cx_subst, i32 0, i32 0
  %32 = load i8, i8* %sbu_type, align 8
  %conv50 = zext i8 %32 to i32
  %and51 = and i32 %conv50, 32
  %cmp52 = icmp eq i32 %and51, 32
  br i1 %cmp52, label %if.then54, label %if.end161

if.then54:                                        ; preds = %if.then43
  br label %do.body55

do.body55:                                        ; preds = %if.then54
  %33 = load %struct.gv*, %struct.gv** @PL_defgv, align 8
  %sv_u = getelementptr inbounds %struct.gv, %struct.gv* %33, i32 0, i32 3
  %svu_gp = bitcast %union.anon.4* %sv_u to %struct.gp**
  %34 = load %struct.gp*, %struct.gp** %svu_gp, align 8
  %add.ptr = getelementptr inbounds %struct.gp, %struct.gp* %34, i64 0
  %gp_av = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr, i32 0, i32 6
  %35 = load %struct.av*, %struct.av** %gp_av, align 8
  %36 = bitcast %struct.av* %35 to i8*
  %37 = bitcast i8* %36 to %struct.sv*
  call void @S_SvREFCNT_dec(%struct.sv* %37)
  %38 = load %struct.context*, %struct.context** %cx.addr, align 8
  %cx_u56 = getelementptr inbounds %struct.context, %struct.context* %38, i32 0, i32 0
  %cx_blk57 = bitcast %union.anon.16* %cx_u56 to %struct.block*
  %blk_u58 = getelementptr inbounds %struct.block, %struct.block* %cx_blk57, i32 0, i32 8
  %blku_sub59 = bitcast %union.anon.20* %blk_u58 to %struct.block_sub*
  %savearray = getelementptr inbounds %struct.block_sub, %struct.block_sub* %blku_sub59, i32 0, i32 2
  %39 = load %struct.av*, %struct.av** %savearray, align 8
  %40 = load %struct.gv*, %struct.gv** @PL_defgv, align 8
  %sv_u60 = getelementptr inbounds %struct.gv, %struct.gv* %40, i32 0, i32 3
  %svu_gp61 = bitcast %union.anon.4* %sv_u60 to %struct.gp**
  %41 = load %struct.gp*, %struct.gp** %svu_gp61, align 8
  %add.ptr62 = getelementptr inbounds %struct.gp, %struct.gp* %41, i64 0
  %gp_av63 = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr62, i32 0, i32 6
  store %struct.av* %39, %struct.av** %gp_av63, align 8
  br label %do.end

do.end:                                           ; preds = %do.body55
  %42 = load %struct.context*, %struct.context** %cx.addr, align 8
  %cx_u64 = getelementptr inbounds %struct.context, %struct.context* %42, i32 0, i32 0
  %cx_blk65 = bitcast %union.anon.16* %cx_u64 to %struct.block*
  %blk_u66 = getelementptr inbounds %struct.block, %struct.block* %cx_blk65, i32 0, i32 8
  %blku_sub67 = bitcast %union.anon.20* %blk_u66 to %struct.block_sub*
  %argarray = getelementptr inbounds %struct.block_sub, %struct.block_sub* %blku_sub67, i32 0, i32 3
  %43 = load %struct.av*, %struct.av** %argarray, align 8
  %sv_flags68 = getelementptr inbounds %struct.av, %struct.av* %43, i32 0, i32 2
  %44 = load i32, i32* %sv_flags68, align 4
  %and69 = and i32 %44, 1073741824
  %tobool70 = icmp ne i32 %and69, 0
  br i1 %tobool70, label %if.then71, label %if.else116

if.then71:                                        ; preds = %do.end
  %45 = load %struct.context*, %struct.context** %cx.addr, align 8
  %cx_u72 = getelementptr inbounds %struct.context, %struct.context* %45, i32 0, i32 0
  %cx_blk73 = bitcast %union.anon.16* %cx_u72 to %struct.block*
  %blk_u74 = getelementptr inbounds %struct.block, %struct.block* %cx_blk73, i32 0, i32 8
  %blku_sub75 = bitcast %union.anon.20* %blk_u74 to %struct.block_sub*
  %argarray76 = getelementptr inbounds %struct.block_sub, %struct.block_sub* %blku_sub75, i32 0, i32 3
  %46 = load %struct.av*, %struct.av** %argarray76, align 8
  %sv_any = getelementptr inbounds %struct.av, %struct.av* %46, i32 0, i32 0
  %47 = load %struct.xpvav*, %struct.xpvav** %sv_any, align 8
  %xav_fill = getelementptr inbounds %struct.xpvav, %struct.xpvav* %47, i32 0, i32 2
  %48 = load i64, i64* %xav_fill, align 8
  store i64 %48, i64* %fill, align 8
  %49 = load %struct.context*, %struct.context** %cx.addr, align 8
  %cx_u77 = getelementptr inbounds %struct.context, %struct.context* %49, i32 0, i32 0
  %cx_blk78 = bitcast %union.anon.16* %cx_u77 to %struct.block*
  %blk_u79 = getelementptr inbounds %struct.block, %struct.block* %cx_blk78, i32 0, i32 8
  %blku_sub80 = bitcast %union.anon.20* %blk_u79 to %struct.block_sub*
  %argarray81 = getelementptr inbounds %struct.block_sub, %struct.block_sub* %blku_sub80, i32 0, i32 3
  %50 = load %struct.av*, %struct.av** %argarray81, align 8
  %51 = bitcast %struct.av* %50 to i8*
  %52 = bitcast i8* %51 to %struct.sv*
  call void @S_SvREFCNT_dec_NN(%struct.sv* %52)
  %call = call %struct.sv* @Perl_newSV_type(i32 11)
  %53 = bitcast %struct.sv* %call to i8*
  %54 = bitcast i8* %53 to %struct.av*
  %55 = load %struct.context*, %struct.context** %cx.addr, align 8
  %cx_u82 = getelementptr inbounds %struct.context, %struct.context* %55, i32 0, i32 0
  %cx_blk83 = bitcast %union.anon.16* %cx_u82 to %struct.block*
  %blk_u84 = getelementptr inbounds %struct.block, %struct.block* %cx_blk83, i32 0, i32 8
  %blku_sub85 = bitcast %union.anon.20* %blk_u84 to %struct.block_sub*
  %argarray86 = getelementptr inbounds %struct.block_sub, %struct.block_sub* %blku_sub85, i32 0, i32 3
  store %struct.av* %54, %struct.av** %argarray86, align 8
  %56 = load %struct.context*, %struct.context** %cx.addr, align 8
  %cx_u87 = getelementptr inbounds %struct.context, %struct.context* %56, i32 0, i32 0
  %cx_blk88 = bitcast %union.anon.16* %cx_u87 to %struct.block*
  %blk_u89 = getelementptr inbounds %struct.block, %struct.block* %cx_blk88, i32 0, i32 8
  %blku_sub90 = bitcast %union.anon.20* %blk_u89 to %struct.block_sub*
  %argarray91 = getelementptr inbounds %struct.block_sub, %struct.block_sub* %blku_sub90, i32 0, i32 3
  %57 = load %struct.av*, %struct.av** %argarray91, align 8
  %58 = load i64, i64* %fill, align 8
  call void @Perl_av_extend(%struct.av* %57, i64 %58)
  %59 = load %struct.context*, %struct.context** %cx.addr, align 8
  %cx_u92 = getelementptr inbounds %struct.context, %struct.context* %59, i32 0, i32 0
  %cx_blk93 = bitcast %union.anon.16* %cx_u92 to %struct.block*
  %blk_u94 = getelementptr inbounds %struct.block, %struct.block* %cx_blk93, i32 0, i32 8
  %blku_sub95 = bitcast %union.anon.20* %blk_u94 to %struct.block_sub*
  %argarray96 = getelementptr inbounds %struct.block_sub, %struct.block_sub* %blku_sub95, i32 0, i32 3
  %60 = load %struct.av*, %struct.av** %argarray96, align 8
  %sv_flags97 = getelementptr inbounds %struct.av, %struct.av* %60, i32 0, i32 2
  %61 = load i32, i32* %sv_flags97, align 4
  %and98 = and i32 %61, -1073741825
  store i32 %and98, i32* %sv_flags97, align 4
  %62 = load %struct.context*, %struct.context** %cx.addr, align 8
  %cx_u99 = getelementptr inbounds %struct.context, %struct.context* %62, i32 0, i32 0
  %cx_blk100 = bitcast %union.anon.16* %cx_u99 to %struct.block*
  %blk_u101 = getelementptr inbounds %struct.block, %struct.block* %cx_blk100, i32 0, i32 8
  %blku_sub102 = bitcast %union.anon.20* %blk_u101 to %struct.block_sub*
  %argarray103 = getelementptr inbounds %struct.block_sub, %struct.block_sub* %blku_sub102, i32 0, i32 3
  %63 = load %struct.av*, %struct.av** %argarray103, align 8
  %sv_flags104 = getelementptr inbounds %struct.av, %struct.av* %63, i32 0, i32 2
  %64 = load i32, i32* %sv_flags104, align 4
  %or105 = or i32 %64, -2147483648
  store i32 %or105, i32* %sv_flags104, align 4
  %65 = load %struct.context*, %struct.context** %cx.addr, align 8
  %cx_u106 = getelementptr inbounds %struct.context, %struct.context* %65, i32 0, i32 0
  %cx_blk107 = bitcast %union.anon.16* %cx_u106 to %struct.block*
  %blk_u108 = getelementptr inbounds %struct.block, %struct.block* %cx_blk107, i32 0, i32 8
  %blku_sub109 = bitcast %union.anon.20* %blk_u108 to %struct.block_sub*
  %argarray110 = getelementptr inbounds %struct.block_sub, %struct.block_sub* %blku_sub109, i32 0, i32 3
  %66 = load %struct.av*, %struct.av** %argarray110, align 8
  %67 = bitcast %struct.av* %66 to i8*
  %68 = bitcast i8* %67 to %struct.sv*
  %69 = load %struct.context*, %struct.context** %cx.addr, align 8
  %cx_u111 = getelementptr inbounds %struct.context, %struct.context* %69, i32 0, i32 0
  %cx_blk112 = bitcast %union.anon.16* %cx_u111 to %struct.block*
  %blk_u113 = getelementptr inbounds %struct.block, %struct.block* %cx_blk112, i32 0, i32 8
  %blku_sub114 = bitcast %union.anon.20* %blk_u113 to %struct.block_sub*
  %oldcomppad = getelementptr inbounds %struct.block_sub, %struct.block_sub* %blku_sub114, i32 0, i32 5
  %70 = load %struct.av*, %struct.av** %oldcomppad, align 8
  %71 = bitcast %struct.av* %70 to i8*
  %72 = bitcast i8* %71 to %struct.av*
  %sv_u115 = getelementptr inbounds %struct.av, %struct.av* %72, i32 0, i32 3
  %svu_array = bitcast %union.anon.0* %sv_u115 to %struct.sv***
  %73 = load %struct.sv**, %struct.sv*** %svu_array, align 8
  %arrayidx = getelementptr inbounds %struct.sv*, %struct.sv** %73, i64 0
  store %struct.sv* %68, %struct.sv** %arrayidx, align 8
  br label %if.end160

if.else116:                                       ; preds = %do.end
  br label %do.body117

do.body117:                                       ; preds = %if.else116
  %74 = load %struct.context*, %struct.context** %cx.addr, align 8
  %cx_u118 = getelementptr inbounds %struct.context, %struct.context* %74, i32 0, i32 0
  %cx_blk119 = bitcast %union.anon.16* %cx_u118 to %struct.block*
  %blk_u120 = getelementptr inbounds %struct.block, %struct.block* %cx_blk119, i32 0, i32 8
  %blku_sub121 = bitcast %union.anon.20* %blk_u120 to %struct.block_sub*
  %argarray122 = getelementptr inbounds %struct.block_sub, %struct.block_sub* %blku_sub121, i32 0, i32 3
  %75 = load %struct.av*, %struct.av** %argarray122, align 8
  %sv_u123 = getelementptr inbounds %struct.av, %struct.av* %75, i32 0, i32 3
  %svu_array124 = bitcast %union.anon.0* %sv_u123 to %struct.sv***
  %76 = load %struct.sv**, %struct.sv*** %svu_array124, align 8
  %77 = load %struct.context*, %struct.context** %cx.addr, align 8
  %cx_u125 = getelementptr inbounds %struct.context, %struct.context* %77, i32 0, i32 0
  %cx_blk126 = bitcast %union.anon.16* %cx_u125 to %struct.block*
  %blk_u127 = getelementptr inbounds %struct.block, %struct.block* %cx_blk126, i32 0, i32 8
  %blku_sub128 = bitcast %union.anon.20* %blk_u127 to %struct.block_sub*
  %argarray129 = getelementptr inbounds %struct.block_sub, %struct.block_sub* %blku_sub128, i32 0, i32 3
  %78 = load %struct.av*, %struct.av** %argarray129, align 8
  %sv_any130 = getelementptr inbounds %struct.av, %struct.av* %78, i32 0, i32 0
  %79 = load %struct.xpvav*, %struct.xpvav** %sv_any130, align 8
  %xav_alloc = getelementptr inbounds %struct.xpvav, %struct.xpvav* %79, i32 0, i32 4
  %80 = load %struct.sv**, %struct.sv*** %xav_alloc, align 8
  %sub.ptr.lhs.cast = ptrtoint %struct.sv** %76 to i64
  %sub.ptr.rhs.cast = ptrtoint %struct.sv** %80 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 8
  %81 = load %struct.context*, %struct.context** %cx.addr, align 8
  %cx_u131 = getelementptr inbounds %struct.context, %struct.context* %81, i32 0, i32 0
  %cx_blk132 = bitcast %union.anon.16* %cx_u131 to %struct.block*
  %blk_u133 = getelementptr inbounds %struct.block, %struct.block* %cx_blk132, i32 0, i32 8
  %blku_sub134 = bitcast %union.anon.20* %blk_u133 to %struct.block_sub*
  %argarray135 = getelementptr inbounds %struct.block_sub, %struct.block_sub* %blku_sub134, i32 0, i32 3
  %82 = load %struct.av*, %struct.av** %argarray135, align 8
  %sv_any136 = getelementptr inbounds %struct.av, %struct.av* %82, i32 0, i32 0
  %83 = load %struct.xpvav*, %struct.xpvav** %sv_any136, align 8
  %xav_max = getelementptr inbounds %struct.xpvav, %struct.xpvav* %83, i32 0, i32 3
  %84 = load i64, i64* %xav_max, align 8
  %add137 = add nsw i64 %84, %sub.ptr.div
  store i64 %add137, i64* %xav_max, align 8
  %85 = load %struct.context*, %struct.context** %cx.addr, align 8
  %cx_u138 = getelementptr inbounds %struct.context, %struct.context* %85, i32 0, i32 0
  %cx_blk139 = bitcast %union.anon.16* %cx_u138 to %struct.block*
  %blk_u140 = getelementptr inbounds %struct.block, %struct.block* %cx_blk139, i32 0, i32 8
  %blku_sub141 = bitcast %union.anon.20* %blk_u140 to %struct.block_sub*
  %argarray142 = getelementptr inbounds %struct.block_sub, %struct.block_sub* %blku_sub141, i32 0, i32 3
  %86 = load %struct.av*, %struct.av** %argarray142, align 8
  %sv_any143 = getelementptr inbounds %struct.av, %struct.av* %86, i32 0, i32 0
  %87 = load %struct.xpvav*, %struct.xpvav** %sv_any143, align 8
  %xav_alloc144 = getelementptr inbounds %struct.xpvav, %struct.xpvav* %87, i32 0, i32 4
  %88 = load %struct.sv**, %struct.sv*** %xav_alloc144, align 8
  %89 = load %struct.context*, %struct.context** %cx.addr, align 8
  %cx_u145 = getelementptr inbounds %struct.context, %struct.context* %89, i32 0, i32 0
  %cx_blk146 = bitcast %union.anon.16* %cx_u145 to %struct.block*
  %blk_u147 = getelementptr inbounds %struct.block, %struct.block* %cx_blk146, i32 0, i32 8
  %blku_sub148 = bitcast %union.anon.20* %blk_u147 to %struct.block_sub*
  %argarray149 = getelementptr inbounds %struct.block_sub, %struct.block_sub* %blku_sub148, i32 0, i32 3
  %90 = load %struct.av*, %struct.av** %argarray149, align 8
  %sv_u150 = getelementptr inbounds %struct.av, %struct.av* %90, i32 0, i32 3
  %svu_array151 = bitcast %union.anon.0* %sv_u150 to %struct.sv***
  store %struct.sv** %88, %struct.sv*** %svu_array151, align 8
  %91 = load %struct.context*, %struct.context** %cx.addr, align 8
  %cx_u152 = getelementptr inbounds %struct.context, %struct.context* %91, i32 0, i32 0
  %cx_blk153 = bitcast %union.anon.16* %cx_u152 to %struct.block*
  %blk_u154 = getelementptr inbounds %struct.block, %struct.block* %cx_blk153, i32 0, i32 8
  %blku_sub155 = bitcast %union.anon.20* %blk_u154 to %struct.block_sub*
  %argarray156 = getelementptr inbounds %struct.block_sub, %struct.block_sub* %blku_sub155, i32 0, i32 3
  %92 = load %struct.av*, %struct.av** %argarray156, align 8
  %sv_any157 = getelementptr inbounds %struct.av, %struct.av* %92, i32 0, i32 0
  %93 = load %struct.xpvav*, %struct.xpvav** %sv_any157, align 8
  %xav_fill158 = getelementptr inbounds %struct.xpvav, %struct.xpvav* %93, i32 0, i32 2
  store i64 -1, i64* %xav_fill158, align 8
  br label %do.end159

do.end159:                                        ; preds = %do.body117
  br label %if.end160

if.end160:                                        ; preds = %do.end159, %if.then71
  br label %if.end161

if.end161:                                        ; preds = %if.end160, %if.then43
  br label %if.end162

if.end162:                                        ; preds = %if.end161, %do.body
  %94 = load %struct.context*, %struct.context** %cx.addr, align 8
  %cx_u163 = getelementptr inbounds %struct.context, %struct.context* %94, i32 0, i32 0
  %cx_blk164 = bitcast %union.anon.16* %cx_u163 to %struct.block*
  %blk_u165 = getelementptr inbounds %struct.block, %struct.block* %cx_blk164, i32 0, i32 8
  %blku_sub166 = bitcast %union.anon.20* %blk_u165 to %struct.block_sub*
  %cv = getelementptr inbounds %struct.block_sub, %struct.block_sub* %blku_sub166, i32 0, i32 1
  %95 = load %struct.cv*, %struct.cv** %cv, align 8
  %96 = bitcast %struct.cv* %95 to i8*
  %97 = bitcast i8* %96 to %struct.sv*
  store %struct.sv* %97, %struct.sv** %sv, align 8
  br label %do.body167

do.body167:                                       ; preds = %if.end162
  %98 = load i32, i32* @PL_savestack_ix, align 4
  %99 = load i32*, i32** @PL_scopestack, align 8
  %100 = load %struct.context*, %struct.context** %cx.addr, align 8
  %cx_u168 = getelementptr inbounds %struct.context, %struct.context* %100, i32 0, i32 0
  %cx_blk169 = bitcast %union.anon.16* %cx_u168 to %struct.block*
  %blku_oldscopesp = getelementptr inbounds %struct.block, %struct.block* %cx_blk169, i32 0, i32 6
  %101 = load i32, i32* %blku_oldscopesp, align 4
  %sub = sub nsw i32 %101, 1
  %idxprom = sext i32 %sub to i64
  %arrayidx170 = getelementptr inbounds i32, i32* %99, i64 %idxprom
  %102 = load i32, i32* %arrayidx170, align 4
  %cmp171 = icmp sgt i32 %98, %102
  br i1 %cmp171, label %if.then173, label %if.end180

if.then173:                                       ; preds = %do.body167
  %103 = load i32*, i32** @PL_scopestack, align 8
  %104 = load %struct.context*, %struct.context** %cx.addr, align 8
  %cx_u174 = getelementptr inbounds %struct.context, %struct.context* %104, i32 0, i32 0
  %cx_blk175 = bitcast %union.anon.16* %cx_u174 to %struct.block*
  %blku_oldscopesp176 = getelementptr inbounds %struct.block, %struct.block* %cx_blk175, i32 0, i32 6
  %105 = load i32, i32* %blku_oldscopesp176, align 4
  %sub177 = sub nsw i32 %105, 1
  %idxprom178 = sext i32 %sub177 to i64
  %arrayidx179 = getelementptr inbounds i32, i32* %103, i64 %idxprom178
  %106 = load i32, i32* %arrayidx179, align 4
  call void @Perl_leave_scope(i32 %106)
  br label %if.end180

if.end180:                                        ; preds = %if.then173, %do.body167
  br label %do.end181

do.end181:                                        ; preds = %if.end180
  %107 = load %struct.sv*, %struct.sv** %sv, align 8
  %tobool182 = icmp ne %struct.sv* %107, null
  br i1 %tobool182, label %land.lhs.true183, label %if.end187

land.lhs.true183:                                 ; preds = %do.end181
  %108 = load i32, i32* %olddepth, align 4
  %109 = load %struct.sv*, %struct.sv** %sv, align 8
  %110 = bitcast %struct.sv* %109 to %struct.cv*
  %call184 = call i32* @S_CvDEPTHp(%struct.cv* %110)
  store i32 %108, i32* %call184, align 4
  %tobool185 = icmp ne i32 %108, 0
  br i1 %tobool185, label %if.then186, label %if.end187

if.then186:                                       ; preds = %land.lhs.true183
  store %struct.sv* null, %struct.sv** %sv, align 8
  br label %if.end187

if.end187:                                        ; preds = %if.then186, %land.lhs.true183, %do.end181
  br label %do.end188

do.end188:                                        ; preds = %if.end187
  %111 = load %struct.pmop*, %struct.pmop** %newpm.addr, align 8
  store %struct.pmop* %111, %struct.pmop** @PL_curpm, align 8
  br label %do.body189

do.body189:                                       ; preds = %do.end188
  %112 = load %struct.sv*, %struct.sv** %sv, align 8
  %113 = bitcast %struct.sv* %112 to i8*
  %114 = bitcast i8* %113 to %struct.sv*
  call void @S_SvREFCNT_dec(%struct.sv* %114)
  br label %do.end190

do.end190:                                        ; preds = %do.body189
  %115 = load i8*, i8** %what, align 8
  call void (i8*, ...) @Perl_croak(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.91, i64 0, i64 0), i8* %115)
  br label %if.end191

if.end191:                                        ; preds = %do.end190, %land.lhs.true, %if.then
  %116 = load %struct.sv**, %struct.sv*** %mark.addr, align 8
  %117 = load %struct.sv**, %struct.sv*** %sp.addr, align 8
  %cmp192 = icmp ult %struct.sv** %116, %117
  br i1 %cmp192, label %if.then194, label %if.else250

if.then194:                                       ; preds = %if.end191
  br label %copy_sv

copy_sv:                                          ; preds = %if.then194, %if.else
  %118 = load %struct.context*, %struct.context** %cx.addr, align 8
  %cx_u195 = getelementptr inbounds %struct.context, %struct.context* %118, i32 0, i32 0
  %cx_blk196 = bitcast %union.anon.16* %cx_u195 to %struct.block*
  %blk_u197 = getelementptr inbounds %struct.block, %struct.block* %cx_blk196, i32 0, i32 8
  %blku_sub198 = bitcast %union.anon.20* %blk_u197 to %struct.block_sub*
  %cv199 = getelementptr inbounds %struct.block_sub, %struct.block_sub* %blku_sub198, i32 0, i32 1
  %119 = load %struct.cv*, %struct.cv** %cv199, align 8
  %tobool200 = icmp ne %struct.cv* %119, null
  br i1 %tobool200, label %land.lhs.true201, label %if.else231

land.lhs.true201:                                 ; preds = %copy_sv
  %120 = load %struct.context*, %struct.context** %cx.addr, align 8
  %cx_u202 = getelementptr inbounds %struct.context, %struct.context* %120, i32 0, i32 0
  %cx_blk203 = bitcast %union.anon.16* %cx_u202 to %struct.block*
  %blk_u204 = getelementptr inbounds %struct.block, %struct.block* %cx_blk203, i32 0, i32 8
  %blku_sub205 = bitcast %union.anon.20* %blk_u204 to %struct.block_sub*
  %cv206 = getelementptr inbounds %struct.block_sub, %struct.block_sub* %blku_sub205, i32 0, i32 1
  %121 = load %struct.cv*, %struct.cv** %cv206, align 8
  %call207 = call i32* @S_CvDEPTHp(%struct.cv* %121)
  %122 = load i32, i32* %call207, align 4
  %cmp208 = icmp sgt i32 %122, 1
  br i1 %cmp208, label %if.then210, label %if.else231

if.then210:                                       ; preds = %land.lhs.true201
  %123 = load %struct.sv**, %struct.sv*** %sp.addr, align 8
  %124 = load %struct.sv*, %struct.sv** %123, align 8
  %sv_flags211 = getelementptr inbounds %struct.sv, %struct.sv* %124, i32 0, i32 2
  %125 = load i32, i32* %sv_flags211, align 4
  %and212 = and i32 %125, 131072
  %tobool213 = icmp ne i32 %and212, 0
  br i1 %tobool213, label %if.else221, label %if.then214

if.then214:                                       ; preds = %if.then210
  %126 = load %struct.sv**, %struct.sv*** %sp.addr, align 8
  %127 = load %struct.sv*, %struct.sv** %126, align 8
  %128 = bitcast %struct.sv* %127 to i8*
  %129 = bitcast i8* %128 to %struct.sv*
  %call215 = call %struct.sv* @S_SvREFCNT_inc(%struct.sv* %129)
  %130 = load %struct.sv**, %struct.sv*** %newsp.addr, align 8
  %incdec.ptr = getelementptr inbounds %struct.sv*, %struct.sv** %130, i32 1
  store %struct.sv** %incdec.ptr, %struct.sv*** %newsp.addr, align 8
  store %struct.sv* %call215, %struct.sv** %incdec.ptr, align 8
  %131 = load i64, i64* @PL_tmps_ix, align 8
  %132 = load i64, i64* @PL_tmps_floor, align 8
  %cmp216 = icmp sgt i64 %131, %132
  br i1 %cmp216, label %if.then218, label %if.end219

if.then218:                                       ; preds = %if.then214
  call void @Perl_free_tmps()
  br label %if.end219

if.end219:                                        ; preds = %if.then218, %if.then214
  %133 = load %struct.sv**, %struct.sv*** %newsp.addr, align 8
  %134 = load %struct.sv*, %struct.sv** %133, align 8
  %call220 = call %struct.sv* @Perl_sv_2mortal(%struct.sv* %134)
  br label %if.end230

if.else221:                                       ; preds = %if.then210
  %135 = load %struct.sv**, %struct.sv*** %sp.addr, align 8
  %136 = load %struct.sv*, %struct.sv** %135, align 8
  %137 = bitcast %struct.sv* %136 to i8*
  %138 = bitcast i8* %137 to %struct.sv*
  %call223 = call %struct.sv* @S_SvREFCNT_inc(%struct.sv* %138)
  store %struct.sv* %call223, %struct.sv** %sv222, align 8
  %139 = load i64, i64* @PL_tmps_ix, align 8
  %140 = load i64, i64* @PL_tmps_floor, align 8
  %cmp224 = icmp sgt i64 %139, %140
  br i1 %cmp224, label %if.then226, label %if.end227

if.then226:                                       ; preds = %if.else221
  call void @Perl_free_tmps()
  br label %if.end227

if.end227:                                        ; preds = %if.then226, %if.else221
  %141 = load %struct.sv*, %struct.sv** %sv222, align 8
  %call228 = call %struct.sv* @Perl_sv_mortalcopy_flags(%struct.sv* %141, i32 1538)
  %142 = load %struct.sv**, %struct.sv*** %newsp.addr, align 8
  %incdec.ptr229 = getelementptr inbounds %struct.sv*, %struct.sv** %142, i32 1
  store %struct.sv** %incdec.ptr229, %struct.sv*** %newsp.addr, align 8
  store %struct.sv* %call228, %struct.sv** %incdec.ptr229, align 8
  %143 = load %struct.sv*, %struct.sv** %sv222, align 8
  %144 = bitcast %struct.sv* %143 to i8*
  %145 = bitcast i8* %144 to %struct.sv*
  call void @S_SvREFCNT_dec(%struct.sv* %145)
  br label %if.end230

if.end230:                                        ; preds = %if.end227, %if.end219
  br label %if.end249

if.else231:                                       ; preds = %land.lhs.true201, %copy_sv
  %146 = load %struct.sv**, %struct.sv*** %sp.addr, align 8
  %147 = load %struct.sv*, %struct.sv** %146, align 8
  %sv_flags232 = getelementptr inbounds %struct.sv, %struct.sv* %147, i32 0, i32 2
  %148 = load i32, i32* %sv_flags232, align 4
  %and233 = and i32 %148, 131072
  %tobool234 = icmp ne i32 %and233, 0
  br i1 %tobool234, label %cond.true235, label %cond.false237

cond.true235:                                     ; preds = %if.else231
  %149 = load %struct.sv**, %struct.sv*** %sp.addr, align 8
  %150 = load %struct.sv*, %struct.sv** %149, align 8
  %call236 = call %struct.sv* @Perl_sv_mortalcopy_flags(%struct.sv* %150, i32 1538)
  br label %cond.end246

cond.false237:                                    ; preds = %if.else231
  %151 = load %struct.sv**, %struct.sv*** %sp.addr, align 8
  %152 = load %struct.sv*, %struct.sv** %151, align 8
  %sv_flags238 = getelementptr inbounds %struct.sv, %struct.sv* %152, i32 0, i32 2
  %153 = load i32, i32* %sv_flags238, align 4
  %and239 = and i32 %153, 524288
  %tobool240 = icmp ne i32 %and239, 0
  br i1 %tobool240, label %cond.false243, label %cond.true241

cond.true241:                                     ; preds = %cond.false237
  %154 = load %struct.sv**, %struct.sv*** %sp.addr, align 8
  %155 = load %struct.sv*, %struct.sv** %154, align 8
  %sv_refcnt = getelementptr inbounds %struct.sv, %struct.sv* %155, i32 0, i32 1
  %156 = load i32, i32* %sv_refcnt, align 8
  %inc = add i32 %156, 1
  store i32 %inc, i32* %sv_refcnt, align 8
  %157 = load %struct.sv**, %struct.sv*** %sp.addr, align 8
  %158 = load %struct.sv*, %struct.sv** %157, align 8
  %159 = bitcast %struct.sv* %158 to i8*
  %160 = bitcast i8* %159 to %struct.sv*
  %call242 = call %struct.sv* @Perl_sv_2mortal(%struct.sv* %160)
  br label %cond.end244

cond.false243:                                    ; preds = %cond.false237
  %161 = load %struct.sv**, %struct.sv*** %sp.addr, align 8
  %162 = load %struct.sv*, %struct.sv** %161, align 8
  br label %cond.end244

cond.end244:                                      ; preds = %cond.false243, %cond.true241
  %cond245 = phi %struct.sv* [ %call242, %cond.true241 ], [ %162, %cond.false243 ]
  br label %cond.end246

cond.end246:                                      ; preds = %cond.end244, %cond.true235
  %cond247 = phi %struct.sv* [ %call236, %cond.true235 ], [ %cond245, %cond.end244 ]
  %163 = load %struct.sv**, %struct.sv*** %newsp.addr, align 8
  %incdec.ptr248 = getelementptr inbounds %struct.sv*, %struct.sv** %163, i32 1
  store %struct.sv** %incdec.ptr248, %struct.sv*** %newsp.addr, align 8
  store %struct.sv* %cond247, %struct.sv** %incdec.ptr248, align 8
  br label %if.end249

if.end249:                                        ; preds = %cond.end246, %if.end230
  br label %if.end265

if.else250:                                       ; preds = %if.end191
  br label %do.body251

do.body251:                                       ; preds = %if.else250
  %164 = load %struct.sv**, %struct.sv*** @PL_stack_max, align 8
  %165 = load %struct.sv**, %struct.sv*** %newsp.addr, align 8
  %sub.ptr.lhs.cast252 = ptrtoint %struct.sv** %164 to i64
  %sub.ptr.rhs.cast253 = ptrtoint %struct.sv** %165 to i64
  %sub.ptr.sub254 = sub i64 %sub.ptr.lhs.cast252, %sub.ptr.rhs.cast253
  %sub.ptr.div255 = sdiv exact i64 %sub.ptr.sub254, 8
  %cmp256 = icmp slt i64 %sub.ptr.div255, 1
  br i1 %cmp256, label %cond.true258, label %cond.false259

cond.true258:                                     ; preds = %do.body251
  br i1 true, label %if.then260, label %if.end262

cond.false259:                                    ; preds = %do.body251
  br i1 false, label %if.then260, label %if.end262

if.then260:                                       ; preds = %cond.false259, %cond.true258
  %166 = load %struct.sv**, %struct.sv*** %sp.addr, align 8
  %167 = load %struct.sv**, %struct.sv*** %newsp.addr, align 8
  %call261 = call %struct.sv** @Perl_stack_grow(%struct.sv** %166, %struct.sv** %167, i64 1)
  store %struct.sv** %call261, %struct.sv*** %sp.addr, align 8
  %168 = load %struct.sv**, %struct.sv*** %sp.addr, align 8
  br label %if.end262

if.end262:                                        ; preds = %if.then260, %cond.false259, %cond.true258
  br label %do.end263

do.end263:                                        ; preds = %if.end262
  %169 = load %struct.sv**, %struct.sv*** %newsp.addr, align 8
  %incdec.ptr264 = getelementptr inbounds %struct.sv*, %struct.sv** %169, i32 1
  store %struct.sv** %incdec.ptr264, %struct.sv*** %newsp.addr, align 8
  store %struct.sv* @PL_sv_undef, %struct.sv** %incdec.ptr264, align 8
  br label %if.end265

if.end265:                                        ; preds = %do.end263, %if.end249
  %170 = load %struct.context*, %struct.context** %cx.addr, align 8
  %cx_u266 = getelementptr inbounds %struct.context, %struct.context* %170, i32 0, i32 0
  %cx_blk267 = bitcast %union.anon.16* %cx_u266 to %struct.block*
  %blku_u16268 = getelementptr inbounds %struct.block, %struct.block* %cx_blk267, i32 0, i32 2
  %171 = load i16, i16* %blku_u16268, align 2
  %conv269 = zext i16 %171 to i32
  %and270 = and i32 %conv269, 255
  %add271 = add nsw i32 0, %and270
  %and272 = and i32 %add271, 48
  %tobool273 = icmp ne i32 %and272, 0
  br i1 %tobool273, label %if.then274, label %if.end305

if.then274:                                       ; preds = %if.end265
  %172 = load %struct.sv**, %struct.sv*** %sp.addr, align 8
  %173 = load %struct.sv*, %struct.sv** %172, align 8
  %sv_flags275 = getelementptr inbounds %struct.sv, %struct.sv* %173, i32 0, i32 2
  %174 = load i32, i32* %sv_flags275, align 4
  %and276 = and i32 %174, 2097152
  %tobool277 = icmp ne i32 %and276, 0
  br i1 %tobool277, label %cond.true278, label %cond.false279

cond.true278:                                     ; preds = %if.then274
  br i1 true, label %land.rhs, label %land.end

cond.false279:                                    ; preds = %if.then274
  br i1 false, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %cond.false279, %cond.true278
  %175 = load %struct.sv**, %struct.sv*** %sp.addr, align 8
  %176 = load %struct.sv*, %struct.sv** %175, align 8
  %call280 = call i32 @Perl_mg_get(%struct.sv* %176)
  %tobool281 = icmp ne i32 %call280, 0
  br label %land.end

land.end:                                         ; preds = %land.rhs, %cond.false279, %cond.true278
  %177 = phi i1 [ false, %cond.false279 ], [ false, %cond.true278 ], [ %tobool281, %land.rhs ]
  %land.ext = zext i1 %177 to i32
  %178 = load %struct.sv**, %struct.sv*** %sp.addr, align 8
  %179 = load %struct.sv*, %struct.sv** %178, align 8
  %sv_flags282 = getelementptr inbounds %struct.sv, %struct.sv* %179, i32 0, i32 2
  %180 = load i32, i32* %sv_flags282, align 4
  %and283 = and i32 %180, 65280
  %tobool284 = icmp ne i32 %and283, 0
  br i1 %tobool284, label %if.end304, label %lor.lhs.false285

lor.lhs.false285:                                 ; preds = %land.end
  %181 = load %struct.sv**, %struct.sv*** %sp.addr, align 8
  %182 = load %struct.sv*, %struct.sv** %181, align 8
  %sv_flags286 = getelementptr inbounds %struct.sv, %struct.sv* %182, i32 0, i32 2
  %183 = load i32, i32* %sv_flags286, align 4
  %and287 = and i32 %183, 255
  %cmp288 = icmp eq i32 %and287, 8
  br i1 %cmp288, label %if.end304, label %lor.lhs.false290

lor.lhs.false290:                                 ; preds = %lor.lhs.false285
  %184 = load %struct.sv**, %struct.sv*** %sp.addr, align 8
  %185 = load %struct.sv*, %struct.sv** %184, align 8
  %sv_flags291 = getelementptr inbounds %struct.sv, %struct.sv* %185, i32 0, i32 2
  %186 = load i32, i32* %sv_flags291, align 4
  %and292 = and i32 %186, 16826623
  %cmp293 = icmp eq i32 %and292, 16777226
  br i1 %cmp293, label %if.end304, label %if.then295

if.then295:                                       ; preds = %lor.lhs.false290
  %187 = load %struct.sv**, %struct.sv*** %sp.addr, align 8
  %188 = load %struct.sv*, %struct.sv** %187, align 8
  %189 = load %struct.context*, %struct.context** %cx.addr, align 8
  %cx_u296 = getelementptr inbounds %struct.context, %struct.context* %189, i32 0, i32 0
  %cx_blk297 = bitcast %union.anon.16* %cx_u296 to %struct.block*
  %blku_u16298 = getelementptr inbounds %struct.block, %struct.block* %cx_blk297, i32 0, i32 2
  %190 = load i16, i16* %blku_u16298, align 2
  %conv299 = zext i16 %190 to i32
  %and300 = and i32 %conv299, 255
  %add301 = add nsw i32 0, %and300
  %and302 = and i32 %add301, 48
  %call303 = call %struct.sv* @Perl_vivify_ref(%struct.sv* %188, i32 %and302)
  %191 = load %struct.sv**, %struct.sv*** %sp.addr, align 8
  store %struct.sv* %call303, %struct.sv** %191, align 8
  br label %if.end304

if.end304:                                        ; preds = %if.then295, %lor.lhs.false290, %lor.lhs.false285, %land.end
  br label %if.end305

if.end305:                                        ; preds = %if.end304, %if.end265
  br label %if.end576

if.else306:                                       ; preds = %entry
  %192 = load i32, i32* %gimme.addr, align 4
  %cmp307 = icmp eq i32 %192, 3
  br i1 %cmp307, label %if.then309, label %if.end575

if.then309:                                       ; preds = %if.else306
  %193 = load i8, i8* %ref, align 1
  %tobool310 = trunc i8 %193 to i1
  br i1 %tobool310, label %if.then320, label %lor.lhs.false312

lor.lhs.false312:                                 ; preds = %if.then309
  %194 = load %struct.context*, %struct.context** %cx.addr, align 8
  %cx_u313 = getelementptr inbounds %struct.context, %struct.context* %194, i32 0, i32 0
  %cx_blk314 = bitcast %union.anon.16* %cx_u313 to %struct.block*
  %blku_u16315 = getelementptr inbounds %struct.block, %struct.block* %cx_blk314, i32 0, i32 2
  %195 = load i16, i16* %blku_u16315, align 2
  %conv316 = zext i16 %195 to i32
  %and317 = and i32 %conv316, 255
  %add318 = add nsw i32 0, %and317
  %tobool319 = icmp ne i32 %add318, 0
  br i1 %tobool319, label %if.else343, label %if.then320

if.then320:                                       ; preds = %lor.lhs.false312, %if.then309
  br label %while.cond

while.cond:                                       ; preds = %cond.end340, %if.then320
  %196 = load %struct.sv**, %struct.sv*** %mark.addr, align 8
  %incdec.ptr321 = getelementptr inbounds %struct.sv*, %struct.sv** %196, i32 1
  store %struct.sv** %incdec.ptr321, %struct.sv*** %mark.addr, align 8
  %197 = load %struct.sv**, %struct.sv*** %sp.addr, align 8
  %cmp322 = icmp ule %struct.sv** %incdec.ptr321, %197
  br i1 %cmp322, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %198 = load %struct.sv**, %struct.sv*** %mark.addr, align 8
  %199 = load %struct.sv*, %struct.sv** %198, align 8
  %sv_flags324 = getelementptr inbounds %struct.sv, %struct.sv* %199, i32 0, i32 2
  %200 = load i32, i32* %sv_flags324, align 4
  %and325 = and i32 %200, 131072
  %tobool326 = icmp ne i32 %and325, 0
  br i1 %tobool326, label %cond.true327, label %cond.false329

cond.true327:                                     ; preds = %while.body
  %201 = load %struct.sv**, %struct.sv*** %mark.addr, align 8
  %202 = load %struct.sv*, %struct.sv** %201, align 8
  %call328 = call %struct.sv* @Perl_sv_mortalcopy_flags(%struct.sv* %202, i32 1538)
  br label %cond.end340

cond.false329:                                    ; preds = %while.body
  %203 = load %struct.sv**, %struct.sv*** %mark.addr, align 8
  %204 = load %struct.sv*, %struct.sv** %203, align 8
  %sv_flags330 = getelementptr inbounds %struct.sv, %struct.sv* %204, i32 0, i32 2
  %205 = load i32, i32* %sv_flags330, align 4
  %and331 = and i32 %205, 524288
  %tobool332 = icmp ne i32 %and331, 0
  br i1 %tobool332, label %cond.true333, label %cond.false334

cond.true333:                                     ; preds = %cond.false329
  %206 = load %struct.sv**, %struct.sv*** %mark.addr, align 8
  %207 = load %struct.sv*, %struct.sv** %206, align 8
  br label %cond.end338

cond.false334:                                    ; preds = %cond.false329
  %208 = load %struct.sv**, %struct.sv*** %mark.addr, align 8
  %209 = load %struct.sv*, %struct.sv** %208, align 8
  %sv_refcnt335 = getelementptr inbounds %struct.sv, %struct.sv* %209, i32 0, i32 1
  %210 = load i32, i32* %sv_refcnt335, align 8
  %inc336 = add i32 %210, 1
  store i32 %inc336, i32* %sv_refcnt335, align 8
  %211 = load %struct.sv**, %struct.sv*** %mark.addr, align 8
  %212 = load %struct.sv*, %struct.sv** %211, align 8
  %213 = bitcast %struct.sv* %212 to i8*
  %214 = bitcast i8* %213 to %struct.sv*
  %call337 = call %struct.sv* @Perl_sv_2mortal(%struct.sv* %214)
  br label %cond.end338

cond.end338:                                      ; preds = %cond.false334, %cond.true333
  %cond339 = phi %struct.sv* [ %207, %cond.true333 ], [ %call337, %cond.false334 ]
  br label %cond.end340

cond.end340:                                      ; preds = %cond.end338, %cond.true327
  %cond341 = phi %struct.sv* [ %call328, %cond.true327 ], [ %cond339, %cond.end338 ]
  %215 = load %struct.sv**, %struct.sv*** %newsp.addr, align 8
  %incdec.ptr342 = getelementptr inbounds %struct.sv*, %struct.sv** %215, i32 1
  store %struct.sv** %incdec.ptr342, %struct.sv*** %newsp.addr, align 8
  store %struct.sv* %cond341, %struct.sv** %incdec.ptr342, align 8
  br label %while.cond

while.end:                                        ; preds = %while.cond
  br label %if.end574

if.else343:                                       ; preds = %lor.lhs.false312
  br label %while.cond344

while.cond344:                                    ; preds = %if.end572, %if.else343
  %216 = load %struct.sv**, %struct.sv*** %mark.addr, align 8
  %incdec.ptr345 = getelementptr inbounds %struct.sv*, %struct.sv** %216, i32 1
  store %struct.sv** %incdec.ptr345, %struct.sv*** %mark.addr, align 8
  %217 = load %struct.sv**, %struct.sv*** %sp.addr, align 8
  %cmp346 = icmp ule %struct.sv** %incdec.ptr345, %217
  br i1 %cmp346, label %while.body348, label %while.end573

while.body348:                                    ; preds = %while.cond344
  %218 = load %struct.sv**, %struct.sv*** %mark.addr, align 8
  %219 = load %struct.sv*, %struct.sv** %218, align 8
  %cmp349 = icmp ne %struct.sv* %219, @PL_sv_undef
  br i1 %cmp349, label %land.lhs.true351, label %if.else560

land.lhs.true351:                                 ; preds = %while.body348
  %220 = load %struct.sv**, %struct.sv*** %mark.addr, align 8
  %221 = load %struct.sv*, %struct.sv** %220, align 8
  %sv_flags352 = getelementptr inbounds %struct.sv, %struct.sv* %221, i32 0, i32 2
  %222 = load i32, i32* %sv_flags352, align 4
  %and353 = and i32 %222, 131072
  %tobool354 = icmp ne i32 %and353, 0
  br i1 %tobool354, label %if.then359, label %lor.lhs.false355

lor.lhs.false355:                                 ; preds = %land.lhs.true351
  %223 = load %struct.sv**, %struct.sv*** %mark.addr, align 8
  %224 = load %struct.sv*, %struct.sv** %223, align 8
  %sv_flags356 = getelementptr inbounds %struct.sv, %struct.sv* %224, i32 0, i32 2
  %225 = load i32, i32* %sv_flags356, align 4
  %and357 = and i32 %225, 134283264
  %tobool358 = icmp ne i32 %and357, 0
  br i1 %tobool358, label %if.then359, label %if.else560

if.then359:                                       ; preds = %lor.lhs.false355, %land.lhs.true351
  %226 = load %struct.sv**, %struct.sv*** %mark.addr, align 8
  %227 = load %struct.sv*, %struct.sv** %226, align 8
  %sv_flags360 = getelementptr inbounds %struct.sv, %struct.sv* %227, i32 0, i32 2
  %228 = load i32, i32* %sv_flags360, align 4
  %and361 = and i32 %228, 134283264
  %tobool362 = icmp ne i32 %and361, 0
  %229 = zext i1 %tobool362 to i64
  %cond363 = select i1 %tobool362, i32 1, i32 0
  %tobool364 = icmp ne i32 %cond363, 0
  %frombool365 = zext i1 %tobool364 to i8
  store i8 %frombool365, i8* %ro, align 1
  %230 = load %struct.sv**, %struct.sv*** %sp.addr, align 8
  store %struct.sv** %230, %struct.sv*** @PL_stack_sp, align 8
  call void @Perl_pop_scope()
  %231 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %si_cxix367 = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %231, i32 0, i32 4
  %232 = load i32, i32* %si_cxix367, align 8
  %dec368 = add nsw i32 %232, -1
  store i32 %dec368, i32* %si_cxix367, align 8
  br label %do.body369

do.body369:                                       ; preds = %if.then359
  %233 = load %struct.context*, %struct.context** %cx.addr, align 8
  %cx_u371 = getelementptr inbounds %struct.context, %struct.context* %233, i32 0, i32 0
  %cx_blk372 = bitcast %union.anon.16* %cx_u371 to %struct.block*
  %blk_u373 = getelementptr inbounds %struct.block, %struct.block* %cx_blk372, i32 0, i32 8
  %blku_sub374 = bitcast %union.anon.20* %blk_u373 to %struct.block_sub*
  %olddepth375 = getelementptr inbounds %struct.block_sub, %struct.block_sub* %blku_sub374, i32 0, i32 4
  %234 = load i32, i32* %olddepth375, align 8
  store i32 %234, i32* %olddepth370, align 4
  %235 = load %struct.context*, %struct.context** %cx.addr, align 8
  %cx_u376 = getelementptr inbounds %struct.context, %struct.context* %235, i32 0, i32 0
  %cx_blk377 = bitcast %union.anon.16* %cx_u376 to %struct.block*
  %blku_u16378 = getelementptr inbounds %struct.block, %struct.block* %cx_blk377, i32 0, i32 2
  %236 = load i16, i16* %blku_u16378, align 2
  %conv379 = zext i16 %236 to i32
  %and380 = and i32 %conv379, 256
  %tobool381 = icmp ne i32 %and380, 0
  br i1 %tobool381, label %if.end524, label %if.then382

if.then382:                                       ; preds = %do.body369
  %237 = load %struct.context*, %struct.context** %cx.addr, align 8
  %cx_u383 = getelementptr inbounds %struct.context, %struct.context* %237, i32 0, i32 0
  %cx_blk384 = bitcast %union.anon.16* %cx_u383 to %struct.block*
  %blku_u16385 = getelementptr inbounds %struct.block, %struct.block* %cx_blk384, i32 0, i32 2
  %238 = load i16, i16* %blku_u16385, align 2
  %conv386 = zext i16 %238 to i32
  %or387 = or i32 %conv386, 256
  %conv388 = trunc i32 %or387 to i16
  store i16 %conv388, i16* %blku_u16385, align 2
  %239 = load %struct.context*, %struct.context** %cx.addr, align 8
  %cx_u389 = getelementptr inbounds %struct.context, %struct.context* %239, i32 0, i32 0
  %cx_subst390 = bitcast %union.anon.16* %cx_u389 to %struct.subst*
  %sbu_type391 = getelementptr inbounds %struct.subst, %struct.subst* %cx_subst390, i32 0, i32 0
  %240 = load i8, i8* %sbu_type391, align 8
  %conv392 = zext i8 %240 to i32
  %and393 = and i32 %conv392, 32
  %cmp394 = icmp eq i32 %and393, 32
  br i1 %cmp394, label %if.then396, label %if.end523

if.then396:                                       ; preds = %if.then382
  br label %do.body397

do.body397:                                       ; preds = %if.then396
  %241 = load %struct.gv*, %struct.gv** @PL_defgv, align 8
  %sv_u398 = getelementptr inbounds %struct.gv, %struct.gv* %241, i32 0, i32 3
  %svu_gp399 = bitcast %union.anon.4* %sv_u398 to %struct.gp**
  %242 = load %struct.gp*, %struct.gp** %svu_gp399, align 8
  %add.ptr400 = getelementptr inbounds %struct.gp, %struct.gp* %242, i64 0
  %gp_av401 = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr400, i32 0, i32 6
  %243 = load %struct.av*, %struct.av** %gp_av401, align 8
  %244 = bitcast %struct.av* %243 to i8*
  %245 = bitcast i8* %244 to %struct.sv*
  call void @S_SvREFCNT_dec(%struct.sv* %245)
  %246 = load %struct.context*, %struct.context** %cx.addr, align 8
  %cx_u402 = getelementptr inbounds %struct.context, %struct.context* %246, i32 0, i32 0
  %cx_blk403 = bitcast %union.anon.16* %cx_u402 to %struct.block*
  %blk_u404 = getelementptr inbounds %struct.block, %struct.block* %cx_blk403, i32 0, i32 8
  %blku_sub405 = bitcast %union.anon.20* %blk_u404 to %struct.block_sub*
  %savearray406 = getelementptr inbounds %struct.block_sub, %struct.block_sub* %blku_sub405, i32 0, i32 2
  %247 = load %struct.av*, %struct.av** %savearray406, align 8
  %248 = load %struct.gv*, %struct.gv** @PL_defgv, align 8
  %sv_u407 = getelementptr inbounds %struct.gv, %struct.gv* %248, i32 0, i32 3
  %svu_gp408 = bitcast %union.anon.4* %sv_u407 to %struct.gp**
  %249 = load %struct.gp*, %struct.gp** %svu_gp408, align 8
  %add.ptr409 = getelementptr inbounds %struct.gp, %struct.gp* %249, i64 0
  %gp_av410 = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr409, i32 0, i32 6
  store %struct.av* %247, %struct.av** %gp_av410, align 8
  br label %do.end411

do.end411:                                        ; preds = %do.body397
  %250 = load %struct.context*, %struct.context** %cx.addr, align 8
  %cx_u412 = getelementptr inbounds %struct.context, %struct.context* %250, i32 0, i32 0
  %cx_blk413 = bitcast %union.anon.16* %cx_u412 to %struct.block*
  %blk_u414 = getelementptr inbounds %struct.block, %struct.block* %cx_blk413, i32 0, i32 8
  %blku_sub415 = bitcast %union.anon.20* %blk_u414 to %struct.block_sub*
  %argarray416 = getelementptr inbounds %struct.block_sub, %struct.block_sub* %blku_sub415, i32 0, i32 3
  %251 = load %struct.av*, %struct.av** %argarray416, align 8
  %sv_flags417 = getelementptr inbounds %struct.av, %struct.av* %251, i32 0, i32 2
  %252 = load i32, i32* %sv_flags417, align 4
  %and418 = and i32 %252, 1073741824
  %tobool419 = icmp ne i32 %and418, 0
  br i1 %tobool419, label %if.then420, label %if.else472

if.then420:                                       ; preds = %do.end411
  %253 = load %struct.context*, %struct.context** %cx.addr, align 8
  %cx_u422 = getelementptr inbounds %struct.context, %struct.context* %253, i32 0, i32 0
  %cx_blk423 = bitcast %union.anon.16* %cx_u422 to %struct.block*
  %blk_u424 = getelementptr inbounds %struct.block, %struct.block* %cx_blk423, i32 0, i32 8
  %blku_sub425 = bitcast %union.anon.20* %blk_u424 to %struct.block_sub*
  %argarray426 = getelementptr inbounds %struct.block_sub, %struct.block_sub* %blku_sub425, i32 0, i32 3
  %254 = load %struct.av*, %struct.av** %argarray426, align 8
  %sv_any427 = getelementptr inbounds %struct.av, %struct.av* %254, i32 0, i32 0
  %255 = load %struct.xpvav*, %struct.xpvav** %sv_any427, align 8
  %xav_fill428 = getelementptr inbounds %struct.xpvav, %struct.xpvav* %255, i32 0, i32 2
  %256 = load i64, i64* %xav_fill428, align 8
  store i64 %256, i64* %fill421, align 8
  %257 = load %struct.context*, %struct.context** %cx.addr, align 8
  %cx_u429 = getelementptr inbounds %struct.context, %struct.context* %257, i32 0, i32 0
  %cx_blk430 = bitcast %union.anon.16* %cx_u429 to %struct.block*
  %blk_u431 = getelementptr inbounds %struct.block, %struct.block* %cx_blk430, i32 0, i32 8
  %blku_sub432 = bitcast %union.anon.20* %blk_u431 to %struct.block_sub*
  %argarray433 = getelementptr inbounds %struct.block_sub, %struct.block_sub* %blku_sub432, i32 0, i32 3
  %258 = load %struct.av*, %struct.av** %argarray433, align 8
  %259 = bitcast %struct.av* %258 to i8*
  %260 = bitcast i8* %259 to %struct.sv*
  call void @S_SvREFCNT_dec_NN(%struct.sv* %260)
  %call434 = call %struct.sv* @Perl_newSV_type(i32 11)
  %261 = bitcast %struct.sv* %call434 to i8*
  %262 = bitcast i8* %261 to %struct.av*
  %263 = load %struct.context*, %struct.context** %cx.addr, align 8
  %cx_u435 = getelementptr inbounds %struct.context, %struct.context* %263, i32 0, i32 0
  %cx_blk436 = bitcast %union.anon.16* %cx_u435 to %struct.block*
  %blk_u437 = getelementptr inbounds %struct.block, %struct.block* %cx_blk436, i32 0, i32 8
  %blku_sub438 = bitcast %union.anon.20* %blk_u437 to %struct.block_sub*
  %argarray439 = getelementptr inbounds %struct.block_sub, %struct.block_sub* %blku_sub438, i32 0, i32 3
  store %struct.av* %262, %struct.av** %argarray439, align 8
  %264 = load %struct.context*, %struct.context** %cx.addr, align 8
  %cx_u440 = getelementptr inbounds %struct.context, %struct.context* %264, i32 0, i32 0
  %cx_blk441 = bitcast %union.anon.16* %cx_u440 to %struct.block*
  %blk_u442 = getelementptr inbounds %struct.block, %struct.block* %cx_blk441, i32 0, i32 8
  %blku_sub443 = bitcast %union.anon.20* %blk_u442 to %struct.block_sub*
  %argarray444 = getelementptr inbounds %struct.block_sub, %struct.block_sub* %blku_sub443, i32 0, i32 3
  %265 = load %struct.av*, %struct.av** %argarray444, align 8
  %266 = load i64, i64* %fill421, align 8
  call void @Perl_av_extend(%struct.av* %265, i64 %266)
  %267 = load %struct.context*, %struct.context** %cx.addr, align 8
  %cx_u445 = getelementptr inbounds %struct.context, %struct.context* %267, i32 0, i32 0
  %cx_blk446 = bitcast %union.anon.16* %cx_u445 to %struct.block*
  %blk_u447 = getelementptr inbounds %struct.block, %struct.block* %cx_blk446, i32 0, i32 8
  %blku_sub448 = bitcast %union.anon.20* %blk_u447 to %struct.block_sub*
  %argarray449 = getelementptr inbounds %struct.block_sub, %struct.block_sub* %blku_sub448, i32 0, i32 3
  %268 = load %struct.av*, %struct.av** %argarray449, align 8
  %sv_flags450 = getelementptr inbounds %struct.av, %struct.av* %268, i32 0, i32 2
  %269 = load i32, i32* %sv_flags450, align 4
  %and451 = and i32 %269, -1073741825
  store i32 %and451, i32* %sv_flags450, align 4
  %270 = load %struct.context*, %struct.context** %cx.addr, align 8
  %cx_u452 = getelementptr inbounds %struct.context, %struct.context* %270, i32 0, i32 0
  %cx_blk453 = bitcast %union.anon.16* %cx_u452 to %struct.block*
  %blk_u454 = getelementptr inbounds %struct.block, %struct.block* %cx_blk453, i32 0, i32 8
  %blku_sub455 = bitcast %union.anon.20* %blk_u454 to %struct.block_sub*
  %argarray456 = getelementptr inbounds %struct.block_sub, %struct.block_sub* %blku_sub455, i32 0, i32 3
  %271 = load %struct.av*, %struct.av** %argarray456, align 8
  %sv_flags457 = getelementptr inbounds %struct.av, %struct.av* %271, i32 0, i32 2
  %272 = load i32, i32* %sv_flags457, align 4
  %or458 = or i32 %272, -2147483648
  store i32 %or458, i32* %sv_flags457, align 4
  %273 = load %struct.context*, %struct.context** %cx.addr, align 8
  %cx_u459 = getelementptr inbounds %struct.context, %struct.context* %273, i32 0, i32 0
  %cx_blk460 = bitcast %union.anon.16* %cx_u459 to %struct.block*
  %blk_u461 = getelementptr inbounds %struct.block, %struct.block* %cx_blk460, i32 0, i32 8
  %blku_sub462 = bitcast %union.anon.20* %blk_u461 to %struct.block_sub*
  %argarray463 = getelementptr inbounds %struct.block_sub, %struct.block_sub* %blku_sub462, i32 0, i32 3
  %274 = load %struct.av*, %struct.av** %argarray463, align 8
  %275 = bitcast %struct.av* %274 to i8*
  %276 = bitcast i8* %275 to %struct.sv*
  %277 = load %struct.context*, %struct.context** %cx.addr, align 8
  %cx_u464 = getelementptr inbounds %struct.context, %struct.context* %277, i32 0, i32 0
  %cx_blk465 = bitcast %union.anon.16* %cx_u464 to %struct.block*
  %blk_u466 = getelementptr inbounds %struct.block, %struct.block* %cx_blk465, i32 0, i32 8
  %blku_sub467 = bitcast %union.anon.20* %blk_u466 to %struct.block_sub*
  %oldcomppad468 = getelementptr inbounds %struct.block_sub, %struct.block_sub* %blku_sub467, i32 0, i32 5
  %278 = load %struct.av*, %struct.av** %oldcomppad468, align 8
  %279 = bitcast %struct.av* %278 to i8*
  %280 = bitcast i8* %279 to %struct.av*
  %sv_u469 = getelementptr inbounds %struct.av, %struct.av* %280, i32 0, i32 3
  %svu_array470 = bitcast %union.anon.0* %sv_u469 to %struct.sv***
  %281 = load %struct.sv**, %struct.sv*** %svu_array470, align 8
  %arrayidx471 = getelementptr inbounds %struct.sv*, %struct.sv** %281, i64 0
  store %struct.sv* %276, %struct.sv** %arrayidx471, align 8
  br label %if.end522

if.else472:                                       ; preds = %do.end411
  br label %do.body473

do.body473:                                       ; preds = %if.else472
  %282 = load %struct.context*, %struct.context** %cx.addr, align 8
  %cx_u474 = getelementptr inbounds %struct.context, %struct.context* %282, i32 0, i32 0
  %cx_blk475 = bitcast %union.anon.16* %cx_u474 to %struct.block*
  %blk_u476 = getelementptr inbounds %struct.block, %struct.block* %cx_blk475, i32 0, i32 8
  %blku_sub477 = bitcast %union.anon.20* %blk_u476 to %struct.block_sub*
  %argarray478 = getelementptr inbounds %struct.block_sub, %struct.block_sub* %blku_sub477, i32 0, i32 3
  %283 = load %struct.av*, %struct.av** %argarray478, align 8
  %sv_u479 = getelementptr inbounds %struct.av, %struct.av* %283, i32 0, i32 3
  %svu_array480 = bitcast %union.anon.0* %sv_u479 to %struct.sv***
  %284 = load %struct.sv**, %struct.sv*** %svu_array480, align 8
  %285 = load %struct.context*, %struct.context** %cx.addr, align 8
  %cx_u481 = getelementptr inbounds %struct.context, %struct.context* %285, i32 0, i32 0
  %cx_blk482 = bitcast %union.anon.16* %cx_u481 to %struct.block*
  %blk_u483 = getelementptr inbounds %struct.block, %struct.block* %cx_blk482, i32 0, i32 8
  %blku_sub484 = bitcast %union.anon.20* %blk_u483 to %struct.block_sub*
  %argarray485 = getelementptr inbounds %struct.block_sub, %struct.block_sub* %blku_sub484, i32 0, i32 3
  %286 = load %struct.av*, %struct.av** %argarray485, align 8
  %sv_any486 = getelementptr inbounds %struct.av, %struct.av* %286, i32 0, i32 0
  %287 = load %struct.xpvav*, %struct.xpvav** %sv_any486, align 8
  %xav_alloc487 = getelementptr inbounds %struct.xpvav, %struct.xpvav* %287, i32 0, i32 4
  %288 = load %struct.sv**, %struct.sv*** %xav_alloc487, align 8
  %sub.ptr.lhs.cast488 = ptrtoint %struct.sv** %284 to i64
  %sub.ptr.rhs.cast489 = ptrtoint %struct.sv** %288 to i64
  %sub.ptr.sub490 = sub i64 %sub.ptr.lhs.cast488, %sub.ptr.rhs.cast489
  %sub.ptr.div491 = sdiv exact i64 %sub.ptr.sub490, 8
  %289 = load %struct.context*, %struct.context** %cx.addr, align 8
  %cx_u492 = getelementptr inbounds %struct.context, %struct.context* %289, i32 0, i32 0
  %cx_blk493 = bitcast %union.anon.16* %cx_u492 to %struct.block*
  %blk_u494 = getelementptr inbounds %struct.block, %struct.block* %cx_blk493, i32 0, i32 8
  %blku_sub495 = bitcast %union.anon.20* %blk_u494 to %struct.block_sub*
  %argarray496 = getelementptr inbounds %struct.block_sub, %struct.block_sub* %blku_sub495, i32 0, i32 3
  %290 = load %struct.av*, %struct.av** %argarray496, align 8
  %sv_any497 = getelementptr inbounds %struct.av, %struct.av* %290, i32 0, i32 0
  %291 = load %struct.xpvav*, %struct.xpvav** %sv_any497, align 8
  %xav_max498 = getelementptr inbounds %struct.xpvav, %struct.xpvav* %291, i32 0, i32 3
  %292 = load i64, i64* %xav_max498, align 8
  %add499 = add nsw i64 %292, %sub.ptr.div491
  store i64 %add499, i64* %xav_max498, align 8
  %293 = load %struct.context*, %struct.context** %cx.addr, align 8
  %cx_u500 = getelementptr inbounds %struct.context, %struct.context* %293, i32 0, i32 0
  %cx_blk501 = bitcast %union.anon.16* %cx_u500 to %struct.block*
  %blk_u502 = getelementptr inbounds %struct.block, %struct.block* %cx_blk501, i32 0, i32 8
  %blku_sub503 = bitcast %union.anon.20* %blk_u502 to %struct.block_sub*
  %argarray504 = getelementptr inbounds %struct.block_sub, %struct.block_sub* %blku_sub503, i32 0, i32 3
  %294 = load %struct.av*, %struct.av** %argarray504, align 8
  %sv_any505 = getelementptr inbounds %struct.av, %struct.av* %294, i32 0, i32 0
  %295 = load %struct.xpvav*, %struct.xpvav** %sv_any505, align 8
  %xav_alloc506 = getelementptr inbounds %struct.xpvav, %struct.xpvav* %295, i32 0, i32 4
  %296 = load %struct.sv**, %struct.sv*** %xav_alloc506, align 8
  %297 = load %struct.context*, %struct.context** %cx.addr, align 8
  %cx_u507 = getelementptr inbounds %struct.context, %struct.context* %297, i32 0, i32 0
  %cx_blk508 = bitcast %union.anon.16* %cx_u507 to %struct.block*
  %blk_u509 = getelementptr inbounds %struct.block, %struct.block* %cx_blk508, i32 0, i32 8
  %blku_sub510 = bitcast %union.anon.20* %blk_u509 to %struct.block_sub*
  %argarray511 = getelementptr inbounds %struct.block_sub, %struct.block_sub* %blku_sub510, i32 0, i32 3
  %298 = load %struct.av*, %struct.av** %argarray511, align 8
  %sv_u512 = getelementptr inbounds %struct.av, %struct.av* %298, i32 0, i32 3
  %svu_array513 = bitcast %union.anon.0* %sv_u512 to %struct.sv***
  store %struct.sv** %296, %struct.sv*** %svu_array513, align 8
  %299 = load %struct.context*, %struct.context** %cx.addr, align 8
  %cx_u514 = getelementptr inbounds %struct.context, %struct.context* %299, i32 0, i32 0
  %cx_blk515 = bitcast %union.anon.16* %cx_u514 to %struct.block*
  %blk_u516 = getelementptr inbounds %struct.block, %struct.block* %cx_blk515, i32 0, i32 8
  %blku_sub517 = bitcast %union.anon.20* %blk_u516 to %struct.block_sub*
  %argarray518 = getelementptr inbounds %struct.block_sub, %struct.block_sub* %blku_sub517, i32 0, i32 3
  %300 = load %struct.av*, %struct.av** %argarray518, align 8
  %sv_any519 = getelementptr inbounds %struct.av, %struct.av* %300, i32 0, i32 0
  %301 = load %struct.xpvav*, %struct.xpvav** %sv_any519, align 8
  %xav_fill520 = getelementptr inbounds %struct.xpvav, %struct.xpvav* %301, i32 0, i32 2
  store i64 -1, i64* %xav_fill520, align 8
  br label %do.end521

do.end521:                                        ; preds = %do.body473
  br label %if.end522

if.end522:                                        ; preds = %do.end521, %if.then420
  br label %if.end523

if.end523:                                        ; preds = %if.end522, %if.then382
  br label %if.end524

if.end524:                                        ; preds = %if.end523, %do.body369
  %302 = load %struct.context*, %struct.context** %cx.addr, align 8
  %cx_u525 = getelementptr inbounds %struct.context, %struct.context* %302, i32 0, i32 0
  %cx_blk526 = bitcast %union.anon.16* %cx_u525 to %struct.block*
  %blk_u527 = getelementptr inbounds %struct.block, %struct.block* %cx_blk526, i32 0, i32 8
  %blku_sub528 = bitcast %union.anon.20* %blk_u527 to %struct.block_sub*
  %cv529 = getelementptr inbounds %struct.block_sub, %struct.block_sub* %blku_sub528, i32 0, i32 1
  %303 = load %struct.cv*, %struct.cv** %cv529, align 8
  %304 = bitcast %struct.cv* %303 to i8*
  %305 = bitcast i8* %304 to %struct.sv*
  store %struct.sv* %305, %struct.sv** %sv366, align 8
  br label %do.body530

do.body530:                                       ; preds = %if.end524
  %306 = load i32, i32* @PL_savestack_ix, align 4
  %307 = load i32*, i32** @PL_scopestack, align 8
  %308 = load %struct.context*, %struct.context** %cx.addr, align 8
  %cx_u531 = getelementptr inbounds %struct.context, %struct.context* %308, i32 0, i32 0
  %cx_blk532 = bitcast %union.anon.16* %cx_u531 to %struct.block*
  %blku_oldscopesp533 = getelementptr inbounds %struct.block, %struct.block* %cx_blk532, i32 0, i32 6
  %309 = load i32, i32* %blku_oldscopesp533, align 4
  %sub534 = sub nsw i32 %309, 1
  %idxprom535 = sext i32 %sub534 to i64
  %arrayidx536 = getelementptr inbounds i32, i32* %307, i64 %idxprom535
  %310 = load i32, i32* %arrayidx536, align 4
  %cmp537 = icmp sgt i32 %306, %310
  br i1 %cmp537, label %if.then539, label %if.end546

if.then539:                                       ; preds = %do.body530
  %311 = load i32*, i32** @PL_scopestack, align 8
  %312 = load %struct.context*, %struct.context** %cx.addr, align 8
  %cx_u540 = getelementptr inbounds %struct.context, %struct.context* %312, i32 0, i32 0
  %cx_blk541 = bitcast %union.anon.16* %cx_u540 to %struct.block*
  %blku_oldscopesp542 = getelementptr inbounds %struct.block, %struct.block* %cx_blk541, i32 0, i32 6
  %313 = load i32, i32* %blku_oldscopesp542, align 4
  %sub543 = sub nsw i32 %313, 1
  %idxprom544 = sext i32 %sub543 to i64
  %arrayidx545 = getelementptr inbounds i32, i32* %311, i64 %idxprom544
  %314 = load i32, i32* %arrayidx545, align 4
  call void @Perl_leave_scope(i32 %314)
  br label %if.end546

if.end546:                                        ; preds = %if.then539, %do.body530
  br label %do.end547

do.end547:                                        ; preds = %if.end546
  %315 = load %struct.sv*, %struct.sv** %sv366, align 8
  %tobool548 = icmp ne %struct.sv* %315, null
  br i1 %tobool548, label %land.lhs.true549, label %if.end553

land.lhs.true549:                                 ; preds = %do.end547
  %316 = load i32, i32* %olddepth370, align 4
  %317 = load %struct.sv*, %struct.sv** %sv366, align 8
  %318 = bitcast %struct.sv* %317 to %struct.cv*
  %call550 = call i32* @S_CvDEPTHp(%struct.cv* %318)
  store i32 %316, i32* %call550, align 4
  %tobool551 = icmp ne i32 %316, 0
  br i1 %tobool551, label %if.then552, label %if.end553

if.then552:                                       ; preds = %land.lhs.true549
  store %struct.sv* null, %struct.sv** %sv366, align 8
  br label %if.end553

if.end553:                                        ; preds = %if.then552, %land.lhs.true549, %do.end547
  br label %do.end554

do.end554:                                        ; preds = %if.end553
  %319 = load %struct.pmop*, %struct.pmop** %newpm.addr, align 8
  store %struct.pmop* %319, %struct.pmop** @PL_curpm, align 8
  br label %do.body555

do.body555:                                       ; preds = %do.end554
  %320 = load %struct.sv*, %struct.sv** %sv366, align 8
  %321 = bitcast %struct.sv* %320 to i8*
  %322 = bitcast i8* %321 to %struct.sv*
  call void @S_SvREFCNT_dec(%struct.sv* %322)
  br label %do.end556

do.end556:                                        ; preds = %do.body555
  %323 = load i8, i8* %ro, align 1
  %tobool557 = trunc i8 %323 to i1
  %324 = zext i1 %tobool557 to i64
  %cond559 = select i1 %tobool557, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.93, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.94, i64 0, i64 0)
  call void (i8*, ...) @Perl_croak(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.92, i64 0, i64 0), i8* %cond559)
  br label %if.end572

if.else560:                                       ; preds = %lor.lhs.false355, %while.body348
  %325 = load %struct.sv**, %struct.sv*** %mark.addr, align 8
  %326 = load %struct.sv*, %struct.sv** %325, align 8
  %sv_flags561 = getelementptr inbounds %struct.sv, %struct.sv* %326, i32 0, i32 2
  %327 = load i32, i32* %sv_flags561, align 4
  %and562 = and i32 %327, 524288
  %tobool563 = icmp ne i32 %and562, 0
  br i1 %tobool563, label %cond.true564, label %cond.false565

cond.true564:                                     ; preds = %if.else560
  %328 = load %struct.sv**, %struct.sv*** %mark.addr, align 8
  %329 = load %struct.sv*, %struct.sv** %328, align 8
  br label %cond.end569

cond.false565:                                    ; preds = %if.else560
  %330 = load %struct.sv**, %struct.sv*** %mark.addr, align 8
  %331 = load %struct.sv*, %struct.sv** %330, align 8
  %sv_refcnt566 = getelementptr inbounds %struct.sv, %struct.sv* %331, i32 0, i32 1
  %332 = load i32, i32* %sv_refcnt566, align 8
  %inc567 = add i32 %332, 1
  store i32 %inc567, i32* %sv_refcnt566, align 8
  %333 = load %struct.sv**, %struct.sv*** %mark.addr, align 8
  %334 = load %struct.sv*, %struct.sv** %333, align 8
  %335 = bitcast %struct.sv* %334 to i8*
  %336 = bitcast i8* %335 to %struct.sv*
  %call568 = call %struct.sv* @Perl_sv_2mortal(%struct.sv* %336)
  br label %cond.end569

cond.end569:                                      ; preds = %cond.false565, %cond.true564
  %cond570 = phi %struct.sv* [ %329, %cond.true564 ], [ %call568, %cond.false565 ]
  %337 = load %struct.sv**, %struct.sv*** %newsp.addr, align 8
  %incdec.ptr571 = getelementptr inbounds %struct.sv*, %struct.sv** %337, i32 1
  store %struct.sv** %incdec.ptr571, %struct.sv*** %newsp.addr, align 8
  store %struct.sv* %cond570, %struct.sv** %incdec.ptr571, align 8
  br label %if.end572

if.end572:                                        ; preds = %cond.end569, %do.end556
  br label %while.cond344

while.end573:                                     ; preds = %while.cond344
  br label %if.end574

if.end574:                                        ; preds = %while.end573, %while.end
  br label %if.end575

if.end575:                                        ; preds = %if.end574, %if.else306
  br label %if.end576

if.end576:                                        ; preds = %if.end575, %if.end305
  %338 = load %struct.sv**, %struct.sv*** %newsp.addr, align 8
  store %struct.sv** %338, %struct.sv*** @PL_stack_sp, align 8
  ret void
}

declare dso_local i32 @Perl_mg_free(%struct.sv*) #1

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.op* @Perl_pp_leavesublv() #0 {
entry:
  %retval = alloca %struct.op*, align 8
  %sp = alloca %struct.sv**, align 8
  %newsp = alloca %struct.sv**, align 8
  %newpm = alloca %struct.pmop*, align 8
  %gimme = alloca i32, align 4
  %cx = alloca %struct.context*, align 8
  %sv = alloca %struct.sv*, align 8
  %olddepth = alloca i32, align 4
  %fill = alloca i64, align 8
  %0 = load %struct.sv**, %struct.sv*** @PL_stack_sp, align 8
  store %struct.sv** %0, %struct.sv*** %sp, align 8
  %1 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %si_cxstack = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %1, i32 0, i32 1
  %2 = load %struct.context*, %struct.context** %si_cxstack, align 8
  %3 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %si_cxix = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %3, i32 0, i32 4
  %4 = load i32, i32* %si_cxix, align 8
  %idxprom = sext i32 %4 to i64
  %arrayidx = getelementptr inbounds %struct.context, %struct.context* %2, i64 %idxprom
  %cx_u = getelementptr inbounds %struct.context, %struct.context* %arrayidx, i32 0, i32 0
  %cx_subst = bitcast %union.anon.16* %cx_u to %struct.subst*
  %sbu_type = getelementptr inbounds %struct.subst, %struct.subst* %cx_subst, i32 0, i32 0
  %5 = load i8, i8* %sbu_type, align 8
  %conv = zext i8 %5 to i32
  %and = and i32 %conv, 16
  %cmp = icmp eq i32 %and, 16
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store %struct.op* null, %struct.op** %retval, align 8
  br label %return

if.end:                                           ; preds = %entry
  %6 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %si_cxstack2 = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %6, i32 0, i32 1
  %7 = load %struct.context*, %struct.context** %si_cxstack2, align 8
  %8 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %si_cxix3 = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %8, i32 0, i32 4
  %9 = load i32, i32* %si_cxix3, align 8
  %dec = add nsw i32 %9, -1
  store i32 %dec, i32* %si_cxix3, align 8
  %idxprom4 = sext i32 %9 to i64
  %arrayidx5 = getelementptr inbounds %struct.context, %struct.context* %7, i64 %idxprom4
  store %struct.context* %arrayidx5, %struct.context** %cx, align 8
  %10 = load %struct.sv**, %struct.sv*** @PL_stack_base, align 8
  %11 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u6 = getelementptr inbounds %struct.context, %struct.context* %11, i32 0, i32 0
  %cx_blk = bitcast %union.anon.16* %cx_u6 to %struct.block*
  %blku_oldsp = getelementptr inbounds %struct.block, %struct.block* %cx_blk, i32 0, i32 3
  %12 = load i32, i32* %blku_oldsp, align 4
  %idx.ext = sext i32 %12 to i64
  %add.ptr = getelementptr inbounds %struct.sv*, %struct.sv** %10, i64 %idx.ext
  store %struct.sv** %add.ptr, %struct.sv*** %newsp, align 8
  %13 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u7 = getelementptr inbounds %struct.context, %struct.context* %13, i32 0, i32 0
  %cx_blk8 = bitcast %union.anon.16* %cx_u7 to %struct.block*
  %blku_oldcop = getelementptr inbounds %struct.block, %struct.block* %cx_blk8, i32 0, i32 4
  %14 = load %struct.cop*, %struct.cop** %blku_oldcop, align 8
  store %struct.cop* %14, %struct.cop** @PL_curcop, align 8
  %15 = load i32*, i32** @PL_markstack, align 8
  %16 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u9 = getelementptr inbounds %struct.context, %struct.context* %16, i32 0, i32 0
  %cx_blk10 = bitcast %union.anon.16* %cx_u9 to %struct.block*
  %blku_oldmarksp = getelementptr inbounds %struct.block, %struct.block* %cx_blk10, i32 0, i32 5
  %17 = load i32, i32* %blku_oldmarksp, align 8
  %idx.ext11 = sext i32 %17 to i64
  %add.ptr12 = getelementptr inbounds i32, i32* %15, i64 %idx.ext11
  store i32* %add.ptr12, i32** @PL_markstack_ptr, align 8
  %18 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u13 = getelementptr inbounds %struct.context, %struct.context* %18, i32 0, i32 0
  %cx_blk14 = bitcast %union.anon.16* %cx_u13 to %struct.block*
  %blku_oldscopesp = getelementptr inbounds %struct.block, %struct.block* %cx_blk14, i32 0, i32 6
  %19 = load i32, i32* %blku_oldscopesp, align 4
  store i32 %19, i32* @PL_scopestack_ix, align 4
  %20 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u15 = getelementptr inbounds %struct.context, %struct.context* %20, i32 0, i32 0
  %cx_blk16 = bitcast %union.anon.16* %cx_u15 to %struct.block*
  %blku_oldpm = getelementptr inbounds %struct.block, %struct.block* %cx_blk16, i32 0, i32 7
  %21 = load %struct.pmop*, %struct.pmop** %blku_oldpm, align 8
  store %struct.pmop* %21, %struct.pmop** %newpm, align 8
  %22 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u17 = getelementptr inbounds %struct.context, %struct.context* %22, i32 0, i32 0
  %cx_blk18 = bitcast %union.anon.16* %cx_u17 to %struct.block*
  %blku_gimme = getelementptr inbounds %struct.block, %struct.block* %cx_blk18, i32 0, i32 1
  %23 = load i8, i8* %blku_gimme, align 1
  %conv19 = zext i8 %23 to i32
  store i32 %conv19, i32* %gimme, align 4
  %24 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %si_cxix20 = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %24, i32 0, i32 4
  %25 = load i32, i32* %si_cxix20, align 8
  %inc = add nsw i32 %25, 1
  store i32 %inc, i32* %si_cxix20, align 8
  store i8 0, i8* @PL_tainted, align 1
  %26 = load %struct.sv**, %struct.sv*** %newsp, align 8
  %27 = load %struct.sv**, %struct.sv*** %sp, align 8
  %28 = load %struct.sv**, %struct.sv*** %newsp, align 8
  %29 = load i32, i32* %gimme, align 4
  %30 = load %struct.context*, %struct.context** %cx, align 8
  %31 = load %struct.pmop*, %struct.pmop** %newpm, align 8
  call void @S_return_lvalues(%struct.sv** %26, %struct.sv** %27, %struct.sv** %28, i32 %29, %struct.context* %30, %struct.pmop* %31)
  call void @Perl_pop_scope()
  br label %do.body

do.body:                                          ; preds = %if.end
  %32 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u21 = getelementptr inbounds %struct.context, %struct.context* %32, i32 0, i32 0
  %cx_blk22 = bitcast %union.anon.16* %cx_u21 to %struct.block*
  %blk_u = getelementptr inbounds %struct.block, %struct.block* %cx_blk22, i32 0, i32 8
  %blku_sub = bitcast %union.anon.20* %blk_u to %struct.block_sub*
  %olddepth23 = getelementptr inbounds %struct.block_sub, %struct.block_sub* %blku_sub, i32 0, i32 4
  %33 = load i32, i32* %olddepth23, align 8
  store i32 %33, i32* %olddepth, align 4
  %34 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u24 = getelementptr inbounds %struct.context, %struct.context* %34, i32 0, i32 0
  %cx_blk25 = bitcast %union.anon.16* %cx_u24 to %struct.block*
  %blku_u16 = getelementptr inbounds %struct.block, %struct.block* %cx_blk25, i32 0, i32 2
  %35 = load i16, i16* %blku_u16, align 2
  %conv26 = zext i16 %35 to i32
  %and27 = and i32 %conv26, 256
  %tobool = icmp ne i32 %and27, 0
  br i1 %tobool, label %if.end148, label %if.then28

if.then28:                                        ; preds = %do.body
  %36 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u29 = getelementptr inbounds %struct.context, %struct.context* %36, i32 0, i32 0
  %cx_blk30 = bitcast %union.anon.16* %cx_u29 to %struct.block*
  %blku_u1631 = getelementptr inbounds %struct.block, %struct.block* %cx_blk30, i32 0, i32 2
  %37 = load i16, i16* %blku_u1631, align 2
  %conv32 = zext i16 %37 to i32
  %or = or i32 %conv32, 256
  %conv33 = trunc i32 %or to i16
  store i16 %conv33, i16* %blku_u1631, align 2
  %38 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u34 = getelementptr inbounds %struct.context, %struct.context* %38, i32 0, i32 0
  %cx_subst35 = bitcast %union.anon.16* %cx_u34 to %struct.subst*
  %sbu_type36 = getelementptr inbounds %struct.subst, %struct.subst* %cx_subst35, i32 0, i32 0
  %39 = load i8, i8* %sbu_type36, align 8
  %conv37 = zext i8 %39 to i32
  %and38 = and i32 %conv37, 32
  %cmp39 = icmp eq i32 %and38, 32
  br i1 %cmp39, label %if.then41, label %if.end147

if.then41:                                        ; preds = %if.then28
  br label %do.body42

do.body42:                                        ; preds = %if.then41
  %40 = load %struct.gv*, %struct.gv** @PL_defgv, align 8
  %sv_u = getelementptr inbounds %struct.gv, %struct.gv* %40, i32 0, i32 3
  %svu_gp = bitcast %union.anon.4* %sv_u to %struct.gp**
  %41 = load %struct.gp*, %struct.gp** %svu_gp, align 8
  %add.ptr43 = getelementptr inbounds %struct.gp, %struct.gp* %41, i64 0
  %gp_av = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr43, i32 0, i32 6
  %42 = load %struct.av*, %struct.av** %gp_av, align 8
  %43 = bitcast %struct.av* %42 to i8*
  %44 = bitcast i8* %43 to %struct.sv*
  call void @S_SvREFCNT_dec(%struct.sv* %44)
  %45 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u44 = getelementptr inbounds %struct.context, %struct.context* %45, i32 0, i32 0
  %cx_blk45 = bitcast %union.anon.16* %cx_u44 to %struct.block*
  %blk_u46 = getelementptr inbounds %struct.block, %struct.block* %cx_blk45, i32 0, i32 8
  %blku_sub47 = bitcast %union.anon.20* %blk_u46 to %struct.block_sub*
  %savearray = getelementptr inbounds %struct.block_sub, %struct.block_sub* %blku_sub47, i32 0, i32 2
  %46 = load %struct.av*, %struct.av** %savearray, align 8
  %47 = load %struct.gv*, %struct.gv** @PL_defgv, align 8
  %sv_u48 = getelementptr inbounds %struct.gv, %struct.gv* %47, i32 0, i32 3
  %svu_gp49 = bitcast %union.anon.4* %sv_u48 to %struct.gp**
  %48 = load %struct.gp*, %struct.gp** %svu_gp49, align 8
  %add.ptr50 = getelementptr inbounds %struct.gp, %struct.gp* %48, i64 0
  %gp_av51 = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr50, i32 0, i32 6
  store %struct.av* %46, %struct.av** %gp_av51, align 8
  br label %do.end

do.end:                                           ; preds = %do.body42
  %49 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u52 = getelementptr inbounds %struct.context, %struct.context* %49, i32 0, i32 0
  %cx_blk53 = bitcast %union.anon.16* %cx_u52 to %struct.block*
  %blk_u54 = getelementptr inbounds %struct.block, %struct.block* %cx_blk53, i32 0, i32 8
  %blku_sub55 = bitcast %union.anon.20* %blk_u54 to %struct.block_sub*
  %argarray = getelementptr inbounds %struct.block_sub, %struct.block_sub* %blku_sub55, i32 0, i32 3
  %50 = load %struct.av*, %struct.av** %argarray, align 8
  %sv_flags = getelementptr inbounds %struct.av, %struct.av* %50, i32 0, i32 2
  %51 = load i32, i32* %sv_flags, align 4
  %and56 = and i32 %51, 1073741824
  %tobool57 = icmp ne i32 %and56, 0
  br i1 %tobool57, label %if.then58, label %if.else

if.then58:                                        ; preds = %do.end
  %52 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u59 = getelementptr inbounds %struct.context, %struct.context* %52, i32 0, i32 0
  %cx_blk60 = bitcast %union.anon.16* %cx_u59 to %struct.block*
  %blk_u61 = getelementptr inbounds %struct.block, %struct.block* %cx_blk60, i32 0, i32 8
  %blku_sub62 = bitcast %union.anon.20* %blk_u61 to %struct.block_sub*
  %argarray63 = getelementptr inbounds %struct.block_sub, %struct.block_sub* %blku_sub62, i32 0, i32 3
  %53 = load %struct.av*, %struct.av** %argarray63, align 8
  %sv_any = getelementptr inbounds %struct.av, %struct.av* %53, i32 0, i32 0
  %54 = load %struct.xpvav*, %struct.xpvav** %sv_any, align 8
  %xav_fill = getelementptr inbounds %struct.xpvav, %struct.xpvav* %54, i32 0, i32 2
  %55 = load i64, i64* %xav_fill, align 8
  store i64 %55, i64* %fill, align 8
  %56 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u64 = getelementptr inbounds %struct.context, %struct.context* %56, i32 0, i32 0
  %cx_blk65 = bitcast %union.anon.16* %cx_u64 to %struct.block*
  %blk_u66 = getelementptr inbounds %struct.block, %struct.block* %cx_blk65, i32 0, i32 8
  %blku_sub67 = bitcast %union.anon.20* %blk_u66 to %struct.block_sub*
  %argarray68 = getelementptr inbounds %struct.block_sub, %struct.block_sub* %blku_sub67, i32 0, i32 3
  %57 = load %struct.av*, %struct.av** %argarray68, align 8
  %58 = bitcast %struct.av* %57 to i8*
  %59 = bitcast i8* %58 to %struct.sv*
  call void @S_SvREFCNT_dec_NN(%struct.sv* %59)
  %call = call %struct.sv* @Perl_newSV_type(i32 11)
  %60 = bitcast %struct.sv* %call to i8*
  %61 = bitcast i8* %60 to %struct.av*
  %62 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u69 = getelementptr inbounds %struct.context, %struct.context* %62, i32 0, i32 0
  %cx_blk70 = bitcast %union.anon.16* %cx_u69 to %struct.block*
  %blk_u71 = getelementptr inbounds %struct.block, %struct.block* %cx_blk70, i32 0, i32 8
  %blku_sub72 = bitcast %union.anon.20* %blk_u71 to %struct.block_sub*
  %argarray73 = getelementptr inbounds %struct.block_sub, %struct.block_sub* %blku_sub72, i32 0, i32 3
  store %struct.av* %61, %struct.av** %argarray73, align 8
  %63 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u74 = getelementptr inbounds %struct.context, %struct.context* %63, i32 0, i32 0
  %cx_blk75 = bitcast %union.anon.16* %cx_u74 to %struct.block*
  %blk_u76 = getelementptr inbounds %struct.block, %struct.block* %cx_blk75, i32 0, i32 8
  %blku_sub77 = bitcast %union.anon.20* %blk_u76 to %struct.block_sub*
  %argarray78 = getelementptr inbounds %struct.block_sub, %struct.block_sub* %blku_sub77, i32 0, i32 3
  %64 = load %struct.av*, %struct.av** %argarray78, align 8
  %65 = load i64, i64* %fill, align 8
  call void @Perl_av_extend(%struct.av* %64, i64 %65)
  %66 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u79 = getelementptr inbounds %struct.context, %struct.context* %66, i32 0, i32 0
  %cx_blk80 = bitcast %union.anon.16* %cx_u79 to %struct.block*
  %blk_u81 = getelementptr inbounds %struct.block, %struct.block* %cx_blk80, i32 0, i32 8
  %blku_sub82 = bitcast %union.anon.20* %blk_u81 to %struct.block_sub*
  %argarray83 = getelementptr inbounds %struct.block_sub, %struct.block_sub* %blku_sub82, i32 0, i32 3
  %67 = load %struct.av*, %struct.av** %argarray83, align 8
  %sv_flags84 = getelementptr inbounds %struct.av, %struct.av* %67, i32 0, i32 2
  %68 = load i32, i32* %sv_flags84, align 4
  %and85 = and i32 %68, -1073741825
  store i32 %and85, i32* %sv_flags84, align 4
  %69 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u86 = getelementptr inbounds %struct.context, %struct.context* %69, i32 0, i32 0
  %cx_blk87 = bitcast %union.anon.16* %cx_u86 to %struct.block*
  %blk_u88 = getelementptr inbounds %struct.block, %struct.block* %cx_blk87, i32 0, i32 8
  %blku_sub89 = bitcast %union.anon.20* %blk_u88 to %struct.block_sub*
  %argarray90 = getelementptr inbounds %struct.block_sub, %struct.block_sub* %blku_sub89, i32 0, i32 3
  %70 = load %struct.av*, %struct.av** %argarray90, align 8
  %sv_flags91 = getelementptr inbounds %struct.av, %struct.av* %70, i32 0, i32 2
  %71 = load i32, i32* %sv_flags91, align 4
  %or92 = or i32 %71, -2147483648
  store i32 %or92, i32* %sv_flags91, align 4
  %72 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u93 = getelementptr inbounds %struct.context, %struct.context* %72, i32 0, i32 0
  %cx_blk94 = bitcast %union.anon.16* %cx_u93 to %struct.block*
  %blk_u95 = getelementptr inbounds %struct.block, %struct.block* %cx_blk94, i32 0, i32 8
  %blku_sub96 = bitcast %union.anon.20* %blk_u95 to %struct.block_sub*
  %argarray97 = getelementptr inbounds %struct.block_sub, %struct.block_sub* %blku_sub96, i32 0, i32 3
  %73 = load %struct.av*, %struct.av** %argarray97, align 8
  %74 = bitcast %struct.av* %73 to i8*
  %75 = bitcast i8* %74 to %struct.sv*
  %76 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u98 = getelementptr inbounds %struct.context, %struct.context* %76, i32 0, i32 0
  %cx_blk99 = bitcast %union.anon.16* %cx_u98 to %struct.block*
  %blk_u100 = getelementptr inbounds %struct.block, %struct.block* %cx_blk99, i32 0, i32 8
  %blku_sub101 = bitcast %union.anon.20* %blk_u100 to %struct.block_sub*
  %oldcomppad = getelementptr inbounds %struct.block_sub, %struct.block_sub* %blku_sub101, i32 0, i32 5
  %77 = load %struct.av*, %struct.av** %oldcomppad, align 8
  %78 = bitcast %struct.av* %77 to i8*
  %79 = bitcast i8* %78 to %struct.av*
  %sv_u102 = getelementptr inbounds %struct.av, %struct.av* %79, i32 0, i32 3
  %svu_array = bitcast %union.anon.0* %sv_u102 to %struct.sv***
  %80 = load %struct.sv**, %struct.sv*** %svu_array, align 8
  %arrayidx103 = getelementptr inbounds %struct.sv*, %struct.sv** %80, i64 0
  store %struct.sv* %75, %struct.sv** %arrayidx103, align 8
  br label %if.end146

if.else:                                          ; preds = %do.end
  br label %do.body104

do.body104:                                       ; preds = %if.else
  %81 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u105 = getelementptr inbounds %struct.context, %struct.context* %81, i32 0, i32 0
  %cx_blk106 = bitcast %union.anon.16* %cx_u105 to %struct.block*
  %blk_u107 = getelementptr inbounds %struct.block, %struct.block* %cx_blk106, i32 0, i32 8
  %blku_sub108 = bitcast %union.anon.20* %blk_u107 to %struct.block_sub*
  %argarray109 = getelementptr inbounds %struct.block_sub, %struct.block_sub* %blku_sub108, i32 0, i32 3
  %82 = load %struct.av*, %struct.av** %argarray109, align 8
  %sv_u110 = getelementptr inbounds %struct.av, %struct.av* %82, i32 0, i32 3
  %svu_array111 = bitcast %union.anon.0* %sv_u110 to %struct.sv***
  %83 = load %struct.sv**, %struct.sv*** %svu_array111, align 8
  %84 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u112 = getelementptr inbounds %struct.context, %struct.context* %84, i32 0, i32 0
  %cx_blk113 = bitcast %union.anon.16* %cx_u112 to %struct.block*
  %blk_u114 = getelementptr inbounds %struct.block, %struct.block* %cx_blk113, i32 0, i32 8
  %blku_sub115 = bitcast %union.anon.20* %blk_u114 to %struct.block_sub*
  %argarray116 = getelementptr inbounds %struct.block_sub, %struct.block_sub* %blku_sub115, i32 0, i32 3
  %85 = load %struct.av*, %struct.av** %argarray116, align 8
  %sv_any117 = getelementptr inbounds %struct.av, %struct.av* %85, i32 0, i32 0
  %86 = load %struct.xpvav*, %struct.xpvav** %sv_any117, align 8
  %xav_alloc = getelementptr inbounds %struct.xpvav, %struct.xpvav* %86, i32 0, i32 4
  %87 = load %struct.sv**, %struct.sv*** %xav_alloc, align 8
  %sub.ptr.lhs.cast = ptrtoint %struct.sv** %83 to i64
  %sub.ptr.rhs.cast = ptrtoint %struct.sv** %87 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 8
  %88 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u118 = getelementptr inbounds %struct.context, %struct.context* %88, i32 0, i32 0
  %cx_blk119 = bitcast %union.anon.16* %cx_u118 to %struct.block*
  %blk_u120 = getelementptr inbounds %struct.block, %struct.block* %cx_blk119, i32 0, i32 8
  %blku_sub121 = bitcast %union.anon.20* %blk_u120 to %struct.block_sub*
  %argarray122 = getelementptr inbounds %struct.block_sub, %struct.block_sub* %blku_sub121, i32 0, i32 3
  %89 = load %struct.av*, %struct.av** %argarray122, align 8
  %sv_any123 = getelementptr inbounds %struct.av, %struct.av* %89, i32 0, i32 0
  %90 = load %struct.xpvav*, %struct.xpvav** %sv_any123, align 8
  %xav_max = getelementptr inbounds %struct.xpvav, %struct.xpvav* %90, i32 0, i32 3
  %91 = load i64, i64* %xav_max, align 8
  %add = add nsw i64 %91, %sub.ptr.div
  store i64 %add, i64* %xav_max, align 8
  %92 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u124 = getelementptr inbounds %struct.context, %struct.context* %92, i32 0, i32 0
  %cx_blk125 = bitcast %union.anon.16* %cx_u124 to %struct.block*
  %blk_u126 = getelementptr inbounds %struct.block, %struct.block* %cx_blk125, i32 0, i32 8
  %blku_sub127 = bitcast %union.anon.20* %blk_u126 to %struct.block_sub*
  %argarray128 = getelementptr inbounds %struct.block_sub, %struct.block_sub* %blku_sub127, i32 0, i32 3
  %93 = load %struct.av*, %struct.av** %argarray128, align 8
  %sv_any129 = getelementptr inbounds %struct.av, %struct.av* %93, i32 0, i32 0
  %94 = load %struct.xpvav*, %struct.xpvav** %sv_any129, align 8
  %xav_alloc130 = getelementptr inbounds %struct.xpvav, %struct.xpvav* %94, i32 0, i32 4
  %95 = load %struct.sv**, %struct.sv*** %xav_alloc130, align 8
  %96 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u131 = getelementptr inbounds %struct.context, %struct.context* %96, i32 0, i32 0
  %cx_blk132 = bitcast %union.anon.16* %cx_u131 to %struct.block*
  %blk_u133 = getelementptr inbounds %struct.block, %struct.block* %cx_blk132, i32 0, i32 8
  %blku_sub134 = bitcast %union.anon.20* %blk_u133 to %struct.block_sub*
  %argarray135 = getelementptr inbounds %struct.block_sub, %struct.block_sub* %blku_sub134, i32 0, i32 3
  %97 = load %struct.av*, %struct.av** %argarray135, align 8
  %sv_u136 = getelementptr inbounds %struct.av, %struct.av* %97, i32 0, i32 3
  %svu_array137 = bitcast %union.anon.0* %sv_u136 to %struct.sv***
  store %struct.sv** %95, %struct.sv*** %svu_array137, align 8
  %98 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u138 = getelementptr inbounds %struct.context, %struct.context* %98, i32 0, i32 0
  %cx_blk139 = bitcast %union.anon.16* %cx_u138 to %struct.block*
  %blk_u140 = getelementptr inbounds %struct.block, %struct.block* %cx_blk139, i32 0, i32 8
  %blku_sub141 = bitcast %union.anon.20* %blk_u140 to %struct.block_sub*
  %argarray142 = getelementptr inbounds %struct.block_sub, %struct.block_sub* %blku_sub141, i32 0, i32 3
  %99 = load %struct.av*, %struct.av** %argarray142, align 8
  %sv_any143 = getelementptr inbounds %struct.av, %struct.av* %99, i32 0, i32 0
  %100 = load %struct.xpvav*, %struct.xpvav** %sv_any143, align 8
  %xav_fill144 = getelementptr inbounds %struct.xpvav, %struct.xpvav* %100, i32 0, i32 2
  store i64 -1, i64* %xav_fill144, align 8
  br label %do.end145

do.end145:                                        ; preds = %do.body104
  br label %if.end146

if.end146:                                        ; preds = %do.end145, %if.then58
  br label %if.end147

if.end147:                                        ; preds = %if.end146, %if.then28
  br label %if.end148

if.end148:                                        ; preds = %if.end147, %do.body
  %101 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u149 = getelementptr inbounds %struct.context, %struct.context* %101, i32 0, i32 0
  %cx_blk150 = bitcast %union.anon.16* %cx_u149 to %struct.block*
  %blk_u151 = getelementptr inbounds %struct.block, %struct.block* %cx_blk150, i32 0, i32 8
  %blku_sub152 = bitcast %union.anon.20* %blk_u151 to %struct.block_sub*
  %cv = getelementptr inbounds %struct.block_sub, %struct.block_sub* %blku_sub152, i32 0, i32 1
  %102 = load %struct.cv*, %struct.cv** %cv, align 8
  %103 = bitcast %struct.cv* %102 to i8*
  %104 = bitcast i8* %103 to %struct.sv*
  store %struct.sv* %104, %struct.sv** %sv, align 8
  br label %do.body153

do.body153:                                       ; preds = %if.end148
  %105 = load i32, i32* @PL_savestack_ix, align 4
  %106 = load i32*, i32** @PL_scopestack, align 8
  %107 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u154 = getelementptr inbounds %struct.context, %struct.context* %107, i32 0, i32 0
  %cx_blk155 = bitcast %union.anon.16* %cx_u154 to %struct.block*
  %blku_oldscopesp156 = getelementptr inbounds %struct.block, %struct.block* %cx_blk155, i32 0, i32 6
  %108 = load i32, i32* %blku_oldscopesp156, align 4
  %sub = sub nsw i32 %108, 1
  %idxprom157 = sext i32 %sub to i64
  %arrayidx158 = getelementptr inbounds i32, i32* %106, i64 %idxprom157
  %109 = load i32, i32* %arrayidx158, align 4
  %cmp159 = icmp sgt i32 %105, %109
  br i1 %cmp159, label %if.then161, label %if.end168

if.then161:                                       ; preds = %do.body153
  %110 = load i32*, i32** @PL_scopestack, align 8
  %111 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u162 = getelementptr inbounds %struct.context, %struct.context* %111, i32 0, i32 0
  %cx_blk163 = bitcast %union.anon.16* %cx_u162 to %struct.block*
  %blku_oldscopesp164 = getelementptr inbounds %struct.block, %struct.block* %cx_blk163, i32 0, i32 6
  %112 = load i32, i32* %blku_oldscopesp164, align 4
  %sub165 = sub nsw i32 %112, 1
  %idxprom166 = sext i32 %sub165 to i64
  %arrayidx167 = getelementptr inbounds i32, i32* %110, i64 %idxprom166
  %113 = load i32, i32* %arrayidx167, align 4
  call void @Perl_leave_scope(i32 %113)
  br label %if.end168

if.end168:                                        ; preds = %if.then161, %do.body153
  br label %do.end169

do.end169:                                        ; preds = %if.end168
  %114 = load %struct.sv*, %struct.sv** %sv, align 8
  %tobool170 = icmp ne %struct.sv* %114, null
  br i1 %tobool170, label %land.lhs.true, label %if.end174

land.lhs.true:                                    ; preds = %do.end169
  %115 = load i32, i32* %olddepth, align 4
  %116 = load %struct.sv*, %struct.sv** %sv, align 8
  %117 = bitcast %struct.sv* %116 to %struct.cv*
  %call171 = call i32* @S_CvDEPTHp(%struct.cv* %117)
  store i32 %115, i32* %call171, align 4
  %tobool172 = icmp ne i32 %115, 0
  br i1 %tobool172, label %if.then173, label %if.end174

if.then173:                                       ; preds = %land.lhs.true
  store %struct.sv* null, %struct.sv** %sv, align 8
  br label %if.end174

if.end174:                                        ; preds = %if.then173, %land.lhs.true, %do.end169
  br label %do.end175

do.end175:                                        ; preds = %if.end174
  %118 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %si_cxix176 = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %118, i32 0, i32 4
  %119 = load i32, i32* %si_cxix176, align 8
  %dec177 = add nsw i32 %119, -1
  store i32 %dec177, i32* %si_cxix176, align 8
  %120 = load %struct.pmop*, %struct.pmop** %newpm, align 8
  store %struct.pmop* %120, %struct.pmop** @PL_curpm, align 8
  br label %do.body178

do.body178:                                       ; preds = %do.end175
  %121 = load %struct.sv*, %struct.sv** %sv, align 8
  %122 = bitcast %struct.sv* %121 to i8*
  %123 = bitcast i8* %122 to %struct.sv*
  call void @S_SvREFCNT_dec(%struct.sv* %123)
  br label %do.end179

do.end179:                                        ; preds = %do.body178
  %124 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u180 = getelementptr inbounds %struct.context, %struct.context* %124, i32 0, i32 0
  %cx_blk181 = bitcast %union.anon.16* %cx_u180 to %struct.block*
  %blk_u182 = getelementptr inbounds %struct.block, %struct.block* %cx_blk181, i32 0, i32 8
  %blku_sub183 = bitcast %union.anon.20* %blk_u182 to %struct.block_sub*
  %retop = getelementptr inbounds %struct.block_sub, %struct.block_sub* %blku_sub183, i32 0, i32 0
  %125 = load %struct.op*, %struct.op** %retop, align 8
  store %struct.op* %125, %struct.op** %retval, align 8
  br label %return

return:                                           ; preds = %do.end179, %if.then
  %126 = load %struct.op*, %struct.op** %retval, align 8
  ret %struct.op* %126
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.op* @Perl_pp_last() #0 {
entry:
  %retval = alloca %struct.op*, align 8
  %cx = alloca %struct.context*, align 8
  %pop2 = alloca i32, align 4
  %gimme = alloca i32, align 4
  %optype = alloca i32, align 4
  %nextop = alloca %struct.op*, align 8
  %newsp = alloca %struct.sv**, align 8
  %newpm = alloca %struct.pmop*, align 8
  %sv = alloca %struct.sv*, align 8
  %cv = alloca %struct.cv*, align 8
  %dfuot = alloca %struct.gv*, align 8
  %olddepth = alloca i32, align 4
  %fill = alloca i64, align 8
  store i32 0, i32* %pop2, align 4
  store %struct.op* null, %struct.op** %nextop, align 8
  store %struct.sv* null, %struct.sv** %sv, align 8
  %call = call i32 @S_unwind_loop(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.30, i64 0, i64 0))
  %0 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %si_cxstack = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %0, i32 0, i32 1
  %1 = load %struct.context*, %struct.context** %si_cxstack, align 8
  %2 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %si_cxix = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %2, i32 0, i32 4
  %3 = load i32, i32* %si_cxix, align 8
  %dec = add nsw i32 %3, -1
  store i32 %dec, i32* %si_cxix, align 8
  %idxprom = sext i32 %3 to i64
  %arrayidx = getelementptr inbounds %struct.context, %struct.context* %1, i64 %idxprom
  store %struct.context* %arrayidx, %struct.context** %cx, align 8
  %4 = load %struct.sv**, %struct.sv*** @PL_stack_base, align 8
  %5 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u = getelementptr inbounds %struct.context, %struct.context* %5, i32 0, i32 0
  %cx_blk = bitcast %union.anon.16* %cx_u to %struct.block*
  %blku_oldsp = getelementptr inbounds %struct.block, %struct.block* %cx_blk, i32 0, i32 3
  %6 = load i32, i32* %blku_oldsp, align 4
  %idx.ext = sext i32 %6 to i64
  %add.ptr = getelementptr inbounds %struct.sv*, %struct.sv** %4, i64 %idx.ext
  store %struct.sv** %add.ptr, %struct.sv*** %newsp, align 8
  %7 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u1 = getelementptr inbounds %struct.context, %struct.context* %7, i32 0, i32 0
  %cx_blk2 = bitcast %union.anon.16* %cx_u1 to %struct.block*
  %blku_oldcop = getelementptr inbounds %struct.block, %struct.block* %cx_blk2, i32 0, i32 4
  %8 = load %struct.cop*, %struct.cop** %blku_oldcop, align 8
  store %struct.cop* %8, %struct.cop** @PL_curcop, align 8
  %9 = load i32*, i32** @PL_markstack, align 8
  %10 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u3 = getelementptr inbounds %struct.context, %struct.context* %10, i32 0, i32 0
  %cx_blk4 = bitcast %union.anon.16* %cx_u3 to %struct.block*
  %blku_oldmarksp = getelementptr inbounds %struct.block, %struct.block* %cx_blk4, i32 0, i32 5
  %11 = load i32, i32* %blku_oldmarksp, align 8
  %idx.ext5 = sext i32 %11 to i64
  %add.ptr6 = getelementptr inbounds i32, i32* %9, i64 %idx.ext5
  store i32* %add.ptr6, i32** @PL_markstack_ptr, align 8
  %12 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u7 = getelementptr inbounds %struct.context, %struct.context* %12, i32 0, i32 0
  %cx_blk8 = bitcast %union.anon.16* %cx_u7 to %struct.block*
  %blku_oldscopesp = getelementptr inbounds %struct.block, %struct.block* %cx_blk8, i32 0, i32 6
  %13 = load i32, i32* %blku_oldscopesp, align 4
  store i32 %13, i32* @PL_scopestack_ix, align 4
  %14 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u9 = getelementptr inbounds %struct.context, %struct.context* %14, i32 0, i32 0
  %cx_blk10 = bitcast %union.anon.16* %cx_u9 to %struct.block*
  %blku_oldpm = getelementptr inbounds %struct.block, %struct.block* %cx_blk10, i32 0, i32 7
  %15 = load %struct.pmop*, %struct.pmop** %blku_oldpm, align 8
  store %struct.pmop* %15, %struct.pmop** %newpm, align 8
  %16 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u11 = getelementptr inbounds %struct.context, %struct.context* %16, i32 0, i32 0
  %cx_blk12 = bitcast %union.anon.16* %cx_u11 to %struct.block*
  %blku_gimme = getelementptr inbounds %struct.block, %struct.block* %cx_blk12, i32 0, i32 1
  %17 = load i8, i8* %blku_gimme, align 1
  %conv = zext i8 %17 to i32
  store i32 %conv, i32* %gimme, align 4
  %18 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %si_cxix13 = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %18, i32 0, i32 4
  %19 = load i32, i32* %si_cxix13, align 8
  %inc = add nsw i32 %19, 1
  store i32 %inc, i32* %si_cxix13, align 8
  %20 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u14 = getelementptr inbounds %struct.context, %struct.context* %20, i32 0, i32 0
  %cx_subst = bitcast %union.anon.16* %cx_u14 to %struct.subst*
  %sbu_type = getelementptr inbounds %struct.subst, %struct.subst* %cx_subst, i32 0, i32 0
  %21 = load i8, i8* %sbu_type, align 8
  %conv15 = zext i8 %21 to i32
  %and = and i32 %conv15, 15
  switch i32 %and, label %sw.default [
    i32 7, label %sw.bb
    i32 6, label %sw.bb
    i32 4, label %sw.bb
    i32 5, label %sw.bb
    i32 8, label %sw.bb29
    i32 10, label %sw.bb33
    i32 9, label %sw.bb80
  ]

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry
  %22 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u16 = getelementptr inbounds %struct.context, %struct.context* %22, i32 0, i32 0
  %cx_subst17 = bitcast %union.anon.16* %cx_u16 to %struct.subst*
  %sbu_type18 = getelementptr inbounds %struct.subst, %struct.subst* %cx_subst17, i32 0, i32 0
  %23 = load i8, i8* %sbu_type18, align 8
  %conv19 = zext i8 %23 to i32
  %and20 = and i32 %conv19, 15
  store i32 %and20, i32* %pop2, align 4
  %24 = load %struct.sv**, %struct.sv*** @PL_stack_base, align 8
  %25 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u21 = getelementptr inbounds %struct.context, %struct.context* %25, i32 0, i32 0
  %cx_blk22 = bitcast %union.anon.16* %cx_u21 to %struct.block*
  %blk_u = getelementptr inbounds %struct.block, %struct.block* %cx_blk22, i32 0, i32 8
  %blku_loop = bitcast %union.anon.20* %blk_u to %struct.block_loop*
  %resetsp = getelementptr inbounds %struct.block_loop, %struct.block_loop* %blku_loop, i32 0, i32 0
  %26 = load i32, i32* %resetsp, align 8
  %idx.ext23 = sext i32 %26 to i64
  %add.ptr24 = getelementptr inbounds %struct.sv*, %struct.sv** %24, i64 %idx.ext23
  store %struct.sv** %add.ptr24, %struct.sv*** %newsp, align 8
  %27 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u25 = getelementptr inbounds %struct.context, %struct.context* %27, i32 0, i32 0
  %cx_blk26 = bitcast %union.anon.16* %cx_u25 to %struct.block*
  %blk_u27 = getelementptr inbounds %struct.block, %struct.block* %cx_blk26, i32 0, i32 8
  %blku_loop28 = bitcast %union.anon.20* %blk_u27 to %struct.block_loop*
  %my_op = getelementptr inbounds %struct.block_loop, %struct.block_loop* %blku_loop28, i32 0, i32 1
  %28 = load %struct.loop*, %struct.loop** %my_op, align 8
  %op_lastop = getelementptr inbounds %struct.loop, %struct.loop* %28, i32 0, i32 11
  %29 = load %struct.op*, %struct.op** %op_lastop, align 8
  %op_next = getelementptr inbounds %struct.op, %struct.op* %29, i32 0, i32 0
  %30 = load %struct.op*, %struct.op** %op_next, align 8
  store %struct.op* %30, %struct.op** %nextop, align 8
  br label %sw.epilog

sw.bb29:                                          ; preds = %entry
  store i32 8, i32* %pop2, align 4
  %31 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u30 = getelementptr inbounds %struct.context, %struct.context* %31, i32 0, i32 0
  %cx_blk31 = bitcast %union.anon.16* %cx_u30 to %struct.block*
  %blk_u32 = getelementptr inbounds %struct.block, %struct.block* %cx_blk31, i32 0, i32 8
  %blku_sub = bitcast %union.anon.20* %blk_u32 to %struct.block_sub*
  %retop = getelementptr inbounds %struct.block_sub, %struct.block_sub* %blku_sub, i32 0, i32 0
  %32 = load %struct.op*, %struct.op** %retop, align 8
  store %struct.op* %32, %struct.op** %nextop, align 8
  br label %sw.epilog

sw.bb33:                                          ; preds = %entry
  br label %do.body

do.body:                                          ; preds = %sw.bb33
  %33 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u34 = getelementptr inbounds %struct.context, %struct.context* %33, i32 0, i32 0
  %cx_blk35 = bitcast %union.anon.16* %cx_u34 to %struct.block*
  %blku_u16 = getelementptr inbounds %struct.block, %struct.block* %cx_blk35, i32 0, i32 2
  %34 = load i16, i16* %blku_u16, align 2
  %conv36 = zext i16 %34 to i32
  %and37 = and i32 %conv36, 127
  %conv38 = trunc i32 %and37 to i8
  store i8 %conv38, i8* @PL_in_eval, align 1
  %35 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u39 = getelementptr inbounds %struct.context, %struct.context* %35, i32 0, i32 0
  %cx_blk40 = bitcast %union.anon.16* %cx_u39 to %struct.block*
  %blku_u1641 = getelementptr inbounds %struct.block, %struct.block* %cx_blk40, i32 0, i32 2
  %36 = load i16, i16* %blku_u1641, align 2
  %conv42 = zext i16 %36 to i32
  %shr = ashr i32 %conv42, 7
  store i32 %shr, i32* %optype, align 4
  %37 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u43 = getelementptr inbounds %struct.context, %struct.context* %37, i32 0, i32 0
  %cx_blk44 = bitcast %union.anon.16* %cx_u43 to %struct.block*
  %blk_u45 = getelementptr inbounds %struct.block, %struct.block* %cx_blk44, i32 0, i32 8
  %blku_eval = bitcast %union.anon.20* %blk_u45 to %struct.block_eval*
  %old_eval_root = getelementptr inbounds %struct.block_eval, %struct.block_eval* %blku_eval, i32 0, i32 2
  %38 = load %struct.op*, %struct.op** %old_eval_root, align 8
  store %struct.op* %38, %struct.op** @PL_eval_root, align 8
  %39 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u46 = getelementptr inbounds %struct.context, %struct.context* %39, i32 0, i32 0
  %cx_blk47 = bitcast %union.anon.16* %cx_u46 to %struct.block*
  %blk_u48 = getelementptr inbounds %struct.block, %struct.block* %cx_blk47, i32 0, i32 8
  %blku_eval49 = bitcast %union.anon.20* %blk_u48 to %struct.block_eval*
  %cur_text = getelementptr inbounds %struct.block_eval, %struct.block_eval* %blku_eval49, i32 0, i32 3
  %40 = load %struct.sv*, %struct.sv** %cur_text, align 8
  %tobool = icmp ne %struct.sv* %40, null
  br i1 %tobool, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %do.body
  %41 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u50 = getelementptr inbounds %struct.context, %struct.context* %41, i32 0, i32 0
  %cx_blk51 = bitcast %union.anon.16* %cx_u50 to %struct.block*
  %blk_u52 = getelementptr inbounds %struct.block, %struct.block* %cx_blk51, i32 0, i32 8
  %blku_eval53 = bitcast %union.anon.20* %blk_u52 to %struct.block_eval*
  %cur_text54 = getelementptr inbounds %struct.block_eval, %struct.block_eval* %blku_eval53, i32 0, i32 3
  %42 = load %struct.sv*, %struct.sv** %cur_text54, align 8
  %sv_flags = getelementptr inbounds %struct.sv, %struct.sv* %42, i32 0, i32 2
  %43 = load i32, i32* %sv_flags, align 4
  %and55 = and i32 %43, 49152
  %cmp = icmp eq i32 %and55, 49152
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true
  %44 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u57 = getelementptr inbounds %struct.context, %struct.context* %44, i32 0, i32 0
  %cx_blk58 = bitcast %union.anon.16* %cx_u57 to %struct.block*
  %blk_u59 = getelementptr inbounds %struct.block, %struct.block* %cx_blk58, i32 0, i32 8
  %blku_eval60 = bitcast %union.anon.20* %blk_u59 to %struct.block_eval*
  %cur_text61 = getelementptr inbounds %struct.block_eval, %struct.block_eval* %blku_eval60, i32 0, i32 3
  %45 = load %struct.sv*, %struct.sv** %cur_text61, align 8
  %46 = bitcast %struct.sv* %45 to i8*
  %47 = bitcast i8* %46 to %struct.sv*
  call void @S_SvREFCNT_dec_NN(%struct.sv* %47)
  br label %if.end

if.end:                                           ; preds = %if.then, %land.lhs.true, %do.body
  %48 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u62 = getelementptr inbounds %struct.context, %struct.context* %48, i32 0, i32 0
  %cx_blk63 = bitcast %union.anon.16* %cx_u62 to %struct.block*
  %blk_u64 = getelementptr inbounds %struct.block, %struct.block* %cx_blk63, i32 0, i32 8
  %blku_eval65 = bitcast %union.anon.20* %blk_u64 to %struct.block_eval*
  %old_namesv = getelementptr inbounds %struct.block_eval, %struct.block_eval* %blku_eval65, i32 0, i32 1
  %49 = load %struct.sv*, %struct.sv** %old_namesv, align 8
  %tobool66 = icmp ne %struct.sv* %49, null
  br i1 %tobool66, label %if.then67, label %if.end74

if.then67:                                        ; preds = %if.end
  %50 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u68 = getelementptr inbounds %struct.context, %struct.context* %50, i32 0, i32 0
  %cx_blk69 = bitcast %union.anon.16* %cx_u68 to %struct.block*
  %blk_u70 = getelementptr inbounds %struct.block, %struct.block* %cx_blk69, i32 0, i32 8
  %blku_eval71 = bitcast %union.anon.20* %blk_u70 to %struct.block_eval*
  %old_namesv72 = getelementptr inbounds %struct.block_eval, %struct.block_eval* %blku_eval71, i32 0, i32 1
  %51 = load %struct.sv*, %struct.sv** %old_namesv72, align 8
  %call73 = call %struct.sv* @Perl_sv_2mortal(%struct.sv* %51)
  br label %if.end74

if.end74:                                         ; preds = %if.then67, %if.end
  br label %do.end

do.end:                                           ; preds = %if.end74
  %52 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u75 = getelementptr inbounds %struct.context, %struct.context* %52, i32 0, i32 0
  %cx_blk76 = bitcast %union.anon.16* %cx_u75 to %struct.block*
  %blk_u77 = getelementptr inbounds %struct.block, %struct.block* %cx_blk76, i32 0, i32 8
  %blku_eval78 = bitcast %union.anon.20* %blk_u77 to %struct.block_eval*
  %retop79 = getelementptr inbounds %struct.block_eval, %struct.block_eval* %blku_eval78, i32 0, i32 0
  %53 = load %struct.op*, %struct.op** %retop79, align 8
  store %struct.op* %53, %struct.op** %nextop, align 8
  br label %sw.epilog

sw.bb80:                                          ; preds = %entry
  br label %do.body81

do.body81:                                        ; preds = %sw.bb80
  %54 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u82 = getelementptr inbounds %struct.context, %struct.context* %54, i32 0, i32 0
  %cx_blk83 = bitcast %union.anon.16* %cx_u82 to %struct.block*
  %blku_u1684 = getelementptr inbounds %struct.block, %struct.block* %cx_blk83, i32 0, i32 2
  %55 = load i16, i16* %blku_u1684, align 2
  %conv85 = zext i16 %55 to i32
  %and86 = and i32 %conv85, 256
  %tobool87 = icmp ne i32 %and86, 0
  br i1 %tobool87, label %if.end129, label %if.then88

if.then88:                                        ; preds = %do.body81
  %56 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u89 = getelementptr inbounds %struct.context, %struct.context* %56, i32 0, i32 0
  %cx_blk90 = bitcast %union.anon.16* %cx_u89 to %struct.block*
  %blk_u91 = getelementptr inbounds %struct.block, %struct.block* %cx_blk90, i32 0, i32 8
  %blku_format = bitcast %union.anon.20* %blk_u91 to %struct.block_format*
  %cv92 = getelementptr inbounds %struct.block_format, %struct.block_format* %blku_format, i32 0, i32 1
  %57 = load %struct.cv*, %struct.cv** %cv92, align 8
  store %struct.cv* %57, %struct.cv** %cv, align 8
  %58 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u93 = getelementptr inbounds %struct.context, %struct.context* %58, i32 0, i32 0
  %cx_blk94 = bitcast %union.anon.16* %cx_u93 to %struct.block*
  %blk_u95 = getelementptr inbounds %struct.block, %struct.block* %cx_blk94, i32 0, i32 8
  %blku_format96 = bitcast %union.anon.20* %blk_u95 to %struct.block_format*
  %dfoutgv = getelementptr inbounds %struct.block_format, %struct.block_format* %blku_format96, i32 0, i32 3
  %59 = load %struct.gv*, %struct.gv** %dfoutgv, align 8
  store %struct.gv* %59, %struct.gv** %dfuot, align 8
  %60 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u97 = getelementptr inbounds %struct.context, %struct.context* %60, i32 0, i32 0
  %cx_blk98 = bitcast %union.anon.16* %cx_u97 to %struct.block*
  %blku_u1699 = getelementptr inbounds %struct.block, %struct.block* %cx_blk98, i32 0, i32 2
  %61 = load i16, i16* %blku_u1699, align 2
  %conv100 = zext i16 %61 to i32
  %or = or i32 %conv100, 256
  %conv101 = trunc i32 %or to i16
  store i16 %conv101, i16* %blku_u1699, align 2
  %62 = load %struct.gv*, %struct.gv** %dfuot, align 8
  call void @Perl_setdefout(%struct.gv* %62)
  br label %do.body102

do.body102:                                       ; preds = %if.then88
  %63 = load i32, i32* @PL_savestack_ix, align 4
  %64 = load i32*, i32** @PL_scopestack, align 8
  %65 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u103 = getelementptr inbounds %struct.context, %struct.context* %65, i32 0, i32 0
  %cx_blk104 = bitcast %union.anon.16* %cx_u103 to %struct.block*
  %blku_oldscopesp105 = getelementptr inbounds %struct.block, %struct.block* %cx_blk104, i32 0, i32 6
  %66 = load i32, i32* %blku_oldscopesp105, align 4
  %sub = sub nsw i32 %66, 1
  %idxprom106 = sext i32 %sub to i64
  %arrayidx107 = getelementptr inbounds i32, i32* %64, i64 %idxprom106
  %67 = load i32, i32* %arrayidx107, align 4
  %cmp108 = icmp sgt i32 %63, %67
  br i1 %cmp108, label %if.then110, label %if.end117

if.then110:                                       ; preds = %do.body102
  %68 = load i32*, i32** @PL_scopestack, align 8
  %69 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u111 = getelementptr inbounds %struct.context, %struct.context* %69, i32 0, i32 0
  %cx_blk112 = bitcast %union.anon.16* %cx_u111 to %struct.block*
  %blku_oldscopesp113 = getelementptr inbounds %struct.block, %struct.block* %cx_blk112, i32 0, i32 6
  %70 = load i32, i32* %blku_oldscopesp113, align 4
  %sub114 = sub nsw i32 %70, 1
  %idxprom115 = sext i32 %sub114 to i64
  %arrayidx116 = getelementptr inbounds i32, i32* %68, i64 %idxprom115
  %71 = load i32, i32* %arrayidx116, align 4
  call void @Perl_leave_scope(i32 %71)
  br label %if.end117

if.end117:                                        ; preds = %if.then110, %do.body102
  br label %do.end118

do.end118:                                        ; preds = %if.end117
  %72 = load %struct.cv*, %struct.cv** %cv, align 8
  %call119 = call i32* @S_CvDEPTHp(%struct.cv* %72)
  %73 = load i32, i32* %call119, align 4
  %dec120 = add nsw i32 %73, -1
  store i32 %dec120, i32* %call119, align 4
  %tobool121 = icmp ne i32 %dec120, 0
  br i1 %tobool121, label %if.end128, label %if.then122

if.then122:                                       ; preds = %do.end118
  %74 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u123 = getelementptr inbounds %struct.context, %struct.context* %74, i32 0, i32 0
  %cx_blk124 = bitcast %union.anon.16* %cx_u123 to %struct.block*
  %blk_u125 = getelementptr inbounds %struct.block, %struct.block* %cx_blk124, i32 0, i32 8
  %blku_format126 = bitcast %union.anon.20* %blk_u125 to %struct.block_format*
  %cv127 = getelementptr inbounds %struct.block_format, %struct.block_format* %blku_format126, i32 0, i32 1
  %75 = load %struct.cv*, %struct.cv** %cv127, align 8
  %76 = bitcast %struct.cv* %75 to i8*
  %77 = bitcast i8* %76 to %struct.sv*
  call void @S_SvREFCNT_dec_NN(%struct.sv* %77)
  br label %if.end128

if.end128:                                        ; preds = %if.then122, %do.end118
  %78 = load %struct.gv*, %struct.gv** %dfuot, align 8
  %79 = bitcast %struct.gv* %78 to i8*
  %80 = bitcast i8* %79 to %struct.sv*
  call void @S_SvREFCNT_dec_NN(%struct.sv* %80)
  br label %if.end129

if.end129:                                        ; preds = %if.end128, %do.body81
  br label %do.end130

do.end130:                                        ; preds = %if.end129
  %81 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u131 = getelementptr inbounds %struct.context, %struct.context* %81, i32 0, i32 0
  %cx_blk132 = bitcast %union.anon.16* %cx_u131 to %struct.block*
  %blk_u133 = getelementptr inbounds %struct.block, %struct.block* %cx_blk132, i32 0, i32 8
  %blku_sub134 = bitcast %union.anon.20* %blk_u133 to %struct.block_sub*
  %retop135 = getelementptr inbounds %struct.block_sub, %struct.block_sub* %blku_sub134, i32 0, i32 0
  %82 = load %struct.op*, %struct.op** %retop135, align 8
  store %struct.op* %82, %struct.op** %nextop, align 8
  br label %sw.epilog

sw.default:                                       ; preds = %entry
  %83 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u136 = getelementptr inbounds %struct.context, %struct.context* %83, i32 0, i32 0
  %cx_subst137 = bitcast %union.anon.16* %cx_u136 to %struct.subst*
  %sbu_type138 = getelementptr inbounds %struct.subst, %struct.subst* %cx_subst137, i32 0, i32 0
  %84 = load i8, i8* %sbu_type138, align 8
  %conv139 = zext i8 %84 to i32
  %and140 = and i32 %conv139, 15
  %call141 = call %struct.op* (i8*, ...) @Perl_die(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.31, i64 0, i64 0), i32 %and140)
  store %struct.op* %call141, %struct.op** %retval, align 8
  br label %return

sw.epilog:                                        ; preds = %do.end130, %do.end, %sw.bb29, %sw.bb
  store i8 0, i8* @PL_tainted, align 1
  %85 = load %struct.sv**, %struct.sv*** %newsp, align 8
  store %struct.sv** %85, %struct.sv*** @PL_stack_sp, align 8
  call void @Perl_pop_scope()
  %86 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %si_cxix142 = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %86, i32 0, i32 4
  %87 = load i32, i32* %si_cxix142, align 8
  %dec143 = add nsw i32 %87, -1
  store i32 %dec143, i32* %si_cxix142, align 8
  %88 = load i32, i32* %pop2, align 4
  switch i32 %88, label %sw.epilog347 [
    i32 7, label %sw.bb144
    i32 5, label %sw.bb144
    i32 6, label %sw.bb144
    i32 4, label %sw.bb144
    i32 8, label %sw.bb179
  ]

sw.bb144:                                         ; preds = %sw.epilog, %sw.epilog, %sw.epilog, %sw.epilog
  %89 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u145 = getelementptr inbounds %struct.context, %struct.context* %89, i32 0, i32 0
  %cx_subst146 = bitcast %union.anon.16* %cx_u145 to %struct.subst*
  %sbu_type147 = getelementptr inbounds %struct.subst, %struct.subst* %cx_subst146, i32 0, i32 0
  %90 = load i8, i8* %sbu_type147, align 8
  %conv148 = zext i8 %90 to i32
  %and149 = and i32 %conv148, 15
  %cmp150 = icmp eq i32 %and149, 6
  br i1 %cmp150, label %if.then152, label %if.end163

if.then152:                                       ; preds = %sw.bb144
  %91 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u153 = getelementptr inbounds %struct.context, %struct.context* %91, i32 0, i32 0
  %cx_blk154 = bitcast %union.anon.16* %cx_u153 to %struct.block*
  %blk_u155 = getelementptr inbounds %struct.block, %struct.block* %cx_blk154, i32 0, i32 8
  %blku_loop156 = bitcast %union.anon.20* %blk_u155 to %struct.block_loop*
  %state_u = getelementptr inbounds %struct.block_loop, %struct.block_loop* %blku_loop156, i32 0, i32 3
  %lazysv = bitcast %union.anon.22* %state_u to %struct.anon.25*
  %cur = getelementptr inbounds %struct.anon.25, %struct.anon.25* %lazysv, i32 0, i32 0
  %92 = load %struct.sv*, %struct.sv** %cur, align 8
  %93 = bitcast %struct.sv* %92 to i8*
  %94 = bitcast i8* %93 to %struct.sv*
  call void @S_SvREFCNT_dec_NN(%struct.sv* %94)
  %95 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u157 = getelementptr inbounds %struct.context, %struct.context* %95, i32 0, i32 0
  %cx_blk158 = bitcast %union.anon.16* %cx_u157 to %struct.block*
  %blk_u159 = getelementptr inbounds %struct.block, %struct.block* %cx_blk158, i32 0, i32 8
  %blku_loop160 = bitcast %union.anon.20* %blk_u159 to %struct.block_loop*
  %state_u161 = getelementptr inbounds %struct.block_loop, %struct.block_loop* %blku_loop160, i32 0, i32 3
  %lazysv162 = bitcast %union.anon.22* %state_u161 to %struct.anon.25*
  %end = getelementptr inbounds %struct.anon.25, %struct.anon.25* %lazysv162, i32 0, i32 1
  %96 = load %struct.sv*, %struct.sv** %end, align 8
  %97 = bitcast %struct.sv* %96 to i8*
  %98 = bitcast i8* %97 to %struct.sv*
  call void @S_SvREFCNT_dec_NN(%struct.sv* %98)
  br label %if.end163

if.end163:                                        ; preds = %if.then152, %sw.bb144
  %99 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u164 = getelementptr inbounds %struct.context, %struct.context* %99, i32 0, i32 0
  %cx_subst165 = bitcast %union.anon.16* %cx_u164 to %struct.subst*
  %sbu_type166 = getelementptr inbounds %struct.subst, %struct.subst* %cx_subst165, i32 0, i32 0
  %100 = load i8, i8* %sbu_type166, align 8
  %conv167 = zext i8 %100 to i32
  %and168 = and i32 %conv167, 15
  %cmp169 = icmp eq i32 %and168, 4
  br i1 %cmp169, label %if.then171, label %if.end178

if.then171:                                       ; preds = %if.end163
  %101 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u172 = getelementptr inbounds %struct.context, %struct.context* %101, i32 0, i32 0
  %cx_blk173 = bitcast %union.anon.16* %cx_u172 to %struct.block*
  %blk_u174 = getelementptr inbounds %struct.block, %struct.block* %cx_blk173, i32 0, i32 8
  %blku_loop175 = bitcast %union.anon.20* %blk_u174 to %struct.block_loop*
  %state_u176 = getelementptr inbounds %struct.block_loop, %struct.block_loop* %blku_loop175, i32 0, i32 3
  %ary = bitcast %union.anon.22* %state_u176 to %struct.anon.23*
  %ary177 = getelementptr inbounds %struct.anon.23, %struct.anon.23* %ary, i32 0, i32 0
  %102 = load %struct.av*, %struct.av** %ary177, align 8
  %103 = bitcast %struct.av* %102 to i8*
  %104 = bitcast i8* %103 to %struct.sv*
  call void @S_SvREFCNT_dec(%struct.sv* %104)
  br label %if.end178

if.end178:                                        ; preds = %if.then171, %if.end163
  call void @Perl_pop_scope()
  br label %sw.epilog347

sw.bb179:                                         ; preds = %sw.epilog
  br label %do.body180

do.body180:                                       ; preds = %sw.bb179
  %105 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u181 = getelementptr inbounds %struct.context, %struct.context* %105, i32 0, i32 0
  %cx_blk182 = bitcast %union.anon.16* %cx_u181 to %struct.block*
  %blk_u183 = getelementptr inbounds %struct.block, %struct.block* %cx_blk182, i32 0, i32 8
  %blku_sub184 = bitcast %union.anon.20* %blk_u183 to %struct.block_sub*
  %olddepth185 = getelementptr inbounds %struct.block_sub, %struct.block_sub* %blku_sub184, i32 0, i32 4
  %106 = load i32, i32* %olddepth185, align 8
  store i32 %106, i32* %olddepth, align 4
  %107 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u186 = getelementptr inbounds %struct.context, %struct.context* %107, i32 0, i32 0
  %cx_blk187 = bitcast %union.anon.16* %cx_u186 to %struct.block*
  %blku_u16188 = getelementptr inbounds %struct.block, %struct.block* %cx_blk187, i32 0, i32 2
  %108 = load i16, i16* %blku_u16188, align 2
  %conv189 = zext i16 %108 to i32
  %and190 = and i32 %conv189, 256
  %tobool191 = icmp ne i32 %and190, 0
  br i1 %tobool191, label %if.end316, label %if.then192

if.then192:                                       ; preds = %do.body180
  %109 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u193 = getelementptr inbounds %struct.context, %struct.context* %109, i32 0, i32 0
  %cx_blk194 = bitcast %union.anon.16* %cx_u193 to %struct.block*
  %blku_u16195 = getelementptr inbounds %struct.block, %struct.block* %cx_blk194, i32 0, i32 2
  %110 = load i16, i16* %blku_u16195, align 2
  %conv196 = zext i16 %110 to i32
  %or197 = or i32 %conv196, 256
  %conv198 = trunc i32 %or197 to i16
  store i16 %conv198, i16* %blku_u16195, align 2
  %111 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u199 = getelementptr inbounds %struct.context, %struct.context* %111, i32 0, i32 0
  %cx_subst200 = bitcast %union.anon.16* %cx_u199 to %struct.subst*
  %sbu_type201 = getelementptr inbounds %struct.subst, %struct.subst* %cx_subst200, i32 0, i32 0
  %112 = load i8, i8* %sbu_type201, align 8
  %conv202 = zext i8 %112 to i32
  %and203 = and i32 %conv202, 32
  %cmp204 = icmp eq i32 %and203, 32
  br i1 %cmp204, label %if.then206, label %if.end315

if.then206:                                       ; preds = %if.then192
  br label %do.body207

do.body207:                                       ; preds = %if.then206
  %113 = load %struct.gv*, %struct.gv** @PL_defgv, align 8
  %sv_u = getelementptr inbounds %struct.gv, %struct.gv* %113, i32 0, i32 3
  %svu_gp = bitcast %union.anon.4* %sv_u to %struct.gp**
  %114 = load %struct.gp*, %struct.gp** %svu_gp, align 8
  %add.ptr208 = getelementptr inbounds %struct.gp, %struct.gp* %114, i64 0
  %gp_av = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr208, i32 0, i32 6
  %115 = load %struct.av*, %struct.av** %gp_av, align 8
  %116 = bitcast %struct.av* %115 to i8*
  %117 = bitcast i8* %116 to %struct.sv*
  call void @S_SvREFCNT_dec(%struct.sv* %117)
  %118 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u209 = getelementptr inbounds %struct.context, %struct.context* %118, i32 0, i32 0
  %cx_blk210 = bitcast %union.anon.16* %cx_u209 to %struct.block*
  %blk_u211 = getelementptr inbounds %struct.block, %struct.block* %cx_blk210, i32 0, i32 8
  %blku_sub212 = bitcast %union.anon.20* %blk_u211 to %struct.block_sub*
  %savearray = getelementptr inbounds %struct.block_sub, %struct.block_sub* %blku_sub212, i32 0, i32 2
  %119 = load %struct.av*, %struct.av** %savearray, align 8
  %120 = load %struct.gv*, %struct.gv** @PL_defgv, align 8
  %sv_u213 = getelementptr inbounds %struct.gv, %struct.gv* %120, i32 0, i32 3
  %svu_gp214 = bitcast %union.anon.4* %sv_u213 to %struct.gp**
  %121 = load %struct.gp*, %struct.gp** %svu_gp214, align 8
  %add.ptr215 = getelementptr inbounds %struct.gp, %struct.gp* %121, i64 0
  %gp_av216 = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr215, i32 0, i32 6
  store %struct.av* %119, %struct.av** %gp_av216, align 8
  br label %do.end217

do.end217:                                        ; preds = %do.body207
  %122 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u218 = getelementptr inbounds %struct.context, %struct.context* %122, i32 0, i32 0
  %cx_blk219 = bitcast %union.anon.16* %cx_u218 to %struct.block*
  %blk_u220 = getelementptr inbounds %struct.block, %struct.block* %cx_blk219, i32 0, i32 8
  %blku_sub221 = bitcast %union.anon.20* %blk_u220 to %struct.block_sub*
  %argarray = getelementptr inbounds %struct.block_sub, %struct.block_sub* %blku_sub221, i32 0, i32 3
  %123 = load %struct.av*, %struct.av** %argarray, align 8
  %sv_flags222 = getelementptr inbounds %struct.av, %struct.av* %123, i32 0, i32 2
  %124 = load i32, i32* %sv_flags222, align 4
  %and223 = and i32 %124, 1073741824
  %tobool224 = icmp ne i32 %and223, 0
  br i1 %tobool224, label %if.then225, label %if.else

if.then225:                                       ; preds = %do.end217
  %125 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u226 = getelementptr inbounds %struct.context, %struct.context* %125, i32 0, i32 0
  %cx_blk227 = bitcast %union.anon.16* %cx_u226 to %struct.block*
  %blk_u228 = getelementptr inbounds %struct.block, %struct.block* %cx_blk227, i32 0, i32 8
  %blku_sub229 = bitcast %union.anon.20* %blk_u228 to %struct.block_sub*
  %argarray230 = getelementptr inbounds %struct.block_sub, %struct.block_sub* %blku_sub229, i32 0, i32 3
  %126 = load %struct.av*, %struct.av** %argarray230, align 8
  %sv_any = getelementptr inbounds %struct.av, %struct.av* %126, i32 0, i32 0
  %127 = load %struct.xpvav*, %struct.xpvav** %sv_any, align 8
  %xav_fill = getelementptr inbounds %struct.xpvav, %struct.xpvav* %127, i32 0, i32 2
  %128 = load i64, i64* %xav_fill, align 8
  store i64 %128, i64* %fill, align 8
  %129 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u231 = getelementptr inbounds %struct.context, %struct.context* %129, i32 0, i32 0
  %cx_blk232 = bitcast %union.anon.16* %cx_u231 to %struct.block*
  %blk_u233 = getelementptr inbounds %struct.block, %struct.block* %cx_blk232, i32 0, i32 8
  %blku_sub234 = bitcast %union.anon.20* %blk_u233 to %struct.block_sub*
  %argarray235 = getelementptr inbounds %struct.block_sub, %struct.block_sub* %blku_sub234, i32 0, i32 3
  %130 = load %struct.av*, %struct.av** %argarray235, align 8
  %131 = bitcast %struct.av* %130 to i8*
  %132 = bitcast i8* %131 to %struct.sv*
  call void @S_SvREFCNT_dec_NN(%struct.sv* %132)
  %call236 = call %struct.sv* @Perl_newSV_type(i32 11)
  %133 = bitcast %struct.sv* %call236 to i8*
  %134 = bitcast i8* %133 to %struct.av*
  %135 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u237 = getelementptr inbounds %struct.context, %struct.context* %135, i32 0, i32 0
  %cx_blk238 = bitcast %union.anon.16* %cx_u237 to %struct.block*
  %blk_u239 = getelementptr inbounds %struct.block, %struct.block* %cx_blk238, i32 0, i32 8
  %blku_sub240 = bitcast %union.anon.20* %blk_u239 to %struct.block_sub*
  %argarray241 = getelementptr inbounds %struct.block_sub, %struct.block_sub* %blku_sub240, i32 0, i32 3
  store %struct.av* %134, %struct.av** %argarray241, align 8
  %136 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u242 = getelementptr inbounds %struct.context, %struct.context* %136, i32 0, i32 0
  %cx_blk243 = bitcast %union.anon.16* %cx_u242 to %struct.block*
  %blk_u244 = getelementptr inbounds %struct.block, %struct.block* %cx_blk243, i32 0, i32 8
  %blku_sub245 = bitcast %union.anon.20* %blk_u244 to %struct.block_sub*
  %argarray246 = getelementptr inbounds %struct.block_sub, %struct.block_sub* %blku_sub245, i32 0, i32 3
  %137 = load %struct.av*, %struct.av** %argarray246, align 8
  %138 = load i64, i64* %fill, align 8
  call void @Perl_av_extend(%struct.av* %137, i64 %138)
  %139 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u247 = getelementptr inbounds %struct.context, %struct.context* %139, i32 0, i32 0
  %cx_blk248 = bitcast %union.anon.16* %cx_u247 to %struct.block*
  %blk_u249 = getelementptr inbounds %struct.block, %struct.block* %cx_blk248, i32 0, i32 8
  %blku_sub250 = bitcast %union.anon.20* %blk_u249 to %struct.block_sub*
  %argarray251 = getelementptr inbounds %struct.block_sub, %struct.block_sub* %blku_sub250, i32 0, i32 3
  %140 = load %struct.av*, %struct.av** %argarray251, align 8
  %sv_flags252 = getelementptr inbounds %struct.av, %struct.av* %140, i32 0, i32 2
  %141 = load i32, i32* %sv_flags252, align 4
  %and253 = and i32 %141, -1073741825
  store i32 %and253, i32* %sv_flags252, align 4
  %142 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u254 = getelementptr inbounds %struct.context, %struct.context* %142, i32 0, i32 0
  %cx_blk255 = bitcast %union.anon.16* %cx_u254 to %struct.block*
  %blk_u256 = getelementptr inbounds %struct.block, %struct.block* %cx_blk255, i32 0, i32 8
  %blku_sub257 = bitcast %union.anon.20* %blk_u256 to %struct.block_sub*
  %argarray258 = getelementptr inbounds %struct.block_sub, %struct.block_sub* %blku_sub257, i32 0, i32 3
  %143 = load %struct.av*, %struct.av** %argarray258, align 8
  %sv_flags259 = getelementptr inbounds %struct.av, %struct.av* %143, i32 0, i32 2
  %144 = load i32, i32* %sv_flags259, align 4
  %or260 = or i32 %144, -2147483648
  store i32 %or260, i32* %sv_flags259, align 4
  %145 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u261 = getelementptr inbounds %struct.context, %struct.context* %145, i32 0, i32 0
  %cx_blk262 = bitcast %union.anon.16* %cx_u261 to %struct.block*
  %blk_u263 = getelementptr inbounds %struct.block, %struct.block* %cx_blk262, i32 0, i32 8
  %blku_sub264 = bitcast %union.anon.20* %blk_u263 to %struct.block_sub*
  %argarray265 = getelementptr inbounds %struct.block_sub, %struct.block_sub* %blku_sub264, i32 0, i32 3
  %146 = load %struct.av*, %struct.av** %argarray265, align 8
  %147 = bitcast %struct.av* %146 to i8*
  %148 = bitcast i8* %147 to %struct.sv*
  %149 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u266 = getelementptr inbounds %struct.context, %struct.context* %149, i32 0, i32 0
  %cx_blk267 = bitcast %union.anon.16* %cx_u266 to %struct.block*
  %blk_u268 = getelementptr inbounds %struct.block, %struct.block* %cx_blk267, i32 0, i32 8
  %blku_sub269 = bitcast %union.anon.20* %blk_u268 to %struct.block_sub*
  %oldcomppad = getelementptr inbounds %struct.block_sub, %struct.block_sub* %blku_sub269, i32 0, i32 5
  %150 = load %struct.av*, %struct.av** %oldcomppad, align 8
  %151 = bitcast %struct.av* %150 to i8*
  %152 = bitcast i8* %151 to %struct.av*
  %sv_u270 = getelementptr inbounds %struct.av, %struct.av* %152, i32 0, i32 3
  %svu_array = bitcast %union.anon.0* %sv_u270 to %struct.sv***
  %153 = load %struct.sv**, %struct.sv*** %svu_array, align 8
  %arrayidx271 = getelementptr inbounds %struct.sv*, %struct.sv** %153, i64 0
  store %struct.sv* %148, %struct.sv** %arrayidx271, align 8
  br label %if.end314

if.else:                                          ; preds = %do.end217
  br label %do.body272

do.body272:                                       ; preds = %if.else
  %154 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u273 = getelementptr inbounds %struct.context, %struct.context* %154, i32 0, i32 0
  %cx_blk274 = bitcast %union.anon.16* %cx_u273 to %struct.block*
  %blk_u275 = getelementptr inbounds %struct.block, %struct.block* %cx_blk274, i32 0, i32 8
  %blku_sub276 = bitcast %union.anon.20* %blk_u275 to %struct.block_sub*
  %argarray277 = getelementptr inbounds %struct.block_sub, %struct.block_sub* %blku_sub276, i32 0, i32 3
  %155 = load %struct.av*, %struct.av** %argarray277, align 8
  %sv_u278 = getelementptr inbounds %struct.av, %struct.av* %155, i32 0, i32 3
  %svu_array279 = bitcast %union.anon.0* %sv_u278 to %struct.sv***
  %156 = load %struct.sv**, %struct.sv*** %svu_array279, align 8
  %157 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u280 = getelementptr inbounds %struct.context, %struct.context* %157, i32 0, i32 0
  %cx_blk281 = bitcast %union.anon.16* %cx_u280 to %struct.block*
  %blk_u282 = getelementptr inbounds %struct.block, %struct.block* %cx_blk281, i32 0, i32 8
  %blku_sub283 = bitcast %union.anon.20* %blk_u282 to %struct.block_sub*
  %argarray284 = getelementptr inbounds %struct.block_sub, %struct.block_sub* %blku_sub283, i32 0, i32 3
  %158 = load %struct.av*, %struct.av** %argarray284, align 8
  %sv_any285 = getelementptr inbounds %struct.av, %struct.av* %158, i32 0, i32 0
  %159 = load %struct.xpvav*, %struct.xpvav** %sv_any285, align 8
  %xav_alloc = getelementptr inbounds %struct.xpvav, %struct.xpvav* %159, i32 0, i32 4
  %160 = load %struct.sv**, %struct.sv*** %xav_alloc, align 8
  %sub.ptr.lhs.cast = ptrtoint %struct.sv** %156 to i64
  %sub.ptr.rhs.cast = ptrtoint %struct.sv** %160 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 8
  %161 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u286 = getelementptr inbounds %struct.context, %struct.context* %161, i32 0, i32 0
  %cx_blk287 = bitcast %union.anon.16* %cx_u286 to %struct.block*
  %blk_u288 = getelementptr inbounds %struct.block, %struct.block* %cx_blk287, i32 0, i32 8
  %blku_sub289 = bitcast %union.anon.20* %blk_u288 to %struct.block_sub*
  %argarray290 = getelementptr inbounds %struct.block_sub, %struct.block_sub* %blku_sub289, i32 0, i32 3
  %162 = load %struct.av*, %struct.av** %argarray290, align 8
  %sv_any291 = getelementptr inbounds %struct.av, %struct.av* %162, i32 0, i32 0
  %163 = load %struct.xpvav*, %struct.xpvav** %sv_any291, align 8
  %xav_max = getelementptr inbounds %struct.xpvav, %struct.xpvav* %163, i32 0, i32 3
  %164 = load i64, i64* %xav_max, align 8
  %add = add nsw i64 %164, %sub.ptr.div
  store i64 %add, i64* %xav_max, align 8
  %165 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u292 = getelementptr inbounds %struct.context, %struct.context* %165, i32 0, i32 0
  %cx_blk293 = bitcast %union.anon.16* %cx_u292 to %struct.block*
  %blk_u294 = getelementptr inbounds %struct.block, %struct.block* %cx_blk293, i32 0, i32 8
  %blku_sub295 = bitcast %union.anon.20* %blk_u294 to %struct.block_sub*
  %argarray296 = getelementptr inbounds %struct.block_sub, %struct.block_sub* %blku_sub295, i32 0, i32 3
  %166 = load %struct.av*, %struct.av** %argarray296, align 8
  %sv_any297 = getelementptr inbounds %struct.av, %struct.av* %166, i32 0, i32 0
  %167 = load %struct.xpvav*, %struct.xpvav** %sv_any297, align 8
  %xav_alloc298 = getelementptr inbounds %struct.xpvav, %struct.xpvav* %167, i32 0, i32 4
  %168 = load %struct.sv**, %struct.sv*** %xav_alloc298, align 8
  %169 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u299 = getelementptr inbounds %struct.context, %struct.context* %169, i32 0, i32 0
  %cx_blk300 = bitcast %union.anon.16* %cx_u299 to %struct.block*
  %blk_u301 = getelementptr inbounds %struct.block, %struct.block* %cx_blk300, i32 0, i32 8
  %blku_sub302 = bitcast %union.anon.20* %blk_u301 to %struct.block_sub*
  %argarray303 = getelementptr inbounds %struct.block_sub, %struct.block_sub* %blku_sub302, i32 0, i32 3
  %170 = load %struct.av*, %struct.av** %argarray303, align 8
  %sv_u304 = getelementptr inbounds %struct.av, %struct.av* %170, i32 0, i32 3
  %svu_array305 = bitcast %union.anon.0* %sv_u304 to %struct.sv***
  store %struct.sv** %168, %struct.sv*** %svu_array305, align 8
  %171 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u306 = getelementptr inbounds %struct.context, %struct.context* %171, i32 0, i32 0
  %cx_blk307 = bitcast %union.anon.16* %cx_u306 to %struct.block*
  %blk_u308 = getelementptr inbounds %struct.block, %struct.block* %cx_blk307, i32 0, i32 8
  %blku_sub309 = bitcast %union.anon.20* %blk_u308 to %struct.block_sub*
  %argarray310 = getelementptr inbounds %struct.block_sub, %struct.block_sub* %blku_sub309, i32 0, i32 3
  %172 = load %struct.av*, %struct.av** %argarray310, align 8
  %sv_any311 = getelementptr inbounds %struct.av, %struct.av* %172, i32 0, i32 0
  %173 = load %struct.xpvav*, %struct.xpvav** %sv_any311, align 8
  %xav_fill312 = getelementptr inbounds %struct.xpvav, %struct.xpvav* %173, i32 0, i32 2
  store i64 -1, i64* %xav_fill312, align 8
  br label %do.end313

do.end313:                                        ; preds = %do.body272
  br label %if.end314

if.end314:                                        ; preds = %do.end313, %if.then225
  br label %if.end315

if.end315:                                        ; preds = %if.end314, %if.then192
  br label %if.end316

if.end316:                                        ; preds = %if.end315, %do.body180
  %174 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u317 = getelementptr inbounds %struct.context, %struct.context* %174, i32 0, i32 0
  %cx_blk318 = bitcast %union.anon.16* %cx_u317 to %struct.block*
  %blk_u319 = getelementptr inbounds %struct.block, %struct.block* %cx_blk318, i32 0, i32 8
  %blku_sub320 = bitcast %union.anon.20* %blk_u319 to %struct.block_sub*
  %cv321 = getelementptr inbounds %struct.block_sub, %struct.block_sub* %blku_sub320, i32 0, i32 1
  %175 = load %struct.cv*, %struct.cv** %cv321, align 8
  %176 = bitcast %struct.cv* %175 to i8*
  %177 = bitcast i8* %176 to %struct.sv*
  store %struct.sv* %177, %struct.sv** %sv, align 8
  br label %do.body322

do.body322:                                       ; preds = %if.end316
  %178 = load i32, i32* @PL_savestack_ix, align 4
  %179 = load i32*, i32** @PL_scopestack, align 8
  %180 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u323 = getelementptr inbounds %struct.context, %struct.context* %180, i32 0, i32 0
  %cx_blk324 = bitcast %union.anon.16* %cx_u323 to %struct.block*
  %blku_oldscopesp325 = getelementptr inbounds %struct.block, %struct.block* %cx_blk324, i32 0, i32 6
  %181 = load i32, i32* %blku_oldscopesp325, align 4
  %sub326 = sub nsw i32 %181, 1
  %idxprom327 = sext i32 %sub326 to i64
  %arrayidx328 = getelementptr inbounds i32, i32* %179, i64 %idxprom327
  %182 = load i32, i32* %arrayidx328, align 4
  %cmp329 = icmp sgt i32 %178, %182
  br i1 %cmp329, label %if.then331, label %if.end338

if.then331:                                       ; preds = %do.body322
  %183 = load i32*, i32** @PL_scopestack, align 8
  %184 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u332 = getelementptr inbounds %struct.context, %struct.context* %184, i32 0, i32 0
  %cx_blk333 = bitcast %union.anon.16* %cx_u332 to %struct.block*
  %blku_oldscopesp334 = getelementptr inbounds %struct.block, %struct.block* %cx_blk333, i32 0, i32 6
  %185 = load i32, i32* %blku_oldscopesp334, align 4
  %sub335 = sub nsw i32 %185, 1
  %idxprom336 = sext i32 %sub335 to i64
  %arrayidx337 = getelementptr inbounds i32, i32* %183, i64 %idxprom336
  %186 = load i32, i32* %arrayidx337, align 4
  call void @Perl_leave_scope(i32 %186)
  br label %if.end338

if.end338:                                        ; preds = %if.then331, %do.body322
  br label %do.end339

do.end339:                                        ; preds = %if.end338
  %187 = load %struct.sv*, %struct.sv** %sv, align 8
  %tobool340 = icmp ne %struct.sv* %187, null
  br i1 %tobool340, label %land.lhs.true341, label %if.end345

land.lhs.true341:                                 ; preds = %do.end339
  %188 = load i32, i32* %olddepth, align 4
  %189 = load %struct.sv*, %struct.sv** %sv, align 8
  %190 = bitcast %struct.sv* %189 to %struct.cv*
  %call342 = call i32* @S_CvDEPTHp(%struct.cv* %190)
  store i32 %188, i32* %call342, align 4
  %tobool343 = icmp ne i32 %188, 0
  br i1 %tobool343, label %if.then344, label %if.end345

if.then344:                                       ; preds = %land.lhs.true341
  store %struct.sv* null, %struct.sv** %sv, align 8
  br label %if.end345

if.end345:                                        ; preds = %if.then344, %land.lhs.true341, %do.end339
  br label %do.end346

do.end346:                                        ; preds = %if.end345
  br label %sw.epilog347

sw.epilog347:                                     ; preds = %sw.epilog, %do.end346, %if.end178
  %191 = load %struct.pmop*, %struct.pmop** %newpm, align 8
  store %struct.pmop* %191, %struct.pmop** @PL_curpm, align 8
  br label %do.body348

do.body348:                                       ; preds = %sw.epilog347
  %192 = load %struct.sv*, %struct.sv** %sv, align 8
  %193 = bitcast %struct.sv* %192 to i8*
  %194 = bitcast i8* %193 to %struct.sv*
  call void @S_SvREFCNT_dec(%struct.sv* %194)
  br label %do.end349

do.end349:                                        ; preds = %do.body348
  %195 = load i32, i32* %optype, align 4
  %196 = load i32, i32* %gimme, align 4
  %197 = load %struct.op*, %struct.op** %nextop, align 8
  store %struct.op* %197, %struct.op** %retval, align 8
  br label %return

return:                                           ; preds = %do.end349, %sw.default
  %198 = load %struct.op*, %struct.op** %retval, align 8
  ret %struct.op* %198
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @S_unwind_loop(i8* %opname) #0 {
entry:
  %opname.addr = alloca i8*, align 8
  %cxix = alloca i32, align 4
  %sp = alloca %struct.sv**, align 8
  %label_len = alloca i64, align 8
  %label = alloca i8*, align 8
  %label_flags = alloca i32, align 4
  store i8* %opname, i8** %opname.addr, align 8
  %0 = load %struct.op*, %struct.op** @PL_op, align 8
  %op_flags = getelementptr inbounds %struct.op, %struct.op* %0, i32 0, i32 5
  %1 = load i8, i8* %op_flags, align 2
  %conv = zext i8 %1 to i32
  %and = and i32 %conv, 128
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %2 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %si_cxix = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %2, i32 0, i32 4
  %3 = load i32, i32* %si_cxix, align 8
  %call = call i32 @S_dopoptoloop(i32 %3)
  store i32 %call, i32* %cxix, align 4
  %4 = load i32, i32* %cxix, align 4
  %cmp = icmp slt i32 %4, 0
  br i1 %cmp, label %if.then2, label %if.end

if.then2:                                         ; preds = %if.then
  %5 = load i8*, i8** %opname.addr, align 8
  call void (i8*, ...) @Perl_croak(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.95, i64 0, i64 0), i8* %5)
  br label %if.end

if.end:                                           ; preds = %if.then2, %if.then
  br label %if.end49

if.else:                                          ; preds = %entry
  %6 = load %struct.sv**, %struct.sv*** @PL_stack_sp, align 8
  store %struct.sv** %6, %struct.sv*** %sp, align 8
  %7 = load %struct.op*, %struct.op** @PL_op, align 8
  %op_flags3 = getelementptr inbounds %struct.op, %struct.op* %7, i32 0, i32 5
  %8 = load i8, i8* %op_flags3, align 2
  %conv4 = zext i8 %8 to i32
  %and5 = and i32 %conv4, 64
  %tobool6 = icmp ne i32 %and5, 0
  br i1 %tobool6, label %cond.true, label %cond.false12

cond.true:                                        ; preds = %if.else
  %9 = load %struct.sv**, %struct.sv*** %sp, align 8
  %10 = load %struct.sv*, %struct.sv** %9, align 8
  %sv_flags = getelementptr inbounds %struct.sv, %struct.sv* %10, i32 0, i32 2
  %11 = load i32, i32* %sv_flags, align 4
  %and7 = and i32 %11, 2098176
  %cmp8 = icmp eq i32 %and7, 1024
  br i1 %cmp8, label %cond.true10, label %cond.false

cond.true10:                                      ; preds = %cond.true
  %12 = load %struct.sv**, %struct.sv*** %sp, align 8
  %13 = load %struct.sv*, %struct.sv** %12, align 8
  %sv_any = getelementptr inbounds %struct.sv, %struct.sv* %13, i32 0, i32 0
  %14 = load i8*, i8** %sv_any, align 8
  %15 = bitcast i8* %14 to %struct.xpv*
  %xpv_cur = getelementptr inbounds %struct.xpv, %struct.xpv* %15, i32 0, i32 2
  %16 = load i64, i64* %xpv_cur, align 8
  store i64 %16, i64* %label_len, align 8
  %17 = load %struct.sv**, %struct.sv*** %sp, align 8
  %18 = load %struct.sv*, %struct.sv** %17, align 8
  %sv_u = getelementptr inbounds %struct.sv, %struct.sv* %18, i32 0, i32 3
  %svu_pv = bitcast %union.anon* %sv_u to i8**
  %19 = load i8*, i8** %svu_pv, align 8
  br label %cond.end

cond.false:                                       ; preds = %cond.true
  %20 = load %struct.sv**, %struct.sv*** %sp, align 8
  %21 = load %struct.sv*, %struct.sv** %20, align 8
  %call11 = call i8* @Perl_sv_2pv_flags(%struct.sv* %21, i64* %label_len, i32 2)
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true10
  %cond = phi i8* [ %19, %cond.true10 ], [ %call11, %cond.false ]
  br label %cond.end15

cond.false12:                                     ; preds = %if.else
  %22 = load %struct.op*, %struct.op** @PL_op, align 8
  %23 = bitcast %struct.op* %22 to %struct.pvop*
  %op_pv = getelementptr inbounds %struct.pvop, %struct.pvop* %23, i32 0, i32 7
  %24 = load i8*, i8** %op_pv, align 8
  %call13 = call i64 @strlen(i8* %24) #8
  store i64 %call13, i64* %label_len, align 8
  %25 = load %struct.op*, %struct.op** @PL_op, align 8
  %26 = bitcast %struct.op* %25 to %struct.pvop*
  %op_pv14 = getelementptr inbounds %struct.pvop, %struct.pvop* %26, i32 0, i32 7
  %27 = load i8*, i8** %op_pv14, align 8
  br label %cond.end15

cond.end15:                                       ; preds = %cond.false12, %cond.end
  %cond16 = phi i8* [ %cond, %cond.end ], [ %27, %cond.false12 ]
  store i8* %cond16, i8** %label, align 8
  %28 = load %struct.op*, %struct.op** @PL_op, align 8
  %op_flags17 = getelementptr inbounds %struct.op, %struct.op* %28, i32 0, i32 5
  %29 = load i8, i8* %op_flags17, align 2
  %conv18 = zext i8 %29 to i32
  %and19 = and i32 %conv18, 64
  %tobool20 = icmp ne i32 %and19, 0
  br i1 %tobool20, label %cond.true21, label %cond.false24

cond.true21:                                      ; preds = %cond.end15
  %30 = load %struct.sv**, %struct.sv*** %sp, align 8
  %incdec.ptr = getelementptr inbounds %struct.sv*, %struct.sv** %30, i32 -1
  store %struct.sv** %incdec.ptr, %struct.sv*** %sp, align 8
  %31 = load %struct.sv*, %struct.sv** %30, align 8
  %sv_flags22 = getelementptr inbounds %struct.sv, %struct.sv* %31, i32 0, i32 2
  %32 = load i32, i32* %sv_flags22, align 4
  %and23 = and i32 %32, 536870912
  br label %cond.end29

cond.false24:                                     ; preds = %cond.end15
  %33 = load %struct.op*, %struct.op** @PL_op, align 8
  %34 = bitcast %struct.op* %33 to %struct.pvop*
  %op_private = getelementptr inbounds %struct.pvop, %struct.pvop* %34, i32 0, i32 6
  %35 = load i8, i8* %op_private, align 1
  %conv25 = zext i8 %35 to i32
  %and26 = and i32 %conv25, 128
  %tobool27 = icmp ne i32 %and26, 0
  %36 = zext i1 %tobool27 to i64
  %cond28 = select i1 %tobool27, i32 536870912, i32 0
  br label %cond.end29

cond.end29:                                       ; preds = %cond.false24, %cond.true21
  %cond30 = phi i32 [ %and23, %cond.true21 ], [ %cond28, %cond.false24 ]
  store i32 %cond30, i32* %label_flags, align 4
  %37 = load %struct.sv**, %struct.sv*** %sp, align 8
  store %struct.sv** %37, %struct.sv*** @PL_stack_sp, align 8
  %38 = load i8*, i8** %label, align 8
  %39 = load i64, i64* %label_len, align 8
  %40 = load i32, i32* %label_flags, align 4
  %call31 = call i32 @S_dopoptolabel(i8* %38, i64 %39, i32 %40)
  store i32 %call31, i32* %cxix, align 4
  %41 = load i32, i32* %cxix, align 4
  %cmp32 = icmp slt i32 %41, 0
  br i1 %cmp32, label %if.then34, label %if.end48

if.then34:                                        ; preds = %cond.end29
  %42 = load i8*, i8** %opname.addr, align 8
  %43 = load %struct.op*, %struct.op** @PL_op, align 8
  %op_flags35 = getelementptr inbounds %struct.op, %struct.op* %43, i32 0, i32 5
  %44 = load i8, i8* %op_flags35, align 2
  %conv36 = zext i8 %44 to i32
  %and37 = and i32 %conv36, 64
  %tobool38 = icmp ne i32 %and37, 0
  br i1 %tobool38, label %land.lhs.true, label %cond.false44

land.lhs.true:                                    ; preds = %if.then34
  %45 = load %struct.sv**, %struct.sv*** %sp, align 8
  %add.ptr = getelementptr inbounds %struct.sv*, %struct.sv** %45, i64 1
  %46 = load %struct.sv*, %struct.sv** %add.ptr, align 8
  %sv_flags39 = getelementptr inbounds %struct.sv, %struct.sv* %46, i32 0, i32 2
  %47 = load i32, i32* %sv_flags39, align 4
  %and40 = and i32 %47, 2097152
  %tobool41 = icmp ne i32 %and40, 0
  br i1 %tobool41, label %cond.false44, label %cond.true42

cond.true42:                                      ; preds = %land.lhs.true
  %48 = load %struct.sv**, %struct.sv*** %sp, align 8
  %add.ptr43 = getelementptr inbounds %struct.sv*, %struct.sv** %48, i64 1
  %49 = load %struct.sv*, %struct.sv** %add.ptr43, align 8
  br label %cond.end46

cond.false44:                                     ; preds = %land.lhs.true, %if.then34
  %50 = load i8*, i8** %label, align 8
  %51 = load i64, i64* %label_len, align 8
  %52 = load i32, i32* %label_flags, align 4
  %or = or i32 %52, 524288
  %call45 = call %struct.sv* @Perl_newSVpvn_flags(i8* %50, i64 %51, i32 %or)
  br label %cond.end46

cond.end46:                                       ; preds = %cond.false44, %cond.true42
  %cond47 = phi %struct.sv* [ %49, %cond.true42 ], [ %call45, %cond.false44 ]
  %53 = bitcast %struct.sv* %cond47 to i8*
  call void (i8*, ...) @Perl_croak(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.96, i64 0, i64 0), i8* %42, i8* %53)
  br label %if.end48

if.end48:                                         ; preds = %cond.end46, %cond.end29
  br label %if.end49

if.end49:                                         ; preds = %if.end48, %if.end
  %54 = load i32, i32* %cxix, align 4
  %55 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %si_cxix50 = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %55, i32 0, i32 4
  %56 = load i32, i32* %si_cxix50, align 8
  %cmp51 = icmp slt i32 %54, %56
  br i1 %cmp51, label %if.then53, label %if.end54

if.then53:                                        ; preds = %if.end49
  %57 = load i32, i32* %cxix, align 4
  call void @Perl_dounwind(i32 %57)
  br label %if.end54

if.end54:                                         ; preds = %if.then53, %if.end49
  %58 = load i32, i32* %cxix, align 4
  ret i32 %58
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.op* @Perl_pp_next() #0 {
entry:
  %cx = alloca %struct.context*, align 8
  %inner = alloca i32, align 4
  %0 = load i32, i32* @PL_scopestack_ix, align 4
  store i32 %0, i32* %inner, align 4
  %call = call i32 @S_unwind_loop(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.32, i64 0, i64 0))
  %1 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %si_cxstack = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %1, i32 0, i32 1
  %2 = load %struct.context*, %struct.context** %si_cxstack, align 8
  %3 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %si_cxix = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %3, i32 0, i32 4
  %4 = load i32, i32* %si_cxix, align 8
  %idxprom = sext i32 %4 to i64
  %arrayidx = getelementptr inbounds %struct.context, %struct.context* %2, i64 %idxprom
  store %struct.context* %arrayidx, %struct.context** %cx, align 8
  %5 = load %struct.sv**, %struct.sv*** @PL_stack_base, align 8
  %6 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u = getelementptr inbounds %struct.context, %struct.context* %6, i32 0, i32 0
  %cx_blk = bitcast %union.anon.16* %cx_u to %struct.block*
  %blku_oldsp = getelementptr inbounds %struct.block, %struct.block* %cx_blk, i32 0, i32 3
  %7 = load i32, i32* %blku_oldsp, align 4
  %idx.ext = sext i32 %7 to i64
  %add.ptr = getelementptr inbounds %struct.sv*, %struct.sv** %5, i64 %idx.ext
  store %struct.sv** %add.ptr, %struct.sv*** @PL_stack_sp, align 8
  %8 = load i32*, i32** @PL_markstack, align 8
  %9 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u1 = getelementptr inbounds %struct.context, %struct.context* %9, i32 0, i32 0
  %cx_blk2 = bitcast %union.anon.16* %cx_u1 to %struct.block*
  %blku_oldmarksp = getelementptr inbounds %struct.block, %struct.block* %cx_blk2, i32 0, i32 5
  %10 = load i32, i32* %blku_oldmarksp, align 8
  %idx.ext3 = sext i32 %10 to i64
  %add.ptr4 = getelementptr inbounds i32, i32* %8, i64 %idx.ext3
  store i32* %add.ptr4, i32** @PL_markstack_ptr, align 8
  %11 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u5 = getelementptr inbounds %struct.context, %struct.context* %11, i32 0, i32 0
  %cx_blk6 = bitcast %union.anon.16* %cx_u5 to %struct.block*
  %blku_oldscopesp = getelementptr inbounds %struct.block, %struct.block* %cx_blk6, i32 0, i32 6
  %12 = load i32, i32* %blku_oldscopesp, align 4
  store i32 %12, i32* @PL_scopestack_ix, align 4
  %13 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u7 = getelementptr inbounds %struct.context, %struct.context* %13, i32 0, i32 0
  %cx_blk8 = bitcast %union.anon.16* %cx_u7 to %struct.block*
  %blku_oldpm = getelementptr inbounds %struct.block, %struct.block* %cx_blk8, i32 0, i32 7
  %14 = load %struct.pmop*, %struct.pmop** %blku_oldpm, align 8
  store %struct.pmop* %14, %struct.pmop** @PL_curpm, align 8
  %15 = load i32, i32* @PL_scopestack_ix, align 4
  %16 = load i32, i32* %inner, align 4
  %cmp = icmp slt i32 %15, %16
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %17 = load i32*, i32** @PL_scopestack, align 8
  %18 = load i32, i32* @PL_scopestack_ix, align 4
  %idxprom9 = sext i32 %18 to i64
  %arrayidx10 = getelementptr inbounds i32, i32* %17, i64 %idxprom9
  %19 = load i32, i32* %arrayidx10, align 4
  call void @Perl_leave_scope(i32 %19)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %20 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u11 = getelementptr inbounds %struct.context, %struct.context* %20, i32 0, i32 0
  %cx_blk12 = bitcast %union.anon.16* %cx_u11 to %struct.block*
  %blku_oldcop = getelementptr inbounds %struct.block, %struct.block* %cx_blk12, i32 0, i32 4
  %21 = load %struct.cop*, %struct.cop** %blku_oldcop, align 8
  store %struct.cop* %21, %struct.cop** @PL_curcop, align 8
  %22 = load i32, i32* @PL_sig_pending, align 4
  %tobool = icmp ne i32 %22, 0
  br i1 %tobool, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end
  br i1 true, label %if.then13, label %if.end14

cond.false:                                       ; preds = %if.end
  br i1 false, label %if.then13, label %if.end14

if.then13:                                        ; preds = %cond.false, %cond.true
  %23 = load void ()*, void ()** @PL_signalhook, align 8
  call void %23()
  br label %if.end14

if.end14:                                         ; preds = %if.then13, %cond.false, %cond.true
  %24 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u15 = getelementptr inbounds %struct.context, %struct.context* %24, i32 0, i32 0
  %cx_blk16 = bitcast %union.anon.16* %cx_u15 to %struct.block*
  %blk_u = getelementptr inbounds %struct.block, %struct.block* %cx_blk16, i32 0, i32 8
  %blku_loop = bitcast %union.anon.20* %blk_u to %struct.block_loop*
  %my_op = getelementptr inbounds %struct.block_loop, %struct.block_loop* %blku_loop, i32 0, i32 1
  %25 = load %struct.loop*, %struct.loop** %my_op, align 8
  %op_nextop = getelementptr inbounds %struct.loop, %struct.loop* %25, i32 0, i32 10
  %26 = load %struct.op*, %struct.op** %op_nextop, align 8
  ret %struct.op* %26
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.op* @Perl_pp_redo() #0 {
entry:
  %cxix = alloca i32, align 4
  %cx = alloca %struct.context*, align 8
  %oldsave = alloca i32, align 4
  %redo_op = alloca %struct.op*, align 8
  %call = call i32 @S_unwind_loop(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.33, i64 0, i64 0))
  store i32 %call, i32* %cxix, align 4
  %0 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %si_cxstack = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %0, i32 0, i32 1
  %1 = load %struct.context*, %struct.context** %si_cxstack, align 8
  %2 = load i32, i32* %cxix, align 4
  %idxprom = sext i32 %2 to i64
  %arrayidx = getelementptr inbounds %struct.context, %struct.context* %1, i64 %idxprom
  %cx_u = getelementptr inbounds %struct.context, %struct.context* %arrayidx, i32 0, i32 0
  %cx_blk = bitcast %union.anon.16* %cx_u to %struct.block*
  %blk_u = getelementptr inbounds %struct.block, %struct.block* %cx_blk, i32 0, i32 8
  %blku_loop = bitcast %union.anon.20* %blk_u to %struct.block_loop*
  %my_op = getelementptr inbounds %struct.block_loop, %struct.block_loop* %blku_loop, i32 0, i32 1
  %3 = load %struct.loop*, %struct.loop** %my_op, align 8
  %op_redoop = getelementptr inbounds %struct.loop, %struct.loop* %3, i32 0, i32 9
  %4 = load %struct.op*, %struct.op** %op_redoop, align 8
  store %struct.op* %4, %struct.op** %redo_op, align 8
  %5 = load %struct.op*, %struct.op** %redo_op, align 8
  %op_type = getelementptr inbounds %struct.op, %struct.op* %5, i32 0, i32 4
  %bf.load = load i16, i16* %op_type, align 8
  %bf.clear = and i16 %bf.load, 511
  %bf.cast = zext i16 %bf.clear to i32
  %cmp = icmp eq i32 %bf.cast, 196
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %6 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %si_cxix = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %6, i32 0, i32 4
  %7 = load i32, i32* %si_cxix, align 8
  %inc = add nsw i32 %7, 1
  store i32 %inc, i32* %si_cxix, align 8
  %8 = load %struct.op*, %struct.op** %redo_op, align 8
  %op_next = getelementptr inbounds %struct.op, %struct.op* %8, i32 0, i32 0
  %9 = load %struct.op*, %struct.op** %op_next, align 8
  store %struct.op* %9, %struct.op** %redo_op, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %10 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %si_cxstack1 = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %10, i32 0, i32 1
  %11 = load %struct.context*, %struct.context** %si_cxstack1, align 8
  %12 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %si_cxix2 = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %12, i32 0, i32 4
  %13 = load i32, i32* %si_cxix2, align 8
  %idxprom3 = sext i32 %13 to i64
  %arrayidx4 = getelementptr inbounds %struct.context, %struct.context* %11, i64 %idxprom3
  store %struct.context* %arrayidx4, %struct.context** %cx, align 8
  %14 = load %struct.sv**, %struct.sv*** @PL_stack_base, align 8
  %15 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u5 = getelementptr inbounds %struct.context, %struct.context* %15, i32 0, i32 0
  %cx_blk6 = bitcast %union.anon.16* %cx_u5 to %struct.block*
  %blku_oldsp = getelementptr inbounds %struct.block, %struct.block* %cx_blk6, i32 0, i32 3
  %16 = load i32, i32* %blku_oldsp, align 4
  %idx.ext = sext i32 %16 to i64
  %add.ptr = getelementptr inbounds %struct.sv*, %struct.sv** %14, i64 %idx.ext
  store %struct.sv** %add.ptr, %struct.sv*** @PL_stack_sp, align 8
  %17 = load i32*, i32** @PL_markstack, align 8
  %18 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u7 = getelementptr inbounds %struct.context, %struct.context* %18, i32 0, i32 0
  %cx_blk8 = bitcast %union.anon.16* %cx_u7 to %struct.block*
  %blku_oldmarksp = getelementptr inbounds %struct.block, %struct.block* %cx_blk8, i32 0, i32 5
  %19 = load i32, i32* %blku_oldmarksp, align 8
  %idx.ext9 = sext i32 %19 to i64
  %add.ptr10 = getelementptr inbounds i32, i32* %17, i64 %idx.ext9
  store i32* %add.ptr10, i32** @PL_markstack_ptr, align 8
  %20 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u11 = getelementptr inbounds %struct.context, %struct.context* %20, i32 0, i32 0
  %cx_blk12 = bitcast %union.anon.16* %cx_u11 to %struct.block*
  %blku_oldscopesp = getelementptr inbounds %struct.block, %struct.block* %cx_blk12, i32 0, i32 6
  %21 = load i32, i32* %blku_oldscopesp, align 4
  store i32 %21, i32* @PL_scopestack_ix, align 4
  %22 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u13 = getelementptr inbounds %struct.context, %struct.context* %22, i32 0, i32 0
  %cx_blk14 = bitcast %union.anon.16* %cx_u13 to %struct.block*
  %blku_oldpm = getelementptr inbounds %struct.block, %struct.block* %cx_blk14, i32 0, i32 7
  %23 = load %struct.pmop*, %struct.pmop** %blku_oldpm, align 8
  store %struct.pmop* %23, %struct.pmop** @PL_curpm, align 8
  %24 = load i32*, i32** @PL_scopestack, align 8
  %25 = load i32, i32* @PL_scopestack_ix, align 4
  %sub = sub nsw i32 %25, 1
  %idxprom15 = sext i32 %sub to i64
  %arrayidx16 = getelementptr inbounds i32, i32* %24, i64 %idxprom15
  %26 = load i32, i32* %arrayidx16, align 4
  store i32 %26, i32* %oldsave, align 4
  br label %do.body

do.body:                                          ; preds = %if.end
  %27 = load i32, i32* @PL_savestack_ix, align 4
  %28 = load i32, i32* %oldsave, align 4
  %cmp17 = icmp sgt i32 %27, %28
  br i1 %cmp17, label %if.then18, label %if.end19

if.then18:                                        ; preds = %do.body
  %29 = load i32, i32* %oldsave, align 4
  call void @Perl_leave_scope(i32 %29)
  br label %if.end19

if.end19:                                         ; preds = %if.then18, %do.body
  br label %do.end

do.end:                                           ; preds = %if.end19
  %30 = load i64, i64* @PL_tmps_ix, align 8
  %31 = load i64, i64* @PL_tmps_floor, align 8
  %cmp20 = icmp sgt i64 %30, %31
  br i1 %cmp20, label %if.then21, label %if.end22

if.then21:                                        ; preds = %do.end
  call void @Perl_free_tmps()
  br label %if.end22

if.end22:                                         ; preds = %if.then21, %do.end
  %32 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u23 = getelementptr inbounds %struct.context, %struct.context* %32, i32 0, i32 0
  %cx_blk24 = bitcast %union.anon.16* %cx_u23 to %struct.block*
  %blku_oldcop = getelementptr inbounds %struct.block, %struct.block* %cx_blk24, i32 0, i32 4
  %33 = load %struct.cop*, %struct.cop** %blku_oldcop, align 8
  store %struct.cop* %33, %struct.cop** @PL_curcop, align 8
  %34 = load i32, i32* @PL_sig_pending, align 4
  %tobool = icmp ne i32 %34, 0
  br i1 %tobool, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end22
  br i1 true, label %if.then25, label %if.end26

cond.false:                                       ; preds = %if.end22
  br i1 false, label %if.then25, label %if.end26

if.then25:                                        ; preds = %cond.false, %cond.true
  %35 = load void ()*, void ()** @PL_signalhook, align 8
  call void %35()
  br label %if.end26

if.end26:                                         ; preds = %if.then25, %cond.false, %cond.true
  %36 = load %struct.op*, %struct.op** %redo_op, align 8
  ret %struct.op* %36
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.op* @Perl_pp_goto() #0 {
entry:
  %retval = alloca %struct.op*, align 8
  %sp = alloca %struct.sv**, align 8
  %retop = alloca %struct.op*, align 8
  %ix = alloca i32, align 4
  %cx = alloca %struct.context*, align 8
  %enterops = alloca [64 x %struct.op*], align 16
  %label = alloca i8*, align 8
  %label_len = alloca i64, align 8
  %label_flags = alloca i32, align 4
  %do_dump = alloca i8, align 1
  %sv = alloca %struct.sv*, align 8
  %cxix = alloca i32, align 4
  %cx12 = alloca %struct.context*, align 8
  %cv = alloca %struct.cv*, align 8
  %arg = alloca %struct.av*, align 8
  %oldsave = alloca i32, align 4
  %gv = alloca %struct.gv*, align 8
  %autogv = alloca %struct.gv*, align 8
  %tmpstr = alloca %struct.sv*, align 8
  %av = alloca %struct.av*, align 8
  %gv231 = alloca %struct.gv*, align 8
  %tmpstr235 = alloca %struct.sv*, align 8
  %newsp = alloca %struct.sv**, align 8
  %gimme = alloca i32, align 4
  %items = alloca i64, align 8
  %m = alloca i8, align 1
  %mark = alloca %struct.sv**, align 8
  %index = alloca i64, align 8
  %r = alloca i8, align 1
  %sv300 = alloca %struct.sv*, align 8
  %svp = alloca %struct.sv**, align 8
  %mark_stack_entry = alloca i32*, align 8
  %padlist = alloca %struct.padlist*, align 8
  %av480 = alloca %struct.av*, align 8
  %gotocv = alloca %struct.cv*, align 8
  %mark_stack_entry503 = alloca i32*, align 8
  %gotoprobe = alloca %struct.op*, align 8
  %leaving_eval = alloca i8, align 1
  %in_block = alloca i8, align 1
  %last_eval_cx = alloca %struct.context*, align 8
  %sibl1 = alloca %struct.op*, align 8
  %sibl2 = alloca %struct.op*, align 8
  %i = alloca i32, align 4
  %i729 = alloca i32, align 4
  %oldsave753 = alloca i32, align 4
  %oldop = alloca %struct.op*, align 8
  %0 = load %struct.sv**, %struct.sv*** @PL_stack_sp, align 8
  store %struct.sv** %0, %struct.sv*** %sp, align 8
  store %struct.op* null, %struct.op** %retop, align 8
  store i8* null, i8** %label, align 8
  store i64 0, i64* %label_len, align 8
  store i32 0, i32* %label_flags, align 4
  %1 = load %struct.op*, %struct.op** @PL_op, align 8
  %op_type = getelementptr inbounds %struct.op, %struct.op* %1, i32 0, i32 4
  %bf.load = load i16, i16* %op_type, align 8
  %bf.clear = and i16 %bf.load, 511
  %bf.cast = zext i16 %bf.clear to i32
  %cmp = icmp eq i32 %bf.cast, 207
  %frombool = zext i1 %cmp to i8
  store i8 %frombool, i8* %do_dump, align 1
  %2 = load %struct.op*, %struct.op** @PL_op, align 8
  %op_flags = getelementptr inbounds %struct.op, %struct.op* %2, i32 0, i32 5
  %3 = load i8, i8* %op_flags, align 2
  %conv = zext i8 %3 to i32
  %and = and i32 %conv, 64
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %if.then, label %if.else540

if.then:                                          ; preds = %entry
  %4 = load %struct.sv**, %struct.sv*** %sp, align 8
  %incdec.ptr = getelementptr inbounds %struct.sv*, %struct.sv** %4, i32 -1
  store %struct.sv** %incdec.ptr, %struct.sv*** %sp, align 8
  %5 = load %struct.sv*, %struct.sv** %4, align 8
  store %struct.sv* %5, %struct.sv** %sv, align 8
  %6 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_flags = getelementptr inbounds %struct.sv, %struct.sv* %6, i32 0, i32 2
  %7 = load i32, i32* %sv_flags, align 4
  %and1 = and i32 %7, 2097152
  %tobool2 = icmp ne i32 %and1, 0
  br i1 %tobool2, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.then
  br i1 true, label %land.rhs, label %land.end

cond.false:                                       ; preds = %if.then
  br i1 false, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %cond.false, %cond.true
  %8 = load %struct.sv*, %struct.sv** %sv, align 8
  %call = call i32 @Perl_mg_get(%struct.sv* %8)
  %tobool3 = icmp ne i32 %call, 0
  br label %land.end

land.end:                                         ; preds = %land.rhs, %cond.false, %cond.true
  %9 = phi i1 [ false, %cond.false ], [ false, %cond.true ], [ %tobool3, %land.rhs ]
  %land.ext = zext i1 %9 to i32
  %10 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_flags4 = getelementptr inbounds %struct.sv, %struct.sv* %10, i32 0, i32 2
  %11 = load i32, i32* %sv_flags4, align 4
  %and5 = and i32 %11, 2048
  %tobool6 = icmp ne i32 %and5, 0
  br i1 %tobool6, label %land.lhs.true, label %if.else524

land.lhs.true:                                    ; preds = %land.end
  %12 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_u = getelementptr inbounds %struct.sv, %struct.sv* %12, i32 0, i32 3
  %svu_rv = bitcast %union.anon* %sv_u to %struct.sv**
  %13 = load %struct.sv*, %struct.sv** %svu_rv, align 8
  %sv_flags7 = getelementptr inbounds %struct.sv, %struct.sv* %13, i32 0, i32 2
  %14 = load i32, i32* %sv_flags7, align 4
  %and8 = and i32 %14, 255
  %cmp9 = icmp eq i32 %and8, 13
  br i1 %cmp9, label %if.then11, label %if.else524

if.then11:                                        ; preds = %land.lhs.true
  %15 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_u13 = getelementptr inbounds %struct.sv, %struct.sv* %15, i32 0, i32 3
  %svu_rv14 = bitcast %union.anon* %sv_u13 to %struct.sv**
  %16 = load %struct.sv*, %struct.sv** %svu_rv14, align 8
  %17 = bitcast %struct.sv* %16 to i8*
  %18 = bitcast i8* %17 to %struct.cv*
  store %struct.cv* %18, %struct.cv** %cv, align 8
  %19 = load %struct.gv*, %struct.gv** @PL_defgv, align 8
  %sv_u15 = getelementptr inbounds %struct.gv, %struct.gv* %19, i32 0, i32 3
  %svu_gp = bitcast %union.anon.4* %sv_u15 to %struct.gp**
  %20 = load %struct.gp*, %struct.gp** %svu_gp, align 8
  %add.ptr = getelementptr inbounds %struct.gp, %struct.gp* %20, i64 0
  %gp_av = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr, i32 0, i32 6
  %21 = load %struct.av*, %struct.av** %gp_av, align 8
  store %struct.av* %21, %struct.av** %arg, align 8
  br label %retry

retry:                                            ; preds = %if.then68, %if.then38, %if.then11
  %22 = load %struct.cv*, %struct.cv** %cv, align 8
  %sv_any = getelementptr inbounds %struct.cv, %struct.cv* %22, i32 0, i32 0
  %23 = load %struct.xpvcv*, %struct.xpvcv** %sv_any, align 8
  %24 = bitcast %struct.xpvcv* %23 to i8*
  %25 = bitcast i8* %24 to %struct.xpvcv*
  %xcv_root_u = getelementptr inbounds %struct.xpvcv, %struct.xpvcv* %25, i32 0, i32 6
  %xcv_root = bitcast %union.anon.11* %xcv_root_u to %struct.op**
  %26 = load %struct.op*, %struct.op** %xcv_root, align 8
  %tobool16 = icmp ne %struct.op* %26, null
  br i1 %tobool16, label %if.end74, label %land.lhs.true17

land.lhs.true17:                                  ; preds = %retry
  %27 = load %struct.cv*, %struct.cv** %cv, align 8
  %sv_any18 = getelementptr inbounds %struct.cv, %struct.cv* %27, i32 0, i32 0
  %28 = load %struct.xpvcv*, %struct.xpvcv** %sv_any18, align 8
  %29 = bitcast %struct.xpvcv* %28 to i8*
  %30 = bitcast i8* %29 to %struct.xpvcv*
  %xcv_root_u19 = getelementptr inbounds %struct.xpvcv, %struct.xpvcv* %30, i32 0, i32 6
  %xcv_xsub = bitcast %union.anon.11* %xcv_root_u19 to void (%struct.cv*)**
  %31 = load void (%struct.cv*)*, void (%struct.cv*)** %xcv_xsub, align 8
  %tobool20 = icmp ne void (%struct.cv*)* %31, null
  br i1 %tobool20, label %if.end74, label %if.then21

if.then21:                                        ; preds = %land.lhs.true17
  %32 = load %struct.cv*, %struct.cv** %cv, align 8
  %call22 = call %struct.gv* @S_CvGV(%struct.cv* %32)
  store %struct.gv* %call22, %struct.gv** %gv, align 8
  %33 = load %struct.gv*, %struct.gv** %gv, align 8
  %tobool23 = icmp ne %struct.gv* %33, null
  br i1 %tobool23, label %if.then24, label %if.end72

if.then24:                                        ; preds = %if.then21
  %34 = load %struct.cv*, %struct.cv** %cv, align 8
  %35 = load %struct.gv*, %struct.gv** %gv, align 8
  %sv_u25 = getelementptr inbounds %struct.gv, %struct.gv* %35, i32 0, i32 3
  %svu_gp26 = bitcast %union.anon.4* %sv_u25 to %struct.gp**
  %36 = load %struct.gp*, %struct.gp** %svu_gp26, align 8
  %add.ptr27 = getelementptr inbounds %struct.gp, %struct.gp* %36, i64 0
  %gp_cv = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr27, i32 0, i32 2
  %37 = load %struct.cv*, %struct.cv** %gp_cv, align 8
  %add.ptr28 = getelementptr inbounds %struct.cv, %struct.cv* %37, i64 0
  %cmp29 = icmp ne %struct.cv* %34, %add.ptr28
  br i1 %cmp29, label %land.lhs.true31, label %if.end

land.lhs.true31:                                  ; preds = %if.then24
  %38 = load %struct.gv*, %struct.gv** %gv, align 8
  %sv_u32 = getelementptr inbounds %struct.gv, %struct.gv* %38, i32 0, i32 3
  %svu_gp33 = bitcast %union.anon.4* %sv_u32 to %struct.gp**
  %39 = load %struct.gp*, %struct.gp** %svu_gp33, align 8
  %add.ptr34 = getelementptr inbounds %struct.gp, %struct.gp* %39, i64 0
  %gp_cv35 = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr34, i32 0, i32 2
  %40 = load %struct.cv*, %struct.cv** %gp_cv35, align 8
  %add.ptr36 = getelementptr inbounds %struct.cv, %struct.cv* %40, i64 0
  store %struct.cv* %add.ptr36, %struct.cv** %cv, align 8
  %tobool37 = icmp ne %struct.cv* %add.ptr36, null
  br i1 %tobool37, label %if.then38, label %if.end

if.then38:                                        ; preds = %land.lhs.true31
  br label %retry

if.end:                                           ; preds = %land.lhs.true31, %if.then24
  %41 = load %struct.gv*, %struct.gv** %gv, align 8
  %sv_any39 = getelementptr inbounds %struct.gv, %struct.gv* %41, i32 0, i32 0
  %42 = load %struct.xpvgv*, %struct.xpvgv** %sv_any39, align 8
  %xnv_u = getelementptr inbounds %struct.xpvgv, %struct.xpvgv* %42, i32 0, i32 5
  %xgv_stash = bitcast %union._xnvu* %xnv_u to %struct.hv**
  %43 = load %struct.hv*, %struct.hv** %xgv_stash, align 8
  %44 = load %struct.gv*, %struct.gv** %gv, align 8
  %sv_any40 = getelementptr inbounds %struct.gv, %struct.gv* %44, i32 0, i32 0
  %45 = load %struct.xpvgv*, %struct.xpvgv** %sv_any40, align 8
  %xiv_u = getelementptr inbounds %struct.xpvgv, %struct.xpvgv* %45, i32 0, i32 4
  %xivu_namehek = bitcast %union._xivu* %xiv_u to %struct.hek**
  %46 = load %struct.hek*, %struct.hek** %xivu_namehek, align 8
  %hek_key = getelementptr inbounds %struct.hek, %struct.hek* %46, i32 0, i32 2
  %arraydecay = getelementptr inbounds [1 x i8], [1 x i8]* %hek_key, i64 0, i64 0
  %47 = load %struct.gv*, %struct.gv** %gv, align 8
  %sv_any41 = getelementptr inbounds %struct.gv, %struct.gv* %47, i32 0, i32 0
  %48 = load %struct.xpvgv*, %struct.xpvgv** %sv_any41, align 8
  %xiv_u42 = getelementptr inbounds %struct.xpvgv, %struct.xpvgv* %48, i32 0, i32 4
  %xivu_namehek43 = bitcast %union._xivu* %xiv_u42 to %struct.hek**
  %49 = load %struct.hek*, %struct.hek** %xivu_namehek43, align 8
  %hek_len = getelementptr inbounds %struct.hek, %struct.hek* %49, i32 0, i32 1
  %50 = load i32, i32* %hek_len, align 4
  %conv44 = sext i32 %50 to i64
  %51 = load %struct.gv*, %struct.gv** %gv, align 8
  %sv_any45 = getelementptr inbounds %struct.gv, %struct.gv* %51, i32 0, i32 0
  %52 = load %struct.xpvgv*, %struct.xpvgv** %sv_any45, align 8
  %xiv_u46 = getelementptr inbounds %struct.xpvgv, %struct.xpvgv* %52, i32 0, i32 4
  %xivu_namehek47 = bitcast %union._xivu* %xiv_u46 to %struct.hek**
  %53 = load %struct.hek*, %struct.hek** %xivu_namehek47, align 8
  %hek_key48 = getelementptr inbounds %struct.hek, %struct.hek* %53, i32 0, i32 2
  %arraydecay49 = getelementptr inbounds [1 x i8], [1 x i8]* %hek_key48, i64 0, i64 0
  %54 = load %struct.gv*, %struct.gv** %gv, align 8
  %sv_any50 = getelementptr inbounds %struct.gv, %struct.gv* %54, i32 0, i32 0
  %55 = load %struct.xpvgv*, %struct.xpvgv** %sv_any50, align 8
  %xiv_u51 = getelementptr inbounds %struct.xpvgv, %struct.xpvgv* %55, i32 0, i32 4
  %xivu_namehek52 = bitcast %union._xivu* %xiv_u51 to %struct.hek**
  %56 = load %struct.hek*, %struct.hek** %xivu_namehek52, align 8
  %hek_len53 = getelementptr inbounds %struct.hek, %struct.hek* %56, i32 0, i32 1
  %57 = load i32, i32* %hek_len53, align 4
  %idx.ext = sext i32 %57 to i64
  %add.ptr54 = getelementptr inbounds i8, i8* %arraydecay49, i64 %idx.ext
  %add.ptr55 = getelementptr inbounds i8, i8* %add.ptr54, i64 1
  %58 = load i8, i8* %add.ptr55, align 1
  %conv56 = zext i8 %58 to i32
  %and57 = and i32 %conv56, 1
  %tobool58 = icmp ne i32 %and57, 0
  %59 = zext i1 %tobool58 to i64
  %cond = select i1 %tobool58, i32 536870912, i32 0
  %call59 = call %struct.gv* @Perl_gv_autoload_pvn(%struct.hv* %43, i8* %arraydecay, i64 %conv44, i32 %cond)
  store %struct.gv* %call59, %struct.gv** %autogv, align 8
  %60 = load %struct.gv*, %struct.gv** %autogv, align 8
  %tobool60 = icmp ne %struct.gv* %60, null
  br i1 %tobool60, label %land.lhs.true61, label %if.end69

land.lhs.true61:                                  ; preds = %if.end
  %61 = load %struct.gv*, %struct.gv** %autogv, align 8
  %sv_u62 = getelementptr inbounds %struct.gv, %struct.gv* %61, i32 0, i32 3
  %svu_gp63 = bitcast %union.anon.4* %sv_u62 to %struct.gp**
  %62 = load %struct.gp*, %struct.gp** %svu_gp63, align 8
  %add.ptr64 = getelementptr inbounds %struct.gp, %struct.gp* %62, i64 0
  %gp_cv65 = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr64, i32 0, i32 2
  %63 = load %struct.cv*, %struct.cv** %gp_cv65, align 8
  %add.ptr66 = getelementptr inbounds %struct.cv, %struct.cv* %63, i64 0
  store %struct.cv* %add.ptr66, %struct.cv** %cv, align 8
  %tobool67 = icmp ne %struct.cv* %add.ptr66, null
  br i1 %tobool67, label %if.then68, label %if.end69

if.then68:                                        ; preds = %land.lhs.true61
  br label %retry

if.end69:                                         ; preds = %land.lhs.true61, %if.end
  %call70 = call %struct.sv* @Perl_sv_newmortal()
  store %struct.sv* %call70, %struct.sv** %tmpstr, align 8
  %64 = load %struct.sv*, %struct.sv** %tmpstr, align 8
  %65 = load %struct.gv*, %struct.gv** %gv, align 8
  call void @Perl_gv_efullname4(%struct.sv* %64, %struct.gv* %65, i8* null, i1 zeroext true)
  %66 = load %struct.sv*, %struct.sv** %tmpstr, align 8
  %67 = bitcast %struct.sv* %66 to i8*
  %call71 = call %struct.op* (i8*, ...) @Perl_die(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.35, i64 0, i64 0), i8* %67)
  store %struct.op* %call71, %struct.op** %retval, align 8
  br label %return

if.end72:                                         ; preds = %if.then21
  %call73 = call %struct.op* (i8*, ...) @Perl_die(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.36, i64 0, i64 0))
  store %struct.op* %call73, %struct.op** %retval, align 8
  br label %return

if.end74:                                         ; preds = %land.lhs.true17, %retry
  br label %do.body

do.body:                                          ; preds = %if.end74
  %68 = load %struct.cv*, %struct.cv** %cv, align 8
  %tobool75 = icmp ne %struct.cv* %68, null
  br i1 %tobool75, label %if.then76, label %if.end77

if.then76:                                        ; preds = %do.body
  %69 = load %struct.cv*, %struct.cv** %cv, align 8
  %sv_refcnt = getelementptr inbounds %struct.cv, %struct.cv* %69, i32 0, i32 1
  %70 = load i32, i32* %sv_refcnt, align 8
  %inc = add i32 %70, 1
  store i32 %inc, i32* %sv_refcnt, align 8
  br label %if.end77

if.end77:                                         ; preds = %if.then76, %do.body
  br label %do.end

do.end:                                           ; preds = %if.end77
  %71 = load i64, i64* @PL_tmps_ix, align 8
  %72 = load i64, i64* @PL_tmps_floor, align 8
  %cmp78 = icmp sgt i64 %71, %72
  br i1 %cmp78, label %if.then80, label %if.end81

if.then80:                                        ; preds = %do.end
  call void @Perl_free_tmps()
  br label %if.end81

if.end81:                                         ; preds = %if.then80, %do.end
  %73 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %si_cxstack = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %73, i32 0, i32 1
  %74 = load %struct.context*, %struct.context** %si_cxstack, align 8
  %75 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %si_cxix = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %75, i32 0, i32 4
  %76 = load i32, i32* %si_cxix, align 8
  %call82 = call i32 @S_dopoptosub_at(%struct.context* %74, i32 %76)
  store i32 %call82, i32* %cxix, align 4
  %77 = load i32, i32* %cxix, align 4
  %78 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %si_cxix83 = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %78, i32 0, i32 4
  %79 = load i32, i32* %si_cxix83, align 8
  %cmp84 = icmp slt i32 %77, %79
  br i1 %cmp84, label %if.then86, label %if.end92

if.then86:                                        ; preds = %if.end81
  %80 = load i32, i32* %cxix, align 4
  %cmp87 = icmp slt i32 %80, 0
  br i1 %cmp87, label %if.then89, label %if.end91

if.then89:                                        ; preds = %if.then86
  %81 = load %struct.cv*, %struct.cv** %cv, align 8
  %82 = bitcast %struct.cv* %81 to i8*
  %83 = bitcast i8* %82 to %struct.sv*
  call void @S_SvREFCNT_dec(%struct.sv* %83)
  %call90 = call %struct.op* (i8*, ...) @Perl_die(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.37, i64 0, i64 0))
  store %struct.op* %call90, %struct.op** %retval, align 8
  br label %return

if.end91:                                         ; preds = %if.then86
  %84 = load i32, i32* %cxix, align 4
  call void @Perl_dounwind(i32 %84)
  br label %if.end92

if.end92:                                         ; preds = %if.end91, %if.end81
  %85 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %si_cxstack93 = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %85, i32 0, i32 1
  %86 = load %struct.context*, %struct.context** %si_cxstack93, align 8
  %87 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %si_cxix94 = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %87, i32 0, i32 4
  %88 = load i32, i32* %si_cxix94, align 8
  %idxprom = sext i32 %88 to i64
  %arrayidx = getelementptr inbounds %struct.context, %struct.context* %86, i64 %idxprom
  store %struct.context* %arrayidx, %struct.context** %cx12, align 8
  %89 = load %struct.sv**, %struct.sv*** @PL_stack_base, align 8
  %90 = load %struct.context*, %struct.context** %cx12, align 8
  %cx_u = getelementptr inbounds %struct.context, %struct.context* %90, i32 0, i32 0
  %cx_blk = bitcast %union.anon.16* %cx_u to %struct.block*
  %blku_oldsp = getelementptr inbounds %struct.block, %struct.block* %cx_blk, i32 0, i32 3
  %91 = load i32, i32* %blku_oldsp, align 4
  %idx.ext95 = sext i32 %91 to i64
  %add.ptr96 = getelementptr inbounds %struct.sv*, %struct.sv** %89, i64 %idx.ext95
  store %struct.sv** %add.ptr96, %struct.sv*** @PL_stack_sp, align 8
  %92 = load i32*, i32** @PL_markstack, align 8
  %93 = load %struct.context*, %struct.context** %cx12, align 8
  %cx_u97 = getelementptr inbounds %struct.context, %struct.context* %93, i32 0, i32 0
  %cx_blk98 = bitcast %union.anon.16* %cx_u97 to %struct.block*
  %blku_oldmarksp = getelementptr inbounds %struct.block, %struct.block* %cx_blk98, i32 0, i32 5
  %94 = load i32, i32* %blku_oldmarksp, align 8
  %idx.ext99 = sext i32 %94 to i64
  %add.ptr100 = getelementptr inbounds i32, i32* %92, i64 %idx.ext99
  store i32* %add.ptr100, i32** @PL_markstack_ptr, align 8
  %95 = load %struct.context*, %struct.context** %cx12, align 8
  %cx_u101 = getelementptr inbounds %struct.context, %struct.context* %95, i32 0, i32 0
  %cx_blk102 = bitcast %union.anon.16* %cx_u101 to %struct.block*
  %blku_oldscopesp = getelementptr inbounds %struct.block, %struct.block* %cx_blk102, i32 0, i32 6
  %96 = load i32, i32* %blku_oldscopesp, align 4
  store i32 %96, i32* @PL_scopestack_ix, align 4
  %97 = load %struct.context*, %struct.context** %cx12, align 8
  %cx_u103 = getelementptr inbounds %struct.context, %struct.context* %97, i32 0, i32 0
  %cx_blk104 = bitcast %union.anon.16* %cx_u103 to %struct.block*
  %blku_oldpm = getelementptr inbounds %struct.block, %struct.block* %cx_blk104, i32 0, i32 7
  %98 = load %struct.pmop*, %struct.pmop** %blku_oldpm, align 8
  store %struct.pmop* %98, %struct.pmop** @PL_curpm, align 8
  %99 = load %struct.sv**, %struct.sv*** @PL_stack_sp, align 8
  store %struct.sv** %99, %struct.sv*** %sp, align 8
  %100 = load %struct.context*, %struct.context** %cx12, align 8
  %cx_u105 = getelementptr inbounds %struct.context, %struct.context* %100, i32 0, i32 0
  %cx_subst = bitcast %union.anon.16* %cx_u105 to %struct.subst*
  %sbu_type = getelementptr inbounds %struct.subst, %struct.subst* %cx_subst, i32 0, i32 0
  %101 = load i8, i8* %sbu_type, align 8
  %conv106 = zext i8 %101 to i32
  %and107 = and i32 %conv106, 15
  %cmp108 = icmp eq i32 %and107, 10
  br i1 %cmp108, label %if.then110, label %if.else121

if.then110:                                       ; preds = %if.end92
  %102 = load %struct.cv*, %struct.cv** %cv, align 8
  %103 = bitcast %struct.cv* %102 to i8*
  %104 = bitcast i8* %103 to %struct.sv*
  call void @S_SvREFCNT_dec(%struct.sv* %104)
  %105 = load %struct.context*, %struct.context** %cx12, align 8
  %cx_u111 = getelementptr inbounds %struct.context, %struct.context* %105, i32 0, i32 0
  %cx_subst112 = bitcast %union.anon.16* %cx_u111 to %struct.subst*
  %sbu_type113 = getelementptr inbounds %struct.subst, %struct.subst* %cx_subst112, i32 0, i32 0
  %106 = load i8, i8* %sbu_type113, align 8
  %conv114 = zext i8 %106 to i32
  %and115 = and i32 %conv114, 47
  %cmp116 = icmp eq i32 %and115, 42
  br i1 %cmp116, label %if.then118, label %if.else

if.then118:                                       ; preds = %if.then110
  %call119 = call %struct.op* (i8*, ...) @Perl_die(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.38, i64 0, i64 0))
  store %struct.op* %call119, %struct.op** %retval, align 8
  br label %return

if.else:                                          ; preds = %if.then110
  %call120 = call %struct.op* (i8*, ...) @Perl_die(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.39, i64 0, i64 0))
  store %struct.op* %call120, %struct.op** %retval, align 8
  br label %return

if.else121:                                       ; preds = %if.end92
  %107 = load %struct.context*, %struct.context** %cx12, align 8
  %cx_u122 = getelementptr inbounds %struct.context, %struct.context* %107, i32 0, i32 0
  %cx_subst123 = bitcast %union.anon.16* %cx_u122 to %struct.subst*
  %sbu_type124 = getelementptr inbounds %struct.subst, %struct.subst* %cx_subst123, i32 0, i32 0
  %108 = load i8, i8* %sbu_type124, align 8
  %conv125 = zext i8 %108 to i32
  %and126 = and i32 %conv125, 16
  %cmp127 = icmp eq i32 %and126, 16
  br i1 %cmp127, label %if.then129, label %if.end131

if.then129:                                       ; preds = %if.else121
  %109 = load %struct.cv*, %struct.cv** %cv, align 8
  %110 = bitcast %struct.cv* %109 to i8*
  %111 = bitcast i8* %110 to %struct.sv*
  call void @S_SvREFCNT_dec(%struct.sv* %111)
  %call130 = call %struct.op* (i8*, ...) @Perl_die(i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.40, i64 0, i64 0))
  store %struct.op* %call130, %struct.op** %retval, align 8
  br label %return

if.end131:                                        ; preds = %if.else121
  br label %if.end132

if.end132:                                        ; preds = %if.end131
  %112 = load %struct.context*, %struct.context** %cx12, align 8
  %cx_u133 = getelementptr inbounds %struct.context, %struct.context* %112, i32 0, i32 0
  %cx_subst134 = bitcast %union.anon.16* %cx_u133 to %struct.subst*
  %sbu_type135 = getelementptr inbounds %struct.subst, %struct.subst* %cx_subst134, i32 0, i32 0
  %113 = load i8, i8* %sbu_type135, align 8
  %conv136 = zext i8 %113 to i32
  %and137 = and i32 %conv136, 15
  %cmp138 = icmp eq i32 %and137, 8
  br i1 %cmp138, label %land.lhs.true140, label %if.end179

land.lhs.true140:                                 ; preds = %if.end132
  %114 = load %struct.context*, %struct.context** %cx12, align 8
  %cx_u141 = getelementptr inbounds %struct.context, %struct.context* %114, i32 0, i32 0
  %cx_subst142 = bitcast %union.anon.16* %cx_u141 to %struct.subst*
  %sbu_type143 = getelementptr inbounds %struct.subst, %struct.subst* %cx_subst142, i32 0, i32 0
  %115 = load i8, i8* %sbu_type143, align 8
  %conv144 = zext i8 %115 to i32
  %and145 = and i32 %conv144, 32
  %cmp146 = icmp eq i32 %and145, 32
  br i1 %cmp146, label %if.then148, label %if.end179

if.then148:                                       ; preds = %land.lhs.true140
  %116 = load %struct.context*, %struct.context** %cx12, align 8
  %cx_u149 = getelementptr inbounds %struct.context, %struct.context* %116, i32 0, i32 0
  %cx_blk150 = bitcast %union.anon.16* %cx_u149 to %struct.block*
  %blk_u = getelementptr inbounds %struct.block, %struct.block* %cx_blk150, i32 0, i32 8
  %blku_sub = bitcast %union.anon.20* %blk_u to %struct.block_sub*
  %argarray = getelementptr inbounds %struct.block_sub, %struct.block_sub* %blku_sub, i32 0, i32 3
  %117 = load %struct.av*, %struct.av** %argarray, align 8
  store %struct.av* %117, %struct.av** %av, align 8
  %118 = load %struct.av*, %struct.av** %av, align 8
  %sv_flags151 = getelementptr inbounds %struct.av, %struct.av* %118, i32 0, i32 2
  %119 = load i32, i32* %sv_flags151, align 4
  %and152 = and i32 %119, 1073741824
  %tobool153 = icmp ne i32 %and152, 0
  br i1 %tobool153, label %if.then156, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.then148
  %120 = load %struct.av*, %struct.av** %av, align 8
  %121 = load %struct.av*, %struct.av** %arg, align 8
  %cmp154 = icmp eq %struct.av* %120, %121
  br i1 %cmp154, label %if.then156, label %if.else167

if.then156:                                       ; preds = %lor.lhs.false, %if.then148
  %122 = load %struct.av*, %struct.av** %av, align 8
  %123 = bitcast %struct.av* %122 to i8*
  %124 = bitcast i8* %123 to %struct.sv*
  call void @S_SvREFCNT_dec(%struct.sv* %124)
  %call157 = call %struct.sv* @Perl_newSV_type(i32 11)
  %125 = bitcast %struct.sv* %call157 to i8*
  %126 = bitcast i8* %125 to %struct.av*
  store %struct.av* %126, %struct.av** %av, align 8
  %127 = load %struct.av*, %struct.av** %av, align 8
  %sv_flags158 = getelementptr inbounds %struct.av, %struct.av* %127, i32 0, i32 2
  %128 = load i32, i32* %sv_flags158, align 4
  %and159 = and i32 %128, -1073741825
  store i32 %and159, i32* %sv_flags158, align 4
  %129 = load %struct.av*, %struct.av** %av, align 8
  %sv_flags160 = getelementptr inbounds %struct.av, %struct.av* %129, i32 0, i32 2
  %130 = load i32, i32* %sv_flags160, align 4
  %or = or i32 %130, -2147483648
  store i32 %or, i32* %sv_flags160, align 4
  %131 = load %struct.av*, %struct.av** %av, align 8
  %132 = load %struct.context*, %struct.context** %cx12, align 8
  %cx_u161 = getelementptr inbounds %struct.context, %struct.context* %132, i32 0, i32 0
  %cx_blk162 = bitcast %union.anon.16* %cx_u161 to %struct.block*
  %blk_u163 = getelementptr inbounds %struct.block, %struct.block* %cx_blk162, i32 0, i32 8
  %blku_sub164 = bitcast %union.anon.20* %blk_u163 to %struct.block_sub*
  %argarray165 = getelementptr inbounds %struct.block_sub, %struct.block_sub* %blku_sub164, i32 0, i32 3
  store %struct.av* %131, %struct.av** %argarray165, align 8
  %133 = bitcast %struct.av* %131 to i8*
  %134 = bitcast i8* %133 to %struct.sv*
  %135 = load %struct.sv**, %struct.sv*** @PL_curpad, align 8
  %arrayidx166 = getelementptr inbounds %struct.sv*, %struct.sv** %135, i64 0
  store %struct.sv* %134, %struct.sv** %arrayidx166, align 8
  br label %if.end178

if.else167:                                       ; preds = %lor.lhs.false
  br label %do.body168

do.body168:                                       ; preds = %if.else167
  %136 = load %struct.av*, %struct.av** %av, align 8
  %sv_u169 = getelementptr inbounds %struct.av, %struct.av* %136, i32 0, i32 3
  %svu_array = bitcast %union.anon.0* %sv_u169 to %struct.sv***
  %137 = load %struct.sv**, %struct.sv*** %svu_array, align 8
  %138 = load %struct.av*, %struct.av** %av, align 8
  %sv_any170 = getelementptr inbounds %struct.av, %struct.av* %138, i32 0, i32 0
  %139 = load %struct.xpvav*, %struct.xpvav** %sv_any170, align 8
  %xav_alloc = getelementptr inbounds %struct.xpvav, %struct.xpvav* %139, i32 0, i32 4
  %140 = load %struct.sv**, %struct.sv*** %xav_alloc, align 8
  %sub.ptr.lhs.cast = ptrtoint %struct.sv** %137 to i64
  %sub.ptr.rhs.cast = ptrtoint %struct.sv** %140 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 8
  %141 = load %struct.av*, %struct.av** %av, align 8
  %sv_any171 = getelementptr inbounds %struct.av, %struct.av* %141, i32 0, i32 0
  %142 = load %struct.xpvav*, %struct.xpvav** %sv_any171, align 8
  %xav_max = getelementptr inbounds %struct.xpvav, %struct.xpvav* %142, i32 0, i32 3
  %143 = load i64, i64* %xav_max, align 8
  %add = add nsw i64 %143, %sub.ptr.div
  store i64 %add, i64* %xav_max, align 8
  %144 = load %struct.av*, %struct.av** %av, align 8
  %sv_any172 = getelementptr inbounds %struct.av, %struct.av* %144, i32 0, i32 0
  %145 = load %struct.xpvav*, %struct.xpvav** %sv_any172, align 8
  %xav_alloc173 = getelementptr inbounds %struct.xpvav, %struct.xpvav* %145, i32 0, i32 4
  %146 = load %struct.sv**, %struct.sv*** %xav_alloc173, align 8
  %147 = load %struct.av*, %struct.av** %av, align 8
  %sv_u174 = getelementptr inbounds %struct.av, %struct.av* %147, i32 0, i32 3
  %svu_array175 = bitcast %union.anon.0* %sv_u174 to %struct.sv***
  store %struct.sv** %146, %struct.sv*** %svu_array175, align 8
  %148 = load %struct.av*, %struct.av** %av, align 8
  %sv_any176 = getelementptr inbounds %struct.av, %struct.av* %148, i32 0, i32 0
  %149 = load %struct.xpvav*, %struct.xpvav** %sv_any176, align 8
  %xav_fill = getelementptr inbounds %struct.xpvav, %struct.xpvav* %149, i32 0, i32 2
  store i64 -1, i64* %xav_fill, align 8
  br label %do.end177

do.end177:                                        ; preds = %do.body168
  br label %if.end178

if.end178:                                        ; preds = %do.end177, %if.then156
  br label %if.end179

if.end179:                                        ; preds = %if.end178, %land.lhs.true140, %if.end132
  br label %do.body180

do.body180:                                       ; preds = %if.end179
  %150 = load %struct.av*, %struct.av** %arg, align 8
  %tobool181 = icmp ne %struct.av* %150, null
  br i1 %tobool181, label %if.then182, label %if.end185

if.then182:                                       ; preds = %do.body180
  %151 = load %struct.av*, %struct.av** %arg, align 8
  %sv_refcnt183 = getelementptr inbounds %struct.av, %struct.av* %151, i32 0, i32 1
  %152 = load i32, i32* %sv_refcnt183, align 8
  %inc184 = add i32 %152, 1
  store i32 %inc184, i32* %sv_refcnt183, align 8
  br label %if.end185

if.end185:                                        ; preds = %if.then182, %do.body180
  br label %do.end186

do.end186:                                        ; preds = %if.end185
  %153 = load %struct.context*, %struct.context** %cx12, align 8
  %cx_u187 = getelementptr inbounds %struct.context, %struct.context* %153, i32 0, i32 0
  %cx_subst188 = bitcast %union.anon.16* %cx_u187 to %struct.subst*
  %sbu_type189 = getelementptr inbounds %struct.subst, %struct.subst* %cx_subst188, i32 0, i32 0
  %154 = load i8, i8* %sbu_type189, align 8
  %conv190 = zext i8 %154 to i32
  %and191 = and i32 %conv190, 15
  %cmp192 = icmp eq i32 %and191, 8
  br i1 %cmp192, label %land.lhs.true194, label %if.end212

land.lhs.true194:                                 ; preds = %do.end186
  %155 = load %struct.context*, %struct.context** %cx12, align 8
  %cx_u195 = getelementptr inbounds %struct.context, %struct.context* %155, i32 0, i32 0
  %cx_blk196 = bitcast %union.anon.16* %cx_u195 to %struct.block*
  %blk_u197 = getelementptr inbounds %struct.block, %struct.block* %cx_blk196, i32 0, i32 8
  %blku_sub198 = bitcast %union.anon.20* %blk_u197 to %struct.block_sub*
  %olddepth = getelementptr inbounds %struct.block_sub, %struct.block_sub* %blku_sub198, i32 0, i32 4
  %156 = load i32, i32* %olddepth, align 8
  %157 = load %struct.context*, %struct.context** %cx12, align 8
  %cx_u199 = getelementptr inbounds %struct.context, %struct.context* %157, i32 0, i32 0
  %cx_blk200 = bitcast %union.anon.16* %cx_u199 to %struct.block*
  %blk_u201 = getelementptr inbounds %struct.block, %struct.block* %cx_blk200, i32 0, i32 8
  %blku_sub202 = bitcast %union.anon.20* %blk_u201 to %struct.block_sub*
  %cv203 = getelementptr inbounds %struct.block_sub, %struct.block_sub* %blku_sub202, i32 0, i32 1
  %158 = load %struct.cv*, %struct.cv** %cv203, align 8
  %call204 = call i32* @S_CvDEPTHp(%struct.cv* %158)
  store i32 %156, i32* %call204, align 4
  %tobool205 = icmp ne i32 %156, 0
  br i1 %tobool205, label %if.end212, label %if.then206

if.then206:                                       ; preds = %land.lhs.true194
  %159 = load %struct.context*, %struct.context** %cx12, align 8
  %cx_u207 = getelementptr inbounds %struct.context, %struct.context* %159, i32 0, i32 0
  %cx_blk208 = bitcast %union.anon.16* %cx_u207 to %struct.block*
  %blk_u209 = getelementptr inbounds %struct.block, %struct.block* %cx_blk208, i32 0, i32 8
  %blku_sub210 = bitcast %union.anon.20* %blk_u209 to %struct.block_sub*
  %cv211 = getelementptr inbounds %struct.block_sub, %struct.block_sub* %blku_sub210, i32 0, i32 1
  %160 = load %struct.cv*, %struct.cv** %cv211, align 8
  %161 = bitcast %struct.cv* %160 to i8*
  %162 = bitcast i8* %161 to %struct.sv*
  call void @S_SvREFCNT_dec(%struct.sv* %162)
  br label %if.end212

if.end212:                                        ; preds = %if.then206, %land.lhs.true194, %do.end186
  %163 = load i32*, i32** @PL_scopestack, align 8
  %164 = load i32, i32* @PL_scopestack_ix, align 4
  %sub = sub nsw i32 %164, 1
  %idxprom213 = sext i32 %sub to i64
  %arrayidx214 = getelementptr inbounds i32, i32* %163, i64 %idxprom213
  %165 = load i32, i32* %arrayidx214, align 4
  store i32 %165, i32* %oldsave, align 4
  br label %do.body215

do.body215:                                       ; preds = %if.end212
  %166 = load i32, i32* @PL_savestack_ix, align 4
  %167 = load i32, i32* %oldsave, align 4
  %cmp216 = icmp sgt i32 %166, %167
  br i1 %cmp216, label %if.then218, label %if.end219

if.then218:                                       ; preds = %do.body215
  %168 = load i32, i32* %oldsave, align 4
  call void @Perl_leave_scope(i32 %168)
  br label %if.end219

if.end219:                                        ; preds = %if.then218, %do.body215
  br label %do.end220

do.end220:                                        ; preds = %if.end219
  %169 = load %struct.cv*, %struct.cv** %cv, align 8
  %sv_any221 = getelementptr inbounds %struct.cv, %struct.cv* %169, i32 0, i32 0
  %170 = load %struct.xpvcv*, %struct.xpvcv** %sv_any221, align 8
  %171 = bitcast %struct.xpvcv* %170 to i8*
  %172 = bitcast i8* %171 to %struct.xpvcv*
  %xcv_root_u222 = getelementptr inbounds %struct.xpvcv, %struct.xpvcv* %172, i32 0, i32 6
  %xcv_root223 = bitcast %union.anon.11* %xcv_root_u222 to %struct.op**
  %173 = load %struct.op*, %struct.op** %xcv_root223, align 8
  %tobool224 = icmp ne %struct.op* %173, null
  br i1 %tobool224, label %if.end240, label %land.lhs.true225

land.lhs.true225:                                 ; preds = %do.end220
  %174 = load %struct.cv*, %struct.cv** %cv, align 8
  %sv_any226 = getelementptr inbounds %struct.cv, %struct.cv* %174, i32 0, i32 0
  %175 = load %struct.xpvcv*, %struct.xpvcv** %sv_any226, align 8
  %176 = bitcast %struct.xpvcv* %175 to i8*
  %177 = bitcast i8* %176 to %struct.xpvcv*
  %xcv_root_u227 = getelementptr inbounds %struct.xpvcv, %struct.xpvcv* %177, i32 0, i32 6
  %xcv_xsub228 = bitcast %union.anon.11* %xcv_root_u227 to void (%struct.cv*)**
  %178 = load void (%struct.cv*)*, void (%struct.cv*)** %xcv_xsub228, align 8
  %tobool229 = icmp ne void (%struct.cv*)* %178, null
  br i1 %tobool229, label %if.end240, label %if.then230

if.then230:                                       ; preds = %land.lhs.true225
  %179 = load %struct.cv*, %struct.cv** %cv, align 8
  %call232 = call %struct.gv* @S_CvGV(%struct.cv* %179)
  store %struct.gv* %call232, %struct.gv** %gv231, align 8
  %180 = load %struct.av*, %struct.av** %arg, align 8
  %181 = bitcast %struct.av* %180 to i8*
  %182 = bitcast i8* %181 to %struct.sv*
  call void @S_SvREFCNT_dec(%struct.sv* %182)
  %183 = load %struct.gv*, %struct.gv** %gv231, align 8
  %tobool233 = icmp ne %struct.gv* %183, null
  br i1 %tobool233, label %if.then234, label %if.end238

if.then234:                                       ; preds = %if.then230
  %call236 = call %struct.sv* @Perl_sv_newmortal()
  store %struct.sv* %call236, %struct.sv** %tmpstr235, align 8
  %184 = load %struct.sv*, %struct.sv** %tmpstr235, align 8
  %185 = load %struct.gv*, %struct.gv** %gv231, align 8
  call void @Perl_gv_efullname4(%struct.sv* %184, %struct.gv* %185, i8* null, i1 zeroext true)
  %186 = load %struct.sv*, %struct.sv** %tmpstr235, align 8
  %187 = bitcast %struct.sv* %186 to i8*
  %call237 = call %struct.op* (i8*, ...) @Perl_die(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.35, i64 0, i64 0), i8* %187)
  store %struct.op* %call237, %struct.op** %retval, align 8
  br label %return

if.end238:                                        ; preds = %if.then230
  %call239 = call %struct.op* (i8*, ...) @Perl_die(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.36, i64 0, i64 0))
  store %struct.op* %call239, %struct.op** %retval, align 8
  br label %return

if.end240:                                        ; preds = %land.lhs.true225, %do.end220
  call void @Perl_save_strlen(i64* @PL_tmps_floor)
  %188 = load i64, i64* @PL_tmps_ix, align 8
  store i64 %188, i64* @PL_tmps_floor, align 8
  %189 = load %struct.cv*, %struct.cv** %cv, align 8
  %190 = bitcast %struct.cv* %189 to i8*
  %191 = bitcast i8* %190 to %struct.sv*
  %192 = bitcast %struct.sv* %191 to i8*
  call void @Perl_save_pushptr(i8* %192, i32 11)
  %193 = load %struct.cv*, %struct.cv** %cv, align 8
  %sv_any241 = getelementptr inbounds %struct.cv, %struct.cv* %193, i32 0, i32 0
  %194 = load %struct.xpvcv*, %struct.xpvcv** %sv_any241, align 8
  %195 = bitcast %struct.xpvcv* %194 to i8*
  %196 = bitcast i8* %195 to %struct.xpvcv*
  %xcv_flags = getelementptr inbounds %struct.xpvcv, %struct.xpvcv* %196, i32 0, i32 12
  %197 = load i32, i32* %xcv_flags, align 4
  %and242 = and i32 %197, 8
  %tobool243 = icmp ne i32 %and242, 0
  br i1 %tobool243, label %if.then244, label %if.else411

if.then244:                                       ; preds = %if.end240
  %198 = load %struct.av*, %struct.av** %arg, align 8
  %tobool245 = icmp ne %struct.av* %198, null
  br i1 %tobool245, label %cond.true246, label %cond.false258

cond.true246:                                     ; preds = %if.then244
  %199 = load %struct.av*, %struct.av** %arg, align 8
  %200 = bitcast %struct.av* %199 to %struct.sv*
  %sv_flags247 = getelementptr inbounds %struct.sv, %struct.sv* %200, i32 0, i32 2
  %201 = load i32, i32* %sv_flags247, align 4
  %and248 = and i32 %201, 8388608
  %tobool249 = icmp ne i32 %and248, 0
  br i1 %tobool249, label %cond.true250, label %cond.false253

cond.true250:                                     ; preds = %cond.true246
  %202 = load %struct.av*, %struct.av** %arg, align 8
  %203 = bitcast %struct.av* %202 to i8*
  %204 = bitcast i8* %203 to %struct.sv*
  %call251 = call i32 @Perl_mg_size(%struct.sv* %204)
  %conv252 = sext i32 %call251 to i64
  br label %cond.end

cond.false253:                                    ; preds = %cond.true246
  %205 = load %struct.av*, %struct.av** %arg, align 8
  %sv_any254 = getelementptr inbounds %struct.av, %struct.av* %205, i32 0, i32 0
  %206 = load %struct.xpvav*, %struct.xpvav** %sv_any254, align 8
  %xav_fill255 = getelementptr inbounds %struct.xpvav, %struct.xpvav* %206, i32 0, i32 2
  %207 = load i64, i64* %xav_fill255, align 8
  br label %cond.end

cond.end:                                         ; preds = %cond.false253, %cond.true250
  %cond256 = phi i64 [ %conv252, %cond.true250 ], [ %207, %cond.false253 ]
  %add257 = add nsw i64 %cond256, 1
  br label %cond.end259

cond.false258:                                    ; preds = %if.then244
  br label %cond.end259

cond.end259:                                      ; preds = %cond.false258, %cond.end
  %cond260 = phi i64 [ %add257, %cond.end ], [ 0, %cond.false258 ]
  store i64 %cond260, i64* %items, align 8
  %208 = load %struct.av*, %struct.av** %arg, align 8
  %tobool261 = icmp ne %struct.av* %208, null
  br i1 %tobool261, label %cond.true262, label %cond.false267

cond.true262:                                     ; preds = %cond.end259
  %209 = load %struct.av*, %struct.av** %arg, align 8
  %sv_flags263 = getelementptr inbounds %struct.av, %struct.av* %209, i32 0, i32 2
  %210 = load i32, i32* %sv_flags263, align 4
  %and264 = and i32 %210, 8388608
  %tobool265 = icmp ne i32 %and264, 0
  %211 = zext i1 %tobool265 to i64
  %cond266 = select i1 %tobool265, i32 1, i32 0
  br label %cond.end268

cond.false267:                                    ; preds = %cond.end259
  br label %cond.end268

cond.end268:                                      ; preds = %cond.false267, %cond.true262
  %cond269 = phi i32 [ %cond266, %cond.true262 ], [ 0, %cond.false267 ]
  %tobool270 = icmp ne i32 %cond269, 0
  %frombool271 = zext i1 %tobool270 to i8
  store i8 %frombool271, i8* %m, align 1
  %212 = load %struct.sv**, %struct.sv*** %newsp, align 8
  %213 = load i32, i32* %gimme, align 4
  %214 = load i64, i64* %items, align 8
  %tobool272 = icmp ne i64 %214, 0
  br i1 %tobool272, label %if.then273, label %if.end289

if.then273:                                       ; preds = %cond.end268
  br label %do.body274

do.body274:                                       ; preds = %if.then273
  %215 = load %struct.sv**, %struct.sv*** @PL_stack_max, align 8
  %216 = load %struct.sv**, %struct.sv*** %sp, align 8
  %sub.ptr.lhs.cast275 = ptrtoint %struct.sv** %215 to i64
  %sub.ptr.rhs.cast276 = ptrtoint %struct.sv** %216 to i64
  %sub.ptr.sub277 = sub i64 %sub.ptr.lhs.cast275, %sub.ptr.rhs.cast276
  %sub.ptr.div278 = sdiv exact i64 %sub.ptr.sub277, 8
  %217 = load i64, i64* %items, align 8
  %add279 = add nsw i64 %217, 1
  %cmp280 = icmp slt i64 %sub.ptr.div278, %add279
  br i1 %cmp280, label %cond.true282, label %cond.false283

cond.true282:                                     ; preds = %do.body274
  br i1 true, label %if.then284, label %if.end287

cond.false283:                                    ; preds = %do.body274
  br i1 false, label %if.then284, label %if.end287

if.then284:                                       ; preds = %cond.false283, %cond.true282
  %218 = load %struct.sv**, %struct.sv*** %sp, align 8
  %219 = load %struct.sv**, %struct.sv*** %sp, align 8
  %220 = load i64, i64* %items, align 8
  %add285 = add nsw i64 %220, 1
  %call286 = call %struct.sv** @Perl_stack_grow(%struct.sv** %218, %struct.sv** %219, i64 %add285)
  store %struct.sv** %call286, %struct.sv*** %sp, align 8
  %221 = load %struct.sv**, %struct.sv*** %sp, align 8
  br label %if.end287

if.end287:                                        ; preds = %if.then284, %cond.false283, %cond.true282
  br label %do.end288

do.end288:                                        ; preds = %if.end287
  br label %if.end289

if.end289:                                        ; preds = %do.end288, %cond.end268
  %222 = load %struct.sv**, %struct.sv*** %sp, align 8
  store %struct.sv** %222, %struct.sv*** %mark, align 8
  %223 = load i64, i64* %items, align 8
  %tobool290 = icmp ne i64 %223, 0
  br i1 %tobool290, label %if.then291, label %if.end332

if.then291:                                       ; preds = %if.end289
  %224 = load %struct.av*, %struct.av** %arg, align 8
  %sv_flags292 = getelementptr inbounds %struct.av, %struct.av* %224, i32 0, i32 2
  %225 = load i32, i32* %sv_flags292, align 4
  %and293 = and i32 %225, 1073741824
  %tobool294 = icmp ne i32 %and293, 0
  %226 = zext i1 %tobool294 to i64
  %cond295 = select i1 %tobool294, i32 1, i32 0
  %tobool296 = icmp ne i32 %cond295, 0
  %frombool297 = zext i1 %tobool296 to i8
  store i8 %frombool297, i8* %r, align 1
  store i64 0, i64* %index, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then291
  %227 = load i64, i64* %index, align 8
  %228 = load i64, i64* %items, align 8
  %cmp298 = icmp slt i64 %227, %228
  br i1 %cmp298, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %229 = load i8, i8* %m, align 1
  %tobool301 = trunc i8 %229 to i1
  br i1 %tobool301, label %if.then302, label %if.else309

if.then302:                                       ; preds = %for.body
  %230 = load %struct.av*, %struct.av** %arg, align 8
  %231 = load i64, i64* %index, align 8
  %call303 = call %struct.sv** @Perl_av_fetch(%struct.av* %230, i64 %231, i32 0)
  store %struct.sv** %call303, %struct.sv*** %svp, align 8
  %232 = load %struct.sv**, %struct.sv*** %svp, align 8
  %tobool304 = icmp ne %struct.sv** %232, null
  br i1 %tobool304, label %cond.true305, label %cond.false306

cond.true305:                                     ; preds = %if.then302
  %233 = load %struct.sv**, %struct.sv*** %svp, align 8
  %234 = load %struct.sv*, %struct.sv** %233, align 8
  br label %cond.end307

cond.false306:                                    ; preds = %if.then302
  br label %cond.end307

cond.end307:                                      ; preds = %cond.false306, %cond.true305
  %cond308 = phi %struct.sv* [ %234, %cond.true305 ], [ null, %cond.false306 ]
  store %struct.sv* %cond308, %struct.sv** %sv300, align 8
  br label %if.end313

if.else309:                                       ; preds = %for.body
  %235 = load %struct.av*, %struct.av** %arg, align 8
  %sv_u310 = getelementptr inbounds %struct.av, %struct.av* %235, i32 0, i32 3
  %svu_array311 = bitcast %union.anon.0* %sv_u310 to %struct.sv***
  %236 = load %struct.sv**, %struct.sv*** %svu_array311, align 8
  %237 = load i64, i64* %index, align 8
  %arrayidx312 = getelementptr inbounds %struct.sv*, %struct.sv** %236, i64 %237
  %238 = load %struct.sv*, %struct.sv** %arrayidx312, align 8
  store %struct.sv* %238, %struct.sv** %sv300, align 8
  br label %if.end313

if.end313:                                        ; preds = %if.else309, %cond.end307
  %239 = load %struct.sv*, %struct.sv** %sv300, align 8
  %tobool314 = icmp ne %struct.sv* %239, null
  br i1 %tobool314, label %cond.true315, label %cond.false324

cond.true315:                                     ; preds = %if.end313
  %240 = load i8, i8* %r, align 1
  %tobool316 = trunc i8 %240 to i1
  br i1 %tobool316, label %cond.true318, label %cond.false321

cond.true318:                                     ; preds = %cond.true315
  %241 = load %struct.sv*, %struct.sv** %sv300, align 8
  %call319 = call %struct.sv* @Perl_sv_2mortal(%struct.sv* %241)
  %242 = bitcast %struct.sv* %call319 to i8*
  %243 = bitcast i8* %242 to %struct.sv*
  %call320 = call %struct.sv* @S_SvREFCNT_inc_NN(%struct.sv* %243)
  br label %cond.end322

cond.false321:                                    ; preds = %cond.true315
  %244 = load %struct.sv*, %struct.sv** %sv300, align 8
  br label %cond.end322

cond.end322:                                      ; preds = %cond.false321, %cond.true318
  %cond323 = phi %struct.sv* [ %call320, %cond.true318 ], [ %244, %cond.false321 ]
  br label %cond.end327

cond.false324:                                    ; preds = %if.end313
  %245 = load %struct.av*, %struct.av** %arg, align 8
  %246 = load i64, i64* %index, align 8
  %call325 = call %struct.sv* @Perl_newSVavdefelem(%struct.av* %245, i64 %246, i1 zeroext true)
  %call326 = call %struct.sv* @Perl_sv_2mortal(%struct.sv* %call325)
  br label %cond.end327

cond.end327:                                      ; preds = %cond.false324, %cond.end322
  %cond328 = phi %struct.sv* [ %cond323, %cond.end322 ], [ %call326, %cond.false324 ]
  %247 = load %struct.sv**, %struct.sv*** %sp, align 8
  %248 = load i64, i64* %index, align 8
  %add329 = add nsw i64 %248, 1
  %arrayidx330 = getelementptr inbounds %struct.sv*, %struct.sv** %247, i64 %add329
  store %struct.sv* %cond328, %struct.sv** %arrayidx330, align 8
  br label %for.inc

for.inc:                                          ; preds = %cond.end327
  %249 = load i64, i64* %index, align 8
  %inc331 = add nsw i64 %249, 1
  store i64 %inc331, i64* %index, align 8
  br label %for.cond

for.end:                                          ; preds = %for.cond
  br label %if.end332

if.end332:                                        ; preds = %for.end, %if.end289
  %250 = load i64, i64* %items, align 8
  %251 = load %struct.sv**, %struct.sv*** %sp, align 8
  %add.ptr333 = getelementptr inbounds %struct.sv*, %struct.sv** %251, i64 %250
  store %struct.sv** %add.ptr333, %struct.sv*** %sp, align 8
  %252 = load %struct.av*, %struct.av** %arg, align 8
  %253 = bitcast %struct.av* %252 to i8*
  %254 = bitcast i8* %253 to %struct.sv*
  call void @S_SvREFCNT_dec(%struct.sv* %254)
  %255 = load %struct.context*, %struct.context** %cx12, align 8
  %cx_u334 = getelementptr inbounds %struct.context, %struct.context* %255, i32 0, i32 0
  %cx_subst335 = bitcast %union.anon.16* %cx_u334 to %struct.subst*
  %sbu_type336 = getelementptr inbounds %struct.subst, %struct.subst* %cx_subst335, i32 0, i32 0
  %256 = load i8, i8* %sbu_type336, align 8
  %conv337 = zext i8 %256 to i32
  %and338 = and i32 %conv337, 15
  %cmp339 = icmp eq i32 %and338, 8
  br i1 %cmp339, label %land.lhs.true341, label %if.end362

land.lhs.true341:                                 ; preds = %if.end332
  %257 = load %struct.context*, %struct.context** %cx12, align 8
  %cx_u342 = getelementptr inbounds %struct.context, %struct.context* %257, i32 0, i32 0
  %cx_subst343 = bitcast %union.anon.16* %cx_u342 to %struct.subst*
  %sbu_type344 = getelementptr inbounds %struct.subst, %struct.subst* %cx_subst343, i32 0, i32 0
  %258 = load i8, i8* %sbu_type344, align 8
  %conv345 = zext i8 %258 to i32
  %and346 = and i32 %conv345, 32
  %cmp347 = icmp eq i32 %and346, 32
  br i1 %cmp347, label %if.then349, label %if.end362

if.then349:                                       ; preds = %land.lhs.true341
  %259 = load %struct.gv*, %struct.gv** @PL_defgv, align 8
  %sv_u350 = getelementptr inbounds %struct.gv, %struct.gv* %259, i32 0, i32 3
  %svu_gp351 = bitcast %union.anon.4* %sv_u350 to %struct.gp**
  %260 = load %struct.gp*, %struct.gp** %svu_gp351, align 8
  %add.ptr352 = getelementptr inbounds %struct.gp, %struct.gp* %260, i64 0
  %gp_av353 = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr352, i32 0, i32 6
  %261 = load %struct.av*, %struct.av** %gp_av353, align 8
  store %struct.av* %261, %struct.av** %arg, align 8
  %262 = load %struct.context*, %struct.context** %cx12, align 8
  %cx_u354 = getelementptr inbounds %struct.context, %struct.context* %262, i32 0, i32 0
  %cx_blk355 = bitcast %union.anon.16* %cx_u354 to %struct.block*
  %blk_u356 = getelementptr inbounds %struct.block, %struct.block* %cx_blk355, i32 0, i32 8
  %blku_sub357 = bitcast %union.anon.20* %blk_u356 to %struct.block_sub*
  %savearray = getelementptr inbounds %struct.block_sub, %struct.block_sub* %blku_sub357, i32 0, i32 2
  %263 = load %struct.av*, %struct.av** %savearray, align 8
  %264 = load %struct.gv*, %struct.gv** @PL_defgv, align 8
  %sv_u358 = getelementptr inbounds %struct.gv, %struct.gv* %264, i32 0, i32 3
  %svu_gp359 = bitcast %union.anon.4* %sv_u358 to %struct.gp**
  %265 = load %struct.gp*, %struct.gp** %svu_gp359, align 8
  %add.ptr360 = getelementptr inbounds %struct.gp, %struct.gp* %265, i64 0
  %gp_av361 = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr360, i32 0, i32 6
  store %struct.av* %263, %struct.av** %gp_av361, align 8
  %266 = load %struct.av*, %struct.av** %arg, align 8
  %267 = bitcast %struct.av* %266 to i8*
  %268 = bitcast i8* %267 to %struct.sv*
  call void @S_SvREFCNT_dec(%struct.sv* %268)
  br label %if.end362

if.end362:                                        ; preds = %if.then349, %land.lhs.true341, %if.end332
  %269 = load %struct.context*, %struct.context** %cx12, align 8
  %cx_u363 = getelementptr inbounds %struct.context, %struct.context* %269, i32 0, i32 0
  %cx_blk364 = bitcast %union.anon.16* %cx_u363 to %struct.block*
  %blk_u365 = getelementptr inbounds %struct.block, %struct.block* %cx_blk364, i32 0, i32 8
  %blku_sub366 = bitcast %union.anon.20* %blk_u365 to %struct.block_sub*
  %retop367 = getelementptr inbounds %struct.block_sub, %struct.block_sub* %blku_sub366, i32 0, i32 0
  %270 = load %struct.op*, %struct.op** %retop367, align 8
  store %struct.op* %270, %struct.op** %retop, align 8
  %271 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %si_cxstack368 = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %271, i32 0, i32 1
  %272 = load %struct.context*, %struct.context** %si_cxstack368, align 8
  %273 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %si_cxix369 = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %273, i32 0, i32 4
  %274 = load i32, i32* %si_cxix369, align 8
  %dec = add nsw i32 %274, -1
  store i32 %dec, i32* %si_cxix369, align 8
  %idxprom370 = sext i32 %274 to i64
  %arrayidx371 = getelementptr inbounds %struct.context, %struct.context* %272, i64 %idxprom370
  store %struct.context* %arrayidx371, %struct.context** %cx12, align 8
  %275 = load %struct.sv**, %struct.sv*** @PL_stack_base, align 8
  %276 = load %struct.context*, %struct.context** %cx12, align 8
  %cx_u372 = getelementptr inbounds %struct.context, %struct.context* %276, i32 0, i32 0
  %cx_blk373 = bitcast %union.anon.16* %cx_u372 to %struct.block*
  %blku_oldsp374 = getelementptr inbounds %struct.block, %struct.block* %cx_blk373, i32 0, i32 3
  %277 = load i32, i32* %blku_oldsp374, align 4
  %idx.ext375 = sext i32 %277 to i64
  %add.ptr376 = getelementptr inbounds %struct.sv*, %struct.sv** %275, i64 %idx.ext375
  store %struct.sv** %add.ptr376, %struct.sv*** %newsp, align 8
  %278 = load %struct.context*, %struct.context** %cx12, align 8
  %cx_u377 = getelementptr inbounds %struct.context, %struct.context* %278, i32 0, i32 0
  %cx_blk378 = bitcast %union.anon.16* %cx_u377 to %struct.block*
  %blku_oldcop = getelementptr inbounds %struct.block, %struct.block* %cx_blk378, i32 0, i32 4
  %279 = load %struct.cop*, %struct.cop** %blku_oldcop, align 8
  store %struct.cop* %279, %struct.cop** @PL_curcop, align 8
  %280 = load i32*, i32** @PL_markstack, align 8
  %281 = load %struct.context*, %struct.context** %cx12, align 8
  %cx_u379 = getelementptr inbounds %struct.context, %struct.context* %281, i32 0, i32 0
  %cx_blk380 = bitcast %union.anon.16* %cx_u379 to %struct.block*
  %blku_oldmarksp381 = getelementptr inbounds %struct.block, %struct.block* %cx_blk380, i32 0, i32 5
  %282 = load i32, i32* %blku_oldmarksp381, align 8
  %idx.ext382 = sext i32 %282 to i64
  %add.ptr383 = getelementptr inbounds i32, i32* %280, i64 %idx.ext382
  store i32* %add.ptr383, i32** @PL_markstack_ptr, align 8
  %283 = load %struct.context*, %struct.context** %cx12, align 8
  %cx_u384 = getelementptr inbounds %struct.context, %struct.context* %283, i32 0, i32 0
  %cx_blk385 = bitcast %union.anon.16* %cx_u384 to %struct.block*
  %blku_oldscopesp386 = getelementptr inbounds %struct.block, %struct.block* %cx_blk385, i32 0, i32 6
  %284 = load i32, i32* %blku_oldscopesp386, align 4
  store i32 %284, i32* @PL_scopestack_ix, align 4
  %285 = load %struct.context*, %struct.context** %cx12, align 8
  %cx_u387 = getelementptr inbounds %struct.context, %struct.context* %285, i32 0, i32 0
  %cx_blk388 = bitcast %union.anon.16* %cx_u387 to %struct.block*
  %blku_oldpm389 = getelementptr inbounds %struct.block, %struct.block* %cx_blk388, i32 0, i32 7
  %286 = load %struct.pmop*, %struct.pmop** %blku_oldpm389, align 8
  store %struct.pmop* %286, %struct.pmop** @PL_curpm, align 8
  %287 = load %struct.context*, %struct.context** %cx12, align 8
  %cx_u390 = getelementptr inbounds %struct.context, %struct.context* %287, i32 0, i32 0
  %cx_blk391 = bitcast %union.anon.16* %cx_u390 to %struct.block*
  %blku_gimme = getelementptr inbounds %struct.block, %struct.block* %cx_blk391, i32 0, i32 1
  %288 = load i8, i8* %blku_gimme, align 1
  %conv392 = zext i8 %288 to i32
  store i32 %conv392, i32* %gimme, align 4
  br label %do.body393

do.body393:                                       ; preds = %if.end362
  %289 = load i32*, i32** @PL_markstack_ptr, align 8
  %incdec.ptr394 = getelementptr inbounds i32, i32* %289, i32 1
  store i32* %incdec.ptr394, i32** @PL_markstack_ptr, align 8
  store i32* %incdec.ptr394, i32** %mark_stack_entry, align 8
  %290 = load i32*, i32** @PL_markstack_max, align 8
  %cmp395 = icmp eq i32* %incdec.ptr394, %290
  br i1 %cmp395, label %cond.true397, label %cond.false398

cond.true397:                                     ; preds = %do.body393
  br i1 true, label %if.then399, label %if.end401

cond.false398:                                    ; preds = %do.body393
  br i1 false, label %if.then399, label %if.end401

if.then399:                                       ; preds = %cond.false398, %cond.true397
  %call400 = call i32* @Perl_markstack_grow()
  store i32* %call400, i32** %mark_stack_entry, align 8
  br label %if.end401

if.end401:                                        ; preds = %if.then399, %cond.false398, %cond.true397
  %291 = load %struct.sv**, %struct.sv*** %mark, align 8
  %292 = load %struct.sv**, %struct.sv*** @PL_stack_base, align 8
  %sub.ptr.lhs.cast402 = ptrtoint %struct.sv** %291 to i64
  %sub.ptr.rhs.cast403 = ptrtoint %struct.sv** %292 to i64
  %sub.ptr.sub404 = sub i64 %sub.ptr.lhs.cast402, %sub.ptr.rhs.cast403
  %sub.ptr.div405 = sdiv exact i64 %sub.ptr.sub404, 8
  %conv406 = trunc i64 %sub.ptr.div405 to i32
  %293 = load i32*, i32** %mark_stack_entry, align 8
  store i32 %conv406, i32* %293, align 4
  br label %do.end407

do.end407:                                        ; preds = %if.end401
  %294 = load %struct.sv**, %struct.sv*** %sp, align 8
  store %struct.sv** %294, %struct.sv*** @PL_stack_sp, align 8
  %295 = load %struct.cv*, %struct.cv** %cv, align 8
  %sv_any408 = getelementptr inbounds %struct.cv, %struct.cv* %295, i32 0, i32 0
  %296 = load %struct.xpvcv*, %struct.xpvcv** %sv_any408, align 8
  %297 = bitcast %struct.xpvcv* %296 to i8*
  %298 = bitcast i8* %297 to %struct.xpvcv*
  %xcv_root_u409 = getelementptr inbounds %struct.xpvcv, %struct.xpvcv* %298, i32 0, i32 6
  %xcv_xsub410 = bitcast %union.anon.11* %xcv_root_u409 to void (%struct.cv*)**
  %299 = load void (%struct.cv*)*, void (%struct.cv*)** %xcv_xsub410, align 8
  %300 = load %struct.cv*, %struct.cv** %cv, align 8
  call void %299(%struct.cv* %300)
  call void @Perl_pop_scope()
  br label %_return

if.else411:                                       ; preds = %if.end240
  %301 = load %struct.cv*, %struct.cv** %cv, align 8
  %sv_any412 = getelementptr inbounds %struct.cv, %struct.cv* %301, i32 0, i32 0
  %302 = load %struct.xpvcv*, %struct.xpvcv** %sv_any412, align 8
  %303 = bitcast %struct.xpvcv* %302 to i8*
  %304 = bitcast i8* %303 to %struct.xpvcv*
  %xcv_padlist_u = getelementptr inbounds %struct.xpvcv, %struct.xpvcv* %304, i32 0, i32 9
  %xcv_padlist = bitcast %union.anon.13* %xcv_padlist_u to %struct.padlist**
  %305 = load %struct.padlist*, %struct.padlist** %xcv_padlist, align 8
  store %struct.padlist* %305, %struct.padlist** %padlist, align 8
  %306 = load %struct.cv*, %struct.cv** %cv, align 8
  %307 = load %struct.context*, %struct.context** %cx12, align 8
  %cx_u413 = getelementptr inbounds %struct.context, %struct.context* %307, i32 0, i32 0
  %cx_blk414 = bitcast %union.anon.16* %cx_u413 to %struct.block*
  %blk_u415 = getelementptr inbounds %struct.block, %struct.block* %cx_blk414, i32 0, i32 8
  %blku_sub416 = bitcast %union.anon.20* %blk_u415 to %struct.block_sub*
  %cv417 = getelementptr inbounds %struct.block_sub, %struct.block_sub* %blku_sub416, i32 0, i32 1
  store %struct.cv* %306, %struct.cv** %cv417, align 8
  %308 = load %struct.cv*, %struct.cv** %cv, align 8
  %call418 = call i32* @S_CvDEPTHp(%struct.cv* %308)
  %309 = load i32, i32* %call418, align 4
  %310 = load %struct.context*, %struct.context** %cx12, align 8
  %cx_u419 = getelementptr inbounds %struct.context, %struct.context* %310, i32 0, i32 0
  %cx_blk420 = bitcast %union.anon.16* %cx_u419 to %struct.block*
  %blk_u421 = getelementptr inbounds %struct.block, %struct.block* %cx_blk420, i32 0, i32 8
  %blku_sub422 = bitcast %union.anon.20* %blk_u421 to %struct.block_sub*
  %olddepth423 = getelementptr inbounds %struct.block_sub, %struct.block_sub* %blku_sub422, i32 0, i32 4
  store i32 %309, i32* %olddepth423, align 8
  %311 = load %struct.cv*, %struct.cv** %cv, align 8
  %call424 = call i32* @S_CvDEPTHp(%struct.cv* %311)
  %312 = load i32, i32* %call424, align 4
  %inc425 = add nsw i32 %312, 1
  store i32 %inc425, i32* %call424, align 4
  %313 = load %struct.cv*, %struct.cv** %cv, align 8
  %call426 = call i32* @S_CvDEPTHp(%struct.cv* %313)
  %314 = load i32, i32* %call426, align 4
  %cmp427 = icmp slt i32 %314, 2
  br i1 %cmp427, label %if.then429, label %if.else432

if.then429:                                       ; preds = %if.else411
  %315 = load %struct.cv*, %struct.cv** %cv, align 8
  %316 = bitcast %struct.cv* %315 to i8*
  %317 = bitcast i8* %316 to %struct.sv*
  %sv_refcnt430 = getelementptr inbounds %struct.sv, %struct.sv* %317, i32 0, i32 1
  %318 = load i32, i32* %sv_refcnt430, align 8
  %inc431 = add i32 %318, 1
  store i32 %inc431, i32* %sv_refcnt430, align 8
  br label %if.end442

if.else432:                                       ; preds = %if.else411
  %319 = load %struct.cv*, %struct.cv** %cv, align 8
  %call433 = call i32* @S_CvDEPTHp(%struct.cv* %319)
  %320 = load i32, i32* %call433, align 4
  %cmp434 = icmp eq i32 %320, 100
  br i1 %cmp434, label %land.lhs.true436, label %if.end440

land.lhs.true436:                                 ; preds = %if.else432
  %call437 = call zeroext i1 @Perl_ckwarn(i32 18)
  br i1 %call437, label %if.then439, label %if.end440

if.then439:                                       ; preds = %land.lhs.true436
  %321 = load %struct.cv*, %struct.cv** %cv, align 8
  call void @Perl_sub_crush_depth(%struct.cv* %321)
  br label %if.end440

if.end440:                                        ; preds = %if.then439, %land.lhs.true436, %if.else432
  %322 = load %struct.padlist*, %struct.padlist** %padlist, align 8
  %323 = load %struct.cv*, %struct.cv** %cv, align 8
  %call441 = call i32* @S_CvDEPTHp(%struct.cv* %323)
  %324 = load i32, i32* %call441, align 4
  call void @Perl_pad_push(%struct.padlist* %322, i32 %324)
  br label %if.end442

if.end442:                                        ; preds = %if.end440, %if.then429
  %325 = load %struct.context*, %struct.context** %cx12, align 8
  %cx_u443 = getelementptr inbounds %struct.context, %struct.context* %325, i32 0, i32 0
  %cx_blk444 = bitcast %union.anon.16* %cx_u443 to %struct.block*
  %blku_oldcop445 = getelementptr inbounds %struct.block, %struct.block* %cx_blk444, i32 0, i32 4
  %326 = load %struct.cop*, %struct.cop** %blku_oldcop445, align 8
  store %struct.cop* %326, %struct.cop** @PL_curcop, align 8
  %327 = load %struct.av*, %struct.av** @PL_comppad, align 8
  %328 = bitcast %struct.av* %327 to i8*
  %329 = bitcast i8* %328 to %struct.sv*
  %330 = bitcast %struct.sv* %329 to i8*
  call void @Perl_save_pushptr(i8* %330, i32 7)
  %331 = load %struct.padlist*, %struct.padlist** %padlist, align 8
  %xpadl_alloc = getelementptr inbounds %struct.padlist, %struct.padlist* %331, i32 0, i32 1
  %332 = load %struct.av**, %struct.av*** %xpadl_alloc, align 8
  %333 = load %struct.cv*, %struct.cv** %cv, align 8
  %call446 = call i32* @S_CvDEPTHp(%struct.cv* %333)
  %334 = load i32, i32* %call446, align 4
  %idxprom447 = sext i32 %334 to i64
  %arrayidx448 = getelementptr inbounds %struct.av*, %struct.av** %332, i64 %idxprom447
  %335 = load %struct.av*, %struct.av** %arrayidx448, align 8
  store %struct.av* %335, %struct.av** @PL_comppad, align 8
  %336 = load %struct.av*, %struct.av** @PL_comppad, align 8
  %sv_u449 = getelementptr inbounds %struct.av, %struct.av* %336, i32 0, i32 3
  %svu_array450 = bitcast %union.anon.0* %sv_u449 to %struct.sv***
  %337 = load %struct.sv**, %struct.sv*** %svu_array450, align 8
  store %struct.sv** %337, %struct.sv*** @PL_curpad, align 8
  %338 = load %struct.context*, %struct.context** %cx12, align 8
  %cx_u451 = getelementptr inbounds %struct.context, %struct.context* %338, i32 0, i32 0
  %cx_subst452 = bitcast %union.anon.16* %cx_u451 to %struct.subst*
  %sbu_type453 = getelementptr inbounds %struct.subst, %struct.subst* %cx_subst452, i32 0, i32 0
  %339 = load i8, i8* %sbu_type453, align 8
  %conv454 = zext i8 %339 to i32
  %and455 = and i32 %conv454, 32
  %cmp456 = icmp eq i32 %and455, 32
  br i1 %cmp456, label %if.then458, label %if.else491

if.then458:                                       ; preds = %if.end442
  %340 = load %struct.av*, %struct.av** @PL_comppad, align 8
  %341 = load %struct.context*, %struct.context** %cx12, align 8
  %cx_u459 = getelementptr inbounds %struct.context, %struct.context* %341, i32 0, i32 0
  %cx_blk460 = bitcast %union.anon.16* %cx_u459 to %struct.block*
  %blk_u461 = getelementptr inbounds %struct.block, %struct.block* %cx_blk460, i32 0, i32 8
  %blku_sub462 = bitcast %union.anon.20* %blk_u461 to %struct.block_sub*
  %oldcomppad = getelementptr inbounds %struct.block_sub, %struct.block_sub* %blku_sub462, i32 0, i32 5
  store %struct.av* %340, %struct.av** %oldcomppad, align 8
  %342 = load %struct.av*, %struct.av** %arg, align 8
  %tobool463 = icmp ne %struct.av* %342, null
  br i1 %tobool463, label %if.then464, label %if.end472

if.then464:                                       ; preds = %if.then458
  %343 = load %struct.sv**, %struct.sv*** @PL_curpad, align 8
  %arrayidx465 = getelementptr inbounds %struct.sv*, %struct.sv** %343, i64 0
  %344 = load %struct.sv*, %struct.sv** %arrayidx465, align 8
  %345 = bitcast %struct.sv* %344 to i8*
  %346 = bitcast i8* %345 to %struct.sv*
  call void @S_SvREFCNT_dec(%struct.sv* %346)
  %347 = load %struct.av*, %struct.av** %arg, align 8
  %348 = load %struct.context*, %struct.context** %cx12, align 8
  %cx_u466 = getelementptr inbounds %struct.context, %struct.context* %348, i32 0, i32 0
  %cx_blk467 = bitcast %union.anon.16* %cx_u466 to %struct.block*
  %blk_u468 = getelementptr inbounds %struct.block, %struct.block* %cx_blk467, i32 0, i32 8
  %blku_sub469 = bitcast %union.anon.20* %blk_u468 to %struct.block_sub*
  %argarray470 = getelementptr inbounds %struct.block_sub, %struct.block_sub* %blku_sub469, i32 0, i32 3
  store %struct.av* %347, %struct.av** %argarray470, align 8
  %349 = bitcast %struct.av* %347 to %struct.sv*
  %350 = load %struct.sv**, %struct.sv*** @PL_curpad, align 8
  %arrayidx471 = getelementptr inbounds %struct.sv*, %struct.sv** %350, i64 0
  store %struct.sv* %349, %struct.sv** %arrayidx471, align 8
  br label %if.end472

if.end472:                                        ; preds = %if.then464, %if.then458
  %351 = load %struct.av*, %struct.av** %arg, align 8
  %352 = load %struct.gv*, %struct.gv** @PL_defgv, align 8
  %sv_u473 = getelementptr inbounds %struct.gv, %struct.gv* %352, i32 0, i32 3
  %svu_gp474 = bitcast %union.anon.4* %sv_u473 to %struct.gp**
  %353 = load %struct.gp*, %struct.gp** %svu_gp474, align 8
  %add.ptr475 = getelementptr inbounds %struct.gp, %struct.gp* %353, i64 0
  %gp_av476 = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr475, i32 0, i32 6
  %354 = load %struct.av*, %struct.av** %gp_av476, align 8
  %cmp477 = icmp ne %struct.av* %351, %354
  br i1 %cmp477, label %if.then479, label %if.end490

if.then479:                                       ; preds = %if.end472
  %355 = load %struct.gv*, %struct.gv** @PL_defgv, align 8
  %sv_u481 = getelementptr inbounds %struct.gv, %struct.gv* %355, i32 0, i32 3
  %svu_gp482 = bitcast %union.anon.4* %sv_u481 to %struct.gp**
  %356 = load %struct.gp*, %struct.gp** %svu_gp482, align 8
  %add.ptr483 = getelementptr inbounds %struct.gp, %struct.gp* %356, i64 0
  %gp_av484 = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr483, i32 0, i32 6
  %357 = load %struct.av*, %struct.av** %gp_av484, align 8
  store %struct.av* %357, %struct.av** %av480, align 8
  %358 = load %struct.av*, %struct.av** %arg, align 8
  %359 = bitcast %struct.av* %358 to i8*
  %360 = bitcast i8* %359 to %struct.sv*
  %call485 = call %struct.sv* @S_SvREFCNT_inc(%struct.sv* %360)
  %361 = bitcast %struct.sv* %call485 to %struct.av*
  %362 = load %struct.gv*, %struct.gv** @PL_defgv, align 8
  %sv_u486 = getelementptr inbounds %struct.gv, %struct.gv* %362, i32 0, i32 3
  %svu_gp487 = bitcast %union.anon.4* %sv_u486 to %struct.gp**
  %363 = load %struct.gp*, %struct.gp** %svu_gp487, align 8
  %add.ptr488 = getelementptr inbounds %struct.gp, %struct.gp* %363, i64 0
  %gp_av489 = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr488, i32 0, i32 6
  store %struct.av* %361, %struct.av** %gp_av489, align 8
  %364 = load %struct.av*, %struct.av** %av480, align 8
  %365 = bitcast %struct.av* %364 to i8*
  %366 = bitcast i8* %365 to %struct.sv*
  call void @S_SvREFCNT_dec(%struct.sv* %366)
  br label %if.end490

if.end490:                                        ; preds = %if.then479, %if.end472
  br label %if.end492

if.else491:                                       ; preds = %if.end442
  %367 = load %struct.av*, %struct.av** %arg, align 8
  %368 = bitcast %struct.av* %367 to i8*
  %369 = bitcast i8* %368 to %struct.sv*
  call void @S_SvREFCNT_dec(%struct.sv* %369)
  br label %if.end492

if.end492:                                        ; preds = %if.else491, %if.end490
  %370 = load i32, i32* @PL_perldb, align 4
  %and493 = and i32 %370, 1
  %tobool494 = icmp ne i32 %and493, 0
  br i1 %tobool494, label %if.then495, label %if.end522

if.then495:                                       ; preds = %if.end492
  %371 = load %struct.cv*, %struct.cv** %cv, align 8
  call void @Perl_get_db_sub(%struct.sv** null, %struct.cv* %371)
  %372 = load i32, i32* @PL_perldb, align 4
  %and496 = and i32 %372, 128
  %tobool497 = icmp ne i32 %and496, 0
  br i1 %tobool497, label %if.then498, label %if.end521

if.then498:                                       ; preds = %if.then495
  %call499 = call %struct.cv* @Perl_get_cvn_flags(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.41, i64 0, i64 0), i64 8, i32 0)
  store %struct.cv* %call499, %struct.cv** %gotocv, align 8
  %373 = load %struct.cv*, %struct.cv** %gotocv, align 8
  %tobool500 = icmp ne %struct.cv* %373, null
  br i1 %tobool500, label %if.then501, label %if.end520

if.then501:                                       ; preds = %if.then498
  br label %do.body502

do.body502:                                       ; preds = %if.then501
  %374 = load i32*, i32** @PL_markstack_ptr, align 8
  %incdec.ptr504 = getelementptr inbounds i32, i32* %374, i32 1
  store i32* %incdec.ptr504, i32** @PL_markstack_ptr, align 8
  store i32* %incdec.ptr504, i32** %mark_stack_entry503, align 8
  %375 = load i32*, i32** @PL_markstack_max, align 8
  %cmp505 = icmp eq i32* %incdec.ptr504, %375
  br i1 %cmp505, label %cond.true507, label %cond.false508

cond.true507:                                     ; preds = %do.body502
  br i1 true, label %if.then509, label %if.end511

cond.false508:                                    ; preds = %do.body502
  br i1 false, label %if.then509, label %if.end511

if.then509:                                       ; preds = %cond.false508, %cond.true507
  %call510 = call i32* @Perl_markstack_grow()
  store i32* %call510, i32** %mark_stack_entry503, align 8
  br label %if.end511

if.end511:                                        ; preds = %if.then509, %cond.false508, %cond.true507
  %376 = load %struct.sv**, %struct.sv*** @PL_stack_sp, align 8
  %377 = load %struct.sv**, %struct.sv*** @PL_stack_base, align 8
  %sub.ptr.lhs.cast512 = ptrtoint %struct.sv** %376 to i64
  %sub.ptr.rhs.cast513 = ptrtoint %struct.sv** %377 to i64
  %sub.ptr.sub514 = sub i64 %sub.ptr.lhs.cast512, %sub.ptr.rhs.cast513
  %sub.ptr.div515 = sdiv exact i64 %sub.ptr.sub514, 8
  %conv516 = trunc i64 %sub.ptr.div515 to i32
  %378 = load i32*, i32** %mark_stack_entry503, align 8
  store i32 %conv516, i32* %378, align 4
  br label %do.end517

do.end517:                                        ; preds = %if.end511
  %379 = load %struct.cv*, %struct.cv** %gotocv, align 8
  %380 = bitcast %struct.cv* %379 to i8*
  %381 = bitcast i8* %380 to %struct.sv*
  %call518 = call i32 @Perl_call_sv(%struct.sv* %381, i32 66)
  %382 = load %struct.sv**, %struct.sv*** @PL_stack_sp, align 8
  %incdec.ptr519 = getelementptr inbounds %struct.sv*, %struct.sv** %382, i32 -1
  store %struct.sv** %incdec.ptr519, %struct.sv*** @PL_stack_sp, align 8
  br label %if.end520

if.end520:                                        ; preds = %do.end517, %if.then498
  br label %if.end521

if.end521:                                        ; preds = %if.end520, %if.then495
  br label %if.end522

if.end522:                                        ; preds = %if.end521, %if.end492
  %383 = load %struct.cv*, %struct.cv** %cv, align 8
  %sv_any523 = getelementptr inbounds %struct.cv, %struct.cv* %383, i32 0, i32 0
  %384 = load %struct.xpvcv*, %struct.xpvcv** %sv_any523, align 8
  %385 = bitcast %struct.xpvcv* %384 to i8*
  %386 = bitcast i8* %385 to %struct.xpvcv*
  %xcv_start_u = getelementptr inbounds %struct.xpvcv, %struct.xpvcv* %386, i32 0, i32 5
  %xcv_start = bitcast %union.anon.10* %xcv_start_u to %struct.op**
  %387 = load %struct.op*, %struct.op** %xcv_start, align 8
  store %struct.op* %387, %struct.op** %retop, align 8
  br label %putback_return

if.else524:                                       ; preds = %land.lhs.true, %land.end
  %388 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_flags525 = getelementptr inbounds %struct.sv, %struct.sv* %388, i32 0, i32 2
  %389 = load i32, i32* %sv_flags525, align 4
  %and526 = and i32 %389, 2098176
  %cmp527 = icmp eq i32 %and526, 1024
  br i1 %cmp527, label %cond.true529, label %cond.false533

cond.true529:                                     ; preds = %if.else524
  %390 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_any530 = getelementptr inbounds %struct.sv, %struct.sv* %390, i32 0, i32 0
  %391 = load i8*, i8** %sv_any530, align 8
  %392 = bitcast i8* %391 to %struct.xpv*
  %xpv_cur = getelementptr inbounds %struct.xpv, %struct.xpv* %392, i32 0, i32 2
  %393 = load i64, i64* %xpv_cur, align 8
  store i64 %393, i64* %label_len, align 8
  %394 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_u531 = getelementptr inbounds %struct.sv, %struct.sv* %394, i32 0, i32 3
  %svu_pv = bitcast %union.anon* %sv_u531 to i8**
  %395 = load i8*, i8** %svu_pv, align 8
  %add.ptr532 = getelementptr inbounds i8, i8* %395, i64 0
  br label %cond.end535

cond.false533:                                    ; preds = %if.else524
  %396 = load %struct.sv*, %struct.sv** %sv, align 8
  %call534 = call i8* @Perl_sv_2pv_flags(%struct.sv* %396, i64* %label_len, i32 32)
  br label %cond.end535

cond.end535:                                      ; preds = %cond.false533, %cond.true529
  %cond536 = phi i8* [ %add.ptr532, %cond.true529 ], [ %call534, %cond.false533 ]
  store i8* %cond536, i8** %label, align 8
  %397 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_flags537 = getelementptr inbounds %struct.sv, %struct.sv* %397, i32 0, i32 2
  %398 = load i32, i32* %sv_flags537, align 4
  %and538 = and i32 %398, 536870912
  store i32 %and538, i32* %label_flags, align 4
  br label %if.end539

if.end539:                                        ; preds = %cond.end535
  br label %if.end552

if.else540:                                       ; preds = %entry
  %399 = load %struct.op*, %struct.op** @PL_op, align 8
  %op_flags541 = getelementptr inbounds %struct.op, %struct.op* %399, i32 0, i32 5
  %400 = load i8, i8* %op_flags541, align 2
  %conv542 = zext i8 %400 to i32
  %and543 = and i32 %conv542, 128
  %tobool544 = icmp ne i32 %and543, 0
  br i1 %tobool544, label %if.end551, label %if.then545

if.then545:                                       ; preds = %if.else540
  %401 = load %struct.op*, %struct.op** @PL_op, align 8
  %402 = bitcast %struct.op* %401 to %struct.pvop*
  %op_pv = getelementptr inbounds %struct.pvop, %struct.pvop* %402, i32 0, i32 7
  %403 = load i8*, i8** %op_pv, align 8
  store i8* %403, i8** %label, align 8
  %404 = load %struct.op*, %struct.op** @PL_op, align 8
  %405 = bitcast %struct.op* %404 to %struct.pvop*
  %op_private = getelementptr inbounds %struct.pvop, %struct.pvop* %405, i32 0, i32 6
  %406 = load i8, i8* %op_private, align 1
  %conv546 = zext i8 %406 to i32
  %and547 = and i32 %conv546, 128
  %tobool548 = icmp ne i32 %and547, 0
  %407 = zext i1 %tobool548 to i64
  %cond549 = select i1 %tobool548, i32 536870912, i32 0
  store i32 %cond549, i32* %label_flags, align 4
  %408 = load i8*, i8** %label, align 8
  %call550 = call i64 @strlen(i8* %408) #8
  store i64 %call550, i64* %label_len, align 8
  br label %if.end551

if.end551:                                        ; preds = %if.then545, %if.else540
  br label %if.end552

if.end552:                                        ; preds = %if.end551, %if.end539
  %409 = load i8, i8* %do_dump, align 1
  %tobool553 = trunc i8 %409 to i1
  br i1 %tobool553, label %if.end559, label %lor.lhs.false555

lor.lhs.false555:                                 ; preds = %if.end552
  %410 = load i64, i64* %label_len, align 8
  %tobool556 = icmp ne i64 %410, 0
  br i1 %tobool556, label %if.end559, label %if.then557

if.then557:                                       ; preds = %lor.lhs.false555
  %call558 = call %struct.op* (i8*, ...) @Perl_die(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.42, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.34, i32 0, i32 0))
  store %struct.op* %call558, %struct.op** %retval, align 8
  br label %return

if.end559:                                        ; preds = %lor.lhs.false555, %if.end552
  %411 = load i32, i32* @PL_sig_pending, align 4
  %tobool560 = icmp ne i32 %411, 0
  br i1 %tobool560, label %cond.true561, label %cond.false562

cond.true561:                                     ; preds = %if.end559
  br i1 true, label %if.then563, label %if.end564

cond.false562:                                    ; preds = %if.end559
  br i1 false, label %if.then563, label %if.end564

if.then563:                                       ; preds = %cond.false562, %cond.true561
  %412 = load void ()*, void ()** @PL_signalhook, align 8
  call void %412()
  br label %if.end564

if.end564:                                        ; preds = %if.then563, %cond.false562, %cond.true561
  %413 = load i64, i64* %label_len, align 8
  %tobool565 = icmp ne i64 %413, 0
  br i1 %tobool565, label %if.then566, label %if.end830

if.then566:                                       ; preds = %if.end564
  store %struct.op* null, %struct.op** %gotoprobe, align 8
  store i8 0, i8* %leaving_eval, align 1
  store i8 0, i8* %in_block, align 1
  store %struct.context* null, %struct.context** %last_eval_cx, align 8
  store %struct.op* null, %struct.op** @PL_lastgotoprobe, align 8
  %arraydecay567 = getelementptr inbounds [64 x %struct.op*], [64 x %struct.op*]* %enterops, i64 0, i64 0
  store %struct.op* null, %struct.op** %arraydecay567, align 16
  %414 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %si_cxix568 = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %414, i32 0, i32 4
  %415 = load i32, i32* %si_cxix568, align 8
  store i32 %415, i32* %ix, align 4
  br label %for.cond569

for.cond569:                                      ; preds = %for.inc685, %if.then566
  %416 = load i32, i32* %ix, align 4
  %cmp570 = icmp sge i32 %416, 0
  br i1 %cmp570, label %for.body572, label %for.end687

for.body572:                                      ; preds = %for.cond569
  %417 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %si_cxstack573 = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %417, i32 0, i32 1
  %418 = load %struct.context*, %struct.context** %si_cxstack573, align 8
  %419 = load i32, i32* %ix, align 4
  %idxprom574 = sext i32 %419 to i64
  %arrayidx575 = getelementptr inbounds %struct.context, %struct.context* %418, i64 %idxprom574
  store %struct.context* %arrayidx575, %struct.context** %cx, align 8
  %420 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u576 = getelementptr inbounds %struct.context, %struct.context* %420, i32 0, i32 0
  %cx_subst577 = bitcast %union.anon.16* %cx_u576 to %struct.subst*
  %sbu_type578 = getelementptr inbounds %struct.subst, %struct.subst* %cx_subst577, i32 0, i32 0
  %421 = load i8, i8* %sbu_type578, align 8
  %conv579 = zext i8 %421 to i32
  %and580 = and i32 %conv579, 15
  switch i32 %and580, label %sw.default [
    i32 10, label %sw.bb
    i32 7, label %sw.bb598
    i32 6, label %sw.bb598
    i32 4, label %sw.bb598
    i32 5, label %sw.bb598
    i32 3, label %sw.bb598
    i32 1, label %sw.bb598
    i32 11, label %sw.bb603
    i32 2, label %sw.bb604
    i32 8, label %sw.bb614
    i32 9, label %sw.bb640
    i32 0, label %sw.bb640
  ]

sw.bb:                                            ; preds = %for.body572
  store i8 1, i8* %leaving_eval, align 1
  %422 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u581 = getelementptr inbounds %struct.context, %struct.context* %422, i32 0, i32 0
  %cx_subst582 = bitcast %union.anon.16* %cx_u581 to %struct.subst*
  %sbu_type583 = getelementptr inbounds %struct.subst, %struct.subst* %cx_subst582, i32 0, i32 0
  %423 = load i8, i8* %sbu_type583, align 8
  %conv584 = zext i8 %423 to i32
  %and585 = and i32 %conv584, 79
  %cmp586 = icmp eq i32 %and585, 74
  br i1 %cmp586, label %if.end597, label %if.then588

if.then588:                                       ; preds = %sw.bb
  %424 = load %struct.context*, %struct.context** %last_eval_cx, align 8
  %tobool589 = icmp ne %struct.context* %424, null
  br i1 %tobool589, label %cond.true590, label %cond.false594

cond.true590:                                     ; preds = %if.then588
  %425 = load %struct.context*, %struct.context** %last_eval_cx, align 8
  %cx_u591 = getelementptr inbounds %struct.context, %struct.context* %425, i32 0, i32 0
  %cx_blk592 = bitcast %union.anon.16* %cx_u591 to %struct.block*
  %blk_u593 = getelementptr inbounds %struct.block, %struct.block* %cx_blk592, i32 0, i32 8
  %blku_eval = bitcast %union.anon.20* %blk_u593 to %struct.block_eval*
  %old_eval_root = getelementptr inbounds %struct.block_eval, %struct.block_eval* %blku_eval, i32 0, i32 2
  %426 = load %struct.op*, %struct.op** %old_eval_root, align 8
  br label %cond.end595

cond.false594:                                    ; preds = %if.then588
  %427 = load %struct.op*, %struct.op** @PL_eval_root, align 8
  br label %cond.end595

cond.end595:                                      ; preds = %cond.false594, %cond.true590
  %cond596 = phi %struct.op* [ %426, %cond.true590 ], [ %427, %cond.false594 ]
  store %struct.op* %cond596, %struct.op** %gotoprobe, align 8
  %428 = load %struct.context*, %struct.context** %cx, align 8
  store %struct.context* %428, %struct.context** %last_eval_cx, align 8
  br label %sw.epilog

if.end597:                                        ; preds = %sw.bb
  br label %sw.bb598

sw.bb598:                                         ; preds = %for.body572, %for.body572, %for.body572, %for.body572, %for.body572, %for.body572, %if.end597
  %429 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u599 = getelementptr inbounds %struct.context, %struct.context* %429, i32 0, i32 0
  %cx_blk600 = bitcast %union.anon.16* %cx_u599 to %struct.block*
  %blku_oldcop601 = getelementptr inbounds %struct.block, %struct.block* %cx_blk600, i32 0, i32 4
  %430 = load %struct.cop*, %struct.cop** %blku_oldcop601, align 8
  %op_sibling = getelementptr inbounds %struct.cop, %struct.cop* %430, i32 0, i32 1
  %431 = load %struct.op*, %struct.op** %op_sibling, align 8
  %add.ptr602 = getelementptr inbounds %struct.op, %struct.op* %431, i64 0
  store %struct.op* %add.ptr602, %struct.op** %gotoprobe, align 8
  br label %sw.epilog

sw.bb603:                                         ; preds = %for.body572
  br label %for.inc685

sw.bb604:                                         ; preds = %for.body572
  %432 = load i32, i32* %ix, align 4
  %tobool605 = icmp ne i32 %432, 0
  br i1 %tobool605, label %if.then606, label %if.else612

if.then606:                                       ; preds = %sw.bb604
  %433 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u607 = getelementptr inbounds %struct.context, %struct.context* %433, i32 0, i32 0
  %cx_blk608 = bitcast %union.anon.16* %cx_u607 to %struct.block*
  %blku_oldcop609 = getelementptr inbounds %struct.block, %struct.block* %cx_blk608, i32 0, i32 4
  %434 = load %struct.cop*, %struct.cop** %blku_oldcop609, align 8
  %op_sibling610 = getelementptr inbounds %struct.cop, %struct.cop* %434, i32 0, i32 1
  %435 = load %struct.op*, %struct.op** %op_sibling610, align 8
  %add.ptr611 = getelementptr inbounds %struct.op, %struct.op* %435, i64 0
  store %struct.op* %add.ptr611, %struct.op** %gotoprobe, align 8
  store i8 1, i8* %in_block, align 1
  br label %if.end613

if.else612:                                       ; preds = %sw.bb604
  %436 = load %struct.op*, %struct.op** @PL_main_root, align 8
  store %struct.op* %436, %struct.op** %gotoprobe, align 8
  br label %if.end613

if.end613:                                        ; preds = %if.else612, %if.then606
  br label %sw.epilog

sw.bb614:                                         ; preds = %for.body572
  %437 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u615 = getelementptr inbounds %struct.context, %struct.context* %437, i32 0, i32 0
  %cx_blk616 = bitcast %union.anon.16* %cx_u615 to %struct.block*
  %blk_u617 = getelementptr inbounds %struct.block, %struct.block* %cx_blk616, i32 0, i32 8
  %blku_sub618 = bitcast %union.anon.20* %blk_u617 to %struct.block_sub*
  %cv619 = getelementptr inbounds %struct.block_sub, %struct.block_sub* %blku_sub618, i32 0, i32 1
  %438 = load %struct.cv*, %struct.cv** %cv619, align 8
  %call620 = call i32* @S_CvDEPTHp(%struct.cv* %438)
  %439 = load i32, i32* %call620, align 4
  %tobool621 = icmp ne i32 %439, 0
  br i1 %tobool621, label %land.lhs.true622, label %if.end639

land.lhs.true622:                                 ; preds = %sw.bb614
  %440 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u623 = getelementptr inbounds %struct.context, %struct.context* %440, i32 0, i32 0
  %cx_subst624 = bitcast %union.anon.16* %cx_u623 to %struct.subst*
  %sbu_type625 = getelementptr inbounds %struct.subst, %struct.subst* %cx_subst624, i32 0, i32 0
  %441 = load i8, i8* %sbu_type625, align 8
  %conv626 = zext i8 %441 to i32
  %and627 = and i32 %conv626, 16
  %cmp628 = icmp eq i32 %and627, 16
  br i1 %cmp628, label %if.end639, label %if.then630

if.then630:                                       ; preds = %land.lhs.true622
  %442 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u631 = getelementptr inbounds %struct.context, %struct.context* %442, i32 0, i32 0
  %cx_blk632 = bitcast %union.anon.16* %cx_u631 to %struct.block*
  %blk_u633 = getelementptr inbounds %struct.block, %struct.block* %cx_blk632, i32 0, i32 8
  %blku_sub634 = bitcast %union.anon.20* %blk_u633 to %struct.block_sub*
  %cv635 = getelementptr inbounds %struct.block_sub, %struct.block_sub* %blku_sub634, i32 0, i32 1
  %443 = load %struct.cv*, %struct.cv** %cv635, align 8
  %sv_any636 = getelementptr inbounds %struct.cv, %struct.cv* %443, i32 0, i32 0
  %444 = load %struct.xpvcv*, %struct.xpvcv** %sv_any636, align 8
  %445 = bitcast %struct.xpvcv* %444 to i8*
  %446 = bitcast i8* %445 to %struct.xpvcv*
  %xcv_root_u637 = getelementptr inbounds %struct.xpvcv, %struct.xpvcv* %446, i32 0, i32 6
  %xcv_root638 = bitcast %union.anon.11* %xcv_root_u637 to %struct.op**
  %447 = load %struct.op*, %struct.op** %xcv_root638, align 8
  store %struct.op* %447, %struct.op** %gotoprobe, align 8
  br label %sw.epilog

if.end639:                                        ; preds = %land.lhs.true622, %sw.bb614
  br label %sw.bb640

sw.bb640:                                         ; preds = %for.body572, %for.body572, %if.end639
  %call641 = call %struct.op* (i8*, ...) @Perl_die(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.43, i64 0, i64 0))
  store %struct.op* %call641, %struct.op** %retval, align 8
  br label %return

sw.default:                                       ; preds = %for.body572
  %448 = load i32, i32* %ix, align 4
  %tobool642 = icmp ne i32 %448, 0
  br i1 %tobool642, label %if.then643, label %if.end651

if.then643:                                       ; preds = %sw.default
  %449 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u644 = getelementptr inbounds %struct.context, %struct.context* %449, i32 0, i32 0
  %cx_subst645 = bitcast %union.anon.16* %cx_u644 to %struct.subst*
  %sbu_type646 = getelementptr inbounds %struct.subst, %struct.subst* %cx_subst645, i32 0, i32 0
  %450 = load i8, i8* %sbu_type646, align 8
  %conv647 = zext i8 %450 to i32
  %and648 = and i32 %conv647, 15
  %451 = load i32, i32* %ix, align 4
  %conv649 = sext i32 %451 to i64
  %call650 = call %struct.op* (i8*, ...) @Perl_die(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.44, i64 0, i64 0), i32 %and648, i64 %conv649)
  store %struct.op* %call650, %struct.op** %retval, align 8
  br label %return

if.end651:                                        ; preds = %sw.default
  %452 = load %struct.op*, %struct.op** @PL_main_root, align 8
  store %struct.op* %452, %struct.op** %gotoprobe, align 8
  br label %sw.epilog

sw.epilog:                                        ; preds = %if.end651, %if.then630, %if.end613, %sw.bb598, %cond.end595
  %453 = load %struct.op*, %struct.op** %gotoprobe, align 8
  %tobool652 = icmp ne %struct.op* %453, null
  br i1 %tobool652, label %if.then653, label %if.end684

if.then653:                                       ; preds = %sw.epilog
  %454 = load %struct.op*, %struct.op** %gotoprobe, align 8
  %455 = load i8*, i8** %label, align 8
  %456 = load i64, i64* %label_len, align 8
  %457 = load i32, i32* %label_flags, align 4
  %arraydecay654 = getelementptr inbounds [64 x %struct.op*], [64 x %struct.op*]* %enterops, i64 0, i64 0
  %arraydecay655 = getelementptr inbounds [64 x %struct.op*], [64 x %struct.op*]* %enterops, i64 0, i64 0
  %add.ptr656 = getelementptr inbounds %struct.op*, %struct.op** %arraydecay655, i64 64
  %call657 = call %struct.op* @S_dofindlabel(%struct.op* %454, i8* %455, i64 %456, i32 %457, %struct.op** %arraydecay654, %struct.op** %add.ptr656)
  store %struct.op* %call657, %struct.op** %retop, align 8
  %458 = load %struct.op*, %struct.op** %retop, align 8
  %tobool658 = icmp ne %struct.op* %458, null
  br i1 %tobool658, label %if.then659, label %if.end660

if.then659:                                       ; preds = %if.then653
  br label %for.end687

if.end660:                                        ; preds = %if.then653
  %459 = load %struct.op*, %struct.op** %gotoprobe, align 8
  %op_sibling661 = getelementptr inbounds %struct.op, %struct.op* %459, i32 0, i32 1
  %460 = load %struct.op*, %struct.op** %op_sibling661, align 8
  %add.ptr662 = getelementptr inbounds %struct.op, %struct.op* %460, i64 0
  store %struct.op* %add.ptr662, %struct.op** %sibl1, align 8
  %tobool663 = icmp ne %struct.op* %add.ptr662, null
  br i1 %tobool663, label %land.lhs.true664, label %if.end683

land.lhs.true664:                                 ; preds = %if.end660
  %461 = load %struct.op*, %struct.op** %sibl1, align 8
  %op_type665 = getelementptr inbounds %struct.op, %struct.op* %461, i32 0, i32 4
  %bf.load666 = load i16, i16* %op_type665, align 8
  %bf.clear667 = and i16 %bf.load666, 511
  %bf.cast668 = zext i16 %bf.clear667 to i32
  %cmp669 = icmp eq i32 %bf.cast668, 195
  br i1 %cmp669, label %land.lhs.true671, label %if.end683

land.lhs.true671:                                 ; preds = %land.lhs.true664
  %462 = load %struct.op*, %struct.op** %sibl1, align 8
  %op_sibling672 = getelementptr inbounds %struct.op, %struct.op* %462, i32 0, i32 1
  %463 = load %struct.op*, %struct.op** %op_sibling672, align 8
  %add.ptr673 = getelementptr inbounds %struct.op, %struct.op* %463, i64 0
  store %struct.op* %add.ptr673, %struct.op** %sibl2, align 8
  %tobool674 = icmp ne %struct.op* %add.ptr673, null
  br i1 %tobool674, label %if.then675, label %if.end683

if.then675:                                       ; preds = %land.lhs.true671
  %464 = load %struct.op*, %struct.op** %sibl2, align 8
  %465 = load i8*, i8** %label, align 8
  %466 = load i64, i64* %label_len, align 8
  %467 = load i32, i32* %label_flags, align 4
  %arraydecay676 = getelementptr inbounds [64 x %struct.op*], [64 x %struct.op*]* %enterops, i64 0, i64 0
  %arraydecay677 = getelementptr inbounds [64 x %struct.op*], [64 x %struct.op*]* %enterops, i64 0, i64 0
  %add.ptr678 = getelementptr inbounds %struct.op*, %struct.op** %arraydecay677, i64 64
  %call679 = call %struct.op* @S_dofindlabel(%struct.op* %464, i8* %465, i64 %466, i32 %467, %struct.op** %arraydecay676, %struct.op** %add.ptr678)
  store %struct.op* %call679, %struct.op** %retop, align 8
  %468 = load %struct.op*, %struct.op** %retop, align 8
  %tobool680 = icmp ne %struct.op* %468, null
  br i1 %tobool680, label %if.then681, label %if.end682

if.then681:                                       ; preds = %if.then675
  br label %for.end687

if.end682:                                        ; preds = %if.then675
  br label %if.end683

if.end683:                                        ; preds = %if.end682, %land.lhs.true671, %land.lhs.true664, %if.end660
  br label %if.end684

if.end684:                                        ; preds = %if.end683, %sw.epilog
  %469 = load %struct.op*, %struct.op** %gotoprobe, align 8
  store %struct.op* %469, %struct.op** @PL_lastgotoprobe, align 8
  br label %for.inc685

for.inc685:                                       ; preds = %if.end684, %sw.bb603
  %470 = load i32, i32* %ix, align 4
  %dec686 = add nsw i32 %470, -1
  store i32 %dec686, i32* %ix, align 4
  br label %for.cond569

for.end687:                                       ; preds = %if.then681, %if.then659, %for.cond569
  %471 = load %struct.op*, %struct.op** %retop, align 8
  %tobool688 = icmp ne %struct.op* %471, null
  br i1 %tobool688, label %if.end693, label %if.then689

if.then689:                                       ; preds = %for.end687
  %472 = load i32, i32* %label_flags, align 4
  %tobool690 = icmp ne i32 %472, 0
  %473 = zext i1 %tobool690 to i64
  %cond691 = select i1 %tobool690, i32 1, i32 0
  %474 = load i64, i64* %label_len, align 8
  %475 = load i8*, i8** %label, align 8
  %call692 = call %struct.op* (i8*, ...) @Perl_die(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.45, i64 0, i64 0), i32 %cond691, i64 %474, i8* %475)
  store %struct.op* %call692, %struct.op** %retval, align 8
  br label %return

if.end693:                                        ; preds = %for.end687
  %476 = load i8, i8* %leaving_eval, align 1
  %tobool694 = trunc i8 %476 to i1
  br i1 %tobool694, label %land.lhs.true696, label %if.end722

land.lhs.true696:                                 ; preds = %if.end693
  %arraydecay697 = getelementptr inbounds [64 x %struct.op*], [64 x %struct.op*]* %enterops, i64 0, i64 0
  %477 = load %struct.op*, %struct.op** %arraydecay697, align 16
  %tobool698 = icmp ne %struct.op* %477, null
  br i1 %tobool698, label %land.lhs.true699, label %if.end722

land.lhs.true699:                                 ; preds = %land.lhs.true696
  %arrayidx700 = getelementptr inbounds [64 x %struct.op*], [64 x %struct.op*]* %enterops, i64 0, i64 1
  %478 = load %struct.op*, %struct.op** %arrayidx700, align 8
  %tobool701 = icmp ne %struct.op* %478, null
  br i1 %tobool701, label %if.then702, label %if.end722

if.then702:                                       ; preds = %land.lhs.true699
  store i32 1, i32* %i, align 4
  br label %for.cond703

for.cond703:                                      ; preds = %for.inc719, %if.then702
  %479 = load i32, i32* %i, align 4
  %idxprom704 = sext i32 %479 to i64
  %arrayidx705 = getelementptr inbounds [64 x %struct.op*], [64 x %struct.op*]* %enterops, i64 0, i64 %idxprom704
  %480 = load %struct.op*, %struct.op** %arrayidx705, align 8
  %tobool706 = icmp ne %struct.op* %480, null
  br i1 %tobool706, label %for.body707, label %for.end721

for.body707:                                      ; preds = %for.cond703
  %481 = load i32, i32* %i, align 4
  %idxprom708 = sext i32 %481 to i64
  %arrayidx709 = getelementptr inbounds [64 x %struct.op*], [64 x %struct.op*]* %enterops, i64 0, i64 %idxprom708
  %482 = load %struct.op*, %struct.op** %arrayidx709, align 8
  %op_type710 = getelementptr inbounds %struct.op, %struct.op* %482, i32 0, i32 4
  %bf.load711 = load i16, i16* %op_type710, align 8
  %bf.clear712 = and i16 %bf.load711, 511
  %bf.cast713 = zext i16 %bf.clear712 to i32
  %cmp714 = icmp eq i32 %bf.cast713, 199
  br i1 %cmp714, label %if.then716, label %if.end718

if.then716:                                       ; preds = %for.body707
  %call717 = call %struct.op* (i8*, ...) @Perl_die(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.46, i64 0, i64 0))
  store %struct.op* %call717, %struct.op** %retval, align 8
  br label %return

if.end718:                                        ; preds = %for.body707
  br label %for.inc719

for.inc719:                                       ; preds = %if.end718
  %483 = load i32, i32* %i, align 4
  %inc720 = add nsw i32 %483, 1
  store i32 %inc720, i32* %i, align 4
  br label %for.cond703

for.end721:                                       ; preds = %for.cond703
  br label %if.end722

if.end722:                                        ; preds = %for.end721, %land.lhs.true699, %land.lhs.true696, %if.end693
  %arraydecay723 = getelementptr inbounds [64 x %struct.op*], [64 x %struct.op*]* %enterops, i64 0, i64 0
  %484 = load %struct.op*, %struct.op** %arraydecay723, align 16
  %tobool724 = icmp ne %struct.op* %484, null
  br i1 %tobool724, label %land.lhs.true725, label %if.end748

land.lhs.true725:                                 ; preds = %if.end722
  %arrayidx726 = getelementptr inbounds [64 x %struct.op*], [64 x %struct.op*]* %enterops, i64 0, i64 1
  %485 = load %struct.op*, %struct.op** %arrayidx726, align 8
  %tobool727 = icmp ne %struct.op* %485, null
  br i1 %tobool727, label %if.then728, label %if.end748

if.then728:                                       ; preds = %land.lhs.true725
  %arrayidx730 = getelementptr inbounds [64 x %struct.op*], [64 x %struct.op*]* %enterops, i64 0, i64 1
  %486 = load %struct.op*, %struct.op** %arrayidx730, align 8
  %op_type731 = getelementptr inbounds %struct.op, %struct.op* %486, i32 0, i32 4
  %bf.load732 = load i16, i16* %op_type731, align 8
  %bf.clear733 = and i16 %bf.load732, 511
  %bf.cast734 = zext i16 %bf.clear733 to i32
  %cmp735 = icmp eq i32 %bf.cast734, 196
  br i1 %cmp735, label %land.rhs737, label %land.end740

land.rhs737:                                      ; preds = %if.then728
  %487 = load i8, i8* %in_block, align 1
  %tobool738 = trunc i8 %487 to i1
  br label %land.end740

land.end740:                                      ; preds = %land.rhs737, %if.then728
  %488 = phi i1 [ false, %if.then728 ], [ %tobool738, %land.rhs737 ]
  %489 = zext i1 %488 to i64
  %cond742 = select i1 %488, i32 2, i32 1
  store i32 %cond742, i32* %i729, align 4
  %490 = load i32, i32* %i729, align 4
  %idxprom743 = sext i32 %490 to i64
  %arrayidx744 = getelementptr inbounds [64 x %struct.op*], [64 x %struct.op*]* %enterops, i64 0, i64 %idxprom743
  %491 = load %struct.op*, %struct.op** %arrayidx744, align 8
  %tobool745 = icmp ne %struct.op* %491, null
  br i1 %tobool745, label %if.then746, label %if.end747

if.then746:                                       ; preds = %land.end740
  call void (i32, i8*, ...) @Perl_ck_warner_d(i32 2, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.47, i64 0, i64 0))
  br label %if.end747

if.end747:                                        ; preds = %if.then746, %land.end740
  br label %if.end748

if.end748:                                        ; preds = %if.end747, %land.lhs.true725, %if.end722
  %492 = load i32, i32* %ix, align 4
  %493 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %si_cxix749 = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %493, i32 0, i32 4
  %494 = load i32, i32* %si_cxix749, align 8
  %cmp750 = icmp slt i32 %492, %494
  br i1 %cmp750, label %if.then752, label %if.end788

if.then752:                                       ; preds = %if.end748
  %495 = load i32, i32* %ix, align 4
  %cmp754 = icmp slt i32 %495, 0
  br i1 %cmp754, label %if.then756, label %if.end759

if.then756:                                       ; preds = %if.then752
  %496 = load i32, i32* %ix, align 4
  %conv757 = sext i32 %496 to i64
  %call758 = call %struct.op* (i8*, ...) @Perl_die(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.48, i64 0, i64 0), i64 %conv757)
  store %struct.op* %call758, %struct.op** %retval, align 8
  br label %return

if.end759:                                        ; preds = %if.then752
  %497 = load i32, i32* %ix, align 4
  call void @Perl_dounwind(i32 %497)
  %498 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %si_cxstack760 = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %498, i32 0, i32 1
  %499 = load %struct.context*, %struct.context** %si_cxstack760, align 8
  %500 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %si_cxix761 = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %500, i32 0, i32 4
  %501 = load i32, i32* %si_cxix761, align 8
  %idxprom762 = sext i32 %501 to i64
  %arrayidx763 = getelementptr inbounds %struct.context, %struct.context* %499, i64 %idxprom762
  store %struct.context* %arrayidx763, %struct.context** %cx, align 8
  %502 = load %struct.sv**, %struct.sv*** @PL_stack_base, align 8
  %503 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u764 = getelementptr inbounds %struct.context, %struct.context* %503, i32 0, i32 0
  %cx_blk765 = bitcast %union.anon.16* %cx_u764 to %struct.block*
  %blku_oldsp766 = getelementptr inbounds %struct.block, %struct.block* %cx_blk765, i32 0, i32 3
  %504 = load i32, i32* %blku_oldsp766, align 4
  %idx.ext767 = sext i32 %504 to i64
  %add.ptr768 = getelementptr inbounds %struct.sv*, %struct.sv** %502, i64 %idx.ext767
  store %struct.sv** %add.ptr768, %struct.sv*** @PL_stack_sp, align 8
  %505 = load i32*, i32** @PL_markstack, align 8
  %506 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u769 = getelementptr inbounds %struct.context, %struct.context* %506, i32 0, i32 0
  %cx_blk770 = bitcast %union.anon.16* %cx_u769 to %struct.block*
  %blku_oldmarksp771 = getelementptr inbounds %struct.block, %struct.block* %cx_blk770, i32 0, i32 5
  %507 = load i32, i32* %blku_oldmarksp771, align 8
  %idx.ext772 = sext i32 %507 to i64
  %add.ptr773 = getelementptr inbounds i32, i32* %505, i64 %idx.ext772
  store i32* %add.ptr773, i32** @PL_markstack_ptr, align 8
  %508 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u774 = getelementptr inbounds %struct.context, %struct.context* %508, i32 0, i32 0
  %cx_blk775 = bitcast %union.anon.16* %cx_u774 to %struct.block*
  %blku_oldscopesp776 = getelementptr inbounds %struct.block, %struct.block* %cx_blk775, i32 0, i32 6
  %509 = load i32, i32* %blku_oldscopesp776, align 4
  store i32 %509, i32* @PL_scopestack_ix, align 4
  %510 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u777 = getelementptr inbounds %struct.context, %struct.context* %510, i32 0, i32 0
  %cx_blk778 = bitcast %union.anon.16* %cx_u777 to %struct.block*
  %blku_oldpm779 = getelementptr inbounds %struct.block, %struct.block* %cx_blk778, i32 0, i32 7
  %511 = load %struct.pmop*, %struct.pmop** %blku_oldpm779, align 8
  store %struct.pmop* %511, %struct.pmop** @PL_curpm, align 8
  %512 = load i32*, i32** @PL_scopestack, align 8
  %513 = load i32, i32* @PL_scopestack_ix, align 4
  %idxprom780 = sext i32 %513 to i64
  %arrayidx781 = getelementptr inbounds i32, i32* %512, i64 %idxprom780
  %514 = load i32, i32* %arrayidx781, align 4
  store i32 %514, i32* %oldsave753, align 4
  br label %do.body782

do.body782:                                       ; preds = %if.end759
  %515 = load i32, i32* @PL_savestack_ix, align 4
  %516 = load i32, i32* %oldsave753, align 4
  %cmp783 = icmp sgt i32 %515, %516
  br i1 %cmp783, label %if.then785, label %if.end786

if.then785:                                       ; preds = %do.body782
  %517 = load i32, i32* %oldsave753, align 4
  call void @Perl_leave_scope(i32 %517)
  br label %if.end786

if.end786:                                        ; preds = %if.then785, %do.body782
  br label %do.end787

do.end787:                                        ; preds = %if.end786
  br label %if.end788

if.end788:                                        ; preds = %do.end787, %if.end748
  %arraydecay789 = getelementptr inbounds [64 x %struct.op*], [64 x %struct.op*]* %enterops, i64 0, i64 0
  %518 = load %struct.op*, %struct.op** %arraydecay789, align 16
  %tobool790 = icmp ne %struct.op* %518, null
  br i1 %tobool790, label %land.lhs.true791, label %if.end829

land.lhs.true791:                                 ; preds = %if.end788
  %arrayidx792 = getelementptr inbounds [64 x %struct.op*], [64 x %struct.op*]* %enterops, i64 0, i64 1
  %519 = load %struct.op*, %struct.op** %arrayidx792, align 8
  %tobool793 = icmp ne %struct.op* %519, null
  br i1 %tobool793, label %if.then794, label %if.end829

if.then794:                                       ; preds = %land.lhs.true791
  %520 = load %struct.op*, %struct.op** @PL_op, align 8
  store %struct.op* %520, %struct.op** %oldop, align 8
  %arrayidx795 = getelementptr inbounds [64 x %struct.op*], [64 x %struct.op*]* %enterops, i64 0, i64 1
  %521 = load %struct.op*, %struct.op** %arrayidx795, align 8
  %op_type796 = getelementptr inbounds %struct.op, %struct.op* %521, i32 0, i32 4
  %bf.load797 = load i16, i16* %op_type796, align 8
  %bf.clear798 = and i16 %bf.load797, 511
  %bf.cast799 = zext i16 %bf.clear798 to i32
  %cmp800 = icmp eq i32 %bf.cast799, 196
  br i1 %cmp800, label %land.rhs802, label %land.end805

land.rhs802:                                      ; preds = %if.then794
  %522 = load i8, i8* %in_block, align 1
  %tobool803 = trunc i8 %522 to i1
  br label %land.end805

land.end805:                                      ; preds = %land.rhs802, %if.then794
  %523 = phi i1 [ false, %if.then794 ], [ %tobool803, %land.rhs802 ]
  %524 = zext i1 %523 to i64
  %cond807 = select i1 %523, i32 2, i32 1
  store i32 %cond807, i32* %ix, align 4
  br label %for.cond808

for.cond808:                                      ; preds = %for.inc826, %land.end805
  %525 = load i32, i32* %ix, align 4
  %idxprom809 = sext i32 %525 to i64
  %arrayidx810 = getelementptr inbounds [64 x %struct.op*], [64 x %struct.op*]* %enterops, i64 0, i64 %idxprom809
  %526 = load %struct.op*, %struct.op** %arrayidx810, align 8
  %tobool811 = icmp ne %struct.op* %526, null
  br i1 %tobool811, label %for.body812, label %for.end828

for.body812:                                      ; preds = %for.cond808
  %527 = load i32, i32* %ix, align 4
  %idxprom813 = sext i32 %527 to i64
  %arrayidx814 = getelementptr inbounds [64 x %struct.op*], [64 x %struct.op*]* %enterops, i64 0, i64 %idxprom813
  %528 = load %struct.op*, %struct.op** %arrayidx814, align 8
  store %struct.op* %528, %struct.op** @PL_op, align 8
  %529 = load %struct.op*, %struct.op** @PL_op, align 8
  %op_type815 = getelementptr inbounds %struct.op, %struct.op* %529, i32 0, i32 4
  %bf.load816 = load i16, i16* %op_type815, align 8
  %bf.clear817 = and i16 %bf.load816, 511
  %bf.cast818 = zext i16 %bf.clear817 to i32
  %cmp819 = icmp eq i32 %bf.cast818, 199
  br i1 %cmp819, label %if.then821, label %if.end823

if.then821:                                       ; preds = %for.body812
  %call822 = call %struct.op* (i8*, ...) @Perl_die(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.46, i64 0, i64 0))
  store %struct.op* %call822, %struct.op** %retval, align 8
  br label %return

if.end823:                                        ; preds = %for.body812
  %530 = load %struct.op*, %struct.op** @PL_op, align 8
  %op_ppaddr = getelementptr inbounds %struct.op, %struct.op* %530, i32 0, i32 2
  %op_ppaddr824 = bitcast {}** %op_ppaddr to %struct.op* ()**
  %531 = load %struct.op* ()*, %struct.op* ()** %op_ppaddr824, align 8
  %call825 = call %struct.op* %531()
  br label %for.inc826

for.inc826:                                       ; preds = %if.end823
  %532 = load i32, i32* %ix, align 4
  %inc827 = add nsw i32 %532, 1
  store i32 %inc827, i32* %ix, align 4
  br label %for.cond808

for.end828:                                       ; preds = %for.cond808
  %533 = load %struct.op*, %struct.op** %oldop, align 8
  store %struct.op* %533, %struct.op** @PL_op, align 8
  br label %if.end829

if.end829:                                        ; preds = %for.end828, %land.lhs.true791, %if.end788
  br label %if.end830

if.end830:                                        ; preds = %if.end829, %if.end564
  %534 = load i8, i8* %do_dump, align 1
  %tobool831 = trunc i8 %534 to i1
  br i1 %tobool831, label %if.then832, label %if.end833

if.then832:                                       ; preds = %if.end830
  %535 = load %struct.op*, %struct.op** %retop, align 8
  store %struct.op* %535, %struct.op** @PL_restartop, align 8
  store i8 1, i8* @PL_do_undump, align 1
  call void @Perl_my_unexec()
  store %struct.op* null, %struct.op** @PL_restartop, align 8
  store i8 0, i8* @PL_do_undump, align 1
  br label %if.end833

if.end833:                                        ; preds = %if.then832, %if.end830
  br label %putback_return

putback_return:                                   ; preds = %if.end833, %if.end522
  %536 = load %struct.sv**, %struct.sv*** %sp, align 8
  store %struct.sv** %536, %struct.sv*** @PL_stack_sp, align 8
  br label %_return

_return:                                          ; preds = %putback_return, %do.end407
  %537 = load i32, i32* @PL_sig_pending, align 4
  %tobool834 = icmp ne i32 %537, 0
  br i1 %tobool834, label %cond.true835, label %cond.false836

cond.true835:                                     ; preds = %_return
  br i1 true, label %if.then837, label %if.end838

cond.false836:                                    ; preds = %_return
  br i1 false, label %if.then837, label %if.end838

if.then837:                                       ; preds = %cond.false836, %cond.true835
  %538 = load void ()*, void ()** @PL_signalhook, align 8
  call void %538()
  br label %if.end838

if.end838:                                        ; preds = %if.then837, %cond.false836, %cond.true835
  %539 = load %struct.op*, %struct.op** %retop, align 8
  store %struct.op* %539, %struct.op** %retval, align 8
  br label %return

return:                                           ; preds = %if.end838, %if.then821, %if.then756, %if.then716, %if.then689, %if.then643, %sw.bb640, %if.then557, %if.end238, %if.then234, %if.then129, %if.else, %if.then118, %if.then89, %if.end72, %if.end69
  %540 = load %struct.op*, %struct.op** %retval, align 8
  ret %struct.op* %540
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.gv* @S_CvGV(%struct.cv* %sv) #0 {
entry:
  %sv.addr = alloca %struct.cv*, align 8
  store %struct.cv* %sv, %struct.cv** %sv.addr, align 8
  %0 = load %struct.cv*, %struct.cv** %sv.addr, align 8
  %sv_any = getelementptr inbounds %struct.cv, %struct.cv* %0, i32 0, i32 0
  %1 = load %struct.xpvcv*, %struct.xpvcv** %sv_any, align 8
  %2 = bitcast %struct.xpvcv* %1 to i8*
  %3 = bitcast i8* %2 to %struct.xpvcv*
  %xcv_flags = getelementptr inbounds %struct.xpvcv, %struct.xpvcv* %3, i32 0, i32 12
  %4 = load i32, i32* %xcv_flags, align 4
  %and = and i32 %4, 32768
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %5 = load %struct.cv*, %struct.cv** %sv.addr, align 8
  %call = call %struct.gv* @Perl_cvgv_from_hek(%struct.cv* %5)
  br label %cond.end

cond.false:                                       ; preds = %entry
  %6 = load %struct.cv*, %struct.cv** %sv.addr, align 8
  %sv_any1 = getelementptr inbounds %struct.cv, %struct.cv* %6, i32 0, i32 0
  %7 = load %struct.xpvcv*, %struct.xpvcv** %sv_any1, align 8
  %8 = bitcast %struct.xpvcv* %7 to i8*
  %9 = bitcast i8* %8 to %struct.xpvcv*
  %xcv_gv_u = getelementptr inbounds %struct.xpvcv, %struct.xpvcv* %9, i32 0, i32 7
  %xcv_gv = bitcast %union.anon.12* %xcv_gv_u to %struct.gv**
  %10 = load %struct.gv*, %struct.gv** %xcv_gv, align 8
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.gv* [ %call, %cond.true ], [ %10, %cond.false ]
  ret %struct.gv* %cond
}

declare dso_local %struct.gv* @Perl_gv_autoload_pvn(%struct.hv*, i8*, i64, i32) #1

declare dso_local void @Perl_gv_efullname4(%struct.sv*, %struct.gv*, i8*, i1 zeroext) #1

declare dso_local %struct.sv** @Perl_av_fetch(%struct.av*, i64, i32) #1

; Function Attrs: noinline nounwind uwtable
define internal %struct.sv* @S_SvREFCNT_inc_NN(%struct.sv* %sv) #0 {
entry:
  %sv.addr = alloca %struct.sv*, align 8
  store %struct.sv* %sv, %struct.sv** %sv.addr, align 8
  %0 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %sv_refcnt = getelementptr inbounds %struct.sv, %struct.sv* %0, i32 0, i32 1
  %1 = load i32, i32* %sv_refcnt, align 8
  %inc = add i32 %1, 1
  store i32 %inc, i32* %sv_refcnt, align 8
  %2 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  ret %struct.sv* %2
}

declare dso_local %struct.sv* @Perl_newSVavdefelem(%struct.av*, i64, i1 zeroext) #1

declare dso_local zeroext i1 @Perl_ckwarn(i32) #1

declare dso_local void @Perl_sub_crush_depth(%struct.cv*) #1

declare dso_local void @Perl_get_db_sub(%struct.sv**, %struct.cv*) #1

declare dso_local %struct.cv* @Perl_get_cvn_flags(i8*, i64, i32) #1

declare dso_local i32 @Perl_call_sv(%struct.sv*, i32) #1

; Function Attrs: nounwind readonly
declare dso_local i64 @strlen(i8*) #3

; Function Attrs: noinline nounwind uwtable
define internal %struct.op* @S_dofindlabel(%struct.op* %o, i8* %label, i64 %len, i32 %flags, %struct.op** %opstack, %struct.op** %oplimit) #0 {
entry:
  %retval = alloca %struct.op*, align 8
  %o.addr = alloca %struct.op*, align 8
  %label.addr = alloca i8*, align 8
  %len.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  %opstack.addr = alloca %struct.op**, align 8
  %oplimit.addr = alloca %struct.op**, align 8
  %ops = alloca %struct.op**, align 8
  %kid = alloca %struct.op*, align 8
  %kid_label_len = alloca i64, align 8
  %kid_label_flags = alloca i32, align 4
  %kid_label = alloca i8*, align 8
  store %struct.op* %o, %struct.op** %o.addr, align 8
  store i8* %label, i8** %label.addr, align 8
  store i64 %len, i64* %len.addr, align 8
  store i32 %flags, i32* %flags.addr, align 4
  store %struct.op** %opstack, %struct.op*** %opstack.addr, align 8
  store %struct.op** %oplimit, %struct.op*** %oplimit.addr, align 8
  %0 = load %struct.op**, %struct.op*** %opstack.addr, align 8
  store %struct.op** %0, %struct.op*** %ops, align 8
  %1 = load %struct.op**, %struct.op*** %ops, align 8
  %2 = load %struct.op**, %struct.op*** %oplimit.addr, align 8
  %cmp = icmp uge %struct.op** %1, %2
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void (i8*, ...) @Perl_croak(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.42, i64 0, i64 0), i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.102, i32 0, i32 0))
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct.op*, %struct.op** %o.addr, align 8
  %op_type = getelementptr inbounds %struct.op, %struct.op* %3, i32 0, i32 4
  %bf.load = load i16, i16* %op_type, align 8
  %bf.clear = and i16 %bf.load, 511
  %bf.cast = zext i16 %bf.clear to i32
  %cmp1 = icmp eq i32 %bf.cast, 197
  br i1 %cmp1, label %if.then25, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end
  %4 = load %struct.op*, %struct.op** %o.addr, align 8
  %op_type2 = getelementptr inbounds %struct.op, %struct.op* %4, i32 0, i32 4
  %bf.load3 = load i16, i16* %op_type2, align 8
  %bf.clear4 = and i16 %bf.load3, 511
  %bf.cast5 = zext i16 %bf.clear4 to i32
  %cmp6 = icmp eq i32 %bf.cast5, 198
  br i1 %cmp6, label %if.then25, label %lor.lhs.false7

lor.lhs.false7:                                   ; preds = %lor.lhs.false
  %5 = load %struct.op*, %struct.op** %o.addr, align 8
  %op_type8 = getelementptr inbounds %struct.op, %struct.op* %5, i32 0, i32 4
  %bf.load9 = load i16, i16* %op_type8, align 8
  %bf.clear10 = and i16 %bf.load9, 511
  %bf.cast11 = zext i16 %bf.clear10 to i32
  %cmp12 = icmp eq i32 %bf.cast11, 202
  br i1 %cmp12, label %if.then25, label %lor.lhs.false13

lor.lhs.false13:                                  ; preds = %lor.lhs.false7
  %6 = load %struct.op*, %struct.op** %o.addr, align 8
  %op_type14 = getelementptr inbounds %struct.op, %struct.op* %6, i32 0, i32 4
  %bf.load15 = load i16, i16* %op_type14, align 8
  %bf.clear16 = and i16 %bf.load15, 511
  %bf.cast17 = zext i16 %bf.clear16 to i32
  %cmp18 = icmp eq i32 %bf.cast17, 186
  br i1 %cmp18, label %if.then25, label %lor.lhs.false19

lor.lhs.false19:                                  ; preds = %lor.lhs.false13
  %7 = load %struct.op*, %struct.op** %o.addr, align 8
  %op_type20 = getelementptr inbounds %struct.op, %struct.op* %7, i32 0, i32 4
  %bf.load21 = load i16, i16* %op_type20, align 8
  %bf.clear22 = and i16 %bf.load21, 511
  %bf.cast23 = zext i16 %bf.clear22 to i32
  %cmp24 = icmp eq i32 %bf.cast23, 345
  br i1 %cmp24, label %if.then25, label %if.end29

if.then25:                                        ; preds = %lor.lhs.false19, %lor.lhs.false13, %lor.lhs.false7, %lor.lhs.false, %if.end
  %8 = load %struct.op*, %struct.op** %o.addr, align 8
  %9 = bitcast %struct.op* %8 to %struct.unop*
  %op_first = getelementptr inbounds %struct.unop, %struct.unop* %9, i32 0, i32 7
  %10 = load %struct.op*, %struct.op** %op_first, align 8
  %11 = load %struct.op**, %struct.op*** %ops, align 8
  %incdec.ptr = getelementptr inbounds %struct.op*, %struct.op** %11, i32 1
  store %struct.op** %incdec.ptr, %struct.op*** %ops, align 8
  store %struct.op* %10, %struct.op** %11, align 8
  %12 = load %struct.op**, %struct.op*** %ops, align 8
  %13 = load %struct.op**, %struct.op*** %oplimit.addr, align 8
  %cmp26 = icmp uge %struct.op** %12, %13
  br i1 %cmp26, label %if.then27, label %if.end28

if.then27:                                        ; preds = %if.then25
  call void (i8*, ...) @Perl_croak(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.42, i64 0, i64 0), i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.102, i32 0, i32 0))
  br label %if.end28

if.end28:                                         ; preds = %if.then27, %if.then25
  br label %if.end29

if.end29:                                         ; preds = %if.end28, %lor.lhs.false19
  %14 = load %struct.op**, %struct.op*** %ops, align 8
  store %struct.op* null, %struct.op** %14, align 8
  %15 = load %struct.op*, %struct.op** %o.addr, align 8
  %op_flags = getelementptr inbounds %struct.op, %struct.op* %15, i32 0, i32 5
  %16 = load i8, i8* %op_flags, align 2
  %conv = zext i8 %16 to i32
  %and = and i32 %conv, 4
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %if.then30, label %if.end128

if.then30:                                        ; preds = %if.end29
  %17 = load %struct.op*, %struct.op** %o.addr, align 8
  %18 = bitcast %struct.op* %17 to %struct.unop*
  %op_first31 = getelementptr inbounds %struct.unop, %struct.unop* %18, i32 0, i32 7
  %19 = load %struct.op*, %struct.op** %op_first31, align 8
  store %struct.op* %19, %struct.op** %kid, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then30
  %20 = load %struct.op*, %struct.op** %kid, align 8
  %tobool32 = icmp ne %struct.op* %20, null
  br i1 %tobool32, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %21 = load %struct.op*, %struct.op** %kid, align 8
  %op_type33 = getelementptr inbounds %struct.op, %struct.op* %21, i32 0, i32 4
  %bf.load34 = load i16, i16* %op_type33, align 8
  %bf.clear35 = and i16 %bf.load34, 511
  %bf.cast36 = zext i16 %bf.clear35 to i32
  %cmp37 = icmp eq i32 %bf.cast36, 193
  br i1 %cmp37, label %if.then46, label %lor.lhs.false39

lor.lhs.false39:                                  ; preds = %for.body
  %22 = load %struct.op*, %struct.op** %kid, align 8
  %op_type40 = getelementptr inbounds %struct.op, %struct.op* %22, i32 0, i32 4
  %bf.load41 = load i16, i16* %op_type40, align 8
  %bf.clear42 = and i16 %bf.load41, 511
  %bf.cast43 = zext i16 %bf.clear42 to i32
  %cmp44 = icmp eq i32 %bf.cast43, 194
  br i1 %cmp44, label %if.then46, label %if.end72

if.then46:                                        ; preds = %lor.lhs.false39, %for.body
  %23 = load %struct.op*, %struct.op** %kid, align 8
  %24 = bitcast %struct.op* %23 to %struct.cop*
  %call = call i8* @Perl_cop_fetch_label(%struct.cop* %24, i64* %kid_label_len, i32* %kid_label_flags)
  store i8* %call, i8** %kid_label, align 8
  %25 = load i8*, i8** %kid_label, align 8
  %tobool47 = icmp ne i8* %25, null
  br i1 %tobool47, label %land.lhs.true, label %if.end71

land.lhs.true:                                    ; preds = %if.then46
  %26 = load i32, i32* %kid_label_flags, align 4
  %and48 = and i32 %26, 536870912
  %27 = load i32, i32* %flags.addr, align 4
  %and49 = and i32 %27, 536870912
  %cmp50 = icmp ne i32 %and48, %and49
  br i1 %cmp50, label %cond.true, label %cond.false61

cond.true:                                        ; preds = %land.lhs.true
  %28 = load i32, i32* %flags.addr, align 4
  %and52 = and i32 %28, 536870912
  %tobool53 = icmp ne i32 %and52, 0
  br i1 %tobool53, label %cond.true54, label %cond.false

cond.true54:                                      ; preds = %cond.true
  %29 = load i8*, i8** %kid_label, align 8
  %30 = load i64, i64* %kid_label_len, align 8
  %31 = load i8*, i8** %label.addr, align 8
  %32 = load i64, i64* %len.addr, align 8
  %call55 = call i32 @Perl_bytes_cmp_utf8(i8* %29, i64 %30, i8* %31, i64 %32)
  %cmp56 = icmp eq i32 %call55, 0
  br i1 %cmp56, label %if.then70, label %if.end71

cond.false:                                       ; preds = %cond.true
  %33 = load i8*, i8** %label.addr, align 8
  %34 = load i64, i64* %len.addr, align 8
  %35 = load i8*, i8** %kid_label, align 8
  %36 = load i64, i64* %kid_label_len, align 8
  %call58 = call i32 @Perl_bytes_cmp_utf8(i8* %33, i64 %34, i8* %35, i64 %36)
  %cmp59 = icmp eq i32 %call58, 0
  br i1 %cmp59, label %if.then70, label %if.end71

cond.false61:                                     ; preds = %land.lhs.true
  %37 = load i64, i64* %len.addr, align 8
  %38 = load i64, i64* %kid_label_len, align 8
  %cmp62 = icmp eq i64 %37, %38
  br i1 %cmp62, label %land.lhs.true64, label %if.end71

land.lhs.true64:                                  ; preds = %cond.false61
  %39 = load i8*, i8** %kid_label, align 8
  %40 = load i8*, i8** %label.addr, align 8
  %cmp65 = icmp eq i8* %39, %40
  br i1 %cmp65, label %if.then70, label %lor.lhs.false67

lor.lhs.false67:                                  ; preds = %land.lhs.true64
  %41 = load i8*, i8** %kid_label, align 8
  %42 = load i8*, i8** %label.addr, align 8
  %43 = load i64, i64* %len.addr, align 8
  %call68 = call i32 @memcmp(i8* %41, i8* %42, i64 %43) #8
  %tobool69 = icmp ne i32 %call68, 0
  br i1 %tobool69, label %if.end71, label %if.then70

if.then70:                                        ; preds = %lor.lhs.false67, %land.lhs.true64, %cond.false, %cond.true54
  %44 = load %struct.op*, %struct.op** %kid, align 8
  store %struct.op* %44, %struct.op** %retval, align 8
  br label %return

if.end71:                                         ; preds = %lor.lhs.false67, %cond.false61, %cond.false, %cond.true54, %if.then46
  br label %if.end72

if.end72:                                         ; preds = %if.end71, %lor.lhs.false39
  br label %for.inc

for.inc:                                          ; preds = %if.end72
  %45 = load %struct.op*, %struct.op** %kid, align 8
  %op_sibling = getelementptr inbounds %struct.op, %struct.op* %45, i32 0, i32 1
  %46 = load %struct.op*, %struct.op** %op_sibling, align 8
  %add.ptr = getelementptr inbounds %struct.op, %struct.op* %46, i64 0
  store %struct.op* %add.ptr, %struct.op** %kid, align 8
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %47 = load %struct.op*, %struct.op** %o.addr, align 8
  %48 = bitcast %struct.op* %47 to %struct.unop*
  %op_first73 = getelementptr inbounds %struct.unop, %struct.unop* %48, i32 0, i32 7
  %49 = load %struct.op*, %struct.op** %op_first73, align 8
  store %struct.op* %49, %struct.op** %kid, align 8
  br label %for.cond74

for.cond74:                                       ; preds = %for.inc124, %for.end
  %50 = load %struct.op*, %struct.op** %kid, align 8
  %tobool75 = icmp ne %struct.op* %50, null
  br i1 %tobool75, label %for.body76, label %for.end127

for.body76:                                       ; preds = %for.cond74
  %51 = load %struct.op*, %struct.op** %kid, align 8
  %52 = load %struct.op*, %struct.op** @PL_lastgotoprobe, align 8
  %cmp77 = icmp eq %struct.op* %51, %52
  br i1 %cmp77, label %if.then79, label %if.end80

if.then79:                                        ; preds = %for.body76
  br label %for.inc124

if.end80:                                         ; preds = %for.body76
  %53 = load %struct.op*, %struct.op** %kid, align 8
  %op_type81 = getelementptr inbounds %struct.op, %struct.op* %53, i32 0, i32 4
  %bf.load82 = load i16, i16* %op_type81, align 8
  %bf.clear83 = and i16 %bf.load82, 511
  %bf.cast84 = zext i16 %bf.clear83 to i32
  %cmp85 = icmp eq i32 %bf.cast84, 193
  br i1 %cmp85, label %if.then94, label %lor.lhs.false87

lor.lhs.false87:                                  ; preds = %if.end80
  %54 = load %struct.op*, %struct.op** %kid, align 8
  %op_type88 = getelementptr inbounds %struct.op, %struct.op* %54, i32 0, i32 4
  %bf.load89 = load i16, i16* %op_type88, align 8
  %bf.clear90 = and i16 %bf.load89, 511
  %bf.cast91 = zext i16 %bf.clear90 to i32
  %cmp92 = icmp eq i32 %bf.cast91, 194
  br i1 %cmp92, label %if.then94, label %if.end119

if.then94:                                        ; preds = %lor.lhs.false87, %if.end80
  %55 = load %struct.op**, %struct.op*** %ops, align 8
  %56 = load %struct.op**, %struct.op*** %opstack.addr, align 8
  %cmp95 = icmp eq %struct.op** %55, %56
  br i1 %cmp95, label %if.then97, label %if.else

if.then97:                                        ; preds = %if.then94
  %57 = load %struct.op*, %struct.op** %kid, align 8
  %58 = load %struct.op**, %struct.op*** %ops, align 8
  %incdec.ptr98 = getelementptr inbounds %struct.op*, %struct.op** %58, i32 1
  store %struct.op** %incdec.ptr98, %struct.op*** %ops, align 8
  store %struct.op* %57, %struct.op** %58, align 8
  br label %if.end118

if.else:                                          ; preds = %if.then94
  %59 = load %struct.op**, %struct.op*** %ops, align 8
  %arrayidx = getelementptr inbounds %struct.op*, %struct.op** %59, i64 -1
  %60 = load %struct.op*, %struct.op** %arrayidx, align 8
  %op_type99 = getelementptr inbounds %struct.op, %struct.op* %60, i32 0, i32 4
  %bf.load100 = load i16, i16* %op_type99, align 8
  %bf.clear101 = and i16 %bf.load100, 511
  %bf.cast102 = zext i16 %bf.clear101 to i32
  %cmp103 = icmp eq i32 %bf.cast102, 193
  br i1 %cmp103, label %if.then113, label %lor.lhs.false105

lor.lhs.false105:                                 ; preds = %if.else
  %61 = load %struct.op**, %struct.op*** %ops, align 8
  %arrayidx106 = getelementptr inbounds %struct.op*, %struct.op** %61, i64 -1
  %62 = load %struct.op*, %struct.op** %arrayidx106, align 8
  %op_type107 = getelementptr inbounds %struct.op, %struct.op* %62, i32 0, i32 4
  %bf.load108 = load i16, i16* %op_type107, align 8
  %bf.clear109 = and i16 %bf.load108, 511
  %bf.cast110 = zext i16 %bf.clear109 to i32
  %cmp111 = icmp eq i32 %bf.cast110, 194
  br i1 %cmp111, label %if.then113, label %if.else115

if.then113:                                       ; preds = %lor.lhs.false105, %if.else
  %63 = load %struct.op*, %struct.op** %kid, align 8
  %64 = load %struct.op**, %struct.op*** %ops, align 8
  %arrayidx114 = getelementptr inbounds %struct.op*, %struct.op** %64, i64 -1
  store %struct.op* %63, %struct.op** %arrayidx114, align 8
  br label %if.end117

if.else115:                                       ; preds = %lor.lhs.false105
  %65 = load %struct.op*, %struct.op** %kid, align 8
  %66 = load %struct.op**, %struct.op*** %ops, align 8
  %incdec.ptr116 = getelementptr inbounds %struct.op*, %struct.op** %66, i32 1
  store %struct.op** %incdec.ptr116, %struct.op*** %ops, align 8
  store %struct.op* %65, %struct.op** %66, align 8
  br label %if.end117

if.end117:                                        ; preds = %if.else115, %if.then113
  br label %if.end118

if.end118:                                        ; preds = %if.end117, %if.then97
  br label %if.end119

if.end119:                                        ; preds = %if.end118, %lor.lhs.false87
  %67 = load %struct.op*, %struct.op** %kid, align 8
  %68 = load i8*, i8** %label.addr, align 8
  %69 = load i64, i64* %len.addr, align 8
  %70 = load i32, i32* %flags.addr, align 4
  %71 = load %struct.op**, %struct.op*** %ops, align 8
  %72 = load %struct.op**, %struct.op*** %oplimit.addr, align 8
  %call120 = call %struct.op* @S_dofindlabel(%struct.op* %67, i8* %68, i64 %69, i32 %70, %struct.op** %71, %struct.op** %72)
  store %struct.op* %call120, %struct.op** %o.addr, align 8
  %tobool121 = icmp ne %struct.op* %call120, null
  br i1 %tobool121, label %if.then122, label %if.end123

if.then122:                                       ; preds = %if.end119
  %73 = load %struct.op*, %struct.op** %o.addr, align 8
  store %struct.op* %73, %struct.op** %retval, align 8
  br label %return

if.end123:                                        ; preds = %if.end119
  br label %for.inc124

for.inc124:                                       ; preds = %if.end123, %if.then79
  %74 = load %struct.op*, %struct.op** %kid, align 8
  %op_sibling125 = getelementptr inbounds %struct.op, %struct.op* %74, i32 0, i32 1
  %75 = load %struct.op*, %struct.op** %op_sibling125, align 8
  %add.ptr126 = getelementptr inbounds %struct.op, %struct.op* %75, i64 0
  store %struct.op* %add.ptr126, %struct.op** %kid, align 8
  br label %for.cond74

for.end127:                                       ; preds = %for.cond74
  br label %if.end128

if.end128:                                        ; preds = %for.end127, %if.end29
  %76 = load %struct.op**, %struct.op*** %ops, align 8
  store %struct.op* null, %struct.op** %76, align 8
  store %struct.op* null, %struct.op** %retval, align 8
  br label %return

return:                                           ; preds = %if.end128, %if.then122, %if.then70
  %77 = load %struct.op*, %struct.op** %retval, align 8
  ret %struct.op* %77
}

declare dso_local void @Perl_ck_warner_d(i32, i8*, ...) #1

declare dso_local void @Perl_my_unexec() #1

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.op* @Perl_pp_exit() #0 {
entry:
  %sp = alloca %struct.sv**, align 8
  %anum = alloca i32, align 4
  %0 = load %struct.sv**, %struct.sv*** @PL_stack_sp, align 8
  store %struct.sv** %0, %struct.sv*** %sp, align 8
  %1 = load %struct.op*, %struct.op** @PL_op, align 8
  %op_private = getelementptr inbounds %struct.op, %struct.op* %1, i32 0, i32 6
  %2 = load i8, i8* %op_private, align 1
  %conv = zext i8 %2 to i32
  %and = and i32 %conv, 15
  %cmp = icmp slt i32 %and, 1
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  store i32 0, i32* %anum, align 4
  br label %if.end9

if.else:                                          ; preds = %entry
  %3 = load %struct.sv**, %struct.sv*** %sp, align 8
  %4 = load %struct.sv*, %struct.sv** %3, align 8
  %tobool = icmp ne %struct.sv* %4, null
  br i1 %tobool, label %if.else3, label %if.then2

if.then2:                                         ; preds = %if.else
  store i32 0, i32* %anum, align 4
  %5 = load %struct.sv**, %struct.sv*** %sp, align 8
  %incdec.ptr = getelementptr inbounds %struct.sv*, %struct.sv** %5, i32 -1
  store %struct.sv** %incdec.ptr, %struct.sv*** %sp, align 8
  %6 = load %struct.sv*, %struct.sv** %5, align 8
  br label %if.end

if.else3:                                         ; preds = %if.else
  %7 = load %struct.sv**, %struct.sv*** %sp, align 8
  %incdec.ptr4 = getelementptr inbounds %struct.sv*, %struct.sv** %7, i32 -1
  store %struct.sv** %incdec.ptr4, %struct.sv*** %sp, align 8
  %8 = load %struct.sv*, %struct.sv** %7, align 8
  store %struct.sv* %8, %struct.sv** @PL_Sv, align 8
  %9 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %sv_flags = getelementptr inbounds %struct.sv, %struct.sv* %9, i32 0, i32 2
  %10 = load i32, i32* %sv_flags, align 4
  %and5 = and i32 %10, 2097408
  %cmp6 = icmp eq i32 %and5, 256
  br i1 %cmp6, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.else3
  %11 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %sv_any = getelementptr inbounds %struct.sv, %struct.sv* %11, i32 0, i32 0
  %12 = load i8*, i8** %sv_any, align 8
  %13 = bitcast i8* %12 to %struct.xpviv*
  %xiv_u = getelementptr inbounds %struct.xpviv, %struct.xpviv* %13, i32 0, i32 4
  %xivu_iv = bitcast %union._xivu* %xiv_u to i64*
  %14 = load i64, i64* %xivu_iv, align 8
  br label %cond.end

cond.false:                                       ; preds = %if.else3
  %15 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %call = call i64 @Perl_sv_2iv_flags(%struct.sv* %15, i32 2)
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %14, %cond.true ], [ %call, %cond.false ]
  %conv8 = trunc i64 %cond to i32
  store i32 %conv8, i32* %anum, align 4
  br label %if.end

if.end:                                           ; preds = %cond.end, %if.then2
  br label %if.end9

if.end9:                                          ; preds = %if.end, %if.then
  %16 = load i8, i8* @PL_exit_flags, align 1
  %conv10 = zext i8 %16 to i32
  %or = or i32 %conv10, 1
  %conv11 = trunc i32 %or to i8
  store i8 %conv11, i8* @PL_exit_flags, align 1
  %17 = load i32, i32* %anum, align 4
  call void @Perl_my_exit(i32 %17)
  %18 = load %struct.sv**, %struct.sv*** %sp, align 8
  %incdec.ptr12 = getelementptr inbounds %struct.sv*, %struct.sv** %18, i32 1
  store %struct.sv** %incdec.ptr12, %struct.sv*** %sp, align 8
  store %struct.sv* @PL_sv_undef, %struct.sv** %incdec.ptr12, align 8
  %19 = load %struct.sv**, %struct.sv*** %sp, align 8
  store %struct.sv** %19, %struct.sv*** @PL_stack_sp, align 8
  %20 = load %struct.op*, %struct.op** @PL_op, align 8
  %op_next = getelementptr inbounds %struct.op, %struct.op* %20, i32 0, i32 0
  %21 = load %struct.op*, %struct.op** %op_next, align 8
  ret %struct.op* %21
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.cv* @Perl_find_runcv(i32* %db_seqp) #0 {
entry:
  %db_seqp.addr = alloca i32*, align 8
  store i32* %db_seqp, i32** %db_seqp.addr, align 8
  %0 = load i32*, i32** %db_seqp.addr, align 8
  %call = call %struct.cv* @Perl_find_runcv_where(i8 zeroext 0, i64 0, i32* %0)
  ret %struct.cv* %call
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.cv* @Perl_find_runcv_where(i8 zeroext %cond, i64 %arg, i32* %db_seqp) #0 {
entry:
  %retval = alloca %struct.cv*, align 8
  %cond.addr = alloca i8, align 1
  %arg.addr = alloca i64, align 8
  %db_seqp.addr = alloca i32*, align 8
  %si = alloca %struct.stackinfo*, align 8
  %level = alloca i32, align 4
  %ix = alloca i32, align 4
  %cx = alloca %struct.context*, align 8
  %cv = alloca %struct.cv*, align 8
  store i8 %cond, i8* %cond.addr, align 1
  store i64 %arg, i64* %arg.addr, align 8
  store i32* %db_seqp, i32** %db_seqp.addr, align 8
  store i32 0, i32* %level, align 4
  %0 = load i32*, i32** %db_seqp.addr, align 8
  %tobool = icmp ne i32* %0, null
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %1 = load %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cmp = icmp eq %struct.cop* %1, @PL_compiling
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.then
  %2 = load i32, i32* @PL_cop_seqmax, align 4
  br label %cond.end

cond.false:                                       ; preds = %if.then
  %3 = load %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_seq = getelementptr inbounds %struct.cop, %struct.cop* %3, i32 0, i32 11
  %4 = load i32, i32* %cop_seq, align 4
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond1 = phi i32 [ %2, %cond.true ], [ %4, %cond.false ]
  %5 = load i32*, i32** %db_seqp.addr, align 8
  store i32 %cond1, i32* %5, align 4
  br label %if.end

if.end:                                           ; preds = %cond.end, %entry
  %6 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  store %struct.stackinfo* %6, %struct.stackinfo** %si, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc79, %if.end
  %7 = load %struct.stackinfo*, %struct.stackinfo** %si, align 8
  %tobool2 = icmp ne %struct.stackinfo* %7, null
  br i1 %tobool2, label %for.body, label %for.end80

for.body:                                         ; preds = %for.cond
  %8 = load %struct.stackinfo*, %struct.stackinfo** %si, align 8
  %si_cxix = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %8, i32 0, i32 4
  %9 = load i32, i32* %si_cxix, align 8
  store i32 %9, i32* %ix, align 4
  br label %for.cond3

for.cond3:                                        ; preds = %for.inc, %for.body
  %10 = load i32, i32* %ix, align 4
  %cmp4 = icmp sge i32 %10, 0
  br i1 %cmp4, label %for.body5, label %for.end

for.body5:                                        ; preds = %for.cond3
  %11 = load %struct.stackinfo*, %struct.stackinfo** %si, align 8
  %si_cxstack = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %11, i32 0, i32 1
  %12 = load %struct.context*, %struct.context** %si_cxstack, align 8
  %13 = load i32, i32* %ix, align 4
  %idxprom = sext i32 %13 to i64
  %arrayidx = getelementptr inbounds %struct.context, %struct.context* %12, i64 %idxprom
  store %struct.context* %arrayidx, %struct.context** %cx, align 8
  store %struct.cv* null, %struct.cv** %cv, align 8
  %14 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u = getelementptr inbounds %struct.context, %struct.context* %14, i32 0, i32 0
  %cx_subst = bitcast %union.anon.16* %cx_u to %struct.subst*
  %sbu_type = getelementptr inbounds %struct.subst, %struct.subst* %cx_subst, i32 0, i32 0
  %15 = load i8, i8* %sbu_type, align 8
  %conv = zext i8 %15 to i32
  %and = and i32 %conv, 15
  %cmp6 = icmp eq i32 %and, 8
  br i1 %cmp6, label %if.then15, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %for.body5
  %16 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u8 = getelementptr inbounds %struct.context, %struct.context* %16, i32 0, i32 0
  %cx_subst9 = bitcast %union.anon.16* %cx_u8 to %struct.subst*
  %sbu_type10 = getelementptr inbounds %struct.subst, %struct.subst* %cx_subst9, i32 0, i32 0
  %17 = load i8, i8* %sbu_type10, align 8
  %conv11 = zext i8 %17 to i32
  %and12 = and i32 %conv11, 15
  %cmp13 = icmp eq i32 %and12, 9
  br i1 %cmp13, label %if.then15, label %if.else

if.then15:                                        ; preds = %lor.lhs.false, %for.body5
  %18 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u16 = getelementptr inbounds %struct.context, %struct.context* %18, i32 0, i32 0
  %cx_blk = bitcast %union.anon.16* %cx_u16 to %struct.block*
  %blk_u = getelementptr inbounds %struct.block, %struct.block* %cx_blk, i32 0, i32 8
  %blku_sub = bitcast %union.anon.20* %blk_u to %struct.block_sub*
  %cv17 = getelementptr inbounds %struct.block_sub, %struct.block_sub* %blku_sub, i32 0, i32 1
  %19 = load %struct.cv*, %struct.cv** %cv17, align 8
  store %struct.cv* %19, %struct.cv** %cv, align 8
  %20 = load i32*, i32** %db_seqp.addr, align 8
  %tobool18 = icmp ne i32* %20, null
  br i1 %tobool18, label %land.lhs.true, label %if.end27

land.lhs.true:                                    ; preds = %if.then15
  %21 = load %struct.hv*, %struct.hv** @PL_debstash, align 8
  %tobool19 = icmp ne %struct.hv* %21, null
  br i1 %tobool19, label %land.lhs.true20, label %if.end27

land.lhs.true20:                                  ; preds = %land.lhs.true
  %22 = load %struct.cv*, %struct.cv** %cv, align 8
  %sv_any = getelementptr inbounds %struct.cv, %struct.cv* %22, i32 0, i32 0
  %23 = load %struct.xpvcv*, %struct.xpvcv** %sv_any, align 8
  %24 = bitcast %struct.xpvcv* %23 to i8*
  %25 = bitcast i8* %24 to %struct.xpvcv*
  %xcv_stash = getelementptr inbounds %struct.xpvcv, %struct.xpvcv* %25, i32 0, i32 4
  %26 = load %struct.hv*, %struct.hv** %xcv_stash, align 8
  %add.ptr = getelementptr inbounds %struct.hv, %struct.hv* %26, i64 0
  %27 = load %struct.hv*, %struct.hv** @PL_debstash, align 8
  %cmp21 = icmp eq %struct.hv* %add.ptr, %27
  br i1 %cmp21, label %if.then23, label %if.end27

if.then23:                                        ; preds = %land.lhs.true20
  %28 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u24 = getelementptr inbounds %struct.context, %struct.context* %28, i32 0, i32 0
  %cx_blk25 = bitcast %union.anon.16* %cx_u24 to %struct.block*
  %blku_oldcop = getelementptr inbounds %struct.block, %struct.block* %cx_blk25, i32 0, i32 4
  %29 = load %struct.cop*, %struct.cop** %blku_oldcop, align 8
  %cop_seq26 = getelementptr inbounds %struct.cop, %struct.cop* %29, i32 0, i32 11
  %30 = load i32, i32* %cop_seq26, align 4
  %31 = load i32*, i32** %db_seqp.addr, align 8
  store i32 %30, i32* %31, align 4
  br label %for.inc

if.end27:                                         ; preds = %land.lhs.true20, %land.lhs.true, %if.then15
  %32 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u28 = getelementptr inbounds %struct.context, %struct.context* %32, i32 0, i32 0
  %cx_subst29 = bitcast %union.anon.16* %cx_u28 to %struct.subst*
  %sbu_type30 = getelementptr inbounds %struct.subst, %struct.subst* %cx_subst29, i32 0, i32 0
  %33 = load i8, i8* %sbu_type30, align 8
  %conv31 = zext i8 %33 to i32
  %and32 = and i32 %conv31, 64
  %tobool33 = icmp ne i32 %and32, 0
  br i1 %tobool33, label %if.then34, label %if.end35

if.then34:                                        ; preds = %if.end27
  br label %for.inc

if.end35:                                         ; preds = %if.end27
  br label %if.end57

if.else:                                          ; preds = %lor.lhs.false
  %34 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u36 = getelementptr inbounds %struct.context, %struct.context* %34, i32 0, i32 0
  %cx_subst37 = bitcast %union.anon.16* %cx_u36 to %struct.subst*
  %sbu_type38 = getelementptr inbounds %struct.subst, %struct.subst* %cx_subst37, i32 0, i32 0
  %35 = load i8, i8* %sbu_type38, align 8
  %conv39 = zext i8 %35 to i32
  %and40 = and i32 %conv39, 15
  %cmp41 = icmp eq i32 %and40, 10
  br i1 %cmp41, label %land.lhs.true43, label %if.end56

land.lhs.true43:                                  ; preds = %if.else
  %36 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u44 = getelementptr inbounds %struct.context, %struct.context* %36, i32 0, i32 0
  %cx_subst45 = bitcast %union.anon.16* %cx_u44 to %struct.subst*
  %sbu_type46 = getelementptr inbounds %struct.subst, %struct.subst* %cx_subst45, i32 0, i32 0
  %37 = load i8, i8* %sbu_type46, align 8
  %conv47 = zext i8 %37 to i32
  %and48 = and i32 %conv47, 79
  %cmp49 = icmp eq i32 %and48, 74
  br i1 %cmp49, label %if.end56, label %if.then51

if.then51:                                        ; preds = %land.lhs.true43
  %38 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u52 = getelementptr inbounds %struct.context, %struct.context* %38, i32 0, i32 0
  %cx_blk53 = bitcast %union.anon.16* %cx_u52 to %struct.block*
  %blk_u54 = getelementptr inbounds %struct.block, %struct.block* %cx_blk53, i32 0, i32 8
  %blku_eval = bitcast %union.anon.20* %blk_u54 to %struct.block_eval*
  %cv55 = getelementptr inbounds %struct.block_eval, %struct.block_eval* %blku_eval, i32 0, i32 4
  %39 = load %struct.cv*, %struct.cv** %cv55, align 8
  store %struct.cv* %39, %struct.cv** %cv, align 8
  br label %if.end56

if.end56:                                         ; preds = %if.then51, %land.lhs.true43, %if.else
  br label %if.end57

if.end57:                                         ; preds = %if.end56, %if.end35
  %40 = load %struct.cv*, %struct.cv** %cv, align 8
  %tobool58 = icmp ne %struct.cv* %40, null
  br i1 %tobool58, label %if.then59, label %if.end78

if.then59:                                        ; preds = %if.end57
  %41 = load i8, i8* %cond.addr, align 1
  %conv60 = zext i8 %41 to i32
  switch i32 %conv60, label %sw.default [
    i32 1, label %sw.bb
    i32 2, label %sw.bb72
  ]

sw.bb:                                            ; preds = %if.then59
  %42 = load %struct.cv*, %struct.cv** %cv, align 8
  %sv_any61 = getelementptr inbounds %struct.cv, %struct.cv* %42, i32 0, i32 0
  %43 = load %struct.xpvcv*, %struct.xpvcv** %sv_any61, align 8
  %44 = bitcast %struct.xpvcv* %43 to i8*
  %45 = bitcast i8* %44 to %struct.xpvcv*
  %xcv_padlist_u = getelementptr inbounds %struct.xpvcv, %struct.xpvcv* %45, i32 0, i32 9
  %xcv_padlist = bitcast %union.anon.13* %xcv_padlist_u to %struct.padlist**
  %46 = load %struct.padlist*, %struct.padlist** %xcv_padlist, align 8
  %tobool62 = icmp ne %struct.padlist* %46, null
  br i1 %tobool62, label %lor.lhs.false63, label %if.then70

lor.lhs.false63:                                  ; preds = %sw.bb
  %47 = load %struct.cv*, %struct.cv** %cv, align 8
  %sv_any64 = getelementptr inbounds %struct.cv, %struct.cv* %47, i32 0, i32 0
  %48 = load %struct.xpvcv*, %struct.xpvcv** %sv_any64, align 8
  %49 = bitcast %struct.xpvcv* %48 to i8*
  %50 = bitcast i8* %49 to %struct.xpvcv*
  %xcv_padlist_u65 = getelementptr inbounds %struct.xpvcv, %struct.xpvcv* %50, i32 0, i32 9
  %xcv_padlist66 = bitcast %union.anon.13* %xcv_padlist_u65 to %struct.padlist**
  %51 = load %struct.padlist*, %struct.padlist** %xcv_padlist66, align 8
  %xpadl_id = getelementptr inbounds %struct.padlist, %struct.padlist* %51, i32 0, i32 2
  %52 = load i32, i32* %xpadl_id, align 8
  %53 = load i64, i64* %arg.addr, align 8
  %conv67 = trunc i64 %53 to i32
  %cmp68 = icmp ne i32 %52, %conv67
  br i1 %cmp68, label %if.then70, label %if.end71

if.then70:                                        ; preds = %lor.lhs.false63, %sw.bb
  br label %for.inc

if.end71:                                         ; preds = %lor.lhs.false63
  %54 = load %struct.cv*, %struct.cv** %cv, align 8
  store %struct.cv* %54, %struct.cv** %retval, align 8
  br label %return

sw.bb72:                                          ; preds = %if.then59
  %55 = load i32, i32* %level, align 4
  %inc = add nsw i32 %55, 1
  store i32 %inc, i32* %level, align 4
  %conv73 = sext i32 %55 to i64
  %56 = load i64, i64* %arg.addr, align 8
  %cmp74 = icmp ne i64 %conv73, %56
  br i1 %cmp74, label %if.then76, label %if.end77

if.then76:                                        ; preds = %sw.bb72
  br label %for.inc

if.end77:                                         ; preds = %sw.bb72
  br label %sw.default

sw.default:                                       ; preds = %if.then59, %if.end77
  %57 = load %struct.cv*, %struct.cv** %cv, align 8
  store %struct.cv* %57, %struct.cv** %retval, align 8
  br label %return

if.end78:                                         ; preds = %if.end57
  br label %for.inc

for.inc:                                          ; preds = %if.end78, %if.then76, %if.then70, %if.then34, %if.then23
  %58 = load i32, i32* %ix, align 4
  %dec = add nsw i32 %58, -1
  store i32 %dec, i32* %ix, align 4
  br label %for.cond3

for.end:                                          ; preds = %for.cond3
  br label %for.inc79

for.inc79:                                        ; preds = %for.end
  %59 = load %struct.stackinfo*, %struct.stackinfo** %si, align 8
  %si_prev = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %59, i32 0, i32 2
  %60 = load %struct.stackinfo*, %struct.stackinfo** %si_prev, align 8
  store %struct.stackinfo* %60, %struct.stackinfo** %si, align 8
  br label %for.cond

for.end80:                                        ; preds = %for.cond
  %61 = load i8, i8* %cond.addr, align 1
  %conv81 = zext i8 %61 to i32
  %cmp82 = icmp eq i32 %conv81, 1
  br i1 %cmp82, label %cond.true84, label %cond.false85

cond.true84:                                      ; preds = %for.end80
  br label %cond.end86

cond.false85:                                     ; preds = %for.end80
  %62 = load %struct.cv*, %struct.cv** @PL_main_cv, align 8
  br label %cond.end86

cond.end86:                                       ; preds = %cond.false85, %cond.true84
  %cond87 = phi %struct.cv* [ null, %cond.true84 ], [ %62, %cond.false85 ]
  store %struct.cv* %cond87, %struct.cv** %retval, align 8
  br label %return

return:                                           ; preds = %cond.end86, %sw.default, %if.end71
  %63 = load %struct.cv*, %struct.cv** %retval, align 8
  ret %struct.cv* %63
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.op* @Perl_pp_require() #0 {
entry:
  %retval = alloca %struct.op*, align 8
  %sp = alloca %struct.sv**, align 8
  %cx = alloca %struct.context*, align 8
  %sv = alloca %struct.sv*, align 8
  %name = alloca i8*, align 8
  %len = alloca i64, align 8
  %unixname = alloca i8*, align 8
  %unixlen = alloca i64, align 8
  %tryname = alloca i8*, align 8
  %namesv = alloca %struct.sv*, align 8
  %gimme = alloca i32, align 4
  %filter_has_file = alloca i32, align 4
  %tryrsfp = alloca %struct._PerlIO**, align 8
  %filter_cache = alloca %struct.sv*, align 8
  %filter_state = alloca %struct.sv*, align 8
  %filter_sub = alloca %struct.sv*, align 8
  %hook_sv = alloca %struct.sv*, align 8
  %op = alloca %struct.op*, align 8
  %saved_errno = alloca i32, align 4
  %path_searchable = alloca i8, align 1
  %first = alloca i32, align 4
  %lav = alloca %struct.av*, align 8
  %req = alloca %struct.sv*, align 8
  %pv = alloca %struct.sv*, align 8
  %hintsv = alloca %struct.sv*, align 8
  %second = alloca i32, align 4
  %svp = alloca %struct.sv**, align 8
  %ar = alloca %struct.av*, align 8
  %i = alloca i64, align 8
  %nsv = alloca %struct.sv*, align 8
  %dirsv = alloca %struct.sv*, align 8
  %count = alloca i32, align 4
  %svp283 = alloca %struct.sv**, align 8
  %loader = alloca %struct.sv*, align 8
  %mark_stack_entry = alloca i32*, align 8
  %l = alloca %struct.sv*, align 8
  %i370 = alloca i32, align 4
  %arg = alloca %struct.sv*, align 8
  %io = alloca %struct.io*, align 8
  %dir = alloca i8*, align 8
  %dirlen = alloca i64, align 8
  %tmp = alloca i8*, align 8
  %ar740 = alloca %struct.av*, align 8
  %i759 = alloca i64, align 8
  %msg = alloca %struct.sv*, align 8
  %inc761 = alloca %struct.sv*, align 8
  %c = alloca i8*, align 8
  %e = alloca i8*, align 8
  %svp832 = alloca %struct.sv**, align 8
  %errsv = alloca %struct.sv*, align 8
  %svp887 = alloca %struct.sv**, align 8
  %fc = alloca %struct.sv*, align 8
  %datasv = alloca %struct.sv*, align 8
  %0 = load %struct.sv**, %struct.sv*** @PL_stack_sp, align 8
  store %struct.sv** %0, %struct.sv*** %sp, align 8
  store i8* null, i8** %tryname, align 8
  store %struct.sv* null, %struct.sv** %namesv, align 8
  %1 = load %struct.op*, %struct.op** @PL_op, align 8
  %op_flags = getelementptr inbounds %struct.op, %struct.op* %1, i32 0, i32 5
  %2 = load i8, i8* %op_flags, align 2
  %conv = zext i8 %2 to i32
  %and = and i32 %conv, 3
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %3 = load %struct.op*, %struct.op** @PL_op, align 8
  %op_flags1 = getelementptr inbounds %struct.op, %struct.op* %3, i32 0, i32 5
  %4 = load i8, i8* %op_flags1, align 2
  %conv2 = zext i8 %4 to i32
  %and3 = and i32 %conv2, 3
  br label %cond.end

cond.false:                                       ; preds = %entry
  %call = call i32 @Perl_block_gimme()
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %and3, %cond.true ], [ %call, %cond.false ]
  store i32 %cond, i32* %gimme, align 4
  store i32 0, i32* %filter_has_file, align 4
  store %struct._PerlIO** null, %struct._PerlIO*** %tryrsfp, align 8
  store %struct.sv* null, %struct.sv** %filter_cache, align 8
  store %struct.sv* null, %struct.sv** %filter_state, align 8
  store %struct.sv* null, %struct.sv** %filter_sub, align 8
  store %struct.sv* null, %struct.sv** %hook_sv, align 8
  %5 = load %struct.sv**, %struct.sv*** %sp, align 8
  %incdec.ptr = getelementptr inbounds %struct.sv*, %struct.sv** %5, i32 -1
  store %struct.sv** %incdec.ptr, %struct.sv*** %sp, align 8
  %6 = load %struct.sv*, %struct.sv** %5, align 8
  store %struct.sv* %6, %struct.sv** %sv, align 8
  %7 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_flags = getelementptr inbounds %struct.sv, %struct.sv* %7, i32 0, i32 2
  %8 = load i32, i32* %sv_flags, align 4
  %and4 = and i32 %8, 2097152
  %tobool5 = icmp ne i32 %and4, 0
  br i1 %tobool5, label %cond.true6, label %cond.false7

cond.true6:                                       ; preds = %cond.end
  br i1 true, label %land.rhs, label %land.end

cond.false7:                                      ; preds = %cond.end
  br i1 false, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %cond.false7, %cond.true6
  %9 = load %struct.sv*, %struct.sv** %sv, align 8
  %call8 = call i32 @Perl_mg_get(%struct.sv* %9)
  %tobool9 = icmp ne i32 %call8, 0
  br label %land.end

land.end:                                         ; preds = %land.rhs, %cond.false7, %cond.true6
  %10 = phi i1 [ false, %cond.false7 ], [ false, %cond.true6 ], [ %tobool9, %land.rhs ]
  %land.ext = zext i1 %10 to i32
  %11 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_flags10 = getelementptr inbounds %struct.sv, %struct.sv* %11, i32 0, i32 2
  %12 = load i32, i32* %sv_flags10, align 4
  %and11 = and i32 %12, 12288
  %tobool12 = icmp ne i32 %and11, 0
  br i1 %tobool12, label %land.lhs.true18, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.end
  %13 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_flags13 = getelementptr inbounds %struct.sv, %struct.sv* %13, i32 0, i32 2
  %14 = load i32, i32* %sv_flags13, align 4
  %and14 = and i32 %14, 14680064
  %tobool15 = icmp ne i32 %and14, 0
  br i1 %tobool15, label %land.lhs.true, label %if.end127

land.lhs.true:                                    ; preds = %lor.lhs.false
  %15 = load %struct.sv*, %struct.sv** %sv, align 8
  %call16 = call %struct.magic* @Perl_mg_find(%struct.sv* %15, i32 86)
  %tobool17 = icmp ne %struct.magic* %call16, null
  br i1 %tobool17, label %land.lhs.true18, label %if.end127

land.lhs.true18:                                  ; preds = %land.lhs.true, %land.end
  %16 = load %struct.op*, %struct.op** @PL_op, align 8
  %op_type = getelementptr inbounds %struct.op, %struct.op* %16, i32 0, i32 4
  %bf.load = load i16, i16* %op_type, align 8
  %bf.clear = and i16 %bf.load, 511
  %bf.cast = zext i16 %bf.clear to i32
  %cmp = icmp ne i32 %bf.cast, 340
  br i1 %cmp, label %if.then, label %if.end127

if.then:                                          ; preds = %land.lhs.true18
  %17 = load %struct.sv*, %struct.sv** %sv, align 8
  %call20 = call %struct.sv* @Perl_new_version(%struct.sv* %17)
  %call21 = call %struct.sv* @Perl_sv_2mortal(%struct.sv* %call20)
  store %struct.sv* %call21, %struct.sv** %sv, align 8
  %18 = load %struct.sv*, %struct.sv** @PL_patchlevel, align 8
  %call22 = call zeroext i1 @Perl_sv_derived_from_pvn(%struct.sv* %18, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.49, i64 0, i64 0), i64 7, i32 0)
  br i1 %call22, label %if.end, label %if.then23

if.then23:                                        ; preds = %if.then
  %19 = load %struct.sv*, %struct.sv** @PL_patchlevel, align 8
  %call24 = call %struct.sv* @Perl_upg_version(%struct.sv* %19, i1 zeroext true)
  br label %if.end

if.end:                                           ; preds = %if.then23, %if.then
  %20 = load %struct.op*, %struct.op** @PL_op, align 8
  %21 = bitcast %struct.op* %20 to %struct.unop*
  %op_first = getelementptr inbounds %struct.unop, %struct.unop* %21, i32 0, i32 7
  %22 = load %struct.op*, %struct.op** %op_first, align 8
  %op_type25 = getelementptr inbounds %struct.op, %struct.op* %22, i32 0, i32 4
  %bf.load26 = load i16, i16* %op_type25, align 8
  %bf.clear27 = and i16 %bf.load26, 511
  %bf.cast28 = zext i16 %bf.clear27 to i32
  %cmp29 = icmp eq i32 %bf.cast28, 5
  br i1 %cmp29, label %land.lhs.true31, label %if.else

land.lhs.true31:                                  ; preds = %if.end
  %23 = load %struct.op*, %struct.op** @PL_op, align 8
  %24 = bitcast %struct.op* %23 to %struct.unop*
  %op_first32 = getelementptr inbounds %struct.unop, %struct.unop* %24, i32 0, i32 7
  %25 = load %struct.op*, %struct.op** %op_first32, align 8
  %op_private = getelementptr inbounds %struct.op, %struct.op* %25, i32 0, i32 6
  %26 = load i8, i8* %op_private, align 1
  %conv33 = zext i8 %26 to i32
  %and34 = and i32 %conv33, 2
  %tobool35 = icmp ne i32 %and34, 0
  br i1 %tobool35, label %if.then36, label %if.else

if.then36:                                        ; preds = %land.lhs.true31
  %27 = load %struct.sv*, %struct.sv** %sv, align 8
  %28 = load %struct.sv*, %struct.sv** @PL_patchlevel, align 8
  %call37 = call i32 @Perl_vcmp(%struct.sv* %27, %struct.sv* %28)
  %cmp38 = icmp sle i32 %call37, 0
  br i1 %cmp38, label %if.then40, label %if.end46

if.then40:                                        ; preds = %if.then36
  %29 = load %struct.sv*, %struct.sv** %sv, align 8
  %call41 = call %struct.sv* @Perl_vnormal(%struct.sv* %29)
  %call42 = call %struct.sv* @Perl_sv_2mortal(%struct.sv* %call41)
  %30 = bitcast %struct.sv* %call42 to i8*
  %31 = load %struct.sv*, %struct.sv** @PL_patchlevel, align 8
  %call43 = call %struct.sv* @Perl_vnormal(%struct.sv* %31)
  %call44 = call %struct.sv* @Perl_sv_2mortal(%struct.sv* %call43)
  %32 = bitcast %struct.sv* %call44 to i8*
  %call45 = call %struct.op* (i8*, ...) @Perl_die(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.50, i64 0, i64 0), i8* %30, i8* %32)
  store %struct.op* %call45, %struct.op** %retval, align 8
  br label %return

if.end46:                                         ; preds = %if.then36
  br label %if.end125

if.else:                                          ; preds = %land.lhs.true31, %if.end
  %33 = load %struct.sv*, %struct.sv** %sv, align 8
  %34 = load %struct.sv*, %struct.sv** @PL_patchlevel, align 8
  %call47 = call i32 @Perl_vcmp(%struct.sv* %33, %struct.sv* %34)
  %cmp48 = icmp sgt i32 %call47, 0
  br i1 %cmp48, label %if.then50, label %if.end124

if.then50:                                        ; preds = %if.else
  store i32 0, i32* %first, align 4
  %35 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_u = getelementptr inbounds %struct.sv, %struct.sv* %35, i32 0, i32 3
  %svu_rv = bitcast %union.anon* %sv_u to %struct.sv**
  %36 = load %struct.sv*, %struct.sv** %svu_rv, align 8
  store %struct.sv* %36, %struct.sv** %req, align 8
  %37 = load %struct.sv*, %struct.sv** %req, align 8
  %38 = bitcast %struct.sv* %37 to i8*
  %39 = bitcast i8* %38 to %struct.hv*
  %call51 = call i8* @Perl_hv_common(%struct.hv* %39, %struct.sv* null, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.51, i64 0, i64 0), i64 8, i32 0, i32 32, %struct.sv* null, i32 0)
  %40 = bitcast i8* %call51 to %struct.sv**
  %41 = load %struct.sv*, %struct.sv** %40, align 8
  store %struct.sv* %41, %struct.sv** %pv, align 8
  %42 = load %struct.sv*, %struct.sv** %req, align 8
  %43 = bitcast %struct.sv* %42 to i8*
  %44 = bitcast i8* %43 to %struct.hv*
  %call52 = call i8* @Perl_hv_common(%struct.hv* %44, %struct.sv* null, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.49, i64 0, i64 0), i64 7, i32 0, i32 32, %struct.sv* null, i32 0)
  %45 = bitcast i8* %call52 to %struct.sv**
  %46 = load %struct.sv*, %struct.sv** %45, align 8
  %sv_u53 = getelementptr inbounds %struct.sv, %struct.sv* %46, i32 0, i32 3
  %svu_rv54 = bitcast %union.anon* %sv_u53 to %struct.sv**
  %47 = load %struct.sv*, %struct.sv** %svu_rv54, align 8
  %48 = bitcast %struct.sv* %47 to i8*
  %49 = bitcast i8* %48 to %struct.av*
  store %struct.av* %49, %struct.av** %lav, align 8
  %50 = load %struct.av*, %struct.av** %lav, align 8
  %call55 = call %struct.sv** @Perl_av_fetch(%struct.av* %50, i64 0, i32 0)
  %51 = load %struct.sv*, %struct.sv** %call55, align 8
  %sv_flags56 = getelementptr inbounds %struct.sv, %struct.sv* %51, i32 0, i32 2
  %52 = load i32, i32* %sv_flags56, align 4
  %and57 = and i32 %52, 2097408
  %cmp58 = icmp eq i32 %and57, 256
  br i1 %cmp58, label %cond.true60, label %cond.false62

cond.true60:                                      ; preds = %if.then50
  %53 = load %struct.av*, %struct.av** %lav, align 8
  %call61 = call %struct.sv** @Perl_av_fetch(%struct.av* %53, i64 0, i32 0)
  %54 = load %struct.sv*, %struct.sv** %call61, align 8
  %sv_any = getelementptr inbounds %struct.sv, %struct.sv* %54, i32 0, i32 0
  %55 = load i8*, i8** %sv_any, align 8
  %56 = bitcast i8* %55 to %struct.xpviv*
  %xiv_u = getelementptr inbounds %struct.xpviv, %struct.xpviv* %56, i32 0, i32 4
  %xivu_iv = bitcast %union._xivu* %xiv_u to i64*
  %57 = load i64, i64* %xivu_iv, align 8
  br label %cond.end65

cond.false62:                                     ; preds = %if.then50
  %58 = load %struct.av*, %struct.av** %lav, align 8
  %call63 = call %struct.sv** @Perl_av_fetch(%struct.av* %58, i64 0, i32 0)
  %59 = load %struct.sv*, %struct.sv** %call63, align 8
  %call64 = call i64 @Perl_sv_2iv_flags(%struct.sv* %59, i32 2)
  br label %cond.end65

cond.end65:                                       ; preds = %cond.false62, %cond.true60
  %cond66 = phi i64 [ %57, %cond.true60 ], [ %call64, %cond.false62 ]
  %conv67 = trunc i64 %cond66 to i32
  store i32 %conv67, i32* %first, align 4
  %60 = load i32, i32* %first, align 4
  %cmp68 = icmp sgt i32 %60, 5
  br i1 %cmp68, label %if.then83, label %lor.lhs.false70

lor.lhs.false70:                                  ; preds = %cond.end65
  %61 = load %struct.sv*, %struct.sv** %req, align 8
  %62 = bitcast %struct.sv* %61 to i8*
  %63 = bitcast i8* %62 to %struct.hv*
  %call71 = call i8* @Perl_hv_common_key_len(%struct.hv* %63, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.52, i64 0, i64 0), i32 2, i32 8, %struct.sv* null, i32 0)
  %tobool72 = icmp ne i8* %call71, null
  br i1 %tobool72, label %cond.true73, label %cond.false74

cond.true73:                                      ; preds = %lor.lhs.false70
  br i1 true, label %if.then83, label %lor.lhs.false75

cond.false74:                                     ; preds = %lor.lhs.false70
  br i1 false, label %if.then83, label %lor.lhs.false75

lor.lhs.false75:                                  ; preds = %cond.false74, %cond.true73
  %64 = load %struct.av*, %struct.av** %lav, align 8
  %call76 = call i64 @S_av_top_index(%struct.av* %64)
  %cmp77 = icmp sgt i64 %call76, 1
  br i1 %cmp77, label %if.then83, label %lor.lhs.false79

lor.lhs.false79:                                  ; preds = %lor.lhs.false75
  %65 = load %struct.sv*, %struct.sv** %pv, align 8
  %sv_u80 = getelementptr inbounds %struct.sv, %struct.sv* %65, i32 0, i32 3
  %svu_pv = bitcast %union.anon* %sv_u80 to i8**
  %66 = load i8*, i8** %svu_pv, align 8
  %call81 = call i8* @strstr(i8* %66, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.53, i64 0, i64 0)) #8
  %tobool82 = icmp ne i8* %call81, null
  br i1 %tobool82, label %if.then83, label %if.else89

if.then83:                                        ; preds = %lor.lhs.false79, %lor.lhs.false75, %cond.false74, %cond.true73, %cond.end65
  %67 = load %struct.sv*, %struct.sv** %req, align 8
  %call84 = call %struct.sv* @Perl_vnormal(%struct.sv* %67)
  %call85 = call %struct.sv* @Perl_sv_2mortal(%struct.sv* %call84)
  %68 = bitcast %struct.sv* %call85 to i8*
  %69 = load %struct.sv*, %struct.sv** @PL_patchlevel, align 8
  %call86 = call %struct.sv* @Perl_vnormal(%struct.sv* %69)
  %call87 = call %struct.sv* @Perl_sv_2mortal(%struct.sv* %call86)
  %70 = bitcast %struct.sv* %call87 to i8*
  %call88 = call %struct.op* (i8*, ...) @Perl_die(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.54, i64 0, i64 0), i8* %68, i8* %70)
  store %struct.op* %call88, %struct.op** %retval, align 8
  br label %return

if.else89:                                        ; preds = %lor.lhs.false79
  store i32 0, i32* %second, align 4
  %71 = load %struct.av*, %struct.av** %lav, align 8
  %call90 = call i64 @S_av_top_index(%struct.av* %71)
  %cmp91 = icmp sge i64 %call90, 1
  br i1 %cmp91, label %if.then93, label %if.end110

if.then93:                                        ; preds = %if.else89
  %72 = load %struct.av*, %struct.av** %lav, align 8
  %call94 = call %struct.sv** @Perl_av_fetch(%struct.av* %72, i64 1, i32 0)
  %73 = load %struct.sv*, %struct.sv** %call94, align 8
  %sv_flags95 = getelementptr inbounds %struct.sv, %struct.sv* %73, i32 0, i32 2
  %74 = load i32, i32* %sv_flags95, align 4
  %and96 = and i32 %74, 2097408
  %cmp97 = icmp eq i32 %and96, 256
  br i1 %cmp97, label %cond.true99, label %cond.false104

cond.true99:                                      ; preds = %if.then93
  %75 = load %struct.av*, %struct.av** %lav, align 8
  %call100 = call %struct.sv** @Perl_av_fetch(%struct.av* %75, i64 1, i32 0)
  %76 = load %struct.sv*, %struct.sv** %call100, align 8
  %sv_any101 = getelementptr inbounds %struct.sv, %struct.sv* %76, i32 0, i32 0
  %77 = load i8*, i8** %sv_any101, align 8
  %78 = bitcast i8* %77 to %struct.xpviv*
  %xiv_u102 = getelementptr inbounds %struct.xpviv, %struct.xpviv* %78, i32 0, i32 4
  %xivu_iv103 = bitcast %union._xivu* %xiv_u102 to i64*
  %79 = load i64, i64* %xivu_iv103, align 8
  br label %cond.end107

cond.false104:                                    ; preds = %if.then93
  %80 = load %struct.av*, %struct.av** %lav, align 8
  %call105 = call %struct.sv** @Perl_av_fetch(%struct.av* %80, i64 1, i32 0)
  %81 = load %struct.sv*, %struct.sv** %call105, align 8
  %call106 = call i64 @Perl_sv_2iv_flags(%struct.sv* %81, i32 2)
  br label %cond.end107

cond.end107:                                      ; preds = %cond.false104, %cond.true99
  %cond108 = phi i64 [ %79, %cond.true99 ], [ %call106, %cond.false104 ]
  %conv109 = trunc i64 %cond108 to i32
  store i32 %conv109, i32* %second, align 4
  br label %if.end110

if.end110:                                        ; preds = %cond.end107, %if.else89
  %82 = load i32, i32* %second, align 4
  %cmp111 = icmp sge i32 %82, 600
  %83 = zext i1 %cmp111 to i64
  %cond113 = select i1 %cmp111, i32 100, i32 10
  %84 = load i32, i32* %second, align 4
  %div = sdiv i32 %84, %cond113
  store i32 %div, i32* %second, align 4
  %85 = load i32, i32* %first, align 4
  %86 = load i32, i32* %second, align 4
  %call114 = call %struct.sv* (i8*, ...) @Perl_newSVpvf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.55, i64 0, i64 0), i32 %85, i32 %86)
  store %struct.sv* %call114, %struct.sv** %hintsv, align 8
  %87 = load %struct.sv*, %struct.sv** %hintsv, align 8
  %call115 = call %struct.sv* @Perl_upg_version(%struct.sv* %87, i1 zeroext true)
  %88 = load %struct.sv*, %struct.sv** %req, align 8
  %call116 = call %struct.sv* @Perl_vnormal(%struct.sv* %88)
  %call117 = call %struct.sv* @Perl_sv_2mortal(%struct.sv* %call116)
  %89 = bitcast %struct.sv* %call117 to i8*
  %90 = load %struct.sv*, %struct.sv** %hintsv, align 8
  %call118 = call %struct.sv* @Perl_sv_2mortal(%struct.sv* %90)
  %call119 = call %struct.sv* @Perl_vnormal(%struct.sv* %call118)
  %call120 = call %struct.sv* @Perl_sv_2mortal(%struct.sv* %call119)
  %91 = bitcast %struct.sv* %call120 to i8*
  %92 = load %struct.sv*, %struct.sv** @PL_patchlevel, align 8
  %call121 = call %struct.sv* @Perl_vnormal(%struct.sv* %92)
  %call122 = call %struct.sv* @Perl_sv_2mortal(%struct.sv* %call121)
  %93 = bitcast %struct.sv* %call122 to i8*
  %call123 = call %struct.op* (i8*, ...) @Perl_die(i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.56, i64 0, i64 0), i8* %89, i8* %91, i8* %93)
  store %struct.op* %call123, %struct.op** %retval, align 8
  br label %return

if.end124:                                        ; preds = %if.else
  br label %if.end125

if.end125:                                        ; preds = %if.end124, %if.end46
  %94 = load %struct.sv**, %struct.sv*** %sp, align 8
  %incdec.ptr126 = getelementptr inbounds %struct.sv*, %struct.sv** %94, i32 1
  store %struct.sv** %incdec.ptr126, %struct.sv*** %sp, align 8
  store %struct.sv* @PL_sv_yes, %struct.sv** %incdec.ptr126, align 8
  %95 = load %struct.sv**, %struct.sv*** %sp, align 8
  store %struct.sv** %95, %struct.sv*** @PL_stack_sp, align 8
  %96 = load %struct.op*, %struct.op** @PL_op, align 8
  %op_next = getelementptr inbounds %struct.op, %struct.op* %96, i32 0, i32 0
  %97 = load %struct.op*, %struct.op** %op_next, align 8
  store %struct.op* %97, %struct.op** %retval, align 8
  br label %return

if.end127:                                        ; preds = %land.lhs.true18, %land.lhs.true, %lor.lhs.false
  %98 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_flags128 = getelementptr inbounds %struct.sv, %struct.sv* %98, i32 0, i32 2
  %99 = load i32, i32* %sv_flags128, align 4
  %and129 = and i32 %99, 65280
  %tobool130 = icmp ne i32 %and129, 0
  br i1 %tobool130, label %if.end143, label %lor.lhs.false131

lor.lhs.false131:                                 ; preds = %if.end127
  %100 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_flags132 = getelementptr inbounds %struct.sv, %struct.sv* %100, i32 0, i32 2
  %101 = load i32, i32* %sv_flags132, align 4
  %and133 = and i32 %101, 255
  %cmp134 = icmp eq i32 %and133, 8
  br i1 %cmp134, label %if.end143, label %lor.lhs.false136

lor.lhs.false136:                                 ; preds = %lor.lhs.false131
  %102 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_flags137 = getelementptr inbounds %struct.sv, %struct.sv* %102, i32 0, i32 2
  %103 = load i32, i32* %sv_flags137, align 4
  %and138 = and i32 %103, 16826623
  %cmp139 = icmp eq i32 %and138, 16777226
  br i1 %cmp139, label %if.end143, label %if.then141

if.then141:                                       ; preds = %lor.lhs.false136
  %call142 = call %struct.op* (i8*, ...) @Perl_die(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.57, i64 0, i64 0))
  store %struct.op* %call142, %struct.op** %retval, align 8
  br label %return

if.end143:                                        ; preds = %lor.lhs.false136, %lor.lhs.false131, %if.end127
  %104 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_flags144 = getelementptr inbounds %struct.sv, %struct.sv* %104, i32 0, i32 2
  %105 = load i32, i32* %sv_flags144, align 4
  %and145 = and i32 %105, 2098176
  %cmp146 = icmp eq i32 %and145, 1024
  br i1 %cmp146, label %cond.true148, label %cond.false152

cond.true148:                                     ; preds = %if.end143
  %106 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_any149 = getelementptr inbounds %struct.sv, %struct.sv* %106, i32 0, i32 0
  %107 = load i8*, i8** %sv_any149, align 8
  %108 = bitcast i8* %107 to %struct.xpv*
  %xpv_cur = getelementptr inbounds %struct.xpv, %struct.xpv* %108, i32 0, i32 2
  %109 = load i64, i64* %xpv_cur, align 8
  store i64 %109, i64* %len, align 8
  %110 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_u150 = getelementptr inbounds %struct.sv, %struct.sv* %110, i32 0, i32 3
  %svu_pv151 = bitcast %union.anon* %sv_u150 to i8**
  %111 = load i8*, i8** %svu_pv151, align 8
  %add.ptr = getelementptr inbounds i8, i8* %111, i64 0
  br label %cond.end154

cond.false152:                                    ; preds = %if.end143
  %112 = load %struct.sv*, %struct.sv** %sv, align 8
  %call153 = call i8* @Perl_sv_2pv_flags(%struct.sv* %112, i64* %len, i32 32)
  br label %cond.end154

cond.end154:                                      ; preds = %cond.false152, %cond.true148
  %cond155 = phi i8* [ %add.ptr, %cond.true148 ], [ %call153, %cond.false152 ]
  store i8* %cond155, i8** %name, align 8
  %113 = load i8*, i8** %name, align 8
  %tobool156 = icmp ne i8* %113, null
  br i1 %tobool156, label %land.lhs.true157, label %if.then163

land.lhs.true157:                                 ; preds = %cond.end154
  %114 = load i64, i64* %len, align 8
  %cmp158 = icmp ugt i64 %114, 0
  br i1 %cmp158, label %land.lhs.true160, label %if.then163

land.lhs.true160:                                 ; preds = %land.lhs.true157
  %115 = load i8*, i8** %name, align 8
  %116 = load i8, i8* %115, align 1
  %conv161 = sext i8 %116 to i32
  %tobool162 = icmp ne i32 %conv161, 0
  br i1 %tobool162, label %if.end165, label %if.then163

if.then163:                                       ; preds = %land.lhs.true160, %land.lhs.true157, %cond.end154
  %call164 = call %struct.op* (i8*, ...) @Perl_die(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.57, i64 0, i64 0))
  store %struct.op* %call164, %struct.op** %retval, align 8
  br label %return

if.end165:                                        ; preds = %land.lhs.true160
  %117 = load i8*, i8** %name, align 8
  %118 = load i64, i64* %len, align 8
  %call166 = call zeroext i1 @S_is_safe_syscall(i8* %117, i64 %118, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.58, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.59, i64 0, i64 0))
  br i1 %call166, label %if.end182, label %if.then167

if.then167:                                       ; preds = %if.end165
  %call168 = call %struct.sv* @Perl_newSVpvn_flags(i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.8, i64 0, i64 0), i64 0, i32 524288)
  %119 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_u169 = getelementptr inbounds %struct.sv, %struct.sv* %119, i32 0, i32 3
  %svu_pv170 = bitcast %union.anon* %sv_u169 to i8**
  %120 = load i8*, i8** %svu_pv170, align 8
  %121 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_any171 = getelementptr inbounds %struct.sv, %struct.sv* %121, i32 0, i32 0
  %122 = load i8*, i8** %sv_any171, align 8
  %123 = bitcast i8* %122 to %struct.xpv*
  %xpv_cur172 = getelementptr inbounds %struct.xpv, %struct.xpv* %123, i32 0, i32 2
  %124 = load i64, i64* %xpv_cur172, align 8
  %125 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_any173 = getelementptr inbounds %struct.sv, %struct.sv* %125, i32 0, i32 0
  %126 = load i8*, i8** %sv_any173, align 8
  %127 = bitcast i8* %126 to %struct.xpv*
  %xpv_cur174 = getelementptr inbounds %struct.xpv, %struct.xpv* %127, i32 0, i32 2
  %128 = load i64, i64* %xpv_cur174, align 8
  %mul = mul i64 %128, 2
  %129 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_flags175 = getelementptr inbounds %struct.sv, %struct.sv* %129, i32 0, i32 2
  %130 = load i32, i32* %sv_flags175, align 4
  %and176 = and i32 %130, 536870912
  %tobool177 = icmp ne i32 %and176, 0
  %131 = zext i1 %tobool177 to i64
  %cond178 = select i1 %tobool177, i32 256, i32 0
  %call179 = call i8* @Perl_pv_escape(%struct.sv* %call168, i8* %120, i64 %124, i64 %mul, i64* null, i32 %cond178)
  %call180 = call i8* @strerror(i32 2) #10
  %call181 = call %struct.op* (i8*, ...) @Perl_die(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.60, i64 0, i64 0), i8* %call179, i8* %call180)
  store %struct.op* %call181, %struct.op** %retval, align 8
  br label %return

if.end182:                                        ; preds = %if.end165
  %132 = load i8, i8* @PL_tainting, align 1
  %tobool183 = trunc i8 %132 to i1
  br i1 %tobool183, label %cond.true185, label %cond.false186

cond.true185:                                     ; preds = %if.end182
  br i1 true, label %if.then187, label %if.end188

cond.false186:                                    ; preds = %if.end182
  br i1 false, label %if.then187, label %if.end188

if.then187:                                       ; preds = %cond.false186, %cond.true185
  call void @Perl_taint_proper(i8* null, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.59, i64 0, i64 0))
  br label %if.end188

if.end188:                                        ; preds = %if.then187, %cond.false186, %cond.true185
  %133 = load i8*, i8** %name, align 8
  %call189 = call zeroext i1 @S_path_is_searchable(i8* %133)
  %frombool = zext i1 %call189 to i8
  store i8 %frombool, i8* %path_searchable, align 1
  %134 = load i8*, i8** %name, align 8
  store i8* %134, i8** %unixname, align 8
  %135 = load i64, i64* %len, align 8
  store i64 %135, i64* %unixlen, align 8
  %136 = load %struct.op*, %struct.op** @PL_op, align 8
  %op_type190 = getelementptr inbounds %struct.op, %struct.op* %136, i32 0, i32 4
  %bf.load191 = load i16, i16* %op_type190, align 8
  %bf.clear192 = and i16 %bf.load191, 511
  %bf.cast193 = zext i16 %bf.clear192 to i32
  %cmp194 = icmp eq i32 %bf.cast193, 339
  br i1 %cmp194, label %if.then196, label %if.end225

if.then196:                                       ; preds = %if.end188
  %137 = load %struct.gv*, %struct.gv** @PL_incgv, align 8
  %sv_u197 = getelementptr inbounds %struct.gv, %struct.gv* %137, i32 0, i32 3
  %svu_gp = bitcast %union.anon.4* %sv_u197 to %struct.gp**
  %138 = load %struct.gp*, %struct.gp** %svu_gp, align 8
  %add.ptr198 = getelementptr inbounds %struct.gp, %struct.gp* %138, i64 0
  %gp_hv = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr198, i32 0, i32 5
  %139 = load %struct.hv*, %struct.hv** %gp_hv, align 8
  %tobool199 = icmp ne %struct.hv* %139, null
  br i1 %tobool199, label %cond.true200, label %cond.false205

cond.true200:                                     ; preds = %if.then196
  %140 = load %struct.gv*, %struct.gv** @PL_incgv, align 8
  %sv_u201 = getelementptr inbounds %struct.gv, %struct.gv* %140, i32 0, i32 3
  %svu_gp202 = bitcast %union.anon.4* %sv_u201 to %struct.gp**
  %141 = load %struct.gp*, %struct.gp** %svu_gp202, align 8
  %add.ptr203 = getelementptr inbounds %struct.gp, %struct.gp* %141, i64 0
  %gp_hv204 = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr203, i32 0, i32 5
  %142 = load %struct.hv*, %struct.hv** %gp_hv204, align 8
  br label %cond.end211

cond.false205:                                    ; preds = %if.then196
  %143 = load %struct.gv*, %struct.gv** @PL_incgv, align 8
  %call206 = call %struct.gv* @Perl_gv_add_by_type(%struct.gv* %143, i32 12)
  %sv_u207 = getelementptr inbounds %struct.gv, %struct.gv* %call206, i32 0, i32 3
  %svu_gp208 = bitcast %union.anon.4* %sv_u207 to %struct.gp**
  %144 = load %struct.gp*, %struct.gp** %svu_gp208, align 8
  %add.ptr209 = getelementptr inbounds %struct.gp, %struct.gp* %144, i64 0
  %gp_hv210 = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr209, i32 0, i32 5
  %145 = load %struct.hv*, %struct.hv** %gp_hv210, align 8
  br label %cond.end211

cond.end211:                                      ; preds = %cond.false205, %cond.true200
  %cond212 = phi %struct.hv* [ %142, %cond.true200 ], [ %145, %cond.false205 ]
  %146 = load i8*, i8** %unixname, align 8
  %147 = load i64, i64* %unixlen, align 8
  %conv213 = trunc i64 %147 to i32
  %call214 = call i8* @Perl_hv_common_key_len(%struct.hv* %cond212, i8* %146, i32 %conv213, i32 32, %struct.sv* null, i32 0)
  %148 = bitcast i8* %call214 to %struct.sv**
  store %struct.sv** %148, %struct.sv*** %svp, align 8
  %149 = load %struct.sv**, %struct.sv*** %svp, align 8
  %tobool215 = icmp ne %struct.sv** %149, null
  br i1 %tobool215, label %if.then216, label %if.end224

if.then216:                                       ; preds = %cond.end211
  %150 = load %struct.sv**, %struct.sv*** %svp, align 8
  %151 = load %struct.sv*, %struct.sv** %150, align 8
  %cmp217 = icmp ne %struct.sv* %151, @PL_sv_undef
  br i1 %cmp217, label %if.then219, label %if.else222

if.then219:                                       ; preds = %if.then216
  %152 = load %struct.sv**, %struct.sv*** %sp, align 8
  %incdec.ptr220 = getelementptr inbounds %struct.sv*, %struct.sv** %152, i32 1
  store %struct.sv** %incdec.ptr220, %struct.sv*** %sp, align 8
  store %struct.sv* @PL_sv_yes, %struct.sv** %incdec.ptr220, align 8
  %153 = load %struct.sv**, %struct.sv*** %sp, align 8
  store %struct.sv** %153, %struct.sv*** @PL_stack_sp, align 8
  %154 = load %struct.op*, %struct.op** @PL_op, align 8
  %op_next221 = getelementptr inbounds %struct.op, %struct.op* %154, i32 0, i32 0
  %155 = load %struct.op*, %struct.op** %op_next221, align 8
  store %struct.op* %155, %struct.op** %retval, align 8
  br label %return

if.else222:                                       ; preds = %if.then216
  %156 = load i8*, i8** %unixname, align 8
  %call223 = call %struct.op* (i8*, ...) @Perl_die(i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.61, i64 0, i64 0), i8* %156)
  store %struct.op* %call223, %struct.op** %retval, align 8
  br label %return

if.end224:                                        ; preds = %cond.end211
  br label %if.end225

if.end225:                                        ; preds = %if.end224, %if.end188
  %157 = load i8, i8* %path_searchable, align 1
  %tobool226 = trunc i8 %157 to i1
  br i1 %tobool226, label %if.end229, label %if.then227

if.then227:                                       ; preds = %if.end225
  %158 = load i8*, i8** %name, align 8
  store i8* %158, i8** %tryname, align 8
  %159 = load %struct.sv*, %struct.sv** %sv, align 8
  %call228 = call %struct._PerlIO** @S_doopen_pm(%struct.sv* %159)
  store %struct._PerlIO** %call228, %struct._PerlIO*** %tryrsfp, align 8
  br label %if.end229

if.end229:                                        ; preds = %if.then227, %if.end225
  %160 = load %struct._PerlIO**, %struct._PerlIO*** %tryrsfp, align 8
  %tobool230 = icmp ne %struct._PerlIO** %160, null
  br i1 %tobool230, label %if.end717, label %land.lhs.true231

land.lhs.true231:                                 ; preds = %if.end229
  %call232 = call i32* @__errno_location() #11
  %161 = load i32, i32* %call232, align 4
  %cmp233 = icmp eq i32 %161, 13
  br i1 %cmp233, label %land.lhs.true235, label %if.then237

land.lhs.true235:                                 ; preds = %land.lhs.true231
  %162 = load i8, i8* %path_searchable, align 1
  %tobool236 = trunc i8 %162 to i1
  br i1 %tobool236, label %if.then237, label %if.end717

if.then237:                                       ; preds = %land.lhs.true235, %land.lhs.true231
  %163 = load %struct.gv*, %struct.gv** @PL_incgv, align 8
  %sv_u238 = getelementptr inbounds %struct.gv, %struct.gv* %163, i32 0, i32 3
  %svu_gp239 = bitcast %union.anon.4* %sv_u238 to %struct.gp**
  %164 = load %struct.gp*, %struct.gp** %svu_gp239, align 8
  %add.ptr240 = getelementptr inbounds %struct.gp, %struct.gp* %164, i64 0
  %gp_av = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr240, i32 0, i32 6
  %165 = load %struct.av*, %struct.av** %gp_av, align 8
  %tobool241 = icmp ne %struct.av* %165, null
  br i1 %tobool241, label %cond.true242, label %cond.false247

cond.true242:                                     ; preds = %if.then237
  %166 = load %struct.gv*, %struct.gv** @PL_incgv, align 8
  %sv_u243 = getelementptr inbounds %struct.gv, %struct.gv* %166, i32 0, i32 3
  %svu_gp244 = bitcast %union.anon.4* %sv_u243 to %struct.gp**
  %167 = load %struct.gp*, %struct.gp** %svu_gp244, align 8
  %add.ptr245 = getelementptr inbounds %struct.gp, %struct.gp* %167, i64 0
  %gp_av246 = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr245, i32 0, i32 6
  %168 = load %struct.av*, %struct.av** %gp_av246, align 8
  br label %cond.end253

cond.false247:                                    ; preds = %if.then237
  %169 = load %struct.gv*, %struct.gv** @PL_incgv, align 8
  %call248 = call %struct.gv* @Perl_gv_add_by_type(%struct.gv* %169, i32 11)
  %sv_u249 = getelementptr inbounds %struct.gv, %struct.gv* %call248, i32 0, i32 3
  %svu_gp250 = bitcast %union.anon.4* %sv_u249 to %struct.gp**
  %170 = load %struct.gp*, %struct.gp** %svu_gp250, align 8
  %add.ptr251 = getelementptr inbounds %struct.gp, %struct.gp* %170, i64 0
  %gp_av252 = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr251, i32 0, i32 6
  %171 = load %struct.av*, %struct.av** %gp_av252, align 8
  br label %cond.end253

cond.end253:                                      ; preds = %cond.false247, %cond.true242
  %cond254 = phi %struct.av* [ %168, %cond.true242 ], [ %171, %cond.false247 ]
  store %struct.av* %cond254, %struct.av** %ar, align 8
  %172 = load %struct.sv*, %struct.sv** %sv, align 8
  store %struct.sv* %172, %struct.sv** %nsv, align 8
  %call255 = call %struct.sv* @Perl_newSV_type(i32 3)
  store %struct.sv* %call255, %struct.sv** %namesv, align 8
  store i64 0, i64* %i, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %cond.end253
  %173 = load i64, i64* %i, align 8
  %174 = load %struct.av*, %struct.av** %ar, align 8
  %175 = bitcast %struct.av* %174 to %struct.sv*
  %sv_flags256 = getelementptr inbounds %struct.sv, %struct.sv* %175, i32 0, i32 2
  %176 = load i32, i32* %sv_flags256, align 4
  %and257 = and i32 %176, 8388608
  %tobool258 = icmp ne i32 %and257, 0
  br i1 %tobool258, label %cond.true259, label %cond.false262

cond.true259:                                     ; preds = %for.cond
  %177 = load %struct.av*, %struct.av** %ar, align 8
  %178 = bitcast %struct.av* %177 to i8*
  %179 = bitcast i8* %178 to %struct.sv*
  %call260 = call i32 @Perl_mg_size(%struct.sv* %179)
  %conv261 = sext i32 %call260 to i64
  br label %cond.end264

cond.false262:                                    ; preds = %for.cond
  %180 = load %struct.av*, %struct.av** %ar, align 8
  %sv_any263 = getelementptr inbounds %struct.av, %struct.av* %180, i32 0, i32 0
  %181 = load %struct.xpvav*, %struct.xpvav** %sv_any263, align 8
  %xav_fill = getelementptr inbounds %struct.xpvav, %struct.xpvav* %181, i32 0, i32 2
  %182 = load i64, i64* %xav_fill, align 8
  br label %cond.end264

cond.end264:                                      ; preds = %cond.false262, %cond.true259
  %cond265 = phi i64 [ %conv261, %cond.true259 ], [ %182, %cond.false262 ]
  %cmp266 = icmp sle i64 %173, %cond265
  br i1 %cmp266, label %for.body, label %for.end

for.body:                                         ; preds = %cond.end264
  %183 = load %struct.av*, %struct.av** %ar, align 8
  %184 = load i64, i64* %i, align 8
  %call268 = call %struct.sv** @Perl_av_fetch(%struct.av* %183, i64 %184, i32 1)
  %185 = load %struct.sv*, %struct.sv** %call268, align 8
  store %struct.sv* %185, %struct.sv** %dirsv, align 8
  %186 = load %struct.sv*, %struct.sv** %dirsv, align 8
  %sv_flags269 = getelementptr inbounds %struct.sv, %struct.sv* %186, i32 0, i32 2
  %187 = load i32, i32* %sv_flags269, align 4
  %and270 = and i32 %187, 2097152
  %tobool271 = icmp ne i32 %and270, 0
  br i1 %tobool271, label %cond.true272, label %cond.false273

cond.true272:                                     ; preds = %for.body
  br i1 true, label %land.rhs274, label %land.end277

cond.false273:                                    ; preds = %for.body
  br i1 false, label %land.rhs274, label %land.end277

land.rhs274:                                      ; preds = %cond.false273, %cond.true272
  %188 = load %struct.sv*, %struct.sv** %dirsv, align 8
  %call275 = call i32 @Perl_mg_get(%struct.sv* %188)
  %tobool276 = icmp ne i32 %call275, 0
  br label %land.end277

land.end277:                                      ; preds = %land.rhs274, %cond.false273, %cond.true272
  %189 = phi i1 [ false, %cond.false273 ], [ false, %cond.true272 ], [ %tobool276, %land.rhs274 ]
  %land.ext278 = zext i1 %189 to i32
  %190 = load %struct.sv*, %struct.sv** %dirsv, align 8
  %sv_flags279 = getelementptr inbounds %struct.sv, %struct.sv* %190, i32 0, i32 2
  %191 = load i32, i32* %sv_flags279, align 4
  %and280 = and i32 %191, 2048
  %tobool281 = icmp ne i32 %and280, 0
  br i1 %tobool281, label %if.then282, label %if.else603

if.then282:                                       ; preds = %land.end277
  %192 = load %struct.sv*, %struct.sv** %dirsv, align 8
  store %struct.sv* %192, %struct.sv** %loader, align 8
  %193 = load %struct.sv*, %struct.sv** %loader, align 8
  %sv_u284 = getelementptr inbounds %struct.sv, %struct.sv* %193, i32 0, i32 3
  %svu_rv285 = bitcast %union.anon* %sv_u284 to %struct.sv**
  %194 = load %struct.sv*, %struct.sv** %svu_rv285, align 8
  %sv_flags286 = getelementptr inbounds %struct.sv, %struct.sv* %194, i32 0, i32 2
  %195 = load i32, i32* %sv_flags286, align 4
  %and287 = and i32 %195, 255
  %cmp288 = icmp eq i32 %and287, 11
  br i1 %cmp288, label %land.lhs.true290, label %if.end310

land.lhs.true290:                                 ; preds = %if.then282
  %196 = load %struct.sv*, %struct.sv** %loader, align 8
  %sv_u291 = getelementptr inbounds %struct.sv, %struct.sv* %196, i32 0, i32 3
  %svu_rv292 = bitcast %union.anon* %sv_u291 to %struct.sv**
  %197 = load %struct.sv*, %struct.sv** %svu_rv292, align 8
  %sv_flags293 = getelementptr inbounds %struct.sv, %struct.sv* %197, i32 0, i32 2
  %198 = load i32, i32* %sv_flags293, align 4
  %and294 = and i32 %198, 1048576
  %tobool295 = icmp ne i32 %and294, 0
  br i1 %tobool295, label %if.end310, label %if.then296

if.then296:                                       ; preds = %land.lhs.true290
  %199 = load %struct.sv*, %struct.sv** %loader, align 8
  %sv_u297 = getelementptr inbounds %struct.sv, %struct.sv* %199, i32 0, i32 3
  %svu_rv298 = bitcast %union.anon* %sv_u297 to %struct.sv**
  %200 = load %struct.sv*, %struct.sv** %svu_rv298, align 8
  %201 = bitcast %struct.sv* %200 to i8*
  %202 = bitcast i8* %201 to %struct.av*
  %call299 = call %struct.sv** @Perl_av_fetch(%struct.av* %202, i64 0, i32 1)
  %203 = load %struct.sv*, %struct.sv** %call299, align 8
  store %struct.sv* %203, %struct.sv** %loader, align 8
  %204 = load %struct.sv*, %struct.sv** %loader, align 8
  %sv_flags300 = getelementptr inbounds %struct.sv, %struct.sv* %204, i32 0, i32 2
  %205 = load i32, i32* %sv_flags300, align 4
  %and301 = and i32 %205, 2097152
  %tobool302 = icmp ne i32 %and301, 0
  br i1 %tobool302, label %cond.true303, label %cond.false304

cond.true303:                                     ; preds = %if.then296
  br i1 true, label %land.rhs305, label %land.end308

cond.false304:                                    ; preds = %if.then296
  br i1 false, label %land.rhs305, label %land.end308

land.rhs305:                                      ; preds = %cond.false304, %cond.true303
  %206 = load %struct.sv*, %struct.sv** %loader, align 8
  %call306 = call i32 @Perl_mg_get(%struct.sv* %206)
  %tobool307 = icmp ne i32 %call306, 0
  br label %land.end308

land.end308:                                      ; preds = %land.rhs305, %cond.false304, %cond.true303
  %207 = phi i1 [ false, %cond.false304 ], [ false, %cond.true303 ], [ %tobool307, %land.rhs305 ]
  %land.ext309 = zext i1 %207 to i32
  br label %if.end310

if.end310:                                        ; preds = %land.end308, %land.lhs.true290, %if.then282
  %208 = load %struct.sv*, %struct.sv** %namesv, align 8
  %209 = load %struct.sv*, %struct.sv** %dirsv, align 8
  %sv_u311 = getelementptr inbounds %struct.sv, %struct.sv* %209, i32 0, i32 3
  %svu_rv312 = bitcast %union.anon* %sv_u311 to %struct.sv**
  %210 = load %struct.sv*, %struct.sv** %svu_rv312, align 8
  %211 = ptrtoint %struct.sv* %210 to i64
  %212 = load i8*, i8** %name, align 8
  call void (%struct.sv*, i8*, ...) @Perl_sv_setpvf(%struct.sv* %208, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.62, i64 0, i64 0), i64 %211, i8* %212)
  %213 = load %struct.sv*, %struct.sv** %namesv, align 8
  %sv_u313 = getelementptr inbounds %struct.sv, %struct.sv* %213, i32 0, i32 3
  %svu_pv314 = bitcast %union.anon* %sv_u313 to i8**
  %214 = load i8*, i8** %svu_pv314, align 8
  %add.ptr315 = getelementptr inbounds i8, i8* %214, i64 0
  store i8* %add.ptr315, i8** %tryname, align 8
  store %struct._PerlIO** null, %struct._PerlIO*** %tryrsfp, align 8
  %215 = load %struct.sv*, %struct.sv** %nsv, align 8
  %sv_flags316 = getelementptr inbounds %struct.sv, %struct.sv* %215, i32 0, i32 2
  %216 = load i32, i32* %sv_flags316, align 4
  %and317 = and i32 %216, 131072
  %tobool318 = icmp ne i32 %and317, 0
  br i1 %tobool318, label %if.then319, label %if.end327

if.then319:                                       ; preds = %if.end310
  %call320 = call %struct.sv* @Perl_sv_newmortal()
  store %struct.sv* %call320, %struct.sv** %nsv, align 8
  br label %do.body

do.body:                                          ; preds = %if.then319
  %217 = load %struct.sv*, %struct.sv** %nsv, align 8
  %218 = load %struct.sv*, %struct.sv** %sv, align 8
  %cmp321 = icmp ne %struct.sv* %217, %218
  br i1 %cmp321, label %cond.true323, label %cond.false324

cond.true323:                                     ; preds = %do.body
  br i1 true, label %if.then325, label %if.end326

cond.false324:                                    ; preds = %do.body
  br i1 false, label %if.then325, label %if.end326

if.then325:                                       ; preds = %cond.false324, %cond.true323
  %219 = load %struct.sv*, %struct.sv** %nsv, align 8
  %220 = load %struct.sv*, %struct.sv** %sv, align 8
  call void @Perl_sv_setsv_flags(%struct.sv* %219, %struct.sv* %220, i32 1554)
  br label %if.end326

if.end326:                                        ; preds = %if.then325, %cond.false324, %cond.true323
  br label %do.end

do.end:                                           ; preds = %if.end326
  br label %if.end327

if.end327:                                        ; preds = %do.end, %if.end310
  call void @Perl_push_scope()
  call void @Perl_save_strlen(i64* @PL_tmps_floor)
  %221 = load i64, i64* @PL_tmps_ix, align 8
  store i64 %221, i64* @PL_tmps_floor, align 8
  br label %do.body328

do.body328:                                       ; preds = %if.end327
  %222 = load %struct.sv**, %struct.sv*** @PL_stack_max, align 8
  %223 = load %struct.sv**, %struct.sv*** %sp, align 8
  %sub.ptr.lhs.cast = ptrtoint %struct.sv** %222 to i64
  %sub.ptr.rhs.cast = ptrtoint %struct.sv** %223 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 8
  %cmp329 = icmp slt i64 %sub.ptr.div, 2
  br i1 %cmp329, label %cond.true331, label %cond.false332

cond.true331:                                     ; preds = %do.body328
  br i1 true, label %if.then333, label %if.end335

cond.false332:                                    ; preds = %do.body328
  br i1 false, label %if.then333, label %if.end335

if.then333:                                       ; preds = %cond.false332, %cond.true331
  %224 = load %struct.sv**, %struct.sv*** %sp, align 8
  %225 = load %struct.sv**, %struct.sv*** %sp, align 8
  %call334 = call %struct.sv** @Perl_stack_grow(%struct.sv** %224, %struct.sv** %225, i64 2)
  store %struct.sv** %call334, %struct.sv*** %sp, align 8
  %226 = load %struct.sv**, %struct.sv*** %sp, align 8
  br label %if.end335

if.end335:                                        ; preds = %if.then333, %cond.false332, %cond.true331
  br label %do.end336

do.end336:                                        ; preds = %if.end335
  br label %do.body337

do.body337:                                       ; preds = %do.end336
  %227 = load i32*, i32** @PL_markstack_ptr, align 8
  %incdec.ptr338 = getelementptr inbounds i32, i32* %227, i32 1
  store i32* %incdec.ptr338, i32** @PL_markstack_ptr, align 8
  store i32* %incdec.ptr338, i32** %mark_stack_entry, align 8
  %228 = load i32*, i32** @PL_markstack_max, align 8
  %cmp339 = icmp eq i32* %incdec.ptr338, %228
  br i1 %cmp339, label %cond.true341, label %cond.false342

cond.true341:                                     ; preds = %do.body337
  br i1 true, label %if.then343, label %if.end345

cond.false342:                                    ; preds = %do.body337
  br i1 false, label %if.then343, label %if.end345

if.then343:                                       ; preds = %cond.false342, %cond.true341
  %call344 = call i32* @Perl_markstack_grow()
  store i32* %call344, i32** %mark_stack_entry, align 8
  br label %if.end345

if.end345:                                        ; preds = %if.then343, %cond.false342, %cond.true341
  %229 = load %struct.sv**, %struct.sv*** %sp, align 8
  %230 = load %struct.sv**, %struct.sv*** @PL_stack_base, align 8
  %sub.ptr.lhs.cast346 = ptrtoint %struct.sv** %229 to i64
  %sub.ptr.rhs.cast347 = ptrtoint %struct.sv** %230 to i64
  %sub.ptr.sub348 = sub i64 %sub.ptr.lhs.cast346, %sub.ptr.rhs.cast347
  %sub.ptr.div349 = sdiv exact i64 %sub.ptr.sub348, 8
  %conv350 = trunc i64 %sub.ptr.div349 to i32
  %231 = load i32*, i32** %mark_stack_entry, align 8
  store i32 %conv350, i32* %231, align 4
  br label %do.end351

do.end351:                                        ; preds = %if.end345
  %232 = load %struct.sv*, %struct.sv** %dirsv, align 8
  %233 = load %struct.sv**, %struct.sv*** %sp, align 8
  %incdec.ptr352 = getelementptr inbounds %struct.sv*, %struct.sv** %233, i32 1
  store %struct.sv** %incdec.ptr352, %struct.sv*** %sp, align 8
  store %struct.sv* %232, %struct.sv** %incdec.ptr352, align 8
  %234 = load %struct.sv*, %struct.sv** %nsv, align 8
  %235 = load %struct.sv**, %struct.sv*** %sp, align 8
  %incdec.ptr353 = getelementptr inbounds %struct.sv*, %struct.sv** %235, i32 1
  store %struct.sv** %incdec.ptr353, %struct.sv*** %sp, align 8
  store %struct.sv* %234, %struct.sv** %incdec.ptr353, align 8
  %236 = load %struct.sv**, %struct.sv*** %sp, align 8
  store %struct.sv** %236, %struct.sv*** @PL_stack_sp, align 8
  %237 = load %struct.sv*, %struct.sv** %loader, align 8
  %sv_flags354 = getelementptr inbounds %struct.sv, %struct.sv* %237, i32 0, i32 2
  %238 = load i32, i32* %sv_flags354, align 4
  %and355 = and i32 %238, 2097152
  %tobool356 = icmp ne i32 %and355, 0
  br i1 %tobool356, label %if.then357, label %if.end359

if.then357:                                       ; preds = %do.end351
  %call358 = call %struct.sv* @Perl_sv_newmortal()
  store %struct.sv* %call358, %struct.sv** %l, align 8
  %239 = load %struct.sv*, %struct.sv** %l, align 8
  %240 = load %struct.sv*, %struct.sv** %loader, align 8
  call void @Perl_sv_setsv_flags(%struct.sv* %239, %struct.sv* %240, i32 1536)
  %241 = load %struct.sv*, %struct.sv** %l, align 8
  store %struct.sv* %241, %struct.sv** %loader, align 8
  br label %if.end359

if.end359:                                        ; preds = %if.then357, %do.end351
  %242 = load %struct.sv*, %struct.sv** %loader, align 8
  %call360 = call i32 @Perl_sv_isobject(%struct.sv* %242)
  %tobool361 = icmp ne i32 %call360, 0
  br i1 %tobool361, label %if.then362, label %if.else364

if.then362:                                       ; preds = %if.end359
  %call363 = call i32 @Perl_call_method(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.63, i64 0, i64 0), i32 3)
  store i32 %call363, i32* %count, align 4
  br label %if.end366

if.else364:                                       ; preds = %if.end359
  %243 = load %struct.sv*, %struct.sv** %loader, align 8
  %call365 = call i32 @Perl_call_sv(%struct.sv* %243, i32 3)
  store i32 %call365, i32* %count, align 4
  br label %if.end366

if.end366:                                        ; preds = %if.else364, %if.then362
  %244 = load %struct.sv**, %struct.sv*** @PL_stack_sp, align 8
  store %struct.sv** %244, %struct.sv*** %sp, align 8
  %245 = load i32, i32* %count, align 4
  %cmp367 = icmp sgt i32 %245, 0
  br i1 %cmp367, label %if.then369, label %if.end546

if.then369:                                       ; preds = %if.end366
  store i32 0, i32* %i370, align 4
  %246 = load i32, i32* %count, align 4
  %sub = sub nsw i32 %246, 1
  %247 = load %struct.sv**, %struct.sv*** %sp, align 8
  %idx.ext = sext i32 %sub to i64
  %idx.neg = sub i64 0, %idx.ext
  %add.ptr371 = getelementptr inbounds %struct.sv*, %struct.sv** %247, i64 %idx.neg
  store %struct.sv** %add.ptr371, %struct.sv*** %sp, align 8
  %248 = load %struct.sv**, %struct.sv*** %sp, align 8
  %249 = load i32, i32* %i370, align 4
  %inc = add nsw i32 %249, 1
  store i32 %inc, i32* %i370, align 4
  %idxprom = sext i32 %249 to i64
  %arrayidx = getelementptr inbounds %struct.sv*, %struct.sv** %248, i64 %idxprom
  %250 = load %struct.sv*, %struct.sv** %arrayidx, align 8
  store %struct.sv* %250, %struct.sv** %arg, align 8
  %251 = load %struct.sv*, %struct.sv** %arg, align 8
  %sv_flags372 = getelementptr inbounds %struct.sv, %struct.sv* %251, i32 0, i32 2
  %252 = load i32, i32* %sv_flags372, align 4
  %and373 = and i32 %252, 2048
  %tobool374 = icmp ne i32 %and373, 0
  br i1 %tobool374, label %land.lhs.true375, label %if.end413

land.lhs.true375:                                 ; preds = %if.then369
  %253 = load %struct.sv*, %struct.sv** %arg, align 8
  %sv_u376 = getelementptr inbounds %struct.sv, %struct.sv* %253, i32 0, i32 3
  %svu_rv377 = bitcast %union.anon* %sv_u376 to %struct.sv**
  %254 = load %struct.sv*, %struct.sv** %svu_rv377, align 8
  %sv_flags378 = getelementptr inbounds %struct.sv, %struct.sv* %254, i32 0, i32 2
  %255 = load i32, i32* %sv_flags378, align 4
  %and379 = and i32 %255, 255
  %cmp380 = icmp ule i32 %and379, 10
  br i1 %cmp380, label %land.lhs.true382, label %if.end413

land.lhs.true382:                                 ; preds = %land.lhs.true375
  %256 = load %struct.sv*, %struct.sv** %arg, align 8
  %sv_u383 = getelementptr inbounds %struct.sv, %struct.sv* %256, i32 0, i32 3
  %svu_rv384 = bitcast %union.anon* %sv_u383 to %struct.sv**
  %257 = load %struct.sv*, %struct.sv** %svu_rv384, align 8
  %sv_flags385 = getelementptr inbounds %struct.sv, %struct.sv* %257, i32 0, i32 2
  %258 = load i32, i32* %sv_flags385, align 4
  %and386 = and i32 %258, 49152
  %cmp387 = icmp eq i32 %and386, 32768
  br i1 %cmp387, label %land.lhs.true389, label %if.then403

land.lhs.true389:                                 ; preds = %land.lhs.true382
  %259 = load %struct.sv*, %struct.sv** %arg, align 8
  %sv_u390 = getelementptr inbounds %struct.sv, %struct.sv* %259, i32 0, i32 3
  %svu_rv391 = bitcast %union.anon* %sv_u390 to %struct.sv**
  %260 = load %struct.sv*, %struct.sv** %svu_rv391, align 8
  %sv_flags392 = getelementptr inbounds %struct.sv, %struct.sv* %260, i32 0, i32 2
  %261 = load i32, i32* %sv_flags392, align 4
  %and393 = and i32 %261, 255
  %cmp394 = icmp eq i32 %and393, 9
  br i1 %cmp394, label %if.end413, label %lor.lhs.false396

lor.lhs.false396:                                 ; preds = %land.lhs.true389
  %262 = load %struct.sv*, %struct.sv** %arg, align 8
  %sv_u397 = getelementptr inbounds %struct.sv, %struct.sv* %262, i32 0, i32 3
  %svu_rv398 = bitcast %union.anon* %sv_u397 to %struct.sv**
  %263 = load %struct.sv*, %struct.sv** %svu_rv398, align 8
  %sv_flags399 = getelementptr inbounds %struct.sv, %struct.sv* %263, i32 0, i32 2
  %264 = load i32, i32* %sv_flags399, align 4
  %and400 = and i32 %264, 255
  %cmp401 = icmp eq i32 %and400, 10
  br i1 %cmp401, label %if.end413, label %if.then403

if.then403:                                       ; preds = %lor.lhs.false396, %land.lhs.true382
  %265 = load %struct.sv*, %struct.sv** %arg, align 8
  %sv_u404 = getelementptr inbounds %struct.sv, %struct.sv* %265, i32 0, i32 3
  %svu_rv405 = bitcast %union.anon* %sv_u404 to %struct.sv**
  %266 = load %struct.sv*, %struct.sv** %svu_rv405, align 8
  store %struct.sv* %266, %struct.sv** %filter_cache, align 8
  %267 = load i32, i32* %i370, align 4
  %268 = load i32, i32* %count, align 4
  %cmp406 = icmp slt i32 %267, %268
  br i1 %cmp406, label %if.then408, label %if.end412

if.then408:                                       ; preds = %if.then403
  %269 = load %struct.sv**, %struct.sv*** %sp, align 8
  %270 = load i32, i32* %i370, align 4
  %inc409 = add nsw i32 %270, 1
  store i32 %inc409, i32* %i370, align 4
  %idxprom410 = sext i32 %270 to i64
  %arrayidx411 = getelementptr inbounds %struct.sv*, %struct.sv** %269, i64 %idxprom410
  %271 = load %struct.sv*, %struct.sv** %arrayidx411, align 8
  store %struct.sv* %271, %struct.sv** %arg, align 8
  br label %if.end412

if.end412:                                        ; preds = %if.then408, %if.then403
  br label %if.end413

if.end413:                                        ; preds = %if.end412, %lor.lhs.false396, %land.lhs.true389, %land.lhs.true375, %if.then369
  %272 = load %struct.sv*, %struct.sv** %arg, align 8
  %sv_flags414 = getelementptr inbounds %struct.sv, %struct.sv* %272, i32 0, i32 2
  %273 = load i32, i32* %sv_flags414, align 4
  %and415 = and i32 %273, 2048
  %tobool416 = icmp ne i32 %and415, 0
  br i1 %tobool416, label %land.lhs.true417, label %if.end441

land.lhs.true417:                                 ; preds = %if.end413
  %274 = load %struct.sv*, %struct.sv** %arg, align 8
  %sv_u418 = getelementptr inbounds %struct.sv, %struct.sv* %274, i32 0, i32 3
  %svu_rv419 = bitcast %union.anon* %sv_u418 to %struct.sv**
  %275 = load %struct.sv*, %struct.sv** %svu_rv419, align 8
  %sv_flags420 = getelementptr inbounds %struct.sv, %struct.sv* %275, i32 0, i32 2
  %276 = load i32, i32* %sv_flags420, align 4
  %and421 = and i32 %276, 49152
  %cmp422 = icmp eq i32 %and421, 32768
  br i1 %cmp422, label %land.lhs.true424, label %if.end441

land.lhs.true424:                                 ; preds = %land.lhs.true417
  %277 = load %struct.sv*, %struct.sv** %arg, align 8
  %sv_u425 = getelementptr inbounds %struct.sv, %struct.sv* %277, i32 0, i32 3
  %svu_rv426 = bitcast %union.anon* %sv_u425 to %struct.sv**
  %278 = load %struct.sv*, %struct.sv** %svu_rv426, align 8
  %sv_flags427 = getelementptr inbounds %struct.sv, %struct.sv* %278, i32 0, i32 2
  %279 = load i32, i32* %sv_flags427, align 4
  %and428 = and i32 %279, 255
  %cmp429 = icmp eq i32 %and428, 9
  br i1 %cmp429, label %if.then438, label %lor.lhs.false431

lor.lhs.false431:                                 ; preds = %land.lhs.true424
  %280 = load %struct.sv*, %struct.sv** %arg, align 8
  %sv_u432 = getelementptr inbounds %struct.sv, %struct.sv* %280, i32 0, i32 3
  %svu_rv433 = bitcast %union.anon* %sv_u432 to %struct.sv**
  %281 = load %struct.sv*, %struct.sv** %svu_rv433, align 8
  %sv_flags434 = getelementptr inbounds %struct.sv, %struct.sv* %281, i32 0, i32 2
  %282 = load i32, i32* %sv_flags434, align 4
  %and435 = and i32 %282, 255
  %cmp436 = icmp eq i32 %and435, 10
  br i1 %cmp436, label %if.then438, label %if.end441

if.then438:                                       ; preds = %lor.lhs.false431, %land.lhs.true424
  %283 = load %struct.sv*, %struct.sv** %arg, align 8
  %sv_u439 = getelementptr inbounds %struct.sv, %struct.sv* %283, i32 0, i32 3
  %svu_rv440 = bitcast %union.anon* %sv_u439 to %struct.sv**
  %284 = load %struct.sv*, %struct.sv** %svu_rv440, align 8
  store %struct.sv* %284, %struct.sv** %arg, align 8
  br label %if.end441

if.end441:                                        ; preds = %if.then438, %lor.lhs.false431, %land.lhs.true417, %if.end413
  %285 = load %struct.sv*, %struct.sv** %arg, align 8
  %sv_flags442 = getelementptr inbounds %struct.sv, %struct.sv* %285, i32 0, i32 2
  %286 = load i32, i32* %sv_flags442, align 4
  %and443 = and i32 %286, 49152
  %cmp444 = icmp eq i32 %and443, 32768
  br i1 %cmp444, label %land.lhs.true446, label %if.end510

land.lhs.true446:                                 ; preds = %if.end441
  %287 = load %struct.sv*, %struct.sv** %arg, align 8
  %sv_flags447 = getelementptr inbounds %struct.sv, %struct.sv* %287, i32 0, i32 2
  %288 = load i32, i32* %sv_flags447, align 4
  %and448 = and i32 %288, 255
  %cmp449 = icmp eq i32 %and448, 9
  br i1 %cmp449, label %if.then456, label %lor.lhs.false451

lor.lhs.false451:                                 ; preds = %land.lhs.true446
  %289 = load %struct.sv*, %struct.sv** %arg, align 8
  %sv_flags452 = getelementptr inbounds %struct.sv, %struct.sv* %289, i32 0, i32 2
  %290 = load i32, i32* %sv_flags452, align 4
  %and453 = and i32 %290, 255
  %cmp454 = icmp eq i32 %and453, 10
  br i1 %cmp454, label %if.then456, label %if.end510

if.then456:                                       ; preds = %lor.lhs.false451, %land.lhs.true446
  %291 = load %struct.sv*, %struct.sv** %arg, align 8
  %292 = bitcast %struct.sv* %291 to %struct.gv*
  %tobool457 = icmp ne %struct.gv* %292, null
  br i1 %tobool457, label %land.lhs.true458, label %cond.false477

land.lhs.true458:                                 ; preds = %if.then456
  %293 = load %struct.sv*, %struct.sv** %arg, align 8
  %294 = bitcast %struct.sv* %293 to %struct.gv*
  %295 = bitcast %struct.gv* %294 to %struct.sv*
  %sv_flags459 = getelementptr inbounds %struct.sv, %struct.sv* %295, i32 0, i32 2
  %296 = load i32, i32* %sv_flags459, align 4
  %and460 = and i32 %296, 255
  %cmp461 = icmp eq i32 %and460, 9
  br i1 %cmp461, label %land.lhs.true468, label %lor.lhs.false463

lor.lhs.false463:                                 ; preds = %land.lhs.true458
  %297 = load %struct.sv*, %struct.sv** %arg, align 8
  %298 = bitcast %struct.sv* %297 to %struct.gv*
  %299 = bitcast %struct.gv* %298 to %struct.sv*
  %sv_flags464 = getelementptr inbounds %struct.sv, %struct.sv* %299, i32 0, i32 2
  %300 = load i32, i32* %sv_flags464, align 4
  %and465 = and i32 %300, 255
  %cmp466 = icmp eq i32 %and465, 10
  br i1 %cmp466, label %land.lhs.true468, label %cond.false477

land.lhs.true468:                                 ; preds = %lor.lhs.false463, %land.lhs.true458
  %301 = load %struct.sv*, %struct.sv** %arg, align 8
  %302 = bitcast %struct.sv* %301 to %struct.gv*
  %sv_u469 = getelementptr inbounds %struct.gv, %struct.gv* %302, i32 0, i32 3
  %svu_gp470 = bitcast %union.anon.4* %sv_u469 to %struct.gp**
  %303 = load %struct.gp*, %struct.gp** %svu_gp470, align 8
  %add.ptr471 = getelementptr inbounds %struct.gp, %struct.gp* %303, i64 0
  %tobool472 = icmp ne %struct.gp* %add.ptr471, null
  br i1 %tobool472, label %cond.true473, label %cond.false477

cond.true473:                                     ; preds = %land.lhs.true468
  %304 = load %struct.sv*, %struct.sv** %arg, align 8
  %305 = bitcast %struct.sv* %304 to %struct.gv*
  %sv_u474 = getelementptr inbounds %struct.gv, %struct.gv* %305, i32 0, i32 3
  %svu_gp475 = bitcast %union.anon.4* %sv_u474 to %struct.gp**
  %306 = load %struct.gp*, %struct.gp** %svu_gp475, align 8
  %add.ptr476 = getelementptr inbounds %struct.gp, %struct.gp* %306, i64 0
  %gp_io = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr476, i32 0, i32 1
  %307 = load %struct.io*, %struct.io** %gp_io, align 8
  br label %cond.end478

cond.false477:                                    ; preds = %land.lhs.true468, %lor.lhs.false463, %if.then456
  br label %cond.end478

cond.end478:                                      ; preds = %cond.false477, %cond.true473
  %cond479 = phi %struct.io* [ %307, %cond.true473 ], [ null, %cond.false477 ]
  store %struct.io* %cond479, %struct.io** %io, align 8
  %308 = load i32, i32* %filter_has_file, align 4
  %inc480 = add nsw i32 %308, 1
  store i32 %inc480, i32* %filter_has_file, align 4
  %309 = load %struct.io*, %struct.io** %io, align 8
  %tobool481 = icmp ne %struct.io* %309, null
  br i1 %tobool481, label %if.then482, label %if.end502

if.then482:                                       ; preds = %cond.end478
  %310 = load %struct.io*, %struct.io** %io, align 8
  %sv_u483 = getelementptr inbounds %struct.io, %struct.io* %310, i32 0, i32 3
  %svu_fp = bitcast %union.anon.2* %sv_u483 to %struct._PerlIO***
  %311 = load %struct._PerlIO**, %struct._PerlIO*** %svu_fp, align 8
  store %struct._PerlIO** %311, %struct._PerlIO*** %tryrsfp, align 8
  %312 = load %struct.io*, %struct.io** %io, align 8
  %sv_any484 = getelementptr inbounds %struct.io, %struct.io* %312, i32 0, i32 0
  %313 = load %struct.xpvio*, %struct.xpvio** %sv_any484, align 8
  %xio_ofp = getelementptr inbounds %struct.xpvio, %struct.xpvio* %313, i32 0, i32 5
  %314 = load %struct._PerlIO**, %struct._PerlIO*** %xio_ofp, align 8
  %tobool485 = icmp ne %struct._PerlIO** %314, null
  br i1 %tobool485, label %land.lhs.true486, label %if.end497

land.lhs.true486:                                 ; preds = %if.then482
  %315 = load %struct.io*, %struct.io** %io, align 8
  %sv_any487 = getelementptr inbounds %struct.io, %struct.io* %315, i32 0, i32 0
  %316 = load %struct.xpvio*, %struct.xpvio** %sv_any487, align 8
  %xio_ofp488 = getelementptr inbounds %struct.xpvio, %struct.xpvio* %316, i32 0, i32 5
  %317 = load %struct._PerlIO**, %struct._PerlIO*** %xio_ofp488, align 8
  %318 = load %struct.io*, %struct.io** %io, align 8
  %sv_u489 = getelementptr inbounds %struct.io, %struct.io* %318, i32 0, i32 3
  %svu_fp490 = bitcast %union.anon.2* %sv_u489 to %struct._PerlIO***
  %319 = load %struct._PerlIO**, %struct._PerlIO*** %svu_fp490, align 8
  %cmp491 = icmp ne %struct._PerlIO** %317, %319
  br i1 %cmp491, label %if.then493, label %if.end497

if.then493:                                       ; preds = %land.lhs.true486
  %320 = load %struct.io*, %struct.io** %io, align 8
  %sv_any494 = getelementptr inbounds %struct.io, %struct.io* %320, i32 0, i32 0
  %321 = load %struct.xpvio*, %struct.xpvio** %sv_any494, align 8
  %xio_ofp495 = getelementptr inbounds %struct.xpvio, %struct.xpvio* %321, i32 0, i32 5
  %322 = load %struct._PerlIO**, %struct._PerlIO*** %xio_ofp495, align 8
  %call496 = call i32 @Perl_PerlIO_close(%struct._PerlIO** %322)
  br label %if.end497

if.end497:                                        ; preds = %if.then493, %land.lhs.true486, %if.then482
  %323 = load %struct.io*, %struct.io** %io, align 8
  %sv_u498 = getelementptr inbounds %struct.io, %struct.io* %323, i32 0, i32 3
  %svu_fp499 = bitcast %union.anon.2* %sv_u498 to %struct._PerlIO***
  store %struct._PerlIO** null, %struct._PerlIO*** %svu_fp499, align 8
  %324 = load %struct.io*, %struct.io** %io, align 8
  %sv_any500 = getelementptr inbounds %struct.io, %struct.io* %324, i32 0, i32 0
  %325 = load %struct.xpvio*, %struct.xpvio** %sv_any500, align 8
  %xio_ofp501 = getelementptr inbounds %struct.xpvio, %struct.xpvio* %325, i32 0, i32 5
  store %struct._PerlIO** null, %struct._PerlIO*** %xio_ofp501, align 8
  br label %if.end502

if.end502:                                        ; preds = %if.end497, %cond.end478
  %326 = load i32, i32* %i370, align 4
  %327 = load i32, i32* %count, align 4
  %cmp503 = icmp slt i32 %326, %327
  br i1 %cmp503, label %if.then505, label %if.end509

if.then505:                                       ; preds = %if.end502
  %328 = load %struct.sv**, %struct.sv*** %sp, align 8
  %329 = load i32, i32* %i370, align 4
  %inc506 = add nsw i32 %329, 1
  store i32 %inc506, i32* %i370, align 4
  %idxprom507 = sext i32 %329 to i64
  %arrayidx508 = getelementptr inbounds %struct.sv*, %struct.sv** %328, i64 %idxprom507
  %330 = load %struct.sv*, %struct.sv** %arrayidx508, align 8
  store %struct.sv* %330, %struct.sv** %arg, align 8
  br label %if.end509

if.end509:                                        ; preds = %if.then505, %if.end502
  br label %if.end510

if.end510:                                        ; preds = %if.end509, %lor.lhs.false451, %if.end441
  %331 = load %struct.sv*, %struct.sv** %arg, align 8
  %sv_flags511 = getelementptr inbounds %struct.sv, %struct.sv* %331, i32 0, i32 2
  %332 = load i32, i32* %sv_flags511, align 4
  %and512 = and i32 %332, 2048
  %tobool513 = icmp ne i32 %and512, 0
  br i1 %tobool513, label %land.lhs.true514, label %if.end536

land.lhs.true514:                                 ; preds = %if.end510
  %333 = load %struct.sv*, %struct.sv** %arg, align 8
  %sv_u515 = getelementptr inbounds %struct.sv, %struct.sv* %333, i32 0, i32 3
  %svu_rv516 = bitcast %union.anon* %sv_u515 to %struct.sv**
  %334 = load %struct.sv*, %struct.sv** %svu_rv516, align 8
  %sv_flags517 = getelementptr inbounds %struct.sv, %struct.sv* %334, i32 0, i32 2
  %335 = load i32, i32* %sv_flags517, align 4
  %and518 = and i32 %335, 255
  %cmp519 = icmp eq i32 %and518, 13
  br i1 %cmp519, label %if.then521, label %if.end536

if.then521:                                       ; preds = %land.lhs.true514
  %336 = load %struct.sv*, %struct.sv** %arg, align 8
  store %struct.sv* %336, %struct.sv** %filter_sub, align 8
  %337 = load %struct.sv*, %struct.sv** %filter_sub, align 8
  %338 = bitcast %struct.sv* %337 to i8*
  %339 = bitcast i8* %338 to %struct.sv*
  %sv_refcnt = getelementptr inbounds %struct.sv, %struct.sv* %339, i32 0, i32 1
  %340 = load i32, i32* %sv_refcnt, align 8
  %inc522 = add i32 %340, 1
  store i32 %inc522, i32* %sv_refcnt, align 8
  %341 = load i32, i32* %i370, align 4
  %342 = load i32, i32* %count, align 4
  %cmp523 = icmp slt i32 %341, %342
  br i1 %cmp523, label %if.then525, label %if.end535

if.then525:                                       ; preds = %if.then521
  %343 = load %struct.sv**, %struct.sv*** %sp, align 8
  %344 = load i32, i32* %i370, align 4
  %idxprom526 = sext i32 %344 to i64
  %arrayidx527 = getelementptr inbounds %struct.sv*, %struct.sv** %343, i64 %idxprom526
  %345 = load %struct.sv*, %struct.sv** %arrayidx527, align 8
  store %struct.sv* %345, %struct.sv** %filter_state, align 8
  br label %do.body528

do.body528:                                       ; preds = %if.then525
  %346 = load %struct.sv*, %struct.sv** %filter_state, align 8
  %tobool529 = icmp ne %struct.sv* %346, null
  br i1 %tobool529, label %if.then530, label %if.end533

if.then530:                                       ; preds = %do.body528
  %347 = load %struct.sv*, %struct.sv** %filter_state, align 8
  %sv_refcnt531 = getelementptr inbounds %struct.sv, %struct.sv* %347, i32 0, i32 1
  %348 = load i32, i32* %sv_refcnt531, align 8
  %inc532 = add i32 %348, 1
  store i32 %inc532, i32* %sv_refcnt531, align 8
  br label %if.end533

if.end533:                                        ; preds = %if.then530, %do.body528
  br label %do.end534

do.end534:                                        ; preds = %if.end533
  br label %if.end535

if.end535:                                        ; preds = %do.end534, %if.then521
  br label %if.end536

if.end536:                                        ; preds = %if.end535, %land.lhs.true514, %if.end510
  %349 = load %struct._PerlIO**, %struct._PerlIO*** %tryrsfp, align 8
  %tobool537 = icmp ne %struct._PerlIO** %349, null
  br i1 %tobool537, label %if.end544, label %land.lhs.true538

land.lhs.true538:                                 ; preds = %if.end536
  %350 = load %struct.sv*, %struct.sv** %filter_cache, align 8
  %tobool539 = icmp ne %struct.sv* %350, null
  br i1 %tobool539, label %if.then542, label %lor.lhs.false540

lor.lhs.false540:                                 ; preds = %land.lhs.true538
  %351 = load %struct.sv*, %struct.sv** %filter_sub, align 8
  %tobool541 = icmp ne %struct.sv* %351, null
  br i1 %tobool541, label %if.then542, label %if.end544

if.then542:                                       ; preds = %lor.lhs.false540, %land.lhs.true538
  %call543 = call %struct._PerlIO** @PerlIO_open(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.64, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.65, i64 0, i64 0))
  store %struct._PerlIO** %call543, %struct._PerlIO*** %tryrsfp, align 8
  br label %if.end544

if.end544:                                        ; preds = %if.then542, %lor.lhs.false540, %if.end536
  %352 = load %struct.sv**, %struct.sv*** %sp, align 8
  %incdec.ptr545 = getelementptr inbounds %struct.sv*, %struct.sv** %352, i32 -1
  store %struct.sv** %incdec.ptr545, %struct.sv*** %sp, align 8
  br label %if.end546

if.end546:                                        ; preds = %if.end544, %if.end366
  br label %do.body547

do.body547:                                       ; preds = %if.end546
  %353 = load %struct.sv*, %struct.sv** %filter_cache, align 8
  %tobool548 = icmp ne %struct.sv* %353, null
  br i1 %tobool548, label %if.then549, label %if.end552

if.then549:                                       ; preds = %do.body547
  %354 = load %struct.sv*, %struct.sv** %filter_cache, align 8
  %sv_refcnt550 = getelementptr inbounds %struct.sv, %struct.sv* %354, i32 0, i32 1
  %355 = load i32, i32* %sv_refcnt550, align 8
  %inc551 = add i32 %355, 1
  store i32 %inc551, i32* %sv_refcnt550, align 8
  br label %if.end552

if.end552:                                        ; preds = %if.then549, %do.body547
  br label %do.end553

do.end553:                                        ; preds = %if.end552
  %356 = load %struct.sv**, %struct.sv*** %sp, align 8
  store %struct.sv** %356, %struct.sv*** @PL_stack_sp, align 8
  %357 = load i64, i64* @PL_tmps_ix, align 8
  %358 = load i64, i64* @PL_tmps_floor, align 8
  %cmp554 = icmp sgt i64 %357, %358
  br i1 %cmp554, label %if.then556, label %if.end557

if.then556:                                       ; preds = %do.end553
  call void @Perl_free_tmps()
  br label %if.end557

if.end557:                                        ; preds = %if.then556, %do.end553
  call void @Perl_pop_scope()
  %359 = load %struct.sv*, %struct.sv** %filter_cache, align 8
  %call558 = call %struct.sv* @Perl_sv_2mortal(%struct.sv* %359)
  %360 = load %struct.gv*, %struct.gv** @PL_incgv, align 8
  %sv_u559 = getelementptr inbounds %struct.gv, %struct.gv* %360, i32 0, i32 3
  %svu_gp560 = bitcast %union.anon.4* %sv_u559 to %struct.gp**
  %361 = load %struct.gp*, %struct.gp** %svu_gp560, align 8
  %add.ptr561 = getelementptr inbounds %struct.gp, %struct.gp* %361, i64 0
  %gp_hv562 = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr561, i32 0, i32 5
  %362 = load %struct.hv*, %struct.hv** %gp_hv562, align 8
  %tobool563 = icmp ne %struct.hv* %362, null
  br i1 %tobool563, label %cond.true564, label %cond.false569

cond.true564:                                     ; preds = %if.end557
  %363 = load %struct.gv*, %struct.gv** @PL_incgv, align 8
  %sv_u565 = getelementptr inbounds %struct.gv, %struct.gv* %363, i32 0, i32 3
  %svu_gp566 = bitcast %union.anon.4* %sv_u565 to %struct.gp**
  %364 = load %struct.gp*, %struct.gp** %svu_gp566, align 8
  %add.ptr567 = getelementptr inbounds %struct.gp, %struct.gp* %364, i64 0
  %gp_hv568 = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr567, i32 0, i32 5
  %365 = load %struct.hv*, %struct.hv** %gp_hv568, align 8
  br label %cond.end575

cond.false569:                                    ; preds = %if.end557
  %366 = load %struct.gv*, %struct.gv** @PL_incgv, align 8
  %call570 = call %struct.gv* @Perl_gv_add_by_type(%struct.gv* %366, i32 12)
  %sv_u571 = getelementptr inbounds %struct.gv, %struct.gv* %call570, i32 0, i32 3
  %svu_gp572 = bitcast %union.anon.4* %sv_u571 to %struct.gp**
  %367 = load %struct.gp*, %struct.gp** %svu_gp572, align 8
  %add.ptr573 = getelementptr inbounds %struct.gp, %struct.gp* %367, i64 0
  %gp_hv574 = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr573, i32 0, i32 5
  %368 = load %struct.hv*, %struct.hv** %gp_hv574, align 8
  br label %cond.end575

cond.end575:                                      ; preds = %cond.false569, %cond.true564
  %cond576 = phi %struct.hv* [ %365, %cond.true564 ], [ %368, %cond.false569 ]
  %369 = load i8*, i8** %name, align 8
  %370 = load i64, i64* %len, align 8
  %conv577 = trunc i64 %370 to i32
  %call578 = call i8* @Perl_hv_common_key_len(%struct.hv* %cond576, i8* %369, i32 %conv577, i32 32, %struct.sv* null, i32 0)
  %371 = bitcast i8* %call578 to %struct.sv**
  store %struct.sv** %371, %struct.sv*** %svp283, align 8
  %372 = load %struct.sv**, %struct.sv*** %svp283, align 8
  %tobool579 = icmp ne %struct.sv** %372, null
  br i1 %tobool579, label %if.then580, label %if.end593

if.then580:                                       ; preds = %cond.end575
  %373 = load %struct.sv**, %struct.sv*** %svp283, align 8
  %374 = load %struct.sv*, %struct.sv** %373, align 8
  %sv_flags581 = getelementptr inbounds %struct.sv, %struct.sv* %374, i32 0, i32 2
  %375 = load i32, i32* %sv_flags581, align 4
  %and582 = and i32 %375, 2098176
  %cmp583 = icmp eq i32 %and582, 1024
  br i1 %cmp583, label %cond.true585, label %cond.false589

cond.true585:                                     ; preds = %if.then580
  %376 = load %struct.sv**, %struct.sv*** %svp283, align 8
  %377 = load %struct.sv*, %struct.sv** %376, align 8
  %sv_u586 = getelementptr inbounds %struct.sv, %struct.sv* %377, i32 0, i32 3
  %svu_pv587 = bitcast %union.anon* %sv_u586 to i8**
  %378 = load i8*, i8** %svu_pv587, align 8
  %add.ptr588 = getelementptr inbounds i8, i8* %378, i64 0
  br label %cond.end591

cond.false589:                                    ; preds = %if.then580
  %379 = load %struct.sv**, %struct.sv*** %svp283, align 8
  %380 = load %struct.sv*, %struct.sv** %379, align 8
  %call590 = call i8* @Perl_sv_2pv_flags(%struct.sv* %380, i64* null, i32 34)
  br label %cond.end591

cond.end591:                                      ; preds = %cond.false589, %cond.true585
  %cond592 = phi i8* [ %add.ptr588, %cond.true585 ], [ %call590, %cond.false589 ]
  store i8* %cond592, i8** %tryname, align 8
  br label %if.end593

if.end593:                                        ; preds = %cond.end591, %cond.end575
  %381 = load %struct._PerlIO**, %struct._PerlIO*** %tryrsfp, align 8
  %tobool594 = icmp ne %struct._PerlIO** %381, null
  br i1 %tobool594, label %if.then595, label %if.end596

if.then595:                                       ; preds = %if.end593
  %382 = load %struct.sv*, %struct.sv** %dirsv, align 8
  store %struct.sv* %382, %struct.sv** %hook_sv, align 8
  br label %for.end

if.end596:                                        ; preds = %if.end593
  store i32 0, i32* %filter_has_file, align 4
  store %struct.sv* null, %struct.sv** %filter_cache, align 8
  %383 = load %struct.sv*, %struct.sv** %filter_state, align 8
  %tobool597 = icmp ne %struct.sv* %383, null
  br i1 %tobool597, label %if.then598, label %if.end599

if.then598:                                       ; preds = %if.end596
  %384 = load %struct.sv*, %struct.sv** %filter_state, align 8
  %385 = bitcast %struct.sv* %384 to i8*
  %386 = bitcast i8* %385 to %struct.sv*
  call void @S_SvREFCNT_dec_NN(%struct.sv* %386)
  store %struct.sv* null, %struct.sv** %filter_state, align 8
  br label %if.end599

if.end599:                                        ; preds = %if.then598, %if.end596
  %387 = load %struct.sv*, %struct.sv** %filter_sub, align 8
  %tobool600 = icmp ne %struct.sv* %387, null
  br i1 %tobool600, label %if.then601, label %if.end602

if.then601:                                       ; preds = %if.end599
  %388 = load %struct.sv*, %struct.sv** %filter_sub, align 8
  %389 = bitcast %struct.sv* %388 to i8*
  %390 = bitcast i8* %389 to %struct.sv*
  call void @S_SvREFCNT_dec_NN(%struct.sv* %390)
  store %struct.sv* null, %struct.sv** %filter_sub, align 8
  br label %if.end602

if.end602:                                        ; preds = %if.then601, %if.end599
  br label %if.end715

if.else603:                                       ; preds = %land.end277
  %391 = load i8, i8* %path_searchable, align 1
  %tobool604 = trunc i8 %391 to i1
  br i1 %tobool604, label %if.then605, label %if.end714

if.then605:                                       ; preds = %if.else603
  %392 = load %struct.sv*, %struct.sv** %dirsv, align 8
  %sv_flags606 = getelementptr inbounds %struct.sv, %struct.sv* %392, i32 0, i32 2
  %393 = load i32, i32* %sv_flags606, align 4
  %and607 = and i32 %393, 65280
  %tobool608 = icmp ne i32 %and607, 0
  br i1 %tobool608, label %if.then619, label %lor.lhs.false609

lor.lhs.false609:                                 ; preds = %if.then605
  %394 = load %struct.sv*, %struct.sv** %dirsv, align 8
  %sv_flags610 = getelementptr inbounds %struct.sv, %struct.sv* %394, i32 0, i32 2
  %395 = load i32, i32* %sv_flags610, align 4
  %and611 = and i32 %395, 255
  %cmp612 = icmp eq i32 %and611, 8
  br i1 %cmp612, label %if.then619, label %lor.lhs.false614

lor.lhs.false614:                                 ; preds = %lor.lhs.false609
  %396 = load %struct.sv*, %struct.sv** %dirsv, align 8
  %sv_flags615 = getelementptr inbounds %struct.sv, %struct.sv* %396, i32 0, i32 2
  %397 = load i32, i32* %sv_flags615, align 4
  %and616 = and i32 %397, 16826623
  %cmp617 = icmp eq i32 %and616, 16777226
  br i1 %cmp617, label %if.then619, label %if.else634

if.then619:                                       ; preds = %lor.lhs.false614, %lor.lhs.false609, %if.then605
  %398 = load %struct.sv*, %struct.sv** %dirsv, align 8
  %sv_flags620 = getelementptr inbounds %struct.sv, %struct.sv* %398, i32 0, i32 2
  %399 = load i32, i32* %sv_flags620, align 4
  %and621 = and i32 %399, 2098176
  %cmp622 = icmp eq i32 %and621, 1024
  br i1 %cmp622, label %cond.true624, label %cond.false630

cond.true624:                                     ; preds = %if.then619
  %400 = load %struct.sv*, %struct.sv** %dirsv, align 8
  %sv_any625 = getelementptr inbounds %struct.sv, %struct.sv* %400, i32 0, i32 0
  %401 = load i8*, i8** %sv_any625, align 8
  %402 = bitcast i8* %401 to %struct.xpv*
  %xpv_cur626 = getelementptr inbounds %struct.xpv, %struct.xpv* %402, i32 0, i32 2
  %403 = load i64, i64* %xpv_cur626, align 8
  store i64 %403, i64* %dirlen, align 8
  %404 = load %struct.sv*, %struct.sv** %dirsv, align 8
  %sv_u627 = getelementptr inbounds %struct.sv, %struct.sv* %404, i32 0, i32 3
  %svu_pv628 = bitcast %union.anon* %sv_u627 to i8**
  %405 = load i8*, i8** %svu_pv628, align 8
  %add.ptr629 = getelementptr inbounds i8, i8* %405, i64 0
  br label %cond.end632

cond.false630:                                    ; preds = %if.then619
  %406 = load %struct.sv*, %struct.sv** %dirsv, align 8
  %call631 = call i8* @Perl_sv_2pv_flags(%struct.sv* %406, i64* %dirlen, i32 32)
  br label %cond.end632

cond.end632:                                      ; preds = %cond.false630, %cond.true624
  %cond633 = phi i8* [ %add.ptr629, %cond.true624 ], [ %call631, %cond.false630 ]
  store i8* %cond633, i8** %dir, align 8
  br label %if.end635

if.else634:                                       ; preds = %lor.lhs.false614
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.8, i64 0, i64 0), i8** %dir, align 8
  store i64 0, i64* %dirlen, align 8
  br label %if.end635

if.end635:                                        ; preds = %if.else634, %cond.end632
  %407 = load i8*, i8** %dir, align 8
  %408 = load i64, i64* %dirlen, align 8
  %call636 = call zeroext i1 @S_is_safe_syscall(i8* %407, i64 %408, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.66, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.59, i64 0, i64 0))
  br i1 %call636, label %if.end638, label %if.then637

if.then637:                                       ; preds = %if.end635
  br label %for.inc

if.end638:                                        ; preds = %if.end635
  %409 = load %struct.sv*, %struct.sv** %namesv, align 8
  %sv_flags639 = getelementptr inbounds %struct.sv, %struct.sv* %409, i32 0, i32 2
  %410 = load i32, i32* %sv_flags639, align 4
  %and640 = and i32 %410, 268435456
  %tobool641 = icmp ne i32 %and640, 0
  br i1 %tobool641, label %cond.true647, label %lor.lhs.false642

lor.lhs.false642:                                 ; preds = %if.end638
  %411 = load %struct.sv*, %struct.sv** %namesv, align 8
  %sv_any643 = getelementptr inbounds %struct.sv, %struct.sv* %411, i32 0, i32 0
  %412 = load i8*, i8** %sv_any643, align 8
  %413 = bitcast i8* %412 to %struct.xpv*
  %xpv_len_u = getelementptr inbounds %struct.xpv, %struct.xpv* %413, i32 0, i32 3
  %xpvlenu_len = bitcast %union.anon.26* %xpv_len_u to i64*
  %414 = load i64, i64* %xpvlenu_len, align 8
  %415 = load i64, i64* %dirlen, align 8
  %416 = load i64, i64* %len, align 8
  %add = add i64 %415, %416
  %add644 = add i64 %add, 2
  %cmp645 = icmp ult i64 %414, %add644
  br i1 %cmp645, label %cond.true647, label %cond.false651

cond.true647:                                     ; preds = %lor.lhs.false642, %if.end638
  %417 = load %struct.sv*, %struct.sv** %namesv, align 8
  %418 = load i64, i64* %dirlen, align 8
  %419 = load i64, i64* %len, align 8
  %add648 = add i64 %418, %419
  %add649 = add i64 %add648, 2
  %call650 = call i8* @Perl_sv_grow(%struct.sv* %417, i64 %add649)
  br label %cond.end654

cond.false651:                                    ; preds = %lor.lhs.false642
  %420 = load %struct.sv*, %struct.sv** %namesv, align 8
  %sv_u652 = getelementptr inbounds %struct.sv, %struct.sv* %420, i32 0, i32 3
  %svu_pv653 = bitcast %union.anon* %sv_u652 to i8**
  %421 = load i8*, i8** %svu_pv653, align 8
  br label %cond.end654

cond.end654:                                      ; preds = %cond.false651, %cond.true647
  %cond655 = phi i8* [ %call650, %cond.true647 ], [ %421, %cond.false651 ]
  store i8* %cond655, i8** %tmp, align 8
  %422 = load i8*, i8** %tmp, align 8
  %423 = load i8*, i8** %dir, align 8
  %424 = load i64, i64* %dirlen, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %422, i8* align 1 %423, i64 %424, i1 false)
  %425 = load i64, i64* %dirlen, align 8
  %426 = load i8*, i8** %tmp, align 8
  %add.ptr656 = getelementptr inbounds i8, i8* %426, i64 %425
  store i8* %add.ptr656, i8** %tmp, align 8
  %427 = load i64, i64* %dirlen, align 8
  %tobool657 = icmp ne i64 %427, 0
  br i1 %tobool657, label %lor.lhs.false658, label %if.then663

lor.lhs.false658:                                 ; preds = %cond.end654
  %428 = load i8*, i8** %tmp, align 8
  %add.ptr659 = getelementptr inbounds i8, i8* %428, i64 -1
  %429 = load i8, i8* %add.ptr659, align 1
  %conv660 = sext i8 %429 to i32
  %cmp661 = icmp ne i32 %conv660, 47
  br i1 %cmp661, label %if.then663, label %if.else665

if.then663:                                       ; preds = %lor.lhs.false658, %cond.end654
  %430 = load i8*, i8** %tmp, align 8
  %incdec.ptr664 = getelementptr inbounds i8, i8* %430, i32 1
  store i8* %incdec.ptr664, i8** %tmp, align 8
  store i8 47, i8* %430, align 1
  br label %if.end666

if.else665:                                       ; preds = %lor.lhs.false658
  %431 = load i64, i64* %dirlen, align 8
  %dec = add i64 %431, -1
  store i64 %dec, i64* %dirlen, align 8
  br label %if.end666

if.end666:                                        ; preds = %if.else665, %if.then663
  %432 = load i8*, i8** %tmp, align 8
  %433 = load i8*, i8** %name, align 8
  %434 = load i64, i64* %len, align 8
  %add667 = add i64 %434, 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %432, i8* align 1 %433, i64 %add667, i1 false)
  br label %do.body668

do.body668:                                       ; preds = %if.end666
  %435 = load i64, i64* %dirlen, align 8
  %436 = load i64, i64* %len, align 8
  %add669 = add i64 %435, %436
  %add670 = add i64 %add669, 1
  %437 = load %struct.sv*, %struct.sv** %namesv, align 8
  %sv_any671 = getelementptr inbounds %struct.sv, %struct.sv* %437, i32 0, i32 0
  %438 = load i8*, i8** %sv_any671, align 8
  %439 = bitcast i8* %438 to %struct.xpv*
  %xpv_cur672 = getelementptr inbounds %struct.xpv, %struct.xpv* %439, i32 0, i32 2
  store i64 %add670, i64* %xpv_cur672, align 8
  br label %do.end673

do.end673:                                        ; preds = %do.body668
  %440 = load %struct.sv*, %struct.sv** %namesv, align 8
  %sv_flags674 = getelementptr inbounds %struct.sv, %struct.sv* %440, i32 0, i32 2
  %441 = load i32, i32* %sv_flags674, align 4
  %or = or i32 %441, 17408
  store i32 %or, i32* %sv_flags674, align 4
  %442 = load i8, i8* @PL_tainting, align 1
  %tobool675 = trunc i8 %442 to i1
  br i1 %tobool675, label %cond.true677, label %cond.false678

cond.true677:                                     ; preds = %do.end673
  br i1 true, label %if.then679, label %if.end680

cond.false678:                                    ; preds = %do.end673
  br i1 false, label %if.then679, label %if.end680

if.then679:                                       ; preds = %cond.false678, %cond.true677
  call void @Perl_taint_proper(i8* null, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.59, i64 0, i64 0))
  br label %if.end680

if.end680:                                        ; preds = %if.then679, %cond.false678, %cond.true677
  %443 = load %struct.sv*, %struct.sv** %namesv, align 8
  %sv_u681 = getelementptr inbounds %struct.sv, %struct.sv* %443, i32 0, i32 3
  %svu_pv682 = bitcast %union.anon* %sv_u681 to i8**
  %444 = load i8*, i8** %svu_pv682, align 8
  %add.ptr683 = getelementptr inbounds i8, i8* %444, i64 0
  store i8* %add.ptr683, i8** %tryname, align 8
  %445 = load %struct.sv*, %struct.sv** %namesv, align 8
  %call684 = call %struct._PerlIO** @S_doopen_pm(%struct.sv* %445)
  store %struct._PerlIO** %call684, %struct._PerlIO*** %tryrsfp, align 8
  %446 = load %struct._PerlIO**, %struct._PerlIO*** %tryrsfp, align 8
  %tobool685 = icmp ne %struct._PerlIO** %446, null
  br i1 %tobool685, label %if.then686, label %if.else703

if.then686:                                       ; preds = %if.end680
  %447 = load i8*, i8** %tryname, align 8
  %arrayidx687 = getelementptr inbounds i8, i8* %447, i64 0
  %448 = load i8, i8* %arrayidx687, align 1
  %conv688 = sext i8 %448 to i32
  %cmp689 = icmp eq i32 %conv688, 46
  br i1 %cmp689, label %land.lhs.true691, label %if.end702

land.lhs.true691:                                 ; preds = %if.then686
  %449 = load i8*, i8** %tryname, align 8
  %arrayidx692 = getelementptr inbounds i8, i8* %449, i64 1
  %450 = load i8, i8* %arrayidx692, align 1
  %conv693 = sext i8 %450 to i32
  %cmp694 = icmp eq i32 %conv693, 47
  br i1 %cmp694, label %if.then696, label %if.end702

if.then696:                                       ; preds = %land.lhs.true691
  %451 = load i8*, i8** %tryname, align 8
  %incdec.ptr697 = getelementptr inbounds i8, i8* %451, i32 1
  store i8* %incdec.ptr697, i8** %tryname, align 8
  br label %while.cond

while.cond:                                       ; preds = %while.body, %if.then696
  %452 = load i8*, i8** %tryname, align 8
  %incdec.ptr698 = getelementptr inbounds i8, i8* %452, i32 1
  store i8* %incdec.ptr698, i8** %tryname, align 8
  %453 = load i8, i8* %incdec.ptr698, align 1
  %conv699 = sext i8 %453 to i32
  %cmp700 = icmp eq i32 %conv699, 47
  br i1 %cmp700, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  br label %while.cond

while.end:                                        ; preds = %while.cond
  br label %if.end702

if.end702:                                        ; preds = %while.end, %land.lhs.true691, %if.then686
  br label %for.end

if.else703:                                       ; preds = %if.end680
  %call704 = call i32* @__errno_location() #11
  %454 = load i32, i32* %call704, align 4
  %cmp705 = icmp eq i32 %454, 24
  br i1 %cmp705, label %if.then711, label %lor.lhs.false707

lor.lhs.false707:                                 ; preds = %if.else703
  %call708 = call i32* @__errno_location() #11
  %455 = load i32, i32* %call708, align 4
  %cmp709 = icmp eq i32 %455, 13
  br i1 %cmp709, label %if.then711, label %if.end712

if.then711:                                       ; preds = %lor.lhs.false707, %if.else703
  br label %for.end

if.end712:                                        ; preds = %lor.lhs.false707
  br label %if.end713

if.end713:                                        ; preds = %if.end712
  br label %if.end714

if.end714:                                        ; preds = %if.end713, %if.else603
  br label %if.end715

if.end715:                                        ; preds = %if.end714, %if.end602
  br label %for.inc

for.inc:                                          ; preds = %if.end715, %if.then637
  %456 = load i64, i64* %i, align 8
  %inc716 = add nsw i64 %456, 1
  store i64 %inc716, i64* %i, align 8
  br label %for.cond

for.end:                                          ; preds = %if.then711, %if.end702, %if.then595, %cond.end264
  br label %if.end717

if.end717:                                        ; preds = %for.end, %land.lhs.true235, %if.end229
  %call718 = call i32* @__errno_location() #11
  %457 = load i32, i32* %call718, align 4
  store i32 %457, i32* %saved_errno, align 4
  %458 = load %struct.sv*, %struct.sv** %namesv, align 8
  %call719 = call %struct.sv* @Perl_sv_2mortal(%struct.sv* %458)
  %459 = load %struct._PerlIO**, %struct._PerlIO*** %tryrsfp, align 8
  %tobool720 = icmp ne %struct._PerlIO** %459, null
  br i1 %tobool720, label %if.else860, label %if.then721

if.then721:                                       ; preds = %if.end717
  %460 = load %struct.op*, %struct.op** @PL_op, align 8
  %op_type722 = getelementptr inbounds %struct.op, %struct.op* %460, i32 0, i32 4
  %bf.load723 = load i16, i16* %op_type722, align 8
  %bf.clear724 = and i16 %bf.load723, 511
  %bf.cast725 = zext i16 %bf.clear724 to i32
  %cmp726 = icmp eq i32 %bf.cast725, 339
  br i1 %cmp726, label %if.then728, label %if.end830

if.then728:                                       ; preds = %if.then721
  %461 = load i32, i32* %saved_errno, align 4
  %cmp729 = icmp eq i32 %461, 24
  br i1 %cmp729, label %if.then734, label %lor.lhs.false731

lor.lhs.false731:                                 ; preds = %if.then728
  %462 = load i32, i32* %saved_errno, align 4
  %cmp732 = icmp eq i32 %462, 13
  br i1 %cmp732, label %if.then734, label %if.else737

if.then734:                                       ; preds = %lor.lhs.false731, %if.then728
  %463 = load i8*, i8** %name, align 8
  %464 = load i8*, i8** %tryname, align 8
  %465 = load i32, i32* %saved_errno, align 4
  %call735 = call i8* @strerror(i32 %465) #10
  %call736 = call %struct.op* (i8*, ...) @Perl_die(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.67, i64 0, i64 0), i8* %463, i8* %464, i8* %call735)
  store %struct.op* %call736, %struct.op** %retval, align 8
  br label %return

if.else737:                                       ; preds = %lor.lhs.false731
  %466 = load %struct.sv*, %struct.sv** %namesv, align 8
  %tobool738 = icmp ne %struct.sv* %466, null
  br i1 %tobool738, label %if.then739, label %if.end827

if.then739:                                       ; preds = %if.else737
  %467 = load %struct.gv*, %struct.gv** @PL_incgv, align 8
  %sv_u741 = getelementptr inbounds %struct.gv, %struct.gv* %467, i32 0, i32 3
  %svu_gp742 = bitcast %union.anon.4* %sv_u741 to %struct.gp**
  %468 = load %struct.gp*, %struct.gp** %svu_gp742, align 8
  %add.ptr743 = getelementptr inbounds %struct.gp, %struct.gp* %468, i64 0
  %gp_av744 = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr743, i32 0, i32 6
  %469 = load %struct.av*, %struct.av** %gp_av744, align 8
  %tobool745 = icmp ne %struct.av* %469, null
  br i1 %tobool745, label %cond.true746, label %cond.false751

cond.true746:                                     ; preds = %if.then739
  %470 = load %struct.gv*, %struct.gv** @PL_incgv, align 8
  %sv_u747 = getelementptr inbounds %struct.gv, %struct.gv* %470, i32 0, i32 3
  %svu_gp748 = bitcast %union.anon.4* %sv_u747 to %struct.gp**
  %471 = load %struct.gp*, %struct.gp** %svu_gp748, align 8
  %add.ptr749 = getelementptr inbounds %struct.gp, %struct.gp* %471, i64 0
  %gp_av750 = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr749, i32 0, i32 6
  %472 = load %struct.av*, %struct.av** %gp_av750, align 8
  br label %cond.end757

cond.false751:                                    ; preds = %if.then739
  %473 = load %struct.gv*, %struct.gv** @PL_incgv, align 8
  %call752 = call %struct.gv* @Perl_gv_add_by_type(%struct.gv* %473, i32 11)
  %sv_u753 = getelementptr inbounds %struct.gv, %struct.gv* %call752, i32 0, i32 3
  %svu_gp754 = bitcast %union.anon.4* %sv_u753 to %struct.gp**
  %474 = load %struct.gp*, %struct.gp** %svu_gp754, align 8
  %add.ptr755 = getelementptr inbounds %struct.gp, %struct.gp* %474, i64 0
  %gp_av756 = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr755, i32 0, i32 6
  %475 = load %struct.av*, %struct.av** %gp_av756, align 8
  br label %cond.end757

cond.end757:                                      ; preds = %cond.false751, %cond.true746
  %cond758 = phi %struct.av* [ %472, %cond.true746 ], [ %475, %cond.false751 ]
  store %struct.av* %cond758, %struct.av** %ar740, align 8
  %call760 = call %struct.sv* @Perl_newSVpvn_flags(i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.8, i64 0, i64 0), i64 0, i32 524288)
  store %struct.sv* %call760, %struct.sv** %msg, align 8
  %call762 = call %struct.sv* @Perl_newSVpvn_flags(i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.8, i64 0, i64 0), i64 0, i32 524288)
  store %struct.sv* %call762, %struct.sv** %inc761, align 8
  store i64 0, i64* %i759, align 8
  br label %for.cond763

for.cond763:                                      ; preds = %for.inc779, %cond.end757
  %476 = load i64, i64* %i759, align 8
  %477 = load %struct.av*, %struct.av** %ar740, align 8
  %478 = bitcast %struct.av* %477 to %struct.sv*
  %sv_flags764 = getelementptr inbounds %struct.sv, %struct.sv* %478, i32 0, i32 2
  %479 = load i32, i32* %sv_flags764, align 4
  %and765 = and i32 %479, 8388608
  %tobool766 = icmp ne i32 %and765, 0
  br i1 %tobool766, label %cond.true767, label %cond.false770

cond.true767:                                     ; preds = %for.cond763
  %480 = load %struct.av*, %struct.av** %ar740, align 8
  %481 = bitcast %struct.av* %480 to i8*
  %482 = bitcast i8* %481 to %struct.sv*
  %call768 = call i32 @Perl_mg_size(%struct.sv* %482)
  %conv769 = sext i32 %call768 to i64
  br label %cond.end773

cond.false770:                                    ; preds = %for.cond763
  %483 = load %struct.av*, %struct.av** %ar740, align 8
  %sv_any771 = getelementptr inbounds %struct.av, %struct.av* %483, i32 0, i32 0
  %484 = load %struct.xpvav*, %struct.xpvav** %sv_any771, align 8
  %xav_fill772 = getelementptr inbounds %struct.xpvav, %struct.xpvav* %484, i32 0, i32 2
  %485 = load i64, i64* %xav_fill772, align 8
  br label %cond.end773

cond.end773:                                      ; preds = %cond.false770, %cond.true767
  %cond774 = phi i64 [ %conv769, %cond.true767 ], [ %485, %cond.false770 ]
  %cmp775 = icmp sle i64 %476, %cond774
  br i1 %cmp775, label %for.body777, label %for.end781

for.body777:                                      ; preds = %cond.end773
  %486 = load %struct.sv*, %struct.sv** %inc761, align 8
  call void @Perl_sv_catpvn_flags(%struct.sv* %486, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.68, i64 0, i64 0), i64 1, i32 2)
  %487 = load %struct.sv*, %struct.sv** %inc761, align 8
  %488 = load %struct.av*, %struct.av** %ar740, align 8
  %489 = load i64, i64* %i759, align 8
  %call778 = call %struct.sv** @Perl_av_fetch(%struct.av* %488, i64 %489, i32 1)
  %490 = load %struct.sv*, %struct.sv** %call778, align 8
  call void @Perl_sv_catsv_flags(%struct.sv* %487, %struct.sv* %490, i32 2)
  br label %for.inc779

for.inc779:                                       ; preds = %for.body777
  %491 = load i64, i64* %i759, align 8
  %inc780 = add nsw i64 %491, 1
  store i64 %inc780, i64* %i759, align 8
  br label %for.cond763

for.end781:                                       ; preds = %cond.end773
  %492 = load i64, i64* %len, align 8
  %cmp782 = icmp uge i64 %492, 4
  br i1 %cmp782, label %land.lhs.true784, label %if.else805

land.lhs.true784:                                 ; preds = %for.end781
  %493 = load i8*, i8** %name, align 8
  %494 = load i64, i64* %len, align 8
  %add.ptr785 = getelementptr inbounds i8, i8* %493, i64 %494
  %add.ptr786 = getelementptr inbounds i8, i8* %add.ptr785, i64 -3
  %call787 = call i32 @memcmp(i8* %add.ptr786, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.69, i64 0, i64 0), i64 4) #8
  %tobool788 = icmp ne i32 %call787, 0
  br i1 %tobool788, label %if.else805, label %if.then789

if.then789:                                       ; preds = %land.lhs.true784
  %495 = load i8*, i8** %name, align 8
  %496 = load i64, i64* %len, align 8
  %add.ptr790 = getelementptr inbounds i8, i8* %495, i64 %496
  %add.ptr791 = getelementptr inbounds i8, i8* %add.ptr790, i64 -3
  store i8* %add.ptr791, i8** %e, align 8
  %497 = load %struct.sv*, %struct.sv** %msg, align 8
  call void @Perl_sv_catpv(%struct.sv* %497, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.70, i64 0, i64 0))
  %498 = load i8*, i8** %name, align 8
  store i8* %498, i8** %c, align 8
  br label %for.cond792

for.cond792:                                      ; preds = %for.inc802, %if.then789
  %499 = load i8*, i8** %c, align 8
  %500 = load i8*, i8** %e, align 8
  %cmp793 = icmp ult i8* %499, %500
  br i1 %cmp793, label %for.body795, label %for.end804

for.body795:                                      ; preds = %for.cond792
  %501 = load i8*, i8** %c, align 8
  %502 = load i8, i8* %501, align 1
  %conv796 = sext i8 %502 to i32
  %cmp797 = icmp eq i32 %conv796, 47
  br i1 %cmp797, label %if.then799, label %if.else800

if.then799:                                       ; preds = %for.body795
  %503 = load %struct.sv*, %struct.sv** %msg, align 8
  call void @Perl_sv_catpvn_flags(%struct.sv* %503, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.71, i64 0, i64 0), i64 2, i32 2)
  br label %if.end801

if.else800:                                       ; preds = %for.body795
  %504 = load %struct.sv*, %struct.sv** %msg, align 8
  %505 = load i8*, i8** %c, align 8
  call void @Perl_sv_catpvn_flags(%struct.sv* %504, i8* %505, i64 1, i32 2)
  br label %if.end801

if.end801:                                        ; preds = %if.else800, %if.then799
  br label %for.inc802

for.inc802:                                       ; preds = %if.end801
  %506 = load i8*, i8** %c, align 8
  %incdec.ptr803 = getelementptr inbounds i8, i8* %506, i32 1
  store i8* %incdec.ptr803, i8** %c, align 8
  br label %for.cond792

for.end804:                                       ; preds = %for.cond792
  %507 = load %struct.sv*, %struct.sv** %msg, align 8
  call void @Perl_sv_catpv(%struct.sv* %507, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.72, i64 0, i64 0))
  br label %if.end825

if.else805:                                       ; preds = %land.lhs.true784, %for.end781
  %508 = load i64, i64* %len, align 8
  %cmp806 = icmp uge i64 %508, 2
  br i1 %cmp806, label %land.lhs.true808, label %if.else814

land.lhs.true808:                                 ; preds = %if.else805
  %509 = load i8*, i8** %name, align 8
  %510 = load i64, i64* %len, align 8
  %add.ptr809 = getelementptr inbounds i8, i8* %509, i64 %510
  %add.ptr810 = getelementptr inbounds i8, i8* %add.ptr809, i64 -2
  %call811 = call i32 @memcmp(i8* %add.ptr810, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.73, i64 0, i64 0), i64 3) #8
  %tobool812 = icmp ne i32 %call811, 0
  br i1 %tobool812, label %if.else814, label %if.then813

if.then813:                                       ; preds = %land.lhs.true808
  %511 = load %struct.sv*, %struct.sv** %msg, align 8
  call void @Perl_sv_catpv(%struct.sv* %511, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.74, i64 0, i64 0))
  br label %if.end824

if.else814:                                       ; preds = %land.lhs.true808, %if.else805
  %512 = load i64, i64* %len, align 8
  %cmp815 = icmp uge i64 %512, 3
  br i1 %cmp815, label %land.lhs.true817, label %if.end823

land.lhs.true817:                                 ; preds = %if.else814
  %513 = load i8*, i8** %name, align 8
  %514 = load i64, i64* %len, align 8
  %add.ptr818 = getelementptr inbounds i8, i8* %513, i64 %514
  %add.ptr819 = getelementptr inbounds i8, i8* %add.ptr818, i64 -3
  %call820 = call i32 @memcmp(i8* %add.ptr819, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.75, i64 0, i64 0), i64 4) #8
  %tobool821 = icmp ne i32 %call820, 0
  br i1 %tobool821, label %if.end823, label %if.then822

if.then822:                                       ; preds = %land.lhs.true817
  %515 = load %struct.sv*, %struct.sv** %msg, align 8
  call void @Perl_sv_catpv(%struct.sv* %515, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.76, i64 0, i64 0))
  br label %if.end823

if.end823:                                        ; preds = %if.then822, %land.lhs.true817, %if.else814
  br label %if.end824

if.end824:                                        ; preds = %if.end823, %if.then813
  br label %if.end825

if.end825:                                        ; preds = %if.end824, %for.end804
  %516 = load i8*, i8** %name, align 8
  %517 = load %struct.sv*, %struct.sv** %msg, align 8
  %518 = load %struct.sv*, %struct.sv** %inc761, align 8
  %call826 = call %struct.op* (i8*, ...) @Perl_die(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.77, i64 0, i64 0), i8* %516, %struct.sv* %517, %struct.sv* %518)
  store %struct.op* %call826, %struct.op** %retval, align 8
  br label %return

if.end827:                                        ; preds = %if.else737
  br label %if.end828

if.end828:                                        ; preds = %if.end827
  %519 = load i8*, i8** %name, align 8
  %call829 = call %struct.op* (i8*, ...) @Perl_die(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.78, i64 0, i64 0), i8* %519)
  store %struct.op* %call829, %struct.op** %retval, align 8
  br label %return

if.end830:                                        ; preds = %if.then721
  br label %do.body831

do.body831:                                       ; preds = %if.end830
  %520 = load %struct.gv*, %struct.gv** @PL_errgv, align 8
  %sv_u833 = getelementptr inbounds %struct.gv, %struct.gv* %520, i32 0, i32 3
  %svu_gp834 = bitcast %union.anon.4* %sv_u833 to %struct.gp**
  %521 = load %struct.gp*, %struct.gp** %svu_gp834, align 8
  %add.ptr835 = getelementptr inbounds %struct.gp, %struct.gp* %521, i64 0
  %gp_sv = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr835, i32 0, i32 0
  store %struct.sv** %gp_sv, %struct.sv*** %svp832, align 8
  %522 = load %struct.sv**, %struct.sv*** %svp832, align 8
  %523 = load %struct.sv*, %struct.sv** %522, align 8
  %tobool836 = icmp ne %struct.sv* %523, null
  br i1 %tobool836, label %if.else838, label %if.then837

if.then837:                                       ; preds = %do.body831
  br label %clresv_newemptypv

if.else838:                                       ; preds = %do.body831
  %524 = load %struct.sv**, %struct.sv*** %svp832, align 8
  %525 = load %struct.sv*, %struct.sv** %524, align 8
  %sv_flags839 = getelementptr inbounds %struct.sv, %struct.sv* %525, i32 0, i32 2
  %526 = load i32, i32* %sv_flags839, align 4
  %and840 = and i32 %526, 134283264
  %tobool841 = icmp ne i32 %and840, 0
  br i1 %tobool841, label %if.then842, label %if.else844

if.then842:                                       ; preds = %if.else838
  %527 = load %struct.sv**, %struct.sv*** %svp832, align 8
  %528 = load %struct.sv*, %struct.sv** %527, align 8
  %529 = bitcast %struct.sv* %528 to i8*
  %530 = bitcast i8* %529 to %struct.sv*
  call void @S_SvREFCNT_dec_NN(%struct.sv* %530)
  br label %clresv_newemptypv

clresv_newemptypv:                                ; preds = %if.then842, %if.then837
  %call843 = call %struct.sv* @Perl_newSVpvn(i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.8, i64 0, i64 0), i64 0)
  %531 = load %struct.sv**, %struct.sv*** %svp832, align 8
  store %struct.sv* %call843, %struct.sv** %531, align 8
  br label %if.end855

if.else844:                                       ; preds = %if.else838
  %532 = load %struct.sv**, %struct.sv*** %svp832, align 8
  %533 = load %struct.sv*, %struct.sv** %532, align 8
  store %struct.sv* %533, %struct.sv** %errsv, align 8
  %534 = load %struct.sv*, %struct.sv** %errsv, align 8
  call void @Perl_sv_setpvn(%struct.sv* %534, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.8, i64 0, i64 0), i64 0)
  %535 = load %struct.sv*, %struct.sv** %errsv, align 8
  %sv_flags845 = getelementptr inbounds %struct.sv, %struct.sv* %535, i32 0, i32 2
  %536 = load i32, i32* %sv_flags845, align 4
  %and846 = and i32 %536, 1610547455
  store i32 %and846, i32* %sv_flags845, align 4
  %537 = load %struct.sv*, %struct.sv** %errsv, align 8
  %sv_flags847 = getelementptr inbounds %struct.sv, %struct.sv* %537, i32 0, i32 2
  %538 = load i32, i32* %sv_flags847, align 4
  %or848 = or i32 %538, 17408
  store i32 %or848, i32* %sv_flags847, align 4
  %539 = load %struct.sv*, %struct.sv** %errsv, align 8
  %sv_flags849 = getelementptr inbounds %struct.sv, %struct.sv* %539, i32 0, i32 2
  %540 = load i32, i32* %sv_flags849, align 4
  %and850 = and i32 %540, 14680064
  %tobool851 = icmp ne i32 %and850, 0
  br i1 %tobool851, label %if.then852, label %if.end854

if.then852:                                       ; preds = %if.else844
  %541 = load %struct.sv*, %struct.sv** %errsv, align 8
  %call853 = call i32 @Perl_mg_free(%struct.sv* %541)
  br label %if.end854

if.end854:                                        ; preds = %if.then852, %if.else844
  br label %if.end855

if.end855:                                        ; preds = %if.end854, %clresv_newemptypv
  br label %if.end856

if.end856:                                        ; preds = %if.end855
  br label %do.end857

do.end857:                                        ; preds = %if.end856
  %542 = load %struct.sv**, %struct.sv*** %sp, align 8
  %incdec.ptr858 = getelementptr inbounds %struct.sv*, %struct.sv** %542, i32 1
  store %struct.sv** %incdec.ptr858, %struct.sv*** %sp, align 8
  store %struct.sv* @PL_sv_undef, %struct.sv** %incdec.ptr858, align 8
  %543 = load %struct.sv**, %struct.sv*** %sp, align 8
  store %struct.sv** %543, %struct.sv*** @PL_stack_sp, align 8
  %544 = load %struct.op*, %struct.op** @PL_op, align 8
  %op_next859 = getelementptr inbounds %struct.op, %struct.op* %544, i32 0, i32 0
  %545 = load %struct.op*, %struct.op** %op_next859, align 8
  store %struct.op* %545, %struct.op** %retval, align 8
  br label %return

if.else860:                                       ; preds = %if.end717
  %call861 = call i32* @__errno_location() #11
  store i32 0, i32* %call861, align 4
  br label %if.end862

if.end862:                                        ; preds = %if.else860
  %546 = load %struct.sv*, %struct.sv** %hook_sv, align 8
  %tobool863 = icmp ne %struct.sv* %546, null
  br i1 %tobool863, label %if.else886, label %if.then864

if.then864:                                       ; preds = %if.end862
  %547 = load %struct.gv*, %struct.gv** @PL_incgv, align 8
  %sv_u865 = getelementptr inbounds %struct.gv, %struct.gv* %547, i32 0, i32 3
  %svu_gp866 = bitcast %union.anon.4* %sv_u865 to %struct.gp**
  %548 = load %struct.gp*, %struct.gp** %svu_gp866, align 8
  %add.ptr867 = getelementptr inbounds %struct.gp, %struct.gp* %548, i64 0
  %gp_hv868 = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr867, i32 0, i32 5
  %549 = load %struct.hv*, %struct.hv** %gp_hv868, align 8
  %tobool869 = icmp ne %struct.hv* %549, null
  br i1 %tobool869, label %cond.true870, label %cond.false875

cond.true870:                                     ; preds = %if.then864
  %550 = load %struct.gv*, %struct.gv** @PL_incgv, align 8
  %sv_u871 = getelementptr inbounds %struct.gv, %struct.gv* %550, i32 0, i32 3
  %svu_gp872 = bitcast %union.anon.4* %sv_u871 to %struct.gp**
  %551 = load %struct.gp*, %struct.gp** %svu_gp872, align 8
  %add.ptr873 = getelementptr inbounds %struct.gp, %struct.gp* %551, i64 0
  %gp_hv874 = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr873, i32 0, i32 5
  %552 = load %struct.hv*, %struct.hv** %gp_hv874, align 8
  br label %cond.end881

cond.false875:                                    ; preds = %if.then864
  %553 = load %struct.gv*, %struct.gv** @PL_incgv, align 8
  %call876 = call %struct.gv* @Perl_gv_add_by_type(%struct.gv* %553, i32 12)
  %sv_u877 = getelementptr inbounds %struct.gv, %struct.gv* %call876, i32 0, i32 3
  %svu_gp878 = bitcast %union.anon.4* %sv_u877 to %struct.gp**
  %554 = load %struct.gp*, %struct.gp** %svu_gp878, align 8
  %add.ptr879 = getelementptr inbounds %struct.gp, %struct.gp* %554, i64 0
  %gp_hv880 = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr879, i32 0, i32 5
  %555 = load %struct.hv*, %struct.hv** %gp_hv880, align 8
  br label %cond.end881

cond.end881:                                      ; preds = %cond.false875, %cond.true870
  %cond882 = phi %struct.hv* [ %552, %cond.true870 ], [ %555, %cond.false875 ]
  %556 = load i8*, i8** %unixname, align 8
  %557 = load i64, i64* %unixlen, align 8
  %conv883 = trunc i64 %557 to i32
  %558 = load i8*, i8** %tryname, align 8
  %call884 = call %struct.sv* @Perl_newSVpv(i8* %558, i64 0)
  %call885 = call i8* @Perl_hv_common_key_len(%struct.hv* %cond882, i8* %556, i32 %conv883, i32 36, %struct.sv* %call884, i32 0)
  %559 = bitcast i8* %call885 to %struct.sv**
  br label %if.end932

if.else886:                                       ; preds = %if.end862
  %560 = load %struct.gv*, %struct.gv** @PL_incgv, align 8
  %sv_u888 = getelementptr inbounds %struct.gv, %struct.gv* %560, i32 0, i32 3
  %svu_gp889 = bitcast %union.anon.4* %sv_u888 to %struct.gp**
  %561 = load %struct.gp*, %struct.gp** %svu_gp889, align 8
  %add.ptr890 = getelementptr inbounds %struct.gp, %struct.gp* %561, i64 0
  %gp_hv891 = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr890, i32 0, i32 5
  %562 = load %struct.hv*, %struct.hv** %gp_hv891, align 8
  %tobool892 = icmp ne %struct.hv* %562, null
  br i1 %tobool892, label %cond.true893, label %cond.false898

cond.true893:                                     ; preds = %if.else886
  %563 = load %struct.gv*, %struct.gv** @PL_incgv, align 8
  %sv_u894 = getelementptr inbounds %struct.gv, %struct.gv* %563, i32 0, i32 3
  %svu_gp895 = bitcast %union.anon.4* %sv_u894 to %struct.gp**
  %564 = load %struct.gp*, %struct.gp** %svu_gp895, align 8
  %add.ptr896 = getelementptr inbounds %struct.gp, %struct.gp* %564, i64 0
  %gp_hv897 = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr896, i32 0, i32 5
  %565 = load %struct.hv*, %struct.hv** %gp_hv897, align 8
  br label %cond.end904

cond.false898:                                    ; preds = %if.else886
  %566 = load %struct.gv*, %struct.gv** @PL_incgv, align 8
  %call899 = call %struct.gv* @Perl_gv_add_by_type(%struct.gv* %566, i32 12)
  %sv_u900 = getelementptr inbounds %struct.gv, %struct.gv* %call899, i32 0, i32 3
  %svu_gp901 = bitcast %union.anon.4* %sv_u900 to %struct.gp**
  %567 = load %struct.gp*, %struct.gp** %svu_gp901, align 8
  %add.ptr902 = getelementptr inbounds %struct.gp, %struct.gp* %567, i64 0
  %gp_hv903 = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr902, i32 0, i32 5
  %568 = load %struct.hv*, %struct.hv** %gp_hv903, align 8
  br label %cond.end904

cond.end904:                                      ; preds = %cond.false898, %cond.true893
  %cond905 = phi %struct.hv* [ %565, %cond.true893 ], [ %568, %cond.false898 ]
  %569 = load i8*, i8** %unixname, align 8
  %570 = load i64, i64* %unixlen, align 8
  %conv906 = trunc i64 %570 to i32
  %call907 = call i8* @Perl_hv_common_key_len(%struct.hv* %cond905, i8* %569, i32 %conv906, i32 32, %struct.sv* null, i32 0)
  %571 = bitcast i8* %call907 to %struct.sv**
  store %struct.sv** %571, %struct.sv*** %svp887, align 8
  %572 = load %struct.sv**, %struct.sv*** %svp887, align 8
  %tobool908 = icmp ne %struct.sv** %572, null
  br i1 %tobool908, label %if.end931, label %if.then909

if.then909:                                       ; preds = %cond.end904
  %573 = load %struct.gv*, %struct.gv** @PL_incgv, align 8
  %sv_u910 = getelementptr inbounds %struct.gv, %struct.gv* %573, i32 0, i32 3
  %svu_gp911 = bitcast %union.anon.4* %sv_u910 to %struct.gp**
  %574 = load %struct.gp*, %struct.gp** %svu_gp911, align 8
  %add.ptr912 = getelementptr inbounds %struct.gp, %struct.gp* %574, i64 0
  %gp_hv913 = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr912, i32 0, i32 5
  %575 = load %struct.hv*, %struct.hv** %gp_hv913, align 8
  %tobool914 = icmp ne %struct.hv* %575, null
  br i1 %tobool914, label %cond.true915, label %cond.false920

cond.true915:                                     ; preds = %if.then909
  %576 = load %struct.gv*, %struct.gv** @PL_incgv, align 8
  %sv_u916 = getelementptr inbounds %struct.gv, %struct.gv* %576, i32 0, i32 3
  %svu_gp917 = bitcast %union.anon.4* %sv_u916 to %struct.gp**
  %577 = load %struct.gp*, %struct.gp** %svu_gp917, align 8
  %add.ptr918 = getelementptr inbounds %struct.gp, %struct.gp* %577, i64 0
  %gp_hv919 = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr918, i32 0, i32 5
  %578 = load %struct.hv*, %struct.hv** %gp_hv919, align 8
  br label %cond.end926

cond.false920:                                    ; preds = %if.then909
  %579 = load %struct.gv*, %struct.gv** @PL_incgv, align 8
  %call921 = call %struct.gv* @Perl_gv_add_by_type(%struct.gv* %579, i32 12)
  %sv_u922 = getelementptr inbounds %struct.gv, %struct.gv* %call921, i32 0, i32 3
  %svu_gp923 = bitcast %union.anon.4* %sv_u922 to %struct.gp**
  %580 = load %struct.gp*, %struct.gp** %svu_gp923, align 8
  %add.ptr924 = getelementptr inbounds %struct.gp, %struct.gp* %580, i64 0
  %gp_hv925 = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr924, i32 0, i32 5
  %581 = load %struct.hv*, %struct.hv** %gp_hv925, align 8
  br label %cond.end926

cond.end926:                                      ; preds = %cond.false920, %cond.true915
  %cond927 = phi %struct.hv* [ %578, %cond.true915 ], [ %581, %cond.false920 ]
  %582 = load i8*, i8** %unixname, align 8
  %583 = load i64, i64* %unixlen, align 8
  %conv928 = trunc i64 %583 to i32
  %584 = load %struct.sv*, %struct.sv** %hook_sv, align 8
  %585 = bitcast %struct.sv* %584 to i8*
  %586 = bitcast i8* %585 to %struct.sv*
  %call929 = call %struct.sv* @S_SvREFCNT_inc(%struct.sv* %586)
  %call930 = call i8* @Perl_hv_common_key_len(%struct.hv* %cond927, i8* %582, i32 %conv928, i32 36, %struct.sv* %call929, i32 0)
  %587 = bitcast i8* %call930 to %struct.sv**
  br label %if.end931

if.end931:                                        ; preds = %cond.end926, %cond.end904
  br label %if.end932

if.end932:                                        ; preds = %if.end931, %cond.end881
  call void @Perl_push_scope()
  call void @Perl_save_strlen(i64* @PL_tmps_floor)
  %588 = load i64, i64* @PL_tmps_ix, align 8
  store i64 %588, i64* @PL_tmps_floor, align 8
  call void @Perl_save_generic_svref(%struct.sv** bitcast (%struct.gv** getelementptr inbounds (%struct.cop, %struct.cop* @PL_compiling, i32 0, i32 9) to %struct.sv**))
  %589 = load i8*, i8** %tryname, align 8
  %call933 = call %struct.gv* @Perl_gv_fetchfile(i8* %589)
  %590 = bitcast %struct.gv* %call933 to i8*
  %591 = bitcast i8* %590 to %struct.sv*
  %call934 = call %struct.sv* @S_SvREFCNT_inc(%struct.sv* %591)
  %592 = bitcast %struct.sv* %call934 to %struct.gv*
  store %struct.gv* %592, %struct.gv** getelementptr inbounds (%struct.cop, %struct.cop* @PL_compiling, i32 0, i32 9), align 8
  %593 = load %struct._PerlIO**, %struct._PerlIO*** %tryrsfp, align 8
  call void @Perl_lex_start(%struct.sv* null, %struct._PerlIO** %593, i32 0)
  %594 = load %struct.sv*, %struct.sv** %filter_sub, align 8
  %tobool935 = icmp ne %struct.sv* %594, null
  br i1 %tobool935, label %if.then938, label %lor.lhs.false936

lor.lhs.false936:                                 ; preds = %if.end932
  %595 = load %struct.sv*, %struct.sv** %filter_cache, align 8
  %tobool937 = icmp ne %struct.sv* %595, null
  br i1 %tobool937, label %if.then938, label %if.end955

if.then938:                                       ; preds = %lor.lhs.false936, %if.end932
  %596 = load %struct.sv*, %struct.sv** %filter_cache, align 8
  %tobool939 = icmp ne %struct.sv* %596, null
  br i1 %tobool939, label %cond.true940, label %cond.false942

cond.true940:                                     ; preds = %if.then938
  %call941 = call %struct.sv* @Perl_newSV(i64 0)
  br label %cond.end943

cond.false942:                                    ; preds = %if.then938
  br label %cond.end943

cond.end943:                                      ; preds = %cond.false942, %cond.true940
  %cond944 = phi %struct.sv* [ %call941, %cond.true940 ], [ null, %cond.false942 ]
  store %struct.sv* %cond944, %struct.sv** %fc, align 8
  %597 = load %struct.sv*, %struct.sv** %fc, align 8
  %tobool945 = icmp ne %struct.sv* %597, null
  br i1 %tobool945, label %if.then946, label %if.end947

if.then946:                                       ; preds = %cond.end943
  %598 = load %struct.sv*, %struct.sv** %fc, align 8
  %599 = load %struct.sv*, %struct.sv** %filter_cache, align 8
  call void @Perl_sv_copypv_flags(%struct.sv* %598, %struct.sv* %599, i32 2)
  br label %if.end947

if.end947:                                        ; preds = %if.then946, %cond.end943
  %600 = load %struct.sv*, %struct.sv** %fc, align 8
  %call948 = call %struct.sv* @Perl_filter_add(i32 (i32, %struct.sv*, i32)* @S_run_user_filter, %struct.sv* %600)
  store %struct.sv* %call948, %struct.sv** %datasv, align 8
  %601 = load i32, i32* %filter_has_file, align 4
  %conv949 = sext i32 %601 to i64
  %602 = load %struct.sv*, %struct.sv** %datasv, align 8
  %sv_any950 = getelementptr inbounds %struct.sv, %struct.sv* %602, i32 0, i32 0
  %603 = load i8*, i8** %sv_any950, align 8
  %604 = bitcast i8* %603 to %struct.xpvio*
  %xiv_u951 = getelementptr inbounds %struct.xpvio, %struct.xpvio* %604, i32 0, i32 4
  %xivu_iv952 = bitcast %union._xivu* %xiv_u951 to i64*
  store i64 %conv949, i64* %xivu_iv952, align 8
  %605 = load %struct.sv*, %struct.sv** %filter_state, align 8
  %606 = bitcast %struct.sv* %605 to i8*
  %607 = bitcast i8* %606 to %struct.gv*
  %608 = load %struct.sv*, %struct.sv** %datasv, align 8
  %sv_any953 = getelementptr inbounds %struct.sv, %struct.sv* %608, i32 0, i32 0
  %609 = load i8*, i8** %sv_any953, align 8
  %610 = bitcast i8* %609 to %struct.xpvio*
  %xio_top_gv = getelementptr inbounds %struct.xpvio, %struct.xpvio* %610, i32 0, i32 11
  store %struct.gv* %607, %struct.gv** %xio_top_gv, align 8
  %611 = load %struct.sv*, %struct.sv** %filter_sub, align 8
  %612 = bitcast %struct.sv* %611 to i8*
  %613 = bitcast i8* %612 to %struct.gv*
  %614 = load %struct.sv*, %struct.sv** %datasv, align 8
  %sv_any954 = getelementptr inbounds %struct.sv, %struct.sv* %614, i32 0, i32 0
  %615 = load i8*, i8** %sv_any954, align 8
  %616 = bitcast i8* %615 to %struct.xpvio*
  %xio_bottom_gv = getelementptr inbounds %struct.xpvio, %struct.xpvio* %616, i32 0, i32 15
  store %struct.gv* %613, %struct.gv** %xio_bottom_gv, align 8
  br label %if.end955

if.end955:                                        ; preds = %if.end947, %lor.lhs.false936
  %617 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %si_cxix = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %617, i32 0, i32 4
  %618 = load i32, i32* %si_cxix, align 8
  %619 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %si_cxmax = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %619, i32 0, i32 5
  %620 = load i32, i32* %si_cxmax, align 4
  %cmp956 = icmp slt i32 %618, %620
  br i1 %cmp956, label %cond.true958, label %cond.false961

cond.true958:                                     ; preds = %if.end955
  %621 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %si_cxix959 = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %621, i32 0, i32 4
  %622 = load i32, i32* %si_cxix959, align 8
  %inc960 = add nsw i32 %622, 1
  store i32 %inc960, i32* %si_cxix959, align 8
  br label %cond.end964

cond.false961:                                    ; preds = %if.end955
  %call962 = call i32 @Perl_cxinc()
  %623 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %si_cxix963 = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %623, i32 0, i32 4
  store i32 %call962, i32* %si_cxix963, align 8
  br label %cond.end964

cond.end964:                                      ; preds = %cond.false961, %cond.true958
  %cond965 = phi i32 [ %inc960, %cond.true958 ], [ %call962, %cond.false961 ]
  %624 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %si_cxstack = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %624, i32 0, i32 1
  %625 = load %struct.context*, %struct.context** %si_cxstack, align 8
  %626 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %si_cxix966 = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %626, i32 0, i32 4
  %627 = load i32, i32* %si_cxix966, align 8
  %idxprom967 = sext i32 %627 to i64
  %arrayidx968 = getelementptr inbounds %struct.context, %struct.context* %625, i64 %idxprom967
  store %struct.context* %arrayidx968, %struct.context** %cx, align 8
  %628 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u = getelementptr inbounds %struct.context, %struct.context* %628, i32 0, i32 0
  %cx_subst = bitcast %union.anon.16* %cx_u to %struct.subst*
  %sbu_type = getelementptr inbounds %struct.subst, %struct.subst* %cx_subst, i32 0, i32 0
  store i8 10, i8* %sbu_type, align 8
  %629 = load %struct.sv**, %struct.sv*** %sp, align 8
  %630 = load %struct.sv**, %struct.sv*** @PL_stack_base, align 8
  %sub.ptr.lhs.cast969 = ptrtoint %struct.sv** %629 to i64
  %sub.ptr.rhs.cast970 = ptrtoint %struct.sv** %630 to i64
  %sub.ptr.sub971 = sub i64 %sub.ptr.lhs.cast969, %sub.ptr.rhs.cast970
  %sub.ptr.div972 = sdiv exact i64 %sub.ptr.sub971, 8
  %conv973 = trunc i64 %sub.ptr.div972 to i32
  %631 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u974 = getelementptr inbounds %struct.context, %struct.context* %631, i32 0, i32 0
  %cx_blk = bitcast %union.anon.16* %cx_u974 to %struct.block*
  %blku_oldsp = getelementptr inbounds %struct.block, %struct.block* %cx_blk, i32 0, i32 3
  store i32 %conv973, i32* %blku_oldsp, align 4
  %632 = load %struct.cop*, %struct.cop** @PL_curcop, align 8
  %633 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u975 = getelementptr inbounds %struct.context, %struct.context* %633, i32 0, i32 0
  %cx_blk976 = bitcast %union.anon.16* %cx_u975 to %struct.block*
  %blku_oldcop = getelementptr inbounds %struct.block, %struct.block* %cx_blk976, i32 0, i32 4
  store %struct.cop* %632, %struct.cop** %blku_oldcop, align 8
  %634 = load i32*, i32** @PL_markstack_ptr, align 8
  %635 = load i32*, i32** @PL_markstack, align 8
  %sub.ptr.lhs.cast977 = ptrtoint i32* %634 to i64
  %sub.ptr.rhs.cast978 = ptrtoint i32* %635 to i64
  %sub.ptr.sub979 = sub i64 %sub.ptr.lhs.cast977, %sub.ptr.rhs.cast978
  %sub.ptr.div980 = sdiv exact i64 %sub.ptr.sub979, 4
  %conv981 = trunc i64 %sub.ptr.div980 to i32
  %636 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u982 = getelementptr inbounds %struct.context, %struct.context* %636, i32 0, i32 0
  %cx_blk983 = bitcast %union.anon.16* %cx_u982 to %struct.block*
  %blku_oldmarksp = getelementptr inbounds %struct.block, %struct.block* %cx_blk983, i32 0, i32 5
  store i32 %conv981, i32* %blku_oldmarksp, align 8
  %637 = load i32, i32* @PL_scopestack_ix, align 4
  %638 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u984 = getelementptr inbounds %struct.context, %struct.context* %638, i32 0, i32 0
  %cx_blk985 = bitcast %union.anon.16* %cx_u984 to %struct.block*
  %blku_oldscopesp = getelementptr inbounds %struct.block, %struct.block* %cx_blk985, i32 0, i32 6
  store i32 %637, i32* %blku_oldscopesp, align 4
  %639 = load %struct.pmop*, %struct.pmop** @PL_curpm, align 8
  %640 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u986 = getelementptr inbounds %struct.context, %struct.context* %640, i32 0, i32 0
  %cx_blk987 = bitcast %union.anon.16* %cx_u986 to %struct.block*
  %blku_oldpm = getelementptr inbounds %struct.block, %struct.block* %cx_blk987, i32 0, i32 7
  store %struct.pmop* %639, %struct.pmop** %blku_oldpm, align 8
  %641 = load i32, i32* %gimme, align 4
  %conv988 = trunc i32 %641 to i8
  %642 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u989 = getelementptr inbounds %struct.context, %struct.context* %642, i32 0, i32 0
  %cx_blk990 = bitcast %union.anon.16* %cx_u989 to %struct.block*
  %blku_gimme = getelementptr inbounds %struct.block, %struct.block* %cx_blk990, i32 0, i32 1
  store i8 %conv988, i8* %blku_gimme, align 1
  br label %do.body991

do.body991:                                       ; preds = %cond.end964
  %643 = load i8, i8* @PL_in_eval, align 1
  %conv992 = zext i8 %643 to i32
  %and993 = and i32 %conv992, 127
  %644 = load %struct.op*, %struct.op** @PL_op, align 8
  %op_type994 = getelementptr inbounds %struct.op, %struct.op* %644, i32 0, i32 4
  %bf.load995 = load i16, i16* %op_type994, align 8
  %bf.clear996 = and i16 %bf.load995, 511
  %bf.cast997 = zext i16 %bf.clear996 to i32
  %conv998 = trunc i32 %bf.cast997 to i16
  %conv999 = zext i16 %conv998 to i32
  %shl = shl i32 %conv999, 7
  %or1000 = or i32 %and993, %shl
  %conv1001 = trunc i32 %or1000 to i16
  %645 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u1002 = getelementptr inbounds %struct.context, %struct.context* %645, i32 0, i32 0
  %cx_blk1003 = bitcast %union.anon.16* %cx_u1002 to %struct.block*
  %blku_u16 = getelementptr inbounds %struct.block, %struct.block* %cx_blk1003, i32 0, i32 2
  store i16 %conv1001, i16* %blku_u16, align 2
  %646 = load i8*, i8** %name, align 8
  %tobool1004 = icmp ne i8* %646, null
  br i1 %tobool1004, label %cond.true1005, label %cond.false1007

cond.true1005:                                    ; preds = %do.body991
  %647 = load i8*, i8** %name, align 8
  %call1006 = call %struct.sv* @Perl_newSVpv(i8* %647, i64 0)
  br label %cond.end1008

cond.false1007:                                   ; preds = %do.body991
  br label %cond.end1008

cond.end1008:                                     ; preds = %cond.false1007, %cond.true1005
  %cond1009 = phi %struct.sv* [ %call1006, %cond.true1005 ], [ null, %cond.false1007 ]
  %648 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u1010 = getelementptr inbounds %struct.context, %struct.context* %648, i32 0, i32 0
  %cx_blk1011 = bitcast %union.anon.16* %cx_u1010 to %struct.block*
  %blk_u = getelementptr inbounds %struct.block, %struct.block* %cx_blk1011, i32 0, i32 8
  %blku_eval = bitcast %union.anon.20* %blk_u to %struct.block_eval*
  %old_namesv = getelementptr inbounds %struct.block_eval, %struct.block_eval* %blku_eval, i32 0, i32 1
  store %struct.sv* %cond1009, %struct.sv** %old_namesv, align 8
  %649 = load %struct.op*, %struct.op** @PL_eval_root, align 8
  %650 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u1012 = getelementptr inbounds %struct.context, %struct.context* %650, i32 0, i32 0
  %cx_blk1013 = bitcast %union.anon.16* %cx_u1012 to %struct.block*
  %blk_u1014 = getelementptr inbounds %struct.block, %struct.block* %cx_blk1013, i32 0, i32 8
  %blku_eval1015 = bitcast %union.anon.20* %blk_u1014 to %struct.block_eval*
  %old_eval_root = getelementptr inbounds %struct.block_eval, %struct.block_eval* %blku_eval1015, i32 0, i32 2
  store %struct.op* %649, %struct.op** %old_eval_root, align 8
  %651 = load %struct.yy_parser*, %struct.yy_parser** @PL_parser, align 8
  %tobool1016 = icmp ne %struct.yy_parser* %651, null
  br i1 %tobool1016, label %cond.true1017, label %cond.false1018

cond.true1017:                                    ; preds = %cond.end1008
  %652 = load %struct.yy_parser*, %struct.yy_parser** @PL_parser, align 8
  %linestr = getelementptr inbounds %struct.yy_parser, %struct.yy_parser* %652, i32 0, i32 33
  %653 = load %struct.sv*, %struct.sv** %linestr, align 8
  br label %cond.end1019

cond.false1018:                                   ; preds = %cond.end1008
  br label %cond.end1019

cond.end1019:                                     ; preds = %cond.false1018, %cond.true1017
  %cond1020 = phi %struct.sv* [ %653, %cond.true1017 ], [ null, %cond.false1018 ]
  %654 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u1021 = getelementptr inbounds %struct.context, %struct.context* %654, i32 0, i32 0
  %cx_blk1022 = bitcast %union.anon.16* %cx_u1021 to %struct.block*
  %blk_u1023 = getelementptr inbounds %struct.block, %struct.block* %cx_blk1022, i32 0, i32 8
  %blku_eval1024 = bitcast %union.anon.20* %blk_u1023 to %struct.block_eval*
  %cur_text = getelementptr inbounds %struct.block_eval, %struct.block_eval* %blku_eval1024, i32 0, i32 3
  store %struct.sv* %cond1020, %struct.sv** %cur_text, align 8
  %655 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u1025 = getelementptr inbounds %struct.context, %struct.context* %655, i32 0, i32 0
  %cx_blk1026 = bitcast %union.anon.16* %cx_u1025 to %struct.block*
  %blk_u1027 = getelementptr inbounds %struct.block, %struct.block* %cx_blk1026, i32 0, i32 8
  %blku_eval1028 = bitcast %union.anon.20* %blk_u1027 to %struct.block_eval*
  %cv = getelementptr inbounds %struct.block_eval, %struct.block_eval* %blku_eval1028, i32 0, i32 4
  store %struct.cv* null, %struct.cv** %cv, align 8
  %656 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u1029 = getelementptr inbounds %struct.context, %struct.context* %656, i32 0, i32 0
  %cx_blk1030 = bitcast %union.anon.16* %cx_u1029 to %struct.block*
  %blk_u1031 = getelementptr inbounds %struct.block, %struct.block* %cx_blk1030, i32 0, i32 8
  %blku_eval1032 = bitcast %union.anon.20* %blk_u1031 to %struct.block_eval*
  %retop = getelementptr inbounds %struct.block_eval, %struct.block_eval* %blku_eval1032, i32 0, i32 0
  store %struct.op* null, %struct.op** %retop, align 8
  %657 = load %struct.jmpenv*, %struct.jmpenv** @PL_top_env, align 8
  %658 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u1033 = getelementptr inbounds %struct.context, %struct.context* %658, i32 0, i32 0
  %cx_blk1034 = bitcast %union.anon.16* %cx_u1033 to %struct.block*
  %blk_u1035 = getelementptr inbounds %struct.block, %struct.block* %cx_blk1034, i32 0, i32 8
  %blku_eval1036 = bitcast %union.anon.20* %blk_u1035 to %struct.block_eval*
  %cur_top_env = getelementptr inbounds %struct.block_eval, %struct.block_eval* %blku_eval1036, i32 0, i32 5
  store %struct.jmpenv* %657, %struct.jmpenv** %cur_top_env, align 8
  br label %do.end1037

do.end1037:                                       ; preds = %cond.end1019
  %659 = load %struct.op*, %struct.op** @PL_op, align 8
  %op_next1038 = getelementptr inbounds %struct.op, %struct.op* %659, i32 0, i32 0
  %660 = load %struct.op*, %struct.op** %op_next1038, align 8
  %661 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u1039 = getelementptr inbounds %struct.context, %struct.context* %661, i32 0, i32 0
  %cx_blk1040 = bitcast %union.anon.16* %cx_u1039 to %struct.block*
  %blk_u1041 = getelementptr inbounds %struct.block, %struct.block* %cx_blk1040, i32 0, i32 8
  %blku_eval1042 = bitcast %union.anon.20* %blk_u1041 to %struct.block_eval*
  %retop1043 = getelementptr inbounds %struct.block_eval, %struct.block_eval* %blku_eval1042, i32 0, i32 0
  store %struct.op* %660, %struct.op** %retop1043, align 8
  call void @Perl_save_I32(i32* getelementptr inbounds (%struct.cop, %struct.cop* @PL_compiling, i32 0, i32 7))
  store i32 0, i32* getelementptr inbounds (%struct.cop, %struct.cop* @PL_compiling, i32 0, i32 7), align 4
  %662 = load %struct.sv**, %struct.sv*** %sp, align 8
  store %struct.sv** %662, %struct.sv*** @PL_stack_sp, align 8
  %663 = load i32, i32* %gimme, align 4
  %664 = load %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_seq = getelementptr inbounds %struct.cop, %struct.cop* %664, i32 0, i32 11
  %665 = load i32, i32* %cop_seq, align 4
  %call1044 = call zeroext i1 @S_doeval(i32 %663, %struct.cv* null, i32 %665, %struct.hv* null)
  br i1 %call1044, label %if.then1045, label %if.else1055

if.then1045:                                      ; preds = %do.end1037
  %666 = load %struct.jmpenv*, %struct.jmpenv** @PL_top_env, align 8
  %je_mustcatch = getelementptr inbounds %struct.jmpenv, %struct.jmpenv* %666, i32 0, i32 3
  %667 = load i8, i8* %je_mustcatch, align 4
  %tobool1046 = trunc i8 %667 to i1
  %conv1047 = zext i1 %tobool1046 to i32
  %cmp1048 = icmp eq i32 %conv1047, 1
  br i1 %cmp1048, label %cond.true1050, label %cond.false1052

cond.true1050:                                    ; preds = %if.then1045
  %668 = load %struct.op*, %struct.op** @PL_eval_start, align 8
  %call1051 = call %struct.op* @S_docatch(%struct.op* %668)
  br label %cond.end1053

cond.false1052:                                   ; preds = %if.then1045
  %669 = load %struct.op*, %struct.op** @PL_eval_start, align 8
  br label %cond.end1053

cond.end1053:                                     ; preds = %cond.false1052, %cond.true1050
  %cond1054 = phi %struct.op* [ %call1051, %cond.true1050 ], [ %669, %cond.false1052 ]
  store %struct.op* %cond1054, %struct.op** %op, align 8
  br label %if.end1057

if.else1055:                                      ; preds = %do.end1037
  %670 = load %struct.op*, %struct.op** @PL_op, align 8
  %op_next1056 = getelementptr inbounds %struct.op, %struct.op* %670, i32 0, i32 0
  %671 = load %struct.op*, %struct.op** %op_next1056, align 8
  store %struct.op* %671, %struct.op** %op, align 8
  br label %if.end1057

if.end1057:                                       ; preds = %if.else1055, %cond.end1053
  %672 = load %struct.op*, %struct.op** %op, align 8
  store %struct.op* %672, %struct.op** %retval, align 8
  br label %return

return:                                           ; preds = %if.end1057, %do.end857, %if.end828, %if.end825, %if.then734, %if.else222, %if.then219, %if.then167, %if.then163, %if.then141, %if.end125, %if.end110, %if.then83, %if.then40
  %673 = load %struct.op*, %struct.op** %retval, align 8
  ret %struct.op* %673
}

declare dso_local %struct.magic* @Perl_mg_find(%struct.sv*, i32) #1

declare dso_local %struct.sv* @Perl_new_version(%struct.sv*) #1

declare dso_local zeroext i1 @Perl_sv_derived_from_pvn(%struct.sv*, i8*, i64, i32) #1

declare dso_local %struct.sv* @Perl_upg_version(%struct.sv*, i1 zeroext) #1

declare dso_local i32 @Perl_vcmp(%struct.sv*, %struct.sv*) #1

declare dso_local %struct.sv* @Perl_vnormal(%struct.sv*) #1

; Function Attrs: noinline nounwind uwtable
define internal i64 @S_av_top_index(%struct.av* %av) #0 {
entry:
  %av.addr = alloca %struct.av*, align 8
  store %struct.av* %av, %struct.av** %av.addr, align 8
  %0 = load %struct.av*, %struct.av** %av.addr, align 8
  %1 = bitcast %struct.av* %0 to %struct.sv*
  %sv_flags = getelementptr inbounds %struct.sv, %struct.sv* %1, i32 0, i32 2
  %2 = load i32, i32* %sv_flags, align 4
  %and = and i32 %2, 8388608
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %3 = load %struct.av*, %struct.av** %av.addr, align 8
  %4 = bitcast %struct.av* %3 to i8*
  %5 = bitcast i8* %4 to %struct.sv*
  %call = call i32 @Perl_mg_size(%struct.sv* %5)
  %conv = sext i32 %call to i64
  br label %cond.end

cond.false:                                       ; preds = %entry
  %6 = load %struct.av*, %struct.av** %av.addr, align 8
  %sv_any = getelementptr inbounds %struct.av, %struct.av* %6, i32 0, i32 0
  %7 = load %struct.xpvav*, %struct.xpvav** %sv_any, align 8
  %xav_fill = getelementptr inbounds %struct.xpvav, %struct.xpvav* %7, i32 0, i32 2
  %8 = load i64, i64* %xav_fill, align 8
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %conv, %cond.true ], [ %8, %cond.false ]
  ret i64 %cond
}

; Function Attrs: nounwind readonly
declare dso_local i8* @strstr(i8*, i8*) #3

declare dso_local %struct.sv* @Perl_newSVpvf(i8*, ...) #1

; Function Attrs: noinline nounwind uwtable
define internal zeroext i1 @S_is_safe_syscall(i8* %pv, i64 %len, i8* %what, i8* %op_name) #0 {
entry:
  %retval = alloca i1, align 1
  %pv.addr = alloca i8*, align 8
  %len.addr = alloca i64, align 8
  %what.addr = alloca i8*, align 8
  %op_name.addr = alloca i8*, align 8
  %null_at = alloca i8*, align 8
  store i8* %pv, i8** %pv.addr, align 8
  store i64 %len, i64* %len.addr, align 8
  store i8* %what, i8** %what.addr, align 8
  store i8* %op_name, i8** %op_name.addr, align 8
  %0 = load i64, i64* %len.addr, align 8
  %cmp = icmp ugt i64 %0, 1
  br i1 %cmp, label %if.then, label %if.end4

if.then:                                          ; preds = %entry
  %1 = load i8*, i8** %pv.addr, align 8
  %2 = load i64, i64* %len.addr, align 8
  %sub = sub i64 %2, 1
  %call = call i8* @memchr(i8* %1, i32 0, i64 %sub) #8
  store i8* %call, i8** %null_at, align 8
  %cmp1 = icmp ne i8* %call, null
  br i1 %cmp1, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.then
  br i1 true, label %if.then2, label %if.end

cond.false:                                       ; preds = %if.then
  br i1 false, label %if.then2, label %if.end

if.then2:                                         ; preds = %cond.false, %cond.true
  %call3 = call i32* @__errno_location() #11
  store i32 2, i32* %call3, align 4
  %3 = load i8*, i8** %what.addr, align 8
  %4 = load i8*, i8** %op_name.addr, align 8
  %5 = load i8*, i8** %pv.addr, align 8
  %6 = load i8*, i8** %null_at, align 8
  %add.ptr = getelementptr inbounds i8, i8* %6, i64 1
  call void (i32, i8*, ...) @Perl_ck_warner(i32 59, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.103, i64 0, i64 0), i8* %3, i8* %4, i8* %5, i8* %add.ptr)
  store i1 false, i1* %retval, align 1
  br label %return

if.end:                                           ; preds = %cond.false, %cond.true
  br label %if.end4

if.end4:                                          ; preds = %if.end, %entry
  store i1 true, i1* %retval, align 1
  br label %return

return:                                           ; preds = %if.end4, %if.then2
  %7 = load i1, i1* %retval, align 1
  ret i1 %7
}

declare dso_local i8* @Perl_pv_escape(%struct.sv*, i8*, i64, i64, i64*, i32) #1

; Function Attrs: nounwind
declare dso_local i8* @strerror(i32) #5

declare dso_local void @Perl_taint_proper(i8*, i8*) #1

; Function Attrs: noinline nounwind uwtable
define internal zeroext i1 @S_path_is_searchable(i8* %name) #0 {
entry:
  %retval = alloca i1, align 1
  %name.addr = alloca i8*, align 8
  store i8* %name, i8** %name.addr, align 8
  %0 = load i8*, i8** %name.addr, align 8
  %1 = load i8, i8* %0, align 1
  %conv = sext i8 %1 to i32
  %cmp = icmp eq i32 %conv, 47
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %2 = load i8*, i8** %name.addr, align 8
  %3 = load i8, i8* %2, align 1
  %conv2 = sext i8 %3 to i32
  %cmp3 = icmp eq i32 %conv2, 46
  br i1 %cmp3, label %land.lhs.true, label %if.else

land.lhs.true:                                    ; preds = %lor.lhs.false
  %4 = load i8*, i8** %name.addr, align 8
  %arrayidx = getelementptr inbounds i8, i8* %4, i64 1
  %5 = load i8, i8* %arrayidx, align 1
  %conv5 = sext i8 %5 to i32
  %cmp6 = icmp eq i32 %conv5, 47
  br i1 %cmp6, label %if.then, label %lor.lhs.false8

lor.lhs.false8:                                   ; preds = %land.lhs.true
  %6 = load i8*, i8** %name.addr, align 8
  %arrayidx9 = getelementptr inbounds i8, i8* %6, i64 1
  %7 = load i8, i8* %arrayidx9, align 1
  %conv10 = sext i8 %7 to i32
  %cmp11 = icmp eq i32 %conv10, 46
  br i1 %cmp11, label %land.lhs.true13, label %if.else

land.lhs.true13:                                  ; preds = %lor.lhs.false8
  %8 = load i8*, i8** %name.addr, align 8
  %arrayidx14 = getelementptr inbounds i8, i8* %8, i64 2
  %9 = load i8, i8* %arrayidx14, align 1
  %conv15 = sext i8 %9 to i32
  %cmp16 = icmp eq i32 %conv15, 47
  br i1 %cmp16, label %if.then, label %if.else

if.then:                                          ; preds = %land.lhs.true13, %land.lhs.true, %entry
  store i1 false, i1* %retval, align 1
  br label %return

if.else:                                          ; preds = %land.lhs.true13, %lor.lhs.false8, %lor.lhs.false
  store i1 true, i1* %retval, align 1
  br label %return

return:                                           ; preds = %if.else, %if.then
  %10 = load i1, i1* %retval, align 1
  ret i1 %10
}

; Function Attrs: noinline nounwind uwtable
define internal %struct._PerlIO** @S_doopen_pm(%struct.sv* %name) #0 {
entry:
  %retval = alloca %struct._PerlIO**, align 8
  %name.addr = alloca %struct.sv*, align 8
  %namelen = alloca i64, align 8
  %p = alloca i8*, align 8
  %pmcsv = alloca %struct.sv*, align 8
  %pmcstat = alloca %struct.stat, align 8
  store %struct.sv* %name, %struct.sv** %name.addr, align 8
  %0 = load %struct.sv*, %struct.sv** %name.addr, align 8
  %sv_flags = getelementptr inbounds %struct.sv, %struct.sv* %0, i32 0, i32 2
  %1 = load i32, i32* %sv_flags, align 4
  %and = and i32 %1, 2098176
  %cmp = icmp eq i32 %and, 1024
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %2 = load %struct.sv*, %struct.sv** %name.addr, align 8
  %sv_any = getelementptr inbounds %struct.sv, %struct.sv* %2, i32 0, i32 0
  %3 = load i8*, i8** %sv_any, align 8
  %4 = bitcast i8* %3 to %struct.xpv*
  %xpv_cur = getelementptr inbounds %struct.xpv, %struct.xpv* %4, i32 0, i32 2
  %5 = load i64, i64* %xpv_cur, align 8
  store i64 %5, i64* %namelen, align 8
  %6 = load %struct.sv*, %struct.sv** %name.addr, align 8
  %sv_u = getelementptr inbounds %struct.sv, %struct.sv* %6, i32 0, i32 3
  %svu_pv = bitcast %union.anon* %sv_u to i8**
  %7 = load i8*, i8** %svu_pv, align 8
  %add.ptr = getelementptr inbounds i8, i8* %7, i64 0
  br label %cond.end

cond.false:                                       ; preds = %entry
  %8 = load %struct.sv*, %struct.sv** %name.addr, align 8
  %call = call i8* @Perl_sv_2pv_flags(%struct.sv* %8, i64* %namelen, i32 34)
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %add.ptr, %cond.true ], [ %call, %cond.false ]
  store i8* %cond, i8** %p, align 8
  %9 = load i8*, i8** %p, align 8
  %10 = load i64, i64* %namelen, align 8
  %call1 = call zeroext i1 @S_is_safe_syscall(i8* %9, i64 %10, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.58, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.59, i64 0, i64 0))
  br i1 %call1, label %if.end, label %if.then

if.then:                                          ; preds = %cond.end
  store %struct._PerlIO** null, %struct._PerlIO*** %retval, align 8
  br label %return

if.end:                                           ; preds = %cond.end
  %11 = load i64, i64* %namelen, align 8
  %cmp2 = icmp ugt i64 %11, 3
  br i1 %cmp2, label %land.lhs.true, label %if.end29

land.lhs.true:                                    ; preds = %if.end
  %12 = load i8*, i8** %p, align 8
  %13 = load i64, i64* %namelen, align 8
  %add.ptr3 = getelementptr inbounds i8, i8* %12, i64 %13
  %add.ptr4 = getelementptr inbounds i8, i8* %add.ptr3, i64 -3
  %call5 = call i32 @memcmp(i8* %add.ptr4, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.69, i64 0, i64 0), i64 3) #8
  %tobool = icmp ne i32 %call5, 0
  br i1 %tobool, label %if.end29, label %if.then6

if.then6:                                         ; preds = %land.lhs.true
  %call7 = call %struct.sv* @Perl_sv_newmortal()
  store %struct.sv* %call7, %struct.sv** %pmcsv, align 8
  br label %do.body

do.body:                                          ; preds = %if.then6
  %14 = load %struct.sv*, %struct.sv** %pmcsv, align 8
  %15 = load %struct.sv*, %struct.sv** %name.addr, align 8
  %cmp8 = icmp ne %struct.sv* %14, %15
  br i1 %cmp8, label %cond.true9, label %cond.false10

cond.true9:                                       ; preds = %do.body
  br i1 true, label %if.then11, label %if.end12

cond.false10:                                     ; preds = %do.body
  br i1 false, label %if.then11, label %if.end12

if.then11:                                        ; preds = %cond.false10, %cond.true9
  %16 = load %struct.sv*, %struct.sv** %pmcsv, align 8
  %17 = load %struct.sv*, %struct.sv** %name.addr, align 8
  call void @Perl_sv_setsv_flags(%struct.sv* %16, %struct.sv* %17, i32 1554)
  br label %if.end12

if.end12:                                         ; preds = %if.then11, %cond.false10, %cond.true9
  br label %do.end

do.end:                                           ; preds = %if.end12
  %18 = load %struct.sv*, %struct.sv** %pmcsv, align 8
  call void @Perl_sv_catpvn_flags(%struct.sv* %18, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.104, i64 0, i64 0), i64 1, i32 2)
  %19 = load %struct.sv*, %struct.sv** %pmcsv, align 8
  %sv_flags13 = getelementptr inbounds %struct.sv, %struct.sv* %19, i32 0, i32 2
  %20 = load i32, i32* %sv_flags13, align 4
  %and14 = and i32 %20, 2098176
  %cmp15 = icmp eq i32 %and14, 1024
  br i1 %cmp15, label %cond.true16, label %cond.false20

cond.true16:                                      ; preds = %do.end
  %21 = load %struct.sv*, %struct.sv** %pmcsv, align 8
  %sv_u17 = getelementptr inbounds %struct.sv, %struct.sv* %21, i32 0, i32 3
  %svu_pv18 = bitcast %union.anon* %sv_u17 to i8**
  %22 = load i8*, i8** %svu_pv18, align 8
  %add.ptr19 = getelementptr inbounds i8, i8* %22, i64 0
  br label %cond.end22

cond.false20:                                     ; preds = %do.end
  %23 = load %struct.sv*, %struct.sv** %pmcsv, align 8
  %call21 = call i8* @Perl_sv_2pv_flags(%struct.sv* %23, i64* null, i32 34)
  br label %cond.end22

cond.end22:                                       ; preds = %cond.false20, %cond.true16
  %cond23 = phi i8* [ %add.ptr19, %cond.true16 ], [ %call21, %cond.false20 ]
  %call24 = call i32 @stat64(i8* %cond23, %struct.stat* %pmcstat) #10
  %cmp25 = icmp sge i32 %call24, 0
  br i1 %cmp25, label %if.then26, label %if.end28

if.then26:                                        ; preds = %cond.end22
  %24 = load %struct.sv*, %struct.sv** %pmcsv, align 8
  %call27 = call %struct._PerlIO** @S_check_type_and_open(%struct.sv* %24)
  store %struct._PerlIO** %call27, %struct._PerlIO*** %retval, align 8
  br label %return

if.end28:                                         ; preds = %cond.end22
  br label %if.end29

if.end29:                                         ; preds = %if.end28, %land.lhs.true, %if.end
  %25 = load %struct.sv*, %struct.sv** %name.addr, align 8
  %call30 = call %struct._PerlIO** @S_check_type_and_open(%struct.sv* %25)
  store %struct._PerlIO** %call30, %struct._PerlIO*** %retval, align 8
  br label %return

return:                                           ; preds = %if.end29, %if.then26, %if.then
  %26 = load %struct._PerlIO**, %struct._PerlIO*** %retval, align 8
  ret %struct._PerlIO** %26
}

; Function Attrs: nounwind readnone
declare dso_local i32* @__errno_location() #6

declare dso_local void @Perl_sv_setpvf(%struct.sv*, i8*, ...) #1

declare dso_local i32 @Perl_sv_isobject(%struct.sv*) #1

declare dso_local i32 @Perl_call_method(i8*, i32) #1

declare dso_local i32 @Perl_PerlIO_close(%struct._PerlIO**) #1

declare dso_local %struct._PerlIO** @PerlIO_open(i8*, i8*) #1

; Function Attrs: nounwind readonly
declare dso_local i32 @memcmp(i8*, i8*, i64) #3

declare dso_local void @Perl_sv_catpv(%struct.sv*, i8*) #1

declare dso_local %struct.gv* @Perl_gv_fetchfile(i8*) #1

declare dso_local void @Perl_lex_start(%struct.sv*, %struct._PerlIO**, i32) #1

declare dso_local void @Perl_sv_copypv_flags(%struct.sv*, %struct.sv*, i32) #1

declare dso_local %struct.sv* @Perl_filter_add(i32 (i32, %struct.sv*, i32)*, %struct.sv*) #1

; Function Attrs: noinline nounwind uwtable
define internal i32 @S_run_user_filter(i32 %idx, %struct.sv* %buf_sv, i32 %maxlen) #0 {
entry:
  %retval = alloca i32, align 4
  %idx.addr = alloca i32, align 4
  %buf_sv.addr = alloca %struct.sv*, align 8
  %maxlen.addr = alloca i32, align 4
  %datasv = alloca %struct.sv*, align 8
  %filter_has_file = alloca i32, align 4
  %filter_state = alloca %struct.sv*, align 8
  %filter_sub = alloca %struct.sv*, align 8
  %status = alloca i32, align 4
  %upstream = alloca %struct.sv*, align 8
  %got_len = alloca i64, align 8
  %got_p = alloca i8*, align 8
  %prune_from = alloca i8*, align 8
  %read_from_cache = alloca i8, align 1
  %umaxlen = alloca i64, align 8
  %err = alloca %struct.sv*, align 8
  %cache = alloca %struct.sv*, align 8
  %cache_len = alloca i64, align 8
  %cache_p = alloca i8*, align 8
  %take = alloca i64, align 8
  %first_nl = alloca i8*, align 8
  %sp = alloca %struct.sv**, align 8
  %count = alloca i32, align 4
  %mark_stack_entry = alloca i32*, align 8
  %out = alloca %struct.sv*, align 8
  %errsv = alloca %struct.sv*, align 8
  %first_nl332 = alloca i8*, align 8
  %cached_len = alloca i64, align 8
  %cache353 = alloca %struct.sv*, align 8
  store i32 %idx, i32* %idx.addr, align 4
  store %struct.sv* %buf_sv, %struct.sv** %buf_sv.addr, align 8
  store i32 %maxlen, i32* %maxlen.addr, align 4
  %0 = load %struct.yy_parser*, %struct.yy_parser** @PL_parser, align 8
  %tobool = icmp ne %struct.yy_parser* %0, null
  br i1 %tobool, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %1 = load %struct.yy_parser*, %struct.yy_parser** @PL_parser, align 8
  %rsfp_filters = getelementptr inbounds %struct.yy_parser, %struct.yy_parser* %1, i32 0, i32 47
  %2 = load %struct.av*, %struct.av** %rsfp_filters, align 8
  %sv_u = getelementptr inbounds %struct.av, %struct.av* %2, i32 0, i32 3
  %svu_array = bitcast %union.anon.0* %sv_u to %struct.sv***
  %3 = load %struct.sv**, %struct.sv*** %svu_array, align 8
  %4 = load i32, i32* %idx.addr, align 4
  %idxprom = sext i32 %4 to i64
  %arrayidx = getelementptr inbounds %struct.sv*, %struct.sv** %3, i64 %idxprom
  %5 = load %struct.sv*, %struct.sv** %arrayidx, align 8
  br label %cond.end

cond.false:                                       ; preds = %entry
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.sv* [ %5, %cond.true ], [ null, %cond.false ]
  store %struct.sv* %cond, %struct.sv** %datasv, align 8
  %6 = load %struct.sv*, %struct.sv** %datasv, align 8
  %sv_any = getelementptr inbounds %struct.sv, %struct.sv* %6, i32 0, i32 0
  %7 = load i8*, i8** %sv_any, align 8
  %8 = bitcast i8* %7 to %struct.xpvio*
  %xiv_u = getelementptr inbounds %struct.xpvio, %struct.xpvio* %8, i32 0, i32 4
  %xivu_iv = bitcast %union._xivu* %xiv_u to i64*
  %9 = load i64, i64* %xivu_iv, align 8
  %conv = trunc i64 %9 to i32
  store i32 %conv, i32* %filter_has_file, align 4
  %10 = load %struct.sv*, %struct.sv** %datasv, align 8
  %sv_any1 = getelementptr inbounds %struct.sv, %struct.sv* %10, i32 0, i32 0
  %11 = load i8*, i8** %sv_any1, align 8
  %12 = bitcast i8* %11 to %struct.xpvio*
  %xio_top_gv = getelementptr inbounds %struct.xpvio, %struct.xpvio* %12, i32 0, i32 11
  %13 = load %struct.gv*, %struct.gv** %xio_top_gv, align 8
  %14 = bitcast %struct.gv* %13 to i8*
  %15 = bitcast i8* %14 to %struct.sv*
  store %struct.sv* %15, %struct.sv** %filter_state, align 8
  %16 = load %struct.sv*, %struct.sv** %datasv, align 8
  %sv_any2 = getelementptr inbounds %struct.sv, %struct.sv* %16, i32 0, i32 0
  %17 = load i8*, i8** %sv_any2, align 8
  %18 = bitcast i8* %17 to %struct.xpvio*
  %xio_bottom_gv = getelementptr inbounds %struct.xpvio, %struct.xpvio* %18, i32 0, i32 15
  %19 = load %struct.gv*, %struct.gv** %xio_bottom_gv, align 8
  %20 = bitcast %struct.gv* %19 to i8*
  %21 = bitcast i8* %20 to %struct.sv*
  store %struct.sv* %21, %struct.sv** %filter_sub, align 8
  store i32 0, i32* %status, align 4
  store i8* null, i8** %got_p, align 8
  store i8* null, i8** %prune_from, align 8
  store i8 0, i8* %read_from_cache, align 1
  store %struct.sv* null, %struct.sv** %err, align 8
  %22 = load i32, i32* %maxlen.addr, align 4
  %conv3 = sext i32 %22 to i64
  store i64 %conv3, i64* %umaxlen, align 8
  %23 = load %struct.sv*, %struct.sv** %datasv, align 8
  store %struct.sv* %23, %struct.sv** %cache, align 8
  %24 = load %struct.sv*, %struct.sv** %cache, align 8
  %sv_flags = getelementptr inbounds %struct.sv, %struct.sv* %24, i32 0, i32 2
  %25 = load i32, i32* %sv_flags, align 4
  %and = and i32 %25, 65280
  %tobool4 = icmp ne i32 %and, 0
  br i1 %tobool4, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %cond.end
  %26 = load %struct.sv*, %struct.sv** %cache, align 8
  %sv_flags5 = getelementptr inbounds %struct.sv, %struct.sv* %26, i32 0, i32 2
  %27 = load i32, i32* %sv_flags5, align 4
  %and6 = and i32 %27, 255
  %cmp = icmp eq i32 %and6, 8
  br i1 %cmp, label %if.then, label %lor.lhs.false8

lor.lhs.false8:                                   ; preds = %lor.lhs.false
  %28 = load %struct.sv*, %struct.sv** %cache, align 8
  %sv_flags9 = getelementptr inbounds %struct.sv, %struct.sv* %28, i32 0, i32 2
  %29 = load i32, i32* %sv_flags9, align 4
  %and10 = and i32 %29, 16826623
  %cmp11 = icmp eq i32 %and10, 16777226
  br i1 %cmp11, label %if.then, label %if.end47

if.then:                                          ; preds = %lor.lhs.false8, %lor.lhs.false, %cond.end
  %30 = load %struct.sv*, %struct.sv** %cache, align 8
  %sv_flags13 = getelementptr inbounds %struct.sv, %struct.sv* %30, i32 0, i32 2
  %31 = load i32, i32* %sv_flags13, align 4
  %and14 = and i32 %31, 2098176
  %cmp15 = icmp eq i32 %and14, 1024
  br i1 %cmp15, label %cond.true17, label %cond.false20

cond.true17:                                      ; preds = %if.then
  %32 = load %struct.sv*, %struct.sv** %cache, align 8
  %sv_any18 = getelementptr inbounds %struct.sv, %struct.sv* %32, i32 0, i32 0
  %33 = load i8*, i8** %sv_any18, align 8
  %34 = bitcast i8* %33 to %struct.xpv*
  %xpv_cur = getelementptr inbounds %struct.xpv, %struct.xpv* %34, i32 0, i32 2
  %35 = load i64, i64* %xpv_cur, align 8
  store i64 %35, i64* %cache_len, align 8
  %36 = load %struct.sv*, %struct.sv** %cache, align 8
  %sv_u19 = getelementptr inbounds %struct.sv, %struct.sv* %36, i32 0, i32 3
  %svu_pv = bitcast %union.anon* %sv_u19 to i8**
  %37 = load i8*, i8** %svu_pv, align 8
  br label %cond.end21

cond.false20:                                     ; preds = %if.then
  %38 = load %struct.sv*, %struct.sv** %cache, align 8
  %call = call i8* @Perl_sv_2pv_flags(%struct.sv* %38, i64* %cache_len, i32 2)
  br label %cond.end21

cond.end21:                                       ; preds = %cond.false20, %cond.true17
  %cond22 = phi i8* [ %37, %cond.true17 ], [ %call, %cond.false20 ]
  store i8* %cond22, i8** %cache_p, align 8
  store i64 0, i64* %take, align 8
  %39 = load i64, i64* %umaxlen, align 8
  %tobool23 = icmp ne i64 %39, 0
  br i1 %tobool23, label %if.then24, label %if.else

if.then24:                                        ; preds = %cond.end21
  %40 = load i64, i64* %cache_len, align 8
  %41 = load i64, i64* %umaxlen, align 8
  %cmp25 = icmp uge i64 %40, %41
  br i1 %cmp25, label %if.then27, label %if.end

if.then27:                                        ; preds = %if.then24
  %42 = load i64, i64* %umaxlen, align 8
  store i64 %42, i64* %take, align 8
  br label %if.end

if.end:                                           ; preds = %if.then27, %if.then24
  br label %if.end32

if.else:                                          ; preds = %cond.end21
  %43 = load i8*, i8** %cache_p, align 8
  %44 = load i64, i64* %cache_len, align 8
  %call28 = call i8* @memchr(i8* %43, i32 10, i64 %44) #8
  store i8* %call28, i8** %first_nl, align 8
  %45 = load i8*, i8** %first_nl, align 8
  %tobool29 = icmp ne i8* %45, null
  br i1 %tobool29, label %if.then30, label %if.end31

if.then30:                                        ; preds = %if.else
  %46 = load i8*, i8** %first_nl, align 8
  %add.ptr = getelementptr inbounds i8, i8* %46, i64 1
  %47 = load i8*, i8** %cache_p, align 8
  %sub.ptr.lhs.cast = ptrtoint i8* %add.ptr to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %47 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  store i64 %sub.ptr.sub, i64* %take, align 8
  br label %if.end31

if.end31:                                         ; preds = %if.then30, %if.else
  br label %if.end32

if.end32:                                         ; preds = %if.end31, %if.end
  %48 = load i64, i64* %take, align 8
  %tobool33 = icmp ne i64 %48, 0
  br i1 %tobool33, label %if.then34, label %if.end36

if.then34:                                        ; preds = %if.end32
  %49 = load %struct.sv*, %struct.sv** %buf_sv.addr, align 8
  %50 = load i8*, i8** %cache_p, align 8
  %51 = load i64, i64* %take, align 8
  call void @Perl_sv_catpvn_flags(%struct.sv* %49, i8* %50, i64 %51, i32 2)
  %52 = load %struct.sv*, %struct.sv** %cache, align 8
  %53 = load i8*, i8** %cache_p, align 8
  %54 = load i64, i64* %take, align 8
  %add.ptr35 = getelementptr inbounds i8, i8* %53, i64 %54
  call void @Perl_sv_chop(%struct.sv* %52, i8* %add.ptr35)
  store i32 1, i32* %retval, align 4
  br label %return

if.end36:                                         ; preds = %if.end32
  %55 = load %struct.sv*, %struct.sv** %buf_sv.addr, align 8
  %56 = load %struct.sv*, %struct.sv** %cache, align 8
  call void @Perl_sv_catsv_flags(%struct.sv* %55, %struct.sv* %56, i32 2)
  %57 = load i64, i64* %umaxlen, align 8
  %tobool37 = icmp ne i64 %57, 0
  br i1 %tobool37, label %if.then38, label %if.end39

if.then38:                                        ; preds = %if.end36
  %58 = load i64, i64* %cache_len, align 8
  %59 = load i64, i64* %umaxlen, align 8
  %sub = sub i64 %59, %58
  store i64 %sub, i64* %umaxlen, align 8
  br label %if.end39

if.end39:                                         ; preds = %if.then38, %if.end36
  %60 = load %struct.sv*, %struct.sv** %cache, align 8
  %sv_flags40 = getelementptr inbounds %struct.sv, %struct.sv* %60, i32 0, i32 2
  %61 = load i32, i32* %sv_flags40, align 4
  %and41 = and i32 %61, 1610547455
  store i32 %and41, i32* %sv_flags40, align 4
  %62 = load %struct.sv*, %struct.sv** %cache, align 8
  %sv_flags42 = getelementptr inbounds %struct.sv, %struct.sv* %62, i32 0, i32 2
  %63 = load i32, i32* %sv_flags42, align 4
  %and43 = and i32 %63, 33554432
  %tobool44 = icmp ne i32 %and43, 0
  br i1 %tobool44, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %if.end39
  %64 = load %struct.sv*, %struct.sv** %cache, align 8
  %call45 = call i32 @Perl_sv_backoff(%struct.sv* %64)
  %tobool46 = icmp ne i32 %call45, 0
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end39
  %65 = phi i1 [ false, %if.end39 ], [ %tobool46, %land.rhs ]
  %land.ext = zext i1 %65 to i32
  store i8 1, i8* %read_from_cache, align 1
  br label %if.end47

if.end47:                                         ; preds = %land.end, %lor.lhs.false8
  %66 = load %struct.sv*, %struct.sv** %buf_sv.addr, align 8
  %sv_flags48 = getelementptr inbounds %struct.sv, %struct.sv* %66, i32 0, i32 2
  %67 = load i32, i32* %sv_flags48, align 4
  %and49 = and i32 %67, 65280
  %tobool50 = icmp ne i32 %and49, 0
  br i1 %tobool50, label %land.lhs.true, label %lor.lhs.false51

lor.lhs.false51:                                  ; preds = %if.end47
  %68 = load %struct.sv*, %struct.sv** %buf_sv.addr, align 8
  %sv_flags52 = getelementptr inbounds %struct.sv, %struct.sv* %68, i32 0, i32 2
  %69 = load i32, i32* %sv_flags52, align 4
  %and53 = and i32 %69, 255
  %cmp54 = icmp eq i32 %and53, 8
  br i1 %cmp54, label %land.lhs.true, label %lor.lhs.false56

lor.lhs.false56:                                  ; preds = %lor.lhs.false51
  %70 = load %struct.sv*, %struct.sv** %buf_sv.addr, align 8
  %sv_flags57 = getelementptr inbounds %struct.sv, %struct.sv* %70, i32 0, i32 2
  %71 = load i32, i32* %sv_flags57, align 4
  %and58 = and i32 %71, 16826623
  %cmp59 = icmp eq i32 %and58, 16777226
  br i1 %cmp59, label %land.lhs.true, label %lor.lhs.false63

land.lhs.true:                                    ; preds = %lor.lhs.false56, %lor.lhs.false51, %if.end47
  %72 = load %struct.sv*, %struct.sv** %buf_sv.addr, align 8
  %call61 = call i64 @Perl_sv_len(%struct.sv* %72)
  %tobool62 = icmp ne i64 %call61, 0
  br i1 %tobool62, label %cond.true67, label %lor.lhs.false63

lor.lhs.false63:                                  ; preds = %land.lhs.true, %lor.lhs.false56
  %73 = load %struct.sv*, %struct.sv** %buf_sv.addr, align 8
  %sv_flags64 = getelementptr inbounds %struct.sv, %struct.sv* %73, i32 0, i32 2
  %74 = load i32, i32* %sv_flags64, align 4
  %and65 = and i32 %74, 2097152
  %tobool66 = icmp ne i32 %and65, 0
  br i1 %tobool66, label %cond.true67, label %cond.false69

cond.true67:                                      ; preds = %lor.lhs.false63, %land.lhs.true
  %call68 = call %struct.sv* @Perl_sv_newmortal()
  br label %cond.end70

cond.false69:                                     ; preds = %lor.lhs.false63
  %75 = load %struct.sv*, %struct.sv** %buf_sv.addr, align 8
  br label %cond.end70

cond.end70:                                       ; preds = %cond.false69, %cond.true67
  %cond71 = phi %struct.sv* [ %call68, %cond.true67 ], [ %75, %cond.false69 ]
  store %struct.sv* %cond71, %struct.sv** %upstream, align 8
  %76 = load %struct.sv*, %struct.sv** %upstream, align 8
  %sv_flags72 = getelementptr inbounds %struct.sv, %struct.sv* %76, i32 0, i32 2
  %77 = load i32, i32* %sv_flags72, align 4
  %and73 = and i32 %77, 255
  %cmp74 = icmp uge i32 %and73, 3
  br i1 %cmp74, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %cond.end70
  %78 = load %struct.sv*, %struct.sv** %upstream, align 8
  call void @Perl_sv_upgrade(%struct.sv* %78, i32 3)
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %cond.end70
  %79 = phi i1 [ true, %cond.end70 ], [ true, %lor.rhs ]
  %lor.ext = zext i1 %79 to i32
  %80 = load i32, i32* %filter_has_file, align 4
  %tobool76 = icmp ne i32 %80, 0
  br i1 %tobool76, label %if.then77, label %if.end79

if.then77:                                        ; preds = %lor.end
  %81 = load i32, i32* %idx.addr, align 4
  %add = add nsw i32 %81, 1
  %82 = load %struct.sv*, %struct.sv** %upstream, align 8
  %call78 = call i32 @Perl_filter_read(i32 %add, %struct.sv* %82, i32 0)
  store i32 %call78, i32* %status, align 4
  br label %if.end79

if.end79:                                         ; preds = %if.then77, %lor.end
  %83 = load %struct.sv*, %struct.sv** %filter_sub, align 8
  %tobool80 = icmp ne %struct.sv* %83, null
  br i1 %tobool80, label %land.lhs.true81, label %if.end278

land.lhs.true81:                                  ; preds = %if.end79
  %84 = load i32, i32* %status, align 4
  %cmp82 = icmp sge i32 %84, 0
  br i1 %cmp82, label %if.then84, label %if.end278

if.then84:                                        ; preds = %land.lhs.true81
  %85 = load %struct.sv**, %struct.sv*** @PL_stack_sp, align 8
  store %struct.sv** %85, %struct.sv*** %sp, align 8
  call void @Perl_push_scope()
  %86 = load %struct.gv*, %struct.gv** @PL_defgv, align 8
  call void @Perl_save_gp(%struct.gv* %86, i32 0)
  %87 = load %struct.gv*, %struct.gv** @PL_defgv, align 8
  %sv_any85 = getelementptr inbounds %struct.gv, %struct.gv* %87, i32 0, i32 0
  %88 = load %struct.xpvgv*, %struct.xpvgv** %sv_any85, align 8
  %xpv_cur86 = getelementptr inbounds %struct.xpvgv, %struct.xpvgv* %88, i32 0, i32 2
  %89 = load i64, i64* %xpv_cur86, align 8
  %and87 = and i64 %89, -2
  store i64 %and87, i64* %xpv_cur86, align 8
  %90 = load %struct.gv*, %struct.gv** @PL_defgv, align 8
  %sv_u88 = getelementptr inbounds %struct.gv, %struct.gv* %90, i32 0, i32 3
  %svu_gp = bitcast %union.anon.4* %sv_u88 to %struct.gp**
  %91 = load %struct.gp*, %struct.gp** %svu_gp, align 8
  %add.ptr89 = getelementptr inbounds %struct.gp, %struct.gp* %91, i64 0
  %gp_sv = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr89, i32 0, i32 0
  call void @Perl_save_generic_svref(%struct.sv** %gp_sv)
  %92 = load %struct.gv*, %struct.gv** @PL_defgv, align 8
  %sv_u90 = getelementptr inbounds %struct.gv, %struct.gv* %92, i32 0, i32 3
  %svu_gp91 = bitcast %union.anon.4* %sv_u90 to %struct.gp**
  %93 = load %struct.gp*, %struct.gp** %svu_gp91, align 8
  %add.ptr92 = getelementptr inbounds %struct.gp, %struct.gp* %93, i64 0
  %gp_sv93 = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr92, i32 0, i32 0
  store %struct.sv* null, %struct.sv** %gp_sv93, align 8
  call void @Perl_save_strlen(i64* @PL_tmps_floor)
  %94 = load i64, i64* @PL_tmps_ix, align 8
  store i64 %94, i64* @PL_tmps_floor, align 8
  br label %do.body

do.body:                                          ; preds = %if.then84
  %95 = load %struct.sv**, %struct.sv*** @PL_stack_max, align 8
  %96 = load %struct.sv**, %struct.sv*** %sp, align 8
  %sub.ptr.lhs.cast94 = ptrtoint %struct.sv** %95 to i64
  %sub.ptr.rhs.cast95 = ptrtoint %struct.sv** %96 to i64
  %sub.ptr.sub96 = sub i64 %sub.ptr.lhs.cast94, %sub.ptr.rhs.cast95
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub96, 8
  %cmp97 = icmp slt i64 %sub.ptr.div, 2
  br i1 %cmp97, label %cond.true99, label %cond.false100

cond.true99:                                      ; preds = %do.body
  br i1 true, label %if.then101, label %if.end103

cond.false100:                                    ; preds = %do.body
  br i1 false, label %if.then101, label %if.end103

if.then101:                                       ; preds = %cond.false100, %cond.true99
  %97 = load %struct.sv**, %struct.sv*** %sp, align 8
  %98 = load %struct.sv**, %struct.sv*** %sp, align 8
  %call102 = call %struct.sv** @Perl_stack_grow(%struct.sv** %97, %struct.sv** %98, i64 2)
  store %struct.sv** %call102, %struct.sv*** %sp, align 8
  %99 = load %struct.sv**, %struct.sv*** %sp, align 8
  br label %if.end103

if.end103:                                        ; preds = %if.then101, %cond.false100, %cond.true99
  br label %do.end

do.end:                                           ; preds = %if.end103
  %100 = load %struct.gv*, %struct.gv** @PL_defgv, align 8
  %sv_u104 = getelementptr inbounds %struct.gv, %struct.gv* %100, i32 0, i32 3
  %svu_gp105 = bitcast %union.anon.4* %sv_u104 to %struct.gp**
  %101 = load %struct.gp*, %struct.gp** %svu_gp105, align 8
  %add.ptr106 = getelementptr inbounds %struct.gp, %struct.gp* %101, i64 0
  %gp_sv107 = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr106, i32 0, i32 0
  %102 = load %struct.sv*, %struct.sv** %gp_sv107, align 8
  %103 = bitcast %struct.sv* %102 to i8*
  %104 = bitcast i8* %103 to %struct.sv*
  call void @S_SvREFCNT_dec(%struct.sv* %104)
  %105 = load %struct.sv*, %struct.sv** %upstream, align 8
  %106 = bitcast %struct.sv* %105 to i8*
  %107 = bitcast i8* %106 to %struct.sv*
  %call108 = call %struct.sv* @S_SvREFCNT_inc(%struct.sv* %107)
  %108 = load %struct.gv*, %struct.gv** @PL_defgv, align 8
  %sv_u109 = getelementptr inbounds %struct.gv, %struct.gv* %108, i32 0, i32 3
  %svu_gp110 = bitcast %union.anon.4* %sv_u109 to %struct.gp**
  %109 = load %struct.gp*, %struct.gp** %svu_gp110, align 8
  %add.ptr111 = getelementptr inbounds %struct.gp, %struct.gp* %109, i64 0
  %gp_sv112 = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr111, i32 0, i32 0
  store %struct.sv* %call108, %struct.sv** %gp_sv112, align 8
  br label %do.body113

do.body113:                                       ; preds = %do.end
  %110 = load i32*, i32** @PL_markstack_ptr, align 8
  %incdec.ptr = getelementptr inbounds i32, i32* %110, i32 1
  store i32* %incdec.ptr, i32** @PL_markstack_ptr, align 8
  store i32* %incdec.ptr, i32** %mark_stack_entry, align 8
  %111 = load i32*, i32** @PL_markstack_max, align 8
  %cmp114 = icmp eq i32* %incdec.ptr, %111
  br i1 %cmp114, label %cond.true116, label %cond.false117

cond.true116:                                     ; preds = %do.body113
  br i1 true, label %if.then118, label %if.end120

cond.false117:                                    ; preds = %do.body113
  br i1 false, label %if.then118, label %if.end120

if.then118:                                       ; preds = %cond.false117, %cond.true116
  %call119 = call i32* @Perl_markstack_grow()
  store i32* %call119, i32** %mark_stack_entry, align 8
  br label %if.end120

if.end120:                                        ; preds = %if.then118, %cond.false117, %cond.true116
  %112 = load %struct.sv**, %struct.sv*** %sp, align 8
  %113 = load %struct.sv**, %struct.sv*** @PL_stack_base, align 8
  %sub.ptr.lhs.cast121 = ptrtoint %struct.sv** %112 to i64
  %sub.ptr.rhs.cast122 = ptrtoint %struct.sv** %113 to i64
  %sub.ptr.sub123 = sub i64 %sub.ptr.lhs.cast121, %sub.ptr.rhs.cast122
  %sub.ptr.div124 = sdiv exact i64 %sub.ptr.sub123, 8
  %conv125 = trunc i64 %sub.ptr.div124 to i32
  %114 = load i32*, i32** %mark_stack_entry, align 8
  store i32 %conv125, i32* %114, align 4
  br label %do.end126

do.end126:                                        ; preds = %if.end120
  %call127 = call %struct.sv* @Perl_sv_newmortal()
  %115 = load %struct.sv**, %struct.sv*** %sp, align 8
  %incdec.ptr128 = getelementptr inbounds %struct.sv*, %struct.sv** %115, i32 1
  store %struct.sv** %incdec.ptr128, %struct.sv*** %sp, align 8
  store %struct.sv* %call127, %struct.sv** %incdec.ptr128, align 8
  call void @Perl_sv_setiv(%struct.sv* %call127, i64 0)
  %116 = load %struct.sv*, %struct.sv** %filter_state, align 8
  %tobool129 = icmp ne %struct.sv* %116, null
  br i1 %tobool129, label %if.then130, label %if.end132

if.then130:                                       ; preds = %do.end126
  %117 = load %struct.sv*, %struct.sv** %filter_state, align 8
  %118 = load %struct.sv**, %struct.sv*** %sp, align 8
  %incdec.ptr131 = getelementptr inbounds %struct.sv*, %struct.sv** %118, i32 1
  store %struct.sv** %incdec.ptr131, %struct.sv*** %sp, align 8
  store %struct.sv* %117, %struct.sv** %incdec.ptr131, align 8
  br label %if.end132

if.end132:                                        ; preds = %if.then130, %do.end126
  %119 = load %struct.sv**, %struct.sv*** %sp, align 8
  store %struct.sv** %119, %struct.sv*** @PL_stack_sp, align 8
  %120 = load %struct.sv*, %struct.sv** %filter_sub, align 8
  %call133 = call i32 @Perl_call_sv(%struct.sv* %120, i32 10)
  store i32 %call133, i32* %count, align 4
  %121 = load %struct.sv**, %struct.sv*** @PL_stack_sp, align 8
  store %struct.sv** %121, %struct.sv*** %sp, align 8
  %122 = load i32, i32* %count, align 4
  %cmp134 = icmp sgt i32 %122, 0
  br i1 %cmp134, label %if.then136, label %if.end273

if.then136:                                       ; preds = %if.end132
  %123 = load %struct.sv**, %struct.sv*** %sp, align 8
  %incdec.ptr137 = getelementptr inbounds %struct.sv*, %struct.sv** %123, i32 -1
  store %struct.sv** %incdec.ptr137, %struct.sv*** %sp, align 8
  %124 = load %struct.sv*, %struct.sv** %123, align 8
  store %struct.sv* %124, %struct.sv** %out, align 8
  %125 = load %struct.sv*, %struct.sv** %out, align 8
  %sv_flags138 = getelementptr inbounds %struct.sv, %struct.sv* %125, i32 0, i32 2
  %126 = load i32, i32* %sv_flags138, align 4
  %and139 = and i32 %126, 2097152
  %tobool140 = icmp ne i32 %and139, 0
  br i1 %tobool140, label %cond.true141, label %cond.false142

cond.true141:                                     ; preds = %if.then136
  br i1 true, label %land.rhs143, label %land.end146

cond.false142:                                    ; preds = %if.then136
  br i1 false, label %land.rhs143, label %land.end146

land.rhs143:                                      ; preds = %cond.false142, %cond.true141
  %127 = load %struct.sv*, %struct.sv** %out, align 8
  %call144 = call i32 @Perl_mg_get(%struct.sv* %127)
  %tobool145 = icmp ne i32 %call144, 0
  br label %land.end146

land.end146:                                      ; preds = %land.rhs143, %cond.false142, %cond.true141
  %128 = phi i1 [ false, %cond.false142 ], [ false, %cond.true141 ], [ %tobool145, %land.rhs143 ]
  %land.ext147 = zext i1 %128 to i32
  %129 = load %struct.sv*, %struct.sv** %out, align 8
  %sv_flags148 = getelementptr inbounds %struct.sv, %struct.sv* %129, i32 0, i32 2
  %130 = load i32, i32* %sv_flags148, align 4
  %and149 = and i32 %130, 65280
  %tobool150 = icmp ne i32 %and149, 0
  br i1 %tobool150, label %if.then161, label %lor.lhs.false151

lor.lhs.false151:                                 ; preds = %land.end146
  %131 = load %struct.sv*, %struct.sv** %out, align 8
  %sv_flags152 = getelementptr inbounds %struct.sv, %struct.sv* %131, i32 0, i32 2
  %132 = load i32, i32* %sv_flags152, align 4
  %and153 = and i32 %132, 255
  %cmp154 = icmp eq i32 %and153, 8
  br i1 %cmp154, label %if.then161, label %lor.lhs.false156

lor.lhs.false156:                                 ; preds = %lor.lhs.false151
  %133 = load %struct.sv*, %struct.sv** %out, align 8
  %sv_flags157 = getelementptr inbounds %struct.sv, %struct.sv* %133, i32 0, i32 2
  %134 = load i32, i32* %sv_flags157, align 4
  %and158 = and i32 %134, 16826623
  %cmp159 = icmp eq i32 %and158, 16777226
  br i1 %cmp159, label %if.then161, label %if.else175

if.then161:                                       ; preds = %lor.lhs.false156, %lor.lhs.false151, %land.end146
  %135 = load %struct.sv*, %struct.sv** %out, align 8
  %sv_flags162 = getelementptr inbounds %struct.sv, %struct.sv* %135, i32 0, i32 2
  %136 = load i32, i32* %sv_flags162, align 4
  %and163 = and i32 %136, 2097408
  %cmp164 = icmp eq i32 %and163, 256
  br i1 %cmp164, label %cond.true166, label %cond.false170

cond.true166:                                     ; preds = %if.then161
  %137 = load %struct.sv*, %struct.sv** %out, align 8
  %sv_any167 = getelementptr inbounds %struct.sv, %struct.sv* %137, i32 0, i32 0
  %138 = load i8*, i8** %sv_any167, align 8
  %139 = bitcast i8* %138 to %struct.xpviv*
  %xiv_u168 = getelementptr inbounds %struct.xpviv, %struct.xpviv* %139, i32 0, i32 4
  %xivu_iv169 = bitcast %union._xivu* %xiv_u168 to i64*
  %140 = load i64, i64* %xivu_iv169, align 8
  br label %cond.end172

cond.false170:                                    ; preds = %if.then161
  %141 = load %struct.sv*, %struct.sv** %out, align 8
  %call171 = call i64 @Perl_sv_2iv_flags(%struct.sv* %141, i32 2)
  br label %cond.end172

cond.end172:                                      ; preds = %cond.false170, %cond.true166
  %cond173 = phi i64 [ %140, %cond.true166 ], [ %call171, %cond.false170 ]
  %conv174 = trunc i64 %cond173 to i32
  store i32 %conv174, i32* %status, align 4
  br label %if.end272

if.else175:                                       ; preds = %lor.lhs.false156
  %142 = load %struct.gv*, %struct.gv** @PL_errgv, align 8
  %sv_u176 = getelementptr inbounds %struct.gv, %struct.gv* %142, i32 0, i32 3
  %svu_gp177 = bitcast %union.anon.4* %sv_u176 to %struct.gp**
  %143 = load %struct.gp*, %struct.gp** %svu_gp177, align 8
  %add.ptr178 = getelementptr inbounds %struct.gp, %struct.gp* %143, i64 0
  %gp_sv179 = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr178, i32 0, i32 0
  %144 = load %struct.sv*, %struct.sv** %gp_sv179, align 8
  %tobool180 = icmp ne %struct.sv* %144, null
  br i1 %tobool180, label %cond.true181, label %cond.false186

cond.true181:                                     ; preds = %if.else175
  %145 = load %struct.gv*, %struct.gv** @PL_errgv, align 8
  %sv_u182 = getelementptr inbounds %struct.gv, %struct.gv* %145, i32 0, i32 3
  %svu_gp183 = bitcast %union.anon.4* %sv_u182 to %struct.gp**
  %146 = load %struct.gp*, %struct.gp** %svu_gp183, align 8
  %add.ptr184 = getelementptr inbounds %struct.gp, %struct.gp* %146, i64 0
  %gp_sv185 = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr184, i32 0, i32 0
  br label %cond.end192

cond.false186:                                    ; preds = %if.else175
  %147 = load %struct.gv*, %struct.gv** @PL_errgv, align 8
  %call187 = call %struct.gv* @Perl_gv_add_by_type(%struct.gv* %147, i32 0)
  %sv_u188 = getelementptr inbounds %struct.gv, %struct.gv* %call187, i32 0, i32 3
  %svu_gp189 = bitcast %union.anon.4* %sv_u188 to %struct.gp**
  %148 = load %struct.gp*, %struct.gp** %svu_gp189, align 8
  %add.ptr190 = getelementptr inbounds %struct.gp, %struct.gp* %148, i64 0
  %gp_sv191 = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr190, i32 0, i32 0
  br label %cond.end192

cond.end192:                                      ; preds = %cond.false186, %cond.true181
  %cond193 = phi %struct.sv** [ %gp_sv185, %cond.true181 ], [ %gp_sv191, %cond.false186 ]
  %149 = load %struct.sv*, %struct.sv** %cond193, align 8
  store %struct.sv* %149, %struct.sv** %errsv, align 8
  %150 = load %struct.sv*, %struct.sv** %errsv, align 8
  %sv_flags194 = getelementptr inbounds %struct.sv, %struct.sv* %150, i32 0, i32 2
  %151 = load i32, i32* %sv_flags194, align 4
  %and195 = and i32 %151, 2097152
  %tobool196 = icmp ne i32 %and195, 0
  br i1 %tobool196, label %cond.true197, label %cond.false198

cond.true197:                                     ; preds = %cond.end192
  br i1 true, label %cond.true199, label %cond.false202

cond.false198:                                    ; preds = %cond.end192
  br i1 false, label %cond.true199, label %cond.false202

cond.true199:                                     ; preds = %cond.false198, %cond.true197
  %152 = load %struct.sv*, %struct.sv** %errsv, align 8
  %call200 = call zeroext i1 @Perl_sv_2bool_flags(%struct.sv* %152, i32 2)
  br i1 %call200, label %if.then269, label %if.end271

cond.false202:                                    ; preds = %cond.false198, %cond.true197
  %153 = load %struct.sv*, %struct.sv** %errsv, align 8
  %sv_flags203 = getelementptr inbounds %struct.sv, %struct.sv* %153, i32 0, i32 2
  %154 = load i32, i32* %sv_flags203, align 4
  %and204 = and i32 %154, 65280
  %tobool205 = icmp ne i32 %and204, 0
  br i1 %tobool205, label %cond.false217, label %lor.lhs.false206

lor.lhs.false206:                                 ; preds = %cond.false202
  %155 = load %struct.sv*, %struct.sv** %errsv, align 8
  %sv_flags207 = getelementptr inbounds %struct.sv, %struct.sv* %155, i32 0, i32 2
  %156 = load i32, i32* %sv_flags207, align 4
  %and208 = and i32 %156, 255
  %cmp209 = icmp eq i32 %and208, 8
  br i1 %cmp209, label %cond.false217, label %lor.lhs.false211

lor.lhs.false211:                                 ; preds = %lor.lhs.false206
  %157 = load %struct.sv*, %struct.sv** %errsv, align 8
  %sv_flags212 = getelementptr inbounds %struct.sv, %struct.sv* %157, i32 0, i32 2
  %158 = load i32, i32* %sv_flags212, align 4
  %and213 = and i32 %158, 16826623
  %cmp214 = icmp eq i32 %and213, 16777226
  br i1 %cmp214, label %cond.false217, label %cond.true216

cond.true216:                                     ; preds = %lor.lhs.false211
  br i1 false, label %if.then269, label %if.end271

cond.false217:                                    ; preds = %lor.lhs.false211, %lor.lhs.false206, %cond.false202
  %159 = load %struct.sv*, %struct.sv** %errsv, align 8
  %sv_flags218 = getelementptr inbounds %struct.sv, %struct.sv* %159, i32 0, i32 2
  %160 = load i32, i32* %sv_flags218, align 4
  %and219 = and i32 %160, 1024
  %tobool220 = icmp ne i32 %and219, 0
  br i1 %tobool220, label %cond.true221, label %cond.false239

cond.true221:                                     ; preds = %cond.false217
  %161 = load %struct.sv*, %struct.sv** %errsv, align 8
  %sv_any222 = getelementptr inbounds %struct.sv, %struct.sv* %161, i32 0, i32 0
  %162 = load i8*, i8** %sv_any222, align 8
  %163 = bitcast i8* %162 to %struct.xpv*
  %tobool223 = icmp ne %struct.xpv* %163, null
  br i1 %tobool223, label %land.lhs.true224, label %if.end271

land.lhs.true224:                                 ; preds = %cond.true221
  %164 = load %struct.sv*, %struct.sv** %errsv, align 8
  %sv_any225 = getelementptr inbounds %struct.sv, %struct.sv* %164, i32 0, i32 0
  %165 = load i8*, i8** %sv_any225, align 8
  %166 = bitcast i8* %165 to %struct.xpv*
  %xpv_cur226 = getelementptr inbounds %struct.xpv, %struct.xpv* %166, i32 0, i32 2
  %167 = load i64, i64* %xpv_cur226, align 8
  %cmp227 = icmp ugt i64 %167, 1
  br i1 %cmp227, label %if.then269, label %lor.lhs.false229

lor.lhs.false229:                                 ; preds = %land.lhs.true224
  %168 = load %struct.sv*, %struct.sv** %errsv, align 8
  %sv_any230 = getelementptr inbounds %struct.sv, %struct.sv* %168, i32 0, i32 0
  %169 = load i8*, i8** %sv_any230, align 8
  %170 = bitcast i8* %169 to %struct.xpv*
  %xpv_cur231 = getelementptr inbounds %struct.xpv, %struct.xpv* %170, i32 0, i32 2
  %171 = load i64, i64* %xpv_cur231, align 8
  %tobool232 = icmp ne i64 %171, 0
  br i1 %tobool232, label %land.lhs.true233, label %if.end271

land.lhs.true233:                                 ; preds = %lor.lhs.false229
  %172 = load %struct.sv*, %struct.sv** %errsv, align 8
  %sv_u234 = getelementptr inbounds %struct.sv, %struct.sv* %172, i32 0, i32 3
  %svu_pv235 = bitcast %union.anon* %sv_u234 to i8**
  %173 = load i8*, i8** %svu_pv235, align 8
  %174 = load i8, i8* %173, align 1
  %conv236 = sext i8 %174 to i32
  %cmp237 = icmp ne i32 %conv236, 48
  br i1 %cmp237, label %if.then269, label %if.end271

cond.false239:                                    ; preds = %cond.false217
  %175 = load %struct.sv*, %struct.sv** %errsv, align 8
  %sv_flags240 = getelementptr inbounds %struct.sv, %struct.sv* %175, i32 0, i32 2
  %176 = load i32, i32* %sv_flags240, align 4
  %and241 = and i32 %176, 768
  %tobool242 = icmp ne i32 %and241, 0
  br i1 %tobool242, label %cond.true243, label %cond.false266

cond.true243:                                     ; preds = %cond.false239
  %177 = load %struct.sv*, %struct.sv** %errsv, align 8
  %sv_flags244 = getelementptr inbounds %struct.sv, %struct.sv* %177, i32 0, i32 2
  %178 = load i32, i32* %sv_flags244, align 4
  %and245 = and i32 %178, 256
  %tobool246 = icmp ne i32 %and245, 0
  br i1 %tobool246, label %land.lhs.true247, label %lor.lhs.false253

land.lhs.true247:                                 ; preds = %cond.true243
  %179 = load %struct.sv*, %struct.sv** %errsv, align 8
  %sv_any248 = getelementptr inbounds %struct.sv, %struct.sv* %179, i32 0, i32 0
  %180 = load i8*, i8** %sv_any248, align 8
  %181 = bitcast i8* %180 to %struct.xpviv*
  %xiv_u249 = getelementptr inbounds %struct.xpviv, %struct.xpviv* %181, i32 0, i32 4
  %xivu_iv250 = bitcast %union._xivu* %xiv_u249 to i64*
  %182 = load i64, i64* %xivu_iv250, align 8
  %cmp251 = icmp ne i64 %182, 0
  br i1 %cmp251, label %if.then269, label %lor.lhs.false253

lor.lhs.false253:                                 ; preds = %land.lhs.true247, %cond.true243
  %183 = load %struct.sv*, %struct.sv** %errsv, align 8
  %sv_flags254 = getelementptr inbounds %struct.sv, %struct.sv* %183, i32 0, i32 2
  %184 = load i32, i32* %sv_flags254, align 4
  %and255 = and i32 %184, 512
  %tobool256 = icmp ne i32 %and255, 0
  br i1 %tobool256, label %land.lhs.true257, label %if.end271

land.lhs.true257:                                 ; preds = %lor.lhs.false253
  %185 = load %struct.sv*, %struct.sv** %errsv, align 8
  %sv_any258 = getelementptr inbounds %struct.sv, %struct.sv* %185, i32 0, i32 0
  %186 = load i8*, i8** %sv_any258, align 8
  %187 = bitcast i8* %186 to %struct.xpvnv*
  %xnv_u = getelementptr inbounds %struct.xpvnv, %struct.xpvnv* %187, i32 0, i32 5
  %xnv_nv = bitcast %union._xnvu* %xnv_u to double*
  %188 = load double, double* %xnv_nv, align 8
  %cmp259 = fcmp uno double %188, %188
  br i1 %cmp259, label %if.then269, label %lor.lhs.false260

lor.lhs.false260:                                 ; preds = %land.lhs.true257
  %189 = load %struct.sv*, %struct.sv** %errsv, align 8
  %sv_any261 = getelementptr inbounds %struct.sv, %struct.sv* %189, i32 0, i32 0
  %190 = load i8*, i8** %sv_any261, align 8
  %191 = bitcast i8* %190 to %struct.xpvnv*
  %xnv_u262 = getelementptr inbounds %struct.xpvnv, %struct.xpvnv* %191, i32 0, i32 5
  %xnv_nv263 = bitcast %union._xnvu* %xnv_u262 to double*
  %192 = load double, double* %xnv_nv263, align 8
  %cmp264 = fcmp une double %192, 0.000000e+00
  br i1 %cmp264, label %if.then269, label %if.end271

cond.false266:                                    ; preds = %cond.false239
  %193 = load %struct.sv*, %struct.sv** %errsv, align 8
  %call267 = call zeroext i1 @Perl_sv_2bool_flags(%struct.sv* %193, i32 0)
  br i1 %call267, label %if.then269, label %if.end271

if.then269:                                       ; preds = %cond.false266, %lor.lhs.false260, %land.lhs.true257, %land.lhs.true247, %land.lhs.true233, %land.lhs.true224, %cond.true216, %cond.true199
  %194 = load %struct.sv*, %struct.sv** %errsv, align 8
  %call270 = call %struct.sv* @Perl_newSVsv(%struct.sv* %194)
  store %struct.sv* %call270, %struct.sv** %err, align 8
  br label %if.end271

if.end271:                                        ; preds = %if.then269, %cond.false266, %lor.lhs.false260, %lor.lhs.false253, %land.lhs.true233, %lor.lhs.false229, %cond.true221, %cond.true216, %cond.true199
  br label %if.end272

if.end272:                                        ; preds = %if.end271, %cond.end172
  br label %if.end273

if.end273:                                        ; preds = %if.end272, %if.end132
  %195 = load %struct.sv**, %struct.sv*** %sp, align 8
  store %struct.sv** %195, %struct.sv*** @PL_stack_sp, align 8
  %196 = load i64, i64* @PL_tmps_ix, align 8
  %197 = load i64, i64* @PL_tmps_floor, align 8
  %cmp274 = icmp sgt i64 %196, %197
  br i1 %cmp274, label %if.then276, label %if.end277

if.then276:                                       ; preds = %if.end273
  call void @Perl_free_tmps()
  br label %if.end277

if.end277:                                        ; preds = %if.then276, %if.end273
  call void @Perl_pop_scope()
  br label %if.end278

if.end278:                                        ; preds = %if.end277, %land.lhs.true81, %if.end79
  %198 = load %struct.sv*, %struct.sv** %upstream, align 8
  %sv_flags279 = getelementptr inbounds %struct.sv, %struct.sv* %198, i32 0, i32 2
  %199 = load i32, i32* %sv_flags279, align 4
  %and280 = and i32 %199, 2097152
  %tobool281 = icmp ne i32 %and280, 0
  br i1 %tobool281, label %if.then282, label %if.end289

if.then282:                                       ; preds = %if.end278
  %200 = load %struct.sv*, %struct.sv** %upstream, align 8
  %call283 = call i32 @Perl_mg_get(%struct.sv* %200)
  %201 = load %struct.sv*, %struct.sv** %upstream, align 8
  %202 = load %struct.sv*, %struct.sv** %buf_sv.addr, align 8
  %cmp284 = icmp eq %struct.sv* %201, %202
  br i1 %cmp284, label %if.then286, label %if.end288

if.then286:                                       ; preds = %if.then282
  %203 = load %struct.sv*, %struct.sv** %buf_sv.addr, align 8
  %call287 = call i32 @Perl_mg_free(%struct.sv* %203)
  br label %if.end288

if.end288:                                        ; preds = %if.then286, %if.then282
  br label %if.end289

if.end289:                                        ; preds = %if.end288, %if.end278
  %204 = load %struct.sv*, %struct.sv** %upstream, align 8
  %sv_flags290 = getelementptr inbounds %struct.sv, %struct.sv* %204, i32 0, i32 2
  %205 = load i32, i32* %sv_flags290, align 4
  %and291 = and i32 %205, 268435456
  %tobool292 = icmp ne i32 %and291, 0
  br i1 %tobool292, label %if.then293, label %if.end294

if.then293:                                       ; preds = %if.end289
  %206 = load %struct.sv*, %struct.sv** %upstream, align 8
  call void @Perl_sv_force_normal_flags(%struct.sv* %206, i32 0)
  br label %if.end294

if.end294:                                        ; preds = %if.then293, %if.end289
  %207 = load %struct.sv*, %struct.sv** %err, align 8
  %tobool295 = icmp ne %struct.sv* %207, null
  br i1 %tobool295, label %if.end344, label %land.lhs.true296

land.lhs.true296:                                 ; preds = %if.end294
  %208 = load %struct.sv*, %struct.sv** %upstream, align 8
  %sv_flags297 = getelementptr inbounds %struct.sv, %struct.sv* %208, i32 0, i32 2
  %209 = load i32, i32* %sv_flags297, align 4
  %and298 = and i32 %209, 65280
  %tobool299 = icmp ne i32 %and298, 0
  br i1 %tobool299, label %if.then310, label %lor.lhs.false300

lor.lhs.false300:                                 ; preds = %land.lhs.true296
  %210 = load %struct.sv*, %struct.sv** %upstream, align 8
  %sv_flags301 = getelementptr inbounds %struct.sv, %struct.sv* %210, i32 0, i32 2
  %211 = load i32, i32* %sv_flags301, align 4
  %and302 = and i32 %211, 255
  %cmp303 = icmp eq i32 %and302, 8
  br i1 %cmp303, label %if.then310, label %lor.lhs.false305

lor.lhs.false305:                                 ; preds = %lor.lhs.false300
  %212 = load %struct.sv*, %struct.sv** %upstream, align 8
  %sv_flags306 = getelementptr inbounds %struct.sv, %struct.sv* %212, i32 0, i32 2
  %213 = load i32, i32* %sv_flags306, align 4
  %and307 = and i32 %213, 16826623
  %cmp308 = icmp eq i32 %and307, 16777226
  br i1 %cmp308, label %if.then310, label %if.end344

if.then310:                                       ; preds = %lor.lhs.false305, %lor.lhs.false300, %land.lhs.true296
  %214 = load %struct.sv*, %struct.sv** %upstream, align 8
  %sv_flags311 = getelementptr inbounds %struct.sv, %struct.sv* %214, i32 0, i32 2
  %215 = load i32, i32* %sv_flags311, align 4
  %and312 = and i32 %215, 2098176
  %cmp313 = icmp eq i32 %and312, 1024
  br i1 %cmp313, label %cond.true315, label %cond.false320

cond.true315:                                     ; preds = %if.then310
  %216 = load %struct.sv*, %struct.sv** %upstream, align 8
  %sv_any316 = getelementptr inbounds %struct.sv, %struct.sv* %216, i32 0, i32 0
  %217 = load i8*, i8** %sv_any316, align 8
  %218 = bitcast i8* %217 to %struct.xpv*
  %xpv_cur317 = getelementptr inbounds %struct.xpv, %struct.xpv* %218, i32 0, i32 2
  %219 = load i64, i64* %xpv_cur317, align 8
  store i64 %219, i64* %got_len, align 8
  %220 = load %struct.sv*, %struct.sv** %upstream, align 8
  %sv_u318 = getelementptr inbounds %struct.sv, %struct.sv* %220, i32 0, i32 3
  %svu_pv319 = bitcast %union.anon* %sv_u318 to i8**
  %221 = load i8*, i8** %svu_pv319, align 8
  br label %cond.end322

cond.false320:                                    ; preds = %if.then310
  %222 = load %struct.sv*, %struct.sv** %upstream, align 8
  %call321 = call i8* @Perl_sv_2pv_flags(%struct.sv* %222, i64* %got_len, i32 0)
  br label %cond.end322

cond.end322:                                      ; preds = %cond.false320, %cond.true315
  %cond323 = phi i8* [ %221, %cond.true315 ], [ %call321, %cond.false320 ]
  store i8* %cond323, i8** %got_p, align 8
  %223 = load i64, i64* %umaxlen, align 8
  %tobool324 = icmp ne i64 %223, 0
  br i1 %tobool324, label %if.then325, label %if.else331

if.then325:                                       ; preds = %cond.end322
  %224 = load i64, i64* %got_len, align 8
  %225 = load i64, i64* %umaxlen, align 8
  %cmp326 = icmp ugt i64 %224, %225
  br i1 %cmp326, label %if.then328, label %if.end330

if.then328:                                       ; preds = %if.then325
  %226 = load i8*, i8** %got_p, align 8
  %227 = load i64, i64* %umaxlen, align 8
  %add.ptr329 = getelementptr inbounds i8, i8* %226, i64 %227
  store i8* %add.ptr329, i8** %prune_from, align 8
  br label %if.end330

if.end330:                                        ; preds = %if.then328, %if.then325
  br label %if.end343

if.else331:                                       ; preds = %cond.end322
  %228 = load i8*, i8** %got_p, align 8
  %229 = load i64, i64* %got_len, align 8
  %call333 = call i8* @memchr(i8* %228, i32 10, i64 %229) #8
  store i8* %call333, i8** %first_nl332, align 8
  %230 = load i8*, i8** %first_nl332, align 8
  %tobool334 = icmp ne i8* %230, null
  br i1 %tobool334, label %land.lhs.true335, label %if.end342

land.lhs.true335:                                 ; preds = %if.else331
  %231 = load i8*, i8** %first_nl332, align 8
  %add.ptr336 = getelementptr inbounds i8, i8* %231, i64 1
  %232 = load i8*, i8** %got_p, align 8
  %233 = load i64, i64* %got_len, align 8
  %add.ptr337 = getelementptr inbounds i8, i8* %232, i64 %233
  %cmp338 = icmp ult i8* %add.ptr336, %add.ptr337
  br i1 %cmp338, label %if.then340, label %if.end342

if.then340:                                       ; preds = %land.lhs.true335
  %234 = load i8*, i8** %first_nl332, align 8
  %add.ptr341 = getelementptr inbounds i8, i8* %234, i64 1
  store i8* %add.ptr341, i8** %prune_from, align 8
  br label %if.end342

if.end342:                                        ; preds = %if.then340, %land.lhs.true335, %if.else331
  br label %if.end343

if.end343:                                        ; preds = %if.end342, %if.end330
  br label %if.end344

if.end344:                                        ; preds = %if.end343, %lor.lhs.false305, %if.end294
  %235 = load %struct.sv*, %struct.sv** %err, align 8
  %tobool345 = icmp ne %struct.sv* %235, null
  br i1 %tobool345, label %if.end394, label %land.lhs.true346

land.lhs.true346:                                 ; preds = %if.end344
  %236 = load i8*, i8** %prune_from, align 8
  %tobool347 = icmp ne i8* %236, null
  br i1 %tobool347, label %if.then348, label %if.end394

if.then348:                                       ; preds = %land.lhs.true346
  %237 = load i8*, i8** %got_p, align 8
  %238 = load i64, i64* %got_len, align 8
  %add.ptr349 = getelementptr inbounds i8, i8* %237, i64 %238
  %239 = load i8*, i8** %prune_from, align 8
  %sub.ptr.lhs.cast350 = ptrtoint i8* %add.ptr349 to i64
  %sub.ptr.rhs.cast351 = ptrtoint i8* %239 to i64
  %sub.ptr.sub352 = sub i64 %sub.ptr.lhs.cast350, %sub.ptr.rhs.cast351
  store i64 %sub.ptr.sub352, i64* %cached_len, align 8
  %240 = load %struct.sv*, %struct.sv** %datasv, align 8
  store %struct.sv* %240, %struct.sv** %cache353, align 8
  %241 = load %struct.sv*, %struct.sv** %cache353, align 8
  %sv_flags354 = getelementptr inbounds %struct.sv, %struct.sv* %241, i32 0, i32 2
  %242 = load i32, i32* %sv_flags354, align 4
  %and355 = and i32 %242, 65280
  %tobool356 = icmp ne i32 %and355, 0
  br i1 %tobool356, label %if.then367, label %lor.lhs.false357

lor.lhs.false357:                                 ; preds = %if.then348
  %243 = load %struct.sv*, %struct.sv** %cache353, align 8
  %sv_flags358 = getelementptr inbounds %struct.sv, %struct.sv* %243, i32 0, i32 2
  %244 = load i32, i32* %sv_flags358, align 4
  %and359 = and i32 %244, 255
  %cmp360 = icmp eq i32 %and359, 8
  br i1 %cmp360, label %if.then367, label %lor.lhs.false362

lor.lhs.false362:                                 ; preds = %lor.lhs.false357
  %245 = load %struct.sv*, %struct.sv** %cache353, align 8
  %sv_flags363 = getelementptr inbounds %struct.sv, %struct.sv* %245, i32 0, i32 2
  %246 = load i32, i32* %sv_flags363, align 4
  %and364 = and i32 %246, 16826623
  %cmp365 = icmp eq i32 %and364, 16777226
  br i1 %cmp365, label %if.then367, label %if.end368

if.then367:                                       ; preds = %lor.lhs.false362, %lor.lhs.false357, %if.then348
  br label %if.end368

if.end368:                                        ; preds = %if.then367, %lor.lhs.false362
  %247 = load %struct.sv*, %struct.sv** %cache353, align 8
  %248 = load i8*, i8** %prune_from, align 8
  %249 = load i64, i64* %cached_len, align 8
  call void @Perl_sv_setpvn(%struct.sv* %247, i8* %248, i64 %249)
  %250 = load %struct.sv*, %struct.sv** %upstream, align 8
  %sv_flags369 = getelementptr inbounds %struct.sv, %struct.sv* %250, i32 0, i32 2
  %251 = load i32, i32* %sv_flags369, align 4
  %and370 = and i32 %251, 536870912
  %tobool371 = icmp ne i32 %and370, 0
  br i1 %tobool371, label %if.then372, label %if.end374

if.then372:                                       ; preds = %if.end368
  %252 = load %struct.sv*, %struct.sv** %cache353, align 8
  %sv_flags373 = getelementptr inbounds %struct.sv, %struct.sv* %252, i32 0, i32 2
  %253 = load i32, i32* %sv_flags373, align 4
  %or = or i32 %253, 536870912
  store i32 %or, i32* %sv_flags373, align 4
  br label %if.end374

if.end374:                                        ; preds = %if.then372, %if.end368
  %254 = load %struct.sv*, %struct.sv** %upstream, align 8
  %sv_flags375 = getelementptr inbounds %struct.sv, %struct.sv* %254, i32 0, i32 2
  %255 = load i32, i32* %sv_flags375, align 4
  %and376 = and i32 %255, 1024
  %tobool377 = icmp ne i32 %and376, 0
  br i1 %tobool377, label %if.then378, label %if.else384

if.then378:                                       ; preds = %if.end374
  br label %do.body379

do.body379:                                       ; preds = %if.then378
  %256 = load i64, i64* %got_len, align 8
  %257 = load i64, i64* %cached_len, align 8
  %sub380 = sub i64 %256, %257
  %258 = load %struct.sv*, %struct.sv** %upstream, align 8
  %sv_any381 = getelementptr inbounds %struct.sv, %struct.sv* %258, i32 0, i32 0
  %259 = load i8*, i8** %sv_any381, align 8
  %260 = bitcast i8* %259 to %struct.xpv*
  %xpv_cur382 = getelementptr inbounds %struct.xpv, %struct.xpv* %260, i32 0, i32 2
  store i64 %sub380, i64* %xpv_cur382, align 8
  br label %do.end383

do.end383:                                        ; preds = %do.body379
  br label %if.end389

if.else384:                                       ; preds = %if.end374
  %261 = load %struct.sv*, %struct.sv** %upstream, align 8
  %262 = load i8*, i8** %got_p, align 8
  %263 = load i64, i64* %got_len, align 8
  %264 = load i64, i64* %cached_len, align 8
  %sub385 = sub i64 %263, %264
  %conv386 = trunc i64 %sub385 to i32
  %call387 = call i8* @Perl_savepvn(i8* %262, i32 %conv386)
  %265 = load i64, i64* %got_len, align 8
  %266 = load i64, i64* %cached_len, align 8
  %sub388 = sub i64 %265, %266
  call void @Perl_sv_usepvn_flags(%struct.sv* %261, i8* %call387, i64 %sub388, i32 0)
  br label %if.end389

if.end389:                                        ; preds = %if.else384, %do.end383
  %267 = load i8*, i8** %prune_from, align 8
  store i8 0, i8* %267, align 1
  %268 = load i32, i32* %status, align 4
  %cmp390 = icmp eq i32 %268, 0
  br i1 %cmp390, label %if.then392, label %if.end393

if.then392:                                       ; preds = %if.end389
  store i32 1, i32* %status, align 4
  br label %if.end393

if.end393:                                        ; preds = %if.then392, %if.end389
  br label %if.end394

if.end394:                                        ; preds = %if.end393, %land.lhs.true346, %if.end344
  %269 = load %struct.sv*, %struct.sv** %err, align 8
  %tobool395 = icmp ne %struct.sv* %269, null
  br i1 %tobool395, label %if.else414, label %land.lhs.true396

land.lhs.true396:                                 ; preds = %if.end394
  %270 = load %struct.sv*, %struct.sv** %upstream, align 8
  %271 = load %struct.sv*, %struct.sv** %buf_sv.addr, align 8
  %cmp397 = icmp ne %struct.sv* %270, %271
  br i1 %cmp397, label %land.lhs.true399, label %if.else414

land.lhs.true399:                                 ; preds = %land.lhs.true396
  %272 = load %struct.sv*, %struct.sv** %upstream, align 8
  %sv_flags400 = getelementptr inbounds %struct.sv, %struct.sv* %272, i32 0, i32 2
  %273 = load i32, i32* %sv_flags400, align 4
  %and401 = and i32 %273, 65280
  %tobool402 = icmp ne i32 %and401, 0
  br i1 %tobool402, label %if.then413, label %lor.lhs.false403

lor.lhs.false403:                                 ; preds = %land.lhs.true399
  %274 = load %struct.sv*, %struct.sv** %upstream, align 8
  %sv_flags404 = getelementptr inbounds %struct.sv, %struct.sv* %274, i32 0, i32 2
  %275 = load i32, i32* %sv_flags404, align 4
  %and405 = and i32 %275, 255
  %cmp406 = icmp eq i32 %and405, 8
  br i1 %cmp406, label %if.then413, label %lor.lhs.false408

lor.lhs.false408:                                 ; preds = %lor.lhs.false403
  %276 = load %struct.sv*, %struct.sv** %upstream, align 8
  %sv_flags409 = getelementptr inbounds %struct.sv, %struct.sv* %276, i32 0, i32 2
  %277 = load i32, i32* %sv_flags409, align 4
  %and410 = and i32 %277, 16826623
  %cmp411 = icmp eq i32 %and410, 16777226
  br i1 %cmp411, label %if.then413, label %if.else414

if.then413:                                       ; preds = %lor.lhs.false408, %lor.lhs.false403, %land.lhs.true399
  %278 = load %struct.sv*, %struct.sv** %buf_sv.addr, align 8
  %279 = load %struct.sv*, %struct.sv** %upstream, align 8
  call void @Perl_sv_catsv_flags(%struct.sv* %278, %struct.sv* %279, i32 0)
  br label %if.end441

if.else414:                                       ; preds = %lor.lhs.false408, %land.lhs.true396, %if.end394
  %280 = load %struct.sv*, %struct.sv** %upstream, align 8
  %sv_flags415 = getelementptr inbounds %struct.sv, %struct.sv* %280, i32 0, i32 2
  %281 = load i32, i32* %sv_flags415, align 4
  %and416 = and i32 %281, 65280
  %tobool417 = icmp ne i32 %and416, 0
  br i1 %tobool417, label %if.then428, label %lor.lhs.false418

lor.lhs.false418:                                 ; preds = %if.else414
  %282 = load %struct.sv*, %struct.sv** %upstream, align 8
  %sv_flags419 = getelementptr inbounds %struct.sv, %struct.sv* %282, i32 0, i32 2
  %283 = load i32, i32* %sv_flags419, align 4
  %and420 = and i32 %283, 255
  %cmp421 = icmp eq i32 %and420, 8
  br i1 %cmp421, label %if.then428, label %lor.lhs.false423

lor.lhs.false423:                                 ; preds = %lor.lhs.false418
  %284 = load %struct.sv*, %struct.sv** %upstream, align 8
  %sv_flags424 = getelementptr inbounds %struct.sv, %struct.sv* %284, i32 0, i32 2
  %285 = load i32, i32* %sv_flags424, align 4
  %and425 = and i32 %285, 16826623
  %cmp426 = icmp eq i32 %and425, 16777226
  br i1 %cmp426, label %if.then428, label %if.end440

if.then428:                                       ; preds = %lor.lhs.false423, %lor.lhs.false418, %if.else414
  %286 = load %struct.sv*, %struct.sv** %buf_sv.addr, align 8
  %sv_flags429 = getelementptr inbounds %struct.sv, %struct.sv* %286, i32 0, i32 2
  %287 = load i32, i32* %sv_flags429, align 4
  %and430 = and i32 %287, 430018304
  %cmp431 = icmp eq i32 %and430, 1024
  br i1 %cmp431, label %cond.true433, label %cond.false436

cond.true433:                                     ; preds = %if.then428
  %288 = load %struct.sv*, %struct.sv** %buf_sv.addr, align 8
  %sv_u434 = getelementptr inbounds %struct.sv, %struct.sv* %288, i32 0, i32 3
  %svu_pv435 = bitcast %union.anon* %sv_u434 to i8**
  %289 = load i8*, i8** %svu_pv435, align 8
  br label %cond.end438

cond.false436:                                    ; preds = %if.then428
  %290 = load %struct.sv*, %struct.sv** %buf_sv.addr, align 8
  %call437 = call i8* @Perl_sv_pvn_force_flags(%struct.sv* %290, i64* null, i32 2)
  br label %cond.end438

cond.end438:                                      ; preds = %cond.false436, %cond.true433
  %cond439 = phi i8* [ %289, %cond.true433 ], [ %call437, %cond.false436 ]
  br label %if.end440

if.end440:                                        ; preds = %cond.end438, %lor.lhs.false423
  br label %if.end441

if.end441:                                        ; preds = %if.end440, %if.then413
  %291 = load i32, i32* %status, align 4
  %cmp442 = icmp sle i32 %291, 0
  br i1 %cmp442, label %if.then444, label %if.end458

if.then444:                                       ; preds = %if.end441
  %292 = load %struct.sv*, %struct.sv** %datasv, align 8
  %sv_any445 = getelementptr inbounds %struct.sv, %struct.sv* %292, i32 0, i32 0
  %293 = load i8*, i8** %sv_any445, align 8
  %294 = bitcast i8* %293 to %struct.xpvio*
  %xiv_u446 = getelementptr inbounds %struct.xpvio, %struct.xpvio* %294, i32 0, i32 4
  %xivu_iv447 = bitcast %union._xivu* %xiv_u446 to i64*
  store i64 0, i64* %xivu_iv447, align 8
  %295 = load %struct.sv*, %struct.sv** %filter_state, align 8
  %tobool448 = icmp ne %struct.sv* %295, null
  br i1 %tobool448, label %if.then449, label %if.end452

if.then449:                                       ; preds = %if.then444
  %296 = load %struct.sv*, %struct.sv** %filter_state, align 8
  %297 = bitcast %struct.sv* %296 to i8*
  %298 = bitcast i8* %297 to %struct.sv*
  call void @S_SvREFCNT_dec(%struct.sv* %298)
  %299 = load %struct.sv*, %struct.sv** %datasv, align 8
  %sv_any450 = getelementptr inbounds %struct.sv, %struct.sv* %299, i32 0, i32 0
  %300 = load i8*, i8** %sv_any450, align 8
  %301 = bitcast i8* %300 to %struct.xpvio*
  %xio_top_gv451 = getelementptr inbounds %struct.xpvio, %struct.xpvio* %301, i32 0, i32 11
  store %struct.gv* null, %struct.gv** %xio_top_gv451, align 8
  br label %if.end452

if.end452:                                        ; preds = %if.then449, %if.then444
  %302 = load %struct.sv*, %struct.sv** %filter_sub, align 8
  %tobool453 = icmp ne %struct.sv* %302, null
  br i1 %tobool453, label %if.then454, label %if.end457

if.then454:                                       ; preds = %if.end452
  %303 = load %struct.sv*, %struct.sv** %filter_sub, align 8
  %304 = bitcast %struct.sv* %303 to i8*
  %305 = bitcast i8* %304 to %struct.sv*
  call void @S_SvREFCNT_dec(%struct.sv* %305)
  %306 = load %struct.sv*, %struct.sv** %datasv, align 8
  %sv_any455 = getelementptr inbounds %struct.sv, %struct.sv* %306, i32 0, i32 0
  %307 = load i8*, i8** %sv_any455, align 8
  %308 = bitcast i8* %307 to %struct.xpvio*
  %xio_bottom_gv456 = getelementptr inbounds %struct.xpvio, %struct.xpvio* %308, i32 0, i32 15
  store %struct.gv* null, %struct.gv** %xio_bottom_gv456, align 8
  br label %if.end457

if.end457:                                        ; preds = %if.then454, %if.end452
  call void @Perl_filter_del(i32 (i32, %struct.sv*, i32)* @S_run_user_filter)
  br label %if.end458

if.end458:                                        ; preds = %if.end457, %if.end441
  %309 = load %struct.sv*, %struct.sv** %err, align 8
  %tobool459 = icmp ne %struct.sv* %309, null
  br i1 %tobool459, label %if.then460, label %if.end461

if.then460:                                       ; preds = %if.end458
  %310 = load %struct.sv*, %struct.sv** %err, align 8
  call void @Perl_croak_sv(%struct.sv* %310)
  br label %if.end461

if.end461:                                        ; preds = %if.then460, %if.end458
  %311 = load i32, i32* %status, align 4
  %cmp462 = icmp eq i32 %311, 0
  br i1 %cmp462, label %land.lhs.true464, label %if.end468

land.lhs.true464:                                 ; preds = %if.end461
  %312 = load i8, i8* %read_from_cache, align 1
  %tobool465 = trunc i8 %312 to i1
  br i1 %tobool465, label %if.then467, label %if.end468

if.then467:                                       ; preds = %land.lhs.true464
  store i32 1, i32* %retval, align 4
  br label %return

if.end468:                                        ; preds = %land.lhs.true464, %if.end461
  %313 = load i32, i32* %status, align 4
  store i32 %313, i32* %retval, align 4
  br label %return

return:                                           ; preds = %if.end468, %if.then467, %if.then34
  %314 = load i32, i32* %retval, align 4
  ret i32 %314
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i1 @S_doeval(i32 %gimme, %struct.cv* %outside, i32 %seq, %struct.hv* %hh) #0 {
entry:
  %retval = alloca i1, align 1
  %gimme.addr = alloca i32, align 4
  %outside.addr = alloca %struct.cv*, align 8
  %seq.addr = alloca i32, align 4
  %hh.addr = alloca %struct.hv*, align 8
  %sp = alloca %struct.sv**, align 8
  %saveop = alloca %struct.op*, align 8
  %clear_hints = alloca i8, align 1
  %oldcurcop = alloca %struct.cop*, align 8
  %in_require = alloca i8, align 1
  %yystatus = alloca i32, align 4
  %evalcv = alloca %struct.cv*, align 8
  %mark_stack_entry = alloca i32*, align 8
  %svp = alloca %struct.sv**, align 8
  %errsv = alloca %struct.sv*, align 8
  %i = alloca i64, align 8
  %sv = alloca %struct.sv*, align 8
  %hk = alloca %struct.block_hooks*, align 8
  %newsp = alloca %struct.sv**, align 8
  %cx = alloca %struct.context*, align 8
  %optype = alloca i32, align 4
  %namesv = alloca %struct.sv*, align 8
  %errsv217 = alloca %struct.sv*, align 8
  %_o = alloca %struct.op*, align 8
  %cv414 = alloca %struct.cv*, align 8
  %sp418 = alloca %struct.sv**, align 8
  %mark_stack_entry420 = alloca i32*, align 8
  %es = alloca %struct.op*, align 8
  store i32 %gimme, i32* %gimme.addr, align 4
  store %struct.cv* %outside, %struct.cv** %outside.addr, align 8
  store i32 %seq, i32* %seq.addr, align 4
  store %struct.hv* %hh, %struct.hv** %hh.addr, align 8
  %0 = load %struct.sv**, %struct.sv*** @PL_stack_sp, align 8
  store %struct.sv** %0, %struct.sv*** %sp, align 8
  %1 = load %struct.op*, %struct.op** @PL_op, align 8
  store %struct.op* %1, %struct.op** %saveop, align 8
  %2 = load %struct.op*, %struct.op** %saveop, align 8
  %op_type = getelementptr inbounds %struct.op, %struct.op* %2, i32 0, i32 4
  %bf.load = load i16, i16* %op_type, align 8
  %bf.clear = and i16 %bf.load, 511
  %bf.cast = zext i16 %bf.clear to i32
  %cmp = icmp ne i32 %bf.cast, 342
  %frombool = zext i1 %cmp to i8
  store i8 %frombool, i8* %clear_hints, align 1
  %3 = load %struct.cop*, %struct.cop** @PL_curcop, align 8
  store %struct.cop* %3, %struct.cop** %oldcurcop, align 8
  %4 = load %struct.op*, %struct.op** %saveop, align 8
  %op_type1 = getelementptr inbounds %struct.op, %struct.op* %4, i32 0, i32 4
  %bf.load2 = load i16, i16* %op_type1, align 8
  %bf.clear3 = and i16 %bf.load2, 511
  %bf.cast4 = zext i16 %bf.clear3 to i32
  %cmp5 = icmp eq i32 %bf.cast4, 339
  %frombool6 = zext i1 %cmp5 to i8
  store i8 %frombool6, i8* %in_require, align 1
  %5 = load i8, i8* %in_require, align 1
  %tobool = trunc i8 %5 to i1
  br i1 %tobool, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %6 = load i8, i8* @PL_in_eval, align 1
  %conv = zext i8 %6 to i32
  %and = and i32 %conv, 1
  %or = or i32 8, %and
  br label %cond.end

cond.false:                                       ; preds = %entry
  %7 = load %struct.op*, %struct.op** @PL_op, align 8
  %op_private = getelementptr inbounds %struct.op, %struct.op* %7, i32 0, i32 6
  %8 = load i8, i8* %op_private, align 1
  %conv7 = zext i8 %8 to i32
  %and8 = and i32 %conv7, 32
  %tobool9 = icmp ne i32 %and8, 0
  %9 = zext i1 %tobool9 to i64
  %cond = select i1 %tobool9, i32 16, i32 0
  %or10 = or i32 1, %cond
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond11 = phi i32 [ %or, %cond.true ], [ %or10, %cond.false ]
  %conv12 = trunc i32 %cond11 to i8
  store i8 %conv12, i8* @PL_in_eval, align 1
  br label %do.body

do.body:                                          ; preds = %cond.end
  %10 = load i32*, i32** @PL_markstack_ptr, align 8
  %incdec.ptr = getelementptr inbounds i32, i32* %10, i32 1
  store i32* %incdec.ptr, i32** @PL_markstack_ptr, align 8
  store i32* %incdec.ptr, i32** %mark_stack_entry, align 8
  %11 = load i32*, i32** @PL_markstack_max, align 8
  %cmp13 = icmp eq i32* %incdec.ptr, %11
  br i1 %cmp13, label %cond.true15, label %cond.false16

cond.true15:                                      ; preds = %do.body
  br i1 true, label %if.then, label %if.end

cond.false16:                                     ; preds = %do.body
  br i1 false, label %if.then, label %if.end

if.then:                                          ; preds = %cond.false16, %cond.true15
  %call = call i32* @Perl_markstack_grow()
  store i32* %call, i32** %mark_stack_entry, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %cond.false16, %cond.true15
  %12 = load %struct.sv**, %struct.sv*** %sp, align 8
  %13 = load %struct.sv**, %struct.sv*** @PL_stack_base, align 8
  %sub.ptr.lhs.cast = ptrtoint %struct.sv** %12 to i64
  %sub.ptr.rhs.cast = ptrtoint %struct.sv** %13 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 8
  %conv17 = trunc i64 %sub.ptr.div to i32
  %14 = load i32*, i32** %mark_stack_entry, align 8
  store i32 %conv17, i32* %14, align 4
  br label %do.end

do.end:                                           ; preds = %if.end
  %call18 = call %struct.sv* @Perl_newSV_type(i32 13)
  %15 = bitcast %struct.sv* %call18 to i8*
  %16 = bitcast i8* %15 to %struct.cv*
  store %struct.cv* %16, %struct.cv** %evalcv, align 8
  %17 = load %struct.cv*, %struct.cv** %evalcv, align 8
  %sv_any = getelementptr inbounds %struct.cv, %struct.cv* %17, i32 0, i32 0
  %18 = load %struct.xpvcv*, %struct.xpvcv** %sv_any, align 8
  %19 = bitcast %struct.xpvcv* %18 to i8*
  %20 = bitcast i8* %19 to %struct.xpvcv*
  %xcv_flags = getelementptr inbounds %struct.xpvcv, %struct.xpvcv* %20, i32 0, i32 12
  %21 = load i32, i32* %xcv_flags, align 4
  %or19 = or i32 %21, 256
  store i32 %or19, i32* %xcv_flags, align 4
  %22 = load %struct.cv*, %struct.cv** %evalcv, align 8
  %sv_flags = getelementptr inbounds %struct.cv, %struct.cv* %22, i32 0, i32 2
  %23 = load i32, i32* %sv_flags, align 4
  %and20 = and i32 %23, -16777217
  store i32 %and20, i32* %sv_flags, align 4
  %24 = load %struct.cv*, %struct.cv** %evalcv, align 8
  %25 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %si_cxstack = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %25, i32 0, i32 1
  %26 = load %struct.context*, %struct.context** %si_cxstack, align 8
  %27 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %si_cxix = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %27, i32 0, i32 4
  %28 = load i32, i32* %si_cxix, align 8
  %idxprom = sext i32 %28 to i64
  %arrayidx = getelementptr inbounds %struct.context, %struct.context* %26, i64 %idxprom
  %cx_u = getelementptr inbounds %struct.context, %struct.context* %arrayidx, i32 0, i32 0
  %cx_blk = bitcast %union.anon.16* %cx_u to %struct.block*
  %blk_u = getelementptr inbounds %struct.block, %struct.block* %cx_blk, i32 0, i32 8
  %blku_eval = bitcast %union.anon.20* %blk_u to %struct.block_eval*
  %cv = getelementptr inbounds %struct.block_eval, %struct.block_eval* %blku_eval, i32 0, i32 4
  store %struct.cv* %24, %struct.cv** %cv, align 8
  %29 = load i32, i32* %gimme.addr, align 4
  %conv21 = trunc i32 %29 to i8
  %30 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %si_cxstack22 = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %30, i32 0, i32 1
  %31 = load %struct.context*, %struct.context** %si_cxstack22, align 8
  %32 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %si_cxix23 = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %32, i32 0, i32 4
  %33 = load i32, i32* %si_cxix23, align 8
  %idxprom24 = sext i32 %33 to i64
  %arrayidx25 = getelementptr inbounds %struct.context, %struct.context* %31, i64 %idxprom24
  %cx_u26 = getelementptr inbounds %struct.context, %struct.context* %arrayidx25, i32 0, i32 0
  %cx_blk27 = bitcast %union.anon.16* %cx_u26 to %struct.block*
  %blku_gimme = getelementptr inbounds %struct.block, %struct.block* %cx_blk27, i32 0, i32 1
  store i8 %conv21, i8* %blku_gimme, align 1
  %34 = load i32, i32* %seq.addr, align 4
  %35 = load %struct.cv*, %struct.cv** %evalcv, align 8
  %sv_any28 = getelementptr inbounds %struct.cv, %struct.cv* %35, i32 0, i32 0
  %36 = load %struct.xpvcv*, %struct.xpvcv** %sv_any28, align 8
  %37 = bitcast %struct.xpvcv* %36 to i8*
  %38 = bitcast i8* %37 to %struct.xpvcv*
  %xcv_outside_seq = getelementptr inbounds %struct.xpvcv, %struct.xpvcv* %38, i32 0, i32 11
  store i32 %34, i32* %xcv_outside_seq, align 8
  %39 = load %struct.cv*, %struct.cv** %outside.addr, align 8
  %40 = bitcast %struct.cv* %39 to i8*
  %41 = bitcast i8* %40 to %struct.sv*
  %call29 = call %struct.sv* @S_SvREFCNT_inc(%struct.sv* %41)
  %42 = bitcast %struct.sv* %call29 to i8*
  %43 = bitcast i8* %42 to %struct.cv*
  %44 = load %struct.cv*, %struct.cv** %evalcv, align 8
  %sv_any30 = getelementptr inbounds %struct.cv, %struct.cv* %44, i32 0, i32 0
  %45 = load %struct.xpvcv*, %struct.xpvcv** %sv_any30, align 8
  %46 = bitcast %struct.xpvcv* %45 to i8*
  %47 = bitcast i8* %46 to %struct.xpvcv*
  %xcv_outside = getelementptr inbounds %struct.xpvcv, %struct.xpvcv* %47, i32 0, i32 10
  store %struct.cv* %43, %struct.cv** %xcv_outside, align 8
  %call31 = call %struct.padlist* @Perl_pad_new(i32 2)
  %48 = load %struct.cv*, %struct.cv** %evalcv, align 8
  %sv_any32 = getelementptr inbounds %struct.cv, %struct.cv* %48, i32 0, i32 0
  %49 = load %struct.xpvcv*, %struct.xpvcv** %sv_any32, align 8
  %50 = bitcast %struct.xpvcv* %49 to i8*
  %51 = bitcast i8* %50 to %struct.xpvcv*
  %xcv_padlist_u = getelementptr inbounds %struct.xpvcv, %struct.xpvcv* %51, i32 0, i32 9
  %xcv_padlist = bitcast %union.anon.13* %xcv_padlist_u to %struct.padlist**
  store %struct.padlist* %call31, %struct.padlist** %xcv_padlist, align 8
  store %struct.op* null, %struct.op** @PL_op, align 8
  %52 = load %struct.cv*, %struct.cv** %evalcv, align 8
  %53 = bitcast %struct.cv* %52 to i8*
  %54 = bitcast i8* %53 to %struct.sv*
  %55 = bitcast %struct.sv* %54 to i8*
  call void @Perl_save_pushptr(i8* %55, i32 16)
  %56 = load %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_stash = getelementptr inbounds %struct.cop, %struct.cop* %56, i32 0, i32 8
  %57 = load %struct.hv*, %struct.hv** %cop_stash, align 8
  %58 = load %struct.hv*, %struct.hv** @PL_curstash, align 8
  %cmp33 = icmp eq %struct.hv* %57, %58
  br i1 %cmp33, label %if.end48, label %if.then35

if.then35:                                        ; preds = %do.end
  call void @Perl_save_generic_svref(%struct.sv** bitcast (%struct.hv** @PL_curstash to %struct.sv**))
  %59 = load %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_stash36 = getelementptr inbounds %struct.cop, %struct.cop* %59, i32 0, i32 8
  %60 = load %struct.hv*, %struct.hv** %cop_stash36, align 8
  store %struct.hv* %60, %struct.hv** @PL_curstash, align 8
  %61 = load %struct.hv*, %struct.hv** @PL_curstash, align 8
  %sv_flags37 = getelementptr inbounds %struct.hv, %struct.hv* %61, i32 0, i32 2
  %62 = load i32, i32* %sv_flags37, align 4
  %and38 = and i32 %62, 255
  %cmp39 = icmp ne i32 %and38, 12
  br i1 %cmp39, label %if.then41, label %if.else

if.then41:                                        ; preds = %if.then35
  store %struct.hv* null, %struct.hv** @PL_curstash, align 8
  br label %if.end47

if.else:                                          ; preds = %if.then35
  br label %do.body42

do.body42:                                        ; preds = %if.else
  %63 = load %struct.hv*, %struct.hv** @PL_curstash, align 8
  %tobool43 = icmp ne %struct.hv* %63, null
  br i1 %tobool43, label %if.then44, label %if.end45

if.then44:                                        ; preds = %do.body42
  %64 = load %struct.hv*, %struct.hv** @PL_curstash, align 8
  %sv_refcnt = getelementptr inbounds %struct.hv, %struct.hv* %64, i32 0, i32 1
  %65 = load i32, i32* %sv_refcnt, align 8
  %inc = add i32 %65, 1
  store i32 %inc, i32* %sv_refcnt, align 8
  br label %if.end45

if.end45:                                         ; preds = %if.then44, %do.body42
  br label %do.end46

do.end46:                                         ; preds = %if.end45
  br label %if.end47

if.end47:                                         ; preds = %do.end46, %if.then41
  br label %if.end48

if.end48:                                         ; preds = %if.end47, %do.end
  call void @Perl_save_sptr(%struct.sv** bitcast (%struct.av** @PL_beginav to %struct.sv**))
  %call49 = call %struct.sv* @Perl_newSV_type(i32 11)
  %66 = bitcast %struct.sv* %call49 to i8*
  %67 = bitcast i8* %66 to %struct.av*
  store %struct.av* %67, %struct.av** @PL_beginav, align 8
  %68 = load %struct.av*, %struct.av** @PL_beginav, align 8
  %69 = bitcast %struct.av* %68 to i8*
  %70 = bitcast i8* %69 to %struct.sv*
  %71 = bitcast %struct.sv* %70 to i8*
  call void @Perl_save_pushptr(i8* %71, i32 11)
  call void @Perl_save_sptr(%struct.sv** bitcast (%struct.av** @PL_unitcheckav to %struct.sv**))
  %call50 = call %struct.sv* @Perl_newSV_type(i32 11)
  %72 = bitcast %struct.sv* %call50 to i8*
  %73 = bitcast i8* %72 to %struct.av*
  store %struct.av* %73, %struct.av** @PL_unitcheckav, align 8
  %74 = load %struct.av*, %struct.av** @PL_unitcheckav, align 8
  %75 = bitcast %struct.av* %74 to i8*
  %76 = bitcast i8* %75 to %struct.sv*
  %77 = bitcast %struct.sv* %76 to i8*
  call void @Perl_save_pushptr(i8* %77, i32 11)
  call void @Perl_push_scope()
  call void @Perl_save_sptr(%struct.sv** bitcast (%struct.cv** @PL_compcv to %struct.sv**))
  %78 = load %struct.cv*, %struct.cv** %evalcv, align 8
  store %struct.cv* %78, %struct.cv** @PL_compcv, align 8
  store %struct.op* null, %struct.op** @PL_eval_root, align 8
  store %struct.cop* @PL_compiling, %struct.cop** @PL_curcop, align 8
  %79 = load %struct.op*, %struct.op** %saveop, align 8
  %op_type51 = getelementptr inbounds %struct.op, %struct.op* %79, i32 0, i32 4
  %bf.load52 = load i16, i16* %op_type51, align 8
  %bf.clear53 = and i16 %bf.load52, 511
  %bf.cast54 = zext i16 %bf.clear53 to i32
  %cmp55 = icmp ne i32 %bf.cast54, 339
  br i1 %cmp55, label %land.lhs.true, label %if.else64

land.lhs.true:                                    ; preds = %if.end48
  %80 = load %struct.op*, %struct.op** %saveop, align 8
  %op_flags = getelementptr inbounds %struct.op, %struct.op* %80, i32 0, i32 5
  %81 = load i8, i8* %op_flags, align 2
  %conv57 = zext i8 %81 to i32
  %and58 = and i32 %conv57, 128
  %tobool59 = icmp ne i32 %and58, 0
  br i1 %tobool59, label %if.then60, label %if.else64

if.then60:                                        ; preds = %land.lhs.true
  %82 = load i8, i8* @PL_in_eval, align 1
  %conv61 = zext i8 %82 to i32
  %or62 = or i32 %conv61, 4
  %conv63 = trunc i32 %or62 to i8
  store i8 %conv63, i8* @PL_in_eval, align 1
  br label %if.end88

if.else64:                                        ; preds = %land.lhs.true, %if.end48
  br label %do.body65

do.body65:                                        ; preds = %if.else64
  %83 = load %struct.gv*, %struct.gv** @PL_errgv, align 8
  %sv_u = getelementptr inbounds %struct.gv, %struct.gv* %83, i32 0, i32 3
  %svu_gp = bitcast %union.anon.4* %sv_u to %struct.gp**
  %84 = load %struct.gp*, %struct.gp** %svu_gp, align 8
  %add.ptr = getelementptr inbounds %struct.gp, %struct.gp* %84, i64 0
  %gp_sv = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr, i32 0, i32 0
  store %struct.sv** %gp_sv, %struct.sv*** %svp, align 8
  %85 = load %struct.sv**, %struct.sv*** %svp, align 8
  %86 = load %struct.sv*, %struct.sv** %85, align 8
  %tobool66 = icmp ne %struct.sv* %86, null
  br i1 %tobool66, label %if.else68, label %if.then67

if.then67:                                        ; preds = %do.body65
  br label %clresv_newemptypv

if.else68:                                        ; preds = %do.body65
  %87 = load %struct.sv**, %struct.sv*** %svp, align 8
  %88 = load %struct.sv*, %struct.sv** %87, align 8
  %sv_flags69 = getelementptr inbounds %struct.sv, %struct.sv* %88, i32 0, i32 2
  %89 = load i32, i32* %sv_flags69, align 4
  %and70 = and i32 %89, 134283264
  %tobool71 = icmp ne i32 %and70, 0
  br i1 %tobool71, label %if.then72, label %if.else74

if.then72:                                        ; preds = %if.else68
  %90 = load %struct.sv**, %struct.sv*** %svp, align 8
  %91 = load %struct.sv*, %struct.sv** %90, align 8
  %92 = bitcast %struct.sv* %91 to i8*
  %93 = bitcast i8* %92 to %struct.sv*
  call void @S_SvREFCNT_dec_NN(%struct.sv* %93)
  br label %clresv_newemptypv

clresv_newemptypv:                                ; preds = %if.then72, %if.then67
  %call73 = call %struct.sv* @Perl_newSVpvn(i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.8, i64 0, i64 0), i64 0)
  %94 = load %struct.sv**, %struct.sv*** %svp, align 8
  store %struct.sv* %call73, %struct.sv** %94, align 8
  br label %if.end85

if.else74:                                        ; preds = %if.else68
  %95 = load %struct.sv**, %struct.sv*** %svp, align 8
  %96 = load %struct.sv*, %struct.sv** %95, align 8
  store %struct.sv* %96, %struct.sv** %errsv, align 8
  %97 = load %struct.sv*, %struct.sv** %errsv, align 8
  call void @Perl_sv_setpvn(%struct.sv* %97, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.8, i64 0, i64 0), i64 0)
  %98 = load %struct.sv*, %struct.sv** %errsv, align 8
  %sv_flags75 = getelementptr inbounds %struct.sv, %struct.sv* %98, i32 0, i32 2
  %99 = load i32, i32* %sv_flags75, align 4
  %and76 = and i32 %99, 1610547455
  store i32 %and76, i32* %sv_flags75, align 4
  %100 = load %struct.sv*, %struct.sv** %errsv, align 8
  %sv_flags77 = getelementptr inbounds %struct.sv, %struct.sv* %100, i32 0, i32 2
  %101 = load i32, i32* %sv_flags77, align 4
  %or78 = or i32 %101, 17408
  store i32 %or78, i32* %sv_flags77, align 4
  %102 = load %struct.sv*, %struct.sv** %errsv, align 8
  %sv_flags79 = getelementptr inbounds %struct.sv, %struct.sv* %102, i32 0, i32 2
  %103 = load i32, i32* %sv_flags79, align 4
  %and80 = and i32 %103, 14680064
  %tobool81 = icmp ne i32 %and80, 0
  br i1 %tobool81, label %if.then82, label %if.end84

if.then82:                                        ; preds = %if.else74
  %104 = load %struct.sv*, %struct.sv** %errsv, align 8
  %call83 = call i32 @Perl_mg_free(%struct.sv* %104)
  br label %if.end84

if.end84:                                         ; preds = %if.then82, %if.else74
  br label %if.end85

if.end85:                                         ; preds = %if.end84, %clresv_newemptypv
  br label %if.end86

if.end86:                                         ; preds = %if.end85
  br label %do.end87

do.end87:                                         ; preds = %if.end86
  br label %if.end88

if.end88:                                         ; preds = %do.end87, %if.then60
  call void @Perl_save_hints()
  %105 = load i8, i8* %clear_hints, align 1
  %tobool89 = trunc i8 %105 to i1
  br i1 %tobool89, label %if.then90, label %if.else94

if.then90:                                        ; preds = %if.end88
  store i32 0, i32* getelementptr inbounds (%struct.cop, %struct.cop* @PL_compiling, i32 0, i32 10), align 8
  %106 = load %struct.gv*, %struct.gv** @PL_hintgv, align 8
  %sv_u91 = getelementptr inbounds %struct.gv, %struct.gv* %106, i32 0, i32 3
  %svu_gp92 = bitcast %union.anon.4* %sv_u91 to %struct.gp**
  %107 = load %struct.gp*, %struct.gp** %svu_gp92, align 8
  %add.ptr93 = getelementptr inbounds %struct.gp, %struct.gp* %107, i64 0
  %gp_hv = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr93, i32 0, i32 5
  %108 = load %struct.hv*, %struct.hv** %gp_hv, align 8
  call void @Perl_hv_clear(%struct.hv* %108)
  br label %if.end122

if.else94:                                        ; preds = %if.end88
  %109 = load %struct.op*, %struct.op** %saveop, align 8
  %op_private95 = getelementptr inbounds %struct.op, %struct.op* %109, i32 0, i32 6
  %110 = load i8, i8* %op_private95, align 1
  %conv96 = zext i8 %110 to i32
  %and97 = and i32 %conv96, 16
  %tobool98 = icmp ne i32 %and97, 0
  br i1 %tobool98, label %cond.true99, label %cond.false101

cond.true99:                                      ; preds = %if.else94
  %111 = load %struct.cop*, %struct.cop** %oldcurcop, align 8
  %cop_hints = getelementptr inbounds %struct.cop, %struct.cop* %111, i32 0, i32 10
  %112 = load i32, i32* %cop_hints, align 8
  %conv100 = zext i32 %112 to i64
  br label %cond.end102

cond.false101:                                    ; preds = %if.else94
  %113 = load %struct.op*, %struct.op** %saveop, align 8
  %op_targ = getelementptr inbounds %struct.op, %struct.op* %113, i32 0, i32 3
  %114 = load i64, i64* %op_targ, align 8
  br label %cond.end102

cond.end102:                                      ; preds = %cond.false101, %cond.true99
  %cond103 = phi i64 [ %conv100, %cond.true99 ], [ %114, %cond.false101 ]
  %conv104 = trunc i64 %cond103 to i32
  store i32 %conv104, i32* getelementptr inbounds (%struct.cop, %struct.cop* @PL_compiling, i32 0, i32 10), align 8
  %115 = load i8, i8* @PL_in_eval, align 1
  %conv105 = zext i8 %115 to i32
  %and106 = and i32 %conv105, 16
  %tobool107 = icmp ne i32 %and106, 0
  br i1 %tobool107, label %if.then108, label %if.end110

if.then108:                                       ; preds = %cond.end102
  %116 = load i32, i32* getelementptr inbounds (%struct.cop, %struct.cop* @PL_compiling, i32 0, i32 10), align 8
  %and109 = and i32 %116, -2097153
  store i32 %and109, i32* getelementptr inbounds (%struct.cop, %struct.cop* @PL_compiling, i32 0, i32 10), align 8
  br label %if.end110

if.end110:                                        ; preds = %if.then108, %cond.end102
  %117 = load %struct.hv*, %struct.hv** %hh.addr, align 8
  %tobool111 = icmp ne %struct.hv* %117, null
  br i1 %tobool111, label %if.then112, label %if.end121

if.then112:                                       ; preds = %if.end110
  %118 = load %struct.gv*, %struct.gv** @PL_hintgv, align 8
  %sv_u113 = getelementptr inbounds %struct.gv, %struct.gv* %118, i32 0, i32 3
  %svu_gp114 = bitcast %union.anon.4* %sv_u113 to %struct.gp**
  %119 = load %struct.gp*, %struct.gp** %svu_gp114, align 8
  %add.ptr115 = getelementptr inbounds %struct.gp, %struct.gp* %119, i64 0
  %gp_hv116 = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr115, i32 0, i32 5
  %120 = load %struct.hv*, %struct.hv** %gp_hv116, align 8
  %121 = bitcast %struct.hv* %120 to i8*
  %122 = bitcast i8* %121 to %struct.sv*
  call void @S_SvREFCNT_dec(%struct.sv* %122)
  %123 = load %struct.hv*, %struct.hv** %hh.addr, align 8
  %124 = load %struct.gv*, %struct.gv** @PL_hintgv, align 8
  %sv_u117 = getelementptr inbounds %struct.gv, %struct.gv* %124, i32 0, i32 3
  %svu_gp118 = bitcast %union.anon.4* %sv_u117 to %struct.gp**
  %125 = load %struct.gp*, %struct.gp** %svu_gp118, align 8
  %add.ptr119 = getelementptr inbounds %struct.gp, %struct.gp* %125, i64 0
  %gp_hv120 = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr119, i32 0, i32 5
  store %struct.hv* %123, %struct.hv** %gp_hv120, align 8
  br label %if.end121

if.end121:                                        ; preds = %if.then112, %if.end110
  br label %if.end122

if.end122:                                        ; preds = %if.end121, %if.then90
  %126 = load i64*, i64** getelementptr inbounds (%struct.cop, %struct.cop* @PL_compiling, i32 0, i32 12), align 8
  %127 = bitcast i64* %126 to i8*
  call void @Perl_save_pushptr(i8* %127, i32 6)
  %128 = load i8, i8* %clear_hints, align 1
  %tobool123 = trunc i8 %128 to i1
  br i1 %tobool123, label %if.then124, label %if.else137

if.then124:                                       ; preds = %if.end122
  %129 = load i8, i8* @PL_dowarn, align 1
  %conv125 = zext i8 %129 to i32
  %and126 = and i32 %conv125, 2
  %tobool127 = icmp ne i32 %and126, 0
  br i1 %tobool127, label %if.then128, label %if.else129

if.then128:                                       ; preds = %if.then124
  store i64* getelementptr inbounds (i64, i64* null, i64 1), i64** getelementptr inbounds (%struct.cop, %struct.cop* @PL_compiling, i32 0, i32 12), align 8
  br label %if.end136

if.else129:                                       ; preds = %if.then124
  %130 = load i8, i8* @PL_dowarn, align 1
  %conv130 = zext i8 %130 to i32
  %and131 = and i32 %conv130, 4
  %tobool132 = icmp ne i32 %and131, 0
  br i1 %tobool132, label %if.then133, label %if.else134

if.then133:                                       ; preds = %if.else129
  store i64* getelementptr inbounds (i64, i64* null, i64 2), i64** getelementptr inbounds (%struct.cop, %struct.cop* @PL_compiling, i32 0, i32 12), align 8
  br label %if.end135

if.else134:                                       ; preds = %if.else129
  store i64* null, i64** getelementptr inbounds (%struct.cop, %struct.cop* @PL_compiling, i32 0, i32 12), align 8
  br label %if.end135

if.end135:                                        ; preds = %if.else134, %if.then133
  br label %if.end136

if.end136:                                        ; preds = %if.end135, %if.then128
  br label %if.end165

if.else137:                                       ; preds = %if.end122
  %131 = load %struct.cop*, %struct.cop** %oldcurcop, align 8
  %cop_warnings = getelementptr inbounds %struct.cop, %struct.cop* %131, i32 0, i32 12
  %132 = load i64*, i64** %cop_warnings, align 8
  %cmp138 = icmp eq i64* %132, null
  br i1 %cmp138, label %cond.true147, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.else137
  %133 = load %struct.cop*, %struct.cop** %oldcurcop, align 8
  %cop_warnings140 = getelementptr inbounds %struct.cop, %struct.cop* %133, i32 0, i32 12
  %134 = load i64*, i64** %cop_warnings140, align 8
  %cmp141 = icmp eq i64* %134, getelementptr inbounds (i64, i64* null, i64 1)
  br i1 %cmp141, label %cond.true147, label %lor.lhs.false143

lor.lhs.false143:                                 ; preds = %lor.lhs.false
  %135 = load %struct.cop*, %struct.cop** %oldcurcop, align 8
  %cop_warnings144 = getelementptr inbounds %struct.cop, %struct.cop* %135, i32 0, i32 12
  %136 = load i64*, i64** %cop_warnings144, align 8
  %cmp145 = icmp eq i64* %136, getelementptr inbounds (i64, i64* null, i64 2)
  br i1 %cmp145, label %cond.true147, label %cond.false149

cond.true147:                                     ; preds = %lor.lhs.false143, %lor.lhs.false, %if.else137
  %137 = load %struct.cop*, %struct.cop** %oldcurcop, align 8
  %cop_warnings148 = getelementptr inbounds %struct.cop, %struct.cop* %137, i32 0, i32 12
  %138 = load i64*, i64** %cop_warnings148, align 8
  br label %cond.end155

cond.false149:                                    ; preds = %lor.lhs.false143
  %139 = load %struct.cop*, %struct.cop** %oldcurcop, align 8
  %cop_warnings150 = getelementptr inbounds %struct.cop, %struct.cop* %139, i32 0, i32 12
  %140 = load i64*, i64** %cop_warnings150, align 8
  %141 = load i64, i64* %140, align 8
  %add = add i64 8, %141
  %call151 = call noalias i8* @malloc(i64 %add) #10
  %142 = load %struct.cop*, %struct.cop** %oldcurcop, align 8
  %cop_warnings152 = getelementptr inbounds %struct.cop, %struct.cop* %142, i32 0, i32 12
  %143 = load i64*, i64** %cop_warnings152, align 8
  %144 = bitcast i64* %143 to i8*
  %145 = load %struct.cop*, %struct.cop** %oldcurcop, align 8
  %cop_warnings153 = getelementptr inbounds %struct.cop, %struct.cop* %145, i32 0, i32 12
  %146 = load i64*, i64** %cop_warnings153, align 8
  %147 = load i64, i64* %146, align 8
  %add154 = add i64 8, %147
  %mul = mul i64 %add154, 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %call151, i8* align 1 %144, i64 %mul, i1 false)
  %148 = bitcast i8* %call151 to i64*
  br label %cond.end155

cond.end155:                                      ; preds = %cond.false149, %cond.true147
  %cond156 = phi i64* [ %138, %cond.true147 ], [ %148, %cond.false149 ]
  store i64* %cond156, i64** getelementptr inbounds (%struct.cop, %struct.cop* @PL_compiling, i32 0, i32 12), align 8
  %149 = load %struct.refcounted_he*, %struct.refcounted_he** getelementptr inbounds (%struct.cop, %struct.cop* @PL_compiling, i32 0, i32 13), align 8
  call void @Perl_refcounted_he_free(%struct.refcounted_he* %149)
  %150 = load %struct.cop*, %struct.cop** %oldcurcop, align 8
  %call157 = call i8* @Perl_cop_fetch_label(%struct.cop* %150, i64* null, i32* null)
  %tobool158 = icmp ne i8* %call157, null
  br i1 %tobool158, label %if.then159, label %if.else161

if.then159:                                       ; preds = %cond.end155
  %151 = load %struct.cop*, %struct.cop** %oldcurcop, align 8
  %cop_hints_hash = getelementptr inbounds %struct.cop, %struct.cop* %151, i32 0, i32 13
  %152 = load %struct.refcounted_he*, %struct.refcounted_he** %cop_hints_hash, align 8
  %refcounted_he_next = getelementptr inbounds %struct.refcounted_he, %struct.refcounted_he* %152, i32 0, i32 0
  %153 = load %struct.refcounted_he*, %struct.refcounted_he** %refcounted_he_next, align 8
  %call160 = call %struct.refcounted_he* @Perl_refcounted_he_inc(%struct.refcounted_he* %153)
  store %struct.refcounted_he* %call160, %struct.refcounted_he** getelementptr inbounds (%struct.cop, %struct.cop* @PL_compiling, i32 0, i32 13), align 8
  br label %if.end164

if.else161:                                       ; preds = %cond.end155
  %154 = load %struct.cop*, %struct.cop** %oldcurcop, align 8
  %cop_hints_hash162 = getelementptr inbounds %struct.cop, %struct.cop* %154, i32 0, i32 13
  %155 = load %struct.refcounted_he*, %struct.refcounted_he** %cop_hints_hash162, align 8
  %call163 = call %struct.refcounted_he* @Perl_refcounted_he_inc(%struct.refcounted_he* %155)
  store %struct.refcounted_he* %call163, %struct.refcounted_he** getelementptr inbounds (%struct.cop, %struct.cop* @PL_compiling, i32 0, i32 13), align 8
  br label %if.end164

if.end164:                                        ; preds = %if.else161, %if.then159
  br label %if.end165

if.end165:                                        ; preds = %if.end164, %if.end136
  br label %do.body166

do.body166:                                       ; preds = %if.end165
  %156 = load %struct.av*, %struct.av** @PL_blockhooks, align 8
  %tobool167 = icmp ne %struct.av* %156, null
  br i1 %tobool167, label %if.then168, label %if.end198

if.then168:                                       ; preds = %do.body166
  %157 = load %struct.av*, %struct.av** @PL_blockhooks, align 8
  %call169 = call i64 @S_av_top_index(%struct.av* %157)
  store i64 %call169, i64* %i, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then168
  %158 = load i64, i64* %i, align 8
  %cmp170 = icmp sge i64 %158, 0
  br i1 %cmp170, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %159 = load %struct.av*, %struct.av** @PL_blockhooks, align 8
  %sv_u172 = getelementptr inbounds %struct.av, %struct.av* %159, i32 0, i32 3
  %svu_array = bitcast %union.anon.0* %sv_u172 to %struct.sv***
  %160 = load %struct.sv**, %struct.sv*** %svu_array, align 8
  %161 = load i64, i64* %i, align 8
  %arrayidx173 = getelementptr inbounds %struct.sv*, %struct.sv** %160, i64 %161
  %162 = load %struct.sv*, %struct.sv** %arrayidx173, align 8
  store %struct.sv* %162, %struct.sv** %sv, align 8
  %163 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_flags174 = getelementptr inbounds %struct.sv, %struct.sv* %163, i32 0, i32 2
  %164 = load i32, i32* %sv_flags174, align 4
  %and175 = and i32 %164, -2147483392
  %cmp176 = icmp eq i32 %and175, -2147483392
  br i1 %cmp176, label %if.then178, label %if.else180

if.then178:                                       ; preds = %for.body
  %165 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_any179 = getelementptr inbounds %struct.sv, %struct.sv* %165, i32 0, i32 0
  %166 = load i8*, i8** %sv_any179, align 8
  %167 = bitcast i8* %166 to %struct.xpvuv*
  %xuv_u = getelementptr inbounds %struct.xpvuv, %struct.xpvuv* %167, i32 0, i32 4
  %xivu_uv = bitcast %union._xivu* %xuv_u to i64*
  %168 = load i64, i64* %xivu_uv, align 8
  %169 = inttoptr i64 %168 to %struct.block_hooks*
  store %struct.block_hooks* %169, %struct.block_hooks** %hk, align 8
  br label %if.end182

if.else180:                                       ; preds = %for.body
  %170 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_any181 = getelementptr inbounds %struct.sv, %struct.sv* %170, i32 0, i32 0
  %171 = load i8*, i8** %sv_any181, align 8
  %172 = bitcast i8* %171 to %struct.xpviv*
  %xiv_u = getelementptr inbounds %struct.xpviv, %struct.xpviv* %172, i32 0, i32 4
  %xivu_iv = bitcast %union._xivu* %xiv_u to i64*
  %173 = load i64, i64* %xivu_iv, align 8
  %174 = inttoptr i64 %173 to %struct.block_hooks*
  store %struct.block_hooks* %174, %struct.block_hooks** %hk, align 8
  br label %if.end182

if.end182:                                        ; preds = %if.else180, %if.then178
  %175 = load %struct.block_hooks*, %struct.block_hooks** %hk, align 8
  %bhk_flags = getelementptr inbounds %struct.block_hooks, %struct.block_hooks* %175, i32 0, i32 0
  %176 = load i32, i32* %bhk_flags, align 8
  %and183 = and i32 %176, 8
  %tobool184 = icmp ne i32 %and183, 0
  br i1 %tobool184, label %cond.true185, label %cond.false187

cond.true185:                                     ; preds = %if.end182
  %177 = load %struct.block_hooks*, %struct.block_hooks** %hk, align 8
  %bhk_eval = getelementptr inbounds %struct.block_hooks, %struct.block_hooks* %177, i32 0, i32 4
  %178 = load void (%struct.op*)*, void (%struct.op*)** %bhk_eval, align 8
  %tobool186 = icmp ne void (%struct.op*)* %178, null
  br i1 %tobool186, label %if.then188, label %if.end197

cond.false187:                                    ; preds = %if.end182
  br i1 false, label %if.then188, label %if.end197

if.then188:                                       ; preds = %cond.false187, %cond.true185
  %179 = load %struct.block_hooks*, %struct.block_hooks** %hk, align 8
  %bhk_flags189 = getelementptr inbounds %struct.block_hooks, %struct.block_hooks* %179, i32 0, i32 0
  %180 = load i32, i32* %bhk_flags189, align 8
  %and190 = and i32 %180, 8
  %tobool191 = icmp ne i32 %and190, 0
  br i1 %tobool191, label %cond.true192, label %cond.false194

cond.true192:                                     ; preds = %if.then188
  %181 = load %struct.block_hooks*, %struct.block_hooks** %hk, align 8
  %bhk_eval193 = getelementptr inbounds %struct.block_hooks, %struct.block_hooks* %181, i32 0, i32 4
  %182 = load void (%struct.op*)*, void (%struct.op*)** %bhk_eval193, align 8
  br label %cond.end195

cond.false194:                                    ; preds = %if.then188
  br label %cond.end195

cond.end195:                                      ; preds = %cond.false194, %cond.true192
  %cond196 = phi void (%struct.op*)* [ %182, %cond.true192 ], [ null, %cond.false194 ]
  %183 = load %struct.op*, %struct.op** %saveop, align 8
  call void %cond196(%struct.op* %183)
  br label %if.end197

if.end197:                                        ; preds = %cond.end195, %cond.false187, %cond.true185
  br label %for.inc

for.inc:                                          ; preds = %if.end197
  %184 = load i64, i64* %i, align 8
  %dec = add nsw i64 %184, -1
  store i64 %dec, i64* %i, align 8
  br label %for.cond

for.end:                                          ; preds = %for.cond
  br label %if.end198

if.end198:                                        ; preds = %for.end, %do.body166
  br label %do.end199

do.end199:                                        ; preds = %if.end198
  %185 = load i8, i8* %in_require, align 1
  %tobool200 = trunc i8 %185 to i1
  br i1 %tobool200, label %cond.false206, label %land.lhs.true201

land.lhs.true201:                                 ; preds = %do.end199
  %186 = load %struct.jmpenv*, %struct.jmpenv** @PL_top_env, align 8
  %je_mustcatch = getelementptr inbounds %struct.jmpenv, %struct.jmpenv* %186, i32 0, i32 3
  %187 = load i8, i8* %je_mustcatch, align 4
  %tobool202 = trunc i8 %187 to i1
  br i1 %tobool202, label %cond.true204, label %cond.false206

cond.true204:                                     ; preds = %land.lhs.true201
  %call205 = call i32 @S_try_yyparse(i32 258)
  br label %cond.end208

cond.false206:                                    ; preds = %land.lhs.true201, %do.end199
  %call207 = call i32 @Perl_yyparse(i32 258)
  br label %cond.end208

cond.end208:                                      ; preds = %cond.false206, %cond.true204
  %cond209 = phi i32 [ %call205, %cond.true204 ], [ %call207, %cond.false206 ]
  store i32 %cond209, i32* %yystatus, align 4
  %188 = load i32, i32* %yystatus, align 4
  %tobool210 = icmp ne i32 %188, 0
  br i1 %tobool210, label %if.then216, label %lor.lhs.false211

lor.lhs.false211:                                 ; preds = %cond.end208
  %189 = load %struct.yy_parser*, %struct.yy_parser** @PL_parser, align 8
  %error_count = getelementptr inbounds %struct.yy_parser, %struct.yy_parser* %189, i32 0, i32 44
  %190 = load i8, i8* %error_count, align 1
  %conv212 = zext i8 %190 to i32
  %tobool213 = icmp ne i32 %conv212, 0
  br i1 %tobool213, label %if.then216, label %lor.lhs.false214

lor.lhs.false214:                                 ; preds = %lor.lhs.false211
  %191 = load %struct.op*, %struct.op** @PL_eval_root, align 8
  %tobool215 = icmp ne %struct.op* %191, null
  br i1 %tobool215, label %if.else398, label %if.then216

if.then216:                                       ; preds = %lor.lhs.false214, %lor.lhs.false211, %cond.end208
  store %struct.sv* null, %struct.sv** %errsv217, align 8
  store %struct.context* null, %struct.context** %cx, align 8
  store %struct.sv* null, %struct.sv** %namesv, align 8
  %192 = load %struct.sv**, %struct.sv*** %newsp, align 8
  %193 = load i32, i32* %optype, align 4
  %194 = load %struct.op*, %struct.op** %saveop, align 8
  store %struct.op* %194, %struct.op** @PL_op, align 8
  %195 = load i32, i32* %yystatus, align 4
  %cmp218 = icmp ne i32 %195, 3
  br i1 %cmp218, label %if.then220, label %if.end304

if.then220:                                       ; preds = %if.then216
  %196 = load %struct.op*, %struct.op** @PL_eval_root, align 8
  %tobool221 = icmp ne %struct.op* %196, null
  br i1 %tobool221, label %if.then222, label %if.end223

if.then222:                                       ; preds = %if.then220
  %197 = load %struct.op*, %struct.op** @PL_eval_root, align 8
  call void @Perl_op_free(%struct.op* %197)
  store %struct.op* null, %struct.op** @PL_eval_root, align 8
  br label %if.end223

if.end223:                                        ; preds = %if.then222, %if.then220
  %198 = load %struct.sv**, %struct.sv*** @PL_stack_base, align 8
  %199 = load i32*, i32** @PL_markstack_ptr, align 8
  %incdec.ptr224 = getelementptr inbounds i32, i32* %199, i32 -1
  store i32* %incdec.ptr224, i32** @PL_markstack_ptr, align 8
  %200 = load i32, i32* %199, align 4
  %idx.ext = sext i32 %200 to i64
  %add.ptr225 = getelementptr inbounds %struct.sv*, %struct.sv** %198, i64 %idx.ext
  store %struct.sv** %add.ptr225, %struct.sv*** %sp, align 8
  %201 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %si_cxstack226 = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %201, i32 0, i32 1
  %202 = load %struct.context*, %struct.context** %si_cxstack226, align 8
  %203 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %si_cxix227 = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %203, i32 0, i32 4
  %204 = load i32, i32* %si_cxix227, align 8
  %dec228 = add nsw i32 %204, -1
  store i32 %dec228, i32* %si_cxix227, align 8
  %idxprom229 = sext i32 %204 to i64
  %arrayidx230 = getelementptr inbounds %struct.context, %struct.context* %202, i64 %idxprom229
  store %struct.context* %arrayidx230, %struct.context** %cx, align 8
  %205 = load %struct.sv**, %struct.sv*** @PL_stack_base, align 8
  %206 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u231 = getelementptr inbounds %struct.context, %struct.context* %206, i32 0, i32 0
  %cx_blk232 = bitcast %union.anon.16* %cx_u231 to %struct.block*
  %blku_oldsp = getelementptr inbounds %struct.block, %struct.block* %cx_blk232, i32 0, i32 3
  %207 = load i32, i32* %blku_oldsp, align 4
  %idx.ext233 = sext i32 %207 to i64
  %add.ptr234 = getelementptr inbounds %struct.sv*, %struct.sv** %205, i64 %idx.ext233
  store %struct.sv** %add.ptr234, %struct.sv*** %newsp, align 8
  %208 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u235 = getelementptr inbounds %struct.context, %struct.context* %208, i32 0, i32 0
  %cx_blk236 = bitcast %union.anon.16* %cx_u235 to %struct.block*
  %blku_oldcop = getelementptr inbounds %struct.block, %struct.block* %cx_blk236, i32 0, i32 4
  %209 = load %struct.cop*, %struct.cop** %blku_oldcop, align 8
  store %struct.cop* %209, %struct.cop** @PL_curcop, align 8
  %210 = load i32*, i32** @PL_markstack, align 8
  %211 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u237 = getelementptr inbounds %struct.context, %struct.context* %211, i32 0, i32 0
  %cx_blk238 = bitcast %union.anon.16* %cx_u237 to %struct.block*
  %blku_oldmarksp = getelementptr inbounds %struct.block, %struct.block* %cx_blk238, i32 0, i32 5
  %212 = load i32, i32* %blku_oldmarksp, align 8
  %idx.ext239 = sext i32 %212 to i64
  %add.ptr240 = getelementptr inbounds i32, i32* %210, i64 %idx.ext239
  store i32* %add.ptr240, i32** @PL_markstack_ptr, align 8
  %213 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u241 = getelementptr inbounds %struct.context, %struct.context* %213, i32 0, i32 0
  %cx_blk242 = bitcast %union.anon.16* %cx_u241 to %struct.block*
  %blku_oldscopesp = getelementptr inbounds %struct.block, %struct.block* %cx_blk242, i32 0, i32 6
  %214 = load i32, i32* %blku_oldscopesp, align 4
  store i32 %214, i32* @PL_scopestack_ix, align 4
  %215 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u243 = getelementptr inbounds %struct.context, %struct.context* %215, i32 0, i32 0
  %cx_blk244 = bitcast %union.anon.16* %cx_u243 to %struct.block*
  %blku_oldpm = getelementptr inbounds %struct.block, %struct.block* %cx_blk244, i32 0, i32 7
  %216 = load %struct.pmop*, %struct.pmop** %blku_oldpm, align 8
  store %struct.pmop* %216, %struct.pmop** @PL_curpm, align 8
  %217 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u245 = getelementptr inbounds %struct.context, %struct.context* %217, i32 0, i32 0
  %cx_blk246 = bitcast %union.anon.16* %cx_u245 to %struct.block*
  %blku_gimme247 = getelementptr inbounds %struct.block, %struct.block* %cx_blk246, i32 0, i32 1
  %218 = load i8, i8* %blku_gimme247, align 1
  %conv248 = zext i8 %218 to i32
  store i32 %conv248, i32* %gimme.addr, align 4
  br label %do.body249

do.body249:                                       ; preds = %if.end223
  %219 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u250 = getelementptr inbounds %struct.context, %struct.context* %219, i32 0, i32 0
  %cx_blk251 = bitcast %union.anon.16* %cx_u250 to %struct.block*
  %blku_u16 = getelementptr inbounds %struct.block, %struct.block* %cx_blk251, i32 0, i32 2
  %220 = load i16, i16* %blku_u16, align 2
  %conv252 = zext i16 %220 to i32
  %and253 = and i32 %conv252, 127
  %conv254 = trunc i32 %and253 to i8
  store i8 %conv254, i8* @PL_in_eval, align 1
  %221 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u255 = getelementptr inbounds %struct.context, %struct.context* %221, i32 0, i32 0
  %cx_blk256 = bitcast %union.anon.16* %cx_u255 to %struct.block*
  %blku_u16257 = getelementptr inbounds %struct.block, %struct.block* %cx_blk256, i32 0, i32 2
  %222 = load i16, i16* %blku_u16257, align 2
  %conv258 = zext i16 %222 to i32
  %shr = ashr i32 %conv258, 7
  store i32 %shr, i32* %optype, align 4
  %223 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u259 = getelementptr inbounds %struct.context, %struct.context* %223, i32 0, i32 0
  %cx_blk260 = bitcast %union.anon.16* %cx_u259 to %struct.block*
  %blk_u261 = getelementptr inbounds %struct.block, %struct.block* %cx_blk260, i32 0, i32 8
  %blku_eval262 = bitcast %union.anon.20* %blk_u261 to %struct.block_eval*
  %old_eval_root = getelementptr inbounds %struct.block_eval, %struct.block_eval* %blku_eval262, i32 0, i32 2
  %224 = load %struct.op*, %struct.op** %old_eval_root, align 8
  store %struct.op* %224, %struct.op** @PL_eval_root, align 8
  %225 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u263 = getelementptr inbounds %struct.context, %struct.context* %225, i32 0, i32 0
  %cx_blk264 = bitcast %union.anon.16* %cx_u263 to %struct.block*
  %blk_u265 = getelementptr inbounds %struct.block, %struct.block* %cx_blk264, i32 0, i32 8
  %blku_eval266 = bitcast %union.anon.20* %blk_u265 to %struct.block_eval*
  %cur_text = getelementptr inbounds %struct.block_eval, %struct.block_eval* %blku_eval266, i32 0, i32 3
  %226 = load %struct.sv*, %struct.sv** %cur_text, align 8
  %tobool267 = icmp ne %struct.sv* %226, null
  br i1 %tobool267, label %land.lhs.true268, label %if.end284

land.lhs.true268:                                 ; preds = %do.body249
  %227 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u269 = getelementptr inbounds %struct.context, %struct.context* %227, i32 0, i32 0
  %cx_blk270 = bitcast %union.anon.16* %cx_u269 to %struct.block*
  %blk_u271 = getelementptr inbounds %struct.block, %struct.block* %cx_blk270, i32 0, i32 8
  %blku_eval272 = bitcast %union.anon.20* %blk_u271 to %struct.block_eval*
  %cur_text273 = getelementptr inbounds %struct.block_eval, %struct.block_eval* %blku_eval272, i32 0, i32 3
  %228 = load %struct.sv*, %struct.sv** %cur_text273, align 8
  %sv_flags274 = getelementptr inbounds %struct.sv, %struct.sv* %228, i32 0, i32 2
  %229 = load i32, i32* %sv_flags274, align 4
  %and275 = and i32 %229, 49152
  %cmp276 = icmp eq i32 %and275, 49152
  br i1 %cmp276, label %if.then278, label %if.end284

if.then278:                                       ; preds = %land.lhs.true268
  %230 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u279 = getelementptr inbounds %struct.context, %struct.context* %230, i32 0, i32 0
  %cx_blk280 = bitcast %union.anon.16* %cx_u279 to %struct.block*
  %blk_u281 = getelementptr inbounds %struct.block, %struct.block* %cx_blk280, i32 0, i32 8
  %blku_eval282 = bitcast %union.anon.20* %blk_u281 to %struct.block_eval*
  %cur_text283 = getelementptr inbounds %struct.block_eval, %struct.block_eval* %blku_eval282, i32 0, i32 3
  %231 = load %struct.sv*, %struct.sv** %cur_text283, align 8
  %232 = bitcast %struct.sv* %231 to i8*
  %233 = bitcast i8* %232 to %struct.sv*
  call void @S_SvREFCNT_dec_NN(%struct.sv* %233)
  br label %if.end284

if.end284:                                        ; preds = %if.then278, %land.lhs.true268, %do.body249
  %234 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u285 = getelementptr inbounds %struct.context, %struct.context* %234, i32 0, i32 0
  %cx_blk286 = bitcast %union.anon.16* %cx_u285 to %struct.block*
  %blk_u287 = getelementptr inbounds %struct.block, %struct.block* %cx_blk286, i32 0, i32 8
  %blku_eval288 = bitcast %union.anon.20* %blk_u287 to %struct.block_eval*
  %old_namesv = getelementptr inbounds %struct.block_eval, %struct.block_eval* %blku_eval288, i32 0, i32 1
  %235 = load %struct.sv*, %struct.sv** %old_namesv, align 8
  %tobool289 = icmp ne %struct.sv* %235, null
  br i1 %tobool289, label %if.then290, label %if.end297

if.then290:                                       ; preds = %if.end284
  %236 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u291 = getelementptr inbounds %struct.context, %struct.context* %236, i32 0, i32 0
  %cx_blk292 = bitcast %union.anon.16* %cx_u291 to %struct.block*
  %blk_u293 = getelementptr inbounds %struct.block, %struct.block* %cx_blk292, i32 0, i32 8
  %blku_eval294 = bitcast %union.anon.20* %blk_u293 to %struct.block_eval*
  %old_namesv295 = getelementptr inbounds %struct.block_eval, %struct.block_eval* %blku_eval294, i32 0, i32 1
  %237 = load %struct.sv*, %struct.sv** %old_namesv295, align 8
  %call296 = call %struct.sv* @Perl_sv_2mortal(%struct.sv* %237)
  br label %if.end297

if.end297:                                        ; preds = %if.then290, %if.end284
  br label %do.end298

do.end298:                                        ; preds = %if.end297
  %238 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u299 = getelementptr inbounds %struct.context, %struct.context* %238, i32 0, i32 0
  %cx_blk300 = bitcast %union.anon.16* %cx_u299 to %struct.block*
  %blk_u301 = getelementptr inbounds %struct.block, %struct.block* %cx_blk300, i32 0, i32 8
  %blku_eval302 = bitcast %union.anon.20* %blk_u301 to %struct.block_eval*
  %old_namesv303 = getelementptr inbounds %struct.block_eval, %struct.block_eval* %blku_eval302, i32 0, i32 1
  %239 = load %struct.sv*, %struct.sv** %old_namesv303, align 8
  store %struct.sv* %239, %struct.sv** %namesv, align 8
  call void @Perl_pop_scope()
  br label %if.end304

if.end304:                                        ; preds = %do.end298, %if.then216
  %240 = load %struct.gv*, %struct.gv** @PL_errgv, align 8
  %sv_u305 = getelementptr inbounds %struct.gv, %struct.gv* %240, i32 0, i32 3
  %svu_gp306 = bitcast %union.anon.4* %sv_u305 to %struct.gp**
  %241 = load %struct.gp*, %struct.gp** %svu_gp306, align 8
  %add.ptr307 = getelementptr inbounds %struct.gp, %struct.gp* %241, i64 0
  %gp_sv308 = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr307, i32 0, i32 0
  %242 = load %struct.sv*, %struct.sv** %gp_sv308, align 8
  %tobool309 = icmp ne %struct.sv* %242, null
  br i1 %tobool309, label %cond.true310, label %cond.false315

cond.true310:                                     ; preds = %if.end304
  %243 = load %struct.gv*, %struct.gv** @PL_errgv, align 8
  %sv_u311 = getelementptr inbounds %struct.gv, %struct.gv* %243, i32 0, i32 3
  %svu_gp312 = bitcast %union.anon.4* %sv_u311 to %struct.gp**
  %244 = load %struct.gp*, %struct.gp** %svu_gp312, align 8
  %add.ptr313 = getelementptr inbounds %struct.gp, %struct.gp* %244, i64 0
  %gp_sv314 = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr313, i32 0, i32 0
  br label %cond.end321

cond.false315:                                    ; preds = %if.end304
  %245 = load %struct.gv*, %struct.gv** @PL_errgv, align 8
  %call316 = call %struct.gv* @Perl_gv_add_by_type(%struct.gv* %245, i32 0)
  %sv_u317 = getelementptr inbounds %struct.gv, %struct.gv* %call316, i32 0, i32 3
  %svu_gp318 = bitcast %union.anon.4* %sv_u317 to %struct.gp**
  %246 = load %struct.gp*, %struct.gp** %svu_gp318, align 8
  %add.ptr319 = getelementptr inbounds %struct.gp, %struct.gp* %246, i64 0
  %gp_sv320 = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr319, i32 0, i32 0
  br label %cond.end321

cond.end321:                                      ; preds = %cond.false315, %cond.true310
  %cond322 = phi %struct.sv** [ %gp_sv314, %cond.true310 ], [ %gp_sv320, %cond.false315 ]
  %247 = load %struct.sv*, %struct.sv** %cond322, align 8
  store %struct.sv* %247, %struct.sv** %errsv217, align 8
  %248 = load i8, i8* %in_require, align 1
  %tobool323 = trunc i8 %248 to i1
  br i1 %tobool323, label %if.then324, label %if.else376

if.then324:                                       ; preds = %cond.end321
  %249 = load %struct.context*, %struct.context** %cx, align 8
  %tobool325 = icmp ne %struct.context* %249, null
  br i1 %tobool325, label %if.end336, label %if.then326

if.then326:                                       ; preds = %if.then324
  %250 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %si_cxstack327 = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %250, i32 0, i32 1
  %251 = load %struct.context*, %struct.context** %si_cxstack327, align 8
  %252 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %si_cxix328 = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %252, i32 0, i32 4
  %253 = load i32, i32* %si_cxix328, align 8
  %idxprom329 = sext i32 %253 to i64
  %arrayidx330 = getelementptr inbounds %struct.context, %struct.context* %251, i64 %idxprom329
  store %struct.context* %arrayidx330, %struct.context** %cx, align 8
  %254 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u331 = getelementptr inbounds %struct.context, %struct.context* %254, i32 0, i32 0
  %cx_blk332 = bitcast %union.anon.16* %cx_u331 to %struct.block*
  %blk_u333 = getelementptr inbounds %struct.block, %struct.block* %cx_blk332, i32 0, i32 8
  %blku_eval334 = bitcast %union.anon.20* %blk_u333 to %struct.block_eval*
  %old_namesv335 = getelementptr inbounds %struct.block_eval, %struct.block_eval* %blku_eval334, i32 0, i32 1
  %255 = load %struct.sv*, %struct.sv** %old_namesv335, align 8
  store %struct.sv* %255, %struct.sv** %namesv, align 8
  br label %if.end336

if.end336:                                        ; preds = %if.then326, %if.then324
  %256 = load %struct.gv*, %struct.gv** @PL_incgv, align 8
  %sv_u337 = getelementptr inbounds %struct.gv, %struct.gv* %256, i32 0, i32 3
  %svu_gp338 = bitcast %union.anon.4* %sv_u337 to %struct.gp**
  %257 = load %struct.gp*, %struct.gp** %svu_gp338, align 8
  %add.ptr339 = getelementptr inbounds %struct.gp, %struct.gp* %257, i64 0
  %gp_hv340 = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr339, i32 0, i32 5
  %258 = load %struct.hv*, %struct.hv** %gp_hv340, align 8
  %tobool341 = icmp ne %struct.hv* %258, null
  br i1 %tobool341, label %cond.true342, label %cond.false347

cond.true342:                                     ; preds = %if.end336
  %259 = load %struct.gv*, %struct.gv** @PL_incgv, align 8
  %sv_u343 = getelementptr inbounds %struct.gv, %struct.gv* %259, i32 0, i32 3
  %svu_gp344 = bitcast %union.anon.4* %sv_u343 to %struct.gp**
  %260 = load %struct.gp*, %struct.gp** %svu_gp344, align 8
  %add.ptr345 = getelementptr inbounds %struct.gp, %struct.gp* %260, i64 0
  %gp_hv346 = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr345, i32 0, i32 5
  %261 = load %struct.hv*, %struct.hv** %gp_hv346, align 8
  br label %cond.end353

cond.false347:                                    ; preds = %if.end336
  %262 = load %struct.gv*, %struct.gv** @PL_incgv, align 8
  %call348 = call %struct.gv* @Perl_gv_add_by_type(%struct.gv* %262, i32 12)
  %sv_u349 = getelementptr inbounds %struct.gv, %struct.gv* %call348, i32 0, i32 3
  %svu_gp350 = bitcast %union.anon.4* %sv_u349 to %struct.gp**
  %263 = load %struct.gp*, %struct.gp** %svu_gp350, align 8
  %add.ptr351 = getelementptr inbounds %struct.gp, %struct.gp* %263, i64 0
  %gp_hv352 = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr351, i32 0, i32 5
  %264 = load %struct.hv*, %struct.hv** %gp_hv352, align 8
  br label %cond.end353

cond.end353:                                      ; preds = %cond.false347, %cond.true342
  %cond354 = phi %struct.hv* [ %261, %cond.true342 ], [ %264, %cond.false347 ]
  %265 = load %struct.sv*, %struct.sv** %namesv, align 8
  %sv_u355 = getelementptr inbounds %struct.sv, %struct.sv* %265, i32 0, i32 3
  %svu_pv = bitcast %union.anon* %sv_u355 to i8**
  %266 = load i8*, i8** %svu_pv, align 8
  %add.ptr356 = getelementptr inbounds i8, i8* %266, i64 0
  %267 = load %struct.sv*, %struct.sv** %namesv, align 8
  %sv_flags357 = getelementptr inbounds %struct.sv, %struct.sv* %267, i32 0, i32 2
  %268 = load i32, i32* %sv_flags357, align 4
  %and358 = and i32 %268, 536870912
  %tobool359 = icmp ne i32 %and358, 0
  br i1 %tobool359, label %cond.true360, label %cond.false363

cond.true360:                                     ; preds = %cond.end353
  %269 = load %struct.sv*, %struct.sv** %namesv, align 8
  %sv_any361 = getelementptr inbounds %struct.sv, %struct.sv* %269, i32 0, i32 0
  %270 = load i8*, i8** %sv_any361, align 8
  %271 = bitcast i8* %270 to %struct.xpv*
  %xpv_cur = getelementptr inbounds %struct.xpv, %struct.xpv* %271, i32 0, i32 2
  %272 = load i64, i64* %xpv_cur, align 8
  %conv362 = trunc i64 %272 to i32
  %sub = sub nsw i32 0, %conv362
  br label %cond.end367

cond.false363:                                    ; preds = %cond.end353
  %273 = load %struct.sv*, %struct.sv** %namesv, align 8
  %sv_any364 = getelementptr inbounds %struct.sv, %struct.sv* %273, i32 0, i32 0
  %274 = load i8*, i8** %sv_any364, align 8
  %275 = bitcast i8* %274 to %struct.xpv*
  %xpv_cur365 = getelementptr inbounds %struct.xpv, %struct.xpv* %275, i32 0, i32 2
  %276 = load i64, i64* %xpv_cur365, align 8
  %conv366 = trunc i64 %276 to i32
  br label %cond.end367

cond.end367:                                      ; preds = %cond.false363, %cond.true360
  %cond368 = phi i32 [ %sub, %cond.true360 ], [ %conv366, %cond.false363 ]
  %call369 = call i8* @Perl_hv_common_key_len(%struct.hv* %cond354, i8* %add.ptr356, i32 %cond368, i32 36, %struct.sv* @PL_sv_undef, i32 0)
  %277 = bitcast i8* %call369 to %struct.sv**
  %278 = load %struct.sv*, %struct.sv** %errsv217, align 8
  %tobool370 = icmp ne %struct.sv* %278, null
  br i1 %tobool370, label %cond.true371, label %cond.false372

cond.true371:                                     ; preds = %cond.end367
  %279 = load %struct.sv*, %struct.sv** %errsv217, align 8
  br label %cond.end374

cond.false372:                                    ; preds = %cond.end367
  %call373 = call %struct.sv* @Perl_newSVpvn_flags(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.17, i64 0, i64 0), i64 14, i32 524288)
  br label %cond.end374

cond.end374:                                      ; preds = %cond.false372, %cond.true371
  %cond375 = phi %struct.sv* [ %279, %cond.true371 ], [ %call373, %cond.false372 ]
  %280 = bitcast %struct.sv* %cond375 to i8*
  call void (i8*, ...) @Perl_croak(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.16, i64 0, i64 0), i8* %280)
  br label %if.end392

if.else376:                                       ; preds = %cond.end321
  %281 = load %struct.sv*, %struct.sv** %errsv217, align 8
  %sv_flags377 = getelementptr inbounds %struct.sv, %struct.sv* %281, i32 0, i32 2
  %282 = load i32, i32* %sv_flags377, align 4
  %and378 = and i32 %282, 2098176
  %cmp379 = icmp eq i32 %and378, 1024
  br i1 %cmp379, label %cond.true381, label %cond.false385

cond.true381:                                     ; preds = %if.else376
  %283 = load %struct.sv*, %struct.sv** %errsv217, align 8
  %sv_u382 = getelementptr inbounds %struct.sv, %struct.sv* %283, i32 0, i32 3
  %svu_pv383 = bitcast %union.anon* %sv_u382 to i8**
  %284 = load i8*, i8** %svu_pv383, align 8
  %add.ptr384 = getelementptr inbounds i8, i8* %284, i64 0
  br label %cond.end387

cond.false385:                                    ; preds = %if.else376
  %285 = load %struct.sv*, %struct.sv** %errsv217, align 8
  %call386 = call i8* @Perl_sv_2pv_flags(%struct.sv* %285, i64* null, i32 34)
  br label %cond.end387

cond.end387:                                      ; preds = %cond.false385, %cond.true381
  %cond388 = phi i8* [ %add.ptr384, %cond.true381 ], [ %call386, %cond.false385 ]
  %286 = load i8, i8* %cond388, align 1
  %tobool389 = icmp ne i8 %286, 0
  br i1 %tobool389, label %if.end391, label %if.then390

if.then390:                                       ; preds = %cond.end387
  %287 = load %struct.sv*, %struct.sv** %errsv217, align 8
  call void @Perl_sv_setpvn(%struct.sv* %287, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.106, i64 0, i64 0), i64 17)
  br label %if.end391

if.end391:                                        ; preds = %if.then390, %cond.end387
  br label %if.end392

if.end392:                                        ; preds = %if.end391, %cond.end374
  %288 = load i32, i32* %gimme.addr, align 4
  %cmp393 = icmp ne i32 %288, 3
  br i1 %cmp393, label %if.then395, label %if.end397

if.then395:                                       ; preds = %if.end392
  %289 = load %struct.sv**, %struct.sv*** %sp, align 8
  %incdec.ptr396 = getelementptr inbounds %struct.sv*, %struct.sv** %289, i32 1
  store %struct.sv** %incdec.ptr396, %struct.sv*** %sp, align 8
  store %struct.sv* @PL_sv_undef, %struct.sv** %incdec.ptr396, align 8
  br label %if.end397

if.end397:                                        ; preds = %if.then395, %if.end392
  %290 = load %struct.sv**, %struct.sv*** %sp, align 8
  store %struct.sv** %290, %struct.sv*** @PL_stack_sp, align 8
  store i1 false, i1* %retval, align 1
  br label %return

if.else398:                                       ; preds = %lor.lhs.false214
  call void @Perl_pop_scope()
  br label %if.end399

if.end399:                                        ; preds = %if.else398
  store i32 0, i32* getelementptr inbounds (%struct.cop, %struct.cop* @PL_compiling, i32 0, i32 7), align 4
  br label %do.body400

do.body400:                                       ; preds = %if.end399
  %291 = load %struct.op*, %struct.op** @PL_eval_root, align 8
  store %struct.op* %291, %struct.op** %_o, align 8
  %292 = load %struct.op*, %struct.op** %_o, align 8
  %op_savefree = getelementptr inbounds %struct.op, %struct.op* %292, i32 0, i32 4
  %bf.load401 = load i16, i16* %op_savefree, align 8
  %bf.clear402 = and i16 %bf.load401, -2049
  %bf.set = or i16 %bf.clear402, 2048
  store i16 %bf.set, i16* %op_savefree, align 8
  %293 = load %struct.op*, %struct.op** %_o, align 8
  %294 = bitcast %struct.op* %293 to i8*
  call void @Perl_save_pushptr(i8* %294, i32 9)
  br label %do.end403

do.end403:                                        ; preds = %do.body400
  %295 = load %struct.cv*, %struct.cv** %evalcv, align 8
  call void @Perl_cv_forget_slab(%struct.cv* %295)
  %296 = load i32, i32* @PL_perldb, align 4
  %and404 = and i32 %296, 8
  %tobool405 = icmp ne i32 %and404, 0
  br i1 %tobool405, label %land.lhs.true406, label %if.end453

land.lhs.true406:                                 ; preds = %do.end403
  %297 = load %struct.op*, %struct.op** %saveop, align 8
  %op_type407 = getelementptr inbounds %struct.op, %struct.op* %297, i32 0, i32 4
  %bf.load408 = load i16, i16* %op_type407, align 8
  %bf.clear409 = and i16 %bf.load408, 511
  %bf.cast410 = zext i16 %bf.clear409 to i32
  %cmp411 = icmp eq i32 %bf.cast410, 339
  br i1 %cmp411, label %if.then413, label %if.end453

if.then413:                                       ; preds = %land.lhs.true406
  %call415 = call %struct.cv* @Perl_get_cvn_flags(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.107, i64 0, i64 0), i64 13, i32 0)
  store %struct.cv* %call415, %struct.cv** %cv414, align 8
  %298 = load %struct.cv*, %struct.cv** %cv414, align 8
  %tobool416 = icmp ne %struct.cv* %298, null
  br i1 %tobool416, label %if.then417, label %if.end452

if.then417:                                       ; preds = %if.then413
  %299 = load %struct.sv**, %struct.sv*** @PL_stack_sp, align 8
  store %struct.sv** %299, %struct.sv*** %sp418, align 8
  br label %do.body419

do.body419:                                       ; preds = %if.then417
  %300 = load i32*, i32** @PL_markstack_ptr, align 8
  %incdec.ptr421 = getelementptr inbounds i32, i32* %300, i32 1
  store i32* %incdec.ptr421, i32** @PL_markstack_ptr, align 8
  store i32* %incdec.ptr421, i32** %mark_stack_entry420, align 8
  %301 = load i32*, i32** @PL_markstack_max, align 8
  %cmp422 = icmp eq i32* %incdec.ptr421, %301
  br i1 %cmp422, label %cond.true424, label %cond.false425

cond.true424:                                     ; preds = %do.body419
  br i1 true, label %if.then426, label %if.end428

cond.false425:                                    ; preds = %do.body419
  br i1 false, label %if.then426, label %if.end428

if.then426:                                       ; preds = %cond.false425, %cond.true424
  %call427 = call i32* @Perl_markstack_grow()
  store i32* %call427, i32** %mark_stack_entry420, align 8
  br label %if.end428

if.end428:                                        ; preds = %if.then426, %cond.false425, %cond.true424
  %302 = load %struct.sv**, %struct.sv*** %sp418, align 8
  %303 = load %struct.sv**, %struct.sv*** @PL_stack_base, align 8
  %sub.ptr.lhs.cast429 = ptrtoint %struct.sv** %302 to i64
  %sub.ptr.rhs.cast430 = ptrtoint %struct.sv** %303 to i64
  %sub.ptr.sub431 = sub i64 %sub.ptr.lhs.cast429, %sub.ptr.rhs.cast430
  %sub.ptr.div432 = sdiv exact i64 %sub.ptr.sub431, 8
  %conv433 = trunc i64 %sub.ptr.div432 to i32
  %304 = load i32*, i32** %mark_stack_entry420, align 8
  store i32 %conv433, i32* %304, align 4
  br label %do.end434

do.end434:                                        ; preds = %if.end428
  br label %do.body435

do.body435:                                       ; preds = %do.end434
  br label %do.body436

do.body436:                                       ; preds = %do.body435
  %305 = load %struct.sv**, %struct.sv*** @PL_stack_max, align 8
  %306 = load %struct.sv**, %struct.sv*** %sp418, align 8
  %sub.ptr.lhs.cast437 = ptrtoint %struct.sv** %305 to i64
  %sub.ptr.rhs.cast438 = ptrtoint %struct.sv** %306 to i64
  %sub.ptr.sub439 = sub i64 %sub.ptr.lhs.cast437, %sub.ptr.rhs.cast438
  %sub.ptr.div440 = sdiv exact i64 %sub.ptr.sub439, 8
  %cmp441 = icmp slt i64 %sub.ptr.div440, 1
  br i1 %cmp441, label %cond.true443, label %cond.false444

cond.true443:                                     ; preds = %do.body436
  br i1 true, label %if.then445, label %if.end447

cond.false444:                                    ; preds = %do.body436
  br i1 false, label %if.then445, label %if.end447

if.then445:                                       ; preds = %cond.false444, %cond.true443
  %307 = load %struct.sv**, %struct.sv*** %sp418, align 8
  %308 = load %struct.sv**, %struct.sv*** %sp418, align 8
  %call446 = call %struct.sv** @Perl_stack_grow(%struct.sv** %307, %struct.sv** %308, i64 1)
  store %struct.sv** %call446, %struct.sv*** %sp418, align 8
  %309 = load %struct.sv**, %struct.sv*** %sp418, align 8
  br label %if.end447

if.end447:                                        ; preds = %if.then445, %cond.false444, %cond.true443
  br label %do.end448

do.end448:                                        ; preds = %if.end447
  %310 = load %struct.gv*, %struct.gv** getelementptr inbounds (%struct.cop, %struct.cop* @PL_compiling, i32 0, i32 9), align 8
  %311 = bitcast %struct.gv* %310 to i8*
  %312 = bitcast i8* %311 to %struct.sv*
  %313 = load %struct.sv**, %struct.sv*** %sp418, align 8
  %incdec.ptr449 = getelementptr inbounds %struct.sv*, %struct.sv** %313, i32 1
  store %struct.sv** %incdec.ptr449, %struct.sv*** %sp418, align 8
  store %struct.sv* %312, %struct.sv** %incdec.ptr449, align 8
  br label %do.end450

do.end450:                                        ; preds = %do.end448
  %314 = load %struct.sv**, %struct.sv*** %sp418, align 8
  store %struct.sv** %314, %struct.sv*** @PL_stack_sp, align 8
  %315 = load %struct.cv*, %struct.cv** %cv414, align 8
  %316 = bitcast %struct.cv* %315 to i8*
  %317 = bitcast i8* %316 to %struct.sv*
  %call451 = call i32 @Perl_call_sv(%struct.sv* %317, i32 4)
  br label %if.end452

if.end452:                                        ; preds = %do.end450, %if.then413
  br label %if.end453

if.end453:                                        ; preds = %if.end452, %land.lhs.true406, %do.end403
  %318 = load %struct.av*, %struct.av** @PL_unitcheckav, align 8
  %tobool454 = icmp ne %struct.av* %318, null
  br i1 %tobool454, label %if.then455, label %if.end456

if.then455:                                       ; preds = %if.end453
  %319 = load %struct.op*, %struct.op** @PL_eval_start, align 8
  store %struct.op* %319, %struct.op** %es, align 8
  %320 = load i32, i32* @PL_scopestack_ix, align 4
  %321 = load %struct.av*, %struct.av** @PL_unitcheckav, align 8
  call void @Perl_call_list(i32 %320, %struct.av* %321)
  %322 = load %struct.op*, %struct.op** %es, align 8
  store %struct.op* %322, %struct.op** @PL_eval_start, align 8
  br label %if.end456

if.end456:                                        ; preds = %if.then455, %if.end453
  %323 = load %struct.cv*, %struct.cv** %evalcv, align 8
  %call457 = call i32* @S_CvDEPTHp(%struct.cv* %323)
  store i32 1, i32* %call457, align 4
  %324 = load %struct.sv**, %struct.sv*** @PL_stack_base, align 8
  %325 = load i32*, i32** @PL_markstack_ptr, align 8
  %incdec.ptr458 = getelementptr inbounds i32, i32* %325, i32 -1
  store i32* %incdec.ptr458, i32** @PL_markstack_ptr, align 8
  %326 = load i32, i32* %325, align 4
  %idx.ext459 = sext i32 %326 to i64
  %add.ptr460 = getelementptr inbounds %struct.sv*, %struct.sv** %324, i64 %idx.ext459
  store %struct.sv** %add.ptr460, %struct.sv*** %sp, align 8
  %327 = load %struct.op*, %struct.op** %saveop, align 8
  store %struct.op* %327, %struct.op** @PL_op, align 8
  %328 = load %struct.yy_parser*, %struct.yy_parser** @PL_parser, align 8
  %lex_state = getelementptr inbounds %struct.yy_parser, %struct.yy_parser* %328, i32 0, i32 43
  store i8 11, i8* %lex_state, align 2
  %329 = load %struct.sv**, %struct.sv*** %sp, align 8
  store %struct.sv** %329, %struct.sv*** @PL_stack_sp, align 8
  store i1 true, i1* %retval, align 1
  br label %return

return:                                           ; preds = %if.end456, %if.end397
  %330 = load i1, i1* %retval, align 1
  ret i1 %330
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.op* @S_docatch(%struct.op* %o) #0 {
entry:
  %o.addr = alloca %struct.op*, align 8
  %ret = alloca i32, align 4
  %oldop = alloca %struct.op*, align 8
  %cur_env = alloca %struct.jmpenv, align 8
  store %struct.op* %o, %struct.op** %o.addr, align 8
  %0 = load %struct.op*, %struct.op** @PL_op, align 8
  store %struct.op* %0, %struct.op** %oldop, align 8
  %1 = load %struct.op*, %struct.op** %o.addr, align 8
  store %struct.op* %1, %struct.op** @PL_op, align 8
  br label %do.body

do.body:                                          ; preds = %entry
  %2 = load %struct.jmpenv*, %struct.jmpenv** @PL_top_env, align 8
  %je_prev = getelementptr inbounds %struct.jmpenv, %struct.jmpenv* %cur_env, i32 0, i32 1
  store %struct.jmpenv* %2, %struct.jmpenv** %je_prev, align 8
  %je_buf = getelementptr inbounds %struct.jmpenv, %struct.jmpenv* %cur_env, i32 0, i32 0
  %arraydecay = getelementptr inbounds [1 x %struct.__jmp_buf_tag], [1 x %struct.__jmp_buf_tag]* %je_buf, i64 0, i64 0
  %call = call i32 @__sigsetjmp(%struct.__jmp_buf_tag* %arraydecay, i32 0) #12
  %je_ret = getelementptr inbounds %struct.jmpenv, %struct.jmpenv* %cur_env, i32 0, i32 2
  store i32 %call, i32* %je_ret, align 8
  store %struct.jmpenv* %cur_env, %struct.jmpenv** @PL_top_env, align 8
  %je_mustcatch = getelementptr inbounds %struct.jmpenv, %struct.jmpenv* %cur_env, i32 0, i32 3
  store i8 0, i8* %je_mustcatch, align 4
  %je_ret1 = getelementptr inbounds %struct.jmpenv, %struct.jmpenv* %cur_env, i32 0, i32 2
  %3 = load i32, i32* %je_ret1, align 8
  store i32 %3, i32* %ret, align 4
  br label %do.end

do.end:                                           ; preds = %do.body
  %4 = load i32, i32* %ret, align 4
  switch i32 %4, label %sw.default [
    i32 0, label %sw.bb
    i32 3, label %sw.bb3
  ]

sw.bb:                                            ; preds = %do.end
  %5 = load %struct.jmpenv*, %struct.jmpenv** @PL_top_env, align 8
  %6 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %si_cxstack = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %6, i32 0, i32 1
  %7 = load %struct.context*, %struct.context** %si_cxstack, align 8
  %8 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %si_cxix = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %8, i32 0, i32 4
  %9 = load i32, i32* %si_cxix, align 8
  %idxprom = sext i32 %9 to i64
  %arrayidx = getelementptr inbounds %struct.context, %struct.context* %7, i64 %idxprom
  %cx_u = getelementptr inbounds %struct.context, %struct.context* %arrayidx, i32 0, i32 0
  %cx_blk = bitcast %union.anon.16* %cx_u to %struct.block*
  %blk_u = getelementptr inbounds %struct.block, %struct.block* %cx_blk, i32 0, i32 8
  %blku_eval = bitcast %union.anon.20* %blk_u to %struct.block_eval*
  %cur_top_env = getelementptr inbounds %struct.block_eval, %struct.block_eval* %blku_eval, i32 0, i32 5
  store %struct.jmpenv* %5, %struct.jmpenv** %cur_top_env, align 8
  br label %redo_body

redo_body:                                        ; preds = %if.then, %sw.bb
  %10 = load i32 ()*, i32 ()** @PL_runops, align 8
  %call2 = call i32 %10()
  br label %sw.epilog

sw.bb3:                                           ; preds = %do.end
  %11 = load %struct.op*, %struct.op** @PL_restartop, align 8
  %tobool = icmp ne %struct.op* %11, null
  br i1 %tobool, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %sw.bb3
  %12 = load %struct.jmpenv*, %struct.jmpenv** @PL_restartjmpenv, align 8
  %13 = load %struct.jmpenv*, %struct.jmpenv** @PL_top_env, align 8
  %cmp = icmp eq %struct.jmpenv* %12, %13
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true
  store %struct.jmpenv* null, %struct.jmpenv** @PL_restartjmpenv, align 8
  %14 = load %struct.op*, %struct.op** @PL_restartop, align 8
  store %struct.op* %14, %struct.op** @PL_op, align 8
  store %struct.op* null, %struct.op** @PL_restartop, align 8
  br label %redo_body

if.end:                                           ; preds = %land.lhs.true, %sw.bb3
  br label %sw.default

sw.default:                                       ; preds = %do.end, %if.end
  br label %do.body4

do.body4:                                         ; preds = %sw.default
  %je_prev5 = getelementptr inbounds %struct.jmpenv, %struct.jmpenv* %cur_env, i32 0, i32 1
  %15 = load %struct.jmpenv*, %struct.jmpenv** %je_prev5, align 8
  store %struct.jmpenv* %15, %struct.jmpenv** @PL_top_env, align 8
  br label %do.end6

do.end6:                                          ; preds = %do.body4
  %16 = load %struct.op*, %struct.op** %oldop, align 8
  store %struct.op* %16, %struct.op** @PL_op, align 8
  br label %do.body7

do.body7:                                         ; preds = %do.end6
  %17 = load %struct.jmpenv*, %struct.jmpenv** @PL_top_env, align 8
  %je_prev8 = getelementptr inbounds %struct.jmpenv, %struct.jmpenv* %17, i32 0, i32 1
  %18 = load %struct.jmpenv*, %struct.jmpenv** %je_prev8, align 8
  %tobool9 = icmp ne %struct.jmpenv* %18, null
  br i1 %tobool9, label %if.then10, label %if.end13

if.then10:                                        ; preds = %do.body7
  %19 = load %struct.jmpenv*, %struct.jmpenv** @PL_top_env, align 8
  %je_buf11 = getelementptr inbounds %struct.jmpenv, %struct.jmpenv* %19, i32 0, i32 0
  %arraydecay12 = getelementptr inbounds [1 x %struct.__jmp_buf_tag], [1 x %struct.__jmp_buf_tag]* %je_buf11, i64 0, i64 0
  %20 = load i32, i32* %ret, align 4
  call void @siglongjmp(%struct.__jmp_buf_tag* %arraydecay12, i32 %20) #9
  unreachable

if.end13:                                         ; preds = %do.body7
  %21 = load i32, i32* %ret, align 4
  %cmp14 = icmp eq i32 %21, 2
  br i1 %cmp14, label %if.then15, label %if.end16

if.then15:                                        ; preds = %if.end13
  %22 = load i32, i32* @PL_statusvalue, align 4
  call void @exit(i32 %22) #9
  unreachable

if.end16:                                         ; preds = %if.end13
  %call17 = call %struct._PerlIO** @Perl_PerlIO_stderr()
  %23 = load i32, i32* %ret, align 4
  %call18 = call i32 (%struct._PerlIO**, i8*, ...) @PerlIO_printf(%struct._PerlIO** %call17, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.18, i64 0, i64 0), i32 %23)
  call void @exit(i32 1) #9
  unreachable

do.end19:                                         ; No predecessors!
  br label %sw.epilog

sw.epilog:                                        ; preds = %do.end19, %redo_body
  br label %do.body20

do.body20:                                        ; preds = %sw.epilog
  %je_prev21 = getelementptr inbounds %struct.jmpenv, %struct.jmpenv* %cur_env, i32 0, i32 1
  %24 = load %struct.jmpenv*, %struct.jmpenv** %je_prev21, align 8
  store %struct.jmpenv* %24, %struct.jmpenv** @PL_top_env, align 8
  br label %do.end22

do.end22:                                         ; preds = %do.body20
  %25 = load %struct.op*, %struct.op** %oldop, align 8
  store %struct.op* %25, %struct.op** @PL_op, align 8
  ret %struct.op* null
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.op* @Perl_pp_hintseval() #0 {
entry:
  %sp = alloca %struct.sv**, align 8
  %0 = load %struct.sv**, %struct.sv*** @PL_stack_sp, align 8
  store %struct.sv** %0, %struct.sv*** %sp, align 8
  br label %do.body

do.body:                                          ; preds = %entry
  br label %do.body1

do.body1:                                         ; preds = %do.body
  %1 = load %struct.sv**, %struct.sv*** @PL_stack_max, align 8
  %2 = load %struct.sv**, %struct.sv*** %sp, align 8
  %sub.ptr.lhs.cast = ptrtoint %struct.sv** %1 to i64
  %sub.ptr.rhs.cast = ptrtoint %struct.sv** %2 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 8
  %cmp = icmp slt i64 %sub.ptr.div, 1
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %do.body1
  br i1 true, label %if.then, label %if.end

cond.false:                                       ; preds = %do.body1
  br i1 false, label %if.then, label %if.end

if.then:                                          ; preds = %cond.false, %cond.true
  %3 = load %struct.sv**, %struct.sv*** %sp, align 8
  %4 = load %struct.sv**, %struct.sv*** %sp, align 8
  %call = call %struct.sv** @Perl_stack_grow(%struct.sv** %3, %struct.sv** %4, i64 1)
  store %struct.sv** %call, %struct.sv*** %sp, align 8
  %5 = load %struct.sv**, %struct.sv*** %sp, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %cond.false, %cond.true
  br label %do.end

do.end:                                           ; preds = %if.end
  %6 = load %struct.op*, %struct.op** @PL_op, align 8
  %7 = bitcast %struct.op* %6 to %struct.svop*
  %op_sv = getelementptr inbounds %struct.svop, %struct.svop* %7, i32 0, i32 7
  %8 = load %struct.sv*, %struct.sv** %op_sv, align 8
  %9 = bitcast %struct.sv* %8 to i8*
  %10 = bitcast i8* %9 to %struct.hv*
  %call2 = call %struct.hv* @Perl_hv_copy_hints_hv(%struct.hv* %10)
  %11 = bitcast %struct.hv* %call2 to i8*
  %12 = bitcast i8* %11 to %struct.sv*
  %call3 = call %struct.sv* @Perl_sv_2mortal(%struct.sv* %12)
  %13 = load %struct.sv**, %struct.sv*** %sp, align 8
  %incdec.ptr = getelementptr inbounds %struct.sv*, %struct.sv** %13, i32 1
  store %struct.sv** %incdec.ptr, %struct.sv*** %sp, align 8
  store %struct.sv* %call3, %struct.sv** %incdec.ptr, align 8
  br label %do.end4

do.end4:                                          ; preds = %do.end
  %14 = load %struct.sv**, %struct.sv*** %sp, align 8
  store %struct.sv** %14, %struct.sv*** @PL_stack_sp, align 8
  %15 = load %struct.op*, %struct.op** @PL_op, align 8
  %op_next = getelementptr inbounds %struct.op, %struct.op* %15, i32 0, i32 0
  %16 = load %struct.op*, %struct.op** %op_next, align 8
  ret %struct.op* %16
}

declare dso_local %struct.hv* @Perl_hv_copy_hints_hv(%struct.hv*) #1

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.op* @Perl_pp_entereval() #0 {
entry:
  %retval = alloca %struct.op*, align 8
  %sp = alloca %struct.sv**, align 8
  %cx = alloca %struct.context*, align 8
  %sv = alloca %struct.sv*, align 8
  %gimme = alloca i32, align 4
  %was = alloca i32, align 4
  %tbuf = alloca [32 x i8], align 16
  %saved_delete = alloca i8, align 1
  %tmpbuf = alloca i8*, align 8
  %len = alloca i64, align 8
  %runcv = alloca %struct.cv*, align 8
  %seq = alloca i32, align 4
  %lex_flags = alloca i32, align 4
  %saved_hh = alloca %struct.hv*, align 8
  %bytes = alloca i8, align 1
  %len27 = alloca i64, align 8
  %p = alloca i8*, align 8
  %len69 = alloca i64, align 8
  %temp_sv = alloca %struct.sv*, align 8
  %safestr = alloca i8*, align 8
  %safestr255 = alloca i8*, align 8
  %0 = load %struct.sv**, %struct.sv*** @PL_stack_sp, align 8
  store %struct.sv** %0, %struct.sv*** %sp, align 8
  %1 = load %struct.op*, %struct.op** @PL_op, align 8
  %op_flags = getelementptr inbounds %struct.op, %struct.op* %1, i32 0, i32 5
  %2 = load i8, i8* %op_flags, align 2
  %conv = zext i8 %2 to i32
  %and = and i32 %conv, 3
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %3 = load %struct.op*, %struct.op** @PL_op, align 8
  %op_flags1 = getelementptr inbounds %struct.op, %struct.op* %3, i32 0, i32 5
  %4 = load i8, i8* %op_flags1, align 2
  %conv2 = zext i8 %4 to i32
  %and3 = and i32 %conv2, 3
  br label %cond.end

cond.false:                                       ; preds = %entry
  %call = call i32 @Perl_block_gimme()
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %and3, %cond.true ], [ %call, %cond.false ]
  store i32 %cond, i32* %gimme, align 4
  %5 = load i32, i32* @PL_breakable_sub_gen, align 4
  store i32 %5, i32* %was, align 4
  store i8 0, i8* %saved_delete, align 1
  %arraydecay = getelementptr inbounds [32 x i8], [32 x i8]* %tbuf, i64 0, i64 0
  store i8* %arraydecay, i8** %tmpbuf, align 8
  store i32 0, i32* %lex_flags, align 4
  store %struct.hv* null, %struct.hv** %saved_hh, align 8
  %6 = load %struct.op*, %struct.op** @PL_op, align 8
  %op_private = getelementptr inbounds %struct.op, %struct.op* %6, i32 0, i32 6
  %7 = load i8, i8* %op_private, align 1
  %conv4 = zext i8 %7 to i32
  %and5 = and i32 %conv4, 8
  %tobool6 = icmp ne i32 %and5, 0
  %frombool = zext i1 %tobool6 to i8
  store i8 %frombool, i8* %bytes, align 1
  %8 = load %struct.op*, %struct.op** @PL_op, align 8
  %op_private7 = getelementptr inbounds %struct.op, %struct.op* %8, i32 0, i32 6
  %9 = load i8, i8* %op_private7, align 1
  %conv8 = zext i8 %9 to i32
  %and9 = and i32 %conv8, 2
  %tobool10 = icmp ne i32 %and9, 0
  br i1 %tobool10, label %if.then, label %if.else

if.then:                                          ; preds = %cond.end
  %10 = load %struct.sv**, %struct.sv*** %sp, align 8
  %incdec.ptr = getelementptr inbounds %struct.sv*, %struct.sv** %10, i32 -1
  store %struct.sv** %incdec.ptr, %struct.sv*** %sp, align 8
  %11 = load %struct.sv*, %struct.sv** %10, align 8
  %12 = bitcast %struct.sv* %11 to i8*
  %13 = bitcast i8* %12 to %struct.sv*
  %call11 = call %struct.sv* @S_SvREFCNT_inc(%struct.sv* %13)
  %14 = bitcast %struct.sv* %call11 to i8*
  %15 = bitcast i8* %14 to %struct.hv*
  store %struct.hv* %15, %struct.hv** %saved_hh, align 8
  br label %if.end22

if.else:                                          ; preds = %cond.end
  %16 = load i32, i32* getelementptr inbounds (%struct.cop, %struct.cop* @PL_compiling, i32 0, i32 10), align 8
  %and12 = and i32 %16, 131072
  %tobool13 = icmp ne i32 %and12, 0
  br i1 %tobool13, label %if.then20, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.else
  %17 = load %struct.op*, %struct.op** @PL_op, align 8
  %op_private14 = getelementptr inbounds %struct.op, %struct.op* %17, i32 0, i32 6
  %18 = load i8, i8* %op_private14, align 1
  %conv15 = zext i8 %18 to i32
  %and16 = and i32 %conv15, 16
  %tobool17 = icmp ne i32 %and16, 0
  br i1 %tobool17, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %lor.lhs.false
  %19 = load %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_hints = getelementptr inbounds %struct.cop, %struct.cop* %19, i32 0, i32 10
  %20 = load i32, i32* %cop_hints, align 8
  %and18 = and i32 %20, 131072
  %tobool19 = icmp ne i32 %and18, 0
  br i1 %tobool19, label %if.then20, label %if.end

if.then20:                                        ; preds = %land.lhs.true, %if.else
  %21 = load %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_hints_hash = getelementptr inbounds %struct.cop, %struct.cop* %21, i32 0, i32 13
  %22 = load %struct.refcounted_he*, %struct.refcounted_he** %cop_hints_hash, align 8
  %call21 = call %struct.hv* @Perl_refcounted_he_chain_2hv(%struct.refcounted_he* %22, i32 0)
  store %struct.hv* %call21, %struct.hv** %saved_hh, align 8
  %23 = load %struct.hv*, %struct.hv** %saved_hh, align 8
  %24 = bitcast %struct.hv* %23 to i8*
  %25 = bitcast i8* %24 to %struct.sv*
  call void @Perl_sv_magic(%struct.sv* %25, %struct.sv* null, i32 72, i8* null, i32 0)
  br label %if.end

if.end:                                           ; preds = %if.then20, %land.lhs.true, %lor.lhs.false
  br label %if.end22

if.end22:                                         ; preds = %if.end, %if.then
  %26 = load %struct.sv**, %struct.sv*** %sp, align 8
  %incdec.ptr23 = getelementptr inbounds %struct.sv*, %struct.sv** %26, i32 -1
  store %struct.sv** %incdec.ptr23, %struct.sv*** %sp, align 8
  %27 = load %struct.sv*, %struct.sv** %26, align 8
  store %struct.sv* %27, %struct.sv** %sv, align 8
  %28 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_flags = getelementptr inbounds %struct.sv, %struct.sv* %28, i32 0, i32 2
  %29 = load i32, i32* %sv_flags, align 4
  %and24 = and i32 %29, 1024
  %tobool25 = icmp ne i32 %and24, 0
  br i1 %tobool25, label %if.else61, label %if.then26

if.then26:                                        ; preds = %if.end22
  %30 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_flags28 = getelementptr inbounds %struct.sv, %struct.sv* %30, i32 0, i32 2
  %31 = load i32, i32* %sv_flags28, align 4
  %and29 = and i32 %31, 2098176
  %cmp = icmp eq i32 %and29, 1024
  br i1 %cmp, label %cond.true31, label %cond.false32

cond.true31:                                      ; preds = %if.then26
  %32 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_any = getelementptr inbounds %struct.sv, %struct.sv* %32, i32 0, i32 0
  %33 = load i8*, i8** %sv_any, align 8
  %34 = bitcast i8* %33 to %struct.xpv*
  %xpv_cur = getelementptr inbounds %struct.xpv, %struct.xpv* %34, i32 0, i32 2
  %35 = load i64, i64* %xpv_cur, align 8
  store i64 %35, i64* %len27, align 8
  %36 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_u = getelementptr inbounds %struct.sv, %struct.sv* %36, i32 0, i32 3
  %svu_pv = bitcast %union.anon* %sv_u to i8**
  %37 = load i8*, i8** %svu_pv, align 8
  %add.ptr = getelementptr inbounds i8, i8* %37, i64 0
  br label %cond.end34

cond.false32:                                     ; preds = %if.then26
  %38 = load %struct.sv*, %struct.sv** %sv, align 8
  %call33 = call i8* @Perl_sv_2pv_flags(%struct.sv* %38, i64* %len27, i32 34)
  br label %cond.end34

cond.end34:                                       ; preds = %cond.false32, %cond.true31
  %cond35 = phi i8* [ %add.ptr, %cond.true31 ], [ %call33, %cond.false32 ]
  store i8* %cond35, i8** %p, align 8
  %39 = load i8*, i8** %p, align 8
  %40 = load i64, i64* %len27, align 8
  %41 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_flags36 = getelementptr inbounds %struct.sv, %struct.sv* %41, i32 0, i32 2
  %42 = load i32, i32* %sv_flags36, align 4
  %and37 = and i32 %42, 536870912
  %or = or i32 524288, %and37
  %call38 = call %struct.sv* @Perl_newSVpvn_flags(i8* %39, i64 %40, i32 %or)
  store %struct.sv* %call38, %struct.sv** %sv, align 8
  %43 = load i32, i32* %lex_flags, align 4
  %or39 = or i32 %43, 8
  store i32 %or39, i32* %lex_flags, align 4
  %44 = load i8, i8* %bytes, align 1
  %tobool40 = trunc i8 %44 to i1
  br i1 %tobool40, label %land.lhs.true42, label %if.end60

land.lhs.true42:                                  ; preds = %cond.end34
  %45 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_flags43 = getelementptr inbounds %struct.sv, %struct.sv* %45, i32 0, i32 2
  %46 = load i32, i32* %sv_flags43, align 4
  %and44 = and i32 %46, 536870912
  %tobool45 = icmp ne i32 %and44, 0
  br i1 %tobool45, label %if.then46, label %if.end60

if.then46:                                        ; preds = %land.lhs.true42
  %47 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_flags47 = getelementptr inbounds %struct.sv, %struct.sv* %47, i32 0, i32 2
  %48 = load i32, i32* %sv_flags47, align 4
  %and48 = and i32 %48, 966889216
  %cmp49 = icmp eq i32 %and48, 1024
  br i1 %cmp49, label %cond.true51, label %cond.false56

cond.true51:                                      ; preds = %if.then46
  %49 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_any52 = getelementptr inbounds %struct.sv, %struct.sv* %49, i32 0, i32 0
  %50 = load i8*, i8** %sv_any52, align 8
  %51 = bitcast i8* %50 to %struct.xpv*
  %xpv_cur53 = getelementptr inbounds %struct.xpv, %struct.xpv* %51, i32 0, i32 2
  %52 = load i64, i64* %xpv_cur53, align 8
  store i64 %52, i64* %len27, align 8
  %53 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_u54 = getelementptr inbounds %struct.sv, %struct.sv* %53, i32 0, i32 3
  %svu_pv55 = bitcast %union.anon* %sv_u54 to i8**
  %54 = load i8*, i8** %svu_pv55, align 8
  br label %cond.end58

cond.false56:                                     ; preds = %if.then46
  %55 = load %struct.sv*, %struct.sv** %sv, align 8
  %call57 = call i8* @Perl_sv_pvbyten_force(%struct.sv* %55, i64* %len27)
  br label %cond.end58

cond.end58:                                       ; preds = %cond.false56, %cond.true51
  %cond59 = phi i8* [ %54, %cond.true51 ], [ %call57, %cond.false56 ]
  br label %if.end60

if.end60:                                         ; preds = %cond.end58, %land.lhs.true42, %cond.end34
  br label %if.end87

if.else61:                                        ; preds = %if.end22
  %56 = load i8, i8* %bytes, align 1
  %tobool62 = trunc i8 %56 to i1
  br i1 %tobool62, label %land.lhs.true64, label %if.end86

land.lhs.true64:                                  ; preds = %if.else61
  %57 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_flags65 = getelementptr inbounds %struct.sv, %struct.sv* %57, i32 0, i32 2
  %58 = load i32, i32* %sv_flags65, align 4
  %and66 = and i32 %58, 536870912
  %tobool67 = icmp ne i32 %and66, 0
  br i1 %tobool67, label %if.then68, label %if.end86

if.then68:                                        ; preds = %land.lhs.true64
  %59 = load %struct.sv*, %struct.sv** %sv, align 8
  %call70 = call %struct.sv* @Perl_newSVsv(%struct.sv* %59)
  store %struct.sv* %call70, %struct.sv** %sv, align 8
  %60 = load %struct.sv*, %struct.sv** %sv, align 8
  %call71 = call %struct.sv* @Perl_sv_2mortal(%struct.sv* %60)
  %61 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_flags72 = getelementptr inbounds %struct.sv, %struct.sv* %61, i32 0, i32 2
  %62 = load i32, i32* %sv_flags72, align 4
  %and73 = and i32 %62, 966889216
  %cmp74 = icmp eq i32 %and73, 1024
  br i1 %cmp74, label %cond.true76, label %cond.false81

cond.true76:                                      ; preds = %if.then68
  %63 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_any77 = getelementptr inbounds %struct.sv, %struct.sv* %63, i32 0, i32 0
  %64 = load i8*, i8** %sv_any77, align 8
  %65 = bitcast i8* %64 to %struct.xpv*
  %xpv_cur78 = getelementptr inbounds %struct.xpv, %struct.xpv* %65, i32 0, i32 2
  %66 = load i64, i64* %xpv_cur78, align 8
  store i64 %66, i64* %len69, align 8
  %67 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_u79 = getelementptr inbounds %struct.sv, %struct.sv* %67, i32 0, i32 3
  %svu_pv80 = bitcast %union.anon* %sv_u79 to i8**
  %68 = load i8*, i8** %svu_pv80, align 8
  br label %cond.end83

cond.false81:                                     ; preds = %if.then68
  %69 = load %struct.sv*, %struct.sv** %sv, align 8
  %call82 = call i8* @Perl_sv_pvbyten_force(%struct.sv* %69, i64* %len69)
  br label %cond.end83

cond.end83:                                       ; preds = %cond.false81, %cond.true76
  %cond84 = phi i8* [ %68, %cond.true76 ], [ %call82, %cond.false81 ]
  %70 = load i32, i32* %lex_flags, align 4
  %or85 = or i32 %70, 8
  store i32 %or85, i32* %lex_flags, align 4
  br label %if.end86

if.end86:                                         ; preds = %cond.end83, %land.lhs.true64, %if.else61
  br label %if.end87

if.end87:                                         ; preds = %if.end86, %if.end60
  %71 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_flags88 = getelementptr inbounds %struct.sv, %struct.sv* %71, i32 0, i32 2
  %72 = load i32, i32* %sv_flags88, align 4
  %and89 = and i32 %72, 14680064
  %tobool90 = icmp ne i32 %and89, 0
  br i1 %tobool90, label %land.lhs.true91, label %cond.false95

land.lhs.true91:                                  ; preds = %if.end87
  %73 = load %struct.sv*, %struct.sv** %sv, align 8
  %call92 = call zeroext i1 @Perl_sv_tainted(%struct.sv* %73)
  br i1 %call92, label %cond.true94, label %cond.false95

cond.true94:                                      ; preds = %land.lhs.true91
  br i1 true, label %if.then96, label %if.end97

cond.false95:                                     ; preds = %land.lhs.true91, %if.end87
  br i1 false, label %if.then96, label %if.end97

if.then96:                                        ; preds = %cond.false95, %cond.true94
  store i8 1, i8* @PL_tainted, align 1
  br label %if.end97

if.end97:                                         ; preds = %if.then96, %cond.false95, %cond.true94
  %74 = load i8, i8* @PL_tainting, align 1
  %tobool98 = trunc i8 %74 to i1
  br i1 %tobool98, label %cond.true100, label %cond.false101

cond.true100:                                     ; preds = %if.end97
  br i1 true, label %if.then102, label %if.end103

cond.false101:                                    ; preds = %if.end97
  br i1 false, label %if.then102, label %if.end103

if.then102:                                       ; preds = %cond.false101, %cond.true100
  call void @Perl_taint_proper(i8* null, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.79, i64 0, i64 0))
  br label %if.end103

if.end103:                                        ; preds = %if.then102, %cond.false101, %cond.true100
  call void @Perl_push_scope()
  %75 = load %struct.sv*, %struct.sv** %sv, align 8
  %76 = load i32, i32* %lex_flags, align 4
  %77 = load %struct.op*, %struct.op** @PL_op, align 8
  %op_private104 = getelementptr inbounds %struct.op, %struct.op* %77, i32 0, i32 6
  %78 = load i8, i8* %op_private104, align 1
  %conv105 = zext i8 %78 to i32
  %and106 = and i32 %conv105, 4
  %tobool107 = icmp ne i32 %and106, 0
  br i1 %tobool107, label %cond.true108, label %cond.false109

cond.true108:                                     ; preds = %if.end103
  br label %cond.end113

cond.false109:                                    ; preds = %if.end103
  %79 = load i8, i8* %bytes, align 1
  %tobool110 = trunc i8 %79 to i1
  %80 = zext i1 %tobool110 to i64
  %cond112 = select i1 %tobool110, i32 4, i32 1
  br label %cond.end113

cond.end113:                                      ; preds = %cond.false109, %cond.true108
  %cond114 = phi i32 [ 2, %cond.true108 ], [ %cond112, %cond.false109 ]
  %or115 = or i32 %76, %cond114
  call void @Perl_lex_start(%struct.sv* %75, %struct._PerlIO** null, i32 %or115)
  call void @Perl_save_strlen(i64* @PL_tmps_floor)
  %81 = load i64, i64* @PL_tmps_ix, align 8
  store i64 %81, i64* @PL_tmps_floor, align 8
  %82 = load i32, i32* @PL_perldb, align 4
  %and116 = and i32 %82, 256
  %tobool117 = icmp ne i32 %and116, 0
  br i1 %tobool117, label %land.lhs.true118, label %if.else138

land.lhs.true118:                                 ; preds = %cond.end113
  %83 = load %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_line = getelementptr inbounds %struct.cop, %struct.cop* %83, i32 0, i32 7
  %84 = load i32, i32* %cop_line, align 4
  %tobool119 = icmp ne i32 %84, 0
  br i1 %tobool119, label %if.then120, label %if.else138

if.then120:                                       ; preds = %land.lhs.true118
  %call121 = call %struct.sv* @Perl_sv_newmortal()
  store %struct.sv* %call121, %struct.sv** %temp_sv, align 8
  %85 = load %struct.sv*, %struct.sv** %temp_sv, align 8
  %86 = load i32, i32* @PL_evalseq, align 4
  %inc = add i32 %86, 1
  store i32 %inc, i32* @PL_evalseq, align 4
  %conv122 = zext i32 %inc to i64
  %87 = load %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_filegv = getelementptr inbounds %struct.cop, %struct.cop* %87, i32 0, i32 9
  %88 = load %struct.gv*, %struct.gv** %cop_filegv, align 8
  %tobool123 = icmp ne %struct.gv* %88, null
  br i1 %tobool123, label %cond.true124, label %cond.false129

cond.true124:                                     ; preds = %if.then120
  %89 = load %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_filegv125 = getelementptr inbounds %struct.cop, %struct.cop* %89, i32 0, i32 9
  %90 = load %struct.gv*, %struct.gv** %cop_filegv125, align 8
  %sv_any126 = getelementptr inbounds %struct.gv, %struct.gv* %90, i32 0, i32 0
  %91 = load %struct.xpvgv*, %struct.xpvgv** %sv_any126, align 8
  %xiv_u = getelementptr inbounds %struct.xpvgv, %struct.xpvgv* %91, i32 0, i32 4
  %xivu_namehek = bitcast %union._xivu* %xiv_u to %struct.hek**
  %92 = load %struct.hek*, %struct.hek** %xivu_namehek, align 8
  %hek_key = getelementptr inbounds %struct.hek, %struct.hek* %92, i32 0, i32 2
  %arraydecay127 = getelementptr inbounds [1 x i8], [1 x i8]* %hek_key, i64 0, i64 0
  %add.ptr128 = getelementptr inbounds i8, i8* %arraydecay127, i64 2
  br label %cond.end130

cond.false129:                                    ; preds = %if.then120
  br label %cond.end130

cond.end130:                                      ; preds = %cond.false129, %cond.true124
  %cond131 = phi i8* [ %add.ptr128, %cond.true124 ], [ null, %cond.false129 ]
  %93 = load %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_line132 = getelementptr inbounds %struct.cop, %struct.cop* %93, i32 0, i32 7
  %94 = load i32, i32* %cop_line132, align 4
  %conv133 = zext i32 %94 to i64
  call void (%struct.sv*, i8*, ...) @Perl_sv_setpvf(%struct.sv* %85, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.80, i64 0, i64 0), i64 %conv122, i8* %cond131, i64 %conv133)
  %95 = load %struct.sv*, %struct.sv** %temp_sv, align 8
  %sv_u134 = getelementptr inbounds %struct.sv, %struct.sv* %95, i32 0, i32 3
  %svu_pv135 = bitcast %union.anon* %sv_u134 to i8**
  %96 = load i8*, i8** %svu_pv135, align 8
  store i8* %96, i8** %tmpbuf, align 8
  %97 = load %struct.sv*, %struct.sv** %temp_sv, align 8
  %sv_any136 = getelementptr inbounds %struct.sv, %struct.sv* %97, i32 0, i32 0
  %98 = load i8*, i8** %sv_any136, align 8
  %99 = bitcast i8* %98 to %struct.xpv*
  %xpv_cur137 = getelementptr inbounds %struct.xpv, %struct.xpv* %99, i32 0, i32 2
  %100 = load i64, i64* %xpv_cur137, align 8
  store i64 %100, i64* %len, align 8
  br label %if.end143

if.else138:                                       ; preds = %land.lhs.true118, %cond.end113
  %101 = load i8*, i8** %tmpbuf, align 8
  %102 = load i32, i32* @PL_evalseq, align 4
  %inc139 = add i32 %102, 1
  store i32 %inc139, i32* @PL_evalseq, align 4
  %conv140 = zext i32 %inc139 to i64
  %call141 = call i32 (i8*, i64, i8*, ...) @Perl_my_snprintf(i8* %101, i64 32, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.81, i64 0, i64 0), i64 %conv140)
  %conv142 = sext i32 %call141 to i64
  store i64 %conv142, i64* %len, align 8
  br label %if.end143

if.end143:                                        ; preds = %if.else138, %cond.end130
  call void @Perl_save_generic_svref(%struct.sv** bitcast (%struct.gv** getelementptr inbounds (%struct.cop, %struct.cop* @PL_compiling, i32 0, i32 9) to %struct.sv**))
  %103 = load i8*, i8** %tmpbuf, align 8
  %add.ptr144 = getelementptr inbounds i8, i8* %103, i64 2
  %call145 = call %struct.gv* @Perl_gv_fetchfile(i8* %add.ptr144)
  %104 = bitcast %struct.gv* %call145 to i8*
  %105 = bitcast i8* %104 to %struct.sv*
  %call146 = call %struct.sv* @S_SvREFCNT_inc(%struct.sv* %105)
  %106 = bitcast %struct.sv* %call146 to %struct.gv*
  store %struct.gv* %106, %struct.gv** getelementptr inbounds (%struct.cop, %struct.cop* @PL_compiling, i32 0, i32 9), align 8
  call void @Perl_save_I32(i32* getelementptr inbounds (%struct.cop, %struct.cop* @PL_compiling, i32 0, i32 7))
  store i32 1, i32* getelementptr inbounds (%struct.cop, %struct.cop* @PL_compiling, i32 0, i32 7), align 4
  %call147 = call %struct.cv* @Perl_find_runcv(i32* %seq)
  store %struct.cv* %call147, %struct.cv** %runcv, align 8
  %107 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %si_cxix = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %107, i32 0, i32 4
  %108 = load i32, i32* %si_cxix, align 8
  %109 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %si_cxmax = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %109, i32 0, i32 5
  %110 = load i32, i32* %si_cxmax, align 4
  %cmp148 = icmp slt i32 %108, %110
  br i1 %cmp148, label %cond.true150, label %cond.false153

cond.true150:                                     ; preds = %if.end143
  %111 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %si_cxix151 = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %111, i32 0, i32 4
  %112 = load i32, i32* %si_cxix151, align 8
  %inc152 = add nsw i32 %112, 1
  store i32 %inc152, i32* %si_cxix151, align 8
  br label %cond.end156

cond.false153:                                    ; preds = %if.end143
  %call154 = call i32 @Perl_cxinc()
  %113 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %si_cxix155 = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %113, i32 0, i32 4
  store i32 %call154, i32* %si_cxix155, align 8
  br label %cond.end156

cond.end156:                                      ; preds = %cond.false153, %cond.true150
  %cond157 = phi i32 [ %inc152, %cond.true150 ], [ %call154, %cond.false153 ]
  %114 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %si_cxstack = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %114, i32 0, i32 1
  %115 = load %struct.context*, %struct.context** %si_cxstack, align 8
  %116 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %si_cxix158 = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %116, i32 0, i32 4
  %117 = load i32, i32* %si_cxix158, align 8
  %idxprom = sext i32 %117 to i64
  %arrayidx = getelementptr inbounds %struct.context, %struct.context* %115, i64 %idxprom
  store %struct.context* %arrayidx, %struct.context** %cx, align 8
  %118 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u = getelementptr inbounds %struct.context, %struct.context* %118, i32 0, i32 0
  %cx_subst = bitcast %union.anon.16* %cx_u to %struct.subst*
  %sbu_type = getelementptr inbounds %struct.subst, %struct.subst* %cx_subst, i32 0, i32 0
  store i8 42, i8* %sbu_type, align 8
  %119 = load %struct.sv**, %struct.sv*** %sp, align 8
  %120 = load %struct.sv**, %struct.sv*** @PL_stack_base, align 8
  %sub.ptr.lhs.cast = ptrtoint %struct.sv** %119 to i64
  %sub.ptr.rhs.cast = ptrtoint %struct.sv** %120 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 8
  %conv159 = trunc i64 %sub.ptr.div to i32
  %121 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u160 = getelementptr inbounds %struct.context, %struct.context* %121, i32 0, i32 0
  %cx_blk = bitcast %union.anon.16* %cx_u160 to %struct.block*
  %blku_oldsp = getelementptr inbounds %struct.block, %struct.block* %cx_blk, i32 0, i32 3
  store i32 %conv159, i32* %blku_oldsp, align 4
  %122 = load %struct.cop*, %struct.cop** @PL_curcop, align 8
  %123 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u161 = getelementptr inbounds %struct.context, %struct.context* %123, i32 0, i32 0
  %cx_blk162 = bitcast %union.anon.16* %cx_u161 to %struct.block*
  %blku_oldcop = getelementptr inbounds %struct.block, %struct.block* %cx_blk162, i32 0, i32 4
  store %struct.cop* %122, %struct.cop** %blku_oldcop, align 8
  %124 = load i32*, i32** @PL_markstack_ptr, align 8
  %125 = load i32*, i32** @PL_markstack, align 8
  %sub.ptr.lhs.cast163 = ptrtoint i32* %124 to i64
  %sub.ptr.rhs.cast164 = ptrtoint i32* %125 to i64
  %sub.ptr.sub165 = sub i64 %sub.ptr.lhs.cast163, %sub.ptr.rhs.cast164
  %sub.ptr.div166 = sdiv exact i64 %sub.ptr.sub165, 4
  %conv167 = trunc i64 %sub.ptr.div166 to i32
  %126 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u168 = getelementptr inbounds %struct.context, %struct.context* %126, i32 0, i32 0
  %cx_blk169 = bitcast %union.anon.16* %cx_u168 to %struct.block*
  %blku_oldmarksp = getelementptr inbounds %struct.block, %struct.block* %cx_blk169, i32 0, i32 5
  store i32 %conv167, i32* %blku_oldmarksp, align 8
  %127 = load i32, i32* @PL_scopestack_ix, align 4
  %128 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u170 = getelementptr inbounds %struct.context, %struct.context* %128, i32 0, i32 0
  %cx_blk171 = bitcast %union.anon.16* %cx_u170 to %struct.block*
  %blku_oldscopesp = getelementptr inbounds %struct.block, %struct.block* %cx_blk171, i32 0, i32 6
  store i32 %127, i32* %blku_oldscopesp, align 4
  %129 = load %struct.pmop*, %struct.pmop** @PL_curpm, align 8
  %130 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u172 = getelementptr inbounds %struct.context, %struct.context* %130, i32 0, i32 0
  %cx_blk173 = bitcast %union.anon.16* %cx_u172 to %struct.block*
  %blku_oldpm = getelementptr inbounds %struct.block, %struct.block* %cx_blk173, i32 0, i32 7
  store %struct.pmop* %129, %struct.pmop** %blku_oldpm, align 8
  %131 = load i32, i32* %gimme, align 4
  %conv174 = trunc i32 %131 to i8
  %132 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u175 = getelementptr inbounds %struct.context, %struct.context* %132, i32 0, i32 0
  %cx_blk176 = bitcast %union.anon.16* %cx_u175 to %struct.block*
  %blku_gimme = getelementptr inbounds %struct.block, %struct.block* %cx_blk176, i32 0, i32 1
  store i8 %conv174, i8* %blku_gimme, align 1
  br label %do.body

do.body:                                          ; preds = %cond.end156
  %133 = load i8, i8* @PL_in_eval, align 1
  %conv177 = zext i8 %133 to i32
  %and178 = and i32 %conv177, 127
  %134 = load %struct.op*, %struct.op** @PL_op, align 8
  %op_type = getelementptr inbounds %struct.op, %struct.op* %134, i32 0, i32 4
  %bf.load = load i16, i16* %op_type, align 8
  %bf.clear = and i16 %bf.load, 511
  %bf.cast = zext i16 %bf.clear to i32
  %conv179 = trunc i32 %bf.cast to i16
  %conv180 = zext i16 %conv179 to i32
  %shl = shl i32 %conv180, 7
  %or181 = or i32 %and178, %shl
  %conv182 = trunc i32 %or181 to i16
  %135 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u183 = getelementptr inbounds %struct.context, %struct.context* %135, i32 0, i32 0
  %cx_blk184 = bitcast %union.anon.16* %cx_u183 to %struct.block*
  %blku_u16 = getelementptr inbounds %struct.block, %struct.block* %cx_blk184, i32 0, i32 2
  store i16 %conv182, i16* %blku_u16, align 2
  %136 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u185 = getelementptr inbounds %struct.context, %struct.context* %136, i32 0, i32 0
  %cx_blk186 = bitcast %union.anon.16* %cx_u185 to %struct.block*
  %blk_u = getelementptr inbounds %struct.block, %struct.block* %cx_blk186, i32 0, i32 8
  %blku_eval = bitcast %union.anon.20* %blk_u to %struct.block_eval*
  %old_namesv = getelementptr inbounds %struct.block_eval, %struct.block_eval* %blku_eval, i32 0, i32 1
  store %struct.sv* null, %struct.sv** %old_namesv, align 8
  %137 = load %struct.op*, %struct.op** @PL_eval_root, align 8
  %138 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u187 = getelementptr inbounds %struct.context, %struct.context* %138, i32 0, i32 0
  %cx_blk188 = bitcast %union.anon.16* %cx_u187 to %struct.block*
  %blk_u189 = getelementptr inbounds %struct.block, %struct.block* %cx_blk188, i32 0, i32 8
  %blku_eval190 = bitcast %union.anon.20* %blk_u189 to %struct.block_eval*
  %old_eval_root = getelementptr inbounds %struct.block_eval, %struct.block_eval* %blku_eval190, i32 0, i32 2
  store %struct.op* %137, %struct.op** %old_eval_root, align 8
  %139 = load %struct.yy_parser*, %struct.yy_parser** @PL_parser, align 8
  %tobool191 = icmp ne %struct.yy_parser* %139, null
  br i1 %tobool191, label %cond.true192, label %cond.false193

cond.true192:                                     ; preds = %do.body
  %140 = load %struct.yy_parser*, %struct.yy_parser** @PL_parser, align 8
  %linestr = getelementptr inbounds %struct.yy_parser, %struct.yy_parser* %140, i32 0, i32 33
  %141 = load %struct.sv*, %struct.sv** %linestr, align 8
  br label %cond.end194

cond.false193:                                    ; preds = %do.body
  br label %cond.end194

cond.end194:                                      ; preds = %cond.false193, %cond.true192
  %cond195 = phi %struct.sv* [ %141, %cond.true192 ], [ null, %cond.false193 ]
  %142 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u196 = getelementptr inbounds %struct.context, %struct.context* %142, i32 0, i32 0
  %cx_blk197 = bitcast %union.anon.16* %cx_u196 to %struct.block*
  %blk_u198 = getelementptr inbounds %struct.block, %struct.block* %cx_blk197, i32 0, i32 8
  %blku_eval199 = bitcast %union.anon.20* %blk_u198 to %struct.block_eval*
  %cur_text = getelementptr inbounds %struct.block_eval, %struct.block_eval* %blku_eval199, i32 0, i32 3
  store %struct.sv* %cond195, %struct.sv** %cur_text, align 8
  %143 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u200 = getelementptr inbounds %struct.context, %struct.context* %143, i32 0, i32 0
  %cx_blk201 = bitcast %union.anon.16* %cx_u200 to %struct.block*
  %blk_u202 = getelementptr inbounds %struct.block, %struct.block* %cx_blk201, i32 0, i32 8
  %blku_eval203 = bitcast %union.anon.20* %blk_u202 to %struct.block_eval*
  %cv = getelementptr inbounds %struct.block_eval, %struct.block_eval* %blku_eval203, i32 0, i32 4
  store %struct.cv* null, %struct.cv** %cv, align 8
  %144 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u204 = getelementptr inbounds %struct.context, %struct.context* %144, i32 0, i32 0
  %cx_blk205 = bitcast %union.anon.16* %cx_u204 to %struct.block*
  %blk_u206 = getelementptr inbounds %struct.block, %struct.block* %cx_blk205, i32 0, i32 8
  %blku_eval207 = bitcast %union.anon.20* %blk_u206 to %struct.block_eval*
  %retop = getelementptr inbounds %struct.block_eval, %struct.block_eval* %blku_eval207, i32 0, i32 0
  store %struct.op* null, %struct.op** %retop, align 8
  %145 = load %struct.jmpenv*, %struct.jmpenv** @PL_top_env, align 8
  %146 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u208 = getelementptr inbounds %struct.context, %struct.context* %146, i32 0, i32 0
  %cx_blk209 = bitcast %union.anon.16* %cx_u208 to %struct.block*
  %blk_u210 = getelementptr inbounds %struct.block, %struct.block* %cx_blk209, i32 0, i32 8
  %blku_eval211 = bitcast %union.anon.20* %blk_u210 to %struct.block_eval*
  %cur_top_env = getelementptr inbounds %struct.block_eval, %struct.block_eval* %blku_eval211, i32 0, i32 5
  store %struct.jmpenv* %145, %struct.jmpenv** %cur_top_env, align 8
  br label %do.end

do.end:                                           ; preds = %cond.end194
  %147 = load %struct.op*, %struct.op** @PL_op, align 8
  %op_next = getelementptr inbounds %struct.op, %struct.op* %147, i32 0, i32 0
  %148 = load %struct.op*, %struct.op** %op_next, align 8
  %149 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u212 = getelementptr inbounds %struct.context, %struct.context* %149, i32 0, i32 0
  %cx_blk213 = bitcast %union.anon.16* %cx_u212 to %struct.block*
  %blk_u214 = getelementptr inbounds %struct.block, %struct.block* %cx_blk213, i32 0, i32 8
  %blku_eval215 = bitcast %union.anon.20* %blk_u214 to %struct.block_eval*
  %retop216 = getelementptr inbounds %struct.block_eval, %struct.block_eval* %blku_eval215, i32 0, i32 0
  store %struct.op* %148, %struct.op** %retop216, align 8
  %150 = load i32, i32* @PL_perldb, align 4
  %and217 = and i32 %150, 2
  %tobool218 = icmp ne i32 %and217, 0
  br i1 %tobool218, label %land.lhs.true222, label %lor.lhs.false219

lor.lhs.false219:                                 ; preds = %do.end
  %151 = load i32, i32* @PL_perldb, align 4
  %and220 = and i32 %151, 1024
  %tobool221 = icmp ne i32 %and220, 0
  br i1 %tobool221, label %land.lhs.true222, label %if.else234

land.lhs.true222:                                 ; preds = %lor.lhs.false219, %do.end
  %152 = load %struct.hv*, %struct.hv** @PL_curstash, align 8
  %153 = load %struct.hv*, %struct.hv** @PL_debstash, align 8
  %cmp223 = icmp ne %struct.hv* %152, %153
  br i1 %cmp223, label %if.then225, label %if.else234

if.then225:                                       ; preds = %land.lhs.true222
  %154 = load %struct.gv*, %struct.gv** getelementptr inbounds (%struct.cop, %struct.cop* @PL_compiling, i32 0, i32 9), align 8
  %tobool226 = icmp ne %struct.gv* %154, null
  br i1 %tobool226, label %cond.true227, label %cond.false230

cond.true227:                                     ; preds = %if.then225
  %155 = load %struct.gv*, %struct.gv** getelementptr inbounds (%struct.cop, %struct.cop* @PL_compiling, i32 0, i32 9), align 8
  %sv_u228 = getelementptr inbounds %struct.gv, %struct.gv* %155, i32 0, i32 3
  %svu_gp = bitcast %union.anon.4* %sv_u228 to %struct.gp**
  %156 = load %struct.gp*, %struct.gp** %svu_gp, align 8
  %add.ptr229 = getelementptr inbounds %struct.gp, %struct.gp* %156, i64 0
  %gp_av = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr229, i32 0, i32 6
  %157 = load %struct.av*, %struct.av** %gp_av, align 8
  br label %cond.end231

cond.false230:                                    ; preds = %if.then225
  br label %cond.end231

cond.end231:                                      ; preds = %cond.false230, %cond.true227
  %cond232 = phi %struct.av* [ %157, %cond.true227 ], [ null, %cond.false230 ]
  %158 = load %struct.yy_parser*, %struct.yy_parser** @PL_parser, align 8
  %linestr233 = getelementptr inbounds %struct.yy_parser, %struct.yy_parser* %158, i32 0, i32 33
  %159 = load %struct.sv*, %struct.sv** %linestr233, align 8
  call void @S_save_lines(%struct.av* %cond232, %struct.sv* %159)
  br label %if.end238

if.else234:                                       ; preds = %land.lhs.true222, %lor.lhs.false219
  %160 = load i8*, i8** %tmpbuf, align 8
  %161 = load i64, i64* %len, align 8
  %conv235 = trunc i64 %161 to i32
  %call236 = call i8* @Perl_savepvn(i8* %160, i32 %conv235)
  store i8* %call236, i8** %safestr, align 8
  %162 = load %struct.hv*, %struct.hv** @PL_defstash, align 8
  %163 = bitcast %struct.hv* %162 to i8*
  %164 = bitcast i8* %163 to %struct.hv*
  %165 = load i8*, i8** %safestr, align 8
  %166 = load i64, i64* %len, align 8
  %conv237 = trunc i64 %166 to i32
  call void @Perl_save_delete(%struct.hv* %164, i8* %165, i32 %conv237)
  store i8 1, i8* %saved_delete, align 1
  br label %if.end238

if.end238:                                        ; preds = %if.else234, %cond.end231
  %167 = load %struct.sv**, %struct.sv*** %sp, align 8
  store %struct.sv** %167, %struct.sv*** @PL_stack_sp, align 8
  %168 = load i32, i32* %gimme, align 4
  %169 = load %struct.cv*, %struct.cv** %runcv, align 8
  %170 = load i32, i32* %seq, align 4
  %171 = load %struct.hv*, %struct.hv** %saved_hh, align 8
  %call239 = call zeroext i1 @S_doeval(i32 %168, %struct.cv* %169, i32 %170, %struct.hv* %171)
  br i1 %call239, label %if.then240, label %if.else270

if.then240:                                       ; preds = %if.end238
  %172 = load i32, i32* %was, align 4
  %173 = load i32, i32* @PL_breakable_sub_gen, align 4
  %cmp241 = icmp ne i32 %172, %173
  br i1 %cmp241, label %cond.true243, label %cond.false248

cond.true243:                                     ; preds = %if.then240
  %174 = load i32, i32* @PL_perldb, align 4
  %and244 = and i32 %174, 2
  %tobool245 = icmp ne i32 %and244, 0
  br i1 %tobool245, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %cond.true243
  %175 = load i32, i32* @PL_perldb, align 4
  %and246 = and i32 %175, 1024
  %tobool247 = icmp ne i32 %and246, 0
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %cond.true243
  %176 = phi i1 [ true, %cond.true243 ], [ %tobool247, %lor.rhs ]
  br i1 %176, label %if.then251, label %if.else252

cond.false248:                                    ; preds = %if.then240
  %177 = load i32, i32* @PL_perldb, align 4
  %and249 = and i32 %177, 2048
  %tobool250 = icmp ne i32 %and249, 0
  br i1 %tobool250, label %if.then251, label %if.else252

if.then251:                                       ; preds = %cond.false248, %lor.end
  br label %if.end260

if.else252:                                       ; preds = %cond.false248, %lor.end
  %178 = load i8, i8* %saved_delete, align 1
  %tobool253 = trunc i8 %178 to i1
  br i1 %tobool253, label %if.end259, label %if.then254

if.then254:                                       ; preds = %if.else252
  %179 = load i8*, i8** %tmpbuf, align 8
  %180 = load i64, i64* %len, align 8
  %conv256 = trunc i64 %180 to i32
  %call257 = call i8* @Perl_savepvn(i8* %179, i32 %conv256)
  store i8* %call257, i8** %safestr255, align 8
  %181 = load %struct.hv*, %struct.hv** @PL_defstash, align 8
  %182 = bitcast %struct.hv* %181 to i8*
  %183 = bitcast i8* %182 to %struct.hv*
  %184 = load i8*, i8** %safestr255, align 8
  %185 = load i64, i64* %len, align 8
  %conv258 = trunc i64 %185 to i32
  call void @Perl_save_delete(%struct.hv* %183, i8* %184, i32 %conv258)
  br label %if.end259

if.end259:                                        ; preds = %if.then254, %if.else252
  br label %if.end260

if.end260:                                        ; preds = %if.end259, %if.then251
  %186 = load %struct.jmpenv*, %struct.jmpenv** @PL_top_env, align 8
  %je_mustcatch = getelementptr inbounds %struct.jmpenv, %struct.jmpenv* %186, i32 0, i32 3
  %187 = load i8, i8* %je_mustcatch, align 4
  %tobool261 = trunc i8 %187 to i1
  %conv262 = zext i1 %tobool261 to i32
  %cmp263 = icmp eq i32 %conv262, 1
  br i1 %cmp263, label %cond.true265, label %cond.false267

cond.true265:                                     ; preds = %if.end260
  %188 = load %struct.op*, %struct.op** @PL_eval_start, align 8
  %call266 = call %struct.op* @S_docatch(%struct.op* %188)
  br label %cond.end268

cond.false267:                                    ; preds = %if.end260
  %189 = load %struct.op*, %struct.op** @PL_eval_start, align 8
  br label %cond.end268

cond.end268:                                      ; preds = %cond.false267, %cond.true265
  %cond269 = phi %struct.op* [ %call266, %cond.true265 ], [ %189, %cond.false267 ]
  store %struct.op* %cond269, %struct.op** %retval, align 8
  br label %return

if.else270:                                       ; preds = %if.end238
  %190 = load i32, i32* %was, align 4
  %191 = load i32, i32* @PL_breakable_sub_gen, align 4
  %cmp271 = icmp ne i32 %190, %191
  br i1 %cmp271, label %cond.true273, label %cond.false280

cond.true273:                                     ; preds = %if.else270
  %192 = load i32, i32* @PL_perldb, align 4
  %and274 = and i32 %192, 2
  %tobool275 = icmp ne i32 %and274, 0
  br i1 %tobool275, label %lor.end279, label %lor.rhs276

lor.rhs276:                                       ; preds = %cond.true273
  %193 = load i32, i32* @PL_perldb, align 4
  %and277 = and i32 %193, 1024
  %tobool278 = icmp ne i32 %and277, 0
  br label %lor.end279

lor.end279:                                       ; preds = %lor.rhs276, %cond.true273
  %194 = phi i1 [ true, %cond.true273 ], [ %tobool278, %lor.rhs276 ]
  br i1 %194, label %if.then283, label %if.else284

cond.false280:                                    ; preds = %if.else270
  %195 = load i32, i32* @PL_perldb, align 4
  %and281 = and i32 %195, 4096
  %tobool282 = icmp ne i32 %and281, 0
  br i1 %tobool282, label %if.then283, label %if.else284

if.then283:                                       ; preds = %cond.false280, %lor.end279
  br label %if.end290

if.else284:                                       ; preds = %cond.false280, %lor.end279
  %196 = load i8, i8* %saved_delete, align 1
  %tobool285 = trunc i8 %196 to i1
  br i1 %tobool285, label %if.end289, label %if.then286

if.then286:                                       ; preds = %if.else284
  %197 = load %struct.hv*, %struct.hv** @PL_defstash, align 8
  %198 = load i8*, i8** %tmpbuf, align 8
  %199 = load i64, i64* %len, align 8
  %conv287 = trunc i64 %199 to i32
  %call288 = call i8* @Perl_hv_common_key_len(%struct.hv* %197, i8* %198, i32 %conv287, i32 68, %struct.sv* null, i32 0)
  %200 = bitcast i8* %call288 to %struct.sv*
  br label %if.end289

if.end289:                                        ; preds = %if.then286, %if.else284
  br label %if.end290

if.end290:                                        ; preds = %if.end289, %if.then283
  %201 = load %struct.op*, %struct.op** @PL_op, align 8
  %op_next291 = getelementptr inbounds %struct.op, %struct.op* %201, i32 0, i32 0
  %202 = load %struct.op*, %struct.op** %op_next291, align 8
  store %struct.op* %202, %struct.op** %retval, align 8
  br label %return

return:                                           ; preds = %if.end290, %cond.end268
  %203 = load %struct.op*, %struct.op** %retval, align 8
  ret %struct.op* %203
}

declare dso_local i8* @Perl_sv_pvbyten_force(%struct.sv*, i64*) #1

; Function Attrs: noinline nounwind uwtable
define internal void @S_save_lines(%struct.av* %array, %struct.sv* %sv) #0 {
entry:
  %array.addr = alloca %struct.av*, align 8
  %sv.addr = alloca %struct.sv*, align 8
  %s = alloca i8*, align 8
  %send = alloca i8*, align 8
  %line = alloca i32, align 4
  %t = alloca i8*, align 8
  %tmpstr = alloca %struct.sv*, align 8
  store %struct.av* %array, %struct.av** %array.addr, align 8
  store %struct.sv* %sv, %struct.sv** %sv.addr, align 8
  %0 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %sv_u = getelementptr inbounds %struct.sv, %struct.sv* %0, i32 0, i32 3
  %svu_pv = bitcast %union.anon* %sv_u to i8**
  %1 = load i8*, i8** %svu_pv, align 8
  %add.ptr = getelementptr inbounds i8, i8* %1, i64 0
  store i8* %add.ptr, i8** %s, align 8
  %2 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %sv_u1 = getelementptr inbounds %struct.sv, %struct.sv* %2, i32 0, i32 3
  %svu_pv2 = bitcast %union.anon* %sv_u1 to i8**
  %3 = load i8*, i8** %svu_pv2, align 8
  %add.ptr3 = getelementptr inbounds i8, i8* %3, i64 0
  %4 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %sv_any = getelementptr inbounds %struct.sv, %struct.sv* %4, i32 0, i32 0
  %5 = load i8*, i8** %sv_any, align 8
  %6 = bitcast i8* %5 to %struct.xpv*
  %xpv_cur = getelementptr inbounds %struct.xpv, %struct.xpv* %6, i32 0, i32 2
  %7 = load i64, i64* %xpv_cur, align 8
  %add.ptr4 = getelementptr inbounds i8, i8* %add.ptr3, i64 %7
  store i8* %add.ptr4, i8** %send, align 8
  store i32 1, i32* %line, align 4
  br label %while.cond

while.cond:                                       ; preds = %if.end, %entry
  %8 = load i8*, i8** %s, align 8
  %tobool = icmp ne i8* %8, null
  br i1 %tobool, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %while.cond
  %9 = load i8*, i8** %s, align 8
  %10 = load i8*, i8** %send, align 8
  %cmp = icmp ult i8* %9, %10
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %11 = phi i1 [ false, %while.cond ], [ %cmp, %land.rhs ]
  br i1 %11, label %while.body, label %while.end

while.body:                                       ; preds = %land.end
  %call = call %struct.sv* @Perl_newSV_type(i32 7)
  store %struct.sv* %call, %struct.sv** %tmpstr, align 8
  %12 = load i8*, i8** %s, align 8
  %13 = load i8*, i8** %send, align 8
  %14 = load i8*, i8** %s, align 8
  %sub.ptr.lhs.cast = ptrtoint i8* %13 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %14 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %call5 = call i8* @memchr(i8* %12, i32 10, i64 %sub.ptr.sub) #8
  store i8* %call5, i8** %t, align 8
  %15 = load i8*, i8** %t, align 8
  %tobool6 = icmp ne i8* %15, null
  br i1 %tobool6, label %if.then, label %if.else

if.then:                                          ; preds = %while.body
  %16 = load i8*, i8** %t, align 8
  %incdec.ptr = getelementptr inbounds i8, i8* %16, i32 1
  store i8* %incdec.ptr, i8** %t, align 8
  br label %if.end

if.else:                                          ; preds = %while.body
  %17 = load i8*, i8** %send, align 8
  store i8* %17, i8** %t, align 8
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %18 = load %struct.sv*, %struct.sv** %tmpstr, align 8
  %19 = load i8*, i8** %s, align 8
  %20 = load i8*, i8** %t, align 8
  %21 = load i8*, i8** %s, align 8
  %sub.ptr.lhs.cast7 = ptrtoint i8* %20 to i64
  %sub.ptr.rhs.cast8 = ptrtoint i8* %21 to i64
  %sub.ptr.sub9 = sub i64 %sub.ptr.lhs.cast7, %sub.ptr.rhs.cast8
  call void @Perl_sv_setpvn(%struct.sv* %18, i8* %19, i64 %sub.ptr.sub9)
  %22 = load %struct.av*, %struct.av** %array.addr, align 8
  %23 = load i32, i32* %line, align 4
  %inc = add nsw i32 %23, 1
  store i32 %inc, i32* %line, align 4
  %conv = sext i32 %23 to i64
  %24 = load %struct.sv*, %struct.sv** %tmpstr, align 8
  %call10 = call %struct.sv** @Perl_av_store(%struct.av* %22, i64 %conv, %struct.sv* %24)
  %25 = load i8*, i8** %t, align 8
  store i8* %25, i8** %s, align 8
  br label %while.cond

while.end:                                        ; preds = %land.end
  ret void
}

declare dso_local i8* @Perl_savepvn(i8*, i32) #1

declare dso_local void @Perl_save_delete(%struct.hv*, i8*, i32) #1

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.op* @Perl_pp_leaveeval() #0 {
entry:
  %sp = alloca %struct.sv**, align 8
  %newsp = alloca %struct.sv**, align 8
  %newpm = alloca %struct.pmop*, align 8
  %gimme = alloca i32, align 4
  %cx = alloca %struct.context*, align 8
  %retop = alloca %struct.op*, align 8
  %save_flags = alloca i8, align 1
  %optype = alloca i32, align 4
  %namesv = alloca %struct.sv*, align 8
  %evalcv = alloca %struct.cv*, align 8
  %svp = alloca %struct.sv**, align 8
  %errsv = alloca %struct.sv*, align 8
  %0 = load %struct.sv**, %struct.sv*** @PL_stack_sp, align 8
  store %struct.sv** %0, %struct.sv*** %sp, align 8
  %1 = load %struct.op*, %struct.op** @PL_op, align 8
  %op_flags = getelementptr inbounds %struct.op, %struct.op* %1, i32 0, i32 5
  %2 = load i8, i8* %op_flags, align 2
  store i8 %2, i8* %save_flags, align 1
  %3 = load i32, i32* @PL_sig_pending, align 4
  %tobool = icmp ne i32 %3, 0
  br i1 %tobool, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  br i1 true, label %if.then, label %if.end

cond.false:                                       ; preds = %entry
  br i1 false, label %if.then, label %if.end

if.then:                                          ; preds = %cond.false, %cond.true
  %4 = load void ()*, void ()** @PL_signalhook, align 8
  call void %4()
  br label %if.end

if.end:                                           ; preds = %if.then, %cond.false, %cond.true
  %5 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %si_cxstack = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %5, i32 0, i32 1
  %6 = load %struct.context*, %struct.context** %si_cxstack, align 8
  %7 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %si_cxix = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %7, i32 0, i32 4
  %8 = load i32, i32* %si_cxix, align 8
  %dec = add nsw i32 %8, -1
  store i32 %dec, i32* %si_cxix, align 8
  %idxprom = sext i32 %8 to i64
  %arrayidx = getelementptr inbounds %struct.context, %struct.context* %6, i64 %idxprom
  store %struct.context* %arrayidx, %struct.context** %cx, align 8
  %9 = load %struct.sv**, %struct.sv*** @PL_stack_base, align 8
  %10 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u = getelementptr inbounds %struct.context, %struct.context* %10, i32 0, i32 0
  %cx_blk = bitcast %union.anon.16* %cx_u to %struct.block*
  %blku_oldsp = getelementptr inbounds %struct.block, %struct.block* %cx_blk, i32 0, i32 3
  %11 = load i32, i32* %blku_oldsp, align 4
  %idx.ext = sext i32 %11 to i64
  %add.ptr = getelementptr inbounds %struct.sv*, %struct.sv** %9, i64 %idx.ext
  store %struct.sv** %add.ptr, %struct.sv*** %newsp, align 8
  %12 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u1 = getelementptr inbounds %struct.context, %struct.context* %12, i32 0, i32 0
  %cx_blk2 = bitcast %union.anon.16* %cx_u1 to %struct.block*
  %blku_oldcop = getelementptr inbounds %struct.block, %struct.block* %cx_blk2, i32 0, i32 4
  %13 = load %struct.cop*, %struct.cop** %blku_oldcop, align 8
  store %struct.cop* %13, %struct.cop** @PL_curcop, align 8
  %14 = load i32*, i32** @PL_markstack, align 8
  %15 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u3 = getelementptr inbounds %struct.context, %struct.context* %15, i32 0, i32 0
  %cx_blk4 = bitcast %union.anon.16* %cx_u3 to %struct.block*
  %blku_oldmarksp = getelementptr inbounds %struct.block, %struct.block* %cx_blk4, i32 0, i32 5
  %16 = load i32, i32* %blku_oldmarksp, align 8
  %idx.ext5 = sext i32 %16 to i64
  %add.ptr6 = getelementptr inbounds i32, i32* %14, i64 %idx.ext5
  store i32* %add.ptr6, i32** @PL_markstack_ptr, align 8
  %17 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u7 = getelementptr inbounds %struct.context, %struct.context* %17, i32 0, i32 0
  %cx_blk8 = bitcast %union.anon.16* %cx_u7 to %struct.block*
  %blku_oldscopesp = getelementptr inbounds %struct.block, %struct.block* %cx_blk8, i32 0, i32 6
  %18 = load i32, i32* %blku_oldscopesp, align 4
  store i32 %18, i32* @PL_scopestack_ix, align 4
  %19 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u9 = getelementptr inbounds %struct.context, %struct.context* %19, i32 0, i32 0
  %cx_blk10 = bitcast %union.anon.16* %cx_u9 to %struct.block*
  %blku_oldpm = getelementptr inbounds %struct.block, %struct.block* %cx_blk10, i32 0, i32 7
  %20 = load %struct.pmop*, %struct.pmop** %blku_oldpm, align 8
  store %struct.pmop* %20, %struct.pmop** %newpm, align 8
  %21 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u11 = getelementptr inbounds %struct.context, %struct.context* %21, i32 0, i32 0
  %cx_blk12 = bitcast %union.anon.16* %cx_u11 to %struct.block*
  %blku_gimme = getelementptr inbounds %struct.block, %struct.block* %cx_blk12, i32 0, i32 1
  %22 = load i8, i8* %blku_gimme, align 1
  %conv = zext i8 %22 to i32
  store i32 %conv, i32* %gimme, align 4
  br label %do.body

do.body:                                          ; preds = %if.end
  %23 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u13 = getelementptr inbounds %struct.context, %struct.context* %23, i32 0, i32 0
  %cx_blk14 = bitcast %union.anon.16* %cx_u13 to %struct.block*
  %blku_u16 = getelementptr inbounds %struct.block, %struct.block* %cx_blk14, i32 0, i32 2
  %24 = load i16, i16* %blku_u16, align 2
  %conv15 = zext i16 %24 to i32
  %and = and i32 %conv15, 127
  %conv16 = trunc i32 %and to i8
  store i8 %conv16, i8* @PL_in_eval, align 1
  %25 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u17 = getelementptr inbounds %struct.context, %struct.context* %25, i32 0, i32 0
  %cx_blk18 = bitcast %union.anon.16* %cx_u17 to %struct.block*
  %blku_u1619 = getelementptr inbounds %struct.block, %struct.block* %cx_blk18, i32 0, i32 2
  %26 = load i16, i16* %blku_u1619, align 2
  %conv20 = zext i16 %26 to i32
  %shr = ashr i32 %conv20, 7
  store i32 %shr, i32* %optype, align 4
  %27 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u21 = getelementptr inbounds %struct.context, %struct.context* %27, i32 0, i32 0
  %cx_blk22 = bitcast %union.anon.16* %cx_u21 to %struct.block*
  %blk_u = getelementptr inbounds %struct.block, %struct.block* %cx_blk22, i32 0, i32 8
  %blku_eval = bitcast %union.anon.20* %blk_u to %struct.block_eval*
  %old_eval_root = getelementptr inbounds %struct.block_eval, %struct.block_eval* %blku_eval, i32 0, i32 2
  %28 = load %struct.op*, %struct.op** %old_eval_root, align 8
  store %struct.op* %28, %struct.op** @PL_eval_root, align 8
  %29 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u23 = getelementptr inbounds %struct.context, %struct.context* %29, i32 0, i32 0
  %cx_blk24 = bitcast %union.anon.16* %cx_u23 to %struct.block*
  %blk_u25 = getelementptr inbounds %struct.block, %struct.block* %cx_blk24, i32 0, i32 8
  %blku_eval26 = bitcast %union.anon.20* %blk_u25 to %struct.block_eval*
  %cur_text = getelementptr inbounds %struct.block_eval, %struct.block_eval* %blku_eval26, i32 0, i32 3
  %30 = load %struct.sv*, %struct.sv** %cur_text, align 8
  %tobool27 = icmp ne %struct.sv* %30, null
  br i1 %tobool27, label %land.lhs.true, label %if.end41

land.lhs.true:                                    ; preds = %do.body
  %31 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u28 = getelementptr inbounds %struct.context, %struct.context* %31, i32 0, i32 0
  %cx_blk29 = bitcast %union.anon.16* %cx_u28 to %struct.block*
  %blk_u30 = getelementptr inbounds %struct.block, %struct.block* %cx_blk29, i32 0, i32 8
  %blku_eval31 = bitcast %union.anon.20* %blk_u30 to %struct.block_eval*
  %cur_text32 = getelementptr inbounds %struct.block_eval, %struct.block_eval* %blku_eval31, i32 0, i32 3
  %32 = load %struct.sv*, %struct.sv** %cur_text32, align 8
  %sv_flags = getelementptr inbounds %struct.sv, %struct.sv* %32, i32 0, i32 2
  %33 = load i32, i32* %sv_flags, align 4
  %and33 = and i32 %33, 49152
  %cmp = icmp eq i32 %and33, 49152
  br i1 %cmp, label %if.then35, label %if.end41

if.then35:                                        ; preds = %land.lhs.true
  %34 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u36 = getelementptr inbounds %struct.context, %struct.context* %34, i32 0, i32 0
  %cx_blk37 = bitcast %union.anon.16* %cx_u36 to %struct.block*
  %blk_u38 = getelementptr inbounds %struct.block, %struct.block* %cx_blk37, i32 0, i32 8
  %blku_eval39 = bitcast %union.anon.20* %blk_u38 to %struct.block_eval*
  %cur_text40 = getelementptr inbounds %struct.block_eval, %struct.block_eval* %blku_eval39, i32 0, i32 3
  %35 = load %struct.sv*, %struct.sv** %cur_text40, align 8
  %36 = bitcast %struct.sv* %35 to i8*
  %37 = bitcast i8* %36 to %struct.sv*
  call void @S_SvREFCNT_dec_NN(%struct.sv* %37)
  br label %if.end41

if.end41:                                         ; preds = %if.then35, %land.lhs.true, %do.body
  %38 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u42 = getelementptr inbounds %struct.context, %struct.context* %38, i32 0, i32 0
  %cx_blk43 = bitcast %union.anon.16* %cx_u42 to %struct.block*
  %blk_u44 = getelementptr inbounds %struct.block, %struct.block* %cx_blk43, i32 0, i32 8
  %blku_eval45 = bitcast %union.anon.20* %blk_u44 to %struct.block_eval*
  %old_namesv = getelementptr inbounds %struct.block_eval, %struct.block_eval* %blku_eval45, i32 0, i32 1
  %39 = load %struct.sv*, %struct.sv** %old_namesv, align 8
  %tobool46 = icmp ne %struct.sv* %39, null
  br i1 %tobool46, label %if.then47, label %if.end53

if.then47:                                        ; preds = %if.end41
  %40 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u48 = getelementptr inbounds %struct.context, %struct.context* %40, i32 0, i32 0
  %cx_blk49 = bitcast %union.anon.16* %cx_u48 to %struct.block*
  %blk_u50 = getelementptr inbounds %struct.block, %struct.block* %cx_blk49, i32 0, i32 8
  %blku_eval51 = bitcast %union.anon.20* %blk_u50 to %struct.block_eval*
  %old_namesv52 = getelementptr inbounds %struct.block_eval, %struct.block_eval* %blku_eval51, i32 0, i32 1
  %41 = load %struct.sv*, %struct.sv** %old_namesv52, align 8
  %call = call %struct.sv* @Perl_sv_2mortal(%struct.sv* %41)
  br label %if.end53

if.end53:                                         ; preds = %if.then47, %if.end41
  br label %do.end

do.end:                                           ; preds = %if.end53
  %42 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u54 = getelementptr inbounds %struct.context, %struct.context* %42, i32 0, i32 0
  %cx_blk55 = bitcast %union.anon.16* %cx_u54 to %struct.block*
  %blk_u56 = getelementptr inbounds %struct.block, %struct.block* %cx_blk55, i32 0, i32 8
  %blku_eval57 = bitcast %union.anon.20* %blk_u56 to %struct.block_eval*
  %old_namesv58 = getelementptr inbounds %struct.block_eval, %struct.block_eval* %blku_eval57, i32 0, i32 1
  %43 = load %struct.sv*, %struct.sv** %old_namesv58, align 8
  store %struct.sv* %43, %struct.sv** %namesv, align 8
  %44 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u59 = getelementptr inbounds %struct.context, %struct.context* %44, i32 0, i32 0
  %cx_blk60 = bitcast %union.anon.16* %cx_u59 to %struct.block*
  %blk_u61 = getelementptr inbounds %struct.block, %struct.block* %cx_blk60, i32 0, i32 8
  %blku_eval62 = bitcast %union.anon.20* %blk_u61 to %struct.block_eval*
  %retop63 = getelementptr inbounds %struct.block_eval, %struct.block_eval* %blku_eval62, i32 0, i32 0
  %45 = load %struct.op*, %struct.op** %retop63, align 8
  store %struct.op* %45, %struct.op** %retop, align 8
  %46 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u64 = getelementptr inbounds %struct.context, %struct.context* %46, i32 0, i32 0
  %cx_blk65 = bitcast %union.anon.16* %cx_u64 to %struct.block*
  %blk_u66 = getelementptr inbounds %struct.block, %struct.block* %cx_blk65, i32 0, i32 8
  %blku_eval67 = bitcast %union.anon.20* %blk_u66 to %struct.block_eval*
  %cv = getelementptr inbounds %struct.block_eval, %struct.block_eval* %blku_eval67, i32 0, i32 4
  %47 = load %struct.cv*, %struct.cv** %cv, align 8
  store %struct.cv* %47, %struct.cv** %evalcv, align 8
  %48 = load i32, i32* %gimme, align 4
  %cmp68 = icmp eq i32 %48, 1
  br i1 %cmp68, label %cond.true70, label %cond.false71

cond.true70:                                      ; preds = %do.end
  %49 = load %struct.sv**, %struct.sv*** %sp, align 8
  br label %cond.end

cond.false71:                                     ; preds = %do.end
  %50 = load %struct.sv**, %struct.sv*** %newsp, align 8
  br label %cond.end

cond.end:                                         ; preds = %cond.false71, %cond.true70
  %cond = phi %struct.sv** [ %49, %cond.true70 ], [ %50, %cond.false71 ]
  %51 = load %struct.sv**, %struct.sv*** %sp, align 8
  %52 = load %struct.sv**, %struct.sv*** %newsp, align 8
  %53 = load i32, i32* %gimme, align 4
  %call72 = call %struct.sv** @S_leave_common(%struct.sv** %cond, %struct.sv** %51, %struct.sv** %52, i32 %53, i32 524288, i1 zeroext false)
  store %struct.sv** %call72, %struct.sv*** %sp, align 8
  %54 = load %struct.pmop*, %struct.pmop** %newpm, align 8
  store %struct.pmop* %54, %struct.pmop** @PL_curpm, align 8
  %55 = load %struct.cv*, %struct.cv** %evalcv, align 8
  %call73 = call i32* @S_CvDEPTHp(%struct.cv* %55)
  store i32 0, i32* %call73, align 4
  %56 = load i32, i32* %optype, align 4
  %cmp74 = icmp eq i32 %56, 339
  br i1 %cmp74, label %land.lhs.true76, label %if.else

land.lhs.true76:                                  ; preds = %cond.end
  %57 = load i32, i32* %gimme, align 4
  %cmp77 = icmp eq i32 %57, 2
  br i1 %cmp77, label %cond.true79, label %cond.false152

cond.true79:                                      ; preds = %land.lhs.true76
  %58 = load %struct.sv**, %struct.sv*** %sp, align 8
  %59 = load %struct.sv*, %struct.sv** %58, align 8
  %tobool80 = icmp ne %struct.sv* %59, null
  br i1 %tobool80, label %cond.true81, label %cond.false82

cond.true81:                                      ; preds = %cond.true79
  br i1 true, label %land.lhs.true83, label %if.then155

cond.false82:                                     ; preds = %cond.true79
  br i1 false, label %land.lhs.true83, label %if.then155

land.lhs.true83:                                  ; preds = %cond.false82, %cond.true81
  %60 = load %struct.sv**, %struct.sv*** %sp, align 8
  %61 = load %struct.sv*, %struct.sv** %60, align 8
  %sv_flags84 = getelementptr inbounds %struct.sv, %struct.sv* %61, i32 0, i32 2
  %62 = load i32, i32* %sv_flags84, align 4
  %and85 = and i32 %62, 2097152
  %tobool86 = icmp ne i32 %and85, 0
  br i1 %tobool86, label %cond.true87, label %cond.false88

cond.true87:                                      ; preds = %land.lhs.true83
  br i1 true, label %cond.true89, label %cond.false92

cond.false88:                                     ; preds = %land.lhs.true83
  br i1 false, label %cond.true89, label %cond.false92

cond.true89:                                      ; preds = %cond.false88, %cond.true87
  %63 = load %struct.sv**, %struct.sv*** %sp, align 8
  %64 = load %struct.sv*, %struct.sv** %63, align 8
  %call90 = call zeroext i1 @Perl_sv_2bool_flags(%struct.sv* %64, i32 2)
  br i1 %call90, label %if.else, label %if.then155

cond.false92:                                     ; preds = %cond.false88, %cond.true87
  %65 = load %struct.sv**, %struct.sv*** %sp, align 8
  %66 = load %struct.sv*, %struct.sv** %65, align 8
  %sv_flags93 = getelementptr inbounds %struct.sv, %struct.sv* %66, i32 0, i32 2
  %67 = load i32, i32* %sv_flags93, align 4
  %and94 = and i32 %67, 65280
  %tobool95 = icmp ne i32 %and94, 0
  br i1 %tobool95, label %cond.false106, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %cond.false92
  %68 = load %struct.sv**, %struct.sv*** %sp, align 8
  %69 = load %struct.sv*, %struct.sv** %68, align 8
  %sv_flags96 = getelementptr inbounds %struct.sv, %struct.sv* %69, i32 0, i32 2
  %70 = load i32, i32* %sv_flags96, align 4
  %and97 = and i32 %70, 255
  %cmp98 = icmp eq i32 %and97, 8
  br i1 %cmp98, label %cond.false106, label %lor.lhs.false100

lor.lhs.false100:                                 ; preds = %lor.lhs.false
  %71 = load %struct.sv**, %struct.sv*** %sp, align 8
  %72 = load %struct.sv*, %struct.sv** %71, align 8
  %sv_flags101 = getelementptr inbounds %struct.sv, %struct.sv* %72, i32 0, i32 2
  %73 = load i32, i32* %sv_flags101, align 4
  %and102 = and i32 %73, 16826623
  %cmp103 = icmp eq i32 %and102, 16777226
  br i1 %cmp103, label %cond.false106, label %cond.true105

cond.true105:                                     ; preds = %lor.lhs.false100
  br i1 false, label %if.else, label %if.then155

cond.false106:                                    ; preds = %lor.lhs.false100, %lor.lhs.false, %cond.false92
  %74 = load %struct.sv**, %struct.sv*** %sp, align 8
  %75 = load %struct.sv*, %struct.sv** %74, align 8
  %sv_flags107 = getelementptr inbounds %struct.sv, %struct.sv* %75, i32 0, i32 2
  %76 = load i32, i32* %sv_flags107, align 4
  %and108 = and i32 %76, 1024
  %tobool109 = icmp ne i32 %and108, 0
  br i1 %tobool109, label %cond.true110, label %cond.false124

cond.true110:                                     ; preds = %cond.false106
  %77 = load %struct.sv**, %struct.sv*** %sp, align 8
  %78 = load %struct.sv*, %struct.sv** %77, align 8
  %sv_any = getelementptr inbounds %struct.sv, %struct.sv* %78, i32 0, i32 0
  %79 = load i8*, i8** %sv_any, align 8
  %80 = bitcast i8* %79 to %struct.xpv*
  %tobool111 = icmp ne %struct.xpv* %80, null
  br i1 %tobool111, label %land.lhs.true112, label %if.then155

land.lhs.true112:                                 ; preds = %cond.true110
  %81 = load %struct.sv**, %struct.sv*** %sp, align 8
  %82 = load %struct.sv*, %struct.sv** %81, align 8
  %sv_any113 = getelementptr inbounds %struct.sv, %struct.sv* %82, i32 0, i32 0
  %83 = load i8*, i8** %sv_any113, align 8
  %84 = bitcast i8* %83 to %struct.xpv*
  %xpv_cur = getelementptr inbounds %struct.xpv, %struct.xpv* %84, i32 0, i32 2
  %85 = load i64, i64* %xpv_cur, align 8
  %cmp114 = icmp ugt i64 %85, 1
  br i1 %cmp114, label %if.else, label %lor.lhs.false116

lor.lhs.false116:                                 ; preds = %land.lhs.true112
  %86 = load %struct.sv**, %struct.sv*** %sp, align 8
  %87 = load %struct.sv*, %struct.sv** %86, align 8
  %sv_any117 = getelementptr inbounds %struct.sv, %struct.sv* %87, i32 0, i32 0
  %88 = load i8*, i8** %sv_any117, align 8
  %89 = bitcast i8* %88 to %struct.xpv*
  %xpv_cur118 = getelementptr inbounds %struct.xpv, %struct.xpv* %89, i32 0, i32 2
  %90 = load i64, i64* %xpv_cur118, align 8
  %tobool119 = icmp ne i64 %90, 0
  br i1 %tobool119, label %land.lhs.true120, label %if.then155

land.lhs.true120:                                 ; preds = %lor.lhs.false116
  %91 = load %struct.sv**, %struct.sv*** %sp, align 8
  %92 = load %struct.sv*, %struct.sv** %91, align 8
  %sv_u = getelementptr inbounds %struct.sv, %struct.sv* %92, i32 0, i32 3
  %svu_pv = bitcast %union.anon* %sv_u to i8**
  %93 = load i8*, i8** %svu_pv, align 8
  %94 = load i8, i8* %93, align 1
  %conv121 = sext i8 %94 to i32
  %cmp122 = icmp ne i32 %conv121, 48
  br i1 %cmp122, label %if.else, label %if.then155

cond.false124:                                    ; preds = %cond.false106
  %95 = load %struct.sv**, %struct.sv*** %sp, align 8
  %96 = load %struct.sv*, %struct.sv** %95, align 8
  %sv_flags125 = getelementptr inbounds %struct.sv, %struct.sv* %96, i32 0, i32 2
  %97 = load i32, i32* %sv_flags125, align 4
  %and126 = and i32 %97, 768
  %tobool127 = icmp ne i32 %and126, 0
  br i1 %tobool127, label %cond.true128, label %cond.false149

cond.true128:                                     ; preds = %cond.false124
  %98 = load %struct.sv**, %struct.sv*** %sp, align 8
  %99 = load %struct.sv*, %struct.sv** %98, align 8
  %sv_flags129 = getelementptr inbounds %struct.sv, %struct.sv* %99, i32 0, i32 2
  %100 = load i32, i32* %sv_flags129, align 4
  %and130 = and i32 %100, 256
  %tobool131 = icmp ne i32 %and130, 0
  br i1 %tobool131, label %land.lhs.true132, label %lor.lhs.false136

land.lhs.true132:                                 ; preds = %cond.true128
  %101 = load %struct.sv**, %struct.sv*** %sp, align 8
  %102 = load %struct.sv*, %struct.sv** %101, align 8
  %sv_any133 = getelementptr inbounds %struct.sv, %struct.sv* %102, i32 0, i32 0
  %103 = load i8*, i8** %sv_any133, align 8
  %104 = bitcast i8* %103 to %struct.xpviv*
  %xiv_u = getelementptr inbounds %struct.xpviv, %struct.xpviv* %104, i32 0, i32 4
  %xivu_iv = bitcast %union._xivu* %xiv_u to i64*
  %105 = load i64, i64* %xivu_iv, align 8
  %cmp134 = icmp ne i64 %105, 0
  br i1 %cmp134, label %if.else, label %lor.lhs.false136

lor.lhs.false136:                                 ; preds = %land.lhs.true132, %cond.true128
  %106 = load %struct.sv**, %struct.sv*** %sp, align 8
  %107 = load %struct.sv*, %struct.sv** %106, align 8
  %sv_flags137 = getelementptr inbounds %struct.sv, %struct.sv* %107, i32 0, i32 2
  %108 = load i32, i32* %sv_flags137, align 4
  %and138 = and i32 %108, 512
  %tobool139 = icmp ne i32 %and138, 0
  br i1 %tobool139, label %land.lhs.true140, label %if.then155

land.lhs.true140:                                 ; preds = %lor.lhs.false136
  %109 = load %struct.sv**, %struct.sv*** %sp, align 8
  %110 = load %struct.sv*, %struct.sv** %109, align 8
  %sv_any141 = getelementptr inbounds %struct.sv, %struct.sv* %110, i32 0, i32 0
  %111 = load i8*, i8** %sv_any141, align 8
  %112 = bitcast i8* %111 to %struct.xpvnv*
  %xnv_u = getelementptr inbounds %struct.xpvnv, %struct.xpvnv* %112, i32 0, i32 5
  %xnv_nv = bitcast %union._xnvu* %xnv_u to double*
  %113 = load double, double* %xnv_nv, align 8
  %cmp142 = fcmp uno double %113, %113
  br i1 %cmp142, label %if.else, label %lor.lhs.false143

lor.lhs.false143:                                 ; preds = %land.lhs.true140
  %114 = load %struct.sv**, %struct.sv*** %sp, align 8
  %115 = load %struct.sv*, %struct.sv** %114, align 8
  %sv_any144 = getelementptr inbounds %struct.sv, %struct.sv* %115, i32 0, i32 0
  %116 = load i8*, i8** %sv_any144, align 8
  %117 = bitcast i8* %116 to %struct.xpvnv*
  %xnv_u145 = getelementptr inbounds %struct.xpvnv, %struct.xpvnv* %117, i32 0, i32 5
  %xnv_nv146 = bitcast %union._xnvu* %xnv_u145 to double*
  %118 = load double, double* %xnv_nv146, align 8
  %cmp147 = fcmp une double %118, 0.000000e+00
  br i1 %cmp147, label %if.else, label %if.then155

cond.false149:                                    ; preds = %cond.false124
  %119 = load %struct.sv**, %struct.sv*** %sp, align 8
  %120 = load %struct.sv*, %struct.sv** %119, align 8
  %call150 = call zeroext i1 @Perl_sv_2bool_flags(%struct.sv* %120, i32 0)
  br i1 %call150, label %if.else, label %if.then155

cond.false152:                                    ; preds = %land.lhs.true76
  %121 = load %struct.sv**, %struct.sv*** %sp, align 8
  %122 = load %struct.sv**, %struct.sv*** %newsp, align 8
  %cmp153 = icmp ugt %struct.sv** %121, %122
  br i1 %cmp153, label %if.else, label %if.then155

if.then155:                                       ; preds = %cond.false152, %cond.false149, %lor.lhs.false143, %lor.lhs.false136, %land.lhs.true120, %lor.lhs.false116, %cond.true110, %cond.true105, %cond.true89, %cond.false82, %cond.true81
  %123 = load %struct.gv*, %struct.gv** @PL_incgv, align 8
  %sv_u156 = getelementptr inbounds %struct.gv, %struct.gv* %123, i32 0, i32 3
  %svu_gp = bitcast %union.anon.4* %sv_u156 to %struct.gp**
  %124 = load %struct.gp*, %struct.gp** %svu_gp, align 8
  %add.ptr157 = getelementptr inbounds %struct.gp, %struct.gp* %124, i64 0
  %gp_hv = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr157, i32 0, i32 5
  %125 = load %struct.hv*, %struct.hv** %gp_hv, align 8
  %tobool158 = icmp ne %struct.hv* %125, null
  br i1 %tobool158, label %cond.true159, label %cond.false164

cond.true159:                                     ; preds = %if.then155
  %126 = load %struct.gv*, %struct.gv** @PL_incgv, align 8
  %sv_u160 = getelementptr inbounds %struct.gv, %struct.gv* %126, i32 0, i32 3
  %svu_gp161 = bitcast %union.anon.4* %sv_u160 to %struct.gp**
  %127 = load %struct.gp*, %struct.gp** %svu_gp161, align 8
  %add.ptr162 = getelementptr inbounds %struct.gp, %struct.gp* %127, i64 0
  %gp_hv163 = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr162, i32 0, i32 5
  %128 = load %struct.hv*, %struct.hv** %gp_hv163, align 8
  br label %cond.end170

cond.false164:                                    ; preds = %if.then155
  %129 = load %struct.gv*, %struct.gv** @PL_incgv, align 8
  %call165 = call %struct.gv* @Perl_gv_add_by_type(%struct.gv* %129, i32 12)
  %sv_u166 = getelementptr inbounds %struct.gv, %struct.gv* %call165, i32 0, i32 3
  %svu_gp167 = bitcast %union.anon.4* %sv_u166 to %struct.gp**
  %130 = load %struct.gp*, %struct.gp** %svu_gp167, align 8
  %add.ptr168 = getelementptr inbounds %struct.gp, %struct.gp* %130, i64 0
  %gp_hv169 = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr168, i32 0, i32 5
  %131 = load %struct.hv*, %struct.hv** %gp_hv169, align 8
  br label %cond.end170

cond.end170:                                      ; preds = %cond.false164, %cond.true159
  %cond171 = phi %struct.hv* [ %128, %cond.true159 ], [ %131, %cond.false164 ]
  %132 = load %struct.sv*, %struct.sv** %namesv, align 8
  %sv_u172 = getelementptr inbounds %struct.sv, %struct.sv* %132, i32 0, i32 3
  %svu_pv173 = bitcast %union.anon* %sv_u172 to i8**
  %133 = load i8*, i8** %svu_pv173, align 8
  %add.ptr174 = getelementptr inbounds i8, i8* %133, i64 0
  %134 = load %struct.sv*, %struct.sv** %namesv, align 8
  %sv_flags175 = getelementptr inbounds %struct.sv, %struct.sv* %134, i32 0, i32 2
  %135 = load i32, i32* %sv_flags175, align 4
  %and176 = and i32 %135, 536870912
  %tobool177 = icmp ne i32 %and176, 0
  br i1 %tobool177, label %cond.true178, label %cond.false182

cond.true178:                                     ; preds = %cond.end170
  %136 = load %struct.sv*, %struct.sv** %namesv, align 8
  %sv_any179 = getelementptr inbounds %struct.sv, %struct.sv* %136, i32 0, i32 0
  %137 = load i8*, i8** %sv_any179, align 8
  %138 = bitcast i8* %137 to %struct.xpv*
  %xpv_cur180 = getelementptr inbounds %struct.xpv, %struct.xpv* %138, i32 0, i32 2
  %139 = load i64, i64* %xpv_cur180, align 8
  %conv181 = trunc i64 %139 to i32
  %sub = sub nsw i32 0, %conv181
  br label %cond.end186

cond.false182:                                    ; preds = %cond.end170
  %140 = load %struct.sv*, %struct.sv** %namesv, align 8
  %sv_any183 = getelementptr inbounds %struct.sv, %struct.sv* %140, i32 0, i32 0
  %141 = load i8*, i8** %sv_any183, align 8
  %142 = bitcast i8* %141 to %struct.xpv*
  %xpv_cur184 = getelementptr inbounds %struct.xpv, %struct.xpv* %142, i32 0, i32 2
  %143 = load i64, i64* %xpv_cur184, align 8
  %conv185 = trunc i64 %143 to i32
  br label %cond.end186

cond.end186:                                      ; preds = %cond.false182, %cond.true178
  %cond187 = phi i32 [ %sub, %cond.true178 ], [ %conv185, %cond.false182 ]
  %call188 = call i8* @Perl_hv_common_key_len(%struct.hv* %cond171, i8* %add.ptr174, i32 %cond187, i32 68, %struct.sv* null, i32 0)
  %144 = bitcast i8* %call188 to %struct.sv*
  %145 = load %struct.sv*, %struct.sv** %namesv, align 8
  %146 = bitcast %struct.sv* %145 to i8*
  %call189 = call %struct.op* (i8*, ...) @Perl_die(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.28, i64 0, i64 0), i8* %146)
  br label %if.end220

if.else:                                          ; preds = %cond.false152, %cond.false149, %lor.lhs.false143, %land.lhs.true140, %land.lhs.true132, %land.lhs.true120, %land.lhs.true112, %cond.true105, %cond.true89, %cond.end
  call void @Perl_pop_scope()
  %147 = load i8, i8* %save_flags, align 1
  %conv190 = zext i8 %147 to i32
  %and191 = and i32 %conv190, 128
  %tobool192 = icmp ne i32 %and191, 0
  br i1 %tobool192, label %if.end219, label %if.then193

if.then193:                                       ; preds = %if.else
  br label %do.body194

do.body194:                                       ; preds = %if.then193
  %148 = load %struct.gv*, %struct.gv** @PL_errgv, align 8
  %sv_u195 = getelementptr inbounds %struct.gv, %struct.gv* %148, i32 0, i32 3
  %svu_gp196 = bitcast %union.anon.4* %sv_u195 to %struct.gp**
  %149 = load %struct.gp*, %struct.gp** %svu_gp196, align 8
  %add.ptr197 = getelementptr inbounds %struct.gp, %struct.gp* %149, i64 0
  %gp_sv = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr197, i32 0, i32 0
  store %struct.sv** %gp_sv, %struct.sv*** %svp, align 8
  %150 = load %struct.sv**, %struct.sv*** %svp, align 8
  %151 = load %struct.sv*, %struct.sv** %150, align 8
  %tobool198 = icmp ne %struct.sv* %151, null
  br i1 %tobool198, label %if.else200, label %if.then199

if.then199:                                       ; preds = %do.body194
  br label %clresv_newemptypv

if.else200:                                       ; preds = %do.body194
  %152 = load %struct.sv**, %struct.sv*** %svp, align 8
  %153 = load %struct.sv*, %struct.sv** %152, align 8
  %sv_flags201 = getelementptr inbounds %struct.sv, %struct.sv* %153, i32 0, i32 2
  %154 = load i32, i32* %sv_flags201, align 4
  %and202 = and i32 %154, 134283264
  %tobool203 = icmp ne i32 %and202, 0
  br i1 %tobool203, label %if.then204, label %if.else206

if.then204:                                       ; preds = %if.else200
  %155 = load %struct.sv**, %struct.sv*** %svp, align 8
  %156 = load %struct.sv*, %struct.sv** %155, align 8
  %157 = bitcast %struct.sv* %156 to i8*
  %158 = bitcast i8* %157 to %struct.sv*
  call void @S_SvREFCNT_dec_NN(%struct.sv* %158)
  br label %clresv_newemptypv

clresv_newemptypv:                                ; preds = %if.then204, %if.then199
  %call205 = call %struct.sv* @Perl_newSVpvn(i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.8, i64 0, i64 0), i64 0)
  %159 = load %struct.sv**, %struct.sv*** %svp, align 8
  store %struct.sv* %call205, %struct.sv** %159, align 8
  br label %if.end216

if.else206:                                       ; preds = %if.else200
  %160 = load %struct.sv**, %struct.sv*** %svp, align 8
  %161 = load %struct.sv*, %struct.sv** %160, align 8
  store %struct.sv* %161, %struct.sv** %errsv, align 8
  %162 = load %struct.sv*, %struct.sv** %errsv, align 8
  call void @Perl_sv_setpvn(%struct.sv* %162, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.8, i64 0, i64 0), i64 0)
  %163 = load %struct.sv*, %struct.sv** %errsv, align 8
  %sv_flags207 = getelementptr inbounds %struct.sv, %struct.sv* %163, i32 0, i32 2
  %164 = load i32, i32* %sv_flags207, align 4
  %and208 = and i32 %164, 1610547455
  store i32 %and208, i32* %sv_flags207, align 4
  %165 = load %struct.sv*, %struct.sv** %errsv, align 8
  %sv_flags209 = getelementptr inbounds %struct.sv, %struct.sv* %165, i32 0, i32 2
  %166 = load i32, i32* %sv_flags209, align 4
  %or = or i32 %166, 17408
  store i32 %or, i32* %sv_flags209, align 4
  %167 = load %struct.sv*, %struct.sv** %errsv, align 8
  %sv_flags210 = getelementptr inbounds %struct.sv, %struct.sv* %167, i32 0, i32 2
  %168 = load i32, i32* %sv_flags210, align 4
  %and211 = and i32 %168, 14680064
  %tobool212 = icmp ne i32 %and211, 0
  br i1 %tobool212, label %if.then213, label %if.end215

if.then213:                                       ; preds = %if.else206
  %169 = load %struct.sv*, %struct.sv** %errsv, align 8
  %call214 = call i32 @Perl_mg_free(%struct.sv* %169)
  br label %if.end215

if.end215:                                        ; preds = %if.then213, %if.else206
  br label %if.end216

if.end216:                                        ; preds = %if.end215, %clresv_newemptypv
  br label %if.end217

if.end217:                                        ; preds = %if.end216
  br label %do.end218

do.end218:                                        ; preds = %if.end217
  br label %if.end219

if.end219:                                        ; preds = %do.end218, %if.else
  br label %if.end220

if.end220:                                        ; preds = %if.end219, %cond.end186
  %170 = load %struct.sv**, %struct.sv*** %sp, align 8
  store %struct.sv** %170, %struct.sv*** @PL_stack_sp, align 8
  %171 = load %struct.op*, %struct.op** %retop, align 8
  ret %struct.op* %171
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @Perl_delete_eval_scope() #0 {
entry:
  %newsp = alloca %struct.sv**, align 8
  %newpm = alloca %struct.pmop*, align 8
  %gimme = alloca i32, align 4
  %cx = alloca %struct.context*, align 8
  %optype = alloca i32, align 4
  %0 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %si_cxstack = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %0, i32 0, i32 1
  %1 = load %struct.context*, %struct.context** %si_cxstack, align 8
  %2 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %si_cxix = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %2, i32 0, i32 4
  %3 = load i32, i32* %si_cxix, align 8
  %dec = add nsw i32 %3, -1
  store i32 %dec, i32* %si_cxix, align 8
  %idxprom = sext i32 %3 to i64
  %arrayidx = getelementptr inbounds %struct.context, %struct.context* %1, i64 %idxprom
  store %struct.context* %arrayidx, %struct.context** %cx, align 8
  %4 = load %struct.sv**, %struct.sv*** @PL_stack_base, align 8
  %5 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u = getelementptr inbounds %struct.context, %struct.context* %5, i32 0, i32 0
  %cx_blk = bitcast %union.anon.16* %cx_u to %struct.block*
  %blku_oldsp = getelementptr inbounds %struct.block, %struct.block* %cx_blk, i32 0, i32 3
  %6 = load i32, i32* %blku_oldsp, align 4
  %idx.ext = sext i32 %6 to i64
  %add.ptr = getelementptr inbounds %struct.sv*, %struct.sv** %4, i64 %idx.ext
  store %struct.sv** %add.ptr, %struct.sv*** %newsp, align 8
  %7 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u1 = getelementptr inbounds %struct.context, %struct.context* %7, i32 0, i32 0
  %cx_blk2 = bitcast %union.anon.16* %cx_u1 to %struct.block*
  %blku_oldcop = getelementptr inbounds %struct.block, %struct.block* %cx_blk2, i32 0, i32 4
  %8 = load %struct.cop*, %struct.cop** %blku_oldcop, align 8
  store %struct.cop* %8, %struct.cop** @PL_curcop, align 8
  %9 = load i32*, i32** @PL_markstack, align 8
  %10 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u3 = getelementptr inbounds %struct.context, %struct.context* %10, i32 0, i32 0
  %cx_blk4 = bitcast %union.anon.16* %cx_u3 to %struct.block*
  %blku_oldmarksp = getelementptr inbounds %struct.block, %struct.block* %cx_blk4, i32 0, i32 5
  %11 = load i32, i32* %blku_oldmarksp, align 8
  %idx.ext5 = sext i32 %11 to i64
  %add.ptr6 = getelementptr inbounds i32, i32* %9, i64 %idx.ext5
  store i32* %add.ptr6, i32** @PL_markstack_ptr, align 8
  %12 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u7 = getelementptr inbounds %struct.context, %struct.context* %12, i32 0, i32 0
  %cx_blk8 = bitcast %union.anon.16* %cx_u7 to %struct.block*
  %blku_oldscopesp = getelementptr inbounds %struct.block, %struct.block* %cx_blk8, i32 0, i32 6
  %13 = load i32, i32* %blku_oldscopesp, align 4
  store i32 %13, i32* @PL_scopestack_ix, align 4
  %14 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u9 = getelementptr inbounds %struct.context, %struct.context* %14, i32 0, i32 0
  %cx_blk10 = bitcast %union.anon.16* %cx_u9 to %struct.block*
  %blku_oldpm = getelementptr inbounds %struct.block, %struct.block* %cx_blk10, i32 0, i32 7
  %15 = load %struct.pmop*, %struct.pmop** %blku_oldpm, align 8
  store %struct.pmop* %15, %struct.pmop** %newpm, align 8
  %16 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u11 = getelementptr inbounds %struct.context, %struct.context* %16, i32 0, i32 0
  %cx_blk12 = bitcast %union.anon.16* %cx_u11 to %struct.block*
  %blku_gimme = getelementptr inbounds %struct.block, %struct.block* %cx_blk12, i32 0, i32 1
  %17 = load i8, i8* %blku_gimme, align 1
  %conv = zext i8 %17 to i32
  store i32 %conv, i32* %gimme, align 4
  br label %do.body

do.body:                                          ; preds = %entry
  %18 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u13 = getelementptr inbounds %struct.context, %struct.context* %18, i32 0, i32 0
  %cx_blk14 = bitcast %union.anon.16* %cx_u13 to %struct.block*
  %blku_u16 = getelementptr inbounds %struct.block, %struct.block* %cx_blk14, i32 0, i32 2
  %19 = load i16, i16* %blku_u16, align 2
  %conv15 = zext i16 %19 to i32
  %and = and i32 %conv15, 127
  %conv16 = trunc i32 %and to i8
  store i8 %conv16, i8* @PL_in_eval, align 1
  %20 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u17 = getelementptr inbounds %struct.context, %struct.context* %20, i32 0, i32 0
  %cx_blk18 = bitcast %union.anon.16* %cx_u17 to %struct.block*
  %blku_u1619 = getelementptr inbounds %struct.block, %struct.block* %cx_blk18, i32 0, i32 2
  %21 = load i16, i16* %blku_u1619, align 2
  %conv20 = zext i16 %21 to i32
  %shr = ashr i32 %conv20, 7
  store i32 %shr, i32* %optype, align 4
  %22 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u21 = getelementptr inbounds %struct.context, %struct.context* %22, i32 0, i32 0
  %cx_blk22 = bitcast %union.anon.16* %cx_u21 to %struct.block*
  %blk_u = getelementptr inbounds %struct.block, %struct.block* %cx_blk22, i32 0, i32 8
  %blku_eval = bitcast %union.anon.20* %blk_u to %struct.block_eval*
  %old_eval_root = getelementptr inbounds %struct.block_eval, %struct.block_eval* %blku_eval, i32 0, i32 2
  %23 = load %struct.op*, %struct.op** %old_eval_root, align 8
  store %struct.op* %23, %struct.op** @PL_eval_root, align 8
  %24 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u23 = getelementptr inbounds %struct.context, %struct.context* %24, i32 0, i32 0
  %cx_blk24 = bitcast %union.anon.16* %cx_u23 to %struct.block*
  %blk_u25 = getelementptr inbounds %struct.block, %struct.block* %cx_blk24, i32 0, i32 8
  %blku_eval26 = bitcast %union.anon.20* %blk_u25 to %struct.block_eval*
  %cur_text = getelementptr inbounds %struct.block_eval, %struct.block_eval* %blku_eval26, i32 0, i32 3
  %25 = load %struct.sv*, %struct.sv** %cur_text, align 8
  %tobool = icmp ne %struct.sv* %25, null
  br i1 %tobool, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %do.body
  %26 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u27 = getelementptr inbounds %struct.context, %struct.context* %26, i32 0, i32 0
  %cx_blk28 = bitcast %union.anon.16* %cx_u27 to %struct.block*
  %blk_u29 = getelementptr inbounds %struct.block, %struct.block* %cx_blk28, i32 0, i32 8
  %blku_eval30 = bitcast %union.anon.20* %blk_u29 to %struct.block_eval*
  %cur_text31 = getelementptr inbounds %struct.block_eval, %struct.block_eval* %blku_eval30, i32 0, i32 3
  %27 = load %struct.sv*, %struct.sv** %cur_text31, align 8
  %sv_flags = getelementptr inbounds %struct.sv, %struct.sv* %27, i32 0, i32 2
  %28 = load i32, i32* %sv_flags, align 4
  %and32 = and i32 %28, 49152
  %cmp = icmp eq i32 %and32, 49152
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true
  %29 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u34 = getelementptr inbounds %struct.context, %struct.context* %29, i32 0, i32 0
  %cx_blk35 = bitcast %union.anon.16* %cx_u34 to %struct.block*
  %blk_u36 = getelementptr inbounds %struct.block, %struct.block* %cx_blk35, i32 0, i32 8
  %blku_eval37 = bitcast %union.anon.20* %blk_u36 to %struct.block_eval*
  %cur_text38 = getelementptr inbounds %struct.block_eval, %struct.block_eval* %blku_eval37, i32 0, i32 3
  %30 = load %struct.sv*, %struct.sv** %cur_text38, align 8
  %31 = bitcast %struct.sv* %30 to i8*
  %32 = bitcast i8* %31 to %struct.sv*
  call void @S_SvREFCNT_dec_NN(%struct.sv* %32)
  br label %if.end

if.end:                                           ; preds = %if.then, %land.lhs.true, %do.body
  %33 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u39 = getelementptr inbounds %struct.context, %struct.context* %33, i32 0, i32 0
  %cx_blk40 = bitcast %union.anon.16* %cx_u39 to %struct.block*
  %blk_u41 = getelementptr inbounds %struct.block, %struct.block* %cx_blk40, i32 0, i32 8
  %blku_eval42 = bitcast %union.anon.20* %blk_u41 to %struct.block_eval*
  %old_namesv = getelementptr inbounds %struct.block_eval, %struct.block_eval* %blku_eval42, i32 0, i32 1
  %34 = load %struct.sv*, %struct.sv** %old_namesv, align 8
  %tobool43 = icmp ne %struct.sv* %34, null
  br i1 %tobool43, label %if.then44, label %if.end50

if.then44:                                        ; preds = %if.end
  %35 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u45 = getelementptr inbounds %struct.context, %struct.context* %35, i32 0, i32 0
  %cx_blk46 = bitcast %union.anon.16* %cx_u45 to %struct.block*
  %blk_u47 = getelementptr inbounds %struct.block, %struct.block* %cx_blk46, i32 0, i32 8
  %blku_eval48 = bitcast %union.anon.20* %blk_u47 to %struct.block_eval*
  %old_namesv49 = getelementptr inbounds %struct.block_eval, %struct.block_eval* %blku_eval48, i32 0, i32 1
  %36 = load %struct.sv*, %struct.sv** %old_namesv49, align 8
  %call = call %struct.sv* @Perl_sv_2mortal(%struct.sv* %36)
  br label %if.end50

if.end50:                                         ; preds = %if.then44, %if.end
  br label %do.end

do.end:                                           ; preds = %if.end50
  %37 = load %struct.pmop*, %struct.pmop** %newpm, align 8
  store %struct.pmop* %37, %struct.pmop** @PL_curpm, align 8
  call void @Perl_pop_scope()
  %38 = load %struct.sv**, %struct.sv*** %newsp, align 8
  %39 = load i32, i32* %gimme, align 4
  %40 = load i32, i32* %optype, align 4
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.context* @Perl_create_eval_scope(i32 %flags) #0 {
entry:
  %flags.addr = alloca i32, align 4
  %cx = alloca %struct.context*, align 8
  %gimme = alloca i32, align 4
  %svp = alloca %struct.sv**, align 8
  %errsv = alloca %struct.sv*, align 8
  store i32 %flags, i32* %flags.addr, align 4
  %0 = load %struct.op*, %struct.op** @PL_op, align 8
  %op_flags = getelementptr inbounds %struct.op, %struct.op* %0, i32 0, i32 5
  %1 = load i8, i8* %op_flags, align 2
  %conv = zext i8 %1 to i32
  %and = and i32 %conv, 3
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %2 = load %struct.op*, %struct.op** @PL_op, align 8
  %op_flags1 = getelementptr inbounds %struct.op, %struct.op* %2, i32 0, i32 5
  %3 = load i8, i8* %op_flags1, align 2
  %conv2 = zext i8 %3 to i32
  %and3 = and i32 %conv2, 3
  br label %cond.end

cond.false:                                       ; preds = %entry
  %call = call i32 @Perl_block_gimme()
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %and3, %cond.true ], [ %call, %cond.false ]
  store i32 %cond, i32* %gimme, align 4
  call void @Perl_push_scope()
  call void @Perl_save_strlen(i64* @PL_tmps_floor)
  %4 = load i64, i64* @PL_tmps_ix, align 8
  store i64 %4, i64* @PL_tmps_floor, align 8
  %5 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %si_cxix = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %5, i32 0, i32 4
  %6 = load i32, i32* %si_cxix, align 8
  %7 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %si_cxmax = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %7, i32 0, i32 5
  %8 = load i32, i32* %si_cxmax, align 4
  %cmp = icmp slt i32 %6, %8
  br i1 %cmp, label %cond.true5, label %cond.false7

cond.true5:                                       ; preds = %cond.end
  %9 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %si_cxix6 = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %9, i32 0, i32 4
  %10 = load i32, i32* %si_cxix6, align 8
  %inc = add nsw i32 %10, 1
  store i32 %inc, i32* %si_cxix6, align 8
  br label %cond.end10

cond.false7:                                      ; preds = %cond.end
  %call8 = call i32 @Perl_cxinc()
  %11 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %si_cxix9 = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %11, i32 0, i32 4
  store i32 %call8, i32* %si_cxix9, align 8
  br label %cond.end10

cond.end10:                                       ; preds = %cond.false7, %cond.true5
  %cond11 = phi i32 [ %inc, %cond.true5 ], [ %call8, %cond.false7 ]
  %12 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %si_cxstack = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %12, i32 0, i32 1
  %13 = load %struct.context*, %struct.context** %si_cxstack, align 8
  %14 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %si_cxix12 = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %14, i32 0, i32 4
  %15 = load i32, i32* %si_cxix12, align 8
  %idxprom = sext i32 %15 to i64
  %arrayidx = getelementptr inbounds %struct.context, %struct.context* %13, i64 %idxprom
  store %struct.context* %arrayidx, %struct.context** %cx, align 8
  %16 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u = getelementptr inbounds %struct.context, %struct.context* %16, i32 0, i32 0
  %cx_subst = bitcast %union.anon.16* %cx_u to %struct.subst*
  %sbu_type = getelementptr inbounds %struct.subst, %struct.subst* %cx_subst, i32 0, i32 0
  store i8 74, i8* %sbu_type, align 8
  %17 = load %struct.sv**, %struct.sv*** @PL_stack_sp, align 8
  %18 = load %struct.sv**, %struct.sv*** @PL_stack_base, align 8
  %sub.ptr.lhs.cast = ptrtoint %struct.sv** %17 to i64
  %sub.ptr.rhs.cast = ptrtoint %struct.sv** %18 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 8
  %conv13 = trunc i64 %sub.ptr.div to i32
  %19 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u14 = getelementptr inbounds %struct.context, %struct.context* %19, i32 0, i32 0
  %cx_blk = bitcast %union.anon.16* %cx_u14 to %struct.block*
  %blku_oldsp = getelementptr inbounds %struct.block, %struct.block* %cx_blk, i32 0, i32 3
  store i32 %conv13, i32* %blku_oldsp, align 4
  %20 = load %struct.cop*, %struct.cop** @PL_curcop, align 8
  %21 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u15 = getelementptr inbounds %struct.context, %struct.context* %21, i32 0, i32 0
  %cx_blk16 = bitcast %union.anon.16* %cx_u15 to %struct.block*
  %blku_oldcop = getelementptr inbounds %struct.block, %struct.block* %cx_blk16, i32 0, i32 4
  store %struct.cop* %20, %struct.cop** %blku_oldcop, align 8
  %22 = load i32*, i32** @PL_markstack_ptr, align 8
  %23 = load i32*, i32** @PL_markstack, align 8
  %sub.ptr.lhs.cast17 = ptrtoint i32* %22 to i64
  %sub.ptr.rhs.cast18 = ptrtoint i32* %23 to i64
  %sub.ptr.sub19 = sub i64 %sub.ptr.lhs.cast17, %sub.ptr.rhs.cast18
  %sub.ptr.div20 = sdiv exact i64 %sub.ptr.sub19, 4
  %conv21 = trunc i64 %sub.ptr.div20 to i32
  %24 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u22 = getelementptr inbounds %struct.context, %struct.context* %24, i32 0, i32 0
  %cx_blk23 = bitcast %union.anon.16* %cx_u22 to %struct.block*
  %blku_oldmarksp = getelementptr inbounds %struct.block, %struct.block* %cx_blk23, i32 0, i32 5
  store i32 %conv21, i32* %blku_oldmarksp, align 8
  %25 = load i32, i32* @PL_scopestack_ix, align 4
  %26 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u24 = getelementptr inbounds %struct.context, %struct.context* %26, i32 0, i32 0
  %cx_blk25 = bitcast %union.anon.16* %cx_u24 to %struct.block*
  %blku_oldscopesp = getelementptr inbounds %struct.block, %struct.block* %cx_blk25, i32 0, i32 6
  store i32 %25, i32* %blku_oldscopesp, align 4
  %27 = load %struct.pmop*, %struct.pmop** @PL_curpm, align 8
  %28 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u26 = getelementptr inbounds %struct.context, %struct.context* %28, i32 0, i32 0
  %cx_blk27 = bitcast %union.anon.16* %cx_u26 to %struct.block*
  %blku_oldpm = getelementptr inbounds %struct.block, %struct.block* %cx_blk27, i32 0, i32 7
  store %struct.pmop* %27, %struct.pmop** %blku_oldpm, align 8
  %29 = load i32, i32* %gimme, align 4
  %conv28 = trunc i32 %29 to i8
  %30 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u29 = getelementptr inbounds %struct.context, %struct.context* %30, i32 0, i32 0
  %cx_blk30 = bitcast %union.anon.16* %cx_u29 to %struct.block*
  %blku_gimme = getelementptr inbounds %struct.block, %struct.block* %cx_blk30, i32 0, i32 1
  store i8 %conv28, i8* %blku_gimme, align 1
  br label %do.body

do.body:                                          ; preds = %cond.end10
  %31 = load i8, i8* @PL_in_eval, align 1
  %conv31 = zext i8 %31 to i32
  %and32 = and i32 %conv31, 127
  %32 = load %struct.op*, %struct.op** @PL_op, align 8
  %op_type = getelementptr inbounds %struct.op, %struct.op* %32, i32 0, i32 4
  %bf.load = load i16, i16* %op_type, align 8
  %bf.clear = and i16 %bf.load, 511
  %bf.cast = zext i16 %bf.clear to i32
  %conv33 = trunc i32 %bf.cast to i16
  %conv34 = zext i16 %conv33 to i32
  %shl = shl i32 %conv34, 7
  %or = or i32 %and32, %shl
  %conv35 = trunc i32 %or to i16
  %33 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u36 = getelementptr inbounds %struct.context, %struct.context* %33, i32 0, i32 0
  %cx_blk37 = bitcast %union.anon.16* %cx_u36 to %struct.block*
  %blku_u16 = getelementptr inbounds %struct.block, %struct.block* %cx_blk37, i32 0, i32 2
  store i16 %conv35, i16* %blku_u16, align 2
  %34 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u38 = getelementptr inbounds %struct.context, %struct.context* %34, i32 0, i32 0
  %cx_blk39 = bitcast %union.anon.16* %cx_u38 to %struct.block*
  %blk_u = getelementptr inbounds %struct.block, %struct.block* %cx_blk39, i32 0, i32 8
  %blku_eval = bitcast %union.anon.20* %blk_u to %struct.block_eval*
  %old_namesv = getelementptr inbounds %struct.block_eval, %struct.block_eval* %blku_eval, i32 0, i32 1
  store %struct.sv* null, %struct.sv** %old_namesv, align 8
  %35 = load %struct.op*, %struct.op** @PL_eval_root, align 8
  %36 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u40 = getelementptr inbounds %struct.context, %struct.context* %36, i32 0, i32 0
  %cx_blk41 = bitcast %union.anon.16* %cx_u40 to %struct.block*
  %blk_u42 = getelementptr inbounds %struct.block, %struct.block* %cx_blk41, i32 0, i32 8
  %blku_eval43 = bitcast %union.anon.20* %blk_u42 to %struct.block_eval*
  %old_eval_root = getelementptr inbounds %struct.block_eval, %struct.block_eval* %blku_eval43, i32 0, i32 2
  store %struct.op* %35, %struct.op** %old_eval_root, align 8
  %37 = load %struct.yy_parser*, %struct.yy_parser** @PL_parser, align 8
  %tobool44 = icmp ne %struct.yy_parser* %37, null
  br i1 %tobool44, label %cond.true45, label %cond.false46

cond.true45:                                      ; preds = %do.body
  %38 = load %struct.yy_parser*, %struct.yy_parser** @PL_parser, align 8
  %linestr = getelementptr inbounds %struct.yy_parser, %struct.yy_parser* %38, i32 0, i32 33
  %39 = load %struct.sv*, %struct.sv** %linestr, align 8
  br label %cond.end47

cond.false46:                                     ; preds = %do.body
  br label %cond.end47

cond.end47:                                       ; preds = %cond.false46, %cond.true45
  %cond48 = phi %struct.sv* [ %39, %cond.true45 ], [ null, %cond.false46 ]
  %40 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u49 = getelementptr inbounds %struct.context, %struct.context* %40, i32 0, i32 0
  %cx_blk50 = bitcast %union.anon.16* %cx_u49 to %struct.block*
  %blk_u51 = getelementptr inbounds %struct.block, %struct.block* %cx_blk50, i32 0, i32 8
  %blku_eval52 = bitcast %union.anon.20* %blk_u51 to %struct.block_eval*
  %cur_text = getelementptr inbounds %struct.block_eval, %struct.block_eval* %blku_eval52, i32 0, i32 3
  store %struct.sv* %cond48, %struct.sv** %cur_text, align 8
  %41 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u53 = getelementptr inbounds %struct.context, %struct.context* %41, i32 0, i32 0
  %cx_blk54 = bitcast %union.anon.16* %cx_u53 to %struct.block*
  %blk_u55 = getelementptr inbounds %struct.block, %struct.block* %cx_blk54, i32 0, i32 8
  %blku_eval56 = bitcast %union.anon.20* %blk_u55 to %struct.block_eval*
  %cv = getelementptr inbounds %struct.block_eval, %struct.block_eval* %blku_eval56, i32 0, i32 4
  store %struct.cv* null, %struct.cv** %cv, align 8
  %42 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u57 = getelementptr inbounds %struct.context, %struct.context* %42, i32 0, i32 0
  %cx_blk58 = bitcast %union.anon.16* %cx_u57 to %struct.block*
  %blk_u59 = getelementptr inbounds %struct.block, %struct.block* %cx_blk58, i32 0, i32 8
  %blku_eval60 = bitcast %union.anon.20* %blk_u59 to %struct.block_eval*
  %retop = getelementptr inbounds %struct.block_eval, %struct.block_eval* %blku_eval60, i32 0, i32 0
  store %struct.op* null, %struct.op** %retop, align 8
  %43 = load %struct.jmpenv*, %struct.jmpenv** @PL_top_env, align 8
  %44 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u61 = getelementptr inbounds %struct.context, %struct.context* %44, i32 0, i32 0
  %cx_blk62 = bitcast %union.anon.16* %cx_u61 to %struct.block*
  %blk_u63 = getelementptr inbounds %struct.block, %struct.block* %cx_blk62, i32 0, i32 8
  %blku_eval64 = bitcast %union.anon.20* %blk_u63 to %struct.block_eval*
  %cur_top_env = getelementptr inbounds %struct.block_eval, %struct.block_eval* %blku_eval64, i32 0, i32 5
  store %struct.jmpenv* %43, %struct.jmpenv** %cur_top_env, align 8
  br label %do.end

do.end:                                           ; preds = %cond.end47
  store i8 1, i8* @PL_in_eval, align 1
  %45 = load i32, i32* %flags.addr, align 4
  %and65 = and i32 %45, 32
  %tobool66 = icmp ne i32 %and65, 0
  br i1 %tobool66, label %if.then, label %if.else

if.then:                                          ; preds = %do.end
  %46 = load i8, i8* @PL_in_eval, align 1
  %conv67 = zext i8 %46 to i32
  %or68 = or i32 %conv67, 4
  %conv69 = trunc i32 %or68 to i8
  store i8 %conv69, i8* @PL_in_eval, align 1
  br label %if.end91

if.else:                                          ; preds = %do.end
  br label %do.body70

do.body70:                                        ; preds = %if.else
  %47 = load %struct.gv*, %struct.gv** @PL_errgv, align 8
  %sv_u = getelementptr inbounds %struct.gv, %struct.gv* %47, i32 0, i32 3
  %svu_gp = bitcast %union.anon.4* %sv_u to %struct.gp**
  %48 = load %struct.gp*, %struct.gp** %svu_gp, align 8
  %add.ptr = getelementptr inbounds %struct.gp, %struct.gp* %48, i64 0
  %gp_sv = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr, i32 0, i32 0
  store %struct.sv** %gp_sv, %struct.sv*** %svp, align 8
  %49 = load %struct.sv**, %struct.sv*** %svp, align 8
  %50 = load %struct.sv*, %struct.sv** %49, align 8
  %tobool71 = icmp ne %struct.sv* %50, null
  br i1 %tobool71, label %if.else73, label %if.then72

if.then72:                                        ; preds = %do.body70
  br label %clresv_newemptypv

if.else73:                                        ; preds = %do.body70
  %51 = load %struct.sv**, %struct.sv*** %svp, align 8
  %52 = load %struct.sv*, %struct.sv** %51, align 8
  %sv_flags = getelementptr inbounds %struct.sv, %struct.sv* %52, i32 0, i32 2
  %53 = load i32, i32* %sv_flags, align 4
  %and74 = and i32 %53, 134283264
  %tobool75 = icmp ne i32 %and74, 0
  br i1 %tobool75, label %if.then76, label %if.else78

if.then76:                                        ; preds = %if.else73
  %54 = load %struct.sv**, %struct.sv*** %svp, align 8
  %55 = load %struct.sv*, %struct.sv** %54, align 8
  %56 = bitcast %struct.sv* %55 to i8*
  %57 = bitcast i8* %56 to %struct.sv*
  call void @S_SvREFCNT_dec_NN(%struct.sv* %57)
  br label %clresv_newemptypv

clresv_newemptypv:                                ; preds = %if.then76, %if.then72
  %call77 = call %struct.sv* @Perl_newSVpvn(i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.8, i64 0, i64 0), i64 0)
  %58 = load %struct.sv**, %struct.sv*** %svp, align 8
  store %struct.sv* %call77, %struct.sv** %58, align 8
  br label %if.end88

if.else78:                                        ; preds = %if.else73
  %59 = load %struct.sv**, %struct.sv*** %svp, align 8
  %60 = load %struct.sv*, %struct.sv** %59, align 8
  store %struct.sv* %60, %struct.sv** %errsv, align 8
  %61 = load %struct.sv*, %struct.sv** %errsv, align 8
  call void @Perl_sv_setpvn(%struct.sv* %61, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.8, i64 0, i64 0), i64 0)
  %62 = load %struct.sv*, %struct.sv** %errsv, align 8
  %sv_flags79 = getelementptr inbounds %struct.sv, %struct.sv* %62, i32 0, i32 2
  %63 = load i32, i32* %sv_flags79, align 4
  %and80 = and i32 %63, 1610547455
  store i32 %and80, i32* %sv_flags79, align 4
  %64 = load %struct.sv*, %struct.sv** %errsv, align 8
  %sv_flags81 = getelementptr inbounds %struct.sv, %struct.sv* %64, i32 0, i32 2
  %65 = load i32, i32* %sv_flags81, align 4
  %or82 = or i32 %65, 17408
  store i32 %or82, i32* %sv_flags81, align 4
  %66 = load %struct.sv*, %struct.sv** %errsv, align 8
  %sv_flags83 = getelementptr inbounds %struct.sv, %struct.sv* %66, i32 0, i32 2
  %67 = load i32, i32* %sv_flags83, align 4
  %and84 = and i32 %67, 14680064
  %tobool85 = icmp ne i32 %and84, 0
  br i1 %tobool85, label %if.then86, label %if.end

if.then86:                                        ; preds = %if.else78
  %68 = load %struct.sv*, %struct.sv** %errsv, align 8
  %call87 = call i32 @Perl_mg_free(%struct.sv* %68)
  br label %if.end

if.end:                                           ; preds = %if.then86, %if.else78
  br label %if.end88

if.end88:                                         ; preds = %if.end, %clresv_newemptypv
  br label %if.end89

if.end89:                                         ; preds = %if.end88
  br label %do.end90

do.end90:                                         ; preds = %if.end89
  br label %if.end91

if.end91:                                         ; preds = %do.end90, %if.then
  %69 = load i32, i32* %flags.addr, align 4
  %and92 = and i32 %69, 256
  %tobool93 = icmp ne i32 %and92, 0
  br i1 %tobool93, label %if.then94, label %if.end95

if.then94:                                        ; preds = %if.end91
  %70 = load %struct.op*, %struct.op** @PL_op, align 8
  store %struct.op* %70, %struct.op** @PL_eval_root, align 8
  br label %if.end95

if.end95:                                         ; preds = %if.then94, %if.end91
  %71 = load %struct.context*, %struct.context** %cx, align 8
  ret %struct.context* %71
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.op* @Perl_pp_entertry() #0 {
entry:
  %cx = alloca %struct.context*, align 8
  %call = call %struct.context* @Perl_create_eval_scope(i32 0)
  store %struct.context* %call, %struct.context** %cx, align 8
  %0 = load %struct.op*, %struct.op** @PL_op, align 8
  %1 = bitcast %struct.op* %0 to %struct.logop*
  %op_other = getelementptr inbounds %struct.logop, %struct.logop* %1, i32 0, i32 8
  %2 = load %struct.op*, %struct.op** %op_other, align 8
  %op_next = getelementptr inbounds %struct.op, %struct.op* %2, i32 0, i32 0
  %3 = load %struct.op*, %struct.op** %op_next, align 8
  %4 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u = getelementptr inbounds %struct.context, %struct.context* %4, i32 0, i32 0
  %cx_blk = bitcast %union.anon.16* %cx_u to %struct.block*
  %blk_u = getelementptr inbounds %struct.block, %struct.block* %cx_blk, i32 0, i32 8
  %blku_eval = bitcast %union.anon.20* %blk_u to %struct.block_eval*
  %retop = getelementptr inbounds %struct.block_eval, %struct.block_eval* %blku_eval, i32 0, i32 0
  store %struct.op* %3, %struct.op** %retop, align 8
  %5 = load %struct.jmpenv*, %struct.jmpenv** @PL_top_env, align 8
  %je_mustcatch = getelementptr inbounds %struct.jmpenv, %struct.jmpenv* %5, i32 0, i32 3
  %6 = load i8, i8* %je_mustcatch, align 4
  %tobool = trunc i8 %6 to i1
  %conv = zext i1 %tobool to i32
  %cmp = icmp eq i32 %conv, 1
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %7 = load %struct.op*, %struct.op** @PL_op, align 8
  %op_next2 = getelementptr inbounds %struct.op, %struct.op* %7, i32 0, i32 0
  %8 = load %struct.op*, %struct.op** %op_next2, align 8
  %call3 = call %struct.op* @S_docatch(%struct.op* %8)
  br label %cond.end

cond.false:                                       ; preds = %entry
  %9 = load %struct.op*, %struct.op** @PL_op, align 8
  %op_next4 = getelementptr inbounds %struct.op, %struct.op* %9, i32 0, i32 0
  %10 = load %struct.op*, %struct.op** %op_next4, align 8
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.op* [ %call3, %cond.true ], [ %10, %cond.false ]
  ret %struct.op* %cond
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.op* @Perl_pp_leavetry() #0 {
entry:
  %sp = alloca %struct.sv**, align 8
  %newsp = alloca %struct.sv**, align 8
  %newpm = alloca %struct.pmop*, align 8
  %gimme = alloca i32, align 4
  %cx = alloca %struct.context*, align 8
  %optype = alloca i32, align 4
  %svp = alloca %struct.sv**, align 8
  %errsv = alloca %struct.sv*, align 8
  %0 = load %struct.sv**, %struct.sv*** @PL_stack_sp, align 8
  store %struct.sv** %0, %struct.sv*** %sp, align 8
  %1 = load i32, i32* @PL_sig_pending, align 4
  %tobool = icmp ne i32 %1, 0
  br i1 %tobool, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  br i1 true, label %if.then, label %if.end

cond.false:                                       ; preds = %entry
  br i1 false, label %if.then, label %if.end

if.then:                                          ; preds = %cond.false, %cond.true
  %2 = load void ()*, void ()** @PL_signalhook, align 8
  call void %2()
  br label %if.end

if.end:                                           ; preds = %if.then, %cond.false, %cond.true
  %3 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %si_cxstack = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %3, i32 0, i32 1
  %4 = load %struct.context*, %struct.context** %si_cxstack, align 8
  %5 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %si_cxix = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %5, i32 0, i32 4
  %6 = load i32, i32* %si_cxix, align 8
  %dec = add nsw i32 %6, -1
  store i32 %dec, i32* %si_cxix, align 8
  %idxprom = sext i32 %6 to i64
  %arrayidx = getelementptr inbounds %struct.context, %struct.context* %4, i64 %idxprom
  store %struct.context* %arrayidx, %struct.context** %cx, align 8
  %7 = load %struct.sv**, %struct.sv*** @PL_stack_base, align 8
  %8 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u = getelementptr inbounds %struct.context, %struct.context* %8, i32 0, i32 0
  %cx_blk = bitcast %union.anon.16* %cx_u to %struct.block*
  %blku_oldsp = getelementptr inbounds %struct.block, %struct.block* %cx_blk, i32 0, i32 3
  %9 = load i32, i32* %blku_oldsp, align 4
  %idx.ext = sext i32 %9 to i64
  %add.ptr = getelementptr inbounds %struct.sv*, %struct.sv** %7, i64 %idx.ext
  store %struct.sv** %add.ptr, %struct.sv*** %newsp, align 8
  %10 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u1 = getelementptr inbounds %struct.context, %struct.context* %10, i32 0, i32 0
  %cx_blk2 = bitcast %union.anon.16* %cx_u1 to %struct.block*
  %blku_oldcop = getelementptr inbounds %struct.block, %struct.block* %cx_blk2, i32 0, i32 4
  %11 = load %struct.cop*, %struct.cop** %blku_oldcop, align 8
  store %struct.cop* %11, %struct.cop** @PL_curcop, align 8
  %12 = load i32*, i32** @PL_markstack, align 8
  %13 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u3 = getelementptr inbounds %struct.context, %struct.context* %13, i32 0, i32 0
  %cx_blk4 = bitcast %union.anon.16* %cx_u3 to %struct.block*
  %blku_oldmarksp = getelementptr inbounds %struct.block, %struct.block* %cx_blk4, i32 0, i32 5
  %14 = load i32, i32* %blku_oldmarksp, align 8
  %idx.ext5 = sext i32 %14 to i64
  %add.ptr6 = getelementptr inbounds i32, i32* %12, i64 %idx.ext5
  store i32* %add.ptr6, i32** @PL_markstack_ptr, align 8
  %15 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u7 = getelementptr inbounds %struct.context, %struct.context* %15, i32 0, i32 0
  %cx_blk8 = bitcast %union.anon.16* %cx_u7 to %struct.block*
  %blku_oldscopesp = getelementptr inbounds %struct.block, %struct.block* %cx_blk8, i32 0, i32 6
  %16 = load i32, i32* %blku_oldscopesp, align 4
  store i32 %16, i32* @PL_scopestack_ix, align 4
  %17 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u9 = getelementptr inbounds %struct.context, %struct.context* %17, i32 0, i32 0
  %cx_blk10 = bitcast %union.anon.16* %cx_u9 to %struct.block*
  %blku_oldpm = getelementptr inbounds %struct.block, %struct.block* %cx_blk10, i32 0, i32 7
  %18 = load %struct.pmop*, %struct.pmop** %blku_oldpm, align 8
  store %struct.pmop* %18, %struct.pmop** %newpm, align 8
  %19 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u11 = getelementptr inbounds %struct.context, %struct.context* %19, i32 0, i32 0
  %cx_blk12 = bitcast %union.anon.16* %cx_u11 to %struct.block*
  %blku_gimme = getelementptr inbounds %struct.block, %struct.block* %cx_blk12, i32 0, i32 1
  %20 = load i8, i8* %blku_gimme, align 1
  %conv = zext i8 %20 to i32
  store i32 %conv, i32* %gimme, align 4
  br label %do.body

do.body:                                          ; preds = %if.end
  %21 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u13 = getelementptr inbounds %struct.context, %struct.context* %21, i32 0, i32 0
  %cx_blk14 = bitcast %union.anon.16* %cx_u13 to %struct.block*
  %blku_u16 = getelementptr inbounds %struct.block, %struct.block* %cx_blk14, i32 0, i32 2
  %22 = load i16, i16* %blku_u16, align 2
  %conv15 = zext i16 %22 to i32
  %and = and i32 %conv15, 127
  %conv16 = trunc i32 %and to i8
  store i8 %conv16, i8* @PL_in_eval, align 1
  %23 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u17 = getelementptr inbounds %struct.context, %struct.context* %23, i32 0, i32 0
  %cx_blk18 = bitcast %union.anon.16* %cx_u17 to %struct.block*
  %blku_u1619 = getelementptr inbounds %struct.block, %struct.block* %cx_blk18, i32 0, i32 2
  %24 = load i16, i16* %blku_u1619, align 2
  %conv20 = zext i16 %24 to i32
  %shr = ashr i32 %conv20, 7
  store i32 %shr, i32* %optype, align 4
  %25 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u21 = getelementptr inbounds %struct.context, %struct.context* %25, i32 0, i32 0
  %cx_blk22 = bitcast %union.anon.16* %cx_u21 to %struct.block*
  %blk_u = getelementptr inbounds %struct.block, %struct.block* %cx_blk22, i32 0, i32 8
  %blku_eval = bitcast %union.anon.20* %blk_u to %struct.block_eval*
  %old_eval_root = getelementptr inbounds %struct.block_eval, %struct.block_eval* %blku_eval, i32 0, i32 2
  %26 = load %struct.op*, %struct.op** %old_eval_root, align 8
  store %struct.op* %26, %struct.op** @PL_eval_root, align 8
  %27 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u23 = getelementptr inbounds %struct.context, %struct.context* %27, i32 0, i32 0
  %cx_blk24 = bitcast %union.anon.16* %cx_u23 to %struct.block*
  %blk_u25 = getelementptr inbounds %struct.block, %struct.block* %cx_blk24, i32 0, i32 8
  %blku_eval26 = bitcast %union.anon.20* %blk_u25 to %struct.block_eval*
  %cur_text = getelementptr inbounds %struct.block_eval, %struct.block_eval* %blku_eval26, i32 0, i32 3
  %28 = load %struct.sv*, %struct.sv** %cur_text, align 8
  %tobool27 = icmp ne %struct.sv* %28, null
  br i1 %tobool27, label %land.lhs.true, label %if.end41

land.lhs.true:                                    ; preds = %do.body
  %29 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u28 = getelementptr inbounds %struct.context, %struct.context* %29, i32 0, i32 0
  %cx_blk29 = bitcast %union.anon.16* %cx_u28 to %struct.block*
  %blk_u30 = getelementptr inbounds %struct.block, %struct.block* %cx_blk29, i32 0, i32 8
  %blku_eval31 = bitcast %union.anon.20* %blk_u30 to %struct.block_eval*
  %cur_text32 = getelementptr inbounds %struct.block_eval, %struct.block_eval* %blku_eval31, i32 0, i32 3
  %30 = load %struct.sv*, %struct.sv** %cur_text32, align 8
  %sv_flags = getelementptr inbounds %struct.sv, %struct.sv* %30, i32 0, i32 2
  %31 = load i32, i32* %sv_flags, align 4
  %and33 = and i32 %31, 49152
  %cmp = icmp eq i32 %and33, 49152
  br i1 %cmp, label %if.then35, label %if.end41

if.then35:                                        ; preds = %land.lhs.true
  %32 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u36 = getelementptr inbounds %struct.context, %struct.context* %32, i32 0, i32 0
  %cx_blk37 = bitcast %union.anon.16* %cx_u36 to %struct.block*
  %blk_u38 = getelementptr inbounds %struct.block, %struct.block* %cx_blk37, i32 0, i32 8
  %blku_eval39 = bitcast %union.anon.20* %blk_u38 to %struct.block_eval*
  %cur_text40 = getelementptr inbounds %struct.block_eval, %struct.block_eval* %blku_eval39, i32 0, i32 3
  %33 = load %struct.sv*, %struct.sv** %cur_text40, align 8
  %34 = bitcast %struct.sv* %33 to i8*
  %35 = bitcast i8* %34 to %struct.sv*
  call void @S_SvREFCNT_dec_NN(%struct.sv* %35)
  br label %if.end41

if.end41:                                         ; preds = %if.then35, %land.lhs.true, %do.body
  %36 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u42 = getelementptr inbounds %struct.context, %struct.context* %36, i32 0, i32 0
  %cx_blk43 = bitcast %union.anon.16* %cx_u42 to %struct.block*
  %blk_u44 = getelementptr inbounds %struct.block, %struct.block* %cx_blk43, i32 0, i32 8
  %blku_eval45 = bitcast %union.anon.20* %blk_u44 to %struct.block_eval*
  %old_namesv = getelementptr inbounds %struct.block_eval, %struct.block_eval* %blku_eval45, i32 0, i32 1
  %37 = load %struct.sv*, %struct.sv** %old_namesv, align 8
  %tobool46 = icmp ne %struct.sv* %37, null
  br i1 %tobool46, label %if.then47, label %if.end53

if.then47:                                        ; preds = %if.end41
  %38 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u48 = getelementptr inbounds %struct.context, %struct.context* %38, i32 0, i32 0
  %cx_blk49 = bitcast %union.anon.16* %cx_u48 to %struct.block*
  %blk_u50 = getelementptr inbounds %struct.block, %struct.block* %cx_blk49, i32 0, i32 8
  %blku_eval51 = bitcast %union.anon.20* %blk_u50 to %struct.block_eval*
  %old_namesv52 = getelementptr inbounds %struct.block_eval, %struct.block_eval* %blku_eval51, i32 0, i32 1
  %39 = load %struct.sv*, %struct.sv** %old_namesv52, align 8
  %call = call %struct.sv* @Perl_sv_2mortal(%struct.sv* %39)
  br label %if.end53

if.end53:                                         ; preds = %if.then47, %if.end41
  br label %do.end

do.end:                                           ; preds = %if.end53
  %40 = load i32, i32* %optype, align 4
  %41 = load %struct.sv**, %struct.sv*** %newsp, align 8
  %42 = load %struct.sv**, %struct.sv*** %sp, align 8
  %43 = load %struct.sv**, %struct.sv*** %newsp, align 8
  %44 = load i32, i32* %gimme, align 4
  %call54 = call %struct.sv** @S_leave_common(%struct.sv** %41, %struct.sv** %42, %struct.sv** %43, i32 %44, i32 655360, i1 zeroext false)
  store %struct.sv** %call54, %struct.sv*** %sp, align 8
  %45 = load %struct.pmop*, %struct.pmop** %newpm, align 8
  store %struct.pmop* %45, %struct.pmop** @PL_curpm, align 8
  call void @Perl_pop_scope()
  br label %do.body55

do.body55:                                        ; preds = %do.end
  %46 = load %struct.gv*, %struct.gv** @PL_errgv, align 8
  %sv_u = getelementptr inbounds %struct.gv, %struct.gv* %46, i32 0, i32 3
  %svu_gp = bitcast %union.anon.4* %sv_u to %struct.gp**
  %47 = load %struct.gp*, %struct.gp** %svu_gp, align 8
  %add.ptr56 = getelementptr inbounds %struct.gp, %struct.gp* %47, i64 0
  %gp_sv = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr56, i32 0, i32 0
  store %struct.sv** %gp_sv, %struct.sv*** %svp, align 8
  %48 = load %struct.sv**, %struct.sv*** %svp, align 8
  %49 = load %struct.sv*, %struct.sv** %48, align 8
  %tobool57 = icmp ne %struct.sv* %49, null
  br i1 %tobool57, label %if.else, label %if.then58

if.then58:                                        ; preds = %do.body55
  br label %clresv_newemptypv

if.else:                                          ; preds = %do.body55
  %50 = load %struct.sv**, %struct.sv*** %svp, align 8
  %51 = load %struct.sv*, %struct.sv** %50, align 8
  %sv_flags59 = getelementptr inbounds %struct.sv, %struct.sv* %51, i32 0, i32 2
  %52 = load i32, i32* %sv_flags59, align 4
  %and60 = and i32 %52, 134283264
  %tobool61 = icmp ne i32 %and60, 0
  br i1 %tobool61, label %if.then62, label %if.else64

if.then62:                                        ; preds = %if.else
  %53 = load %struct.sv**, %struct.sv*** %svp, align 8
  %54 = load %struct.sv*, %struct.sv** %53, align 8
  %55 = bitcast %struct.sv* %54 to i8*
  %56 = bitcast i8* %55 to %struct.sv*
  call void @S_SvREFCNT_dec_NN(%struct.sv* %56)
  br label %clresv_newemptypv

clresv_newemptypv:                                ; preds = %if.then62, %if.then58
  %call63 = call %struct.sv* @Perl_newSVpvn(i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.8, i64 0, i64 0), i64 0)
  %57 = load %struct.sv**, %struct.sv*** %svp, align 8
  store %struct.sv* %call63, %struct.sv** %57, align 8
  br label %if.end74

if.else64:                                        ; preds = %if.else
  %58 = load %struct.sv**, %struct.sv*** %svp, align 8
  %59 = load %struct.sv*, %struct.sv** %58, align 8
  store %struct.sv* %59, %struct.sv** %errsv, align 8
  %60 = load %struct.sv*, %struct.sv** %errsv, align 8
  call void @Perl_sv_setpvn(%struct.sv* %60, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.8, i64 0, i64 0), i64 0)
  %61 = load %struct.sv*, %struct.sv** %errsv, align 8
  %sv_flags65 = getelementptr inbounds %struct.sv, %struct.sv* %61, i32 0, i32 2
  %62 = load i32, i32* %sv_flags65, align 4
  %and66 = and i32 %62, 1610547455
  store i32 %and66, i32* %sv_flags65, align 4
  %63 = load %struct.sv*, %struct.sv** %errsv, align 8
  %sv_flags67 = getelementptr inbounds %struct.sv, %struct.sv* %63, i32 0, i32 2
  %64 = load i32, i32* %sv_flags67, align 4
  %or = or i32 %64, 17408
  store i32 %or, i32* %sv_flags67, align 4
  %65 = load %struct.sv*, %struct.sv** %errsv, align 8
  %sv_flags68 = getelementptr inbounds %struct.sv, %struct.sv* %65, i32 0, i32 2
  %66 = load i32, i32* %sv_flags68, align 4
  %and69 = and i32 %66, 14680064
  %tobool70 = icmp ne i32 %and69, 0
  br i1 %tobool70, label %if.then71, label %if.end73

if.then71:                                        ; preds = %if.else64
  %67 = load %struct.sv*, %struct.sv** %errsv, align 8
  %call72 = call i32 @Perl_mg_free(%struct.sv* %67)
  br label %if.end73

if.end73:                                         ; preds = %if.then71, %if.else64
  br label %if.end74

if.end74:                                         ; preds = %if.end73, %clresv_newemptypv
  br label %if.end75

if.end75:                                         ; preds = %if.end74
  br label %do.end76

do.end76:                                         ; preds = %if.end75
  %68 = load %struct.sv**, %struct.sv*** %sp, align 8
  store %struct.sv** %68, %struct.sv*** @PL_stack_sp, align 8
  %69 = load %struct.op*, %struct.op** @PL_op, align 8
  %op_next = getelementptr inbounds %struct.op, %struct.op* %69, i32 0, i32 0
  %70 = load %struct.op*, %struct.op** %op_next, align 8
  ret %struct.op* %70
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.op* @Perl_pp_entergiven() #0 {
entry:
  %sp = alloca %struct.sv**, align 8
  %cx = alloca %struct.context*, align 8
  %gimme = alloca i32, align 4
  %0 = load %struct.sv**, %struct.sv*** @PL_stack_sp, align 8
  store %struct.sv** %0, %struct.sv*** %sp, align 8
  %1 = load %struct.op*, %struct.op** @PL_op, align 8
  %op_flags = getelementptr inbounds %struct.op, %struct.op* %1, i32 0, i32 5
  %2 = load i8, i8* %op_flags, align 2
  %conv = zext i8 %2 to i32
  %and = and i32 %conv, 3
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %3 = load %struct.op*, %struct.op** @PL_op, align 8
  %op_flags1 = getelementptr inbounds %struct.op, %struct.op* %3, i32 0, i32 5
  %4 = load i8, i8* %op_flags1, align 2
  %conv2 = zext i8 %4 to i32
  %and3 = and i32 %conv2, 3
  br label %cond.end

cond.false:                                       ; preds = %entry
  %call = call i32 @Perl_block_gimme()
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %and3, %cond.true ], [ %call, %cond.false ]
  store i32 %cond, i32* %gimme, align 4
  call void @Perl_push_scope()
  call void @Perl_save_strlen(i64* @PL_tmps_floor)
  %5 = load i64, i64* @PL_tmps_ix, align 8
  store i64 %5, i64* @PL_tmps_floor, align 8
  %6 = load %struct.op*, %struct.op** @PL_op, align 8
  %op_targ = getelementptr inbounds %struct.op, %struct.op* %6, i32 0, i32 3
  %7 = load i64, i64* %op_targ, align 8
  %tobool4 = icmp ne i64 %7, 0
  br i1 %tobool4, label %if.then, label %if.else

if.then:                                          ; preds = %cond.end
  %8 = load %struct.op*, %struct.op** @PL_op, align 8
  %op_targ5 = getelementptr inbounds %struct.op, %struct.op* %8, i32 0, i32 3
  %9 = load i64, i64* %op_targ5, align 8
  call void @Perl_save_padsv_and_mortalize(i64 %9)
  %10 = load %struct.sv**, %struct.sv*** @PL_curpad, align 8
  %11 = load %struct.op*, %struct.op** @PL_op, align 8
  %op_targ6 = getelementptr inbounds %struct.op, %struct.op* %11, i32 0, i32 3
  %12 = load i64, i64* %op_targ6, align 8
  %arrayidx = getelementptr inbounds %struct.sv*, %struct.sv** %10, i64 %12
  %13 = load %struct.sv*, %struct.sv** %arrayidx, align 8
  %14 = bitcast %struct.sv* %13 to i8*
  %15 = bitcast i8* %14 to %struct.sv*
  call void @S_SvREFCNT_dec(%struct.sv* %15)
  %16 = load %struct.sv**, %struct.sv*** %sp, align 8
  %incdec.ptr = getelementptr inbounds %struct.sv*, %struct.sv** %16, i32 -1
  store %struct.sv** %incdec.ptr, %struct.sv*** %sp, align 8
  %17 = load %struct.sv*, %struct.sv** %16, align 8
  %18 = bitcast %struct.sv* %17 to i8*
  %19 = bitcast i8* %18 to %struct.sv*
  %call7 = call %struct.sv* @S_SvREFCNT_inc_NN(%struct.sv* %19)
  %20 = load %struct.sv**, %struct.sv*** @PL_curpad, align 8
  %21 = load %struct.op*, %struct.op** @PL_op, align 8
  %op_targ8 = getelementptr inbounds %struct.op, %struct.op* %21, i32 0, i32 3
  %22 = load i64, i64* %op_targ8, align 8
  %arrayidx9 = getelementptr inbounds %struct.sv*, %struct.sv** %20, i64 %22
  store %struct.sv* %call7, %struct.sv** %arrayidx9, align 8
  br label %if.end

if.else:                                          ; preds = %cond.end
  %23 = load %struct.gv*, %struct.gv** @PL_defgv, align 8
  call void @Perl_save_gp(%struct.gv* %23, i32 0)
  %24 = load %struct.gv*, %struct.gv** @PL_defgv, align 8
  %sv_any = getelementptr inbounds %struct.gv, %struct.gv* %24, i32 0, i32 0
  %25 = load %struct.xpvgv*, %struct.xpvgv** %sv_any, align 8
  %xpv_cur = getelementptr inbounds %struct.xpvgv, %struct.xpvgv* %25, i32 0, i32 2
  %26 = load i64, i64* %xpv_cur, align 8
  %and10 = and i64 %26, -2
  store i64 %and10, i64* %xpv_cur, align 8
  %27 = load %struct.gv*, %struct.gv** @PL_defgv, align 8
  %sv_u = getelementptr inbounds %struct.gv, %struct.gv* %27, i32 0, i32 3
  %svu_gp = bitcast %union.anon.4* %sv_u to %struct.gp**
  %28 = load %struct.gp*, %struct.gp** %svu_gp, align 8
  %add.ptr = getelementptr inbounds %struct.gp, %struct.gp* %28, i64 0
  %gp_sv = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr, i32 0, i32 0
  call void @Perl_save_generic_svref(%struct.sv** %gp_sv)
  %29 = load %struct.gv*, %struct.gv** @PL_defgv, align 8
  %sv_u11 = getelementptr inbounds %struct.gv, %struct.gv* %29, i32 0, i32 3
  %svu_gp12 = bitcast %union.anon.4* %sv_u11 to %struct.gp**
  %30 = load %struct.gp*, %struct.gp** %svu_gp12, align 8
  %add.ptr13 = getelementptr inbounds %struct.gp, %struct.gp* %30, i64 0
  %gp_sv14 = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr13, i32 0, i32 0
  store %struct.sv* null, %struct.sv** %gp_sv14, align 8
  %31 = load %struct.gv*, %struct.gv** @PL_defgv, align 8
  %sv_u15 = getelementptr inbounds %struct.gv, %struct.gv* %31, i32 0, i32 3
  %svu_gp16 = bitcast %union.anon.4* %sv_u15 to %struct.gp**
  %32 = load %struct.gp*, %struct.gp** %svu_gp16, align 8
  %add.ptr17 = getelementptr inbounds %struct.gp, %struct.gp* %32, i64 0
  %gp_sv18 = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr17, i32 0, i32 0
  %33 = load %struct.sv*, %struct.sv** %gp_sv18, align 8
  %34 = bitcast %struct.sv* %33 to i8*
  %35 = bitcast i8* %34 to %struct.sv*
  call void @S_SvREFCNT_dec(%struct.sv* %35)
  %36 = load %struct.sv**, %struct.sv*** %sp, align 8
  %incdec.ptr19 = getelementptr inbounds %struct.sv*, %struct.sv** %36, i32 -1
  store %struct.sv** %incdec.ptr19, %struct.sv*** %sp, align 8
  %37 = load %struct.sv*, %struct.sv** %36, align 8
  %38 = bitcast %struct.sv* %37 to i8*
  %39 = bitcast i8* %38 to %struct.sv*
  %call20 = call %struct.sv* @S_SvREFCNT_inc(%struct.sv* %39)
  %40 = load %struct.gv*, %struct.gv** @PL_defgv, align 8
  %sv_u21 = getelementptr inbounds %struct.gv, %struct.gv* %40, i32 0, i32 3
  %svu_gp22 = bitcast %union.anon.4* %sv_u21 to %struct.gp**
  %41 = load %struct.gp*, %struct.gp** %svu_gp22, align 8
  %add.ptr23 = getelementptr inbounds %struct.gp, %struct.gp* %41, i64 0
  %gp_sv24 = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr23, i32 0, i32 0
  store %struct.sv* %call20, %struct.sv** %gp_sv24, align 8
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %42 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %si_cxix = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %42, i32 0, i32 4
  %43 = load i32, i32* %si_cxix, align 8
  %44 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %si_cxmax = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %44, i32 0, i32 5
  %45 = load i32, i32* %si_cxmax, align 4
  %cmp = icmp slt i32 %43, %45
  br i1 %cmp, label %cond.true26, label %cond.false28

cond.true26:                                      ; preds = %if.end
  %46 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %si_cxix27 = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %46, i32 0, i32 4
  %47 = load i32, i32* %si_cxix27, align 8
  %inc = add nsw i32 %47, 1
  store i32 %inc, i32* %si_cxix27, align 8
  br label %cond.end31

cond.false28:                                     ; preds = %if.end
  %call29 = call i32 @Perl_cxinc()
  %48 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %si_cxix30 = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %48, i32 0, i32 4
  store i32 %call29, i32* %si_cxix30, align 8
  br label %cond.end31

cond.end31:                                       ; preds = %cond.false28, %cond.true26
  %cond32 = phi i32 [ %inc, %cond.true26 ], [ %call29, %cond.false28 ]
  %49 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %si_cxstack = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %49, i32 0, i32 1
  %50 = load %struct.context*, %struct.context** %si_cxstack, align 8
  %51 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %si_cxix33 = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %51, i32 0, i32 4
  %52 = load i32, i32* %si_cxix33, align 8
  %idxprom = sext i32 %52 to i64
  %arrayidx34 = getelementptr inbounds %struct.context, %struct.context* %50, i64 %idxprom
  store %struct.context* %arrayidx34, %struct.context** %cx, align 8
  %53 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u = getelementptr inbounds %struct.context, %struct.context* %53, i32 0, i32 0
  %cx_subst = bitcast %union.anon.16* %cx_u to %struct.subst*
  %sbu_type = getelementptr inbounds %struct.subst, %struct.subst* %cx_subst, i32 0, i32 0
  store i8 3, i8* %sbu_type, align 8
  %54 = load %struct.sv**, %struct.sv*** %sp, align 8
  %55 = load %struct.sv**, %struct.sv*** @PL_stack_base, align 8
  %sub.ptr.lhs.cast = ptrtoint %struct.sv** %54 to i64
  %sub.ptr.rhs.cast = ptrtoint %struct.sv** %55 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 8
  %conv35 = trunc i64 %sub.ptr.div to i32
  %56 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u36 = getelementptr inbounds %struct.context, %struct.context* %56, i32 0, i32 0
  %cx_blk = bitcast %union.anon.16* %cx_u36 to %struct.block*
  %blku_oldsp = getelementptr inbounds %struct.block, %struct.block* %cx_blk, i32 0, i32 3
  store i32 %conv35, i32* %blku_oldsp, align 4
  %57 = load %struct.cop*, %struct.cop** @PL_curcop, align 8
  %58 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u37 = getelementptr inbounds %struct.context, %struct.context* %58, i32 0, i32 0
  %cx_blk38 = bitcast %union.anon.16* %cx_u37 to %struct.block*
  %blku_oldcop = getelementptr inbounds %struct.block, %struct.block* %cx_blk38, i32 0, i32 4
  store %struct.cop* %57, %struct.cop** %blku_oldcop, align 8
  %59 = load i32*, i32** @PL_markstack_ptr, align 8
  %60 = load i32*, i32** @PL_markstack, align 8
  %sub.ptr.lhs.cast39 = ptrtoint i32* %59 to i64
  %sub.ptr.rhs.cast40 = ptrtoint i32* %60 to i64
  %sub.ptr.sub41 = sub i64 %sub.ptr.lhs.cast39, %sub.ptr.rhs.cast40
  %sub.ptr.div42 = sdiv exact i64 %sub.ptr.sub41, 4
  %conv43 = trunc i64 %sub.ptr.div42 to i32
  %61 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u44 = getelementptr inbounds %struct.context, %struct.context* %61, i32 0, i32 0
  %cx_blk45 = bitcast %union.anon.16* %cx_u44 to %struct.block*
  %blku_oldmarksp = getelementptr inbounds %struct.block, %struct.block* %cx_blk45, i32 0, i32 5
  store i32 %conv43, i32* %blku_oldmarksp, align 8
  %62 = load i32, i32* @PL_scopestack_ix, align 4
  %63 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u46 = getelementptr inbounds %struct.context, %struct.context* %63, i32 0, i32 0
  %cx_blk47 = bitcast %union.anon.16* %cx_u46 to %struct.block*
  %blku_oldscopesp = getelementptr inbounds %struct.block, %struct.block* %cx_blk47, i32 0, i32 6
  store i32 %62, i32* %blku_oldscopesp, align 4
  %64 = load %struct.pmop*, %struct.pmop** @PL_curpm, align 8
  %65 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u48 = getelementptr inbounds %struct.context, %struct.context* %65, i32 0, i32 0
  %cx_blk49 = bitcast %union.anon.16* %cx_u48 to %struct.block*
  %blku_oldpm = getelementptr inbounds %struct.block, %struct.block* %cx_blk49, i32 0, i32 7
  store %struct.pmop* %64, %struct.pmop** %blku_oldpm, align 8
  %66 = load i32, i32* %gimme, align 4
  %conv50 = trunc i32 %66 to i8
  %67 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u51 = getelementptr inbounds %struct.context, %struct.context* %67, i32 0, i32 0
  %cx_blk52 = bitcast %union.anon.16* %cx_u51 to %struct.block*
  %blku_gimme = getelementptr inbounds %struct.block, %struct.block* %cx_blk52, i32 0, i32 1
  store i8 %conv50, i8* %blku_gimme, align 1
  %68 = load %struct.op*, %struct.op** @PL_op, align 8
  %69 = bitcast %struct.op* %68 to %struct.logop*
  %op_other = getelementptr inbounds %struct.logop, %struct.logop* %69, i32 0, i32 8
  %70 = load %struct.op*, %struct.op** %op_other, align 8
  %71 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u53 = getelementptr inbounds %struct.context, %struct.context* %71, i32 0, i32 0
  %cx_blk54 = bitcast %union.anon.16* %cx_u53 to %struct.block*
  %blk_u = getelementptr inbounds %struct.block, %struct.block* %cx_blk54, i32 0, i32 8
  %blku_givwhen = bitcast %union.anon.20* %blk_u to %struct.block_givwhen*
  %leave_op = getelementptr inbounds %struct.block_givwhen, %struct.block_givwhen* %blku_givwhen, i32 0, i32 0
  store %struct.op* %70, %struct.op** %leave_op, align 8
  %72 = load %struct.sv**, %struct.sv*** %sp, align 8
  store %struct.sv** %72, %struct.sv*** @PL_stack_sp, align 8
  %73 = load %struct.op*, %struct.op** @PL_op, align 8
  %op_next = getelementptr inbounds %struct.op, %struct.op* %73, i32 0, i32 0
  %74 = load %struct.op*, %struct.op** %op_next, align 8
  ret %struct.op* %74
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.op* @Perl_pp_leavegiven() #0 {
entry:
  %sp = alloca %struct.sv**, align 8
  %cx = alloca %struct.context*, align 8
  %gimme = alloca i32, align 4
  %newsp = alloca %struct.sv**, align 8
  %newpm = alloca %struct.pmop*, align 8
  %0 = load %struct.sv**, %struct.sv*** @PL_stack_sp, align 8
  store %struct.sv** %0, %struct.sv*** %sp, align 8
  %1 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %si_cxstack = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %1, i32 0, i32 1
  %2 = load %struct.context*, %struct.context** %si_cxstack, align 8
  %3 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %si_cxix = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %3, i32 0, i32 4
  %4 = load i32, i32* %si_cxix, align 8
  %dec = add nsw i32 %4, -1
  store i32 %dec, i32* %si_cxix, align 8
  %idxprom = sext i32 %4 to i64
  %arrayidx = getelementptr inbounds %struct.context, %struct.context* %2, i64 %idxprom
  store %struct.context* %arrayidx, %struct.context** %cx, align 8
  %5 = load %struct.sv**, %struct.sv*** @PL_stack_base, align 8
  %6 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u = getelementptr inbounds %struct.context, %struct.context* %6, i32 0, i32 0
  %cx_blk = bitcast %union.anon.16* %cx_u to %struct.block*
  %blku_oldsp = getelementptr inbounds %struct.block, %struct.block* %cx_blk, i32 0, i32 3
  %7 = load i32, i32* %blku_oldsp, align 4
  %idx.ext = sext i32 %7 to i64
  %add.ptr = getelementptr inbounds %struct.sv*, %struct.sv** %5, i64 %idx.ext
  store %struct.sv** %add.ptr, %struct.sv*** %newsp, align 8
  %8 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u1 = getelementptr inbounds %struct.context, %struct.context* %8, i32 0, i32 0
  %cx_blk2 = bitcast %union.anon.16* %cx_u1 to %struct.block*
  %blku_oldcop = getelementptr inbounds %struct.block, %struct.block* %cx_blk2, i32 0, i32 4
  %9 = load %struct.cop*, %struct.cop** %blku_oldcop, align 8
  store %struct.cop* %9, %struct.cop** @PL_curcop, align 8
  %10 = load i32*, i32** @PL_markstack, align 8
  %11 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u3 = getelementptr inbounds %struct.context, %struct.context* %11, i32 0, i32 0
  %cx_blk4 = bitcast %union.anon.16* %cx_u3 to %struct.block*
  %blku_oldmarksp = getelementptr inbounds %struct.block, %struct.block* %cx_blk4, i32 0, i32 5
  %12 = load i32, i32* %blku_oldmarksp, align 8
  %idx.ext5 = sext i32 %12 to i64
  %add.ptr6 = getelementptr inbounds i32, i32* %10, i64 %idx.ext5
  store i32* %add.ptr6, i32** @PL_markstack_ptr, align 8
  %13 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u7 = getelementptr inbounds %struct.context, %struct.context* %13, i32 0, i32 0
  %cx_blk8 = bitcast %union.anon.16* %cx_u7 to %struct.block*
  %blku_oldscopesp = getelementptr inbounds %struct.block, %struct.block* %cx_blk8, i32 0, i32 6
  %14 = load i32, i32* %blku_oldscopesp, align 4
  store i32 %14, i32* @PL_scopestack_ix, align 4
  %15 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u9 = getelementptr inbounds %struct.context, %struct.context* %15, i32 0, i32 0
  %cx_blk10 = bitcast %union.anon.16* %cx_u9 to %struct.block*
  %blku_oldpm = getelementptr inbounds %struct.block, %struct.block* %cx_blk10, i32 0, i32 7
  %16 = load %struct.pmop*, %struct.pmop** %blku_oldpm, align 8
  store %struct.pmop* %16, %struct.pmop** %newpm, align 8
  %17 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u11 = getelementptr inbounds %struct.context, %struct.context* %17, i32 0, i32 0
  %cx_blk12 = bitcast %union.anon.16* %cx_u11 to %struct.block*
  %blku_gimme = getelementptr inbounds %struct.block, %struct.block* %cx_blk12, i32 0, i32 1
  %18 = load i8, i8* %blku_gimme, align 1
  %conv = zext i8 %18 to i32
  store i32 %conv, i32* %gimme, align 4
  %19 = load %struct.sv**, %struct.sv*** %newsp, align 8
  %20 = load %struct.sv**, %struct.sv*** %sp, align 8
  %21 = load %struct.sv**, %struct.sv*** %newsp, align 8
  %22 = load i32, i32* %gimme, align 4
  %call = call %struct.sv** @S_leave_common(%struct.sv** %19, %struct.sv** %20, %struct.sv** %21, i32 %22, i32 655360, i1 zeroext false)
  store %struct.sv** %call, %struct.sv*** %sp, align 8
  %23 = load %struct.pmop*, %struct.pmop** %newpm, align 8
  store %struct.pmop* %23, %struct.pmop** @PL_curpm, align 8
  call void @Perl_pop_scope()
  %24 = load %struct.sv**, %struct.sv*** %sp, align 8
  store %struct.sv** %24, %struct.sv*** @PL_stack_sp, align 8
  %25 = load %struct.op*, %struct.op** @PL_op, align 8
  %op_next = getelementptr inbounds %struct.op, %struct.op* %25, i32 0, i32 0
  %26 = load %struct.op*, %struct.op** %op_next, align 8
  ret %struct.op* %26
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.op* @Perl_pp_smartmatch() #0 {
entry:
  %call = call %struct.op* @S_do_smartmatch(%struct.hv* null, %struct.hv* null, i1 zeroext false)
  ret %struct.op* %call
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.op* @S_do_smartmatch(%struct.hv* %seen_this, %struct.hv* %seen_other, i1 zeroext %copied) #0 {
entry:
  %retval = alloca %struct.op*, align 8
  %seen_this.addr = alloca %struct.hv*, align 8
  %seen_other.addr = alloca %struct.hv*, align 8
  %copied.addr = alloca i8, align 1
  %sp = alloca %struct.sv**, align 8
  %object_on_left = alloca i8, align 1
  %e = alloca %struct.sv*, align 8
  %d = alloca %struct.sv*, align 8
  %tmpsv = alloca %struct.sv*, align 8
  %c = alloca i32, align 4
  %he = alloca %struct.he*, align 8
  %andedresults = alloca i8, align 1
  %hv = alloca %struct.hv*, align 8
  %numkeys = alloca i32, align 4
  %mark_stack_entry = alloca i32*, align 8
  %i = alloca i64, align 8
  %andedresults242 = alloca i8, align 1
  %av = alloca %struct.av*, align 8
  %len = alloca i32, align 4
  %svp = alloca %struct.sv**, align 8
  %mark_stack_entry258 = alloca i32*, align 8
  %mark_stack_entry407 = alloca i32*, align 8
  %he483 = alloca %struct.he*, align 8
  %other_hv = alloca %struct.hv*, align 8
  %tied = alloca i8, align 1
  %other_tied = alloca i8, align 1
  %this_key_count = alloca i32, align 4
  %other_key_count = alloca i32, align 4
  %hv486 = alloca %struct.hv*, align 8
  %temp = alloca %struct.hv*, align 8
  %key = alloca %struct.sv*, align 8
  %other_av = alloca %struct.av*, align 8
  %other_len = alloca i64, align 8
  %i613 = alloca i64, align 8
  %hv614 = alloca %struct.hv*, align 8
  %svp621 = alloca %struct.sv**, align 8
  %matcher = alloca %struct.pmop*, align 8
  %he654 = alloca %struct.he*, align 8
  %hv655 = alloca %struct.hv*, align 8
  %other_av712 = alloca %struct.av*, align 8
  %other_len715 = alloca i64, align 8
  %i718 = alloca i64, align 8
  %svp723 = alloca %struct.sv**, align 8
  %other_av756 = alloca %struct.av*, align 8
  %i769 = alloca i64, align 8
  %other_len770 = alloca i64, align 8
  %this_elem = alloca %struct.sv**, align 8
  %other_elem = alloca %struct.sv**, align 8
  %matcher990 = alloca %struct.pmop*, align 8
  %this_len = alloca i64, align 8
  %i997 = alloca i64, align 8
  %svp1002 = alloca %struct.sv**, align 8
  %this_len1034 = alloca i64, align 8
  %i1038 = alloca i64, align 8
  %svp1043 = alloca %struct.sv**, align 8
  %i1072 = alloca i64, align 8
  %this_len1073 = alloca i64, align 8
  %svp1081 = alloca %struct.sv**, align 8
  %t = alloca %struct.sv*, align 8
  %t1244 = alloca %struct.sv*, align 8
  %matcher1246 = alloca %struct.pmop*, align 8
  %result = alloca i8, align 1
  %tmpsv1279 = alloca %struct.sv*, align 8
  store %struct.hv* %seen_this, %struct.hv** %seen_this.addr, align 8
  store %struct.hv* %seen_other, %struct.hv** %seen_other.addr, align 8
  %frombool = zext i1 %copied to i8
  store i8 %frombool, i8* %copied.addr, align 1
  %0 = load %struct.sv**, %struct.sv*** @PL_stack_sp, align 8
  store %struct.sv** %0, %struct.sv*** %sp, align 8
  store i8 0, i8* %object_on_left, align 1
  %1 = load %struct.sv**, %struct.sv*** %sp, align 8
  %2 = load %struct.sv*, %struct.sv** %1, align 8
  store %struct.sv* %2, %struct.sv** %e, align 8
  %3 = load %struct.sv**, %struct.sv*** %sp, align 8
  %add.ptr = getelementptr inbounds %struct.sv*, %struct.sv** %3, i64 -1
  %4 = load %struct.sv*, %struct.sv** %add.ptr, align 8
  store %struct.sv* %4, %struct.sv** %d, align 8
  %5 = load %struct.sv*, %struct.sv** %d, align 8
  %tobool = icmp ne %struct.sv* %5, null
  br i1 %tobool, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %6 = load i8, i8* %copied.addr, align 1
  %tobool1 = trunc i8 %6 to i1
  br i1 %tobool1, label %if.end, label %land.lhs.true

land.lhs.true:                                    ; preds = %if.then
  %7 = load %struct.sv*, %struct.sv** %d, align 8
  %sv_flags = getelementptr inbounds %struct.sv, %struct.sv* %7, i32 0, i32 2
  %8 = load i32, i32* %sv_flags, align 4
  %and = and i32 %8, 2097152
  %tobool2 = icmp ne i32 %and, 0
  br i1 %tobool2, label %if.then3, label %if.end

if.then3:                                         ; preds = %land.lhs.true
  %9 = load %struct.sv*, %struct.sv** %d, align 8
  %call = call %struct.sv* @Perl_sv_mortalcopy_flags(%struct.sv* %9, i32 1538)
  store %struct.sv* %call, %struct.sv** %d, align 8
  br label %if.end

if.end:                                           ; preds = %if.then3, %land.lhs.true, %if.then
  br label %if.end4

if.else:                                          ; preds = %entry
  store %struct.sv* @PL_sv_undef, %struct.sv** %d, align 8
  br label %if.end4

if.end4:                                          ; preds = %if.else, %if.end
  %10 = load %struct.sv*, %struct.sv** %e, align 8
  %sv_flags5 = getelementptr inbounds %struct.sv, %struct.sv* %10, i32 0, i32 2
  %11 = load i32, i32* %sv_flags5, align 4
  %and6 = and i32 %11, 2097152
  %tobool7 = icmp ne i32 %and6, 0
  br i1 %tobool7, label %if.then8, label %if.end10

if.then8:                                         ; preds = %if.end4
  %12 = load %struct.sv*, %struct.sv** %e, align 8
  %call9 = call %struct.sv* @Perl_sv_mortalcopy_flags(%struct.sv* %12, i32 1538)
  store %struct.sv* %call9, %struct.sv** %e, align 8
  br label %if.end10

if.end10:                                         ; preds = %if.then8, %if.end4
  %13 = load %struct.sv*, %struct.sv** %e, align 8
  %sv_flags11 = getelementptr inbounds %struct.sv, %struct.sv* %13, i32 0, i32 2
  %14 = load i32, i32* %sv_flags11, align 4
  %and12 = and i32 %14, 2048
  %tobool13 = icmp ne i32 %and12, 0
  br i1 %tobool13, label %land.lhs.true14, label %if.end29

land.lhs.true14:                                  ; preds = %if.end10
  %15 = load %struct.sv*, %struct.sv** %e, align 8
  %sv_u = getelementptr inbounds %struct.sv, %struct.sv* %15, i32 0, i32 3
  %svu_rv = bitcast %union.anon* %sv_u to %struct.sv**
  %16 = load %struct.sv*, %struct.sv** %svu_rv, align 8
  %sv_flags15 = getelementptr inbounds %struct.sv, %struct.sv* %16, i32 0, i32 2
  %17 = load i32, i32* %sv_flags15, align 4
  %and16 = and i32 %17, 1048576
  %tobool17 = icmp ne i32 %and16, 0
  br i1 %tobool17, label %land.lhs.true18, label %if.end29

land.lhs.true18:                                  ; preds = %land.lhs.true14
  %18 = load %struct.sv*, %struct.sv** %e, align 8
  %sv_u19 = getelementptr inbounds %struct.sv, %struct.sv* %18, i32 0, i32 3
  %svu_rv20 = bitcast %union.anon* %sv_u19 to %struct.sv**
  %19 = load %struct.sv*, %struct.sv** %svu_rv20, align 8
  %sv_any = getelementptr inbounds %struct.sv, %struct.sv* %19, i32 0, i32 0
  %20 = load i8*, i8** %sv_any, align 8
  %21 = bitcast i8* %20 to %struct.xpvmg*
  %xmg_stash = getelementptr inbounds %struct.xpvmg, %struct.xpvmg* %21, i32 0, i32 0
  %22 = load %struct.hv*, %struct.hv** %xmg_stash, align 8
  %sv_flags21 = getelementptr inbounds %struct.hv, %struct.hv* %22, i32 0, i32 2
  %23 = load i32, i32* %sv_flags21, align 4
  %and22 = and i32 %23, 268435456
  %tobool23 = icmp ne i32 %and22, 0
  br i1 %tobool23, label %if.then24, label %if.end29

if.then24:                                        ; preds = %land.lhs.true18
  %24 = load %struct.sv*, %struct.sv** %d, align 8
  %25 = load %struct.sv*, %struct.sv** %e, align 8
  %call25 = call %struct.sv* @Perl_amagic_call(%struct.sv* %24, %struct.sv* %25, i32 72, i32 2)
  store %struct.sv* %call25, %struct.sv** %tmpsv, align 8
  %26 = load %struct.sv*, %struct.sv** %tmpsv, align 8
  %tobool26 = icmp ne %struct.sv* %26, null
  br i1 %tobool26, label %if.then27, label %if.end28

if.then27:                                        ; preds = %if.then24
  %27 = load %struct.sv**, %struct.sv*** @PL_stack_sp, align 8
  store %struct.sv** %27, %struct.sv*** %sp, align 8
  %28 = load %struct.sv**, %struct.sv*** %sp, align 8
  %incdec.ptr = getelementptr inbounds %struct.sv*, %struct.sv** %28, i32 -1
  store %struct.sv** %incdec.ptr, %struct.sv*** %sp, align 8
  %29 = load %struct.sv*, %struct.sv** %28, align 8
  %30 = load %struct.sv*, %struct.sv** %tmpsv, align 8
  %31 = load %struct.sv**, %struct.sv*** %sp, align 8
  store %struct.sv* %30, %struct.sv** %31, align 8
  %32 = load %struct.sv**, %struct.sv*** %sp, align 8
  store %struct.sv** %32, %struct.sv*** @PL_stack_sp, align 8
  %33 = load %struct.op*, %struct.op** @PL_op, align 8
  %op_next = getelementptr inbounds %struct.op, %struct.op* %33, i32 0, i32 0
  %34 = load %struct.op*, %struct.op** %op_next, align 8
  store %struct.op* %34, %struct.op** %retval, align 8
  br label %return

if.end28:                                         ; preds = %if.then24
  br label %if.end29

if.end29:                                         ; preds = %if.end28, %land.lhs.true18, %land.lhs.true14, %if.end10
  %35 = load %struct.sv**, %struct.sv*** %sp, align 8
  %add.ptr30 = getelementptr inbounds %struct.sv*, %struct.sv** %35, i64 -2
  store %struct.sv** %add.ptr30, %struct.sv*** %sp, align 8
  %36 = load %struct.sv**, %struct.sv*** %sp, align 8
  store %struct.sv** %36, %struct.sv*** @PL_stack_sp, align 8
  %37 = load %struct.sv*, %struct.sv** %e, align 8
  %sv_flags31 = getelementptr inbounds %struct.sv, %struct.sv* %37, i32 0, i32 2
  %38 = load i32, i32* %sv_flags31, align 4
  %and32 = and i32 %38, 65280
  %tobool33 = icmp ne i32 %and32, 0
  br i1 %tobool33, label %if.end58, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end29
  %39 = load %struct.sv*, %struct.sv** %e, align 8
  %sv_flags34 = getelementptr inbounds %struct.sv, %struct.sv* %39, i32 0, i32 2
  %40 = load i32, i32* %sv_flags34, align 4
  %and35 = and i32 %40, 255
  %cmp = icmp eq i32 %and35, 8
  br i1 %cmp, label %if.end58, label %lor.lhs.false36

lor.lhs.false36:                                  ; preds = %lor.lhs.false
  %41 = load %struct.sv*, %struct.sv** %e, align 8
  %sv_flags37 = getelementptr inbounds %struct.sv, %struct.sv* %41, i32 0, i32 2
  %42 = load i32, i32* %sv_flags37, align 4
  %and38 = and i32 %42, 16826623
  %cmp39 = icmp eq i32 %and38, 16777226
  br i1 %cmp39, label %if.end58, label %if.then40

if.then40:                                        ; preds = %lor.lhs.false36
  %43 = load %struct.sv*, %struct.sv** %d, align 8
  %sv_flags41 = getelementptr inbounds %struct.sv, %struct.sv* %43, i32 0, i32 2
  %44 = load i32, i32* %sv_flags41, align 4
  %and42 = and i32 %44, 65280
  %tobool43 = icmp ne i32 %and42, 0
  br i1 %tobool43, label %if.then52, label %lor.lhs.false44

lor.lhs.false44:                                  ; preds = %if.then40
  %45 = load %struct.sv*, %struct.sv** %d, align 8
  %sv_flags45 = getelementptr inbounds %struct.sv, %struct.sv* %45, i32 0, i32 2
  %46 = load i32, i32* %sv_flags45, align 4
  %and46 = and i32 %46, 255
  %cmp47 = icmp eq i32 %and46, 8
  br i1 %cmp47, label %if.then52, label %lor.lhs.false48

lor.lhs.false48:                                  ; preds = %lor.lhs.false44
  %47 = load %struct.sv*, %struct.sv** %d, align 8
  %sv_flags49 = getelementptr inbounds %struct.sv, %struct.sv* %47, i32 0, i32 2
  %48 = load i32, i32* %sv_flags49, align 4
  %and50 = and i32 %48, 16826623
  %cmp51 = icmp eq i32 %and50, 16777226
  br i1 %cmp51, label %if.then52, label %if.else55

if.then52:                                        ; preds = %lor.lhs.false48, %lor.lhs.false44, %if.then40
  %49 = load %struct.sv**, %struct.sv*** %sp, align 8
  %incdec.ptr53 = getelementptr inbounds %struct.sv*, %struct.sv** %49, i32 1
  store %struct.sv** %incdec.ptr53, %struct.sv*** %sp, align 8
  store %struct.sv* @PL_sv_no, %struct.sv** %incdec.ptr53, align 8
  %50 = load %struct.sv**, %struct.sv*** %sp, align 8
  store %struct.sv** %50, %struct.sv*** @PL_stack_sp, align 8
  %51 = load %struct.op*, %struct.op** @PL_op, align 8
  %op_next54 = getelementptr inbounds %struct.op, %struct.op* %51, i32 0, i32 0
  %52 = load %struct.op*, %struct.op** %op_next54, align 8
  store %struct.op* %52, %struct.op** %retval, align 8
  br label %return

if.else55:                                        ; preds = %lor.lhs.false48
  %53 = load %struct.sv**, %struct.sv*** %sp, align 8
  %incdec.ptr56 = getelementptr inbounds %struct.sv*, %struct.sv** %53, i32 1
  store %struct.sv** %incdec.ptr56, %struct.sv*** %sp, align 8
  store %struct.sv* @PL_sv_yes, %struct.sv** %incdec.ptr56, align 8
  %54 = load %struct.sv**, %struct.sv*** %sp, align 8
  store %struct.sv** %54, %struct.sv*** @PL_stack_sp, align 8
  %55 = load %struct.op*, %struct.op** @PL_op, align 8
  %op_next57 = getelementptr inbounds %struct.op, %struct.op* %55, i32 0, i32 0
  %56 = load %struct.op*, %struct.op** %op_next57, align 8
  store %struct.op* %56, %struct.op** %retval, align 8
  br label %return

if.end58:                                         ; preds = %lor.lhs.false36, %lor.lhs.false, %if.end29
  %57 = load %struct.sv*, %struct.sv** %e, align 8
  %call59 = call i32 @Perl_sv_isobject(%struct.sv* %57)
  %tobool60 = icmp ne i32 %call59, 0
  br i1 %tobool60, label %land.lhs.true61, label %if.end68

land.lhs.true61:                                  ; preds = %if.end58
  %58 = load %struct.sv*, %struct.sv** %e, align 8
  %sv_u62 = getelementptr inbounds %struct.sv, %struct.sv* %58, i32 0, i32 3
  %svu_rv63 = bitcast %union.anon* %sv_u62 to %struct.sv**
  %59 = load %struct.sv*, %struct.sv** %svu_rv63, align 8
  %sv_flags64 = getelementptr inbounds %struct.sv, %struct.sv* %59, i32 0, i32 2
  %60 = load i32, i32* %sv_flags64, align 4
  %and65 = and i32 %60, 255
  %cmp66 = icmp ne i32 %and65, 8
  br i1 %cmp66, label %if.then67, label %if.end68

if.then67:                                        ; preds = %land.lhs.true61
  call void (i8*, ...) @Perl_croak(i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.108, i64 0, i64 0))
  br label %if.end68

if.end68:                                         ; preds = %if.then67, %land.lhs.true61, %if.end58
  %61 = load %struct.sv*, %struct.sv** %d, align 8
  %call69 = call i32 @Perl_sv_isobject(%struct.sv* %61)
  %tobool70 = icmp ne i32 %call69, 0
  br i1 %tobool70, label %land.lhs.true71, label %if.end78

land.lhs.true71:                                  ; preds = %if.end68
  %62 = load %struct.sv*, %struct.sv** %d, align 8
  %sv_u72 = getelementptr inbounds %struct.sv, %struct.sv* %62, i32 0, i32 3
  %svu_rv73 = bitcast %union.anon* %sv_u72 to %struct.sv**
  %63 = load %struct.sv*, %struct.sv** %svu_rv73, align 8
  %sv_flags74 = getelementptr inbounds %struct.sv, %struct.sv* %63, i32 0, i32 2
  %64 = load i32, i32* %sv_flags74, align 4
  %and75 = and i32 %64, 255
  %cmp76 = icmp ne i32 %and75, 8
  br i1 %cmp76, label %if.then77, label %if.end78

if.then77:                                        ; preds = %land.lhs.true71
  store i8 1, i8* %object_on_left, align 1
  br label %if.end78

if.end78:                                         ; preds = %if.then77, %land.lhs.true71, %if.end68
  %65 = load %struct.sv*, %struct.sv** %e, align 8
  %sv_flags79 = getelementptr inbounds %struct.sv, %struct.sv* %65, i32 0, i32 2
  %66 = load i32, i32* %sv_flags79, align 4
  %and80 = and i32 %66, 2048
  %tobool81 = icmp ne i32 %and80, 0
  br i1 %tobool81, label %land.lhs.true82, label %if.else440

land.lhs.true82:                                  ; preds = %if.end78
  %67 = load %struct.sv*, %struct.sv** %e, align 8
  %sv_u83 = getelementptr inbounds %struct.sv, %struct.sv* %67, i32 0, i32 3
  %svu_rv84 = bitcast %union.anon* %sv_u83 to %struct.sv**
  %68 = load %struct.sv*, %struct.sv** %svu_rv84, align 8
  %sv_flags85 = getelementptr inbounds %struct.sv, %struct.sv* %68, i32 0, i32 2
  %69 = load i32, i32* %sv_flags85, align 4
  %and86 = and i32 %69, 255
  %cmp87 = icmp eq i32 %and86, 13
  br i1 %cmp87, label %if.then88, label %if.else440

if.then88:                                        ; preds = %land.lhs.true82
  %70 = load i8, i8* %object_on_left, align 1
  %tobool89 = trunc i8 %70 to i1
  br i1 %tobool89, label %if.then90, label %if.else91

if.then90:                                        ; preds = %if.then88
  br label %sm_any_sub

if.else91:                                        ; preds = %if.then88
  %71 = load %struct.sv*, %struct.sv** %d, align 8
  %sv_flags92 = getelementptr inbounds %struct.sv, %struct.sv* %71, i32 0, i32 2
  %72 = load i32, i32* %sv_flags92, align 4
  %and93 = and i32 %72, 2048
  %tobool94 = icmp ne i32 %and93, 0
  br i1 %tobool94, label %land.lhs.true95, label %if.else230

land.lhs.true95:                                  ; preds = %if.else91
  %73 = load %struct.sv*, %struct.sv** %d, align 8
  %sv_u96 = getelementptr inbounds %struct.sv, %struct.sv* %73, i32 0, i32 3
  %svu_rv97 = bitcast %union.anon* %sv_u96 to %struct.sv**
  %74 = load %struct.sv*, %struct.sv** %svu_rv97, align 8
  %sv_flags98 = getelementptr inbounds %struct.sv, %struct.sv* %74, i32 0, i32 2
  %75 = load i32, i32* %sv_flags98, align 4
  %and99 = and i32 %75, 255
  %cmp100 = icmp eq i32 %and99, 12
  br i1 %cmp100, label %if.then101, label %if.else230

if.then101:                                       ; preds = %land.lhs.true95
  store i8 1, i8* %andedresults, align 1
  %76 = load %struct.sv*, %struct.sv** %d, align 8
  %sv_u102 = getelementptr inbounds %struct.sv, %struct.sv* %76, i32 0, i32 3
  %svu_rv103 = bitcast %union.anon* %sv_u102 to %struct.sv**
  %77 = load %struct.sv*, %struct.sv** %svu_rv103, align 8
  %78 = bitcast %struct.sv* %77 to %struct.hv*
  store %struct.hv* %78, %struct.hv** %hv, align 8
  %79 = load %struct.hv*, %struct.hv** %hv, align 8
  %call104 = call i32 @Perl_hv_iterinit(%struct.hv* %79)
  store i32 %call104, i32* %numkeys, align 4
  %80 = load i32, i32* %numkeys, align 4
  %cmp105 = icmp eq i32 %80, 0
  br i1 %cmp105, label %if.then106, label %if.end109

if.then106:                                       ; preds = %if.then101
  %81 = load %struct.sv**, %struct.sv*** %sp, align 8
  %incdec.ptr107 = getelementptr inbounds %struct.sv*, %struct.sv** %81, i32 1
  store %struct.sv** %incdec.ptr107, %struct.sv*** %sp, align 8
  store %struct.sv* @PL_sv_yes, %struct.sv** %incdec.ptr107, align 8
  %82 = load %struct.sv**, %struct.sv*** %sp, align 8
  store %struct.sv** %82, %struct.sv*** @PL_stack_sp, align 8
  %83 = load %struct.op*, %struct.op** @PL_op, align 8
  %op_next108 = getelementptr inbounds %struct.op, %struct.op* %83, i32 0, i32 0
  %84 = load %struct.op*, %struct.op** %op_next108, align 8
  store %struct.op* %84, %struct.op** %retval, align 8
  br label %return

if.end109:                                        ; preds = %if.then101
  br label %while.cond

while.cond:                                       ; preds = %if.end222, %if.end109
  %85 = load %struct.hv*, %struct.hv** %hv, align 8
  %call110 = call %struct.he* @Perl_hv_iternext_flags(%struct.hv* %85, i32 0)
  store %struct.he* %call110, %struct.he** %he, align 8
  %tobool111 = icmp ne %struct.he* %call110, null
  br i1 %tobool111, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  call void @Perl_push_scope()
  call void @Perl_save_strlen(i64* @PL_tmps_floor)
  %86 = load i64, i64* @PL_tmps_ix, align 8
  store i64 %86, i64* @PL_tmps_floor, align 8
  br label %do.body

do.body:                                          ; preds = %while.body
  %87 = load i32*, i32** @PL_markstack_ptr, align 8
  %incdec.ptr112 = getelementptr inbounds i32, i32* %87, i32 1
  store i32* %incdec.ptr112, i32** @PL_markstack_ptr, align 8
  store i32* %incdec.ptr112, i32** %mark_stack_entry, align 8
  %88 = load i32*, i32** @PL_markstack_max, align 8
  %cmp113 = icmp eq i32* %incdec.ptr112, %88
  br i1 %cmp113, label %cond.true, label %cond.false

cond.true:                                        ; preds = %do.body
  br i1 true, label %if.then114, label %if.end116

cond.false:                                       ; preds = %do.body
  br i1 false, label %if.then114, label %if.end116

if.then114:                                       ; preds = %cond.false, %cond.true
  %call115 = call i32* @Perl_markstack_grow()
  store i32* %call115, i32** %mark_stack_entry, align 8
  br label %if.end116

if.end116:                                        ; preds = %if.then114, %cond.false, %cond.true
  %89 = load %struct.sv**, %struct.sv*** %sp, align 8
  %90 = load %struct.sv**, %struct.sv*** @PL_stack_base, align 8
  %sub.ptr.lhs.cast = ptrtoint %struct.sv** %89 to i64
  %sub.ptr.rhs.cast = ptrtoint %struct.sv** %90 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 8
  %conv = trunc i64 %sub.ptr.div to i32
  %91 = load i32*, i32** %mark_stack_entry, align 8
  store i32 %conv, i32* %91, align 4
  br label %do.end

do.end:                                           ; preds = %if.end116
  %92 = load %struct.he*, %struct.he** %he, align 8
  %call117 = call %struct.sv* @Perl_hv_iterkeysv(%struct.he* %92)
  %93 = load %struct.sv**, %struct.sv*** %sp, align 8
  %incdec.ptr118 = getelementptr inbounds %struct.sv*, %struct.sv** %93, i32 1
  store %struct.sv** %incdec.ptr118, %struct.sv*** %sp, align 8
  store %struct.sv* %call117, %struct.sv** %incdec.ptr118, align 8
  %94 = load %struct.sv**, %struct.sv*** %sp, align 8
  store %struct.sv** %94, %struct.sv*** @PL_stack_sp, align 8
  %95 = load %struct.sv*, %struct.sv** %e, align 8
  %call119 = call i32 @Perl_call_sv(%struct.sv* %95, i32 2)
  store i32 %call119, i32* %c, align 4
  %96 = load %struct.sv**, %struct.sv*** @PL_stack_sp, align 8
  store %struct.sv** %96, %struct.sv*** %sp, align 8
  %97 = load i32, i32* %c, align 4
  %cmp120 = icmp eq i32 %97, 0
  br i1 %cmp120, label %if.then122, label %if.else123

if.then122:                                       ; preds = %do.end
  store i8 0, i8* %andedresults, align 1
  br label %if.end218

if.else123:                                       ; preds = %do.end
  %98 = load %struct.sv**, %struct.sv*** %sp, align 8
  %incdec.ptr124 = getelementptr inbounds %struct.sv*, %struct.sv** %98, i32 -1
  store %struct.sv** %incdec.ptr124, %struct.sv*** %sp, align 8
  %99 = load %struct.sv*, %struct.sv** %98, align 8
  store %struct.sv* %99, %struct.sv** @PL_Sv, align 8
  %100 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %tobool125 = icmp ne %struct.sv* %100, null
  br i1 %tobool125, label %cond.true126, label %cond.false127

cond.true126:                                     ; preds = %if.else123
  br i1 true, label %land.rhs, label %land.end210

cond.false127:                                    ; preds = %if.else123
  br i1 false, label %land.rhs, label %land.end210

land.rhs:                                         ; preds = %cond.false127, %cond.true126
  %101 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %sv_flags128 = getelementptr inbounds %struct.sv, %struct.sv* %101, i32 0, i32 2
  %102 = load i32, i32* %sv_flags128, align 4
  %and129 = and i32 %102, 2097152
  %tobool130 = icmp ne i32 %and129, 0
  br i1 %tobool130, label %cond.true131, label %cond.false132

cond.true131:                                     ; preds = %land.rhs
  br i1 true, label %cond.true133, label %cond.false136

cond.false132:                                    ; preds = %land.rhs
  br i1 false, label %cond.true133, label %cond.false136

cond.true133:                                     ; preds = %cond.false132, %cond.true131
  %103 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %call134 = call zeroext i1 @Perl_sv_2bool_flags(%struct.sv* %103, i32 2)
  %conv135 = zext i1 %call134 to i32
  br label %cond.end207

cond.false136:                                    ; preds = %cond.false132, %cond.true131
  %104 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %sv_flags137 = getelementptr inbounds %struct.sv, %struct.sv* %104, i32 0, i32 2
  %105 = load i32, i32* %sv_flags137, align 4
  %and138 = and i32 %105, 65280
  %tobool139 = icmp ne i32 %and138, 0
  br i1 %tobool139, label %cond.false151, label %lor.lhs.false140

lor.lhs.false140:                                 ; preds = %cond.false136
  %106 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %sv_flags141 = getelementptr inbounds %struct.sv, %struct.sv* %106, i32 0, i32 2
  %107 = load i32, i32* %sv_flags141, align 4
  %and142 = and i32 %107, 255
  %cmp143 = icmp eq i32 %and142, 8
  br i1 %cmp143, label %cond.false151, label %lor.lhs.false145

lor.lhs.false145:                                 ; preds = %lor.lhs.false140
  %108 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %sv_flags146 = getelementptr inbounds %struct.sv, %struct.sv* %108, i32 0, i32 2
  %109 = load i32, i32* %sv_flags146, align 4
  %and147 = and i32 %109, 16826623
  %cmp148 = icmp eq i32 %and147, 16777226
  br i1 %cmp148, label %cond.false151, label %cond.true150

cond.true150:                                     ; preds = %lor.lhs.false145
  br label %cond.end205

cond.false151:                                    ; preds = %lor.lhs.false145, %lor.lhs.false140, %cond.false136
  %110 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %sv_flags152 = getelementptr inbounds %struct.sv, %struct.sv* %110, i32 0, i32 2
  %111 = load i32, i32* %sv_flags152, align 4
  %and153 = and i32 %111, 1024
  %tobool154 = icmp ne i32 %and153, 0
  br i1 %tobool154, label %cond.true155, label %cond.false171

cond.true155:                                     ; preds = %cond.false151
  %112 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %sv_any156 = getelementptr inbounds %struct.sv, %struct.sv* %112, i32 0, i32 0
  %113 = load i8*, i8** %sv_any156, align 8
  %114 = bitcast i8* %113 to %struct.xpv*
  %tobool157 = icmp ne %struct.xpv* %114, null
  br i1 %tobool157, label %land.rhs158, label %land.end170

land.rhs158:                                      ; preds = %cond.true155
  %115 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %sv_any159 = getelementptr inbounds %struct.sv, %struct.sv* %115, i32 0, i32 0
  %116 = load i8*, i8** %sv_any159, align 8
  %117 = bitcast i8* %116 to %struct.xpv*
  %xpv_cur = getelementptr inbounds %struct.xpv, %struct.xpv* %117, i32 0, i32 2
  %118 = load i64, i64* %xpv_cur, align 8
  %cmp160 = icmp ugt i64 %118, 1
  br i1 %cmp160, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %land.rhs158
  %119 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %sv_any162 = getelementptr inbounds %struct.sv, %struct.sv* %119, i32 0, i32 0
  %120 = load i8*, i8** %sv_any162, align 8
  %121 = bitcast i8* %120 to %struct.xpv*
  %xpv_cur163 = getelementptr inbounds %struct.xpv, %struct.xpv* %121, i32 0, i32 2
  %122 = load i64, i64* %xpv_cur163, align 8
  %tobool164 = icmp ne i64 %122, 0
  br i1 %tobool164, label %land.rhs165, label %land.end

land.rhs165:                                      ; preds = %lor.rhs
  %123 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %sv_u166 = getelementptr inbounds %struct.sv, %struct.sv* %123, i32 0, i32 3
  %svu_pv = bitcast %union.anon* %sv_u166 to i8**
  %124 = load i8*, i8** %svu_pv, align 8
  %125 = load i8, i8* %124, align 1
  %conv167 = sext i8 %125 to i32
  %cmp168 = icmp ne i32 %conv167, 48
  br label %land.end

land.end:                                         ; preds = %land.rhs165, %lor.rhs
  %126 = phi i1 [ false, %lor.rhs ], [ %cmp168, %land.rhs165 ]
  br label %lor.end

lor.end:                                          ; preds = %land.end, %land.rhs158
  %127 = phi i1 [ true, %land.rhs158 ], [ %126, %land.end ]
  br label %land.end170

land.end170:                                      ; preds = %lor.end, %cond.true155
  %128 = phi i1 [ false, %cond.true155 ], [ %127, %lor.end ]
  %land.ext = zext i1 %128 to i32
  br label %cond.end203

cond.false171:                                    ; preds = %cond.false151
  %129 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %sv_flags172 = getelementptr inbounds %struct.sv, %struct.sv* %129, i32 0, i32 2
  %130 = load i32, i32* %sv_flags172, align 4
  %and173 = and i32 %130, 768
  %tobool174 = icmp ne i32 %and173, 0
  br i1 %tobool174, label %cond.true175, label %cond.false200

cond.true175:                                     ; preds = %cond.false171
  %131 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %sv_flags176 = getelementptr inbounds %struct.sv, %struct.sv* %131, i32 0, i32 2
  %132 = load i32, i32* %sv_flags176, align 4
  %and177 = and i32 %132, 256
  %tobool178 = icmp ne i32 %and177, 0
  br i1 %tobool178, label %land.lhs.true179, label %lor.rhs183

land.lhs.true179:                                 ; preds = %cond.true175
  %133 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %sv_any180 = getelementptr inbounds %struct.sv, %struct.sv* %133, i32 0, i32 0
  %134 = load i8*, i8** %sv_any180, align 8
  %135 = bitcast i8* %134 to %struct.xpviv*
  %xiv_u = getelementptr inbounds %struct.xpviv, %struct.xpviv* %135, i32 0, i32 4
  %xivu_iv = bitcast %union._xivu* %xiv_u to i64*
  %136 = load i64, i64* %xivu_iv, align 8
  %cmp181 = icmp ne i64 %136, 0
  br i1 %cmp181, label %lor.end199, label %lor.rhs183

lor.rhs183:                                       ; preds = %land.lhs.true179, %cond.true175
  %137 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %sv_flags184 = getelementptr inbounds %struct.sv, %struct.sv* %137, i32 0, i32 2
  %138 = load i32, i32* %sv_flags184, align 4
  %and185 = and i32 %138, 512
  %tobool186 = icmp ne i32 %and185, 0
  br i1 %tobool186, label %land.rhs187, label %land.end197

land.rhs187:                                      ; preds = %lor.rhs183
  %139 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %sv_any188 = getelementptr inbounds %struct.sv, %struct.sv* %139, i32 0, i32 0
  %140 = load i8*, i8** %sv_any188, align 8
  %141 = bitcast i8* %140 to %struct.xpvnv*
  %xnv_u = getelementptr inbounds %struct.xpvnv, %struct.xpvnv* %141, i32 0, i32 5
  %xnv_nv = bitcast %union._xnvu* %xnv_u to double*
  %142 = load double, double* %xnv_nv, align 8
  %cmp189 = fcmp uno double %142, %142
  br i1 %cmp189, label %lor.end196, label %lor.rhs190

lor.rhs190:                                       ; preds = %land.rhs187
  %143 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %sv_any191 = getelementptr inbounds %struct.sv, %struct.sv* %143, i32 0, i32 0
  %144 = load i8*, i8** %sv_any191, align 8
  %145 = bitcast i8* %144 to %struct.xpvnv*
  %xnv_u192 = getelementptr inbounds %struct.xpvnv, %struct.xpvnv* %145, i32 0, i32 5
  %xnv_nv193 = bitcast %union._xnvu* %xnv_u192 to double*
  %146 = load double, double* %xnv_nv193, align 8
  %cmp194 = fcmp une double %146, 0.000000e+00
  br label %lor.end196

lor.end196:                                       ; preds = %lor.rhs190, %land.rhs187
  %147 = phi i1 [ true, %land.rhs187 ], [ %cmp194, %lor.rhs190 ]
  br label %land.end197

land.end197:                                      ; preds = %lor.end196, %lor.rhs183
  %148 = phi i1 [ false, %lor.rhs183 ], [ %147, %lor.end196 ]
  br label %lor.end199

lor.end199:                                       ; preds = %land.end197, %land.lhs.true179
  %149 = phi i1 [ true, %land.lhs.true179 ], [ %148, %land.end197 ]
  %lor.ext = zext i1 %149 to i32
  br label %cond.end

cond.false200:                                    ; preds = %cond.false171
  %150 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %call201 = call zeroext i1 @Perl_sv_2bool_flags(%struct.sv* %150, i32 0)
  %conv202 = zext i1 %call201 to i32
  br label %cond.end

cond.end:                                         ; preds = %cond.false200, %lor.end199
  %cond = phi i32 [ %lor.ext, %lor.end199 ], [ %conv202, %cond.false200 ]
  br label %cond.end203

cond.end203:                                      ; preds = %cond.end, %land.end170
  %cond204 = phi i32 [ %land.ext, %land.end170 ], [ %cond, %cond.end ]
  br label %cond.end205

cond.end205:                                      ; preds = %cond.end203, %cond.true150
  %cond206 = phi i32 [ 0, %cond.true150 ], [ %cond204, %cond.end203 ]
  br label %cond.end207

cond.end207:                                      ; preds = %cond.end205, %cond.true133
  %cond208 = phi i32 [ %conv135, %cond.true133 ], [ %cond206, %cond.end205 ]
  %tobool209 = icmp ne i32 %cond208, 0
  br label %land.end210

land.end210:                                      ; preds = %cond.end207, %cond.false127, %cond.true126
  %151 = phi i1 [ false, %cond.false127 ], [ false, %cond.true126 ], [ %tobool209, %cond.end207 ]
  br i1 %151, label %land.rhs212, label %land.end215

land.rhs212:                                      ; preds = %land.end210
  %152 = load i8, i8* %andedresults, align 1
  %tobool213 = trunc i8 %152 to i1
  br label %land.end215

land.end215:                                      ; preds = %land.rhs212, %land.end210
  %153 = phi i1 [ false, %land.end210 ], [ %tobool213, %land.rhs212 ]
  %frombool217 = zext i1 %153 to i8
  store i8 %frombool217, i8* %andedresults, align 1
  br label %if.end218

if.end218:                                        ; preds = %land.end215, %if.then122
  %154 = load i64, i64* @PL_tmps_ix, align 8
  %155 = load i64, i64* @PL_tmps_floor, align 8
  %cmp219 = icmp sgt i64 %154, %155
  br i1 %cmp219, label %if.then221, label %if.end222

if.then221:                                       ; preds = %if.end218
  call void @Perl_free_tmps()
  br label %if.end222

if.end222:                                        ; preds = %if.then221, %if.end218
  call void @Perl_pop_scope()
  br label %while.cond

while.end:                                        ; preds = %while.cond
  %156 = load i8, i8* %andedresults, align 1
  %tobool223 = trunc i8 %156 to i1
  br i1 %tobool223, label %if.then224, label %if.else227

if.then224:                                       ; preds = %while.end
  %157 = load %struct.sv**, %struct.sv*** %sp, align 8
  %incdec.ptr225 = getelementptr inbounds %struct.sv*, %struct.sv** %157, i32 1
  store %struct.sv** %incdec.ptr225, %struct.sv*** %sp, align 8
  store %struct.sv* @PL_sv_yes, %struct.sv** %incdec.ptr225, align 8
  %158 = load %struct.sv**, %struct.sv*** %sp, align 8
  store %struct.sv** %158, %struct.sv*** @PL_stack_sp, align 8
  %159 = load %struct.op*, %struct.op** @PL_op, align 8
  %op_next226 = getelementptr inbounds %struct.op, %struct.op* %159, i32 0, i32 0
  %160 = load %struct.op*, %struct.op** %op_next226, align 8
  store %struct.op* %160, %struct.op** %retval, align 8
  br label %return

if.else227:                                       ; preds = %while.end
  %161 = load %struct.sv**, %struct.sv*** %sp, align 8
  %incdec.ptr228 = getelementptr inbounds %struct.sv*, %struct.sv** %161, i32 1
  store %struct.sv** %incdec.ptr228, %struct.sv*** %sp, align 8
  store %struct.sv* @PL_sv_no, %struct.sv** %incdec.ptr228, align 8
  %162 = load %struct.sv**, %struct.sv*** %sp, align 8
  store %struct.sv** %162, %struct.sv*** @PL_stack_sp, align 8
  %163 = load %struct.op*, %struct.op** @PL_op, align 8
  %op_next229 = getelementptr inbounds %struct.op, %struct.op* %163, i32 0, i32 0
  %164 = load %struct.op*, %struct.op** %op_next229, align 8
  store %struct.op* %164, %struct.op** %retval, align 8
  br label %return

if.else230:                                       ; preds = %land.lhs.true95, %if.else91
  %165 = load %struct.sv*, %struct.sv** %d, align 8
  %sv_flags231 = getelementptr inbounds %struct.sv, %struct.sv* %165, i32 0, i32 2
  %166 = load i32, i32* %sv_flags231, align 4
  %and232 = and i32 %166, 2048
  %tobool233 = icmp ne i32 %and232, 0
  br i1 %tobool233, label %land.lhs.true234, label %if.else405

land.lhs.true234:                                 ; preds = %if.else230
  %167 = load %struct.sv*, %struct.sv** %d, align 8
  %sv_u235 = getelementptr inbounds %struct.sv, %struct.sv* %167, i32 0, i32 3
  %svu_rv236 = bitcast %union.anon* %sv_u235 to %struct.sv**
  %168 = load %struct.sv*, %struct.sv** %svu_rv236, align 8
  %sv_flags237 = getelementptr inbounds %struct.sv, %struct.sv* %168, i32 0, i32 2
  %169 = load i32, i32* %sv_flags237, align 4
  %and238 = and i32 %169, 255
  %cmp239 = icmp eq i32 %and238, 11
  br i1 %cmp239, label %if.then241, label %if.else405

if.then241:                                       ; preds = %land.lhs.true234
  store i8 1, i8* %andedresults242, align 1
  %170 = load %struct.sv*, %struct.sv** %d, align 8
  %sv_u243 = getelementptr inbounds %struct.sv, %struct.sv* %170, i32 0, i32 3
  %svu_rv244 = bitcast %union.anon* %sv_u243 to %struct.sv**
  %171 = load %struct.sv*, %struct.sv** %svu_rv244, align 8
  %172 = bitcast %struct.sv* %171 to %struct.av*
  store %struct.av* %172, %struct.av** %av, align 8
  %173 = load %struct.av*, %struct.av** %av, align 8
  %call245 = call i64 @S_av_top_index(%struct.av* %173)
  %conv246 = trunc i64 %call245 to i32
  store i32 %conv246, i32* %len, align 4
  %174 = load i32, i32* %len, align 4
  %cmp247 = icmp eq i32 %174, -1
  br i1 %cmp247, label %if.then249, label %if.end252

if.then249:                                       ; preds = %if.then241
  %175 = load %struct.sv**, %struct.sv*** %sp, align 8
  %incdec.ptr250 = getelementptr inbounds %struct.sv*, %struct.sv** %175, i32 1
  store %struct.sv** %incdec.ptr250, %struct.sv*** %sp, align 8
  store %struct.sv* @PL_sv_yes, %struct.sv** %incdec.ptr250, align 8
  %176 = load %struct.sv**, %struct.sv*** %sp, align 8
  store %struct.sv** %176, %struct.sv*** @PL_stack_sp, align 8
  %177 = load %struct.op*, %struct.op** @PL_op, align 8
  %op_next251 = getelementptr inbounds %struct.op, %struct.op* %177, i32 0, i32 0
  %178 = load %struct.op*, %struct.op** %op_next251, align 8
  store %struct.op* %178, %struct.op** %retval, align 8
  br label %return

if.end252:                                        ; preds = %if.then241
  store i64 0, i64* %i, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end252
  %179 = load i64, i64* %i, align 8
  %180 = load i32, i32* %len, align 4
  %conv253 = sext i32 %180 to i64
  %cmp254 = icmp sle i64 %179, %conv253
  br i1 %cmp254, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %181 = load %struct.av*, %struct.av** %av, align 8
  %182 = load i64, i64* %i, align 8
  %call256 = call %struct.sv** @Perl_av_fetch(%struct.av* %181, i64 %182, i32 0)
  store %struct.sv** %call256, %struct.sv*** %svp, align 8
  call void @Perl_push_scope()
  call void @Perl_save_strlen(i64* @PL_tmps_floor)
  %183 = load i64, i64* @PL_tmps_ix, align 8
  store i64 %183, i64* @PL_tmps_floor, align 8
  br label %do.body257

do.body257:                                       ; preds = %for.body
  %184 = load i32*, i32** @PL_markstack_ptr, align 8
  %incdec.ptr259 = getelementptr inbounds i32, i32* %184, i32 1
  store i32* %incdec.ptr259, i32** @PL_markstack_ptr, align 8
  store i32* %incdec.ptr259, i32** %mark_stack_entry258, align 8
  %185 = load i32*, i32** @PL_markstack_max, align 8
  %cmp260 = icmp eq i32* %incdec.ptr259, %185
  br i1 %cmp260, label %cond.true262, label %cond.false263

cond.true262:                                     ; preds = %do.body257
  br i1 true, label %if.then264, label %if.end266

cond.false263:                                    ; preds = %do.body257
  br i1 false, label %if.then264, label %if.end266

if.then264:                                       ; preds = %cond.false263, %cond.true262
  %call265 = call i32* @Perl_markstack_grow()
  store i32* %call265, i32** %mark_stack_entry258, align 8
  br label %if.end266

if.end266:                                        ; preds = %if.then264, %cond.false263, %cond.true262
  %186 = load %struct.sv**, %struct.sv*** %sp, align 8
  %187 = load %struct.sv**, %struct.sv*** @PL_stack_base, align 8
  %sub.ptr.lhs.cast267 = ptrtoint %struct.sv** %186 to i64
  %sub.ptr.rhs.cast268 = ptrtoint %struct.sv** %187 to i64
  %sub.ptr.sub269 = sub i64 %sub.ptr.lhs.cast267, %sub.ptr.rhs.cast268
  %sub.ptr.div270 = sdiv exact i64 %sub.ptr.sub269, 8
  %conv271 = trunc i64 %sub.ptr.div270 to i32
  %188 = load i32*, i32** %mark_stack_entry258, align 8
  store i32 %conv271, i32* %188, align 4
  br label %do.end272

do.end272:                                        ; preds = %if.end266
  %189 = load %struct.sv**, %struct.sv*** %svp, align 8
  %tobool273 = icmp ne %struct.sv** %189, null
  br i1 %tobool273, label %if.then274, label %if.end276

if.then274:                                       ; preds = %do.end272
  %190 = load %struct.sv**, %struct.sv*** %svp, align 8
  %191 = load %struct.sv*, %struct.sv** %190, align 8
  %192 = load %struct.sv**, %struct.sv*** %sp, align 8
  %incdec.ptr275 = getelementptr inbounds %struct.sv*, %struct.sv** %192, i32 1
  store %struct.sv** %incdec.ptr275, %struct.sv*** %sp, align 8
  store %struct.sv* %191, %struct.sv** %incdec.ptr275, align 8
  br label %if.end276

if.end276:                                        ; preds = %if.then274, %do.end272
  %193 = load %struct.sv**, %struct.sv*** %sp, align 8
  store %struct.sv** %193, %struct.sv*** @PL_stack_sp, align 8
  %194 = load %struct.sv*, %struct.sv** %e, align 8
  %call277 = call i32 @Perl_call_sv(%struct.sv* %194, i32 2)
  store i32 %call277, i32* %c, align 4
  %195 = load %struct.sv**, %struct.sv*** @PL_stack_sp, align 8
  store %struct.sv** %195, %struct.sv*** %sp, align 8
  %196 = load i32, i32* %c, align 4
  %cmp278 = icmp eq i32 %196, 0
  br i1 %cmp278, label %if.then280, label %if.else281

if.then280:                                       ; preds = %if.end276
  store i8 0, i8* %andedresults242, align 1
  br label %if.end393

if.else281:                                       ; preds = %if.end276
  %197 = load %struct.sv**, %struct.sv*** %sp, align 8
  %incdec.ptr282 = getelementptr inbounds %struct.sv*, %struct.sv** %197, i32 -1
  store %struct.sv** %incdec.ptr282, %struct.sv*** %sp, align 8
  %198 = load %struct.sv*, %struct.sv** %197, align 8
  store %struct.sv* %198, %struct.sv** @PL_Sv, align 8
  %199 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %tobool283 = icmp ne %struct.sv* %199, null
  br i1 %tobool283, label %cond.true284, label %cond.false285

cond.true284:                                     ; preds = %if.else281
  br i1 true, label %land.rhs286, label %land.end385

cond.false285:                                    ; preds = %if.else281
  br i1 false, label %land.rhs286, label %land.end385

land.rhs286:                                      ; preds = %cond.false285, %cond.true284
  %200 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %sv_flags287 = getelementptr inbounds %struct.sv, %struct.sv* %200, i32 0, i32 2
  %201 = load i32, i32* %sv_flags287, align 4
  %and288 = and i32 %201, 2097152
  %tobool289 = icmp ne i32 %and288, 0
  br i1 %tobool289, label %cond.true290, label %cond.false291

cond.true290:                                     ; preds = %land.rhs286
  br i1 true, label %cond.true292, label %cond.false295

cond.false291:                                    ; preds = %land.rhs286
  br i1 false, label %cond.true292, label %cond.false295

cond.true292:                                     ; preds = %cond.false291, %cond.true290
  %202 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %call293 = call zeroext i1 @Perl_sv_2bool_flags(%struct.sv* %202, i32 2)
  %conv294 = zext i1 %call293 to i32
  br label %cond.end382

cond.false295:                                    ; preds = %cond.false291, %cond.true290
  %203 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %sv_flags296 = getelementptr inbounds %struct.sv, %struct.sv* %203, i32 0, i32 2
  %204 = load i32, i32* %sv_flags296, align 4
  %and297 = and i32 %204, 65280
  %tobool298 = icmp ne i32 %and297, 0
  br i1 %tobool298, label %cond.false310, label %lor.lhs.false299

lor.lhs.false299:                                 ; preds = %cond.false295
  %205 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %sv_flags300 = getelementptr inbounds %struct.sv, %struct.sv* %205, i32 0, i32 2
  %206 = load i32, i32* %sv_flags300, align 4
  %and301 = and i32 %206, 255
  %cmp302 = icmp eq i32 %and301, 8
  br i1 %cmp302, label %cond.false310, label %lor.lhs.false304

lor.lhs.false304:                                 ; preds = %lor.lhs.false299
  %207 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %sv_flags305 = getelementptr inbounds %struct.sv, %struct.sv* %207, i32 0, i32 2
  %208 = load i32, i32* %sv_flags305, align 4
  %and306 = and i32 %208, 16826623
  %cmp307 = icmp eq i32 %and306, 16777226
  br i1 %cmp307, label %cond.false310, label %cond.true309

cond.true309:                                     ; preds = %lor.lhs.false304
  br label %cond.end380

cond.false310:                                    ; preds = %lor.lhs.false304, %lor.lhs.false299, %cond.false295
  %209 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %sv_flags311 = getelementptr inbounds %struct.sv, %struct.sv* %209, i32 0, i32 2
  %210 = load i32, i32* %sv_flags311, align 4
  %and312 = and i32 %210, 1024
  %tobool313 = icmp ne i32 %and312, 0
  br i1 %tobool313, label %cond.true314, label %cond.false338

cond.true314:                                     ; preds = %cond.false310
  %211 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %sv_any315 = getelementptr inbounds %struct.sv, %struct.sv* %211, i32 0, i32 0
  %212 = load i8*, i8** %sv_any315, align 8
  %213 = bitcast i8* %212 to %struct.xpv*
  %tobool316 = icmp ne %struct.xpv* %213, null
  br i1 %tobool316, label %land.rhs317, label %land.end336

land.rhs317:                                      ; preds = %cond.true314
  %214 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %sv_any318 = getelementptr inbounds %struct.sv, %struct.sv* %214, i32 0, i32 0
  %215 = load i8*, i8** %sv_any318, align 8
  %216 = bitcast i8* %215 to %struct.xpv*
  %xpv_cur319 = getelementptr inbounds %struct.xpv, %struct.xpv* %216, i32 0, i32 2
  %217 = load i64, i64* %xpv_cur319, align 8
  %cmp320 = icmp ugt i64 %217, 1
  br i1 %cmp320, label %lor.end334, label %lor.rhs322

lor.rhs322:                                       ; preds = %land.rhs317
  %218 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %sv_any323 = getelementptr inbounds %struct.sv, %struct.sv* %218, i32 0, i32 0
  %219 = load i8*, i8** %sv_any323, align 8
  %220 = bitcast i8* %219 to %struct.xpv*
  %xpv_cur324 = getelementptr inbounds %struct.xpv, %struct.xpv* %220, i32 0, i32 2
  %221 = load i64, i64* %xpv_cur324, align 8
  %tobool325 = icmp ne i64 %221, 0
  br i1 %tobool325, label %land.rhs326, label %land.end332

land.rhs326:                                      ; preds = %lor.rhs322
  %222 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %sv_u327 = getelementptr inbounds %struct.sv, %struct.sv* %222, i32 0, i32 3
  %svu_pv328 = bitcast %union.anon* %sv_u327 to i8**
  %223 = load i8*, i8** %svu_pv328, align 8
  %224 = load i8, i8* %223, align 1
  %conv329 = sext i8 %224 to i32
  %cmp330 = icmp ne i32 %conv329, 48
  br label %land.end332

land.end332:                                      ; preds = %land.rhs326, %lor.rhs322
  %225 = phi i1 [ false, %lor.rhs322 ], [ %cmp330, %land.rhs326 ]
  br label %lor.end334

lor.end334:                                       ; preds = %land.end332, %land.rhs317
  %226 = phi i1 [ true, %land.rhs317 ], [ %225, %land.end332 ]
  br label %land.end336

land.end336:                                      ; preds = %lor.end334, %cond.true314
  %227 = phi i1 [ false, %cond.true314 ], [ %226, %lor.end334 ]
  %land.ext337 = zext i1 %227 to i32
  br label %cond.end378

cond.false338:                                    ; preds = %cond.false310
  %228 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %sv_flags339 = getelementptr inbounds %struct.sv, %struct.sv* %228, i32 0, i32 2
  %229 = load i32, i32* %sv_flags339, align 4
  %and340 = and i32 %229, 768
  %tobool341 = icmp ne i32 %and340, 0
  br i1 %tobool341, label %cond.true342, label %cond.false373

cond.true342:                                     ; preds = %cond.false338
  %230 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %sv_flags343 = getelementptr inbounds %struct.sv, %struct.sv* %230, i32 0, i32 2
  %231 = load i32, i32* %sv_flags343, align 4
  %and344 = and i32 %231, 256
  %tobool345 = icmp ne i32 %and344, 0
  br i1 %tobool345, label %land.lhs.true346, label %lor.rhs352

land.lhs.true346:                                 ; preds = %cond.true342
  %232 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %sv_any347 = getelementptr inbounds %struct.sv, %struct.sv* %232, i32 0, i32 0
  %233 = load i8*, i8** %sv_any347, align 8
  %234 = bitcast i8* %233 to %struct.xpviv*
  %xiv_u348 = getelementptr inbounds %struct.xpviv, %struct.xpviv* %234, i32 0, i32 4
  %xivu_iv349 = bitcast %union._xivu* %xiv_u348 to i64*
  %235 = load i64, i64* %xivu_iv349, align 8
  %cmp350 = icmp ne i64 %235, 0
  br i1 %cmp350, label %lor.end371, label %lor.rhs352

lor.rhs352:                                       ; preds = %land.lhs.true346, %cond.true342
  %236 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %sv_flags353 = getelementptr inbounds %struct.sv, %struct.sv* %236, i32 0, i32 2
  %237 = load i32, i32* %sv_flags353, align 4
  %and354 = and i32 %237, 512
  %tobool355 = icmp ne i32 %and354, 0
  br i1 %tobool355, label %land.rhs356, label %land.end369

land.rhs356:                                      ; preds = %lor.rhs352
  %238 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %sv_any357 = getelementptr inbounds %struct.sv, %struct.sv* %238, i32 0, i32 0
  %239 = load i8*, i8** %sv_any357, align 8
  %240 = bitcast i8* %239 to %struct.xpvnv*
  %xnv_u358 = getelementptr inbounds %struct.xpvnv, %struct.xpvnv* %240, i32 0, i32 5
  %xnv_nv359 = bitcast %union._xnvu* %xnv_u358 to double*
  %241 = load double, double* %xnv_nv359, align 8
  %cmp360 = fcmp uno double %241, %241
  br i1 %cmp360, label %lor.end367, label %lor.rhs361

lor.rhs361:                                       ; preds = %land.rhs356
  %242 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %sv_any362 = getelementptr inbounds %struct.sv, %struct.sv* %242, i32 0, i32 0
  %243 = load i8*, i8** %sv_any362, align 8
  %244 = bitcast i8* %243 to %struct.xpvnv*
  %xnv_u363 = getelementptr inbounds %struct.xpvnv, %struct.xpvnv* %244, i32 0, i32 5
  %xnv_nv364 = bitcast %union._xnvu* %xnv_u363 to double*
  %245 = load double, double* %xnv_nv364, align 8
  %cmp365 = fcmp une double %245, 0.000000e+00
  br label %lor.end367

lor.end367:                                       ; preds = %lor.rhs361, %land.rhs356
  %246 = phi i1 [ true, %land.rhs356 ], [ %cmp365, %lor.rhs361 ]
  br label %land.end369

land.end369:                                      ; preds = %lor.end367, %lor.rhs352
  %247 = phi i1 [ false, %lor.rhs352 ], [ %246, %lor.end367 ]
  br label %lor.end371

lor.end371:                                       ; preds = %land.end369, %land.lhs.true346
  %248 = phi i1 [ true, %land.lhs.true346 ], [ %247, %land.end369 ]
  %lor.ext372 = zext i1 %248 to i32
  br label %cond.end376

cond.false373:                                    ; preds = %cond.false338
  %249 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %call374 = call zeroext i1 @Perl_sv_2bool_flags(%struct.sv* %249, i32 0)
  %conv375 = zext i1 %call374 to i32
  br label %cond.end376

cond.end376:                                      ; preds = %cond.false373, %lor.end371
  %cond377 = phi i32 [ %lor.ext372, %lor.end371 ], [ %conv375, %cond.false373 ]
  br label %cond.end378

cond.end378:                                      ; preds = %cond.end376, %land.end336
  %cond379 = phi i32 [ %land.ext337, %land.end336 ], [ %cond377, %cond.end376 ]
  br label %cond.end380

cond.end380:                                      ; preds = %cond.end378, %cond.true309
  %cond381 = phi i32 [ 0, %cond.true309 ], [ %cond379, %cond.end378 ]
  br label %cond.end382

cond.end382:                                      ; preds = %cond.end380, %cond.true292
  %cond383 = phi i32 [ %conv294, %cond.true292 ], [ %cond381, %cond.end380 ]
  %tobool384 = icmp ne i32 %cond383, 0
  br label %land.end385

land.end385:                                      ; preds = %cond.end382, %cond.false285, %cond.true284
  %250 = phi i1 [ false, %cond.false285 ], [ false, %cond.true284 ], [ %tobool384, %cond.end382 ]
  br i1 %250, label %land.rhs387, label %land.end390

land.rhs387:                                      ; preds = %land.end385
  %251 = load i8, i8* %andedresults242, align 1
  %tobool388 = trunc i8 %251 to i1
  br label %land.end390

land.end390:                                      ; preds = %land.rhs387, %land.end385
  %252 = phi i1 [ false, %land.end385 ], [ %tobool388, %land.rhs387 ]
  %frombool392 = zext i1 %252 to i8
  store i8 %frombool392, i8* %andedresults242, align 1
  br label %if.end393

if.end393:                                        ; preds = %land.end390, %if.then280
  %253 = load i64, i64* @PL_tmps_ix, align 8
  %254 = load i64, i64* @PL_tmps_floor, align 8
  %cmp394 = icmp sgt i64 %253, %254
  br i1 %cmp394, label %if.then396, label %if.end397

if.then396:                                       ; preds = %if.end393
  call void @Perl_free_tmps()
  br label %if.end397

if.end397:                                        ; preds = %if.then396, %if.end393
  call void @Perl_pop_scope()
  br label %for.inc

for.inc:                                          ; preds = %if.end397
  %255 = load i64, i64* %i, align 8
  %inc = add nsw i64 %255, 1
  store i64 %inc, i64* %i, align 8
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %256 = load i8, i8* %andedresults242, align 1
  %tobool398 = trunc i8 %256 to i1
  br i1 %tobool398, label %if.then399, label %if.else402

if.then399:                                       ; preds = %for.end
  %257 = load %struct.sv**, %struct.sv*** %sp, align 8
  %incdec.ptr400 = getelementptr inbounds %struct.sv*, %struct.sv** %257, i32 1
  store %struct.sv** %incdec.ptr400, %struct.sv*** %sp, align 8
  store %struct.sv* @PL_sv_yes, %struct.sv** %incdec.ptr400, align 8
  %258 = load %struct.sv**, %struct.sv*** %sp, align 8
  store %struct.sv** %258, %struct.sv*** @PL_stack_sp, align 8
  %259 = load %struct.op*, %struct.op** @PL_op, align 8
  %op_next401 = getelementptr inbounds %struct.op, %struct.op* %259, i32 0, i32 0
  %260 = load %struct.op*, %struct.op** %op_next401, align 8
  store %struct.op* %260, %struct.op** %retval, align 8
  br label %return

if.else402:                                       ; preds = %for.end
  %261 = load %struct.sv**, %struct.sv*** %sp, align 8
  %incdec.ptr403 = getelementptr inbounds %struct.sv*, %struct.sv** %261, i32 1
  store %struct.sv** %incdec.ptr403, %struct.sv*** %sp, align 8
  store %struct.sv* @PL_sv_no, %struct.sv** %incdec.ptr403, align 8
  %262 = load %struct.sv**, %struct.sv*** %sp, align 8
  store %struct.sv** %262, %struct.sv*** @PL_stack_sp, align 8
  %263 = load %struct.op*, %struct.op** @PL_op, align 8
  %op_next404 = getelementptr inbounds %struct.op, %struct.op* %263, i32 0, i32 0
  %264 = load %struct.op*, %struct.op** %op_next404, align 8
  store %struct.op* %264, %struct.op** %retval, align 8
  br label %return

if.else405:                                       ; preds = %land.lhs.true234, %if.else230
  br label %sm_any_sub

sm_any_sub:                                       ; preds = %if.else405, %if.then90
  call void @Perl_push_scope()
  call void @Perl_save_strlen(i64* @PL_tmps_floor)
  %265 = load i64, i64* @PL_tmps_ix, align 8
  store i64 %265, i64* @PL_tmps_floor, align 8
  br label %do.body406

do.body406:                                       ; preds = %sm_any_sub
  %266 = load i32*, i32** @PL_markstack_ptr, align 8
  %incdec.ptr408 = getelementptr inbounds i32, i32* %266, i32 1
  store i32* %incdec.ptr408, i32** @PL_markstack_ptr, align 8
  store i32* %incdec.ptr408, i32** %mark_stack_entry407, align 8
  %267 = load i32*, i32** @PL_markstack_max, align 8
  %cmp409 = icmp eq i32* %incdec.ptr408, %267
  br i1 %cmp409, label %cond.true411, label %cond.false412

cond.true411:                                     ; preds = %do.body406
  br i1 true, label %if.then413, label %if.end415

cond.false412:                                    ; preds = %do.body406
  br i1 false, label %if.then413, label %if.end415

if.then413:                                       ; preds = %cond.false412, %cond.true411
  %call414 = call i32* @Perl_markstack_grow()
  store i32* %call414, i32** %mark_stack_entry407, align 8
  br label %if.end415

if.end415:                                        ; preds = %if.then413, %cond.false412, %cond.true411
  %268 = load %struct.sv**, %struct.sv*** %sp, align 8
  %269 = load %struct.sv**, %struct.sv*** @PL_stack_base, align 8
  %sub.ptr.lhs.cast416 = ptrtoint %struct.sv** %268 to i64
  %sub.ptr.rhs.cast417 = ptrtoint %struct.sv** %269 to i64
  %sub.ptr.sub418 = sub i64 %sub.ptr.lhs.cast416, %sub.ptr.rhs.cast417
  %sub.ptr.div419 = sdiv exact i64 %sub.ptr.sub418, 8
  %conv420 = trunc i64 %sub.ptr.div419 to i32
  %270 = load i32*, i32** %mark_stack_entry407, align 8
  store i32 %conv420, i32* %270, align 4
  br label %do.end421

do.end421:                                        ; preds = %if.end415
  %271 = load %struct.sv*, %struct.sv** %d, align 8
  %272 = load %struct.sv**, %struct.sv*** %sp, align 8
  %incdec.ptr422 = getelementptr inbounds %struct.sv*, %struct.sv** %272, i32 1
  store %struct.sv** %incdec.ptr422, %struct.sv*** %sp, align 8
  store %struct.sv* %271, %struct.sv** %incdec.ptr422, align 8
  %273 = load %struct.sv**, %struct.sv*** %sp, align 8
  store %struct.sv** %273, %struct.sv*** @PL_stack_sp, align 8
  %274 = load %struct.sv*, %struct.sv** %e, align 8
  %call423 = call i32 @Perl_call_sv(%struct.sv* %274, i32 2)
  store i32 %call423, i32* %c, align 4
  %275 = load %struct.sv**, %struct.sv*** @PL_stack_sp, align 8
  store %struct.sv** %275, %struct.sv*** %sp, align 8
  %276 = load i32, i32* %c, align 4
  %cmp424 = icmp eq i32 %276, 0
  br i1 %cmp424, label %if.then426, label %if.else428

if.then426:                                       ; preds = %do.end421
  %277 = load %struct.sv**, %struct.sv*** %sp, align 8
  %incdec.ptr427 = getelementptr inbounds %struct.sv*, %struct.sv** %277, i32 1
  store %struct.sv** %incdec.ptr427, %struct.sv*** %sp, align 8
  store %struct.sv* @PL_sv_no, %struct.sv** %incdec.ptr427, align 8
  br label %if.end434

if.else428:                                       ; preds = %do.end421
  %278 = load %struct.sv**, %struct.sv*** %sp, align 8
  %279 = load %struct.sv*, %struct.sv** %278, align 8
  %sv_flags429 = getelementptr inbounds %struct.sv, %struct.sv* %279, i32 0, i32 2
  %280 = load i32, i32* %sv_flags429, align 4
  %and430 = and i32 %280, 524288
  %tobool431 = icmp ne i32 %and430, 0
  br i1 %tobool431, label %if.then432, label %if.end433

if.then432:                                       ; preds = %if.else428
  %281 = load %struct.sv**, %struct.sv*** %sp, align 8
  %282 = load %struct.sv*, %struct.sv** %281, align 8
  %283 = bitcast %struct.sv* %282 to i8*
  %284 = bitcast i8* %283 to %struct.sv*
  call void @S_SvREFCNT_inc_void(%struct.sv* %284)
  br label %if.end433

if.end433:                                        ; preds = %if.then432, %if.else428
  br label %if.end434

if.end434:                                        ; preds = %if.end433, %if.then426
  %285 = load i64, i64* @PL_tmps_ix, align 8
  %286 = load i64, i64* @PL_tmps_floor, align 8
  %cmp435 = icmp sgt i64 %285, %286
  br i1 %cmp435, label %if.then437, label %if.end438

if.then437:                                       ; preds = %if.end434
  call void @Perl_free_tmps()
  br label %if.end438

if.end438:                                        ; preds = %if.then437, %if.end434
  call void @Perl_pop_scope()
  %287 = load %struct.sv**, %struct.sv*** %sp, align 8
  store %struct.sv** %287, %struct.sv*** @PL_stack_sp, align 8
  %288 = load %struct.op*, %struct.op** @PL_op, align 8
  %op_next439 = getelementptr inbounds %struct.op, %struct.op* %288, i32 0, i32 0
  %289 = load %struct.op*, %struct.op** %op_next439, align 8
  store %struct.op* %289, %struct.op** %retval, align 8
  br label %return

if.else440:                                       ; preds = %land.lhs.true82, %if.end78
  %290 = load %struct.sv*, %struct.sv** %e, align 8
  %sv_flags441 = getelementptr inbounds %struct.sv, %struct.sv* %290, i32 0, i32 2
  %291 = load i32, i32* %sv_flags441, align 4
  %and442 = and i32 %291, 2048
  %tobool443 = icmp ne i32 %and442, 0
  br i1 %tobool443, label %land.lhs.true444, label %if.else686

land.lhs.true444:                                 ; preds = %if.else440
  %292 = load %struct.sv*, %struct.sv** %e, align 8
  %sv_u445 = getelementptr inbounds %struct.sv, %struct.sv* %292, i32 0, i32 3
  %svu_rv446 = bitcast %union.anon* %sv_u445 to %struct.sv**
  %293 = load %struct.sv*, %struct.sv** %svu_rv446, align 8
  %sv_flags447 = getelementptr inbounds %struct.sv, %struct.sv* %293, i32 0, i32 2
  %294 = load i32, i32* %sv_flags447, align 4
  %and448 = and i32 %294, 255
  %cmp449 = icmp eq i32 %and448, 12
  br i1 %cmp449, label %if.then451, label %if.else686

if.then451:                                       ; preds = %land.lhs.true444
  %295 = load i8, i8* %object_on_left, align 1
  %tobool452 = trunc i8 %295 to i1
  br i1 %tobool452, label %if.then453, label %if.else454

if.then453:                                       ; preds = %if.then451
  br label %sm_any_hash

if.else454:                                       ; preds = %if.then451
  %296 = load %struct.sv*, %struct.sv** %d, align 8
  %sv_flags455 = getelementptr inbounds %struct.sv, %struct.sv* %296, i32 0, i32 2
  %297 = load i32, i32* %sv_flags455, align 4
  %and456 = and i32 %297, 65280
  %tobool457 = icmp ne i32 %and456, 0
  br i1 %tobool457, label %if.else471, label %lor.lhs.false458

lor.lhs.false458:                                 ; preds = %if.else454
  %298 = load %struct.sv*, %struct.sv** %d, align 8
  %sv_flags459 = getelementptr inbounds %struct.sv, %struct.sv* %298, i32 0, i32 2
  %299 = load i32, i32* %sv_flags459, align 4
  %and460 = and i32 %299, 255
  %cmp461 = icmp eq i32 %and460, 8
  br i1 %cmp461, label %if.else471, label %lor.lhs.false463

lor.lhs.false463:                                 ; preds = %lor.lhs.false458
  %300 = load %struct.sv*, %struct.sv** %d, align 8
  %sv_flags464 = getelementptr inbounds %struct.sv, %struct.sv* %300, i32 0, i32 2
  %301 = load i32, i32* %sv_flags464, align 4
  %and465 = and i32 %301, 16826623
  %cmp466 = icmp eq i32 %and465, 16777226
  br i1 %cmp466, label %if.else471, label %if.then468

if.then468:                                       ; preds = %lor.lhs.false463
  %302 = load %struct.sv**, %struct.sv*** %sp, align 8
  %incdec.ptr469 = getelementptr inbounds %struct.sv*, %struct.sv** %302, i32 1
  store %struct.sv** %incdec.ptr469, %struct.sv*** %sp, align 8
  store %struct.sv* @PL_sv_no, %struct.sv** %incdec.ptr469, align 8
  %303 = load %struct.sv**, %struct.sv*** %sp, align 8
  store %struct.sv** %303, %struct.sv*** @PL_stack_sp, align 8
  %304 = load %struct.op*, %struct.op** @PL_op, align 8
  %op_next470 = getelementptr inbounds %struct.op, %struct.op* %304, i32 0, i32 0
  %305 = load %struct.op*, %struct.op** %op_next470, align 8
  store %struct.op* %305, %struct.op** %retval, align 8
  br label %return

if.else471:                                       ; preds = %lor.lhs.false463, %lor.lhs.false458, %if.else454
  %306 = load %struct.sv*, %struct.sv** %d, align 8
  %sv_flags472 = getelementptr inbounds %struct.sv, %struct.sv* %306, i32 0, i32 2
  %307 = load i32, i32* %sv_flags472, align 4
  %and473 = and i32 %307, 2048
  %tobool474 = icmp ne i32 %and473, 0
  br i1 %tobool474, label %land.lhs.true475, label %if.else598

land.lhs.true475:                                 ; preds = %if.else471
  %308 = load %struct.sv*, %struct.sv** %d, align 8
  %sv_u476 = getelementptr inbounds %struct.sv, %struct.sv* %308, i32 0, i32 3
  %svu_rv477 = bitcast %union.anon* %sv_u476 to %struct.sv**
  %309 = load %struct.sv*, %struct.sv** %svu_rv477, align 8
  %sv_flags478 = getelementptr inbounds %struct.sv, %struct.sv* %309, i32 0, i32 2
  %310 = load i32, i32* %sv_flags478, align 4
  %and479 = and i32 %310, 255
  %cmp480 = icmp eq i32 %and479, 12
  br i1 %cmp480, label %if.then482, label %if.else598

if.then482:                                       ; preds = %land.lhs.true475
  %311 = load %struct.sv*, %struct.sv** %d, align 8
  %sv_u484 = getelementptr inbounds %struct.sv, %struct.sv* %311, i32 0, i32 3
  %svu_rv485 = bitcast %union.anon* %sv_u484 to %struct.sv**
  %312 = load %struct.sv*, %struct.sv** %svu_rv485, align 8
  %313 = bitcast %struct.sv* %312 to i8*
  %314 = bitcast i8* %313 to %struct.hv*
  store %struct.hv* %314, %struct.hv** %other_hv, align 8
  store i32 0, i32* %this_key_count, align 4
  store i32 0, i32* %other_key_count, align 4
  %315 = load %struct.sv*, %struct.sv** %e, align 8
  %sv_u487 = getelementptr inbounds %struct.sv, %struct.sv* %315, i32 0, i32 3
  %svu_rv488 = bitcast %union.anon* %sv_u487 to %struct.sv**
  %316 = load %struct.sv*, %struct.sv** %svu_rv488, align 8
  %317 = bitcast %struct.sv* %316 to i8*
  %318 = bitcast i8* %317 to %struct.hv*
  store %struct.hv* %318, %struct.hv** %hv486, align 8
  %319 = load %struct.hv*, %struct.hv** %hv486, align 8
  %320 = bitcast %struct.hv* %319 to %struct.sv*
  %sv_flags489 = getelementptr inbounds %struct.sv, %struct.sv* %320, i32 0, i32 2
  %321 = load i32, i32* %sv_flags489, align 4
  %and490 = and i32 %321, 8388608
  %tobool491 = icmp ne i32 %and490, 0
  br i1 %tobool491, label %cond.true492, label %cond.false494

cond.true492:                                     ; preds = %if.then482
  %322 = load %struct.hv*, %struct.hv** %hv486, align 8
  %323 = bitcast %struct.hv* %322 to %struct.sv*
  %call493 = call %struct.magic* @Perl_mg_find(%struct.sv* %323, i32 80)
  br label %cond.end495

cond.false494:                                    ; preds = %if.then482
  br label %cond.end495

cond.end495:                                      ; preds = %cond.false494, %cond.true492
  %cond496 = phi %struct.magic* [ %call493, %cond.true492 ], [ null, %cond.false494 ]
  %tobool497 = icmp ne %struct.magic* %cond496, null
  %324 = zext i1 %tobool497 to i64
  %cond498 = select i1 %tobool497, i32 1, i32 0
  %tobool499 = icmp ne i32 %cond498, 0
  %frombool500 = zext i1 %tobool499 to i8
  store i8 %frombool500, i8* %tied, align 1
  %325 = load %struct.hv*, %struct.hv** %other_hv, align 8
  %326 = bitcast %struct.hv* %325 to %struct.sv*
  %sv_flags501 = getelementptr inbounds %struct.sv, %struct.sv* %326, i32 0, i32 2
  %327 = load i32, i32* %sv_flags501, align 4
  %and502 = and i32 %327, 8388608
  %tobool503 = icmp ne i32 %and502, 0
  br i1 %tobool503, label %cond.true504, label %cond.false506

cond.true504:                                     ; preds = %cond.end495
  %328 = load %struct.hv*, %struct.hv** %other_hv, align 8
  %329 = bitcast %struct.hv* %328 to %struct.sv*
  %call505 = call %struct.magic* @Perl_mg_find(%struct.sv* %329, i32 80)
  br label %cond.end507

cond.false506:                                    ; preds = %cond.end495
  br label %cond.end507

cond.end507:                                      ; preds = %cond.false506, %cond.true504
  %cond508 = phi %struct.magic* [ %call505, %cond.true504 ], [ null, %cond.false506 ]
  %tobool509 = icmp ne %struct.magic* %cond508, null
  %330 = zext i1 %tobool509 to i64
  %cond510 = select i1 %tobool509, i32 1, i32 0
  %tobool511 = icmp ne i32 %cond510, 0
  %frombool512 = zext i1 %tobool511 to i8
  store i8 %frombool512, i8* %other_tied, align 1
  %331 = load i8, i8* %tied, align 1
  %tobool513 = trunc i8 %331 to i1
  br i1 %tobool513, label %if.end547, label %if.then514

if.then514:                                       ; preds = %cond.end507
  %332 = load i8, i8* %other_tied, align 1
  %tobool515 = trunc i8 %332 to i1
  br i1 %tobool515, label %if.then516, label %if.else517

if.then516:                                       ; preds = %if.then514
  %333 = load %struct.hv*, %struct.hv** %other_hv, align 8
  store %struct.hv* %333, %struct.hv** %temp, align 8
  %334 = load %struct.hv*, %struct.hv** %hv486, align 8
  store %struct.hv* %334, %struct.hv** %other_hv, align 8
  %335 = load %struct.hv*, %struct.hv** %temp, align 8
  store %struct.hv* %335, %struct.hv** %hv486, align 8
  store i8 1, i8* %tied, align 1
  store i8 0, i8* %other_tied, align 1
  br label %if.end546

if.else517:                                       ; preds = %if.then514
  %336 = load %struct.hv*, %struct.hv** %hv486, align 8
  %sv_any518 = getelementptr inbounds %struct.hv, %struct.hv* %336, i32 0, i32 0
  %337 = load %struct.xpvhv*, %struct.xpvhv** %sv_any518, align 8
  %xhv_keys = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %337, i32 0, i32 2
  %338 = load i64, i64* %xhv_keys, align 8
  %339 = load %struct.hv*, %struct.hv** %hv486, align 8
  %sv_any519 = getelementptr inbounds %struct.hv, %struct.hv* %339, i32 0, i32 0
  %340 = load %struct.xpvhv*, %struct.xpvhv** %sv_any519, align 8
  %341 = bitcast %struct.xpvhv* %340 to %struct.xpvmg*
  %xmg_u = getelementptr inbounds %struct.xpvmg, %struct.xpvmg* %341, i32 0, i32 1
  %xmg_magic = bitcast %union._xmgu* %xmg_u to %struct.magic**
  %342 = load %struct.magic*, %struct.magic** %xmg_magic, align 8
  %tobool520 = icmp ne %struct.magic* %342, null
  br i1 %tobool520, label %cond.true521, label %cond.false523

cond.true521:                                     ; preds = %if.else517
  %343 = load %struct.hv*, %struct.hv** %hv486, align 8
  %call522 = call i32 @Perl_hv_placeholders_get(%struct.hv* %343)
  br label %cond.end524

cond.false523:                                    ; preds = %if.else517
  br label %cond.end524

cond.end524:                                      ; preds = %cond.false523, %cond.true521
  %cond525 = phi i32 [ %call522, %cond.true521 ], [ 0, %cond.false523 ]
  %conv526 = sext i32 %cond525 to i64
  %sub = sub i64 %338, %conv526
  %344 = load %struct.hv*, %struct.hv** %other_hv, align 8
  %sv_any527 = getelementptr inbounds %struct.hv, %struct.hv* %344, i32 0, i32 0
  %345 = load %struct.xpvhv*, %struct.xpvhv** %sv_any527, align 8
  %xhv_keys528 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %345, i32 0, i32 2
  %346 = load i64, i64* %xhv_keys528, align 8
  %347 = load %struct.hv*, %struct.hv** %other_hv, align 8
  %sv_any529 = getelementptr inbounds %struct.hv, %struct.hv* %347, i32 0, i32 0
  %348 = load %struct.xpvhv*, %struct.xpvhv** %sv_any529, align 8
  %349 = bitcast %struct.xpvhv* %348 to %struct.xpvmg*
  %xmg_u530 = getelementptr inbounds %struct.xpvmg, %struct.xpvmg* %349, i32 0, i32 1
  %xmg_magic531 = bitcast %union._xmgu* %xmg_u530 to %struct.magic**
  %350 = load %struct.magic*, %struct.magic** %xmg_magic531, align 8
  %tobool532 = icmp ne %struct.magic* %350, null
  br i1 %tobool532, label %cond.true533, label %cond.false535

cond.true533:                                     ; preds = %cond.end524
  %351 = load %struct.hv*, %struct.hv** %other_hv, align 8
  %call534 = call i32 @Perl_hv_placeholders_get(%struct.hv* %351)
  br label %cond.end536

cond.false535:                                    ; preds = %cond.end524
  br label %cond.end536

cond.end536:                                      ; preds = %cond.false535, %cond.true533
  %cond537 = phi i32 [ %call534, %cond.true533 ], [ 0, %cond.false535 ]
  %conv538 = sext i32 %cond537 to i64
  %sub539 = sub i64 %346, %conv538
  %cmp540 = icmp ne i64 %sub, %sub539
  br i1 %cmp540, label %if.then542, label %if.end545

if.then542:                                       ; preds = %cond.end536
  %352 = load %struct.sv**, %struct.sv*** %sp, align 8
  %incdec.ptr543 = getelementptr inbounds %struct.sv*, %struct.sv** %352, i32 1
  store %struct.sv** %incdec.ptr543, %struct.sv*** %sp, align 8
  store %struct.sv* @PL_sv_no, %struct.sv** %incdec.ptr543, align 8
  %353 = load %struct.sv**, %struct.sv*** %sp, align 8
  store %struct.sv** %353, %struct.sv*** @PL_stack_sp, align 8
  %354 = load %struct.op*, %struct.op** @PL_op, align 8
  %op_next544 = getelementptr inbounds %struct.op, %struct.op* %354, i32 0, i32 0
  %355 = load %struct.op*, %struct.op** %op_next544, align 8
  store %struct.op* %355, %struct.op** %retval, align 8
  br label %return

if.end545:                                        ; preds = %cond.end536
  br label %if.end546

if.end546:                                        ; preds = %if.end545, %if.then516
  br label %if.end547

if.end547:                                        ; preds = %if.end546, %cond.end507
  %356 = load %struct.hv*, %struct.hv** %hv486, align 8
  %call548 = call i32 @Perl_hv_iterinit(%struct.hv* %356)
  br label %while.cond549

while.cond549:                                    ; preds = %if.end563, %if.end547
  %357 = load %struct.hv*, %struct.hv** %hv486, align 8
  %call550 = call %struct.he* @Perl_hv_iternext_flags(%struct.hv* %357, i32 0)
  store %struct.he* %call550, %struct.he** %he483, align 8
  %tobool551 = icmp ne %struct.he* %call550, null
  br i1 %tobool551, label %while.body552, label %while.end564

while.body552:                                    ; preds = %while.cond549
  %358 = load %struct.he*, %struct.he** %he483, align 8
  %call553 = call %struct.sv* @Perl_hv_iterkeysv(%struct.he* %358)
  store %struct.sv* %call553, %struct.sv** %key, align 8
  %359 = load i32, i32* %this_key_count, align 4
  %inc554 = add i32 %359, 1
  store i32 %inc554, i32* %this_key_count, align 4
  %360 = load %struct.hv*, %struct.hv** %other_hv, align 8
  %361 = load %struct.sv*, %struct.sv** %key, align 8
  %call555 = call i8* @Perl_hv_common(%struct.hv* %360, %struct.sv* %361, i8* null, i64 0, i32 0, i32 8, %struct.sv* null, i32 0)
  %tobool556 = icmp ne i8* %call555, null
  br i1 %tobool556, label %cond.true557, label %cond.false558

cond.true557:                                     ; preds = %while.body552
  br i1 true, label %if.end563, label %if.then559

cond.false558:                                    ; preds = %while.body552
  br i1 false, label %if.end563, label %if.then559

if.then559:                                       ; preds = %cond.false558, %cond.true557
  %362 = load %struct.hv*, %struct.hv** %hv486, align 8
  %call560 = call i32 @Perl_hv_iterinit(%struct.hv* %362)
  %363 = load %struct.sv**, %struct.sv*** %sp, align 8
  %incdec.ptr561 = getelementptr inbounds %struct.sv*, %struct.sv** %363, i32 1
  store %struct.sv** %incdec.ptr561, %struct.sv*** %sp, align 8
  store %struct.sv* @PL_sv_no, %struct.sv** %incdec.ptr561, align 8
  %364 = load %struct.sv**, %struct.sv*** %sp, align 8
  store %struct.sv** %364, %struct.sv*** @PL_stack_sp, align 8
  %365 = load %struct.op*, %struct.op** @PL_op, align 8
  %op_next562 = getelementptr inbounds %struct.op, %struct.op* %365, i32 0, i32 0
  %366 = load %struct.op*, %struct.op** %op_next562, align 8
  store %struct.op* %366, %struct.op** %retval, align 8
  br label %return

if.end563:                                        ; preds = %cond.false558, %cond.true557
  br label %while.cond549

while.end564:                                     ; preds = %while.cond549
  %367 = load i8, i8* %other_tied, align 1
  %tobool565 = trunc i8 %367 to i1
  br i1 %tobool565, label %if.then566, label %if.else574

if.then566:                                       ; preds = %while.end564
  %368 = load %struct.hv*, %struct.hv** %other_hv, align 8
  %call567 = call i32 @Perl_hv_iterinit(%struct.hv* %368)
  br label %while.cond568

while.cond568:                                    ; preds = %while.body571, %if.then566
  %369 = load %struct.hv*, %struct.hv** %other_hv, align 8
  %call569 = call %struct.he* @Perl_hv_iternext_flags(%struct.hv* %369, i32 0)
  %tobool570 = icmp ne %struct.he* %call569, null
  br i1 %tobool570, label %while.body571, label %while.end573

while.body571:                                    ; preds = %while.cond568
  %370 = load i32, i32* %other_key_count, align 4
  %inc572 = add i32 %370, 1
  store i32 %inc572, i32* %other_key_count, align 4
  br label %while.cond568

while.end573:                                     ; preds = %while.cond568
  br label %if.end589

if.else574:                                       ; preds = %while.end564
  %371 = load %struct.hv*, %struct.hv** %other_hv, align 8
  %sv_any575 = getelementptr inbounds %struct.hv, %struct.hv* %371, i32 0, i32 0
  %372 = load %struct.xpvhv*, %struct.xpvhv** %sv_any575, align 8
  %xhv_keys576 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %372, i32 0, i32 2
  %373 = load i64, i64* %xhv_keys576, align 8
  %374 = load %struct.hv*, %struct.hv** %other_hv, align 8
  %sv_any577 = getelementptr inbounds %struct.hv, %struct.hv* %374, i32 0, i32 0
  %375 = load %struct.xpvhv*, %struct.xpvhv** %sv_any577, align 8
  %376 = bitcast %struct.xpvhv* %375 to %struct.xpvmg*
  %xmg_u578 = getelementptr inbounds %struct.xpvmg, %struct.xpvmg* %376, i32 0, i32 1
  %xmg_magic579 = bitcast %union._xmgu* %xmg_u578 to %struct.magic**
  %377 = load %struct.magic*, %struct.magic** %xmg_magic579, align 8
  %tobool580 = icmp ne %struct.magic* %377, null
  br i1 %tobool580, label %cond.true581, label %cond.false583

cond.true581:                                     ; preds = %if.else574
  %378 = load %struct.hv*, %struct.hv** %other_hv, align 8
  %call582 = call i32 @Perl_hv_placeholders_get(%struct.hv* %378)
  br label %cond.end584

cond.false583:                                    ; preds = %if.else574
  br label %cond.end584

cond.end584:                                      ; preds = %cond.false583, %cond.true581
  %cond585 = phi i32 [ %call582, %cond.true581 ], [ 0, %cond.false583 ]
  %conv586 = sext i32 %cond585 to i64
  %sub587 = sub i64 %373, %conv586
  %conv588 = trunc i64 %sub587 to i32
  store i32 %conv588, i32* %other_key_count, align 4
  br label %if.end589

if.end589:                                        ; preds = %cond.end584, %while.end573
  %379 = load i32, i32* %this_key_count, align 4
  %380 = load i32, i32* %other_key_count, align 4
  %cmp590 = icmp ne i32 %379, %380
  br i1 %cmp590, label %if.then592, label %if.else595

if.then592:                                       ; preds = %if.end589
  %381 = load %struct.sv**, %struct.sv*** %sp, align 8
  %incdec.ptr593 = getelementptr inbounds %struct.sv*, %struct.sv** %381, i32 1
  store %struct.sv** %incdec.ptr593, %struct.sv*** %sp, align 8
  store %struct.sv* @PL_sv_no, %struct.sv** %incdec.ptr593, align 8
  %382 = load %struct.sv**, %struct.sv*** %sp, align 8
  store %struct.sv** %382, %struct.sv*** @PL_stack_sp, align 8
  %383 = load %struct.op*, %struct.op** @PL_op, align 8
  %op_next594 = getelementptr inbounds %struct.op, %struct.op* %383, i32 0, i32 0
  %384 = load %struct.op*, %struct.op** %op_next594, align 8
  store %struct.op* %384, %struct.op** %retval, align 8
  br label %return

if.else595:                                       ; preds = %if.end589
  %385 = load %struct.sv**, %struct.sv*** %sp, align 8
  %incdec.ptr596 = getelementptr inbounds %struct.sv*, %struct.sv** %385, i32 1
  store %struct.sv** %incdec.ptr596, %struct.sv*** %sp, align 8
  store %struct.sv* @PL_sv_yes, %struct.sv** %incdec.ptr596, align 8
  %386 = load %struct.sv**, %struct.sv*** %sp, align 8
  store %struct.sv** %386, %struct.sv*** @PL_stack_sp, align 8
  %387 = load %struct.op*, %struct.op** @PL_op, align 8
  %op_next597 = getelementptr inbounds %struct.op, %struct.op* %387, i32 0, i32 0
  %388 = load %struct.op*, %struct.op** %op_next597, align 8
  store %struct.op* %388, %struct.op** %retval, align 8
  br label %return

if.else598:                                       ; preds = %land.lhs.true475, %if.else471
  %389 = load %struct.sv*, %struct.sv** %d, align 8
  %sv_flags599 = getelementptr inbounds %struct.sv, %struct.sv* %389, i32 0, i32 2
  %390 = load i32, i32* %sv_flags599, align 4
  %and600 = and i32 %390, 2048
  %tobool601 = icmp ne i32 %and600, 0
  br i1 %tobool601, label %land.lhs.true602, label %if.else639

land.lhs.true602:                                 ; preds = %if.else598
  %391 = load %struct.sv*, %struct.sv** %d, align 8
  %sv_u603 = getelementptr inbounds %struct.sv, %struct.sv* %391, i32 0, i32 3
  %svu_rv604 = bitcast %union.anon* %sv_u603 to %struct.sv**
  %392 = load %struct.sv*, %struct.sv** %svu_rv604, align 8
  %sv_flags605 = getelementptr inbounds %struct.sv, %struct.sv* %392, i32 0, i32 2
  %393 = load i32, i32* %sv_flags605, align 4
  %and606 = and i32 %393, 255
  %cmp607 = icmp eq i32 %and606, 11
  br i1 %cmp607, label %if.then609, label %if.else639

if.then609:                                       ; preds = %land.lhs.true602
  %394 = load %struct.sv*, %struct.sv** %d, align 8
  %sv_u610 = getelementptr inbounds %struct.sv, %struct.sv* %394, i32 0, i32 3
  %svu_rv611 = bitcast %union.anon* %sv_u610 to %struct.sv**
  %395 = load %struct.sv*, %struct.sv** %svu_rv611, align 8
  %396 = bitcast %struct.sv* %395 to i8*
  %397 = bitcast i8* %396 to %struct.av*
  store %struct.av* %397, %struct.av** %other_av, align 8
  %398 = load %struct.av*, %struct.av** %other_av, align 8
  %call612 = call i64 @S_av_top_index(%struct.av* %398)
  %add = add nsw i64 %call612, 1
  store i64 %add, i64* %other_len, align 8
  %399 = load %struct.sv*, %struct.sv** %e, align 8
  %sv_u615 = getelementptr inbounds %struct.sv, %struct.sv* %399, i32 0, i32 3
  %svu_rv616 = bitcast %union.anon* %sv_u615 to %struct.sv**
  %400 = load %struct.sv*, %struct.sv** %svu_rv616, align 8
  %401 = bitcast %struct.sv* %400 to i8*
  %402 = bitcast i8* %401 to %struct.hv*
  store %struct.hv* %402, %struct.hv** %hv614, align 8
  store i64 0, i64* %i613, align 8
  br label %for.cond617

for.cond617:                                      ; preds = %for.inc634, %if.then609
  %403 = load i64, i64* %i613, align 8
  %404 = load i64, i64* %other_len, align 8
  %cmp618 = icmp slt i64 %403, %404
  br i1 %cmp618, label %for.body620, label %for.end636

for.body620:                                      ; preds = %for.cond617
  %405 = load %struct.av*, %struct.av** %other_av, align 8
  %406 = load i64, i64* %i613, align 8
  %call622 = call %struct.sv** @Perl_av_fetch(%struct.av* %405, i64 %406, i32 0)
  store %struct.sv** %call622, %struct.sv*** %svp621, align 8
  %407 = load %struct.sv**, %struct.sv*** %svp621, align 8
  %tobool623 = icmp ne %struct.sv** %407, null
  br i1 %tobool623, label %if.then624, label %if.end633

if.then624:                                       ; preds = %for.body620
  %408 = load %struct.hv*, %struct.hv** %hv614, align 8
  %409 = load %struct.sv**, %struct.sv*** %svp621, align 8
  %410 = load %struct.sv*, %struct.sv** %409, align 8
  %call625 = call i8* @Perl_hv_common(%struct.hv* %408, %struct.sv* %410, i8* null, i64 0, i32 0, i32 8, %struct.sv* null, i32 0)
  %tobool626 = icmp ne i8* %call625, null
  br i1 %tobool626, label %cond.true627, label %cond.false628

cond.true627:                                     ; preds = %if.then624
  br i1 true, label %if.then629, label %if.end632

cond.false628:                                    ; preds = %if.then624
  br i1 false, label %if.then629, label %if.end632

if.then629:                                       ; preds = %cond.false628, %cond.true627
  %411 = load %struct.sv**, %struct.sv*** %sp, align 8
  %incdec.ptr630 = getelementptr inbounds %struct.sv*, %struct.sv** %411, i32 1
  store %struct.sv** %incdec.ptr630, %struct.sv*** %sp, align 8
  store %struct.sv* @PL_sv_yes, %struct.sv** %incdec.ptr630, align 8
  %412 = load %struct.sv**, %struct.sv*** %sp, align 8
  store %struct.sv** %412, %struct.sv*** @PL_stack_sp, align 8
  %413 = load %struct.op*, %struct.op** @PL_op, align 8
  %op_next631 = getelementptr inbounds %struct.op, %struct.op* %413, i32 0, i32 0
  %414 = load %struct.op*, %struct.op** %op_next631, align 8
  store %struct.op* %414, %struct.op** %retval, align 8
  br label %return

if.end632:                                        ; preds = %cond.false628, %cond.true627
  br label %if.end633

if.end633:                                        ; preds = %if.end632, %for.body620
  br label %for.inc634

for.inc634:                                       ; preds = %if.end633
  %415 = load i64, i64* %i613, align 8
  %inc635 = add nsw i64 %415, 1
  store i64 %inc635, i64* %i613, align 8
  br label %for.cond617

for.end636:                                       ; preds = %for.cond617
  %416 = load %struct.sv**, %struct.sv*** %sp, align 8
  %incdec.ptr637 = getelementptr inbounds %struct.sv*, %struct.sv** %416, i32 1
  store %struct.sv** %incdec.ptr637, %struct.sv*** %sp, align 8
  store %struct.sv* @PL_sv_no, %struct.sv** %incdec.ptr637, align 8
  %417 = load %struct.sv**, %struct.sv*** %sp, align 8
  store %struct.sv** %417, %struct.sv*** @PL_stack_sp, align 8
  %418 = load %struct.op*, %struct.op** @PL_op, align 8
  %op_next638 = getelementptr inbounds %struct.op, %struct.op* %418, i32 0, i32 0
  %419 = load %struct.op*, %struct.op** %op_next638, align 8
  store %struct.op* %419, %struct.op** %retval, align 8
  br label %return

if.else639:                                       ; preds = %land.lhs.true602, %if.else598
  %420 = load %struct.sv*, %struct.sv** %d, align 8
  %sv_flags640 = getelementptr inbounds %struct.sv, %struct.sv* %420, i32 0, i32 2
  %421 = load i32, i32* %sv_flags640, align 4
  %and641 = and i32 %421, 2048
  %tobool642 = icmp ne i32 %and641, 0
  br i1 %tobool642, label %land.lhs.true643, label %if.else673

land.lhs.true643:                                 ; preds = %if.else639
  %422 = load %struct.sv*, %struct.sv** %d, align 8
  %sv_u644 = getelementptr inbounds %struct.sv, %struct.sv* %422, i32 0, i32 3
  %svu_rv645 = bitcast %union.anon* %sv_u644 to %struct.sv**
  %423 = load %struct.sv*, %struct.sv** %svu_rv645, align 8
  %sv_flags646 = getelementptr inbounds %struct.sv, %struct.sv* %423, i32 0, i32 2
  %424 = load i32, i32* %sv_flags646, align 4
  %and647 = and i32 %424, 255
  %cmp648 = icmp eq i32 %and647, 8
  br i1 %cmp648, label %if.then650, label %if.else673

if.then650:                                       ; preds = %land.lhs.true643
  br label %sm_regex_hash

sm_regex_hash:                                    ; preds = %if.then1229, %if.then650
  %425 = load %struct.sv*, %struct.sv** %d, align 8
  %sv_u651 = getelementptr inbounds %struct.sv, %struct.sv* %425, i32 0, i32 3
  %svu_rv652 = bitcast %union.anon* %sv_u651 to %struct.sv**
  %426 = load %struct.sv*, %struct.sv** %svu_rv652, align 8
  %427 = bitcast %struct.sv* %426 to %struct.p5rx*
  %call653 = call %struct.pmop* @S_make_matcher(%struct.p5rx* %427)
  store %struct.pmop* %call653, %struct.pmop** %matcher, align 8
  %428 = load %struct.sv*, %struct.sv** %e, align 8
  %sv_u656 = getelementptr inbounds %struct.sv, %struct.sv* %428, i32 0, i32 3
  %svu_rv657 = bitcast %union.anon* %sv_u656 to %struct.sv**
  %429 = load %struct.sv*, %struct.sv** %svu_rv657, align 8
  %430 = bitcast %struct.sv* %429 to i8*
  %431 = bitcast i8* %430 to %struct.hv*
  store %struct.hv* %431, %struct.hv** %hv655, align 8
  %432 = load %struct.hv*, %struct.hv** %hv655, align 8
  %call658 = call i32 @Perl_hv_iterinit(%struct.hv* %432)
  br label %while.cond659

while.cond659:                                    ; preds = %if.end669, %sm_regex_hash
  %433 = load %struct.hv*, %struct.hv** %hv655, align 8
  %call660 = call %struct.he* @Perl_hv_iternext_flags(%struct.hv* %433, i32 0)
  store %struct.he* %call660, %struct.he** %he654, align 8
  %tobool661 = icmp ne %struct.he* %call660, null
  br i1 %tobool661, label %while.body662, label %while.end670

while.body662:                                    ; preds = %while.cond659
  %434 = load %struct.sv**, %struct.sv*** %sp, align 8
  store %struct.sv** %434, %struct.sv*** @PL_stack_sp, align 8
  %435 = load %struct.pmop*, %struct.pmop** %matcher, align 8
  %436 = load %struct.he*, %struct.he** %he654, align 8
  %call663 = call %struct.sv* @Perl_hv_iterkeysv(%struct.he* %436)
  %call664 = call zeroext i1 @S_matcher_matches_sv(%struct.pmop* %435, %struct.sv* %call663)
  br i1 %call664, label %if.then665, label %if.end669

if.then665:                                       ; preds = %while.body662
  %437 = load %struct.sv**, %struct.sv*** @PL_stack_sp, align 8
  store %struct.sv** %437, %struct.sv*** %sp, align 8
  %438 = load %struct.hv*, %struct.hv** %hv655, align 8
  %call666 = call i32 @Perl_hv_iterinit(%struct.hv* %438)
  %439 = load %struct.pmop*, %struct.pmop** %matcher, align 8
  call void @S_destroy_matcher(%struct.pmop* %439)
  %440 = load %struct.sv**, %struct.sv*** %sp, align 8
  %incdec.ptr667 = getelementptr inbounds %struct.sv*, %struct.sv** %440, i32 1
  store %struct.sv** %incdec.ptr667, %struct.sv*** %sp, align 8
  store %struct.sv* @PL_sv_yes, %struct.sv** %incdec.ptr667, align 8
  %441 = load %struct.sv**, %struct.sv*** %sp, align 8
  store %struct.sv** %441, %struct.sv*** @PL_stack_sp, align 8
  %442 = load %struct.op*, %struct.op** @PL_op, align 8
  %op_next668 = getelementptr inbounds %struct.op, %struct.op* %442, i32 0, i32 0
  %443 = load %struct.op*, %struct.op** %op_next668, align 8
  store %struct.op* %443, %struct.op** %retval, align 8
  br label %return

if.end669:                                        ; preds = %while.body662
  %444 = load %struct.sv**, %struct.sv*** @PL_stack_sp, align 8
  store %struct.sv** %444, %struct.sv*** %sp, align 8
  br label %while.cond659

while.end670:                                     ; preds = %while.cond659
  %445 = load %struct.pmop*, %struct.pmop** %matcher, align 8
  call void @S_destroy_matcher(%struct.pmop* %445)
  %446 = load %struct.sv**, %struct.sv*** %sp, align 8
  %incdec.ptr671 = getelementptr inbounds %struct.sv*, %struct.sv** %446, i32 1
  store %struct.sv** %incdec.ptr671, %struct.sv*** %sp, align 8
  store %struct.sv* @PL_sv_no, %struct.sv** %incdec.ptr671, align 8
  %447 = load %struct.sv**, %struct.sv*** %sp, align 8
  store %struct.sv** %447, %struct.sv*** @PL_stack_sp, align 8
  %448 = load %struct.op*, %struct.op** @PL_op, align 8
  %op_next672 = getelementptr inbounds %struct.op, %struct.op* %448, i32 0, i32 0
  %449 = load %struct.op*, %struct.op** %op_next672, align 8
  store %struct.op* %449, %struct.op** %retval, align 8
  br label %return

if.else673:                                       ; preds = %land.lhs.true643, %if.else639
  br label %sm_any_hash

sm_any_hash:                                      ; preds = %if.else673, %if.then453
  %450 = load %struct.sv*, %struct.sv** %e, align 8
  %sv_u674 = getelementptr inbounds %struct.sv, %struct.sv* %450, i32 0, i32 3
  %svu_rv675 = bitcast %union.anon* %sv_u674 to %struct.sv**
  %451 = load %struct.sv*, %struct.sv** %svu_rv675, align 8
  %452 = bitcast %struct.sv* %451 to i8*
  %453 = bitcast i8* %452 to %struct.hv*
  %454 = load %struct.sv*, %struct.sv** %d, align 8
  %call676 = call i8* @Perl_hv_common(%struct.hv* %453, %struct.sv* %454, i8* null, i64 0, i32 0, i32 8, %struct.sv* null, i32 0)
  %tobool677 = icmp ne i8* %call676, null
  br i1 %tobool677, label %cond.true678, label %cond.false679

cond.true678:                                     ; preds = %sm_any_hash
  br i1 true, label %if.then680, label %if.else683

cond.false679:                                    ; preds = %sm_any_hash
  br i1 false, label %if.then680, label %if.else683

if.then680:                                       ; preds = %cond.false679, %cond.true678
  %455 = load %struct.sv**, %struct.sv*** %sp, align 8
  %incdec.ptr681 = getelementptr inbounds %struct.sv*, %struct.sv** %455, i32 1
  store %struct.sv** %incdec.ptr681, %struct.sv*** %sp, align 8
  store %struct.sv* @PL_sv_yes, %struct.sv** %incdec.ptr681, align 8
  %456 = load %struct.sv**, %struct.sv*** %sp, align 8
  store %struct.sv** %456, %struct.sv*** @PL_stack_sp, align 8
  %457 = load %struct.op*, %struct.op** @PL_op, align 8
  %op_next682 = getelementptr inbounds %struct.op, %struct.op* %457, i32 0, i32 0
  %458 = load %struct.op*, %struct.op** %op_next682, align 8
  store %struct.op* %458, %struct.op** %retval, align 8
  br label %return

if.else683:                                       ; preds = %cond.false679, %cond.true678
  %459 = load %struct.sv**, %struct.sv*** %sp, align 8
  %incdec.ptr684 = getelementptr inbounds %struct.sv*, %struct.sv** %459, i32 1
  store %struct.sv** %incdec.ptr684, %struct.sv*** %sp, align 8
  store %struct.sv* @PL_sv_no, %struct.sv** %incdec.ptr684, align 8
  %460 = load %struct.sv**, %struct.sv*** %sp, align 8
  store %struct.sv** %460, %struct.sv*** @PL_stack_sp, align 8
  %461 = load %struct.op*, %struct.op** @PL_op, align 8
  %op_next685 = getelementptr inbounds %struct.op, %struct.op* %461, i32 0, i32 0
  %462 = load %struct.op*, %struct.op** %op_next685, align 8
  store %struct.op* %462, %struct.op** %retval, align 8
  br label %return

if.else686:                                       ; preds = %land.lhs.true444, %if.else440
  %463 = load %struct.sv*, %struct.sv** %e, align 8
  %sv_flags687 = getelementptr inbounds %struct.sv, %struct.sv* %463, i32 0, i32 2
  %464 = load i32, i32* %sv_flags687, align 4
  %and688 = and i32 %464, 2048
  %tobool689 = icmp ne i32 %and688, 0
  br i1 %tobool689, label %land.lhs.true690, label %if.else1205

land.lhs.true690:                                 ; preds = %if.else686
  %465 = load %struct.sv*, %struct.sv** %e, align 8
  %sv_u691 = getelementptr inbounds %struct.sv, %struct.sv* %465, i32 0, i32 3
  %svu_rv692 = bitcast %union.anon* %sv_u691 to %struct.sv**
  %466 = load %struct.sv*, %struct.sv** %svu_rv692, align 8
  %sv_flags693 = getelementptr inbounds %struct.sv, %struct.sv* %466, i32 0, i32 2
  %467 = load i32, i32* %sv_flags693, align 4
  %and694 = and i32 %467, 255
  %cmp695 = icmp eq i32 %and694, 11
  br i1 %cmp695, label %if.then697, label %if.else1205

if.then697:                                       ; preds = %land.lhs.true690
  %468 = load i8, i8* %object_on_left, align 1
  %tobool698 = trunc i8 %468 to i1
  br i1 %tobool698, label %if.then699, label %if.else700

if.then699:                                       ; preds = %if.then697
  br label %sm_any_array

if.else700:                                       ; preds = %if.then697
  %469 = load %struct.sv*, %struct.sv** %d, align 8
  %sv_flags701 = getelementptr inbounds %struct.sv, %struct.sv* %469, i32 0, i32 2
  %470 = load i32, i32* %sv_flags701, align 4
  %and702 = and i32 %470, 2048
  %tobool703 = icmp ne i32 %and702, 0
  br i1 %tobool703, label %land.lhs.true704, label %if.end743

land.lhs.true704:                                 ; preds = %if.else700
  %471 = load %struct.sv*, %struct.sv** %d, align 8
  %sv_u705 = getelementptr inbounds %struct.sv, %struct.sv* %471, i32 0, i32 3
  %svu_rv706 = bitcast %union.anon* %sv_u705 to %struct.sv**
  %472 = load %struct.sv*, %struct.sv** %svu_rv706, align 8
  %sv_flags707 = getelementptr inbounds %struct.sv, %struct.sv* %472, i32 0, i32 2
  %473 = load i32, i32* %sv_flags707, align 4
  %and708 = and i32 %473, 255
  %cmp709 = icmp eq i32 %and708, 12
  br i1 %cmp709, label %if.then711, label %if.end743

if.then711:                                       ; preds = %land.lhs.true704
  %474 = load %struct.sv*, %struct.sv** %e, align 8
  %sv_u713 = getelementptr inbounds %struct.sv, %struct.sv* %474, i32 0, i32 3
  %svu_rv714 = bitcast %union.anon* %sv_u713 to %struct.sv**
  %475 = load %struct.sv*, %struct.sv** %svu_rv714, align 8
  %476 = bitcast %struct.sv* %475 to i8*
  %477 = bitcast i8* %476 to %struct.av*
  store %struct.av* %477, %struct.av** %other_av712, align 8
  %478 = load %struct.av*, %struct.av** %other_av712, align 8
  %call716 = call i64 @S_av_top_index(%struct.av* %478)
  %add717 = add nsw i64 %call716, 1
  store i64 %add717, i64* %other_len715, align 8
  store i64 0, i64* %i718, align 8
  br label %for.cond719

for.cond719:                                      ; preds = %for.inc738, %if.then711
  %479 = load i64, i64* %i718, align 8
  %480 = load i64, i64* %other_len715, align 8
  %cmp720 = icmp slt i64 %479, %480
  br i1 %cmp720, label %for.body722, label %for.end740

for.body722:                                      ; preds = %for.cond719
  %481 = load %struct.av*, %struct.av** %other_av712, align 8
  %482 = load i64, i64* %i718, align 8
  %call724 = call %struct.sv** @Perl_av_fetch(%struct.av* %481, i64 %482, i32 0)
  store %struct.sv** %call724, %struct.sv*** %svp723, align 8
  %483 = load %struct.sv**, %struct.sv*** %svp723, align 8
  %tobool725 = icmp ne %struct.sv** %483, null
  br i1 %tobool725, label %if.then726, label %if.end737

if.then726:                                       ; preds = %for.body722
  %484 = load %struct.sv*, %struct.sv** %d, align 8
  %sv_u727 = getelementptr inbounds %struct.sv, %struct.sv* %484, i32 0, i32 3
  %svu_rv728 = bitcast %union.anon* %sv_u727 to %struct.sv**
  %485 = load %struct.sv*, %struct.sv** %svu_rv728, align 8
  %486 = bitcast %struct.sv* %485 to i8*
  %487 = bitcast i8* %486 to %struct.hv*
  %488 = load %struct.sv**, %struct.sv*** %svp723, align 8
  %489 = load %struct.sv*, %struct.sv** %488, align 8
  %call729 = call i8* @Perl_hv_common(%struct.hv* %487, %struct.sv* %489, i8* null, i64 0, i32 0, i32 8, %struct.sv* null, i32 0)
  %tobool730 = icmp ne i8* %call729, null
  br i1 %tobool730, label %cond.true731, label %cond.false732

cond.true731:                                     ; preds = %if.then726
  br i1 true, label %if.then733, label %if.end736

cond.false732:                                    ; preds = %if.then726
  br i1 false, label %if.then733, label %if.end736

if.then733:                                       ; preds = %cond.false732, %cond.true731
  %490 = load %struct.sv**, %struct.sv*** %sp, align 8
  %incdec.ptr734 = getelementptr inbounds %struct.sv*, %struct.sv** %490, i32 1
  store %struct.sv** %incdec.ptr734, %struct.sv*** %sp, align 8
  store %struct.sv* @PL_sv_yes, %struct.sv** %incdec.ptr734, align 8
  %491 = load %struct.sv**, %struct.sv*** %sp, align 8
  store %struct.sv** %491, %struct.sv*** @PL_stack_sp, align 8
  %492 = load %struct.op*, %struct.op** @PL_op, align 8
  %op_next735 = getelementptr inbounds %struct.op, %struct.op* %492, i32 0, i32 0
  %493 = load %struct.op*, %struct.op** %op_next735, align 8
  store %struct.op* %493, %struct.op** %retval, align 8
  br label %return

if.end736:                                        ; preds = %cond.false732, %cond.true731
  br label %if.end737

if.end737:                                        ; preds = %if.end736, %for.body722
  br label %for.inc738

for.inc738:                                       ; preds = %if.end737
  %494 = load i64, i64* %i718, align 8
  %inc739 = add nsw i64 %494, 1
  store i64 %inc739, i64* %i718, align 8
  br label %for.cond719

for.end740:                                       ; preds = %for.cond719
  %495 = load %struct.sv**, %struct.sv*** %sp, align 8
  %incdec.ptr741 = getelementptr inbounds %struct.sv*, %struct.sv** %495, i32 1
  store %struct.sv** %incdec.ptr741, %struct.sv*** %sp, align 8
  store %struct.sv* @PL_sv_no, %struct.sv** %incdec.ptr741, align 8
  %496 = load %struct.sv**, %struct.sv*** %sp, align 8
  store %struct.sv** %496, %struct.sv*** @PL_stack_sp, align 8
  %497 = load %struct.op*, %struct.op** @PL_op, align 8
  %op_next742 = getelementptr inbounds %struct.op, %struct.op* %497, i32 0, i32 0
  %498 = load %struct.op*, %struct.op** %op_next742, align 8
  store %struct.op* %498, %struct.op** %retval, align 8
  br label %return

if.end743:                                        ; preds = %land.lhs.true704, %if.else700
  br label %if.end744

if.end744:                                        ; preds = %if.end743
  %499 = load %struct.sv*, %struct.sv** %d, align 8
  %sv_flags745 = getelementptr inbounds %struct.sv, %struct.sv* %499, i32 0, i32 2
  %500 = load i32, i32* %sv_flags745, align 4
  %and746 = and i32 %500, 2048
  %tobool747 = icmp ne i32 %and746, 0
  br i1 %tobool747, label %land.lhs.true748, label %if.else978

land.lhs.true748:                                 ; preds = %if.end744
  %501 = load %struct.sv*, %struct.sv** %d, align 8
  %sv_u749 = getelementptr inbounds %struct.sv, %struct.sv* %501, i32 0, i32 3
  %svu_rv750 = bitcast %union.anon* %sv_u749 to %struct.sv**
  %502 = load %struct.sv*, %struct.sv** %svu_rv750, align 8
  %sv_flags751 = getelementptr inbounds %struct.sv, %struct.sv* %502, i32 0, i32 2
  %503 = load i32, i32* %sv_flags751, align 4
  %and752 = and i32 %503, 255
  %cmp753 = icmp eq i32 %and752, 11
  br i1 %cmp753, label %if.then755, label %if.else978

if.then755:                                       ; preds = %land.lhs.true748
  %504 = load %struct.sv*, %struct.sv** %d, align 8
  %sv_u757 = getelementptr inbounds %struct.sv, %struct.sv* %504, i32 0, i32 3
  %svu_rv758 = bitcast %union.anon* %sv_u757 to %struct.sv**
  %505 = load %struct.sv*, %struct.sv** %svu_rv758, align 8
  %506 = bitcast %struct.sv* %505 to i8*
  %507 = bitcast i8* %506 to %struct.av*
  store %struct.av* %507, %struct.av** %other_av756, align 8
  %508 = load %struct.sv*, %struct.sv** %e, align 8
  %sv_u759 = getelementptr inbounds %struct.sv, %struct.sv* %508, i32 0, i32 3
  %svu_rv760 = bitcast %union.anon* %sv_u759 to %struct.sv**
  %509 = load %struct.sv*, %struct.sv** %svu_rv760, align 8
  %510 = bitcast %struct.sv* %509 to i8*
  %511 = bitcast i8* %510 to %struct.av*
  %call761 = call i64 @S_av_top_index(%struct.av* %511)
  %512 = load %struct.av*, %struct.av** %other_av756, align 8
  %call762 = call i64 @S_av_top_index(%struct.av* %512)
  %cmp763 = icmp ne i64 %call761, %call762
  br i1 %cmp763, label %if.then765, label %if.else768

if.then765:                                       ; preds = %if.then755
  %513 = load %struct.sv**, %struct.sv*** %sp, align 8
  %incdec.ptr766 = getelementptr inbounds %struct.sv*, %struct.sv** %513, i32 1
  store %struct.sv** %incdec.ptr766, %struct.sv*** %sp, align 8
  store %struct.sv* @PL_sv_no, %struct.sv** %incdec.ptr766, align 8
  %514 = load %struct.sv**, %struct.sv*** %sp, align 8
  store %struct.sv** %514, %struct.sv*** @PL_stack_sp, align 8
  %515 = load %struct.op*, %struct.op** @PL_op, align 8
  %op_next767 = getelementptr inbounds %struct.op, %struct.op* %515, i32 0, i32 0
  %516 = load %struct.op*, %struct.op** %op_next767, align 8
  store %struct.op* %516, %struct.op** %retval, align 8
  br label %return

if.else768:                                       ; preds = %if.then755
  %517 = load %struct.av*, %struct.av** %other_av756, align 8
  %call771 = call i64 @S_av_top_index(%struct.av* %517)
  store i64 %call771, i64* %other_len770, align 8
  %518 = load %struct.hv*, %struct.hv** %seen_this.addr, align 8
  %cmp772 = icmp eq %struct.hv* null, %518
  br i1 %cmp772, label %if.then774, label %if.end777

if.then774:                                       ; preds = %if.else768
  %call775 = call %struct.sv* @Perl_newSV_type(i32 12)
  %519 = bitcast %struct.sv* %call775 to i8*
  %520 = bitcast i8* %519 to %struct.hv*
  store %struct.hv* %520, %struct.hv** %seen_this.addr, align 8
  %521 = load %struct.hv*, %struct.hv** %seen_this.addr, align 8
  %522 = bitcast %struct.hv* %521 to i8*
  %523 = bitcast i8* %522 to %struct.sv*
  %call776 = call %struct.sv* @Perl_sv_2mortal(%struct.sv* %523)
  br label %if.end777

if.end777:                                        ; preds = %if.then774, %if.else768
  %524 = load %struct.hv*, %struct.hv** %seen_other.addr, align 8
  %cmp778 = icmp eq %struct.hv* null, %524
  br i1 %cmp778, label %if.then780, label %if.end783

if.then780:                                       ; preds = %if.end777
  %call781 = call %struct.sv* @Perl_newSV_type(i32 12)
  %525 = bitcast %struct.sv* %call781 to i8*
  %526 = bitcast i8* %525 to %struct.hv*
  store %struct.hv* %526, %struct.hv** %seen_other.addr, align 8
  %527 = load %struct.hv*, %struct.hv** %seen_other.addr, align 8
  %528 = bitcast %struct.hv* %527 to i8*
  %529 = bitcast i8* %528 to %struct.sv*
  %call782 = call %struct.sv* @Perl_sv_2mortal(%struct.sv* %529)
  br label %if.end783

if.end783:                                        ; preds = %if.then780, %if.end777
  store i64 0, i64* %i769, align 8
  br label %for.cond784

for.cond784:                                      ; preds = %for.inc973, %if.end783
  %530 = load i64, i64* %i769, align 8
  %531 = load i64, i64* %other_len770, align 8
  %cmp785 = icmp sle i64 %530, %531
  br i1 %cmp785, label %for.body787, label %for.end975

for.body787:                                      ; preds = %for.cond784
  %532 = load %struct.sv*, %struct.sv** %e, align 8
  %sv_u788 = getelementptr inbounds %struct.sv, %struct.sv* %532, i32 0, i32 3
  %svu_rv789 = bitcast %union.anon* %sv_u788 to %struct.sv**
  %533 = load %struct.sv*, %struct.sv** %svu_rv789, align 8
  %534 = bitcast %struct.sv* %533 to i8*
  %535 = bitcast i8* %534 to %struct.av*
  %536 = load i64, i64* %i769, align 8
  %call790 = call %struct.sv** @Perl_av_fetch(%struct.av* %535, i64 %536, i32 0)
  store %struct.sv** %call790, %struct.sv*** %this_elem, align 8
  %537 = load %struct.av*, %struct.av** %other_av756, align 8
  %538 = load i64, i64* %i769, align 8
  %call791 = call %struct.sv** @Perl_av_fetch(%struct.av* %537, i64 %538, i32 0)
  store %struct.sv** %call791, %struct.sv*** %other_elem, align 8
  %539 = load %struct.sv**, %struct.sv*** %this_elem, align 8
  %tobool792 = icmp ne %struct.sv** %539, null
  br i1 %tobool792, label %lor.lhs.false793, label %if.then795

lor.lhs.false793:                                 ; preds = %for.body787
  %540 = load %struct.sv**, %struct.sv*** %other_elem, align 8
  %tobool794 = icmp ne %struct.sv** %540, null
  br i1 %tobool794, label %if.else831, label %if.then795

if.then795:                                       ; preds = %lor.lhs.false793, %for.body787
  %541 = load %struct.sv**, %struct.sv*** %this_elem, align 8
  %tobool796 = icmp ne %struct.sv** %541, null
  br i1 %tobool796, label %land.lhs.true797, label %lor.lhs.false811

land.lhs.true797:                                 ; preds = %if.then795
  %542 = load %struct.sv**, %struct.sv*** %this_elem, align 8
  %543 = load %struct.sv*, %struct.sv** %542, align 8
  %sv_flags798 = getelementptr inbounds %struct.sv, %struct.sv* %543, i32 0, i32 2
  %544 = load i32, i32* %sv_flags798, align 4
  %and799 = and i32 %544, 65280
  %tobool800 = icmp ne i32 %and799, 0
  br i1 %tobool800, label %if.then827, label %lor.lhs.false801

lor.lhs.false801:                                 ; preds = %land.lhs.true797
  %545 = load %struct.sv**, %struct.sv*** %this_elem, align 8
  %546 = load %struct.sv*, %struct.sv** %545, align 8
  %sv_flags802 = getelementptr inbounds %struct.sv, %struct.sv* %546, i32 0, i32 2
  %547 = load i32, i32* %sv_flags802, align 4
  %and803 = and i32 %547, 255
  %cmp804 = icmp eq i32 %and803, 8
  br i1 %cmp804, label %if.then827, label %lor.lhs.false806

lor.lhs.false806:                                 ; preds = %lor.lhs.false801
  %548 = load %struct.sv**, %struct.sv*** %this_elem, align 8
  %549 = load %struct.sv*, %struct.sv** %548, align 8
  %sv_flags807 = getelementptr inbounds %struct.sv, %struct.sv* %549, i32 0, i32 2
  %550 = load i32, i32* %sv_flags807, align 4
  %and808 = and i32 %550, 16826623
  %cmp809 = icmp eq i32 %and808, 16777226
  br i1 %cmp809, label %if.then827, label %lor.lhs.false811

lor.lhs.false811:                                 ; preds = %lor.lhs.false806, %if.then795
  %551 = load %struct.sv**, %struct.sv*** %other_elem, align 8
  %tobool812 = icmp ne %struct.sv** %551, null
  br i1 %tobool812, label %land.lhs.true813, label %if.end830

land.lhs.true813:                                 ; preds = %lor.lhs.false811
  %552 = load %struct.sv**, %struct.sv*** %other_elem, align 8
  %553 = load %struct.sv*, %struct.sv** %552, align 8
  %sv_flags814 = getelementptr inbounds %struct.sv, %struct.sv* %553, i32 0, i32 2
  %554 = load i32, i32* %sv_flags814, align 4
  %and815 = and i32 %554, 65280
  %tobool816 = icmp ne i32 %and815, 0
  br i1 %tobool816, label %if.then827, label %lor.lhs.false817

lor.lhs.false817:                                 ; preds = %land.lhs.true813
  %555 = load %struct.sv**, %struct.sv*** %other_elem, align 8
  %556 = load %struct.sv*, %struct.sv** %555, align 8
  %sv_flags818 = getelementptr inbounds %struct.sv, %struct.sv* %556, i32 0, i32 2
  %557 = load i32, i32* %sv_flags818, align 4
  %and819 = and i32 %557, 255
  %cmp820 = icmp eq i32 %and819, 8
  br i1 %cmp820, label %if.then827, label %lor.lhs.false822

lor.lhs.false822:                                 ; preds = %lor.lhs.false817
  %558 = load %struct.sv**, %struct.sv*** %other_elem, align 8
  %559 = load %struct.sv*, %struct.sv** %558, align 8
  %sv_flags823 = getelementptr inbounds %struct.sv, %struct.sv* %559, i32 0, i32 2
  %560 = load i32, i32* %sv_flags823, align 4
  %and824 = and i32 %560, 16826623
  %cmp825 = icmp eq i32 %and824, 16777226
  br i1 %cmp825, label %if.then827, label %if.end830

if.then827:                                       ; preds = %lor.lhs.false822, %lor.lhs.false817, %land.lhs.true813, %lor.lhs.false806, %lor.lhs.false801, %land.lhs.true797
  %561 = load %struct.sv**, %struct.sv*** %sp, align 8
  %incdec.ptr828 = getelementptr inbounds %struct.sv*, %struct.sv** %561, i32 1
  store %struct.sv** %incdec.ptr828, %struct.sv*** %sp, align 8
  store %struct.sv* @PL_sv_no, %struct.sv** %incdec.ptr828, align 8
  %562 = load %struct.sv**, %struct.sv*** %sp, align 8
  store %struct.sv** %562, %struct.sv*** @PL_stack_sp, align 8
  %563 = load %struct.op*, %struct.op** @PL_op, align 8
  %op_next829 = getelementptr inbounds %struct.op, %struct.op* %563, i32 0, i32 0
  %564 = load %struct.op*, %struct.op** %op_next829, align 8
  store %struct.op* %564, %struct.op** %retval, align 8
  br label %return

if.end830:                                        ; preds = %lor.lhs.false822, %lor.lhs.false811
  br label %if.end972

if.else831:                                       ; preds = %lor.lhs.false793
  %565 = load %struct.hv*, %struct.hv** %seen_this.addr, align 8
  %566 = load %struct.sv**, %struct.sv*** %this_elem, align 8
  %567 = load %struct.sv*, %struct.sv** %566, align 8
  %568 = ptrtoint %struct.sv* %567 to i64
  %call832 = call %struct.sv* @Perl_newSViv(i64 %568)
  %call833 = call %struct.sv* @Perl_sv_2mortal(%struct.sv* %call832)
  %call834 = call i8* @Perl_hv_common(%struct.hv* %565, %struct.sv* %call833, i8* null, i64 0, i32 0, i32 8, %struct.sv* null, i32 0)
  %tobool835 = icmp ne i8* %call834, null
  br i1 %tobool835, label %cond.true836, label %cond.false837

cond.true836:                                     ; preds = %if.else831
  br i1 true, label %if.then845, label %lor.lhs.false838

cond.false837:                                    ; preds = %if.else831
  br i1 false, label %if.then845, label %lor.lhs.false838

lor.lhs.false838:                                 ; preds = %cond.false837, %cond.true836
  %569 = load %struct.hv*, %struct.hv** %seen_other.addr, align 8
  %570 = load %struct.sv**, %struct.sv*** %other_elem, align 8
  %571 = load %struct.sv*, %struct.sv** %570, align 8
  %572 = ptrtoint %struct.sv* %571 to i64
  %call839 = call %struct.sv* @Perl_newSViv(i64 %572)
  %call840 = call %struct.sv* @Perl_sv_2mortal(%struct.sv* %call839)
  %call841 = call i8* @Perl_hv_common(%struct.hv* %569, %struct.sv* %call840, i8* null, i64 0, i32 0, i32 8, %struct.sv* null, i32 0)
  %tobool842 = icmp ne i8* %call841, null
  br i1 %tobool842, label %cond.true843, label %cond.false844

cond.true843:                                     ; preds = %lor.lhs.false838
  br i1 true, label %if.then845, label %if.else852

cond.false844:                                    ; preds = %lor.lhs.false838
  br i1 false, label %if.then845, label %if.else852

if.then845:                                       ; preds = %cond.false844, %cond.true843, %cond.false837, %cond.true836
  %573 = load %struct.sv**, %struct.sv*** %this_elem, align 8
  %574 = load %struct.sv*, %struct.sv** %573, align 8
  %575 = load %struct.sv**, %struct.sv*** %other_elem, align 8
  %576 = load %struct.sv*, %struct.sv** %575, align 8
  %cmp846 = icmp ne %struct.sv* %574, %576
  br i1 %cmp846, label %if.then848, label %if.end851

if.then848:                                       ; preds = %if.then845
  %577 = load %struct.sv**, %struct.sv*** %sp, align 8
  %incdec.ptr849 = getelementptr inbounds %struct.sv*, %struct.sv** %577, i32 1
  store %struct.sv** %incdec.ptr849, %struct.sv*** %sp, align 8
  store %struct.sv* @PL_sv_no, %struct.sv** %incdec.ptr849, align 8
  %578 = load %struct.sv**, %struct.sv*** %sp, align 8
  store %struct.sv** %578, %struct.sv*** @PL_stack_sp, align 8
  %579 = load %struct.op*, %struct.op** @PL_op, align 8
  %op_next850 = getelementptr inbounds %struct.op, %struct.op* %579, i32 0, i32 0
  %580 = load %struct.op*, %struct.op** %op_next850, align 8
  store %struct.op* %580, %struct.op** %retval, align 8
  br label %return

if.end851:                                        ; preds = %if.then845
  br label %if.end971

if.else852:                                       ; preds = %cond.false844, %cond.true843
  %581 = load %struct.hv*, %struct.hv** %seen_this.addr, align 8
  %582 = load %struct.sv**, %struct.sv*** %this_elem, align 8
  %583 = load %struct.sv*, %struct.sv** %582, align 8
  %584 = ptrtoint %struct.sv* %583 to i64
  %call853 = call %struct.sv* @Perl_newSViv(i64 %584)
  %call854 = call %struct.sv* @Perl_sv_2mortal(%struct.sv* %call853)
  %call855 = call i8* @Perl_hv_common(%struct.hv* %581, %struct.sv* %call854, i8* null, i64 0, i32 0, i32 4, %struct.sv* @PL_sv_undef, i32 0)
  %585 = bitcast i8* %call855 to %struct.he*
  %586 = load %struct.hv*, %struct.hv** %seen_other.addr, align 8
  %587 = load %struct.sv**, %struct.sv*** %other_elem, align 8
  %588 = load %struct.sv*, %struct.sv** %587, align 8
  %589 = ptrtoint %struct.sv* %588 to i64
  %call856 = call %struct.sv* @Perl_newSViv(i64 %589)
  %call857 = call %struct.sv* @Perl_sv_2mortal(%struct.sv* %call856)
  %call858 = call i8* @Perl_hv_common(%struct.hv* %586, %struct.sv* %call857, i8* null, i64 0, i32 0, i32 4, %struct.sv* @PL_sv_undef, i32 0)
  %590 = bitcast i8* %call858 to %struct.he*
  %591 = load %struct.sv**, %struct.sv*** %other_elem, align 8
  %592 = load %struct.sv*, %struct.sv** %591, align 8
  %593 = load %struct.sv**, %struct.sv*** %sp, align 8
  %incdec.ptr859 = getelementptr inbounds %struct.sv*, %struct.sv** %593, i32 1
  store %struct.sv** %incdec.ptr859, %struct.sv*** %sp, align 8
  store %struct.sv* %592, %struct.sv** %incdec.ptr859, align 8
  %594 = load %struct.sv**, %struct.sv*** %this_elem, align 8
  %595 = load %struct.sv*, %struct.sv** %594, align 8
  %596 = load %struct.sv**, %struct.sv*** %sp, align 8
  %incdec.ptr860 = getelementptr inbounds %struct.sv*, %struct.sv** %596, i32 1
  store %struct.sv** %incdec.ptr860, %struct.sv*** %sp, align 8
  store %struct.sv* %595, %struct.sv** %incdec.ptr860, align 8
  %597 = load %struct.sv**, %struct.sv*** %sp, align 8
  store %struct.sv** %597, %struct.sv*** @PL_stack_sp, align 8
  %598 = load %struct.hv*, %struct.hv** %seen_this.addr, align 8
  %599 = load %struct.hv*, %struct.hv** %seen_other.addr, align 8
  %call861 = call %struct.op* @S_do_smartmatch(%struct.hv* %598, %struct.hv* %599, i1 zeroext false)
  %600 = load %struct.sv**, %struct.sv*** @PL_stack_sp, align 8
  store %struct.sv** %600, %struct.sv*** %sp, align 8
  %601 = load %struct.sv**, %struct.sv*** %sp, align 8
  %incdec.ptr862 = getelementptr inbounds %struct.sv*, %struct.sv** %601, i32 -1
  store %struct.sv** %incdec.ptr862, %struct.sv*** %sp, align 8
  %602 = load %struct.sv*, %struct.sv** %601, align 8
  store %struct.sv* %602, %struct.sv** @PL_Sv, align 8
  %603 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %tobool863 = icmp ne %struct.sv* %603, null
  br i1 %tobool863, label %cond.true864, label %cond.false865

cond.true864:                                     ; preds = %if.else852
  br i1 true, label %land.rhs866, label %land.end965

cond.false865:                                    ; preds = %if.else852
  br i1 false, label %land.rhs866, label %land.end965

land.rhs866:                                      ; preds = %cond.false865, %cond.true864
  %604 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %sv_flags867 = getelementptr inbounds %struct.sv, %struct.sv* %604, i32 0, i32 2
  %605 = load i32, i32* %sv_flags867, align 4
  %and868 = and i32 %605, 2097152
  %tobool869 = icmp ne i32 %and868, 0
  br i1 %tobool869, label %cond.true870, label %cond.false871

cond.true870:                                     ; preds = %land.rhs866
  br i1 true, label %cond.true872, label %cond.false875

cond.false871:                                    ; preds = %land.rhs866
  br i1 false, label %cond.true872, label %cond.false875

cond.true872:                                     ; preds = %cond.false871, %cond.true870
  %606 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %call873 = call zeroext i1 @Perl_sv_2bool_flags(%struct.sv* %606, i32 2)
  %conv874 = zext i1 %call873 to i32
  br label %cond.end962

cond.false875:                                    ; preds = %cond.false871, %cond.true870
  %607 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %sv_flags876 = getelementptr inbounds %struct.sv, %struct.sv* %607, i32 0, i32 2
  %608 = load i32, i32* %sv_flags876, align 4
  %and877 = and i32 %608, 65280
  %tobool878 = icmp ne i32 %and877, 0
  br i1 %tobool878, label %cond.false890, label %lor.lhs.false879

lor.lhs.false879:                                 ; preds = %cond.false875
  %609 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %sv_flags880 = getelementptr inbounds %struct.sv, %struct.sv* %609, i32 0, i32 2
  %610 = load i32, i32* %sv_flags880, align 4
  %and881 = and i32 %610, 255
  %cmp882 = icmp eq i32 %and881, 8
  br i1 %cmp882, label %cond.false890, label %lor.lhs.false884

lor.lhs.false884:                                 ; preds = %lor.lhs.false879
  %611 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %sv_flags885 = getelementptr inbounds %struct.sv, %struct.sv* %611, i32 0, i32 2
  %612 = load i32, i32* %sv_flags885, align 4
  %and886 = and i32 %612, 16826623
  %cmp887 = icmp eq i32 %and886, 16777226
  br i1 %cmp887, label %cond.false890, label %cond.true889

cond.true889:                                     ; preds = %lor.lhs.false884
  br label %cond.end960

cond.false890:                                    ; preds = %lor.lhs.false884, %lor.lhs.false879, %cond.false875
  %613 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %sv_flags891 = getelementptr inbounds %struct.sv, %struct.sv* %613, i32 0, i32 2
  %614 = load i32, i32* %sv_flags891, align 4
  %and892 = and i32 %614, 1024
  %tobool893 = icmp ne i32 %and892, 0
  br i1 %tobool893, label %cond.true894, label %cond.false918

cond.true894:                                     ; preds = %cond.false890
  %615 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %sv_any895 = getelementptr inbounds %struct.sv, %struct.sv* %615, i32 0, i32 0
  %616 = load i8*, i8** %sv_any895, align 8
  %617 = bitcast i8* %616 to %struct.xpv*
  %tobool896 = icmp ne %struct.xpv* %617, null
  br i1 %tobool896, label %land.rhs897, label %land.end916

land.rhs897:                                      ; preds = %cond.true894
  %618 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %sv_any898 = getelementptr inbounds %struct.sv, %struct.sv* %618, i32 0, i32 0
  %619 = load i8*, i8** %sv_any898, align 8
  %620 = bitcast i8* %619 to %struct.xpv*
  %xpv_cur899 = getelementptr inbounds %struct.xpv, %struct.xpv* %620, i32 0, i32 2
  %621 = load i64, i64* %xpv_cur899, align 8
  %cmp900 = icmp ugt i64 %621, 1
  br i1 %cmp900, label %lor.end914, label %lor.rhs902

lor.rhs902:                                       ; preds = %land.rhs897
  %622 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %sv_any903 = getelementptr inbounds %struct.sv, %struct.sv* %622, i32 0, i32 0
  %623 = load i8*, i8** %sv_any903, align 8
  %624 = bitcast i8* %623 to %struct.xpv*
  %xpv_cur904 = getelementptr inbounds %struct.xpv, %struct.xpv* %624, i32 0, i32 2
  %625 = load i64, i64* %xpv_cur904, align 8
  %tobool905 = icmp ne i64 %625, 0
  br i1 %tobool905, label %land.rhs906, label %land.end912

land.rhs906:                                      ; preds = %lor.rhs902
  %626 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %sv_u907 = getelementptr inbounds %struct.sv, %struct.sv* %626, i32 0, i32 3
  %svu_pv908 = bitcast %union.anon* %sv_u907 to i8**
  %627 = load i8*, i8** %svu_pv908, align 8
  %628 = load i8, i8* %627, align 1
  %conv909 = sext i8 %628 to i32
  %cmp910 = icmp ne i32 %conv909, 48
  br label %land.end912

land.end912:                                      ; preds = %land.rhs906, %lor.rhs902
  %629 = phi i1 [ false, %lor.rhs902 ], [ %cmp910, %land.rhs906 ]
  br label %lor.end914

lor.end914:                                       ; preds = %land.end912, %land.rhs897
  %630 = phi i1 [ true, %land.rhs897 ], [ %629, %land.end912 ]
  br label %land.end916

land.end916:                                      ; preds = %lor.end914, %cond.true894
  %631 = phi i1 [ false, %cond.true894 ], [ %630, %lor.end914 ]
  %land.ext917 = zext i1 %631 to i32
  br label %cond.end958

cond.false918:                                    ; preds = %cond.false890
  %632 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %sv_flags919 = getelementptr inbounds %struct.sv, %struct.sv* %632, i32 0, i32 2
  %633 = load i32, i32* %sv_flags919, align 4
  %and920 = and i32 %633, 768
  %tobool921 = icmp ne i32 %and920, 0
  br i1 %tobool921, label %cond.true922, label %cond.false953

cond.true922:                                     ; preds = %cond.false918
  %634 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %sv_flags923 = getelementptr inbounds %struct.sv, %struct.sv* %634, i32 0, i32 2
  %635 = load i32, i32* %sv_flags923, align 4
  %and924 = and i32 %635, 256
  %tobool925 = icmp ne i32 %and924, 0
  br i1 %tobool925, label %land.lhs.true926, label %lor.rhs932

land.lhs.true926:                                 ; preds = %cond.true922
  %636 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %sv_any927 = getelementptr inbounds %struct.sv, %struct.sv* %636, i32 0, i32 0
  %637 = load i8*, i8** %sv_any927, align 8
  %638 = bitcast i8* %637 to %struct.xpviv*
  %xiv_u928 = getelementptr inbounds %struct.xpviv, %struct.xpviv* %638, i32 0, i32 4
  %xivu_iv929 = bitcast %union._xivu* %xiv_u928 to i64*
  %639 = load i64, i64* %xivu_iv929, align 8
  %cmp930 = icmp ne i64 %639, 0
  br i1 %cmp930, label %lor.end951, label %lor.rhs932

lor.rhs932:                                       ; preds = %land.lhs.true926, %cond.true922
  %640 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %sv_flags933 = getelementptr inbounds %struct.sv, %struct.sv* %640, i32 0, i32 2
  %641 = load i32, i32* %sv_flags933, align 4
  %and934 = and i32 %641, 512
  %tobool935 = icmp ne i32 %and934, 0
  br i1 %tobool935, label %land.rhs936, label %land.end949

land.rhs936:                                      ; preds = %lor.rhs932
  %642 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %sv_any937 = getelementptr inbounds %struct.sv, %struct.sv* %642, i32 0, i32 0
  %643 = load i8*, i8** %sv_any937, align 8
  %644 = bitcast i8* %643 to %struct.xpvnv*
  %xnv_u938 = getelementptr inbounds %struct.xpvnv, %struct.xpvnv* %644, i32 0, i32 5
  %xnv_nv939 = bitcast %union._xnvu* %xnv_u938 to double*
  %645 = load double, double* %xnv_nv939, align 8
  %cmp940 = fcmp uno double %645, %645
  br i1 %cmp940, label %lor.end947, label %lor.rhs941

lor.rhs941:                                       ; preds = %land.rhs936
  %646 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %sv_any942 = getelementptr inbounds %struct.sv, %struct.sv* %646, i32 0, i32 0
  %647 = load i8*, i8** %sv_any942, align 8
  %648 = bitcast i8* %647 to %struct.xpvnv*
  %xnv_u943 = getelementptr inbounds %struct.xpvnv, %struct.xpvnv* %648, i32 0, i32 5
  %xnv_nv944 = bitcast %union._xnvu* %xnv_u943 to double*
  %649 = load double, double* %xnv_nv944, align 8
  %cmp945 = fcmp une double %649, 0.000000e+00
  br label %lor.end947

lor.end947:                                       ; preds = %lor.rhs941, %land.rhs936
  %650 = phi i1 [ true, %land.rhs936 ], [ %cmp945, %lor.rhs941 ]
  br label %land.end949

land.end949:                                      ; preds = %lor.end947, %lor.rhs932
  %651 = phi i1 [ false, %lor.rhs932 ], [ %650, %lor.end947 ]
  br label %lor.end951

lor.end951:                                       ; preds = %land.end949, %land.lhs.true926
  %652 = phi i1 [ true, %land.lhs.true926 ], [ %651, %land.end949 ]
  %lor.ext952 = zext i1 %652 to i32
  br label %cond.end956

cond.false953:                                    ; preds = %cond.false918
  %653 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %call954 = call zeroext i1 @Perl_sv_2bool_flags(%struct.sv* %653, i32 0)
  %conv955 = zext i1 %call954 to i32
  br label %cond.end956

cond.end956:                                      ; preds = %cond.false953, %lor.end951
  %cond957 = phi i32 [ %lor.ext952, %lor.end951 ], [ %conv955, %cond.false953 ]
  br label %cond.end958

cond.end958:                                      ; preds = %cond.end956, %land.end916
  %cond959 = phi i32 [ %land.ext917, %land.end916 ], [ %cond957, %cond.end956 ]
  br label %cond.end960

cond.end960:                                      ; preds = %cond.end958, %cond.true889
  %cond961 = phi i32 [ 0, %cond.true889 ], [ %cond959, %cond.end958 ]
  br label %cond.end962

cond.end962:                                      ; preds = %cond.end960, %cond.true872
  %cond963 = phi i32 [ %conv874, %cond.true872 ], [ %cond961, %cond.end960 ]
  %tobool964 = icmp ne i32 %cond963, 0
  br label %land.end965

land.end965:                                      ; preds = %cond.end962, %cond.false865, %cond.true864
  %654 = phi i1 [ false, %cond.false865 ], [ false, %cond.true864 ], [ %tobool964, %cond.end962 ]
  br i1 %654, label %if.end970, label %if.then967

if.then967:                                       ; preds = %land.end965
  %655 = load %struct.sv**, %struct.sv*** %sp, align 8
  %incdec.ptr968 = getelementptr inbounds %struct.sv*, %struct.sv** %655, i32 1
  store %struct.sv** %incdec.ptr968, %struct.sv*** %sp, align 8
  store %struct.sv* @PL_sv_no, %struct.sv** %incdec.ptr968, align 8
  %656 = load %struct.sv**, %struct.sv*** %sp, align 8
  store %struct.sv** %656, %struct.sv*** @PL_stack_sp, align 8
  %657 = load %struct.op*, %struct.op** @PL_op, align 8
  %op_next969 = getelementptr inbounds %struct.op, %struct.op* %657, i32 0, i32 0
  %658 = load %struct.op*, %struct.op** %op_next969, align 8
  store %struct.op* %658, %struct.op** %retval, align 8
  br label %return

if.end970:                                        ; preds = %land.end965
  br label %if.end971

if.end971:                                        ; preds = %if.end970, %if.end851
  br label %if.end972

if.end972:                                        ; preds = %if.end971, %if.end830
  br label %for.inc973

for.inc973:                                       ; preds = %if.end972
  %659 = load i64, i64* %i769, align 8
  %inc974 = add nsw i64 %659, 1
  store i64 %inc974, i64* %i769, align 8
  br label %for.cond784

for.end975:                                       ; preds = %for.cond784
  %660 = load %struct.sv**, %struct.sv*** %sp, align 8
  %incdec.ptr976 = getelementptr inbounds %struct.sv*, %struct.sv** %660, i32 1
  store %struct.sv** %incdec.ptr976, %struct.sv*** %sp, align 8
  store %struct.sv* @PL_sv_yes, %struct.sv** %incdec.ptr976, align 8
  %661 = load %struct.sv**, %struct.sv*** %sp, align 8
  store %struct.sv** %661, %struct.sv*** @PL_stack_sp, align 8
  %662 = load %struct.op*, %struct.op** @PL_op, align 8
  %op_next977 = getelementptr inbounds %struct.op, %struct.op* %662, i32 0, i32 0
  %663 = load %struct.op*, %struct.op** %op_next977, align 8
  store %struct.op* %663, %struct.op** %retval, align 8
  br label %return

if.else978:                                       ; preds = %land.lhs.true748, %if.end744
  %664 = load %struct.sv*, %struct.sv** %d, align 8
  %sv_flags979 = getelementptr inbounds %struct.sv, %struct.sv* %664, i32 0, i32 2
  %665 = load i32, i32* %sv_flags979, align 4
  %and980 = and i32 %665, 2048
  %tobool981 = icmp ne i32 %and980, 0
  br i1 %tobool981, label %land.lhs.true982, label %if.else1019

land.lhs.true982:                                 ; preds = %if.else978
  %666 = load %struct.sv*, %struct.sv** %d, align 8
  %sv_u983 = getelementptr inbounds %struct.sv, %struct.sv* %666, i32 0, i32 3
  %svu_rv984 = bitcast %union.anon* %sv_u983 to %struct.sv**
  %667 = load %struct.sv*, %struct.sv** %svu_rv984, align 8
  %sv_flags985 = getelementptr inbounds %struct.sv, %struct.sv* %667, i32 0, i32 2
  %668 = load i32, i32* %sv_flags985, align 4
  %and986 = and i32 %668, 255
  %cmp987 = icmp eq i32 %and986, 8
  br i1 %cmp987, label %if.then989, label %if.else1019

if.then989:                                       ; preds = %land.lhs.true982
  br label %sm_regex_array

sm_regex_array:                                   ; preds = %if.then1243, %if.then989
  %669 = load %struct.sv*, %struct.sv** %d, align 8
  %sv_u991 = getelementptr inbounds %struct.sv, %struct.sv* %669, i32 0, i32 3
  %svu_rv992 = bitcast %union.anon* %sv_u991 to %struct.sv**
  %670 = load %struct.sv*, %struct.sv** %svu_rv992, align 8
  %671 = bitcast %struct.sv* %670 to %struct.p5rx*
  %call993 = call %struct.pmop* @S_make_matcher(%struct.p5rx* %671)
  store %struct.pmop* %call993, %struct.pmop** %matcher990, align 8
  %672 = load %struct.sv*, %struct.sv** %e, align 8
  %sv_u994 = getelementptr inbounds %struct.sv, %struct.sv* %672, i32 0, i32 3
  %svu_rv995 = bitcast %union.anon* %sv_u994 to %struct.sv**
  %673 = load %struct.sv*, %struct.sv** %svu_rv995, align 8
  %674 = bitcast %struct.sv* %673 to i8*
  %675 = bitcast i8* %674 to %struct.av*
  %call996 = call i64 @S_av_top_index(%struct.av* %675)
  store i64 %call996, i64* %this_len, align 8
  store i64 0, i64* %i997, align 8
  br label %for.cond998

for.cond998:                                      ; preds = %for.inc1014, %sm_regex_array
  %676 = load i64, i64* %i997, align 8
  %677 = load i64, i64* %this_len, align 8
  %cmp999 = icmp sle i64 %676, %677
  br i1 %cmp999, label %for.body1001, label %for.end1016

for.body1001:                                     ; preds = %for.cond998
  %678 = load %struct.sv*, %struct.sv** %e, align 8
  %sv_u1003 = getelementptr inbounds %struct.sv, %struct.sv* %678, i32 0, i32 3
  %svu_rv1004 = bitcast %union.anon* %sv_u1003 to %struct.sv**
  %679 = load %struct.sv*, %struct.sv** %svu_rv1004, align 8
  %680 = bitcast %struct.sv* %679 to i8*
  %681 = bitcast i8* %680 to %struct.av*
  %682 = load i64, i64* %i997, align 8
  %call1005 = call %struct.sv** @Perl_av_fetch(%struct.av* %681, i64 %682, i32 0)
  store %struct.sv** %call1005, %struct.sv*** %svp1002, align 8
  %683 = load %struct.sv**, %struct.sv*** %sp, align 8
  store %struct.sv** %683, %struct.sv*** @PL_stack_sp, align 8
  %684 = load %struct.sv**, %struct.sv*** %svp1002, align 8
  %tobool1006 = icmp ne %struct.sv** %684, null
  br i1 %tobool1006, label %land.lhs.true1007, label %if.end1013

land.lhs.true1007:                                ; preds = %for.body1001
  %685 = load %struct.pmop*, %struct.pmop** %matcher990, align 8
  %686 = load %struct.sv**, %struct.sv*** %svp1002, align 8
  %687 = load %struct.sv*, %struct.sv** %686, align 8
  %call1008 = call zeroext i1 @S_matcher_matches_sv(%struct.pmop* %685, %struct.sv* %687)
  br i1 %call1008, label %if.then1010, label %if.end1013

if.then1010:                                      ; preds = %land.lhs.true1007
  %688 = load %struct.sv**, %struct.sv*** @PL_stack_sp, align 8
  store %struct.sv** %688, %struct.sv*** %sp, align 8
  %689 = load %struct.pmop*, %struct.pmop** %matcher990, align 8
  call void @S_destroy_matcher(%struct.pmop* %689)
  %690 = load %struct.sv**, %struct.sv*** %sp, align 8
  %incdec.ptr1011 = getelementptr inbounds %struct.sv*, %struct.sv** %690, i32 1
  store %struct.sv** %incdec.ptr1011, %struct.sv*** %sp, align 8
  store %struct.sv* @PL_sv_yes, %struct.sv** %incdec.ptr1011, align 8
  %691 = load %struct.sv**, %struct.sv*** %sp, align 8
  store %struct.sv** %691, %struct.sv*** @PL_stack_sp, align 8
  %692 = load %struct.op*, %struct.op** @PL_op, align 8
  %op_next1012 = getelementptr inbounds %struct.op, %struct.op* %692, i32 0, i32 0
  %693 = load %struct.op*, %struct.op** %op_next1012, align 8
  store %struct.op* %693, %struct.op** %retval, align 8
  br label %return

if.end1013:                                       ; preds = %land.lhs.true1007, %for.body1001
  %694 = load %struct.sv**, %struct.sv*** @PL_stack_sp, align 8
  store %struct.sv** %694, %struct.sv*** %sp, align 8
  br label %for.inc1014

for.inc1014:                                      ; preds = %if.end1013
  %695 = load i64, i64* %i997, align 8
  %inc1015 = add nsw i64 %695, 1
  store i64 %inc1015, i64* %i997, align 8
  br label %for.cond998

for.end1016:                                      ; preds = %for.cond998
  %696 = load %struct.pmop*, %struct.pmop** %matcher990, align 8
  call void @S_destroy_matcher(%struct.pmop* %696)
  %697 = load %struct.sv**, %struct.sv*** %sp, align 8
  %incdec.ptr1017 = getelementptr inbounds %struct.sv*, %struct.sv** %697, i32 1
  store %struct.sv** %incdec.ptr1017, %struct.sv*** %sp, align 8
  store %struct.sv* @PL_sv_no, %struct.sv** %incdec.ptr1017, align 8
  %698 = load %struct.sv**, %struct.sv*** %sp, align 8
  store %struct.sv** %698, %struct.sv*** @PL_stack_sp, align 8
  %699 = load %struct.op*, %struct.op** @PL_op, align 8
  %op_next1018 = getelementptr inbounds %struct.op, %struct.op* %699, i32 0, i32 0
  %700 = load %struct.op*, %struct.op** %op_next1018, align 8
  store %struct.op* %700, %struct.op** %retval, align 8
  br label %return

if.else1019:                                      ; preds = %land.lhs.true982, %if.else978
  %701 = load %struct.sv*, %struct.sv** %d, align 8
  %sv_flags1020 = getelementptr inbounds %struct.sv, %struct.sv* %701, i32 0, i32 2
  %702 = load i32, i32* %sv_flags1020, align 4
  %and1021 = and i32 %702, 65280
  %tobool1022 = icmp ne i32 %and1021, 0
  br i1 %tobool1022, label %if.else1071, label %lor.lhs.false1023

lor.lhs.false1023:                                ; preds = %if.else1019
  %703 = load %struct.sv*, %struct.sv** %d, align 8
  %sv_flags1024 = getelementptr inbounds %struct.sv, %struct.sv* %703, i32 0, i32 2
  %704 = load i32, i32* %sv_flags1024, align 4
  %and1025 = and i32 %704, 255
  %cmp1026 = icmp eq i32 %and1025, 8
  br i1 %cmp1026, label %if.else1071, label %lor.lhs.false1028

lor.lhs.false1028:                                ; preds = %lor.lhs.false1023
  %705 = load %struct.sv*, %struct.sv** %d, align 8
  %sv_flags1029 = getelementptr inbounds %struct.sv, %struct.sv* %705, i32 0, i32 2
  %706 = load i32, i32* %sv_flags1029, align 4
  %and1030 = and i32 %706, 16826623
  %cmp1031 = icmp eq i32 %and1030, 16777226
  br i1 %cmp1031, label %if.else1071, label %if.then1033

if.then1033:                                      ; preds = %lor.lhs.false1028
  %707 = load %struct.sv*, %struct.sv** %e, align 8
  %sv_u1035 = getelementptr inbounds %struct.sv, %struct.sv* %707, i32 0, i32 3
  %svu_rv1036 = bitcast %union.anon* %sv_u1035 to %struct.sv**
  %708 = load %struct.sv*, %struct.sv** %svu_rv1036, align 8
  %709 = bitcast %struct.sv* %708 to i8*
  %710 = bitcast i8* %709 to %struct.av*
  %call1037 = call i64 @S_av_top_index(%struct.av* %710)
  store i64 %call1037, i64* %this_len1034, align 8
  store i64 0, i64* %i1038, align 8
  br label %for.cond1039

for.cond1039:                                     ; preds = %for.inc1066, %if.then1033
  %711 = load i64, i64* %i1038, align 8
  %712 = load i64, i64* %this_len1034, align 8
  %cmp1040 = icmp sle i64 %711, %712
  br i1 %cmp1040, label %for.body1042, label %for.end1068

for.body1042:                                     ; preds = %for.cond1039
  %713 = load %struct.sv*, %struct.sv** %e, align 8
  %sv_u1044 = getelementptr inbounds %struct.sv, %struct.sv* %713, i32 0, i32 3
  %svu_rv1045 = bitcast %union.anon* %sv_u1044 to %struct.sv**
  %714 = load %struct.sv*, %struct.sv** %svu_rv1045, align 8
  %715 = bitcast %struct.sv* %714 to i8*
  %716 = bitcast i8* %715 to %struct.av*
  %717 = load i64, i64* %i1038, align 8
  %call1046 = call %struct.sv** @Perl_av_fetch(%struct.av* %716, i64 %717, i32 0)
  store %struct.sv** %call1046, %struct.sv*** %svp1043, align 8
  %718 = load %struct.sv**, %struct.sv*** %svp1043, align 8
  %tobool1047 = icmp ne %struct.sv** %718, null
  br i1 %tobool1047, label %lor.lhs.false1048, label %if.then1062

lor.lhs.false1048:                                ; preds = %for.body1042
  %719 = load %struct.sv**, %struct.sv*** %svp1043, align 8
  %720 = load %struct.sv*, %struct.sv** %719, align 8
  %sv_flags1049 = getelementptr inbounds %struct.sv, %struct.sv* %720, i32 0, i32 2
  %721 = load i32, i32* %sv_flags1049, align 4
  %and1050 = and i32 %721, 65280
  %tobool1051 = icmp ne i32 %and1050, 0
  br i1 %tobool1051, label %if.end1065, label %lor.lhs.false1052

lor.lhs.false1052:                                ; preds = %lor.lhs.false1048
  %722 = load %struct.sv**, %struct.sv*** %svp1043, align 8
  %723 = load %struct.sv*, %struct.sv** %722, align 8
  %sv_flags1053 = getelementptr inbounds %struct.sv, %struct.sv* %723, i32 0, i32 2
  %724 = load i32, i32* %sv_flags1053, align 4
  %and1054 = and i32 %724, 255
  %cmp1055 = icmp eq i32 %and1054, 8
  br i1 %cmp1055, label %if.end1065, label %lor.lhs.false1057

lor.lhs.false1057:                                ; preds = %lor.lhs.false1052
  %725 = load %struct.sv**, %struct.sv*** %svp1043, align 8
  %726 = load %struct.sv*, %struct.sv** %725, align 8
  %sv_flags1058 = getelementptr inbounds %struct.sv, %struct.sv* %726, i32 0, i32 2
  %727 = load i32, i32* %sv_flags1058, align 4
  %and1059 = and i32 %727, 16826623
  %cmp1060 = icmp eq i32 %and1059, 16777226
  br i1 %cmp1060, label %if.end1065, label %if.then1062

if.then1062:                                      ; preds = %lor.lhs.false1057, %for.body1042
  %728 = load %struct.sv**, %struct.sv*** %sp, align 8
  %incdec.ptr1063 = getelementptr inbounds %struct.sv*, %struct.sv** %728, i32 1
  store %struct.sv** %incdec.ptr1063, %struct.sv*** %sp, align 8
  store %struct.sv* @PL_sv_yes, %struct.sv** %incdec.ptr1063, align 8
  %729 = load %struct.sv**, %struct.sv*** %sp, align 8
  store %struct.sv** %729, %struct.sv*** @PL_stack_sp, align 8
  %730 = load %struct.op*, %struct.op** @PL_op, align 8
  %op_next1064 = getelementptr inbounds %struct.op, %struct.op* %730, i32 0, i32 0
  %731 = load %struct.op*, %struct.op** %op_next1064, align 8
  store %struct.op* %731, %struct.op** %retval, align 8
  br label %return

if.end1065:                                       ; preds = %lor.lhs.false1057, %lor.lhs.false1052, %lor.lhs.false1048
  br label %for.inc1066

for.inc1066:                                      ; preds = %if.end1065
  %732 = load i64, i64* %i1038, align 8
  %inc1067 = add nsw i64 %732, 1
  store i64 %inc1067, i64* %i1038, align 8
  br label %for.cond1039

for.end1068:                                      ; preds = %for.cond1039
  %733 = load %struct.sv**, %struct.sv*** %sp, align 8
  %incdec.ptr1069 = getelementptr inbounds %struct.sv*, %struct.sv** %733, i32 1
  store %struct.sv** %incdec.ptr1069, %struct.sv*** %sp, align 8
  store %struct.sv* @PL_sv_no, %struct.sv** %incdec.ptr1069, align 8
  %734 = load %struct.sv**, %struct.sv*** %sp, align 8
  store %struct.sv** %734, %struct.sv*** @PL_stack_sp, align 8
  %735 = load %struct.op*, %struct.op** @PL_op, align 8
  %op_next1070 = getelementptr inbounds %struct.op, %struct.op* %735, i32 0, i32 0
  %736 = load %struct.op*, %struct.op** %op_next1070, align 8
  store %struct.op* %736, %struct.op** %retval, align 8
  br label %return

if.else1071:                                      ; preds = %lor.lhs.false1028, %lor.lhs.false1023, %if.else1019
  br label %sm_any_array

sm_any_array:                                     ; preds = %if.else1071, %if.then699
  %737 = load %struct.sv*, %struct.sv** %e, align 8
  %sv_u1074 = getelementptr inbounds %struct.sv, %struct.sv* %737, i32 0, i32 3
  %svu_rv1075 = bitcast %union.anon* %sv_u1074 to %struct.sv**
  %738 = load %struct.sv*, %struct.sv** %svu_rv1075, align 8
  %739 = bitcast %struct.sv* %738 to i8*
  %740 = bitcast i8* %739 to %struct.av*
  %call1076 = call i64 @S_av_top_index(%struct.av* %740)
  store i64 %call1076, i64* %this_len1073, align 8
  store i64 0, i64* %i1072, align 8
  br label %for.cond1077

for.cond1077:                                     ; preds = %for.inc1200, %sm_any_array
  %741 = load i64, i64* %i1072, align 8
  %742 = load i64, i64* %this_len1073, align 8
  %cmp1078 = icmp sle i64 %741, %742
  br i1 %cmp1078, label %for.body1080, label %for.end1202

for.body1080:                                     ; preds = %for.cond1077
  %743 = load %struct.sv*, %struct.sv** %e, align 8
  %sv_u1082 = getelementptr inbounds %struct.sv, %struct.sv* %743, i32 0, i32 3
  %svu_rv1083 = bitcast %union.anon* %sv_u1082 to %struct.sv**
  %744 = load %struct.sv*, %struct.sv** %svu_rv1083, align 8
  %745 = bitcast %struct.sv* %744 to i8*
  %746 = bitcast i8* %745 to %struct.av*
  %747 = load i64, i64* %i1072, align 8
  %call1084 = call %struct.sv** @Perl_av_fetch(%struct.av* %746, i64 %747, i32 0)
  store %struct.sv** %call1084, %struct.sv*** %svp1081, align 8
  %748 = load %struct.sv**, %struct.sv*** %svp1081, align 8
  %tobool1085 = icmp ne %struct.sv** %748, null
  br i1 %tobool1085, label %if.end1087, label %if.then1086

if.then1086:                                      ; preds = %for.body1080
  br label %for.inc1200

if.end1087:                                       ; preds = %for.body1080
  %749 = load %struct.sv*, %struct.sv** %d, align 8
  %750 = load %struct.sv**, %struct.sv*** %sp, align 8
  %incdec.ptr1088 = getelementptr inbounds %struct.sv*, %struct.sv** %750, i32 1
  store %struct.sv** %incdec.ptr1088, %struct.sv*** %sp, align 8
  store %struct.sv* %749, %struct.sv** %incdec.ptr1088, align 8
  %751 = load %struct.sv**, %struct.sv*** %svp1081, align 8
  %752 = load %struct.sv*, %struct.sv** %751, align 8
  %753 = load %struct.sv**, %struct.sv*** %sp, align 8
  %incdec.ptr1089 = getelementptr inbounds %struct.sv*, %struct.sv** %753, i32 1
  store %struct.sv** %incdec.ptr1089, %struct.sv*** %sp, align 8
  store %struct.sv* %752, %struct.sv** %incdec.ptr1089, align 8
  %754 = load %struct.sv**, %struct.sv*** %sp, align 8
  store %struct.sv** %754, %struct.sv*** @PL_stack_sp, align 8
  %call1090 = call %struct.op* @S_do_smartmatch(%struct.hv* null, %struct.hv* null, i1 zeroext true)
  %755 = load %struct.sv**, %struct.sv*** @PL_stack_sp, align 8
  store %struct.sv** %755, %struct.sv*** %sp, align 8
  %756 = load %struct.sv**, %struct.sv*** %sp, align 8
  %incdec.ptr1091 = getelementptr inbounds %struct.sv*, %struct.sv** %756, i32 -1
  store %struct.sv** %incdec.ptr1091, %struct.sv*** %sp, align 8
  %757 = load %struct.sv*, %struct.sv** %756, align 8
  store %struct.sv* %757, %struct.sv** @PL_Sv, align 8
  %758 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %tobool1092 = icmp ne %struct.sv* %758, null
  br i1 %tobool1092, label %cond.true1093, label %cond.false1094

cond.true1093:                                    ; preds = %if.end1087
  br i1 true, label %land.rhs1095, label %land.end1194

cond.false1094:                                   ; preds = %if.end1087
  br i1 false, label %land.rhs1095, label %land.end1194

land.rhs1095:                                     ; preds = %cond.false1094, %cond.true1093
  %759 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %sv_flags1096 = getelementptr inbounds %struct.sv, %struct.sv* %759, i32 0, i32 2
  %760 = load i32, i32* %sv_flags1096, align 4
  %and1097 = and i32 %760, 2097152
  %tobool1098 = icmp ne i32 %and1097, 0
  br i1 %tobool1098, label %cond.true1099, label %cond.false1100

cond.true1099:                                    ; preds = %land.rhs1095
  br i1 true, label %cond.true1101, label %cond.false1104

cond.false1100:                                   ; preds = %land.rhs1095
  br i1 false, label %cond.true1101, label %cond.false1104

cond.true1101:                                    ; preds = %cond.false1100, %cond.true1099
  %761 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %call1102 = call zeroext i1 @Perl_sv_2bool_flags(%struct.sv* %761, i32 2)
  %conv1103 = zext i1 %call1102 to i32
  br label %cond.end1191

cond.false1104:                                   ; preds = %cond.false1100, %cond.true1099
  %762 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %sv_flags1105 = getelementptr inbounds %struct.sv, %struct.sv* %762, i32 0, i32 2
  %763 = load i32, i32* %sv_flags1105, align 4
  %and1106 = and i32 %763, 65280
  %tobool1107 = icmp ne i32 %and1106, 0
  br i1 %tobool1107, label %cond.false1119, label %lor.lhs.false1108

lor.lhs.false1108:                                ; preds = %cond.false1104
  %764 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %sv_flags1109 = getelementptr inbounds %struct.sv, %struct.sv* %764, i32 0, i32 2
  %765 = load i32, i32* %sv_flags1109, align 4
  %and1110 = and i32 %765, 255
  %cmp1111 = icmp eq i32 %and1110, 8
  br i1 %cmp1111, label %cond.false1119, label %lor.lhs.false1113

lor.lhs.false1113:                                ; preds = %lor.lhs.false1108
  %766 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %sv_flags1114 = getelementptr inbounds %struct.sv, %struct.sv* %766, i32 0, i32 2
  %767 = load i32, i32* %sv_flags1114, align 4
  %and1115 = and i32 %767, 16826623
  %cmp1116 = icmp eq i32 %and1115, 16777226
  br i1 %cmp1116, label %cond.false1119, label %cond.true1118

cond.true1118:                                    ; preds = %lor.lhs.false1113
  br label %cond.end1189

cond.false1119:                                   ; preds = %lor.lhs.false1113, %lor.lhs.false1108, %cond.false1104
  %768 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %sv_flags1120 = getelementptr inbounds %struct.sv, %struct.sv* %768, i32 0, i32 2
  %769 = load i32, i32* %sv_flags1120, align 4
  %and1121 = and i32 %769, 1024
  %tobool1122 = icmp ne i32 %and1121, 0
  br i1 %tobool1122, label %cond.true1123, label %cond.false1147

cond.true1123:                                    ; preds = %cond.false1119
  %770 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %sv_any1124 = getelementptr inbounds %struct.sv, %struct.sv* %770, i32 0, i32 0
  %771 = load i8*, i8** %sv_any1124, align 8
  %772 = bitcast i8* %771 to %struct.xpv*
  %tobool1125 = icmp ne %struct.xpv* %772, null
  br i1 %tobool1125, label %land.rhs1126, label %land.end1145

land.rhs1126:                                     ; preds = %cond.true1123
  %773 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %sv_any1127 = getelementptr inbounds %struct.sv, %struct.sv* %773, i32 0, i32 0
  %774 = load i8*, i8** %sv_any1127, align 8
  %775 = bitcast i8* %774 to %struct.xpv*
  %xpv_cur1128 = getelementptr inbounds %struct.xpv, %struct.xpv* %775, i32 0, i32 2
  %776 = load i64, i64* %xpv_cur1128, align 8
  %cmp1129 = icmp ugt i64 %776, 1
  br i1 %cmp1129, label %lor.end1143, label %lor.rhs1131

lor.rhs1131:                                      ; preds = %land.rhs1126
  %777 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %sv_any1132 = getelementptr inbounds %struct.sv, %struct.sv* %777, i32 0, i32 0
  %778 = load i8*, i8** %sv_any1132, align 8
  %779 = bitcast i8* %778 to %struct.xpv*
  %xpv_cur1133 = getelementptr inbounds %struct.xpv, %struct.xpv* %779, i32 0, i32 2
  %780 = load i64, i64* %xpv_cur1133, align 8
  %tobool1134 = icmp ne i64 %780, 0
  br i1 %tobool1134, label %land.rhs1135, label %land.end1141

land.rhs1135:                                     ; preds = %lor.rhs1131
  %781 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %sv_u1136 = getelementptr inbounds %struct.sv, %struct.sv* %781, i32 0, i32 3
  %svu_pv1137 = bitcast %union.anon* %sv_u1136 to i8**
  %782 = load i8*, i8** %svu_pv1137, align 8
  %783 = load i8, i8* %782, align 1
  %conv1138 = sext i8 %783 to i32
  %cmp1139 = icmp ne i32 %conv1138, 48
  br label %land.end1141

land.end1141:                                     ; preds = %land.rhs1135, %lor.rhs1131
  %784 = phi i1 [ false, %lor.rhs1131 ], [ %cmp1139, %land.rhs1135 ]
  br label %lor.end1143

lor.end1143:                                      ; preds = %land.end1141, %land.rhs1126
  %785 = phi i1 [ true, %land.rhs1126 ], [ %784, %land.end1141 ]
  br label %land.end1145

land.end1145:                                     ; preds = %lor.end1143, %cond.true1123
  %786 = phi i1 [ false, %cond.true1123 ], [ %785, %lor.end1143 ]
  %land.ext1146 = zext i1 %786 to i32
  br label %cond.end1187

cond.false1147:                                   ; preds = %cond.false1119
  %787 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %sv_flags1148 = getelementptr inbounds %struct.sv, %struct.sv* %787, i32 0, i32 2
  %788 = load i32, i32* %sv_flags1148, align 4
  %and1149 = and i32 %788, 768
  %tobool1150 = icmp ne i32 %and1149, 0
  br i1 %tobool1150, label %cond.true1151, label %cond.false1182

cond.true1151:                                    ; preds = %cond.false1147
  %789 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %sv_flags1152 = getelementptr inbounds %struct.sv, %struct.sv* %789, i32 0, i32 2
  %790 = load i32, i32* %sv_flags1152, align 4
  %and1153 = and i32 %790, 256
  %tobool1154 = icmp ne i32 %and1153, 0
  br i1 %tobool1154, label %land.lhs.true1155, label %lor.rhs1161

land.lhs.true1155:                                ; preds = %cond.true1151
  %791 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %sv_any1156 = getelementptr inbounds %struct.sv, %struct.sv* %791, i32 0, i32 0
  %792 = load i8*, i8** %sv_any1156, align 8
  %793 = bitcast i8* %792 to %struct.xpviv*
  %xiv_u1157 = getelementptr inbounds %struct.xpviv, %struct.xpviv* %793, i32 0, i32 4
  %xivu_iv1158 = bitcast %union._xivu* %xiv_u1157 to i64*
  %794 = load i64, i64* %xivu_iv1158, align 8
  %cmp1159 = icmp ne i64 %794, 0
  br i1 %cmp1159, label %lor.end1180, label %lor.rhs1161

lor.rhs1161:                                      ; preds = %land.lhs.true1155, %cond.true1151
  %795 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %sv_flags1162 = getelementptr inbounds %struct.sv, %struct.sv* %795, i32 0, i32 2
  %796 = load i32, i32* %sv_flags1162, align 4
  %and1163 = and i32 %796, 512
  %tobool1164 = icmp ne i32 %and1163, 0
  br i1 %tobool1164, label %land.rhs1165, label %land.end1178

land.rhs1165:                                     ; preds = %lor.rhs1161
  %797 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %sv_any1166 = getelementptr inbounds %struct.sv, %struct.sv* %797, i32 0, i32 0
  %798 = load i8*, i8** %sv_any1166, align 8
  %799 = bitcast i8* %798 to %struct.xpvnv*
  %xnv_u1167 = getelementptr inbounds %struct.xpvnv, %struct.xpvnv* %799, i32 0, i32 5
  %xnv_nv1168 = bitcast %union._xnvu* %xnv_u1167 to double*
  %800 = load double, double* %xnv_nv1168, align 8
  %cmp1169 = fcmp uno double %800, %800
  br i1 %cmp1169, label %lor.end1176, label %lor.rhs1170

lor.rhs1170:                                      ; preds = %land.rhs1165
  %801 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %sv_any1171 = getelementptr inbounds %struct.sv, %struct.sv* %801, i32 0, i32 0
  %802 = load i8*, i8** %sv_any1171, align 8
  %803 = bitcast i8* %802 to %struct.xpvnv*
  %xnv_u1172 = getelementptr inbounds %struct.xpvnv, %struct.xpvnv* %803, i32 0, i32 5
  %xnv_nv1173 = bitcast %union._xnvu* %xnv_u1172 to double*
  %804 = load double, double* %xnv_nv1173, align 8
  %cmp1174 = fcmp une double %804, 0.000000e+00
  br label %lor.end1176

lor.end1176:                                      ; preds = %lor.rhs1170, %land.rhs1165
  %805 = phi i1 [ true, %land.rhs1165 ], [ %cmp1174, %lor.rhs1170 ]
  br label %land.end1178

land.end1178:                                     ; preds = %lor.end1176, %lor.rhs1161
  %806 = phi i1 [ false, %lor.rhs1161 ], [ %805, %lor.end1176 ]
  br label %lor.end1180

lor.end1180:                                      ; preds = %land.end1178, %land.lhs.true1155
  %807 = phi i1 [ true, %land.lhs.true1155 ], [ %806, %land.end1178 ]
  %lor.ext1181 = zext i1 %807 to i32
  br label %cond.end1185

cond.false1182:                                   ; preds = %cond.false1147
  %808 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %call1183 = call zeroext i1 @Perl_sv_2bool_flags(%struct.sv* %808, i32 0)
  %conv1184 = zext i1 %call1183 to i32
  br label %cond.end1185

cond.end1185:                                     ; preds = %cond.false1182, %lor.end1180
  %cond1186 = phi i32 [ %lor.ext1181, %lor.end1180 ], [ %conv1184, %cond.false1182 ]
  br label %cond.end1187

cond.end1187:                                     ; preds = %cond.end1185, %land.end1145
  %cond1188 = phi i32 [ %land.ext1146, %land.end1145 ], [ %cond1186, %cond.end1185 ]
  br label %cond.end1189

cond.end1189:                                     ; preds = %cond.end1187, %cond.true1118
  %cond1190 = phi i32 [ 0, %cond.true1118 ], [ %cond1188, %cond.end1187 ]
  br label %cond.end1191

cond.end1191:                                     ; preds = %cond.end1189, %cond.true1101
  %cond1192 = phi i32 [ %conv1103, %cond.true1101 ], [ %cond1190, %cond.end1189 ]
  %tobool1193 = icmp ne i32 %cond1192, 0
  br label %land.end1194

land.end1194:                                     ; preds = %cond.end1191, %cond.false1094, %cond.true1093
  %809 = phi i1 [ false, %cond.false1094 ], [ false, %cond.true1093 ], [ %tobool1193, %cond.end1191 ]
  br i1 %809, label %if.then1196, label %if.end1199

if.then1196:                                      ; preds = %land.end1194
  %810 = load %struct.sv**, %struct.sv*** %sp, align 8
  %incdec.ptr1197 = getelementptr inbounds %struct.sv*, %struct.sv** %810, i32 1
  store %struct.sv** %incdec.ptr1197, %struct.sv*** %sp, align 8
  store %struct.sv* @PL_sv_yes, %struct.sv** %incdec.ptr1197, align 8
  %811 = load %struct.sv**, %struct.sv*** %sp, align 8
  store %struct.sv** %811, %struct.sv*** @PL_stack_sp, align 8
  %812 = load %struct.op*, %struct.op** @PL_op, align 8
  %op_next1198 = getelementptr inbounds %struct.op, %struct.op* %812, i32 0, i32 0
  %813 = load %struct.op*, %struct.op** %op_next1198, align 8
  store %struct.op* %813, %struct.op** %retval, align 8
  br label %return

if.end1199:                                       ; preds = %land.end1194
  br label %for.inc1200

for.inc1200:                                      ; preds = %if.end1199, %if.then1086
  %814 = load i64, i64* %i1072, align 8
  %inc1201 = add nsw i64 %814, 1
  store i64 %inc1201, i64* %i1072, align 8
  br label %for.cond1077

for.end1202:                                      ; preds = %for.cond1077
  %815 = load %struct.sv**, %struct.sv*** %sp, align 8
  %incdec.ptr1203 = getelementptr inbounds %struct.sv*, %struct.sv** %815, i32 1
  store %struct.sv** %incdec.ptr1203, %struct.sv*** %sp, align 8
  store %struct.sv* @PL_sv_no, %struct.sv** %incdec.ptr1203, align 8
  %816 = load %struct.sv**, %struct.sv*** %sp, align 8
  store %struct.sv** %816, %struct.sv*** @PL_stack_sp, align 8
  %817 = load %struct.op*, %struct.op** @PL_op, align 8
  %op_next1204 = getelementptr inbounds %struct.op, %struct.op* %817, i32 0, i32 0
  %818 = load %struct.op*, %struct.op** %op_next1204, align 8
  store %struct.op* %818, %struct.op** %retval, align 8
  br label %return

if.else1205:                                      ; preds = %land.lhs.true690, %if.else686
  %819 = load %struct.sv*, %struct.sv** %e, align 8
  %sv_flags1206 = getelementptr inbounds %struct.sv, %struct.sv* %819, i32 0, i32 2
  %820 = load i32, i32* %sv_flags1206, align 4
  %and1207 = and i32 %820, 2048
  %tobool1208 = icmp ne i32 %and1207, 0
  br i1 %tobool1208, label %land.lhs.true1209, label %if.else1257

land.lhs.true1209:                                ; preds = %if.else1205
  %821 = load %struct.sv*, %struct.sv** %e, align 8
  %sv_u1210 = getelementptr inbounds %struct.sv, %struct.sv* %821, i32 0, i32 3
  %svu_rv1211 = bitcast %union.anon* %sv_u1210 to %struct.sv**
  %822 = load %struct.sv*, %struct.sv** %svu_rv1211, align 8
  %sv_flags1212 = getelementptr inbounds %struct.sv, %struct.sv* %822, i32 0, i32 2
  %823 = load i32, i32* %sv_flags1212, align 4
  %and1213 = and i32 %823, 255
  %cmp1214 = icmp eq i32 %and1213, 8
  br i1 %cmp1214, label %if.then1216, label %if.else1257

if.then1216:                                      ; preds = %land.lhs.true1209
  %824 = load i8, i8* %object_on_left, align 1
  %tobool1217 = trunc i8 %824 to i1
  br i1 %tobool1217, label %if.else1230, label %land.lhs.true1218

land.lhs.true1218:                                ; preds = %if.then1216
  %825 = load %struct.sv*, %struct.sv** %d, align 8
  %sv_flags1219 = getelementptr inbounds %struct.sv, %struct.sv* %825, i32 0, i32 2
  %826 = load i32, i32* %sv_flags1219, align 4
  %and1220 = and i32 %826, 2048
  %tobool1221 = icmp ne i32 %and1220, 0
  br i1 %tobool1221, label %land.lhs.true1222, label %if.else1230

land.lhs.true1222:                                ; preds = %land.lhs.true1218
  %827 = load %struct.sv*, %struct.sv** %d, align 8
  %sv_u1223 = getelementptr inbounds %struct.sv, %struct.sv* %827, i32 0, i32 3
  %svu_rv1224 = bitcast %union.anon* %sv_u1223 to %struct.sv**
  %828 = load %struct.sv*, %struct.sv** %svu_rv1224, align 8
  %sv_flags1225 = getelementptr inbounds %struct.sv, %struct.sv* %828, i32 0, i32 2
  %829 = load i32, i32* %sv_flags1225, align 4
  %and1226 = and i32 %829, 255
  %cmp1227 = icmp eq i32 %and1226, 12
  br i1 %cmp1227, label %if.then1229, label %if.else1230

if.then1229:                                      ; preds = %land.lhs.true1222
  %830 = load %struct.sv*, %struct.sv** %d, align 8
  store %struct.sv* %830, %struct.sv** %t, align 8
  %831 = load %struct.sv*, %struct.sv** %e, align 8
  store %struct.sv* %831, %struct.sv** %d, align 8
  %832 = load %struct.sv*, %struct.sv** %t, align 8
  store %struct.sv* %832, %struct.sv** %e, align 8
  br label %sm_regex_hash

if.else1230:                                      ; preds = %land.lhs.true1222, %land.lhs.true1218, %if.then1216
  %833 = load i8, i8* %object_on_left, align 1
  %tobool1231 = trunc i8 %833 to i1
  br i1 %tobool1231, label %if.else1245, label %land.lhs.true1232

land.lhs.true1232:                                ; preds = %if.else1230
  %834 = load %struct.sv*, %struct.sv** %d, align 8
  %sv_flags1233 = getelementptr inbounds %struct.sv, %struct.sv* %834, i32 0, i32 2
  %835 = load i32, i32* %sv_flags1233, align 4
  %and1234 = and i32 %835, 2048
  %tobool1235 = icmp ne i32 %and1234, 0
  br i1 %tobool1235, label %land.lhs.true1236, label %if.else1245

land.lhs.true1236:                                ; preds = %land.lhs.true1232
  %836 = load %struct.sv*, %struct.sv** %d, align 8
  %sv_u1237 = getelementptr inbounds %struct.sv, %struct.sv* %836, i32 0, i32 3
  %svu_rv1238 = bitcast %union.anon* %sv_u1237 to %struct.sv**
  %837 = load %struct.sv*, %struct.sv** %svu_rv1238, align 8
  %sv_flags1239 = getelementptr inbounds %struct.sv, %struct.sv* %837, i32 0, i32 2
  %838 = load i32, i32* %sv_flags1239, align 4
  %and1240 = and i32 %838, 255
  %cmp1241 = icmp eq i32 %and1240, 11
  br i1 %cmp1241, label %if.then1243, label %if.else1245

if.then1243:                                      ; preds = %land.lhs.true1236
  %839 = load %struct.sv*, %struct.sv** %d, align 8
  store %struct.sv* %839, %struct.sv** %t1244, align 8
  %840 = load %struct.sv*, %struct.sv** %e, align 8
  store %struct.sv* %840, %struct.sv** %d, align 8
  %841 = load %struct.sv*, %struct.sv** %t1244, align 8
  store %struct.sv* %841, %struct.sv** %e, align 8
  br label %sm_regex_array

if.else1245:                                      ; preds = %land.lhs.true1236, %land.lhs.true1232, %if.else1230
  %842 = load %struct.sv*, %struct.sv** %e, align 8
  %sv_u1247 = getelementptr inbounds %struct.sv, %struct.sv* %842, i32 0, i32 3
  %svu_rv1248 = bitcast %union.anon* %sv_u1247 to %struct.sv**
  %843 = load %struct.sv*, %struct.sv** %svu_rv1248, align 8
  %844 = bitcast %struct.sv* %843 to %struct.p5rx*
  %call1249 = call %struct.pmop* @S_make_matcher(%struct.p5rx* %844)
  store %struct.pmop* %call1249, %struct.pmop** %matcher1246, align 8
  %845 = load %struct.sv**, %struct.sv*** %sp, align 8
  store %struct.sv** %845, %struct.sv*** @PL_stack_sp, align 8
  %846 = load %struct.pmop*, %struct.pmop** %matcher1246, align 8
  %847 = load %struct.sv*, %struct.sv** %d, align 8
  %call1250 = call zeroext i1 @S_matcher_matches_sv(%struct.pmop* %846, %struct.sv* %847)
  %frombool1251 = zext i1 %call1250 to i8
  store i8 %frombool1251, i8* %result, align 1
  %848 = load %struct.sv**, %struct.sv*** @PL_stack_sp, align 8
  store %struct.sv** %848, %struct.sv*** %sp, align 8
  %849 = load i8, i8* %result, align 1
  %tobool1252 = trunc i8 %849 to i1
  %850 = zext i1 %tobool1252 to i64
  %cond1254 = select i1 %tobool1252, %struct.sv* @PL_sv_yes, %struct.sv* @PL_sv_no
  %851 = load %struct.sv**, %struct.sv*** %sp, align 8
  %incdec.ptr1255 = getelementptr inbounds %struct.sv*, %struct.sv** %851, i32 1
  store %struct.sv** %incdec.ptr1255, %struct.sv*** %sp, align 8
  store %struct.sv* %cond1254, %struct.sv** %incdec.ptr1255, align 8
  %852 = load %struct.pmop*, %struct.pmop** %matcher1246, align 8
  call void @S_destroy_matcher(%struct.pmop* %852)
  %853 = load %struct.sv**, %struct.sv*** %sp, align 8
  store %struct.sv** %853, %struct.sv*** @PL_stack_sp, align 8
  %854 = load %struct.op*, %struct.op** @PL_op, align 8
  %op_next1256 = getelementptr inbounds %struct.op, %struct.op* %854, i32 0, i32 0
  %855 = load %struct.op*, %struct.op** %op_next1256, align 8
  store %struct.op* %855, %struct.op** %retval, align 8
  br label %return

if.else1257:                                      ; preds = %land.lhs.true1209, %if.else1205
  %856 = load i8, i8* %object_on_left, align 1
  %tobool1258 = trunc i8 %856 to i1
  br i1 %tobool1258, label %land.lhs.true1260, label %if.else1289

land.lhs.true1260:                                ; preds = %if.else1257
  %857 = load %struct.sv*, %struct.sv** %d, align 8
  %sv_flags1261 = getelementptr inbounds %struct.sv, %struct.sv* %857, i32 0, i32 2
  %858 = load i32, i32* %sv_flags1261, align 4
  %and1262 = and i32 %858, 2048
  %tobool1263 = icmp ne i32 %and1262, 0
  br i1 %tobool1263, label %land.lhs.true1264, label %if.else1289

land.lhs.true1264:                                ; preds = %land.lhs.true1260
  %859 = load %struct.sv*, %struct.sv** %d, align 8
  %sv_u1265 = getelementptr inbounds %struct.sv, %struct.sv* %859, i32 0, i32 3
  %svu_rv1266 = bitcast %union.anon* %sv_u1265 to %struct.sv**
  %860 = load %struct.sv*, %struct.sv** %svu_rv1266, align 8
  %sv_flags1267 = getelementptr inbounds %struct.sv, %struct.sv* %860, i32 0, i32 2
  %861 = load i32, i32* %sv_flags1267, align 4
  %and1268 = and i32 %861, 1048576
  %tobool1269 = icmp ne i32 %and1268, 0
  br i1 %tobool1269, label %land.lhs.true1270, label %if.else1289

land.lhs.true1270:                                ; preds = %land.lhs.true1264
  %862 = load %struct.sv*, %struct.sv** %d, align 8
  %sv_u1271 = getelementptr inbounds %struct.sv, %struct.sv* %862, i32 0, i32 3
  %svu_rv1272 = bitcast %union.anon* %sv_u1271 to %struct.sv**
  %863 = load %struct.sv*, %struct.sv** %svu_rv1272, align 8
  %sv_any1273 = getelementptr inbounds %struct.sv, %struct.sv* %863, i32 0, i32 0
  %864 = load i8*, i8** %sv_any1273, align 8
  %865 = bitcast i8* %864 to %struct.xpvmg*
  %xmg_stash1274 = getelementptr inbounds %struct.xpvmg, %struct.xpvmg* %865, i32 0, i32 0
  %866 = load %struct.hv*, %struct.hv** %xmg_stash1274, align 8
  %sv_flags1275 = getelementptr inbounds %struct.hv, %struct.hv* %866, i32 0, i32 2
  %867 = load i32, i32* %sv_flags1275, align 4
  %and1276 = and i32 %867, 268435456
  %tobool1277 = icmp ne i32 %and1276, 0
  br i1 %tobool1277, label %if.then1278, label %if.else1289

if.then1278:                                      ; preds = %land.lhs.true1270
  %868 = load %struct.sv*, %struct.sv** %d, align 8
  %869 = load %struct.sv**, %struct.sv*** %sp, align 8
  %incdec.ptr1280 = getelementptr inbounds %struct.sv*, %struct.sv** %869, i32 1
  store %struct.sv** %incdec.ptr1280, %struct.sv*** %sp, align 8
  store %struct.sv* %868, %struct.sv** %incdec.ptr1280, align 8
  %870 = load %struct.sv*, %struct.sv** %e, align 8
  %871 = load %struct.sv**, %struct.sv*** %sp, align 8
  %incdec.ptr1281 = getelementptr inbounds %struct.sv*, %struct.sv** %871, i32 1
  store %struct.sv** %incdec.ptr1281, %struct.sv*** %sp, align 8
  store %struct.sv* %870, %struct.sv** %incdec.ptr1281, align 8
  %872 = load %struct.sv**, %struct.sv*** %sp, align 8
  store %struct.sv** %872, %struct.sv*** @PL_stack_sp, align 8
  %873 = load %struct.sv*, %struct.sv** %d, align 8
  %874 = load %struct.sv*, %struct.sv** %e, align 8
  %call1282 = call %struct.sv* @Perl_amagic_call(%struct.sv* %873, %struct.sv* %874, i32 72, i32 1)
  store %struct.sv* %call1282, %struct.sv** %tmpsv1279, align 8
  %875 = load %struct.sv*, %struct.sv** %tmpsv1279, align 8
  %tobool1283 = icmp ne %struct.sv* %875, null
  br i1 %tobool1283, label %if.then1284, label %if.end1287

if.then1284:                                      ; preds = %if.then1278
  %876 = load %struct.sv**, %struct.sv*** @PL_stack_sp, align 8
  store %struct.sv** %876, %struct.sv*** %sp, align 8
  %877 = load %struct.sv**, %struct.sv*** %sp, align 8
  %incdec.ptr1285 = getelementptr inbounds %struct.sv*, %struct.sv** %877, i32 -1
  store %struct.sv** %incdec.ptr1285, %struct.sv*** %sp, align 8
  %878 = load %struct.sv*, %struct.sv** %877, align 8
  %879 = load %struct.sv*, %struct.sv** %tmpsv1279, align 8
  %880 = load %struct.sv**, %struct.sv*** %sp, align 8
  store %struct.sv* %879, %struct.sv** %880, align 8
  %881 = load %struct.sv**, %struct.sv*** %sp, align 8
  store %struct.sv** %881, %struct.sv*** @PL_stack_sp, align 8
  %882 = load %struct.op*, %struct.op** @PL_op, align 8
  %op_next1286 = getelementptr inbounds %struct.op, %struct.op* %882, i32 0, i32 0
  %883 = load %struct.op*, %struct.op** %op_next1286, align 8
  store %struct.op* %883, %struct.op** %retval, align 8
  br label %return

if.end1287:                                       ; preds = %if.then1278
  %884 = load %struct.sv**, %struct.sv*** %sp, align 8
  %add.ptr1288 = getelementptr inbounds %struct.sv*, %struct.sv** %884, i64 -2
  store %struct.sv** %add.ptr1288, %struct.sv*** %sp, align 8
  br label %sm_any_scalar

if.else1289:                                      ; preds = %land.lhs.true1270, %land.lhs.true1264, %land.lhs.true1260, %if.else1257
  %885 = load %struct.sv*, %struct.sv** %d, align 8
  %sv_flags1290 = getelementptr inbounds %struct.sv, %struct.sv* %885, i32 0, i32 2
  %886 = load i32, i32* %sv_flags1290, align 4
  %and1291 = and i32 %886, 65280
  %tobool1292 = icmp ne i32 %and1291, 0
  br i1 %tobool1292, label %if.else1306, label %lor.lhs.false1293

lor.lhs.false1293:                                ; preds = %if.else1289
  %887 = load %struct.sv*, %struct.sv** %d, align 8
  %sv_flags1294 = getelementptr inbounds %struct.sv, %struct.sv* %887, i32 0, i32 2
  %888 = load i32, i32* %sv_flags1294, align 4
  %and1295 = and i32 %888, 255
  %cmp1296 = icmp eq i32 %and1295, 8
  br i1 %cmp1296, label %if.else1306, label %lor.lhs.false1298

lor.lhs.false1298:                                ; preds = %lor.lhs.false1293
  %889 = load %struct.sv*, %struct.sv** %d, align 8
  %sv_flags1299 = getelementptr inbounds %struct.sv, %struct.sv* %889, i32 0, i32 2
  %890 = load i32, i32* %sv_flags1299, align 4
  %and1300 = and i32 %890, 16826623
  %cmp1301 = icmp eq i32 %and1300, 16777226
  br i1 %cmp1301, label %if.else1306, label %if.then1303

if.then1303:                                      ; preds = %lor.lhs.false1298
  %891 = load %struct.sv**, %struct.sv*** %sp, align 8
  %incdec.ptr1304 = getelementptr inbounds %struct.sv*, %struct.sv** %891, i32 1
  store %struct.sv** %incdec.ptr1304, %struct.sv*** %sp, align 8
  store %struct.sv* @PL_sv_no, %struct.sv** %incdec.ptr1304, align 8
  %892 = load %struct.sv**, %struct.sv*** %sp, align 8
  store %struct.sv** %892, %struct.sv*** @PL_stack_sp, align 8
  %893 = load %struct.op*, %struct.op** @PL_op, align 8
  %op_next1305 = getelementptr inbounds %struct.op, %struct.op* %893, i32 0, i32 0
  %894 = load %struct.op*, %struct.op** %op_next1305, align 8
  store %struct.op* %894, %struct.op** %retval, align 8
  br label %return

if.else1306:                                      ; preds = %lor.lhs.false1298, %lor.lhs.false1293, %if.else1289
  br label %sm_any_scalar

sm_any_scalar:                                    ; preds = %if.else1306, %if.end1287
  %895 = load %struct.sv*, %struct.sv** %e, align 8
  %sv_flags1307 = getelementptr inbounds %struct.sv, %struct.sv* %895, i32 0, i32 2
  %896 = load i32, i32* %sv_flags1307, align 4
  %and1308 = and i32 %896, 768
  %tobool1309 = icmp ne i32 %and1308, 0
  br i1 %tobool1309, label %if.then1321, label %lor.lhs.false1310

lor.lhs.false1310:                                ; preds = %sm_any_scalar
  %897 = load %struct.sv*, %struct.sv** %e, align 8
  %sv_flags1311 = getelementptr inbounds %struct.sv, %struct.sv* %897, i32 0, i32 2
  %898 = load i32, i32* %sv_flags1311, align 4
  %and1312 = and i32 %898, 1024
  %tobool1313 = icmp ne i32 %and1312, 0
  br i1 %tobool1313, label %land.lhs.true1314, label %if.end1443

land.lhs.true1314:                                ; preds = %lor.lhs.false1310
  %899 = load %struct.sv*, %struct.sv** %e, align 8
  %call1315 = call i32 @Perl_looks_like_number(%struct.sv* %899)
  %tobool1316 = icmp ne i32 %call1315, 0
  br i1 %tobool1316, label %land.lhs.true1317, label %if.end1443

land.lhs.true1317:                                ; preds = %land.lhs.true1314
  %900 = load %struct.sv*, %struct.sv** %d, align 8
  %sv_flags1318 = getelementptr inbounds %struct.sv, %struct.sv* %900, i32 0, i32 2
  %901 = load i32, i32* %sv_flags1318, align 4
  %and1319 = and i32 %901, 768
  %tobool1320 = icmp ne i32 %and1319, 0
  br i1 %tobool1320, label %if.then1321, label %if.end1443

if.then1321:                                      ; preds = %land.lhs.true1317, %sm_any_scalar
  %902 = load %struct.sv*, %struct.sv** %d, align 8
  %903 = load %struct.sv**, %struct.sv*** %sp, align 8
  %incdec.ptr1322 = getelementptr inbounds %struct.sv*, %struct.sv** %903, i32 1
  store %struct.sv** %incdec.ptr1322, %struct.sv*** %sp, align 8
  store %struct.sv* %902, %struct.sv** %incdec.ptr1322, align 8
  %904 = load %struct.sv*, %struct.sv** %e, align 8
  %905 = load %struct.sv**, %struct.sv*** %sp, align 8
  %incdec.ptr1323 = getelementptr inbounds %struct.sv*, %struct.sv** %905, i32 1
  store %struct.sv** %incdec.ptr1323, %struct.sv*** %sp, align 8
  store %struct.sv* %904, %struct.sv** %incdec.ptr1323, align 8
  %906 = load %struct.sv**, %struct.sv*** %sp, align 8
  store %struct.sv** %906, %struct.sv*** @PL_stack_sp, align 8
  %907 = load %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_hints = getelementptr inbounds %struct.cop, %struct.cop* %907, i32 0, i32 10
  %908 = load i32, i32* %cop_hints, align 8
  %add1324 = add i32 %908, 0
  %and1325 = and i32 %add1324, 1
  %tobool1326 = icmp ne i32 %and1325, 0
  br i1 %tobool1326, label %if.then1327, label %if.else1329

if.then1327:                                      ; preds = %if.then1321
  %call1328 = call %struct.op* @Perl_pp_i_eq()
  br label %if.end1331

if.else1329:                                      ; preds = %if.then1321
  %call1330 = call %struct.op* @Perl_pp_eq()
  br label %if.end1331

if.end1331:                                       ; preds = %if.else1329, %if.then1327
  %909 = load %struct.sv**, %struct.sv*** @PL_stack_sp, align 8
  store %struct.sv** %909, %struct.sv*** %sp, align 8
  %910 = load %struct.sv**, %struct.sv*** %sp, align 8
  %incdec.ptr1332 = getelementptr inbounds %struct.sv*, %struct.sv** %910, i32 -1
  store %struct.sv** %incdec.ptr1332, %struct.sv*** %sp, align 8
  %911 = load %struct.sv*, %struct.sv** %910, align 8
  store %struct.sv* %911, %struct.sv** @PL_Sv, align 8
  %912 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %tobool1333 = icmp ne %struct.sv* %912, null
  br i1 %tobool1333, label %cond.true1334, label %cond.false1335

cond.true1334:                                    ; preds = %if.end1331
  br i1 true, label %land.rhs1336, label %land.end1435

cond.false1335:                                   ; preds = %if.end1331
  br i1 false, label %land.rhs1336, label %land.end1435

land.rhs1336:                                     ; preds = %cond.false1335, %cond.true1334
  %913 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %sv_flags1337 = getelementptr inbounds %struct.sv, %struct.sv* %913, i32 0, i32 2
  %914 = load i32, i32* %sv_flags1337, align 4
  %and1338 = and i32 %914, 2097152
  %tobool1339 = icmp ne i32 %and1338, 0
  br i1 %tobool1339, label %cond.true1340, label %cond.false1341

cond.true1340:                                    ; preds = %land.rhs1336
  br i1 true, label %cond.true1342, label %cond.false1345

cond.false1341:                                   ; preds = %land.rhs1336
  br i1 false, label %cond.true1342, label %cond.false1345

cond.true1342:                                    ; preds = %cond.false1341, %cond.true1340
  %915 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %call1343 = call zeroext i1 @Perl_sv_2bool_flags(%struct.sv* %915, i32 2)
  %conv1344 = zext i1 %call1343 to i32
  br label %cond.end1432

cond.false1345:                                   ; preds = %cond.false1341, %cond.true1340
  %916 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %sv_flags1346 = getelementptr inbounds %struct.sv, %struct.sv* %916, i32 0, i32 2
  %917 = load i32, i32* %sv_flags1346, align 4
  %and1347 = and i32 %917, 65280
  %tobool1348 = icmp ne i32 %and1347, 0
  br i1 %tobool1348, label %cond.false1360, label %lor.lhs.false1349

lor.lhs.false1349:                                ; preds = %cond.false1345
  %918 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %sv_flags1350 = getelementptr inbounds %struct.sv, %struct.sv* %918, i32 0, i32 2
  %919 = load i32, i32* %sv_flags1350, align 4
  %and1351 = and i32 %919, 255
  %cmp1352 = icmp eq i32 %and1351, 8
  br i1 %cmp1352, label %cond.false1360, label %lor.lhs.false1354

lor.lhs.false1354:                                ; preds = %lor.lhs.false1349
  %920 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %sv_flags1355 = getelementptr inbounds %struct.sv, %struct.sv* %920, i32 0, i32 2
  %921 = load i32, i32* %sv_flags1355, align 4
  %and1356 = and i32 %921, 16826623
  %cmp1357 = icmp eq i32 %and1356, 16777226
  br i1 %cmp1357, label %cond.false1360, label %cond.true1359

cond.true1359:                                    ; preds = %lor.lhs.false1354
  br label %cond.end1430

cond.false1360:                                   ; preds = %lor.lhs.false1354, %lor.lhs.false1349, %cond.false1345
  %922 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %sv_flags1361 = getelementptr inbounds %struct.sv, %struct.sv* %922, i32 0, i32 2
  %923 = load i32, i32* %sv_flags1361, align 4
  %and1362 = and i32 %923, 1024
  %tobool1363 = icmp ne i32 %and1362, 0
  br i1 %tobool1363, label %cond.true1364, label %cond.false1388

cond.true1364:                                    ; preds = %cond.false1360
  %924 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %sv_any1365 = getelementptr inbounds %struct.sv, %struct.sv* %924, i32 0, i32 0
  %925 = load i8*, i8** %sv_any1365, align 8
  %926 = bitcast i8* %925 to %struct.xpv*
  %tobool1366 = icmp ne %struct.xpv* %926, null
  br i1 %tobool1366, label %land.rhs1367, label %land.end1386

land.rhs1367:                                     ; preds = %cond.true1364
  %927 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %sv_any1368 = getelementptr inbounds %struct.sv, %struct.sv* %927, i32 0, i32 0
  %928 = load i8*, i8** %sv_any1368, align 8
  %929 = bitcast i8* %928 to %struct.xpv*
  %xpv_cur1369 = getelementptr inbounds %struct.xpv, %struct.xpv* %929, i32 0, i32 2
  %930 = load i64, i64* %xpv_cur1369, align 8
  %cmp1370 = icmp ugt i64 %930, 1
  br i1 %cmp1370, label %lor.end1384, label %lor.rhs1372

lor.rhs1372:                                      ; preds = %land.rhs1367
  %931 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %sv_any1373 = getelementptr inbounds %struct.sv, %struct.sv* %931, i32 0, i32 0
  %932 = load i8*, i8** %sv_any1373, align 8
  %933 = bitcast i8* %932 to %struct.xpv*
  %xpv_cur1374 = getelementptr inbounds %struct.xpv, %struct.xpv* %933, i32 0, i32 2
  %934 = load i64, i64* %xpv_cur1374, align 8
  %tobool1375 = icmp ne i64 %934, 0
  br i1 %tobool1375, label %land.rhs1376, label %land.end1382

land.rhs1376:                                     ; preds = %lor.rhs1372
  %935 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %sv_u1377 = getelementptr inbounds %struct.sv, %struct.sv* %935, i32 0, i32 3
  %svu_pv1378 = bitcast %union.anon* %sv_u1377 to i8**
  %936 = load i8*, i8** %svu_pv1378, align 8
  %937 = load i8, i8* %936, align 1
  %conv1379 = sext i8 %937 to i32
  %cmp1380 = icmp ne i32 %conv1379, 48
  br label %land.end1382

land.end1382:                                     ; preds = %land.rhs1376, %lor.rhs1372
  %938 = phi i1 [ false, %lor.rhs1372 ], [ %cmp1380, %land.rhs1376 ]
  br label %lor.end1384

lor.end1384:                                      ; preds = %land.end1382, %land.rhs1367
  %939 = phi i1 [ true, %land.rhs1367 ], [ %938, %land.end1382 ]
  br label %land.end1386

land.end1386:                                     ; preds = %lor.end1384, %cond.true1364
  %940 = phi i1 [ false, %cond.true1364 ], [ %939, %lor.end1384 ]
  %land.ext1387 = zext i1 %940 to i32
  br label %cond.end1428

cond.false1388:                                   ; preds = %cond.false1360
  %941 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %sv_flags1389 = getelementptr inbounds %struct.sv, %struct.sv* %941, i32 0, i32 2
  %942 = load i32, i32* %sv_flags1389, align 4
  %and1390 = and i32 %942, 768
  %tobool1391 = icmp ne i32 %and1390, 0
  br i1 %tobool1391, label %cond.true1392, label %cond.false1423

cond.true1392:                                    ; preds = %cond.false1388
  %943 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %sv_flags1393 = getelementptr inbounds %struct.sv, %struct.sv* %943, i32 0, i32 2
  %944 = load i32, i32* %sv_flags1393, align 4
  %and1394 = and i32 %944, 256
  %tobool1395 = icmp ne i32 %and1394, 0
  br i1 %tobool1395, label %land.lhs.true1396, label %lor.rhs1402

land.lhs.true1396:                                ; preds = %cond.true1392
  %945 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %sv_any1397 = getelementptr inbounds %struct.sv, %struct.sv* %945, i32 0, i32 0
  %946 = load i8*, i8** %sv_any1397, align 8
  %947 = bitcast i8* %946 to %struct.xpviv*
  %xiv_u1398 = getelementptr inbounds %struct.xpviv, %struct.xpviv* %947, i32 0, i32 4
  %xivu_iv1399 = bitcast %union._xivu* %xiv_u1398 to i64*
  %948 = load i64, i64* %xivu_iv1399, align 8
  %cmp1400 = icmp ne i64 %948, 0
  br i1 %cmp1400, label %lor.end1421, label %lor.rhs1402

lor.rhs1402:                                      ; preds = %land.lhs.true1396, %cond.true1392
  %949 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %sv_flags1403 = getelementptr inbounds %struct.sv, %struct.sv* %949, i32 0, i32 2
  %950 = load i32, i32* %sv_flags1403, align 4
  %and1404 = and i32 %950, 512
  %tobool1405 = icmp ne i32 %and1404, 0
  br i1 %tobool1405, label %land.rhs1406, label %land.end1419

land.rhs1406:                                     ; preds = %lor.rhs1402
  %951 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %sv_any1407 = getelementptr inbounds %struct.sv, %struct.sv* %951, i32 0, i32 0
  %952 = load i8*, i8** %sv_any1407, align 8
  %953 = bitcast i8* %952 to %struct.xpvnv*
  %xnv_u1408 = getelementptr inbounds %struct.xpvnv, %struct.xpvnv* %953, i32 0, i32 5
  %xnv_nv1409 = bitcast %union._xnvu* %xnv_u1408 to double*
  %954 = load double, double* %xnv_nv1409, align 8
  %cmp1410 = fcmp uno double %954, %954
  br i1 %cmp1410, label %lor.end1417, label %lor.rhs1411

lor.rhs1411:                                      ; preds = %land.rhs1406
  %955 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %sv_any1412 = getelementptr inbounds %struct.sv, %struct.sv* %955, i32 0, i32 0
  %956 = load i8*, i8** %sv_any1412, align 8
  %957 = bitcast i8* %956 to %struct.xpvnv*
  %xnv_u1413 = getelementptr inbounds %struct.xpvnv, %struct.xpvnv* %957, i32 0, i32 5
  %xnv_nv1414 = bitcast %union._xnvu* %xnv_u1413 to double*
  %958 = load double, double* %xnv_nv1414, align 8
  %cmp1415 = fcmp une double %958, 0.000000e+00
  br label %lor.end1417

lor.end1417:                                      ; preds = %lor.rhs1411, %land.rhs1406
  %959 = phi i1 [ true, %land.rhs1406 ], [ %cmp1415, %lor.rhs1411 ]
  br label %land.end1419

land.end1419:                                     ; preds = %lor.end1417, %lor.rhs1402
  %960 = phi i1 [ false, %lor.rhs1402 ], [ %959, %lor.end1417 ]
  br label %lor.end1421

lor.end1421:                                      ; preds = %land.end1419, %land.lhs.true1396
  %961 = phi i1 [ true, %land.lhs.true1396 ], [ %960, %land.end1419 ]
  %lor.ext1422 = zext i1 %961 to i32
  br label %cond.end1426

cond.false1423:                                   ; preds = %cond.false1388
  %962 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %call1424 = call zeroext i1 @Perl_sv_2bool_flags(%struct.sv* %962, i32 0)
  %conv1425 = zext i1 %call1424 to i32
  br label %cond.end1426

cond.end1426:                                     ; preds = %cond.false1423, %lor.end1421
  %cond1427 = phi i32 [ %lor.ext1422, %lor.end1421 ], [ %conv1425, %cond.false1423 ]
  br label %cond.end1428

cond.end1428:                                     ; preds = %cond.end1426, %land.end1386
  %cond1429 = phi i32 [ %land.ext1387, %land.end1386 ], [ %cond1427, %cond.end1426 ]
  br label %cond.end1430

cond.end1430:                                     ; preds = %cond.end1428, %cond.true1359
  %cond1431 = phi i32 [ 0, %cond.true1359 ], [ %cond1429, %cond.end1428 ]
  br label %cond.end1432

cond.end1432:                                     ; preds = %cond.end1430, %cond.true1342
  %cond1433 = phi i32 [ %conv1344, %cond.true1342 ], [ %cond1431, %cond.end1430 ]
  %tobool1434 = icmp ne i32 %cond1433, 0
  br label %land.end1435

land.end1435:                                     ; preds = %cond.end1432, %cond.false1335, %cond.true1334
  %963 = phi i1 [ false, %cond.false1335 ], [ false, %cond.true1334 ], [ %tobool1434, %cond.end1432 ]
  br i1 %963, label %if.then1437, label %if.else1440

if.then1437:                                      ; preds = %land.end1435
  %964 = load %struct.sv**, %struct.sv*** %sp, align 8
  %incdec.ptr1438 = getelementptr inbounds %struct.sv*, %struct.sv** %964, i32 1
  store %struct.sv** %incdec.ptr1438, %struct.sv*** %sp, align 8
  store %struct.sv* @PL_sv_yes, %struct.sv** %incdec.ptr1438, align 8
  %965 = load %struct.sv**, %struct.sv*** %sp, align 8
  store %struct.sv** %965, %struct.sv*** @PL_stack_sp, align 8
  %966 = load %struct.op*, %struct.op** @PL_op, align 8
  %op_next1439 = getelementptr inbounds %struct.op, %struct.op* %966, i32 0, i32 0
  %967 = load %struct.op*, %struct.op** %op_next1439, align 8
  store %struct.op* %967, %struct.op** %retval, align 8
  br label %return

if.else1440:                                      ; preds = %land.end1435
  %968 = load %struct.sv**, %struct.sv*** %sp, align 8
  %incdec.ptr1441 = getelementptr inbounds %struct.sv*, %struct.sv** %968, i32 1
  store %struct.sv** %incdec.ptr1441, %struct.sv*** %sp, align 8
  store %struct.sv* @PL_sv_no, %struct.sv** %incdec.ptr1441, align 8
  %969 = load %struct.sv**, %struct.sv*** %sp, align 8
  store %struct.sv** %969, %struct.sv*** @PL_stack_sp, align 8
  %970 = load %struct.op*, %struct.op** @PL_op, align 8
  %op_next1442 = getelementptr inbounds %struct.op, %struct.op* %970, i32 0, i32 0
  %971 = load %struct.op*, %struct.op** %op_next1442, align 8
  store %struct.op* %971, %struct.op** %retval, align 8
  br label %return

if.end1443:                                       ; preds = %land.lhs.true1317, %land.lhs.true1314, %lor.lhs.false1310
  br label %if.end1444

if.end1444:                                       ; preds = %if.end1443
  br label %if.end1445

if.end1445:                                       ; preds = %if.end1444
  br label %if.end1446

if.end1446:                                       ; preds = %if.end1445
  br label %if.end1447

if.end1447:                                       ; preds = %if.end1446
  br label %if.end1448

if.end1448:                                       ; preds = %if.end1447
  br label %if.end1449

if.end1449:                                       ; preds = %if.end1448
  %972 = load %struct.sv*, %struct.sv** %d, align 8
  %973 = load %struct.sv**, %struct.sv*** %sp, align 8
  %incdec.ptr1450 = getelementptr inbounds %struct.sv*, %struct.sv** %973, i32 1
  store %struct.sv** %incdec.ptr1450, %struct.sv*** %sp, align 8
  store %struct.sv* %972, %struct.sv** %incdec.ptr1450, align 8
  %974 = load %struct.sv*, %struct.sv** %e, align 8
  %975 = load %struct.sv**, %struct.sv*** %sp, align 8
  %incdec.ptr1451 = getelementptr inbounds %struct.sv*, %struct.sv** %975, i32 1
  store %struct.sv** %incdec.ptr1451, %struct.sv*** %sp, align 8
  store %struct.sv* %974, %struct.sv** %incdec.ptr1451, align 8
  %976 = load %struct.sv**, %struct.sv*** %sp, align 8
  store %struct.sv** %976, %struct.sv*** @PL_stack_sp, align 8
  %call1452 = call %struct.op* @Perl_pp_seq()
  store %struct.op* %call1452, %struct.op** %retval, align 8
  br label %return

return:                                           ; preds = %if.end1449, %if.else1440, %if.then1437, %if.then1303, %if.then1284, %if.else1245, %for.end1202, %if.then1196, %for.end1068, %if.then1062, %for.end1016, %if.then1010, %for.end975, %if.then967, %if.then848, %if.then827, %if.then765, %for.end740, %if.then733, %if.else683, %if.then680, %while.end670, %if.then665, %for.end636, %if.then629, %if.else595, %if.then592, %if.then559, %if.then542, %if.then468, %if.end438, %if.else402, %if.then399, %if.then249, %if.else227, %if.then224, %if.then106, %if.else55, %if.then52, %if.then27
  %977 = load %struct.op*, %struct.op** %retval, align 8
  ret %struct.op* %977
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.op* @Perl_pp_enterwhen() #0 {
entry:
  %retval = alloca %struct.op*, align 8
  %sp = alloca %struct.sv**, align 8
  %cx = alloca %struct.context*, align 8
  %gimme = alloca i32, align 4
  %0 = load %struct.sv**, %struct.sv*** @PL_stack_sp, align 8
  store %struct.sv** %0, %struct.sv*** %sp, align 8
  %1 = load %struct.op*, %struct.op** @PL_op, align 8
  %op_flags = getelementptr inbounds %struct.op, %struct.op* %1, i32 0, i32 5
  %2 = load i8, i8* %op_flags, align 2
  %conv = zext i8 %2 to i32
  %and = and i32 %conv, 3
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %3 = load %struct.op*, %struct.op** @PL_op, align 8
  %op_flags1 = getelementptr inbounds %struct.op, %struct.op* %3, i32 0, i32 5
  %4 = load i8, i8* %op_flags1, align 2
  %conv2 = zext i8 %4 to i32
  %and3 = and i32 %conv2, 3
  br label %cond.end

cond.false:                                       ; preds = %entry
  %call = call i32 @Perl_block_gimme()
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %and3, %cond.true ], [ %call, %cond.false ]
  store i32 %cond, i32* %gimme, align 4
  %5 = load %struct.op*, %struct.op** @PL_op, align 8
  %op_flags4 = getelementptr inbounds %struct.op, %struct.op* %5, i32 0, i32 5
  %6 = load i8, i8* %op_flags4, align 2
  %conv5 = zext i8 %6 to i32
  %and6 = and i32 %conv5, 128
  %cmp = icmp eq i32 0, %and6
  br i1 %cmp, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %cond.end
  %7 = load %struct.sv**, %struct.sv*** %sp, align 8
  %incdec.ptr = getelementptr inbounds %struct.sv*, %struct.sv** %7, i32 -1
  store %struct.sv** %incdec.ptr, %struct.sv*** %sp, align 8
  %8 = load %struct.sv*, %struct.sv** %7, align 8
  store %struct.sv* %8, %struct.sv** @PL_Sv, align 8
  %9 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %tobool8 = icmp ne %struct.sv* %9, null
  br i1 %tobool8, label %cond.true9, label %cond.false10

cond.true9:                                       ; preds = %land.lhs.true
  br i1 true, label %land.rhs, label %land.end91

cond.false10:                                     ; preds = %land.lhs.true
  br i1 false, label %land.rhs, label %land.end91

land.rhs:                                         ; preds = %cond.false10, %cond.true9
  %10 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %sv_flags = getelementptr inbounds %struct.sv, %struct.sv* %10, i32 0, i32 2
  %11 = load i32, i32* %sv_flags, align 4
  %and11 = and i32 %11, 2097152
  %tobool12 = icmp ne i32 %and11, 0
  br i1 %tobool12, label %cond.true13, label %cond.false14

cond.true13:                                      ; preds = %land.rhs
  br i1 true, label %cond.true15, label %cond.false18

cond.false14:                                     ; preds = %land.rhs
  br i1 false, label %cond.true15, label %cond.false18

cond.true15:                                      ; preds = %cond.false14, %cond.true13
  %12 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %call16 = call zeroext i1 @Perl_sv_2bool_flags(%struct.sv* %12, i32 2)
  %conv17 = zext i1 %call16 to i32
  br label %cond.end88

cond.false18:                                     ; preds = %cond.false14, %cond.true13
  %13 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %sv_flags19 = getelementptr inbounds %struct.sv, %struct.sv* %13, i32 0, i32 2
  %14 = load i32, i32* %sv_flags19, align 4
  %and20 = and i32 %14, 65280
  %tobool21 = icmp ne i32 %and20, 0
  br i1 %tobool21, label %cond.false32, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %cond.false18
  %15 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %sv_flags22 = getelementptr inbounds %struct.sv, %struct.sv* %15, i32 0, i32 2
  %16 = load i32, i32* %sv_flags22, align 4
  %and23 = and i32 %16, 255
  %cmp24 = icmp eq i32 %and23, 8
  br i1 %cmp24, label %cond.false32, label %lor.lhs.false26

lor.lhs.false26:                                  ; preds = %lor.lhs.false
  %17 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %sv_flags27 = getelementptr inbounds %struct.sv, %struct.sv* %17, i32 0, i32 2
  %18 = load i32, i32* %sv_flags27, align 4
  %and28 = and i32 %18, 16826623
  %cmp29 = icmp eq i32 %and28, 16777226
  br i1 %cmp29, label %cond.false32, label %cond.true31

cond.true31:                                      ; preds = %lor.lhs.false26
  br label %cond.end86

cond.false32:                                     ; preds = %lor.lhs.false26, %lor.lhs.false, %cond.false18
  %19 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %sv_flags33 = getelementptr inbounds %struct.sv, %struct.sv* %19, i32 0, i32 2
  %20 = load i32, i32* %sv_flags33, align 4
  %and34 = and i32 %20, 1024
  %tobool35 = icmp ne i32 %and34, 0
  br i1 %tobool35, label %cond.true36, label %cond.false50

cond.true36:                                      ; preds = %cond.false32
  %21 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %sv_any = getelementptr inbounds %struct.sv, %struct.sv* %21, i32 0, i32 0
  %22 = load i8*, i8** %sv_any, align 8
  %23 = bitcast i8* %22 to %struct.xpv*
  %tobool37 = icmp ne %struct.xpv* %23, null
  br i1 %tobool37, label %land.rhs38, label %land.end49

land.rhs38:                                       ; preds = %cond.true36
  %24 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %sv_any39 = getelementptr inbounds %struct.sv, %struct.sv* %24, i32 0, i32 0
  %25 = load i8*, i8** %sv_any39, align 8
  %26 = bitcast i8* %25 to %struct.xpv*
  %xpv_cur = getelementptr inbounds %struct.xpv, %struct.xpv* %26, i32 0, i32 2
  %27 = load i64, i64* %xpv_cur, align 8
  %cmp40 = icmp ugt i64 %27, 1
  br i1 %cmp40, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %land.rhs38
  %28 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %sv_any42 = getelementptr inbounds %struct.sv, %struct.sv* %28, i32 0, i32 0
  %29 = load i8*, i8** %sv_any42, align 8
  %30 = bitcast i8* %29 to %struct.xpv*
  %xpv_cur43 = getelementptr inbounds %struct.xpv, %struct.xpv* %30, i32 0, i32 2
  %31 = load i64, i64* %xpv_cur43, align 8
  %tobool44 = icmp ne i64 %31, 0
  br i1 %tobool44, label %land.rhs45, label %land.end

land.rhs45:                                       ; preds = %lor.rhs
  %32 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %sv_u = getelementptr inbounds %struct.sv, %struct.sv* %32, i32 0, i32 3
  %svu_pv = bitcast %union.anon* %sv_u to i8**
  %33 = load i8*, i8** %svu_pv, align 8
  %34 = load i8, i8* %33, align 1
  %conv46 = sext i8 %34 to i32
  %cmp47 = icmp ne i32 %conv46, 48
  br label %land.end

land.end:                                         ; preds = %land.rhs45, %lor.rhs
  %35 = phi i1 [ false, %lor.rhs ], [ %cmp47, %land.rhs45 ]
  br label %lor.end

lor.end:                                          ; preds = %land.end, %land.rhs38
  %36 = phi i1 [ true, %land.rhs38 ], [ %35, %land.end ]
  br label %land.end49

land.end49:                                       ; preds = %lor.end, %cond.true36
  %37 = phi i1 [ false, %cond.true36 ], [ %36, %lor.end ]
  %land.ext = zext i1 %37 to i32
  br label %cond.end84

cond.false50:                                     ; preds = %cond.false32
  %38 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %sv_flags51 = getelementptr inbounds %struct.sv, %struct.sv* %38, i32 0, i32 2
  %39 = load i32, i32* %sv_flags51, align 4
  %and52 = and i32 %39, 768
  %tobool53 = icmp ne i32 %and52, 0
  br i1 %tobool53, label %cond.true54, label %cond.false79

cond.true54:                                      ; preds = %cond.false50
  %40 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %sv_flags55 = getelementptr inbounds %struct.sv, %struct.sv* %40, i32 0, i32 2
  %41 = load i32, i32* %sv_flags55, align 4
  %and56 = and i32 %41, 256
  %tobool57 = icmp ne i32 %and56, 0
  br i1 %tobool57, label %land.lhs.true58, label %lor.rhs62

land.lhs.true58:                                  ; preds = %cond.true54
  %42 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %sv_any59 = getelementptr inbounds %struct.sv, %struct.sv* %42, i32 0, i32 0
  %43 = load i8*, i8** %sv_any59, align 8
  %44 = bitcast i8* %43 to %struct.xpviv*
  %xiv_u = getelementptr inbounds %struct.xpviv, %struct.xpviv* %44, i32 0, i32 4
  %xivu_iv = bitcast %union._xivu* %xiv_u to i64*
  %45 = load i64, i64* %xivu_iv, align 8
  %cmp60 = icmp ne i64 %45, 0
  br i1 %cmp60, label %lor.end78, label %lor.rhs62

lor.rhs62:                                        ; preds = %land.lhs.true58, %cond.true54
  %46 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %sv_flags63 = getelementptr inbounds %struct.sv, %struct.sv* %46, i32 0, i32 2
  %47 = load i32, i32* %sv_flags63, align 4
  %and64 = and i32 %47, 512
  %tobool65 = icmp ne i32 %and64, 0
  br i1 %tobool65, label %land.rhs66, label %land.end76

land.rhs66:                                       ; preds = %lor.rhs62
  %48 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %sv_any67 = getelementptr inbounds %struct.sv, %struct.sv* %48, i32 0, i32 0
  %49 = load i8*, i8** %sv_any67, align 8
  %50 = bitcast i8* %49 to %struct.xpvnv*
  %xnv_u = getelementptr inbounds %struct.xpvnv, %struct.xpvnv* %50, i32 0, i32 5
  %xnv_nv = bitcast %union._xnvu* %xnv_u to double*
  %51 = load double, double* %xnv_nv, align 8
  %cmp68 = fcmp uno double %51, %51
  br i1 %cmp68, label %lor.end75, label %lor.rhs69

lor.rhs69:                                        ; preds = %land.rhs66
  %52 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %sv_any70 = getelementptr inbounds %struct.sv, %struct.sv* %52, i32 0, i32 0
  %53 = load i8*, i8** %sv_any70, align 8
  %54 = bitcast i8* %53 to %struct.xpvnv*
  %xnv_u71 = getelementptr inbounds %struct.xpvnv, %struct.xpvnv* %54, i32 0, i32 5
  %xnv_nv72 = bitcast %union._xnvu* %xnv_u71 to double*
  %55 = load double, double* %xnv_nv72, align 8
  %cmp73 = fcmp une double %55, 0.000000e+00
  br label %lor.end75

lor.end75:                                        ; preds = %lor.rhs69, %land.rhs66
  %56 = phi i1 [ true, %land.rhs66 ], [ %cmp73, %lor.rhs69 ]
  br label %land.end76

land.end76:                                       ; preds = %lor.end75, %lor.rhs62
  %57 = phi i1 [ false, %lor.rhs62 ], [ %56, %lor.end75 ]
  br label %lor.end78

lor.end78:                                        ; preds = %land.end76, %land.lhs.true58
  %58 = phi i1 [ true, %land.lhs.true58 ], [ %57, %land.end76 ]
  %lor.ext = zext i1 %58 to i32
  br label %cond.end82

cond.false79:                                     ; preds = %cond.false50
  %59 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %call80 = call zeroext i1 @Perl_sv_2bool_flags(%struct.sv* %59, i32 0)
  %conv81 = zext i1 %call80 to i32
  br label %cond.end82

cond.end82:                                       ; preds = %cond.false79, %lor.end78
  %cond83 = phi i32 [ %lor.ext, %lor.end78 ], [ %conv81, %cond.false79 ]
  br label %cond.end84

cond.end84:                                       ; preds = %cond.end82, %land.end49
  %cond85 = phi i32 [ %land.ext, %land.end49 ], [ %cond83, %cond.end82 ]
  br label %cond.end86

cond.end86:                                       ; preds = %cond.end84, %cond.true31
  %cond87 = phi i32 [ 0, %cond.true31 ], [ %cond85, %cond.end84 ]
  br label %cond.end88

cond.end88:                                       ; preds = %cond.end86, %cond.true15
  %cond89 = phi i32 [ %conv17, %cond.true15 ], [ %cond87, %cond.end86 ]
  %tobool90 = icmp ne i32 %cond89, 0
  br label %land.end91

land.end91:                                       ; preds = %cond.end88, %cond.false10, %cond.true9
  %60 = phi i1 [ false, %cond.false10 ], [ false, %cond.true9 ], [ %tobool90, %cond.end88 ]
  br i1 %60, label %if.end, label %if.then

if.then:                                          ; preds = %land.end91
  %61 = load %struct.sv**, %struct.sv*** %sp, align 8
  store %struct.sv** %61, %struct.sv*** @PL_stack_sp, align 8
  %62 = load %struct.op*, %struct.op** @PL_op, align 8
  %63 = bitcast %struct.op* %62 to %struct.logop*
  %op_other = getelementptr inbounds %struct.logop, %struct.logop* %63, i32 0, i32 8
  %64 = load %struct.op*, %struct.op** %op_other, align 8
  %op_next = getelementptr inbounds %struct.op, %struct.op* %64, i32 0, i32 0
  %65 = load %struct.op*, %struct.op** %op_next, align 8
  store %struct.op* %65, %struct.op** %retval, align 8
  br label %return

if.end:                                           ; preds = %land.end91, %cond.end
  call void @Perl_push_scope()
  call void @Perl_save_strlen(i64* @PL_tmps_floor)
  %66 = load i64, i64* @PL_tmps_ix, align 8
  store i64 %66, i64* @PL_tmps_floor, align 8
  %67 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %si_cxix = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %67, i32 0, i32 4
  %68 = load i32, i32* %si_cxix, align 8
  %69 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %si_cxmax = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %69, i32 0, i32 5
  %70 = load i32, i32* %si_cxmax, align 4
  %cmp93 = icmp slt i32 %68, %70
  br i1 %cmp93, label %cond.true95, label %cond.false97

cond.true95:                                      ; preds = %if.end
  %71 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %si_cxix96 = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %71, i32 0, i32 4
  %72 = load i32, i32* %si_cxix96, align 8
  %inc = add nsw i32 %72, 1
  store i32 %inc, i32* %si_cxix96, align 8
  br label %cond.end100

cond.false97:                                     ; preds = %if.end
  %call98 = call i32 @Perl_cxinc()
  %73 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %si_cxix99 = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %73, i32 0, i32 4
  store i32 %call98, i32* %si_cxix99, align 8
  br label %cond.end100

cond.end100:                                      ; preds = %cond.false97, %cond.true95
  %cond101 = phi i32 [ %inc, %cond.true95 ], [ %call98, %cond.false97 ]
  %74 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %si_cxstack = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %74, i32 0, i32 1
  %75 = load %struct.context*, %struct.context** %si_cxstack, align 8
  %76 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %si_cxix102 = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %76, i32 0, i32 4
  %77 = load i32, i32* %si_cxix102, align 8
  %idxprom = sext i32 %77 to i64
  %arrayidx = getelementptr inbounds %struct.context, %struct.context* %75, i64 %idxprom
  store %struct.context* %arrayidx, %struct.context** %cx, align 8
  %78 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u = getelementptr inbounds %struct.context, %struct.context* %78, i32 0, i32 0
  %cx_subst = bitcast %union.anon.16* %cx_u to %struct.subst*
  %sbu_type = getelementptr inbounds %struct.subst, %struct.subst* %cx_subst, i32 0, i32 0
  store i8 1, i8* %sbu_type, align 8
  %79 = load %struct.sv**, %struct.sv*** %sp, align 8
  %80 = load %struct.sv**, %struct.sv*** @PL_stack_base, align 8
  %sub.ptr.lhs.cast = ptrtoint %struct.sv** %79 to i64
  %sub.ptr.rhs.cast = ptrtoint %struct.sv** %80 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 8
  %conv103 = trunc i64 %sub.ptr.div to i32
  %81 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u104 = getelementptr inbounds %struct.context, %struct.context* %81, i32 0, i32 0
  %cx_blk = bitcast %union.anon.16* %cx_u104 to %struct.block*
  %blku_oldsp = getelementptr inbounds %struct.block, %struct.block* %cx_blk, i32 0, i32 3
  store i32 %conv103, i32* %blku_oldsp, align 4
  %82 = load %struct.cop*, %struct.cop** @PL_curcop, align 8
  %83 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u105 = getelementptr inbounds %struct.context, %struct.context* %83, i32 0, i32 0
  %cx_blk106 = bitcast %union.anon.16* %cx_u105 to %struct.block*
  %blku_oldcop = getelementptr inbounds %struct.block, %struct.block* %cx_blk106, i32 0, i32 4
  store %struct.cop* %82, %struct.cop** %blku_oldcop, align 8
  %84 = load i32*, i32** @PL_markstack_ptr, align 8
  %85 = load i32*, i32** @PL_markstack, align 8
  %sub.ptr.lhs.cast107 = ptrtoint i32* %84 to i64
  %sub.ptr.rhs.cast108 = ptrtoint i32* %85 to i64
  %sub.ptr.sub109 = sub i64 %sub.ptr.lhs.cast107, %sub.ptr.rhs.cast108
  %sub.ptr.div110 = sdiv exact i64 %sub.ptr.sub109, 4
  %conv111 = trunc i64 %sub.ptr.div110 to i32
  %86 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u112 = getelementptr inbounds %struct.context, %struct.context* %86, i32 0, i32 0
  %cx_blk113 = bitcast %union.anon.16* %cx_u112 to %struct.block*
  %blku_oldmarksp = getelementptr inbounds %struct.block, %struct.block* %cx_blk113, i32 0, i32 5
  store i32 %conv111, i32* %blku_oldmarksp, align 8
  %87 = load i32, i32* @PL_scopestack_ix, align 4
  %88 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u114 = getelementptr inbounds %struct.context, %struct.context* %88, i32 0, i32 0
  %cx_blk115 = bitcast %union.anon.16* %cx_u114 to %struct.block*
  %blku_oldscopesp = getelementptr inbounds %struct.block, %struct.block* %cx_blk115, i32 0, i32 6
  store i32 %87, i32* %blku_oldscopesp, align 4
  %89 = load %struct.pmop*, %struct.pmop** @PL_curpm, align 8
  %90 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u116 = getelementptr inbounds %struct.context, %struct.context* %90, i32 0, i32 0
  %cx_blk117 = bitcast %union.anon.16* %cx_u116 to %struct.block*
  %blku_oldpm = getelementptr inbounds %struct.block, %struct.block* %cx_blk117, i32 0, i32 7
  store %struct.pmop* %89, %struct.pmop** %blku_oldpm, align 8
  %91 = load i32, i32* %gimme, align 4
  %conv118 = trunc i32 %91 to i8
  %92 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u119 = getelementptr inbounds %struct.context, %struct.context* %92, i32 0, i32 0
  %cx_blk120 = bitcast %union.anon.16* %cx_u119 to %struct.block*
  %blku_gimme = getelementptr inbounds %struct.block, %struct.block* %cx_blk120, i32 0, i32 1
  store i8 %conv118, i8* %blku_gimme, align 1
  %93 = load %struct.op*, %struct.op** @PL_op, align 8
  %94 = bitcast %struct.op* %93 to %struct.logop*
  %op_other121 = getelementptr inbounds %struct.logop, %struct.logop* %94, i32 0, i32 8
  %95 = load %struct.op*, %struct.op** %op_other121, align 8
  %96 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u122 = getelementptr inbounds %struct.context, %struct.context* %96, i32 0, i32 0
  %cx_blk123 = bitcast %union.anon.16* %cx_u122 to %struct.block*
  %blk_u = getelementptr inbounds %struct.block, %struct.block* %cx_blk123, i32 0, i32 8
  %blku_givwhen = bitcast %union.anon.20* %blk_u to %struct.block_givwhen*
  %leave_op = getelementptr inbounds %struct.block_givwhen, %struct.block_givwhen* %blku_givwhen, i32 0, i32 0
  store %struct.op* %95, %struct.op** %leave_op, align 8
  %97 = load %struct.sv**, %struct.sv*** %sp, align 8
  store %struct.sv** %97, %struct.sv*** @PL_stack_sp, align 8
  %98 = load %struct.op*, %struct.op** @PL_op, align 8
  %op_next124 = getelementptr inbounds %struct.op, %struct.op* %98, i32 0, i32 0
  %99 = load %struct.op*, %struct.op** %op_next124, align 8
  store %struct.op* %99, %struct.op** %retval, align 8
  br label %return

return:                                           ; preds = %cond.end100, %if.then
  %100 = load %struct.op*, %struct.op** %retval, align 8
  ret %struct.op* %100
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.op* @Perl_pp_leavewhen() #0 {
entry:
  %retval = alloca %struct.op*, align 8
  %sp = alloca %struct.sv**, align 8
  %cxix = alloca i32, align 4
  %cx = alloca %struct.context*, align 8
  %gimme = alloca i32, align 4
  %newsp = alloca %struct.sv**, align 8
  %newpm = alloca %struct.pmop*, align 8
  %inner = alloca i32, align 4
  %0 = load %struct.sv**, %struct.sv*** @PL_stack_sp, align 8
  store %struct.sv** %0, %struct.sv*** %sp, align 8
  %1 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %si_cxix = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %1, i32 0, i32 4
  %2 = load i32, i32* %si_cxix, align 8
  %call = call i32 @S_dopoptogiven(i32 %2)
  store i32 %call, i32* %cxix, align 4
  %3 = load i32, i32* %cxix, align 4
  %cmp = icmp slt i32 %3, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %4 = load %struct.op*, %struct.op** @PL_op, align 8
  %op_flags = getelementptr inbounds %struct.op, %struct.op* %4, i32 0, i32 5
  %5 = load i8, i8* %op_flags, align 2
  %conv = zext i8 %5 to i32
  %and = and i32 %conv, 128
  %tobool = icmp ne i32 %and, 0
  %6 = zext i1 %tobool to i64
  %cond = select i1 %tobool, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.83, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.84, i64 0, i64 0)
  %call1 = call %struct.op* (i8*, ...) @Perl_die(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.82, i64 0, i64 0), i8* %cond)
  store %struct.op* %call1, %struct.op** %retval, align 8
  br label %return

if.end:                                           ; preds = %entry
  %7 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %si_cxstack = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %7, i32 0, i32 1
  %8 = load %struct.context*, %struct.context** %si_cxstack, align 8
  %9 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %si_cxix2 = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %9, i32 0, i32 4
  %10 = load i32, i32* %si_cxix2, align 8
  %dec = add nsw i32 %10, -1
  store i32 %dec, i32* %si_cxix2, align 8
  %idxprom = sext i32 %10 to i64
  %arrayidx = getelementptr inbounds %struct.context, %struct.context* %8, i64 %idxprom
  store %struct.context* %arrayidx, %struct.context** %cx, align 8
  %11 = load %struct.sv**, %struct.sv*** @PL_stack_base, align 8
  %12 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u = getelementptr inbounds %struct.context, %struct.context* %12, i32 0, i32 0
  %cx_blk = bitcast %union.anon.16* %cx_u to %struct.block*
  %blku_oldsp = getelementptr inbounds %struct.block, %struct.block* %cx_blk, i32 0, i32 3
  %13 = load i32, i32* %blku_oldsp, align 4
  %idx.ext = sext i32 %13 to i64
  %add.ptr = getelementptr inbounds %struct.sv*, %struct.sv** %11, i64 %idx.ext
  store %struct.sv** %add.ptr, %struct.sv*** %newsp, align 8
  %14 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u3 = getelementptr inbounds %struct.context, %struct.context* %14, i32 0, i32 0
  %cx_blk4 = bitcast %union.anon.16* %cx_u3 to %struct.block*
  %blku_oldcop = getelementptr inbounds %struct.block, %struct.block* %cx_blk4, i32 0, i32 4
  %15 = load %struct.cop*, %struct.cop** %blku_oldcop, align 8
  store %struct.cop* %15, %struct.cop** @PL_curcop, align 8
  %16 = load i32*, i32** @PL_markstack, align 8
  %17 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u5 = getelementptr inbounds %struct.context, %struct.context* %17, i32 0, i32 0
  %cx_blk6 = bitcast %union.anon.16* %cx_u5 to %struct.block*
  %blku_oldmarksp = getelementptr inbounds %struct.block, %struct.block* %cx_blk6, i32 0, i32 5
  %18 = load i32, i32* %blku_oldmarksp, align 8
  %idx.ext7 = sext i32 %18 to i64
  %add.ptr8 = getelementptr inbounds i32, i32* %16, i64 %idx.ext7
  store i32* %add.ptr8, i32** @PL_markstack_ptr, align 8
  %19 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u9 = getelementptr inbounds %struct.context, %struct.context* %19, i32 0, i32 0
  %cx_blk10 = bitcast %union.anon.16* %cx_u9 to %struct.block*
  %blku_oldscopesp = getelementptr inbounds %struct.block, %struct.block* %cx_blk10, i32 0, i32 6
  %20 = load i32, i32* %blku_oldscopesp, align 4
  store i32 %20, i32* @PL_scopestack_ix, align 4
  %21 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u11 = getelementptr inbounds %struct.context, %struct.context* %21, i32 0, i32 0
  %cx_blk12 = bitcast %union.anon.16* %cx_u11 to %struct.block*
  %blku_oldpm = getelementptr inbounds %struct.block, %struct.block* %cx_blk12, i32 0, i32 7
  %22 = load %struct.pmop*, %struct.pmop** %blku_oldpm, align 8
  store %struct.pmop* %22, %struct.pmop** %newpm, align 8
  %23 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u13 = getelementptr inbounds %struct.context, %struct.context* %23, i32 0, i32 0
  %cx_blk14 = bitcast %union.anon.16* %cx_u13 to %struct.block*
  %blku_gimme = getelementptr inbounds %struct.block, %struct.block* %cx_blk14, i32 0, i32 1
  %24 = load i8, i8* %blku_gimme, align 1
  %conv15 = zext i8 %24 to i32
  store i32 %conv15, i32* %gimme, align 4
  %25 = load %struct.sv**, %struct.sv*** %newsp, align 8
  %26 = load %struct.sv**, %struct.sv*** %sp, align 8
  %27 = load %struct.sv**, %struct.sv*** %newsp, align 8
  %28 = load i32, i32* %gimme, align 4
  %call16 = call %struct.sv** @S_leave_common(%struct.sv** %25, %struct.sv** %26, %struct.sv** %27, i32 %28, i32 655360, i1 zeroext false)
  store %struct.sv** %call16, %struct.sv*** %sp, align 8
  %29 = load %struct.pmop*, %struct.pmop** %newpm, align 8
  store %struct.pmop* %29, %struct.pmop** @PL_curpm, align 8
  call void @Perl_pop_scope()
  %30 = load i32, i32* %cxix, align 4
  %31 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %si_cxix17 = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %31, i32 0, i32 4
  %32 = load i32, i32* %si_cxix17, align 8
  %cmp18 = icmp slt i32 %30, %32
  br i1 %cmp18, label %if.then20, label %if.end21

if.then20:                                        ; preds = %if.end
  %33 = load i32, i32* %cxix, align 4
  call void @Perl_dounwind(i32 %33)
  br label %if.end21

if.end21:                                         ; preds = %if.then20, %if.end
  %34 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %si_cxstack22 = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %34, i32 0, i32 1
  %35 = load %struct.context*, %struct.context** %si_cxstack22, align 8
  %36 = load i32, i32* %cxix, align 4
  %idxprom23 = sext i32 %36 to i64
  %arrayidx24 = getelementptr inbounds %struct.context, %struct.context* %35, i64 %idxprom23
  store %struct.context* %arrayidx24, %struct.context** %cx, align 8
  %37 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u25 = getelementptr inbounds %struct.context, %struct.context* %37, i32 0, i32 0
  %cx_subst = bitcast %union.anon.16* %cx_u25 to %struct.subst*
  %sbu_type = getelementptr inbounds %struct.subst, %struct.subst* %cx_subst, i32 0, i32 0
  %38 = load i8, i8* %sbu_type, align 8
  %conv26 = zext i8 %38 to i32
  %and27 = and i32 %conv26, 12
  %cmp28 = icmp eq i32 %and27, 4
  br i1 %cmp28, label %land.lhs.true, label %if.else

land.lhs.true:                                    ; preds = %if.end21
  %39 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u30 = getelementptr inbounds %struct.context, %struct.context* %39, i32 0, i32 0
  %cx_subst31 = bitcast %union.anon.16* %cx_u30 to %struct.subst*
  %sbu_type32 = getelementptr inbounds %struct.subst, %struct.subst* %cx_subst31, i32 0, i32 0
  %40 = load i8, i8* %sbu_type32, align 8
  %conv33 = zext i8 %40 to i32
  %and34 = and i32 %conv33, 15
  %cmp35 = icmp ne i32 %and34, 5
  br i1 %cmp35, label %if.then37, label %if.else

if.then37:                                        ; preds = %land.lhs.true
  %41 = load i32, i32* @PL_scopestack_ix, align 4
  store i32 %41, i32* %inner, align 4
  %42 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %si_cxstack38 = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %42, i32 0, i32 1
  %43 = load %struct.context*, %struct.context** %si_cxstack38, align 8
  %44 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %si_cxix39 = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %44, i32 0, i32 4
  %45 = load i32, i32* %si_cxix39, align 8
  %idxprom40 = sext i32 %45 to i64
  %arrayidx41 = getelementptr inbounds %struct.context, %struct.context* %43, i64 %idxprom40
  store %struct.context* %arrayidx41, %struct.context** %cx, align 8
  %46 = load %struct.sv**, %struct.sv*** @PL_stack_base, align 8
  %47 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u42 = getelementptr inbounds %struct.context, %struct.context* %47, i32 0, i32 0
  %cx_blk43 = bitcast %union.anon.16* %cx_u42 to %struct.block*
  %blku_oldsp44 = getelementptr inbounds %struct.block, %struct.block* %cx_blk43, i32 0, i32 3
  %48 = load i32, i32* %blku_oldsp44, align 4
  %idx.ext45 = sext i32 %48 to i64
  %add.ptr46 = getelementptr inbounds %struct.sv*, %struct.sv** %46, i64 %idx.ext45
  store %struct.sv** %add.ptr46, %struct.sv*** @PL_stack_sp, align 8
  %49 = load i32*, i32** @PL_markstack, align 8
  %50 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u47 = getelementptr inbounds %struct.context, %struct.context* %50, i32 0, i32 0
  %cx_blk48 = bitcast %union.anon.16* %cx_u47 to %struct.block*
  %blku_oldmarksp49 = getelementptr inbounds %struct.block, %struct.block* %cx_blk48, i32 0, i32 5
  %51 = load i32, i32* %blku_oldmarksp49, align 8
  %idx.ext50 = sext i32 %51 to i64
  %add.ptr51 = getelementptr inbounds i32, i32* %49, i64 %idx.ext50
  store i32* %add.ptr51, i32** @PL_markstack_ptr, align 8
  %52 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u52 = getelementptr inbounds %struct.context, %struct.context* %52, i32 0, i32 0
  %cx_blk53 = bitcast %union.anon.16* %cx_u52 to %struct.block*
  %blku_oldscopesp54 = getelementptr inbounds %struct.block, %struct.block* %cx_blk53, i32 0, i32 6
  %53 = load i32, i32* %blku_oldscopesp54, align 4
  store i32 %53, i32* @PL_scopestack_ix, align 4
  %54 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u55 = getelementptr inbounds %struct.context, %struct.context* %54, i32 0, i32 0
  %cx_blk56 = bitcast %union.anon.16* %cx_u55 to %struct.block*
  %blku_oldpm57 = getelementptr inbounds %struct.block, %struct.block* %cx_blk56, i32 0, i32 7
  %55 = load %struct.pmop*, %struct.pmop** %blku_oldpm57, align 8
  store %struct.pmop* %55, %struct.pmop** @PL_curpm, align 8
  %56 = load i32, i32* @PL_scopestack_ix, align 4
  %57 = load i32, i32* %inner, align 4
  %cmp58 = icmp slt i32 %56, %57
  br i1 %cmp58, label %if.then60, label %if.end63

if.then60:                                        ; preds = %if.then37
  %58 = load i32*, i32** @PL_scopestack, align 8
  %59 = load i32, i32* @PL_scopestack_ix, align 4
  %idxprom61 = sext i32 %59 to i64
  %arrayidx62 = getelementptr inbounds i32, i32* %58, i64 %idxprom61
  %60 = load i32, i32* %arrayidx62, align 4
  call void @Perl_leave_scope(i32 %60)
  br label %if.end63

if.end63:                                         ; preds = %if.then60, %if.then37
  %61 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u64 = getelementptr inbounds %struct.context, %struct.context* %61, i32 0, i32 0
  %cx_blk65 = bitcast %union.anon.16* %cx_u64 to %struct.block*
  %blku_oldcop66 = getelementptr inbounds %struct.block, %struct.block* %cx_blk65, i32 0, i32 4
  %62 = load %struct.cop*, %struct.cop** %blku_oldcop66, align 8
  store %struct.cop* %62, %struct.cop** @PL_curcop, align 8
  %63 = load i32, i32* @PL_sig_pending, align 4
  %tobool67 = icmp ne i32 %63, 0
  br i1 %tobool67, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end63
  br i1 true, label %if.then68, label %if.end69

cond.false:                                       ; preds = %if.end63
  br i1 false, label %if.then68, label %if.end69

if.then68:                                        ; preds = %cond.false, %cond.true
  %64 = load void ()*, void ()** @PL_signalhook, align 8
  call void %64()
  br label %if.end69

if.end69:                                         ; preds = %if.then68, %cond.false, %cond.true
  %65 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u70 = getelementptr inbounds %struct.context, %struct.context* %65, i32 0, i32 0
  %cx_blk71 = bitcast %union.anon.16* %cx_u70 to %struct.block*
  %blk_u = getelementptr inbounds %struct.block, %struct.block* %cx_blk71, i32 0, i32 8
  %blku_loop = bitcast %union.anon.20* %blk_u to %struct.block_loop*
  %my_op = getelementptr inbounds %struct.block_loop, %struct.block_loop* %blku_loop, i32 0, i32 1
  %66 = load %struct.loop*, %struct.loop** %my_op, align 8
  %op_nextop = getelementptr inbounds %struct.loop, %struct.loop* %66, i32 0, i32 10
  %67 = load %struct.op*, %struct.op** %op_nextop, align 8
  store %struct.op* %67, %struct.op** %retval, align 8
  br label %return

if.else:                                          ; preds = %land.lhs.true, %if.end21
  %68 = load i32, i32* @PL_sig_pending, align 4
  %tobool72 = icmp ne i32 %68, 0
  br i1 %tobool72, label %cond.true73, label %cond.false74

cond.true73:                                      ; preds = %if.else
  br i1 true, label %if.then75, label %if.end76

cond.false74:                                     ; preds = %if.else
  br i1 false, label %if.then75, label %if.end76

if.then75:                                        ; preds = %cond.false74, %cond.true73
  %69 = load void ()*, void ()** @PL_signalhook, align 8
  call void %69()
  br label %if.end76

if.end76:                                         ; preds = %if.then75, %cond.false74, %cond.true73
  %70 = load %struct.sv**, %struct.sv*** %sp, align 8
  store %struct.sv** %70, %struct.sv*** @PL_stack_sp, align 8
  %71 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u77 = getelementptr inbounds %struct.context, %struct.context* %71, i32 0, i32 0
  %cx_blk78 = bitcast %union.anon.16* %cx_u77 to %struct.block*
  %blk_u79 = getelementptr inbounds %struct.block, %struct.block* %cx_blk78, i32 0, i32 8
  %blku_givwhen = bitcast %union.anon.20* %blk_u79 to %struct.block_givwhen*
  %leave_op = getelementptr inbounds %struct.block_givwhen, %struct.block_givwhen* %blku_givwhen, i32 0, i32 0
  %72 = load %struct.op*, %struct.op** %leave_op, align 8
  store %struct.op* %72, %struct.op** %retval, align 8
  br label %return

return:                                           ; preds = %if.end76, %if.end69, %if.then
  %73 = load %struct.op*, %struct.op** %retval, align 8
  ret %struct.op* %73
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @S_dopoptogiven(i32 %startingblock) #0 {
entry:
  %retval = alloca i32, align 4
  %startingblock.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %cx = alloca %struct.context*, align 8
  store i32 %startingblock, i32* %startingblock.addr, align 4
  %0 = load i32, i32* %startingblock.addr, align 4
  store i32 %0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i32, i32* %i, align 4
  %cmp = icmp sge i32 %1, 0
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %2 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %si_cxstack = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %2, i32 0, i32 1
  %3 = load %struct.context*, %struct.context** %si_cxstack, align 8
  %4 = load i32, i32* %i, align 4
  %idxprom = sext i32 %4 to i64
  %arrayidx = getelementptr inbounds %struct.context, %struct.context* %3, i64 %idxprom
  store %struct.context* %arrayidx, %struct.context** %cx, align 8
  %5 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u = getelementptr inbounds %struct.context, %struct.context* %5, i32 0, i32 0
  %cx_subst = bitcast %union.anon.16* %cx_u to %struct.subst*
  %sbu_type = getelementptr inbounds %struct.subst, %struct.subst* %cx_subst, i32 0, i32 0
  %6 = load i8, i8* %sbu_type, align 8
  %conv = zext i8 %6 to i32
  %and = and i32 %conv, 15
  switch i32 %and, label %sw.default [
    i32 3, label %sw.bb
    i32 5, label %sw.bb1
    i32 7, label %sw.bb2
    i32 6, label %sw.bb2
    i32 4, label %sw.bb2
  ]

sw.default:                                       ; preds = %for.body
  br label %for.inc

sw.bb:                                            ; preds = %for.body
  %7 = load i32, i32* %i, align 4
  store i32 %7, i32* %retval, align 4
  br label %return

sw.bb1:                                           ; preds = %for.body
  br label %sw.epilog

sw.bb2:                                           ; preds = %for.body, %for.body, %for.body
  %8 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u3 = getelementptr inbounds %struct.context, %struct.context* %8, i32 0, i32 0
  %cx_subst4 = bitcast %union.anon.16* %cx_u3 to %struct.subst*
  %sbu_type5 = getelementptr inbounds %struct.subst, %struct.subst* %cx_subst4, i32 0, i32 0
  %9 = load i8, i8* %sbu_type5, align 8
  %conv6 = zext i8 %9 to i32
  %and7 = and i32 %conv6, 12
  %cmp8 = icmp eq i32 %and7, 4
  br i1 %cmp8, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %sw.bb2
  %10 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u10 = getelementptr inbounds %struct.context, %struct.context* %10, i32 0, i32 0
  %cx_subst11 = bitcast %union.anon.16* %cx_u10 to %struct.subst*
  %sbu_type12 = getelementptr inbounds %struct.subst, %struct.subst* %cx_subst11, i32 0, i32 0
  %11 = load i8, i8* %sbu_type12, align 8
  %conv13 = zext i8 %11 to i32
  %and14 = and i32 %conv13, 15
  %cmp15 = icmp ne i32 %and14, 5
  br i1 %cmp15, label %land.lhs.true17, label %if.end

land.lhs.true17:                                  ; preds = %land.lhs.true
  %12 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u18 = getelementptr inbounds %struct.context, %struct.context* %12, i32 0, i32 0
  %cx_subst19 = bitcast %union.anon.16* %cx_u18 to %struct.subst*
  %sbu_type20 = getelementptr inbounds %struct.subst, %struct.subst* %cx_subst19, i32 0, i32 0
  %13 = load i8, i8* %sbu_type20, align 8
  %conv21 = zext i8 %13 to i32
  %and22 = and i32 %conv21, 16
  %tobool = icmp ne i32 %and22, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true17
  %14 = load i32, i32* %i, align 4
  store i32 %14, i32* %retval, align 4
  br label %return

if.end:                                           ; preds = %land.lhs.true17, %land.lhs.true, %sw.bb2
  br label %sw.epilog

sw.epilog:                                        ; preds = %if.end, %sw.bb1
  br label %for.inc

for.inc:                                          ; preds = %sw.epilog, %sw.default
  %15 = load i32, i32* %i, align 4
  %dec = add nsw i32 %15, -1
  store i32 %dec, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %16 = load i32, i32* %i, align 4
  store i32 %16, i32* %retval, align 4
  br label %return

return:                                           ; preds = %for.end, %if.then, %sw.bb
  %17 = load i32, i32* %retval, align 4
  ret i32 %17
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.op* @Perl_pp_continue() #0 {
entry:
  %retval = alloca %struct.op*, align 8
  %sp = alloca %struct.sv**, align 8
  %cxix = alloca i32, align 4
  %cx = alloca %struct.context*, align 8
  %gimme = alloca i32, align 4
  %newsp = alloca %struct.sv**, align 8
  %newpm = alloca %struct.pmop*, align 8
  %0 = load %struct.sv**, %struct.sv*** @PL_stack_sp, align 8
  store %struct.sv** %0, %struct.sv*** %sp, align 8
  %1 = load i32, i32* %gimme, align 4
  %2 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %si_cxix = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %2, i32 0, i32 4
  %3 = load i32, i32* %si_cxix, align 8
  %call = call i32 @S_dopoptowhen(i32 %3)
  store i32 %call, i32* %cxix, align 4
  %4 = load i32, i32* %cxix, align 4
  %cmp = icmp slt i32 %4, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %call1 = call %struct.op* (i8*, ...) @Perl_die(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.85, i64 0, i64 0))
  store %struct.op* %call1, %struct.op** %retval, align 8
  br label %return

if.end:                                           ; preds = %entry
  %5 = load i32, i32* %cxix, align 4
  %6 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %si_cxix2 = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %6, i32 0, i32 4
  %7 = load i32, i32* %si_cxix2, align 8
  %cmp3 = icmp slt i32 %5, %7
  br i1 %cmp3, label %if.then4, label %if.end5

if.then4:                                         ; preds = %if.end
  %8 = load i32, i32* %cxix, align 4
  call void @Perl_dounwind(i32 %8)
  br label %if.end5

if.end5:                                          ; preds = %if.then4, %if.end
  %9 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %si_cxstack = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %9, i32 0, i32 1
  %10 = load %struct.context*, %struct.context** %si_cxstack, align 8
  %11 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %si_cxix6 = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %11, i32 0, i32 4
  %12 = load i32, i32* %si_cxix6, align 8
  %dec = add nsw i32 %12, -1
  store i32 %dec, i32* %si_cxix6, align 8
  %idxprom = sext i32 %12 to i64
  %arrayidx = getelementptr inbounds %struct.context, %struct.context* %10, i64 %idxprom
  store %struct.context* %arrayidx, %struct.context** %cx, align 8
  %13 = load %struct.sv**, %struct.sv*** @PL_stack_base, align 8
  %14 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u = getelementptr inbounds %struct.context, %struct.context* %14, i32 0, i32 0
  %cx_blk = bitcast %union.anon.16* %cx_u to %struct.block*
  %blku_oldsp = getelementptr inbounds %struct.block, %struct.block* %cx_blk, i32 0, i32 3
  %15 = load i32, i32* %blku_oldsp, align 4
  %idx.ext = sext i32 %15 to i64
  %add.ptr = getelementptr inbounds %struct.sv*, %struct.sv** %13, i64 %idx.ext
  store %struct.sv** %add.ptr, %struct.sv*** %newsp, align 8
  %16 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u7 = getelementptr inbounds %struct.context, %struct.context* %16, i32 0, i32 0
  %cx_blk8 = bitcast %union.anon.16* %cx_u7 to %struct.block*
  %blku_oldcop = getelementptr inbounds %struct.block, %struct.block* %cx_blk8, i32 0, i32 4
  %17 = load %struct.cop*, %struct.cop** %blku_oldcop, align 8
  store %struct.cop* %17, %struct.cop** @PL_curcop, align 8
  %18 = load i32*, i32** @PL_markstack, align 8
  %19 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u9 = getelementptr inbounds %struct.context, %struct.context* %19, i32 0, i32 0
  %cx_blk10 = bitcast %union.anon.16* %cx_u9 to %struct.block*
  %blku_oldmarksp = getelementptr inbounds %struct.block, %struct.block* %cx_blk10, i32 0, i32 5
  %20 = load i32, i32* %blku_oldmarksp, align 8
  %idx.ext11 = sext i32 %20 to i64
  %add.ptr12 = getelementptr inbounds i32, i32* %18, i64 %idx.ext11
  store i32* %add.ptr12, i32** @PL_markstack_ptr, align 8
  %21 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u13 = getelementptr inbounds %struct.context, %struct.context* %21, i32 0, i32 0
  %cx_blk14 = bitcast %union.anon.16* %cx_u13 to %struct.block*
  %blku_oldscopesp = getelementptr inbounds %struct.block, %struct.block* %cx_blk14, i32 0, i32 6
  %22 = load i32, i32* %blku_oldscopesp, align 4
  store i32 %22, i32* @PL_scopestack_ix, align 4
  %23 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u15 = getelementptr inbounds %struct.context, %struct.context* %23, i32 0, i32 0
  %cx_blk16 = bitcast %union.anon.16* %cx_u15 to %struct.block*
  %blku_oldpm = getelementptr inbounds %struct.block, %struct.block* %cx_blk16, i32 0, i32 7
  %24 = load %struct.pmop*, %struct.pmop** %blku_oldpm, align 8
  store %struct.pmop* %24, %struct.pmop** %newpm, align 8
  %25 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u17 = getelementptr inbounds %struct.context, %struct.context* %25, i32 0, i32 0
  %cx_blk18 = bitcast %union.anon.16* %cx_u17 to %struct.block*
  %blku_gimme = getelementptr inbounds %struct.block, %struct.block* %cx_blk18, i32 0, i32 1
  %26 = load i8, i8* %blku_gimme, align 1
  %conv = zext i8 %26 to i32
  store i32 %conv, i32* %gimme, align 4
  %27 = load %struct.sv**, %struct.sv*** %newsp, align 8
  store %struct.sv** %27, %struct.sv*** %sp, align 8
  %28 = load %struct.pmop*, %struct.pmop** %newpm, align 8
  store %struct.pmop* %28, %struct.pmop** @PL_curpm, align 8
  call void @Perl_pop_scope()
  %29 = load %struct.sv**, %struct.sv*** %sp, align 8
  store %struct.sv** %29, %struct.sv*** @PL_stack_sp, align 8
  %30 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u19 = getelementptr inbounds %struct.context, %struct.context* %30, i32 0, i32 0
  %cx_blk20 = bitcast %union.anon.16* %cx_u19 to %struct.block*
  %blk_u = getelementptr inbounds %struct.block, %struct.block* %cx_blk20, i32 0, i32 8
  %blku_givwhen = bitcast %union.anon.20* %blk_u to %struct.block_givwhen*
  %leave_op = getelementptr inbounds %struct.block_givwhen, %struct.block_givwhen* %blku_givwhen, i32 0, i32 0
  %31 = load %struct.op*, %struct.op** %leave_op, align 8
  %op_next = getelementptr inbounds %struct.op, %struct.op* %31, i32 0, i32 0
  %32 = load %struct.op*, %struct.op** %op_next, align 8
  store %struct.op* %32, %struct.op** %retval, align 8
  br label %return

return:                                           ; preds = %if.end5, %if.then
  %33 = load %struct.op*, %struct.op** %retval, align 8
  ret %struct.op* %33
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @S_dopoptowhen(i32 %startingblock) #0 {
entry:
  %retval = alloca i32, align 4
  %startingblock.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %cx = alloca %struct.context*, align 8
  store i32 %startingblock, i32* %startingblock.addr, align 4
  %0 = load i32, i32* %startingblock.addr, align 4
  store i32 %0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i32, i32* %i, align 4
  %cmp = icmp sge i32 %1, 0
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %2 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %si_cxstack = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %2, i32 0, i32 1
  %3 = load %struct.context*, %struct.context** %si_cxstack, align 8
  %4 = load i32, i32* %i, align 4
  %idxprom = sext i32 %4 to i64
  %arrayidx = getelementptr inbounds %struct.context, %struct.context* %3, i64 %idxprom
  store %struct.context* %arrayidx, %struct.context** %cx, align 8
  %5 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u = getelementptr inbounds %struct.context, %struct.context* %5, i32 0, i32 0
  %cx_subst = bitcast %union.anon.16* %cx_u to %struct.subst*
  %sbu_type = getelementptr inbounds %struct.subst, %struct.subst* %cx_subst, i32 0, i32 0
  %6 = load i8, i8* %sbu_type, align 8
  %conv = zext i8 %6 to i32
  %and = and i32 %conv, 15
  switch i32 %and, label %sw.default [
    i32 1, label %sw.bb
  ]

sw.default:                                       ; preds = %for.body
  br label %for.inc

sw.bb:                                            ; preds = %for.body
  %7 = load i32, i32* %i, align 4
  store i32 %7, i32* %retval, align 4
  br label %return

for.inc:                                          ; preds = %sw.default
  %8 = load i32, i32* %i, align 4
  %dec = add nsw i32 %8, -1
  store i32 %dec, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %9 = load i32, i32* %i, align 4
  store i32 %9, i32* %retval, align 4
  br label %return

return:                                           ; preds = %for.end, %sw.bb
  %10 = load i32, i32* %retval, align 4
  ret i32 %10
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.op* @Perl_pp_break() #0 {
entry:
  %retval = alloca %struct.op*, align 8
  %cxix = alloca i32, align 4
  %cx = alloca %struct.context*, align 8
  %0 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %si_cxix = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %0, i32 0, i32 4
  %1 = load i32, i32* %si_cxix, align 8
  %call = call i32 @S_dopoptogiven(i32 %1)
  store i32 %call, i32* %cxix, align 4
  %2 = load i32, i32* %cxix, align 4
  %cmp = icmp slt i32 %2, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %call1 = call %struct.op* (i8*, ...) @Perl_die(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.86, i64 0, i64 0))
  store %struct.op* %call1, %struct.op** %retval, align 8
  br label %return

if.end:                                           ; preds = %entry
  %3 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %si_cxstack = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %3, i32 0, i32 1
  %4 = load %struct.context*, %struct.context** %si_cxstack, align 8
  %5 = load i32, i32* %cxix, align 4
  %idxprom = sext i32 %5 to i64
  %arrayidx = getelementptr inbounds %struct.context, %struct.context* %4, i64 %idxprom
  store %struct.context* %arrayidx, %struct.context** %cx, align 8
  %6 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u = getelementptr inbounds %struct.context, %struct.context* %6, i32 0, i32 0
  %cx_subst = bitcast %union.anon.16* %cx_u to %struct.subst*
  %sbu_type = getelementptr inbounds %struct.subst, %struct.subst* %cx_subst, i32 0, i32 0
  %7 = load i8, i8* %sbu_type, align 8
  %conv = zext i8 %7 to i32
  %and = and i32 %conv, 12
  %cmp2 = icmp eq i32 %and, 4
  br i1 %cmp2, label %land.lhs.true, label %if.end13

land.lhs.true:                                    ; preds = %if.end
  %8 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u4 = getelementptr inbounds %struct.context, %struct.context* %8, i32 0, i32 0
  %cx_subst5 = bitcast %union.anon.16* %cx_u4 to %struct.subst*
  %sbu_type6 = getelementptr inbounds %struct.subst, %struct.subst* %cx_subst5, i32 0, i32 0
  %9 = load i8, i8* %sbu_type6, align 8
  %conv7 = zext i8 %9 to i32
  %and8 = and i32 %conv7, 15
  %cmp9 = icmp ne i32 %and8, 5
  br i1 %cmp9, label %if.then11, label %if.end13

if.then11:                                        ; preds = %land.lhs.true
  %call12 = call %struct.op* (i8*, ...) @Perl_die(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.87, i64 0, i64 0))
  store %struct.op* %call12, %struct.op** %retval, align 8
  br label %return

if.end13:                                         ; preds = %land.lhs.true, %if.end
  %10 = load i32, i32* %cxix, align 4
  %11 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %si_cxix14 = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %11, i32 0, i32 4
  %12 = load i32, i32* %si_cxix14, align 8
  %cmp15 = icmp slt i32 %10, %12
  br i1 %cmp15, label %if.then17, label %if.end18

if.then17:                                        ; preds = %if.end13
  %13 = load i32, i32* %cxix, align 4
  call void @Perl_dounwind(i32 %13)
  br label %if.end18

if.end18:                                         ; preds = %if.then17, %if.end13
  %14 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %si_cxstack19 = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %14, i32 0, i32 1
  %15 = load %struct.context*, %struct.context** %si_cxstack19, align 8
  %16 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %si_cxix20 = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %16, i32 0, i32 4
  %17 = load i32, i32* %si_cxix20, align 8
  %idxprom21 = sext i32 %17 to i64
  %arrayidx22 = getelementptr inbounds %struct.context, %struct.context* %15, i64 %idxprom21
  store %struct.context* %arrayidx22, %struct.context** %cx, align 8
  %18 = load %struct.sv**, %struct.sv*** @PL_stack_base, align 8
  %19 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u23 = getelementptr inbounds %struct.context, %struct.context* %19, i32 0, i32 0
  %cx_blk = bitcast %union.anon.16* %cx_u23 to %struct.block*
  %blku_oldsp = getelementptr inbounds %struct.block, %struct.block* %cx_blk, i32 0, i32 3
  %20 = load i32, i32* %blku_oldsp, align 4
  %idx.ext = sext i32 %20 to i64
  %add.ptr = getelementptr inbounds %struct.sv*, %struct.sv** %18, i64 %idx.ext
  store %struct.sv** %add.ptr, %struct.sv*** @PL_stack_sp, align 8
  %21 = load i32*, i32** @PL_markstack, align 8
  %22 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u24 = getelementptr inbounds %struct.context, %struct.context* %22, i32 0, i32 0
  %cx_blk25 = bitcast %union.anon.16* %cx_u24 to %struct.block*
  %blku_oldmarksp = getelementptr inbounds %struct.block, %struct.block* %cx_blk25, i32 0, i32 5
  %23 = load i32, i32* %blku_oldmarksp, align 8
  %idx.ext26 = sext i32 %23 to i64
  %add.ptr27 = getelementptr inbounds i32, i32* %21, i64 %idx.ext26
  store i32* %add.ptr27, i32** @PL_markstack_ptr, align 8
  %24 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u28 = getelementptr inbounds %struct.context, %struct.context* %24, i32 0, i32 0
  %cx_blk29 = bitcast %union.anon.16* %cx_u28 to %struct.block*
  %blku_oldscopesp = getelementptr inbounds %struct.block, %struct.block* %cx_blk29, i32 0, i32 6
  %25 = load i32, i32* %blku_oldscopesp, align 4
  store i32 %25, i32* @PL_scopestack_ix, align 4
  %26 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u30 = getelementptr inbounds %struct.context, %struct.context* %26, i32 0, i32 0
  %cx_blk31 = bitcast %union.anon.16* %cx_u30 to %struct.block*
  %blku_oldpm = getelementptr inbounds %struct.block, %struct.block* %cx_blk31, i32 0, i32 7
  %27 = load %struct.pmop*, %struct.pmop** %blku_oldpm, align 8
  store %struct.pmop* %27, %struct.pmop** @PL_curpm, align 8
  %28 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u32 = getelementptr inbounds %struct.context, %struct.context* %28, i32 0, i32 0
  %cx_blk33 = bitcast %union.anon.16* %cx_u32 to %struct.block*
  %blk_u = getelementptr inbounds %struct.block, %struct.block* %cx_blk33, i32 0, i32 8
  %blku_givwhen = bitcast %union.anon.20* %blk_u to %struct.block_givwhen*
  %leave_op = getelementptr inbounds %struct.block_givwhen, %struct.block_givwhen* %blku_givwhen, i32 0, i32 0
  %29 = load %struct.op*, %struct.op** %leave_op, align 8
  store %struct.op* %29, %struct.op** %retval, align 8
  br label %return

return:                                           ; preds = %if.end18, %if.then11, %if.then
  %30 = load %struct.op*, %struct.op** %retval, align 8
  ret %struct.op* %30
}

declare dso_local void @Perl_sv_free2(%struct.sv*, i32) #1

declare dso_local zeroext i1 @Perl_isinfnan(double) #1

declare dso_local %struct.sv* @Perl_vivify_ref(%struct.sv*, i32) #1

; Function Attrs: noinline nounwind uwtable
define internal i32 @S_dopoptoloop(i32 %startingblock) #0 {
entry:
  %retval = alloca i32, align 4
  %startingblock.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %cx = alloca %struct.context*, align 8
  %coerce = alloca %union.XOPRETANY, align 8
  store i32 %startingblock, i32* %startingblock.addr, align 4
  %0 = load i32, i32* %startingblock.addr, align 4
  store i32 %0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i32, i32* %i, align 4
  %cmp = icmp sge i32 %1, 0
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %2 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %si_cxstack = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %2, i32 0, i32 1
  %3 = load %struct.context*, %struct.context** %si_cxstack, align 8
  %4 = load i32, i32* %i, align 4
  %idxprom = sext i32 %4 to i64
  %arrayidx = getelementptr inbounds %struct.context, %struct.context* %3, i64 %idxprom
  store %struct.context* %arrayidx, %struct.context** %cx, align 8
  %5 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u = getelementptr inbounds %struct.context, %struct.context* %5, i32 0, i32 0
  %cx_subst = bitcast %union.anon.16* %cx_u to %struct.subst*
  %sbu_type = getelementptr inbounds %struct.subst, %struct.subst* %cx_subst, i32 0, i32 0
  %6 = load i8, i8* %sbu_type, align 8
  %conv = zext i8 %6 to i32
  %and = and i32 %conv, 15
  switch i32 %and, label %sw.epilog [
    i32 11, label %sw.bb
    i32 8, label %sw.bb
    i32 9, label %sw.bb
    i32 10, label %sw.bb
    i32 0, label %sw.bb
    i32 7, label %sw.bb23
    i32 6, label %sw.bb23
    i32 4, label %sw.bb23
    i32 5, label %sw.bb23
  ]

sw.bb:                                            ; preds = %for.body, %for.body, %for.body, %for.body, %for.body
  %7 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u1 = getelementptr inbounds %struct.context, %struct.context* %7, i32 0, i32 0
  %cx_subst2 = bitcast %union.anon.16* %cx_u1 to %struct.subst*
  %sbu_type3 = getelementptr inbounds %struct.subst, %struct.subst* %cx_subst2, i32 0, i32 0
  %8 = load i8, i8* %sbu_type3, align 8
  %conv4 = zext i8 %8 to i32
  %and5 = and i32 %conv4, 15
  %idxprom6 = sext i32 %and5 to i64
  %arrayidx7 = getelementptr inbounds [12 x i8*], [12 x i8*]* @context_name, i64 0, i64 %idxprom6
  %9 = load i8*, i8** %arrayidx7, align 8
  %10 = load %struct.op*, %struct.op** @PL_op, align 8
  %op_type = getelementptr inbounds %struct.op, %struct.op* %10, i32 0, i32 4
  %bf.load = load i16, i16* %op_type, align 8
  %bf.clear = and i16 %bf.load, 511
  %bf.cast = zext i16 %bf.clear to i32
  %cmp8 = icmp eq i32 %bf.cast, 380
  br i1 %cmp8, label %cond.true, label %cond.false

cond.true:                                        ; preds = %sw.bb
  %11 = load %struct.op*, %struct.op** @PL_op, align 8
  %call = call i8* @Perl_custom_op_get_field(%struct.op* %11, i32 1)
  %coerce.dive = getelementptr inbounds %union.XOPRETANY, %union.XOPRETANY* %coerce, i32 0, i32 0
  store i8* %call, i8** %coerce.dive, align 8
  %xop_name = bitcast %union.XOPRETANY* %coerce to i8**
  %12 = load i8*, i8** %xop_name, align 8
  br label %cond.end

cond.false:                                       ; preds = %sw.bb
  %13 = load %struct.op*, %struct.op** @PL_op, align 8
  %op_type10 = getelementptr inbounds %struct.op, %struct.op* %13, i32 0, i32 4
  %bf.load11 = load i16, i16* %op_type10, align 8
  %bf.clear12 = and i16 %bf.load11, 511
  %bf.cast13 = zext i16 %bf.clear12 to i32
  %idxprom14 = zext i32 %bf.cast13 to i64
  %arrayidx15 = getelementptr inbounds [0 x i8*], [0 x i8*]* @PL_op_name, i64 0, i64 %idxprom14
  %14 = load i8*, i8** %arrayidx15, align 8
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %12, %cond.true ], [ %14, %cond.false ]
  call void (i32, i8*, ...) @Perl_ck_warner(i32 3, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.97, i64 0, i64 0), i8* %9, i8* %cond)
  %15 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u16 = getelementptr inbounds %struct.context, %struct.context* %15, i32 0, i32 0
  %cx_subst17 = bitcast %union.anon.16* %cx_u16 to %struct.subst*
  %sbu_type18 = getelementptr inbounds %struct.subst, %struct.subst* %cx_subst17, i32 0, i32 0
  %16 = load i8, i8* %sbu_type18, align 8
  %conv19 = zext i8 %16 to i32
  %and20 = and i32 %conv19, 15
  %cmp21 = icmp eq i32 %and20, 0
  br i1 %cmp21, label %if.then, label %if.end

if.then:                                          ; preds = %cond.end
  store i32 -1, i32* %retval, align 4
  br label %return

if.end:                                           ; preds = %cond.end
  br label %sw.epilog

sw.bb23:                                          ; preds = %for.body, %for.body, %for.body, %for.body
  %17 = load i32, i32* %i, align 4
  store i32 %17, i32* %retval, align 4
  br label %return

sw.epilog:                                        ; preds = %for.body, %if.end
  br label %for.inc

for.inc:                                          ; preds = %sw.epilog
  %18 = load i32, i32* %i, align 4
  %dec = add nsw i32 %18, -1
  store i32 %dec, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %19 = load i32, i32* %i, align 4
  store i32 %19, i32* %retval, align 4
  br label %return

return:                                           ; preds = %for.end, %sw.bb23, %if.then
  %20 = load i32, i32* %retval, align 4
  ret i32 %20
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @S_dopoptolabel(i8* %label, i64 %len, i32 %flags) #0 {
entry:
  %retval = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %len.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %cx = alloca %struct.context*, align 8
  %coerce = alloca %union.XOPRETANY, align 8
  %cx_label_len = alloca i64, align 8
  %cx_label_flags = alloca i32, align 4
  %cx_label = alloca i8*, align 8
  store i8* %label, i8** %label.addr, align 8
  store i64 %len, i64* %len.addr, align 8
  store i32 %flags, i32* %flags.addr, align 4
  %0 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %si_cxix = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %0, i32 0, i32 4
  %1 = load i32, i32* %si_cxix, align 8
  store i32 %1, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load i32, i32* %i, align 4
  %cmp = icmp sge i32 %2, 0
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %3 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %si_cxstack = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %3, i32 0, i32 1
  %4 = load %struct.context*, %struct.context** %si_cxstack, align 8
  %5 = load i32, i32* %i, align 4
  %idxprom = sext i32 %5 to i64
  %arrayidx = getelementptr inbounds %struct.context, %struct.context* %4, i64 %idxprom
  store %struct.context* %arrayidx, %struct.context** %cx, align 8
  %6 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u = getelementptr inbounds %struct.context, %struct.context* %6, i32 0, i32 0
  %cx_subst = bitcast %union.anon.16* %cx_u to %struct.subst*
  %sbu_type = getelementptr inbounds %struct.subst, %struct.subst* %cx_subst, i32 0, i32 0
  %7 = load i8, i8* %sbu_type, align 8
  %conv = zext i8 %7 to i32
  %and = and i32 %conv, 15
  switch i32 %and, label %sw.epilog [
    i32 11, label %sw.bb
    i32 8, label %sw.bb
    i32 9, label %sw.bb
    i32 10, label %sw.bb
    i32 0, label %sw.bb
    i32 7, label %sw.bb23
    i32 6, label %sw.bb23
    i32 4, label %sw.bb23
    i32 5, label %sw.bb23
  ]

sw.bb:                                            ; preds = %for.body, %for.body, %for.body, %for.body, %for.body
  %8 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u1 = getelementptr inbounds %struct.context, %struct.context* %8, i32 0, i32 0
  %cx_subst2 = bitcast %union.anon.16* %cx_u1 to %struct.subst*
  %sbu_type3 = getelementptr inbounds %struct.subst, %struct.subst* %cx_subst2, i32 0, i32 0
  %9 = load i8, i8* %sbu_type3, align 8
  %conv4 = zext i8 %9 to i32
  %and5 = and i32 %conv4, 15
  %idxprom6 = sext i32 %and5 to i64
  %arrayidx7 = getelementptr inbounds [12 x i8*], [12 x i8*]* @context_name, i64 0, i64 %idxprom6
  %10 = load i8*, i8** %arrayidx7, align 8
  %11 = load %struct.op*, %struct.op** @PL_op, align 8
  %op_type = getelementptr inbounds %struct.op, %struct.op* %11, i32 0, i32 4
  %bf.load = load i16, i16* %op_type, align 8
  %bf.clear = and i16 %bf.load, 511
  %bf.cast = zext i16 %bf.clear to i32
  %cmp8 = icmp eq i32 %bf.cast, 380
  br i1 %cmp8, label %cond.true, label %cond.false

cond.true:                                        ; preds = %sw.bb
  %12 = load %struct.op*, %struct.op** @PL_op, align 8
  %call = call i8* @Perl_custom_op_get_field(%struct.op* %12, i32 1)
  %coerce.dive = getelementptr inbounds %union.XOPRETANY, %union.XOPRETANY* %coerce, i32 0, i32 0
  store i8* %call, i8** %coerce.dive, align 8
  %xop_name = bitcast %union.XOPRETANY* %coerce to i8**
  %13 = load i8*, i8** %xop_name, align 8
  br label %cond.end

cond.false:                                       ; preds = %sw.bb
  %14 = load %struct.op*, %struct.op** @PL_op, align 8
  %op_type10 = getelementptr inbounds %struct.op, %struct.op* %14, i32 0, i32 4
  %bf.load11 = load i16, i16* %op_type10, align 8
  %bf.clear12 = and i16 %bf.load11, 511
  %bf.cast13 = zext i16 %bf.clear12 to i32
  %idxprom14 = zext i32 %bf.cast13 to i64
  %arrayidx15 = getelementptr inbounds [0 x i8*], [0 x i8*]* @PL_op_name, i64 0, i64 %idxprom14
  %15 = load i8*, i8** %arrayidx15, align 8
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %13, %cond.true ], [ %15, %cond.false ]
  call void (i32, i8*, ...) @Perl_ck_warner(i32 3, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.97, i64 0, i64 0), i8* %10, i8* %cond)
  %16 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u16 = getelementptr inbounds %struct.context, %struct.context* %16, i32 0, i32 0
  %cx_subst17 = bitcast %union.anon.16* %cx_u16 to %struct.subst*
  %sbu_type18 = getelementptr inbounds %struct.subst, %struct.subst* %cx_subst17, i32 0, i32 0
  %17 = load i8, i8* %sbu_type18, align 8
  %conv19 = zext i8 %17 to i32
  %and20 = and i32 %conv19, 15
  %cmp21 = icmp eq i32 %and20, 0
  br i1 %cmp21, label %if.then, label %if.end

if.then:                                          ; preds = %cond.end
  store i32 -1, i32* %retval, align 4
  br label %return

if.end:                                           ; preds = %cond.end
  br label %sw.epilog

sw.bb23:                                          ; preds = %for.body, %for.body, %for.body, %for.body
  store i64 0, i64* %cx_label_len, align 8
  store i32 0, i32* %cx_label_flags, align 4
  %18 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u24 = getelementptr inbounds %struct.context, %struct.context* %18, i32 0, i32 0
  %cx_blk = bitcast %union.anon.16* %cx_u24 to %struct.block*
  %blku_oldcop = getelementptr inbounds %struct.block, %struct.block* %cx_blk, i32 0, i32 4
  %19 = load %struct.cop*, %struct.cop** %blku_oldcop, align 8
  %call25 = call i8* @Perl_cop_fetch_label(%struct.cop* %19, i64* %cx_label_len, i32* %cx_label_flags)
  %add.ptr = getelementptr inbounds i8, i8* %call25, i64 0
  store i8* %add.ptr, i8** %cx_label, align 8
  %20 = load i8*, i8** %cx_label, align 8
  %tobool = icmp ne i8* %20, null
  br i1 %tobool, label %lor.lhs.false, label %if.then49

lor.lhs.false:                                    ; preds = %sw.bb23
  %21 = load i32, i32* %cx_label_flags, align 4
  %and26 = and i32 %21, 536870912
  %22 = load i32, i32* %flags.addr, align 4
  %and27 = and i32 %22, 536870912
  %cmp28 = icmp ne i32 %and26, %and27
  br i1 %cmp28, label %cond.true30, label %cond.false41

cond.true30:                                      ; preds = %lor.lhs.false
  %23 = load i32, i32* %flags.addr, align 4
  %and31 = and i32 %23, 536870912
  %tobool32 = icmp ne i32 %and31, 0
  br i1 %tobool32, label %cond.true33, label %cond.false37

cond.true33:                                      ; preds = %cond.true30
  %24 = load i8*, i8** %cx_label, align 8
  %25 = load i64, i64* %cx_label_len, align 8
  %26 = load i8*, i8** %label.addr, align 8
  %27 = load i64, i64* %len.addr, align 8
  %call34 = call i32 @Perl_bytes_cmp_utf8(i8* %24, i64 %25, i8* %26, i64 %27)
  %cmp35 = icmp eq i32 %call34, 0
  br i1 %cmp35, label %if.end50, label %if.then49

cond.false37:                                     ; preds = %cond.true30
  %28 = load i8*, i8** %label.addr, align 8
  %29 = load i64, i64* %len.addr, align 8
  %30 = load i8*, i8** %cx_label, align 8
  %31 = load i64, i64* %cx_label_len, align 8
  %call38 = call i32 @Perl_bytes_cmp_utf8(i8* %28, i64 %29, i8* %30, i64 %31)
  %cmp39 = icmp eq i32 %call38, 0
  br i1 %cmp39, label %if.end50, label %if.then49

cond.false41:                                     ; preds = %lor.lhs.false
  %32 = load i64, i64* %len.addr, align 8
  %33 = load i64, i64* %cx_label_len, align 8
  %cmp42 = icmp eq i64 %32, %33
  br i1 %cmp42, label %land.lhs.true, label %if.then49

land.lhs.true:                                    ; preds = %cond.false41
  %34 = load i8*, i8** %cx_label, align 8
  %35 = load i8*, i8** %label.addr, align 8
  %cmp44 = icmp eq i8* %34, %35
  br i1 %cmp44, label %if.end50, label %lor.lhs.false46

lor.lhs.false46:                                  ; preds = %land.lhs.true
  %36 = load i8*, i8** %cx_label, align 8
  %37 = load i8*, i8** %label.addr, align 8
  %38 = load i64, i64* %len.addr, align 8
  %call47 = call i32 @memcmp(i8* %36, i8* %37, i64 %38) #8
  %tobool48 = icmp ne i32 %call47, 0
  br i1 %tobool48, label %if.then49, label %if.end50

if.then49:                                        ; preds = %lor.lhs.false46, %cond.false41, %cond.false37, %cond.true33, %sw.bb23
  br label %for.inc

if.end50:                                         ; preds = %lor.lhs.false46, %land.lhs.true, %cond.false37, %cond.true33
  %39 = load i32, i32* %i, align 4
  store i32 %39, i32* %retval, align 4
  br label %return

sw.epilog:                                        ; preds = %for.body, %if.end
  br label %for.inc

for.inc:                                          ; preds = %sw.epilog, %if.then49
  %40 = load i32, i32* %i, align 4
  %dec = add nsw i32 %40, -1
  store i32 %dec, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %41 = load i32, i32* %i, align 4
  store i32 %41, i32* %retval, align 4
  br label %return

return:                                           ; preds = %for.end, %if.end50, %if.then
  %42 = load i32, i32* %retval, align 4
  ret i32 %42
}

declare dso_local i8* @Perl_custom_op_get_field(%struct.op*, i32) #1

declare dso_local i8* @Perl_cop_fetch_label(%struct.cop*, i64*, i32*) #1

declare dso_local i32 @Perl_bytes_cmp_utf8(i8*, i64, i8*, i64) #1

declare dso_local %struct.gv* @Perl_cvgv_from_hek(%struct.cv*) #1

; Function Attrs: nounwind readonly
declare dso_local i8* @memchr(i8*, i32, i64) #3

; Function Attrs: nounwind
declare dso_local i32 @stat64(i8*, %struct.stat*) #5

; Function Attrs: noinline nounwind uwtable
define internal %struct._PerlIO** @S_check_type_and_open(%struct.sv* %name) #0 {
entry:
  %retval = alloca %struct._PerlIO**, align 8
  %name.addr = alloca %struct.sv*, align 8
  %st = alloca %struct.stat, align 8
  %len = alloca i64, align 8
  %retio = alloca %struct._PerlIO**, align 8
  %p = alloca i8*, align 8
  %st_rc = alloca i32, align 4
  store %struct.sv* %name, %struct.sv** %name.addr, align 8
  %0 = load %struct.sv*, %struct.sv** %name.addr, align 8
  %sv_flags = getelementptr inbounds %struct.sv, %struct.sv* %0, i32 0, i32 2
  %1 = load i32, i32* %sv_flags, align 4
  %and = and i32 %1, 2098176
  %cmp = icmp eq i32 %and, 1024
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %2 = load %struct.sv*, %struct.sv** %name.addr, align 8
  %sv_any = getelementptr inbounds %struct.sv, %struct.sv* %2, i32 0, i32 0
  %3 = load i8*, i8** %sv_any, align 8
  %4 = bitcast i8* %3 to %struct.xpv*
  %xpv_cur = getelementptr inbounds %struct.xpv, %struct.xpv* %4, i32 0, i32 2
  %5 = load i64, i64* %xpv_cur, align 8
  store i64 %5, i64* %len, align 8
  %6 = load %struct.sv*, %struct.sv** %name.addr, align 8
  %sv_u = getelementptr inbounds %struct.sv, %struct.sv* %6, i32 0, i32 3
  %svu_pv = bitcast %union.anon* %sv_u to i8**
  %7 = load i8*, i8** %svu_pv, align 8
  %add.ptr = getelementptr inbounds i8, i8* %7, i64 0
  br label %cond.end

cond.false:                                       ; preds = %entry
  %8 = load %struct.sv*, %struct.sv** %name.addr, align 8
  %call = call i8* @Perl_sv_2pv_flags(%struct.sv* %8, i64* %len, i32 34)
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %add.ptr, %cond.true ], [ %call, %cond.false ]
  store i8* %cond, i8** %p, align 8
  %9 = load i8*, i8** %p, align 8
  %10 = load i64, i64* %len, align 8
  %call1 = call zeroext i1 @S_is_safe_syscall(i8* %9, i64 %10, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.58, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.59, i64 0, i64 0))
  br i1 %call1, label %if.end, label %if.then

if.then:                                          ; preds = %cond.end
  store %struct._PerlIO** null, %struct._PerlIO*** %retval, align 8
  br label %return

if.end:                                           ; preds = %cond.end
  %call2 = call i32* @__errno_location() #11
  store i32 0, i32* %call2, align 4
  %11 = load i8*, i8** %p, align 8
  %call3 = call i32 @stat64(i8* %11, %struct.stat* %st) #10
  store i32 %call3, i32* %st_rc, align 4
  %12 = load i32, i32* %st_rc, align 4
  %cmp4 = icmp slt i32 %12, 0
  br i1 %cmp4, label %if.then11, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %st, i32 0, i32 3
  %13 = load i32, i32* %st_mode, align 8
  %and5 = and i32 %13, 61440
  %cmp6 = icmp eq i32 %and5, 16384
  br i1 %cmp6, label %if.then11, label %lor.lhs.false7

lor.lhs.false7:                                   ; preds = %lor.lhs.false
  %st_mode8 = getelementptr inbounds %struct.stat, %struct.stat* %st, i32 0, i32 3
  %14 = load i32, i32* %st_mode8, align 8
  %and9 = and i32 %14, 61440
  %cmp10 = icmp eq i32 %and9, 24576
  br i1 %cmp10, label %if.then11, label %if.end12

if.then11:                                        ; preds = %lor.lhs.false7, %lor.lhs.false, %if.end
  store %struct._PerlIO** null, %struct._PerlIO*** %retval, align 8
  br label %return

if.end12:                                         ; preds = %lor.lhs.false7
  %call13 = call %struct._PerlIO** @PerlIO_openn(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.105, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.65, i64 0, i64 0), i32 -1, i32 0, i32 0, %struct._PerlIO** null, i32 1, %struct.sv** %name.addr)
  store %struct._PerlIO** %call13, %struct._PerlIO*** %retio, align 8
  %15 = load %struct._PerlIO**, %struct._PerlIO*** %retio, align 8
  store %struct._PerlIO** %15, %struct._PerlIO*** %retval, align 8
  br label %return

return:                                           ; preds = %if.end12, %if.then11, %if.then
  %16 = load %struct._PerlIO**, %struct._PerlIO*** %retval, align 8
  ret %struct._PerlIO** %16
}

declare dso_local %struct._PerlIO** @PerlIO_openn(i8*, i8*, i32, i32, i32, %struct._PerlIO**, i32, %struct.sv**) #1

declare dso_local %struct.padlist* @Perl_pad_new(i32) #1

declare dso_local void @Perl_save_hints() #1

declare dso_local void @Perl_hv_clear(%struct.hv*) #1

; Function Attrs: nounwind
declare dso_local noalias i8* @malloc(i64) #5

declare dso_local void @Perl_refcounted_he_free(%struct.refcounted_he*) #1

declare dso_local %struct.refcounted_he* @Perl_refcounted_he_inc(%struct.refcounted_he*) #1

; Function Attrs: noinline nounwind uwtable
define internal i32 @S_try_yyparse(i32 %gramtype) #0 {
entry:
  %gramtype.addr = alloca i32, align 4
  %ret = alloca i32, align 4
  %cur_env = alloca %struct.jmpenv, align 8
  store i32 %gramtype, i32* %gramtype.addr, align 4
  br label %do.body

do.body:                                          ; preds = %entry
  %0 = load %struct.jmpenv*, %struct.jmpenv** @PL_top_env, align 8
  %je_prev = getelementptr inbounds %struct.jmpenv, %struct.jmpenv* %cur_env, i32 0, i32 1
  store %struct.jmpenv* %0, %struct.jmpenv** %je_prev, align 8
  %je_buf = getelementptr inbounds %struct.jmpenv, %struct.jmpenv* %cur_env, i32 0, i32 0
  %arraydecay = getelementptr inbounds [1 x %struct.__jmp_buf_tag], [1 x %struct.__jmp_buf_tag]* %je_buf, i64 0, i64 0
  %call = call i32 @__sigsetjmp(%struct.__jmp_buf_tag* %arraydecay, i32 0) #12
  %je_ret = getelementptr inbounds %struct.jmpenv, %struct.jmpenv* %cur_env, i32 0, i32 2
  store i32 %call, i32* %je_ret, align 8
  store %struct.jmpenv* %cur_env, %struct.jmpenv** @PL_top_env, align 8
  %je_mustcatch = getelementptr inbounds %struct.jmpenv, %struct.jmpenv* %cur_env, i32 0, i32 3
  store i8 0, i8* %je_mustcatch, align 4
  %je_ret1 = getelementptr inbounds %struct.jmpenv, %struct.jmpenv* %cur_env, i32 0, i32 2
  %1 = load i32, i32* %je_ret1, align 8
  store i32 %1, i32* %ret, align 4
  br label %do.end

do.end:                                           ; preds = %do.body
  %2 = load i32, i32* %ret, align 4
  switch i32 %2, label %sw.default [
    i32 0, label %sw.bb
    i32 3, label %sw.bb3
  ]

sw.bb:                                            ; preds = %do.end
  %3 = load i32, i32* %gramtype.addr, align 4
  %call2 = call i32 @Perl_yyparse(i32 %3)
  %tobool = icmp ne i32 %call2, 0
  %4 = zext i1 %tobool to i64
  %cond = select i1 %tobool, i32 1, i32 0
  store i32 %cond, i32* %ret, align 4
  br label %sw.epilog

sw.bb3:                                           ; preds = %do.end
  br label %sw.epilog

sw.default:                                       ; preds = %do.end
  br label %do.body4

do.body4:                                         ; preds = %sw.default
  %je_prev5 = getelementptr inbounds %struct.jmpenv, %struct.jmpenv* %cur_env, i32 0, i32 1
  %5 = load %struct.jmpenv*, %struct.jmpenv** %je_prev5, align 8
  store %struct.jmpenv* %5, %struct.jmpenv** @PL_top_env, align 8
  br label %do.end6

do.end6:                                          ; preds = %do.body4
  br label %do.body7

do.body7:                                         ; preds = %do.end6
  %6 = load %struct.jmpenv*, %struct.jmpenv** @PL_top_env, align 8
  %je_prev8 = getelementptr inbounds %struct.jmpenv, %struct.jmpenv* %6, i32 0, i32 1
  %7 = load %struct.jmpenv*, %struct.jmpenv** %je_prev8, align 8
  %tobool9 = icmp ne %struct.jmpenv* %7, null
  br i1 %tobool9, label %if.then, label %if.end

if.then:                                          ; preds = %do.body7
  %8 = load %struct.jmpenv*, %struct.jmpenv** @PL_top_env, align 8
  %je_buf10 = getelementptr inbounds %struct.jmpenv, %struct.jmpenv* %8, i32 0, i32 0
  %arraydecay11 = getelementptr inbounds [1 x %struct.__jmp_buf_tag], [1 x %struct.__jmp_buf_tag]* %je_buf10, i64 0, i64 0
  %9 = load i32, i32* %ret, align 4
  call void @siglongjmp(%struct.__jmp_buf_tag* %arraydecay11, i32 %9) #9
  unreachable

if.end:                                           ; preds = %do.body7
  %10 = load i32, i32* %ret, align 4
  %cmp = icmp eq i32 %10, 2
  br i1 %cmp, label %if.then12, label %if.end13

if.then12:                                        ; preds = %if.end
  %11 = load i32, i32* @PL_statusvalue, align 4
  call void @exit(i32 %11) #9
  unreachable

if.end13:                                         ; preds = %if.end
  %call14 = call %struct._PerlIO** @Perl_PerlIO_stderr()
  %12 = load i32, i32* %ret, align 4
  %call15 = call i32 (%struct._PerlIO**, i8*, ...) @PerlIO_printf(%struct._PerlIO** %call14, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.18, i64 0, i64 0), i32 %12)
  call void @exit(i32 1) #9
  unreachable

do.end16:                                         ; No predecessors!
  br label %sw.epilog

sw.epilog:                                        ; preds = %do.end16, %sw.bb3, %sw.bb
  br label %do.body17

do.body17:                                        ; preds = %sw.epilog
  %je_prev18 = getelementptr inbounds %struct.jmpenv, %struct.jmpenv* %cur_env, i32 0, i32 1
  %13 = load %struct.jmpenv*, %struct.jmpenv** %je_prev18, align 8
  store %struct.jmpenv* %13, %struct.jmpenv** @PL_top_env, align 8
  br label %do.end19

do.end19:                                         ; preds = %do.body17
  %14 = load i32, i32* %ret, align 4
  ret i32 %14
}

declare dso_local i32 @Perl_yyparse(i32) #1

declare dso_local void @Perl_op_free(%struct.op*) #1

declare dso_local void @Perl_cv_forget_slab(%struct.cv*) #1

declare dso_local void @Perl_call_list(i32, %struct.av*) #1

; Function Attrs: nounwind returns_twice
declare dso_local i32 @__sigsetjmp(%struct.__jmp_buf_tag*, i32) #7

declare dso_local %struct.sv** @Perl_av_store(%struct.av*, i64, %struct.sv*) #1

declare dso_local %struct.sv* @Perl_amagic_call(%struct.sv*, %struct.sv*, i32, i32) #1

declare dso_local i32 @Perl_hv_iterinit(%struct.hv*) #1

declare dso_local %struct.he* @Perl_hv_iternext_flags(%struct.hv*, i32) #1

declare dso_local %struct.sv* @Perl_hv_iterkeysv(%struct.he*) #1

; Function Attrs: noinline nounwind uwtable
define internal void @S_SvREFCNT_inc_void(%struct.sv* %sv) #0 {
entry:
  %sv.addr = alloca %struct.sv*, align 8
  store %struct.sv* %sv, %struct.sv** %sv.addr, align 8
  %0 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %cmp = icmp ne %struct.sv* %0, null
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  br i1 true, label %if.then, label %if.end

cond.false:                                       ; preds = %entry
  br i1 false, label %if.then, label %if.end

if.then:                                          ; preds = %cond.false, %cond.true
  %1 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %sv_refcnt = getelementptr inbounds %struct.sv, %struct.sv* %1, i32 0, i32 1
  %2 = load i32, i32* %sv_refcnt, align 8
  %inc = add i32 %2, 1
  store i32 %inc, i32* %sv_refcnt, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %cond.false, %cond.true
  ret void
}

declare dso_local i32 @Perl_hv_placeholders_get(%struct.hv*) #1

; Function Attrs: noinline nounwind uwtable
define internal %struct.pmop* @S_make_matcher(%struct.p5rx* %re) #0 {
entry:
  %re.addr = alloca %struct.p5rx*, align 8
  %matcher = alloca %struct.pmop*, align 8
  %_o = alloca %struct.op*, align 8
  store %struct.p5rx* %re, %struct.p5rx** %re.addr, align 8
  %call = call %struct.op* @Perl_newPMOP(i32 31, i32 66)
  %0 = bitcast %struct.op* %call to %struct.pmop*
  store %struct.pmop* %0, %struct.pmop** %matcher, align 8
  %1 = load %struct.p5rx*, %struct.p5rx** %re.addr, align 8
  %2 = bitcast %struct.p5rx* %1 to i8*
  %3 = bitcast i8* %2 to %struct.sv*
  %call1 = call %struct.sv* @S_SvREFCNT_inc(%struct.sv* %3)
  %4 = bitcast %struct.sv* %call1 to %struct.p5rx*
  %5 = load %struct.pmop*, %struct.pmop** %matcher, align 8
  %op_pmregexp = getelementptr inbounds %struct.pmop, %struct.pmop* %5, i32 0, i32 9
  store %struct.p5rx* %4, %struct.p5rx** %op_pmregexp, align 8
  br label %do.body

do.body:                                          ; preds = %entry
  %6 = load %struct.pmop*, %struct.pmop** %matcher, align 8
  %7 = bitcast %struct.pmop* %6 to %struct.op*
  store %struct.op* %7, %struct.op** %_o, align 8
  %8 = load %struct.op*, %struct.op** %_o, align 8
  %op_savefree = getelementptr inbounds %struct.op, %struct.op* %8, i32 0, i32 4
  %bf.load = load i16, i16* %op_savefree, align 8
  %bf.clear = and i16 %bf.load, -2049
  %bf.set = or i16 %bf.clear, 2048
  store i16 %bf.set, i16* %op_savefree, align 8
  %9 = load %struct.op*, %struct.op** %_o, align 8
  %10 = bitcast %struct.op* %9 to i8*
  call void @Perl_save_pushptr(i8* %10, i32 9)
  br label %do.end

do.end:                                           ; preds = %do.body
  call void @Perl_push_scope()
  call void @Perl_save_strlen(i64* @PL_tmps_floor)
  %11 = load i64, i64* @PL_tmps_ix, align 8
  store i64 %11, i64* @PL_tmps_floor, align 8
  %12 = load %struct.op*, %struct.op** @PL_op, align 8
  %13 = bitcast %struct.op* %12 to i8*
  call void @Perl_save_pushptr(i8* %13, i32 18)
  %14 = load %struct.pmop*, %struct.pmop** %matcher, align 8
  ret %struct.pmop* %14
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i1 @S_matcher_matches_sv(%struct.pmop* %matcher, %struct.sv* %sv) #0 {
entry:
  %matcher.addr = alloca %struct.pmop*, align 8
  %sv.addr = alloca %struct.sv*, align 8
  %sp = alloca %struct.sv**, align 8
  %result = alloca i8, align 1
  store %struct.pmop* %matcher, %struct.pmop** %matcher.addr, align 8
  store %struct.sv* %sv, %struct.sv** %sv.addr, align 8
  %0 = load %struct.sv**, %struct.sv*** @PL_stack_sp, align 8
  store %struct.sv** %0, %struct.sv*** %sp, align 8
  %1 = load %struct.pmop*, %struct.pmop** %matcher.addr, align 8
  %2 = bitcast %struct.pmop* %1 to %struct.op*
  store %struct.op* %2, %struct.op** @PL_op, align 8
  br label %do.body

do.body:                                          ; preds = %entry
  br label %do.body1

do.body1:                                         ; preds = %do.body
  %3 = load %struct.sv**, %struct.sv*** @PL_stack_max, align 8
  %4 = load %struct.sv**, %struct.sv*** %sp, align 8
  %sub.ptr.lhs.cast = ptrtoint %struct.sv** %3 to i64
  %sub.ptr.rhs.cast = ptrtoint %struct.sv** %4 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 8
  %cmp = icmp slt i64 %sub.ptr.div, 1
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %do.body1
  br i1 true, label %if.then, label %if.end

cond.false:                                       ; preds = %do.body1
  br i1 false, label %if.then, label %if.end

if.then:                                          ; preds = %cond.false, %cond.true
  %5 = load %struct.sv**, %struct.sv*** %sp, align 8
  %6 = load %struct.sv**, %struct.sv*** %sp, align 8
  %call = call %struct.sv** @Perl_stack_grow(%struct.sv** %5, %struct.sv** %6, i64 1)
  store %struct.sv** %call, %struct.sv*** %sp, align 8
  %7 = load %struct.sv**, %struct.sv*** %sp, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %cond.false, %cond.true
  br label %do.end

do.end:                                           ; preds = %if.end
  %8 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %9 = load %struct.sv**, %struct.sv*** %sp, align 8
  %incdec.ptr = getelementptr inbounds %struct.sv*, %struct.sv** %9, i32 1
  store %struct.sv** %incdec.ptr, %struct.sv*** %sp, align 8
  store %struct.sv* %8, %struct.sv** %incdec.ptr, align 8
  br label %do.end2

do.end2:                                          ; preds = %do.end
  %10 = load %struct.sv**, %struct.sv*** %sp, align 8
  store %struct.sv** %10, %struct.sv*** @PL_stack_sp, align 8
  %call3 = call %struct.op* @Perl_pp_match()
  %11 = load %struct.sv**, %struct.sv*** @PL_stack_sp, align 8
  store %struct.sv** %11, %struct.sv*** %sp, align 8
  %12 = load %struct.sv**, %struct.sv*** %sp, align 8
  %incdec.ptr4 = getelementptr inbounds %struct.sv*, %struct.sv** %12, i32 -1
  store %struct.sv** %incdec.ptr4, %struct.sv*** %sp, align 8
  %13 = load %struct.sv*, %struct.sv** %12, align 8
  store %struct.sv* %13, %struct.sv** @PL_Sv, align 8
  %14 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %tobool = icmp ne %struct.sv* %14, null
  br i1 %tobool, label %cond.true5, label %cond.false6

cond.true5:                                       ; preds = %do.end2
  br i1 true, label %land.rhs, label %land.end82

cond.false6:                                      ; preds = %do.end2
  br i1 false, label %land.rhs, label %land.end82

land.rhs:                                         ; preds = %cond.false6, %cond.true5
  %15 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %sv_flags = getelementptr inbounds %struct.sv, %struct.sv* %15, i32 0, i32 2
  %16 = load i32, i32* %sv_flags, align 4
  %and = and i32 %16, 2097152
  %tobool7 = icmp ne i32 %and, 0
  br i1 %tobool7, label %cond.true8, label %cond.false9

cond.true8:                                       ; preds = %land.rhs
  br i1 true, label %cond.true10, label %cond.false12

cond.false9:                                      ; preds = %land.rhs
  br i1 false, label %cond.true10, label %cond.false12

cond.true10:                                      ; preds = %cond.false9, %cond.true8
  %17 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %call11 = call zeroext i1 @Perl_sv_2bool_flags(%struct.sv* %17, i32 2)
  %conv = zext i1 %call11 to i32
  br label %cond.end79

cond.false12:                                     ; preds = %cond.false9, %cond.true8
  %18 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %sv_flags13 = getelementptr inbounds %struct.sv, %struct.sv* %18, i32 0, i32 2
  %19 = load i32, i32* %sv_flags13, align 4
  %and14 = and i32 %19, 65280
  %tobool15 = icmp ne i32 %and14, 0
  br i1 %tobool15, label %cond.false26, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %cond.false12
  %20 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %sv_flags16 = getelementptr inbounds %struct.sv, %struct.sv* %20, i32 0, i32 2
  %21 = load i32, i32* %sv_flags16, align 4
  %and17 = and i32 %21, 255
  %cmp18 = icmp eq i32 %and17, 8
  br i1 %cmp18, label %cond.false26, label %lor.lhs.false20

lor.lhs.false20:                                  ; preds = %lor.lhs.false
  %22 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %sv_flags21 = getelementptr inbounds %struct.sv, %struct.sv* %22, i32 0, i32 2
  %23 = load i32, i32* %sv_flags21, align 4
  %and22 = and i32 %23, 16826623
  %cmp23 = icmp eq i32 %and22, 16777226
  br i1 %cmp23, label %cond.false26, label %cond.true25

cond.true25:                                      ; preds = %lor.lhs.false20
  br label %cond.end77

cond.false26:                                     ; preds = %lor.lhs.false20, %lor.lhs.false, %cond.false12
  %24 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %sv_flags27 = getelementptr inbounds %struct.sv, %struct.sv* %24, i32 0, i32 2
  %25 = load i32, i32* %sv_flags27, align 4
  %and28 = and i32 %25, 1024
  %tobool29 = icmp ne i32 %and28, 0
  br i1 %tobool29, label %cond.true30, label %cond.false44

cond.true30:                                      ; preds = %cond.false26
  %26 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %sv_any = getelementptr inbounds %struct.sv, %struct.sv* %26, i32 0, i32 0
  %27 = load i8*, i8** %sv_any, align 8
  %28 = bitcast i8* %27 to %struct.xpv*
  %tobool31 = icmp ne %struct.xpv* %28, null
  br i1 %tobool31, label %land.rhs32, label %land.end43

land.rhs32:                                       ; preds = %cond.true30
  %29 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %sv_any33 = getelementptr inbounds %struct.sv, %struct.sv* %29, i32 0, i32 0
  %30 = load i8*, i8** %sv_any33, align 8
  %31 = bitcast i8* %30 to %struct.xpv*
  %xpv_cur = getelementptr inbounds %struct.xpv, %struct.xpv* %31, i32 0, i32 2
  %32 = load i64, i64* %xpv_cur, align 8
  %cmp34 = icmp ugt i64 %32, 1
  br i1 %cmp34, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %land.rhs32
  %33 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %sv_any36 = getelementptr inbounds %struct.sv, %struct.sv* %33, i32 0, i32 0
  %34 = load i8*, i8** %sv_any36, align 8
  %35 = bitcast i8* %34 to %struct.xpv*
  %xpv_cur37 = getelementptr inbounds %struct.xpv, %struct.xpv* %35, i32 0, i32 2
  %36 = load i64, i64* %xpv_cur37, align 8
  %tobool38 = icmp ne i64 %36, 0
  br i1 %tobool38, label %land.rhs39, label %land.end

land.rhs39:                                       ; preds = %lor.rhs
  %37 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %sv_u = getelementptr inbounds %struct.sv, %struct.sv* %37, i32 0, i32 3
  %svu_pv = bitcast %union.anon* %sv_u to i8**
  %38 = load i8*, i8** %svu_pv, align 8
  %39 = load i8, i8* %38, align 1
  %conv40 = sext i8 %39 to i32
  %cmp41 = icmp ne i32 %conv40, 48
  br label %land.end

land.end:                                         ; preds = %land.rhs39, %lor.rhs
  %40 = phi i1 [ false, %lor.rhs ], [ %cmp41, %land.rhs39 ]
  br label %lor.end

lor.end:                                          ; preds = %land.end, %land.rhs32
  %41 = phi i1 [ true, %land.rhs32 ], [ %40, %land.end ]
  br label %land.end43

land.end43:                                       ; preds = %lor.end, %cond.true30
  %42 = phi i1 [ false, %cond.true30 ], [ %41, %lor.end ]
  %land.ext = zext i1 %42 to i32
  br label %cond.end75

cond.false44:                                     ; preds = %cond.false26
  %43 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %sv_flags45 = getelementptr inbounds %struct.sv, %struct.sv* %43, i32 0, i32 2
  %44 = load i32, i32* %sv_flags45, align 4
  %and46 = and i32 %44, 768
  %tobool47 = icmp ne i32 %and46, 0
  br i1 %tobool47, label %cond.true48, label %cond.false72

cond.true48:                                      ; preds = %cond.false44
  %45 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %sv_flags49 = getelementptr inbounds %struct.sv, %struct.sv* %45, i32 0, i32 2
  %46 = load i32, i32* %sv_flags49, align 4
  %and50 = and i32 %46, 256
  %tobool51 = icmp ne i32 %and50, 0
  br i1 %tobool51, label %land.lhs.true, label %lor.rhs55

land.lhs.true:                                    ; preds = %cond.true48
  %47 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %sv_any52 = getelementptr inbounds %struct.sv, %struct.sv* %47, i32 0, i32 0
  %48 = load i8*, i8** %sv_any52, align 8
  %49 = bitcast i8* %48 to %struct.xpviv*
  %xiv_u = getelementptr inbounds %struct.xpviv, %struct.xpviv* %49, i32 0, i32 4
  %xivu_iv = bitcast %union._xivu* %xiv_u to i64*
  %50 = load i64, i64* %xivu_iv, align 8
  %cmp53 = icmp ne i64 %50, 0
  br i1 %cmp53, label %lor.end71, label %lor.rhs55

lor.rhs55:                                        ; preds = %land.lhs.true, %cond.true48
  %51 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %sv_flags56 = getelementptr inbounds %struct.sv, %struct.sv* %51, i32 0, i32 2
  %52 = load i32, i32* %sv_flags56, align 4
  %and57 = and i32 %52, 512
  %tobool58 = icmp ne i32 %and57, 0
  br i1 %tobool58, label %land.rhs59, label %land.end69

land.rhs59:                                       ; preds = %lor.rhs55
  %53 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %sv_any60 = getelementptr inbounds %struct.sv, %struct.sv* %53, i32 0, i32 0
  %54 = load i8*, i8** %sv_any60, align 8
  %55 = bitcast i8* %54 to %struct.xpvnv*
  %xnv_u = getelementptr inbounds %struct.xpvnv, %struct.xpvnv* %55, i32 0, i32 5
  %xnv_nv = bitcast %union._xnvu* %xnv_u to double*
  %56 = load double, double* %xnv_nv, align 8
  %cmp61 = fcmp uno double %56, %56
  br i1 %cmp61, label %lor.end68, label %lor.rhs62

lor.rhs62:                                        ; preds = %land.rhs59
  %57 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %sv_any63 = getelementptr inbounds %struct.sv, %struct.sv* %57, i32 0, i32 0
  %58 = load i8*, i8** %sv_any63, align 8
  %59 = bitcast i8* %58 to %struct.xpvnv*
  %xnv_u64 = getelementptr inbounds %struct.xpvnv, %struct.xpvnv* %59, i32 0, i32 5
  %xnv_nv65 = bitcast %union._xnvu* %xnv_u64 to double*
  %60 = load double, double* %xnv_nv65, align 8
  %cmp66 = fcmp une double %60, 0.000000e+00
  br label %lor.end68

lor.end68:                                        ; preds = %lor.rhs62, %land.rhs59
  %61 = phi i1 [ true, %land.rhs59 ], [ %cmp66, %lor.rhs62 ]
  br label %land.end69

land.end69:                                       ; preds = %lor.end68, %lor.rhs55
  %62 = phi i1 [ false, %lor.rhs55 ], [ %61, %lor.end68 ]
  br label %lor.end71

lor.end71:                                        ; preds = %land.end69, %land.lhs.true
  %63 = phi i1 [ true, %land.lhs.true ], [ %62, %land.end69 ]
  %lor.ext = zext i1 %63 to i32
  br label %cond.end

cond.false72:                                     ; preds = %cond.false44
  %64 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %call73 = call zeroext i1 @Perl_sv_2bool_flags(%struct.sv* %64, i32 0)
  %conv74 = zext i1 %call73 to i32
  br label %cond.end

cond.end:                                         ; preds = %cond.false72, %lor.end71
  %cond = phi i32 [ %lor.ext, %lor.end71 ], [ %conv74, %cond.false72 ]
  br label %cond.end75

cond.end75:                                       ; preds = %cond.end, %land.end43
  %cond76 = phi i32 [ %land.ext, %land.end43 ], [ %cond, %cond.end ]
  br label %cond.end77

cond.end77:                                       ; preds = %cond.end75, %cond.true25
  %cond78 = phi i32 [ 0, %cond.true25 ], [ %cond76, %cond.end75 ]
  br label %cond.end79

cond.end79:                                       ; preds = %cond.end77, %cond.true10
  %cond80 = phi i32 [ %conv, %cond.true10 ], [ %cond78, %cond.end77 ]
  %tobool81 = icmp ne i32 %cond80, 0
  br label %land.end82

land.end82:                                       ; preds = %cond.end79, %cond.false6, %cond.true5
  %65 = phi i1 [ false, %cond.false6 ], [ false, %cond.true5 ], [ %tobool81, %cond.end79 ]
  %frombool = zext i1 %65 to i8
  store i8 %frombool, i8* %result, align 1
  %66 = load %struct.sv**, %struct.sv*** %sp, align 8
  store %struct.sv** %66, %struct.sv*** @PL_stack_sp, align 8
  %67 = load i8, i8* %result, align 1
  %tobool84 = trunc i8 %67 to i1
  ret i1 %tobool84
}

; Function Attrs: noinline nounwind uwtable
define internal void @S_destroy_matcher(%struct.pmop* %matcher) #0 {
entry:
  %matcher.addr = alloca %struct.pmop*, align 8
  store %struct.pmop* %matcher, %struct.pmop** %matcher.addr, align 8
  %0 = load %struct.pmop*, %struct.pmop** %matcher.addr, align 8
  %1 = load i64, i64* @PL_tmps_ix, align 8
  %2 = load i64, i64* @PL_tmps_floor, align 8
  %cmp = icmp sgt i64 %1, %2
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void @Perl_free_tmps()
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  call void @Perl_pop_scope()
  ret void
}

declare dso_local %struct.op* @Perl_pp_i_eq() #1

declare dso_local %struct.op* @Perl_pp_eq() #1

declare dso_local %struct.op* @Perl_pp_seq() #1

declare dso_local %struct.op* @Perl_newPMOP(i32, i32) #1

declare dso_local %struct.op* @Perl_pp_match() #1

declare dso_local void @Perl_sv_upgrade(%struct.sv*, i32) #1

declare dso_local %struct.magic* @Perl_sv_magicext(%struct.sv*, %struct.sv*, i32, %struct.mgvtbl*, i8*, i32) #1

declare dso_local i32 @Perl_sv_backoff(%struct.sv*) #1

declare dso_local i64 @Perl_sv_len(%struct.sv*) #1

declare dso_local i32 @Perl_filter_read(i32, %struct.sv*, i32) #1

declare dso_local void @Perl_sv_usepvn_flags(%struct.sv*, i8*, i64, i32) #1

declare dso_local void @Perl_filter_del(i32 (i32, %struct.sv*, i32)*) #1

declare dso_local void @Perl_croak_sv(%struct.sv*) #1

attributes #0 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind willreturn }
attributes #3 = { nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind returns_twice "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readonly }
attributes #9 = { noreturn nounwind }
attributes #10 = { nounwind }
attributes #11 = { nounwind readnone }
attributes #12 = { nounwind returns_twice }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)"}
