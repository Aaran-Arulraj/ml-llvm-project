; ModuleID = 'blender/source/blender/gpu/intern/gpu_buffers.c'
source_filename = "blender/source/blender/gpu/intern/gpu_buffers.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.GPUBufferPool = type { i32, i32, i32, i32, %struct.GPUBuffer**, i32* }
%struct.GPUBuffer = type { i32, i8*, i32 }
%struct.GPUBufferTypeSettings = type { void (%struct.DerivedMesh*, float*, i32*, i32*, i8*)*, i32, i32 }
%struct.DerivedMesh = type { %struct.CustomData, %struct.CustomData, %struct.CustomData, %struct.CustomData, %struct.CustomData, i32, i32, i32, i32, i32, i32, i32, %struct.LinkNode*, %struct.GPUDrawObject*, i32, float, i32, i32, %struct.Material**, i8, void (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*, float)*, void (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*, i32, %struct.MVert*)*, void (%struct.DerivedMesh*, i32, %struct.MEdge*)*, void (%struct.DerivedMesh*, i32, %struct.MFace*)*, %struct.MVert* (%struct.DerivedMesh*)*, %struct.MEdge* (%struct.DerivedMesh*)*, %struct.MFace* (%struct.DerivedMesh*)*, %struct.MLoop* (%struct.DerivedMesh*)*, %struct.MPoly* (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*, %struct.MVert*)*, void (%struct.DerivedMesh*, %struct.MEdge*)*, void (%struct.DerivedMesh*, %struct.MFace*)*, void (%struct.DerivedMesh*, %struct.MLoop*)*, void (%struct.DerivedMesh*, %struct.MPoly*)*, %struct.MVert* (%struct.DerivedMesh*)*, %struct.MEdge* (%struct.DerivedMesh*)*, %struct.MFace* (%struct.DerivedMesh*)*, %struct.MLoop* (%struct.DerivedMesh*)*, %struct.MPoly* (%struct.DerivedMesh*)*, i8* (%struct.DerivedMesh*, i32, i32)*, i8* (%struct.DerivedMesh*, i32, i32)*, i8* (%struct.DerivedMesh*, i32, i32)*, i8* (%struct.DerivedMesh*, i32, i32)*, i8* (%struct.DerivedMesh*, i32)*, i8* (%struct.DerivedMesh*, i32)*, i8* (%struct.DerivedMesh*, i32)*, i8* (%struct.DerivedMesh*, i32)*, i8* (%struct.DerivedMesh*, i32)*, %struct.CustomData* (%struct.DerivedMesh*)*, %struct.CustomData* (%struct.DerivedMesh*)*, %struct.CustomData* (%struct.DerivedMesh*)*, %struct.CustomData* (%struct.DerivedMesh*)*, %struct.CustomData* (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*, i32, %struct.CustomData*, i32)*, void (%struct.DerivedMesh*, i32, %struct.CustomData*, i32)*, void (%struct.DerivedMesh*, i32, %struct.CustomData*, i32)*, i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)*, %struct.CCGElem** (%struct.DerivedMesh*)*, %struct.DMGridAdjacency* (%struct.DerivedMesh*)*, i32* (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*, %struct.CCGKey*)*, %struct.DMFlagMat* (%struct.DerivedMesh*)*, i32** (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*, void (i8*, i32, float*, float*, i16*)*, i8*, i32)*, void (%struct.DerivedMesh*, void (i8*, i32, float*, float*)*, i8*)*, void (%struct.DerivedMesh*, void (i8*, i32, i32, float*, float*)*, i8*, i32)*, void (%struct.DerivedMesh*, void (i8*, i32, float*, float*)*, i8*, i32)*, void (%struct.DerivedMesh*, float*, float*)*, void (%struct.DerivedMesh*, i32, float*)*, void (%struct.DerivedMesh*, [3 x float]*)*, void (%struct.DerivedMesh*, i32, float*)*, void (%struct.DerivedMesh*, i32, float*)*, %struct.MeshElemMap* (%struct.Object*, %struct.DerivedMesh*)*, %struct.PBVH* (%struct.Object*, %struct.DerivedMesh*)*, void (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*, i8, i8)*, void (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*, [4 x float]*, i8, i32 (i32, i8*)*)*, void (%struct.DerivedMesh*, i32 (%struct.MTFace*, i8, i32)*, i32 (i8*, i32, i32)*, i8*, i32)*, void (%struct.DerivedMesh*, i32 (i32, i8*)*)*, void (%struct.DerivedMesh*, i32 (i8*, i32)*, i32 (i32, i8*)*, i32 (i8*, i32, i32)*, i8*, i32)*, void (%struct.DerivedMesh*, i32 (i8*, i32)*, i32 (i8*, i32, i32)*, i8*, i32)*, void (%struct.DerivedMesh*, i32 (i32, i8*)*, i32 (i8*, i32)*, i8*)*, void (%struct.DerivedMesh*, i32 (i8*, i32)*, i8*)*, void (%struct.DerivedMesh*, i32 (i8*, i32)*, void (i8*, i32, float)*, i8*)*, void (%struct.DerivedMesh*, void (i8*, i32, i8*)*, i8 (i8*, i32)*, i8*)*, void (%struct.DerivedMesh*)* }
%struct.CustomData = type { %struct.CustomDataLayer*, [41 x i32], i32, i32, i32, %struct.BLI_mempool*, %struct.CustomDataExternal* }
%struct.CustomDataLayer = type { i32, i32, i32, i32, i32, i32, i32, i32, [64 x i8], i8* }
%struct.BLI_mempool = type opaque
%struct.CustomDataExternal = type { [1024 x i8] }
%struct.LinkNode = type opaque
%struct.GPUDrawObject = type { %struct.GPUBuffer*, %struct.GPUBuffer*, %struct.GPUBuffer*, %struct.GPUBuffer*, %struct.GPUBuffer*, %struct.GPUBuffer*, i32*, %struct.GPUVertPointLink*, i32, %struct.GPUBufferMaterial*, i32, i32, i32, i32, i32, i8 }
%struct.GPUVertPointLink = type { i32 }
%struct.GPUBufferMaterial = type { i32, i32, i16 }
%struct.Material = type { %struct.ID, %struct.AnimData*, i16, i16, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, %struct.VolumeSettings, %struct.GameSettings, float, float, float, float, float, float, float, i16, i16, i16, i8, i8, float, float, i16, i16, float, float, float, float, i16, i16, i32, i32, i32, i32, i16, i16, i16, i16, float, float, float, float, float, float, float, float, float, float, [64 x i8], float, float, float, i32, i8, i8, i8, i8, i16, i16, i16, i8, i8, i16, i16, float, float, [4 x float], float, float, i16, i16, %struct.ColorBand*, %struct.ColorBand*, i8, i8, i8, i8, i16, i16, float, float, [18 x %struct.MTex*], %struct.bNodeTree*, %struct.Ipo*, %struct.Group*, %struct.PreviewImage*, float, float, float, float, float, i16, i16, [3 x float], [3 x float], float, float, float, float, float, float, float, i16, i16, i32, i16, i16, [4 x float], i16, i16, i16, i16, i16, [3 x i16], %struct.TexPaintSlot*, %struct.ListBase }
%struct.ID = type { i8*, i8*, %struct.ID*, %struct.Library*, [66 x i8], i16, i32, i32, i32, %struct.IDProperty* }
%struct.Library = type { %struct.ID, %struct.ID*, %struct.FileData*, [1024 x i8], [1024 x i8], %struct.Library*, %struct.PackedFile* }
%struct.FileData = type opaque
%struct.PackedFile = type opaque
%struct.IDProperty = type { %struct.IDProperty*, %struct.IDProperty*, i8, i8, i16, [64 x i8], i32, %struct.IDPropertyData, i32, i32 }
%struct.IDPropertyData = type { i8*, %struct.ListBase, i32, i32 }
%struct.AnimData = type opaque
%struct.VolumeSettings = type { float, float, float, float, [3 x float], [3 x float], [3 x float], float, float, float, i16, i16, i16, i16, float, float, float, float }
%struct.GameSettings = type { i32, i32, i32, i32 }
%struct.ColorBand = type { i16, i16, i8, i8, i8, [1 x i8], [32 x %struct.CBData] }
%struct.CBData = type { float, float, float, float, float, i32 }
%struct.MTex = type { i16, i16, i16, i16, %struct.Object*, %struct.Tex*, [64 x i8], i8, i8, i8, i8, [3 x float], [3 x float], float, i16, i16, i16, i16, i16, i16, i8, [7 x i8], float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float }
%struct.Object = type opaque
%struct.Tex = type { %struct.ID, %struct.AnimData*, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, float, float, float, float, i32, i32, i16, i16, i16, i16, i32, i32, i32, i32, float, float, float, %struct.ImageUser, %struct.bNodeTree*, %struct.Ipo*, %struct.Image*, %struct.ColorBand*, %struct.EnvMap*, %struct.PreviewImage*, %struct.PointDensity*, %struct.VoxelData*, %struct.OceanTex*, i8, [7 x i8] }
%struct.ImageUser = type { %struct.Scene*, i32, i32, i32, i32, i8, i8, i8, i8, i16, i16, i16, i16, i32 }
%struct.Scene = type opaque
%struct.Image = type { %struct.ID, [1024 x i8], %struct.MovieCache*, %struct.GPUTexture*, %struct.anim*, %struct.RenderResult*, [8 x %struct.RenderResult*], i16, i16, i16, i16, i16, i16, i32, i16, i16, i16, i16, i16, i16, i32, i32*, %struct.PackedFile*, %struct.PreviewImage*, float, i32, i16, i16, i32, i32, i8, i8, i16, [4 x float], float, float, %struct.ColorManagedColorspaceSettings, i8, [7 x i8], [8 x %struct.RenderSlot] }
%struct.MovieCache = type opaque
%struct.GPUTexture = type opaque
%struct.anim = type opaque
%struct.RenderResult = type opaque
%struct.ColorManagedColorspaceSettings = type { [64 x i8] }
%struct.RenderSlot = type { [64 x i8] }
%struct.EnvMap = type { %struct.Object*, %struct.Image*, [6 x %struct.ImBuf*], [4 x [4 x float]], [3 x [3 x float]], i16, i16, float, float, float, i32, i16, i16, i32, i32, i16, i16 }
%struct.ImBuf = type opaque
%struct.PointDensity = type { i16, i16, float, float, i16, i16, i32, i32, %struct.Object*, i32, i16, i16, i8*, float*, float, i16, i16, i16, [3 x i16], float, float, float, float, %struct.ColorBand*, %struct.CurveMapping* }
%struct.CurveMapping = type { i32, i32, i32, i32, %struct.rctf, %struct.rctf, [4 x %struct.CurveMap], [3 x float], [3 x float], [3 x float], [3 x float] }
%struct.rctf = type { float, float, float, float }
%struct.CurveMap = type { i16, i16, float, float, float, [2 x float], [2 x float], %struct.CurveMapPoint*, %struct.CurveMapPoint*, %struct.CurveMapPoint*, [2 x float], [2 x float] }
%struct.CurveMapPoint = type { float, float, i16, i16 }
%struct.VoxelData = type { [3 x i32], i32, i16, i16, i16, i16, i16, i16, i32, %struct.Object*, float, i32, [1024 x i8], float*, i32, i32 }
%struct.OceanTex = type { %struct.Object*, [64 x i8], i32, i32 }
%struct.bNodeTree = type opaque
%struct.Ipo = type opaque
%struct.Group = type opaque
%struct.PreviewImage = type { [2 x i32], [2 x i32], [2 x i16], [2 x i16], [2 x i32*], [2 x %struct.GPUTexture*] }
%struct.TexPaintSlot = type { %struct.Image*, i8*, i32, i32 }
%struct.ListBase = type { i8*, i8* }
%struct.MVert = type { [3 x float], [3 x i16], i8, i8 }
%struct.MEdge = type { i32, i32, i8, i8, i16 }
%struct.MFace = type { i32, i32, i32, i32, i16, i8, i8 }
%struct.MLoop = type { i32, i32 }
%struct.MPoly = type { i32, i32, i16, i8, i8 }
%struct.CCGElem = type opaque
%struct.DMGridAdjacency = type { [4 x i32], [4 x i32] }
%struct.CCGKey = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.DMFlagMat = type { i16, i8 }
%struct.MeshElemMap = type opaque
%struct.PBVH = type opaque
%struct.MTFace = type { [4 x [2 x float]], %struct.Image*, i8, i8, i16, i16, i16 }
%struct.UserDef = type { i32, i32, i32, i32, i32, [768 x i8], [768 x i8], [1024 x i8], [768 x i8], [768 x i8], [768 x i8], [768 x i8], [768 x i8], [1024 x i8], [1024 x i8], i32, i16, i16, i16, i16, i16, i16, i32, i32, i32, i16, i16, i32, i32, i32, i32, i32, i32, i32, i16, i16, i16, i16, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, [64 x i8], i16, i16, i16, i16, i16, i16, i16, i16, [3 x %struct.SolidLight], i16, i16, i16, i16, i16, i16, i16, i16, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i8, i8, i8, i8, i16, i16, i16, i16, i16, i16, float, float, i32, i16, i16, float, i16, i16, i16, i16, %struct.ColorBand, [3 x float], [4 x float], i16, i8, i8, [80 x i8], [1024 x i8], i32, i32, float, float, i32, i16, i16, i16, i16, i16, i16, %struct.WalkNavigation }
%struct.SolidLight = type { i32, i32, [4 x float], [4 x float], [4 x float] }
%struct.WalkNavigation = type { float, float, float, float, float, float, i16, [3 x i16] }
%struct.GPUAttrib = type { i32, i32, i32 }
%struct.GPU_PBVH_Buffers = type { i32, i32, i32, %struct.MFace*, %struct.MVert*, i32*, i32, float*, %struct.CCGKey, %struct.CCGElem**, %struct.DMFlagMat*, i32**, i32*, i32, i32, i32, i32, i32, i32, i8, i8, [4 x float] }
%struct.VertexBufferFormat = type { [3 x float], [3 x i16], [2 x i8], [3 x i8] }
%struct.BMesh = type { i32, i32, i32, i32, i32, i32, i32, i8, i8, %struct.BLI_mempool*, %struct.BLI_mempool*, %struct.BLI_mempool*, %struct.BLI_mempool*, %struct.BMVert**, %struct.BMEdge**, %struct.BMFace**, i32, i32, i32, %struct.BLI_mempool*, %struct.BLI_mempool*, %struct.BLI_mempool*, i32, %struct.BMOperator*, %struct.CustomData, %struct.CustomData, %struct.CustomData, %struct.CustomData, i16, i32, i32, i32, %struct.ListBase, %struct.BMFace*, %struct.ListBase, i8* }
%struct.BMVert = type { %struct.BMHeader, %struct.BMFlagLayer*, [3 x float], [3 x float], %struct.BMEdge* }
%struct.BMHeader = type { i8*, i32, i8, i8, i8 }
%struct.BMFlagLayer = type { i16 }
%struct.BMEdge = type { %struct.BMHeader, %struct.BMFlagLayer*, %struct.BMVert*, %struct.BMVert*, %struct.BMLoop*, %struct.BMDiskLink, %struct.BMDiskLink }
%struct.BMLoop = type { %struct.BMHeader, %struct.BMVert*, %struct.BMEdge*, %struct.BMFace*, %struct.BMLoop*, %struct.BMLoop*, %struct.BMLoop*, %struct.BMLoop* }
%struct.BMDiskLink = type { %struct.BMEdge*, %struct.BMEdge* }
%struct.BMOperator = type { [16 x %struct.BMOpSlot], [16 x %struct.BMOpSlot], void (%struct.BMesh*, %struct.BMOperator*)*, %struct.MemArena*, i32, i32, i32 }
%struct.BMOpSlot = type { i8*, i32, %union.eBMOpSlotSubType_Union, i32, %union.anon }
%union.eBMOpSlotSubType_Union = type { i32 }
%union.anon = type { i8*, [8 x i8] }
%struct.MemArena = type opaque
%struct.BMFace = type { %struct.BMHeader, %struct.BMFlagLayer*, %struct.BMLoop*, i32, [3 x float], i16 }
%struct.GSet = type opaque
%struct.GSetIterator = type { %struct.GHashIterator }
%struct.GHashIterator = type { %struct.GHash*, %struct.Entry*, i32 }
%struct.GHash = type opaque
%struct.Entry = type opaque
%struct._gh_Entry = type { i8*, i8*, i8* }

@gpu_buffer_pool = internal global %struct.GPUBufferPool* null, align 8, !dbg !0
@buffer_mutex = internal global i32 0, align 4, !dbg !1316
@MEM_callocN = external dso_local global i8* (i64, i8*)*, align 8
@.str = private unnamed_addr constant [35 x i8] c"GPU_drawobject_new.mat_orig_to_new\00", align 1
@.str.1 = private unnamed_addr constant [14 x i8] c"GPUDrawObject\00", align 1
@MEM_mallocN = external dso_local global i8* (i64, i8*)*, align 8
@.str.2 = private unnamed_addr constant [24 x i8] c"GPUDrawObject.materials\00", align 1
@.str.3 = private unnamed_addr constant [32 x i8] c"GPUDrawObject.triangle_to_mface\00", align 1
@MEM_freeN = external dso_local global void (i8*)*, align 8
@gpu_buffer_type_settings = dso_local constant [7 x %struct.GPUBufferTypeSettings] [%struct.GPUBufferTypeSettings { void (%struct.DerivedMesh*, float*, i32*, i32*, i8*)* @GPU_buffer_copy_vertex, i32 34962, i32 3 }, %struct.GPUBufferTypeSettings { void (%struct.DerivedMesh*, float*, i32*, i32*, i8*)* @GPU_buffer_copy_normal, i32 34962, i32 3 }, %struct.GPUBufferTypeSettings { void (%struct.DerivedMesh*, float*, i32*, i32*, i8*)* @GPU_buffer_copy_mcol, i32 34962, i32 3 }, %struct.GPUBufferTypeSettings { void (%struct.DerivedMesh*, float*, i32*, i32*, i8*)* @GPU_buffer_copy_uv, i32 34962, i32 2 }, %struct.GPUBufferTypeSettings { void (%struct.DerivedMesh*, float*, i32*, i32*, i8*)* @GPU_buffer_copy_uv_texpaint, i32 34962, i32 4 }, %struct.GPUBufferTypeSettings { void (%struct.DerivedMesh*, float*, i32*, i32*, i8*)* @GPU_buffer_copy_edge, i32 34963, i32 2 }, %struct.GPUBufferTypeSettings { void (%struct.DerivedMesh*, float*, i32*, i32*, i8*)* @GPU_buffer_copy_uvedge, i32 34963, i32 4 }], align 16, !dbg !204
@useVBOs = internal global i32 -1, align 4, !dbg !1324
@__glewBindBufferARB = external dso_local global void (i32, i32)*, align 8
@GLStates = internal global i32 0, align 4, !dbg !1326
@__glewClientActiveTexture = external dso_local global void (i32)*, align 8
@__glewDisableVertexAttribArrayARB = external dso_local global void (i32)*, align 8
@__glewEnableVertexAttribArrayARB = external dso_local global void (i32)*, align 8
@__glewVertexAttribPointerARB = external dso_local global void (i32, i32, i32, i8, i32, i8*)*, align 8
@U = external dso_local global %struct.UserDef, align 8
@__glewMapBufferARB = external dso_local global i8* (i32, i32)*, align 8
@__glewBufferDataARB = external dso_local global void (i32, i64, i8*, i32)*, align 8
@__glewUnmapBufferARB = external dso_local global i8 (i32)*, align 8
@__const.GPU_update_mesh_pbvh_buffers.diffuse_color = private unnamed_addr constant [4 x float] [float 0x3FE99999A0000000, float 0x3FE99999A0000000, float 0x3FE99999A0000000, float 0x3FE99999A0000000], align 16
@__const.GPU_update_mesh_pbvh_buffers.vi = private unnamed_addr constant [2 x [3 x i32]] [[3 x i32] [i32 0, i32 1, i32 2], [3 x i32] [i32 3, i32 0, i32 2]], align 16
@__glewDeleteBuffersARB = external dso_local global void (i32, i32*)*, align 8
@.str.4 = private unnamed_addr constant [12 x i8] c"GPU_Buffers\00", align 1
@__glewGenBuffersARB = external dso_local global void (i32, i32*)*, align 8
@__const.GPU_update_grid_pbvh_buffers.diffuse_color = private unnamed_addr constant [4 x float] [float 0x3FE99999A0000000, float 0x3FE99999A0000000, float 0x3FE99999A0000000, float 1.000000e+00], align 16
@__GLEW_ARB_vertex_buffer_object = external dso_local global i8, align 1
@__const.GPU_update_bmesh_pbvh_buffers.diffuse_color = private unnamed_addr constant [4 x float] [float 0x3FE99999A0000000, float 0x3FE99999A0000000, float 0x3FE99999A0000000, float 1.000000e+00], align 16
@.str.5 = private unnamed_addr constant [10 x i8] c"GPUBuffer\00", align 1
@.str.6 = private unnamed_addr constant [18 x i8] c"GPUBuffer.pointer\00", align 1
@.str.7 = private unnamed_addr constant [15 x i8] c"GPUBuffer_Pool\00", align 1
@.str.8 = private unnamed_addr constant [22 x i8] c"GPUBufferPool.buffers\00", align 1
@.str.9 = private unnamed_addr constant [26 x i8] c"GPUBufferPool.pbvhbuffers\00", align 1
@MEM_reallocN_id = external dso_local global i8* (i8*, i64, i8*)*, align 8
@__func__.gpu_buffer_free_intern = private unnamed_addr constant [23 x i8] c"gpu_buffer_free_intern\00", align 1
@.str.10 = private unnamed_addr constant [30 x i8] c"GPUDrawObject.mat_orig_to_new\00", align 1
@.str.11 = private unnamed_addr constant [26 x i8] c"GPUDrawObject.vert_points\00", align 1
@.str.12 = private unnamed_addr constant [9 x i8] c"texslots\00", align 1
@.str.13 = private unnamed_addr constant [33 x i8] c"GPU_buffer_setup.mat_orig_to_new\00", align 1
@.str.14 = private unnamed_addr constant [35 x i8] c"GPU_buffer_setup.cur_index_per_mat\00", align 1
@attribData = internal global <{ %struct.GPUAttrib, [31 x %struct.GPUAttrib] }> <{ %struct.GPUAttrib { i32 -1, i32 0, i32 0 }, [31 x %struct.GPUAttrib] zeroinitializer }>, align 16, !dbg !1329
@gpu_get_grid_buffer.prev_gridsize = internal global i32 -1, align 4, !dbg !1338
@gpu_get_grid_buffer.prev_index_type = internal global i32 0, align 4, !dbg !1346
@gpu_get_grid_buffer.buffer = internal global i32 0, align 4, !dbg !1348
@gpu_get_grid_buffer.prev_totquad = internal global i32 0, align 4, !dbg !1350
@__const.gpu_draw_buffers_legacy_mesh.diffuse_color = private unnamed_addr constant [4 x float] [float 0x3FE99999A0000000, float 0x3FE99999A0000000, float 0x3FE99999A0000000, float 1.000000e+00], align 16
@__const.gpu_draw_buffers_legacy_grids.diffuse_color = private unnamed_addr constant [4 x float] [float 0x3FE99999A0000000, float 0x3FE99999A0000000, float 0x3FE99999A0000000, float 1.000000e+00], align 16
@__func__.gpu_pbvh_buffer_free_intern = private unnamed_addr constant [28 x i8] c"gpu_pbvh_buffer_free_intern\00", align 1

; Function Attrs: noinline nounwind uwtable
define dso_local void @GPU_global_buffer_pool_free() #0 !dbg !1368 {
entry:
  %0 = load %struct.GPUBufferPool*, %struct.GPUBufferPool** @gpu_buffer_pool, align 8, !dbg !1371
  call void @gpu_buffer_pool_free(%struct.GPUBufferPool* %0), !dbg !1372
  store %struct.GPUBufferPool* null, %struct.GPUBufferPool** @gpu_buffer_pool, align 8, !dbg !1373
  ret void, !dbg !1374
}

; Function Attrs: noinline nounwind uwtable
define internal void @gpu_buffer_pool_free(%struct.GPUBufferPool* %pool) #0 !dbg !1375 {
entry:
  %pool.addr = alloca %struct.GPUBufferPool*, align 8
  store %struct.GPUBufferPool* %pool, %struct.GPUBufferPool** %pool.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GPUBufferPool** %pool.addr, metadata !1378, metadata !DIExpression()), !dbg !1379
  %0 = load %struct.GPUBufferPool*, %struct.GPUBufferPool** %pool.addr, align 8, !dbg !1380
  %tobool = icmp ne %struct.GPUBufferPool* %0, null, !dbg !1380
  br i1 %tobool, label %if.end, label %if.then, !dbg !1382

if.then:                                          ; preds = %entry
  br label %return, !dbg !1383

if.end:                                           ; preds = %entry
  br label %while.cond, !dbg !1384

while.cond:                                       ; preds = %while.body, %if.end
  %1 = load %struct.GPUBufferPool*, %struct.GPUBufferPool** %pool.addr, align 8, !dbg !1385
  %totbuf = getelementptr inbounds %struct.GPUBufferPool, %struct.GPUBufferPool* %1, i32 0, i32 0, !dbg !1386
  %2 = load i32, i32* %totbuf, align 8, !dbg !1386
  %tobool1 = icmp ne i32 %2, 0, !dbg !1384
  br i1 %tobool1, label %while.body, label %while.end, !dbg !1384

while.body:                                       ; preds = %while.cond
  %3 = load %struct.GPUBufferPool*, %struct.GPUBufferPool** %pool.addr, align 8, !dbg !1387
  call void @gpu_buffer_pool_delete_last(%struct.GPUBufferPool* %3), !dbg !1388
  br label %while.cond, !dbg !1384, !llvm.loop !1389

while.end:                                        ; preds = %while.cond
  %4 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !1391
  %5 = load %struct.GPUBufferPool*, %struct.GPUBufferPool** %pool.addr, align 8, !dbg !1392
  %buffers = getelementptr inbounds %struct.GPUBufferPool, %struct.GPUBufferPool* %5, i32 0, i32 4, !dbg !1393
  %6 = load %struct.GPUBuffer**, %struct.GPUBuffer*** %buffers, align 8, !dbg !1393
  %7 = bitcast %struct.GPUBuffer** %6 to i8*, !dbg !1392
  call void %4(i8* %7), !dbg !1391
  %8 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !1394
  %9 = load %struct.GPUBufferPool*, %struct.GPUBufferPool** %pool.addr, align 8, !dbg !1395
  %pbvhbufids = getelementptr inbounds %struct.GPUBufferPool, %struct.GPUBufferPool* %9, i32 0, i32 5, !dbg !1396
  %10 = load i32*, i32** %pbvhbufids, align 8, !dbg !1396
  %11 = bitcast i32* %10 to i8*, !dbg !1395
  call void %8(i8* %11), !dbg !1394
  %12 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !1397
  %13 = load %struct.GPUBufferPool*, %struct.GPUBufferPool** %pool.addr, align 8, !dbg !1398
  %14 = bitcast %struct.GPUBufferPool* %13 to i8*, !dbg !1398
  call void %12(i8* %14), !dbg !1397
  br label %return, !dbg !1399

return:                                           ; preds = %while.end, %if.then
  ret void, !dbg !1399
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @GPU_global_buffer_pool_free_unused() #0 !dbg !1400 {
entry:
  %0 = load %struct.GPUBufferPool*, %struct.GPUBufferPool** @gpu_buffer_pool, align 8, !dbg !1401
  call void @gpu_buffer_pool_free_unused(%struct.GPUBufferPool* %0), !dbg !1402
  ret void, !dbg !1403
}

; Function Attrs: noinline nounwind uwtable
define internal void @gpu_buffer_pool_free_unused(%struct.GPUBufferPool* %pool) #0 !dbg !1404 {
entry:
  %pool.addr = alloca %struct.GPUBufferPool*, align 8
  store %struct.GPUBufferPool* %pool, %struct.GPUBufferPool** %pool.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GPUBufferPool** %pool.addr, metadata !1405, metadata !DIExpression()), !dbg !1406
  %0 = load %struct.GPUBufferPool*, %struct.GPUBufferPool** %pool.addr, align 8, !dbg !1407
  %tobool = icmp ne %struct.GPUBufferPool* %0, null, !dbg !1407
  br i1 %tobool, label %if.end, label %if.then, !dbg !1409

if.then:                                          ; preds = %entry
  br label %return, !dbg !1410

if.end:                                           ; preds = %entry
  call void @BLI_mutex_lock(i32* @buffer_mutex), !dbg !1411
  br label %while.cond, !dbg !1412

while.cond:                                       ; preds = %while.body, %if.end
  %1 = load %struct.GPUBufferPool*, %struct.GPUBufferPool** %pool.addr, align 8, !dbg !1413
  %totbuf = getelementptr inbounds %struct.GPUBufferPool, %struct.GPUBufferPool* %1, i32 0, i32 0, !dbg !1414
  %2 = load i32, i32* %totbuf, align 8, !dbg !1414
  %tobool1 = icmp ne i32 %2, 0, !dbg !1412
  br i1 %tobool1, label %while.body, label %while.end, !dbg !1412

while.body:                                       ; preds = %while.cond
  %3 = load %struct.GPUBufferPool*, %struct.GPUBufferPool** %pool.addr, align 8, !dbg !1415
  call void @gpu_buffer_pool_delete_last(%struct.GPUBufferPool* %3), !dbg !1416
  br label %while.cond, !dbg !1412, !llvm.loop !1417

while.end:                                        ; preds = %while.cond
  %4 = load void (i32, i32*)*, void (i32, i32*)** @__glewDeleteBuffersARB, align 8, !dbg !1419
  %5 = load %struct.GPUBufferPool*, %struct.GPUBufferPool** %pool.addr, align 8, !dbg !1420
  %totpbvhbufids = getelementptr inbounds %struct.GPUBufferPool, %struct.GPUBufferPool* %5, i32 0, i32 1, !dbg !1421
  %6 = load i32, i32* %totpbvhbufids, align 4, !dbg !1421
  %7 = load %struct.GPUBufferPool*, %struct.GPUBufferPool** %pool.addr, align 8, !dbg !1422
  %pbvhbufids = getelementptr inbounds %struct.GPUBufferPool, %struct.GPUBufferPool* %7, i32 0, i32 5, !dbg !1423
  %8 = load i32*, i32** %pbvhbufids, align 8, !dbg !1423
  call void %4(i32 %6, i32* %8), !dbg !1419
  %9 = load %struct.GPUBufferPool*, %struct.GPUBufferPool** %pool.addr, align 8, !dbg !1424
  %totpbvhbufids2 = getelementptr inbounds %struct.GPUBufferPool, %struct.GPUBufferPool* %9, i32 0, i32 1, !dbg !1425
  store i32 0, i32* %totpbvhbufids2, align 4, !dbg !1426
  call void @BLI_mutex_unlock(i32* @buffer_mutex), !dbg !1427
  br label %return, !dbg !1428

return:                                           ; preds = %while.end, %if.then
  ret void, !dbg !1428
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.GPUBuffer* @GPU_buffer_alloc(i32 %size) #0 !dbg !1429 {
entry:
  %retval = alloca %struct.GPUBuffer*, align 8
  %size.addr = alloca i32, align 4
  %buffer = alloca %struct.GPUBuffer*, align 8
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !1432, metadata !DIExpression()), !dbg !1433
  call void @llvm.dbg.declare(metadata %struct.GPUBuffer** %buffer, metadata !1434, metadata !DIExpression()), !dbg !1435
  %0 = load i32, i32* %size.addr, align 4, !dbg !1436
  %cmp = icmp eq i32 %0, 0, !dbg !1438
  br i1 %cmp, label %if.then, label %if.end, !dbg !1439

if.then:                                          ; preds = %entry
  store %struct.GPUBuffer* null, %struct.GPUBuffer** %retval, align 8, !dbg !1440
  br label %return, !dbg !1440

if.end:                                           ; preds = %entry
  call void @BLI_mutex_lock(i32* @buffer_mutex), !dbg !1442
  %1 = load i32, i32* %size.addr, align 4, !dbg !1443
  %call = call %struct.GPUBuffer* @gpu_buffer_alloc_intern(i32 %1), !dbg !1444
  store %struct.GPUBuffer* %call, %struct.GPUBuffer** %buffer, align 8, !dbg !1445
  call void @BLI_mutex_unlock(i32* @buffer_mutex), !dbg !1446
  %2 = load %struct.GPUBuffer*, %struct.GPUBuffer** %buffer, align 8, !dbg !1447
  store %struct.GPUBuffer* %2, %struct.GPUBuffer** %retval, align 8, !dbg !1448
  br label %return, !dbg !1448

return:                                           ; preds = %if.end, %if.then
  %3 = load %struct.GPUBuffer*, %struct.GPUBuffer** %retval, align 8, !dbg !1449
  ret %struct.GPUBuffer* %3, !dbg !1449
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

declare dso_local void @BLI_mutex_lock(i32*) #2

; Function Attrs: noinline nounwind uwtable
define internal %struct.GPUBuffer* @gpu_buffer_alloc_intern(i32 %size) #0 !dbg !1450 {
entry:
  %retval = alloca %struct.GPUBuffer*, align 8
  %size.addr = alloca i32, align 4
  %pool = alloca %struct.GPUBufferPool*, align 8
  %buf = alloca %struct.GPUBuffer*, align 8
  %i = alloca i32, align 4
  %bufsize = alloca i32, align 4
  %bestfit = alloca i32, align 4
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !1451, metadata !DIExpression()), !dbg !1452
  call void @llvm.dbg.declare(metadata %struct.GPUBufferPool** %pool, metadata !1453, metadata !DIExpression()), !dbg !1454
  call void @llvm.dbg.declare(metadata %struct.GPUBuffer** %buf, metadata !1455, metadata !DIExpression()), !dbg !1456
  call void @llvm.dbg.declare(metadata i32* %i, metadata !1457, metadata !DIExpression()), !dbg !1458
  call void @llvm.dbg.declare(metadata i32* %bufsize, metadata !1459, metadata !DIExpression()), !dbg !1460
  call void @llvm.dbg.declare(metadata i32* %bestfit, metadata !1461, metadata !DIExpression()), !dbg !1462
  store i32 -1, i32* %bestfit, align 4, !dbg !1462
  %0 = load i32, i32* %size.addr, align 4, !dbg !1463
  %cmp = icmp eq i32 %0, 0, !dbg !1465
  br i1 %cmp, label %if.then, label %if.end, !dbg !1466

if.then:                                          ; preds = %entry
  store %struct.GPUBuffer* null, %struct.GPUBuffer** %retval, align 8, !dbg !1467
  br label %return, !dbg !1467

if.end:                                           ; preds = %entry
  %call = call %struct.GPUBufferPool* @gpu_get_global_buffer_pool(), !dbg !1468
  store %struct.GPUBufferPool* %call, %struct.GPUBufferPool** %pool, align 8, !dbg !1469
  store i32 0, i32* %i, align 4, !dbg !1470
  br label %for.cond, !dbg !1472

for.cond:                                         ; preds = %for.inc, %if.end
  %1 = load i32, i32* %i, align 4, !dbg !1473
  %2 = load %struct.GPUBufferPool*, %struct.GPUBufferPool** %pool, align 8, !dbg !1475
  %totbuf = getelementptr inbounds %struct.GPUBufferPool, %struct.GPUBufferPool* %2, i32 0, i32 0, !dbg !1476
  %3 = load i32, i32* %totbuf, align 8, !dbg !1476
  %cmp1 = icmp slt i32 %1, %3, !dbg !1477
  br i1 %cmp1, label %for.body, label %for.end, !dbg !1478

for.body:                                         ; preds = %for.cond
  %4 = load %struct.GPUBufferPool*, %struct.GPUBufferPool** %pool, align 8, !dbg !1479
  %buffers = getelementptr inbounds %struct.GPUBufferPool, %struct.GPUBufferPool* %4, i32 0, i32 4, !dbg !1481
  %5 = load %struct.GPUBuffer**, %struct.GPUBuffer*** %buffers, align 8, !dbg !1481
  %6 = load i32, i32* %i, align 4, !dbg !1482
  %idxprom = sext i32 %6 to i64, !dbg !1479
  %arrayidx = getelementptr inbounds %struct.GPUBuffer*, %struct.GPUBuffer** %5, i64 %idxprom, !dbg !1479
  %7 = load %struct.GPUBuffer*, %struct.GPUBuffer** %arrayidx, align 8, !dbg !1479
  %size2 = getelementptr inbounds %struct.GPUBuffer, %struct.GPUBuffer* %7, i32 0, i32 0, !dbg !1483
  %8 = load i32, i32* %size2, align 8, !dbg !1483
  store i32 %8, i32* %bufsize, align 4, !dbg !1484
  %9 = load i32, i32* %bufsize, align 4, !dbg !1485
  %10 = load i32, i32* %size.addr, align 4, !dbg !1487
  %cmp3 = icmp eq i32 %9, %10, !dbg !1488
  br i1 %cmp3, label %if.then4, label %if.else, !dbg !1489

if.then4:                                         ; preds = %for.body
  %11 = load i32, i32* %i, align 4, !dbg !1490
  store i32 %11, i32* %bestfit, align 4, !dbg !1492
  br label %for.end, !dbg !1493

if.else:                                          ; preds = %for.body
  %12 = load i32, i32* %bufsize, align 4, !dbg !1494
  %13 = load i32, i32* %size.addr, align 4, !dbg !1496
  %cmp5 = icmp sgt i32 %12, %13, !dbg !1497
  br i1 %cmp5, label %land.lhs.true, label %if.end16, !dbg !1498

land.lhs.true:                                    ; preds = %if.else
  %14 = load i32, i32* %size.addr, align 4, !dbg !1499
  %15 = load i32, i32* %bufsize, align 4, !dbg !1500
  %div = sdiv i32 %15, 2, !dbg !1501
  %cmp6 = icmp sgt i32 %14, %div, !dbg !1502
  br i1 %cmp6, label %if.then7, label %if.end16, !dbg !1503

if.then7:                                         ; preds = %land.lhs.true
  %16 = load i32, i32* %bestfit, align 4, !dbg !1504
  %cmp8 = icmp eq i32 %16, -1, !dbg !1507
  br i1 %cmp8, label %if.then14, label %lor.lhs.false, !dbg !1508

lor.lhs.false:                                    ; preds = %if.then7
  %17 = load %struct.GPUBufferPool*, %struct.GPUBufferPool** %pool, align 8, !dbg !1509
  %buffers9 = getelementptr inbounds %struct.GPUBufferPool, %struct.GPUBufferPool* %17, i32 0, i32 4, !dbg !1510
  %18 = load %struct.GPUBuffer**, %struct.GPUBuffer*** %buffers9, align 8, !dbg !1510
  %19 = load i32, i32* %bestfit, align 4, !dbg !1511
  %idxprom10 = sext i32 %19 to i64, !dbg !1509
  %arrayidx11 = getelementptr inbounds %struct.GPUBuffer*, %struct.GPUBuffer** %18, i64 %idxprom10, !dbg !1509
  %20 = load %struct.GPUBuffer*, %struct.GPUBuffer** %arrayidx11, align 8, !dbg !1509
  %size12 = getelementptr inbounds %struct.GPUBuffer, %struct.GPUBuffer* %20, i32 0, i32 0, !dbg !1512
  %21 = load i32, i32* %size12, align 8, !dbg !1512
  %22 = load i32, i32* %bufsize, align 4, !dbg !1513
  %cmp13 = icmp sgt i32 %21, %22, !dbg !1514
  br i1 %cmp13, label %if.then14, label %if.end15, !dbg !1515

if.then14:                                        ; preds = %lor.lhs.false, %if.then7
  %23 = load i32, i32* %i, align 4, !dbg !1516
  store i32 %23, i32* %bestfit, align 4, !dbg !1518
  br label %if.end15, !dbg !1519

if.end15:                                         ; preds = %if.then14, %lor.lhs.false
  br label %if.end16, !dbg !1520

if.end16:                                         ; preds = %if.end15, %land.lhs.true, %if.else
  br label %if.end17

if.end17:                                         ; preds = %if.end16
  br label %for.inc, !dbg !1521

for.inc:                                          ; preds = %if.end17
  %24 = load i32, i32* %i, align 4, !dbg !1522
  %inc = add nsw i32 %24, 1, !dbg !1522
  store i32 %inc, i32* %i, align 4, !dbg !1522
  br label %for.cond, !dbg !1523, !llvm.loop !1524

for.end:                                          ; preds = %if.then4, %for.cond
  %25 = load i32, i32* %bestfit, align 4, !dbg !1526
  %cmp18 = icmp ne i32 %25, -1, !dbg !1528
  br i1 %cmp18, label %if.then19, label %if.end23, !dbg !1529

if.then19:                                        ; preds = %for.end
  %26 = load %struct.GPUBufferPool*, %struct.GPUBufferPool** %pool, align 8, !dbg !1530
  %buffers20 = getelementptr inbounds %struct.GPUBufferPool, %struct.GPUBufferPool* %26, i32 0, i32 4, !dbg !1532
  %27 = load %struct.GPUBuffer**, %struct.GPUBuffer*** %buffers20, align 8, !dbg !1532
  %28 = load i32, i32* %bestfit, align 4, !dbg !1533
  %idxprom21 = sext i32 %28 to i64, !dbg !1530
  %arrayidx22 = getelementptr inbounds %struct.GPUBuffer*, %struct.GPUBuffer** %27, i64 %idxprom21, !dbg !1530
  %29 = load %struct.GPUBuffer*, %struct.GPUBuffer** %arrayidx22, align 8, !dbg !1530
  store %struct.GPUBuffer* %29, %struct.GPUBuffer** %buf, align 8, !dbg !1534
  %30 = load %struct.GPUBufferPool*, %struct.GPUBufferPool** %pool, align 8, !dbg !1535
  %31 = load i32, i32* %bestfit, align 4, !dbg !1536
  call void @gpu_buffer_pool_remove_index(%struct.GPUBufferPool* %30, i32 %31), !dbg !1537
  %32 = load %struct.GPUBuffer*, %struct.GPUBuffer** %buf, align 8, !dbg !1538
  store %struct.GPUBuffer* %32, %struct.GPUBuffer** %retval, align 8, !dbg !1539
  br label %return, !dbg !1539

if.end23:                                         ; preds = %for.end
  %33 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !1540
  %call24 = call i8* %33(i64 24, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.5, i64 0, i64 0)), !dbg !1540
  %34 = bitcast i8* %call24 to %struct.GPUBuffer*, !dbg !1540
  store %struct.GPUBuffer* %34, %struct.GPUBuffer** %buf, align 8, !dbg !1541
  %35 = load i32, i32* %size.addr, align 4, !dbg !1542
  %36 = load %struct.GPUBuffer*, %struct.GPUBuffer** %buf, align 8, !dbg !1543
  %size25 = getelementptr inbounds %struct.GPUBuffer, %struct.GPUBuffer* %36, i32 0, i32 0, !dbg !1544
  store i32 %35, i32* %size25, align 8, !dbg !1545
  %37 = load i32, i32* @useVBOs, align 4, !dbg !1546
  %cmp26 = icmp eq i32 %37, 1, !dbg !1548
  br i1 %cmp26, label %if.then27, label %if.else29, !dbg !1549

if.then27:                                        ; preds = %if.end23
  %38 = load void (i32, i32*)*, void (i32, i32*)** @__glewGenBuffersARB, align 8, !dbg !1550
  %39 = load %struct.GPUBuffer*, %struct.GPUBuffer** %buf, align 8, !dbg !1552
  %id = getelementptr inbounds %struct.GPUBuffer, %struct.GPUBuffer* %39, i32 0, i32 2, !dbg !1553
  call void %38(i32 1, i32* %id), !dbg !1550
  %40 = load void (i32, i32)*, void (i32, i32)** @__glewBindBufferARB, align 8, !dbg !1554
  %41 = load %struct.GPUBuffer*, %struct.GPUBuffer** %buf, align 8, !dbg !1555
  %id28 = getelementptr inbounds %struct.GPUBuffer, %struct.GPUBuffer* %41, i32 0, i32 2, !dbg !1556
  %42 = load i32, i32* %id28, align 8, !dbg !1556
  call void %40(i32 34962, i32 %42), !dbg !1554
  %43 = load void (i32, i64, i8*, i32)*, void (i32, i64, i8*, i32)** @__glewBufferDataARB, align 8, !dbg !1557
  %44 = load i32, i32* %size.addr, align 4, !dbg !1558
  %conv = sext i32 %44 to i64, !dbg !1558
  call void %43(i32 34962, i64 %conv, i8* null, i32 35044), !dbg !1557
  %45 = load void (i32, i32)*, void (i32, i32)** @__glewBindBufferARB, align 8, !dbg !1559
  call void %45(i32 34962, i32 0), !dbg !1559
  br label %if.end43, !dbg !1560

if.else29:                                        ; preds = %if.end23
  %46 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !1561
  %47 = load i32, i32* %size.addr, align 4, !dbg !1563
  %conv30 = sext i32 %47 to i64, !dbg !1563
  %call31 = call i8* %46(i64 %conv30, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6, i64 0, i64 0)), !dbg !1561
  %48 = load %struct.GPUBuffer*, %struct.GPUBuffer** %buf, align 8, !dbg !1564
  %pointer = getelementptr inbounds %struct.GPUBuffer, %struct.GPUBuffer* %48, i32 0, i32 1, !dbg !1565
  store i8* %call31, i8** %pointer, align 8, !dbg !1566
  br label %while.cond, !dbg !1567

while.cond:                                       ; preds = %while.body, %if.else29
  %49 = load %struct.GPUBuffer*, %struct.GPUBuffer** %buf, align 8, !dbg !1568
  %pointer32 = getelementptr inbounds %struct.GPUBuffer, %struct.GPUBuffer* %49, i32 0, i32 1, !dbg !1569
  %50 = load i8*, i8** %pointer32, align 8, !dbg !1569
  %tobool = icmp ne i8* %50, null, !dbg !1568
  br i1 %tobool, label %land.end, label %land.rhs, !dbg !1570

land.rhs:                                         ; preds = %while.cond
  %51 = load %struct.GPUBufferPool*, %struct.GPUBufferPool** %pool, align 8, !dbg !1571
  %totbuf33 = getelementptr inbounds %struct.GPUBufferPool, %struct.GPUBufferPool* %51, i32 0, i32 0, !dbg !1572
  %52 = load i32, i32* %totbuf33, align 8, !dbg !1572
  %cmp34 = icmp sgt i32 %52, 0, !dbg !1573
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %53 = phi i1 [ false, %while.cond ], [ %cmp34, %land.rhs ], !dbg !1574
  br i1 %53, label %while.body, label %while.end, !dbg !1567

while.body:                                       ; preds = %land.end
  %54 = load %struct.GPUBufferPool*, %struct.GPUBufferPool** %pool, align 8, !dbg !1575
  call void @gpu_buffer_pool_delete_last(%struct.GPUBufferPool* %54), !dbg !1577
  %55 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !1578
  %56 = load i32, i32* %size.addr, align 4, !dbg !1579
  %conv36 = sext i32 %56 to i64, !dbg !1579
  %call37 = call i8* %55(i64 %conv36, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6, i64 0, i64 0)), !dbg !1578
  %57 = load %struct.GPUBuffer*, %struct.GPUBuffer** %buf, align 8, !dbg !1580
  %pointer38 = getelementptr inbounds %struct.GPUBuffer, %struct.GPUBuffer* %57, i32 0, i32 1, !dbg !1581
  store i8* %call37, i8** %pointer38, align 8, !dbg !1582
  br label %while.cond, !dbg !1567, !llvm.loop !1583

while.end:                                        ; preds = %land.end
  %58 = load %struct.GPUBuffer*, %struct.GPUBuffer** %buf, align 8, !dbg !1585
  %pointer39 = getelementptr inbounds %struct.GPUBuffer, %struct.GPUBuffer* %58, i32 0, i32 1, !dbg !1587
  %59 = load i8*, i8** %pointer39, align 8, !dbg !1587
  %tobool40 = icmp ne i8* %59, null, !dbg !1585
  br i1 %tobool40, label %if.end42, label %if.then41, !dbg !1588

if.then41:                                        ; preds = %while.end
  store %struct.GPUBuffer* null, %struct.GPUBuffer** %retval, align 8, !dbg !1589
  br label %return, !dbg !1589

if.end42:                                         ; preds = %while.end
  br label %if.end43

if.end43:                                         ; preds = %if.end42, %if.then27
  %60 = load %struct.GPUBuffer*, %struct.GPUBuffer** %buf, align 8, !dbg !1590
  store %struct.GPUBuffer* %60, %struct.GPUBuffer** %retval, align 8, !dbg !1591
  br label %return, !dbg !1591

return:                                           ; preds = %if.end43, %if.then41, %if.then19, %if.then
  %61 = load %struct.GPUBuffer*, %struct.GPUBuffer** %retval, align 8, !dbg !1592
  ret %struct.GPUBuffer* %61, !dbg !1592
}

declare dso_local void @BLI_mutex_unlock(i32*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @GPU_buffer_free(%struct.GPUBuffer* %buffer) #0 !dbg !1593 {
entry:
  %buffer.addr = alloca %struct.GPUBuffer*, align 8
  store %struct.GPUBuffer* %buffer, %struct.GPUBuffer** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GPUBuffer** %buffer.addr, metadata !1596, metadata !DIExpression()), !dbg !1597
  %0 = load %struct.GPUBuffer*, %struct.GPUBuffer** %buffer.addr, align 8, !dbg !1598
  %tobool = icmp ne %struct.GPUBuffer* %0, null, !dbg !1598
  br i1 %tobool, label %if.end, label %if.then, !dbg !1600

if.then:                                          ; preds = %entry
  br label %return, !dbg !1601

if.end:                                           ; preds = %entry
  call void @BLI_mutex_lock(i32* @buffer_mutex), !dbg !1603
  %1 = load %struct.GPUBuffer*, %struct.GPUBuffer** %buffer.addr, align 8, !dbg !1604
  call void @gpu_buffer_free_intern(%struct.GPUBuffer* %1), !dbg !1605
  call void @BLI_mutex_unlock(i32* @buffer_mutex), !dbg !1606
  br label %return, !dbg !1607

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !1607
}

; Function Attrs: noinline nounwind uwtable
define internal void @gpu_buffer_free_intern(%struct.GPUBuffer* %buffer) #0 !dbg !1608 {
entry:
  %buffer.addr = alloca %struct.GPUBuffer*, align 8
  %pool = alloca %struct.GPUBufferPool*, align 8
  %i = alloca i32, align 4
  store %struct.GPUBuffer* %buffer, %struct.GPUBuffer** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GPUBuffer** %buffer.addr, metadata !1609, metadata !DIExpression()), !dbg !1610
  call void @llvm.dbg.declare(metadata %struct.GPUBufferPool** %pool, metadata !1611, metadata !DIExpression()), !dbg !1612
  call void @llvm.dbg.declare(metadata i32* %i, metadata !1613, metadata !DIExpression()), !dbg !1614
  %0 = load %struct.GPUBuffer*, %struct.GPUBuffer** %buffer.addr, align 8, !dbg !1615
  %tobool = icmp ne %struct.GPUBuffer* %0, null, !dbg !1615
  br i1 %tobool, label %if.end, label %if.then, !dbg !1617

if.then:                                          ; preds = %entry
  br label %return, !dbg !1618

if.end:                                           ; preds = %entry
  %call = call %struct.GPUBufferPool* @gpu_get_global_buffer_pool(), !dbg !1619
  store %struct.GPUBufferPool* %call, %struct.GPUBufferPool** %pool, align 8, !dbg !1620
  %call1 = call i32 @BLI_thread_is_main(), !dbg !1621
  %tobool2 = icmp ne i32 %call1, 0, !dbg !1621
  br i1 %tobool2, label %if.then3, label %if.else, !dbg !1623

if.then3:                                         ; preds = %if.end
  br label %while.cond, !dbg !1624

while.cond:                                       ; preds = %while.body, %if.then3
  %1 = load %struct.GPUBufferPool*, %struct.GPUBufferPool** %pool, align 8, !dbg !1626
  %totbuf = getelementptr inbounds %struct.GPUBufferPool, %struct.GPUBufferPool* %1, i32 0, i32 0, !dbg !1627
  %2 = load i32, i32* %totbuf, align 8, !dbg !1627
  %cmp = icmp sge i32 %2, 8, !dbg !1628
  br i1 %cmp, label %while.body, label %while.end, !dbg !1624

while.body:                                       ; preds = %while.cond
  %3 = load %struct.GPUBufferPool*, %struct.GPUBufferPool** %pool, align 8, !dbg !1629
  call void @gpu_buffer_pool_delete_last(%struct.GPUBufferPool* %3), !dbg !1630
  br label %while.cond, !dbg !1624, !llvm.loop !1631

while.end:                                        ; preds = %while.cond
  br label %if.end12, !dbg !1633

if.else:                                          ; preds = %if.end
  %4 = load %struct.GPUBufferPool*, %struct.GPUBufferPool** %pool, align 8, !dbg !1634
  %maxsize = getelementptr inbounds %struct.GPUBufferPool, %struct.GPUBufferPool* %4, i32 0, i32 2, !dbg !1637
  %5 = load i32, i32* %maxsize, align 8, !dbg !1637
  %6 = load %struct.GPUBufferPool*, %struct.GPUBufferPool** %pool, align 8, !dbg !1638
  %totbuf4 = getelementptr inbounds %struct.GPUBufferPool, %struct.GPUBufferPool* %6, i32 0, i32 0, !dbg !1639
  %7 = load i32, i32* %totbuf4, align 8, !dbg !1639
  %cmp5 = icmp eq i32 %5, %7, !dbg !1640
  br i1 %cmp5, label %if.then6, label %if.end11, !dbg !1641

if.then6:                                         ; preds = %if.else
  %8 = load %struct.GPUBufferPool*, %struct.GPUBufferPool** %pool, align 8, !dbg !1642
  %maxsize7 = getelementptr inbounds %struct.GPUBufferPool, %struct.GPUBufferPool* %8, i32 0, i32 2, !dbg !1644
  %9 = load i32, i32* %maxsize7, align 8, !dbg !1645
  %add = add nsw i32 %9, 8, !dbg !1645
  store i32 %add, i32* %maxsize7, align 8, !dbg !1645
  %10 = load i8* (i8*, i64, i8*)*, i8* (i8*, i64, i8*)** @MEM_reallocN_id, align 8, !dbg !1646
  %11 = load %struct.GPUBufferPool*, %struct.GPUBufferPool** %pool, align 8, !dbg !1646
  %buffers = getelementptr inbounds %struct.GPUBufferPool, %struct.GPUBufferPool* %11, i32 0, i32 4, !dbg !1646
  %12 = load %struct.GPUBuffer**, %struct.GPUBuffer*** %buffers, align 8, !dbg !1646
  %13 = bitcast %struct.GPUBuffer** %12 to i8*, !dbg !1646
  %14 = load %struct.GPUBufferPool*, %struct.GPUBufferPool** %pool, align 8, !dbg !1646
  %maxsize8 = getelementptr inbounds %struct.GPUBufferPool, %struct.GPUBufferPool* %14, i32 0, i32 2, !dbg !1646
  %15 = load i32, i32* %maxsize8, align 8, !dbg !1646
  %conv = sext i32 %15 to i64, !dbg !1646
  %mul = mul i64 8, %conv, !dbg !1646
  %call9 = call i8* %10(i8* %13, i64 %mul, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @__func__.gpu_buffer_free_intern, i64 0, i64 0)), !dbg !1646
  %16 = bitcast i8* %call9 to %struct.GPUBuffer**, !dbg !1646
  %17 = load %struct.GPUBufferPool*, %struct.GPUBufferPool** %pool, align 8, !dbg !1647
  %buffers10 = getelementptr inbounds %struct.GPUBufferPool, %struct.GPUBufferPool* %17, i32 0, i32 4, !dbg !1648
  store %struct.GPUBuffer** %16, %struct.GPUBuffer*** %buffers10, align 8, !dbg !1649
  br label %if.end11, !dbg !1650

if.end11:                                         ; preds = %if.then6, %if.else
  br label %if.end12

if.end12:                                         ; preds = %if.end11, %while.end
  %18 = load %struct.GPUBufferPool*, %struct.GPUBufferPool** %pool, align 8, !dbg !1651
  %totbuf13 = getelementptr inbounds %struct.GPUBufferPool, %struct.GPUBufferPool* %18, i32 0, i32 0, !dbg !1653
  %19 = load i32, i32* %totbuf13, align 8, !dbg !1653
  store i32 %19, i32* %i, align 4, !dbg !1654
  br label %for.cond, !dbg !1655

for.cond:                                         ; preds = %for.inc, %if.end12
  %20 = load i32, i32* %i, align 4, !dbg !1656
  %cmp14 = icmp sgt i32 %20, 0, !dbg !1658
  br i1 %cmp14, label %for.body, label %for.end, !dbg !1659

for.body:                                         ; preds = %for.cond
  %21 = load %struct.GPUBufferPool*, %struct.GPUBufferPool** %pool, align 8, !dbg !1660
  %buffers16 = getelementptr inbounds %struct.GPUBufferPool, %struct.GPUBufferPool* %21, i32 0, i32 4, !dbg !1661
  %22 = load %struct.GPUBuffer**, %struct.GPUBuffer*** %buffers16, align 8, !dbg !1661
  %23 = load i32, i32* %i, align 4, !dbg !1662
  %sub = sub nsw i32 %23, 1, !dbg !1663
  %idxprom = sext i32 %sub to i64, !dbg !1660
  %arrayidx = getelementptr inbounds %struct.GPUBuffer*, %struct.GPUBuffer** %22, i64 %idxprom, !dbg !1660
  %24 = load %struct.GPUBuffer*, %struct.GPUBuffer** %arrayidx, align 8, !dbg !1660
  %25 = load %struct.GPUBufferPool*, %struct.GPUBufferPool** %pool, align 8, !dbg !1664
  %buffers17 = getelementptr inbounds %struct.GPUBufferPool, %struct.GPUBufferPool* %25, i32 0, i32 4, !dbg !1665
  %26 = load %struct.GPUBuffer**, %struct.GPUBuffer*** %buffers17, align 8, !dbg !1665
  %27 = load i32, i32* %i, align 4, !dbg !1666
  %idxprom18 = sext i32 %27 to i64, !dbg !1664
  %arrayidx19 = getelementptr inbounds %struct.GPUBuffer*, %struct.GPUBuffer** %26, i64 %idxprom18, !dbg !1664
  store %struct.GPUBuffer* %24, %struct.GPUBuffer** %arrayidx19, align 8, !dbg !1667
  br label %for.inc, !dbg !1664

for.inc:                                          ; preds = %for.body
  %28 = load i32, i32* %i, align 4, !dbg !1668
  %dec = add nsw i32 %28, -1, !dbg !1668
  store i32 %dec, i32* %i, align 4, !dbg !1668
  br label %for.cond, !dbg !1669, !llvm.loop !1670

for.end:                                          ; preds = %for.cond
  %29 = load %struct.GPUBuffer*, %struct.GPUBuffer** %buffer.addr, align 8, !dbg !1672
  %30 = load %struct.GPUBufferPool*, %struct.GPUBufferPool** %pool, align 8, !dbg !1673
  %buffers20 = getelementptr inbounds %struct.GPUBufferPool, %struct.GPUBufferPool* %30, i32 0, i32 4, !dbg !1674
  %31 = load %struct.GPUBuffer**, %struct.GPUBuffer*** %buffers20, align 8, !dbg !1674
  %arrayidx21 = getelementptr inbounds %struct.GPUBuffer*, %struct.GPUBuffer** %31, i64 0, !dbg !1673
  store %struct.GPUBuffer* %29, %struct.GPUBuffer** %arrayidx21, align 8, !dbg !1675
  %32 = load %struct.GPUBufferPool*, %struct.GPUBufferPool** %pool, align 8, !dbg !1676
  %totbuf22 = getelementptr inbounds %struct.GPUBufferPool, %struct.GPUBufferPool* %32, i32 0, i32 0, !dbg !1677
  %33 = load i32, i32* %totbuf22, align 8, !dbg !1678
  %inc = add nsw i32 %33, 1, !dbg !1678
  store i32 %inc, i32* %totbuf22, align 8, !dbg !1678
  br label %return, !dbg !1679

return:                                           ; preds = %for.end, %if.then
  ret void, !dbg !1679
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.GPUDrawObject* @GPU_drawobject_new(%struct.DerivedMesh* %dm) #0 !dbg !1680 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %gdo = alloca %struct.GPUDrawObject*, align 8
  %mface = alloca %struct.MFace*, align 8
  %totmat = alloca i32, align 4
  %points_per_mat = alloca i32*, align 8
  %i = alloca i32, align 4
  %curmat = alloca i32, align 4
  %curpoint = alloca i32, align 4
  %totface = alloca i32, align 4
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !1685, metadata !DIExpression()), !dbg !1686
  call void @llvm.dbg.declare(metadata %struct.GPUDrawObject** %gdo, metadata !1687, metadata !DIExpression()), !dbg !1688
  call void @llvm.dbg.declare(metadata %struct.MFace** %mface, metadata !1689, metadata !DIExpression()), !dbg !1692
  call void @llvm.dbg.declare(metadata i32* %totmat, metadata !1693, metadata !DIExpression()), !dbg !1694
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !1695
  %totmat1 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %0, i32 0, i32 17, !dbg !1696
  %1 = load i32, i32* %totmat1, align 4, !dbg !1696
  store i32 %1, i32* %totmat, align 4, !dbg !1694
  call void @llvm.dbg.declare(metadata i32** %points_per_mat, metadata !1697, metadata !DIExpression()), !dbg !1698
  call void @llvm.dbg.declare(metadata i32* %i, metadata !1699, metadata !DIExpression()), !dbg !1700
  call void @llvm.dbg.declare(metadata i32* %curmat, metadata !1701, metadata !DIExpression()), !dbg !1702
  call void @llvm.dbg.declare(metadata i32* %curpoint, metadata !1703, metadata !DIExpression()), !dbg !1704
  call void @llvm.dbg.declare(metadata i32* %totface, metadata !1705, metadata !DIExpression()), !dbg !1706
  %2 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !1707
  %getTessFaceArray = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %2, i32 0, i32 33, !dbg !1708
  %3 = load %struct.MFace* (%struct.DerivedMesh*)*, %struct.MFace* (%struct.DerivedMesh*)** %getTessFaceArray, align 8, !dbg !1708
  %4 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !1709
  %call = call %struct.MFace* %3(%struct.DerivedMesh* %4), !dbg !1707
  store %struct.MFace* %call, %struct.MFace** %mface, align 8, !dbg !1710
  %5 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !1711
  %getNumTessFaces = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %5, i32 0, i32 25, !dbg !1712
  %6 = load i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)** %getNumTessFaces, align 8, !dbg !1712
  %7 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !1713
  %call2 = call i32 %6(%struct.DerivedMesh* %7), !dbg !1711
  store i32 %call2, i32* %totface, align 4, !dbg !1714
  %8 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !1715
  %9 = load i32, i32* %totmat, align 4, !dbg !1716
  %conv = sext i32 %9 to i64, !dbg !1716
  %mul = mul i64 4, %conv, !dbg !1717
  %call3 = call i8* %8(i64 %mul, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str, i64 0, i64 0)), !dbg !1715
  %10 = bitcast i8* %call3 to i32*, !dbg !1715
  store i32* %10, i32** %points_per_mat, align 8, !dbg !1718
  store i32 0, i32* %i, align 4, !dbg !1719
  br label %for.cond, !dbg !1721

for.cond:                                         ; preds = %for.inc, %entry
  %11 = load i32, i32* %i, align 4, !dbg !1722
  %12 = load i32, i32* %totface, align 4, !dbg !1724
  %cmp = icmp slt i32 %11, %12, !dbg !1725
  br i1 %cmp, label %for.body, label %for.end, !dbg !1726

for.body:                                         ; preds = %for.cond
  %13 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !1727
  %14 = load i32, i32* %i, align 4, !dbg !1728
  %idxprom = sext i32 %14 to i64, !dbg !1727
  %arrayidx = getelementptr inbounds %struct.MFace, %struct.MFace* %13, i64 %idxprom, !dbg !1727
  %v4 = getelementptr inbounds %struct.MFace, %struct.MFace* %arrayidx, i32 0, i32 3, !dbg !1729
  %15 = load i32, i32* %v4, align 4, !dbg !1729
  %tobool = icmp ne i32 %15, 0, !dbg !1727
  %16 = zext i1 %tobool to i64, !dbg !1727
  %cond = select i1 %tobool, i32 6, i32 3, !dbg !1727
  %17 = load i32*, i32** %points_per_mat, align 8, !dbg !1730
  %18 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !1731
  %19 = load i32, i32* %i, align 4, !dbg !1732
  %idxprom5 = sext i32 %19 to i64, !dbg !1731
  %arrayidx6 = getelementptr inbounds %struct.MFace, %struct.MFace* %18, i64 %idxprom5, !dbg !1731
  %mat_nr = getelementptr inbounds %struct.MFace, %struct.MFace* %arrayidx6, i32 0, i32 4, !dbg !1733
  %20 = load i16, i16* %mat_nr, align 4, !dbg !1733
  %idxprom7 = sext i16 %20 to i64, !dbg !1730
  %arrayidx8 = getelementptr inbounds i32, i32* %17, i64 %idxprom7, !dbg !1730
  %21 = load i32, i32* %arrayidx8, align 4, !dbg !1734
  %add = add nsw i32 %21, %cond, !dbg !1734
  store i32 %add, i32* %arrayidx8, align 4, !dbg !1734
  br label %for.inc, !dbg !1730

for.inc:                                          ; preds = %for.body
  %22 = load i32, i32* %i, align 4, !dbg !1735
  %inc = add nsw i32 %22, 1, !dbg !1735
  store i32 %inc, i32* %i, align 4, !dbg !1735
  br label %for.cond, !dbg !1736, !llvm.loop !1737

for.end:                                          ; preds = %for.cond
  %23 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !1739
  %call9 = call i8* %23(i64 104, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1, i64 0, i64 0)), !dbg !1739
  %24 = bitcast i8* %call9 to %struct.GPUDrawObject*, !dbg !1739
  store %struct.GPUDrawObject* %24, %struct.GPUDrawObject** %gdo, align 8, !dbg !1740
  %25 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !1741
  %getNumVerts = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %25, i32 0, i32 23, !dbg !1742
  %26 = load i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)** %getNumVerts, align 8, !dbg !1742
  %27 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !1743
  %call10 = call i32 %26(%struct.DerivedMesh* %27), !dbg !1741
  %28 = load %struct.GPUDrawObject*, %struct.GPUDrawObject** %gdo, align 8, !dbg !1744
  %totvert = getelementptr inbounds %struct.GPUDrawObject, %struct.GPUDrawObject* %28, i32 0, i32 13, !dbg !1745
  store i32 %call10, i32* %totvert, align 4, !dbg !1746
  %29 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !1747
  %getNumEdges = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %29, i32 0, i32 24, !dbg !1748
  %30 = load i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)** %getNumEdges, align 8, !dbg !1748
  %31 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !1749
  %call11 = call i32 %30(%struct.DerivedMesh* %31), !dbg !1747
  %32 = load %struct.GPUDrawObject*, %struct.GPUDrawObject** %gdo, align 8, !dbg !1750
  %totedge = getelementptr inbounds %struct.GPUDrawObject, %struct.GPUDrawObject* %32, i32 0, i32 14, !dbg !1751
  store i32 %call11, i32* %totedge, align 8, !dbg !1752
  store i32 0, i32* %i, align 4, !dbg !1753
  br label %for.cond12, !dbg !1755

for.cond12:                                       ; preds = %for.inc21, %for.end
  %33 = load i32, i32* %i, align 4, !dbg !1756
  %34 = load i32, i32* %totmat, align 4, !dbg !1758
  %cmp13 = icmp slt i32 %33, %34, !dbg !1759
  br i1 %cmp13, label %for.body15, label %for.end23, !dbg !1760

for.body15:                                       ; preds = %for.cond12
  %35 = load i32*, i32** %points_per_mat, align 8, !dbg !1761
  %36 = load i32, i32* %i, align 4, !dbg !1764
  %idxprom16 = sext i32 %36 to i64, !dbg !1761
  %arrayidx17 = getelementptr inbounds i32, i32* %35, i64 %idxprom16, !dbg !1761
  %37 = load i32, i32* %arrayidx17, align 4, !dbg !1761
  %cmp18 = icmp sgt i32 %37, 0, !dbg !1765
  br i1 %cmp18, label %if.then, label %if.end, !dbg !1766

if.then:                                          ; preds = %for.body15
  %38 = load %struct.GPUDrawObject*, %struct.GPUDrawObject** %gdo, align 8, !dbg !1767
  %totmaterial = getelementptr inbounds %struct.GPUDrawObject, %struct.GPUDrawObject* %38, i32 0, i32 10, !dbg !1768
  %39 = load i32, i32* %totmaterial, align 8, !dbg !1769
  %inc20 = add nsw i32 %39, 1, !dbg !1769
  store i32 %inc20, i32* %totmaterial, align 8, !dbg !1769
  br label %if.end, !dbg !1767

if.end:                                           ; preds = %if.then, %for.body15
  br label %for.inc21, !dbg !1770

for.inc21:                                        ; preds = %if.end
  %40 = load i32, i32* %i, align 4, !dbg !1771
  %inc22 = add nsw i32 %40, 1, !dbg !1771
  store i32 %inc22, i32* %i, align 4, !dbg !1771
  br label %for.cond12, !dbg !1772, !llvm.loop !1773

for.end23:                                        ; preds = %for.cond12
  %41 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !1775
  %42 = load %struct.GPUDrawObject*, %struct.GPUDrawObject** %gdo, align 8, !dbg !1776
  %totmaterial24 = getelementptr inbounds %struct.GPUDrawObject, %struct.GPUDrawObject* %42, i32 0, i32 10, !dbg !1777
  %43 = load i32, i32* %totmaterial24, align 8, !dbg !1777
  %conv25 = sext i32 %43 to i64, !dbg !1776
  %mul26 = mul i64 12, %conv25, !dbg !1778
  %call27 = call i8* %41(i64 %mul26, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.2, i64 0, i64 0)), !dbg !1775
  %44 = bitcast i8* %call27 to %struct.GPUBufferMaterial*, !dbg !1775
  %45 = load %struct.GPUDrawObject*, %struct.GPUDrawObject** %gdo, align 8, !dbg !1779
  %materials = getelementptr inbounds %struct.GPUDrawObject, %struct.GPUDrawObject* %45, i32 0, i32 9, !dbg !1780
  store %struct.GPUBufferMaterial* %44, %struct.GPUBufferMaterial** %materials, align 8, !dbg !1781
  store i32 0, i32* %i, align 4, !dbg !1782
  store i32 0, i32* %curmat, align 4, !dbg !1784
  store i32 0, i32* %curpoint, align 4, !dbg !1785
  br label %for.cond28, !dbg !1786

for.cond28:                                       ; preds = %for.inc53, %for.end23
  %46 = load i32, i32* %i, align 4, !dbg !1787
  %47 = load i32, i32* %totmat, align 4, !dbg !1789
  %cmp29 = icmp slt i32 %46, %47, !dbg !1790
  br i1 %cmp29, label %for.body31, label %for.end55, !dbg !1791

for.body31:                                       ; preds = %for.cond28
  %48 = load i32*, i32** %points_per_mat, align 8, !dbg !1792
  %49 = load i32, i32* %i, align 4, !dbg !1795
  %idxprom32 = sext i32 %49 to i64, !dbg !1792
  %arrayidx33 = getelementptr inbounds i32, i32* %48, i64 %idxprom32, !dbg !1792
  %50 = load i32, i32* %arrayidx33, align 4, !dbg !1792
  %cmp34 = icmp sgt i32 %50, 0, !dbg !1796
  br i1 %cmp34, label %if.then36, label %if.end52, !dbg !1797

if.then36:                                        ; preds = %for.body31
  %51 = load i32, i32* %curpoint, align 4, !dbg !1798
  %52 = load %struct.GPUDrawObject*, %struct.GPUDrawObject** %gdo, align 8, !dbg !1800
  %materials37 = getelementptr inbounds %struct.GPUDrawObject, %struct.GPUDrawObject* %52, i32 0, i32 9, !dbg !1801
  %53 = load %struct.GPUBufferMaterial*, %struct.GPUBufferMaterial** %materials37, align 8, !dbg !1801
  %54 = load i32, i32* %curmat, align 4, !dbg !1802
  %idxprom38 = sext i32 %54 to i64, !dbg !1800
  %arrayidx39 = getelementptr inbounds %struct.GPUBufferMaterial, %struct.GPUBufferMaterial* %53, i64 %idxprom38, !dbg !1800
  %start = getelementptr inbounds %struct.GPUBufferMaterial, %struct.GPUBufferMaterial* %arrayidx39, i32 0, i32 0, !dbg !1803
  store i32 %51, i32* %start, align 4, !dbg !1804
  %55 = load %struct.GPUDrawObject*, %struct.GPUDrawObject** %gdo, align 8, !dbg !1805
  %materials40 = getelementptr inbounds %struct.GPUDrawObject, %struct.GPUDrawObject* %55, i32 0, i32 9, !dbg !1806
  %56 = load %struct.GPUBufferMaterial*, %struct.GPUBufferMaterial** %materials40, align 8, !dbg !1806
  %57 = load i32, i32* %curmat, align 4, !dbg !1807
  %idxprom41 = sext i32 %57 to i64, !dbg !1805
  %arrayidx42 = getelementptr inbounds %struct.GPUBufferMaterial, %struct.GPUBufferMaterial* %56, i64 %idxprom41, !dbg !1805
  %totpoint = getelementptr inbounds %struct.GPUBufferMaterial, %struct.GPUBufferMaterial* %arrayidx42, i32 0, i32 1, !dbg !1808
  store i32 0, i32* %totpoint, align 4, !dbg !1809
  %58 = load i32, i32* %i, align 4, !dbg !1810
  %conv43 = trunc i32 %58 to i16, !dbg !1810
  %59 = load %struct.GPUDrawObject*, %struct.GPUDrawObject** %gdo, align 8, !dbg !1811
  %materials44 = getelementptr inbounds %struct.GPUDrawObject, %struct.GPUDrawObject* %59, i32 0, i32 9, !dbg !1812
  %60 = load %struct.GPUBufferMaterial*, %struct.GPUBufferMaterial** %materials44, align 8, !dbg !1812
  %61 = load i32, i32* %curmat, align 4, !dbg !1813
  %idxprom45 = sext i32 %61 to i64, !dbg !1811
  %arrayidx46 = getelementptr inbounds %struct.GPUBufferMaterial, %struct.GPUBufferMaterial* %60, i64 %idxprom45, !dbg !1811
  %mat_nr47 = getelementptr inbounds %struct.GPUBufferMaterial, %struct.GPUBufferMaterial* %arrayidx46, i32 0, i32 2, !dbg !1814
  store i16 %conv43, i16* %mat_nr47, align 4, !dbg !1815
  %62 = load i32*, i32** %points_per_mat, align 8, !dbg !1816
  %63 = load i32, i32* %i, align 4, !dbg !1817
  %idxprom48 = sext i32 %63 to i64, !dbg !1816
  %arrayidx49 = getelementptr inbounds i32, i32* %62, i64 %idxprom48, !dbg !1816
  %64 = load i32, i32* %arrayidx49, align 4, !dbg !1816
  %65 = load i32, i32* %curpoint, align 4, !dbg !1818
  %add50 = add nsw i32 %65, %64, !dbg !1818
  store i32 %add50, i32* %curpoint, align 4, !dbg !1818
  %66 = load i32, i32* %curmat, align 4, !dbg !1819
  %inc51 = add nsw i32 %66, 1, !dbg !1819
  store i32 %inc51, i32* %curmat, align 4, !dbg !1819
  br label %if.end52, !dbg !1820

if.end52:                                         ; preds = %if.then36, %for.body31
  br label %for.inc53, !dbg !1821

for.inc53:                                        ; preds = %if.end52
  %67 = load i32, i32* %i, align 4, !dbg !1822
  %inc54 = add nsw i32 %67, 1, !dbg !1822
  store i32 %inc54, i32* %i, align 4, !dbg !1822
  br label %for.cond28, !dbg !1823, !llvm.loop !1824

for.end55:                                        ; preds = %for.cond28
  %68 = load i32, i32* %curpoint, align 4, !dbg !1826
  %69 = load %struct.GPUDrawObject*, %struct.GPUDrawObject** %gdo, align 8, !dbg !1827
  %tot_triangle_point = getelementptr inbounds %struct.GPUDrawObject, %struct.GPUDrawObject* %69, i32 0, i32 11, !dbg !1828
  store i32 %68, i32* %tot_triangle_point, align 4, !dbg !1829
  %70 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !1830
  %71 = load %struct.GPUDrawObject*, %struct.GPUDrawObject** %gdo, align 8, !dbg !1831
  %tot_triangle_point56 = getelementptr inbounds %struct.GPUDrawObject, %struct.GPUDrawObject* %71, i32 0, i32 11, !dbg !1832
  %72 = load i32, i32* %tot_triangle_point56, align 4, !dbg !1832
  %div = sdiv i32 %72, 3, !dbg !1833
  %conv57 = sext i32 %div to i64, !dbg !1834
  %mul58 = mul i64 4, %conv57, !dbg !1835
  %call59 = call i8* %70(i64 %mul58, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.3, i64 0, i64 0)), !dbg !1830
  %73 = bitcast i8* %call59 to i32*, !dbg !1830
  %74 = load %struct.GPUDrawObject*, %struct.GPUDrawObject** %gdo, align 8, !dbg !1836
  %triangle_to_mface = getelementptr inbounds %struct.GPUDrawObject, %struct.GPUDrawObject* %74, i32 0, i32 6, !dbg !1837
  store i32* %73, i32** %triangle_to_mface, align 8, !dbg !1838
  %75 = load %struct.GPUDrawObject*, %struct.GPUDrawObject** %gdo, align 8, !dbg !1839
  %76 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !1840
  %77 = load i32, i32* %totface, align 4, !dbg !1841
  %78 = load i32, i32* %totmat, align 4, !dbg !1842
  call void @gpu_drawobject_init_vert_points(%struct.GPUDrawObject* %75, %struct.MFace* %76, i32 %77, i32 %78), !dbg !1843
  %79 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !1844
  %80 = load i32*, i32** %points_per_mat, align 8, !dbg !1845
  %81 = bitcast i32* %80 to i8*, !dbg !1845
  call void %79(i8* %81), !dbg !1844
  %82 = load %struct.GPUDrawObject*, %struct.GPUDrawObject** %gdo, align 8, !dbg !1846
  ret %struct.GPUDrawObject* %82, !dbg !1847
}

; Function Attrs: noinline nounwind uwtable
define internal void @gpu_drawobject_init_vert_points(%struct.GPUDrawObject* %gdo, %struct.MFace* %f, i32 %totface, i32 %totmat) #0 !dbg !1848 {
entry:
  %gdo.addr = alloca %struct.GPUDrawObject*, align 8
  %f.addr = alloca %struct.MFace*, align 8
  %totface.addr = alloca i32, align 4
  %totmat.addr = alloca i32, align 4
  %mat = alloca %struct.GPUBufferMaterial*, align 8
  %i = alloca i32, align 4
  %mat_orig_to_new = alloca i32*, align 8
  store %struct.GPUDrawObject* %gdo, %struct.GPUDrawObject** %gdo.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GPUDrawObject** %gdo.addr, metadata !1851, metadata !DIExpression()), !dbg !1852
  store %struct.MFace* %f, %struct.MFace** %f.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MFace** %f.addr, metadata !1853, metadata !DIExpression()), !dbg !1854
  store i32 %totface, i32* %totface.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %totface.addr, metadata !1855, metadata !DIExpression()), !dbg !1856
  store i32 %totmat, i32* %totmat.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %totmat.addr, metadata !1857, metadata !DIExpression()), !dbg !1858
  call void @llvm.dbg.declare(metadata %struct.GPUBufferMaterial** %mat, metadata !1859, metadata !DIExpression()), !dbg !1860
  call void @llvm.dbg.declare(metadata i32* %i, metadata !1861, metadata !DIExpression()), !dbg !1862
  call void @llvm.dbg.declare(metadata i32** %mat_orig_to_new, metadata !1863, metadata !DIExpression()), !dbg !1864
  %0 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !1865
  %1 = load i32, i32* %totmat.addr, align 4, !dbg !1866
  %conv = sext i32 %1 to i64, !dbg !1866
  %mul = mul i64 4, %conv, !dbg !1867
  %call = call i8* %0(i64 %mul, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.10, i64 0, i64 0)), !dbg !1865
  %2 = bitcast i8* %call to i32*, !dbg !1865
  store i32* %2, i32** %mat_orig_to_new, align 8, !dbg !1868
  %3 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !1869
  %4 = load %struct.GPUDrawObject*, %struct.GPUDrawObject** %gdo.addr, align 8, !dbg !1870
  %totvert = getelementptr inbounds %struct.GPUDrawObject, %struct.GPUDrawObject* %4, i32 0, i32 13, !dbg !1871
  %5 = load i32, i32* %totvert, align 4, !dbg !1871
  %conv1 = sext i32 %5 to i64, !dbg !1870
  %mul2 = mul i64 4, %conv1, !dbg !1872
  %call3 = call i8* %3(i64 %mul2, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.11, i64 0, i64 0)), !dbg !1869
  %6 = bitcast i8* %call3 to %struct.GPUVertPointLink*, !dbg !1869
  %7 = load %struct.GPUDrawObject*, %struct.GPUDrawObject** %gdo.addr, align 8, !dbg !1873
  %vert_points = getelementptr inbounds %struct.GPUDrawObject, %struct.GPUDrawObject* %7, i32 0, i32 7, !dbg !1874
  store %struct.GPUVertPointLink* %6, %struct.GPUVertPointLink** %vert_points, align 8, !dbg !1875
  store i32 0, i32* %i, align 4, !dbg !1876
  br label %for.cond, !dbg !1878

for.cond:                                         ; preds = %for.inc, %entry
  %8 = load i32, i32* %i, align 4, !dbg !1879
  %9 = load %struct.GPUDrawObject*, %struct.GPUDrawObject** %gdo.addr, align 8, !dbg !1881
  %totmaterial = getelementptr inbounds %struct.GPUDrawObject, %struct.GPUDrawObject* %9, i32 0, i32 10, !dbg !1882
  %10 = load i32, i32* %totmaterial, align 8, !dbg !1882
  %cmp = icmp slt i32 %8, %10, !dbg !1883
  br i1 %cmp, label %for.body, label %for.end, !dbg !1884

for.body:                                         ; preds = %for.cond
  %11 = load i32, i32* %i, align 4, !dbg !1885
  %12 = load i32*, i32** %mat_orig_to_new, align 8, !dbg !1886
  %13 = load %struct.GPUDrawObject*, %struct.GPUDrawObject** %gdo.addr, align 8, !dbg !1887
  %materials = getelementptr inbounds %struct.GPUDrawObject, %struct.GPUDrawObject* %13, i32 0, i32 9, !dbg !1888
  %14 = load %struct.GPUBufferMaterial*, %struct.GPUBufferMaterial** %materials, align 8, !dbg !1888
  %15 = load i32, i32* %i, align 4, !dbg !1889
  %idxprom = sext i32 %15 to i64, !dbg !1887
  %arrayidx = getelementptr inbounds %struct.GPUBufferMaterial, %struct.GPUBufferMaterial* %14, i64 %idxprom, !dbg !1887
  %mat_nr = getelementptr inbounds %struct.GPUBufferMaterial, %struct.GPUBufferMaterial* %arrayidx, i32 0, i32 2, !dbg !1890
  %16 = load i16, i16* %mat_nr, align 4, !dbg !1890
  %idxprom5 = sext i16 %16 to i64, !dbg !1886
  %arrayidx6 = getelementptr inbounds i32, i32* %12, i64 %idxprom5, !dbg !1886
  store i32 %11, i32* %arrayidx6, align 4, !dbg !1891
  br label %for.inc, !dbg !1886

for.inc:                                          ; preds = %for.body
  %17 = load i32, i32* %i, align 4, !dbg !1892
  %inc = add nsw i32 %17, 1, !dbg !1892
  store i32 %inc, i32* %i, align 4, !dbg !1892
  br label %for.cond, !dbg !1893, !llvm.loop !1894

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !1896
  br label %for.cond7, !dbg !1898

for.cond7:                                        ; preds = %for.inc15, %for.end
  %18 = load i32, i32* %i, align 4, !dbg !1899
  %19 = load %struct.GPUDrawObject*, %struct.GPUDrawObject** %gdo.addr, align 8, !dbg !1901
  %totvert8 = getelementptr inbounds %struct.GPUDrawObject, %struct.GPUDrawObject* %19, i32 0, i32 13, !dbg !1902
  %20 = load i32, i32* %totvert8, align 4, !dbg !1902
  %cmp9 = icmp slt i32 %18, %20, !dbg !1903
  br i1 %cmp9, label %for.body11, label %for.end17, !dbg !1904

for.body11:                                       ; preds = %for.cond7
  %21 = load %struct.GPUDrawObject*, %struct.GPUDrawObject** %gdo.addr, align 8, !dbg !1905
  %vert_points12 = getelementptr inbounds %struct.GPUDrawObject, %struct.GPUDrawObject* %21, i32 0, i32 7, !dbg !1907
  %22 = load %struct.GPUVertPointLink*, %struct.GPUVertPointLink** %vert_points12, align 8, !dbg !1907
  %23 = load i32, i32* %i, align 4, !dbg !1908
  %idxprom13 = sext i32 %23 to i64, !dbg !1905
  %arrayidx14 = getelementptr inbounds %struct.GPUVertPointLink, %struct.GPUVertPointLink* %22, i64 %idxprom13, !dbg !1905
  %point_index = getelementptr inbounds %struct.GPUVertPointLink, %struct.GPUVertPointLink* %arrayidx14, i32 0, i32 0, !dbg !1909
  store i32 -1, i32* %point_index, align 4, !dbg !1910
  br label %for.inc15, !dbg !1911

for.inc15:                                        ; preds = %for.body11
  %24 = load i32, i32* %i, align 4, !dbg !1912
  %inc16 = add nsw i32 %24, 1, !dbg !1912
  store i32 %inc16, i32* %i, align 4, !dbg !1912
  br label %for.cond7, !dbg !1913, !llvm.loop !1914

for.end17:                                        ; preds = %for.cond7
  store i32 0, i32* %i, align 4, !dbg !1916
  br label %for.cond18, !dbg !1918

for.cond18:                                       ; preds = %for.inc38, %for.end17
  %25 = load i32, i32* %i, align 4, !dbg !1919
  %26 = load i32, i32* %totface.addr, align 4, !dbg !1921
  %cmp19 = icmp slt i32 %25, %26, !dbg !1922
  br i1 %cmp19, label %for.body21, label %for.end40, !dbg !1923

for.body21:                                       ; preds = %for.cond18
  %27 = load %struct.GPUDrawObject*, %struct.GPUDrawObject** %gdo.addr, align 8, !dbg !1924
  %materials22 = getelementptr inbounds %struct.GPUDrawObject, %struct.GPUDrawObject* %27, i32 0, i32 9, !dbg !1926
  %28 = load %struct.GPUBufferMaterial*, %struct.GPUBufferMaterial** %materials22, align 8, !dbg !1926
  %29 = load i32*, i32** %mat_orig_to_new, align 8, !dbg !1927
  %30 = load %struct.MFace*, %struct.MFace** %f.addr, align 8, !dbg !1928
  %mat_nr23 = getelementptr inbounds %struct.MFace, %struct.MFace* %30, i32 0, i32 4, !dbg !1929
  %31 = load i16, i16* %mat_nr23, align 4, !dbg !1929
  %idxprom24 = sext i16 %31 to i64, !dbg !1927
  %arrayidx25 = getelementptr inbounds i32, i32* %29, i64 %idxprom24, !dbg !1927
  %32 = load i32, i32* %arrayidx25, align 4, !dbg !1927
  %idxprom26 = sext i32 %32 to i64, !dbg !1924
  %arrayidx27 = getelementptr inbounds %struct.GPUBufferMaterial, %struct.GPUBufferMaterial* %28, i64 %idxprom26, !dbg !1924
  store %struct.GPUBufferMaterial* %arrayidx27, %struct.GPUBufferMaterial** %mat, align 8, !dbg !1930
  %33 = load %struct.GPUDrawObject*, %struct.GPUDrawObject** %gdo.addr, align 8, !dbg !1931
  %34 = load %struct.GPUBufferMaterial*, %struct.GPUBufferMaterial** %mat, align 8, !dbg !1932
  %start = getelementptr inbounds %struct.GPUBufferMaterial, %struct.GPUBufferMaterial* %34, i32 0, i32 0, !dbg !1933
  %35 = load i32, i32* %start, align 4, !dbg !1933
  %36 = load %struct.GPUBufferMaterial*, %struct.GPUBufferMaterial** %mat, align 8, !dbg !1934
  %totpoint = getelementptr inbounds %struct.GPUBufferMaterial, %struct.GPUBufferMaterial* %36, i32 0, i32 1, !dbg !1935
  %37 = load i32, i32* %totpoint, align 4, !dbg !1935
  %add = add nsw i32 %35, %37, !dbg !1936
  %38 = load i32, i32* %i, align 4, !dbg !1937
  %39 = load %struct.MFace*, %struct.MFace** %f.addr, align 8, !dbg !1938
  %v1 = getelementptr inbounds %struct.MFace, %struct.MFace* %39, i32 0, i32 0, !dbg !1939
  %40 = load i32, i32* %v1, align 4, !dbg !1939
  %41 = load %struct.MFace*, %struct.MFace** %f.addr, align 8, !dbg !1940
  %v2 = getelementptr inbounds %struct.MFace, %struct.MFace* %41, i32 0, i32 1, !dbg !1941
  %42 = load i32, i32* %v2, align 4, !dbg !1941
  %43 = load %struct.MFace*, %struct.MFace** %f.addr, align 8, !dbg !1942
  %v3 = getelementptr inbounds %struct.MFace, %struct.MFace* %43, i32 0, i32 2, !dbg !1943
  %44 = load i32, i32* %v3, align 4, !dbg !1943
  call void @gpu_drawobject_add_triangle(%struct.GPUDrawObject* %33, i32 %add, i32 %38, i32 %40, i32 %42, i32 %44), !dbg !1944
  %45 = load %struct.GPUBufferMaterial*, %struct.GPUBufferMaterial** %mat, align 8, !dbg !1945
  %totpoint28 = getelementptr inbounds %struct.GPUBufferMaterial, %struct.GPUBufferMaterial* %45, i32 0, i32 1, !dbg !1946
  %46 = load i32, i32* %totpoint28, align 4, !dbg !1947
  %add29 = add nsw i32 %46, 3, !dbg !1947
  store i32 %add29, i32* %totpoint28, align 4, !dbg !1947
  %47 = load %struct.MFace*, %struct.MFace** %f.addr, align 8, !dbg !1948
  %v4 = getelementptr inbounds %struct.MFace, %struct.MFace* %47, i32 0, i32 3, !dbg !1950
  %48 = load i32, i32* %v4, align 4, !dbg !1950
  %tobool = icmp ne i32 %48, 0, !dbg !1948
  br i1 %tobool, label %if.then, label %if.end, !dbg !1951

if.then:                                          ; preds = %for.body21
  %49 = load %struct.GPUDrawObject*, %struct.GPUDrawObject** %gdo.addr, align 8, !dbg !1952
  %50 = load %struct.GPUBufferMaterial*, %struct.GPUBufferMaterial** %mat, align 8, !dbg !1954
  %start30 = getelementptr inbounds %struct.GPUBufferMaterial, %struct.GPUBufferMaterial* %50, i32 0, i32 0, !dbg !1955
  %51 = load i32, i32* %start30, align 4, !dbg !1955
  %52 = load %struct.GPUBufferMaterial*, %struct.GPUBufferMaterial** %mat, align 8, !dbg !1956
  %totpoint31 = getelementptr inbounds %struct.GPUBufferMaterial, %struct.GPUBufferMaterial* %52, i32 0, i32 1, !dbg !1957
  %53 = load i32, i32* %totpoint31, align 4, !dbg !1957
  %add32 = add nsw i32 %51, %53, !dbg !1958
  %54 = load i32, i32* %i, align 4, !dbg !1959
  %55 = load %struct.MFace*, %struct.MFace** %f.addr, align 8, !dbg !1960
  %v333 = getelementptr inbounds %struct.MFace, %struct.MFace* %55, i32 0, i32 2, !dbg !1961
  %56 = load i32, i32* %v333, align 4, !dbg !1961
  %57 = load %struct.MFace*, %struct.MFace** %f.addr, align 8, !dbg !1962
  %v434 = getelementptr inbounds %struct.MFace, %struct.MFace* %57, i32 0, i32 3, !dbg !1963
  %58 = load i32, i32* %v434, align 4, !dbg !1963
  %59 = load %struct.MFace*, %struct.MFace** %f.addr, align 8, !dbg !1964
  %v135 = getelementptr inbounds %struct.MFace, %struct.MFace* %59, i32 0, i32 0, !dbg !1965
  %60 = load i32, i32* %v135, align 4, !dbg !1965
  call void @gpu_drawobject_add_triangle(%struct.GPUDrawObject* %49, i32 %add32, i32 %54, i32 %56, i32 %58, i32 %60), !dbg !1966
  %61 = load %struct.GPUBufferMaterial*, %struct.GPUBufferMaterial** %mat, align 8, !dbg !1967
  %totpoint36 = getelementptr inbounds %struct.GPUBufferMaterial, %struct.GPUBufferMaterial* %61, i32 0, i32 1, !dbg !1968
  %62 = load i32, i32* %totpoint36, align 4, !dbg !1969
  %add37 = add nsw i32 %62, 3, !dbg !1969
  store i32 %add37, i32* %totpoint36, align 4, !dbg !1969
  br label %if.end, !dbg !1970

if.end:                                           ; preds = %if.then, %for.body21
  br label %for.inc38, !dbg !1971

for.inc38:                                        ; preds = %if.end
  %63 = load i32, i32* %i, align 4, !dbg !1972
  %inc39 = add nsw i32 %63, 1, !dbg !1972
  store i32 %inc39, i32* %i, align 4, !dbg !1972
  %64 = load %struct.MFace*, %struct.MFace** %f.addr, align 8, !dbg !1973
  %incdec.ptr = getelementptr inbounds %struct.MFace, %struct.MFace* %64, i32 1, !dbg !1973
  store %struct.MFace* %incdec.ptr, %struct.MFace** %f.addr, align 8, !dbg !1973
  br label %for.cond18, !dbg !1974, !llvm.loop !1975

for.end40:                                        ; preds = %for.cond18
  store i32 0, i32* %i, align 4, !dbg !1977
  br label %for.cond41, !dbg !1979

for.cond41:                                       ; preds = %for.inc61, %for.end40
  %65 = load i32, i32* %i, align 4, !dbg !1980
  %66 = load %struct.GPUDrawObject*, %struct.GPUDrawObject** %gdo.addr, align 8, !dbg !1982
  %totvert42 = getelementptr inbounds %struct.GPUDrawObject, %struct.GPUDrawObject* %66, i32 0, i32 13, !dbg !1983
  %67 = load i32, i32* %totvert42, align 4, !dbg !1983
  %cmp43 = icmp slt i32 %65, %67, !dbg !1984
  br i1 %cmp43, label %for.body45, label %for.end63, !dbg !1985

for.body45:                                       ; preds = %for.cond41
  %68 = load %struct.GPUDrawObject*, %struct.GPUDrawObject** %gdo.addr, align 8, !dbg !1986
  %vert_points46 = getelementptr inbounds %struct.GPUDrawObject, %struct.GPUDrawObject* %68, i32 0, i32 7, !dbg !1989
  %69 = load %struct.GPUVertPointLink*, %struct.GPUVertPointLink** %vert_points46, align 8, !dbg !1989
  %70 = load i32, i32* %i, align 4, !dbg !1990
  %idxprom47 = sext i32 %70 to i64, !dbg !1986
  %arrayidx48 = getelementptr inbounds %struct.GPUVertPointLink, %struct.GPUVertPointLink* %69, i64 %idxprom47, !dbg !1986
  %point_index49 = getelementptr inbounds %struct.GPUVertPointLink, %struct.GPUVertPointLink* %arrayidx48, i32 0, i32 0, !dbg !1991
  %71 = load i32, i32* %point_index49, align 4, !dbg !1991
  %cmp50 = icmp eq i32 %71, -1, !dbg !1992
  br i1 %cmp50, label %if.then52, label %if.end60, !dbg !1993

if.then52:                                        ; preds = %for.body45
  %72 = load %struct.GPUDrawObject*, %struct.GPUDrawObject** %gdo.addr, align 8, !dbg !1994
  %tot_triangle_point = getelementptr inbounds %struct.GPUDrawObject, %struct.GPUDrawObject* %72, i32 0, i32 11, !dbg !1996
  %73 = load i32, i32* %tot_triangle_point, align 4, !dbg !1996
  %74 = load %struct.GPUDrawObject*, %struct.GPUDrawObject** %gdo.addr, align 8, !dbg !1997
  %tot_loose_point = getelementptr inbounds %struct.GPUDrawObject, %struct.GPUDrawObject* %74, i32 0, i32 12, !dbg !1998
  %75 = load i32, i32* %tot_loose_point, align 8, !dbg !1998
  %add53 = add nsw i32 %73, %75, !dbg !1999
  %76 = load %struct.GPUDrawObject*, %struct.GPUDrawObject** %gdo.addr, align 8, !dbg !2000
  %vert_points54 = getelementptr inbounds %struct.GPUDrawObject, %struct.GPUDrawObject* %76, i32 0, i32 7, !dbg !2001
  %77 = load %struct.GPUVertPointLink*, %struct.GPUVertPointLink** %vert_points54, align 8, !dbg !2001
  %78 = load i32, i32* %i, align 4, !dbg !2002
  %idxprom55 = sext i32 %78 to i64, !dbg !2000
  %arrayidx56 = getelementptr inbounds %struct.GPUVertPointLink, %struct.GPUVertPointLink* %77, i64 %idxprom55, !dbg !2000
  %point_index57 = getelementptr inbounds %struct.GPUVertPointLink, %struct.GPUVertPointLink* %arrayidx56, i32 0, i32 0, !dbg !2003
  store i32 %add53, i32* %point_index57, align 4, !dbg !2004
  %79 = load %struct.GPUDrawObject*, %struct.GPUDrawObject** %gdo.addr, align 8, !dbg !2005
  %tot_loose_point58 = getelementptr inbounds %struct.GPUDrawObject, %struct.GPUDrawObject* %79, i32 0, i32 12, !dbg !2006
  %80 = load i32, i32* %tot_loose_point58, align 8, !dbg !2007
  %inc59 = add nsw i32 %80, 1, !dbg !2007
  store i32 %inc59, i32* %tot_loose_point58, align 8, !dbg !2007
  br label %if.end60, !dbg !2008

if.end60:                                         ; preds = %if.then52, %for.body45
  br label %for.inc61, !dbg !2009

for.inc61:                                        ; preds = %if.end60
  %81 = load i32, i32* %i, align 4, !dbg !2010
  %inc62 = add nsw i32 %81, 1, !dbg !2010
  store i32 %inc62, i32* %i, align 4, !dbg !2010
  br label %for.cond41, !dbg !2011, !llvm.loop !2012

for.end63:                                        ; preds = %for.cond41
  %82 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !2014
  %83 = load i32*, i32** %mat_orig_to_new, align 8, !dbg !2015
  %84 = bitcast i32* %83 to i8*, !dbg !2015
  call void %82(i8* %84), !dbg !2014
  ret void, !dbg !2016
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @GPU_drawobject_free(%struct.DerivedMesh* %dm) #0 !dbg !2017 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %gdo = alloca %struct.GPUDrawObject*, align 8
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !2018, metadata !DIExpression()), !dbg !2019
  call void @llvm.dbg.declare(metadata %struct.GPUDrawObject** %gdo, metadata !2020, metadata !DIExpression()), !dbg !2021
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !2022
  %tobool = icmp ne %struct.DerivedMesh* %0, null, !dbg !2022
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !2024

lor.lhs.false:                                    ; preds = %entry
  %1 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !2025
  %drawObject = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %1, i32 0, i32 13, !dbg !2026
  %2 = load %struct.GPUDrawObject*, %struct.GPUDrawObject** %drawObject, align 8, !dbg !2026
  store %struct.GPUDrawObject* %2, %struct.GPUDrawObject** %gdo, align 8, !dbg !2027
  %tobool1 = icmp ne %struct.GPUDrawObject* %2, null, !dbg !2027
  br i1 %tobool1, label %if.end, label %if.then, !dbg !2028

if.then:                                          ; preds = %lor.lhs.false, %entry
  br label %return, !dbg !2029

if.end:                                           ; preds = %lor.lhs.false
  %3 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !2030
  %4 = load %struct.GPUDrawObject*, %struct.GPUDrawObject** %gdo, align 8, !dbg !2031
  %materials = getelementptr inbounds %struct.GPUDrawObject, %struct.GPUDrawObject* %4, i32 0, i32 9, !dbg !2032
  %5 = load %struct.GPUBufferMaterial*, %struct.GPUBufferMaterial** %materials, align 8, !dbg !2032
  %6 = bitcast %struct.GPUBufferMaterial* %5 to i8*, !dbg !2031
  call void %3(i8* %6), !dbg !2030
  %7 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !2033
  %8 = load %struct.GPUDrawObject*, %struct.GPUDrawObject** %gdo, align 8, !dbg !2034
  %triangle_to_mface = getelementptr inbounds %struct.GPUDrawObject, %struct.GPUDrawObject* %8, i32 0, i32 6, !dbg !2035
  %9 = load i32*, i32** %triangle_to_mface, align 8, !dbg !2035
  %10 = bitcast i32* %9 to i8*, !dbg !2034
  call void %7(i8* %10), !dbg !2033
  %11 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !2036
  %12 = load %struct.GPUDrawObject*, %struct.GPUDrawObject** %gdo, align 8, !dbg !2037
  %vert_points = getelementptr inbounds %struct.GPUDrawObject, %struct.GPUDrawObject* %12, i32 0, i32 7, !dbg !2038
  %13 = load %struct.GPUVertPointLink*, %struct.GPUVertPointLink** %vert_points, align 8, !dbg !2038
  %14 = bitcast %struct.GPUVertPointLink* %13 to i8*, !dbg !2037
  call void %11(i8* %14), !dbg !2036
  %15 = load %struct.GPUDrawObject*, %struct.GPUDrawObject** %gdo, align 8, !dbg !2039
  %points = getelementptr inbounds %struct.GPUDrawObject, %struct.GPUDrawObject* %15, i32 0, i32 0, !dbg !2040
  %16 = load %struct.GPUBuffer*, %struct.GPUBuffer** %points, align 8, !dbg !2040
  call void @GPU_buffer_free(%struct.GPUBuffer* %16), !dbg !2041
  %17 = load %struct.GPUDrawObject*, %struct.GPUDrawObject** %gdo, align 8, !dbg !2042
  %normals = getelementptr inbounds %struct.GPUDrawObject, %struct.GPUDrawObject* %17, i32 0, i32 1, !dbg !2043
  %18 = load %struct.GPUBuffer*, %struct.GPUBuffer** %normals, align 8, !dbg !2043
  call void @GPU_buffer_free(%struct.GPUBuffer* %18), !dbg !2044
  %19 = load %struct.GPUDrawObject*, %struct.GPUDrawObject** %gdo, align 8, !dbg !2045
  %uv = getelementptr inbounds %struct.GPUDrawObject, %struct.GPUDrawObject* %19, i32 0, i32 2, !dbg !2046
  %20 = load %struct.GPUBuffer*, %struct.GPUBuffer** %uv, align 8, !dbg !2046
  call void @GPU_buffer_free(%struct.GPUBuffer* %20), !dbg !2047
  %21 = load %struct.GPUDrawObject*, %struct.GPUDrawObject** %gdo, align 8, !dbg !2048
  %colors = getelementptr inbounds %struct.GPUDrawObject, %struct.GPUDrawObject* %21, i32 0, i32 3, !dbg !2049
  %22 = load %struct.GPUBuffer*, %struct.GPUBuffer** %colors, align 8, !dbg !2049
  call void @GPU_buffer_free(%struct.GPUBuffer* %22), !dbg !2050
  %23 = load %struct.GPUDrawObject*, %struct.GPUDrawObject** %gdo, align 8, !dbg !2051
  %edges = getelementptr inbounds %struct.GPUDrawObject, %struct.GPUDrawObject* %23, i32 0, i32 4, !dbg !2052
  %24 = load %struct.GPUBuffer*, %struct.GPUBuffer** %edges, align 8, !dbg !2052
  call void @GPU_buffer_free(%struct.GPUBuffer* %24), !dbg !2053
  %25 = load %struct.GPUDrawObject*, %struct.GPUDrawObject** %gdo, align 8, !dbg !2054
  %uvedges = getelementptr inbounds %struct.GPUDrawObject, %struct.GPUDrawObject* %25, i32 0, i32 5, !dbg !2055
  %26 = load %struct.GPUBuffer*, %struct.GPUBuffer** %uvedges, align 8, !dbg !2055
  call void @GPU_buffer_free(%struct.GPUBuffer* %26), !dbg !2056
  %27 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !2057
  %28 = load %struct.GPUDrawObject*, %struct.GPUDrawObject** %gdo, align 8, !dbg !2058
  %29 = bitcast %struct.GPUDrawObject* %28 to i8*, !dbg !2058
  call void %27(i8* %29), !dbg !2057
  %30 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !2059
  %drawObject2 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %30, i32 0, i32 13, !dbg !2060
  store %struct.GPUDrawObject* null, %struct.GPUDrawObject** %drawObject2, align 8, !dbg !2061
  br label %return, !dbg !2062

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !2062
}

; Function Attrs: noinline nounwind uwtable
define internal void @GPU_buffer_copy_vertex(%struct.DerivedMesh* %dm, float* %varray, i32* %index, i32* %mat_orig_to_new, i8* %UNUSED_user) #0 !dbg !2063 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %varray.addr = alloca float*, align 8
  %index.addr = alloca i32*, align 8
  %mat_orig_to_new.addr = alloca i32*, align 8
  %UNUSED_user.addr = alloca i8*, align 8
  %mvert = alloca %struct.MVert*, align 8
  %f = alloca %struct.MFace*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %start = alloca i32, align 4
  %totface = alloca i32, align 4
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !2064, metadata !DIExpression()), !dbg !2065
  store float* %varray, float** %varray.addr, align 8
  call void @llvm.dbg.declare(metadata float** %varray.addr, metadata !2066, metadata !DIExpression()), !dbg !2067
  store i32* %index, i32** %index.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %index.addr, metadata !2068, metadata !DIExpression()), !dbg !2069
  store i32* %mat_orig_to_new, i32** %mat_orig_to_new.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %mat_orig_to_new.addr, metadata !2070, metadata !DIExpression()), !dbg !2071
  store i8* %UNUSED_user, i8** %UNUSED_user.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %UNUSED_user.addr, metadata !2072, metadata !DIExpression()), !dbg !2073
  call void @llvm.dbg.declare(metadata %struct.MVert** %mvert, metadata !2074, metadata !DIExpression()), !dbg !2077
  call void @llvm.dbg.declare(metadata %struct.MFace** %f, metadata !2078, metadata !DIExpression()), !dbg !2079
  call void @llvm.dbg.declare(metadata i32* %i, metadata !2080, metadata !DIExpression()), !dbg !2081
  call void @llvm.dbg.declare(metadata i32* %j, metadata !2082, metadata !DIExpression()), !dbg !2083
  call void @llvm.dbg.declare(metadata i32* %start, metadata !2084, metadata !DIExpression()), !dbg !2085
  call void @llvm.dbg.declare(metadata i32* %totface, metadata !2086, metadata !DIExpression()), !dbg !2087
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !2088
  %getVertArray = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %0, i32 0, i32 31, !dbg !2089
  %1 = load %struct.MVert* (%struct.DerivedMesh*)*, %struct.MVert* (%struct.DerivedMesh*)** %getVertArray, align 8, !dbg !2089
  %2 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !2090
  %call = call %struct.MVert* %1(%struct.DerivedMesh* %2), !dbg !2088
  store %struct.MVert* %call, %struct.MVert** %mvert, align 8, !dbg !2091
  %3 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !2092
  %getTessFaceArray = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %3, i32 0, i32 33, !dbg !2093
  %4 = load %struct.MFace* (%struct.DerivedMesh*)*, %struct.MFace* (%struct.DerivedMesh*)** %getTessFaceArray, align 8, !dbg !2093
  %5 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !2094
  %call1 = call %struct.MFace* %4(%struct.DerivedMesh* %5), !dbg !2092
  store %struct.MFace* %call1, %struct.MFace** %f, align 8, !dbg !2095
  %6 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !2096
  %getNumTessFaces = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %6, i32 0, i32 25, !dbg !2097
  %7 = load i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)** %getNumTessFaces, align 8, !dbg !2097
  %8 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !2098
  %call2 = call i32 %7(%struct.DerivedMesh* %8), !dbg !2096
  store i32 %call2, i32* %totface, align 4, !dbg !2099
  store i32 0, i32* %i, align 4, !dbg !2100
  br label %for.cond, !dbg !2102

for.cond:                                         ; preds = %for.inc, %entry
  %9 = load i32, i32* %i, align 4, !dbg !2103
  %10 = load i32, i32* %totface, align 4, !dbg !2105
  %cmp = icmp slt i32 %9, %10, !dbg !2106
  br i1 %cmp, label %for.body, label %for.end, !dbg !2107

for.body:                                         ; preds = %for.cond
  %11 = load i32*, i32** %index.addr, align 8, !dbg !2108
  %12 = load i32*, i32** %mat_orig_to_new.addr, align 8, !dbg !2110
  %13 = load %struct.MFace*, %struct.MFace** %f, align 8, !dbg !2111
  %mat_nr = getelementptr inbounds %struct.MFace, %struct.MFace* %13, i32 0, i32 4, !dbg !2112
  %14 = load i16, i16* %mat_nr, align 4, !dbg !2112
  %idxprom = sext i16 %14 to i64, !dbg !2110
  %arrayidx = getelementptr inbounds i32, i32* %12, i64 %idxprom, !dbg !2110
  %15 = load i32, i32* %arrayidx, align 4, !dbg !2110
  %idxprom3 = sext i32 %15 to i64, !dbg !2108
  %arrayidx4 = getelementptr inbounds i32, i32* %11, i64 %idxprom3, !dbg !2108
  %16 = load i32, i32* %arrayidx4, align 4, !dbg !2108
  store i32 %16, i32* %start, align 4, !dbg !2113
  %17 = load float*, float** %varray.addr, align 8, !dbg !2114
  %18 = load i32, i32* %start, align 4, !dbg !2115
  %idxprom5 = sext i32 %18 to i64, !dbg !2114
  %arrayidx6 = getelementptr inbounds float, float* %17, i64 %idxprom5, !dbg !2114
  %19 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !2116
  %20 = load %struct.MFace*, %struct.MFace** %f, align 8, !dbg !2117
  %v1 = getelementptr inbounds %struct.MFace, %struct.MFace* %20, i32 0, i32 0, !dbg !2118
  %21 = load i32, i32* %v1, align 4, !dbg !2118
  %idxprom7 = zext i32 %21 to i64, !dbg !2116
  %arrayidx8 = getelementptr inbounds %struct.MVert, %struct.MVert* %19, i64 %idxprom7, !dbg !2116
  %co = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx8, i32 0, i32 0, !dbg !2119
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !2116
  call void @copy_v3_v3(float* %arrayidx6, float* %arraydecay), !dbg !2120
  %22 = load float*, float** %varray.addr, align 8, !dbg !2121
  %23 = load i32, i32* %start, align 4, !dbg !2122
  %add = add nsw i32 %23, 3, !dbg !2123
  %idxprom9 = sext i32 %add to i64, !dbg !2121
  %arrayidx10 = getelementptr inbounds float, float* %22, i64 %idxprom9, !dbg !2121
  %24 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !2124
  %25 = load %struct.MFace*, %struct.MFace** %f, align 8, !dbg !2125
  %v2 = getelementptr inbounds %struct.MFace, %struct.MFace* %25, i32 0, i32 1, !dbg !2126
  %26 = load i32, i32* %v2, align 4, !dbg !2126
  %idxprom11 = zext i32 %26 to i64, !dbg !2124
  %arrayidx12 = getelementptr inbounds %struct.MVert, %struct.MVert* %24, i64 %idxprom11, !dbg !2124
  %co13 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx12, i32 0, i32 0, !dbg !2127
  %arraydecay14 = getelementptr inbounds [3 x float], [3 x float]* %co13, i64 0, i64 0, !dbg !2124
  call void @copy_v3_v3(float* %arrayidx10, float* %arraydecay14), !dbg !2128
  %27 = load float*, float** %varray.addr, align 8, !dbg !2129
  %28 = load i32, i32* %start, align 4, !dbg !2130
  %add15 = add nsw i32 %28, 6, !dbg !2131
  %idxprom16 = sext i32 %add15 to i64, !dbg !2129
  %arrayidx17 = getelementptr inbounds float, float* %27, i64 %idxprom16, !dbg !2129
  %29 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !2132
  %30 = load %struct.MFace*, %struct.MFace** %f, align 8, !dbg !2133
  %v3 = getelementptr inbounds %struct.MFace, %struct.MFace* %30, i32 0, i32 2, !dbg !2134
  %31 = load i32, i32* %v3, align 4, !dbg !2134
  %idxprom18 = zext i32 %31 to i64, !dbg !2132
  %arrayidx19 = getelementptr inbounds %struct.MVert, %struct.MVert* %29, i64 %idxprom18, !dbg !2132
  %co20 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx19, i32 0, i32 0, !dbg !2135
  %arraydecay21 = getelementptr inbounds [3 x float], [3 x float]* %co20, i64 0, i64 0, !dbg !2132
  call void @copy_v3_v3(float* %arrayidx17, float* %arraydecay21), !dbg !2136
  %32 = load i32*, i32** %index.addr, align 8, !dbg !2137
  %33 = load i32*, i32** %mat_orig_to_new.addr, align 8, !dbg !2138
  %34 = load %struct.MFace*, %struct.MFace** %f, align 8, !dbg !2139
  %mat_nr22 = getelementptr inbounds %struct.MFace, %struct.MFace* %34, i32 0, i32 4, !dbg !2140
  %35 = load i16, i16* %mat_nr22, align 4, !dbg !2140
  %idxprom23 = sext i16 %35 to i64, !dbg !2138
  %arrayidx24 = getelementptr inbounds i32, i32* %33, i64 %idxprom23, !dbg !2138
  %36 = load i32, i32* %arrayidx24, align 4, !dbg !2138
  %idxprom25 = sext i32 %36 to i64, !dbg !2137
  %arrayidx26 = getelementptr inbounds i32, i32* %32, i64 %idxprom25, !dbg !2137
  %37 = load i32, i32* %arrayidx26, align 4, !dbg !2141
  %add27 = add nsw i32 %37, 9, !dbg !2141
  store i32 %add27, i32* %arrayidx26, align 4, !dbg !2141
  %38 = load %struct.MFace*, %struct.MFace** %f, align 8, !dbg !2142
  %v4 = getelementptr inbounds %struct.MFace, %struct.MFace* %38, i32 0, i32 3, !dbg !2144
  %39 = load i32, i32* %v4, align 4, !dbg !2144
  %tobool = icmp ne i32 %39, 0, !dbg !2142
  br i1 %tobool, label %if.then, label %if.end, !dbg !2145

if.then:                                          ; preds = %for.body
  %40 = load float*, float** %varray.addr, align 8, !dbg !2146
  %41 = load i32, i32* %start, align 4, !dbg !2148
  %add28 = add nsw i32 %41, 9, !dbg !2149
  %idxprom29 = sext i32 %add28 to i64, !dbg !2146
  %arrayidx30 = getelementptr inbounds float, float* %40, i64 %idxprom29, !dbg !2146
  %42 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !2150
  %43 = load %struct.MFace*, %struct.MFace** %f, align 8, !dbg !2151
  %v331 = getelementptr inbounds %struct.MFace, %struct.MFace* %43, i32 0, i32 2, !dbg !2152
  %44 = load i32, i32* %v331, align 4, !dbg !2152
  %idxprom32 = zext i32 %44 to i64, !dbg !2150
  %arrayidx33 = getelementptr inbounds %struct.MVert, %struct.MVert* %42, i64 %idxprom32, !dbg !2150
  %co34 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx33, i32 0, i32 0, !dbg !2153
  %arraydecay35 = getelementptr inbounds [3 x float], [3 x float]* %co34, i64 0, i64 0, !dbg !2150
  call void @copy_v3_v3(float* %arrayidx30, float* %arraydecay35), !dbg !2154
  %45 = load float*, float** %varray.addr, align 8, !dbg !2155
  %46 = load i32, i32* %start, align 4, !dbg !2156
  %add36 = add nsw i32 %46, 12, !dbg !2157
  %idxprom37 = sext i32 %add36 to i64, !dbg !2155
  %arrayidx38 = getelementptr inbounds float, float* %45, i64 %idxprom37, !dbg !2155
  %47 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !2158
  %48 = load %struct.MFace*, %struct.MFace** %f, align 8, !dbg !2159
  %v439 = getelementptr inbounds %struct.MFace, %struct.MFace* %48, i32 0, i32 3, !dbg !2160
  %49 = load i32, i32* %v439, align 4, !dbg !2160
  %idxprom40 = zext i32 %49 to i64, !dbg !2158
  %arrayidx41 = getelementptr inbounds %struct.MVert, %struct.MVert* %47, i64 %idxprom40, !dbg !2158
  %co42 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx41, i32 0, i32 0, !dbg !2161
  %arraydecay43 = getelementptr inbounds [3 x float], [3 x float]* %co42, i64 0, i64 0, !dbg !2158
  call void @copy_v3_v3(float* %arrayidx38, float* %arraydecay43), !dbg !2162
  %50 = load float*, float** %varray.addr, align 8, !dbg !2163
  %51 = load i32, i32* %start, align 4, !dbg !2164
  %add44 = add nsw i32 %51, 15, !dbg !2165
  %idxprom45 = sext i32 %add44 to i64, !dbg !2163
  %arrayidx46 = getelementptr inbounds float, float* %50, i64 %idxprom45, !dbg !2163
  %52 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !2166
  %53 = load %struct.MFace*, %struct.MFace** %f, align 8, !dbg !2167
  %v147 = getelementptr inbounds %struct.MFace, %struct.MFace* %53, i32 0, i32 0, !dbg !2168
  %54 = load i32, i32* %v147, align 4, !dbg !2168
  %idxprom48 = zext i32 %54 to i64, !dbg !2166
  %arrayidx49 = getelementptr inbounds %struct.MVert, %struct.MVert* %52, i64 %idxprom48, !dbg !2166
  %co50 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx49, i32 0, i32 0, !dbg !2169
  %arraydecay51 = getelementptr inbounds [3 x float], [3 x float]* %co50, i64 0, i64 0, !dbg !2166
  call void @copy_v3_v3(float* %arrayidx46, float* %arraydecay51), !dbg !2170
  %55 = load i32*, i32** %index.addr, align 8, !dbg !2171
  %56 = load i32*, i32** %mat_orig_to_new.addr, align 8, !dbg !2172
  %57 = load %struct.MFace*, %struct.MFace** %f, align 8, !dbg !2173
  %mat_nr52 = getelementptr inbounds %struct.MFace, %struct.MFace* %57, i32 0, i32 4, !dbg !2174
  %58 = load i16, i16* %mat_nr52, align 4, !dbg !2174
  %idxprom53 = sext i16 %58 to i64, !dbg !2172
  %arrayidx54 = getelementptr inbounds i32, i32* %56, i64 %idxprom53, !dbg !2172
  %59 = load i32, i32* %arrayidx54, align 4, !dbg !2172
  %idxprom55 = sext i32 %59 to i64, !dbg !2171
  %arrayidx56 = getelementptr inbounds i32, i32* %55, i64 %idxprom55, !dbg !2171
  %60 = load i32, i32* %arrayidx56, align 4, !dbg !2175
  %add57 = add nsw i32 %60, 9, !dbg !2175
  store i32 %add57, i32* %arrayidx56, align 4, !dbg !2175
  br label %if.end, !dbg !2176

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc, !dbg !2177

for.inc:                                          ; preds = %if.end
  %61 = load i32, i32* %i, align 4, !dbg !2178
  %inc = add nsw i32 %61, 1, !dbg !2178
  store i32 %inc, i32* %i, align 4, !dbg !2178
  %62 = load %struct.MFace*, %struct.MFace** %f, align 8, !dbg !2179
  %incdec.ptr = getelementptr inbounds %struct.MFace, %struct.MFace* %62, i32 1, !dbg !2179
  store %struct.MFace* %incdec.ptr, %struct.MFace** %f, align 8, !dbg !2179
  br label %for.cond, !dbg !2180, !llvm.loop !2181

for.end:                                          ; preds = %for.cond
  %63 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !2183
  %drawObject = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %63, i32 0, i32 13, !dbg !2184
  %64 = load %struct.GPUDrawObject*, %struct.GPUDrawObject** %drawObject, align 8, !dbg !2184
  %tot_triangle_point = getelementptr inbounds %struct.GPUDrawObject, %struct.GPUDrawObject* %64, i32 0, i32 11, !dbg !2185
  %65 = load i32, i32* %tot_triangle_point, align 4, !dbg !2185
  %mul = mul nsw i32 %65, 3, !dbg !2186
  store i32 %mul, i32* %j, align 4, !dbg !2187
  store i32 0, i32* %i, align 4, !dbg !2188
  br label %for.cond58, !dbg !2190

for.cond58:                                       ; preds = %for.inc77, %for.end
  %66 = load i32, i32* %i, align 4, !dbg !2191
  %67 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !2193
  %drawObject59 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %67, i32 0, i32 13, !dbg !2194
  %68 = load %struct.GPUDrawObject*, %struct.GPUDrawObject** %drawObject59, align 8, !dbg !2194
  %totvert = getelementptr inbounds %struct.GPUDrawObject, %struct.GPUDrawObject* %68, i32 0, i32 13, !dbg !2195
  %69 = load i32, i32* %totvert, align 4, !dbg !2195
  %cmp60 = icmp slt i32 %66, %69, !dbg !2196
  br i1 %cmp60, label %for.body61, label %for.end79, !dbg !2197

for.body61:                                       ; preds = %for.cond58
  %70 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !2198
  %drawObject62 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %70, i32 0, i32 13, !dbg !2201
  %71 = load %struct.GPUDrawObject*, %struct.GPUDrawObject** %drawObject62, align 8, !dbg !2201
  %vert_points = getelementptr inbounds %struct.GPUDrawObject, %struct.GPUDrawObject* %71, i32 0, i32 7, !dbg !2202
  %72 = load %struct.GPUVertPointLink*, %struct.GPUVertPointLink** %vert_points, align 8, !dbg !2202
  %73 = load i32, i32* %i, align 4, !dbg !2203
  %idxprom63 = sext i32 %73 to i64, !dbg !2198
  %arrayidx64 = getelementptr inbounds %struct.GPUVertPointLink, %struct.GPUVertPointLink* %72, i64 %idxprom63, !dbg !2198
  %point_index = getelementptr inbounds %struct.GPUVertPointLink, %struct.GPUVertPointLink* %arrayidx64, i32 0, i32 0, !dbg !2204
  %74 = load i32, i32* %point_index, align 4, !dbg !2204
  %75 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !2205
  %drawObject65 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %75, i32 0, i32 13, !dbg !2206
  %76 = load %struct.GPUDrawObject*, %struct.GPUDrawObject** %drawObject65, align 8, !dbg !2206
  %tot_triangle_point66 = getelementptr inbounds %struct.GPUDrawObject, %struct.GPUDrawObject* %76, i32 0, i32 11, !dbg !2207
  %77 = load i32, i32* %tot_triangle_point66, align 4, !dbg !2207
  %cmp67 = icmp sge i32 %74, %77, !dbg !2208
  br i1 %cmp67, label %if.then68, label %if.end76, !dbg !2209

if.then68:                                        ; preds = %for.body61
  %78 = load float*, float** %varray.addr, align 8, !dbg !2210
  %79 = load i32, i32* %j, align 4, !dbg !2212
  %idxprom69 = sext i32 %79 to i64, !dbg !2210
  %arrayidx70 = getelementptr inbounds float, float* %78, i64 %idxprom69, !dbg !2210
  %80 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !2213
  %81 = load i32, i32* %i, align 4, !dbg !2214
  %idxprom71 = sext i32 %81 to i64, !dbg !2213
  %arrayidx72 = getelementptr inbounds %struct.MVert, %struct.MVert* %80, i64 %idxprom71, !dbg !2213
  %co73 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx72, i32 0, i32 0, !dbg !2215
  %arraydecay74 = getelementptr inbounds [3 x float], [3 x float]* %co73, i64 0, i64 0, !dbg !2213
  call void @copy_v3_v3(float* %arrayidx70, float* %arraydecay74), !dbg !2216
  %82 = load i32, i32* %j, align 4, !dbg !2217
  %add75 = add nsw i32 %82, 3, !dbg !2217
  store i32 %add75, i32* %j, align 4, !dbg !2217
  br label %if.end76, !dbg !2218

if.end76:                                         ; preds = %if.then68, %for.body61
  br label %for.inc77, !dbg !2219

for.inc77:                                        ; preds = %if.end76
  %83 = load i32, i32* %i, align 4, !dbg !2220
  %inc78 = add nsw i32 %83, 1, !dbg !2220
  store i32 %inc78, i32* %i, align 4, !dbg !2220
  br label %for.cond58, !dbg !2221, !llvm.loop !2222

for.end79:                                        ; preds = %for.cond58
  ret void, !dbg !2224
}

; Function Attrs: noinline nounwind uwtable
define internal void @GPU_buffer_copy_normal(%struct.DerivedMesh* %dm, float* %varray, i32* %index, i32* %mat_orig_to_new, i8* %UNUSED_user) #0 !dbg !2225 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %varray.addr = alloca float*, align 8
  %index.addr = alloca i32*, align 8
  %mat_orig_to_new.addr = alloca i32*, align 8
  %UNUSED_user.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %totface = alloca i32, align 4
  %start = alloca i32, align 4
  %f_no = alloca [3 x float], align 4
  %nors = alloca float*, align 8
  %tlnors = alloca [4 x [3 x i16]]*, align 8
  %mvert = alloca %struct.MVert*, align 8
  %f = alloca %struct.MFace*, align 8
  %smoothnormal = alloca i32, align 4
  %tlnor = alloca [3 x i16]*, align 8
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !2226, metadata !DIExpression()), !dbg !2227
  store float* %varray, float** %varray.addr, align 8
  call void @llvm.dbg.declare(metadata float** %varray.addr, metadata !2228, metadata !DIExpression()), !dbg !2229
  store i32* %index, i32** %index.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %index.addr, metadata !2230, metadata !DIExpression()), !dbg !2231
  store i32* %mat_orig_to_new, i32** %mat_orig_to_new.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %mat_orig_to_new.addr, metadata !2232, metadata !DIExpression()), !dbg !2233
  store i8* %UNUSED_user, i8** %UNUSED_user.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %UNUSED_user.addr, metadata !2234, metadata !DIExpression()), !dbg !2235
  call void @llvm.dbg.declare(metadata i32* %i, metadata !2236, metadata !DIExpression()), !dbg !2237
  call void @llvm.dbg.declare(metadata i32* %totface, metadata !2238, metadata !DIExpression()), !dbg !2239
  call void @llvm.dbg.declare(metadata i32* %start, metadata !2240, metadata !DIExpression()), !dbg !2241
  call void @llvm.dbg.declare(metadata [3 x float]* %f_no, metadata !2242, metadata !DIExpression()), !dbg !2243
  call void @llvm.dbg.declare(metadata float** %nors, metadata !2244, metadata !DIExpression()), !dbg !2245
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !2246
  %getTessFaceDataArray = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %0, i32 0, i32 52, !dbg !2247
  %1 = load i8* (%struct.DerivedMesh*, i32)*, i8* (%struct.DerivedMesh*, i32)** %getTessFaceDataArray, align 8, !dbg !2247
  %2 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !2248
  %call = call i8* %1(%struct.DerivedMesh* %2, i32 8), !dbg !2246
  %3 = bitcast i8* %call to float*, !dbg !2246
  store float* %3, float** %nors, align 8, !dbg !2245
  call void @llvm.dbg.declare(metadata [4 x [3 x i16]]** %tlnors, metadata !2249, metadata !DIExpression()), !dbg !2253
  %4 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !2254
  %getTessFaceDataArray1 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %4, i32 0, i32 52, !dbg !2255
  %5 = load i8* (%struct.DerivedMesh*, i32)*, i8* (%struct.DerivedMesh*, i32)** %getTessFaceDataArray1, align 8, !dbg !2255
  %6 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !2256
  %call2 = call i8* %5(%struct.DerivedMesh* %6, i32 40), !dbg !2254
  %7 = bitcast i8* %call2 to [4 x [3 x i16]]*, !dbg !2254
  store [4 x [3 x i16]]* %7, [4 x [3 x i16]]** %tlnors, align 8, !dbg !2253
  call void @llvm.dbg.declare(metadata %struct.MVert** %mvert, metadata !2257, metadata !DIExpression()), !dbg !2258
  %8 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !2259
  %getVertArray = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %8, i32 0, i32 31, !dbg !2260
  %9 = load %struct.MVert* (%struct.DerivedMesh*)*, %struct.MVert* (%struct.DerivedMesh*)** %getVertArray, align 8, !dbg !2260
  %10 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !2261
  %call3 = call %struct.MVert* %9(%struct.DerivedMesh* %10), !dbg !2259
  store %struct.MVert* %call3, %struct.MVert** %mvert, align 8, !dbg !2258
  call void @llvm.dbg.declare(metadata %struct.MFace** %f, metadata !2262, metadata !DIExpression()), !dbg !2263
  %11 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !2264
  %getTessFaceArray = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %11, i32 0, i32 33, !dbg !2265
  %12 = load %struct.MFace* (%struct.DerivedMesh*)*, %struct.MFace* (%struct.DerivedMesh*)** %getTessFaceArray, align 8, !dbg !2265
  %13 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !2266
  %call4 = call %struct.MFace* %12(%struct.DerivedMesh* %13), !dbg !2264
  store %struct.MFace* %call4, %struct.MFace** %f, align 8, !dbg !2263
  %14 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !2267
  %getNumTessFaces = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %14, i32 0, i32 25, !dbg !2268
  %15 = load i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)** %getNumTessFaces, align 8, !dbg !2268
  %16 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !2269
  %call5 = call i32 %15(%struct.DerivedMesh* %16), !dbg !2267
  store i32 %call5, i32* %totface, align 4, !dbg !2270
  store i32 0, i32* %i, align 4, !dbg !2271
  br label %for.cond, !dbg !2273

for.cond:                                         ; preds = %for.inc, %entry
  %17 = load i32, i32* %i, align 4, !dbg !2274
  %18 = load i32, i32* %totface, align 4, !dbg !2276
  %cmp = icmp slt i32 %17, %18, !dbg !2277
  br i1 %cmp, label %for.body, label %for.end, !dbg !2278

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %smoothnormal, metadata !2279, metadata !DIExpression()), !dbg !2282
  %19 = load %struct.MFace*, %struct.MFace** %f, align 8, !dbg !2283
  %flag = getelementptr inbounds %struct.MFace, %struct.MFace* %19, i32 0, i32 6, !dbg !2284
  %20 = load i8, i8* %flag, align 1, !dbg !2284
  %conv = zext i8 %20 to i32, !dbg !2283
  %and = and i32 %conv, 1, !dbg !2285
  store i32 %and, i32* %smoothnormal, align 4, !dbg !2282
  %21 = load i32*, i32** %index.addr, align 8, !dbg !2286
  %22 = load i32*, i32** %mat_orig_to_new.addr, align 8, !dbg !2287
  %23 = load %struct.MFace*, %struct.MFace** %f, align 8, !dbg !2288
  %mat_nr = getelementptr inbounds %struct.MFace, %struct.MFace* %23, i32 0, i32 4, !dbg !2289
  %24 = load i16, i16* %mat_nr, align 4, !dbg !2289
  %idxprom = sext i16 %24 to i64, !dbg !2287
  %arrayidx = getelementptr inbounds i32, i32* %22, i64 %idxprom, !dbg !2287
  %25 = load i32, i32* %arrayidx, align 4, !dbg !2287
  %idxprom6 = sext i32 %25 to i64, !dbg !2286
  %arrayidx7 = getelementptr inbounds i32, i32* %21, i64 %idxprom6, !dbg !2286
  %26 = load i32, i32* %arrayidx7, align 4, !dbg !2286
  store i32 %26, i32* %start, align 4, !dbg !2290
  %27 = load %struct.MFace*, %struct.MFace** %f, align 8, !dbg !2291
  %v4 = getelementptr inbounds %struct.MFace, %struct.MFace* %27, i32 0, i32 3, !dbg !2292
  %28 = load i32, i32* %v4, align 4, !dbg !2292
  %tobool = icmp ne i32 %28, 0, !dbg !2291
  %29 = zext i1 %tobool to i64, !dbg !2291
  %cond = select i1 %tobool, i32 18, i32 9, !dbg !2291
  %30 = load i32*, i32** %index.addr, align 8, !dbg !2293
  %31 = load i32*, i32** %mat_orig_to_new.addr, align 8, !dbg !2294
  %32 = load %struct.MFace*, %struct.MFace** %f, align 8, !dbg !2295
  %mat_nr8 = getelementptr inbounds %struct.MFace, %struct.MFace* %32, i32 0, i32 4, !dbg !2296
  %33 = load i16, i16* %mat_nr8, align 4, !dbg !2296
  %idxprom9 = sext i16 %33 to i64, !dbg !2294
  %arrayidx10 = getelementptr inbounds i32, i32* %31, i64 %idxprom9, !dbg !2294
  %34 = load i32, i32* %arrayidx10, align 4, !dbg !2294
  %idxprom11 = sext i32 %34 to i64, !dbg !2293
  %arrayidx12 = getelementptr inbounds i32, i32* %30, i64 %idxprom11, !dbg !2293
  %35 = load i32, i32* %arrayidx12, align 4, !dbg !2297
  %add = add nsw i32 %35, %cond, !dbg !2297
  store i32 %add, i32* %arrayidx12, align 4, !dbg !2297
  %36 = load [4 x [3 x i16]]*, [4 x [3 x i16]]** %tlnors, align 8, !dbg !2298
  %tobool13 = icmp ne [4 x [3 x i16]]* %36, null, !dbg !2298
  br i1 %tobool13, label %if.then, label %if.else, !dbg !2300

if.then:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata [3 x i16]** %tlnor, metadata !2301, metadata !DIExpression()), !dbg !2304
  %37 = load [4 x [3 x i16]]*, [4 x [3 x i16]]** %tlnors, align 8, !dbg !2305
  %38 = load i32, i32* %i, align 4, !dbg !2306
  %idxprom14 = sext i32 %38 to i64, !dbg !2305
  %arrayidx15 = getelementptr inbounds [4 x [3 x i16]], [4 x [3 x i16]]* %37, i64 %idxprom14, !dbg !2305
  %arraydecay = getelementptr inbounds [4 x [3 x i16]], [4 x [3 x i16]]* %arrayidx15, i64 0, i64 0, !dbg !2305
  store [3 x i16]* %arraydecay, [3 x i16]** %tlnor, align 8, !dbg !2304
  %39 = load float*, float** %varray.addr, align 8, !dbg !2307
  %40 = load i32, i32* %start, align 4, !dbg !2308
  %idxprom16 = sext i32 %40 to i64, !dbg !2307
  %arrayidx17 = getelementptr inbounds float, float* %39, i64 %idxprom16, !dbg !2307
  %41 = load [3 x i16]*, [3 x i16]** %tlnor, align 8, !dbg !2309
  %arrayidx18 = getelementptr inbounds [3 x i16], [3 x i16]* %41, i64 0, !dbg !2309
  %arraydecay19 = getelementptr inbounds [3 x i16], [3 x i16]* %arrayidx18, i64 0, i64 0, !dbg !2309
  call void @normal_short_to_float_v3(float* %arrayidx17, i16* %arraydecay19), !dbg !2310
  %42 = load float*, float** %varray.addr, align 8, !dbg !2311
  %43 = load i32, i32* %start, align 4, !dbg !2312
  %add20 = add nsw i32 %43, 3, !dbg !2313
  %idxprom21 = sext i32 %add20 to i64, !dbg !2311
  %arrayidx22 = getelementptr inbounds float, float* %42, i64 %idxprom21, !dbg !2311
  %44 = load [3 x i16]*, [3 x i16]** %tlnor, align 8, !dbg !2314
  %arrayidx23 = getelementptr inbounds [3 x i16], [3 x i16]* %44, i64 1, !dbg !2314
  %arraydecay24 = getelementptr inbounds [3 x i16], [3 x i16]* %arrayidx23, i64 0, i64 0, !dbg !2314
  call void @normal_short_to_float_v3(float* %arrayidx22, i16* %arraydecay24), !dbg !2315
  %45 = load float*, float** %varray.addr, align 8, !dbg !2316
  %46 = load i32, i32* %start, align 4, !dbg !2317
  %add25 = add nsw i32 %46, 6, !dbg !2318
  %idxprom26 = sext i32 %add25 to i64, !dbg !2316
  %arrayidx27 = getelementptr inbounds float, float* %45, i64 %idxprom26, !dbg !2316
  %47 = load [3 x i16]*, [3 x i16]** %tlnor, align 8, !dbg !2319
  %arrayidx28 = getelementptr inbounds [3 x i16], [3 x i16]* %47, i64 2, !dbg !2319
  %arraydecay29 = getelementptr inbounds [3 x i16], [3 x i16]* %arrayidx28, i64 0, i64 0, !dbg !2319
  call void @normal_short_to_float_v3(float* %arrayidx27, i16* %arraydecay29), !dbg !2320
  %48 = load %struct.MFace*, %struct.MFace** %f, align 8, !dbg !2321
  %v430 = getelementptr inbounds %struct.MFace, %struct.MFace* %48, i32 0, i32 3, !dbg !2323
  %49 = load i32, i32* %v430, align 4, !dbg !2323
  %tobool31 = icmp ne i32 %49, 0, !dbg !2321
  br i1 %tobool31, label %if.then32, label %if.end, !dbg !2324

if.then32:                                        ; preds = %if.then
  %50 = load float*, float** %varray.addr, align 8, !dbg !2325
  %51 = load i32, i32* %start, align 4, !dbg !2327
  %add33 = add nsw i32 %51, 9, !dbg !2328
  %idxprom34 = sext i32 %add33 to i64, !dbg !2325
  %arrayidx35 = getelementptr inbounds float, float* %50, i64 %idxprom34, !dbg !2325
  %52 = load [3 x i16]*, [3 x i16]** %tlnor, align 8, !dbg !2329
  %arrayidx36 = getelementptr inbounds [3 x i16], [3 x i16]* %52, i64 2, !dbg !2329
  %arraydecay37 = getelementptr inbounds [3 x i16], [3 x i16]* %arrayidx36, i64 0, i64 0, !dbg !2329
  call void @normal_short_to_float_v3(float* %arrayidx35, i16* %arraydecay37), !dbg !2330
  %53 = load float*, float** %varray.addr, align 8, !dbg !2331
  %54 = load i32, i32* %start, align 4, !dbg !2332
  %add38 = add nsw i32 %54, 12, !dbg !2333
  %idxprom39 = sext i32 %add38 to i64, !dbg !2331
  %arrayidx40 = getelementptr inbounds float, float* %53, i64 %idxprom39, !dbg !2331
  %55 = load [3 x i16]*, [3 x i16]** %tlnor, align 8, !dbg !2334
  %arrayidx41 = getelementptr inbounds [3 x i16], [3 x i16]* %55, i64 3, !dbg !2334
  %arraydecay42 = getelementptr inbounds [3 x i16], [3 x i16]* %arrayidx41, i64 0, i64 0, !dbg !2334
  call void @normal_short_to_float_v3(float* %arrayidx40, i16* %arraydecay42), !dbg !2335
  %56 = load float*, float** %varray.addr, align 8, !dbg !2336
  %57 = load i32, i32* %start, align 4, !dbg !2337
  %add43 = add nsw i32 %57, 15, !dbg !2338
  %idxprom44 = sext i32 %add43 to i64, !dbg !2336
  %arrayidx45 = getelementptr inbounds float, float* %56, i64 %idxprom44, !dbg !2336
  %58 = load [3 x i16]*, [3 x i16]** %tlnor, align 8, !dbg !2339
  %arrayidx46 = getelementptr inbounds [3 x i16], [3 x i16]* %58, i64 0, !dbg !2339
  %arraydecay47 = getelementptr inbounds [3 x i16], [3 x i16]* %arrayidx46, i64 0, i64 0, !dbg !2339
  call void @normal_short_to_float_v3(float* %arrayidx45, i16* %arraydecay47), !dbg !2340
  br label %if.end, !dbg !2341

if.end:                                           ; preds = %if.then32, %if.then
  br label %if.end211, !dbg !2342

if.else:                                          ; preds = %for.body
  %59 = load i32, i32* %smoothnormal, align 4, !dbg !2343
  %tobool48 = icmp ne i32 %59, 0, !dbg !2343
  br i1 %tobool48, label %if.then49, label %if.else97, !dbg !2345

if.then49:                                        ; preds = %if.else
  %60 = load float*, float** %varray.addr, align 8, !dbg !2346
  %61 = load i32, i32* %start, align 4, !dbg !2348
  %idxprom50 = sext i32 %61 to i64, !dbg !2346
  %arrayidx51 = getelementptr inbounds float, float* %60, i64 %idxprom50, !dbg !2346
  %62 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !2349
  %63 = load %struct.MFace*, %struct.MFace** %f, align 8, !dbg !2350
  %v1 = getelementptr inbounds %struct.MFace, %struct.MFace* %63, i32 0, i32 0, !dbg !2351
  %64 = load i32, i32* %v1, align 4, !dbg !2351
  %idxprom52 = zext i32 %64 to i64, !dbg !2349
  %arrayidx53 = getelementptr inbounds %struct.MVert, %struct.MVert* %62, i64 %idxprom52, !dbg !2349
  %no = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx53, i32 0, i32 1, !dbg !2352
  %arraydecay54 = getelementptr inbounds [3 x i16], [3 x i16]* %no, i64 0, i64 0, !dbg !2349
  call void @normal_short_to_float_v3(float* %arrayidx51, i16* %arraydecay54), !dbg !2353
  %65 = load float*, float** %varray.addr, align 8, !dbg !2354
  %66 = load i32, i32* %start, align 4, !dbg !2355
  %add55 = add nsw i32 %66, 3, !dbg !2356
  %idxprom56 = sext i32 %add55 to i64, !dbg !2354
  %arrayidx57 = getelementptr inbounds float, float* %65, i64 %idxprom56, !dbg !2354
  %67 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !2357
  %68 = load %struct.MFace*, %struct.MFace** %f, align 8, !dbg !2358
  %v2 = getelementptr inbounds %struct.MFace, %struct.MFace* %68, i32 0, i32 1, !dbg !2359
  %69 = load i32, i32* %v2, align 4, !dbg !2359
  %idxprom58 = zext i32 %69 to i64, !dbg !2357
  %arrayidx59 = getelementptr inbounds %struct.MVert, %struct.MVert* %67, i64 %idxprom58, !dbg !2357
  %no60 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx59, i32 0, i32 1, !dbg !2360
  %arraydecay61 = getelementptr inbounds [3 x i16], [3 x i16]* %no60, i64 0, i64 0, !dbg !2357
  call void @normal_short_to_float_v3(float* %arrayidx57, i16* %arraydecay61), !dbg !2361
  %70 = load float*, float** %varray.addr, align 8, !dbg !2362
  %71 = load i32, i32* %start, align 4, !dbg !2363
  %add62 = add nsw i32 %71, 6, !dbg !2364
  %idxprom63 = sext i32 %add62 to i64, !dbg !2362
  %arrayidx64 = getelementptr inbounds float, float* %70, i64 %idxprom63, !dbg !2362
  %72 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !2365
  %73 = load %struct.MFace*, %struct.MFace** %f, align 8, !dbg !2366
  %v3 = getelementptr inbounds %struct.MFace, %struct.MFace* %73, i32 0, i32 2, !dbg !2367
  %74 = load i32, i32* %v3, align 4, !dbg !2367
  %idxprom65 = zext i32 %74 to i64, !dbg !2365
  %arrayidx66 = getelementptr inbounds %struct.MVert, %struct.MVert* %72, i64 %idxprom65, !dbg !2365
  %no67 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx66, i32 0, i32 1, !dbg !2368
  %arraydecay68 = getelementptr inbounds [3 x i16], [3 x i16]* %no67, i64 0, i64 0, !dbg !2365
  call void @normal_short_to_float_v3(float* %arrayidx64, i16* %arraydecay68), !dbg !2369
  %75 = load %struct.MFace*, %struct.MFace** %f, align 8, !dbg !2370
  %v469 = getelementptr inbounds %struct.MFace, %struct.MFace* %75, i32 0, i32 3, !dbg !2372
  %76 = load i32, i32* %v469, align 4, !dbg !2372
  %tobool70 = icmp ne i32 %76, 0, !dbg !2370
  br i1 %tobool70, label %if.then71, label %if.end96, !dbg !2373

if.then71:                                        ; preds = %if.then49
  %77 = load float*, float** %varray.addr, align 8, !dbg !2374
  %78 = load i32, i32* %start, align 4, !dbg !2376
  %add72 = add nsw i32 %78, 9, !dbg !2377
  %idxprom73 = sext i32 %add72 to i64, !dbg !2374
  %arrayidx74 = getelementptr inbounds float, float* %77, i64 %idxprom73, !dbg !2374
  %79 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !2378
  %80 = load %struct.MFace*, %struct.MFace** %f, align 8, !dbg !2379
  %v375 = getelementptr inbounds %struct.MFace, %struct.MFace* %80, i32 0, i32 2, !dbg !2380
  %81 = load i32, i32* %v375, align 4, !dbg !2380
  %idxprom76 = zext i32 %81 to i64, !dbg !2378
  %arrayidx77 = getelementptr inbounds %struct.MVert, %struct.MVert* %79, i64 %idxprom76, !dbg !2378
  %no78 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx77, i32 0, i32 1, !dbg !2381
  %arraydecay79 = getelementptr inbounds [3 x i16], [3 x i16]* %no78, i64 0, i64 0, !dbg !2378
  call void @normal_short_to_float_v3(float* %arrayidx74, i16* %arraydecay79), !dbg !2382
  %82 = load float*, float** %varray.addr, align 8, !dbg !2383
  %83 = load i32, i32* %start, align 4, !dbg !2384
  %add80 = add nsw i32 %83, 12, !dbg !2385
  %idxprom81 = sext i32 %add80 to i64, !dbg !2383
  %arrayidx82 = getelementptr inbounds float, float* %82, i64 %idxprom81, !dbg !2383
  %84 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !2386
  %85 = load %struct.MFace*, %struct.MFace** %f, align 8, !dbg !2387
  %v483 = getelementptr inbounds %struct.MFace, %struct.MFace* %85, i32 0, i32 3, !dbg !2388
  %86 = load i32, i32* %v483, align 4, !dbg !2388
  %idxprom84 = zext i32 %86 to i64, !dbg !2386
  %arrayidx85 = getelementptr inbounds %struct.MVert, %struct.MVert* %84, i64 %idxprom84, !dbg !2386
  %no86 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx85, i32 0, i32 1, !dbg !2389
  %arraydecay87 = getelementptr inbounds [3 x i16], [3 x i16]* %no86, i64 0, i64 0, !dbg !2386
  call void @normal_short_to_float_v3(float* %arrayidx82, i16* %arraydecay87), !dbg !2390
  %87 = load float*, float** %varray.addr, align 8, !dbg !2391
  %88 = load i32, i32* %start, align 4, !dbg !2392
  %add88 = add nsw i32 %88, 15, !dbg !2393
  %idxprom89 = sext i32 %add88 to i64, !dbg !2391
  %arrayidx90 = getelementptr inbounds float, float* %87, i64 %idxprom89, !dbg !2391
  %89 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !2394
  %90 = load %struct.MFace*, %struct.MFace** %f, align 8, !dbg !2395
  %v191 = getelementptr inbounds %struct.MFace, %struct.MFace* %90, i32 0, i32 0, !dbg !2396
  %91 = load i32, i32* %v191, align 4, !dbg !2396
  %idxprom92 = zext i32 %91 to i64, !dbg !2394
  %arrayidx93 = getelementptr inbounds %struct.MVert, %struct.MVert* %89, i64 %idxprom92, !dbg !2394
  %no94 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx93, i32 0, i32 1, !dbg !2397
  %arraydecay95 = getelementptr inbounds [3 x i16], [3 x i16]* %no94, i64 0, i64 0, !dbg !2394
  call void @normal_short_to_float_v3(float* %arrayidx90, i16* %arraydecay95), !dbg !2398
  br label %if.end96, !dbg !2399

if.end96:                                         ; preds = %if.then71, %if.then49
  br label %if.end210, !dbg !2400

if.else97:                                        ; preds = %if.else
  %92 = load float*, float** %nors, align 8, !dbg !2401
  %tobool98 = icmp ne float* %92, null, !dbg !2401
  br i1 %tobool98, label %if.then99, label %if.else138, !dbg !2403

if.then99:                                        ; preds = %if.else97
  %93 = load float*, float** %varray.addr, align 8, !dbg !2404
  %94 = load i32, i32* %start, align 4, !dbg !2406
  %idxprom100 = sext i32 %94 to i64, !dbg !2404
  %arrayidx101 = getelementptr inbounds float, float* %93, i64 %idxprom100, !dbg !2404
  %95 = load float*, float** %nors, align 8, !dbg !2407
  %96 = load i32, i32* %i, align 4, !dbg !2408
  %mul = mul nsw i32 %96, 3, !dbg !2409
  %idxprom102 = sext i32 %mul to i64, !dbg !2407
  %arrayidx103 = getelementptr inbounds float, float* %95, i64 %idxprom102, !dbg !2407
  call void @copy_v3_v3(float* %arrayidx101, float* %arrayidx103), !dbg !2410
  %97 = load float*, float** %varray.addr, align 8, !dbg !2411
  %98 = load i32, i32* %start, align 4, !dbg !2412
  %add104 = add nsw i32 %98, 3, !dbg !2413
  %idxprom105 = sext i32 %add104 to i64, !dbg !2411
  %arrayidx106 = getelementptr inbounds float, float* %97, i64 %idxprom105, !dbg !2411
  %99 = load float*, float** %nors, align 8, !dbg !2414
  %100 = load i32, i32* %i, align 4, !dbg !2415
  %mul107 = mul nsw i32 %100, 3, !dbg !2416
  %idxprom108 = sext i32 %mul107 to i64, !dbg !2414
  %arrayidx109 = getelementptr inbounds float, float* %99, i64 %idxprom108, !dbg !2414
  call void @copy_v3_v3(float* %arrayidx106, float* %arrayidx109), !dbg !2417
  %101 = load float*, float** %varray.addr, align 8, !dbg !2418
  %102 = load i32, i32* %start, align 4, !dbg !2419
  %add110 = add nsw i32 %102, 6, !dbg !2420
  %idxprom111 = sext i32 %add110 to i64, !dbg !2418
  %arrayidx112 = getelementptr inbounds float, float* %101, i64 %idxprom111, !dbg !2418
  %103 = load float*, float** %nors, align 8, !dbg !2421
  %104 = load i32, i32* %i, align 4, !dbg !2422
  %mul113 = mul nsw i32 %104, 3, !dbg !2423
  %idxprom114 = sext i32 %mul113 to i64, !dbg !2421
  %arrayidx115 = getelementptr inbounds float, float* %103, i64 %idxprom114, !dbg !2421
  call void @copy_v3_v3(float* %arrayidx112, float* %arrayidx115), !dbg !2424
  %105 = load %struct.MFace*, %struct.MFace** %f, align 8, !dbg !2425
  %v4116 = getelementptr inbounds %struct.MFace, %struct.MFace* %105, i32 0, i32 3, !dbg !2427
  %106 = load i32, i32* %v4116, align 4, !dbg !2427
  %tobool117 = icmp ne i32 %106, 0, !dbg !2425
  br i1 %tobool117, label %if.then118, label %if.end137, !dbg !2428

if.then118:                                       ; preds = %if.then99
  %107 = load float*, float** %varray.addr, align 8, !dbg !2429
  %108 = load i32, i32* %start, align 4, !dbg !2431
  %add119 = add nsw i32 %108, 9, !dbg !2432
  %idxprom120 = sext i32 %add119 to i64, !dbg !2429
  %arrayidx121 = getelementptr inbounds float, float* %107, i64 %idxprom120, !dbg !2429
  %109 = load float*, float** %nors, align 8, !dbg !2433
  %110 = load i32, i32* %i, align 4, !dbg !2434
  %mul122 = mul nsw i32 %110, 3, !dbg !2435
  %idxprom123 = sext i32 %mul122 to i64, !dbg !2433
  %arrayidx124 = getelementptr inbounds float, float* %109, i64 %idxprom123, !dbg !2433
  call void @copy_v3_v3(float* %arrayidx121, float* %arrayidx124), !dbg !2436
  %111 = load float*, float** %varray.addr, align 8, !dbg !2437
  %112 = load i32, i32* %start, align 4, !dbg !2438
  %add125 = add nsw i32 %112, 12, !dbg !2439
  %idxprom126 = sext i32 %add125 to i64, !dbg !2437
  %arrayidx127 = getelementptr inbounds float, float* %111, i64 %idxprom126, !dbg !2437
  %113 = load float*, float** %nors, align 8, !dbg !2440
  %114 = load i32, i32* %i, align 4, !dbg !2441
  %mul128 = mul nsw i32 %114, 3, !dbg !2442
  %idxprom129 = sext i32 %mul128 to i64, !dbg !2440
  %arrayidx130 = getelementptr inbounds float, float* %113, i64 %idxprom129, !dbg !2440
  call void @copy_v3_v3(float* %arrayidx127, float* %arrayidx130), !dbg !2443
  %115 = load float*, float** %varray.addr, align 8, !dbg !2444
  %116 = load i32, i32* %start, align 4, !dbg !2445
  %add131 = add nsw i32 %116, 15, !dbg !2446
  %idxprom132 = sext i32 %add131 to i64, !dbg !2444
  %arrayidx133 = getelementptr inbounds float, float* %115, i64 %idxprom132, !dbg !2444
  %117 = load float*, float** %nors, align 8, !dbg !2447
  %118 = load i32, i32* %i, align 4, !dbg !2448
  %mul134 = mul nsw i32 %118, 3, !dbg !2449
  %idxprom135 = sext i32 %mul134 to i64, !dbg !2447
  %arrayidx136 = getelementptr inbounds float, float* %117, i64 %idxprom135, !dbg !2447
  call void @copy_v3_v3(float* %arrayidx133, float* %arrayidx136), !dbg !2450
  br label %if.end137, !dbg !2451

if.end137:                                        ; preds = %if.then118, %if.then99
  br label %if.end209, !dbg !2452

if.else138:                                       ; preds = %if.else97
  %119 = load %struct.MFace*, %struct.MFace** %f, align 8, !dbg !2453
  %v4139 = getelementptr inbounds %struct.MFace, %struct.MFace* %119, i32 0, i32 3, !dbg !2456
  %120 = load i32, i32* %v4139, align 4, !dbg !2456
  %tobool140 = icmp ne i32 %120, 0, !dbg !2453
  br i1 %tobool140, label %if.then141, label %if.else163, !dbg !2457

if.then141:                                       ; preds = %if.else138
  %arraydecay142 = getelementptr inbounds [3 x float], [3 x float]* %f_no, i64 0, i64 0, !dbg !2458
  %121 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !2459
  %122 = load %struct.MFace*, %struct.MFace** %f, align 8, !dbg !2460
  %v1143 = getelementptr inbounds %struct.MFace, %struct.MFace* %122, i32 0, i32 0, !dbg !2461
  %123 = load i32, i32* %v1143, align 4, !dbg !2461
  %idxprom144 = zext i32 %123 to i64, !dbg !2459
  %arrayidx145 = getelementptr inbounds %struct.MVert, %struct.MVert* %121, i64 %idxprom144, !dbg !2459
  %co = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx145, i32 0, i32 0, !dbg !2462
  %arraydecay146 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !2459
  %124 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !2463
  %125 = load %struct.MFace*, %struct.MFace** %f, align 8, !dbg !2464
  %v2147 = getelementptr inbounds %struct.MFace, %struct.MFace* %125, i32 0, i32 1, !dbg !2465
  %126 = load i32, i32* %v2147, align 4, !dbg !2465
  %idxprom148 = zext i32 %126 to i64, !dbg !2463
  %arrayidx149 = getelementptr inbounds %struct.MVert, %struct.MVert* %124, i64 %idxprom148, !dbg !2463
  %co150 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx149, i32 0, i32 0, !dbg !2466
  %arraydecay151 = getelementptr inbounds [3 x float], [3 x float]* %co150, i64 0, i64 0, !dbg !2463
  %127 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !2467
  %128 = load %struct.MFace*, %struct.MFace** %f, align 8, !dbg !2468
  %v3152 = getelementptr inbounds %struct.MFace, %struct.MFace* %128, i32 0, i32 2, !dbg !2469
  %129 = load i32, i32* %v3152, align 4, !dbg !2469
  %idxprom153 = zext i32 %129 to i64, !dbg !2467
  %arrayidx154 = getelementptr inbounds %struct.MVert, %struct.MVert* %127, i64 %idxprom153, !dbg !2467
  %co155 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx154, i32 0, i32 0, !dbg !2470
  %arraydecay156 = getelementptr inbounds [3 x float], [3 x float]* %co155, i64 0, i64 0, !dbg !2467
  %130 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !2471
  %131 = load %struct.MFace*, %struct.MFace** %f, align 8, !dbg !2472
  %v4157 = getelementptr inbounds %struct.MFace, %struct.MFace* %131, i32 0, i32 3, !dbg !2473
  %132 = load i32, i32* %v4157, align 4, !dbg !2473
  %idxprom158 = zext i32 %132 to i64, !dbg !2471
  %arrayidx159 = getelementptr inbounds %struct.MVert, %struct.MVert* %130, i64 %idxprom158, !dbg !2471
  %co160 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx159, i32 0, i32 0, !dbg !2474
  %arraydecay161 = getelementptr inbounds [3 x float], [3 x float]* %co160, i64 0, i64 0, !dbg !2471
  %call162 = call float @normal_quad_v3(float* %arraydecay142, float* %arraydecay146, float* %arraydecay151, float* %arraydecay156, float* %arraydecay161), !dbg !2475
  br label %if.end181, !dbg !2475

if.else163:                                       ; preds = %if.else138
  %arraydecay164 = getelementptr inbounds [3 x float], [3 x float]* %f_no, i64 0, i64 0, !dbg !2476
  %133 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !2477
  %134 = load %struct.MFace*, %struct.MFace** %f, align 8, !dbg !2478
  %v1165 = getelementptr inbounds %struct.MFace, %struct.MFace* %134, i32 0, i32 0, !dbg !2479
  %135 = load i32, i32* %v1165, align 4, !dbg !2479
  %idxprom166 = zext i32 %135 to i64, !dbg !2477
  %arrayidx167 = getelementptr inbounds %struct.MVert, %struct.MVert* %133, i64 %idxprom166, !dbg !2477
  %co168 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx167, i32 0, i32 0, !dbg !2480
  %arraydecay169 = getelementptr inbounds [3 x float], [3 x float]* %co168, i64 0, i64 0, !dbg !2477
  %136 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !2481
  %137 = load %struct.MFace*, %struct.MFace** %f, align 8, !dbg !2482
  %v2170 = getelementptr inbounds %struct.MFace, %struct.MFace* %137, i32 0, i32 1, !dbg !2483
  %138 = load i32, i32* %v2170, align 4, !dbg !2483
  %idxprom171 = zext i32 %138 to i64, !dbg !2481
  %arrayidx172 = getelementptr inbounds %struct.MVert, %struct.MVert* %136, i64 %idxprom171, !dbg !2481
  %co173 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx172, i32 0, i32 0, !dbg !2484
  %arraydecay174 = getelementptr inbounds [3 x float], [3 x float]* %co173, i64 0, i64 0, !dbg !2481
  %139 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !2485
  %140 = load %struct.MFace*, %struct.MFace** %f, align 8, !dbg !2486
  %v3175 = getelementptr inbounds %struct.MFace, %struct.MFace* %140, i32 0, i32 2, !dbg !2487
  %141 = load i32, i32* %v3175, align 4, !dbg !2487
  %idxprom176 = zext i32 %141 to i64, !dbg !2485
  %arrayidx177 = getelementptr inbounds %struct.MVert, %struct.MVert* %139, i64 %idxprom176, !dbg !2485
  %co178 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx177, i32 0, i32 0, !dbg !2488
  %arraydecay179 = getelementptr inbounds [3 x float], [3 x float]* %co178, i64 0, i64 0, !dbg !2485
  %call180 = call float @normal_tri_v3(float* %arraydecay164, float* %arraydecay169, float* %arraydecay174, float* %arraydecay179), !dbg !2489
  br label %if.end181

if.end181:                                        ; preds = %if.else163, %if.then141
  %142 = load float*, float** %varray.addr, align 8, !dbg !2490
  %143 = load i32, i32* %start, align 4, !dbg !2491
  %idxprom182 = sext i32 %143 to i64, !dbg !2490
  %arrayidx183 = getelementptr inbounds float, float* %142, i64 %idxprom182, !dbg !2490
  %arraydecay184 = getelementptr inbounds [3 x float], [3 x float]* %f_no, i64 0, i64 0, !dbg !2492
  call void @copy_v3_v3(float* %arrayidx183, float* %arraydecay184), !dbg !2493
  %144 = load float*, float** %varray.addr, align 8, !dbg !2494
  %145 = load i32, i32* %start, align 4, !dbg !2495
  %add185 = add nsw i32 %145, 3, !dbg !2496
  %idxprom186 = sext i32 %add185 to i64, !dbg !2494
  %arrayidx187 = getelementptr inbounds float, float* %144, i64 %idxprom186, !dbg !2494
  %arraydecay188 = getelementptr inbounds [3 x float], [3 x float]* %f_no, i64 0, i64 0, !dbg !2497
  call void @copy_v3_v3(float* %arrayidx187, float* %arraydecay188), !dbg !2498
  %146 = load float*, float** %varray.addr, align 8, !dbg !2499
  %147 = load i32, i32* %start, align 4, !dbg !2500
  %add189 = add nsw i32 %147, 6, !dbg !2501
  %idxprom190 = sext i32 %add189 to i64, !dbg !2499
  %arrayidx191 = getelementptr inbounds float, float* %146, i64 %idxprom190, !dbg !2499
  %arraydecay192 = getelementptr inbounds [3 x float], [3 x float]* %f_no, i64 0, i64 0, !dbg !2502
  call void @copy_v3_v3(float* %arrayidx191, float* %arraydecay192), !dbg !2503
  %148 = load %struct.MFace*, %struct.MFace** %f, align 8, !dbg !2504
  %v4193 = getelementptr inbounds %struct.MFace, %struct.MFace* %148, i32 0, i32 3, !dbg !2506
  %149 = load i32, i32* %v4193, align 4, !dbg !2506
  %tobool194 = icmp ne i32 %149, 0, !dbg !2504
  br i1 %tobool194, label %if.then195, label %if.end208, !dbg !2507

if.then195:                                       ; preds = %if.end181
  %150 = load float*, float** %varray.addr, align 8, !dbg !2508
  %151 = load i32, i32* %start, align 4, !dbg !2510
  %add196 = add nsw i32 %151, 9, !dbg !2511
  %idxprom197 = sext i32 %add196 to i64, !dbg !2508
  %arrayidx198 = getelementptr inbounds float, float* %150, i64 %idxprom197, !dbg !2508
  %arraydecay199 = getelementptr inbounds [3 x float], [3 x float]* %f_no, i64 0, i64 0, !dbg !2512
  call void @copy_v3_v3(float* %arrayidx198, float* %arraydecay199), !dbg !2513
  %152 = load float*, float** %varray.addr, align 8, !dbg !2514
  %153 = load i32, i32* %start, align 4, !dbg !2515
  %add200 = add nsw i32 %153, 12, !dbg !2516
  %idxprom201 = sext i32 %add200 to i64, !dbg !2514
  %arrayidx202 = getelementptr inbounds float, float* %152, i64 %idxprom201, !dbg !2514
  %arraydecay203 = getelementptr inbounds [3 x float], [3 x float]* %f_no, i64 0, i64 0, !dbg !2517
  call void @copy_v3_v3(float* %arrayidx202, float* %arraydecay203), !dbg !2518
  %154 = load float*, float** %varray.addr, align 8, !dbg !2519
  %155 = load i32, i32* %start, align 4, !dbg !2520
  %add204 = add nsw i32 %155, 15, !dbg !2521
  %idxprom205 = sext i32 %add204 to i64, !dbg !2519
  %arrayidx206 = getelementptr inbounds float, float* %154, i64 %idxprom205, !dbg !2519
  %arraydecay207 = getelementptr inbounds [3 x float], [3 x float]* %f_no, i64 0, i64 0, !dbg !2522
  call void @copy_v3_v3(float* %arrayidx206, float* %arraydecay207), !dbg !2523
  br label %if.end208, !dbg !2524

if.end208:                                        ; preds = %if.then195, %if.end181
  br label %if.end209

if.end209:                                        ; preds = %if.end208, %if.end137
  br label %if.end210

if.end210:                                        ; preds = %if.end209, %if.end96
  br label %if.end211

if.end211:                                        ; preds = %if.end210, %if.end
  br label %for.inc, !dbg !2525

for.inc:                                          ; preds = %if.end211
  %156 = load i32, i32* %i, align 4, !dbg !2526
  %inc = add nsw i32 %156, 1, !dbg !2526
  store i32 %inc, i32* %i, align 4, !dbg !2526
  %157 = load %struct.MFace*, %struct.MFace** %f, align 8, !dbg !2527
  %incdec.ptr = getelementptr inbounds %struct.MFace, %struct.MFace* %157, i32 1, !dbg !2527
  store %struct.MFace* %incdec.ptr, %struct.MFace** %f, align 8, !dbg !2527
  br label %for.cond, !dbg !2528, !llvm.loop !2529

for.end:                                          ; preds = %for.cond
  ret void, !dbg !2531
}

; Function Attrs: noinline nounwind uwtable
define internal void @GPU_buffer_copy_mcol(%struct.DerivedMesh* %dm, float* %varray_, i32* %index, i32* %mat_orig_to_new, i8* %user) #0 !dbg !2532 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %varray_.addr = alloca float*, align 8
  %index.addr = alloca i32*, align 8
  %mat_orig_to_new.addr = alloca i32*, align 8
  %user.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %totface = alloca i32, align 4
  %varray = alloca i8*, align 8
  %mcol = alloca i8*, align 8
  %f = alloca %struct.MFace*, align 8
  %start = alloca i32, align 4
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !2533, metadata !DIExpression()), !dbg !2534
  store float* %varray_, float** %varray_.addr, align 8
  call void @llvm.dbg.declare(metadata float** %varray_.addr, metadata !2535, metadata !DIExpression()), !dbg !2536
  store i32* %index, i32** %index.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %index.addr, metadata !2537, metadata !DIExpression()), !dbg !2538
  store i32* %mat_orig_to_new, i32** %mat_orig_to_new.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %mat_orig_to_new.addr, metadata !2539, metadata !DIExpression()), !dbg !2540
  store i8* %user, i8** %user.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %user.addr, metadata !2541, metadata !DIExpression()), !dbg !2542
  call void @llvm.dbg.declare(metadata i32* %i, metadata !2543, metadata !DIExpression()), !dbg !2544
  call void @llvm.dbg.declare(metadata i32* %totface, metadata !2545, metadata !DIExpression()), !dbg !2546
  call void @llvm.dbg.declare(metadata i8** %varray, metadata !2547, metadata !DIExpression()), !dbg !2548
  %0 = load float*, float** %varray_.addr, align 8, !dbg !2549
  %1 = bitcast float* %0 to i8*, !dbg !2550
  store i8* %1, i8** %varray, align 8, !dbg !2548
  call void @llvm.dbg.declare(metadata i8** %mcol, metadata !2551, metadata !DIExpression()), !dbg !2552
  %2 = load i8*, i8** %user.addr, align 8, !dbg !2553
  store i8* %2, i8** %mcol, align 8, !dbg !2552
  call void @llvm.dbg.declare(metadata %struct.MFace** %f, metadata !2554, metadata !DIExpression()), !dbg !2555
  %3 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !2556
  %getTessFaceArray = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %3, i32 0, i32 33, !dbg !2557
  %4 = load %struct.MFace* (%struct.DerivedMesh*)*, %struct.MFace* (%struct.DerivedMesh*)** %getTessFaceArray, align 8, !dbg !2557
  %5 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !2558
  %call = call %struct.MFace* %4(%struct.DerivedMesh* %5), !dbg !2556
  store %struct.MFace* %call, %struct.MFace** %f, align 8, !dbg !2555
  %6 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !2559
  %getNumTessFaces = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %6, i32 0, i32 25, !dbg !2560
  %7 = load i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)** %getNumTessFaces, align 8, !dbg !2560
  %8 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !2561
  %call1 = call i32 %7(%struct.DerivedMesh* %8), !dbg !2559
  store i32 %call1, i32* %totface, align 4, !dbg !2562
  store i32 0, i32* %i, align 4, !dbg !2563
  br label %for.cond, !dbg !2565

for.cond:                                         ; preds = %for.inc, %entry
  %9 = load i32, i32* %i, align 4, !dbg !2566
  %10 = load i32, i32* %totface, align 4, !dbg !2568
  %cmp = icmp slt i32 %9, %10, !dbg !2569
  br i1 %cmp, label %for.body, label %for.end, !dbg !2570

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %start, metadata !2571, metadata !DIExpression()), !dbg !2573
  %11 = load i32*, i32** %index.addr, align 8, !dbg !2574
  %12 = load i32*, i32** %mat_orig_to_new.addr, align 8, !dbg !2575
  %13 = load %struct.MFace*, %struct.MFace** %f, align 8, !dbg !2576
  %mat_nr = getelementptr inbounds %struct.MFace, %struct.MFace* %13, i32 0, i32 4, !dbg !2577
  %14 = load i16, i16* %mat_nr, align 4, !dbg !2577
  %idxprom = sext i16 %14 to i64, !dbg !2575
  %arrayidx = getelementptr inbounds i32, i32* %12, i64 %idxprom, !dbg !2575
  %15 = load i32, i32* %arrayidx, align 4, !dbg !2575
  %idxprom2 = sext i32 %15 to i64, !dbg !2574
  %arrayidx3 = getelementptr inbounds i32, i32* %11, i64 %idxprom2, !dbg !2574
  %16 = load i32, i32* %arrayidx3, align 4, !dbg !2574
  store i32 %16, i32* %start, align 4, !dbg !2573
  %17 = load i8*, i8** %varray, align 8, !dbg !2578
  %18 = load i32, i32* %start, align 4, !dbg !2579
  %idxprom4 = sext i32 %18 to i64, !dbg !2578
  %arrayidx5 = getelementptr inbounds i8, i8* %17, i64 %idxprom4, !dbg !2578
  %19 = load i8*, i8** %mcol, align 8, !dbg !2580
  %20 = load i32, i32* %i, align 4, !dbg !2581
  %mul = mul nsw i32 %20, 16, !dbg !2582
  %idxprom6 = sext i32 %mul to i64, !dbg !2580
  %arrayidx7 = getelementptr inbounds i8, i8* %19, i64 %idxprom6, !dbg !2580
  call void @copy_mcol_uc3(i8* %arrayidx5, i8* %arrayidx7), !dbg !2583
  %21 = load i8*, i8** %varray, align 8, !dbg !2584
  %22 = load i32, i32* %start, align 4, !dbg !2585
  %add = add nsw i32 %22, 3, !dbg !2586
  %idxprom8 = sext i32 %add to i64, !dbg !2584
  %arrayidx9 = getelementptr inbounds i8, i8* %21, i64 %idxprom8, !dbg !2584
  %23 = load i8*, i8** %mcol, align 8, !dbg !2587
  %24 = load i32, i32* %i, align 4, !dbg !2588
  %mul10 = mul nsw i32 %24, 16, !dbg !2589
  %add11 = add nsw i32 %mul10, 4, !dbg !2590
  %idxprom12 = sext i32 %add11 to i64, !dbg !2587
  %arrayidx13 = getelementptr inbounds i8, i8* %23, i64 %idxprom12, !dbg !2587
  call void @copy_mcol_uc3(i8* %arrayidx9, i8* %arrayidx13), !dbg !2591
  %25 = load i8*, i8** %varray, align 8, !dbg !2592
  %26 = load i32, i32* %start, align 4, !dbg !2593
  %add14 = add nsw i32 %26, 6, !dbg !2594
  %idxprom15 = sext i32 %add14 to i64, !dbg !2592
  %arrayidx16 = getelementptr inbounds i8, i8* %25, i64 %idxprom15, !dbg !2592
  %27 = load i8*, i8** %mcol, align 8, !dbg !2595
  %28 = load i32, i32* %i, align 4, !dbg !2596
  %mul17 = mul nsw i32 %28, 16, !dbg !2597
  %add18 = add nsw i32 %mul17, 8, !dbg !2598
  %idxprom19 = sext i32 %add18 to i64, !dbg !2595
  %arrayidx20 = getelementptr inbounds i8, i8* %27, i64 %idxprom19, !dbg !2595
  call void @copy_mcol_uc3(i8* %arrayidx16, i8* %arrayidx20), !dbg !2599
  %29 = load i32*, i32** %index.addr, align 8, !dbg !2600
  %30 = load i32*, i32** %mat_orig_to_new.addr, align 8, !dbg !2601
  %31 = load %struct.MFace*, %struct.MFace** %f, align 8, !dbg !2602
  %mat_nr21 = getelementptr inbounds %struct.MFace, %struct.MFace* %31, i32 0, i32 4, !dbg !2603
  %32 = load i16, i16* %mat_nr21, align 4, !dbg !2603
  %idxprom22 = sext i16 %32 to i64, !dbg !2601
  %arrayidx23 = getelementptr inbounds i32, i32* %30, i64 %idxprom22, !dbg !2601
  %33 = load i32, i32* %arrayidx23, align 4, !dbg !2601
  %idxprom24 = sext i32 %33 to i64, !dbg !2600
  %arrayidx25 = getelementptr inbounds i32, i32* %29, i64 %idxprom24, !dbg !2600
  %34 = load i32, i32* %arrayidx25, align 4, !dbg !2604
  %add26 = add nsw i32 %34, 9, !dbg !2604
  store i32 %add26, i32* %arrayidx25, align 4, !dbg !2604
  %35 = load %struct.MFace*, %struct.MFace** %f, align 8, !dbg !2605
  %v4 = getelementptr inbounds %struct.MFace, %struct.MFace* %35, i32 0, i32 3, !dbg !2607
  %36 = load i32, i32* %v4, align 4, !dbg !2607
  %tobool = icmp ne i32 %36, 0, !dbg !2605
  br i1 %tobool, label %if.then, label %if.end, !dbg !2608

if.then:                                          ; preds = %for.body
  %37 = load i8*, i8** %varray, align 8, !dbg !2609
  %38 = load i32, i32* %start, align 4, !dbg !2611
  %add27 = add nsw i32 %38, 9, !dbg !2612
  %idxprom28 = sext i32 %add27 to i64, !dbg !2609
  %arrayidx29 = getelementptr inbounds i8, i8* %37, i64 %idxprom28, !dbg !2609
  %39 = load i8*, i8** %mcol, align 8, !dbg !2613
  %40 = load i32, i32* %i, align 4, !dbg !2614
  %mul30 = mul nsw i32 %40, 16, !dbg !2615
  %add31 = add nsw i32 %mul30, 8, !dbg !2616
  %idxprom32 = sext i32 %add31 to i64, !dbg !2613
  %arrayidx33 = getelementptr inbounds i8, i8* %39, i64 %idxprom32, !dbg !2613
  call void @copy_mcol_uc3(i8* %arrayidx29, i8* %arrayidx33), !dbg !2617
  %41 = load i8*, i8** %varray, align 8, !dbg !2618
  %42 = load i32, i32* %start, align 4, !dbg !2619
  %add34 = add nsw i32 %42, 12, !dbg !2620
  %idxprom35 = sext i32 %add34 to i64, !dbg !2618
  %arrayidx36 = getelementptr inbounds i8, i8* %41, i64 %idxprom35, !dbg !2618
  %43 = load i8*, i8** %mcol, align 8, !dbg !2621
  %44 = load i32, i32* %i, align 4, !dbg !2622
  %mul37 = mul nsw i32 %44, 16, !dbg !2623
  %add38 = add nsw i32 %mul37, 12, !dbg !2624
  %idxprom39 = sext i32 %add38 to i64, !dbg !2621
  %arrayidx40 = getelementptr inbounds i8, i8* %43, i64 %idxprom39, !dbg !2621
  call void @copy_mcol_uc3(i8* %arrayidx36, i8* %arrayidx40), !dbg !2625
  %45 = load i8*, i8** %varray, align 8, !dbg !2626
  %46 = load i32, i32* %start, align 4, !dbg !2627
  %add41 = add nsw i32 %46, 15, !dbg !2628
  %idxprom42 = sext i32 %add41 to i64, !dbg !2626
  %arrayidx43 = getelementptr inbounds i8, i8* %45, i64 %idxprom42, !dbg !2626
  %47 = load i8*, i8** %mcol, align 8, !dbg !2629
  %48 = load i32, i32* %i, align 4, !dbg !2630
  %mul44 = mul nsw i32 %48, 16, !dbg !2631
  %idxprom45 = sext i32 %mul44 to i64, !dbg !2629
  %arrayidx46 = getelementptr inbounds i8, i8* %47, i64 %idxprom45, !dbg !2629
  call void @copy_mcol_uc3(i8* %arrayidx43, i8* %arrayidx46), !dbg !2632
  %49 = load i32*, i32** %index.addr, align 8, !dbg !2633
  %50 = load i32*, i32** %mat_orig_to_new.addr, align 8, !dbg !2634
  %51 = load %struct.MFace*, %struct.MFace** %f, align 8, !dbg !2635
  %mat_nr47 = getelementptr inbounds %struct.MFace, %struct.MFace* %51, i32 0, i32 4, !dbg !2636
  %52 = load i16, i16* %mat_nr47, align 4, !dbg !2636
  %idxprom48 = sext i16 %52 to i64, !dbg !2634
  %arrayidx49 = getelementptr inbounds i32, i32* %50, i64 %idxprom48, !dbg !2634
  %53 = load i32, i32* %arrayidx49, align 4, !dbg !2634
  %idxprom50 = sext i32 %53 to i64, !dbg !2633
  %arrayidx51 = getelementptr inbounds i32, i32* %49, i64 %idxprom50, !dbg !2633
  %54 = load i32, i32* %arrayidx51, align 4, !dbg !2637
  %add52 = add nsw i32 %54, 9, !dbg !2637
  store i32 %add52, i32* %arrayidx51, align 4, !dbg !2637
  br label %if.end, !dbg !2638

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc, !dbg !2639

for.inc:                                          ; preds = %if.end
  %55 = load i32, i32* %i, align 4, !dbg !2640
  %inc = add nsw i32 %55, 1, !dbg !2640
  store i32 %inc, i32* %i, align 4, !dbg !2640
  %56 = load %struct.MFace*, %struct.MFace** %f, align 8, !dbg !2641
  %incdec.ptr = getelementptr inbounds %struct.MFace, %struct.MFace* %56, i32 1, !dbg !2641
  store %struct.MFace* %incdec.ptr, %struct.MFace** %f, align 8, !dbg !2641
  br label %for.cond, !dbg !2642, !llvm.loop !2643

for.end:                                          ; preds = %for.cond
  ret void, !dbg !2645
}

; Function Attrs: noinline nounwind uwtable
define internal void @GPU_buffer_copy_uv(%struct.DerivedMesh* %dm, float* %varray, i32* %index, i32* %mat_orig_to_new, i8* %UNUSED_user) #0 !dbg !2646 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %varray.addr = alloca float*, align 8
  %index.addr = alloca i32*, align 8
  %mat_orig_to_new.addr = alloca i32*, align 8
  %UNUSED_user.addr = alloca i8*, align 8
  %start = alloca i32, align 4
  %i = alloca i32, align 4
  %totface = alloca i32, align 4
  %mtface = alloca %struct.MTFace*, align 8
  %f = alloca %struct.MFace*, align 8
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !2647, metadata !DIExpression()), !dbg !2648
  store float* %varray, float** %varray.addr, align 8
  call void @llvm.dbg.declare(metadata float** %varray.addr, metadata !2649, metadata !DIExpression()), !dbg !2650
  store i32* %index, i32** %index.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %index.addr, metadata !2651, metadata !DIExpression()), !dbg !2652
  store i32* %mat_orig_to_new, i32** %mat_orig_to_new.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %mat_orig_to_new.addr, metadata !2653, metadata !DIExpression()), !dbg !2654
  store i8* %UNUSED_user, i8** %UNUSED_user.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %UNUSED_user.addr, metadata !2655, metadata !DIExpression()), !dbg !2656
  call void @llvm.dbg.declare(metadata i32* %start, metadata !2657, metadata !DIExpression()), !dbg !2658
  call void @llvm.dbg.declare(metadata i32* %i, metadata !2659, metadata !DIExpression()), !dbg !2660
  call void @llvm.dbg.declare(metadata i32* %totface, metadata !2661, metadata !DIExpression()), !dbg !2662
  call void @llvm.dbg.declare(metadata %struct.MTFace** %mtface, metadata !2663, metadata !DIExpression()), !dbg !2666
  call void @llvm.dbg.declare(metadata %struct.MFace** %f, metadata !2667, metadata !DIExpression()), !dbg !2668
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !2669
  %call = call i8* @DM_get_tessface_data_layer(%struct.DerivedMesh* %0, i32 5), !dbg !2671
  %1 = bitcast i8* %call to %struct.MTFace*, !dbg !2671
  store %struct.MTFace* %1, %struct.MTFace** %mtface, align 8, !dbg !2672
  %tobool = icmp ne %struct.MTFace* %1, null, !dbg !2672
  br i1 %tobool, label %if.end, label %if.then, !dbg !2673

if.then:                                          ; preds = %entry
  br label %for.end, !dbg !2674

if.end:                                           ; preds = %entry
  %2 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !2675
  %getTessFaceArray = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %2, i32 0, i32 33, !dbg !2676
  %3 = load %struct.MFace* (%struct.DerivedMesh*)*, %struct.MFace* (%struct.DerivedMesh*)** %getTessFaceArray, align 8, !dbg !2676
  %4 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !2677
  %call1 = call %struct.MFace* %3(%struct.DerivedMesh* %4), !dbg !2675
  store %struct.MFace* %call1, %struct.MFace** %f, align 8, !dbg !2678
  %5 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !2679
  %getNumTessFaces = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %5, i32 0, i32 25, !dbg !2680
  %6 = load i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)** %getNumTessFaces, align 8, !dbg !2680
  %7 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !2681
  %call2 = call i32 %6(%struct.DerivedMesh* %7), !dbg !2679
  store i32 %call2, i32* %totface, align 4, !dbg !2682
  store i32 0, i32* %i, align 4, !dbg !2683
  br label %for.cond, !dbg !2685

for.cond:                                         ; preds = %for.inc, %if.end
  %8 = load i32, i32* %i, align 4, !dbg !2686
  %9 = load i32, i32* %totface, align 4, !dbg !2688
  %cmp = icmp slt i32 %8, %9, !dbg !2689
  br i1 %cmp, label %for.body, label %for.end, !dbg !2690

for.body:                                         ; preds = %for.cond
  %10 = load i32*, i32** %index.addr, align 8, !dbg !2691
  %11 = load i32*, i32** %mat_orig_to_new.addr, align 8, !dbg !2693
  %12 = load %struct.MFace*, %struct.MFace** %f, align 8, !dbg !2694
  %mat_nr = getelementptr inbounds %struct.MFace, %struct.MFace* %12, i32 0, i32 4, !dbg !2695
  %13 = load i16, i16* %mat_nr, align 4, !dbg !2695
  %idxprom = sext i16 %13 to i64, !dbg !2693
  %arrayidx = getelementptr inbounds i32, i32* %11, i64 %idxprom, !dbg !2693
  %14 = load i32, i32* %arrayidx, align 4, !dbg !2693
  %idxprom3 = sext i32 %14 to i64, !dbg !2691
  %arrayidx4 = getelementptr inbounds i32, i32* %10, i64 %idxprom3, !dbg !2691
  %15 = load i32, i32* %arrayidx4, align 4, !dbg !2691
  store i32 %15, i32* %start, align 4, !dbg !2696
  %16 = load float*, float** %varray.addr, align 8, !dbg !2697
  %17 = load i32, i32* %start, align 4, !dbg !2698
  %idxprom5 = sext i32 %17 to i64, !dbg !2697
  %arrayidx6 = getelementptr inbounds float, float* %16, i64 %idxprom5, !dbg !2697
  %18 = load %struct.MTFace*, %struct.MTFace** %mtface, align 8, !dbg !2699
  %19 = load i32, i32* %i, align 4, !dbg !2700
  %idxprom7 = sext i32 %19 to i64, !dbg !2699
  %arrayidx8 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %18, i64 %idxprom7, !dbg !2699
  %uv = getelementptr inbounds %struct.MTFace, %struct.MTFace* %arrayidx8, i32 0, i32 0, !dbg !2701
  %arrayidx9 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv, i64 0, i64 0, !dbg !2699
  %arraydecay = getelementptr inbounds [2 x float], [2 x float]* %arrayidx9, i64 0, i64 0, !dbg !2699
  call void @copy_v2_v2(float* %arrayidx6, float* %arraydecay), !dbg !2702
  %20 = load float*, float** %varray.addr, align 8, !dbg !2703
  %21 = load i32, i32* %start, align 4, !dbg !2704
  %add = add nsw i32 %21, 2, !dbg !2705
  %idxprom10 = sext i32 %add to i64, !dbg !2703
  %arrayidx11 = getelementptr inbounds float, float* %20, i64 %idxprom10, !dbg !2703
  %22 = load %struct.MTFace*, %struct.MTFace** %mtface, align 8, !dbg !2706
  %23 = load i32, i32* %i, align 4, !dbg !2707
  %idxprom12 = sext i32 %23 to i64, !dbg !2706
  %arrayidx13 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %22, i64 %idxprom12, !dbg !2706
  %uv14 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %arrayidx13, i32 0, i32 0, !dbg !2708
  %arrayidx15 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv14, i64 0, i64 1, !dbg !2706
  %arraydecay16 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx15, i64 0, i64 0, !dbg !2706
  call void @copy_v2_v2(float* %arrayidx11, float* %arraydecay16), !dbg !2709
  %24 = load float*, float** %varray.addr, align 8, !dbg !2710
  %25 = load i32, i32* %start, align 4, !dbg !2711
  %add17 = add nsw i32 %25, 4, !dbg !2712
  %idxprom18 = sext i32 %add17 to i64, !dbg !2710
  %arrayidx19 = getelementptr inbounds float, float* %24, i64 %idxprom18, !dbg !2710
  %26 = load %struct.MTFace*, %struct.MTFace** %mtface, align 8, !dbg !2713
  %27 = load i32, i32* %i, align 4, !dbg !2714
  %idxprom20 = sext i32 %27 to i64, !dbg !2713
  %arrayidx21 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %26, i64 %idxprom20, !dbg !2713
  %uv22 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %arrayidx21, i32 0, i32 0, !dbg !2715
  %arrayidx23 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv22, i64 0, i64 2, !dbg !2713
  %arraydecay24 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx23, i64 0, i64 0, !dbg !2713
  call void @copy_v2_v2(float* %arrayidx19, float* %arraydecay24), !dbg !2716
  %28 = load i32*, i32** %index.addr, align 8, !dbg !2717
  %29 = load i32*, i32** %mat_orig_to_new.addr, align 8, !dbg !2718
  %30 = load %struct.MFace*, %struct.MFace** %f, align 8, !dbg !2719
  %mat_nr25 = getelementptr inbounds %struct.MFace, %struct.MFace* %30, i32 0, i32 4, !dbg !2720
  %31 = load i16, i16* %mat_nr25, align 4, !dbg !2720
  %idxprom26 = sext i16 %31 to i64, !dbg !2718
  %arrayidx27 = getelementptr inbounds i32, i32* %29, i64 %idxprom26, !dbg !2718
  %32 = load i32, i32* %arrayidx27, align 4, !dbg !2718
  %idxprom28 = sext i32 %32 to i64, !dbg !2717
  %arrayidx29 = getelementptr inbounds i32, i32* %28, i64 %idxprom28, !dbg !2717
  %33 = load i32, i32* %arrayidx29, align 4, !dbg !2721
  %add30 = add nsw i32 %33, 6, !dbg !2721
  store i32 %add30, i32* %arrayidx29, align 4, !dbg !2721
  %34 = load %struct.MFace*, %struct.MFace** %f, align 8, !dbg !2722
  %v4 = getelementptr inbounds %struct.MFace, %struct.MFace* %34, i32 0, i32 3, !dbg !2724
  %35 = load i32, i32* %v4, align 4, !dbg !2724
  %tobool31 = icmp ne i32 %35, 0, !dbg !2722
  br i1 %tobool31, label %if.then32, label %if.end63, !dbg !2725

if.then32:                                        ; preds = %for.body
  %36 = load float*, float** %varray.addr, align 8, !dbg !2726
  %37 = load i32, i32* %start, align 4, !dbg !2728
  %add33 = add nsw i32 %37, 6, !dbg !2729
  %idxprom34 = sext i32 %add33 to i64, !dbg !2726
  %arrayidx35 = getelementptr inbounds float, float* %36, i64 %idxprom34, !dbg !2726
  %38 = load %struct.MTFace*, %struct.MTFace** %mtface, align 8, !dbg !2730
  %39 = load i32, i32* %i, align 4, !dbg !2731
  %idxprom36 = sext i32 %39 to i64, !dbg !2730
  %arrayidx37 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %38, i64 %idxprom36, !dbg !2730
  %uv38 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %arrayidx37, i32 0, i32 0, !dbg !2732
  %arrayidx39 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv38, i64 0, i64 2, !dbg !2730
  %arraydecay40 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx39, i64 0, i64 0, !dbg !2730
  call void @copy_v2_v2(float* %arrayidx35, float* %arraydecay40), !dbg !2733
  %40 = load float*, float** %varray.addr, align 8, !dbg !2734
  %41 = load i32, i32* %start, align 4, !dbg !2735
  %add41 = add nsw i32 %41, 8, !dbg !2736
  %idxprom42 = sext i32 %add41 to i64, !dbg !2734
  %arrayidx43 = getelementptr inbounds float, float* %40, i64 %idxprom42, !dbg !2734
  %42 = load %struct.MTFace*, %struct.MTFace** %mtface, align 8, !dbg !2737
  %43 = load i32, i32* %i, align 4, !dbg !2738
  %idxprom44 = sext i32 %43 to i64, !dbg !2737
  %arrayidx45 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %42, i64 %idxprom44, !dbg !2737
  %uv46 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %arrayidx45, i32 0, i32 0, !dbg !2739
  %arrayidx47 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv46, i64 0, i64 3, !dbg !2737
  %arraydecay48 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx47, i64 0, i64 0, !dbg !2737
  call void @copy_v2_v2(float* %arrayidx43, float* %arraydecay48), !dbg !2740
  %44 = load float*, float** %varray.addr, align 8, !dbg !2741
  %45 = load i32, i32* %start, align 4, !dbg !2742
  %add49 = add nsw i32 %45, 10, !dbg !2743
  %idxprom50 = sext i32 %add49 to i64, !dbg !2741
  %arrayidx51 = getelementptr inbounds float, float* %44, i64 %idxprom50, !dbg !2741
  %46 = load %struct.MTFace*, %struct.MTFace** %mtface, align 8, !dbg !2744
  %47 = load i32, i32* %i, align 4, !dbg !2745
  %idxprom52 = sext i32 %47 to i64, !dbg !2744
  %arrayidx53 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %46, i64 %idxprom52, !dbg !2744
  %uv54 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %arrayidx53, i32 0, i32 0, !dbg !2746
  %arrayidx55 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv54, i64 0, i64 0, !dbg !2744
  %arraydecay56 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx55, i64 0, i64 0, !dbg !2744
  call void @copy_v2_v2(float* %arrayidx51, float* %arraydecay56), !dbg !2747
  %48 = load i32*, i32** %index.addr, align 8, !dbg !2748
  %49 = load i32*, i32** %mat_orig_to_new.addr, align 8, !dbg !2749
  %50 = load %struct.MFace*, %struct.MFace** %f, align 8, !dbg !2750
  %mat_nr57 = getelementptr inbounds %struct.MFace, %struct.MFace* %50, i32 0, i32 4, !dbg !2751
  %51 = load i16, i16* %mat_nr57, align 4, !dbg !2751
  %idxprom58 = sext i16 %51 to i64, !dbg !2749
  %arrayidx59 = getelementptr inbounds i32, i32* %49, i64 %idxprom58, !dbg !2749
  %52 = load i32, i32* %arrayidx59, align 4, !dbg !2749
  %idxprom60 = sext i32 %52 to i64, !dbg !2748
  %arrayidx61 = getelementptr inbounds i32, i32* %48, i64 %idxprom60, !dbg !2748
  %53 = load i32, i32* %arrayidx61, align 4, !dbg !2752
  %add62 = add nsw i32 %53, 6, !dbg !2752
  store i32 %add62, i32* %arrayidx61, align 4, !dbg !2752
  br label %if.end63, !dbg !2753

if.end63:                                         ; preds = %if.then32, %for.body
  br label %for.inc, !dbg !2754

for.inc:                                          ; preds = %if.end63
  %54 = load i32, i32* %i, align 4, !dbg !2755
  %inc = add nsw i32 %54, 1, !dbg !2755
  store i32 %inc, i32* %i, align 4, !dbg !2755
  %55 = load %struct.MFace*, %struct.MFace** %f, align 8, !dbg !2756
  %incdec.ptr = getelementptr inbounds %struct.MFace, %struct.MFace* %55, i32 1, !dbg !2756
  store %struct.MFace* %incdec.ptr, %struct.MFace** %f, align 8, !dbg !2756
  br label %for.cond, !dbg !2757, !llvm.loop !2758

for.end:                                          ; preds = %if.then, %for.cond
  ret void, !dbg !2760
}

; Function Attrs: noinline nounwind uwtable
define internal void @GPU_buffer_copy_uv_texpaint(%struct.DerivedMesh* %dm, float* %varray, i32* %index, i32* %mat_orig_to_new, i8* %UNUSED_user) #0 !dbg !2761 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %varray.addr = alloca float*, align 8
  %index.addr = alloca i32*, align 8
  %mat_orig_to_new.addr = alloca i32*, align 8
  %UNUSED_user.addr = alloca i8*, align 8
  %start = alloca i32, align 4
  %i = alloca i32, align 4
  %totface = alloca i32, align 4
  %totmaterial = alloca i32, align 4
  %mtface_base = alloca %struct.MTFace**, align 8
  %stencil_base = alloca %struct.MTFace*, align 8
  %stencil = alloca i32, align 4
  %mf = alloca %struct.MFace*, align 8
  %mat_i = alloca i32, align 4
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !2762, metadata !DIExpression()), !dbg !2763
  store float* %varray, float** %varray.addr, align 8
  call void @llvm.dbg.declare(metadata float** %varray.addr, metadata !2764, metadata !DIExpression()), !dbg !2765
  store i32* %index, i32** %index.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %index.addr, metadata !2766, metadata !DIExpression()), !dbg !2767
  store i32* %mat_orig_to_new, i32** %mat_orig_to_new.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %mat_orig_to_new.addr, metadata !2768, metadata !DIExpression()), !dbg !2769
  store i8* %UNUSED_user, i8** %UNUSED_user.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %UNUSED_user.addr, metadata !2770, metadata !DIExpression()), !dbg !2771
  call void @llvm.dbg.declare(metadata i32* %start, metadata !2772, metadata !DIExpression()), !dbg !2773
  call void @llvm.dbg.declare(metadata i32* %i, metadata !2774, metadata !DIExpression()), !dbg !2775
  call void @llvm.dbg.declare(metadata i32* %totface, metadata !2776, metadata !DIExpression()), !dbg !2777
  call void @llvm.dbg.declare(metadata i32* %totmaterial, metadata !2778, metadata !DIExpression()), !dbg !2779
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !2780
  %totmat = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %0, i32 0, i32 17, !dbg !2781
  %1 = load i32, i32* %totmat, align 4, !dbg !2781
  store i32 %1, i32* %totmaterial, align 4, !dbg !2779
  call void @llvm.dbg.declare(metadata %struct.MTFace*** %mtface_base, metadata !2782, metadata !DIExpression()), !dbg !2784
  call void @llvm.dbg.declare(metadata %struct.MTFace** %stencil_base, metadata !2785, metadata !DIExpression()), !dbg !2786
  call void @llvm.dbg.declare(metadata i32* %stencil, metadata !2787, metadata !DIExpression()), !dbg !2788
  call void @llvm.dbg.declare(metadata %struct.MFace** %mf, metadata !2789, metadata !DIExpression()), !dbg !2790
  %2 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !2791
  %getTessFaceArray = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %2, i32 0, i32 33, !dbg !2792
  %3 = load %struct.MFace* (%struct.DerivedMesh*)*, %struct.MFace* (%struct.DerivedMesh*)** %getTessFaceArray, align 8, !dbg !2792
  %4 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !2793
  %call = call %struct.MFace* %3(%struct.DerivedMesh* %4), !dbg !2791
  store %struct.MFace* %call, %struct.MFace** %mf, align 8, !dbg !2794
  %5 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !2795
  %6 = load i32, i32* %totmaterial, align 4, !dbg !2796
  %conv = sext i32 %6 to i64, !dbg !2796
  %mul = mul i64 %conv, 8, !dbg !2797
  %call1 = call i8* %5(i64 %mul, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.12, i64 0, i64 0)), !dbg !2795
  %7 = bitcast i8* %call1 to %struct.MTFace**, !dbg !2795
  store %struct.MTFace** %7, %struct.MTFace*** %mtface_base, align 8, !dbg !2798
  store i32 0, i32* %i, align 4, !dbg !2799
  br label %for.cond, !dbg !2801

for.cond:                                         ; preds = %for.inc, %entry
  %8 = load i32, i32* %i, align 4, !dbg !2802
  %9 = load i32, i32* %totmaterial, align 4, !dbg !2804
  %cmp = icmp slt i32 %8, %9, !dbg !2805
  br i1 %cmp, label %for.body, label %for.end, !dbg !2806

for.body:                                         ; preds = %for.cond
  %10 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !2807
  %11 = load i32, i32* %i, align 4, !dbg !2809
  %call3 = call %struct.MTFace* @DM_paint_uvlayer_active_get(%struct.DerivedMesh* %10, i32 %11), !dbg !2810
  %12 = load %struct.MTFace**, %struct.MTFace*** %mtface_base, align 8, !dbg !2811
  %13 = load i32, i32* %i, align 4, !dbg !2812
  %idxprom = sext i32 %13 to i64, !dbg !2811
  %arrayidx = getelementptr inbounds %struct.MTFace*, %struct.MTFace** %12, i64 %idxprom, !dbg !2811
  store %struct.MTFace* %call3, %struct.MTFace** %arrayidx, align 8, !dbg !2813
  br label %for.inc, !dbg !2814

for.inc:                                          ; preds = %for.body
  %14 = load i32, i32* %i, align 4, !dbg !2815
  %inc = add nsw i32 %14, 1, !dbg !2815
  store i32 %inc, i32* %i, align 4, !dbg !2815
  br label %for.cond, !dbg !2816, !llvm.loop !2817

for.end:                                          ; preds = %for.cond
  %15 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !2819
  %faceData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %15, i32 0, i32 2, !dbg !2820
  %call4 = call i32 @CustomData_get_stencil_layer(%struct.CustomData* %faceData, i32 5), !dbg !2821
  store i32 %call4, i32* %stencil, align 4, !dbg !2822
  %16 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !2823
  %faceData5 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %16, i32 0, i32 2, !dbg !2824
  %17 = load i32, i32* %stencil, align 4, !dbg !2825
  %call6 = call i8* @CustomData_get_layer_n(%struct.CustomData* %faceData5, i32 5, i32 %17), !dbg !2826
  %18 = bitcast i8* %call6 to %struct.MTFace*, !dbg !2826
  store %struct.MTFace* %18, %struct.MTFace** %stencil_base, align 8, !dbg !2827
  %19 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !2828
  %getNumTessFaces = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %19, i32 0, i32 25, !dbg !2829
  %20 = load i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)** %getNumTessFaces, align 8, !dbg !2829
  %21 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !2830
  %call7 = call i32 %20(%struct.DerivedMesh* %21), !dbg !2828
  store i32 %call7, i32* %totface, align 4, !dbg !2831
  store i32 0, i32* %i, align 4, !dbg !2832
  br label %for.cond8, !dbg !2834

for.cond8:                                        ; preds = %for.inc131, %for.end
  %22 = load i32, i32* %i, align 4, !dbg !2835
  %23 = load i32, i32* %totface, align 4, !dbg !2837
  %cmp9 = icmp slt i32 %22, %23, !dbg !2838
  br i1 %cmp9, label %for.body11, label %for.end133, !dbg !2839

for.body11:                                       ; preds = %for.cond8
  call void @llvm.dbg.declare(metadata i32* %mat_i, metadata !2840, metadata !DIExpression()), !dbg !2842
  %24 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !2843
  %mat_nr = getelementptr inbounds %struct.MFace, %struct.MFace* %24, i32 0, i32 4, !dbg !2844
  %25 = load i16, i16* %mat_nr, align 4, !dbg !2844
  %conv12 = sext i16 %25 to i32, !dbg !2843
  store i32 %conv12, i32* %mat_i, align 4, !dbg !2842
  %26 = load i32*, i32** %index.addr, align 8, !dbg !2845
  %27 = load i32*, i32** %mat_orig_to_new.addr, align 8, !dbg !2846
  %28 = load i32, i32* %mat_i, align 4, !dbg !2847
  %idxprom13 = sext i32 %28 to i64, !dbg !2846
  %arrayidx14 = getelementptr inbounds i32, i32* %27, i64 %idxprom13, !dbg !2846
  %29 = load i32, i32* %arrayidx14, align 4, !dbg !2846
  %idxprom15 = sext i32 %29 to i64, !dbg !2845
  %arrayidx16 = getelementptr inbounds i32, i32* %26, i64 %idxprom15, !dbg !2845
  %30 = load i32, i32* %arrayidx16, align 4, !dbg !2845
  store i32 %30, i32* %start, align 4, !dbg !2848
  %31 = load float*, float** %varray.addr, align 8, !dbg !2849
  %32 = load i32, i32* %start, align 4, !dbg !2850
  %idxprom17 = sext i32 %32 to i64, !dbg !2849
  %arrayidx18 = getelementptr inbounds float, float* %31, i64 %idxprom17, !dbg !2849
  %33 = load %struct.MTFace**, %struct.MTFace*** %mtface_base, align 8, !dbg !2851
  %34 = load i32, i32* %mat_i, align 4, !dbg !2852
  %idxprom19 = sext i32 %34 to i64, !dbg !2851
  %arrayidx20 = getelementptr inbounds %struct.MTFace*, %struct.MTFace** %33, i64 %idxprom19, !dbg !2851
  %35 = load %struct.MTFace*, %struct.MTFace** %arrayidx20, align 8, !dbg !2851
  %36 = load i32, i32* %i, align 4, !dbg !2853
  %idxprom21 = sext i32 %36 to i64, !dbg !2851
  %arrayidx22 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %35, i64 %idxprom21, !dbg !2851
  %uv = getelementptr inbounds %struct.MTFace, %struct.MTFace* %arrayidx22, i32 0, i32 0, !dbg !2854
  %arrayidx23 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv, i64 0, i64 0, !dbg !2851
  %arraydecay = getelementptr inbounds [2 x float], [2 x float]* %arrayidx23, i64 0, i64 0, !dbg !2851
  call void @copy_v2_v2(float* %arrayidx18, float* %arraydecay), !dbg !2855
  %37 = load float*, float** %varray.addr, align 8, !dbg !2856
  %38 = load i32, i32* %start, align 4, !dbg !2857
  %add = add nsw i32 %38, 2, !dbg !2858
  %idxprom24 = sext i32 %add to i64, !dbg !2856
  %arrayidx25 = getelementptr inbounds float, float* %37, i64 %idxprom24, !dbg !2856
  %39 = load %struct.MTFace*, %struct.MTFace** %stencil_base, align 8, !dbg !2859
  %40 = load i32, i32* %i, align 4, !dbg !2860
  %idxprom26 = sext i32 %40 to i64, !dbg !2859
  %arrayidx27 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %39, i64 %idxprom26, !dbg !2859
  %uv28 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %arrayidx27, i32 0, i32 0, !dbg !2861
  %arrayidx29 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv28, i64 0, i64 0, !dbg !2859
  %arraydecay30 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx29, i64 0, i64 0, !dbg !2859
  call void @copy_v2_v2(float* %arrayidx25, float* %arraydecay30), !dbg !2862
  %41 = load float*, float** %varray.addr, align 8, !dbg !2863
  %42 = load i32, i32* %start, align 4, !dbg !2864
  %add31 = add nsw i32 %42, 4, !dbg !2865
  %idxprom32 = sext i32 %add31 to i64, !dbg !2863
  %arrayidx33 = getelementptr inbounds float, float* %41, i64 %idxprom32, !dbg !2863
  %43 = load %struct.MTFace**, %struct.MTFace*** %mtface_base, align 8, !dbg !2866
  %44 = load i32, i32* %mat_i, align 4, !dbg !2867
  %idxprom34 = sext i32 %44 to i64, !dbg !2866
  %arrayidx35 = getelementptr inbounds %struct.MTFace*, %struct.MTFace** %43, i64 %idxprom34, !dbg !2866
  %45 = load %struct.MTFace*, %struct.MTFace** %arrayidx35, align 8, !dbg !2866
  %46 = load i32, i32* %i, align 4, !dbg !2868
  %idxprom36 = sext i32 %46 to i64, !dbg !2866
  %arrayidx37 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %45, i64 %idxprom36, !dbg !2866
  %uv38 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %arrayidx37, i32 0, i32 0, !dbg !2869
  %arrayidx39 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv38, i64 0, i64 1, !dbg !2866
  %arraydecay40 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx39, i64 0, i64 0, !dbg !2866
  call void @copy_v2_v2(float* %arrayidx33, float* %arraydecay40), !dbg !2870
  %47 = load float*, float** %varray.addr, align 8, !dbg !2871
  %48 = load i32, i32* %start, align 4, !dbg !2872
  %add41 = add nsw i32 %48, 6, !dbg !2873
  %idxprom42 = sext i32 %add41 to i64, !dbg !2871
  %arrayidx43 = getelementptr inbounds float, float* %47, i64 %idxprom42, !dbg !2871
  %49 = load %struct.MTFace*, %struct.MTFace** %stencil_base, align 8, !dbg !2874
  %50 = load i32, i32* %i, align 4, !dbg !2875
  %idxprom44 = sext i32 %50 to i64, !dbg !2874
  %arrayidx45 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %49, i64 %idxprom44, !dbg !2874
  %uv46 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %arrayidx45, i32 0, i32 0, !dbg !2876
  %arrayidx47 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv46, i64 0, i64 1, !dbg !2874
  %arraydecay48 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx47, i64 0, i64 0, !dbg !2874
  call void @copy_v2_v2(float* %arrayidx43, float* %arraydecay48), !dbg !2877
  %51 = load float*, float** %varray.addr, align 8, !dbg !2878
  %52 = load i32, i32* %start, align 4, !dbg !2879
  %add49 = add nsw i32 %52, 8, !dbg !2880
  %idxprom50 = sext i32 %add49 to i64, !dbg !2878
  %arrayidx51 = getelementptr inbounds float, float* %51, i64 %idxprom50, !dbg !2878
  %53 = load %struct.MTFace**, %struct.MTFace*** %mtface_base, align 8, !dbg !2881
  %54 = load i32, i32* %mat_i, align 4, !dbg !2882
  %idxprom52 = sext i32 %54 to i64, !dbg !2881
  %arrayidx53 = getelementptr inbounds %struct.MTFace*, %struct.MTFace** %53, i64 %idxprom52, !dbg !2881
  %55 = load %struct.MTFace*, %struct.MTFace** %arrayidx53, align 8, !dbg !2881
  %56 = load i32, i32* %i, align 4, !dbg !2883
  %idxprom54 = sext i32 %56 to i64, !dbg !2881
  %arrayidx55 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %55, i64 %idxprom54, !dbg !2881
  %uv56 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %arrayidx55, i32 0, i32 0, !dbg !2884
  %arrayidx57 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv56, i64 0, i64 2, !dbg !2881
  %arraydecay58 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx57, i64 0, i64 0, !dbg !2881
  call void @copy_v2_v2(float* %arrayidx51, float* %arraydecay58), !dbg !2885
  %57 = load float*, float** %varray.addr, align 8, !dbg !2886
  %58 = load i32, i32* %start, align 4, !dbg !2887
  %add59 = add nsw i32 %58, 10, !dbg !2888
  %idxprom60 = sext i32 %add59 to i64, !dbg !2886
  %arrayidx61 = getelementptr inbounds float, float* %57, i64 %idxprom60, !dbg !2886
  %59 = load %struct.MTFace*, %struct.MTFace** %stencil_base, align 8, !dbg !2889
  %60 = load i32, i32* %i, align 4, !dbg !2890
  %idxprom62 = sext i32 %60 to i64, !dbg !2889
  %arrayidx63 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %59, i64 %idxprom62, !dbg !2889
  %uv64 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %arrayidx63, i32 0, i32 0, !dbg !2891
  %arrayidx65 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv64, i64 0, i64 2, !dbg !2889
  %arraydecay66 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx65, i64 0, i64 0, !dbg !2889
  call void @copy_v2_v2(float* %arrayidx61, float* %arraydecay66), !dbg !2892
  %61 = load i32*, i32** %index.addr, align 8, !dbg !2893
  %62 = load i32*, i32** %mat_orig_to_new.addr, align 8, !dbg !2894
  %63 = load i32, i32* %mat_i, align 4, !dbg !2895
  %idxprom67 = sext i32 %63 to i64, !dbg !2894
  %arrayidx68 = getelementptr inbounds i32, i32* %62, i64 %idxprom67, !dbg !2894
  %64 = load i32, i32* %arrayidx68, align 4, !dbg !2894
  %idxprom69 = sext i32 %64 to i64, !dbg !2893
  %arrayidx70 = getelementptr inbounds i32, i32* %61, i64 %idxprom69, !dbg !2893
  %65 = load i32, i32* %arrayidx70, align 4, !dbg !2896
  %add71 = add nsw i32 %65, 12, !dbg !2896
  store i32 %add71, i32* %arrayidx70, align 4, !dbg !2896
  %66 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !2897
  %v4 = getelementptr inbounds %struct.MFace, %struct.MFace* %66, i32 0, i32 3, !dbg !2899
  %67 = load i32, i32* %v4, align 4, !dbg !2899
  %tobool = icmp ne i32 %67, 0, !dbg !2897
  br i1 %tobool, label %if.then, label %if.end, !dbg !2900

if.then:                                          ; preds = %for.body11
  %68 = load float*, float** %varray.addr, align 8, !dbg !2901
  %69 = load i32, i32* %start, align 4, !dbg !2903
  %add72 = add nsw i32 %69, 12, !dbg !2904
  %idxprom73 = sext i32 %add72 to i64, !dbg !2901
  %arrayidx74 = getelementptr inbounds float, float* %68, i64 %idxprom73, !dbg !2901
  %70 = load %struct.MTFace**, %struct.MTFace*** %mtface_base, align 8, !dbg !2905
  %71 = load i32, i32* %mat_i, align 4, !dbg !2906
  %idxprom75 = sext i32 %71 to i64, !dbg !2905
  %arrayidx76 = getelementptr inbounds %struct.MTFace*, %struct.MTFace** %70, i64 %idxprom75, !dbg !2905
  %72 = load %struct.MTFace*, %struct.MTFace** %arrayidx76, align 8, !dbg !2905
  %73 = load i32, i32* %i, align 4, !dbg !2907
  %idxprom77 = sext i32 %73 to i64, !dbg !2905
  %arrayidx78 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %72, i64 %idxprom77, !dbg !2905
  %uv79 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %arrayidx78, i32 0, i32 0, !dbg !2908
  %arrayidx80 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv79, i64 0, i64 2, !dbg !2905
  %arraydecay81 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx80, i64 0, i64 0, !dbg !2905
  call void @copy_v2_v2(float* %arrayidx74, float* %arraydecay81), !dbg !2909
  %74 = load float*, float** %varray.addr, align 8, !dbg !2910
  %75 = load i32, i32* %start, align 4, !dbg !2911
  %add82 = add nsw i32 %75, 14, !dbg !2912
  %idxprom83 = sext i32 %add82 to i64, !dbg !2910
  %arrayidx84 = getelementptr inbounds float, float* %74, i64 %idxprom83, !dbg !2910
  %76 = load %struct.MTFace*, %struct.MTFace** %stencil_base, align 8, !dbg !2913
  %77 = load i32, i32* %i, align 4, !dbg !2914
  %idxprom85 = sext i32 %77 to i64, !dbg !2913
  %arrayidx86 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %76, i64 %idxprom85, !dbg !2913
  %uv87 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %arrayidx86, i32 0, i32 0, !dbg !2915
  %arrayidx88 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv87, i64 0, i64 2, !dbg !2913
  %arraydecay89 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx88, i64 0, i64 0, !dbg !2913
  call void @copy_v2_v2(float* %arrayidx84, float* %arraydecay89), !dbg !2916
  %78 = load float*, float** %varray.addr, align 8, !dbg !2917
  %79 = load i32, i32* %start, align 4, !dbg !2918
  %add90 = add nsw i32 %79, 16, !dbg !2919
  %idxprom91 = sext i32 %add90 to i64, !dbg !2917
  %arrayidx92 = getelementptr inbounds float, float* %78, i64 %idxprom91, !dbg !2917
  %80 = load %struct.MTFace**, %struct.MTFace*** %mtface_base, align 8, !dbg !2920
  %81 = load i32, i32* %mat_i, align 4, !dbg !2921
  %idxprom93 = sext i32 %81 to i64, !dbg !2920
  %arrayidx94 = getelementptr inbounds %struct.MTFace*, %struct.MTFace** %80, i64 %idxprom93, !dbg !2920
  %82 = load %struct.MTFace*, %struct.MTFace** %arrayidx94, align 8, !dbg !2920
  %83 = load i32, i32* %i, align 4, !dbg !2922
  %idxprom95 = sext i32 %83 to i64, !dbg !2920
  %arrayidx96 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %82, i64 %idxprom95, !dbg !2920
  %uv97 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %arrayidx96, i32 0, i32 0, !dbg !2923
  %arrayidx98 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv97, i64 0, i64 3, !dbg !2920
  %arraydecay99 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx98, i64 0, i64 0, !dbg !2920
  call void @copy_v2_v2(float* %arrayidx92, float* %arraydecay99), !dbg !2924
  %84 = load float*, float** %varray.addr, align 8, !dbg !2925
  %85 = load i32, i32* %start, align 4, !dbg !2926
  %add100 = add nsw i32 %85, 18, !dbg !2927
  %idxprom101 = sext i32 %add100 to i64, !dbg !2925
  %arrayidx102 = getelementptr inbounds float, float* %84, i64 %idxprom101, !dbg !2925
  %86 = load %struct.MTFace*, %struct.MTFace** %stencil_base, align 8, !dbg !2928
  %87 = load i32, i32* %i, align 4, !dbg !2929
  %idxprom103 = sext i32 %87 to i64, !dbg !2928
  %arrayidx104 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %86, i64 %idxprom103, !dbg !2928
  %uv105 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %arrayidx104, i32 0, i32 0, !dbg !2930
  %arrayidx106 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv105, i64 0, i64 3, !dbg !2928
  %arraydecay107 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx106, i64 0, i64 0, !dbg !2928
  call void @copy_v2_v2(float* %arrayidx102, float* %arraydecay107), !dbg !2931
  %88 = load float*, float** %varray.addr, align 8, !dbg !2932
  %89 = load i32, i32* %start, align 4, !dbg !2933
  %add108 = add nsw i32 %89, 20, !dbg !2934
  %idxprom109 = sext i32 %add108 to i64, !dbg !2932
  %arrayidx110 = getelementptr inbounds float, float* %88, i64 %idxprom109, !dbg !2932
  %90 = load %struct.MTFace**, %struct.MTFace*** %mtface_base, align 8, !dbg !2935
  %91 = load i32, i32* %mat_i, align 4, !dbg !2936
  %idxprom111 = sext i32 %91 to i64, !dbg !2935
  %arrayidx112 = getelementptr inbounds %struct.MTFace*, %struct.MTFace** %90, i64 %idxprom111, !dbg !2935
  %92 = load %struct.MTFace*, %struct.MTFace** %arrayidx112, align 8, !dbg !2935
  %93 = load i32, i32* %i, align 4, !dbg !2937
  %idxprom113 = sext i32 %93 to i64, !dbg !2935
  %arrayidx114 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %92, i64 %idxprom113, !dbg !2935
  %uv115 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %arrayidx114, i32 0, i32 0, !dbg !2938
  %arrayidx116 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv115, i64 0, i64 0, !dbg !2935
  %arraydecay117 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx116, i64 0, i64 0, !dbg !2935
  call void @copy_v2_v2(float* %arrayidx110, float* %arraydecay117), !dbg !2939
  %94 = load float*, float** %varray.addr, align 8, !dbg !2940
  %95 = load i32, i32* %start, align 4, !dbg !2941
  %add118 = add nsw i32 %95, 22, !dbg !2942
  %idxprom119 = sext i32 %add118 to i64, !dbg !2940
  %arrayidx120 = getelementptr inbounds float, float* %94, i64 %idxprom119, !dbg !2940
  %96 = load %struct.MTFace*, %struct.MTFace** %stencil_base, align 8, !dbg !2943
  %97 = load i32, i32* %i, align 4, !dbg !2944
  %idxprom121 = sext i32 %97 to i64, !dbg !2943
  %arrayidx122 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %96, i64 %idxprom121, !dbg !2943
  %uv123 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %arrayidx122, i32 0, i32 0, !dbg !2945
  %arrayidx124 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv123, i64 0, i64 0, !dbg !2943
  %arraydecay125 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx124, i64 0, i64 0, !dbg !2943
  call void @copy_v2_v2(float* %arrayidx120, float* %arraydecay125), !dbg !2946
  %98 = load i32*, i32** %index.addr, align 8, !dbg !2947
  %99 = load i32*, i32** %mat_orig_to_new.addr, align 8, !dbg !2948
  %100 = load i32, i32* %mat_i, align 4, !dbg !2949
  %idxprom126 = sext i32 %100 to i64, !dbg !2948
  %arrayidx127 = getelementptr inbounds i32, i32* %99, i64 %idxprom126, !dbg !2948
  %101 = load i32, i32* %arrayidx127, align 4, !dbg !2948
  %idxprom128 = sext i32 %101 to i64, !dbg !2947
  %arrayidx129 = getelementptr inbounds i32, i32* %98, i64 %idxprom128, !dbg !2947
  %102 = load i32, i32* %arrayidx129, align 4, !dbg !2950
  %add130 = add nsw i32 %102, 12, !dbg !2950
  store i32 %add130, i32* %arrayidx129, align 4, !dbg !2950
  br label %if.end, !dbg !2951

if.end:                                           ; preds = %if.then, %for.body11
  br label %for.inc131, !dbg !2952

for.inc131:                                       ; preds = %if.end
  %103 = load i32, i32* %i, align 4, !dbg !2953
  %inc132 = add nsw i32 %103, 1, !dbg !2953
  store i32 %inc132, i32* %i, align 4, !dbg !2953
  %104 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !2954
  %incdec.ptr = getelementptr inbounds %struct.MFace, %struct.MFace* %104, i32 1, !dbg !2954
  store %struct.MFace* %incdec.ptr, %struct.MFace** %mf, align 8, !dbg !2954
  br label %for.cond8, !dbg !2955, !llvm.loop !2956

for.end133:                                       ; preds = %for.cond8
  %105 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !2958
  %106 = load %struct.MTFace**, %struct.MTFace*** %mtface_base, align 8, !dbg !2959
  %107 = bitcast %struct.MTFace** %106 to i8*, !dbg !2959
  call void %105(i8* %107), !dbg !2958
  ret void, !dbg !2960
}

; Function Attrs: noinline nounwind uwtable
define internal void @GPU_buffer_copy_edge(%struct.DerivedMesh* %dm, float* %varray_, i32* %UNUSED_index, i32* %UNUSED_mat_orig_to_new, i8* %UNUSED_user) #0 !dbg !2961 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %varray_.addr = alloca float*, align 8
  %UNUSED_index.addr = alloca i32*, align 8
  %UNUSED_mat_orig_to_new.addr = alloca i32*, align 8
  %UNUSED_user.addr = alloca i8*, align 8
  %medge = alloca %struct.MEdge*, align 8
  %varray = alloca i32*, align 8
  %i = alloca i32, align 4
  %totedge = alloca i32, align 4
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !2962, metadata !DIExpression()), !dbg !2963
  store float* %varray_, float** %varray_.addr, align 8
  call void @llvm.dbg.declare(metadata float** %varray_.addr, metadata !2964, metadata !DIExpression()), !dbg !2965
  store i32* %UNUSED_index, i32** %UNUSED_index.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %UNUSED_index.addr, metadata !2966, metadata !DIExpression()), !dbg !2967
  store i32* %UNUSED_mat_orig_to_new, i32** %UNUSED_mat_orig_to_new.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %UNUSED_mat_orig_to_new.addr, metadata !2968, metadata !DIExpression()), !dbg !2969
  store i8* %UNUSED_user, i8** %UNUSED_user.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %UNUSED_user.addr, metadata !2970, metadata !DIExpression()), !dbg !2971
  call void @llvm.dbg.declare(metadata %struct.MEdge** %medge, metadata !2972, metadata !DIExpression()), !dbg !2975
  call void @llvm.dbg.declare(metadata i32** %varray, metadata !2976, metadata !DIExpression()), !dbg !2977
  %0 = load float*, float** %varray_.addr, align 8, !dbg !2978
  %1 = bitcast float* %0 to i32*, !dbg !2979
  store i32* %1, i32** %varray, align 8, !dbg !2977
  call void @llvm.dbg.declare(metadata i32* %i, metadata !2980, metadata !DIExpression()), !dbg !2981
  call void @llvm.dbg.declare(metadata i32* %totedge, metadata !2982, metadata !DIExpression()), !dbg !2983
  %2 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !2984
  %getEdgeArray = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %2, i32 0, i32 32, !dbg !2985
  %3 = load %struct.MEdge* (%struct.DerivedMesh*)*, %struct.MEdge* (%struct.DerivedMesh*)** %getEdgeArray, align 8, !dbg !2985
  %4 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !2986
  %call = call %struct.MEdge* %3(%struct.DerivedMesh* %4), !dbg !2984
  store %struct.MEdge* %call, %struct.MEdge** %medge, align 8, !dbg !2987
  %5 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !2988
  %getNumEdges = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %5, i32 0, i32 24, !dbg !2989
  %6 = load i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)** %getNumEdges, align 8, !dbg !2989
  %7 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !2990
  %call1 = call i32 %6(%struct.DerivedMesh* %7), !dbg !2988
  store i32 %call1, i32* %totedge, align 4, !dbg !2991
  store i32 0, i32* %i, align 4, !dbg !2992
  br label %for.cond, !dbg !2994

for.cond:                                         ; preds = %for.inc, %entry
  %8 = load i32, i32* %i, align 4, !dbg !2995
  %9 = load i32, i32* %totedge, align 4, !dbg !2997
  %cmp = icmp slt i32 %8, %9, !dbg !2998
  br i1 %cmp, label %for.body, label %for.end, !dbg !2999

for.body:                                         ; preds = %for.cond
  %10 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3000
  %drawObject = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %10, i32 0, i32 13, !dbg !3002
  %11 = load %struct.GPUDrawObject*, %struct.GPUDrawObject** %drawObject, align 8, !dbg !3002
  %vert_points = getelementptr inbounds %struct.GPUDrawObject, %struct.GPUDrawObject* %11, i32 0, i32 7, !dbg !3003
  %12 = load %struct.GPUVertPointLink*, %struct.GPUVertPointLink** %vert_points, align 8, !dbg !3003
  %13 = load %struct.MEdge*, %struct.MEdge** %medge, align 8, !dbg !3004
  %v1 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %13, i32 0, i32 0, !dbg !3005
  %14 = load i32, i32* %v1, align 4, !dbg !3005
  %idxprom = zext i32 %14 to i64, !dbg !3000
  %arrayidx = getelementptr inbounds %struct.GPUVertPointLink, %struct.GPUVertPointLink* %12, i64 %idxprom, !dbg !3000
  %point_index = getelementptr inbounds %struct.GPUVertPointLink, %struct.GPUVertPointLink* %arrayidx, i32 0, i32 0, !dbg !3006
  %15 = load i32, i32* %point_index, align 4, !dbg !3006
  %16 = load i32*, i32** %varray, align 8, !dbg !3007
  %17 = load i32, i32* %i, align 4, !dbg !3008
  %mul = mul nsw i32 %17, 2, !dbg !3009
  %idxprom2 = sext i32 %mul to i64, !dbg !3007
  %arrayidx3 = getelementptr inbounds i32, i32* %16, i64 %idxprom2, !dbg !3007
  store i32 %15, i32* %arrayidx3, align 4, !dbg !3010
  %18 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3011
  %drawObject4 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %18, i32 0, i32 13, !dbg !3012
  %19 = load %struct.GPUDrawObject*, %struct.GPUDrawObject** %drawObject4, align 8, !dbg !3012
  %vert_points5 = getelementptr inbounds %struct.GPUDrawObject, %struct.GPUDrawObject* %19, i32 0, i32 7, !dbg !3013
  %20 = load %struct.GPUVertPointLink*, %struct.GPUVertPointLink** %vert_points5, align 8, !dbg !3013
  %21 = load %struct.MEdge*, %struct.MEdge** %medge, align 8, !dbg !3014
  %v2 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %21, i32 0, i32 1, !dbg !3015
  %22 = load i32, i32* %v2, align 4, !dbg !3015
  %idxprom6 = zext i32 %22 to i64, !dbg !3011
  %arrayidx7 = getelementptr inbounds %struct.GPUVertPointLink, %struct.GPUVertPointLink* %20, i64 %idxprom6, !dbg !3011
  %point_index8 = getelementptr inbounds %struct.GPUVertPointLink, %struct.GPUVertPointLink* %arrayidx7, i32 0, i32 0, !dbg !3016
  %23 = load i32, i32* %point_index8, align 4, !dbg !3016
  %24 = load i32*, i32** %varray, align 8, !dbg !3017
  %25 = load i32, i32* %i, align 4, !dbg !3018
  %mul9 = mul nsw i32 %25, 2, !dbg !3019
  %add = add nsw i32 %mul9, 1, !dbg !3020
  %idxprom10 = sext i32 %add to i64, !dbg !3017
  %arrayidx11 = getelementptr inbounds i32, i32* %24, i64 %idxprom10, !dbg !3017
  store i32 %23, i32* %arrayidx11, align 4, !dbg !3021
  br label %for.inc, !dbg !3022

for.inc:                                          ; preds = %for.body
  %26 = load i32, i32* %i, align 4, !dbg !3023
  %inc = add nsw i32 %26, 1, !dbg !3023
  store i32 %inc, i32* %i, align 4, !dbg !3023
  %27 = load %struct.MEdge*, %struct.MEdge** %medge, align 8, !dbg !3024
  %incdec.ptr = getelementptr inbounds %struct.MEdge, %struct.MEdge* %27, i32 1, !dbg !3024
  store %struct.MEdge* %incdec.ptr, %struct.MEdge** %medge, align 8, !dbg !3024
  br label %for.cond, !dbg !3025, !llvm.loop !3026

for.end:                                          ; preds = %for.cond
  ret void, !dbg !3028
}

; Function Attrs: noinline nounwind uwtable
define internal void @GPU_buffer_copy_uvedge(%struct.DerivedMesh* %dm, float* %varray, i32* %UNUSED_index, i32* %UNUSED_mat_orig_to_new, i8* %UNUSED_user) #0 !dbg !3029 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %varray.addr = alloca float*, align 8
  %UNUSED_index.addr = alloca i32*, align 8
  %UNUSED_mat_orig_to_new.addr = alloca i32*, align 8
  %UNUSED_user.addr = alloca i8*, align 8
  %tf = alloca %struct.MTFace*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %mf = alloca %struct.MFace, align 4
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !3030, metadata !DIExpression()), !dbg !3031
  store float* %varray, float** %varray.addr, align 8
  call void @llvm.dbg.declare(metadata float** %varray.addr, metadata !3032, metadata !DIExpression()), !dbg !3033
  store i32* %UNUSED_index, i32** %UNUSED_index.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %UNUSED_index.addr, metadata !3034, metadata !DIExpression()), !dbg !3035
  store i32* %UNUSED_mat_orig_to_new, i32** %UNUSED_mat_orig_to_new.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %UNUSED_mat_orig_to_new.addr, metadata !3036, metadata !DIExpression()), !dbg !3037
  store i8* %UNUSED_user, i8** %UNUSED_user.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %UNUSED_user.addr, metadata !3038, metadata !DIExpression()), !dbg !3039
  call void @llvm.dbg.declare(metadata %struct.MTFace** %tf, metadata !3040, metadata !DIExpression()), !dbg !3041
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3042
  %call = call i8* @DM_get_tessface_data_layer(%struct.DerivedMesh* %0, i32 5), !dbg !3043
  %1 = bitcast i8* %call to %struct.MTFace*, !dbg !3043
  store %struct.MTFace* %1, %struct.MTFace** %tf, align 8, !dbg !3041
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3044, metadata !DIExpression()), !dbg !3045
  call void @llvm.dbg.declare(metadata i32* %j, metadata !3046, metadata !DIExpression()), !dbg !3047
  store i32 0, i32* %j, align 4, !dbg !3047
  %2 = load %struct.MTFace*, %struct.MTFace** %tf, align 8, !dbg !3048
  %tobool = icmp ne %struct.MTFace* %2, null, !dbg !3048
  br i1 %tobool, label %if.end, label %if.then, !dbg !3050

if.then:                                          ; preds = %entry
  br label %for.end, !dbg !3051

if.end:                                           ; preds = %entry
  store i32 0, i32* %i, align 4, !dbg !3052
  br label %for.cond, !dbg !3054

for.cond:                                         ; preds = %for.inc, %if.end
  %3 = load i32, i32* %i, align 4, !dbg !3055
  %4 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3057
  %numTessFaceData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %4, i32 0, i32 7, !dbg !3058
  %5 = load i32, i32* %numTessFaceData, align 8, !dbg !3058
  %cmp = icmp slt i32 %3, %5, !dbg !3059
  br i1 %cmp, label %for.body, label %for.end, !dbg !3060

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.MFace* %mf, metadata !3061, metadata !DIExpression()), !dbg !3063
  %6 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3064
  %getTessFace = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %6, i32 0, i32 30, !dbg !3065
  %7 = load void (%struct.DerivedMesh*, i32, %struct.MFace*)*, void (%struct.DerivedMesh*, i32, %struct.MFace*)** %getTessFace, align 8, !dbg !3065
  %8 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3066
  %9 = load i32, i32* %i, align 4, !dbg !3067
  call void %7(%struct.DerivedMesh* %8, i32 %9, %struct.MFace* %mf), !dbg !3064
  %10 = load float*, float** %varray.addr, align 8, !dbg !3068
  %11 = load i32, i32* %j, align 4, !dbg !3069
  %idxprom = sext i32 %11 to i64, !dbg !3068
  %arrayidx = getelementptr inbounds float, float* %10, i64 %idxprom, !dbg !3068
  %12 = load %struct.MTFace*, %struct.MTFace** %tf, align 8, !dbg !3070
  %uv = getelementptr inbounds %struct.MTFace, %struct.MTFace* %12, i32 0, i32 0, !dbg !3071
  %arrayidx1 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv, i64 0, i64 0, !dbg !3070
  %arraydecay = getelementptr inbounds [2 x float], [2 x float]* %arrayidx1, i64 0, i64 0, !dbg !3070
  call void @copy_v2_v2(float* %arrayidx, float* %arraydecay), !dbg !3072
  %13 = load float*, float** %varray.addr, align 8, !dbg !3073
  %14 = load i32, i32* %j, align 4, !dbg !3074
  %add = add nsw i32 %14, 2, !dbg !3075
  %idxprom2 = sext i32 %add to i64, !dbg !3073
  %arrayidx3 = getelementptr inbounds float, float* %13, i64 %idxprom2, !dbg !3073
  %15 = load %struct.MTFace*, %struct.MTFace** %tf, align 8, !dbg !3076
  %uv4 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %15, i32 0, i32 0, !dbg !3077
  %arrayidx5 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv4, i64 0, i64 1, !dbg !3076
  %arraydecay6 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx5, i64 0, i64 0, !dbg !3076
  call void @copy_v2_v2(float* %arrayidx3, float* %arraydecay6), !dbg !3078
  %16 = load float*, float** %varray.addr, align 8, !dbg !3079
  %17 = load i32, i32* %j, align 4, !dbg !3080
  %add7 = add nsw i32 %17, 4, !dbg !3081
  %idxprom8 = sext i32 %add7 to i64, !dbg !3079
  %arrayidx9 = getelementptr inbounds float, float* %16, i64 %idxprom8, !dbg !3079
  %18 = load %struct.MTFace*, %struct.MTFace** %tf, align 8, !dbg !3082
  %uv10 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %18, i32 0, i32 0, !dbg !3083
  %arrayidx11 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv10, i64 0, i64 1, !dbg !3082
  %arraydecay12 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx11, i64 0, i64 0, !dbg !3082
  call void @copy_v2_v2(float* %arrayidx9, float* %arraydecay12), !dbg !3084
  %19 = load float*, float** %varray.addr, align 8, !dbg !3085
  %20 = load i32, i32* %j, align 4, !dbg !3086
  %add13 = add nsw i32 %20, 6, !dbg !3087
  %idxprom14 = sext i32 %add13 to i64, !dbg !3085
  %arrayidx15 = getelementptr inbounds float, float* %19, i64 %idxprom14, !dbg !3085
  %21 = load %struct.MTFace*, %struct.MTFace** %tf, align 8, !dbg !3088
  %uv16 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %21, i32 0, i32 0, !dbg !3089
  %arrayidx17 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv16, i64 0, i64 2, !dbg !3088
  %arraydecay18 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx17, i64 0, i64 0, !dbg !3088
  call void @copy_v2_v2(float* %arrayidx15, float* %arraydecay18), !dbg !3090
  %v4 = getelementptr inbounds %struct.MFace, %struct.MFace* %mf, i32 0, i32 3, !dbg !3091
  %22 = load i32, i32* %v4, align 4, !dbg !3091
  %tobool19 = icmp ne i32 %22, 0, !dbg !3093
  br i1 %tobool19, label %if.else, label %if.then20, !dbg !3094

if.then20:                                        ; preds = %for.body
  %23 = load float*, float** %varray.addr, align 8, !dbg !3095
  %24 = load i32, i32* %j, align 4, !dbg !3097
  %add21 = add nsw i32 %24, 8, !dbg !3098
  %idxprom22 = sext i32 %add21 to i64, !dbg !3095
  %arrayidx23 = getelementptr inbounds float, float* %23, i64 %idxprom22, !dbg !3095
  %25 = load %struct.MTFace*, %struct.MTFace** %tf, align 8, !dbg !3099
  %uv24 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %25, i32 0, i32 0, !dbg !3100
  %arrayidx25 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv24, i64 0, i64 2, !dbg !3099
  %arraydecay26 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx25, i64 0, i64 0, !dbg !3099
  call void @copy_v2_v2(float* %arrayidx23, float* %arraydecay26), !dbg !3101
  %26 = load float*, float** %varray.addr, align 8, !dbg !3102
  %27 = load i32, i32* %j, align 4, !dbg !3103
  %add27 = add nsw i32 %27, 10, !dbg !3104
  %idxprom28 = sext i32 %add27 to i64, !dbg !3102
  %arrayidx29 = getelementptr inbounds float, float* %26, i64 %idxprom28, !dbg !3102
  %28 = load %struct.MTFace*, %struct.MTFace** %tf, align 8, !dbg !3105
  %uv30 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %28, i32 0, i32 0, !dbg !3106
  %arrayidx31 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv30, i64 0, i64 0, !dbg !3105
  %arraydecay32 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx31, i64 0, i64 0, !dbg !3105
  call void @copy_v2_v2(float* %arrayidx29, float* %arraydecay32), !dbg !3107
  %29 = load i32, i32* %j, align 4, !dbg !3108
  %add33 = add nsw i32 %29, 12, !dbg !3108
  store i32 %add33, i32* %j, align 4, !dbg !3108
  br label %if.end59, !dbg !3109

if.else:                                          ; preds = %for.body
  %30 = load float*, float** %varray.addr, align 8, !dbg !3110
  %31 = load i32, i32* %j, align 4, !dbg !3112
  %add34 = add nsw i32 %31, 8, !dbg !3113
  %idxprom35 = sext i32 %add34 to i64, !dbg !3110
  %arrayidx36 = getelementptr inbounds float, float* %30, i64 %idxprom35, !dbg !3110
  %32 = load %struct.MTFace*, %struct.MTFace** %tf, align 8, !dbg !3114
  %uv37 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %32, i32 0, i32 0, !dbg !3115
  %arrayidx38 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv37, i64 0, i64 2, !dbg !3114
  %arraydecay39 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx38, i64 0, i64 0, !dbg !3114
  call void @copy_v2_v2(float* %arrayidx36, float* %arraydecay39), !dbg !3116
  %33 = load float*, float** %varray.addr, align 8, !dbg !3117
  %34 = load i32, i32* %j, align 4, !dbg !3118
  %add40 = add nsw i32 %34, 10, !dbg !3119
  %idxprom41 = sext i32 %add40 to i64, !dbg !3117
  %arrayidx42 = getelementptr inbounds float, float* %33, i64 %idxprom41, !dbg !3117
  %35 = load %struct.MTFace*, %struct.MTFace** %tf, align 8, !dbg !3120
  %uv43 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %35, i32 0, i32 0, !dbg !3121
  %arrayidx44 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv43, i64 0, i64 3, !dbg !3120
  %arraydecay45 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx44, i64 0, i64 0, !dbg !3120
  call void @copy_v2_v2(float* %arrayidx42, float* %arraydecay45), !dbg !3122
  %36 = load float*, float** %varray.addr, align 8, !dbg !3123
  %37 = load i32, i32* %j, align 4, !dbg !3124
  %add46 = add nsw i32 %37, 12, !dbg !3125
  %idxprom47 = sext i32 %add46 to i64, !dbg !3123
  %arrayidx48 = getelementptr inbounds float, float* %36, i64 %idxprom47, !dbg !3123
  %38 = load %struct.MTFace*, %struct.MTFace** %tf, align 8, !dbg !3126
  %uv49 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %38, i32 0, i32 0, !dbg !3127
  %arrayidx50 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv49, i64 0, i64 3, !dbg !3126
  %arraydecay51 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx50, i64 0, i64 0, !dbg !3126
  call void @copy_v2_v2(float* %arrayidx48, float* %arraydecay51), !dbg !3128
  %39 = load float*, float** %varray.addr, align 8, !dbg !3129
  %40 = load i32, i32* %j, align 4, !dbg !3130
  %add52 = add nsw i32 %40, 14, !dbg !3131
  %idxprom53 = sext i32 %add52 to i64, !dbg !3129
  %arrayidx54 = getelementptr inbounds float, float* %39, i64 %idxprom53, !dbg !3129
  %41 = load %struct.MTFace*, %struct.MTFace** %tf, align 8, !dbg !3132
  %uv55 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %41, i32 0, i32 0, !dbg !3133
  %arrayidx56 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv55, i64 0, i64 0, !dbg !3132
  %arraydecay57 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx56, i64 0, i64 0, !dbg !3132
  call void @copy_v2_v2(float* %arrayidx54, float* %arraydecay57), !dbg !3134
  %42 = load i32, i32* %j, align 4, !dbg !3135
  %add58 = add nsw i32 %42, 16, !dbg !3135
  store i32 %add58, i32* %j, align 4, !dbg !3135
  br label %if.end59

if.end59:                                         ; preds = %if.else, %if.then20
  br label %for.inc, !dbg !3136

for.inc:                                          ; preds = %if.end59
  %43 = load i32, i32* %i, align 4, !dbg !3137
  %inc = add nsw i32 %43, 1, !dbg !3137
  store i32 %inc, i32* %i, align 4, !dbg !3137
  %44 = load %struct.MTFace*, %struct.MTFace** %tf, align 8, !dbg !3138
  %incdec.ptr = getelementptr inbounds %struct.MTFace, %struct.MTFace* %44, i32 1, !dbg !3138
  store %struct.MTFace* %incdec.ptr, %struct.MTFace** %tf, align 8, !dbg !3138
  br label %for.cond, !dbg !3139, !llvm.loop !3140

for.end:                                          ; preds = %if.then, %for.cond
  ret void, !dbg !3142
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @GPU_vertex_setup(%struct.DerivedMesh* %dm) #0 !dbg !3143 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !3144, metadata !DIExpression()), !dbg !3145
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3146
  %call = call %struct.GPUBuffer* @gpu_buffer_setup_common(%struct.DerivedMesh* %0, i32 0), !dbg !3148
  %tobool = icmp ne %struct.GPUBuffer* %call, null, !dbg !3148
  br i1 %tobool, label %if.end, label %if.then, !dbg !3149

if.then:                                          ; preds = %entry
  br label %return, !dbg !3150

if.end:                                           ; preds = %entry
  call void @glEnableClientState(i32 32884), !dbg !3151
  %1 = load i32, i32* @useVBOs, align 4, !dbg !3152
  %tobool1 = icmp ne i32 %1, 0, !dbg !3152
  br i1 %tobool1, label %if.then2, label %if.else, !dbg !3154

if.then2:                                         ; preds = %if.end
  %2 = load void (i32, i32)*, void (i32, i32)** @__glewBindBufferARB, align 8, !dbg !3155
  %3 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3157
  %drawObject = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %3, i32 0, i32 13, !dbg !3158
  %4 = load %struct.GPUDrawObject*, %struct.GPUDrawObject** %drawObject, align 8, !dbg !3158
  %points = getelementptr inbounds %struct.GPUDrawObject, %struct.GPUDrawObject* %4, i32 0, i32 0, !dbg !3159
  %5 = load %struct.GPUBuffer*, %struct.GPUBuffer** %points, align 8, !dbg !3159
  %id = getelementptr inbounds %struct.GPUBuffer, %struct.GPUBuffer* %5, i32 0, i32 2, !dbg !3160
  %6 = load i32, i32* %id, align 8, !dbg !3160
  call void %2(i32 34962, i32 %6), !dbg !3155
  call void @glVertexPointer(i32 3, i32 5126, i32 0, i8* null), !dbg !3161
  br label %if.end5, !dbg !3162

if.else:                                          ; preds = %if.end
  %7 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3163
  %drawObject3 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %7, i32 0, i32 13, !dbg !3165
  %8 = load %struct.GPUDrawObject*, %struct.GPUDrawObject** %drawObject3, align 8, !dbg !3165
  %points4 = getelementptr inbounds %struct.GPUDrawObject, %struct.GPUDrawObject* %8, i32 0, i32 0, !dbg !3166
  %9 = load %struct.GPUBuffer*, %struct.GPUBuffer** %points4, align 8, !dbg !3166
  %pointer = getelementptr inbounds %struct.GPUBuffer, %struct.GPUBuffer* %9, i32 0, i32 1, !dbg !3167
  %10 = load i8*, i8** %pointer, align 8, !dbg !3167
  call void @glVertexPointer(i32 3, i32 5126, i32 0, i8* %10), !dbg !3168
  br label %if.end5

if.end5:                                          ; preds = %if.else, %if.then2
  %11 = load i32, i32* @GLStates, align 4, !dbg !3169
  %or = or i32 %11, 1, !dbg !3169
  store i32 %or, i32* @GLStates, align 4, !dbg !3169
  br label %return, !dbg !3170

return:                                           ; preds = %if.end5, %if.then
  ret void, !dbg !3170
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.GPUBuffer* @gpu_buffer_setup_common(%struct.DerivedMesh* %dm, i32 %type) #0 !dbg !3171 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %type.addr = alloca i32, align 4
  %buf = alloca %struct.GPUBuffer**, align 8
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !3175, metadata !DIExpression()), !dbg !3176
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !3177, metadata !DIExpression()), !dbg !3178
  call void @llvm.dbg.declare(metadata %struct.GPUBuffer*** %buf, metadata !3179, metadata !DIExpression()), !dbg !3180
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3181
  %drawObject = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %0, i32 0, i32 13, !dbg !3183
  %1 = load %struct.GPUDrawObject*, %struct.GPUDrawObject** %drawObject, align 8, !dbg !3183
  %tobool = icmp ne %struct.GPUDrawObject* %1, null, !dbg !3181
  br i1 %tobool, label %if.end, label %if.then, !dbg !3184

if.then:                                          ; preds = %entry
  %2 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3185
  %call = call %struct.GPUDrawObject* @GPU_drawobject_new(%struct.DerivedMesh* %2), !dbg !3186
  %3 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3187
  %drawObject1 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %3, i32 0, i32 13, !dbg !3188
  store %struct.GPUDrawObject* %call, %struct.GPUDrawObject** %drawObject1, align 8, !dbg !3189
  br label %if.end, !dbg !3187

if.end:                                           ; preds = %if.then, %entry
  %4 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3190
  %drawObject2 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %4, i32 0, i32 13, !dbg !3191
  %5 = load %struct.GPUDrawObject*, %struct.GPUDrawObject** %drawObject2, align 8, !dbg !3191
  %6 = load i32, i32* %type.addr, align 4, !dbg !3192
  %call3 = call %struct.GPUBuffer** @gpu_drawobject_buffer_from_type(%struct.GPUDrawObject* %5, i32 %6), !dbg !3193
  store %struct.GPUBuffer** %call3, %struct.GPUBuffer*** %buf, align 8, !dbg !3194
  %7 = load %struct.GPUBuffer**, %struct.GPUBuffer*** %buf, align 8, !dbg !3195
  %8 = load %struct.GPUBuffer*, %struct.GPUBuffer** %7, align 8, !dbg !3197
  %tobool4 = icmp ne %struct.GPUBuffer* %8, null, !dbg !3198
  br i1 %tobool4, label %if.end7, label %if.then5, !dbg !3199

if.then5:                                         ; preds = %if.end
  %9 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3200
  %10 = load i32, i32* %type.addr, align 4, !dbg !3201
  %call6 = call %struct.GPUBuffer* @gpu_buffer_setup_type(%struct.DerivedMesh* %9, i32 %10), !dbg !3202
  %11 = load %struct.GPUBuffer**, %struct.GPUBuffer*** %buf, align 8, !dbg !3203
  store %struct.GPUBuffer* %call6, %struct.GPUBuffer** %11, align 8, !dbg !3204
  br label %if.end7, !dbg !3205

if.end7:                                          ; preds = %if.then5, %if.end
  %12 = load %struct.GPUBuffer**, %struct.GPUBuffer*** %buf, align 8, !dbg !3206
  %13 = load %struct.GPUBuffer*, %struct.GPUBuffer** %12, align 8, !dbg !3207
  ret %struct.GPUBuffer* %13, !dbg !3208
}

declare dso_local void @glEnableClientState(i32) #2

declare dso_local void @glVertexPointer(i32, i32, i32, i8*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @GPU_normal_setup(%struct.DerivedMesh* %dm) #0 !dbg !3209 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !3210, metadata !DIExpression()), !dbg !3211
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3212
  %call = call %struct.GPUBuffer* @gpu_buffer_setup_common(%struct.DerivedMesh* %0, i32 1), !dbg !3214
  %tobool = icmp ne %struct.GPUBuffer* %call, null, !dbg !3214
  br i1 %tobool, label %if.end, label %if.then, !dbg !3215

if.then:                                          ; preds = %entry
  br label %return, !dbg !3216

if.end:                                           ; preds = %entry
  call void @glEnableClientState(i32 32885), !dbg !3217
  %1 = load i32, i32* @useVBOs, align 4, !dbg !3218
  %tobool1 = icmp ne i32 %1, 0, !dbg !3218
  br i1 %tobool1, label %if.then2, label %if.else, !dbg !3220

if.then2:                                         ; preds = %if.end
  %2 = load void (i32, i32)*, void (i32, i32)** @__glewBindBufferARB, align 8, !dbg !3221
  %3 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3223
  %drawObject = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %3, i32 0, i32 13, !dbg !3224
  %4 = load %struct.GPUDrawObject*, %struct.GPUDrawObject** %drawObject, align 8, !dbg !3224
  %normals = getelementptr inbounds %struct.GPUDrawObject, %struct.GPUDrawObject* %4, i32 0, i32 1, !dbg !3225
  %5 = load %struct.GPUBuffer*, %struct.GPUBuffer** %normals, align 8, !dbg !3225
  %id = getelementptr inbounds %struct.GPUBuffer, %struct.GPUBuffer* %5, i32 0, i32 2, !dbg !3226
  %6 = load i32, i32* %id, align 8, !dbg !3226
  call void %2(i32 34962, i32 %6), !dbg !3221
  call void @glNormalPointer(i32 5126, i32 0, i8* null), !dbg !3227
  br label %if.end5, !dbg !3228

if.else:                                          ; preds = %if.end
  %7 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3229
  %drawObject3 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %7, i32 0, i32 13, !dbg !3231
  %8 = load %struct.GPUDrawObject*, %struct.GPUDrawObject** %drawObject3, align 8, !dbg !3231
  %normals4 = getelementptr inbounds %struct.GPUDrawObject, %struct.GPUDrawObject* %8, i32 0, i32 1, !dbg !3232
  %9 = load %struct.GPUBuffer*, %struct.GPUBuffer** %normals4, align 8, !dbg !3232
  %pointer = getelementptr inbounds %struct.GPUBuffer, %struct.GPUBuffer* %9, i32 0, i32 1, !dbg !3233
  %10 = load i8*, i8** %pointer, align 8, !dbg !3233
  call void @glNormalPointer(i32 5126, i32 0, i8* %10), !dbg !3234
  br label %if.end5

if.end5:                                          ; preds = %if.else, %if.then2
  %11 = load i32, i32* @GLStates, align 4, !dbg !3235
  %or = or i32 %11, 2, !dbg !3235
  store i32 %or, i32* @GLStates, align 4, !dbg !3235
  br label %return, !dbg !3236

return:                                           ; preds = %if.end5, %if.then
  ret void, !dbg !3236
}

declare dso_local void @glNormalPointer(i32, i32, i8*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @GPU_uv_setup(%struct.DerivedMesh* %dm) #0 !dbg !3237 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !3238, metadata !DIExpression()), !dbg !3239
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3240
  %call = call %struct.GPUBuffer* @gpu_buffer_setup_common(%struct.DerivedMesh* %0, i32 3), !dbg !3242
  %tobool = icmp ne %struct.GPUBuffer* %call, null, !dbg !3242
  br i1 %tobool, label %if.end, label %if.then, !dbg !3243

if.then:                                          ; preds = %entry
  br label %return, !dbg !3244

if.end:                                           ; preds = %entry
  call void @glEnableClientState(i32 32888), !dbg !3245
  %1 = load i32, i32* @useVBOs, align 4, !dbg !3246
  %tobool1 = icmp ne i32 %1, 0, !dbg !3246
  br i1 %tobool1, label %if.then2, label %if.else, !dbg !3248

if.then2:                                         ; preds = %if.end
  %2 = load void (i32, i32)*, void (i32, i32)** @__glewBindBufferARB, align 8, !dbg !3249
  %3 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3251
  %drawObject = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %3, i32 0, i32 13, !dbg !3252
  %4 = load %struct.GPUDrawObject*, %struct.GPUDrawObject** %drawObject, align 8, !dbg !3252
  %uv = getelementptr inbounds %struct.GPUDrawObject, %struct.GPUDrawObject* %4, i32 0, i32 2, !dbg !3253
  %5 = load %struct.GPUBuffer*, %struct.GPUBuffer** %uv, align 8, !dbg !3253
  %id = getelementptr inbounds %struct.GPUBuffer, %struct.GPUBuffer* %5, i32 0, i32 2, !dbg !3254
  %6 = load i32, i32* %id, align 8, !dbg !3254
  call void %2(i32 34962, i32 %6), !dbg !3249
  call void @glTexCoordPointer(i32 2, i32 5126, i32 0, i8* null), !dbg !3255
  br label %if.end5, !dbg !3256

if.else:                                          ; preds = %if.end
  %7 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3257
  %drawObject3 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %7, i32 0, i32 13, !dbg !3259
  %8 = load %struct.GPUDrawObject*, %struct.GPUDrawObject** %drawObject3, align 8, !dbg !3259
  %uv4 = getelementptr inbounds %struct.GPUDrawObject, %struct.GPUDrawObject* %8, i32 0, i32 2, !dbg !3260
  %9 = load %struct.GPUBuffer*, %struct.GPUBuffer** %uv4, align 8, !dbg !3260
  %pointer = getelementptr inbounds %struct.GPUBuffer, %struct.GPUBuffer* %9, i32 0, i32 1, !dbg !3261
  %10 = load i8*, i8** %pointer, align 8, !dbg !3261
  call void @glTexCoordPointer(i32 2, i32 5126, i32 0, i8* %10), !dbg !3262
  br label %if.end5

if.end5:                                          ; preds = %if.else, %if.then2
  %11 = load i32, i32* @GLStates, align 4, !dbg !3263
  %or = or i32 %11, 4, !dbg !3263
  store i32 %or, i32* @GLStates, align 4, !dbg !3263
  br label %return, !dbg !3264

return:                                           ; preds = %if.end5, %if.then
  ret void, !dbg !3264
}

declare dso_local void @glTexCoordPointer(i32, i32, i32, i8*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @GPU_texpaint_uv_setup(%struct.DerivedMesh* %dm) #0 !dbg !3265 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !3266, metadata !DIExpression()), !dbg !3267
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3268
  %call = call %struct.GPUBuffer* @gpu_buffer_setup_common(%struct.DerivedMesh* %0, i32 4), !dbg !3270
  %tobool = icmp ne %struct.GPUBuffer* %call, null, !dbg !3270
  br i1 %tobool, label %if.end, label %if.then, !dbg !3271

if.then:                                          ; preds = %entry
  br label %return, !dbg !3272

if.end:                                           ; preds = %entry
  call void @glEnableClientState(i32 32888), !dbg !3273
  %1 = load i32, i32* @useVBOs, align 4, !dbg !3274
  %tobool1 = icmp ne i32 %1, 0, !dbg !3274
  br i1 %tobool1, label %if.then2, label %if.else, !dbg !3276

if.then2:                                         ; preds = %if.end
  %2 = load void (i32, i32)*, void (i32, i32)** @__glewBindBufferARB, align 8, !dbg !3277
  %3 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3279
  %drawObject = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %3, i32 0, i32 13, !dbg !3280
  %4 = load %struct.GPUDrawObject*, %struct.GPUDrawObject** %drawObject, align 8, !dbg !3280
  %uv = getelementptr inbounds %struct.GPUDrawObject, %struct.GPUDrawObject* %4, i32 0, i32 2, !dbg !3281
  %5 = load %struct.GPUBuffer*, %struct.GPUBuffer** %uv, align 8, !dbg !3281
  %id = getelementptr inbounds %struct.GPUBuffer, %struct.GPUBuffer* %5, i32 0, i32 2, !dbg !3282
  %6 = load i32, i32* %id, align 8, !dbg !3282
  call void %2(i32 34962, i32 %6), !dbg !3277
  call void @glTexCoordPointer(i32 2, i32 5126, i32 16, i8* null), !dbg !3283
  %7 = load void (i32)*, void (i32)** @__glewClientActiveTexture, align 8, !dbg !3284
  call void %7(i32 33986), !dbg !3284
  call void @glEnableClientState(i32 32888), !dbg !3285
  call void @glTexCoordPointer(i32 2, i32 5126, i32 16, i8* inttoptr (i64 8 to i8*)), !dbg !3286
  %8 = load void (i32)*, void (i32)** @__glewClientActiveTexture, align 8, !dbg !3287
  call void %8(i32 33984), !dbg !3287
  br label %if.end8, !dbg !3288

if.else:                                          ; preds = %if.end
  %9 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3289
  %drawObject3 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %9, i32 0, i32 13, !dbg !3291
  %10 = load %struct.GPUDrawObject*, %struct.GPUDrawObject** %drawObject3, align 8, !dbg !3291
  %uv4 = getelementptr inbounds %struct.GPUDrawObject, %struct.GPUDrawObject* %10, i32 0, i32 2, !dbg !3292
  %11 = load %struct.GPUBuffer*, %struct.GPUBuffer** %uv4, align 8, !dbg !3292
  %pointer = getelementptr inbounds %struct.GPUBuffer, %struct.GPUBuffer* %11, i32 0, i32 1, !dbg !3293
  %12 = load i8*, i8** %pointer, align 8, !dbg !3293
  call void @glTexCoordPointer(i32 2, i32 5126, i32 16, i8* %12), !dbg !3294
  %13 = load void (i32)*, void (i32)** @__glewClientActiveTexture, align 8, !dbg !3295
  call void %13(i32 33986), !dbg !3295
  call void @glEnableClientState(i32 32888), !dbg !3296
  %14 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3297
  %drawObject5 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %14, i32 0, i32 13, !dbg !3298
  %15 = load %struct.GPUDrawObject*, %struct.GPUDrawObject** %drawObject5, align 8, !dbg !3298
  %uv6 = getelementptr inbounds %struct.GPUDrawObject, %struct.GPUDrawObject* %15, i32 0, i32 2, !dbg !3299
  %16 = load %struct.GPUBuffer*, %struct.GPUBuffer** %uv6, align 8, !dbg !3299
  %pointer7 = getelementptr inbounds %struct.GPUBuffer, %struct.GPUBuffer* %16, i32 0, i32 1, !dbg !3300
  %17 = load i8*, i8** %pointer7, align 8, !dbg !3300
  %add.ptr = getelementptr inbounds i8, i8* %17, i64 8, !dbg !3301
  call void @glTexCoordPointer(i32 2, i32 5126, i32 16, i8* %add.ptr), !dbg !3302
  %18 = load void (i32)*, void (i32)** @__glewClientActiveTexture, align 8, !dbg !3303
  call void %18(i32 33984), !dbg !3303
  br label %if.end8

if.end8:                                          ; preds = %if.else, %if.then2
  %19 = load i32, i32* @GLStates, align 4, !dbg !3304
  %or = or i32 %19, 12, !dbg !3304
  store i32 %or, i32* @GLStates, align 4, !dbg !3304
  br label %return, !dbg !3305

return:                                           ; preds = %if.end8, %if.then
  ret void, !dbg !3305
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @GPU_color_setup(%struct.DerivedMesh* %dm, i32 %colType) #0 !dbg !3306 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %colType.addr = alloca i32, align 4
  %buf = alloca %struct.GPUBuffer**, align 8
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !3309, metadata !DIExpression()), !dbg !3310
  store i32 %colType, i32* %colType.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %colType.addr, metadata !3311, metadata !DIExpression()), !dbg !3312
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3313
  %drawObject = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %0, i32 0, i32 13, !dbg !3315
  %1 = load %struct.GPUDrawObject*, %struct.GPUDrawObject** %drawObject, align 8, !dbg !3315
  %tobool = icmp ne %struct.GPUDrawObject* %1, null, !dbg !3313
  br i1 %tobool, label %if.else, label %if.then, !dbg !3316

if.then:                                          ; preds = %entry
  %2 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3317
  %call = call %struct.GPUDrawObject* @GPU_drawobject_new(%struct.DerivedMesh* %2), !dbg !3319
  %3 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3320
  %drawObject1 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %3, i32 0, i32 13, !dbg !3321
  store %struct.GPUDrawObject* %call, %struct.GPUDrawObject** %drawObject1, align 8, !dbg !3322
  %4 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3323
  %dirty = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %4, i32 0, i32 16, !dbg !3324
  %5 = load i32, i32* %dirty, align 8, !dbg !3325
  %and = and i32 %5, -3, !dbg !3325
  store i32 %and, i32* %dirty, align 8, !dbg !3325
  %6 = load i32, i32* %colType.addr, align 4, !dbg !3326
  %7 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3327
  %drawObject2 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %7, i32 0, i32 13, !dbg !3328
  %8 = load %struct.GPUDrawObject*, %struct.GPUDrawObject** %drawObject2, align 8, !dbg !3328
  %colType3 = getelementptr inbounds %struct.GPUDrawObject, %struct.GPUDrawObject* %8, i32 0, i32 8, !dbg !3329
  store i32 %6, i32* %colType3, align 8, !dbg !3330
  br label %if.end16, !dbg !3331

if.else:                                          ; preds = %entry
  %9 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3332
  %dirty4 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %9, i32 0, i32 16, !dbg !3334
  %10 = load i32, i32* %dirty4, align 8, !dbg !3334
  %and5 = and i32 %10, 2, !dbg !3335
  %tobool6 = icmp ne i32 %and5, 0, !dbg !3335
  br i1 %tobool6, label %if.then9, label %lor.lhs.false, !dbg !3336

lor.lhs.false:                                    ; preds = %if.else
  %11 = load i32, i32* %colType.addr, align 4, !dbg !3337
  %12 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3338
  %drawObject7 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %12, i32 0, i32 13, !dbg !3339
  %13 = load %struct.GPUDrawObject*, %struct.GPUDrawObject** %drawObject7, align 8, !dbg !3339
  %colType8 = getelementptr inbounds %struct.GPUDrawObject, %struct.GPUDrawObject* %13, i32 0, i32 8, !dbg !3340
  %14 = load i32, i32* %colType8, align 8, !dbg !3340
  %cmp = icmp ne i32 %11, %14, !dbg !3341
  br i1 %cmp, label %if.then9, label %if.end, !dbg !3342

if.then9:                                         ; preds = %lor.lhs.false, %if.else
  call void @llvm.dbg.declare(metadata %struct.GPUBuffer*** %buf, metadata !3343, metadata !DIExpression()), !dbg !3345
  %15 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3346
  %drawObject10 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %15, i32 0, i32 13, !dbg !3347
  %16 = load %struct.GPUDrawObject*, %struct.GPUDrawObject** %drawObject10, align 8, !dbg !3347
  %call11 = call %struct.GPUBuffer** @gpu_drawobject_buffer_from_type(%struct.GPUDrawObject* %16, i32 2), !dbg !3348
  store %struct.GPUBuffer** %call11, %struct.GPUBuffer*** %buf, align 8, !dbg !3345
  %17 = load %struct.GPUBuffer**, %struct.GPUBuffer*** %buf, align 8, !dbg !3349
  %18 = load %struct.GPUBuffer*, %struct.GPUBuffer** %17, align 8, !dbg !3350
  call void @GPU_buffer_free(%struct.GPUBuffer* %18), !dbg !3351
  %19 = load %struct.GPUBuffer**, %struct.GPUBuffer*** %buf, align 8, !dbg !3352
  store %struct.GPUBuffer* null, %struct.GPUBuffer** %19, align 8, !dbg !3353
  %20 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3354
  %dirty12 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %20, i32 0, i32 16, !dbg !3355
  %21 = load i32, i32* %dirty12, align 8, !dbg !3356
  %and13 = and i32 %21, -3, !dbg !3356
  store i32 %and13, i32* %dirty12, align 8, !dbg !3356
  %22 = load i32, i32* %colType.addr, align 4, !dbg !3357
  %23 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3358
  %drawObject14 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %23, i32 0, i32 13, !dbg !3359
  %24 = load %struct.GPUDrawObject*, %struct.GPUDrawObject** %drawObject14, align 8, !dbg !3359
  %colType15 = getelementptr inbounds %struct.GPUDrawObject, %struct.GPUDrawObject* %24, i32 0, i32 8, !dbg !3360
  store i32 %22, i32* %colType15, align 8, !dbg !3361
  br label %if.end, !dbg !3362

if.end:                                           ; preds = %if.then9, %lor.lhs.false
  br label %if.end16

if.end16:                                         ; preds = %if.end, %if.then
  %25 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3363
  %call17 = call %struct.GPUBuffer* @gpu_buffer_setup_common(%struct.DerivedMesh* %25, i32 2), !dbg !3365
  %tobool18 = icmp ne %struct.GPUBuffer* %call17, null, !dbg !3365
  br i1 %tobool18, label %if.end20, label %if.then19, !dbg !3366

if.then19:                                        ; preds = %if.end16
  br label %return, !dbg !3367

if.end20:                                         ; preds = %if.end16
  call void @glEnableClientState(i32 32886), !dbg !3368
  %26 = load i32, i32* @useVBOs, align 4, !dbg !3369
  %tobool21 = icmp ne i32 %26, 0, !dbg !3369
  br i1 %tobool21, label %if.then22, label %if.else24, !dbg !3371

if.then22:                                        ; preds = %if.end20
  %27 = load void (i32, i32)*, void (i32, i32)** @__glewBindBufferARB, align 8, !dbg !3372
  %28 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3374
  %drawObject23 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %28, i32 0, i32 13, !dbg !3375
  %29 = load %struct.GPUDrawObject*, %struct.GPUDrawObject** %drawObject23, align 8, !dbg !3375
  %colors = getelementptr inbounds %struct.GPUDrawObject, %struct.GPUDrawObject* %29, i32 0, i32 3, !dbg !3376
  %30 = load %struct.GPUBuffer*, %struct.GPUBuffer** %colors, align 8, !dbg !3376
  %id = getelementptr inbounds %struct.GPUBuffer, %struct.GPUBuffer* %30, i32 0, i32 2, !dbg !3377
  %31 = load i32, i32* %id, align 8, !dbg !3377
  call void %27(i32 34962, i32 %31), !dbg !3372
  call void @glColorPointer(i32 3, i32 5121, i32 0, i8* null), !dbg !3378
  br label %if.end27, !dbg !3379

if.else24:                                        ; preds = %if.end20
  %32 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3380
  %drawObject25 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %32, i32 0, i32 13, !dbg !3382
  %33 = load %struct.GPUDrawObject*, %struct.GPUDrawObject** %drawObject25, align 8, !dbg !3382
  %colors26 = getelementptr inbounds %struct.GPUDrawObject, %struct.GPUDrawObject* %33, i32 0, i32 3, !dbg !3383
  %34 = load %struct.GPUBuffer*, %struct.GPUBuffer** %colors26, align 8, !dbg !3383
  %pointer = getelementptr inbounds %struct.GPUBuffer, %struct.GPUBuffer* %34, i32 0, i32 1, !dbg !3384
  %35 = load i8*, i8** %pointer, align 8, !dbg !3384
  call void @glColorPointer(i32 3, i32 5121, i32 0, i8* %35), !dbg !3385
  br label %if.end27

if.end27:                                         ; preds = %if.else24, %if.then22
  %36 = load i32, i32* @GLStates, align 4, !dbg !3386
  %or = or i32 %36, 16, !dbg !3386
  store i32 %or, i32* @GLStates, align 4, !dbg !3386
  br label %return, !dbg !3387

return:                                           ; preds = %if.end27, %if.then19
  ret void, !dbg !3387
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.GPUBuffer** @gpu_drawobject_buffer_from_type(%struct.GPUDrawObject* %gdo, i32 %type) #0 !dbg !3388 {
entry:
  %retval = alloca %struct.GPUBuffer**, align 8
  %gdo.addr = alloca %struct.GPUDrawObject*, align 8
  %type.addr = alloca i32, align 4
  store %struct.GPUDrawObject* %gdo, %struct.GPUDrawObject** %gdo.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GPUDrawObject** %gdo.addr, metadata !3391, metadata !DIExpression()), !dbg !3392
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !3393, metadata !DIExpression()), !dbg !3394
  %0 = load i32, i32* %type.addr, align 4, !dbg !3395
  switch i32 %0, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb1
    i32 2, label %sw.bb2
    i32 3, label %sw.bb3
    i32 4, label %sw.bb4
    i32 5, label %sw.bb6
    i32 6, label %sw.bb7
  ], !dbg !3396

sw.bb:                                            ; preds = %entry
  %1 = load %struct.GPUDrawObject*, %struct.GPUDrawObject** %gdo.addr, align 8, !dbg !3397
  %points = getelementptr inbounds %struct.GPUDrawObject, %struct.GPUDrawObject* %1, i32 0, i32 0, !dbg !3399
  store %struct.GPUBuffer** %points, %struct.GPUBuffer*** %retval, align 8, !dbg !3400
  br label %return, !dbg !3400

sw.bb1:                                           ; preds = %entry
  %2 = load %struct.GPUDrawObject*, %struct.GPUDrawObject** %gdo.addr, align 8, !dbg !3401
  %normals = getelementptr inbounds %struct.GPUDrawObject, %struct.GPUDrawObject* %2, i32 0, i32 1, !dbg !3402
  store %struct.GPUBuffer** %normals, %struct.GPUBuffer*** %retval, align 8, !dbg !3403
  br label %return, !dbg !3403

sw.bb2:                                           ; preds = %entry
  %3 = load %struct.GPUDrawObject*, %struct.GPUDrawObject** %gdo.addr, align 8, !dbg !3404
  %colors = getelementptr inbounds %struct.GPUDrawObject, %struct.GPUDrawObject* %3, i32 0, i32 3, !dbg !3405
  store %struct.GPUBuffer** %colors, %struct.GPUBuffer*** %retval, align 8, !dbg !3406
  br label %return, !dbg !3406

sw.bb3:                                           ; preds = %entry
  %4 = load %struct.GPUDrawObject*, %struct.GPUDrawObject** %gdo.addr, align 8, !dbg !3407
  %uv = getelementptr inbounds %struct.GPUDrawObject, %struct.GPUDrawObject* %4, i32 0, i32 2, !dbg !3408
  store %struct.GPUBuffer** %uv, %struct.GPUBuffer*** %retval, align 8, !dbg !3409
  br label %return, !dbg !3409

sw.bb4:                                           ; preds = %entry
  %5 = load %struct.GPUDrawObject*, %struct.GPUDrawObject** %gdo.addr, align 8, !dbg !3410
  %uv5 = getelementptr inbounds %struct.GPUDrawObject, %struct.GPUDrawObject* %5, i32 0, i32 2, !dbg !3411
  store %struct.GPUBuffer** %uv5, %struct.GPUBuffer*** %retval, align 8, !dbg !3412
  br label %return, !dbg !3412

sw.bb6:                                           ; preds = %entry
  %6 = load %struct.GPUDrawObject*, %struct.GPUDrawObject** %gdo.addr, align 8, !dbg !3413
  %edges = getelementptr inbounds %struct.GPUDrawObject, %struct.GPUDrawObject* %6, i32 0, i32 4, !dbg !3414
  store %struct.GPUBuffer** %edges, %struct.GPUBuffer*** %retval, align 8, !dbg !3415
  br label %return, !dbg !3415

sw.bb7:                                           ; preds = %entry
  %7 = load %struct.GPUDrawObject*, %struct.GPUDrawObject** %gdo.addr, align 8, !dbg !3416
  %uvedges = getelementptr inbounds %struct.GPUDrawObject, %struct.GPUDrawObject* %7, i32 0, i32 5, !dbg !3417
  store %struct.GPUBuffer** %uvedges, %struct.GPUBuffer*** %retval, align 8, !dbg !3418
  br label %return, !dbg !3418

sw.default:                                       ; preds = %entry
  store %struct.GPUBuffer** null, %struct.GPUBuffer*** %retval, align 8, !dbg !3419
  br label %return, !dbg !3419

return:                                           ; preds = %sw.default, %sw.bb7, %sw.bb6, %sw.bb4, %sw.bb3, %sw.bb2, %sw.bb1, %sw.bb
  %8 = load %struct.GPUBuffer**, %struct.GPUBuffer*** %retval, align 8, !dbg !3420
  ret %struct.GPUBuffer** %8, !dbg !3420
}

declare dso_local void @glColorPointer(i32, i32, i32, i8*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @GPU_edge_setup(%struct.DerivedMesh* %dm) #0 !dbg !3421 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !3422, metadata !DIExpression()), !dbg !3423
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3424
  %call = call %struct.GPUBuffer* @gpu_buffer_setup_common(%struct.DerivedMesh* %0, i32 5), !dbg !3426
  %tobool = icmp ne %struct.GPUBuffer* %call, null, !dbg !3426
  br i1 %tobool, label %if.end, label %if.then, !dbg !3427

if.then:                                          ; preds = %entry
  br label %return, !dbg !3428

if.end:                                           ; preds = %entry
  %1 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3429
  %call1 = call %struct.GPUBuffer* @gpu_buffer_setup_common(%struct.DerivedMesh* %1, i32 0), !dbg !3431
  %tobool2 = icmp ne %struct.GPUBuffer* %call1, null, !dbg !3431
  br i1 %tobool2, label %if.end4, label %if.then3, !dbg !3432

if.then3:                                         ; preds = %if.end
  br label %return, !dbg !3433

if.end4:                                          ; preds = %if.end
  call void @glEnableClientState(i32 32884), !dbg !3434
  %2 = load i32, i32* @useVBOs, align 4, !dbg !3435
  %tobool5 = icmp ne i32 %2, 0, !dbg !3435
  br i1 %tobool5, label %if.then6, label %if.else, !dbg !3437

if.then6:                                         ; preds = %if.end4
  %3 = load void (i32, i32)*, void (i32, i32)** @__glewBindBufferARB, align 8, !dbg !3438
  %4 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3440
  %drawObject = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %4, i32 0, i32 13, !dbg !3441
  %5 = load %struct.GPUDrawObject*, %struct.GPUDrawObject** %drawObject, align 8, !dbg !3441
  %points = getelementptr inbounds %struct.GPUDrawObject, %struct.GPUDrawObject* %5, i32 0, i32 0, !dbg !3442
  %6 = load %struct.GPUBuffer*, %struct.GPUBuffer** %points, align 8, !dbg !3442
  %id = getelementptr inbounds %struct.GPUBuffer, %struct.GPUBuffer* %6, i32 0, i32 2, !dbg !3443
  %7 = load i32, i32* %id, align 8, !dbg !3443
  call void %3(i32 34962, i32 %7), !dbg !3438
  call void @glVertexPointer(i32 3, i32 5126, i32 0, i8* null), !dbg !3444
  br label %if.end9, !dbg !3445

if.else:                                          ; preds = %if.end4
  %8 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3446
  %drawObject7 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %8, i32 0, i32 13, !dbg !3448
  %9 = load %struct.GPUDrawObject*, %struct.GPUDrawObject** %drawObject7, align 8, !dbg !3448
  %points8 = getelementptr inbounds %struct.GPUDrawObject, %struct.GPUDrawObject* %9, i32 0, i32 0, !dbg !3449
  %10 = load %struct.GPUBuffer*, %struct.GPUBuffer** %points8, align 8, !dbg !3449
  %pointer = getelementptr inbounds %struct.GPUBuffer, %struct.GPUBuffer* %10, i32 0, i32 1, !dbg !3450
  %11 = load i8*, i8** %pointer, align 8, !dbg !3450
  call void @glVertexPointer(i32 3, i32 5126, i32 0, i8* %11), !dbg !3451
  br label %if.end9

if.end9:                                          ; preds = %if.else, %if.then6
  %12 = load i32, i32* @GLStates, align 4, !dbg !3452
  %or = or i32 %12, 1, !dbg !3452
  store i32 %or, i32* @GLStates, align 4, !dbg !3452
  %13 = load i32, i32* @useVBOs, align 4, !dbg !3453
  %tobool10 = icmp ne i32 %13, 0, !dbg !3453
  br i1 %tobool10, label %if.then11, label %if.end14, !dbg !3455

if.then11:                                        ; preds = %if.end9
  %14 = load void (i32, i32)*, void (i32, i32)** @__glewBindBufferARB, align 8, !dbg !3456
  %15 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3457
  %drawObject12 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %15, i32 0, i32 13, !dbg !3458
  %16 = load %struct.GPUDrawObject*, %struct.GPUDrawObject** %drawObject12, align 8, !dbg !3458
  %edges = getelementptr inbounds %struct.GPUDrawObject, %struct.GPUDrawObject* %16, i32 0, i32 4, !dbg !3459
  %17 = load %struct.GPUBuffer*, %struct.GPUBuffer** %edges, align 8, !dbg !3459
  %id13 = getelementptr inbounds %struct.GPUBuffer, %struct.GPUBuffer* %17, i32 0, i32 2, !dbg !3460
  %18 = load i32, i32* %id13, align 8, !dbg !3460
  call void %14(i32 34963, i32 %18), !dbg !3456
  br label %if.end14, !dbg !3456

if.end14:                                         ; preds = %if.then11, %if.end9
  %19 = load i32, i32* @GLStates, align 4, !dbg !3461
  %or15 = or i32 %19, 32, !dbg !3461
  store i32 %or15, i32* @GLStates, align 4, !dbg !3461
  br label %return, !dbg !3462

return:                                           ; preds = %if.end14, %if.then3, %if.then
  ret void, !dbg !3462
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @GPU_uvedge_setup(%struct.DerivedMesh* %dm) #0 !dbg !3463 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !3464, metadata !DIExpression()), !dbg !3465
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3466
  %call = call %struct.GPUBuffer* @gpu_buffer_setup_common(%struct.DerivedMesh* %0, i32 6), !dbg !3468
  %tobool = icmp ne %struct.GPUBuffer* %call, null, !dbg !3468
  br i1 %tobool, label %if.end, label %if.then, !dbg !3469

if.then:                                          ; preds = %entry
  br label %return, !dbg !3470

if.end:                                           ; preds = %entry
  call void @glEnableClientState(i32 32884), !dbg !3471
  %1 = load i32, i32* @useVBOs, align 4, !dbg !3472
  %tobool1 = icmp ne i32 %1, 0, !dbg !3472
  br i1 %tobool1, label %if.then2, label %if.else, !dbg !3474

if.then2:                                         ; preds = %if.end
  %2 = load void (i32, i32)*, void (i32, i32)** @__glewBindBufferARB, align 8, !dbg !3475
  %3 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3477
  %drawObject = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %3, i32 0, i32 13, !dbg !3478
  %4 = load %struct.GPUDrawObject*, %struct.GPUDrawObject** %drawObject, align 8, !dbg !3478
  %uvedges = getelementptr inbounds %struct.GPUDrawObject, %struct.GPUDrawObject* %4, i32 0, i32 5, !dbg !3479
  %5 = load %struct.GPUBuffer*, %struct.GPUBuffer** %uvedges, align 8, !dbg !3479
  %id = getelementptr inbounds %struct.GPUBuffer, %struct.GPUBuffer* %5, i32 0, i32 2, !dbg !3480
  %6 = load i32, i32* %id, align 8, !dbg !3480
  call void %2(i32 34962, i32 %6), !dbg !3475
  call void @glVertexPointer(i32 2, i32 5126, i32 0, i8* null), !dbg !3481
  br label %if.end5, !dbg !3482

if.else:                                          ; preds = %if.end
  %7 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3483
  %drawObject3 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %7, i32 0, i32 13, !dbg !3485
  %8 = load %struct.GPUDrawObject*, %struct.GPUDrawObject** %drawObject3, align 8, !dbg !3485
  %uvedges4 = getelementptr inbounds %struct.GPUDrawObject, %struct.GPUDrawObject* %8, i32 0, i32 5, !dbg !3486
  %9 = load %struct.GPUBuffer*, %struct.GPUBuffer** %uvedges4, align 8, !dbg !3486
  %pointer = getelementptr inbounds %struct.GPUBuffer, %struct.GPUBuffer* %9, i32 0, i32 1, !dbg !3487
  %10 = load i8*, i8** %pointer, align 8, !dbg !3487
  call void @glVertexPointer(i32 2, i32 5126, i32 0, i8* %10), !dbg !3488
  br label %if.end5

if.end5:                                          ; preds = %if.else, %if.then2
  %11 = load i32, i32* @GLStates, align 4, !dbg !3489
  %or = or i32 %11, 1, !dbg !3489
  store i32 %or, i32* @GLStates, align 4, !dbg !3489
  br label %return, !dbg !3490

return:                                           ; preds = %if.end5, %if.then
  ret void, !dbg !3490
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @GPU_attrib_element_size(%struct.GPUAttrib* %data, i32 %numdata) #0 !dbg !3491 {
entry:
  %data.addr = alloca %struct.GPUAttrib*, align 8
  %numdata.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %elementsize = alloca i32, align 4
  %typesize = alloca i32, align 4
  store %struct.GPUAttrib* %data, %struct.GPUAttrib** %data.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GPUAttrib** %data.addr, metadata !3495, metadata !DIExpression()), !dbg !3496
  store i32 %numdata, i32* %numdata.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %numdata.addr, metadata !3497, metadata !DIExpression()), !dbg !3498
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3499, metadata !DIExpression()), !dbg !3500
  call void @llvm.dbg.declare(metadata i32* %elementsize, metadata !3501, metadata !DIExpression()), !dbg !3502
  store i32 0, i32* %elementsize, align 4, !dbg !3502
  store i32 0, i32* %i, align 4, !dbg !3503
  br label %for.cond, !dbg !3505

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !3506
  %1 = load i32, i32* %numdata.addr, align 4, !dbg !3508
  %cmp = icmp slt i32 %0, %1, !dbg !3509
  br i1 %cmp, label %for.body, label %for.end, !dbg !3510

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %typesize, metadata !3511, metadata !DIExpression()), !dbg !3513
  %2 = load %struct.GPUAttrib*, %struct.GPUAttrib** %data.addr, align 8, !dbg !3514
  %3 = load i32, i32* %i, align 4, !dbg !3515
  %idxprom = sext i32 %3 to i64, !dbg !3514
  %arrayidx = getelementptr inbounds %struct.GPUAttrib, %struct.GPUAttrib* %2, i64 %idxprom, !dbg !3514
  %type = getelementptr inbounds %struct.GPUAttrib, %struct.GPUAttrib* %arrayidx, i32 0, i32 2, !dbg !3516
  %4 = load i32, i32* %type, align 4, !dbg !3516
  %call = call i32 @GPU_typesize(i32 %4), !dbg !3517
  store i32 %call, i32* %typesize, align 4, !dbg !3513
  %5 = load i32, i32* %typesize, align 4, !dbg !3518
  %cmp1 = icmp ne i32 %5, 0, !dbg !3520
  br i1 %cmp1, label %if.then, label %if.end, !dbg !3521

if.then:                                          ; preds = %for.body
  %6 = load i32, i32* %typesize, align 4, !dbg !3522
  %7 = load %struct.GPUAttrib*, %struct.GPUAttrib** %data.addr, align 8, !dbg !3523
  %8 = load i32, i32* %i, align 4, !dbg !3524
  %idxprom2 = sext i32 %8 to i64, !dbg !3523
  %arrayidx3 = getelementptr inbounds %struct.GPUAttrib, %struct.GPUAttrib* %7, i64 %idxprom2, !dbg !3523
  %size = getelementptr inbounds %struct.GPUAttrib, %struct.GPUAttrib* %arrayidx3, i32 0, i32 1, !dbg !3525
  %9 = load i32, i32* %size, align 4, !dbg !3525
  %mul = mul nsw i32 %6, %9, !dbg !3526
  %10 = load i32, i32* %elementsize, align 4, !dbg !3527
  %add = add nsw i32 %10, %mul, !dbg !3527
  store i32 %add, i32* %elementsize, align 4, !dbg !3527
  br label %if.end, !dbg !3528

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc, !dbg !3529

for.inc:                                          ; preds = %if.end
  %11 = load i32, i32* %i, align 4, !dbg !3530
  %inc = add nsw i32 %11, 1, !dbg !3530
  store i32 %inc, i32* %i, align 4, !dbg !3530
  br label %for.cond, !dbg !3531, !llvm.loop !3532

for.end:                                          ; preds = %for.cond
  %12 = load i32, i32* %elementsize, align 4, !dbg !3534
  ret i32 %12, !dbg !3535
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @GPU_typesize(i32 %type) #0 !dbg !3536 {
entry:
  %retval = alloca i32, align 4
  %type.addr = alloca i32, align 4
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !3539, metadata !DIExpression()), !dbg !3540
  %0 = load i32, i32* %type.addr, align 4, !dbg !3541
  switch i32 %0, label %sw.default [
    i32 5126, label %sw.bb
    i32 5124, label %sw.bb1
    i32 5125, label %sw.bb2
    i32 5120, label %sw.bb3
    i32 5121, label %sw.bb4
  ], !dbg !3542

sw.bb:                                            ; preds = %entry
  store i32 4, i32* %retval, align 4, !dbg !3543
  br label %return, !dbg !3543

sw.bb1:                                           ; preds = %entry
  store i32 4, i32* %retval, align 4, !dbg !3545
  br label %return, !dbg !3545

sw.bb2:                                           ; preds = %entry
  store i32 4, i32* %retval, align 4, !dbg !3546
  br label %return, !dbg !3546

sw.bb3:                                           ; preds = %entry
  store i32 1, i32* %retval, align 4, !dbg !3547
  br label %return, !dbg !3547

sw.bb4:                                           ; preds = %entry
  store i32 1, i32* %retval, align 4, !dbg !3548
  br label %return, !dbg !3548

sw.default:                                       ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !3549
  br label %return, !dbg !3549

return:                                           ; preds = %sw.default, %sw.bb4, %sw.bb3, %sw.bb2, %sw.bb1, %sw.bb
  %1 = load i32, i32* %retval, align 4, !dbg !3550
  ret i32 %1, !dbg !3550
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @GPU_interleaved_attrib_setup(%struct.GPUBuffer* %buffer, %struct.GPUAttrib* %data, i32 %numdata) #0 !dbg !3551 {
entry:
  %buffer.addr = alloca %struct.GPUBuffer*, align 8
  %data.addr = alloca %struct.GPUAttrib*, align 8
  %numdata.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %elementsize = alloca i32, align 4
  %offset = alloca i64, align 8
  store %struct.GPUBuffer* %buffer, %struct.GPUBuffer** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GPUBuffer** %buffer.addr, metadata !3554, metadata !DIExpression()), !dbg !3555
  store %struct.GPUAttrib* %data, %struct.GPUAttrib** %data.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GPUAttrib** %data.addr, metadata !3556, metadata !DIExpression()), !dbg !3557
  store i32 %numdata, i32* %numdata.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %numdata.addr, metadata !3558, metadata !DIExpression()), !dbg !3559
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3560, metadata !DIExpression()), !dbg !3561
  call void @llvm.dbg.declare(metadata i32* %elementsize, metadata !3562, metadata !DIExpression()), !dbg !3563
  call void @llvm.dbg.declare(metadata i64* %offset, metadata !3564, metadata !DIExpression()), !dbg !3568
  store i64 0, i64* %offset, align 8, !dbg !3568
  store i32 0, i32* %i, align 4, !dbg !3569
  br label %for.cond, !dbg !3571

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !3572
  %cmp = icmp slt i32 %0, 32, !dbg !3574
  br i1 %cmp, label %for.body, label %for.end, !dbg !3575

for.body:                                         ; preds = %for.cond
  %1 = load i32, i32* %i, align 4, !dbg !3576
  %idxprom = sext i32 %1 to i64, !dbg !3579
  %arrayidx = getelementptr inbounds [32 x %struct.GPUAttrib], [32 x %struct.GPUAttrib]* bitcast (<{ %struct.GPUAttrib, [31 x %struct.GPUAttrib] }>* @attribData to [32 x %struct.GPUAttrib]*), i64 0, i64 %idxprom, !dbg !3579
  %index = getelementptr inbounds %struct.GPUAttrib, %struct.GPUAttrib* %arrayidx, i32 0, i32 0, !dbg !3580
  %2 = load i32, i32* %index, align 4, !dbg !3580
  %cmp1 = icmp ne i32 %2, -1, !dbg !3581
  br i1 %cmp1, label %if.then, label %if.else, !dbg !3582

if.then:                                          ; preds = %for.body
  %3 = load void (i32)*, void (i32)** @__glewDisableVertexAttribArrayARB, align 8, !dbg !3583
  %4 = load i32, i32* %i, align 4, !dbg !3585
  %idxprom2 = sext i32 %4 to i64, !dbg !3586
  %arrayidx3 = getelementptr inbounds [32 x %struct.GPUAttrib], [32 x %struct.GPUAttrib]* bitcast (<{ %struct.GPUAttrib, [31 x %struct.GPUAttrib] }>* @attribData to [32 x %struct.GPUAttrib]*), i64 0, i64 %idxprom2, !dbg !3586
  %index4 = getelementptr inbounds %struct.GPUAttrib, %struct.GPUAttrib* %arrayidx3, i32 0, i32 0, !dbg !3587
  %5 = load i32, i32* %index4, align 4, !dbg !3587
  call void %3(i32 %5), !dbg !3583
  br label %if.end, !dbg !3588

if.else:                                          ; preds = %for.body
  br label %for.end, !dbg !3589

if.end:                                           ; preds = %if.then
  br label %for.inc, !dbg !3590

for.inc:                                          ; preds = %if.end
  %6 = load i32, i32* %i, align 4, !dbg !3591
  %inc = add nsw i32 %6, 1, !dbg !3591
  store i32 %inc, i32* %i, align 4, !dbg !3591
  br label %for.cond, !dbg !3592, !llvm.loop !3593

for.end:                                          ; preds = %if.else, %for.cond
  %7 = load %struct.GPUAttrib*, %struct.GPUAttrib** %data.addr, align 8, !dbg !3595
  %8 = load i32, i32* %numdata.addr, align 4, !dbg !3596
  %call = call i32 @GPU_attrib_element_size(%struct.GPUAttrib* %7, i32 %8), !dbg !3597
  store i32 %call, i32* %elementsize, align 4, !dbg !3598
  %9 = load i32, i32* @useVBOs, align 4, !dbg !3599
  %tobool = icmp ne i32 %9, 0, !dbg !3599
  br i1 %tobool, label %if.then5, label %if.else50, !dbg !3601

if.then5:                                         ; preds = %for.end
  %10 = load void (i32, i32)*, void (i32, i32)** @__glewBindBufferARB, align 8, !dbg !3602
  %11 = load %struct.GPUBuffer*, %struct.GPUBuffer** %buffer.addr, align 8, !dbg !3604
  %id = getelementptr inbounds %struct.GPUBuffer, %struct.GPUBuffer* %11, i32 0, i32 2, !dbg !3605
  %12 = load i32, i32* %id, align 8, !dbg !3605
  call void %10(i32 34962, i32 %12), !dbg !3602
  store i32 0, i32* %i, align 4, !dbg !3606
  br label %for.cond6, !dbg !3608

for.cond6:                                        ; preds = %for.inc44, %if.then5
  %13 = load i32, i32* %i, align 4, !dbg !3609
  %14 = load i32, i32* %numdata.addr, align 4, !dbg !3611
  %cmp7 = icmp slt i32 %13, %14, !dbg !3612
  br i1 %cmp7, label %for.body8, label %for.end46, !dbg !3613

for.body8:                                        ; preds = %for.cond6
  %15 = load void (i32)*, void (i32)** @__glewEnableVertexAttribArrayARB, align 8, !dbg !3614
  %16 = load %struct.GPUAttrib*, %struct.GPUAttrib** %data.addr, align 8, !dbg !3616
  %17 = load i32, i32* %i, align 4, !dbg !3617
  %idxprom9 = sext i32 %17 to i64, !dbg !3616
  %arrayidx10 = getelementptr inbounds %struct.GPUAttrib, %struct.GPUAttrib* %16, i64 %idxprom9, !dbg !3616
  %index11 = getelementptr inbounds %struct.GPUAttrib, %struct.GPUAttrib* %arrayidx10, i32 0, i32 0, !dbg !3618
  %18 = load i32, i32* %index11, align 4, !dbg !3618
  call void %15(i32 %18), !dbg !3614
  %19 = load void (i32, i32, i32, i8, i32, i8*)*, void (i32, i32, i32, i8, i32, i8*)** @__glewVertexAttribPointerARB, align 8, !dbg !3619
  %20 = load %struct.GPUAttrib*, %struct.GPUAttrib** %data.addr, align 8, !dbg !3620
  %21 = load i32, i32* %i, align 4, !dbg !3621
  %idxprom12 = sext i32 %21 to i64, !dbg !3620
  %arrayidx13 = getelementptr inbounds %struct.GPUAttrib, %struct.GPUAttrib* %20, i64 %idxprom12, !dbg !3620
  %index14 = getelementptr inbounds %struct.GPUAttrib, %struct.GPUAttrib* %arrayidx13, i32 0, i32 0, !dbg !3622
  %22 = load i32, i32* %index14, align 4, !dbg !3622
  %23 = load %struct.GPUAttrib*, %struct.GPUAttrib** %data.addr, align 8, !dbg !3623
  %24 = load i32, i32* %i, align 4, !dbg !3624
  %idxprom15 = sext i32 %24 to i64, !dbg !3623
  %arrayidx16 = getelementptr inbounds %struct.GPUAttrib, %struct.GPUAttrib* %23, i64 %idxprom15, !dbg !3623
  %size = getelementptr inbounds %struct.GPUAttrib, %struct.GPUAttrib* %arrayidx16, i32 0, i32 1, !dbg !3625
  %25 = load i32, i32* %size, align 4, !dbg !3625
  %26 = load %struct.GPUAttrib*, %struct.GPUAttrib** %data.addr, align 8, !dbg !3626
  %27 = load i32, i32* %i, align 4, !dbg !3627
  %idxprom17 = sext i32 %27 to i64, !dbg !3626
  %arrayidx18 = getelementptr inbounds %struct.GPUAttrib, %struct.GPUAttrib* %26, i64 %idxprom17, !dbg !3626
  %type = getelementptr inbounds %struct.GPUAttrib, %struct.GPUAttrib* %arrayidx18, i32 0, i32 2, !dbg !3628
  %28 = load i32, i32* %type, align 4, !dbg !3628
  %29 = load i32, i32* %elementsize, align 4, !dbg !3629
  %30 = load i64, i64* %offset, align 8, !dbg !3630
  %31 = inttoptr i64 %30 to i8*, !dbg !3631
  call void %19(i32 %22, i32 %25, i32 %28, i8 zeroext 0, i32 %29, i8* %31), !dbg !3619
  %32 = load %struct.GPUAttrib*, %struct.GPUAttrib** %data.addr, align 8, !dbg !3632
  %33 = load i32, i32* %i, align 4, !dbg !3633
  %idxprom19 = sext i32 %33 to i64, !dbg !3632
  %arrayidx20 = getelementptr inbounds %struct.GPUAttrib, %struct.GPUAttrib* %32, i64 %idxprom19, !dbg !3632
  %size21 = getelementptr inbounds %struct.GPUAttrib, %struct.GPUAttrib* %arrayidx20, i32 0, i32 1, !dbg !3634
  %34 = load i32, i32* %size21, align 4, !dbg !3634
  %35 = load %struct.GPUAttrib*, %struct.GPUAttrib** %data.addr, align 8, !dbg !3635
  %36 = load i32, i32* %i, align 4, !dbg !3636
  %idxprom22 = sext i32 %36 to i64, !dbg !3635
  %arrayidx23 = getelementptr inbounds %struct.GPUAttrib, %struct.GPUAttrib* %35, i64 %idxprom22, !dbg !3635
  %type24 = getelementptr inbounds %struct.GPUAttrib, %struct.GPUAttrib* %arrayidx23, i32 0, i32 2, !dbg !3637
  %37 = load i32, i32* %type24, align 4, !dbg !3637
  %call25 = call i32 @GPU_typesize(i32 %37), !dbg !3638
  %mul = mul nsw i32 %34, %call25, !dbg !3639
  %conv = sext i32 %mul to i64, !dbg !3632
  %38 = load i64, i64* %offset, align 8, !dbg !3640
  %add = add nsw i64 %38, %conv, !dbg !3640
  store i64 %add, i64* %offset, align 8, !dbg !3640
  %39 = load %struct.GPUAttrib*, %struct.GPUAttrib** %data.addr, align 8, !dbg !3641
  %40 = load i32, i32* %i, align 4, !dbg !3642
  %idxprom26 = sext i32 %40 to i64, !dbg !3641
  %arrayidx27 = getelementptr inbounds %struct.GPUAttrib, %struct.GPUAttrib* %39, i64 %idxprom26, !dbg !3641
  %index28 = getelementptr inbounds %struct.GPUAttrib, %struct.GPUAttrib* %arrayidx27, i32 0, i32 0, !dbg !3643
  %41 = load i32, i32* %index28, align 4, !dbg !3643
  %42 = load i32, i32* %i, align 4, !dbg !3644
  %idxprom29 = sext i32 %42 to i64, !dbg !3645
  %arrayidx30 = getelementptr inbounds [32 x %struct.GPUAttrib], [32 x %struct.GPUAttrib]* bitcast (<{ %struct.GPUAttrib, [31 x %struct.GPUAttrib] }>* @attribData to [32 x %struct.GPUAttrib]*), i64 0, i64 %idxprom29, !dbg !3645
  %index31 = getelementptr inbounds %struct.GPUAttrib, %struct.GPUAttrib* %arrayidx30, i32 0, i32 0, !dbg !3646
  store i32 %41, i32* %index31, align 4, !dbg !3647
  %43 = load %struct.GPUAttrib*, %struct.GPUAttrib** %data.addr, align 8, !dbg !3648
  %44 = load i32, i32* %i, align 4, !dbg !3649
  %idxprom32 = sext i32 %44 to i64, !dbg !3648
  %arrayidx33 = getelementptr inbounds %struct.GPUAttrib, %struct.GPUAttrib* %43, i64 %idxprom32, !dbg !3648
  %size34 = getelementptr inbounds %struct.GPUAttrib, %struct.GPUAttrib* %arrayidx33, i32 0, i32 1, !dbg !3650
  %45 = load i32, i32* %size34, align 4, !dbg !3650
  %46 = load i32, i32* %i, align 4, !dbg !3651
  %idxprom35 = sext i32 %46 to i64, !dbg !3652
  %arrayidx36 = getelementptr inbounds [32 x %struct.GPUAttrib], [32 x %struct.GPUAttrib]* bitcast (<{ %struct.GPUAttrib, [31 x %struct.GPUAttrib] }>* @attribData to [32 x %struct.GPUAttrib]*), i64 0, i64 %idxprom35, !dbg !3652
  %size37 = getelementptr inbounds %struct.GPUAttrib, %struct.GPUAttrib* %arrayidx36, i32 0, i32 1, !dbg !3653
  store i32 %45, i32* %size37, align 4, !dbg !3654
  %47 = load %struct.GPUAttrib*, %struct.GPUAttrib** %data.addr, align 8, !dbg !3655
  %48 = load i32, i32* %i, align 4, !dbg !3656
  %idxprom38 = sext i32 %48 to i64, !dbg !3655
  %arrayidx39 = getelementptr inbounds %struct.GPUAttrib, %struct.GPUAttrib* %47, i64 %idxprom38, !dbg !3655
  %type40 = getelementptr inbounds %struct.GPUAttrib, %struct.GPUAttrib* %arrayidx39, i32 0, i32 2, !dbg !3657
  %49 = load i32, i32* %type40, align 4, !dbg !3657
  %50 = load i32, i32* %i, align 4, !dbg !3658
  %idxprom41 = sext i32 %50 to i64, !dbg !3659
  %arrayidx42 = getelementptr inbounds [32 x %struct.GPUAttrib], [32 x %struct.GPUAttrib]* bitcast (<{ %struct.GPUAttrib, [31 x %struct.GPUAttrib] }>* @attribData to [32 x %struct.GPUAttrib]*), i64 0, i64 %idxprom41, !dbg !3659
  %type43 = getelementptr inbounds %struct.GPUAttrib, %struct.GPUAttrib* %arrayidx42, i32 0, i32 2, !dbg !3660
  store i32 %49, i32* %type43, align 4, !dbg !3661
  br label %for.inc44, !dbg !3662

for.inc44:                                        ; preds = %for.body8
  %51 = load i32, i32* %i, align 4, !dbg !3663
  %inc45 = add nsw i32 %51, 1, !dbg !3663
  store i32 %inc45, i32* %i, align 4, !dbg !3663
  br label %for.cond6, !dbg !3664, !llvm.loop !3665

for.end46:                                        ; preds = %for.cond6
  %52 = load i32, i32* %numdata.addr, align 4, !dbg !3667
  %idxprom47 = sext i32 %52 to i64, !dbg !3668
  %arrayidx48 = getelementptr inbounds [32 x %struct.GPUAttrib], [32 x %struct.GPUAttrib]* bitcast (<{ %struct.GPUAttrib, [31 x %struct.GPUAttrib] }>* @attribData to [32 x %struct.GPUAttrib]*), i64 0, i64 %idxprom47, !dbg !3668
  %index49 = getelementptr inbounds %struct.GPUAttrib, %struct.GPUAttrib* %arrayidx48, i32 0, i32 0, !dbg !3669
  store i32 -1, i32* %index49, align 4, !dbg !3670
  br label %if.end80, !dbg !3671

if.else50:                                        ; preds = %for.end
  store i32 0, i32* %i, align 4, !dbg !3672
  br label %for.cond51, !dbg !3675

for.cond51:                                       ; preds = %for.inc77, %if.else50
  %53 = load i32, i32* %i, align 4, !dbg !3676
  %54 = load i32, i32* %numdata.addr, align 4, !dbg !3678
  %cmp52 = icmp slt i32 %53, %54, !dbg !3679
  br i1 %cmp52, label %for.body54, label %for.end79, !dbg !3680

for.body54:                                       ; preds = %for.cond51
  %55 = load void (i32)*, void (i32)** @__glewEnableVertexAttribArrayARB, align 8, !dbg !3681
  %56 = load %struct.GPUAttrib*, %struct.GPUAttrib** %data.addr, align 8, !dbg !3683
  %57 = load i32, i32* %i, align 4, !dbg !3684
  %idxprom55 = sext i32 %57 to i64, !dbg !3683
  %arrayidx56 = getelementptr inbounds %struct.GPUAttrib, %struct.GPUAttrib* %56, i64 %idxprom55, !dbg !3683
  %index57 = getelementptr inbounds %struct.GPUAttrib, %struct.GPUAttrib* %arrayidx56, i32 0, i32 0, !dbg !3685
  %58 = load i32, i32* %index57, align 4, !dbg !3685
  call void %55(i32 %58), !dbg !3681
  %59 = load void (i32, i32, i32, i8, i32, i8*)*, void (i32, i32, i32, i8, i32, i8*)** @__glewVertexAttribPointerARB, align 8, !dbg !3686
  %60 = load %struct.GPUAttrib*, %struct.GPUAttrib** %data.addr, align 8, !dbg !3687
  %61 = load i32, i32* %i, align 4, !dbg !3688
  %idxprom58 = sext i32 %61 to i64, !dbg !3687
  %arrayidx59 = getelementptr inbounds %struct.GPUAttrib, %struct.GPUAttrib* %60, i64 %idxprom58, !dbg !3687
  %index60 = getelementptr inbounds %struct.GPUAttrib, %struct.GPUAttrib* %arrayidx59, i32 0, i32 0, !dbg !3689
  %62 = load i32, i32* %index60, align 4, !dbg !3689
  %63 = load %struct.GPUAttrib*, %struct.GPUAttrib** %data.addr, align 8, !dbg !3690
  %64 = load i32, i32* %i, align 4, !dbg !3691
  %idxprom61 = sext i32 %64 to i64, !dbg !3690
  %arrayidx62 = getelementptr inbounds %struct.GPUAttrib, %struct.GPUAttrib* %63, i64 %idxprom61, !dbg !3690
  %size63 = getelementptr inbounds %struct.GPUAttrib, %struct.GPUAttrib* %arrayidx62, i32 0, i32 1, !dbg !3692
  %65 = load i32, i32* %size63, align 4, !dbg !3692
  %66 = load %struct.GPUAttrib*, %struct.GPUAttrib** %data.addr, align 8, !dbg !3693
  %67 = load i32, i32* %i, align 4, !dbg !3694
  %idxprom64 = sext i32 %67 to i64, !dbg !3693
  %arrayidx65 = getelementptr inbounds %struct.GPUAttrib, %struct.GPUAttrib* %66, i64 %idxprom64, !dbg !3693
  %type66 = getelementptr inbounds %struct.GPUAttrib, %struct.GPUAttrib* %arrayidx65, i32 0, i32 2, !dbg !3695
  %68 = load i32, i32* %type66, align 4, !dbg !3695
  %69 = load i32, i32* %elementsize, align 4, !dbg !3696
  %70 = load %struct.GPUBuffer*, %struct.GPUBuffer** %buffer.addr, align 8, !dbg !3697
  %pointer = getelementptr inbounds %struct.GPUBuffer, %struct.GPUBuffer* %70, i32 0, i32 1, !dbg !3698
  %71 = load i8*, i8** %pointer, align 8, !dbg !3698
  %72 = load i64, i64* %offset, align 8, !dbg !3699
  %add.ptr = getelementptr inbounds i8, i8* %71, i64 %72, !dbg !3700
  call void %59(i32 %62, i32 %65, i32 %68, i8 zeroext 0, i32 %69, i8* %add.ptr), !dbg !3686
  %73 = load %struct.GPUAttrib*, %struct.GPUAttrib** %data.addr, align 8, !dbg !3701
  %74 = load i32, i32* %i, align 4, !dbg !3702
  %idxprom67 = sext i32 %74 to i64, !dbg !3701
  %arrayidx68 = getelementptr inbounds %struct.GPUAttrib, %struct.GPUAttrib* %73, i64 %idxprom67, !dbg !3701
  %size69 = getelementptr inbounds %struct.GPUAttrib, %struct.GPUAttrib* %arrayidx68, i32 0, i32 1, !dbg !3703
  %75 = load i32, i32* %size69, align 4, !dbg !3703
  %76 = load %struct.GPUAttrib*, %struct.GPUAttrib** %data.addr, align 8, !dbg !3704
  %77 = load i32, i32* %i, align 4, !dbg !3705
  %idxprom70 = sext i32 %77 to i64, !dbg !3704
  %arrayidx71 = getelementptr inbounds %struct.GPUAttrib, %struct.GPUAttrib* %76, i64 %idxprom70, !dbg !3704
  %type72 = getelementptr inbounds %struct.GPUAttrib, %struct.GPUAttrib* %arrayidx71, i32 0, i32 2, !dbg !3706
  %78 = load i32, i32* %type72, align 4, !dbg !3706
  %call73 = call i32 @GPU_typesize(i32 %78), !dbg !3707
  %mul74 = mul nsw i32 %75, %call73, !dbg !3708
  %conv75 = sext i32 %mul74 to i64, !dbg !3701
  %79 = load i64, i64* %offset, align 8, !dbg !3709
  %add76 = add nsw i64 %79, %conv75, !dbg !3709
  store i64 %add76, i64* %offset, align 8, !dbg !3709
  br label %for.inc77, !dbg !3710

for.inc77:                                        ; preds = %for.body54
  %80 = load i32, i32* %i, align 4, !dbg !3711
  %inc78 = add nsw i32 %80, 1, !dbg !3711
  store i32 %inc78, i32* %i, align 4, !dbg !3711
  br label %for.cond51, !dbg !3712, !llvm.loop !3713

for.end79:                                        ; preds = %for.cond51
  br label %if.end80

if.end80:                                         ; preds = %for.end79, %for.end46
  ret void, !dbg !3715
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @GPU_buffer_unbind() #0 !dbg !3716 {
entry:
  %i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3717, metadata !DIExpression()), !dbg !3718
  %0 = load i32, i32* @GLStates, align 4, !dbg !3719
  %and = and i32 %0, 1, !dbg !3721
  %tobool = icmp ne i32 %and, 0, !dbg !3721
  br i1 %tobool, label %if.then, label %if.end, !dbg !3722

if.then:                                          ; preds = %entry
  call void @glDisableClientState(i32 32884), !dbg !3723
  br label %if.end, !dbg !3723

if.end:                                           ; preds = %if.then, %entry
  %1 = load i32, i32* @GLStates, align 4, !dbg !3724
  %and1 = and i32 %1, 2, !dbg !3726
  %tobool2 = icmp ne i32 %and1, 0, !dbg !3726
  br i1 %tobool2, label %if.then3, label %if.end4, !dbg !3727

if.then3:                                         ; preds = %if.end
  call void @glDisableClientState(i32 32885), !dbg !3728
  br label %if.end4, !dbg !3728

if.end4:                                          ; preds = %if.then3, %if.end
  %2 = load i32, i32* @GLStates, align 4, !dbg !3729
  %and5 = and i32 %2, 4, !dbg !3731
  %tobool6 = icmp ne i32 %and5, 0, !dbg !3731
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !3732

if.then7:                                         ; preds = %if.end4
  call void @glDisableClientState(i32 32888), !dbg !3733
  br label %if.end8, !dbg !3733

if.end8:                                          ; preds = %if.then7, %if.end4
  %3 = load i32, i32* @GLStates, align 4, !dbg !3734
  %and9 = and i32 %3, 8, !dbg !3736
  %tobool10 = icmp ne i32 %and9, 0, !dbg !3736
  br i1 %tobool10, label %if.then11, label %if.end12, !dbg !3737

if.then11:                                        ; preds = %if.end8
  %4 = load void (i32)*, void (i32)** @__glewClientActiveTexture, align 8, !dbg !3738
  call void %4(i32 33986), !dbg !3738
  call void @glDisableClientState(i32 32888), !dbg !3740
  %5 = load void (i32)*, void (i32)** @__glewClientActiveTexture, align 8, !dbg !3741
  call void %5(i32 33984), !dbg !3741
  br label %if.end12, !dbg !3742

if.end12:                                         ; preds = %if.then11, %if.end8
  %6 = load i32, i32* @GLStates, align 4, !dbg !3743
  %and13 = and i32 %6, 16, !dbg !3745
  %tobool14 = icmp ne i32 %and13, 0, !dbg !3745
  br i1 %tobool14, label %if.then15, label %if.end16, !dbg !3746

if.then15:                                        ; preds = %if.end12
  call void @glDisableClientState(i32 32886), !dbg !3747
  br label %if.end16, !dbg !3747

if.end16:                                         ; preds = %if.then15, %if.end12
  %7 = load i32, i32* @GLStates, align 4, !dbg !3748
  %and17 = and i32 %7, 32, !dbg !3750
  %tobool18 = icmp ne i32 %and17, 0, !dbg !3750
  br i1 %tobool18, label %if.then19, label %if.end23, !dbg !3751

if.then19:                                        ; preds = %if.end16
  %8 = load i32, i32* @useVBOs, align 4, !dbg !3752
  %tobool20 = icmp ne i32 %8, 0, !dbg !3752
  br i1 %tobool20, label %if.then21, label %if.end22, !dbg !3755

if.then21:                                        ; preds = %if.then19
  %9 = load void (i32, i32)*, void (i32, i32)** @__glewBindBufferARB, align 8, !dbg !3756
  call void %9(i32 34963, i32 0), !dbg !3756
  br label %if.end22, !dbg !3758

if.end22:                                         ; preds = %if.then21, %if.then19
  br label %if.end23, !dbg !3759

if.end23:                                         ; preds = %if.end22, %if.end16
  %10 = load i32, i32* @GLStates, align 4, !dbg !3760
  %and24 = and i32 %10, -64, !dbg !3760
  store i32 %and24, i32* @GLStates, align 4, !dbg !3760
  store i32 0, i32* %i, align 4, !dbg !3761
  br label %for.cond, !dbg !3763

for.cond:                                         ; preds = %for.inc, %if.end23
  %11 = load i32, i32* %i, align 4, !dbg !3764
  %cmp = icmp slt i32 %11, 32, !dbg !3766
  br i1 %cmp, label %for.body, label %for.end, !dbg !3767

for.body:                                         ; preds = %for.cond
  %12 = load i32, i32* %i, align 4, !dbg !3768
  %idxprom = sext i32 %12 to i64, !dbg !3771
  %arrayidx = getelementptr inbounds [32 x %struct.GPUAttrib], [32 x %struct.GPUAttrib]* bitcast (<{ %struct.GPUAttrib, [31 x %struct.GPUAttrib] }>* @attribData to [32 x %struct.GPUAttrib]*), i64 0, i64 %idxprom, !dbg !3771
  %index = getelementptr inbounds %struct.GPUAttrib, %struct.GPUAttrib* %arrayidx, i32 0, i32 0, !dbg !3772
  %13 = load i32, i32* %index, align 4, !dbg !3772
  %cmp25 = icmp ne i32 %13, -1, !dbg !3773
  br i1 %cmp25, label %if.then26, label %if.else, !dbg !3774

if.then26:                                        ; preds = %for.body
  %14 = load void (i32)*, void (i32)** @__glewDisableVertexAttribArrayARB, align 8, !dbg !3775
  %15 = load i32, i32* %i, align 4, !dbg !3777
  %idxprom27 = sext i32 %15 to i64, !dbg !3778
  %arrayidx28 = getelementptr inbounds [32 x %struct.GPUAttrib], [32 x %struct.GPUAttrib]* bitcast (<{ %struct.GPUAttrib, [31 x %struct.GPUAttrib] }>* @attribData to [32 x %struct.GPUAttrib]*), i64 0, i64 %idxprom27, !dbg !3778
  %index29 = getelementptr inbounds %struct.GPUAttrib, %struct.GPUAttrib* %arrayidx28, i32 0, i32 0, !dbg !3779
  %16 = load i32, i32* %index29, align 4, !dbg !3779
  call void %14(i32 %16), !dbg !3775
  br label %if.end30, !dbg !3780

if.else:                                          ; preds = %for.body
  br label %for.end, !dbg !3781

if.end30:                                         ; preds = %if.then26
  br label %for.inc, !dbg !3782

for.inc:                                          ; preds = %if.end30
  %17 = load i32, i32* %i, align 4, !dbg !3783
  %inc = add nsw i32 %17, 1, !dbg !3783
  store i32 %inc, i32* %i, align 4, !dbg !3783
  br label %for.cond, !dbg !3784, !llvm.loop !3785

for.end:                                          ; preds = %if.else, %for.cond
  %18 = load i32, i32* @useVBOs, align 4, !dbg !3787
  %tobool31 = icmp ne i32 %18, 0, !dbg !3787
  br i1 %tobool31, label %if.then32, label %if.end33, !dbg !3789

if.then32:                                        ; preds = %for.end
  %19 = load void (i32, i32)*, void (i32, i32)** @__glewBindBufferARB, align 8, !dbg !3790
  call void %19(i32 34962, i32 0), !dbg !3790
  br label %if.end33, !dbg !3790

if.end33:                                         ; preds = %if.then32, %for.end
  ret void, !dbg !3791
}

declare dso_local void @glDisableClientState(i32) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @GPU_color_switch(i32 %mode) #0 !dbg !3792 {
entry:
  %mode.addr = alloca i32, align 4
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !3795, metadata !DIExpression()), !dbg !3796
  %0 = load i32, i32* %mode.addr, align 4, !dbg !3797
  %tobool = icmp ne i32 %0, 0, !dbg !3797
  br i1 %tobool, label %if.then, label %if.else, !dbg !3799

if.then:                                          ; preds = %entry
  %1 = load i32, i32* @GLStates, align 4, !dbg !3800
  %and = and i32 %1, 16, !dbg !3803
  %tobool1 = icmp ne i32 %and, 0, !dbg !3803
  br i1 %tobool1, label %if.end, label %if.then2, !dbg !3804

if.then2:                                         ; preds = %if.then
  call void @glEnableClientState(i32 32886), !dbg !3805
  br label %if.end, !dbg !3805

if.end:                                           ; preds = %if.then2, %if.then
  %2 = load i32, i32* @GLStates, align 4, !dbg !3806
  %or = or i32 %2, 16, !dbg !3806
  store i32 %or, i32* @GLStates, align 4, !dbg !3806
  br label %if.end8, !dbg !3807

if.else:                                          ; preds = %entry
  %3 = load i32, i32* @GLStates, align 4, !dbg !3808
  %and3 = and i32 %3, 16, !dbg !3811
  %tobool4 = icmp ne i32 %and3, 0, !dbg !3811
  br i1 %tobool4, label %if.then5, label %if.end6, !dbg !3812

if.then5:                                         ; preds = %if.else
  call void @glDisableClientState(i32 32886), !dbg !3813
  br label %if.end6, !dbg !3813

if.end6:                                          ; preds = %if.then5, %if.else
  %4 = load i32, i32* @GLStates, align 4, !dbg !3814
  %and7 = and i32 %4, -17, !dbg !3814
  store i32 %and7, i32* @GLStates, align 4, !dbg !3814
  br label %if.end8

if.end8:                                          ; preds = %if.end6, %if.end
  ret void, !dbg !3815
}

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @GPU_buffer_legacy(%struct.DerivedMesh* %dm) #0 !dbg !3816 {
entry:
  %retval = alloca i8, align 1
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %test = alloca i32, align 4
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !3819, metadata !DIExpression()), !dbg !3820
  call void @llvm.dbg.declare(metadata i32* %test, metadata !3821, metadata !DIExpression()), !dbg !3822
  %0 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 20), align 8, !dbg !3823
  %conv = sext i16 %0 to i32, !dbg !3824
  %and = and i32 %conv, 8, !dbg !3825
  store i32 %and, i32* %test, align 4, !dbg !3822
  %1 = load i32, i32* %test, align 4, !dbg !3826
  %tobool = icmp ne i32 %1, 0, !dbg !3826
  br i1 %tobool, label %if.then, label %if.end, !dbg !3828

if.then:                                          ; preds = %entry
  store i8 1, i8* %retval, align 1, !dbg !3829
  br label %return, !dbg !3829

if.end:                                           ; preds = %entry
  %2 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3830
  %drawObject = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %2, i32 0, i32 13, !dbg !3832
  %3 = load %struct.GPUDrawObject*, %struct.GPUDrawObject** %drawObject, align 8, !dbg !3832
  %cmp = icmp eq %struct.GPUDrawObject* %3, null, !dbg !3833
  br i1 %cmp, label %if.then2, label %if.end4, !dbg !3834

if.then2:                                         ; preds = %if.end
  %4 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3835
  %call = call %struct.GPUDrawObject* @GPU_drawobject_new(%struct.DerivedMesh* %4), !dbg !3836
  %5 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3837
  %drawObject3 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %5, i32 0, i32 13, !dbg !3838
  store %struct.GPUDrawObject* %call, %struct.GPUDrawObject** %drawObject3, align 8, !dbg !3839
  br label %if.end4, !dbg !3837

if.end4:                                          ; preds = %if.then2, %if.end
  %6 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3840
  %drawObject5 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %6, i32 0, i32 13, !dbg !3841
  %7 = load %struct.GPUDrawObject*, %struct.GPUDrawObject** %drawObject5, align 8, !dbg !3841
  %legacy = getelementptr inbounds %struct.GPUDrawObject, %struct.GPUDrawObject* %7, i32 0, i32 15, !dbg !3842
  %8 = load i8, i8* %legacy, align 4, !dbg !3842
  store i8 %8, i8* %retval, align 1, !dbg !3843
  br label %return, !dbg !3843

return:                                           ; preds = %if.end4, %if.then
  %9 = load i8, i8* %retval, align 1, !dbg !3844
  ret i8 %9, !dbg !3844
}

; Function Attrs: noinline nounwind uwtable
define dso_local i8* @GPU_buffer_lock(%struct.GPUBuffer* %buffer) #0 !dbg !3845 {
entry:
  %retval = alloca i8*, align 8
  %buffer.addr = alloca %struct.GPUBuffer*, align 8
  %varray = alloca float*, align 8
  store %struct.GPUBuffer* %buffer, %struct.GPUBuffer** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GPUBuffer** %buffer.addr, metadata !3848, metadata !DIExpression()), !dbg !3849
  call void @llvm.dbg.declare(metadata float** %varray, metadata !3850, metadata !DIExpression()), !dbg !3851
  %0 = load %struct.GPUBuffer*, %struct.GPUBuffer** %buffer.addr, align 8, !dbg !3852
  %tobool = icmp ne %struct.GPUBuffer* %0, null, !dbg !3852
  br i1 %tobool, label %if.end, label %if.then, !dbg !3854

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval, align 8, !dbg !3855
  br label %return, !dbg !3855

if.end:                                           ; preds = %entry
  %1 = load i32, i32* @useVBOs, align 4, !dbg !3856
  %tobool1 = icmp ne i32 %1, 0, !dbg !3856
  br i1 %tobool1, label %if.then2, label %if.else, !dbg !3858

if.then2:                                         ; preds = %if.end
  %2 = load void (i32, i32)*, void (i32, i32)** @__glewBindBufferARB, align 8, !dbg !3859
  %3 = load %struct.GPUBuffer*, %struct.GPUBuffer** %buffer.addr, align 8, !dbg !3861
  %id = getelementptr inbounds %struct.GPUBuffer, %struct.GPUBuffer* %3, i32 0, i32 2, !dbg !3862
  %4 = load i32, i32* %id, align 8, !dbg !3862
  call void %2(i32 34962, i32 %4), !dbg !3859
  %5 = load i8* (i32, i32)*, i8* (i32, i32)** @__glewMapBufferARB, align 8, !dbg !3863
  %call = call i8* %5(i32 34962, i32 35001), !dbg !3863
  %6 = bitcast i8* %call to float*, !dbg !3863
  store float* %6, float** %varray, align 8, !dbg !3864
  %7 = load float*, float** %varray, align 8, !dbg !3865
  %8 = bitcast float* %7 to i8*, !dbg !3865
  store i8* %8, i8** %retval, align 8, !dbg !3866
  br label %return, !dbg !3866

if.else:                                          ; preds = %if.end
  %9 = load %struct.GPUBuffer*, %struct.GPUBuffer** %buffer.addr, align 8, !dbg !3867
  %pointer = getelementptr inbounds %struct.GPUBuffer, %struct.GPUBuffer* %9, i32 0, i32 1, !dbg !3869
  %10 = load i8*, i8** %pointer, align 8, !dbg !3869
  store i8* %10, i8** %retval, align 8, !dbg !3870
  br label %return, !dbg !3870

return:                                           ; preds = %if.else, %if.then2, %if.then
  %11 = load i8*, i8** %retval, align 8, !dbg !3871
  ret i8* %11, !dbg !3871
}

; Function Attrs: noinline nounwind uwtable
define dso_local i8* @GPU_buffer_lock_stream(%struct.GPUBuffer* %buffer) #0 !dbg !3872 {
entry:
  %retval = alloca i8*, align 8
  %buffer.addr = alloca %struct.GPUBuffer*, align 8
  %varray = alloca float*, align 8
  store %struct.GPUBuffer* %buffer, %struct.GPUBuffer** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GPUBuffer** %buffer.addr, metadata !3873, metadata !DIExpression()), !dbg !3874
  call void @llvm.dbg.declare(metadata float** %varray, metadata !3875, metadata !DIExpression()), !dbg !3876
  %0 = load %struct.GPUBuffer*, %struct.GPUBuffer** %buffer.addr, align 8, !dbg !3877
  %tobool = icmp ne %struct.GPUBuffer* %0, null, !dbg !3877
  br i1 %tobool, label %if.end, label %if.then, !dbg !3879

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval, align 8, !dbg !3880
  br label %return, !dbg !3880

if.end:                                           ; preds = %entry
  %1 = load i32, i32* @useVBOs, align 4, !dbg !3881
  %tobool1 = icmp ne i32 %1, 0, !dbg !3881
  br i1 %tobool1, label %if.then2, label %if.else, !dbg !3883

if.then2:                                         ; preds = %if.end
  %2 = load void (i32, i32)*, void (i32, i32)** @__glewBindBufferARB, align 8, !dbg !3884
  %3 = load %struct.GPUBuffer*, %struct.GPUBuffer** %buffer.addr, align 8, !dbg !3886
  %id = getelementptr inbounds %struct.GPUBuffer, %struct.GPUBuffer* %3, i32 0, i32 2, !dbg !3887
  %4 = load i32, i32* %id, align 8, !dbg !3887
  call void %2(i32 34962, i32 %4), !dbg !3884
  %5 = load void (i32, i64, i8*, i32)*, void (i32, i64, i8*, i32)** @__glewBufferDataARB, align 8, !dbg !3888
  %6 = load %struct.GPUBuffer*, %struct.GPUBuffer** %buffer.addr, align 8, !dbg !3889
  %size = getelementptr inbounds %struct.GPUBuffer, %struct.GPUBuffer* %6, i32 0, i32 0, !dbg !3890
  %7 = load i32, i32* %size, align 8, !dbg !3890
  %conv = sext i32 %7 to i64, !dbg !3889
  call void %5(i32 34962, i64 %conv, i8* null, i32 35040), !dbg !3888
  %8 = load i8* (i32, i32)*, i8* (i32, i32)** @__glewMapBufferARB, align 8, !dbg !3891
  %call = call i8* %8(i32 34962, i32 35001), !dbg !3891
  %9 = bitcast i8* %call to float*, !dbg !3891
  store float* %9, float** %varray, align 8, !dbg !3892
  %10 = load float*, float** %varray, align 8, !dbg !3893
  %11 = bitcast float* %10 to i8*, !dbg !3893
  store i8* %11, i8** %retval, align 8, !dbg !3894
  br label %return, !dbg !3894

if.else:                                          ; preds = %if.end
  %12 = load %struct.GPUBuffer*, %struct.GPUBuffer** %buffer.addr, align 8, !dbg !3895
  %pointer = getelementptr inbounds %struct.GPUBuffer, %struct.GPUBuffer* %12, i32 0, i32 1, !dbg !3897
  %13 = load i8*, i8** %pointer, align 8, !dbg !3897
  store i8* %13, i8** %retval, align 8, !dbg !3898
  br label %return, !dbg !3898

return:                                           ; preds = %if.else, %if.then2, %if.then
  %14 = load i8*, i8** %retval, align 8, !dbg !3899
  ret i8* %14, !dbg !3899
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @GPU_buffer_unlock(%struct.GPUBuffer* %buffer) #0 !dbg !3900 {
entry:
  %buffer.addr = alloca %struct.GPUBuffer*, align 8
  store %struct.GPUBuffer* %buffer, %struct.GPUBuffer** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GPUBuffer** %buffer.addr, metadata !3901, metadata !DIExpression()), !dbg !3902
  %0 = load i32, i32* @useVBOs, align 4, !dbg !3903
  %tobool = icmp ne i32 %0, 0, !dbg !3903
  br i1 %tobool, label %if.then, label %if.end3, !dbg !3905

if.then:                                          ; preds = %entry
  %1 = load %struct.GPUBuffer*, %struct.GPUBuffer** %buffer.addr, align 8, !dbg !3906
  %tobool1 = icmp ne %struct.GPUBuffer* %1, null, !dbg !3906
  br i1 %tobool1, label %if.then2, label %if.end, !dbg !3909

if.then2:                                         ; preds = %if.then
  %2 = load i8 (i32)*, i8 (i32)** @__glewUnmapBufferARB, align 8, !dbg !3910
  %call = call zeroext i8 %2(i32 34962), !dbg !3910
  br label %if.end, !dbg !3912

if.end:                                           ; preds = %if.then2, %if.then
  %3 = load void (i32, i32)*, void (i32, i32)** @__glewBindBufferARB, align 8, !dbg !3913
  call void %3(i32 34962, i32 0), !dbg !3913
  br label %if.end3, !dbg !3914

if.end3:                                          ; preds = %if.end, %entry
  ret void, !dbg !3915
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @GPU_buffer_draw_elements(%struct.GPUBuffer* %elements, i32 %mode, i32 %start, i32 %count) #0 !dbg !3916 {
entry:
  %elements.addr = alloca %struct.GPUBuffer*, align 8
  %mode.addr = alloca i32, align 4
  %start.addr = alloca i32, align 4
  %count.addr = alloca i32, align 4
  store %struct.GPUBuffer* %elements, %struct.GPUBuffer** %elements.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GPUBuffer** %elements.addr, metadata !3919, metadata !DIExpression()), !dbg !3920
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !3921, metadata !DIExpression()), !dbg !3922
  store i32 %start, i32* %start.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %start.addr, metadata !3923, metadata !DIExpression()), !dbg !3924
  store i32 %count, i32* %count.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %count.addr, metadata !3925, metadata !DIExpression()), !dbg !3926
  %0 = load i32, i32* %mode.addr, align 4, !dbg !3927
  %1 = load i32, i32* %count.addr, align 4, !dbg !3928
  %2 = load i32, i32* @useVBOs, align 4, !dbg !3929
  %tobool = icmp ne i32 %2, 0, !dbg !3929
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !3929

cond.true:                                        ; preds = %entry
  %3 = load i32, i32* %start.addr, align 4, !dbg !3930
  %conv = sext i32 %3 to i64, !dbg !3930
  %mul = mul i64 %conv, 4, !dbg !3931
  %4 = inttoptr i64 %mul to i8*, !dbg !3932
  br label %cond.end, !dbg !3929

cond.false:                                       ; preds = %entry
  %5 = load %struct.GPUBuffer*, %struct.GPUBuffer** %elements.addr, align 8, !dbg !3933
  %pointer = getelementptr inbounds %struct.GPUBuffer, %struct.GPUBuffer* %5, i32 0, i32 1, !dbg !3934
  %6 = load i8*, i8** %pointer, align 8, !dbg !3934
  %7 = bitcast i8* %6 to i32*, !dbg !3935
  %8 = load i32, i32* %start.addr, align 4, !dbg !3936
  %idx.ext = sext i32 %8 to i64, !dbg !3937
  %add.ptr = getelementptr inbounds i32, i32* %7, i64 %idx.ext, !dbg !3937
  %9 = bitcast i32* %add.ptr to i8*, !dbg !3938
  br label %cond.end, !dbg !3929

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %4, %cond.true ], [ %9, %cond.false ], !dbg !3929
  call void @glDrawElements(i32 %0, i32 %1, i32 5125, i8* %cond), !dbg !3939
  ret void, !dbg !3940
}

declare dso_local void @glDrawElements(i32, i32, i32, i8*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @GPU_update_mesh_pbvh_buffers(%struct.GPU_PBVH_Buffers* %buffers, %struct.MVert* %mvert, i32* %vert_indices, i32 %totvert, float* %vmask, [4 x i32]* %face_vert_indices, i8 zeroext %show_diffuse_color) #0 !dbg !3941 {
entry:
  %buffers.addr = alloca %struct.GPU_PBVH_Buffers*, align 8
  %mvert.addr = alloca %struct.MVert*, align 8
  %vert_indices.addr = alloca i32*, align 8
  %totvert.addr = alloca i32, align 4
  %vmask.addr = alloca float*, align 8
  %face_vert_indices.addr = alloca [4 x i32]*, align 8
  %show_diffuse_color.addr = alloca i8, align 1
  %vert_data = alloca %struct.VertexBufferFormat*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %totelem = alloca i32, align 4
  %diffuse_color = alloca [4 x float], align 16
  %f = alloca %struct.MFace*, align 8
  %v = alloca %struct.MVert*, align 8
  %out = alloca %struct.VertexBufferFormat*, align 8
  %f41 = alloca %struct.MFace*, align 8
  %out48 = alloca %struct.VertexBufferFormat*, align 8
  %out65 = alloca %struct.VertexBufferFormat*, align 8
  %out83 = alloca %struct.VertexBufferFormat*, align 8
  %out103 = alloca %struct.VertexBufferFormat*, align 8
  %f132 = alloca %struct.MFace*, align 8
  %fv = alloca i32*, align 8
  %vi = alloca [2 x [3 x i32]], align 16
  %fno = alloca [3 x float], align 4
  %no140 = alloca [3 x i16], align 2
  %fmask = alloca float, align 4
  %v235 = alloca %struct.MVert*, align 8
  %out244 = alloca %struct.VertexBufferFormat*, align 8
  store %struct.GPU_PBVH_Buffers* %buffers, %struct.GPU_PBVH_Buffers** %buffers.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GPU_PBVH_Buffers** %buffers.addr, metadata !3981, metadata !DIExpression()), !dbg !3982
  store %struct.MVert* %mvert, %struct.MVert** %mvert.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MVert** %mvert.addr, metadata !3983, metadata !DIExpression()), !dbg !3984
  store i32* %vert_indices, i32** %vert_indices.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %vert_indices.addr, metadata !3985, metadata !DIExpression()), !dbg !3986
  store i32 %totvert, i32* %totvert.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %totvert.addr, metadata !3987, metadata !DIExpression()), !dbg !3988
  store float* %vmask, float** %vmask.addr, align 8
  call void @llvm.dbg.declare(metadata float** %vmask.addr, metadata !3989, metadata !DIExpression()), !dbg !3990
  store [4 x i32]* %face_vert_indices, [4 x i32]** %face_vert_indices.addr, align 8
  call void @llvm.dbg.declare(metadata [4 x i32]** %face_vert_indices.addr, metadata !3991, metadata !DIExpression()), !dbg !3992
  store i8 %show_diffuse_color, i8* %show_diffuse_color.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %show_diffuse_color.addr, metadata !3993, metadata !DIExpression()), !dbg !3994
  call void @llvm.dbg.declare(metadata %struct.VertexBufferFormat** %vert_data, metadata !3995, metadata !DIExpression()), !dbg !4006
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4007, metadata !DIExpression()), !dbg !4008
  call void @llvm.dbg.declare(metadata i32* %j, metadata !4009, metadata !DIExpression()), !dbg !4010
  call void @llvm.dbg.declare(metadata i32* %k, metadata !4011, metadata !DIExpression()), !dbg !4012
  %0 = load float*, float** %vmask.addr, align 8, !dbg !4013
  %1 = load %struct.GPU_PBVH_Buffers*, %struct.GPU_PBVH_Buffers** %buffers.addr, align 8, !dbg !4014
  %vmask1 = getelementptr inbounds %struct.GPU_PBVH_Buffers, %struct.GPU_PBVH_Buffers* %1, i32 0, i32 7, !dbg !4015
  store float* %0, float** %vmask1, align 8, !dbg !4016
  %2 = load i8, i8* %show_diffuse_color.addr, align 1, !dbg !4017
  %3 = load %struct.GPU_PBVH_Buffers*, %struct.GPU_PBVH_Buffers** %buffers.addr, align 8, !dbg !4018
  %show_diffuse_color2 = getelementptr inbounds %struct.GPU_PBVH_Buffers, %struct.GPU_PBVH_Buffers* %3, i32 0, i32 19, !dbg !4019
  store i8 %2, i8* %show_diffuse_color2, align 8, !dbg !4020
  %call = call zeroext i8 @GPU_material_use_matcaps_get(), !dbg !4021
  %4 = load %struct.GPU_PBVH_Buffers*, %struct.GPU_PBVH_Buffers** %buffers.addr, align 8, !dbg !4022
  %use_matcaps = getelementptr inbounds %struct.GPU_PBVH_Buffers, %struct.GPU_PBVH_Buffers* %4, i32 0, i32 20, !dbg !4023
  store i8 %call, i8* %use_matcaps, align 1, !dbg !4024
  %5 = load %struct.GPU_PBVH_Buffers*, %struct.GPU_PBVH_Buffers** %buffers.addr, align 8, !dbg !4025
  %vert_buf = getelementptr inbounds %struct.GPU_PBVH_Buffers, %struct.GPU_PBVH_Buffers* %5, i32 0, i32 0, !dbg !4027
  %6 = load i32, i32* %vert_buf, align 8, !dbg !4027
  %tobool = icmp ne i32 %6, 0, !dbg !4025
  br i1 %tobool, label %if.then, label %if.end277, !dbg !4028

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %totelem, metadata !4029, metadata !DIExpression()), !dbg !4031
  %7 = load %struct.GPU_PBVH_Buffers*, %struct.GPU_PBVH_Buffers** %buffers.addr, align 8, !dbg !4032
  %smooth = getelementptr inbounds %struct.GPU_PBVH_Buffers, %struct.GPU_PBVH_Buffers* %7, i32 0, i32 18, !dbg !4033
  %8 = load i32, i32* %smooth, align 4, !dbg !4033
  %tobool3 = icmp ne i32 %8, 0, !dbg !4032
  br i1 %tobool3, label %cond.true, label %cond.false, !dbg !4032

cond.true:                                        ; preds = %if.then
  %9 = load i32, i32* %totvert.addr, align 4, !dbg !4034
  br label %cond.end, !dbg !4032

cond.false:                                       ; preds = %if.then
  %10 = load %struct.GPU_PBVH_Buffers*, %struct.GPU_PBVH_Buffers** %buffers.addr, align 8, !dbg !4035
  %tot_tri = getelementptr inbounds %struct.GPU_PBVH_Buffers, %struct.GPU_PBVH_Buffers* %10, i32 0, i32 16, !dbg !4036
  %11 = load i32, i32* %tot_tri, align 4, !dbg !4036
  %mul = mul i32 %11, 3, !dbg !4037
  br label %cond.end, !dbg !4032

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %9, %cond.true ], [ %mul, %cond.false ], !dbg !4032
  store i32 %cond, i32* %totelem, align 4, !dbg !4031
  call void @llvm.dbg.declare(metadata [4 x float]* %diffuse_color, metadata !4038, metadata !DIExpression()), !dbg !4039
  %12 = bitcast [4 x float]* %diffuse_color to i8*, !dbg !4039
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %12, i8* align 16 bitcast ([4 x float]* @__const.GPU_update_mesh_pbvh_buffers.diffuse_color to i8*), i64 16, i1 false), !dbg !4039
  %13 = load %struct.GPU_PBVH_Buffers*, %struct.GPU_PBVH_Buffers** %buffers.addr, align 8, !dbg !4040
  %use_matcaps4 = getelementptr inbounds %struct.GPU_PBVH_Buffers, %struct.GPU_PBVH_Buffers* %13, i32 0, i32 20, !dbg !4042
  %14 = load i8, i8* %use_matcaps4, align 1, !dbg !4042
  %tobool5 = icmp ne i8 %14, 0, !dbg !4040
  br i1 %tobool5, label %if.then6, label %if.else, !dbg !4043

if.then6:                                         ; preds = %cond.end
  %arrayidx = getelementptr inbounds [4 x float], [4 x float]* %diffuse_color, i64 0, i64 2, !dbg !4044
  store float 1.000000e+00, float* %arrayidx, align 8, !dbg !4045
  %arrayidx7 = getelementptr inbounds [4 x float], [4 x float]* %diffuse_color, i64 0, i64 1, !dbg !4046
  store float 1.000000e+00, float* %arrayidx7, align 4, !dbg !4047
  %arrayidx8 = getelementptr inbounds [4 x float], [4 x float]* %diffuse_color, i64 0, i64 0, !dbg !4048
  store float 1.000000e+00, float* %arrayidx8, align 16, !dbg !4049
  br label %if.end12, !dbg !4048

if.else:                                          ; preds = %cond.end
  %15 = load i8, i8* %show_diffuse_color.addr, align 1, !dbg !4050
  %tobool9 = icmp ne i8 %15, 0, !dbg !4050
  br i1 %tobool9, label %if.then10, label %if.end, !dbg !4052

if.then10:                                        ; preds = %if.else
  call void @llvm.dbg.declare(metadata %struct.MFace** %f, metadata !4053, metadata !DIExpression()), !dbg !4055
  %16 = load %struct.GPU_PBVH_Buffers*, %struct.GPU_PBVH_Buffers** %buffers.addr, align 8, !dbg !4056
  %mface = getelementptr inbounds %struct.GPU_PBVH_Buffers, %struct.GPU_PBVH_Buffers* %16, i32 0, i32 3, !dbg !4057
  %17 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !4057
  %18 = load %struct.GPU_PBVH_Buffers*, %struct.GPU_PBVH_Buffers** %buffers.addr, align 8, !dbg !4058
  %face_indices = getelementptr inbounds %struct.GPU_PBVH_Buffers, %struct.GPU_PBVH_Buffers* %18, i32 0, i32 5, !dbg !4059
  %19 = load i32*, i32** %face_indices, align 8, !dbg !4059
  %arrayidx11 = getelementptr inbounds i32, i32* %19, i64 0, !dbg !4058
  %20 = load i32, i32* %arrayidx11, align 4, !dbg !4058
  %idx.ext = sext i32 %20 to i64, !dbg !4060
  %add.ptr = getelementptr inbounds %struct.MFace, %struct.MFace* %17, i64 %idx.ext, !dbg !4060
  store %struct.MFace* %add.ptr, %struct.MFace** %f, align 8, !dbg !4055
  %21 = load %struct.MFace*, %struct.MFace** %f, align 8, !dbg !4061
  %mat_nr = getelementptr inbounds %struct.MFace, %struct.MFace* %21, i32 0, i32 4, !dbg !4062
  %22 = load i16, i16* %mat_nr, align 4, !dbg !4062
  %conv = sext i16 %22 to i32, !dbg !4061
  %add = add nsw i32 %conv, 1, !dbg !4063
  %arraydecay = getelementptr inbounds [4 x float], [4 x float]* %diffuse_color, i64 0, i64 0, !dbg !4064
  call void @GPU_material_diffuse_get(i32 %add, float* %arraydecay), !dbg !4065
  br label %if.end, !dbg !4066

if.end:                                           ; preds = %if.then10, %if.else
  br label %if.end12

if.end12:                                         ; preds = %if.end, %if.then6
  %23 = load %struct.GPU_PBVH_Buffers*, %struct.GPU_PBVH_Buffers** %buffers.addr, align 8, !dbg !4067
  %diffuse_color13 = getelementptr inbounds %struct.GPU_PBVH_Buffers, %struct.GPU_PBVH_Buffers* %23, i32 0, i32 21, !dbg !4068
  %arraydecay14 = getelementptr inbounds [4 x float], [4 x float]* %diffuse_color13, i64 0, i64 0, !dbg !4067
  %arraydecay15 = getelementptr inbounds [4 x float], [4 x float]* %diffuse_color, i64 0, i64 0, !dbg !4069
  call void @copy_v4_v4(float* %arraydecay14, float* %arraydecay15), !dbg !4070
  %24 = load void (i32, i32)*, void (i32, i32)** @__glewBindBufferARB, align 8, !dbg !4071
  %25 = load %struct.GPU_PBVH_Buffers*, %struct.GPU_PBVH_Buffers** %buffers.addr, align 8, !dbg !4072
  %vert_buf16 = getelementptr inbounds %struct.GPU_PBVH_Buffers, %struct.GPU_PBVH_Buffers* %25, i32 0, i32 0, !dbg !4073
  %26 = load i32, i32* %vert_buf16, align 8, !dbg !4073
  call void %24(i32 34962, i32 %26), !dbg !4071
  %27 = load void (i32, i64, i8*, i32)*, void (i32, i64, i8*, i32)** @__glewBufferDataARB, align 8, !dbg !4074
  %28 = load i32, i32* %totelem, align 4, !dbg !4075
  %conv17 = sext i32 %28 to i64, !dbg !4075
  %mul18 = mul i64 24, %conv17, !dbg !4076
  call void %27(i32 34962, i64 %mul18, i8* null, i32 35044), !dbg !4074
  %29 = load i8* (i32, i32)*, i8* (i32, i32)** @__glewMapBufferARB, align 8, !dbg !4077
  %call19 = call i8* %29(i32 34962, i32 35001), !dbg !4077
  %30 = bitcast i8* %call19 to %struct.VertexBufferFormat*, !dbg !4077
  store %struct.VertexBufferFormat* %30, %struct.VertexBufferFormat** %vert_data, align 8, !dbg !4078
  %31 = load %struct.VertexBufferFormat*, %struct.VertexBufferFormat** %vert_data, align 8, !dbg !4079
  %tobool20 = icmp ne %struct.VertexBufferFormat* %31, null, !dbg !4079
  br i1 %tobool20, label %if.then21, label %if.else273, !dbg !4081

if.then21:                                        ; preds = %if.end12
  %32 = load %struct.GPU_PBVH_Buffers*, %struct.GPU_PBVH_Buffers** %buffers.addr, align 8, !dbg !4082
  %smooth22 = getelementptr inbounds %struct.GPU_PBVH_Buffers, %struct.GPU_PBVH_Buffers* %32, i32 0, i32 18, !dbg !4085
  %33 = load i32, i32* %smooth22, align 4, !dbg !4085
  %tobool23 = icmp ne i32 %33, 0, !dbg !4082
  br i1 %tobool23, label %if.then24, label %if.else126, !dbg !4086

if.then24:                                        ; preds = %if.then21
  store i32 0, i32* %i, align 4, !dbg !4087
  br label %for.cond, !dbg !4090

for.cond:                                         ; preds = %for.inc, %if.then24
  %34 = load i32, i32* %i, align 4, !dbg !4091
  %35 = load i32, i32* %totvert.addr, align 4, !dbg !4093
  %cmp = icmp slt i32 %34, %35, !dbg !4094
  br i1 %cmp, label %for.body, label %for.end, !dbg !4095

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.MVert** %v, metadata !4096, metadata !DIExpression()), !dbg !4098
  %36 = load %struct.MVert*, %struct.MVert** %mvert.addr, align 8, !dbg !4099
  %37 = load i32*, i32** %vert_indices.addr, align 8, !dbg !4100
  %38 = load i32, i32* %i, align 4, !dbg !4101
  %idxprom = sext i32 %38 to i64, !dbg !4100
  %arrayidx26 = getelementptr inbounds i32, i32* %37, i64 %idxprom, !dbg !4100
  %39 = load i32, i32* %arrayidx26, align 4, !dbg !4100
  %idx.ext27 = sext i32 %39 to i64, !dbg !4102
  %add.ptr28 = getelementptr inbounds %struct.MVert, %struct.MVert* %36, i64 %idx.ext27, !dbg !4102
  store %struct.MVert* %add.ptr28, %struct.MVert** %v, align 8, !dbg !4098
  call void @llvm.dbg.declare(metadata %struct.VertexBufferFormat** %out, metadata !4103, metadata !DIExpression()), !dbg !4104
  %40 = load %struct.VertexBufferFormat*, %struct.VertexBufferFormat** %vert_data, align 8, !dbg !4105
  %41 = load i32, i32* %i, align 4, !dbg !4106
  %idx.ext29 = sext i32 %41 to i64, !dbg !4107
  %add.ptr30 = getelementptr inbounds %struct.VertexBufferFormat, %struct.VertexBufferFormat* %40, i64 %idx.ext29, !dbg !4107
  store %struct.VertexBufferFormat* %add.ptr30, %struct.VertexBufferFormat** %out, align 8, !dbg !4104
  %42 = load %struct.VertexBufferFormat*, %struct.VertexBufferFormat** %out, align 8, !dbg !4108
  %co = getelementptr inbounds %struct.VertexBufferFormat, %struct.VertexBufferFormat* %42, i32 0, i32 0, !dbg !4109
  %arraydecay31 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !4108
  %43 = load %struct.MVert*, %struct.MVert** %v, align 8, !dbg !4110
  %co32 = getelementptr inbounds %struct.MVert, %struct.MVert* %43, i32 0, i32 0, !dbg !4111
  %arraydecay33 = getelementptr inbounds [3 x float], [3 x float]* %co32, i64 0, i64 0, !dbg !4110
  call void @copy_v3_v3(float* %arraydecay31, float* %arraydecay33), !dbg !4112
  %44 = load %struct.VertexBufferFormat*, %struct.VertexBufferFormat** %out, align 8, !dbg !4113
  %no = getelementptr inbounds %struct.VertexBufferFormat, %struct.VertexBufferFormat* %44, i32 0, i32 1, !dbg !4114
  %arraydecay34 = getelementptr inbounds [3 x i16], [3 x i16]* %no, i64 0, i64 0, !dbg !4115
  %45 = bitcast i16* %arraydecay34 to i8*, !dbg !4115
  %46 = load %struct.MVert*, %struct.MVert** %v, align 8, !dbg !4116
  %no35 = getelementptr inbounds %struct.MVert, %struct.MVert* %46, i32 0, i32 1, !dbg !4117
  %arraydecay36 = getelementptr inbounds [3 x i16], [3 x i16]* %no35, i64 0, i64 0, !dbg !4115
  %47 = bitcast i16* %arraydecay36 to i8*, !dbg !4115
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %45, i8* align 4 %47, i64 6, i1 false), !dbg !4115
  br label %for.inc, !dbg !4118

for.inc:                                          ; preds = %for.body
  %48 = load i32, i32* %i, align 4, !dbg !4119
  %inc = add nsw i32 %48, 1, !dbg !4119
  store i32 %inc, i32* %i, align 4, !dbg !4119
  br label %for.cond, !dbg !4120, !llvm.loop !4121

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !4123
  br label %for.cond37, !dbg !4125

for.cond37:                                       ; preds = %for.inc123, %for.end
  %49 = load i32, i32* %i, align 4, !dbg !4126
  %50 = load %struct.GPU_PBVH_Buffers*, %struct.GPU_PBVH_Buffers** %buffers.addr, align 8, !dbg !4128
  %totface = getelementptr inbounds %struct.GPU_PBVH_Buffers, %struct.GPU_PBVH_Buffers* %50, i32 0, i32 6, !dbg !4129
  %51 = load i32, i32* %totface, align 8, !dbg !4129
  %cmp38 = icmp slt i32 %49, %51, !dbg !4130
  br i1 %cmp38, label %for.body40, label %for.end125, !dbg !4131

for.body40:                                       ; preds = %for.cond37
  call void @llvm.dbg.declare(metadata %struct.MFace** %f41, metadata !4132, metadata !DIExpression()), !dbg !4134
  %52 = load %struct.GPU_PBVH_Buffers*, %struct.GPU_PBVH_Buffers** %buffers.addr, align 8, !dbg !4135
  %mface42 = getelementptr inbounds %struct.GPU_PBVH_Buffers, %struct.GPU_PBVH_Buffers* %52, i32 0, i32 3, !dbg !4136
  %53 = load %struct.MFace*, %struct.MFace** %mface42, align 8, !dbg !4136
  %54 = load %struct.GPU_PBVH_Buffers*, %struct.GPU_PBVH_Buffers** %buffers.addr, align 8, !dbg !4137
  %face_indices43 = getelementptr inbounds %struct.GPU_PBVH_Buffers, %struct.GPU_PBVH_Buffers* %54, i32 0, i32 5, !dbg !4138
  %55 = load i32*, i32** %face_indices43, align 8, !dbg !4138
  %56 = load i32, i32* %i, align 4, !dbg !4139
  %idxprom44 = sext i32 %56 to i64, !dbg !4137
  %arrayidx45 = getelementptr inbounds i32, i32* %55, i64 %idxprom44, !dbg !4137
  %57 = load i32, i32* %arrayidx45, align 4, !dbg !4137
  %idx.ext46 = sext i32 %57 to i64, !dbg !4140
  %add.ptr47 = getelementptr inbounds %struct.MFace, %struct.MFace* %53, i64 %idx.ext46, !dbg !4140
  store %struct.MFace* %add.ptr47, %struct.MFace** %f41, align 8, !dbg !4134
  call void @llvm.dbg.declare(metadata %struct.VertexBufferFormat** %out48, metadata !4141, metadata !DIExpression()), !dbg !4143
  %58 = load %struct.VertexBufferFormat*, %struct.VertexBufferFormat** %vert_data, align 8, !dbg !4143
  %59 = load [4 x i32]*, [4 x i32]** %face_vert_indices.addr, align 8, !dbg !4143
  %60 = load i32, i32* %i, align 4, !dbg !4143
  %idxprom49 = sext i32 %60 to i64, !dbg !4143
  %arrayidx50 = getelementptr inbounds [4 x i32], [4 x i32]* %59, i64 %idxprom49, !dbg !4143
  %arrayidx51 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx50, i64 0, i64 0, !dbg !4143
  %61 = load i32, i32* %arrayidx51, align 4, !dbg !4143
  %idx.ext52 = sext i32 %61 to i64, !dbg !4143
  %add.ptr53 = getelementptr inbounds %struct.VertexBufferFormat, %struct.VertexBufferFormat* %58, i64 %idx.ext52, !dbg !4143
  store %struct.VertexBufferFormat* %add.ptr53, %struct.VertexBufferFormat** %out48, align 8, !dbg !4143
  %62 = load float*, float** %vmask.addr, align 8, !dbg !4144
  %tobool54 = icmp ne float* %62, null, !dbg !4144
  br i1 %tobool54, label %if.then55, label %if.else60, !dbg !4143

if.then55:                                        ; preds = %for.body40
  %63 = load float*, float** %vmask.addr, align 8, !dbg !4144
  %64 = load %struct.MFace*, %struct.MFace** %f41, align 8, !dbg !4144
  %v1 = getelementptr inbounds %struct.MFace, %struct.MFace* %64, i32 0, i32 0, !dbg !4144
  %65 = load i32, i32* %v1, align 4, !dbg !4144
  %idxprom56 = zext i32 %65 to i64, !dbg !4144
  %arrayidx57 = getelementptr inbounds float, float* %63, i64 %idxprom56, !dbg !4144
  %66 = load float, float* %arrayidx57, align 4, !dbg !4144
  %arraydecay58 = getelementptr inbounds [4 x float], [4 x float]* %diffuse_color, i64 0, i64 0, !dbg !4144
  %67 = load %struct.VertexBufferFormat*, %struct.VertexBufferFormat** %out48, align 8, !dbg !4144
  %color = getelementptr inbounds %struct.VertexBufferFormat, %struct.VertexBufferFormat* %67, i32 0, i32 3, !dbg !4144
  %arraydecay59 = getelementptr inbounds [3 x i8], [3 x i8]* %color, i64 0, i64 0, !dbg !4144
  call void @gpu_color_from_mask_copy(float %66, float* %arraydecay58, i8* %arraydecay59), !dbg !4144
  br label %if.end64, !dbg !4144

if.else60:                                        ; preds = %for.body40
  %68 = load %struct.VertexBufferFormat*, %struct.VertexBufferFormat** %out48, align 8, !dbg !4144
  %color61 = getelementptr inbounds %struct.VertexBufferFormat, %struct.VertexBufferFormat* %68, i32 0, i32 3, !dbg !4144
  %arraydecay62 = getelementptr inbounds [3 x i8], [3 x i8]* %color61, i64 0, i64 0, !dbg !4144
  %arraydecay63 = getelementptr inbounds [4 x float], [4 x float]* %diffuse_color, i64 0, i64 0, !dbg !4144
  call void @rgb_float_to_uchar(i8* %arraydecay62, float* %arraydecay63), !dbg !4144
  br label %if.end64

if.end64:                                         ; preds = %if.else60, %if.then55
  call void @llvm.dbg.declare(metadata %struct.VertexBufferFormat** %out65, metadata !4146, metadata !DIExpression()), !dbg !4148
  %69 = load %struct.VertexBufferFormat*, %struct.VertexBufferFormat** %vert_data, align 8, !dbg !4148
  %70 = load [4 x i32]*, [4 x i32]** %face_vert_indices.addr, align 8, !dbg !4148
  %71 = load i32, i32* %i, align 4, !dbg !4148
  %idxprom66 = sext i32 %71 to i64, !dbg !4148
  %arrayidx67 = getelementptr inbounds [4 x i32], [4 x i32]* %70, i64 %idxprom66, !dbg !4148
  %arrayidx68 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx67, i64 0, i64 1, !dbg !4148
  %72 = load i32, i32* %arrayidx68, align 4, !dbg !4148
  %idx.ext69 = sext i32 %72 to i64, !dbg !4148
  %add.ptr70 = getelementptr inbounds %struct.VertexBufferFormat, %struct.VertexBufferFormat* %69, i64 %idx.ext69, !dbg !4148
  store %struct.VertexBufferFormat* %add.ptr70, %struct.VertexBufferFormat** %out65, align 8, !dbg !4148
  %73 = load float*, float** %vmask.addr, align 8, !dbg !4149
  %tobool71 = icmp ne float* %73, null, !dbg !4149
  br i1 %tobool71, label %if.then72, label %if.else78, !dbg !4148

if.then72:                                        ; preds = %if.end64
  %74 = load float*, float** %vmask.addr, align 8, !dbg !4149
  %75 = load %struct.MFace*, %struct.MFace** %f41, align 8, !dbg !4149
  %v2 = getelementptr inbounds %struct.MFace, %struct.MFace* %75, i32 0, i32 1, !dbg !4149
  %76 = load i32, i32* %v2, align 4, !dbg !4149
  %idxprom73 = zext i32 %76 to i64, !dbg !4149
  %arrayidx74 = getelementptr inbounds float, float* %74, i64 %idxprom73, !dbg !4149
  %77 = load float, float* %arrayidx74, align 4, !dbg !4149
  %arraydecay75 = getelementptr inbounds [4 x float], [4 x float]* %diffuse_color, i64 0, i64 0, !dbg !4149
  %78 = load %struct.VertexBufferFormat*, %struct.VertexBufferFormat** %out65, align 8, !dbg !4149
  %color76 = getelementptr inbounds %struct.VertexBufferFormat, %struct.VertexBufferFormat* %78, i32 0, i32 3, !dbg !4149
  %arraydecay77 = getelementptr inbounds [3 x i8], [3 x i8]* %color76, i64 0, i64 0, !dbg !4149
  call void @gpu_color_from_mask_copy(float %77, float* %arraydecay75, i8* %arraydecay77), !dbg !4149
  br label %if.end82, !dbg !4149

if.else78:                                        ; preds = %if.end64
  %79 = load %struct.VertexBufferFormat*, %struct.VertexBufferFormat** %out65, align 8, !dbg !4149
  %color79 = getelementptr inbounds %struct.VertexBufferFormat, %struct.VertexBufferFormat* %79, i32 0, i32 3, !dbg !4149
  %arraydecay80 = getelementptr inbounds [3 x i8], [3 x i8]* %color79, i64 0, i64 0, !dbg !4149
  %arraydecay81 = getelementptr inbounds [4 x float], [4 x float]* %diffuse_color, i64 0, i64 0, !dbg !4149
  call void @rgb_float_to_uchar(i8* %arraydecay80, float* %arraydecay81), !dbg !4149
  br label %if.end82

if.end82:                                         ; preds = %if.else78, %if.then72
  call void @llvm.dbg.declare(metadata %struct.VertexBufferFormat** %out83, metadata !4151, metadata !DIExpression()), !dbg !4153
  %80 = load %struct.VertexBufferFormat*, %struct.VertexBufferFormat** %vert_data, align 8, !dbg !4153
  %81 = load [4 x i32]*, [4 x i32]** %face_vert_indices.addr, align 8, !dbg !4153
  %82 = load i32, i32* %i, align 4, !dbg !4153
  %idxprom84 = sext i32 %82 to i64, !dbg !4153
  %arrayidx85 = getelementptr inbounds [4 x i32], [4 x i32]* %81, i64 %idxprom84, !dbg !4153
  %arrayidx86 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx85, i64 0, i64 2, !dbg !4153
  %83 = load i32, i32* %arrayidx86, align 4, !dbg !4153
  %idx.ext87 = sext i32 %83 to i64, !dbg !4153
  %add.ptr88 = getelementptr inbounds %struct.VertexBufferFormat, %struct.VertexBufferFormat* %80, i64 %idx.ext87, !dbg !4153
  store %struct.VertexBufferFormat* %add.ptr88, %struct.VertexBufferFormat** %out83, align 8, !dbg !4153
  %84 = load float*, float** %vmask.addr, align 8, !dbg !4154
  %tobool89 = icmp ne float* %84, null, !dbg !4154
  br i1 %tobool89, label %if.then90, label %if.else96, !dbg !4153

if.then90:                                        ; preds = %if.end82
  %85 = load float*, float** %vmask.addr, align 8, !dbg !4154
  %86 = load %struct.MFace*, %struct.MFace** %f41, align 8, !dbg !4154
  %v3 = getelementptr inbounds %struct.MFace, %struct.MFace* %86, i32 0, i32 2, !dbg !4154
  %87 = load i32, i32* %v3, align 4, !dbg !4154
  %idxprom91 = zext i32 %87 to i64, !dbg !4154
  %arrayidx92 = getelementptr inbounds float, float* %85, i64 %idxprom91, !dbg !4154
  %88 = load float, float* %arrayidx92, align 4, !dbg !4154
  %arraydecay93 = getelementptr inbounds [4 x float], [4 x float]* %diffuse_color, i64 0, i64 0, !dbg !4154
  %89 = load %struct.VertexBufferFormat*, %struct.VertexBufferFormat** %out83, align 8, !dbg !4154
  %color94 = getelementptr inbounds %struct.VertexBufferFormat, %struct.VertexBufferFormat* %89, i32 0, i32 3, !dbg !4154
  %arraydecay95 = getelementptr inbounds [3 x i8], [3 x i8]* %color94, i64 0, i64 0, !dbg !4154
  call void @gpu_color_from_mask_copy(float %88, float* %arraydecay93, i8* %arraydecay95), !dbg !4154
  br label %if.end100, !dbg !4154

if.else96:                                        ; preds = %if.end82
  %90 = load %struct.VertexBufferFormat*, %struct.VertexBufferFormat** %out83, align 8, !dbg !4154
  %color97 = getelementptr inbounds %struct.VertexBufferFormat, %struct.VertexBufferFormat* %90, i32 0, i32 3, !dbg !4154
  %arraydecay98 = getelementptr inbounds [3 x i8], [3 x i8]* %color97, i64 0, i64 0, !dbg !4154
  %arraydecay99 = getelementptr inbounds [4 x float], [4 x float]* %diffuse_color, i64 0, i64 0, !dbg !4154
  call void @rgb_float_to_uchar(i8* %arraydecay98, float* %arraydecay99), !dbg !4154
  br label %if.end100

if.end100:                                        ; preds = %if.else96, %if.then90
  %91 = load %struct.MFace*, %struct.MFace** %f41, align 8, !dbg !4156
  %v4 = getelementptr inbounds %struct.MFace, %struct.MFace* %91, i32 0, i32 3, !dbg !4158
  %92 = load i32, i32* %v4, align 4, !dbg !4158
  %tobool101 = icmp ne i32 %92, 0, !dbg !4156
  br i1 %tobool101, label %if.then102, label %if.end122, !dbg !4159

if.then102:                                       ; preds = %if.end100
  call void @llvm.dbg.declare(metadata %struct.VertexBufferFormat** %out103, metadata !4160, metadata !DIExpression()), !dbg !4162
  %93 = load %struct.VertexBufferFormat*, %struct.VertexBufferFormat** %vert_data, align 8, !dbg !4162
  %94 = load [4 x i32]*, [4 x i32]** %face_vert_indices.addr, align 8, !dbg !4162
  %95 = load i32, i32* %i, align 4, !dbg !4162
  %idxprom104 = sext i32 %95 to i64, !dbg !4162
  %arrayidx105 = getelementptr inbounds [4 x i32], [4 x i32]* %94, i64 %idxprom104, !dbg !4162
  %arrayidx106 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx105, i64 0, i64 3, !dbg !4162
  %96 = load i32, i32* %arrayidx106, align 4, !dbg !4162
  %idx.ext107 = sext i32 %96 to i64, !dbg !4162
  %add.ptr108 = getelementptr inbounds %struct.VertexBufferFormat, %struct.VertexBufferFormat* %93, i64 %idx.ext107, !dbg !4162
  store %struct.VertexBufferFormat* %add.ptr108, %struct.VertexBufferFormat** %out103, align 8, !dbg !4162
  %97 = load float*, float** %vmask.addr, align 8, !dbg !4163
  %tobool109 = icmp ne float* %97, null, !dbg !4163
  br i1 %tobool109, label %if.then110, label %if.else117, !dbg !4162

if.then110:                                       ; preds = %if.then102
  %98 = load float*, float** %vmask.addr, align 8, !dbg !4163
  %99 = load %struct.MFace*, %struct.MFace** %f41, align 8, !dbg !4163
  %v4111 = getelementptr inbounds %struct.MFace, %struct.MFace* %99, i32 0, i32 3, !dbg !4163
  %100 = load i32, i32* %v4111, align 4, !dbg !4163
  %idxprom112 = zext i32 %100 to i64, !dbg !4163
  %arrayidx113 = getelementptr inbounds float, float* %98, i64 %idxprom112, !dbg !4163
  %101 = load float, float* %arrayidx113, align 4, !dbg !4163
  %arraydecay114 = getelementptr inbounds [4 x float], [4 x float]* %diffuse_color, i64 0, i64 0, !dbg !4163
  %102 = load %struct.VertexBufferFormat*, %struct.VertexBufferFormat** %out103, align 8, !dbg !4163
  %color115 = getelementptr inbounds %struct.VertexBufferFormat, %struct.VertexBufferFormat* %102, i32 0, i32 3, !dbg !4163
  %arraydecay116 = getelementptr inbounds [3 x i8], [3 x i8]* %color115, i64 0, i64 0, !dbg !4163
  call void @gpu_color_from_mask_copy(float %101, float* %arraydecay114, i8* %arraydecay116), !dbg !4163
  br label %if.end121, !dbg !4163

if.else117:                                       ; preds = %if.then102
  %103 = load %struct.VertexBufferFormat*, %struct.VertexBufferFormat** %out103, align 8, !dbg !4163
  %color118 = getelementptr inbounds %struct.VertexBufferFormat, %struct.VertexBufferFormat* %103, i32 0, i32 3, !dbg !4163
  %arraydecay119 = getelementptr inbounds [3 x i8], [3 x i8]* %color118, i64 0, i64 0, !dbg !4163
  %arraydecay120 = getelementptr inbounds [4 x float], [4 x float]* %diffuse_color, i64 0, i64 0, !dbg !4163
  call void @rgb_float_to_uchar(i8* %arraydecay119, float* %arraydecay120), !dbg !4163
  br label %if.end121

if.end121:                                        ; preds = %if.else117, %if.then110
  br label %if.end122, !dbg !4162

if.end122:                                        ; preds = %if.end121, %if.end100
  br label %for.inc123, !dbg !4165

for.inc123:                                       ; preds = %if.end122
  %104 = load i32, i32* %i, align 4, !dbg !4166
  %inc124 = add nsw i32 %104, 1, !dbg !4166
  store i32 %inc124, i32* %i, align 4, !dbg !4166
  br label %for.cond37, !dbg !4167, !llvm.loop !4168

for.end125:                                       ; preds = %for.cond37
  br label %if.end271, !dbg !4170

if.else126:                                       ; preds = %if.then21
  store i32 0, i32* %i, align 4, !dbg !4171
  br label %for.cond127, !dbg !4174

for.cond127:                                      ; preds = %for.inc268, %if.else126
  %105 = load i32, i32* %i, align 4, !dbg !4175
  %106 = load %struct.GPU_PBVH_Buffers*, %struct.GPU_PBVH_Buffers** %buffers.addr, align 8, !dbg !4177
  %totface128 = getelementptr inbounds %struct.GPU_PBVH_Buffers, %struct.GPU_PBVH_Buffers* %106, i32 0, i32 6, !dbg !4178
  %107 = load i32, i32* %totface128, align 8, !dbg !4178
  %cmp129 = icmp slt i32 %105, %107, !dbg !4179
  br i1 %cmp129, label %for.body131, label %for.end270, !dbg !4180

for.body131:                                      ; preds = %for.cond127
  call void @llvm.dbg.declare(metadata %struct.MFace** %f132, metadata !4181, metadata !DIExpression()), !dbg !4185
  %108 = load %struct.GPU_PBVH_Buffers*, %struct.GPU_PBVH_Buffers** %buffers.addr, align 8, !dbg !4186
  %mface133 = getelementptr inbounds %struct.GPU_PBVH_Buffers, %struct.GPU_PBVH_Buffers* %108, i32 0, i32 3, !dbg !4187
  %109 = load %struct.MFace*, %struct.MFace** %mface133, align 8, !dbg !4187
  %110 = load %struct.GPU_PBVH_Buffers*, %struct.GPU_PBVH_Buffers** %buffers.addr, align 8, !dbg !4188
  %face_indices134 = getelementptr inbounds %struct.GPU_PBVH_Buffers, %struct.GPU_PBVH_Buffers* %110, i32 0, i32 5, !dbg !4189
  %111 = load i32*, i32** %face_indices134, align 8, !dbg !4189
  %112 = load i32, i32* %i, align 4, !dbg !4190
  %idxprom135 = sext i32 %112 to i64, !dbg !4188
  %arrayidx136 = getelementptr inbounds i32, i32* %111, i64 %idxprom135, !dbg !4188
  %113 = load i32, i32* %arrayidx136, align 4, !dbg !4188
  %idxprom137 = sext i32 %113 to i64, !dbg !4186
  %arrayidx138 = getelementptr inbounds %struct.MFace, %struct.MFace* %109, i64 %idxprom137, !dbg !4186
  store %struct.MFace* %arrayidx138, %struct.MFace** %f132, align 8, !dbg !4185
  call void @llvm.dbg.declare(metadata i32** %fv, metadata !4191, metadata !DIExpression()), !dbg !4194
  %114 = load %struct.MFace*, %struct.MFace** %f132, align 8, !dbg !4195
  %v1139 = getelementptr inbounds %struct.MFace, %struct.MFace* %114, i32 0, i32 0, !dbg !4196
  store i32* %v1139, i32** %fv, align 8, !dbg !4194
  call void @llvm.dbg.declare(metadata [2 x [3 x i32]]* %vi, metadata !4197, metadata !DIExpression()), !dbg !4200
  %115 = bitcast [2 x [3 x i32]]* %vi to i8*, !dbg !4200
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %115, i8* align 16 bitcast ([2 x [3 x i32]]* @__const.GPU_update_mesh_pbvh_buffers.vi to i8*), i64 24, i1 false), !dbg !4200
  call void @llvm.dbg.declare(metadata [3 x float]* %fno, metadata !4201, metadata !DIExpression()), !dbg !4202
  call void @llvm.dbg.declare(metadata [3 x i16]* %no140, metadata !4203, metadata !DIExpression()), !dbg !4204
  call void @llvm.dbg.declare(metadata float* %fmask, metadata !4205, metadata !DIExpression()), !dbg !4206
  %116 = load %struct.MFace*, %struct.MFace** %f132, align 8, !dbg !4207
  %117 = load %struct.MVert*, %struct.MVert** %mvert.addr, align 8, !dbg !4209
  %call141 = call zeroext i8 @paint_is_face_hidden(%struct.MFace* %116, %struct.MVert* %117), !dbg !4210
  %tobool142 = icmp ne i8 %call141, 0, !dbg !4210
  br i1 %tobool142, label %if.then143, label %if.end144, !dbg !4211

if.then143:                                       ; preds = %for.body131
  br label %for.inc268, !dbg !4212

if.end144:                                        ; preds = %for.body131
  %118 = load %struct.MFace*, %struct.MFace** %f132, align 8, !dbg !4213
  %v4145 = getelementptr inbounds %struct.MFace, %struct.MFace* %118, i32 0, i32 3, !dbg !4215
  %119 = load i32, i32* %v4145, align 4, !dbg !4215
  %tobool146 = icmp ne i32 %119, 0, !dbg !4213
  br i1 %tobool146, label %if.then147, label %if.else189, !dbg !4216

if.then147:                                       ; preds = %if.end144
  %arraydecay148 = getelementptr inbounds [3 x float], [3 x float]* %fno, i64 0, i64 0, !dbg !4217
  %120 = load %struct.MVert*, %struct.MVert** %mvert.addr, align 8, !dbg !4219
  %121 = load i32*, i32** %fv, align 8, !dbg !4220
  %arrayidx149 = getelementptr inbounds i32, i32* %121, i64 0, !dbg !4220
  %122 = load i32, i32* %arrayidx149, align 4, !dbg !4220
  %idxprom150 = zext i32 %122 to i64, !dbg !4219
  %arrayidx151 = getelementptr inbounds %struct.MVert, %struct.MVert* %120, i64 %idxprom150, !dbg !4219
  %co152 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx151, i32 0, i32 0, !dbg !4221
  %arraydecay153 = getelementptr inbounds [3 x float], [3 x float]* %co152, i64 0, i64 0, !dbg !4219
  %123 = load %struct.MVert*, %struct.MVert** %mvert.addr, align 8, !dbg !4222
  %124 = load i32*, i32** %fv, align 8, !dbg !4223
  %arrayidx154 = getelementptr inbounds i32, i32* %124, i64 1, !dbg !4223
  %125 = load i32, i32* %arrayidx154, align 4, !dbg !4223
  %idxprom155 = zext i32 %125 to i64, !dbg !4222
  %arrayidx156 = getelementptr inbounds %struct.MVert, %struct.MVert* %123, i64 %idxprom155, !dbg !4222
  %co157 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx156, i32 0, i32 0, !dbg !4224
  %arraydecay158 = getelementptr inbounds [3 x float], [3 x float]* %co157, i64 0, i64 0, !dbg !4222
  %126 = load %struct.MVert*, %struct.MVert** %mvert.addr, align 8, !dbg !4225
  %127 = load i32*, i32** %fv, align 8, !dbg !4226
  %arrayidx159 = getelementptr inbounds i32, i32* %127, i64 2, !dbg !4226
  %128 = load i32, i32* %arrayidx159, align 4, !dbg !4226
  %idxprom160 = zext i32 %128 to i64, !dbg !4225
  %arrayidx161 = getelementptr inbounds %struct.MVert, %struct.MVert* %126, i64 %idxprom160, !dbg !4225
  %co162 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx161, i32 0, i32 0, !dbg !4227
  %arraydecay163 = getelementptr inbounds [3 x float], [3 x float]* %co162, i64 0, i64 0, !dbg !4225
  %129 = load %struct.MVert*, %struct.MVert** %mvert.addr, align 8, !dbg !4228
  %130 = load i32*, i32** %fv, align 8, !dbg !4229
  %arrayidx164 = getelementptr inbounds i32, i32* %130, i64 3, !dbg !4229
  %131 = load i32, i32* %arrayidx164, align 4, !dbg !4229
  %idxprom165 = zext i32 %131 to i64, !dbg !4228
  %arrayidx166 = getelementptr inbounds %struct.MVert, %struct.MVert* %129, i64 %idxprom165, !dbg !4228
  %co167 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx166, i32 0, i32 0, !dbg !4230
  %arraydecay168 = getelementptr inbounds [3 x float], [3 x float]* %co167, i64 0, i64 0, !dbg !4228
  %call169 = call float @normal_quad_v3(float* %arraydecay148, float* %arraydecay153, float* %arraydecay158, float* %arraydecay163, float* %arraydecay168), !dbg !4231
  %132 = load float*, float** %vmask.addr, align 8, !dbg !4232
  %tobool170 = icmp ne float* %132, null, !dbg !4232
  br i1 %tobool170, label %if.then171, label %if.end188, !dbg !4234

if.then171:                                       ; preds = %if.then147
  %133 = load float*, float** %vmask.addr, align 8, !dbg !4235
  %134 = load i32*, i32** %fv, align 8, !dbg !4237
  %arrayidx172 = getelementptr inbounds i32, i32* %134, i64 0, !dbg !4237
  %135 = load i32, i32* %arrayidx172, align 4, !dbg !4237
  %idxprom173 = zext i32 %135 to i64, !dbg !4235
  %arrayidx174 = getelementptr inbounds float, float* %133, i64 %idxprom173, !dbg !4235
  %136 = load float, float* %arrayidx174, align 4, !dbg !4235
  %137 = load float*, float** %vmask.addr, align 8, !dbg !4238
  %138 = load i32*, i32** %fv, align 8, !dbg !4239
  %arrayidx175 = getelementptr inbounds i32, i32* %138, i64 1, !dbg !4239
  %139 = load i32, i32* %arrayidx175, align 4, !dbg !4239
  %idxprom176 = zext i32 %139 to i64, !dbg !4238
  %arrayidx177 = getelementptr inbounds float, float* %137, i64 %idxprom176, !dbg !4238
  %140 = load float, float* %arrayidx177, align 4, !dbg !4238
  %add178 = fadd float %136, %140, !dbg !4240
  %141 = load float*, float** %vmask.addr, align 8, !dbg !4241
  %142 = load i32*, i32** %fv, align 8, !dbg !4242
  %arrayidx179 = getelementptr inbounds i32, i32* %142, i64 2, !dbg !4242
  %143 = load i32, i32* %arrayidx179, align 4, !dbg !4242
  %idxprom180 = zext i32 %143 to i64, !dbg !4241
  %arrayidx181 = getelementptr inbounds float, float* %141, i64 %idxprom180, !dbg !4241
  %144 = load float, float* %arrayidx181, align 4, !dbg !4241
  %add182 = fadd float %add178, %144, !dbg !4243
  %145 = load float*, float** %vmask.addr, align 8, !dbg !4244
  %146 = load i32*, i32** %fv, align 8, !dbg !4245
  %arrayidx183 = getelementptr inbounds i32, i32* %146, i64 3, !dbg !4245
  %147 = load i32, i32* %arrayidx183, align 4, !dbg !4245
  %idxprom184 = zext i32 %147 to i64, !dbg !4244
  %arrayidx185 = getelementptr inbounds float, float* %145, i64 %idxprom184, !dbg !4244
  %148 = load float, float* %arrayidx185, align 4, !dbg !4244
  %add186 = fadd float %add182, %148, !dbg !4246
  %mul187 = fmul float %add186, 2.500000e-01, !dbg !4247
  store float %mul187, float* %fmask, align 4, !dbg !4248
  br label %if.end188, !dbg !4249

if.end188:                                        ; preds = %if.then171, %if.then147
  br label %if.end221, !dbg !4250

if.else189:                                       ; preds = %if.end144
  %arraydecay190 = getelementptr inbounds [3 x float], [3 x float]* %fno, i64 0, i64 0, !dbg !4251
  %149 = load %struct.MVert*, %struct.MVert** %mvert.addr, align 8, !dbg !4253
  %150 = load i32*, i32** %fv, align 8, !dbg !4254
  %arrayidx191 = getelementptr inbounds i32, i32* %150, i64 0, !dbg !4254
  %151 = load i32, i32* %arrayidx191, align 4, !dbg !4254
  %idxprom192 = zext i32 %151 to i64, !dbg !4253
  %arrayidx193 = getelementptr inbounds %struct.MVert, %struct.MVert* %149, i64 %idxprom192, !dbg !4253
  %co194 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx193, i32 0, i32 0, !dbg !4255
  %arraydecay195 = getelementptr inbounds [3 x float], [3 x float]* %co194, i64 0, i64 0, !dbg !4253
  %152 = load %struct.MVert*, %struct.MVert** %mvert.addr, align 8, !dbg !4256
  %153 = load i32*, i32** %fv, align 8, !dbg !4257
  %arrayidx196 = getelementptr inbounds i32, i32* %153, i64 1, !dbg !4257
  %154 = load i32, i32* %arrayidx196, align 4, !dbg !4257
  %idxprom197 = zext i32 %154 to i64, !dbg !4256
  %arrayidx198 = getelementptr inbounds %struct.MVert, %struct.MVert* %152, i64 %idxprom197, !dbg !4256
  %co199 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx198, i32 0, i32 0, !dbg !4258
  %arraydecay200 = getelementptr inbounds [3 x float], [3 x float]* %co199, i64 0, i64 0, !dbg !4256
  %155 = load %struct.MVert*, %struct.MVert** %mvert.addr, align 8, !dbg !4259
  %156 = load i32*, i32** %fv, align 8, !dbg !4260
  %arrayidx201 = getelementptr inbounds i32, i32* %156, i64 2, !dbg !4260
  %157 = load i32, i32* %arrayidx201, align 4, !dbg !4260
  %idxprom202 = zext i32 %157 to i64, !dbg !4259
  %arrayidx203 = getelementptr inbounds %struct.MVert, %struct.MVert* %155, i64 %idxprom202, !dbg !4259
  %co204 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx203, i32 0, i32 0, !dbg !4261
  %arraydecay205 = getelementptr inbounds [3 x float], [3 x float]* %co204, i64 0, i64 0, !dbg !4259
  %call206 = call float @normal_tri_v3(float* %arraydecay190, float* %arraydecay195, float* %arraydecay200, float* %arraydecay205), !dbg !4262
  %158 = load float*, float** %vmask.addr, align 8, !dbg !4263
  %tobool207 = icmp ne float* %158, null, !dbg !4263
  br i1 %tobool207, label %if.then208, label %if.end220, !dbg !4265

if.then208:                                       ; preds = %if.else189
  %159 = load float*, float** %vmask.addr, align 8, !dbg !4266
  %160 = load i32*, i32** %fv, align 8, !dbg !4268
  %arrayidx209 = getelementptr inbounds i32, i32* %160, i64 0, !dbg !4268
  %161 = load i32, i32* %arrayidx209, align 4, !dbg !4268
  %idxprom210 = zext i32 %161 to i64, !dbg !4266
  %arrayidx211 = getelementptr inbounds float, float* %159, i64 %idxprom210, !dbg !4266
  %162 = load float, float* %arrayidx211, align 4, !dbg !4266
  %163 = load float*, float** %vmask.addr, align 8, !dbg !4269
  %164 = load i32*, i32** %fv, align 8, !dbg !4270
  %arrayidx212 = getelementptr inbounds i32, i32* %164, i64 1, !dbg !4270
  %165 = load i32, i32* %arrayidx212, align 4, !dbg !4270
  %idxprom213 = zext i32 %165 to i64, !dbg !4269
  %arrayidx214 = getelementptr inbounds float, float* %163, i64 %idxprom213, !dbg !4269
  %166 = load float, float* %arrayidx214, align 4, !dbg !4269
  %add215 = fadd float %162, %166, !dbg !4271
  %167 = load float*, float** %vmask.addr, align 8, !dbg !4272
  %168 = load i32*, i32** %fv, align 8, !dbg !4273
  %arrayidx216 = getelementptr inbounds i32, i32* %168, i64 2, !dbg !4273
  %169 = load i32, i32* %arrayidx216, align 4, !dbg !4273
  %idxprom217 = zext i32 %169 to i64, !dbg !4272
  %arrayidx218 = getelementptr inbounds float, float* %167, i64 %idxprom217, !dbg !4272
  %170 = load float, float* %arrayidx218, align 4, !dbg !4272
  %add219 = fadd float %add215, %170, !dbg !4274
  %div = fdiv float %add219, 3.000000e+00, !dbg !4275
  store float %div, float* %fmask, align 4, !dbg !4276
  br label %if.end220, !dbg !4277

if.end220:                                        ; preds = %if.then208, %if.else189
  br label %if.end221

if.end221:                                        ; preds = %if.end220, %if.end188
  %arraydecay222 = getelementptr inbounds [3 x i16], [3 x i16]* %no140, i64 0, i64 0, !dbg !4278
  %arraydecay223 = getelementptr inbounds [3 x float], [3 x float]* %fno, i64 0, i64 0, !dbg !4279
  call void @normal_float_to_short_v3(i16* %arraydecay222, float* %arraydecay223), !dbg !4280
  store i32 0, i32* %j, align 4, !dbg !4281
  br label %for.cond224, !dbg !4283

for.cond224:                                      ; preds = %for.inc265, %if.end221
  %171 = load i32, i32* %j, align 4, !dbg !4284
  %172 = load %struct.MFace*, %struct.MFace** %f132, align 8, !dbg !4286
  %v4225 = getelementptr inbounds %struct.MFace, %struct.MFace* %172, i32 0, i32 3, !dbg !4287
  %173 = load i32, i32* %v4225, align 4, !dbg !4287
  %tobool226 = icmp ne i32 %173, 0, !dbg !4286
  %174 = zext i1 %tobool226 to i64, !dbg !4286
  %cond227 = select i1 %tobool226, i32 2, i32 1, !dbg !4286
  %cmp228 = icmp slt i32 %171, %cond227, !dbg !4288
  br i1 %cmp228, label %for.body230, label %for.end267, !dbg !4289

for.body230:                                      ; preds = %for.cond224
  store i32 0, i32* %k, align 4, !dbg !4290
  br label %for.cond231, !dbg !4293

for.cond231:                                      ; preds = %for.inc262, %for.body230
  %175 = load i32, i32* %k, align 4, !dbg !4294
  %cmp232 = icmp slt i32 %175, 3, !dbg !4296
  br i1 %cmp232, label %for.body234, label %for.end264, !dbg !4297

for.body234:                                      ; preds = %for.cond231
  call void @llvm.dbg.declare(metadata %struct.MVert** %v235, metadata !4298, metadata !DIExpression()), !dbg !4302
  %176 = load %struct.MVert*, %struct.MVert** %mvert.addr, align 8, !dbg !4303
  %177 = load i32*, i32** %fv, align 8, !dbg !4304
  %178 = load i32, i32* %j, align 4, !dbg !4305
  %idxprom236 = sext i32 %178 to i64, !dbg !4306
  %arrayidx237 = getelementptr inbounds [2 x [3 x i32]], [2 x [3 x i32]]* %vi, i64 0, i64 %idxprom236, !dbg !4306
  %179 = load i32, i32* %k, align 4, !dbg !4307
  %idxprom238 = sext i32 %179 to i64, !dbg !4306
  %arrayidx239 = getelementptr inbounds [3 x i32], [3 x i32]* %arrayidx237, i64 0, i64 %idxprom238, !dbg !4306
  %180 = load i32, i32* %arrayidx239, align 4, !dbg !4306
  %idxprom240 = sext i32 %180 to i64, !dbg !4304
  %arrayidx241 = getelementptr inbounds i32, i32* %177, i64 %idxprom240, !dbg !4304
  %181 = load i32, i32* %arrayidx241, align 4, !dbg !4304
  %idxprom242 = zext i32 %181 to i64, !dbg !4303
  %arrayidx243 = getelementptr inbounds %struct.MVert, %struct.MVert* %176, i64 %idxprom242, !dbg !4303
  store %struct.MVert* %arrayidx243, %struct.MVert** %v235, align 8, !dbg !4302
  call void @llvm.dbg.declare(metadata %struct.VertexBufferFormat** %out244, metadata !4308, metadata !DIExpression()), !dbg !4309
  %182 = load %struct.VertexBufferFormat*, %struct.VertexBufferFormat** %vert_data, align 8, !dbg !4310
  store %struct.VertexBufferFormat* %182, %struct.VertexBufferFormat** %out244, align 8, !dbg !4309
  %183 = load %struct.VertexBufferFormat*, %struct.VertexBufferFormat** %out244, align 8, !dbg !4311
  %co245 = getelementptr inbounds %struct.VertexBufferFormat, %struct.VertexBufferFormat* %183, i32 0, i32 0, !dbg !4312
  %arraydecay246 = getelementptr inbounds [3 x float], [3 x float]* %co245, i64 0, i64 0, !dbg !4311
  %184 = load %struct.MVert*, %struct.MVert** %v235, align 8, !dbg !4313
  %co247 = getelementptr inbounds %struct.MVert, %struct.MVert* %184, i32 0, i32 0, !dbg !4314
  %arraydecay248 = getelementptr inbounds [3 x float], [3 x float]* %co247, i64 0, i64 0, !dbg !4313
  call void @copy_v3_v3(float* %arraydecay246, float* %arraydecay248), !dbg !4315
  %185 = load %struct.VertexBufferFormat*, %struct.VertexBufferFormat** %out244, align 8, !dbg !4316
  %no249 = getelementptr inbounds %struct.VertexBufferFormat, %struct.VertexBufferFormat* %185, i32 0, i32 1, !dbg !4317
  %arraydecay250 = getelementptr inbounds [3 x i16], [3 x i16]* %no249, i64 0, i64 0, !dbg !4318
  %186 = bitcast i16* %arraydecay250 to i8*, !dbg !4318
  %arraydecay251 = getelementptr inbounds [3 x i16], [3 x i16]* %no140, i64 0, i64 0, !dbg !4318
  %187 = bitcast i16* %arraydecay251 to i8*, !dbg !4318
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %186, i8* align 2 %187, i64 6, i1 false), !dbg !4318
  %188 = load float*, float** %vmask.addr, align 8, !dbg !4319
  %tobool252 = icmp ne float* %188, null, !dbg !4319
  br i1 %tobool252, label %if.then253, label %if.else257, !dbg !4321

if.then253:                                       ; preds = %for.body234
  %189 = load float, float* %fmask, align 4, !dbg !4322
  %arraydecay254 = getelementptr inbounds [4 x float], [4 x float]* %diffuse_color, i64 0, i64 0, !dbg !4323
  %190 = load %struct.VertexBufferFormat*, %struct.VertexBufferFormat** %out244, align 8, !dbg !4324
  %color255 = getelementptr inbounds %struct.VertexBufferFormat, %struct.VertexBufferFormat* %190, i32 0, i32 3, !dbg !4325
  %arraydecay256 = getelementptr inbounds [3 x i8], [3 x i8]* %color255, i64 0, i64 0, !dbg !4324
  call void @gpu_color_from_mask_copy(float %189, float* %arraydecay254, i8* %arraydecay256), !dbg !4326
  br label %if.end261, !dbg !4326

if.else257:                                       ; preds = %for.body234
  %191 = load %struct.VertexBufferFormat*, %struct.VertexBufferFormat** %out244, align 8, !dbg !4327
  %color258 = getelementptr inbounds %struct.VertexBufferFormat, %struct.VertexBufferFormat* %191, i32 0, i32 3, !dbg !4328
  %arraydecay259 = getelementptr inbounds [3 x i8], [3 x i8]* %color258, i64 0, i64 0, !dbg !4327
  %arraydecay260 = getelementptr inbounds [4 x float], [4 x float]* %diffuse_color, i64 0, i64 0, !dbg !4329
  call void @rgb_float_to_uchar(i8* %arraydecay259, float* %arraydecay260), !dbg !4330
  br label %if.end261

if.end261:                                        ; preds = %if.else257, %if.then253
  %192 = load %struct.VertexBufferFormat*, %struct.VertexBufferFormat** %vert_data, align 8, !dbg !4331
  %incdec.ptr = getelementptr inbounds %struct.VertexBufferFormat, %struct.VertexBufferFormat* %192, i32 1, !dbg !4331
  store %struct.VertexBufferFormat* %incdec.ptr, %struct.VertexBufferFormat** %vert_data, align 8, !dbg !4331
  br label %for.inc262, !dbg !4332

for.inc262:                                       ; preds = %if.end261
  %193 = load i32, i32* %k, align 4, !dbg !4333
  %inc263 = add nsw i32 %193, 1, !dbg !4333
  store i32 %inc263, i32* %k, align 4, !dbg !4333
  br label %for.cond231, !dbg !4334, !llvm.loop !4335

for.end264:                                       ; preds = %for.cond231
  br label %for.inc265, !dbg !4337

for.inc265:                                       ; preds = %for.end264
  %194 = load i32, i32* %j, align 4, !dbg !4338
  %inc266 = add nsw i32 %194, 1, !dbg !4338
  store i32 %inc266, i32* %j, align 4, !dbg !4338
  br label %for.cond224, !dbg !4339, !llvm.loop !4340

for.end267:                                       ; preds = %for.cond224
  br label %for.inc268, !dbg !4342

for.inc268:                                       ; preds = %for.end267, %if.then143
  %195 = load i32, i32* %i, align 4, !dbg !4343
  %inc269 = add nsw i32 %195, 1, !dbg !4343
  store i32 %inc269, i32* %i, align 4, !dbg !4343
  br label %for.cond127, !dbg !4344, !llvm.loop !4345

for.end270:                                       ; preds = %for.cond127
  br label %if.end271

if.end271:                                        ; preds = %for.end270, %for.end125
  %196 = load i8 (i32)*, i8 (i32)** @__glewUnmapBufferARB, align 8, !dbg !4347
  %call272 = call zeroext i8 %196(i32 34962), !dbg !4347
  br label %if.end276, !dbg !4348

if.else273:                                       ; preds = %if.end12
  %197 = load void (i32, i32*)*, void (i32, i32*)** @__glewDeleteBuffersARB, align 8, !dbg !4349
  %198 = load %struct.GPU_PBVH_Buffers*, %struct.GPU_PBVH_Buffers** %buffers.addr, align 8, !dbg !4351
  %vert_buf274 = getelementptr inbounds %struct.GPU_PBVH_Buffers, %struct.GPU_PBVH_Buffers* %198, i32 0, i32 0, !dbg !4352
  call void %197(i32 1, i32* %vert_buf274), !dbg !4349
  %199 = load %struct.GPU_PBVH_Buffers*, %struct.GPU_PBVH_Buffers** %buffers.addr, align 8, !dbg !4353
  %vert_buf275 = getelementptr inbounds %struct.GPU_PBVH_Buffers, %struct.GPU_PBVH_Buffers* %199, i32 0, i32 0, !dbg !4354
  store i32 0, i32* %vert_buf275, align 8, !dbg !4355
  br label %if.end276

if.end276:                                        ; preds = %if.else273, %if.end271
  %200 = load void (i32, i32)*, void (i32, i32)** @__glewBindBufferARB, align 8, !dbg !4356
  call void %200(i32 34962, i32 0), !dbg !4356
  br label %if.end277, !dbg !4357

if.end277:                                        ; preds = %if.end276, %entry
  %201 = load %struct.MVert*, %struct.MVert** %mvert.addr, align 8, !dbg !4358
  %202 = load %struct.GPU_PBVH_Buffers*, %struct.GPU_PBVH_Buffers** %buffers.addr, align 8, !dbg !4359
  %mvert278 = getelementptr inbounds %struct.GPU_PBVH_Buffers, %struct.GPU_PBVH_Buffers* %202, i32 0, i32 4, !dbg !4360
  store %struct.MVert* %201, %struct.MVert** %mvert278, align 8, !dbg !4361
  ret void, !dbg !4362
}

declare dso_local zeroext i8 @GPU_material_use_matcaps_get() #2

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #3

declare dso_local void @GPU_material_diffuse_get(i32, float*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @copy_v4_v4(float* %r, float* %a) #0 !dbg !4363 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !4367, metadata !DIExpression()), !dbg !4368
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !4369, metadata !DIExpression()), !dbg !4370
  %0 = load float*, float** %a.addr, align 8, !dbg !4371
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !4371
  %1 = load float, float* %arrayidx, align 4, !dbg !4371
  %2 = load float*, float** %r.addr, align 8, !dbg !4372
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !4372
  store float %1, float* %arrayidx1, align 4, !dbg !4373
  %3 = load float*, float** %a.addr, align 8, !dbg !4374
  %arrayidx2 = getelementptr inbounds float, float* %3, i64 1, !dbg !4374
  %4 = load float, float* %arrayidx2, align 4, !dbg !4374
  %5 = load float*, float** %r.addr, align 8, !dbg !4375
  %arrayidx3 = getelementptr inbounds float, float* %5, i64 1, !dbg !4375
  store float %4, float* %arrayidx3, align 4, !dbg !4376
  %6 = load float*, float** %a.addr, align 8, !dbg !4377
  %arrayidx4 = getelementptr inbounds float, float* %6, i64 2, !dbg !4377
  %7 = load float, float* %arrayidx4, align 4, !dbg !4377
  %8 = load float*, float** %r.addr, align 8, !dbg !4378
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 2, !dbg !4378
  store float %7, float* %arrayidx5, align 4, !dbg !4379
  %9 = load float*, float** %a.addr, align 8, !dbg !4380
  %arrayidx6 = getelementptr inbounds float, float* %9, i64 3, !dbg !4380
  %10 = load float, float* %arrayidx6, align 4, !dbg !4380
  %11 = load float*, float** %r.addr, align 8, !dbg !4381
  %arrayidx7 = getelementptr inbounds float, float* %11, i64 3, !dbg !4381
  store float %10, float* %arrayidx7, align 4, !dbg !4382
  ret void, !dbg !4383
}

; Function Attrs: noinline nounwind uwtable
define internal void @copy_v3_v3(float* %r, float* %a) #0 !dbg !4384 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !4385, metadata !DIExpression()), !dbg !4386
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !4387, metadata !DIExpression()), !dbg !4388
  %0 = load float*, float** %a.addr, align 8, !dbg !4389
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !4389
  %1 = load float, float* %arrayidx, align 4, !dbg !4389
  %2 = load float*, float** %r.addr, align 8, !dbg !4390
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !4390
  store float %1, float* %arrayidx1, align 4, !dbg !4391
  %3 = load float*, float** %a.addr, align 8, !dbg !4392
  %arrayidx2 = getelementptr inbounds float, float* %3, i64 1, !dbg !4392
  %4 = load float, float* %arrayidx2, align 4, !dbg !4392
  %5 = load float*, float** %r.addr, align 8, !dbg !4393
  %arrayidx3 = getelementptr inbounds float, float* %5, i64 1, !dbg !4393
  store float %4, float* %arrayidx3, align 4, !dbg !4394
  %6 = load float*, float** %a.addr, align 8, !dbg !4395
  %arrayidx4 = getelementptr inbounds float, float* %6, i64 2, !dbg !4395
  %7 = load float, float* %arrayidx4, align 4, !dbg !4395
  %8 = load float*, float** %r.addr, align 8, !dbg !4396
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 2, !dbg !4396
  store float %7, float* %arrayidx5, align 4, !dbg !4397
  ret void, !dbg !4398
}

; Function Attrs: noinline nounwind uwtable
define internal void @gpu_color_from_mask_copy(float %mask, float* %diffuse_color, i8* %out) #0 !dbg !4399 {
entry:
  %mask.addr = alloca float, align 4
  %diffuse_color.addr = alloca float*, align 8
  %out.addr = alloca i8*, align 8
  %mask_color = alloca float, align 4
  store float %mask, float* %mask.addr, align 4
  call void @llvm.dbg.declare(metadata float* %mask.addr, metadata !4402, metadata !DIExpression()), !dbg !4403
  store float* %diffuse_color, float** %diffuse_color.addr, align 8
  call void @llvm.dbg.declare(metadata float** %diffuse_color.addr, metadata !4404, metadata !DIExpression()), !dbg !4405
  store i8* %out, i8** %out.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %out.addr, metadata !4406, metadata !DIExpression()), !dbg !4407
  call void @llvm.dbg.declare(metadata float* %mask_color, metadata !4408, metadata !DIExpression()), !dbg !4409
  %0 = load float, float* %mask.addr, align 4, !dbg !4410
  %call = call float @gpu_color_from_mask(float %0), !dbg !4411
  %mul = fmul float %call, 2.550000e+02, !dbg !4412
  store float %mul, float* %mask_color, align 4, !dbg !4413
  %1 = load float*, float** %diffuse_color.addr, align 8, !dbg !4414
  %arrayidx = getelementptr inbounds float, float* %1, i64 0, !dbg !4414
  %2 = load float, float* %arrayidx, align 4, !dbg !4414
  %3 = load float, float* %mask_color, align 4, !dbg !4415
  %mul1 = fmul float %2, %3, !dbg !4416
  %conv = fptoui float %mul1 to i8, !dbg !4414
  %4 = load i8*, i8** %out.addr, align 8, !dbg !4417
  %arrayidx2 = getelementptr inbounds i8, i8* %4, i64 0, !dbg !4417
  store i8 %conv, i8* %arrayidx2, align 1, !dbg !4418
  %5 = load float*, float** %diffuse_color.addr, align 8, !dbg !4419
  %arrayidx3 = getelementptr inbounds float, float* %5, i64 1, !dbg !4419
  %6 = load float, float* %arrayidx3, align 4, !dbg !4419
  %7 = load float, float* %mask_color, align 4, !dbg !4420
  %mul4 = fmul float %6, %7, !dbg !4421
  %conv5 = fptoui float %mul4 to i8, !dbg !4419
  %8 = load i8*, i8** %out.addr, align 8, !dbg !4422
  %arrayidx6 = getelementptr inbounds i8, i8* %8, i64 1, !dbg !4422
  store i8 %conv5, i8* %arrayidx6, align 1, !dbg !4423
  %9 = load float*, float** %diffuse_color.addr, align 8, !dbg !4424
  %arrayidx7 = getelementptr inbounds float, float* %9, i64 2, !dbg !4424
  %10 = load float, float* %arrayidx7, align 4, !dbg !4424
  %11 = load float, float* %mask_color, align 4, !dbg !4425
  %mul8 = fmul float %10, %11, !dbg !4426
  %conv9 = fptoui float %mul8 to i8, !dbg !4424
  %12 = load i8*, i8** %out.addr, align 8, !dbg !4427
  %arrayidx10 = getelementptr inbounds i8, i8* %12, i64 2, !dbg !4427
  store i8 %conv9, i8* %arrayidx10, align 1, !dbg !4428
  ret void, !dbg !4429
}

declare dso_local void @rgb_float_to_uchar(i8*, float*) #2

declare dso_local zeroext i8 @paint_is_face_hidden(%struct.MFace*, %struct.MVert*) #2

declare dso_local float @normal_quad_v3(float*, float*, float*, float*, float*) #2

declare dso_local float @normal_tri_v3(float*, float*, float*, float*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @normal_float_to_short_v3(i16* %out, float* %in) #0 !dbg !4430 {
entry:
  %out.addr = alloca i16*, align 8
  %in.addr = alloca float*, align 8
  store i16* %out, i16** %out.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %out.addr, metadata !4434, metadata !DIExpression()), !dbg !4435
  store float* %in, float** %in.addr, align 8
  call void @llvm.dbg.declare(metadata float** %in.addr, metadata !4436, metadata !DIExpression()), !dbg !4437
  %0 = load float*, float** %in.addr, align 8, !dbg !4438
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !4438
  %1 = load float, float* %arrayidx, align 4, !dbg !4438
  %mul = fmul float %1, 3.276700e+04, !dbg !4439
  %conv = fptosi float %mul to i16, !dbg !4440
  %2 = load i16*, i16** %out.addr, align 8, !dbg !4441
  %arrayidx1 = getelementptr inbounds i16, i16* %2, i64 0, !dbg !4441
  store i16 %conv, i16* %arrayidx1, align 2, !dbg !4442
  %3 = load float*, float** %in.addr, align 8, !dbg !4443
  %arrayidx2 = getelementptr inbounds float, float* %3, i64 1, !dbg !4443
  %4 = load float, float* %arrayidx2, align 4, !dbg !4443
  %mul3 = fmul float %4, 3.276700e+04, !dbg !4444
  %conv4 = fptosi float %mul3 to i16, !dbg !4445
  %5 = load i16*, i16** %out.addr, align 8, !dbg !4446
  %arrayidx5 = getelementptr inbounds i16, i16* %5, i64 1, !dbg !4446
  store i16 %conv4, i16* %arrayidx5, align 2, !dbg !4447
  %6 = load float*, float** %in.addr, align 8, !dbg !4448
  %arrayidx6 = getelementptr inbounds float, float* %6, i64 2, !dbg !4448
  %7 = load float, float* %arrayidx6, align 4, !dbg !4448
  %mul7 = fmul float %7, 3.276700e+04, !dbg !4449
  %conv8 = fptosi float %mul7 to i16, !dbg !4450
  %8 = load i16*, i16** %out.addr, align 8, !dbg !4451
  %arrayidx9 = getelementptr inbounds i16, i16* %8, i64 2, !dbg !4451
  store i16 %conv8, i16* %arrayidx9, align 2, !dbg !4452
  ret void, !dbg !4453
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.GPU_PBVH_Buffers* @GPU_build_mesh_pbvh_buffers([4 x i32]* %face_vert_indices, %struct.MFace* %mface, %struct.MVert* %mvert, i32* %face_indices, i32 %totface) #0 !dbg !4454 {
entry:
  %retval = alloca %struct.GPU_PBVH_Buffers*, align 8
  %face_vert_indices.addr = alloca [4 x i32]*, align 8
  %mface.addr = alloca %struct.MFace*, align 8
  %mvert.addr = alloca %struct.MVert*, align 8
  %face_indices.addr = alloca i32*, align 8
  %totface.addr = alloca i32, align 4
  %buffers = alloca %struct.GPU_PBVH_Buffers*, align 8
  %tri_data = alloca i16*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %tottri = alloca i32, align 4
  %f = alloca %struct.MFace*, align 8
  %f35 = alloca %struct.MFace*, align 8
  %v = alloca [3 x i32], align 4
  store [4 x i32]* %face_vert_indices, [4 x i32]** %face_vert_indices.addr, align 8
  call void @llvm.dbg.declare(metadata [4 x i32]** %face_vert_indices.addr, metadata !4457, metadata !DIExpression()), !dbg !4458
  store %struct.MFace* %mface, %struct.MFace** %mface.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MFace** %mface.addr, metadata !4459, metadata !DIExpression()), !dbg !4460
  store %struct.MVert* %mvert, %struct.MVert** %mvert.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MVert** %mvert.addr, metadata !4461, metadata !DIExpression()), !dbg !4462
  store i32* %face_indices, i32** %face_indices.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %face_indices.addr, metadata !4463, metadata !DIExpression()), !dbg !4464
  store i32 %totface, i32* %totface.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %totface.addr, metadata !4465, metadata !DIExpression()), !dbg !4466
  call void @llvm.dbg.declare(metadata %struct.GPU_PBVH_Buffers** %buffers, metadata !4467, metadata !DIExpression()), !dbg !4468
  call void @llvm.dbg.declare(metadata i16** %tri_data, metadata !4469, metadata !DIExpression()), !dbg !4472
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4473, metadata !DIExpression()), !dbg !4474
  call void @llvm.dbg.declare(metadata i32* %j, metadata !4475, metadata !DIExpression()), !dbg !4476
  call void @llvm.dbg.declare(metadata i32* %k, metadata !4477, metadata !DIExpression()), !dbg !4478
  call void @llvm.dbg.declare(metadata i32* %tottri, metadata !4479, metadata !DIExpression()), !dbg !4480
  %0 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !4481
  %call = call i8* %0(i64 176, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.4, i64 0, i64 0)), !dbg !4481
  %1 = bitcast i8* %call to %struct.GPU_PBVH_Buffers*, !dbg !4481
  store %struct.GPU_PBVH_Buffers* %1, %struct.GPU_PBVH_Buffers** %buffers, align 8, !dbg !4482
  %2 = load %struct.GPU_PBVH_Buffers*, %struct.GPU_PBVH_Buffers** %buffers, align 8, !dbg !4483
  %index_type = getelementptr inbounds %struct.GPU_PBVH_Buffers, %struct.GPU_PBVH_Buffers* %2, i32 0, i32 2, !dbg !4484
  store i32 5123, i32* %index_type, align 8, !dbg !4485
  %3 = load %struct.MFace*, %struct.MFace** %mface.addr, align 8, !dbg !4486
  %4 = load i32*, i32** %face_indices.addr, align 8, !dbg !4487
  %arrayidx = getelementptr inbounds i32, i32* %4, i64 0, !dbg !4487
  %5 = load i32, i32* %arrayidx, align 4, !dbg !4487
  %idxprom = sext i32 %5 to i64, !dbg !4486
  %arrayidx1 = getelementptr inbounds %struct.MFace, %struct.MFace* %3, i64 %idxprom, !dbg !4486
  %flag = getelementptr inbounds %struct.MFace, %struct.MFace* %arrayidx1, i32 0, i32 6, !dbg !4488
  %6 = load i8, i8* %flag, align 1, !dbg !4488
  %conv = zext i8 %6 to i32, !dbg !4486
  %and = and i32 %conv, 1, !dbg !4489
  %7 = load %struct.GPU_PBVH_Buffers*, %struct.GPU_PBVH_Buffers** %buffers, align 8, !dbg !4490
  %smooth = getelementptr inbounds %struct.GPU_PBVH_Buffers, %struct.GPU_PBVH_Buffers* %7, i32 0, i32 18, !dbg !4491
  store i32 %and, i32* %smooth, align 4, !dbg !4492
  %8 = load %struct.GPU_PBVH_Buffers*, %struct.GPU_PBVH_Buffers** %buffers, align 8, !dbg !4493
  %show_diffuse_color = getelementptr inbounds %struct.GPU_PBVH_Buffers, %struct.GPU_PBVH_Buffers* %8, i32 0, i32 19, !dbg !4494
  store i8 0, i8* %show_diffuse_color, align 8, !dbg !4495
  %9 = load %struct.GPU_PBVH_Buffers*, %struct.GPU_PBVH_Buffers** %buffers, align 8, !dbg !4496
  %use_matcaps = getelementptr inbounds %struct.GPU_PBVH_Buffers, %struct.GPU_PBVH_Buffers* %9, i32 0, i32 20, !dbg !4497
  store i8 0, i8* %use_matcaps, align 1, !dbg !4498
  store i32 0, i32* %i, align 4, !dbg !4499
  store i32 0, i32* %tottri, align 4, !dbg !4501
  br label %for.cond, !dbg !4502

for.cond:                                         ; preds = %for.inc, %entry
  %10 = load i32, i32* %i, align 4, !dbg !4503
  %11 = load i32, i32* %totface.addr, align 4, !dbg !4505
  %cmp = icmp slt i32 %10, %11, !dbg !4506
  br i1 %cmp, label %for.body, label %for.end, !dbg !4507

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.MFace** %f, metadata !4508, metadata !DIExpression()), !dbg !4510
  %12 = load %struct.MFace*, %struct.MFace** %mface.addr, align 8, !dbg !4511
  %13 = load i32*, i32** %face_indices.addr, align 8, !dbg !4512
  %14 = load i32, i32* %i, align 4, !dbg !4513
  %idxprom3 = sext i32 %14 to i64, !dbg !4512
  %arrayidx4 = getelementptr inbounds i32, i32* %13, i64 %idxprom3, !dbg !4512
  %15 = load i32, i32* %arrayidx4, align 4, !dbg !4512
  %idxprom5 = sext i32 %15 to i64, !dbg !4511
  %arrayidx6 = getelementptr inbounds %struct.MFace, %struct.MFace* %12, i64 %idxprom5, !dbg !4511
  store %struct.MFace* %arrayidx6, %struct.MFace** %f, align 8, !dbg !4510
  %16 = load %struct.MFace*, %struct.MFace** %f, align 8, !dbg !4514
  %17 = load %struct.MVert*, %struct.MVert** %mvert.addr, align 8, !dbg !4516
  %call7 = call zeroext i8 @paint_is_face_hidden(%struct.MFace* %16, %struct.MVert* %17), !dbg !4517
  %tobool = icmp ne i8 %call7, 0, !dbg !4517
  br i1 %tobool, label %if.end, label %if.then, !dbg !4518

if.then:                                          ; preds = %for.body
  %18 = load %struct.MFace*, %struct.MFace** %f, align 8, !dbg !4519
  %v4 = getelementptr inbounds %struct.MFace, %struct.MFace* %18, i32 0, i32 3, !dbg !4520
  %19 = load i32, i32* %v4, align 4, !dbg !4520
  %tobool8 = icmp ne i32 %19, 0, !dbg !4519
  %20 = zext i1 %tobool8 to i64, !dbg !4519
  %cond = select i1 %tobool8, i32 2, i32 1, !dbg !4519
  %21 = load i32, i32* %tottri, align 4, !dbg !4521
  %add = add nsw i32 %21, %cond, !dbg !4521
  store i32 %add, i32* %tottri, align 4, !dbg !4521
  br label %if.end, !dbg !4522

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc, !dbg !4523

for.inc:                                          ; preds = %if.end
  %22 = load i32, i32* %i, align 4, !dbg !4524
  %inc = add nsw i32 %22, 1, !dbg !4524
  store i32 %inc, i32* %i, align 4, !dbg !4524
  br label %for.cond, !dbg !4525, !llvm.loop !4526

for.end:                                          ; preds = %for.cond
  %23 = load i32, i32* %tottri, align 4, !dbg !4528
  %cmp9 = icmp eq i32 %23, 0, !dbg !4530
  br i1 %cmp9, label %if.then11, label %if.end15, !dbg !4531

if.then11:                                        ; preds = %for.end
  %24 = load %struct.GPU_PBVH_Buffers*, %struct.GPU_PBVH_Buffers** %buffers, align 8, !dbg !4532
  %tot_tri = getelementptr inbounds %struct.GPU_PBVH_Buffers, %struct.GPU_PBVH_Buffers* %24, i32 0, i32 16, !dbg !4534
  store i32 0, i32* %tot_tri, align 4, !dbg !4535
  %25 = load %struct.MFace*, %struct.MFace** %mface.addr, align 8, !dbg !4536
  %26 = load %struct.GPU_PBVH_Buffers*, %struct.GPU_PBVH_Buffers** %buffers, align 8, !dbg !4537
  %mface12 = getelementptr inbounds %struct.GPU_PBVH_Buffers, %struct.GPU_PBVH_Buffers* %26, i32 0, i32 3, !dbg !4538
  store %struct.MFace* %25, %struct.MFace** %mface12, align 8, !dbg !4539
  %27 = load i32*, i32** %face_indices.addr, align 8, !dbg !4540
  %28 = load %struct.GPU_PBVH_Buffers*, %struct.GPU_PBVH_Buffers** %buffers, align 8, !dbg !4541
  %face_indices13 = getelementptr inbounds %struct.GPU_PBVH_Buffers, %struct.GPU_PBVH_Buffers* %28, i32 0, i32 5, !dbg !4542
  store i32* %27, i32** %face_indices13, align 8, !dbg !4543
  %29 = load %struct.GPU_PBVH_Buffers*, %struct.GPU_PBVH_Buffers** %buffers, align 8, !dbg !4544
  %totface14 = getelementptr inbounds %struct.GPU_PBVH_Buffers, %struct.GPU_PBVH_Buffers* %29, i32 0, i32 6, !dbg !4545
  store i32 0, i32* %totface14, align 8, !dbg !4546
  %30 = load %struct.GPU_PBVH_Buffers*, %struct.GPU_PBVH_Buffers** %buffers, align 8, !dbg !4547
  store %struct.GPU_PBVH_Buffers* %30, %struct.GPU_PBVH_Buffers** %retval, align 8, !dbg !4548
  br label %return, !dbg !4548

if.end15:                                         ; preds = %for.end
  %call16 = call i32 @gpu_vbo_enabled(), !dbg !4549
  %tobool17 = icmp ne i32 %call16, 0, !dbg !4549
  br i1 %tobool17, label %land.lhs.true, label %if.end21, !dbg !4551

land.lhs.true:                                    ; preds = %if.end15
  %31 = load %struct.GPU_PBVH_Buffers*, %struct.GPU_PBVH_Buffers** %buffers, align 8, !dbg !4552
  %smooth18 = getelementptr inbounds %struct.GPU_PBVH_Buffers, %struct.GPU_PBVH_Buffers* %31, i32 0, i32 18, !dbg !4553
  %32 = load i32, i32* %smooth18, align 4, !dbg !4553
  %tobool19 = icmp ne i32 %32, 0, !dbg !4552
  br i1 %tobool19, label %if.then20, label %if.end21, !dbg !4554

if.then20:                                        ; preds = %land.lhs.true
  %33 = load void (i32, i32*)*, void (i32, i32*)** @__glewGenBuffersARB, align 8, !dbg !4555
  %34 = load %struct.GPU_PBVH_Buffers*, %struct.GPU_PBVH_Buffers** %buffers, align 8, !dbg !4556
  %index_buf = getelementptr inbounds %struct.GPU_PBVH_Buffers, %struct.GPU_PBVH_Buffers* %34, i32 0, i32 1, !dbg !4557
  call void %33(i32 1, i32* %index_buf), !dbg !4555
  br label %if.end21, !dbg !4555

if.end21:                                         ; preds = %if.then20, %land.lhs.true, %if.end15
  %35 = load %struct.GPU_PBVH_Buffers*, %struct.GPU_PBVH_Buffers** %buffers, align 8, !dbg !4558
  %index_buf22 = getelementptr inbounds %struct.GPU_PBVH_Buffers, %struct.GPU_PBVH_Buffers* %35, i32 0, i32 1, !dbg !4560
  %36 = load i32, i32* %index_buf22, align 4, !dbg !4560
  %tobool23 = icmp ne i32 %36, 0, !dbg !4558
  br i1 %tobool23, label %if.then24, label %if.end79, !dbg !4561

if.then24:                                        ; preds = %if.end21
  %37 = load void (i32, i32)*, void (i32, i32)** @__glewBindBufferARB, align 8, !dbg !4562
  %38 = load %struct.GPU_PBVH_Buffers*, %struct.GPU_PBVH_Buffers** %buffers, align 8, !dbg !4564
  %index_buf25 = getelementptr inbounds %struct.GPU_PBVH_Buffers, %struct.GPU_PBVH_Buffers* %38, i32 0, i32 1, !dbg !4565
  %39 = load i32, i32* %index_buf25, align 4, !dbg !4565
  call void %37(i32 34963, i32 %39), !dbg !4562
  %40 = load void (i32, i64, i8*, i32)*, void (i32, i64, i8*, i32)** @__glewBufferDataARB, align 8, !dbg !4566
  %41 = load i32, i32* %tottri, align 4, !dbg !4567
  %conv26 = sext i32 %41 to i64, !dbg !4567
  %mul = mul i64 2, %conv26, !dbg !4568
  %mul27 = mul i64 %mul, 3, !dbg !4569
  call void %40(i32 34963, i64 %mul27, i8* null, i32 35044), !dbg !4566
  %42 = load i8* (i32, i32)*, i8* (i32, i32)** @__glewMapBufferARB, align 8, !dbg !4570
  %call28 = call i8* %42(i32 34963, i32 35001), !dbg !4570
  %43 = bitcast i8* %call28 to i16*, !dbg !4570
  store i16* %43, i16** %tri_data, align 8, !dbg !4571
  %44 = load i16*, i16** %tri_data, align 8, !dbg !4572
  %tobool29 = icmp ne i16* %44, null, !dbg !4572
  br i1 %tobool29, label %if.then30, label %if.else, !dbg !4574

if.then30:                                        ; preds = %if.then24
  store i32 0, i32* %i, align 4, !dbg !4575
  br label %for.cond31, !dbg !4578

for.cond31:                                       ; preds = %for.inc72, %if.then30
  %45 = load i32, i32* %i, align 4, !dbg !4579
  %46 = load i32, i32* %totface.addr, align 4, !dbg !4581
  %cmp32 = icmp slt i32 %45, %46, !dbg !4582
  br i1 %cmp32, label %for.body34, label %for.end74, !dbg !4583

for.body34:                                       ; preds = %for.cond31
  call void @llvm.dbg.declare(metadata %struct.MFace** %f35, metadata !4584, metadata !DIExpression()), !dbg !4586
  %47 = load %struct.MFace*, %struct.MFace** %mface.addr, align 8, !dbg !4587
  %48 = load i32*, i32** %face_indices.addr, align 8, !dbg !4588
  %49 = load i32, i32* %i, align 4, !dbg !4589
  %idxprom36 = sext i32 %49 to i64, !dbg !4588
  %arrayidx37 = getelementptr inbounds i32, i32* %48, i64 %idxprom36, !dbg !4588
  %50 = load i32, i32* %arrayidx37, align 4, !dbg !4588
  %idx.ext = sext i32 %50 to i64, !dbg !4590
  %add.ptr = getelementptr inbounds %struct.MFace, %struct.MFace* %47, i64 %idx.ext, !dbg !4590
  store %struct.MFace* %add.ptr, %struct.MFace** %f35, align 8, !dbg !4586
  call void @llvm.dbg.declare(metadata [3 x i32]* %v, metadata !4591, metadata !DIExpression()), !dbg !4592
  %51 = load %struct.MFace*, %struct.MFace** %f35, align 8, !dbg !4593
  %52 = load %struct.MVert*, %struct.MVert** %mvert.addr, align 8, !dbg !4595
  %call38 = call zeroext i8 @paint_is_face_hidden(%struct.MFace* %51, %struct.MVert* %52), !dbg !4596
  %tobool39 = icmp ne i8 %call38, 0, !dbg !4596
  br i1 %tobool39, label %if.then40, label %if.end41, !dbg !4597

if.then40:                                        ; preds = %for.body34
  br label %for.inc72, !dbg !4598

if.end41:                                         ; preds = %for.body34
  %arrayidx42 = getelementptr inbounds [3 x i32], [3 x i32]* %v, i64 0, i64 0, !dbg !4599
  store i32 0, i32* %arrayidx42, align 4, !dbg !4600
  %arrayidx43 = getelementptr inbounds [3 x i32], [3 x i32]* %v, i64 0, i64 1, !dbg !4601
  store i32 1, i32* %arrayidx43, align 4, !dbg !4602
  %arrayidx44 = getelementptr inbounds [3 x i32], [3 x i32]* %v, i64 0, i64 2, !dbg !4603
  store i32 2, i32* %arrayidx44, align 4, !dbg !4604
  store i32 0, i32* %j, align 4, !dbg !4605
  br label %for.cond45, !dbg !4607

for.cond45:                                       ; preds = %for.inc69, %if.end41
  %53 = load i32, i32* %j, align 4, !dbg !4608
  %54 = load %struct.MFace*, %struct.MFace** %f35, align 8, !dbg !4610
  %v446 = getelementptr inbounds %struct.MFace, %struct.MFace* %54, i32 0, i32 3, !dbg !4611
  %55 = load i32, i32* %v446, align 4, !dbg !4611
  %tobool47 = icmp ne i32 %55, 0, !dbg !4610
  %56 = zext i1 %tobool47 to i64, !dbg !4610
  %cond48 = select i1 %tobool47, i32 2, i32 1, !dbg !4610
  %cmp49 = icmp slt i32 %53, %cond48, !dbg !4612
  br i1 %cmp49, label %for.body51, label %for.end71, !dbg !4613

for.body51:                                       ; preds = %for.cond45
  store i32 0, i32* %k, align 4, !dbg !4614
  br label %for.cond52, !dbg !4617

for.cond52:                                       ; preds = %for.inc63, %for.body51
  %57 = load i32, i32* %k, align 4, !dbg !4618
  %cmp53 = icmp slt i32 %57, 3, !dbg !4620
  br i1 %cmp53, label %for.body55, label %for.end65, !dbg !4621

for.body55:                                       ; preds = %for.cond52
  %58 = load [4 x i32]*, [4 x i32]** %face_vert_indices.addr, align 8, !dbg !4622
  %59 = load i32, i32* %i, align 4, !dbg !4624
  %idxprom56 = sext i32 %59 to i64, !dbg !4622
  %arrayidx57 = getelementptr inbounds [4 x i32], [4 x i32]* %58, i64 %idxprom56, !dbg !4622
  %60 = load i32, i32* %k, align 4, !dbg !4625
  %idxprom58 = sext i32 %60 to i64, !dbg !4626
  %arrayidx59 = getelementptr inbounds [3 x i32], [3 x i32]* %v, i64 0, i64 %idxprom58, !dbg !4626
  %61 = load i32, i32* %arrayidx59, align 4, !dbg !4626
  %idxprom60 = sext i32 %61 to i64, !dbg !4622
  %arrayidx61 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx57, i64 0, i64 %idxprom60, !dbg !4622
  %62 = load i32, i32* %arrayidx61, align 4, !dbg !4622
  %conv62 = trunc i32 %62 to i16, !dbg !4622
  %63 = load i16*, i16** %tri_data, align 8, !dbg !4627
  store i16 %conv62, i16* %63, align 2, !dbg !4628
  %64 = load i16*, i16** %tri_data, align 8, !dbg !4629
  %incdec.ptr = getelementptr inbounds i16, i16* %64, i32 1, !dbg !4629
  store i16* %incdec.ptr, i16** %tri_data, align 8, !dbg !4629
  br label %for.inc63, !dbg !4630

for.inc63:                                        ; preds = %for.body55
  %65 = load i32, i32* %k, align 4, !dbg !4631
  %inc64 = add nsw i32 %65, 1, !dbg !4631
  store i32 %inc64, i32* %k, align 4, !dbg !4631
  br label %for.cond52, !dbg !4632, !llvm.loop !4633

for.end65:                                        ; preds = %for.cond52
  %arrayidx66 = getelementptr inbounds [3 x i32], [3 x i32]* %v, i64 0, i64 0, !dbg !4635
  store i32 3, i32* %arrayidx66, align 4, !dbg !4636
  %arrayidx67 = getelementptr inbounds [3 x i32], [3 x i32]* %v, i64 0, i64 1, !dbg !4637
  store i32 0, i32* %arrayidx67, align 4, !dbg !4638
  %arrayidx68 = getelementptr inbounds [3 x i32], [3 x i32]* %v, i64 0, i64 2, !dbg !4639
  store i32 2, i32* %arrayidx68, align 4, !dbg !4640
  br label %for.inc69, !dbg !4641

for.inc69:                                        ; preds = %for.end65
  %66 = load i32, i32* %j, align 4, !dbg !4642
  %inc70 = add nsw i32 %66, 1, !dbg !4642
  store i32 %inc70, i32* %j, align 4, !dbg !4642
  br label %for.cond45, !dbg !4643, !llvm.loop !4644

for.end71:                                        ; preds = %for.cond45
  br label %for.inc72, !dbg !4646

for.inc72:                                        ; preds = %for.end71, %if.then40
  %67 = load i32, i32* %i, align 4, !dbg !4647
  %inc73 = add nsw i32 %67, 1, !dbg !4647
  store i32 %inc73, i32* %i, align 4, !dbg !4647
  br label %for.cond31, !dbg !4648, !llvm.loop !4649

for.end74:                                        ; preds = %for.cond31
  %68 = load i8 (i32)*, i8 (i32)** @__glewUnmapBufferARB, align 8, !dbg !4651
  %call75 = call zeroext i8 %68(i32 34963), !dbg !4651
  br label %if.end78, !dbg !4652

if.else:                                          ; preds = %if.then24
  %69 = load void (i32, i32*)*, void (i32, i32*)** @__glewDeleteBuffersARB, align 8, !dbg !4653
  %70 = load %struct.GPU_PBVH_Buffers*, %struct.GPU_PBVH_Buffers** %buffers, align 8, !dbg !4655
  %index_buf76 = getelementptr inbounds %struct.GPU_PBVH_Buffers, %struct.GPU_PBVH_Buffers* %70, i32 0, i32 1, !dbg !4656
  call void %69(i32 1, i32* %index_buf76), !dbg !4653
  %71 = load %struct.GPU_PBVH_Buffers*, %struct.GPU_PBVH_Buffers** %buffers, align 8, !dbg !4657
  %index_buf77 = getelementptr inbounds %struct.GPU_PBVH_Buffers, %struct.GPU_PBVH_Buffers* %71, i32 0, i32 1, !dbg !4658
  store i32 0, i32* %index_buf77, align 4, !dbg !4659
  br label %if.end78

if.end78:                                         ; preds = %if.else, %for.end74
  %72 = load void (i32, i32)*, void (i32, i32)** @__glewBindBufferARB, align 8, !dbg !4660
  call void %72(i32 34963, i32 0), !dbg !4660
  br label %if.end79, !dbg !4661

if.end79:                                         ; preds = %if.end78, %if.end21
  %call80 = call i32 @gpu_vbo_enabled(), !dbg !4662
  %tobool81 = icmp ne i32 %call80, 0, !dbg !4662
  br i1 %tobool81, label %land.lhs.true82, label %if.end88, !dbg !4664

land.lhs.true82:                                  ; preds = %if.end79
  %73 = load %struct.GPU_PBVH_Buffers*, %struct.GPU_PBVH_Buffers** %buffers, align 8, !dbg !4665
  %index_buf83 = getelementptr inbounds %struct.GPU_PBVH_Buffers, %struct.GPU_PBVH_Buffers* %73, i32 0, i32 1, !dbg !4666
  %74 = load i32, i32* %index_buf83, align 4, !dbg !4666
  %tobool84 = icmp ne i32 %74, 0, !dbg !4665
  br i1 %tobool84, label %if.then87, label %lor.lhs.false, !dbg !4667

lor.lhs.false:                                    ; preds = %land.lhs.true82
  %75 = load %struct.GPU_PBVH_Buffers*, %struct.GPU_PBVH_Buffers** %buffers, align 8, !dbg !4668
  %smooth85 = getelementptr inbounds %struct.GPU_PBVH_Buffers, %struct.GPU_PBVH_Buffers* %75, i32 0, i32 18, !dbg !4669
  %76 = load i32, i32* %smooth85, align 4, !dbg !4669
  %tobool86 = icmp ne i32 %76, 0, !dbg !4668
  br i1 %tobool86, label %if.end88, label %if.then87, !dbg !4670

if.then87:                                        ; preds = %lor.lhs.false, %land.lhs.true82
  %77 = load void (i32, i32*)*, void (i32, i32*)** @__glewGenBuffersARB, align 8, !dbg !4671
  %78 = load %struct.GPU_PBVH_Buffers*, %struct.GPU_PBVH_Buffers** %buffers, align 8, !dbg !4672
  %vert_buf = getelementptr inbounds %struct.GPU_PBVH_Buffers, %struct.GPU_PBVH_Buffers* %78, i32 0, i32 0, !dbg !4673
  call void %77(i32 1, i32* %vert_buf), !dbg !4671
  br label %if.end88, !dbg !4671

if.end88:                                         ; preds = %if.then87, %lor.lhs.false, %if.end79
  %79 = load i32, i32* %tottri, align 4, !dbg !4674
  %80 = load %struct.GPU_PBVH_Buffers*, %struct.GPU_PBVH_Buffers** %buffers, align 8, !dbg !4675
  %tot_tri89 = getelementptr inbounds %struct.GPU_PBVH_Buffers, %struct.GPU_PBVH_Buffers* %80, i32 0, i32 16, !dbg !4676
  store i32 %79, i32* %tot_tri89, align 4, !dbg !4677
  %81 = load %struct.MFace*, %struct.MFace** %mface.addr, align 8, !dbg !4678
  %82 = load %struct.GPU_PBVH_Buffers*, %struct.GPU_PBVH_Buffers** %buffers, align 8, !dbg !4679
  %mface90 = getelementptr inbounds %struct.GPU_PBVH_Buffers, %struct.GPU_PBVH_Buffers* %82, i32 0, i32 3, !dbg !4680
  store %struct.MFace* %81, %struct.MFace** %mface90, align 8, !dbg !4681
  %83 = load i32*, i32** %face_indices.addr, align 8, !dbg !4682
  %84 = load %struct.GPU_PBVH_Buffers*, %struct.GPU_PBVH_Buffers** %buffers, align 8, !dbg !4683
  %face_indices91 = getelementptr inbounds %struct.GPU_PBVH_Buffers, %struct.GPU_PBVH_Buffers* %84, i32 0, i32 5, !dbg !4684
  store i32* %83, i32** %face_indices91, align 8, !dbg !4685
  %85 = load i32, i32* %totface.addr, align 4, !dbg !4686
  %86 = load %struct.GPU_PBVH_Buffers*, %struct.GPU_PBVH_Buffers** %buffers, align 8, !dbg !4687
  %totface92 = getelementptr inbounds %struct.GPU_PBVH_Buffers, %struct.GPU_PBVH_Buffers* %86, i32 0, i32 6, !dbg !4688
  store i32 %85, i32* %totface92, align 8, !dbg !4689
  %87 = load %struct.GPU_PBVH_Buffers*, %struct.GPU_PBVH_Buffers** %buffers, align 8, !dbg !4690
  store %struct.GPU_PBVH_Buffers* %87, %struct.GPU_PBVH_Buffers** %retval, align 8, !dbg !4691
  br label %return, !dbg !4691

return:                                           ; preds = %if.end88, %if.then11
  %88 = load %struct.GPU_PBVH_Buffers*, %struct.GPU_PBVH_Buffers** %retval, align 8, !dbg !4692
  ret %struct.GPU_PBVH_Buffers* %88, !dbg !4692
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @gpu_vbo_enabled() #0 !dbg !4693 {
entry:
  %0 = load i8, i8* @__GLEW_ARB_vertex_buffer_object, align 1, !dbg !4696
  %conv = zext i8 %0 to i32, !dbg !4696
  %tobool = icmp ne i32 %conv, 0, !dbg !4696
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !4697

land.rhs:                                         ; preds = %entry
  %1 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 20), align 8, !dbg !4698
  %conv1 = sext i16 %1 to i32, !dbg !4699
  %and = and i32 %conv1, 8, !dbg !4700
  %tobool2 = icmp ne i32 %and, 0, !dbg !4701
  %lnot = xor i1 %tobool2, true, !dbg !4701
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %2 = phi i1 [ false, %entry ], [ %lnot, %land.rhs ], !dbg !4702
  %land.ext = zext i1 %2 to i32, !dbg !4697
  ret i32 %land.ext, !dbg !4703
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @GPU_update_grid_pbvh_buffers(%struct.GPU_PBVH_Buffers* %buffers, %struct.CCGElem** %grids, %struct.DMFlagMat* %grid_flag_mats, i32* %grid_indices, i32 %totgrid, %struct.CCGKey* %key, i8 zeroext %show_diffuse_color) #0 !dbg !4704 {
entry:
  %buffers.addr = alloca %struct.GPU_PBVH_Buffers*, align 8
  %grids.addr = alloca %struct.CCGElem**, align 8
  %grid_flag_mats.addr = alloca %struct.DMFlagMat*, align 8
  %grid_indices.addr = alloca i32*, align 8
  %totgrid.addr = alloca i32, align 4
  %key.addr = alloca %struct.CCGKey*, align 8
  %show_diffuse_color.addr = alloca i8, align 1
  %vert_data = alloca %struct.VertexBufferFormat*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %x = alloca i32, align 4
  %y = alloca i32, align 4
  %totvert = alloca i32, align 4
  %smooth = alloca i32, align 4
  %has_mask = alloca i32, align 4
  %diffuse_color = alloca [4 x float], align 16
  %flags = alloca %struct.DMFlagMat*, align 8
  %vd = alloca %struct.VertexBufferFormat*, align 8
  %grid = alloca %struct.CCGElem*, align 8
  %elem = alloca %struct.CCGElem*, align 8
  %elems = alloca [4 x %struct.CCGElem*], align 16
  %fno = alloca [3 x float], align 4
  store %struct.GPU_PBVH_Buffers* %buffers, %struct.GPU_PBVH_Buffers** %buffers.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GPU_PBVH_Buffers** %buffers.addr, metadata !4709, metadata !DIExpression()), !dbg !4710
  store %struct.CCGElem** %grids, %struct.CCGElem*** %grids.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGElem*** %grids.addr, metadata !4711, metadata !DIExpression()), !dbg !4712
  store %struct.DMFlagMat* %grid_flag_mats, %struct.DMFlagMat** %grid_flag_mats.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DMFlagMat** %grid_flag_mats.addr, metadata !4713, metadata !DIExpression()), !dbg !4714
  store i32* %grid_indices, i32** %grid_indices.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %grid_indices.addr, metadata !4715, metadata !DIExpression()), !dbg !4716
  store i32 %totgrid, i32* %totgrid.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %totgrid.addr, metadata !4717, metadata !DIExpression()), !dbg !4718
  store %struct.CCGKey* %key, %struct.CCGKey** %key.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGKey** %key.addr, metadata !4719, metadata !DIExpression()), !dbg !4720
  store i8 %show_diffuse_color, i8* %show_diffuse_color.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %show_diffuse_color.addr, metadata !4721, metadata !DIExpression()), !dbg !4722
  call void @llvm.dbg.declare(metadata %struct.VertexBufferFormat** %vert_data, metadata !4723, metadata !DIExpression()), !dbg !4724
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4725, metadata !DIExpression()), !dbg !4726
  call void @llvm.dbg.declare(metadata i32* %j, metadata !4727, metadata !DIExpression()), !dbg !4728
  call void @llvm.dbg.declare(metadata i32* %k, metadata !4729, metadata !DIExpression()), !dbg !4730
  call void @llvm.dbg.declare(metadata i32* %x, metadata !4731, metadata !DIExpression()), !dbg !4732
  call void @llvm.dbg.declare(metadata i32* %y, metadata !4733, metadata !DIExpression()), !dbg !4734
  %0 = load i8, i8* %show_diffuse_color.addr, align 1, !dbg !4735
  %1 = load %struct.GPU_PBVH_Buffers*, %struct.GPU_PBVH_Buffers** %buffers.addr, align 8, !dbg !4736
  %show_diffuse_color1 = getelementptr inbounds %struct.GPU_PBVH_Buffers, %struct.GPU_PBVH_Buffers* %1, i32 0, i32 19, !dbg !4737
  store i8 %0, i8* %show_diffuse_color1, align 8, !dbg !4738
  %call = call zeroext i8 @GPU_material_use_matcaps_get(), !dbg !4739
  %2 = load %struct.GPU_PBVH_Buffers*, %struct.GPU_PBVH_Buffers** %buffers.addr, align 8, !dbg !4740
  %use_matcaps = getelementptr inbounds %struct.GPU_PBVH_Buffers, %struct.GPU_PBVH_Buffers* %2, i32 0, i32 20, !dbg !4741
  store i8 %call, i8* %use_matcaps, align 1, !dbg !4742
  %3 = load %struct.GPU_PBVH_Buffers*, %struct.GPU_PBVH_Buffers** %buffers.addr, align 8, !dbg !4743
  %vert_buf = getelementptr inbounds %struct.GPU_PBVH_Buffers, %struct.GPU_PBVH_Buffers* %3, i32 0, i32 0, !dbg !4745
  %4 = load i32, i32* %vert_buf, align 8, !dbg !4745
  %tobool = icmp ne i32 %4, 0, !dbg !4743
  br i1 %tobool, label %if.then, label %if.end126, !dbg !4746

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %totvert, metadata !4747, metadata !DIExpression()), !dbg !4749
  %5 = load %struct.CCGKey*, %struct.CCGKey** %key.addr, align 8, !dbg !4750
  %grid_area = getelementptr inbounds %struct.CCGKey, %struct.CCGKey* %5, i32 0, i32 3, !dbg !4751
  %6 = load i32, i32* %grid_area, align 4, !dbg !4751
  %7 = load i32, i32* %totgrid.addr, align 4, !dbg !4752
  %mul = mul nsw i32 %6, %7, !dbg !4753
  store i32 %mul, i32* %totvert, align 4, !dbg !4749
  call void @llvm.dbg.declare(metadata i32* %smooth, metadata !4754, metadata !DIExpression()), !dbg !4755
  %8 = load %struct.DMFlagMat*, %struct.DMFlagMat** %grid_flag_mats.addr, align 8, !dbg !4756
  %9 = load i32*, i32** %grid_indices.addr, align 8, !dbg !4757
  %arrayidx = getelementptr inbounds i32, i32* %9, i64 0, !dbg !4757
  %10 = load i32, i32* %arrayidx, align 4, !dbg !4757
  %idxprom = sext i32 %10 to i64, !dbg !4756
  %arrayidx2 = getelementptr inbounds %struct.DMFlagMat, %struct.DMFlagMat* %8, i64 %idxprom, !dbg !4756
  %flag = getelementptr inbounds %struct.DMFlagMat, %struct.DMFlagMat* %arrayidx2, i32 0, i32 1, !dbg !4758
  %11 = load i8, i8* %flag, align 2, !dbg !4758
  %conv = zext i8 %11 to i32, !dbg !4756
  %and = and i32 %conv, 1, !dbg !4759
  store i32 %and, i32* %smooth, align 4, !dbg !4755
  call void @llvm.dbg.declare(metadata i32* %has_mask, metadata !4760, metadata !DIExpression()), !dbg !4761
  %12 = load %struct.CCGKey*, %struct.CCGKey** %key.addr, align 8, !dbg !4762
  %has_mask3 = getelementptr inbounds %struct.CCGKey, %struct.CCGKey* %12, i32 0, i32 9, !dbg !4763
  %13 = load i32, i32* %has_mask3, align 4, !dbg !4763
  store i32 %13, i32* %has_mask, align 4, !dbg !4761
  call void @llvm.dbg.declare(metadata [4 x float]* %diffuse_color, metadata !4764, metadata !DIExpression()), !dbg !4765
  %14 = bitcast [4 x float]* %diffuse_color to i8*, !dbg !4765
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %14, i8* align 16 bitcast ([4 x float]* @__const.GPU_update_grid_pbvh_buffers.diffuse_color to i8*), i64 16, i1 false), !dbg !4765
  %15 = load %struct.GPU_PBVH_Buffers*, %struct.GPU_PBVH_Buffers** %buffers.addr, align 8, !dbg !4766
  %use_matcaps4 = getelementptr inbounds %struct.GPU_PBVH_Buffers, %struct.GPU_PBVH_Buffers* %15, i32 0, i32 20, !dbg !4768
  %16 = load i8, i8* %use_matcaps4, align 1, !dbg !4768
  %tobool5 = icmp ne i8 %16, 0, !dbg !4766
  br i1 %tobool5, label %if.then6, label %if.else, !dbg !4769

if.then6:                                         ; preds = %if.then
  %arrayidx7 = getelementptr inbounds [4 x float], [4 x float]* %diffuse_color, i64 0, i64 2, !dbg !4770
  store float 1.000000e+00, float* %arrayidx7, align 8, !dbg !4771
  %arrayidx8 = getelementptr inbounds [4 x float], [4 x float]* %diffuse_color, i64 0, i64 1, !dbg !4772
  store float 1.000000e+00, float* %arrayidx8, align 4, !dbg !4773
  %arrayidx9 = getelementptr inbounds [4 x float], [4 x float]* %diffuse_color, i64 0, i64 0, !dbg !4774
  store float 1.000000e+00, float* %arrayidx9, align 16, !dbg !4775
  br label %if.end16, !dbg !4774

if.else:                                          ; preds = %if.then
  %17 = load i8, i8* %show_diffuse_color.addr, align 1, !dbg !4776
  %tobool10 = icmp ne i8 %17, 0, !dbg !4776
  br i1 %tobool10, label %if.then11, label %if.end, !dbg !4778

if.then11:                                        ; preds = %if.else
  call void @llvm.dbg.declare(metadata %struct.DMFlagMat** %flags, metadata !4779, metadata !DIExpression()), !dbg !4781
  %18 = load %struct.DMFlagMat*, %struct.DMFlagMat** %grid_flag_mats.addr, align 8, !dbg !4782
  %19 = load i32*, i32** %grid_indices.addr, align 8, !dbg !4783
  %arrayidx12 = getelementptr inbounds i32, i32* %19, i64 0, !dbg !4783
  %20 = load i32, i32* %arrayidx12, align 4, !dbg !4783
  %idxprom13 = sext i32 %20 to i64, !dbg !4782
  %arrayidx14 = getelementptr inbounds %struct.DMFlagMat, %struct.DMFlagMat* %18, i64 %idxprom13, !dbg !4782
  store %struct.DMFlagMat* %arrayidx14, %struct.DMFlagMat** %flags, align 8, !dbg !4781
  %21 = load %struct.DMFlagMat*, %struct.DMFlagMat** %flags, align 8, !dbg !4784
  %mat_nr = getelementptr inbounds %struct.DMFlagMat, %struct.DMFlagMat* %21, i32 0, i32 0, !dbg !4785
  %22 = load i16, i16* %mat_nr, align 2, !dbg !4785
  %conv15 = sext i16 %22 to i32, !dbg !4784
  %add = add nsw i32 %conv15, 1, !dbg !4786
  %arraydecay = getelementptr inbounds [4 x float], [4 x float]* %diffuse_color, i64 0, i64 0, !dbg !4787
  call void @GPU_material_diffuse_get(i32 %add, float* %arraydecay), !dbg !4788
  br label %if.end, !dbg !4789

if.end:                                           ; preds = %if.then11, %if.else
  br label %if.end16

if.end16:                                         ; preds = %if.end, %if.then6
  %23 = load %struct.GPU_PBVH_Buffers*, %struct.GPU_PBVH_Buffers** %buffers.addr, align 8, !dbg !4790
  %diffuse_color17 = getelementptr inbounds %struct.GPU_PBVH_Buffers, %struct.GPU_PBVH_Buffers* %23, i32 0, i32 21, !dbg !4791
  %arraydecay18 = getelementptr inbounds [4 x float], [4 x float]* %diffuse_color17, i64 0, i64 0, !dbg !4790
  %arraydecay19 = getelementptr inbounds [4 x float], [4 x float]* %diffuse_color, i64 0, i64 0, !dbg !4792
  call void @copy_v4_v4(float* %arraydecay18, float* %arraydecay19), !dbg !4793
  %24 = load void (i32, i32)*, void (i32, i32)** @__glewBindBufferARB, align 8, !dbg !4794
  %25 = load %struct.GPU_PBVH_Buffers*, %struct.GPU_PBVH_Buffers** %buffers.addr, align 8, !dbg !4795
  %vert_buf20 = getelementptr inbounds %struct.GPU_PBVH_Buffers, %struct.GPU_PBVH_Buffers* %25, i32 0, i32 0, !dbg !4796
  %26 = load i32, i32* %vert_buf20, align 8, !dbg !4796
  call void %24(i32 34962, i32 %26), !dbg !4794
  %27 = load void (i32, i64, i8*, i32)*, void (i32, i64, i8*, i32)** @__glewBufferDataARB, align 8, !dbg !4797
  %28 = load i32, i32* %totvert, align 4, !dbg !4798
  %conv21 = sext i32 %28 to i64, !dbg !4798
  %mul22 = mul i64 24, %conv21, !dbg !4799
  call void %27(i32 34962, i64 %mul22, i8* null, i32 35044), !dbg !4797
  %29 = load i8* (i32, i32)*, i8* (i32, i32)** @__glewMapBufferARB, align 8, !dbg !4800
  %call23 = call i8* %29(i32 34962, i32 35001), !dbg !4800
  %30 = bitcast i8* %call23 to %struct.VertexBufferFormat*, !dbg !4800
  store %struct.VertexBufferFormat* %30, %struct.VertexBufferFormat** %vert_data, align 8, !dbg !4801
  %31 = load %struct.VertexBufferFormat*, %struct.VertexBufferFormat** %vert_data, align 8, !dbg !4802
  %tobool24 = icmp ne %struct.VertexBufferFormat* %31, null, !dbg !4802
  br i1 %tobool24, label %if.then25, label %if.else122, !dbg !4804

if.then25:                                        ; preds = %if.end16
  store i32 0, i32* %i, align 4, !dbg !4805
  br label %for.cond, !dbg !4808

for.cond:                                         ; preds = %for.inc118, %if.then25
  %32 = load i32, i32* %i, align 4, !dbg !4809
  %33 = load i32, i32* %totgrid.addr, align 4, !dbg !4811
  %cmp = icmp slt i32 %32, %33, !dbg !4812
  br i1 %cmp, label %for.body, label %for.end120, !dbg !4813

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.VertexBufferFormat** %vd, metadata !4814, metadata !DIExpression()), !dbg !4816
  %34 = load %struct.VertexBufferFormat*, %struct.VertexBufferFormat** %vert_data, align 8, !dbg !4817
  store %struct.VertexBufferFormat* %34, %struct.VertexBufferFormat** %vd, align 8, !dbg !4816
  call void @llvm.dbg.declare(metadata %struct.CCGElem** %grid, metadata !4818, metadata !DIExpression()), !dbg !4819
  %35 = load %struct.CCGElem**, %struct.CCGElem*** %grids.addr, align 8, !dbg !4820
  %36 = load i32*, i32** %grid_indices.addr, align 8, !dbg !4821
  %37 = load i32, i32* %i, align 4, !dbg !4822
  %idxprom27 = sext i32 %37 to i64, !dbg !4821
  %arrayidx28 = getelementptr inbounds i32, i32* %36, i64 %idxprom27, !dbg !4821
  %38 = load i32, i32* %arrayidx28, align 4, !dbg !4821
  %idxprom29 = sext i32 %38 to i64, !dbg !4820
  %arrayidx30 = getelementptr inbounds %struct.CCGElem*, %struct.CCGElem** %35, i64 %idxprom29, !dbg !4820
  %39 = load %struct.CCGElem*, %struct.CCGElem** %arrayidx30, align 8, !dbg !4820
  store %struct.CCGElem* %39, %struct.CCGElem** %grid, align 8, !dbg !4819
  store i32 0, i32* %y, align 4, !dbg !4823
  br label %for.cond31, !dbg !4825

for.cond31:                                       ; preds = %for.inc54, %for.body
  %40 = load i32, i32* %y, align 4, !dbg !4826
  %41 = load %struct.CCGKey*, %struct.CCGKey** %key.addr, align 8, !dbg !4828
  %grid_size = getelementptr inbounds %struct.CCGKey, %struct.CCGKey* %41, i32 0, i32 2, !dbg !4829
  %42 = load i32, i32* %grid_size, align 4, !dbg !4829
  %cmp32 = icmp slt i32 %40, %42, !dbg !4830
  br i1 %cmp32, label %for.body34, label %for.end56, !dbg !4831

for.body34:                                       ; preds = %for.cond31
  store i32 0, i32* %x, align 4, !dbg !4832
  br label %for.cond35, !dbg !4835

for.cond35:                                       ; preds = %for.inc, %for.body34
  %43 = load i32, i32* %x, align 4, !dbg !4836
  %44 = load %struct.CCGKey*, %struct.CCGKey** %key.addr, align 8, !dbg !4838
  %grid_size36 = getelementptr inbounds %struct.CCGKey, %struct.CCGKey* %44, i32 0, i32 2, !dbg !4839
  %45 = load i32, i32* %grid_size36, align 4, !dbg !4839
  %cmp37 = icmp slt i32 %43, %45, !dbg !4840
  br i1 %cmp37, label %for.body39, label %for.end, !dbg !4841

for.body39:                                       ; preds = %for.cond35
  call void @llvm.dbg.declare(metadata %struct.CCGElem** %elem, metadata !4842, metadata !DIExpression()), !dbg !4844
  %46 = load %struct.CCGKey*, %struct.CCGKey** %key.addr, align 8, !dbg !4845
  %47 = load %struct.CCGElem*, %struct.CCGElem** %grid, align 8, !dbg !4846
  %48 = load i32, i32* %x, align 4, !dbg !4847
  %49 = load i32, i32* %y, align 4, !dbg !4848
  %call40 = call %struct.CCGElem* @CCG_grid_elem(%struct.CCGKey* %46, %struct.CCGElem* %47, i32 %48, i32 %49), !dbg !4849
  store %struct.CCGElem* %call40, %struct.CCGElem** %elem, align 8, !dbg !4844
  %50 = load %struct.VertexBufferFormat*, %struct.VertexBufferFormat** %vd, align 8, !dbg !4850
  %co = getelementptr inbounds %struct.VertexBufferFormat, %struct.VertexBufferFormat* %50, i32 0, i32 0, !dbg !4851
  %arraydecay41 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !4850
  %51 = load %struct.CCGKey*, %struct.CCGKey** %key.addr, align 8, !dbg !4852
  %52 = load %struct.CCGElem*, %struct.CCGElem** %elem, align 8, !dbg !4853
  %call42 = call float* @CCG_elem_co(%struct.CCGKey* %51, %struct.CCGElem* %52), !dbg !4854
  call void @copy_v3_v3(float* %arraydecay41, float* %call42), !dbg !4855
  %53 = load i32, i32* %smooth, align 4, !dbg !4856
  %tobool43 = icmp ne i32 %53, 0, !dbg !4856
  br i1 %tobool43, label %if.then44, label %if.end53, !dbg !4858

if.then44:                                        ; preds = %for.body39
  %54 = load %struct.VertexBufferFormat*, %struct.VertexBufferFormat** %vd, align 8, !dbg !4859
  %no = getelementptr inbounds %struct.VertexBufferFormat, %struct.VertexBufferFormat* %54, i32 0, i32 1, !dbg !4861
  %arraydecay45 = getelementptr inbounds [3 x i16], [3 x i16]* %no, i64 0, i64 0, !dbg !4859
  %55 = load %struct.CCGKey*, %struct.CCGKey** %key.addr, align 8, !dbg !4862
  %56 = load %struct.CCGElem*, %struct.CCGElem** %elem, align 8, !dbg !4863
  %call46 = call float* @CCG_elem_no(%struct.CCGKey* %55, %struct.CCGElem* %56), !dbg !4864
  call void @normal_float_to_short_v3(i16* %arraydecay45, float* %call46), !dbg !4865
  %57 = load i32, i32* %has_mask, align 4, !dbg !4866
  %tobool47 = icmp ne i32 %57, 0, !dbg !4866
  br i1 %tobool47, label %if.then48, label %if.end52, !dbg !4868

if.then48:                                        ; preds = %if.then44
  %58 = load %struct.CCGKey*, %struct.CCGKey** %key.addr, align 8, !dbg !4869
  %59 = load %struct.CCGElem*, %struct.CCGElem** %elem, align 8, !dbg !4871
  %call49 = call float* @CCG_elem_mask(%struct.CCGKey* %58, %struct.CCGElem* %59), !dbg !4872
  %60 = load float, float* %call49, align 4, !dbg !4873
  %arraydecay50 = getelementptr inbounds [4 x float], [4 x float]* %diffuse_color, i64 0, i64 0, !dbg !4874
  %61 = load %struct.VertexBufferFormat*, %struct.VertexBufferFormat** %vd, align 8, !dbg !4875
  %color = getelementptr inbounds %struct.VertexBufferFormat, %struct.VertexBufferFormat* %61, i32 0, i32 3, !dbg !4876
  %arraydecay51 = getelementptr inbounds [3 x i8], [3 x i8]* %color, i64 0, i64 0, !dbg !4875
  call void @gpu_color_from_mask_copy(float %60, float* %arraydecay50, i8* %arraydecay51), !dbg !4877
  br label %if.end52, !dbg !4878

if.end52:                                         ; preds = %if.then48, %if.then44
  br label %if.end53, !dbg !4879

if.end53:                                         ; preds = %if.end52, %for.body39
  %62 = load %struct.VertexBufferFormat*, %struct.VertexBufferFormat** %vd, align 8, !dbg !4880
  %incdec.ptr = getelementptr inbounds %struct.VertexBufferFormat, %struct.VertexBufferFormat* %62, i32 1, !dbg !4880
  store %struct.VertexBufferFormat* %incdec.ptr, %struct.VertexBufferFormat** %vd, align 8, !dbg !4880
  br label %for.inc, !dbg !4881

for.inc:                                          ; preds = %if.end53
  %63 = load i32, i32* %x, align 4, !dbg !4882
  %inc = add nsw i32 %63, 1, !dbg !4882
  store i32 %inc, i32* %x, align 4, !dbg !4882
  br label %for.cond35, !dbg !4883, !llvm.loop !4884

for.end:                                          ; preds = %for.cond35
  br label %for.inc54, !dbg !4886

for.inc54:                                        ; preds = %for.end
  %64 = load i32, i32* %y, align 4, !dbg !4887
  %inc55 = add nsw i32 %64, 1, !dbg !4887
  store i32 %inc55, i32* %y, align 4, !dbg !4887
  br label %for.cond31, !dbg !4888, !llvm.loop !4889

for.end56:                                        ; preds = %for.cond31
  %65 = load i32, i32* %smooth, align 4, !dbg !4891
  %tobool57 = icmp ne i32 %65, 0, !dbg !4891
  br i1 %tobool57, label %if.end114, label %if.then58, !dbg !4893

if.then58:                                        ; preds = %for.end56
  store i32 0, i32* %j, align 4, !dbg !4894
  br label %for.cond59, !dbg !4897

for.cond59:                                       ; preds = %for.inc111, %if.then58
  %66 = load i32, i32* %j, align 4, !dbg !4898
  %67 = load %struct.CCGKey*, %struct.CCGKey** %key.addr, align 8, !dbg !4900
  %grid_size60 = getelementptr inbounds %struct.CCGKey, %struct.CCGKey* %67, i32 0, i32 2, !dbg !4901
  %68 = load i32, i32* %grid_size60, align 4, !dbg !4901
  %sub = sub nsw i32 %68, 1, !dbg !4902
  %cmp61 = icmp slt i32 %66, %sub, !dbg !4903
  br i1 %cmp61, label %for.body63, label %for.end113, !dbg !4904

for.body63:                                       ; preds = %for.cond59
  store i32 0, i32* %k, align 4, !dbg !4905
  br label %for.cond64, !dbg !4908

for.cond64:                                       ; preds = %for.inc108, %for.body63
  %69 = load i32, i32* %k, align 4, !dbg !4909
  %70 = load %struct.CCGKey*, %struct.CCGKey** %key.addr, align 8, !dbg !4911
  %grid_size65 = getelementptr inbounds %struct.CCGKey, %struct.CCGKey* %70, i32 0, i32 2, !dbg !4912
  %71 = load i32, i32* %grid_size65, align 4, !dbg !4912
  %sub66 = sub nsw i32 %71, 1, !dbg !4913
  %cmp67 = icmp slt i32 %69, %sub66, !dbg !4914
  br i1 %cmp67, label %for.body69, label %for.end110, !dbg !4915

for.body69:                                       ; preds = %for.cond64
  call void @llvm.dbg.declare(metadata [4 x %struct.CCGElem*]* %elems, metadata !4916, metadata !DIExpression()), !dbg !4919
  %arrayinit.begin = getelementptr inbounds [4 x %struct.CCGElem*], [4 x %struct.CCGElem*]* %elems, i64 0, i64 0, !dbg !4920
  %72 = load %struct.CCGKey*, %struct.CCGKey** %key.addr, align 8, !dbg !4921
  %73 = load %struct.CCGElem*, %struct.CCGElem** %grid, align 8, !dbg !4922
  %74 = load i32, i32* %k, align 4, !dbg !4923
  %75 = load i32, i32* %j, align 4, !dbg !4924
  %add70 = add nsw i32 %75, 1, !dbg !4925
  %call71 = call %struct.CCGElem* @CCG_grid_elem(%struct.CCGKey* %72, %struct.CCGElem* %73, i32 %74, i32 %add70), !dbg !4926
  store %struct.CCGElem* %call71, %struct.CCGElem** %arrayinit.begin, align 8, !dbg !4920
  %arrayinit.element = getelementptr inbounds %struct.CCGElem*, %struct.CCGElem** %arrayinit.begin, i64 1, !dbg !4920
  %76 = load %struct.CCGKey*, %struct.CCGKey** %key.addr, align 8, !dbg !4927
  %77 = load %struct.CCGElem*, %struct.CCGElem** %grid, align 8, !dbg !4928
  %78 = load i32, i32* %k, align 4, !dbg !4929
  %add72 = add nsw i32 %78, 1, !dbg !4930
  %79 = load i32, i32* %j, align 4, !dbg !4931
  %add73 = add nsw i32 %79, 1, !dbg !4932
  %call74 = call %struct.CCGElem* @CCG_grid_elem(%struct.CCGKey* %76, %struct.CCGElem* %77, i32 %add72, i32 %add73), !dbg !4933
  store %struct.CCGElem* %call74, %struct.CCGElem** %arrayinit.element, align 8, !dbg !4920
  %arrayinit.element75 = getelementptr inbounds %struct.CCGElem*, %struct.CCGElem** %arrayinit.element, i64 1, !dbg !4920
  %80 = load %struct.CCGKey*, %struct.CCGKey** %key.addr, align 8, !dbg !4934
  %81 = load %struct.CCGElem*, %struct.CCGElem** %grid, align 8, !dbg !4935
  %82 = load i32, i32* %k, align 4, !dbg !4936
  %add76 = add nsw i32 %82, 1, !dbg !4937
  %83 = load i32, i32* %j, align 4, !dbg !4938
  %call77 = call %struct.CCGElem* @CCG_grid_elem(%struct.CCGKey* %80, %struct.CCGElem* %81, i32 %add76, i32 %83), !dbg !4939
  store %struct.CCGElem* %call77, %struct.CCGElem** %arrayinit.element75, align 8, !dbg !4920
  %arrayinit.element78 = getelementptr inbounds %struct.CCGElem*, %struct.CCGElem** %arrayinit.element75, i64 1, !dbg !4920
  %84 = load %struct.CCGKey*, %struct.CCGKey** %key.addr, align 8, !dbg !4940
  %85 = load %struct.CCGElem*, %struct.CCGElem** %grid, align 8, !dbg !4941
  %86 = load i32, i32* %k, align 4, !dbg !4942
  %87 = load i32, i32* %j, align 4, !dbg !4943
  %call79 = call %struct.CCGElem* @CCG_grid_elem(%struct.CCGKey* %84, %struct.CCGElem* %85, i32 %86, i32 %87), !dbg !4944
  store %struct.CCGElem* %call79, %struct.CCGElem** %arrayinit.element78, align 8, !dbg !4920
  call void @llvm.dbg.declare(metadata [3 x float]* %fno, metadata !4945, metadata !DIExpression()), !dbg !4946
  %arraydecay80 = getelementptr inbounds [3 x float], [3 x float]* %fno, i64 0, i64 0, !dbg !4947
  %88 = load %struct.CCGKey*, %struct.CCGKey** %key.addr, align 8, !dbg !4948
  %arrayidx81 = getelementptr inbounds [4 x %struct.CCGElem*], [4 x %struct.CCGElem*]* %elems, i64 0, i64 0, !dbg !4949
  %89 = load %struct.CCGElem*, %struct.CCGElem** %arrayidx81, align 16, !dbg !4949
  %call82 = call float* @CCG_elem_co(%struct.CCGKey* %88, %struct.CCGElem* %89), !dbg !4950
  %90 = load %struct.CCGKey*, %struct.CCGKey** %key.addr, align 8, !dbg !4951
  %arrayidx83 = getelementptr inbounds [4 x %struct.CCGElem*], [4 x %struct.CCGElem*]* %elems, i64 0, i64 1, !dbg !4952
  %91 = load %struct.CCGElem*, %struct.CCGElem** %arrayidx83, align 8, !dbg !4952
  %call84 = call float* @CCG_elem_co(%struct.CCGKey* %90, %struct.CCGElem* %91), !dbg !4953
  %92 = load %struct.CCGKey*, %struct.CCGKey** %key.addr, align 8, !dbg !4954
  %arrayidx85 = getelementptr inbounds [4 x %struct.CCGElem*], [4 x %struct.CCGElem*]* %elems, i64 0, i64 2, !dbg !4955
  %93 = load %struct.CCGElem*, %struct.CCGElem** %arrayidx85, align 16, !dbg !4955
  %call86 = call float* @CCG_elem_co(%struct.CCGKey* %92, %struct.CCGElem* %93), !dbg !4956
  %94 = load %struct.CCGKey*, %struct.CCGKey** %key.addr, align 8, !dbg !4957
  %arrayidx87 = getelementptr inbounds [4 x %struct.CCGElem*], [4 x %struct.CCGElem*]* %elems, i64 0, i64 3, !dbg !4958
  %95 = load %struct.CCGElem*, %struct.CCGElem** %arrayidx87, align 8, !dbg !4958
  %call88 = call float* @CCG_elem_co(%struct.CCGKey* %94, %struct.CCGElem* %95), !dbg !4959
  %call89 = call float @normal_quad_v3(float* %arraydecay80, float* %call82, float* %call84, float* %call86, float* %call88), !dbg !4960
  %96 = load %struct.VertexBufferFormat*, %struct.VertexBufferFormat** %vert_data, align 8, !dbg !4961
  %97 = load i32, i32* %j, align 4, !dbg !4962
  %add90 = add nsw i32 %97, 1, !dbg !4963
  %98 = load %struct.CCGKey*, %struct.CCGKey** %key.addr, align 8, !dbg !4964
  %grid_size91 = getelementptr inbounds %struct.CCGKey, %struct.CCGKey* %98, i32 0, i32 2, !dbg !4965
  %99 = load i32, i32* %grid_size91, align 4, !dbg !4965
  %mul92 = mul nsw i32 %add90, %99, !dbg !4966
  %idx.ext = sext i32 %mul92 to i64, !dbg !4967
  %add.ptr = getelementptr inbounds %struct.VertexBufferFormat, %struct.VertexBufferFormat* %96, i64 %idx.ext, !dbg !4967
  %100 = load i32, i32* %k, align 4, !dbg !4968
  %idx.ext93 = sext i32 %100 to i64, !dbg !4969
  %add.ptr94 = getelementptr inbounds %struct.VertexBufferFormat, %struct.VertexBufferFormat* %add.ptr, i64 %idx.ext93, !dbg !4969
  store %struct.VertexBufferFormat* %add.ptr94, %struct.VertexBufferFormat** %vd, align 8, !dbg !4970
  %101 = load %struct.VertexBufferFormat*, %struct.VertexBufferFormat** %vd, align 8, !dbg !4971
  %no95 = getelementptr inbounds %struct.VertexBufferFormat, %struct.VertexBufferFormat* %101, i32 0, i32 1, !dbg !4972
  %arraydecay96 = getelementptr inbounds [3 x i16], [3 x i16]* %no95, i64 0, i64 0, !dbg !4971
  %arraydecay97 = getelementptr inbounds [3 x float], [3 x float]* %fno, i64 0, i64 0, !dbg !4973
  call void @normal_float_to_short_v3(i16* %arraydecay96, float* %arraydecay97), !dbg !4974
  %102 = load i32, i32* %has_mask, align 4, !dbg !4975
  %tobool98 = icmp ne i32 %102, 0, !dbg !4975
  br i1 %tobool98, label %if.then99, label %if.end107, !dbg !4977

if.then99:                                        ; preds = %for.body69
  %103 = load %struct.CCGKey*, %struct.CCGKey** %key.addr, align 8, !dbg !4978
  %arrayidx100 = getelementptr inbounds [4 x %struct.CCGElem*], [4 x %struct.CCGElem*]* %elems, i64 0, i64 0, !dbg !4980
  %104 = load %struct.CCGElem*, %struct.CCGElem** %arrayidx100, align 16, !dbg !4980
  %arrayidx101 = getelementptr inbounds [4 x %struct.CCGElem*], [4 x %struct.CCGElem*]* %elems, i64 0, i64 1, !dbg !4981
  %105 = load %struct.CCGElem*, %struct.CCGElem** %arrayidx101, align 8, !dbg !4981
  %arrayidx102 = getelementptr inbounds [4 x %struct.CCGElem*], [4 x %struct.CCGElem*]* %elems, i64 0, i64 2, !dbg !4982
  %106 = load %struct.CCGElem*, %struct.CCGElem** %arrayidx102, align 16, !dbg !4982
  %arrayidx103 = getelementptr inbounds [4 x %struct.CCGElem*], [4 x %struct.CCGElem*]* %elems, i64 0, i64 3, !dbg !4983
  %107 = load %struct.CCGElem*, %struct.CCGElem** %arrayidx103, align 8, !dbg !4983
  %arraydecay104 = getelementptr inbounds [4 x float], [4 x float]* %diffuse_color, i64 0, i64 0, !dbg !4984
  %108 = load %struct.VertexBufferFormat*, %struct.VertexBufferFormat** %vd, align 8, !dbg !4985
  %color105 = getelementptr inbounds %struct.VertexBufferFormat, %struct.VertexBufferFormat* %108, i32 0, i32 3, !dbg !4986
  %arraydecay106 = getelementptr inbounds [3 x i8], [3 x i8]* %color105, i64 0, i64 0, !dbg !4985
  call void @gpu_color_from_mask_quad_copy(%struct.CCGKey* %103, %struct.CCGElem* %104, %struct.CCGElem* %105, %struct.CCGElem* %106, %struct.CCGElem* %107, float* %arraydecay104, i8* %arraydecay106), !dbg !4987
  br label %if.end107, !dbg !4988

if.end107:                                        ; preds = %if.then99, %for.body69
  br label %for.inc108, !dbg !4989

for.inc108:                                       ; preds = %if.end107
  %109 = load i32, i32* %k, align 4, !dbg !4990
  %inc109 = add nsw i32 %109, 1, !dbg !4990
  store i32 %inc109, i32* %k, align 4, !dbg !4990
  br label %for.cond64, !dbg !4991, !llvm.loop !4992

for.end110:                                       ; preds = %for.cond64
  br label %for.inc111, !dbg !4994

for.inc111:                                       ; preds = %for.end110
  %110 = load i32, i32* %j, align 4, !dbg !4995
  %inc112 = add nsw i32 %110, 1, !dbg !4995
  store i32 %inc112, i32* %j, align 4, !dbg !4995
  br label %for.cond59, !dbg !4996, !llvm.loop !4997

for.end113:                                       ; preds = %for.cond59
  br label %if.end114, !dbg !4999

if.end114:                                        ; preds = %for.end113, %for.end56
  %111 = load %struct.CCGKey*, %struct.CCGKey** %key.addr, align 8, !dbg !5000
  %grid_area115 = getelementptr inbounds %struct.CCGKey, %struct.CCGKey* %111, i32 0, i32 3, !dbg !5001
  %112 = load i32, i32* %grid_area115, align 4, !dbg !5001
  %113 = load %struct.VertexBufferFormat*, %struct.VertexBufferFormat** %vert_data, align 8, !dbg !5002
  %idx.ext116 = sext i32 %112 to i64, !dbg !5002
  %add.ptr117 = getelementptr inbounds %struct.VertexBufferFormat, %struct.VertexBufferFormat* %113, i64 %idx.ext116, !dbg !5002
  store %struct.VertexBufferFormat* %add.ptr117, %struct.VertexBufferFormat** %vert_data, align 8, !dbg !5002
  br label %for.inc118, !dbg !5003

for.inc118:                                       ; preds = %if.end114
  %114 = load i32, i32* %i, align 4, !dbg !5004
  %inc119 = add nsw i32 %114, 1, !dbg !5004
  store i32 %inc119, i32* %i, align 4, !dbg !5004
  br label %for.cond, !dbg !5005, !llvm.loop !5006

for.end120:                                       ; preds = %for.cond
  %115 = load i8 (i32)*, i8 (i32)** @__glewUnmapBufferARB, align 8, !dbg !5008
  %call121 = call zeroext i8 %115(i32 34962), !dbg !5008
  br label %if.end125, !dbg !5009

if.else122:                                       ; preds = %if.end16
  %116 = load void (i32, i32*)*, void (i32, i32*)** @__glewDeleteBuffersARB, align 8, !dbg !5010
  %117 = load %struct.GPU_PBVH_Buffers*, %struct.GPU_PBVH_Buffers** %buffers.addr, align 8, !dbg !5012
  %vert_buf123 = getelementptr inbounds %struct.GPU_PBVH_Buffers, %struct.GPU_PBVH_Buffers* %117, i32 0, i32 0, !dbg !5013
  call void %116(i32 1, i32* %vert_buf123), !dbg !5010
  %118 = load %struct.GPU_PBVH_Buffers*, %struct.GPU_PBVH_Buffers** %buffers.addr, align 8, !dbg !5014
  %vert_buf124 = getelementptr inbounds %struct.GPU_PBVH_Buffers, %struct.GPU_PBVH_Buffers* %118, i32 0, i32 0, !dbg !5015
  store i32 0, i32* %vert_buf124, align 8, !dbg !5016
  br label %if.end125

if.end125:                                        ; preds = %if.else122, %for.end120
  %119 = load void (i32, i32)*, void (i32, i32)** @__glewBindBufferARB, align 8, !dbg !5017
  call void %119(i32 34962, i32 0), !dbg !5017
  br label %if.end126, !dbg !5018

if.end126:                                        ; preds = %if.end125, %entry
  %120 = load %struct.CCGElem**, %struct.CCGElem*** %grids.addr, align 8, !dbg !5019
  %121 = load %struct.GPU_PBVH_Buffers*, %struct.GPU_PBVH_Buffers** %buffers.addr, align 8, !dbg !5020
  %grids127 = getelementptr inbounds %struct.GPU_PBVH_Buffers, %struct.GPU_PBVH_Buffers* %121, i32 0, i32 9, !dbg !5021
  store %struct.CCGElem** %120, %struct.CCGElem*** %grids127, align 8, !dbg !5022
  %122 = load i32*, i32** %grid_indices.addr, align 8, !dbg !5023
  %123 = load %struct.GPU_PBVH_Buffers*, %struct.GPU_PBVH_Buffers** %buffers.addr, align 8, !dbg !5024
  %grid_indices128 = getelementptr inbounds %struct.GPU_PBVH_Buffers, %struct.GPU_PBVH_Buffers* %123, i32 0, i32 12, !dbg !5025
  store i32* %122, i32** %grid_indices128, align 8, !dbg !5026
  %124 = load i32, i32* %totgrid.addr, align 4, !dbg !5027
  %125 = load %struct.GPU_PBVH_Buffers*, %struct.GPU_PBVH_Buffers** %buffers.addr, align 8, !dbg !5028
  %totgrid129 = getelementptr inbounds %struct.GPU_PBVH_Buffers, %struct.GPU_PBVH_Buffers* %125, i32 0, i32 13, !dbg !5029
  store i32 %124, i32* %totgrid129, align 8, !dbg !5030
  %126 = load %struct.DMFlagMat*, %struct.DMFlagMat** %grid_flag_mats.addr, align 8, !dbg !5031
  %127 = load %struct.GPU_PBVH_Buffers*, %struct.GPU_PBVH_Buffers** %buffers.addr, align 8, !dbg !5032
  %grid_flag_mats130 = getelementptr inbounds %struct.GPU_PBVH_Buffers, %struct.GPU_PBVH_Buffers* %127, i32 0, i32 10, !dbg !5033
  store %struct.DMFlagMat* %126, %struct.DMFlagMat** %grid_flag_mats130, align 8, !dbg !5034
  %128 = load %struct.GPU_PBVH_Buffers*, %struct.GPU_PBVH_Buffers** %buffers.addr, align 8, !dbg !5035
  %gridkey = getelementptr inbounds %struct.GPU_PBVH_Buffers, %struct.GPU_PBVH_Buffers* %128, i32 0, i32 8, !dbg !5036
  %129 = load %struct.CCGKey*, %struct.CCGKey** %key.addr, align 8, !dbg !5037
  %130 = bitcast %struct.CCGKey* %gridkey to i8*, !dbg !5038
  %131 = bitcast %struct.CCGKey* %129 to i8*, !dbg !5038
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %130, i8* align 4 %131, i64 40, i1 false), !dbg !5038
  %132 = load %struct.DMFlagMat*, %struct.DMFlagMat** %grid_flag_mats.addr, align 8, !dbg !5039
  %133 = load i32*, i32** %grid_indices.addr, align 8, !dbg !5040
  %arrayidx131 = getelementptr inbounds i32, i32* %133, i64 0, !dbg !5040
  %134 = load i32, i32* %arrayidx131, align 4, !dbg !5040
  %idxprom132 = sext i32 %134 to i64, !dbg !5039
  %arrayidx133 = getelementptr inbounds %struct.DMFlagMat, %struct.DMFlagMat* %132, i64 %idxprom132, !dbg !5039
  %flag134 = getelementptr inbounds %struct.DMFlagMat, %struct.DMFlagMat* %arrayidx133, i32 0, i32 1, !dbg !5041
  %135 = load i8, i8* %flag134, align 2, !dbg !5041
  %conv135 = zext i8 %135 to i32, !dbg !5039
  %and136 = and i32 %conv135, 1, !dbg !5042
  %136 = load %struct.GPU_PBVH_Buffers*, %struct.GPU_PBVH_Buffers** %buffers.addr, align 8, !dbg !5043
  %smooth137 = getelementptr inbounds %struct.GPU_PBVH_Buffers, %struct.GPU_PBVH_Buffers* %136, i32 0, i32 18, !dbg !5044
  store i32 %and136, i32* %smooth137, align 4, !dbg !5045
  ret void, !dbg !5046
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.CCGElem* @CCG_grid_elem(%struct.CCGKey* %key, %struct.CCGElem* %elem, i32 %x, i32 %y) #0 !dbg !5047 {
entry:
  %key.addr = alloca %struct.CCGKey*, align 8
  %elem.addr = alloca %struct.CCGElem*, align 8
  %x.addr = alloca i32, align 4
  %y.addr = alloca i32, align 4
  store %struct.CCGKey* %key, %struct.CCGKey** %key.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGKey** %key.addr, metadata !5050, metadata !DIExpression()), !dbg !5051
  store %struct.CCGElem* %elem, %struct.CCGElem** %elem.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGElem** %elem.addr, metadata !5052, metadata !DIExpression()), !dbg !5053
  store i32 %x, i32* %x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !5054, metadata !DIExpression()), !dbg !5055
  store i32 %y, i32* %y.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %y.addr, metadata !5056, metadata !DIExpression()), !dbg !5057
  %0 = load %struct.CCGKey*, %struct.CCGKey** %key.addr, align 8, !dbg !5058
  %1 = load %struct.CCGElem*, %struct.CCGElem** %elem.addr, align 8, !dbg !5059
  %2 = load i32, i32* %y.addr, align 4, !dbg !5060
  %3 = load %struct.CCGKey*, %struct.CCGKey** %key.addr, align 8, !dbg !5061
  %grid_size = getelementptr inbounds %struct.CCGKey, %struct.CCGKey* %3, i32 0, i32 2, !dbg !5062
  %4 = load i32, i32* %grid_size, align 4, !dbg !5062
  %mul = mul nsw i32 %2, %4, !dbg !5063
  %5 = load i32, i32* %x.addr, align 4, !dbg !5064
  %add = add nsw i32 %mul, %5, !dbg !5065
  %call = call %struct.CCGElem* @CCG_elem_offset(%struct.CCGKey* %0, %struct.CCGElem* %1, i32 %add), !dbg !5066
  ret %struct.CCGElem* %call, !dbg !5067
}

; Function Attrs: noinline nounwind uwtable
define internal float* @CCG_elem_co(%struct.CCGKey* %UNUSED_key, %struct.CCGElem* %elem) #0 !dbg !5068 {
entry:
  %UNUSED_key.addr = alloca %struct.CCGKey*, align 8
  %elem.addr = alloca %struct.CCGElem*, align 8
  store %struct.CCGKey* %UNUSED_key, %struct.CCGKey** %UNUSED_key.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGKey** %UNUSED_key.addr, metadata !5071, metadata !DIExpression()), !dbg !5072
  store %struct.CCGElem* %elem, %struct.CCGElem** %elem.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGElem** %elem.addr, metadata !5073, metadata !DIExpression()), !dbg !5074
  %0 = load %struct.CCGElem*, %struct.CCGElem** %elem.addr, align 8, !dbg !5075
  %1 = bitcast %struct.CCGElem* %0 to float*, !dbg !5076
  ret float* %1, !dbg !5077
}

; Function Attrs: noinline nounwind uwtable
define internal float* @CCG_elem_no(%struct.CCGKey* %key, %struct.CCGElem* %elem) #0 !dbg !5078 {
entry:
  %key.addr = alloca %struct.CCGKey*, align 8
  %elem.addr = alloca %struct.CCGElem*, align 8
  store %struct.CCGKey* %key, %struct.CCGKey** %key.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGKey** %key.addr, metadata !5079, metadata !DIExpression()), !dbg !5080
  store %struct.CCGElem* %elem, %struct.CCGElem** %elem.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGElem** %elem.addr, metadata !5081, metadata !DIExpression()), !dbg !5082
  %0 = load %struct.CCGElem*, %struct.CCGElem** %elem.addr, align 8, !dbg !5083
  %1 = bitcast %struct.CCGElem* %0 to i8*, !dbg !5084
  %2 = load %struct.CCGKey*, %struct.CCGKey** %key.addr, align 8, !dbg !5085
  %normal_offset = getelementptr inbounds %struct.CCGKey, %struct.CCGKey* %2, i32 0, i32 5, !dbg !5086
  %3 = load i32, i32* %normal_offset, align 4, !dbg !5086
  %idx.ext = sext i32 %3 to i64, !dbg !5087
  %add.ptr = getelementptr inbounds i8, i8* %1, i64 %idx.ext, !dbg !5087
  %4 = bitcast i8* %add.ptr to float*, !dbg !5088
  ret float* %4, !dbg !5089
}

; Function Attrs: noinline nounwind uwtable
define internal float* @CCG_elem_mask(%struct.CCGKey* %key, %struct.CCGElem* %elem) #0 !dbg !5090 {
entry:
  %key.addr = alloca %struct.CCGKey*, align 8
  %elem.addr = alloca %struct.CCGElem*, align 8
  store %struct.CCGKey* %key, %struct.CCGKey** %key.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGKey** %key.addr, metadata !5091, metadata !DIExpression()), !dbg !5092
  store %struct.CCGElem* %elem, %struct.CCGElem** %elem.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGElem** %elem.addr, metadata !5093, metadata !DIExpression()), !dbg !5094
  %0 = load %struct.CCGElem*, %struct.CCGElem** %elem.addr, align 8, !dbg !5095
  %1 = bitcast %struct.CCGElem* %0 to i8*, !dbg !5096
  %2 = load %struct.CCGKey*, %struct.CCGKey** %key.addr, align 8, !dbg !5097
  %mask_offset = getelementptr inbounds %struct.CCGKey, %struct.CCGKey* %2, i32 0, i32 6, !dbg !5098
  %3 = load i32, i32* %mask_offset, align 4, !dbg !5098
  %idx.ext = sext i32 %3 to i64, !dbg !5099
  %add.ptr = getelementptr inbounds i8, i8* %1, i64 %idx.ext, !dbg !5099
  %4 = bitcast i8* %add.ptr to float*, !dbg !5100
  ret float* %4, !dbg !5101
}

; Function Attrs: noinline nounwind uwtable
define internal void @gpu_color_from_mask_quad_copy(%struct.CCGKey* %key, %struct.CCGElem* %a, %struct.CCGElem* %b, %struct.CCGElem* %c, %struct.CCGElem* %d, float* %diffuse_color, i8* %out) #0 !dbg !5102 {
entry:
  %key.addr = alloca %struct.CCGKey*, align 8
  %a.addr = alloca %struct.CCGElem*, align 8
  %b.addr = alloca %struct.CCGElem*, align 8
  %c.addr = alloca %struct.CCGElem*, align 8
  %d.addr = alloca %struct.CCGElem*, align 8
  %diffuse_color.addr = alloca float*, align 8
  %out.addr = alloca i8*, align 8
  %mask_color = alloca float, align 4
  store %struct.CCGKey* %key, %struct.CCGKey** %key.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGKey** %key.addr, metadata !5105, metadata !DIExpression()), !dbg !5106
  store %struct.CCGElem* %a, %struct.CCGElem** %a.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGElem** %a.addr, metadata !5107, metadata !DIExpression()), !dbg !5108
  store %struct.CCGElem* %b, %struct.CCGElem** %b.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGElem** %b.addr, metadata !5109, metadata !DIExpression()), !dbg !5110
  store %struct.CCGElem* %c, %struct.CCGElem** %c.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGElem** %c.addr, metadata !5111, metadata !DIExpression()), !dbg !5112
  store %struct.CCGElem* %d, %struct.CCGElem** %d.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGElem** %d.addr, metadata !5113, metadata !DIExpression()), !dbg !5114
  store float* %diffuse_color, float** %diffuse_color.addr, align 8
  call void @llvm.dbg.declare(metadata float** %diffuse_color.addr, metadata !5115, metadata !DIExpression()), !dbg !5116
  store i8* %out, i8** %out.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %out.addr, metadata !5117, metadata !DIExpression()), !dbg !5118
  call void @llvm.dbg.declare(metadata float* %mask_color, metadata !5119, metadata !DIExpression()), !dbg !5120
  %0 = load %struct.CCGKey*, %struct.CCGKey** %key.addr, align 8, !dbg !5121
  %1 = load %struct.CCGElem*, %struct.CCGElem** %a.addr, align 8, !dbg !5122
  %call = call float* @CCG_elem_mask(%struct.CCGKey* %0, %struct.CCGElem* %1), !dbg !5123
  %2 = load float, float* %call, align 4, !dbg !5124
  %3 = load %struct.CCGKey*, %struct.CCGKey** %key.addr, align 8, !dbg !5125
  %4 = load %struct.CCGElem*, %struct.CCGElem** %b.addr, align 8, !dbg !5126
  %call1 = call float* @CCG_elem_mask(%struct.CCGKey* %3, %struct.CCGElem* %4), !dbg !5127
  %5 = load float, float* %call1, align 4, !dbg !5128
  %add = fadd float %2, %5, !dbg !5129
  %6 = load %struct.CCGKey*, %struct.CCGKey** %key.addr, align 8, !dbg !5130
  %7 = load %struct.CCGElem*, %struct.CCGElem** %c.addr, align 8, !dbg !5131
  %call2 = call float* @CCG_elem_mask(%struct.CCGKey* %6, %struct.CCGElem* %7), !dbg !5132
  %8 = load float, float* %call2, align 4, !dbg !5133
  %add3 = fadd float %add, %8, !dbg !5134
  %9 = load %struct.CCGKey*, %struct.CCGKey** %key.addr, align 8, !dbg !5135
  %10 = load %struct.CCGElem*, %struct.CCGElem** %d.addr, align 8, !dbg !5136
  %call4 = call float* @CCG_elem_mask(%struct.CCGKey* %9, %struct.CCGElem* %10), !dbg !5137
  %11 = load float, float* %call4, align 4, !dbg !5138
  %add5 = fadd float %add3, %11, !dbg !5139
  %mul = fmul float %add5, 2.500000e-01, !dbg !5140
  %call6 = call float @gpu_color_from_mask(float %mul), !dbg !5141
  %mul7 = fmul float %call6, 2.550000e+02, !dbg !5142
  store float %mul7, float* %mask_color, align 4, !dbg !5120
  %12 = load float*, float** %diffuse_color.addr, align 8, !dbg !5143
  %arrayidx = getelementptr inbounds float, float* %12, i64 0, !dbg !5143
  %13 = load float, float* %arrayidx, align 4, !dbg !5143
  %14 = load float, float* %mask_color, align 4, !dbg !5144
  %mul8 = fmul float %13, %14, !dbg !5145
  %conv = fptoui float %mul8 to i8, !dbg !5143
  %15 = load i8*, i8** %out.addr, align 8, !dbg !5146
  %arrayidx9 = getelementptr inbounds i8, i8* %15, i64 0, !dbg !5146
  store i8 %conv, i8* %arrayidx9, align 1, !dbg !5147
  %16 = load float*, float** %diffuse_color.addr, align 8, !dbg !5148
  %arrayidx10 = getelementptr inbounds float, float* %16, i64 1, !dbg !5148
  %17 = load float, float* %arrayidx10, align 4, !dbg !5148
  %18 = load float, float* %mask_color, align 4, !dbg !5149
  %mul11 = fmul float %17, %18, !dbg !5150
  %conv12 = fptoui float %mul11 to i8, !dbg !5148
  %19 = load i8*, i8** %out.addr, align 8, !dbg !5151
  %arrayidx13 = getelementptr inbounds i8, i8* %19, i64 1, !dbg !5151
  store i8 %conv12, i8* %arrayidx13, align 1, !dbg !5152
  %20 = load float*, float** %diffuse_color.addr, align 8, !dbg !5153
  %arrayidx14 = getelementptr inbounds float, float* %20, i64 2, !dbg !5153
  %21 = load float, float* %arrayidx14, align 4, !dbg !5153
  %22 = load float, float* %mask_color, align 4, !dbg !5154
  %mul15 = fmul float %21, %22, !dbg !5155
  %conv16 = fptoui float %mul15 to i8, !dbg !5153
  %23 = load i8*, i8** %out.addr, align 8, !dbg !5156
  %arrayidx17 = getelementptr inbounds i8, i8* %23, i64 2, !dbg !5156
  store i8 %conv16, i8* %arrayidx17, align 1, !dbg !5157
  ret void, !dbg !5158
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.GPU_PBVH_Buffers* @GPU_build_grid_pbvh_buffers(i32* %grid_indices, i32 %totgrid, i32** %grid_hidden, i32 %gridsize) #0 !dbg !5159 {
entry:
  %retval = alloca %struct.GPU_PBVH_Buffers*, align 8
  %grid_indices.addr = alloca i32*, align 8
  %totgrid.addr = alloca i32, align 4
  %grid_hidden.addr = alloca i32**, align 8
  %gridsize.addr = alloca i32, align 4
  %buffers = alloca %struct.GPU_PBVH_Buffers*, align 8
  %totquad = alloca i32, align 4
  %fully_visible_totquad = alloca i32, align 4
  %tri_data = alloca i16*, align 8
  %offset = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %gh = alloca i32*, align 8
  %tri_data103 = alloca i32*, align 8
  %offset104 = alloca i32, align 4
  %i105 = alloca i32, align 4
  %j106 = alloca i32, align 4
  %k107 = alloca i32, align 4
  %gh118 = alloca i32*, align 8
  store i32* %grid_indices, i32** %grid_indices.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %grid_indices.addr, metadata !5163, metadata !DIExpression()), !dbg !5164
  store i32 %totgrid, i32* %totgrid.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %totgrid.addr, metadata !5165, metadata !DIExpression()), !dbg !5166
  store i32** %grid_hidden, i32*** %grid_hidden.addr, align 8
  call void @llvm.dbg.declare(metadata i32*** %grid_hidden.addr, metadata !5167, metadata !DIExpression()), !dbg !5168
  store i32 %gridsize, i32* %gridsize.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %gridsize.addr, metadata !5169, metadata !DIExpression()), !dbg !5170
  call void @llvm.dbg.declare(metadata %struct.GPU_PBVH_Buffers** %buffers, metadata !5171, metadata !DIExpression()), !dbg !5172
  call void @llvm.dbg.declare(metadata i32* %totquad, metadata !5173, metadata !DIExpression()), !dbg !5174
  call void @llvm.dbg.declare(metadata i32* %fully_visible_totquad, metadata !5175, metadata !DIExpression()), !dbg !5176
  %0 = load i32, i32* %gridsize.addr, align 4, !dbg !5177
  %sub = sub nsw i32 %0, 1, !dbg !5178
  %1 = load i32, i32* %gridsize.addr, align 4, !dbg !5179
  %sub1 = sub nsw i32 %1, 1, !dbg !5180
  %mul = mul nsw i32 %sub, %sub1, !dbg !5181
  %2 = load i32, i32* %totgrid.addr, align 4, !dbg !5182
  %mul2 = mul nsw i32 %mul, %2, !dbg !5183
  store i32 %mul2, i32* %fully_visible_totquad, align 4, !dbg !5176
  %3 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !5184
  %call = call i8* %3(i64 176, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.4, i64 0, i64 0)), !dbg !5184
  %4 = bitcast i8* %call to %struct.GPU_PBVH_Buffers*, !dbg !5184
  store %struct.GPU_PBVH_Buffers* %4, %struct.GPU_PBVH_Buffers** %buffers, align 8, !dbg !5185
  %5 = load i32**, i32*** %grid_hidden.addr, align 8, !dbg !5186
  %6 = load %struct.GPU_PBVH_Buffers*, %struct.GPU_PBVH_Buffers** %buffers, align 8, !dbg !5187
  %grid_hidden3 = getelementptr inbounds %struct.GPU_PBVH_Buffers, %struct.GPU_PBVH_Buffers* %6, i32 0, i32 11, !dbg !5188
  store i32** %5, i32*** %grid_hidden3, align 8, !dbg !5189
  %7 = load i32, i32* %totgrid.addr, align 4, !dbg !5190
  %8 = load %struct.GPU_PBVH_Buffers*, %struct.GPU_PBVH_Buffers** %buffers, align 8, !dbg !5191
  %totgrid4 = getelementptr inbounds %struct.GPU_PBVH_Buffers, %struct.GPU_PBVH_Buffers* %8, i32 0, i32 13, !dbg !5192
  store i32 %7, i32* %totgrid4, align 8, !dbg !5193
  %9 = load %struct.GPU_PBVH_Buffers*, %struct.GPU_PBVH_Buffers** %buffers, align 8, !dbg !5194
  %show_diffuse_color = getelementptr inbounds %struct.GPU_PBVH_Buffers, %struct.GPU_PBVH_Buffers* %9, i32 0, i32 19, !dbg !5195
  store i8 0, i8* %show_diffuse_color, align 8, !dbg !5196
  %10 = load %struct.GPU_PBVH_Buffers*, %struct.GPU_PBVH_Buffers** %buffers, align 8, !dbg !5197
  %use_matcaps = getelementptr inbounds %struct.GPU_PBVH_Buffers, %struct.GPU_PBVH_Buffers* %10, i32 0, i32 20, !dbg !5198
  store i8 0, i8* %use_matcaps, align 1, !dbg !5199
  %11 = load i32**, i32*** %grid_hidden.addr, align 8, !dbg !5200
  %12 = load i32*, i32** %grid_indices.addr, align 8, !dbg !5201
  %13 = load i32, i32* %totgrid.addr, align 4, !dbg !5202
  %14 = load i32, i32* %gridsize.addr, align 4, !dbg !5203
  %call5 = call i32 @BKE_pbvh_count_grid_quads(i32** %11, i32* %12, i32 %13, i32 %14), !dbg !5204
  store i32 %call5, i32* %totquad, align 4, !dbg !5205
  %15 = load i32, i32* %totquad, align 4, !dbg !5206
  %cmp = icmp eq i32 %15, 0, !dbg !5208
  br i1 %cmp, label %if.then, label %if.end, !dbg !5209

if.then:                                          ; preds = %entry
  %16 = load %struct.GPU_PBVH_Buffers*, %struct.GPU_PBVH_Buffers** %buffers, align 8, !dbg !5210
  store %struct.GPU_PBVH_Buffers* %16, %struct.GPU_PBVH_Buffers** %retval, align 8, !dbg !5211
  br label %return, !dbg !5211

if.end:                                           ; preds = %entry
  %17 = load i32, i32* %totquad, align 4, !dbg !5212
  %18 = load i32, i32* %fully_visible_totquad, align 4, !dbg !5214
  %cmp6 = icmp eq i32 %17, %18, !dbg !5215
  br i1 %cmp6, label %if.then7, label %if.else, !dbg !5216

if.then7:                                         ; preds = %if.end
  %19 = load i32, i32* %gridsize.addr, align 4, !dbg !5217
  %20 = load %struct.GPU_PBVH_Buffers*, %struct.GPU_PBVH_Buffers** %buffers, align 8, !dbg !5219
  %index_type = getelementptr inbounds %struct.GPU_PBVH_Buffers, %struct.GPU_PBVH_Buffers* %20, i32 0, i32 2, !dbg !5220
  %21 = load %struct.GPU_PBVH_Buffers*, %struct.GPU_PBVH_Buffers** %buffers, align 8, !dbg !5221
  %tot_quad = getelementptr inbounds %struct.GPU_PBVH_Buffers, %struct.GPU_PBVH_Buffers* %21, i32 0, i32 17, !dbg !5222
  %call8 = call i32 @gpu_get_grid_buffer(i32 %19, i32* %index_type, i32* %tot_quad), !dbg !5223
  %22 = load %struct.GPU_PBVH_Buffers*, %struct.GPU_PBVH_Buffers** %buffers, align 8, !dbg !5224
  %index_buf = getelementptr inbounds %struct.GPU_PBVH_Buffers, %struct.GPU_PBVH_Buffers* %22, i32 0, i32 1, !dbg !5225
  store i32 %call8, i32* %index_buf, align 4, !dbg !5226
  %23 = load %struct.GPU_PBVH_Buffers*, %struct.GPU_PBVH_Buffers** %buffers, align 8, !dbg !5227
  %has_hidden = getelementptr inbounds %struct.GPU_PBVH_Buffers, %struct.GPU_PBVH_Buffers* %23, i32 0, i32 14, !dbg !5228
  store i32 0, i32* %has_hidden, align 4, !dbg !5229
  br label %if.end193, !dbg !5230

if.else:                                          ; preds = %if.end
  %24 = load i8, i8* @__GLEW_ARB_vertex_buffer_object, align 1, !dbg !5231
  %conv = zext i8 %24 to i32, !dbg !5231
  %tobool = icmp ne i32 %conv, 0, !dbg !5231
  br i1 %tobool, label %land.lhs.true, label %if.end192, !dbg !5233

land.lhs.true:                                    ; preds = %if.else
  %25 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 20), align 8, !dbg !5234
  %conv9 = sext i16 %25 to i32, !dbg !5235
  %and = and i32 %conv9, 8, !dbg !5236
  %tobool10 = icmp ne i32 %and, 0, !dbg !5236
  br i1 %tobool10, label %if.end192, label %if.then11, !dbg !5237

if.then11:                                        ; preds = %land.lhs.true
  %26 = load void (i32, i32*)*, void (i32, i32*)** @__glewGenBuffersARB, align 8, !dbg !5238
  %27 = load %struct.GPU_PBVH_Buffers*, %struct.GPU_PBVH_Buffers** %buffers, align 8, !dbg !5240
  %index_buf12 = getelementptr inbounds %struct.GPU_PBVH_Buffers, %struct.GPU_PBVH_Buffers* %27, i32 0, i32 1, !dbg !5241
  call void %26(i32 1, i32* %index_buf12), !dbg !5238
  %28 = load %struct.GPU_PBVH_Buffers*, %struct.GPU_PBVH_Buffers** %buffers, align 8, !dbg !5242
  %index_buf13 = getelementptr inbounds %struct.GPU_PBVH_Buffers, %struct.GPU_PBVH_Buffers* %28, i32 0, i32 1, !dbg !5244
  %29 = load i32, i32* %index_buf13, align 4, !dbg !5244
  %tobool14 = icmp ne i32 %29, 0, !dbg !5242
  br i1 %tobool14, label %if.then15, label %if.end190, !dbg !5245

if.then15:                                        ; preds = %if.then11
  %30 = load i32, i32* %totquad, align 4, !dbg !5246
  %31 = load %struct.GPU_PBVH_Buffers*, %struct.GPU_PBVH_Buffers** %buffers, align 8, !dbg !5248
  %tot_quad16 = getelementptr inbounds %struct.GPU_PBVH_Buffers, %struct.GPU_PBVH_Buffers* %31, i32 0, i32 17, !dbg !5249
  store i32 %30, i32* %tot_quad16, align 8, !dbg !5250
  %32 = load void (i32, i32)*, void (i32, i32)** @__glewBindBufferARB, align 8, !dbg !5251
  %33 = load %struct.GPU_PBVH_Buffers*, %struct.GPU_PBVH_Buffers** %buffers, align 8, !dbg !5252
  %index_buf17 = getelementptr inbounds %struct.GPU_PBVH_Buffers, %struct.GPU_PBVH_Buffers* %33, i32 0, i32 1, !dbg !5253
  %34 = load i32, i32* %index_buf17, align 4, !dbg !5253
  call void %32(i32 34963, i32 %34), !dbg !5251
  %35 = load i32, i32* %totgrid.addr, align 4, !dbg !5254
  %36 = load i32, i32* %gridsize.addr, align 4, !dbg !5256
  %mul18 = mul nsw i32 %35, %36, !dbg !5257
  %37 = load i32, i32* %gridsize.addr, align 4, !dbg !5258
  %mul19 = mul nsw i32 %mul18, %37, !dbg !5259
  %cmp20 = icmp slt i32 %mul19, 65535, !dbg !5260
  br i1 %cmp20, label %if.then22, label %if.else101, !dbg !5261

if.then22:                                        ; preds = %if.then15
  %38 = load %struct.GPU_PBVH_Buffers*, %struct.GPU_PBVH_Buffers** %buffers, align 8, !dbg !5262
  %index_type23 = getelementptr inbounds %struct.GPU_PBVH_Buffers, %struct.GPU_PBVH_Buffers* %38, i32 0, i32 2, !dbg !5264
  store i32 5123, i32* %index_type23, align 8, !dbg !5265
  call void @llvm.dbg.declare(metadata i16** %tri_data, metadata !5266, metadata !DIExpression()), !dbg !5268
  call void @llvm.dbg.declare(metadata i32* %offset, metadata !5269, metadata !DIExpression()), !dbg !5268
  store i32 0, i32* %offset, align 4, !dbg !5268
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5270, metadata !DIExpression()), !dbg !5268
  call void @llvm.dbg.declare(metadata i32* %j, metadata !5271, metadata !DIExpression()), !dbg !5268
  call void @llvm.dbg.declare(metadata i32* %k, metadata !5272, metadata !DIExpression()), !dbg !5268
  %39 = load void (i32, i64, i8*, i32)*, void (i32, i64, i8*, i32)** @__glewBufferDataARB, align 8, !dbg !5268
  %40 = load i32, i32* %totquad, align 4, !dbg !5268
  %conv24 = sext i32 %40 to i64, !dbg !5268
  %mul25 = mul i64 2, %conv24, !dbg !5268
  %mul26 = mul i64 %mul25, 6, !dbg !5268
  call void %39(i32 34963, i64 %mul26, i8* null, i32 35044), !dbg !5268
  %41 = load i8* (i32, i32)*, i8* (i32, i32)** @__glewMapBufferARB, align 8, !dbg !5268
  %call27 = call i8* %41(i32 34963, i32 35001), !dbg !5268
  %42 = bitcast i8* %call27 to i16*, !dbg !5268
  store i16* %42, i16** %tri_data, align 8, !dbg !5268
  %43 = load i16*, i16** %tri_data, align 8, !dbg !5273
  %tobool28 = icmp ne i16* %43, null, !dbg !5273
  br i1 %tobool28, label %if.then29, label %if.else97, !dbg !5268

if.then29:                                        ; preds = %if.then22
  store i32 0, i32* %i, align 4, !dbg !5275
  br label %for.cond, !dbg !5275

for.cond:                                         ; preds = %for.inc93, %if.then29
  %44 = load i32, i32* %i, align 4, !dbg !5278
  %45 = load i32, i32* %totgrid.addr, align 4, !dbg !5278
  %cmp30 = icmp slt i32 %44, %45, !dbg !5278
  br i1 %cmp30, label %for.body, label %for.end95, !dbg !5275

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32** %gh, metadata !5280, metadata !DIExpression()), !dbg !5282
  store i32* null, i32** %gh, align 8, !dbg !5282
  %46 = load i32**, i32*** %grid_hidden.addr, align 8, !dbg !5283
  %tobool32 = icmp ne i32** %46, null, !dbg !5283
  br i1 %tobool32, label %if.then33, label %if.end36, !dbg !5282

if.then33:                                        ; preds = %for.body
  %47 = load i32**, i32*** %grid_hidden.addr, align 8, !dbg !5283
  %48 = load i32*, i32** %grid_indices.addr, align 8, !dbg !5283
  %49 = load i32, i32* %i, align 4, !dbg !5283
  %idxprom = sext i32 %49 to i64, !dbg !5283
  %arrayidx = getelementptr inbounds i32, i32* %48, i64 %idxprom, !dbg !5283
  %50 = load i32, i32* %arrayidx, align 4, !dbg !5283
  %idxprom34 = sext i32 %50 to i64, !dbg !5283
  %arrayidx35 = getelementptr inbounds i32*, i32** %47, i64 %idxprom34, !dbg !5283
  %51 = load i32*, i32** %arrayidx35, align 8, !dbg !5283
  store i32* %51, i32** %gh, align 8, !dbg !5283
  br label %if.end36, !dbg !5283

if.end36:                                         ; preds = %if.then33, %for.body
  store i32 0, i32* %j, align 4, !dbg !5285
  br label %for.cond37, !dbg !5285

for.cond37:                                       ; preds = %for.inc88, %if.end36
  %52 = load i32, i32* %j, align 4, !dbg !5287
  %53 = load i32, i32* %gridsize.addr, align 4, !dbg !5287
  %sub38 = sub nsw i32 %53, 1, !dbg !5287
  %cmp39 = icmp slt i32 %52, %sub38, !dbg !5287
  br i1 %cmp39, label %for.body41, label %for.end90, !dbg !5285

for.body41:                                       ; preds = %for.cond37
  store i32 0, i32* %k, align 4, !dbg !5289
  br label %for.cond42, !dbg !5289

for.cond42:                                       ; preds = %for.inc, %for.body41
  %54 = load i32, i32* %k, align 4, !dbg !5292
  %55 = load i32, i32* %gridsize.addr, align 4, !dbg !5292
  %sub43 = sub nsw i32 %55, 1, !dbg !5292
  %cmp44 = icmp slt i32 %54, %sub43, !dbg !5292
  br i1 %cmp44, label %for.body46, label %for.end, !dbg !5289

for.body46:                                       ; preds = %for.cond42
  %56 = load i32*, i32** %gh, align 8, !dbg !5294
  %tobool47 = icmp ne i32* %56, null, !dbg !5294
  br i1 %tobool47, label %land.lhs.true48, label %if.end53, !dbg !5294

land.lhs.true48:                                  ; preds = %for.body46
  %57 = load i32*, i32** %gh, align 8, !dbg !5294
  %58 = load i32, i32* %gridsize.addr, align 4, !dbg !5294
  %59 = load i32, i32* %k, align 4, !dbg !5294
  %60 = load i32, i32* %j, align 4, !dbg !5294
  %call49 = call zeroext i8 @paint_is_grid_face_hidden(i32* %57, i32 %58, i32 %59, i32 %60), !dbg !5294
  %conv50 = zext i8 %call49 to i32, !dbg !5294
  %tobool51 = icmp ne i32 %conv50, 0, !dbg !5294
  br i1 %tobool51, label %if.then52, label %if.end53, !dbg !5297

if.then52:                                        ; preds = %land.lhs.true48
  br label %for.inc, !dbg !5294

if.end53:                                         ; preds = %land.lhs.true48, %for.body46
  %61 = load i32, i32* %offset, align 4, !dbg !5297
  %62 = load i32, i32* %j, align 4, !dbg !5297
  %63 = load i32, i32* %gridsize.addr, align 4, !dbg !5297
  %mul54 = mul nsw i32 %62, %63, !dbg !5297
  %add = add nsw i32 %61, %mul54, !dbg !5297
  %64 = load i32, i32* %k, align 4, !dbg !5297
  %add55 = add nsw i32 %add, %64, !dbg !5297
  %add56 = add nsw i32 %add55, 1, !dbg !5297
  %conv57 = trunc i32 %add56 to i16, !dbg !5297
  %65 = load i16*, i16** %tri_data, align 8, !dbg !5297
  %incdec.ptr = getelementptr inbounds i16, i16* %65, i32 1, !dbg !5297
  store i16* %incdec.ptr, i16** %tri_data, align 8, !dbg !5297
  store i16 %conv57, i16* %65, align 2, !dbg !5297
  %66 = load i32, i32* %offset, align 4, !dbg !5297
  %67 = load i32, i32* %j, align 4, !dbg !5297
  %68 = load i32, i32* %gridsize.addr, align 4, !dbg !5297
  %mul58 = mul nsw i32 %67, %68, !dbg !5297
  %add59 = add nsw i32 %66, %mul58, !dbg !5297
  %69 = load i32, i32* %k, align 4, !dbg !5297
  %add60 = add nsw i32 %add59, %69, !dbg !5297
  %conv61 = trunc i32 %add60 to i16, !dbg !5297
  %70 = load i16*, i16** %tri_data, align 8, !dbg !5297
  %incdec.ptr62 = getelementptr inbounds i16, i16* %70, i32 1, !dbg !5297
  store i16* %incdec.ptr62, i16** %tri_data, align 8, !dbg !5297
  store i16 %conv61, i16* %70, align 2, !dbg !5297
  %71 = load i32, i32* %offset, align 4, !dbg !5297
  %72 = load i32, i32* %j, align 4, !dbg !5297
  %add63 = add nsw i32 %72, 1, !dbg !5297
  %73 = load i32, i32* %gridsize.addr, align 4, !dbg !5297
  %mul64 = mul nsw i32 %add63, %73, !dbg !5297
  %add65 = add nsw i32 %71, %mul64, !dbg !5297
  %74 = load i32, i32* %k, align 4, !dbg !5297
  %add66 = add nsw i32 %add65, %74, !dbg !5297
  %conv67 = trunc i32 %add66 to i16, !dbg !5297
  %75 = load i16*, i16** %tri_data, align 8, !dbg !5297
  %incdec.ptr68 = getelementptr inbounds i16, i16* %75, i32 1, !dbg !5297
  store i16* %incdec.ptr68, i16** %tri_data, align 8, !dbg !5297
  store i16 %conv67, i16* %75, align 2, !dbg !5297
  %76 = load i32, i32* %offset, align 4, !dbg !5297
  %77 = load i32, i32* %j, align 4, !dbg !5297
  %add69 = add nsw i32 %77, 1, !dbg !5297
  %78 = load i32, i32* %gridsize.addr, align 4, !dbg !5297
  %mul70 = mul nsw i32 %add69, %78, !dbg !5297
  %add71 = add nsw i32 %76, %mul70, !dbg !5297
  %79 = load i32, i32* %k, align 4, !dbg !5297
  %add72 = add nsw i32 %add71, %79, !dbg !5297
  %add73 = add nsw i32 %add72, 1, !dbg !5297
  %conv74 = trunc i32 %add73 to i16, !dbg !5297
  %80 = load i16*, i16** %tri_data, align 8, !dbg !5297
  %incdec.ptr75 = getelementptr inbounds i16, i16* %80, i32 1, !dbg !5297
  store i16* %incdec.ptr75, i16** %tri_data, align 8, !dbg !5297
  store i16 %conv74, i16* %80, align 2, !dbg !5297
  %81 = load i32, i32* %offset, align 4, !dbg !5297
  %82 = load i32, i32* %j, align 4, !dbg !5297
  %83 = load i32, i32* %gridsize.addr, align 4, !dbg !5297
  %mul76 = mul nsw i32 %82, %83, !dbg !5297
  %add77 = add nsw i32 %81, %mul76, !dbg !5297
  %84 = load i32, i32* %k, align 4, !dbg !5297
  %add78 = add nsw i32 %add77, %84, !dbg !5297
  %add79 = add nsw i32 %add78, 1, !dbg !5297
  %conv80 = trunc i32 %add79 to i16, !dbg !5297
  %85 = load i16*, i16** %tri_data, align 8, !dbg !5297
  %incdec.ptr81 = getelementptr inbounds i16, i16* %85, i32 1, !dbg !5297
  store i16* %incdec.ptr81, i16** %tri_data, align 8, !dbg !5297
  store i16 %conv80, i16* %85, align 2, !dbg !5297
  %86 = load i32, i32* %offset, align 4, !dbg !5297
  %87 = load i32, i32* %j, align 4, !dbg !5297
  %add82 = add nsw i32 %87, 1, !dbg !5297
  %88 = load i32, i32* %gridsize.addr, align 4, !dbg !5297
  %mul83 = mul nsw i32 %add82, %88, !dbg !5297
  %add84 = add nsw i32 %86, %mul83, !dbg !5297
  %89 = load i32, i32* %k, align 4, !dbg !5297
  %add85 = add nsw i32 %add84, %89, !dbg !5297
  %conv86 = trunc i32 %add85 to i16, !dbg !5297
  %90 = load i16*, i16** %tri_data, align 8, !dbg !5297
  %incdec.ptr87 = getelementptr inbounds i16, i16* %90, i32 1, !dbg !5297
  store i16* %incdec.ptr87, i16** %tri_data, align 8, !dbg !5297
  store i16 %conv86, i16* %90, align 2, !dbg !5297
  br label %for.inc, !dbg !5297

for.inc:                                          ; preds = %if.end53, %if.then52
  %91 = load i32, i32* %k, align 4, !dbg !5292
  %inc = add nsw i32 %91, 1, !dbg !5292
  store i32 %inc, i32* %k, align 4, !dbg !5292
  br label %for.cond42, !dbg !5292, !llvm.loop !5298

for.end:                                          ; preds = %for.cond42
  br label %for.inc88, !dbg !5299

for.inc88:                                        ; preds = %for.end
  %92 = load i32, i32* %j, align 4, !dbg !5287
  %inc89 = add nsw i32 %92, 1, !dbg !5287
  store i32 %inc89, i32* %j, align 4, !dbg !5287
  br label %for.cond37, !dbg !5287, !llvm.loop !5300

for.end90:                                        ; preds = %for.cond37
  %93 = load i32, i32* %gridsize.addr, align 4, !dbg !5282
  %94 = load i32, i32* %gridsize.addr, align 4, !dbg !5282
  %mul91 = mul nsw i32 %93, %94, !dbg !5282
  %95 = load i32, i32* %offset, align 4, !dbg !5282
  %add92 = add nsw i32 %95, %mul91, !dbg !5282
  store i32 %add92, i32* %offset, align 4, !dbg !5282
  br label %for.inc93, !dbg !5282

for.inc93:                                        ; preds = %for.end90
  %96 = load i32, i32* %i, align 4, !dbg !5278
  %inc94 = add nsw i32 %96, 1, !dbg !5278
  store i32 %inc94, i32* %i, align 4, !dbg !5278
  br label %for.cond, !dbg !5278, !llvm.loop !5301

for.end95:                                        ; preds = %for.cond
  %97 = load i8 (i32)*, i8 (i32)** @__glewUnmapBufferARB, align 8, !dbg !5302
  %call96 = call zeroext i8 %97(i32 34963), !dbg !5302
  br label %if.end100, !dbg !5302

if.else97:                                        ; preds = %if.then22
  %98 = load void (i32, i32*)*, void (i32, i32*)** @__glewDeleteBuffersARB, align 8, !dbg !5303
  %99 = load %struct.GPU_PBVH_Buffers*, %struct.GPU_PBVH_Buffers** %buffers, align 8, !dbg !5303
  %index_buf98 = getelementptr inbounds %struct.GPU_PBVH_Buffers, %struct.GPU_PBVH_Buffers* %99, i32 0, i32 1, !dbg !5303
  call void %98(i32 1, i32* %index_buf98), !dbg !5303
  %100 = load %struct.GPU_PBVH_Buffers*, %struct.GPU_PBVH_Buffers** %buffers, align 8, !dbg !5303
  %index_buf99 = getelementptr inbounds %struct.GPU_PBVH_Buffers, %struct.GPU_PBVH_Buffers* %100, i32 0, i32 1, !dbg !5303
  store i32 0, i32* %index_buf99, align 4, !dbg !5303
  br label %if.end100

if.end100:                                        ; preds = %if.else97, %for.end95
  br label %if.end189, !dbg !5305

if.else101:                                       ; preds = %if.then15
  %101 = load %struct.GPU_PBVH_Buffers*, %struct.GPU_PBVH_Buffers** %buffers, align 8, !dbg !5306
  %index_type102 = getelementptr inbounds %struct.GPU_PBVH_Buffers, %struct.GPU_PBVH_Buffers* %101, i32 0, i32 2, !dbg !5308
  store i32 5125, i32* %index_type102, align 8, !dbg !5309
  call void @llvm.dbg.declare(metadata i32** %tri_data103, metadata !5310, metadata !DIExpression()), !dbg !5312
  call void @llvm.dbg.declare(metadata i32* %offset104, metadata !5313, metadata !DIExpression()), !dbg !5312
  store i32 0, i32* %offset104, align 4, !dbg !5312
  call void @llvm.dbg.declare(metadata i32* %i105, metadata !5314, metadata !DIExpression()), !dbg !5312
  call void @llvm.dbg.declare(metadata i32* %j106, metadata !5315, metadata !DIExpression()), !dbg !5312
  call void @llvm.dbg.declare(metadata i32* %k107, metadata !5316, metadata !DIExpression()), !dbg !5312
  %102 = load void (i32, i64, i8*, i32)*, void (i32, i64, i8*, i32)** @__glewBufferDataARB, align 8, !dbg !5312
  %103 = load i32, i32* %totquad, align 4, !dbg !5312
  %conv108 = sext i32 %103 to i64, !dbg !5312
  %mul109 = mul i64 4, %conv108, !dbg !5312
  %mul110 = mul i64 %mul109, 6, !dbg !5312
  call void %102(i32 34963, i64 %mul110, i8* null, i32 35044), !dbg !5312
  %104 = load i8* (i32, i32)*, i8* (i32, i32)** @__glewMapBufferARB, align 8, !dbg !5312
  %call111 = call i8* %104(i32 34963, i32 35001), !dbg !5312
  %105 = bitcast i8* %call111 to i32*, !dbg !5312
  store i32* %105, i32** %tri_data103, align 8, !dbg !5312
  %106 = load i32*, i32** %tri_data103, align 8, !dbg !5317
  %tobool112 = icmp ne i32* %106, null, !dbg !5317
  br i1 %tobool112, label %if.then113, label %if.else185, !dbg !5312

if.then113:                                       ; preds = %if.else101
  store i32 0, i32* %i105, align 4, !dbg !5319
  br label %for.cond114, !dbg !5319

for.cond114:                                      ; preds = %for.inc181, %if.then113
  %107 = load i32, i32* %i105, align 4, !dbg !5322
  %108 = load i32, i32* %totgrid.addr, align 4, !dbg !5322
  %cmp115 = icmp slt i32 %107, %108, !dbg !5322
  br i1 %cmp115, label %for.body117, label %for.end183, !dbg !5319

for.body117:                                      ; preds = %for.cond114
  call void @llvm.dbg.declare(metadata i32** %gh118, metadata !5324, metadata !DIExpression()), !dbg !5326
  store i32* null, i32** %gh118, align 8, !dbg !5326
  %109 = load i32**, i32*** %grid_hidden.addr, align 8, !dbg !5327
  %tobool119 = icmp ne i32** %109, null, !dbg !5327
  br i1 %tobool119, label %if.then120, label %if.end125, !dbg !5326

if.then120:                                       ; preds = %for.body117
  %110 = load i32**, i32*** %grid_hidden.addr, align 8, !dbg !5327
  %111 = load i32*, i32** %grid_indices.addr, align 8, !dbg !5327
  %112 = load i32, i32* %i105, align 4, !dbg !5327
  %idxprom121 = sext i32 %112 to i64, !dbg !5327
  %arrayidx122 = getelementptr inbounds i32, i32* %111, i64 %idxprom121, !dbg !5327
  %113 = load i32, i32* %arrayidx122, align 4, !dbg !5327
  %idxprom123 = sext i32 %113 to i64, !dbg !5327
  %arrayidx124 = getelementptr inbounds i32*, i32** %110, i64 %idxprom123, !dbg !5327
  %114 = load i32*, i32** %arrayidx124, align 8, !dbg !5327
  store i32* %114, i32** %gh118, align 8, !dbg !5327
  br label %if.end125, !dbg !5327

if.end125:                                        ; preds = %if.then120, %for.body117
  store i32 0, i32* %j106, align 4, !dbg !5329
  br label %for.cond126, !dbg !5329

for.cond126:                                      ; preds = %for.inc176, %if.end125
  %115 = load i32, i32* %j106, align 4, !dbg !5331
  %116 = load i32, i32* %gridsize.addr, align 4, !dbg !5331
  %sub127 = sub nsw i32 %116, 1, !dbg !5331
  %cmp128 = icmp slt i32 %115, %sub127, !dbg !5331
  br i1 %cmp128, label %for.body130, label %for.end178, !dbg !5329

for.body130:                                      ; preds = %for.cond126
  store i32 0, i32* %k107, align 4, !dbg !5333
  br label %for.cond131, !dbg !5333

for.cond131:                                      ; preds = %for.inc173, %for.body130
  %117 = load i32, i32* %k107, align 4, !dbg !5336
  %118 = load i32, i32* %gridsize.addr, align 4, !dbg !5336
  %sub132 = sub nsw i32 %118, 1, !dbg !5336
  %cmp133 = icmp slt i32 %117, %sub132, !dbg !5336
  br i1 %cmp133, label %for.body135, label %for.end175, !dbg !5333

for.body135:                                      ; preds = %for.cond131
  %119 = load i32*, i32** %gh118, align 8, !dbg !5338
  %tobool136 = icmp ne i32* %119, null, !dbg !5338
  br i1 %tobool136, label %land.lhs.true137, label %if.end142, !dbg !5338

land.lhs.true137:                                 ; preds = %for.body135
  %120 = load i32*, i32** %gh118, align 8, !dbg !5338
  %121 = load i32, i32* %gridsize.addr, align 4, !dbg !5338
  %122 = load i32, i32* %k107, align 4, !dbg !5338
  %123 = load i32, i32* %j106, align 4, !dbg !5338
  %call138 = call zeroext i8 @paint_is_grid_face_hidden(i32* %120, i32 %121, i32 %122, i32 %123), !dbg !5338
  %conv139 = zext i8 %call138 to i32, !dbg !5338
  %tobool140 = icmp ne i32 %conv139, 0, !dbg !5338
  br i1 %tobool140, label %if.then141, label %if.end142, !dbg !5341

if.then141:                                       ; preds = %land.lhs.true137
  br label %for.inc173, !dbg !5338

if.end142:                                        ; preds = %land.lhs.true137, %for.body135
  %124 = load i32, i32* %offset104, align 4, !dbg !5341
  %125 = load i32, i32* %j106, align 4, !dbg !5341
  %126 = load i32, i32* %gridsize.addr, align 4, !dbg !5341
  %mul143 = mul nsw i32 %125, %126, !dbg !5341
  %add144 = add nsw i32 %124, %mul143, !dbg !5341
  %127 = load i32, i32* %k107, align 4, !dbg !5341
  %add145 = add nsw i32 %add144, %127, !dbg !5341
  %add146 = add nsw i32 %add145, 1, !dbg !5341
  %128 = load i32*, i32** %tri_data103, align 8, !dbg !5341
  %incdec.ptr147 = getelementptr inbounds i32, i32* %128, i32 1, !dbg !5341
  store i32* %incdec.ptr147, i32** %tri_data103, align 8, !dbg !5341
  store i32 %add146, i32* %128, align 4, !dbg !5341
  %129 = load i32, i32* %offset104, align 4, !dbg !5341
  %130 = load i32, i32* %j106, align 4, !dbg !5341
  %131 = load i32, i32* %gridsize.addr, align 4, !dbg !5341
  %mul148 = mul nsw i32 %130, %131, !dbg !5341
  %add149 = add nsw i32 %129, %mul148, !dbg !5341
  %132 = load i32, i32* %k107, align 4, !dbg !5341
  %add150 = add nsw i32 %add149, %132, !dbg !5341
  %133 = load i32*, i32** %tri_data103, align 8, !dbg !5341
  %incdec.ptr151 = getelementptr inbounds i32, i32* %133, i32 1, !dbg !5341
  store i32* %incdec.ptr151, i32** %tri_data103, align 8, !dbg !5341
  store i32 %add150, i32* %133, align 4, !dbg !5341
  %134 = load i32, i32* %offset104, align 4, !dbg !5341
  %135 = load i32, i32* %j106, align 4, !dbg !5341
  %add152 = add nsw i32 %135, 1, !dbg !5341
  %136 = load i32, i32* %gridsize.addr, align 4, !dbg !5341
  %mul153 = mul nsw i32 %add152, %136, !dbg !5341
  %add154 = add nsw i32 %134, %mul153, !dbg !5341
  %137 = load i32, i32* %k107, align 4, !dbg !5341
  %add155 = add nsw i32 %add154, %137, !dbg !5341
  %138 = load i32*, i32** %tri_data103, align 8, !dbg !5341
  %incdec.ptr156 = getelementptr inbounds i32, i32* %138, i32 1, !dbg !5341
  store i32* %incdec.ptr156, i32** %tri_data103, align 8, !dbg !5341
  store i32 %add155, i32* %138, align 4, !dbg !5341
  %139 = load i32, i32* %offset104, align 4, !dbg !5341
  %140 = load i32, i32* %j106, align 4, !dbg !5341
  %add157 = add nsw i32 %140, 1, !dbg !5341
  %141 = load i32, i32* %gridsize.addr, align 4, !dbg !5341
  %mul158 = mul nsw i32 %add157, %141, !dbg !5341
  %add159 = add nsw i32 %139, %mul158, !dbg !5341
  %142 = load i32, i32* %k107, align 4, !dbg !5341
  %add160 = add nsw i32 %add159, %142, !dbg !5341
  %add161 = add nsw i32 %add160, 1, !dbg !5341
  %143 = load i32*, i32** %tri_data103, align 8, !dbg !5341
  %incdec.ptr162 = getelementptr inbounds i32, i32* %143, i32 1, !dbg !5341
  store i32* %incdec.ptr162, i32** %tri_data103, align 8, !dbg !5341
  store i32 %add161, i32* %143, align 4, !dbg !5341
  %144 = load i32, i32* %offset104, align 4, !dbg !5341
  %145 = load i32, i32* %j106, align 4, !dbg !5341
  %146 = load i32, i32* %gridsize.addr, align 4, !dbg !5341
  %mul163 = mul nsw i32 %145, %146, !dbg !5341
  %add164 = add nsw i32 %144, %mul163, !dbg !5341
  %147 = load i32, i32* %k107, align 4, !dbg !5341
  %add165 = add nsw i32 %add164, %147, !dbg !5341
  %add166 = add nsw i32 %add165, 1, !dbg !5341
  %148 = load i32*, i32** %tri_data103, align 8, !dbg !5341
  %incdec.ptr167 = getelementptr inbounds i32, i32* %148, i32 1, !dbg !5341
  store i32* %incdec.ptr167, i32** %tri_data103, align 8, !dbg !5341
  store i32 %add166, i32* %148, align 4, !dbg !5341
  %149 = load i32, i32* %offset104, align 4, !dbg !5341
  %150 = load i32, i32* %j106, align 4, !dbg !5341
  %add168 = add nsw i32 %150, 1, !dbg !5341
  %151 = load i32, i32* %gridsize.addr, align 4, !dbg !5341
  %mul169 = mul nsw i32 %add168, %151, !dbg !5341
  %add170 = add nsw i32 %149, %mul169, !dbg !5341
  %152 = load i32, i32* %k107, align 4, !dbg !5341
  %add171 = add nsw i32 %add170, %152, !dbg !5341
  %153 = load i32*, i32** %tri_data103, align 8, !dbg !5341
  %incdec.ptr172 = getelementptr inbounds i32, i32* %153, i32 1, !dbg !5341
  store i32* %incdec.ptr172, i32** %tri_data103, align 8, !dbg !5341
  store i32 %add171, i32* %153, align 4, !dbg !5341
  br label %for.inc173, !dbg !5341

for.inc173:                                       ; preds = %if.end142, %if.then141
  %154 = load i32, i32* %k107, align 4, !dbg !5336
  %inc174 = add nsw i32 %154, 1, !dbg !5336
  store i32 %inc174, i32* %k107, align 4, !dbg !5336
  br label %for.cond131, !dbg !5336, !llvm.loop !5342

for.end175:                                       ; preds = %for.cond131
  br label %for.inc176, !dbg !5343

for.inc176:                                       ; preds = %for.end175
  %155 = load i32, i32* %j106, align 4, !dbg !5331
  %inc177 = add nsw i32 %155, 1, !dbg !5331
  store i32 %inc177, i32* %j106, align 4, !dbg !5331
  br label %for.cond126, !dbg !5331, !llvm.loop !5344

for.end178:                                       ; preds = %for.cond126
  %156 = load i32, i32* %gridsize.addr, align 4, !dbg !5326
  %157 = load i32, i32* %gridsize.addr, align 4, !dbg !5326
  %mul179 = mul nsw i32 %156, %157, !dbg !5326
  %158 = load i32, i32* %offset104, align 4, !dbg !5326
  %add180 = add nsw i32 %158, %mul179, !dbg !5326
  store i32 %add180, i32* %offset104, align 4, !dbg !5326
  br label %for.inc181, !dbg !5326

for.inc181:                                       ; preds = %for.end178
  %159 = load i32, i32* %i105, align 4, !dbg !5322
  %inc182 = add nsw i32 %159, 1, !dbg !5322
  store i32 %inc182, i32* %i105, align 4, !dbg !5322
  br label %for.cond114, !dbg !5322, !llvm.loop !5345

for.end183:                                       ; preds = %for.cond114
  %160 = load i8 (i32)*, i8 (i32)** @__glewUnmapBufferARB, align 8, !dbg !5346
  %call184 = call zeroext i8 %160(i32 34963), !dbg !5346
  br label %if.end188, !dbg !5346

if.else185:                                       ; preds = %if.else101
  %161 = load void (i32, i32*)*, void (i32, i32*)** @__glewDeleteBuffersARB, align 8, !dbg !5347
  %162 = load %struct.GPU_PBVH_Buffers*, %struct.GPU_PBVH_Buffers** %buffers, align 8, !dbg !5347
  %index_buf186 = getelementptr inbounds %struct.GPU_PBVH_Buffers, %struct.GPU_PBVH_Buffers* %162, i32 0, i32 1, !dbg !5347
  call void %161(i32 1, i32* %index_buf186), !dbg !5347
  %163 = load %struct.GPU_PBVH_Buffers*, %struct.GPU_PBVH_Buffers** %buffers, align 8, !dbg !5347
  %index_buf187 = getelementptr inbounds %struct.GPU_PBVH_Buffers, %struct.GPU_PBVH_Buffers* %163, i32 0, i32 1, !dbg !5347
  store i32 0, i32* %index_buf187, align 4, !dbg !5347
  br label %if.end188

if.end188:                                        ; preds = %if.else185, %for.end183
  br label %if.end189

if.end189:                                        ; preds = %if.end188, %if.end100
  %164 = load void (i32, i32)*, void (i32, i32)** @__glewBindBufferARB, align 8, !dbg !5349
  call void %164(i32 34963, i32 0), !dbg !5349
  br label %if.end190, !dbg !5350

if.end190:                                        ; preds = %if.end189, %if.then11
  %165 = load %struct.GPU_PBVH_Buffers*, %struct.GPU_PBVH_Buffers** %buffers, align 8, !dbg !5351
  %has_hidden191 = getelementptr inbounds %struct.GPU_PBVH_Buffers, %struct.GPU_PBVH_Buffers* %165, i32 0, i32 14, !dbg !5352
  store i32 1, i32* %has_hidden191, align 4, !dbg !5353
  br label %if.end192, !dbg !5354

if.end192:                                        ; preds = %if.end190, %land.lhs.true, %if.else
  br label %if.end193

if.end193:                                        ; preds = %if.end192, %if.then7
  %166 = load %struct.GPU_PBVH_Buffers*, %struct.GPU_PBVH_Buffers** %buffers, align 8, !dbg !5355
  %index_buf194 = getelementptr inbounds %struct.GPU_PBVH_Buffers, %struct.GPU_PBVH_Buffers* %166, i32 0, i32 1, !dbg !5357
  %167 = load i32, i32* %index_buf194, align 4, !dbg !5357
  %tobool195 = icmp ne i32 %167, 0, !dbg !5355
  br i1 %tobool195, label %if.then196, label %if.end197, !dbg !5358

if.then196:                                       ; preds = %if.end193
  %168 = load void (i32, i32*)*, void (i32, i32*)** @__glewGenBuffersARB, align 8, !dbg !5359
  %169 = load %struct.GPU_PBVH_Buffers*, %struct.GPU_PBVH_Buffers** %buffers, align 8, !dbg !5360
  %vert_buf = getelementptr inbounds %struct.GPU_PBVH_Buffers, %struct.GPU_PBVH_Buffers* %169, i32 0, i32 0, !dbg !5361
  call void %168(i32 1, i32* %vert_buf), !dbg !5359
  br label %if.end197, !dbg !5359

if.end197:                                        ; preds = %if.then196, %if.end193
  %170 = load %struct.GPU_PBVH_Buffers*, %struct.GPU_PBVH_Buffers** %buffers, align 8, !dbg !5362
  store %struct.GPU_PBVH_Buffers* %170, %struct.GPU_PBVH_Buffers** %retval, align 8, !dbg !5363
  br label %return, !dbg !5363

return:                                           ; preds = %if.end197, %if.then
  %171 = load %struct.GPU_PBVH_Buffers*, %struct.GPU_PBVH_Buffers** %retval, align 8, !dbg !5364
  ret %struct.GPU_PBVH_Buffers* %171, !dbg !5364
}

declare dso_local i32 @BKE_pbvh_count_grid_quads(i32**, i32*, i32, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @gpu_get_grid_buffer(i32 %gridsize, i32* %index_type, i32* %totquad) #0 !dbg !1340 {
entry:
  %retval = alloca i32, align 4
  %gridsize.addr = alloca i32, align 4
  %index_type.addr = alloca i32*, align 8
  %totquad.addr = alloca i32*, align 8
  %grid_hidden = alloca i32**, align 8
  %grid_indices = alloca i32*, align 8
  %totgrid = alloca i32, align 4
  %tri_data = alloca i16*, align 8
  %offset = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %gh = alloca i32*, align 8
  %tri_data87 = alloca i32*, align 8
  %offset88 = alloca i32, align 4
  %i89 = alloca i32, align 4
  %j90 = alloca i32, align 4
  %k91 = alloca i32, align 4
  %gh102 = alloca i32*, align 8
  store i32 %gridsize, i32* %gridsize.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %gridsize.addr, metadata !5365, metadata !DIExpression()), !dbg !5366
  store i32* %index_type, i32** %index_type.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %index_type.addr, metadata !5367, metadata !DIExpression()), !dbg !5368
  store i32* %totquad, i32** %totquad.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %totquad.addr, metadata !5369, metadata !DIExpression()), !dbg !5370
  call void @llvm.dbg.declare(metadata i32*** %grid_hidden, metadata !5371, metadata !DIExpression()), !dbg !5372
  store i32** null, i32*** %grid_hidden, align 8, !dbg !5372
  call void @llvm.dbg.declare(metadata i32** %grid_indices, metadata !5373, metadata !DIExpression()), !dbg !5374
  store i32* null, i32** %grid_indices, align 8, !dbg !5374
  call void @llvm.dbg.declare(metadata i32* %totgrid, metadata !5375, metadata !DIExpression()), !dbg !5376
  store i32 1, i32* %totgrid, align 4, !dbg !5376
  %call = call i32 @gpu_vbo_enabled(), !dbg !5377
  %tobool = icmp ne i32 %call, 0, !dbg !5377
  br i1 %tobool, label %if.end3, label %if.then, !dbg !5379

if.then:                                          ; preds = %entry
  %0 = load i32, i32* @gpu_get_grid_buffer.buffer, align 4, !dbg !5380
  %tobool1 = icmp ne i32 %0, 0, !dbg !5380
  br i1 %tobool1, label %if.then2, label %if.end, !dbg !5383

if.then2:                                         ; preds = %if.then
  %1 = load void (i32, i32*)*, void (i32, i32*)** @__glewDeleteBuffersARB, align 8, !dbg !5384
  call void %1(i32 1, i32* @gpu_get_grid_buffer.buffer), !dbg !5384
  br label %if.end, !dbg !5384

if.end:                                           ; preds = %if.then2, %if.then
  store i32 0, i32* %retval, align 4, !dbg !5385
  br label %return, !dbg !5385

if.end3:                                          ; preds = %entry
  %2 = load i32, i32* @gpu_get_grid_buffer.buffer, align 4, !dbg !5386
  %tobool4 = icmp ne i32 %2, 0, !dbg !5386
  br i1 %tobool4, label %land.lhs.true, label %if.end6, !dbg !5388

land.lhs.true:                                    ; preds = %if.end3
  %3 = load i32, i32* @gpu_get_grid_buffer.prev_gridsize, align 4, !dbg !5389
  %4 = load i32, i32* %gridsize.addr, align 4, !dbg !5390
  %cmp = icmp eq i32 %3, %4, !dbg !5391
  br i1 %cmp, label %if.then5, label %if.end6, !dbg !5392

if.then5:                                         ; preds = %land.lhs.true
  %5 = load i32, i32* @gpu_get_grid_buffer.prev_index_type, align 4, !dbg !5393
  %6 = load i32*, i32** %index_type.addr, align 8, !dbg !5395
  store i32 %5, i32* %6, align 4, !dbg !5396
  %7 = load i32, i32* @gpu_get_grid_buffer.prev_totquad, align 4, !dbg !5397
  %8 = load i32*, i32** %totquad.addr, align 8, !dbg !5398
  store i32 %7, i32* %8, align 4, !dbg !5399
  %9 = load i32, i32* @gpu_get_grid_buffer.buffer, align 4, !dbg !5400
  store i32 %9, i32* %retval, align 4, !dbg !5401
  br label %return, !dbg !5401

if.end6:                                          ; preds = %land.lhs.true, %if.end3
  %10 = load void (i32, i32*)*, void (i32, i32*)** @__glewGenBuffersARB, align 8, !dbg !5402
  call void %10(i32 1, i32* @gpu_get_grid_buffer.buffer), !dbg !5402
  %11 = load i32, i32* @gpu_get_grid_buffer.buffer, align 4, !dbg !5403
  %tobool7 = icmp ne i32 %11, 0, !dbg !5403
  br i1 %tobool7, label %if.then8, label %if.end172, !dbg !5405

if.then8:                                         ; preds = %if.end6
  %12 = load i32, i32* %gridsize.addr, align 4, !dbg !5406
  %sub = sub nsw i32 %12, 1, !dbg !5408
  %13 = load i32, i32* %gridsize.addr, align 4, !dbg !5409
  %sub9 = sub nsw i32 %13, 1, !dbg !5410
  %mul = mul nsw i32 %sub, %sub9, !dbg !5411
  %14 = load i32*, i32** %totquad.addr, align 8, !dbg !5412
  store i32 %mul, i32* %14, align 4, !dbg !5413
  %15 = load void (i32, i32)*, void (i32, i32)** @__glewBindBufferARB, align 8, !dbg !5414
  %16 = load i32, i32* @gpu_get_grid_buffer.buffer, align 4, !dbg !5415
  call void %15(i32 34963, i32 %16), !dbg !5414
  %17 = load i32, i32* %gridsize.addr, align 4, !dbg !5416
  %18 = load i32, i32* %gridsize.addr, align 4, !dbg !5418
  %mul10 = mul nsw i32 %17, %18, !dbg !5419
  %cmp11 = icmp slt i32 %mul10, 65535, !dbg !5420
  br i1 %cmp11, label %if.then12, label %if.else86, !dbg !5421

if.then12:                                        ; preds = %if.then8
  %19 = load i32*, i32** %index_type.addr, align 8, !dbg !5422
  store i32 5123, i32* %19, align 4, !dbg !5424
  call void @llvm.dbg.declare(metadata i16** %tri_data, metadata !5425, metadata !DIExpression()), !dbg !5427
  call void @llvm.dbg.declare(metadata i32* %offset, metadata !5428, metadata !DIExpression()), !dbg !5427
  store i32 0, i32* %offset, align 4, !dbg !5427
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5429, metadata !DIExpression()), !dbg !5427
  call void @llvm.dbg.declare(metadata i32* %j, metadata !5430, metadata !DIExpression()), !dbg !5427
  call void @llvm.dbg.declare(metadata i32* %k, metadata !5431, metadata !DIExpression()), !dbg !5427
  %20 = load void (i32, i64, i8*, i32)*, void (i32, i64, i8*, i32)** @__glewBufferDataARB, align 8, !dbg !5427
  %21 = load i32*, i32** %totquad.addr, align 8, !dbg !5427
  %22 = load i32, i32* %21, align 4, !dbg !5427
  %conv = zext i32 %22 to i64, !dbg !5427
  %mul13 = mul i64 2, %conv, !dbg !5427
  %mul14 = mul i64 %mul13, 6, !dbg !5427
  call void %20(i32 34963, i64 %mul14, i8* null, i32 35044), !dbg !5427
  %23 = load i8* (i32, i32)*, i8* (i32, i32)** @__glewMapBufferARB, align 8, !dbg !5427
  %call15 = call i8* %23(i32 34963, i32 35001), !dbg !5427
  %24 = bitcast i8* %call15 to i16*, !dbg !5427
  store i16* %24, i16** %tri_data, align 8, !dbg !5427
  %25 = load i16*, i16** %tri_data, align 8, !dbg !5432
  %tobool16 = icmp ne i16* %25, null, !dbg !5432
  br i1 %tobool16, label %if.then17, label %if.else, !dbg !5427

if.then17:                                        ; preds = %if.then12
  store i32 0, i32* %i, align 4, !dbg !5434
  br label %for.cond, !dbg !5434

for.cond:                                         ; preds = %for.inc81, %if.then17
  %26 = load i32, i32* %i, align 4, !dbg !5437
  %27 = load i32, i32* %totgrid, align 4, !dbg !5437
  %cmp18 = icmp slt i32 %26, %27, !dbg !5437
  br i1 %cmp18, label %for.body, label %for.end83, !dbg !5434

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32** %gh, metadata !5439, metadata !DIExpression()), !dbg !5441
  store i32* null, i32** %gh, align 8, !dbg !5441
  %28 = load i32**, i32*** %grid_hidden, align 8, !dbg !5442
  %tobool20 = icmp ne i32** %28, null, !dbg !5442
  br i1 %tobool20, label %if.then21, label %if.end24, !dbg !5441

if.then21:                                        ; preds = %for.body
  %29 = load i32**, i32*** %grid_hidden, align 8, !dbg !5442
  %30 = load i32*, i32** %grid_indices, align 8, !dbg !5442
  %31 = load i32, i32* %i, align 4, !dbg !5442
  %idxprom = sext i32 %31 to i64, !dbg !5442
  %arrayidx = getelementptr inbounds i32, i32* %30, i64 %idxprom, !dbg !5442
  %32 = load i32, i32* %arrayidx, align 4, !dbg !5442
  %idxprom22 = sext i32 %32 to i64, !dbg !5442
  %arrayidx23 = getelementptr inbounds i32*, i32** %29, i64 %idxprom22, !dbg !5442
  %33 = load i32*, i32** %arrayidx23, align 8, !dbg !5442
  store i32* %33, i32** %gh, align 8, !dbg !5442
  br label %if.end24, !dbg !5442

if.end24:                                         ; preds = %if.then21, %for.body
  store i32 0, i32* %j, align 4, !dbg !5444
  br label %for.cond25, !dbg !5444

for.cond25:                                       ; preds = %for.inc76, %if.end24
  %34 = load i32, i32* %j, align 4, !dbg !5446
  %35 = load i32, i32* %gridsize.addr, align 4, !dbg !5446
  %sub26 = sub nsw i32 %35, 1, !dbg !5446
  %cmp27 = icmp slt i32 %34, %sub26, !dbg !5446
  br i1 %cmp27, label %for.body29, label %for.end78, !dbg !5444

for.body29:                                       ; preds = %for.cond25
  store i32 0, i32* %k, align 4, !dbg !5448
  br label %for.cond30, !dbg !5448

for.cond30:                                       ; preds = %for.inc, %for.body29
  %36 = load i32, i32* %k, align 4, !dbg !5451
  %37 = load i32, i32* %gridsize.addr, align 4, !dbg !5451
  %sub31 = sub nsw i32 %37, 1, !dbg !5451
  %cmp32 = icmp slt i32 %36, %sub31, !dbg !5451
  br i1 %cmp32, label %for.body34, label %for.end, !dbg !5448

for.body34:                                       ; preds = %for.cond30
  %38 = load i32*, i32** %gh, align 8, !dbg !5453
  %tobool35 = icmp ne i32* %38, null, !dbg !5453
  br i1 %tobool35, label %land.lhs.true36, label %if.end41, !dbg !5453

land.lhs.true36:                                  ; preds = %for.body34
  %39 = load i32*, i32** %gh, align 8, !dbg !5453
  %40 = load i32, i32* %gridsize.addr, align 4, !dbg !5453
  %41 = load i32, i32* %k, align 4, !dbg !5453
  %42 = load i32, i32* %j, align 4, !dbg !5453
  %call37 = call zeroext i8 @paint_is_grid_face_hidden(i32* %39, i32 %40, i32 %41, i32 %42), !dbg !5453
  %conv38 = zext i8 %call37 to i32, !dbg !5453
  %tobool39 = icmp ne i32 %conv38, 0, !dbg !5453
  br i1 %tobool39, label %if.then40, label %if.end41, !dbg !5456

if.then40:                                        ; preds = %land.lhs.true36
  br label %for.inc, !dbg !5453

if.end41:                                         ; preds = %land.lhs.true36, %for.body34
  %43 = load i32, i32* %offset, align 4, !dbg !5456
  %44 = load i32, i32* %j, align 4, !dbg !5456
  %45 = load i32, i32* %gridsize.addr, align 4, !dbg !5456
  %mul42 = mul nsw i32 %44, %45, !dbg !5456
  %add = add nsw i32 %43, %mul42, !dbg !5456
  %46 = load i32, i32* %k, align 4, !dbg !5456
  %add43 = add nsw i32 %add, %46, !dbg !5456
  %add44 = add nsw i32 %add43, 1, !dbg !5456
  %conv45 = trunc i32 %add44 to i16, !dbg !5456
  %47 = load i16*, i16** %tri_data, align 8, !dbg !5456
  %incdec.ptr = getelementptr inbounds i16, i16* %47, i32 1, !dbg !5456
  store i16* %incdec.ptr, i16** %tri_data, align 8, !dbg !5456
  store i16 %conv45, i16* %47, align 2, !dbg !5456
  %48 = load i32, i32* %offset, align 4, !dbg !5456
  %49 = load i32, i32* %j, align 4, !dbg !5456
  %50 = load i32, i32* %gridsize.addr, align 4, !dbg !5456
  %mul46 = mul nsw i32 %49, %50, !dbg !5456
  %add47 = add nsw i32 %48, %mul46, !dbg !5456
  %51 = load i32, i32* %k, align 4, !dbg !5456
  %add48 = add nsw i32 %add47, %51, !dbg !5456
  %conv49 = trunc i32 %add48 to i16, !dbg !5456
  %52 = load i16*, i16** %tri_data, align 8, !dbg !5456
  %incdec.ptr50 = getelementptr inbounds i16, i16* %52, i32 1, !dbg !5456
  store i16* %incdec.ptr50, i16** %tri_data, align 8, !dbg !5456
  store i16 %conv49, i16* %52, align 2, !dbg !5456
  %53 = load i32, i32* %offset, align 4, !dbg !5456
  %54 = load i32, i32* %j, align 4, !dbg !5456
  %add51 = add nsw i32 %54, 1, !dbg !5456
  %55 = load i32, i32* %gridsize.addr, align 4, !dbg !5456
  %mul52 = mul nsw i32 %add51, %55, !dbg !5456
  %add53 = add nsw i32 %53, %mul52, !dbg !5456
  %56 = load i32, i32* %k, align 4, !dbg !5456
  %add54 = add nsw i32 %add53, %56, !dbg !5456
  %conv55 = trunc i32 %add54 to i16, !dbg !5456
  %57 = load i16*, i16** %tri_data, align 8, !dbg !5456
  %incdec.ptr56 = getelementptr inbounds i16, i16* %57, i32 1, !dbg !5456
  store i16* %incdec.ptr56, i16** %tri_data, align 8, !dbg !5456
  store i16 %conv55, i16* %57, align 2, !dbg !5456
  %58 = load i32, i32* %offset, align 4, !dbg !5456
  %59 = load i32, i32* %j, align 4, !dbg !5456
  %add57 = add nsw i32 %59, 1, !dbg !5456
  %60 = load i32, i32* %gridsize.addr, align 4, !dbg !5456
  %mul58 = mul nsw i32 %add57, %60, !dbg !5456
  %add59 = add nsw i32 %58, %mul58, !dbg !5456
  %61 = load i32, i32* %k, align 4, !dbg !5456
  %add60 = add nsw i32 %add59, %61, !dbg !5456
  %add61 = add nsw i32 %add60, 1, !dbg !5456
  %conv62 = trunc i32 %add61 to i16, !dbg !5456
  %62 = load i16*, i16** %tri_data, align 8, !dbg !5456
  %incdec.ptr63 = getelementptr inbounds i16, i16* %62, i32 1, !dbg !5456
  store i16* %incdec.ptr63, i16** %tri_data, align 8, !dbg !5456
  store i16 %conv62, i16* %62, align 2, !dbg !5456
  %63 = load i32, i32* %offset, align 4, !dbg !5456
  %64 = load i32, i32* %j, align 4, !dbg !5456
  %65 = load i32, i32* %gridsize.addr, align 4, !dbg !5456
  %mul64 = mul nsw i32 %64, %65, !dbg !5456
  %add65 = add nsw i32 %63, %mul64, !dbg !5456
  %66 = load i32, i32* %k, align 4, !dbg !5456
  %add66 = add nsw i32 %add65, %66, !dbg !5456
  %add67 = add nsw i32 %add66, 1, !dbg !5456
  %conv68 = trunc i32 %add67 to i16, !dbg !5456
  %67 = load i16*, i16** %tri_data, align 8, !dbg !5456
  %incdec.ptr69 = getelementptr inbounds i16, i16* %67, i32 1, !dbg !5456
  store i16* %incdec.ptr69, i16** %tri_data, align 8, !dbg !5456
  store i16 %conv68, i16* %67, align 2, !dbg !5456
  %68 = load i32, i32* %offset, align 4, !dbg !5456
  %69 = load i32, i32* %j, align 4, !dbg !5456
  %add70 = add nsw i32 %69, 1, !dbg !5456
  %70 = load i32, i32* %gridsize.addr, align 4, !dbg !5456
  %mul71 = mul nsw i32 %add70, %70, !dbg !5456
  %add72 = add nsw i32 %68, %mul71, !dbg !5456
  %71 = load i32, i32* %k, align 4, !dbg !5456
  %add73 = add nsw i32 %add72, %71, !dbg !5456
  %conv74 = trunc i32 %add73 to i16, !dbg !5456
  %72 = load i16*, i16** %tri_data, align 8, !dbg !5456
  %incdec.ptr75 = getelementptr inbounds i16, i16* %72, i32 1, !dbg !5456
  store i16* %incdec.ptr75, i16** %tri_data, align 8, !dbg !5456
  store i16 %conv74, i16* %72, align 2, !dbg !5456
  br label %for.inc, !dbg !5456

for.inc:                                          ; preds = %if.end41, %if.then40
  %73 = load i32, i32* %k, align 4, !dbg !5451
  %inc = add nsw i32 %73, 1, !dbg !5451
  store i32 %inc, i32* %k, align 4, !dbg !5451
  br label %for.cond30, !dbg !5451, !llvm.loop !5457

for.end:                                          ; preds = %for.cond30
  br label %for.inc76, !dbg !5458

for.inc76:                                        ; preds = %for.end
  %74 = load i32, i32* %j, align 4, !dbg !5446
  %inc77 = add nsw i32 %74, 1, !dbg !5446
  store i32 %inc77, i32* %j, align 4, !dbg !5446
  br label %for.cond25, !dbg !5446, !llvm.loop !5459

for.end78:                                        ; preds = %for.cond25
  %75 = load i32, i32* %gridsize.addr, align 4, !dbg !5441
  %76 = load i32, i32* %gridsize.addr, align 4, !dbg !5441
  %mul79 = mul nsw i32 %75, %76, !dbg !5441
  %77 = load i32, i32* %offset, align 4, !dbg !5441
  %add80 = add nsw i32 %77, %mul79, !dbg !5441
  store i32 %add80, i32* %offset, align 4, !dbg !5441
  br label %for.inc81, !dbg !5441

for.inc81:                                        ; preds = %for.end78
  %78 = load i32, i32* %i, align 4, !dbg !5437
  %inc82 = add nsw i32 %78, 1, !dbg !5437
  store i32 %inc82, i32* %i, align 4, !dbg !5437
  br label %for.cond, !dbg !5437, !llvm.loop !5460

for.end83:                                        ; preds = %for.cond
  %79 = load i8 (i32)*, i8 (i32)** @__glewUnmapBufferARB, align 8, !dbg !5461
  %call84 = call zeroext i8 %79(i32 34963), !dbg !5461
  br label %if.end85, !dbg !5461

if.else:                                          ; preds = %if.then12
  %80 = load void (i32, i32*)*, void (i32, i32*)** @__glewDeleteBuffersARB, align 8, !dbg !5462
  call void %80(i32 1, i32* @gpu_get_grid_buffer.buffer), !dbg !5462
  store i32 0, i32* @gpu_get_grid_buffer.buffer, align 4, !dbg !5462
  br label %if.end85

if.end85:                                         ; preds = %if.else, %for.end83
  br label %if.end171, !dbg !5464

if.else86:                                        ; preds = %if.then8
  %81 = load i32*, i32** %index_type.addr, align 8, !dbg !5465
  store i32 5125, i32* %81, align 4, !dbg !5467
  call void @llvm.dbg.declare(metadata i32** %tri_data87, metadata !5468, metadata !DIExpression()), !dbg !5470
  call void @llvm.dbg.declare(metadata i32* %offset88, metadata !5471, metadata !DIExpression()), !dbg !5470
  store i32 0, i32* %offset88, align 4, !dbg !5470
  call void @llvm.dbg.declare(metadata i32* %i89, metadata !5472, metadata !DIExpression()), !dbg !5470
  call void @llvm.dbg.declare(metadata i32* %j90, metadata !5473, metadata !DIExpression()), !dbg !5470
  call void @llvm.dbg.declare(metadata i32* %k91, metadata !5474, metadata !DIExpression()), !dbg !5470
  %82 = load void (i32, i64, i8*, i32)*, void (i32, i64, i8*, i32)** @__glewBufferDataARB, align 8, !dbg !5470
  %83 = load i32*, i32** %totquad.addr, align 8, !dbg !5470
  %84 = load i32, i32* %83, align 4, !dbg !5470
  %conv92 = zext i32 %84 to i64, !dbg !5470
  %mul93 = mul i64 4, %conv92, !dbg !5470
  %mul94 = mul i64 %mul93, 6, !dbg !5470
  call void %82(i32 34963, i64 %mul94, i8* null, i32 35044), !dbg !5470
  %85 = load i8* (i32, i32)*, i8* (i32, i32)** @__glewMapBufferARB, align 8, !dbg !5470
  %call95 = call i8* %85(i32 34963, i32 35001), !dbg !5470
  %86 = bitcast i8* %call95 to i32*, !dbg !5470
  store i32* %86, i32** %tri_data87, align 8, !dbg !5470
  %87 = load i32*, i32** %tri_data87, align 8, !dbg !5475
  %tobool96 = icmp ne i32* %87, null, !dbg !5475
  br i1 %tobool96, label %if.then97, label %if.else169, !dbg !5470

if.then97:                                        ; preds = %if.else86
  store i32 0, i32* %i89, align 4, !dbg !5477
  br label %for.cond98, !dbg !5477

for.cond98:                                       ; preds = %for.inc165, %if.then97
  %88 = load i32, i32* %i89, align 4, !dbg !5480
  %89 = load i32, i32* %totgrid, align 4, !dbg !5480
  %cmp99 = icmp slt i32 %88, %89, !dbg !5480
  br i1 %cmp99, label %for.body101, label %for.end167, !dbg !5477

for.body101:                                      ; preds = %for.cond98
  call void @llvm.dbg.declare(metadata i32** %gh102, metadata !5482, metadata !DIExpression()), !dbg !5484
  store i32* null, i32** %gh102, align 8, !dbg !5484
  %90 = load i32**, i32*** %grid_hidden, align 8, !dbg !5485
  %tobool103 = icmp ne i32** %90, null, !dbg !5485
  br i1 %tobool103, label %if.then104, label %if.end109, !dbg !5484

if.then104:                                       ; preds = %for.body101
  %91 = load i32**, i32*** %grid_hidden, align 8, !dbg !5485
  %92 = load i32*, i32** %grid_indices, align 8, !dbg !5485
  %93 = load i32, i32* %i89, align 4, !dbg !5485
  %idxprom105 = sext i32 %93 to i64, !dbg !5485
  %arrayidx106 = getelementptr inbounds i32, i32* %92, i64 %idxprom105, !dbg !5485
  %94 = load i32, i32* %arrayidx106, align 4, !dbg !5485
  %idxprom107 = sext i32 %94 to i64, !dbg !5485
  %arrayidx108 = getelementptr inbounds i32*, i32** %91, i64 %idxprom107, !dbg !5485
  %95 = load i32*, i32** %arrayidx108, align 8, !dbg !5485
  store i32* %95, i32** %gh102, align 8, !dbg !5485
  br label %if.end109, !dbg !5485

if.end109:                                        ; preds = %if.then104, %for.body101
  store i32 0, i32* %j90, align 4, !dbg !5487
  br label %for.cond110, !dbg !5487

for.cond110:                                      ; preds = %for.inc160, %if.end109
  %96 = load i32, i32* %j90, align 4, !dbg !5489
  %97 = load i32, i32* %gridsize.addr, align 4, !dbg !5489
  %sub111 = sub nsw i32 %97, 1, !dbg !5489
  %cmp112 = icmp slt i32 %96, %sub111, !dbg !5489
  br i1 %cmp112, label %for.body114, label %for.end162, !dbg !5487

for.body114:                                      ; preds = %for.cond110
  store i32 0, i32* %k91, align 4, !dbg !5491
  br label %for.cond115, !dbg !5491

for.cond115:                                      ; preds = %for.inc157, %for.body114
  %98 = load i32, i32* %k91, align 4, !dbg !5494
  %99 = load i32, i32* %gridsize.addr, align 4, !dbg !5494
  %sub116 = sub nsw i32 %99, 1, !dbg !5494
  %cmp117 = icmp slt i32 %98, %sub116, !dbg !5494
  br i1 %cmp117, label %for.body119, label %for.end159, !dbg !5491

for.body119:                                      ; preds = %for.cond115
  %100 = load i32*, i32** %gh102, align 8, !dbg !5496
  %tobool120 = icmp ne i32* %100, null, !dbg !5496
  br i1 %tobool120, label %land.lhs.true121, label %if.end126, !dbg !5496

land.lhs.true121:                                 ; preds = %for.body119
  %101 = load i32*, i32** %gh102, align 8, !dbg !5496
  %102 = load i32, i32* %gridsize.addr, align 4, !dbg !5496
  %103 = load i32, i32* %k91, align 4, !dbg !5496
  %104 = load i32, i32* %j90, align 4, !dbg !5496
  %call122 = call zeroext i8 @paint_is_grid_face_hidden(i32* %101, i32 %102, i32 %103, i32 %104), !dbg !5496
  %conv123 = zext i8 %call122 to i32, !dbg !5496
  %tobool124 = icmp ne i32 %conv123, 0, !dbg !5496
  br i1 %tobool124, label %if.then125, label %if.end126, !dbg !5499

if.then125:                                       ; preds = %land.lhs.true121
  br label %for.inc157, !dbg !5496

if.end126:                                        ; preds = %land.lhs.true121, %for.body119
  %105 = load i32, i32* %offset88, align 4, !dbg !5499
  %106 = load i32, i32* %j90, align 4, !dbg !5499
  %107 = load i32, i32* %gridsize.addr, align 4, !dbg !5499
  %mul127 = mul nsw i32 %106, %107, !dbg !5499
  %add128 = add nsw i32 %105, %mul127, !dbg !5499
  %108 = load i32, i32* %k91, align 4, !dbg !5499
  %add129 = add nsw i32 %add128, %108, !dbg !5499
  %add130 = add nsw i32 %add129, 1, !dbg !5499
  %109 = load i32*, i32** %tri_data87, align 8, !dbg !5499
  %incdec.ptr131 = getelementptr inbounds i32, i32* %109, i32 1, !dbg !5499
  store i32* %incdec.ptr131, i32** %tri_data87, align 8, !dbg !5499
  store i32 %add130, i32* %109, align 4, !dbg !5499
  %110 = load i32, i32* %offset88, align 4, !dbg !5499
  %111 = load i32, i32* %j90, align 4, !dbg !5499
  %112 = load i32, i32* %gridsize.addr, align 4, !dbg !5499
  %mul132 = mul nsw i32 %111, %112, !dbg !5499
  %add133 = add nsw i32 %110, %mul132, !dbg !5499
  %113 = load i32, i32* %k91, align 4, !dbg !5499
  %add134 = add nsw i32 %add133, %113, !dbg !5499
  %114 = load i32*, i32** %tri_data87, align 8, !dbg !5499
  %incdec.ptr135 = getelementptr inbounds i32, i32* %114, i32 1, !dbg !5499
  store i32* %incdec.ptr135, i32** %tri_data87, align 8, !dbg !5499
  store i32 %add134, i32* %114, align 4, !dbg !5499
  %115 = load i32, i32* %offset88, align 4, !dbg !5499
  %116 = load i32, i32* %j90, align 4, !dbg !5499
  %add136 = add nsw i32 %116, 1, !dbg !5499
  %117 = load i32, i32* %gridsize.addr, align 4, !dbg !5499
  %mul137 = mul nsw i32 %add136, %117, !dbg !5499
  %add138 = add nsw i32 %115, %mul137, !dbg !5499
  %118 = load i32, i32* %k91, align 4, !dbg !5499
  %add139 = add nsw i32 %add138, %118, !dbg !5499
  %119 = load i32*, i32** %tri_data87, align 8, !dbg !5499
  %incdec.ptr140 = getelementptr inbounds i32, i32* %119, i32 1, !dbg !5499
  store i32* %incdec.ptr140, i32** %tri_data87, align 8, !dbg !5499
  store i32 %add139, i32* %119, align 4, !dbg !5499
  %120 = load i32, i32* %offset88, align 4, !dbg !5499
  %121 = load i32, i32* %j90, align 4, !dbg !5499
  %add141 = add nsw i32 %121, 1, !dbg !5499
  %122 = load i32, i32* %gridsize.addr, align 4, !dbg !5499
  %mul142 = mul nsw i32 %add141, %122, !dbg !5499
  %add143 = add nsw i32 %120, %mul142, !dbg !5499
  %123 = load i32, i32* %k91, align 4, !dbg !5499
  %add144 = add nsw i32 %add143, %123, !dbg !5499
  %add145 = add nsw i32 %add144, 1, !dbg !5499
  %124 = load i32*, i32** %tri_data87, align 8, !dbg !5499
  %incdec.ptr146 = getelementptr inbounds i32, i32* %124, i32 1, !dbg !5499
  store i32* %incdec.ptr146, i32** %tri_data87, align 8, !dbg !5499
  store i32 %add145, i32* %124, align 4, !dbg !5499
  %125 = load i32, i32* %offset88, align 4, !dbg !5499
  %126 = load i32, i32* %j90, align 4, !dbg !5499
  %127 = load i32, i32* %gridsize.addr, align 4, !dbg !5499
  %mul147 = mul nsw i32 %126, %127, !dbg !5499
  %add148 = add nsw i32 %125, %mul147, !dbg !5499
  %128 = load i32, i32* %k91, align 4, !dbg !5499
  %add149 = add nsw i32 %add148, %128, !dbg !5499
  %add150 = add nsw i32 %add149, 1, !dbg !5499
  %129 = load i32*, i32** %tri_data87, align 8, !dbg !5499
  %incdec.ptr151 = getelementptr inbounds i32, i32* %129, i32 1, !dbg !5499
  store i32* %incdec.ptr151, i32** %tri_data87, align 8, !dbg !5499
  store i32 %add150, i32* %129, align 4, !dbg !5499
  %130 = load i32, i32* %offset88, align 4, !dbg !5499
  %131 = load i32, i32* %j90, align 4, !dbg !5499
  %add152 = add nsw i32 %131, 1, !dbg !5499
  %132 = load i32, i32* %gridsize.addr, align 4, !dbg !5499
  %mul153 = mul nsw i32 %add152, %132, !dbg !5499
  %add154 = add nsw i32 %130, %mul153, !dbg !5499
  %133 = load i32, i32* %k91, align 4, !dbg !5499
  %add155 = add nsw i32 %add154, %133, !dbg !5499
  %134 = load i32*, i32** %tri_data87, align 8, !dbg !5499
  %incdec.ptr156 = getelementptr inbounds i32, i32* %134, i32 1, !dbg !5499
  store i32* %incdec.ptr156, i32** %tri_data87, align 8, !dbg !5499
  store i32 %add155, i32* %134, align 4, !dbg !5499
  br label %for.inc157, !dbg !5499

for.inc157:                                       ; preds = %if.end126, %if.then125
  %135 = load i32, i32* %k91, align 4, !dbg !5494
  %inc158 = add nsw i32 %135, 1, !dbg !5494
  store i32 %inc158, i32* %k91, align 4, !dbg !5494
  br label %for.cond115, !dbg !5494, !llvm.loop !5500

for.end159:                                       ; preds = %for.cond115
  br label %for.inc160, !dbg !5501

for.inc160:                                       ; preds = %for.end159
  %136 = load i32, i32* %j90, align 4, !dbg !5489
  %inc161 = add nsw i32 %136, 1, !dbg !5489
  store i32 %inc161, i32* %j90, align 4, !dbg !5489
  br label %for.cond110, !dbg !5489, !llvm.loop !5502

for.end162:                                       ; preds = %for.cond110
  %137 = load i32, i32* %gridsize.addr, align 4, !dbg !5484
  %138 = load i32, i32* %gridsize.addr, align 4, !dbg !5484
  %mul163 = mul nsw i32 %137, %138, !dbg !5484
  %139 = load i32, i32* %offset88, align 4, !dbg !5484
  %add164 = add nsw i32 %139, %mul163, !dbg !5484
  store i32 %add164, i32* %offset88, align 4, !dbg !5484
  br label %for.inc165, !dbg !5484

for.inc165:                                       ; preds = %for.end162
  %140 = load i32, i32* %i89, align 4, !dbg !5480
  %inc166 = add nsw i32 %140, 1, !dbg !5480
  store i32 %inc166, i32* %i89, align 4, !dbg !5480
  br label %for.cond98, !dbg !5480, !llvm.loop !5503

for.end167:                                       ; preds = %for.cond98
  %141 = load i8 (i32)*, i8 (i32)** @__glewUnmapBufferARB, align 8, !dbg !5504
  %call168 = call zeroext i8 %141(i32 34963), !dbg !5504
  br label %if.end170, !dbg !5504

if.else169:                                       ; preds = %if.else86
  %142 = load void (i32, i32*)*, void (i32, i32*)** @__glewDeleteBuffersARB, align 8, !dbg !5505
  call void %142(i32 1, i32* @gpu_get_grid_buffer.buffer), !dbg !5505
  store i32 0, i32* @gpu_get_grid_buffer.buffer, align 4, !dbg !5505
  br label %if.end170

if.end170:                                        ; preds = %if.else169, %for.end167
  br label %if.end171

if.end171:                                        ; preds = %if.end170, %if.end85
  %143 = load void (i32, i32)*, void (i32, i32)** @__glewBindBufferARB, align 8, !dbg !5507
  call void %143(i32 34963, i32 0), !dbg !5507
  br label %if.end172, !dbg !5508

if.end172:                                        ; preds = %if.end171, %if.end6
  %144 = load i32, i32* %gridsize.addr, align 4, !dbg !5509
  store i32 %144, i32* @gpu_get_grid_buffer.prev_gridsize, align 4, !dbg !5510
  %145 = load i32*, i32** %index_type.addr, align 8, !dbg !5511
  %146 = load i32, i32* %145, align 4, !dbg !5512
  store i32 %146, i32* @gpu_get_grid_buffer.prev_index_type, align 4, !dbg !5513
  %147 = load i32*, i32** %totquad.addr, align 8, !dbg !5514
  %148 = load i32, i32* %147, align 4, !dbg !5515
  store i32 %148, i32* @gpu_get_grid_buffer.prev_totquad, align 4, !dbg !5516
  %149 = load i32, i32* @gpu_get_grid_buffer.buffer, align 4, !dbg !5517
  store i32 %149, i32* %retval, align 4, !dbg !5518
  br label %return, !dbg !5518

return:                                           ; preds = %if.end172, %if.then5, %if.end
  %150 = load i32, i32* %retval, align 4, !dbg !5519
  ret i32 %150, !dbg !5519
}

declare dso_local zeroext i8 @paint_is_grid_face_hidden(i32*, i32, i32, i32) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @GPU_update_bmesh_pbvh_buffers(%struct.GPU_PBVH_Buffers* %buffers, %struct.BMesh* %bm, %struct.GSet* %bm_faces, %struct.GSet* %bm_unique_verts, %struct.GSet* %bm_other_verts, i8 zeroext %show_diffuse_color) #0 !dbg !5520 {
entry:
  %buffers.addr = alloca %struct.GPU_PBVH_Buffers*, align 8
  %bm.addr = alloca %struct.BMesh*, align 8
  %bm_faces.addr = alloca %struct.GSet*, align 8
  %bm_unique_verts.addr = alloca %struct.GSet*, align 8
  %bm_other_verts.addr = alloca %struct.GSet*, align 8
  %show_diffuse_color.addr = alloca i8, align 1
  %vert_data = alloca %struct.VertexBufferFormat*, align 8
  %tri_data = alloca i8*, align 8
  %tottri = alloca i32, align 4
  %totvert = alloca i32, align 4
  %maxvert = alloca i32, align 4
  %diffuse_color = alloca [4 x float], align 16
  %cd_vert_mask_offset = alloca i32, align 4
  %gs_iter = alloca %struct.GSetIterator, align 8
  %f = alloca %struct.BMFace*, align 8
  %v_index = alloca i32, align 4
  %gs_iter37 = alloca %struct.GSetIterator, align 8
  %gs_iter56 = alloca %struct.GSetIterator, align 8
  %f63 = alloca %struct.BMFace*, align 8
  %v = alloca [3 x %struct.BMVert*], align 16
  %fmask = alloca float, align 4
  %i = alloca i32, align 4
  %use_short = alloca i32, align 4
  %gs_iter116 = alloca %struct.GSetIterator, align 8
  %f123 = alloca %struct.BMFace*, align 8
  %l_iter = alloca %struct.BMLoop*, align 8
  %l_first = alloca %struct.BMLoop*, align 8
  %v130 = alloca %struct.BMVert*, align 8
  %elem = alloca i16*, align 8
  %elem138 = alloca i32*, align 8
  store %struct.GPU_PBVH_Buffers* %buffers, %struct.GPU_PBVH_Buffers** %buffers.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GPU_PBVH_Buffers** %buffers.addr, metadata !5679, metadata !DIExpression()), !dbg !5680
  store %struct.BMesh* %bm, %struct.BMesh** %bm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMesh** %bm.addr, metadata !5681, metadata !DIExpression()), !dbg !5682
  store %struct.GSet* %bm_faces, %struct.GSet** %bm_faces.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GSet** %bm_faces.addr, metadata !5683, metadata !DIExpression()), !dbg !5684
  store %struct.GSet* %bm_unique_verts, %struct.GSet** %bm_unique_verts.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GSet** %bm_unique_verts.addr, metadata !5685, metadata !DIExpression()), !dbg !5686
  store %struct.GSet* %bm_other_verts, %struct.GSet** %bm_other_verts.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GSet** %bm_other_verts.addr, metadata !5687, metadata !DIExpression()), !dbg !5688
  store i8 %show_diffuse_color, i8* %show_diffuse_color.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %show_diffuse_color.addr, metadata !5689, metadata !DIExpression()), !dbg !5690
  call void @llvm.dbg.declare(metadata %struct.VertexBufferFormat** %vert_data, metadata !5691, metadata !DIExpression()), !dbg !5692
  call void @llvm.dbg.declare(metadata i8** %tri_data, metadata !5693, metadata !DIExpression()), !dbg !5694
  call void @llvm.dbg.declare(metadata i32* %tottri, metadata !5695, metadata !DIExpression()), !dbg !5696
  call void @llvm.dbg.declare(metadata i32* %totvert, metadata !5697, metadata !DIExpression()), !dbg !5698
  call void @llvm.dbg.declare(metadata i32* %maxvert, metadata !5699, metadata !DIExpression()), !dbg !5700
  store i32 0, i32* %maxvert, align 4, !dbg !5700
  call void @llvm.dbg.declare(metadata [4 x float]* %diffuse_color, metadata !5701, metadata !DIExpression()), !dbg !5702
  %0 = bitcast [4 x float]* %diffuse_color to i8*, !dbg !5702
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %0, i8* align 16 bitcast ([4 x float]* @__const.GPU_update_bmesh_pbvh_buffers.diffuse_color to i8*), i64 16, i1 false), !dbg !5702
  call void @llvm.dbg.declare(metadata i32* %cd_vert_mask_offset, metadata !5703, metadata !DIExpression()), !dbg !5704
  %1 = load %struct.BMesh*, %struct.BMesh** %bm.addr, align 8, !dbg !5705
  %vdata = getelementptr inbounds %struct.BMesh, %struct.BMesh* %1, i32 0, i32 24, !dbg !5706
  %call = call i32 @CustomData_get_offset(%struct.CustomData* %vdata, i32 34), !dbg !5707
  store i32 %call, i32* %cd_vert_mask_offset, align 4, !dbg !5704
  %2 = load i8, i8* %show_diffuse_color.addr, align 1, !dbg !5708
  %3 = load %struct.GPU_PBVH_Buffers*, %struct.GPU_PBVH_Buffers** %buffers.addr, align 8, !dbg !5709
  %show_diffuse_color1 = getelementptr inbounds %struct.GPU_PBVH_Buffers, %struct.GPU_PBVH_Buffers* %3, i32 0, i32 19, !dbg !5710
  store i8 %2, i8* %show_diffuse_color1, align 8, !dbg !5711
  %call2 = call zeroext i8 @GPU_material_use_matcaps_get(), !dbg !5712
  %4 = load %struct.GPU_PBVH_Buffers*, %struct.GPU_PBVH_Buffers** %buffers.addr, align 8, !dbg !5713
  %use_matcaps = getelementptr inbounds %struct.GPU_PBVH_Buffers, %struct.GPU_PBVH_Buffers* %4, i32 0, i32 20, !dbg !5714
  store i8 %call2, i8* %use_matcaps, align 1, !dbg !5715
  %5 = load %struct.GPU_PBVH_Buffers*, %struct.GPU_PBVH_Buffers** %buffers.addr, align 8, !dbg !5716
  %vert_buf = getelementptr inbounds %struct.GPU_PBVH_Buffers, %struct.GPU_PBVH_Buffers* %5, i32 0, i32 0, !dbg !5718
  %6 = load i32, i32* %vert_buf, align 8, !dbg !5718
  %tobool = icmp ne i32 %6, 0, !dbg !5716
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !5719

lor.lhs.false:                                    ; preds = %entry
  %7 = load %struct.GPU_PBVH_Buffers*, %struct.GPU_PBVH_Buffers** %buffers.addr, align 8, !dbg !5720
  %smooth = getelementptr inbounds %struct.GPU_PBVH_Buffers, %struct.GPU_PBVH_Buffers* %7, i32 0, i32 18, !dbg !5721
  %8 = load i32, i32* %smooth, align 4, !dbg !5721
  %tobool3 = icmp ne i32 %8, 0, !dbg !5720
  br i1 %tobool3, label %land.lhs.true, label %if.end, !dbg !5722

land.lhs.true:                                    ; preds = %lor.lhs.false
  %9 = load %struct.GPU_PBVH_Buffers*, %struct.GPU_PBVH_Buffers** %buffers.addr, align 8, !dbg !5723
  %index_buf = getelementptr inbounds %struct.GPU_PBVH_Buffers, %struct.GPU_PBVH_Buffers* %9, i32 0, i32 1, !dbg !5724
  %10 = load i32, i32* %index_buf, align 4, !dbg !5724
  %tobool4 = icmp ne i32 %10, 0, !dbg !5723
  br i1 %tobool4, label %if.end, label %if.then, !dbg !5725

if.then:                                          ; preds = %land.lhs.true, %entry
  br label %if.end156, !dbg !5726

if.end:                                           ; preds = %land.lhs.true, %lor.lhs.false
  %11 = load %struct.GSet*, %struct.GSet** %bm_faces.addr, align 8, !dbg !5727
  %call5 = call i32 @gpu_bmesh_face_visible_count(%struct.GSet* %11), !dbg !5728
  store i32 %call5, i32* %tottri, align 4, !dbg !5729
  %12 = load %struct.GPU_PBVH_Buffers*, %struct.GPU_PBVH_Buffers** %buffers.addr, align 8, !dbg !5730
  %smooth6 = getelementptr inbounds %struct.GPU_PBVH_Buffers, %struct.GPU_PBVH_Buffers* %12, i32 0, i32 18, !dbg !5732
  %13 = load i32, i32* %smooth6, align 4, !dbg !5732
  %tobool7 = icmp ne i32 %13, 0, !dbg !5730
  br i1 %tobool7, label %if.then8, label %if.else, !dbg !5733

if.then8:                                         ; preds = %if.end
  %14 = load %struct.GSet*, %struct.GSet** %bm_unique_verts.addr, align 8, !dbg !5734
  %15 = load %struct.GSet*, %struct.GSet** %bm_other_verts.addr, align 8, !dbg !5736
  %call9 = call i32 @gpu_bmesh_vert_visible_count(%struct.GSet* %14, %struct.GSet* %15), !dbg !5737
  store i32 %call9, i32* %totvert, align 4, !dbg !5738
  br label %if.end10, !dbg !5739

if.else:                                          ; preds = %if.end
  %16 = load i32, i32* %tottri, align 4, !dbg !5740
  %mul = mul nsw i32 %16, 3, !dbg !5741
  store i32 %mul, i32* %totvert, align 4, !dbg !5742
  br label %if.end10

if.end10:                                         ; preds = %if.else, %if.then8
  %17 = load i32, i32* %tottri, align 4, !dbg !5743
  %tobool11 = icmp ne i32 %17, 0, !dbg !5743
  br i1 %tobool11, label %if.end13, label %if.then12, !dbg !5745

if.then12:                                        ; preds = %if.end10
  %18 = load %struct.GPU_PBVH_Buffers*, %struct.GPU_PBVH_Buffers** %buffers.addr, align 8, !dbg !5746
  %tot_tri = getelementptr inbounds %struct.GPU_PBVH_Buffers, %struct.GPU_PBVH_Buffers* %18, i32 0, i32 16, !dbg !5748
  store i32 0, i32* %tot_tri, align 4, !dbg !5749
  br label %if.end156, !dbg !5750

if.end13:                                         ; preds = %if.end10
  %19 = load %struct.GPU_PBVH_Buffers*, %struct.GPU_PBVH_Buffers** %buffers.addr, align 8, !dbg !5751
  %use_matcaps14 = getelementptr inbounds %struct.GPU_PBVH_Buffers, %struct.GPU_PBVH_Buffers* %19, i32 0, i32 20, !dbg !5753
  %20 = load i8, i8* %use_matcaps14, align 1, !dbg !5753
  %tobool15 = icmp ne i8 %20, 0, !dbg !5751
  br i1 %tobool15, label %if.then16, label %if.else19, !dbg !5754

if.then16:                                        ; preds = %if.end13
  %arrayidx = getelementptr inbounds [4 x float], [4 x float]* %diffuse_color, i64 0, i64 2, !dbg !5755
  store float 1.000000e+00, float* %arrayidx, align 8, !dbg !5756
  %arrayidx17 = getelementptr inbounds [4 x float], [4 x float]* %diffuse_color, i64 0, i64 1, !dbg !5757
  store float 1.000000e+00, float* %arrayidx17, align 4, !dbg !5758
  %arrayidx18 = getelementptr inbounds [4 x float], [4 x float]* %diffuse_color, i64 0, i64 0, !dbg !5759
  store float 1.000000e+00, float* %arrayidx18, align 16, !dbg !5760
  br label %if.end24, !dbg !5759

if.else19:                                        ; preds = %if.end13
  %21 = load i8, i8* %show_diffuse_color.addr, align 1, !dbg !5761
  %tobool20 = icmp ne i8 %21, 0, !dbg !5761
  br i1 %tobool20, label %if.then21, label %if.end23, !dbg !5763

if.then21:                                        ; preds = %if.else19
  call void @llvm.dbg.declare(metadata %struct.GSetIterator* %gs_iter, metadata !5764, metadata !DIExpression()), !dbg !5770
  call void @llvm.dbg.declare(metadata %struct.BMFace** %f, metadata !5771, metadata !DIExpression()), !dbg !5772
  %22 = load %struct.GSet*, %struct.GSet** %bm_faces.addr, align 8, !dbg !5773
  call void @BLI_gsetIterator_init(%struct.GSetIterator* %gs_iter, %struct.GSet* %22), !dbg !5774
  %call22 = call i8* @BLI_gsetIterator_getKey(%struct.GSetIterator* %gs_iter), !dbg !5775
  %23 = bitcast i8* %call22 to %struct.BMFace*, !dbg !5775
  store %struct.BMFace* %23, %struct.BMFace** %f, align 8, !dbg !5776
  %24 = load %struct.BMFace*, %struct.BMFace** %f, align 8, !dbg !5777
  %mat_nr = getelementptr inbounds %struct.BMFace, %struct.BMFace* %24, i32 0, i32 5, !dbg !5778
  %25 = load i16, i16* %mat_nr, align 8, !dbg !5778
  %conv = sext i16 %25 to i32, !dbg !5777
  %add = add nsw i32 %conv, 1, !dbg !5779
  %arraydecay = getelementptr inbounds [4 x float], [4 x float]* %diffuse_color, i64 0, i64 0, !dbg !5780
  call void @GPU_material_diffuse_get(i32 %add, float* %arraydecay), !dbg !5781
  br label %if.end23, !dbg !5782

if.end23:                                         ; preds = %if.then21, %if.else19
  br label %if.end24

if.end24:                                         ; preds = %if.end23, %if.then16
  %26 = load %struct.GPU_PBVH_Buffers*, %struct.GPU_PBVH_Buffers** %buffers.addr, align 8, !dbg !5783
  %diffuse_color25 = getelementptr inbounds %struct.GPU_PBVH_Buffers, %struct.GPU_PBVH_Buffers* %26, i32 0, i32 21, !dbg !5784
  %arraydecay26 = getelementptr inbounds [4 x float], [4 x float]* %diffuse_color25, i64 0, i64 0, !dbg !5783
  %arraydecay27 = getelementptr inbounds [4 x float], [4 x float]* %diffuse_color, i64 0, i64 0, !dbg !5785
  call void @copy_v4_v4(float* %arraydecay26, float* %arraydecay27), !dbg !5786
  %27 = load void (i32, i32)*, void (i32, i32)** @__glewBindBufferARB, align 8, !dbg !5787
  %28 = load %struct.GPU_PBVH_Buffers*, %struct.GPU_PBVH_Buffers** %buffers.addr, align 8, !dbg !5788
  %vert_buf28 = getelementptr inbounds %struct.GPU_PBVH_Buffers, %struct.GPU_PBVH_Buffers* %28, i32 0, i32 0, !dbg !5789
  %29 = load i32, i32* %vert_buf28, align 8, !dbg !5789
  call void %27(i32 34962, i32 %29), !dbg !5787
  %30 = load void (i32, i64, i8*, i32)*, void (i32, i64, i8*, i32)** @__glewBufferDataARB, align 8, !dbg !5790
  %31 = load i32, i32* %totvert, align 4, !dbg !5791
  %conv29 = sext i32 %31 to i64, !dbg !5791
  %mul30 = mul i64 24, %conv29, !dbg !5792
  call void %30(i32 34962, i64 %mul30, i8* null, i32 35044), !dbg !5790
  %32 = load i8* (i32, i32)*, i8* (i32, i32)** @__glewMapBufferARB, align 8, !dbg !5793
  %call31 = call i8* %32(i32 34962, i32 35001), !dbg !5793
  %33 = bitcast i8* %call31 to %struct.VertexBufferFormat*, !dbg !5793
  store %struct.VertexBufferFormat* %33, %struct.VertexBufferFormat** %vert_data, align 8, !dbg !5794
  %34 = load %struct.VertexBufferFormat*, %struct.VertexBufferFormat** %vert_data, align 8, !dbg !5795
  %tobool32 = icmp ne %struct.VertexBufferFormat* %34, null, !dbg !5795
  br i1 %tobool32, label %if.then33, label %if.else99, !dbg !5797

if.then33:                                        ; preds = %if.end24
  call void @llvm.dbg.declare(metadata i32* %v_index, metadata !5798, metadata !DIExpression()), !dbg !5800
  store i32 0, i32* %v_index, align 4, !dbg !5800
  %35 = load %struct.GPU_PBVH_Buffers*, %struct.GPU_PBVH_Buffers** %buffers.addr, align 8, !dbg !5801
  %smooth34 = getelementptr inbounds %struct.GPU_PBVH_Buffers, %struct.GPU_PBVH_Buffers* %35, i32 0, i32 18, !dbg !5803
  %36 = load i32, i32* %smooth34, align 4, !dbg !5803
  %tobool35 = icmp ne i32 %36, 0, !dbg !5801
  br i1 %tobool35, label %if.then36, label %if.else55, !dbg !5804

if.then36:                                        ; preds = %if.then33
  call void @llvm.dbg.declare(metadata %struct.GSetIterator* %gs_iter37, metadata !5805, metadata !DIExpression()), !dbg !5807
  %37 = load %struct.BMesh*, %struct.BMesh** %bm.addr, align 8, !dbg !5808
  %elem_index_dirty = getelementptr inbounds %struct.BMesh, %struct.BMesh* %37, i32 0, i32 7, !dbg !5809
  %38 = load i8, i8* %elem_index_dirty, align 4, !dbg !5810
  %conv38 = zext i8 %38 to i32, !dbg !5810
  %or = or i32 %conv38, 1, !dbg !5810
  %conv39 = trunc i32 %or to i8, !dbg !5810
  store i8 %conv39, i8* %elem_index_dirty, align 4, !dbg !5810
  %39 = load %struct.GSet*, %struct.GSet** %bm_unique_verts.addr, align 8, !dbg !5811
  call void @BLI_gsetIterator_init(%struct.GSetIterator* %gs_iter37, %struct.GSet* %39), !dbg !5811
  br label %for.cond, !dbg !5811

for.cond:                                         ; preds = %for.inc, %if.then36
  %call40 = call zeroext i8 @BLI_gsetIterator_done(%struct.GSetIterator* %gs_iter37), !dbg !5813
  %conv41 = zext i8 %call40 to i32, !dbg !5813
  %cmp = icmp eq i32 %conv41, 0, !dbg !5813
  br i1 %cmp, label %for.body, label %for.end, !dbg !5811

for.body:                                         ; preds = %for.cond
  %call43 = call i8* @BLI_gsetIterator_getKey(%struct.GSetIterator* %gs_iter37), !dbg !5815
  %40 = bitcast i8* %call43 to %struct.BMVert*, !dbg !5815
  %41 = load %struct.VertexBufferFormat*, %struct.VertexBufferFormat** %vert_data, align 8, !dbg !5817
  %42 = load i32, i32* %cd_vert_mask_offset, align 4, !dbg !5818
  %arraydecay44 = getelementptr inbounds [4 x float], [4 x float]* %diffuse_color, i64 0, i64 0, !dbg !5819
  call void @gpu_bmesh_vert_to_buffer_copy(%struct.BMVert* %40, %struct.VertexBufferFormat* %41, i32* %v_index, float* null, float* null, i32 %42, float* %arraydecay44), !dbg !5820
  br label %for.inc, !dbg !5821

for.inc:                                          ; preds = %for.body
  call void @BLI_gsetIterator_step(%struct.GSetIterator* %gs_iter37), !dbg !5813
  br label %for.cond, !dbg !5813, !llvm.loop !5822

for.end:                                          ; preds = %for.cond
  %43 = load %struct.GSet*, %struct.GSet** %bm_other_verts.addr, align 8, !dbg !5824
  call void @BLI_gsetIterator_init(%struct.GSetIterator* %gs_iter37, %struct.GSet* %43), !dbg !5824
  br label %for.cond45, !dbg !5824

for.cond45:                                       ; preds = %for.inc53, %for.end
  %call46 = call zeroext i8 @BLI_gsetIterator_done(%struct.GSetIterator* %gs_iter37), !dbg !5826
  %conv47 = zext i8 %call46 to i32, !dbg !5826
  %cmp48 = icmp eq i32 %conv47, 0, !dbg !5826
  br i1 %cmp48, label %for.body50, label %for.end54, !dbg !5824

for.body50:                                       ; preds = %for.cond45
  %call51 = call i8* @BLI_gsetIterator_getKey(%struct.GSetIterator* %gs_iter37), !dbg !5828
  %44 = bitcast i8* %call51 to %struct.BMVert*, !dbg !5828
  %45 = load %struct.VertexBufferFormat*, %struct.VertexBufferFormat** %vert_data, align 8, !dbg !5830
  %46 = load i32, i32* %cd_vert_mask_offset, align 4, !dbg !5831
  %arraydecay52 = getelementptr inbounds [4 x float], [4 x float]* %diffuse_color, i64 0, i64 0, !dbg !5832
  call void @gpu_bmesh_vert_to_buffer_copy(%struct.BMVert* %44, %struct.VertexBufferFormat* %45, i32* %v_index, float* null, float* null, i32 %46, float* %arraydecay52), !dbg !5833
  br label %for.inc53, !dbg !5834

for.inc53:                                        ; preds = %for.body50
  call void @BLI_gsetIterator_step(%struct.GSetIterator* %gs_iter37), !dbg !5826
  br label %for.cond45, !dbg !5826, !llvm.loop !5835

for.end54:                                        ; preds = %for.cond45
  %47 = load i32, i32* %v_index, align 4, !dbg !5837
  store i32 %47, i32* %maxvert, align 4, !dbg !5838
  br label %if.end93, !dbg !5839

if.else55:                                        ; preds = %if.then33
  call void @llvm.dbg.declare(metadata %struct.GSetIterator* %gs_iter56, metadata !5840, metadata !DIExpression()), !dbg !5842
  %48 = load %struct.GSet*, %struct.GSet** %bm_faces.addr, align 8, !dbg !5843
  call void @BLI_gsetIterator_init(%struct.GSetIterator* %gs_iter56, %struct.GSet* %48), !dbg !5843
  br label %for.cond57, !dbg !5843

for.cond57:                                       ; preds = %for.inc90, %if.else55
  %call58 = call zeroext i8 @BLI_gsetIterator_done(%struct.GSetIterator* %gs_iter56), !dbg !5845
  %conv59 = zext i8 %call58 to i32, !dbg !5845
  %cmp60 = icmp eq i32 %conv59, 0, !dbg !5845
  br i1 %cmp60, label %for.body62, label %for.end91, !dbg !5843

for.body62:                                       ; preds = %for.cond57
  call void @llvm.dbg.declare(metadata %struct.BMFace** %f63, metadata !5847, metadata !DIExpression()), !dbg !5849
  %call64 = call i8* @BLI_gsetIterator_getKey(%struct.GSetIterator* %gs_iter56), !dbg !5850
  %49 = bitcast i8* %call64 to %struct.BMFace*, !dbg !5850
  store %struct.BMFace* %49, %struct.BMFace** %f63, align 8, !dbg !5849
  %50 = load %struct.BMFace*, %struct.BMFace** %f63, align 8, !dbg !5851
  %head = getelementptr inbounds %struct.BMFace, %struct.BMFace* %50, i32 0, i32 0, !dbg !5851
  %call65 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head, i8 zeroext 2), !dbg !5851
  %tobool66 = icmp ne i8 %call65, 0, !dbg !5851
  br i1 %tobool66, label %if.end89, label %if.then67, !dbg !5853

if.then67:                                        ; preds = %for.body62
  call void @llvm.dbg.declare(metadata [3 x %struct.BMVert*]* %v, metadata !5854, metadata !DIExpression()), !dbg !5857
  call void @llvm.dbg.declare(metadata float* %fmask, metadata !5858, metadata !DIExpression()), !dbg !5859
  store float 0.000000e+00, float* %fmask, align 4, !dbg !5859
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5860, metadata !DIExpression()), !dbg !5861
  %51 = load %struct.BMFace*, %struct.BMFace** %f63, align 8, !dbg !5862
  %arraydecay68 = getelementptr inbounds [3 x %struct.BMVert*], [3 x %struct.BMVert*]* %v, i64 0, i64 0, !dbg !5863
  call void @BM_face_as_array_vert_tri(%struct.BMFace* %51, %struct.BMVert** %arraydecay68), !dbg !5864
  store i32 0, i32* %i, align 4, !dbg !5865
  br label %for.cond69, !dbg !5867

for.cond69:                                       ; preds = %for.inc76, %if.then67
  %52 = load i32, i32* %i, align 4, !dbg !5868
  %cmp70 = icmp slt i32 %52, 3, !dbg !5870
  br i1 %cmp70, label %for.body72, label %for.end77, !dbg !5871

for.body72:                                       ; preds = %for.cond69
  %53 = load i32, i32* %i, align 4, !dbg !5872
  %idxprom = sext i32 %53 to i64, !dbg !5872
  %arrayidx73 = getelementptr inbounds [3 x %struct.BMVert*], [3 x %struct.BMVert*]* %v, i64 0, i64 %idxprom, !dbg !5872
  %54 = load %struct.BMVert*, %struct.BMVert** %arrayidx73, align 8, !dbg !5872
  %head74 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %54, i32 0, i32 0, !dbg !5872
  %data = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %head74, i32 0, i32 0, !dbg !5872
  %55 = load i8*, i8** %data, align 8, !dbg !5872
  %56 = load i32, i32* %cd_vert_mask_offset, align 4, !dbg !5872
  %idx.ext = sext i32 %56 to i64, !dbg !5872
  %add.ptr = getelementptr inbounds i8, i8* %55, i64 %idx.ext, !dbg !5872
  %57 = bitcast i8* %add.ptr to float*, !dbg !5872
  %58 = load float, float* %57, align 4, !dbg !5872
  %59 = load float, float* %fmask, align 4, !dbg !5874
  %add75 = fadd float %59, %58, !dbg !5874
  store float %add75, float* %fmask, align 4, !dbg !5874
  br label %for.inc76, !dbg !5875

for.inc76:                                        ; preds = %for.body72
  %60 = load i32, i32* %i, align 4, !dbg !5876
  %inc = add nsw i32 %60, 1, !dbg !5876
  store i32 %inc, i32* %i, align 4, !dbg !5876
  br label %for.cond69, !dbg !5877, !llvm.loop !5878

for.end77:                                        ; preds = %for.cond69
  %61 = load float, float* %fmask, align 4, !dbg !5880
  %div = fdiv float %61, 3.000000e+00, !dbg !5880
  store float %div, float* %fmask, align 4, !dbg !5880
  store i32 0, i32* %i, align 4, !dbg !5881
  br label %for.cond78, !dbg !5883

for.cond78:                                       ; preds = %for.inc86, %for.end77
  %62 = load i32, i32* %i, align 4, !dbg !5884
  %cmp79 = icmp slt i32 %62, 3, !dbg !5886
  br i1 %cmp79, label %for.body81, label %for.end88, !dbg !5887

for.body81:                                       ; preds = %for.cond78
  %63 = load i32, i32* %i, align 4, !dbg !5888
  %idxprom82 = sext i32 %63 to i64, !dbg !5890
  %arrayidx83 = getelementptr inbounds [3 x %struct.BMVert*], [3 x %struct.BMVert*]* %v, i64 0, i64 %idxprom82, !dbg !5890
  %64 = load %struct.BMVert*, %struct.BMVert** %arrayidx83, align 8, !dbg !5890
  %65 = load %struct.VertexBufferFormat*, %struct.VertexBufferFormat** %vert_data, align 8, !dbg !5891
  %66 = load %struct.BMFace*, %struct.BMFace** %f63, align 8, !dbg !5892
  %no = getelementptr inbounds %struct.BMFace, %struct.BMFace* %66, i32 0, i32 4, !dbg !5893
  %arraydecay84 = getelementptr inbounds [3 x float], [3 x float]* %no, i64 0, i64 0, !dbg !5892
  %67 = load i32, i32* %cd_vert_mask_offset, align 4, !dbg !5894
  %arraydecay85 = getelementptr inbounds [4 x float], [4 x float]* %diffuse_color, i64 0, i64 0, !dbg !5895
  call void @gpu_bmesh_vert_to_buffer_copy(%struct.BMVert* %64, %struct.VertexBufferFormat* %65, i32* %v_index, float* %arraydecay84, float* %fmask, i32 %67, float* %arraydecay85), !dbg !5896
  br label %for.inc86, !dbg !5897

for.inc86:                                        ; preds = %for.body81
  %68 = load i32, i32* %i, align 4, !dbg !5898
  %inc87 = add nsw i32 %68, 1, !dbg !5898
  store i32 %inc87, i32* %i, align 4, !dbg !5898
  br label %for.cond78, !dbg !5899, !llvm.loop !5900

for.end88:                                        ; preds = %for.cond78
  br label %if.end89, !dbg !5902

if.end89:                                         ; preds = %for.end88, %for.body62
  br label %for.inc90, !dbg !5903

for.inc90:                                        ; preds = %if.end89
  call void @BLI_gsetIterator_step(%struct.GSetIterator* %gs_iter56), !dbg !5845
  br label %for.cond57, !dbg !5845, !llvm.loop !5904

for.end91:                                        ; preds = %for.cond57
  %69 = load i32, i32* %tottri, align 4, !dbg !5906
  %70 = load %struct.GPU_PBVH_Buffers*, %struct.GPU_PBVH_Buffers** %buffers.addr, align 8, !dbg !5907
  %tot_tri92 = getelementptr inbounds %struct.GPU_PBVH_Buffers, %struct.GPU_PBVH_Buffers* %70, i32 0, i32 16, !dbg !5908
  store i32 %69, i32* %tot_tri92, align 4, !dbg !5909
  br label %if.end93

if.end93:                                         ; preds = %for.end91, %for.end54
  %71 = load i8 (i32)*, i8 (i32)** @__glewUnmapBufferARB, align 8, !dbg !5910
  %call94 = call zeroext i8 %71(i32 34962), !dbg !5910
  %72 = load %struct.BMesh*, %struct.BMesh** %bm.addr, align 8, !dbg !5911
  %elem_index_dirty95 = getelementptr inbounds %struct.BMesh, %struct.BMesh* %72, i32 0, i32 7, !dbg !5912
  %73 = load i8, i8* %elem_index_dirty95, align 4, !dbg !5913
  %conv96 = zext i8 %73 to i32, !dbg !5913
  %or97 = or i32 %conv96, 1, !dbg !5913
  %conv98 = trunc i32 %or97 to i8, !dbg !5913
  store i8 %conv98, i8* %elem_index_dirty95, align 4, !dbg !5913
  br label %if.end102, !dbg !5914

if.else99:                                        ; preds = %if.end24
  %74 = load void (i32, i32*)*, void (i32, i32*)** @__glewDeleteBuffersARB, align 8, !dbg !5915
  %75 = load %struct.GPU_PBVH_Buffers*, %struct.GPU_PBVH_Buffers** %buffers.addr, align 8, !dbg !5917
  %vert_buf100 = getelementptr inbounds %struct.GPU_PBVH_Buffers, %struct.GPU_PBVH_Buffers* %75, i32 0, i32 0, !dbg !5918
  call void %74(i32 1, i32* %vert_buf100), !dbg !5915
  %76 = load %struct.GPU_PBVH_Buffers*, %struct.GPU_PBVH_Buffers** %buffers.addr, align 8, !dbg !5919
  %vert_buf101 = getelementptr inbounds %struct.GPU_PBVH_Buffers, %struct.GPU_PBVH_Buffers* %76, i32 0, i32 0, !dbg !5920
  store i32 0, i32* %vert_buf101, align 8, !dbg !5921
  br label %if.end156, !dbg !5922

if.end102:                                        ; preds = %if.end93
  %77 = load %struct.GPU_PBVH_Buffers*, %struct.GPU_PBVH_Buffers** %buffers.addr, align 8, !dbg !5923
  %smooth103 = getelementptr inbounds %struct.GPU_PBVH_Buffers, %struct.GPU_PBVH_Buffers* %77, i32 0, i32 18, !dbg !5925
  %78 = load i32, i32* %smooth103, align 4, !dbg !5925
  %tobool104 = icmp ne i32 %78, 0, !dbg !5923
  br i1 %tobool104, label %if.then105, label %if.end156, !dbg !5926

if.then105:                                       ; preds = %if.end102
  call void @llvm.dbg.declare(metadata i32* %use_short, metadata !5927, metadata !DIExpression()), !dbg !5929
  %79 = load i32, i32* %maxvert, align 4, !dbg !5930
  %cmp106 = icmp slt i32 %79, 65535, !dbg !5931
  %conv107 = zext i1 %cmp106 to i32, !dbg !5931
  store i32 %conv107, i32* %use_short, align 4, !dbg !5929
  %80 = load void (i32, i32)*, void (i32, i32)** @__glewBindBufferARB, align 8, !dbg !5932
  %81 = load %struct.GPU_PBVH_Buffers*, %struct.GPU_PBVH_Buffers** %buffers.addr, align 8, !dbg !5933
  %index_buf108 = getelementptr inbounds %struct.GPU_PBVH_Buffers, %struct.GPU_PBVH_Buffers* %81, i32 0, i32 1, !dbg !5934
  %82 = load i32, i32* %index_buf108, align 4, !dbg !5934
  call void %80(i32 34963, i32 %82), !dbg !5932
  %83 = load void (i32, i64, i8*, i32)*, void (i32, i64, i8*, i32)** @__glewBufferDataARB, align 8, !dbg !5935
  %84 = load i32, i32* %use_short, align 4, !dbg !5936
  %tobool109 = icmp ne i32 %84, 0, !dbg !5936
  %85 = zext i1 %tobool109 to i64, !dbg !5936
  %cond = select i1 %tobool109, i64 2, i64 4, !dbg !5936
  %mul110 = mul i64 %cond, 3, !dbg !5937
  %86 = load i32, i32* %tottri, align 4, !dbg !5938
  %conv111 = sext i32 %86 to i64, !dbg !5938
  %mul112 = mul i64 %mul110, %conv111, !dbg !5939
  call void %83(i32 34963, i64 %mul112, i8* null, i32 35044), !dbg !5935
  %87 = load i8* (i32, i32)*, i8* (i32, i32)** @__glewMapBufferARB, align 8, !dbg !5940
  %call113 = call i8* %87(i32 34963, i32 35001), !dbg !5940
  store i8* %call113, i8** %tri_data, align 8, !dbg !5941
  %88 = load i8*, i8** %tri_data, align 8, !dbg !5942
  %tobool114 = icmp ne i8* %88, null, !dbg !5942
  br i1 %tobool114, label %if.then115, label %if.else152, !dbg !5944

if.then115:                                       ; preds = %if.then105
  call void @llvm.dbg.declare(metadata %struct.GSetIterator* %gs_iter116, metadata !5945, metadata !DIExpression()), !dbg !5947
  %89 = load %struct.GSet*, %struct.GSet** %bm_faces.addr, align 8, !dbg !5948
  call void @BLI_gsetIterator_init(%struct.GSetIterator* %gs_iter116, %struct.GSet* %89), !dbg !5948
  br label %for.cond117, !dbg !5948

for.cond117:                                      ; preds = %for.inc146, %if.then115
  %call118 = call zeroext i8 @BLI_gsetIterator_done(%struct.GSetIterator* %gs_iter116), !dbg !5950
  %conv119 = zext i8 %call118 to i32, !dbg !5950
  %cmp120 = icmp eq i32 %conv119, 0, !dbg !5950
  br i1 %cmp120, label %for.body122, label %for.end147, !dbg !5948

for.body122:                                      ; preds = %for.cond117
  call void @llvm.dbg.declare(metadata %struct.BMFace** %f123, metadata !5952, metadata !DIExpression()), !dbg !5954
  %call124 = call i8* @BLI_gsetIterator_getKey(%struct.GSetIterator* %gs_iter116), !dbg !5955
  %90 = bitcast i8* %call124 to %struct.BMFace*, !dbg !5955
  store %struct.BMFace* %90, %struct.BMFace** %f123, align 8, !dbg !5954
  %91 = load %struct.BMFace*, %struct.BMFace** %f123, align 8, !dbg !5956
  %head125 = getelementptr inbounds %struct.BMFace, %struct.BMFace* %91, i32 0, i32 0, !dbg !5956
  %call126 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head125, i8 zeroext 2), !dbg !5956
  %tobool127 = icmp ne i8 %call126, 0, !dbg !5956
  br i1 %tobool127, label %if.end145, label %if.then128, !dbg !5958

if.then128:                                       ; preds = %for.body122
  call void @llvm.dbg.declare(metadata %struct.BMLoop** %l_iter, metadata !5959, metadata !DIExpression()), !dbg !5961
  call void @llvm.dbg.declare(metadata %struct.BMLoop** %l_first, metadata !5962, metadata !DIExpression()), !dbg !5963
  %92 = load %struct.BMFace*, %struct.BMFace** %f123, align 8, !dbg !5964
  %l_first129 = getelementptr inbounds %struct.BMFace, %struct.BMFace* %92, i32 0, i32 2, !dbg !5964
  %93 = load %struct.BMLoop*, %struct.BMLoop** %l_first129, align 8, !dbg !5964
  store %struct.BMLoop* %93, %struct.BMLoop** %l_first, align 8, !dbg !5965
  store %struct.BMLoop* %93, %struct.BMLoop** %l_iter, align 8, !dbg !5966
  br label %do.body, !dbg !5967

do.body:                                          ; preds = %do.cond, %if.then128
  call void @llvm.dbg.declare(metadata %struct.BMVert** %v130, metadata !5968, metadata !DIExpression()), !dbg !5970
  %94 = load %struct.BMLoop*, %struct.BMLoop** %l_iter, align 8, !dbg !5971
  %v131 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %94, i32 0, i32 1, !dbg !5972
  %95 = load %struct.BMVert*, %struct.BMVert** %v131, align 8, !dbg !5972
  store %struct.BMVert* %95, %struct.BMVert** %v130, align 8, !dbg !5970
  %96 = load i32, i32* %use_short, align 4, !dbg !5973
  %tobool132 = icmp ne i32 %96, 0, !dbg !5973
  br i1 %tobool132, label %if.then133, label %if.else137, !dbg !5975

if.then133:                                       ; preds = %do.body
  call void @llvm.dbg.declare(metadata i16** %elem, metadata !5976, metadata !DIExpression()), !dbg !5978
  %97 = load i8*, i8** %tri_data, align 8, !dbg !5979
  %98 = bitcast i8* %97 to i16*, !dbg !5979
  store i16* %98, i16** %elem, align 8, !dbg !5978
  %99 = load %struct.BMVert*, %struct.BMVert** %v130, align 8, !dbg !5980
  %head134 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %99, i32 0, i32 0, !dbg !5980
  %call135 = call i32 @_bm_elem_index_get(%struct.BMHeader* %head134), !dbg !5980
  %conv136 = trunc i32 %call135 to i16, !dbg !5980
  %100 = load i16*, i16** %elem, align 8, !dbg !5981
  store i16 %conv136, i16* %100, align 2, !dbg !5982
  %101 = load i16*, i16** %elem, align 8, !dbg !5983
  %incdec.ptr = getelementptr inbounds i16, i16* %101, i32 1, !dbg !5983
  store i16* %incdec.ptr, i16** %elem, align 8, !dbg !5983
  %102 = load i16*, i16** %elem, align 8, !dbg !5984
  %103 = bitcast i16* %102 to i8*, !dbg !5984
  store i8* %103, i8** %tri_data, align 8, !dbg !5985
  br label %if.end142, !dbg !5986

if.else137:                                       ; preds = %do.body
  call void @llvm.dbg.declare(metadata i32** %elem138, metadata !5987, metadata !DIExpression()), !dbg !5989
  %104 = load i8*, i8** %tri_data, align 8, !dbg !5990
  %105 = bitcast i8* %104 to i32*, !dbg !5990
  store i32* %105, i32** %elem138, align 8, !dbg !5989
  %106 = load %struct.BMVert*, %struct.BMVert** %v130, align 8, !dbg !5991
  %head139 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %106, i32 0, i32 0, !dbg !5991
  %call140 = call i32 @_bm_elem_index_get(%struct.BMHeader* %head139), !dbg !5991
  %107 = load i32*, i32** %elem138, align 8, !dbg !5992
  store i32 %call140, i32* %107, align 4, !dbg !5993
  %108 = load i32*, i32** %elem138, align 8, !dbg !5994
  %incdec.ptr141 = getelementptr inbounds i32, i32* %108, i32 1, !dbg !5994
  store i32* %incdec.ptr141, i32** %elem138, align 8, !dbg !5994
  %109 = load i32*, i32** %elem138, align 8, !dbg !5995
  %110 = bitcast i32* %109 to i8*, !dbg !5995
  store i8* %110, i8** %tri_data, align 8, !dbg !5996
  br label %if.end142

if.end142:                                        ; preds = %if.else137, %if.then133
  br label %do.cond, !dbg !5997

do.cond:                                          ; preds = %if.end142
  %111 = load %struct.BMLoop*, %struct.BMLoop** %l_iter, align 8, !dbg !5998
  %next = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %111, i32 0, i32 6, !dbg !5999
  %112 = load %struct.BMLoop*, %struct.BMLoop** %next, align 8, !dbg !5999
  store %struct.BMLoop* %112, %struct.BMLoop** %l_iter, align 8, !dbg !6000
  %113 = load %struct.BMLoop*, %struct.BMLoop** %l_first, align 8, !dbg !6001
  %cmp143 = icmp ne %struct.BMLoop* %112, %113, !dbg !6002
  br i1 %cmp143, label %do.body, label %do.end, !dbg !5997, !llvm.loop !6003

do.end:                                           ; preds = %do.cond
  br label %if.end145, !dbg !6005

if.end145:                                        ; preds = %do.end, %for.body122
  br label %for.inc146, !dbg !6006

for.inc146:                                       ; preds = %if.end145
  call void @BLI_gsetIterator_step(%struct.GSetIterator* %gs_iter116), !dbg !5950
  br label %for.cond117, !dbg !5950, !llvm.loop !6007

for.end147:                                       ; preds = %for.cond117
  %114 = load i8 (i32)*, i8 (i32)** @__glewUnmapBufferARB, align 8, !dbg !6009
  %call148 = call zeroext i8 %114(i32 34963), !dbg !6009
  %115 = load i32, i32* %tottri, align 4, !dbg !6010
  %116 = load %struct.GPU_PBVH_Buffers*, %struct.GPU_PBVH_Buffers** %buffers.addr, align 8, !dbg !6011
  %tot_tri149 = getelementptr inbounds %struct.GPU_PBVH_Buffers, %struct.GPU_PBVH_Buffers* %116, i32 0, i32 16, !dbg !6012
  store i32 %115, i32* %tot_tri149, align 4, !dbg !6013
  %117 = load i32, i32* %use_short, align 4, !dbg !6014
  %tobool150 = icmp ne i32 %117, 0, !dbg !6014
  %118 = zext i1 %tobool150 to i64, !dbg !6014
  %cond151 = select i1 %tobool150, i32 5123, i32 5125, !dbg !6014
  %119 = load %struct.GPU_PBVH_Buffers*, %struct.GPU_PBVH_Buffers** %buffers.addr, align 8, !dbg !6015
  %index_type = getelementptr inbounds %struct.GPU_PBVH_Buffers, %struct.GPU_PBVH_Buffers* %119, i32 0, i32 2, !dbg !6016
  store i32 %cond151, i32* %index_type, align 8, !dbg !6017
  br label %if.end155, !dbg !6018

if.else152:                                       ; preds = %if.then105
  %120 = load void (i32, i32*)*, void (i32, i32*)** @__glewDeleteBuffersARB, align 8, !dbg !6019
  %121 = load %struct.GPU_PBVH_Buffers*, %struct.GPU_PBVH_Buffers** %buffers.addr, align 8, !dbg !6021
  %index_buf153 = getelementptr inbounds %struct.GPU_PBVH_Buffers, %struct.GPU_PBVH_Buffers* %121, i32 0, i32 1, !dbg !6022
  call void %120(i32 1, i32* %index_buf153), !dbg !6019
  %122 = load %struct.GPU_PBVH_Buffers*, %struct.GPU_PBVH_Buffers** %buffers.addr, align 8, !dbg !6023
  %index_buf154 = getelementptr inbounds %struct.GPU_PBVH_Buffers, %struct.GPU_PBVH_Buffers* %122, i32 0, i32 1, !dbg !6024
  store i32 0, i32* %index_buf154, align 4, !dbg !6025
  br label %if.end155

if.end155:                                        ; preds = %if.else152, %for.end147
  br label %if.end156, !dbg !6026

if.end156:                                        ; preds = %if.then, %if.then12, %if.else99, %if.end155, %if.end102
  ret void, !dbg !6027
}

declare dso_local i32 @CustomData_get_offset(%struct.CustomData*, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @gpu_bmesh_face_visible_count(%struct.GSet* %bm_faces) #0 !dbg !6028 {
entry:
  %bm_faces.addr = alloca %struct.GSet*, align 8
  %gh_iter = alloca %struct.GSetIterator, align 8
  %totface = alloca i32, align 4
  %f = alloca %struct.BMFace*, align 8
  store %struct.GSet* %bm_faces, %struct.GSet** %bm_faces.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GSet** %bm_faces.addr, metadata !6031, metadata !DIExpression()), !dbg !6032
  call void @llvm.dbg.declare(metadata %struct.GSetIterator* %gh_iter, metadata !6033, metadata !DIExpression()), !dbg !6034
  call void @llvm.dbg.declare(metadata i32* %totface, metadata !6035, metadata !DIExpression()), !dbg !6036
  store i32 0, i32* %totface, align 4, !dbg !6036
  %0 = load %struct.GSet*, %struct.GSet** %bm_faces.addr, align 8, !dbg !6037
  call void @BLI_gsetIterator_init(%struct.GSetIterator* %gh_iter, %struct.GSet* %0), !dbg !6037
  br label %for.cond, !dbg !6037

for.cond:                                         ; preds = %for.inc, %entry
  %call = call zeroext i8 @BLI_gsetIterator_done(%struct.GSetIterator* %gh_iter), !dbg !6039
  %conv = zext i8 %call to i32, !dbg !6039
  %cmp = icmp eq i32 %conv, 0, !dbg !6039
  br i1 %cmp, label %for.body, label %for.end, !dbg !6037

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.BMFace** %f, metadata !6041, metadata !DIExpression()), !dbg !6043
  %call2 = call i8* @BLI_gsetIterator_getKey(%struct.GSetIterator* %gh_iter), !dbg !6044
  %1 = bitcast i8* %call2 to %struct.BMFace*, !dbg !6044
  store %struct.BMFace* %1, %struct.BMFace** %f, align 8, !dbg !6043
  %2 = load %struct.BMFace*, %struct.BMFace** %f, align 8, !dbg !6045
  %head = getelementptr inbounds %struct.BMFace, %struct.BMFace* %2, i32 0, i32 0, !dbg !6045
  %call3 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head, i8 zeroext 2), !dbg !6045
  %tobool = icmp ne i8 %call3, 0, !dbg !6045
  br i1 %tobool, label %if.end, label %if.then, !dbg !6047

if.then:                                          ; preds = %for.body
  %3 = load i32, i32* %totface, align 4, !dbg !6048
  %inc = add nsw i32 %3, 1, !dbg !6048
  store i32 %inc, i32* %totface, align 4, !dbg !6048
  br label %if.end, !dbg !6049

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc, !dbg !6050

for.inc:                                          ; preds = %if.end
  call void @BLI_gsetIterator_step(%struct.GSetIterator* %gh_iter), !dbg !6039
  br label %for.cond, !dbg !6039, !llvm.loop !6051

for.end:                                          ; preds = %for.cond
  %4 = load i32, i32* %totface, align 4, !dbg !6053
  ret i32 %4, !dbg !6054
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @gpu_bmesh_vert_visible_count(%struct.GSet* %bm_unique_verts, %struct.GSet* %bm_other_verts) #0 !dbg !6055 {
entry:
  %bm_unique_verts.addr = alloca %struct.GSet*, align 8
  %bm_other_verts.addr = alloca %struct.GSet*, align 8
  %gs_iter = alloca %struct.GSetIterator, align 8
  %totvert = alloca i32, align 4
  %v = alloca %struct.BMVert*, align 8
  %v10 = alloca %struct.BMVert*, align 8
  store %struct.GSet* %bm_unique_verts, %struct.GSet** %bm_unique_verts.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GSet** %bm_unique_verts.addr, metadata !6058, metadata !DIExpression()), !dbg !6059
  store %struct.GSet* %bm_other_verts, %struct.GSet** %bm_other_verts.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GSet** %bm_other_verts.addr, metadata !6060, metadata !DIExpression()), !dbg !6061
  call void @llvm.dbg.declare(metadata %struct.GSetIterator* %gs_iter, metadata !6062, metadata !DIExpression()), !dbg !6063
  call void @llvm.dbg.declare(metadata i32* %totvert, metadata !6064, metadata !DIExpression()), !dbg !6065
  store i32 0, i32* %totvert, align 4, !dbg !6065
  %0 = load %struct.GSet*, %struct.GSet** %bm_unique_verts.addr, align 8, !dbg !6066
  call void @BLI_gsetIterator_init(%struct.GSetIterator* %gs_iter, %struct.GSet* %0), !dbg !6066
  br label %for.cond, !dbg !6066

for.cond:                                         ; preds = %for.inc, %entry
  %call = call zeroext i8 @BLI_gsetIterator_done(%struct.GSetIterator* %gs_iter), !dbg !6068
  %conv = zext i8 %call to i32, !dbg !6068
  %cmp = icmp eq i32 %conv, 0, !dbg !6068
  br i1 %cmp, label %for.body, label %for.end, !dbg !6066

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.BMVert** %v, metadata !6070, metadata !DIExpression()), !dbg !6072
  %call2 = call i8* @BLI_gsetIterator_getKey(%struct.GSetIterator* %gs_iter), !dbg !6073
  %1 = bitcast i8* %call2 to %struct.BMVert*, !dbg !6073
  store %struct.BMVert* %1, %struct.BMVert** %v, align 8, !dbg !6072
  %2 = load %struct.BMVert*, %struct.BMVert** %v, align 8, !dbg !6074
  %head = getelementptr inbounds %struct.BMVert, %struct.BMVert* %2, i32 0, i32 0, !dbg !6074
  %call3 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head, i8 zeroext 2), !dbg !6074
  %tobool = icmp ne i8 %call3, 0, !dbg !6074
  br i1 %tobool, label %if.end, label %if.then, !dbg !6076

if.then:                                          ; preds = %for.body
  %3 = load i32, i32* %totvert, align 4, !dbg !6077
  %inc = add nsw i32 %3, 1, !dbg !6077
  store i32 %inc, i32* %totvert, align 4, !dbg !6077
  br label %if.end, !dbg !6078

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc, !dbg !6079

for.inc:                                          ; preds = %if.end
  call void @BLI_gsetIterator_step(%struct.GSetIterator* %gs_iter), !dbg !6068
  br label %for.cond, !dbg !6068, !llvm.loop !6080

for.end:                                          ; preds = %for.cond
  %4 = load %struct.GSet*, %struct.GSet** %bm_other_verts.addr, align 8, !dbg !6082
  call void @BLI_gsetIterator_init(%struct.GSetIterator* %gs_iter, %struct.GSet* %4), !dbg !6082
  br label %for.cond4, !dbg !6082

for.cond4:                                        ; preds = %for.inc18, %for.end
  %call5 = call zeroext i8 @BLI_gsetIterator_done(%struct.GSetIterator* %gs_iter), !dbg !6084
  %conv6 = zext i8 %call5 to i32, !dbg !6084
  %cmp7 = icmp eq i32 %conv6, 0, !dbg !6084
  br i1 %cmp7, label %for.body9, label %for.end19, !dbg !6082

for.body9:                                        ; preds = %for.cond4
  call void @llvm.dbg.declare(metadata %struct.BMVert** %v10, metadata !6086, metadata !DIExpression()), !dbg !6088
  %call11 = call i8* @BLI_gsetIterator_getKey(%struct.GSetIterator* %gs_iter), !dbg !6089
  %5 = bitcast i8* %call11 to %struct.BMVert*, !dbg !6089
  store %struct.BMVert* %5, %struct.BMVert** %v10, align 8, !dbg !6088
  %6 = load %struct.BMVert*, %struct.BMVert** %v10, align 8, !dbg !6090
  %head12 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %6, i32 0, i32 0, !dbg !6090
  %call13 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head12, i8 zeroext 2), !dbg !6090
  %tobool14 = icmp ne i8 %call13, 0, !dbg !6090
  br i1 %tobool14, label %if.end17, label %if.then15, !dbg !6092

if.then15:                                        ; preds = %for.body9
  %7 = load i32, i32* %totvert, align 4, !dbg !6093
  %inc16 = add nsw i32 %7, 1, !dbg !6093
  store i32 %inc16, i32* %totvert, align 4, !dbg !6093
  br label %if.end17, !dbg !6094

if.end17:                                         ; preds = %if.then15, %for.body9
  br label %for.inc18, !dbg !6095

for.inc18:                                        ; preds = %if.end17
  call void @BLI_gsetIterator_step(%struct.GSetIterator* %gs_iter), !dbg !6084
  br label %for.cond4, !dbg !6084, !llvm.loop !6096

for.end19:                                        ; preds = %for.cond4
  %8 = load i32, i32* %totvert, align 4, !dbg !6098
  ret i32 %8, !dbg !6099
}

; Function Attrs: noinline nounwind uwtable
define internal void @BLI_gsetIterator_init(%struct.GSetIterator* %gsi, %struct.GSet* %gs) #0 !dbg !6100 {
entry:
  %gsi.addr = alloca %struct.GSetIterator*, align 8
  %gs.addr = alloca %struct.GSet*, align 8
  store %struct.GSetIterator* %gsi, %struct.GSetIterator** %gsi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GSetIterator** %gsi.addr, metadata !6104, metadata !DIExpression()), !dbg !6105
  store %struct.GSet* %gs, %struct.GSet** %gs.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GSet** %gs.addr, metadata !6106, metadata !DIExpression()), !dbg !6107
  %0 = load %struct.GSetIterator*, %struct.GSetIterator** %gsi.addr, align 8, !dbg !6108
  %1 = bitcast %struct.GSetIterator* %0 to %struct.GHashIterator*, !dbg !6109
  %2 = load %struct.GSet*, %struct.GSet** %gs.addr, align 8, !dbg !6110
  %3 = bitcast %struct.GSet* %2 to %struct.GHash*, !dbg !6111
  call void @BLI_ghashIterator_init(%struct.GHashIterator* %1, %struct.GHash* %3), !dbg !6112
  ret void, !dbg !6113
}

; Function Attrs: noinline nounwind uwtable
define internal i8* @BLI_gsetIterator_getKey(%struct.GSetIterator* %gsi) #0 !dbg !6114 {
entry:
  %gsi.addr = alloca %struct.GSetIterator*, align 8
  store %struct.GSetIterator* %gsi, %struct.GSetIterator** %gsi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GSetIterator** %gsi.addr, metadata !6117, metadata !DIExpression()), !dbg !6118
  %0 = load %struct.GSetIterator*, %struct.GSetIterator** %gsi.addr, align 8, !dbg !6119
  %1 = bitcast %struct.GSetIterator* %0 to %struct.GHashIterator*, !dbg !6120
  %call = call i8* @BLI_ghashIterator_getKey(%struct.GHashIterator* %1), !dbg !6121
  ret i8* %call, !dbg !6122
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @BLI_gsetIterator_done(%struct.GSetIterator* %gsi) #0 !dbg !6123 {
entry:
  %gsi.addr = alloca %struct.GSetIterator*, align 8
  store %struct.GSetIterator* %gsi, %struct.GSetIterator** %gsi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GSetIterator** %gsi.addr, metadata !6126, metadata !DIExpression()), !dbg !6127
  %0 = load %struct.GSetIterator*, %struct.GSetIterator** %gsi.addr, align 8, !dbg !6128
  %1 = bitcast %struct.GSetIterator* %0 to %struct.GHashIterator*, !dbg !6129
  %call = call zeroext i8 @BLI_ghashIterator_done(%struct.GHashIterator* %1), !dbg !6130
  ret i8 %call, !dbg !6131
}

; Function Attrs: noinline nounwind uwtable
define internal void @gpu_bmesh_vert_to_buffer_copy(%struct.BMVert* %v, %struct.VertexBufferFormat* %vert_data, i32* %v_index, float* %fno, float* %fmask, i32 %cd_vert_mask_offset, float* %diffuse_color) #0 !dbg !6132 {
entry:
  %v.addr = alloca %struct.BMVert*, align 8
  %vert_data.addr = alloca %struct.VertexBufferFormat*, align 8
  %v_index.addr = alloca i32*, align 8
  %fno.addr = alloca float*, align 8
  %fmask.addr = alloca float*, align 8
  %cd_vert_mask_offset.addr = alloca i32, align 4
  %diffuse_color.addr = alloca float*, align 8
  %vd = alloca %struct.VertexBufferFormat*, align 8
  store %struct.BMVert* %v, %struct.BMVert** %v.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMVert** %v.addr, metadata !6135, metadata !DIExpression()), !dbg !6136
  store %struct.VertexBufferFormat* %vert_data, %struct.VertexBufferFormat** %vert_data.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VertexBufferFormat** %vert_data.addr, metadata !6137, metadata !DIExpression()), !dbg !6138
  store i32* %v_index, i32** %v_index.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %v_index.addr, metadata !6139, metadata !DIExpression()), !dbg !6140
  store float* %fno, float** %fno.addr, align 8
  call void @llvm.dbg.declare(metadata float** %fno.addr, metadata !6141, metadata !DIExpression()), !dbg !6142
  store float* %fmask, float** %fmask.addr, align 8
  call void @llvm.dbg.declare(metadata float** %fmask.addr, metadata !6143, metadata !DIExpression()), !dbg !6144
  store i32 %cd_vert_mask_offset, i32* %cd_vert_mask_offset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cd_vert_mask_offset.addr, metadata !6145, metadata !DIExpression()), !dbg !6146
  store float* %diffuse_color, float** %diffuse_color.addr, align 8
  call void @llvm.dbg.declare(metadata float** %diffuse_color.addr, metadata !6147, metadata !DIExpression()), !dbg !6148
  %0 = load %struct.BMVert*, %struct.BMVert** %v.addr, align 8, !dbg !6149
  %head = getelementptr inbounds %struct.BMVert, %struct.BMVert* %0, i32 0, i32 0, !dbg !6149
  %call = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head, i8 zeroext 2), !dbg !6149
  %tobool = icmp ne i8 %call, 0, !dbg !6149
  br i1 %tobool, label %if.end, label %if.then, !dbg !6151

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.VertexBufferFormat** %vd, metadata !6152, metadata !DIExpression()), !dbg !6154
  %1 = load %struct.VertexBufferFormat*, %struct.VertexBufferFormat** %vert_data.addr, align 8, !dbg !6155
  %2 = load i32*, i32** %v_index.addr, align 8, !dbg !6156
  %3 = load i32, i32* %2, align 4, !dbg !6157
  %idxprom = sext i32 %3 to i64, !dbg !6155
  %arrayidx = getelementptr inbounds %struct.VertexBufferFormat, %struct.VertexBufferFormat* %1, i64 %idxprom, !dbg !6155
  store %struct.VertexBufferFormat* %arrayidx, %struct.VertexBufferFormat** %vd, align 8, !dbg !6154
  %4 = load %struct.VertexBufferFormat*, %struct.VertexBufferFormat** %vd, align 8, !dbg !6158
  %co = getelementptr inbounds %struct.VertexBufferFormat, %struct.VertexBufferFormat* %4, i32 0, i32 0, !dbg !6159
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !6158
  %5 = load %struct.BMVert*, %struct.BMVert** %v.addr, align 8, !dbg !6160
  %co1 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %5, i32 0, i32 2, !dbg !6161
  %arraydecay2 = getelementptr inbounds [3 x float], [3 x float]* %co1, i64 0, i64 0, !dbg !6160
  call void @copy_v3_v3(float* %arraydecay, float* %arraydecay2), !dbg !6162
  %6 = load %struct.VertexBufferFormat*, %struct.VertexBufferFormat** %vd, align 8, !dbg !6163
  %no = getelementptr inbounds %struct.VertexBufferFormat, %struct.VertexBufferFormat* %6, i32 0, i32 1, !dbg !6164
  %arraydecay3 = getelementptr inbounds [3 x i16], [3 x i16]* %no, i64 0, i64 0, !dbg !6163
  %7 = load float*, float** %fno.addr, align 8, !dbg !6165
  %tobool4 = icmp ne float* %7, null, !dbg !6165
  br i1 %tobool4, label %cond.true, label %cond.false, !dbg !6165

cond.true:                                        ; preds = %if.then
  %8 = load float*, float** %fno.addr, align 8, !dbg !6166
  br label %cond.end, !dbg !6165

cond.false:                                       ; preds = %if.then
  %9 = load %struct.BMVert*, %struct.BMVert** %v.addr, align 8, !dbg !6167
  %no5 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %9, i32 0, i32 3, !dbg !6168
  %arraydecay6 = getelementptr inbounds [3 x float], [3 x float]* %no5, i64 0, i64 0, !dbg !6167
  br label %cond.end, !dbg !6165

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float* [ %8, %cond.true ], [ %arraydecay6, %cond.false ], !dbg !6165
  call void @normal_float_to_short_v3(i16* %arraydecay3, float* %cond), !dbg !6169
  %10 = load float*, float** %fmask.addr, align 8, !dbg !6170
  %tobool7 = icmp ne float* %10, null, !dbg !6170
  br i1 %tobool7, label %cond.true8, label %cond.false9, !dbg !6170

cond.true8:                                       ; preds = %cond.end
  %11 = load float*, float** %fmask.addr, align 8, !dbg !6171
  %12 = load float, float* %11, align 4, !dbg !6172
  br label %cond.end11, !dbg !6170

cond.false9:                                      ; preds = %cond.end
  %13 = load %struct.BMVert*, %struct.BMVert** %v.addr, align 8, !dbg !6173
  %head10 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %13, i32 0, i32 0, !dbg !6173
  %data = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %head10, i32 0, i32 0, !dbg !6173
  %14 = load i8*, i8** %data, align 8, !dbg !6173
  %15 = load i32, i32* %cd_vert_mask_offset.addr, align 4, !dbg !6173
  %idx.ext = sext i32 %15 to i64, !dbg !6173
  %add.ptr = getelementptr inbounds i8, i8* %14, i64 %idx.ext, !dbg !6173
  %16 = bitcast i8* %add.ptr to float*, !dbg !6173
  %17 = load float, float* %16, align 4, !dbg !6173
  br label %cond.end11, !dbg !6170

cond.end11:                                       ; preds = %cond.false9, %cond.true8
  %cond12 = phi float [ %12, %cond.true8 ], [ %17, %cond.false9 ], !dbg !6170
  %18 = load float*, float** %diffuse_color.addr, align 8, !dbg !6174
  %19 = load %struct.VertexBufferFormat*, %struct.VertexBufferFormat** %vd, align 8, !dbg !6175
  %color = getelementptr inbounds %struct.VertexBufferFormat, %struct.VertexBufferFormat* %19, i32 0, i32 3, !dbg !6176
  %arraydecay13 = getelementptr inbounds [3 x i8], [3 x i8]* %color, i64 0, i64 0, !dbg !6175
  call void @gpu_color_from_mask_copy(float %cond12, float* %18, i8* %arraydecay13), !dbg !6177
  %20 = load %struct.BMVert*, %struct.BMVert** %v.addr, align 8, !dbg !6178
  %head14 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %20, i32 0, i32 0, !dbg !6178
  %21 = load i32*, i32** %v_index.addr, align 8, !dbg !6178
  %22 = load i32, i32* %21, align 4, !dbg !6178
  call void @_bm_elem_index_set(%struct.BMHeader* %head14, i32 %22), !dbg !6178
  %23 = load i32*, i32** %v_index.addr, align 8, !dbg !6179
  %24 = load i32, i32* %23, align 4, !dbg !6180
  %inc = add nsw i32 %24, 1, !dbg !6180
  store i32 %inc, i32* %23, align 4, !dbg !6180
  br label %if.end, !dbg !6181

if.end:                                           ; preds = %cond.end11, %entry
  ret void, !dbg !6182
}

; Function Attrs: noinline nounwind uwtable
define internal void @BLI_gsetIterator_step(%struct.GSetIterator* %gsi) #0 !dbg !6183 {
entry:
  %gsi.addr = alloca %struct.GSetIterator*, align 8
  store %struct.GSetIterator* %gsi, %struct.GSetIterator** %gsi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GSetIterator** %gsi.addr, metadata !6186, metadata !DIExpression()), !dbg !6187
  %0 = load %struct.GSetIterator*, %struct.GSetIterator** %gsi.addr, align 8, !dbg !6188
  %1 = bitcast %struct.GSetIterator* %0 to %struct.GHashIterator*, !dbg !6189
  call void @BLI_ghashIterator_step(%struct.GHashIterator* %1), !dbg !6190
  ret void, !dbg !6191
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head, i8 zeroext %hflag) #0 !dbg !6192 {
entry:
  %head.addr = alloca %struct.BMHeader*, align 8
  %hflag.addr = alloca i8, align 1
  store %struct.BMHeader* %head, %struct.BMHeader** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMHeader** %head.addr, metadata !6198, metadata !DIExpression()), !dbg !6199
  store i8 %hflag, i8* %hflag.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %hflag.addr, metadata !6200, metadata !DIExpression()), !dbg !6201
  %0 = load %struct.BMHeader*, %struct.BMHeader** %head.addr, align 8, !dbg !6202
  %hflag1 = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %0, i32 0, i32 3, !dbg !6203
  %1 = load i8, i8* %hflag1, align 1, !dbg !6203
  %conv = zext i8 %1 to i32, !dbg !6202
  %2 = load i8, i8* %hflag.addr, align 1, !dbg !6204
  %conv2 = zext i8 %2 to i32, !dbg !6204
  %and = and i32 %conv, %conv2, !dbg !6205
  %conv3 = trunc i32 %and to i8, !dbg !6202
  ret i8 %conv3, !dbg !6206
}

declare dso_local void @BM_face_as_array_vert_tri(%struct.BMFace*, %struct.BMVert**) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @_bm_elem_index_get(%struct.BMHeader* %head) #0 !dbg !6207 {
entry:
  %head.addr = alloca %struct.BMHeader*, align 8
  store %struct.BMHeader* %head, %struct.BMHeader** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMHeader** %head.addr, metadata !6210, metadata !DIExpression()), !dbg !6211
  %0 = load %struct.BMHeader*, %struct.BMHeader** %head.addr, align 8, !dbg !6212
  %index = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %0, i32 0, i32 1, !dbg !6213
  %1 = load i32, i32* %index, align 8, !dbg !6213
  ret i32 %1, !dbg !6214
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.GPU_PBVH_Buffers* @GPU_build_bmesh_pbvh_buffers(i32 %smooth_shading) #0 !dbg !6215 {
entry:
  %smooth_shading.addr = alloca i32, align 4
  %buffers = alloca %struct.GPU_PBVH_Buffers*, align 8
  store i32 %smooth_shading, i32* %smooth_shading.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %smooth_shading.addr, metadata !6218, metadata !DIExpression()), !dbg !6219
  call void @llvm.dbg.declare(metadata %struct.GPU_PBVH_Buffers** %buffers, metadata !6220, metadata !DIExpression()), !dbg !6221
  %0 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !6222
  %call = call i8* %0(i64 176, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.4, i64 0, i64 0)), !dbg !6222
  %1 = bitcast i8* %call to %struct.GPU_PBVH_Buffers*, !dbg !6222
  store %struct.GPU_PBVH_Buffers* %1, %struct.GPU_PBVH_Buffers** %buffers, align 8, !dbg !6223
  %2 = load i32, i32* %smooth_shading.addr, align 4, !dbg !6224
  %tobool = icmp ne i32 %2, 0, !dbg !6224
  br i1 %tobool, label %if.then, label %if.end, !dbg !6226

if.then:                                          ; preds = %entry
  %3 = load void (i32, i32*)*, void (i32, i32*)** @__glewGenBuffersARB, align 8, !dbg !6227
  %4 = load %struct.GPU_PBVH_Buffers*, %struct.GPU_PBVH_Buffers** %buffers, align 8, !dbg !6228
  %index_buf = getelementptr inbounds %struct.GPU_PBVH_Buffers, %struct.GPU_PBVH_Buffers* %4, i32 0, i32 1, !dbg !6229
  call void %3(i32 1, i32* %index_buf), !dbg !6227
  br label %if.end, !dbg !6227

if.end:                                           ; preds = %if.then, %entry
  %5 = load void (i32, i32*)*, void (i32, i32*)** @__glewGenBuffersARB, align 8, !dbg !6230
  %6 = load %struct.GPU_PBVH_Buffers*, %struct.GPU_PBVH_Buffers** %buffers, align 8, !dbg !6231
  %vert_buf = getelementptr inbounds %struct.GPU_PBVH_Buffers, %struct.GPU_PBVH_Buffers* %6, i32 0, i32 0, !dbg !6232
  call void %5(i32 1, i32* %vert_buf), !dbg !6230
  %7 = load %struct.GPU_PBVH_Buffers*, %struct.GPU_PBVH_Buffers** %buffers, align 8, !dbg !6233
  %use_bmesh = getelementptr inbounds %struct.GPU_PBVH_Buffers, %struct.GPU_PBVH_Buffers* %7, i32 0, i32 15, !dbg !6234
  store i32 1, i32* %use_bmesh, align 8, !dbg !6235
  %8 = load i32, i32* %smooth_shading.addr, align 4, !dbg !6236
  %9 = load %struct.GPU_PBVH_Buffers*, %struct.GPU_PBVH_Buffers** %buffers, align 8, !dbg !6237
  %smooth = getelementptr inbounds %struct.GPU_PBVH_Buffers, %struct.GPU_PBVH_Buffers* %9, i32 0, i32 18, !dbg !6238
  store i32 %8, i32* %smooth, align 4, !dbg !6239
  %10 = load %struct.GPU_PBVH_Buffers*, %struct.GPU_PBVH_Buffers** %buffers, align 8, !dbg !6240
  %show_diffuse_color = getelementptr inbounds %struct.GPU_PBVH_Buffers, %struct.GPU_PBVH_Buffers* %10, i32 0, i32 19, !dbg !6241
  store i8 0, i8* %show_diffuse_color, align 8, !dbg !6242
  %11 = load %struct.GPU_PBVH_Buffers*, %struct.GPU_PBVH_Buffers** %buffers, align 8, !dbg !6243
  %use_matcaps = getelementptr inbounds %struct.GPU_PBVH_Buffers, %struct.GPU_PBVH_Buffers* %11, i32 0, i32 20, !dbg !6244
  store i8 0, i8* %use_matcaps, align 1, !dbg !6245
  %12 = load %struct.GPU_PBVH_Buffers*, %struct.GPU_PBVH_Buffers** %buffers, align 8, !dbg !6246
  ret %struct.GPU_PBVH_Buffers* %12, !dbg !6247
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @GPU_draw_pbvh_buffers(%struct.GPU_PBVH_Buffers* %buffers, i32 (i32, i8*)* %setMaterial, i8 zeroext %wireframe) #0 !dbg !6248 {
entry:
  %buffers.addr = alloca %struct.GPU_PBVH_Buffers*, align 8
  %setMaterial.addr = alloca i32 (i32, i8*)*, align 8
  %wireframe.addr = alloca i8, align 1
  %f = alloca %struct.MFace*, align 8
  %f8 = alloca %struct.DMFlagMat*, align 8
  %offset = alloca i8*, align 8
  %i = alloca i32, align 4
  %last = alloca i32, align 4
  %totelem = alloca i32, align 4
  store %struct.GPU_PBVH_Buffers* %buffers, %struct.GPU_PBVH_Buffers** %buffers.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GPU_PBVH_Buffers** %buffers.addr, metadata !6251, metadata !DIExpression()), !dbg !6252
  store i32 (i32, i8*)* %setMaterial, i32 (i32, i8*)** %setMaterial.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (i32, i8*)** %setMaterial.addr, metadata !6253, metadata !DIExpression()), !dbg !6254
  store i8 %wireframe, i8* %wireframe.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %wireframe.addr, metadata !6255, metadata !DIExpression()), !dbg !6256
  %0 = load i32 (i32, i8*)*, i32 (i32, i8*)** %setMaterial.addr, align 8, !dbg !6257
  %tobool = icmp ne i32 (i32, i8*)* %0, null, !dbg !6257
  br i1 %tobool, label %if.then, label %if.end26, !dbg !6259

if.then:                                          ; preds = %entry
  %1 = load %struct.GPU_PBVH_Buffers*, %struct.GPU_PBVH_Buffers** %buffers.addr, align 8, !dbg !6260
  %totface = getelementptr inbounds %struct.GPU_PBVH_Buffers, %struct.GPU_PBVH_Buffers* %1, i32 0, i32 6, !dbg !6263
  %2 = load i32, i32* %totface, align 8, !dbg !6263
  %tobool1 = icmp ne i32 %2, 0, !dbg !6260
  br i1 %tobool1, label %if.then2, label %if.else, !dbg !6264

if.then2:                                         ; preds = %if.then
  call void @llvm.dbg.declare(metadata %struct.MFace** %f, metadata !6265, metadata !DIExpression()), !dbg !6267
  %3 = load %struct.GPU_PBVH_Buffers*, %struct.GPU_PBVH_Buffers** %buffers.addr, align 8, !dbg !6268
  %mface = getelementptr inbounds %struct.GPU_PBVH_Buffers, %struct.GPU_PBVH_Buffers* %3, i32 0, i32 3, !dbg !6269
  %4 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !6269
  %5 = load %struct.GPU_PBVH_Buffers*, %struct.GPU_PBVH_Buffers** %buffers.addr, align 8, !dbg !6270
  %face_indices = getelementptr inbounds %struct.GPU_PBVH_Buffers, %struct.GPU_PBVH_Buffers* %5, i32 0, i32 5, !dbg !6271
  %6 = load i32*, i32** %face_indices, align 8, !dbg !6271
  %arrayidx = getelementptr inbounds i32, i32* %6, i64 0, !dbg !6270
  %7 = load i32, i32* %arrayidx, align 4, !dbg !6270
  %idxprom = sext i32 %7 to i64, !dbg !6268
  %arrayidx3 = getelementptr inbounds %struct.MFace, %struct.MFace* %4, i64 %idxprom, !dbg !6268
  store %struct.MFace* %arrayidx3, %struct.MFace** %f, align 8, !dbg !6267
  %8 = load i32 (i32, i8*)*, i32 (i32, i8*)** %setMaterial.addr, align 8, !dbg !6272
  %9 = load %struct.MFace*, %struct.MFace** %f, align 8, !dbg !6274
  %mat_nr = getelementptr inbounds %struct.MFace, %struct.MFace* %9, i32 0, i32 4, !dbg !6275
  %10 = load i16, i16* %mat_nr, align 4, !dbg !6275
  %conv = sext i16 %10 to i32, !dbg !6274
  %add = add nsw i32 %conv, 1, !dbg !6276
  %call = call i32 %8(i32 %add, i8* null), !dbg !6272
  %tobool4 = icmp ne i32 %call, 0, !dbg !6272
  br i1 %tobool4, label %if.end, label %if.then5, !dbg !6277

if.then5:                                         ; preds = %if.then2
  br label %if.end88, !dbg !6278

if.end:                                           ; preds = %if.then2
  br label %if.end25, !dbg !6279

if.else:                                          ; preds = %if.then
  %11 = load %struct.GPU_PBVH_Buffers*, %struct.GPU_PBVH_Buffers** %buffers.addr, align 8, !dbg !6280
  %totgrid = getelementptr inbounds %struct.GPU_PBVH_Buffers, %struct.GPU_PBVH_Buffers* %11, i32 0, i32 13, !dbg !6282
  %12 = load i32, i32* %totgrid, align 8, !dbg !6282
  %tobool6 = icmp ne i32 %12, 0, !dbg !6280
  br i1 %tobool6, label %if.then7, label %if.else19, !dbg !6283

if.then7:                                         ; preds = %if.else
  call void @llvm.dbg.declare(metadata %struct.DMFlagMat** %f8, metadata !6284, metadata !DIExpression()), !dbg !6286
  %13 = load %struct.GPU_PBVH_Buffers*, %struct.GPU_PBVH_Buffers** %buffers.addr, align 8, !dbg !6287
  %grid_flag_mats = getelementptr inbounds %struct.GPU_PBVH_Buffers, %struct.GPU_PBVH_Buffers* %13, i32 0, i32 10, !dbg !6288
  %14 = load %struct.DMFlagMat*, %struct.DMFlagMat** %grid_flag_mats, align 8, !dbg !6288
  %15 = load %struct.GPU_PBVH_Buffers*, %struct.GPU_PBVH_Buffers** %buffers.addr, align 8, !dbg !6289
  %grid_indices = getelementptr inbounds %struct.GPU_PBVH_Buffers, %struct.GPU_PBVH_Buffers* %15, i32 0, i32 12, !dbg !6290
  %16 = load i32*, i32** %grid_indices, align 8, !dbg !6290
  %arrayidx9 = getelementptr inbounds i32, i32* %16, i64 0, !dbg !6289
  %17 = load i32, i32* %arrayidx9, align 4, !dbg !6289
  %idxprom10 = sext i32 %17 to i64, !dbg !6287
  %arrayidx11 = getelementptr inbounds %struct.DMFlagMat, %struct.DMFlagMat* %14, i64 %idxprom10, !dbg !6287
  store %struct.DMFlagMat* %arrayidx11, %struct.DMFlagMat** %f8, align 8, !dbg !6286
  %18 = load i32 (i32, i8*)*, i32 (i32, i8*)** %setMaterial.addr, align 8, !dbg !6291
  %19 = load %struct.DMFlagMat*, %struct.DMFlagMat** %f8, align 8, !dbg !6293
  %mat_nr12 = getelementptr inbounds %struct.DMFlagMat, %struct.DMFlagMat* %19, i32 0, i32 0, !dbg !6294
  %20 = load i16, i16* %mat_nr12, align 2, !dbg !6294
  %conv13 = sext i16 %20 to i32, !dbg !6293
  %add14 = add nsw i32 %conv13, 1, !dbg !6295
  %call15 = call i32 %18(i32 %add14, i8* null), !dbg !6291
  %tobool16 = icmp ne i32 %call15, 0, !dbg !6291
  br i1 %tobool16, label %if.end18, label %if.then17, !dbg !6296

if.then17:                                        ; preds = %if.then7
  br label %if.end88, !dbg !6297

if.end18:                                         ; preds = %if.then7
  br label %if.end24, !dbg !6298

if.else19:                                        ; preds = %if.else
  %21 = load i32 (i32, i8*)*, i32 (i32, i8*)** %setMaterial.addr, align 8, !dbg !6299
  %call20 = call i32 %21(i32 1, i8* null), !dbg !6299
  %tobool21 = icmp ne i32 %call20, 0, !dbg !6299
  br i1 %tobool21, label %if.end23, label %if.then22, !dbg !6302

if.then22:                                        ; preds = %if.else19
  br label %if.end88, !dbg !6303

if.end23:                                         ; preds = %if.else19
  br label %if.end24

if.end24:                                         ; preds = %if.end23, %if.end18
  br label %if.end25

if.end25:                                         ; preds = %if.end24, %if.end
  br label %if.end26, !dbg !6304

if.end26:                                         ; preds = %if.end25, %entry
  %22 = load %struct.GPU_PBVH_Buffers*, %struct.GPU_PBVH_Buffers** %buffers.addr, align 8, !dbg !6305
  %smooth = getelementptr inbounds %struct.GPU_PBVH_Buffers, %struct.GPU_PBVH_Buffers* %22, i32 0, i32 18, !dbg !6306
  %23 = load i32, i32* %smooth, align 4, !dbg !6306
  %tobool27 = icmp ne i32 %23, 0, !dbg !6305
  br i1 %tobool27, label %lor.end, label %lor.rhs, !dbg !6307

lor.rhs:                                          ; preds = %if.end26
  %24 = load %struct.GPU_PBVH_Buffers*, %struct.GPU_PBVH_Buffers** %buffers.addr, align 8, !dbg !6308
  %totface28 = getelementptr inbounds %struct.GPU_PBVH_Buffers, %struct.GPU_PBVH_Buffers* %24, i32 0, i32 6, !dbg !6309
  %25 = load i32, i32* %totface28, align 8, !dbg !6309
  %tobool29 = icmp ne i32 %25, 0, !dbg !6307
  br label %lor.end, !dbg !6307

lor.end:                                          ; preds = %lor.rhs, %if.end26
  %26 = phi i1 [ true, %if.end26 ], [ %tobool29, %lor.rhs ]
  %27 = zext i1 %26 to i64, !dbg !6310
  %cond = select i1 %26, i32 7425, i32 7424, !dbg !6310
  call void @glShadeModel(i32 %cond), !dbg !6311
  %28 = load %struct.GPU_PBVH_Buffers*, %struct.GPU_PBVH_Buffers** %buffers.addr, align 8, !dbg !6312
  %vert_buf = getelementptr inbounds %struct.GPU_PBVH_Buffers, %struct.GPU_PBVH_Buffers* %28, i32 0, i32 0, !dbg !6314
  %29 = load i32, i32* %vert_buf, align 8, !dbg !6314
  %tobool30 = icmp ne i32 %29, 0, !dbg !6312
  br i1 %tobool30, label %if.then31, label %if.else78, !dbg !6315

if.then31:                                        ; preds = %lor.end
  call void @glEnableClientState(i32 32884), !dbg !6316
  %30 = load i8, i8* %wireframe.addr, align 1, !dbg !6318
  %tobool32 = icmp ne i8 %30, 0, !dbg !6318
  br i1 %tobool32, label %if.end34, label %if.then33, !dbg !6320

if.then33:                                        ; preds = %if.then31
  call void @glEnableClientState(i32 32885), !dbg !6321
  call void @gpu_colors_enable(i32 0), !dbg !6323
  br label %if.end34, !dbg !6324

if.end34:                                         ; preds = %if.then33, %if.then31
  %31 = load void (i32, i32)*, void (i32, i32)** @__glewBindBufferARB, align 8, !dbg !6325
  %32 = load %struct.GPU_PBVH_Buffers*, %struct.GPU_PBVH_Buffers** %buffers.addr, align 8, !dbg !6326
  %vert_buf35 = getelementptr inbounds %struct.GPU_PBVH_Buffers, %struct.GPU_PBVH_Buffers* %32, i32 0, i32 0, !dbg !6327
  %33 = load i32, i32* %vert_buf35, align 8, !dbg !6327
  call void %31(i32 34962, i32 %33), !dbg !6325
  %34 = load %struct.GPU_PBVH_Buffers*, %struct.GPU_PBVH_Buffers** %buffers.addr, align 8, !dbg !6328
  %index_buf = getelementptr inbounds %struct.GPU_PBVH_Buffers, %struct.GPU_PBVH_Buffers* %34, i32 0, i32 1, !dbg !6330
  %35 = load i32, i32* %index_buf, align 4, !dbg !6330
  %tobool36 = icmp ne i32 %35, 0, !dbg !6328
  br i1 %tobool36, label %if.then37, label %if.end39, !dbg !6331

if.then37:                                        ; preds = %if.end34
  %36 = load void (i32, i32)*, void (i32, i32)** @__glewBindBufferARB, align 8, !dbg !6332
  %37 = load %struct.GPU_PBVH_Buffers*, %struct.GPU_PBVH_Buffers** %buffers.addr, align 8, !dbg !6333
  %index_buf38 = getelementptr inbounds %struct.GPU_PBVH_Buffers, %struct.GPU_PBVH_Buffers* %37, i32 0, i32 1, !dbg !6334
  %38 = load i32, i32* %index_buf38, align 4, !dbg !6334
  call void %36(i32 34963, i32 %38), !dbg !6332
  br label %if.end39, !dbg !6332

if.end39:                                         ; preds = %if.then37, %if.end34
  %39 = load i8, i8* %wireframe.addr, align 1, !dbg !6335
  %tobool40 = icmp ne i8 %39, 0, !dbg !6335
  br i1 %tobool40, label %if.then41, label %if.end42, !dbg !6337

if.then41:                                        ; preds = %if.end39
  call void @glPolygonMode(i32 1032, i32 6913), !dbg !6338
  br label %if.end42, !dbg !6338

if.end42:                                         ; preds = %if.then41, %if.end39
  %40 = load %struct.GPU_PBVH_Buffers*, %struct.GPU_PBVH_Buffers** %buffers.addr, align 8, !dbg !6339
  %tot_quad = getelementptr inbounds %struct.GPU_PBVH_Buffers, %struct.GPU_PBVH_Buffers* %40, i32 0, i32 17, !dbg !6341
  %41 = load i32, i32* %tot_quad, align 8, !dbg !6341
  %tobool43 = icmp ne i32 %41, 0, !dbg !6339
  br i1 %tobool43, label %if.then44, label %if.else55, !dbg !6342

if.then44:                                        ; preds = %if.end42
  call void @llvm.dbg.declare(metadata i8** %offset, metadata !6343, metadata !DIExpression()), !dbg !6345
  store i8* null, i8** %offset, align 8, !dbg !6345
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6346, metadata !DIExpression()), !dbg !6347
  call void @llvm.dbg.declare(metadata i32* %last, metadata !6348, metadata !DIExpression()), !dbg !6349
  %42 = load %struct.GPU_PBVH_Buffers*, %struct.GPU_PBVH_Buffers** %buffers.addr, align 8, !dbg !6350
  %has_hidden = getelementptr inbounds %struct.GPU_PBVH_Buffers, %struct.GPU_PBVH_Buffers* %42, i32 0, i32 14, !dbg !6351
  %43 = load i32, i32* %has_hidden, align 4, !dbg !6351
  %tobool45 = icmp ne i32 %43, 0, !dbg !6350
  br i1 %tobool45, label %cond.true, label %cond.false, !dbg !6350

cond.true:                                        ; preds = %if.then44
  br label %cond.end, !dbg !6350

cond.false:                                       ; preds = %if.then44
  %44 = load %struct.GPU_PBVH_Buffers*, %struct.GPU_PBVH_Buffers** %buffers.addr, align 8, !dbg !6352
  %totgrid46 = getelementptr inbounds %struct.GPU_PBVH_Buffers, %struct.GPU_PBVH_Buffers* %44, i32 0, i32 13, !dbg !6353
  %45 = load i32, i32* %totgrid46, align 8, !dbg !6353
  br label %cond.end, !dbg !6350

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond47 = phi i32 [ 1, %cond.true ], [ %45, %cond.false ], !dbg !6350
  store i32 %cond47, i32* %last, align 4, !dbg !6349
  store i32 0, i32* %i, align 4, !dbg !6354
  br label %for.cond, !dbg !6356

for.cond:                                         ; preds = %for.inc, %cond.end
  %46 = load i32, i32* %i, align 4, !dbg !6357
  %47 = load i32, i32* %last, align 4, !dbg !6359
  %cmp = icmp slt i32 %46, %47, !dbg !6360
  br i1 %cmp, label %for.body, label %for.end, !dbg !6361

for.body:                                         ; preds = %for.cond
  %48 = load i8*, i8** %offset, align 8, !dbg !6362
  %add.ptr = getelementptr inbounds i8, i8* %48, i64 0, !dbg !6364
  call void @glVertexPointer(i32 3, i32 5126, i32 24, i8* %add.ptr), !dbg !6365
  %49 = load i8*, i8** %offset, align 8, !dbg !6366
  %add.ptr49 = getelementptr inbounds i8, i8* %49, i64 12, !dbg !6367
  call void @glNormalPointer(i32 5122, i32 24, i8* %add.ptr49), !dbg !6368
  %50 = load i8*, i8** %offset, align 8, !dbg !6369
  %add.ptr50 = getelementptr inbounds i8, i8* %50, i64 20, !dbg !6370
  call void @glColorPointer(i32 3, i32 5121, i32 24, i8* %add.ptr50), !dbg !6371
  %51 = load %struct.GPU_PBVH_Buffers*, %struct.GPU_PBVH_Buffers** %buffers.addr, align 8, !dbg !6372
  %tot_quad51 = getelementptr inbounds %struct.GPU_PBVH_Buffers, %struct.GPU_PBVH_Buffers* %51, i32 0, i32 17, !dbg !6373
  %52 = load i32, i32* %tot_quad51, align 8, !dbg !6373
  %mul = mul i32 %52, 6, !dbg !6374
  %53 = load %struct.GPU_PBVH_Buffers*, %struct.GPU_PBVH_Buffers** %buffers.addr, align 8, !dbg !6375
  %index_type = getelementptr inbounds %struct.GPU_PBVH_Buffers, %struct.GPU_PBVH_Buffers* %53, i32 0, i32 2, !dbg !6376
  %54 = load i32, i32* %index_type, align 8, !dbg !6376
  call void @glDrawElements(i32 4, i32 %mul, i32 %54, i8* null), !dbg !6377
  %55 = load %struct.GPU_PBVH_Buffers*, %struct.GPU_PBVH_Buffers** %buffers.addr, align 8, !dbg !6378
  %gridkey = getelementptr inbounds %struct.GPU_PBVH_Buffers, %struct.GPU_PBVH_Buffers* %55, i32 0, i32 8, !dbg !6379
  %grid_area = getelementptr inbounds %struct.CCGKey, %struct.CCGKey* %gridkey, i32 0, i32 3, !dbg !6380
  %56 = load i32, i32* %grid_area, align 4, !dbg !6380
  %conv52 = sext i32 %56 to i64, !dbg !6378
  %mul53 = mul i64 %conv52, 24, !dbg !6381
  %57 = load i8*, i8** %offset, align 8, !dbg !6382
  %add.ptr54 = getelementptr inbounds i8, i8* %57, i64 %mul53, !dbg !6382
  store i8* %add.ptr54, i8** %offset, align 8, !dbg !6382
  br label %for.inc, !dbg !6383

for.inc:                                          ; preds = %for.body
  %58 = load i32, i32* %i, align 4, !dbg !6384
  %inc = add nsw i32 %58, 1, !dbg !6384
  store i32 %inc, i32* %i, align 4, !dbg !6384
  br label %for.cond, !dbg !6385, !llvm.loop !6386

for.end:                                          ; preds = %for.cond
  br label %if.end67, !dbg !6388

if.else55:                                        ; preds = %if.end42
  %59 = load %struct.GPU_PBVH_Buffers*, %struct.GPU_PBVH_Buffers** %buffers.addr, align 8, !dbg !6389
  %tot_tri = getelementptr inbounds %struct.GPU_PBVH_Buffers, %struct.GPU_PBVH_Buffers* %59, i32 0, i32 16, !dbg !6391
  %60 = load i32, i32* %tot_tri, align 4, !dbg !6391
  %tobool56 = icmp ne i32 %60, 0, !dbg !6389
  br i1 %tobool56, label %if.then57, label %if.end66, !dbg !6392

if.then57:                                        ; preds = %if.else55
  call void @llvm.dbg.declare(metadata i32* %totelem, metadata !6393, metadata !DIExpression()), !dbg !6395
  %61 = load %struct.GPU_PBVH_Buffers*, %struct.GPU_PBVH_Buffers** %buffers.addr, align 8, !dbg !6396
  %tot_tri58 = getelementptr inbounds %struct.GPU_PBVH_Buffers, %struct.GPU_PBVH_Buffers* %61, i32 0, i32 16, !dbg !6397
  %62 = load i32, i32* %tot_tri58, align 4, !dbg !6397
  %mul59 = mul i32 %62, 3, !dbg !6398
  store i32 %mul59, i32* %totelem, align 4, !dbg !6395
  call void @glVertexPointer(i32 3, i32 5126, i32 24, i8* null), !dbg !6399
  call void @glNormalPointer(i32 5122, i32 24, i8* inttoptr (i64 12 to i8*)), !dbg !6400
  call void @glColorPointer(i32 3, i32 5121, i32 24, i8* inttoptr (i64 20 to i8*)), !dbg !6401
  %63 = load %struct.GPU_PBVH_Buffers*, %struct.GPU_PBVH_Buffers** %buffers.addr, align 8, !dbg !6402
  %index_buf60 = getelementptr inbounds %struct.GPU_PBVH_Buffers, %struct.GPU_PBVH_Buffers* %63, i32 0, i32 1, !dbg !6404
  %64 = load i32, i32* %index_buf60, align 4, !dbg !6404
  %tobool61 = icmp ne i32 %64, 0, !dbg !6402
  br i1 %tobool61, label %if.then62, label %if.else64, !dbg !6405

if.then62:                                        ; preds = %if.then57
  %65 = load i32, i32* %totelem, align 4, !dbg !6406
  %66 = load %struct.GPU_PBVH_Buffers*, %struct.GPU_PBVH_Buffers** %buffers.addr, align 8, !dbg !6407
  %index_type63 = getelementptr inbounds %struct.GPU_PBVH_Buffers, %struct.GPU_PBVH_Buffers* %66, i32 0, i32 2, !dbg !6408
  %67 = load i32, i32* %index_type63, align 8, !dbg !6408
  call void @glDrawElements(i32 4, i32 %65, i32 %67, i8* null), !dbg !6409
  br label %if.end65, !dbg !6409

if.else64:                                        ; preds = %if.then57
  %68 = load i32, i32* %totelem, align 4, !dbg !6410
  call void @glDrawArrays(i32 4, i32 0, i32 %68), !dbg !6411
  br label %if.end65

if.end65:                                         ; preds = %if.else64, %if.then62
  br label %if.end66, !dbg !6412

if.end66:                                         ; preds = %if.end65, %if.else55
  br label %if.end67

if.end67:                                         ; preds = %if.end66, %for.end
  %69 = load i8, i8* %wireframe.addr, align 1, !dbg !6413
  %tobool68 = icmp ne i8 %69, 0, !dbg !6413
  br i1 %tobool68, label %if.then69, label %if.end70, !dbg !6415

if.then69:                                        ; preds = %if.end67
  call void @glPolygonMode(i32 1032, i32 6914), !dbg !6416
  br label %if.end70, !dbg !6416

if.end70:                                         ; preds = %if.then69, %if.end67
  %70 = load void (i32, i32)*, void (i32, i32)** @__glewBindBufferARB, align 8, !dbg !6417
  call void %70(i32 34962, i32 0), !dbg !6417
  %71 = load %struct.GPU_PBVH_Buffers*, %struct.GPU_PBVH_Buffers** %buffers.addr, align 8, !dbg !6418
  %index_buf71 = getelementptr inbounds %struct.GPU_PBVH_Buffers, %struct.GPU_PBVH_Buffers* %71, i32 0, i32 1, !dbg !6420
  %72 = load i32, i32* %index_buf71, align 4, !dbg !6420
  %tobool72 = icmp ne i32 %72, 0, !dbg !6418
  br i1 %tobool72, label %if.then73, label %if.end74, !dbg !6421

if.then73:                                        ; preds = %if.end70
  %73 = load void (i32, i32)*, void (i32, i32)** @__glewBindBufferARB, align 8, !dbg !6422
  call void %73(i32 34963, i32 0), !dbg !6422
  br label %if.end74, !dbg !6422

if.end74:                                         ; preds = %if.then73, %if.end70
  call void @glDisableClientState(i32 32884), !dbg !6423
  %74 = load i8, i8* %wireframe.addr, align 1, !dbg !6424
  %tobool75 = icmp ne i8 %74, 0, !dbg !6424
  br i1 %tobool75, label %if.end77, label %if.then76, !dbg !6426

if.then76:                                        ; preds = %if.end74
  call void @glDisableClientState(i32 32885), !dbg !6427
  call void @gpu_colors_disable(i32 0), !dbg !6429
  br label %if.end77, !dbg !6430

if.end77:                                         ; preds = %if.then76, %if.end74
  br label %if.end88, !dbg !6431

if.else78:                                        ; preds = %lor.end
  %75 = load %struct.GPU_PBVH_Buffers*, %struct.GPU_PBVH_Buffers** %buffers.addr, align 8, !dbg !6432
  %totface79 = getelementptr inbounds %struct.GPU_PBVH_Buffers, %struct.GPU_PBVH_Buffers* %75, i32 0, i32 6, !dbg !6434
  %76 = load i32, i32* %totface79, align 8, !dbg !6434
  %tobool80 = icmp ne i32 %76, 0, !dbg !6432
  br i1 %tobool80, label %if.then81, label %if.else82, !dbg !6435

if.then81:                                        ; preds = %if.else78
  %77 = load %struct.GPU_PBVH_Buffers*, %struct.GPU_PBVH_Buffers** %buffers.addr, align 8, !dbg !6436
  call void @gpu_draw_buffers_legacy_mesh(%struct.GPU_PBVH_Buffers* %77), !dbg !6438
  br label %if.end87, !dbg !6439

if.else82:                                        ; preds = %if.else78
  %78 = load %struct.GPU_PBVH_Buffers*, %struct.GPU_PBVH_Buffers** %buffers.addr, align 8, !dbg !6440
  %totgrid83 = getelementptr inbounds %struct.GPU_PBVH_Buffers, %struct.GPU_PBVH_Buffers* %78, i32 0, i32 13, !dbg !6442
  %79 = load i32, i32* %totgrid83, align 8, !dbg !6442
  %tobool84 = icmp ne i32 %79, 0, !dbg !6440
  br i1 %tobool84, label %if.then85, label %if.end86, !dbg !6443

if.then85:                                        ; preds = %if.else82
  %80 = load %struct.GPU_PBVH_Buffers*, %struct.GPU_PBVH_Buffers** %buffers.addr, align 8, !dbg !6444
  call void @gpu_draw_buffers_legacy_grids(%struct.GPU_PBVH_Buffers* %80), !dbg !6446
  br label %if.end86, !dbg !6447

if.end86:                                         ; preds = %if.then85, %if.else82
  br label %if.end87

if.end87:                                         ; preds = %if.end86, %if.then81
  br label %if.end88

if.end88:                                         ; preds = %if.then5, %if.then17, %if.then22, %if.end87, %if.end77
  ret void, !dbg !6448
}

declare dso_local void @glShadeModel(i32) #2

; Function Attrs: noinline nounwind uwtable
define internal void @gpu_colors_enable(i32 %vbo_state) #0 !dbg !6449 {
entry:
  %vbo_state.addr = alloca i32, align 4
  store i32 %vbo_state, i32* %vbo_state.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %vbo_state.addr, metadata !6453, metadata !DIExpression()), !dbg !6454
  call void @glColorMaterial(i32 1032, i32 4609), !dbg !6455
  call void @glEnable(i32 2903), !dbg !6456
  %0 = load i32, i32* %vbo_state.addr, align 4, !dbg !6457
  %cmp = icmp eq i32 %0, 0, !dbg !6459
  br i1 %cmp, label %if.then, label %if.end, !dbg !6460

if.then:                                          ; preds = %entry
  call void @glEnableClientState(i32 32886), !dbg !6461
  br label %if.end, !dbg !6461

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !6462
}

declare dso_local void @glPolygonMode(i32, i32) #2

declare dso_local void @glDrawArrays(i32, i32, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal void @gpu_colors_disable(i32 %vbo_state) #0 !dbg !6463 {
entry:
  %vbo_state.addr = alloca i32, align 4
  store i32 %vbo_state, i32* %vbo_state.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %vbo_state.addr, metadata !6464, metadata !DIExpression()), !dbg !6465
  call void @glDisable(i32 2903), !dbg !6466
  %0 = load i32, i32* %vbo_state.addr, align 4, !dbg !6467
  %cmp = icmp eq i32 %0, 0, !dbg !6469
  br i1 %cmp, label %if.then, label %if.end, !dbg !6470

if.then:                                          ; preds = %entry
  call void @glDisableClientState(i32 32886), !dbg !6471
  br label %if.end, !dbg !6471

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !6472
}

; Function Attrs: noinline nounwind uwtable
define internal void @gpu_draw_buffers_legacy_mesh(%struct.GPU_PBVH_Buffers* %buffers) #0 !dbg !6473 {
entry:
  %buffers.addr = alloca %struct.GPU_PBVH_Buffers*, align 8
  %mvert = alloca %struct.MVert*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %has_mask = alloca i32, align 4
  %face = alloca %struct.MFace*, align 8
  %diffuse_color = alloca [4 x float], align 16
  %f = alloca %struct.MFace*, align 8
  %S = alloca i32, align 4
  %fv = alloca i32*, align 8
  %fno = alloca [3 x float], align 4
  %fmask = alloca float, align 4
  store %struct.GPU_PBVH_Buffers* %buffers, %struct.GPU_PBVH_Buffers** %buffers.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GPU_PBVH_Buffers** %buffers.addr, metadata !6476, metadata !DIExpression()), !dbg !6477
  call void @llvm.dbg.declare(metadata %struct.MVert** %mvert, metadata !6478, metadata !DIExpression()), !dbg !6479
  %0 = load %struct.GPU_PBVH_Buffers*, %struct.GPU_PBVH_Buffers** %buffers.addr, align 8, !dbg !6480
  %mvert1 = getelementptr inbounds %struct.GPU_PBVH_Buffers, %struct.GPU_PBVH_Buffers* %0, i32 0, i32 4, !dbg !6481
  %1 = load %struct.MVert*, %struct.MVert** %mvert1, align 8, !dbg !6481
  store %struct.MVert* %1, %struct.MVert** %mvert, align 8, !dbg !6479
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6482, metadata !DIExpression()), !dbg !6483
  call void @llvm.dbg.declare(metadata i32* %j, metadata !6484, metadata !DIExpression()), !dbg !6485
  call void @llvm.dbg.declare(metadata i32* %has_mask, metadata !6486, metadata !DIExpression()), !dbg !6487
  %2 = load %struct.GPU_PBVH_Buffers*, %struct.GPU_PBVH_Buffers** %buffers.addr, align 8, !dbg !6488
  %vmask = getelementptr inbounds %struct.GPU_PBVH_Buffers, %struct.GPU_PBVH_Buffers* %2, i32 0, i32 7, !dbg !6489
  %3 = load float*, float** %vmask, align 8, !dbg !6489
  %cmp = icmp ne float* %3, null, !dbg !6490
  %conv = zext i1 %cmp to i32, !dbg !6490
  store i32 %conv, i32* %has_mask, align 4, !dbg !6487
  call void @llvm.dbg.declare(metadata %struct.MFace** %face, metadata !6491, metadata !DIExpression()), !dbg !6492
  %4 = load %struct.GPU_PBVH_Buffers*, %struct.GPU_PBVH_Buffers** %buffers.addr, align 8, !dbg !6493
  %mface = getelementptr inbounds %struct.GPU_PBVH_Buffers, %struct.GPU_PBVH_Buffers* %4, i32 0, i32 3, !dbg !6494
  %5 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !6494
  %6 = load %struct.GPU_PBVH_Buffers*, %struct.GPU_PBVH_Buffers** %buffers.addr, align 8, !dbg !6495
  %face_indices = getelementptr inbounds %struct.GPU_PBVH_Buffers, %struct.GPU_PBVH_Buffers* %6, i32 0, i32 5, !dbg !6496
  %7 = load i32*, i32** %face_indices, align 8, !dbg !6496
  %arrayidx = getelementptr inbounds i32, i32* %7, i64 0, !dbg !6495
  %8 = load i32, i32* %arrayidx, align 4, !dbg !6495
  %idxprom = sext i32 %8 to i64, !dbg !6493
  %arrayidx2 = getelementptr inbounds %struct.MFace, %struct.MFace* %5, i64 %idxprom, !dbg !6493
  store %struct.MFace* %arrayidx2, %struct.MFace** %face, align 8, !dbg !6492
  call void @llvm.dbg.declare(metadata [4 x float]* %diffuse_color, metadata !6497, metadata !DIExpression()), !dbg !6498
  %9 = bitcast [4 x float]* %diffuse_color to i8*, !dbg !6498
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %9, i8* align 16 bitcast ([4 x float]* @__const.gpu_draw_buffers_legacy_mesh.diffuse_color to i8*), i64 16, i1 false), !dbg !6498
  %10 = load %struct.GPU_PBVH_Buffers*, %struct.GPU_PBVH_Buffers** %buffers.addr, align 8, !dbg !6499
  %use_matcaps = getelementptr inbounds %struct.GPU_PBVH_Buffers, %struct.GPU_PBVH_Buffers* %10, i32 0, i32 20, !dbg !6501
  %11 = load i8, i8* %use_matcaps, align 1, !dbg !6501
  %tobool = icmp ne i8 %11, 0, !dbg !6499
  br i1 %tobool, label %if.then, label %if.else, !dbg !6502

if.then:                                          ; preds = %entry
  %arrayidx3 = getelementptr inbounds [4 x float], [4 x float]* %diffuse_color, i64 0, i64 2, !dbg !6503
  store float 1.000000e+00, float* %arrayidx3, align 8, !dbg !6504
  %arrayidx4 = getelementptr inbounds [4 x float], [4 x float]* %diffuse_color, i64 0, i64 1, !dbg !6505
  store float 1.000000e+00, float* %arrayidx4, align 4, !dbg !6506
  %arrayidx5 = getelementptr inbounds [4 x float], [4 x float]* %diffuse_color, i64 0, i64 0, !dbg !6507
  store float 1.000000e+00, float* %arrayidx5, align 16, !dbg !6508
  br label %if.end9, !dbg !6507

if.else:                                          ; preds = %entry
  %12 = load %struct.GPU_PBVH_Buffers*, %struct.GPU_PBVH_Buffers** %buffers.addr, align 8, !dbg !6509
  %show_diffuse_color = getelementptr inbounds %struct.GPU_PBVH_Buffers, %struct.GPU_PBVH_Buffers* %12, i32 0, i32 19, !dbg !6511
  %13 = load i8, i8* %show_diffuse_color, align 8, !dbg !6511
  %tobool6 = icmp ne i8 %13, 0, !dbg !6509
  br i1 %tobool6, label %if.then7, label %if.end, !dbg !6512

if.then7:                                         ; preds = %if.else
  %14 = load %struct.MFace*, %struct.MFace** %face, align 8, !dbg !6513
  %mat_nr = getelementptr inbounds %struct.MFace, %struct.MFace* %14, i32 0, i32 4, !dbg !6514
  %15 = load i16, i16* %mat_nr, align 4, !dbg !6514
  %conv8 = sext i16 %15 to i32, !dbg !6513
  %add = add nsw i32 %conv8, 1, !dbg !6515
  %arraydecay = getelementptr inbounds [4 x float], [4 x float]* %diffuse_color, i64 0, i64 0, !dbg !6516
  call void @GPU_material_diffuse_get(i32 %add, float* %arraydecay), !dbg !6517
  br label %if.end, !dbg !6517

if.end:                                           ; preds = %if.then7, %if.else
  br label %if.end9

if.end9:                                          ; preds = %if.end, %if.then
  %16 = load i32, i32* %has_mask, align 4, !dbg !6518
  %tobool10 = icmp ne i32 %16, 0, !dbg !6518
  br i1 %tobool10, label %if.then11, label %if.end12, !dbg !6520

if.then11:                                        ; preds = %if.end9
  call void @gpu_colors_enable(i32 1), !dbg !6521
  br label %if.end12, !dbg !6523

if.end12:                                         ; preds = %if.then11, %if.end9
  store i32 0, i32* %i, align 4, !dbg !6524
  br label %for.cond, !dbg !6526

for.cond:                                         ; preds = %for.inc140, %if.end12
  %17 = load i32, i32* %i, align 4, !dbg !6527
  %18 = load %struct.GPU_PBVH_Buffers*, %struct.GPU_PBVH_Buffers** %buffers.addr, align 8, !dbg !6529
  %totface = getelementptr inbounds %struct.GPU_PBVH_Buffers, %struct.GPU_PBVH_Buffers* %18, i32 0, i32 6, !dbg !6530
  %19 = load i32, i32* %totface, align 8, !dbg !6530
  %cmp13 = icmp slt i32 %17, %19, !dbg !6531
  br i1 %cmp13, label %for.body, label %for.end142, !dbg !6532

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.MFace** %f, metadata !6533, metadata !DIExpression()), !dbg !6535
  %20 = load %struct.GPU_PBVH_Buffers*, %struct.GPU_PBVH_Buffers** %buffers.addr, align 8, !dbg !6536
  %mface15 = getelementptr inbounds %struct.GPU_PBVH_Buffers, %struct.GPU_PBVH_Buffers* %20, i32 0, i32 3, !dbg !6537
  %21 = load %struct.MFace*, %struct.MFace** %mface15, align 8, !dbg !6537
  %22 = load %struct.GPU_PBVH_Buffers*, %struct.GPU_PBVH_Buffers** %buffers.addr, align 8, !dbg !6538
  %face_indices16 = getelementptr inbounds %struct.GPU_PBVH_Buffers, %struct.GPU_PBVH_Buffers* %22, i32 0, i32 5, !dbg !6539
  %23 = load i32*, i32** %face_indices16, align 8, !dbg !6539
  %24 = load i32, i32* %i, align 4, !dbg !6540
  %idxprom17 = sext i32 %24 to i64, !dbg !6538
  %arrayidx18 = getelementptr inbounds i32, i32* %23, i64 %idxprom17, !dbg !6538
  %25 = load i32, i32* %arrayidx18, align 4, !dbg !6538
  %idx.ext = sext i32 %25 to i64, !dbg !6541
  %add.ptr = getelementptr inbounds %struct.MFace, %struct.MFace* %21, i64 %idx.ext, !dbg !6541
  store %struct.MFace* %add.ptr, %struct.MFace** %f, align 8, !dbg !6535
  call void @llvm.dbg.declare(metadata i32* %S, metadata !6542, metadata !DIExpression()), !dbg !6543
  %26 = load %struct.MFace*, %struct.MFace** %f, align 8, !dbg !6544
  %v4 = getelementptr inbounds %struct.MFace, %struct.MFace* %26, i32 0, i32 3, !dbg !6545
  %27 = load i32, i32* %v4, align 4, !dbg !6545
  %tobool19 = icmp ne i32 %27, 0, !dbg !6544
  %28 = zext i1 %tobool19 to i64, !dbg !6544
  %cond = select i1 %tobool19, i32 4, i32 3, !dbg !6544
  store i32 %cond, i32* %S, align 4, !dbg !6543
  call void @llvm.dbg.declare(metadata i32** %fv, metadata !6546, metadata !DIExpression()), !dbg !6547
  %29 = load %struct.MFace*, %struct.MFace** %f, align 8, !dbg !6548
  %v1 = getelementptr inbounds %struct.MFace, %struct.MFace* %29, i32 0, i32 0, !dbg !6549
  store i32* %v1, i32** %fv, align 8, !dbg !6547
  %30 = load %struct.MFace*, %struct.MFace** %f, align 8, !dbg !6550
  %31 = load %struct.GPU_PBVH_Buffers*, %struct.GPU_PBVH_Buffers** %buffers.addr, align 8, !dbg !6552
  %mvert20 = getelementptr inbounds %struct.GPU_PBVH_Buffers, %struct.GPU_PBVH_Buffers* %31, i32 0, i32 4, !dbg !6553
  %32 = load %struct.MVert*, %struct.MVert** %mvert20, align 8, !dbg !6553
  %call = call zeroext i8 @paint_is_face_hidden(%struct.MFace* %30, %struct.MVert* %32), !dbg !6554
  %tobool21 = icmp ne i8 %call, 0, !dbg !6554
  br i1 %tobool21, label %if.then22, label %if.end23, !dbg !6555

if.then22:                                        ; preds = %for.body
  br label %for.inc140, !dbg !6556

if.end23:                                         ; preds = %for.body
  %33 = load %struct.MFace*, %struct.MFace** %f, align 8, !dbg !6557
  %v424 = getelementptr inbounds %struct.MFace, %struct.MFace* %33, i32 0, i32 3, !dbg !6558
  %34 = load i32, i32* %v424, align 4, !dbg !6558
  %tobool25 = icmp ne i32 %34, 0, !dbg !6559
  %35 = zext i1 %tobool25 to i64, !dbg !6559
  %cond26 = select i1 %tobool25, i32 7, i32 4, !dbg !6559
  call void @glBegin(i32 %cond26), !dbg !6560
  %36 = load %struct.GPU_PBVH_Buffers*, %struct.GPU_PBVH_Buffers** %buffers.addr, align 8, !dbg !6561
  %smooth = getelementptr inbounds %struct.GPU_PBVH_Buffers, %struct.GPU_PBVH_Buffers* %36, i32 0, i32 18, !dbg !6563
  %37 = load i32, i32* %smooth, align 4, !dbg !6563
  %tobool27 = icmp ne i32 %37, 0, !dbg !6561
  br i1 %tobool27, label %if.then28, label %if.else52, !dbg !6564

if.then28:                                        ; preds = %if.end23
  store i32 0, i32* %j, align 4, !dbg !6565
  br label %for.cond29, !dbg !6568

for.cond29:                                       ; preds = %for.inc, %if.then28
  %38 = load i32, i32* %j, align 4, !dbg !6569
  %39 = load i32, i32* %S, align 4, !dbg !6571
  %cmp30 = icmp slt i32 %38, %39, !dbg !6572
  br i1 %cmp30, label %for.body32, label %for.end, !dbg !6573

for.body32:                                       ; preds = %for.cond29
  %40 = load i32, i32* %has_mask, align 4, !dbg !6574
  %tobool33 = icmp ne i32 %40, 0, !dbg !6574
  br i1 %tobool33, label %if.then34, label %if.end41, !dbg !6577

if.then34:                                        ; preds = %for.body32
  %41 = load %struct.GPU_PBVH_Buffers*, %struct.GPU_PBVH_Buffers** %buffers.addr, align 8, !dbg !6578
  %vmask35 = getelementptr inbounds %struct.GPU_PBVH_Buffers, %struct.GPU_PBVH_Buffers* %41, i32 0, i32 7, !dbg !6580
  %42 = load float*, float** %vmask35, align 8, !dbg !6580
  %43 = load i32*, i32** %fv, align 8, !dbg !6581
  %44 = load i32, i32* %j, align 4, !dbg !6582
  %idxprom36 = sext i32 %44 to i64, !dbg !6581
  %arrayidx37 = getelementptr inbounds i32, i32* %43, i64 %idxprom36, !dbg !6581
  %45 = load i32, i32* %arrayidx37, align 4, !dbg !6581
  %idxprom38 = zext i32 %45 to i64, !dbg !6578
  %arrayidx39 = getelementptr inbounds float, float* %42, i64 %idxprom38, !dbg !6578
  %46 = load float, float* %arrayidx39, align 4, !dbg !6578
  %arraydecay40 = getelementptr inbounds [4 x float], [4 x float]* %diffuse_color, i64 0, i64 0, !dbg !6583
  call void @gpu_color_from_mask_set(float %46, float* %arraydecay40), !dbg !6584
  br label %if.end41, !dbg !6585

if.end41:                                         ; preds = %if.then34, %for.body32
  %47 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !6586
  %48 = load i32*, i32** %fv, align 8, !dbg !6587
  %49 = load i32, i32* %j, align 4, !dbg !6588
  %idxprom42 = sext i32 %49 to i64, !dbg !6587
  %arrayidx43 = getelementptr inbounds i32, i32* %48, i64 %idxprom42, !dbg !6587
  %50 = load i32, i32* %arrayidx43, align 4, !dbg !6587
  %idxprom44 = zext i32 %50 to i64, !dbg !6586
  %arrayidx45 = getelementptr inbounds %struct.MVert, %struct.MVert* %47, i64 %idxprom44, !dbg !6586
  %no = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx45, i32 0, i32 1, !dbg !6589
  %arraydecay46 = getelementptr inbounds [3 x i16], [3 x i16]* %no, i64 0, i64 0, !dbg !6586
  call void @glNormal3sv(i16* %arraydecay46), !dbg !6590
  %51 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !6591
  %52 = load i32*, i32** %fv, align 8, !dbg !6592
  %53 = load i32, i32* %j, align 4, !dbg !6593
  %idxprom47 = sext i32 %53 to i64, !dbg !6592
  %arrayidx48 = getelementptr inbounds i32, i32* %52, i64 %idxprom47, !dbg !6592
  %54 = load i32, i32* %arrayidx48, align 4, !dbg !6592
  %idxprom49 = zext i32 %54 to i64, !dbg !6591
  %arrayidx50 = getelementptr inbounds %struct.MVert, %struct.MVert* %51, i64 %idxprom49, !dbg !6591
  %co = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx50, i32 0, i32 0, !dbg !6594
  %arraydecay51 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !6591
  call void @glVertex3fv(float* %arraydecay51), !dbg !6595
  br label %for.inc, !dbg !6596

for.inc:                                          ; preds = %if.end41
  %55 = load i32, i32* %j, align 4, !dbg !6597
  %inc = add nsw i32 %55, 1, !dbg !6597
  store i32 %inc, i32* %j, align 4, !dbg !6597
  br label %for.cond29, !dbg !6598, !llvm.loop !6599

for.end:                                          ; preds = %for.cond29
  br label %if.end139, !dbg !6601

if.else52:                                        ; preds = %if.end23
  call void @llvm.dbg.declare(metadata [3 x float]* %fno, metadata !6602, metadata !DIExpression()), !dbg !6604
  %56 = load %struct.MFace*, %struct.MFace** %f, align 8, !dbg !6605
  %v453 = getelementptr inbounds %struct.MFace, %struct.MFace* %56, i32 0, i32 3, !dbg !6607
  %57 = load i32, i32* %v453, align 4, !dbg !6607
  %tobool54 = icmp ne i32 %57, 0, !dbg !6605
  br i1 %tobool54, label %if.then55, label %if.else78, !dbg !6608

if.then55:                                        ; preds = %if.else52
  %arraydecay56 = getelementptr inbounds [3 x float], [3 x float]* %fno, i64 0, i64 0, !dbg !6609
  %58 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !6611
  %59 = load i32*, i32** %fv, align 8, !dbg !6612
  %arrayidx57 = getelementptr inbounds i32, i32* %59, i64 0, !dbg !6612
  %60 = load i32, i32* %arrayidx57, align 4, !dbg !6612
  %idxprom58 = zext i32 %60 to i64, !dbg !6611
  %arrayidx59 = getelementptr inbounds %struct.MVert, %struct.MVert* %58, i64 %idxprom58, !dbg !6611
  %co60 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx59, i32 0, i32 0, !dbg !6613
  %arraydecay61 = getelementptr inbounds [3 x float], [3 x float]* %co60, i64 0, i64 0, !dbg !6611
  %61 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !6614
  %62 = load i32*, i32** %fv, align 8, !dbg !6615
  %arrayidx62 = getelementptr inbounds i32, i32* %62, i64 1, !dbg !6615
  %63 = load i32, i32* %arrayidx62, align 4, !dbg !6615
  %idxprom63 = zext i32 %63 to i64, !dbg !6614
  %arrayidx64 = getelementptr inbounds %struct.MVert, %struct.MVert* %61, i64 %idxprom63, !dbg !6614
  %co65 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx64, i32 0, i32 0, !dbg !6616
  %arraydecay66 = getelementptr inbounds [3 x float], [3 x float]* %co65, i64 0, i64 0, !dbg !6614
  %64 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !6617
  %65 = load i32*, i32** %fv, align 8, !dbg !6618
  %arrayidx67 = getelementptr inbounds i32, i32* %65, i64 2, !dbg !6618
  %66 = load i32, i32* %arrayidx67, align 4, !dbg !6618
  %idxprom68 = zext i32 %66 to i64, !dbg !6617
  %arrayidx69 = getelementptr inbounds %struct.MVert, %struct.MVert* %64, i64 %idxprom68, !dbg !6617
  %co70 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx69, i32 0, i32 0, !dbg !6619
  %arraydecay71 = getelementptr inbounds [3 x float], [3 x float]* %co70, i64 0, i64 0, !dbg !6617
  %67 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !6620
  %68 = load i32*, i32** %fv, align 8, !dbg !6621
  %arrayidx72 = getelementptr inbounds i32, i32* %68, i64 3, !dbg !6621
  %69 = load i32, i32* %arrayidx72, align 4, !dbg !6621
  %idxprom73 = zext i32 %69 to i64, !dbg !6620
  %arrayidx74 = getelementptr inbounds %struct.MVert, %struct.MVert* %67, i64 %idxprom73, !dbg !6620
  %co75 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx74, i32 0, i32 0, !dbg !6622
  %arraydecay76 = getelementptr inbounds [3 x float], [3 x float]* %co75, i64 0, i64 0, !dbg !6620
  %call77 = call float @normal_quad_v3(float* %arraydecay56, float* %arraydecay61, float* %arraydecay66, float* %arraydecay71, float* %arraydecay76), !dbg !6623
  br label %if.end96, !dbg !6624

if.else78:                                        ; preds = %if.else52
  %arraydecay79 = getelementptr inbounds [3 x float], [3 x float]* %fno, i64 0, i64 0, !dbg !6625
  %70 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !6626
  %71 = load i32*, i32** %fv, align 8, !dbg !6627
  %arrayidx80 = getelementptr inbounds i32, i32* %71, i64 0, !dbg !6627
  %72 = load i32, i32* %arrayidx80, align 4, !dbg !6627
  %idxprom81 = zext i32 %72 to i64, !dbg !6626
  %arrayidx82 = getelementptr inbounds %struct.MVert, %struct.MVert* %70, i64 %idxprom81, !dbg !6626
  %co83 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx82, i32 0, i32 0, !dbg !6628
  %arraydecay84 = getelementptr inbounds [3 x float], [3 x float]* %co83, i64 0, i64 0, !dbg !6626
  %73 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !6629
  %74 = load i32*, i32** %fv, align 8, !dbg !6630
  %arrayidx85 = getelementptr inbounds i32, i32* %74, i64 1, !dbg !6630
  %75 = load i32, i32* %arrayidx85, align 4, !dbg !6630
  %idxprom86 = zext i32 %75 to i64, !dbg !6629
  %arrayidx87 = getelementptr inbounds %struct.MVert, %struct.MVert* %73, i64 %idxprom86, !dbg !6629
  %co88 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx87, i32 0, i32 0, !dbg !6631
  %arraydecay89 = getelementptr inbounds [3 x float], [3 x float]* %co88, i64 0, i64 0, !dbg !6629
  %76 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !6632
  %77 = load i32*, i32** %fv, align 8, !dbg !6633
  %arrayidx90 = getelementptr inbounds i32, i32* %77, i64 2, !dbg !6633
  %78 = load i32, i32* %arrayidx90, align 4, !dbg !6633
  %idxprom91 = zext i32 %78 to i64, !dbg !6632
  %arrayidx92 = getelementptr inbounds %struct.MVert, %struct.MVert* %76, i64 %idxprom91, !dbg !6632
  %co93 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx92, i32 0, i32 0, !dbg !6634
  %arraydecay94 = getelementptr inbounds [3 x float], [3 x float]* %co93, i64 0, i64 0, !dbg !6632
  %call95 = call float @normal_tri_v3(float* %arraydecay79, float* %arraydecay84, float* %arraydecay89, float* %arraydecay94), !dbg !6635
  br label %if.end96

if.end96:                                         ; preds = %if.else78, %if.then55
  %arraydecay97 = getelementptr inbounds [3 x float], [3 x float]* %fno, i64 0, i64 0, !dbg !6636
  call void @glNormal3fv(float* %arraydecay97), !dbg !6637
  %79 = load i32, i32* %has_mask, align 4, !dbg !6638
  %tobool98 = icmp ne i32 %79, 0, !dbg !6638
  br i1 %tobool98, label %if.then99, label %if.end125, !dbg !6640

if.then99:                                        ; preds = %if.end96
  call void @llvm.dbg.declare(metadata float* %fmask, metadata !6641, metadata !DIExpression()), !dbg !6643
  %80 = load %struct.GPU_PBVH_Buffers*, %struct.GPU_PBVH_Buffers** %buffers.addr, align 8, !dbg !6644
  %vmask100 = getelementptr inbounds %struct.GPU_PBVH_Buffers, %struct.GPU_PBVH_Buffers* %80, i32 0, i32 7, !dbg !6645
  %81 = load float*, float** %vmask100, align 8, !dbg !6645
  %82 = load i32*, i32** %fv, align 8, !dbg !6646
  %arrayidx101 = getelementptr inbounds i32, i32* %82, i64 0, !dbg !6646
  %83 = load i32, i32* %arrayidx101, align 4, !dbg !6646
  %idxprom102 = zext i32 %83 to i64, !dbg !6644
  %arrayidx103 = getelementptr inbounds float, float* %81, i64 %idxprom102, !dbg !6644
  %84 = load float, float* %arrayidx103, align 4, !dbg !6644
  %85 = load %struct.GPU_PBVH_Buffers*, %struct.GPU_PBVH_Buffers** %buffers.addr, align 8, !dbg !6647
  %vmask104 = getelementptr inbounds %struct.GPU_PBVH_Buffers, %struct.GPU_PBVH_Buffers* %85, i32 0, i32 7, !dbg !6648
  %86 = load float*, float** %vmask104, align 8, !dbg !6648
  %87 = load i32*, i32** %fv, align 8, !dbg !6649
  %arrayidx105 = getelementptr inbounds i32, i32* %87, i64 1, !dbg !6649
  %88 = load i32, i32* %arrayidx105, align 4, !dbg !6649
  %idxprom106 = zext i32 %88 to i64, !dbg !6647
  %arrayidx107 = getelementptr inbounds float, float* %86, i64 %idxprom106, !dbg !6647
  %89 = load float, float* %arrayidx107, align 4, !dbg !6647
  %add108 = fadd float %84, %89, !dbg !6650
  %90 = load %struct.GPU_PBVH_Buffers*, %struct.GPU_PBVH_Buffers** %buffers.addr, align 8, !dbg !6651
  %vmask109 = getelementptr inbounds %struct.GPU_PBVH_Buffers, %struct.GPU_PBVH_Buffers* %90, i32 0, i32 7, !dbg !6652
  %91 = load float*, float** %vmask109, align 8, !dbg !6652
  %92 = load i32*, i32** %fv, align 8, !dbg !6653
  %arrayidx110 = getelementptr inbounds i32, i32* %92, i64 2, !dbg !6653
  %93 = load i32, i32* %arrayidx110, align 4, !dbg !6653
  %idxprom111 = zext i32 %93 to i64, !dbg !6651
  %arrayidx112 = getelementptr inbounds float, float* %91, i64 %idxprom111, !dbg !6651
  %94 = load float, float* %arrayidx112, align 4, !dbg !6651
  %add113 = fadd float %add108, %94, !dbg !6654
  store float %add113, float* %fmask, align 4, !dbg !6655
  %95 = load %struct.MFace*, %struct.MFace** %f, align 8, !dbg !6656
  %v4114 = getelementptr inbounds %struct.MFace, %struct.MFace* %95, i32 0, i32 3, !dbg !6658
  %96 = load i32, i32* %v4114, align 4, !dbg !6658
  %tobool115 = icmp ne i32 %96, 0, !dbg !6656
  br i1 %tobool115, label %if.then116, label %if.else122, !dbg !6659

if.then116:                                       ; preds = %if.then99
  %97 = load float, float* %fmask, align 4, !dbg !6660
  %98 = load %struct.GPU_PBVH_Buffers*, %struct.GPU_PBVH_Buffers** %buffers.addr, align 8, !dbg !6661
  %vmask117 = getelementptr inbounds %struct.GPU_PBVH_Buffers, %struct.GPU_PBVH_Buffers* %98, i32 0, i32 7, !dbg !6662
  %99 = load float*, float** %vmask117, align 8, !dbg !6662
  %100 = load i32*, i32** %fv, align 8, !dbg !6663
  %arrayidx118 = getelementptr inbounds i32, i32* %100, i64 3, !dbg !6663
  %101 = load i32, i32* %arrayidx118, align 4, !dbg !6663
  %idxprom119 = zext i32 %101 to i64, !dbg !6661
  %arrayidx120 = getelementptr inbounds float, float* %99, i64 %idxprom119, !dbg !6661
  %102 = load float, float* %arrayidx120, align 4, !dbg !6661
  %add121 = fadd float %97, %102, !dbg !6664
  %mul = fmul float %add121, 2.500000e-01, !dbg !6665
  store float %mul, float* %fmask, align 4, !dbg !6666
  br label %if.end123, !dbg !6667

if.else122:                                       ; preds = %if.then99
  %103 = load float, float* %fmask, align 4, !dbg !6668
  %div = fdiv float %103, 3.000000e+00, !dbg !6668
  store float %div, float* %fmask, align 4, !dbg !6668
  br label %if.end123

if.end123:                                        ; preds = %if.else122, %if.then116
  %104 = load float, float* %fmask, align 4, !dbg !6669
  %arraydecay124 = getelementptr inbounds [4 x float], [4 x float]* %diffuse_color, i64 0, i64 0, !dbg !6670
  call void @gpu_color_from_mask_set(float %104, float* %arraydecay124), !dbg !6671
  br label %if.end125, !dbg !6672

if.end125:                                        ; preds = %if.end123, %if.end96
  store i32 0, i32* %j, align 4, !dbg !6673
  br label %for.cond126, !dbg !6675

for.cond126:                                      ; preds = %for.inc136, %if.end125
  %105 = load i32, i32* %j, align 4, !dbg !6676
  %106 = load i32, i32* %S, align 4, !dbg !6678
  %cmp127 = icmp slt i32 %105, %106, !dbg !6679
  br i1 %cmp127, label %for.body129, label %for.end138, !dbg !6680

for.body129:                                      ; preds = %for.cond126
  %107 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !6681
  %108 = load i32*, i32** %fv, align 8, !dbg !6682
  %109 = load i32, i32* %j, align 4, !dbg !6683
  %idxprom130 = sext i32 %109 to i64, !dbg !6682
  %arrayidx131 = getelementptr inbounds i32, i32* %108, i64 %idxprom130, !dbg !6682
  %110 = load i32, i32* %arrayidx131, align 4, !dbg !6682
  %idxprom132 = zext i32 %110 to i64, !dbg !6681
  %arrayidx133 = getelementptr inbounds %struct.MVert, %struct.MVert* %107, i64 %idxprom132, !dbg !6681
  %co134 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx133, i32 0, i32 0, !dbg !6684
  %arraydecay135 = getelementptr inbounds [3 x float], [3 x float]* %co134, i64 0, i64 0, !dbg !6681
  call void @glVertex3fv(float* %arraydecay135), !dbg !6685
  br label %for.inc136, !dbg !6685

for.inc136:                                       ; preds = %for.body129
  %111 = load i32, i32* %j, align 4, !dbg !6686
  %inc137 = add nsw i32 %111, 1, !dbg !6686
  store i32 %inc137, i32* %j, align 4, !dbg !6686
  br label %for.cond126, !dbg !6687, !llvm.loop !6688

for.end138:                                       ; preds = %for.cond126
  br label %if.end139

if.end139:                                        ; preds = %for.end138, %for.end
  call void @glEnd(), !dbg !6690
  br label %for.inc140, !dbg !6691

for.inc140:                                       ; preds = %if.end139, %if.then22
  %112 = load i32, i32* %i, align 4, !dbg !6692
  %inc141 = add nsw i32 %112, 1, !dbg !6692
  store i32 %inc141, i32* %i, align 4, !dbg !6692
  br label %for.cond, !dbg !6693, !llvm.loop !6694

for.end142:                                       ; preds = %for.cond
  %113 = load i32, i32* %has_mask, align 4, !dbg !6696
  %tobool143 = icmp ne i32 %113, 0, !dbg !6696
  br i1 %tobool143, label %if.then144, label %if.end145, !dbg !6698

if.then144:                                       ; preds = %for.end142
  call void @gpu_colors_disable(i32 1), !dbg !6699
  br label %if.end145, !dbg !6701

if.end145:                                        ; preds = %if.then144, %for.end142
  ret void, !dbg !6702
}

; Function Attrs: noinline nounwind uwtable
define internal void @gpu_draw_buffers_legacy_grids(%struct.GPU_PBVH_Buffers* %buffers) #0 !dbg !6703 {
entry:
  %buffers.addr = alloca %struct.GPU_PBVH_Buffers*, align 8
  %key = alloca %struct.CCGKey*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %x = alloca i32, align 4
  %y = alloca i32, align 4
  %gridsize = alloca i32, align 4
  %has_mask = alloca i32, align 4
  %flags = alloca %struct.DMFlagMat*, align 8
  %diffuse_color = alloca [4 x float], align 16
  %g = alloca i32, align 4
  %grid = alloca %struct.CCGElem*, align 8
  %gh = alloca i32*, align 8
  %e = alloca [4 x %struct.CCGElem*], align 16
  %fno = alloca [3 x float], align 4
  %a = alloca %struct.CCGElem*, align 8
  %b = alloca %struct.CCGElem*, align 8
  %a147 = alloca %struct.CCGElem*, align 8
  %b149 = alloca %struct.CCGElem*, align 8
  %c = alloca %struct.CCGElem*, align 8
  %d = alloca %struct.CCGElem*, align 8
  %fno160 = alloca [3 x float], align 4
  store %struct.GPU_PBVH_Buffers* %buffers, %struct.GPU_PBVH_Buffers** %buffers.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GPU_PBVH_Buffers** %buffers.addr, metadata !6704, metadata !DIExpression()), !dbg !6705
  call void @llvm.dbg.declare(metadata %struct.CCGKey** %key, metadata !6706, metadata !DIExpression()), !dbg !6707
  %0 = load %struct.GPU_PBVH_Buffers*, %struct.GPU_PBVH_Buffers** %buffers.addr, align 8, !dbg !6708
  %gridkey = getelementptr inbounds %struct.GPU_PBVH_Buffers, %struct.GPU_PBVH_Buffers* %0, i32 0, i32 8, !dbg !6709
  store %struct.CCGKey* %gridkey, %struct.CCGKey** %key, align 8, !dbg !6707
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6710, metadata !DIExpression()), !dbg !6711
  call void @llvm.dbg.declare(metadata i32* %j, metadata !6712, metadata !DIExpression()), !dbg !6713
  call void @llvm.dbg.declare(metadata i32* %x, metadata !6714, metadata !DIExpression()), !dbg !6715
  call void @llvm.dbg.declare(metadata i32* %y, metadata !6716, metadata !DIExpression()), !dbg !6717
  call void @llvm.dbg.declare(metadata i32* %gridsize, metadata !6718, metadata !DIExpression()), !dbg !6719
  %1 = load %struct.GPU_PBVH_Buffers*, %struct.GPU_PBVH_Buffers** %buffers.addr, align 8, !dbg !6720
  %gridkey1 = getelementptr inbounds %struct.GPU_PBVH_Buffers, %struct.GPU_PBVH_Buffers* %1, i32 0, i32 8, !dbg !6721
  %grid_size = getelementptr inbounds %struct.CCGKey, %struct.CCGKey* %gridkey1, i32 0, i32 2, !dbg !6722
  %2 = load i32, i32* %grid_size, align 8, !dbg !6722
  store i32 %2, i32* %gridsize, align 4, !dbg !6719
  call void @llvm.dbg.declare(metadata i32* %has_mask, metadata !6723, metadata !DIExpression()), !dbg !6724
  %3 = load %struct.CCGKey*, %struct.CCGKey** %key, align 8, !dbg !6725
  %has_mask2 = getelementptr inbounds %struct.CCGKey, %struct.CCGKey* %3, i32 0, i32 9, !dbg !6726
  %4 = load i32, i32* %has_mask2, align 4, !dbg !6726
  store i32 %4, i32* %has_mask, align 4, !dbg !6724
  call void @llvm.dbg.declare(metadata %struct.DMFlagMat** %flags, metadata !6727, metadata !DIExpression()), !dbg !6728
  %5 = load %struct.GPU_PBVH_Buffers*, %struct.GPU_PBVH_Buffers** %buffers.addr, align 8, !dbg !6729
  %grid_flag_mats = getelementptr inbounds %struct.GPU_PBVH_Buffers, %struct.GPU_PBVH_Buffers* %5, i32 0, i32 10, !dbg !6730
  %6 = load %struct.DMFlagMat*, %struct.DMFlagMat** %grid_flag_mats, align 8, !dbg !6730
  %7 = load %struct.GPU_PBVH_Buffers*, %struct.GPU_PBVH_Buffers** %buffers.addr, align 8, !dbg !6731
  %grid_indices = getelementptr inbounds %struct.GPU_PBVH_Buffers, %struct.GPU_PBVH_Buffers* %7, i32 0, i32 12, !dbg !6732
  %8 = load i32*, i32** %grid_indices, align 8, !dbg !6732
  %arrayidx = getelementptr inbounds i32, i32* %8, i64 0, !dbg !6731
  %9 = load i32, i32* %arrayidx, align 4, !dbg !6731
  %idxprom = sext i32 %9 to i64, !dbg !6729
  %arrayidx3 = getelementptr inbounds %struct.DMFlagMat, %struct.DMFlagMat* %6, i64 %idxprom, !dbg !6729
  store %struct.DMFlagMat* %arrayidx3, %struct.DMFlagMat** %flags, align 8, !dbg !6728
  call void @llvm.dbg.declare(metadata [4 x float]* %diffuse_color, metadata !6733, metadata !DIExpression()), !dbg !6734
  %10 = bitcast [4 x float]* %diffuse_color to i8*, !dbg !6734
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %10, i8* align 16 bitcast ([4 x float]* @__const.gpu_draw_buffers_legacy_grids.diffuse_color to i8*), i64 16, i1 false), !dbg !6734
  %11 = load %struct.GPU_PBVH_Buffers*, %struct.GPU_PBVH_Buffers** %buffers.addr, align 8, !dbg !6735
  %use_matcaps = getelementptr inbounds %struct.GPU_PBVH_Buffers, %struct.GPU_PBVH_Buffers* %11, i32 0, i32 20, !dbg !6737
  %12 = load i8, i8* %use_matcaps, align 1, !dbg !6737
  %tobool = icmp ne i8 %12, 0, !dbg !6735
  br i1 %tobool, label %if.then, label %if.else, !dbg !6738

if.then:                                          ; preds = %entry
  %arrayidx4 = getelementptr inbounds [4 x float], [4 x float]* %diffuse_color, i64 0, i64 2, !dbg !6739
  store float 1.000000e+00, float* %arrayidx4, align 8, !dbg !6740
  %arrayidx5 = getelementptr inbounds [4 x float], [4 x float]* %diffuse_color, i64 0, i64 1, !dbg !6741
  store float 1.000000e+00, float* %arrayidx5, align 4, !dbg !6742
  %arrayidx6 = getelementptr inbounds [4 x float], [4 x float]* %diffuse_color, i64 0, i64 0, !dbg !6743
  store float 1.000000e+00, float* %arrayidx6, align 16, !dbg !6744
  br label %if.end9, !dbg !6743

if.else:                                          ; preds = %entry
  %13 = load %struct.GPU_PBVH_Buffers*, %struct.GPU_PBVH_Buffers** %buffers.addr, align 8, !dbg !6745
  %show_diffuse_color = getelementptr inbounds %struct.GPU_PBVH_Buffers, %struct.GPU_PBVH_Buffers* %13, i32 0, i32 19, !dbg !6747
  %14 = load i8, i8* %show_diffuse_color, align 8, !dbg !6747
  %tobool7 = icmp ne i8 %14, 0, !dbg !6745
  br i1 %tobool7, label %if.then8, label %if.end, !dbg !6748

if.then8:                                         ; preds = %if.else
  %15 = load %struct.DMFlagMat*, %struct.DMFlagMat** %flags, align 8, !dbg !6749
  %mat_nr = getelementptr inbounds %struct.DMFlagMat, %struct.DMFlagMat* %15, i32 0, i32 0, !dbg !6750
  %16 = load i16, i16* %mat_nr, align 2, !dbg !6750
  %conv = sext i16 %16 to i32, !dbg !6749
  %add = add nsw i32 %conv, 1, !dbg !6751
  %arraydecay = getelementptr inbounds [4 x float], [4 x float]* %diffuse_color, i64 0, i64 0, !dbg !6752
  call void @GPU_material_diffuse_get(i32 %add, float* %arraydecay), !dbg !6753
  br label %if.end, !dbg !6753

if.end:                                           ; preds = %if.then8, %if.else
  br label %if.end9

if.end9:                                          ; preds = %if.end, %if.then
  %17 = load i32, i32* %has_mask, align 4, !dbg !6754
  %tobool10 = icmp ne i32 %17, 0, !dbg !6754
  br i1 %tobool10, label %if.then11, label %if.end12, !dbg !6756

if.then11:                                        ; preds = %if.end9
  call void @gpu_colors_enable(i32 1), !dbg !6757
  br label %if.end12, !dbg !6759

if.end12:                                         ; preds = %if.then11, %if.end9
  store i32 0, i32* %i, align 4, !dbg !6760
  br label %for.cond, !dbg !6762

for.cond:                                         ; preds = %for.inc183, %if.end12
  %18 = load i32, i32* %i, align 4, !dbg !6763
  %19 = load %struct.GPU_PBVH_Buffers*, %struct.GPU_PBVH_Buffers** %buffers.addr, align 8, !dbg !6765
  %totgrid = getelementptr inbounds %struct.GPU_PBVH_Buffers, %struct.GPU_PBVH_Buffers* %19, i32 0, i32 13, !dbg !6766
  %20 = load i32, i32* %totgrid, align 8, !dbg !6766
  %cmp = icmp slt i32 %18, %20, !dbg !6767
  br i1 %cmp, label %for.body, label %for.end185, !dbg !6768

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %g, metadata !6769, metadata !DIExpression()), !dbg !6771
  %21 = load %struct.GPU_PBVH_Buffers*, %struct.GPU_PBVH_Buffers** %buffers.addr, align 8, !dbg !6772
  %grid_indices14 = getelementptr inbounds %struct.GPU_PBVH_Buffers, %struct.GPU_PBVH_Buffers* %21, i32 0, i32 12, !dbg !6773
  %22 = load i32*, i32** %grid_indices14, align 8, !dbg !6773
  %23 = load i32, i32* %i, align 4, !dbg !6774
  %idxprom15 = sext i32 %23 to i64, !dbg !6772
  %arrayidx16 = getelementptr inbounds i32, i32* %22, i64 %idxprom15, !dbg !6772
  %24 = load i32, i32* %arrayidx16, align 4, !dbg !6772
  store i32 %24, i32* %g, align 4, !dbg !6771
  call void @llvm.dbg.declare(metadata %struct.CCGElem** %grid, metadata !6775, metadata !DIExpression()), !dbg !6776
  %25 = load %struct.GPU_PBVH_Buffers*, %struct.GPU_PBVH_Buffers** %buffers.addr, align 8, !dbg !6777
  %grids = getelementptr inbounds %struct.GPU_PBVH_Buffers, %struct.GPU_PBVH_Buffers* %25, i32 0, i32 9, !dbg !6778
  %26 = load %struct.CCGElem**, %struct.CCGElem*** %grids, align 8, !dbg !6778
  %27 = load i32, i32* %g, align 4, !dbg !6779
  %idxprom17 = sext i32 %27 to i64, !dbg !6777
  %arrayidx18 = getelementptr inbounds %struct.CCGElem*, %struct.CCGElem** %26, i64 %idxprom17, !dbg !6777
  %28 = load %struct.CCGElem*, %struct.CCGElem** %arrayidx18, align 8, !dbg !6777
  store %struct.CCGElem* %28, %struct.CCGElem** %grid, align 8, !dbg !6776
  call void @llvm.dbg.declare(metadata i32** %gh, metadata !6780, metadata !DIExpression()), !dbg !6781
  %29 = load %struct.GPU_PBVH_Buffers*, %struct.GPU_PBVH_Buffers** %buffers.addr, align 8, !dbg !6782
  %grid_hidden = getelementptr inbounds %struct.GPU_PBVH_Buffers, %struct.GPU_PBVH_Buffers* %29, i32 0, i32 11, !dbg !6783
  %30 = load i32**, i32*** %grid_hidden, align 8, !dbg !6783
  %31 = load i32, i32* %g, align 4, !dbg !6784
  %idxprom19 = sext i32 %31 to i64, !dbg !6782
  %arrayidx20 = getelementptr inbounds i32*, i32** %30, i64 %idxprom19, !dbg !6782
  %32 = load i32*, i32** %arrayidx20, align 8, !dbg !6782
  store i32* %32, i32** %gh, align 8, !dbg !6781
  %33 = load i32*, i32** %gh, align 8, !dbg !6785
  %tobool21 = icmp ne i32* %33, null, !dbg !6785
  br i1 %tobool21, label %if.then22, label %if.else101, !dbg !6787

if.then22:                                        ; preds = %for.body
  call void @glBegin(i32 7), !dbg !6788
  store i32 0, i32* %y, align 4, !dbg !6790
  br label %for.cond23, !dbg !6792

for.cond23:                                       ; preds = %for.inc98, %if.then22
  %34 = load i32, i32* %y, align 4, !dbg !6793
  %35 = load i32, i32* %gridsize, align 4, !dbg !6795
  %sub = sub nsw i32 %35, 1, !dbg !6796
  %cmp24 = icmp slt i32 %34, %sub, !dbg !6797
  br i1 %cmp24, label %for.body26, label %for.end100, !dbg !6798

for.body26:                                       ; preds = %for.cond23
  store i32 0, i32* %x, align 4, !dbg !6799
  br label %for.cond27, !dbg !6802

for.cond27:                                       ; preds = %for.inc95, %for.body26
  %36 = load i32, i32* %x, align 4, !dbg !6803
  %37 = load i32, i32* %gridsize, align 4, !dbg !6805
  %sub28 = sub nsw i32 %37, 1, !dbg !6806
  %cmp29 = icmp slt i32 %36, %sub28, !dbg !6807
  br i1 %cmp29, label %for.body31, label %for.end97, !dbg !6808

for.body31:                                       ; preds = %for.cond27
  call void @llvm.dbg.declare(metadata [4 x %struct.CCGElem*]* %e, metadata !6809, metadata !DIExpression()), !dbg !6811
  %arrayinit.begin = getelementptr inbounds [4 x %struct.CCGElem*], [4 x %struct.CCGElem*]* %e, i64 0, i64 0, !dbg !6812
  %38 = load %struct.CCGKey*, %struct.CCGKey** %key, align 8, !dbg !6813
  %39 = load %struct.CCGElem*, %struct.CCGElem** %grid, align 8, !dbg !6814
  %40 = load i32, i32* %x, align 4, !dbg !6815
  %add32 = add nsw i32 %40, 1, !dbg !6816
  %41 = load i32, i32* %y, align 4, !dbg !6817
  %add33 = add nsw i32 %41, 1, !dbg !6818
  %call = call %struct.CCGElem* @CCG_grid_elem(%struct.CCGKey* %38, %struct.CCGElem* %39, i32 %add32, i32 %add33), !dbg !6819
  store %struct.CCGElem* %call, %struct.CCGElem** %arrayinit.begin, align 8, !dbg !6812
  %arrayinit.element = getelementptr inbounds %struct.CCGElem*, %struct.CCGElem** %arrayinit.begin, i64 1, !dbg !6812
  %42 = load %struct.CCGKey*, %struct.CCGKey** %key, align 8, !dbg !6820
  %43 = load %struct.CCGElem*, %struct.CCGElem** %grid, align 8, !dbg !6821
  %44 = load i32, i32* %x, align 4, !dbg !6822
  %add34 = add nsw i32 %44, 1, !dbg !6823
  %45 = load i32, i32* %y, align 4, !dbg !6824
  %call35 = call %struct.CCGElem* @CCG_grid_elem(%struct.CCGKey* %42, %struct.CCGElem* %43, i32 %add34, i32 %45), !dbg !6825
  store %struct.CCGElem* %call35, %struct.CCGElem** %arrayinit.element, align 8, !dbg !6812
  %arrayinit.element36 = getelementptr inbounds %struct.CCGElem*, %struct.CCGElem** %arrayinit.element, i64 1, !dbg !6812
  %46 = load %struct.CCGKey*, %struct.CCGKey** %key, align 8, !dbg !6826
  %47 = load %struct.CCGElem*, %struct.CCGElem** %grid, align 8, !dbg !6827
  %48 = load i32, i32* %x, align 4, !dbg !6828
  %49 = load i32, i32* %y, align 4, !dbg !6829
  %call37 = call %struct.CCGElem* @CCG_grid_elem(%struct.CCGKey* %46, %struct.CCGElem* %47, i32 %48, i32 %49), !dbg !6830
  store %struct.CCGElem* %call37, %struct.CCGElem** %arrayinit.element36, align 8, !dbg !6812
  %arrayinit.element38 = getelementptr inbounds %struct.CCGElem*, %struct.CCGElem** %arrayinit.element36, i64 1, !dbg !6812
  %50 = load %struct.CCGKey*, %struct.CCGKey** %key, align 8, !dbg !6831
  %51 = load %struct.CCGElem*, %struct.CCGElem** %grid, align 8, !dbg !6832
  %52 = load i32, i32* %x, align 4, !dbg !6833
  %53 = load i32, i32* %y, align 4, !dbg !6834
  %add39 = add nsw i32 %53, 1, !dbg !6835
  %call40 = call %struct.CCGElem* @CCG_grid_elem(%struct.CCGKey* %50, %struct.CCGElem* %51, i32 %52, i32 %add39), !dbg !6836
  store %struct.CCGElem* %call40, %struct.CCGElem** %arrayinit.element38, align 8, !dbg !6812
  %54 = load i32*, i32** %gh, align 8, !dbg !6837
  %55 = load i32, i32* %gridsize, align 4, !dbg !6839
  %56 = load i32, i32* %x, align 4, !dbg !6840
  %57 = load i32, i32* %y, align 4, !dbg !6841
  %call41 = call zeroext i8 @paint_is_grid_face_hidden(i32* %54, i32 %55, i32 %56, i32 %57), !dbg !6842
  %tobool42 = icmp ne i8 %call41, 0, !dbg !6842
  br i1 %tobool42, label %if.then43, label %if.end44, !dbg !6843

if.then43:                                        ; preds = %for.body31
  br label %for.inc95, !dbg !6844

if.end44:                                         ; preds = %for.body31
  %58 = load %struct.GPU_PBVH_Buffers*, %struct.GPU_PBVH_Buffers** %buffers.addr, align 8, !dbg !6845
  %smooth = getelementptr inbounds %struct.GPU_PBVH_Buffers, %struct.GPU_PBVH_Buffers* %58, i32 0, i32 18, !dbg !6847
  %59 = load i32, i32* %smooth, align 4, !dbg !6847
  %tobool45 = icmp ne i32 %59, 0, !dbg !6845
  br i1 %tobool45, label %if.then46, label %if.else64, !dbg !6848

if.then46:                                        ; preds = %if.end44
  store i32 0, i32* %j, align 4, !dbg !6849
  br label %for.cond47, !dbg !6852

for.cond47:                                       ; preds = %for.inc, %if.then46
  %60 = load i32, i32* %j, align 4, !dbg !6853
  %cmp48 = icmp slt i32 %60, 4, !dbg !6855
  br i1 %cmp48, label %for.body50, label %for.end, !dbg !6856

for.body50:                                       ; preds = %for.cond47
  %61 = load i32, i32* %has_mask, align 4, !dbg !6857
  %tobool51 = icmp ne i32 %61, 0, !dbg !6857
  br i1 %tobool51, label %if.then52, label %if.end57, !dbg !6860

if.then52:                                        ; preds = %for.body50
  %62 = load %struct.CCGKey*, %struct.CCGKey** %key, align 8, !dbg !6861
  %63 = load i32, i32* %j, align 4, !dbg !6863
  %idxprom53 = sext i32 %63 to i64, !dbg !6864
  %arrayidx54 = getelementptr inbounds [4 x %struct.CCGElem*], [4 x %struct.CCGElem*]* %e, i64 0, i64 %idxprom53, !dbg !6864
  %64 = load %struct.CCGElem*, %struct.CCGElem** %arrayidx54, align 8, !dbg !6864
  %call55 = call float* @CCG_elem_mask(%struct.CCGKey* %62, %struct.CCGElem* %64), !dbg !6865
  %65 = load float, float* %call55, align 4, !dbg !6866
  %arraydecay56 = getelementptr inbounds [4 x float], [4 x float]* %diffuse_color, i64 0, i64 0, !dbg !6867
  call void @gpu_color_from_mask_set(float %65, float* %arraydecay56), !dbg !6868
  br label %if.end57, !dbg !6869

if.end57:                                         ; preds = %if.then52, %for.body50
  %66 = load %struct.CCGKey*, %struct.CCGKey** %key, align 8, !dbg !6870
  %67 = load i32, i32* %j, align 4, !dbg !6871
  %idxprom58 = sext i32 %67 to i64, !dbg !6872
  %arrayidx59 = getelementptr inbounds [4 x %struct.CCGElem*], [4 x %struct.CCGElem*]* %e, i64 0, i64 %idxprom58, !dbg !6872
  %68 = load %struct.CCGElem*, %struct.CCGElem** %arrayidx59, align 8, !dbg !6872
  %call60 = call float* @CCG_elem_no(%struct.CCGKey* %66, %struct.CCGElem* %68), !dbg !6873
  call void @glNormal3fv(float* %call60), !dbg !6874
  %69 = load %struct.CCGKey*, %struct.CCGKey** %key, align 8, !dbg !6875
  %70 = load i32, i32* %j, align 4, !dbg !6876
  %idxprom61 = sext i32 %70 to i64, !dbg !6877
  %arrayidx62 = getelementptr inbounds [4 x %struct.CCGElem*], [4 x %struct.CCGElem*]* %e, i64 0, i64 %idxprom61, !dbg !6877
  %71 = load %struct.CCGElem*, %struct.CCGElem** %arrayidx62, align 8, !dbg !6877
  %call63 = call float* @CCG_elem_co(%struct.CCGKey* %69, %struct.CCGElem* %71), !dbg !6878
  call void @glVertex3fv(float* %call63), !dbg !6879
  br label %for.inc, !dbg !6880

for.inc:                                          ; preds = %if.end57
  %72 = load i32, i32* %j, align 4, !dbg !6881
  %inc = add nsw i32 %72, 1, !dbg !6881
  store i32 %inc, i32* %j, align 4, !dbg !6881
  br label %for.cond47, !dbg !6882, !llvm.loop !6883

for.end:                                          ; preds = %for.cond47
  br label %if.end94, !dbg !6885

if.else64:                                        ; preds = %if.end44
  call void @llvm.dbg.declare(metadata [3 x float]* %fno, metadata !6886, metadata !DIExpression()), !dbg !6888
  %arraydecay65 = getelementptr inbounds [3 x float], [3 x float]* %fno, i64 0, i64 0, !dbg !6889
  %73 = load %struct.CCGKey*, %struct.CCGKey** %key, align 8, !dbg !6890
  %arrayidx66 = getelementptr inbounds [4 x %struct.CCGElem*], [4 x %struct.CCGElem*]* %e, i64 0, i64 0, !dbg !6891
  %74 = load %struct.CCGElem*, %struct.CCGElem** %arrayidx66, align 16, !dbg !6891
  %call67 = call float* @CCG_elem_co(%struct.CCGKey* %73, %struct.CCGElem* %74), !dbg !6892
  %75 = load %struct.CCGKey*, %struct.CCGKey** %key, align 8, !dbg !6893
  %arrayidx68 = getelementptr inbounds [4 x %struct.CCGElem*], [4 x %struct.CCGElem*]* %e, i64 0, i64 1, !dbg !6894
  %76 = load %struct.CCGElem*, %struct.CCGElem** %arrayidx68, align 8, !dbg !6894
  %call69 = call float* @CCG_elem_co(%struct.CCGKey* %75, %struct.CCGElem* %76), !dbg !6895
  %77 = load %struct.CCGKey*, %struct.CCGKey** %key, align 8, !dbg !6896
  %arrayidx70 = getelementptr inbounds [4 x %struct.CCGElem*], [4 x %struct.CCGElem*]* %e, i64 0, i64 2, !dbg !6897
  %78 = load %struct.CCGElem*, %struct.CCGElem** %arrayidx70, align 16, !dbg !6897
  %call71 = call float* @CCG_elem_co(%struct.CCGKey* %77, %struct.CCGElem* %78), !dbg !6898
  %79 = load %struct.CCGKey*, %struct.CCGKey** %key, align 8, !dbg !6899
  %arrayidx72 = getelementptr inbounds [4 x %struct.CCGElem*], [4 x %struct.CCGElem*]* %e, i64 0, i64 3, !dbg !6900
  %80 = load %struct.CCGElem*, %struct.CCGElem** %arrayidx72, align 8, !dbg !6900
  %call73 = call float* @CCG_elem_co(%struct.CCGKey* %79, %struct.CCGElem* %80), !dbg !6901
  %call74 = call float @normal_quad_v3(float* %arraydecay65, float* %call67, float* %call69, float* %call71, float* %call73), !dbg !6902
  %arraydecay75 = getelementptr inbounds [3 x float], [3 x float]* %fno, i64 0, i64 0, !dbg !6903
  call void @glNormal3fv(float* %arraydecay75), !dbg !6904
  %81 = load i32, i32* %has_mask, align 4, !dbg !6905
  %tobool76 = icmp ne i32 %81, 0, !dbg !6905
  br i1 %tobool76, label %if.then77, label %if.end83, !dbg !6907

if.then77:                                        ; preds = %if.else64
  %82 = load %struct.CCGKey*, %struct.CCGKey** %key, align 8, !dbg !6908
  %arrayidx78 = getelementptr inbounds [4 x %struct.CCGElem*], [4 x %struct.CCGElem*]* %e, i64 0, i64 0, !dbg !6910
  %83 = load %struct.CCGElem*, %struct.CCGElem** %arrayidx78, align 16, !dbg !6910
  %arrayidx79 = getelementptr inbounds [4 x %struct.CCGElem*], [4 x %struct.CCGElem*]* %e, i64 0, i64 1, !dbg !6911
  %84 = load %struct.CCGElem*, %struct.CCGElem** %arrayidx79, align 8, !dbg !6911
  %arrayidx80 = getelementptr inbounds [4 x %struct.CCGElem*], [4 x %struct.CCGElem*]* %e, i64 0, i64 2, !dbg !6912
  %85 = load %struct.CCGElem*, %struct.CCGElem** %arrayidx80, align 16, !dbg !6912
  %arrayidx81 = getelementptr inbounds [4 x %struct.CCGElem*], [4 x %struct.CCGElem*]* %e, i64 0, i64 3, !dbg !6913
  %86 = load %struct.CCGElem*, %struct.CCGElem** %arrayidx81, align 8, !dbg !6913
  %arraydecay82 = getelementptr inbounds [4 x float], [4 x float]* %diffuse_color, i64 0, i64 0, !dbg !6914
  call void @gpu_color_from_mask_quad_set(%struct.CCGKey* %82, %struct.CCGElem* %83, %struct.CCGElem* %84, %struct.CCGElem* %85, %struct.CCGElem* %86, float* %arraydecay82), !dbg !6915
  br label %if.end83, !dbg !6916

if.end83:                                         ; preds = %if.then77, %if.else64
  store i32 0, i32* %j, align 4, !dbg !6917
  br label %for.cond84, !dbg !6919

for.cond84:                                       ; preds = %for.inc91, %if.end83
  %87 = load i32, i32* %j, align 4, !dbg !6920
  %cmp85 = icmp slt i32 %87, 4, !dbg !6922
  br i1 %cmp85, label %for.body87, label %for.end93, !dbg !6923

for.body87:                                       ; preds = %for.cond84
  %88 = load %struct.CCGKey*, %struct.CCGKey** %key, align 8, !dbg !6924
  %89 = load i32, i32* %j, align 4, !dbg !6925
  %idxprom88 = sext i32 %89 to i64, !dbg !6926
  %arrayidx89 = getelementptr inbounds [4 x %struct.CCGElem*], [4 x %struct.CCGElem*]* %e, i64 0, i64 %idxprom88, !dbg !6926
  %90 = load %struct.CCGElem*, %struct.CCGElem** %arrayidx89, align 8, !dbg !6926
  %call90 = call float* @CCG_elem_co(%struct.CCGKey* %88, %struct.CCGElem* %90), !dbg !6927
  call void @glVertex3fv(float* %call90), !dbg !6928
  br label %for.inc91, !dbg !6928

for.inc91:                                        ; preds = %for.body87
  %91 = load i32, i32* %j, align 4, !dbg !6929
  %inc92 = add nsw i32 %91, 1, !dbg !6929
  store i32 %inc92, i32* %j, align 4, !dbg !6929
  br label %for.cond84, !dbg !6930, !llvm.loop !6931

for.end93:                                        ; preds = %for.cond84
  br label %if.end94

if.end94:                                         ; preds = %for.end93, %for.end
  br label %for.inc95, !dbg !6933

for.inc95:                                        ; preds = %if.end94, %if.then43
  %92 = load i32, i32* %x, align 4, !dbg !6934
  %inc96 = add nsw i32 %92, 1, !dbg !6934
  store i32 %inc96, i32* %x, align 4, !dbg !6934
  br label %for.cond27, !dbg !6935, !llvm.loop !6936

for.end97:                                        ; preds = %for.cond27
  br label %for.inc98, !dbg !6938

for.inc98:                                        ; preds = %for.end97
  %93 = load i32, i32* %y, align 4, !dbg !6939
  %inc99 = add nsw i32 %93, 1, !dbg !6939
  store i32 %inc99, i32* %y, align 4, !dbg !6939
  br label %for.cond23, !dbg !6940, !llvm.loop !6941

for.end100:                                       ; preds = %for.cond23
  call void @glEnd(), !dbg !6943
  br label %if.end182, !dbg !6944

if.else101:                                       ; preds = %for.body
  %94 = load %struct.GPU_PBVH_Buffers*, %struct.GPU_PBVH_Buffers** %buffers.addr, align 8, !dbg !6945
  %smooth102 = getelementptr inbounds %struct.GPU_PBVH_Buffers, %struct.GPU_PBVH_Buffers* %94, i32 0, i32 18, !dbg !6947
  %95 = load i32, i32* %smooth102, align 4, !dbg !6947
  %tobool103 = icmp ne i32 %95, 0, !dbg !6945
  br i1 %tobool103, label %if.then104, label %if.else137, !dbg !6948

if.then104:                                       ; preds = %if.else101
  store i32 0, i32* %y, align 4, !dbg !6949
  br label %for.cond105, !dbg !6952

for.cond105:                                      ; preds = %for.inc134, %if.then104
  %96 = load i32, i32* %y, align 4, !dbg !6953
  %97 = load i32, i32* %gridsize, align 4, !dbg !6955
  %sub106 = sub nsw i32 %97, 1, !dbg !6956
  %cmp107 = icmp slt i32 %96, %sub106, !dbg !6957
  br i1 %cmp107, label %for.body109, label %for.end136, !dbg !6958

for.body109:                                      ; preds = %for.cond105
  call void @glBegin(i32 8), !dbg !6959
  store i32 0, i32* %x, align 4, !dbg !6961
  br label %for.cond110, !dbg !6963

for.cond110:                                      ; preds = %for.inc131, %for.body109
  %98 = load i32, i32* %x, align 4, !dbg !6964
  %99 = load i32, i32* %gridsize, align 4, !dbg !6966
  %cmp111 = icmp slt i32 %98, %99, !dbg !6967
  br i1 %cmp111, label %for.body113, label %for.end133, !dbg !6968

for.body113:                                      ; preds = %for.cond110
  call void @llvm.dbg.declare(metadata %struct.CCGElem** %a, metadata !6969, metadata !DIExpression()), !dbg !6971
  %100 = load %struct.CCGKey*, %struct.CCGKey** %key, align 8, !dbg !6972
  %101 = load %struct.CCGElem*, %struct.CCGElem** %grid, align 8, !dbg !6973
  %102 = load i32, i32* %x, align 4, !dbg !6974
  %103 = load i32, i32* %y, align 4, !dbg !6975
  %call114 = call %struct.CCGElem* @CCG_grid_elem(%struct.CCGKey* %100, %struct.CCGElem* %101, i32 %102, i32 %103), !dbg !6976
  store %struct.CCGElem* %call114, %struct.CCGElem** %a, align 8, !dbg !6971
  call void @llvm.dbg.declare(metadata %struct.CCGElem** %b, metadata !6977, metadata !DIExpression()), !dbg !6978
  %104 = load %struct.CCGKey*, %struct.CCGKey** %key, align 8, !dbg !6979
  %105 = load %struct.CCGElem*, %struct.CCGElem** %grid, align 8, !dbg !6980
  %106 = load i32, i32* %x, align 4, !dbg !6981
  %107 = load i32, i32* %y, align 4, !dbg !6982
  %add115 = add nsw i32 %107, 1, !dbg !6983
  %call116 = call %struct.CCGElem* @CCG_grid_elem(%struct.CCGKey* %104, %struct.CCGElem* %105, i32 %106, i32 %add115), !dbg !6984
  store %struct.CCGElem* %call116, %struct.CCGElem** %b, align 8, !dbg !6978
  %108 = load i32, i32* %has_mask, align 4, !dbg !6985
  %tobool117 = icmp ne i32 %108, 0, !dbg !6985
  br i1 %tobool117, label %if.then118, label %if.end121, !dbg !6987

if.then118:                                       ; preds = %for.body113
  %109 = load %struct.CCGKey*, %struct.CCGKey** %key, align 8, !dbg !6988
  %110 = load %struct.CCGElem*, %struct.CCGElem** %a, align 8, !dbg !6990
  %call119 = call float* @CCG_elem_mask(%struct.CCGKey* %109, %struct.CCGElem* %110), !dbg !6991
  %111 = load float, float* %call119, align 4, !dbg !6992
  %arraydecay120 = getelementptr inbounds [4 x float], [4 x float]* %diffuse_color, i64 0, i64 0, !dbg !6993
  call void @gpu_color_from_mask_set(float %111, float* %arraydecay120), !dbg !6994
  br label %if.end121, !dbg !6995

if.end121:                                        ; preds = %if.then118, %for.body113
  %112 = load %struct.CCGKey*, %struct.CCGKey** %key, align 8, !dbg !6996
  %113 = load %struct.CCGElem*, %struct.CCGElem** %a, align 8, !dbg !6997
  %call122 = call float* @CCG_elem_no(%struct.CCGKey* %112, %struct.CCGElem* %113), !dbg !6998
  call void @glNormal3fv(float* %call122), !dbg !6999
  %114 = load %struct.CCGKey*, %struct.CCGKey** %key, align 8, !dbg !7000
  %115 = load %struct.CCGElem*, %struct.CCGElem** %a, align 8, !dbg !7001
  %call123 = call float* @CCG_elem_co(%struct.CCGKey* %114, %struct.CCGElem* %115), !dbg !7002
  call void @glVertex3fv(float* %call123), !dbg !7003
  %116 = load i32, i32* %has_mask, align 4, !dbg !7004
  %tobool124 = icmp ne i32 %116, 0, !dbg !7004
  br i1 %tobool124, label %if.then125, label %if.end128, !dbg !7006

if.then125:                                       ; preds = %if.end121
  %117 = load %struct.CCGKey*, %struct.CCGKey** %key, align 8, !dbg !7007
  %118 = load %struct.CCGElem*, %struct.CCGElem** %b, align 8, !dbg !7009
  %call126 = call float* @CCG_elem_mask(%struct.CCGKey* %117, %struct.CCGElem* %118), !dbg !7010
  %119 = load float, float* %call126, align 4, !dbg !7011
  %arraydecay127 = getelementptr inbounds [4 x float], [4 x float]* %diffuse_color, i64 0, i64 0, !dbg !7012
  call void @gpu_color_from_mask_set(float %119, float* %arraydecay127), !dbg !7013
  br label %if.end128, !dbg !7014

if.end128:                                        ; preds = %if.then125, %if.end121
  %120 = load %struct.CCGKey*, %struct.CCGKey** %key, align 8, !dbg !7015
  %121 = load %struct.CCGElem*, %struct.CCGElem** %b, align 8, !dbg !7016
  %call129 = call float* @CCG_elem_no(%struct.CCGKey* %120, %struct.CCGElem* %121), !dbg !7017
  call void @glNormal3fv(float* %call129), !dbg !7018
  %122 = load %struct.CCGKey*, %struct.CCGKey** %key, align 8, !dbg !7019
  %123 = load %struct.CCGElem*, %struct.CCGElem** %b, align 8, !dbg !7020
  %call130 = call float* @CCG_elem_co(%struct.CCGKey* %122, %struct.CCGElem* %123), !dbg !7021
  call void @glVertex3fv(float* %call130), !dbg !7022
  br label %for.inc131, !dbg !7023

for.inc131:                                       ; preds = %if.end128
  %124 = load i32, i32* %x, align 4, !dbg !7024
  %inc132 = add nsw i32 %124, 1, !dbg !7024
  store i32 %inc132, i32* %x, align 4, !dbg !7024
  br label %for.cond110, !dbg !7025, !llvm.loop !7026

for.end133:                                       ; preds = %for.cond110
  call void @glEnd(), !dbg !7028
  br label %for.inc134, !dbg !7029

for.inc134:                                       ; preds = %for.end133
  %125 = load i32, i32* %y, align 4, !dbg !7030
  %inc135 = add nsw i32 %125, 1, !dbg !7030
  store i32 %inc135, i32* %y, align 4, !dbg !7030
  br label %for.cond105, !dbg !7031, !llvm.loop !7032

for.end136:                                       ; preds = %for.cond105
  br label %if.end181, !dbg !7034

if.else137:                                       ; preds = %if.else101
  store i32 0, i32* %y, align 4, !dbg !7035
  br label %for.cond138, !dbg !7038

for.cond138:                                      ; preds = %for.inc178, %if.else137
  %126 = load i32, i32* %y, align 4, !dbg !7039
  %127 = load i32, i32* %gridsize, align 4, !dbg !7041
  %sub139 = sub nsw i32 %127, 1, !dbg !7042
  %cmp140 = icmp slt i32 %126, %sub139, !dbg !7043
  br i1 %cmp140, label %for.body142, label %for.end180, !dbg !7044

for.body142:                                      ; preds = %for.cond138
  call void @glBegin(i32 8), !dbg !7045
  store i32 0, i32* %x, align 4, !dbg !7047
  br label %for.cond143, !dbg !7049

for.cond143:                                      ; preds = %for.inc175, %for.body142
  %128 = load i32, i32* %x, align 4, !dbg !7050
  %129 = load i32, i32* %gridsize, align 4, !dbg !7052
  %cmp144 = icmp slt i32 %128, %129, !dbg !7053
  br i1 %cmp144, label %for.body146, label %for.end177, !dbg !7054

for.body146:                                      ; preds = %for.cond143
  call void @llvm.dbg.declare(metadata %struct.CCGElem** %a147, metadata !7055, metadata !DIExpression()), !dbg !7057
  %130 = load %struct.CCGKey*, %struct.CCGKey** %key, align 8, !dbg !7058
  %131 = load %struct.CCGElem*, %struct.CCGElem** %grid, align 8, !dbg !7059
  %132 = load i32, i32* %x, align 4, !dbg !7060
  %133 = load i32, i32* %y, align 4, !dbg !7061
  %call148 = call %struct.CCGElem* @CCG_grid_elem(%struct.CCGKey* %130, %struct.CCGElem* %131, i32 %132, i32 %133), !dbg !7062
  store %struct.CCGElem* %call148, %struct.CCGElem** %a147, align 8, !dbg !7057
  call void @llvm.dbg.declare(metadata %struct.CCGElem** %b149, metadata !7063, metadata !DIExpression()), !dbg !7064
  %134 = load %struct.CCGKey*, %struct.CCGKey** %key, align 8, !dbg !7065
  %135 = load %struct.CCGElem*, %struct.CCGElem** %grid, align 8, !dbg !7066
  %136 = load i32, i32* %x, align 4, !dbg !7067
  %137 = load i32, i32* %y, align 4, !dbg !7068
  %add150 = add nsw i32 %137, 1, !dbg !7069
  %call151 = call %struct.CCGElem* @CCG_grid_elem(%struct.CCGKey* %134, %struct.CCGElem* %135, i32 %136, i32 %add150), !dbg !7070
  store %struct.CCGElem* %call151, %struct.CCGElem** %b149, align 8, !dbg !7064
  %138 = load i32, i32* %x, align 4, !dbg !7071
  %cmp152 = icmp sgt i32 %138, 0, !dbg !7073
  br i1 %cmp152, label %if.then154, label %if.end172, !dbg !7074

if.then154:                                       ; preds = %for.body146
  call void @llvm.dbg.declare(metadata %struct.CCGElem** %c, metadata !7075, metadata !DIExpression()), !dbg !7077
  %139 = load %struct.CCGKey*, %struct.CCGKey** %key, align 8, !dbg !7078
  %140 = load %struct.CCGElem*, %struct.CCGElem** %grid, align 8, !dbg !7079
  %141 = load i32, i32* %x, align 4, !dbg !7080
  %sub155 = sub nsw i32 %141, 1, !dbg !7081
  %142 = load i32, i32* %y, align 4, !dbg !7082
  %call156 = call %struct.CCGElem* @CCG_grid_elem(%struct.CCGKey* %139, %struct.CCGElem* %140, i32 %sub155, i32 %142), !dbg !7083
  store %struct.CCGElem* %call156, %struct.CCGElem** %c, align 8, !dbg !7077
  call void @llvm.dbg.declare(metadata %struct.CCGElem** %d, metadata !7084, metadata !DIExpression()), !dbg !7085
  %143 = load %struct.CCGKey*, %struct.CCGKey** %key, align 8, !dbg !7086
  %144 = load %struct.CCGElem*, %struct.CCGElem** %grid, align 8, !dbg !7087
  %145 = load i32, i32* %x, align 4, !dbg !7088
  %sub157 = sub nsw i32 %145, 1, !dbg !7089
  %146 = load i32, i32* %y, align 4, !dbg !7090
  %add158 = add nsw i32 %146, 1, !dbg !7091
  %call159 = call %struct.CCGElem* @CCG_grid_elem(%struct.CCGKey* %143, %struct.CCGElem* %144, i32 %sub157, i32 %add158), !dbg !7092
  store %struct.CCGElem* %call159, %struct.CCGElem** %d, align 8, !dbg !7085
  call void @llvm.dbg.declare(metadata [3 x float]* %fno160, metadata !7093, metadata !DIExpression()), !dbg !7094
  %arraydecay161 = getelementptr inbounds [3 x float], [3 x float]* %fno160, i64 0, i64 0, !dbg !7095
  %147 = load %struct.CCGKey*, %struct.CCGKey** %key, align 8, !dbg !7096
  %148 = load %struct.CCGElem*, %struct.CCGElem** %d, align 8, !dbg !7097
  %call162 = call float* @CCG_elem_co(%struct.CCGKey* %147, %struct.CCGElem* %148), !dbg !7098
  %149 = load %struct.CCGKey*, %struct.CCGKey** %key, align 8, !dbg !7099
  %150 = load %struct.CCGElem*, %struct.CCGElem** %b149, align 8, !dbg !7100
  %call163 = call float* @CCG_elem_co(%struct.CCGKey* %149, %struct.CCGElem* %150), !dbg !7101
  %151 = load %struct.CCGKey*, %struct.CCGKey** %key, align 8, !dbg !7102
  %152 = load %struct.CCGElem*, %struct.CCGElem** %a147, align 8, !dbg !7103
  %call164 = call float* @CCG_elem_co(%struct.CCGKey* %151, %struct.CCGElem* %152), !dbg !7104
  %153 = load %struct.CCGKey*, %struct.CCGKey** %key, align 8, !dbg !7105
  %154 = load %struct.CCGElem*, %struct.CCGElem** %c, align 8, !dbg !7106
  %call165 = call float* @CCG_elem_co(%struct.CCGKey* %153, %struct.CCGElem* %154), !dbg !7107
  %call166 = call float @normal_quad_v3(float* %arraydecay161, float* %call162, float* %call163, float* %call164, float* %call165), !dbg !7108
  %arraydecay167 = getelementptr inbounds [3 x float], [3 x float]* %fno160, i64 0, i64 0, !dbg !7109
  call void @glNormal3fv(float* %arraydecay167), !dbg !7110
  %155 = load i32, i32* %has_mask, align 4, !dbg !7111
  %tobool168 = icmp ne i32 %155, 0, !dbg !7111
  br i1 %tobool168, label %if.then169, label %if.end171, !dbg !7113

if.then169:                                       ; preds = %if.then154
  %156 = load %struct.CCGKey*, %struct.CCGKey** %key, align 8, !dbg !7114
  %157 = load %struct.CCGElem*, %struct.CCGElem** %a147, align 8, !dbg !7116
  %158 = load %struct.CCGElem*, %struct.CCGElem** %b149, align 8, !dbg !7117
  %159 = load %struct.CCGElem*, %struct.CCGElem** %c, align 8, !dbg !7118
  %160 = load %struct.CCGElem*, %struct.CCGElem** %d, align 8, !dbg !7119
  %arraydecay170 = getelementptr inbounds [4 x float], [4 x float]* %diffuse_color, i64 0, i64 0, !dbg !7120
  call void @gpu_color_from_mask_quad_set(%struct.CCGKey* %156, %struct.CCGElem* %157, %struct.CCGElem* %158, %struct.CCGElem* %159, %struct.CCGElem* %160, float* %arraydecay170), !dbg !7121
  br label %if.end171, !dbg !7122

if.end171:                                        ; preds = %if.then169, %if.then154
  br label %if.end172, !dbg !7123

if.end172:                                        ; preds = %if.end171, %for.body146
  %161 = load %struct.CCGKey*, %struct.CCGKey** %key, align 8, !dbg !7124
  %162 = load %struct.CCGElem*, %struct.CCGElem** %a147, align 8, !dbg !7125
  %call173 = call float* @CCG_elem_co(%struct.CCGKey* %161, %struct.CCGElem* %162), !dbg !7126
  call void @glVertex3fv(float* %call173), !dbg !7127
  %163 = load %struct.CCGKey*, %struct.CCGKey** %key, align 8, !dbg !7128
  %164 = load %struct.CCGElem*, %struct.CCGElem** %b149, align 8, !dbg !7129
  %call174 = call float* @CCG_elem_co(%struct.CCGKey* %163, %struct.CCGElem* %164), !dbg !7130
  call void @glVertex3fv(float* %call174), !dbg !7131
  br label %for.inc175, !dbg !7132

for.inc175:                                       ; preds = %if.end172
  %165 = load i32, i32* %x, align 4, !dbg !7133
  %inc176 = add nsw i32 %165, 1, !dbg !7133
  store i32 %inc176, i32* %x, align 4, !dbg !7133
  br label %for.cond143, !dbg !7134, !llvm.loop !7135

for.end177:                                       ; preds = %for.cond143
  call void @glEnd(), !dbg !7137
  br label %for.inc178, !dbg !7138

for.inc178:                                       ; preds = %for.end177
  %166 = load i32, i32* %y, align 4, !dbg !7139
  %inc179 = add nsw i32 %166, 1, !dbg !7139
  store i32 %inc179, i32* %y, align 4, !dbg !7139
  br label %for.cond138, !dbg !7140, !llvm.loop !7141

for.end180:                                       ; preds = %for.cond138
  br label %if.end181

if.end181:                                        ; preds = %for.end180, %for.end136
  br label %if.end182

if.end182:                                        ; preds = %if.end181, %for.end100
  br label %for.inc183, !dbg !7143

for.inc183:                                       ; preds = %if.end182
  %167 = load i32, i32* %i, align 4, !dbg !7144
  %inc184 = add nsw i32 %167, 1, !dbg !7144
  store i32 %inc184, i32* %i, align 4, !dbg !7144
  br label %for.cond, !dbg !7145, !llvm.loop !7146

for.end185:                                       ; preds = %for.cond
  %168 = load i32, i32* %has_mask, align 4, !dbg !7148
  %tobool186 = icmp ne i32 %168, 0, !dbg !7148
  br i1 %tobool186, label %if.then187, label %if.end188, !dbg !7150

if.then187:                                       ; preds = %for.end185
  call void @gpu_colors_disable(i32 1), !dbg !7151
  br label %if.end188, !dbg !7153

if.end188:                                        ; preds = %if.then187, %for.end185
  ret void, !dbg !7154
}

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @GPU_pbvh_buffers_diffuse_changed(%struct.GPU_PBVH_Buffers* %buffers, %struct.GSet* %bm_faces, i8 zeroext %show_diffuse_color) #0 !dbg !7155 {
entry:
  %retval = alloca i8, align 1
  %buffers.addr = alloca %struct.GPU_PBVH_Buffers*, align 8
  %bm_faces.addr = alloca %struct.GSet*, align 8
  %show_diffuse_color.addr = alloca i8, align 1
  %diffuse_color = alloca [4 x float], align 16
  %use_matcaps = alloca i8, align 1
  %f = alloca %struct.MFace*, align 8
  %gs_iter = alloca %struct.GSetIterator, align 8
  %f28 = alloca %struct.BMFace*, align 8
  %flags = alloca %struct.DMFlagMat*, align 8
  store %struct.GPU_PBVH_Buffers* %buffers, %struct.GPU_PBVH_Buffers** %buffers.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GPU_PBVH_Buffers** %buffers.addr, metadata !7158, metadata !DIExpression()), !dbg !7159
  store %struct.GSet* %bm_faces, %struct.GSet** %bm_faces.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GSet** %bm_faces.addr, metadata !7160, metadata !DIExpression()), !dbg !7161
  store i8 %show_diffuse_color, i8* %show_diffuse_color.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %show_diffuse_color.addr, metadata !7162, metadata !DIExpression()), !dbg !7163
  call void @llvm.dbg.declare(metadata [4 x float]* %diffuse_color, metadata !7164, metadata !DIExpression()), !dbg !7165
  call void @llvm.dbg.declare(metadata i8* %use_matcaps, metadata !7166, metadata !DIExpression()), !dbg !7167
  %call = call zeroext i8 @GPU_material_use_matcaps_get(), !dbg !7168
  store i8 %call, i8* %use_matcaps, align 1, !dbg !7167
  %0 = load %struct.GPU_PBVH_Buffers*, %struct.GPU_PBVH_Buffers** %buffers.addr, align 8, !dbg !7169
  %show_diffuse_color1 = getelementptr inbounds %struct.GPU_PBVH_Buffers, %struct.GPU_PBVH_Buffers* %0, i32 0, i32 19, !dbg !7171
  %1 = load i8, i8* %show_diffuse_color1, align 8, !dbg !7171
  %conv = zext i8 %1 to i32, !dbg !7169
  %2 = load i8, i8* %show_diffuse_color.addr, align 1, !dbg !7172
  %conv2 = zext i8 %2 to i32, !dbg !7172
  %cmp = icmp ne i32 %conv, %conv2, !dbg !7173
  br i1 %cmp, label %if.then, label %if.end, !dbg !7174

if.then:                                          ; preds = %entry
  store i8 1, i8* %retval, align 1, !dbg !7175
  br label %return, !dbg !7175

if.end:                                           ; preds = %entry
  %3 = load %struct.GPU_PBVH_Buffers*, %struct.GPU_PBVH_Buffers** %buffers.addr, align 8, !dbg !7176
  %use_matcaps4 = getelementptr inbounds %struct.GPU_PBVH_Buffers, %struct.GPU_PBVH_Buffers* %3, i32 0, i32 20, !dbg !7178
  %4 = load i8, i8* %use_matcaps4, align 1, !dbg !7178
  %conv5 = zext i8 %4 to i32, !dbg !7176
  %5 = load i8, i8* %use_matcaps, align 1, !dbg !7179
  %conv6 = zext i8 %5 to i32, !dbg !7179
  %cmp7 = icmp ne i32 %conv5, %conv6, !dbg !7180
  br i1 %cmp7, label %if.then9, label %if.end10, !dbg !7181

if.then9:                                         ; preds = %if.end
  store i8 1, i8* %retval, align 1, !dbg !7182
  br label %return, !dbg !7182

if.end10:                                         ; preds = %if.end
  %6 = load %struct.GPU_PBVH_Buffers*, %struct.GPU_PBVH_Buffers** %buffers.addr, align 8, !dbg !7183
  %show_diffuse_color11 = getelementptr inbounds %struct.GPU_PBVH_Buffers, %struct.GPU_PBVH_Buffers* %6, i32 0, i32 19, !dbg !7185
  %7 = load i8, i8* %show_diffuse_color11, align 8, !dbg !7185
  %conv12 = zext i8 %7 to i32, !dbg !7183
  %cmp13 = icmp eq i32 %conv12, 0, !dbg !7186
  br i1 %cmp13, label %if.then16, label %lor.lhs.false, !dbg !7187

lor.lhs.false:                                    ; preds = %if.end10
  %8 = load i8, i8* %use_matcaps, align 1, !dbg !7188
  %conv15 = zext i8 %8 to i32, !dbg !7188
  %tobool = icmp ne i32 %conv15, 0, !dbg !7188
  br i1 %tobool, label %if.then16, label %if.end17, !dbg !7189

if.then16:                                        ; preds = %lor.lhs.false, %if.end10
  store i8 0, i8* %retval, align 1, !dbg !7190
  br label %return, !dbg !7190

if.end17:                                         ; preds = %lor.lhs.false
  %9 = load %struct.GPU_PBVH_Buffers*, %struct.GPU_PBVH_Buffers** %buffers.addr, align 8, !dbg !7191
  %mface = getelementptr inbounds %struct.GPU_PBVH_Buffers, %struct.GPU_PBVH_Buffers* %9, i32 0, i32 3, !dbg !7193
  %10 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !7193
  %tobool18 = icmp ne %struct.MFace* %10, null, !dbg !7191
  br i1 %tobool18, label %if.then19, label %if.else, !dbg !7194

if.then19:                                        ; preds = %if.end17
  call void @llvm.dbg.declare(metadata %struct.MFace** %f, metadata !7195, metadata !DIExpression()), !dbg !7197
  %11 = load %struct.GPU_PBVH_Buffers*, %struct.GPU_PBVH_Buffers** %buffers.addr, align 8, !dbg !7198
  %mface20 = getelementptr inbounds %struct.GPU_PBVH_Buffers, %struct.GPU_PBVH_Buffers* %11, i32 0, i32 3, !dbg !7199
  %12 = load %struct.MFace*, %struct.MFace** %mface20, align 8, !dbg !7199
  %13 = load %struct.GPU_PBVH_Buffers*, %struct.GPU_PBVH_Buffers** %buffers.addr, align 8, !dbg !7200
  %face_indices = getelementptr inbounds %struct.GPU_PBVH_Buffers, %struct.GPU_PBVH_Buffers* %13, i32 0, i32 5, !dbg !7201
  %14 = load i32*, i32** %face_indices, align 8, !dbg !7201
  %arrayidx = getelementptr inbounds i32, i32* %14, i64 0, !dbg !7200
  %15 = load i32, i32* %arrayidx, align 4, !dbg !7200
  %idx.ext = sext i32 %15 to i64, !dbg !7202
  %add.ptr = getelementptr inbounds %struct.MFace, %struct.MFace* %12, i64 %idx.ext, !dbg !7202
  store %struct.MFace* %add.ptr, %struct.MFace** %f, align 8, !dbg !7197
  %16 = load %struct.MFace*, %struct.MFace** %f, align 8, !dbg !7203
  %mat_nr = getelementptr inbounds %struct.MFace, %struct.MFace* %16, i32 0, i32 4, !dbg !7204
  %17 = load i16, i16* %mat_nr, align 4, !dbg !7204
  %conv21 = sext i16 %17 to i32, !dbg !7203
  %add = add nsw i32 %conv21, 1, !dbg !7205
  %arraydecay = getelementptr inbounds [4 x float], [4 x float]* %diffuse_color, i64 0, i64 0, !dbg !7206
  call void @GPU_material_diffuse_get(i32 %add, float* %arraydecay), !dbg !7207
  br label %if.end44, !dbg !7208

if.else:                                          ; preds = %if.end17
  %18 = load %struct.GPU_PBVH_Buffers*, %struct.GPU_PBVH_Buffers** %buffers.addr, align 8, !dbg !7209
  %use_bmesh = getelementptr inbounds %struct.GPU_PBVH_Buffers, %struct.GPU_PBVH_Buffers* %18, i32 0, i32 15, !dbg !7211
  %19 = load i32, i32* %use_bmesh, align 8, !dbg !7211
  %tobool22 = icmp ne i32 %19, 0, !dbg !7209
  br i1 %tobool22, label %if.then23, label %if.else36, !dbg !7212

if.then23:                                        ; preds = %if.else
  %20 = load %struct.GSet*, %struct.GSet** %bm_faces.addr, align 8, !dbg !7213
  %call24 = call i32 @BLI_gset_size(%struct.GSet* %20), !dbg !7216
  %cmp25 = icmp sgt i32 %call24, 0, !dbg !7217
  br i1 %cmp25, label %if.then27, label %if.else34, !dbg !7218

if.then27:                                        ; preds = %if.then23
  call void @llvm.dbg.declare(metadata %struct.GSetIterator* %gs_iter, metadata !7219, metadata !DIExpression()), !dbg !7221
  call void @llvm.dbg.declare(metadata %struct.BMFace** %f28, metadata !7222, metadata !DIExpression()), !dbg !7223
  %21 = load %struct.GSet*, %struct.GSet** %bm_faces.addr, align 8, !dbg !7224
  call void @BLI_gsetIterator_init(%struct.GSetIterator* %gs_iter, %struct.GSet* %21), !dbg !7225
  %call29 = call i8* @BLI_gsetIterator_getKey(%struct.GSetIterator* %gs_iter), !dbg !7226
  %22 = bitcast i8* %call29 to %struct.BMFace*, !dbg !7226
  store %struct.BMFace* %22, %struct.BMFace** %f28, align 8, !dbg !7227
  %23 = load %struct.BMFace*, %struct.BMFace** %f28, align 8, !dbg !7228
  %mat_nr30 = getelementptr inbounds %struct.BMFace, %struct.BMFace* %23, i32 0, i32 5, !dbg !7229
  %24 = load i16, i16* %mat_nr30, align 8, !dbg !7229
  %conv31 = sext i16 %24 to i32, !dbg !7228
  %add32 = add nsw i32 %conv31, 1, !dbg !7230
  %arraydecay33 = getelementptr inbounds [4 x float], [4 x float]* %diffuse_color, i64 0, i64 0, !dbg !7231
  call void @GPU_material_diffuse_get(i32 %add32, float* %arraydecay33), !dbg !7232
  br label %if.end35, !dbg !7233

if.else34:                                        ; preds = %if.then23
  store i8 0, i8* %retval, align 1, !dbg !7234
  br label %return, !dbg !7234

if.end35:                                         ; preds = %if.then27
  br label %if.end43, !dbg !7236

if.else36:                                        ; preds = %if.else
  call void @llvm.dbg.declare(metadata %struct.DMFlagMat** %flags, metadata !7237, metadata !DIExpression()), !dbg !7239
  %25 = load %struct.GPU_PBVH_Buffers*, %struct.GPU_PBVH_Buffers** %buffers.addr, align 8, !dbg !7240
  %grid_flag_mats = getelementptr inbounds %struct.GPU_PBVH_Buffers, %struct.GPU_PBVH_Buffers* %25, i32 0, i32 10, !dbg !7241
  %26 = load %struct.DMFlagMat*, %struct.DMFlagMat** %grid_flag_mats, align 8, !dbg !7241
  %27 = load %struct.GPU_PBVH_Buffers*, %struct.GPU_PBVH_Buffers** %buffers.addr, align 8, !dbg !7242
  %grid_indices = getelementptr inbounds %struct.GPU_PBVH_Buffers, %struct.GPU_PBVH_Buffers* %27, i32 0, i32 12, !dbg !7243
  %28 = load i32*, i32** %grid_indices, align 8, !dbg !7243
  %arrayidx37 = getelementptr inbounds i32, i32* %28, i64 0, !dbg !7242
  %29 = load i32, i32* %arrayidx37, align 4, !dbg !7242
  %idxprom = sext i32 %29 to i64, !dbg !7240
  %arrayidx38 = getelementptr inbounds %struct.DMFlagMat, %struct.DMFlagMat* %26, i64 %idxprom, !dbg !7240
  store %struct.DMFlagMat* %arrayidx38, %struct.DMFlagMat** %flags, align 8, !dbg !7239
  %30 = load %struct.DMFlagMat*, %struct.DMFlagMat** %flags, align 8, !dbg !7244
  %mat_nr39 = getelementptr inbounds %struct.DMFlagMat, %struct.DMFlagMat* %30, i32 0, i32 0, !dbg !7245
  %31 = load i16, i16* %mat_nr39, align 2, !dbg !7245
  %conv40 = sext i16 %31 to i32, !dbg !7244
  %add41 = add nsw i32 %conv40, 1, !dbg !7246
  %arraydecay42 = getelementptr inbounds [4 x float], [4 x float]* %diffuse_color, i64 0, i64 0, !dbg !7247
  call void @GPU_material_diffuse_get(i32 %add41, float* %arraydecay42), !dbg !7248
  br label %if.end43

if.end43:                                         ; preds = %if.else36, %if.end35
  br label %if.end44

if.end44:                                         ; preds = %if.end43, %if.then19
  %arraydecay45 = getelementptr inbounds [4 x float], [4 x float]* %diffuse_color, i64 0, i64 0, !dbg !7249
  %32 = load %struct.GPU_PBVH_Buffers*, %struct.GPU_PBVH_Buffers** %buffers.addr, align 8, !dbg !7250
  %diffuse_color46 = getelementptr inbounds %struct.GPU_PBVH_Buffers, %struct.GPU_PBVH_Buffers* %32, i32 0, i32 21, !dbg !7251
  %arraydecay47 = getelementptr inbounds [4 x float], [4 x float]* %diffuse_color46, i64 0, i64 0, !dbg !7250
  %call48 = call zeroext i8 @equals_v3v3(float* %arraydecay45, float* %arraydecay47), !dbg !7252
  %tobool49 = icmp ne i8 %call48, 0, !dbg !7253
  %lnot = xor i1 %tobool49, true, !dbg !7253
  %lnot.ext = zext i1 %lnot to i32, !dbg !7253
  %conv50 = trunc i32 %lnot.ext to i8, !dbg !7253
  store i8 %conv50, i8* %retval, align 1, !dbg !7254
  br label %return, !dbg !7254

return:                                           ; preds = %if.end44, %if.else34, %if.then16, %if.then9, %if.then
  %33 = load i8, i8* %retval, align 1, !dbg !7255
  ret i8 %33, !dbg !7255
}

declare dso_local i32 @BLI_gset_size(%struct.GSet*) #2

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @equals_v3v3(float* %v1, float* %v2) #0 !dbg !7256 {
entry:
  %v1.addr = alloca float*, align 8
  %v2.addr = alloca float*, align 8
  store float* %v1, float** %v1.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v1.addr, metadata !7259, metadata !DIExpression()), !dbg !7260
  store float* %v2, float** %v2.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v2.addr, metadata !7261, metadata !DIExpression()), !dbg !7262
  %0 = load float*, float** %v1.addr, align 8, !dbg !7263
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !7263
  %1 = load float, float* %arrayidx, align 4, !dbg !7263
  %2 = load float*, float** %v2.addr, align 8, !dbg !7264
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !7264
  %3 = load float, float* %arrayidx1, align 4, !dbg !7264
  %cmp = fcmp oeq float %1, %3, !dbg !7265
  br i1 %cmp, label %land.lhs.true, label %land.end, !dbg !7266

land.lhs.true:                                    ; preds = %entry
  %4 = load float*, float** %v1.addr, align 8, !dbg !7267
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 1, !dbg !7267
  %5 = load float, float* %arrayidx2, align 4, !dbg !7267
  %6 = load float*, float** %v2.addr, align 8, !dbg !7268
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 1, !dbg !7268
  %7 = load float, float* %arrayidx3, align 4, !dbg !7268
  %cmp4 = fcmp oeq float %5, %7, !dbg !7269
  br i1 %cmp4, label %land.rhs, label %land.end, !dbg !7270

land.rhs:                                         ; preds = %land.lhs.true
  %8 = load float*, float** %v1.addr, align 8, !dbg !7271
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 2, !dbg !7271
  %9 = load float, float* %arrayidx5, align 4, !dbg !7271
  %10 = load float*, float** %v2.addr, align 8, !dbg !7272
  %arrayidx6 = getelementptr inbounds float, float* %10, i64 2, !dbg !7272
  %11 = load float, float* %arrayidx6, align 4, !dbg !7272
  %cmp7 = fcmp oeq float %9, %11, !dbg !7273
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true, %entry
  %12 = phi i1 [ false, %land.lhs.true ], [ false, %entry ], [ %cmp7, %land.rhs ], !dbg !7274
  %land.ext = zext i1 %12 to i32, !dbg !7270
  %conv = trunc i32 %land.ext to i8, !dbg !7275
  ret i8 %conv, !dbg !7276
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @GPU_free_pbvh_buffers(%struct.GPU_PBVH_Buffers* %buffers) #0 !dbg !7277 {
entry:
  %buffers.addr = alloca %struct.GPU_PBVH_Buffers*, align 8
  store %struct.GPU_PBVH_Buffers* %buffers, %struct.GPU_PBVH_Buffers** %buffers.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GPU_PBVH_Buffers** %buffers.addr, metadata !7278, metadata !DIExpression()), !dbg !7279
  %0 = load %struct.GPU_PBVH_Buffers*, %struct.GPU_PBVH_Buffers** %buffers.addr, align 8, !dbg !7280
  %tobool = icmp ne %struct.GPU_PBVH_Buffers* %0, null, !dbg !7280
  br i1 %tobool, label %if.then, label %if.end10, !dbg !7282

if.then:                                          ; preds = %entry
  %1 = load %struct.GPU_PBVH_Buffers*, %struct.GPU_PBVH_Buffers** %buffers.addr, align 8, !dbg !7283
  %vert_buf = getelementptr inbounds %struct.GPU_PBVH_Buffers, %struct.GPU_PBVH_Buffers* %1, i32 0, i32 0, !dbg !7286
  %2 = load i32, i32* %vert_buf, align 8, !dbg !7286
  %tobool1 = icmp ne i32 %2, 0, !dbg !7283
  br i1 %tobool1, label %if.then2, label %if.end, !dbg !7287

if.then2:                                         ; preds = %if.then
  %3 = load %struct.GPU_PBVH_Buffers*, %struct.GPU_PBVH_Buffers** %buffers.addr, align 8, !dbg !7288
  %vert_buf3 = getelementptr inbounds %struct.GPU_PBVH_Buffers, %struct.GPU_PBVH_Buffers* %3, i32 0, i32 0, !dbg !7289
  %4 = load i32, i32* %vert_buf3, align 8, !dbg !7289
  call void @gpu_pbvh_buffer_free_intern(i32 %4), !dbg !7290
  br label %if.end, !dbg !7290

if.end:                                           ; preds = %if.then2, %if.then
  %5 = load %struct.GPU_PBVH_Buffers*, %struct.GPU_PBVH_Buffers** %buffers.addr, align 8, !dbg !7291
  %index_buf = getelementptr inbounds %struct.GPU_PBVH_Buffers, %struct.GPU_PBVH_Buffers* %5, i32 0, i32 1, !dbg !7293
  %6 = load i32, i32* %index_buf, align 4, !dbg !7293
  %tobool4 = icmp ne i32 %6, 0, !dbg !7291
  br i1 %tobool4, label %land.lhs.true, label %if.end9, !dbg !7294

land.lhs.true:                                    ; preds = %if.end
  %7 = load %struct.GPU_PBVH_Buffers*, %struct.GPU_PBVH_Buffers** %buffers.addr, align 8, !dbg !7295
  %tot_tri = getelementptr inbounds %struct.GPU_PBVH_Buffers, %struct.GPU_PBVH_Buffers* %7, i32 0, i32 16, !dbg !7296
  %8 = load i32, i32* %tot_tri, align 4, !dbg !7296
  %tobool5 = icmp ne i32 %8, 0, !dbg !7295
  br i1 %tobool5, label %if.then7, label %lor.lhs.false, !dbg !7297

lor.lhs.false:                                    ; preds = %land.lhs.true
  %9 = load %struct.GPU_PBVH_Buffers*, %struct.GPU_PBVH_Buffers** %buffers.addr, align 8, !dbg !7298
  %has_hidden = getelementptr inbounds %struct.GPU_PBVH_Buffers, %struct.GPU_PBVH_Buffers* %9, i32 0, i32 14, !dbg !7299
  %10 = load i32, i32* %has_hidden, align 4, !dbg !7299
  %tobool6 = icmp ne i32 %10, 0, !dbg !7298
  br i1 %tobool6, label %if.then7, label %if.end9, !dbg !7300

if.then7:                                         ; preds = %lor.lhs.false, %land.lhs.true
  %11 = load %struct.GPU_PBVH_Buffers*, %struct.GPU_PBVH_Buffers** %buffers.addr, align 8, !dbg !7301
  %index_buf8 = getelementptr inbounds %struct.GPU_PBVH_Buffers, %struct.GPU_PBVH_Buffers* %11, i32 0, i32 1, !dbg !7302
  %12 = load i32, i32* %index_buf8, align 4, !dbg !7302
  call void @gpu_pbvh_buffer_free_intern(i32 %12), !dbg !7303
  br label %if.end9, !dbg !7303

if.end9:                                          ; preds = %if.then7, %lor.lhs.false, %if.end
  %13 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !7304
  %14 = load %struct.GPU_PBVH_Buffers*, %struct.GPU_PBVH_Buffers** %buffers.addr, align 8, !dbg !7305
  %15 = bitcast %struct.GPU_PBVH_Buffers* %14 to i8*, !dbg !7305
  call void %13(i8* %15), !dbg !7304
  br label %if.end10, !dbg !7306

if.end10:                                         ; preds = %if.end9, %entry
  ret void, !dbg !7307
}

; Function Attrs: noinline nounwind uwtable
define internal void @gpu_pbvh_buffer_free_intern(i32 %id) #0 !dbg !7308 {
entry:
  %id.addr = alloca i32, align 4
  %pool = alloca %struct.GPUBufferPool*, align 8
  store i32 %id, i32* %id.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %id.addr, metadata !7311, metadata !DIExpression()), !dbg !7312
  call void @llvm.dbg.declare(metadata %struct.GPUBufferPool** %pool, metadata !7313, metadata !DIExpression()), !dbg !7314
  %0 = load i32, i32* %id.addr, align 4, !dbg !7315
  %tobool = icmp ne i32 %0, 0, !dbg !7315
  br i1 %tobool, label %if.end, label %if.then, !dbg !7317

if.then:                                          ; preds = %entry
  br label %return, !dbg !7318

if.end:                                           ; preds = %entry
  %call = call %struct.GPUBufferPool* @gpu_get_global_buffer_pool(), !dbg !7319
  store %struct.GPUBufferPool* %call, %struct.GPUBufferPool** %pool, align 8, !dbg !7320
  %call1 = call i32 @BLI_thread_is_main(), !dbg !7321
  %tobool2 = icmp ne i32 %call1, 0, !dbg !7321
  br i1 %tobool2, label %if.then3, label %if.end8, !dbg !7323

if.then3:                                         ; preds = %if.end
  %1 = load void (i32, i32*)*, void (i32, i32*)** @__glewDeleteBuffersARB, align 8, !dbg !7324
  call void %1(i32 1, i32* %id.addr), !dbg !7324
  %2 = load %struct.GPUBufferPool*, %struct.GPUBufferPool** %pool, align 8, !dbg !7326
  %totpbvhbufids = getelementptr inbounds %struct.GPUBufferPool, %struct.GPUBufferPool* %2, i32 0, i32 1, !dbg !7328
  %3 = load i32, i32* %totpbvhbufids, align 4, !dbg !7328
  %cmp = icmp sgt i32 %3, 0, !dbg !7329
  br i1 %cmp, label %if.then4, label %if.end7, !dbg !7330

if.then4:                                         ; preds = %if.then3
  %4 = load void (i32, i32*)*, void (i32, i32*)** @__glewDeleteBuffersARB, align 8, !dbg !7331
  %5 = load %struct.GPUBufferPool*, %struct.GPUBufferPool** %pool, align 8, !dbg !7333
  %totpbvhbufids5 = getelementptr inbounds %struct.GPUBufferPool, %struct.GPUBufferPool* %5, i32 0, i32 1, !dbg !7334
  %6 = load i32, i32* %totpbvhbufids5, align 4, !dbg !7334
  %7 = load %struct.GPUBufferPool*, %struct.GPUBufferPool** %pool, align 8, !dbg !7335
  %pbvhbufids = getelementptr inbounds %struct.GPUBufferPool, %struct.GPUBufferPool* %7, i32 0, i32 5, !dbg !7336
  %8 = load i32*, i32** %pbvhbufids, align 8, !dbg !7336
  call void %4(i32 %6, i32* %8), !dbg !7331
  %9 = load %struct.GPUBufferPool*, %struct.GPUBufferPool** %pool, align 8, !dbg !7337
  %totpbvhbufids6 = getelementptr inbounds %struct.GPUBufferPool, %struct.GPUBufferPool* %9, i32 0, i32 1, !dbg !7338
  store i32 0, i32* %totpbvhbufids6, align 4, !dbg !7339
  br label %if.end7, !dbg !7340

if.end7:                                          ; preds = %if.then4, %if.then3
  br label %return, !dbg !7341

if.end8:                                          ; preds = %if.end
  %10 = load %struct.GPUBufferPool*, %struct.GPUBufferPool** %pool, align 8, !dbg !7342
  %maxpbvhsize = getelementptr inbounds %struct.GPUBufferPool, %struct.GPUBufferPool* %10, i32 0, i32 3, !dbg !7344
  %11 = load i32, i32* %maxpbvhsize, align 4, !dbg !7344
  %12 = load %struct.GPUBufferPool*, %struct.GPUBufferPool** %pool, align 8, !dbg !7345
  %totpbvhbufids9 = getelementptr inbounds %struct.GPUBufferPool, %struct.GPUBufferPool* %12, i32 0, i32 1, !dbg !7346
  %13 = load i32, i32* %totpbvhbufids9, align 4, !dbg !7346
  %cmp10 = icmp eq i32 %11, %13, !dbg !7347
  br i1 %cmp10, label %if.then11, label %if.end17, !dbg !7348

if.then11:                                        ; preds = %if.end8
  %14 = load %struct.GPUBufferPool*, %struct.GPUBufferPool** %pool, align 8, !dbg !7349
  %maxpbvhsize12 = getelementptr inbounds %struct.GPUBufferPool, %struct.GPUBufferPool* %14, i32 0, i32 3, !dbg !7351
  %15 = load i32, i32* %maxpbvhsize12, align 4, !dbg !7352
  %add = add nsw i32 %15, 100, !dbg !7352
  store i32 %add, i32* %maxpbvhsize12, align 4, !dbg !7352
  %16 = load i8* (i8*, i64, i8*)*, i8* (i8*, i64, i8*)** @MEM_reallocN_id, align 8, !dbg !7353
  %17 = load %struct.GPUBufferPool*, %struct.GPUBufferPool** %pool, align 8, !dbg !7353
  %pbvhbufids13 = getelementptr inbounds %struct.GPUBufferPool, %struct.GPUBufferPool* %17, i32 0, i32 5, !dbg !7353
  %18 = load i32*, i32** %pbvhbufids13, align 8, !dbg !7353
  %19 = bitcast i32* %18 to i8*, !dbg !7353
  %20 = load %struct.GPUBufferPool*, %struct.GPUBufferPool** %pool, align 8, !dbg !7353
  %maxpbvhsize14 = getelementptr inbounds %struct.GPUBufferPool, %struct.GPUBufferPool* %20, i32 0, i32 3, !dbg !7353
  %21 = load i32, i32* %maxpbvhsize14, align 4, !dbg !7353
  %conv = sext i32 %21 to i64, !dbg !7353
  %mul = mul i64 4, %conv, !dbg !7353
  %call15 = call i8* %16(i8* %19, i64 %mul, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__func__.gpu_pbvh_buffer_free_intern, i64 0, i64 0)), !dbg !7353
  %22 = bitcast i8* %call15 to i32*, !dbg !7353
  %23 = load %struct.GPUBufferPool*, %struct.GPUBufferPool** %pool, align 8, !dbg !7354
  %pbvhbufids16 = getelementptr inbounds %struct.GPUBufferPool, %struct.GPUBufferPool* %23, i32 0, i32 5, !dbg !7355
  store i32* %22, i32** %pbvhbufids16, align 8, !dbg !7356
  br label %if.end17, !dbg !7357

if.end17:                                         ; preds = %if.then11, %if.end8
  %24 = load i32, i32* %id.addr, align 4, !dbg !7358
  %25 = load %struct.GPUBufferPool*, %struct.GPUBufferPool** %pool, align 8, !dbg !7359
  %pbvhbufids18 = getelementptr inbounds %struct.GPUBufferPool, %struct.GPUBufferPool* %25, i32 0, i32 5, !dbg !7360
  %26 = load i32*, i32** %pbvhbufids18, align 8, !dbg !7360
  %27 = load %struct.GPUBufferPool*, %struct.GPUBufferPool** %pool, align 8, !dbg !7361
  %totpbvhbufids19 = getelementptr inbounds %struct.GPUBufferPool, %struct.GPUBufferPool* %27, i32 0, i32 1, !dbg !7362
  %28 = load i32, i32* %totpbvhbufids19, align 4, !dbg !7363
  %inc = add nsw i32 %28, 1, !dbg !7363
  store i32 %inc, i32* %totpbvhbufids19, align 4, !dbg !7363
  %idxprom = sext i32 %28 to i64, !dbg !7359
  %arrayidx = getelementptr inbounds i32, i32* %26, i64 %idxprom, !dbg !7359
  store i32 %24, i32* %arrayidx, align 4, !dbg !7364
  br label %return, !dbg !7365

return:                                           ; preds = %if.end17, %if.end7, %if.then
  ret void, !dbg !7365
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @GPU_draw_pbvh_BB(float* %min, float* %max, i8 zeroext %leaf) #0 !dbg !7366 {
entry:
  %min.addr = alloca float*, align 8
  %max.addr = alloca float*, align 8
  %leaf.addr = alloca i8, align 1
  %quads = alloca [4 x [4 x [3 x float]]], align 16
  store float* %min, float** %min.addr, align 8
  call void @llvm.dbg.declare(metadata float** %min.addr, metadata !7369, metadata !DIExpression()), !dbg !7370
  store float* %max, float** %max.addr, align 8
  call void @llvm.dbg.declare(metadata float** %max.addr, metadata !7371, metadata !DIExpression()), !dbg !7372
  store i8 %leaf, i8* %leaf.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %leaf.addr, metadata !7373, metadata !DIExpression()), !dbg !7374
  call void @llvm.dbg.declare(metadata [4 x [4 x [3 x float]]]* %quads, metadata !7375, metadata !DIExpression()), !dbg !7378
  %arrayinit.begin = getelementptr inbounds [4 x [4 x [3 x float]]], [4 x [4 x [3 x float]]]* %quads, i64 0, i64 0, !dbg !7379
  %arrayinit.begin1 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %arrayinit.begin, i64 0, i64 0, !dbg !7380
  %arrayinit.begin2 = getelementptr inbounds [3 x float], [3 x float]* %arrayinit.begin1, i64 0, i64 0, !dbg !7381
  %0 = load float*, float** %min.addr, align 8, !dbg !7382
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !7382
  %1 = load float, float* %arrayidx, align 4, !dbg !7382
  store float %1, float* %arrayinit.begin2, align 4, !dbg !7381
  %arrayinit.element = getelementptr inbounds float, float* %arrayinit.begin2, i64 1, !dbg !7381
  %2 = load float*, float** %min.addr, align 8, !dbg !7383
  %arrayidx3 = getelementptr inbounds float, float* %2, i64 1, !dbg !7383
  %3 = load float, float* %arrayidx3, align 4, !dbg !7383
  store float %3, float* %arrayinit.element, align 4, !dbg !7381
  %arrayinit.element4 = getelementptr inbounds float, float* %arrayinit.element, i64 1, !dbg !7381
  %4 = load float*, float** %min.addr, align 8, !dbg !7384
  %arrayidx5 = getelementptr inbounds float, float* %4, i64 2, !dbg !7384
  %5 = load float, float* %arrayidx5, align 4, !dbg !7384
  store float %5, float* %arrayinit.element4, align 4, !dbg !7381
  %arrayinit.element6 = getelementptr inbounds [3 x float], [3 x float]* %arrayinit.begin1, i64 1, !dbg !7380
  %arrayinit.begin7 = getelementptr inbounds [3 x float], [3 x float]* %arrayinit.element6, i64 0, i64 0, !dbg !7385
  %6 = load float*, float** %max.addr, align 8, !dbg !7386
  %arrayidx8 = getelementptr inbounds float, float* %6, i64 0, !dbg !7386
  %7 = load float, float* %arrayidx8, align 4, !dbg !7386
  store float %7, float* %arrayinit.begin7, align 4, !dbg !7385
  %arrayinit.element9 = getelementptr inbounds float, float* %arrayinit.begin7, i64 1, !dbg !7385
  %8 = load float*, float** %min.addr, align 8, !dbg !7387
  %arrayidx10 = getelementptr inbounds float, float* %8, i64 1, !dbg !7387
  %9 = load float, float* %arrayidx10, align 4, !dbg !7387
  store float %9, float* %arrayinit.element9, align 4, !dbg !7385
  %arrayinit.element11 = getelementptr inbounds float, float* %arrayinit.element9, i64 1, !dbg !7385
  %10 = load float*, float** %min.addr, align 8, !dbg !7388
  %arrayidx12 = getelementptr inbounds float, float* %10, i64 2, !dbg !7388
  %11 = load float, float* %arrayidx12, align 4, !dbg !7388
  store float %11, float* %arrayinit.element11, align 4, !dbg !7385
  %arrayinit.element13 = getelementptr inbounds [3 x float], [3 x float]* %arrayinit.element6, i64 1, !dbg !7380
  %arrayinit.begin14 = getelementptr inbounds [3 x float], [3 x float]* %arrayinit.element13, i64 0, i64 0, !dbg !7389
  %12 = load float*, float** %max.addr, align 8, !dbg !7390
  %arrayidx15 = getelementptr inbounds float, float* %12, i64 0, !dbg !7390
  %13 = load float, float* %arrayidx15, align 4, !dbg !7390
  store float %13, float* %arrayinit.begin14, align 4, !dbg !7389
  %arrayinit.element16 = getelementptr inbounds float, float* %arrayinit.begin14, i64 1, !dbg !7389
  %14 = load float*, float** %min.addr, align 8, !dbg !7391
  %arrayidx17 = getelementptr inbounds float, float* %14, i64 1, !dbg !7391
  %15 = load float, float* %arrayidx17, align 4, !dbg !7391
  store float %15, float* %arrayinit.element16, align 4, !dbg !7389
  %arrayinit.element18 = getelementptr inbounds float, float* %arrayinit.element16, i64 1, !dbg !7389
  %16 = load float*, float** %max.addr, align 8, !dbg !7392
  %arrayidx19 = getelementptr inbounds float, float* %16, i64 2, !dbg !7392
  %17 = load float, float* %arrayidx19, align 4, !dbg !7392
  store float %17, float* %arrayinit.element18, align 4, !dbg !7389
  %arrayinit.element20 = getelementptr inbounds [3 x float], [3 x float]* %arrayinit.element13, i64 1, !dbg !7380
  %arrayinit.begin21 = getelementptr inbounds [3 x float], [3 x float]* %arrayinit.element20, i64 0, i64 0, !dbg !7393
  %18 = load float*, float** %min.addr, align 8, !dbg !7394
  %arrayidx22 = getelementptr inbounds float, float* %18, i64 0, !dbg !7394
  %19 = load float, float* %arrayidx22, align 4, !dbg !7394
  store float %19, float* %arrayinit.begin21, align 4, !dbg !7393
  %arrayinit.element23 = getelementptr inbounds float, float* %arrayinit.begin21, i64 1, !dbg !7393
  %20 = load float*, float** %min.addr, align 8, !dbg !7395
  %arrayidx24 = getelementptr inbounds float, float* %20, i64 1, !dbg !7395
  %21 = load float, float* %arrayidx24, align 4, !dbg !7395
  store float %21, float* %arrayinit.element23, align 4, !dbg !7393
  %arrayinit.element25 = getelementptr inbounds float, float* %arrayinit.element23, i64 1, !dbg !7393
  %22 = load float*, float** %max.addr, align 8, !dbg !7396
  %arrayidx26 = getelementptr inbounds float, float* %22, i64 2, !dbg !7396
  %23 = load float, float* %arrayidx26, align 4, !dbg !7396
  store float %23, float* %arrayinit.element25, align 4, !dbg !7393
  %arrayinit.element27 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %arrayinit.begin, i64 1, !dbg !7379
  %arrayinit.begin28 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %arrayinit.element27, i64 0, i64 0, !dbg !7397
  %arrayinit.begin29 = getelementptr inbounds [3 x float], [3 x float]* %arrayinit.begin28, i64 0, i64 0, !dbg !7398
  %24 = load float*, float** %min.addr, align 8, !dbg !7399
  %arrayidx30 = getelementptr inbounds float, float* %24, i64 0, !dbg !7399
  %25 = load float, float* %arrayidx30, align 4, !dbg !7399
  store float %25, float* %arrayinit.begin29, align 4, !dbg !7398
  %arrayinit.element31 = getelementptr inbounds float, float* %arrayinit.begin29, i64 1, !dbg !7398
  %26 = load float*, float** %min.addr, align 8, !dbg !7400
  %arrayidx32 = getelementptr inbounds float, float* %26, i64 1, !dbg !7400
  %27 = load float, float* %arrayidx32, align 4, !dbg !7400
  store float %27, float* %arrayinit.element31, align 4, !dbg !7398
  %arrayinit.element33 = getelementptr inbounds float, float* %arrayinit.element31, i64 1, !dbg !7398
  %28 = load float*, float** %min.addr, align 8, !dbg !7401
  %arrayidx34 = getelementptr inbounds float, float* %28, i64 2, !dbg !7401
  %29 = load float, float* %arrayidx34, align 4, !dbg !7401
  store float %29, float* %arrayinit.element33, align 4, !dbg !7398
  %arrayinit.element35 = getelementptr inbounds [3 x float], [3 x float]* %arrayinit.begin28, i64 1, !dbg !7397
  %arrayinit.begin36 = getelementptr inbounds [3 x float], [3 x float]* %arrayinit.element35, i64 0, i64 0, !dbg !7402
  %30 = load float*, float** %min.addr, align 8, !dbg !7403
  %arrayidx37 = getelementptr inbounds float, float* %30, i64 0, !dbg !7403
  %31 = load float, float* %arrayidx37, align 4, !dbg !7403
  store float %31, float* %arrayinit.begin36, align 4, !dbg !7402
  %arrayinit.element38 = getelementptr inbounds float, float* %arrayinit.begin36, i64 1, !dbg !7402
  %32 = load float*, float** %max.addr, align 8, !dbg !7404
  %arrayidx39 = getelementptr inbounds float, float* %32, i64 1, !dbg !7404
  %33 = load float, float* %arrayidx39, align 4, !dbg !7404
  store float %33, float* %arrayinit.element38, align 4, !dbg !7402
  %arrayinit.element40 = getelementptr inbounds float, float* %arrayinit.element38, i64 1, !dbg !7402
  %34 = load float*, float** %min.addr, align 8, !dbg !7405
  %arrayidx41 = getelementptr inbounds float, float* %34, i64 2, !dbg !7405
  %35 = load float, float* %arrayidx41, align 4, !dbg !7405
  store float %35, float* %arrayinit.element40, align 4, !dbg !7402
  %arrayinit.element42 = getelementptr inbounds [3 x float], [3 x float]* %arrayinit.element35, i64 1, !dbg !7397
  %arrayinit.begin43 = getelementptr inbounds [3 x float], [3 x float]* %arrayinit.element42, i64 0, i64 0, !dbg !7406
  %36 = load float*, float** %min.addr, align 8, !dbg !7407
  %arrayidx44 = getelementptr inbounds float, float* %36, i64 0, !dbg !7407
  %37 = load float, float* %arrayidx44, align 4, !dbg !7407
  store float %37, float* %arrayinit.begin43, align 4, !dbg !7406
  %arrayinit.element45 = getelementptr inbounds float, float* %arrayinit.begin43, i64 1, !dbg !7406
  %38 = load float*, float** %max.addr, align 8, !dbg !7408
  %arrayidx46 = getelementptr inbounds float, float* %38, i64 1, !dbg !7408
  %39 = load float, float* %arrayidx46, align 4, !dbg !7408
  store float %39, float* %arrayinit.element45, align 4, !dbg !7406
  %arrayinit.element47 = getelementptr inbounds float, float* %arrayinit.element45, i64 1, !dbg !7406
  %40 = load float*, float** %max.addr, align 8, !dbg !7409
  %arrayidx48 = getelementptr inbounds float, float* %40, i64 2, !dbg !7409
  %41 = load float, float* %arrayidx48, align 4, !dbg !7409
  store float %41, float* %arrayinit.element47, align 4, !dbg !7406
  %arrayinit.element49 = getelementptr inbounds [3 x float], [3 x float]* %arrayinit.element42, i64 1, !dbg !7397
  %arrayinit.begin50 = getelementptr inbounds [3 x float], [3 x float]* %arrayinit.element49, i64 0, i64 0, !dbg !7410
  %42 = load float*, float** %min.addr, align 8, !dbg !7411
  %arrayidx51 = getelementptr inbounds float, float* %42, i64 0, !dbg !7411
  %43 = load float, float* %arrayidx51, align 4, !dbg !7411
  store float %43, float* %arrayinit.begin50, align 4, !dbg !7410
  %arrayinit.element52 = getelementptr inbounds float, float* %arrayinit.begin50, i64 1, !dbg !7410
  %44 = load float*, float** %min.addr, align 8, !dbg !7412
  %arrayidx53 = getelementptr inbounds float, float* %44, i64 1, !dbg !7412
  %45 = load float, float* %arrayidx53, align 4, !dbg !7412
  store float %45, float* %arrayinit.element52, align 4, !dbg !7410
  %arrayinit.element54 = getelementptr inbounds float, float* %arrayinit.element52, i64 1, !dbg !7410
  %46 = load float*, float** %max.addr, align 8, !dbg !7413
  %arrayidx55 = getelementptr inbounds float, float* %46, i64 2, !dbg !7413
  %47 = load float, float* %arrayidx55, align 4, !dbg !7413
  store float %47, float* %arrayinit.element54, align 4, !dbg !7410
  %arrayinit.element56 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %arrayinit.element27, i64 1, !dbg !7379
  %arrayinit.begin57 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %arrayinit.element56, i64 0, i64 0, !dbg !7414
  %arrayinit.begin58 = getelementptr inbounds [3 x float], [3 x float]* %arrayinit.begin57, i64 0, i64 0, !dbg !7415
  %48 = load float*, float** %max.addr, align 8, !dbg !7416
  %arrayidx59 = getelementptr inbounds float, float* %48, i64 0, !dbg !7416
  %49 = load float, float* %arrayidx59, align 4, !dbg !7416
  store float %49, float* %arrayinit.begin58, align 4, !dbg !7415
  %arrayinit.element60 = getelementptr inbounds float, float* %arrayinit.begin58, i64 1, !dbg !7415
  %50 = load float*, float** %max.addr, align 8, !dbg !7417
  %arrayidx61 = getelementptr inbounds float, float* %50, i64 1, !dbg !7417
  %51 = load float, float* %arrayidx61, align 4, !dbg !7417
  store float %51, float* %arrayinit.element60, align 4, !dbg !7415
  %arrayinit.element62 = getelementptr inbounds float, float* %arrayinit.element60, i64 1, !dbg !7415
  %52 = load float*, float** %min.addr, align 8, !dbg !7418
  %arrayidx63 = getelementptr inbounds float, float* %52, i64 2, !dbg !7418
  %53 = load float, float* %arrayidx63, align 4, !dbg !7418
  store float %53, float* %arrayinit.element62, align 4, !dbg !7415
  %arrayinit.element64 = getelementptr inbounds [3 x float], [3 x float]* %arrayinit.begin57, i64 1, !dbg !7414
  %arrayinit.begin65 = getelementptr inbounds [3 x float], [3 x float]* %arrayinit.element64, i64 0, i64 0, !dbg !7419
  %54 = load float*, float** %max.addr, align 8, !dbg !7420
  %arrayidx66 = getelementptr inbounds float, float* %54, i64 0, !dbg !7420
  %55 = load float, float* %arrayidx66, align 4, !dbg !7420
  store float %55, float* %arrayinit.begin65, align 4, !dbg !7419
  %arrayinit.element67 = getelementptr inbounds float, float* %arrayinit.begin65, i64 1, !dbg !7419
  %56 = load float*, float** %min.addr, align 8, !dbg !7421
  %arrayidx68 = getelementptr inbounds float, float* %56, i64 1, !dbg !7421
  %57 = load float, float* %arrayidx68, align 4, !dbg !7421
  store float %57, float* %arrayinit.element67, align 4, !dbg !7419
  %arrayinit.element69 = getelementptr inbounds float, float* %arrayinit.element67, i64 1, !dbg !7419
  %58 = load float*, float** %min.addr, align 8, !dbg !7422
  %arrayidx70 = getelementptr inbounds float, float* %58, i64 2, !dbg !7422
  %59 = load float, float* %arrayidx70, align 4, !dbg !7422
  store float %59, float* %arrayinit.element69, align 4, !dbg !7419
  %arrayinit.element71 = getelementptr inbounds [3 x float], [3 x float]* %arrayinit.element64, i64 1, !dbg !7414
  %arrayinit.begin72 = getelementptr inbounds [3 x float], [3 x float]* %arrayinit.element71, i64 0, i64 0, !dbg !7423
  %60 = load float*, float** %max.addr, align 8, !dbg !7424
  %arrayidx73 = getelementptr inbounds float, float* %60, i64 0, !dbg !7424
  %61 = load float, float* %arrayidx73, align 4, !dbg !7424
  store float %61, float* %arrayinit.begin72, align 4, !dbg !7423
  %arrayinit.element74 = getelementptr inbounds float, float* %arrayinit.begin72, i64 1, !dbg !7423
  %62 = load float*, float** %min.addr, align 8, !dbg !7425
  %arrayidx75 = getelementptr inbounds float, float* %62, i64 1, !dbg !7425
  %63 = load float, float* %arrayidx75, align 4, !dbg !7425
  store float %63, float* %arrayinit.element74, align 4, !dbg !7423
  %arrayinit.element76 = getelementptr inbounds float, float* %arrayinit.element74, i64 1, !dbg !7423
  %64 = load float*, float** %max.addr, align 8, !dbg !7426
  %arrayidx77 = getelementptr inbounds float, float* %64, i64 2, !dbg !7426
  %65 = load float, float* %arrayidx77, align 4, !dbg !7426
  store float %65, float* %arrayinit.element76, align 4, !dbg !7423
  %arrayinit.element78 = getelementptr inbounds [3 x float], [3 x float]* %arrayinit.element71, i64 1, !dbg !7414
  %arrayinit.begin79 = getelementptr inbounds [3 x float], [3 x float]* %arrayinit.element78, i64 0, i64 0, !dbg !7427
  %66 = load float*, float** %max.addr, align 8, !dbg !7428
  %arrayidx80 = getelementptr inbounds float, float* %66, i64 0, !dbg !7428
  %67 = load float, float* %arrayidx80, align 4, !dbg !7428
  store float %67, float* %arrayinit.begin79, align 4, !dbg !7427
  %arrayinit.element81 = getelementptr inbounds float, float* %arrayinit.begin79, i64 1, !dbg !7427
  %68 = load float*, float** %max.addr, align 8, !dbg !7429
  %arrayidx82 = getelementptr inbounds float, float* %68, i64 1, !dbg !7429
  %69 = load float, float* %arrayidx82, align 4, !dbg !7429
  store float %69, float* %arrayinit.element81, align 4, !dbg !7427
  %arrayinit.element83 = getelementptr inbounds float, float* %arrayinit.element81, i64 1, !dbg !7427
  %70 = load float*, float** %max.addr, align 8, !dbg !7430
  %arrayidx84 = getelementptr inbounds float, float* %70, i64 2, !dbg !7430
  %71 = load float, float* %arrayidx84, align 4, !dbg !7430
  store float %71, float* %arrayinit.element83, align 4, !dbg !7427
  %arrayinit.element85 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %arrayinit.element56, i64 1, !dbg !7379
  %arrayinit.begin86 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %arrayinit.element85, i64 0, i64 0, !dbg !7431
  %arrayinit.begin87 = getelementptr inbounds [3 x float], [3 x float]* %arrayinit.begin86, i64 0, i64 0, !dbg !7432
  %72 = load float*, float** %max.addr, align 8, !dbg !7433
  %arrayidx88 = getelementptr inbounds float, float* %72, i64 0, !dbg !7433
  %73 = load float, float* %arrayidx88, align 4, !dbg !7433
  store float %73, float* %arrayinit.begin87, align 4, !dbg !7432
  %arrayinit.element89 = getelementptr inbounds float, float* %arrayinit.begin87, i64 1, !dbg !7432
  %74 = load float*, float** %max.addr, align 8, !dbg !7434
  %arrayidx90 = getelementptr inbounds float, float* %74, i64 1, !dbg !7434
  %75 = load float, float* %arrayidx90, align 4, !dbg !7434
  store float %75, float* %arrayinit.element89, align 4, !dbg !7432
  %arrayinit.element91 = getelementptr inbounds float, float* %arrayinit.element89, i64 1, !dbg !7432
  %76 = load float*, float** %min.addr, align 8, !dbg !7435
  %arrayidx92 = getelementptr inbounds float, float* %76, i64 2, !dbg !7435
  %77 = load float, float* %arrayidx92, align 4, !dbg !7435
  store float %77, float* %arrayinit.element91, align 4, !dbg !7432
  %arrayinit.element93 = getelementptr inbounds [3 x float], [3 x float]* %arrayinit.begin86, i64 1, !dbg !7431
  %arrayinit.begin94 = getelementptr inbounds [3 x float], [3 x float]* %arrayinit.element93, i64 0, i64 0, !dbg !7436
  %78 = load float*, float** %min.addr, align 8, !dbg !7437
  %arrayidx95 = getelementptr inbounds float, float* %78, i64 0, !dbg !7437
  %79 = load float, float* %arrayidx95, align 4, !dbg !7437
  store float %79, float* %arrayinit.begin94, align 4, !dbg !7436
  %arrayinit.element96 = getelementptr inbounds float, float* %arrayinit.begin94, i64 1, !dbg !7436
  %80 = load float*, float** %max.addr, align 8, !dbg !7438
  %arrayidx97 = getelementptr inbounds float, float* %80, i64 1, !dbg !7438
  %81 = load float, float* %arrayidx97, align 4, !dbg !7438
  store float %81, float* %arrayinit.element96, align 4, !dbg !7436
  %arrayinit.element98 = getelementptr inbounds float, float* %arrayinit.element96, i64 1, !dbg !7436
  %82 = load float*, float** %min.addr, align 8, !dbg !7439
  %arrayidx99 = getelementptr inbounds float, float* %82, i64 2, !dbg !7439
  %83 = load float, float* %arrayidx99, align 4, !dbg !7439
  store float %83, float* %arrayinit.element98, align 4, !dbg !7436
  %arrayinit.element100 = getelementptr inbounds [3 x float], [3 x float]* %arrayinit.element93, i64 1, !dbg !7431
  %arrayinit.begin101 = getelementptr inbounds [3 x float], [3 x float]* %arrayinit.element100, i64 0, i64 0, !dbg !7440
  %84 = load float*, float** %min.addr, align 8, !dbg !7441
  %arrayidx102 = getelementptr inbounds float, float* %84, i64 0, !dbg !7441
  %85 = load float, float* %arrayidx102, align 4, !dbg !7441
  store float %85, float* %arrayinit.begin101, align 4, !dbg !7440
  %arrayinit.element103 = getelementptr inbounds float, float* %arrayinit.begin101, i64 1, !dbg !7440
  %86 = load float*, float** %max.addr, align 8, !dbg !7442
  %arrayidx104 = getelementptr inbounds float, float* %86, i64 1, !dbg !7442
  %87 = load float, float* %arrayidx104, align 4, !dbg !7442
  store float %87, float* %arrayinit.element103, align 4, !dbg !7440
  %arrayinit.element105 = getelementptr inbounds float, float* %arrayinit.element103, i64 1, !dbg !7440
  %88 = load float*, float** %max.addr, align 8, !dbg !7443
  %arrayidx106 = getelementptr inbounds float, float* %88, i64 2, !dbg !7443
  %89 = load float, float* %arrayidx106, align 4, !dbg !7443
  store float %89, float* %arrayinit.element105, align 4, !dbg !7440
  %arrayinit.element107 = getelementptr inbounds [3 x float], [3 x float]* %arrayinit.element100, i64 1, !dbg !7431
  %arrayinit.begin108 = getelementptr inbounds [3 x float], [3 x float]* %arrayinit.element107, i64 0, i64 0, !dbg !7444
  %90 = load float*, float** %max.addr, align 8, !dbg !7445
  %arrayidx109 = getelementptr inbounds float, float* %90, i64 0, !dbg !7445
  %91 = load float, float* %arrayidx109, align 4, !dbg !7445
  store float %91, float* %arrayinit.begin108, align 4, !dbg !7444
  %arrayinit.element110 = getelementptr inbounds float, float* %arrayinit.begin108, i64 1, !dbg !7444
  %92 = load float*, float** %max.addr, align 8, !dbg !7446
  %arrayidx111 = getelementptr inbounds float, float* %92, i64 1, !dbg !7446
  %93 = load float, float* %arrayidx111, align 4, !dbg !7446
  store float %93, float* %arrayinit.element110, align 4, !dbg !7444
  %arrayinit.element112 = getelementptr inbounds float, float* %arrayinit.element110, i64 1, !dbg !7444
  %94 = load float*, float** %max.addr, align 8, !dbg !7447
  %arrayidx113 = getelementptr inbounds float, float* %94, i64 2, !dbg !7447
  %95 = load float, float* %arrayidx113, align 4, !dbg !7447
  store float %95, float* %arrayinit.element112, align 4, !dbg !7444
  %96 = load i8, i8* %leaf.addr, align 1, !dbg !7448
  %tobool = icmp ne i8 %96, 0, !dbg !7448
  br i1 %tobool, label %if.then, label %if.else, !dbg !7450

if.then:                                          ; preds = %entry
  call void @glColor4f(float 0.000000e+00, float 1.000000e+00, float 0.000000e+00, float 5.000000e-01), !dbg !7451
  br label %if.end, !dbg !7451

if.else:                                          ; preds = %entry
  call void @glColor4f(float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 5.000000e-01), !dbg !7452
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %arrayidx114 = getelementptr inbounds [4 x [4 x [3 x float]]], [4 x [4 x [3 x float]]]* %quads, i64 0, i64 0, !dbg !7453
  %arrayidx115 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %arrayidx114, i64 0, i64 0, !dbg !7453
  %arrayidx116 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx115, i64 0, i64 0, !dbg !7453
  %97 = bitcast float* %arrayidx116 to i8*, !dbg !7454
  call void @glVertexPointer(i32 3, i32 5126, i32 0, i8* %97), !dbg !7455
  call void @glDrawArrays(i32 7, i32 0, i32 16), !dbg !7456
  ret void, !dbg !7457
}

declare dso_local void @glColor4f(float, float, float, float) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @GPU_init_draw_pbvh_BB() #0 !dbg !7458 {
entry:
  call void @glPushAttrib(i32 8192), !dbg !7459
  call void @glDisable(i32 2884), !dbg !7460
  call void @glEnableClientState(i32 32884), !dbg !7461
  call void @glDisableClientState(i32 32886), !dbg !7462
  call void @glPolygonMode(i32 1032, i32 6913), !dbg !7463
  call void @glDisable(i32 2896), !dbg !7464
  call void @glDisable(i32 2903), !dbg !7465
  call void @glEnable(i32 3042), !dbg !7466
  %0 = load void (i32, i32)*, void (i32, i32)** @__glewBindBufferARB, align 8, !dbg !7467
  call void %0(i32 34962, i32 0), !dbg !7467
  ret void, !dbg !7468
}

declare dso_local void @glPushAttrib(i32) #2

declare dso_local void @glDisable(i32) #2

declare dso_local void @glEnable(i32) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @GPU_end_draw_pbvh_BB() #0 !dbg !7469 {
entry:
  call void @glPolygonMode(i32 1032, i32 6914), !dbg !7470
  call void @glPopAttrib(), !dbg !7471
  ret void, !dbg !7472
}

declare dso_local void @glPopAttrib() #2

; Function Attrs: noinline nounwind uwtable
define internal void @gpu_buffer_pool_delete_last(%struct.GPUBufferPool* %pool) #0 !dbg !7473 {
entry:
  %pool.addr = alloca %struct.GPUBufferPool*, align 8
  %last = alloca %struct.GPUBuffer*, align 8
  store %struct.GPUBufferPool* %pool, %struct.GPUBufferPool** %pool.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GPUBufferPool** %pool.addr, metadata !7474, metadata !DIExpression()), !dbg !7475
  call void @llvm.dbg.declare(metadata %struct.GPUBuffer** %last, metadata !7476, metadata !DIExpression()), !dbg !7477
  %0 = load %struct.GPUBufferPool*, %struct.GPUBufferPool** %pool.addr, align 8, !dbg !7478
  %totbuf = getelementptr inbounds %struct.GPUBufferPool, %struct.GPUBufferPool* %0, i32 0, i32 0, !dbg !7480
  %1 = load i32, i32* %totbuf, align 8, !dbg !7480
  %cmp = icmp sle i32 %1, 0, !dbg !7481
  br i1 %cmp, label %if.then, label %if.end, !dbg !7482

if.then:                                          ; preds = %entry
  br label %return, !dbg !7483

if.end:                                           ; preds = %entry
  %2 = load %struct.GPUBufferPool*, %struct.GPUBufferPool** %pool.addr, align 8, !dbg !7484
  %buffers = getelementptr inbounds %struct.GPUBufferPool, %struct.GPUBufferPool* %2, i32 0, i32 4, !dbg !7486
  %3 = load %struct.GPUBuffer**, %struct.GPUBuffer*** %buffers, align 8, !dbg !7486
  %4 = load %struct.GPUBufferPool*, %struct.GPUBufferPool** %pool.addr, align 8, !dbg !7487
  %totbuf1 = getelementptr inbounds %struct.GPUBufferPool, %struct.GPUBufferPool* %4, i32 0, i32 0, !dbg !7488
  %5 = load i32, i32* %totbuf1, align 8, !dbg !7488
  %sub = sub nsw i32 %5, 1, !dbg !7489
  %idxprom = sext i32 %sub to i64, !dbg !7484
  %arrayidx = getelementptr inbounds %struct.GPUBuffer*, %struct.GPUBuffer** %3, i64 %idxprom, !dbg !7484
  %6 = load %struct.GPUBuffer*, %struct.GPUBuffer** %arrayidx, align 8, !dbg !7484
  store %struct.GPUBuffer* %6, %struct.GPUBuffer** %last, align 8, !dbg !7490
  %tobool = icmp ne %struct.GPUBuffer* %6, null, !dbg !7490
  br i1 %tobool, label %if.end3, label %if.then2, !dbg !7491

if.then2:                                         ; preds = %if.end
  br label %return, !dbg !7492

if.end3:                                          ; preds = %if.end
  %7 = load i32, i32* @useVBOs, align 4, !dbg !7493
  %tobool4 = icmp ne i32 %7, 0, !dbg !7493
  br i1 %tobool4, label %if.then5, label %if.else, !dbg !7495

if.then5:                                         ; preds = %if.end3
  %8 = load void (i32, i32*)*, void (i32, i32*)** @__glewDeleteBuffersARB, align 8, !dbg !7496
  %9 = load %struct.GPUBuffer*, %struct.GPUBuffer** %last, align 8, !dbg !7497
  %id = getelementptr inbounds %struct.GPUBuffer, %struct.GPUBuffer* %9, i32 0, i32 2, !dbg !7498
  call void %8(i32 1, i32* %id), !dbg !7496
  br label %if.end6, !dbg !7496

if.else:                                          ; preds = %if.end3
  %10 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !7499
  %11 = load %struct.GPUBuffer*, %struct.GPUBuffer** %last, align 8, !dbg !7500
  %pointer = getelementptr inbounds %struct.GPUBuffer, %struct.GPUBuffer* %11, i32 0, i32 1, !dbg !7501
  %12 = load i8*, i8** %pointer, align 8, !dbg !7501
  call void %10(i8* %12), !dbg !7499
  br label %if.end6

if.end6:                                          ; preds = %if.else, %if.then5
  %13 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !7502
  %14 = load %struct.GPUBuffer*, %struct.GPUBuffer** %last, align 8, !dbg !7503
  %15 = bitcast %struct.GPUBuffer* %14 to i8*, !dbg !7503
  call void %13(i8* %15), !dbg !7502
  %16 = load %struct.GPUBufferPool*, %struct.GPUBufferPool** %pool.addr, align 8, !dbg !7504
  %totbuf7 = getelementptr inbounds %struct.GPUBufferPool, %struct.GPUBufferPool* %16, i32 0, i32 0, !dbg !7505
  %17 = load i32, i32* %totbuf7, align 8, !dbg !7506
  %dec = add nsw i32 %17, -1, !dbg !7506
  store i32 %dec, i32* %totbuf7, align 8, !dbg !7506
  %18 = load %struct.GPUBufferPool*, %struct.GPUBufferPool** %pool.addr, align 8, !dbg !7507
  %buffers8 = getelementptr inbounds %struct.GPUBufferPool, %struct.GPUBufferPool* %18, i32 0, i32 4, !dbg !7508
  %19 = load %struct.GPUBuffer**, %struct.GPUBuffer*** %buffers8, align 8, !dbg !7508
  %20 = load %struct.GPUBufferPool*, %struct.GPUBufferPool** %pool.addr, align 8, !dbg !7509
  %totbuf9 = getelementptr inbounds %struct.GPUBufferPool, %struct.GPUBufferPool* %20, i32 0, i32 0, !dbg !7510
  %21 = load i32, i32* %totbuf9, align 8, !dbg !7510
  %idxprom10 = sext i32 %21 to i64, !dbg !7507
  %arrayidx11 = getelementptr inbounds %struct.GPUBuffer*, %struct.GPUBuffer** %19, i64 %idxprom10, !dbg !7507
  store %struct.GPUBuffer* null, %struct.GPUBuffer** %arrayidx11, align 8, !dbg !7511
  br label %return, !dbg !7512

return:                                           ; preds = %if.end6, %if.then2, %if.then
  ret void, !dbg !7512
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.GPUBufferPool* @gpu_get_global_buffer_pool() #0 !dbg !7513 {
entry:
  %0 = load %struct.GPUBufferPool*, %struct.GPUBufferPool** @gpu_buffer_pool, align 8, !dbg !7516
  %tobool = icmp ne %struct.GPUBufferPool* %0, null, !dbg !7516
  br i1 %tobool, label %if.end, label %if.then, !dbg !7518

if.then:                                          ; preds = %entry
  %call = call %struct.GPUBufferPool* @gpu_buffer_pool_new(), !dbg !7519
  store %struct.GPUBufferPool* %call, %struct.GPUBufferPool** @gpu_buffer_pool, align 8, !dbg !7520
  br label %if.end, !dbg !7521

if.end:                                           ; preds = %if.then, %entry
  %1 = load %struct.GPUBufferPool*, %struct.GPUBufferPool** @gpu_buffer_pool, align 8, !dbg !7522
  ret %struct.GPUBufferPool* %1, !dbg !7523
}

; Function Attrs: noinline nounwind uwtable
define internal void @gpu_buffer_pool_remove_index(%struct.GPUBufferPool* %pool, i32 %index) #0 !dbg !7524 {
entry:
  %pool.addr = alloca %struct.GPUBufferPool*, align 8
  %index.addr = alloca i32, align 4
  %i = alloca i32, align 4
  store %struct.GPUBufferPool* %pool, %struct.GPUBufferPool** %pool.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GPUBufferPool** %pool.addr, metadata !7527, metadata !DIExpression()), !dbg !7528
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !7529, metadata !DIExpression()), !dbg !7530
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7531, metadata !DIExpression()), !dbg !7532
  %0 = load %struct.GPUBufferPool*, %struct.GPUBufferPool** %pool.addr, align 8, !dbg !7533
  %tobool = icmp ne %struct.GPUBufferPool* %0, null, !dbg !7533
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !7535

lor.lhs.false:                                    ; preds = %entry
  %1 = load i32, i32* %index.addr, align 4, !dbg !7536
  %cmp = icmp slt i32 %1, 0, !dbg !7537
  br i1 %cmp, label %if.then, label %lor.lhs.false1, !dbg !7538

lor.lhs.false1:                                   ; preds = %lor.lhs.false
  %2 = load i32, i32* %index.addr, align 4, !dbg !7539
  %3 = load %struct.GPUBufferPool*, %struct.GPUBufferPool** %pool.addr, align 8, !dbg !7540
  %totbuf = getelementptr inbounds %struct.GPUBufferPool, %struct.GPUBufferPool* %3, i32 0, i32 0, !dbg !7541
  %4 = load i32, i32* %totbuf, align 8, !dbg !7541
  %cmp2 = icmp sge i32 %2, %4, !dbg !7542
  br i1 %cmp2, label %if.then, label %if.end, !dbg !7543

if.then:                                          ; preds = %lor.lhs.false1, %lor.lhs.false, %entry
  br label %return, !dbg !7544

if.end:                                           ; preds = %lor.lhs.false1
  %5 = load i32, i32* %index.addr, align 4, !dbg !7545
  store i32 %5, i32* %i, align 4, !dbg !7547
  br label %for.cond, !dbg !7548

for.cond:                                         ; preds = %for.inc, %if.end
  %6 = load i32, i32* %i, align 4, !dbg !7549
  %7 = load %struct.GPUBufferPool*, %struct.GPUBufferPool** %pool.addr, align 8, !dbg !7551
  %totbuf3 = getelementptr inbounds %struct.GPUBufferPool, %struct.GPUBufferPool* %7, i32 0, i32 0, !dbg !7552
  %8 = load i32, i32* %totbuf3, align 8, !dbg !7552
  %sub = sub nsw i32 %8, 1, !dbg !7553
  %cmp4 = icmp slt i32 %6, %sub, !dbg !7554
  br i1 %cmp4, label %for.body, label %for.end, !dbg !7555

for.body:                                         ; preds = %for.cond
  %9 = load %struct.GPUBufferPool*, %struct.GPUBufferPool** %pool.addr, align 8, !dbg !7556
  %buffers = getelementptr inbounds %struct.GPUBufferPool, %struct.GPUBufferPool* %9, i32 0, i32 4, !dbg !7557
  %10 = load %struct.GPUBuffer**, %struct.GPUBuffer*** %buffers, align 8, !dbg !7557
  %11 = load i32, i32* %i, align 4, !dbg !7558
  %add = add nsw i32 %11, 1, !dbg !7559
  %idxprom = sext i32 %add to i64, !dbg !7556
  %arrayidx = getelementptr inbounds %struct.GPUBuffer*, %struct.GPUBuffer** %10, i64 %idxprom, !dbg !7556
  %12 = load %struct.GPUBuffer*, %struct.GPUBuffer** %arrayidx, align 8, !dbg !7556
  %13 = load %struct.GPUBufferPool*, %struct.GPUBufferPool** %pool.addr, align 8, !dbg !7560
  %buffers5 = getelementptr inbounds %struct.GPUBufferPool, %struct.GPUBufferPool* %13, i32 0, i32 4, !dbg !7561
  %14 = load %struct.GPUBuffer**, %struct.GPUBuffer*** %buffers5, align 8, !dbg !7561
  %15 = load i32, i32* %i, align 4, !dbg !7562
  %idxprom6 = sext i32 %15 to i64, !dbg !7560
  %arrayidx7 = getelementptr inbounds %struct.GPUBuffer*, %struct.GPUBuffer** %14, i64 %idxprom6, !dbg !7560
  store %struct.GPUBuffer* %12, %struct.GPUBuffer** %arrayidx7, align 8, !dbg !7563
  br label %for.inc, !dbg !7560

for.inc:                                          ; preds = %for.body
  %16 = load i32, i32* %i, align 4, !dbg !7564
  %inc = add nsw i32 %16, 1, !dbg !7564
  store i32 %inc, i32* %i, align 4, !dbg !7564
  br label %for.cond, !dbg !7565, !llvm.loop !7566

for.end:                                          ; preds = %for.cond
  %17 = load %struct.GPUBufferPool*, %struct.GPUBufferPool** %pool.addr, align 8, !dbg !7568
  %totbuf8 = getelementptr inbounds %struct.GPUBufferPool, %struct.GPUBufferPool* %17, i32 0, i32 0, !dbg !7570
  %18 = load i32, i32* %totbuf8, align 8, !dbg !7570
  %cmp9 = icmp sgt i32 %18, 0, !dbg !7571
  br i1 %cmp9, label %if.then10, label %if.end16, !dbg !7572

if.then10:                                        ; preds = %for.end
  %19 = load %struct.GPUBufferPool*, %struct.GPUBufferPool** %pool.addr, align 8, !dbg !7573
  %buffers11 = getelementptr inbounds %struct.GPUBufferPool, %struct.GPUBufferPool* %19, i32 0, i32 4, !dbg !7574
  %20 = load %struct.GPUBuffer**, %struct.GPUBuffer*** %buffers11, align 8, !dbg !7574
  %21 = load %struct.GPUBufferPool*, %struct.GPUBufferPool** %pool.addr, align 8, !dbg !7575
  %totbuf12 = getelementptr inbounds %struct.GPUBufferPool, %struct.GPUBufferPool* %21, i32 0, i32 0, !dbg !7576
  %22 = load i32, i32* %totbuf12, align 8, !dbg !7576
  %sub13 = sub nsw i32 %22, 1, !dbg !7577
  %idxprom14 = sext i32 %sub13 to i64, !dbg !7573
  %arrayidx15 = getelementptr inbounds %struct.GPUBuffer*, %struct.GPUBuffer** %20, i64 %idxprom14, !dbg !7573
  store %struct.GPUBuffer* null, %struct.GPUBuffer** %arrayidx15, align 8, !dbg !7578
  br label %if.end16, !dbg !7573

if.end16:                                         ; preds = %if.then10, %for.end
  %23 = load %struct.GPUBufferPool*, %struct.GPUBufferPool** %pool.addr, align 8, !dbg !7579
  %totbuf17 = getelementptr inbounds %struct.GPUBufferPool, %struct.GPUBufferPool* %23, i32 0, i32 0, !dbg !7580
  %24 = load i32, i32* %totbuf17, align 8, !dbg !7581
  %dec = add nsw i32 %24, -1, !dbg !7581
  store i32 %dec, i32* %totbuf17, align 8, !dbg !7581
  br label %return, !dbg !7582

return:                                           ; preds = %if.end16, %if.then
  ret void, !dbg !7582
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.GPUBufferPool* @gpu_buffer_pool_new() #0 !dbg !7583 {
entry:
  %pool = alloca %struct.GPUBufferPool*, align 8
  call void @llvm.dbg.declare(metadata %struct.GPUBufferPool** %pool, metadata !7584, metadata !DIExpression()), !dbg !7585
  %0 = load i32, i32* @useVBOs, align 4, !dbg !7586
  %cmp = icmp eq i32 %0, -1, !dbg !7588
  br i1 %cmp, label %if.then, label %if.end, !dbg !7589

if.then:                                          ; preds = %entry
  %1 = load i8, i8* @__GLEW_ARB_vertex_buffer_object, align 1, !dbg !7590
  %conv = zext i8 %1 to i32, !dbg !7590
  %tobool = icmp ne i32 %conv, 0, !dbg !7590
  %2 = zext i1 %tobool to i64, !dbg !7590
  %cond = select i1 %tobool, i32 1, i32 0, !dbg !7590
  store i32 %cond, i32* @useVBOs, align 4, !dbg !7591
  br label %if.end, !dbg !7592

if.end:                                           ; preds = %if.then, %entry
  %3 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !7593
  %call = call i8* %3(i64 32, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.7, i64 0, i64 0)), !dbg !7593
  %4 = bitcast i8* %call to %struct.GPUBufferPool*, !dbg !7593
  store %struct.GPUBufferPool* %4, %struct.GPUBufferPool** %pool, align 8, !dbg !7594
  %5 = load %struct.GPUBufferPool*, %struct.GPUBufferPool** %pool, align 8, !dbg !7595
  %maxsize = getelementptr inbounds %struct.GPUBufferPool, %struct.GPUBufferPool* %5, i32 0, i32 2, !dbg !7596
  store i32 8, i32* %maxsize, align 8, !dbg !7597
  %6 = load %struct.GPUBufferPool*, %struct.GPUBufferPool** %pool, align 8, !dbg !7598
  %maxpbvhsize = getelementptr inbounds %struct.GPUBufferPool, %struct.GPUBufferPool* %6, i32 0, i32 3, !dbg !7599
  store i32 100, i32* %maxpbvhsize, align 4, !dbg !7600
  %7 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !7601
  %8 = load %struct.GPUBufferPool*, %struct.GPUBufferPool** %pool, align 8, !dbg !7602
  %maxsize1 = getelementptr inbounds %struct.GPUBufferPool, %struct.GPUBufferPool* %8, i32 0, i32 2, !dbg !7603
  %9 = load i32, i32* %maxsize1, align 8, !dbg !7603
  %conv2 = sext i32 %9 to i64, !dbg !7602
  %mul = mul i64 8, %conv2, !dbg !7604
  %call3 = call i8* %7(i64 %mul, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.8, i64 0, i64 0)), !dbg !7601
  %10 = bitcast i8* %call3 to %struct.GPUBuffer**, !dbg !7601
  %11 = load %struct.GPUBufferPool*, %struct.GPUBufferPool** %pool, align 8, !dbg !7605
  %buffers = getelementptr inbounds %struct.GPUBufferPool, %struct.GPUBufferPool* %11, i32 0, i32 4, !dbg !7606
  store %struct.GPUBuffer** %10, %struct.GPUBuffer*** %buffers, align 8, !dbg !7607
  %12 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !7608
  %13 = load %struct.GPUBufferPool*, %struct.GPUBufferPool** %pool, align 8, !dbg !7609
  %maxpbvhsize4 = getelementptr inbounds %struct.GPUBufferPool, %struct.GPUBufferPool* %13, i32 0, i32 3, !dbg !7610
  %14 = load i32, i32* %maxpbvhsize4, align 4, !dbg !7610
  %conv5 = sext i32 %14 to i64, !dbg !7609
  %mul6 = mul i64 4, %conv5, !dbg !7611
  %call7 = call i8* %12(i64 %mul6, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.9, i64 0, i64 0)), !dbg !7608
  %15 = bitcast i8* %call7 to i32*, !dbg !7608
  %16 = load %struct.GPUBufferPool*, %struct.GPUBufferPool** %pool, align 8, !dbg !7612
  %pbvhbufids = getelementptr inbounds %struct.GPUBufferPool, %struct.GPUBufferPool* %16, i32 0, i32 5, !dbg !7613
  store i32* %15, i32** %pbvhbufids, align 8, !dbg !7614
  %17 = load %struct.GPUBufferPool*, %struct.GPUBufferPool** %pool, align 8, !dbg !7615
  ret %struct.GPUBufferPool* %17, !dbg !7616
}

declare dso_local i32 @BLI_thread_is_main() #2

; Function Attrs: noinline nounwind uwtable
define internal void @gpu_drawobject_add_triangle(%struct.GPUDrawObject* %gdo, i32 %base_point_index, i32 %face_index, i32 %v1, i32 %v2, i32 %v3) #0 !dbg !7617 {
entry:
  %gdo.addr = alloca %struct.GPUDrawObject*, align 8
  %base_point_index.addr = alloca i32, align 4
  %face_index.addr = alloca i32, align 4
  %v1.addr = alloca i32, align 4
  %v2.addr = alloca i32, align 4
  %v3.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %v = alloca [3 x i32], align 4
  store %struct.GPUDrawObject* %gdo, %struct.GPUDrawObject** %gdo.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GPUDrawObject** %gdo.addr, metadata !7620, metadata !DIExpression()), !dbg !7621
  store i32 %base_point_index, i32* %base_point_index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %base_point_index.addr, metadata !7622, metadata !DIExpression()), !dbg !7623
  store i32 %face_index, i32* %face_index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %face_index.addr, metadata !7624, metadata !DIExpression()), !dbg !7625
  store i32 %v1, i32* %v1.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %v1.addr, metadata !7626, metadata !DIExpression()), !dbg !7627
  store i32 %v2, i32* %v2.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %v2.addr, metadata !7628, metadata !DIExpression()), !dbg !7629
  store i32 %v3, i32* %v3.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %v3.addr, metadata !7630, metadata !DIExpression()), !dbg !7631
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7632, metadata !DIExpression()), !dbg !7633
  call void @llvm.dbg.declare(metadata [3 x i32]* %v, metadata !7634, metadata !DIExpression()), !dbg !7635
  %arrayinit.begin = getelementptr inbounds [3 x i32], [3 x i32]* %v, i64 0, i64 0, !dbg !7636
  %0 = load i32, i32* %v1.addr, align 4, !dbg !7637
  store i32 %0, i32* %arrayinit.begin, align 4, !dbg !7636
  %arrayinit.element = getelementptr inbounds i32, i32* %arrayinit.begin, i64 1, !dbg !7636
  %1 = load i32, i32* %v2.addr, align 4, !dbg !7638
  store i32 %1, i32* %arrayinit.element, align 4, !dbg !7636
  %arrayinit.element1 = getelementptr inbounds i32, i32* %arrayinit.element, i64 1, !dbg !7636
  %2 = load i32, i32* %v3.addr, align 4, !dbg !7639
  store i32 %2, i32* %arrayinit.element1, align 4, !dbg !7636
  store i32 0, i32* %i, align 4, !dbg !7640
  br label %for.cond, !dbg !7642

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load i32, i32* %i, align 4, !dbg !7643
  %cmp = icmp slt i32 %3, 3, !dbg !7645
  br i1 %cmp, label %for.body, label %for.end, !dbg !7646

for.body:                                         ; preds = %for.cond
  %4 = load %struct.GPUDrawObject*, %struct.GPUDrawObject** %gdo.addr, align 8, !dbg !7647
  %5 = load i32, i32* %i, align 4, !dbg !7648
  %idxprom = sext i32 %5 to i64, !dbg !7649
  %arrayidx = getelementptr inbounds [3 x i32], [3 x i32]* %v, i64 0, i64 %idxprom, !dbg !7649
  %6 = load i32, i32* %arrayidx, align 4, !dbg !7649
  %7 = load i32, i32* %base_point_index.addr, align 4, !dbg !7650
  %8 = load i32, i32* %i, align 4, !dbg !7651
  %add = add nsw i32 %7, %8, !dbg !7652
  call void @gpu_drawobject_add_vert_point(%struct.GPUDrawObject* %4, i32 %6, i32 %add), !dbg !7653
  br label %for.inc, !dbg !7653

for.inc:                                          ; preds = %for.body
  %9 = load i32, i32* %i, align 4, !dbg !7654
  %inc = add nsw i32 %9, 1, !dbg !7654
  store i32 %inc, i32* %i, align 4, !dbg !7654
  br label %for.cond, !dbg !7655, !llvm.loop !7656

for.end:                                          ; preds = %for.cond
  %10 = load i32, i32* %face_index.addr, align 4, !dbg !7658
  %11 = load %struct.GPUDrawObject*, %struct.GPUDrawObject** %gdo.addr, align 8, !dbg !7659
  %triangle_to_mface = getelementptr inbounds %struct.GPUDrawObject, %struct.GPUDrawObject* %11, i32 0, i32 6, !dbg !7660
  %12 = load i32*, i32** %triangle_to_mface, align 8, !dbg !7660
  %13 = load i32, i32* %base_point_index.addr, align 4, !dbg !7661
  %div = sdiv i32 %13, 3, !dbg !7662
  %idxprom2 = sext i32 %div to i64, !dbg !7659
  %arrayidx3 = getelementptr inbounds i32, i32* %12, i64 %idxprom2, !dbg !7659
  store i32 %10, i32* %arrayidx3, align 4, !dbg !7663
  ret void, !dbg !7664
}

; Function Attrs: noinline nounwind uwtable
define internal void @gpu_drawobject_add_vert_point(%struct.GPUDrawObject* %gdo, i32 %vert_index, i32 %point_index) #0 !dbg !7665 {
entry:
  %gdo.addr = alloca %struct.GPUDrawObject*, align 8
  %vert_index.addr = alloca i32, align 4
  %point_index.addr = alloca i32, align 4
  %lnk = alloca %struct.GPUVertPointLink*, align 8
  store %struct.GPUDrawObject* %gdo, %struct.GPUDrawObject** %gdo.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GPUDrawObject** %gdo.addr, metadata !7668, metadata !DIExpression()), !dbg !7669
  store i32 %vert_index, i32* %vert_index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %vert_index.addr, metadata !7670, metadata !DIExpression()), !dbg !7671
  store i32 %point_index, i32* %point_index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %point_index.addr, metadata !7672, metadata !DIExpression()), !dbg !7673
  call void @llvm.dbg.declare(metadata %struct.GPUVertPointLink** %lnk, metadata !7674, metadata !DIExpression()), !dbg !7677
  %0 = load %struct.GPUDrawObject*, %struct.GPUDrawObject** %gdo.addr, align 8, !dbg !7678
  %vert_points = getelementptr inbounds %struct.GPUDrawObject, %struct.GPUDrawObject* %0, i32 0, i32 7, !dbg !7679
  %1 = load %struct.GPUVertPointLink*, %struct.GPUVertPointLink** %vert_points, align 8, !dbg !7679
  %2 = load i32, i32* %vert_index.addr, align 4, !dbg !7680
  %idxprom = sext i32 %2 to i64, !dbg !7678
  %arrayidx = getelementptr inbounds %struct.GPUVertPointLink, %struct.GPUVertPointLink* %1, i64 %idxprom, !dbg !7678
  store %struct.GPUVertPointLink* %arrayidx, %struct.GPUVertPointLink** %lnk, align 8, !dbg !7681
  %3 = load %struct.GPUVertPointLink*, %struct.GPUVertPointLink** %lnk, align 8, !dbg !7682
  %point_index1 = getelementptr inbounds %struct.GPUVertPointLink, %struct.GPUVertPointLink* %3, i32 0, i32 0, !dbg !7684
  %4 = load i32, i32* %point_index1, align 4, !dbg !7684
  %cmp = icmp eq i32 %4, -1, !dbg !7685
  br i1 %cmp, label %if.then, label %if.end, !dbg !7686

if.then:                                          ; preds = %entry
  %5 = load i32, i32* %point_index.addr, align 4, !dbg !7687
  %6 = load %struct.GPUVertPointLink*, %struct.GPUVertPointLink** %lnk, align 8, !dbg !7689
  %point_index2 = getelementptr inbounds %struct.GPUVertPointLink, %struct.GPUVertPointLink* %6, i32 0, i32 0, !dbg !7690
  store i32 %5, i32* %point_index2, align 4, !dbg !7691
  br label %if.end, !dbg !7692

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !7693
}

; Function Attrs: noinline nounwind uwtable
define internal void @normal_short_to_float_v3(float* %out, i16* %in) #0 !dbg !7694 {
entry:
  %out.addr = alloca float*, align 8
  %in.addr = alloca i16*, align 8
  store float* %out, float** %out.addr, align 8
  call void @llvm.dbg.declare(metadata float** %out.addr, metadata !7697, metadata !DIExpression()), !dbg !7698
  store i16* %in, i16** %in.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %in.addr, metadata !7699, metadata !DIExpression()), !dbg !7700
  %0 = load i16*, i16** %in.addr, align 8, !dbg !7701
  %arrayidx = getelementptr inbounds i16, i16* %0, i64 0, !dbg !7701
  %1 = load i16, i16* %arrayidx, align 2, !dbg !7701
  %conv = sext i16 %1 to i32, !dbg !7701
  %conv1 = sitofp i32 %conv to float, !dbg !7701
  %mul = fmul float %conv1, 0x3F00002000000000, !dbg !7702
  %2 = load float*, float** %out.addr, align 8, !dbg !7703
  %arrayidx2 = getelementptr inbounds float, float* %2, i64 0, !dbg !7703
  store float %mul, float* %arrayidx2, align 4, !dbg !7704
  %3 = load i16*, i16** %in.addr, align 8, !dbg !7705
  %arrayidx3 = getelementptr inbounds i16, i16* %3, i64 1, !dbg !7705
  %4 = load i16, i16* %arrayidx3, align 2, !dbg !7705
  %conv4 = sext i16 %4 to i32, !dbg !7705
  %conv5 = sitofp i32 %conv4 to float, !dbg !7705
  %mul6 = fmul float %conv5, 0x3F00002000000000, !dbg !7706
  %5 = load float*, float** %out.addr, align 8, !dbg !7707
  %arrayidx7 = getelementptr inbounds float, float* %5, i64 1, !dbg !7707
  store float %mul6, float* %arrayidx7, align 4, !dbg !7708
  %6 = load i16*, i16** %in.addr, align 8, !dbg !7709
  %arrayidx8 = getelementptr inbounds i16, i16* %6, i64 2, !dbg !7709
  %7 = load i16, i16* %arrayidx8, align 2, !dbg !7709
  %conv9 = sext i16 %7 to i32, !dbg !7709
  %conv10 = sitofp i32 %conv9 to float, !dbg !7709
  %mul11 = fmul float %conv10, 0x3F00002000000000, !dbg !7710
  %8 = load float*, float** %out.addr, align 8, !dbg !7711
  %arrayidx12 = getelementptr inbounds float, float* %8, i64 2, !dbg !7711
  store float %mul11, float* %arrayidx12, align 4, !dbg !7712
  ret void, !dbg !7713
}

; Function Attrs: noinline nounwind uwtable
define internal void @copy_mcol_uc3(i8* %v, i8* %col) #0 !dbg !7714 {
entry:
  %v.addr = alloca i8*, align 8
  %col.addr = alloca i8*, align 8
  store i8* %v, i8** %v.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr, metadata !7717, metadata !DIExpression()), !dbg !7718
  store i8* %col, i8** %col.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %col.addr, metadata !7719, metadata !DIExpression()), !dbg !7720
  %0 = load i8*, i8** %col.addr, align 8, !dbg !7721
  %arrayidx = getelementptr inbounds i8, i8* %0, i64 3, !dbg !7721
  %1 = load i8, i8* %arrayidx, align 1, !dbg !7721
  %2 = load i8*, i8** %v.addr, align 8, !dbg !7722
  %arrayidx1 = getelementptr inbounds i8, i8* %2, i64 0, !dbg !7722
  store i8 %1, i8* %arrayidx1, align 1, !dbg !7723
  %3 = load i8*, i8** %col.addr, align 8, !dbg !7724
  %arrayidx2 = getelementptr inbounds i8, i8* %3, i64 2, !dbg !7724
  %4 = load i8, i8* %arrayidx2, align 1, !dbg !7724
  %5 = load i8*, i8** %v.addr, align 8, !dbg !7725
  %arrayidx3 = getelementptr inbounds i8, i8* %5, i64 1, !dbg !7725
  store i8 %4, i8* %arrayidx3, align 1, !dbg !7726
  %6 = load i8*, i8** %col.addr, align 8, !dbg !7727
  %arrayidx4 = getelementptr inbounds i8, i8* %6, i64 1, !dbg !7727
  %7 = load i8, i8* %arrayidx4, align 1, !dbg !7727
  %8 = load i8*, i8** %v.addr, align 8, !dbg !7728
  %arrayidx5 = getelementptr inbounds i8, i8* %8, i64 2, !dbg !7728
  store i8 %7, i8* %arrayidx5, align 1, !dbg !7729
  ret void, !dbg !7730
}

declare dso_local i8* @DM_get_tessface_data_layer(%struct.DerivedMesh*, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal void @copy_v2_v2(float* %r, float* %a) #0 !dbg !7731 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !7732, metadata !DIExpression()), !dbg !7733
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !7734, metadata !DIExpression()), !dbg !7735
  %0 = load float*, float** %a.addr, align 8, !dbg !7736
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !7736
  %1 = load float, float* %arrayidx, align 4, !dbg !7736
  %2 = load float*, float** %r.addr, align 8, !dbg !7737
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !7737
  store float %1, float* %arrayidx1, align 4, !dbg !7738
  %3 = load float*, float** %a.addr, align 8, !dbg !7739
  %arrayidx2 = getelementptr inbounds float, float* %3, i64 1, !dbg !7739
  %4 = load float, float* %arrayidx2, align 4, !dbg !7739
  %5 = load float*, float** %r.addr, align 8, !dbg !7740
  %arrayidx3 = getelementptr inbounds float, float* %5, i64 1, !dbg !7740
  store float %4, float* %arrayidx3, align 4, !dbg !7741
  ret void, !dbg !7742
}

declare dso_local %struct.MTFace* @DM_paint_uvlayer_active_get(%struct.DerivedMesh*, i32) #2

declare dso_local i32 @CustomData_get_stencil_layer(%struct.CustomData*, i32) #2

declare dso_local i8* @CustomData_get_layer_n(%struct.CustomData*, i32, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal %struct.GPUBuffer* @gpu_buffer_setup_type(%struct.DerivedMesh* %dm, i32 %type) #0 !dbg !7743 {
entry:
  %retval = alloca %struct.GPUBuffer*, align 8
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %type.addr = alloca i32, align 4
  %ts = alloca %struct.GPUBufferTypeSettings*, align 8
  %user_data = alloca i8*, align 8
  %buf = alloca %struct.GPUBuffer*, align 8
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !7744, metadata !DIExpression()), !dbg !7745
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !7746, metadata !DIExpression()), !dbg !7747
  call void @llvm.dbg.declare(metadata %struct.GPUBufferTypeSettings** %ts, metadata !7748, metadata !DIExpression()), !dbg !7750
  call void @llvm.dbg.declare(metadata i8** %user_data, metadata !7751, metadata !DIExpression()), !dbg !7752
  store i8* null, i8** %user_data, align 8, !dbg !7752
  call void @llvm.dbg.declare(metadata %struct.GPUBuffer** %buf, metadata !7753, metadata !DIExpression()), !dbg !7754
  %0 = load i32, i32* %type.addr, align 4, !dbg !7755
  %idxprom = zext i32 %0 to i64, !dbg !7756
  %arrayidx = getelementptr inbounds [7 x %struct.GPUBufferTypeSettings], [7 x %struct.GPUBufferTypeSettings]* @gpu_buffer_type_settings, i64 0, i64 %idxprom, !dbg !7756
  store %struct.GPUBufferTypeSettings* %arrayidx, %struct.GPUBufferTypeSettings** %ts, align 8, !dbg !7757
  %1 = load i32, i32* %type.addr, align 4, !dbg !7758
  %cmp = icmp eq i32 %1, 2, !dbg !7760
  br i1 %cmp, label %if.then, label %if.else, !dbg !7761

if.then:                                          ; preds = %entry
  %2 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !7762
  %3 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !7765
  %drawObject = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %3, i32 0, i32 13, !dbg !7766
  %4 = load %struct.GPUDrawObject*, %struct.GPUDrawObject** %drawObject, align 8, !dbg !7766
  %colType = getelementptr inbounds %struct.GPUDrawObject, %struct.GPUDrawObject* %4, i32 0, i32 8, !dbg !7767
  %5 = load i32, i32* %colType, align 8, !dbg !7767
  %call = call i8* @DM_get_tessface_data_layer(%struct.DerivedMesh* %2, i32 %5), !dbg !7768
  store i8* %call, i8** %user_data, align 8, !dbg !7769
  %tobool = icmp ne i8* %call, null, !dbg !7769
  br i1 %tobool, label %if.end, label %if.then1, !dbg !7770

if.then1:                                         ; preds = %if.then
  store %struct.GPUBuffer* null, %struct.GPUBuffer** %retval, align 8, !dbg !7771
  br label %return, !dbg !7771

if.end:                                           ; preds = %if.then
  br label %if.end10, !dbg !7772

if.else:                                          ; preds = %entry
  %6 = load i32, i32* %type.addr, align 4, !dbg !7773
  %cmp2 = icmp eq i32 %6, 3, !dbg !7773
  br i1 %cmp2, label %if.then4, label %lor.lhs.false, !dbg !7773

lor.lhs.false:                                    ; preds = %if.else
  %7 = load i32, i32* %type.addr, align 4, !dbg !7773
  %cmp3 = icmp eq i32 %7, 4, !dbg !7773
  br i1 %cmp3, label %if.then4, label %if.end9, !dbg !7775

if.then4:                                         ; preds = %lor.lhs.false, %if.else
  %8 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !7776
  %call5 = call i8* @DM_get_tessface_data_layer(%struct.DerivedMesh* %8, i32 5), !dbg !7779
  %tobool6 = icmp ne i8* %call5, null, !dbg !7779
  br i1 %tobool6, label %if.end8, label %if.then7, !dbg !7780

if.then7:                                         ; preds = %if.then4
  store %struct.GPUBuffer* null, %struct.GPUBuffer** %retval, align 8, !dbg !7781
  br label %return, !dbg !7781

if.end8:                                          ; preds = %if.then4
  br label %if.end9, !dbg !7782

if.end9:                                          ; preds = %if.end8, %lor.lhs.false
  br label %if.end10

if.end10:                                         ; preds = %if.end9, %if.end
  %9 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !7783
  %10 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !7784
  %drawObject11 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %10, i32 0, i32 13, !dbg !7785
  %11 = load %struct.GPUDrawObject*, %struct.GPUDrawObject** %drawObject11, align 8, !dbg !7785
  %12 = load %struct.GPUBufferTypeSettings*, %struct.GPUBufferTypeSettings** %ts, align 8, !dbg !7786
  %vector_size = getelementptr inbounds %struct.GPUBufferTypeSettings, %struct.GPUBufferTypeSettings* %12, i32 0, i32 2, !dbg !7787
  %13 = load i32, i32* %vector_size, align 4, !dbg !7787
  %14 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !7788
  %15 = load i32, i32* %type.addr, align 4, !dbg !7789
  %call12 = call i32 @gpu_buffer_size_from_type(%struct.DerivedMesh* %14, i32 %15), !dbg !7790
  %16 = load %struct.GPUBufferTypeSettings*, %struct.GPUBufferTypeSettings** %ts, align 8, !dbg !7791
  %gl_buffer_type = getelementptr inbounds %struct.GPUBufferTypeSettings, %struct.GPUBufferTypeSettings* %16, i32 0, i32 1, !dbg !7792
  %17 = load i32, i32* %gl_buffer_type, align 8, !dbg !7792
  %18 = load i8*, i8** %user_data, align 8, !dbg !7793
  %19 = load %struct.GPUBufferTypeSettings*, %struct.GPUBufferTypeSettings** %ts, align 8, !dbg !7794
  %copy = getelementptr inbounds %struct.GPUBufferTypeSettings, %struct.GPUBufferTypeSettings* %19, i32 0, i32 0, !dbg !7795
  %20 = load void (%struct.DerivedMesh*, float*, i32*, i32*, i8*)*, void (%struct.DerivedMesh*, float*, i32*, i32*, i8*)** %copy, align 8, !dbg !7795
  %call13 = call %struct.GPUBuffer* @gpu_buffer_setup(%struct.DerivedMesh* %9, %struct.GPUDrawObject* %11, i32 %13, i32 %call12, i32 %17, i8* %18, void (%struct.DerivedMesh*, float*, i32*, i32*, i8*)* %20), !dbg !7796
  store %struct.GPUBuffer* %call13, %struct.GPUBuffer** %buf, align 8, !dbg !7797
  %21 = load %struct.GPUBuffer*, %struct.GPUBuffer** %buf, align 8, !dbg !7798
  store %struct.GPUBuffer* %21, %struct.GPUBuffer** %retval, align 8, !dbg !7799
  br label %return, !dbg !7799

return:                                           ; preds = %if.end10, %if.then7, %if.then1
  %22 = load %struct.GPUBuffer*, %struct.GPUBuffer** %retval, align 8, !dbg !7800
  ret %struct.GPUBuffer* %22, !dbg !7800
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.GPUBuffer* @gpu_buffer_setup(%struct.DerivedMesh* %dm, %struct.GPUDrawObject* %object, i32 %vector_size, i32 %size, i32 %target, i8* %user, void (%struct.DerivedMesh*, float*, i32*, i32*, i8*)* %copy_f) #0 !dbg !7801 {
entry:
  %retval = alloca %struct.GPUBuffer*, align 8
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %object.addr = alloca %struct.GPUDrawObject*, align 8
  %vector_size.addr = alloca i32, align 4
  %size.addr = alloca i32, align 4
  %target.addr = alloca i32, align 4
  %user.addr = alloca i8*, align 8
  %copy_f.addr = alloca void (%struct.DerivedMesh*, float*, i32*, i32*, i8*)*, align 8
  %pool = alloca %struct.GPUBufferPool*, align 8
  %buffer = alloca %struct.GPUBuffer*, align 8
  %varray = alloca float*, align 8
  %mat_orig_to_new = alloca i32*, align 8
  %cur_index_per_mat = alloca i32*, align 8
  %i = alloca i32, align 4
  %success = alloca i8, align 1
  %uploaded = alloca i8, align 1
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !7804, metadata !DIExpression()), !dbg !7805
  store %struct.GPUDrawObject* %object, %struct.GPUDrawObject** %object.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GPUDrawObject** %object.addr, metadata !7806, metadata !DIExpression()), !dbg !7807
  store i32 %vector_size, i32* %vector_size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %vector_size.addr, metadata !7808, metadata !DIExpression()), !dbg !7809
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !7810, metadata !DIExpression()), !dbg !7811
  store i32 %target, i32* %target.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %target.addr, metadata !7812, metadata !DIExpression()), !dbg !7813
  store i8* %user, i8** %user.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %user.addr, metadata !7814, metadata !DIExpression()), !dbg !7815
  store void (%struct.DerivedMesh*, float*, i32*, i32*, i8*)* %copy_f, void (%struct.DerivedMesh*, float*, i32*, i32*, i8*)** %copy_f.addr, align 8
  call void @llvm.dbg.declare(metadata void (%struct.DerivedMesh*, float*, i32*, i32*, i8*)** %copy_f.addr, metadata !7816, metadata !DIExpression()), !dbg !7817
  call void @llvm.dbg.declare(metadata %struct.GPUBufferPool** %pool, metadata !7818, metadata !DIExpression()), !dbg !7819
  call void @llvm.dbg.declare(metadata %struct.GPUBuffer** %buffer, metadata !7820, metadata !DIExpression()), !dbg !7821
  call void @llvm.dbg.declare(metadata float** %varray, metadata !7822, metadata !DIExpression()), !dbg !7823
  call void @llvm.dbg.declare(metadata i32** %mat_orig_to_new, metadata !7824, metadata !DIExpression()), !dbg !7825
  call void @llvm.dbg.declare(metadata i32** %cur_index_per_mat, metadata !7826, metadata !DIExpression()), !dbg !7827
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7828, metadata !DIExpression()), !dbg !7829
  call void @llvm.dbg.declare(metadata i8* %success, metadata !7830, metadata !DIExpression()), !dbg !7831
  call void @llvm.dbg.declare(metadata i8* %uploaded, metadata !7832, metadata !DIExpression()), !dbg !7833
  %call = call %struct.GPUBufferPool* @gpu_get_global_buffer_pool(), !dbg !7834
  store %struct.GPUBufferPool* %call, %struct.GPUBufferPool** %pool, align 8, !dbg !7835
  call void @BLI_mutex_lock(i32* @buffer_mutex), !dbg !7836
  %0 = load i32, i32* %size.addr, align 4, !dbg !7837
  %call1 = call %struct.GPUBuffer* @gpu_buffer_alloc_intern(i32 %0), !dbg !7839
  store %struct.GPUBuffer* %call1, %struct.GPUBuffer** %buffer, align 8, !dbg !7840
  %tobool = icmp ne %struct.GPUBuffer* %call1, null, !dbg !7840
  br i1 %tobool, label %if.end, label %if.then, !dbg !7841

if.then:                                          ; preds = %entry
  %1 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !7842
  %drawObject = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %1, i32 0, i32 13, !dbg !7843
  %2 = load %struct.GPUDrawObject*, %struct.GPUDrawObject** %drawObject, align 8, !dbg !7843
  %legacy = getelementptr inbounds %struct.GPUDrawObject, %struct.GPUDrawObject* %2, i32 0, i32 15, !dbg !7844
  store i8 1, i8* %legacy, align 4, !dbg !7845
  br label %if.end, !dbg !7842

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !7846
  %drawObject2 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %3, i32 0, i32 13, !dbg !7848
  %4 = load %struct.GPUDrawObject*, %struct.GPUDrawObject** %drawObject2, align 8, !dbg !7848
  %legacy3 = getelementptr inbounds %struct.GPUDrawObject, %struct.GPUDrawObject* %4, i32 0, i32 15, !dbg !7849
  %5 = load i8, i8* %legacy3, align 4, !dbg !7849
  %tobool4 = icmp ne i8 %5, 0, !dbg !7846
  br i1 %tobool4, label %if.then5, label %if.end6, !dbg !7850

if.then5:                                         ; preds = %if.end
  call void @BLI_mutex_unlock(i32* @buffer_mutex), !dbg !7851
  store %struct.GPUBuffer* null, %struct.GPUBuffer** %retval, align 8, !dbg !7853
  br label %return, !dbg !7853

if.end6:                                          ; preds = %if.end
  %6 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !7854
  %7 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !7855
  %totmat = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %7, i32 0, i32 17, !dbg !7856
  %8 = load i32, i32* %totmat, align 4, !dbg !7856
  %conv = sext i32 %8 to i64, !dbg !7855
  %mul = mul i64 4, %conv, !dbg !7857
  %call7 = call i8* %6(i64 %mul, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.13, i64 0, i64 0)), !dbg !7854
  %9 = bitcast i8* %call7 to i32*, !dbg !7854
  store i32* %9, i32** %mat_orig_to_new, align 8, !dbg !7858
  %10 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !7859
  %11 = load %struct.GPUDrawObject*, %struct.GPUDrawObject** %object.addr, align 8, !dbg !7860
  %totmaterial = getelementptr inbounds %struct.GPUDrawObject, %struct.GPUDrawObject* %11, i32 0, i32 10, !dbg !7861
  %12 = load i32, i32* %totmaterial, align 8, !dbg !7861
  %conv8 = sext i32 %12 to i64, !dbg !7860
  %mul9 = mul i64 4, %conv8, !dbg !7862
  %call10 = call i8* %10(i64 %mul9, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.14, i64 0, i64 0)), !dbg !7859
  %13 = bitcast i8* %call10 to i32*, !dbg !7859
  store i32* %13, i32** %cur_index_per_mat, align 8, !dbg !7863
  store i32 0, i32* %i, align 4, !dbg !7864
  br label %for.cond, !dbg !7866

for.cond:                                         ; preds = %for.inc, %if.end6
  %14 = load i32, i32* %i, align 4, !dbg !7867
  %15 = load %struct.GPUDrawObject*, %struct.GPUDrawObject** %object.addr, align 8, !dbg !7869
  %totmaterial11 = getelementptr inbounds %struct.GPUDrawObject, %struct.GPUDrawObject* %15, i32 0, i32 10, !dbg !7870
  %16 = load i32, i32* %totmaterial11, align 8, !dbg !7870
  %cmp = icmp slt i32 %14, %16, !dbg !7871
  br i1 %cmp, label %for.body, label %for.end, !dbg !7872

for.body:                                         ; preds = %for.cond
  %17 = load %struct.GPUDrawObject*, %struct.GPUDrawObject** %object.addr, align 8, !dbg !7873
  %materials = getelementptr inbounds %struct.GPUDrawObject, %struct.GPUDrawObject* %17, i32 0, i32 9, !dbg !7875
  %18 = load %struct.GPUBufferMaterial*, %struct.GPUBufferMaterial** %materials, align 8, !dbg !7875
  %19 = load i32, i32* %i, align 4, !dbg !7876
  %idxprom = sext i32 %19 to i64, !dbg !7873
  %arrayidx = getelementptr inbounds %struct.GPUBufferMaterial, %struct.GPUBufferMaterial* %18, i64 %idxprom, !dbg !7873
  %start = getelementptr inbounds %struct.GPUBufferMaterial, %struct.GPUBufferMaterial* %arrayidx, i32 0, i32 0, !dbg !7877
  %20 = load i32, i32* %start, align 4, !dbg !7877
  %21 = load i32, i32* %vector_size.addr, align 4, !dbg !7878
  %mul13 = mul nsw i32 %20, %21, !dbg !7879
  %22 = load i32*, i32** %cur_index_per_mat, align 8, !dbg !7880
  %23 = load i32, i32* %i, align 4, !dbg !7881
  %idxprom14 = sext i32 %23 to i64, !dbg !7880
  %arrayidx15 = getelementptr inbounds i32, i32* %22, i64 %idxprom14, !dbg !7880
  store i32 %mul13, i32* %arrayidx15, align 4, !dbg !7882
  %24 = load i32, i32* %i, align 4, !dbg !7883
  %25 = load i32*, i32** %mat_orig_to_new, align 8, !dbg !7884
  %26 = load %struct.GPUDrawObject*, %struct.GPUDrawObject** %object.addr, align 8, !dbg !7885
  %materials16 = getelementptr inbounds %struct.GPUDrawObject, %struct.GPUDrawObject* %26, i32 0, i32 9, !dbg !7886
  %27 = load %struct.GPUBufferMaterial*, %struct.GPUBufferMaterial** %materials16, align 8, !dbg !7886
  %28 = load i32, i32* %i, align 4, !dbg !7887
  %idxprom17 = sext i32 %28 to i64, !dbg !7885
  %arrayidx18 = getelementptr inbounds %struct.GPUBufferMaterial, %struct.GPUBufferMaterial* %27, i64 %idxprom17, !dbg !7885
  %mat_nr = getelementptr inbounds %struct.GPUBufferMaterial, %struct.GPUBufferMaterial* %arrayidx18, i32 0, i32 2, !dbg !7888
  %29 = load i16, i16* %mat_nr, align 4, !dbg !7888
  %idxprom19 = sext i16 %29 to i64, !dbg !7884
  %arrayidx20 = getelementptr inbounds i32, i32* %25, i64 %idxprom19, !dbg !7884
  store i32 %24, i32* %arrayidx20, align 4, !dbg !7889
  br label %for.inc, !dbg !7890

for.inc:                                          ; preds = %for.body
  %30 = load i32, i32* %i, align 4, !dbg !7891
  %inc = add nsw i32 %30, 1, !dbg !7891
  store i32 %inc, i32* %i, align 4, !dbg !7891
  br label %for.cond, !dbg !7892, !llvm.loop !7893

for.end:                                          ; preds = %for.cond
  %31 = load i32, i32* @useVBOs, align 4, !dbg !7895
  %tobool21 = icmp ne i32 %31, 0, !dbg !7895
  br i1 %tobool21, label %if.then22, label %if.else54, !dbg !7897

if.then22:                                        ; preds = %for.end
  store i8 0, i8* %success, align 1, !dbg !7898
  br label %while.cond, !dbg !7900

while.cond:                                       ; preds = %if.end39, %if.then22
  %32 = load i8, i8* %success, align 1, !dbg !7901
  %tobool23 = icmp ne i8 %32, 0, !dbg !7902
  %lnot = xor i1 %tobool23, true, !dbg !7902
  br i1 %lnot, label %while.body, label %while.end, !dbg !7900

while.body:                                       ; preds = %while.cond
  %33 = load void (i32, i32)*, void (i32, i32)** @__glewBindBufferARB, align 8, !dbg !7903
  %34 = load i32, i32* %target.addr, align 4, !dbg !7905
  %35 = load %struct.GPUBuffer*, %struct.GPUBuffer** %buffer, align 8, !dbg !7906
  %id = getelementptr inbounds %struct.GPUBuffer, %struct.GPUBuffer* %35, i32 0, i32 2, !dbg !7907
  %36 = load i32, i32* %id, align 8, !dbg !7907
  call void %33(i32 %34, i32 %36), !dbg !7903
  %37 = load void (i32, i64, i8*, i32)*, void (i32, i64, i8*, i32)** @__glewBufferDataARB, align 8, !dbg !7908
  %38 = load i32, i32* %target.addr, align 4, !dbg !7909
  %39 = load %struct.GPUBuffer*, %struct.GPUBuffer** %buffer, align 8, !dbg !7910
  %size24 = getelementptr inbounds %struct.GPUBuffer, %struct.GPUBuffer* %39, i32 0, i32 0, !dbg !7911
  %40 = load i32, i32* %size24, align 8, !dbg !7911
  %conv25 = sext i32 %40 to i64, !dbg !7910
  call void %37(i32 %38, i64 %conv25, i8* null, i32 35044), !dbg !7908
  %41 = load i8* (i32, i32)*, i8* (i32, i32)** @__glewMapBufferARB, align 8, !dbg !7912
  %42 = load i32, i32* %target.addr, align 4, !dbg !7914
  %call26 = call i8* %41(i32 %42, i32 35001), !dbg !7912
  %43 = bitcast i8* %call26 to float*, !dbg !7912
  store float* %43, float** %varray, align 8, !dbg !7915
  %tobool27 = icmp ne float* %43, null, !dbg !7915
  br i1 %tobool27, label %if.else, label %if.then28, !dbg !7916

if.then28:                                        ; preds = %while.body
  %44 = load %struct.GPUBuffer*, %struct.GPUBuffer** %buffer, align 8, !dbg !7917
  call void @gpu_buffer_free_intern(%struct.GPUBuffer* %44), !dbg !7919
  %45 = load %struct.GPUBufferPool*, %struct.GPUBufferPool** %pool, align 8, !dbg !7920
  call void @gpu_buffer_pool_delete_last(%struct.GPUBufferPool* %45), !dbg !7921
  store %struct.GPUBuffer* null, %struct.GPUBuffer** %buffer, align 8, !dbg !7922
  %46 = load %struct.GPUBufferPool*, %struct.GPUBufferPool** %pool, align 8, !dbg !7923
  %totbuf = getelementptr inbounds %struct.GPUBufferPool, %struct.GPUBufferPool* %46, i32 0, i32 0, !dbg !7925
  %47 = load i32, i32* %totbuf, align 8, !dbg !7925
  %cmp29 = icmp sgt i32 %47, 0, !dbg !7926
  br i1 %cmp29, label %if.then31, label %if.end33, !dbg !7927

if.then31:                                        ; preds = %if.then28
  %48 = load %struct.GPUBufferPool*, %struct.GPUBufferPool** %pool, align 8, !dbg !7928
  call void @gpu_buffer_pool_delete_last(%struct.GPUBufferPool* %48), !dbg !7930
  %49 = load i32, i32* %size.addr, align 4, !dbg !7931
  %call32 = call %struct.GPUBuffer* @gpu_buffer_alloc_intern(i32 %49), !dbg !7932
  store %struct.GPUBuffer* %call32, %struct.GPUBuffer** %buffer, align 8, !dbg !7933
  br label %if.end33, !dbg !7934

if.end33:                                         ; preds = %if.then31, %if.then28
  %50 = load %struct.GPUBuffer*, %struct.GPUBuffer** %buffer, align 8, !dbg !7935
  %tobool34 = icmp ne %struct.GPUBuffer* %50, null, !dbg !7935
  br i1 %tobool34, label %if.end38, label %if.then35, !dbg !7937

if.then35:                                        ; preds = %if.end33
  %51 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !7938
  %drawObject36 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %51, i32 0, i32 13, !dbg !7940
  %52 = load %struct.GPUDrawObject*, %struct.GPUDrawObject** %drawObject36, align 8, !dbg !7940
  %legacy37 = getelementptr inbounds %struct.GPUDrawObject, %struct.GPUDrawObject* %52, i32 0, i32 15, !dbg !7941
  store i8 1, i8* %legacy37, align 4, !dbg !7942
  store i8 1, i8* %success, align 1, !dbg !7943
  br label %if.end38, !dbg !7944

if.end38:                                         ; preds = %if.then35, %if.end33
  br label %if.end39, !dbg !7945

if.else:                                          ; preds = %while.body
  store i8 1, i8* %success, align 1, !dbg !7946
  br label %if.end39

if.end39:                                         ; preds = %if.else, %if.end38
  br label %while.cond, !dbg !7900, !llvm.loop !7948

while.end:                                        ; preds = %while.cond
  %53 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !7950
  %drawObject40 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %53, i32 0, i32 13, !dbg !7952
  %54 = load %struct.GPUDrawObject*, %struct.GPUDrawObject** %drawObject40, align 8, !dbg !7952
  %legacy41 = getelementptr inbounds %struct.GPUDrawObject, %struct.GPUDrawObject* %54, i32 0, i32 15, !dbg !7953
  %55 = load i8, i8* %legacy41, align 4, !dbg !7953
  %conv42 = zext i8 %55 to i32, !dbg !7950
  %cmp43 = icmp eq i32 %conv42, 0, !dbg !7954
  br i1 %cmp43, label %if.then45, label %if.end53, !dbg !7955

if.then45:                                        ; preds = %while.end
  store i8 0, i8* %uploaded, align 1, !dbg !7956
  br label %while.cond46, !dbg !7958

while.cond46:                                     ; preds = %while.body50, %if.then45
  %56 = load i8, i8* %uploaded, align 1, !dbg !7959
  %conv47 = zext i8 %56 to i32, !dbg !7959
  %cmp48 = icmp eq i32 %conv47, 0, !dbg !7960
  br i1 %cmp48, label %while.body50, label %while.end52, !dbg !7958

while.body50:                                     ; preds = %while.cond46
  %57 = load void (%struct.DerivedMesh*, float*, i32*, i32*, i8*)*, void (%struct.DerivedMesh*, float*, i32*, i32*, i8*)** %copy_f.addr, align 8, !dbg !7961
  %58 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !7963
  %59 = load float*, float** %varray, align 8, !dbg !7964
  %60 = load i32*, i32** %cur_index_per_mat, align 8, !dbg !7965
  %61 = load i32*, i32** %mat_orig_to_new, align 8, !dbg !7966
  %62 = load i8*, i8** %user.addr, align 8, !dbg !7967
  call void %57(%struct.DerivedMesh* %58, float* %59, i32* %60, i32* %61, i8* %62), !dbg !7968
  %63 = load i8 (i32)*, i8 (i32)** @__glewUnmapBufferARB, align 8, !dbg !7969
  %64 = load i32, i32* %target.addr, align 4, !dbg !7970
  %call51 = call zeroext i8 %63(i32 %64), !dbg !7969
  store i8 %call51, i8* %uploaded, align 1, !dbg !7971
  br label %while.cond46, !dbg !7958, !llvm.loop !7972

while.end52:                                      ; preds = %while.cond46
  br label %if.end53, !dbg !7974

if.end53:                                         ; preds = %while.end52, %while.end
  %65 = load void (i32, i32)*, void (i32, i32)** @__glewBindBufferARB, align 8, !dbg !7975
  %66 = load i32, i32* %target.addr, align 4, !dbg !7976
  call void %65(i32 %66, i32 0), !dbg !7975
  br label %if.end62, !dbg !7977

if.else54:                                        ; preds = %for.end
  %67 = load %struct.GPUBuffer*, %struct.GPUBuffer** %buffer, align 8, !dbg !7978
  %pointer = getelementptr inbounds %struct.GPUBuffer, %struct.GPUBuffer* %67, i32 0, i32 1, !dbg !7981
  %68 = load i8*, i8** %pointer, align 8, !dbg !7981
  %tobool55 = icmp ne i8* %68, null, !dbg !7978
  br i1 %tobool55, label %if.then56, label %if.else58, !dbg !7982

if.then56:                                        ; preds = %if.else54
  %69 = load %struct.GPUBuffer*, %struct.GPUBuffer** %buffer, align 8, !dbg !7983
  %pointer57 = getelementptr inbounds %struct.GPUBuffer, %struct.GPUBuffer* %69, i32 0, i32 1, !dbg !7985
  %70 = load i8*, i8** %pointer57, align 8, !dbg !7985
  %71 = bitcast i8* %70 to float*, !dbg !7983
  store float* %71, float** %varray, align 8, !dbg !7986
  %72 = load void (%struct.DerivedMesh*, float*, i32*, i32*, i8*)*, void (%struct.DerivedMesh*, float*, i32*, i32*, i8*)** %copy_f.addr, align 8, !dbg !7987
  %73 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !7988
  %74 = load float*, float** %varray, align 8, !dbg !7989
  %75 = load i32*, i32** %cur_index_per_mat, align 8, !dbg !7990
  %76 = load i32*, i32** %mat_orig_to_new, align 8, !dbg !7991
  %77 = load i8*, i8** %user.addr, align 8, !dbg !7992
  call void %72(%struct.DerivedMesh* %73, float* %74, i32* %75, i32* %76, i8* %77), !dbg !7993
  br label %if.end61, !dbg !7994

if.else58:                                        ; preds = %if.else54
  %78 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !7995
  %drawObject59 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %78, i32 0, i32 13, !dbg !7997
  %79 = load %struct.GPUDrawObject*, %struct.GPUDrawObject** %drawObject59, align 8, !dbg !7997
  %legacy60 = getelementptr inbounds %struct.GPUDrawObject, %struct.GPUDrawObject* %79, i32 0, i32 15, !dbg !7998
  store i8 1, i8* %legacy60, align 4, !dbg !7999
  br label %if.end61

if.end61:                                         ; preds = %if.else58, %if.then56
  br label %if.end62

if.end62:                                         ; preds = %if.end61, %if.end53
  %80 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !8000
  %81 = load i32*, i32** %cur_index_per_mat, align 8, !dbg !8001
  %82 = bitcast i32* %81 to i8*, !dbg !8001
  call void %80(i8* %82), !dbg !8000
  %83 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !8002
  %84 = load i32*, i32** %mat_orig_to_new, align 8, !dbg !8003
  %85 = bitcast i32* %84 to i8*, !dbg !8003
  call void %83(i8* %85), !dbg !8002
  call void @BLI_mutex_unlock(i32* @buffer_mutex), !dbg !8004
  %86 = load %struct.GPUBuffer*, %struct.GPUBuffer** %buffer, align 8, !dbg !8005
  store %struct.GPUBuffer* %86, %struct.GPUBuffer** %retval, align 8, !dbg !8006
  br label %return, !dbg !8006

return:                                           ; preds = %if.end62, %if.then5
  %87 = load %struct.GPUBuffer*, %struct.GPUBuffer** %retval, align 8, !dbg !8007
  ret %struct.GPUBuffer* %87, !dbg !8007
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @gpu_buffer_size_from_type(%struct.DerivedMesh* %dm, i32 %type) #0 !dbg !8008 {
entry:
  %retval = alloca i32, align 4
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %type.addr = alloca i32, align 4
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !8011, metadata !DIExpression()), !dbg !8012
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !8013, metadata !DIExpression()), !dbg !8014
  %0 = load i32, i32* %type.addr, align 4, !dbg !8015
  switch i32 %0, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb3
    i32 2, label %sw.bb9
    i32 3, label %sw.bb15
    i32 4, label %sw.bb21
    i32 5, label %sw.bb27
    i32 6, label %sw.bb32
  ], !dbg !8016

sw.bb:                                            ; preds = %entry
  %1 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !8017
  %drawObject = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %1, i32 0, i32 13, !dbg !8019
  %2 = load %struct.GPUDrawObject*, %struct.GPUDrawObject** %drawObject, align 8, !dbg !8019
  %tot_triangle_point = getelementptr inbounds %struct.GPUDrawObject, %struct.GPUDrawObject* %2, i32 0, i32 11, !dbg !8020
  %3 = load i32, i32* %tot_triangle_point, align 4, !dbg !8020
  %4 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !8021
  %drawObject1 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %4, i32 0, i32 13, !dbg !8022
  %5 = load %struct.GPUDrawObject*, %struct.GPUDrawObject** %drawObject1, align 8, !dbg !8022
  %tot_loose_point = getelementptr inbounds %struct.GPUDrawObject, %struct.GPUDrawObject* %5, i32 0, i32 12, !dbg !8023
  %6 = load i32, i32* %tot_loose_point, align 8, !dbg !8023
  %add = add nsw i32 %3, %6, !dbg !8024
  %conv = sext i32 %add to i64, !dbg !8025
  %mul = mul i64 12, %conv, !dbg !8026
  %conv2 = trunc i64 %mul to i32, !dbg !8027
  store i32 %conv2, i32* %retval, align 4, !dbg !8028
  br label %return, !dbg !8028

sw.bb3:                                           ; preds = %entry
  %7 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !8029
  %drawObject4 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %7, i32 0, i32 13, !dbg !8030
  %8 = load %struct.GPUDrawObject*, %struct.GPUDrawObject** %drawObject4, align 8, !dbg !8030
  %tot_triangle_point5 = getelementptr inbounds %struct.GPUDrawObject, %struct.GPUDrawObject* %8, i32 0, i32 11, !dbg !8031
  %9 = load i32, i32* %tot_triangle_point5, align 4, !dbg !8031
  %conv6 = sext i32 %9 to i64, !dbg !8029
  %mul7 = mul i64 12, %conv6, !dbg !8032
  %conv8 = trunc i64 %mul7 to i32, !dbg !8033
  store i32 %conv8, i32* %retval, align 4, !dbg !8034
  br label %return, !dbg !8034

sw.bb9:                                           ; preds = %entry
  %10 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !8035
  %drawObject10 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %10, i32 0, i32 13, !dbg !8036
  %11 = load %struct.GPUDrawObject*, %struct.GPUDrawObject** %drawObject10, align 8, !dbg !8036
  %tot_triangle_point11 = getelementptr inbounds %struct.GPUDrawObject, %struct.GPUDrawObject* %11, i32 0, i32 11, !dbg !8037
  %12 = load i32, i32* %tot_triangle_point11, align 4, !dbg !8037
  %conv12 = sext i32 %12 to i64, !dbg !8035
  %mul13 = mul i64 3, %conv12, !dbg !8038
  %conv14 = trunc i64 %mul13 to i32, !dbg !8039
  store i32 %conv14, i32* %retval, align 4, !dbg !8040
  br label %return, !dbg !8040

sw.bb15:                                          ; preds = %entry
  %13 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !8041
  %drawObject16 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %13, i32 0, i32 13, !dbg !8042
  %14 = load %struct.GPUDrawObject*, %struct.GPUDrawObject** %drawObject16, align 8, !dbg !8042
  %tot_triangle_point17 = getelementptr inbounds %struct.GPUDrawObject, %struct.GPUDrawObject* %14, i32 0, i32 11, !dbg !8043
  %15 = load i32, i32* %tot_triangle_point17, align 4, !dbg !8043
  %conv18 = sext i32 %15 to i64, !dbg !8041
  %mul19 = mul i64 8, %conv18, !dbg !8044
  %conv20 = trunc i64 %mul19 to i32, !dbg !8045
  store i32 %conv20, i32* %retval, align 4, !dbg !8046
  br label %return, !dbg !8046

sw.bb21:                                          ; preds = %entry
  %16 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !8047
  %drawObject22 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %16, i32 0, i32 13, !dbg !8048
  %17 = load %struct.GPUDrawObject*, %struct.GPUDrawObject** %drawObject22, align 8, !dbg !8048
  %tot_triangle_point23 = getelementptr inbounds %struct.GPUDrawObject, %struct.GPUDrawObject* %17, i32 0, i32 11, !dbg !8049
  %18 = load i32, i32* %tot_triangle_point23, align 4, !dbg !8049
  %conv24 = sext i32 %18 to i64, !dbg !8047
  %mul25 = mul i64 16, %conv24, !dbg !8050
  %conv26 = trunc i64 %mul25 to i32, !dbg !8051
  store i32 %conv26, i32* %retval, align 4, !dbg !8052
  br label %return, !dbg !8052

sw.bb27:                                          ; preds = %entry
  %19 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !8053
  %drawObject28 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %19, i32 0, i32 13, !dbg !8054
  %20 = load %struct.GPUDrawObject*, %struct.GPUDrawObject** %drawObject28, align 8, !dbg !8054
  %totedge = getelementptr inbounds %struct.GPUDrawObject, %struct.GPUDrawObject* %20, i32 0, i32 14, !dbg !8055
  %21 = load i32, i32* %totedge, align 8, !dbg !8055
  %conv29 = sext i32 %21 to i64, !dbg !8053
  %mul30 = mul i64 8, %conv29, !dbg !8056
  %conv31 = trunc i64 %mul30 to i32, !dbg !8057
  store i32 %conv31, i32* %retval, align 4, !dbg !8058
  br label %return, !dbg !8058

sw.bb32:                                          ; preds = %entry
  %22 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !8059
  %drawObject33 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %22, i32 0, i32 13, !dbg !8060
  %23 = load %struct.GPUDrawObject*, %struct.GPUDrawObject** %drawObject33, align 8, !dbg !8060
  %tot_triangle_point34 = getelementptr inbounds %struct.GPUDrawObject, %struct.GPUDrawObject* %23, i32 0, i32 11, !dbg !8061
  %24 = load i32, i32* %tot_triangle_point34, align 4, !dbg !8061
  %conv35 = sext i32 %24 to i64, !dbg !8059
  %mul36 = mul i64 16, %conv35, !dbg !8062
  %conv37 = trunc i64 %mul36 to i32, !dbg !8063
  store i32 %conv37, i32* %retval, align 4, !dbg !8064
  br label %return, !dbg !8064

sw.default:                                       ; preds = %entry
  store i32 -1, i32* %retval, align 4, !dbg !8065
  br label %return, !dbg !8065

return:                                           ; preds = %sw.default, %sw.bb32, %sw.bb27, %sw.bb21, %sw.bb15, %sw.bb9, %sw.bb3, %sw.bb
  %25 = load i32, i32* %retval, align 4, !dbg !8066
  ret i32 %25, !dbg !8066
}

; Function Attrs: noinline nounwind uwtable
define internal float @gpu_color_from_mask(float %mask) #0 !dbg !8067 {
entry:
  %mask.addr = alloca float, align 4
  store float %mask, float* %mask.addr, align 4
  call void @llvm.dbg.declare(metadata float* %mask.addr, metadata !8070, metadata !DIExpression()), !dbg !8071
  %0 = load float, float* %mask.addr, align 4, !dbg !8072
  %mul = fmul float %0, 7.500000e-01, !dbg !8073
  %sub = fsub float 1.000000e+00, %mul, !dbg !8074
  ret float %sub, !dbg !8075
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.CCGElem* @CCG_elem_offset(%struct.CCGKey* %key, %struct.CCGElem* %elem, i32 %offset) #0 !dbg !8076 {
entry:
  %key.addr = alloca %struct.CCGKey*, align 8
  %elem.addr = alloca %struct.CCGElem*, align 8
  %offset.addr = alloca i32, align 4
  store %struct.CCGKey* %key, %struct.CCGKey** %key.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGKey** %key.addr, metadata !8079, metadata !DIExpression()), !dbg !8080
  store %struct.CCGElem* %elem, %struct.CCGElem** %elem.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGElem** %elem.addr, metadata !8081, metadata !DIExpression()), !dbg !8082
  store i32 %offset, i32* %offset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %offset.addr, metadata !8083, metadata !DIExpression()), !dbg !8084
  %0 = load %struct.CCGElem*, %struct.CCGElem** %elem.addr, align 8, !dbg !8085
  %1 = bitcast %struct.CCGElem* %0 to i8*, !dbg !8086
  %2 = load %struct.CCGKey*, %struct.CCGKey** %key.addr, align 8, !dbg !8087
  %elem_size = getelementptr inbounds %struct.CCGKey, %struct.CCGKey* %2, i32 0, i32 1, !dbg !8088
  %3 = load i32, i32* %elem_size, align 4, !dbg !8088
  %4 = load i32, i32* %offset.addr, align 4, !dbg !8089
  %mul = mul nsw i32 %3, %4, !dbg !8090
  %idx.ext = sext i32 %mul to i64, !dbg !8091
  %add.ptr = getelementptr inbounds i8, i8* %1, i64 %idx.ext, !dbg !8091
  %5 = bitcast i8* %add.ptr to %struct.CCGElem*, !dbg !8092
  ret %struct.CCGElem* %5, !dbg !8093
}

declare dso_local void @BLI_ghashIterator_init(%struct.GHashIterator*, %struct.GHash*) #2

; Function Attrs: noinline nounwind uwtable
define internal i8* @BLI_ghashIterator_getKey(%struct.GHashIterator* %ghi) #0 !dbg !8094 {
entry:
  %ghi.addr = alloca %struct.GHashIterator*, align 8
  store %struct.GHashIterator* %ghi, %struct.GHashIterator** %ghi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GHashIterator** %ghi.addr, metadata !8097, metadata !DIExpression()), !dbg !8098
  %0 = load %struct.GHashIterator*, %struct.GHashIterator** %ghi.addr, align 8, !dbg !8099
  %curEntry = getelementptr inbounds %struct.GHashIterator, %struct.GHashIterator* %0, i32 0, i32 1, !dbg !8100
  %1 = load %struct.Entry*, %struct.Entry** %curEntry, align 8, !dbg !8100
  %2 = bitcast %struct.Entry* %1 to %struct._gh_Entry*, !dbg !8101
  %key = getelementptr inbounds %struct._gh_Entry, %struct._gh_Entry* %2, i32 0, i32 1, !dbg !8101
  %3 = load i8*, i8** %key, align 8, !dbg !8101
  ret i8* %3, !dbg !8102
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @BLI_ghashIterator_done(%struct.GHashIterator* %ghi) #0 !dbg !8103 {
entry:
  %ghi.addr = alloca %struct.GHashIterator*, align 8
  store %struct.GHashIterator* %ghi, %struct.GHashIterator** %ghi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GHashIterator** %ghi.addr, metadata !8106, metadata !DIExpression()), !dbg !8107
  %0 = load %struct.GHashIterator*, %struct.GHashIterator** %ghi.addr, align 8, !dbg !8108
  %curEntry = getelementptr inbounds %struct.GHashIterator, %struct.GHashIterator* %0, i32 0, i32 1, !dbg !8109
  %1 = load %struct.Entry*, %struct.Entry** %curEntry, align 8, !dbg !8109
  %tobool = icmp ne %struct.Entry* %1, null, !dbg !8110
  %lnot = xor i1 %tobool, true, !dbg !8110
  %lnot.ext = zext i1 %lnot to i32, !dbg !8110
  %conv = trunc i32 %lnot.ext to i8, !dbg !8110
  ret i8 %conv, !dbg !8111
}

; Function Attrs: noinline nounwind uwtable
define internal void @_bm_elem_index_set(%struct.BMHeader* %head, i32 %index) #0 !dbg !8112 {
entry:
  %head.addr = alloca %struct.BMHeader*, align 8
  %index.addr = alloca i32, align 4
  store %struct.BMHeader* %head, %struct.BMHeader** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMHeader** %head.addr, metadata !8116, metadata !DIExpression()), !dbg !8117
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !8118, metadata !DIExpression()), !dbg !8119
  %0 = load i32, i32* %index.addr, align 4, !dbg !8120
  %1 = load %struct.BMHeader*, %struct.BMHeader** %head.addr, align 8, !dbg !8121
  %index1 = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %1, i32 0, i32 1, !dbg !8122
  store i32 %0, i32* %index1, align 8, !dbg !8123
  ret void, !dbg !8124
}

declare dso_local void @BLI_ghashIterator_step(%struct.GHashIterator*) #2

declare dso_local void @glColorMaterial(i32, i32) #2

declare dso_local void @glBegin(i32) #2

; Function Attrs: noinline nounwind uwtable
define internal void @gpu_color_from_mask_set(float %mask, float* %diffuse_color) #0 !dbg !8125 {
entry:
  %mask.addr = alloca float, align 4
  %diffuse_color.addr = alloca float*, align 8
  %color = alloca float, align 4
  store float %mask, float* %mask.addr, align 4
  call void @llvm.dbg.declare(metadata float* %mask.addr, metadata !8128, metadata !DIExpression()), !dbg !8129
  store float* %diffuse_color, float** %diffuse_color.addr, align 8
  call void @llvm.dbg.declare(metadata float** %diffuse_color.addr, metadata !8130, metadata !DIExpression()), !dbg !8131
  call void @llvm.dbg.declare(metadata float* %color, metadata !8132, metadata !DIExpression()), !dbg !8133
  %0 = load float, float* %mask.addr, align 4, !dbg !8134
  %call = call float @gpu_color_from_mask(float %0), !dbg !8135
  store float %call, float* %color, align 4, !dbg !8133
  %1 = load float*, float** %diffuse_color.addr, align 8, !dbg !8136
  %arrayidx = getelementptr inbounds float, float* %1, i64 0, !dbg !8136
  %2 = load float, float* %arrayidx, align 4, !dbg !8136
  %3 = load float, float* %color, align 4, !dbg !8137
  %mul = fmul float %2, %3, !dbg !8138
  %4 = load float*, float** %diffuse_color.addr, align 8, !dbg !8139
  %arrayidx1 = getelementptr inbounds float, float* %4, i64 1, !dbg !8139
  %5 = load float, float* %arrayidx1, align 4, !dbg !8139
  %6 = load float, float* %color, align 4, !dbg !8140
  %mul2 = fmul float %5, %6, !dbg !8141
  %7 = load float*, float** %diffuse_color.addr, align 8, !dbg !8142
  %arrayidx3 = getelementptr inbounds float, float* %7, i64 2, !dbg !8142
  %8 = load float, float* %arrayidx3, align 4, !dbg !8142
  %9 = load float, float* %color, align 4, !dbg !8143
  %mul4 = fmul float %8, %9, !dbg !8144
  call void @glColor3f(float %mul, float %mul2, float %mul4), !dbg !8145
  ret void, !dbg !8146
}

declare dso_local void @glNormal3sv(i16*) #2

declare dso_local void @glVertex3fv(float*) #2

declare dso_local void @glNormal3fv(float*) #2

declare dso_local void @glEnd() #2

declare dso_local void @glColor3f(float, float, float) #2

; Function Attrs: noinline nounwind uwtable
define internal void @gpu_color_from_mask_quad_set(%struct.CCGKey* %key, %struct.CCGElem* %a, %struct.CCGElem* %b, %struct.CCGElem* %c, %struct.CCGElem* %d, float* %diffuse_color) #0 !dbg !8147 {
entry:
  %key.addr = alloca %struct.CCGKey*, align 8
  %a.addr = alloca %struct.CCGElem*, align 8
  %b.addr = alloca %struct.CCGElem*, align 8
  %c.addr = alloca %struct.CCGElem*, align 8
  %d.addr = alloca %struct.CCGElem*, align 8
  %diffuse_color.addr = alloca float*, align 8
  %color = alloca float, align 4
  store %struct.CCGKey* %key, %struct.CCGKey** %key.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGKey** %key.addr, metadata !8150, metadata !DIExpression()), !dbg !8151
  store %struct.CCGElem* %a, %struct.CCGElem** %a.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGElem** %a.addr, metadata !8152, metadata !DIExpression()), !dbg !8153
  store %struct.CCGElem* %b, %struct.CCGElem** %b.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGElem** %b.addr, metadata !8154, metadata !DIExpression()), !dbg !8155
  store %struct.CCGElem* %c, %struct.CCGElem** %c.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGElem** %c.addr, metadata !8156, metadata !DIExpression()), !dbg !8157
  store %struct.CCGElem* %d, %struct.CCGElem** %d.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGElem** %d.addr, metadata !8158, metadata !DIExpression()), !dbg !8159
  store float* %diffuse_color, float** %diffuse_color.addr, align 8
  call void @llvm.dbg.declare(metadata float** %diffuse_color.addr, metadata !8160, metadata !DIExpression()), !dbg !8161
  call void @llvm.dbg.declare(metadata float* %color, metadata !8162, metadata !DIExpression()), !dbg !8163
  %0 = load %struct.CCGKey*, %struct.CCGKey** %key.addr, align 8, !dbg !8164
  %1 = load %struct.CCGElem*, %struct.CCGElem** %a.addr, align 8, !dbg !8165
  %2 = load %struct.CCGElem*, %struct.CCGElem** %b.addr, align 8, !dbg !8166
  %3 = load %struct.CCGElem*, %struct.CCGElem** %c.addr, align 8, !dbg !8167
  %4 = load %struct.CCGElem*, %struct.CCGElem** %d.addr, align 8, !dbg !8168
  %call = call float @gpu_color_from_mask_quad(%struct.CCGKey* %0, %struct.CCGElem* %1, %struct.CCGElem* %2, %struct.CCGElem* %3, %struct.CCGElem* %4), !dbg !8169
  store float %call, float* %color, align 4, !dbg !8163
  %5 = load float*, float** %diffuse_color.addr, align 8, !dbg !8170
  %arrayidx = getelementptr inbounds float, float* %5, i64 0, !dbg !8170
  %6 = load float, float* %arrayidx, align 4, !dbg !8170
  %7 = load float, float* %color, align 4, !dbg !8171
  %mul = fmul float %6, %7, !dbg !8172
  %8 = load float*, float** %diffuse_color.addr, align 8, !dbg !8173
  %arrayidx1 = getelementptr inbounds float, float* %8, i64 1, !dbg !8173
  %9 = load float, float* %arrayidx1, align 4, !dbg !8173
  %10 = load float, float* %color, align 4, !dbg !8174
  %mul2 = fmul float %9, %10, !dbg !8175
  %11 = load float*, float** %diffuse_color.addr, align 8, !dbg !8176
  %arrayidx3 = getelementptr inbounds float, float* %11, i64 2, !dbg !8176
  %12 = load float, float* %arrayidx3, align 4, !dbg !8176
  %13 = load float, float* %color, align 4, !dbg !8177
  %mul4 = fmul float %12, %13, !dbg !8178
  call void @glColor3f(float %mul, float %mul2, float %mul4), !dbg !8179
  ret void, !dbg !8180
}

; Function Attrs: noinline nounwind uwtable
define internal float @gpu_color_from_mask_quad(%struct.CCGKey* %key, %struct.CCGElem* %a, %struct.CCGElem* %b, %struct.CCGElem* %c, %struct.CCGElem* %d) #0 !dbg !8181 {
entry:
  %key.addr = alloca %struct.CCGKey*, align 8
  %a.addr = alloca %struct.CCGElem*, align 8
  %b.addr = alloca %struct.CCGElem*, align 8
  %c.addr = alloca %struct.CCGElem*, align 8
  %d.addr = alloca %struct.CCGElem*, align 8
  store %struct.CCGKey* %key, %struct.CCGKey** %key.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGKey** %key.addr, metadata !8184, metadata !DIExpression()), !dbg !8185
  store %struct.CCGElem* %a, %struct.CCGElem** %a.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGElem** %a.addr, metadata !8186, metadata !DIExpression()), !dbg !8187
  store %struct.CCGElem* %b, %struct.CCGElem** %b.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGElem** %b.addr, metadata !8188, metadata !DIExpression()), !dbg !8189
  store %struct.CCGElem* %c, %struct.CCGElem** %c.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGElem** %c.addr, metadata !8190, metadata !DIExpression()), !dbg !8191
  store %struct.CCGElem* %d, %struct.CCGElem** %d.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGElem** %d.addr, metadata !8192, metadata !DIExpression()), !dbg !8193
  %0 = load %struct.CCGKey*, %struct.CCGKey** %key.addr, align 8, !dbg !8194
  %1 = load %struct.CCGElem*, %struct.CCGElem** %a.addr, align 8, !dbg !8195
  %call = call float* @CCG_elem_mask(%struct.CCGKey* %0, %struct.CCGElem* %1), !dbg !8196
  %2 = load float, float* %call, align 4, !dbg !8197
  %3 = load %struct.CCGKey*, %struct.CCGKey** %key.addr, align 8, !dbg !8198
  %4 = load %struct.CCGElem*, %struct.CCGElem** %b.addr, align 8, !dbg !8199
  %call1 = call float* @CCG_elem_mask(%struct.CCGKey* %3, %struct.CCGElem* %4), !dbg !8200
  %5 = load float, float* %call1, align 4, !dbg !8201
  %add = fadd float %2, %5, !dbg !8202
  %6 = load %struct.CCGKey*, %struct.CCGKey** %key.addr, align 8, !dbg !8203
  %7 = load %struct.CCGElem*, %struct.CCGElem** %c.addr, align 8, !dbg !8204
  %call2 = call float* @CCG_elem_mask(%struct.CCGKey* %6, %struct.CCGElem* %7), !dbg !8205
  %8 = load float, float* %call2, align 4, !dbg !8206
  %add3 = fadd float %add, %8, !dbg !8207
  %9 = load %struct.CCGKey*, %struct.CCGKey** %key.addr, align 8, !dbg !8208
  %10 = load %struct.CCGElem*, %struct.CCGElem** %d.addr, align 8, !dbg !8209
  %call4 = call float* @CCG_elem_mask(%struct.CCGKey* %9, %struct.CCGElem* %10), !dbg !8210
  %11 = load float, float* %call4, align 4, !dbg !8211
  %add5 = fadd float %add3, %11, !dbg !8212
  %mul = fmul float %add5, 2.500000e-01, !dbg !8213
  %call6 = call float @gpu_color_from_mask(float %mul), !dbg !8214
  ret float %call6, !dbg !8215
}

attributes #0 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable willreturn }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind willreturn }

!llvm.dbg.cu = !{!2}
!llvm.module.flags = !{!1364, !1365, !1366}
!llvm.ident = !{!1367}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "gpu_buffer_pool", scope: !2, file: !3, line: 203, type: !1352, isLocal: true, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !162, globals: !203, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "blender/source/blender/gpu/intern/gpu_buffers.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!4 = !{!5, !12, !17, !21, !27, !33, !42, !50, !55, !60, !71, !77, !83, !91, !98, !142, !149, !158}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "DerivedMeshType", file: !6, line: 128, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_DerivedMesh.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10, !11}
!9 = !DIEnumerator(name: "DM_TYPE_CDDM", value: 0, isUnsigned: true)
!10 = !DIEnumerator(name: "DM_TYPE_EDITBMESH", value: 1, isUnsigned: true)
!11 = !DIEnumerator(name: "DM_TYPE_CCGDM", value: 2, isUnsigned: true)
!12 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "DMDirtyFlag", file: !6, line: 164, baseType: !7, size: 32, elements: !13)
!13 = !{!14, !15, !16}
!14 = !DIEnumerator(name: "DM_DIRTY_TESS_CDLAYERS", value: 1, isUnsigned: true)
!15 = !DIEnumerator(name: "DM_DIRTY_MCOL_UPDATE_DRAW", value: 2, isUnsigned: true)
!16 = !DIEnumerator(name: "DM_DIRTY_NORMALS", value: 4, isUnsigned: true)
!17 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "DMForeachFlag", file: !6, line: 159, baseType: !7, size: 32, elements: !18)
!18 = !{!19, !20}
!19 = !DIEnumerator(name: "DM_FOREACH_NOP", value: 0, isUnsigned: true)
!20 = !DIEnumerator(name: "DM_FOREACH_USE_NORMAL", value: 1, isUnsigned: true)
!21 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "DMDrawOption", file: !6, line: 134, baseType: !7, size: 32, elements: !22)
!22 = !{!23, !24, !25, !26}
!23 = !DIEnumerator(name: "DM_DRAW_OPTION_SKIP", value: 0, isUnsigned: true)
!24 = !DIEnumerator(name: "DM_DRAW_OPTION_NORMAL", value: 1, isUnsigned: true)
!25 = !DIEnumerator(name: "DM_DRAW_OPTION_NO_MCOL", value: 2, isUnsigned: true)
!26 = !DIEnumerator(name: "DM_DRAW_OPTION_STIPPLE", value: 3, isUnsigned: true)
!27 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "DMDrawFlag", file: !6, line: 152, baseType: !7, size: 32, elements: !28)
!28 = !{!29, !30, !31, !32}
!29 = !DIEnumerator(name: "DM_DRAW_USE_COLORS", value: 1, isUnsigned: true)
!30 = !DIEnumerator(name: "DM_DRAW_ALWAYS_SMOOTH", value: 2, isUnsigned: true)
!31 = !DIEnumerator(name: "DM_DRAW_USE_ACTIVE_UV", value: 4, isUnsigned: true)
!32 = !DIEnumerator(name: "DM_DRAW_USE_TEXPAINT_UV", value: 8, isUnsigned: true)
!33 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !3, line: 983, baseType: !7, size: 32, elements: !34)
!34 = !{!35, !36, !37, !38, !39, !40, !41}
!35 = !DIEnumerator(name: "GPU_BUFFER_VERTEX", value: 0, isUnsigned: true)
!36 = !DIEnumerator(name: "GPU_BUFFER_NORMAL", value: 1, isUnsigned: true)
!37 = !DIEnumerator(name: "GPU_BUFFER_COLOR", value: 2, isUnsigned: true)
!38 = !DIEnumerator(name: "GPU_BUFFER_UV", value: 3, isUnsigned: true)
!39 = !DIEnumerator(name: "GPU_BUFFER_UV_TEXPAINT", value: 4, isUnsigned: true)
!40 = !DIEnumerator(name: "GPU_BUFFER_EDGE", value: 5, isUnsigned: true)
!41 = !DIEnumerator(name: "GPU_BUFFER_UVEDGE", value: 6, isUnsigned: true)
!42 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !3, line: 65, baseType: !7, size: 32, elements: !43)
!43 = !{!44, !45, !46, !47, !48, !49}
!44 = !DIEnumerator(name: "GPU_BUFFER_VERTEX_STATE", value: 1, isUnsigned: true)
!45 = !DIEnumerator(name: "GPU_BUFFER_NORMAL_STATE", value: 2, isUnsigned: true)
!46 = !DIEnumerator(name: "GPU_BUFFER_TEXCOORD_UNIT_0_STATE", value: 4, isUnsigned: true)
!47 = !DIEnumerator(name: "GPU_BUFFER_TEXCOORD_UNIT_2_STATE", value: 8, isUnsigned: true)
!48 = !DIEnumerator(name: "GPU_BUFFER_COLOR_STATE", value: 16, isUnsigned: true)
!49 = !DIEnumerator(name: "GPU_BUFFER_ELEMENT_STATE", value: 32, isUnsigned: true)
!50 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eOpenGL_RenderingOptions", file: !51, line: 726, baseType: !7, size: 32, elements: !52)
!51 = !DIFile(filename: "blender/source/blender/makesdna/DNA_userdef_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!52 = !{!53, !54}
!53 = !DIEnumerator(name: "USER_DISABLE_MIPMAP", value: 4, isUnsigned: true)
!54 = !DIEnumerator(name: "USER_DISABLE_VBO", value: 8, isUnsigned: true)
!55 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !56, line: 341, baseType: !7, size: 32, elements: !57)
!56 = !DIFile(filename: "blender/source/blender/makesdna/DNA_meshdata_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!57 = !{!58, !59}
!58 = !DIEnumerator(name: "ME_SMOOTH", value: 1, isUnsigned: true)
!59 = !DIEnumerator(name: "ME_FACE_SEL", value: 2, isUnsigned: true)
!60 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eBMOpSlotType", file: !61, line: 94, baseType: !7, size: 32, elements: !62)
!61 = !DIFile(filename: "blender/source/blender/bmesh/intern/bmesh_operator_api.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!62 = !{!63, !64, !65, !66, !67, !68, !69, !70}
!63 = !DIEnumerator(name: "BMO_OP_SLOT_BOOL", value: 1, isUnsigned: true)
!64 = !DIEnumerator(name: "BMO_OP_SLOT_INT", value: 2, isUnsigned: true)
!65 = !DIEnumerator(name: "BMO_OP_SLOT_FLT", value: 3, isUnsigned: true)
!66 = !DIEnumerator(name: "BMO_OP_SLOT_PTR", value: 4, isUnsigned: true)
!67 = !DIEnumerator(name: "BMO_OP_SLOT_MAT", value: 5, isUnsigned: true)
!68 = !DIEnumerator(name: "BMO_OP_SLOT_VEC", value: 8, isUnsigned: true)
!69 = !DIEnumerator(name: "BMO_OP_SLOT_ELEMENT_BUF", value: 9, isUnsigned: true)
!70 = !DIEnumerator(name: "BMO_OP_SLOT_MAPPING", value: 10, isUnsigned: true)
!71 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eBMOpSlotSubType_Elem", file: !61, line: 116, baseType: !7, size: 32, elements: !72)
!72 = !{!73, !74, !75, !76}
!73 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_ELEM_VERT", value: 1, isUnsigned: true)
!74 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_ELEM_EDGE", value: 2, isUnsigned: true)
!75 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_ELEM_FACE", value: 8, isUnsigned: true)
!76 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_ELEM_IS_SINGLE", value: 16, isUnsigned: true)
!77 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eBMOpSlotSubType_Ptr", file: !61, line: 131, baseType: !7, size: 32, elements: !78)
!78 = !{!79, !80, !81, !82}
!79 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_PTR_BMESH", value: 100, isUnsigned: true)
!80 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_PTR_SCENE", value: 101, isUnsigned: true)
!81 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_PTR_OBJECT", value: 102, isUnsigned: true)
!82 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_PTR_MESH", value: 103, isUnsigned: true)
!83 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eBMOpSlotSubType_Map", file: !61, line: 123, baseType: !7, size: 32, elements: !84)
!84 = !{!85, !86, !87, !88, !89, !90}
!85 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_MAP_EMPTY", value: 64, isUnsigned: true)
!86 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_MAP_ELEM", value: 65, isUnsigned: true)
!87 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_MAP_FLT", value: 66, isUnsigned: true)
!88 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_MAP_INT", value: 67, isUnsigned: true)
!89 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_MAP_BOOL", value: 68, isUnsigned: true)
!90 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_MAP_INTERNAL", value: 69, isUnsigned: true)
!91 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !61, line: 182, baseType: !7, size: 32, elements: !92)
!92 = !{!93, !94, !95, !96, !97}
!93 = !DIEnumerator(name: "BMO_OPTYPE_FLAG_NOP", value: 0, isUnsigned: true)
!94 = !DIEnumerator(name: "BMO_OPTYPE_FLAG_UNTAN_MULTIRES", value: 1, isUnsigned: true)
!95 = !DIEnumerator(name: "BMO_OPTYPE_FLAG_NORMALS_CALC", value: 2, isUnsigned: true)
!96 = !DIEnumerator(name: "BMO_OPTYPE_FLAG_SELECT_FLUSH", value: 4, isUnsigned: true)
!97 = !DIEnumerator(name: "BMO_OPTYPE_FLAG_SELECT_VALIDATE", value: 8, isUnsigned: true)
!98 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !99, line: 76, baseType: !7, size: 32, elements: !100)
!99 = !DIFile(filename: "blender/source/blender/makesdna/DNA_customdata_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!100 = !{!101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133, !134, !135, !136, !137, !138, !139, !140, !141}
!101 = !DIEnumerator(name: "CD_MVERT", value: 0, isUnsigned: true)
!102 = !DIEnumerator(name: "CD_MSTICKY", value: 1, isUnsigned: true)
!103 = !DIEnumerator(name: "CD_MDEFORMVERT", value: 2, isUnsigned: true)
!104 = !DIEnumerator(name: "CD_MEDGE", value: 3, isUnsigned: true)
!105 = !DIEnumerator(name: "CD_MFACE", value: 4, isUnsigned: true)
!106 = !DIEnumerator(name: "CD_MTFACE", value: 5, isUnsigned: true)
!107 = !DIEnumerator(name: "CD_MCOL", value: 6, isUnsigned: true)
!108 = !DIEnumerator(name: "CD_ORIGINDEX", value: 7, isUnsigned: true)
!109 = !DIEnumerator(name: "CD_NORMAL", value: 8, isUnsigned: true)
!110 = !DIEnumerator(name: "CD_PROP_FLT", value: 10, isUnsigned: true)
!111 = !DIEnumerator(name: "CD_PROP_INT", value: 11, isUnsigned: true)
!112 = !DIEnumerator(name: "CD_PROP_STR", value: 12, isUnsigned: true)
!113 = !DIEnumerator(name: "CD_ORIGSPACE", value: 13, isUnsigned: true)
!114 = !DIEnumerator(name: "CD_ORCO", value: 14, isUnsigned: true)
!115 = !DIEnumerator(name: "CD_MTEXPOLY", value: 15, isUnsigned: true)
!116 = !DIEnumerator(name: "CD_MLOOPUV", value: 16, isUnsigned: true)
!117 = !DIEnumerator(name: "CD_MLOOPCOL", value: 17, isUnsigned: true)
!118 = !DIEnumerator(name: "CD_TANGENT", value: 18, isUnsigned: true)
!119 = !DIEnumerator(name: "CD_MDISPS", value: 19, isUnsigned: true)
!120 = !DIEnumerator(name: "CD_PREVIEW_MCOL", value: 20, isUnsigned: true)
!121 = !DIEnumerator(name: "CD_ID_MCOL", value: 21, isUnsigned: true)
!122 = !DIEnumerator(name: "CD_TEXTURE_MCOL", value: 22, isUnsigned: true)
!123 = !DIEnumerator(name: "CD_CLOTH_ORCO", value: 23, isUnsigned: true)
!124 = !DIEnumerator(name: "CD_RECAST", value: 24, isUnsigned: true)
!125 = !DIEnumerator(name: "CD_MPOLY", value: 25, isUnsigned: true)
!126 = !DIEnumerator(name: "CD_MLOOP", value: 26, isUnsigned: true)
!127 = !DIEnumerator(name: "CD_SHAPE_KEYINDEX", value: 27, isUnsigned: true)
!128 = !DIEnumerator(name: "CD_SHAPEKEY", value: 28, isUnsigned: true)
!129 = !DIEnumerator(name: "CD_BWEIGHT", value: 29, isUnsigned: true)
!130 = !DIEnumerator(name: "CD_CREASE", value: 30, isUnsigned: true)
!131 = !DIEnumerator(name: "CD_ORIGSPACE_MLOOP", value: 31, isUnsigned: true)
!132 = !DIEnumerator(name: "CD_PREVIEW_MLOOPCOL", value: 32, isUnsigned: true)
!133 = !DIEnumerator(name: "CD_BM_ELEM_PYPTR", value: 33, isUnsigned: true)
!134 = !DIEnumerator(name: "CD_PAINT_MASK", value: 34, isUnsigned: true)
!135 = !DIEnumerator(name: "CD_GRID_PAINT_MASK", value: 35, isUnsigned: true)
!136 = !DIEnumerator(name: "CD_MVERT_SKIN", value: 36, isUnsigned: true)
!137 = !DIEnumerator(name: "CD_FREESTYLE_EDGE", value: 37, isUnsigned: true)
!138 = !DIEnumerator(name: "CD_FREESTYLE_FACE", value: 38, isUnsigned: true)
!139 = !DIEnumerator(name: "CD_MLOOPTANGENT", value: 39, isUnsigned: true)
!140 = !DIEnumerator(name: "CD_TESSLOOPNORMAL", value: 40, isUnsigned: true)
!141 = !DIEnumerator(name: "CD_NUMTYPES", value: 41, isUnsigned: true)
!142 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !143, line: 249, baseType: !7, size: 32, elements: !144)
!143 = !DIFile(filename: "blender/source/blender/bmesh/bmesh_class.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!144 = !{!145, !146, !147, !148}
!145 = !DIEnumerator(name: "BM_VERT", value: 1, isUnsigned: true)
!146 = !DIEnumerator(name: "BM_EDGE", value: 2, isUnsigned: true)
!147 = !DIEnumerator(name: "BM_LOOP", value: 4, isUnsigned: true)
!148 = !DIEnumerator(name: "BM_FACE", value: 8, isUnsigned: true)
!149 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !143, line: 260, baseType: !7, size: 32, elements: !150)
!150 = !{!151, !152, !153, !154, !155, !156, !157}
!151 = !DIEnumerator(name: "BM_ELEM_SELECT", value: 1, isUnsigned: true)
!152 = !DIEnumerator(name: "BM_ELEM_HIDDEN", value: 2, isUnsigned: true)
!153 = !DIEnumerator(name: "BM_ELEM_SEAM", value: 4, isUnsigned: true)
!154 = !DIEnumerator(name: "BM_ELEM_SMOOTH", value: 8, isUnsigned: true)
!155 = !DIEnumerator(name: "BM_ELEM_TAG", value: 16, isUnsigned: true)
!156 = !DIEnumerator(name: "BM_ELEM_DRAW", value: 32, isUnsigned: true)
!157 = !DIEnumerator(name: "BM_ELEM_INTERNAL_TAG", value: 128, isUnsigned: true)
!158 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !3, line: 1508, baseType: !7, size: 32, elements: !159)
!159 = !{!160, !161}
!160 = !DIEnumerator(name: "VBO_ENABLED", value: 0, isUnsigned: true)
!161 = !DIEnumerator(name: "VBO_DISABLED", value: 1, isUnsigned: true)
!162 = !{!163, !167, !168, !170, !172, !175, !177, !178, !179, !180, !184, !190, !197}
!163 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !164, size: 64)
!164 = !DIDerivedType(tag: DW_TAG_typedef, name: "GLubyte", file: !165, line: 278, baseType: !166)
!165 = !DIFile(filename: "blender/extern/glew/include/GL/glew.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!166 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!167 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!168 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !169, size: 64)
!169 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!170 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !171, size: 64)
!171 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!172 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !173, size: 64)
!173 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !174)
!174 = !DIDerivedType(tag: DW_TAG_typedef, name: "GLboolean", file: !165, line: 275, baseType: !166)
!175 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !176, size: 64)
!176 = !DIBasicType(name: "float", size: 32, encoding: DW_ATE_float)
!177 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !166, size: 64)
!178 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!179 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!180 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !181, size: 64)
!181 = !DIDerivedType(tag: DW_TAG_typedef, name: "CCGElem", file: !182, line: 51, baseType: !183)
!182 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_ccg.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!183 = !DICompositeType(tag: DW_TAG_structure_type, name: "CCGElem", file: !182, line: 51, flags: DIFlagFwdDecl)
!184 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !185, size: 64)
!185 = !DIDerivedType(tag: DW_TAG_typedef, name: "GHashIterator", file: !186, line: 54, baseType: !187)
!186 = !DIFile(filename: "blender/source/blender/blenlib/BLI_ghash.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!187 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GHashIterator", file: !186, line: 50, size: 192, elements: !188)
!188 = !{!189, !193, !196}
!189 = !DIDerivedType(tag: DW_TAG_member, name: "gh", scope: !187, file: !186, line: 51, baseType: !190, size: 64)
!190 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !191, size: 64)
!191 = !DIDerivedType(tag: DW_TAG_typedef, name: "GHash", file: !186, line: 48, baseType: !192)
!192 = !DICompositeType(tag: DW_TAG_structure_type, name: "GHash", file: !186, line: 48, flags: DIFlagFwdDecl)
!193 = !DIDerivedType(tag: DW_TAG_member, name: "curEntry", scope: !187, file: !186, line: 52, baseType: !194, size: 64, offset: 64)
!194 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !195, size: 64)
!195 = !DICompositeType(tag: DW_TAG_structure_type, name: "Entry", file: !186, line: 52, flags: DIFlagFwdDecl)
!196 = !DIDerivedType(tag: DW_TAG_member, name: "curBucket", scope: !187, file: !186, line: 53, baseType: !7, size: 32, offset: 128)
!197 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !198, size: 64)
!198 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_gh_Entry", file: !186, line: 94, size: 192, elements: !199)
!199 = !{!200, !201, !202}
!200 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !198, file: !186, line: 94, baseType: !167, size: 64)
!201 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !198, file: !186, line: 94, baseType: !167, size: 64, offset: 64)
!202 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !198, file: !186, line: 94, baseType: !167, size: 64, offset: 128)
!203 = !{!204, !0, !1316, !1324, !1326, !1329, !1338, !1346, !1348, !1350}
!204 = !DIGlobalVariableExpression(var: !205, expr: !DIExpression())
!205 = distinct !DIGlobalVariable(name: "gpu_buffer_type_settings", scope: !2, file: !3, line: 999, type: !206, isLocal: false, isDefinition: true)
!206 = !DICompositeType(tag: DW_TAG_array_type, baseType: !207, size: 896, elements: !719)
!207 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !208)
!208 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPUBufferTypeSettings", file: !3, line: 997, baseType: !209)
!209 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3, line: 993, size: 128, elements: !210)
!210 = !{!211, !1313, !1315}
!211 = !DIDerivedType(tag: DW_TAG_member, name: "copy", scope: !209, file: !3, line: 994, baseType: !212, size: 64)
!212 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPUBufferCopyFunc", file: !3, line: 588, baseType: !213)
!213 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !214, size: 64)
!214 = !DISubroutineType(types: !215)
!215 = !{null, !216, !175, !170, !170, !167}
!216 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !217, size: 64)
!217 = !DIDerivedType(tag: DW_TAG_typedef, name: "DerivedMesh", file: !6, line: 177, baseType: !218)
!218 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DerivedMesh", file: !6, line: 178, size: 13504, elements: !219)
!219 = !{!220, !261, !262, !263, !264, !265, !266, !267, !268, !269, !270, !271, !272, !277, !316, !318, !319, !321, !322, !971, !972, !976, !981, !982, !986, !987, !988, !989, !990, !1001, !1013, !1027, !1031, !1035, !1039, !1048, !1060, !1064, !1068, !1072, !1076, !1080, !1081, !1082, !1083, !1084, !1085, !1089, !1090, !1091, !1092, !1096, !1097, !1098, !1099, !1100, !1105, !1106, !1107, !1108, !1109, !1113, !1114, !1115, !1116, !1117, !1123, !1134, !1138, !1155, !1165, !1170, !1181, !1188, !1195, !1199, !1203, !1207, !1212, !1213, !1214, !1221, !1227, !1228, !1229, !1233, !1234, !1243, !1270, !1274, !1282, !1286, !1290, !1294, !1302, !1312}
!220 = !DIDerivedType(tag: DW_TAG_member, name: "vertData", scope: !218, file: !6, line: 180, baseType: !221, size: 1600)
!221 = !DIDerivedType(tag: DW_TAG_typedef, name: "CustomData", file: !99, line: 73, baseType: !222)
!222 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CustomData", file: !99, line: 64, size: 1600, elements: !223)
!223 = !{!224, !242, !246, !247, !248, !249, !252}
!224 = !DIDerivedType(tag: DW_TAG_member, name: "layers", scope: !222, file: !99, line: 65, baseType: !225, size: 64)
!225 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !226, size: 64)
!226 = !DIDerivedType(tag: DW_TAG_typedef, name: "CustomDataLayer", file: !99, line: 53, baseType: !227)
!227 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CustomDataLayer", file: !99, line: 42, size: 832, elements: !228)
!228 = !{!229, !230, !231, !232, !233, !234, !235, !236, !237, !241}
!229 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !227, file: !99, line: 43, baseType: !171, size: 32)
!230 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !227, file: !99, line: 44, baseType: !171, size: 32, offset: 32)
!231 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !227, file: !99, line: 45, baseType: !171, size: 32, offset: 64)
!232 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !227, file: !99, line: 46, baseType: !171, size: 32, offset: 96)
!233 = !DIDerivedType(tag: DW_TAG_member, name: "active_rnd", scope: !227, file: !99, line: 47, baseType: !171, size: 32, offset: 128)
!234 = !DIDerivedType(tag: DW_TAG_member, name: "active_clone", scope: !227, file: !99, line: 48, baseType: !171, size: 32, offset: 160)
!235 = !DIDerivedType(tag: DW_TAG_member, name: "active_mask", scope: !227, file: !99, line: 49, baseType: !171, size: 32, offset: 192)
!236 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !227, file: !99, line: 50, baseType: !171, size: 32, offset: 224)
!237 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !227, file: !99, line: 51, baseType: !238, size: 512, offset: 256)
!238 = !DICompositeType(tag: DW_TAG_array_type, baseType: !169, size: 512, elements: !239)
!239 = !{!240}
!240 = !DISubrange(count: 64)
!241 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !227, file: !99, line: 52, baseType: !167, size: 64, offset: 768)
!242 = !DIDerivedType(tag: DW_TAG_member, name: "typemap", scope: !222, file: !99, line: 66, baseType: !243, size: 1312, offset: 64)
!243 = !DICompositeType(tag: DW_TAG_array_type, baseType: !171, size: 1312, elements: !244)
!244 = !{!245}
!245 = !DISubrange(count: 41)
!246 = !DIDerivedType(tag: DW_TAG_member, name: "totlayer", scope: !222, file: !99, line: 69, baseType: !171, size: 32, offset: 1376)
!247 = !DIDerivedType(tag: DW_TAG_member, name: "maxlayer", scope: !222, file: !99, line: 69, baseType: !171, size: 32, offset: 1408)
!248 = !DIDerivedType(tag: DW_TAG_member, name: "totsize", scope: !222, file: !99, line: 70, baseType: !171, size: 32, offset: 1440)
!249 = !DIDerivedType(tag: DW_TAG_member, name: "pool", scope: !222, file: !99, line: 71, baseType: !250, size: 64, offset: 1472)
!250 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !251, size: 64)
!251 = !DICompositeType(tag: DW_TAG_structure_type, name: "BLI_mempool", file: !99, line: 71, flags: DIFlagFwdDecl)
!252 = !DIDerivedType(tag: DW_TAG_member, name: "external", scope: !222, file: !99, line: 72, baseType: !253, size: 64, offset: 1536)
!253 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !254, size: 64)
!254 = !DIDerivedType(tag: DW_TAG_typedef, name: "CustomDataExternal", file: !99, line: 59, baseType: !255)
!255 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CustomDataExternal", file: !99, line: 57, size: 8192, elements: !256)
!256 = !{!257}
!257 = !DIDerivedType(tag: DW_TAG_member, name: "filename", scope: !255, file: !99, line: 58, baseType: !258, size: 8192)
!258 = !DICompositeType(tag: DW_TAG_array_type, baseType: !169, size: 8192, elements: !259)
!259 = !{!260}
!260 = !DISubrange(count: 1024)
!261 = !DIDerivedType(tag: DW_TAG_member, name: "edgeData", scope: !218, file: !6, line: 180, baseType: !221, size: 1600, offset: 1600)
!262 = !DIDerivedType(tag: DW_TAG_member, name: "faceData", scope: !218, file: !6, line: 180, baseType: !221, size: 1600, offset: 3200)
!263 = !DIDerivedType(tag: DW_TAG_member, name: "loopData", scope: !218, file: !6, line: 180, baseType: !221, size: 1600, offset: 4800)
!264 = !DIDerivedType(tag: DW_TAG_member, name: "polyData", scope: !218, file: !6, line: 180, baseType: !221, size: 1600, offset: 6400)
!265 = !DIDerivedType(tag: DW_TAG_member, name: "numVertData", scope: !218, file: !6, line: 181, baseType: !171, size: 32, offset: 8000)
!266 = !DIDerivedType(tag: DW_TAG_member, name: "numEdgeData", scope: !218, file: !6, line: 181, baseType: !171, size: 32, offset: 8032)
!267 = !DIDerivedType(tag: DW_TAG_member, name: "numTessFaceData", scope: !218, file: !6, line: 181, baseType: !171, size: 32, offset: 8064)
!268 = !DIDerivedType(tag: DW_TAG_member, name: "numLoopData", scope: !218, file: !6, line: 181, baseType: !171, size: 32, offset: 8096)
!269 = !DIDerivedType(tag: DW_TAG_member, name: "numPolyData", scope: !218, file: !6, line: 181, baseType: !171, size: 32, offset: 8128)
!270 = !DIDerivedType(tag: DW_TAG_member, name: "needsFree", scope: !218, file: !6, line: 182, baseType: !171, size: 32, offset: 8160)
!271 = !DIDerivedType(tag: DW_TAG_member, name: "deformedOnly", scope: !218, file: !6, line: 183, baseType: !171, size: 32, offset: 8192)
!272 = !DIDerivedType(tag: DW_TAG_member, name: "bvhCache", scope: !218, file: !6, line: 184, baseType: !273, size: 64, offset: 8256)
!273 = !DIDerivedType(tag: DW_TAG_typedef, name: "BVHCache", file: !274, line: 124, baseType: !275)
!274 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_bvhutils.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!275 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !276, size: 64)
!276 = !DICompositeType(tag: DW_TAG_structure_type, name: "LinkNode", file: !274, line: 124, flags: DIFlagFwdDecl)
!277 = !DIDerivedType(tag: DW_TAG_member, name: "drawObject", scope: !218, file: !6, line: 185, baseType: !278, size: 64, offset: 8320)
!278 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !279, size: 64)
!279 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GPUDrawObject", file: !280, line: 84, size: 832, elements: !281)
!280 = !DIFile(filename: "blender/source/blender/gpu/GPU_buffers.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!281 = !{!282, !290, !291, !292, !293, !294, !295, !296, !301, !302, !310, !311, !312, !313, !314, !315}
!282 = !DIDerivedType(tag: DW_TAG_member, name: "points", scope: !279, file: !280, line: 85, baseType: !283, size: 64)
!283 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !284, size: 64)
!284 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPUBuffer", file: !280, line: 57, baseType: !285)
!285 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GPUBuffer", file: !280, line: 53, size: 192, elements: !286)
!286 = !{!287, !288, !289}
!287 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !285, file: !280, line: 54, baseType: !171, size: 32)
!288 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !285, file: !280, line: 55, baseType: !167, size: 64, offset: 64)
!289 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !285, file: !280, line: 56, baseType: !7, size: 32, offset: 128)
!290 = !DIDerivedType(tag: DW_TAG_member, name: "normals", scope: !279, file: !280, line: 86, baseType: !283, size: 64, offset: 64)
!291 = !DIDerivedType(tag: DW_TAG_member, name: "uv", scope: !279, file: !280, line: 87, baseType: !283, size: 64, offset: 128)
!292 = !DIDerivedType(tag: DW_TAG_member, name: "colors", scope: !279, file: !280, line: 88, baseType: !283, size: 64, offset: 192)
!293 = !DIDerivedType(tag: DW_TAG_member, name: "edges", scope: !279, file: !280, line: 89, baseType: !283, size: 64, offset: 256)
!294 = !DIDerivedType(tag: DW_TAG_member, name: "uvedges", scope: !279, file: !280, line: 90, baseType: !283, size: 64, offset: 320)
!295 = !DIDerivedType(tag: DW_TAG_member, name: "triangle_to_mface", scope: !279, file: !280, line: 93, baseType: !170, size: 64, offset: 384)
!296 = !DIDerivedType(tag: DW_TAG_member, name: "vert_points", scope: !279, file: !280, line: 96, baseType: !297, size: 64, offset: 448)
!297 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !298, size: 64)
!298 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GPUVertPointLink", file: !3, line: 387, size: 32, elements: !299)
!299 = !{!300}
!300 = !DIDerivedType(tag: DW_TAG_member, name: "point_index", scope: !298, file: !3, line: 392, baseType: !171, size: 32)
!301 = !DIDerivedType(tag: DW_TAG_member, name: "colType", scope: !279, file: !280, line: 105, baseType: !171, size: 32, offset: 512)
!302 = !DIDerivedType(tag: DW_TAG_member, name: "materials", scope: !279, file: !280, line: 107, baseType: !303, size: 64, offset: 576)
!303 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !304, size: 64)
!304 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPUBufferMaterial", file: !280, line: 66, baseType: !305)
!305 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GPUBufferMaterial", file: !280, line: 59, size: 96, elements: !306)
!306 = !{!307, !308, !309}
!307 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !305, file: !280, line: 61, baseType: !171, size: 32)
!308 = !DIDerivedType(tag: DW_TAG_member, name: "totpoint", scope: !305, file: !280, line: 62, baseType: !171, size: 32, offset: 32)
!309 = !DIDerivedType(tag: DW_TAG_member, name: "mat_nr", scope: !305, file: !280, line: 65, baseType: !179, size: 16, offset: 64)
!310 = !DIDerivedType(tag: DW_TAG_member, name: "totmaterial", scope: !279, file: !280, line: 108, baseType: !171, size: 32, offset: 640)
!311 = !DIDerivedType(tag: DW_TAG_member, name: "tot_triangle_point", scope: !279, file: !280, line: 110, baseType: !171, size: 32, offset: 672)
!312 = !DIDerivedType(tag: DW_TAG_member, name: "tot_loose_point", scope: !279, file: !280, line: 111, baseType: !171, size: 32, offset: 704)
!313 = !DIDerivedType(tag: DW_TAG_member, name: "totvert", scope: !279, file: !280, line: 114, baseType: !171, size: 32, offset: 736)
!314 = !DIDerivedType(tag: DW_TAG_member, name: "totedge", scope: !279, file: !280, line: 115, baseType: !171, size: 32, offset: 768)
!315 = !DIDerivedType(tag: DW_TAG_member, name: "legacy", scope: !279, file: !280, line: 119, baseType: !166, size: 8, offset: 800)
!316 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !218, file: !6, line: 186, baseType: !317, size: 32, offset: 8384)
!317 = !DIDerivedType(tag: DW_TAG_typedef, name: "DerivedMeshType", file: !6, line: 132, baseType: !5)
!318 = !DIDerivedType(tag: DW_TAG_member, name: "auto_bump_scale", scope: !218, file: !6, line: 187, baseType: !176, size: 32, offset: 8416)
!319 = !DIDerivedType(tag: DW_TAG_member, name: "dirty", scope: !218, file: !6, line: 188, baseType: !320, size: 32, offset: 8448)
!320 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMDirtyFlag", file: !6, line: 175, baseType: !12)
!321 = !DIDerivedType(tag: DW_TAG_member, name: "totmat", scope: !218, file: !6, line: 189, baseType: !171, size: 32, offset: 8480)
!322 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !218, file: !6, line: 190, baseType: !323, size: 64, offset: 8512)
!323 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !324, size: 64)
!324 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !325, size: 64)
!325 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Material", file: !326, line: 93, size: 7552, elements: !327)
!326 = !DIFile(filename: "blender/source/blender/makesdna/DNA_material_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!327 = !{!328, !390, !393, !394, !395, !396, !397, !398, !399, !400, !401, !402, !403, !404, !405, !406, !407, !408, !409, !410, !411, !412, !413, !414, !415, !416, !417, !418, !442, !449, !450, !451, !452, !453, !454, !455, !456, !457, !458, !459, !460, !461, !462, !463, !464, !465, !466, !467, !468, !469, !470, !471, !472, !473, !474, !475, !476, !477, !478, !479, !480, !481, !482, !483, !484, !485, !486, !487, !488, !489, !490, !491, !492, !493, !494, !495, !496, !497, !498, !499, !500, !501, !502, !503, !504, !505, !506, !507, !511, !512, !513, !514, !515, !542, !543, !544, !545, !546, !547, !548, !549, !550, !551, !928, !929, !930, !933, !934, !935, !936, !937, !938, !939, !940, !941, !942, !943, !944, !945, !946, !947, !948, !949, !950, !951, !952, !953, !954, !955, !956, !957, !958, !959, !960, !961, !962, !970}
!328 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !325, file: !326, line: 94, baseType: !329, size: 960)
!329 = !DIDerivedType(tag: DW_TAG_typedef, name: "ID", file: !330, line: 130, baseType: !331)
!330 = !DIFile(filename: "blender/source/blender/makesdna/DNA_ID.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!331 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ID", file: !330, line: 117, size: 960, elements: !332)
!332 = !{!333, !334, !335, !337, !353, !357, !358, !359, !360, !361}
!333 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !331, file: !330, line: 118, baseType: !167, size: 64)
!334 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !331, file: !330, line: 118, baseType: !167, size: 64, offset: 64)
!335 = !DIDerivedType(tag: DW_TAG_member, name: "newid", scope: !331, file: !330, line: 119, baseType: !336, size: 64, offset: 128)
!336 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !331, size: 64)
!337 = !DIDerivedType(tag: DW_TAG_member, name: "lib", scope: !331, file: !330, line: 120, baseType: !338, size: 64, offset: 192)
!338 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !339, size: 64)
!339 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Library", file: !330, line: 136, size: 17600, elements: !340)
!340 = !{!341, !342, !344, !347, !348, !349, !350}
!341 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !339, file: !330, line: 137, baseType: !329, size: 960)
!342 = !DIDerivedType(tag: DW_TAG_member, name: "idblock", scope: !339, file: !330, line: 138, baseType: !343, size: 64, offset: 960)
!343 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !329, size: 64)
!344 = !DIDerivedType(tag: DW_TAG_member, name: "filedata", scope: !339, file: !330, line: 139, baseType: !345, size: 64, offset: 1024)
!345 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !346, size: 64)
!346 = !DICompositeType(tag: DW_TAG_structure_type, name: "FileData", file: !330, line: 43, flags: DIFlagFwdDecl)
!347 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !339, file: !330, line: 140, baseType: !258, size: 8192, offset: 1088)
!348 = !DIDerivedType(tag: DW_TAG_member, name: "filepath", scope: !339, file: !330, line: 141, baseType: !258, size: 8192, offset: 9280)
!349 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !339, file: !330, line: 148, baseType: !338, size: 64, offset: 17472)
!350 = !DIDerivedType(tag: DW_TAG_member, name: "packedfile", scope: !339, file: !330, line: 150, baseType: !351, size: 64, offset: 17536)
!351 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !352, size: 64)
!352 = !DICompositeType(tag: DW_TAG_structure_type, name: "PackedFile", file: !330, line: 45, flags: DIFlagFwdDecl)
!353 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !331, file: !330, line: 121, baseType: !354, size: 528, offset: 256)
!354 = !DICompositeType(tag: DW_TAG_array_type, baseType: !169, size: 528, elements: !355)
!355 = !{!356}
!356 = !DISubrange(count: 66)
!357 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !331, file: !330, line: 126, baseType: !179, size: 16, offset: 784)
!358 = !DIDerivedType(tag: DW_TAG_member, name: "us", scope: !331, file: !330, line: 127, baseType: !171, size: 32, offset: 800)
!359 = !DIDerivedType(tag: DW_TAG_member, name: "icon_id", scope: !331, file: !330, line: 128, baseType: !171, size: 32, offset: 832)
!360 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !331, file: !330, line: 128, baseType: !171, size: 32, offset: 864)
!361 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !331, file: !330, line: 129, baseType: !362, size: 64, offset: 896)
!362 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !363, size: 64)
!363 = !DIDerivedType(tag: DW_TAG_typedef, name: "IDProperty", file: !330, line: 75, baseType: !364)
!364 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "IDProperty", file: !330, line: 62, size: 1024, elements: !365)
!365 = !{!366, !368, !369, !370, !371, !372, !373, !374, !388, !389}
!366 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !364, file: !330, line: 63, baseType: !367, size: 64)
!367 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !364, size: 64)
!368 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !364, file: !330, line: 63, baseType: !367, size: 64, offset: 64)
!369 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !364, file: !330, line: 64, baseType: !169, size: 8, offset: 128)
!370 = !DIDerivedType(tag: DW_TAG_member, name: "subtype", scope: !364, file: !330, line: 64, baseType: !169, size: 8, offset: 136)
!371 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !364, file: !330, line: 65, baseType: !179, size: 16, offset: 144)
!372 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !364, file: !330, line: 66, baseType: !238, size: 512, offset: 160)
!373 = !DIDerivedType(tag: DW_TAG_member, name: "saved", scope: !364, file: !330, line: 67, baseType: !171, size: 32, offset: 672)
!374 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !364, file: !330, line: 69, baseType: !375, size: 256, offset: 704)
!375 = !DIDerivedType(tag: DW_TAG_typedef, name: "IDPropertyData", file: !330, line: 60, baseType: !376)
!376 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "IDPropertyData", file: !330, line: 48, size: 256, elements: !377)
!377 = !{!378, !379, !386, !387}
!378 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !376, file: !330, line: 49, baseType: !167, size: 64)
!379 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !376, file: !330, line: 58, baseType: !380, size: 128, offset: 64)
!380 = !DIDerivedType(tag: DW_TAG_typedef, name: "ListBase", file: !381, line: 71, baseType: !382)
!381 = !DIFile(filename: "blender/source/blender/makesdna/DNA_listBase.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!382 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ListBase", file: !381, line: 69, size: 128, elements: !383)
!383 = !{!384, !385}
!384 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !382, file: !381, line: 70, baseType: !167, size: 64)
!385 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !382, file: !381, line: 70, baseType: !167, size: 64, offset: 64)
!386 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !376, file: !330, line: 59, baseType: !171, size: 32, offset: 192)
!387 = !DIDerivedType(tag: DW_TAG_member, name: "val2", scope: !376, file: !330, line: 59, baseType: !171, size: 32, offset: 224)
!388 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !364, file: !330, line: 70, baseType: !171, size: 32, offset: 960)
!389 = !DIDerivedType(tag: DW_TAG_member, name: "totallen", scope: !364, file: !330, line: 74, baseType: !171, size: 32, offset: 992)
!390 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !325, file: !326, line: 95, baseType: !391, size: 64, offset: 960)
!391 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !392, size: 64)
!392 = !DICompositeType(tag: DW_TAG_structure_type, name: "AnimData", file: !326, line: 48, flags: DIFlagFwdDecl)
!393 = !DIDerivedType(tag: DW_TAG_member, name: "material_type", scope: !325, file: !326, line: 97, baseType: !179, size: 16, offset: 1024)
!394 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !325, file: !326, line: 97, baseType: !179, size: 16, offset: 1040)
!395 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !325, file: !326, line: 99, baseType: !176, size: 32, offset: 1056)
!396 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !325, file: !326, line: 99, baseType: !176, size: 32, offset: 1088)
!397 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !325, file: !326, line: 99, baseType: !176, size: 32, offset: 1120)
!398 = !DIDerivedType(tag: DW_TAG_member, name: "specr", scope: !325, file: !326, line: 100, baseType: !176, size: 32, offset: 1152)
!399 = !DIDerivedType(tag: DW_TAG_member, name: "specg", scope: !325, file: !326, line: 100, baseType: !176, size: 32, offset: 1184)
!400 = !DIDerivedType(tag: DW_TAG_member, name: "specb", scope: !325, file: !326, line: 100, baseType: !176, size: 32, offset: 1216)
!401 = !DIDerivedType(tag: DW_TAG_member, name: "mirr", scope: !325, file: !326, line: 101, baseType: !176, size: 32, offset: 1248)
!402 = !DIDerivedType(tag: DW_TAG_member, name: "mirg", scope: !325, file: !326, line: 101, baseType: !176, size: 32, offset: 1280)
!403 = !DIDerivedType(tag: DW_TAG_member, name: "mirb", scope: !325, file: !326, line: 101, baseType: !176, size: 32, offset: 1312)
!404 = !DIDerivedType(tag: DW_TAG_member, name: "ambr", scope: !325, file: !326, line: 102, baseType: !176, size: 32, offset: 1344)
!405 = !DIDerivedType(tag: DW_TAG_member, name: "ambb", scope: !325, file: !326, line: 102, baseType: !176, size: 32, offset: 1376)
!406 = !DIDerivedType(tag: DW_TAG_member, name: "ambg", scope: !325, file: !326, line: 102, baseType: !176, size: 32, offset: 1408)
!407 = !DIDerivedType(tag: DW_TAG_member, name: "amb", scope: !325, file: !326, line: 103, baseType: !176, size: 32, offset: 1440)
!408 = !DIDerivedType(tag: DW_TAG_member, name: "emit", scope: !325, file: !326, line: 103, baseType: !176, size: 32, offset: 1472)
!409 = !DIDerivedType(tag: DW_TAG_member, name: "ang", scope: !325, file: !326, line: 103, baseType: !176, size: 32, offset: 1504)
!410 = !DIDerivedType(tag: DW_TAG_member, name: "spectra", scope: !325, file: !326, line: 103, baseType: !176, size: 32, offset: 1536)
!411 = !DIDerivedType(tag: DW_TAG_member, name: "ray_mirror", scope: !325, file: !326, line: 103, baseType: !176, size: 32, offset: 1568)
!412 = !DIDerivedType(tag: DW_TAG_member, name: "alpha", scope: !325, file: !326, line: 104, baseType: !176, size: 32, offset: 1600)
!413 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !325, file: !326, line: 104, baseType: !176, size: 32, offset: 1632)
!414 = !DIDerivedType(tag: DW_TAG_member, name: "spec", scope: !325, file: !326, line: 104, baseType: !176, size: 32, offset: 1664)
!415 = !DIDerivedType(tag: DW_TAG_member, name: "zoffs", scope: !325, file: !326, line: 104, baseType: !176, size: 32, offset: 1696)
!416 = !DIDerivedType(tag: DW_TAG_member, name: "add", scope: !325, file: !326, line: 104, baseType: !176, size: 32, offset: 1728)
!417 = !DIDerivedType(tag: DW_TAG_member, name: "translucency", scope: !325, file: !326, line: 105, baseType: !176, size: 32, offset: 1760)
!418 = !DIDerivedType(tag: DW_TAG_member, name: "vol", scope: !325, file: !326, line: 108, baseType: !419, size: 704, offset: 1792)
!419 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VolumeSettings", file: !326, line: 53, size: 704, elements: !420)
!420 = !{!421, !422, !423, !424, !425, !429, !430, !431, !432, !433, !434, !435, !436, !437, !438, !439, !440, !441}
!421 = !DIDerivedType(tag: DW_TAG_member, name: "density", scope: !419, file: !326, line: 54, baseType: !176, size: 32)
!422 = !DIDerivedType(tag: DW_TAG_member, name: "emission", scope: !419, file: !326, line: 55, baseType: !176, size: 32, offset: 32)
!423 = !DIDerivedType(tag: DW_TAG_member, name: "scattering", scope: !419, file: !326, line: 56, baseType: !176, size: 32, offset: 64)
!424 = !DIDerivedType(tag: DW_TAG_member, name: "reflection", scope: !419, file: !326, line: 57, baseType: !176, size: 32, offset: 96)
!425 = !DIDerivedType(tag: DW_TAG_member, name: "emission_col", scope: !419, file: !326, line: 59, baseType: !426, size: 96, offset: 128)
!426 = !DICompositeType(tag: DW_TAG_array_type, baseType: !176, size: 96, elements: !427)
!427 = !{!428}
!428 = !DISubrange(count: 3)
!429 = !DIDerivedType(tag: DW_TAG_member, name: "transmission_col", scope: !419, file: !326, line: 60, baseType: !426, size: 96, offset: 224)
!430 = !DIDerivedType(tag: DW_TAG_member, name: "reflection_col", scope: !419, file: !326, line: 61, baseType: !426, size: 96, offset: 320)
!431 = !DIDerivedType(tag: DW_TAG_member, name: "density_scale", scope: !419, file: !326, line: 63, baseType: !176, size: 32, offset: 416)
!432 = !DIDerivedType(tag: DW_TAG_member, name: "depth_cutoff", scope: !419, file: !326, line: 64, baseType: !176, size: 32, offset: 448)
!433 = !DIDerivedType(tag: DW_TAG_member, name: "asymmetry", scope: !419, file: !326, line: 65, baseType: !176, size: 32, offset: 480)
!434 = !DIDerivedType(tag: DW_TAG_member, name: "stepsize_type", scope: !419, file: !326, line: 67, baseType: !179, size: 16, offset: 512)
!435 = !DIDerivedType(tag: DW_TAG_member, name: "shadeflag", scope: !419, file: !326, line: 68, baseType: !179, size: 16, offset: 528)
!436 = !DIDerivedType(tag: DW_TAG_member, name: "shade_type", scope: !419, file: !326, line: 69, baseType: !179, size: 16, offset: 544)
!437 = !DIDerivedType(tag: DW_TAG_member, name: "precache_resolution", scope: !419, file: !326, line: 70, baseType: !179, size: 16, offset: 560)
!438 = !DIDerivedType(tag: DW_TAG_member, name: "stepsize", scope: !419, file: !326, line: 72, baseType: !176, size: 32, offset: 576)
!439 = !DIDerivedType(tag: DW_TAG_member, name: "ms_diff", scope: !419, file: !326, line: 73, baseType: !176, size: 32, offset: 608)
!440 = !DIDerivedType(tag: DW_TAG_member, name: "ms_intensity", scope: !419, file: !326, line: 74, baseType: !176, size: 32, offset: 640)
!441 = !DIDerivedType(tag: DW_TAG_member, name: "ms_spread", scope: !419, file: !326, line: 75, baseType: !176, size: 32, offset: 672)
!442 = !DIDerivedType(tag: DW_TAG_member, name: "game", scope: !325, file: !326, line: 109, baseType: !443, size: 128, offset: 2496)
!443 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameSettings", file: !326, line: 79, size: 128, elements: !444)
!444 = !{!445, !446, !447, !448}
!445 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !443, file: !326, line: 80, baseType: !171, size: 32)
!446 = !DIDerivedType(tag: DW_TAG_member, name: "alpha_blend", scope: !443, file: !326, line: 81, baseType: !171, size: 32, offset: 32)
!447 = !DIDerivedType(tag: DW_TAG_member, name: "face_orientation", scope: !443, file: !326, line: 82, baseType: !171, size: 32, offset: 64)
!448 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !443, file: !326, line: 83, baseType: !171, size: 32, offset: 96)
!449 = !DIDerivedType(tag: DW_TAG_member, name: "fresnel_mir", scope: !325, file: !326, line: 111, baseType: !176, size: 32, offset: 2624)
!450 = !DIDerivedType(tag: DW_TAG_member, name: "fresnel_mir_i", scope: !325, file: !326, line: 111, baseType: !176, size: 32, offset: 2656)
!451 = !DIDerivedType(tag: DW_TAG_member, name: "fresnel_tra", scope: !325, file: !326, line: 112, baseType: !176, size: 32, offset: 2688)
!452 = !DIDerivedType(tag: DW_TAG_member, name: "fresnel_tra_i", scope: !325, file: !326, line: 112, baseType: !176, size: 32, offset: 2720)
!453 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !325, file: !326, line: 113, baseType: !176, size: 32, offset: 2752)
!454 = !DIDerivedType(tag: DW_TAG_member, name: "tx_limit", scope: !325, file: !326, line: 114, baseType: !176, size: 32, offset: 2784)
!455 = !DIDerivedType(tag: DW_TAG_member, name: "tx_falloff", scope: !325, file: !326, line: 114, baseType: !176, size: 32, offset: 2816)
!456 = !DIDerivedType(tag: DW_TAG_member, name: "ray_depth", scope: !325, file: !326, line: 115, baseType: !179, size: 16, offset: 2848)
!457 = !DIDerivedType(tag: DW_TAG_member, name: "ray_depth_tra", scope: !325, file: !326, line: 115, baseType: !179, size: 16, offset: 2864)
!458 = !DIDerivedType(tag: DW_TAG_member, name: "har", scope: !325, file: !326, line: 116, baseType: !179, size: 16, offset: 2880)
!459 = !DIDerivedType(tag: DW_TAG_member, name: "seed1", scope: !325, file: !326, line: 117, baseType: !169, size: 8, offset: 2896)
!460 = !DIDerivedType(tag: DW_TAG_member, name: "seed2", scope: !325, file: !326, line: 117, baseType: !169, size: 8, offset: 2904)
!461 = !DIDerivedType(tag: DW_TAG_member, name: "gloss_mir", scope: !325, file: !326, line: 119, baseType: !176, size: 32, offset: 2912)
!462 = !DIDerivedType(tag: DW_TAG_member, name: "gloss_tra", scope: !325, file: !326, line: 119, baseType: !176, size: 32, offset: 2944)
!463 = !DIDerivedType(tag: DW_TAG_member, name: "samp_gloss_mir", scope: !325, file: !326, line: 120, baseType: !179, size: 16, offset: 2976)
!464 = !DIDerivedType(tag: DW_TAG_member, name: "samp_gloss_tra", scope: !325, file: !326, line: 120, baseType: !179, size: 16, offset: 2992)
!465 = !DIDerivedType(tag: DW_TAG_member, name: "adapt_thresh_mir", scope: !325, file: !326, line: 121, baseType: !176, size: 32, offset: 3008)
!466 = !DIDerivedType(tag: DW_TAG_member, name: "adapt_thresh_tra", scope: !325, file: !326, line: 121, baseType: !176, size: 32, offset: 3040)
!467 = !DIDerivedType(tag: DW_TAG_member, name: "aniso_gloss_mir", scope: !325, file: !326, line: 122, baseType: !176, size: 32, offset: 3072)
!468 = !DIDerivedType(tag: DW_TAG_member, name: "dist_mir", scope: !325, file: !326, line: 123, baseType: !176, size: 32, offset: 3104)
!469 = !DIDerivedType(tag: DW_TAG_member, name: "fadeto_mir", scope: !325, file: !326, line: 124, baseType: !179, size: 16, offset: 3136)
!470 = !DIDerivedType(tag: DW_TAG_member, name: "shade_flag", scope: !325, file: !326, line: 125, baseType: !179, size: 16, offset: 3152)
!471 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !325, file: !326, line: 127, baseType: !171, size: 32, offset: 3168)
!472 = !DIDerivedType(tag: DW_TAG_member, name: "mode_l", scope: !325, file: !326, line: 127, baseType: !171, size: 32, offset: 3200)
!473 = !DIDerivedType(tag: DW_TAG_member, name: "mode2", scope: !325, file: !326, line: 128, baseType: !171, size: 32, offset: 3232)
!474 = !DIDerivedType(tag: DW_TAG_member, name: "mode2_l", scope: !325, file: !326, line: 128, baseType: !171, size: 32, offset: 3264)
!475 = !DIDerivedType(tag: DW_TAG_member, name: "flarec", scope: !325, file: !326, line: 129, baseType: !179, size: 16, offset: 3296)
!476 = !DIDerivedType(tag: DW_TAG_member, name: "starc", scope: !325, file: !326, line: 129, baseType: !179, size: 16, offset: 3312)
!477 = !DIDerivedType(tag: DW_TAG_member, name: "linec", scope: !325, file: !326, line: 129, baseType: !179, size: 16, offset: 3328)
!478 = !DIDerivedType(tag: DW_TAG_member, name: "ringc", scope: !325, file: !326, line: 129, baseType: !179, size: 16, offset: 3344)
!479 = !DIDerivedType(tag: DW_TAG_member, name: "hasize", scope: !325, file: !326, line: 130, baseType: !176, size: 32, offset: 3360)
!480 = !DIDerivedType(tag: DW_TAG_member, name: "flaresize", scope: !325, file: !326, line: 130, baseType: !176, size: 32, offset: 3392)
!481 = !DIDerivedType(tag: DW_TAG_member, name: "subsize", scope: !325, file: !326, line: 130, baseType: !176, size: 32, offset: 3424)
!482 = !DIDerivedType(tag: DW_TAG_member, name: "flareboost", scope: !325, file: !326, line: 130, baseType: !176, size: 32, offset: 3456)
!483 = !DIDerivedType(tag: DW_TAG_member, name: "strand_sta", scope: !325, file: !326, line: 131, baseType: !176, size: 32, offset: 3488)
!484 = !DIDerivedType(tag: DW_TAG_member, name: "strand_end", scope: !325, file: !326, line: 131, baseType: !176, size: 32, offset: 3520)
!485 = !DIDerivedType(tag: DW_TAG_member, name: "strand_ease", scope: !325, file: !326, line: 131, baseType: !176, size: 32, offset: 3552)
!486 = !DIDerivedType(tag: DW_TAG_member, name: "strand_surfnor", scope: !325, file: !326, line: 131, baseType: !176, size: 32, offset: 3584)
!487 = !DIDerivedType(tag: DW_TAG_member, name: "strand_min", scope: !325, file: !326, line: 132, baseType: !176, size: 32, offset: 3616)
!488 = !DIDerivedType(tag: DW_TAG_member, name: "strand_widthfade", scope: !325, file: !326, line: 132, baseType: !176, size: 32, offset: 3648)
!489 = !DIDerivedType(tag: DW_TAG_member, name: "strand_uvname", scope: !325, file: !326, line: 133, baseType: !238, size: 512, offset: 3680)
!490 = !DIDerivedType(tag: DW_TAG_member, name: "sbias", scope: !325, file: !326, line: 135, baseType: !176, size: 32, offset: 4192)
!491 = !DIDerivedType(tag: DW_TAG_member, name: "lbias", scope: !325, file: !326, line: 136, baseType: !176, size: 32, offset: 4224)
!492 = !DIDerivedType(tag: DW_TAG_member, name: "shad_alpha", scope: !325, file: !326, line: 137, baseType: !176, size: 32, offset: 4256)
!493 = !DIDerivedType(tag: DW_TAG_member, name: "septex", scope: !325, file: !326, line: 138, baseType: !171, size: 32, offset: 4288)
!494 = !DIDerivedType(tag: DW_TAG_member, name: "rgbsel", scope: !325, file: !326, line: 141, baseType: !169, size: 8, offset: 4320)
!495 = !DIDerivedType(tag: DW_TAG_member, name: "texact", scope: !325, file: !326, line: 141, baseType: !169, size: 8, offset: 4328)
!496 = !DIDerivedType(tag: DW_TAG_member, name: "pr_type", scope: !325, file: !326, line: 141, baseType: !169, size: 8, offset: 4336)
!497 = !DIDerivedType(tag: DW_TAG_member, name: "use_nodes", scope: !325, file: !326, line: 141, baseType: !169, size: 8, offset: 4344)
!498 = !DIDerivedType(tag: DW_TAG_member, name: "pr_lamp", scope: !325, file: !326, line: 142, baseType: !179, size: 16, offset: 4352)
!499 = !DIDerivedType(tag: DW_TAG_member, name: "pr_texture", scope: !325, file: !326, line: 142, baseType: !179, size: 16, offset: 4368)
!500 = !DIDerivedType(tag: DW_TAG_member, name: "ml_flag", scope: !325, file: !326, line: 142, baseType: !179, size: 16, offset: 4384)
!501 = !DIDerivedType(tag: DW_TAG_member, name: "mapflag", scope: !325, file: !326, line: 145, baseType: !169, size: 8, offset: 4400)
!502 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !325, file: !326, line: 145, baseType: !169, size: 8, offset: 4408)
!503 = !DIDerivedType(tag: DW_TAG_member, name: "diff_shader", scope: !325, file: !326, line: 148, baseType: !179, size: 16, offset: 4416)
!504 = !DIDerivedType(tag: DW_TAG_member, name: "spec_shader", scope: !325, file: !326, line: 148, baseType: !179, size: 16, offset: 4432)
!505 = !DIDerivedType(tag: DW_TAG_member, name: "roughness", scope: !325, file: !326, line: 149, baseType: !176, size: 32, offset: 4448)
!506 = !DIDerivedType(tag: DW_TAG_member, name: "refrac", scope: !325, file: !326, line: 149, baseType: !176, size: 32, offset: 4480)
!507 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !325, file: !326, line: 152, baseType: !508, size: 128, offset: 4512)
!508 = !DICompositeType(tag: DW_TAG_array_type, baseType: !176, size: 128, elements: !509)
!509 = !{!510}
!510 = !DISubrange(count: 4)
!511 = !DIDerivedType(tag: DW_TAG_member, name: "rms", scope: !325, file: !326, line: 153, baseType: !176, size: 32, offset: 4640)
!512 = !DIDerivedType(tag: DW_TAG_member, name: "darkness", scope: !325, file: !326, line: 154, baseType: !176, size: 32, offset: 4672)
!513 = !DIDerivedType(tag: DW_TAG_member, name: "texco", scope: !325, file: !326, line: 157, baseType: !179, size: 16, offset: 4704)
!514 = !DIDerivedType(tag: DW_TAG_member, name: "mapto", scope: !325, file: !326, line: 157, baseType: !179, size: 16, offset: 4720)
!515 = !DIDerivedType(tag: DW_TAG_member, name: "ramp_col", scope: !325, file: !326, line: 160, baseType: !516, size: 64, offset: 4736)
!516 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !517, size: 64)
!517 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorBand", file: !518, line: 113, size: 6208, elements: !519)
!518 = !DIFile(filename: "blender/source/blender/makesdna/DNA_texture_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!519 = !{!520, !521, !522, !523, !524, !525, !529}
!520 = !DIDerivedType(tag: DW_TAG_member, name: "tot", scope: !517, file: !518, line: 114, baseType: !179, size: 16)
!521 = !DIDerivedType(tag: DW_TAG_member, name: "cur", scope: !517, file: !518, line: 114, baseType: !179, size: 16, offset: 16)
!522 = !DIDerivedType(tag: DW_TAG_member, name: "ipotype", scope: !517, file: !518, line: 115, baseType: !169, size: 8, offset: 32)
!523 = !DIDerivedType(tag: DW_TAG_member, name: "ipotype_hue", scope: !517, file: !518, line: 115, baseType: !169, size: 8, offset: 40)
!524 = !DIDerivedType(tag: DW_TAG_member, name: "color_mode", scope: !517, file: !518, line: 116, baseType: !169, size: 8, offset: 48)
!525 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !517, file: !518, line: 117, baseType: !526, size: 8, offset: 56)
!526 = !DICompositeType(tag: DW_TAG_array_type, baseType: !169, size: 8, elements: !527)
!527 = !{!528}
!528 = !DISubrange(count: 1)
!529 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !517, file: !518, line: 119, baseType: !530, size: 6144, offset: 64)
!530 = !DICompositeType(tag: DW_TAG_array_type, baseType: !531, size: 6144, elements: !540)
!531 = !DIDerivedType(tag: DW_TAG_typedef, name: "CBData", file: !518, line: 109, baseType: !532)
!532 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CBData", file: !518, line: 106, size: 192, elements: !533)
!533 = !{!534, !535, !536, !537, !538, !539}
!534 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !532, file: !518, line: 107, baseType: !176, size: 32)
!535 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !532, file: !518, line: 107, baseType: !176, size: 32, offset: 32)
!536 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !532, file: !518, line: 107, baseType: !176, size: 32, offset: 64)
!537 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !532, file: !518, line: 107, baseType: !176, size: 32, offset: 96)
!538 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !532, file: !518, line: 107, baseType: !176, size: 32, offset: 128)
!539 = !DIDerivedType(tag: DW_TAG_member, name: "cur", scope: !532, file: !518, line: 108, baseType: !171, size: 32, offset: 160)
!540 = !{!541}
!541 = !DISubrange(count: 32)
!542 = !DIDerivedType(tag: DW_TAG_member, name: "ramp_spec", scope: !325, file: !326, line: 161, baseType: !516, size: 64, offset: 4800)
!543 = !DIDerivedType(tag: DW_TAG_member, name: "rampin_col", scope: !325, file: !326, line: 162, baseType: !169, size: 8, offset: 4864)
!544 = !DIDerivedType(tag: DW_TAG_member, name: "rampin_spec", scope: !325, file: !326, line: 162, baseType: !169, size: 8, offset: 4872)
!545 = !DIDerivedType(tag: DW_TAG_member, name: "rampblend_col", scope: !325, file: !326, line: 163, baseType: !169, size: 8, offset: 4880)
!546 = !DIDerivedType(tag: DW_TAG_member, name: "rampblend_spec", scope: !325, file: !326, line: 163, baseType: !169, size: 8, offset: 4888)
!547 = !DIDerivedType(tag: DW_TAG_member, name: "ramp_show", scope: !325, file: !326, line: 164, baseType: !179, size: 16, offset: 4896)
!548 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !325, file: !326, line: 164, baseType: !179, size: 16, offset: 4912)
!549 = !DIDerivedType(tag: DW_TAG_member, name: "rampfac_col", scope: !325, file: !326, line: 165, baseType: !176, size: 32, offset: 4928)
!550 = !DIDerivedType(tag: DW_TAG_member, name: "rampfac_spec", scope: !325, file: !326, line: 165, baseType: !176, size: 32, offset: 4960)
!551 = !DIDerivedType(tag: DW_TAG_member, name: "mtex", scope: !325, file: !326, line: 167, baseType: !552, size: 1152, offset: 4992)
!552 = !DICompositeType(tag: DW_TAG_array_type, baseType: !553, size: 1152, elements: !926)
!553 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !554, size: 64)
!554 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MTex", file: !518, line: 57, size: 2496, elements: !555)
!555 = !{!556, !557, !558, !559, !560, !563, !867, !868, !869, !870, !871, !872, !873, !874, !875, !876, !877, !878, !879, !880, !881, !882, !883, !884, !885, !886, !887, !888, !889, !890, !891, !892, !893, !894, !895, !896, !897, !898, !899, !900, !901, !902, !903, !904, !905, !906, !907, !908, !909, !910, !911, !912, !913, !914, !915, !916, !917, !918, !919, !920, !921, !922, !923, !924, !925}
!556 = !DIDerivedType(tag: DW_TAG_member, name: "texco", scope: !554, file: !518, line: 59, baseType: !179, size: 16)
!557 = !DIDerivedType(tag: DW_TAG_member, name: "mapto", scope: !554, file: !518, line: 59, baseType: !179, size: 16, offset: 16)
!558 = !DIDerivedType(tag: DW_TAG_member, name: "maptoneg", scope: !554, file: !518, line: 59, baseType: !179, size: 16, offset: 32)
!559 = !DIDerivedType(tag: DW_TAG_member, name: "blendtype", scope: !554, file: !518, line: 59, baseType: !179, size: 16, offset: 48)
!560 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !554, file: !518, line: 60, baseType: !561, size: 64, offset: 64)
!561 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !562, size: 64)
!562 = !DICompositeType(tag: DW_TAG_structure_type, name: "Object", file: !6, line: 88, flags: DIFlagFwdDecl)
!563 = !DIDerivedType(tag: DW_TAG_member, name: "tex", scope: !554, file: !518, line: 61, baseType: !564, size: 64, offset: 128)
!564 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !565, size: 64)
!565 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Tex", file: !518, line: 202, size: 3328, elements: !566)
!566 = !{!567, !568, !569, !570, !571, !572, !573, !574, !575, !576, !577, !578, !579, !580, !581, !582, !583, !584, !585, !586, !587, !588, !589, !590, !591, !592, !593, !594, !595, !596, !597, !598, !599, !600, !601, !602, !603, !604, !605, !606, !607, !608, !609, !610, !611, !612, !613, !614, !615, !616, !617, !618, !638, !641, !644, !727, !728, !758, !759, !836, !857, !865, !866}
!567 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !565, file: !518, line: 203, baseType: !329, size: 960)
!568 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !565, file: !518, line: 204, baseType: !391, size: 64, offset: 960)
!569 = !DIDerivedType(tag: DW_TAG_member, name: "noisesize", scope: !565, file: !518, line: 206, baseType: !176, size: 32, offset: 1024)
!570 = !DIDerivedType(tag: DW_TAG_member, name: "turbul", scope: !565, file: !518, line: 206, baseType: !176, size: 32, offset: 1056)
!571 = !DIDerivedType(tag: DW_TAG_member, name: "bright", scope: !565, file: !518, line: 207, baseType: !176, size: 32, offset: 1088)
!572 = !DIDerivedType(tag: DW_TAG_member, name: "contrast", scope: !565, file: !518, line: 207, baseType: !176, size: 32, offset: 1120)
!573 = !DIDerivedType(tag: DW_TAG_member, name: "saturation", scope: !565, file: !518, line: 207, baseType: !176, size: 32, offset: 1152)
!574 = !DIDerivedType(tag: DW_TAG_member, name: "rfac", scope: !565, file: !518, line: 207, baseType: !176, size: 32, offset: 1184)
!575 = !DIDerivedType(tag: DW_TAG_member, name: "gfac", scope: !565, file: !518, line: 207, baseType: !176, size: 32, offset: 1216)
!576 = !DIDerivedType(tag: DW_TAG_member, name: "bfac", scope: !565, file: !518, line: 207, baseType: !176, size: 32, offset: 1248)
!577 = !DIDerivedType(tag: DW_TAG_member, name: "filtersize", scope: !565, file: !518, line: 208, baseType: !176, size: 32, offset: 1280)
!578 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !565, file: !518, line: 208, baseType: !176, size: 32, offset: 1312)
!579 = !DIDerivedType(tag: DW_TAG_member, name: "mg_H", scope: !565, file: !518, line: 211, baseType: !176, size: 32, offset: 1344)
!580 = !DIDerivedType(tag: DW_TAG_member, name: "mg_lacunarity", scope: !565, file: !518, line: 211, baseType: !176, size: 32, offset: 1376)
!581 = !DIDerivedType(tag: DW_TAG_member, name: "mg_octaves", scope: !565, file: !518, line: 211, baseType: !176, size: 32, offset: 1408)
!582 = !DIDerivedType(tag: DW_TAG_member, name: "mg_offset", scope: !565, file: !518, line: 211, baseType: !176, size: 32, offset: 1440)
!583 = !DIDerivedType(tag: DW_TAG_member, name: "mg_gain", scope: !565, file: !518, line: 211, baseType: !176, size: 32, offset: 1472)
!584 = !DIDerivedType(tag: DW_TAG_member, name: "dist_amount", scope: !565, file: !518, line: 214, baseType: !176, size: 32, offset: 1504)
!585 = !DIDerivedType(tag: DW_TAG_member, name: "ns_outscale", scope: !565, file: !518, line: 214, baseType: !176, size: 32, offset: 1536)
!586 = !DIDerivedType(tag: DW_TAG_member, name: "vn_w1", scope: !565, file: !518, line: 217, baseType: !176, size: 32, offset: 1568)
!587 = !DIDerivedType(tag: DW_TAG_member, name: "vn_w2", scope: !565, file: !518, line: 218, baseType: !176, size: 32, offset: 1600)
!588 = !DIDerivedType(tag: DW_TAG_member, name: "vn_w3", scope: !565, file: !518, line: 219, baseType: !176, size: 32, offset: 1632)
!589 = !DIDerivedType(tag: DW_TAG_member, name: "vn_w4", scope: !565, file: !518, line: 220, baseType: !176, size: 32, offset: 1664)
!590 = !DIDerivedType(tag: DW_TAG_member, name: "vn_mexp", scope: !565, file: !518, line: 221, baseType: !176, size: 32, offset: 1696)
!591 = !DIDerivedType(tag: DW_TAG_member, name: "vn_distm", scope: !565, file: !518, line: 222, baseType: !179, size: 16, offset: 1728)
!592 = !DIDerivedType(tag: DW_TAG_member, name: "vn_coltype", scope: !565, file: !518, line: 222, baseType: !179, size: 16, offset: 1744)
!593 = !DIDerivedType(tag: DW_TAG_member, name: "noisedepth", scope: !565, file: !518, line: 224, baseType: !179, size: 16, offset: 1760)
!594 = !DIDerivedType(tag: DW_TAG_member, name: "noisetype", scope: !565, file: !518, line: 224, baseType: !179, size: 16, offset: 1776)
!595 = !DIDerivedType(tag: DW_TAG_member, name: "noisebasis", scope: !565, file: !518, line: 227, baseType: !179, size: 16, offset: 1792)
!596 = !DIDerivedType(tag: DW_TAG_member, name: "noisebasis2", scope: !565, file: !518, line: 227, baseType: !179, size: 16, offset: 1808)
!597 = !DIDerivedType(tag: DW_TAG_member, name: "imaflag", scope: !565, file: !518, line: 229, baseType: !179, size: 16, offset: 1824)
!598 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !565, file: !518, line: 229, baseType: !179, size: 16, offset: 1840)
!599 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !565, file: !518, line: 230, baseType: !179, size: 16, offset: 1856)
!600 = !DIDerivedType(tag: DW_TAG_member, name: "stype", scope: !565, file: !518, line: 230, baseType: !179, size: 16, offset: 1872)
!601 = !DIDerivedType(tag: DW_TAG_member, name: "cropxmin", scope: !565, file: !518, line: 232, baseType: !176, size: 32, offset: 1888)
!602 = !DIDerivedType(tag: DW_TAG_member, name: "cropymin", scope: !565, file: !518, line: 232, baseType: !176, size: 32, offset: 1920)
!603 = !DIDerivedType(tag: DW_TAG_member, name: "cropxmax", scope: !565, file: !518, line: 232, baseType: !176, size: 32, offset: 1952)
!604 = !DIDerivedType(tag: DW_TAG_member, name: "cropymax", scope: !565, file: !518, line: 232, baseType: !176, size: 32, offset: 1984)
!605 = !DIDerivedType(tag: DW_TAG_member, name: "texfilter", scope: !565, file: !518, line: 233, baseType: !171, size: 32, offset: 2016)
!606 = !DIDerivedType(tag: DW_TAG_member, name: "afmax", scope: !565, file: !518, line: 234, baseType: !171, size: 32, offset: 2048)
!607 = !DIDerivedType(tag: DW_TAG_member, name: "xrepeat", scope: !565, file: !518, line: 235, baseType: !179, size: 16, offset: 2080)
!608 = !DIDerivedType(tag: DW_TAG_member, name: "yrepeat", scope: !565, file: !518, line: 235, baseType: !179, size: 16, offset: 2096)
!609 = !DIDerivedType(tag: DW_TAG_member, name: "extend", scope: !565, file: !518, line: 236, baseType: !179, size: 16, offset: 2112)
!610 = !DIDerivedType(tag: DW_TAG_member, name: "fie_ima", scope: !565, file: !518, line: 239, baseType: !179, size: 16, offset: 2128)
!611 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !565, file: !518, line: 240, baseType: !171, size: 32, offset: 2144)
!612 = !DIDerivedType(tag: DW_TAG_member, name: "frames", scope: !565, file: !518, line: 241, baseType: !171, size: 32, offset: 2176)
!613 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !565, file: !518, line: 241, baseType: !171, size: 32, offset: 2208)
!614 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !565, file: !518, line: 241, baseType: !171, size: 32, offset: 2240)
!615 = !DIDerivedType(tag: DW_TAG_member, name: "checkerdist", scope: !565, file: !518, line: 243, baseType: !176, size: 32, offset: 2272)
!616 = !DIDerivedType(tag: DW_TAG_member, name: "nabla", scope: !565, file: !518, line: 243, baseType: !176, size: 32, offset: 2304)
!617 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !565, file: !518, line: 244, baseType: !176, size: 32, offset: 2336)
!618 = !DIDerivedType(tag: DW_TAG_member, name: "iuser", scope: !565, file: !518, line: 246, baseType: !619, size: 320, offset: 2368)
!619 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ImageUser", file: !620, line: 50, size: 320, elements: !621)
!620 = !DIFile(filename: "blender/source/blender/makesdna/DNA_image_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!621 = !{!622, !625, !626, !627, !628, !629, !630, !631, !632, !633, !634, !635, !636, !637}
!622 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !619, file: !620, line: 51, baseType: !623, size: 64)
!623 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !624, size: 64)
!624 = !DICompositeType(tag: DW_TAG_structure_type, name: "Scene", file: !6, line: 89, flags: DIFlagFwdDecl)
!625 = !DIDerivedType(tag: DW_TAG_member, name: "framenr", scope: !619, file: !620, line: 53, baseType: !171, size: 32, offset: 64)
!626 = !DIDerivedType(tag: DW_TAG_member, name: "frames", scope: !619, file: !620, line: 54, baseType: !171, size: 32, offset: 96)
!627 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !619, file: !620, line: 55, baseType: !171, size: 32, offset: 128)
!628 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !619, file: !620, line: 55, baseType: !171, size: 32, offset: 160)
!629 = !DIDerivedType(tag: DW_TAG_member, name: "fie_ima", scope: !619, file: !620, line: 56, baseType: !169, size: 8, offset: 192)
!630 = !DIDerivedType(tag: DW_TAG_member, name: "cycl", scope: !619, file: !620, line: 56, baseType: !169, size: 8, offset: 200)
!631 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !619, file: !620, line: 57, baseType: !169, size: 8, offset: 208)
!632 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !619, file: !620, line: 57, baseType: !169, size: 8, offset: 216)
!633 = !DIDerivedType(tag: DW_TAG_member, name: "multi_index", scope: !619, file: !620, line: 59, baseType: !179, size: 16, offset: 224)
!634 = !DIDerivedType(tag: DW_TAG_member, name: "layer", scope: !619, file: !620, line: 59, baseType: !179, size: 16, offset: 240)
!635 = !DIDerivedType(tag: DW_TAG_member, name: "pass", scope: !619, file: !620, line: 59, baseType: !179, size: 16, offset: 256)
!636 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !619, file: !620, line: 61, baseType: !179, size: 16, offset: 272)
!637 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !619, file: !620, line: 63, baseType: !171, size: 32, offset: 288)
!638 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !565, file: !518, line: 248, baseType: !639, size: 64, offset: 2688)
!639 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !640, size: 64)
!640 = !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeTree", file: !326, line: 47, flags: DIFlagFwdDecl)
!641 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !565, file: !518, line: 249, baseType: !642, size: 64, offset: 2752)
!642 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !643, size: 64)
!643 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ipo", file: !326, line: 49, flags: DIFlagFwdDecl)
!644 = !DIDerivedType(tag: DW_TAG_member, name: "ima", scope: !565, file: !518, line: 250, baseType: !645, size: 64, offset: 2816)
!645 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !646, size: 64)
!646 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Image", file: !620, line: 77, size: 15424, elements: !647)
!647 = !{!648, !649, !650, !653, !656, !659, !662, !666, !667, !668, !669, !670, !671, !672, !673, !674, !675, !676, !677, !678, !679, !680, !681, !682, !698, !699, !700, !701, !702, !703, !704, !705, !706, !707, !708, !709, !710, !716, !717, !721}
!648 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !646, file: !620, line: 78, baseType: !329, size: 960)
!649 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !646, file: !620, line: 80, baseType: !258, size: 8192, offset: 960)
!650 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !646, file: !620, line: 82, baseType: !651, size: 64, offset: 9152)
!651 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !652, size: 64)
!652 = !DICompositeType(tag: DW_TAG_structure_type, name: "MovieCache", file: !620, line: 43, flags: DIFlagFwdDecl)
!653 = !DIDerivedType(tag: DW_TAG_member, name: "gputexture", scope: !646, file: !620, line: 83, baseType: !654, size: 64, offset: 9216)
!654 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !655, size: 64)
!655 = !DICompositeType(tag: DW_TAG_structure_type, name: "GPUTexture", file: !330, line: 46, flags: DIFlagFwdDecl)
!656 = !DIDerivedType(tag: DW_TAG_member, name: "anim", scope: !646, file: !620, line: 86, baseType: !657, size: 64, offset: 9280)
!657 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !658, size: 64)
!658 = !DICompositeType(tag: DW_TAG_structure_type, name: "anim", file: !620, line: 41, flags: DIFlagFwdDecl)
!659 = !DIDerivedType(tag: DW_TAG_member, name: "rr", scope: !646, file: !620, line: 87, baseType: !660, size: 64, offset: 9344)
!660 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !661, size: 64)
!661 = !DICompositeType(tag: DW_TAG_structure_type, name: "RenderResult", file: !620, line: 44, flags: DIFlagFwdDecl)
!662 = !DIDerivedType(tag: DW_TAG_member, name: "renders", scope: !646, file: !620, line: 89, baseType: !663, size: 512, offset: 9408)
!663 = !DICompositeType(tag: DW_TAG_array_type, baseType: !660, size: 512, elements: !664)
!664 = !{!665}
!665 = !DISubrange(count: 8)
!666 = !DIDerivedType(tag: DW_TAG_member, name: "render_slot", scope: !646, file: !620, line: 90, baseType: !179, size: 16, offset: 9920)
!667 = !DIDerivedType(tag: DW_TAG_member, name: "last_render_slot", scope: !646, file: !620, line: 90, baseType: !179, size: 16, offset: 9936)
!668 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !646, file: !620, line: 92, baseType: !179, size: 16, offset: 9952)
!669 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !646, file: !620, line: 92, baseType: !179, size: 16, offset: 9968)
!670 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !646, file: !620, line: 93, baseType: !179, size: 16, offset: 9984)
!671 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !646, file: !620, line: 93, baseType: !179, size: 16, offset: 10000)
!672 = !DIDerivedType(tag: DW_TAG_member, name: "lastframe", scope: !646, file: !620, line: 94, baseType: !171, size: 32, offset: 10016)
!673 = !DIDerivedType(tag: DW_TAG_member, name: "tpageflag", scope: !646, file: !620, line: 97, baseType: !179, size: 16, offset: 10048)
!674 = !DIDerivedType(tag: DW_TAG_member, name: "totbind", scope: !646, file: !620, line: 97, baseType: !179, size: 16, offset: 10064)
!675 = !DIDerivedType(tag: DW_TAG_member, name: "xrep", scope: !646, file: !620, line: 98, baseType: !179, size: 16, offset: 10080)
!676 = !DIDerivedType(tag: DW_TAG_member, name: "yrep", scope: !646, file: !620, line: 98, baseType: !179, size: 16, offset: 10096)
!677 = !DIDerivedType(tag: DW_TAG_member, name: "twsta", scope: !646, file: !620, line: 99, baseType: !179, size: 16, offset: 10112)
!678 = !DIDerivedType(tag: DW_TAG_member, name: "twend", scope: !646, file: !620, line: 99, baseType: !179, size: 16, offset: 10128)
!679 = !DIDerivedType(tag: DW_TAG_member, name: "bindcode", scope: !646, file: !620, line: 100, baseType: !7, size: 32, offset: 10144)
!680 = !DIDerivedType(tag: DW_TAG_member, name: "repbind", scope: !646, file: !620, line: 101, baseType: !178, size: 64, offset: 10176)
!681 = !DIDerivedType(tag: DW_TAG_member, name: "packedfile", scope: !646, file: !620, line: 103, baseType: !351, size: 64, offset: 10240)
!682 = !DIDerivedType(tag: DW_TAG_member, name: "preview", scope: !646, file: !620, line: 104, baseType: !683, size: 64, offset: 10304)
!683 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !684, size: 64)
!684 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PreviewImage", file: !330, line: 159, size: 448, elements: !685)
!685 = !{!686, !690, !691, !693, !694, !696}
!686 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !684, file: !330, line: 161, baseType: !687, size: 64)
!687 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 64, elements: !688)
!688 = !{!689}
!689 = !DISubrange(count: 2)
!690 = !DIDerivedType(tag: DW_TAG_member, name: "h", scope: !684, file: !330, line: 162, baseType: !687, size: 64, offset: 64)
!691 = !DIDerivedType(tag: DW_TAG_member, name: "changed", scope: !684, file: !330, line: 163, baseType: !692, size: 32, offset: 128)
!692 = !DICompositeType(tag: DW_TAG_array_type, baseType: !179, size: 32, elements: !688)
!693 = !DIDerivedType(tag: DW_TAG_member, name: "changed_timestamp", scope: !684, file: !330, line: 164, baseType: !692, size: 32, offset: 160)
!694 = !DIDerivedType(tag: DW_TAG_member, name: "rect", scope: !684, file: !330, line: 165, baseType: !695, size: 128, offset: 192)
!695 = !DICompositeType(tag: DW_TAG_array_type, baseType: !178, size: 128, elements: !688)
!696 = !DIDerivedType(tag: DW_TAG_member, name: "gputexture", scope: !684, file: !330, line: 166, baseType: !697, size: 128, offset: 320)
!697 = !DICompositeType(tag: DW_TAG_array_type, baseType: !654, size: 128, elements: !688)
!698 = !DIDerivedType(tag: DW_TAG_member, name: "lastupdate", scope: !646, file: !620, line: 107, baseType: !176, size: 32, offset: 10368)
!699 = !DIDerivedType(tag: DW_TAG_member, name: "lastused", scope: !646, file: !620, line: 108, baseType: !171, size: 32, offset: 10400)
!700 = !DIDerivedType(tag: DW_TAG_member, name: "animspeed", scope: !646, file: !620, line: 109, baseType: !179, size: 16, offset: 10432)
!701 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !646, file: !620, line: 110, baseType: !179, size: 16, offset: 10448)
!702 = !DIDerivedType(tag: DW_TAG_member, name: "gen_x", scope: !646, file: !620, line: 113, baseType: !171, size: 32, offset: 10464)
!703 = !DIDerivedType(tag: DW_TAG_member, name: "gen_y", scope: !646, file: !620, line: 113, baseType: !171, size: 32, offset: 10496)
!704 = !DIDerivedType(tag: DW_TAG_member, name: "gen_type", scope: !646, file: !620, line: 114, baseType: !169, size: 8, offset: 10528)
!705 = !DIDerivedType(tag: DW_TAG_member, name: "gen_flag", scope: !646, file: !620, line: 114, baseType: !169, size: 8, offset: 10536)
!706 = !DIDerivedType(tag: DW_TAG_member, name: "gen_depth", scope: !646, file: !620, line: 115, baseType: !179, size: 16, offset: 10544)
!707 = !DIDerivedType(tag: DW_TAG_member, name: "gen_color", scope: !646, file: !620, line: 116, baseType: !508, size: 128, offset: 10560)
!708 = !DIDerivedType(tag: DW_TAG_member, name: "aspx", scope: !646, file: !620, line: 119, baseType: !176, size: 32, offset: 10688)
!709 = !DIDerivedType(tag: DW_TAG_member, name: "aspy", scope: !646, file: !620, line: 119, baseType: !176, size: 32, offset: 10720)
!710 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace_settings", scope: !646, file: !620, line: 122, baseType: !711, size: 512, offset: 10752)
!711 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorManagedColorspaceSettings", file: !712, line: 182, baseType: !713)
!712 = !DIFile(filename: "blender/source/blender/makesdna/DNA_color_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!713 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorManagedColorspaceSettings", file: !712, line: 180, size: 512, elements: !714)
!714 = !{!715}
!715 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !713, file: !712, line: 181, baseType: !238, size: 512)
!716 = !DIDerivedType(tag: DW_TAG_member, name: "alpha_mode", scope: !646, file: !620, line: 123, baseType: !169, size: 8, offset: 11264)
!717 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !646, file: !620, line: 125, baseType: !718, size: 56, offset: 11272)
!718 = !DICompositeType(tag: DW_TAG_array_type, baseType: !169, size: 56, elements: !719)
!719 = !{!720}
!720 = !DISubrange(count: 7)
!721 = !DIDerivedType(tag: DW_TAG_member, name: "render_slots", scope: !646, file: !620, line: 126, baseType: !722, size: 4096, offset: 11328)
!722 = !DICompositeType(tag: DW_TAG_array_type, baseType: !723, size: 4096, elements: !664)
!723 = !DIDerivedType(tag: DW_TAG_typedef, name: "RenderSlot", file: !620, line: 69, baseType: !724)
!724 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RenderSlot", file: !620, line: 67, size: 512, elements: !725)
!725 = !{!726}
!726 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !724, file: !620, line: 68, baseType: !238, size: 512)
!727 = !DIDerivedType(tag: DW_TAG_member, name: "coba", scope: !565, file: !518, line: 251, baseType: !516, size: 64, offset: 2880)
!728 = !DIDerivedType(tag: DW_TAG_member, name: "env", scope: !565, file: !518, line: 252, baseType: !729, size: 64, offset: 2944)
!729 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !730, size: 64)
!730 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "EnvMap", file: !518, line: 122, size: 1600, elements: !731)
!731 = !{!732, !733, !734, !740, !743, !746, !747, !748, !749, !750, !751, !752, !753, !754, !755, !756, !757}
!732 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !730, file: !518, line: 123, baseType: !561, size: 64)
!733 = !DIDerivedType(tag: DW_TAG_member, name: "ima", scope: !730, file: !518, line: 124, baseType: !645, size: 64, offset: 64)
!734 = !DIDerivedType(tag: DW_TAG_member, name: "cube", scope: !730, file: !518, line: 125, baseType: !735, size: 384, offset: 128)
!735 = !DICompositeType(tag: DW_TAG_array_type, baseType: !736, size: 384, elements: !738)
!736 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !737, size: 64)
!737 = !DICompositeType(tag: DW_TAG_structure_type, name: "ImBuf", file: !712, line: 136, flags: DIFlagFwdDecl)
!738 = !{!739}
!739 = !DISubrange(count: 6)
!740 = !DIDerivedType(tag: DW_TAG_member, name: "imat", scope: !730, file: !518, line: 126, baseType: !741, size: 512, offset: 512)
!741 = !DICompositeType(tag: DW_TAG_array_type, baseType: !176, size: 512, elements: !742)
!742 = !{!510, !510}
!743 = !DIDerivedType(tag: DW_TAG_member, name: "obimat", scope: !730, file: !518, line: 127, baseType: !744, size: 288, offset: 1024)
!744 = !DICompositeType(tag: DW_TAG_array_type, baseType: !176, size: 288, elements: !745)
!745 = !{!428, !428}
!746 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !730, file: !518, line: 128, baseType: !179, size: 16, offset: 1312)
!747 = !DIDerivedType(tag: DW_TAG_member, name: "stype", scope: !730, file: !518, line: 128, baseType: !179, size: 16, offset: 1328)
!748 = !DIDerivedType(tag: DW_TAG_member, name: "clipsta", scope: !730, file: !518, line: 129, baseType: !176, size: 32, offset: 1344)
!749 = !DIDerivedType(tag: DW_TAG_member, name: "clipend", scope: !730, file: !518, line: 129, baseType: !176, size: 32, offset: 1376)
!750 = !DIDerivedType(tag: DW_TAG_member, name: "viewscale", scope: !730, file: !518, line: 130, baseType: !176, size: 32, offset: 1408)
!751 = !DIDerivedType(tag: DW_TAG_member, name: "notlay", scope: !730, file: !518, line: 131, baseType: !7, size: 32, offset: 1440)
!752 = !DIDerivedType(tag: DW_TAG_member, name: "cuberes", scope: !730, file: !518, line: 132, baseType: !179, size: 16, offset: 1472)
!753 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !730, file: !518, line: 132, baseType: !179, size: 16, offset: 1488)
!754 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !730, file: !518, line: 133, baseType: !171, size: 32, offset: 1504)
!755 = !DIDerivedType(tag: DW_TAG_member, name: "lastframe", scope: !730, file: !518, line: 133, baseType: !171, size: 32, offset: 1536)
!756 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !730, file: !518, line: 134, baseType: !179, size: 16, offset: 1568)
!757 = !DIDerivedType(tag: DW_TAG_member, name: "lastsize", scope: !730, file: !518, line: 134, baseType: !179, size: 16, offset: 1584)
!758 = !DIDerivedType(tag: DW_TAG_member, name: "preview", scope: !565, file: !518, line: 253, baseType: !683, size: 64, offset: 3008)
!759 = !DIDerivedType(tag: DW_TAG_member, name: "pd", scope: !565, file: !518, line: 254, baseType: !760, size: 64, offset: 3072)
!760 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !761, size: 64)
!761 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PointDensity", file: !518, line: 137, size: 832, elements: !762)
!762 = !{!763, !764, !765, !766, !767, !768, !769, !770, !771, !772, !773, !774, !775, !776, !777, !778, !779, !780, !781, !783, !784, !785, !786, !787, !788}
!763 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !761, file: !518, line: 138, baseType: !179, size: 16)
!764 = !DIDerivedType(tag: DW_TAG_member, name: "falloff_type", scope: !761, file: !518, line: 140, baseType: !179, size: 16, offset: 16)
!765 = !DIDerivedType(tag: DW_TAG_member, name: "falloff_softness", scope: !761, file: !518, line: 141, baseType: !176, size: 32, offset: 32)
!766 = !DIDerivedType(tag: DW_TAG_member, name: "radius", scope: !761, file: !518, line: 142, baseType: !176, size: 32, offset: 64)
!767 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !761, file: !518, line: 143, baseType: !179, size: 16, offset: 96)
!768 = !DIDerivedType(tag: DW_TAG_member, name: "color_source", scope: !761, file: !518, line: 144, baseType: !179, size: 16, offset: 112)
!769 = !DIDerivedType(tag: DW_TAG_member, name: "totpoints", scope: !761, file: !518, line: 145, baseType: !171, size: 32, offset: 128)
!770 = !DIDerivedType(tag: DW_TAG_member, name: "pdpad", scope: !761, file: !518, line: 147, baseType: !171, size: 32, offset: 160)
!771 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !761, file: !518, line: 149, baseType: !561, size: 64, offset: 192)
!772 = !DIDerivedType(tag: DW_TAG_member, name: "psys", scope: !761, file: !518, line: 150, baseType: !171, size: 32, offset: 256)
!773 = !DIDerivedType(tag: DW_TAG_member, name: "psys_cache_space", scope: !761, file: !518, line: 151, baseType: !179, size: 16, offset: 288)
!774 = !DIDerivedType(tag: DW_TAG_member, name: "ob_cache_space", scope: !761, file: !518, line: 152, baseType: !179, size: 16, offset: 304)
!775 = !DIDerivedType(tag: DW_TAG_member, name: "point_tree", scope: !761, file: !518, line: 154, baseType: !167, size: 64, offset: 320)
!776 = !DIDerivedType(tag: DW_TAG_member, name: "point_data", scope: !761, file: !518, line: 155, baseType: !175, size: 64, offset: 384)
!777 = !DIDerivedType(tag: DW_TAG_member, name: "noise_size", scope: !761, file: !518, line: 157, baseType: !176, size: 32, offset: 448)
!778 = !DIDerivedType(tag: DW_TAG_member, name: "noise_depth", scope: !761, file: !518, line: 158, baseType: !179, size: 16, offset: 480)
!779 = !DIDerivedType(tag: DW_TAG_member, name: "noise_influence", scope: !761, file: !518, line: 159, baseType: !179, size: 16, offset: 496)
!780 = !DIDerivedType(tag: DW_TAG_member, name: "noise_basis", scope: !761, file: !518, line: 160, baseType: !179, size: 16, offset: 512)
!781 = !DIDerivedType(tag: DW_TAG_member, name: "pdpad3", scope: !761, file: !518, line: 161, baseType: !782, size: 48, offset: 528)
!782 = !DICompositeType(tag: DW_TAG_array_type, baseType: !179, size: 48, elements: !427)
!783 = !DIDerivedType(tag: DW_TAG_member, name: "noise_fac", scope: !761, file: !518, line: 162, baseType: !176, size: 32, offset: 576)
!784 = !DIDerivedType(tag: DW_TAG_member, name: "speed_scale", scope: !761, file: !518, line: 164, baseType: !176, size: 32, offset: 608)
!785 = !DIDerivedType(tag: DW_TAG_member, name: "falloff_speed_scale", scope: !761, file: !518, line: 164, baseType: !176, size: 32, offset: 640)
!786 = !DIDerivedType(tag: DW_TAG_member, name: "pdpad2", scope: !761, file: !518, line: 164, baseType: !176, size: 32, offset: 672)
!787 = !DIDerivedType(tag: DW_TAG_member, name: "coba", scope: !761, file: !518, line: 165, baseType: !516, size: 64, offset: 704)
!788 = !DIDerivedType(tag: DW_TAG_member, name: "falloff_curve", scope: !761, file: !518, line: 167, baseType: !789, size: 64, offset: 768)
!789 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !790, size: 64)
!790 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveMapping", file: !712, line: 72, size: 3072, elements: !791)
!791 = !{!792, !793, !794, !795, !796, !805, !806, !832, !833, !834, !835}
!792 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !790, file: !712, line: 73, baseType: !171, size: 32)
!793 = !DIDerivedType(tag: DW_TAG_member, name: "cur", scope: !790, file: !712, line: 73, baseType: !171, size: 32, offset: 32)
!794 = !DIDerivedType(tag: DW_TAG_member, name: "preset", scope: !790, file: !712, line: 74, baseType: !171, size: 32, offset: 64)
!795 = !DIDerivedType(tag: DW_TAG_member, name: "changed_timestamp", scope: !790, file: !712, line: 75, baseType: !171, size: 32, offset: 96)
!796 = !DIDerivedType(tag: DW_TAG_member, name: "curr", scope: !790, file: !712, line: 77, baseType: !797, size: 128, offset: 128)
!797 = !DIDerivedType(tag: DW_TAG_typedef, name: "rctf", file: !798, line: 95, baseType: !799)
!798 = !DIFile(filename: "blender/source/blender/makesdna/DNA_vec_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!799 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rctf", file: !798, line: 92, size: 128, elements: !800)
!800 = !{!801, !802, !803, !804}
!801 = !DIDerivedType(tag: DW_TAG_member, name: "xmin", scope: !799, file: !798, line: 93, baseType: !176, size: 32)
!802 = !DIDerivedType(tag: DW_TAG_member, name: "xmax", scope: !799, file: !798, line: 93, baseType: !176, size: 32, offset: 32)
!803 = !DIDerivedType(tag: DW_TAG_member, name: "ymin", scope: !799, file: !798, line: 94, baseType: !176, size: 32, offset: 64)
!804 = !DIDerivedType(tag: DW_TAG_member, name: "ymax", scope: !799, file: !798, line: 94, baseType: !176, size: 32, offset: 96)
!805 = !DIDerivedType(tag: DW_TAG_member, name: "clipr", scope: !790, file: !712, line: 77, baseType: !797, size: 128, offset: 256)
!806 = !DIDerivedType(tag: DW_TAG_member, name: "cm", scope: !790, file: !712, line: 79, baseType: !807, size: 2304, offset: 384)
!807 = !DICompositeType(tag: DW_TAG_array_type, baseType: !808, size: 2304, elements: !509)
!808 = !DIDerivedType(tag: DW_TAG_typedef, name: "CurveMap", file: !712, line: 67, baseType: !809)
!809 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveMap", file: !712, line: 55, size: 576, elements: !810)
!810 = !{!811, !812, !813, !814, !815, !816, !818, !819, !828, !829, !830, !831}
!811 = !DIDerivedType(tag: DW_TAG_member, name: "totpoint", scope: !809, file: !712, line: 56, baseType: !179, size: 16)
!812 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !809, file: !712, line: 56, baseType: !179, size: 16, offset: 16)
!813 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !809, file: !712, line: 58, baseType: !176, size: 32, offset: 32)
!814 = !DIDerivedType(tag: DW_TAG_member, name: "mintable", scope: !809, file: !712, line: 59, baseType: !176, size: 32, offset: 64)
!815 = !DIDerivedType(tag: DW_TAG_member, name: "maxtable", scope: !809, file: !712, line: 59, baseType: !176, size: 32, offset: 96)
!816 = !DIDerivedType(tag: DW_TAG_member, name: "ext_in", scope: !809, file: !712, line: 60, baseType: !817, size: 64, offset: 128)
!817 = !DICompositeType(tag: DW_TAG_array_type, baseType: !176, size: 64, elements: !688)
!818 = !DIDerivedType(tag: DW_TAG_member, name: "ext_out", scope: !809, file: !712, line: 60, baseType: !817, size: 64, offset: 192)
!819 = !DIDerivedType(tag: DW_TAG_member, name: "curve", scope: !809, file: !712, line: 61, baseType: !820, size: 64, offset: 256)
!820 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !821, size: 64)
!821 = !DIDerivedType(tag: DW_TAG_typedef, name: "CurveMapPoint", file: !712, line: 47, baseType: !822)
!822 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveMapPoint", file: !712, line: 44, size: 96, elements: !823)
!823 = !{!824, !825, !826, !827}
!824 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !822, file: !712, line: 45, baseType: !176, size: 32)
!825 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !822, file: !712, line: 45, baseType: !176, size: 32, offset: 32)
!826 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !822, file: !712, line: 46, baseType: !179, size: 16, offset: 64)
!827 = !DIDerivedType(tag: DW_TAG_member, name: "shorty", scope: !822, file: !712, line: 46, baseType: !179, size: 16, offset: 80)
!828 = !DIDerivedType(tag: DW_TAG_member, name: "table", scope: !809, file: !712, line: 62, baseType: !820, size: 64, offset: 320)
!829 = !DIDerivedType(tag: DW_TAG_member, name: "premultable", scope: !809, file: !712, line: 64, baseType: !820, size: 64, offset: 384)
!830 = !DIDerivedType(tag: DW_TAG_member, name: "premul_ext_in", scope: !809, file: !712, line: 65, baseType: !817, size: 64, offset: 448)
!831 = !DIDerivedType(tag: DW_TAG_member, name: "premul_ext_out", scope: !809, file: !712, line: 66, baseType: !817, size: 64, offset: 512)
!832 = !DIDerivedType(tag: DW_TAG_member, name: "black", scope: !790, file: !712, line: 80, baseType: !426, size: 96, offset: 2688)
!833 = !DIDerivedType(tag: DW_TAG_member, name: "white", scope: !790, file: !712, line: 80, baseType: !426, size: 96, offset: 2784)
!834 = !DIDerivedType(tag: DW_TAG_member, name: "bwmul", scope: !790, file: !712, line: 81, baseType: !426, size: 96, offset: 2880)
!835 = !DIDerivedType(tag: DW_TAG_member, name: "sample", scope: !790, file: !712, line: 83, baseType: !426, size: 96, offset: 2976)
!836 = !DIDerivedType(tag: DW_TAG_member, name: "vd", scope: !565, file: !518, line: 255, baseType: !837, size: 64, offset: 3136)
!837 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !838, size: 64)
!838 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VoxelData", file: !518, line: 170, size: 8704, elements: !839)
!839 = !{!840, !842, !843, !844, !845, !846, !847, !848, !849, !850, !851, !852, !853, !854, !855, !856}
!840 = !DIDerivedType(tag: DW_TAG_member, name: "resol", scope: !838, file: !518, line: 171, baseType: !841, size: 96)
!841 = !DICompositeType(tag: DW_TAG_array_type, baseType: !171, size: 96, elements: !427)
!842 = !DIDerivedType(tag: DW_TAG_member, name: "interp_type", scope: !838, file: !518, line: 172, baseType: !171, size: 32, offset: 96)
!843 = !DIDerivedType(tag: DW_TAG_member, name: "file_format", scope: !838, file: !518, line: 173, baseType: !179, size: 16, offset: 128)
!844 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !838, file: !518, line: 174, baseType: !179, size: 16, offset: 144)
!845 = !DIDerivedType(tag: DW_TAG_member, name: "extend", scope: !838, file: !518, line: 175, baseType: !179, size: 16, offset: 160)
!846 = !DIDerivedType(tag: DW_TAG_member, name: "smoked_type", scope: !838, file: !518, line: 176, baseType: !179, size: 16, offset: 176)
!847 = !DIDerivedType(tag: DW_TAG_member, name: "data_type", scope: !838, file: !518, line: 177, baseType: !179, size: 16, offset: 192)
!848 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !838, file: !518, line: 178, baseType: !179, size: 16, offset: 208)
!849 = !DIDerivedType(tag: DW_TAG_member, name: "_pad", scope: !838, file: !518, line: 179, baseType: !171, size: 32, offset: 224)
!850 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !838, file: !518, line: 181, baseType: !561, size: 64, offset: 256)
!851 = !DIDerivedType(tag: DW_TAG_member, name: "int_multiplier", scope: !838, file: !518, line: 182, baseType: !176, size: 32, offset: 320)
!852 = !DIDerivedType(tag: DW_TAG_member, name: "still_frame", scope: !838, file: !518, line: 183, baseType: !171, size: 32, offset: 352)
!853 = !DIDerivedType(tag: DW_TAG_member, name: "source_path", scope: !838, file: !518, line: 184, baseType: !258, size: 8192, offset: 384)
!854 = !DIDerivedType(tag: DW_TAG_member, name: "dataset", scope: !838, file: !518, line: 187, baseType: !175, size: 64, offset: 8576)
!855 = !DIDerivedType(tag: DW_TAG_member, name: "cachedframe", scope: !838, file: !518, line: 188, baseType: !171, size: 32, offset: 8640)
!856 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !838, file: !518, line: 189, baseType: !171, size: 32, offset: 8672)
!857 = !DIDerivedType(tag: DW_TAG_member, name: "ot", scope: !565, file: !518, line: 256, baseType: !858, size: 64, offset: 3200)
!858 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !859, size: 64)
!859 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "OceanTex", file: !518, line: 193, size: 640, elements: !860)
!860 = !{!861, !862, !863, !864}
!861 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !859, file: !518, line: 194, baseType: !561, size: 64)
!862 = !DIDerivedType(tag: DW_TAG_member, name: "oceanmod", scope: !859, file: !518, line: 195, baseType: !238, size: 512, offset: 64)
!863 = !DIDerivedType(tag: DW_TAG_member, name: "output", scope: !859, file: !518, line: 197, baseType: !171, size: 32, offset: 576)
!864 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !859, file: !518, line: 198, baseType: !171, size: 32, offset: 608)
!865 = !DIDerivedType(tag: DW_TAG_member, name: "use_nodes", scope: !565, file: !518, line: 258, baseType: !169, size: 8, offset: 3264)
!866 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !565, file: !518, line: 259, baseType: !718, size: 56, offset: 3272)
!867 = !DIDerivedType(tag: DW_TAG_member, name: "uvname", scope: !554, file: !518, line: 62, baseType: !238, size: 512, offset: 192)
!868 = !DIDerivedType(tag: DW_TAG_member, name: "projx", scope: !554, file: !518, line: 64, baseType: !169, size: 8, offset: 704)
!869 = !DIDerivedType(tag: DW_TAG_member, name: "projy", scope: !554, file: !518, line: 64, baseType: !169, size: 8, offset: 712)
!870 = !DIDerivedType(tag: DW_TAG_member, name: "projz", scope: !554, file: !518, line: 64, baseType: !169, size: 8, offset: 720)
!871 = !DIDerivedType(tag: DW_TAG_member, name: "mapping", scope: !554, file: !518, line: 64, baseType: !169, size: 8, offset: 728)
!872 = !DIDerivedType(tag: DW_TAG_member, name: "ofs", scope: !554, file: !518, line: 65, baseType: !426, size: 96, offset: 736)
!873 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !554, file: !518, line: 65, baseType: !426, size: 96, offset: 832)
!874 = !DIDerivedType(tag: DW_TAG_member, name: "rot", scope: !554, file: !518, line: 65, baseType: !176, size: 32, offset: 928)
!875 = !DIDerivedType(tag: DW_TAG_member, name: "texflag", scope: !554, file: !518, line: 67, baseType: !179, size: 16, offset: 960)
!876 = !DIDerivedType(tag: DW_TAG_member, name: "colormodel", scope: !554, file: !518, line: 67, baseType: !179, size: 16, offset: 976)
!877 = !DIDerivedType(tag: DW_TAG_member, name: "pmapto", scope: !554, file: !518, line: 67, baseType: !179, size: 16, offset: 992)
!878 = !DIDerivedType(tag: DW_TAG_member, name: "pmaptoneg", scope: !554, file: !518, line: 67, baseType: !179, size: 16, offset: 1008)
!879 = !DIDerivedType(tag: DW_TAG_member, name: "normapspace", scope: !554, file: !518, line: 68, baseType: !179, size: 16, offset: 1024)
!880 = !DIDerivedType(tag: DW_TAG_member, name: "which_output", scope: !554, file: !518, line: 68, baseType: !179, size: 16, offset: 1040)
!881 = !DIDerivedType(tag: DW_TAG_member, name: "brush_map_mode", scope: !554, file: !518, line: 69, baseType: !169, size: 8, offset: 1056)
!882 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !554, file: !518, line: 69, baseType: !718, size: 56, offset: 1064)
!883 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !554, file: !518, line: 70, baseType: !176, size: 32, offset: 1120)
!884 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !554, file: !518, line: 70, baseType: !176, size: 32, offset: 1152)
!885 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !554, file: !518, line: 70, baseType: !176, size: 32, offset: 1184)
!886 = !DIDerivedType(tag: DW_TAG_member, name: "k", scope: !554, file: !518, line: 70, baseType: !176, size: 32, offset: 1216)
!887 = !DIDerivedType(tag: DW_TAG_member, name: "def_var", scope: !554, file: !518, line: 71, baseType: !176, size: 32, offset: 1248)
!888 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !554, file: !518, line: 71, baseType: !176, size: 32, offset: 1280)
!889 = !DIDerivedType(tag: DW_TAG_member, name: "colfac", scope: !554, file: !518, line: 74, baseType: !176, size: 32, offset: 1312)
!890 = !DIDerivedType(tag: DW_TAG_member, name: "varfac", scope: !554, file: !518, line: 74, baseType: !176, size: 32, offset: 1344)
!891 = !DIDerivedType(tag: DW_TAG_member, name: "norfac", scope: !554, file: !518, line: 77, baseType: !176, size: 32, offset: 1376)
!892 = !DIDerivedType(tag: DW_TAG_member, name: "dispfac", scope: !554, file: !518, line: 77, baseType: !176, size: 32, offset: 1408)
!893 = !DIDerivedType(tag: DW_TAG_member, name: "warpfac", scope: !554, file: !518, line: 77, baseType: !176, size: 32, offset: 1440)
!894 = !DIDerivedType(tag: DW_TAG_member, name: "colspecfac", scope: !554, file: !518, line: 78, baseType: !176, size: 32, offset: 1472)
!895 = !DIDerivedType(tag: DW_TAG_member, name: "mirrfac", scope: !554, file: !518, line: 78, baseType: !176, size: 32, offset: 1504)
!896 = !DIDerivedType(tag: DW_TAG_member, name: "alphafac", scope: !554, file: !518, line: 78, baseType: !176, size: 32, offset: 1536)
!897 = !DIDerivedType(tag: DW_TAG_member, name: "difffac", scope: !554, file: !518, line: 79, baseType: !176, size: 32, offset: 1568)
!898 = !DIDerivedType(tag: DW_TAG_member, name: "specfac", scope: !554, file: !518, line: 79, baseType: !176, size: 32, offset: 1600)
!899 = !DIDerivedType(tag: DW_TAG_member, name: "emitfac", scope: !554, file: !518, line: 79, baseType: !176, size: 32, offset: 1632)
!900 = !DIDerivedType(tag: DW_TAG_member, name: "hardfac", scope: !554, file: !518, line: 79, baseType: !176, size: 32, offset: 1664)
!901 = !DIDerivedType(tag: DW_TAG_member, name: "raymirrfac", scope: !554, file: !518, line: 80, baseType: !176, size: 32, offset: 1696)
!902 = !DIDerivedType(tag: DW_TAG_member, name: "translfac", scope: !554, file: !518, line: 80, baseType: !176, size: 32, offset: 1728)
!903 = !DIDerivedType(tag: DW_TAG_member, name: "ambfac", scope: !554, file: !518, line: 80, baseType: !176, size: 32, offset: 1760)
!904 = !DIDerivedType(tag: DW_TAG_member, name: "colemitfac", scope: !554, file: !518, line: 81, baseType: !176, size: 32, offset: 1792)
!905 = !DIDerivedType(tag: DW_TAG_member, name: "colreflfac", scope: !554, file: !518, line: 81, baseType: !176, size: 32, offset: 1824)
!906 = !DIDerivedType(tag: DW_TAG_member, name: "coltransfac", scope: !554, file: !518, line: 81, baseType: !176, size: 32, offset: 1856)
!907 = !DIDerivedType(tag: DW_TAG_member, name: "densfac", scope: !554, file: !518, line: 82, baseType: !176, size: 32, offset: 1888)
!908 = !DIDerivedType(tag: DW_TAG_member, name: "scatterfac", scope: !554, file: !518, line: 82, baseType: !176, size: 32, offset: 1920)
!909 = !DIDerivedType(tag: DW_TAG_member, name: "reflfac", scope: !554, file: !518, line: 82, baseType: !176, size: 32, offset: 1952)
!910 = !DIDerivedType(tag: DW_TAG_member, name: "timefac", scope: !554, file: !518, line: 85, baseType: !176, size: 32, offset: 1984)
!911 = !DIDerivedType(tag: DW_TAG_member, name: "lengthfac", scope: !554, file: !518, line: 85, baseType: !176, size: 32, offset: 2016)
!912 = !DIDerivedType(tag: DW_TAG_member, name: "clumpfac", scope: !554, file: !518, line: 85, baseType: !176, size: 32, offset: 2048)
!913 = !DIDerivedType(tag: DW_TAG_member, name: "dampfac", scope: !554, file: !518, line: 85, baseType: !176, size: 32, offset: 2080)
!914 = !DIDerivedType(tag: DW_TAG_member, name: "kinkfac", scope: !554, file: !518, line: 86, baseType: !176, size: 32, offset: 2112)
!915 = !DIDerivedType(tag: DW_TAG_member, name: "roughfac", scope: !554, file: !518, line: 86, baseType: !176, size: 32, offset: 2144)
!916 = !DIDerivedType(tag: DW_TAG_member, name: "padensfac", scope: !554, file: !518, line: 86, baseType: !176, size: 32, offset: 2176)
!917 = !DIDerivedType(tag: DW_TAG_member, name: "gravityfac", scope: !554, file: !518, line: 86, baseType: !176, size: 32, offset: 2208)
!918 = !DIDerivedType(tag: DW_TAG_member, name: "lifefac", scope: !554, file: !518, line: 87, baseType: !176, size: 32, offset: 2240)
!919 = !DIDerivedType(tag: DW_TAG_member, name: "sizefac", scope: !554, file: !518, line: 87, baseType: !176, size: 32, offset: 2272)
!920 = !DIDerivedType(tag: DW_TAG_member, name: "ivelfac", scope: !554, file: !518, line: 87, baseType: !176, size: 32, offset: 2304)
!921 = !DIDerivedType(tag: DW_TAG_member, name: "fieldfac", scope: !554, file: !518, line: 87, baseType: !176, size: 32, offset: 2336)
!922 = !DIDerivedType(tag: DW_TAG_member, name: "shadowfac", scope: !554, file: !518, line: 90, baseType: !176, size: 32, offset: 2368)
!923 = !DIDerivedType(tag: DW_TAG_member, name: "zenupfac", scope: !554, file: !518, line: 93, baseType: !176, size: 32, offset: 2400)
!924 = !DIDerivedType(tag: DW_TAG_member, name: "zendownfac", scope: !554, file: !518, line: 93, baseType: !176, size: 32, offset: 2432)
!925 = !DIDerivedType(tag: DW_TAG_member, name: "blendfac", scope: !554, file: !518, line: 93, baseType: !176, size: 32, offset: 2464)
!926 = !{!927}
!927 = !DISubrange(count: 18)
!928 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !325, file: !326, line: 168, baseType: !639, size: 64, offset: 6144)
!929 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !325, file: !326, line: 169, baseType: !642, size: 64, offset: 6208)
!930 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !325, file: !326, line: 170, baseType: !931, size: 64, offset: 6272)
!931 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !932, size: 64)
!932 = !DICompositeType(tag: DW_TAG_structure_type, name: "Group", file: !326, line: 46, flags: DIFlagFwdDecl)
!933 = !DIDerivedType(tag: DW_TAG_member, name: "preview", scope: !325, file: !326, line: 171, baseType: !683, size: 64, offset: 6336)
!934 = !DIDerivedType(tag: DW_TAG_member, name: "friction", scope: !325, file: !326, line: 174, baseType: !176, size: 32, offset: 6400)
!935 = !DIDerivedType(tag: DW_TAG_member, name: "fh", scope: !325, file: !326, line: 174, baseType: !176, size: 32, offset: 6432)
!936 = !DIDerivedType(tag: DW_TAG_member, name: "reflect", scope: !325, file: !326, line: 174, baseType: !176, size: 32, offset: 6464)
!937 = !DIDerivedType(tag: DW_TAG_member, name: "fhdist", scope: !325, file: !326, line: 175, baseType: !176, size: 32, offset: 6496)
!938 = !DIDerivedType(tag: DW_TAG_member, name: "xyfrict", scope: !325, file: !326, line: 175, baseType: !176, size: 32, offset: 6528)
!939 = !DIDerivedType(tag: DW_TAG_member, name: "dynamode", scope: !325, file: !326, line: 176, baseType: !179, size: 16, offset: 6560)
!940 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !325, file: !326, line: 176, baseType: !179, size: 16, offset: 6576)
!941 = !DIDerivedType(tag: DW_TAG_member, name: "sss_radius", scope: !325, file: !326, line: 179, baseType: !426, size: 96, offset: 6592)
!942 = !DIDerivedType(tag: DW_TAG_member, name: "sss_col", scope: !325, file: !326, line: 179, baseType: !426, size: 96, offset: 6688)
!943 = !DIDerivedType(tag: DW_TAG_member, name: "sss_error", scope: !325, file: !326, line: 180, baseType: !176, size: 32, offset: 6784)
!944 = !DIDerivedType(tag: DW_TAG_member, name: "sss_scale", scope: !325, file: !326, line: 180, baseType: !176, size: 32, offset: 6816)
!945 = !DIDerivedType(tag: DW_TAG_member, name: "sss_ior", scope: !325, file: !326, line: 180, baseType: !176, size: 32, offset: 6848)
!946 = !DIDerivedType(tag: DW_TAG_member, name: "sss_colfac", scope: !325, file: !326, line: 181, baseType: !176, size: 32, offset: 6880)
!947 = !DIDerivedType(tag: DW_TAG_member, name: "sss_texfac", scope: !325, file: !326, line: 181, baseType: !176, size: 32, offset: 6912)
!948 = !DIDerivedType(tag: DW_TAG_member, name: "sss_front", scope: !325, file: !326, line: 182, baseType: !176, size: 32, offset: 6944)
!949 = !DIDerivedType(tag: DW_TAG_member, name: "sss_back", scope: !325, file: !326, line: 182, baseType: !176, size: 32, offset: 6976)
!950 = !DIDerivedType(tag: DW_TAG_member, name: "sss_flag", scope: !325, file: !326, line: 183, baseType: !179, size: 16, offset: 7008)
!951 = !DIDerivedType(tag: DW_TAG_member, name: "sss_preset", scope: !325, file: !326, line: 183, baseType: !179, size: 16, offset: 7024)
!952 = !DIDerivedType(tag: DW_TAG_member, name: "mapto_textured", scope: !325, file: !326, line: 185, baseType: !171, size: 32, offset: 7040)
!953 = !DIDerivedType(tag: DW_TAG_member, name: "shadowonly_flag", scope: !325, file: !326, line: 186, baseType: !179, size: 16, offset: 7072)
!954 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !325, file: !326, line: 187, baseType: !179, size: 16, offset: 7088)
!955 = !DIDerivedType(tag: DW_TAG_member, name: "line_col", scope: !325, file: !326, line: 190, baseType: !508, size: 128, offset: 7104)
!956 = !DIDerivedType(tag: DW_TAG_member, name: "line_priority", scope: !325, file: !326, line: 191, baseType: !179, size: 16, offset: 7232)
!957 = !DIDerivedType(tag: DW_TAG_member, name: "vcol_alpha", scope: !325, file: !326, line: 192, baseType: !179, size: 16, offset: 7248)
!958 = !DIDerivedType(tag: DW_TAG_member, name: "paint_active_slot", scope: !325, file: !326, line: 195, baseType: !179, size: 16, offset: 7264)
!959 = !DIDerivedType(tag: DW_TAG_member, name: "paint_clone_slot", scope: !325, file: !326, line: 196, baseType: !179, size: 16, offset: 7280)
!960 = !DIDerivedType(tag: DW_TAG_member, name: "tot_slots", scope: !325, file: !326, line: 197, baseType: !179, size: 16, offset: 7296)
!961 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !325, file: !326, line: 198, baseType: !782, size: 48, offset: 7312)
!962 = !DIDerivedType(tag: DW_TAG_member, name: "texpaintslot", scope: !325, file: !326, line: 200, baseType: !963, size: 64, offset: 7360)
!963 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !964, size: 64)
!964 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "TexPaintSlot", file: !326, line: 86, size: 192, elements: !965)
!965 = !{!966, !967, !968, !969}
!966 = !DIDerivedType(tag: DW_TAG_member, name: "ima", scope: !964, file: !326, line: 87, baseType: !645, size: 64)
!967 = !DIDerivedType(tag: DW_TAG_member, name: "uvname", scope: !964, file: !326, line: 88, baseType: !168, size: 64, offset: 64)
!968 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !964, file: !326, line: 89, baseType: !171, size: 32, offset: 128)
!969 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !964, file: !326, line: 90, baseType: !171, size: 32, offset: 160)
!970 = !DIDerivedType(tag: DW_TAG_member, name: "gpumaterial", scope: !325, file: !326, line: 202, baseType: !380, size: 128, offset: 7424)
!971 = !DIDerivedType(tag: DW_TAG_member, name: "cd_flag", scope: !218, file: !6, line: 193, baseType: !169, size: 8, offset: 8576)
!972 = !DIDerivedType(tag: DW_TAG_member, name: "calcNormals", scope: !218, file: !6, line: 196, baseType: !973, size: 64, offset: 8640)
!973 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !974, size: 64)
!974 = !DISubroutineType(types: !975)
!975 = !{null, !216}
!976 = !DIDerivedType(tag: DW_TAG_member, name: "calcLoopNormals", scope: !218, file: !6, line: 199, baseType: !977, size: 64, offset: 8704)
!977 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !978, size: 64)
!978 = !DISubroutineType(types: !979)
!979 = !{null, !216, !980}
!980 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !176)
!981 = !DIDerivedType(tag: DW_TAG_member, name: "recalcTessellation", scope: !218, file: !6, line: 202, baseType: !973, size: 64, offset: 8768)
!982 = !DIDerivedType(tag: DW_TAG_member, name: "getNumVerts", scope: !218, file: !6, line: 207, baseType: !983, size: 64, offset: 8832)
!983 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !984, size: 64)
!984 = !DISubroutineType(types: !985)
!985 = !{!171, !216}
!986 = !DIDerivedType(tag: DW_TAG_member, name: "getNumEdges", scope: !218, file: !6, line: 208, baseType: !983, size: 64, offset: 8896)
!987 = !DIDerivedType(tag: DW_TAG_member, name: "getNumTessFaces", scope: !218, file: !6, line: 209, baseType: !983, size: 64, offset: 8960)
!988 = !DIDerivedType(tag: DW_TAG_member, name: "getNumLoops", scope: !218, file: !6, line: 210, baseType: !983, size: 64, offset: 9024)
!989 = !DIDerivedType(tag: DW_TAG_member, name: "getNumPolys", scope: !218, file: !6, line: 211, baseType: !983, size: 64, offset: 9088)
!990 = !DIDerivedType(tag: DW_TAG_member, name: "getVert", scope: !218, file: !6, line: 218, baseType: !991, size: 64, offset: 9152)
!991 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !992, size: 64)
!992 = !DISubroutineType(types: !993)
!993 = !{null, !216, !171, !994}
!994 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !995, size: 64)
!995 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MVert", file: !56, line: 65, size: 160, elements: !996)
!996 = !{!997, !998, !999, !1000}
!997 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !995, file: !56, line: 66, baseType: !426, size: 96)
!998 = !DIDerivedType(tag: DW_TAG_member, name: "no", scope: !995, file: !56, line: 67, baseType: !782, size: 48, offset: 96)
!999 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !995, file: !56, line: 68, baseType: !169, size: 8, offset: 144)
!1000 = !DIDerivedType(tag: DW_TAG_member, name: "bweight", scope: !995, file: !56, line: 68, baseType: !169, size: 8, offset: 152)
!1001 = !DIDerivedType(tag: DW_TAG_member, name: "getEdge", scope: !218, file: !6, line: 219, baseType: !1002, size: 64, offset: 9216)
!1002 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1003, size: 64)
!1003 = !DISubroutineType(types: !1004)
!1004 = !{null, !216, !171, !1005}
!1005 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1006, size: 64)
!1006 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MEdge", file: !56, line: 48, size: 96, elements: !1007)
!1007 = !{!1008, !1009, !1010, !1011, !1012}
!1008 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !1006, file: !56, line: 49, baseType: !7, size: 32)
!1009 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !1006, file: !56, line: 49, baseType: !7, size: 32, offset: 32)
!1010 = !DIDerivedType(tag: DW_TAG_member, name: "crease", scope: !1006, file: !56, line: 50, baseType: !169, size: 8, offset: 64)
!1011 = !DIDerivedType(tag: DW_TAG_member, name: "bweight", scope: !1006, file: !56, line: 50, baseType: !169, size: 8, offset: 72)
!1012 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1006, file: !56, line: 51, baseType: !179, size: 16, offset: 80)
!1013 = !DIDerivedType(tag: DW_TAG_member, name: "getTessFace", scope: !218, file: !6, line: 220, baseType: !1014, size: 64, offset: 9280)
!1014 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1015, size: 64)
!1015 = !DISubroutineType(types: !1016)
!1016 = !{null, !216, !171, !1017}
!1017 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1018, size: 64)
!1018 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MFace", file: !56, line: 42, size: 160, elements: !1019)
!1019 = !{!1020, !1021, !1022, !1023, !1024, !1025, !1026}
!1020 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !1018, file: !56, line: 43, baseType: !7, size: 32)
!1021 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !1018, file: !56, line: 43, baseType: !7, size: 32, offset: 32)
!1022 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !1018, file: !56, line: 43, baseType: !7, size: 32, offset: 64)
!1023 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !1018, file: !56, line: 43, baseType: !7, size: 32, offset: 96)
!1024 = !DIDerivedType(tag: DW_TAG_member, name: "mat_nr", scope: !1018, file: !56, line: 44, baseType: !179, size: 16, offset: 128)
!1025 = !DIDerivedType(tag: DW_TAG_member, name: "edcode", scope: !1018, file: !56, line: 45, baseType: !169, size: 8, offset: 144)
!1026 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1018, file: !56, line: 45, baseType: !169, size: 8, offset: 152)
!1027 = !DIDerivedType(tag: DW_TAG_member, name: "getVertArray", scope: !218, file: !6, line: 227, baseType: !1028, size: 64, offset: 9344)
!1028 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1029, size: 64)
!1029 = !DISubroutineType(types: !1030)
!1030 = !{!994, !216}
!1031 = !DIDerivedType(tag: DW_TAG_member, name: "getEdgeArray", scope: !218, file: !6, line: 228, baseType: !1032, size: 64, offset: 9408)
!1032 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1033, size: 64)
!1033 = !DISubroutineType(types: !1034)
!1034 = !{!1005, !216}
!1035 = !DIDerivedType(tag: DW_TAG_member, name: "getTessFaceArray", scope: !218, file: !6, line: 229, baseType: !1036, size: 64, offset: 9472)
!1036 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1037, size: 64)
!1037 = !DISubroutineType(types: !1038)
!1038 = !{!1017, !216}
!1039 = !DIDerivedType(tag: DW_TAG_member, name: "getLoopArray", scope: !218, file: !6, line: 230, baseType: !1040, size: 64, offset: 9536)
!1040 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1041, size: 64)
!1041 = !DISubroutineType(types: !1042)
!1042 = !{!1043, !216}
!1043 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1044, size: 64)
!1044 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MLoop", file: !56, line: 88, size: 64, elements: !1045)
!1045 = !{!1046, !1047}
!1046 = !DIDerivedType(tag: DW_TAG_member, name: "v", scope: !1044, file: !56, line: 89, baseType: !7, size: 32)
!1047 = !DIDerivedType(tag: DW_TAG_member, name: "e", scope: !1044, file: !56, line: 90, baseType: !7, size: 32, offset: 32)
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "getPolyArray", scope: !218, file: !6, line: 231, baseType: !1049, size: 64, offset: 9600)
!1049 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1050, size: 64)
!1050 = !DISubroutineType(types: !1051)
!1051 = !{!1052, !216}
!1052 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1053, size: 64)
!1053 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MPoly", file: !56, line: 79, size: 96, elements: !1054)
!1054 = !{!1055, !1056, !1057, !1058, !1059}
!1055 = !DIDerivedType(tag: DW_TAG_member, name: "loopstart", scope: !1053, file: !56, line: 81, baseType: !171, size: 32)
!1056 = !DIDerivedType(tag: DW_TAG_member, name: "totloop", scope: !1053, file: !56, line: 82, baseType: !171, size: 32, offset: 32)
!1057 = !DIDerivedType(tag: DW_TAG_member, name: "mat_nr", scope: !1053, file: !56, line: 83, baseType: !179, size: 16, offset: 64)
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1053, file: !56, line: 84, baseType: !169, size: 8, offset: 80)
!1059 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1053, file: !56, line: 84, baseType: !169, size: 8, offset: 88)
!1060 = !DIDerivedType(tag: DW_TAG_member, name: "copyVertArray", scope: !218, file: !6, line: 236, baseType: !1061, size: 64, offset: 9664)
!1061 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1062, size: 64)
!1062 = !DISubroutineType(types: !1063)
!1063 = !{null, !216, !994}
!1064 = !DIDerivedType(tag: DW_TAG_member, name: "copyEdgeArray", scope: !218, file: !6, line: 237, baseType: !1065, size: 64, offset: 9728)
!1065 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1066, size: 64)
!1066 = !DISubroutineType(types: !1067)
!1067 = !{null, !216, !1005}
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "copyTessFaceArray", scope: !218, file: !6, line: 238, baseType: !1069, size: 64, offset: 9792)
!1069 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1070, size: 64)
!1070 = !DISubroutineType(types: !1071)
!1071 = !{null, !216, !1017}
!1072 = !DIDerivedType(tag: DW_TAG_member, name: "copyLoopArray", scope: !218, file: !6, line: 239, baseType: !1073, size: 64, offset: 9856)
!1073 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1074, size: 64)
!1074 = !DISubroutineType(types: !1075)
!1075 = !{null, !216, !1043}
!1076 = !DIDerivedType(tag: DW_TAG_member, name: "copyPolyArray", scope: !218, file: !6, line: 240, baseType: !1077, size: 64, offset: 9920)
!1077 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1078, size: 64)
!1078 = !DISubroutineType(types: !1079)
!1079 = !{null, !216, !1052}
!1080 = !DIDerivedType(tag: DW_TAG_member, name: "dupVertArray", scope: !218, file: !6, line: 245, baseType: !1028, size: 64, offset: 9984)
!1081 = !DIDerivedType(tag: DW_TAG_member, name: "dupEdgeArray", scope: !218, file: !6, line: 246, baseType: !1032, size: 64, offset: 10048)
!1082 = !DIDerivedType(tag: DW_TAG_member, name: "dupTessFaceArray", scope: !218, file: !6, line: 247, baseType: !1036, size: 64, offset: 10112)
!1083 = !DIDerivedType(tag: DW_TAG_member, name: "dupLoopArray", scope: !218, file: !6, line: 248, baseType: !1040, size: 64, offset: 10176)
!1084 = !DIDerivedType(tag: DW_TAG_member, name: "dupPolyArray", scope: !218, file: !6, line: 249, baseType: !1049, size: 64, offset: 10240)
!1085 = !DIDerivedType(tag: DW_TAG_member, name: "getVertData", scope: !218, file: !6, line: 255, baseType: !1086, size: 64, offset: 10304)
!1086 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1087, size: 64)
!1087 = !DISubroutineType(types: !1088)
!1088 = !{!167, !216, !171, !171}
!1089 = !DIDerivedType(tag: DW_TAG_member, name: "getEdgeData", scope: !218, file: !6, line: 256, baseType: !1086, size: 64, offset: 10368)
!1090 = !DIDerivedType(tag: DW_TAG_member, name: "getTessFaceData", scope: !218, file: !6, line: 257, baseType: !1086, size: 64, offset: 10432)
!1091 = !DIDerivedType(tag: DW_TAG_member, name: "getPolyData", scope: !218, file: !6, line: 258, baseType: !1086, size: 64, offset: 10496)
!1092 = !DIDerivedType(tag: DW_TAG_member, name: "getVertDataArray", scope: !218, file: !6, line: 264, baseType: !1093, size: 64, offset: 10560)
!1093 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1094, size: 64)
!1094 = !DISubroutineType(types: !1095)
!1095 = !{!167, !216, !171}
!1096 = !DIDerivedType(tag: DW_TAG_member, name: "getEdgeDataArray", scope: !218, file: !6, line: 265, baseType: !1093, size: 64, offset: 10624)
!1097 = !DIDerivedType(tag: DW_TAG_member, name: "getTessFaceDataArray", scope: !218, file: !6, line: 266, baseType: !1093, size: 64, offset: 10688)
!1098 = !DIDerivedType(tag: DW_TAG_member, name: "getLoopDataArray", scope: !218, file: !6, line: 267, baseType: !1093, size: 64, offset: 10752)
!1099 = !DIDerivedType(tag: DW_TAG_member, name: "getPolyDataArray", scope: !218, file: !6, line: 268, baseType: !1093, size: 64, offset: 10816)
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "getVertDataLayout", scope: !218, file: !6, line: 272, baseType: !1101, size: 64, offset: 10880)
!1101 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1102, size: 64)
!1102 = !DISubroutineType(types: !1103)
!1103 = !{!1104, !216}
!1104 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !221, size: 64)
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "getEdgeDataLayout", scope: !218, file: !6, line: 273, baseType: !1101, size: 64, offset: 10944)
!1106 = !DIDerivedType(tag: DW_TAG_member, name: "getTessFaceDataLayout", scope: !218, file: !6, line: 274, baseType: !1101, size: 64, offset: 11008)
!1107 = !DIDerivedType(tag: DW_TAG_member, name: "getLoopDataLayout", scope: !218, file: !6, line: 275, baseType: !1101, size: 64, offset: 11072)
!1108 = !DIDerivedType(tag: DW_TAG_member, name: "getPolyDataLayout", scope: !218, file: !6, line: 276, baseType: !1101, size: 64, offset: 11136)
!1109 = !DIDerivedType(tag: DW_TAG_member, name: "copyFromVertCData", scope: !218, file: !6, line: 279, baseType: !1110, size: 64, offset: 11200)
!1110 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1111, size: 64)
!1111 = !DISubroutineType(types: !1112)
!1112 = !{null, !216, !171, !1104, !171}
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "copyFromEdgeCData", scope: !218, file: !6, line: 280, baseType: !1110, size: 64, offset: 11264)
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "copyFromFaceCData", scope: !218, file: !6, line: 281, baseType: !1110, size: 64, offset: 11328)
!1115 = !DIDerivedType(tag: DW_TAG_member, name: "getNumGrids", scope: !218, file: !6, line: 284, baseType: !983, size: 64, offset: 11392)
!1116 = !DIDerivedType(tag: DW_TAG_member, name: "getGridSize", scope: !218, file: !6, line: 285, baseType: !983, size: 64, offset: 11456)
!1117 = !DIDerivedType(tag: DW_TAG_member, name: "getGridData", scope: !218, file: !6, line: 286, baseType: !1118, size: 64, offset: 11520)
!1118 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1119, size: 64)
!1119 = !DISubroutineType(types: !1120)
!1120 = !{!1121, !216}
!1121 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1122, size: 64)
!1122 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !183, size: 64)
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "getGridAdjacency", scope: !218, file: !6, line: 287, baseType: !1124, size: 64, offset: 11584)
!1124 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1125, size: 64)
!1125 = !DISubroutineType(types: !1126)
!1126 = !{!1127, !216}
!1127 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1128, size: 64)
!1128 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMGridAdjacency", file: !6, line: 120, baseType: !1129)
!1129 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DMGridAdjacency", file: !6, line: 117, size: 256, elements: !1130)
!1130 = !{!1131, !1133}
!1131 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1129, file: !6, line: 118, baseType: !1132, size: 128)
!1132 = !DICompositeType(tag: DW_TAG_array_type, baseType: !171, size: 128, elements: !509)
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "rotation", scope: !1129, file: !6, line: 119, baseType: !1132, size: 128, offset: 128)
!1134 = !DIDerivedType(tag: DW_TAG_member, name: "getGridOffset", scope: !218, file: !6, line: 288, baseType: !1135, size: 64, offset: 11648)
!1135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1136, size: 64)
!1136 = !DISubroutineType(types: !1137)
!1137 = !{!170, !216}
!1138 = !DIDerivedType(tag: DW_TAG_member, name: "getGridKey", scope: !218, file: !6, line: 289, baseType: !1139, size: 64, offset: 11712)
!1139 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1140, size: 64)
!1140 = !DISubroutineType(types: !1141)
!1141 = !{null, !216, !1142}
!1142 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1143, size: 64)
!1143 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CCGKey", file: !182, line: 53, size: 320, elements: !1144)
!1144 = !{!1145, !1146, !1147, !1148, !1149, !1150, !1151, !1152, !1153, !1154}
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1143, file: !182, line: 54, baseType: !171, size: 32)
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "elem_size", scope: !1143, file: !182, line: 58, baseType: !171, size: 32, offset: 32)
!1147 = !DIDerivedType(tag: DW_TAG_member, name: "grid_size", scope: !1143, file: !182, line: 61, baseType: !171, size: 32, offset: 64)
!1148 = !DIDerivedType(tag: DW_TAG_member, name: "grid_area", scope: !1143, file: !182, line: 63, baseType: !171, size: 32, offset: 96)
!1149 = !DIDerivedType(tag: DW_TAG_member, name: "grid_bytes", scope: !1143, file: !182, line: 65, baseType: !171, size: 32, offset: 128)
!1150 = !DIDerivedType(tag: DW_TAG_member, name: "normal_offset", scope: !1143, file: !182, line: 69, baseType: !171, size: 32, offset: 160)
!1151 = !DIDerivedType(tag: DW_TAG_member, name: "mask_offset", scope: !1143, file: !182, line: 73, baseType: !171, size: 32, offset: 192)
!1152 = !DIDerivedType(tag: DW_TAG_member, name: "num_layers", scope: !1143, file: !182, line: 75, baseType: !171, size: 32, offset: 224)
!1153 = !DIDerivedType(tag: DW_TAG_member, name: "has_normals", scope: !1143, file: !182, line: 76, baseType: !171, size: 32, offset: 256)
!1154 = !DIDerivedType(tag: DW_TAG_member, name: "has_mask", scope: !1143, file: !182, line: 77, baseType: !171, size: 32, offset: 288)
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "getGridFlagMats", scope: !218, file: !6, line: 290, baseType: !1156, size: 64, offset: 11776)
!1156 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1157, size: 64)
!1157 = !DISubroutineType(types: !1158)
!1158 = !{!1159, !216}
!1159 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1160, size: 64)
!1160 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMFlagMat", file: !6, line: 126, baseType: !1161)
!1161 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DMFlagMat", file: !6, line: 123, size: 32, elements: !1162)
!1162 = !{!1163, !1164}
!1163 = !DIDerivedType(tag: DW_TAG_member, name: "mat_nr", scope: !1161, file: !6, line: 124, baseType: !179, size: 16)
!1164 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1161, file: !6, line: 125, baseType: !169, size: 8, offset: 16)
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "getGridHidden", scope: !218, file: !6, line: 291, baseType: !1166, size: 64, offset: 11840)
!1166 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1167, size: 64)
!1167 = !DISubroutineType(types: !1168)
!1168 = !{!1169, !216}
!1169 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !178, size: 64)
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "foreachMappedVert", scope: !218, file: !6, line: 299, baseType: !1171, size: 64, offset: 11904)
!1171 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1172, size: 64)
!1172 = !DISubroutineType(types: !1173)
!1173 = !{null, !216, !1174, !167, !1180}
!1174 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1175, size: 64)
!1175 = !DISubroutineType(types: !1176)
!1176 = !{null, !167, !171, !1177, !1177, !1178}
!1177 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !980, size: 64)
!1178 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1179, size: 64)
!1179 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !179)
!1180 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMForeachFlag", file: !6, line: 162, baseType: !17)
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "foreachMappedEdge", scope: !218, file: !6, line: 309, baseType: !1182, size: 64, offset: 11968)
!1182 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1183, size: 64)
!1183 = !DISubroutineType(types: !1184)
!1184 = !{null, !216, !1185, !167}
!1185 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1186, size: 64)
!1186 = !DISubroutineType(types: !1187)
!1187 = !{null, !167, !171, !1177, !1177}
!1188 = !DIDerivedType(tag: DW_TAG_member, name: "foreachMappedLoop", scope: !218, file: !6, line: 317, baseType: !1189, size: 64, offset: 12032)
!1189 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1190, size: 64)
!1190 = !DISubroutineType(types: !1191)
!1191 = !{null, !216, !1192, !167, !1180}
!1192 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1193, size: 64)
!1193 = !DISubroutineType(types: !1194)
!1194 = !{null, !167, !171, !171, !1177, !1177}
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "foreachMappedFaceCenter", scope: !218, file: !6, line: 327, baseType: !1196, size: 64, offset: 12096)
!1196 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1197, size: 64)
!1197 = !DISubroutineType(types: !1198)
!1198 = !{null, !216, !1185, !167, !1180}
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "getMinMax", scope: !218, file: !6, line: 337, baseType: !1200, size: 64, offset: 12160)
!1200 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1201, size: 64)
!1201 = !DISubroutineType(types: !1202)
!1202 = !{null, !216, !175, !175}
!1203 = !DIDerivedType(tag: DW_TAG_member, name: "getVertCo", scope: !218, file: !6, line: 344, baseType: !1204, size: 64, offset: 12224)
!1204 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1205, size: 64)
!1205 = !DISubroutineType(types: !1206)
!1206 = !{null, !216, !171, !175}
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "getVertCos", scope: !218, file: !6, line: 347, baseType: !1208, size: 64, offset: 12288)
!1208 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1209, size: 64)
!1209 = !DISubroutineType(types: !1210)
!1210 = !{null, !216, !1211}
!1211 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !426, size: 64)
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "getVertNo", scope: !218, file: !6, line: 350, baseType: !1204, size: 64, offset: 12352)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "getPolyNo", scope: !218, file: !6, line: 351, baseType: !1204, size: 64, offset: 12416)
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "getPolyMap", scope: !218, file: !6, line: 355, baseType: !1215, size: 64, offset: 12480)
!1215 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1216, size: 64)
!1216 = !DISubroutineType(types: !1217)
!1217 = !{!1218, !561, !216}
!1218 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1219, size: 64)
!1219 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1220)
!1220 = !DICompositeType(tag: DW_TAG_structure_type, name: "MeshElemMap", file: !6, line: 355, flags: DIFlagFwdDecl)
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "getPBVH", scope: !218, file: !6, line: 359, baseType: !1222, size: 64, offset: 12544)
!1222 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1223, size: 64)
!1223 = !DISubroutineType(types: !1224)
!1224 = !{!1225, !561, !216}
!1225 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1226, size: 64)
!1226 = !DICompositeType(tag: DW_TAG_structure_type, name: "PBVH", file: !6, line: 100, flags: DIFlagFwdDecl)
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "drawVerts", scope: !218, file: !6, line: 364, baseType: !973, size: 64, offset: 12608)
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "drawUVEdges", scope: !218, file: !6, line: 367, baseType: !973, size: 64, offset: 12672)
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "drawEdges", scope: !218, file: !6, line: 373, baseType: !1230, size: 64, offset: 12736)
!1230 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1231, size: 64)
!1231 = !DISubroutineType(types: !1232)
!1232 = !{null, !216, !166, !166}
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "drawLooseEdges", scope: !218, file: !6, line: 376, baseType: !973, size: 64, offset: 12800)
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "drawFacesSolid", scope: !218, file: !6, line: 385, baseType: !1235, size: 64, offset: 12864)
!1235 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1236, size: 64)
!1236 = !DISubroutineType(types: !1237)
!1237 = !{null, !216, !1238, !166, !1239}
!1238 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !508, size: 64)
!1239 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMSetMaterial", file: !6, line: 146, baseType: !1240)
!1240 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1241, size: 64)
!1241 = !DISubroutineType(types: !1242)
!1242 = !{!171, !171, !167}
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "drawFacesTex", scope: !218, file: !6, line: 391, baseType: !1244, size: 64, offset: 12928)
!1244 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1245, size: 64)
!1245 = !DISubroutineType(types: !1246)
!1246 = !{null, !216, !1247, !1265, !167, !1269}
!1247 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMSetDrawOptionsTex", file: !6, line: 150, baseType: !1248)
!1248 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1249, size: 64)
!1249 = !DISubroutineType(types: !1250)
!1250 = !{!1251, !1252, !1264, !171}
!1251 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMDrawOption", file: !6, line: 143, baseType: !21)
!1252 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1253, size: 64)
!1253 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MTFace", file: !56, line: 160, size: 384, elements: !1254)
!1254 = !{!1255, !1258, !1259, !1260, !1261, !1262, !1263}
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "uv", scope: !1253, file: !56, line: 161, baseType: !1256, size: 256)
!1256 = !DICompositeType(tag: DW_TAG_array_type, baseType: !176, size: 256, elements: !1257)
!1257 = !{!510, !689}
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "tpage", scope: !1253, file: !56, line: 162, baseType: !645, size: 64, offset: 256)
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1253, file: !56, line: 163, baseType: !169, size: 8, offset: 320)
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "transp", scope: !1253, file: !56, line: 163, baseType: !169, size: 8, offset: 328)
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1253, file: !56, line: 164, baseType: !179, size: 16, offset: 336)
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "tile", scope: !1253, file: !56, line: 164, baseType: !179, size: 16, offset: 352)
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "unwrap", scope: !1253, file: !56, line: 164, baseType: !179, size: 16, offset: 368)
!1264 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !166)
!1265 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMCompareDrawOptions", file: !6, line: 147, baseType: !1266)
!1266 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1267, size: 64)
!1267 = !DISubroutineType(types: !1268)
!1268 = !{!171, !167, !171, !171}
!1269 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMDrawFlag", file: !6, line: 157, baseType: !27)
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "drawFacesGLSL", scope: !218, file: !6, line: 400, baseType: !1271, size: 64, offset: 12992)
!1271 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1272, size: 64)
!1272 = !DISubroutineType(types: !1273)
!1273 = !{null, !216, !1239}
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "drawMappedFaces", scope: !218, file: !6, line: 415, baseType: !1275, size: 64, offset: 13056)
!1275 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1276, size: 64)
!1276 = !DISubroutineType(types: !1277)
!1277 = !{null, !216, !1278, !1239, !1265, !167, !1269}
!1278 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMSetDrawOptions", file: !6, line: 149, baseType: !1279)
!1279 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1280, size: 64)
!1280 = !DISubroutineType(types: !1281)
!1281 = !{!1251, !167, !171}
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "drawMappedFacesTex", scope: !218, file: !6, line: 425, baseType: !1283, size: 64, offset: 13120)
!1283 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1284, size: 64)
!1284 = !DISubroutineType(types: !1285)
!1285 = !{null, !216, !1278, !1265, !167, !1269}
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "drawMappedFacesGLSL", scope: !218, file: !6, line: 435, baseType: !1287, size: 64, offset: 13184)
!1287 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1288, size: 64)
!1288 = !DISubroutineType(types: !1289)
!1289 = !{null, !216, !1239, !1278, !167}
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "drawMappedEdges", scope: !218, file: !6, line: 444, baseType: !1291, size: 64, offset: 13248)
!1291 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1292, size: 64)
!1292 = !DISubroutineType(types: !1293)
!1293 = !{null, !216, !1278, !167}
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "drawMappedEdgesInterp", scope: !218, file: !6, line: 455, baseType: !1295, size: 64, offset: 13312)
!1295 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1296, size: 64)
!1296 = !DISubroutineType(types: !1297)
!1297 = !{null, !216, !1278, !1298, !167}
!1298 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMSetDrawInterpOptions", file: !6, line: 148, baseType: !1299)
!1299 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1300, size: 64)
!1300 = !DISubroutineType(types: !1301)
!1301 = !{null, !167, !171, !176}
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "drawMappedFacesMat", scope: !218, file: !6, line: 464, baseType: !1303, size: 64, offset: 13376)
!1303 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1304, size: 64)
!1304 = !DISubroutineType(types: !1305)
!1305 = !{null, !216, !1306, !1309, !167}
!1306 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1307, size: 64)
!1307 = !DISubroutineType(types: !1308)
!1308 = !{null, !167, !171, !167}
!1309 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1310, size: 64)
!1310 = !DISubroutineType(types: !1311)
!1311 = !{!166, !167, !171}
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !218, file: !6, line: 470, baseType: !973, size: 64, offset: 13440)
!1313 = !DIDerivedType(tag: DW_TAG_member, name: "gl_buffer_type", scope: !209, file: !3, line: 995, baseType: !1314, size: 32, offset: 64)
!1314 = !DIDerivedType(tag: DW_TAG_typedef, name: "GLenum", file: !165, line: 270, baseType: !7)
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "vector_size", scope: !209, file: !3, line: 996, baseType: !171, size: 32, offset: 96)
!1316 = !DIGlobalVariableExpression(var: !1317, expr: !DIExpression())
!1317 = distinct !DIGlobalVariable(name: "buffer_mutex", scope: !2, file: !3, line: 83, type: !1318, isLocal: true, isDefinition: true)
!1318 = !DIDerivedType(tag: DW_TAG_typedef, name: "ThreadMutex", file: !1319, line: 107, baseType: !1320)
!1319 = !DIFile(filename: "blender/source/blender/blenlib/BLI_threads.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1320 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !1321, line: 26, baseType: !1322)
!1321 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdint-uintn.h", directory: "")
!1322 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint32_t", file: !1323, line: 42, baseType: !7)
!1323 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "")
!1324 = !DIGlobalVariableExpression(var: !1325, expr: !DIExpression())
!1325 = distinct !DIGlobalVariable(name: "useVBOs", scope: !2, file: !3, line: 79, type: !171, isLocal: true, isDefinition: true)
!1326 = !DIGlobalVariableExpression(var: !1327, expr: !DIExpression())
!1327 = distinct !DIGlobalVariable(name: "GLStates", scope: !2, file: !3, line: 80, type: !1328, isLocal: true, isDefinition: true)
!1328 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPUBufferState", file: !3, line: 72, baseType: !42)
!1329 = !DIGlobalVariableExpression(var: !1330, expr: !DIExpression())
!1330 = distinct !DIGlobalVariable(name: "attribData", scope: !2, file: !3, line: 81, type: !1331, isLocal: true, isDefinition: true)
!1331 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1332, size: 3072, elements: !540)
!1332 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPUAttrib", file: !280, line: 127, baseType: !1333)
!1333 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GPUAttrib", file: !280, line: 123, size: 96, elements: !1334)
!1334 = !{!1335, !1336, !1337}
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1333, file: !280, line: 124, baseType: !171, size: 32)
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1333, file: !280, line: 125, baseType: !171, size: 32, offset: 32)
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1333, file: !280, line: 126, baseType: !171, size: 32, offset: 64)
!1338 = !DIGlobalVariableExpression(var: !1339, expr: !DIExpression())
!1339 = distinct !DIGlobalVariable(name: "prev_gridsize", scope: !1340, file: !3, line: 1980, type: !171, isLocal: true, isDefinition: true)
!1340 = distinct !DISubprogram(name: "gpu_get_grid_buffer", scope: !3, file: !3, line: 1978, type: !1341, scopeLine: 1979, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1345)
!1341 = !DISubroutineType(types: !1342)
!1342 = !{!1343, !171, !1344, !178}
!1343 = !DIDerivedType(tag: DW_TAG_typedef, name: "GLuint", file: !165, line: 272, baseType: !7)
!1344 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1314, size: 64)
!1345 = !{}
!1346 = !DIGlobalVariableExpression(var: !1347, expr: !DIExpression())
!1347 = distinct !DIGlobalVariable(name: "prev_index_type", scope: !1340, file: !3, line: 1981, type: !1314, isLocal: true, isDefinition: true)
!1348 = !DIGlobalVariableExpression(var: !1349, expr: !DIExpression())
!1349 = distinct !DIGlobalVariable(name: "buffer", scope: !1340, file: !3, line: 1982, type: !1343, isLocal: true, isDefinition: true)
!1350 = !DIGlobalVariableExpression(var: !1351, expr: !DIExpression())
!1351 = distinct !DIGlobalVariable(name: "prev_totquad", scope: !1340, file: !3, line: 1983, type: !7, isLocal: true, isDefinition: true)
!1352 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1353, size: 64)
!1353 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPUBufferPool", file: !3, line: 105, baseType: !1354)
!1354 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GPUBufferPool", file: !3, line: 96, size: 256, elements: !1355)
!1355 = !{!1356, !1357, !1358, !1359, !1360, !1362}
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "totbuf", scope: !1354, file: !3, line: 98, baseType: !171, size: 32)
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "totpbvhbufids", scope: !1354, file: !3, line: 99, baseType: !171, size: 32, offset: 32)
!1358 = !DIDerivedType(tag: DW_TAG_member, name: "maxsize", scope: !1354, file: !3, line: 101, baseType: !171, size: 32, offset: 64)
!1359 = !DIDerivedType(tag: DW_TAG_member, name: "maxpbvhsize", scope: !1354, file: !3, line: 102, baseType: !171, size: 32, offset: 96)
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "buffers", scope: !1354, file: !3, line: 103, baseType: !1361, size: 64, offset: 128)
!1361 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !283, size: 64)
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "pbvhbufids", scope: !1354, file: !3, line: 104, baseType: !1363, size: 64, offset: 192)
!1363 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1343, size: 64)
!1364 = !{i32 7, !"Dwarf Version", i32 4}
!1365 = !{i32 2, !"Debug Info Version", i32 3}
!1366 = !{i32 1, !"wchar_size", i32 4}
!1367 = !{!"clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)"}
!1368 = distinct !DISubprogram(name: "GPU_global_buffer_pool_free", scope: !3, file: !3, line: 213, type: !1369, scopeLine: 214, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1345)
!1369 = !DISubroutineType(types: !1370)
!1370 = !{null}
!1371 = !DILocation(line: 215, column: 23, scope: !1368)
!1372 = !DILocation(line: 215, column: 2, scope: !1368)
!1373 = !DILocation(line: 216, column: 18, scope: !1368)
!1374 = !DILocation(line: 217, column: 1, scope: !1368)
!1375 = distinct !DISubprogram(name: "gpu_buffer_pool_free", scope: !3, file: !3, line: 174, type: !1376, scopeLine: 175, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1345)
!1376 = !DISubroutineType(types: !1377)
!1377 = !{null, !1352}
!1378 = !DILocalVariable(name: "pool", arg: 1, scope: !1375, file: !3, line: 174, type: !1352)
!1379 = !DILocation(line: 174, column: 49, scope: !1375)
!1380 = !DILocation(line: 176, column: 7, scope: !1381)
!1381 = distinct !DILexicalBlock(scope: !1375, file: !3, line: 176, column: 6)
!1382 = !DILocation(line: 176, column: 6, scope: !1375)
!1383 = !DILocation(line: 177, column: 3, scope: !1381)
!1384 = !DILocation(line: 179, column: 2, scope: !1375)
!1385 = !DILocation(line: 179, column: 9, scope: !1375)
!1386 = !DILocation(line: 179, column: 15, scope: !1375)
!1387 = !DILocation(line: 180, column: 31, scope: !1375)
!1388 = !DILocation(line: 180, column: 3, scope: !1375)
!1389 = distinct !{!1389, !1384, !1390}
!1390 = !DILocation(line: 180, column: 35, scope: !1375)
!1391 = !DILocation(line: 182, column: 2, scope: !1375)
!1392 = !DILocation(line: 182, column: 12, scope: !1375)
!1393 = !DILocation(line: 182, column: 18, scope: !1375)
!1394 = !DILocation(line: 183, column: 2, scope: !1375)
!1395 = !DILocation(line: 183, column: 12, scope: !1375)
!1396 = !DILocation(line: 183, column: 18, scope: !1375)
!1397 = !DILocation(line: 184, column: 2, scope: !1375)
!1398 = !DILocation(line: 184, column: 12, scope: !1375)
!1399 = !DILocation(line: 185, column: 1, scope: !1375)
!1400 = distinct !DISubprogram(name: "GPU_global_buffer_pool_free_unused", scope: !3, file: !3, line: 219, type: !1369, scopeLine: 220, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1345)
!1401 = !DILocation(line: 221, column: 30, scope: !1400)
!1402 = !DILocation(line: 221, column: 2, scope: !1400)
!1403 = !DILocation(line: 222, column: 1, scope: !1400)
!1404 = distinct !DISubprogram(name: "gpu_buffer_pool_free_unused", scope: !3, file: !3, line: 187, type: !1376, scopeLine: 188, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1345)
!1405 = !DILocalVariable(name: "pool", arg: 1, scope: !1404, file: !3, line: 187, type: !1352)
!1406 = !DILocation(line: 187, column: 56, scope: !1404)
!1407 = !DILocation(line: 189, column: 7, scope: !1408)
!1408 = distinct !DILexicalBlock(scope: !1404, file: !3, line: 189, column: 6)
!1409 = !DILocation(line: 189, column: 6, scope: !1404)
!1410 = !DILocation(line: 190, column: 3, scope: !1408)
!1411 = !DILocation(line: 192, column: 2, scope: !1404)
!1412 = !DILocation(line: 194, column: 2, scope: !1404)
!1413 = !DILocation(line: 194, column: 9, scope: !1404)
!1414 = !DILocation(line: 194, column: 15, scope: !1404)
!1415 = !DILocation(line: 195, column: 31, scope: !1404)
!1416 = !DILocation(line: 195, column: 3, scope: !1404)
!1417 = distinct !{!1417, !1412, !1418}
!1418 = !DILocation(line: 195, column: 35, scope: !1404)
!1419 = !DILocation(line: 197, column: 2, scope: !1404)
!1420 = !DILocation(line: 197, column: 21, scope: !1404)
!1421 = !DILocation(line: 197, column: 27, scope: !1404)
!1422 = !DILocation(line: 197, column: 42, scope: !1404)
!1423 = !DILocation(line: 197, column: 48, scope: !1404)
!1424 = !DILocation(line: 198, column: 2, scope: !1404)
!1425 = !DILocation(line: 198, column: 8, scope: !1404)
!1426 = !DILocation(line: 198, column: 22, scope: !1404)
!1427 = !DILocation(line: 200, column: 2, scope: !1404)
!1428 = !DILocation(line: 201, column: 1, scope: !1404)
!1429 = distinct !DISubprogram(name: "GPU_buffer_alloc", scope: !3, file: !3, line: 310, type: !1430, scopeLine: 311, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1345)
!1430 = !DISubroutineType(types: !1431)
!1431 = !{!283, !171}
!1432 = !DILocalVariable(name: "size", arg: 1, scope: !1429, file: !3, line: 310, type: !171)
!1433 = !DILocation(line: 310, column: 33, scope: !1429)
!1434 = !DILocalVariable(name: "buffer", scope: !1429, file: !3, line: 312, type: !283)
!1435 = !DILocation(line: 312, column: 13, scope: !1429)
!1436 = !DILocation(line: 314, column: 6, scope: !1437)
!1437 = distinct !DILexicalBlock(scope: !1429, file: !3, line: 314, column: 6)
!1438 = !DILocation(line: 314, column: 11, scope: !1437)
!1439 = !DILocation(line: 314, column: 6, scope: !1429)
!1440 = !DILocation(line: 316, column: 3, scope: !1441)
!1441 = distinct !DILexicalBlock(scope: !1437, file: !3, line: 314, column: 17)
!1442 = !DILocation(line: 319, column: 2, scope: !1429)
!1443 = !DILocation(line: 320, column: 35, scope: !1429)
!1444 = !DILocation(line: 320, column: 11, scope: !1429)
!1445 = !DILocation(line: 320, column: 9, scope: !1429)
!1446 = !DILocation(line: 321, column: 2, scope: !1429)
!1447 = !DILocation(line: 323, column: 9, scope: !1429)
!1448 = !DILocation(line: 323, column: 2, scope: !1429)
!1449 = !DILocation(line: 324, column: 1, scope: !1429)
!1450 = distinct !DISubprogram(name: "gpu_buffer_alloc_intern", scope: !3, file: !3, line: 229, type: !1430, scopeLine: 230, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1345)
!1451 = !DILocalVariable(name: "size", arg: 1, scope: !1450, file: !3, line: 229, type: !171)
!1452 = !DILocation(line: 229, column: 47, scope: !1450)
!1453 = !DILocalVariable(name: "pool", scope: !1450, file: !3, line: 231, type: !1352)
!1454 = !DILocation(line: 231, column: 17, scope: !1450)
!1455 = !DILocalVariable(name: "buf", scope: !1450, file: !3, line: 232, type: !283)
!1456 = !DILocation(line: 232, column: 13, scope: !1450)
!1457 = !DILocalVariable(name: "i", scope: !1450, file: !3, line: 233, type: !171)
!1458 = !DILocation(line: 233, column: 6, scope: !1450)
!1459 = !DILocalVariable(name: "bufsize", scope: !1450, file: !3, line: 233, type: !171)
!1460 = !DILocation(line: 233, column: 9, scope: !1450)
!1461 = !DILocalVariable(name: "bestfit", scope: !1450, file: !3, line: 233, type: !171)
!1462 = !DILocation(line: 233, column: 18, scope: !1450)
!1463 = !DILocation(line: 238, column: 6, scope: !1464)
!1464 = distinct !DILexicalBlock(scope: !1450, file: !3, line: 238, column: 6)
!1465 = !DILocation(line: 238, column: 11, scope: !1464)
!1466 = !DILocation(line: 238, column: 6, scope: !1450)
!1467 = !DILocation(line: 239, column: 3, scope: !1464)
!1468 = !DILocation(line: 241, column: 9, scope: !1450)
!1469 = !DILocation(line: 241, column: 7, scope: !1450)
!1470 = !DILocation(line: 251, column: 9, scope: !1471)
!1471 = distinct !DILexicalBlock(scope: !1450, file: !3, line: 251, column: 2)
!1472 = !DILocation(line: 251, column: 7, scope: !1471)
!1473 = !DILocation(line: 251, column: 14, scope: !1474)
!1474 = distinct !DILexicalBlock(scope: !1471, file: !3, line: 251, column: 2)
!1475 = !DILocation(line: 251, column: 18, scope: !1474)
!1476 = !DILocation(line: 251, column: 24, scope: !1474)
!1477 = !DILocation(line: 251, column: 16, scope: !1474)
!1478 = !DILocation(line: 251, column: 2, scope: !1471)
!1479 = !DILocation(line: 252, column: 13, scope: !1480)
!1480 = distinct !DILexicalBlock(scope: !1474, file: !3, line: 251, column: 37)
!1481 = !DILocation(line: 252, column: 19, scope: !1480)
!1482 = !DILocation(line: 252, column: 27, scope: !1480)
!1483 = !DILocation(line: 252, column: 31, scope: !1480)
!1484 = !DILocation(line: 252, column: 11, scope: !1480)
!1485 = !DILocation(line: 255, column: 7, scope: !1486)
!1486 = distinct !DILexicalBlock(scope: !1480, file: !3, line: 255, column: 7)
!1487 = !DILocation(line: 255, column: 18, scope: !1486)
!1488 = !DILocation(line: 255, column: 15, scope: !1486)
!1489 = !DILocation(line: 255, column: 7, scope: !1480)
!1490 = !DILocation(line: 256, column: 14, scope: !1491)
!1491 = distinct !DILexicalBlock(scope: !1486, file: !3, line: 255, column: 24)
!1492 = !DILocation(line: 256, column: 12, scope: !1491)
!1493 = !DILocation(line: 257, column: 4, scope: !1491)
!1494 = !DILocation(line: 261, column: 12, scope: !1495)
!1495 = distinct !DILexicalBlock(scope: !1486, file: !3, line: 261, column: 12)
!1496 = !DILocation(line: 261, column: 22, scope: !1495)
!1497 = !DILocation(line: 261, column: 20, scope: !1495)
!1498 = !DILocation(line: 261, column: 27, scope: !1495)
!1499 = !DILocation(line: 261, column: 30, scope: !1495)
!1500 = !DILocation(line: 261, column: 38, scope: !1495)
!1501 = !DILocation(line: 261, column: 46, scope: !1495)
!1502 = !DILocation(line: 261, column: 35, scope: !1495)
!1503 = !DILocation(line: 261, column: 12, scope: !1486)
!1504 = !DILocation(line: 265, column: 8, scope: !1505)
!1505 = distinct !DILexicalBlock(scope: !1506, file: !3, line: 265, column: 8)
!1506 = distinct !DILexicalBlock(scope: !1495, file: !3, line: 261, column: 52)
!1507 = !DILocation(line: 265, column: 16, scope: !1505)
!1508 = !DILocation(line: 265, column: 22, scope: !1505)
!1509 = !DILocation(line: 265, column: 25, scope: !1505)
!1510 = !DILocation(line: 265, column: 31, scope: !1505)
!1511 = !DILocation(line: 265, column: 39, scope: !1505)
!1512 = !DILocation(line: 265, column: 49, scope: !1505)
!1513 = !DILocation(line: 265, column: 56, scope: !1505)
!1514 = !DILocation(line: 265, column: 54, scope: !1505)
!1515 = !DILocation(line: 265, column: 8, scope: !1506)
!1516 = !DILocation(line: 266, column: 15, scope: !1517)
!1517 = distinct !DILexicalBlock(scope: !1505, file: !3, line: 265, column: 65)
!1518 = !DILocation(line: 266, column: 13, scope: !1517)
!1519 = !DILocation(line: 267, column: 4, scope: !1517)
!1520 = !DILocation(line: 268, column: 3, scope: !1506)
!1521 = !DILocation(line: 269, column: 2, scope: !1480)
!1522 = !DILocation(line: 251, column: 33, scope: !1474)
!1523 = !DILocation(line: 251, column: 2, scope: !1474)
!1524 = distinct !{!1524, !1478, !1525}
!1525 = !DILocation(line: 269, column: 2, scope: !1471)
!1526 = !DILocation(line: 273, column: 6, scope: !1527)
!1527 = distinct !DILexicalBlock(scope: !1450, file: !3, line: 273, column: 6)
!1528 = !DILocation(line: 273, column: 14, scope: !1527)
!1529 = !DILocation(line: 273, column: 6, scope: !1450)
!1530 = !DILocation(line: 274, column: 9, scope: !1531)
!1531 = distinct !DILexicalBlock(scope: !1527, file: !3, line: 273, column: 21)
!1532 = !DILocation(line: 274, column: 15, scope: !1531)
!1533 = !DILocation(line: 274, column: 23, scope: !1531)
!1534 = !DILocation(line: 274, column: 7, scope: !1531)
!1535 = !DILocation(line: 275, column: 32, scope: !1531)
!1536 = !DILocation(line: 275, column: 38, scope: !1531)
!1537 = !DILocation(line: 275, column: 3, scope: !1531)
!1538 = !DILocation(line: 276, column: 10, scope: !1531)
!1539 = !DILocation(line: 276, column: 3, scope: !1531)
!1540 = !DILocation(line: 280, column: 8, scope: !1450)
!1541 = !DILocation(line: 280, column: 6, scope: !1450)
!1542 = !DILocation(line: 281, column: 14, scope: !1450)
!1543 = !DILocation(line: 281, column: 2, scope: !1450)
!1544 = !DILocation(line: 281, column: 7, scope: !1450)
!1545 = !DILocation(line: 281, column: 12, scope: !1450)
!1546 = !DILocation(line: 283, column: 6, scope: !1547)
!1547 = distinct !DILexicalBlock(scope: !1450, file: !3, line: 283, column: 6)
!1548 = !DILocation(line: 283, column: 14, scope: !1547)
!1549 = !DILocation(line: 283, column: 6, scope: !1450)
!1550 = !DILocation(line: 286, column: 3, scope: !1551)
!1551 = distinct !DILexicalBlock(scope: !1547, file: !3, line: 283, column: 20)
!1552 = !DILocation(line: 286, column: 23, scope: !1551)
!1553 = !DILocation(line: 286, column: 28, scope: !1551)
!1554 = !DILocation(line: 287, column: 3, scope: !1551)
!1555 = !DILocation(line: 287, column: 40, scope: !1551)
!1556 = !DILocation(line: 287, column: 45, scope: !1551)
!1557 = !DILocation(line: 288, column: 3, scope: !1551)
!1558 = !DILocation(line: 288, column: 40, scope: !1551)
!1559 = !DILocation(line: 289, column: 3, scope: !1551)
!1560 = !DILocation(line: 290, column: 2, scope: !1551)
!1561 = !DILocation(line: 292, column: 18, scope: !1562)
!1562 = distinct !DILexicalBlock(scope: !1547, file: !3, line: 291, column: 7)
!1563 = !DILocation(line: 292, column: 30, scope: !1562)
!1564 = !DILocation(line: 292, column: 3, scope: !1562)
!1565 = !DILocation(line: 292, column: 8, scope: !1562)
!1566 = !DILocation(line: 292, column: 16, scope: !1562)
!1567 = !DILocation(line: 298, column: 3, scope: !1562)
!1568 = !DILocation(line: 298, column: 11, scope: !1562)
!1569 = !DILocation(line: 298, column: 16, scope: !1562)
!1570 = !DILocation(line: 298, column: 24, scope: !1562)
!1571 = !DILocation(line: 298, column: 27, scope: !1562)
!1572 = !DILocation(line: 298, column: 33, scope: !1562)
!1573 = !DILocation(line: 298, column: 40, scope: !1562)
!1574 = !DILocation(line: 0, scope: !1562)
!1575 = !DILocation(line: 299, column: 32, scope: !1576)
!1576 = distinct !DILexicalBlock(scope: !1562, file: !3, line: 298, column: 45)
!1577 = !DILocation(line: 299, column: 4, scope: !1576)
!1578 = !DILocation(line: 300, column: 19, scope: !1576)
!1579 = !DILocation(line: 300, column: 31, scope: !1576)
!1580 = !DILocation(line: 300, column: 4, scope: !1576)
!1581 = !DILocation(line: 300, column: 9, scope: !1576)
!1582 = !DILocation(line: 300, column: 17, scope: !1576)
!1583 = distinct !{!1583, !1567, !1584}
!1584 = !DILocation(line: 301, column: 3, scope: !1562)
!1585 = !DILocation(line: 302, column: 8, scope: !1586)
!1586 = distinct !DILexicalBlock(scope: !1562, file: !3, line: 302, column: 7)
!1587 = !DILocation(line: 302, column: 13, scope: !1586)
!1588 = !DILocation(line: 302, column: 7, scope: !1562)
!1589 = !DILocation(line: 303, column: 4, scope: !1586)
!1590 = !DILocation(line: 306, column: 9, scope: !1450)
!1591 = !DILocation(line: 306, column: 2, scope: !1450)
!1592 = !DILocation(line: 307, column: 1, scope: !1450)
!1593 = distinct !DISubprogram(name: "GPU_buffer_free", scope: !3, file: !3, line: 372, type: !1594, scopeLine: 373, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1345)
!1594 = !DISubroutineType(types: !1595)
!1595 = !{null, !283}
!1596 = !DILocalVariable(name: "buffer", arg: 1, scope: !1593, file: !3, line: 372, type: !283)
!1597 = !DILocation(line: 372, column: 33, scope: !1593)
!1598 = !DILocation(line: 374, column: 7, scope: !1599)
!1599 = distinct !DILexicalBlock(scope: !1593, file: !3, line: 374, column: 6)
!1600 = !DILocation(line: 374, column: 6, scope: !1593)
!1601 = !DILocation(line: 376, column: 3, scope: !1602)
!1602 = distinct !DILexicalBlock(scope: !1599, file: !3, line: 374, column: 15)
!1603 = !DILocation(line: 379, column: 2, scope: !1593)
!1604 = !DILocation(line: 380, column: 25, scope: !1593)
!1605 = !DILocation(line: 380, column: 2, scope: !1593)
!1606 = !DILocation(line: 381, column: 2, scope: !1593)
!1607 = !DILocation(line: 382, column: 1, scope: !1593)
!1608 = distinct !DISubprogram(name: "gpu_buffer_free_intern", scope: !3, file: !3, line: 332, type: !1594, scopeLine: 333, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1345)
!1609 = !DILocalVariable(name: "buffer", arg: 1, scope: !1608, file: !3, line: 332, type: !283)
!1610 = !DILocation(line: 332, column: 47, scope: !1608)
!1611 = !DILocalVariable(name: "pool", scope: !1608, file: !3, line: 334, type: !1352)
!1612 = !DILocation(line: 334, column: 17, scope: !1608)
!1613 = !DILocalVariable(name: "i", scope: !1608, file: !3, line: 335, type: !171)
!1614 = !DILocation(line: 335, column: 6, scope: !1608)
!1615 = !DILocation(line: 337, column: 7, scope: !1616)
!1616 = distinct !DILexicalBlock(scope: !1608, file: !3, line: 337, column: 6)
!1617 = !DILocation(line: 337, column: 6, scope: !1608)
!1618 = !DILocation(line: 338, column: 3, scope: !1616)
!1619 = !DILocation(line: 340, column: 9, scope: !1608)
!1620 = !DILocation(line: 340, column: 7, scope: !1608)
!1621 = !DILocation(line: 346, column: 6, scope: !1622)
!1622 = distinct !DILexicalBlock(scope: !1608, file: !3, line: 346, column: 6)
!1623 = !DILocation(line: 346, column: 6, scope: !1608)
!1624 = !DILocation(line: 349, column: 3, scope: !1625)
!1625 = distinct !DILexicalBlock(scope: !1622, file: !3, line: 346, column: 28)
!1626 = !DILocation(line: 349, column: 10, scope: !1625)
!1627 = !DILocation(line: 349, column: 16, scope: !1625)
!1628 = !DILocation(line: 349, column: 23, scope: !1625)
!1629 = !DILocation(line: 350, column: 32, scope: !1625)
!1630 = !DILocation(line: 350, column: 4, scope: !1625)
!1631 = distinct !{!1631, !1624, !1632}
!1632 = !DILocation(line: 350, column: 36, scope: !1625)
!1633 = !DILocation(line: 351, column: 2, scope: !1625)
!1634 = !DILocation(line: 355, column: 7, scope: !1635)
!1635 = distinct !DILexicalBlock(scope: !1636, file: !3, line: 355, column: 7)
!1636 = distinct !DILexicalBlock(scope: !1622, file: !3, line: 352, column: 7)
!1637 = !DILocation(line: 355, column: 13, scope: !1635)
!1638 = !DILocation(line: 355, column: 24, scope: !1635)
!1639 = !DILocation(line: 355, column: 30, scope: !1635)
!1640 = !DILocation(line: 355, column: 21, scope: !1635)
!1641 = !DILocation(line: 355, column: 7, scope: !1636)
!1642 = !DILocation(line: 356, column: 4, scope: !1643)
!1643 = distinct !DILexicalBlock(scope: !1635, file: !3, line: 355, column: 38)
!1644 = !DILocation(line: 356, column: 10, scope: !1643)
!1645 = !DILocation(line: 356, column: 18, scope: !1643)
!1646 = !DILocation(line: 357, column: 20, scope: !1643)
!1647 = !DILocation(line: 357, column: 4, scope: !1643)
!1648 = !DILocation(line: 357, column: 10, scope: !1643)
!1649 = !DILocation(line: 357, column: 18, scope: !1643)
!1650 = !DILocation(line: 359, column: 3, scope: !1643)
!1651 = !DILocation(line: 363, column: 11, scope: !1652)
!1652 = distinct !DILexicalBlock(scope: !1608, file: !3, line: 363, column: 2)
!1653 = !DILocation(line: 363, column: 17, scope: !1652)
!1654 = !DILocation(line: 363, column: 9, scope: !1652)
!1655 = !DILocation(line: 363, column: 7, scope: !1652)
!1656 = !DILocation(line: 363, column: 25, scope: !1657)
!1657 = distinct !DILexicalBlock(scope: !1652, file: !3, line: 363, column: 2)
!1658 = !DILocation(line: 363, column: 27, scope: !1657)
!1659 = !DILocation(line: 363, column: 2, scope: !1652)
!1660 = !DILocation(line: 364, column: 22, scope: !1657)
!1661 = !DILocation(line: 364, column: 28, scope: !1657)
!1662 = !DILocation(line: 364, column: 36, scope: !1657)
!1663 = !DILocation(line: 364, column: 38, scope: !1657)
!1664 = !DILocation(line: 364, column: 3, scope: !1657)
!1665 = !DILocation(line: 364, column: 9, scope: !1657)
!1666 = !DILocation(line: 364, column: 17, scope: !1657)
!1667 = !DILocation(line: 364, column: 20, scope: !1657)
!1668 = !DILocation(line: 363, column: 33, scope: !1657)
!1669 = !DILocation(line: 363, column: 2, scope: !1657)
!1670 = distinct !{!1670, !1659, !1671}
!1671 = !DILocation(line: 364, column: 41, scope: !1652)
!1672 = !DILocation(line: 367, column: 21, scope: !1608)
!1673 = !DILocation(line: 367, column: 2, scope: !1608)
!1674 = !DILocation(line: 367, column: 8, scope: !1608)
!1675 = !DILocation(line: 367, column: 19, scope: !1608)
!1676 = !DILocation(line: 368, column: 2, scope: !1608)
!1677 = !DILocation(line: 368, column: 8, scope: !1608)
!1678 = !DILocation(line: 368, column: 14, scope: !1608)
!1679 = !DILocation(line: 369, column: 1, scope: !1608)
!1680 = distinct !DISubprogram(name: "GPU_drawobject_new", scope: !3, file: !3, line: 505, type: !1681, scopeLine: 506, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1345)
!1681 = !DISubroutineType(types: !1682)
!1682 = !{!1683, !216}
!1683 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1684, size: 64)
!1684 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPUDrawObject", file: !280, line: 120, baseType: !279)
!1685 = !DILocalVariable(name: "dm", arg: 1, scope: !1680, file: !3, line: 505, type: !216)
!1686 = !DILocation(line: 505, column: 48, scope: !1680)
!1687 = !DILocalVariable(name: "gdo", scope: !1680, file: !3, line: 507, type: !1683)
!1688 = !DILocation(line: 507, column: 17, scope: !1680)
!1689 = !DILocalVariable(name: "mface", scope: !1680, file: !3, line: 508, type: !1690)
!1690 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1691, size: 64)
!1691 = !DIDerivedType(tag: DW_TAG_typedef, name: "MFace", file: !56, line: 46, baseType: !1018)
!1692 = !DILocation(line: 508, column: 9, scope: !1680)
!1693 = !DILocalVariable(name: "totmat", scope: !1680, file: !3, line: 509, type: !171)
!1694 = !DILocation(line: 509, column: 6, scope: !1680)
!1695 = !DILocation(line: 509, column: 15, scope: !1680)
!1696 = !DILocation(line: 509, column: 19, scope: !1680)
!1697 = !DILocalVariable(name: "points_per_mat", scope: !1680, file: !3, line: 510, type: !170)
!1698 = !DILocation(line: 510, column: 7, scope: !1680)
!1699 = !DILocalVariable(name: "i", scope: !1680, file: !3, line: 511, type: !171)
!1700 = !DILocation(line: 511, column: 6, scope: !1680)
!1701 = !DILocalVariable(name: "curmat", scope: !1680, file: !3, line: 511, type: !171)
!1702 = !DILocation(line: 511, column: 9, scope: !1680)
!1703 = !DILocalVariable(name: "curpoint", scope: !1680, file: !3, line: 511, type: !171)
!1704 = !DILocation(line: 511, column: 17, scope: !1680)
!1705 = !DILocalVariable(name: "totface", scope: !1680, file: !3, line: 511, type: !171)
!1706 = !DILocation(line: 511, column: 27, scope: !1680)
!1707 = !DILocation(line: 516, column: 10, scope: !1680)
!1708 = !DILocation(line: 516, column: 14, scope: !1680)
!1709 = !DILocation(line: 516, column: 31, scope: !1680)
!1710 = !DILocation(line: 516, column: 8, scope: !1680)
!1711 = !DILocation(line: 517, column: 12, scope: !1680)
!1712 = !DILocation(line: 517, column: 16, scope: !1680)
!1713 = !DILocation(line: 517, column: 32, scope: !1680)
!1714 = !DILocation(line: 517, column: 10, scope: !1680)
!1715 = !DILocation(line: 521, column: 19, scope: !1680)
!1716 = !DILocation(line: 521, column: 57, scope: !1680)
!1717 = !DILocation(line: 521, column: 55, scope: !1680)
!1718 = !DILocation(line: 521, column: 17, scope: !1680)
!1719 = !DILocation(line: 522, column: 9, scope: !1720)
!1720 = distinct !DILexicalBlock(scope: !1680, file: !3, line: 522, column: 2)
!1721 = !DILocation(line: 522, column: 7, scope: !1720)
!1722 = !DILocation(line: 522, column: 14, scope: !1723)
!1723 = distinct !DILexicalBlock(scope: !1720, file: !3, line: 522, column: 2)
!1724 = !DILocation(line: 522, column: 18, scope: !1723)
!1725 = !DILocation(line: 522, column: 16, scope: !1723)
!1726 = !DILocation(line: 522, column: 2, scope: !1720)
!1727 = !DILocation(line: 523, column: 38, scope: !1723)
!1728 = !DILocation(line: 523, column: 44, scope: !1723)
!1729 = !DILocation(line: 523, column: 47, scope: !1723)
!1730 = !DILocation(line: 523, column: 3, scope: !1723)
!1731 = !DILocation(line: 523, column: 18, scope: !1723)
!1732 = !DILocation(line: 523, column: 24, scope: !1723)
!1733 = !DILocation(line: 523, column: 27, scope: !1723)
!1734 = !DILocation(line: 523, column: 35, scope: !1723)
!1735 = !DILocation(line: 522, column: 28, scope: !1723)
!1736 = !DILocation(line: 522, column: 2, scope: !1723)
!1737 = distinct !{!1737, !1726, !1738}
!1738 = !DILocation(line: 523, column: 56, scope: !1720)
!1739 = !DILocation(line: 526, column: 8, scope: !1680)
!1740 = !DILocation(line: 526, column: 6, scope: !1680)
!1741 = !DILocation(line: 527, column: 17, scope: !1680)
!1742 = !DILocation(line: 527, column: 21, scope: !1680)
!1743 = !DILocation(line: 527, column: 33, scope: !1680)
!1744 = !DILocation(line: 527, column: 2, scope: !1680)
!1745 = !DILocation(line: 527, column: 7, scope: !1680)
!1746 = !DILocation(line: 527, column: 15, scope: !1680)
!1747 = !DILocation(line: 528, column: 17, scope: !1680)
!1748 = !DILocation(line: 528, column: 21, scope: !1680)
!1749 = !DILocation(line: 528, column: 33, scope: !1680)
!1750 = !DILocation(line: 528, column: 2, scope: !1680)
!1751 = !DILocation(line: 528, column: 7, scope: !1680)
!1752 = !DILocation(line: 528, column: 15, scope: !1680)
!1753 = !DILocation(line: 531, column: 9, scope: !1754)
!1754 = distinct !DILexicalBlock(scope: !1680, file: !3, line: 531, column: 2)
!1755 = !DILocation(line: 531, column: 7, scope: !1754)
!1756 = !DILocation(line: 531, column: 14, scope: !1757)
!1757 = distinct !DILexicalBlock(scope: !1754, file: !3, line: 531, column: 2)
!1758 = !DILocation(line: 531, column: 18, scope: !1757)
!1759 = !DILocation(line: 531, column: 16, scope: !1757)
!1760 = !DILocation(line: 531, column: 2, scope: !1754)
!1761 = !DILocation(line: 532, column: 7, scope: !1762)
!1762 = distinct !DILexicalBlock(scope: !1763, file: !3, line: 532, column: 7)
!1763 = distinct !DILexicalBlock(scope: !1757, file: !3, line: 531, column: 31)
!1764 = !DILocation(line: 532, column: 22, scope: !1762)
!1765 = !DILocation(line: 532, column: 25, scope: !1762)
!1766 = !DILocation(line: 532, column: 7, scope: !1763)
!1767 = !DILocation(line: 533, column: 4, scope: !1762)
!1768 = !DILocation(line: 533, column: 9, scope: !1762)
!1769 = !DILocation(line: 533, column: 20, scope: !1762)
!1770 = !DILocation(line: 534, column: 2, scope: !1763)
!1771 = !DILocation(line: 531, column: 27, scope: !1757)
!1772 = !DILocation(line: 531, column: 2, scope: !1757)
!1773 = distinct !{!1773, !1760, !1774}
!1774 = !DILocation(line: 534, column: 2, scope: !1754)
!1775 = !DILocation(line: 537, column: 19, scope: !1680)
!1776 = !DILocation(line: 537, column: 59, scope: !1680)
!1777 = !DILocation(line: 537, column: 64, scope: !1680)
!1778 = !DILocation(line: 537, column: 57, scope: !1680)
!1779 = !DILocation(line: 537, column: 2, scope: !1680)
!1780 = !DILocation(line: 537, column: 7, scope: !1680)
!1781 = !DILocation(line: 537, column: 17, scope: !1680)
!1782 = !DILocation(line: 541, column: 9, scope: !1783)
!1783 = distinct !DILexicalBlock(scope: !1680, file: !3, line: 541, column: 2)
!1784 = !DILocation(line: 541, column: 21, scope: !1783)
!1785 = !DILocation(line: 541, column: 35, scope: !1783)
!1786 = !DILocation(line: 541, column: 7, scope: !1783)
!1787 = !DILocation(line: 541, column: 40, scope: !1788)
!1788 = distinct !DILexicalBlock(scope: !1783, file: !3, line: 541, column: 2)
!1789 = !DILocation(line: 541, column: 44, scope: !1788)
!1790 = !DILocation(line: 541, column: 42, scope: !1788)
!1791 = !DILocation(line: 541, column: 2, scope: !1783)
!1792 = !DILocation(line: 542, column: 7, scope: !1793)
!1793 = distinct !DILexicalBlock(scope: !1794, file: !3, line: 542, column: 7)
!1794 = distinct !DILexicalBlock(scope: !1788, file: !3, line: 541, column: 57)
!1795 = !DILocation(line: 542, column: 22, scope: !1793)
!1796 = !DILocation(line: 542, column: 25, scope: !1793)
!1797 = !DILocation(line: 542, column: 7, scope: !1794)
!1798 = !DILocation(line: 543, column: 35, scope: !1799)
!1799 = distinct !DILexicalBlock(scope: !1793, file: !3, line: 542, column: 30)
!1800 = !DILocation(line: 543, column: 4, scope: !1799)
!1801 = !DILocation(line: 543, column: 9, scope: !1799)
!1802 = !DILocation(line: 543, column: 19, scope: !1799)
!1803 = !DILocation(line: 543, column: 27, scope: !1799)
!1804 = !DILocation(line: 543, column: 33, scope: !1799)
!1805 = !DILocation(line: 544, column: 4, scope: !1799)
!1806 = !DILocation(line: 544, column: 9, scope: !1799)
!1807 = !DILocation(line: 544, column: 19, scope: !1799)
!1808 = !DILocation(line: 544, column: 27, scope: !1799)
!1809 = !DILocation(line: 544, column: 36, scope: !1799)
!1810 = !DILocation(line: 545, column: 36, scope: !1799)
!1811 = !DILocation(line: 545, column: 4, scope: !1799)
!1812 = !DILocation(line: 545, column: 9, scope: !1799)
!1813 = !DILocation(line: 545, column: 19, scope: !1799)
!1814 = !DILocation(line: 545, column: 27, scope: !1799)
!1815 = !DILocation(line: 545, column: 34, scope: !1799)
!1816 = !DILocation(line: 547, column: 16, scope: !1799)
!1817 = !DILocation(line: 547, column: 31, scope: !1799)
!1818 = !DILocation(line: 547, column: 13, scope: !1799)
!1819 = !DILocation(line: 548, column: 10, scope: !1799)
!1820 = !DILocation(line: 549, column: 3, scope: !1799)
!1821 = !DILocation(line: 550, column: 2, scope: !1794)
!1822 = !DILocation(line: 541, column: 53, scope: !1788)
!1823 = !DILocation(line: 541, column: 2, scope: !1788)
!1824 = distinct !{!1824, !1791, !1825}
!1825 = !DILocation(line: 550, column: 2, scope: !1783)
!1826 = !DILocation(line: 553, column: 28, scope: !1680)
!1827 = !DILocation(line: 553, column: 2, scope: !1680)
!1828 = !DILocation(line: 553, column: 7, scope: !1680)
!1829 = !DILocation(line: 553, column: 26, scope: !1680)
!1830 = !DILocation(line: 555, column: 27, scope: !1680)
!1831 = !DILocation(line: 555, column: 54, scope: !1680)
!1832 = !DILocation(line: 555, column: 59, scope: !1680)
!1833 = !DILocation(line: 555, column: 78, scope: !1680)
!1834 = !DILocation(line: 555, column: 53, scope: !1680)
!1835 = !DILocation(line: 555, column: 51, scope: !1680)
!1836 = !DILocation(line: 555, column: 2, scope: !1680)
!1837 = !DILocation(line: 555, column: 7, scope: !1680)
!1838 = !DILocation(line: 555, column: 25, scope: !1680)
!1839 = !DILocation(line: 558, column: 34, scope: !1680)
!1840 = !DILocation(line: 558, column: 39, scope: !1680)
!1841 = !DILocation(line: 558, column: 46, scope: !1680)
!1842 = !DILocation(line: 558, column: 55, scope: !1680)
!1843 = !DILocation(line: 558, column: 2, scope: !1680)
!1844 = !DILocation(line: 559, column: 2, scope: !1680)
!1845 = !DILocation(line: 559, column: 12, scope: !1680)
!1846 = !DILocation(line: 561, column: 9, scope: !1680)
!1847 = !DILocation(line: 561, column: 2, scope: !1680)
!1848 = distinct !DISubprogram(name: "gpu_drawobject_init_vert_points", scope: !3, file: !3, line: 447, type: !1849, scopeLine: 448, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1345)
!1849 = !DISubroutineType(types: !1850)
!1850 = !{null, !1683, !1690, !171, !171}
!1851 = !DILocalVariable(name: "gdo", arg: 1, scope: !1848, file: !3, line: 447, type: !1683)
!1852 = !DILocation(line: 447, column: 60, scope: !1848)
!1853 = !DILocalVariable(name: "f", arg: 2, scope: !1848, file: !3, line: 447, type: !1690)
!1854 = !DILocation(line: 447, column: 72, scope: !1848)
!1855 = !DILocalVariable(name: "totface", arg: 3, scope: !1848, file: !3, line: 447, type: !171)
!1856 = !DILocation(line: 447, column: 79, scope: !1848)
!1857 = !DILocalVariable(name: "totmat", arg: 4, scope: !1848, file: !3, line: 447, type: !171)
!1858 = !DILocation(line: 447, column: 92, scope: !1848)
!1859 = !DILocalVariable(name: "mat", scope: !1848, file: !3, line: 449, type: !303)
!1860 = !DILocation(line: 449, column: 21, scope: !1848)
!1861 = !DILocalVariable(name: "i", scope: !1848, file: !3, line: 450, type: !171)
!1862 = !DILocation(line: 450, column: 6, scope: !1848)
!1863 = !DILocalVariable(name: "mat_orig_to_new", scope: !1848, file: !3, line: 450, type: !170)
!1864 = !DILocation(line: 450, column: 10, scope: !1848)
!1865 = !DILocation(line: 452, column: 20, scope: !1848)
!1866 = !DILocation(line: 452, column: 59, scope: !1848)
!1867 = !DILocation(line: 452, column: 57, scope: !1848)
!1868 = !DILocation(line: 452, column: 18, scope: !1848)
!1869 = !DILocation(line: 455, column: 21, scope: !1848)
!1870 = !DILocation(line: 455, column: 60, scope: !1848)
!1871 = !DILocation(line: 455, column: 65, scope: !1848)
!1872 = !DILocation(line: 455, column: 58, scope: !1848)
!1873 = !DILocation(line: 455, column: 2, scope: !1848)
!1874 = !DILocation(line: 455, column: 7, scope: !1848)
!1875 = !DILocation(line: 455, column: 19, scope: !1848)
!1876 = !DILocation(line: 465, column: 9, scope: !1877)
!1877 = distinct !DILexicalBlock(scope: !1848, file: !3, line: 465, column: 2)
!1878 = !DILocation(line: 465, column: 7, scope: !1877)
!1879 = !DILocation(line: 465, column: 14, scope: !1880)
!1880 = distinct !DILexicalBlock(scope: !1877, file: !3, line: 465, column: 2)
!1881 = !DILocation(line: 465, column: 18, scope: !1880)
!1882 = !DILocation(line: 465, column: 23, scope: !1880)
!1883 = !DILocation(line: 465, column: 16, scope: !1880)
!1884 = !DILocation(line: 465, column: 2, scope: !1877)
!1885 = !DILocation(line: 466, column: 47, scope: !1880)
!1886 = !DILocation(line: 466, column: 3, scope: !1880)
!1887 = !DILocation(line: 466, column: 19, scope: !1880)
!1888 = !DILocation(line: 466, column: 24, scope: !1880)
!1889 = !DILocation(line: 466, column: 34, scope: !1880)
!1890 = !DILocation(line: 466, column: 37, scope: !1880)
!1891 = !DILocation(line: 466, column: 45, scope: !1880)
!1892 = !DILocation(line: 465, column: 37, scope: !1880)
!1893 = !DILocation(line: 465, column: 2, scope: !1880)
!1894 = distinct !{!1894, !1884, !1895}
!1895 = !DILocation(line: 466, column: 47, scope: !1877)
!1896 = !DILocation(line: 469, column: 9, scope: !1897)
!1897 = distinct !DILexicalBlock(scope: !1848, file: !3, line: 469, column: 2)
!1898 = !DILocation(line: 469, column: 7, scope: !1897)
!1899 = !DILocation(line: 469, column: 14, scope: !1900)
!1900 = distinct !DILexicalBlock(scope: !1897, file: !3, line: 469, column: 2)
!1901 = !DILocation(line: 469, column: 18, scope: !1900)
!1902 = !DILocation(line: 469, column: 23, scope: !1900)
!1903 = !DILocation(line: 469, column: 16, scope: !1900)
!1904 = !DILocation(line: 469, column: 2, scope: !1897)
!1905 = !DILocation(line: 473, column: 3, scope: !1906)
!1906 = distinct !DILexicalBlock(scope: !1900, file: !3, line: 469, column: 37)
!1907 = !DILocation(line: 473, column: 8, scope: !1906)
!1908 = !DILocation(line: 473, column: 20, scope: !1906)
!1909 = !DILocation(line: 473, column: 23, scope: !1906)
!1910 = !DILocation(line: 473, column: 35, scope: !1906)
!1911 = !DILocation(line: 474, column: 2, scope: !1906)
!1912 = !DILocation(line: 469, column: 33, scope: !1900)
!1913 = !DILocation(line: 469, column: 2, scope: !1900)
!1914 = distinct !{!1914, !1904, !1915}
!1915 = !DILocation(line: 474, column: 2, scope: !1897)
!1916 = !DILocation(line: 476, column: 9, scope: !1917)
!1917 = distinct !DILexicalBlock(scope: !1848, file: !3, line: 476, column: 2)
!1918 = !DILocation(line: 476, column: 7, scope: !1917)
!1919 = !DILocation(line: 476, column: 14, scope: !1920)
!1920 = distinct !DILexicalBlock(scope: !1917, file: !3, line: 476, column: 2)
!1921 = !DILocation(line: 476, column: 18, scope: !1920)
!1922 = !DILocation(line: 476, column: 16, scope: !1920)
!1923 = !DILocation(line: 476, column: 2, scope: !1917)
!1924 = !DILocation(line: 477, column: 10, scope: !1925)
!1925 = distinct !DILexicalBlock(scope: !1920, file: !3, line: 476, column: 37)
!1926 = !DILocation(line: 477, column: 15, scope: !1925)
!1927 = !DILocation(line: 477, column: 25, scope: !1925)
!1928 = !DILocation(line: 477, column: 41, scope: !1925)
!1929 = !DILocation(line: 477, column: 44, scope: !1925)
!1930 = !DILocation(line: 477, column: 7, scope: !1925)
!1931 = !DILocation(line: 480, column: 31, scope: !1925)
!1932 = !DILocation(line: 480, column: 36, scope: !1925)
!1933 = !DILocation(line: 480, column: 41, scope: !1925)
!1934 = !DILocation(line: 480, column: 49, scope: !1925)
!1935 = !DILocation(line: 480, column: 54, scope: !1925)
!1936 = !DILocation(line: 480, column: 47, scope: !1925)
!1937 = !DILocation(line: 481, column: 31, scope: !1925)
!1938 = !DILocation(line: 481, column: 34, scope: !1925)
!1939 = !DILocation(line: 481, column: 37, scope: !1925)
!1940 = !DILocation(line: 481, column: 41, scope: !1925)
!1941 = !DILocation(line: 481, column: 44, scope: !1925)
!1942 = !DILocation(line: 481, column: 48, scope: !1925)
!1943 = !DILocation(line: 481, column: 51, scope: !1925)
!1944 = !DILocation(line: 480, column: 3, scope: !1925)
!1945 = !DILocation(line: 482, column: 3, scope: !1925)
!1946 = !DILocation(line: 482, column: 8, scope: !1925)
!1947 = !DILocation(line: 482, column: 17, scope: !1925)
!1948 = !DILocation(line: 485, column: 7, scope: !1949)
!1949 = distinct !DILexicalBlock(scope: !1925, file: !3, line: 485, column: 7)
!1950 = !DILocation(line: 485, column: 10, scope: !1949)
!1951 = !DILocation(line: 485, column: 7, scope: !1925)
!1952 = !DILocation(line: 486, column: 32, scope: !1953)
!1953 = distinct !DILexicalBlock(scope: !1949, file: !3, line: 485, column: 14)
!1954 = !DILocation(line: 486, column: 37, scope: !1953)
!1955 = !DILocation(line: 486, column: 42, scope: !1953)
!1956 = !DILocation(line: 486, column: 50, scope: !1953)
!1957 = !DILocation(line: 486, column: 55, scope: !1953)
!1958 = !DILocation(line: 486, column: 48, scope: !1953)
!1959 = !DILocation(line: 487, column: 32, scope: !1953)
!1960 = !DILocation(line: 487, column: 35, scope: !1953)
!1961 = !DILocation(line: 487, column: 38, scope: !1953)
!1962 = !DILocation(line: 487, column: 42, scope: !1953)
!1963 = !DILocation(line: 487, column: 45, scope: !1953)
!1964 = !DILocation(line: 487, column: 49, scope: !1953)
!1965 = !DILocation(line: 487, column: 52, scope: !1953)
!1966 = !DILocation(line: 486, column: 4, scope: !1953)
!1967 = !DILocation(line: 488, column: 4, scope: !1953)
!1968 = !DILocation(line: 488, column: 9, scope: !1953)
!1969 = !DILocation(line: 488, column: 18, scope: !1953)
!1970 = !DILocation(line: 489, column: 3, scope: !1953)
!1971 = !DILocation(line: 490, column: 2, scope: !1925)
!1972 = !DILocation(line: 476, column: 28, scope: !1920)
!1973 = !DILocation(line: 476, column: 33, scope: !1920)
!1974 = !DILocation(line: 476, column: 2, scope: !1920)
!1975 = distinct !{!1975, !1923, !1976}
!1976 = !DILocation(line: 490, column: 2, scope: !1917)
!1977 = !DILocation(line: 493, column: 9, scope: !1978)
!1978 = distinct !DILexicalBlock(scope: !1848, file: !3, line: 493, column: 2)
!1979 = !DILocation(line: 493, column: 7, scope: !1978)
!1980 = !DILocation(line: 493, column: 14, scope: !1981)
!1981 = distinct !DILexicalBlock(scope: !1978, file: !3, line: 493, column: 2)
!1982 = !DILocation(line: 493, column: 18, scope: !1981)
!1983 = !DILocation(line: 493, column: 23, scope: !1981)
!1984 = !DILocation(line: 493, column: 16, scope: !1981)
!1985 = !DILocation(line: 493, column: 2, scope: !1978)
!1986 = !DILocation(line: 494, column: 7, scope: !1987)
!1987 = distinct !DILexicalBlock(scope: !1988, file: !3, line: 494, column: 7)
!1988 = distinct !DILexicalBlock(scope: !1981, file: !3, line: 493, column: 37)
!1989 = !DILocation(line: 494, column: 12, scope: !1987)
!1990 = !DILocation(line: 494, column: 24, scope: !1987)
!1991 = !DILocation(line: 494, column: 27, scope: !1987)
!1992 = !DILocation(line: 494, column: 39, scope: !1987)
!1993 = !DILocation(line: 494, column: 7, scope: !1988)
!1994 = !DILocation(line: 495, column: 38, scope: !1995)
!1995 = distinct !DILexicalBlock(scope: !1987, file: !3, line: 494, column: 46)
!1996 = !DILocation(line: 495, column: 43, scope: !1995)
!1997 = !DILocation(line: 495, column: 64, scope: !1995)
!1998 = !DILocation(line: 495, column: 69, scope: !1995)
!1999 = !DILocation(line: 495, column: 62, scope: !1995)
!2000 = !DILocation(line: 495, column: 4, scope: !1995)
!2001 = !DILocation(line: 495, column: 9, scope: !1995)
!2002 = !DILocation(line: 495, column: 21, scope: !1995)
!2003 = !DILocation(line: 495, column: 24, scope: !1995)
!2004 = !DILocation(line: 495, column: 36, scope: !1995)
!2005 = !DILocation(line: 496, column: 4, scope: !1995)
!2006 = !DILocation(line: 496, column: 9, scope: !1995)
!2007 = !DILocation(line: 496, column: 24, scope: !1995)
!2008 = !DILocation(line: 497, column: 3, scope: !1995)
!2009 = !DILocation(line: 498, column: 2, scope: !1988)
!2010 = !DILocation(line: 493, column: 33, scope: !1981)
!2011 = !DILocation(line: 493, column: 2, scope: !1981)
!2012 = distinct !{!2012, !1985, !2013}
!2013 = !DILocation(line: 498, column: 2, scope: !1978)
!2014 = !DILocation(line: 500, column: 2, scope: !1848)
!2015 = !DILocation(line: 500, column: 12, scope: !1848)
!2016 = !DILocation(line: 501, column: 1, scope: !1848)
!2017 = distinct !DISubprogram(name: "GPU_drawobject_free", scope: !3, file: !3, line: 564, type: !974, scopeLine: 565, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1345)
!2018 = !DILocalVariable(name: "dm", arg: 1, scope: !2017, file: !3, line: 564, type: !216)
!2019 = !DILocation(line: 564, column: 39, scope: !2017)
!2020 = !DILocalVariable(name: "gdo", scope: !2017, file: !3, line: 566, type: !1683)
!2021 = !DILocation(line: 566, column: 17, scope: !2017)
!2022 = !DILocation(line: 568, column: 7, scope: !2023)
!2023 = distinct !DILexicalBlock(scope: !2017, file: !3, line: 568, column: 6)
!2024 = !DILocation(line: 568, column: 10, scope: !2023)
!2025 = !DILocation(line: 568, column: 21, scope: !2023)
!2026 = !DILocation(line: 568, column: 25, scope: !2023)
!2027 = !DILocation(line: 568, column: 19, scope: !2023)
!2028 = !DILocation(line: 568, column: 6, scope: !2017)
!2029 = !DILocation(line: 569, column: 3, scope: !2023)
!2030 = !DILocation(line: 571, column: 2, scope: !2017)
!2031 = !DILocation(line: 571, column: 12, scope: !2017)
!2032 = !DILocation(line: 571, column: 17, scope: !2017)
!2033 = !DILocation(line: 572, column: 2, scope: !2017)
!2034 = !DILocation(line: 572, column: 12, scope: !2017)
!2035 = !DILocation(line: 572, column: 17, scope: !2017)
!2036 = !DILocation(line: 573, column: 2, scope: !2017)
!2037 = !DILocation(line: 573, column: 12, scope: !2017)
!2038 = !DILocation(line: 573, column: 17, scope: !2017)
!2039 = !DILocation(line: 577, column: 18, scope: !2017)
!2040 = !DILocation(line: 577, column: 23, scope: !2017)
!2041 = !DILocation(line: 577, column: 2, scope: !2017)
!2042 = !DILocation(line: 578, column: 18, scope: !2017)
!2043 = !DILocation(line: 578, column: 23, scope: !2017)
!2044 = !DILocation(line: 578, column: 2, scope: !2017)
!2045 = !DILocation(line: 579, column: 18, scope: !2017)
!2046 = !DILocation(line: 579, column: 23, scope: !2017)
!2047 = !DILocation(line: 579, column: 2, scope: !2017)
!2048 = !DILocation(line: 580, column: 18, scope: !2017)
!2049 = !DILocation(line: 580, column: 23, scope: !2017)
!2050 = !DILocation(line: 580, column: 2, scope: !2017)
!2051 = !DILocation(line: 581, column: 18, scope: !2017)
!2052 = !DILocation(line: 581, column: 23, scope: !2017)
!2053 = !DILocation(line: 581, column: 2, scope: !2017)
!2054 = !DILocation(line: 582, column: 18, scope: !2017)
!2055 = !DILocation(line: 582, column: 23, scope: !2017)
!2056 = !DILocation(line: 582, column: 2, scope: !2017)
!2057 = !DILocation(line: 584, column: 2, scope: !2017)
!2058 = !DILocation(line: 584, column: 12, scope: !2017)
!2059 = !DILocation(line: 585, column: 2, scope: !2017)
!2060 = !DILocation(line: 585, column: 6, scope: !2017)
!2061 = !DILocation(line: 585, column: 17, scope: !2017)
!2062 = !DILocation(line: 586, column: 1, scope: !2017)
!2063 = distinct !DISubprogram(name: "GPU_buffer_copy_vertex", scope: !3, file: !3, line: 699, type: !214, scopeLine: 700, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1345)
!2064 = !DILocalVariable(name: "dm", arg: 1, scope: !2063, file: !3, line: 699, type: !216)
!2065 = !DILocation(line: 699, column: 49, scope: !2063)
!2066 = !DILocalVariable(name: "varray", arg: 2, scope: !2063, file: !3, line: 699, type: !175)
!2067 = !DILocation(line: 699, column: 60, scope: !2063)
!2068 = !DILocalVariable(name: "index", arg: 3, scope: !2063, file: !3, line: 699, type: !170)
!2069 = !DILocation(line: 699, column: 73, scope: !2063)
!2070 = !DILocalVariable(name: "mat_orig_to_new", arg: 4, scope: !2063, file: !3, line: 699, type: !170)
!2071 = !DILocation(line: 699, column: 85, scope: !2063)
!2072 = !DILocalVariable(name: "UNUSED_user", arg: 5, scope: !2063, file: !3, line: 699, type: !167)
!2073 = !DILocation(line: 699, column: 108, scope: !2063)
!2074 = !DILocalVariable(name: "mvert", scope: !2063, file: !3, line: 701, type: !2075)
!2075 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2076, size: 64)
!2076 = !DIDerivedType(tag: DW_TAG_typedef, name: "MVert", file: !56, line: 69, baseType: !995)
!2077 = !DILocation(line: 701, column: 9, scope: !2063)
!2078 = !DILocalVariable(name: "f", scope: !2063, file: !3, line: 702, type: !1690)
!2079 = !DILocation(line: 702, column: 9, scope: !2063)
!2080 = !DILocalVariable(name: "i", scope: !2063, file: !3, line: 703, type: !171)
!2081 = !DILocation(line: 703, column: 6, scope: !2063)
!2082 = !DILocalVariable(name: "j", scope: !2063, file: !3, line: 703, type: !171)
!2083 = !DILocation(line: 703, column: 9, scope: !2063)
!2084 = !DILocalVariable(name: "start", scope: !2063, file: !3, line: 703, type: !171)
!2085 = !DILocation(line: 703, column: 12, scope: !2063)
!2086 = !DILocalVariable(name: "totface", scope: !2063, file: !3, line: 703, type: !171)
!2087 = !DILocation(line: 703, column: 19, scope: !2063)
!2088 = !DILocation(line: 705, column: 10, scope: !2063)
!2089 = !DILocation(line: 705, column: 14, scope: !2063)
!2090 = !DILocation(line: 705, column: 27, scope: !2063)
!2091 = !DILocation(line: 705, column: 8, scope: !2063)
!2092 = !DILocation(line: 706, column: 6, scope: !2063)
!2093 = !DILocation(line: 706, column: 10, scope: !2063)
!2094 = !DILocation(line: 706, column: 27, scope: !2063)
!2095 = !DILocation(line: 706, column: 4, scope: !2063)
!2096 = !DILocation(line: 708, column: 12, scope: !2063)
!2097 = !DILocation(line: 708, column: 16, scope: !2063)
!2098 = !DILocation(line: 708, column: 32, scope: !2063)
!2099 = !DILocation(line: 708, column: 10, scope: !2063)
!2100 = !DILocation(line: 709, column: 9, scope: !2101)
!2101 = distinct !DILexicalBlock(scope: !2063, file: !3, line: 709, column: 2)
!2102 = !DILocation(line: 709, column: 7, scope: !2101)
!2103 = !DILocation(line: 709, column: 14, scope: !2104)
!2104 = distinct !DILexicalBlock(scope: !2101, file: !3, line: 709, column: 2)
!2105 = !DILocation(line: 709, column: 18, scope: !2104)
!2106 = !DILocation(line: 709, column: 16, scope: !2104)
!2107 = !DILocation(line: 709, column: 2, scope: !2101)
!2108 = !DILocation(line: 710, column: 11, scope: !2109)
!2109 = distinct !DILexicalBlock(scope: !2104, file: !3, line: 709, column: 37)
!2110 = !DILocation(line: 710, column: 17, scope: !2109)
!2111 = !DILocation(line: 710, column: 33, scope: !2109)
!2112 = !DILocation(line: 710, column: 36, scope: !2109)
!2113 = !DILocation(line: 710, column: 9, scope: !2109)
!2114 = !DILocation(line: 713, column: 15, scope: !2109)
!2115 = !DILocation(line: 713, column: 22, scope: !2109)
!2116 = !DILocation(line: 713, column: 30, scope: !2109)
!2117 = !DILocation(line: 713, column: 36, scope: !2109)
!2118 = !DILocation(line: 713, column: 39, scope: !2109)
!2119 = !DILocation(line: 713, column: 43, scope: !2109)
!2120 = !DILocation(line: 713, column: 3, scope: !2109)
!2121 = !DILocation(line: 714, column: 15, scope: !2109)
!2122 = !DILocation(line: 714, column: 22, scope: !2109)
!2123 = !DILocation(line: 714, column: 28, scope: !2109)
!2124 = !DILocation(line: 714, column: 34, scope: !2109)
!2125 = !DILocation(line: 714, column: 40, scope: !2109)
!2126 = !DILocation(line: 714, column: 43, scope: !2109)
!2127 = !DILocation(line: 714, column: 47, scope: !2109)
!2128 = !DILocation(line: 714, column: 3, scope: !2109)
!2129 = !DILocation(line: 715, column: 15, scope: !2109)
!2130 = !DILocation(line: 715, column: 22, scope: !2109)
!2131 = !DILocation(line: 715, column: 28, scope: !2109)
!2132 = !DILocation(line: 715, column: 34, scope: !2109)
!2133 = !DILocation(line: 715, column: 40, scope: !2109)
!2134 = !DILocation(line: 715, column: 43, scope: !2109)
!2135 = !DILocation(line: 715, column: 47, scope: !2109)
!2136 = !DILocation(line: 715, column: 3, scope: !2109)
!2137 = !DILocation(line: 716, column: 3, scope: !2109)
!2138 = !DILocation(line: 716, column: 9, scope: !2109)
!2139 = !DILocation(line: 716, column: 25, scope: !2109)
!2140 = !DILocation(line: 716, column: 28, scope: !2109)
!2141 = !DILocation(line: 716, column: 37, scope: !2109)
!2142 = !DILocation(line: 718, column: 7, scope: !2143)
!2143 = distinct !DILexicalBlock(scope: !2109, file: !3, line: 718, column: 7)
!2144 = !DILocation(line: 718, column: 10, scope: !2143)
!2145 = !DILocation(line: 718, column: 7, scope: !2109)
!2146 = !DILocation(line: 720, column: 16, scope: !2147)
!2147 = distinct !DILexicalBlock(scope: !2143, file: !3, line: 718, column: 14)
!2148 = !DILocation(line: 720, column: 23, scope: !2147)
!2149 = !DILocation(line: 720, column: 29, scope: !2147)
!2150 = !DILocation(line: 720, column: 35, scope: !2147)
!2151 = !DILocation(line: 720, column: 41, scope: !2147)
!2152 = !DILocation(line: 720, column: 44, scope: !2147)
!2153 = !DILocation(line: 720, column: 48, scope: !2147)
!2154 = !DILocation(line: 720, column: 4, scope: !2147)
!2155 = !DILocation(line: 721, column: 16, scope: !2147)
!2156 = !DILocation(line: 721, column: 23, scope: !2147)
!2157 = !DILocation(line: 721, column: 29, scope: !2147)
!2158 = !DILocation(line: 721, column: 36, scope: !2147)
!2159 = !DILocation(line: 721, column: 42, scope: !2147)
!2160 = !DILocation(line: 721, column: 45, scope: !2147)
!2161 = !DILocation(line: 721, column: 49, scope: !2147)
!2162 = !DILocation(line: 721, column: 4, scope: !2147)
!2163 = !DILocation(line: 722, column: 16, scope: !2147)
!2164 = !DILocation(line: 722, column: 23, scope: !2147)
!2165 = !DILocation(line: 722, column: 29, scope: !2147)
!2166 = !DILocation(line: 722, column: 36, scope: !2147)
!2167 = !DILocation(line: 722, column: 42, scope: !2147)
!2168 = !DILocation(line: 722, column: 45, scope: !2147)
!2169 = !DILocation(line: 722, column: 49, scope: !2147)
!2170 = !DILocation(line: 722, column: 4, scope: !2147)
!2171 = !DILocation(line: 723, column: 4, scope: !2147)
!2172 = !DILocation(line: 723, column: 10, scope: !2147)
!2173 = !DILocation(line: 723, column: 26, scope: !2147)
!2174 = !DILocation(line: 723, column: 29, scope: !2147)
!2175 = !DILocation(line: 723, column: 38, scope: !2147)
!2176 = !DILocation(line: 724, column: 3, scope: !2147)
!2177 = !DILocation(line: 725, column: 2, scope: !2109)
!2178 = !DILocation(line: 709, column: 28, scope: !2104)
!2179 = !DILocation(line: 709, column: 33, scope: !2104)
!2180 = !DILocation(line: 709, column: 2, scope: !2104)
!2181 = distinct !{!2181, !2107, !2182}
!2182 = !DILocation(line: 725, column: 2, scope: !2101)
!2183 = !DILocation(line: 728, column: 6, scope: !2063)
!2184 = !DILocation(line: 728, column: 10, scope: !2063)
!2185 = !DILocation(line: 728, column: 22, scope: !2063)
!2186 = !DILocation(line: 728, column: 41, scope: !2063)
!2187 = !DILocation(line: 728, column: 4, scope: !2063)
!2188 = !DILocation(line: 729, column: 9, scope: !2189)
!2189 = distinct !DILexicalBlock(scope: !2063, file: !3, line: 729, column: 2)
!2190 = !DILocation(line: 729, column: 7, scope: !2189)
!2191 = !DILocation(line: 729, column: 14, scope: !2192)
!2192 = distinct !DILexicalBlock(scope: !2189, file: !3, line: 729, column: 2)
!2193 = !DILocation(line: 729, column: 18, scope: !2192)
!2194 = !DILocation(line: 729, column: 22, scope: !2192)
!2195 = !DILocation(line: 729, column: 34, scope: !2192)
!2196 = !DILocation(line: 729, column: 16, scope: !2192)
!2197 = !DILocation(line: 729, column: 2, scope: !2189)
!2198 = !DILocation(line: 730, column: 7, scope: !2199)
!2199 = distinct !DILexicalBlock(scope: !2200, file: !3, line: 730, column: 7)
!2200 = distinct !DILexicalBlock(scope: !2192, file: !3, line: 729, column: 48)
!2201 = !DILocation(line: 730, column: 11, scope: !2199)
!2202 = !DILocation(line: 730, column: 23, scope: !2199)
!2203 = !DILocation(line: 730, column: 35, scope: !2199)
!2204 = !DILocation(line: 730, column: 38, scope: !2199)
!2205 = !DILocation(line: 730, column: 53, scope: !2199)
!2206 = !DILocation(line: 730, column: 57, scope: !2199)
!2207 = !DILocation(line: 730, column: 69, scope: !2199)
!2208 = !DILocation(line: 730, column: 50, scope: !2199)
!2209 = !DILocation(line: 730, column: 7, scope: !2200)
!2210 = !DILocation(line: 731, column: 16, scope: !2211)
!2211 = distinct !DILexicalBlock(scope: !2199, file: !3, line: 730, column: 89)
!2212 = !DILocation(line: 731, column: 23, scope: !2211)
!2213 = !DILocation(line: 731, column: 27, scope: !2211)
!2214 = !DILocation(line: 731, column: 33, scope: !2211)
!2215 = !DILocation(line: 731, column: 36, scope: !2211)
!2216 = !DILocation(line: 731, column: 4, scope: !2211)
!2217 = !DILocation(line: 732, column: 6, scope: !2211)
!2218 = !DILocation(line: 733, column: 3, scope: !2211)
!2219 = !DILocation(line: 734, column: 2, scope: !2200)
!2220 = !DILocation(line: 729, column: 44, scope: !2192)
!2221 = !DILocation(line: 729, column: 2, scope: !2192)
!2222 = distinct !{!2222, !2197, !2223}
!2223 = !DILocation(line: 734, column: 2, scope: !2189)
!2224 = !DILocation(line: 735, column: 1, scope: !2063)
!2225 = distinct !DISubprogram(name: "GPU_buffer_copy_normal", scope: !3, file: !3, line: 737, type: !214, scopeLine: 738, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1345)
!2226 = !DILocalVariable(name: "dm", arg: 1, scope: !2225, file: !3, line: 737, type: !216)
!2227 = !DILocation(line: 737, column: 49, scope: !2225)
!2228 = !DILocalVariable(name: "varray", arg: 2, scope: !2225, file: !3, line: 737, type: !175)
!2229 = !DILocation(line: 737, column: 60, scope: !2225)
!2230 = !DILocalVariable(name: "index", arg: 3, scope: !2225, file: !3, line: 737, type: !170)
!2231 = !DILocation(line: 737, column: 73, scope: !2225)
!2232 = !DILocalVariable(name: "mat_orig_to_new", arg: 4, scope: !2225, file: !3, line: 737, type: !170)
!2233 = !DILocation(line: 737, column: 85, scope: !2225)
!2234 = !DILocalVariable(name: "UNUSED_user", arg: 5, scope: !2225, file: !3, line: 737, type: !167)
!2235 = !DILocation(line: 737, column: 108, scope: !2225)
!2236 = !DILocalVariable(name: "i", scope: !2225, file: !3, line: 739, type: !171)
!2237 = !DILocation(line: 739, column: 6, scope: !2225)
!2238 = !DILocalVariable(name: "totface", scope: !2225, file: !3, line: 739, type: !171)
!2239 = !DILocation(line: 739, column: 9, scope: !2225)
!2240 = !DILocalVariable(name: "start", scope: !2225, file: !3, line: 740, type: !171)
!2241 = !DILocation(line: 740, column: 6, scope: !2225)
!2242 = !DILocalVariable(name: "f_no", scope: !2225, file: !3, line: 741, type: !426)
!2243 = !DILocation(line: 741, column: 8, scope: !2225)
!2244 = !DILocalVariable(name: "nors", scope: !2225, file: !3, line: 743, type: !1177)
!2245 = !DILocation(line: 743, column: 15, scope: !2225)
!2246 = !DILocation(line: 743, column: 22, scope: !2225)
!2247 = !DILocation(line: 743, column: 26, scope: !2225)
!2248 = !DILocation(line: 743, column: 47, scope: !2225)
!2249 = !DILocalVariable(name: "tlnors", scope: !2225, file: !3, line: 744, type: !2250)
!2250 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2251, size: 64)
!2251 = !DICompositeType(tag: DW_TAG_array_type, baseType: !179, size: 192, elements: !2252)
!2252 = !{!510, !428}
!2253 = !DILocation(line: 744, column: 10, scope: !2225)
!2254 = !DILocation(line: 744, column: 26, scope: !2225)
!2255 = !DILocation(line: 744, column: 30, scope: !2225)
!2256 = !DILocation(line: 744, column: 51, scope: !2225)
!2257 = !DILocalVariable(name: "mvert", scope: !2225, file: !3, line: 745, type: !2075)
!2258 = !DILocation(line: 745, column: 9, scope: !2225)
!2259 = !DILocation(line: 745, column: 17, scope: !2225)
!2260 = !DILocation(line: 745, column: 21, scope: !2225)
!2261 = !DILocation(line: 745, column: 34, scope: !2225)
!2262 = !DILocalVariable(name: "f", scope: !2225, file: !3, line: 746, type: !1690)
!2263 = !DILocation(line: 746, column: 9, scope: !2225)
!2264 = !DILocation(line: 746, column: 13, scope: !2225)
!2265 = !DILocation(line: 746, column: 17, scope: !2225)
!2266 = !DILocation(line: 746, column: 34, scope: !2225)
!2267 = !DILocation(line: 748, column: 12, scope: !2225)
!2268 = !DILocation(line: 748, column: 16, scope: !2225)
!2269 = !DILocation(line: 748, column: 32, scope: !2225)
!2270 = !DILocation(line: 748, column: 10, scope: !2225)
!2271 = !DILocation(line: 749, column: 9, scope: !2272)
!2272 = distinct !DILexicalBlock(scope: !2225, file: !3, line: 749, column: 2)
!2273 = !DILocation(line: 749, column: 7, scope: !2272)
!2274 = !DILocation(line: 749, column: 14, scope: !2275)
!2275 = distinct !DILexicalBlock(scope: !2272, file: !3, line: 749, column: 2)
!2276 = !DILocation(line: 749, column: 18, scope: !2275)
!2277 = !DILocation(line: 749, column: 16, scope: !2275)
!2278 = !DILocation(line: 749, column: 2, scope: !2272)
!2279 = !DILocalVariable(name: "smoothnormal", scope: !2280, file: !3, line: 750, type: !2281)
!2280 = distinct !DILexicalBlock(scope: !2275, file: !3, line: 749, column: 37)
!2281 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !171)
!2282 = !DILocation(line: 750, column: 13, scope: !2280)
!2283 = !DILocation(line: 750, column: 29, scope: !2280)
!2284 = !DILocation(line: 750, column: 32, scope: !2280)
!2285 = !DILocation(line: 750, column: 37, scope: !2280)
!2286 = !DILocation(line: 752, column: 11, scope: !2280)
!2287 = !DILocation(line: 752, column: 17, scope: !2280)
!2288 = !DILocation(line: 752, column: 33, scope: !2280)
!2289 = !DILocation(line: 752, column: 36, scope: !2280)
!2290 = !DILocation(line: 752, column: 9, scope: !2280)
!2291 = !DILocation(line: 753, column: 40, scope: !2280)
!2292 = !DILocation(line: 753, column: 43, scope: !2280)
!2293 = !DILocation(line: 753, column: 3, scope: !2280)
!2294 = !DILocation(line: 753, column: 9, scope: !2280)
!2295 = !DILocation(line: 753, column: 25, scope: !2280)
!2296 = !DILocation(line: 753, column: 28, scope: !2280)
!2297 = !DILocation(line: 753, column: 37, scope: !2280)
!2298 = !DILocation(line: 755, column: 7, scope: !2299)
!2299 = distinct !DILexicalBlock(scope: !2280, file: !3, line: 755, column: 7)
!2300 = !DILocation(line: 755, column: 7, scope: !2280)
!2301 = !DILocalVariable(name: "tlnor", scope: !2302, file: !3, line: 756, type: !2303)
!2302 = distinct !DILexicalBlock(scope: !2299, file: !3, line: 755, column: 15)
!2303 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !782, size: 64)
!2304 = !DILocation(line: 756, column: 12, scope: !2302)
!2305 = !DILocation(line: 756, column: 24, scope: !2302)
!2306 = !DILocation(line: 756, column: 31, scope: !2302)
!2307 = !DILocation(line: 758, column: 30, scope: !2302)
!2308 = !DILocation(line: 758, column: 37, scope: !2302)
!2309 = !DILocation(line: 758, column: 45, scope: !2302)
!2310 = !DILocation(line: 758, column: 4, scope: !2302)
!2311 = !DILocation(line: 759, column: 30, scope: !2302)
!2312 = !DILocation(line: 759, column: 37, scope: !2302)
!2313 = !DILocation(line: 759, column: 43, scope: !2302)
!2314 = !DILocation(line: 759, column: 49, scope: !2302)
!2315 = !DILocation(line: 759, column: 4, scope: !2302)
!2316 = !DILocation(line: 760, column: 30, scope: !2302)
!2317 = !DILocation(line: 760, column: 37, scope: !2302)
!2318 = !DILocation(line: 760, column: 43, scope: !2302)
!2319 = !DILocation(line: 760, column: 49, scope: !2302)
!2320 = !DILocation(line: 760, column: 4, scope: !2302)
!2321 = !DILocation(line: 762, column: 8, scope: !2322)
!2322 = distinct !DILexicalBlock(scope: !2302, file: !3, line: 762, column: 8)
!2323 = !DILocation(line: 762, column: 11, scope: !2322)
!2324 = !DILocation(line: 762, column: 8, scope: !2302)
!2325 = !DILocation(line: 763, column: 31, scope: !2326)
!2326 = distinct !DILexicalBlock(scope: !2322, file: !3, line: 762, column: 15)
!2327 = !DILocation(line: 763, column: 38, scope: !2326)
!2328 = !DILocation(line: 763, column: 44, scope: !2326)
!2329 = !DILocation(line: 763, column: 50, scope: !2326)
!2330 = !DILocation(line: 763, column: 5, scope: !2326)
!2331 = !DILocation(line: 764, column: 31, scope: !2326)
!2332 = !DILocation(line: 764, column: 38, scope: !2326)
!2333 = !DILocation(line: 764, column: 44, scope: !2326)
!2334 = !DILocation(line: 764, column: 51, scope: !2326)
!2335 = !DILocation(line: 764, column: 5, scope: !2326)
!2336 = !DILocation(line: 765, column: 31, scope: !2326)
!2337 = !DILocation(line: 765, column: 38, scope: !2326)
!2338 = !DILocation(line: 765, column: 44, scope: !2326)
!2339 = !DILocation(line: 765, column: 51, scope: !2326)
!2340 = !DILocation(line: 765, column: 5, scope: !2326)
!2341 = !DILocation(line: 766, column: 4, scope: !2326)
!2342 = !DILocation(line: 767, column: 3, scope: !2302)
!2343 = !DILocation(line: 768, column: 12, scope: !2344)
!2344 = distinct !DILexicalBlock(scope: !2299, file: !3, line: 768, column: 12)
!2345 = !DILocation(line: 768, column: 12, scope: !2299)
!2346 = !DILocation(line: 770, column: 30, scope: !2347)
!2347 = distinct !DILexicalBlock(scope: !2344, file: !3, line: 768, column: 26)
!2348 = !DILocation(line: 770, column: 37, scope: !2347)
!2349 = !DILocation(line: 770, column: 45, scope: !2347)
!2350 = !DILocation(line: 770, column: 51, scope: !2347)
!2351 = !DILocation(line: 770, column: 54, scope: !2347)
!2352 = !DILocation(line: 770, column: 58, scope: !2347)
!2353 = !DILocation(line: 770, column: 4, scope: !2347)
!2354 = !DILocation(line: 771, column: 30, scope: !2347)
!2355 = !DILocation(line: 771, column: 37, scope: !2347)
!2356 = !DILocation(line: 771, column: 43, scope: !2347)
!2357 = !DILocation(line: 771, column: 49, scope: !2347)
!2358 = !DILocation(line: 771, column: 55, scope: !2347)
!2359 = !DILocation(line: 771, column: 58, scope: !2347)
!2360 = !DILocation(line: 771, column: 62, scope: !2347)
!2361 = !DILocation(line: 771, column: 4, scope: !2347)
!2362 = !DILocation(line: 772, column: 30, scope: !2347)
!2363 = !DILocation(line: 772, column: 37, scope: !2347)
!2364 = !DILocation(line: 772, column: 43, scope: !2347)
!2365 = !DILocation(line: 772, column: 49, scope: !2347)
!2366 = !DILocation(line: 772, column: 55, scope: !2347)
!2367 = !DILocation(line: 772, column: 58, scope: !2347)
!2368 = !DILocation(line: 772, column: 62, scope: !2347)
!2369 = !DILocation(line: 772, column: 4, scope: !2347)
!2370 = !DILocation(line: 774, column: 8, scope: !2371)
!2371 = distinct !DILexicalBlock(scope: !2347, file: !3, line: 774, column: 8)
!2372 = !DILocation(line: 774, column: 11, scope: !2371)
!2373 = !DILocation(line: 774, column: 8, scope: !2347)
!2374 = !DILocation(line: 775, column: 31, scope: !2375)
!2375 = distinct !DILexicalBlock(scope: !2371, file: !3, line: 774, column: 15)
!2376 = !DILocation(line: 775, column: 38, scope: !2375)
!2377 = !DILocation(line: 775, column: 44, scope: !2375)
!2378 = !DILocation(line: 775, column: 50, scope: !2375)
!2379 = !DILocation(line: 775, column: 56, scope: !2375)
!2380 = !DILocation(line: 775, column: 59, scope: !2375)
!2381 = !DILocation(line: 775, column: 63, scope: !2375)
!2382 = !DILocation(line: 775, column: 5, scope: !2375)
!2383 = !DILocation(line: 776, column: 31, scope: !2375)
!2384 = !DILocation(line: 776, column: 38, scope: !2375)
!2385 = !DILocation(line: 776, column: 44, scope: !2375)
!2386 = !DILocation(line: 776, column: 51, scope: !2375)
!2387 = !DILocation(line: 776, column: 57, scope: !2375)
!2388 = !DILocation(line: 776, column: 60, scope: !2375)
!2389 = !DILocation(line: 776, column: 64, scope: !2375)
!2390 = !DILocation(line: 776, column: 5, scope: !2375)
!2391 = !DILocation(line: 777, column: 31, scope: !2375)
!2392 = !DILocation(line: 777, column: 38, scope: !2375)
!2393 = !DILocation(line: 777, column: 44, scope: !2375)
!2394 = !DILocation(line: 777, column: 51, scope: !2375)
!2395 = !DILocation(line: 777, column: 57, scope: !2375)
!2396 = !DILocation(line: 777, column: 60, scope: !2375)
!2397 = !DILocation(line: 777, column: 64, scope: !2375)
!2398 = !DILocation(line: 777, column: 5, scope: !2375)
!2399 = !DILocation(line: 778, column: 4, scope: !2375)
!2400 = !DILocation(line: 779, column: 3, scope: !2347)
!2401 = !DILocation(line: 780, column: 12, scope: !2402)
!2402 = distinct !DILexicalBlock(scope: !2344, file: !3, line: 780, column: 12)
!2403 = !DILocation(line: 780, column: 12, scope: !2344)
!2404 = !DILocation(line: 782, column: 16, scope: !2405)
!2405 = distinct !DILexicalBlock(scope: !2402, file: !3, line: 780, column: 18)
!2406 = !DILocation(line: 782, column: 23, scope: !2405)
!2407 = !DILocation(line: 782, column: 32, scope: !2405)
!2408 = !DILocation(line: 782, column: 37, scope: !2405)
!2409 = !DILocation(line: 782, column: 39, scope: !2405)
!2410 = !DILocation(line: 782, column: 4, scope: !2405)
!2411 = !DILocation(line: 783, column: 16, scope: !2405)
!2412 = !DILocation(line: 783, column: 23, scope: !2405)
!2413 = !DILocation(line: 783, column: 29, scope: !2405)
!2414 = !DILocation(line: 783, column: 36, scope: !2405)
!2415 = !DILocation(line: 783, column: 41, scope: !2405)
!2416 = !DILocation(line: 783, column: 43, scope: !2405)
!2417 = !DILocation(line: 783, column: 4, scope: !2405)
!2418 = !DILocation(line: 784, column: 16, scope: !2405)
!2419 = !DILocation(line: 784, column: 23, scope: !2405)
!2420 = !DILocation(line: 784, column: 29, scope: !2405)
!2421 = !DILocation(line: 784, column: 36, scope: !2405)
!2422 = !DILocation(line: 784, column: 41, scope: !2405)
!2423 = !DILocation(line: 784, column: 43, scope: !2405)
!2424 = !DILocation(line: 784, column: 4, scope: !2405)
!2425 = !DILocation(line: 786, column: 8, scope: !2426)
!2426 = distinct !DILexicalBlock(scope: !2405, file: !3, line: 786, column: 8)
!2427 = !DILocation(line: 786, column: 11, scope: !2426)
!2428 = !DILocation(line: 786, column: 8, scope: !2405)
!2429 = !DILocation(line: 787, column: 17, scope: !2430)
!2430 = distinct !DILexicalBlock(scope: !2426, file: !3, line: 786, column: 15)
!2431 = !DILocation(line: 787, column: 24, scope: !2430)
!2432 = !DILocation(line: 787, column: 30, scope: !2430)
!2433 = !DILocation(line: 787, column: 37, scope: !2430)
!2434 = !DILocation(line: 787, column: 42, scope: !2430)
!2435 = !DILocation(line: 787, column: 44, scope: !2430)
!2436 = !DILocation(line: 787, column: 5, scope: !2430)
!2437 = !DILocation(line: 788, column: 17, scope: !2430)
!2438 = !DILocation(line: 788, column: 24, scope: !2430)
!2439 = !DILocation(line: 788, column: 30, scope: !2430)
!2440 = !DILocation(line: 788, column: 38, scope: !2430)
!2441 = !DILocation(line: 788, column: 43, scope: !2430)
!2442 = !DILocation(line: 788, column: 45, scope: !2430)
!2443 = !DILocation(line: 788, column: 5, scope: !2430)
!2444 = !DILocation(line: 789, column: 17, scope: !2430)
!2445 = !DILocation(line: 789, column: 24, scope: !2430)
!2446 = !DILocation(line: 789, column: 30, scope: !2430)
!2447 = !DILocation(line: 789, column: 38, scope: !2430)
!2448 = !DILocation(line: 789, column: 43, scope: !2430)
!2449 = !DILocation(line: 789, column: 45, scope: !2430)
!2450 = !DILocation(line: 789, column: 5, scope: !2430)
!2451 = !DILocation(line: 790, column: 4, scope: !2430)
!2452 = !DILocation(line: 791, column: 3, scope: !2405)
!2453 = !DILocation(line: 794, column: 8, scope: !2454)
!2454 = distinct !DILexicalBlock(scope: !2455, file: !3, line: 794, column: 8)
!2455 = distinct !DILexicalBlock(scope: !2402, file: !3, line: 792, column: 8)
!2456 = !DILocation(line: 794, column: 11, scope: !2454)
!2457 = !DILocation(line: 794, column: 8, scope: !2455)
!2458 = !DILocation(line: 795, column: 20, scope: !2454)
!2459 = !DILocation(line: 795, column: 26, scope: !2454)
!2460 = !DILocation(line: 795, column: 32, scope: !2454)
!2461 = !DILocation(line: 795, column: 35, scope: !2454)
!2462 = !DILocation(line: 795, column: 39, scope: !2454)
!2463 = !DILocation(line: 795, column: 43, scope: !2454)
!2464 = !DILocation(line: 795, column: 49, scope: !2454)
!2465 = !DILocation(line: 795, column: 52, scope: !2454)
!2466 = !DILocation(line: 795, column: 56, scope: !2454)
!2467 = !DILocation(line: 795, column: 60, scope: !2454)
!2468 = !DILocation(line: 795, column: 66, scope: !2454)
!2469 = !DILocation(line: 795, column: 69, scope: !2454)
!2470 = !DILocation(line: 795, column: 73, scope: !2454)
!2471 = !DILocation(line: 795, column: 77, scope: !2454)
!2472 = !DILocation(line: 795, column: 83, scope: !2454)
!2473 = !DILocation(line: 795, column: 86, scope: !2454)
!2474 = !DILocation(line: 795, column: 90, scope: !2454)
!2475 = !DILocation(line: 795, column: 5, scope: !2454)
!2476 = !DILocation(line: 797, column: 19, scope: !2454)
!2477 = !DILocation(line: 797, column: 25, scope: !2454)
!2478 = !DILocation(line: 797, column: 31, scope: !2454)
!2479 = !DILocation(line: 797, column: 34, scope: !2454)
!2480 = !DILocation(line: 797, column: 38, scope: !2454)
!2481 = !DILocation(line: 797, column: 42, scope: !2454)
!2482 = !DILocation(line: 797, column: 48, scope: !2454)
!2483 = !DILocation(line: 797, column: 51, scope: !2454)
!2484 = !DILocation(line: 797, column: 55, scope: !2454)
!2485 = !DILocation(line: 797, column: 59, scope: !2454)
!2486 = !DILocation(line: 797, column: 65, scope: !2454)
!2487 = !DILocation(line: 797, column: 68, scope: !2454)
!2488 = !DILocation(line: 797, column: 72, scope: !2454)
!2489 = !DILocation(line: 797, column: 5, scope: !2454)
!2490 = !DILocation(line: 799, column: 16, scope: !2455)
!2491 = !DILocation(line: 799, column: 23, scope: !2455)
!2492 = !DILocation(line: 799, column: 31, scope: !2455)
!2493 = !DILocation(line: 799, column: 4, scope: !2455)
!2494 = !DILocation(line: 800, column: 16, scope: !2455)
!2495 = !DILocation(line: 800, column: 23, scope: !2455)
!2496 = !DILocation(line: 800, column: 29, scope: !2455)
!2497 = !DILocation(line: 800, column: 35, scope: !2455)
!2498 = !DILocation(line: 800, column: 4, scope: !2455)
!2499 = !DILocation(line: 801, column: 16, scope: !2455)
!2500 = !DILocation(line: 801, column: 23, scope: !2455)
!2501 = !DILocation(line: 801, column: 29, scope: !2455)
!2502 = !DILocation(line: 801, column: 35, scope: !2455)
!2503 = !DILocation(line: 801, column: 4, scope: !2455)
!2504 = !DILocation(line: 803, column: 8, scope: !2505)
!2505 = distinct !DILexicalBlock(scope: !2455, file: !3, line: 803, column: 8)
!2506 = !DILocation(line: 803, column: 11, scope: !2505)
!2507 = !DILocation(line: 803, column: 8, scope: !2455)
!2508 = !DILocation(line: 804, column: 17, scope: !2509)
!2509 = distinct !DILexicalBlock(scope: !2505, file: !3, line: 803, column: 15)
!2510 = !DILocation(line: 804, column: 24, scope: !2509)
!2511 = !DILocation(line: 804, column: 30, scope: !2509)
!2512 = !DILocation(line: 804, column: 36, scope: !2509)
!2513 = !DILocation(line: 804, column: 5, scope: !2509)
!2514 = !DILocation(line: 805, column: 17, scope: !2509)
!2515 = !DILocation(line: 805, column: 24, scope: !2509)
!2516 = !DILocation(line: 805, column: 30, scope: !2509)
!2517 = !DILocation(line: 805, column: 37, scope: !2509)
!2518 = !DILocation(line: 805, column: 5, scope: !2509)
!2519 = !DILocation(line: 806, column: 17, scope: !2509)
!2520 = !DILocation(line: 806, column: 24, scope: !2509)
!2521 = !DILocation(line: 806, column: 30, scope: !2509)
!2522 = !DILocation(line: 806, column: 37, scope: !2509)
!2523 = !DILocation(line: 806, column: 5, scope: !2509)
!2524 = !DILocation(line: 807, column: 4, scope: !2509)
!2525 = !DILocation(line: 809, column: 2, scope: !2280)
!2526 = !DILocation(line: 749, column: 28, scope: !2275)
!2527 = !DILocation(line: 749, column: 33, scope: !2275)
!2528 = !DILocation(line: 749, column: 2, scope: !2275)
!2529 = distinct !{!2529, !2278, !2530}
!2530 = !DILocation(line: 809, column: 2, scope: !2272)
!2531 = !DILocation(line: 810, column: 1, scope: !2225)
!2532 = distinct !DISubprogram(name: "GPU_buffer_copy_mcol", scope: !3, file: !3, line: 907, type: !214, scopeLine: 908, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1345)
!2533 = !DILocalVariable(name: "dm", arg: 1, scope: !2532, file: !3, line: 907, type: !216)
!2534 = !DILocation(line: 907, column: 47, scope: !2532)
!2535 = !DILocalVariable(name: "varray_", arg: 2, scope: !2532, file: !3, line: 907, type: !175)
!2536 = !DILocation(line: 907, column: 58, scope: !2532)
!2537 = !DILocalVariable(name: "index", arg: 3, scope: !2532, file: !3, line: 907, type: !170)
!2538 = !DILocation(line: 907, column: 72, scope: !2532)
!2539 = !DILocalVariable(name: "mat_orig_to_new", arg: 4, scope: !2532, file: !3, line: 907, type: !170)
!2540 = !DILocation(line: 907, column: 84, scope: !2532)
!2541 = !DILocalVariable(name: "user", arg: 5, scope: !2532, file: !3, line: 907, type: !167)
!2542 = !DILocation(line: 907, column: 107, scope: !2532)
!2543 = !DILocalVariable(name: "i", scope: !2532, file: !3, line: 909, type: !171)
!2544 = !DILocation(line: 909, column: 6, scope: !2532)
!2545 = !DILocalVariable(name: "totface", scope: !2532, file: !3, line: 909, type: !171)
!2546 = !DILocation(line: 909, column: 9, scope: !2532)
!2547 = !DILocalVariable(name: "varray", scope: !2532, file: !3, line: 910, type: !177)
!2548 = !DILocation(line: 910, column: 17, scope: !2532)
!2549 = !DILocation(line: 910, column: 43, scope: !2532)
!2550 = !DILocation(line: 910, column: 26, scope: !2532)
!2551 = !DILocalVariable(name: "mcol", scope: !2532, file: !3, line: 911, type: !177)
!2552 = !DILocation(line: 911, column: 17, scope: !2532)
!2553 = !DILocation(line: 911, column: 41, scope: !2532)
!2554 = !DILocalVariable(name: "f", scope: !2532, file: !3, line: 912, type: !1690)
!2555 = !DILocation(line: 912, column: 9, scope: !2532)
!2556 = !DILocation(line: 912, column: 13, scope: !2532)
!2557 = !DILocation(line: 912, column: 17, scope: !2532)
!2558 = !DILocation(line: 912, column: 34, scope: !2532)
!2559 = !DILocation(line: 914, column: 12, scope: !2532)
!2560 = !DILocation(line: 914, column: 16, scope: !2532)
!2561 = !DILocation(line: 914, column: 32, scope: !2532)
!2562 = !DILocation(line: 914, column: 10, scope: !2532)
!2563 = !DILocation(line: 915, column: 9, scope: !2564)
!2564 = distinct !DILexicalBlock(scope: !2532, file: !3, line: 915, column: 2)
!2565 = !DILocation(line: 915, column: 7, scope: !2564)
!2566 = !DILocation(line: 915, column: 14, scope: !2567)
!2567 = distinct !DILexicalBlock(scope: !2564, file: !3, line: 915, column: 2)
!2568 = !DILocation(line: 915, column: 18, scope: !2567)
!2569 = !DILocation(line: 915, column: 16, scope: !2567)
!2570 = !DILocation(line: 915, column: 2, scope: !2564)
!2571 = !DILocalVariable(name: "start", scope: !2572, file: !3, line: 916, type: !171)
!2572 = distinct !DILexicalBlock(scope: !2567, file: !3, line: 915, column: 37)
!2573 = !DILocation(line: 916, column: 7, scope: !2572)
!2574 = !DILocation(line: 916, column: 15, scope: !2572)
!2575 = !DILocation(line: 916, column: 21, scope: !2572)
!2576 = !DILocation(line: 916, column: 37, scope: !2572)
!2577 = !DILocation(line: 916, column: 40, scope: !2572)
!2578 = !DILocation(line: 919, column: 18, scope: !2572)
!2579 = !DILocation(line: 919, column: 25, scope: !2572)
!2580 = !DILocation(line: 919, column: 34, scope: !2572)
!2581 = !DILocation(line: 919, column: 39, scope: !2572)
!2582 = !DILocation(line: 919, column: 41, scope: !2572)
!2583 = !DILocation(line: 919, column: 3, scope: !2572)
!2584 = !DILocation(line: 920, column: 18, scope: !2572)
!2585 = !DILocation(line: 920, column: 25, scope: !2572)
!2586 = !DILocation(line: 920, column: 31, scope: !2572)
!2587 = !DILocation(line: 920, column: 38, scope: !2572)
!2588 = !DILocation(line: 920, column: 43, scope: !2572)
!2589 = !DILocation(line: 920, column: 45, scope: !2572)
!2590 = !DILocation(line: 920, column: 50, scope: !2572)
!2591 = !DILocation(line: 920, column: 3, scope: !2572)
!2592 = !DILocation(line: 921, column: 18, scope: !2572)
!2593 = !DILocation(line: 921, column: 25, scope: !2572)
!2594 = !DILocation(line: 921, column: 31, scope: !2572)
!2595 = !DILocation(line: 921, column: 38, scope: !2572)
!2596 = !DILocation(line: 921, column: 43, scope: !2572)
!2597 = !DILocation(line: 921, column: 45, scope: !2572)
!2598 = !DILocation(line: 921, column: 50, scope: !2572)
!2599 = !DILocation(line: 921, column: 3, scope: !2572)
!2600 = !DILocation(line: 922, column: 3, scope: !2572)
!2601 = !DILocation(line: 922, column: 9, scope: !2572)
!2602 = !DILocation(line: 922, column: 25, scope: !2572)
!2603 = !DILocation(line: 922, column: 28, scope: !2572)
!2604 = !DILocation(line: 922, column: 37, scope: !2572)
!2605 = !DILocation(line: 924, column: 7, scope: !2606)
!2606 = distinct !DILexicalBlock(scope: !2572, file: !3, line: 924, column: 7)
!2607 = !DILocation(line: 924, column: 10, scope: !2606)
!2608 = !DILocation(line: 924, column: 7, scope: !2572)
!2609 = !DILocation(line: 926, column: 19, scope: !2610)
!2610 = distinct !DILexicalBlock(scope: !2606, file: !3, line: 924, column: 14)
!2611 = !DILocation(line: 926, column: 26, scope: !2610)
!2612 = !DILocation(line: 926, column: 32, scope: !2610)
!2613 = !DILocation(line: 926, column: 39, scope: !2610)
!2614 = !DILocation(line: 926, column: 44, scope: !2610)
!2615 = !DILocation(line: 926, column: 46, scope: !2610)
!2616 = !DILocation(line: 926, column: 51, scope: !2610)
!2617 = !DILocation(line: 926, column: 4, scope: !2610)
!2618 = !DILocation(line: 927, column: 19, scope: !2610)
!2619 = !DILocation(line: 927, column: 26, scope: !2610)
!2620 = !DILocation(line: 927, column: 32, scope: !2610)
!2621 = !DILocation(line: 927, column: 40, scope: !2610)
!2622 = !DILocation(line: 927, column: 45, scope: !2610)
!2623 = !DILocation(line: 927, column: 47, scope: !2610)
!2624 = !DILocation(line: 927, column: 52, scope: !2610)
!2625 = !DILocation(line: 927, column: 4, scope: !2610)
!2626 = !DILocation(line: 928, column: 19, scope: !2610)
!2627 = !DILocation(line: 928, column: 26, scope: !2610)
!2628 = !DILocation(line: 928, column: 32, scope: !2610)
!2629 = !DILocation(line: 928, column: 40, scope: !2610)
!2630 = !DILocation(line: 928, column: 45, scope: !2610)
!2631 = !DILocation(line: 928, column: 47, scope: !2610)
!2632 = !DILocation(line: 928, column: 4, scope: !2610)
!2633 = !DILocation(line: 929, column: 4, scope: !2610)
!2634 = !DILocation(line: 929, column: 10, scope: !2610)
!2635 = !DILocation(line: 929, column: 26, scope: !2610)
!2636 = !DILocation(line: 929, column: 29, scope: !2610)
!2637 = !DILocation(line: 929, column: 38, scope: !2610)
!2638 = !DILocation(line: 930, column: 3, scope: !2610)
!2639 = !DILocation(line: 931, column: 2, scope: !2572)
!2640 = !DILocation(line: 915, column: 28, scope: !2567)
!2641 = !DILocation(line: 915, column: 33, scope: !2567)
!2642 = !DILocation(line: 915, column: 2, scope: !2567)
!2643 = distinct !{!2643, !2570, !2644}
!2644 = !DILocation(line: 931, column: 2, scope: !2564)
!2645 = !DILocation(line: 932, column: 1, scope: !2532)
!2646 = distinct !DISubprogram(name: "GPU_buffer_copy_uv", scope: !3, file: !3, line: 812, type: !214, scopeLine: 813, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1345)
!2647 = !DILocalVariable(name: "dm", arg: 1, scope: !2646, file: !3, line: 812, type: !216)
!2648 = !DILocation(line: 812, column: 45, scope: !2646)
!2649 = !DILocalVariable(name: "varray", arg: 2, scope: !2646, file: !3, line: 812, type: !175)
!2650 = !DILocation(line: 812, column: 56, scope: !2646)
!2651 = !DILocalVariable(name: "index", arg: 3, scope: !2646, file: !3, line: 812, type: !170)
!2652 = !DILocation(line: 812, column: 69, scope: !2646)
!2653 = !DILocalVariable(name: "mat_orig_to_new", arg: 4, scope: !2646, file: !3, line: 812, type: !170)
!2654 = !DILocation(line: 812, column: 81, scope: !2646)
!2655 = !DILocalVariable(name: "UNUSED_user", arg: 5, scope: !2646, file: !3, line: 812, type: !167)
!2656 = !DILocation(line: 812, column: 104, scope: !2646)
!2657 = !DILocalVariable(name: "start", scope: !2646, file: !3, line: 814, type: !171)
!2658 = !DILocation(line: 814, column: 6, scope: !2646)
!2659 = !DILocalVariable(name: "i", scope: !2646, file: !3, line: 815, type: !171)
!2660 = !DILocation(line: 815, column: 6, scope: !2646)
!2661 = !DILocalVariable(name: "totface", scope: !2646, file: !3, line: 815, type: !171)
!2662 = !DILocation(line: 815, column: 9, scope: !2646)
!2663 = !DILocalVariable(name: "mtface", scope: !2646, file: !3, line: 817, type: !2664)
!2664 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2665, size: 64)
!2665 = !DIDerivedType(tag: DW_TAG_typedef, name: "MTFace", file: !56, line: 165, baseType: !1253)
!2666 = !DILocation(line: 817, column: 10, scope: !2646)
!2667 = !DILocalVariable(name: "f", scope: !2646, file: !3, line: 818, type: !1690)
!2668 = !DILocation(line: 818, column: 9, scope: !2646)
!2669 = !DILocation(line: 820, column: 44, scope: !2670)
!2670 = distinct !DILexicalBlock(scope: !2646, file: !3, line: 820, column: 6)
!2671 = !DILocation(line: 820, column: 17, scope: !2670)
!2672 = !DILocation(line: 820, column: 15, scope: !2670)
!2673 = !DILocation(line: 820, column: 6, scope: !2646)
!2674 = !DILocation(line: 821, column: 3, scope: !2670)
!2675 = !DILocation(line: 822, column: 6, scope: !2646)
!2676 = !DILocation(line: 822, column: 10, scope: !2646)
!2677 = !DILocation(line: 822, column: 27, scope: !2646)
!2678 = !DILocation(line: 822, column: 4, scope: !2646)
!2679 = !DILocation(line: 824, column: 12, scope: !2646)
!2680 = !DILocation(line: 824, column: 16, scope: !2646)
!2681 = !DILocation(line: 824, column: 32, scope: !2646)
!2682 = !DILocation(line: 824, column: 10, scope: !2646)
!2683 = !DILocation(line: 825, column: 9, scope: !2684)
!2684 = distinct !DILexicalBlock(scope: !2646, file: !3, line: 825, column: 2)
!2685 = !DILocation(line: 825, column: 7, scope: !2684)
!2686 = !DILocation(line: 825, column: 14, scope: !2687)
!2687 = distinct !DILexicalBlock(scope: !2684, file: !3, line: 825, column: 2)
!2688 = !DILocation(line: 825, column: 18, scope: !2687)
!2689 = !DILocation(line: 825, column: 16, scope: !2687)
!2690 = !DILocation(line: 825, column: 2, scope: !2684)
!2691 = !DILocation(line: 826, column: 11, scope: !2692)
!2692 = distinct !DILexicalBlock(scope: !2687, file: !3, line: 825, column: 37)
!2693 = !DILocation(line: 826, column: 17, scope: !2692)
!2694 = !DILocation(line: 826, column: 33, scope: !2692)
!2695 = !DILocation(line: 826, column: 36, scope: !2692)
!2696 = !DILocation(line: 826, column: 9, scope: !2692)
!2697 = !DILocation(line: 829, column: 15, scope: !2692)
!2698 = !DILocation(line: 829, column: 22, scope: !2692)
!2699 = !DILocation(line: 829, column: 30, scope: !2692)
!2700 = !DILocation(line: 829, column: 37, scope: !2692)
!2701 = !DILocation(line: 829, column: 40, scope: !2692)
!2702 = !DILocation(line: 829, column: 3, scope: !2692)
!2703 = !DILocation(line: 830, column: 15, scope: !2692)
!2704 = !DILocation(line: 830, column: 22, scope: !2692)
!2705 = !DILocation(line: 830, column: 28, scope: !2692)
!2706 = !DILocation(line: 830, column: 34, scope: !2692)
!2707 = !DILocation(line: 830, column: 41, scope: !2692)
!2708 = !DILocation(line: 830, column: 44, scope: !2692)
!2709 = !DILocation(line: 830, column: 3, scope: !2692)
!2710 = !DILocation(line: 831, column: 15, scope: !2692)
!2711 = !DILocation(line: 831, column: 22, scope: !2692)
!2712 = !DILocation(line: 831, column: 28, scope: !2692)
!2713 = !DILocation(line: 831, column: 34, scope: !2692)
!2714 = !DILocation(line: 831, column: 41, scope: !2692)
!2715 = !DILocation(line: 831, column: 44, scope: !2692)
!2716 = !DILocation(line: 831, column: 3, scope: !2692)
!2717 = !DILocation(line: 832, column: 3, scope: !2692)
!2718 = !DILocation(line: 832, column: 9, scope: !2692)
!2719 = !DILocation(line: 832, column: 25, scope: !2692)
!2720 = !DILocation(line: 832, column: 28, scope: !2692)
!2721 = !DILocation(line: 832, column: 37, scope: !2692)
!2722 = !DILocation(line: 834, column: 7, scope: !2723)
!2723 = distinct !DILexicalBlock(scope: !2692, file: !3, line: 834, column: 7)
!2724 = !DILocation(line: 834, column: 10, scope: !2723)
!2725 = !DILocation(line: 834, column: 7, scope: !2692)
!2726 = !DILocation(line: 836, column: 16, scope: !2727)
!2727 = distinct !DILexicalBlock(scope: !2723, file: !3, line: 834, column: 14)
!2728 = !DILocation(line: 836, column: 23, scope: !2727)
!2729 = !DILocation(line: 836, column: 29, scope: !2727)
!2730 = !DILocation(line: 836, column: 35, scope: !2727)
!2731 = !DILocation(line: 836, column: 42, scope: !2727)
!2732 = !DILocation(line: 836, column: 45, scope: !2727)
!2733 = !DILocation(line: 836, column: 4, scope: !2727)
!2734 = !DILocation(line: 837, column: 16, scope: !2727)
!2735 = !DILocation(line: 837, column: 23, scope: !2727)
!2736 = !DILocation(line: 837, column: 29, scope: !2727)
!2737 = !DILocation(line: 837, column: 35, scope: !2727)
!2738 = !DILocation(line: 837, column: 42, scope: !2727)
!2739 = !DILocation(line: 837, column: 45, scope: !2727)
!2740 = !DILocation(line: 837, column: 4, scope: !2727)
!2741 = !DILocation(line: 838, column: 16, scope: !2727)
!2742 = !DILocation(line: 838, column: 23, scope: !2727)
!2743 = !DILocation(line: 838, column: 29, scope: !2727)
!2744 = !DILocation(line: 838, column: 36, scope: !2727)
!2745 = !DILocation(line: 838, column: 43, scope: !2727)
!2746 = !DILocation(line: 838, column: 46, scope: !2727)
!2747 = !DILocation(line: 838, column: 4, scope: !2727)
!2748 = !DILocation(line: 839, column: 4, scope: !2727)
!2749 = !DILocation(line: 839, column: 10, scope: !2727)
!2750 = !DILocation(line: 839, column: 26, scope: !2727)
!2751 = !DILocation(line: 839, column: 29, scope: !2727)
!2752 = !DILocation(line: 839, column: 38, scope: !2727)
!2753 = !DILocation(line: 840, column: 3, scope: !2727)
!2754 = !DILocation(line: 841, column: 2, scope: !2692)
!2755 = !DILocation(line: 825, column: 28, scope: !2687)
!2756 = !DILocation(line: 825, column: 33, scope: !2687)
!2757 = !DILocation(line: 825, column: 2, scope: !2687)
!2758 = distinct !{!2758, !2690, !2759}
!2759 = !DILocation(line: 841, column: 2, scope: !2684)
!2760 = !DILocation(line: 842, column: 1, scope: !2646)
!2761 = distinct !DISubprogram(name: "GPU_buffer_copy_uv_texpaint", scope: !3, file: !3, line: 845, type: !214, scopeLine: 846, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1345)
!2762 = !DILocalVariable(name: "dm", arg: 1, scope: !2761, file: !3, line: 845, type: !216)
!2763 = !DILocation(line: 845, column: 54, scope: !2761)
!2764 = !DILocalVariable(name: "varray", arg: 2, scope: !2761, file: !3, line: 845, type: !175)
!2765 = !DILocation(line: 845, column: 65, scope: !2761)
!2766 = !DILocalVariable(name: "index", arg: 3, scope: !2761, file: !3, line: 845, type: !170)
!2767 = !DILocation(line: 845, column: 78, scope: !2761)
!2768 = !DILocalVariable(name: "mat_orig_to_new", arg: 4, scope: !2761, file: !3, line: 845, type: !170)
!2769 = !DILocation(line: 845, column: 90, scope: !2761)
!2770 = !DILocalVariable(name: "UNUSED_user", arg: 5, scope: !2761, file: !3, line: 845, type: !167)
!2771 = !DILocation(line: 845, column: 113, scope: !2761)
!2772 = !DILocalVariable(name: "start", scope: !2761, file: !3, line: 847, type: !171)
!2773 = !DILocation(line: 847, column: 6, scope: !2761)
!2774 = !DILocalVariable(name: "i", scope: !2761, file: !3, line: 848, type: !171)
!2775 = !DILocation(line: 848, column: 6, scope: !2761)
!2776 = !DILocalVariable(name: "totface", scope: !2761, file: !3, line: 848, type: !171)
!2777 = !DILocation(line: 848, column: 9, scope: !2761)
!2778 = !DILocalVariable(name: "totmaterial", scope: !2761, file: !3, line: 850, type: !171)
!2779 = !DILocation(line: 850, column: 6, scope: !2761)
!2780 = !DILocation(line: 850, column: 20, scope: !2761)
!2781 = !DILocation(line: 850, column: 24, scope: !2761)
!2782 = !DILocalVariable(name: "mtface_base", scope: !2761, file: !3, line: 851, type: !2783)
!2783 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2664, size: 64)
!2784 = !DILocation(line: 851, column: 11, scope: !2761)
!2785 = !DILocalVariable(name: "stencil_base", scope: !2761, file: !3, line: 852, type: !2664)
!2786 = !DILocation(line: 852, column: 10, scope: !2761)
!2787 = !DILocalVariable(name: "stencil", scope: !2761, file: !3, line: 853, type: !171)
!2788 = !DILocation(line: 853, column: 6, scope: !2761)
!2789 = !DILocalVariable(name: "mf", scope: !2761, file: !3, line: 854, type: !1690)
!2790 = !DILocation(line: 854, column: 9, scope: !2761)
!2791 = !DILocation(line: 858, column: 7, scope: !2761)
!2792 = !DILocation(line: 858, column: 11, scope: !2761)
!2793 = !DILocation(line: 858, column: 28, scope: !2761)
!2794 = !DILocation(line: 858, column: 5, scope: !2761)
!2795 = !DILocation(line: 859, column: 16, scope: !2761)
!2796 = !DILocation(line: 859, column: 28, scope: !2761)
!2797 = !DILocation(line: 859, column: 40, scope: !2761)
!2798 = !DILocation(line: 859, column: 14, scope: !2761)
!2799 = !DILocation(line: 861, column: 9, scope: !2800)
!2800 = distinct !DILexicalBlock(scope: !2761, file: !3, line: 861, column: 2)
!2801 = !DILocation(line: 861, column: 7, scope: !2800)
!2802 = !DILocation(line: 861, column: 14, scope: !2803)
!2803 = distinct !DILexicalBlock(scope: !2800, file: !3, line: 861, column: 2)
!2804 = !DILocation(line: 861, column: 18, scope: !2803)
!2805 = !DILocation(line: 861, column: 16, scope: !2803)
!2806 = !DILocation(line: 861, column: 2, scope: !2800)
!2807 = !DILocation(line: 862, column: 48, scope: !2808)
!2808 = distinct !DILexicalBlock(scope: !2803, file: !3, line: 861, column: 36)
!2809 = !DILocation(line: 862, column: 52, scope: !2808)
!2810 = !DILocation(line: 862, column: 20, scope: !2808)
!2811 = !DILocation(line: 862, column: 3, scope: !2808)
!2812 = !DILocation(line: 862, column: 15, scope: !2808)
!2813 = !DILocation(line: 862, column: 18, scope: !2808)
!2814 = !DILocation(line: 863, column: 2, scope: !2808)
!2815 = !DILocation(line: 861, column: 32, scope: !2803)
!2816 = !DILocation(line: 861, column: 2, scope: !2803)
!2817 = distinct !{!2817, !2806, !2818}
!2818 = !DILocation(line: 863, column: 2, scope: !2800)
!2819 = !DILocation(line: 865, column: 42, scope: !2761)
!2820 = !DILocation(line: 865, column: 46, scope: !2761)
!2821 = !DILocation(line: 865, column: 12, scope: !2761)
!2822 = !DILocation(line: 865, column: 10, scope: !2761)
!2823 = !DILocation(line: 866, column: 41, scope: !2761)
!2824 = !DILocation(line: 866, column: 45, scope: !2761)
!2825 = !DILocation(line: 866, column: 66, scope: !2761)
!2826 = !DILocation(line: 866, column: 17, scope: !2761)
!2827 = !DILocation(line: 866, column: 15, scope: !2761)
!2828 = !DILocation(line: 868, column: 12, scope: !2761)
!2829 = !DILocation(line: 868, column: 16, scope: !2761)
!2830 = !DILocation(line: 868, column: 32, scope: !2761)
!2831 = !DILocation(line: 868, column: 10, scope: !2761)
!2832 = !DILocation(line: 870, column: 9, scope: !2833)
!2833 = distinct !DILexicalBlock(scope: !2761, file: !3, line: 870, column: 2)
!2834 = !DILocation(line: 870, column: 7, scope: !2833)
!2835 = !DILocation(line: 870, column: 14, scope: !2836)
!2836 = distinct !DILexicalBlock(scope: !2833, file: !3, line: 870, column: 2)
!2837 = !DILocation(line: 870, column: 18, scope: !2836)
!2838 = !DILocation(line: 870, column: 16, scope: !2836)
!2839 = !DILocation(line: 870, column: 2, scope: !2833)
!2840 = !DILocalVariable(name: "mat_i", scope: !2841, file: !3, line: 871, type: !171)
!2841 = distinct !DILexicalBlock(scope: !2836, file: !3, line: 870, column: 38)
!2842 = !DILocation(line: 871, column: 7, scope: !2841)
!2843 = !DILocation(line: 871, column: 15, scope: !2841)
!2844 = !DILocation(line: 871, column: 19, scope: !2841)
!2845 = !DILocation(line: 872, column: 11, scope: !2841)
!2846 = !DILocation(line: 872, column: 17, scope: !2841)
!2847 = !DILocation(line: 872, column: 33, scope: !2841)
!2848 = !DILocation(line: 872, column: 9, scope: !2841)
!2849 = !DILocation(line: 875, column: 15, scope: !2841)
!2850 = !DILocation(line: 875, column: 22, scope: !2841)
!2851 = !DILocation(line: 875, column: 30, scope: !2841)
!2852 = !DILocation(line: 875, column: 42, scope: !2841)
!2853 = !DILocation(line: 875, column: 49, scope: !2841)
!2854 = !DILocation(line: 875, column: 52, scope: !2841)
!2855 = !DILocation(line: 875, column: 3, scope: !2841)
!2856 = !DILocation(line: 876, column: 15, scope: !2841)
!2857 = !DILocation(line: 876, column: 22, scope: !2841)
!2858 = !DILocation(line: 876, column: 28, scope: !2841)
!2859 = !DILocation(line: 876, column: 34, scope: !2841)
!2860 = !DILocation(line: 876, column: 47, scope: !2841)
!2861 = !DILocation(line: 876, column: 50, scope: !2841)
!2862 = !DILocation(line: 876, column: 3, scope: !2841)
!2863 = !DILocation(line: 877, column: 15, scope: !2841)
!2864 = !DILocation(line: 877, column: 22, scope: !2841)
!2865 = !DILocation(line: 877, column: 28, scope: !2841)
!2866 = !DILocation(line: 877, column: 34, scope: !2841)
!2867 = !DILocation(line: 877, column: 46, scope: !2841)
!2868 = !DILocation(line: 877, column: 53, scope: !2841)
!2869 = !DILocation(line: 877, column: 56, scope: !2841)
!2870 = !DILocation(line: 877, column: 3, scope: !2841)
!2871 = !DILocation(line: 878, column: 15, scope: !2841)
!2872 = !DILocation(line: 878, column: 22, scope: !2841)
!2873 = !DILocation(line: 878, column: 28, scope: !2841)
!2874 = !DILocation(line: 878, column: 34, scope: !2841)
!2875 = !DILocation(line: 878, column: 47, scope: !2841)
!2876 = !DILocation(line: 878, column: 50, scope: !2841)
!2877 = !DILocation(line: 878, column: 3, scope: !2841)
!2878 = !DILocation(line: 879, column: 15, scope: !2841)
!2879 = !DILocation(line: 879, column: 22, scope: !2841)
!2880 = !DILocation(line: 879, column: 28, scope: !2841)
!2881 = !DILocation(line: 879, column: 34, scope: !2841)
!2882 = !DILocation(line: 879, column: 46, scope: !2841)
!2883 = !DILocation(line: 879, column: 53, scope: !2841)
!2884 = !DILocation(line: 879, column: 56, scope: !2841)
!2885 = !DILocation(line: 879, column: 3, scope: !2841)
!2886 = !DILocation(line: 880, column: 15, scope: !2841)
!2887 = !DILocation(line: 880, column: 22, scope: !2841)
!2888 = !DILocation(line: 880, column: 28, scope: !2841)
!2889 = !DILocation(line: 880, column: 35, scope: !2841)
!2890 = !DILocation(line: 880, column: 48, scope: !2841)
!2891 = !DILocation(line: 880, column: 51, scope: !2841)
!2892 = !DILocation(line: 880, column: 3, scope: !2841)
!2893 = !DILocation(line: 881, column: 3, scope: !2841)
!2894 = !DILocation(line: 881, column: 9, scope: !2841)
!2895 = !DILocation(line: 881, column: 25, scope: !2841)
!2896 = !DILocation(line: 881, column: 33, scope: !2841)
!2897 = !DILocation(line: 883, column: 7, scope: !2898)
!2898 = distinct !DILexicalBlock(scope: !2841, file: !3, line: 883, column: 7)
!2899 = !DILocation(line: 883, column: 11, scope: !2898)
!2900 = !DILocation(line: 883, column: 7, scope: !2841)
!2901 = !DILocation(line: 885, column: 16, scope: !2902)
!2902 = distinct !DILexicalBlock(scope: !2898, file: !3, line: 883, column: 15)
!2903 = !DILocation(line: 885, column: 23, scope: !2902)
!2904 = !DILocation(line: 885, column: 29, scope: !2902)
!2905 = !DILocation(line: 885, column: 36, scope: !2902)
!2906 = !DILocation(line: 885, column: 48, scope: !2902)
!2907 = !DILocation(line: 885, column: 55, scope: !2902)
!2908 = !DILocation(line: 885, column: 58, scope: !2902)
!2909 = !DILocation(line: 885, column: 4, scope: !2902)
!2910 = !DILocation(line: 886, column: 16, scope: !2902)
!2911 = !DILocation(line: 886, column: 23, scope: !2902)
!2912 = !DILocation(line: 886, column: 29, scope: !2902)
!2913 = !DILocation(line: 886, column: 36, scope: !2902)
!2914 = !DILocation(line: 886, column: 49, scope: !2902)
!2915 = !DILocation(line: 886, column: 52, scope: !2902)
!2916 = !DILocation(line: 886, column: 4, scope: !2902)
!2917 = !DILocation(line: 887, column: 16, scope: !2902)
!2918 = !DILocation(line: 887, column: 23, scope: !2902)
!2919 = !DILocation(line: 887, column: 29, scope: !2902)
!2920 = !DILocation(line: 887, column: 36, scope: !2902)
!2921 = !DILocation(line: 887, column: 48, scope: !2902)
!2922 = !DILocation(line: 887, column: 55, scope: !2902)
!2923 = !DILocation(line: 887, column: 58, scope: !2902)
!2924 = !DILocation(line: 887, column: 4, scope: !2902)
!2925 = !DILocation(line: 888, column: 16, scope: !2902)
!2926 = !DILocation(line: 888, column: 23, scope: !2902)
!2927 = !DILocation(line: 888, column: 29, scope: !2902)
!2928 = !DILocation(line: 888, column: 36, scope: !2902)
!2929 = !DILocation(line: 888, column: 49, scope: !2902)
!2930 = !DILocation(line: 888, column: 52, scope: !2902)
!2931 = !DILocation(line: 888, column: 4, scope: !2902)
!2932 = !DILocation(line: 889, column: 16, scope: !2902)
!2933 = !DILocation(line: 889, column: 23, scope: !2902)
!2934 = !DILocation(line: 889, column: 29, scope: !2902)
!2935 = !DILocation(line: 889, column: 36, scope: !2902)
!2936 = !DILocation(line: 889, column: 48, scope: !2902)
!2937 = !DILocation(line: 889, column: 55, scope: !2902)
!2938 = !DILocation(line: 889, column: 58, scope: !2902)
!2939 = !DILocation(line: 889, column: 4, scope: !2902)
!2940 = !DILocation(line: 890, column: 16, scope: !2902)
!2941 = !DILocation(line: 890, column: 23, scope: !2902)
!2942 = !DILocation(line: 890, column: 29, scope: !2902)
!2943 = !DILocation(line: 890, column: 36, scope: !2902)
!2944 = !DILocation(line: 890, column: 49, scope: !2902)
!2945 = !DILocation(line: 890, column: 52, scope: !2902)
!2946 = !DILocation(line: 890, column: 4, scope: !2902)
!2947 = !DILocation(line: 891, column: 4, scope: !2902)
!2948 = !DILocation(line: 891, column: 10, scope: !2902)
!2949 = !DILocation(line: 891, column: 26, scope: !2902)
!2950 = !DILocation(line: 891, column: 34, scope: !2902)
!2951 = !DILocation(line: 892, column: 3, scope: !2902)
!2952 = !DILocation(line: 893, column: 2, scope: !2841)
!2953 = !DILocation(line: 870, column: 28, scope: !2836)
!2954 = !DILocation(line: 870, column: 34, scope: !2836)
!2955 = !DILocation(line: 870, column: 2, scope: !2836)
!2956 = distinct !{!2956, !2839, !2957}
!2957 = !DILocation(line: 893, column: 2, scope: !2833)
!2958 = !DILocation(line: 895, column: 2, scope: !2761)
!2959 = !DILocation(line: 895, column: 12, scope: !2761)
!2960 = !DILocation(line: 896, column: 1, scope: !2761)
!2961 = distinct !DISubprogram(name: "GPU_buffer_copy_edge", scope: !3, file: !3, line: 934, type: !214, scopeLine: 935, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1345)
!2962 = !DILocalVariable(name: "dm", arg: 1, scope: !2961, file: !3, line: 934, type: !216)
!2963 = !DILocation(line: 934, column: 47, scope: !2961)
!2964 = !DILocalVariable(name: "varray_", arg: 2, scope: !2961, file: !3, line: 934, type: !175)
!2965 = !DILocation(line: 934, column: 58, scope: !2961)
!2966 = !DILocalVariable(name: "UNUSED_index", arg: 3, scope: !2961, file: !3, line: 934, type: !170)
!2967 = !DILocation(line: 934, column: 72, scope: !2961)
!2968 = !DILocalVariable(name: "UNUSED_mat_orig_to_new", arg: 4, scope: !2961, file: !3, line: 934, type: !170)
!2969 = !DILocation(line: 934, column: 92, scope: !2961)
!2970 = !DILocalVariable(name: "UNUSED_user", arg: 5, scope: !2961, file: !3, line: 934, type: !167)
!2971 = !DILocation(line: 934, column: 123, scope: !2961)
!2972 = !DILocalVariable(name: "medge", scope: !2961, file: !3, line: 936, type: !2973)
!2973 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2974, size: 64)
!2974 = !DIDerivedType(tag: DW_TAG_typedef, name: "MEdge", file: !56, line: 52, baseType: !1006)
!2975 = !DILocation(line: 936, column: 9, scope: !2961)
!2976 = !DILocalVariable(name: "varray", scope: !2961, file: !3, line: 937, type: !178)
!2977 = !DILocation(line: 937, column: 16, scope: !2961)
!2978 = !DILocation(line: 937, column: 41, scope: !2961)
!2979 = !DILocation(line: 937, column: 25, scope: !2961)
!2980 = !DILocalVariable(name: "i", scope: !2961, file: !3, line: 938, type: !171)
!2981 = !DILocation(line: 938, column: 6, scope: !2961)
!2982 = !DILocalVariable(name: "totedge", scope: !2961, file: !3, line: 938, type: !171)
!2983 = !DILocation(line: 938, column: 9, scope: !2961)
!2984 = !DILocation(line: 940, column: 10, scope: !2961)
!2985 = !DILocation(line: 940, column: 14, scope: !2961)
!2986 = !DILocation(line: 940, column: 27, scope: !2961)
!2987 = !DILocation(line: 940, column: 8, scope: !2961)
!2988 = !DILocation(line: 941, column: 12, scope: !2961)
!2989 = !DILocation(line: 941, column: 16, scope: !2961)
!2990 = !DILocation(line: 941, column: 28, scope: !2961)
!2991 = !DILocation(line: 941, column: 10, scope: !2961)
!2992 = !DILocation(line: 943, column: 9, scope: !2993)
!2993 = distinct !DILexicalBlock(scope: !2961, file: !3, line: 943, column: 2)
!2994 = !DILocation(line: 943, column: 7, scope: !2993)
!2995 = !DILocation(line: 943, column: 14, scope: !2996)
!2996 = distinct !DILexicalBlock(scope: !2993, file: !3, line: 943, column: 2)
!2997 = !DILocation(line: 943, column: 18, scope: !2996)
!2998 = !DILocation(line: 943, column: 16, scope: !2996)
!2999 = !DILocation(line: 943, column: 2, scope: !2993)
!3000 = !DILocation(line: 944, column: 19, scope: !3001)
!3001 = distinct !DILexicalBlock(scope: !2996, file: !3, line: 943, column: 41)
!3002 = !DILocation(line: 944, column: 23, scope: !3001)
!3003 = !DILocation(line: 944, column: 35, scope: !3001)
!3004 = !DILocation(line: 944, column: 47, scope: !3001)
!3005 = !DILocation(line: 944, column: 54, scope: !3001)
!3006 = !DILocation(line: 944, column: 58, scope: !3001)
!3007 = !DILocation(line: 944, column: 3, scope: !3001)
!3008 = !DILocation(line: 944, column: 10, scope: !3001)
!3009 = !DILocation(line: 944, column: 12, scope: !3001)
!3010 = !DILocation(line: 944, column: 17, scope: !3001)
!3011 = !DILocation(line: 945, column: 23, scope: !3001)
!3012 = !DILocation(line: 945, column: 27, scope: !3001)
!3013 = !DILocation(line: 945, column: 39, scope: !3001)
!3014 = !DILocation(line: 945, column: 51, scope: !3001)
!3015 = !DILocation(line: 945, column: 58, scope: !3001)
!3016 = !DILocation(line: 945, column: 62, scope: !3001)
!3017 = !DILocation(line: 945, column: 3, scope: !3001)
!3018 = !DILocation(line: 945, column: 10, scope: !3001)
!3019 = !DILocation(line: 945, column: 12, scope: !3001)
!3020 = !DILocation(line: 945, column: 16, scope: !3001)
!3021 = !DILocation(line: 945, column: 21, scope: !3001)
!3022 = !DILocation(line: 946, column: 2, scope: !3001)
!3023 = !DILocation(line: 943, column: 28, scope: !2996)
!3024 = !DILocation(line: 943, column: 37, scope: !2996)
!3025 = !DILocation(line: 943, column: 2, scope: !2996)
!3026 = distinct !{!3026, !2999, !3027}
!3027 = !DILocation(line: 946, column: 2, scope: !2993)
!3028 = !DILocation(line: 947, column: 1, scope: !2961)
!3029 = distinct !DISubprogram(name: "GPU_buffer_copy_uvedge", scope: !3, file: !3, line: 949, type: !214, scopeLine: 950, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1345)
!3030 = !DILocalVariable(name: "dm", arg: 1, scope: !3029, file: !3, line: 949, type: !216)
!3031 = !DILocation(line: 949, column: 49, scope: !3029)
!3032 = !DILocalVariable(name: "varray", arg: 2, scope: !3029, file: !3, line: 949, type: !175)
!3033 = !DILocation(line: 949, column: 60, scope: !3029)
!3034 = !DILocalVariable(name: "UNUSED_index", arg: 3, scope: !3029, file: !3, line: 949, type: !170)
!3035 = !DILocation(line: 949, column: 73, scope: !3029)
!3036 = !DILocalVariable(name: "UNUSED_mat_orig_to_new", arg: 4, scope: !3029, file: !3, line: 949, type: !170)
!3037 = !DILocation(line: 949, column: 93, scope: !3029)
!3038 = !DILocalVariable(name: "UNUSED_user", arg: 5, scope: !3029, file: !3, line: 949, type: !167)
!3039 = !DILocation(line: 949, column: 124, scope: !3029)
!3040 = !DILocalVariable(name: "tf", scope: !3029, file: !3, line: 951, type: !2664)
!3041 = !DILocation(line: 951, column: 10, scope: !3029)
!3042 = !DILocation(line: 951, column: 42, scope: !3029)
!3043 = !DILocation(line: 951, column: 15, scope: !3029)
!3044 = !DILocalVariable(name: "i", scope: !3029, file: !3, line: 952, type: !171)
!3045 = !DILocation(line: 952, column: 6, scope: !3029)
!3046 = !DILocalVariable(name: "j", scope: !3029, file: !3, line: 952, type: !171)
!3047 = !DILocation(line: 952, column: 9, scope: !3029)
!3048 = !DILocation(line: 954, column: 7, scope: !3049)
!3049 = distinct !DILexicalBlock(scope: !3029, file: !3, line: 954, column: 6)
!3050 = !DILocation(line: 954, column: 6, scope: !3029)
!3051 = !DILocation(line: 955, column: 3, scope: !3049)
!3052 = !DILocation(line: 957, column: 9, scope: !3053)
!3053 = distinct !DILexicalBlock(scope: !3029, file: !3, line: 957, column: 2)
!3054 = !DILocation(line: 957, column: 7, scope: !3053)
!3055 = !DILocation(line: 957, column: 14, scope: !3056)
!3056 = distinct !DILexicalBlock(scope: !3053, file: !3, line: 957, column: 2)
!3057 = !DILocation(line: 957, column: 18, scope: !3056)
!3058 = !DILocation(line: 957, column: 22, scope: !3056)
!3059 = !DILocation(line: 957, column: 16, scope: !3056)
!3060 = !DILocation(line: 957, column: 2, scope: !3053)
!3061 = !DILocalVariable(name: "mf", scope: !3062, file: !3, line: 958, type: !1691)
!3062 = distinct !DILexicalBlock(scope: !3056, file: !3, line: 957, column: 50)
!3063 = !DILocation(line: 958, column: 9, scope: !3062)
!3064 = !DILocation(line: 959, column: 3, scope: !3062)
!3065 = !DILocation(line: 959, column: 7, scope: !3062)
!3066 = !DILocation(line: 959, column: 19, scope: !3062)
!3067 = !DILocation(line: 959, column: 23, scope: !3062)
!3068 = !DILocation(line: 961, column: 15, scope: !3062)
!3069 = !DILocation(line: 961, column: 22, scope: !3062)
!3070 = !DILocation(line: 961, column: 26, scope: !3062)
!3071 = !DILocation(line: 961, column: 30, scope: !3062)
!3072 = !DILocation(line: 961, column: 3, scope: !3062)
!3073 = !DILocation(line: 962, column: 15, scope: !3062)
!3074 = !DILocation(line: 962, column: 22, scope: !3062)
!3075 = !DILocation(line: 962, column: 24, scope: !3062)
!3076 = !DILocation(line: 962, column: 30, scope: !3062)
!3077 = !DILocation(line: 962, column: 34, scope: !3062)
!3078 = !DILocation(line: 962, column: 3, scope: !3062)
!3079 = !DILocation(line: 964, column: 15, scope: !3062)
!3080 = !DILocation(line: 964, column: 22, scope: !3062)
!3081 = !DILocation(line: 964, column: 24, scope: !3062)
!3082 = !DILocation(line: 964, column: 30, scope: !3062)
!3083 = !DILocation(line: 964, column: 34, scope: !3062)
!3084 = !DILocation(line: 964, column: 3, scope: !3062)
!3085 = !DILocation(line: 965, column: 15, scope: !3062)
!3086 = !DILocation(line: 965, column: 22, scope: !3062)
!3087 = !DILocation(line: 965, column: 24, scope: !3062)
!3088 = !DILocation(line: 965, column: 30, scope: !3062)
!3089 = !DILocation(line: 965, column: 34, scope: !3062)
!3090 = !DILocation(line: 965, column: 3, scope: !3062)
!3091 = !DILocation(line: 967, column: 11, scope: !3092)
!3092 = distinct !DILexicalBlock(scope: !3062, file: !3, line: 967, column: 7)
!3093 = !DILocation(line: 967, column: 8, scope: !3092)
!3094 = !DILocation(line: 967, column: 7, scope: !3062)
!3095 = !DILocation(line: 968, column: 16, scope: !3096)
!3096 = distinct !DILexicalBlock(scope: !3092, file: !3, line: 967, column: 15)
!3097 = !DILocation(line: 968, column: 23, scope: !3096)
!3098 = !DILocation(line: 968, column: 25, scope: !3096)
!3099 = !DILocation(line: 968, column: 31, scope: !3096)
!3100 = !DILocation(line: 968, column: 35, scope: !3096)
!3101 = !DILocation(line: 968, column: 4, scope: !3096)
!3102 = !DILocation(line: 969, column: 16, scope: !3096)
!3103 = !DILocation(line: 969, column: 23, scope: !3096)
!3104 = !DILocation(line: 969, column: 25, scope: !3096)
!3105 = !DILocation(line: 969, column: 32, scope: !3096)
!3106 = !DILocation(line: 969, column: 36, scope: !3096)
!3107 = !DILocation(line: 969, column: 4, scope: !3096)
!3108 = !DILocation(line: 970, column: 6, scope: !3096)
!3109 = !DILocation(line: 971, column: 3, scope: !3096)
!3110 = !DILocation(line: 973, column: 16, scope: !3111)
!3111 = distinct !DILexicalBlock(scope: !3092, file: !3, line: 972, column: 8)
!3112 = !DILocation(line: 973, column: 23, scope: !3111)
!3113 = !DILocation(line: 973, column: 25, scope: !3111)
!3114 = !DILocation(line: 973, column: 31, scope: !3111)
!3115 = !DILocation(line: 973, column: 35, scope: !3111)
!3116 = !DILocation(line: 973, column: 4, scope: !3111)
!3117 = !DILocation(line: 974, column: 16, scope: !3111)
!3118 = !DILocation(line: 974, column: 23, scope: !3111)
!3119 = !DILocation(line: 974, column: 25, scope: !3111)
!3120 = !DILocation(line: 974, column: 32, scope: !3111)
!3121 = !DILocation(line: 974, column: 36, scope: !3111)
!3122 = !DILocation(line: 974, column: 4, scope: !3111)
!3123 = !DILocation(line: 976, column: 16, scope: !3111)
!3124 = !DILocation(line: 976, column: 23, scope: !3111)
!3125 = !DILocation(line: 976, column: 25, scope: !3111)
!3126 = !DILocation(line: 976, column: 32, scope: !3111)
!3127 = !DILocation(line: 976, column: 36, scope: !3111)
!3128 = !DILocation(line: 976, column: 4, scope: !3111)
!3129 = !DILocation(line: 977, column: 16, scope: !3111)
!3130 = !DILocation(line: 977, column: 23, scope: !3111)
!3131 = !DILocation(line: 977, column: 25, scope: !3111)
!3132 = !DILocation(line: 977, column: 32, scope: !3111)
!3133 = !DILocation(line: 977, column: 36, scope: !3111)
!3134 = !DILocation(line: 977, column: 4, scope: !3111)
!3135 = !DILocation(line: 978, column: 6, scope: !3111)
!3136 = !DILocation(line: 980, column: 2, scope: !3062)
!3137 = !DILocation(line: 957, column: 40, scope: !3056)
!3138 = !DILocation(line: 957, column: 46, scope: !3056)
!3139 = !DILocation(line: 957, column: 2, scope: !3056)
!3140 = distinct !{!3140, !3060, !3141}
!3141 = !DILocation(line: 980, column: 2, scope: !3053)
!3142 = !DILocation(line: 981, column: 1, scope: !3029)
!3143 = distinct !DISubprogram(name: "GPU_vertex_setup", scope: !3, file: !3, line: 1102, type: !974, scopeLine: 1103, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1345)
!3144 = !DILocalVariable(name: "dm", arg: 1, scope: !3143, file: !3, line: 1102, type: !216)
!3145 = !DILocation(line: 1102, column: 36, scope: !3143)
!3146 = !DILocation(line: 1104, column: 31, scope: !3147)
!3147 = distinct !DILexicalBlock(scope: !3143, file: !3, line: 1104, column: 6)
!3148 = !DILocation(line: 1104, column: 7, scope: !3147)
!3149 = !DILocation(line: 1104, column: 6, scope: !3143)
!3150 = !DILocation(line: 1105, column: 3, scope: !3147)
!3151 = !DILocation(line: 1107, column: 2, scope: !3143)
!3152 = !DILocation(line: 1108, column: 6, scope: !3153)
!3153 = distinct !DILexicalBlock(scope: !3143, file: !3, line: 1108, column: 6)
!3154 = !DILocation(line: 1108, column: 6, scope: !3143)
!3155 = !DILocation(line: 1109, column: 3, scope: !3156)
!3156 = distinct !DILexicalBlock(scope: !3153, file: !3, line: 1108, column: 15)
!3157 = !DILocation(line: 1109, column: 40, scope: !3156)
!3158 = !DILocation(line: 1109, column: 44, scope: !3156)
!3159 = !DILocation(line: 1109, column: 56, scope: !3156)
!3160 = !DILocation(line: 1109, column: 64, scope: !3156)
!3161 = !DILocation(line: 1110, column: 3, scope: !3156)
!3162 = !DILocation(line: 1111, column: 2, scope: !3156)
!3163 = !DILocation(line: 1113, column: 35, scope: !3164)
!3164 = distinct !DILexicalBlock(scope: !3153, file: !3, line: 1112, column: 7)
!3165 = !DILocation(line: 1113, column: 39, scope: !3164)
!3166 = !DILocation(line: 1113, column: 51, scope: !3164)
!3167 = !DILocation(line: 1113, column: 59, scope: !3164)
!3168 = !DILocation(line: 1113, column: 3, scope: !3164)
!3169 = !DILocation(line: 1116, column: 11, scope: !3143)
!3170 = !DILocation(line: 1117, column: 1, scope: !3143)
!3171 = distinct !DISubprogram(name: "gpu_buffer_setup_common", scope: !3, file: !3, line: 1088, type: !3172, scopeLine: 1089, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1345)
!3172 = !DISubroutineType(types: !3173)
!3173 = !{!283, !216, !3174}
!3174 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPUBufferType", file: !3, line: 991, baseType: !33)
!3175 = !DILocalVariable(name: "dm", arg: 1, scope: !3171, file: !3, line: 1088, type: !216)
!3176 = !DILocation(line: 1088, column: 56, scope: !3171)
!3177 = !DILocalVariable(name: "type", arg: 2, scope: !3171, file: !3, line: 1088, type: !3174)
!3178 = !DILocation(line: 1088, column: 74, scope: !3171)
!3179 = !DILocalVariable(name: "buf", scope: !3171, file: !3, line: 1090, type: !1361)
!3180 = !DILocation(line: 1090, column: 14, scope: !3171)
!3181 = !DILocation(line: 1092, column: 7, scope: !3182)
!3182 = distinct !DILexicalBlock(scope: !3171, file: !3, line: 1092, column: 6)
!3183 = !DILocation(line: 1092, column: 11, scope: !3182)
!3184 = !DILocation(line: 1092, column: 6, scope: !3171)
!3185 = !DILocation(line: 1093, column: 39, scope: !3182)
!3186 = !DILocation(line: 1093, column: 20, scope: !3182)
!3187 = !DILocation(line: 1093, column: 3, scope: !3182)
!3188 = !DILocation(line: 1093, column: 7, scope: !3182)
!3189 = !DILocation(line: 1093, column: 18, scope: !3182)
!3190 = !DILocation(line: 1095, column: 40, scope: !3171)
!3191 = !DILocation(line: 1095, column: 44, scope: !3171)
!3192 = !DILocation(line: 1095, column: 56, scope: !3171)
!3193 = !DILocation(line: 1095, column: 8, scope: !3171)
!3194 = !DILocation(line: 1095, column: 6, scope: !3171)
!3195 = !DILocation(line: 1096, column: 9, scope: !3196)
!3196 = distinct !DILexicalBlock(scope: !3171, file: !3, line: 1096, column: 6)
!3197 = !DILocation(line: 1096, column: 8, scope: !3196)
!3198 = !DILocation(line: 1096, column: 7, scope: !3196)
!3199 = !DILocation(line: 1096, column: 6, scope: !3171)
!3200 = !DILocation(line: 1097, column: 32, scope: !3196)
!3201 = !DILocation(line: 1097, column: 36, scope: !3196)
!3202 = !DILocation(line: 1097, column: 10, scope: !3196)
!3203 = !DILocation(line: 1097, column: 4, scope: !3196)
!3204 = !DILocation(line: 1097, column: 8, scope: !3196)
!3205 = !DILocation(line: 1097, column: 3, scope: !3196)
!3206 = !DILocation(line: 1099, column: 10, scope: !3171)
!3207 = !DILocation(line: 1099, column: 9, scope: !3171)
!3208 = !DILocation(line: 1099, column: 2, scope: !3171)
!3209 = distinct !DISubprogram(name: "GPU_normal_setup", scope: !3, file: !3, line: 1119, type: !974, scopeLine: 1120, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1345)
!3210 = !DILocalVariable(name: "dm", arg: 1, scope: !3209, file: !3, line: 1119, type: !216)
!3211 = !DILocation(line: 1119, column: 36, scope: !3209)
!3212 = !DILocation(line: 1121, column: 31, scope: !3213)
!3213 = distinct !DILexicalBlock(scope: !3209, file: !3, line: 1121, column: 6)
!3214 = !DILocation(line: 1121, column: 7, scope: !3213)
!3215 = !DILocation(line: 1121, column: 6, scope: !3209)
!3216 = !DILocation(line: 1122, column: 3, scope: !3213)
!3217 = !DILocation(line: 1124, column: 2, scope: !3209)
!3218 = !DILocation(line: 1125, column: 6, scope: !3219)
!3219 = distinct !DILexicalBlock(scope: !3209, file: !3, line: 1125, column: 6)
!3220 = !DILocation(line: 1125, column: 6, scope: !3209)
!3221 = !DILocation(line: 1126, column: 3, scope: !3222)
!3222 = distinct !DILexicalBlock(scope: !3219, file: !3, line: 1125, column: 15)
!3223 = !DILocation(line: 1126, column: 40, scope: !3222)
!3224 = !DILocation(line: 1126, column: 44, scope: !3222)
!3225 = !DILocation(line: 1126, column: 56, scope: !3222)
!3226 = !DILocation(line: 1126, column: 65, scope: !3222)
!3227 = !DILocation(line: 1127, column: 3, scope: !3222)
!3228 = !DILocation(line: 1128, column: 2, scope: !3222)
!3229 = !DILocation(line: 1130, column: 32, scope: !3230)
!3230 = distinct !DILexicalBlock(scope: !3219, file: !3, line: 1129, column: 7)
!3231 = !DILocation(line: 1130, column: 36, scope: !3230)
!3232 = !DILocation(line: 1130, column: 48, scope: !3230)
!3233 = !DILocation(line: 1130, column: 57, scope: !3230)
!3234 = !DILocation(line: 1130, column: 3, scope: !3230)
!3235 = !DILocation(line: 1133, column: 11, scope: !3209)
!3236 = !DILocation(line: 1134, column: 1, scope: !3209)
!3237 = distinct !DISubprogram(name: "GPU_uv_setup", scope: !3, file: !3, line: 1136, type: !974, scopeLine: 1137, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1345)
!3238 = !DILocalVariable(name: "dm", arg: 1, scope: !3237, file: !3, line: 1136, type: !216)
!3239 = !DILocation(line: 1136, column: 32, scope: !3237)
!3240 = !DILocation(line: 1138, column: 31, scope: !3241)
!3241 = distinct !DILexicalBlock(scope: !3237, file: !3, line: 1138, column: 6)
!3242 = !DILocation(line: 1138, column: 7, scope: !3241)
!3243 = !DILocation(line: 1138, column: 6, scope: !3237)
!3244 = !DILocation(line: 1139, column: 3, scope: !3241)
!3245 = !DILocation(line: 1141, column: 2, scope: !3237)
!3246 = !DILocation(line: 1142, column: 6, scope: !3247)
!3247 = distinct !DILexicalBlock(scope: !3237, file: !3, line: 1142, column: 6)
!3248 = !DILocation(line: 1142, column: 6, scope: !3237)
!3249 = !DILocation(line: 1143, column: 3, scope: !3250)
!3250 = distinct !DILexicalBlock(scope: !3247, file: !3, line: 1142, column: 15)
!3251 = !DILocation(line: 1143, column: 40, scope: !3250)
!3252 = !DILocation(line: 1143, column: 44, scope: !3250)
!3253 = !DILocation(line: 1143, column: 56, scope: !3250)
!3254 = !DILocation(line: 1143, column: 60, scope: !3250)
!3255 = !DILocation(line: 1144, column: 3, scope: !3250)
!3256 = !DILocation(line: 1145, column: 2, scope: !3250)
!3257 = !DILocation(line: 1147, column: 37, scope: !3258)
!3258 = distinct !DILexicalBlock(scope: !3247, file: !3, line: 1146, column: 7)
!3259 = !DILocation(line: 1147, column: 41, scope: !3258)
!3260 = !DILocation(line: 1147, column: 53, scope: !3258)
!3261 = !DILocation(line: 1147, column: 57, scope: !3258)
!3262 = !DILocation(line: 1147, column: 3, scope: !3258)
!3263 = !DILocation(line: 1150, column: 11, scope: !3237)
!3264 = !DILocation(line: 1151, column: 1, scope: !3237)
!3265 = distinct !DISubprogram(name: "GPU_texpaint_uv_setup", scope: !3, file: !3, line: 1153, type: !974, scopeLine: 1154, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1345)
!3266 = !DILocalVariable(name: "dm", arg: 1, scope: !3265, file: !3, line: 1153, type: !216)
!3267 = !DILocation(line: 1153, column: 41, scope: !3265)
!3268 = !DILocation(line: 1155, column: 31, scope: !3269)
!3269 = distinct !DILexicalBlock(scope: !3265, file: !3, line: 1155, column: 6)
!3270 = !DILocation(line: 1155, column: 7, scope: !3269)
!3271 = !DILocation(line: 1155, column: 6, scope: !3265)
!3272 = !DILocation(line: 1156, column: 3, scope: !3269)
!3273 = !DILocation(line: 1158, column: 2, scope: !3265)
!3274 = !DILocation(line: 1159, column: 6, scope: !3275)
!3275 = distinct !DILexicalBlock(scope: !3265, file: !3, line: 1159, column: 6)
!3276 = !DILocation(line: 1159, column: 6, scope: !3265)
!3277 = !DILocation(line: 1160, column: 3, scope: !3278)
!3278 = distinct !DILexicalBlock(scope: !3275, file: !3, line: 1159, column: 15)
!3279 = !DILocation(line: 1160, column: 40, scope: !3278)
!3280 = !DILocation(line: 1160, column: 44, scope: !3278)
!3281 = !DILocation(line: 1160, column: 56, scope: !3278)
!3282 = !DILocation(line: 1160, column: 60, scope: !3278)
!3283 = !DILocation(line: 1161, column: 3, scope: !3278)
!3284 = !DILocation(line: 1162, column: 3, scope: !3278)
!3285 = !DILocation(line: 1163, column: 3, scope: !3278)
!3286 = !DILocation(line: 1164, column: 3, scope: !3278)
!3287 = !DILocation(line: 1165, column: 3, scope: !3278)
!3288 = !DILocation(line: 1166, column: 2, scope: !3278)
!3289 = !DILocation(line: 1168, column: 53, scope: !3290)
!3290 = distinct !DILexicalBlock(scope: !3275, file: !3, line: 1167, column: 7)
!3291 = !DILocation(line: 1168, column: 57, scope: !3290)
!3292 = !DILocation(line: 1168, column: 69, scope: !3290)
!3293 = !DILocation(line: 1168, column: 73, scope: !3290)
!3294 = !DILocation(line: 1168, column: 3, scope: !3290)
!3295 = !DILocation(line: 1169, column: 3, scope: !3290)
!3296 = !DILocation(line: 1170, column: 3, scope: !3290)
!3297 = !DILocation(line: 1171, column: 61, scope: !3290)
!3298 = !DILocation(line: 1171, column: 65, scope: !3290)
!3299 = !DILocation(line: 1171, column: 77, scope: !3290)
!3300 = !DILocation(line: 1171, column: 81, scope: !3290)
!3301 = !DILocation(line: 1171, column: 89, scope: !3290)
!3302 = !DILocation(line: 1171, column: 3, scope: !3290)
!3303 = !DILocation(line: 1172, column: 3, scope: !3290)
!3304 = !DILocation(line: 1175, column: 11, scope: !3265)
!3305 = !DILocation(line: 1176, column: 1, scope: !3265)
!3306 = distinct !DISubprogram(name: "GPU_color_setup", scope: !3, file: !3, line: 1179, type: !3307, scopeLine: 1180, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1345)
!3307 = !DISubroutineType(types: !3308)
!3308 = !{null, !216, !171}
!3309 = !DILocalVariable(name: "dm", arg: 1, scope: !3306, file: !3, line: 1179, type: !216)
!3310 = !DILocation(line: 1179, column: 35, scope: !3306)
!3311 = !DILocalVariable(name: "colType", arg: 2, scope: !3306, file: !3, line: 1179, type: !171)
!3312 = !DILocation(line: 1179, column: 43, scope: !3306)
!3313 = !DILocation(line: 1181, column: 7, scope: !3314)
!3314 = distinct !DILexicalBlock(scope: !3306, file: !3, line: 1181, column: 6)
!3315 = !DILocation(line: 1181, column: 11, scope: !3314)
!3316 = !DILocation(line: 1181, column: 6, scope: !3306)
!3317 = !DILocation(line: 1184, column: 39, scope: !3318)
!3318 = distinct !DILexicalBlock(scope: !3314, file: !3, line: 1181, column: 23)
!3319 = !DILocation(line: 1184, column: 20, scope: !3318)
!3320 = !DILocation(line: 1184, column: 3, scope: !3318)
!3321 = !DILocation(line: 1184, column: 7, scope: !3318)
!3322 = !DILocation(line: 1184, column: 18, scope: !3318)
!3323 = !DILocation(line: 1185, column: 3, scope: !3318)
!3324 = !DILocation(line: 1185, column: 7, scope: !3318)
!3325 = !DILocation(line: 1185, column: 13, scope: !3318)
!3326 = !DILocation(line: 1186, column: 29, scope: !3318)
!3327 = !DILocation(line: 1186, column: 3, scope: !3318)
!3328 = !DILocation(line: 1186, column: 7, scope: !3318)
!3329 = !DILocation(line: 1186, column: 19, scope: !3318)
!3330 = !DILocation(line: 1186, column: 27, scope: !3318)
!3331 = !DILocation(line: 1187, column: 2, scope: !3318)
!3332 = !DILocation(line: 1190, column: 12, scope: !3333)
!3333 = distinct !DILexicalBlock(scope: !3314, file: !3, line: 1190, column: 11)
!3334 = !DILocation(line: 1190, column: 16, scope: !3333)
!3335 = !DILocation(line: 1190, column: 22, scope: !3333)
!3336 = !DILocation(line: 1190, column: 51, scope: !3333)
!3337 = !DILocation(line: 1190, column: 55, scope: !3333)
!3338 = !DILocation(line: 1190, column: 66, scope: !3333)
!3339 = !DILocation(line: 1190, column: 70, scope: !3333)
!3340 = !DILocation(line: 1190, column: 82, scope: !3333)
!3341 = !DILocation(line: 1190, column: 63, scope: !3333)
!3342 = !DILocation(line: 1190, column: 11, scope: !3314)
!3343 = !DILocalVariable(name: "buf", scope: !3344, file: !3, line: 1191, type: !1361)
!3344 = distinct !DILexicalBlock(scope: !3333, file: !3, line: 1190, column: 92)
!3345 = !DILocation(line: 1191, column: 15, scope: !3344)
!3346 = !DILocation(line: 1191, column: 53, scope: !3344)
!3347 = !DILocation(line: 1191, column: 57, scope: !3344)
!3348 = !DILocation(line: 1191, column: 21, scope: !3344)
!3349 = !DILocation(line: 1195, column: 20, scope: !3344)
!3350 = !DILocation(line: 1195, column: 19, scope: !3344)
!3351 = !DILocation(line: 1195, column: 3, scope: !3344)
!3352 = !DILocation(line: 1196, column: 4, scope: !3344)
!3353 = !DILocation(line: 1196, column: 8, scope: !3344)
!3354 = !DILocation(line: 1197, column: 3, scope: !3344)
!3355 = !DILocation(line: 1197, column: 7, scope: !3344)
!3356 = !DILocation(line: 1197, column: 13, scope: !3344)
!3357 = !DILocation(line: 1198, column: 29, scope: !3344)
!3358 = !DILocation(line: 1198, column: 3, scope: !3344)
!3359 = !DILocation(line: 1198, column: 7, scope: !3344)
!3360 = !DILocation(line: 1198, column: 19, scope: !3344)
!3361 = !DILocation(line: 1198, column: 27, scope: !3344)
!3362 = !DILocation(line: 1199, column: 2, scope: !3344)
!3363 = !DILocation(line: 1201, column: 31, scope: !3364)
!3364 = distinct !DILexicalBlock(scope: !3306, file: !3, line: 1201, column: 6)
!3365 = !DILocation(line: 1201, column: 7, scope: !3364)
!3366 = !DILocation(line: 1201, column: 6, scope: !3306)
!3367 = !DILocation(line: 1202, column: 3, scope: !3364)
!3368 = !DILocation(line: 1204, column: 2, scope: !3306)
!3369 = !DILocation(line: 1205, column: 6, scope: !3370)
!3370 = distinct !DILexicalBlock(scope: !3306, file: !3, line: 1205, column: 6)
!3371 = !DILocation(line: 1205, column: 6, scope: !3306)
!3372 = !DILocation(line: 1206, column: 3, scope: !3373)
!3373 = distinct !DILexicalBlock(scope: !3370, file: !3, line: 1205, column: 15)
!3374 = !DILocation(line: 1206, column: 40, scope: !3373)
!3375 = !DILocation(line: 1206, column: 44, scope: !3373)
!3376 = !DILocation(line: 1206, column: 56, scope: !3373)
!3377 = !DILocation(line: 1206, column: 64, scope: !3373)
!3378 = !DILocation(line: 1207, column: 3, scope: !3373)
!3379 = !DILocation(line: 1208, column: 2, scope: !3373)
!3380 = !DILocation(line: 1210, column: 42, scope: !3381)
!3381 = distinct !DILexicalBlock(scope: !3370, file: !3, line: 1209, column: 7)
!3382 = !DILocation(line: 1210, column: 46, scope: !3381)
!3383 = !DILocation(line: 1210, column: 58, scope: !3381)
!3384 = !DILocation(line: 1210, column: 66, scope: !3381)
!3385 = !DILocation(line: 1210, column: 3, scope: !3381)
!3386 = !DILocation(line: 1213, column: 11, scope: !3306)
!3387 = !DILocation(line: 1214, column: 1, scope: !3306)
!3388 = distinct !DISubprogram(name: "gpu_drawobject_buffer_from_type", scope: !3, file: !3, line: 1010, type: !3389, scopeLine: 1011, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1345)
!3389 = !DISubroutineType(types: !3390)
!3390 = !{!1361, !1683, !3174}
!3391 = !DILocalVariable(name: "gdo", arg: 1, scope: !3388, file: !3, line: 1010, type: !1683)
!3392 = !DILocation(line: 1010, column: 67, scope: !3388)
!3393 = !DILocalVariable(name: "type", arg: 2, scope: !3388, file: !3, line: 1010, type: !3174)
!3394 = !DILocation(line: 1010, column: 86, scope: !3388)
!3395 = !DILocation(line: 1012, column: 10, scope: !3388)
!3396 = !DILocation(line: 1012, column: 2, scope: !3388)
!3397 = !DILocation(line: 1014, column: 12, scope: !3398)
!3398 = distinct !DILexicalBlock(scope: !3388, file: !3, line: 1012, column: 16)
!3399 = !DILocation(line: 1014, column: 17, scope: !3398)
!3400 = !DILocation(line: 1014, column: 4, scope: !3398)
!3401 = !DILocation(line: 1016, column: 12, scope: !3398)
!3402 = !DILocation(line: 1016, column: 17, scope: !3398)
!3403 = !DILocation(line: 1016, column: 4, scope: !3398)
!3404 = !DILocation(line: 1018, column: 12, scope: !3398)
!3405 = !DILocation(line: 1018, column: 17, scope: !3398)
!3406 = !DILocation(line: 1018, column: 4, scope: !3398)
!3407 = !DILocation(line: 1020, column: 12, scope: !3398)
!3408 = !DILocation(line: 1020, column: 17, scope: !3398)
!3409 = !DILocation(line: 1020, column: 4, scope: !3398)
!3410 = !DILocation(line: 1022, column: 12, scope: !3398)
!3411 = !DILocation(line: 1022, column: 17, scope: !3398)
!3412 = !DILocation(line: 1022, column: 4, scope: !3398)
!3413 = !DILocation(line: 1024, column: 12, scope: !3398)
!3414 = !DILocation(line: 1024, column: 17, scope: !3398)
!3415 = !DILocation(line: 1024, column: 4, scope: !3398)
!3416 = !DILocation(line: 1026, column: 12, scope: !3398)
!3417 = !DILocation(line: 1026, column: 17, scope: !3398)
!3418 = !DILocation(line: 1026, column: 4, scope: !3398)
!3419 = !DILocation(line: 1028, column: 4, scope: !3398)
!3420 = !DILocation(line: 1030, column: 1, scope: !3388)
!3421 = distinct !DISubprogram(name: "GPU_edge_setup", scope: !3, file: !3, line: 1216, type: !974, scopeLine: 1217, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1345)
!3422 = !DILocalVariable(name: "dm", arg: 1, scope: !3421, file: !3, line: 1216, type: !216)
!3423 = !DILocation(line: 1216, column: 34, scope: !3421)
!3424 = !DILocation(line: 1218, column: 31, scope: !3425)
!3425 = distinct !DILexicalBlock(scope: !3421, file: !3, line: 1218, column: 6)
!3426 = !DILocation(line: 1218, column: 7, scope: !3425)
!3427 = !DILocation(line: 1218, column: 6, scope: !3421)
!3428 = !DILocation(line: 1219, column: 3, scope: !3425)
!3429 = !DILocation(line: 1221, column: 31, scope: !3430)
!3430 = distinct !DILexicalBlock(scope: !3421, file: !3, line: 1221, column: 6)
!3431 = !DILocation(line: 1221, column: 7, scope: !3430)
!3432 = !DILocation(line: 1221, column: 6, scope: !3421)
!3433 = !DILocation(line: 1222, column: 3, scope: !3430)
!3434 = !DILocation(line: 1224, column: 2, scope: !3421)
!3435 = !DILocation(line: 1225, column: 6, scope: !3436)
!3436 = distinct !DILexicalBlock(scope: !3421, file: !3, line: 1225, column: 6)
!3437 = !DILocation(line: 1225, column: 6, scope: !3421)
!3438 = !DILocation(line: 1226, column: 3, scope: !3439)
!3439 = distinct !DILexicalBlock(scope: !3436, file: !3, line: 1225, column: 15)
!3440 = !DILocation(line: 1226, column: 40, scope: !3439)
!3441 = !DILocation(line: 1226, column: 44, scope: !3439)
!3442 = !DILocation(line: 1226, column: 56, scope: !3439)
!3443 = !DILocation(line: 1226, column: 64, scope: !3439)
!3444 = !DILocation(line: 1227, column: 3, scope: !3439)
!3445 = !DILocation(line: 1228, column: 2, scope: !3439)
!3446 = !DILocation(line: 1230, column: 35, scope: !3447)
!3447 = distinct !DILexicalBlock(scope: !3436, file: !3, line: 1229, column: 7)
!3448 = !DILocation(line: 1230, column: 39, scope: !3447)
!3449 = !DILocation(line: 1230, column: 51, scope: !3447)
!3450 = !DILocation(line: 1230, column: 59, scope: !3447)
!3451 = !DILocation(line: 1230, column: 3, scope: !3447)
!3452 = !DILocation(line: 1233, column: 11, scope: !3421)
!3453 = !DILocation(line: 1235, column: 6, scope: !3454)
!3454 = distinct !DILexicalBlock(scope: !3421, file: !3, line: 1235, column: 6)
!3455 = !DILocation(line: 1235, column: 6, scope: !3421)
!3456 = !DILocation(line: 1236, column: 3, scope: !3454)
!3457 = !DILocation(line: 1236, column: 48, scope: !3454)
!3458 = !DILocation(line: 1236, column: 52, scope: !3454)
!3459 = !DILocation(line: 1236, column: 64, scope: !3454)
!3460 = !DILocation(line: 1236, column: 71, scope: !3454)
!3461 = !DILocation(line: 1238, column: 11, scope: !3421)
!3462 = !DILocation(line: 1239, column: 1, scope: !3421)
!3463 = distinct !DISubprogram(name: "GPU_uvedge_setup", scope: !3, file: !3, line: 1241, type: !974, scopeLine: 1242, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1345)
!3464 = !DILocalVariable(name: "dm", arg: 1, scope: !3463, file: !3, line: 1241, type: !216)
!3465 = !DILocation(line: 1241, column: 36, scope: !3463)
!3466 = !DILocation(line: 1243, column: 31, scope: !3467)
!3467 = distinct !DILexicalBlock(scope: !3463, file: !3, line: 1243, column: 6)
!3468 = !DILocation(line: 1243, column: 7, scope: !3467)
!3469 = !DILocation(line: 1243, column: 6, scope: !3463)
!3470 = !DILocation(line: 1244, column: 3, scope: !3467)
!3471 = !DILocation(line: 1246, column: 2, scope: !3463)
!3472 = !DILocation(line: 1247, column: 6, scope: !3473)
!3473 = distinct !DILexicalBlock(scope: !3463, file: !3, line: 1247, column: 6)
!3474 = !DILocation(line: 1247, column: 6, scope: !3463)
!3475 = !DILocation(line: 1248, column: 3, scope: !3476)
!3476 = distinct !DILexicalBlock(scope: !3473, file: !3, line: 1247, column: 15)
!3477 = !DILocation(line: 1248, column: 40, scope: !3476)
!3478 = !DILocation(line: 1248, column: 44, scope: !3476)
!3479 = !DILocation(line: 1248, column: 56, scope: !3476)
!3480 = !DILocation(line: 1248, column: 65, scope: !3476)
!3481 = !DILocation(line: 1249, column: 3, scope: !3476)
!3482 = !DILocation(line: 1250, column: 2, scope: !3476)
!3483 = !DILocation(line: 1252, column: 35, scope: !3484)
!3484 = distinct !DILexicalBlock(scope: !3473, file: !3, line: 1251, column: 7)
!3485 = !DILocation(line: 1252, column: 39, scope: !3484)
!3486 = !DILocation(line: 1252, column: 51, scope: !3484)
!3487 = !DILocation(line: 1252, column: 60, scope: !3484)
!3488 = !DILocation(line: 1252, column: 3, scope: !3484)
!3489 = !DILocation(line: 1255, column: 11, scope: !3463)
!3490 = !DILocation(line: 1256, column: 1, scope: !3463)
!3491 = distinct !DISubprogram(name: "GPU_attrib_element_size", scope: !3, file: !3, line: 1276, type: !3492, scopeLine: 1277, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1345)
!3492 = !DISubroutineType(types: !3493)
!3493 = !{!171, !3494, !171}
!3494 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1332, size: 64)
!3495 = !DILocalVariable(name: "data", arg: 1, scope: !3491, file: !3, line: 1276, type: !3494)
!3496 = !DILocation(line: 1276, column: 39, scope: !3491)
!3497 = !DILocalVariable(name: "numdata", arg: 2, scope: !3491, file: !3, line: 1276, type: !171)
!3498 = !DILocation(line: 1276, column: 51, scope: !3491)
!3499 = !DILocalVariable(name: "i", scope: !3491, file: !3, line: 1278, type: !171)
!3500 = !DILocation(line: 1278, column: 6, scope: !3491)
!3501 = !DILocalVariable(name: "elementsize", scope: !3491, file: !3, line: 1278, type: !171)
!3502 = !DILocation(line: 1278, column: 9, scope: !3491)
!3503 = !DILocation(line: 1280, column: 9, scope: !3504)
!3504 = distinct !DILexicalBlock(scope: !3491, file: !3, line: 1280, column: 2)
!3505 = !DILocation(line: 1280, column: 7, scope: !3504)
!3506 = !DILocation(line: 1280, column: 14, scope: !3507)
!3507 = distinct !DILexicalBlock(scope: !3504, file: !3, line: 1280, column: 2)
!3508 = !DILocation(line: 1280, column: 18, scope: !3507)
!3509 = !DILocation(line: 1280, column: 16, scope: !3507)
!3510 = !DILocation(line: 1280, column: 2, scope: !3504)
!3511 = !DILocalVariable(name: "typesize", scope: !3512, file: !3, line: 1281, type: !171)
!3512 = distinct !DILexicalBlock(scope: !3507, file: !3, line: 1280, column: 32)
!3513 = !DILocation(line: 1281, column: 7, scope: !3512)
!3514 = !DILocation(line: 1281, column: 31, scope: !3512)
!3515 = !DILocation(line: 1281, column: 36, scope: !3512)
!3516 = !DILocation(line: 1281, column: 39, scope: !3512)
!3517 = !DILocation(line: 1281, column: 18, scope: !3512)
!3518 = !DILocation(line: 1282, column: 7, scope: !3519)
!3519 = distinct !DILexicalBlock(scope: !3512, file: !3, line: 1282, column: 7)
!3520 = !DILocation(line: 1282, column: 16, scope: !3519)
!3521 = !DILocation(line: 1282, column: 7, scope: !3512)
!3522 = !DILocation(line: 1283, column: 19, scope: !3519)
!3523 = !DILocation(line: 1283, column: 30, scope: !3519)
!3524 = !DILocation(line: 1283, column: 35, scope: !3519)
!3525 = !DILocation(line: 1283, column: 38, scope: !3519)
!3526 = !DILocation(line: 1283, column: 28, scope: !3519)
!3527 = !DILocation(line: 1283, column: 16, scope: !3519)
!3528 = !DILocation(line: 1283, column: 4, scope: !3519)
!3529 = !DILocation(line: 1284, column: 2, scope: !3512)
!3530 = !DILocation(line: 1280, column: 28, scope: !3507)
!3531 = !DILocation(line: 1280, column: 2, scope: !3507)
!3532 = distinct !{!3532, !3510, !3533}
!3533 = !DILocation(line: 1284, column: 2, scope: !3504)
!3534 = !DILocation(line: 1285, column: 9, scope: !3491)
!3535 = !DILocation(line: 1285, column: 2, scope: !3491)
!3536 = distinct !DISubprogram(name: "GPU_typesize", scope: !3, file: !3, line: 1258, type: !3537, scopeLine: 1259, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1345)
!3537 = !DISubroutineType(types: !3538)
!3538 = !{!171, !171}
!3539 = !DILocalVariable(name: "type", arg: 1, scope: !3536, file: !3, line: 1258, type: !171)
!3540 = !DILocation(line: 1258, column: 29, scope: !3536)
!3541 = !DILocation(line: 1260, column: 10, scope: !3536)
!3542 = !DILocation(line: 1260, column: 2, scope: !3536)
!3543 = !DILocation(line: 1262, column: 4, scope: !3544)
!3544 = distinct !DILexicalBlock(scope: !3536, file: !3, line: 1260, column: 16)
!3545 = !DILocation(line: 1264, column: 4, scope: !3544)
!3546 = !DILocation(line: 1266, column: 4, scope: !3544)
!3547 = !DILocation(line: 1268, column: 4, scope: !3544)
!3548 = !DILocation(line: 1270, column: 4, scope: !3544)
!3549 = !DILocation(line: 1272, column: 4, scope: !3544)
!3550 = !DILocation(line: 1274, column: 1, scope: !3536)
!3551 = distinct !DISubprogram(name: "GPU_interleaved_attrib_setup", scope: !3, file: !3, line: 1288, type: !3552, scopeLine: 1289, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1345)
!3552 = !DISubroutineType(types: !3553)
!3553 = !{null, !283, !3494, !171}
!3554 = !DILocalVariable(name: "buffer", arg: 1, scope: !3551, file: !3, line: 1288, type: !283)
!3555 = !DILocation(line: 1288, column: 46, scope: !3551)
!3556 = !DILocalVariable(name: "data", arg: 2, scope: !3551, file: !3, line: 1288, type: !3494)
!3557 = !DILocation(line: 1288, column: 64, scope: !3551)
!3558 = !DILocalVariable(name: "numdata", arg: 3, scope: !3551, file: !3, line: 1288, type: !171)
!3559 = !DILocation(line: 1288, column: 76, scope: !3551)
!3560 = !DILocalVariable(name: "i", scope: !3551, file: !3, line: 1290, type: !171)
!3561 = !DILocation(line: 1290, column: 6, scope: !3551)
!3562 = !DILocalVariable(name: "elementsize", scope: !3551, file: !3, line: 1291, type: !171)
!3563 = !DILocation(line: 1291, column: 6, scope: !3551)
!3564 = !DILocalVariable(name: "offset", scope: !3551, file: !3, line: 1292, type: !3565)
!3565 = !DIDerivedType(tag: DW_TAG_typedef, name: "intptr_t", file: !3566, line: 87, baseType: !3567)
!3566 = !DIFile(filename: "/usr/include/stdint.h", directory: "")
!3567 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!3568 = !DILocation(line: 1292, column: 11, scope: !3551)
!3569 = !DILocation(line: 1294, column: 9, scope: !3570)
!3570 = distinct !DILexicalBlock(scope: !3551, file: !3, line: 1294, column: 2)
!3571 = !DILocation(line: 1294, column: 7, scope: !3570)
!3572 = !DILocation(line: 1294, column: 14, scope: !3573)
!3573 = distinct !DILexicalBlock(scope: !3570, file: !3, line: 1294, column: 2)
!3574 = !DILocation(line: 1294, column: 16, scope: !3573)
!3575 = !DILocation(line: 1294, column: 2, scope: !3570)
!3576 = !DILocation(line: 1295, column: 18, scope: !3577)
!3577 = distinct !DILexicalBlock(scope: !3578, file: !3, line: 1295, column: 7)
!3578 = distinct !DILexicalBlock(scope: !3573, file: !3, line: 1294, column: 44)
!3579 = !DILocation(line: 1295, column: 7, scope: !3577)
!3580 = !DILocation(line: 1295, column: 21, scope: !3577)
!3581 = !DILocation(line: 1295, column: 27, scope: !3577)
!3582 = !DILocation(line: 1295, column: 7, scope: !3578)
!3583 = !DILocation(line: 1296, column: 4, scope: !3584)
!3584 = distinct !DILexicalBlock(scope: !3577, file: !3, line: 1295, column: 34)
!3585 = !DILocation(line: 1296, column: 45, scope: !3584)
!3586 = !DILocation(line: 1296, column: 34, scope: !3584)
!3587 = !DILocation(line: 1296, column: 48, scope: !3584)
!3588 = !DILocation(line: 1297, column: 3, scope: !3584)
!3589 = !DILocation(line: 1299, column: 4, scope: !3577)
!3590 = !DILocation(line: 1300, column: 2, scope: !3578)
!3591 = !DILocation(line: 1294, column: 40, scope: !3573)
!3592 = !DILocation(line: 1294, column: 2, scope: !3573)
!3593 = distinct !{!3593, !3575, !3594}
!3594 = !DILocation(line: 1300, column: 2, scope: !3570)
!3595 = !DILocation(line: 1301, column: 40, scope: !3551)
!3596 = !DILocation(line: 1301, column: 46, scope: !3551)
!3597 = !DILocation(line: 1301, column: 16, scope: !3551)
!3598 = !DILocation(line: 1301, column: 14, scope: !3551)
!3599 = !DILocation(line: 1303, column: 6, scope: !3600)
!3600 = distinct !DILexicalBlock(scope: !3551, file: !3, line: 1303, column: 6)
!3601 = !DILocation(line: 1303, column: 6, scope: !3551)
!3602 = !DILocation(line: 1304, column: 3, scope: !3603)
!3603 = distinct !DILexicalBlock(scope: !3600, file: !3, line: 1303, column: 15)
!3604 = !DILocation(line: 1304, column: 40, scope: !3603)
!3605 = !DILocation(line: 1304, column: 48, scope: !3603)
!3606 = !DILocation(line: 1305, column: 10, scope: !3607)
!3607 = distinct !DILexicalBlock(scope: !3603, file: !3, line: 1305, column: 3)
!3608 = !DILocation(line: 1305, column: 8, scope: !3607)
!3609 = !DILocation(line: 1305, column: 15, scope: !3610)
!3610 = distinct !DILexicalBlock(scope: !3607, file: !3, line: 1305, column: 3)
!3611 = !DILocation(line: 1305, column: 19, scope: !3610)
!3612 = !DILocation(line: 1305, column: 17, scope: !3610)
!3613 = !DILocation(line: 1305, column: 3, scope: !3607)
!3614 = !DILocation(line: 1306, column: 4, scope: !3615)
!3615 = distinct !DILexicalBlock(scope: !3610, file: !3, line: 1305, column: 33)
!3616 = !DILocation(line: 1306, column: 33, scope: !3615)
!3617 = !DILocation(line: 1306, column: 38, scope: !3615)
!3618 = !DILocation(line: 1306, column: 41, scope: !3615)
!3619 = !DILocation(line: 1307, column: 4, scope: !3615)
!3620 = !DILocation(line: 1307, column: 29, scope: !3615)
!3621 = !DILocation(line: 1307, column: 34, scope: !3615)
!3622 = !DILocation(line: 1307, column: 37, scope: !3615)
!3623 = !DILocation(line: 1307, column: 44, scope: !3615)
!3624 = !DILocation(line: 1307, column: 49, scope: !3615)
!3625 = !DILocation(line: 1307, column: 52, scope: !3615)
!3626 = !DILocation(line: 1307, column: 58, scope: !3615)
!3627 = !DILocation(line: 1307, column: 63, scope: !3615)
!3628 = !DILocation(line: 1307, column: 66, scope: !3615)
!3629 = !DILocation(line: 1308, column: 39, scope: !3615)
!3630 = !DILocation(line: 1308, column: 60, scope: !3615)
!3631 = !DILocation(line: 1308, column: 52, scope: !3615)
!3632 = !DILocation(line: 1309, column: 14, scope: !3615)
!3633 = !DILocation(line: 1309, column: 19, scope: !3615)
!3634 = !DILocation(line: 1309, column: 22, scope: !3615)
!3635 = !DILocation(line: 1309, column: 42, scope: !3615)
!3636 = !DILocation(line: 1309, column: 47, scope: !3615)
!3637 = !DILocation(line: 1309, column: 50, scope: !3615)
!3638 = !DILocation(line: 1309, column: 29, scope: !3615)
!3639 = !DILocation(line: 1309, column: 27, scope: !3615)
!3640 = !DILocation(line: 1309, column: 11, scope: !3615)
!3641 = !DILocation(line: 1311, column: 26, scope: !3615)
!3642 = !DILocation(line: 1311, column: 31, scope: !3615)
!3643 = !DILocation(line: 1311, column: 34, scope: !3615)
!3644 = !DILocation(line: 1311, column: 15, scope: !3615)
!3645 = !DILocation(line: 1311, column: 4, scope: !3615)
!3646 = !DILocation(line: 1311, column: 18, scope: !3615)
!3647 = !DILocation(line: 1311, column: 24, scope: !3615)
!3648 = !DILocation(line: 1312, column: 25, scope: !3615)
!3649 = !DILocation(line: 1312, column: 30, scope: !3615)
!3650 = !DILocation(line: 1312, column: 33, scope: !3615)
!3651 = !DILocation(line: 1312, column: 15, scope: !3615)
!3652 = !DILocation(line: 1312, column: 4, scope: !3615)
!3653 = !DILocation(line: 1312, column: 18, scope: !3615)
!3654 = !DILocation(line: 1312, column: 23, scope: !3615)
!3655 = !DILocation(line: 1313, column: 25, scope: !3615)
!3656 = !DILocation(line: 1313, column: 30, scope: !3615)
!3657 = !DILocation(line: 1313, column: 33, scope: !3615)
!3658 = !DILocation(line: 1313, column: 15, scope: !3615)
!3659 = !DILocation(line: 1313, column: 4, scope: !3615)
!3660 = !DILocation(line: 1313, column: 18, scope: !3615)
!3661 = !DILocation(line: 1313, column: 23, scope: !3615)
!3662 = !DILocation(line: 1314, column: 3, scope: !3615)
!3663 = !DILocation(line: 1305, column: 29, scope: !3610)
!3664 = !DILocation(line: 1305, column: 3, scope: !3610)
!3665 = distinct !{!3665, !3613, !3666}
!3666 = !DILocation(line: 1314, column: 3, scope: !3607)
!3667 = !DILocation(line: 1315, column: 14, scope: !3603)
!3668 = !DILocation(line: 1315, column: 3, scope: !3603)
!3669 = !DILocation(line: 1315, column: 23, scope: !3603)
!3670 = !DILocation(line: 1315, column: 29, scope: !3603)
!3671 = !DILocation(line: 1316, column: 2, scope: !3603)
!3672 = !DILocation(line: 1318, column: 10, scope: !3673)
!3673 = distinct !DILexicalBlock(scope: !3674, file: !3, line: 1318, column: 3)
!3674 = distinct !DILexicalBlock(scope: !3600, file: !3, line: 1317, column: 7)
!3675 = !DILocation(line: 1318, column: 8, scope: !3673)
!3676 = !DILocation(line: 1318, column: 15, scope: !3677)
!3677 = distinct !DILexicalBlock(scope: !3673, file: !3, line: 1318, column: 3)
!3678 = !DILocation(line: 1318, column: 19, scope: !3677)
!3679 = !DILocation(line: 1318, column: 17, scope: !3677)
!3680 = !DILocation(line: 1318, column: 3, scope: !3673)
!3681 = !DILocation(line: 1319, column: 4, scope: !3682)
!3682 = distinct !DILexicalBlock(scope: !3677, file: !3, line: 1318, column: 33)
!3683 = !DILocation(line: 1319, column: 33, scope: !3682)
!3684 = !DILocation(line: 1319, column: 38, scope: !3682)
!3685 = !DILocation(line: 1319, column: 41, scope: !3682)
!3686 = !DILocation(line: 1320, column: 4, scope: !3682)
!3687 = !DILocation(line: 1320, column: 29, scope: !3682)
!3688 = !DILocation(line: 1320, column: 34, scope: !3682)
!3689 = !DILocation(line: 1320, column: 37, scope: !3682)
!3690 = !DILocation(line: 1320, column: 44, scope: !3682)
!3691 = !DILocation(line: 1320, column: 49, scope: !3682)
!3692 = !DILocation(line: 1320, column: 52, scope: !3682)
!3693 = !DILocation(line: 1320, column: 58, scope: !3682)
!3694 = !DILocation(line: 1320, column: 63, scope: !3682)
!3695 = !DILocation(line: 1320, column: 66, scope: !3682)
!3696 = !DILocation(line: 1321, column: 39, scope: !3682)
!3697 = !DILocation(line: 1321, column: 60, scope: !3682)
!3698 = !DILocation(line: 1321, column: 68, scope: !3682)
!3699 = !DILocation(line: 1321, column: 78, scope: !3682)
!3700 = !DILocation(line: 1321, column: 76, scope: !3682)
!3701 = !DILocation(line: 1322, column: 14, scope: !3682)
!3702 = !DILocation(line: 1322, column: 19, scope: !3682)
!3703 = !DILocation(line: 1322, column: 22, scope: !3682)
!3704 = !DILocation(line: 1322, column: 42, scope: !3682)
!3705 = !DILocation(line: 1322, column: 47, scope: !3682)
!3706 = !DILocation(line: 1322, column: 50, scope: !3682)
!3707 = !DILocation(line: 1322, column: 29, scope: !3682)
!3708 = !DILocation(line: 1322, column: 27, scope: !3682)
!3709 = !DILocation(line: 1322, column: 11, scope: !3682)
!3710 = !DILocation(line: 1323, column: 3, scope: !3682)
!3711 = !DILocation(line: 1318, column: 29, scope: !3677)
!3712 = !DILocation(line: 1318, column: 3, scope: !3677)
!3713 = distinct !{!3713, !3680, !3714}
!3714 = !DILocation(line: 1323, column: 3, scope: !3673)
!3715 = !DILocation(line: 1325, column: 1, scope: !3551)
!3716 = distinct !DISubprogram(name: "GPU_buffer_unbind", scope: !3, file: !3, line: 1328, type: !1369, scopeLine: 1329, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1345)
!3717 = !DILocalVariable(name: "i", scope: !3716, file: !3, line: 1330, type: !171)
!3718 = !DILocation(line: 1330, column: 6, scope: !3716)
!3719 = !DILocation(line: 1332, column: 6, scope: !3720)
!3720 = distinct !DILexicalBlock(scope: !3716, file: !3, line: 1332, column: 6)
!3721 = !DILocation(line: 1332, column: 15, scope: !3720)
!3722 = !DILocation(line: 1332, column: 6, scope: !3716)
!3723 = !DILocation(line: 1333, column: 3, scope: !3720)
!3724 = !DILocation(line: 1334, column: 6, scope: !3725)
!3725 = distinct !DILexicalBlock(scope: !3716, file: !3, line: 1334, column: 6)
!3726 = !DILocation(line: 1334, column: 15, scope: !3725)
!3727 = !DILocation(line: 1334, column: 6, scope: !3716)
!3728 = !DILocation(line: 1335, column: 3, scope: !3725)
!3729 = !DILocation(line: 1336, column: 6, scope: !3730)
!3730 = distinct !DILexicalBlock(scope: !3716, file: !3, line: 1336, column: 6)
!3731 = !DILocation(line: 1336, column: 15, scope: !3730)
!3732 = !DILocation(line: 1336, column: 6, scope: !3716)
!3733 = !DILocation(line: 1337, column: 3, scope: !3730)
!3734 = !DILocation(line: 1338, column: 6, scope: !3735)
!3735 = distinct !DILexicalBlock(scope: !3716, file: !3, line: 1338, column: 6)
!3736 = !DILocation(line: 1338, column: 15, scope: !3735)
!3737 = !DILocation(line: 1338, column: 6, scope: !3716)
!3738 = !DILocation(line: 1339, column: 3, scope: !3739)
!3739 = distinct !DILexicalBlock(scope: !3735, file: !3, line: 1338, column: 51)
!3740 = !DILocation(line: 1340, column: 3, scope: !3739)
!3741 = !DILocation(line: 1341, column: 3, scope: !3739)
!3742 = !DILocation(line: 1342, column: 2, scope: !3739)
!3743 = !DILocation(line: 1343, column: 6, scope: !3744)
!3744 = distinct !DILexicalBlock(scope: !3716, file: !3, line: 1343, column: 6)
!3745 = !DILocation(line: 1343, column: 15, scope: !3744)
!3746 = !DILocation(line: 1343, column: 6, scope: !3716)
!3747 = !DILocation(line: 1344, column: 3, scope: !3744)
!3748 = !DILocation(line: 1345, column: 6, scope: !3749)
!3749 = distinct !DILexicalBlock(scope: !3716, file: !3, line: 1345, column: 6)
!3750 = !DILocation(line: 1345, column: 15, scope: !3749)
!3751 = !DILocation(line: 1345, column: 6, scope: !3716)
!3752 = !DILocation(line: 1346, column: 7, scope: !3753)
!3753 = distinct !DILexicalBlock(scope: !3754, file: !3, line: 1346, column: 7)
!3754 = distinct !DILexicalBlock(scope: !3749, file: !3, line: 1345, column: 43)
!3755 = !DILocation(line: 1346, column: 7, scope: !3754)
!3756 = !DILocation(line: 1347, column: 4, scope: !3757)
!3757 = distinct !DILexicalBlock(scope: !3753, file: !3, line: 1346, column: 16)
!3758 = !DILocation(line: 1348, column: 3, scope: !3757)
!3759 = !DILocation(line: 1349, column: 2, scope: !3754)
!3760 = !DILocation(line: 1350, column: 11, scope: !3716)
!3761 = !DILocation(line: 1354, column: 9, scope: !3762)
!3762 = distinct !DILexicalBlock(scope: !3716, file: !3, line: 1354, column: 2)
!3763 = !DILocation(line: 1354, column: 7, scope: !3762)
!3764 = !DILocation(line: 1354, column: 14, scope: !3765)
!3765 = distinct !DILexicalBlock(scope: !3762, file: !3, line: 1354, column: 2)
!3766 = !DILocation(line: 1354, column: 16, scope: !3765)
!3767 = !DILocation(line: 1354, column: 2, scope: !3762)
!3768 = !DILocation(line: 1355, column: 18, scope: !3769)
!3769 = distinct !DILexicalBlock(scope: !3770, file: !3, line: 1355, column: 7)
!3770 = distinct !DILexicalBlock(scope: !3765, file: !3, line: 1354, column: 44)
!3771 = !DILocation(line: 1355, column: 7, scope: !3769)
!3772 = !DILocation(line: 1355, column: 21, scope: !3769)
!3773 = !DILocation(line: 1355, column: 27, scope: !3769)
!3774 = !DILocation(line: 1355, column: 7, scope: !3770)
!3775 = !DILocation(line: 1356, column: 4, scope: !3776)
!3776 = distinct !DILexicalBlock(scope: !3769, file: !3, line: 1355, column: 34)
!3777 = !DILocation(line: 1356, column: 45, scope: !3776)
!3778 = !DILocation(line: 1356, column: 34, scope: !3776)
!3779 = !DILocation(line: 1356, column: 48, scope: !3776)
!3780 = !DILocation(line: 1357, column: 3, scope: !3776)
!3781 = !DILocation(line: 1359, column: 4, scope: !3769)
!3782 = !DILocation(line: 1360, column: 2, scope: !3770)
!3783 = !DILocation(line: 1354, column: 40, scope: !3765)
!3784 = !DILocation(line: 1354, column: 2, scope: !3765)
!3785 = distinct !{!3785, !3767, !3786}
!3786 = !DILocation(line: 1360, column: 2, scope: !3762)
!3787 = !DILocation(line: 1362, column: 6, scope: !3788)
!3788 = distinct !DILexicalBlock(scope: !3716, file: !3, line: 1362, column: 6)
!3789 = !DILocation(line: 1362, column: 6, scope: !3716)
!3790 = !DILocation(line: 1363, column: 3, scope: !3788)
!3791 = !DILocation(line: 1364, column: 1, scope: !3716)
!3792 = distinct !DISubprogram(name: "GPU_color_switch", scope: !3, file: !3, line: 1366, type: !3793, scopeLine: 1367, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1345)
!3793 = !DISubroutineType(types: !3794)
!3794 = !{null, !171}
!3795 = !DILocalVariable(name: "mode", arg: 1, scope: !3792, file: !3, line: 1366, type: !171)
!3796 = !DILocation(line: 1366, column: 27, scope: !3792)
!3797 = !DILocation(line: 1368, column: 6, scope: !3798)
!3798 = distinct !DILexicalBlock(scope: !3792, file: !3, line: 1368, column: 6)
!3799 = !DILocation(line: 1368, column: 6, scope: !3792)
!3800 = !DILocation(line: 1369, column: 9, scope: !3801)
!3801 = distinct !DILexicalBlock(scope: !3802, file: !3, line: 1369, column: 7)
!3802 = distinct !DILexicalBlock(scope: !3798, file: !3, line: 1368, column: 12)
!3803 = !DILocation(line: 1369, column: 18, scope: !3801)
!3804 = !DILocation(line: 1369, column: 7, scope: !3802)
!3805 = !DILocation(line: 1370, column: 4, scope: !3801)
!3806 = !DILocation(line: 1371, column: 12, scope: !3802)
!3807 = !DILocation(line: 1372, column: 2, scope: !3802)
!3808 = !DILocation(line: 1374, column: 7, scope: !3809)
!3809 = distinct !DILexicalBlock(scope: !3810, file: !3, line: 1374, column: 7)
!3810 = distinct !DILexicalBlock(scope: !3798, file: !3, line: 1373, column: 7)
!3811 = !DILocation(line: 1374, column: 16, scope: !3809)
!3812 = !DILocation(line: 1374, column: 7, scope: !3810)
!3813 = !DILocation(line: 1375, column: 4, scope: !3809)
!3814 = !DILocation(line: 1376, column: 12, scope: !3810)
!3815 = !DILocation(line: 1378, column: 1, scope: !3792)
!3816 = distinct !DISubprogram(name: "GPU_buffer_legacy", scope: !3, file: !3, line: 1382, type: !3817, scopeLine: 1383, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1345)
!3817 = !DISubroutineType(types: !3818)
!3818 = !{!166, !216}
!3819 = !DILocalVariable(name: "dm", arg: 1, scope: !3816, file: !3, line: 1382, type: !216)
!3820 = !DILocation(line: 1382, column: 37, scope: !3816)
!3821 = !DILocalVariable(name: "test", scope: !3816, file: !3, line: 1384, type: !171)
!3822 = !DILocation(line: 1384, column: 6, scope: !3816)
!3823 = !DILocation(line: 1384, column: 16, scope: !3816)
!3824 = !DILocation(line: 1384, column: 14, scope: !3816)
!3825 = !DILocation(line: 1384, column: 26, scope: !3816)
!3826 = !DILocation(line: 1385, column: 6, scope: !3827)
!3827 = distinct !DILexicalBlock(scope: !3816, file: !3, line: 1385, column: 6)
!3828 = !DILocation(line: 1385, column: 6, scope: !3816)
!3829 = !DILocation(line: 1386, column: 3, scope: !3827)
!3830 = !DILocation(line: 1388, column: 6, scope: !3831)
!3831 = distinct !DILexicalBlock(scope: !3816, file: !3, line: 1388, column: 6)
!3832 = !DILocation(line: 1388, column: 10, scope: !3831)
!3833 = !DILocation(line: 1388, column: 21, scope: !3831)
!3834 = !DILocation(line: 1388, column: 6, scope: !3816)
!3835 = !DILocation(line: 1389, column: 39, scope: !3831)
!3836 = !DILocation(line: 1389, column: 20, scope: !3831)
!3837 = !DILocation(line: 1389, column: 3, scope: !3831)
!3838 = !DILocation(line: 1389, column: 7, scope: !3831)
!3839 = !DILocation(line: 1389, column: 18, scope: !3831)
!3840 = !DILocation(line: 1390, column: 9, scope: !3816)
!3841 = !DILocation(line: 1390, column: 13, scope: !3816)
!3842 = !DILocation(line: 1390, column: 25, scope: !3816)
!3843 = !DILocation(line: 1390, column: 2, scope: !3816)
!3844 = !DILocation(line: 1391, column: 1, scope: !3816)
!3845 = distinct !DISubprogram(name: "GPU_buffer_lock", scope: !3, file: !3, line: 1393, type: !3846, scopeLine: 1394, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1345)
!3846 = !DISubroutineType(types: !3847)
!3847 = !{!167, !283}
!3848 = !DILocalVariable(name: "buffer", arg: 1, scope: !3845, file: !3, line: 1393, type: !283)
!3849 = !DILocation(line: 1393, column: 34, scope: !3845)
!3850 = !DILocalVariable(name: "varray", scope: !3845, file: !3, line: 1395, type: !175)
!3851 = !DILocation(line: 1395, column: 9, scope: !3845)
!3852 = !DILocation(line: 1397, column: 7, scope: !3853)
!3853 = distinct !DILexicalBlock(scope: !3845, file: !3, line: 1397, column: 6)
!3854 = !DILocation(line: 1397, column: 6, scope: !3845)
!3855 = !DILocation(line: 1398, column: 3, scope: !3853)
!3856 = !DILocation(line: 1400, column: 6, scope: !3857)
!3857 = distinct !DILexicalBlock(scope: !3845, file: !3, line: 1400, column: 6)
!3858 = !DILocation(line: 1400, column: 6, scope: !3845)
!3859 = !DILocation(line: 1401, column: 3, scope: !3860)
!3860 = distinct !DILexicalBlock(scope: !3857, file: !3, line: 1400, column: 15)
!3861 = !DILocation(line: 1401, column: 40, scope: !3860)
!3862 = !DILocation(line: 1401, column: 48, scope: !3860)
!3863 = !DILocation(line: 1402, column: 12, scope: !3860)
!3864 = !DILocation(line: 1402, column: 10, scope: !3860)
!3865 = !DILocation(line: 1403, column: 10, scope: !3860)
!3866 = !DILocation(line: 1403, column: 3, scope: !3860)
!3867 = !DILocation(line: 1406, column: 10, scope: !3868)
!3868 = distinct !DILexicalBlock(scope: !3857, file: !3, line: 1405, column: 7)
!3869 = !DILocation(line: 1406, column: 18, scope: !3868)
!3870 = !DILocation(line: 1406, column: 3, scope: !3868)
!3871 = !DILocation(line: 1408, column: 1, scope: !3845)
!3872 = distinct !DISubprogram(name: "GPU_buffer_lock_stream", scope: !3, file: !3, line: 1410, type: !3846, scopeLine: 1411, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1345)
!3873 = !DILocalVariable(name: "buffer", arg: 1, scope: !3872, file: !3, line: 1410, type: !283)
!3874 = !DILocation(line: 1410, column: 41, scope: !3872)
!3875 = !DILocalVariable(name: "varray", scope: !3872, file: !3, line: 1412, type: !175)
!3876 = !DILocation(line: 1412, column: 9, scope: !3872)
!3877 = !DILocation(line: 1414, column: 7, scope: !3878)
!3878 = distinct !DILexicalBlock(scope: !3872, file: !3, line: 1414, column: 6)
!3879 = !DILocation(line: 1414, column: 6, scope: !3872)
!3880 = !DILocation(line: 1415, column: 3, scope: !3878)
!3881 = !DILocation(line: 1417, column: 6, scope: !3882)
!3882 = distinct !DILexicalBlock(scope: !3872, file: !3, line: 1417, column: 6)
!3883 = !DILocation(line: 1417, column: 6, scope: !3872)
!3884 = !DILocation(line: 1418, column: 3, scope: !3885)
!3885 = distinct !DILexicalBlock(scope: !3882, file: !3, line: 1417, column: 15)
!3886 = !DILocation(line: 1418, column: 40, scope: !3885)
!3887 = !DILocation(line: 1418, column: 48, scope: !3885)
!3888 = !DILocation(line: 1420, column: 3, scope: !3885)
!3889 = !DILocation(line: 1420, column: 40, scope: !3885)
!3890 = !DILocation(line: 1420, column: 48, scope: !3885)
!3891 = !DILocation(line: 1421, column: 12, scope: !3885)
!3892 = !DILocation(line: 1421, column: 10, scope: !3885)
!3893 = !DILocation(line: 1422, column: 10, scope: !3885)
!3894 = !DILocation(line: 1422, column: 3, scope: !3885)
!3895 = !DILocation(line: 1425, column: 10, scope: !3896)
!3896 = distinct !DILexicalBlock(scope: !3882, file: !3, line: 1424, column: 7)
!3897 = !DILocation(line: 1425, column: 18, scope: !3896)
!3898 = !DILocation(line: 1425, column: 3, scope: !3896)
!3899 = !DILocation(line: 1427, column: 1, scope: !3872)
!3900 = distinct !DISubprogram(name: "GPU_buffer_unlock", scope: !3, file: !3, line: 1429, type: !1594, scopeLine: 1430, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1345)
!3901 = !DILocalVariable(name: "buffer", arg: 1, scope: !3900, file: !3, line: 1429, type: !283)
!3902 = !DILocation(line: 1429, column: 35, scope: !3900)
!3903 = !DILocation(line: 1431, column: 6, scope: !3904)
!3904 = distinct !DILexicalBlock(scope: !3900, file: !3, line: 1431, column: 6)
!3905 = !DILocation(line: 1431, column: 6, scope: !3900)
!3906 = !DILocation(line: 1432, column: 7, scope: !3907)
!3907 = distinct !DILexicalBlock(scope: !3908, file: !3, line: 1432, column: 7)
!3908 = distinct !DILexicalBlock(scope: !3904, file: !3, line: 1431, column: 15)
!3909 = !DILocation(line: 1432, column: 7, scope: !3908)
!3910 = !DILocation(line: 1435, column: 4, scope: !3911)
!3911 = distinct !DILexicalBlock(scope: !3907, file: !3, line: 1432, column: 15)
!3912 = !DILocation(line: 1436, column: 3, scope: !3911)
!3913 = !DILocation(line: 1437, column: 3, scope: !3908)
!3914 = !DILocation(line: 1438, column: 2, scope: !3908)
!3915 = !DILocation(line: 1439, column: 1, scope: !3900)
!3916 = distinct !DISubprogram(name: "GPU_buffer_draw_elements", scope: !3, file: !3, line: 1442, type: !3917, scopeLine: 1443, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1345)
!3917 = !DISubroutineType(types: !3918)
!3918 = !{null, !283, !7, !171, !171}
!3919 = !DILocalVariable(name: "elements", arg: 1, scope: !3916, file: !3, line: 1442, type: !283)
!3920 = !DILocation(line: 1442, column: 42, scope: !3916)
!3921 = !DILocalVariable(name: "mode", arg: 2, scope: !3916, file: !3, line: 1442, type: !7)
!3922 = !DILocation(line: 1442, column: 65, scope: !3916)
!3923 = !DILocalVariable(name: "start", arg: 3, scope: !3916, file: !3, line: 1442, type: !171)
!3924 = !DILocation(line: 1442, column: 75, scope: !3916)
!3925 = !DILocalVariable(name: "count", arg: 4, scope: !3916, file: !3, line: 1442, type: !171)
!3926 = !DILocation(line: 1442, column: 86, scope: !3916)
!3927 = !DILocation(line: 1444, column: 17, scope: !3916)
!3928 = !DILocation(line: 1444, column: 23, scope: !3916)
!3929 = !DILocation(line: 1445, column: 18, scope: !3916)
!3930 = !DILocation(line: 1446, column: 27, scope: !3916)
!3931 = !DILocation(line: 1446, column: 33, scope: !3916)
!3932 = !DILocation(line: 1446, column: 18, scope: !3916)
!3933 = !DILocation(line: 1447, column: 26, scope: !3916)
!3934 = !DILocation(line: 1447, column: 36, scope: !3916)
!3935 = !DILocation(line: 1447, column: 19, scope: !3916)
!3936 = !DILocation(line: 1447, column: 47, scope: !3916)
!3937 = !DILocation(line: 1447, column: 45, scope: !3916)
!3938 = !DILocation(line: 1447, column: 18, scope: !3916)
!3939 = !DILocation(line: 1444, column: 2, scope: !3916)
!3940 = !DILocation(line: 1448, column: 1, scope: !3916)
!3941 = distinct !DISubprogram(name: "GPU_update_mesh_pbvh_buffers", scope: !3, file: !3, line: 1586, type: !3942, scopeLine: 1589, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1345)
!3942 = !DISubroutineType(types: !3943)
!3943 = !{null, !3944, !2075, !170, !171, !1177, !3980, !166}
!3944 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3945, size: 64)
!3945 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPU_PBVH_Buffers", file: !280, line: 168, baseType: !3946)
!3946 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GPU_PBVH_Buffers", file: !3, line: 1475, size: 1408, elements: !3947)
!3947 = !{!3948, !3949, !3950, !3951, !3952, !3953, !3955, !3956, !3957, !3959, !3961, !3964, !3970, !3971, !3972, !3973, !3974, !3975, !3976, !3977, !3978, !3979}
!3948 = !DIDerivedType(tag: DW_TAG_member, name: "vert_buf", scope: !3946, file: !3, line: 1477, baseType: !1343, size: 32)
!3949 = !DIDerivedType(tag: DW_TAG_member, name: "index_buf", scope: !3946, file: !3, line: 1477, baseType: !1343, size: 32, offset: 32)
!3950 = !DIDerivedType(tag: DW_TAG_member, name: "index_type", scope: !3946, file: !3, line: 1478, baseType: !1314, size: 32, offset: 64)
!3951 = !DIDerivedType(tag: DW_TAG_member, name: "mface", scope: !3946, file: !3, line: 1481, baseType: !1690, size: 64, offset: 128)
!3952 = !DIDerivedType(tag: DW_TAG_member, name: "mvert", scope: !3946, file: !3, line: 1482, baseType: !2075, size: 64, offset: 192)
!3953 = !DIDerivedType(tag: DW_TAG_member, name: "face_indices", scope: !3946, file: !3, line: 1483, baseType: !3954, size: 64, offset: 256)
!3954 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2281, size: 64)
!3955 = !DIDerivedType(tag: DW_TAG_member, name: "totface", scope: !3946, file: !3, line: 1484, baseType: !171, size: 32, offset: 320)
!3956 = !DIDerivedType(tag: DW_TAG_member, name: "vmask", scope: !3946, file: !3, line: 1485, baseType: !1177, size: 64, offset: 384)
!3957 = !DIDerivedType(tag: DW_TAG_member, name: "gridkey", scope: !3946, file: !3, line: 1488, baseType: !3958, size: 320, offset: 448)
!3958 = !DIDerivedType(tag: DW_TAG_typedef, name: "CCGKey", file: !182, line: 78, baseType: !1143)
!3959 = !DIDerivedType(tag: DW_TAG_member, name: "grids", scope: !3946, file: !3, line: 1489, baseType: !3960, size: 64, offset: 768)
!3960 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !180, size: 64)
!3961 = !DIDerivedType(tag: DW_TAG_member, name: "grid_flag_mats", scope: !3946, file: !3, line: 1490, baseType: !3962, size: 64, offset: 832)
!3962 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3963, size: 64)
!3963 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1160)
!3964 = !DIDerivedType(tag: DW_TAG_member, name: "grid_hidden", scope: !3946, file: !3, line: 1491, baseType: !3965, size: 64, offset: 896)
!3965 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3966, size: 64)
!3966 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3967)
!3967 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3968, size: 64)
!3968 = !DIDerivedType(tag: DW_TAG_typedef, name: "BLI_bitmap", file: !3969, line: 33, baseType: !7)
!3969 = !DIFile(filename: "blender/source/blender/blenlib/BLI_bitmap.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!3970 = !DIDerivedType(tag: DW_TAG_member, name: "grid_indices", scope: !3946, file: !3, line: 1492, baseType: !3954, size: 64, offset: 960)
!3971 = !DIDerivedType(tag: DW_TAG_member, name: "totgrid", scope: !3946, file: !3, line: 1493, baseType: !171, size: 32, offset: 1024)
!3972 = !DIDerivedType(tag: DW_TAG_member, name: "has_hidden", scope: !3946, file: !3, line: 1494, baseType: !171, size: 32, offset: 1056)
!3973 = !DIDerivedType(tag: DW_TAG_member, name: "use_bmesh", scope: !3946, file: !3, line: 1496, baseType: !171, size: 32, offset: 1088)
!3974 = !DIDerivedType(tag: DW_TAG_member, name: "tot_tri", scope: !3946, file: !3, line: 1498, baseType: !7, size: 32, offset: 1120)
!3975 = !DIDerivedType(tag: DW_TAG_member, name: "tot_quad", scope: !3946, file: !3, line: 1498, baseType: !7, size: 32, offset: 1152)
!3976 = !DIDerivedType(tag: DW_TAG_member, name: "smooth", scope: !3946, file: !3, line: 1502, baseType: !171, size: 32, offset: 1184)
!3977 = !DIDerivedType(tag: DW_TAG_member, name: "show_diffuse_color", scope: !3946, file: !3, line: 1504, baseType: !166, size: 8, offset: 1216)
!3978 = !DIDerivedType(tag: DW_TAG_member, name: "use_matcaps", scope: !3946, file: !3, line: 1505, baseType: !166, size: 8, offset: 1224)
!3979 = !DIDerivedType(tag: DW_TAG_member, name: "diffuse_color", scope: !3946, file: !3, line: 1506, baseType: !508, size: 128, offset: 1248)
!3980 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1132, size: 64)
!3981 = !DILocalVariable(name: "buffers", arg: 1, scope: !3941, file: !3, line: 1586, type: !3944)
!3982 = !DILocation(line: 1586, column: 53, scope: !3941)
!3983 = !DILocalVariable(name: "mvert", arg: 2, scope: !3941, file: !3, line: 1586, type: !2075)
!3984 = !DILocation(line: 1586, column: 69, scope: !3941)
!3985 = !DILocalVariable(name: "vert_indices", arg: 3, scope: !3941, file: !3, line: 1587, type: !170)
!3986 = !DILocation(line: 1587, column: 35, scope: !3941)
!3987 = !DILocalVariable(name: "totvert", arg: 4, scope: !3941, file: !3, line: 1587, type: !171)
!3988 = !DILocation(line: 1587, column: 53, scope: !3941)
!3989 = !DILocalVariable(name: "vmask", arg: 5, scope: !3941, file: !3, line: 1587, type: !1177)
!3990 = !DILocation(line: 1587, column: 75, scope: !3941)
!3991 = !DILocalVariable(name: "face_vert_indices", arg: 6, scope: !3941, file: !3, line: 1588, type: !3980)
!3992 = !DILocation(line: 1588, column: 36, scope: !3941)
!3993 = !DILocalVariable(name: "show_diffuse_color", arg: 7, scope: !3941, file: !3, line: 1588, type: !166)
!3994 = !DILocation(line: 1588, column: 64, scope: !3941)
!3995 = !DILocalVariable(name: "vert_data", scope: !3941, file: !3, line: 1590, type: !3996)
!3996 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3997, size: 64)
!3997 = !DIDerivedType(tag: DW_TAG_typedef, name: "VertexBufferFormat", file: !3, line: 1473, baseType: !3998)
!3998 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3, line: 1463, size: 192, elements: !3999)
!3999 = !{!4000, !4001, !4002, !4004}
!4000 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !3998, file: !3, line: 1464, baseType: !426, size: 96)
!4001 = !DIDerivedType(tag: DW_TAG_member, name: "no", scope: !3998, file: !3, line: 1465, baseType: !782, size: 48, offset: 96)
!4002 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !3998, file: !3, line: 1470, baseType: !4003, size: 16, offset: 144)
!4003 = !DICompositeType(tag: DW_TAG_array_type, baseType: !169, size: 16, elements: !688)
!4004 = !DIDerivedType(tag: DW_TAG_member, name: "color", scope: !3998, file: !3, line: 1472, baseType: !4005, size: 24, offset: 160)
!4005 = !DICompositeType(tag: DW_TAG_array_type, baseType: !166, size: 24, elements: !427)
!4006 = !DILocation(line: 1590, column: 22, scope: !3941)
!4007 = !DILocalVariable(name: "i", scope: !3941, file: !3, line: 1591, type: !171)
!4008 = !DILocation(line: 1591, column: 6, scope: !3941)
!4009 = !DILocalVariable(name: "j", scope: !3941, file: !3, line: 1591, type: !171)
!4010 = !DILocation(line: 1591, column: 9, scope: !3941)
!4011 = !DILocalVariable(name: "k", scope: !3941, file: !3, line: 1591, type: !171)
!4012 = !DILocation(line: 1591, column: 12, scope: !3941)
!4013 = !DILocation(line: 1593, column: 19, scope: !3941)
!4014 = !DILocation(line: 1593, column: 2, scope: !3941)
!4015 = !DILocation(line: 1593, column: 11, scope: !3941)
!4016 = !DILocation(line: 1593, column: 17, scope: !3941)
!4017 = !DILocation(line: 1594, column: 32, scope: !3941)
!4018 = !DILocation(line: 1594, column: 2, scope: !3941)
!4019 = !DILocation(line: 1594, column: 11, scope: !3941)
!4020 = !DILocation(line: 1594, column: 30, scope: !3941)
!4021 = !DILocation(line: 1595, column: 25, scope: !3941)
!4022 = !DILocation(line: 1595, column: 2, scope: !3941)
!4023 = !DILocation(line: 1595, column: 11, scope: !3941)
!4024 = !DILocation(line: 1595, column: 23, scope: !3941)
!4025 = !DILocation(line: 1597, column: 6, scope: !4026)
!4026 = distinct !DILexicalBlock(scope: !3941, file: !3, line: 1597, column: 6)
!4027 = !DILocation(line: 1597, column: 15, scope: !4026)
!4028 = !DILocation(line: 1597, column: 6, scope: !3941)
!4029 = !DILocalVariable(name: "totelem", scope: !4030, file: !3, line: 1598, type: !171)
!4030 = distinct !DILexicalBlock(scope: !4026, file: !3, line: 1597, column: 25)
!4031 = !DILocation(line: 1598, column: 7, scope: !4030)
!4032 = !DILocation(line: 1598, column: 18, scope: !4030)
!4033 = !DILocation(line: 1598, column: 27, scope: !4030)
!4034 = !DILocation(line: 1598, column: 36, scope: !4030)
!4035 = !DILocation(line: 1598, column: 47, scope: !4030)
!4036 = !DILocation(line: 1598, column: 56, scope: !4030)
!4037 = !DILocation(line: 1598, column: 64, scope: !4030)
!4038 = !DILocalVariable(name: "diffuse_color", scope: !4030, file: !3, line: 1599, type: !508)
!4039 = !DILocation(line: 1599, column: 9, scope: !4030)
!4040 = !DILocation(line: 1601, column: 7, scope: !4041)
!4041 = distinct !DILexicalBlock(scope: !4030, file: !3, line: 1601, column: 7)
!4042 = !DILocation(line: 1601, column: 16, scope: !4041)
!4043 = !DILocation(line: 1601, column: 7, scope: !4030)
!4044 = !DILocation(line: 1602, column: 42, scope: !4041)
!4045 = !DILocation(line: 1602, column: 59, scope: !4041)
!4046 = !DILocation(line: 1602, column: 23, scope: !4041)
!4047 = !DILocation(line: 1602, column: 40, scope: !4041)
!4048 = !DILocation(line: 1602, column: 4, scope: !4041)
!4049 = !DILocation(line: 1602, column: 21, scope: !4041)
!4050 = !DILocation(line: 1603, column: 12, scope: !4051)
!4051 = distinct !DILexicalBlock(scope: !4041, file: !3, line: 1603, column: 12)
!4052 = !DILocation(line: 1603, column: 12, scope: !4041)
!4053 = !DILocalVariable(name: "f", scope: !4054, file: !3, line: 1604, type: !1690)
!4054 = distinct !DILexicalBlock(scope: !4051, file: !3, line: 1603, column: 32)
!4055 = !DILocation(line: 1604, column: 11, scope: !4054)
!4056 = !DILocation(line: 1604, column: 15, scope: !4054)
!4057 = !DILocation(line: 1604, column: 24, scope: !4054)
!4058 = !DILocation(line: 1604, column: 32, scope: !4054)
!4059 = !DILocation(line: 1604, column: 41, scope: !4054)
!4060 = !DILocation(line: 1604, column: 30, scope: !4054)
!4061 = !DILocation(line: 1606, column: 29, scope: !4054)
!4062 = !DILocation(line: 1606, column: 32, scope: !4054)
!4063 = !DILocation(line: 1606, column: 39, scope: !4054)
!4064 = !DILocation(line: 1606, column: 44, scope: !4054)
!4065 = !DILocation(line: 1606, column: 4, scope: !4054)
!4066 = !DILocation(line: 1607, column: 3, scope: !4054)
!4067 = !DILocation(line: 1609, column: 14, scope: !4030)
!4068 = !DILocation(line: 1609, column: 23, scope: !4030)
!4069 = !DILocation(line: 1609, column: 38, scope: !4030)
!4070 = !DILocation(line: 1609, column: 3, scope: !4030)
!4071 = !DILocation(line: 1612, column: 3, scope: !4030)
!4072 = !DILocation(line: 1612, column: 40, scope: !4030)
!4073 = !DILocation(line: 1612, column: 49, scope: !4030)
!4074 = !DILocation(line: 1613, column: 3, scope: !4030)
!4075 = !DILocation(line: 1614, column: 36, scope: !4030)
!4076 = !DILocation(line: 1614, column: 34, scope: !4030)
!4077 = !DILocation(line: 1617, column: 15, scope: !4030)
!4078 = !DILocation(line: 1617, column: 13, scope: !4030)
!4079 = !DILocation(line: 1619, column: 7, scope: !4080)
!4080 = distinct !DILexicalBlock(scope: !4030, file: !3, line: 1619, column: 7)
!4081 = !DILocation(line: 1619, column: 7, scope: !4030)
!4082 = !DILocation(line: 1623, column: 8, scope: !4083)
!4083 = distinct !DILexicalBlock(scope: !4084, file: !3, line: 1623, column: 8)
!4084 = distinct !DILexicalBlock(scope: !4080, file: !3, line: 1619, column: 18)
!4085 = !DILocation(line: 1623, column: 17, scope: !4083)
!4086 = !DILocation(line: 1623, column: 8, scope: !4084)
!4087 = !DILocation(line: 1624, column: 12, scope: !4088)
!4088 = distinct !DILexicalBlock(scope: !4089, file: !3, line: 1624, column: 5)
!4089 = distinct !DILexicalBlock(scope: !4083, file: !3, line: 1623, column: 25)
!4090 = !DILocation(line: 1624, column: 10, scope: !4088)
!4091 = !DILocation(line: 1624, column: 17, scope: !4092)
!4092 = distinct !DILexicalBlock(scope: !4088, file: !3, line: 1624, column: 5)
!4093 = !DILocation(line: 1624, column: 21, scope: !4092)
!4094 = !DILocation(line: 1624, column: 19, scope: !4092)
!4095 = !DILocation(line: 1624, column: 5, scope: !4088)
!4096 = !DILocalVariable(name: "v", scope: !4097, file: !3, line: 1625, type: !2075)
!4097 = distinct !DILexicalBlock(scope: !4092, file: !3, line: 1624, column: 35)
!4098 = !DILocation(line: 1625, column: 13, scope: !4097)
!4099 = !DILocation(line: 1625, column: 17, scope: !4097)
!4100 = !DILocation(line: 1625, column: 25, scope: !4097)
!4101 = !DILocation(line: 1625, column: 38, scope: !4097)
!4102 = !DILocation(line: 1625, column: 23, scope: !4097)
!4103 = !DILocalVariable(name: "out", scope: !4097, file: !3, line: 1626, type: !3996)
!4104 = !DILocation(line: 1626, column: 26, scope: !4097)
!4105 = !DILocation(line: 1626, column: 32, scope: !4097)
!4106 = !DILocation(line: 1626, column: 44, scope: !4097)
!4107 = !DILocation(line: 1626, column: 42, scope: !4097)
!4108 = !DILocation(line: 1628, column: 17, scope: !4097)
!4109 = !DILocation(line: 1628, column: 22, scope: !4097)
!4110 = !DILocation(line: 1628, column: 26, scope: !4097)
!4111 = !DILocation(line: 1628, column: 29, scope: !4097)
!4112 = !DILocation(line: 1628, column: 6, scope: !4097)
!4113 = !DILocation(line: 1629, column: 13, scope: !4097)
!4114 = !DILocation(line: 1629, column: 18, scope: !4097)
!4115 = !DILocation(line: 1629, column: 6, scope: !4097)
!4116 = !DILocation(line: 1629, column: 22, scope: !4097)
!4117 = !DILocation(line: 1629, column: 25, scope: !4097)
!4118 = !DILocation(line: 1630, column: 5, scope: !4097)
!4119 = !DILocation(line: 1624, column: 30, scope: !4092)
!4120 = !DILocation(line: 1624, column: 5, scope: !4092)
!4121 = distinct !{!4121, !4095, !4122}
!4122 = !DILocation(line: 1630, column: 5, scope: !4088)
!4123 = !DILocation(line: 1641, column: 12, scope: !4124)
!4124 = distinct !DILexicalBlock(scope: !4089, file: !3, line: 1641, column: 5)
!4125 = !DILocation(line: 1641, column: 10, scope: !4124)
!4126 = !DILocation(line: 1641, column: 17, scope: !4127)
!4127 = distinct !DILexicalBlock(scope: !4124, file: !3, line: 1641, column: 5)
!4128 = !DILocation(line: 1641, column: 21, scope: !4127)
!4129 = !DILocation(line: 1641, column: 30, scope: !4127)
!4130 = !DILocation(line: 1641, column: 19, scope: !4127)
!4131 = !DILocation(line: 1641, column: 5, scope: !4124)
!4132 = !DILocalVariable(name: "f", scope: !4133, file: !3, line: 1642, type: !1690)
!4133 = distinct !DILexicalBlock(scope: !4127, file: !3, line: 1641, column: 44)
!4134 = !DILocation(line: 1642, column: 13, scope: !4133)
!4135 = !DILocation(line: 1642, column: 17, scope: !4133)
!4136 = !DILocation(line: 1642, column: 26, scope: !4133)
!4137 = !DILocation(line: 1642, column: 34, scope: !4133)
!4138 = !DILocation(line: 1642, column: 43, scope: !4133)
!4139 = !DILocation(line: 1642, column: 56, scope: !4133)
!4140 = !DILocation(line: 1642, column: 32, scope: !4133)
!4141 = !DILocalVariable(name: "out", scope: !4142, file: !3, line: 1644, type: !3996)
!4142 = distinct !DILexicalBlock(scope: !4133, file: !3, line: 1644, column: 6)
!4143 = !DILocation(line: 1644, column: 6, scope: !4142)
!4144 = !DILocation(line: 1644, column: 6, scope: !4145)
!4145 = distinct !DILexicalBlock(scope: !4142, file: !3, line: 1644, column: 6)
!4146 = !DILocalVariable(name: "out", scope: !4147, file: !3, line: 1645, type: !3996)
!4147 = distinct !DILexicalBlock(scope: !4133, file: !3, line: 1645, column: 6)
!4148 = !DILocation(line: 1645, column: 6, scope: !4147)
!4149 = !DILocation(line: 1645, column: 6, scope: !4150)
!4150 = distinct !DILexicalBlock(scope: !4147, file: !3, line: 1645, column: 6)
!4151 = !DILocalVariable(name: "out", scope: !4152, file: !3, line: 1646, type: !3996)
!4152 = distinct !DILexicalBlock(scope: !4133, file: !3, line: 1646, column: 6)
!4153 = !DILocation(line: 1646, column: 6, scope: !4152)
!4154 = !DILocation(line: 1646, column: 6, scope: !4155)
!4155 = distinct !DILexicalBlock(scope: !4152, file: !3, line: 1646, column: 6)
!4156 = !DILocation(line: 1647, column: 10, scope: !4157)
!4157 = distinct !DILexicalBlock(scope: !4133, file: !3, line: 1647, column: 10)
!4158 = !DILocation(line: 1647, column: 13, scope: !4157)
!4159 = !DILocation(line: 1647, column: 10, scope: !4133)
!4160 = !DILocalVariable(name: "out", scope: !4161, file: !3, line: 1648, type: !3996)
!4161 = distinct !DILexicalBlock(scope: !4157, file: !3, line: 1648, column: 7)
!4162 = !DILocation(line: 1648, column: 7, scope: !4161)
!4163 = !DILocation(line: 1648, column: 7, scope: !4164)
!4164 = distinct !DILexicalBlock(scope: !4161, file: !3, line: 1648, column: 7)
!4165 = !DILocation(line: 1649, column: 5, scope: !4133)
!4166 = !DILocation(line: 1641, column: 40, scope: !4127)
!4167 = !DILocation(line: 1641, column: 5, scope: !4127)
!4168 = distinct !{!4168, !4131, !4169}
!4169 = !DILocation(line: 1649, column: 5, scope: !4124)
!4170 = !DILocation(line: 1651, column: 4, scope: !4089)
!4171 = !DILocation(line: 1653, column: 12, scope: !4172)
!4172 = distinct !DILexicalBlock(scope: !4173, file: !3, line: 1653, column: 5)
!4173 = distinct !DILexicalBlock(scope: !4083, file: !3, line: 1652, column: 9)
!4174 = !DILocation(line: 1653, column: 10, scope: !4172)
!4175 = !DILocation(line: 1653, column: 17, scope: !4176)
!4176 = distinct !DILexicalBlock(scope: !4172, file: !3, line: 1653, column: 5)
!4177 = !DILocation(line: 1653, column: 21, scope: !4176)
!4178 = !DILocation(line: 1653, column: 30, scope: !4176)
!4179 = !DILocation(line: 1653, column: 19, scope: !4176)
!4180 = !DILocation(line: 1653, column: 5, scope: !4172)
!4181 = !DILocalVariable(name: "f", scope: !4182, file: !3, line: 1654, type: !4183)
!4182 = distinct !DILexicalBlock(scope: !4176, file: !3, line: 1653, column: 44)
!4183 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4184, size: 64)
!4184 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1691)
!4185 = !DILocation(line: 1654, column: 19, scope: !4182)
!4186 = !DILocation(line: 1654, column: 24, scope: !4182)
!4187 = !DILocation(line: 1654, column: 33, scope: !4182)
!4188 = !DILocation(line: 1654, column: 39, scope: !4182)
!4189 = !DILocation(line: 1654, column: 48, scope: !4182)
!4190 = !DILocation(line: 1654, column: 61, scope: !4182)
!4191 = !DILocalVariable(name: "fv", scope: !4182, file: !3, line: 1655, type: !4192)
!4192 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4193, size: 64)
!4193 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7)
!4194 = !DILocation(line: 1655, column: 26, scope: !4182)
!4195 = !DILocation(line: 1655, column: 32, scope: !4182)
!4196 = !DILocation(line: 1655, column: 35, scope: !4182)
!4197 = !DILocalVariable(name: "vi", scope: !4182, file: !3, line: 1656, type: !4198)
!4198 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2281, size: 192, elements: !4199)
!4199 = !{!689, !428}
!4200 = !DILocation(line: 1656, column: 16, scope: !4182)
!4201 = !DILocalVariable(name: "fno", scope: !4182, file: !3, line: 1657, type: !426)
!4202 = !DILocation(line: 1657, column: 12, scope: !4182)
!4203 = !DILocalVariable(name: "no", scope: !4182, file: !3, line: 1658, type: !782)
!4204 = !DILocation(line: 1658, column: 12, scope: !4182)
!4205 = !DILocalVariable(name: "fmask", scope: !4182, file: !3, line: 1660, type: !176)
!4206 = !DILocation(line: 1660, column: 12, scope: !4182)
!4207 = !DILocation(line: 1662, column: 31, scope: !4208)
!4208 = distinct !DILexicalBlock(scope: !4182, file: !3, line: 1662, column: 10)
!4209 = !DILocation(line: 1662, column: 34, scope: !4208)
!4210 = !DILocation(line: 1662, column: 10, scope: !4208)
!4211 = !DILocation(line: 1662, column: 10, scope: !4182)
!4212 = !DILocation(line: 1663, column: 7, scope: !4208)
!4213 = !DILocation(line: 1666, column: 10, scope: !4214)
!4214 = distinct !DILexicalBlock(scope: !4182, file: !3, line: 1666, column: 10)
!4215 = !DILocation(line: 1666, column: 13, scope: !4214)
!4216 = !DILocation(line: 1666, column: 10, scope: !4182)
!4217 = !DILocation(line: 1667, column: 22, scope: !4218)
!4218 = distinct !DILexicalBlock(scope: !4214, file: !3, line: 1666, column: 17)
!4219 = !DILocation(line: 1668, column: 13, scope: !4218)
!4220 = !DILocation(line: 1668, column: 19, scope: !4218)
!4221 = !DILocation(line: 1668, column: 26, scope: !4218)
!4222 = !DILocation(line: 1669, column: 13, scope: !4218)
!4223 = !DILocation(line: 1669, column: 19, scope: !4218)
!4224 = !DILocation(line: 1669, column: 26, scope: !4218)
!4225 = !DILocation(line: 1670, column: 13, scope: !4218)
!4226 = !DILocation(line: 1670, column: 19, scope: !4218)
!4227 = !DILocation(line: 1670, column: 26, scope: !4218)
!4228 = !DILocation(line: 1671, column: 13, scope: !4218)
!4229 = !DILocation(line: 1671, column: 19, scope: !4218)
!4230 = !DILocation(line: 1671, column: 26, scope: !4218)
!4231 = !DILocation(line: 1667, column: 7, scope: !4218)
!4232 = !DILocation(line: 1672, column: 11, scope: !4233)
!4233 = distinct !DILexicalBlock(scope: !4218, file: !3, line: 1672, column: 11)
!4234 = !DILocation(line: 1672, column: 11, scope: !4218)
!4235 = !DILocation(line: 1673, column: 17, scope: !4236)
!4236 = distinct !DILexicalBlock(scope: !4233, file: !3, line: 1672, column: 18)
!4237 = !DILocation(line: 1673, column: 23, scope: !4236)
!4238 = !DILocation(line: 1674, column: 11, scope: !4236)
!4239 = !DILocation(line: 1674, column: 17, scope: !4236)
!4240 = !DILocation(line: 1673, column: 30, scope: !4236)
!4241 = !DILocation(line: 1675, column: 11, scope: !4236)
!4242 = !DILocation(line: 1675, column: 17, scope: !4236)
!4243 = !DILocation(line: 1674, column: 24, scope: !4236)
!4244 = !DILocation(line: 1676, column: 11, scope: !4236)
!4245 = !DILocation(line: 1676, column: 17, scope: !4236)
!4246 = !DILocation(line: 1675, column: 24, scope: !4236)
!4247 = !DILocation(line: 1676, column: 25, scope: !4236)
!4248 = !DILocation(line: 1673, column: 14, scope: !4236)
!4249 = !DILocation(line: 1677, column: 7, scope: !4236)
!4250 = !DILocation(line: 1678, column: 6, scope: !4218)
!4251 = !DILocation(line: 1680, column: 21, scope: !4252)
!4252 = distinct !DILexicalBlock(scope: !4214, file: !3, line: 1679, column: 11)
!4253 = !DILocation(line: 1681, column: 12, scope: !4252)
!4254 = !DILocation(line: 1681, column: 18, scope: !4252)
!4255 = !DILocation(line: 1681, column: 25, scope: !4252)
!4256 = !DILocation(line: 1682, column: 12, scope: !4252)
!4257 = !DILocation(line: 1682, column: 18, scope: !4252)
!4258 = !DILocation(line: 1682, column: 25, scope: !4252)
!4259 = !DILocation(line: 1683, column: 12, scope: !4252)
!4260 = !DILocation(line: 1683, column: 18, scope: !4252)
!4261 = !DILocation(line: 1683, column: 25, scope: !4252)
!4262 = !DILocation(line: 1680, column: 7, scope: !4252)
!4263 = !DILocation(line: 1684, column: 11, scope: !4264)
!4264 = distinct !DILexicalBlock(scope: !4252, file: !3, line: 1684, column: 11)
!4265 = !DILocation(line: 1684, column: 11, scope: !4252)
!4266 = !DILocation(line: 1685, column: 17, scope: !4267)
!4267 = distinct !DILexicalBlock(scope: !4264, file: !3, line: 1684, column: 18)
!4268 = !DILocation(line: 1685, column: 23, scope: !4267)
!4269 = !DILocation(line: 1686, column: 11, scope: !4267)
!4270 = !DILocation(line: 1686, column: 17, scope: !4267)
!4271 = !DILocation(line: 1685, column: 30, scope: !4267)
!4272 = !DILocation(line: 1687, column: 11, scope: !4267)
!4273 = !DILocation(line: 1687, column: 17, scope: !4267)
!4274 = !DILocation(line: 1686, column: 24, scope: !4267)
!4275 = !DILocation(line: 1687, column: 25, scope: !4267)
!4276 = !DILocation(line: 1685, column: 14, scope: !4267)
!4277 = !DILocation(line: 1688, column: 7, scope: !4267)
!4278 = !DILocation(line: 1690, column: 31, scope: !4182)
!4279 = !DILocation(line: 1690, column: 35, scope: !4182)
!4280 = !DILocation(line: 1690, column: 6, scope: !4182)
!4281 = !DILocation(line: 1692, column: 13, scope: !4282)
!4282 = distinct !DILexicalBlock(scope: !4182, file: !3, line: 1692, column: 6)
!4283 = !DILocation(line: 1692, column: 11, scope: !4282)
!4284 = !DILocation(line: 1692, column: 18, scope: !4285)
!4285 = distinct !DILexicalBlock(scope: !4282, file: !3, line: 1692, column: 6)
!4286 = !DILocation(line: 1692, column: 23, scope: !4285)
!4287 = !DILocation(line: 1692, column: 26, scope: !4285)
!4288 = !DILocation(line: 1692, column: 20, scope: !4285)
!4289 = !DILocation(line: 1692, column: 6, scope: !4282)
!4290 = !DILocation(line: 1693, column: 14, scope: !4291)
!4291 = distinct !DILexicalBlock(scope: !4292, file: !3, line: 1693, column: 7)
!4292 = distinct !DILexicalBlock(scope: !4285, file: !3, line: 1692, column: 44)
!4293 = !DILocation(line: 1693, column: 12, scope: !4291)
!4294 = !DILocation(line: 1693, column: 19, scope: !4295)
!4295 = distinct !DILexicalBlock(scope: !4291, file: !3, line: 1693, column: 7)
!4296 = !DILocation(line: 1693, column: 21, scope: !4295)
!4297 = !DILocation(line: 1693, column: 7, scope: !4291)
!4298 = !DILocalVariable(name: "v", scope: !4299, file: !3, line: 1694, type: !4300)
!4299 = distinct !DILexicalBlock(scope: !4295, file: !3, line: 1693, column: 31)
!4300 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4301, size: 64)
!4301 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2076)
!4302 = !DILocation(line: 1694, column: 21, scope: !4299)
!4303 = !DILocation(line: 1694, column: 26, scope: !4299)
!4304 = !DILocation(line: 1694, column: 32, scope: !4299)
!4305 = !DILocation(line: 1694, column: 38, scope: !4299)
!4306 = !DILocation(line: 1694, column: 35, scope: !4299)
!4307 = !DILocation(line: 1694, column: 41, scope: !4299)
!4308 = !DILocalVariable(name: "out", scope: !4299, file: !3, line: 1695, type: !3996)
!4309 = !DILocation(line: 1695, column: 28, scope: !4299)
!4310 = !DILocation(line: 1695, column: 34, scope: !4299)
!4311 = !DILocation(line: 1697, column: 19, scope: !4299)
!4312 = !DILocation(line: 1697, column: 24, scope: !4299)
!4313 = !DILocation(line: 1697, column: 28, scope: !4299)
!4314 = !DILocation(line: 1697, column: 31, scope: !4299)
!4315 = !DILocation(line: 1697, column: 8, scope: !4299)
!4316 = !DILocation(line: 1698, column: 15, scope: !4299)
!4317 = !DILocation(line: 1698, column: 20, scope: !4299)
!4318 = !DILocation(line: 1698, column: 8, scope: !4299)
!4319 = !DILocation(line: 1700, column: 12, scope: !4320)
!4320 = distinct !DILexicalBlock(scope: !4299, file: !3, line: 1700, column: 12)
!4321 = !DILocation(line: 1700, column: 12, scope: !4299)
!4322 = !DILocation(line: 1701, column: 34, scope: !4320)
!4323 = !DILocation(line: 1701, column: 41, scope: !4320)
!4324 = !DILocation(line: 1701, column: 56, scope: !4320)
!4325 = !DILocation(line: 1701, column: 61, scope: !4320)
!4326 = !DILocation(line: 1701, column: 9, scope: !4320)
!4327 = !DILocation(line: 1703, column: 28, scope: !4320)
!4328 = !DILocation(line: 1703, column: 33, scope: !4320)
!4329 = !DILocation(line: 1703, column: 40, scope: !4320)
!4330 = !DILocation(line: 1703, column: 9, scope: !4320)
!4331 = !DILocation(line: 1705, column: 17, scope: !4299)
!4332 = !DILocation(line: 1706, column: 7, scope: !4299)
!4333 = !DILocation(line: 1693, column: 27, scope: !4295)
!4334 = !DILocation(line: 1693, column: 7, scope: !4295)
!4335 = distinct !{!4335, !4297, !4336}
!4336 = !DILocation(line: 1706, column: 7, scope: !4291)
!4337 = !DILocation(line: 1707, column: 6, scope: !4292)
!4338 = !DILocation(line: 1692, column: 40, scope: !4285)
!4339 = !DILocation(line: 1692, column: 6, scope: !4285)
!4340 = distinct !{!4340, !4289, !4341}
!4341 = !DILocation(line: 1707, column: 6, scope: !4282)
!4342 = !DILocation(line: 1708, column: 5, scope: !4182)
!4343 = !DILocation(line: 1653, column: 39, scope: !4176)
!4344 = !DILocation(line: 1653, column: 5, scope: !4176)
!4345 = distinct !{!4345, !4180, !4346}
!4346 = !DILocation(line: 1708, column: 5, scope: !4172)
!4347 = !DILocation(line: 1711, column: 4, scope: !4084)
!4348 = !DILocation(line: 1712, column: 3, scope: !4084)
!4349 = !DILocation(line: 1714, column: 4, scope: !4350)
!4350 = distinct !DILexicalBlock(scope: !4080, file: !3, line: 1713, column: 8)
!4351 = !DILocation(line: 1714, column: 27, scope: !4350)
!4352 = !DILocation(line: 1714, column: 36, scope: !4350)
!4353 = !DILocation(line: 1715, column: 4, scope: !4350)
!4354 = !DILocation(line: 1715, column: 13, scope: !4350)
!4355 = !DILocation(line: 1715, column: 22, scope: !4350)
!4356 = !DILocation(line: 1718, column: 3, scope: !4030)
!4357 = !DILocation(line: 1719, column: 2, scope: !4030)
!4358 = !DILocation(line: 1721, column: 19, scope: !3941)
!4359 = !DILocation(line: 1721, column: 2, scope: !3941)
!4360 = !DILocation(line: 1721, column: 11, scope: !3941)
!4361 = !DILocation(line: 1721, column: 17, scope: !3941)
!4362 = !DILocation(line: 1722, column: 1, scope: !3941)
!4363 = distinct !DISubprogram(name: "copy_v4_v4", scope: !4364, file: !4364, line: 71, type: !4365, scopeLine: 72, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1345)
!4364 = !DIFile(filename: "blender/source/blender/blenlib/intern/math_vector_inline.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!4365 = !DISubroutineType(types: !4366)
!4366 = !{null, !175, !1177}
!4367 = !DILocalVariable(name: "r", arg: 1, scope: !4363, file: !4364, line: 71, type: !175)
!4368 = !DILocation(line: 71, column: 31, scope: !4363)
!4369 = !DILocalVariable(name: "a", arg: 2, scope: !4363, file: !4364, line: 71, type: !1177)
!4370 = !DILocation(line: 71, column: 49, scope: !4363)
!4371 = !DILocation(line: 73, column: 9, scope: !4363)
!4372 = !DILocation(line: 73, column: 2, scope: !4363)
!4373 = !DILocation(line: 73, column: 7, scope: !4363)
!4374 = !DILocation(line: 74, column: 9, scope: !4363)
!4375 = !DILocation(line: 74, column: 2, scope: !4363)
!4376 = !DILocation(line: 74, column: 7, scope: !4363)
!4377 = !DILocation(line: 75, column: 9, scope: !4363)
!4378 = !DILocation(line: 75, column: 2, scope: !4363)
!4379 = !DILocation(line: 75, column: 7, scope: !4363)
!4380 = !DILocation(line: 76, column: 9, scope: !4363)
!4381 = !DILocation(line: 76, column: 2, scope: !4363)
!4382 = !DILocation(line: 76, column: 7, scope: !4363)
!4383 = !DILocation(line: 77, column: 1, scope: !4363)
!4384 = distinct !DISubprogram(name: "copy_v3_v3", scope: !4364, file: !4364, line: 64, type: !4365, scopeLine: 65, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1345)
!4385 = !DILocalVariable(name: "r", arg: 1, scope: !4384, file: !4364, line: 64, type: !175)
!4386 = !DILocation(line: 64, column: 31, scope: !4384)
!4387 = !DILocalVariable(name: "a", arg: 2, scope: !4384, file: !4364, line: 64, type: !1177)
!4388 = !DILocation(line: 64, column: 49, scope: !4384)
!4389 = !DILocation(line: 66, column: 9, scope: !4384)
!4390 = !DILocation(line: 66, column: 2, scope: !4384)
!4391 = !DILocation(line: 66, column: 7, scope: !4384)
!4392 = !DILocation(line: 67, column: 9, scope: !4384)
!4393 = !DILocation(line: 67, column: 2, scope: !4384)
!4394 = !DILocation(line: 67, column: 7, scope: !4384)
!4395 = !DILocation(line: 68, column: 9, scope: !4384)
!4396 = !DILocation(line: 68, column: 2, scope: !4384)
!4397 = !DILocation(line: 68, column: 7, scope: !4384)
!4398 = !DILocation(line: 69, column: 1, scope: !4384)
!4399 = distinct !DISubprogram(name: "gpu_color_from_mask_copy", scope: !3, file: !3, line: 1533, type: !4400, scopeLine: 1534, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1345)
!4400 = !DISubroutineType(types: !4401)
!4401 = !{null, !176, !1177, !177}
!4402 = !DILocalVariable(name: "mask", arg: 1, scope: !4399, file: !3, line: 1533, type: !176)
!4403 = !DILocation(line: 1533, column: 44, scope: !4399)
!4404 = !DILocalVariable(name: "diffuse_color", arg: 2, scope: !4399, file: !3, line: 1533, type: !1177)
!4405 = !DILocation(line: 1533, column: 62, scope: !4399)
!4406 = !DILocalVariable(name: "out", arg: 3, scope: !4399, file: !3, line: 1533, type: !177)
!4407 = !DILocation(line: 1533, column: 94, scope: !4399)
!4408 = !DILocalVariable(name: "mask_color", scope: !4399, file: !3, line: 1535, type: !176)
!4409 = !DILocation(line: 1535, column: 8, scope: !4399)
!4410 = !DILocation(line: 1537, column: 35, scope: !4399)
!4411 = !DILocation(line: 1537, column: 15, scope: !4399)
!4412 = !DILocation(line: 1537, column: 41, scope: !4399)
!4413 = !DILocation(line: 1537, column: 13, scope: !4399)
!4414 = !DILocation(line: 1539, column: 11, scope: !4399)
!4415 = !DILocation(line: 1539, column: 30, scope: !4399)
!4416 = !DILocation(line: 1539, column: 28, scope: !4399)
!4417 = !DILocation(line: 1539, column: 2, scope: !4399)
!4418 = !DILocation(line: 1539, column: 9, scope: !4399)
!4419 = !DILocation(line: 1540, column: 11, scope: !4399)
!4420 = !DILocation(line: 1540, column: 30, scope: !4399)
!4421 = !DILocation(line: 1540, column: 28, scope: !4399)
!4422 = !DILocation(line: 1540, column: 2, scope: !4399)
!4423 = !DILocation(line: 1540, column: 9, scope: !4399)
!4424 = !DILocation(line: 1541, column: 11, scope: !4399)
!4425 = !DILocation(line: 1541, column: 30, scope: !4399)
!4426 = !DILocation(line: 1541, column: 28, scope: !4399)
!4427 = !DILocation(line: 1541, column: 2, scope: !4399)
!4428 = !DILocation(line: 1541, column: 9, scope: !4399)
!4429 = !DILocation(line: 1542, column: 1, scope: !4399)
!4430 = distinct !DISubprogram(name: "normal_float_to_short_v3", scope: !4364, file: !4364, line: 842, type: !4431, scopeLine: 843, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1345)
!4431 = !DISubroutineType(types: !4432)
!4432 = !{null, !4433, !1177}
!4433 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !179, size: 64)
!4434 = !DILocalVariable(name: "out", arg: 1, scope: !4430, file: !4364, line: 842, type: !4433)
!4435 = !DILocation(line: 842, column: 45, scope: !4430)
!4436 = !DILocalVariable(name: "in", arg: 2, scope: !4430, file: !4364, line: 842, type: !1177)
!4437 = !DILocation(line: 842, column: 65, scope: !4430)
!4438 = !DILocation(line: 844, column: 20, scope: !4430)
!4439 = !DILocation(line: 844, column: 26, scope: !4430)
!4440 = !DILocation(line: 844, column: 11, scope: !4430)
!4441 = !DILocation(line: 844, column: 2, scope: !4430)
!4442 = !DILocation(line: 844, column: 9, scope: !4430)
!4443 = !DILocation(line: 845, column: 20, scope: !4430)
!4444 = !DILocation(line: 845, column: 26, scope: !4430)
!4445 = !DILocation(line: 845, column: 11, scope: !4430)
!4446 = !DILocation(line: 845, column: 2, scope: !4430)
!4447 = !DILocation(line: 845, column: 9, scope: !4430)
!4448 = !DILocation(line: 846, column: 20, scope: !4430)
!4449 = !DILocation(line: 846, column: 26, scope: !4430)
!4450 = !DILocation(line: 846, column: 11, scope: !4430)
!4451 = !DILocation(line: 846, column: 2, scope: !4430)
!4452 = !DILocation(line: 846, column: 9, scope: !4430)
!4453 = !DILocation(line: 847, column: 1, scope: !4430)
!4454 = distinct !DISubprogram(name: "GPU_build_mesh_pbvh_buffers", scope: !3, file: !3, line: 1724, type: !4455, scopeLine: 1728, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1345)
!4455 = !DISubroutineType(types: !4456)
!4456 = !{!3944, !3980, !1690, !2075, !170, !171}
!4457 = !DILocalVariable(name: "face_vert_indices", arg: 1, scope: !4454, file: !3, line: 1724, type: !3980)
!4458 = !DILocation(line: 1724, column: 53, scope: !4454)
!4459 = !DILocalVariable(name: "mface", arg: 2, scope: !4454, file: !3, line: 1725, type: !1690)
!4460 = !DILocation(line: 1725, column: 44, scope: !4454)
!4461 = !DILocalVariable(name: "mvert", arg: 3, scope: !4454, file: !3, line: 1725, type: !2075)
!4462 = !DILocation(line: 1725, column: 58, scope: !4454)
!4463 = !DILocalVariable(name: "face_indices", arg: 4, scope: !4454, file: !3, line: 1726, type: !170)
!4464 = !DILocation(line: 1726, column: 42, scope: !4454)
!4465 = !DILocalVariable(name: "totface", arg: 5, scope: !4454, file: !3, line: 1727, type: !171)
!4466 = !DILocation(line: 1727, column: 41, scope: !4454)
!4467 = !DILocalVariable(name: "buffers", scope: !4454, file: !3, line: 1729, type: !3944)
!4468 = !DILocation(line: 1729, column: 20, scope: !4454)
!4469 = !DILocalVariable(name: "tri_data", scope: !4454, file: !3, line: 1730, type: !4470)
!4470 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4471, size: 64)
!4471 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!4472 = !DILocation(line: 1730, column: 18, scope: !4454)
!4473 = !DILocalVariable(name: "i", scope: !4454, file: !3, line: 1731, type: !171)
!4474 = !DILocation(line: 1731, column: 6, scope: !4454)
!4475 = !DILocalVariable(name: "j", scope: !4454, file: !3, line: 1731, type: !171)
!4476 = !DILocation(line: 1731, column: 9, scope: !4454)
!4477 = !DILocalVariable(name: "k", scope: !4454, file: !3, line: 1731, type: !171)
!4478 = !DILocation(line: 1731, column: 12, scope: !4454)
!4479 = !DILocalVariable(name: "tottri", scope: !4454, file: !3, line: 1731, type: !171)
!4480 = !DILocation(line: 1731, column: 15, scope: !4454)
!4481 = !DILocation(line: 1733, column: 12, scope: !4454)
!4482 = !DILocation(line: 1733, column: 10, scope: !4454)
!4483 = !DILocation(line: 1734, column: 2, scope: !4454)
!4484 = !DILocation(line: 1734, column: 11, scope: !4454)
!4485 = !DILocation(line: 1734, column: 22, scope: !4454)
!4486 = !DILocation(line: 1735, column: 20, scope: !4454)
!4487 = !DILocation(line: 1735, column: 26, scope: !4454)
!4488 = !DILocation(line: 1735, column: 43, scope: !4454)
!4489 = !DILocation(line: 1735, column: 48, scope: !4454)
!4490 = !DILocation(line: 1735, column: 2, scope: !4454)
!4491 = !DILocation(line: 1735, column: 11, scope: !4454)
!4492 = !DILocation(line: 1735, column: 18, scope: !4454)
!4493 = !DILocation(line: 1737, column: 2, scope: !4454)
!4494 = !DILocation(line: 1737, column: 11, scope: !4454)
!4495 = !DILocation(line: 1737, column: 30, scope: !4454)
!4496 = !DILocation(line: 1738, column: 2, scope: !4454)
!4497 = !DILocation(line: 1738, column: 11, scope: !4454)
!4498 = !DILocation(line: 1738, column: 23, scope: !4454)
!4499 = !DILocation(line: 1741, column: 9, scope: !4500)
!4500 = distinct !DILexicalBlock(scope: !4454, file: !3, line: 1741, column: 2)
!4501 = !DILocation(line: 1741, column: 21, scope: !4500)
!4502 = !DILocation(line: 1741, column: 7, scope: !4500)
!4503 = !DILocation(line: 1741, column: 26, scope: !4504)
!4504 = distinct !DILexicalBlock(scope: !4500, file: !3, line: 1741, column: 2)
!4505 = !DILocation(line: 1741, column: 30, scope: !4504)
!4506 = !DILocation(line: 1741, column: 28, scope: !4504)
!4507 = !DILocation(line: 1741, column: 2, scope: !4500)
!4508 = !DILocalVariable(name: "f", scope: !4509, file: !3, line: 1742, type: !4183)
!4509 = distinct !DILexicalBlock(scope: !4504, file: !3, line: 1741, column: 44)
!4510 = !DILocation(line: 1742, column: 16, scope: !4509)
!4511 = !DILocation(line: 1742, column: 21, scope: !4509)
!4512 = !DILocation(line: 1742, column: 27, scope: !4509)
!4513 = !DILocation(line: 1742, column: 40, scope: !4509)
!4514 = !DILocation(line: 1743, column: 29, scope: !4515)
!4515 = distinct !DILexicalBlock(scope: !4509, file: !3, line: 1743, column: 7)
!4516 = !DILocation(line: 1743, column: 32, scope: !4515)
!4517 = !DILocation(line: 1743, column: 8, scope: !4515)
!4518 = !DILocation(line: 1743, column: 7, scope: !4509)
!4519 = !DILocation(line: 1744, column: 14, scope: !4515)
!4520 = !DILocation(line: 1744, column: 17, scope: !4515)
!4521 = !DILocation(line: 1744, column: 11, scope: !4515)
!4522 = !DILocation(line: 1744, column: 4, scope: !4515)
!4523 = !DILocation(line: 1745, column: 2, scope: !4509)
!4524 = !DILocation(line: 1741, column: 39, scope: !4504)
!4525 = !DILocation(line: 1741, column: 2, scope: !4504)
!4526 = distinct !{!4526, !4507, !4527}
!4527 = !DILocation(line: 1745, column: 2, scope: !4500)
!4528 = !DILocation(line: 1747, column: 6, scope: !4529)
!4529 = distinct !DILexicalBlock(scope: !4454, file: !3, line: 1747, column: 6)
!4530 = !DILocation(line: 1747, column: 13, scope: !4529)
!4531 = !DILocation(line: 1747, column: 6, scope: !4454)
!4532 = !DILocation(line: 1748, column: 3, scope: !4533)
!4533 = distinct !DILexicalBlock(scope: !4529, file: !3, line: 1747, column: 19)
!4534 = !DILocation(line: 1748, column: 12, scope: !4533)
!4535 = !DILocation(line: 1748, column: 20, scope: !4533)
!4536 = !DILocation(line: 1750, column: 20, scope: !4533)
!4537 = !DILocation(line: 1750, column: 3, scope: !4533)
!4538 = !DILocation(line: 1750, column: 12, scope: !4533)
!4539 = !DILocation(line: 1750, column: 18, scope: !4533)
!4540 = !DILocation(line: 1751, column: 27, scope: !4533)
!4541 = !DILocation(line: 1751, column: 3, scope: !4533)
!4542 = !DILocation(line: 1751, column: 12, scope: !4533)
!4543 = !DILocation(line: 1751, column: 25, scope: !4533)
!4544 = !DILocation(line: 1752, column: 3, scope: !4533)
!4545 = !DILocation(line: 1752, column: 12, scope: !4533)
!4546 = !DILocation(line: 1752, column: 20, scope: !4533)
!4547 = !DILocation(line: 1754, column: 10, scope: !4533)
!4548 = !DILocation(line: 1754, column: 3, scope: !4533)
!4549 = !DILocation(line: 1760, column: 6, scope: !4550)
!4550 = distinct !DILexicalBlock(scope: !4454, file: !3, line: 1760, column: 6)
!4551 = !DILocation(line: 1760, column: 24, scope: !4550)
!4552 = !DILocation(line: 1760, column: 27, scope: !4550)
!4553 = !DILocation(line: 1760, column: 36, scope: !4550)
!4554 = !DILocation(line: 1760, column: 6, scope: !4454)
!4555 = !DILocation(line: 1761, column: 3, scope: !4550)
!4556 = !DILocation(line: 1761, column: 23, scope: !4550)
!4557 = !DILocation(line: 1761, column: 32, scope: !4550)
!4558 = !DILocation(line: 1763, column: 6, scope: !4559)
!4559 = distinct !DILexicalBlock(scope: !4454, file: !3, line: 1763, column: 6)
!4560 = !DILocation(line: 1763, column: 15, scope: !4559)
!4561 = !DILocation(line: 1763, column: 6, scope: !4454)
!4562 = !DILocation(line: 1765, column: 3, scope: !4563)
!4563 = distinct !DILexicalBlock(scope: !4559, file: !3, line: 1763, column: 26)
!4564 = !DILocation(line: 1765, column: 48, scope: !4563)
!4565 = !DILocation(line: 1765, column: 57, scope: !4563)
!4566 = !DILocation(line: 1766, column: 3, scope: !4563)
!4567 = !DILocation(line: 1767, column: 44, scope: !4563)
!4568 = !DILocation(line: 1767, column: 42, scope: !4563)
!4569 = !DILocation(line: 1767, column: 51, scope: !4563)
!4570 = !DILocation(line: 1770, column: 14, scope: !4563)
!4571 = !DILocation(line: 1770, column: 12, scope: !4563)
!4572 = !DILocation(line: 1771, column: 7, scope: !4573)
!4573 = distinct !DILexicalBlock(scope: !4563, file: !3, line: 1771, column: 7)
!4574 = !DILocation(line: 1771, column: 7, scope: !4563)
!4575 = !DILocation(line: 1772, column: 11, scope: !4576)
!4576 = distinct !DILexicalBlock(scope: !4577, file: !3, line: 1772, column: 4)
!4577 = distinct !DILexicalBlock(scope: !4573, file: !3, line: 1771, column: 17)
!4578 = !DILocation(line: 1772, column: 9, scope: !4576)
!4579 = !DILocation(line: 1772, column: 16, scope: !4580)
!4580 = distinct !DILexicalBlock(scope: !4576, file: !3, line: 1772, column: 4)
!4581 = !DILocation(line: 1772, column: 20, scope: !4580)
!4582 = !DILocation(line: 1772, column: 18, scope: !4580)
!4583 = !DILocation(line: 1772, column: 4, scope: !4576)
!4584 = !DILocalVariable(name: "f", scope: !4585, file: !3, line: 1773, type: !4183)
!4585 = distinct !DILexicalBlock(scope: !4580, file: !3, line: 1772, column: 34)
!4586 = !DILocation(line: 1773, column: 18, scope: !4585)
!4587 = !DILocation(line: 1773, column: 22, scope: !4585)
!4588 = !DILocation(line: 1773, column: 30, scope: !4585)
!4589 = !DILocation(line: 1773, column: 43, scope: !4585)
!4590 = !DILocation(line: 1773, column: 28, scope: !4585)
!4591 = !DILocalVariable(name: "v", scope: !4585, file: !3, line: 1774, type: !841)
!4592 = !DILocation(line: 1774, column: 9, scope: !4585)
!4593 = !DILocation(line: 1777, column: 30, scope: !4594)
!4594 = distinct !DILexicalBlock(scope: !4585, file: !3, line: 1777, column: 9)
!4595 = !DILocation(line: 1777, column: 33, scope: !4594)
!4596 = !DILocation(line: 1777, column: 9, scope: !4594)
!4597 = !DILocation(line: 1777, column: 9, scope: !4585)
!4598 = !DILocation(line: 1778, column: 6, scope: !4594)
!4599 = !DILocation(line: 1780, column: 5, scope: !4585)
!4600 = !DILocation(line: 1780, column: 10, scope: !4585)
!4601 = !DILocation(line: 1781, column: 5, scope: !4585)
!4602 = !DILocation(line: 1781, column: 10, scope: !4585)
!4603 = !DILocation(line: 1782, column: 5, scope: !4585)
!4604 = !DILocation(line: 1782, column: 10, scope: !4585)
!4605 = !DILocation(line: 1784, column: 12, scope: !4606)
!4606 = distinct !DILexicalBlock(scope: !4585, file: !3, line: 1784, column: 5)
!4607 = !DILocation(line: 1784, column: 10, scope: !4606)
!4608 = !DILocation(line: 1784, column: 17, scope: !4609)
!4609 = distinct !DILexicalBlock(scope: !4606, file: !3, line: 1784, column: 5)
!4610 = !DILocation(line: 1784, column: 22, scope: !4609)
!4611 = !DILocation(line: 1784, column: 25, scope: !4609)
!4612 = !DILocation(line: 1784, column: 19, scope: !4609)
!4613 = !DILocation(line: 1784, column: 5, scope: !4606)
!4614 = !DILocation(line: 1785, column: 13, scope: !4615)
!4615 = distinct !DILexicalBlock(scope: !4616, file: !3, line: 1785, column: 6)
!4616 = distinct !DILexicalBlock(scope: !4609, file: !3, line: 1784, column: 43)
!4617 = !DILocation(line: 1785, column: 11, scope: !4615)
!4618 = !DILocation(line: 1785, column: 18, scope: !4619)
!4619 = distinct !DILexicalBlock(scope: !4615, file: !3, line: 1785, column: 6)
!4620 = !DILocation(line: 1785, column: 20, scope: !4619)
!4621 = !DILocation(line: 1785, column: 6, scope: !4615)
!4622 = !DILocation(line: 1786, column: 19, scope: !4623)
!4623 = distinct !DILexicalBlock(scope: !4619, file: !3, line: 1785, column: 30)
!4624 = !DILocation(line: 1786, column: 37, scope: !4623)
!4625 = !DILocation(line: 1786, column: 42, scope: !4623)
!4626 = !DILocation(line: 1786, column: 40, scope: !4623)
!4627 = !DILocation(line: 1786, column: 8, scope: !4623)
!4628 = !DILocation(line: 1786, column: 17, scope: !4623)
!4629 = !DILocation(line: 1787, column: 15, scope: !4623)
!4630 = !DILocation(line: 1788, column: 6, scope: !4623)
!4631 = !DILocation(line: 1785, column: 25, scope: !4619)
!4632 = !DILocation(line: 1785, column: 6, scope: !4619)
!4633 = distinct !{!4633, !4621, !4634}
!4634 = !DILocation(line: 1788, column: 6, scope: !4615)
!4635 = !DILocation(line: 1789, column: 6, scope: !4616)
!4636 = !DILocation(line: 1789, column: 11, scope: !4616)
!4637 = !DILocation(line: 1790, column: 6, scope: !4616)
!4638 = !DILocation(line: 1790, column: 11, scope: !4616)
!4639 = !DILocation(line: 1791, column: 6, scope: !4616)
!4640 = !DILocation(line: 1791, column: 11, scope: !4616)
!4641 = !DILocation(line: 1792, column: 5, scope: !4616)
!4642 = !DILocation(line: 1784, column: 38, scope: !4609)
!4643 = !DILocation(line: 1784, column: 5, scope: !4609)
!4644 = distinct !{!4644, !4613, !4645}
!4645 = !DILocation(line: 1792, column: 5, scope: !4606)
!4646 = !DILocation(line: 1793, column: 4, scope: !4585)
!4647 = !DILocation(line: 1772, column: 29, scope: !4580)
!4648 = !DILocation(line: 1772, column: 4, scope: !4580)
!4649 = distinct !{!4649, !4583, !4650}
!4650 = !DILocation(line: 1793, column: 4, scope: !4576)
!4651 = !DILocation(line: 1794, column: 4, scope: !4577)
!4652 = !DILocation(line: 1795, column: 3, scope: !4577)
!4653 = !DILocation(line: 1797, column: 4, scope: !4654)
!4654 = distinct !DILexicalBlock(scope: !4573, file: !3, line: 1796, column: 8)
!4655 = !DILocation(line: 1797, column: 27, scope: !4654)
!4656 = !DILocation(line: 1797, column: 36, scope: !4654)
!4657 = !DILocation(line: 1798, column: 4, scope: !4654)
!4658 = !DILocation(line: 1798, column: 13, scope: !4654)
!4659 = !DILocation(line: 1798, column: 23, scope: !4654)
!4660 = !DILocation(line: 1801, column: 3, scope: !4563)
!4661 = !DILocation(line: 1802, column: 2, scope: !4563)
!4662 = !DILocation(line: 1804, column: 6, scope: !4663)
!4663 = distinct !DILexicalBlock(scope: !4454, file: !3, line: 1804, column: 6)
!4664 = !DILocation(line: 1804, column: 24, scope: !4663)
!4665 = !DILocation(line: 1804, column: 28, scope: !4663)
!4666 = !DILocation(line: 1804, column: 37, scope: !4663)
!4667 = !DILocation(line: 1804, column: 47, scope: !4663)
!4668 = !DILocation(line: 1804, column: 51, scope: !4663)
!4669 = !DILocation(line: 1804, column: 60, scope: !4663)
!4670 = !DILocation(line: 1804, column: 6, scope: !4454)
!4671 = !DILocation(line: 1805, column: 3, scope: !4663)
!4672 = !DILocation(line: 1805, column: 23, scope: !4663)
!4673 = !DILocation(line: 1805, column: 32, scope: !4663)
!4674 = !DILocation(line: 1807, column: 21, scope: !4454)
!4675 = !DILocation(line: 1807, column: 2, scope: !4454)
!4676 = !DILocation(line: 1807, column: 11, scope: !4454)
!4677 = !DILocation(line: 1807, column: 19, scope: !4454)
!4678 = !DILocation(line: 1809, column: 19, scope: !4454)
!4679 = !DILocation(line: 1809, column: 2, scope: !4454)
!4680 = !DILocation(line: 1809, column: 11, scope: !4454)
!4681 = !DILocation(line: 1809, column: 17, scope: !4454)
!4682 = !DILocation(line: 1810, column: 26, scope: !4454)
!4683 = !DILocation(line: 1810, column: 2, scope: !4454)
!4684 = !DILocation(line: 1810, column: 11, scope: !4454)
!4685 = !DILocation(line: 1810, column: 24, scope: !4454)
!4686 = !DILocation(line: 1811, column: 21, scope: !4454)
!4687 = !DILocation(line: 1811, column: 2, scope: !4454)
!4688 = !DILocation(line: 1811, column: 11, scope: !4454)
!4689 = !DILocation(line: 1811, column: 19, scope: !4454)
!4690 = !DILocation(line: 1813, column: 9, scope: !4454)
!4691 = !DILocation(line: 1813, column: 2, scope: !4454)
!4692 = !DILocation(line: 1814, column: 1, scope: !4454)
!4693 = distinct !DISubprogram(name: "gpu_vbo_enabled", scope: !3, file: !3, line: 1456, type: !4694, scopeLine: 1457, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1345)
!4694 = !DISubroutineType(types: !4695)
!4695 = !{!171}
!4696 = !DILocation(line: 1458, column: 10, scope: !4693)
!4697 = !DILocation(line: 1458, column: 40, scope: !4693)
!4698 = !DILocation(line: 1459, column: 14, scope: !4693)
!4699 = !DILocation(line: 1459, column: 12, scope: !4693)
!4700 = !DILocation(line: 1459, column: 24, scope: !4693)
!4701 = !DILocation(line: 1459, column: 10, scope: !4693)
!4702 = !DILocation(line: 0, scope: !4693)
!4703 = !DILocation(line: 1458, column: 2, scope: !4693)
!4704 = distinct !DISubprogram(name: "GPU_update_grid_pbvh_buffers", scope: !3, file: !3, line: 1816, type: !4705, scopeLine: 1819, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1345)
!4705 = !DISubroutineType(types: !4706)
!4706 = !{null, !3944, !3960, !3962, !170, !171, !4707, !166}
!4707 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4708, size: 64)
!4708 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3958)
!4709 = !DILocalVariable(name: "buffers", arg: 1, scope: !4704, file: !3, line: 1816, type: !3944)
!4710 = !DILocation(line: 1816, column: 53, scope: !4704)
!4711 = !DILocalVariable(name: "grids", arg: 2, scope: !4704, file: !3, line: 1816, type: !3960)
!4712 = !DILocation(line: 1816, column: 72, scope: !4704)
!4713 = !DILocalVariable(name: "grid_flag_mats", arg: 3, scope: !4704, file: !3, line: 1817, type: !3962)
!4714 = !DILocation(line: 1817, column: 47, scope: !4704)
!4715 = !DILocalVariable(name: "grid_indices", arg: 4, scope: !4704, file: !3, line: 1817, type: !170)
!4716 = !DILocation(line: 1817, column: 68, scope: !4704)
!4717 = !DILocalVariable(name: "totgrid", arg: 5, scope: !4704, file: !3, line: 1818, type: !171)
!4718 = !DILocation(line: 1818, column: 34, scope: !4704)
!4719 = !DILocalVariable(name: "key", arg: 6, scope: !4704, file: !3, line: 1818, type: !4707)
!4720 = !DILocation(line: 1818, column: 57, scope: !4704)
!4721 = !DILocalVariable(name: "show_diffuse_color", arg: 7, scope: !4704, file: !3, line: 1818, type: !166)
!4722 = !DILocation(line: 1818, column: 67, scope: !4704)
!4723 = !DILocalVariable(name: "vert_data", scope: !4704, file: !3, line: 1820, type: !3996)
!4724 = !DILocation(line: 1820, column: 22, scope: !4704)
!4725 = !DILocalVariable(name: "i", scope: !4704, file: !3, line: 1821, type: !171)
!4726 = !DILocation(line: 1821, column: 6, scope: !4704)
!4727 = !DILocalVariable(name: "j", scope: !4704, file: !3, line: 1821, type: !171)
!4728 = !DILocation(line: 1821, column: 9, scope: !4704)
!4729 = !DILocalVariable(name: "k", scope: !4704, file: !3, line: 1821, type: !171)
!4730 = !DILocation(line: 1821, column: 12, scope: !4704)
!4731 = !DILocalVariable(name: "x", scope: !4704, file: !3, line: 1821, type: !171)
!4732 = !DILocation(line: 1821, column: 15, scope: !4704)
!4733 = !DILocalVariable(name: "y", scope: !4704, file: !3, line: 1821, type: !171)
!4734 = !DILocation(line: 1821, column: 18, scope: !4704)
!4735 = !DILocation(line: 1823, column: 32, scope: !4704)
!4736 = !DILocation(line: 1823, column: 2, scope: !4704)
!4737 = !DILocation(line: 1823, column: 11, scope: !4704)
!4738 = !DILocation(line: 1823, column: 30, scope: !4704)
!4739 = !DILocation(line: 1824, column: 25, scope: !4704)
!4740 = !DILocation(line: 1824, column: 2, scope: !4704)
!4741 = !DILocation(line: 1824, column: 11, scope: !4704)
!4742 = !DILocation(line: 1824, column: 23, scope: !4704)
!4743 = !DILocation(line: 1827, column: 6, scope: !4744)
!4744 = distinct !DILexicalBlock(scope: !4704, file: !3, line: 1827, column: 6)
!4745 = !DILocation(line: 1827, column: 15, scope: !4744)
!4746 = !DILocation(line: 1827, column: 6, scope: !4704)
!4747 = !DILocalVariable(name: "totvert", scope: !4748, file: !3, line: 1828, type: !171)
!4748 = distinct !DILexicalBlock(scope: !4744, file: !3, line: 1827, column: 25)
!4749 = !DILocation(line: 1828, column: 7, scope: !4748)
!4750 = !DILocation(line: 1828, column: 17, scope: !4748)
!4751 = !DILocation(line: 1828, column: 22, scope: !4748)
!4752 = !DILocation(line: 1828, column: 34, scope: !4748)
!4753 = !DILocation(line: 1828, column: 32, scope: !4748)
!4754 = !DILocalVariable(name: "smooth", scope: !4748, file: !3, line: 1829, type: !171)
!4755 = !DILocation(line: 1829, column: 7, scope: !4748)
!4756 = !DILocation(line: 1829, column: 16, scope: !4748)
!4757 = !DILocation(line: 1829, column: 31, scope: !4748)
!4758 = !DILocation(line: 1829, column: 48, scope: !4748)
!4759 = !DILocation(line: 1829, column: 53, scope: !4748)
!4760 = !DILocalVariable(name: "has_mask", scope: !4748, file: !3, line: 1830, type: !2281)
!4761 = !DILocation(line: 1830, column: 13, scope: !4748)
!4762 = !DILocation(line: 1830, column: 24, scope: !4748)
!4763 = !DILocation(line: 1830, column: 29, scope: !4748)
!4764 = !DILocalVariable(name: "diffuse_color", scope: !4748, file: !3, line: 1831, type: !508)
!4765 = !DILocation(line: 1831, column: 9, scope: !4748)
!4766 = !DILocation(line: 1833, column: 7, scope: !4767)
!4767 = distinct !DILexicalBlock(scope: !4748, file: !3, line: 1833, column: 7)
!4768 = !DILocation(line: 1833, column: 16, scope: !4767)
!4769 = !DILocation(line: 1833, column: 7, scope: !4748)
!4770 = !DILocation(line: 1834, column: 42, scope: !4767)
!4771 = !DILocation(line: 1834, column: 59, scope: !4767)
!4772 = !DILocation(line: 1834, column: 23, scope: !4767)
!4773 = !DILocation(line: 1834, column: 40, scope: !4767)
!4774 = !DILocation(line: 1834, column: 4, scope: !4767)
!4775 = !DILocation(line: 1834, column: 21, scope: !4767)
!4776 = !DILocation(line: 1835, column: 12, scope: !4777)
!4777 = distinct !DILexicalBlock(scope: !4767, file: !3, line: 1835, column: 12)
!4778 = !DILocation(line: 1835, column: 12, scope: !4767)
!4779 = !DILocalVariable(name: "flags", scope: !4780, file: !3, line: 1836, type: !3962)
!4780 = distinct !DILexicalBlock(scope: !4777, file: !3, line: 1835, column: 32)
!4781 = !DILocation(line: 1836, column: 21, scope: !4780)
!4782 = !DILocation(line: 1836, column: 30, scope: !4780)
!4783 = !DILocation(line: 1836, column: 45, scope: !4780)
!4784 = !DILocation(line: 1838, column: 29, scope: !4780)
!4785 = !DILocation(line: 1838, column: 36, scope: !4780)
!4786 = !DILocation(line: 1838, column: 43, scope: !4780)
!4787 = !DILocation(line: 1838, column: 48, scope: !4780)
!4788 = !DILocation(line: 1838, column: 4, scope: !4780)
!4789 = !DILocation(line: 1839, column: 3, scope: !4780)
!4790 = !DILocation(line: 1841, column: 14, scope: !4748)
!4791 = !DILocation(line: 1841, column: 23, scope: !4748)
!4792 = !DILocation(line: 1841, column: 38, scope: !4748)
!4793 = !DILocation(line: 1841, column: 3, scope: !4748)
!4794 = !DILocation(line: 1843, column: 3, scope: !4748)
!4795 = !DILocation(line: 1843, column: 40, scope: !4748)
!4796 = !DILocation(line: 1843, column: 49, scope: !4748)
!4797 = !DILocation(line: 1844, column: 3, scope: !4748)
!4798 = !DILocation(line: 1845, column: 48, scope: !4748)
!4799 = !DILocation(line: 1845, column: 46, scope: !4748)
!4800 = !DILocation(line: 1847, column: 15, scope: !4748)
!4801 = !DILocation(line: 1847, column: 13, scope: !4748)
!4802 = !DILocation(line: 1848, column: 7, scope: !4803)
!4803 = distinct !DILexicalBlock(scope: !4748, file: !3, line: 1848, column: 7)
!4804 = !DILocation(line: 1848, column: 7, scope: !4748)
!4805 = !DILocation(line: 1849, column: 11, scope: !4806)
!4806 = distinct !DILexicalBlock(scope: !4807, file: !3, line: 1849, column: 4)
!4807 = distinct !DILexicalBlock(scope: !4803, file: !3, line: 1848, column: 18)
!4808 = !DILocation(line: 1849, column: 9, scope: !4806)
!4809 = !DILocation(line: 1849, column: 16, scope: !4810)
!4810 = distinct !DILexicalBlock(scope: !4806, file: !3, line: 1849, column: 4)
!4811 = !DILocation(line: 1849, column: 20, scope: !4810)
!4812 = !DILocation(line: 1849, column: 18, scope: !4810)
!4813 = !DILocation(line: 1849, column: 4, scope: !4806)
!4814 = !DILocalVariable(name: "vd", scope: !4815, file: !3, line: 1850, type: !3996)
!4815 = distinct !DILexicalBlock(scope: !4810, file: !3, line: 1849, column: 34)
!4816 = !DILocation(line: 1850, column: 25, scope: !4815)
!4817 = !DILocation(line: 1850, column: 30, scope: !4815)
!4818 = !DILocalVariable(name: "grid", scope: !4815, file: !3, line: 1851, type: !180)
!4819 = !DILocation(line: 1851, column: 14, scope: !4815)
!4820 = !DILocation(line: 1851, column: 21, scope: !4815)
!4821 = !DILocation(line: 1851, column: 27, scope: !4815)
!4822 = !DILocation(line: 1851, column: 40, scope: !4815)
!4823 = !DILocation(line: 1853, column: 12, scope: !4824)
!4824 = distinct !DILexicalBlock(scope: !4815, file: !3, line: 1853, column: 5)
!4825 = !DILocation(line: 1853, column: 10, scope: !4824)
!4826 = !DILocation(line: 1853, column: 17, scope: !4827)
!4827 = distinct !DILexicalBlock(scope: !4824, file: !3, line: 1853, column: 5)
!4828 = !DILocation(line: 1853, column: 21, scope: !4827)
!4829 = !DILocation(line: 1853, column: 26, scope: !4827)
!4830 = !DILocation(line: 1853, column: 19, scope: !4827)
!4831 = !DILocation(line: 1853, column: 5, scope: !4824)
!4832 = !DILocation(line: 1854, column: 13, scope: !4833)
!4833 = distinct !DILexicalBlock(scope: !4834, file: !3, line: 1854, column: 6)
!4834 = distinct !DILexicalBlock(scope: !4827, file: !3, line: 1853, column: 42)
!4835 = !DILocation(line: 1854, column: 11, scope: !4833)
!4836 = !DILocation(line: 1854, column: 18, scope: !4837)
!4837 = distinct !DILexicalBlock(scope: !4833, file: !3, line: 1854, column: 6)
!4838 = !DILocation(line: 1854, column: 22, scope: !4837)
!4839 = !DILocation(line: 1854, column: 27, scope: !4837)
!4840 = !DILocation(line: 1854, column: 20, scope: !4837)
!4841 = !DILocation(line: 1854, column: 6, scope: !4833)
!4842 = !DILocalVariable(name: "elem", scope: !4843, file: !3, line: 1855, type: !180)
!4843 = distinct !DILexicalBlock(scope: !4837, file: !3, line: 1854, column: 43)
!4844 = !DILocation(line: 1855, column: 16, scope: !4843)
!4845 = !DILocation(line: 1855, column: 37, scope: !4843)
!4846 = !DILocation(line: 1855, column: 42, scope: !4843)
!4847 = !DILocation(line: 1855, column: 48, scope: !4843)
!4848 = !DILocation(line: 1855, column: 51, scope: !4843)
!4849 = !DILocation(line: 1855, column: 23, scope: !4843)
!4850 = !DILocation(line: 1857, column: 18, scope: !4843)
!4851 = !DILocation(line: 1857, column: 22, scope: !4843)
!4852 = !DILocation(line: 1857, column: 38, scope: !4843)
!4853 = !DILocation(line: 1857, column: 43, scope: !4843)
!4854 = !DILocation(line: 1857, column: 26, scope: !4843)
!4855 = !DILocation(line: 1857, column: 7, scope: !4843)
!4856 = !DILocation(line: 1858, column: 11, scope: !4857)
!4857 = distinct !DILexicalBlock(scope: !4843, file: !3, line: 1858, column: 11)
!4858 = !DILocation(line: 1858, column: 11, scope: !4843)
!4859 = !DILocation(line: 1859, column: 33, scope: !4860)
!4860 = distinct !DILexicalBlock(scope: !4857, file: !3, line: 1858, column: 19)
!4861 = !DILocation(line: 1859, column: 37, scope: !4860)
!4862 = !DILocation(line: 1859, column: 53, scope: !4860)
!4863 = !DILocation(line: 1859, column: 58, scope: !4860)
!4864 = !DILocation(line: 1859, column: 41, scope: !4860)
!4865 = !DILocation(line: 1859, column: 8, scope: !4860)
!4866 = !DILocation(line: 1861, column: 12, scope: !4867)
!4867 = distinct !DILexicalBlock(scope: !4860, file: !3, line: 1861, column: 12)
!4868 = !DILocation(line: 1861, column: 12, scope: !4860)
!4869 = !DILocation(line: 1862, column: 49, scope: !4870)
!4870 = distinct !DILexicalBlock(scope: !4867, file: !3, line: 1861, column: 22)
!4871 = !DILocation(line: 1862, column: 54, scope: !4870)
!4872 = !DILocation(line: 1862, column: 35, scope: !4870)
!4873 = !DILocation(line: 1862, column: 34, scope: !4870)
!4874 = !DILocation(line: 1863, column: 34, scope: !4870)
!4875 = !DILocation(line: 1863, column: 49, scope: !4870)
!4876 = !DILocation(line: 1863, column: 53, scope: !4870)
!4877 = !DILocation(line: 1862, column: 9, scope: !4870)
!4878 = !DILocation(line: 1864, column: 8, scope: !4870)
!4879 = !DILocation(line: 1865, column: 7, scope: !4860)
!4880 = !DILocation(line: 1866, column: 9, scope: !4843)
!4881 = !DILocation(line: 1867, column: 6, scope: !4843)
!4882 = !DILocation(line: 1854, column: 39, scope: !4837)
!4883 = !DILocation(line: 1854, column: 6, scope: !4837)
!4884 = distinct !{!4884, !4841, !4885}
!4885 = !DILocation(line: 1867, column: 6, scope: !4833)
!4886 = !DILocation(line: 1868, column: 5, scope: !4834)
!4887 = !DILocation(line: 1853, column: 38, scope: !4827)
!4888 = !DILocation(line: 1853, column: 5, scope: !4827)
!4889 = distinct !{!4889, !4831, !4890}
!4890 = !DILocation(line: 1868, column: 5, scope: !4824)
!4891 = !DILocation(line: 1870, column: 10, scope: !4892)
!4892 = distinct !DILexicalBlock(scope: !4815, file: !3, line: 1870, column: 9)
!4893 = !DILocation(line: 1870, column: 9, scope: !4815)
!4894 = !DILocation(line: 1874, column: 13, scope: !4895)
!4895 = distinct !DILexicalBlock(scope: !4896, file: !3, line: 1874, column: 6)
!4896 = distinct !DILexicalBlock(scope: !4892, file: !3, line: 1870, column: 18)
!4897 = !DILocation(line: 1874, column: 11, scope: !4895)
!4898 = !DILocation(line: 1874, column: 18, scope: !4899)
!4899 = distinct !DILexicalBlock(scope: !4895, file: !3, line: 1874, column: 6)
!4900 = !DILocation(line: 1874, column: 22, scope: !4899)
!4901 = !DILocation(line: 1874, column: 27, scope: !4899)
!4902 = !DILocation(line: 1874, column: 37, scope: !4899)
!4903 = !DILocation(line: 1874, column: 20, scope: !4899)
!4904 = !DILocation(line: 1874, column: 6, scope: !4895)
!4905 = !DILocation(line: 1875, column: 14, scope: !4906)
!4906 = distinct !DILexicalBlock(scope: !4907, file: !3, line: 1875, column: 7)
!4907 = distinct !DILexicalBlock(scope: !4899, file: !3, line: 1874, column: 47)
!4908 = !DILocation(line: 1875, column: 12, scope: !4906)
!4909 = !DILocation(line: 1875, column: 19, scope: !4910)
!4910 = distinct !DILexicalBlock(scope: !4906, file: !3, line: 1875, column: 7)
!4911 = !DILocation(line: 1875, column: 23, scope: !4910)
!4912 = !DILocation(line: 1875, column: 28, scope: !4910)
!4913 = !DILocation(line: 1875, column: 38, scope: !4910)
!4914 = !DILocation(line: 1875, column: 21, scope: !4910)
!4915 = !DILocation(line: 1875, column: 7, scope: !4906)
!4916 = !DILocalVariable(name: "elems", scope: !4917, file: !3, line: 1876, type: !4918)
!4917 = distinct !DILexicalBlock(scope: !4910, file: !3, line: 1875, column: 48)
!4918 = !DICompositeType(tag: DW_TAG_array_type, baseType: !180, size: 256, elements: !509)
!4919 = !DILocation(line: 1876, column: 17, scope: !4917)
!4920 = !DILocation(line: 1876, column: 28, scope: !4917)
!4921 = !DILocation(line: 1877, column: 23, scope: !4917)
!4922 = !DILocation(line: 1877, column: 28, scope: !4917)
!4923 = !DILocation(line: 1877, column: 34, scope: !4917)
!4924 = !DILocation(line: 1877, column: 37, scope: !4917)
!4925 = !DILocation(line: 1877, column: 39, scope: !4917)
!4926 = !DILocation(line: 1877, column: 9, scope: !4917)
!4927 = !DILocation(line: 1878, column: 23, scope: !4917)
!4928 = !DILocation(line: 1878, column: 28, scope: !4917)
!4929 = !DILocation(line: 1878, column: 34, scope: !4917)
!4930 = !DILocation(line: 1878, column: 36, scope: !4917)
!4931 = !DILocation(line: 1878, column: 41, scope: !4917)
!4932 = !DILocation(line: 1878, column: 43, scope: !4917)
!4933 = !DILocation(line: 1878, column: 9, scope: !4917)
!4934 = !DILocation(line: 1879, column: 23, scope: !4917)
!4935 = !DILocation(line: 1879, column: 28, scope: !4917)
!4936 = !DILocation(line: 1879, column: 34, scope: !4917)
!4937 = !DILocation(line: 1879, column: 36, scope: !4917)
!4938 = !DILocation(line: 1879, column: 41, scope: !4917)
!4939 = !DILocation(line: 1879, column: 9, scope: !4917)
!4940 = !DILocation(line: 1880, column: 23, scope: !4917)
!4941 = !DILocation(line: 1880, column: 28, scope: !4917)
!4942 = !DILocation(line: 1880, column: 34, scope: !4917)
!4943 = !DILocation(line: 1880, column: 37, scope: !4917)
!4944 = !DILocation(line: 1880, column: 9, scope: !4917)
!4945 = !DILocalVariable(name: "fno", scope: !4917, file: !3, line: 1882, type: !426)
!4946 = !DILocation(line: 1882, column: 14, scope: !4917)
!4947 = !DILocation(line: 1884, column: 23, scope: !4917)
!4948 = !DILocation(line: 1885, column: 35, scope: !4917)
!4949 = !DILocation(line: 1885, column: 40, scope: !4917)
!4950 = !DILocation(line: 1885, column: 23, scope: !4917)
!4951 = !DILocation(line: 1886, column: 35, scope: !4917)
!4952 = !DILocation(line: 1886, column: 40, scope: !4917)
!4953 = !DILocation(line: 1886, column: 23, scope: !4917)
!4954 = !DILocation(line: 1887, column: 35, scope: !4917)
!4955 = !DILocation(line: 1887, column: 40, scope: !4917)
!4956 = !DILocation(line: 1887, column: 23, scope: !4917)
!4957 = !DILocation(line: 1888, column: 35, scope: !4917)
!4958 = !DILocation(line: 1888, column: 40, scope: !4917)
!4959 = !DILocation(line: 1888, column: 23, scope: !4917)
!4960 = !DILocation(line: 1884, column: 8, scope: !4917)
!4961 = !DILocation(line: 1890, column: 13, scope: !4917)
!4962 = !DILocation(line: 1890, column: 26, scope: !4917)
!4963 = !DILocation(line: 1890, column: 28, scope: !4917)
!4964 = !DILocation(line: 1890, column: 35, scope: !4917)
!4965 = !DILocation(line: 1890, column: 40, scope: !4917)
!4966 = !DILocation(line: 1890, column: 33, scope: !4917)
!4967 = !DILocation(line: 1890, column: 23, scope: !4917)
!4968 = !DILocation(line: 1890, column: 52, scope: !4917)
!4969 = !DILocation(line: 1890, column: 50, scope: !4917)
!4970 = !DILocation(line: 1890, column: 11, scope: !4917)
!4971 = !DILocation(line: 1891, column: 33, scope: !4917)
!4972 = !DILocation(line: 1891, column: 37, scope: !4917)
!4973 = !DILocation(line: 1891, column: 41, scope: !4917)
!4974 = !DILocation(line: 1891, column: 8, scope: !4917)
!4975 = !DILocation(line: 1893, column: 12, scope: !4976)
!4976 = distinct !DILexicalBlock(scope: !4917, file: !3, line: 1893, column: 12)
!4977 = !DILocation(line: 1893, column: 12, scope: !4917)
!4978 = !DILocation(line: 1894, column: 39, scope: !4979)
!4979 = distinct !DILexicalBlock(scope: !4976, file: !3, line: 1893, column: 22)
!4980 = !DILocation(line: 1895, column: 39, scope: !4979)
!4981 = !DILocation(line: 1896, column: 39, scope: !4979)
!4982 = !DILocation(line: 1897, column: 39, scope: !4979)
!4983 = !DILocation(line: 1898, column: 39, scope: !4979)
!4984 = !DILocation(line: 1899, column: 39, scope: !4979)
!4985 = !DILocation(line: 1900, column: 39, scope: !4979)
!4986 = !DILocation(line: 1900, column: 43, scope: !4979)
!4987 = !DILocation(line: 1894, column: 9, scope: !4979)
!4988 = !DILocation(line: 1901, column: 8, scope: !4979)
!4989 = !DILocation(line: 1902, column: 7, scope: !4917)
!4990 = !DILocation(line: 1875, column: 44, scope: !4910)
!4991 = !DILocation(line: 1875, column: 7, scope: !4910)
!4992 = distinct !{!4992, !4915, !4993}
!4993 = !DILocation(line: 1902, column: 7, scope: !4906)
!4994 = !DILocation(line: 1903, column: 6, scope: !4907)
!4995 = !DILocation(line: 1874, column: 43, scope: !4899)
!4996 = !DILocation(line: 1874, column: 6, scope: !4899)
!4997 = distinct !{!4997, !4904, !4998}
!4998 = !DILocation(line: 1903, column: 6, scope: !4895)
!4999 = !DILocation(line: 1904, column: 5, scope: !4896)
!5000 = !DILocation(line: 1906, column: 18, scope: !4815)
!5001 = !DILocation(line: 1906, column: 23, scope: !4815)
!5002 = !DILocation(line: 1906, column: 15, scope: !4815)
!5003 = !DILocation(line: 1907, column: 4, scope: !4815)
!5004 = !DILocation(line: 1849, column: 29, scope: !4810)
!5005 = !DILocation(line: 1849, column: 4, scope: !4810)
!5006 = distinct !{!5006, !4813, !5007}
!5007 = !DILocation(line: 1907, column: 4, scope: !4806)
!5008 = !DILocation(line: 1908, column: 4, scope: !4807)
!5009 = !DILocation(line: 1909, column: 3, scope: !4807)
!5010 = !DILocation(line: 1911, column: 4, scope: !5011)
!5011 = distinct !DILexicalBlock(scope: !4803, file: !3, line: 1910, column: 8)
!5012 = !DILocation(line: 1911, column: 27, scope: !5011)
!5013 = !DILocation(line: 1911, column: 36, scope: !5011)
!5014 = !DILocation(line: 1912, column: 4, scope: !5011)
!5015 = !DILocation(line: 1912, column: 13, scope: !5011)
!5016 = !DILocation(line: 1912, column: 22, scope: !5011)
!5017 = !DILocation(line: 1914, column: 3, scope: !4748)
!5018 = !DILocation(line: 1915, column: 2, scope: !4748)
!5019 = !DILocation(line: 1917, column: 19, scope: !4704)
!5020 = !DILocation(line: 1917, column: 2, scope: !4704)
!5021 = !DILocation(line: 1917, column: 11, scope: !4704)
!5022 = !DILocation(line: 1917, column: 17, scope: !4704)
!5023 = !DILocation(line: 1918, column: 26, scope: !4704)
!5024 = !DILocation(line: 1918, column: 2, scope: !4704)
!5025 = !DILocation(line: 1918, column: 11, scope: !4704)
!5026 = !DILocation(line: 1918, column: 24, scope: !4704)
!5027 = !DILocation(line: 1919, column: 21, scope: !4704)
!5028 = !DILocation(line: 1919, column: 2, scope: !4704)
!5029 = !DILocation(line: 1919, column: 11, scope: !4704)
!5030 = !DILocation(line: 1919, column: 19, scope: !4704)
!5031 = !DILocation(line: 1920, column: 28, scope: !4704)
!5032 = !DILocation(line: 1920, column: 2, scope: !4704)
!5033 = !DILocation(line: 1920, column: 11, scope: !4704)
!5034 = !DILocation(line: 1920, column: 26, scope: !4704)
!5035 = !DILocation(line: 1921, column: 2, scope: !4704)
!5036 = !DILocation(line: 1921, column: 11, scope: !4704)
!5037 = !DILocation(line: 1921, column: 22, scope: !4704)
!5038 = !DILocation(line: 1921, column: 21, scope: !4704)
!5039 = !DILocation(line: 1923, column: 20, scope: !4704)
!5040 = !DILocation(line: 1923, column: 35, scope: !4704)
!5041 = !DILocation(line: 1923, column: 52, scope: !4704)
!5042 = !DILocation(line: 1923, column: 57, scope: !4704)
!5043 = !DILocation(line: 1923, column: 2, scope: !4704)
!5044 = !DILocation(line: 1923, column: 11, scope: !4704)
!5045 = !DILocation(line: 1923, column: 18, scope: !4704)
!5046 = !DILocation(line: 1926, column: 1, scope: !4704)
!5047 = distinct !DISubprogram(name: "CCG_grid_elem", scope: !182, file: !182, line: 131, type: !5048, scopeLine: 132, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1345)
!5048 = !DISubroutineType(types: !5049)
!5049 = !{!180, !4707, !180, !171, !171}
!5050 = !DILocalVariable(name: "key", arg: 1, scope: !5047, file: !182, line: 131, type: !4707)
!5051 = !DILocation(line: 131, column: 49, scope: !5047)
!5052 = !DILocalVariable(name: "elem", arg: 2, scope: !5047, file: !182, line: 131, type: !180)
!5053 = !DILocation(line: 131, column: 63, scope: !5047)
!5054 = !DILocalVariable(name: "x", arg: 3, scope: !5047, file: !182, line: 131, type: !171)
!5055 = !DILocation(line: 131, column: 73, scope: !5047)
!5056 = !DILocalVariable(name: "y", arg: 4, scope: !5047, file: !182, line: 131, type: !171)
!5057 = !DILocation(line: 131, column: 80, scope: !5047)
!5058 = !DILocation(line: 134, column: 25, scope: !5047)
!5059 = !DILocation(line: 134, column: 30, scope: !5047)
!5060 = !DILocation(line: 134, column: 37, scope: !5047)
!5061 = !DILocation(line: 134, column: 41, scope: !5047)
!5062 = !DILocation(line: 134, column: 46, scope: !5047)
!5063 = !DILocation(line: 134, column: 39, scope: !5047)
!5064 = !DILocation(line: 134, column: 58, scope: !5047)
!5065 = !DILocation(line: 134, column: 56, scope: !5047)
!5066 = !DILocation(line: 134, column: 9, scope: !5047)
!5067 = !DILocation(line: 134, column: 2, scope: !5047)
!5068 = distinct !DISubprogram(name: "CCG_elem_co", scope: !182, file: !182, line: 109, type: !5069, scopeLine: 110, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1345)
!5069 = !DISubroutineType(types: !5070)
!5070 = !{!175, !4707, !180}
!5071 = !DILocalVariable(name: "UNUSED_key", arg: 1, scope: !5068, file: !182, line: 109, type: !4707)
!5072 = !DILocation(line: 109, column: 45, scope: !5068)
!5073 = !DILocalVariable(name: "elem", arg: 2, scope: !5068, file: !182, line: 109, type: !180)
!5074 = !DILocation(line: 109, column: 67, scope: !5068)
!5075 = !DILocation(line: 111, column: 18, scope: !5068)
!5076 = !DILocation(line: 111, column: 9, scope: !5068)
!5077 = !DILocation(line: 111, column: 2, scope: !5068)
!5078 = distinct !DISubprogram(name: "CCG_elem_no", scope: !182, file: !182, line: 114, type: !5069, scopeLine: 115, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1345)
!5079 = !DILocalVariable(name: "key", arg: 1, scope: !5078, file: !182, line: 114, type: !4707)
!5080 = !DILocation(line: 114, column: 45, scope: !5078)
!5081 = !DILocalVariable(name: "elem", arg: 2, scope: !5078, file: !182, line: 114, type: !180)
!5082 = !DILocation(line: 114, column: 59, scope: !5078)
!5083 = !DILocation(line: 117, column: 27, scope: !5078)
!5084 = !DILocation(line: 117, column: 19, scope: !5078)
!5085 = !DILocation(line: 117, column: 34, scope: !5078)
!5086 = !DILocation(line: 117, column: 39, scope: !5078)
!5087 = !DILocation(line: 117, column: 32, scope: !5078)
!5088 = !DILocation(line: 117, column: 9, scope: !5078)
!5089 = !DILocation(line: 117, column: 2, scope: !5078)
!5090 = distinct !DISubprogram(name: "CCG_elem_mask", scope: !182, file: !182, line: 120, type: !5069, scopeLine: 121, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1345)
!5091 = !DILocalVariable(name: "key", arg: 1, scope: !5090, file: !182, line: 120, type: !4707)
!5092 = !DILocation(line: 120, column: 47, scope: !5090)
!5093 = !DILocalVariable(name: "elem", arg: 2, scope: !5090, file: !182, line: 120, type: !180)
!5094 = !DILocation(line: 120, column: 61, scope: !5090)
!5095 = !DILocation(line: 123, column: 27, scope: !5090)
!5096 = !DILocation(line: 123, column: 19, scope: !5090)
!5097 = !DILocation(line: 123, column: 35, scope: !5090)
!5098 = !DILocation(line: 123, column: 40, scope: !5090)
!5099 = !DILocation(line: 123, column: 32, scope: !5090)
!5100 = !DILocation(line: 123, column: 9, scope: !5090)
!5101 = !DILocation(line: 123, column: 2, scope: !5090)
!5102 = distinct !DISubprogram(name: "gpu_color_from_mask_quad_copy", scope: !3, file: !3, line: 1560, type: !5103, scopeLine: 1565, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1345)
!5103 = !DISubroutineType(types: !5104)
!5104 = !{null, !4707, !180, !180, !180, !180, !1177, !177}
!5105 = !DILocalVariable(name: "key", arg: 1, scope: !5102, file: !3, line: 1560, type: !4707)
!5106 = !DILocation(line: 1560, column: 57, scope: !5102)
!5107 = !DILocalVariable(name: "a", arg: 2, scope: !5102, file: !3, line: 1561, type: !180)
!5108 = !DILocation(line: 1561, column: 52, scope: !5102)
!5109 = !DILocalVariable(name: "b", arg: 3, scope: !5102, file: !3, line: 1561, type: !180)
!5110 = !DILocation(line: 1561, column: 64, scope: !5102)
!5111 = !DILocalVariable(name: "c", arg: 4, scope: !5102, file: !3, line: 1562, type: !180)
!5112 = !DILocation(line: 1562, column: 52, scope: !5102)
!5113 = !DILocalVariable(name: "d", arg: 5, scope: !5102, file: !3, line: 1562, type: !180)
!5114 = !DILocation(line: 1562, column: 64, scope: !5102)
!5115 = !DILocalVariable(name: "diffuse_color", arg: 6, scope: !5102, file: !3, line: 1563, type: !1177)
!5116 = !DILocation(line: 1563, column: 56, scope: !5102)
!5117 = !DILocalVariable(name: "out", arg: 7, scope: !5102, file: !3, line: 1564, type: !177)
!5118 = !DILocation(line: 1564, column: 57, scope: !5102)
!5119 = !DILocalVariable(name: "mask_color", scope: !5102, file: !3, line: 1566, type: !176)
!5120 = !DILocation(line: 1566, column: 8, scope: !5102)
!5121 = !DILocation(line: 1567, column: 42, scope: !5102)
!5122 = !DILocation(line: 1567, column: 47, scope: !5102)
!5123 = !DILocation(line: 1567, column: 28, scope: !5102)
!5124 = !DILocation(line: 1567, column: 27, scope: !5102)
!5125 = !DILocation(line: 1568, column: 42, scope: !5102)
!5126 = !DILocation(line: 1568, column: 47, scope: !5102)
!5127 = !DILocation(line: 1568, column: 28, scope: !5102)
!5128 = !DILocation(line: 1568, column: 27, scope: !5102)
!5129 = !DILocation(line: 1567, column: 50, scope: !5102)
!5130 = !DILocation(line: 1569, column: 42, scope: !5102)
!5131 = !DILocation(line: 1569, column: 47, scope: !5102)
!5132 = !DILocation(line: 1569, column: 28, scope: !5102)
!5133 = !DILocation(line: 1569, column: 27, scope: !5102)
!5134 = !DILocation(line: 1568, column: 50, scope: !5102)
!5135 = !DILocation(line: 1570, column: 42, scope: !5102)
!5136 = !DILocation(line: 1570, column: 47, scope: !5102)
!5137 = !DILocation(line: 1570, column: 28, scope: !5102)
!5138 = !DILocation(line: 1570, column: 27, scope: !5102)
!5139 = !DILocation(line: 1569, column: 50, scope: !5102)
!5140 = !DILocation(line: 1570, column: 51, scope: !5102)
!5141 = !DILocation(line: 1567, column: 6, scope: !5102)
!5142 = !DILocation(line: 1570, column: 60, scope: !5102)
!5143 = !DILocation(line: 1572, column: 11, scope: !5102)
!5144 = !DILocation(line: 1572, column: 30, scope: !5102)
!5145 = !DILocation(line: 1572, column: 28, scope: !5102)
!5146 = !DILocation(line: 1572, column: 2, scope: !5102)
!5147 = !DILocation(line: 1572, column: 9, scope: !5102)
!5148 = !DILocation(line: 1573, column: 11, scope: !5102)
!5149 = !DILocation(line: 1573, column: 30, scope: !5102)
!5150 = !DILocation(line: 1573, column: 28, scope: !5102)
!5151 = !DILocation(line: 1573, column: 2, scope: !5102)
!5152 = !DILocation(line: 1573, column: 9, scope: !5102)
!5153 = !DILocation(line: 1574, column: 11, scope: !5102)
!5154 = !DILocation(line: 1574, column: 30, scope: !5102)
!5155 = !DILocation(line: 1574, column: 28, scope: !5102)
!5156 = !DILocation(line: 1574, column: 2, scope: !5102)
!5157 = !DILocation(line: 1574, column: 9, scope: !5102)
!5158 = !DILocation(line: 1575, column: 1, scope: !5102)
!5159 = distinct !DISubprogram(name: "GPU_build_grid_pbvh_buffers", scope: !3, file: !3, line: 2030, type: !5160, scopeLine: 2032, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1345)
!5160 = !DISubroutineType(types: !5161)
!5161 = !{!3944, !170, !171, !5162, !171}
!5162 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3967, size: 64)
!5163 = !DILocalVariable(name: "grid_indices", arg: 1, scope: !5159, file: !3, line: 2030, type: !170)
!5164 = !DILocation(line: 2030, column: 52, scope: !5159)
!5165 = !DILocalVariable(name: "totgrid", arg: 2, scope: !5159, file: !3, line: 2030, type: !171)
!5166 = !DILocation(line: 2030, column: 70, scope: !5159)
!5167 = !DILocalVariable(name: "grid_hidden", arg: 3, scope: !5159, file: !3, line: 2031, type: !5162)
!5168 = !DILocation(line: 2031, column: 27, scope: !5159)
!5169 = !DILocalVariable(name: "gridsize", arg: 4, scope: !5159, file: !3, line: 2031, type: !171)
!5170 = !DILocation(line: 2031, column: 44, scope: !5159)
!5171 = !DILocalVariable(name: "buffers", scope: !5159, file: !3, line: 2033, type: !3944)
!5172 = !DILocation(line: 2033, column: 20, scope: !5159)
!5173 = !DILocalVariable(name: "totquad", scope: !5159, file: !3, line: 2034, type: !171)
!5174 = !DILocation(line: 2034, column: 6, scope: !5159)
!5175 = !DILocalVariable(name: "fully_visible_totquad", scope: !5159, file: !3, line: 2035, type: !171)
!5176 = !DILocation(line: 2035, column: 6, scope: !5159)
!5177 = !DILocation(line: 2035, column: 31, scope: !5159)
!5178 = !DILocation(line: 2035, column: 40, scope: !5159)
!5179 = !DILocation(line: 2035, column: 48, scope: !5159)
!5180 = !DILocation(line: 2035, column: 57, scope: !5159)
!5181 = !DILocation(line: 2035, column: 45, scope: !5159)
!5182 = !DILocation(line: 2035, column: 64, scope: !5159)
!5183 = !DILocation(line: 2035, column: 62, scope: !5159)
!5184 = !DILocation(line: 2037, column: 12, scope: !5159)
!5185 = !DILocation(line: 2037, column: 10, scope: !5159)
!5186 = !DILocation(line: 2038, column: 25, scope: !5159)
!5187 = !DILocation(line: 2038, column: 2, scope: !5159)
!5188 = !DILocation(line: 2038, column: 11, scope: !5159)
!5189 = !DILocation(line: 2038, column: 23, scope: !5159)
!5190 = !DILocation(line: 2039, column: 21, scope: !5159)
!5191 = !DILocation(line: 2039, column: 2, scope: !5159)
!5192 = !DILocation(line: 2039, column: 11, scope: !5159)
!5193 = !DILocation(line: 2039, column: 19, scope: !5159)
!5194 = !DILocation(line: 2041, column: 2, scope: !5159)
!5195 = !DILocation(line: 2041, column: 11, scope: !5159)
!5196 = !DILocation(line: 2041, column: 30, scope: !5159)
!5197 = !DILocation(line: 2042, column: 2, scope: !5159)
!5198 = !DILocation(line: 2042, column: 11, scope: !5159)
!5199 = !DILocation(line: 2042, column: 23, scope: !5159)
!5200 = !DILocation(line: 2045, column: 38, scope: !5159)
!5201 = !DILocation(line: 2045, column: 51, scope: !5159)
!5202 = !DILocation(line: 2045, column: 65, scope: !5159)
!5203 = !DILocation(line: 2045, column: 74, scope: !5159)
!5204 = !DILocation(line: 2045, column: 12, scope: !5159)
!5205 = !DILocation(line: 2045, column: 10, scope: !5159)
!5206 = !DILocation(line: 2048, column: 6, scope: !5207)
!5207 = distinct !DILexicalBlock(scope: !5159, file: !3, line: 2048, column: 6)
!5208 = !DILocation(line: 2048, column: 14, scope: !5207)
!5209 = !DILocation(line: 2048, column: 6, scope: !5159)
!5210 = !DILocation(line: 2049, column: 10, scope: !5207)
!5211 = !DILocation(line: 2049, column: 3, scope: !5207)
!5212 = !DILocation(line: 2051, column: 6, scope: !5213)
!5213 = distinct !DILexicalBlock(scope: !5159, file: !3, line: 2051, column: 6)
!5214 = !DILocation(line: 2051, column: 17, scope: !5213)
!5215 = !DILocation(line: 2051, column: 14, scope: !5213)
!5216 = !DILocation(line: 2051, column: 6, scope: !5159)
!5217 = !DILocation(line: 2052, column: 44, scope: !5218)
!5218 = distinct !DILexicalBlock(scope: !5213, file: !3, line: 2051, column: 40)
!5219 = !DILocation(line: 2052, column: 55, scope: !5218)
!5220 = !DILocation(line: 2052, column: 64, scope: !5218)
!5221 = !DILocation(line: 2052, column: 77, scope: !5218)
!5222 = !DILocation(line: 2052, column: 86, scope: !5218)
!5223 = !DILocation(line: 2052, column: 24, scope: !5218)
!5224 = !DILocation(line: 2052, column: 3, scope: !5218)
!5225 = !DILocation(line: 2052, column: 12, scope: !5218)
!5226 = !DILocation(line: 2052, column: 22, scope: !5218)
!5227 = !DILocation(line: 2053, column: 3, scope: !5218)
!5228 = !DILocation(line: 2053, column: 12, scope: !5218)
!5229 = !DILocation(line: 2053, column: 23, scope: !5218)
!5230 = !DILocation(line: 2054, column: 2, scope: !5218)
!5231 = !DILocation(line: 2055, column: 11, scope: !5232)
!5232 = distinct !DILexicalBlock(scope: !5213, file: !3, line: 2055, column: 11)
!5233 = !DILocation(line: 2055, column: 41, scope: !5232)
!5234 = !DILocation(line: 2055, column: 48, scope: !5232)
!5235 = !DILocation(line: 2055, column: 46, scope: !5232)
!5236 = !DILocation(line: 2055, column: 58, scope: !5232)
!5237 = !DILocation(line: 2055, column: 11, scope: !5213)
!5238 = !DILocation(line: 2057, column: 3, scope: !5239)
!5239 = distinct !DILexicalBlock(scope: !5232, file: !3, line: 2055, column: 79)
!5240 = !DILocation(line: 2057, column: 23, scope: !5239)
!5241 = !DILocation(line: 2057, column: 32, scope: !5239)
!5242 = !DILocation(line: 2058, column: 7, scope: !5243)
!5243 = distinct !DILexicalBlock(scope: !5239, file: !3, line: 2058, column: 7)
!5244 = !DILocation(line: 2058, column: 16, scope: !5243)
!5245 = !DILocation(line: 2058, column: 7, scope: !5239)
!5246 = !DILocation(line: 2059, column: 24, scope: !5247)
!5247 = distinct !DILexicalBlock(scope: !5243, file: !3, line: 2058, column: 27)
!5248 = !DILocation(line: 2059, column: 4, scope: !5247)
!5249 = !DILocation(line: 2059, column: 13, scope: !5247)
!5250 = !DILocation(line: 2059, column: 22, scope: !5247)
!5251 = !DILocation(line: 2061, column: 4, scope: !5247)
!5252 = !DILocation(line: 2061, column: 49, scope: !5247)
!5253 = !DILocation(line: 2061, column: 58, scope: !5247)
!5254 = !DILocation(line: 2063, column: 8, scope: !5255)
!5255 = distinct !DILexicalBlock(scope: !5247, file: !3, line: 2063, column: 8)
!5256 = !DILocation(line: 2063, column: 18, scope: !5255)
!5257 = !DILocation(line: 2063, column: 16, scope: !5255)
!5258 = !DILocation(line: 2063, column: 29, scope: !5255)
!5259 = !DILocation(line: 2063, column: 27, scope: !5255)
!5260 = !DILocation(line: 2063, column: 38, scope: !5255)
!5261 = !DILocation(line: 2063, column: 8, scope: !5247)
!5262 = !DILocation(line: 2064, column: 5, scope: !5263)
!5263 = distinct !DILexicalBlock(scope: !5255, file: !3, line: 2063, column: 51)
!5264 = !DILocation(line: 2064, column: 14, scope: !5263)
!5265 = !DILocation(line: 2064, column: 25, scope: !5263)
!5266 = !DILocalVariable(name: "tri_data", scope: !5267, file: !3, line: 2065, type: !4470)
!5267 = distinct !DILexicalBlock(scope: !5263, file: !3, line: 2065, column: 5)
!5268 = !DILocation(line: 2065, column: 5, scope: !5267)
!5269 = !DILocalVariable(name: "offset", scope: !5267, file: !3, line: 2065, type: !171)
!5270 = !DILocalVariable(name: "i", scope: !5267, file: !3, line: 2065, type: !171)
!5271 = !DILocalVariable(name: "j", scope: !5267, file: !3, line: 2065, type: !171)
!5272 = !DILocalVariable(name: "k", scope: !5267, file: !3, line: 2065, type: !171)
!5273 = !DILocation(line: 2065, column: 5, scope: !5274)
!5274 = distinct !DILexicalBlock(scope: !5267, file: !3, line: 2065, column: 5)
!5275 = !DILocation(line: 2065, column: 5, scope: !5276)
!5276 = distinct !DILexicalBlock(scope: !5277, file: !3, line: 2065, column: 5)
!5277 = distinct !DILexicalBlock(scope: !5274, file: !3, line: 2065, column: 5)
!5278 = !DILocation(line: 2065, column: 5, scope: !5279)
!5279 = distinct !DILexicalBlock(scope: !5276, file: !3, line: 2065, column: 5)
!5280 = !DILocalVariable(name: "gh", scope: !5281, file: !3, line: 2065, type: !3967)
!5281 = distinct !DILexicalBlock(scope: !5279, file: !3, line: 2065, column: 5)
!5282 = !DILocation(line: 2065, column: 5, scope: !5281)
!5283 = !DILocation(line: 2065, column: 5, scope: !5284)
!5284 = distinct !DILexicalBlock(scope: !5281, file: !3, line: 2065, column: 5)
!5285 = !DILocation(line: 2065, column: 5, scope: !5286)
!5286 = distinct !DILexicalBlock(scope: !5281, file: !3, line: 2065, column: 5)
!5287 = !DILocation(line: 2065, column: 5, scope: !5288)
!5288 = distinct !DILexicalBlock(scope: !5286, file: !3, line: 2065, column: 5)
!5289 = !DILocation(line: 2065, column: 5, scope: !5290)
!5290 = distinct !DILexicalBlock(scope: !5291, file: !3, line: 2065, column: 5)
!5291 = distinct !DILexicalBlock(scope: !5288, file: !3, line: 2065, column: 5)
!5292 = !DILocation(line: 2065, column: 5, scope: !5293)
!5293 = distinct !DILexicalBlock(scope: !5290, file: !3, line: 2065, column: 5)
!5294 = !DILocation(line: 2065, column: 5, scope: !5295)
!5295 = distinct !DILexicalBlock(scope: !5296, file: !3, line: 2065, column: 5)
!5296 = distinct !DILexicalBlock(scope: !5293, file: !3, line: 2065, column: 5)
!5297 = !DILocation(line: 2065, column: 5, scope: !5296)
!5298 = distinct !{!5298, !5289, !5289}
!5299 = !DILocation(line: 2065, column: 5, scope: !5291)
!5300 = distinct !{!5300, !5285, !5285}
!5301 = distinct !{!5301, !5275, !5275}
!5302 = !DILocation(line: 2065, column: 5, scope: !5277)
!5303 = !DILocation(line: 2065, column: 5, scope: !5304)
!5304 = distinct !DILexicalBlock(scope: !5274, file: !3, line: 2065, column: 5)
!5305 = !DILocation(line: 2066, column: 4, scope: !5263)
!5306 = !DILocation(line: 2068, column: 5, scope: !5307)
!5307 = distinct !DILexicalBlock(scope: !5255, file: !3, line: 2067, column: 9)
!5308 = !DILocation(line: 2068, column: 14, scope: !5307)
!5309 = !DILocation(line: 2068, column: 25, scope: !5307)
!5310 = !DILocalVariable(name: "tri_data", scope: !5311, file: !3, line: 2069, type: !178)
!5311 = distinct !DILexicalBlock(scope: !5307, file: !3, line: 2069, column: 5)
!5312 = !DILocation(line: 2069, column: 5, scope: !5311)
!5313 = !DILocalVariable(name: "offset", scope: !5311, file: !3, line: 2069, type: !171)
!5314 = !DILocalVariable(name: "i", scope: !5311, file: !3, line: 2069, type: !171)
!5315 = !DILocalVariable(name: "j", scope: !5311, file: !3, line: 2069, type: !171)
!5316 = !DILocalVariable(name: "k", scope: !5311, file: !3, line: 2069, type: !171)
!5317 = !DILocation(line: 2069, column: 5, scope: !5318)
!5318 = distinct !DILexicalBlock(scope: !5311, file: !3, line: 2069, column: 5)
!5319 = !DILocation(line: 2069, column: 5, scope: !5320)
!5320 = distinct !DILexicalBlock(scope: !5321, file: !3, line: 2069, column: 5)
!5321 = distinct !DILexicalBlock(scope: !5318, file: !3, line: 2069, column: 5)
!5322 = !DILocation(line: 2069, column: 5, scope: !5323)
!5323 = distinct !DILexicalBlock(scope: !5320, file: !3, line: 2069, column: 5)
!5324 = !DILocalVariable(name: "gh", scope: !5325, file: !3, line: 2069, type: !3967)
!5325 = distinct !DILexicalBlock(scope: !5323, file: !3, line: 2069, column: 5)
!5326 = !DILocation(line: 2069, column: 5, scope: !5325)
!5327 = !DILocation(line: 2069, column: 5, scope: !5328)
!5328 = distinct !DILexicalBlock(scope: !5325, file: !3, line: 2069, column: 5)
!5329 = !DILocation(line: 2069, column: 5, scope: !5330)
!5330 = distinct !DILexicalBlock(scope: !5325, file: !3, line: 2069, column: 5)
!5331 = !DILocation(line: 2069, column: 5, scope: !5332)
!5332 = distinct !DILexicalBlock(scope: !5330, file: !3, line: 2069, column: 5)
!5333 = !DILocation(line: 2069, column: 5, scope: !5334)
!5334 = distinct !DILexicalBlock(scope: !5335, file: !3, line: 2069, column: 5)
!5335 = distinct !DILexicalBlock(scope: !5332, file: !3, line: 2069, column: 5)
!5336 = !DILocation(line: 2069, column: 5, scope: !5337)
!5337 = distinct !DILexicalBlock(scope: !5334, file: !3, line: 2069, column: 5)
!5338 = !DILocation(line: 2069, column: 5, scope: !5339)
!5339 = distinct !DILexicalBlock(scope: !5340, file: !3, line: 2069, column: 5)
!5340 = distinct !DILexicalBlock(scope: !5337, file: !3, line: 2069, column: 5)
!5341 = !DILocation(line: 2069, column: 5, scope: !5340)
!5342 = distinct !{!5342, !5333, !5333}
!5343 = !DILocation(line: 2069, column: 5, scope: !5335)
!5344 = distinct !{!5344, !5329, !5329}
!5345 = distinct !{!5345, !5319, !5319}
!5346 = !DILocation(line: 2069, column: 5, scope: !5321)
!5347 = !DILocation(line: 2069, column: 5, scope: !5348)
!5348 = distinct !DILexicalBlock(scope: !5318, file: !3, line: 2069, column: 5)
!5349 = !DILocation(line: 2072, column: 4, scope: !5247)
!5350 = !DILocation(line: 2073, column: 3, scope: !5247)
!5351 = !DILocation(line: 2075, column: 3, scope: !5239)
!5352 = !DILocation(line: 2075, column: 12, scope: !5239)
!5353 = !DILocation(line: 2075, column: 23, scope: !5239)
!5354 = !DILocation(line: 2076, column: 2, scope: !5239)
!5355 = !DILocation(line: 2079, column: 6, scope: !5356)
!5356 = distinct !DILexicalBlock(scope: !5159, file: !3, line: 2079, column: 6)
!5357 = !DILocation(line: 2079, column: 15, scope: !5356)
!5358 = !DILocation(line: 2079, column: 6, scope: !5159)
!5359 = !DILocation(line: 2080, column: 3, scope: !5356)
!5360 = !DILocation(line: 2080, column: 23, scope: !5356)
!5361 = !DILocation(line: 2080, column: 32, scope: !5356)
!5362 = !DILocation(line: 2082, column: 9, scope: !5159)
!5363 = !DILocation(line: 2082, column: 2, scope: !5159)
!5364 = !DILocation(line: 2083, column: 1, scope: !5159)
!5365 = !DILocalVariable(name: "gridsize", arg: 1, scope: !1340, file: !3, line: 1978, type: !171)
!5366 = !DILocation(line: 1978, column: 39, scope: !1340)
!5367 = !DILocalVariable(name: "index_type", arg: 2, scope: !1340, file: !3, line: 1978, type: !1344)
!5368 = !DILocation(line: 1978, column: 57, scope: !1340)
!5369 = !DILocalVariable(name: "totquad", arg: 3, scope: !1340, file: !3, line: 1978, type: !178)
!5370 = !DILocation(line: 1978, column: 79, scope: !1340)
!5371 = !DILocalVariable(name: "grid_hidden", scope: !1340, file: !3, line: 1986, type: !3965)
!5372 = !DILocation(line: 1986, column: 22, scope: !1340)
!5373 = !DILocalVariable(name: "grid_indices", scope: !1340, file: !3, line: 1987, type: !3954)
!5374 = !DILocation(line: 1987, column: 13, scope: !1340)
!5375 = !DILocalVariable(name: "totgrid", scope: !1340, file: !3, line: 1988, type: !171)
!5376 = !DILocation(line: 1988, column: 6, scope: !1340)
!5377 = !DILocation(line: 1992, column: 7, scope: !5378)
!5378 = distinct !DILexicalBlock(scope: !1340, file: !3, line: 1992, column: 6)
!5379 = !DILocation(line: 1992, column: 6, scope: !1340)
!5380 = !DILocation(line: 1993, column: 7, scope: !5381)
!5381 = distinct !DILexicalBlock(scope: !5382, file: !3, line: 1993, column: 7)
!5382 = distinct !DILexicalBlock(scope: !5378, file: !3, line: 1992, column: 26)
!5383 = !DILocation(line: 1993, column: 7, scope: !5382)
!5384 = !DILocation(line: 1994, column: 4, scope: !5381)
!5385 = !DILocation(line: 1995, column: 3, scope: !5382)
!5386 = !DILocation(line: 1999, column: 6, scope: !5387)
!5387 = distinct !DILexicalBlock(scope: !1340, file: !3, line: 1999, column: 6)
!5388 = !DILocation(line: 1999, column: 13, scope: !5387)
!5389 = !DILocation(line: 1999, column: 16, scope: !5387)
!5390 = !DILocation(line: 1999, column: 33, scope: !5387)
!5391 = !DILocation(line: 1999, column: 30, scope: !5387)
!5392 = !DILocation(line: 1999, column: 6, scope: !1340)
!5393 = !DILocation(line: 2000, column: 17, scope: !5394)
!5394 = distinct !DILexicalBlock(scope: !5387, file: !3, line: 1999, column: 43)
!5395 = !DILocation(line: 2000, column: 4, scope: !5394)
!5396 = !DILocation(line: 2000, column: 15, scope: !5394)
!5397 = !DILocation(line: 2001, column: 14, scope: !5394)
!5398 = !DILocation(line: 2001, column: 4, scope: !5394)
!5399 = !DILocation(line: 2001, column: 12, scope: !5394)
!5400 = !DILocation(line: 2002, column: 10, scope: !5394)
!5401 = !DILocation(line: 2002, column: 3, scope: !5394)
!5402 = !DILocation(line: 2006, column: 2, scope: !1340)
!5403 = !DILocation(line: 2007, column: 6, scope: !5404)
!5404 = distinct !DILexicalBlock(scope: !1340, file: !3, line: 2007, column: 6)
!5405 = !DILocation(line: 2007, column: 6, scope: !1340)
!5406 = !DILocation(line: 2008, column: 15, scope: !5407)
!5407 = distinct !DILexicalBlock(scope: !5404, file: !3, line: 2007, column: 14)
!5408 = !DILocation(line: 2008, column: 24, scope: !5407)
!5409 = !DILocation(line: 2008, column: 32, scope: !5407)
!5410 = !DILocation(line: 2008, column: 41, scope: !5407)
!5411 = !DILocation(line: 2008, column: 29, scope: !5407)
!5412 = !DILocation(line: 2008, column: 4, scope: !5407)
!5413 = !DILocation(line: 2008, column: 12, scope: !5407)
!5414 = !DILocation(line: 2010, column: 3, scope: !5407)
!5415 = !DILocation(line: 2010, column: 48, scope: !5407)
!5416 = !DILocation(line: 2012, column: 7, scope: !5417)
!5417 = distinct !DILexicalBlock(scope: !5407, file: !3, line: 2012, column: 7)
!5418 = !DILocation(line: 2012, column: 18, scope: !5417)
!5419 = !DILocation(line: 2012, column: 16, scope: !5417)
!5420 = !DILocation(line: 2012, column: 27, scope: !5417)
!5421 = !DILocation(line: 2012, column: 7, scope: !5407)
!5422 = !DILocation(line: 2013, column: 5, scope: !5423)
!5423 = distinct !DILexicalBlock(scope: !5417, file: !3, line: 2012, column: 40)
!5424 = !DILocation(line: 2013, column: 16, scope: !5423)
!5425 = !DILocalVariable(name: "tri_data", scope: !5426, file: !3, line: 2014, type: !4470)
!5426 = distinct !DILexicalBlock(scope: !5423, file: !3, line: 2014, column: 4)
!5427 = !DILocation(line: 2014, column: 4, scope: !5426)
!5428 = !DILocalVariable(name: "offset", scope: !5426, file: !3, line: 2014, type: !171)
!5429 = !DILocalVariable(name: "i", scope: !5426, file: !3, line: 2014, type: !171)
!5430 = !DILocalVariable(name: "j", scope: !5426, file: !3, line: 2014, type: !171)
!5431 = !DILocalVariable(name: "k", scope: !5426, file: !3, line: 2014, type: !171)
!5432 = !DILocation(line: 2014, column: 4, scope: !5433)
!5433 = distinct !DILexicalBlock(scope: !5426, file: !3, line: 2014, column: 4)
!5434 = !DILocation(line: 2014, column: 4, scope: !5435)
!5435 = distinct !DILexicalBlock(scope: !5436, file: !3, line: 2014, column: 4)
!5436 = distinct !DILexicalBlock(scope: !5433, file: !3, line: 2014, column: 4)
!5437 = !DILocation(line: 2014, column: 4, scope: !5438)
!5438 = distinct !DILexicalBlock(scope: !5435, file: !3, line: 2014, column: 4)
!5439 = !DILocalVariable(name: "gh", scope: !5440, file: !3, line: 2014, type: !3967)
!5440 = distinct !DILexicalBlock(scope: !5438, file: !3, line: 2014, column: 4)
!5441 = !DILocation(line: 2014, column: 4, scope: !5440)
!5442 = !DILocation(line: 2014, column: 4, scope: !5443)
!5443 = distinct !DILexicalBlock(scope: !5440, file: !3, line: 2014, column: 4)
!5444 = !DILocation(line: 2014, column: 4, scope: !5445)
!5445 = distinct !DILexicalBlock(scope: !5440, file: !3, line: 2014, column: 4)
!5446 = !DILocation(line: 2014, column: 4, scope: !5447)
!5447 = distinct !DILexicalBlock(scope: !5445, file: !3, line: 2014, column: 4)
!5448 = !DILocation(line: 2014, column: 4, scope: !5449)
!5449 = distinct !DILexicalBlock(scope: !5450, file: !3, line: 2014, column: 4)
!5450 = distinct !DILexicalBlock(scope: !5447, file: !3, line: 2014, column: 4)
!5451 = !DILocation(line: 2014, column: 4, scope: !5452)
!5452 = distinct !DILexicalBlock(scope: !5449, file: !3, line: 2014, column: 4)
!5453 = !DILocation(line: 2014, column: 4, scope: !5454)
!5454 = distinct !DILexicalBlock(scope: !5455, file: !3, line: 2014, column: 4)
!5455 = distinct !DILexicalBlock(scope: !5452, file: !3, line: 2014, column: 4)
!5456 = !DILocation(line: 2014, column: 4, scope: !5455)
!5457 = distinct !{!5457, !5448, !5448}
!5458 = !DILocation(line: 2014, column: 4, scope: !5450)
!5459 = distinct !{!5459, !5444, !5444}
!5460 = distinct !{!5460, !5434, !5434}
!5461 = !DILocation(line: 2014, column: 4, scope: !5436)
!5462 = !DILocation(line: 2014, column: 4, scope: !5463)
!5463 = distinct !DILexicalBlock(scope: !5433, file: !3, line: 2014, column: 4)
!5464 = !DILocation(line: 2015, column: 3, scope: !5423)
!5465 = !DILocation(line: 2017, column: 5, scope: !5466)
!5466 = distinct !DILexicalBlock(scope: !5417, file: !3, line: 2016, column: 8)
!5467 = !DILocation(line: 2017, column: 16, scope: !5466)
!5468 = !DILocalVariable(name: "tri_data", scope: !5469, file: !3, line: 2018, type: !178)
!5469 = distinct !DILexicalBlock(scope: !5466, file: !3, line: 2018, column: 4)
!5470 = !DILocation(line: 2018, column: 4, scope: !5469)
!5471 = !DILocalVariable(name: "offset", scope: !5469, file: !3, line: 2018, type: !171)
!5472 = !DILocalVariable(name: "i", scope: !5469, file: !3, line: 2018, type: !171)
!5473 = !DILocalVariable(name: "j", scope: !5469, file: !3, line: 2018, type: !171)
!5474 = !DILocalVariable(name: "k", scope: !5469, file: !3, line: 2018, type: !171)
!5475 = !DILocation(line: 2018, column: 4, scope: !5476)
!5476 = distinct !DILexicalBlock(scope: !5469, file: !3, line: 2018, column: 4)
!5477 = !DILocation(line: 2018, column: 4, scope: !5478)
!5478 = distinct !DILexicalBlock(scope: !5479, file: !3, line: 2018, column: 4)
!5479 = distinct !DILexicalBlock(scope: !5476, file: !3, line: 2018, column: 4)
!5480 = !DILocation(line: 2018, column: 4, scope: !5481)
!5481 = distinct !DILexicalBlock(scope: !5478, file: !3, line: 2018, column: 4)
!5482 = !DILocalVariable(name: "gh", scope: !5483, file: !3, line: 2018, type: !3967)
!5483 = distinct !DILexicalBlock(scope: !5481, file: !3, line: 2018, column: 4)
!5484 = !DILocation(line: 2018, column: 4, scope: !5483)
!5485 = !DILocation(line: 2018, column: 4, scope: !5486)
!5486 = distinct !DILexicalBlock(scope: !5483, file: !3, line: 2018, column: 4)
!5487 = !DILocation(line: 2018, column: 4, scope: !5488)
!5488 = distinct !DILexicalBlock(scope: !5483, file: !3, line: 2018, column: 4)
!5489 = !DILocation(line: 2018, column: 4, scope: !5490)
!5490 = distinct !DILexicalBlock(scope: !5488, file: !3, line: 2018, column: 4)
!5491 = !DILocation(line: 2018, column: 4, scope: !5492)
!5492 = distinct !DILexicalBlock(scope: !5493, file: !3, line: 2018, column: 4)
!5493 = distinct !DILexicalBlock(scope: !5490, file: !3, line: 2018, column: 4)
!5494 = !DILocation(line: 2018, column: 4, scope: !5495)
!5495 = distinct !DILexicalBlock(scope: !5492, file: !3, line: 2018, column: 4)
!5496 = !DILocation(line: 2018, column: 4, scope: !5497)
!5497 = distinct !DILexicalBlock(scope: !5498, file: !3, line: 2018, column: 4)
!5498 = distinct !DILexicalBlock(scope: !5495, file: !3, line: 2018, column: 4)
!5499 = !DILocation(line: 2018, column: 4, scope: !5498)
!5500 = distinct !{!5500, !5491, !5491}
!5501 = !DILocation(line: 2018, column: 4, scope: !5493)
!5502 = distinct !{!5502, !5487, !5487}
!5503 = distinct !{!5503, !5477, !5477}
!5504 = !DILocation(line: 2018, column: 4, scope: !5479)
!5505 = !DILocation(line: 2018, column: 4, scope: !5506)
!5506 = distinct !DILexicalBlock(scope: !5476, file: !3, line: 2018, column: 4)
!5507 = !DILocation(line: 2021, column: 3, scope: !5407)
!5508 = !DILocation(line: 2022, column: 2, scope: !5407)
!5509 = !DILocation(line: 2024, column: 18, scope: !1340)
!5510 = !DILocation(line: 2024, column: 16, scope: !1340)
!5511 = !DILocation(line: 2025, column: 21, scope: !1340)
!5512 = !DILocation(line: 2025, column: 20, scope: !1340)
!5513 = !DILocation(line: 2025, column: 18, scope: !1340)
!5514 = !DILocation(line: 2026, column: 18, scope: !1340)
!5515 = !DILocation(line: 2026, column: 17, scope: !1340)
!5516 = !DILocation(line: 2026, column: 15, scope: !1340)
!5517 = !DILocation(line: 2027, column: 9, scope: !1340)
!5518 = !DILocation(line: 2027, column: 2, scope: !1340)
!5519 = !DILocation(line: 2028, column: 1, scope: !1340)
!5520 = distinct !DISubprogram(name: "GPU_update_bmesh_pbvh_buffers", scope: !3, file: !3, line: 2162, type: !5521, scopeLine: 2168, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1345)
!5521 = !DISubroutineType(types: !5522)
!5522 = !{null, !3944, !5523, !5676, !5676, !5676, !166}
!5523 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5524, size: 64)
!5524 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMesh", file: !143, line: 246, baseType: !5525)
!5525 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMesh", file: !143, line: 186, size: 8064, elements: !5526)
!5526 = !{!5527, !5528, !5529, !5530, !5531, !5532, !5533, !5534, !5535, !5536, !5537, !5538, !5539, !5540, !5601, !5605, !5609, !5610, !5611, !5612, !5613, !5614, !5615, !5616, !5664, !5665, !5666, !5667, !5668, !5669, !5670, !5671, !5672, !5673, !5674, !5675}
!5527 = !DIDerivedType(tag: DW_TAG_member, name: "totvert", scope: !5525, file: !143, line: 187, baseType: !171, size: 32)
!5528 = !DIDerivedType(tag: DW_TAG_member, name: "totedge", scope: !5525, file: !143, line: 187, baseType: !171, size: 32, offset: 32)
!5529 = !DIDerivedType(tag: DW_TAG_member, name: "totloop", scope: !5525, file: !143, line: 187, baseType: !171, size: 32, offset: 64)
!5530 = !DIDerivedType(tag: DW_TAG_member, name: "totface", scope: !5525, file: !143, line: 187, baseType: !171, size: 32, offset: 96)
!5531 = !DIDerivedType(tag: DW_TAG_member, name: "totvertsel", scope: !5525, file: !143, line: 188, baseType: !171, size: 32, offset: 128)
!5532 = !DIDerivedType(tag: DW_TAG_member, name: "totedgesel", scope: !5525, file: !143, line: 188, baseType: !171, size: 32, offset: 160)
!5533 = !DIDerivedType(tag: DW_TAG_member, name: "totfacesel", scope: !5525, file: !143, line: 188, baseType: !171, size: 32, offset: 192)
!5534 = !DIDerivedType(tag: DW_TAG_member, name: "elem_index_dirty", scope: !5525, file: !143, line: 193, baseType: !169, size: 8, offset: 224)
!5535 = !DIDerivedType(tag: DW_TAG_member, name: "elem_table_dirty", scope: !5525, file: !143, line: 197, baseType: !169, size: 8, offset: 232)
!5536 = !DIDerivedType(tag: DW_TAG_member, name: "vpool", scope: !5525, file: !143, line: 201, baseType: !250, size: 64, offset: 256)
!5537 = !DIDerivedType(tag: DW_TAG_member, name: "epool", scope: !5525, file: !143, line: 201, baseType: !250, size: 64, offset: 320)
!5538 = !DIDerivedType(tag: DW_TAG_member, name: "lpool", scope: !5525, file: !143, line: 201, baseType: !250, size: 64, offset: 384)
!5539 = !DIDerivedType(tag: DW_TAG_member, name: "fpool", scope: !5525, file: !143, line: 201, baseType: !250, size: 64, offset: 448)
!5540 = !DIDerivedType(tag: DW_TAG_member, name: "vtable", scope: !5525, file: !143, line: 208, baseType: !5541, size: 64, offset: 512)
!5541 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5542, size: 64)
!5542 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5543, size: 64)
!5543 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMVert", file: !143, line: 103, baseType: !5544)
!5544 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMVert", file: !143, line: 90, size: 448, elements: !5545)
!5545 = !{!5546, !5555, !5560, !5561, !5562}
!5546 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !5544, file: !143, line: 91, baseType: !5547, size: 128)
!5547 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMHeader", file: !143, line: 82, baseType: !5548)
!5548 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMHeader", file: !143, line: 64, size: 128, elements: !5549)
!5549 = !{!5550, !5551, !5552, !5553, !5554}
!5550 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !5548, file: !143, line: 65, baseType: !167, size: 64)
!5551 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !5548, file: !143, line: 66, baseType: !171, size: 32, offset: 64)
!5552 = !DIDerivedType(tag: DW_TAG_member, name: "htype", scope: !5548, file: !143, line: 73, baseType: !169, size: 8, offset: 96)
!5553 = !DIDerivedType(tag: DW_TAG_member, name: "hflag", scope: !5548, file: !143, line: 74, baseType: !169, size: 8, offset: 104)
!5554 = !DIDerivedType(tag: DW_TAG_member, name: "api_flag", scope: !5548, file: !143, line: 80, baseType: !169, size: 8, offset: 112)
!5555 = !DIDerivedType(tag: DW_TAG_member, name: "oflags", scope: !5544, file: !143, line: 92, baseType: !5556, size: 64, offset: 128)
!5556 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5557, size: 64)
!5557 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMFlagLayer", file: !143, line: 180, size: 16, elements: !5558)
!5558 = !{!5559}
!5559 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !5557, file: !143, line: 181, baseType: !179, size: 16)
!5560 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !5544, file: !143, line: 94, baseType: !426, size: 96, offset: 192)
!5561 = !DIDerivedType(tag: DW_TAG_member, name: "no", scope: !5544, file: !143, line: 95, baseType: !426, size: 96, offset: 288)
!5562 = !DIDerivedType(tag: DW_TAG_member, name: "e", scope: !5544, file: !143, line: 102, baseType: !5563, size: 64, offset: 384)
!5563 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5564, size: 64)
!5564 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMEdge", file: !143, line: 110, size: 640, elements: !5565)
!5565 = !{!5566, !5567, !5568, !5570, !5571, !5594, !5600}
!5566 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !5564, file: !143, line: 111, baseType: !5547, size: 128)
!5567 = !DIDerivedType(tag: DW_TAG_member, name: "oflags", scope: !5564, file: !143, line: 112, baseType: !5556, size: 64, offset: 128)
!5568 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !5564, file: !143, line: 114, baseType: !5569, size: 64, offset: 192)
!5569 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5544, size: 64)
!5570 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !5564, file: !143, line: 114, baseType: !5569, size: 64, offset: 256)
!5571 = !DIDerivedType(tag: DW_TAG_member, name: "l", scope: !5564, file: !143, line: 118, baseType: !5572, size: 64, offset: 320)
!5572 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5573, size: 64)
!5573 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMLoop", file: !143, line: 125, size: 576, elements: !5574)
!5574 = !{!5575, !5576, !5577, !5578, !5590, !5591, !5592, !5593}
!5575 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !5573, file: !143, line: 126, baseType: !5547, size: 128)
!5576 = !DIDerivedType(tag: DW_TAG_member, name: "v", scope: !5573, file: !143, line: 129, baseType: !5569, size: 64, offset: 128)
!5577 = !DIDerivedType(tag: DW_TAG_member, name: "e", scope: !5573, file: !143, line: 130, baseType: !5563, size: 64, offset: 192)
!5578 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !5573, file: !143, line: 131, baseType: !5579, size: 64, offset: 256)
!5579 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5580, size: 64)
!5580 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMFace", file: !143, line: 164, size: 448, elements: !5581)
!5581 = !{!5582, !5583, !5584, !5587, !5588, !5589}
!5582 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !5580, file: !143, line: 165, baseType: !5547, size: 128)
!5583 = !DIDerivedType(tag: DW_TAG_member, name: "oflags", scope: !5580, file: !143, line: 166, baseType: !5556, size: 64, offset: 128)
!5584 = !DIDerivedType(tag: DW_TAG_member, name: "l_first", scope: !5580, file: !143, line: 172, baseType: !5585, size: 64, offset: 192)
!5585 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5586, size: 64)
!5586 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMLoop", file: !143, line: 140, baseType: !5573)
!5587 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !5580, file: !143, line: 174, baseType: !171, size: 32, offset: 256)
!5588 = !DIDerivedType(tag: DW_TAG_member, name: "no", scope: !5580, file: !143, line: 175, baseType: !426, size: 96, offset: 288)
!5589 = !DIDerivedType(tag: DW_TAG_member, name: "mat_nr", scope: !5580, file: !143, line: 176, baseType: !179, size: 16, offset: 384)
!5590 = !DIDerivedType(tag: DW_TAG_member, name: "radial_next", scope: !5573, file: !143, line: 135, baseType: !5572, size: 64, offset: 320)
!5591 = !DIDerivedType(tag: DW_TAG_member, name: "radial_prev", scope: !5573, file: !143, line: 135, baseType: !5572, size: 64, offset: 384)
!5592 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !5573, file: !143, line: 139, baseType: !5572, size: 64, offset: 448)
!5593 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !5573, file: !143, line: 139, baseType: !5572, size: 64, offset: 512)
!5594 = !DIDerivedType(tag: DW_TAG_member, name: "v1_disk_link", scope: !5564, file: !143, line: 122, baseType: !5595, size: 128, offset: 384)
!5595 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMDiskLink", file: !143, line: 108, baseType: !5596)
!5596 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMDiskLink", file: !143, line: 106, size: 128, elements: !5597)
!5597 = !{!5598, !5599}
!5598 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !5596, file: !143, line: 107, baseType: !5563, size: 64)
!5599 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !5596, file: !143, line: 107, baseType: !5563, size: 64, offset: 64)
!5600 = !DIDerivedType(tag: DW_TAG_member, name: "v2_disk_link", scope: !5564, file: !143, line: 122, baseType: !5595, size: 128, offset: 512)
!5601 = !DIDerivedType(tag: DW_TAG_member, name: "etable", scope: !5525, file: !143, line: 209, baseType: !5602, size: 64, offset: 576)
!5602 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5603, size: 64)
!5603 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5604, size: 64)
!5604 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMEdge", file: !143, line: 123, baseType: !5564)
!5605 = !DIDerivedType(tag: DW_TAG_member, name: "ftable", scope: !5525, file: !143, line: 210, baseType: !5606, size: 64, offset: 640)
!5606 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5607, size: 64)
!5607 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5608, size: 64)
!5608 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMFace", file: !143, line: 178, baseType: !5580)
!5609 = !DIDerivedType(tag: DW_TAG_member, name: "vtable_tot", scope: !5525, file: !143, line: 213, baseType: !171, size: 32, offset: 704)
!5610 = !DIDerivedType(tag: DW_TAG_member, name: "etable_tot", scope: !5525, file: !143, line: 214, baseType: !171, size: 32, offset: 736)
!5611 = !DIDerivedType(tag: DW_TAG_member, name: "ftable_tot", scope: !5525, file: !143, line: 215, baseType: !171, size: 32, offset: 768)
!5612 = !DIDerivedType(tag: DW_TAG_member, name: "vtoolflagpool", scope: !5525, file: !143, line: 218, baseType: !250, size: 64, offset: 832)
!5613 = !DIDerivedType(tag: DW_TAG_member, name: "etoolflagpool", scope: !5525, file: !143, line: 218, baseType: !250, size: 64, offset: 896)
!5614 = !DIDerivedType(tag: DW_TAG_member, name: "ftoolflagpool", scope: !5525, file: !143, line: 218, baseType: !250, size: 64, offset: 960)
!5615 = !DIDerivedType(tag: DW_TAG_member, name: "stackdepth", scope: !5525, file: !143, line: 220, baseType: !171, size: 32, offset: 1024)
!5616 = !DIDerivedType(tag: DW_TAG_member, name: "currentop", scope: !5525, file: !143, line: 221, baseType: !5617, size: 64, offset: 1088)
!5617 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5618, size: 64)
!5618 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMOperator", file: !61, line: 190, size: 10496, elements: !5619)
!5619 = !{!5620, !5652, !5653, !5657, !5660, !5661, !5663}
!5620 = !DIDerivedType(tag: DW_TAG_member, name: "slots_in", scope: !5618, file: !61, line: 191, baseType: !5621, size: 5120)
!5621 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5622, size: 5120, elements: !5650)
!5622 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMOpSlot", file: !61, line: 147, size: 320, elements: !5623)
!5623 = !{!5624, !5627, !5629, !5639, !5640}
!5624 = !DIDerivedType(tag: DW_TAG_member, name: "slot_name", scope: !5622, file: !61, line: 148, baseType: !5625, size: 64)
!5625 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5626, size: 64)
!5626 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !169)
!5627 = !DIDerivedType(tag: DW_TAG_member, name: "slot_type", scope: !5622, file: !61, line: 149, baseType: !5628, size: 32, offset: 64)
!5628 = !DIDerivedType(tag: DW_TAG_typedef, name: "eBMOpSlotType", file: !61, line: 112, baseType: !60)
!5629 = !DIDerivedType(tag: DW_TAG_member, name: "slot_subtype", scope: !5622, file: !61, line: 150, baseType: !5630, size: 32, offset: 96)
!5630 = !DIDerivedType(tag: DW_TAG_typedef, name: "eBMOpSlotSubType_Union", file: !61, line: 142, baseType: !5631)
!5631 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "eBMOpSlotSubType_Union", file: !61, line: 138, size: 32, elements: !5632)
!5632 = !{!5633, !5635, !5637}
!5633 = !DIDerivedType(tag: DW_TAG_member, name: "elem", scope: !5631, file: !61, line: 139, baseType: !5634, size: 32)
!5634 = !DIDerivedType(tag: DW_TAG_typedef, name: "eBMOpSlotSubType_Elem", file: !61, line: 122, baseType: !71)
!5635 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !5631, file: !61, line: 140, baseType: !5636, size: 32)
!5636 = !DIDerivedType(tag: DW_TAG_typedef, name: "eBMOpSlotSubType_Ptr", file: !61, line: 136, baseType: !77)
!5637 = !DIDerivedType(tag: DW_TAG_member, name: "map", scope: !5631, file: !61, line: 141, baseType: !5638, size: 32)
!5638 = !DIDerivedType(tag: DW_TAG_typedef, name: "eBMOpSlotSubType_Map", file: !61, line: 130, baseType: !83)
!5639 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !5622, file: !61, line: 152, baseType: !171, size: 32, offset: 128)
!5640 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !5622, file: !61, line: 162, baseType: !5641, size: 128, offset: 192)
!5641 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5622, file: !61, line: 155, size: 128, elements: !5642)
!5642 = !{!5643, !5644, !5645, !5646, !5647, !5649}
!5643 = !DIDerivedType(tag: DW_TAG_member, name: "i", scope: !5641, file: !61, line: 156, baseType: !171, size: 32)
!5644 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !5641, file: !61, line: 157, baseType: !176, size: 32)
!5645 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !5641, file: !61, line: 158, baseType: !167, size: 64)
!5646 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !5641, file: !61, line: 159, baseType: !426, size: 96)
!5647 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !5641, file: !61, line: 160, baseType: !5648, size: 64)
!5648 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !167, size: 64)
!5649 = !DIDerivedType(tag: DW_TAG_member, name: "ghash", scope: !5641, file: !61, line: 161, baseType: !190, size: 64)
!5650 = !{!5651}
!5651 = !DISubrange(count: 16)
!5652 = !DIDerivedType(tag: DW_TAG_member, name: "slots_out", scope: !5618, file: !61, line: 192, baseType: !5621, size: 5120, offset: 5120)
!5653 = !DIDerivedType(tag: DW_TAG_member, name: "exec", scope: !5618, file: !61, line: 193, baseType: !5654, size: 64, offset: 10240)
!5654 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5655, size: 64)
!5655 = !DISubroutineType(types: !5656)
!5656 = !{null, !5523, !5617}
!5657 = !DIDerivedType(tag: DW_TAG_member, name: "arena", scope: !5618, file: !61, line: 194, baseType: !5658, size: 64, offset: 10304)
!5658 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5659, size: 64)
!5659 = !DICompositeType(tag: DW_TAG_structure_type, name: "MemArena", file: !61, line: 194, flags: DIFlagFwdDecl)
!5660 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !5618, file: !61, line: 195, baseType: !171, size: 32, offset: 10368)
!5661 = !DIDerivedType(tag: DW_TAG_member, name: "type_flag", scope: !5618, file: !61, line: 196, baseType: !5662, size: 32, offset: 10400)
!5662 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMOpTypeFlag", file: !61, line: 188, baseType: !91)
!5663 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !5618, file: !61, line: 197, baseType: !171, size: 32, offset: 10432)
!5664 = !DIDerivedType(tag: DW_TAG_member, name: "vdata", scope: !5525, file: !143, line: 223, baseType: !221, size: 1600, offset: 1152)
!5665 = !DIDerivedType(tag: DW_TAG_member, name: "edata", scope: !5525, file: !143, line: 223, baseType: !221, size: 1600, offset: 2752)
!5666 = !DIDerivedType(tag: DW_TAG_member, name: "ldata", scope: !5525, file: !143, line: 223, baseType: !221, size: 1600, offset: 4352)
!5667 = !DIDerivedType(tag: DW_TAG_member, name: "pdata", scope: !5525, file: !143, line: 223, baseType: !221, size: 1600, offset: 5952)
!5668 = !DIDerivedType(tag: DW_TAG_member, name: "selectmode", scope: !5525, file: !143, line: 233, baseType: !179, size: 16, offset: 7552)
!5669 = !DIDerivedType(tag: DW_TAG_member, name: "shapenr", scope: !5525, file: !143, line: 236, baseType: !171, size: 32, offset: 7584)
!5670 = !DIDerivedType(tag: DW_TAG_member, name: "walkers", scope: !5525, file: !143, line: 238, baseType: !171, size: 32, offset: 7616)
!5671 = !DIDerivedType(tag: DW_TAG_member, name: "totflags", scope: !5525, file: !143, line: 238, baseType: !171, size: 32, offset: 7648)
!5672 = !DIDerivedType(tag: DW_TAG_member, name: "selected", scope: !5525, file: !143, line: 239, baseType: !380, size: 128, offset: 7680)
!5673 = !DIDerivedType(tag: DW_TAG_member, name: "act_face", scope: !5525, file: !143, line: 241, baseType: !5607, size: 64, offset: 7808)
!5674 = !DIDerivedType(tag: DW_TAG_member, name: "errorstack", scope: !5525, file: !143, line: 243, baseType: !380, size: 128, offset: 7872)
!5675 = !DIDerivedType(tag: DW_TAG_member, name: "py_handle", scope: !5525, file: !143, line: 245, baseType: !167, size: 64, offset: 8000)
!5676 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5677, size: 64)
!5677 = !DIDerivedType(tag: DW_TAG_typedef, name: "GSet", file: !186, line: 176, baseType: !5678)
!5678 = !DICompositeType(tag: DW_TAG_structure_type, name: "GSet", file: !186, line: 176, flags: DIFlagFwdDecl)
!5679 = !DILocalVariable(name: "buffers", arg: 1, scope: !5520, file: !3, line: 2162, type: !3944)
!5680 = !DILocation(line: 2162, column: 54, scope: !5520)
!5681 = !DILocalVariable(name: "bm", arg: 2, scope: !5520, file: !3, line: 2163, type: !5523)
!5682 = !DILocation(line: 2163, column: 38, scope: !5520)
!5683 = !DILocalVariable(name: "bm_faces", arg: 3, scope: !5520, file: !3, line: 2164, type: !5676)
!5684 = !DILocation(line: 2164, column: 37, scope: !5520)
!5685 = !DILocalVariable(name: "bm_unique_verts", arg: 4, scope: !5520, file: !3, line: 2165, type: !5676)
!5686 = !DILocation(line: 2165, column: 37, scope: !5520)
!5687 = !DILocalVariable(name: "bm_other_verts", arg: 5, scope: !5520, file: !3, line: 2166, type: !5676)
!5688 = !DILocation(line: 2166, column: 37, scope: !5520)
!5689 = !DILocalVariable(name: "show_diffuse_color", arg: 6, scope: !5520, file: !3, line: 2167, type: !166)
!5690 = !DILocation(line: 2167, column: 36, scope: !5520)
!5691 = !DILocalVariable(name: "vert_data", scope: !5520, file: !3, line: 2169, type: !3996)
!5692 = !DILocation(line: 2169, column: 22, scope: !5520)
!5693 = !DILocalVariable(name: "tri_data", scope: !5520, file: !3, line: 2170, type: !167)
!5694 = !DILocation(line: 2170, column: 8, scope: !5520)
!5695 = !DILocalVariable(name: "tottri", scope: !5520, file: !3, line: 2171, type: !171)
!5696 = !DILocation(line: 2171, column: 6, scope: !5520)
!5697 = !DILocalVariable(name: "totvert", scope: !5520, file: !3, line: 2171, type: !171)
!5698 = !DILocation(line: 2171, column: 14, scope: !5520)
!5699 = !DILocalVariable(name: "maxvert", scope: !5520, file: !3, line: 2171, type: !171)
!5700 = !DILocation(line: 2171, column: 23, scope: !5520)
!5701 = !DILocalVariable(name: "diffuse_color", scope: !5520, file: !3, line: 2172, type: !508)
!5702 = !DILocation(line: 2172, column: 8, scope: !5520)
!5703 = !DILocalVariable(name: "cd_vert_mask_offset", scope: !5520, file: !3, line: 2175, type: !2281)
!5704 = !DILocation(line: 2175, column: 12, scope: !5520)
!5705 = !DILocation(line: 2175, column: 57, scope: !5520)
!5706 = !DILocation(line: 2175, column: 61, scope: !5520)
!5707 = !DILocation(line: 2175, column: 34, scope: !5520)
!5708 = !DILocation(line: 2177, column: 32, scope: !5520)
!5709 = !DILocation(line: 2177, column: 2, scope: !5520)
!5710 = !DILocation(line: 2177, column: 11, scope: !5520)
!5711 = !DILocation(line: 2177, column: 30, scope: !5520)
!5712 = !DILocation(line: 2178, column: 25, scope: !5520)
!5713 = !DILocation(line: 2178, column: 2, scope: !5520)
!5714 = !DILocation(line: 2178, column: 11, scope: !5520)
!5715 = !DILocation(line: 2178, column: 23, scope: !5520)
!5716 = !DILocation(line: 2180, column: 7, scope: !5717)
!5717 = distinct !DILexicalBlock(scope: !5520, file: !3, line: 2180, column: 6)
!5718 = !DILocation(line: 2180, column: 16, scope: !5717)
!5719 = !DILocation(line: 2180, column: 25, scope: !5717)
!5720 = !DILocation(line: 2180, column: 29, scope: !5717)
!5721 = !DILocation(line: 2180, column: 38, scope: !5717)
!5722 = !DILocation(line: 2180, column: 45, scope: !5717)
!5723 = !DILocation(line: 2180, column: 49, scope: !5717)
!5724 = !DILocation(line: 2180, column: 58, scope: !5717)
!5725 = !DILocation(line: 2180, column: 6, scope: !5520)
!5726 = !DILocation(line: 2181, column: 3, scope: !5717)
!5727 = !DILocation(line: 2184, column: 40, scope: !5520)
!5728 = !DILocation(line: 2184, column: 11, scope: !5520)
!5729 = !DILocation(line: 2184, column: 9, scope: !5520)
!5730 = !DILocation(line: 2186, column: 6, scope: !5731)
!5731 = distinct !DILexicalBlock(scope: !5520, file: !3, line: 2186, column: 6)
!5732 = !DILocation(line: 2186, column: 15, scope: !5731)
!5733 = !DILocation(line: 2186, column: 6, scope: !5520)
!5734 = !DILocation(line: 2188, column: 42, scope: !5735)
!5735 = distinct !DILexicalBlock(scope: !5731, file: !3, line: 2186, column: 23)
!5736 = !DILocation(line: 2188, column: 59, scope: !5735)
!5737 = !DILocation(line: 2188, column: 13, scope: !5735)
!5738 = !DILocation(line: 2188, column: 11, scope: !5735)
!5739 = !DILocation(line: 2189, column: 2, scope: !5735)
!5740 = !DILocation(line: 2191, column: 13, scope: !5731)
!5741 = !DILocation(line: 2191, column: 20, scope: !5731)
!5742 = !DILocation(line: 2191, column: 11, scope: !5731)
!5743 = !DILocation(line: 2193, column: 7, scope: !5744)
!5744 = distinct !DILexicalBlock(scope: !5520, file: !3, line: 2193, column: 6)
!5745 = !DILocation(line: 2193, column: 6, scope: !5520)
!5746 = !DILocation(line: 2194, column: 3, scope: !5747)
!5747 = distinct !DILexicalBlock(scope: !5744, file: !3, line: 2193, column: 15)
!5748 = !DILocation(line: 2194, column: 12, scope: !5747)
!5749 = !DILocation(line: 2194, column: 20, scope: !5747)
!5750 = !DILocation(line: 2195, column: 3, scope: !5747)
!5751 = !DILocation(line: 2198, column: 6, scope: !5752)
!5752 = distinct !DILexicalBlock(scope: !5520, file: !3, line: 2198, column: 6)
!5753 = !DILocation(line: 2198, column: 15, scope: !5752)
!5754 = !DILocation(line: 2198, column: 6, scope: !5520)
!5755 = !DILocation(line: 2199, column: 41, scope: !5752)
!5756 = !DILocation(line: 2199, column: 58, scope: !5752)
!5757 = !DILocation(line: 2199, column: 22, scope: !5752)
!5758 = !DILocation(line: 2199, column: 39, scope: !5752)
!5759 = !DILocation(line: 2199, column: 3, scope: !5752)
!5760 = !DILocation(line: 2199, column: 20, scope: !5752)
!5761 = !DILocation(line: 2200, column: 11, scope: !5762)
!5762 = distinct !DILexicalBlock(scope: !5752, file: !3, line: 2200, column: 11)
!5763 = !DILocation(line: 2200, column: 11, scope: !5752)
!5764 = !DILocalVariable(name: "gs_iter", scope: !5765, file: !3, line: 2202, type: !5766)
!5765 = distinct !DILexicalBlock(scope: !5762, file: !3, line: 2200, column: 31)
!5766 = !DIDerivedType(tag: DW_TAG_typedef, name: "GSetIterator", file: !186, line: 189, baseType: !5767)
!5767 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GSetIterator", file: !186, line: 183, size: 192, elements: !5768)
!5768 = !{!5769}
!5769 = !DIDerivedType(tag: DW_TAG_member, name: "_ghi", scope: !5767, file: !186, line: 184, baseType: !185, size: 192)
!5770 = !DILocation(line: 2202, column: 16, scope: !5765)
!5771 = !DILocalVariable(name: "f", scope: !5765, file: !3, line: 2203, type: !5607)
!5772 = !DILocation(line: 2203, column: 11, scope: !5765)
!5773 = !DILocation(line: 2204, column: 35, scope: !5765)
!5774 = !DILocation(line: 2204, column: 3, scope: !5765)
!5775 = !DILocation(line: 2205, column: 7, scope: !5765)
!5776 = !DILocation(line: 2205, column: 5, scope: !5765)
!5777 = !DILocation(line: 2206, column: 28, scope: !5765)
!5778 = !DILocation(line: 2206, column: 31, scope: !5765)
!5779 = !DILocation(line: 2206, column: 38, scope: !5765)
!5780 = !DILocation(line: 2206, column: 43, scope: !5765)
!5781 = !DILocation(line: 2206, column: 3, scope: !5765)
!5782 = !DILocation(line: 2207, column: 2, scope: !5765)
!5783 = !DILocation(line: 2209, column: 13, scope: !5520)
!5784 = !DILocation(line: 2209, column: 22, scope: !5520)
!5785 = !DILocation(line: 2209, column: 37, scope: !5520)
!5786 = !DILocation(line: 2209, column: 2, scope: !5520)
!5787 = !DILocation(line: 2212, column: 2, scope: !5520)
!5788 = !DILocation(line: 2212, column: 39, scope: !5520)
!5789 = !DILocation(line: 2212, column: 48, scope: !5520)
!5790 = !DILocation(line: 2213, column: 2, scope: !5520)
!5791 = !DILocation(line: 2214, column: 35, scope: !5520)
!5792 = !DILocation(line: 2214, column: 33, scope: !5520)
!5793 = !DILocation(line: 2218, column: 14, scope: !5520)
!5794 = !DILocation(line: 2218, column: 12, scope: !5520)
!5795 = !DILocation(line: 2219, column: 6, scope: !5796)
!5796 = distinct !DILexicalBlock(scope: !5520, file: !3, line: 2219, column: 6)
!5797 = !DILocation(line: 2219, column: 6, scope: !5520)
!5798 = !DILocalVariable(name: "v_index", scope: !5799, file: !3, line: 2220, type: !171)
!5799 = distinct !DILexicalBlock(scope: !5796, file: !3, line: 2219, column: 17)
!5800 = !DILocation(line: 2220, column: 7, scope: !5799)
!5801 = !DILocation(line: 2222, column: 7, scope: !5802)
!5802 = distinct !DILexicalBlock(scope: !5799, file: !3, line: 2222, column: 7)
!5803 = !DILocation(line: 2222, column: 16, scope: !5802)
!5804 = !DILocation(line: 2222, column: 7, scope: !5799)
!5805 = !DILocalVariable(name: "gs_iter", scope: !5806, file: !3, line: 2223, type: !5766)
!5806 = distinct !DILexicalBlock(scope: !5802, file: !3, line: 2222, column: 24)
!5807 = !DILocation(line: 2223, column: 17, scope: !5806)
!5808 = !DILocation(line: 2227, column: 4, scope: !5806)
!5809 = !DILocation(line: 2227, column: 8, scope: !5806)
!5810 = !DILocation(line: 2227, column: 25, scope: !5806)
!5811 = !DILocation(line: 2229, column: 4, scope: !5812)
!5812 = distinct !DILexicalBlock(scope: !5806, file: !3, line: 2229, column: 4)
!5813 = !DILocation(line: 2229, column: 4, scope: !5814)
!5814 = distinct !DILexicalBlock(scope: !5812, file: !3, line: 2229, column: 4)
!5815 = !DILocation(line: 2230, column: 35, scope: !5816)
!5816 = distinct !DILexicalBlock(scope: !5814, file: !3, line: 2229, column: 41)
!5817 = !DILocation(line: 2231, column: 35, scope: !5816)
!5818 = !DILocation(line: 2232, column: 35, scope: !5816)
!5819 = !DILocation(line: 2232, column: 56, scope: !5816)
!5820 = !DILocation(line: 2230, column: 5, scope: !5816)
!5821 = !DILocation(line: 2233, column: 4, scope: !5816)
!5822 = distinct !{!5822, !5811, !5823}
!5823 = !DILocation(line: 2233, column: 4, scope: !5812)
!5824 = !DILocation(line: 2235, column: 4, scope: !5825)
!5825 = distinct !DILexicalBlock(scope: !5806, file: !3, line: 2235, column: 4)
!5826 = !DILocation(line: 2235, column: 4, scope: !5827)
!5827 = distinct !DILexicalBlock(scope: !5825, file: !3, line: 2235, column: 4)
!5828 = !DILocation(line: 2236, column: 35, scope: !5829)
!5829 = distinct !DILexicalBlock(scope: !5827, file: !3, line: 2235, column: 40)
!5830 = !DILocation(line: 2237, column: 35, scope: !5829)
!5831 = !DILocation(line: 2238, column: 35, scope: !5829)
!5832 = !DILocation(line: 2238, column: 56, scope: !5829)
!5833 = !DILocation(line: 2236, column: 5, scope: !5829)
!5834 = !DILocation(line: 2239, column: 4, scope: !5829)
!5835 = distinct !{!5835, !5824, !5836}
!5836 = !DILocation(line: 2239, column: 4, scope: !5825)
!5837 = !DILocation(line: 2241, column: 14, scope: !5806)
!5838 = !DILocation(line: 2241, column: 12, scope: !5806)
!5839 = !DILocation(line: 2242, column: 3, scope: !5806)
!5840 = !DILocalVariable(name: "gs_iter", scope: !5841, file: !3, line: 2244, type: !5766)
!5841 = distinct !DILexicalBlock(scope: !5802, file: !3, line: 2243, column: 8)
!5842 = !DILocation(line: 2244, column: 17, scope: !5841)
!5843 = !DILocation(line: 2246, column: 4, scope: !5844)
!5844 = distinct !DILexicalBlock(scope: !5841, file: !3, line: 2246, column: 4)
!5845 = !DILocation(line: 2246, column: 4, scope: !5846)
!5846 = distinct !DILexicalBlock(scope: !5844, file: !3, line: 2246, column: 4)
!5847 = !DILocalVariable(name: "f", scope: !5848, file: !3, line: 2247, type: !5607)
!5848 = distinct !DILexicalBlock(scope: !5846, file: !3, line: 2246, column: 34)
!5849 = !DILocation(line: 2247, column: 13, scope: !5848)
!5850 = !DILocation(line: 2247, column: 17, scope: !5848)
!5851 = !DILocation(line: 2251, column: 10, scope: !5852)
!5852 = distinct !DILexicalBlock(scope: !5848, file: !3, line: 2251, column: 9)
!5853 = !DILocation(line: 2251, column: 9, scope: !5848)
!5854 = !DILocalVariable(name: "v", scope: !5855, file: !3, line: 2252, type: !5856)
!5855 = distinct !DILexicalBlock(scope: !5852, file: !3, line: 2251, column: 48)
!5856 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5542, size: 192, elements: !427)
!5857 = !DILocation(line: 2252, column: 14, scope: !5855)
!5858 = !DILocalVariable(name: "fmask", scope: !5855, file: !3, line: 2253, type: !176)
!5859 = !DILocation(line: 2253, column: 12, scope: !5855)
!5860 = !DILocalVariable(name: "i", scope: !5855, file: !3, line: 2254, type: !171)
!5861 = !DILocation(line: 2254, column: 10, scope: !5855)
!5862 = !DILocation(line: 2257, column: 32, scope: !5855)
!5863 = !DILocation(line: 2257, column: 35, scope: !5855)
!5864 = !DILocation(line: 2257, column: 6, scope: !5855)
!5865 = !DILocation(line: 2260, column: 13, scope: !5866)
!5866 = distinct !DILexicalBlock(scope: !5855, file: !3, line: 2260, column: 6)
!5867 = !DILocation(line: 2260, column: 11, scope: !5866)
!5868 = !DILocation(line: 2260, column: 18, scope: !5869)
!5869 = distinct !DILexicalBlock(scope: !5866, file: !3, line: 2260, column: 6)
!5870 = !DILocation(line: 2260, column: 20, scope: !5869)
!5871 = !DILocation(line: 2260, column: 6, scope: !5866)
!5872 = !DILocation(line: 2261, column: 16, scope: !5873)
!5873 = distinct !DILexicalBlock(scope: !5869, file: !3, line: 2260, column: 30)
!5874 = !DILocation(line: 2261, column: 13, scope: !5873)
!5875 = !DILocation(line: 2262, column: 6, scope: !5873)
!5876 = !DILocation(line: 2260, column: 26, scope: !5869)
!5877 = !DILocation(line: 2260, column: 6, scope: !5869)
!5878 = distinct !{!5878, !5871, !5879}
!5879 = !DILocation(line: 2262, column: 6, scope: !5866)
!5880 = !DILocation(line: 2263, column: 12, scope: !5855)
!5881 = !DILocation(line: 2265, column: 13, scope: !5882)
!5882 = distinct !DILexicalBlock(scope: !5855, file: !3, line: 2265, column: 6)
!5883 = !DILocation(line: 2265, column: 11, scope: !5882)
!5884 = !DILocation(line: 2265, column: 18, scope: !5885)
!5885 = distinct !DILexicalBlock(scope: !5882, file: !3, line: 2265, column: 6)
!5886 = !DILocation(line: 2265, column: 20, scope: !5885)
!5887 = !DILocation(line: 2265, column: 6, scope: !5882)
!5888 = !DILocation(line: 2266, column: 39, scope: !5889)
!5889 = distinct !DILexicalBlock(scope: !5885, file: !3, line: 2265, column: 30)
!5890 = !DILocation(line: 2266, column: 37, scope: !5889)
!5891 = !DILocation(line: 2266, column: 43, scope: !5889)
!5892 = !DILocation(line: 2267, column: 47, scope: !5889)
!5893 = !DILocation(line: 2267, column: 50, scope: !5889)
!5894 = !DILocation(line: 2268, column: 37, scope: !5889)
!5895 = !DILocation(line: 2268, column: 58, scope: !5889)
!5896 = !DILocation(line: 2266, column: 7, scope: !5889)
!5897 = !DILocation(line: 2269, column: 6, scope: !5889)
!5898 = !DILocation(line: 2265, column: 26, scope: !5885)
!5899 = !DILocation(line: 2265, column: 6, scope: !5885)
!5900 = distinct !{!5900, !5887, !5901}
!5901 = !DILocation(line: 2269, column: 6, scope: !5882)
!5902 = !DILocation(line: 2270, column: 5, scope: !5855)
!5903 = !DILocation(line: 2271, column: 4, scope: !5848)
!5904 = distinct !{!5904, !5843, !5905}
!5905 = !DILocation(line: 2271, column: 4, scope: !5844)
!5906 = !DILocation(line: 2273, column: 23, scope: !5841)
!5907 = !DILocation(line: 2273, column: 4, scope: !5841)
!5908 = !DILocation(line: 2273, column: 13, scope: !5841)
!5909 = !DILocation(line: 2273, column: 21, scope: !5841)
!5910 = !DILocation(line: 2276, column: 3, scope: !5799)
!5911 = !DILocation(line: 2279, column: 3, scope: !5799)
!5912 = !DILocation(line: 2279, column: 7, scope: !5799)
!5913 = !DILocation(line: 2279, column: 24, scope: !5799)
!5914 = !DILocation(line: 2280, column: 2, scope: !5799)
!5915 = !DILocation(line: 2283, column: 3, scope: !5916)
!5916 = distinct !DILexicalBlock(scope: !5796, file: !3, line: 2281, column: 7)
!5917 = !DILocation(line: 2283, column: 26, scope: !5916)
!5918 = !DILocation(line: 2283, column: 35, scope: !5916)
!5919 = !DILocation(line: 2284, column: 3, scope: !5916)
!5920 = !DILocation(line: 2284, column: 12, scope: !5916)
!5921 = !DILocation(line: 2284, column: 21, scope: !5916)
!5922 = !DILocation(line: 2285, column: 3, scope: !5916)
!5923 = !DILocation(line: 2288, column: 6, scope: !5924)
!5924 = distinct !DILexicalBlock(scope: !5520, file: !3, line: 2288, column: 6)
!5925 = !DILocation(line: 2288, column: 15, scope: !5924)
!5926 = !DILocation(line: 2288, column: 6, scope: !5520)
!5927 = !DILocalVariable(name: "use_short", scope: !5928, file: !3, line: 2289, type: !2281)
!5928 = distinct !DILexicalBlock(scope: !5924, file: !3, line: 2288, column: 23)
!5929 = !DILocation(line: 2289, column: 13, scope: !5928)
!5930 = !DILocation(line: 2289, column: 26, scope: !5928)
!5931 = !DILocation(line: 2289, column: 34, scope: !5928)
!5932 = !DILocation(line: 2292, column: 3, scope: !5928)
!5933 = !DILocation(line: 2292, column: 48, scope: !5928)
!5934 = !DILocation(line: 2292, column: 57, scope: !5928)
!5935 = !DILocation(line: 2293, column: 3, scope: !5928)
!5936 = !DILocation(line: 2294, column: 8, scope: !5928)
!5937 = !DILocation(line: 2296, column: 30, scope: !5928)
!5938 = !DILocation(line: 2296, column: 36, scope: !5928)
!5939 = !DILocation(line: 2296, column: 34, scope: !5928)
!5940 = !DILocation(line: 2300, column: 14, scope: !5928)
!5941 = !DILocation(line: 2300, column: 12, scope: !5928)
!5942 = !DILocation(line: 2301, column: 7, scope: !5943)
!5943 = distinct !DILexicalBlock(scope: !5928, file: !3, line: 2301, column: 7)
!5944 = !DILocation(line: 2301, column: 7, scope: !5928)
!5945 = !DILocalVariable(name: "gs_iter", scope: !5946, file: !3, line: 2302, type: !5766)
!5946 = distinct !DILexicalBlock(scope: !5943, file: !3, line: 2301, column: 17)
!5947 = !DILocation(line: 2302, column: 17, scope: !5946)
!5948 = !DILocation(line: 2304, column: 4, scope: !5949)
!5949 = distinct !DILexicalBlock(scope: !5946, file: !3, line: 2304, column: 4)
!5950 = !DILocation(line: 2304, column: 4, scope: !5951)
!5951 = distinct !DILexicalBlock(scope: !5949, file: !3, line: 2304, column: 4)
!5952 = !DILocalVariable(name: "f", scope: !5953, file: !3, line: 2305, type: !5607)
!5953 = distinct !DILexicalBlock(scope: !5951, file: !3, line: 2304, column: 34)
!5954 = !DILocation(line: 2305, column: 13, scope: !5953)
!5955 = !DILocation(line: 2305, column: 17, scope: !5953)
!5956 = !DILocation(line: 2307, column: 10, scope: !5957)
!5957 = distinct !DILexicalBlock(scope: !5953, file: !3, line: 2307, column: 9)
!5958 = !DILocation(line: 2307, column: 9, scope: !5953)
!5959 = !DILocalVariable(name: "l_iter", scope: !5960, file: !3, line: 2308, type: !5585)
!5960 = distinct !DILexicalBlock(scope: !5957, file: !3, line: 2307, column: 48)
!5961 = !DILocation(line: 2308, column: 14, scope: !5960)
!5962 = !DILocalVariable(name: "l_first", scope: !5960, file: !3, line: 2309, type: !5585)
!5963 = !DILocation(line: 2309, column: 14, scope: !5960)
!5964 = !DILocation(line: 2311, column: 25, scope: !5960)
!5965 = !DILocation(line: 2311, column: 23, scope: !5960)
!5966 = !DILocation(line: 2311, column: 13, scope: !5960)
!5967 = !DILocation(line: 2312, column: 6, scope: !5960)
!5968 = !DILocalVariable(name: "v", scope: !5969, file: !3, line: 2313, type: !5542)
!5969 = distinct !DILexicalBlock(scope: !5960, file: !3, line: 2312, column: 9)
!5970 = !DILocation(line: 2313, column: 15, scope: !5969)
!5971 = !DILocation(line: 2313, column: 19, scope: !5969)
!5972 = !DILocation(line: 2313, column: 27, scope: !5969)
!5973 = !DILocation(line: 2314, column: 11, scope: !5974)
!5974 = distinct !DILexicalBlock(scope: !5969, file: !3, line: 2314, column: 11)
!5975 = !DILocation(line: 2314, column: 11, scope: !5969)
!5976 = !DILocalVariable(name: "elem", scope: !5977, file: !3, line: 2315, type: !4470)
!5977 = distinct !DILexicalBlock(scope: !5974, file: !3, line: 2314, column: 22)
!5978 = !DILocation(line: 2315, column: 24, scope: !5977)
!5979 = !DILocation(line: 2315, column: 31, scope: !5977)
!5980 = !DILocation(line: 2316, column: 18, scope: !5977)
!5981 = !DILocation(line: 2316, column: 10, scope: !5977)
!5982 = !DILocation(line: 2316, column: 16, scope: !5977)
!5983 = !DILocation(line: 2317, column: 12, scope: !5977)
!5984 = !DILocation(line: 2318, column: 19, scope: !5977)
!5985 = !DILocation(line: 2318, column: 17, scope: !5977)
!5986 = !DILocation(line: 2319, column: 7, scope: !5977)
!5987 = !DILocalVariable(name: "elem", scope: !5988, file: !3, line: 2321, type: !178)
!5988 = distinct !DILexicalBlock(scope: !5974, file: !3, line: 2320, column: 12)
!5989 = !DILocation(line: 2321, column: 22, scope: !5988)
!5990 = !DILocation(line: 2321, column: 29, scope: !5988)
!5991 = !DILocation(line: 2322, column: 18, scope: !5988)
!5992 = !DILocation(line: 2322, column: 10, scope: !5988)
!5993 = !DILocation(line: 2322, column: 16, scope: !5988)
!5994 = !DILocation(line: 2323, column: 12, scope: !5988)
!5995 = !DILocation(line: 2324, column: 19, scope: !5988)
!5996 = !DILocation(line: 2324, column: 17, scope: !5988)
!5997 = !DILocation(line: 2326, column: 6, scope: !5969)
!5998 = !DILocation(line: 2326, column: 25, scope: !5960)
!5999 = !DILocation(line: 2326, column: 33, scope: !5960)
!6000 = !DILocation(line: 2326, column: 23, scope: !5960)
!6001 = !DILocation(line: 2326, column: 42, scope: !5960)
!6002 = !DILocation(line: 2326, column: 39, scope: !5960)
!6003 = distinct !{!6003, !5967, !6004}
!6004 = !DILocation(line: 2326, column: 49, scope: !5960)
!6005 = !DILocation(line: 2327, column: 5, scope: !5960)
!6006 = !DILocation(line: 2328, column: 4, scope: !5953)
!6007 = distinct !{!6007, !5948, !6008}
!6008 = !DILocation(line: 2328, column: 4, scope: !5949)
!6009 = !DILocation(line: 2330, column: 4, scope: !5946)
!6010 = !DILocation(line: 2332, column: 23, scope: !5946)
!6011 = !DILocation(line: 2332, column: 4, scope: !5946)
!6012 = !DILocation(line: 2332, column: 13, scope: !5946)
!6013 = !DILocation(line: 2332, column: 21, scope: !5946)
!6014 = !DILocation(line: 2333, column: 27, scope: !5946)
!6015 = !DILocation(line: 2333, column: 4, scope: !5946)
!6016 = !DILocation(line: 2333, column: 13, scope: !5946)
!6017 = !DILocation(line: 2333, column: 24, scope: !5946)
!6018 = !DILocation(line: 2336, column: 3, scope: !5946)
!6019 = !DILocation(line: 2339, column: 4, scope: !6020)
!6020 = distinct !DILexicalBlock(scope: !5943, file: !3, line: 2337, column: 8)
!6021 = !DILocation(line: 2339, column: 27, scope: !6020)
!6022 = !DILocation(line: 2339, column: 36, scope: !6020)
!6023 = !DILocation(line: 2340, column: 4, scope: !6020)
!6024 = !DILocation(line: 2340, column: 13, scope: !6020)
!6025 = !DILocation(line: 2340, column: 23, scope: !6020)
!6026 = !DILocation(line: 2342, column: 2, scope: !5928)
!6027 = !DILocation(line: 2343, column: 1, scope: !5520)
!6028 = distinct !DISubprogram(name: "gpu_bmesh_face_visible_count", scope: !3, file: !3, line: 2145, type: !6029, scopeLine: 2146, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1345)
!6029 = !DISubroutineType(types: !6030)
!6030 = !{!171, !5676}
!6031 = !DILocalVariable(name: "bm_faces", arg: 1, scope: !6028, file: !3, line: 2145, type: !5676)
!6032 = !DILocation(line: 2145, column: 47, scope: !6028)
!6033 = !DILocalVariable(name: "gh_iter", scope: !6028, file: !3, line: 2147, type: !5766)
!6034 = !DILocation(line: 2147, column: 15, scope: !6028)
!6035 = !DILocalVariable(name: "totface", scope: !6028, file: !3, line: 2148, type: !171)
!6036 = !DILocation(line: 2148, column: 6, scope: !6028)
!6037 = !DILocation(line: 2150, column: 2, scope: !6038)
!6038 = distinct !DILexicalBlock(scope: !6028, file: !3, line: 2150, column: 2)
!6039 = !DILocation(line: 2150, column: 2, scope: !6040)
!6040 = distinct !DILexicalBlock(scope: !6038, file: !3, line: 2150, column: 2)
!6041 = !DILocalVariable(name: "f", scope: !6042, file: !3, line: 2151, type: !5607)
!6042 = distinct !DILexicalBlock(scope: !6040, file: !3, line: 2150, column: 32)
!6043 = !DILocation(line: 2151, column: 11, scope: !6042)
!6044 = !DILocation(line: 2151, column: 15, scope: !6042)
!6045 = !DILocation(line: 2153, column: 8, scope: !6046)
!6046 = distinct !DILexicalBlock(scope: !6042, file: !3, line: 2153, column: 7)
!6047 = !DILocation(line: 2153, column: 7, scope: !6042)
!6048 = !DILocation(line: 2154, column: 11, scope: !6046)
!6049 = !DILocation(line: 2154, column: 4, scope: !6046)
!6050 = !DILocation(line: 2155, column: 2, scope: !6042)
!6051 = distinct !{!6051, !6037, !6052}
!6052 = !DILocation(line: 2155, column: 2, scope: !6038)
!6053 = !DILocation(line: 2157, column: 9, scope: !6028)
!6054 = !DILocation(line: 2157, column: 2, scope: !6028)
!6055 = distinct !DISubprogram(name: "gpu_bmesh_vert_visible_count", scope: !3, file: !3, line: 2124, type: !6056, scopeLine: 2126, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1345)
!6056 = !DISubroutineType(types: !6057)
!6057 = !{!171, !5676, !5676}
!6058 = !DILocalVariable(name: "bm_unique_verts", arg: 1, scope: !6055, file: !3, line: 2124, type: !5676)
!6059 = !DILocation(line: 2124, column: 47, scope: !6055)
!6060 = !DILocalVariable(name: "bm_other_verts", arg: 2, scope: !6055, file: !3, line: 2125, type: !5676)
!6061 = !DILocation(line: 2125, column: 47, scope: !6055)
!6062 = !DILocalVariable(name: "gs_iter", scope: !6055, file: !3, line: 2127, type: !5766)
!6063 = !DILocation(line: 2127, column: 15, scope: !6055)
!6064 = !DILocalVariable(name: "totvert", scope: !6055, file: !3, line: 2128, type: !171)
!6065 = !DILocation(line: 2128, column: 6, scope: !6055)
!6066 = !DILocation(line: 2130, column: 2, scope: !6067)
!6067 = distinct !DILexicalBlock(scope: !6055, file: !3, line: 2130, column: 2)
!6068 = !DILocation(line: 2130, column: 2, scope: !6069)
!6069 = distinct !DILexicalBlock(scope: !6067, file: !3, line: 2130, column: 2)
!6070 = !DILocalVariable(name: "v", scope: !6071, file: !3, line: 2131, type: !5542)
!6071 = distinct !DILexicalBlock(scope: !6069, file: !3, line: 2130, column: 39)
!6072 = !DILocation(line: 2131, column: 11, scope: !6071)
!6073 = !DILocation(line: 2131, column: 15, scope: !6071)
!6074 = !DILocation(line: 2132, column: 8, scope: !6075)
!6075 = distinct !DILexicalBlock(scope: !6071, file: !3, line: 2132, column: 7)
!6076 = !DILocation(line: 2132, column: 7, scope: !6071)
!6077 = !DILocation(line: 2133, column: 11, scope: !6075)
!6078 = !DILocation(line: 2133, column: 4, scope: !6075)
!6079 = !DILocation(line: 2134, column: 2, scope: !6071)
!6080 = distinct !{!6080, !6066, !6081}
!6081 = !DILocation(line: 2134, column: 2, scope: !6067)
!6082 = !DILocation(line: 2135, column: 2, scope: !6083)
!6083 = distinct !DILexicalBlock(scope: !6055, file: !3, line: 2135, column: 2)
!6084 = !DILocation(line: 2135, column: 2, scope: !6085)
!6085 = distinct !DILexicalBlock(scope: !6083, file: !3, line: 2135, column: 2)
!6086 = !DILocalVariable(name: "v", scope: !6087, file: !3, line: 2136, type: !5542)
!6087 = distinct !DILexicalBlock(scope: !6085, file: !3, line: 2135, column: 38)
!6088 = !DILocation(line: 2136, column: 11, scope: !6087)
!6089 = !DILocation(line: 2136, column: 15, scope: !6087)
!6090 = !DILocation(line: 2137, column: 8, scope: !6091)
!6091 = distinct !DILexicalBlock(scope: !6087, file: !3, line: 2137, column: 7)
!6092 = !DILocation(line: 2137, column: 7, scope: !6087)
!6093 = !DILocation(line: 2138, column: 11, scope: !6091)
!6094 = !DILocation(line: 2138, column: 4, scope: !6091)
!6095 = !DILocation(line: 2139, column: 2, scope: !6087)
!6096 = distinct !{!6096, !6082, !6097}
!6097 = !DILocation(line: 2139, column: 2, scope: !6083)
!6098 = !DILocation(line: 2141, column: 9, scope: !6055)
!6099 = !DILocation(line: 2141, column: 2, scope: !6055)
!6100 = distinct !DISubprogram(name: "BLI_gsetIterator_init", scope: !186, file: !186, line: 216, type: !6101, scopeLine: 216, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1345)
!6101 = !DISubroutineType(types: !6102)
!6102 = !{null, !6103, !5676}
!6103 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5766, size: 64)
!6104 = !DILocalVariable(name: "gsi", arg: 1, scope: !6100, file: !186, line: 216, type: !6103)
!6105 = !DILocation(line: 216, column: 53, scope: !6100)
!6106 = !DILocalVariable(name: "gs", arg: 2, scope: !6100, file: !186, line: 216, type: !5676)
!6107 = !DILocation(line: 216, column: 64, scope: !6100)
!6108 = !DILocation(line: 216, column: 110, scope: !6100)
!6109 = !DILocation(line: 216, column: 93, scope: !6100)
!6110 = !DILocation(line: 216, column: 124, scope: !6100)
!6111 = !DILocation(line: 216, column: 115, scope: !6100)
!6112 = !DILocation(line: 216, column: 70, scope: !6100)
!6113 = !DILocation(line: 216, column: 129, scope: !6100)
!6114 = distinct !DISubprogram(name: "BLI_gsetIterator_getKey", scope: !186, file: !186, line: 218, type: !6115, scopeLine: 218, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1345)
!6115 = !DISubroutineType(types: !6116)
!6116 = !{!167, !6103}
!6117 = !DILocalVariable(name: "gsi", arg: 1, scope: !6114, file: !186, line: 218, type: !6103)
!6118 = !DILocation(line: 218, column: 56, scope: !6114)
!6119 = !DILocation(line: 218, column: 112, scope: !6114)
!6120 = !DILocation(line: 218, column: 95, scope: !6114)
!6121 = !DILocation(line: 218, column: 70, scope: !6114)
!6122 = !DILocation(line: 218, column: 63, scope: !6114)
!6123 = distinct !DISubprogram(name: "BLI_gsetIterator_done", scope: !186, file: !186, line: 220, type: !6124, scopeLine: 220, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1345)
!6124 = !DISubroutineType(types: !6125)
!6125 = !{!166, !6103}
!6126 = !DILocalVariable(name: "gsi", arg: 1, scope: !6123, file: !186, line: 220, type: !6103)
!6127 = !DILocation(line: 220, column: 53, scope: !6123)
!6128 = !DILocation(line: 220, column: 107, scope: !6123)
!6129 = !DILocation(line: 220, column: 90, scope: !6123)
!6130 = !DILocation(line: 220, column: 67, scope: !6123)
!6131 = !DILocation(line: 220, column: 60, scope: !6123)
!6132 = distinct !DISubprogram(name: "gpu_bmesh_vert_to_buffer_copy", scope: !3, file: !3, line: 2093, type: !6133, scopeLine: 2100, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1345)
!6133 = !DISubroutineType(types: !6134)
!6134 = !{null, !5542, !3996, !170, !1177, !1177, !2281, !1177}
!6135 = !DILocalVariable(name: "v", arg: 1, scope: !6132, file: !3, line: 2093, type: !5542)
!6136 = !DILocation(line: 2093, column: 51, scope: !6132)
!6137 = !DILocalVariable(name: "vert_data", arg: 2, scope: !6132, file: !3, line: 2094, type: !3996)
!6138 = !DILocation(line: 2094, column: 63, scope: !6132)
!6139 = !DILocalVariable(name: "v_index", arg: 3, scope: !6132, file: !3, line: 2095, type: !170)
!6140 = !DILocation(line: 2095, column: 48, scope: !6132)
!6141 = !DILocalVariable(name: "fno", arg: 4, scope: !6132, file: !3, line: 2096, type: !1177)
!6142 = !DILocation(line: 2096, column: 55, scope: !6132)
!6143 = !DILocalVariable(name: "fmask", arg: 5, scope: !6132, file: !3, line: 2097, type: !1177)
!6144 = !DILocation(line: 2097, column: 56, scope: !6132)
!6145 = !DILocalVariable(name: "cd_vert_mask_offset", arg: 6, scope: !6132, file: !3, line: 2098, type: !2281)
!6146 = !DILocation(line: 2098, column: 53, scope: !6132)
!6147 = !DILocalVariable(name: "diffuse_color", arg: 7, scope: !6132, file: !3, line: 2099, type: !1177)
!6148 = !DILocation(line: 2099, column: 55, scope: !6132)
!6149 = !DILocation(line: 2101, column: 7, scope: !6150)
!6150 = distinct !DILexicalBlock(scope: !6132, file: !3, line: 2101, column: 6)
!6151 = !DILocation(line: 2101, column: 6, scope: !6132)
!6152 = !DILocalVariable(name: "vd", scope: !6153, file: !3, line: 2102, type: !3996)
!6153 = distinct !DILexicalBlock(scope: !6150, file: !3, line: 2101, column: 45)
!6154 = !DILocation(line: 2102, column: 23, scope: !6153)
!6155 = !DILocation(line: 2102, column: 29, scope: !6153)
!6156 = !DILocation(line: 2102, column: 40, scope: !6153)
!6157 = !DILocation(line: 2102, column: 39, scope: !6153)
!6158 = !DILocation(line: 2105, column: 14, scope: !6153)
!6159 = !DILocation(line: 2105, column: 18, scope: !6153)
!6160 = !DILocation(line: 2105, column: 22, scope: !6153)
!6161 = !DILocation(line: 2105, column: 25, scope: !6153)
!6162 = !DILocation(line: 2105, column: 3, scope: !6153)
!6163 = !DILocation(line: 2106, column: 28, scope: !6153)
!6164 = !DILocation(line: 2106, column: 32, scope: !6153)
!6165 = !DILocation(line: 2106, column: 36, scope: !6153)
!6166 = !DILocation(line: 2106, column: 42, scope: !6153)
!6167 = !DILocation(line: 2106, column: 48, scope: !6153)
!6168 = !DILocation(line: 2106, column: 51, scope: !6153)
!6169 = !DILocation(line: 2106, column: 3, scope: !6153)
!6170 = !DILocation(line: 2109, column: 11, scope: !6153)
!6171 = !DILocation(line: 2109, column: 20, scope: !6153)
!6172 = !DILocation(line: 2109, column: 19, scope: !6153)
!6173 = !DILocation(line: 2110, column: 19, scope: !6153)
!6174 = !DILocation(line: 2111, column: 11, scope: !6153)
!6175 = !DILocation(line: 2112, column: 11, scope: !6153)
!6176 = !DILocation(line: 2112, column: 15, scope: !6153)
!6177 = !DILocation(line: 2108, column: 3, scope: !6153)
!6178 = !DILocation(line: 2117, column: 3, scope: !6153)
!6179 = !DILocation(line: 2119, column: 5, scope: !6153)
!6180 = !DILocation(line: 2119, column: 13, scope: !6153)
!6181 = !DILocation(line: 2120, column: 2, scope: !6153)
!6182 = !DILocation(line: 2121, column: 1, scope: !6132)
!6183 = distinct !DISubprogram(name: "BLI_gsetIterator_step", scope: !186, file: !186, line: 219, type: !6184, scopeLine: 219, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1345)
!6184 = !DISubroutineType(types: !6185)
!6185 = !{null, !6103}
!6186 = !DILocalVariable(name: "gsi", arg: 1, scope: !6183, file: !186, line: 219, type: !6103)
!6187 = !DILocation(line: 219, column: 53, scope: !6183)
!6188 = !DILocation(line: 219, column: 100, scope: !6183)
!6189 = !DILocation(line: 219, column: 83, scope: !6183)
!6190 = !DILocation(line: 219, column: 60, scope: !6183)
!6191 = !DILocation(line: 219, column: 106, scope: !6183)
!6192 = distinct !DISubprogram(name: "_bm_elem_flag_test", scope: !6193, file: !6193, line: 42, type: !6194, scopeLine: 43, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1345)
!6193 = !DIFile(filename: "blender/source/blender/bmesh/intern/bmesh_inline.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!6194 = !DISubroutineType(types: !6195)
!6195 = !{!169, !6196, !5626}
!6196 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6197, size: 64)
!6197 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5547)
!6198 = !DILocalVariable(name: "head", arg: 1, scope: !6192, file: !6193, line: 42, type: !6196)
!6199 = !DILocation(line: 42, column: 52, scope: !6192)
!6200 = !DILocalVariable(name: "hflag", arg: 2, scope: !6192, file: !6193, line: 42, type: !5626)
!6201 = !DILocation(line: 42, column: 69, scope: !6192)
!6202 = !DILocation(line: 44, column: 9, scope: !6192)
!6203 = !DILocation(line: 44, column: 15, scope: !6192)
!6204 = !DILocation(line: 44, column: 23, scope: !6192)
!6205 = !DILocation(line: 44, column: 21, scope: !6192)
!6206 = !DILocation(line: 44, column: 2, scope: !6192)
!6207 = distinct !DISubprogram(name: "_bm_elem_index_get", scope: !6193, file: !6193, line: 119, type: !6208, scopeLine: 120, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1345)
!6208 = !DISubroutineType(types: !6209)
!6209 = !{!171, !6196}
!6210 = !DILocalVariable(name: "head", arg: 1, scope: !6207, file: !6193, line: 119, type: !6196)
!6211 = !DILocation(line: 119, column: 51, scope: !6207)
!6212 = !DILocation(line: 121, column: 9, scope: !6207)
!6213 = !DILocation(line: 121, column: 15, scope: !6207)
!6214 = !DILocation(line: 121, column: 2, scope: !6207)
!6215 = distinct !DISubprogram(name: "GPU_build_bmesh_pbvh_buffers", scope: !3, file: !3, line: 2345, type: !6216, scopeLine: 2346, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1345)
!6216 = !DISubroutineType(types: !6217)
!6217 = !{!3944, !171}
!6218 = !DILocalVariable(name: "smooth_shading", arg: 1, scope: !6215, file: !3, line: 2345, type: !171)
!6219 = !DILocation(line: 2345, column: 52, scope: !6215)
!6220 = !DILocalVariable(name: "buffers", scope: !6215, file: !3, line: 2347, type: !3944)
!6221 = !DILocation(line: 2347, column: 20, scope: !6215)
!6222 = !DILocation(line: 2349, column: 12, scope: !6215)
!6223 = !DILocation(line: 2349, column: 10, scope: !6215)
!6224 = !DILocation(line: 2350, column: 6, scope: !6225)
!6225 = distinct !DILexicalBlock(scope: !6215, file: !3, line: 2350, column: 6)
!6226 = !DILocation(line: 2350, column: 6, scope: !6215)
!6227 = !DILocation(line: 2351, column: 3, scope: !6225)
!6228 = !DILocation(line: 2351, column: 23, scope: !6225)
!6229 = !DILocation(line: 2351, column: 32, scope: !6225)
!6230 = !DILocation(line: 2352, column: 2, scope: !6215)
!6231 = !DILocation(line: 2352, column: 22, scope: !6215)
!6232 = !DILocation(line: 2352, column: 31, scope: !6215)
!6233 = !DILocation(line: 2353, column: 2, scope: !6215)
!6234 = !DILocation(line: 2353, column: 11, scope: !6215)
!6235 = !DILocation(line: 2353, column: 21, scope: !6215)
!6236 = !DILocation(line: 2354, column: 20, scope: !6215)
!6237 = !DILocation(line: 2354, column: 2, scope: !6215)
!6238 = !DILocation(line: 2354, column: 11, scope: !6215)
!6239 = !DILocation(line: 2354, column: 18, scope: !6215)
!6240 = !DILocation(line: 2355, column: 2, scope: !6215)
!6241 = !DILocation(line: 2355, column: 11, scope: !6215)
!6242 = !DILocation(line: 2355, column: 30, scope: !6215)
!6243 = !DILocation(line: 2356, column: 2, scope: !6215)
!6244 = !DILocation(line: 2356, column: 11, scope: !6215)
!6245 = !DILocation(line: 2356, column: 23, scope: !6215)
!6246 = !DILocation(line: 2358, column: 9, scope: !6215)
!6247 = !DILocation(line: 2358, column: 2, scope: !6215)
!6248 = distinct !DISubprogram(name: "GPU_draw_pbvh_buffers", scope: !3, file: !3, line: 2563, type: !6249, scopeLine: 2565, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1345)
!6249 = !DISubroutineType(types: !6250)
!6250 = !{null, !3944, !1239, !166}
!6251 = !DILocalVariable(name: "buffers", arg: 1, scope: !6248, file: !3, line: 2563, type: !3944)
!6252 = !DILocation(line: 2563, column: 46, scope: !6248)
!6253 = !DILocalVariable(name: "setMaterial", arg: 2, scope: !6248, file: !3, line: 2563, type: !1239)
!6254 = !DILocation(line: 2563, column: 69, scope: !6248)
!6255 = !DILocalVariable(name: "wireframe", arg: 3, scope: !6248, file: !3, line: 2564, type: !166)
!6256 = !DILocation(line: 2564, column: 33, scope: !6248)
!6257 = !DILocation(line: 2568, column: 6, scope: !6258)
!6258 = distinct !DILexicalBlock(scope: !6248, file: !3, line: 2568, column: 6)
!6259 = !DILocation(line: 2568, column: 6, scope: !6248)
!6260 = !DILocation(line: 2569, column: 7, scope: !6261)
!6261 = distinct !DILexicalBlock(scope: !6262, file: !3, line: 2569, column: 7)
!6262 = distinct !DILexicalBlock(scope: !6258, file: !3, line: 2568, column: 19)
!6263 = !DILocation(line: 2569, column: 16, scope: !6261)
!6264 = !DILocation(line: 2569, column: 7, scope: !6262)
!6265 = !DILocalVariable(name: "f", scope: !6266, file: !3, line: 2570, type: !4183)
!6266 = distinct !DILexicalBlock(scope: !6261, file: !3, line: 2569, column: 25)
!6267 = !DILocation(line: 2570, column: 17, scope: !6266)
!6268 = !DILocation(line: 2570, column: 22, scope: !6266)
!6269 = !DILocation(line: 2570, column: 31, scope: !6266)
!6270 = !DILocation(line: 2570, column: 37, scope: !6266)
!6271 = !DILocation(line: 2570, column: 46, scope: !6266)
!6272 = !DILocation(line: 2571, column: 9, scope: !6273)
!6273 = distinct !DILexicalBlock(scope: !6266, file: !3, line: 2571, column: 8)
!6274 = !DILocation(line: 2571, column: 21, scope: !6273)
!6275 = !DILocation(line: 2571, column: 24, scope: !6273)
!6276 = !DILocation(line: 2571, column: 31, scope: !6273)
!6277 = !DILocation(line: 2571, column: 8, scope: !6266)
!6278 = !DILocation(line: 2572, column: 5, scope: !6273)
!6279 = !DILocation(line: 2573, column: 3, scope: !6266)
!6280 = !DILocation(line: 2574, column: 12, scope: !6281)
!6281 = distinct !DILexicalBlock(scope: !6261, file: !3, line: 2574, column: 12)
!6282 = !DILocation(line: 2574, column: 21, scope: !6281)
!6283 = !DILocation(line: 2574, column: 12, scope: !6261)
!6284 = !DILocalVariable(name: "f", scope: !6285, file: !3, line: 2575, type: !3962)
!6285 = distinct !DILexicalBlock(scope: !6281, file: !3, line: 2574, column: 30)
!6286 = !DILocation(line: 2575, column: 21, scope: !6285)
!6287 = !DILocation(line: 2575, column: 26, scope: !6285)
!6288 = !DILocation(line: 2575, column: 35, scope: !6285)
!6289 = !DILocation(line: 2575, column: 50, scope: !6285)
!6290 = !DILocation(line: 2575, column: 59, scope: !6285)
!6291 = !DILocation(line: 2576, column: 9, scope: !6292)
!6292 = distinct !DILexicalBlock(scope: !6285, file: !3, line: 2576, column: 8)
!6293 = !DILocation(line: 2576, column: 21, scope: !6292)
!6294 = !DILocation(line: 2576, column: 24, scope: !6292)
!6295 = !DILocation(line: 2576, column: 31, scope: !6292)
!6296 = !DILocation(line: 2576, column: 8, scope: !6285)
!6297 = !DILocation(line: 2577, column: 5, scope: !6292)
!6298 = !DILocation(line: 2578, column: 3, scope: !6285)
!6299 = !DILocation(line: 2580, column: 9, scope: !6300)
!6300 = distinct !DILexicalBlock(scope: !6301, file: !3, line: 2580, column: 8)
!6301 = distinct !DILexicalBlock(scope: !6281, file: !3, line: 2579, column: 8)
!6302 = !DILocation(line: 2580, column: 8, scope: !6301)
!6303 = !DILocation(line: 2581, column: 5, scope: !6300)
!6304 = !DILocation(line: 2583, column: 2, scope: !6262)
!6305 = !DILocation(line: 2585, column: 16, scope: !6248)
!6306 = !DILocation(line: 2585, column: 25, scope: !6248)
!6307 = !DILocation(line: 2585, column: 32, scope: !6248)
!6308 = !DILocation(line: 2585, column: 35, scope: !6248)
!6309 = !DILocation(line: 2585, column: 44, scope: !6248)
!6310 = !DILocation(line: 2585, column: 15, scope: !6248)
!6311 = !DILocation(line: 2585, column: 2, scope: !6248)
!6312 = !DILocation(line: 2587, column: 6, scope: !6313)
!6313 = distinct !DILexicalBlock(scope: !6248, file: !3, line: 2587, column: 6)
!6314 = !DILocation(line: 2587, column: 15, scope: !6313)
!6315 = !DILocation(line: 2587, column: 6, scope: !6248)
!6316 = !DILocation(line: 2588, column: 3, scope: !6317)
!6317 = distinct !DILexicalBlock(scope: !6313, file: !3, line: 2587, column: 25)
!6318 = !DILocation(line: 2589, column: 8, scope: !6319)
!6319 = distinct !DILexicalBlock(scope: !6317, file: !3, line: 2589, column: 7)
!6320 = !DILocation(line: 2589, column: 7, scope: !6317)
!6321 = !DILocation(line: 2590, column: 4, scope: !6322)
!6322 = distinct !DILexicalBlock(scope: !6319, file: !3, line: 2589, column: 19)
!6323 = !DILocation(line: 2591, column: 4, scope: !6322)
!6324 = !DILocation(line: 2592, column: 3, scope: !6322)
!6325 = !DILocation(line: 2594, column: 3, scope: !6317)
!6326 = !DILocation(line: 2594, column: 40, scope: !6317)
!6327 = !DILocation(line: 2594, column: 49, scope: !6317)
!6328 = !DILocation(line: 2596, column: 7, scope: !6329)
!6329 = distinct !DILexicalBlock(scope: !6317, file: !3, line: 2596, column: 7)
!6330 = !DILocation(line: 2596, column: 16, scope: !6329)
!6331 = !DILocation(line: 2596, column: 7, scope: !6317)
!6332 = !DILocation(line: 2597, column: 4, scope: !6329)
!6333 = !DILocation(line: 2597, column: 49, scope: !6329)
!6334 = !DILocation(line: 2597, column: 58, scope: !6329)
!6335 = !DILocation(line: 2599, column: 7, scope: !6336)
!6336 = distinct !DILexicalBlock(scope: !6317, file: !3, line: 2599, column: 7)
!6337 = !DILocation(line: 2599, column: 7, scope: !6317)
!6338 = !DILocation(line: 2600, column: 4, scope: !6336)
!6339 = !DILocation(line: 2602, column: 7, scope: !6340)
!6340 = distinct !DILexicalBlock(scope: !6317, file: !3, line: 2602, column: 7)
!6341 = !DILocation(line: 2602, column: 16, scope: !6340)
!6342 = !DILocation(line: 2602, column: 7, scope: !6317)
!6343 = !DILocalVariable(name: "offset", scope: !6344, file: !3, line: 2603, type: !5625)
!6344 = distinct !DILexicalBlock(scope: !6340, file: !3, line: 2602, column: 26)
!6345 = !DILocation(line: 2603, column: 16, scope: !6344)
!6346 = !DILocalVariable(name: "i", scope: !6344, file: !3, line: 2604, type: !171)
!6347 = !DILocation(line: 2604, column: 8, scope: !6344)
!6348 = !DILocalVariable(name: "last", scope: !6344, file: !3, line: 2604, type: !171)
!6349 = !DILocation(line: 2604, column: 11, scope: !6344)
!6350 = !DILocation(line: 2604, column: 18, scope: !6344)
!6351 = !DILocation(line: 2604, column: 27, scope: !6344)
!6352 = !DILocation(line: 2604, column: 44, scope: !6344)
!6353 = !DILocation(line: 2604, column: 53, scope: !6344)
!6354 = !DILocation(line: 2605, column: 11, scope: !6355)
!6355 = distinct !DILexicalBlock(scope: !6344, file: !3, line: 2605, column: 4)
!6356 = !DILocation(line: 2605, column: 9, scope: !6355)
!6357 = !DILocation(line: 2605, column: 16, scope: !6358)
!6358 = distinct !DILexicalBlock(scope: !6355, file: !3, line: 2605, column: 4)
!6359 = !DILocation(line: 2605, column: 20, scope: !6358)
!6360 = !DILocation(line: 2605, column: 18, scope: !6358)
!6361 = !DILocation(line: 2605, column: 4, scope: !6355)
!6362 = !DILocation(line: 2607, column: 21, scope: !6363)
!6363 = distinct !DILexicalBlock(scope: !6358, file: !3, line: 2605, column: 31)
!6364 = !DILocation(line: 2607, column: 28, scope: !6363)
!6365 = !DILocation(line: 2606, column: 5, scope: !6363)
!6366 = !DILocation(line: 2609, column: 21, scope: !6363)
!6367 = !DILocation(line: 2609, column: 28, scope: !6363)
!6368 = !DILocation(line: 2608, column: 5, scope: !6363)
!6369 = !DILocation(line: 2611, column: 20, scope: !6363)
!6370 = !DILocation(line: 2611, column: 27, scope: !6363)
!6371 = !DILocation(line: 2610, column: 5, scope: !6363)
!6372 = !DILocation(line: 2613, column: 34, scope: !6363)
!6373 = !DILocation(line: 2613, column: 43, scope: !6363)
!6374 = !DILocation(line: 2613, column: 52, scope: !6363)
!6375 = !DILocation(line: 2613, column: 57, scope: !6363)
!6376 = !DILocation(line: 2613, column: 66, scope: !6363)
!6377 = !DILocation(line: 2613, column: 5, scope: !6363)
!6378 = !DILocation(line: 2615, column: 15, scope: !6363)
!6379 = !DILocation(line: 2615, column: 24, scope: !6363)
!6380 = !DILocation(line: 2615, column: 32, scope: !6363)
!6381 = !DILocation(line: 2615, column: 42, scope: !6363)
!6382 = !DILocation(line: 2615, column: 12, scope: !6363)
!6383 = !DILocation(line: 2616, column: 4, scope: !6363)
!6384 = !DILocation(line: 2605, column: 27, scope: !6358)
!6385 = !DILocation(line: 2605, column: 4, scope: !6358)
!6386 = distinct !{!6386, !6361, !6387}
!6387 = !DILocation(line: 2616, column: 4, scope: !6355)
!6388 = !DILocation(line: 2617, column: 3, scope: !6344)
!6389 = !DILocation(line: 2618, column: 12, scope: !6390)
!6390 = distinct !DILexicalBlock(scope: !6340, file: !3, line: 2618, column: 12)
!6391 = !DILocation(line: 2618, column: 21, scope: !6390)
!6392 = !DILocation(line: 2618, column: 12, scope: !6340)
!6393 = !DILocalVariable(name: "totelem", scope: !6394, file: !3, line: 2619, type: !171)
!6394 = distinct !DILexicalBlock(scope: !6390, file: !3, line: 2618, column: 30)
!6395 = !DILocation(line: 2619, column: 8, scope: !6394)
!6396 = !DILocation(line: 2619, column: 18, scope: !6394)
!6397 = !DILocation(line: 2619, column: 27, scope: !6394)
!6398 = !DILocation(line: 2619, column: 35, scope: !6394)
!6399 = !DILocation(line: 2621, column: 4, scope: !6394)
!6400 = !DILocation(line: 2623, column: 4, scope: !6394)
!6401 = !DILocation(line: 2625, column: 4, scope: !6394)
!6402 = !DILocation(line: 2628, column: 8, scope: !6403)
!6403 = distinct !DILexicalBlock(scope: !6394, file: !3, line: 2628, column: 8)
!6404 = !DILocation(line: 2628, column: 17, scope: !6403)
!6405 = !DILocation(line: 2628, column: 8, scope: !6394)
!6406 = !DILocation(line: 2629, column: 34, scope: !6403)
!6407 = !DILocation(line: 2629, column: 43, scope: !6403)
!6408 = !DILocation(line: 2629, column: 52, scope: !6403)
!6409 = !DILocation(line: 2629, column: 5, scope: !6403)
!6410 = !DILocation(line: 2631, column: 35, scope: !6403)
!6411 = !DILocation(line: 2631, column: 5, scope: !6403)
!6412 = !DILocation(line: 2632, column: 3, scope: !6394)
!6413 = !DILocation(line: 2634, column: 7, scope: !6414)
!6414 = distinct !DILexicalBlock(scope: !6317, file: !3, line: 2634, column: 7)
!6415 = !DILocation(line: 2634, column: 7, scope: !6317)
!6416 = !DILocation(line: 2635, column: 4, scope: !6414)
!6417 = !DILocation(line: 2637, column: 3, scope: !6317)
!6418 = !DILocation(line: 2638, column: 7, scope: !6419)
!6419 = distinct !DILexicalBlock(scope: !6317, file: !3, line: 2638, column: 7)
!6420 = !DILocation(line: 2638, column: 16, scope: !6419)
!6421 = !DILocation(line: 2638, column: 7, scope: !6317)
!6422 = !DILocation(line: 2639, column: 4, scope: !6419)
!6423 = !DILocation(line: 2641, column: 3, scope: !6317)
!6424 = !DILocation(line: 2642, column: 8, scope: !6425)
!6425 = distinct !DILexicalBlock(scope: !6317, file: !3, line: 2642, column: 7)
!6426 = !DILocation(line: 2642, column: 7, scope: !6317)
!6427 = !DILocation(line: 2643, column: 4, scope: !6428)
!6428 = distinct !DILexicalBlock(scope: !6425, file: !3, line: 2642, column: 19)
!6429 = !DILocation(line: 2644, column: 4, scope: !6428)
!6430 = !DILocation(line: 2645, column: 3, scope: !6428)
!6431 = !DILocation(line: 2646, column: 2, scope: !6317)
!6432 = !DILocation(line: 2648, column: 11, scope: !6433)
!6433 = distinct !DILexicalBlock(scope: !6313, file: !3, line: 2648, column: 11)
!6434 = !DILocation(line: 2648, column: 20, scope: !6433)
!6435 = !DILocation(line: 2648, column: 11, scope: !6313)
!6436 = !DILocation(line: 2649, column: 32, scope: !6437)
!6437 = distinct !DILexicalBlock(scope: !6433, file: !3, line: 2648, column: 29)
!6438 = !DILocation(line: 2649, column: 3, scope: !6437)
!6439 = !DILocation(line: 2650, column: 2, scope: !6437)
!6440 = !DILocation(line: 2651, column: 11, scope: !6441)
!6441 = distinct !DILexicalBlock(scope: !6433, file: !3, line: 2651, column: 11)
!6442 = !DILocation(line: 2651, column: 20, scope: !6441)
!6443 = !DILocation(line: 2651, column: 11, scope: !6433)
!6444 = !DILocation(line: 2652, column: 33, scope: !6445)
!6445 = distinct !DILexicalBlock(scope: !6441, file: !3, line: 2651, column: 29)
!6446 = !DILocation(line: 2652, column: 3, scope: !6445)
!6447 = !DILocation(line: 2653, column: 2, scope: !6445)
!6448 = !DILocation(line: 2654, column: 1, scope: !6248)
!6449 = distinct !DISubprogram(name: "gpu_colors_enable", scope: !3, file: !3, line: 1513, type: !6450, scopeLine: 1514, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1345)
!6450 = !DISubroutineType(types: !6451)
!6451 = !{null, !6452}
!6452 = !DIDerivedType(tag: DW_TAG_typedef, name: "VBO_State", file: !3, line: 1511, baseType: !158)
!6453 = !DILocalVariable(name: "vbo_state", arg: 1, scope: !6449, file: !3, line: 1513, type: !6452)
!6454 = !DILocation(line: 1513, column: 41, scope: !6449)
!6455 = !DILocation(line: 1515, column: 2, scope: !6449)
!6456 = !DILocation(line: 1516, column: 2, scope: !6449)
!6457 = !DILocation(line: 1517, column: 6, scope: !6458)
!6458 = distinct !DILexicalBlock(scope: !6449, file: !3, line: 1517, column: 6)
!6459 = !DILocation(line: 1517, column: 16, scope: !6458)
!6460 = !DILocation(line: 1517, column: 6, scope: !6449)
!6461 = !DILocation(line: 1518, column: 3, scope: !6458)
!6462 = !DILocation(line: 1519, column: 1, scope: !6449)
!6463 = distinct !DISubprogram(name: "gpu_colors_disable", scope: !3, file: !3, line: 1521, type: !6450, scopeLine: 1522, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1345)
!6464 = !DILocalVariable(name: "vbo_state", arg: 1, scope: !6463, file: !3, line: 1521, type: !6452)
!6465 = !DILocation(line: 1521, column: 42, scope: !6463)
!6466 = !DILocation(line: 1523, column: 2, scope: !6463)
!6467 = !DILocation(line: 1524, column: 6, scope: !6468)
!6468 = distinct !DILexicalBlock(scope: !6463, file: !3, line: 1524, column: 6)
!6469 = !DILocation(line: 1524, column: 16, scope: !6468)
!6470 = !DILocation(line: 1524, column: 6, scope: !6463)
!6471 = !DILocation(line: 1525, column: 3, scope: !6468)
!6472 = !DILocation(line: 1526, column: 1, scope: !6463)
!6473 = distinct !DISubprogram(name: "gpu_draw_buffers_legacy_mesh", scope: !3, file: !3, line: 2361, type: !6474, scopeLine: 2362, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1345)
!6474 = !DISubroutineType(types: !6475)
!6475 = !{null, !3944}
!6476 = !DILocalVariable(name: "buffers", arg: 1, scope: !6473, file: !3, line: 2361, type: !3944)
!6477 = !DILocation(line: 2361, column: 60, scope: !6473)
!6478 = !DILocalVariable(name: "mvert", scope: !6473, file: !3, line: 2363, type: !4300)
!6479 = !DILocation(line: 2363, column: 15, scope: !6473)
!6480 = !DILocation(line: 2363, column: 23, scope: !6473)
!6481 = !DILocation(line: 2363, column: 32, scope: !6473)
!6482 = !DILocalVariable(name: "i", scope: !6473, file: !3, line: 2364, type: !171)
!6483 = !DILocation(line: 2364, column: 6, scope: !6473)
!6484 = !DILocalVariable(name: "j", scope: !6473, file: !3, line: 2364, type: !171)
!6485 = !DILocation(line: 2364, column: 9, scope: !6473)
!6486 = !DILocalVariable(name: "has_mask", scope: !6473, file: !3, line: 2365, type: !2281)
!6487 = !DILocation(line: 2365, column: 12, scope: !6473)
!6488 = !DILocation(line: 2365, column: 24, scope: !6473)
!6489 = !DILocation(line: 2365, column: 33, scope: !6473)
!6490 = !DILocation(line: 2365, column: 39, scope: !6473)
!6491 = !DILocalVariable(name: "face", scope: !6473, file: !3, line: 2366, type: !4183)
!6492 = !DILocation(line: 2366, column: 15, scope: !6473)
!6493 = !DILocation(line: 2366, column: 23, scope: !6473)
!6494 = !DILocation(line: 2366, column: 32, scope: !6473)
!6495 = !DILocation(line: 2366, column: 38, scope: !6473)
!6496 = !DILocation(line: 2366, column: 47, scope: !6473)
!6497 = !DILocalVariable(name: "diffuse_color", scope: !6473, file: !3, line: 2367, type: !508)
!6498 = !DILocation(line: 2367, column: 8, scope: !6473)
!6499 = !DILocation(line: 2369, column: 6, scope: !6500)
!6500 = distinct !DILexicalBlock(scope: !6473, file: !3, line: 2369, column: 6)
!6501 = !DILocation(line: 2369, column: 15, scope: !6500)
!6502 = !DILocation(line: 2369, column: 6, scope: !6473)
!6503 = !DILocation(line: 2370, column: 41, scope: !6500)
!6504 = !DILocation(line: 2370, column: 58, scope: !6500)
!6505 = !DILocation(line: 2370, column: 22, scope: !6500)
!6506 = !DILocation(line: 2370, column: 39, scope: !6500)
!6507 = !DILocation(line: 2370, column: 3, scope: !6500)
!6508 = !DILocation(line: 2370, column: 20, scope: !6500)
!6509 = !DILocation(line: 2371, column: 11, scope: !6510)
!6510 = distinct !DILexicalBlock(scope: !6500, file: !3, line: 2371, column: 11)
!6511 = !DILocation(line: 2371, column: 20, scope: !6510)
!6512 = !DILocation(line: 2371, column: 11, scope: !6500)
!6513 = !DILocation(line: 2372, column: 28, scope: !6510)
!6514 = !DILocation(line: 2372, column: 34, scope: !6510)
!6515 = !DILocation(line: 2372, column: 41, scope: !6510)
!6516 = !DILocation(line: 2372, column: 46, scope: !6510)
!6517 = !DILocation(line: 2372, column: 3, scope: !6510)
!6518 = !DILocation(line: 2374, column: 6, scope: !6519)
!6519 = distinct !DILexicalBlock(scope: !6473, file: !3, line: 2374, column: 6)
!6520 = !DILocation(line: 2374, column: 6, scope: !6473)
!6521 = !DILocation(line: 2375, column: 3, scope: !6522)
!6522 = distinct !DILexicalBlock(scope: !6519, file: !3, line: 2374, column: 16)
!6523 = !DILocation(line: 2376, column: 2, scope: !6522)
!6524 = !DILocation(line: 2378, column: 9, scope: !6525)
!6525 = distinct !DILexicalBlock(scope: !6473, file: !3, line: 2378, column: 2)
!6526 = !DILocation(line: 2378, column: 7, scope: !6525)
!6527 = !DILocation(line: 2378, column: 14, scope: !6528)
!6528 = distinct !DILexicalBlock(scope: !6525, file: !3, line: 2378, column: 2)
!6529 = !DILocation(line: 2378, column: 18, scope: !6528)
!6530 = !DILocation(line: 2378, column: 27, scope: !6528)
!6531 = !DILocation(line: 2378, column: 16, scope: !6528)
!6532 = !DILocation(line: 2378, column: 2, scope: !6525)
!6533 = !DILocalVariable(name: "f", scope: !6534, file: !3, line: 2379, type: !1690)
!6534 = distinct !DILexicalBlock(scope: !6528, file: !3, line: 2378, column: 41)
!6535 = !DILocation(line: 2379, column: 10, scope: !6534)
!6536 = !DILocation(line: 2379, column: 14, scope: !6534)
!6537 = !DILocation(line: 2379, column: 23, scope: !6534)
!6538 = !DILocation(line: 2379, column: 31, scope: !6534)
!6539 = !DILocation(line: 2379, column: 40, scope: !6534)
!6540 = !DILocation(line: 2379, column: 53, scope: !6534)
!6541 = !DILocation(line: 2379, column: 29, scope: !6534)
!6542 = !DILocalVariable(name: "S", scope: !6534, file: !3, line: 2380, type: !171)
!6543 = !DILocation(line: 2380, column: 7, scope: !6534)
!6544 = !DILocation(line: 2380, column: 11, scope: !6534)
!6545 = !DILocation(line: 2380, column: 14, scope: !6534)
!6546 = !DILocalVariable(name: "fv", scope: !6534, file: !3, line: 2381, type: !178)
!6547 = !DILocation(line: 2381, column: 17, scope: !6534)
!6548 = !DILocation(line: 2381, column: 23, scope: !6534)
!6549 = !DILocation(line: 2381, column: 26, scope: !6534)
!6550 = !DILocation(line: 2383, column: 28, scope: !6551)
!6551 = distinct !DILexicalBlock(scope: !6534, file: !3, line: 2383, column: 7)
!6552 = !DILocation(line: 2383, column: 31, scope: !6551)
!6553 = !DILocation(line: 2383, column: 40, scope: !6551)
!6554 = !DILocation(line: 2383, column: 7, scope: !6551)
!6555 = !DILocation(line: 2383, column: 7, scope: !6534)
!6556 = !DILocation(line: 2384, column: 4, scope: !6551)
!6557 = !DILocation(line: 2386, column: 12, scope: !6534)
!6558 = !DILocation(line: 2386, column: 15, scope: !6534)
!6559 = !DILocation(line: 2386, column: 11, scope: !6534)
!6560 = !DILocation(line: 2386, column: 3, scope: !6534)
!6561 = !DILocation(line: 2388, column: 7, scope: !6562)
!6562 = distinct !DILexicalBlock(scope: !6534, file: !3, line: 2388, column: 7)
!6563 = !DILocation(line: 2388, column: 16, scope: !6562)
!6564 = !DILocation(line: 2388, column: 7, scope: !6534)
!6565 = !DILocation(line: 2389, column: 11, scope: !6566)
!6566 = distinct !DILexicalBlock(scope: !6567, file: !3, line: 2389, column: 4)
!6567 = distinct !DILexicalBlock(scope: !6562, file: !3, line: 2388, column: 24)
!6568 = !DILocation(line: 2389, column: 9, scope: !6566)
!6569 = !DILocation(line: 2389, column: 16, scope: !6570)
!6570 = distinct !DILexicalBlock(scope: !6566, file: !3, line: 2389, column: 4)
!6571 = !DILocation(line: 2389, column: 20, scope: !6570)
!6572 = !DILocation(line: 2389, column: 18, scope: !6570)
!6573 = !DILocation(line: 2389, column: 4, scope: !6566)
!6574 = !DILocation(line: 2390, column: 9, scope: !6575)
!6575 = distinct !DILexicalBlock(scope: !6576, file: !3, line: 2390, column: 9)
!6576 = distinct !DILexicalBlock(scope: !6570, file: !3, line: 2389, column: 28)
!6577 = !DILocation(line: 2390, column: 9, scope: !6576)
!6578 = !DILocation(line: 2391, column: 30, scope: !6579)
!6579 = distinct !DILexicalBlock(scope: !6575, file: !3, line: 2390, column: 19)
!6580 = !DILocation(line: 2391, column: 39, scope: !6579)
!6581 = !DILocation(line: 2391, column: 45, scope: !6579)
!6582 = !DILocation(line: 2391, column: 48, scope: !6579)
!6583 = !DILocation(line: 2391, column: 53, scope: !6579)
!6584 = !DILocation(line: 2391, column: 6, scope: !6579)
!6585 = !DILocation(line: 2392, column: 5, scope: !6579)
!6586 = !DILocation(line: 2393, column: 17, scope: !6576)
!6587 = !DILocation(line: 2393, column: 23, scope: !6576)
!6588 = !DILocation(line: 2393, column: 26, scope: !6576)
!6589 = !DILocation(line: 2393, column: 30, scope: !6576)
!6590 = !DILocation(line: 2393, column: 5, scope: !6576)
!6591 = !DILocation(line: 2394, column: 17, scope: !6576)
!6592 = !DILocation(line: 2394, column: 23, scope: !6576)
!6593 = !DILocation(line: 2394, column: 26, scope: !6576)
!6594 = !DILocation(line: 2394, column: 30, scope: !6576)
!6595 = !DILocation(line: 2394, column: 5, scope: !6576)
!6596 = !DILocation(line: 2395, column: 4, scope: !6576)
!6597 = !DILocation(line: 2389, column: 24, scope: !6570)
!6598 = !DILocation(line: 2389, column: 4, scope: !6570)
!6599 = distinct !{!6599, !6573, !6600}
!6600 = !DILocation(line: 2395, column: 4, scope: !6566)
!6601 = !DILocation(line: 2396, column: 3, scope: !6567)
!6602 = !DILocalVariable(name: "fno", scope: !6603, file: !3, line: 2398, type: !426)
!6603 = distinct !DILexicalBlock(scope: !6562, file: !3, line: 2397, column: 8)
!6604 = !DILocation(line: 2398, column: 10, scope: !6603)
!6605 = !DILocation(line: 2401, column: 8, scope: !6606)
!6606 = distinct !DILexicalBlock(scope: !6603, file: !3, line: 2401, column: 8)
!6607 = !DILocation(line: 2401, column: 11, scope: !6606)
!6608 = !DILocation(line: 2401, column: 8, scope: !6603)
!6609 = !DILocation(line: 2402, column: 20, scope: !6610)
!6610 = distinct !DILexicalBlock(scope: !6606, file: !3, line: 2401, column: 15)
!6611 = !DILocation(line: 2402, column: 25, scope: !6610)
!6612 = !DILocation(line: 2402, column: 31, scope: !6610)
!6613 = !DILocation(line: 2402, column: 38, scope: !6610)
!6614 = !DILocation(line: 2402, column: 42, scope: !6610)
!6615 = !DILocation(line: 2402, column: 48, scope: !6610)
!6616 = !DILocation(line: 2402, column: 55, scope: !6610)
!6617 = !DILocation(line: 2403, column: 20, scope: !6610)
!6618 = !DILocation(line: 2403, column: 26, scope: !6610)
!6619 = !DILocation(line: 2403, column: 33, scope: !6610)
!6620 = !DILocation(line: 2403, column: 37, scope: !6610)
!6621 = !DILocation(line: 2403, column: 43, scope: !6610)
!6622 = !DILocation(line: 2403, column: 50, scope: !6610)
!6623 = !DILocation(line: 2402, column: 5, scope: !6610)
!6624 = !DILocation(line: 2404, column: 4, scope: !6610)
!6625 = !DILocation(line: 2406, column: 19, scope: !6606)
!6626 = !DILocation(line: 2406, column: 24, scope: !6606)
!6627 = !DILocation(line: 2406, column: 30, scope: !6606)
!6628 = !DILocation(line: 2406, column: 37, scope: !6606)
!6629 = !DILocation(line: 2406, column: 41, scope: !6606)
!6630 = !DILocation(line: 2406, column: 47, scope: !6606)
!6631 = !DILocation(line: 2406, column: 54, scope: !6606)
!6632 = !DILocation(line: 2406, column: 58, scope: !6606)
!6633 = !DILocation(line: 2406, column: 64, scope: !6606)
!6634 = !DILocation(line: 2406, column: 71, scope: !6606)
!6635 = !DILocation(line: 2406, column: 5, scope: !6606)
!6636 = !DILocation(line: 2407, column: 16, scope: !6603)
!6637 = !DILocation(line: 2407, column: 4, scope: !6603)
!6638 = !DILocation(line: 2409, column: 8, scope: !6639)
!6639 = distinct !DILexicalBlock(scope: !6603, file: !3, line: 2409, column: 8)
!6640 = !DILocation(line: 2409, column: 8, scope: !6603)
!6641 = !DILocalVariable(name: "fmask", scope: !6642, file: !3, line: 2410, type: !176)
!6642 = distinct !DILexicalBlock(scope: !6639, file: !3, line: 2409, column: 18)
!6643 = !DILocation(line: 2410, column: 11, scope: !6642)
!6644 = !DILocation(line: 2413, column: 14, scope: !6642)
!6645 = !DILocation(line: 2413, column: 23, scope: !6642)
!6646 = !DILocation(line: 2413, column: 29, scope: !6642)
!6647 = !DILocation(line: 2414, column: 14, scope: !6642)
!6648 = !DILocation(line: 2414, column: 23, scope: !6642)
!6649 = !DILocation(line: 2414, column: 29, scope: !6642)
!6650 = !DILocation(line: 2413, column: 36, scope: !6642)
!6651 = !DILocation(line: 2415, column: 14, scope: !6642)
!6652 = !DILocation(line: 2415, column: 23, scope: !6642)
!6653 = !DILocation(line: 2415, column: 29, scope: !6642)
!6654 = !DILocation(line: 2414, column: 36, scope: !6642)
!6655 = !DILocation(line: 2413, column: 11, scope: !6642)
!6656 = !DILocation(line: 2416, column: 9, scope: !6657)
!6657 = distinct !DILexicalBlock(scope: !6642, file: !3, line: 2416, column: 9)
!6658 = !DILocation(line: 2416, column: 12, scope: !6657)
!6659 = !DILocation(line: 2416, column: 9, scope: !6642)
!6660 = !DILocation(line: 2417, column: 15, scope: !6657)
!6661 = !DILocation(line: 2417, column: 23, scope: !6657)
!6662 = !DILocation(line: 2417, column: 32, scope: !6657)
!6663 = !DILocation(line: 2417, column: 38, scope: !6657)
!6664 = !DILocation(line: 2417, column: 21, scope: !6657)
!6665 = !DILocation(line: 2417, column: 46, scope: !6657)
!6666 = !DILocation(line: 2417, column: 12, scope: !6657)
!6667 = !DILocation(line: 2417, column: 6, scope: !6657)
!6668 = !DILocation(line: 2419, column: 12, scope: !6657)
!6669 = !DILocation(line: 2420, column: 29, scope: !6642)
!6670 = !DILocation(line: 2420, column: 36, scope: !6642)
!6671 = !DILocation(line: 2420, column: 5, scope: !6642)
!6672 = !DILocation(line: 2421, column: 4, scope: !6642)
!6673 = !DILocation(line: 2423, column: 11, scope: !6674)
!6674 = distinct !DILexicalBlock(scope: !6603, file: !3, line: 2423, column: 4)
!6675 = !DILocation(line: 2423, column: 9, scope: !6674)
!6676 = !DILocation(line: 2423, column: 16, scope: !6677)
!6677 = distinct !DILexicalBlock(scope: !6674, file: !3, line: 2423, column: 4)
!6678 = !DILocation(line: 2423, column: 20, scope: !6677)
!6679 = !DILocation(line: 2423, column: 18, scope: !6677)
!6680 = !DILocation(line: 2423, column: 4, scope: !6674)
!6681 = !DILocation(line: 2424, column: 17, scope: !6677)
!6682 = !DILocation(line: 2424, column: 23, scope: !6677)
!6683 = !DILocation(line: 2424, column: 26, scope: !6677)
!6684 = !DILocation(line: 2424, column: 30, scope: !6677)
!6685 = !DILocation(line: 2424, column: 5, scope: !6677)
!6686 = !DILocation(line: 2423, column: 24, scope: !6677)
!6687 = !DILocation(line: 2423, column: 4, scope: !6677)
!6688 = distinct !{!6688, !6680, !6689}
!6689 = !DILocation(line: 2424, column: 32, scope: !6674)
!6690 = !DILocation(line: 2427, column: 3, scope: !6534)
!6691 = !DILocation(line: 2428, column: 2, scope: !6534)
!6692 = !DILocation(line: 2378, column: 36, scope: !6528)
!6693 = !DILocation(line: 2378, column: 2, scope: !6528)
!6694 = distinct !{!6694, !6532, !6695}
!6695 = !DILocation(line: 2428, column: 2, scope: !6525)
!6696 = !DILocation(line: 2430, column: 6, scope: !6697)
!6697 = distinct !DILexicalBlock(scope: !6473, file: !3, line: 2430, column: 6)
!6698 = !DILocation(line: 2430, column: 6, scope: !6473)
!6699 = !DILocation(line: 2431, column: 3, scope: !6700)
!6700 = distinct !DILexicalBlock(scope: !6697, file: !3, line: 2430, column: 16)
!6701 = !DILocation(line: 2432, column: 2, scope: !6700)
!6702 = !DILocation(line: 2433, column: 1, scope: !6473)
!6703 = distinct !DISubprogram(name: "gpu_draw_buffers_legacy_grids", scope: !3, file: !3, line: 2435, type: !6474, scopeLine: 2436, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1345)
!6704 = !DILocalVariable(name: "buffers", arg: 1, scope: !6703, file: !3, line: 2435, type: !3944)
!6705 = !DILocation(line: 2435, column: 61, scope: !6703)
!6706 = !DILocalVariable(name: "key", scope: !6703, file: !3, line: 2437, type: !4707)
!6707 = !DILocation(line: 2437, column: 16, scope: !6703)
!6708 = !DILocation(line: 2437, column: 23, scope: !6703)
!6709 = !DILocation(line: 2437, column: 32, scope: !6703)
!6710 = !DILocalVariable(name: "i", scope: !6703, file: !3, line: 2438, type: !171)
!6711 = !DILocation(line: 2438, column: 6, scope: !6703)
!6712 = !DILocalVariable(name: "j", scope: !6703, file: !3, line: 2438, type: !171)
!6713 = !DILocation(line: 2438, column: 9, scope: !6703)
!6714 = !DILocalVariable(name: "x", scope: !6703, file: !3, line: 2438, type: !171)
!6715 = !DILocation(line: 2438, column: 12, scope: !6703)
!6716 = !DILocalVariable(name: "y", scope: !6703, file: !3, line: 2438, type: !171)
!6717 = !DILocation(line: 2438, column: 15, scope: !6703)
!6718 = !DILocalVariable(name: "gridsize", scope: !6703, file: !3, line: 2438, type: !171)
!6719 = !DILocation(line: 2438, column: 18, scope: !6703)
!6720 = !DILocation(line: 2438, column: 29, scope: !6703)
!6721 = !DILocation(line: 2438, column: 38, scope: !6703)
!6722 = !DILocation(line: 2438, column: 46, scope: !6703)
!6723 = !DILocalVariable(name: "has_mask", scope: !6703, file: !3, line: 2439, type: !2281)
!6724 = !DILocation(line: 2439, column: 12, scope: !6703)
!6725 = !DILocation(line: 2439, column: 23, scope: !6703)
!6726 = !DILocation(line: 2439, column: 28, scope: !6703)
!6727 = !DILocalVariable(name: "flags", scope: !6703, file: !3, line: 2440, type: !3962)
!6728 = !DILocation(line: 2440, column: 19, scope: !6703)
!6729 = !DILocation(line: 2440, column: 28, scope: !6703)
!6730 = !DILocation(line: 2440, column: 37, scope: !6703)
!6731 = !DILocation(line: 2440, column: 52, scope: !6703)
!6732 = !DILocation(line: 2440, column: 61, scope: !6703)
!6733 = !DILocalVariable(name: "diffuse_color", scope: !6703, file: !3, line: 2441, type: !508)
!6734 = !DILocation(line: 2441, column: 8, scope: !6703)
!6735 = !DILocation(line: 2443, column: 6, scope: !6736)
!6736 = distinct !DILexicalBlock(scope: !6703, file: !3, line: 2443, column: 6)
!6737 = !DILocation(line: 2443, column: 15, scope: !6736)
!6738 = !DILocation(line: 2443, column: 6, scope: !6703)
!6739 = !DILocation(line: 2444, column: 41, scope: !6736)
!6740 = !DILocation(line: 2444, column: 58, scope: !6736)
!6741 = !DILocation(line: 2444, column: 22, scope: !6736)
!6742 = !DILocation(line: 2444, column: 39, scope: !6736)
!6743 = !DILocation(line: 2444, column: 3, scope: !6736)
!6744 = !DILocation(line: 2444, column: 20, scope: !6736)
!6745 = !DILocation(line: 2445, column: 11, scope: !6746)
!6746 = distinct !DILexicalBlock(scope: !6736, file: !3, line: 2445, column: 11)
!6747 = !DILocation(line: 2445, column: 20, scope: !6746)
!6748 = !DILocation(line: 2445, column: 11, scope: !6736)
!6749 = !DILocation(line: 2446, column: 28, scope: !6746)
!6750 = !DILocation(line: 2446, column: 35, scope: !6746)
!6751 = !DILocation(line: 2446, column: 42, scope: !6746)
!6752 = !DILocation(line: 2446, column: 47, scope: !6746)
!6753 = !DILocation(line: 2446, column: 3, scope: !6746)
!6754 = !DILocation(line: 2448, column: 6, scope: !6755)
!6755 = distinct !DILexicalBlock(scope: !6703, file: !3, line: 2448, column: 6)
!6756 = !DILocation(line: 2448, column: 6, scope: !6703)
!6757 = !DILocation(line: 2449, column: 3, scope: !6758)
!6758 = distinct !DILexicalBlock(scope: !6755, file: !3, line: 2448, column: 16)
!6759 = !DILocation(line: 2450, column: 2, scope: !6758)
!6760 = !DILocation(line: 2452, column: 9, scope: !6761)
!6761 = distinct !DILexicalBlock(scope: !6703, file: !3, line: 2452, column: 2)
!6762 = !DILocation(line: 2452, column: 7, scope: !6761)
!6763 = !DILocation(line: 2452, column: 14, scope: !6764)
!6764 = distinct !DILexicalBlock(scope: !6761, file: !3, line: 2452, column: 2)
!6765 = !DILocation(line: 2452, column: 18, scope: !6764)
!6766 = !DILocation(line: 2452, column: 27, scope: !6764)
!6767 = !DILocation(line: 2452, column: 16, scope: !6764)
!6768 = !DILocation(line: 2452, column: 2, scope: !6761)
!6769 = !DILocalVariable(name: "g", scope: !6770, file: !3, line: 2453, type: !171)
!6770 = distinct !DILexicalBlock(scope: !6764, file: !3, line: 2452, column: 41)
!6771 = !DILocation(line: 2453, column: 7, scope: !6770)
!6772 = !DILocation(line: 2453, column: 11, scope: !6770)
!6773 = !DILocation(line: 2453, column: 20, scope: !6770)
!6774 = !DILocation(line: 2453, column: 33, scope: !6770)
!6775 = !DILocalVariable(name: "grid", scope: !6770, file: !3, line: 2454, type: !180)
!6776 = !DILocation(line: 2454, column: 12, scope: !6770)
!6777 = !DILocation(line: 2454, column: 19, scope: !6770)
!6778 = !DILocation(line: 2454, column: 28, scope: !6770)
!6779 = !DILocation(line: 2454, column: 34, scope: !6770)
!6780 = !DILocalVariable(name: "gh", scope: !6770, file: !3, line: 2455, type: !3967)
!6781 = !DILocation(line: 2455, column: 15, scope: !6770)
!6782 = !DILocation(line: 2455, column: 20, scope: !6770)
!6783 = !DILocation(line: 2455, column: 29, scope: !6770)
!6784 = !DILocation(line: 2455, column: 41, scope: !6770)
!6785 = !DILocation(line: 2459, column: 7, scope: !6786)
!6786 = distinct !DILexicalBlock(scope: !6770, file: !3, line: 2459, column: 7)
!6787 = !DILocation(line: 2459, column: 7, scope: !6770)
!6788 = !DILocation(line: 2460, column: 4, scope: !6789)
!6789 = distinct !DILexicalBlock(scope: !6786, file: !3, line: 2459, column: 11)
!6790 = !DILocation(line: 2462, column: 11, scope: !6791)
!6791 = distinct !DILexicalBlock(scope: !6789, file: !3, line: 2462, column: 4)
!6792 = !DILocation(line: 2462, column: 9, scope: !6791)
!6793 = !DILocation(line: 2462, column: 16, scope: !6794)
!6794 = distinct !DILexicalBlock(scope: !6791, file: !3, line: 2462, column: 4)
!6795 = !DILocation(line: 2462, column: 20, scope: !6794)
!6796 = !DILocation(line: 2462, column: 29, scope: !6794)
!6797 = !DILocation(line: 2462, column: 18, scope: !6794)
!6798 = !DILocation(line: 2462, column: 4, scope: !6791)
!6799 = !DILocation(line: 2463, column: 12, scope: !6800)
!6800 = distinct !DILexicalBlock(scope: !6801, file: !3, line: 2463, column: 5)
!6801 = distinct !DILexicalBlock(scope: !6794, file: !3, line: 2462, column: 39)
!6802 = !DILocation(line: 2463, column: 10, scope: !6800)
!6803 = !DILocation(line: 2463, column: 17, scope: !6804)
!6804 = distinct !DILexicalBlock(scope: !6800, file: !3, line: 2463, column: 5)
!6805 = !DILocation(line: 2463, column: 21, scope: !6804)
!6806 = !DILocation(line: 2463, column: 30, scope: !6804)
!6807 = !DILocation(line: 2463, column: 19, scope: !6804)
!6808 = !DILocation(line: 2463, column: 5, scope: !6800)
!6809 = !DILocalVariable(name: "e", scope: !6810, file: !3, line: 2464, type: !4918)
!6810 = distinct !DILexicalBlock(scope: !6804, file: !3, line: 2463, column: 40)
!6811 = !DILocation(line: 2464, column: 15, scope: !6810)
!6812 = !DILocation(line: 2464, column: 22, scope: !6810)
!6813 = !DILocation(line: 2465, column: 21, scope: !6810)
!6814 = !DILocation(line: 2465, column: 26, scope: !6810)
!6815 = !DILocation(line: 2465, column: 32, scope: !6810)
!6816 = !DILocation(line: 2465, column: 34, scope: !6810)
!6817 = !DILocation(line: 2465, column: 39, scope: !6810)
!6818 = !DILocation(line: 2465, column: 41, scope: !6810)
!6819 = !DILocation(line: 2465, column: 7, scope: !6810)
!6820 = !DILocation(line: 2466, column: 21, scope: !6810)
!6821 = !DILocation(line: 2466, column: 26, scope: !6810)
!6822 = !DILocation(line: 2466, column: 32, scope: !6810)
!6823 = !DILocation(line: 2466, column: 34, scope: !6810)
!6824 = !DILocation(line: 2466, column: 39, scope: !6810)
!6825 = !DILocation(line: 2466, column: 7, scope: !6810)
!6826 = !DILocation(line: 2467, column: 21, scope: !6810)
!6827 = !DILocation(line: 2467, column: 26, scope: !6810)
!6828 = !DILocation(line: 2467, column: 32, scope: !6810)
!6829 = !DILocation(line: 2467, column: 35, scope: !6810)
!6830 = !DILocation(line: 2467, column: 7, scope: !6810)
!6831 = !DILocation(line: 2468, column: 21, scope: !6810)
!6832 = !DILocation(line: 2468, column: 26, scope: !6810)
!6833 = !DILocation(line: 2468, column: 32, scope: !6810)
!6834 = !DILocation(line: 2468, column: 35, scope: !6810)
!6835 = !DILocation(line: 2468, column: 37, scope: !6810)
!6836 = !DILocation(line: 2468, column: 7, scope: !6810)
!6837 = !DILocation(line: 2472, column: 36, scope: !6838)
!6838 = distinct !DILexicalBlock(scope: !6810, file: !3, line: 2472, column: 10)
!6839 = !DILocation(line: 2472, column: 40, scope: !6838)
!6840 = !DILocation(line: 2472, column: 50, scope: !6838)
!6841 = !DILocation(line: 2472, column: 53, scope: !6838)
!6842 = !DILocation(line: 2472, column: 10, scope: !6838)
!6843 = !DILocation(line: 2472, column: 10, scope: !6810)
!6844 = !DILocation(line: 2473, column: 7, scope: !6838)
!6845 = !DILocation(line: 2475, column: 10, scope: !6846)
!6846 = distinct !DILexicalBlock(scope: !6810, file: !3, line: 2475, column: 10)
!6847 = !DILocation(line: 2475, column: 19, scope: !6846)
!6848 = !DILocation(line: 2475, column: 10, scope: !6810)
!6849 = !DILocation(line: 2476, column: 14, scope: !6850)
!6850 = distinct !DILexicalBlock(scope: !6851, file: !3, line: 2476, column: 7)
!6851 = distinct !DILexicalBlock(scope: !6846, file: !3, line: 2475, column: 27)
!6852 = !DILocation(line: 2476, column: 12, scope: !6850)
!6853 = !DILocation(line: 2476, column: 19, scope: !6854)
!6854 = distinct !DILexicalBlock(scope: !6850, file: !3, line: 2476, column: 7)
!6855 = !DILocation(line: 2476, column: 21, scope: !6854)
!6856 = !DILocation(line: 2476, column: 7, scope: !6850)
!6857 = !DILocation(line: 2477, column: 12, scope: !6858)
!6858 = distinct !DILexicalBlock(scope: !6859, file: !3, line: 2477, column: 12)
!6859 = distinct !DILexicalBlock(scope: !6854, file: !3, line: 2476, column: 31)
!6860 = !DILocation(line: 2477, column: 12, scope: !6859)
!6861 = !DILocation(line: 2478, column: 48, scope: !6862)
!6862 = distinct !DILexicalBlock(scope: !6858, file: !3, line: 2477, column: 22)
!6863 = !DILocation(line: 2478, column: 55, scope: !6862)
!6864 = !DILocation(line: 2478, column: 53, scope: !6862)
!6865 = !DILocation(line: 2478, column: 34, scope: !6862)
!6866 = !DILocation(line: 2478, column: 33, scope: !6862)
!6867 = !DILocation(line: 2478, column: 60, scope: !6862)
!6868 = !DILocation(line: 2478, column: 9, scope: !6862)
!6869 = !DILocation(line: 2479, column: 8, scope: !6862)
!6870 = !DILocation(line: 2480, column: 32, scope: !6859)
!6871 = !DILocation(line: 2480, column: 39, scope: !6859)
!6872 = !DILocation(line: 2480, column: 37, scope: !6859)
!6873 = !DILocation(line: 2480, column: 20, scope: !6859)
!6874 = !DILocation(line: 2480, column: 8, scope: !6859)
!6875 = !DILocation(line: 2481, column: 32, scope: !6859)
!6876 = !DILocation(line: 2481, column: 39, scope: !6859)
!6877 = !DILocation(line: 2481, column: 37, scope: !6859)
!6878 = !DILocation(line: 2481, column: 20, scope: !6859)
!6879 = !DILocation(line: 2481, column: 8, scope: !6859)
!6880 = !DILocation(line: 2482, column: 7, scope: !6859)
!6881 = !DILocation(line: 2476, column: 27, scope: !6854)
!6882 = !DILocation(line: 2476, column: 7, scope: !6854)
!6883 = distinct !{!6883, !6856, !6884}
!6884 = !DILocation(line: 2482, column: 7, scope: !6850)
!6885 = !DILocation(line: 2483, column: 6, scope: !6851)
!6886 = !DILocalVariable(name: "fno", scope: !6887, file: !3, line: 2485, type: !426)
!6887 = distinct !DILexicalBlock(scope: !6846, file: !3, line: 2484, column: 11)
!6888 = !DILocation(line: 2485, column: 13, scope: !6887)
!6889 = !DILocation(line: 2486, column: 22, scope: !6887)
!6890 = !DILocation(line: 2487, column: 34, scope: !6887)
!6891 = !DILocation(line: 2487, column: 39, scope: !6887)
!6892 = !DILocation(line: 2487, column: 22, scope: !6887)
!6893 = !DILocation(line: 2488, column: 34, scope: !6887)
!6894 = !DILocation(line: 2488, column: 39, scope: !6887)
!6895 = !DILocation(line: 2488, column: 22, scope: !6887)
!6896 = !DILocation(line: 2489, column: 34, scope: !6887)
!6897 = !DILocation(line: 2489, column: 39, scope: !6887)
!6898 = !DILocation(line: 2489, column: 22, scope: !6887)
!6899 = !DILocation(line: 2490, column: 34, scope: !6887)
!6900 = !DILocation(line: 2490, column: 39, scope: !6887)
!6901 = !DILocation(line: 2490, column: 22, scope: !6887)
!6902 = !DILocation(line: 2486, column: 7, scope: !6887)
!6903 = !DILocation(line: 2491, column: 19, scope: !6887)
!6904 = !DILocation(line: 2491, column: 7, scope: !6887)
!6905 = !DILocation(line: 2493, column: 11, scope: !6906)
!6906 = distinct !DILexicalBlock(scope: !6887, file: !3, line: 2493, column: 11)
!6907 = !DILocation(line: 2493, column: 11, scope: !6887)
!6908 = !DILocation(line: 2494, column: 37, scope: !6909)
!6909 = distinct !DILexicalBlock(scope: !6906, file: !3, line: 2493, column: 21)
!6910 = !DILocation(line: 2494, column: 42, scope: !6909)
!6911 = !DILocation(line: 2494, column: 48, scope: !6909)
!6912 = !DILocation(line: 2494, column: 54, scope: !6909)
!6913 = !DILocation(line: 2494, column: 60, scope: !6909)
!6914 = !DILocation(line: 2494, column: 66, scope: !6909)
!6915 = !DILocation(line: 2494, column: 8, scope: !6909)
!6916 = !DILocation(line: 2495, column: 7, scope: !6909)
!6917 = !DILocation(line: 2497, column: 14, scope: !6918)
!6918 = distinct !DILexicalBlock(scope: !6887, file: !3, line: 2497, column: 7)
!6919 = !DILocation(line: 2497, column: 12, scope: !6918)
!6920 = !DILocation(line: 2497, column: 19, scope: !6921)
!6921 = distinct !DILexicalBlock(scope: !6918, file: !3, line: 2497, column: 7)
!6922 = !DILocation(line: 2497, column: 21, scope: !6921)
!6923 = !DILocation(line: 2497, column: 7, scope: !6918)
!6924 = !DILocation(line: 2498, column: 32, scope: !6921)
!6925 = !DILocation(line: 2498, column: 39, scope: !6921)
!6926 = !DILocation(line: 2498, column: 37, scope: !6921)
!6927 = !DILocation(line: 2498, column: 20, scope: !6921)
!6928 = !DILocation(line: 2498, column: 8, scope: !6921)
!6929 = !DILocation(line: 2497, column: 27, scope: !6921)
!6930 = !DILocation(line: 2497, column: 7, scope: !6921)
!6931 = distinct !{!6931, !6923, !6932}
!6932 = !DILocation(line: 2498, column: 42, scope: !6918)
!6933 = !DILocation(line: 2500, column: 5, scope: !6810)
!6934 = !DILocation(line: 2463, column: 36, scope: !6804)
!6935 = !DILocation(line: 2463, column: 5, scope: !6804)
!6936 = distinct !{!6936, !6808, !6937}
!6937 = !DILocation(line: 2500, column: 5, scope: !6800)
!6938 = !DILocation(line: 2501, column: 4, scope: !6801)
!6939 = !DILocation(line: 2462, column: 35, scope: !6794)
!6940 = !DILocation(line: 2462, column: 4, scope: !6794)
!6941 = distinct !{!6941, !6798, !6942}
!6942 = !DILocation(line: 2501, column: 4, scope: !6791)
!6943 = !DILocation(line: 2503, column: 4, scope: !6789)
!6944 = !DILocation(line: 2504, column: 3, scope: !6789)
!6945 = !DILocation(line: 2505, column: 12, scope: !6946)
!6946 = distinct !DILexicalBlock(scope: !6786, file: !3, line: 2505, column: 12)
!6947 = !DILocation(line: 2505, column: 21, scope: !6946)
!6948 = !DILocation(line: 2505, column: 12, scope: !6786)
!6949 = !DILocation(line: 2506, column: 11, scope: !6950)
!6950 = distinct !DILexicalBlock(scope: !6951, file: !3, line: 2506, column: 4)
!6951 = distinct !DILexicalBlock(scope: !6946, file: !3, line: 2505, column: 29)
!6952 = !DILocation(line: 2506, column: 9, scope: !6950)
!6953 = !DILocation(line: 2506, column: 16, scope: !6954)
!6954 = distinct !DILexicalBlock(scope: !6950, file: !3, line: 2506, column: 4)
!6955 = !DILocation(line: 2506, column: 20, scope: !6954)
!6956 = !DILocation(line: 2506, column: 29, scope: !6954)
!6957 = !DILocation(line: 2506, column: 18, scope: !6954)
!6958 = !DILocation(line: 2506, column: 4, scope: !6950)
!6959 = !DILocation(line: 2507, column: 5, scope: !6960)
!6960 = distinct !DILexicalBlock(scope: !6954, file: !3, line: 2506, column: 39)
!6961 = !DILocation(line: 2508, column: 12, scope: !6962)
!6962 = distinct !DILexicalBlock(scope: !6960, file: !3, line: 2508, column: 5)
!6963 = !DILocation(line: 2508, column: 10, scope: !6962)
!6964 = !DILocation(line: 2508, column: 17, scope: !6965)
!6965 = distinct !DILexicalBlock(scope: !6962, file: !3, line: 2508, column: 5)
!6966 = !DILocation(line: 2508, column: 21, scope: !6965)
!6967 = !DILocation(line: 2508, column: 19, scope: !6965)
!6968 = !DILocation(line: 2508, column: 5, scope: !6962)
!6969 = !DILocalVariable(name: "a", scope: !6970, file: !3, line: 2509, type: !180)
!6970 = distinct !DILexicalBlock(scope: !6965, file: !3, line: 2508, column: 36)
!6971 = !DILocation(line: 2509, column: 15, scope: !6970)
!6972 = !DILocation(line: 2509, column: 33, scope: !6970)
!6973 = !DILocation(line: 2509, column: 38, scope: !6970)
!6974 = !DILocation(line: 2509, column: 44, scope: !6970)
!6975 = !DILocation(line: 2509, column: 47, scope: !6970)
!6976 = !DILocation(line: 2509, column: 19, scope: !6970)
!6977 = !DILocalVariable(name: "b", scope: !6970, file: !3, line: 2510, type: !180)
!6978 = !DILocation(line: 2510, column: 15, scope: !6970)
!6979 = !DILocation(line: 2510, column: 33, scope: !6970)
!6980 = !DILocation(line: 2510, column: 38, scope: !6970)
!6981 = !DILocation(line: 2510, column: 44, scope: !6970)
!6982 = !DILocation(line: 2510, column: 47, scope: !6970)
!6983 = !DILocation(line: 2510, column: 49, scope: !6970)
!6984 = !DILocation(line: 2510, column: 19, scope: !6970)
!6985 = !DILocation(line: 2512, column: 10, scope: !6986)
!6986 = distinct !DILexicalBlock(scope: !6970, file: !3, line: 2512, column: 10)
!6987 = !DILocation(line: 2512, column: 10, scope: !6970)
!6988 = !DILocation(line: 2513, column: 46, scope: !6989)
!6989 = distinct !DILexicalBlock(scope: !6986, file: !3, line: 2512, column: 20)
!6990 = !DILocation(line: 2513, column: 51, scope: !6989)
!6991 = !DILocation(line: 2513, column: 32, scope: !6989)
!6992 = !DILocation(line: 2513, column: 31, scope: !6989)
!6993 = !DILocation(line: 2513, column: 55, scope: !6989)
!6994 = !DILocation(line: 2513, column: 7, scope: !6989)
!6995 = !DILocation(line: 2514, column: 6, scope: !6989)
!6996 = !DILocation(line: 2515, column: 30, scope: !6970)
!6997 = !DILocation(line: 2515, column: 35, scope: !6970)
!6998 = !DILocation(line: 2515, column: 18, scope: !6970)
!6999 = !DILocation(line: 2515, column: 6, scope: !6970)
!7000 = !DILocation(line: 2516, column: 30, scope: !6970)
!7001 = !DILocation(line: 2516, column: 35, scope: !6970)
!7002 = !DILocation(line: 2516, column: 18, scope: !6970)
!7003 = !DILocation(line: 2516, column: 6, scope: !6970)
!7004 = !DILocation(line: 2517, column: 10, scope: !7005)
!7005 = distinct !DILexicalBlock(scope: !6970, file: !3, line: 2517, column: 10)
!7006 = !DILocation(line: 2517, column: 10, scope: !6970)
!7007 = !DILocation(line: 2518, column: 46, scope: !7008)
!7008 = distinct !DILexicalBlock(scope: !7005, file: !3, line: 2517, column: 20)
!7009 = !DILocation(line: 2518, column: 51, scope: !7008)
!7010 = !DILocation(line: 2518, column: 32, scope: !7008)
!7011 = !DILocation(line: 2518, column: 31, scope: !7008)
!7012 = !DILocation(line: 2518, column: 55, scope: !7008)
!7013 = !DILocation(line: 2518, column: 7, scope: !7008)
!7014 = !DILocation(line: 2519, column: 6, scope: !7008)
!7015 = !DILocation(line: 2520, column: 30, scope: !6970)
!7016 = !DILocation(line: 2520, column: 35, scope: !6970)
!7017 = !DILocation(line: 2520, column: 18, scope: !6970)
!7018 = !DILocation(line: 2520, column: 6, scope: !6970)
!7019 = !DILocation(line: 2521, column: 30, scope: !6970)
!7020 = !DILocation(line: 2521, column: 35, scope: !6970)
!7021 = !DILocation(line: 2521, column: 18, scope: !6970)
!7022 = !DILocation(line: 2521, column: 6, scope: !6970)
!7023 = !DILocation(line: 2522, column: 5, scope: !6970)
!7024 = !DILocation(line: 2508, column: 32, scope: !6965)
!7025 = !DILocation(line: 2508, column: 5, scope: !6965)
!7026 = distinct !{!7026, !6968, !7027}
!7027 = !DILocation(line: 2522, column: 5, scope: !6962)
!7028 = !DILocation(line: 2523, column: 5, scope: !6960)
!7029 = !DILocation(line: 2524, column: 4, scope: !6960)
!7030 = !DILocation(line: 2506, column: 35, scope: !6954)
!7031 = !DILocation(line: 2506, column: 4, scope: !6954)
!7032 = distinct !{!7032, !6958, !7033}
!7033 = !DILocation(line: 2524, column: 4, scope: !6950)
!7034 = !DILocation(line: 2525, column: 3, scope: !6951)
!7035 = !DILocation(line: 2527, column: 11, scope: !7036)
!7036 = distinct !DILexicalBlock(scope: !7037, file: !3, line: 2527, column: 4)
!7037 = distinct !DILexicalBlock(scope: !6946, file: !3, line: 2526, column: 8)
!7038 = !DILocation(line: 2527, column: 9, scope: !7036)
!7039 = !DILocation(line: 2527, column: 16, scope: !7040)
!7040 = distinct !DILexicalBlock(scope: !7036, file: !3, line: 2527, column: 4)
!7041 = !DILocation(line: 2527, column: 20, scope: !7040)
!7042 = !DILocation(line: 2527, column: 29, scope: !7040)
!7043 = !DILocation(line: 2527, column: 18, scope: !7040)
!7044 = !DILocation(line: 2527, column: 4, scope: !7036)
!7045 = !DILocation(line: 2528, column: 5, scope: !7046)
!7046 = distinct !DILexicalBlock(scope: !7040, file: !3, line: 2527, column: 39)
!7047 = !DILocation(line: 2529, column: 12, scope: !7048)
!7048 = distinct !DILexicalBlock(scope: !7046, file: !3, line: 2529, column: 5)
!7049 = !DILocation(line: 2529, column: 10, scope: !7048)
!7050 = !DILocation(line: 2529, column: 17, scope: !7051)
!7051 = distinct !DILexicalBlock(scope: !7048, file: !3, line: 2529, column: 5)
!7052 = !DILocation(line: 2529, column: 21, scope: !7051)
!7053 = !DILocation(line: 2529, column: 19, scope: !7051)
!7054 = !DILocation(line: 2529, column: 5, scope: !7048)
!7055 = !DILocalVariable(name: "a", scope: !7056, file: !3, line: 2530, type: !180)
!7056 = distinct !DILexicalBlock(scope: !7051, file: !3, line: 2529, column: 36)
!7057 = !DILocation(line: 2530, column: 15, scope: !7056)
!7058 = !DILocation(line: 2530, column: 33, scope: !7056)
!7059 = !DILocation(line: 2530, column: 38, scope: !7056)
!7060 = !DILocation(line: 2530, column: 44, scope: !7056)
!7061 = !DILocation(line: 2530, column: 47, scope: !7056)
!7062 = !DILocation(line: 2530, column: 19, scope: !7056)
!7063 = !DILocalVariable(name: "b", scope: !7056, file: !3, line: 2531, type: !180)
!7064 = !DILocation(line: 2531, column: 15, scope: !7056)
!7065 = !DILocation(line: 2531, column: 33, scope: !7056)
!7066 = !DILocation(line: 2531, column: 38, scope: !7056)
!7067 = !DILocation(line: 2531, column: 44, scope: !7056)
!7068 = !DILocation(line: 2531, column: 47, scope: !7056)
!7069 = !DILocation(line: 2531, column: 49, scope: !7056)
!7070 = !DILocation(line: 2531, column: 19, scope: !7056)
!7071 = !DILocation(line: 2533, column: 10, scope: !7072)
!7072 = distinct !DILexicalBlock(scope: !7056, file: !3, line: 2533, column: 10)
!7073 = !DILocation(line: 2533, column: 12, scope: !7072)
!7074 = !DILocation(line: 2533, column: 10, scope: !7056)
!7075 = !DILocalVariable(name: "c", scope: !7076, file: !3, line: 2534, type: !180)
!7076 = distinct !DILexicalBlock(scope: !7072, file: !3, line: 2533, column: 17)
!7077 = !DILocation(line: 2534, column: 16, scope: !7076)
!7078 = !DILocation(line: 2534, column: 34, scope: !7076)
!7079 = !DILocation(line: 2534, column: 39, scope: !7076)
!7080 = !DILocation(line: 2534, column: 45, scope: !7076)
!7081 = !DILocation(line: 2534, column: 47, scope: !7076)
!7082 = !DILocation(line: 2534, column: 52, scope: !7076)
!7083 = !DILocation(line: 2534, column: 20, scope: !7076)
!7084 = !DILocalVariable(name: "d", scope: !7076, file: !3, line: 2535, type: !180)
!7085 = !DILocation(line: 2535, column: 16, scope: !7076)
!7086 = !DILocation(line: 2535, column: 34, scope: !7076)
!7087 = !DILocation(line: 2535, column: 39, scope: !7076)
!7088 = !DILocation(line: 2535, column: 45, scope: !7076)
!7089 = !DILocation(line: 2535, column: 47, scope: !7076)
!7090 = !DILocation(line: 2535, column: 52, scope: !7076)
!7091 = !DILocation(line: 2535, column: 54, scope: !7076)
!7092 = !DILocation(line: 2535, column: 20, scope: !7076)
!7093 = !DILocalVariable(name: "fno", scope: !7076, file: !3, line: 2537, type: !426)
!7094 = !DILocation(line: 2537, column: 13, scope: !7076)
!7095 = !DILocation(line: 2538, column: 22, scope: !7076)
!7096 = !DILocation(line: 2539, column: 34, scope: !7076)
!7097 = !DILocation(line: 2539, column: 39, scope: !7076)
!7098 = !DILocation(line: 2539, column: 22, scope: !7076)
!7099 = !DILocation(line: 2540, column: 34, scope: !7076)
!7100 = !DILocation(line: 2540, column: 39, scope: !7076)
!7101 = !DILocation(line: 2540, column: 22, scope: !7076)
!7102 = !DILocation(line: 2541, column: 34, scope: !7076)
!7103 = !DILocation(line: 2541, column: 39, scope: !7076)
!7104 = !DILocation(line: 2541, column: 22, scope: !7076)
!7105 = !DILocation(line: 2542, column: 34, scope: !7076)
!7106 = !DILocation(line: 2542, column: 39, scope: !7076)
!7107 = !DILocation(line: 2542, column: 22, scope: !7076)
!7108 = !DILocation(line: 2538, column: 7, scope: !7076)
!7109 = !DILocation(line: 2543, column: 19, scope: !7076)
!7110 = !DILocation(line: 2543, column: 7, scope: !7076)
!7111 = !DILocation(line: 2545, column: 11, scope: !7112)
!7112 = distinct !DILexicalBlock(scope: !7076, file: !3, line: 2545, column: 11)
!7113 = !DILocation(line: 2545, column: 11, scope: !7076)
!7114 = !DILocation(line: 2546, column: 37, scope: !7115)
!7115 = distinct !DILexicalBlock(scope: !7112, file: !3, line: 2545, column: 21)
!7116 = !DILocation(line: 2546, column: 42, scope: !7115)
!7117 = !DILocation(line: 2546, column: 45, scope: !7115)
!7118 = !DILocation(line: 2546, column: 48, scope: !7115)
!7119 = !DILocation(line: 2546, column: 51, scope: !7115)
!7120 = !DILocation(line: 2546, column: 54, scope: !7115)
!7121 = !DILocation(line: 2546, column: 8, scope: !7115)
!7122 = !DILocation(line: 2547, column: 7, scope: !7115)
!7123 = !DILocation(line: 2548, column: 6, scope: !7076)
!7124 = !DILocation(line: 2550, column: 30, scope: !7056)
!7125 = !DILocation(line: 2550, column: 35, scope: !7056)
!7126 = !DILocation(line: 2550, column: 18, scope: !7056)
!7127 = !DILocation(line: 2550, column: 6, scope: !7056)
!7128 = !DILocation(line: 2551, column: 30, scope: !7056)
!7129 = !DILocation(line: 2551, column: 35, scope: !7056)
!7130 = !DILocation(line: 2551, column: 18, scope: !7056)
!7131 = !DILocation(line: 2551, column: 6, scope: !7056)
!7132 = !DILocation(line: 2552, column: 5, scope: !7056)
!7133 = !DILocation(line: 2529, column: 32, scope: !7051)
!7134 = !DILocation(line: 2529, column: 5, scope: !7051)
!7135 = distinct !{!7135, !7054, !7136}
!7136 = !DILocation(line: 2552, column: 5, scope: !7048)
!7137 = !DILocation(line: 2553, column: 5, scope: !7046)
!7138 = !DILocation(line: 2554, column: 4, scope: !7046)
!7139 = !DILocation(line: 2527, column: 35, scope: !7040)
!7140 = !DILocation(line: 2527, column: 4, scope: !7040)
!7141 = distinct !{!7141, !7044, !7142}
!7142 = !DILocation(line: 2554, column: 4, scope: !7036)
!7143 = !DILocation(line: 2556, column: 2, scope: !6770)
!7144 = !DILocation(line: 2452, column: 36, scope: !6764)
!7145 = !DILocation(line: 2452, column: 2, scope: !6764)
!7146 = distinct !{!7146, !6768, !7147}
!7147 = !DILocation(line: 2556, column: 2, scope: !6761)
!7148 = !DILocation(line: 2558, column: 6, scope: !7149)
!7149 = distinct !DILexicalBlock(scope: !6703, file: !3, line: 2558, column: 6)
!7150 = !DILocation(line: 2558, column: 6, scope: !6703)
!7151 = !DILocation(line: 2559, column: 3, scope: !7152)
!7152 = distinct !DILexicalBlock(scope: !7149, file: !3, line: 2558, column: 16)
!7153 = !DILocation(line: 2560, column: 2, scope: !7152)
!7154 = !DILocation(line: 2561, column: 1, scope: !6703)
!7155 = distinct !DISubprogram(name: "GPU_pbvh_buffers_diffuse_changed", scope: !3, file: !3, line: 2656, type: !7156, scopeLine: 2657, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1345)
!7156 = !DISubroutineType(types: !7157)
!7157 = !{!166, !3944, !5676, !166}
!7158 = !DILocalVariable(name: "buffers", arg: 1, scope: !7155, file: !3, line: 2656, type: !3944)
!7159 = !DILocation(line: 2656, column: 57, scope: !7155)
!7160 = !DILocalVariable(name: "bm_faces", arg: 2, scope: !7155, file: !3, line: 2656, type: !5676)
!7161 = !DILocation(line: 2656, column: 72, scope: !7155)
!7162 = !DILocalVariable(name: "show_diffuse_color", arg: 3, scope: !7155, file: !3, line: 2656, type: !166)
!7163 = !DILocation(line: 2656, column: 87, scope: !7155)
!7164 = !DILocalVariable(name: "diffuse_color", scope: !7155, file: !3, line: 2658, type: !508)
!7165 = !DILocation(line: 2658, column: 8, scope: !7155)
!7166 = !DILocalVariable(name: "use_matcaps", scope: !7155, file: !3, line: 2659, type: !166)
!7167 = !DILocation(line: 2659, column: 7, scope: !7155)
!7168 = !DILocation(line: 2659, column: 21, scope: !7155)
!7169 = !DILocation(line: 2661, column: 6, scope: !7170)
!7170 = distinct !DILexicalBlock(scope: !7155, file: !3, line: 2661, column: 6)
!7171 = !DILocation(line: 2661, column: 15, scope: !7170)
!7172 = !DILocation(line: 2661, column: 37, scope: !7170)
!7173 = !DILocation(line: 2661, column: 34, scope: !7170)
!7174 = !DILocation(line: 2661, column: 6, scope: !7155)
!7175 = !DILocation(line: 2662, column: 3, scope: !7170)
!7176 = !DILocation(line: 2664, column: 6, scope: !7177)
!7177 = distinct !DILexicalBlock(scope: !7155, file: !3, line: 2664, column: 6)
!7178 = !DILocation(line: 2664, column: 15, scope: !7177)
!7179 = !DILocation(line: 2664, column: 30, scope: !7177)
!7180 = !DILocation(line: 2664, column: 27, scope: !7177)
!7181 = !DILocation(line: 2664, column: 6, scope: !7155)
!7182 = !DILocation(line: 2665, column: 3, scope: !7177)
!7183 = !DILocation(line: 2667, column: 7, scope: !7184)
!7184 = distinct !DILexicalBlock(scope: !7155, file: !3, line: 2667, column: 6)
!7185 = !DILocation(line: 2667, column: 16, scope: !7184)
!7186 = !DILocation(line: 2667, column: 35, scope: !7184)
!7187 = !DILocation(line: 2667, column: 45, scope: !7184)
!7188 = !DILocation(line: 2667, column: 48, scope: !7184)
!7189 = !DILocation(line: 2667, column: 6, scope: !7155)
!7190 = !DILocation(line: 2668, column: 3, scope: !7184)
!7191 = !DILocation(line: 2670, column: 6, scope: !7192)
!7192 = distinct !DILexicalBlock(scope: !7155, file: !3, line: 2670, column: 6)
!7193 = !DILocation(line: 2670, column: 15, scope: !7192)
!7194 = !DILocation(line: 2670, column: 6, scope: !7155)
!7195 = !DILocalVariable(name: "f", scope: !7196, file: !3, line: 2671, type: !1690)
!7196 = distinct !DILexicalBlock(scope: !7192, file: !3, line: 2670, column: 22)
!7197 = !DILocation(line: 2671, column: 10, scope: !7196)
!7198 = !DILocation(line: 2671, column: 14, scope: !7196)
!7199 = !DILocation(line: 2671, column: 23, scope: !7196)
!7200 = !DILocation(line: 2671, column: 31, scope: !7196)
!7201 = !DILocation(line: 2671, column: 40, scope: !7196)
!7202 = !DILocation(line: 2671, column: 29, scope: !7196)
!7203 = !DILocation(line: 2673, column: 28, scope: !7196)
!7204 = !DILocation(line: 2673, column: 31, scope: !7196)
!7205 = !DILocation(line: 2673, column: 38, scope: !7196)
!7206 = !DILocation(line: 2673, column: 43, scope: !7196)
!7207 = !DILocation(line: 2673, column: 3, scope: !7196)
!7208 = !DILocation(line: 2674, column: 2, scope: !7196)
!7209 = !DILocation(line: 2675, column: 11, scope: !7210)
!7210 = distinct !DILexicalBlock(scope: !7192, file: !3, line: 2675, column: 11)
!7211 = !DILocation(line: 2675, column: 20, scope: !7210)
!7212 = !DILocation(line: 2675, column: 11, scope: !7192)
!7213 = !DILocation(line: 2677, column: 21, scope: !7214)
!7214 = distinct !DILexicalBlock(scope: !7215, file: !3, line: 2677, column: 7)
!7215 = distinct !DILexicalBlock(scope: !7210, file: !3, line: 2675, column: 31)
!7216 = !DILocation(line: 2677, column: 7, scope: !7214)
!7217 = !DILocation(line: 2677, column: 31, scope: !7214)
!7218 = !DILocation(line: 2677, column: 7, scope: !7215)
!7219 = !DILocalVariable(name: "gs_iter", scope: !7220, file: !3, line: 2678, type: !5766)
!7220 = distinct !DILexicalBlock(scope: !7214, file: !3, line: 2677, column: 36)
!7221 = !DILocation(line: 2678, column: 17, scope: !7220)
!7222 = !DILocalVariable(name: "f", scope: !7220, file: !3, line: 2679, type: !5607)
!7223 = !DILocation(line: 2679, column: 12, scope: !7220)
!7224 = !DILocation(line: 2681, column: 36, scope: !7220)
!7225 = !DILocation(line: 2681, column: 4, scope: !7220)
!7226 = !DILocation(line: 2682, column: 8, scope: !7220)
!7227 = !DILocation(line: 2682, column: 6, scope: !7220)
!7228 = !DILocation(line: 2683, column: 29, scope: !7220)
!7229 = !DILocation(line: 2683, column: 32, scope: !7220)
!7230 = !DILocation(line: 2683, column: 39, scope: !7220)
!7231 = !DILocation(line: 2683, column: 44, scope: !7220)
!7232 = !DILocation(line: 2683, column: 4, scope: !7220)
!7233 = !DILocation(line: 2684, column: 3, scope: !7220)
!7234 = !DILocation(line: 2686, column: 4, scope: !7235)
!7235 = distinct !DILexicalBlock(scope: !7214, file: !3, line: 2685, column: 8)
!7236 = !DILocation(line: 2688, column: 2, scope: !7215)
!7237 = !DILocalVariable(name: "flags", scope: !7238, file: !3, line: 2690, type: !3962)
!7238 = distinct !DILexicalBlock(scope: !7210, file: !3, line: 2689, column: 7)
!7239 = !DILocation(line: 2690, column: 20, scope: !7238)
!7240 = !DILocation(line: 2690, column: 29, scope: !7238)
!7241 = !DILocation(line: 2690, column: 38, scope: !7238)
!7242 = !DILocation(line: 2690, column: 53, scope: !7238)
!7243 = !DILocation(line: 2690, column: 62, scope: !7238)
!7244 = !DILocation(line: 2692, column: 28, scope: !7238)
!7245 = !DILocation(line: 2692, column: 35, scope: !7238)
!7246 = !DILocation(line: 2692, column: 42, scope: !7238)
!7247 = !DILocation(line: 2692, column: 47, scope: !7238)
!7248 = !DILocation(line: 2692, column: 3, scope: !7238)
!7249 = !DILocation(line: 2695, column: 22, scope: !7155)
!7250 = !DILocation(line: 2695, column: 37, scope: !7155)
!7251 = !DILocation(line: 2695, column: 46, scope: !7155)
!7252 = !DILocation(line: 2695, column: 10, scope: !7155)
!7253 = !DILocation(line: 2695, column: 9, scope: !7155)
!7254 = !DILocation(line: 2695, column: 2, scope: !7155)
!7255 = !DILocation(line: 2696, column: 1, scope: !7155)
!7256 = distinct !DISubprogram(name: "equals_v3v3", scope: !4364, file: !4364, line: 928, type: !7257, scopeLine: 929, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1345)
!7257 = !DISubroutineType(types: !7258)
!7258 = !{!166, !1177, !1177}
!7259 = !DILocalVariable(name: "v1", arg: 1, scope: !7256, file: !4364, line: 928, type: !1177)
!7260 = !DILocation(line: 928, column: 38, scope: !7256)
!7261 = !DILocalVariable(name: "v2", arg: 2, scope: !7256, file: !4364, line: 928, type: !1177)
!7262 = !DILocation(line: 928, column: 57, scope: !7256)
!7263 = !DILocation(line: 930, column: 11, scope: !7256)
!7264 = !DILocation(line: 930, column: 20, scope: !7256)
!7265 = !DILocation(line: 930, column: 17, scope: !7256)
!7266 = !DILocation(line: 930, column: 27, scope: !7256)
!7267 = !DILocation(line: 930, column: 31, scope: !7256)
!7268 = !DILocation(line: 930, column: 40, scope: !7256)
!7269 = !DILocation(line: 930, column: 37, scope: !7256)
!7270 = !DILocation(line: 930, column: 47, scope: !7256)
!7271 = !DILocation(line: 930, column: 51, scope: !7256)
!7272 = !DILocation(line: 930, column: 60, scope: !7256)
!7273 = !DILocation(line: 930, column: 57, scope: !7256)
!7274 = !DILocation(line: 0, scope: !7256)
!7275 = !DILocation(line: 930, column: 9, scope: !7256)
!7276 = !DILocation(line: 930, column: 2, scope: !7256)
!7277 = distinct !DISubprogram(name: "GPU_free_pbvh_buffers", scope: !3, file: !3, line: 2735, type: !6474, scopeLine: 2736, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1345)
!7278 = !DILocalVariable(name: "buffers", arg: 1, scope: !7277, file: !3, line: 2735, type: !3944)
!7279 = !DILocation(line: 2735, column: 46, scope: !7277)
!7280 = !DILocation(line: 2737, column: 6, scope: !7281)
!7281 = distinct !DILexicalBlock(scope: !7277, file: !3, line: 2737, column: 6)
!7282 = !DILocation(line: 2737, column: 6, scope: !7277)
!7283 = !DILocation(line: 2738, column: 7, scope: !7284)
!7284 = distinct !DILexicalBlock(scope: !7285, file: !3, line: 2738, column: 7)
!7285 = distinct !DILexicalBlock(scope: !7281, file: !3, line: 2737, column: 15)
!7286 = !DILocation(line: 2738, column: 16, scope: !7284)
!7287 = !DILocation(line: 2738, column: 7, scope: !7285)
!7288 = !DILocation(line: 2739, column: 32, scope: !7284)
!7289 = !DILocation(line: 2739, column: 41, scope: !7284)
!7290 = !DILocation(line: 2739, column: 4, scope: !7284)
!7291 = !DILocation(line: 2740, column: 7, scope: !7292)
!7292 = distinct !DILexicalBlock(scope: !7285, file: !3, line: 2740, column: 7)
!7293 = !DILocation(line: 2740, column: 16, scope: !7292)
!7294 = !DILocation(line: 2740, column: 26, scope: !7292)
!7295 = !DILocation(line: 2740, column: 30, scope: !7292)
!7296 = !DILocation(line: 2740, column: 39, scope: !7292)
!7297 = !DILocation(line: 2740, column: 47, scope: !7292)
!7298 = !DILocation(line: 2740, column: 50, scope: !7292)
!7299 = !DILocation(line: 2740, column: 59, scope: !7292)
!7300 = !DILocation(line: 2740, column: 7, scope: !7285)
!7301 = !DILocation(line: 2741, column: 32, scope: !7292)
!7302 = !DILocation(line: 2741, column: 41, scope: !7292)
!7303 = !DILocation(line: 2741, column: 4, scope: !7292)
!7304 = !DILocation(line: 2743, column: 3, scope: !7285)
!7305 = !DILocation(line: 2743, column: 13, scope: !7285)
!7306 = !DILocation(line: 2744, column: 2, scope: !7285)
!7307 = !DILocation(line: 2745, column: 1, scope: !7277)
!7308 = distinct !DISubprogram(name: "gpu_pbvh_buffer_free_intern", scope: !3, file: !3, line: 2702, type: !7309, scopeLine: 2703, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1345)
!7309 = !DISubroutineType(types: !7310)
!7310 = !{null, !1343}
!7311 = !DILocalVariable(name: "id", arg: 1, scope: !7308, file: !3, line: 2702, type: !1343)
!7312 = !DILocation(line: 2702, column: 48, scope: !7308)
!7313 = !DILocalVariable(name: "pool", scope: !7308, file: !3, line: 2704, type: !1352)
!7314 = !DILocation(line: 2704, column: 17, scope: !7308)
!7315 = !DILocation(line: 2707, column: 7, scope: !7316)
!7316 = distinct !DILexicalBlock(scope: !7308, file: !3, line: 2707, column: 6)
!7317 = !DILocation(line: 2707, column: 6, scope: !7308)
!7318 = !DILocation(line: 2708, column: 3, scope: !7316)
!7319 = !DILocation(line: 2710, column: 9, scope: !7308)
!7320 = !DILocation(line: 2710, column: 7, scope: !7308)
!7321 = !DILocation(line: 2713, column: 6, scope: !7322)
!7322 = distinct !DILexicalBlock(scope: !7308, file: !3, line: 2713, column: 6)
!7323 = !DILocation(line: 2713, column: 6, scope: !7308)
!7324 = !DILocation(line: 2714, column: 3, scope: !7325)
!7325 = distinct !DILexicalBlock(scope: !7322, file: !3, line: 2713, column: 28)
!7326 = !DILocation(line: 2716, column: 7, scope: !7327)
!7327 = distinct !DILexicalBlock(scope: !7325, file: !3, line: 2716, column: 7)
!7328 = !DILocation(line: 2716, column: 13, scope: !7327)
!7329 = !DILocation(line: 2716, column: 27, scope: !7327)
!7330 = !DILocation(line: 2716, column: 7, scope: !7325)
!7331 = !DILocation(line: 2717, column: 4, scope: !7332)
!7332 = distinct !DILexicalBlock(scope: !7327, file: !3, line: 2716, column: 32)
!7333 = !DILocation(line: 2717, column: 23, scope: !7332)
!7334 = !DILocation(line: 2717, column: 29, scope: !7332)
!7335 = !DILocation(line: 2717, column: 44, scope: !7332)
!7336 = !DILocation(line: 2717, column: 50, scope: !7332)
!7337 = !DILocation(line: 2718, column: 4, scope: !7332)
!7338 = !DILocation(line: 2718, column: 10, scope: !7332)
!7339 = !DILocation(line: 2718, column: 24, scope: !7332)
!7340 = !DILocation(line: 2719, column: 3, scope: !7332)
!7341 = !DILocation(line: 2720, column: 3, scope: !7325)
!7342 = !DILocation(line: 2724, column: 6, scope: !7343)
!7343 = distinct !DILexicalBlock(scope: !7308, file: !3, line: 2724, column: 6)
!7344 = !DILocation(line: 2724, column: 12, scope: !7343)
!7345 = !DILocation(line: 2724, column: 27, scope: !7343)
!7346 = !DILocation(line: 2724, column: 33, scope: !7343)
!7347 = !DILocation(line: 2724, column: 24, scope: !7343)
!7348 = !DILocation(line: 2724, column: 6, scope: !7308)
!7349 = !DILocation(line: 2725, column: 3, scope: !7350)
!7350 = distinct !DILexicalBlock(scope: !7343, file: !3, line: 2724, column: 48)
!7351 = !DILocation(line: 2725, column: 9, scope: !7350)
!7352 = !DILocation(line: 2725, column: 21, scope: !7350)
!7353 = !DILocation(line: 2726, column: 22, scope: !7350)
!7354 = !DILocation(line: 2726, column: 3, scope: !7350)
!7355 = !DILocation(line: 2726, column: 9, scope: !7350)
!7356 = !DILocation(line: 2726, column: 20, scope: !7350)
!7357 = !DILocation(line: 2728, column: 2, scope: !7350)
!7358 = !DILocation(line: 2731, column: 44, scope: !7308)
!7359 = !DILocation(line: 2731, column: 2, scope: !7308)
!7360 = !DILocation(line: 2731, column: 8, scope: !7308)
!7361 = !DILocation(line: 2731, column: 19, scope: !7308)
!7362 = !DILocation(line: 2731, column: 25, scope: !7308)
!7363 = !DILocation(line: 2731, column: 38, scope: !7308)
!7364 = !DILocation(line: 2731, column: 42, scope: !7308)
!7365 = !DILocation(line: 2732, column: 1, scope: !7308)
!7366 = distinct !DISubprogram(name: "GPU_draw_pbvh_BB", scope: !3, file: !3, line: 2749, type: !7367, scopeLine: 2750, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1345)
!7367 = !DISubroutineType(types: !7368)
!7368 = !{null, !175, !175, !166}
!7369 = !DILocalVariable(name: "min", arg: 1, scope: !7366, file: !3, line: 2749, type: !175)
!7370 = !DILocation(line: 2749, column: 29, scope: !7366)
!7371 = !DILocalVariable(name: "max", arg: 2, scope: !7366, file: !3, line: 2749, type: !175)
!7372 = !DILocation(line: 2749, column: 43, scope: !7366)
!7373 = !DILocalVariable(name: "leaf", arg: 3, scope: !7366, file: !3, line: 2749, type: !166)
!7374 = !DILocation(line: 2749, column: 56, scope: !7366)
!7375 = !DILocalVariable(name: "quads", scope: !7366, file: !3, line: 2751, type: !7376)
!7376 = !DICompositeType(tag: DW_TAG_array_type, baseType: !176, size: 1536, elements: !7377)
!7377 = !{!510, !510, !428}
!7378 = !DILocation(line: 2751, column: 8, scope: !7366)
!7379 = !DILocation(line: 2751, column: 25, scope: !7366)
!7380 = !DILocation(line: 2752, column: 6, scope: !7366)
!7381 = !DILocation(line: 2753, column: 10, scope: !7366)
!7382 = !DILocation(line: 2753, column: 11, scope: !7366)
!7383 = !DILocation(line: 2753, column: 19, scope: !7366)
!7384 = !DILocation(line: 2753, column: 27, scope: !7366)
!7385 = !DILocation(line: 2754, column: 10, scope: !7366)
!7386 = !DILocation(line: 2754, column: 11, scope: !7366)
!7387 = !DILocation(line: 2754, column: 19, scope: !7366)
!7388 = !DILocation(line: 2754, column: 27, scope: !7366)
!7389 = !DILocation(line: 2755, column: 10, scope: !7366)
!7390 = !DILocation(line: 2755, column: 11, scope: !7366)
!7391 = !DILocation(line: 2755, column: 19, scope: !7366)
!7392 = !DILocation(line: 2755, column: 27, scope: !7366)
!7393 = !DILocation(line: 2756, column: 10, scope: !7366)
!7394 = !DILocation(line: 2756, column: 11, scope: !7366)
!7395 = !DILocation(line: 2756, column: 19, scope: !7366)
!7396 = !DILocation(line: 2756, column: 27, scope: !7366)
!7397 = !DILocation(line: 2759, column: 6, scope: !7366)
!7398 = !DILocation(line: 2760, column: 10, scope: !7366)
!7399 = !DILocation(line: 2760, column: 11, scope: !7366)
!7400 = !DILocation(line: 2760, column: 19, scope: !7366)
!7401 = !DILocation(line: 2760, column: 27, scope: !7366)
!7402 = !DILocation(line: 2761, column: 10, scope: !7366)
!7403 = !DILocation(line: 2761, column: 11, scope: !7366)
!7404 = !DILocation(line: 2761, column: 19, scope: !7366)
!7405 = !DILocation(line: 2761, column: 27, scope: !7366)
!7406 = !DILocation(line: 2762, column: 10, scope: !7366)
!7407 = !DILocation(line: 2762, column: 11, scope: !7366)
!7408 = !DILocation(line: 2762, column: 19, scope: !7366)
!7409 = !DILocation(line: 2762, column: 27, scope: !7366)
!7410 = !DILocation(line: 2763, column: 10, scope: !7366)
!7411 = !DILocation(line: 2763, column: 11, scope: !7366)
!7412 = !DILocation(line: 2763, column: 19, scope: !7366)
!7413 = !DILocation(line: 2763, column: 27, scope: !7366)
!7414 = !DILocation(line: 2766, column: 6, scope: !7366)
!7415 = !DILocation(line: 2767, column: 10, scope: !7366)
!7416 = !DILocation(line: 2767, column: 11, scope: !7366)
!7417 = !DILocation(line: 2767, column: 19, scope: !7366)
!7418 = !DILocation(line: 2767, column: 27, scope: !7366)
!7419 = !DILocation(line: 2768, column: 10, scope: !7366)
!7420 = !DILocation(line: 2768, column: 11, scope: !7366)
!7421 = !DILocation(line: 2768, column: 19, scope: !7366)
!7422 = !DILocation(line: 2768, column: 27, scope: !7366)
!7423 = !DILocation(line: 2769, column: 10, scope: !7366)
!7424 = !DILocation(line: 2769, column: 11, scope: !7366)
!7425 = !DILocation(line: 2769, column: 19, scope: !7366)
!7426 = !DILocation(line: 2769, column: 27, scope: !7366)
!7427 = !DILocation(line: 2770, column: 10, scope: !7366)
!7428 = !DILocation(line: 2770, column: 11, scope: !7366)
!7429 = !DILocation(line: 2770, column: 19, scope: !7366)
!7430 = !DILocation(line: 2770, column: 27, scope: !7366)
!7431 = !DILocation(line: 2773, column: 6, scope: !7366)
!7432 = !DILocation(line: 2774, column: 10, scope: !7366)
!7433 = !DILocation(line: 2774, column: 11, scope: !7366)
!7434 = !DILocation(line: 2774, column: 19, scope: !7366)
!7435 = !DILocation(line: 2774, column: 27, scope: !7366)
!7436 = !DILocation(line: 2775, column: 10, scope: !7366)
!7437 = !DILocation(line: 2775, column: 11, scope: !7366)
!7438 = !DILocation(line: 2775, column: 19, scope: !7366)
!7439 = !DILocation(line: 2775, column: 27, scope: !7366)
!7440 = !DILocation(line: 2776, column: 10, scope: !7366)
!7441 = !DILocation(line: 2776, column: 11, scope: !7366)
!7442 = !DILocation(line: 2776, column: 19, scope: !7366)
!7443 = !DILocation(line: 2776, column: 27, scope: !7366)
!7444 = !DILocation(line: 2777, column: 10, scope: !7366)
!7445 = !DILocation(line: 2777, column: 11, scope: !7366)
!7446 = !DILocation(line: 2777, column: 19, scope: !7366)
!7447 = !DILocation(line: 2777, column: 27, scope: !7366)
!7448 = !DILocation(line: 2781, column: 6, scope: !7449)
!7449 = distinct !DILexicalBlock(scope: !7366, file: !3, line: 2781, column: 6)
!7450 = !DILocation(line: 2781, column: 6, scope: !7366)
!7451 = !DILocation(line: 2782, column: 3, scope: !7449)
!7452 = !DILocation(line: 2784, column: 3, scope: !7449)
!7453 = !DILocation(line: 2786, column: 35, scope: !7366)
!7454 = !DILocation(line: 2786, column: 34, scope: !7366)
!7455 = !DILocation(line: 2786, column: 2, scope: !7366)
!7456 = !DILocation(line: 2787, column: 2, scope: !7366)
!7457 = !DILocation(line: 2788, column: 1, scope: !7366)
!7458 = distinct !DISubprogram(name: "GPU_init_draw_pbvh_BB", scope: !3, file: !3, line: 2790, type: !1369, scopeLine: 2791, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1345)
!7459 = !DILocation(line: 2792, column: 2, scope: !7458)
!7460 = !DILocation(line: 2793, column: 2, scope: !7458)
!7461 = !DILocation(line: 2794, column: 2, scope: !7458)
!7462 = !DILocation(line: 2795, column: 2, scope: !7458)
!7463 = !DILocation(line: 2796, column: 2, scope: !7458)
!7464 = !DILocation(line: 2797, column: 2, scope: !7458)
!7465 = !DILocation(line: 2798, column: 2, scope: !7458)
!7466 = !DILocation(line: 2799, column: 2, scope: !7458)
!7467 = !DILocation(line: 2800, column: 2, scope: !7458)
!7468 = !DILocation(line: 2801, column: 1, scope: !7458)
!7469 = distinct !DISubprogram(name: "GPU_end_draw_pbvh_BB", scope: !3, file: !3, line: 2803, type: !1369, scopeLine: 2804, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1345)
!7470 = !DILocation(line: 2805, column: 2, scope: !7469)
!7471 = !DILocation(line: 2806, column: 2, scope: !7469)
!7472 = !DILocation(line: 2807, column: 1, scope: !7469)
!7473 = distinct !DISubprogram(name: "gpu_buffer_pool_delete_last", scope: !3, file: !3, line: 149, type: !1376, scopeLine: 150, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1345)
!7474 = !DILocalVariable(name: "pool", arg: 1, scope: !7473, file: !3, line: 149, type: !1352)
!7475 = !DILocation(line: 149, column: 56, scope: !7473)
!7476 = !DILocalVariable(name: "last", scope: !7473, file: !3, line: 151, type: !283)
!7477 = !DILocation(line: 151, column: 13, scope: !7473)
!7478 = !DILocation(line: 153, column: 6, scope: !7479)
!7479 = distinct !DILexicalBlock(scope: !7473, file: !3, line: 153, column: 6)
!7480 = !DILocation(line: 153, column: 12, scope: !7479)
!7481 = !DILocation(line: 153, column: 19, scope: !7479)
!7482 = !DILocation(line: 153, column: 6, scope: !7473)
!7483 = !DILocation(line: 154, column: 3, scope: !7479)
!7484 = !DILocation(line: 157, column: 15, scope: !7485)
!7485 = distinct !DILexicalBlock(scope: !7473, file: !3, line: 157, column: 6)
!7486 = !DILocation(line: 157, column: 21, scope: !7485)
!7487 = !DILocation(line: 157, column: 29, scope: !7485)
!7488 = !DILocation(line: 157, column: 35, scope: !7485)
!7489 = !DILocation(line: 157, column: 42, scope: !7485)
!7490 = !DILocation(line: 157, column: 13, scope: !7485)
!7491 = !DILocation(line: 157, column: 6, scope: !7473)
!7492 = !DILocation(line: 158, column: 3, scope: !7485)
!7493 = !DILocation(line: 161, column: 6, scope: !7494)
!7494 = distinct !DILexicalBlock(scope: !7473, file: !3, line: 161, column: 6)
!7495 = !DILocation(line: 161, column: 6, scope: !7473)
!7496 = !DILocation(line: 162, column: 3, scope: !7494)
!7497 = !DILocation(line: 162, column: 26, scope: !7494)
!7498 = !DILocation(line: 162, column: 32, scope: !7494)
!7499 = !DILocation(line: 164, column: 3, scope: !7494)
!7500 = !DILocation(line: 164, column: 13, scope: !7494)
!7501 = !DILocation(line: 164, column: 19, scope: !7494)
!7502 = !DILocation(line: 167, column: 2, scope: !7473)
!7503 = !DILocation(line: 167, column: 12, scope: !7473)
!7504 = !DILocation(line: 168, column: 2, scope: !7473)
!7505 = !DILocation(line: 168, column: 8, scope: !7473)
!7506 = !DILocation(line: 168, column: 14, scope: !7473)
!7507 = !DILocation(line: 169, column: 2, scope: !7473)
!7508 = !DILocation(line: 169, column: 8, scope: !7473)
!7509 = !DILocation(line: 169, column: 16, scope: !7473)
!7510 = !DILocation(line: 169, column: 22, scope: !7473)
!7511 = !DILocation(line: 169, column: 30, scope: !7473)
!7512 = !DILocation(line: 170, column: 1, scope: !7473)
!7513 = distinct !DISubprogram(name: "gpu_get_global_buffer_pool", scope: !3, file: !3, line: 204, type: !7514, scopeLine: 205, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1345)
!7514 = !DISubroutineType(types: !7515)
!7515 = !{!1352}
!7516 = !DILocation(line: 207, column: 7, scope: !7517)
!7517 = distinct !DILexicalBlock(scope: !7513, file: !3, line: 207, column: 6)
!7518 = !DILocation(line: 207, column: 6, scope: !7513)
!7519 = !DILocation(line: 208, column: 21, scope: !7517)
!7520 = !DILocation(line: 208, column: 19, scope: !7517)
!7521 = !DILocation(line: 208, column: 3, scope: !7517)
!7522 = !DILocation(line: 210, column: 9, scope: !7513)
!7523 = !DILocation(line: 210, column: 2, scope: !7513)
!7524 = distinct !DISubprogram(name: "gpu_buffer_pool_remove_index", scope: !3, file: !3, line: 130, type: !7525, scopeLine: 131, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1345)
!7525 = !DISubroutineType(types: !7526)
!7526 = !{null, !1352, !171}
!7527 = !DILocalVariable(name: "pool", arg: 1, scope: !7524, file: !3, line: 130, type: !1352)
!7528 = !DILocation(line: 130, column: 57, scope: !7524)
!7529 = !DILocalVariable(name: "index", arg: 2, scope: !7524, file: !3, line: 130, type: !171)
!7530 = !DILocation(line: 130, column: 67, scope: !7524)
!7531 = !DILocalVariable(name: "i", scope: !7524, file: !3, line: 132, type: !171)
!7532 = !DILocation(line: 132, column: 6, scope: !7524)
!7533 = !DILocation(line: 134, column: 7, scope: !7534)
!7534 = distinct !DILexicalBlock(scope: !7524, file: !3, line: 134, column: 6)
!7535 = !DILocation(line: 134, column: 12, scope: !7534)
!7536 = !DILocation(line: 134, column: 15, scope: !7534)
!7537 = !DILocation(line: 134, column: 21, scope: !7534)
!7538 = !DILocation(line: 134, column: 25, scope: !7534)
!7539 = !DILocation(line: 134, column: 28, scope: !7534)
!7540 = !DILocation(line: 134, column: 37, scope: !7534)
!7541 = !DILocation(line: 134, column: 43, scope: !7534)
!7542 = !DILocation(line: 134, column: 34, scope: !7534)
!7543 = !DILocation(line: 134, column: 6, scope: !7524)
!7544 = !DILocation(line: 135, column: 3, scope: !7534)
!7545 = !DILocation(line: 138, column: 11, scope: !7546)
!7546 = distinct !DILexicalBlock(scope: !7524, file: !3, line: 138, column: 2)
!7547 = !DILocation(line: 138, column: 9, scope: !7546)
!7548 = !DILocation(line: 138, column: 7, scope: !7546)
!7549 = !DILocation(line: 138, column: 18, scope: !7550)
!7550 = distinct !DILexicalBlock(scope: !7546, file: !3, line: 138, column: 2)
!7551 = !DILocation(line: 138, column: 22, scope: !7550)
!7552 = !DILocation(line: 138, column: 28, scope: !7550)
!7553 = !DILocation(line: 138, column: 35, scope: !7550)
!7554 = !DILocation(line: 138, column: 20, scope: !7550)
!7555 = !DILocation(line: 138, column: 2, scope: !7546)
!7556 = !DILocation(line: 139, column: 22, scope: !7550)
!7557 = !DILocation(line: 139, column: 28, scope: !7550)
!7558 = !DILocation(line: 139, column: 36, scope: !7550)
!7559 = !DILocation(line: 139, column: 38, scope: !7550)
!7560 = !DILocation(line: 139, column: 3, scope: !7550)
!7561 = !DILocation(line: 139, column: 9, scope: !7550)
!7562 = !DILocation(line: 139, column: 17, scope: !7550)
!7563 = !DILocation(line: 139, column: 20, scope: !7550)
!7564 = !DILocation(line: 138, column: 41, scope: !7550)
!7565 = !DILocation(line: 138, column: 2, scope: !7550)
!7566 = distinct !{!7566, !7555, !7567}
!7567 = !DILocation(line: 139, column: 41, scope: !7546)
!7568 = !DILocation(line: 142, column: 6, scope: !7569)
!7569 = distinct !DILexicalBlock(scope: !7524, file: !3, line: 142, column: 6)
!7570 = !DILocation(line: 142, column: 12, scope: !7569)
!7571 = !DILocation(line: 142, column: 19, scope: !7569)
!7572 = !DILocation(line: 142, column: 6, scope: !7524)
!7573 = !DILocation(line: 143, column: 3, scope: !7569)
!7574 = !DILocation(line: 143, column: 9, scope: !7569)
!7575 = !DILocation(line: 143, column: 17, scope: !7569)
!7576 = !DILocation(line: 143, column: 23, scope: !7569)
!7577 = !DILocation(line: 143, column: 30, scope: !7569)
!7578 = !DILocation(line: 143, column: 35, scope: !7569)
!7579 = !DILocation(line: 145, column: 2, scope: !7524)
!7580 = !DILocation(line: 145, column: 8, scope: !7524)
!7581 = !DILocation(line: 145, column: 14, scope: !7524)
!7582 = !DILocation(line: 146, column: 1, scope: !7524)
!7583 = distinct !DISubprogram(name: "gpu_buffer_pool_new", scope: !3, file: !3, line: 110, type: !7514, scopeLine: 111, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1345)
!7584 = !DILocalVariable(name: "pool", scope: !7583, file: !3, line: 112, type: !1352)
!7585 = !DILocation(line: 112, column: 17, scope: !7583)
!7586 = !DILocation(line: 115, column: 6, scope: !7587)
!7587 = distinct !DILexicalBlock(scope: !7583, file: !3, line: 115, column: 6)
!7588 = !DILocation(line: 115, column: 14, scope: !7587)
!7589 = !DILocation(line: 115, column: 6, scope: !7583)
!7590 = !DILocation(line: 116, column: 14, scope: !7587)
!7591 = !DILocation(line: 116, column: 11, scope: !7587)
!7592 = !DILocation(line: 116, column: 3, scope: !7587)
!7593 = !DILocation(line: 118, column: 9, scope: !7583)
!7594 = !DILocation(line: 118, column: 7, scope: !7583)
!7595 = !DILocation(line: 120, column: 2, scope: !7583)
!7596 = !DILocation(line: 120, column: 8, scope: !7583)
!7597 = !DILocation(line: 120, column: 16, scope: !7583)
!7598 = !DILocation(line: 121, column: 2, scope: !7583)
!7599 = !DILocation(line: 121, column: 8, scope: !7583)
!7600 = !DILocation(line: 121, column: 20, scope: !7583)
!7601 = !DILocation(line: 122, column: 18, scope: !7583)
!7602 = !DILocation(line: 122, column: 55, scope: !7583)
!7603 = !DILocation(line: 122, column: 61, scope: !7583)
!7604 = !DILocation(line: 122, column: 53, scope: !7583)
!7605 = !DILocation(line: 122, column: 2, scope: !7583)
!7606 = !DILocation(line: 122, column: 8, scope: !7583)
!7607 = !DILocation(line: 122, column: 16, scope: !7583)
!7608 = !DILocation(line: 124, column: 21, scope: !7583)
!7609 = !DILocation(line: 124, column: 61, scope: !7583)
!7610 = !DILocation(line: 124, column: 67, scope: !7583)
!7611 = !DILocation(line: 124, column: 59, scope: !7583)
!7612 = !DILocation(line: 124, column: 2, scope: !7583)
!7613 = !DILocation(line: 124, column: 8, scope: !7583)
!7614 = !DILocation(line: 124, column: 19, scope: !7583)
!7615 = !DILocation(line: 126, column: 9, scope: !7583)
!7616 = !DILocation(line: 126, column: 2, scope: !7583)
!7617 = distinct !DISubprogram(name: "gpu_drawobject_add_triangle", scope: !3, file: !3, line: 434, type: !7618, scopeLine: 438, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1345)
!7618 = !DISubroutineType(types: !7619)
!7619 = !{null, !1683, !171, !171, !171, !171, !171}
!7620 = !DILocalVariable(name: "gdo", arg: 1, scope: !7617, file: !3, line: 434, type: !1683)
!7621 = !DILocation(line: 434, column: 56, scope: !7617)
!7622 = !DILocalVariable(name: "base_point_index", arg: 2, scope: !7617, file: !3, line: 435, type: !171)
!7623 = !DILocation(line: 435, column: 45, scope: !7617)
!7624 = !DILocalVariable(name: "face_index", arg: 3, scope: !7617, file: !3, line: 436, type: !171)
!7625 = !DILocation(line: 436, column: 45, scope: !7617)
!7626 = !DILocalVariable(name: "v1", arg: 4, scope: !7617, file: !3, line: 437, type: !171)
!7627 = !DILocation(line: 437, column: 45, scope: !7617)
!7628 = !DILocalVariable(name: "v2", arg: 5, scope: !7617, file: !3, line: 437, type: !171)
!7629 = !DILocation(line: 437, column: 53, scope: !7617)
!7630 = !DILocalVariable(name: "v3", arg: 6, scope: !7617, file: !3, line: 437, type: !171)
!7631 = !DILocation(line: 437, column: 61, scope: !7617)
!7632 = !DILocalVariable(name: "i", scope: !7617, file: !3, line: 439, type: !171)
!7633 = !DILocation(line: 439, column: 6, scope: !7617)
!7634 = !DILocalVariable(name: "v", scope: !7617, file: !3, line: 439, type: !841)
!7635 = !DILocation(line: 439, column: 9, scope: !7617)
!7636 = !DILocation(line: 439, column: 16, scope: !7617)
!7637 = !DILocation(line: 439, column: 17, scope: !7617)
!7638 = !DILocation(line: 439, column: 21, scope: !7617)
!7639 = !DILocation(line: 439, column: 25, scope: !7617)
!7640 = !DILocation(line: 440, column: 9, scope: !7641)
!7641 = distinct !DILexicalBlock(scope: !7617, file: !3, line: 440, column: 2)
!7642 = !DILocation(line: 440, column: 7, scope: !7641)
!7643 = !DILocation(line: 440, column: 14, scope: !7644)
!7644 = distinct !DILexicalBlock(scope: !7641, file: !3, line: 440, column: 2)
!7645 = !DILocation(line: 440, column: 16, scope: !7644)
!7646 = !DILocation(line: 440, column: 2, scope: !7641)
!7647 = !DILocation(line: 441, column: 33, scope: !7644)
!7648 = !DILocation(line: 441, column: 40, scope: !7644)
!7649 = !DILocation(line: 441, column: 38, scope: !7644)
!7650 = !DILocation(line: 441, column: 44, scope: !7644)
!7651 = !DILocation(line: 441, column: 63, scope: !7644)
!7652 = !DILocation(line: 441, column: 61, scope: !7644)
!7653 = !DILocation(line: 441, column: 3, scope: !7644)
!7654 = !DILocation(line: 440, column: 22, scope: !7644)
!7655 = !DILocation(line: 440, column: 2, scope: !7644)
!7656 = distinct !{!7656, !7646, !7657}
!7657 = !DILocation(line: 441, column: 64, scope: !7641)
!7658 = !DILocation(line: 442, column: 49, scope: !7617)
!7659 = !DILocation(line: 442, column: 2, scope: !7617)
!7660 = !DILocation(line: 442, column: 7, scope: !7617)
!7661 = !DILocation(line: 442, column: 25, scope: !7617)
!7662 = !DILocation(line: 442, column: 42, scope: !7617)
!7663 = !DILocation(line: 442, column: 47, scope: !7617)
!7664 = !DILocation(line: 443, column: 1, scope: !7617)
!7665 = distinct !DISubprogram(name: "gpu_drawobject_add_vert_point", scope: !3, file: !3, line: 421, type: !7666, scopeLine: 422, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1345)
!7666 = !DISubroutineType(types: !7667)
!7667 = !{null, !1683, !171, !171}
!7668 = !DILocalVariable(name: "gdo", arg: 1, scope: !7665, file: !3, line: 421, type: !1683)
!7669 = !DILocation(line: 421, column: 58, scope: !7665)
!7670 = !DILocalVariable(name: "vert_index", arg: 2, scope: !7665, file: !3, line: 421, type: !171)
!7671 = !DILocation(line: 421, column: 67, scope: !7665)
!7672 = !DILocalVariable(name: "point_index", arg: 3, scope: !7665, file: !3, line: 421, type: !171)
!7673 = !DILocation(line: 421, column: 83, scope: !7665)
!7674 = !DILocalVariable(name: "lnk", scope: !7665, file: !3, line: 423, type: !7675)
!7675 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7676, size: 64)
!7676 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPUVertPointLink", file: !3, line: 393, baseType: !298)
!7677 = !DILocation(line: 423, column: 20, scope: !7665)
!7678 = !DILocation(line: 424, column: 9, scope: !7665)
!7679 = !DILocation(line: 424, column: 14, scope: !7665)
!7680 = !DILocation(line: 424, column: 26, scope: !7665)
!7681 = !DILocation(line: 424, column: 6, scope: !7665)
!7682 = !DILocation(line: 425, column: 6, scope: !7683)
!7683 = distinct !DILexicalBlock(scope: !7665, file: !3, line: 425, column: 6)
!7684 = !DILocation(line: 425, column: 11, scope: !7683)
!7685 = !DILocation(line: 425, column: 23, scope: !7683)
!7686 = !DILocation(line: 425, column: 6, scope: !7665)
!7687 = !DILocation(line: 426, column: 22, scope: !7688)
!7688 = distinct !DILexicalBlock(scope: !7683, file: !3, line: 425, column: 30)
!7689 = !DILocation(line: 426, column: 3, scope: !7688)
!7690 = !DILocation(line: 426, column: 8, scope: !7688)
!7691 = !DILocation(line: 426, column: 20, scope: !7688)
!7692 = !DILocation(line: 427, column: 2, scope: !7688)
!7693 = !DILocation(line: 428, column: 1, scope: !7665)
!7694 = distinct !DISubprogram(name: "normal_short_to_float_v3", scope: !4364, file: !4364, line: 835, type: !7695, scopeLine: 836, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1345)
!7695 = !DISubroutineType(types: !7696)
!7696 = !{null, !175, !1178}
!7697 = !DILocalVariable(name: "out", arg: 1, scope: !7694, file: !4364, line: 835, type: !175)
!7698 = !DILocation(line: 835, column: 45, scope: !7694)
!7699 = !DILocalVariable(name: "in", arg: 2, scope: !7694, file: !4364, line: 835, type: !1178)
!7700 = !DILocation(line: 835, column: 65, scope: !7694)
!7701 = !DILocation(line: 837, column: 11, scope: !7694)
!7702 = !DILocation(line: 837, column: 17, scope: !7694)
!7703 = !DILocation(line: 837, column: 2, scope: !7694)
!7704 = !DILocation(line: 837, column: 9, scope: !7694)
!7705 = !DILocation(line: 838, column: 11, scope: !7694)
!7706 = !DILocation(line: 838, column: 17, scope: !7694)
!7707 = !DILocation(line: 838, column: 2, scope: !7694)
!7708 = !DILocation(line: 838, column: 9, scope: !7694)
!7709 = !DILocation(line: 839, column: 11, scope: !7694)
!7710 = !DILocation(line: 839, column: 17, scope: !7694)
!7711 = !DILocation(line: 839, column: 2, scope: !7694)
!7712 = !DILocation(line: 839, column: 9, scope: !7694)
!7713 = !DILocation(line: 840, column: 1, scope: !7694)
!7714 = distinct !DISubprogram(name: "copy_mcol_uc3", scope: !3, file: !3, line: 899, type: !7715, scopeLine: 900, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1345)
!7715 = !DISubroutineType(types: !7716)
!7716 = !{null, !177, !177}
!7717 = !DILocalVariable(name: "v", arg: 1, scope: !7714, file: !3, line: 899, type: !177)
!7718 = !DILocation(line: 899, column: 42, scope: !7714)
!7719 = !DILocalVariable(name: "col", arg: 2, scope: !7714, file: !3, line: 899, type: !177)
!7720 = !DILocation(line: 899, column: 60, scope: !7714)
!7721 = !DILocation(line: 901, column: 9, scope: !7714)
!7722 = !DILocation(line: 901, column: 2, scope: !7714)
!7723 = !DILocation(line: 901, column: 7, scope: !7714)
!7724 = !DILocation(line: 902, column: 9, scope: !7714)
!7725 = !DILocation(line: 902, column: 2, scope: !7714)
!7726 = !DILocation(line: 902, column: 7, scope: !7714)
!7727 = !DILocation(line: 903, column: 9, scope: !7714)
!7728 = !DILocation(line: 903, column: 2, scope: !7714)
!7729 = !DILocation(line: 903, column: 7, scope: !7714)
!7730 = !DILocation(line: 904, column: 1, scope: !7714)
!7731 = distinct !DISubprogram(name: "copy_v2_v2", scope: !4364, file: !4364, line: 58, type: !4365, scopeLine: 59, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1345)
!7732 = !DILocalVariable(name: "r", arg: 1, scope: !7731, file: !4364, line: 58, type: !175)
!7733 = !DILocation(line: 58, column: 31, scope: !7731)
!7734 = !DILocalVariable(name: "a", arg: 2, scope: !7731, file: !4364, line: 58, type: !1177)
!7735 = !DILocation(line: 58, column: 49, scope: !7731)
!7736 = !DILocation(line: 60, column: 9, scope: !7731)
!7737 = !DILocation(line: 60, column: 2, scope: !7731)
!7738 = !DILocation(line: 60, column: 7, scope: !7731)
!7739 = !DILocation(line: 61, column: 9, scope: !7731)
!7740 = !DILocation(line: 61, column: 2, scope: !7731)
!7741 = !DILocation(line: 61, column: 7, scope: !7731)
!7742 = !DILocation(line: 62, column: 1, scope: !7731)
!7743 = distinct !DISubprogram(name: "gpu_buffer_setup_type", scope: !3, file: !3, line: 1061, type: !3172, scopeLine: 1062, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1345)
!7744 = !DILocalVariable(name: "dm", arg: 1, scope: !7743, file: !3, line: 1061, type: !216)
!7745 = !DILocation(line: 1061, column: 54, scope: !7743)
!7746 = !DILocalVariable(name: "type", arg: 2, scope: !7743, file: !3, line: 1061, type: !3174)
!7747 = !DILocation(line: 1061, column: 72, scope: !7743)
!7748 = !DILocalVariable(name: "ts", scope: !7743, file: !3, line: 1063, type: !7749)
!7749 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !207, size: 64)
!7750 = !DILocation(line: 1063, column: 31, scope: !7743)
!7751 = !DILocalVariable(name: "user_data", scope: !7743, file: !3, line: 1064, type: !167)
!7752 = !DILocation(line: 1064, column: 8, scope: !7743)
!7753 = !DILocalVariable(name: "buf", scope: !7743, file: !3, line: 1065, type: !283)
!7754 = !DILocation(line: 1065, column: 13, scope: !7743)
!7755 = !DILocation(line: 1067, column: 33, scope: !7743)
!7756 = !DILocation(line: 1067, column: 8, scope: !7743)
!7757 = !DILocation(line: 1067, column: 5, scope: !7743)
!7758 = !DILocation(line: 1070, column: 6, scope: !7759)
!7759 = distinct !DILexicalBlock(scope: !7743, file: !3, line: 1070, column: 6)
!7760 = !DILocation(line: 1070, column: 11, scope: !7759)
!7761 = !DILocation(line: 1070, column: 6, scope: !7743)
!7762 = !DILocation(line: 1071, column: 48, scope: !7763)
!7763 = distinct !DILexicalBlock(scope: !7764, file: !3, line: 1071, column: 7)
!7764 = distinct !DILexicalBlock(scope: !7759, file: !3, line: 1070, column: 32)
!7765 = !DILocation(line: 1071, column: 52, scope: !7763)
!7766 = !DILocation(line: 1071, column: 56, scope: !7763)
!7767 = !DILocation(line: 1071, column: 68, scope: !7763)
!7768 = !DILocation(line: 1071, column: 21, scope: !7763)
!7769 = !DILocation(line: 1071, column: 19, scope: !7763)
!7770 = !DILocation(line: 1071, column: 7, scope: !7764)
!7771 = !DILocation(line: 1072, column: 4, scope: !7763)
!7772 = !DILocation(line: 1073, column: 2, scope: !7764)
!7773 = !DILocation(line: 1074, column: 11, scope: !7774)
!7774 = distinct !DILexicalBlock(scope: !7759, file: !3, line: 1074, column: 11)
!7775 = !DILocation(line: 1074, column: 11, scope: !7759)
!7776 = !DILocation(line: 1075, column: 35, scope: !7777)
!7777 = distinct !DILexicalBlock(scope: !7778, file: !3, line: 1075, column: 7)
!7778 = distinct !DILexicalBlock(scope: !7774, file: !3, line: 1074, column: 62)
!7779 = !DILocation(line: 1075, column: 8, scope: !7777)
!7780 = !DILocation(line: 1075, column: 7, scope: !7778)
!7781 = !DILocation(line: 1076, column: 4, scope: !7777)
!7782 = !DILocation(line: 1077, column: 2, scope: !7778)
!7783 = !DILocation(line: 1079, column: 25, scope: !7743)
!7784 = !DILocation(line: 1079, column: 29, scope: !7743)
!7785 = !DILocation(line: 1079, column: 33, scope: !7743)
!7786 = !DILocation(line: 1079, column: 45, scope: !7743)
!7787 = !DILocation(line: 1079, column: 49, scope: !7743)
!7788 = !DILocation(line: 1080, column: 51, scope: !7743)
!7789 = !DILocation(line: 1080, column: 55, scope: !7743)
!7790 = !DILocation(line: 1080, column: 25, scope: !7743)
!7791 = !DILocation(line: 1081, column: 25, scope: !7743)
!7792 = !DILocation(line: 1081, column: 29, scope: !7743)
!7793 = !DILocation(line: 1081, column: 45, scope: !7743)
!7794 = !DILocation(line: 1081, column: 56, scope: !7743)
!7795 = !DILocation(line: 1081, column: 60, scope: !7743)
!7796 = !DILocation(line: 1079, column: 8, scope: !7743)
!7797 = !DILocation(line: 1079, column: 6, scope: !7743)
!7798 = !DILocation(line: 1083, column: 9, scope: !7743)
!7799 = !DILocation(line: 1083, column: 2, scope: !7743)
!7800 = !DILocation(line: 1084, column: 1, scope: !7743)
!7801 = distinct !DISubprogram(name: "gpu_buffer_setup", scope: !3, file: !3, line: 591, type: !7802, scopeLine: 594, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1345)
!7802 = !DISubroutineType(types: !7803)
!7803 = !{!283, !216, !1683, !171, !171, !1314, !167, !212}
!7804 = !DILocalVariable(name: "dm", arg: 1, scope: !7801, file: !3, line: 591, type: !216)
!7805 = !DILocation(line: 591, column: 49, scope: !7801)
!7806 = !DILocalVariable(name: "object", arg: 2, scope: !7801, file: !3, line: 591, type: !1683)
!7807 = !DILocation(line: 591, column: 68, scope: !7801)
!7808 = !DILocalVariable(name: "vector_size", arg: 3, scope: !7801, file: !3, line: 592, type: !171)
!7809 = !DILocation(line: 592, column: 40, scope: !7801)
!7810 = !DILocalVariable(name: "size", arg: 4, scope: !7801, file: !3, line: 592, type: !171)
!7811 = !DILocation(line: 592, column: 57, scope: !7801)
!7812 = !DILocalVariable(name: "target", arg: 5, scope: !7801, file: !3, line: 592, type: !1314)
!7813 = !DILocation(line: 592, column: 70, scope: !7801)
!7814 = !DILocalVariable(name: "user", arg: 6, scope: !7801, file: !3, line: 593, type: !167)
!7815 = !DILocation(line: 593, column: 42, scope: !7801)
!7816 = !DILocalVariable(name: "copy_f", arg: 7, scope: !7801, file: !3, line: 593, type: !212)
!7817 = !DILocation(line: 593, column: 66, scope: !7801)
!7818 = !DILocalVariable(name: "pool", scope: !7801, file: !3, line: 595, type: !1352)
!7819 = !DILocation(line: 595, column: 17, scope: !7801)
!7820 = !DILocalVariable(name: "buffer", scope: !7801, file: !3, line: 596, type: !283)
!7821 = !DILocation(line: 596, column: 13, scope: !7801)
!7822 = !DILocalVariable(name: "varray", scope: !7801, file: !3, line: 597, type: !175)
!7823 = !DILocation(line: 597, column: 9, scope: !7801)
!7824 = !DILocalVariable(name: "mat_orig_to_new", scope: !7801, file: !3, line: 598, type: !170)
!7825 = !DILocation(line: 598, column: 7, scope: !7801)
!7826 = !DILocalVariable(name: "cur_index_per_mat", scope: !7801, file: !3, line: 599, type: !170)
!7827 = !DILocation(line: 599, column: 7, scope: !7801)
!7828 = !DILocalVariable(name: "i", scope: !7801, file: !3, line: 600, type: !171)
!7829 = !DILocation(line: 600, column: 6, scope: !7801)
!7830 = !DILocalVariable(name: "success", scope: !7801, file: !3, line: 601, type: !166)
!7831 = !DILocation(line: 601, column: 7, scope: !7801)
!7832 = !DILocalVariable(name: "uploaded", scope: !7801, file: !3, line: 602, type: !174)
!7833 = !DILocation(line: 602, column: 12, scope: !7801)
!7834 = !DILocation(line: 604, column: 9, scope: !7801)
!7835 = !DILocation(line: 604, column: 7, scope: !7801)
!7836 = !DILocation(line: 606, column: 2, scope: !7801)
!7837 = !DILocation(line: 609, column: 41, scope: !7838)
!7838 = distinct !DILexicalBlock(scope: !7801, file: !3, line: 609, column: 6)
!7839 = !DILocation(line: 609, column: 17, scope: !7838)
!7840 = !DILocation(line: 609, column: 15, scope: !7838)
!7841 = !DILocation(line: 609, column: 6, scope: !7801)
!7842 = !DILocation(line: 610, column: 3, scope: !7838)
!7843 = !DILocation(line: 610, column: 7, scope: !7838)
!7844 = !DILocation(line: 610, column: 19, scope: !7838)
!7845 = !DILocation(line: 610, column: 26, scope: !7838)
!7846 = !DILocation(line: 613, column: 6, scope: !7847)
!7847 = distinct !DILexicalBlock(scope: !7801, file: !3, line: 613, column: 6)
!7848 = !DILocation(line: 613, column: 10, scope: !7847)
!7849 = !DILocation(line: 613, column: 22, scope: !7847)
!7850 = !DILocation(line: 613, column: 6, scope: !7801)
!7851 = !DILocation(line: 614, column: 3, scope: !7852)
!7852 = distinct !DILexicalBlock(scope: !7847, file: !3, line: 613, column: 30)
!7853 = !DILocation(line: 615, column: 3, scope: !7852)
!7854 = !DILocation(line: 618, column: 20, scope: !7801)
!7855 = !DILocation(line: 618, column: 59, scope: !7801)
!7856 = !DILocation(line: 618, column: 63, scope: !7801)
!7857 = !DILocation(line: 618, column: 57, scope: !7801)
!7858 = !DILocation(line: 618, column: 18, scope: !7801)
!7859 = !DILocation(line: 620, column: 22, scope: !7801)
!7860 = !DILocation(line: 620, column: 48, scope: !7801)
!7861 = !DILocation(line: 620, column: 56, scope: !7801)
!7862 = !DILocation(line: 620, column: 46, scope: !7801)
!7863 = !DILocation(line: 620, column: 20, scope: !7801)
!7864 = !DILocation(line: 622, column: 9, scope: !7865)
!7865 = distinct !DILexicalBlock(scope: !7801, file: !3, line: 622, column: 2)
!7866 = !DILocation(line: 622, column: 7, scope: !7865)
!7867 = !DILocation(line: 622, column: 14, scope: !7868)
!7868 = distinct !DILexicalBlock(scope: !7865, file: !3, line: 622, column: 2)
!7869 = !DILocation(line: 622, column: 18, scope: !7868)
!7870 = !DILocation(line: 622, column: 26, scope: !7868)
!7871 = !DILocation(line: 622, column: 16, scope: !7868)
!7872 = !DILocation(line: 622, column: 2, scope: !7865)
!7873 = !DILocation(line: 624, column: 26, scope: !7874)
!7874 = distinct !DILexicalBlock(scope: !7868, file: !3, line: 622, column: 44)
!7875 = !DILocation(line: 624, column: 34, scope: !7874)
!7876 = !DILocation(line: 624, column: 44, scope: !7874)
!7877 = !DILocation(line: 624, column: 47, scope: !7874)
!7878 = !DILocation(line: 624, column: 55, scope: !7874)
!7879 = !DILocation(line: 624, column: 53, scope: !7874)
!7880 = !DILocation(line: 624, column: 3, scope: !7874)
!7881 = !DILocation(line: 624, column: 21, scope: !7874)
!7882 = !DILocation(line: 624, column: 24, scope: !7874)
!7883 = !DILocation(line: 628, column: 50, scope: !7874)
!7884 = !DILocation(line: 628, column: 3, scope: !7874)
!7885 = !DILocation(line: 628, column: 19, scope: !7874)
!7886 = !DILocation(line: 628, column: 27, scope: !7874)
!7887 = !DILocation(line: 628, column: 37, scope: !7874)
!7888 = !DILocation(line: 628, column: 40, scope: !7874)
!7889 = !DILocation(line: 628, column: 48, scope: !7874)
!7890 = !DILocation(line: 629, column: 2, scope: !7874)
!7891 = !DILocation(line: 622, column: 40, scope: !7868)
!7892 = !DILocation(line: 622, column: 2, scope: !7868)
!7893 = distinct !{!7893, !7872, !7894}
!7894 = !DILocation(line: 629, column: 2, scope: !7865)
!7895 = !DILocation(line: 631, column: 6, scope: !7896)
!7896 = distinct !DILexicalBlock(scope: !7801, file: !3, line: 631, column: 6)
!7897 = !DILocation(line: 631, column: 6, scope: !7801)
!7898 = !DILocation(line: 632, column: 11, scope: !7899)
!7899 = distinct !DILexicalBlock(scope: !7896, file: !3, line: 631, column: 15)
!7900 = !DILocation(line: 634, column: 3, scope: !7899)
!7901 = !DILocation(line: 634, column: 11, scope: !7899)
!7902 = !DILocation(line: 634, column: 10, scope: !7899)
!7903 = !DILocation(line: 637, column: 4, scope: !7904)
!7904 = distinct !DILexicalBlock(scope: !7899, file: !3, line: 634, column: 20)
!7905 = !DILocation(line: 637, column: 20, scope: !7904)
!7906 = !DILocation(line: 637, column: 28, scope: !7904)
!7907 = !DILocation(line: 637, column: 36, scope: !7904)
!7908 = !DILocation(line: 638, column: 4, scope: !7904)
!7909 = !DILocation(line: 638, column: 20, scope: !7904)
!7910 = !DILocation(line: 638, column: 28, scope: !7904)
!7911 = !DILocation(line: 638, column: 36, scope: !7904)
!7912 = !DILocation(line: 641, column: 19, scope: !7913)
!7913 = distinct !DILexicalBlock(scope: !7904, file: !3, line: 641, column: 8)
!7914 = !DILocation(line: 641, column: 34, scope: !7913)
!7915 = !DILocation(line: 641, column: 17, scope: !7913)
!7916 = !DILocation(line: 641, column: 8, scope: !7904)
!7917 = !DILocation(line: 643, column: 28, scope: !7918)
!7918 = distinct !DILexicalBlock(scope: !7913, file: !3, line: 641, column: 63)
!7919 = !DILocation(line: 643, column: 5, scope: !7918)
!7920 = !DILocation(line: 644, column: 33, scope: !7918)
!7921 = !DILocation(line: 644, column: 5, scope: !7918)
!7922 = !DILocation(line: 645, column: 12, scope: !7918)
!7923 = !DILocation(line: 649, column: 9, scope: !7924)
!7924 = distinct !DILexicalBlock(scope: !7918, file: !3, line: 649, column: 9)
!7925 = !DILocation(line: 649, column: 15, scope: !7924)
!7926 = !DILocation(line: 649, column: 22, scope: !7924)
!7927 = !DILocation(line: 649, column: 9, scope: !7918)
!7928 = !DILocation(line: 650, column: 34, scope: !7929)
!7929 = distinct !DILexicalBlock(scope: !7924, file: !3, line: 649, column: 27)
!7930 = !DILocation(line: 650, column: 6, scope: !7929)
!7931 = !DILocation(line: 651, column: 39, scope: !7929)
!7932 = !DILocation(line: 651, column: 15, scope: !7929)
!7933 = !DILocation(line: 651, column: 13, scope: !7929)
!7934 = !DILocation(line: 652, column: 5, scope: !7929)
!7935 = !DILocation(line: 656, column: 10, scope: !7936)
!7936 = distinct !DILexicalBlock(scope: !7918, file: !3, line: 656, column: 9)
!7937 = !DILocation(line: 656, column: 9, scope: !7918)
!7938 = !DILocation(line: 657, column: 6, scope: !7939)
!7939 = distinct !DILexicalBlock(scope: !7936, file: !3, line: 656, column: 18)
!7940 = !DILocation(line: 657, column: 10, scope: !7939)
!7941 = !DILocation(line: 657, column: 22, scope: !7939)
!7942 = !DILocation(line: 657, column: 29, scope: !7939)
!7943 = !DILocation(line: 658, column: 14, scope: !7939)
!7944 = !DILocation(line: 659, column: 5, scope: !7939)
!7945 = !DILocation(line: 660, column: 4, scope: !7918)
!7946 = !DILocation(line: 662, column: 13, scope: !7947)
!7947 = distinct !DILexicalBlock(scope: !7913, file: !3, line: 661, column: 9)
!7948 = distinct !{!7948, !7900, !7949}
!7949 = !DILocation(line: 664, column: 3, scope: !7899)
!7950 = !DILocation(line: 667, column: 7, scope: !7951)
!7951 = distinct !DILexicalBlock(scope: !7899, file: !3, line: 667, column: 7)
!7952 = !DILocation(line: 667, column: 11, scope: !7951)
!7953 = !DILocation(line: 667, column: 23, scope: !7951)
!7954 = !DILocation(line: 667, column: 30, scope: !7951)
!7955 = !DILocation(line: 667, column: 7, scope: !7899)
!7956 = !DILocation(line: 668, column: 13, scope: !7957)
!7957 = distinct !DILexicalBlock(scope: !7951, file: !3, line: 667, column: 36)
!7958 = !DILocation(line: 670, column: 4, scope: !7957)
!7959 = !DILocation(line: 670, column: 11, scope: !7957)
!7960 = !DILocation(line: 670, column: 20, scope: !7957)
!7961 = !DILocation(line: 671, column: 7, scope: !7962)
!7962 = distinct !DILexicalBlock(scope: !7957, file: !3, line: 670, column: 33)
!7963 = !DILocation(line: 671, column: 15, scope: !7962)
!7964 = !DILocation(line: 671, column: 19, scope: !7962)
!7965 = !DILocation(line: 671, column: 27, scope: !7962)
!7966 = !DILocation(line: 671, column: 46, scope: !7962)
!7967 = !DILocation(line: 671, column: 63, scope: !7962)
!7968 = !DILocation(line: 671, column: 5, scope: !7962)
!7969 = !DILocation(line: 675, column: 16, scope: !7962)
!7970 = !DILocation(line: 675, column: 33, scope: !7962)
!7971 = !DILocation(line: 675, column: 14, scope: !7962)
!7972 = distinct !{!7972, !7958, !7973}
!7973 = !DILocation(line: 676, column: 4, scope: !7957)
!7974 = !DILocation(line: 677, column: 3, scope: !7957)
!7975 = !DILocation(line: 678, column: 3, scope: !7899)
!7976 = !DILocation(line: 678, column: 19, scope: !7899)
!7977 = !DILocation(line: 679, column: 2, scope: !7899)
!7978 = !DILocation(line: 682, column: 7, scope: !7979)
!7979 = distinct !DILexicalBlock(scope: !7980, file: !3, line: 682, column: 7)
!7980 = distinct !DILexicalBlock(scope: !7896, file: !3, line: 680, column: 7)
!7981 = !DILocation(line: 682, column: 15, scope: !7979)
!7982 = !DILocation(line: 682, column: 7, scope: !7980)
!7983 = !DILocation(line: 683, column: 13, scope: !7984)
!7984 = distinct !DILexicalBlock(scope: !7979, file: !3, line: 682, column: 24)
!7985 = !DILocation(line: 683, column: 21, scope: !7984)
!7986 = !DILocation(line: 683, column: 11, scope: !7984)
!7987 = !DILocation(line: 684, column: 6, scope: !7984)
!7988 = !DILocation(line: 684, column: 14, scope: !7984)
!7989 = !DILocation(line: 684, column: 18, scope: !7984)
!7990 = !DILocation(line: 684, column: 26, scope: !7984)
!7991 = !DILocation(line: 684, column: 45, scope: !7984)
!7992 = !DILocation(line: 684, column: 62, scope: !7984)
!7993 = !DILocation(line: 684, column: 4, scope: !7984)
!7994 = !DILocation(line: 685, column: 3, scope: !7984)
!7995 = !DILocation(line: 687, column: 4, scope: !7996)
!7996 = distinct !DILexicalBlock(scope: !7979, file: !3, line: 686, column: 8)
!7997 = !DILocation(line: 687, column: 8, scope: !7996)
!7998 = !DILocation(line: 687, column: 20, scope: !7996)
!7999 = !DILocation(line: 687, column: 27, scope: !7996)
!8000 = !DILocation(line: 691, column: 2, scope: !7801)
!8001 = !DILocation(line: 691, column: 12, scope: !7801)
!8002 = !DILocation(line: 692, column: 2, scope: !7801)
!8003 = !DILocation(line: 692, column: 12, scope: !7801)
!8004 = !DILocation(line: 694, column: 2, scope: !7801)
!8005 = !DILocation(line: 696, column: 9, scope: !7801)
!8006 = !DILocation(line: 696, column: 2, scope: !7801)
!8007 = !DILocation(line: 697, column: 1, scope: !7801)
!8008 = distinct !DISubprogram(name: "gpu_buffer_size_from_type", scope: !3, file: !3, line: 1033, type: !8009, scopeLine: 1034, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1345)
!8009 = !DISubroutineType(types: !8010)
!8010 = !{!171, !216, !3174}
!8011 = !DILocalVariable(name: "dm", arg: 1, scope: !8008, file: !3, line: 1033, type: !216)
!8012 = !DILocation(line: 1033, column: 51, scope: !8008)
!8013 = !DILocalVariable(name: "type", arg: 2, scope: !8008, file: !3, line: 1033, type: !3174)
!8014 = !DILocation(line: 1033, column: 69, scope: !8008)
!8015 = !DILocation(line: 1035, column: 10, scope: !8008)
!8016 = !DILocation(line: 1035, column: 2, scope: !8008)
!8017 = !DILocation(line: 1037, column: 32, scope: !8018)
!8018 = distinct !DILexicalBlock(scope: !8008, file: !3, line: 1035, column: 16)
!8019 = !DILocation(line: 1037, column: 36, scope: !8018)
!8020 = !DILocation(line: 1037, column: 48, scope: !8018)
!8021 = !DILocation(line: 1037, column: 69, scope: !8018)
!8022 = !DILocation(line: 1037, column: 73, scope: !8018)
!8023 = !DILocation(line: 1037, column: 85, scope: !8018)
!8024 = !DILocation(line: 1037, column: 67, scope: !8018)
!8025 = !DILocation(line: 1037, column: 31, scope: !8018)
!8026 = !DILocation(line: 1037, column: 29, scope: !8018)
!8027 = !DILocation(line: 1037, column: 11, scope: !8018)
!8028 = !DILocation(line: 1037, column: 4, scope: !8018)
!8029 = !DILocation(line: 1039, column: 31, scope: !8018)
!8030 = !DILocation(line: 1039, column: 35, scope: !8018)
!8031 = !DILocation(line: 1039, column: 47, scope: !8018)
!8032 = !DILocation(line: 1039, column: 29, scope: !8018)
!8033 = !DILocation(line: 1039, column: 11, scope: !8018)
!8034 = !DILocation(line: 1039, column: 4, scope: !8018)
!8035 = !DILocation(line: 1041, column: 30, scope: !8018)
!8036 = !DILocation(line: 1041, column: 34, scope: !8018)
!8037 = !DILocation(line: 1041, column: 46, scope: !8018)
!8038 = !DILocation(line: 1041, column: 28, scope: !8018)
!8039 = !DILocation(line: 1041, column: 11, scope: !8018)
!8040 = !DILocation(line: 1041, column: 4, scope: !8018)
!8041 = !DILocation(line: 1043, column: 31, scope: !8018)
!8042 = !DILocation(line: 1043, column: 35, scope: !8018)
!8043 = !DILocation(line: 1043, column: 47, scope: !8018)
!8044 = !DILocation(line: 1043, column: 29, scope: !8018)
!8045 = !DILocation(line: 1043, column: 11, scope: !8018)
!8046 = !DILocation(line: 1043, column: 4, scope: !8018)
!8047 = !DILocation(line: 1045, column: 31, scope: !8018)
!8048 = !DILocation(line: 1045, column: 35, scope: !8018)
!8049 = !DILocation(line: 1045, column: 47, scope: !8018)
!8050 = !DILocation(line: 1045, column: 29, scope: !8018)
!8051 = !DILocation(line: 1045, column: 11, scope: !8018)
!8052 = !DILocation(line: 1045, column: 4, scope: !8018)
!8053 = !DILocation(line: 1047, column: 29, scope: !8018)
!8054 = !DILocation(line: 1047, column: 33, scope: !8018)
!8055 = !DILocation(line: 1047, column: 45, scope: !8018)
!8056 = !DILocation(line: 1047, column: 27, scope: !8018)
!8057 = !DILocation(line: 1047, column: 11, scope: !8018)
!8058 = !DILocation(line: 1047, column: 4, scope: !8018)
!8059 = !DILocation(line: 1054, column: 31, scope: !8018)
!8060 = !DILocation(line: 1054, column: 35, scope: !8018)
!8061 = !DILocation(line: 1054, column: 47, scope: !8018)
!8062 = !DILocation(line: 1054, column: 29, scope: !8018)
!8063 = !DILocation(line: 1054, column: 11, scope: !8018)
!8064 = !DILocation(line: 1054, column: 4, scope: !8018)
!8065 = !DILocation(line: 1056, column: 4, scope: !8018)
!8066 = !DILocation(line: 1058, column: 1, scope: !8008)
!8067 = distinct !DISubprogram(name: "gpu_color_from_mask", scope: !3, file: !3, line: 1528, type: !8068, scopeLine: 1529, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1345)
!8068 = !DISubroutineType(types: !8069)
!8069 = !{!176, !176}
!8070 = !DILocalVariable(name: "mask", arg: 1, scope: !8067, file: !3, line: 1528, type: !176)
!8071 = !DILocation(line: 1528, column: 40, scope: !8067)
!8072 = !DILocation(line: 1530, column: 16, scope: !8067)
!8073 = !DILocation(line: 1530, column: 21, scope: !8067)
!8074 = !DILocation(line: 1530, column: 14, scope: !8067)
!8075 = !DILocation(line: 1530, column: 2, scope: !8067)
!8076 = distinct !DISubprogram(name: "CCG_elem_offset", scope: !182, file: !182, line: 126, type: !8077, scopeLine: 127, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1345)
!8077 = !DISubroutineType(types: !8078)
!8078 = !{!180, !4707, !180, !171}
!8079 = !DILocalVariable(name: "key", arg: 1, scope: !8076, file: !182, line: 126, type: !4707)
!8080 = !DILocation(line: 126, column: 51, scope: !8076)
!8081 = !DILocalVariable(name: "elem", arg: 2, scope: !8076, file: !182, line: 126, type: !180)
!8082 = !DILocation(line: 126, column: 65, scope: !8076)
!8083 = !DILocalVariable(name: "offset", arg: 3, scope: !8076, file: !182, line: 126, type: !171)
!8084 = !DILocation(line: 126, column: 75, scope: !8076)
!8085 = !DILocation(line: 128, column: 30, scope: !8076)
!8086 = !DILocation(line: 128, column: 22, scope: !8076)
!8087 = !DILocation(line: 128, column: 38, scope: !8076)
!8088 = !DILocation(line: 128, column: 43, scope: !8076)
!8089 = !DILocation(line: 128, column: 55, scope: !8076)
!8090 = !DILocation(line: 128, column: 53, scope: !8076)
!8091 = !DILocation(line: 128, column: 36, scope: !8076)
!8092 = !DILocation(line: 128, column: 9, scope: !8076)
!8093 = !DILocation(line: 128, column: 2, scope: !8076)
!8094 = distinct !DISubprogram(name: "BLI_ghashIterator_getKey", scope: !186, file: !186, line: 95, type: !8095, scopeLine: 95, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1345)
!8095 = !DISubroutineType(types: !8096)
!8096 = !{!167, !184}
!8097 = !DILocalVariable(name: "ghi", arg: 1, scope: !8094, file: !186, line: 95, type: !184)
!8098 = !DILocation(line: 95, column: 59, scope: !8094)
!8099 = !DILocation(line: 95, column: 99, scope: !8094)
!8100 = !DILocation(line: 95, column: 104, scope: !8094)
!8101 = !DILocation(line: 95, column: 115, scope: !8094)
!8102 = !DILocation(line: 95, column: 70, scope: !8094)
!8103 = distinct !DISubprogram(name: "BLI_ghashIterator_done", scope: !186, file: !186, line: 98, type: !8104, scopeLine: 98, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1345)
!8104 = !DISubroutineType(types: !8105)
!8105 = !{!166, !184}
!8106 = !DILocalVariable(name: "ghi", arg: 1, scope: !8103, file: !186, line: 98, type: !184)
!8107 = !DILocation(line: 98, column: 57, scope: !8103)
!8108 = !DILocation(line: 98, column: 78, scope: !8103)
!8109 = !DILocation(line: 98, column: 83, scope: !8103)
!8110 = !DILocation(line: 98, column: 77, scope: !8103)
!8111 = !DILocation(line: 98, column: 70, scope: !8103)
!8112 = distinct !DISubprogram(name: "_bm_elem_index_set", scope: !6193, file: !6193, line: 114, type: !8113, scopeLine: 115, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1345)
!8113 = !DISubroutineType(types: !8114)
!8114 = !{null, !8115, !2281}
!8115 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5547, size: 64)
!8116 = !DILocalVariable(name: "head", arg: 1, scope: !8112, file: !6193, line: 114, type: !8115)
!8117 = !DILocation(line: 114, column: 46, scope: !8112)
!8118 = !DILocalVariable(name: "index", arg: 2, scope: !8112, file: !6193, line: 114, type: !2281)
!8119 = !DILocation(line: 114, column: 62, scope: !8112)
!8120 = !DILocation(line: 116, column: 16, scope: !8112)
!8121 = !DILocation(line: 116, column: 2, scope: !8112)
!8122 = !DILocation(line: 116, column: 8, scope: !8112)
!8123 = !DILocation(line: 116, column: 14, scope: !8112)
!8124 = !DILocation(line: 117, column: 1, scope: !8112)
!8125 = distinct !DISubprogram(name: "gpu_color_from_mask_set", scope: !3, file: !3, line: 1544, type: !8126, scopeLine: 1545, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1345)
!8126 = !DISubroutineType(types: !8127)
!8127 = !{null, !176, !175}
!8128 = !DILocalVariable(name: "mask", arg: 1, scope: !8125, file: !3, line: 1544, type: !176)
!8129 = !DILocation(line: 1544, column: 43, scope: !8125)
!8130 = !DILocalVariable(name: "diffuse_color", arg: 2, scope: !8125, file: !3, line: 1544, type: !175)
!8131 = !DILocation(line: 1544, column: 55, scope: !8125)
!8132 = !DILocalVariable(name: "color", scope: !8125, file: !3, line: 1546, type: !176)
!8133 = !DILocation(line: 1546, column: 8, scope: !8125)
!8134 = !DILocation(line: 1546, column: 36, scope: !8125)
!8135 = !DILocation(line: 1546, column: 16, scope: !8125)
!8136 = !DILocation(line: 1547, column: 12, scope: !8125)
!8137 = !DILocation(line: 1547, column: 31, scope: !8125)
!8138 = !DILocation(line: 1547, column: 29, scope: !8125)
!8139 = !DILocation(line: 1547, column: 38, scope: !8125)
!8140 = !DILocation(line: 1547, column: 57, scope: !8125)
!8141 = !DILocation(line: 1547, column: 55, scope: !8125)
!8142 = !DILocation(line: 1547, column: 64, scope: !8125)
!8143 = !DILocation(line: 1547, column: 83, scope: !8125)
!8144 = !DILocation(line: 1547, column: 81, scope: !8125)
!8145 = !DILocation(line: 1547, column: 2, scope: !8125)
!8146 = !DILocation(line: 1548, column: 1, scope: !8125)
!8147 = distinct !DISubprogram(name: "gpu_color_from_mask_quad_set", scope: !3, file: !3, line: 1577, type: !8148, scopeLine: 1581, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1345)
!8148 = !DISubroutineType(types: !8149)
!8149 = !{null, !4707, !180, !180, !180, !180, !1177}
!8150 = !DILocalVariable(name: "key", arg: 1, scope: !8147, file: !3, line: 1577, type: !4707)
!8151 = !DILocation(line: 1577, column: 56, scope: !8147)
!8152 = !DILocalVariable(name: "a", arg: 2, scope: !8147, file: !3, line: 1578, type: !180)
!8153 = !DILocation(line: 1578, column: 51, scope: !8147)
!8154 = !DILocalVariable(name: "b", arg: 3, scope: !8147, file: !3, line: 1578, type: !180)
!8155 = !DILocation(line: 1578, column: 63, scope: !8147)
!8156 = !DILocalVariable(name: "c", arg: 4, scope: !8147, file: !3, line: 1579, type: !180)
!8157 = !DILocation(line: 1579, column: 51, scope: !8147)
!8158 = !DILocalVariable(name: "d", arg: 5, scope: !8147, file: !3, line: 1579, type: !180)
!8159 = !DILocation(line: 1579, column: 63, scope: !8147)
!8160 = !DILocalVariable(name: "diffuse_color", arg: 6, scope: !8147, file: !3, line: 1580, type: !1177)
!8161 = !DILocation(line: 1580, column: 54, scope: !8147)
!8162 = !DILocalVariable(name: "color", scope: !8147, file: !3, line: 1582, type: !176)
!8163 = !DILocation(line: 1582, column: 8, scope: !8147)
!8164 = !DILocation(line: 1582, column: 41, scope: !8147)
!8165 = !DILocation(line: 1582, column: 46, scope: !8147)
!8166 = !DILocation(line: 1582, column: 49, scope: !8147)
!8167 = !DILocation(line: 1582, column: 52, scope: !8147)
!8168 = !DILocation(line: 1582, column: 55, scope: !8147)
!8169 = !DILocation(line: 1582, column: 16, scope: !8147)
!8170 = !DILocation(line: 1583, column: 12, scope: !8147)
!8171 = !DILocation(line: 1583, column: 31, scope: !8147)
!8172 = !DILocation(line: 1583, column: 29, scope: !8147)
!8173 = !DILocation(line: 1583, column: 38, scope: !8147)
!8174 = !DILocation(line: 1583, column: 57, scope: !8147)
!8175 = !DILocation(line: 1583, column: 55, scope: !8147)
!8176 = !DILocation(line: 1583, column: 64, scope: !8147)
!8177 = !DILocation(line: 1583, column: 83, scope: !8147)
!8178 = !DILocation(line: 1583, column: 81, scope: !8147)
!8179 = !DILocation(line: 1583, column: 2, scope: !8147)
!8180 = !DILocation(line: 1584, column: 1, scope: !8147)
!8181 = distinct !DISubprogram(name: "gpu_color_from_mask_quad", scope: !3, file: !3, line: 1550, type: !8182, scopeLine: 1553, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1345)
!8182 = !DISubroutineType(types: !8183)
!8183 = !{!176, !4707, !180, !180, !180, !180}
!8184 = !DILocalVariable(name: "key", arg: 1, scope: !8181, file: !3, line: 1550, type: !4707)
!8185 = !DILocation(line: 1550, column: 53, scope: !8181)
!8186 = !DILocalVariable(name: "a", arg: 2, scope: !8181, file: !3, line: 1551, type: !180)
!8187 = !DILocation(line: 1551, column: 48, scope: !8181)
!8188 = !DILocalVariable(name: "b", arg: 3, scope: !8181, file: !3, line: 1551, type: !180)
!8189 = !DILocation(line: 1551, column: 60, scope: !8181)
!8190 = !DILocalVariable(name: "c", arg: 4, scope: !8181, file: !3, line: 1552, type: !180)
!8191 = !DILocation(line: 1552, column: 48, scope: !8181)
!8192 = !DILocalVariable(name: "d", arg: 5, scope: !8181, file: !3, line: 1552, type: !180)
!8193 = !DILocation(line: 1552, column: 60, scope: !8181)
!8194 = !DILocation(line: 1554, column: 45, scope: !8181)
!8195 = !DILocation(line: 1554, column: 50, scope: !8181)
!8196 = !DILocation(line: 1554, column: 31, scope: !8181)
!8197 = !DILocation(line: 1554, column: 30, scope: !8181)
!8198 = !DILocation(line: 1555, column: 45, scope: !8181)
!8199 = !DILocation(line: 1555, column: 50, scope: !8181)
!8200 = !DILocation(line: 1555, column: 31, scope: !8181)
!8201 = !DILocation(line: 1555, column: 30, scope: !8181)
!8202 = !DILocation(line: 1554, column: 53, scope: !8181)
!8203 = !DILocation(line: 1556, column: 45, scope: !8181)
!8204 = !DILocation(line: 1556, column: 50, scope: !8181)
!8205 = !DILocation(line: 1556, column: 31, scope: !8181)
!8206 = !DILocation(line: 1556, column: 30, scope: !8181)
!8207 = !DILocation(line: 1555, column: 53, scope: !8181)
!8208 = !DILocation(line: 1557, column: 45, scope: !8181)
!8209 = !DILocation(line: 1557, column: 50, scope: !8181)
!8210 = !DILocation(line: 1557, column: 31, scope: !8181)
!8211 = !DILocation(line: 1557, column: 30, scope: !8181)
!8212 = !DILocation(line: 1556, column: 53, scope: !8181)
!8213 = !DILocation(line: 1557, column: 54, scope: !8181)
!8214 = !DILocation(line: 1554, column: 9, scope: !8181)
!8215 = !DILocation(line: 1554, column: 2, scope: !8181)
